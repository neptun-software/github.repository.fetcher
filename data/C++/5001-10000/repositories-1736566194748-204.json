{
  "metadata": {
    "timestamp": 1736566194748,
    "page": 204,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openMVG/openMVG",
      "stars": 5819,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "service_name: travis-ci"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0615234375,
          "content": "# GitHub syntax highlighting\npixi.lock linguist-language=YAML\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1201171875,
          "content": "*.log\n*.aux\n*.gz\n*.toc\n*.bbl\n*.blg\n*.cbp*\n*.layout*\n*~\n*.pyc\n*.db\nbuild*\n*.out\ndocs/openmvg.pdf\n# Pixi related\nbuild\n.pixi\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3583984375,
          "content": "[submodule \"src/dependencies/glfw\"]\n\tpath = src/dependencies/glfw\n\turl = https://github.com/elmindreda/glfw.git\n[submodule \"src/dependencies/osi_clp\"]\n\tpath = src/dependencies/osi_clp\n\turl = https://github.com/openMVG-thirdparty/osi_clp.git\n[submodule \"src/dependencies/cereal\"]\n\tpath = src/dependencies/cereal\n\turl = https://github.com/openMVG-thirdparty/cereal.git\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.1103515625,
          "content": "path_classifiers:\n  library:\n    - src/dependencies\n    - src/third_party\nqueries:\n  - exclude: src/dependencies\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.0146484375,
          "content": "---------------\nopenMVG authors\n---------------\nPierre Moulon <pmoulon@gmail.com>\nPascal Monasse <monasse@imagine.enpc.fr>\nRenaud Marlet <renaud.marlet@enpc.fr>\n\nanhtuann\nBruno Duisit\nFabien Castan\nIivari Äikäs\nluxigo\nMichael Holroyd\nRomain Janvier\nRory McCann\nRomuald Perrot\nrhiestan\nsergi pujades-rocamora\nsflotron\nvincentweb\nYohann Salaun\n\n-------------\nOpenMVG authors would thanks the libmv authors\n-------------\nAndrew Chant <andrew.chant@gmail.com>\nDaniel Waterworth <da.waterworth@gmail.com>\nDarius Blaszyk <dblaszyk@gmail.com>\nDavid Roberts <dvdr18@gmail.com>\nJose Gonzalez <de0a100@gmail.com>\nJulien Michot <julien.michot.fr@gmail.com>\nKeir Mierle <mierle@gmail.com>\nMarco Molteni <marco.molteni@laposte.net>\nMatthias Fauconneau <matthias.fauconneau@gmail.com>\nNathan Wiegand <nathanwiegand@gmail.com>\nPau Gargallo <pau.gargallo@gmail.com>\nPierre Moulon <pmoulon@gmail.com>\nRehno Lindeque <errantkid@gmail.com>\nSlava Vishnyakov <bomboze@gmail.com>\nVess Perfanov <vessper@gmail.com>\nW. James MacLean <w.james.maclean@gmail.com>\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 8.1796875,
          "content": "OpenMVG (Open Multiple View Geometry)\n=====================================\n\nBuild instructions\n------------------\n\nRequired tools:\n\n- CMake\n- Git\n- C/C++ compiler (GCC, Visual Studio or Clang)\n\nOptional tools:\n\n- QT version >= v5.4\n\nAs OpenMVG uses some C++11 features, you must have a C++11 ready compiler:\n\n- Visual Studio >= 2015 (recommended)\n- GCC >= 4.8.1\n- Clang >= 3.3\n\nNote:\n\n- CMAKE OpenMVG variables you can configure:\n\n  - OpenMVG_BUILD_TESTS (ON/OFF(default))\n      - Build OpenMVG unit tests\n  - OpenMVG_BUILD_EXAMPLES (ON/OFF(default))\n      - Build OpenMVG example applications.\n  - OpenMVG_BUILD_SOFTWARES (ON(default)/OFF)\n      - Build OpenMVG applications.\n\n- General information for OpenMVG SfM pipelines:\n\n  - OpenMVG can export graphs as Graphviz .dot files and render them as SVG files. If you want this graph visualization feature, please install Graphviz.\n\nChecking out the project and build it\n--------------------------------------\n\n- [Getting the project](#checkout)\n- [Compiling on Linux](#linux)\n- [Compiling on Windows](#windows)\n- [Compiling on MacOS](#macos)\n- [Compiling using VCPKG](#vcpkg)\n- [Using Docker](#docker)\n- [Using Pixi](#pixi)\n\nGetting the project\n--------------------\n<a name=\"checkout\"></a>\n\nGetting the sources (and the submodules):\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n```\nor\n```shell\n$ git clone https://github.com/openMVG/openMVG.git\n$ cd openMVG\n$ git submodule init\n$ git submodule update\n```\n\nCompiling on Linux\n-------------------\n<a name=\"linux\"></a>\n\n1. Install the required external libraries.\n```shell\n$ sudo apt-get install libpng-dev libjpeg-dev libtiff-dev libxxf86vm1 libxxf86vm-dev libxi-dev libxrandr-dev\n```\nIf you want see the view graph svg logs, install Graphviz.\n```shell\n$ sudo apt-get install graphviz\n```\n\n2. Checkout OpenMVG.\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n$ mkdir openMVG_Build && cd openMVG_Build\n```\n\n3. Configure and build\n```shell\n$ cmake -DCMAKE_BUILD_TYPE=RELEASE ../openMVG/src/\n$ cmake --build . --target install\n```\n\nRun tests using make or ctest (if requested in the CMake command line with `-DOpenMVG_BUILD_TESTS=ON`)\n```shell\n$ make test\n$ ctest --output-on-failure -j\n```\n\nCompiling on Windows\n---------------------\n<a name=\"windows\"></a>\n\n1. Checkout the project\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n```\n\n1. Open cmake-gui.\n2. Fill the source path with the src OpenMVG path.\n3. Fill the build path with a new directory.\n4. Select your Visual Studio IDE and click configure and then generate.\n5. Open the .sln solution created in your build directory.\n6. Change the target to Release.\n7. Compile the libraries and binaries samples.\n\nAnother options is to build with cmake in console. I recommend launching `VS2015/VS2017 x64 Native Tools Command Prompt` which has build environment already set up or to use the [VCPKG](#vcpkg) alternative.\n\nCompiling on Mac\n-------------------\n<a name=\"macos\"></a>\n\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n$ cd openMVG\n$ ls\n AUTHORS BUILD  docs  logo  README  src  ...\n$ cd ..\n$ mkdir openMVG_Build\n$ cd openMVG_Build\n```\n\nIf you want to use Xcode and compile by using the command line, run\n```\n$ cmake -DCMAKE_BUILD_TYPE=RELEASE -G \"Xcode\" . ../openMVG/src/\n$ xcodebuild -configuration Release\n```\notherwise you can use standard makefiles\n```shell\n$ cmake -DCMAKE_BUILD_TYPE=RELEASE . ../openMVG/src/\n```\nAfter, you build\n```\n$ cmake --build . --target install\n```\n\nCompiling using VCPKG\n-----------------------\n<a name=\"vcpkg\"></a>\n\nChecking and build VCPKG\n```shell\n$ git clone https://github.com/Microsoft/vcpkg\n$ cd vcpkg\n$ ./bootstrap-vcpkg.sh/bat\n```\n\nVCPKG can build OpenMVG using a native port, or you can build the dependencies and make your custom OpenMVG build.\n\n## (Option a) Use the VCPKG port\n\n```shell\nvcpkg install openmvg[core,openmp]\n```\n\nSee [here](https://github.com/microsoft/vcpkg/tree/master/ports/openmvg) for more details about the VCPKG port.\n\n## (Option b) Custom build\n\nChecking OpenMVG 3rd party dependencies by using VCPKG (configure your build triplet if needed see the `--triplet` option)\n```shell\n$ ./vcpkg install cereal ceres eigen3 libjpeg-turbo libpng tiff\n```\nNote: If you want to use ceres with a sparse back-end, please use one of this choice `ceres[cxsparse]` or `ceres[suitesparse]` or `ceres[eigensparse]`.\n\nChecking out OpenMVG and build it\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n$ mkdir openMVG_Build\n$ cd openMVG_Build\n$ cmake -DCMAKE_TOOLCHAIN_FILE=<VCPKG_ROOT>/scripts/buildsystems/vcpkg.cmake ../openMVG/src/\n$ cmake --build .\n```\n\nUsing Docker\n------------\n<a name=\"docker\"></a>\n\nBuild the docker image\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n$ docker build . -t openmvg\n$ docker run -it openmvg /bin/sh\n```\n\nYou can bind directories between the host and the container using `--volume` or `--mount` option in order to access to any files and directories on a host machine from the container. (See the [docker documentation](https://docs.docker.com/engine/reference/commandline/run/).)\n\nexample:\n```shell\n# launch a container\n$ docker run -it \\\n    --rm \\ # Automatically remove the container when it exits\n    --volume /path/to/dataset/:/dataset:ro \\ #read only\n    openmvg\n# dataset/ can be found in the root directory\nroot@de138d2f6223:/# ls /\n...   dataset/  ...\n```\n\nUsing Pixi\n------------\n<a name=\"pixi\"></a>\n\n[Pixi](https://pixi.sh/) enables you to have a contained environment to compile and run openMVG in a local folder for Linux and Mac platforms.\n\nInstall pixi and compile openMVG\n```shell\n$ git clone --recursive https://github.com/openMVG/openMVG.git\n$ cd openMVG\n$ curl -fsSL https://pixi.sh/install.sh | bash\n$ pixi run build\n```\n\nThen running openMVG is as easy as running the pixi shell (here an example for Linux):\n```shell\n$ pixi shell\n# Running one of the python script\n$ python3 ./build/software/SfM/tutorial_demo.py\n# Running one of OpenMVG binary\n$ ./build/Linux-x86_64-Release/openMVG_main_SfMInit_ImageListing\n```\n\n\nUsing OpenCV sample\n--------------------\n\nAdd `-DOpenMVG_USE_OPENCV=ON` to your cmake command and set the OpenCV_DIR variable to your OpenCV build directory\ne.g. `-DOpenCV_DIR=\"/home/user/Dev/github/itseez/opencv_Build\" -DOpenMVG_USE_OPENCV=ON`\n\nUsing OpenMVG as a third party library dependency with CMake\n-------------------------------------------------------------\n\nOpenMVG can be used as a third party library once it has been installed.\nBecause it can use its own Ceres version, it's better to install it locally and not in system files.\nSo please consider using the CMAKE_INSTALL_PREFIX CMake variable to specify a local installation directory.\n\nHere is the syntax to add the variable to the cmake command (use absolute path):\n`-DCMAKE_INSTALL_PREFIX:STRING=\"YourInstallPath\"`\ne.g `-DCMAKE_INSTALL_PREFIX:STRING=\"/home/user/Dev/github/openMVG_Build/openMVG_install\"`\n\nPerform `make` and `make install`.\n\nOnce the library has been installed, go to your project that wants to use OpenMVG as an external library and add\n\n```\nfind_package(OpenMVG REQUIRED)\ninclude_directories(${OPENMVG_INCLUDE_DIRS})\nadd_executable(main main.cpp)\ntarget_link_libraries(main ${OPENMVG_LIBRARIES})\n```\n\nor with modern target-based approach (CMake 3.0+, Includes directories will be added by CMake target transitivity)\n\n```\nfind_package(OpenMVG REQUIRED)\nadd_executable(main main.cpp)\ntarget_link_libraries(main\n  PRIVATE\n    OpenMVG::openMVG_sfm\n    OpenMVG::openMVG_matching\n    ...\n)\n```\n\nThe list of available openMVG libraries is (use only the ones you need):\n```\nOpenMVG::openMVG_camera\nOpenMVG::openMVG_exif\nOpenMVG::openMVG_features\nOpenMVG::openMVG_geodesy\nOpenMVG::openMVG_geometry\nOpenMVG::openMVG_graph\nOpenMVG::openMVG_image\nOpenMVG::openMVG_linearProgramming\nOpenMVG::openMVG_matching\nOpenMVG::openMVG_matching_image_collection\nOpenMVG::openMVG_multiview\nOpenMVG::openMVG_numeric\nOpenMVG::openMVG_robust_estimation\nOpenMVG::openMVG_sfm\nOpenMVG::openMVG_system\n```\n\nIf OpenMVG has been installed by using the CMake OpenMVG_DIR variable you can specify where the install have been done manually by using:\n\n  `-DOpenMVG_DIR:STRING=\"YourInstallPath\"/lib/openMVG/cmake`\n\nA message will be displayed if OpenMVG is found or not at the CMake configure step.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1591796875,
          "content": "# Contributing to OpenMVG\n\nFirst off all, thanks for taking the time to contribute!\n\n**Contributions** (bug reports or bug fixes, features, etc.) and **feedback**  are welcome and should be submitted thanks to issues form and/or pull requests on GitHub.\n\n\n\nHere the list of things to check for contribution:\n\n1. Start your dev from **develop** branch:\n\n  -  Master is storing the current release.\n  - Develop store the WIP for the next release candidate. Please submit any new features to the develop branch.\n\n2. Consider adding unit test:\n \n  - Add unit tests for all newly added code.\n  - It helps to check accuracy of your code implementation and show how to use the API. It helps also any future maintenance.\n\n2. Consider adding documentation:\n \n  - Please use doxygen documentation.\n\n     - You can also consider extending the exiting Sphinx documentation (see ``./docs/sphinx``)\n\n\n4. Push your change and make a PR towards develop:\n\n  - please check the status of the continuous integration tools:\n      -  Compilation (travis, appveyor),\n      -  Code quality and style (codacity).\n      \nIf you want to learn more about OpenSource we refer you to this:\nhttps://opensource.guide/\n"
        },
        {
          "name": "COPYRIGHT.md",
          "type": "blob",
          "size": 3.34375,
          "content": "\n## OpenMVG License\n\n* __OpenMVG - open Multiple View Geometry__<br />\n  Copyright OpenMVG authors\n  Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n## Included third parties licence details\n\nThis program includes works distributed under the terms of another license(s) and other copyright notice(s).\n\n*   __ceres-solver__<br />\n    <[http://ceres-solver.org/](http://ceres-solver.org/)><br />\n    Copyright 2015 Google Inc. All rights reserved.\n    Licensed under the [New BSD licence](http://ceres-solver.org/license.html).\n\n*   __cmdLine__<br />\n    Copyright (c) Pascal Monasse.\n    Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __CppUnitLite__ (optional)<br />\n    Public domain.\n\n*   __cxsparse__  (optional)<br />\n    Copyright (c) 2006-2012, Timothy A. Davis.\n    Distributed under the [GNU LGPL license](http://opensource.org/licenses/lgpl-license).\n\n*   __easyexif__<br />\n    Copyright (c) 2010 Mayank Lahiri.\n    Distributed under the [New BSD License](http://opensource.org/licenses/BSD-3-Clause).\n\n*   __eigen__<br />\n    Copyright (c) Eigen authors.\n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n    Compiled with EIGEN_MPL2_ONLY to ensure MPL2 compatible code.\n\n*   __fast__<br />\n    Copyright (c) 2006, 2008 Edward Rosten\n    Distributed under the [New BSD License](https://opensource.org/licenses/BSD-3-Clause).\n\n*   __flann__<br />\n    Copyright (c) 2008-2011  Marius Muja (mariusm@cs.ubc.ca). All rights reserved.\n    Copyright (c) 2008-2011  David G. Lowe (lowe@cs.ubc.ca). All rights reserved.\n    Distributed under the [BSD License](http://www.opensource.org/licenses/bsd-license.php).\n\n*   __histogram__<br />\n    Copyright (c) Jansson Consulting & Pierre Moulon.\n    Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __hnswlib__<br />\n    Copyright (c) hnswlib authors.\n    Licensed under the [Apache-2.0 license](https://opensource.org/licenses/Apache-2.0).\n\n*   __htmlDoc__<br />\n    Copyright (c) Pierre Moulon.\n    Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __jpeg__<br />\n    Copyright (c) Independent JPEG Group License.\n    Licensed under the [Independent JPEG Group License](https://spdx.org/licenses/IJG).\n\n*   __lemon__<br />\n    Copyright (c) Lemon authors.\n    Licensed under the [Boost License 1.0](http://www.boost.org/LICENSE_1_0.txt).\n\n*   __png__ (optional)<br />\n    Copyright (c) 2004, 2006-2015 Glenn Randers-Pehrson\n    Licensed under the [lib png license](http://www.libpng.org/pub/png/src/libpng-LICENSE.txt).\n\n*   __progress__<br />\n    Copyright (c) Pierre MOULON\n    Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __stlplus3__<br />\n    Copyright (c) 1999-2004 Southampton University, 2004 onwards Andy Rushton. All rights reserved.\n    Licensed under the [BSD license](http://opensource.org/licenses/bsd-license.php).\n\n*   __tiff__ (optional)<br />\n    Copyright (c) 1988-1997 Sam Leffler\n    Copyright (c) 1991-1997 Silicon Graphics, Inc.\n    Licensed under a BSD-like license.\n\n*   __vectorGraphics__<br />\n    Copyright (c) Pierre Moulon\n    Licensed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __zlib__  (optional)<br />\n    Copyright (C) 1995-2005 Jean-loup Gailly\n    Licensed under the [zlib license](http://opensource.org/licenses/Zlib).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.08984375,
          "content": "# Use Ubuntu 22.04 (will be supported until April 2027)\nFROM ubuntu:jammy\n\n# Add openMVG binaries to path\nENV PATH $PATH:/opt/openMVG_Build/install/bin\n\n# Get dependencies\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata; \\\n  apt-get install -y \\\n  cmake \\\n  build-essential \\\n  graphviz \\\n  git \\\n  coinor-libclp-dev \\\n  libceres-dev \\\n  libflann-dev \\\n  libjpeg-dev \\\n  liblemon-dev \\\n  libpng-dev \\\n  libtiff-dev \\\n  python3; \\\n  apt-get autoclean && apt-get clean\n\n# Clone the openvMVG repo\nADD . /opt/openMVG\nRUN cd /opt/openMVG && git submodule update --init --recursive\n\n# Build\nRUN mkdir /opt/openMVG_Build; \\\n  cd /opt/openMVG_Build; \\\n  cmake -DCMAKE_BUILD_TYPE=RELEASE \\\n    -DCMAKE_INSTALL_PREFIX=\"/opt/openMVG_Build/install\" \\\n    -DOpenMVG_BUILD_TESTS=ON \\\n    -DOpenMVG_BUILD_EXAMPLES=OFF \\\n    -DCOINUTILS_INCLUDE_DIR_HINTS=/usr/include \\\n    -DLEMON_INCLUDE_DIR_HINTS=/usr/include/lemon \\\n    -DCLP_INCLUDE_DIR_HINTS=/usr/include \\\n    -DOSI_INCLUDE_DIR_HINTS=/usr/include \\\n    ../openMVG/src; \\\n    make -j 4;\n\nRUN cd /opt/openMVG_Build && make test && make install;\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3662109375,
          "content": "OpenMVG (open Multiple View Geometry)\n=====================================\n\n<p align=\"center\">\n<img src=\"https://github.com/openMVG/openMVG/raw/master/logo/openMVG_Logo.png\">\n<p/>\n\n| **License** | **Documentation** | Continuous Integration (Linux/MacOs/Windows) |Build  | Code Quality | Chat |\n|:-:|:-:|:-:|:-:|:-:|:-:|\n| [![GitHub license](https://img.shields.io/badge/license-MPL2-blue)](https://github.com/openMVG/openMVG/blob/master/LICENSE) |   [![doc](https://img.shields.io/badge/doc-readthedocs-blueviolet)](http://openmvg.readthedocs.org/en/latest) <br> [Wiki](https://github.com/openMVG/openMVG/wiki) | [![CI](https://github.com/openMVG/openMVG/actions/workflows/compile_and_run_test.yml/badge.svg?branch=develop)](https://github.com/openMVG/openMVG/actions/workflows/compile_and_run_test.yml) | [local/docker build tutorial ](https://github.com/openMVG/openMVG/blob/master/BUILD.md)|  [![CodeQL](https://github.com/openMVG/openMVG/actions/workflows/codeql.yml/badge.svg)](https://github.com/openMVG/openMVG/actions/workflows/codeql.yml) <br> [![CodeFactor](https://www.codefactor.io/repository/github/openmvg/openmvg/badge)](https://www.codefactor.io/repository/github/openmvg/openmvg) | [![Join the chat](https://img.shields.io/badge/chat-on%20gitter-green)](https://gitter.im/openMVG/Lobby) |\n\n**Our Mission**\n- Extend awareness of the power of 3D reconstruction from images/photogrammetry by developing a C++ framework.\n\n**Our Vision**\n- Simplify reproducible research with easy-to-read and accurate implementation of state of the art and \"classic\" algorithms.\n\n**Our Credo**\n- \"Keep it simple, keep it maintainable\".\n  - OpenMVG is designed to be easy to read, learn, modify and use.\n  - Thanks to its strict test-driven development and samples, the library allows to build trusted larger systems.\n\n**Our codebase and pipeline**\n\nOpenMVG provides an end-to-end 3D reconstruction from images framework compounded of libraries, binaries, and pipelines.\n- **The libraries** provide easy access to features like: images manipulation, features description and matching, feature tracking, camera models, multiple-view-geometry, robust-estimation, structure-from-motion algorithms, ...\n- **The binaries** solve unit tasks that a pipeline could require: scene initialization, feature detection & matching and structure-from-motion reconstruction, export the reconstructed scene to others Multiple-View-Stereovision framework to compute dense point clouds or textured meshes.\n- **The pipelines** are created by chaining various binaries to compute image matching relation, solve the Structure from Motion problem (reconstruction, triangulation, localization) and ...\n\nOpenMVG is developed in C++ and runs on Android, iOS, Linux, macOS, and Windows.\n\n<p align=\"center\">\n<img src=\"./docs/sphinx/rst/openMVG/sfm/pipeline_simple.png\">\n<p/>\n\n**Tutorials**\n- See [Wiki](https://github.com/openMVG/openMVG/wiki)\n  - [OpenMVG Data Structure](https://github.com/openMVG/openMVG/wiki/OpenMVG-data-structures)\n  - [Using OpenMVG as a library](https://github.com/openMVG/openMVG/blob/develop/BUILD.md#using-openmvg-as-a-third-party-library-dependency-with-cmake)\n  - [Using OpenMVG on your image dataset](https://github.com/openMVG/openMVG/wiki/OpenMVG-on-your-image-dataset)\n  - ...\n\n**More information**\n- [Authors](#authors)\n- [Contact](#contact)\n- [Citations](#citations)\n- [Acknowledgements](#acknowledgements)\n\n## Authors\n\nSee [Authors](https://github.com/openMVG/openMVG/raw/master/AUTHORS) text file\n\n## Contact\n\nopenmvg-team[AT]googlegroups.com\n\n\n## Citations\n\nWe are recommending citing `OpenMVG` if you are using the whole library or the adequate paper if you use only a submodule `AContrario Ransac [3], AContrario\nSfM [1], GlobalSfM [4] or Tracks [2]`:\n\n```\n@inproceedings{moulon2016openmvg,\n  title={Open{MVG}: Open multiple view geometry},\n  author={Moulon, Pierre and Monasse, Pascal and Perrot, Romuald and Marlet, Renaud},\n  booktitle={International Workshop on Reproducible Research in Pattern Recognition},\n  pages={60--74},\n  year={2016},\n  organization={Springer}\n}\n```\n\n[1] Moulon Pierre, Monasse Pascal and Marlet Renaud. ACCV 2012.\n[Adaptive Structure from Motion with a contrario model estimation.](http://hal.archives-ouvertes.fr/index.php?halsid=1n2qdqiv2a0l5eq7qpos9us752&view_this_doc=hal-00769266&version=1)\n```\n@inproceedings{Moulon2012,\n  doi = {10.1007/978-3-642-37447-0_20},\n  year  = {2012},\n  publisher = {Springer Berlin Heidelberg},\n  pages = {257--270},\n  author = {Pierre Moulon and Pascal Monasse and Renaud Marlet},\n  title = {Adaptive Structure from Motion with a~Contrario Model Estimation},\n  booktitle = {Proceedings of the Asian Computer Vision Conference (ACCV 2012)}\n}\n```\n\n[2] Moulon Pierre and Monasse Pascal. CVMP 2012.\n[Unordered feature tracking made fast and easy.](http://hal.archives-ouvertes.fr/index.php?halsid=ggdarhl8cv1j6ohq2073eok8q3&view_this_doc=hal-00769267&version=1)\n```\n@inproceedings{moulon2012unordered,\n  title={Unordered feature tracking made fast and easy},\n  author={Moulon, Pierre and Monasse, Pascal},\n  booktitle={CVMP 2012},\n  pages={1},\n  year={2012}\n}\n```\n\n[3] Moisan Lionel, Moulon Pierre and Monasse Pascal. IPOL 2012.\n[Automatic Homographic Registration of a Pair of Images, with A Contrario Elimination of Outliers.](http://dx.doi.org/10.5201/ipol.2012.mmm-oh)\n```\n@article{moisan2012automatic,\n  title={Automatic homographic registration of a pair of images, with a contrario elimination of outliers},\n  author={Moisan, Lionel and Moulon, Pierre and Monasse, Pascal},\n  journal={Image Processing On Line},\n  volume={2},\n  pages={56--73},\n  year={2012}\n}\n```\n\n[4] Moulon Pierre, Monasse Pascal, and Marlet Renaud. ICCV 2013.\n[Global Fusion of Relative Motions for Robust, Accurate and Scalable Structure from Motion.](http://imagine.enpc.fr/~moulonp/publis/iccv2013/index.html)\n\n```\n@inproceedings{moulon2013global,\n  title={Global fusion of relative motions for robust, accurate and scalable structure from motion},\n  author={Moulon, Pierre and Monasse, Pascal and Marlet, Renaud},\n  booktitle={Proceedings of the IEEE International Conference on Computer Vision},\n  pages={3248--3255},\n  year={2013}\n}\n```\n\n## Acknowledgements\n\nopenMVG authors would like to thanks libmv authors for providing an inspiring\nbase to design openMVG. Authors also would like to thanks [Mikros Image](http://www.mikrosimage.eu/)\nand [LIGM-Imagine laboratory](http://imagine.enpc.fr/) for support and authorization to make this\nlibrary an opensource project.\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "pixi.toml",
          "type": "blob",
          "size": 0.7783203125,
          "content": "[project]\nname = \"openMVG\"\nversion = \"0.1.0\"\ndescription = \"openMVG 'open Multiple View Geometry' library. Basis for 3D computer vision and Structure from Motion.\"\nauthors = [\"OpenMVG Team<openmvg-team@googlegroups.com>\"]\nchannels = [\"conda-forge\"]\nplatforms = [\"linux-64\", \"osx-arm64\", \"osx-64\"]\nrepository = \"https://github.com/openMVG/openMVG\"\n\n[tasks]\nclean = { cmd = \"rm -rf build \" }\nprint-env = { cmd = \"echo $PATH\" }\nconfigure = \"cmake -B build -S ./src -DOpenMVG_BUILD_TESTS:BOOL=ON\"\nbuild = { cmd = \"cmake --build build -j 4\", depends_on = [\"configure\"] }\ntest = { cmd = \"cd build; ctest -j\", depends_on = [\"build\"] }\n\n[dependencies]\nceres-solver = \"2.2.0.*\"\nlibjpeg-turbo = \"3.0.0.*\"\ncmake = \"3.28.1.*\"\ncxx-compiler = \"1.7.0.*\"\nlibpng = \"1.6.39.*\"\nzlib = \"1.2.13.*\"\nlibtiff = \"4.6.0.*\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}