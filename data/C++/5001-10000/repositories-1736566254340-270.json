{
  "metadata": {
    "timestamp": 1736566254340,
    "page": 270,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dropbox/lepton",
      "stars": 5007,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4443359375,
          "content": "*.a\n*.o\n.deps\nMakefile\nMakefile.in\n\n/INSTALL\n/aclocal.m4\n/ar-lib\n/autom4te.cache\n/config.h\n/config.h.in\n/config.h.in~\n/config.log\n/config.status\n/configure\n/depcomp\n/install-sh\n/missing\n/stamp-h1\n/build\n/compile\n/test-driver\n\n/images/*_.jpg\n/images/*.lep\n/images/*.ujg\n/lepton\n/print-model\n/test_[^hcdi]*\n/test_invariants\n/test_iphone\n/test_iphone.*\n/test_iphone_ujg\n/test_hq*\n/test-suite.log\n/test_custom_table.sh.log\n/test_custom_table.sh.trs\n.dirstamp\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.208984375,
          "content": "language: cpp\ndist: trusty\nsudo: required\ncompiler:\n- gcc\n- clang\nos:\n- linux\n- osx\nenv:\n  global:\n      - CXX_EXTRA=\"-mssse3\"\nmatrix:\n  include:\n    - os: linux\n      arch: arm64\n      compiler: gcc\n      env:\n       - CXX_EXTRA=\"\"\n\n    - os: linux\n      arch: arm64\n      compiler: clang\n      env:\n       - CXX_EXTRA=\"\"\n       - CONFIGURE_EXTRA=\"--disable-native-opt\"\n\nscript: sh autogen.sh && ./configure CXXFLAGS=\"-O2 -g $CXX_EXTRA\" $CONFIGURE_EXTRA --enable-custom-allocator && make liblocalzlib.a && make -j4 && make check && make clean && ./configure CXXFLAGS=\"-O2 -g $CXX_EXTRA\" $CONFIGURE_EXTRA --disable-advanced-jpeg-features --enable-custom-allocator && make liblocalzlib.a && make -j4 && make check && make clean && CXXFLAGS=\"-O2 $CXX_EXTRA -DALLOW_3_OR_4_SCALING_FACTOR -DALLOW_FOUR_COLORS\" ./configure CXXFLAGS=\"-O2 $CXX_EXTRA -g\" $CONFIGURE_EXTRA && make liblocalzlib.a && make -j4 && make check && make clean && ./configure CXXFLAGS=\"-O2 $CXX_EXTRA -g\" $CONFIGURE_EXTRA --disable-vectorization --enable-custom-allocator  && make liblocalzlib.a && make -j4 && make check && make clean && ./configure CXXFLAGS=\"-O2 $CXX_EXTRA -g\" $CONFIGURE_EXTRA --enable-ans-experimental && make liblocalzlib.a && make -j4 && make check\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.099609375,
          "content": "Daniel Reiter Horn\nKen Elkabany\nKeith Winstein\nChris Lesniewski\nMario Brito\nMatthias Stirner\nMikhail T"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 16.8681640625,
          "content": "cmake_minimum_required(VERSION 2.8)\nproject(lepton)\n\nfind_package(Git)\noption(USE_SYSTEM_DEPENDENCIES \"Use system dependencies for libz and openssl\" OFF)\n\noption(USE_CUSTOM_ALLOCATOR \"Use a custom allocator on linux and OSX to bound the memory usage\" ON)\nset(ALLOCATOR_FLAGS)\nif(NOT USE_CUSTOM_ALLOCATOR)\nset(ALLOCATOR_FLAGS \"-DUSE_STANDARD_MEMORY_ALLOCATORS\")\nendif()\n\nset(BILLING_FLAGS)\noption(ENABLE_BILLING \"Always print out a receipt of which parts of the jpeg took how many bits\" OFF)\nif(ENABLE_BILLING)\nset(BILLING_FLAGS \"-DENABLE_BILLING\")\nendif()\n\nset(ANS_FLAGS)\noption(ENABLE_ANS_EXPERIMENTAL \"Enable ANS arithmetic coder option (trigger with -ans during encode) (experimental)\" OFF)\nif(ENABLE_ANS_EXPERIMENTAL)\nset(ANS_FLAGS \"-DENABLE_ANS_EXPERIMENTAL\")\nendif()\n\n\nif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"ppc\")\noption(SSE_VECTORIZATION \"SSE instructions\" OFF)\nelse()\noption(SSE_VECTORIZATION \"SSE instructions\" ON)\nendif()\noption(BENCHMARK \"Include a test file for benchmarking lepton\" OFF)\nset(flags_configs \"\")\nif(\"${CMAKE_CONFIGURATION_TYPES}\" STREQUAL \"\")\n    if(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n         list(APPEND flags_configs CMAKE_C_FLAGS)\n         list(APPEND flags_configs CMAKE_CXX_FLAGS)\n    else()\n            string(TOUPPER ${CMAKE_BUILD_TYPE} config)\n            list(APPEND flags_configs CMAKE_C_FLAGS_${config})\n            list(APPEND flags_configs CMAKE_CXX_FLAGS_${config})\n    endif()\nelse()\n        # handle multi config generators (like msvc, xcode\n    foreach(config ${CMAKE_CONFIGURATION_TYPES})\n            string(TOUPPER ${config} config)\n            list(APPEND flags_configs CMAKE_C_FLAGS_${config})\n            list(APPEND flags_configs CMAKE_CXX_FLAGS_${config})\n    endforeach()\nendif()\nif(WIN32)\n    foreach(flags ${flags_configs})\n        if(${flags} MATCHES \"/MD\")\n             string(REGEX REPLACE \"/MD\" \"/MT\" ${flags} \"${${flags}}\")\n        endif()\n    endforeach()\nendif()\nif(SSE_VECTORIZATION)\n  set(VECTOR_FLAGS \"-mssse3 -msse4.2\")\nelse()\n  set(VECTOR_FLAGS \"\")\nendif()\nif(EMSCRIPTEN)\n    set(CMAKE_CXX_FLAGS \"-std=c++11 -fno-exceptions -fno-rtti -s DEMANGLE_SUPPORT=1 -s TOTAL_MEMORY=184549376 --pre-js pre.js --post-js post.js -O2\")\nelse()\n    set(CMAKE_CXX_FLAGS \"-std=c++11 -fno-exceptions -fno-rtti\")\nendif()\nset(CMAKE_C_FLAGS \"-std=c99 -DHAVE_CONFIG_H\")\n\nif(WIN32)\nSET(CMAKE_CXX_FLAGS \"-D_HAS_EXCEPTIONS=0 -GR-\")\nelse()\nSET(CMAKE_CXX_FLAGS \"-std=c++11 -fno-exceptions -fno-rtti\")\nendif()\nif(WIN32)\nSET(CMAKE_C_FLAGS \"-DHAVE_CONFIG_H\")\nelse()\nSET(CMAKE_C_FLAGS \"-std=c99 -DHAVE_CONFIG_H \")\nendif()\nif(NOT USE_SYSTEM_DEPENDENCIES)\n    add_library(localmd5 dependencies/md5/md5.c)\n    add_library(localzlib\n    dependencies/zlib/inflate.c\n    dependencies/zlib/inflate.h\n    dependencies/zlib/gzguts.h\n    dependencies/zlib/infback.c\n    dependencies/zlib/trees.c\n    dependencies/zlib/adler32.c\n    dependencies/zlib/gzclose.c\n    dependencies/zlib/inftrees.h\n    dependencies/zlib/zconf.h\n    dependencies/zlib/compress.c\n    dependencies/zlib/crc32.c\n    dependencies/zlib/crc32.h\n    dependencies/zlib/trees.h\n    dependencies/zlib/inftrees.c\n    dependencies/zlib/zutil.c\n    dependencies/zlib/zutil.h\n    dependencies/zlib/zlib.h\n    dependencies/zlib/inffixed.h\n    dependencies/zlib/deflate.c\n    dependencies/zlib/inffast.h\n    dependencies/zlib/inffast.c\n    dependencies/zlib/uncompr.c\n    dependencies/zlib/deflate.h)\nendif()\nadd_library(localbrotli\n    dependencies/brotli/c/include/brotli/encode.h\n    dependencies/brotli/c/include/brotli/types.h\n    dependencies/brotli/c/include/brotli/decode.h\n    dependencies/brotli/c/include/brotli/port.h\n    dependencies/brotli/c/common/constants.h\n    dependencies/brotli/c/common/version.h\n    dependencies/brotli/c/common/dictionary.h\n    dependencies/brotli/c/common/dictionary.c\n    dependencies/brotli/c/enc/block_encoder_inc.h\n    dependencies/brotli/c/enc/memory.c\n    dependencies/brotli/c/enc/bit_cost.h\n    dependencies/brotli/c/enc/ringbuffer.h\n    dependencies/brotli/c/enc/entropy_encode.c\n    dependencies/brotli/c/enc/quality.h\n    dependencies/brotli/c/enc/utf8_util.h\n    dependencies/brotli/c/enc/block_splitter_inc.h\n    dependencies/brotli/c/enc/block_splitter.h\n    dependencies/brotli/c/enc/compress_fragment.c\n    dependencies/brotli/c/enc/utf8_util.c\n    dependencies/brotli/c/enc/cluster_inc.h\n    dependencies/brotli/c/enc/cluster.h\n    dependencies/brotli/c/enc/literal_cost.c\n    dependencies/brotli/c/enc/static_dict.c\n    dependencies/brotli/c/enc/backward_references_hq.c\n    dependencies/brotli/c/enc/hash.h\n    dependencies/brotli/c/enc/literal_cost.h\n    dependencies/brotli/c/enc/compress_fragment_two_pass.c\n    dependencies/brotli/c/enc/dictionary_hash.c\n    dependencies/brotli/c/enc/entropy_encode.h\n    dependencies/brotli/c/enc/command.h\n    dependencies/brotli/c/enc/metablock_inc.h\n    dependencies/brotli/c/enc/context.h\n    dependencies/brotli/c/enc/metablock.h\n    dependencies/brotli/c/enc/hash_longest_match_quickly_inc.h\n    dependencies/brotli/c/enc/hash_longest_match_inc.h\n    dependencies/brotli/c/enc/hash_to_binary_tree_inc.h\n    dependencies/brotli/c/enc/backward_references.h\n    dependencies/brotli/c/enc/find_match_length.h\n    dependencies/brotli/c/enc/prefix.h\n    dependencies/brotli/c/enc/static_dict.h\n    dependencies/brotli/c/enc/cluster.c\n    dependencies/brotli/c/enc/brotli_bit_stream.h\n    dependencies/brotli/c/enc/bit_cost_inc.h\n    dependencies/brotli/c/enc/metablock.c\n    dependencies/brotli/c/enc/backward_references_hq.h\n    dependencies/brotli/c/enc/write_bits.h\n    dependencies/brotli/c/enc/entropy_encode_static.h\n    dependencies/brotli/c/enc/histogram.c\n    dependencies/brotli/c/enc/encode.c\n    dependencies/brotli/c/enc/port.h\n    dependencies/brotli/c/enc/compress_fragment.h\n    dependencies/brotli/c/enc/static_dict_lut.h\n    dependencies/brotli/c/enc/histogram.h\n    dependencies/brotli/c/enc/hash_forgetful_chain_inc.h\n    dependencies/brotli/c/enc/block_splitter.c\n    dependencies/brotli/c/enc/brotli_bit_stream.c\n    dependencies/brotli/c/enc/compress_fragment_two_pass.h\n    dependencies/brotli/c/enc/backward_references_inc.h\n    dependencies/brotli/c/enc/bit_cost.c\n    dependencies/brotli/c/enc/backward_references.c\n    dependencies/brotli/c/enc/histogram_inc.h\n    dependencies/brotli/c/enc/hash_longest_match64_inc.h\n    dependencies/brotli/c/enc/fast_log.h\n    dependencies/brotli/c/enc/memory.h\n    dependencies/brotli/c/enc/dictionary_hash.h\n    dependencies/brotli/c/dec/state.h\n    dependencies/brotli/c/dec/huffman.h\n    dependencies/brotli/c/dec/transform.h\n    dependencies/brotli/c/dec/state.c\n    dependencies/brotli/c/dec/bit_reader.c\n    dependencies/brotli/c/dec/huffman.c\n    dependencies/brotli/c/dec/context.h\n    dependencies/brotli/c/dec/bit_reader.h\n    dependencies/brotli/c/dec/prefix.h\n    dependencies/brotli/c/dec/port.h\n    dependencies/brotli/c/dec/decode.c)\n\ninclude_directories(\n    ${CMAKE_BINARY_DIR}\n    ${PROJECT_SOURCE_DIR}/src/vp8/util\n    ${PROJECT_SOURCE_DIR}/dependencies/brotli/c/include\n    ${PROJECT_SOURCE_DIR}/src/vp8/model\n    ${PROJECT_SOURCE_DIR}/src/vp8/encoder\n    ${PROJECT_SOURCE_DIR}/src/vp8/decoder)\n\nset(LEPTON_SOURCES\n   src/lepton/base_coders.hh\n   src/lepton/simple_encoder.hh\n   src/lepton/bitops.cc\n   src/lepton/bitops.hh\n   src/lepton/component_info.hh\n   src/lepton/htables.hh\n   src/lepton/fork_serve.cc\n   src/lepton/fork_serve.hh\n   src/lepton/thread_handoff.cc\n   src/lepton/thread_handoff.hh\n   src/lepton/socket_serve.cc\n   src/lepton/socket_serve.hh\n   src/lepton/jpgcoder.cc\n   src/lepton/concat.cc\n   src/lepton/smalljpg.hh\n   src/lepton/benchmark.cc\n   src/lepton/main.cc\n   src/lepton/validation.cc\n   src/lepton/validation.hh\n   src/lepton/generic_compress.cc\n   src/lepton/generic_compress.hh\n   src/lepton/recoder.cc\n   src/lepton/recoder.hh\n   src/lepton/idct.cc\n   src/lepton/idct.hh\n   src/lepton/uncompressed_components.cc\n   src/lepton/jpgcoder.hh\n   src/lepton/uncompressed_components.hh\n   src/lepton/lepton_codec.cc\n   src/lepton/lepton_codec.hh\n   src/lepton/vp8_decoder.cc\n   src/lepton/simple_decoder.cc\n   src/lepton/vp8_decoder.hh\n   src/lepton/simple_decoder.hh\n   src/lepton/vp8_encoder.cc\n   src/lepton/simple_encoder.cc\n   src/lepton/vp8_encoder.hh\n   src/io/Allocator.hh\n   src/io/BufferedIO.hh\n   src/io/ZlibCompression.cc\n   src/io/ZlibCompression.hh\n   src/io/BrotliCompression.cc\n   src/io/BrotliCompression.hh\n   src/io/Seccomp.hh\n   src/io/Seccomp.cc\n   src/io/seccomp-bpf.hh\n   src/io/MemReadWriter.cc\n   src/io/Error.hh\n   src/io/Reader.hh\n   src/io/MuxReader.hh\n   src/io/ioutil.hh\n   src/io/ioutil.cc\n   src/io/Zlib0.hh\n   src/io/Zlib0.cc\n   src/io/DecoderPlatform.hh\n   src/vp8/util/generic_worker.hh\n   src/vp8/util/options.hh\n   src/vp8/util/generic_worker.cc\n   src/vp8/util/memory.cc\n   src/vp8/util/memory.hh\n   src/vp8/util/billing.cc\n   src/vp8/util/billing.hh\n   src/vp8/util/debug.cc\n   src/vp8/util/debug.hh\n   src/vp8/util/nd_array.hh\n   src/vp8/util/aligned_block.hh\n   src/vp8/util/block_based_image.hh\n   src/vp8/model/JpegArithmeticCoder.cc\n   src/vp8/model/JpegArithmeticCoder.hh\n   src/vp8/model/branch.hh\n   src/vp8/model/model.cc\n   src/vp8/model/model.hh\n   src/vp8/model/numeric.cc\n   src/vp8/model/numeric.hh\n   src/vp8/model/jpeg_meta.hh\n   src/vp8/encoder/encoder.cc\n   src/vp8/decoder/decoder.cc\n   src/vp8/encoder/bool_encoder.hh\n   src/vp8/decoder/bool_decoder.hh\n   src/vp8/encoder/boolwriter.hh\n   src/vp8/encoder/boolwriter.cc\n   src/vp8/decoder/boolreader.hh\n   src/vp8/decoder/boolreader.cc\n   src/vp8/encoder/vpx_bool_writer.hh\n   src/vp8/decoder/vpx_bool_reader.hh\n   src/io/MemMgrAllocator.cc\n   src/io/MemMgrAllocator.hh\n   )\nif(SSE_VECTORIZATION)\nadd_executable(lepton ${LEPTON_SOURCES})\nadd_executable(lepton-slow-best-ratio ${LEPTON_SOURCES})\nadd_executable(lepton-avx ${LEPTON_SOURCES})\nendif()\nadd_executable(lepton-scalar ${LEPTON_SOURCES})\nset(ADDITIONAL_FLAGS)\n\nif(NOT APPLE)\nif(NOT WIN32)\nif(EMSCRIPTEN)\n    if(USE_SYSTEM_DEPENDENCIES)\n        set(ADDITIONAL_FLAGS -static-libstdc++ pthread -Wl,--no-whole-archive -Wl,--no-export-dynamic -O2)\n    else()\n        set(ADDITIONAL_FLAGS -lstdc++ -static-libstdc++ pthread -Wl,--no-export-dynamic -O2)\n    endif()\nelse()\n    if(USE_SYSTEM_DEPENDENCIES)\n        set(ADDITIONAL_FLAGS -static-libstdc++  -Wl,--whole-archive -lpthread  -Wl,--no-whole-archive -Wl,--no-export-dynamic)\n    else()\n        set(ADDITIONAL_FLAGS -lstdc++ -static-libstdc++  -Wl,--whole-archive -lpthread  -Wl,--no-whole-archive -Wl,--no-export-dynamic)\n    endif()\nendif()\nendif()\nendif()\n\nset(ADDITIONAL_COMPILE_FLAGS)\nif(NOT CMAKE_BUILD_TYPE)\n  set(ADDITIONAL_COMPILE_FLAGS \"${ADDITIONAL_COMPILE_FLAGS} -DNDEBUG -O3 -g\")\nendif()\n\nset(ADDITIONAL_DEFINES)\nif(BENCHMARK)\n  set(ADDITIONAL_DEFINES \"${ADDITIONAL_DEFINES} -DREALISTIC_BENCHMARK\")\nendif()\nif(USE_SYSTEM_DEPENDENCIES)\n    set(ADDITIONAL_DEFINES \"${ADDITIONAL_DEFINES} -DUSE_SYSTEM_LIBRARIES -DUSE_SYSTEM_MD5_DEPENDENCY\")\nendif()\n\nif(SSE_VECTORIZATION)\nIF(WIN32)\nIF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"8\")\nSET(ARCH_SSE2_FLAGS \"/D__SSE2__\")\nELSE()\nSET(ARCH_SSE2_FLAGS \"/arch:SSE2\")\nENDIF()\nELSE()\nset(ARCH_SSE2_FLAGS \"-msse4.2\")\nENDIF()\n\nIF(WIN32)\nSET(ARCH_AVX2_FLAGS \"/arch:AVX2 /D__SSE2__\")\nELSE()\nset(ARCH_AVX2_FLAGS \"-march=core-avx2\")\nENDIF()\nelse()\nset(ARCH_SSE2_FLAGS \"\")\nset(ARCH_AVX2_FLAGS \"\")\nendif()\noption(BEST_RATIO_SLOW_DECOMPRESSION \"Turn on single threaded decode in exchange for more compression ratio \" OFF)\n\nif(BEST_RATIO_SLOW_DECOMPRESSION)\n    set(ADDITIONAL_DEFINES \"${ADDITIONAL_DEFINES} -DDEFAULT_SINGLE_THREAD\")\nendif()\n\noption(BASELINE_JPEG_ONLY \"Only support small < 4MB baseline jpegs, instead of progressive and large JPEGS.\" OFF)\nif(NOT BASELINE_JPEG_ONLY)\n    set(ADDITIONAL_DEFINES \"${ADDITIONAL_DEFINES} -DDEFAULT_ALLOW_PROGRESSIVE -DHIGH_MEMORY\")\nendif()\n\noption(UNSAFE_SKIP_VALIDATION \"Don't check roundtrip: can cause data corruption unless you have a following validation step\" OFF)\nif(UNSAFE_SKIP_VALIDATION)\n    set(ADDITIONAL_DEFINES \"${ADDITIONAL_DEFINES} -DSKIP_VALIDATION\")\nendif()\noption(ASAN \"ASAN\" OFF)\nif(ASAN)\n    set(ADDITIONAL_COMPILE_FLAGS \"-fsanitize=address,undefined ${ADDITIONAL_COMPILE_FLAGS}\")\n    set(ADDITIONAL_FLAGS \"-fsanitize=address,undefined ${ADDITIONAL_FLAGS} -Wl,-rpath,/srv/lepton-qualified/lib,-rpath,/srv/lepton-candidate/lib\")\nelse()\n    if(NOT APPLE)\n    if(NOT WIN32)\n    if(NOT USE_SYSTEM_DEPENDENCIES)\n        set(ADDITIONAL_FLAGS \"-static ${ADDITIONAL_FLAGS}\")\n    endif()\n    endif()\n    endif()\nendif()\n\nif(USE_SYSTEM_DEPENDENCIES)\n    find_package(ZLIB)\n    include_directories(${ZLIB_INCLUDE_DIRS})\n    find_package(OpenSSL)\n    include_directories(${OPENSSL_INCLUDE_DIRS})\n    if(SSE_VECTORIZATION)\n      target_link_libraries(lepton localbrotli ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES} ${ADDITIONAL_FLAGS})\n      target_link_libraries(lepton-slow-best-ratio localbrotli ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES} ${ADDITIONAL_FLAGS})\n      target_link_libraries(lepton-avx localbrotli ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES} ${ADDITIONAL_FLAGS})\n    endif()\n    target_link_libraries(lepton-scalar localbrotli ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES} ${ADDITIONAL_FLAGS})\nelse()\n    if(SSE_VECTORIZATION)\n      target_link_libraries(lepton localzlib localbrotli localmd5 ${ADDITIONAL_FLAGS})\n      target_link_libraries(lepton-slow-best-ratio localzlib localbrotli localmd5 ${ADDITIONAL_FLAGS})\n      target_link_libraries(lepton-avx localzlib localbrotli localmd5 ${ADDITIONAL_FLAGS})\n    endif()\n    target_link_libraries(lepton-scalar localzlib localbrotli localmd5 ${ADDITIONAL_FLAGS})\n    set_target_properties(localmd5 PROPERTIES COMPILE_FLAGS \"${VECTOR_FLAGS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES}\")\n    if(WIN32)\n        set(ZLIB_EXTRA_INCLUDE_DIRS)\n    else()\n        set(ZLIB_EXTRA_INCLUDE_DIRS \" -include unistd.h\")\n    endif()\n    set_target_properties(localzlib PROPERTIES COMPILE_FLAGS \"${VECTOR_FLAGS} ${ZLIB_EXTRA_INCLUDE_DIRS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES}\")\nendif()\nif(SSE_VECTORIZATION)\nset_target_properties(lepton PROPERTIES COMPILE_FLAGS \"${VECTOR_FLAGS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES} ${ALLOCATOR_FLAGS} ${ANS_FLAGS} ${BILLING_FLAGS}\")\nset_target_properties(lepton-slow-best-ratio PROPERTIES COMPILE_FLAGS \"${VECTOR_FLAGS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES} ${ALLOCATOR_FLAGS} ${ANS_FLAGS} ${BILLING_FLAGS} -DDEFAULT_SINGLE_THREAD\")\nset_target_properties(lepton-avx PROPERTIES COMPILE_FLAGS \"${ARCH_AVX2_FLAGS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES} ${ALLOCATOR_FLAGS} ${ANS_FLAGS} ${BILLING_FLAGS}\")\nendif()\nset_target_properties(lepton-scalar PROPERTIES COMPILE_FLAGS \"${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES} ${ALLOCATOR_FLAGS} ${ANS_FLAGS} ${BILLING_FLAGS} -DUSE_SCALAR\")\n\nset_target_properties(localzlib PROPERTIES COMPILE_FLAGS \"${ARCH_SSE2_FLAGS} ${ZLIB_EXTRA_INCLUDE_DIRS} ${ADDITIONAL_COMPILE_FLAGS} ${ADDITIONAL_DEFINES} ${ALLOCATOR_FLAGS} ${ANS_FLAGS} ${BILLING_FLAGS}\")\n\n#add_executable(print-model\n#   src/vp8/util/debug.cc\n#   src/vp8/util/debug.hh\n#   src/lepton/print-model.cc\n#   src/io/MemMgrAllocator.cc\n#   src/io/MemMgrAllocator.hh\n#   src/vp8/util/memory.cc\n#   src/vp8/util/memory.hh\n#   src/vp8/model/model.cc\n#   src/vp8/encoder/encoder.cc\n#   src/vp8/decoder/decoder.cc\n#   src/lepton/idct.cc\n#   src/lepton/idct.hh\n#   src/vp8/model/numeric.cc\n#   )\n# target_link_libraries(print-model ${ADDITIONAL_FLAGS})\nif(SSE_VECTORIZATION)\nadd_executable(test_invariants\n   src/io/MemMgrAllocator.cc\n   src/io/MemMgrAllocator.hh\n   src/io/MemReadWriter.cc\n   src/lepton/thread_handoff.cc\n   src/lepton/thread_handoff.hh\n   src/vp8/util/memory.cc\n   test_suite/test_invariants.cc\n   src/vp8/util/billing.cc\n   src/vp8/util/billing.hh\n   src/vp8/model/numeric.cc\n   src/vp8/model/numeric.hh\n   )\nif(USE_SYSTEM_DEPENDENCIES)\n    target_link_libraries(test_invariants ${ZLIB_LIBRARIES} ${ADDITIONAL_FLAGS})\nelse()\n    target_link_libraries(test_invariants localzlib ${ADDITIONAL_FLAGS})\nendif()\n\n#set_target_properties(print-model PROPERTIES COMPILE_FLAGS \"-msse4.2\")\nset_target_properties(test_invariants PROPERTIES COMPILE_FLAGS \"${VECTOR_FLAGS}\")\nendif()\nfile(WRITE ${CMAKE_BINARY_DIR}/version.hh.in\n\"\\#define GIT_REVISION \\\"@VERSION@\\\"\\n\"\n)\n\nfile(WRITE ${CMAKE_BINARY_DIR}/version.cmake\n\"EXECUTE_PROCESS(\n     COMMAND ${GIT_EXECUTABLE} --git-dir=${PROJECT_SOURCE_DIR}/.git --work-tree=${PROJECT_SOURCE_DIR} rev-parse HEAD\n     OUTPUT_VARIABLE VERSION\n     OUTPUT_STRIP_TRAILING_WHITESPACE\n )\n CONFIGURE_FILE(\\${SRC} \\${DST} @ONLY)\n\")\n\ninclude_directories(${CMAKE_BINARY_DIR})\n\nadd_custom_target(\n    version ALL\n    ${CMAKE_COMMAND} -D SRC=${CMAKE_BINARY_DIR}/version.hh.in\n                     -D DST=${CMAKE_BINARY_DIR}/version.hh\n                     -P ${CMAKE_BINARY_DIR}/version.cmake\n)\nfile(GLOB JS_FILES \"src/js/*\")\nfile(COPY ${JS_FILES} DESTINATION ${CMAKE_BINARY_DIR})\nif(SSE_VECTORIZATION)\nadd_dependencies(lepton version)\nadd_dependencies(lepton-avx version)\nadd_dependencies(lepton-slow-best-ratio version)\nendif()\nadd_dependencies(lepton-scalar version)\nif(SSE_VECTORIZATION)\ninstall (TARGETS lepton lepton-slow-best-ratio lepton-avx lepton-scalar DESTINATION bin)\nelse()\ninstall (TARGETS lepton-scalar DESTINATION bin)\nendif()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 20.6875,
          "content": "includes = -I$(srcdir)/dependencies/xz/src/liblzma/api -I$(srcdir)/src/vp8/util -I$(srcdir)/src/vp8/model -I$(srcdir)/src/vp8/decoder -I$(srcdir)/src/vp8/encoder -I$(srcdir)/dependencies -I$(srcdir)/dependencies -I$(srcdir)/dependencies/brotli/c/include -I$(srcdir)/dependencies/xz/src/liblzma/common -I$(srcdir)/dependencies/xz/src/common -I$(srcdir)/dependencies/xz/src/liblzma/lzma -I$(srcdir)/dependencies/xz/src/liblzma/lz -I$(srcdir)/dependencies/xz/src/liblzma/check -I$(srcdir)/dependencies/xz/src/liblzma/rangecoder -I$(srcdir)/dependencies/xz/src/liblzma/api -I$(srcdir)/dependencies/xz/src/liblzma/simple -I$(srcdir)/dependencies/xz/src/liblzma/delta -I$(srcdir)/dependencies/xz/src/liblzma\n\n\n\nliblocalmd5_a_SOURCES = dependencies/md5/md5.c\n\nAM_CXXFLAGS = $(CXX11_FLAGS) $(CODEC_FLAGS) $(SYSTEM_DEPENDENCIES_CFLAGS) $(ARITHMETIC_CODER_CFLAGS) $(MEMORY_MANAGEMENT_CFLAGS) $(THREAD_FLAGS) $(BILLING_FLAGS) $(PICKY_CXXFLAGS) $(BENCHMARK_CFLAGS) $(ARCH_FLAGS) $(SANITIZE_FLAGS) $(NODEBUG_CXXFLAGS) -DGIT_REVISION=\\\"$(shell git describe --dirty --always 2> /dev/null || basename `pwd`)\\\" $(includes)\n\nAM_CFLAGS = $(C99_FLAGS) $(CODEC_FLAGS) $(THREAD_FLAGS) $(BILLING_FLAGS) $(BENCHMARK_CFLAGS) $(PICKY_CFLAGS) $(ARCH_FLAGS) $(SANITIZE_FLAGS) $(NODEBUG_CXXFLAGS) -I$(srcdir)/dependencies/brotli/c/include\n\nnoinst_LIBRARIES = liblocalzlib.a liblocalmd5.a libtestdriver.a liblocalbrotli.a\n\nbin_PROGRAMS = lepton\nnoinst_PROGRAMS = test_suite/test_invariants\n\nlepton_LDADD = liblocalmd5.a liblocalbrotli.a $(SYSTEM_DEPENDENCIES_LDFLAGS) -lpthread\n\nlepton_SOURCES = \\\n   src/io/MemReadWriter.cc \\\n   src/lepton/base_coders.hh \\\n   src/lepton/simple_encoder.hh \\\n   src/lepton/bitops.cc \\\n   src/lepton/smalljpg.hh \\\n   src/lepton/bitops.hh \\\n   src/lepton/benchmark.cc \\\n   src/lepton/idct.cc \\\n   src/lepton/idct.hh \\\n   src/lepton/component_info.hh \\\n   src/lepton/htables.hh \\\n   src/lepton/fork_serve.cc \\\n   src/lepton/fork_serve.hh \\\n   src/lepton/thread_handoff.cc \\\n   src/lepton/thread_handoff.hh \\\n   src/lepton/socket_serve.cc \\\n   src/lepton/socket_serve.hh \\\n   src/lepton/jpgcoder.cc \\\n   src/lepton/concat.cc \\\n   src/lepton/main.cc \\\n   src/lepton/validation.hh \\\n   src/lepton/validation.cc \\\n   src/lepton/generic_compress.hh \\\n   src/lepton/generic_compress.cc \\\n   src/lepton/recoder.cc \\\n   src/lepton/uncompressed_components.cc \\\n   src/lepton/jpgcoder.hh \\\n   src/lepton/recoder.hh \\\n   src/lepton/uncompressed_components.hh \\\n   src/lepton/lepton_codec.cc \\\n   src/lepton/lepton_codec.hh \\\n   src/lepton/vp8_decoder.cc \\\n   src/lepton/simple_decoder.cc \\\n   src/lepton/vp8_decoder.hh \\\n   src/lepton/simple_decoder.hh \\\n   src/lepton/vp8_encoder.cc \\\n   src/lepton/simple_encoder.cc \\\n   src/lepton/vp8_encoder.hh \\\n   src/io/Allocator.hh \\\n   src/io/MemMgrAllocator.hh \\\n   src/io/MemMgrAllocator.cc \\\n   src/io/BufferedIO.hh \\\n   src/io/ZlibCompression.cc \\\n   src/io/ZlibCompression.hh \\\n   src/io/BrotliCompression.cc \\\n   src/io/BrotliCompression.hh \\\n   src/io/Seccomp.hh \\\n   src/io/Seccomp.cc \\\n   src/io/seccomp-bpf.hh \\\n   src/io/Error.hh \\\n   src/io/Reader.hh \\\n   src/io/MuxReader.hh \\\n   src/io/ioutil.hh \\\n   src/io/ioutil.cc \\\n   src/io/Zlib0.hh \\\n   src/io/Zlib0.cc \\\n   src/io/DecoderPlatform.hh \\\n   src/vp8/util/generic_worker.hh \\\n   src/vp8/util/options.hh \\\n   src/vp8/util/generic_worker.cc \\\n   src/vp8/util/debug.cc \\\n   src/vp8/util/debug.h \\\n   src/vp8/util/memory.cc \\\n   src/vp8/util/memory.hh \\\n   src/vp8/util/billing.cc \\\n   src/vp8/util/billing.hh \\\n   src/vp8/util/nd_array.hh \\\n   src/vp8/util/aligned_block.hh \\\n   src/vp8/util/block_based_image.hh \\\n   src/vp8/util/option.hh \\\n   src/vp8/model/JpegArithmeticCoder.cc \\\n   src/vp8/model/JpegArithmeticCoder.hh \\\n   src/vp8/model/branch.hh \\\n   src/vp8/model/model.cc \\\n   src/vp8/model/model.hh \\\n   src/vp8/model/numeric.cc \\\n   src/vp8/model/numeric.hh \\\n   src/vp8/model/jpeg_meta.hh \\\n   src/vp8/encoder/encoder.cc \\\n   src/vp8/decoder/decoder.cc \\\n   src/vp8/encoder/bool_encoder.hh \\\n   src/vp8/decoder/bool_decoder.hh \\\n   src/vp8/encoder/boolwriter.hh \\\n   src/vp8/encoder/boolwriter.cc \\\n   src/vp8/decoder/boolreader.hh \\\n   src/vp8/decoder/boolreader.cc \\\n   src/vp8/encoder/vpx_bool_writer.hh \\\n   src/vp8/decoder/vpx_bool_reader.hh\n\n\nliblocalbrotli_a_SOURCES =     dependencies/brotli/c/include/brotli/encode.h \\\n    dependencies/brotli/c/include/brotli/types.h \\\n    dependencies/brotli/c/include/brotli/decode.h \\\n    dependencies/brotli/c/include/brotli/port.h \\\n    dependencies/brotli/c/common/constants.h \\\n    dependencies/brotli/c/common/version.h \\\n    dependencies/brotli/c/common/dictionary.h \\\n    dependencies/brotli/c/common/dictionary.c \\\n    dependencies/brotli/c/enc/block_encoder_inc.h \\\n    dependencies/brotli/c/enc/memory.c \\\n    dependencies/brotli/c/enc/bit_cost.h \\\n    dependencies/brotli/c/enc/ringbuffer.h \\\n    dependencies/brotli/c/enc/entropy_encode.c \\\n    dependencies/brotli/c/enc/quality.h \\\n    dependencies/brotli/c/enc/utf8_util.h \\\n    dependencies/brotli/c/enc/block_splitter_inc.h \\\n    dependencies/brotli/c/enc/block_splitter.h \\\n    dependencies/brotli/c/enc/compress_fragment.c \\\n    dependencies/brotli/c/enc/utf8_util.c \\\n    dependencies/brotli/c/enc/cluster_inc.h \\\n    dependencies/brotli/c/enc/cluster.h \\\n    dependencies/brotli/c/enc/literal_cost.c \\\n    dependencies/brotli/c/enc/static_dict.c \\\n    dependencies/brotli/c/enc/backward_references_hq.c \\\n    dependencies/brotli/c/enc/hash.h \\\n    dependencies/brotli/c/enc/literal_cost.h \\\n    dependencies/brotli/c/enc/compress_fragment_two_pass.c \\\n    dependencies/brotli/c/enc/dictionary_hash.c \\\n    dependencies/brotli/c/enc/entropy_encode.h \\\n    dependencies/brotli/c/enc/command.h \\\n    dependencies/brotli/c/enc/metablock_inc.h \\\n    dependencies/brotli/c/enc/context.h \\\n    dependencies/brotli/c/enc/metablock.h \\\n    dependencies/brotli/c/enc/hash_longest_match_quickly_inc.h \\\n    dependencies/brotli/c/enc/hash_longest_match_inc.h \\\n    dependencies/brotli/c/enc/hash_to_binary_tree_inc.h \\\n    dependencies/brotli/c/enc/backward_references.h \\\n    dependencies/brotli/c/enc/find_match_length.h \\\n    dependencies/brotli/c/enc/prefix.h \\\n    dependencies/brotli/c/enc/static_dict.h \\\n    dependencies/brotli/c/enc/cluster.c \\\n    dependencies/brotli/c/enc/brotli_bit_stream.h \\\n    dependencies/brotli/c/enc/bit_cost_inc.h \\\n    dependencies/brotli/c/enc/metablock.c \\\n    dependencies/brotli/c/enc/backward_references_hq.h \\\n    dependencies/brotli/c/enc/write_bits.h \\\n    dependencies/brotli/c/enc/entropy_encode_static.h \\\n    dependencies/brotli/c/enc/histogram.c \\\n    dependencies/brotli/c/enc/encode.c \\\n    dependencies/brotli/c/enc/port.h \\\n    dependencies/brotli/c/enc/compress_fragment.h \\\n    dependencies/brotli/c/enc/static_dict_lut.h \\\n    dependencies/brotli/c/enc/histogram.h \\\n    dependencies/brotli/c/enc/hash_forgetful_chain_inc.h \\\n    dependencies/brotli/c/enc/block_splitter.c \\\n    dependencies/brotli/c/enc/brotli_bit_stream.c \\\n    dependencies/brotli/c/enc/compress_fragment_two_pass.h \\\n    dependencies/brotli/c/enc/backward_references_inc.h \\\n    dependencies/brotli/c/enc/bit_cost.c \\\n    dependencies/brotli/c/enc/backward_references.c \\\n    dependencies/brotli/c/enc/histogram_inc.h \\\n    dependencies/brotli/c/enc/hash_longest_match64_inc.h \\\n    dependencies/brotli/c/enc/fast_log.h \\\n    dependencies/brotli/c/enc/memory.h \\\n    dependencies/brotli/c/enc/dictionary_hash.h \\\n    dependencies/brotli/c/dec/state.h \\\n    dependencies/brotli/c/dec/huffman.h \\\n    dependencies/brotli/c/dec/transform.h \\\n    dependencies/brotli/c/dec/state.c \\\n    dependencies/brotli/c/dec/bit_reader.c \\\n    dependencies/brotli/c/dec/huffman.c \\\n    dependencies/brotli/c/dec/context.h \\\n    dependencies/brotli/c/dec/bit_reader.h \\\n    dependencies/brotli/c/dec/prefix.h \\\n    dependencies/brotli/c/dec/port.h \\\n    dependencies/brotli/c/dec/decode.c\n\n\nliblocalzlib_a_SOURCES = dependencies/zlib/inflate.c \\\ndependencies/zlib/inflate.h \\\ndependencies/zlib/gzguts.h \\\ndependencies/zlib/infback.c \\\ndependencies/zlib/trees.c \\\ndependencies/zlib/adler32.c \\\ndependencies/zlib/gzclose.c \\\ndependencies/zlib/inftrees.h \\\ndependencies/zlib/zconf.h \\\ndependencies/zlib/compress.c \\\ndependencies/zlib/crc32.c \\\ndependencies/zlib/crc32.h \\\ndependencies/zlib/trees.h \\\ndependencies/zlib/inftrees.c \\\ndependencies/zlib/zutil.c \\\ndependencies/zlib/zutil.h \\\ndependencies/zlib/zlib.h \\\ndependencies/zlib/inffixed.h \\\ndependencies/zlib/deflate.c \\\ndependencies/zlib/inffast.h \\\ndependencies/zlib/inffast.c \\\ndependencies/zlib/uncompr.c \\\ndependencies/zlib/deflate.h\n\nlibtestdriver_a_SOURCES = test_suite/timing_driver.cc\n\ntest_suite_test_invariants_SOURCES = test_suite/test_invariants.cc    src/io/Allocator.hh \\\n   src/vp8/util/memory.cc \\\n   src/io/BufferedIO.hh \\\n   src/io/Error.hh \\\n   src/io/Reader.hh \\\n   src/io/MuxReader.hh \\\n   src/io/ioutil.hh \\\n   src/vp8/util/billing.cc \\\n   src/vp8/util/billing.hh \\\n   src/vp8/model/numeric.cc \\\n   src/vp8/model/numeric.hh \\\n   src/io/ioutil.cc \\\n   src/io/Zlib0.hh \\\n   src/io/Zlib0.cc \\\n   src/lepton/thread_handoff.cc \\\n   src/lepton/thread_handoff.hh \\\n   src/io/MemReadWriter.cc \\\n   src/io/MemMgrAllocator.cc \\\n   src/io/MemMgrAllocator.hh \\\n   src/io/DecoderPlatform.hh\n\ntest_suite_test_invariants_LDADD = $(SYSTEM_DEPENDENCIES_LDFLAGS) liblocalmd5.a\n\ncheck_PROGRAMS = test_suite/test_recode_memory_bound test_suite/test_truncate_lowmem test_suite/test_android_lowmem test_suite/test_invariants test_suite/test_baseline_ujg test_suite/test_baseline test_suite/test_misc test_suite/test_iphone test_suite/test_phone_outdoor test_suite/test_truncate test_suite/test_single_row_truncate test_suite/test_SLR test_suite/test_progressive_ujg test_suite/test_progressive_disallowed test_suite/test_progressive test_suite/test_arithmetic_failfast test_suite/test_hq test_suite/test_baseline_unjailed test_suite/test_baseline_unjailed_thread test_suite/test_baseline_unjailed_decode test_suite/test_baseline_unjailed_decode_thread test_suite/test_seccomp_encode_main test_suite/test_seccomp_encode_thread  test_suite/test_seccomp_decode_main test_suite/test_seccomp_decode_thread test_suite/test_nofsync test_suite/test_colorswap test_suite/test_odd_rst test_suite/test_trailing_header test_suite/test_trailing_rst test_suite/test_gray2sf test_suite/test_truncated_zero_run test_suite/test_bad_zero_run\n\ntest_suite_test_baseline_ujg_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_ujg_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_baseline_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON\ntest_suite_test_baseline_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_baseline_unjailed_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_unjailed_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DUNJAILED -DINJECT_SYSCALL=1\ntest_suite_test_baseline_unjailed_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_baseline_unjailed_thread_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_unjailed_thread_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DUNJAILED -DINJECT_SYSCALL=2\ntest_suite_test_baseline_unjailed_thread_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_baseline_unjailed_decode_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_unjailed_decode_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DUNJAILED -DINJECT_SYSCALL=3\ntest_suite_test_baseline_unjailed_decode_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_baseline_unjailed_decode_thread_SOURCES = test_suite/test_harness.cc\ntest_suite_test_baseline_unjailed_decode_thread_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DUNJAILED -DINJECT_SYSCALL=4\ntest_suite_test_baseline_unjailed_decode_thread_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_seccomp_encode_main_SOURCES = test_suite/test_harness.cc\ntest_suite_test_seccomp_encode_main_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DINJECT_SYSCALL=1 -DEXPECT_LINUX_FAILURE\ntest_suite_test_seccomp_encode_main_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_seccomp_encode_thread_SOURCES = test_suite/test_harness.cc\ntest_suite_test_seccomp_encode_thread_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DINJECT_SYSCALL=2 -DEXPECT_LINUX_FAILURE\ntest_suite_test_seccomp_encode_thread_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_seccomp_decode_main_SOURCES = test_suite/test_harness.cc\ntest_suite_test_seccomp_decode_main_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DINJECT_SYSCALL=3 -DEXPECT_LINUX_DECODE_FAILURE\ntest_suite_test_seccomp_decode_main_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_seccomp_decode_thread_SOURCES = test_suite/test_harness.cc\ntest_suite_test_seccomp_decode_thread_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DINJECT_SYSCALL=4 -DEXPECT_LINUX_DECODE_FAILURE\ntest_suite_test_seccomp_decode_thread_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_phone_outdoor_SOURCES = test_suite/test_harness.cc\ntest_suite_test_phone_outdoor_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=iphonecity -DZLIB_HEADER\ntest_suite_test_phone_outdoor_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_trailing_header_SOURCES = test_suite/test_harness.cc\ntest_suite_test_trailing_header_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=androidtrail\ntest_suite_test_trailing_header_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_iphone_SOURCES = test_suite/test_harness.cc\ntest_suite_test_iphone_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=iphone\ntest_suite_test_iphone_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_SLR_SOURCES = test_suite/test_harness.cc\ntest_suite_test_SLR_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=slrindoor -DTEST_FILE0=slrhills -DTEST_FILE1=slrcity -DMORE_MEMORY=\\\"256M\\\"\ntest_suite_test_SLR_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_hq_SOURCES = test_suite/test_harness.cc\ntest_suite_test_hq_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=hq -DMORE_MEMORY=\\\"360M\\\" -DTHREAD_MEMORY=\\\"24M\\\" -DSINGLETHREAD_MEMORY=\\\"87M\\\"\ntest_suite_test_hq_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_misc_SOURCES = test_suite/test_harness.cc\ntest_suite_test_misc_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=androidcrop -DTEST_FILE0=androidcropoptions -DTEST_FILE1=iphonecrop -DTEST_FILE2=iphonecrop2 -DZLIB_HEADER\n\ntest_suite_test_misc_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_arithmetic_failfast_SOURCES = test_suite/test_harness.cc\ntest_suite_test_arithmetic_failfast_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=arithmetic -DEXPECT_FAILURE\ntest_suite_test_arithmetic_failfast_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_recode_memory_bound_SOURCES = test_suite/test_harness.cc\ntest_suite_test_recode_memory_bound_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=android -DEXPECT_FAILURE -DSINGLETHREAD_MEMORY=\\\"6M\\\"\ntest_suite_test_recode_memory_bound_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_progressive_ujg_SOURCES = test_suite/test_harness.cc\ntest_suite_test_progressive_ujg_CXXFLAGS = $(AM_CXXFLAGS) -DTEST_FILE=iphoneprogressive -DTEST_FILE0=androidprogressive -DTEST_FILE1=iphoneprogressive2 -DALLOW_PROGRESSIVE\ntest_suite_test_progressive_ujg_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_progressive_SOURCES = test_suite/test_harness.cc\ntest_suite_test_progressive_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=iphoneprogressive -DTEST_FILE0=androidprogressive -DTEST_FILE1=iphoneprogressive2 -DALLOW_PROGRESSIVE\ntest_suite_test_progressive_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_progressive_disallowed_SOURCES = test_suite/test_harness.cc\ntest_suite_test_progressive_disallowed_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=iphoneprogressive -DEXPECT_FAILURE -DDISALLOW_PROGRESSIVE\ntest_suite_test_progressive_disallowed_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_truncate_SOURCES = test_suite/test_harness.cc\ntest_suite_test_truncate_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=trunc\ntest_suite_test_truncate_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_single_row_truncate_SOURCES = test_suite/test_harness.cc\ntest_suite_test_single_row_truncate_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=singlerowtrunc\ntest_suite_test_single_row_truncate_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_truncate_lowmem_SOURCES = test_suite/test_harness.cc\ntest_suite_test_truncate_lowmem_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=trunc -DSINGLETHREAD -DDECODE_MEMORY=\\\"18M\\\" -DTHREAD_MEMORY=\\\"0M\\\"\ntest_suite_test_truncate_lowmem_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_android_lowmem_SOURCES = test_suite/test_harness.cc\ntest_suite_test_android_lowmem_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=android -DTEST_FILE0=grayscale -DSINGLETHREAD -DDECODE_MEMORY=\\\"18M\\\" -DTHREAD_MEMORY=\\\"0M\\\"\ntest_suite_test_android_lowmem_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_nofsync_SOURCES = test_suite/test_harness.cc\ntest_suite_test_nofsync_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=nofsync -DTEST_FILE0=grayscale\ntest_suite_test_nofsync_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_gray2sf_SOURCES = test_suite/test_harness.cc\ntest_suite_test_gray2sf_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=gray2sf\ntest_suite_test_gray2sf_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_colorswap_SOURCES = test_suite/test_harness.cc\ntest_suite_test_colorswap_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=colorswap -DFORCE_NO_ANS\ntest_suite_test_colorswap_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_odd_rst_SOURCES = test_suite/test_harness.cc\ntest_suite_test_odd_rst_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=narrowrst\ntest_suite_test_odd_rst_LDADD = libtestdriver.a -lpthread\ntest_suite_test_truncated_zero_run_SOURCES = test_suite/test_harness.cc\ntest_suite_test_truncated_zero_run_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=truncatedzerorun\ntest_suite_test_truncated_zero_run_LDADD = libtestdriver.a -lpthread\n\ntest_suite_test_bad_zero_run_SOURCES = test_suite/test_harness.cc\ntest_suite_test_bad_zero_run_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=badzerorun -DEXPECT_FAILURE\ntest_suite_test_bad_zero_run_LDADD = libtestdriver.a -lpthread\ntest_suite_test_trailing_rst_SOURCES = test_suite/test_harness.cc\ntest_suite_test_trailing_rst_CXXFLAGS = $(AM_CXXFLAGS) -DUSE_LEPTON -DTEST_FILE=trailingrst -DTEST_FILE0=trailingrst2\ntest_suite_test_trailing_rst_LDADD = libtestdriver.a -lpthread\n\nTESTS = test_suite/test_recode_memory_bound test_suite/test_invariants test_suite/test_baseline_ujg test_suite/test_baseline test_suite/test_misc test_suite/test_iphone test_suite/test_phone_outdoor test_suite/test_truncate test_suite/test_single_row_truncate test_suite/test_android_lowmem test_suite/test_SLR test_suite/test_progressive_ujg test_suite/test_progressive_disallowed test_suite/test_progressive test_suite/test_arithmetic_failfast test_suite/test_hq test_suite/forktester.py test_suite/sockettester.py src/lepton/test_custom_table.sh test_suite/test_baseline_unjailed test_suite/test_baseline_unjailed_thread test_suite/test_baseline_unjailed_decode test_suite/test_baseline_unjailed_decode_thread test_suite/test_seccomp_encode_main test_suite/test_seccomp_encode_thread  test_suite/test_seccomp_decode_main test_suite/test_seccomp_decode_thread test_suite/test_truncate_lowmem test_suite/test_nofsync test_suite/test_colorswap test_suite/test_odd_rst test_suite/test_trailing_header test_suite/test_trailing_rst test_suite/test_legacy.sh test_suite/test_roundtrip.sh test_suite/test_embedded.sh test_suite/test_16threads.sh test_suite/test_future_compat.sh test_suite/test_gray2sf test_suite/test_2nd_block.sh test_suite/test_3rd_block.sh test_suite/test_last_block.sh test_suite/test_truncated_zero_run test_suite/test_bad_zero_run test_suite/test_concat.sh test_suite/test_permissive.sh\n\ndist_check_SCRIPTS = test_suite/test_recode_memory_bound test_suite/test_invariants test_suite/test_baseline_ujg test_suite/test_baseline test_suite/test_misc test_suite/test_iphone test_suite/test_phone_outdoor test_suite/test_truncate test_suite/test_single_row_truncate test_suite/test_android_lowmem test_suite/test_SLR test_suite/test_progressive_ujg test_suite/test_progressive_disallowed test_suite/test_progressive test_suite/test_arithmetic_failfast test_suite/test_hq test_suite/test_baseline_unjailed test_suite/test_baseline_unjailed_thread test_suite/test_baseline_unjailed_decode test_suite/test_baseline_unjailed_decode_thread test_suite/test_seccomp_encode_main test_suite/test_seccomp_encode_thread  test_suite/test_seccomp_decode_main test_suite/test_seccomp_decode_thread test_suite/test_truncate_lowmem test_suite/test_nofsync test_suite/test_colorswap test_suite/test_odd_rst test_suite/test_trailing_header test_suite/test_trailing_rst test_suite/test_legacy.sh test_suite/test_roundtrip.sh test_suite/test_embedded.sh test_suite/test_16threads.sh test_suite/test_future_compat.sh test_suite/test_gray2sf test_suite/test_2nd_block.sh test_suite/test_3rd_block.sh test_suite/test_last_block.sh test_suite/test_truncated_zero_run test_suite/test_bad_zero_run test_suite/test_concat.sh test_suite/test_permissive.sh\n\ntest:\n\t$(MAKE) check\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6923828125,
          "content": "<blockquote>\n<b>⚠️&nbsp;&nbsp;Deprecation Notice for the Dropbox Lepton project</b><br><br>\n\n<em>Dear Lepton users and developers,<br><br>\nThank you so much for using and contributing to Lepton over the years! We’ve recently realized that we no longer have sufficient resources to adequately support this project. This includes providing timely fixes to bugs and vulnerabilities such as those that were [recently reported to us](https://github.com/dropbox/lepton/issues/158). While we did ensure that the reported vulnerabilities don’t affect our internal use of Lepton, we unfortunately don’t have the capacity to properly fix these and future issues in this public repo. Therefore, after some consideration, we’ve decided to deprecate and archive the project. We apologize for any inconvenience and appreciate your understanding.<br><br>\n    \nIf you would like to continue using Lepton, please check out Microsoft’s [implementation of Lepton in Rust](https://github.com/microsoft/lepton_jpeg_rust) or alternatively consider switching to other lossless compression methods such as [Brotli](https://dropbox.tech/infrastructure/lossless-compression-with-brotli) or to modern image formats such as [WebP](https://en.wikipedia.org/wiki/WebP) or [JPEG XL](https://en.wikipedia.org/wiki/JPEG_XL).</em>\n</blockquote>\n\n# Lepton\n\nLepton is a tool and file format for losslessly compressing JPEGs by an average of 22%.\n\nThis can be used to archive large photo collections, or to serve images live and save 22% bandwidth.\n\n\n[![Build Status](https://travis-ci.org/dropbox/lepton.svg?branch=master)](https://travis-ci.org/dropbox/lepton)\n\n\n## Build directions\nUsing a single core\n\n    ./autogen.sh\n    ./configure\n    make\n    make check\n\nFor multiprocessor machines:\n\n    ./autogen.sh\n    ./configure\n    make -j8\n    make check -j8\n\nUsing CMAKE:\n\n    mkdir -p build\n    cd build\n    cmake ..\n    make -j8\n\nOn Windows\n\n    mkdir -p build\n    cd build\n    \"c:\\Program Files\\CMake\\bin\\cmake\" ..\n    start .\n    REM Double click the Visual Studio project\n\n## Usage\n\nTo roundtrip (compress and decompress) an image, `original.jpg`, do the following:\n\n    ./lepton original.jpg compressed.lep\n    ./lepton compressed.lep restored_original.jpg\n\nOr all at once:\n\n    ./lepton original.jpg compressed.lep && ./lepton compressed.lep restored_original.jpg && diff restored_original.jpg original.jpg && echo no differences\n\n\nLepton may also be used with pipes -- be sure to check the exit code when using pipes\nas if compression fails lepton will produce 0 bytes and return a nonzero exit code\n(failure). In this case do not assume the 0 byte file is representative of the original.\n\n    ./lepton - < original.jpg > compressed.lep\n    ./lepton - < compressed.lep > restored_original.jpg\n\n\nYou may specify higher memory limits than the default for lepton to handle bigger images:\n\n    ./lepton -memory=1024M -threadmemory=128M input_file output_file\n\nAdditionally you can configure lepton to process progressive jpegs.\nWarning: these take more memory to decode than normal JPEGs since the entire framebuffer\nmust be kept in memory for the duration of the decompression, instead of just 2 rows of blocks.\n\n    ./lepton -allowprogressive -memory=1024M -threadmemory=128M progressive.jpg compressedprogressive.lep\n\n\n## Submitting pull requests to lepton\n\nPlease begin by filling out the contributor form and asserting that\n\n    The code I'm contributing is mine, and I have the right to license it.\n    I'm granting you a license to distribute said code under the terms of this agreement.\n\nat this page:\nhttps://opensource.dropbox.com/cla/\n\nThen create a new pull request through the github interface\n\n## Debugging\n\nLepton is designed to be easy to debug, but a command line requirement is necessary to prevent\nthe standard forks that let it do a secure verification in a separate process.\n\nTo avoid setting follow fork flags, please pass -skipverify to the command line.\nThis will stop verification and let you debug the app as a single process application.\nIf the bug happens in single threaded mode, also you can pass -singlethread which makes\nit easier to step through the code without other threads hitting breakpoints.\n\n## Bindings for other languages\n\n* NodeJS: https://github.com/whitef0x0/node-lepton\n* PHP: https://github.com/gtuk/php-lepton\n\n## Acknowledgements\n\nMany thanks to Matthias Stirner and HTW Aalen University for the development of the [uncmpJPG](http://packjpg.encode.su/?page_id=178) library.\n\nThanks to the VPX authors for their highly tuned bool reader and bool writer implementations.\n\n## Related Work\n\nBe sure to read the groundbreaking research done by Matthias Stirner, Gehard Seelman and HTW Aalen University in their [2007 paper](http://www.elektronik.htw-aalen.de/packjpg/_notes/PCS2007_PJPG_paper_final.pdf) and check out their excellent [PackJPG](http://github.com/packjpg) repositories for compression of JPEG MP3 BMP and PMN formats.\n\nAlso the [paq](http://mattmahoney.net/dc/) algorithms combine for a highly compressed JPEG result when decompression time is less critical.\n\nWhen the compressed JPEG needs to also be a JPEG, there is [mozjpg](https://github.com/mozilla/mozjpeg) to explore as well.\n\n## License\n\nUnless otherwise noted:\n\n```\nCopyright (c) 2016 Dropbox, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.1396484375,
          "content": "#!/bin/sh\ngit submodule init\ngit submodule update || ( rm -rf -- \"`dirname $0`/dependencies/xz\" && git submodule update )\n\nexec autoreconf -fi\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 3.8056640625,
          "content": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.61])\nAC_INIT([lepton], [0.01], [danielrh@dropbox.com])\nAM_INIT_AUTOMAKE([subdir-objects foreign])\nAC_CONFIG_SRCDIR([src/lepton/vp8_encoder.hh])\nAC_CONFIG_HEADERS([config.h])\n\n# Add preprocessor flags\nCXX11_FLAGS=\"-std=c++11\"\nAC_SUBST([CXX11_FLAGS])\nC99_FLAGS=\"-std=c99\"\nAC_SUBST([C99_FLAGS])\n\n# Add picky flags\nPICKY_CFLAGS=\"-pedantic -Wall -Wextra -Wno-write-strings -Wno-unused-parameter\"\nAC_SUBST([PICKY_CFLAGS])\n\nPICKY_CXXFLAGS=\"-pedantic -Wall -Wextra -Wno-write-strings -Wno-unused-parameter -fno-exceptions -fno-rtti\"\nAC_SUBST([PICKY_CXXFLAGS])\n\n# Add -DNDEBUG by default\nAC_ARG_ENABLE([debug],\n  [AS_HELP_STRING([--enable-debug],\n    [Enable assertions @<:@no@:>@])],\n  [NODEBUG_CXXFLAGS=\"\"],\n  [NODEBUG_CXXFLAGS=\"-DNDEBUG\"])\nAC_SUBST(NODEBUG_CXXFLAGS)\n\n# Add optimizer flags\n\nAC_ARG_ENABLE([native-opt],\n  [AS_HELP_STRING([--disable-native-opt])])\nARCH_FLAGS=\"-march=native\"\nAS_IF([test \"x$enable_native_opt\" = \"xno\"], [\n  ARCH_FLAGS=\"\"])\n\nAC_ARG_ENABLE([vectorization],\n  [AS_HELP_STRING([--disable-vectorization])])\nAS_IF([test \"x$enable_vectorization\" = \"xno\"], [\n  ARCH_FLAGS=\"$ARCH_FLAGS -DUSE_SCALAR\"])\nAC_SUBST([ARCH_FLAGS])\n\n# Allow sanitizing\nAC_ARG_ENABLE([sanitize],\n  [AS_HELP_STRING([--enable-sanitize],\n    [Enable address and undefined-behavior sanitizers @<:@no@:>@])],\n  [SANITIZE_FLAGS=\"-fsanitize=address,undefined\"],\n  [SANITIZE_FLAGS=\"\"])\nAC_SUBST(SANITIZE_FLAGS)\nSYSTEM_DEPENDENCIES_LDFLAGS=\"liblocalzlib.a\"\n\nAC_ARG_ENABLE([system-dependencies],\n  [AS_HELP_STRING([--enable-system-dependencies],\n    [Rely on system installed version of zlib @<:@no@:>@])],\n  [SYSTEM_DEPENDENCIES_CFLAGS=\"-DUSE_SYSTEM_LIBRARIES \" SYSTEM_DEPENDENCIES_LDFLAGS=\"-lz\"],\n  [SYSTEM_DEPENDENCIES_LDFLAGS=\"liblocalzlib.a\"])\nAC_SUBST([SYSTEM_DEPENDENCIES_LDFLAGS])\nAC_SUBST([SYSTEM_DEPENDENCIES_CFLAGS])\n\n\nAC_ARG_ENABLE([custom-allocator],\n  [AS_HELP_STRING([--enable-custom-allocator]\n    [Use custom allocators instead of the standard ones @<:@no@:>@])],\n  [MEMORY_MANAGEMENT_CFLAGS=\"\"],\n  [MEMORY_MANAGEMENT_CFLAGS=\"-DUSE_STANDARD_MEMORY_ALLOCATORS\"])\nAC_SUBST([MEMORY_MANAGEMENT_CFLAGS])\n\n\nAC_ARG_ENABLE([ans-experimental],\n  [AS_HELP_STRING([--enable-ans-experimental]\n    [Enable ANS arithmetic coder as an option instead of the VPX arithmetic coder @<:@no@:>@])],\n  [ARITHMETIC_CODER_CFLAGS=\"-DENABLE_ANS_EXPERIMENTAL\"],\n  [ARITHMETIC_CODER_CFLAGS=\"\"])\nAC_SUBST([ARITHMETIC_CODER_CFLAGS])\n\n\nAC_ARG_ENABLE([benchmark],\n  [AS_HELP_STRING([--enable-benchmark]\n    [Placeholder flag to enable longer/more in depth benchmark @<:@no@:>@])],\n  [BENCHMARK_CFLAGS=\"-DREALISTIC_BENCHMARK\"],\n  [BENCHMARK_CFLAGS=\"\"])\nAC_SUBST([BENCHMARK_CFLAGS])\n\n\n# Make single thread the default\nAC_ARG_ENABLE([best-ratio-slow-decompression],\n  [AS_HELP_STRING([--enable-best-ratio-slow-decompression],\n    [Turn off multithreading to train priors better @<:@no@:>@])],\n  [THREAD_FLAGS=\"-DDEFAULT_SINGLE_THREAD \"],\n  [THREAD_FLAGS=\"\"])\nAC_SUBST([THREAD_FLAGS])\n\n# Make single thread the default\nAC_ARG_ENABLE([billing],\n  [AS_HELP_STRING([--enable-billing],\n    [Print out a bill receipt @<:@no@:>@])],\n  [BILLING_FLAGS=\"-DENABLE_BILLING \"],\n  [BILLING_FLAGS=\"\"])\nAC_SUBST([BILLING_FLAGS])\n\nCODEC_FLAGS=\"\"\n# Disable advanced features\nAC_ARG_ENABLE([advanced-jpeg-features],\n  [AS_HELP_STRING([--disable-advanced-jpeg-features])])\n\nAS_IF([test \"x$enable_advanced_jpeg_features\" != \"xno\"], [\n  CODEC_FLAGS=\"-DDEFAULT_ALLOW_PROGRESSIVE -DHIGH_MEMORY\"])\nAC_SUBST([CODEC_FLAGS])\n\n\nif test -z \"$CXXFLAGS\"; then\n    CXXFLAGS='-O3 -g -DNDEBUG'\nfi\n\n# Checks for programs.\nAC_PROG_CXX\nAC_PROG_CC\nAC_PROG_RANLIB\n\n# Checks for header files.\n\n# Checks for typedefs, structures, and compiler characteristics.\n\n# Checks for library functions.\n\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n"
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_suite",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}