{
  "metadata": {
    "timestamp": 1736566078007,
    "page": 67,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lltcggie/waifu2x-caffe",
      "stars": 8109,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.767578125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin \n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n*.caffemodel\n*.protobin\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.423828125,
          "content": "[submodule \"rapidjson\"]\n\tpath = rapidjson\n\turl = https://github.com/miloyip/rapidjson.git\n[submodule \"stb\"]\n\tpath = stb\n\turl = https://github.com/nothings/stb.git\n[submodule \"msgpack-c\"]\n\tpath = msgpack-c\n\turl = https://github.com/msgpack/msgpack-c\n[submodule \"caffe\"]\n\tpath = caffe\n\turl = https://github.com/lltcggie/caffe.git\n\tbranch = lltcggie/custom\n[submodule \"opencv\"]\n\tpath = opencv\n\turl = https://github.com/opencv/opencv.git\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 lltcggie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README-EN.md",
          "type": "blob",
          "size": 24.8447265625,
          "content": "waifu2x-caffe (for Windows)\n----------\n\n Author: lltcggie\n\nThis software uses only the conversion function of the image conversion software \"[waifu2x](https://github.com/nagadomi/waifu2x)\"\nThis software was rewritten using [Caffe](http://caffe.berkeleyvision.org/) and built for Windows.\nIt can be converted using CPU, but it can be converted faster than CPU by using CUDA (or cuDNN).\n\nGUI supports English, Japanese, Simplified Chinese, Traditional Chinese, Korean, Turkish, Spanish, Russian, and French.\n\nYou can download the software from [the releases page](https://github.com/lltcggie/waifu2x-caffe/releases).\n\n\n Requirements\n----------\n\nAt least the following environment is required to run this software.\n\n * OS: Windows Vista or later 64bit (There is no exe for 32bit)\n * Memory: 1GB or more of free memory (however, this depends on the image size to be converted)\n * GPU: NVIDIA GPU with Compute Capability 3.5 or higher\n * Microsoft Visual C++ 2015 Redistributable Package Update 3 (x64 version) must be installed (Required)\n    - The above package is [here.](https://www.microsoft.com/ja-jp/download/details.aspx?id=53587)\n    - After pressing the `Download` button, select `vcredist_x64.exe` to download and install.\n    - If you can't find it, try searching with \"Visual C++ 2015 Redistributable Package Update 3\".\n\nIf you want to know the Compute Capability of your GPU, check it out on [this page](https://developer.nvidia.com/cuda-gpus).\n\n\n How to use (GUI version)\n--------\n\n\"Waifu2x-caffe.exe\" is GUI software. Start by double-clicking.\nOr, drag and drop the file or folder to \"waifu2x-caffe.exe\" with Explorer and the conversion will be performed with the settings at the last startup.\nIn that case, depending on the settings, if the conversion is successful, the dialog will be closed automatically.\nYou can also use the GUI to set options on the command line.\nFor details, see the section on command line options (common) and command line options (GUI version).\n\nAfter starting, drag and drop an image or folder into the \"Input path\" field to automatically set the \"Output path\" field.\nIf you want to change the output destination, change the \"Output path\" column.\n\nYou can change the conversion settings to your liking.\n\n\n## Input/output setting\n    Settings related to file input/output.\n\n### Input path\n    Specify the path of the file you want to convert.\n    If you specify a folder, the files with the \"extension to be converted in the folder\"\n    including subfolders will be converted.\n    \n    You can specify multiple files and folders by dragging.\n    In that case, the files are output in the new folder while maintaining the folder structure.\n    (In the input path column, \"(Multi Files)\" is displayed. The output folder name is generated\n    from the file and folder name that the mouse holds.)\n    When you click the browse button to select a file, you can select a single file, a folder, or multiple files.\n\n### Output path\n    Specify the path to save the converted image.\n    When a folder is specified in \"Input path\", the converted file is saved in the specified folder (without changing the folder structure). If the specified folder does not exist, it will be created automatically.\n\n### Extension to be converted in the folder\n    If the \"Input path\" is a folder, specify the extension of the image to be converted in the folder.\n    The default value is `png:jpg:jpeg:tif:tiff:bmp:tga`.\n    The delimiter is `:`.\n    Case does not matter.\n    Example.png:jpg:jpeg:tif:tiff:bmp:tga\n\n### Output extension\n    Specify the format of the converted image.\n    The values ​​that can be set for \"Output image quality setting\" and \"Output depth bit rate\" differ depending on the format specified here.\n\n### Output quality setting\n    Specify the quality of the converted image.\n    The value that can be set is an integer.\n    The range and meaning of the values ​​that can be specified depend on the format set in \"Output extension\".\n     * .jpg: Value range (0 to 100) The higher the number, the higher the image quality\n     * .webp: Range of values ​​(1 to 100) The higher the number, the higher the image quality\n     * .tga: Value range (0 to 1) 0 means no compression, 1 means RLE compression\n\n### Output depth bits\n    Specify the number of bits per channel of the converted image.\n    The value that can be specified depends on the format set in \"Output extension\".\n\n## Conversion image quality/processing settings\n    Settings related to the file conversion processing method and image quality.\n\n### Conversion mode\n    Specify the conversion mode.\n     * Noise reduction and magnification: Noise reduction and magnification are performed.\n     * Enlarge: Enlarge\n     * Noise removal: Performs noise removal\n     * Noise removal (automatic detection) and enlargement: Enlarge. Noise removal is also performed only when the input is a JPEG image\n\n### JPEG noise removal level\n    Specify the noise reduction level. Higher levels remove noise more powerfully, but may result in a flatter picture.\n\n### Enlarged size\n    Set the size after enlargement.\n     * Specified by enlargement ratio: Enlarges the image at the specified enlargement ratio\n     * Specified width after conversion: Enlarges to the specified width while maintaining the aspect ratio of the image (pixels)\n     * Specified height after conversion: Enlarges to the specified height while maintaining the aspect ratio of the image (pixels)\n     * Specify the width and width after conversion: Enlarges to the specified height and width. Specify as \"1920x1080\" (Unit is pixel)\n    For magnifications greater than 2x (only one time if removing noise is done the first time) Enlarges by 2x until the specified magnification is exceeded, and if the magnification is not a power of 2, shrinks last The process of doing is performed. Therefore, the conversion result may be a flat picture.\n\n### Model\n    Specify the model to use.\n    The best model depends on the image to be converted, so we recommend that you try various models.\n     * 2D illustration (RGB model): 2D illustration model that converts all RGB of the image\n     * Photo/Anime (Photo model): Model for photo/animation\n     * 2D illustration (UpRGB model): A model that converts faster than 2D illustration (RGB model) with the same or higher image quality. However, the amount of memory (VRAM) that is consumed is larger than that of the RGB model, so adjust the division size if forced termination during conversion.\n     * Photo/animation (Up Photo model): A model that converts at higher speed than the photo/animation (Photo model) with the same or higher image quality. However, the amount of memory (VRAM) that is consumed is larger than that of the Photo model, so adjust the division size if it is forcibly terminated during conversion.\n     * 2D illustration (Y model): A model for 2D illustration that converts only the brightness of the image\n     * 2D illustration (UpResNet10 model): A model that converts with higher image quality than 2D illustration (UpRGB model). Note that this model will change the output result if the division size is different.\n     * 2D illustration (CUnet model): The model that can convert the 2D illustration with the highest image quality with the included model. Note that this model will change the output result if the division size is different.\n\n### Use TTA mode\n    Specify whether to use TTA (Test-Time Augmentation) mode.\n    Using TTA mode, conversion is 8 times slower, but PSNR (one of the image evaluation indexes) is about 0.15.\n\n## Processing speed setting\n    It is a group of setting items that affect the processing speed of image conversion.\n\n### division size\n    Specify the width (pixel unit) when dividing and processing internally.\n    How to decide the optimum number (the process ends at the fastest) is explained in the section \"Split size\".\n    Separated by \"-------\", the upper one is the divisor of the vertical and horizontal size of the input image,\n    The lower one is a general division size read from \"crop_size_list.txt\".\n    If the partition size is too large, the amount of memory required (VRAM amount when using GPU) exceeds the memory available on the PC, and the software will be killed, so be careful.\n    Since it will affect the processing speed to some extent, when converting a large number of images with the same image size by specifying a folder, it is recommended to check the optimal division size before conversion.\n    However, be aware that depending on the model, the output result may change when the division size is changed.\n    (In that case, use the default split size and adjust the batch size to speed up processing.)\n\n### Batch size\n    Specify the size when processing all at once internally.\n    Increasing the batch size may increase the processing speed.\n    Make sure that the amount of memory required, as well as the partition size, does not exceed the memory available on your PC.\n\n## Operation setting\n    Settings that summarize the operation settings which are unlikely to be changed.\n\n### Automatic conversion start setting at file input\n    Set whether to start the conversion automatically when the input file is specified by the reference button or drag and drop.\n    If the input file is given to exe as an argument, the setting contents of this item have no effect.\n     * Do not start automatically: Do not start conversion automatically when inputting a file\n     * Start after inputting one file: Start conversion automatically after inputting one file\n     * Start after inputting a folder or multiple files: Start conversion automatically when inputting a folder or multiple files. Single image file Convert files only when adjusting conversion settings\n\n### Processor used\n    Specifies the processor that does the conversion.\n     * CUDA (cuDNN if available): CUDA(GPU) is used for conversion (cuDNN is used when cuDNN is available)\n     * CPU: Only CPU is used for conversion\n\n### Do not overwrite output file\n    If this setting is ON, conversion will not be performed if a file with the same name exists in the image writing destination.\n\n### Startup settings with arguments\n    Set the operation when an input file is given to exe as an argument.\n     * Convert at startup: Start conversion automatically at startup\n     * Exit on success: auto exit if not failed at the end of conversion\n\n### Used GPU No.\n    You can specify the device number to use when there are multiple GPUs. Ignored when in CPU mode or when an invalid device number is specified.\n\n### Fixed folder for input reference\n    The folder that is first displayed when you click the input reference button is fixed to the folder set here.\n\n### Fixed folder when referencing output\n    The output destination folder of the converted image is fixed to the folder set here.\n    Also, the folder that is first displayed when you click the output reference button is fixed to the folder set here.\n\n## Other\n    It is a group of other setting items.\n\n### UI language\n    Set the UI language.\n    When starting up for the first time, the same language as the PC language setting is selected. (English if not present)\n\n### cuDNN check\n    You can check if you can use cuDNN by clicking the \"cuDNN check\" button.\n    If cuDNN is not available, the reason will be displayed.\n\nClick \"Run\" button to start conversion.\nIf you want to cancel while it is converting, click the \"Cancel\" button.\nHowever, there is a time lag before it actually stops.\nThe progress bar shows the progress when changing multiple images.\nThe log shows the estimated remaining time, which is an estimate when processing multiple files with the same height and width.\nTherefore, it is not useful when the size of the file is different, and when the number of images to be processed is 2 or less, only \"Unknown\" is displayed.\n\n\n How to use (CUI version)\n--------\n\n\"Waifu2x-caffe-cui.exe\" is a command line tool.\nStart a `command prompt`, type the command as follows, and press enter.\n\n\nThe following command prints usage information to the screen.\n```\nwaifu2x-caffe-cui.exe --help\n```\n\nThe following command is an example of commands that perform image conversion.\n```\nwaifu2x-caffe-cui.exe -i mywaifu.png -m noise_scale --scale_ratio 1.6 --noise_level 2\n```\nAfter executing the above, the conversion result is saved in `mywaifu(noise_scale)(Level2)(x1.600000).png`.\n\nFor the command list and details of each command, refer to the section on command line options (common) and command line options (CUI version).\n\n\n Command line options (common)\n--------\n\nWith this software, the following options can be specified.\nIn the GUI version, if the command line option other than the input file is specified and started, the option file is not currently saved.\nFor the options not specified in the GUI version, the options at the time of the previous termination will be used.\n\n### -l <string>, --input_extention_list <string>\n    When input_file is a folder, specify the extension of the image to be converted in the folder.\n    The default value is `png:jpg:jpeg:tif:tiff:bmp:tga`.\n    The delimiter is `:`.\n    Example.png:jpg:jpeg:tif:tiff:bmp:tga\n\n### -e <string>, --output_extention <string>\n    Specifies the extension of the output image when input_file is a folder.\n    The default value is `png`.\n\n### -m <noise|scale|noise_scale>, --mode <noise|scale|noise_scale>\n    Specify the conversion mode. If not specified, `noise_scale` is selected.\n    * noise: Performs noise reduction (to be exact, performs image conversion using a noise reduction model)\n    * scale: Enlarge (to be exact, after enlarging with the existing algorithm, perform image conversion using the model for enlarged image complement)\n    * noise_scale: Performs noise reduction and enlargement (after noise reduction, enlargement processing continues)\n    * auto_scale: Scales. Noise removal is also performed only when the input is a JPEG image\n\n### -s <number with decimal point>, --scale_ratio <number with decimal point>\n    Specify how many times to enlarge the image. The default value is `2.0`, but you can specify a value other than 2.0.\n    If scale_width or scale_height is specified, that one has priority.\n    If you specify a number other than 2.0, the following processing is performed.\n    * First, repeat 2x enlargement to cover the specified magnification as necessary and sufficient.\n    * If a value other than a power of 2 is specified, the enlarged image will be reduced to the specified magnification.\n\n### -w <integer>, --scale_width <integer>\n    Enlarges to the specified width while maintaining the aspect ratio of the image (in pixels).\n    If specified at the same time as scale_height, the image will be enlarged to have the specified width and height.\n\n### -h <integer>, --scale_height <integer>\n    Enlarges to the specified height while maintaining the aspect ratio of the image (pixels).\n    If specified at the same time as scale_width, the image will be enlarged to have the specified width and height.\n\n### -n <0|1|2|3>, --noise_level <0|1|2|3>\n    Specify the noise reduction level. As for the model for noise removal, only levels 0-3 are prepared, so\n    Please specify 0, 1 or 2 or 3.\n    The default value is `0`.\n\n### -p <cpu|gpu|cudnn>, --process <cpu|gpu|cudnn>\n    Specifies the processor used for processing. The default value is `gpu`.\n    * cpu: Perform conversion using CPU.\n    * gpu: Convert using CUDA (GPU). For Windows version only, if cuDNN is available, use cuDNN.\n    * cudnn: Convert using cuDNN.\n\n### -c <integer>, --crop_size <integer>\n    Specify the division size. The default value is `128`.\n\n### -q <integer>, --output_quality <integer>\n    Set the image quality of the converted image. The default value is `-1`\n    The values ​​that can be specified and their meanings depend on the format set in \"Output extension\".\n    If -1, the default value for each image format will be used.\n\n### -d <integer>, --output_depth <integer>\n    Specify the number of bits per channel of the converted image. The default value is `8`.\n    The value that can be specified depends on the format set in \"Output extension\".\n\n### -b <integer>, --batch_size <integer>\n    Specify the mini-batch size. The default value is `1`.\n    The mini-batch size is the number of blocks that the image is divided into by \"division size\" and processed at the same time. For example, if you specify `2`, it will be converted every 2 blocks.\n    When the mini-batch size is increased, the GPU usage rate increases as well as when the split size is increased, but if you feel it is measured, it is more effective to increase the split size.\n    (For example, if the split size is `64` and the mini-batch size is `4`, the split size is `128` and the mini-batch size is `1`.\n\n### --gpu <int>\n    Specify the GPU device number used for processing. The default value is `0`.\n    Note that GPU device numbers start at 0.\n    Ignored if no GPU is used for processing.\n    If a GPU device number that does not exist is specified, it will be executed on the default GPU.\n\n### -t <0|1>, --tta <0|1>\n    If you specify `1`, TTA mode is used. The default value is `0`.\n\n### --, --ignore_rest\n    Ignores all options after this option is specified.\n    For script batch files.\n\n\n Command line option (GUI version)\n--------\n\nIn the GUI version, arguments that do not apply to the option specification are recognized as an input file.\nInput files can be specified as files, folders, multiple files and folders at the same time.\n\n### -o <string>, --output_folder <string>\n    Set the path to the folder where you want to save the converted images.\n    Save the converted file in the specified folder.\n    The conversion file naming convention is the same as the output file name that is automatically determined when the input file is set in the GUI.\n    If not specified, it will be saved in the same folder as the first input file.\n\n### --auto_start <0|1>\n    If you specify `1`, the conversion will start automatically at startup.\n\n### --auto_exit <0|1>\n    If you specify `1`, if conversion is successful at startup, it will end automatically if conversion is successful.\n\n### --no_overwrite <0|1>\n    If you specify `1`, if there is a file with the same name in the image write destination, conversion will not be performed.\n\n### -y <upconv_7_anime_style_art_rgb|upconv_7_photo|anime_style_art_rgb|photo|anime_style_art_y|upresnet10|cunet>, --model_type <upconv_7_anime_style_art_rgb|upconv_7_photo|anime_style_art_net_net_up_art_rg_net_style_art_rg_net_art_rg_\n    Specify the model to use.\n    The setting item “Model” on the GUI and the following we respond.\n    * upconv_7_anime_style_art_rgb: 2D illustration (UpRGB model)\n    * upconv_7_photo :Photo/Anime (UpPhoto model)\n    * anime_style_art_rgb: 2D illustration (RGB model)\n    * photo: Photo/animation (Photo model)\n    * anime_style_art_y: 2D illustration (Y model)\n    * upresnet10: 2D illustration (UpResNet10 model)\n    * cunet: 2D illustration (CUnet model)\n\n\n Command line option (CUI version)\n--------\n\n### --version\n    Print version information and exit.\n\n### -?, --help\n    Display usage information and exit.\n    Please use when you want to check how to use it easily.\n\n### -i <string>, --input_file <string>\n    (Required) Path to the image to convert\n    When a folder is specified, all image files under that folder will be converted and output to the folder specified by output_file.\n\n### -o <string>, --output_file <string>\n    The path to the file where you want to save the converted image\n    (when input_file is a folder) Path to the folder to save the converted image\n    (When input_file is an image file) Be sure to enter the extension (such as .png at the end).\n    If not specified, the file name is automatically determined and saved in that file.\n    The file name determination rule is\n    `[original image file name] ``(model name) ``(mode name) ``(noise reduction level (in noise reduction mode)) ``(magnification ratio (in magnification mode))'' (output (Number of bits (other than 8 bits)) ``.output extension`\n    It looks like.\n    The location to save is basically the same directory as the input image.\n\n### --model_dir <string>\n    Specify the path to the directory where the model is stored. The default value is `models/cunet`.\n    The following models are included as standard.\n     * `models/anime_style_art_rgb`: 2D illustration (RGB model)\n    * `models/anime_style_art`: 2D illustration (Y model)\n    * `models/photo`: Photo/animation (Photo model)\n    * `models/upconv_7_anime_style_art_rgb`: 2D illustration (UpRGB model)\n    * `models/upconv_7_photo` :Photo/Anime (UpPhoto model)\n    * `models/upresnet10`: 2D illustration (UpResNet10 model)\n    * `models/cunet`: 2D illustration (CUnet model)\n    * `models/ukbench`: Old-fashioned photographic model (only the enlarged model is included, noise removal is not possible)\n    Basically, you don't have to specify it. Please specify it when using a model other than the default model or your own model.\n\n### --crop_w <int>\n    Specify the division size (width). If not set, the value of crop_size will be used.\n    If you specify the divisor of the width of the input image, conversion may be faster.\n\n### --crop_h <integer>\n    Specify the division size (vertical width). If not set, the value of crop_size will be used.\n    If you specify a divisor of the height of the input image, conversion may be faster.\n\n\n Division size\n--------\n\nwaifu2x-caffe (also waifu2x) converts images.\nThe image is divided into pieces of a certain size, converted one by one, and finally combined into a single image.\nThe division size (crop_size) is the width (in pixels) when dividing this image.\n\nIf the GPU is not exhausted even if it is converted with CUDA (the usage of the GPU is not close to 100%),\nIf you increase this number, the process may end sooner. (Because the GPU can be used up)\nPlease adjust it while seeing GPU Load (GPU usage rate) and Memory Used (VRAM usage rate) with [GPU-Z](http://www.techpowerup.com/gpuz/).\nAlso, refer to the following characteristics.\n\n * Larger numbers do not necessarily mean faster\n * If the division size is a divisor (or a number with a small remainder when divided) of the vertical and horizontal size of the image, the amount of wasteful calculation decreases and the speed increases. (In some cases, it seems that the numerical value that does not apply to this condition is the fastest.)\n * If you double the number, theoretically the amount of memory used will be 4 times (actually it is 3 to 4 times), so be careful not to drop the software. Especially, CUDA consumes much more memory than cuDNN, so be careful.\n\n\n About images with alpha channel\n--------\n\nThis software also supports enlargement of images with alpha channel.\nHowever, please note that it takes about twice as long as the image without alpha channel is enlarged because the process is to enlarge the alpha channel by itself.\nHowever, if the alpha channel is composed of a single color, it can be expanded in about the same time as it was without.\n\n\n The format of language files\n--------\n\nLanguage files format is JSON.\nIf you create new language file, add language setting to'lang/LangList.txt'.\n'lang/LangList.txt' format is TSV(Tab-Separated Values).\n\n  * LangName: Language name\n  * LangID: Primary language [See MSDN](https://msdn.microsoft.com/en-us/library/windows/desktop/dd318693.aspx)\n  * SubLangID :Sublanguage [See MSDN](https://msdn.microsoft.com/en-us/library/windows/desktop/dd318693.aspx)\n  * FileName: Language file name\n\nex.\n\n  * Japanese LangID: 0x11(LANG_JAPANESE), SubLangID: 0x01(SUBLANG_JAPANESE_JAPAN)\n  * English(US) LangID: 0x09(LANG_ENGLISH), SubLangID: 0x01(SUBLANG_ENGLISH_US)\n  * English(UK) LangID: 0x09(LANG_ENGLISH), SubLangID: 0x02(SUBLANG_ENGLISH_UK)\n\n\nNote\n------------\n\nThis software is not guaranteed safe.\nPlease use it at the discretion of the user.\nThe creator does not assume any obligation.\n\n\nAcknowledgment\n------\nThe original [waifu2x](https://github.com/nagadomi/waifu2x) and model were produced and published under the MIT license [ultraist](https://twitter.com/ultraistter) Mr.\nCreated [waifu2x-converter](https://github.com/WL-Amigo/waifu2x-converter-cpp) based on the original waifu2x [Amigo](https://twitter.com/WL_Amigo) Mr. (I used to refer to how to write README and LICENSE.txt, how to use OpenCV)\n[waifu2x-chainer](https://github.com/tsurumeso/waifu2x-chainer) was created to create the original model, and it was published under the MIT license [tsurumeso](https:// github.com/tsurumeso)\nwill be grateful to.\nAlso, @paul70078 for translating the message into English, @yoonhakcher for translating the message into Simplified Chinese, @mzhboy for the pull request for Simplified Chinese translation,\n@Kenin0726 for translating the message into Korean, @aruhirin for suggesting improvements to the Korean translation,\n@Lizardon1995 for translating messages in Traditional Chinese, @yoonhakcher, @Scharynche for pull request for Turkish translation, @Serized for pull request for French translation, Brazilian Portuguese @Simrafael for pull request for translation, @AndreasWebdev for pull request for German translation, @07pepa for pull request for Czech translation, @07pepa for pull request for Italian translation,\nThanks to JYUNYA for providing the GUI version of the icon."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 29.4267578125,
          "content": "waifu2x-caffe (for Windows)\n----------\n\n 制作者 : lltcggie\n\n本ソフトは、画像変換ソフトウェア「[waifu2x](https://github.com/nagadomi/waifu2x)」の変換機能のみを、\n[Caffe](http://caffe.berkeleyvision.org/)を用いて書き直し、Windows向けにビルドしたソフトです。\nCPUで変換することも出来ますが、CUDA(あるいはcuDNN)を使うとCPUより高速に変換することが出来ます。\n\nGUI supports English, Japanese, Simplified Chinese, Traditional Chinese, Korean, Turkish, Spanish, Russian, and French.\n\nソフトのダウンロードは[こちらのreleasesページ](https://github.com/lltcggie/waifu2x-caffe/releases)の「Downloads」の項で出来ます。\n\n\n 要求環境\n----------\n\nこのソフトを動作させるには最低でも以下の環境が必要です。\n\n * OS : Windows Vista以降 64bit (32bit用exeはありません)\n * メモリ : 空きメモリ1GB以上 (ただし、変換する画像サイズによる)\n * GPU : Compute Capability 3.5 以上のNVIDIA製GPU(CPUで変換する場合は不要)\n * Microsoft Visual C++ 2015 再頒布可能パッケージ Update 3(x64版)がインストールされていること(必須)\n    - 上記パッケージは[こちら](https://www.microsoft.com/ja-jp/download/details.aspx?id=53587)\n    - `ダウンロード` ボタンを押した後、`vcredist_x64.exe`を選択し、ダウンロード・インストールを行って下さい。\n    - 見つからない場合は、「Visual C++ 2015 再頒布可能パッケージ Update 3」で検索してみて下さい。\n\n自分のGPUのCompute Capabilityが知りたい場合は[こちらのページ](https://developer.nvidia.com/cuda-gpus)で調べて下さい。\n\n\n 使い方(GUI版)\n--------\n\n「waifu2x-caffe.exe」はGUIソフトです。ダブルクリックで起動します。\nまたはエクスプローラで「waifu2x-caffe.exe」にファイルやフォルダをドラッグ&ドロップで放り込むと、前回起動時の設定で変換を行います。\nその場合、設定によっては変換に成功したら自動でダイアログが閉じられます。\nまた、GUIでもコマンドラインによるオプション設定を行うことが出来ます。\n詳しくはコマンドラインオプション(共通)とコマンドラインオプション(GUI版)の項をお読みください。\n\n起動後、「入力パス」欄に画像かフォルダをドラッグ&ドロップで放り込むと「出力パス」欄が自動で設定されます。\n出力先を変えたい場合は「出力パス」欄を変更して下さい。\n\n好みに合わせて変換設定を変更することが出来ます。\n\n\n## 入出力設定\n     ファイルの入出力に関する設定項目群です。\n\n### 「入力パス」\n     変換したいファイルのパスを指定します。\n     フォルダを指定した場合は、サブフォルダ内も含めた「フォルダ内の変換する拡張子」が付くファイルを変換対象とします。\n     複数のファイル、フォルダをドラッグで指定することが出来ます。\n     その場合は新しいフォルダの中にファイル、フォルダ構造を維持したまま出力されます。\n    （入力パス欄には「(Multi Files)」と表示されます。出力フォルダ名はマウスで掴んでいたファイル、フォルダ名から生成されます）\n     参照ボタンを押してファイルを選択する場合、単体のファイル、フォルダか、複数のファイルが選択できます。\n\n### 「出力パス」\n     変換後の画像を保存するパスを指定します。\n    「入力パス」で フォルダを指定した場合は、指定したフォルダの中に変換したファイルを(フォルダ構造をそのままで)保存します。指定したフォルダがない場合は自動で作成します。\n\n### 「フォルダ内の変換する拡張子」\n     「入力パス」がフォルダの場合の、フォルダ内の変換する画像の拡張子を指定します。\n     デフォルト値は`png:jpg:jpeg:tif:tiff:bmp:tga`です。\n     また、区切り文字は`:`です。\n     大文字小文字は区別しません。\n     例. png:jpg:jpeg:tif:tiff:bmp:tga\n\n### 「出力拡張子」\n     変換後の画像の形式を指定します。\n    「出力画質設定」と「出力深度ビット数」に設定できる値はここで指定する形式により異なります。\n\n### 「出力画質設定」\n     変換後の画像の画質を指定します。\n     設定できる値は整数です。\n     指定できる値の範囲と意味は「出力拡張子」で設定した形式により異なります。\n\n      * .jpg : 値の範囲(0～100) 数字が高いほど高画質\n      * .webp : 値の範囲(1～100) 数字が高いほど高画質 100だと可逆圧縮\n      * .tga : 値の範囲(0～1) 0なら圧縮なし、1ならRLE圧縮\n\n### 「出力深度ビット数」\n     変換後の画像の1チャンネルあたりのビット数を指定します。\n     指定できる値は「出力拡張子」で設定した形式により異なります。\n\n## 変換画質・処理設定\n     ファイル変換の処理方法、画質に関する設定項目群です。\n\n### 「変換モード」\n     変換モードを指定します。\n      * ノイズ除去と拡大 : ノイズ除去と拡大を行います \n      * 拡大 : 拡大を行います\n      * ノイズ除去 : ノイズ除去を行います\n      * ノイズ除去(自動判別)と拡大 : 拡大を行います。入力がJPEG画像の場合のみノイズ除去も行います\n\n### 「JPEGノイズ除去レベル」\n    ノイズ除去レベルを指定します。レベルの高いほうがより強力にノイズを除去しますが、のっぺりとした絵になる可能性もあります。\n\n### 「拡大サイズ」\n    拡大後のサイズの設定を行います。\n      * 拡大率で指定 : 画像を指定の拡大率で拡大します\n      * 変換後の横幅で指定 : 画像の縦横比を維持したまま、指定された横幅になるように拡大します(単位はピクセル)\n      * 変換後の縦幅で指定 : 画像の縦横比を維持したまま、指定された縦幅になるように拡大します(単位はピクセル)\n      * 変換後の縦横幅で指定 : 指定された縦横幅になるように拡大します。「1920x1080」のように指定します(単位はピクセル)\n    2倍を超える拡大率の場合、(ノイズを除去する場合は最初の1回だけ行い)指定された拡大率を超えるまで2倍ずつ拡大し、2の累乗倍でない拡大率の場合は最後に縮小するという処理を行います。そのため変換結果がのっぺりとした絵になる可能性があります。\n\n### 「モデル」\n    使用するモデルを指定します。\n    変換対象の画像によって最適なモデルは異なるので、様々なモデルを試してみることをおすすめします。\n      * 2次元イラスト(RGBモデル) : 画像のRGBすべてを変換する2次元イラスト用モデル\n      * 写真・アニメ(Photoモデル) : 写真・アニメ用のモデル\n      * 2次元イラスト(UpRGBモデル) : 2次元イラスト(RGBモデル)より高速かつ同等以上の画質で変換するモデル。ただしRGBモデルより消費するメモリ(VRAM)の量が多いので、変換中に強制終了する場合は分割サイズを調節すること\n      * 写真・アニメ(UpPhotoモデル) : 写真・アニメ(Photoモデル)より高速かつ同等以上の画質で変換するモデル。ただしPhotoモデルより消費するメモリ(VRAM)の量が多いので、変換中に強制終了する場合は分割サイズを調節すること\n      * 2次元イラスト(Yモデル) : 画像の輝度のみを変換する2次元イラスト用モデル\n      * 2次元イラスト(UpResNet10モデル) : 2次元イラスト(UpRGBモデル)より高画質で変換するモデル。このモデルは分割サイズが違うと出力結果が変わるので注意すること\n      * 2次元イラスト(CUnetモデル) : 2次元イラストを同梱のモデルで一番高画質で変換できるモデル。このモデルは分割サイズが違うと出力結果が変わるので注意すること\n\n### 「TTAモードを使う」\n    TTA(Test-Time Augmentation)モードを使うかどうかを指定します。\n    TTAモードを使うと変換が8倍遅くなる代わりに、PSNR(画像の評価指数の一つ)が0.15くらい上がるそうです。\n\n## 処理速度設定\n     画像変換の処理速度に影響する設定項目群です。\n\n### 「分割サイズ」\n    内部で分割して処理を行う際の幅（ピクセル単位）を指定します。\n    最適な(処理が最速で終わる)数値の決め方は「分割サイズ」の項で説明します。\n    「-------」で区切られている上の方は入力された画像の縦横サイズの約数、\n    下の方は「crop_size_list.txt」から読み出した汎用的な分割サイズです。\n    分割サイズが大きすぎる場合、要求されるメモリの量(GPUを使う場合はVRAMの量)がPCで使用できるメモリを超えてソフトが強制終了するので気をつけてください。\n    処理速度にそれなりに影響するので、同じ画像サイズの画像をフォルダ指定で大量に変換するときは、最適な分割サイズを調べてから変換することをおすすめします。\n    ただし、モデルによっては分割サイズを変更すると出力結果が変わるものがあるので気を付けてください。\n    (その場合は分割サイズはデフォルトを使用し、バッチサイズを調整することで処理速度を上げることができます)\n\n### 「バッチサイズ」\n    内部でまとめて処理を行う際のサイズを指定します。\n    バッチサイズを大きくすると処理速度が速くなることがあります。\n    分割サイズと同様に要求されるメモリの量がPCで使用できるメモリを超えないように気を付けてください。\n\n## 動作設定\n     あまり変更する機会がないと思われる動作設定をまとめた設定群です。\n\n### 「ファイル入力時自動変換開始設定」\n     参照ボタンやドラッグアンドドロップで入力ファイルを指定した際に自動で変換を開始するのか設定を行います。\n     exeに入力ファイルを引数で与えた場合ではこの項目の設定内容は影響しません。\n      * 自動で開始しない : ファイルを入力しても自動で変換を開始しません\n      * ファイルを1つでも入力したら開始 : ファイルを1つでも入力したら自動で変換を開始します\n      * フォルダあるいは複数ファイルを入力したら開始 : フォルダ、複数ファイルを入力したら自動で変換を開始します。単体の画像ファイルを変換するのは変換設定の調節を行うときだけだ、という時にどうぞ\n\n### 「使用プロセッサー」\n    変換を行うプロセッサーを指定します。\n      * CUDA(使えたらcuDNN) : CUDA(GPU)を使って変換を行います(cuDNNが使える場合はcuDNNが使われます)\n      * CPU : CPUのみを使って変換を行います\n\n### 「出力ファイルを上書きしない」\n     この設定がONの場合、画像の書き込み先に同名のファイルが存在する場合は変換を行いません。\n\n### 「引数付き起動時設定」\n     exeに入力ファイルを引数で与えた場合での動作を設定します。\n      * 起動時に変換する : 起動時に自動で変換を開始します\n      * 成功時に終了する : 変換終了時に失敗していなければ自動で終了します\n\n### 「使用GPU No」\n     GPUが複数枚ある場合に使用するデバイス番号を指定できます。CPUモード時や無効なデバイス番号を指定した場合は無視されます。\n\n### 「入力参照時固定フォルダ」\n     入力の参照ボタンを押した際に最初に表示されるフォルダをここで設定したフォルダに固定します。\n\n### 「出力参照時固定フォルダ」\n     変換した画像の出力先フォルダをここで設定したフォルダに固定します。\n     また、出力の参照ボタンを押した際に最初に表示されるフォルダをここで設定したフォルダに固定します。\n\n## その他\n     その他の設定項目群です。\n\n### 「UIの言語」\n    UIの言語を設定します。\n    初回起動時はPCの言語設定と同じ言語が選ばれます。(存在しない場合は英語になります)\n\n### 「cuDNNチェック」\n    「cuDNNチェック」ボタンを押すとcuDNNが使えるか調べることが出来ます。\n    cuDNNが使えない場合は理由が表示されます。\n\n「実行」ボタンを押すと変換が始まります。\n途中でキャンセルしたい場合は「キャンセル」ボタンを押します。\nただし、実際に停止するまでタイムラグがあります。\nプログレスバーは複数枚の画像を変更した際の進行度合いを示しています。\nログに残り予想時間が表示されますが、これは同じ縦幅、横幅の複数ファイルを処理したときの予想です。\nなので、ファイルの大きさがバラバラな場合は役に立ちませんし、処理する画像が2枚以下の時は「不明」としか表示されません。\n\n\n 使い方(CUI版)\n--------\n\n「waifu2x-caffe-cui.exe」はコマンドラインツールです。\n`コマンドプロンプト` を立ち上げ、次のようにコマンドを打ち込み、使用して下さい。\n\n\n以下のコマンドは、使い方を画面に出力します。\n```\nwaifu2x-caffe-cui.exe --help\n```\n\n以下のコマンドは、画像変換を実行するコマンドの例です。\n```\nwaifu2x-caffe-cui.exe -i mywaifu.png -m noise_scale --scale_ratio 1.6 --noise_level 2\n```\n以上を実行すると、`mywaifu(noise_scale)(Level2)(x1.600000).png`に変換結果が保存されます。\n\nコマンドリスト、各コマンドの詳細はコマンドラインオプション(共通)とコマンドラインオプション(CUI版)の項をお読みください。\n\n\n コマンドラインオプション(共通)\n--------\n\n本ソフトでは、以下のオプションを指定することが出来ます。\nGUI版では入力ファイル以外のコマンドラインオプションを指定して起動した場合、現在オプションのファイル保存を行いません。\nまた、GUI版では指定されなかったオプションは前回終了時のオプションが使用されます。\n\n### -l <文字列>,  --input_extention_list <文字列>\n     input_fileがフォルダの場合の、フォルダ内の変換する画像の拡張子を指定します。\n     デフォルト値は`png:jpg:jpeg:tif:tiff:bmp:tga`です。\n     また、区切り文字は`:`です。\n     例. png:jpg:jpeg:tif:tiff:bmp:tga\n\n### -e <文字列>,  --output_extention <文字列>\n     input_fileがフォルダの場合の、出力画像の拡張子を指定します。\n     デフォルト値は`png`です。\n\n### -m <noise|scale|noise_scale>,  --mode <noise|scale|noise_scale>\n     変換モードを指定します。指定しなかった場合は`noise_scale`が選択されます。\n      * noise : ノイズ除去を行います (正確には、ノイズ除去用のモデルを用いて画像変換を行います)\n      * scale : 拡大を行います (正確には、既存アルゴリズムで拡大した後に、拡大画像補完用のモデルを用いて画像変換を行います)\n      * noise_scale : ノイズ除去と拡大を行います (ノイズ除去を行った後に、引き続き拡大処理を行います)\n      * auto_scale : 拡大を行います。入力がJPEG画像の場合のみノイズ除去も行います\n\n### -s <小数点付き数値>, --scale_ratio <小数点付き数値>\n     画像を何倍に拡大するかを指定します。デフォルト値は`2.0`ですが、2.0倍以外も指定できます。\n     scale_widthかscale_heightが指定された場合、そちらが優先されます。\n     2.0以外の数値を指定すると、次のような処理を行います。\n      * まず、指定された倍率を必要十分にカバーするように、2倍拡大を繰り返し行います。\n      * 2の累乗以外の数値が指定されている場合は、指定倍率になるように拡大した画像を縮小します。\n\n### -w <整数>, --scale_width <整数>\n     画像の縦横比を維持したまま、指定された横幅になるように拡大します(単位はピクセル)。\n     scale_heightと同時に指定すると、指定された縦横幅になるように画像を拡大します。\n\n### -h <整数>, --scale_height <整数>\n     画像の縦横比を維持したまま、指定された縦幅になるように拡大します(単位はピクセル)。\n     scale_widthと同時に指定すると、指定された縦横幅になるように画像を拡大します。\n\n### -n <0|1|2|3>, --noise_level <0|1|2|3>\n     ノイズ除去レベルを指定します。ノイズ除去用のモデルはレベル0～3のみ用意されているので、\n     0 か 1 か 2 か 3 を指定して下さい。\n     デフォルト値は`0`です。\n\n### -p <cpu|gpu|cudnn>, --process <cpu|gpu|cudnn>\n     処理に使うプロセッサーを指定します。デフォルト値は`gpu`です。\n      * cpu : CPUを使って変換を行います。\n      * gpu : CUDA(GPU)を使って変換を行います。Windows版でのみ、cuDNNが使えるならcuDNNを使います。\n      * cudnn : cuDNNを使って変換を行います。\n\n### -c <整数>, --crop_size <整数>\n     分割サイズを指定します。デフォルト値は`128`です。\n\n### -q <整数>, --output_quality <整数>\n     変換後の画像の画質を設定します。デフォルト値は`-1`です\n     指定できる値と意味は「出力拡張子」で設定した形式により異なります。\n     -1の場合は、各画像形式のデフォルト値が使われます。\n\n### -d <整数>, --output_depth <整数>\n     変換後の画像の1チャンネルあたりのビット数を指定します。デフォルト値は`8`です。\n     指定できる値は「出力拡張子」で設定した形式により異なります。\n\n### -b <整数>, --batch_size <整数>\n     mini-batchサイズを指定します。デフォルト値は`1`です。\n     mini-batchサイズは画像を「分割サイズ」で分割したブロックを同時に処理する数のことです。例えば`2`を指定した場合、2ブロックずつ変換していきます。\n     mini-batchサイズを大きくすると分割サイズを大きくするとの同様にGPUの使用率が高くなりますが、計測した感じだと分割サイズを大きくした方が効果が高いです。\n     (例えば分割サイズを`64`、mini-batchサイズを`4`にするより、分割サイズを`128`、mini-batchサイズを`1`にした方が処理が速く終わる)\n\n### --gpu <整数>\n     処理に使うGPUデバイス番号を指定します。デフォルト値は`0`です。\n     GPUデバイス番号は0から始まることに注意してください。\n     処理にGPUを使わない場合は無視されます。\n     また、存在しないGPUデバイス番号を指定した場合はデフォルトのGPUで実行されます。\n\n### -t <0|1>, --tta <0|1>\n     `1`を指定するとTTAモードを使用します。デフォルト値は`0`です。\n\n### --,  --ignore_rest\n     このオプションが指定された後の全てのオプションを無視します。\n     スクリプト・バッチファイル用です。\n\n\n コマンドラインオプション(GUI版)\n--------\n\nGUI版ではオプション指定に当てはまらなかった引数は入力ファイルとして認識されます。\n入力ファイルはファイル、フォルダ、複数、ファイルとフォルダ同時に指定できます。\n\n### -o <string>,  --output_folder <string>\n     変換された画像を保存するフォルダへのパスを設定します。\n     指定されたフォルダの中に変換後のファイルを保存します。\n     変換後のファイルの命名規則はGUIで入力ファイルを設定した時に自動で決定される出力ファイル名と同じです。\n     指定されなかった場合、ひとつ目の入力ファイルと同じフォルダに保存されます。\n\n### --auto_start <0|1>\n     `1`を指定すると起動時に自動で変換を開始します。\n\n### --auto_exit <0|1>\n     `1`を指定すると、起動時に自動で変換した場合に変換が成功すると自動で終了します。\n\n### --no_overwrite <0|1>\n     `1`を指定すると、画像の書き込み先に同名のファイルが存在する場合は変換を行いません。\n\n### -y <upconv_7_anime_style_art_rgb|upconv_7_photo|anime_style_art_rgb|photo|anime_style_art_y|upresnet10|cunet>,  --model_type <upconv_7_anime_style_art_rgb|upconv_7_photo|anime_style_art_rgb|photo|anime_style_art_y|upresnet10|cunet>\n     使用するモデルを指定します。\n     GUIでの設定項目「モデル」と以下のように対応しています。\n      * upconv_7_anime_style_art_rgb : 2次元イラスト(UpRGBモデル)\n      * upconv_7_photo : 写真・アニメ(UpPhotoモデル)\n      * anime_style_art_rgb : 2次元イラスト(RGBモデル)\n      * photo : 写真・アニメ(Photoモデル)\n      * anime_style_art_y : 2次元イラスト(Yモデル)\n      * upresnet10 : 2次元イラスト(UpResNet10モデル)\n      * cunet : 2次元イラスト(CUnetモデル)\n\n\n コマンドラインオプション(CUI版)\n--------\n\n### --version\n     バージョン情報を出力し、終了します。\n\n### -?,  --help\n     使い方を表示し、終了します。\n     手軽に使い方を確認したい時などにどうぞ。\n\n### -i <文字列>,  --input_file <文字列>\n     (必須)  変換する画像へのパス\n     フォルダを指定した場合、そのフォルダ以下の画像ファイルを全て変換してoutput_fileで指定したフォルダへ出力します。\n\n### -o <string>,  --output_file <string>\n     変換された画像を保存するファイルへのパス\n     (input_fileがフォルダの場合)変換された画像を保存するフォルダへのパス\n     (input_fileが画像ファイルの場合)拡張子(最後の.pngなど)は必ず入力するようにして下さい。\n     指定しなかった場合は自動でファイル名を決定し、そのファイルに保存します。\n     ファイル名の決定ルールは、\n     `[元の画像ファイル名]``(モデル名)``(モード名)``(ノイズ除去レベル(ノイズ除去モードの場合))``(拡大率(拡大モードの場合))``(出力ビット数(8ビット以外の場合))``.出力拡張子`\n     のようになっています。\n     保存される場所は、基本的には入力画像と同じディレクトリになります。\n\n### --model_dir <文字列>\n     モデルが格納されているディレクトリへのパスを指定します。デフォルト値は`models/cunet`です。\n     標準では以下のモデルが付属しています。\n      * `models/anime_style_art_rgb` : 2次元イラスト(RGBモデル)\n      * `models/anime_style_art` : 2次元イラスト(Yモデル)\n      * `models/photo` : 写真・アニメ(Photoモデル)\n      * `models/upconv_7_anime_style_art_rgb` : 2次元イラスト(UpRGBモデル)\n      * `models/upconv_7_photo` : 写真・アニメ(UpPhotoモデル)\n      * `models/upresnet10` : 2次元イラスト(UpResNet10モデル)\n      * `models/cunet` : 2次元イラスト(CUnetモデル)\n      * `models/ukbench` : 旧式の写真用モデル(拡大するモデルのみ付属しています。ノイズ除去は出来ません)\n     基本的には指定しなくても大丈夫です。デフォルト以外のモデルや自作のモデルを使用する時などに指定して下さい。\n\n### --crop_w <整数>\n     分割サイズ(横幅)を指定します。設定しなかった場合はcrop_sizeの値が使用されます。\n     入力する画像の横幅の約数を指定するとより高速に変換できる可能性があります。\n\n### --crop_h <整数>\n     分割サイズ(縦幅)を指定します。設定しなかった場合はcrop_sizeの値が使用されます。\n     入力する画像の縦幅の約数を指定するとより高速に変換できま可能性があります。\n\n\n 分割サイズ\n--------\n\nwaifu2x-caffe(waifu2xもですが)は画像を変換する時、\n画像を一定のサイズ毎に分割して一つずつ変換を行い、最後に結合して一枚の画像に戻す、という処理をしています。\n分割サイズ(crop_size)とは、この画像を分割する際の幅（ピクセル単位）の事です。\n\nCUDAで変換中でもGPUを使い切れていない（GPUの使用率が100%近くまでいっていない）場合、\nこの数値を大きくすることで処理が早く終わる可能性があります。（GPUを使い切ることが出来る様になるため）\n[GPU-Z](http://www.techpowerup.com/gpuz/)などでGPU Load(GPU使用率)とMemory Used(VRAM使用率)を見ながら調節してみて下さい。\nまた、以下の様な特性があるので参考にして下さい。\n\n * 必ずしも数値が大きければ大きいほど速くなるわけでは無い\n * 分割サイズが画像の縦横サイズの約数（あるいは割ったときに余りが少ない数）だと、無駄に演算する量が減って速くなる。 (この条件にあまり当てはまらない数値が最速になるケースもあるらしい？)\n * 数値を2倍にした場合、理論上は使用するメモリ量は4倍になる(実際は3～4倍といったところ)のでソフトが落ちないように注意。特にCUDAはcuDNNに比べてメモリの消費量がとても多いので気をつけること\n\n\n アルファチャンネル付き画像について\n--------\n\n本ソフトではアルファチャンネル付き画像の拡大も対応しています。\nしかし、アルファチャンネルを単体で拡大する処理になっているため、アルファチャンネル付き画像の拡大は無い場合と比べておよそ2倍の時間がかかるので注意してください。\nただし、アルファチャンネルが単色で構成されている場合はなしの場合とほぼ同じ時間で拡大できます。\n\n\n The format of language files\n--------\n\nLanguage files format is JSON.\nIf you create new language file, add language setting to 'lang/LangList.txt'.\n'lang/LangList.txt' format is TSV(Tab-Separated Values).\n\n  * LangName : Language name\n  * LangID : Primary language [See MSDN](https://msdn.microsoft.com/en-us/library/windows/desktop/dd318693.aspx)\n  * SubLangID : Sublanguage [See MSDN](https://msdn.microsoft.com/en-us/library/windows/desktop/dd318693.aspx)\n  * FileName : Language file name\n\nex.\n\n  * Japanese  LangID : 0x11(LANG_JAPANESE), SubLangID : 0x01(SUBLANG_JAPANESE_JAPAN)\n  * English(US) LangID : 0x09(LANG_ENGLISH), SubLangID : 0x01(SUBLANG_ENGLISH_US)\n  * English(UK) LangID : 0x09(LANG_ENGLISH), SubLangID : 0x02(SUBLANG_ENGLISH_UK)\n\n\nおことわり\n------------\n\n本ソフトは無保証です。\n利用者の判断の下に使用して下さい。\n制作者はいかなる義務も負わないものとします。\n\n\n謝辞\n------\nオリジナルの[waifu2x](https://github.com/nagadomi/waifu2x)、及びモデルの制作を行い、MITライセンスの下で公開して下さった [ultraist](https://twitter.com/ultraistter)さん、  \nオリジナルのwaifu2xを元に[waifu2x-converter](https://github.com/WL-Amigo/waifu2x-converter-cpp)を作成して下さった [アミーゴ](https://twitter.com/WL_Amigo)さん(READMEやLICENSE.txtの書き方、OpenCVの使い方等かなり参考にさせていただきました)  \n[waifu2x-chainer](https://github.com/tsurumeso/waifu2x-chainer)を作成してオリジナルのモデルの制作を行い、MITライセンスの下で公開して下さった[tsurumeso](https://github.com/tsurumeso)さん  \nに、感謝します。  \nまた、メッセージを英訳してくださった @paul70078 さん、メッセージを中国語(簡体字)に翻訳してくださった @yoonhakcher さん、中国語(簡体字)訳のプルリクエストを下さった @mzhboy さん、  \nメッセージを韓国語に翻訳してくださった @kenin0726 さん、韓国語訳の改善を提案してくださった @aruhirin さん、  \nメッセージを中国語(繁体字)に翻訳してくださった @lizardon1995 さん、@yoonhakcher さん、トルコ語訳のプルリクエストを下さった @Scharynche さん、フランス語訳のプルリクエストを下さった @Serized さん、ブラジルポルトガル語訳のプルリクエストを下さった @simrafael さん、ドイツ語訳のプルリクエストを下さった @AndreasWebdev さん、チェコ語訳のプルリクエストを下さった @07pepa さん、イタリア語訳のプルリクエストを下さった @AndryGabry01 さん、  \nGUI版のアイコンを提供してくださった JYUNYAさん に感謝します。\n"
        },
        {
          "name": "appendix",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "caffe",
          "type": "commit",
          "content": null
        },
        {
          "name": "caffe_build.bat",
          "type": "blob",
          "size": 0.4443359375,
          "content": "@echo off\n\ncd /d \"%~dp0\"\n\ncd caffe\n\nset MSVC_VERSION=14\nset USE_CUDNN=1\nset USE_NCCL=0\nset USE_OPENCV=0\nset USE_LEVELDB=0\nset USE_LMDB=0\nset USE_HDF5=0\nset WITH_NINJA=0\nset CPU_ONLY=0\nset CUDA_ARCH_NAME=Manual\nset CMAKE_CONFIG=Release\nset WITH_CUDA=1\nset BUILD_PYTHON=0\nset BUILD_PYTHON_LAYER=0\nset RUN_TESTS=0\nset CMAKE_INSTALL_PREFIX=../../lib\nset RUN_INSTALL=1\nset CUDA_ARCH_BIN=35 50 52 53 60 61 62 70 75 80\nset CUDA_ARCH_PTX=80\n\nscripts\\build_win.cmd"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "msgpack-c",
          "type": "commit",
          "content": null
        },
        {
          "name": "opencv",
          "type": "commit",
          "content": null
        },
        {
          "name": "opencv_build.bat",
          "type": "blob",
          "size": 1.060546875,
          "content": "@echo off\n\ncd opencv\nmkdir build\ncd build\n\ncmake .. -G \"Visual Studio 15 Win64\" ^\n-DCMAKE_INSTALL_PREFIX=..\\..\\lib ^\n-DBUILD_WITH_STATIC_CRT=OFF ^\n-DBUILD_IPP_IW=OFF ^\n-DBUILD_ITT=OFF ^\n-DBUILD_JAVA=OFF ^\n-DBUILD_SHARED_LIBS=OFF ^\n-DBUILD_TESTS=OFF ^\n-DBUILD_opencv_calib3d=OFF ^\n-DBUILD_opencv_dnn=OFF ^\n-DBUILD_opencv_features2d=OFF ^\n-DBUILD_opencv_flann=OFF ^\n-DBUILD_opencv_highgui=OFF ^\n-DBUILD_opencv_ml=OFF ^\n-DBUILD_opencv_objdetect=OFF ^\n-DBUILD_opencv_photo=OFF ^\n-DBUILD_opencv_video=OFF ^\n-DBUILD_opencv_videoio=OFF ^\n-DBUILD_opencv_videostab=OFF ^\n-DBUILD_opencv_java_bindings_generator=OFF ^\n-DBUILD_opencv_python_bindings_generator=OFF ^\n-DWITH_1394=OFF ^\n-DWITH_CUDA=OFF ^\n-DWITH_CUFFT=OFF ^\n-DWITH_DIRECTX=OFF ^\n-DWITH_DSHOW=OFF ^\n-DWITH_EIGEN=OFF ^\n-DWITH_FFMPEG=OFF ^\n-DWITH_GSTREAMER=OFF ^\n-DWITH_OPENCL=OFF ^\n-DWITH_OPENCAMDBALSL=OFF ^\n-DWITH_OPENCLAMDFFT=OFF ^\n-DWITH_OPENCL_SVM=OFF ^\n-DWITH_PROTOBUF=OFF ^\n-DWITH_VFW=OFF ^\n-DWITH_VTK=OFF ^\n-DWITH_WIN32UI=OFF\n\nrem cmake --build . --config Debug --target install\ncmake --build . --config Release --target install\n"
        },
        {
          "name": "rapidjson",
          "type": "commit",
          "content": null
        },
        {
          "name": "stb",
          "type": "commit",
          "content": null
        },
        {
          "name": "waifu2x-caffe-dll",
          "type": "tree",
          "content": null
        },
        {
          "name": "waifu2x-caffe-gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "waifu2x-caffe.sln",
          "type": "blob",
          "size": 1.9296875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 2013\nVisualStudioVersion = 12.0.31101.0\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"waifu2x-caffe\", \"waifu2x-caffe\\waifu2x-caffe.vcxproj\", \"{7C406EE4-2309-4D4C-98BB-CB7BA865FC41}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"waifu2x-caffe-gui\", \"waifu2x-caffe-gui\\waifu2x-caffe-gui.vcxproj\", \"{63FB3EFC-63B0-401C-BB54-F3A984DC233F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"waifu2x-caffe-dll\", \"waifu2x-caffe-dll\\waifu2x-caffe-dll.vcxproj\", \"{DFF94FEB-78AB-41B1-9B92-4D8B7D799E04}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{7C406EE4-2309-4D4C-98BB-CB7BA865FC41}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{7C406EE4-2309-4D4C-98BB-CB7BA865FC41}.Debug|x64.Build.0 = Debug|x64\n\t\t{7C406EE4-2309-4D4C-98BB-CB7BA865FC41}.Release|x64.ActiveCfg = Release|x64\n\t\t{7C406EE4-2309-4D4C-98BB-CB7BA865FC41}.Release|x64.Build.0 = Release|x64\n\t\t{63FB3EFC-63B0-401C-BB54-F3A984DC233F}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{63FB3EFC-63B0-401C-BB54-F3A984DC233F}.Debug|x64.Build.0 = Debug|x64\n\t\t{63FB3EFC-63B0-401C-BB54-F3A984DC233F}.Release|x64.ActiveCfg = Release|x64\n\t\t{63FB3EFC-63B0-401C-BB54-F3A984DC233F}.Release|x64.Build.0 = Release|x64\n\t\t{DFF94FEB-78AB-41B1-9B92-4D8B7D799E04}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{DFF94FEB-78AB-41B1-9B92-4D8B7D799E04}.Debug|x64.Build.0 = Debug|x64\n\t\t{DFF94FEB-78AB-41B1-9B92-4D8B7D799E04}.Release|x64.ActiveCfg = Release|x64\n\t\t{DFF94FEB-78AB-41B1-9B92-4D8B7D799E04}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tVisualSVNWorkingCopyRoot = .\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "waifu2x-caffe",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}