{
  "metadata": {
    "timestamp": 1736566068383,
    "page": 56,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "electronicarts/EASTL",
      "stars": 8381,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.6015625,
          "content": "#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-\nLanguage                                  : Cpp\nBasedOnStyle                              : Google \nStandard                                  : Auto\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-\nAccessModifierOffset                      : -4\nAlignTrailingComments                     : true\nAllowAllParametersOfDeclarationOnNextLine : false\nAllowShortBlocksOnASingleLine             : true\nAllowShortFunctionsOnASingleLine          : true\nAllowShortIfStatementsOnASingleLine       : false\nAllowShortLoopsOnASingleLine              : false\nBinPackParameters                         : false\nBreakBeforeBraces                         : Allman\nBreakBeforeTernaryOperators               : false\nBreakConstructorInitializersBeforeComma   : true\nColumnLimit                               : 120 \nCpp11BracedListStyle                      : true\nDerivePointerAlignment                    : true\nDerivePointerBinding                      : false\nIndentWidth                               : 4\nKeepEmptyLinesAtTheStartOfBlocks          : true\nMaxEmptyLinesToKeep                       : 2\nNamespaceIndentation                      : All \nPointerBindsToType                        : true\nSpacesBeforeTrailingComments              : 1\nSpacesInAngles                            : false\nSpacesInSquareBrackets                    : false\nTabWidth                                  : 4\nUseTab                                    : ForIndentation\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1884765625,
          "content": "# Auto detect text files and perform LF normalization\n# http://git-scm.com/docs/gitattributes\n* text=auto\n.appveyor.yml -text eol=crlf\n.appveyor-mingw.yml -text eol=crlf\nci-*.cmd -text eol=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5361328125,
          "content": "tags\ncscope.out\n**/*.swp\n**/*.swo\n.swp\n*.swp\n.swo\n.TMP\n-.d\neastl_build_out\nbuild_bench\nbench.bat\nbuild.bat\n.p4config\n\n## CMake generated files\nCMakeCache.txt\ncmake_install.cmake\n\n## Patch files\n*.patch\n\n## For Visual Studio Generated projects\n*.sln\n**/*.vcxproj\n**/*.vcxproj.filters\n*.VC.opendb\n*.sdf\n**/*.suo\n**/*.user\n.vs/*\n**/Debug/*\nCMakeFiles/*\nEASTL.dir/**\nRelWithDebInfo/*\nRelease/*\nWin32/*\nx64/*\nMinSizeRel/*\nbuild*/*\nTesting/*\n%ALLUSERSPROFILE%/*\n\n# Buck\n/buck-out/\n/.buckd/\n/buckaroo/\n.buckconfig.local\nBUCKAROO_DEPS\n.vscode/settings.json\n"
        },
        {
          "name": ".p4ignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "/.git/\ntags\n.gitignore\ncscope.out\n"
        },
        {
          "name": "3RDPARTYLICENSES.TXT",
          "type": "blob",
          "size": 4.6923828125,
          "content": "Additional licenses also apply to this software package as detailed below.\n\n\n\nHP STL comes with the following license:\n\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (c) 1994\n// Hewlett-Packard Company\n// \n// Permission to use, copy, modify, distribute and sell this software\n// and its documentation for any purpose is hereby granted without fee,\n// provided that the above copyright notice appear in all copies and\n// that both that copyright notice and this permission notice appear\n// in supporting documentation. Hewlett-Packard Company makes no\n// representations about the suitability of this software for any\n// purpose. It is provided \"as is\" without express or implied warranty.\n///////////////////////////////////////////////////////////////////////////////\n\n\n\nlibc++ comes with the following license:\n\n==============================================================================\nlibc++ License\n==============================================================================\n\nThe libc++ library is dual licensed under both the University of Illinois\n\"BSD-Like\" license and the MIT license.  As a user of this code you may choose\nto use it under either license.  As a contributor, you agree to allow your code\nto be used under both.\n\nFull text of the relevant licenses is included below.\n\n==============================================================================\n\nUniversity of Illinois/NCSA\nOpen Source License\n\nCopyright (c) 2009-2015 by the contributors listed at \nhttp://llvm.org/svn/llvm-project/libcxx/trunk/CREDITS.TXT\n\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n==============================================================================\n\nCopyright (c) 2009-2014 by the contributors listed at \nhttp://llvm.org/svn/llvm-project/libcxx/trunk/CREDITS.TXT\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n==============================================================================\n  \n*No express or implied license to use PlayStation®4 libraries included.\nPlayStation®4 development tools and libraries are subject to separate license\nwith Sony Interactive Entertainment LLC.\n\n==============================================================================\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.513671875,
          "content": "#-------------------------------------------------------------------------------------------\n# Copyright (C) Electronic Arts Inc.  All rights reserved.\n#-------------------------------------------------------------------------------------------\ncmake_minimum_required(VERSION 3.11)\ninclude(FetchContent)\nproject(EASTL CXX)\n\n#-------------------------------------------------------------------------------------------\n# Options\n#-------------------------------------------------------------------------------------------\noption(EASTL_BUILD_BENCHMARK \"Enable generation of build files for benchmark\" OFF)\noption(EASTL_BUILD_TESTS \"Enable generation of build files for tests\" OFF)\noption(EASTL_STD_ITERATOR_CATEGORY_ENABLED \"Enable compatibility with std:: iterator categories\" OFF)\n\n\noption(EASTL_DISABLE_APRIL_2024_DEPRECATIONS \"Enable use of API marked for removal in April 2024.\" OFF)\noption(EASTL_DISABLE_SEPT_2024_DEPRECATIONS \"Enable use of API marked for removal in September 2024.\" OFF)\noption(EASTL_DISABLE_APRIL_2025_DEPRECATIONS \"Enable use of API marked for removal in April 2025.\" OFF)\n\n#-------------------------------------------------------------------------------------------\n# Compiler Flags\n#-------------------------------------------------------------------------------------------\nset (CMAKE_MODULE_PATH \"${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/scripts/CMake\")\ninclude(CommonCppFlags)\n\n#-------------------------------------------------------------------------------------------\n# Library definition\n#-------------------------------------------------------------------------------------------\nfile(GLOB EASTL_SOURCES \"source/*.cpp\")\nfile(GLOB_RECURSE EASTL_HEADERS \"include/EASTL/**.h\")\nadd_library(EASTL ${EASTL_SOURCES} ${EASTL_HEADERS})\ntarget_compile_features(EASTL PUBLIC cxx_std_14)\n\n# include both source and headers in the files tab in Visual Studio\nsource_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX \"Header Files\" FILES ${EASTL_HEADERS})\n\nif (MSVC)\n    set(EASTL_NATVIS_DIR \"doc\")\n    set(EASTL_NATVIS_FILE \"${EASTL_NATVIS_DIR}/EASTL.natvis\")\n    target_sources(EASTL INTERFACE\n        $<INSTALL_INTERFACE:${EASTL_NATVIS_FILE}>\n        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/${EASTL_NATVIS_FILE}>\n    )\nendif()\n\nif(EASTL_BUILD_BENCHMARK)\n    add_subdirectory(benchmark)\nendif()\n\nif(EASTL_BUILD_TESTS)\n    add_subdirectory(test)\nendif()\n\n#-------------------------------------------------------------------------------------------\n# Defines\n#-------------------------------------------------------------------------------------------\nadd_definitions(-D_CHAR16T)\nadd_definitions(-D_CRT_SECURE_NO_WARNINGS)\nadd_definitions(-D_SCL_SECURE_NO_WARNINGS)\nadd_definitions(-DEASTL_OPENSOURCE=1)\nif (EASTL_STD_ITERATOR_CATEGORY_ENABLED)\n  add_definitions(-DEASTL_STD_ITERATOR_CATEGORY_ENABLED=1)\nendif()\n\n#-------------------------------------------------------------------------------------------\n# Include dirs\n#-------------------------------------------------------------------------------------------\ntarget_include_directories(EASTL PUBLIC include)\n\n#-------------------------------------------------------------------------------------------\n# Dependencies\n#-------------------------------------------------------------------------------------------\nFetchContent_Declare(\n  EABase\n  GIT_REPOSITORY https://github.com/electronicarts/EABase.git\n  GIT_TAG        123363eb82e132c0181ac53e43226d8ee76dea12\n  GIT_SUBMODULES \"\" # This should be temporary until we update the cyclic submodule dependencies in EABase.\n)\n\nFetchContent_MakeAvailable(EABase)\n\ntarget_link_libraries(EASTL EABase)\n\n#-------------------------------------------------------------------------------------------\n# Deprecations\n#-------------------------------------------------------------------------------------------\nif(EASTL_DISABLE_APRIL_2024_DEPRECATIONS)\n  target_compile_definitions(EASTL PUBLIC EA_DEPRECATIONS_FOR_2024_APRIL=EA_DISABLED)\nendif()\nif(EASTL_DISABLE_SEPT_2024_DEPRECATIONS)\n  target_compile_definitions(EASTL PUBLIC EA_DEPRECATIONS_FOR_2024_SEPT=EA_DISABLED)\nendif()\nif(EASTL_DISABLE_APRIL_2025_DEPRECATIONS)\n  target_compile_definitions(EASTL PUBLIC EA_DEPRECATIONS_FOR_2025_APRIL=EA_DISABLED)\nendif()\n\n\n#-------------------------------------------------------------------------------------------\n# Installation\n#-------------------------------------------------------------------------------------------\ninstall(TARGETS EASTL DESTINATION lib)\ninstall(DIRECTORY include/EASTL DESTINATION include)\n\nif (MSVC)\n    install(FILES ${EASTL_NATVIS_FILE} DESTINATION ${EASTL_NATVIS_DIR})\nendif()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7197265625,
          "content": "## Contributing\n\nBefore you can contribute, EA must have a Contributor License Agreement (CLA) on file that has been signed by each contributor.\nYou can sign here: [Go to CLA](https://electronicarts.na1.echosign.com/public/esignWidget?wid=CBFCIBAA3AAABLblqZhByHRvZqmltGtliuExmuV-WNzlaJGPhbSRg2ufuPsM3P0QmILZjLpkGslg24-UJtek*)\n\nIf you want to be recognized for your contributions to EASTL or have a project using EASTL be recognized; you can submit a pull request to the appropriate sections in [README.md](README.md).\nSome examples of what the format and information will look like is as follows.\n* John Smith - jsmith@domain.com\n* John Smith\n* Frostbite - Electronic Arts\n* My Project - [link to said project]\n\n### Pull Request Policy\n\nAll code contributions to EASTL are submitted as [Github pull requests](https://help.github.com/articles/using-pull-requests/).  All pull requests will be reviewed by an EASTL maintainer according to the guidelines found in the next section.\n\nYour pull request should:\n\n* merge cleanly\n* come with tests\n\t* tests should be minimal and stable\n\t* fail before your fix is applied\n* pass the test suite\n* code formatting is encoded in clang format\n\t* limit using clang format on new code\n\t* do not deviate from style already established in the files\n\n### Getting the Repository\n\n```bash\ngit clone https://github.com/electronicarts/EASTL\n```\n\n### Running the Unit Tests\n\nEASTL uses CMake as its build system. \n\n* Create and navigate to \"your_build_folder\":\n\t* mkdir your_build_folder && cd your_build_folder\n* Generate build scripts:\n\t* cmake eastl_source_folder -DEASTL_BUILD_TESTS:BOOL=ON\n* Build unit tests for \"your_config\":\n\t* cmake --build . --config your_config\n* Run the unit tests for \"your_config\" from the test folder:\n\t* cd test && ctest -C your_config\n\nHere is an example batch file.\n```batch\nset build_folder=out\nmkdir %build_folder%\npushd %build_folder%\ncall cmake .. -DEASTL_BUILD_TESTS:BOOL=ON -DEASTL_BUILD_BENCHMARK:BOOL=OFF\ncall cmake --build . --config Release\ncall cmake --build . --config Debug\ncall cmake --build . --config RelWithDebInfo\ncall cmake --build . --config MinSizeRel\npushd test\ncall ctest -C Release\ncall ctest -C Debug\ncall ctest -C RelWithDebInfo\ncall ctest -C MinSizeRel\npopd\npopd\n```\n\nHere is an example bash file\n```bash\nbuild_folder=out\nmkdir $build_folder\npushd $build_folder\ncmake .. -DEASTL_BUILD_TESTS:BOOL=ON -DEASTL_BUILD_BENCHMARK:BOOL=OFF\ncmake --build . --config Release\ncmake --build . --config Debug\ncmake --build . --config RelWithDebInfo\ncmake --build . --config MinSizeRel\npushd test\nctest -C Release\nctest -C Debug\nctest -C RelWithDebInfo\nctest -C MinSizeRel\npopd\npopd\n```\n\nThe value of EASTL_BUILD_BENCHMARK can be toggled to `ON` in order to build projects that include the benchmark program.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4873046875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2019, Electronic Arts\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3369140625,
          "content": "# EA Standard Template Library\n\n[![Build Status](https://travis-ci.org/electronicarts/EASTL.svg?branch=master)](https://travis-ci.org/electronicarts/EASTL)  \n\nEASTL stands for Electronic Arts Standard Template Library. It is a C++ template library of containers, algorithms, and iterators useful for runtime and tool development across multiple platforms. It is a fairly extensive and robust implementation of such a library and has an emphasis on high performance above all other considerations.\n\n\n## Usage\n\nIf you are familiar with the C++ STL or have worked with other templated container/algorithm libraries, you probably don't need to read this. If you have no familiarity with C++ templates at all, then you probably will need more than this document to get you up to speed. In this case, you need to understand that templates, when used properly, are powerful vehicles for the ease of creation of optimized C++ code. A description of C++ templates is outside the scope of this documentation, but there is plenty of such documentation on the Internet.\n\nEASTL is suitable for any tools and shipping applications where the functionality of EASTL is useful. Modern compilers are capable of producing good code with templates and many people are using them in both current generation and future generation applications on multiple platforms from embedded systems to servers and mainframes.\n\n## Package Managers\n\nYou can download and install EASTL using the [Conan](https://github.com/conan-io/conan) package manager:\n\n    conan install eastl/3.15.00@\n\nThe EASTL package in conan is kept up to date by Conan team members and community contributors. If the version is out-of-date, please [create an issue or pull request](https://github.com/conan-io/conan-center-index) on the Conan Center Index repository.\n\n\nYou can download and install EASTL using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    vcpkg install eastl\n\nThe EASTL port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n\n## Documentation\n\nPlease see [EASTL Introduction](doc/Introduction.md).\n\n\n## Compiling sources\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md) for details on compiling and testing the source.\n\n## Credits And Maintainers\n\nEASTL was created by Paul Pedriana and he maintained the project for roughly 10 years.\n\nEASTL was subsequently maintained by Roberto Parolin for more than 8 years.\nHe was the driver and proponent for getting EASTL opensourced.\nRob was a mentor to all members of the team and taught us everything we ever wanted to know about C++ spookyness.\n\nAfter Rob, maintenance of EASTL passed to Max Winkler for roughly a year, until landing with its current maintainer Liam Mitchell.\n\nSignificant EASTL contributions were made by (in alphabetical order):\n\n* Avery Lee\n* Colin Andrews\n* JP Flouret\n* Liam Mitchell\n* Matt Newport\n* Max Winkler\n* Paul Pedriana\n* Roberto Parolin\n* Simon Everett\n\n## Contributors\n\n## Projects And Products Using EASTL\n\n* Frostbite - Electronic Arts - [https://www.ea.com/frostbite]\n\n## License\n\nModified BSD License (3-Clause BSD license) see the file LICENSE in the project root.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "theme: jekyll-theme-minimal"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}