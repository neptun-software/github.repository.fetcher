{
  "metadata": {
    "timestamp": 1736566019059,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zeromq/libzmq",
      "stars": 9870,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.380859375,
          "content": "BasedOnStyle: LLVM\nIndentWidth: 4\nUseTab: Never\nBreakBeforeBraces: Custom\nBraceWrapping: \n    AfterClass: true\n    AfterControlStatement: false\n    AfterEnum: true \n    AfterFunction: true \n    AfterNamespace: true\n    AfterObjCDeclaration: true \n    AfterStruct: true \n    AfterUnion: true \n    BeforeCatch: true \n    BeforeElse: false \n    IndentBraces: false\n\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAllowShortIfStatementsOnASingleLine: false\nIndentCaseLabels: true\nBinPackArguments: true\nBinPackParameters: false\nAlignTrailingComments: true\nAllowShortBlocksOnASingleLine: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortFunctionsOnASingleLine: InlineOnly\nAlwaysBreakTemplateDeclarations: false\nColumnLimit: 80\nMaxEmptyLinesToKeep: 2\nKeepEmptyLinesAtTheStartOfBlocks: false\nContinuationIndentWidth: 2\nPointerAlignment: Right\nReflowComments: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: Always\nSpaceInEmptyParentheses: false\nSpacesInAngles: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\n\nSortIncludes: false\n\nFixNamespaceComments: false\nBreakBeforeBinaryOperators: NonAssignment\nSpaceAfterTemplateKeyword: true\nAlignAfterOpenBracket: Align\nAlignOperands: true\nBreakConstructorInitializers: AfterColon\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nSpaceAfterCStyleCast: true\nBreakBeforeTernaryOperators: true\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 19.9013671875,
          "content": "Checks:        \"*,\\\n# not currently a coding convention, but conceivable,\\\n-llvm-include-order,\\\n# currently the coding convention deliberately produces violations of these,\\\n# rules, but it may make sense to reconsider,\\\n-readability-implicit-bool-conversion,\\\n-readability-braces-around-statements,\\\n-readability-named-parameter,\\\n-fuchsia-default-arguments,\\\n-google-readability-todo,\\\n-google-runtime-int,\\\n-cppcoreguidelines-avoid-goto,\\\n-hicpp-avoid-goto, \\\n-cppcoreguidelines-pro-type-member-init,\\\n-cppcoreguidelines-pro-type-static-cast-downcast,\\\n-readability-identifier-naming,\\\n# not applicable,\\\n-fuchsia-default-arguments-calls,\\\n-fuchsia-overloaded-operator,\\\n-fuchsia-statically-constructed-objects,\\\n# not currently a coding convention, C++11-specific, but conceivable,\\\n-modernize-use-nullptr,\\\n-modernize-use-equals-default,\\\n-modernize-deprecated-headers,\\\n# not currently a coding convention, C++11-specific and hard to implement,\\\n-hicpp-no-malloc,\\\n-hicpp-avoid-c-arrays,\\\n-modernize-avoid-c-arrays,\\\n-modernize-pass-by-value,\\\n-modernize-loop-convert,\\\n-modernize-use-auto,\\\n-modernize-use-trailing-return-type,\\\n-modernize-use-using,\\\n-modernize-return-braced-init-list,\\\n-cppcoreguidelines-avoid-c-arrays,\\\n-cppcoreguidelines-no-malloc,\\\n-cppcoreguidelines-owning-memory,\\\n-cppcoreguidelines-pro-type-union-access,\\\n-cppcoreguidelines-pro-bounds-array-to-pointer-decay,\\\n-cppcoreguidelines-pro-bounds-constant-array-index,\\\n-cppcoreguidelines-pro-bounds-pointer-arithmetic,\\\n# not easily possible to implement (maybe replace by specific exclusions),\\\n-cppcoreguidelines-pro-type-vararg,\\\n-cppcoreguidelines-pro-type-reinterpret-cast,\\\n-hicpp-signed-bitwise,\\\n# duplicates,\\\n-google-readability-braces-around-statements,\\\n-cppcoreguidelines-pro-type-cstyle-cast,\\\n-cppcoreguidelines-avoid-magic-numbers,\\\n-readability-magic-numbers,\\\n-hicpp-braces-around-statements,\\\n-hicpp-use-equals-default,\\\n-hicpp-deprecated-headers,\\\n-hicpp-no-assembler,\\\n-hicpp-vararg,\\\n-hicpp-use-auto,\\\n-hicpp-use-nullptr,\\\n-hicpp-no-array-decay,\\\n-hicpp-member-init\"\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\n# AnalyzeTemporaryDtors: false\nCheckOptions:\n  # - key:             cert-dcl59-cpp.HeaderFileExtensions\n    # value:           h,hh,hpp,hxx\n  # - key:             cert-err61-cpp.CheckThrowTemporaries\n    # value:           '1'\n  # - key:             cert-oop11-cpp.IncludeStyle\n    # value:           llvm\n  # - key:             cert-oop11-cpp.UseCERTSemantics\n    # value:           '1'\n  # - key:             cppcoreguidelines-pro-bounds-constant-array-index.GslHeader\n    # value:           ''\n  # - key:             cppcoreguidelines-pro-bounds-constant-array-index.IncludeStyle\n    # value:           '0'\n  # - key:             cppcoreguidelines-pro-type-member-init.IgnoreArrays\n    # value:           '0'\n  # - key:             google-build-namespaces.HeaderFileExtensions\n    # value:           h,hh,hpp,hxx\n  # - key:             google-global-names-in-headers.HeaderFileExtensions\n    # value:           h\n  # - key:             google-readability-braces-around-statements.ShortStatementLines\n    # value:           '1'\n  # - key:             google-readability-function-size.BranchThreshold\n    # value:           '4294967295'\n  # - key:             google-readability-function-size.LineThreshold\n    # value:           '4294967295'\n  # - key:             google-readability-function-size.StatementThreshold\n    # value:           '800'\n  # - key:             google-readability-namespace-comments.ShortNamespaceLines\n    # value:           '10'\n  # - key:             google-readability-namespace-comments.SpacesBeforeComments\n    # value:           '2'\n  # - key:             google-runtime-int.SignedTypePrefix\n    # value:           int\n  # - key:             google-runtime-int.TypeSuffix\n    # value:           ''\n  # - key:             google-runtime-int.UnsignedTypePrefix\n    # value:           uint\n  # - key:             llvm-namespace-comment.ShortNamespaceLines\n    # value:           '1'\n  # - key:             llvm-namespace-comment.SpacesBeforeComments\n    # value:           '1'\n  # - key:             misc-assert-side-effect.AssertMacros\n    # value:           assert\n  # - key:             misc-assert-side-effect.CheckFunctionCalls\n    # value:           '0'\n  # - key:             misc-dangling-handle.HandleClasses\n    # value:           'std::basic_string_view;std::experimental::basic_string_view'\n  # - key:             misc-definitions-in-headers.HeaderFileExtensions\n    # value:           ',h,hh,hpp,hxx'\n  # - key:             misc-definitions-in-headers.UseHeaderFileExtension\n    # value:           '1'\n  # - key:             misc-misplaced-widening-cast.CheckImplicitCasts\n    # value:           '1'\n  # - key:             misc-move-constructor-init.IncludeStyle\n    # value:           llvm\n  # - key:             misc-move-constructor-init.UseCERTSemantics\n    # value:           '0'\n  # - key:             misc-sizeof-expression.WarnOnSizeOfCompareToConstant\n    # value:           '1'\n  # - key:             misc-sizeof-expression.WarnOnSizeOfConstant\n    # value:           '1'\n  # - key:             misc-sizeof-expression.WarnOnSizeOfThis\n    # value:           '1'\n  # - key:             misc-string-constructor.LargeLengthThreshold\n    # value:           '8388608'\n  # - key:             misc-string-constructor.WarnOnLargeLength\n    # value:           '1'\n  # - key:             misc-suspicious-missing-comma.MaxConcatenatedTokens\n    # value:           '5'\n  # - key:             misc-suspicious-missing-comma.RatioThreshold\n    # value:           '0.200000'\n  # - key:             misc-suspicious-missing-comma.SizeThreshold\n    # value:           '5'\n  # - key:             misc-suspicious-string-compare.StringCompareLikeFunctions\n    # value:           ''\n  # - key:             misc-suspicious-string-compare.WarnOnImplicitComparison\n    # value:           '1'\n  # - key:             misc-suspicious-string-compare.WarnOnLogicalNotComparison\n    # value:           '0'\n  # - key:             misc-throw-by-value-catch-by-reference.CheckThrowTemporaries\n    # value:           '1'\n  # - key:             modernize-loop-convert.MaxCopySize\n    # value:           '16'\n  # - key:             modernize-loop-convert.MinConfidence\n    # value:           reasonable\n  # - key:             modernize-loop-convert.NamingStyle\n    # value:           CamelCase\n  # - key:             modernize-pass-by-value.IncludeStyle\n    # value:           llvm\n  # - key:             modernize-replace-auto-ptr.IncludeStyle\n    # value:           llvm\n  # - key:             modernize-use-nullptr.NullMacros\n    # value:           'NULL'\n  # - key:             performance-faster-string-find.StringLikeClasses\n    # value:           'std::basic_string'\n  # - key:             performance-for-range-copy.WarnOnAllAutoCopies\n    # value:           '0'\n  # - key:             readability-braces-around-statements.ShortStatementLines\n    # value:           '1'\n  # - key:             readability-function-size.BranchThreshold\n    # value:           '4294967295'\n  # - key:             readability-function-size.LineThreshold\n    # value:           '4294967295'\n  # - key:             readability-function-size.StatementThreshold\n    # value:           '800'\n  # - key:             readability-identifier-naming.AbstractClassCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.AbstractClassPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.AbstractClassSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ClassConstantCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ClassConstantPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassConstantSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassMemberCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ClassMemberPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassMemberSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ClassMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassMethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ClassSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstantMemberCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstantMemberPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantMemberSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantParameterCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstantParameterPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantParameterSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstantSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprFunctionCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstexprFunctionPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprFunctionSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstexprMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprMethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprVariableCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ConstexprVariablePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ConstexprVariableSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.EnumCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.EnumConstantCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.EnumConstantPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.EnumConstantSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.EnumPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.EnumSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.FunctionCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.FunctionPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.FunctionSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalConstantCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.GlobalConstantPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalConstantSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalFunctionCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.GlobalFunctionPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalFunctionSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalVariableCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.GlobalVariablePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.GlobalVariableSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.IgnoreFailedSplit\n    # value:           '0'\n  # - key:             readability-identifier-naming.InlineNamespaceCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.InlineNamespacePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.InlineNamespaceSuffix\n    # value:           ''\n   - key:             readability-identifier-naming.LocalConstantCase\n     value:           lower_case\n   - key:             readability-identifier-naming.LocalConstantPrefix\n     value:           ''\n   - key:             readability-identifier-naming.LocalConstantSuffix\n     value:           ''\n   - key:             readability-identifier-naming.LocalVariableCase\n     value:           lower_case\n   - key:             readability-identifier-naming.LocalVariablePrefix\n     value:           ''\n   - key:             readability-identifier-naming.LocalVariableSuffix\n     value:           ''\n  # - key:             readability-identifier-naming.MemberCase\n    # value:           lower_case\n  # - key:             readability-identifier-naming.MemberPrefix\n    # value:           '_'\n  # - key:             readability-identifier-naming.MemberSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.MethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.MethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.MethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.NamespaceCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.NamespacePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.NamespaceSuffix\n    # value:           ''\n   - key:             readability-identifier-naming.ParameterCase\n     value:           lower_case\n  # - key:             readability-identifier-naming.ParameterPackCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ParameterPackPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ParameterPackSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ParameterPrefix\n    # value:           ''\n   - key:             readability-identifier-naming.ParameterSuffix\n     value:           '_'\n   - key:             readability-identifier-naming.PrivateMemberCase\n     value:           lower_case\n   - key:             readability-identifier-naming.PrivateMemberPrefix\n     value:           '_'\n   - key:             readability-identifier-naming.PrivateMemberSuffix\n     value:           ''\n  # - key:             readability-identifier-naming.PrivateMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.PrivateMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.PrivateMethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ProtectedMemberCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ProtectedMemberPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ProtectedMemberSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ProtectedMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ProtectedMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ProtectedMethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.PublicMemberCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.PublicMemberPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.PublicMemberSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.PublicMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.PublicMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.PublicMethodSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.StaticConstantCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.StaticConstantPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.StaticConstantSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.StaticVariableCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.StaticVariablePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.StaticVariableSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.StructCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.StructPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.StructSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.TemplateParameterCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.TemplateParameterPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.TemplateParameterSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.TemplateTemplateParameterCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.TemplateTemplateParameterPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.TemplateTemplateParameterSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.TypeTemplateParameterCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.TypeTemplateParameterPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.TypeTemplateParameterSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.TypedefCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.TypedefPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.TypedefSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.UnionCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.UnionPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.UnionSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.ValueTemplateParameterCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.ValueTemplateParameterPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.ValueTemplateParameterSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.VariableCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.VariablePrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.VariableSuffix\n    # value:           ''\n  # - key:             readability-identifier-naming.VirtualMethodCase\n    # value:           aNy_CasE\n  # - key:             readability-identifier-naming.VirtualMethodPrefix\n    # value:           ''\n  # - key:             readability-identifier-naming.VirtualMethodSuffix\n    # value:           ''\n  # - key:             readability-simplify-boolean-expr.ChainedConditionalAssignment\n    # value:           '0'\n  # - key:             readability-simplify-boolean-expr.ChainedConditionalReturn\n    # value:           '0'\n   - key:             modernize-use-override.OverrideSpelling\n     value:           'ZMQ_OVERRIDE'\n   - key:             modernize-use-override.FinalSpelling\n     value:           'ZMQ_FINAL'\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.064453125,
          "content": "# tree-wide clang format\n41f459e1dc6f7cdedd1268298153c970e290b2ce\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.02734375,
          "content": "syntax: glob # for hg-git users\n\n# Generated build scripts and IDE generating files\n## autotools\n/Makefile\nbuilds/Makefile\nbuilds/deprecated-msvc/Makefile\ndoc/Makefile\ndoc/__pagelist\nlibtool\n### automake\nMakefile.in\n.deps/\n.dirstamp\n### autoconf\nautom4te.cache\naclocal.m4\nconfig\nconfig.status\nconfig.log\nconfigure\nstamp-h1\n## CMake\ncmake-build-debug/\nbuild/\n## Android\nbuilds/android/prefix\n## IntelliJ\n.idea/\n## Visual Code\n.vscode/\n## other results-like folders\nbin/\nlib/\nobj/\n## Doxygen\ndoxygen/\n## Packaging \npackaging/nuget/*.nupkg\n\n# Test related build files\nlibtestutil.a\nlibunity.a\n\n# Some build outputs and temporal files\n*.o\n*.gcno\n*.gcda\n*.gcov\n*.ncb\n*.lo\n*.loT\n*.la\n*.exe\n*.html\n*.pdf\n*.ps\n*~\n.*~\n.libs\n\n# /src\n## Ignore generated files in configuration process\nsrc/platform.hpp*\nsrc/libzmq.pc\n\n# /tools\n## Executable binaries are ignored\ntools/curve_keygen\n## Executable source files must be tracked\n!tools/*.[ch]\n!tools/*.[ch]pp\n\n# /tests\n## Test binaries and logs are ignored\ntests/test*\ntests/test*.log\ntests/test*.trs\n## Test source files must be tracked\n!tests/test*.[ch]\n!tests/test*.[ch]pp\n## Build script and documentations must be tracked\n!tests/CMakeLists.txt\n!tests/README.md\n\n# /unittests\n## Unit test binaries and logs are ignored\nunittests/unittest_*\nunittests/unittest*.log\nunittests/unittest*.trs\n## Unit test source files must be tracked\n!unittests/unittest*.[ch]\n!unittests/unittest*.[ch]pp\n## Build script and documentations must be tracked\n!unittests/CMakeLists.txt\n!unittests/README.md\n\n# check test log files\ntest-suite*.log\n\n# /perf\n## Benchmarking binaries and result files are ignored\nperf/*_lat\nperf/*_thr\nperf/benchmark_*\nperf/results\n## Benchmarking source files must be tracked\n!perf/*.[ch]\n!perf/*.[ch]pp\n## Benchmarking tool scripts must be tracked\n!perf/*.py\n!perf/*.sh\n\n# /doc\n## Generated document files \ndoc/*.[137]\ndoc/*.html\ndoc/*.xml\n\n# external libraries and release archive files\nforeign/openpgm/*\n!foreign/openpgm/*.tar.bz2\n!foreign/openpgm/*.tar.gz\n!foreign/openpgm/Makefile.am\nzeromq-*.tar.gz\nzeromq-*.zip\ncore\n\nmybuild\n"
        },
        {
          "name": ".hgeol",
          "type": "blob",
          "size": 0.0224609375,
          "content": "[patterns]\n** = native\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 5.6923828125,
          "content": "Ahmet Kakici <ahmet.kakici@pro-line.com.tr> ahmet <ahmet.kakici@pro-line.com.tr>\nAndrey Sibiryov <me@kobology.ru> Kobolog <me@kobology.ru>\nBrian Knox <taotetek@gmail.com> taotetek <taotetek@users.noreply.github.com>\nChernyshev Vyacheslav <astellar@ro.ru> Astellar <astellar@ro.ru>\nChris Laws <clawsicus@gmail.com> Chris Laws <claws@localhost>\nChris Staite <chris@yourdreamnet.co.uk> Chris <chris@yourdreamnet.co.uk>\nChristoph Zach <czach@rst-automation.com> czach <czach@rst-automation.com>\nChuck Remes <git@chuckremes.com> Chuck Remes <cremes@mac.com>\nChuck Remes <git@chuckremes.com> Chuck Remes <cremes.devlist@mac.com>\nConstantin Rack <constantin.rack@gmail.com> Constantin Rack <constantin@rack.li>\nConstantin Rack <constantin.rack@gmail.com> Constantin Rack <c-rack@users.noreply.github.com>\nDaniel Krikun <krikun.daniel@gmail.com> danielkr <krikun.daniel@gmail.com>\nDaiyu Hurst <daiyu.hurst@gmail.com> DaiyuHurst <daiyu.hurst@gmail.com>\nDiego Rodriguez-Losada <diego.rlosada@gmail.com> Diego <diego.rlosada@gmail.com>\nDongmin Yu <miniway@gmail.com> Min(Dongmin Yu) <miniway@gmail.com>\nDoron Somech <somdoron@gmail.com> somdoron <somdoron@gmail.com>\nElliot Saba <staticfloat@gmail.com> staticfloat <staticfloat@gmail.com>\nEric Voskuil <eric@voskuil.org> evoskuil <eric@voskuil.org>\nEric Voskuil <eric@voskuil.org> anonymous <eric@voskuil.org>\nFelipe Farinon <felipe.farinon@powersyslab.com> psl-felipefarinon <felipe.farinon@powersyslab.com>\nFrank Hartmann <soundart@gmx.net> Frank <soundart@gmx.net>\nGian Lorenzo Meocci <glmeocci@gmail.com> meox <glmeocci@gmail.com>\nHardeep Singh <hshardeesi@gmail.com> Hardeep <hshardeesi@gmail.com>\nHenrik Feldt <henrik@haf.se> Henrik <henrik@haf.se>\nHuang Xin <chrox.huang@gmail.com> chrox <chrox.huang@gmail.com>\nIan Barber <ian.barber@gmail.com> Ian Barber <ianbarber@google.com>\nJens Auer <jens.auer@cgi.com> Jens Auer <jens-auer@users.noreply.github.com>\nJens Auer <jens.auer@cgi.com> Jens Auer <jens.auer@betaversion.net>\nJoe Eli McIlvain <joe.eli.mac@gmail.com> Joe McIlvain <joe.eli.mac@gmail.com>\nJos Decoster <jos.decoster@gmail.com> jdc8 <jos.decoster@gmail.com>\nJos Decoster <jos.decoster@gmail.com> Jos Decoster <jos.decoster@retarget.com>\nJoshua Gao <jmg116@gmail.com> Josh Gao <jgao@mobileiron.com>\nJörg Kreuzberger <joerg@kreuzberger.eu> kreuzberger <joerg@kreuzberger.eu>\nArnaud Kapp <kapp.arno@gmail.com> Kapp Arnaud <kapp.arno@gmail.com>\nArnaud Kapp <kapp.arno@gmail.com> KAPP Arnaud <kapp.arno@gmail.com>\nArnaud Kapp <kapp.arno@gmail.com> KAPP Arnaud <xaqq@users.noreply.github.com>\nKenneth Wilke <kenneth.wilke@rackspace.com> KennethWilke <kenneth.wilke@rackspace.com>\nKevin Sapper <mail@kevinsapper.de> sappo <mail@kevinsapper.de>\nKevin Sapper <mail@kevinsapper.de> Kevin Sapper <sappo@users.noreply.github.com>\nLeonard Michelet <leonard.michelet@openwide.fr> leonarf <leonard.michelet@openwide.fr>\nMartijn Jasperse <m.jasperse@gmail.com> mjasperse <m.jasperse@gmail.com>\nMartin Hurton <hurtonm@gmail.com> Martin Hurtoň <hurtonm@gmail.com>\nMartin Lucina <martin@lucina.net> Martin Lucina <mato@kotelna.sk>\nMartin Sustrik <sustrik@250bpm.com> Martin Sustrik <sustrik@fastmq.commkdir>\nMartin Sustrik <sustrik@250bpm.com> Martin Sustrik <sustrik@fastmq.com>\nMartin Sustrik <sustrik@250bpm.com> sustrik <sustrik@250bpm.com>\nMartin Sustrik <sustrik@250bpm.com> Martin Sustrik <sustrik@jozsi.(none)>\nMartin Sustrik <sustrik@250bpm.com> unknown <sustrik@.(none)>\nMartin Sustrik <sustrik@250bpm.com> Martin Sustrik <sustrik@turist.(none)>\nMaurice Barnum <msb@yahoo-inc.com> maurice barnum <msb@yahoo-inc.com>\nMaurizio Melato <maurizio.melato@nice-software.com> unknown <mauri@okinawa.(none)>\nMax Skaller <Max.Skaller@gmail.com> skaller <Max.Skaller@gmail.com>\nMichael Fox <415fox@gmail.com> m <415fox@gmail.com>\nMichael Hand <mipa@matrix.by> Mipa <mipa@matrix.by>\nMichel Zou <xantares10@hotmail.com> xantares <xantares09@hotmail.com>\nMikael Helbo Kjaer <mhk@designtech.dk> Mikael Helbo Kjær <mhk@designtech.dk>\nMike Gatny <mgatny@gmail.com> Mike Gatny <mgatny@connamara.com>\nMikko Koppanen <mikko.koppanen@gmail.com> Mikko Koppanen <mkoppanen@php.net>\nMikko Koppanen <mikko.koppanen@gmail.com> Mikko Koppanen <mikko@kuut.io>\nMikko Koppanen <mikko.koppanen@gmail.com> Mikko Koppanen <mkoppanen@gameboy.config>\nMin RK <benjaminrk@gmail.com> MinRK <benjaminrk@gmail.com>\nMin RK <benjaminrk@gmail.com> Min Ragan-Kelley <benjaminrk@gmail.com>\nMontoya Edu <montoya.edu@gmail.com> montoyaedu <montoya.edu@gmail.com>\nNikita Kozlov <nikita@elyzion.net> nikita kozlov <nikita@elyzion.net>\nPavol Malosek <malosek@fastmq.com> malosek <malosek@fastmq.com>\nPieter Hintjens <ph@imatix.com> Pieter Hintjens <ph@itmatix.com>\nReza Ebrahimi <reza.ebrahimi.dev@gmail.com> reza.ebrahimi <reza.ebrahimi.dev@gmail.com>\nRicardo Catalinas Jiménez <r@untroubled.be> Ricardo Catalinas Jiménez <jimenezrick@gmail.com>\nRohan Bedarkar <rohanb@cs.uchicago.edu> rohanbedarkar <rohanb@cs.uchicago.edu>\nRohan Bedarkar <rohanb@cs.uchicago.edu> Rohan <rbe@ws5-34-chi.rtsgroup.net>\nSergey KHripchenko <shripchenko@intermedia.net> root <root@ast-pbx-mt-3.intermedia.net>\nSergey KHripchenko <shripchenko@intermedia.net> shripchenko <shripchenko@intermedia.net>\nSergey M. <dstftw@gmail.com> Sergey M․ <dstftw@gmail.com>\nSteven McCoy <steven.mccoy@miru.hk> Steve-o <fnjordy@gmail.com>\nTamara Kustarova <kustarova@fastmq.com> tamara <tamara@jozsi.(none)>\nTimothee Besset <ttimo@ttimo.net> Timothee \"TTimo\" Besset <ttimo@ttimo.net>\nTimothy Mossbarger <tim@ent.net> Tim M <tim@ent.net>\nTrevor Bernard <trevor.bernard@gmail.com> Trevor Bernard <tbernard@liveops.com>\nTrevor Bernard <trevor.bernard@gmail.com> Trevor Bernard <trevor.bernard@userevents.com>\nVolodymyr Korniichuk <VolodymyrKorn@gmail.com> Volodymyr Korniichuk <9173519@gmail.com>\nlysyloren <lysy_loren@gmail.com> lysyloren <lysy.loren@gmail.com>\n"
        },
        {
          "name": ".obs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.3056640625,
          "content": "#\n# libzmq readthedocs.io integration\n#\n# This configuration file is processed by readthedocs.io to rebuild the\n# libzmq documentation using Asciidoctor, see\n#   https://docs.readthedocs.io/en/stable/build-customization.html#asciidoc\n\nversion: \"2\"\n\nformats:\n  - htmlzip\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    nodejs: \"20\"\n  # NOTE: as of Nov 2023, build.apt_packages is NOT considered when using build.commands\n  #apt_packages:\n  #  - automake\n  #  - autoconf\n  #  - cmake\n  #  - libtool\n  commands:\n    # install required tools\n    - npm install -g asciidoctor\n\n    # HTML docs\n    # ---------\n    - doc/create_page_list.sh \"$(pwd)/doc/__pagelist\" \"$(pwd)/doc\"\n    - asciidoctor --backend html --destination-dir $READTHEDOCS_OUTPUT/html --attribute stylesheet=asciidoctor.css --attribute zmq_version='4.3.6' --attribute zmq_pagelist_dir=$(pwd)/doc doc/*.adoc\n\n    # HTMLZIP docs\n    # ------------\n    # Note that for usability we make sure zip will create a zipfile containing just a flat list of HTML files; \n    # to achieve that it's important to avoid storing absolute paths when invoking \"zip\", thus we use -j\n    # Also note that the archive name should match exactly the project slug, \"libzmq\" in this case.\n    - mkdir -p $READTHEDOCS_OUTPUT/htmlzip/\n    - cd $READTHEDOCS_OUTPUT/html && zip -j ../htmlzip/libzmq.zip *.html\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.892578125,
          "content": "# Travis CI script\n\nlanguage: c\n\nos:\n- linux\n\ndist: bionic\n\ncache: ccache\n\nenv:\n  matrix:\n    - BUILD_TYPE=default\n  # tokens to deploy releases on OBS and create/delete temporary branch on Github.\n  # 1) Create a token on https://github.com/settings/tokens/new with \"public_repo\"\n  #    capability and encrypt it with travis encrypt --org -r zeromq/libzmq GH_TOKEN=\"<token>\"\n  # 2) Create 2 OBS tokens with osc token --create network:messaging:zeromq:release-<stable|draft> libzmq\n  #    encrypt them with travis encrypt --org -r zeromq/libzmq OBS_<STABLE|DRAFT>_TOKEN=\"<token>\"\n  global:\n    - secure: aaIs9Y44FYp9VFCqa6LLD4illBH4aUfbS0zzzbAQ5xJvD6NfBsMiKEIhf/kRNCHAtP+1VfQVOejTD6/i08ALsVr3cZD9oB/t7874tz2/jeZUIhRNo+1KwyaVqNg0yUSV6ASIoq4aOfuGnjBlezNQ8LQ2bjQB2m4Enl5wxoYcYdA=\n    - secure: YFrcedBIKe0NR1WC6qQi9phZgtnzOiBIXm40TirvCtstV4eVnSouKgtQfLLArZ4o2tjflq4grQQNo1rJatvyi5YPOXsMcndsni18S+4Ffu8qbECdtPrK52vBweuf7q9oV9Ydax0Fm4bEqEMOZ2/mRBy3nK+mgsE3upeMwyWR0Zw=\n    - secure: lbZSzmqN39QdJwewKOZgq/1ijPKuyx9MFrGzMqXj2+eOSlaZS/tNavHMdKJOev+qJGK9wxmwzxOxS10AiH+AvN7WBacXX4ZtudjScz2HKJRDWTKyzMbzyScq51afniItzrsm+Vo8NHkenNFkux0sSbh0aHlpkLwrGQu+WZWcDN4=\n    - secure: \"ZFL7hLJlGwYix8fF835OnQYakBt/o5iS7IfSW7el44ejEvGAOM9O5/ufxCcqSqn8Np7nOaM3RriAVTqWPZD6S7tMeflGTSGYHPYwWUc83z4rUPyG2FWVKXdB8ufpebAwu3hCgLiSmVeoQG47dl6xNk1oKCd+3UIjgz33u1Ecfps=\"\n\n# Build and check this project according to the BUILD_TYPE\nscript: ./ci_build.sh\n\n# Deploy tags\nbefore_deploy:\n- . ./ci_deploy.sh\ndeploy:\n  provider: releases\n  api_key:\n    secure: vGB5E+A8wxm2J1GJZzmIgT9PrjEzvd9gE8iui8FyxSbxAsW9vFZFGZC/21sTtpVcmRarwQCHH1UEbtg+nJwN2iD9YzMRnSVks8xqP+b709YW+VXaMuhZgTzWa74IorQku7NuvLibvQk72/OSgdwPGaNJ6f5AX9pnWVWbEoW1svE=\n  file_glob: true\n  file: ${LIBZMQ_DEPLOYMENT}\n  skip_cleanup: true\n  on:\n    repo: zeromq/libzmq\n    branch: master\n    tags: true\n    condition: \"$TRAVIS_OS_NAME =~ (linux) && $BUILD_TYPE =~ (default) && $CURVE =~ (libsodium) && -z $DRAFT\"\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 2.3076171875,
          "content": "Corporate Contributors\n======================\n\nCopyright (c) 2007-2014 iMatix Corporation\nCopyright (c) 2009-2011 250bpm s.r.o.\nCopyright (c) 2010-2011 Miru Limited\nCopyright (c) 2011 VMware, Inc.\nCopyright (c) 2012 Spotify AB\nCopyright (c) 2013 Ericsson AB\nCopyright (c) 2014 AppDynamics Inc.\nCopyright (c) 2015 Google, Inc.\nCopyright (c) 2015-2016 Brocade Communications Systems Inc.\n\nIndividual Contributors\n=======================\n\nAJ Lewis\nAlexej Lotz\nAndrew Thompson\nAndré Caron\nAsko Kauppi\nAttila Mark\nBarak Amar\nBen Gray\nBernd Melchers\nBernd Prager\nBob Beaty\nBrandon Carpenter\nBrett Cameron\nBrett Viren\nBrian Buchanan\nBurak Arslan\nCarl Clemens\nChia-liang Kao\nChris Busbey\nChris Rempel\nChris Wong\nChristian Gudrian\nChristian Kamm\nChuck Remes\nConrad D. Steenberg\nConstantin Rack\nDaniel J. Bernstein\nDhammika Pathirana\nDhruva Krishnamurthy\nDirk O. Kaar\nDoron Somech\nDouglas Creager\nDrew Crawford\nErich Heine\nErik Hugne\nErik Rigtorp\nFabien Ninoles\nFrank Denis\nGeorge Neill\nGerard Toonstra\nGhislain Putois\nGonzalo Diethelm\nGuido Goldstein\nHarald Achitz\nHardeep Singh\nHiten Pandya\nIan Barber\nIlja Golshtein\nIlya Kulakov\nIvo Danihelka\nJacob Rideout\nJoe Thornber\nJon Dyte\nKamil Shakirov\nKen Steele\nKouhei Sutou\nLeonardo J. Consoni\nLionel Flandrin\nLourens Naudé\nLuca Boccassi\nMarc Rossi\nMark Barbisan\nMartin Hurton\nMartin Lucina\nMartin Pales\nMartin Sustrik\nMatus Hamorsky\nMax Wolf\nMcClain Looney\nMichael Compton\nMika Fischer\nMikael Helbo Kjaer\nMike Gatny\nMikko Koppanen\nMin Ragan-Kelley\nNeale Ferguson\nNir Soffer\nOsiris Pedroso\nPaul Betts\nPaul Colomiets\nPavel Gushcha\nPavol Malosek\nPerry Kundert\nPeter Bourgon\nPhilip Kovacs\nPieter Hintjens\nPiotr Trojanek\nReza Ebrahimi\nRichard Newton\nRik van der Heijden\nRobert G. Jakabosky\nSebastian Otaegui\nStefan Radomski\nSteven McCoy\nStuart Webster\nTamara Kustarova\nTaras Shpot\nTero Marttila\nTerry Wilson\nThijs Terlouw\nThomas Rodgers\nTim Mossbarger\nToralf Wittner\nTore Halvorsen\nTrevor Bernard\nVitaly Mayatskikh\nYacheng Zhou\n\nCredits\n=======\n\nAamir Mohammad\nAdrian von Bidder\nAleksey Yeschenko\nAlessio Spadaro\nAlexander Majorov\nAnh Vu\nBernd Schumacher\nBrian Granger\nCarsten Dinkelmann\nDavid Bahi\nDirk Eddelbuettel\nEvgueny Khartchenko\nFrank Vanden Berghen\nIan Barber\nJohn Apps\nMarkus Fischer\nMatt Muggeridge\nMichael Santy\nOleg Sevostyanov\nPaulo Henrique Silva\nPeter Busser\nPeter Lemenkov\nRobert Zhang\nToralf Wittner\nZed Shaw\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 62.55859375,
          "content": "# CMake build script for ZeroMQ\n\nif(${CMAKE_HOST_SYSTEM_NAME} STREQUAL Darwin)\n  cmake_minimum_required(VERSION 3.0.2)\nelse()\n  cmake_minimum_required(VERSION 2.8.12)\nendif()\n\nproject(ZeroMQ)\n\ninclude(CheckIncludeFiles)\ninclude(CheckCCompilerFlag)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckLibraryExists)\ninclude(CheckCSourceCompiles)\ninclude(CheckCSourceRuns)\ninclude(CMakeDependentOption)\ninclude(CheckCXXSymbolExists)\ninclude(CheckStructHasMember)\ninclude(CheckTypeSize)\ninclude(FindThreads)\ninclude(GNUInstallDirs)\ninclude(CheckTypeSize)\ninclude(CMakePackageConfigHelpers)\n\nlist(INSERT CMAKE_MODULE_PATH 0 \"${CMAKE_CURRENT_SOURCE_DIR}\")\nset(ZMQ_CMAKE_MODULES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/builds/cmake/Modules)\nlist(APPEND CMAKE_MODULE_PATH ${ZMQ_CMAKE_MODULES_DIR})\n\ninclude(TestZMQVersion)\ninclude(ZMQSourceRunChecks)\ninclude(ZMQSupportMacros)\n\nfind_package(PkgConfig)\n\n# Set lists to empty beforehand as to not accidentally take values from parent\nset(sources)\nset(cxx-sources)\nset(html-docs)\nset(target_outputs)\n\noption(ENABLE_ASAN \"Build with address sanitizer\" OFF)\nif(ENABLE_ASAN)\n  message(STATUS \"Instrumenting with Address Sanitizer\")\n  set(CMAKE_BUILD_TYPE \"RelWithDebInfo\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer\")\n  set(CMAKE_CXX_FLAGS\n      \"${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer\")\n  set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope\")\nendif()\n\n# NOTE: Running libzmq under TSAN doesn't make much sense -- synchronization in libzmq is to some extent\n# handled by the code \"knowing\" what threads are allowed to do, rather than by enforcing those\n# restrictions, so TSAN generates a lot of (presumably) false positives from libzmq.\n# The settings below are intended to enable libzmq to be built with minimal support for TSAN\n# such that it can be used along with other code that is also built with TSAN.\noption(ENABLE_TSAN \"Build with thread sanitizer\" OFF)\nif(ENABLE_TSAN)\n  message(STATUS \"Instrumenting with Thread Sanitizer\")\n  set(CMAKE_BUILD_TYPE \"RelWithDebInfo\")\n  set(TSAN_FLAGS \"-fno-omit-frame-pointer -fsanitize=thread\")\n  set(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-memory-accesses=0\")\n  set(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-atomics=0\")\n  set(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-func-entry-exit=1\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${TSAN_FLAGS} ${TSAN_CCFLAGS} -fPIE\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${TSAN_FLAGS} ${TSAN_CCFLAGS} -fPIE\")\n  set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${TSAN_FLAGS} -pie -Qunused-arguments\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${TSAN_FLAGS} -pie -Qunused-arguments\")\nendif()\n\noption(ENABLE_UBSAN \"Build with undefined behavior sanitizer\" OFF)\nif(ENABLE_UBSAN)\n  message(STATUS \"Instrumenting with Undefined Behavior Sanitizer\")\n  set(CMAKE_BUILD_TYPE \"Debug\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fno-omit-frame-pointer\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=undefined\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=implicit-conversion\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=implicit-integer-truncation\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=integer\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=nullability\")\n  set(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=vptr\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${UBSAN_FLAGS}\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${UBSAN_FLAGS}\")\n  set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${UBSAN_FLAGS}\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${UBSAN_FLAGS}\")\nendif()\n\noption(ENABLE_INTRINSICS \"Build using compiler intrinsics for atomic ops\" OFF)\nif(ENABLE_INTRINSICS)\n  message(STATUS \"Using compiler intrinsics for atomic ops\")\n  add_definitions(-DZMQ_HAVE_ATOMIC_INTRINSICS)\nendif()\n\nset(ZMQ_OUTPUT_BASENAME\n    \"zmq\"\n    CACHE STRING \"Output zmq library base name\")\n\nif(${CMAKE_SYSTEM_NAME} STREQUAL Darwin)\n  # Find more information: https://cmake.org/Wiki/CMake_RPATH_handling\n\n  # Apply CMP0042: MACOSX_RPATH is enabled by default\n  cmake_policy(SET CMP0042 NEW)\n\n  # Add an install rpath if it is not a system directory\n  list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}\" isSystemDir)\n  if(\"${isSystemDir}\" STREQUAL \"-1\")\n    set(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}\")\n  endif()\n\n  # Add linker search paths pointing to external dependencies\n  set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\nendif()\n\nif (NOT MSVC)\n  if(NOT CMAKE_CXX_FLAGS MATCHES \"-std=\" AND NOT CXX_STANDARD AND NOT CMAKE_CXX_STANDARD)\n    # use C++11 by default if supported\n    check_cxx_compiler_flag(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n    if(COMPILER_SUPPORTS_CXX11)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n    endif()\n  endif()\n  if(NOT CMAKE_C_FLAGS MATCHES \"-std=\" AND NOT C_STANDARD AND NOT CMAKE_C_STANDARD)\n    check_c_compiler_flag(\"-std=c11\" COMPILER_SUPPORTS_C11)\n    if(COMPILER_SUPPORTS_C11)\n      set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D_DEFAULT_SOURCE -std=c11\")\n    else()\n      set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=gnu99\")\n    endif()\n  endif()\n\n  # clang 6 has a warning that does not make sense on multi-platform code\n  check_cxx_compiler_flag(\"-Wno-tautological-constant-compare\" CXX_HAS_TAUT_WARNING)\n  if(CXX_HAS_TAUT_WARNING)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-tautological-constant-compare\")\n  endif()\n  check_c_compiler_flag(\"-Wno-tautological-constant-compare\" CC_HAS_TAUT_WARNING)\n  if(CC_HAS_TAUT_WARNING)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-tautological-constant-compare\")\n  endif()\nendif()\n\n# Will be used to add flags to pkg-config useful when apps want to statically link\nset(pkg_config_libs_private \"\")\nset(pkg_config_names_private \"\")\nset(pkg_config_defines \"\")\n\noption(WITH_OPENPGM \"Build with support for OpenPGM\" OFF)\noption(WITH_NORM \"Build with support for NORM\" OFF)\noption(WITH_VMCI \"Build with support for VMware VMCI socket\" OFF)\n\nif(APPLE)\n  option(ZMQ_BUILD_FRAMEWORK \"Build as OS X framework\" OFF)\nendif()\n\nif(EXISTS \"${CMAKE_SOURCE_DIR}/.git\")\n  option(ENABLE_DRAFTS \"Build and install draft classes and methods\" ON)\nelse()\n  option(ENABLE_DRAFTS \"Build and install draft classes and methods\" OFF)\nendif()\n\n# Enable WebSocket transport and RadixTree\nif(ENABLE_DRAFTS)\n  message(STATUS \"Building draft classes and methods\")\n  option(ENABLE_WS \"Enable WebSocket transport\" ON)\n  option(ENABLE_RADIX_TREE \"Use radix tree implementation to manage subscriptions\" ON)\n  set(pkg_config_defines \"-DZMQ_BUILD_DRAFT_API=1\")\nelse()\n  message(STATUS \"Not building draft classes and methods\")\n  option(ENABLE_WS \"Enable WebSocket transport\" OFF)\n  option(ENABLE_RADIX_TREE \"Use radix tree implementation to manage subscriptions\" OFF)\nendif()\n\nif(ENABLE_RADIX_TREE)\n  message(STATUS \"Using radix tree implementation to manage subscriptions\")\n  set(ZMQ_USE_RADIX_TREE 1)\nendif()\n\nif(ENABLE_WS)\n  list(\n    APPEND\n    sources\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_address.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_connecter.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_decoder.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_encoder.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_engine.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_listener.cpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_address.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_connecter.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_decoder.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_encoder.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_engine.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_listener.hpp\n    ${CMAKE_CURRENT_SOURCE_DIR}/src/ws_protocol.hpp)\n  set(ZMQ_HAVE_WS 1)\n\n  message(STATUS \"Enable WebSocket transport\")\n\n  option(WITH_TLS \"Use TLS for WSS support\" ON)\n  option(WITH_NSS \"Use NSS instead of builtin sha1\" OFF)\n\n  if(WITH_TLS)\n    find_package(\"GnuTLS\" 3.6.7)\n    if(GNUTLS_FOUND)\n      set(pkg_config_names_private \"${pkg_config_names_private} gnutls\")\n      list(APPEND sources ${CMAKE_CURRENT_SOURCE_DIR}/src/wss_address.hpp\n           ${CMAKE_CURRENT_SOURCE_DIR}/src/wss_address.cpp ${CMAKE_CURRENT_SOURCE_DIR}/src/wss_engine.hpp\n           ${CMAKE_CURRENT_SOURCE_DIR}/src/wss_engine.cpp)\n\n      message(STATUS \"Enable WSS transport\")\n      set(ZMQ_USE_GNUTLS 1)\n      set(ZMQ_HAVE_WSS 1)\n    else()\n      message(WARNING \"No WSS support, you may want to install GnuTLS and run cmake again\")\n    endif()\n  endif()\nendif()\n\nif(NOT ZMQ_USE_GNUTLS)\n  if(WITH_NSS)\n    pkg_check_modules(NSS3 \"nss\")\n    if(NSS3_FOUND)\n      set(pkg_config_names_private \"${pkg_config_names_private} nss\")\n      message(STATUS \"Using NSS\")\n      set(ZMQ_USE_NSS 1)\n    else()\n      find_package(\"NSS3\")\n      if(NSS3_FOUND)\n        set(pkg_config_libs_private \"${pkg_config_libs_private} -lnss3\")\n        message(STATUS \"Using NSS\")\n        set(ZMQ_USE_NSS 1)\n      else()\n        message(WARNING \"No nss installed, if you don't want builtin SHA1, install NSS or GnuTLS\")\n      endif()\n    endif()\n  endif()\n  if(ENABLE_WS AND NOT ZMQ_USE_NSS)\n    list(APPEND sources ${CMAKE_CURRENT_SOURCE_DIR}/external/sha1/sha1.c\n         ${CMAKE_CURRENT_SOURCE_DIR}/external/sha1/sha1.h)\n    message(STATUS \"Using builtin sha1\")\n    set(ZMQ_USE_BUILTIN_SHA1 1)\n  endif()\nendif()\n\nif(NOT MSVC)\n  option(WITH_LIBBSD \"Use libbsd instead of builtin strlcpy\" ON)\n  if(WITH_LIBBSD)\n    pkg_check_modules(LIBBSD \"libbsd\")\n    if(LIBBSD_FOUND)\n      message(STATUS \"Using libbsd\")\n      set(pkg_config_names_private \"${pkg_config_names_private} libbsd\")\n      set(ZMQ_HAVE_LIBBSD 1)\n    endif()\n  endif()\n  check_cxx_symbol_exists(strlcpy string.h ZMQ_HAVE_STRLCPY)\nendif()\n\n# Select curve encryption library, defaults to disabled To use libsodium instead, use --with-libsodium(must be\n# installed) To disable curve, use --disable-curve\n\noption(WITH_LIBSODIUM \"Use libsodium (required with ENABLE_CURVE)\" OFF)\noption(WITH_LIBSODIUM_STATIC \"Use static libsodium library\" OFF)\noption(ENABLE_LIBSODIUM_RANDOMBYTES_CLOSE \"Automatically close libsodium randombytes. Not threadsafe without getrandom()\" ON)\noption(ENABLE_CURVE \"Enable CURVE security\" OFF)\n\nif(ENABLE_CURVE)\n  # libsodium is currently the only CURVE provider\n  if(WITH_LIBSODIUM)\n    find_package(\"sodium\")\n    if(SODIUM_FOUND)\n      message(STATUS \"Using libsodium for CURVE security\")\n      include_directories(${SODIUM_INCLUDE_DIRS})\n      link_directories(${SODIUM_LIBRARY_DIRS})\n      if(WITH_LIBSODIUM_STATIC)\n        add_compile_definitions(SODIUM_STATIC)\n      endif()\n      set(ZMQ_USE_LIBSODIUM 1)\n      set(ZMQ_HAVE_CURVE 1)\n      if (ENABLE_LIBSODIUM_RANDOMBYTES_CLOSE)\n        set(ZMQ_LIBSODIUM_RANDOMBYTES_CLOSE 1)\n      endif()\n    else()\n      message(\n        FATAL_ERROR\n          \"libsodium requested but not found, you may want to install libsodium and run cmake again\"\n      )\n    endif()\n  else() # WITH_LIBSODIUM\n    message(\n      FATAL_ERROR\n      \"ENABLE_CURVE set, but not WITH_LIBSODIUM. No CURVE provider found.\"\n      )\n  endif()\nelse() # ENABLE_CURVE\n  message(STATUS \"CURVE security is disabled\")\nendif()\n\noption(WITH_GSSAPI_KRB5 \"Use libgssapi_krb5\" OFF)\nif(WITH_GSSAPI_KRB5)\n  find_package(\"gssapi_krb5\" REQUIRED)\n  message(STATUS \"Using GSSAPI_KRB5\")\n  include_directories(${GSSAPI_KRB5_INCLUDE_DIRS})\n  link_directories(${GSSAPI_KRB5_LIBRARY_DIRS})\n  set(HAVE_LIBGSSAPI_KRB5 1)\nendif()\n\n\nset(SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}\")\n\noption(WITH_MILITANT \"Enable militant assertions\" OFF)\nif(WITH_MILITANT)\n  add_definitions(-DZMQ_ACT_MILITANT)\nendif()\n\nset(API_POLLER\n    \"\"\n    CACHE STRING \"Choose polling system for zmq_poll(er)_*. valid values are\n  poll or select [default=poll unless POLLER=select]\")\n\nset(POLLER\n    \"\"\n    CACHE STRING \"Choose polling system for I/O threads. valid values are\n  kqueue, epoll, devpoll, pollset, poll or select [default=autodetect]\")\n\nif(WIN32)\n  if(CMAKE_SYSTEM_NAME STREQUAL \"WindowsStore\" AND CMAKE_SYSTEM_VERSION MATCHES \"^10.0\")\n    set(ZMQ_HAVE_WINDOWS_UWP ON)\n    set(ZMQ_HAVE_IPC OFF)\n    # to remove compile warninging \"D9002 ignoring unknown option\"\n    string(REPLACE \"/Zi\" \"\" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})\n    set(CMAKE_CXX_FLAGS_DEBUG\n        ${CMAKE_CXX_FLAGS_DEBUG}\n        CACHE STRING \"\" FORCE)\n    string(REPLACE \"/Zi\" \"\" CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})\n    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO\n        ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\n        CACHE STRING \"\" FORCE)\n    string(REPLACE \"/Zi\" \"\" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})\n  endif()\n  # from https://stackoverflow.com/a/40217291/2019765\n  macro(get_WIN32_WINNT version)\n    if(CMAKE_SYSTEM_VERSION)\n      set(ver ${CMAKE_SYSTEM_VERSION})\n      string(REGEX MATCH \"^([0-9]+).([0-9])\" ver ${ver})\n      string(REGEX MATCH \"^([0-9]+)\" verMajor ${ver})\n      # Check for Windows 10, b/c we'll need to convert to hex 'A'.\n      if(\"${verMajor}\" MATCHES \"10\")\n        set(verMajor \"A\")\n        string(REGEX REPLACE \"^([0-9]+)\" ${verMajor} ver ${ver})\n      endif(\"${verMajor}\" MATCHES \"10\")\n      # Remove all remaining '.' characters.\n      string(REPLACE \".\" \"\" ver ${ver})\n      # Prepend each digit with a zero.\n      string(REGEX REPLACE \"([0-9A-Z])\" \"0\\\\1\" ver ${ver})\n      set(${version} \"0x${ver}\")\n    endif(CMAKE_SYSTEM_VERSION)\n  endmacro(get_WIN32_WINNT)\n\n  get_win32_winnt(ZMQ_WIN32_WINNT_DEFAULT)\n  message(STATUS \"Detected _WIN32_WINNT from CMAKE_SYSTEM_VERSION: ${ZMQ_WIN32_WINNT_DEFAULT}\")\n\n  # TODO limit _WIN32_WINNT to the actual Windows SDK version, which might be different from the default version\n  # installed with Visual Studio\n  if(MSVC_VERSION STREQUAL \"1500\" AND CMAKE_SYSTEM_VERSION VERSION_GREATER \"6.0\")\n    set(ZMQ_WIN32_WINNT_LIMIT \"0x0600\")\n  elseif(MSVC_VERSION STREQUAL \"1600\" AND CMAKE_SYSTEM_VERSION VERSION_GREATER \"6.1\")\n    set(ZMQ_WIN32_WINNT_LIMIT \"0x0601\")\n  elseif(MSVC_VERSION STREQUAL \"1700\" AND CMAKE_SYSTEM_VERSION VERSION_GREATER \"6.1\")\n    set(ZMQ_WIN32_WINNT_LIMIT \"0x0601\")\n  elseif(MSVC_VERSION STREQUAL \"1800\" AND CMAKE_SYSTEM_VERSION VERSION_GREATER \"6.2\")\n    set(ZMQ_WIN32_WINNT_LIMIT \"0x0602\")\n  endif()\n  if(ZMQ_WIN32_WINNT_LIMIT)\n    message(\n      STATUS\n        \"Mismatch of Visual Studio Version (${MSVC_VERSION}) and CMAKE_SYSTEM_VERSION (${CMAKE_SYSTEM_VERSION}), limiting _WIN32_WINNT to ${ZMQ_WIN32_WINNT_LIMIT}, you may override this by setting ZMQ_WIN32_WINNT\"\n    )\n    set(ZMQ_WIN32_WINNT_DEFAULT \"${ZMQ_WIN32_WINNT_LIMIT}\")\n  endif()\n\n  set(ZMQ_WIN32_WINNT\n      \"${ZMQ_WIN32_WINNT_DEFAULT}\"\n      CACHE STRING \"Value to set _WIN32_WINNT to for building [default=autodetect from build environment]\")\n\n  # On Windows Vista or greater, with MSVC 2013 or greater, default to epoll (which is required on Win 10 for ipc\n  # support)\n  if(ZMQ_WIN32_WINNT GREATER \"0x05FF\"\n     AND MSVC_VERSION GREATER 1799\n     AND POLLER STREQUAL \"\"\n     AND NOT ZMQ_HAVE_WINDOWS_UWP)\n    set(POLLER \"epoll\")\n  endif()\n\n  add_definitions(-D_WIN32_WINNT=${ZMQ_WIN32_WINNT})\nendif(WIN32)\n\nif(NOT MSVC)\n  if(POLLER STREQUAL \"\")\n    check_cxx_symbol_exists(kqueue \"sys/types.h;sys/event.h;sys/time.h\" HAVE_KQUEUE)\n    if(HAVE_KQUEUE)\n      set(POLLER \"kqueue\")\n    endif()\n  endif()\n\n  if(POLLER STREQUAL \"\")\n    check_cxx_symbol_exists(epoll_create sys/epoll.h HAVE_EPOLL)\n    if(HAVE_EPOLL)\n      set(POLLER \"epoll\")\n      check_cxx_symbol_exists(epoll_create1 sys/epoll.h HAVE_EPOLL_CLOEXEC)\n      if(HAVE_EPOLL_CLOEXEC)\n        set(ZMQ_IOTHREAD_POLLER_USE_EPOLL_CLOEXEC 1)\n      endif()\n    endif()\n  endif()\n\n  if(POLLER STREQUAL \"\")\n    check_include_files(\"sys/devpoll.h\" HAVE_DEVPOLL)\n    if(HAVE_DEVPOLL)\n      set(POLLER \"devpoll\")\n    endif()\n  endif()\n\n  if(POLLER STREQUAL \"\")\n    check_cxx_symbol_exists(pollset_create sys/pollset.h HAVE_POLLSET)\n    if(HAVE_POLLSET)\n      set(POLLER \"pollset\")\n    endif()\n  endif()\n\n  if(POLLER STREQUAL \"\")\n    check_cxx_symbol_exists(poll poll.h HAVE_POLL)\n    if(HAVE_POLL)\n      set(POLLER \"poll\")\n    endif()\n  endif()\nendif()\n\nif(POLLER STREQUAL \"\")\n  if(WIN32)\n    set(HAVE_SELECT 1)\n  else()\n    check_cxx_symbol_exists(select sys/select.h HAVE_SELECT)\n  endif()\n  if(HAVE_SELECT)\n    set(POLLER \"select\")\n  else()\n    message(FATAL_ERROR \"Could not autodetect polling method\")\n  endif()\nendif()\n\nif(POLLER STREQUAL \"kqueue\"\n   OR POLLER STREQUAL \"epoll\"\n   OR POLLER STREQUAL \"devpoll\"\n   OR POLLER STREQUAL \"pollset\"\n   OR POLLER STREQUAL \"poll\"\n   OR POLLER STREQUAL \"select\")\n  message(STATUS \"Using polling method in I/O threads: ${POLLER}\")\n  string(TOUPPER ${POLLER} UPPER_POLLER)\n  set(ZMQ_IOTHREAD_POLLER_USE_${UPPER_POLLER} 1)\nelse()\n  message(FATAL_ERROR \"Invalid polling method\")\nendif()\n\nif(POLLER STREQUAL \"epoll\" AND WIN32)\n  message(STATUS \"Including wepoll\")\n  list(APPEND sources ${CMAKE_CURRENT_SOURCE_DIR}/external/wepoll/wepoll.c\n       ${CMAKE_CURRENT_SOURCE_DIR}/external/wepoll/wepoll.h)\nendif()\n\nif(API_POLLER STREQUAL \"\")\n  if(POLLER STREQUAL \"select\")\n    set(API_POLLER \"select\")\n  else()\n    set(API_POLLER \"poll\")\n  endif()\nendif()\n\nmessage(STATUS \"Using polling method in zmq_poll(er)_* API: ${API_POLLER}\")\nstring(TOUPPER ${API_POLLER} UPPER_API_POLLER)\nset(ZMQ_POLL_BASED_ON_${UPPER_API_POLLER} 1)\n\ncheck_cxx_symbol_exists(pselect sys/select.h HAVE_PSELECT)\nif (NOT WIN32 AND HAVE_PSELECT)\n  set(ZMQ_HAVE_PPOLL 1)\nendif()\n\n# special alignment settings\nexecute_process(\n  COMMAND getconf LEVEL1_DCACHE_LINESIZE\n  OUTPUT_VARIABLE CACHELINE_SIZE\n  ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)\nif(CACHELINE_SIZE STREQUAL \"\"\n   OR CACHELINE_SIZE EQUAL 0\n   OR CACHELINE_SIZE EQUAL -1\n   OR CACHELINE_SIZE STREQUAL \"undefined\")\n  set(ZMQ_CACHELINE_SIZE 64)\nelse()\n  set(ZMQ_CACHELINE_SIZE ${CACHELINE_SIZE})\nendif()\nmessage(STATUS \"Using ${ZMQ_CACHELINE_SIZE} bytes alignment for lock-free data structures\")\ncheck_cxx_symbol_exists(posix_memalign stdlib.h HAVE_POSIX_MEMALIGN)\n\nif(NOT CYGWIN)\n  # TODO cannot we simply do 'if(WIN32) set(ZMQ_HAVE_WINDOWS ON)' or similar?\n  check_include_files(windows.h ZMQ_HAVE_WINDOWS)\nendif()\n\nif(NOT WIN32)\n  set(ZMQ_HAVE_IPC 1)\n  set(ZMQ_HAVE_STRUCT_SOCKADDR_UN 1)\nelse()\n  check_include_files(\"winsock2.h;afunix.h\" ZMQ_HAVE_IPC)\n  if(ZMQ_HAVE_IPC)\n    check_struct_has_member(\"struct sockaddr_un\" sun_path \"winsock2.h;afunix.h\" ZMQ_HAVE_STRUCT_SOCKADDR_UN)\n  endif()\nendif()\n\n# ##################### BEGIN condition_variable_t selection\nif(NOT ZMQ_CV_IMPL)\n  # prefer C++11 STL std::condition_variable implementation, if available\n  check_include_files(condition_variable ZMQ_HAVE_STL_CONDITION_VARIABLE LANGUAGE CXX)\n\n  if(ZMQ_HAVE_STL_CONDITION_VARIABLE)\n    set(ZMQ_CV_IMPL_DEFAULT \"stl11\")\n  else()\n    if(WIN32 AND NOT CMAKE_SYSTEM_VERSION VERSION_LESS \"6.0\")\n      # Win32API CONDITION_VARIABLE is supported from Windows Vista only\n      set(ZMQ_CV_IMPL_DEFAULT \"win32api\")\n    elseif(CMAKE_USE_PTHREADS_INIT)\n      set(ZMQ_CV_IMPL_DEFAULT \"pthreads\")\n    else()\n      set(ZMQ_CV_IMPL_DEFAULT \"none\")\n    endif()\n  endif()\n\n  # TODO a vxworks implementation also exists, but vxworks is not currently supported with cmake at all\n  set(ZMQ_CV_IMPL\n      \"${ZMQ_CV_IMPL_DEFAULT}\"\n      CACHE STRING \"Choose condition_variable_t implementation. Valid values are\n       stl11, win32api, pthreads, none [default=autodetect]\")\nendif()\n\nmessage(STATUS \"Using condition_variable_t implementation: ${ZMQ_CV_IMPL}\")\nif(ZMQ_CV_IMPL STREQUAL \"stl11\")\n  set(ZMQ_USE_CV_IMPL_STL11 1)\nelseif(ZMQ_CV_IMPL STREQUAL \"win32api\")\n  set(ZMQ_USE_CV_IMPL_WIN32API 1)\nelseif(ZMQ_CV_IMPL STREQUAL \"pthreads\")\n  set(ZMQ_USE_CV_IMPL_PTHREADS 1)\nelseif(ZMQ_CV_IMPL STREQUAL \"none\")\n  set(ZMQ_USE_CV_IMPL_NONE 1)\nelse()\n  message(ERROR \"Unknown value for ZMQ_CV_IMPL: ${ZMQ_CV_IMPL}\")\nendif()\n# ##################### END condition_variable_t selection\n\nif(NOT MSVC)\n  check_include_files(ifaddrs.h ZMQ_HAVE_IFADDRS)\n  check_include_files(sys/uio.h ZMQ_HAVE_UIO)\n  check_include_files(sys/eventfd.h ZMQ_HAVE_EVENTFD)\n  if(ZMQ_HAVE_EVENTFD AND NOT CMAKE_CROSSCOMPILING)\n    zmq_check_efd_cloexec()\n  endif()\nendif()\n\nif(ZMQ_HAVE_WINDOWS)\n  # Cannot use check_library_exists because the symbol is always declared as char(*)(void)\n  set(CMAKE_REQUIRED_LIBRARIES \"ws2_32.lib\")\n  check_cxx_symbol_exists(WSAStartup \"winsock2.h\" HAVE_WS2_32)\n  if(HAVE_WS2_32)\n    set(pkg_config_libs_private \"${pkg_config_libs_private} -lws2_32\")\n  endif()\n\n  set(CMAKE_REQUIRED_LIBRARIES \"rpcrt4.lib\")\n  check_cxx_symbol_exists(UuidCreateSequential \"rpc.h\" HAVE_RPCRT4)\n\n  set(CMAKE_REQUIRED_LIBRARIES \"iphlpapi.lib\")\n  check_cxx_symbol_exists(GetAdaptersAddresses \"winsock2.h;iphlpapi.h\" HAVE_IPHLAPI)\n  if(HAVE_IPHLAPI)\n    set(pkg_config_libs_private \"${pkg_config_libs_private} -liphlpapi\")\n  endif()\n  check_cxx_symbol_exists(if_nametoindex \"iphlpapi.h\" HAVE_IF_NAMETOINDEX)\n\n  set(CMAKE_REQUIRED_LIBRARIES \"\")\n  # TODO: This not the symbol we're looking for. What is the symbol?\n  check_library_exists(ws2 fopen \"\" HAVE_WS2)\nelse()\n  check_cxx_symbol_exists(if_nametoindex net/if.h HAVE_IF_NAMETOINDEX)\n  check_cxx_symbol_exists(SO_PEERCRED sys/socket.h ZMQ_HAVE_SO_PEERCRED)\n  check_cxx_symbol_exists(LOCAL_PEERCRED sys/socket.h ZMQ_HAVE_LOCAL_PEERCRED)\n  check_cxx_symbol_exists(SO_BUSY_POLL sys/socket.h ZMQ_HAVE_BUSY_POLL)\nendif()\n\nif(NOT MINGW)\n  find_library(RT_LIBRARY rt)\n  if(RT_LIBRARY)\n    set(pkg_config_libs_private \"${pkg_config_libs_private} -lrt\")\n\n    set(CMAKE_REQUIRED_LIBRARIES rt)\n    check_cxx_symbol_exists(clock_gettime time.h HAVE_CLOCK_GETTIME)\n    set(CMAKE_REQUIRED_LIBRARIES)\n  else()\n    check_cxx_symbol_exists(clock_gettime time.h HAVE_CLOCK_GETTIME)\n  endif()\nendif()\n\nfind_package(Threads)\n\nif(WIN32 AND NOT CYGWIN)\n  if(NOT HAVE_WS2_32 AND NOT HAVE_WS2)\n    message(FATAL_ERROR \"Cannot link to ws2_32 or ws2\")\n  endif()\n\n  if(NOT HAVE_RPCRT4)\n    message(FATAL_ERROR \"Cannot link to rpcrt4\")\n  endif()\n\n  if(NOT HAVE_IPHLAPI)\n    message(FATAL_ERROR \"Cannot link to iphlapi\")\n  endif()\nendif()\n\nif(NOT MSVC)\n  check_cxx_symbol_exists(fork unistd.h HAVE_FORK)\n  check_cxx_symbol_exists(gethrtime sys/time.h HAVE_GETHRTIME)\n  check_cxx_symbol_exists(mkdtemp \"stdlib.h;unistd.h\" HAVE_MKDTEMP)\n  check_cxx_symbol_exists(accept4 sys/socket.h HAVE_ACCEPT4)\n  check_cxx_symbol_exists(strnlen string.h HAVE_STRNLEN)\nelse()\n  set(HAVE_STRNLEN 1)\nendif()\n\nadd_definitions(-D_REENTRANT -D_THREAD_SAFE)\nadd_definitions(-DZMQ_CUSTOM_PLATFORM_HPP)\n\noption(ENABLE_EVENTFD \"Enable/disable eventfd\" ZMQ_HAVE_EVENTFD)\n\nmacro(zmq_check_cxx_flag_prepend flag)\n  check_cxx_compiler_flag(\"${flag}\" HAVE_FLAG_${flag})\n\n  if(HAVE_FLAG_${flag})\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${flag}\")\n  endif()\nendmacro()\n\noption(ENABLE_ANALYSIS \"Build with static analysis(make take very long)\" OFF)\n\nif(MSVC)\n  if(ENABLE_ANALYSIS)\n    zmq_check_cxx_flag_prepend(\"/W4\")\n\n    zmq_check_cxx_flag_prepend(\"/analyze\")\n\n    # C++11/14/17-specific, but maybe possible via conditional defines\n    zmq_check_cxx_flag_prepend(\"/wd26440\") # Function '...' can be declared 'noexcept'\n    zmq_check_cxx_flag_prepend(\"/wd26432\") # If you define or delete any default operation in the type '...', define or\n                                           # delete them all\n    zmq_check_cxx_flag_prepend(\"/wd26439\") # This kind of function may not throw. Declare it 'noexcept'\n    zmq_check_cxx_flag_prepend(\"/wd26447\") # The function is declared 'noexcept' but calls function '...' which may\n                                           # throw exceptions\n    zmq_check_cxx_flag_prepend(\"/wd26433\") # Function '...' should be marked with 'override'\n    zmq_check_cxx_flag_prepend(\"/wd26409\") # Avoid calling new and delete explicitly, use std::make_unique<T> instead\n    # Requires GSL\n    zmq_check_cxx_flag_prepend(\"/wd26429\") # Symbol '...' is never tested for nullness, it can be marked as not_null\n    zmq_check_cxx_flag_prepend(\"/wd26446\") # Prefer to use gsl::at()\n    zmq_check_cxx_flag_prepend(\"/wd26481\") # Don't use pointer arithmetic. Use span instead\n    zmq_check_cxx_flag_prepend(\"/wd26472\") # Don't use a static_cast for arithmetic conversions. Use brace\n                                           # initialization, gsl::narrow_cast or gsl::narow\n    zmq_check_cxx_flag_prepend(\"/wd26448\") # Consider using gsl::finally if final action is intended\n    zmq_check_cxx_flag_prepend(\"/wd26400\") # Do not assign the result of an allocation or a function call with an\n                                           # owner<T> return value to a raw pointer, use owner<T> instead\n    zmq_check_cxx_flag_prepend(\"/wd26485\") # Expression '...': No array to pointer decay(bounds.3)\n  else()\n    zmq_check_cxx_flag_prepend(\"/W3\")\n  endif()\n\n  if(MSVC_IDE)\n    set(MSVC_TOOLSET \"-${CMAKE_VS_PLATFORM_TOOLSET}\")\n  else()\n    set(MSVC_TOOLSET \"\")\n  endif()\nelse()\n  zmq_check_cxx_flag_prepend(\"-Wall\")\nendif()\n\nif(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  zmq_check_cxx_flag_prepend(\"-Wextra\")\nendif()\n\noption(LIBZMQ_PEDANTIC \"\" ON)\noption(LIBZMQ_WERROR \"\" OFF)\n\n# TODO: why is -Wno-long-long defined differently than in configure.ac?\nif(NOT MSVC)\n  zmq_check_cxx_flag_prepend(\"-Wno-long-long\")\n  zmq_check_cxx_flag_prepend(\"-Wno-uninitialized\")\n\n  if(LIBZMQ_PEDANTIC)\n    zmq_check_cxx_flag_prepend(\"-pedantic\")\n\n    if(${CMAKE_CXX_COMPILER_ID} MATCHES \"Intel\")\n      zmq_check_cxx_flag_prepend(\"-strict-ansi\")\n    endif()\n\n    if(${CMAKE_CXX_COMPILER_ID} MATCHES \"SunPro\")\n      zmq_check_cxx_flag_prepend(\"-compat=5\")\n    endif()\n  endif()\nendif()\n\nif(LIBZMQ_WERROR)\n  if(MSVC)\n    zmq_check_cxx_flag_prepend(\"/WX\")\n  else()\n    zmq_check_cxx_flag_prepend(\"-Werror\")\n    if(${CMAKE_CXX_COMPILER_ID} MATCHES \"SunPro\")\n      zmq_check_cxx_flag_prepend(\"-errwarn=%all\")\n    endif()\n  endif()\nendif()\n\nif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^sparc\")\n  zmq_check_cxx_flag_prepend(\"-mcpu=v9\")\nendif()\n\nif(${CMAKE_CXX_COMPILER_ID} MATCHES \"SunPro\")\n  zmq_check_cxx_flag_prepend(\"-features=zla\")\nendif()\n\nif(CMAKE_SYSTEM_NAME MATCHES \"SunOS\"\n   OR CMAKE_SYSTEM_NAME MATCHES \"NetBSD\"\n   OR CMAKE_SYSTEM_NAME MATCHES \"QNX\")\n  message(STATUS \"Checking whether atomic operations can be used\")\n  check_c_source_compiles(\n    \"\\\n  #include <atomic.h> \\\n  \\\n  int main() \\\n  { \\\n    uint32_t value; \\\n    atomic_cas_32(&value, 0, 0); \\\n    return 0; \\\n  } \\\n  \"\n    HAVE_ATOMIC_H)\n\n  if(NOT HAVE_ATOMIC_H)\n    set(ZMQ_FORCE_MUTEXES 1)\n  endif()\nendif()\n\nif(NOT ANDROID)\n  zmq_check_noexcept()\nendif()\n\n# -----------------------------------------------------------------------------\nif (NOT MSVC)\n  # Compilation checks\n  zmq_check_pthread_setname()\n  zmq_check_pthread_setaffinity()\n  # Execution checks\n  if(NOT CMAKE_CROSSCOMPILING)\n    zmq_check_sock_cloexec()\n    zmq_check_o_cloexec()\n    zmq_check_so_bindtodevice()\n    zmq_check_so_keepalive()\n    zmq_check_so_priority()\n    zmq_check_tcp_keepcnt()\n    zmq_check_tcp_keepidle()\n    zmq_check_tcp_keepintvl()\n    zmq_check_tcp_keepalive()\n    zmq_check_tcp_tipc()\n    zmq_check_getrandom()\n  endif()\nendif()\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Linux\"\n   OR CMAKE_SYSTEM_NAME MATCHES \"GNU/kFreeBSD\"\n   OR CMAKE_SYSTEM_NAME MATCHES \"GNU/Hurd\"\n   OR CYGWIN)\n  add_definitions(-D_GNU_SOURCE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"FreeBSD\")\n  add_definitions(-D__BSD_VISIBLE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"NetBSD\")\n  add_definitions(-D_NETBSD_SOURCE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"OpenBSD\")\n  add_definitions(-D_OPENBSD_SOURCE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"SunOS\")\n  add_definitions(-D_PTHREADS)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"HP-UX\")\n  add_definitions(-D_POSIX_C_SOURCE=200112L)\n  zmq_check_cxx_flag_prepend(-Ae)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n  add_definitions(-D_DARWIN_C_SOURCE)\nendif()\n\nfind_package(AsciiDoctor)\n\ncmake_dependent_option(WITH_DOC \"Build Reference Guide documentation(requires DocBook)\" ON \"ASCIIDOC_FOUND;NOT WIN32\"\n                       OFF) # Do not build docs on Windows due to issues with symlinks\n\nif(MSVC)\n  if(WITH_OPENPGM)\n    # set(OPENPGM_ROOT \"\" CACHE PATH \"Location of OpenPGM\")\n    set(OPENPGM_VERSION_MAJOR 5)\n    set(OPENPGM_VERSION_MINOR 2)\n    set(OPENPGM_VERSION_MICRO 122)\n    if(CMAKE_CL_64)\n      find_path(\n        OPENPGM_ROOT include/pgm/pgm.h\n        PATHS\n          \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Miru\\\\OpenPGM ${OPENPGM_VERSION_MAJOR}.${OPENPGM_VERSION_MINOR}.${OPENPGM_VERSION_MICRO}]\"\n        NO_DEFAULT_PATH)\n      message(STATUS \"OpenPGM x64 detected - ${OPENPGM_ROOT}\")\n    else()\n      find_path(\n        OPENPGM_ROOT include/pgm/pgm.h\n        PATHS\n          \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Miru\\\\OpenPGM ${OPENPGM_VERSION_MAJOR}.${OPENPGM_VERSION_MINOR}.${OPENPGM_VERSION_MICRO}]\"\n          \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Miru\\\\OpenPGM ${OPENPGM_VERSION_MAJOR}.${OPENPGM_VERSION_MINOR}.${OPENPGM_VERSION_MICRO}]\"\n          NO_DEFAULT_PATH)\n      message(STATUS \"OpenPGM x86 detected - ${OPENPGM_ROOT}\")\n    endif()\n    set(OPENPGM_INCLUDE_DIRS ${OPENPGM_ROOT}/include)\n    set(OPENPGM_LIBRARY_DIRS ${OPENPGM_ROOT}/lib)\n    set(OPENPGM_LIBRARIES\n        optimized\n        libpgm${MSVC_TOOLSET}-mt-${OPENPGM_VERSION_MAJOR}_${OPENPGM_VERSION_MINOR}_${OPENPGM_VERSION_MICRO}.lib debug\n        libpgm${MSVC_TOOLSET}-mt-gd-${OPENPGM_VERSION_MAJOR}_${OPENPGM_VERSION_MINOR}_${OPENPGM_VERSION_MICRO}.lib)\n  endif()\nelse()\n  if(WITH_OPENPGM)\n    # message(FATAL_ERROR \"WITH_OPENPGM not implemented\")\n\n    if(NOT OPENPGM_PKGCONFIG_NAME)\n      set(OPENPGM_PKGCONFIG_NAME \"openpgm-5.2\")\n    endif()\n\n    set(OPENPGM_PKGCONFIG_NAME\n        ${OPENPGM_PKGCONFIG_NAME}\n        CACHE STRING \"Name pkg-config shall use to find openpgm libraries and include paths\" FORCE)\n\n    pkg_check_modules(OPENPGM ${OPENPGM_PKGCONFIG_NAME})\n\n    if(OPENPGM_FOUND)\n      message(STATUS ${OPENPGM_PKGCONFIG_NAME}\" found\")\n      set(pkg_config_names_private \"${pkg_config_names_private} ${OPENPGM_PKGCONFIG_NAME}\")\n    else()\n      message(\n        FATAL_ERROR\n          ${OPENPGM_PKGCONFIG_NAME}\"  not found. openpgm is searchd via `pkg-config ${OPENPGM_PKGCONFIG_NAME}`. Consider providing a valid OPENPGM_PKGCONFIG_NAME\"\n      )\n    endif()\n\n    # DSO symbol visibility for openpgm\n    if(HAVE_FLAG_VISIBILITY_HIDDEN)\n\n    elseif(HAVE_FLAG_LDSCOPE_HIDDEN)\n\n    endif()\n  endif()\nendif()\n\n# -----------------------------------------------------------------------------\n# force off-tree build\n\nif(${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_BINARY_DIR})\n  message(\n    FATAL_ERROR\n      \"CMake generation is not allowed within the source directory! \\\n    Remove the CMakeCache.txt file and try again from another folder, e.g.: \\\n    \\\n      rm CMakeCache.txt \\\n      mkdir cmake-make \\\n      cd cmake-make \\\n      cmake ..\")\nendif()\n\n# -----------------------------------------------------------------------------\n# default to Release build\n\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n  # CMAKE_BUILD_TYPE is not used for multi-configuration generators like Visual Studio/XCode which instead use\n  # CMAKE_CONFIGURATION_TYPES\n  set(CMAKE_BUILD_TYPE\n      Release\n      CACHE STRING \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.\" FORCE)\nendif()\n\n# -----------------------------------------------------------------------------\n# output directories\n\nzmq_set_with_default(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${ZeroMQ_BINARY_DIR}/bin\")\nif(UNIX)\n  set(zmq_library_directory \"lib\")\nelse()\n  set(zmq_library_directory \"bin\")\nendif()\nzmq_set_with_default(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${ZeroMQ_BINARY_DIR}/${zmq_library_directory}\")\nzmq_set_with_default(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${ZeroMQ_BINARY_DIR}/lib\")\n\n# -----------------------------------------------------------------------------\n# platform specifics\n\nif(WIN32)\n  # Socket limit is 16K(can be raised arbitrarily)\n  add_definitions(-DFD_SETSIZE=16384)\n  add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n  add_definitions(-D_WINSOCK_DEPRECATED_NO_WARNINGS)\nendif()\n\nif(MSVC)\n  # Parallel make.\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /MP\")\n\n  # Compile the static lib with debug information included note: we assume here that the default flags contain some /Z\n  # flag\n  string(REGEX REPLACE \"/Z.[^:]\" \"/Z7 \" CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\")\n  string(REGEX REPLACE \"/Z.[^:]\" \"/Z7 \" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n\nendif()\n\n# -----------------------------------------------------------------------------\n# source files\n\nset(cxx-sources\n    precompiled.cpp\n    address.cpp\n    channel.cpp\n    client.cpp\n    clock.cpp\n    ctx.cpp\n    curve_mechanism_base.cpp\n    curve_client.cpp\n    curve_server.cpp\n    dealer.cpp\n    devpoll.cpp\n    dgram.cpp\n    dist.cpp\n    endpoint.cpp\n    epoll.cpp\n    err.cpp\n    fq.cpp\n    io_object.cpp\n    io_thread.cpp\n    ip.cpp\n    ipc_address.cpp\n    ipc_connecter.cpp\n    ipc_listener.cpp\n    kqueue.cpp\n    lb.cpp\n    mailbox.cpp\n    mailbox_safe.cpp\n    mechanism.cpp\n    mechanism_base.cpp\n    metadata.cpp\n    msg.cpp\n    mtrie.cpp\n    norm_engine.cpp\n    object.cpp\n    options.cpp\n    own.cpp\n    null_mechanism.cpp\n    pair.cpp\n    peer.cpp\n    pgm_receiver.cpp\n    pgm_sender.cpp\n    pgm_socket.cpp\n    pipe.cpp\n    plain_client.cpp\n    plain_server.cpp\n    poll.cpp\n    poller_base.cpp\n    polling_util.cpp\n    pollset.cpp\n    proxy.cpp\n    pub.cpp\n    pull.cpp\n    push.cpp\n    random.cpp\n    raw_encoder.cpp\n    raw_decoder.cpp\n    raw_engine.cpp\n    reaper.cpp\n    rep.cpp\n    req.cpp\n    router.cpp\n    select.cpp\n    server.cpp\n    session_base.cpp\n    signaler.cpp\n    socket_base.cpp\n    socks.cpp\n    socks_connecter.cpp\n    stream.cpp\n    stream_engine_base.cpp\n    sub.cpp\n    tcp.cpp\n    tcp_address.cpp\n    tcp_connecter.cpp\n    tcp_listener.cpp\n    thread.cpp\n    trie.cpp\n    radix_tree.cpp\n    v1_decoder.cpp\n    v1_encoder.cpp\n    v2_decoder.cpp\n    v2_encoder.cpp\n    v3_1_encoder.cpp\n    xpub.cpp\n    xsub.cpp\n    zmq.cpp\n    zmq_utils.cpp\n    decoder_allocators.cpp\n    socket_poller.cpp\n    timers.cpp\n    config.hpp\n    radio.cpp\n    dish.cpp\n    udp_engine.cpp\n    udp_address.cpp\n    scatter.cpp\n    gather.cpp\n    ip_resolver.cpp\n    zap_client.cpp\n    zmtp_engine.cpp\n    # at least for VS, the header files must also be listed\n    address.hpp\n    array.hpp\n    atomic_counter.hpp\n    atomic_ptr.hpp\n    blob.hpp\n    channel.hpp\n    client.hpp\n    clock.hpp\n    command.hpp\n    compat.hpp\n    condition_variable.hpp\n    config.hpp\n    ctx.hpp\n    curve_client.hpp\n    curve_client_tools.hpp\n    curve_mechanism_base.hpp\n    curve_server.hpp\n    dbuffer.hpp\n    dealer.hpp\n    decoder.hpp\n    decoder_allocators.hpp\n    devpoll.hpp\n    dgram.hpp\n    dish.hpp\n    dist.hpp\n    encoder.hpp\n    endpoint.hpp\n    epoll.hpp\n    err.hpp\n    fd.hpp\n    fq.hpp\n    gather.hpp\n    generic_mtrie.hpp\n    generic_mtrie_impl.hpp\n    gssapi_client.hpp\n    gssapi_mechanism_base.hpp\n    gssapi_server.hpp\n    i_decoder.hpp\n    i_encoder.hpp\n    i_engine.hpp\n    i_mailbox.hpp\n    i_poll_events.hpp\n    io_object.hpp\n    io_thread.hpp\n    ip.hpp\n    ipc_address.hpp\n    ipc_connecter.hpp\n    ipc_listener.hpp\n    kqueue.hpp\n    lb.hpp\n    likely.hpp\n    macros.hpp\n    mailbox.hpp\n    mailbox_safe.hpp\n    mechanism.hpp\n    mechanism_base.hpp\n    metadata.hpp\n    msg.hpp\n    mtrie.hpp\n    mutex.hpp\n    norm_engine.hpp\n    null_mechanism.hpp\n    object.hpp\n    options.hpp\n    own.hpp\n    pair.hpp\n    peer.hpp\n    pgm_receiver.hpp\n    pgm_sender.hpp\n    pgm_socket.hpp\n    pipe.hpp\n    plain_client.hpp\n    plain_common.hpp\n    plain_server.hpp\n    poll.hpp\n    poller.hpp\n    poller_base.hpp\n    polling_util.hpp\n    pollset.hpp\n    precompiled.hpp\n    proxy.hpp\n    pub.hpp\n    pull.hpp\n    push.hpp\n    radio.hpp\n    random.hpp\n    raw_decoder.hpp\n    raw_encoder.hpp\n    raw_engine.hpp\n    reaper.hpp\n    rep.hpp\n    req.hpp\n    router.hpp\n    scatter.hpp\n    secure_allocator.hpp\n    select.hpp\n    server.hpp\n    session_base.hpp\n    signaler.hpp\n    socket_base.hpp\n    socket_poller.hpp\n    socks.hpp\n    socks_connecter.hpp\n    stdint.hpp\n    stream.hpp\n    stream_engine_base.hpp\n    stream_connecter_base.hpp\n    stream_connecter_base.cpp\n    stream_listener_base.hpp\n    stream_listener_base.cpp\n    sub.hpp\n    tcp.hpp\n    tcp_address.hpp\n    tcp_connecter.hpp\n    tcp_listener.hpp\n    thread.hpp\n    timers.hpp\n    tipc_address.hpp\n    tipc_connecter.hpp\n    tipc_listener.hpp\n    trie.hpp\n    udp_address.hpp\n    udp_engine.hpp\n    v1_decoder.hpp\n    v1_encoder.hpp\n    v2_decoder.hpp\n    v2_encoder.hpp\n    v3_1_encoder.hpp\n    v2_protocol.hpp\n    vmci.hpp\n    vmci_address.hpp\n    vmci_connecter.hpp\n    vmci_listener.hpp\n    windows.hpp\n    wire.hpp\n    xpub.hpp\n    xsub.hpp\n    ypipe.hpp\n    ypipe_base.hpp\n    ypipe_conflate.hpp\n    yqueue.hpp\n    zap_client.hpp\n    zmtp_engine.hpp)\n\nif(MINGW)\n  # Generate the right type when using -m32 or -m64\n  macro(set_rc_arch rc_target)\n    set(CMAKE_RC_COMPILER_INIT windres)\n    enable_language(RC)\n    set(CMAKE_RC_COMPILE_OBJECT\n        \"<CMAKE_RC_COMPILER> <FLAGS> -O coff --target=${rc_target} <DEFINES> -i <SOURCE> -o <OBJECT>\")\n  endmacro()\n\n  if(NOT CMAKE_SYSTEM_PROCESSOR)\n    set(CMAKE_SYSTEM_PROCESSOR ${CMAKE_HOST_SYSTEM_PROCESSOR})\n  endif()\n\n  # Also happens on x86_64 systems...what a worthless variable\n  if(CMAKE_SYSTEM_PROCESSOR MATCHES \"i386\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"i486\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"i586\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"i686\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"x86\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"x86_64\"\n     OR CMAKE_SYSTEM_PROCESSOR MATCHES \"amd64\")\n\n    if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n      set_rc_arch(\"pe-x86-64\")\n    else()\n      set_rc_arch(\"pe-i386\")\n    endif()\n  endif()\nendif()\n\nset(public_headers include/zmq.h include/zmq_utils.h)\n\nset(readme-docs AUTHORS LICENSE NEWS)\n\n# -----------------------------------------------------------------------------\n# optional modules\n\nif(WITH_OPENPGM)\n  message(STATUS \"Building with OpenPGM\")\n  set(ZMQ_HAVE_OPENPGM 1)\n  include_directories(${OPENPGM_INCLUDE_DIRS})\n  link_directories(${OPENPGM_LIBRARY_DIRS})\n  set(OPTIONAL_LIBRARIES ${OPENPGM_LIBRARIES})\nendif()\n\nif(WITH_NORM)\n  find_package(norm)\n    if(norm_FOUND)\n      message(STATUS \"Building with NORM\")\n      set(ZMQ_HAVE_NORM 1)\n    else()\n      message(FATAL_ERROR \"NORM not found\")\n    endif()\nendif()\n\nif(WITH_VMCI)\nmessage(STATUS \"Building with VMCI\")\n  set(ZMQ_HAVE_VMCI 1)\n  include_directories(${VMCI_INCLUDE_DIRS})\n  list(APPEND cxx-sources vmci_address.cpp vmci_connecter.cpp vmci_listener.cpp vmci.cpp)\nendif()\n\nif(ZMQ_HAVE_TIPC)\n  list(APPEND cxx-sources tipc_address.cpp tipc_connecter.cpp tipc_listener.cpp)\nendif()\n\nif(WITH_GSSAPI_KRB5)\n  list(APPEND cxx-sources gssapi_client.cpp gssapi_mechanism_base.cpp gssapi_server.cpp)\nendif()\n\n# -----------------------------------------------------------------------------\n# source generators\n\nforeach(source ${cxx-sources})\n  list(APPEND sources ${CMAKE_CURRENT_SOURCE_DIR}/src/${source})\nendforeach()\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/src/version.rc.in ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n\n# Delete any src/platform.hpp left by configure\nfile(REMOVE ${CMAKE_CURRENT_SOURCE_DIR}/src/platform.hpp)\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/builds/cmake/platform.hpp.in ${CMAKE_CURRENT_BINARY_DIR}/platform.hpp)\nlist(APPEND sources ${CMAKE_CURRENT_BINARY_DIR}/platform.hpp)\n\nset(prefix ${CMAKE_INSTALL_PREFIX})\nset(exec_prefix \"\\${prefix}\")\nset(libdir \"\\${prefix}/${CMAKE_INSTALL_LIBDIR}\")\nset(includedir \"\\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}\")\nset(VERSION ${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH})\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/src/libzmq.pc.in ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc @ONLY)\nset(zmq-pkgconfig ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc)\n\nif(NOT ZMQ_BUILD_FRAMEWORK)\n  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\nendif()\n\nif(MSVC)\n  if(CMAKE_CL_64)\n    set(nsis-template ${CMAKE_CURRENT_SOURCE_DIR}/builds/cmake/NSIS.template64.in)\n  else()\n    set(nsis-template ${CMAKE_CURRENT_SOURCE_DIR}/builds/cmake/NSIS.template32.in)\n  endif()\n\n  add_custom_command(\n    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/NSIS.template.in\n    COMMAND ${CMAKE_COMMAND} ARGS -E copy ${nsis-template} ${CMAKE_CURRENT_BINARY_DIR}/NSIS.template.in\n    DEPENDS ${nsis-template})\nendif()\n\noption(WITH_DOCS \"Build html docs\" ON)\nif(WITH_DOCS)\n  file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc)\n  file(\n    GLOB asciidoc_files\n    RELATIVE ${CMAKE_CURRENT_BINARY_DIR}/\n    \"${CMAKE_CURRENT_SOURCE_DIR}/doc/*.adoc\")\n  string(REPLACE \".txt\" \".html\" html_files ${asciidoc_files})\n  add_custom_command(\n    OUTPUT ${html_files}\n    COMMAND asciidoctor -b html -azmq_version=${ZMQ_VERSION} *.adoc\n    DEPENDS ${asciidoc_files}\n    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n    COMMENT \"Generating ${html}\")\nendif()\n\nif(ZMQ_BUILD_FRAMEWORK)\n  add_custom_command(\n    TARGET libzmq\n    POST_BUILD\n    COMMAND ${CMAKE_COMMAND} ARGS -E make_directory\n            \"${CMAKE_LIBRARY_OUTPUT_PATH}/ZeroMQ.framework/Versions/${ZMQ_VERSION}/MacOS\"\n    COMMENT \"Perf tools\")\nendif()\n\noption(ENABLE_PRECOMPILED \"Enable precompiled headers, if possible\" ON)\nif(MSVC AND ENABLE_PRECOMPILED)\n  # default for all sources is to use precompiled headers\n  foreach(source ${sources})\n    # C and C++ can not use the same precompiled header\n    if(${source} MATCHES \".cpp$\" AND NOT ${source} STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}/src/precompiled.cpp\")\n      set_source_files_properties(${source} PROPERTIES COMPILE_FLAGS \"/Yuprecompiled.hpp\" OBJECT_DEPENDS\n                                                                                          precompiled.hpp)\n    endif()\n  endforeach()\n  # create precompiled header\n  set_source_files_properties(${CMAKE_CURRENT_SOURCE_DIR}/src/precompiled.cpp\n                              PROPERTIES COMPILE_FLAGS \"/Ycprecompiled.hpp\" OBJECT_OUTPUTS precompiled.hpp)\nendif()\n\n# -----------------------------------------------------------------------------\n# output\noption(BUILD_SHARED \"Whether or not to build the shared object\" ON)\noption(BUILD_STATIC \"Whether or not to build the static archive\" ON)\n\nif(MSVC)\n  # Suppress linker warnings caused by #ifdef omission of file content.\n  set(CMAKE_STATIC_LINKER_FLAGS \"${CMAKE_STATIC_LINKER_FLAGS} /ignore:4221\")\n  set(PDB_OUTPUT_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}/bin\")\n  set(PDB_NAME\n      \"lib${ZMQ_OUTPUT_BASENAME}${MSVC_TOOLSET}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\")\n  function(enable_vs_guideline_checker target)\n    set_target_properties(\n      ${target} PROPERTIES VS_GLOBAL_EnableCppCoreCheck true VS_GLOBAL_CodeAnalysisRuleSet CppCoreCheckRules.ruleset\n                           VS_GLOBAL_RunCodeAnalysis true)\n  endfunction()\n  if(BUILD_SHARED)\n    # Whole Program Optimization flags. http://msdn.microsoft.com/en-us/magazine/cc301698.aspx\n    #\n    # \"Finally, there's the subject of libraries. It's possible to create .LIB \n    # files with code in its IL form. The linker will happily work with these \n    # .LIB files. Be aware that these libraries will be tied to a specific \n    # version of the compiler and linker. If you distribute these libraries, \n    # you'll need to update them if Microsoft changes the format of IL in a \n    # future release.\"\n    # \n    # /GL and /LTCG can cause problems when libraries built with different \n    # versions of compiler are later linked into an executable while /LTCG is active. \n    # https://social.msdn.microsoft.com/Forums/vstudio/en-US/5c102025-c254-4f02-9a51-c775c6cc9f4b/problem-with-ltcg-when-building-a-static-library-in-vs2005?forum=vcgeneral\n    #\n    # For this reason, enable only when building a \"Release\" (e.g. non-DEBUG) DLL.\n    if(NOT ${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /GL\")\n      set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /LTCG\")\n      set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /LTCG\")\n      set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} /LTCG\")\n    endif()\n\n    add_library(libzmq SHARED ${sources} ${public_headers} ${html-docs} ${readme-docs}\n                              ${CMAKE_CURRENT_BINARY_DIR}/NSIS.template.in ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n    if(ENABLE_ANALYSIS)\n      enable_vs_guideline_checker(libzmq)\n    endif()\n    set_target_properties(\n      libzmq\n      PROPERTIES PUBLIC_HEADER \"${public_headers}\"\n                 RELEASE_POSTFIX \"${MSVC_TOOLSET}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 RELWITHDEBINFO_POSTFIX\n                 \"${MSVC_TOOLSET}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 MINSIZEREL_POSTFIX \"${MSVC_TOOLSET}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 DEBUG_POSTFIX \"${MSVC_TOOLSET}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\"\n                 COMPILE_DEFINITIONS \"DLL_EXPORT\"\n                 OUTPUT_NAME \"lib${ZMQ_OUTPUT_BASENAME}\")\n    if(ZMQ_HAVE_WINDOWS_UWP)\n      set_target_properties(libzmq PROPERTIES LINK_FLAGS_DEBUG \"/OPT:NOICF /OPT:NOREF\")\n    endif()\n  endif()\n\n  if(BUILD_STATIC)\n    add_library(libzmq-static STATIC ${sources} ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n    set_target_properties(\n      libzmq-static\n      PROPERTIES PUBLIC_HEADER \"${public_headers}\"\n                 RELEASE_POSTFIX \"${MSVC_TOOLSET}-mt-s-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 RELWITHDEBINFO_POSTFIX\n                 \"${MSVC_TOOLSET}-mt-s-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 MINSIZEREL_POSTFIX\n                 \"${MSVC_TOOLSET}-mt-s-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 DEBUG_POSTFIX \"${MSVC_TOOLSET}-mt-sgd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}\"\n                 COMPILE_FLAGS \"/DZMQ_STATIC\"\n                 OUTPUT_NAME \"lib${ZMQ_OUTPUT_BASENAME}\")\n  endif()\nelse()\n  # avoid building everything twice for shared + static only on *nix, as Windows needs different preprocessor defines in\n  # static builds\n  if(NOT MINGW)\n    add_library(objects OBJECT ${sources})\n    set_property(TARGET objects PROPERTY POSITION_INDEPENDENT_CODE ON)\n    if(GNUTLS_FOUND)\n      target_include_directories(objects PRIVATE \"${GNUTLS_INCLUDE_DIR}\")\n    endif()\n  endif()\n\n  if(BUILD_SHARED)\n    if(MINGW)\n      add_library(libzmq SHARED ${sources} ${public_headers} ${html-docs} ${readme-docs} ${zmq-pkgconfig}\n                                ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n    else()\n        if (CMAKE_GENERATOR STREQUAL \"Xcode\")\n           add_library(libzmq SHARED ${sources} ${public_headers} ${html-docs} ${readme-docs}\n                                     ${zmq-pkgconfig} ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n        else()\n           add_library(libzmq SHARED $<TARGET_OBJECTS:objects> ${public_headers} ${html-docs} ${readme-docs}\n                                     ${zmq-pkgconfig} ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n        endif()\n\n    endif()\n    # NOTE: the SOVERSION and VERSION MUST be the same as the one generated by libtool! It is NOT the same as the\n    # version of the package.\n    set_target_properties(\n      libzmq PROPERTIES COMPILE_DEFINITIONS \"DLL_EXPORT\" PUBLIC_HEADER \"${public_headers}\" VERSION \"5.2.6\"\n                        SOVERSION \"5\" OUTPUT_NAME \"${ZMQ_OUTPUT_BASENAME}\" PREFIX \"lib\")\n    if(ZMQ_BUILD_FRAMEWORK)\n      set_target_properties(\n        libzmq\n        PROPERTIES FRAMEWORK TRUE MACOSX_FRAMEWORK_IDENTIFIER \"org.zeromq.libzmq\" MACOSX_FRAMEWORK_SHORT_VERSION_STRING\n                                                                                  ${ZMQ_VERSION}\n                   MACOSX_FRAMEWORK_BUNDLE_VERSION ${ZMQ_VERSION})\n      set_source_files_properties(${html-docs} PROPERTIES MACOSX_PACKAGE_LOCATION doc)\n      set_source_files_properties(${readme-docs} PROPERTIES MACOSX_PACKAGE_LOCATION etc)\n      set_source_files_properties(${zmq-pkgconfig} PROPERTIES MACOSX_PACKAGE_LOCATION lib/pkgconfig)\n    endif()\n  endif()\n\n  if(BUILD_STATIC)\n    if(MINGW)\n      add_library(libzmq-static STATIC ${sources} ${public_headers} ${html-docs} ${readme-docs} ${zmq-pkgconfig}\n                                       ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n    else()\n      if (CMAKE_GENERATOR STREQUAL \"Xcode\")\n        add_library(libzmq-static STATIC ${sources} ${public_headers} ${html-docs} ${readme-docs}\n                                         ${zmq-pkgconfig} ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n      else()\n        add_library(libzmq-static STATIC $<TARGET_OBJECTS:objects> ${public_headers} ${html-docs} ${readme-docs}\n                                         ${zmq-pkgconfig} ${CMAKE_CURRENT_BINARY_DIR}/version.rc)\n      endif()\n    endif()\n    if(CMAKE_SYSTEM_NAME MATCHES \"QNX\")\n      target_link_libraries(libzmq-static m)\n    endif()\n    set_target_properties(\n      libzmq-static PROPERTIES PUBLIC_HEADER \"${public_headers}\" OUTPUT_NAME \"${ZMQ_OUTPUT_BASENAME}\" PREFIX \"lib\")\n  endif()\nendif()\n\nif(BUILD_STATIC)\n  target_compile_definitions(libzmq-static PUBLIC ZMQ_STATIC)\nendif()\n\nlist(APPEND target_outputs \"\")\n\nif(BUILD_SHARED)\n  list(APPEND target_outputs \"libzmq\")\nendif()\n\nif(BUILD_STATIC)\n  list(APPEND target_outputs \"libzmq-static\")\nendif()\n\nset(build_targets ${target_outputs})\nif(TARGET objects)\n  list(APPEND build_targets \"objects\")\nendif()\n\nforeach(target ${build_targets})\n  target_include_directories(\n    ${target} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n                     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)\n\n  if(ENABLE_DRAFTS)\n    target_compile_definitions(${target} PUBLIC ZMQ_BUILD_DRAFT_API)\n  endif()\nendforeach()\n\nif(BUILD_SHARED)\n  target_link_libraries(libzmq ${CMAKE_THREAD_LIBS_INIT})\n\n  if(QNX)\n    target_link_libraries(libzmq -lsocket)\n  endif()\n\n  if(GNUTLS_FOUND)\n    target_link_libraries(libzmq ${GNUTLS_LIBRARIES})\n    target_include_directories(libzmq PRIVATE \"${GNUTLS_INCLUDE_DIR}\")\n  endif()\n\n  if(NSS3_FOUND)\n    target_link_libraries(libzmq ${NSS3_LIBRARIES})\n  endif()\n\n  if(LIBBSD_FOUND)\n    target_link_libraries(libzmq ${LIBBSD_LIBRARIES})\n  endif()\n\n  if(SODIUM_FOUND)\n    target_link_libraries(libzmq ${SODIUM_LIBRARIES})\n    # On Solaris, libsodium depends on libssp\n    if(${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n      target_link_libraries(libzmq ssp)\n    endif()\n  endif()\n\n  if(WITH_GSSAPI_KRB5)\n    target_link_libraries(libzmq ${GSSAPI_KRB5_LIBRARIES})\n  endif()\n\n  if(HAVE_WS2_32)\n    target_link_libraries(libzmq ws2_32)\n  elseif(HAVE_WS2)\n    target_link_libraries(libzmq ws2)\n  endif()\n\n  if(HAVE_RPCRT4)\n    target_link_libraries(libzmq rpcrt4)\n  endif()\n\n  if(HAVE_IPHLAPI)\n    target_link_libraries(libzmq iphlpapi)\n  endif()\n\n  if(RT_LIBRARY)\n    target_link_libraries(libzmq -lrt)\n  endif()\n\n  if(norm_FOUND)\n      target_link_libraries(libzmq norm::norm)\n  endif()\n\n  if(OPENPGM_FOUND)\n      target_link_libraries(libzmq ${OPENPGM_LIBRARIES})\n  endif()\nendif()\n\nif(BUILD_STATIC)\n  target_link_libraries(libzmq-static ${CMAKE_THREAD_LIBS_INIT})\n  if(GNUTLS_FOUND)\n    target_link_libraries(libzmq-static ${GNUTLS_LIBRARIES})\n    target_include_directories(libzmq-static PRIVATE \"${GNUTLS_INCLUDE_DIR}\")\n  endif()\n\n  if(LIBBSD_FOUND)\n    target_link_libraries(libzmq-static ${LIBBSD_LIBRARIES})\n  endif()\n\n  if(NSS3_FOUND)\n    target_link_libraries(libzmq-static ${NSS3_LIBRARIES})\n  endif()\n\n  if(SODIUM_FOUND)\n    target_link_libraries(libzmq-static ${SODIUM_LIBRARIES})\n    # On Solaris, libsodium depends on libssp\n    if(${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n      target_link_libraries(libzmq-static ssp)\n    endif()\n  endif()\n\n  if(WITH_GSSAPI_KRB5)\n    target_link_libraries(libzmq-static ${GSSAPI_KRB5_LIBRARIES})\n  endif()\n\n  if(HAVE_WS2_32)\n    target_link_libraries(libzmq-static ws2_32)\n  elseif(HAVE_WS2)\n    target_link_libraries(libzmq-static ws2)\n  endif()\n\n  if(HAVE_RPCRT4)\n    target_link_libraries(libzmq-static rpcrt4)\n  endif()\n\n  if(HAVE_IPHLAPI)\n    target_link_libraries(libzmq-static iphlpapi)\n  endif()\n\n  if(RT_LIBRARY)\n    target_link_libraries(libzmq-static -lrt)\n  endif()\n\n  if(CMAKE_SYSTEM_NAME MATCHES \"QNX\")\n    add_definitions(-DUNITY_EXCLUDE_MATH_H)\n  endif()\n\n  if(norm_FOUND)\n      target_link_libraries(libzmq-static norm::norm)\n  endif()\n\n  if(OPENPGM_FOUND)\n      target_link_libraries(libzmq-static ${OPENPGM_LIBRARIES})\n  endif()\nendif()\n\nif(BUILD_SHARED)\n  set(perf-tools\n      local_lat\n      remote_lat\n      local_thr\n      remote_thr\n      inproc_lat\n      inproc_thr\n      proxy_thr)\n\n  if(NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\") # Why?\n    option(WITH_PERF_TOOL \"Build with perf-tools\" ON)\n  else()\n    option(WITH_PERF_TOOL \"Build with perf-tools\" OFF)\n  endif()\n\n  if(WITH_PERF_TOOL)\n    foreach(perf-tool ${perf-tools})\n      add_executable(${perf-tool} perf/${perf-tool}.cpp)\n      target_link_libraries(${perf-tool} libzmq)\n\n      if(GNUTLS_FOUND)\n        target_link_libraries(${perf-tool} ${GNUTLS_LIBRARIES})\n        target_include_directories(${perf-tool} PRIVATE \"${GNUTLS_INCLUDE_DIR}\")\n      endif()\n\n      if(LIBBSD_FOUND)\n        target_link_libraries(${perf-tool} ${LIBBSD_LIBRARIES})\n      endif()\n\n      if(NSS3_FOUND)\n        target_link_libraries(${perf-tool} ${NSS3_LIBRARIES})\n      endif()\n\n      if(SODIUM_FOUND)\n        target_link_libraries(${perf-tool} ${SODIUM_LIBRARIES})\n      endif()\n\n      if(WITH_GSSAPI_KRB5)\n        target_link_libraries(${perf-tool} ${GSSAPI_KRB5_LIBRARIES})\n      endif()\n\n      if(ZMQ_BUILD_FRAMEWORK)\n        # Copy perf-tools binaries into Framework\n        add_custom_command(\n          TARGET libzmq\n          ${perf-tool} POST_BUILD\n          COMMAND ${CMAKE_COMMAND} ARGS -E copy \"$<TARGET_FILE:${perf-tool}>\"\n                  \"${LIBRARY_OUTPUT_PATH}/ZeroMQ.framework/Versions/${ZMQ_VERSION_STRING}/MacOS/${perf-tool}\"\n          VERBATIM\n          COMMENT \"Perf tools\")\n      else()\n        install(TARGETS ${perf-tool} RUNTIME DESTINATION bin COMPONENT PerfTools)\n      endif()\n      if(ZMQ_HAVE_WINDOWS_UWP)\n        set_target_properties(${perf-tool} PROPERTIES LINK_FLAGS_DEBUG \"/OPT:NOICF /OPT:NOREF\")\n      endif()\n    endforeach()\n\n    if(BUILD_STATIC)\n      add_executable(benchmark_radix_tree perf/benchmark_radix_tree.cpp)\n      target_link_libraries(benchmark_radix_tree libzmq-static)\n      target_include_directories(benchmark_radix_tree PUBLIC \"${CMAKE_CURRENT_LIST_DIR}/src\")\n      if(ZMQ_HAVE_WINDOWS_UWP)\n        set_target_properties(benchmark_radix_tree PROPERTIES LINK_FLAGS_DEBUG \"/OPT:NOICF /OPT:NOREF\")\n      endif()\n    endif()\n  elseif(WITH_PERF_TOOL)\n    message(FATAL_ERROR \"Shared library disabled - perf-tools unavailable.\")\n  endif()\nendif()\n\n# -----------------------------------------------------------------------------\n# tests\n\nif(${CMAKE_VERSION} VERSION_LESS 3.12.3)\n  option(BUILD_TESTS \"Whether or not to build the tests\" OFF)\nelse()\n  option(BUILD_TESTS \"Whether or not to build the tests\" ON)\nendif()\n\nset(ZMQ_BUILD_TESTS\n    ${BUILD_TESTS}\n    CACHE BOOL \"Build the tests for ZeroMQ\")\n\nif(ZMQ_BUILD_TESTS)\n  enable_testing() # Enable testing only works in root scope\n  add_subdirectory(tests)\n  if(BUILD_STATIC)\n    add_subdirectory(unittests)\n  else()\n    message(WARNING \"Not building unit tests, since BUILD_STATIC is not enabled\")\n  endif()\nendif()\n\n# -----------------------------------------------------------------------------\n# installer\n\nif(MSVC AND (BUILD_SHARED OR BUILD_STATIC))\n  install(\n    TARGETS ${target_outputs}\n    EXPORT ${PROJECT_NAME}-targets\n    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT SDK)\n  if(MSVC_IDE)\n    install(\n      FILES ${PDB_OUTPUT_DIRECTORY}/\\${CMAKE_INSTALL_CONFIG_NAME}/${PDB_NAME}.pdb\n      DESTINATION ${CMAKE_INSTALL_BINDIR}\n      COMPONENT SDK\n      OPTIONAL)\n  else()\n    install(\n      FILES ${PDB_OUTPUT_DIRECTORY}/${PDB_NAME}.pdb\n      DESTINATION ${CMAKE_INSTALL_BINDIR}\n      COMPONENT SDK\n      OPTIONAL)\n  endif()\n  if(BUILD_SHARED)\n    install(\n      TARGETS libzmq\n      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n      PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT Runtime)\n  endif()\nelseif(BUILD_SHARED OR BUILD_STATIC)\n  install(\n    TARGETS ${target_outputs}\n    EXPORT ${PROJECT_NAME}-targets\n    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    FRAMEWORK DESTINATION \"Library/Frameworks\"\n    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\nendif()\n\nforeach(readme ${readme-docs})\n  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${readme} ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt)\n\n  if(NOT ZMQ_BUILD_FRAMEWORK)\n    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt DESTINATION share/zmq)\n  endif()\nendforeach()\n\nif(WITH_DOC)\n  if(NOT ZMQ_BUILD_FRAMEWORK)\n    install(\n      FILES ${html-docs}\n      DESTINATION doc/zmq\n      COMPONENT RefGuide)\n  endif()\nendif()\n\nif(WIN32)\n  set(ZEROMQ_CMAKECONFIG_INSTALL_DIR\n      \"CMake\"\n      CACHE STRING \"install path for ZeroMQConfig.cmake\")\nelse()\n  # CMake search path wants either \"share\" (AKA GNUInstallDirs DATAROOTDIR) for arch-independent, or LIBDIR for arch-\n  # dependent, plus \"cmake\" as prefix\n  set(ZEROMQ_CMAKECONFIG_INSTALL_DIR\n      \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\"\n      CACHE STRING \"install path for ZeroMQConfig.cmake\")\nendif()\n\nif((NOT CMAKE_VERSION VERSION_LESS 3.0) AND (BUILD_SHARED OR BUILD_STATIC))\n  export(EXPORT ${PROJECT_NAME}-targets FILE \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake\")\nendif()\nconfigure_package_config_file(\n  builds/cmake/${PROJECT_NAME}Config.cmake.in \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake\"\n  INSTALL_DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})\nwrite_basic_package_version_file(\n  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\n  VERSION ${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH}\n  COMPATIBILITY AnyNewerVersion)\nif(BUILD_SHARED OR BUILD_STATIC)\n  install(\n    EXPORT ${PROJECT_NAME}-targets\n    FILE ${PROJECT_NAME}Targets.cmake\n    DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})\n  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake\n                ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\n          DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})\nendif()\n\noption(ENABLE_CPACK \"Enables cpack rules\" ON)\nif(MSVC AND ENABLE_CPACK)\n  if(${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n    set(CMAKE_INSTALL_DEBUG_LIBRARIES_ONLY TRUE)\n    set(CMAKE_INSTALL_DEBUG_LIBRARIES TRUE)\n    set(CMAKE_INSTALL_UCRT_LIBRARIES TRUE)\n  endif()\n  include(InstallRequiredSystemLibraries)\n\n  if(CMAKE_CL_64)\n    set(arch_name \"x64\")\n  else()\n    set(arch_name \"x86\")\n  endif()\n\n  set(CPACK_NSIS_DISPLAY_NAME \"ZeroMQ ${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH}(${arch_name})\")\n  set(CPACK_PACKAGE_FILE_NAME \"ZeroMQ-${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH}-${arch_name}\")\n\n  # TODO: I think this part was intended to be used when running cpack separately from cmake but I don't know how that\n  # works.\n  #\n  # macro(add_crt_version version) set(rel_dir\n  # \"${CMAKE_CURRENT_BINARY_DIR}/build/${arch_name}/${version};ZeroMQ;ALL;/\")\n  # set(debug_dir\n  # \"${CMAKE_CURRENT_BINARY_DIR}/debug/${arch_name}/${version};ZeroMQ;ALL;/\")\n  # if(EXISTS ${rel_dir}) list(APPEND CPACK_INSTALL_CMAKE_PROJECTS ${rel_dir}) endif()\n\n  # if(EXISTS ${debug_dir}) list(APPEND CPACK_INSTALL_CMAKE_PROJECTS ${rel_dir}) endmacro() endmacro()\n\n  # add_crt_version(v110) add_crt_version(v100) add_crt_version(v90)\n\n  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_BINARY_DIR})\n  set(CPACK_GENERATOR \"NSIS\")\n  set(CPACK_PACKAGE_NAME \"ZeroMQ\")\n  set(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"ZeroMQ lightweight messaging kernel\")\n  set(CPACK_PACKAGE_VENDOR \"Miru\")\n  set(CPACK_NSIS_CONTACT \"Steven McCoy <Steven.McCoy@miru.hk>\")\n  set(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_BINARY_DIR}\\\\\\\\LICENSE.txt\")\n  # set(CPACK_RESOURCE_FILE_README \"${CMAKE_CURRENT_BINARY_DIR}\\\\\\\\README.txt\") set(CPACK_RESOURCE_FILE_WELCOME\n  # \"${CMAKE_CURRENT_BINARY_DIR}\\\\\\\\WELCOME.txt\") There is a bug in NSI that does not handle full unix paths properly.\n  # Make sure there is at least one set of four(4) backslashes.\n  set(CPACK_NSIS_MUI_ICON \"${CMAKE_CURRENT_SOURCE_DIR}\\\\\\\\installer.ico\")\n  set(CPACK_NSIS_MUI_UNIICON \"${CMAKE_CURRENT_SOURCE_DIR}\\\\\\\\installer.ico\")\n\n  set(CPACK_PACKAGE_ICON \"${CMAKE_CURRENT_SOURCE_DIR}\\\\\\\\branding.bmp\")\n  set(CPACK_NSIS_COMPRESSOR \"/SOLID lzma\")\n  set(CPACK_PACKAGE_VERSION ${ZMQ_VERSION})\n  set(CPACK_PACKAGE_VERSION_MAJOR ${ZMQ_VERSION_MAJOR})\n  set(CPACK_PACKAGE_VERSION_MINOR ${ZMQ_VERSION_MINOR})\n  set(CPACK_PACKAGE_VERSION_PATCH ${ZMQ_VERSION_PATCH})\n  # set(CPACK_PACKAGE_INSTALL_DIRECTORY \"ZMQ Install Directory\") set(CPACK_TEMPORARY_DIRECTORY \"ZMQ Temporary CPack\n  # Directory\")\n\n  include(CPack)\n\n  cpack_add_component_group(Development DISPLAY_NAME \"ZeroMQ software development kit\" EXPANDED)\n  cpack_add_component(PerfTools DISPLAY_NAME \"ZeroMQ performance tools\" INSTALL_TYPES FullInstall DevInstall)\n  cpack_add_component(SourceCode DISPLAY_NAME \"ZeroMQ source code\" DISABLED INSTALL_TYPES FullInstall)\n  cpack_add_component(\n    SDK\n    DISPLAY_NAME\n    \"ZeroMQ headers and libraries\"\n    INSTALL_TYPES\n    FullInstall\n    DevInstall\n    GROUP\n    Development)\n  if(WITH_DOC)\n    cpack_add_component(\n      RefGuide\n      DISPLAY_NAME\n      \"ZeroMQ reference guide\"\n      INSTALL_TYPES\n      FullInstall\n      DevInstall\n      GROUP\n      Development)\n  endif()\n  cpack_add_component(\n    Runtime\n    DISPLAY_NAME\n    \"ZeroMQ runtime files\"\n    REQUIRED\n    INSTALL_TYPES\n    FullInstall\n    DevInstall\n    MinInstall)\n  cpack_add_install_type(FullInstall DISPLAY_NAME \"Full install, including source code\")\n  cpack_add_install_type(DevInstall DISPLAY_NAME \"Developer install, headers and libraries\")\n  cpack_add_install_type(MinInstall DISPLAY_NAME \"Minimal install, runtime only\")\nendif()\n\n# Export this for library to help build this as a sub-project\nset(ZEROMQ_LIBRARY\n    libzmq\n    CACHE STRING \"ZeroMQ library\")\n\n# Workaround for MSVS10 to avoid the Dialog Hell FIXME: This could be removed with future version of CMake.\nif(MSVC_VERSION EQUAL 1600)\n  set(ZMQ_SLN_FILENAME \"${CMAKE_CURRENT_BINARY_DIR}/ZeroMQ.sln\")\n  if(EXISTS \"${ZMQ_SLN_FILENAME}\")\n    file(APPEND \"${ZMQ_SLN_FILENAME}\" \"\\n# This should be regenerated!\\n\")\n  endif()\nendif()\n\n# this cannot be moved, as it does not only contain function/macro definitions\noption(ENABLE_CLANG \"Include Clang\" ON)\nif (ENABLE_CLANG)\n  include(ClangFormat)\nendif()\n\n# fixes https://github.com/zeromq/libzmq/issues/3776 The problem is, both libzmq-static libzmq try to use/generate\n# precompiled.pch at the same time Add a dependency, so they run in order and so they dont get in each others way TODO\n# still generates warning \"build\\x64-Debug\\ninja : warning : multiple rules generate precompiled.hpp. builds involving\n# this target will not be correct; continuing anyway [-w dupbuild=warn]\"\nif(MSVC\n   AND ENABLE_PRECOMPILED\n   AND BUILD_SHARED\n   AND BUILD_STATIC)\n  add_dependencies(libzmq-static libzmq)\nendif()\n\noption(ENABLE_NO_EXPORT \"Build with empty ZMQ_EXPORT macro, bypassing platform-based automated detection\" OFF)\nif(ENABLE_NO_EXPORT)\n  message(STATUS \"Building with empty ZMQ_EXPORT macro\")\n  add_definitions(-DZMQ_NO_EXPORT)\nendif()\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.9267578125,
          "content": "FROM debian:buster-slim AS builder\nLABEL maintainer=\"ZeroMQ Project <zeromq@imatix.com>\"\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq \\\n    && apt-get install -qq --yes --no-install-recommends \\\n        autoconf \\\n        automake \\\n        build-essential \\\n        git \\\n        libkrb5-dev \\\n        libsodium-dev \\\n        libtool \\\n        pkg-config \\\n    && rm -rf /var/lib/apt/lists/*\nWORKDIR /opt/libzmq\nCOPY . .\nRUN ./autogen.sh \\\n    && ./configure --prefix=/usr/local --with-libsodium --with-libgssapi_krb5 \\\n    && make \\\n    && make check \\\n    && make install\n\nFROM debian:buster-slim\nLABEL maintainer=\"ZeroMQ Project <zeromq@imatix.com>\"\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq \\\n    && apt-get install -qq --yes --no-install-recommends \\\n        libkrb5-dev \\\n        libsodium23 \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /usr/local /usr/local\nRUN ldconfig && ldconfig -p | grep libzmq\n"
        },
        {
          "name": "Doxygen.cfg",
          "type": "blob",
          "size": 98.869140625,
          "content": "# Doxyfile 1.8.11\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See http://www.gnu.org/software/libiconv\n# for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = libzmq\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = master\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ZeroMQ C++ Core Engine (LIBZMQ)\"\n\nPROJECT_LOGO           = branding.bmp\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doxygen\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = YES\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = NO\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        = ../..\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\nJAVADOC_AUTOBRIEF      = NO\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 4\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = YES\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO, these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES, upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = YES\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = YES\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = NO\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = NO\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = NO\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered.\n# The default value is: NO.\n\nWARN_AS_ERROR          = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            =\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = include \\\n                         src \\\n                         tests \\\n                         perf \\\n                         README.doxygen.md\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: http://www.gnu.org/software/libiconv) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox, *.py, *.pyw, *.f90, *.f, *.for, *.tcl,\n# *.vhd, *.vhdl, *.ucf, *.qsf, *.as and *.js.\n\nFILE_PATTERNS          = *.c \\\n                         *.cpp \\\n                         *.h \\\n                         *.hpp\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           = tests perf\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = YES\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = README.doxygen.md\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = NO\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see http://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 4\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n# HTML_HEADER            = doxygen.header\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n# HTML_FOOTER            = doxygen.footer\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n# HTML_STYLESHEET        = doxygen.css\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  =\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n# HTML_COLORSTYLE_HUE    = 240\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n#HTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n#HTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: http://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the master .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#virtual-\n# folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# http://qt-project.org/doc/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = YES\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 200\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# http://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from http://www.mathjax.org before deployment.\n# The default value is: http://cdn.mathjax.org/mathjax/latest.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = NO\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\n#SEARCHENGINE_URL       = @searchengine_url@\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\n#SEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\n#EXTERNAL_SEARCH_ID     = libzmq\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\n#EXTRA_SEARCH_MAPPINGS  = @extra_search_mappings@\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           =\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = NO\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES, to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = NO\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# http://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_TIMESTAMP        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             =\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             =\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          =\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sf.net) file that captures the\n# structure of the code including all documentation. Note that this feature is\n# still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           = include\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             =\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = YES\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = NO\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = YES\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = YES\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = NO\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = YES\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      =\n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 100\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 5\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 12.052734375,
          "content": "Installation Instructions\n*************************\n\nCopyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,\n2006, 2007 Free Software Foundation, Inc.\n\nThis file is free documentation; the Free Software Foundation gives\nunlimited permission to copy, distribute and modify it.\n\nFrom GitHub\n===========\n\nIf you clone the Git repository then you should start by running the\ncommand `./autogen.sh`. This is not necessary if you get the source\npackages.\n\nCMake installation\n==================\n\nThe following options are available for cmake invocation:\n\n- `WITH_PERF_TOOL'\n    Enables the build of performance tools. Default value is ON.\n- `ZMQ_BUILD_TESTS'\n    Builds ZeroMQ tests. Default value is ON.\n- `ENABLE_CPACK'\n    Enables CPack build rules. This option has effect on Windows\n    platform only. Default value is ON. Turn it to OFF if you\n    don't want the runtime libraries to be installed (typically\n    if your installation destination already contains them).\n    \n\nExample: installing ZeroMQ on Windows with no tests, no performance\ntools, and no runtime library copy:\n\ncmake -G \"NMake Makefiles\" -D WITH_PERF_TOOL=OFF -D ZMQ_BUILD_TESTS=OFF\n-D ENABLE_CPACK=OFF -D CMAKE_BUILD_TYPE=Release\n\nWindows Builds\n==============\n\nOn Windows, use CMake for building, or for generating a Visual Studio solution file.\n\nThe library can also be built for the Windows 10 UWP platform through CMake :\ncmake -H. -B<build dir> -G\"Visual Studio 14 2015 Win64\" \\\n   -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION=10.0 \\\n   -DENABLE_CURVE=OFF -DZMQ_BUILD_TESTS=OFF\n\nIn VS 2012 it is mandatory to increase the default stack size of 1 MB to\nat least 2 MB due to implementation of std::map intermittently requiring\nsubstantial amount of stack and causing stack overflow. \n\nWindows Builds - Static\n=======================\n\nWhen linking statically with libzmq your CFLAGS and/or CPPFLAGS need to include\n`-DZMQ_STATIC` otherwise `__dclspec(dllimport)` will be set for all functions\nand the build will fail.\n\nThis is a workaround for issue:\nhttps://github.com/zeromq/libzmq/issues/2788\n\nWindows Builds - Wine\n=====================\n\nTo use Windows binaries on *nix via Wine, it is necessary to ensure that the\nkernel TCP buffers are large enough. On some systems, like OS X, they are too\nsmall by default.\nThey need to be set to at least one MB as a workaround for issue:\nhttps://github.com/zeromq/libzmq/issues/1608\n\nsudo sysctl -w net.inet.tcp.sendspace=1300000\n\nBasic Installation\n==================\n\nBriefly, the shell commands `./configure; make; make install' should\nconfigure, build, and install this package.  The following\nmore-detailed instructions are generic; see the `README' file for\ninstructions specific to this package.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile `config.log' containing compiler output (useful mainly for\ndebugging `configure').\n\n   It can also use an optional file (typically called `config.cache'\nand enabled with `--cache-file=config.cache' or simply `-C') that saves\nthe results of its tests to speed up reconfiguring.  Caching is\ndisabled by default to prevent problems with accidental use of stale\ncache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file `configure.ac' (or `configure.in') is used to create\n`configure' by a program called `autoconf'.  You need `configure.ac' if\nyou want to change it or regenerate `configure' using a newer version\nof `autoconf'.  If you are building a development version from the\nGithub source, for example, use `./autogen.sh' to generate `configure'\nand other necessary installation scripts.\n\nThe simplest way to compile this package is:\n\n  1. `cd' to the directory containing the package's source code and type\n     `./configure' to configure the package for your system.\n\n     Running `configure' might take a while.  While running, it prints\n     some messages telling which features it is checking for.\n\n  2. Type `make' to compile the package.\n\n  3. Optionally, type `make check' to run any self-tests that come with\n     the package. Note that `make -j check' is not supported as some\n     tests share infrastructure and cannot be run in parallel.\n\n  4. Type `make install' to install the programs and any data files and\n     documentation.\n\n  5. You can remove the program binaries and object files from the\n     source code directory by typing `make clean'.  To also remove the\n     files that `configure' created (so you can compile the package for\n     a different kind of computer), type `make distclean'.  There is\n     also a `make maintainer-clean' target, but that is intended mainly\n     for the package's developers.  If you use it, you may have to get\n     all sorts of other programs in order to regenerate files that came\n     with the distribution.\n\n  6. Often, you can also type `make uninstall' to remove the installed\n     files again.\n\nOS X Builds - Documentation\n===========================\n\nBasic installation on OS X may fail in `Making all in doc' step. This\nerror can be resolved by adding environment variable for shell.\n\nexport XML_CATALOG_FILES=/usr/local/etc/xml/catalog \n\nWrite command above in shell for instant resolve, or append command into\nshell profile file and reload for permanent resolve.\n\nCompilers and Options\n=====================\n\nSome systems require unusual options for compilation or linking that the\n`configure' script does not know about.  Run `./configure --help' for\ndetails on some of the pertinent environment variables.\n\n   You can give `configure' initial values for configuration parameters\nby setting variables in the command line or in the environment.  Here\nis an example:\n\n     ./configure CC=c99 CFLAGS=-g LIBS=-lposix\n\n   *Note Defining Variables::, for more details.\n\nCompiling For Multiple Architectures\n====================================\n\nYou can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\nthe `configure' script.  `configure' automatically checks for the\nsource code in the directory that `configure' is in and in `..'.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\nInstallation Names\n==================\n\nBy default, `make install' installs the package's commands under\n`/usr/local/bin', include files under `/usr/local/include', etc.  You\ncan specify an installation prefix other than `/usr/local' by giving\n`configure' the option `--prefix=PREFIX'.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\npass the option `--exec-prefix=PREFIX' to `configure', the package uses\nPREFIX as the prefix for installing programs and libraries.\nDocumentation and other data files still use the regular prefix.\n\n   In addition, if you use an unusual directory layout you can give\noptions like `--bindir=DIR' to specify different values for particular\nkinds of files.  Run `configure --help' for a list of the directories\nyou can set and what kinds of files go in them.\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving `configure' the\noption `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.\n\nOptional Features\n=================\n\nSome packages pay attention to `--enable-FEATURE' options to\n`configure', where FEATURE indicates an optional part of the package.\nThey may also pay attention to `--with-PACKAGE' options, where PACKAGE\nis something like `gnu-as' or `x' (for the X Window System).  The\n`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\nSpecifying the System Type\n==========================\n\nThere may be some features `configure' cannot figure out automatically,\nbut needs to determine by the type of machine the package will run on.\nUsually, assuming the package is built to be run on the _same_\narchitectures, `configure' can figure that out, but if it prints a\nmessage saying it cannot guess the machine type, give it the\n`--build=TYPE' option.  TYPE can either be a short name for the system\ntype, such as `sun4', or a canonical name which has the form:\n\n     CPU-COMPANY-SYSTEM\n\nwhere SYSTEM can have one of these forms:\n\n     OS KERNEL-OS\n\n   See the file `config.sub' for the possible values of each field.  If\n`config.sub' isn't included in this package, then this package doesn't\nneed to know the machine type.\n\n   If you are _building_ compiler tools for cross-compiling, you should\nuse the option `--target=TYPE' to select the type of system they will\nproduce code for.\n\n   If you want to _use_ a cross compiler, that generates code for a\nplatform different from the build platform, you should specify the\n\"host\" platform (i.e., that on which the generated programs will\neventually be run) with `--host=TYPE'.\n\nSharing Defaults\n================\n\nIf you want to set default values for `configure' scripts to share, you\ncan create a site shell script called `config.site' that gives default\nvalues for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n`CONFIG_SITE' environment variable to the location of the site script.\nA warning: not all `configure' scripts look for a site script.\n\nDefining Variables\n==================\n\nVariables not defined in a site shell script can be set in the\nenvironment passed to `configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\nthem in the `configure' command line, using `VAR=value'.  For example:\n\n     ./configure CC=/usr/local2/bin/gcc\n\ncauses the specified `gcc' to be used as the C compiler (unless it is\noverridden in the site shell script).\n\nUnfortunately, this technique does not work for `CONFIG_SHELL' due to\nan Autoconf bug.  Until the bug is fixed you can use this workaround:\n\n     CONFIG_SHELL=/bin/bash /bin/bash ./configure CONFIG_SHELL=/bin/bash\n\n`configure' Invocation\n======================\n\n`configure' recognizes the following options to control how it operates.\n\n`--help'\n`-h'\n     Print a summary of the options to `configure', and exit.\n\n`--version'\n`-V'\n     Print the version of Autoconf used to generate the `configure'\n     script, and exit.\n\n`--cache-file=FILE'\n     Enable the cache: use and save the results of the tests in FILE,\n     traditionally `config.cache'.  FILE defaults to `/dev/null' to\n     disable caching.\n\n`--config-cache'\n`-C'\n     Alias for `--cache-file=config.cache'.\n\n`--quiet'\n`--silent'\n`-q'\n     Do not print messages saying which checks are being made.  To\n     suppress all normal output, redirect it to `/dev/null' (any error\n     messages will still be shown).\n\n`--srcdir=DIR'\n     Look for the package's source code in directory DIR.  Usually\n     `configure' can determine that directory automatically.\n\n`configure' also accepts some other, not widely useful, options.  Run\n`configure --help' for more details.\n\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 30.5634765625,
          "content": "pipeline {\n    agent { label \"linux || macosx || bsd || solaris || posix || windows\" }\n    parameters {\n        // Use DEFAULT_DEPLOY_BRANCH_PATTERN and DEFAULT_DEPLOY_JOB_NAME if\n        // defined in this jenkins setup -- in Jenkins Management Web-GUI\n        // see Configure System / Global properties / Environment variables\n        // Default (if unset) is empty => no deployment attempt after good test\n        // See zproject Jenkinsfile-deploy.example for an example deploy job.\n        // TODO: Try to marry MultiBranchPipeline support with pre-set defaults\n        // directly in MultiBranchPipeline plugin, or mechanism like Credentials,\n        // or a config file uploaded to master for all jobs or this job, see\n        // https://jenkins.io/doc/pipeline/examples/#configfile-provider-plugin\n        string (\n            defaultValue: '${DEFAULT_DEPLOY_BRANCH_PATTERN}',\n            description: 'Regular expression of branch names for which a deploy action would be attempted after a successful build and test; leave empty to not deploy. Reasonable value is ^(master|release/.*|feature/*)$',\n            name : 'DEPLOY_BRANCH_PATTERN')\n        string (\n            defaultValue: '${DEFAULT_DEPLOY_JOB_NAME}',\n            description: 'Name of your job that handles deployments and should accept arguments: DEPLOY_GIT_URL DEPLOY_GIT_BRANCH DEPLOY_GIT_COMMIT -- and it is up to that job what to do with this knowledge (e.g. git archive + push to packaging); leave empty to not deploy',\n            name : 'DEPLOY_JOB_NAME')\n        booleanParam (\n            defaultValue: true,\n            description: 'If the deployment is done, should THIS job wait for it to complete and include its success or failure as the build result (true), or should it schedule the job and exit quickly to free up the executor (false)',\n            name: 'DEPLOY_REPORT_RESULT')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt stable build without DRAFT API in this run?',\n            name: 'DO_BUILD_WITHOUT_DRAFT_API')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt build with DRAFT API in this run?',\n            name: 'DO_BUILD_WITH_DRAFT_API')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt a build with docs in this run? (Note: corresponding tools are required in the build environment)',\n            name: 'DO_BUILD_DOCS')\n        booleanParam (\n            defaultValue: false,\n            description: 'Publish as an archive a \"dist\" tarball from a build with docs in this run? (Note: corresponding tools are required in the build environment; enabling this enforces DO_BUILD_DOCS too)',\n            name: 'DO_DIST_DOCS')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt \"make check\" in this run?',\n            name: 'DO_TEST_CHECK')\n        booleanParam (\n            defaultValue: false,\n            description: 'Attempt \"make memcheck\" in this run?',\n            name: 'DO_TEST_MEMCHECK')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt \"make distcheck\" in this run?',\n            name: 'DO_TEST_DISTCHECK')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt a \"make install\" check in this run?',\n            name: 'DO_TEST_INSTALL')\n        string (\n            defaultValue: \"`pwd`/tmp/_inst\",\n            description: 'If attempting a \"make install\" check in this run, what DESTDIR to specify? (absolute path, defaults to \"BUILD_DIR/tmp/_inst\")',\n            name: 'USE_TEST_INSTALL_DESTDIR')\n        booleanParam (\n            defaultValue: true,\n            description: 'Attempt \"cppcheck\" analysis before this run? (Note: corresponding tools are required in the build environment)',\n            name: 'DO_CPPCHECK')\n        booleanParam (\n            defaultValue: true,\n            description: 'Require that there are no files not discovered changed/untracked via .gitignore after builds and tests?',\n            name: 'REQUIRE_GOOD_GITIGNORE')\n        string (\n            defaultValue: \"30\",\n            description: 'When running tests, use this timeout (in minutes; be sure to leave enough for double-job of a distcheck too)',\n            name: 'USE_TEST_TIMEOUT')\n        booleanParam (\n            defaultValue: true,\n            description: 'When using temporary subdirs in build/test workspaces, wipe them after successful builds?',\n            name: 'DO_CLEANUP_AFTER_BUILD')\n    }\n    triggers {\n        pollSCM 'H/2 * * * *'\n    }\n// Note: your Jenkins setup may benefit from similar setup on side of agents:\n//        PATH=\"/usr/lib64/ccache:/usr/lib/ccache:/usr/bin:/bin:${PATH}\"\n    stages {\n        stage ('prepare') {\n                    steps {\n                        dir(\"tmp\") {\n                            sh 'if [ -s Makefile ]; then make -k distclean || true ; fi'\n                            sh 'chmod -R u+w .'\n                            deleteDir()\n                        }\n                        sh './autogen.sh'\n                        stash (name: 'prepped', includes: '**/*', excludes: '**/cppcheck.xml')\n                    }\n        }\n        stage ('compile') {\n            parallel {\n                stage ('build with DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITH_DRAFT_API ) } }\n                    steps {\n                      dir(\"tmp/build-withDRAFT\") {\n                        deleteDir()\n                        unstash 'prepped'\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; ./configure --enable-drafts=yes --with-docs=no'\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; make -k -j4 || make'\n                        sh 'echo \"Are GitIgnores good after make with drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        stash (name: 'built-draft', includes: '**/*', excludes: '**/cppcheck.xml')\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('build without DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITHOUT_DRAFT_API ) } }\n                    steps {\n                      dir(\"tmp/build-withoutDRAFT\") {\n                        deleteDir()\n                        unstash 'prepped'\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; ./configure --enable-drafts=no --with-docs=no'\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; make -k -j4 || make'\n                        sh 'echo \"Are GitIgnores good after make without drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        stash (name: 'built-nondraft', includes: '**/*', excludes: '**/cppcheck.xml')\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('build with DOCS') {\n                    when { expression { return ( params.DO_BUILD_DOCS || params.DO_DIST_DOCS ) } }\n                    steps {\n                      dir(\"tmp/build-DOCS\") {\n                        deleteDir()\n                        unstash 'prepped'\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; ./configure --enable-drafts=yes --with-docs=yes'\n                        script {\n                            if ( params.DO_DIST_DOCS ) {\n                                sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; make dist-gzip || exit ; DISTFILE=\"`ls -1tc *.tar.gz | head -1`\" && [ -n \"$DISTFILE\" ] && [ -s \"$DISTFILE\" ] || exit ; mv -f \"$DISTFILE\" __dist.tar.gz'\n                                archiveArtifacts artifacts: '__dist.tar.gz'\n                                sh \"rm -f __dist.tar.gz\"\n                            }\n                        }\n                        sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; make -k -j4 || make'\n                        sh 'echo \"Are GitIgnores good after make with docs? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        stash (name: 'built-docs', includes: '**/*', excludes: '**/cppcheck.xml')\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n            }\n        }\n        stage ('check') {\n            parallel {\n                stage ('cppcheck') {\n                    when { expression { return ( params.DO_CPPCHECK ) } }\n                    steps {\n                        dir(\"tmp/test-cppcheck\") {\n                            deleteDir()\n                            unstash 'prepped'\n                            sh 'cppcheck --std=c++11 --enable=all --inconclusive --xml --xml-version=2 . 2>cppcheck.xml'\n                            archiveArtifacts artifacts: '**/cppcheck.xml'\n                            sh 'rm -f cppcheck.xml'\n                            script {\n                                if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                    deleteDir()\n                                }\n                            }\n                        }\n                    }\n                }\n                stage ('check with DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITH_DRAFT_API && params.DO_TEST_CHECK ) } }\n                    steps {\n                      dir(\"tmp/test-check-withDRAFT\") {\n                        deleteDir()\n                        unstash 'built-draft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" check'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make check with drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('check without DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITHOUT_DRAFT_API && params.DO_TEST_CHECK ) } }\n                    steps {\n                      dir(\"tmp/test-check-withoutDRAFT\") {\n                        deleteDir()\n                        unstash 'built-nondraft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" check'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make check without drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('memcheck with DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITH_DRAFT_API && params.DO_TEST_MEMCHECK ) } }\n                    steps {\n                      dir(\"tmp/test-memcheck-withDRAFT\") {\n                        deleteDir()\n                        unstash 'built-draft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" memcheck && exit 0 ; echo \"Re-running failed ($?) memcheck with greater verbosity\" >&2 ; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" VERBOSE=1 memcheck-verbose'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make memcheck with drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('memcheck without DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITHOUT_DRAFT_API && params.DO_TEST_MEMCHECK ) } }\n                    steps {\n                      dir(\"tmp/test-memcheck-withoutDRAFT\") {\n                        deleteDir()\n                        unstash 'built-nondraft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" memcheck && exit 0 ; echo \"Re-running failed ($?) memcheck with greater verbosity\" >&2 ; make LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" VERBOSE=1 memcheck-verbose'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make memcheck without drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('distcheck with DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITH_DRAFT_API && params.DO_TEST_DISTCHECK ) } }\n                    steps {\n                      dir(\"tmp/test-distcheck-withDRAFT\") {\n                        deleteDir()\n                        unstash 'built-draft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; DISTCHECK_CONFIGURE_FLAGS=\"--enable-drafts=yes --with-docs=no\" ; export DISTCHECK_CONFIGURE_FLAGS; make DISTCHECK_CONFIGURE_FLAGS=\"$DISTCHECK_CONFIGURE_FLAGS\" LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" distcheck'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make distcheck with drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('distcheck without DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITHOUT_DRAFT_API && params.DO_TEST_DISTCHECK ) } }\n                    steps {\n                      dir(\"tmp/test-distcheck-withoutDRAFT\") {\n                        deleteDir()\n                        unstash 'built-nondraft'\n                        script {\n                         def RETRY_NUMBER = 0\n                         retry(3) {\n                          RETRY_NUMBER++\n                          timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                           try {\n                            sh 'CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH; DISTCHECK_CONFIGURE_FLAGS=\"--enable-drafts=no --with-docs=no\" ; export DISTCHECK_CONFIGURE_FLAGS; make DISTCHECK_CONFIGURE_FLAGS=\"$DISTCHECK_CONFIGURE_FLAGS\" LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" distcheck'\n                           }\n                           catch (Exception e) {\n                            currentBuild.result = 'UNSTABLE' // Jenkins should not let the verdict \"improve\"\n                            sh \"\"\"D=\"`pwd`\"; B=\"`basename \"\\$D\"`\" ; [ \"${RETRY_NUMBER}\" -gt 0 ] && T=\"_try-${RETRY_NUMBER}\" || T=\"\" ; tar czf \"test-suite_${BUILD_TAG}_\\${B}\\${T}.tar.gz\" `find . -name '*.trs'` `find . -name '*.log'`\"\"\"\n                            archiveArtifacts artifacts: \"**/test-suite*.tar.gz\", allowEmpty: true\n                            throw e\n                           }\n                          }\n                         }\n                        }\n                        sh 'echo \"Are GitIgnores good after make distcheck without drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('install with DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITH_DRAFT_API && params.DO_TEST_INSTALL ) } }\n                    steps {\n                      dir(\"tmp/test-install-withDRAFT\") {\n                        deleteDir()\n                        unstash 'built-draft'\n                        retry(3) {\n                        timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                            sh \"\"\"CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:\\${LD_LIBRARY_PATH}\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"\\${LD_LIBRARY_PATH}\" DESTDIR=\"${params.USE_TEST_INSTALL_DESTDIR}/withDRAFT\" install\"\"\"\n                        }\n                        }\n                        sh \"\"\"cd \"${params.USE_TEST_INSTALL_DESTDIR}/withDRAFT\" && find . -ls\"\"\"\n                        sh 'echo \"Are GitIgnores good after make install with drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('install without DRAFT') {\n                    when { expression { return ( params.DO_BUILD_WITHOUT_DRAFT_API && params.DO_TEST_INSTALL ) } }\n                    steps {\n                      dir(\"tmp/test-install-withoutDRAFT\") {\n                        deleteDir()\n                        unstash 'built-nondraft'\n                        retry(3) {\n                        timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                            sh \"\"\"CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:\\${LD_LIBRARY_PATH}\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"\\${LD_LIBRARY_PATH}\" DESTDIR=\"${params.USE_TEST_INSTALL_DESTDIR}/withoutDRAFT\" install\"\"\"\n                        }\n                        }\n                        sh \"\"\"cd \"${params.USE_TEST_INSTALL_DESTDIR}/withoutDRAFT\" && find . -ls\"\"\"\n                        sh 'echo \"Are GitIgnores good after make install without drafts? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n                stage ('install with DOCS') {\n                    when { expression { return ( params.DO_BUILD_DOCS && params.DO_TEST_INSTALL ) } }\n                    steps {\n                      dir(\"tmp/test-install-withDOCS\") {\n                        deleteDir()\n                        unstash 'built-docs'\n                        retry(3) {\n                        timeout (time: \"${params.USE_TEST_TIMEOUT}\".toInteger(), unit: 'MINUTES') {\n                            sh \"\"\"CCACHE_BASEDIR=\"`pwd`\" ; export CCACHE_BASEDIR; LD_LIBRARY_PATH=\"`pwd`/src/.libs:\\${LD_LIBRARY_PATH}\"; export LD_LIBRARY_PATH; make LD_LIBRARY_PATH=\"\\${LD_LIBRARY_PATH}\" DESTDIR=\"${params.USE_TEST_INSTALL_DESTDIR}/withDOCS\" install\"\"\"\n                        }\n                        }\n                        sh \"\"\"cd \"${params.USE_TEST_INSTALL_DESTDIR}/withDOCS\" && find . -ls\"\"\"\n                        sh 'echo \"Are GitIgnores good after make install with Docs? (should have no output below)\"; git status -s || if [ \"${params.REQUIRE_GOOD_GITIGNORE}\" = false ]; then echo \"WARNING GitIgnore tests found newly changed or untracked files\" >&2 ; exit 0 ; else echo \"FAILED GitIgnore tests\" >&2 ; exit 1; fi'\n                        script {\n                            if ( params.DO_CLEANUP_AFTER_BUILD ) {\n                                deleteDir()\n                            }\n                        }\n                      }\n                    }\n                }\n            }\n        }\n        stage ('deploy if appropriate') {\n            steps {\n                script {\n                    def myDEPLOY_JOB_NAME = sh(returnStdout: true, script: \"\"\"echo \"${params[\"DEPLOY_JOB_NAME\"]}\" \"\"\").trim();\n                    def myDEPLOY_BRANCH_PATTERN = sh(returnStdout: true, script: \"\"\"echo \"${params[\"DEPLOY_BRANCH_PATTERN\"]}\" \"\"\").trim();\n                    def myDEPLOY_REPORT_RESULT = sh(returnStdout: true, script: \"\"\"echo \"${params[\"DEPLOY_REPORT_RESULT\"]}\" \"\"\").trim().toBoolean();\n                    echo \"Original: DEPLOY_JOB_NAME : ${params[\"DEPLOY_JOB_NAME\"]} DEPLOY_BRANCH_PATTERN : ${params[\"DEPLOY_BRANCH_PATTERN\"]} DEPLOY_REPORT_RESULT : ${params[\"DEPLOY_REPORT_RESULT\"]}\"\n                    echo \"Used:     myDEPLOY_JOB_NAME:${myDEPLOY_JOB_NAME} myDEPLOY_BRANCH_PATTERN:${myDEPLOY_BRANCH_PATTERN} myDEPLOY_REPORT_RESULT:${myDEPLOY_REPORT_RESULT}\"\n                    if ( (myDEPLOY_JOB_NAME != \"\") && (myDEPLOY_BRANCH_PATTERN != \"\") ) {\n                        if ( env.BRANCH_NAME =~ myDEPLOY_BRANCH_PATTERN ) {\n                            def GIT_URL = sh(returnStdout: true, script: \"\"\"git remote -v | grep -E '^origin' | awk '{print \\$2}' | head -1\"\"\").trim()\n                            def GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --verify HEAD').trim()\n                            def DIST_ARCHIVE = \"\"\n                            if ( params.DO_DIST_DOCS ) { DIST_ARCHIVE = env.BUILD_URL + \"artifact/__dist.tar.gz\" }\n                            build job: \"${myDEPLOY_JOB_NAME}\", parameters: [\n                                string(name: 'DEPLOY_GIT_URL', value: \"${GIT_URL}\"),\n                                string(name: 'DEPLOY_GIT_BRANCH', value: env.BRANCH_NAME),\n                                string(name: 'DEPLOY_GIT_COMMIT', value: \"${GIT_COMMIT}\"),\n                                string(name: 'DEPLOY_DIST_ARCHIVE', value: \"${DIST_ARCHIVE}\")\n                                ], quietPeriod: 0, wait: myDEPLOY_REPORT_RESULT, propagate: myDEPLOY_REPORT_RESULT\n                        } else {\n                            echo \"Not deploying because branch '${env.BRANCH_NAME}' did not match filter '${myDEPLOY_BRANCH_PATTERN}'\"\n                        }\n                    } else {\n                        echo \"Not deploying because deploy-job parameters are not set\"\n                    }\n                }\n            }\n        }\n    }\n    post {\n        success {\n            script {\n                if (currentBuild.getPreviousBuild()?.result != 'SUCCESS') {\n                    // Uncomment desired notification\n\n                    //slackSend (color: \"#008800\", message: \"Build ${env.JOB_NAME} is back to normal.\")\n                    //emailext (to: \"qa@example.com\", subject: \"Build ${env.JOB_NAME} is back to normal.\", body: \"Build ${env.JOB_NAME} is back to normal.\")\n                }\n            }\n        }\n        failure {\n            // Uncomment desired notification\n            // Section must not be empty, you can delete the sleep once you set notification\n            sleep 1\n            //slackSend (color: \"#AA0000\", message: \"Build ${env.BUILD_NUMBER} of ${env.JOB_NAME} ${currentBuild.result} (<${env.BUILD_URL}|Open>)\")\n            //emailext (to: \"qa@example.com\", subject: \"Build ${env.JOB_NAME} failed!\", body: \"Build ${env.BUILD_NUMBER} of ${env.JOB_NAME} ${currentBuild.result}\\nSee ${env.BUILD_URL}\")\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 50.626953125,
          "content": "ACLOCAL_AMFLAGS = -I config\n\nSUBDIRS = doc\n\nDIST_SUBDIRS = doc builds builds/deprecated-msvc\n\npkgconfig_DATA = src/libzmq.pc\n\nAM_CPPFLAGS = \\\n\t-I$(top_builddir)/include \\\n\t-I$(top_srcdir)/include\n\n#\n# libraries/binaries\n#\nlib_LTLIBRARIES = src/libzmq.la\n\ninclude_HEADERS = \\\n\tinclude/zmq.h \\\n\tinclude/zmq_utils.h\n\nsrc_libzmq_la_SOURCES = \\\n\tsrc/address.cpp \\\n\tsrc/address.hpp \\\n\tsrc/array.hpp \\\n\tsrc/atomic_counter.hpp \\\n\tsrc/atomic_ptr.hpp \\\n\tsrc/blob.hpp \\\n\tsrc/channel.cpp \\\n\tsrc/channel.hpp \\\n\tsrc/client.cpp \\\n\tsrc/client.hpp \\\n\tsrc/clock.cpp \\\n\tsrc/clock.hpp \\\n\tsrc/command.hpp \\\n\tsrc/compat.hpp \\\n\tsrc/condition_variable.hpp \\\n\tsrc/config.hpp \\\n\tsrc/ctx.cpp \\\n\tsrc/ctx.hpp \\\n\tsrc/curve_client.cpp \\\n\tsrc/curve_client.hpp \\\n\tsrc/curve_client_tools.hpp \\\n\tsrc/curve_mechanism_base.cpp \\\n\tsrc/curve_mechanism_base.hpp \\\n\tsrc/curve_server.cpp \\\n\tsrc/curve_server.hpp \\\n\tsrc/dbuffer.hpp \\\n\tsrc/dealer.cpp \\\n\tsrc/dealer.hpp \\\n\tsrc/decoder.hpp \\\n\tsrc/devpoll.cpp \\\n\tsrc/devpoll.hpp \\\n\tsrc/dgram.cpp \\\n\tsrc/dgram.hpp \\\n\tsrc/dish.cpp \\\n\tsrc/dish.hpp \\\n\tsrc/dist.cpp \\\n\tsrc/dist.hpp \\\n\tsrc/encoder.hpp \\\n\tsrc/endpoint.hpp \\\n\tsrc/endpoint.cpp \\\n\tsrc/epoll.cpp \\\n\tsrc/epoll.hpp \\\n\tsrc/err.cpp \\\n\tsrc/err.hpp \\\n\tsrc/fd.hpp \\\n\tsrc/fq.cpp \\\n\tsrc/fq.hpp \\\n\tsrc/gather.cpp \\\n\tsrc/gather.hpp \\\n\tsrc/generic_mtrie.hpp \\\n\tsrc/generic_mtrie_impl.hpp \\\n\tsrc/gssapi_mechanism_base.cpp \\\n\tsrc/gssapi_mechanism_base.hpp \\\n\tsrc/gssapi_client.cpp \\\n\tsrc/gssapi_client.hpp \\\n\tsrc/gssapi_server.cpp \\\n\tsrc/gssapi_server.hpp \\\n\tsrc/i_encoder.hpp \\\n\tsrc/i_engine.hpp \\\n\tsrc/i_decoder.hpp \\\n\tsrc/i_mailbox.hpp \\\n\tsrc/i_poll_events.hpp \\\n\tsrc/io_object.cpp \\\n\tsrc/io_object.hpp \\\n\tsrc/io_thread.cpp \\\n\tsrc/io_thread.hpp \\\n\tsrc/ip.cpp \\\n\tsrc/ip.hpp \\\n\tsrc/ip_resolver.cpp \\\n\tsrc/ip_resolver.hpp \\\n\tsrc/ipc_address.cpp \\\n\tsrc/ipc_address.hpp \\\n\tsrc/ipc_connecter.cpp \\\n\tsrc/ipc_connecter.hpp \\\n\tsrc/ipc_listener.cpp \\\n\tsrc/ipc_listener.hpp \\\n\tsrc/kqueue.cpp \\\n\tsrc/kqueue.hpp \\\n\tsrc/lb.cpp \\\n\tsrc/lb.hpp \\\n\tsrc/likely.hpp \\\n\tsrc/macros.hpp \\\n\tsrc/mailbox.cpp \\\n\tsrc/mailbox.hpp \\\n\tsrc/mailbox_safe.cpp \\\n\tsrc/mailbox_safe.hpp \\\n\tsrc/mechanism.cpp \\\n\tsrc/mechanism.hpp  \\\n\tsrc/mechanism_base.cpp \\\n\tsrc/mechanism_base.hpp  \\\n\tsrc/metadata.cpp \\\n\tsrc/metadata.hpp \\\n\tsrc/msg.cpp \\\n\tsrc/msg.hpp \\\n\tsrc/mtrie.cpp \\\n\tsrc/mtrie.hpp \\\n\tsrc/mutex.hpp \\\n\tsrc/norm_engine.cpp \\\n\tsrc/norm_engine.hpp \\\n\tsrc/null_mechanism.cpp \\\n\tsrc/null_mechanism.hpp \\\n\tsrc/object.cpp \\\n\tsrc/object.hpp \\\n\tsrc/options.cpp \\\n\tsrc/options.hpp \\\n\tsrc/own.cpp \\\n\tsrc/own.hpp \\\n\tsrc/pair.cpp \\\n\tsrc/pair.hpp \\\n\tsrc/peer.cpp \\\n\tsrc/peer.hpp \\\n\tsrc/pgm_receiver.cpp \\\n\tsrc/pgm_receiver.hpp \\\n\tsrc/pgm_sender.cpp \\\n\tsrc/pgm_sender.hpp \\\n\tsrc/pgm_socket.cpp \\\n\tsrc/pgm_socket.hpp \\\n\tsrc/pipe.cpp \\\n\tsrc/pipe.hpp \\\n\tsrc/plain_client.cpp \\\n\tsrc/plain_client.hpp \\\n\tsrc/plain_common.hpp \\\n\tsrc/plain_server.cpp \\\n\tsrc/plain_server.hpp \\\n\tsrc/platform.hpp \\\n\tsrc/poll.cpp \\\n\tsrc/poll.hpp \\\n\tsrc/poller.hpp \\\n\tsrc/poller_base.cpp \\\n\tsrc/poller_base.hpp \\\n\tsrc/polling_util.cpp \\\n\tsrc/polling_util.hpp \\\n\tsrc/pollset.cpp \\\n\tsrc/pollset.hpp \\\n\tsrc/precompiled.cpp \\\n\tsrc/precompiled.hpp \\\n\tsrc/proxy.cpp \\\n\tsrc/proxy.hpp \\\n\tsrc/pub.cpp \\\n\tsrc/pub.hpp \\\n\tsrc/pull.cpp \\\n\tsrc/pull.hpp \\\n\tsrc/push.cpp \\\n\tsrc/push.hpp \\\n\tsrc/radio.cpp \\\n\tsrc/radio.hpp \\\n\tsrc/radix_tree.cpp \\\n\tsrc/radix_tree.hpp \\\n\tsrc/random.cpp \\\n\tsrc/random.hpp \\\n\tsrc/raw_decoder.cpp \\\n\tsrc/raw_decoder.hpp \\\n\tsrc/raw_encoder.cpp \\\n\tsrc/raw_encoder.hpp \\\n\tsrc/raw_engine.cpp \\\n\tsrc/raw_engine.hpp \\\n\tsrc/reaper.cpp \\\n\tsrc/reaper.hpp \\\n\tsrc/rep.cpp \\\n\tsrc/rep.hpp \\\n\tsrc/req.cpp \\\n\tsrc/req.hpp \\\n\tsrc/router.cpp \\\n\tsrc/router.hpp \\\n\tsrc/scatter.cpp \\\n\tsrc/scatter.hpp \\\n\tsrc/secure_allocator.hpp \\\n\tsrc/select.cpp \\\n\tsrc/select.hpp \\\n\tsrc/server.cpp \\\n\tsrc/server.hpp \\\n\tsrc/session_base.cpp \\\n\tsrc/session_base.hpp \\\n\tsrc/signaler.cpp \\\n\tsrc/signaler.hpp \\\n\tsrc/socket_base.cpp \\\n\tsrc/socket_base.hpp \\\n\tsrc/socks.cpp \\\n\tsrc/socks.hpp \\\n\tsrc/socks_connecter.cpp \\\n\tsrc/socks_connecter.hpp \\\n\tsrc/stdint.hpp \\\n\tsrc/stream.cpp \\\n\tsrc/stream.hpp \\\n\tsrc/stream_connecter_base.cpp \\\n\tsrc/stream_connecter_base.hpp \\\n\tsrc/stream_listener_base.cpp \\\n\tsrc/stream_listener_base.hpp \\\n\tsrc/stream_engine_base.cpp \\\n\tsrc/stream_engine_base.hpp \\\n\tsrc/sub.cpp \\\n\tsrc/sub.hpp \\\n\tsrc/tcp.cpp \\\n\tsrc/tcp.hpp \\\n\tsrc/tcp_address.cpp \\\n\tsrc/tcp_address.hpp \\\n\tsrc/tcp_connecter.cpp \\\n\tsrc/tcp_connecter.hpp \\\n\tsrc/tcp_listener.cpp \\\n\tsrc/tcp_listener.hpp \\\n\tsrc/thread.cpp \\\n\tsrc/thread.hpp \\\n\tsrc/timers.cpp \\\n\tsrc/timers.hpp \\\n\tsrc/tipc_address.cpp \\\n\tsrc/tipc_address.hpp \\\n\tsrc/tipc_connecter.cpp \\\n\tsrc/tipc_connecter.hpp \\\n\tsrc/tipc_listener.cpp \\\n\tsrc/tipc_listener.hpp \\\n\tsrc/trie.cpp \\\n\tsrc/trie.hpp \\\n\tsrc/udp_address.cpp \\\n\tsrc/udp_address.hpp \\\n\tsrc/udp_engine.cpp \\\n\tsrc/udp_engine.hpp \\\n\tsrc/v1_decoder.cpp \\\n\tsrc/v1_decoder.hpp \\\n\tsrc/v2_decoder.cpp \\\n\tsrc/v2_decoder.hpp \\\n\tsrc/v1_encoder.cpp \\\n\tsrc/v1_encoder.hpp \\\n\tsrc/v2_encoder.cpp \\\n\tsrc/v2_encoder.hpp \\\n\tsrc/v3_1_encoder.cpp \\\n\tsrc/v3_1_encoder.hpp \\\n\tsrc/v2_protocol.hpp \\\n\tsrc/vmci.cpp \\\n\tsrc/vmci.hpp \\\n\tsrc/vmci_address.cpp \\\n\tsrc/vmci_address.hpp \\\n\tsrc/vmci_connecter.cpp \\\n\tsrc/vmci_connecter.hpp \\\n\tsrc/vmci_listener.cpp \\\n\tsrc/vmci_listener.hpp \\\n\tsrc/windows.hpp \\\n\tsrc/wire.hpp \\\n\tsrc/xpub.cpp \\\n\tsrc/xpub.hpp \\\n\tsrc/xsub.cpp \\\n\tsrc/xsub.hpp \\\n\tsrc/ypipe.hpp \\\n\tsrc/ypipe_base.hpp \\\n\tsrc/ypipe_conflate.hpp \\\n\tsrc/yqueue.hpp \\\n\tsrc/zmq.cpp \\\n\tsrc/zmq_utils.cpp \\\n\tsrc/decoder_allocators.cpp \\\n\tsrc/decoder_allocators.hpp \\\n\tsrc/socket_poller.cpp \\\n\tsrc/socket_poller.hpp \\\n\tsrc/zap_client.cpp \\\n\tsrc/zap_client.hpp \\\n\tsrc/zmtp_engine.cpp \\\n\tsrc/zmtp_engine.hpp \\\n\tsrc/zmq_draft.h\n\nif USE_WEPOLL\nsrc_libzmq_la_SOURCES += \\\n\texternal/wepoll/wepoll.c \\\n\texternal/wepoll/wepoll.h\nendif\n\nif HAVE_WS\nsrc_libzmq_la_SOURCES += \\\n\tsrc/ws_address.cpp \\\n\tsrc/ws_address.hpp \\\n\tsrc/wss_address.cpp \\\n\tsrc/wss_address.hpp \\\n\tsrc/ws_connecter.cpp \\\n\tsrc/ws_connecter.hpp \\\n\tsrc/ws_decoder.cpp \\\n\tsrc/ws_decoder.hpp \\\n\tsrc/ws_encoder.cpp \\\n\tsrc/ws_encoder.hpp \\\n\tsrc/ws_engine.cpp \\\n\tsrc/ws_engine.hpp \\\n\tsrc/ws_listener.cpp \\\n\tsrc/ws_listener.hpp \\\n\tsrc/ws_protocol.hpp\nendif\n\nif USE_BUILTIN_SHA1\nsrc_libzmq_la_SOURCES += \\\n\texternal/sha1/sha1.c \\\n\texternal/sha1/sha1.h\nendif\n\nif HAVE_WSS\nsrc_libzmq_la_SOURCES += \\\n\tsrc/wss_engine.cpp \\\n\tsrc/wss_engine.hpp\nendif\n\nif ON_MINGW\nsrc_libzmq_la_LDFLAGS = \\\n\t-no-undefined \\\n\t-avoid-version \\\n\t-version-info @LTVER@ \\\n\t@LIBZMQ_EXTRA_LDFLAGS@\nelse\nif ON_CYGWIN\nsrc_libzmq_la_LDFLAGS = \\\n\t-no-undefined \\\n\t-avoid-version \\\n\t-version-info @LTVER@ \\\n\t@LIBZMQ_EXTRA_LDFLAGS@\nelse\nif ON_ANDROID\nsrc_libzmq_la_LDFLAGS = \\\n\t-avoid-version \\\n\t-version-info @LTVER@ \\\n\t@LIBZMQ_EXTRA_LDFLAGS@\nelse\nsrc_libzmq_la_LDFLAGS = \\\n\t-version-info @LTVER@ \\\n\t@LIBZMQ_EXTRA_LDFLAGS@\nendif\nendif\nendif\n\nif HAVE_VSCRIPT_COMPLEX\nsrc_libzmq_la_LDFLAGS += $(VSCRIPT_LDFLAGS),$(srcdir)/src/libzmq.vers\nendif\n\nsrc_libzmq_la_CPPFLAGS = $(CODE_COVERAGE_CPPFLAGS) $(LIBUNWIND_CFLAGS) $(LIBBSD_CFLAGS)\nsrc_libzmq_la_CFLAGS = $(CODE_COVERAGE_CFLAGS) $(LIBUNWIND_CFLAGS) $(LIBBSD_CFLAGS)\nsrc_libzmq_la_CXXFLAGS = @LIBZMQ_EXTRA_CXXFLAGS@ $(CODE_COVERAGE_CXXFLAGS) \\\n\t$(LIBUNWIND_CFLAGS) $(LIBBSD_CFLAGS)\nsrc_libzmq_la_LIBADD = $(CODE_COVERAGE_LDFLAGS) $(LIBUNWIND_LIBS) $(LIBBSD_LIBS)\n\nif USE_NSS\nsrc_libzmq_la_CPPFLAGS += ${NSS3_CFLAGS}\nsrc_libzmq_la_LIBADD += ${NSS3_LIBS}\nendif\n\nif USE_GNUTLS\nsrc_libzmq_la_CPPFLAGS += ${GNUTLS_CFLAGS}\nsrc_libzmq_la_LIBADD += ${GNUTLS_LIBS}\nendif\n\nif USE_LIBSODIUM\nsrc_libzmq_la_CPPFLAGS += ${sodium_CFLAGS}\nsrc_libzmq_la_LIBADD += ${sodium_LIBS}\nendif\n\nif HAVE_PGM\nsrc_libzmq_la_CPPFLAGS += ${pgm_CFLAGS}\nsrc_libzmq_la_LIBADD += ${pgm_LIBS}\nendif\n\nif HAVE_NORM\nsrc_libzmq_la_CPPFLAGS += ${norm_CFLAGS}\nsrc_libzmq_la_LIBADD += ${norm_LIBS}\nendif\n\nif BUILD_GSSAPI\nsrc_libzmq_la_CPPFLAGS += ${gssapi_krb5_CFLAGS}\nsrc_libzmq_la_LIBADD += ${gssapi_krb5_LIBS}\nendif\n\nif ENABLE_PERF\nnoinst_PROGRAMS = \\\n\tperf/local_lat \\\n\tperf/remote_lat \\\n\tperf/local_thr \\\n\tperf/remote_thr \\\n\tperf/inproc_lat \\\n\tperf/inproc_thr \\\n\tperf/proxy_thr\n\nperf_local_lat_LDADD = src/libzmq.la\nperf_local_lat_SOURCES = perf/local_lat.cpp\n\nperf_remote_lat_LDADD = src/libzmq.la\nperf_remote_lat_SOURCES = perf/remote_lat.cpp\n\nperf_local_thr_LDADD = src/libzmq.la\nperf_local_thr_SOURCES = perf/local_thr.cpp\n\nperf_remote_thr_LDADD = src/libzmq.la\nperf_remote_thr_SOURCES = perf/remote_thr.cpp\n\nperf_inproc_lat_LDADD = src/libzmq.la\nperf_inproc_lat_SOURCES = perf/inproc_lat.cpp\n\nperf_inproc_thr_LDADD = src/libzmq.la\nperf_inproc_thr_SOURCES = perf/inproc_thr.cpp\n\nperf_proxy_thr_LDADD = src/libzmq.la\nperf_proxy_thr_SOURCES = perf/proxy_thr.cpp\n\nif ENABLE_STATIC\nnoinst_PROGRAMS += \\\n\tperf/benchmark_radix_tree\n\nperf_benchmark_radix_tree_DEPENDENCIES = src/libzmq.la\nperf_benchmark_radix_tree_CPPFLAGS = -I$(top_srcdir)/src\nperf_benchmark_radix_tree_LDADD = $(top_builddir)/src/.libs/libzmq.a \\\n\t${src_libzmq_la_LIBADD}\nperf_benchmark_radix_tree_SOURCES = perf/benchmark_radix_tree.cpp\nendif\nendif\n\nif ENABLE_CURVE_KEYGEN\nbin_PROGRAMS = tools/curve_keygen\n\ntools_curve_keygen_LDADD = src/libzmq.la\ntools_curve_keygen_SOURCES = tools/curve_keygen.cpp\nendif\n\n#\n# tests\n#\ntest_apps = \\\n\ttests/test_ancillaries \\\n\ttests/test_system \\\n\ttests/test_pair_inproc \\\n\ttests/test_pair_tcp \\\n\ttests/test_reqrep_inproc \\\n\ttests/test_reqrep_tcp \\\n\ttests/test_hwm \\\n\ttests/test_hwm_pubsub \\\n\ttests/test_reqrep_device \\\n\ttests/test_sub_forward \\\n\ttests/test_invalid_rep \\\n\ttests/test_msg_flags \\\n\ttests/test_msg_ffn \\\n\ttests/test_connect_resolve \\\n\ttests/test_immediate \\\n\ttests/test_last_endpoint \\\n\ttests/test_term_endpoint \\\n\ttests/test_srcfd \\\n\ttests/test_monitor \\\n\ttests/test_router_mandatory \\\n\ttests/test_router_mandatory_hwm \\\n\ttests/test_router_handover \\\n\ttests/test_probe_router \\\n\ttests/test_stream \\\n\ttests/test_stream_empty \\\n\ttests/test_stream_disconnect \\\n\ttests/test_stream_timeout \\\n\ttests/test_disconnect_inproc \\\n\ttests/test_unbind_wildcard \\\n\ttests/test_ctx_options \\\n\ttests/test_ctx_destroy \\\n\ttests/test_security_no_zap_handler \\\n\ttests/test_security_null \\\n\ttests/test_security_plain \\\n\ttests/test_security_zap \\\n\ttests/test_iov \\\n\ttests/test_spec_req \\\n\ttests/test_spec_rep \\\n\ttests/test_spec_dealer \\\n\ttests/test_spec_router \\\n\ttests/test_spec_pushpull \\\n\ttests/test_req_correlate \\\n\ttests/test_req_relaxed \\\n\ttests/test_conflate \\\n\ttests/test_inproc_connect \\\n\ttests/test_issue_566 \\\n\ttests/test_proxy_hwm \\\n\ttests/test_proxy_single_socket \\\n\ttests/test_proxy_steerable \\\n\ttests/test_proxy_terminate \\\n\ttests/test_getsockopt_memset \\\n\ttests/test_setsockopt \\\n\ttests/test_diffserv \\\n\ttests/test_connect_rid \\\n\ttests/test_bind_src_address \\\n\ttests/test_metadata \\\n\ttests/test_capabilities \\\n\ttests/test_xpub_nodrop \\\n\ttests/test_xpub_manual \\\n\ttests/test_xpub_topic \\\n\ttests/test_xpub_welcome_msg \\\n\ttests/test_xpub_verbose \\\n\ttests/test_atomics \\\n\ttests/test_sockopt_hwm \\\n\ttests/test_heartbeats \\\n\ttests/test_stream_exceeds_buffer \\\n\ttests/test_pub_invert_matching \\\n\ttests/test_base85 \\\n\ttests/test_bind_after_connect_tcp \\\n\ttests/test_sodium \\\n\ttests/test_reconnect_ivl \\\n\ttests/test_mock_pub_sub \\\n\ttests/test_socket_null \\\n\ttests/test_tcp_accept_filter\n\nUNITY_CPPFLAGS = -I$(top_srcdir)/external/unity -DUNITY_USE_COMMAND_LINE_ARGS -DUNITY_EXCLUDE_FLOAT\nUNITY_LIBS = $(top_builddir)/external/unity/libunity.a\nexternal_unity_libunity_a_SOURCES = external/unity/unity.c \\\n\texternal/unity/unity.h \\\n\texternal/unity/unity_internals.h\n\nTESTUTIL_CPPFLAGS = ${UNITY_CPPFLAGS}\nTESTUTIL_LIBS = $(top_builddir)/tests/libtestutil.a ${UNITY_LIBS}\ntests_libtestutil_a_SOURCES = \\\n        tests/testutil.cpp \\\n        tests/testutil.hpp \\\n        tests/testutil_monitoring.cpp \\\n        tests/testutil_monitoring.hpp \\\n        tests/testutil_security.cpp \\\n        tests/testutil_security.hpp \\\n        tests/testutil_unity.cpp \\\n        tests/testutil_unity.hpp\ntests_libtestutil_a_CPPFLAGS = ${UNITY_CPPFLAGS}\n\nnoinst_LIBRARIES = external/unity/libunity.a tests/libtestutil.a\n\ntests_test_ancillaries_SOURCES = tests/test_ancillaries.cpp\ntests_test_ancillaries_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_ancillaries_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_system_SOURCES = tests/test_system.cpp\ntests_test_system_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_system_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pair_inproc_SOURCES = tests/test_pair_inproc.cpp\ntests_test_pair_inproc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pair_inproc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pair_tcp_SOURCES = tests/test_pair_tcp.cpp\ntests_test_pair_tcp_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pair_tcp_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_inproc_SOURCES = tests/test_reqrep_inproc.cpp\ntests_test_reqrep_inproc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_inproc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_tcp_SOURCES = tests/test_reqrep_tcp.cpp\ntests_test_reqrep_tcp_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_tcp_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_hwm_SOURCES = tests/test_hwm.cpp\ntests_test_hwm_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_hwm_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_hwm_pubsub_SOURCES = tests/test_hwm_pubsub.cpp\ntests_test_hwm_pubsub_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_hwm_pubsub_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_device_SOURCES = tests/test_reqrep_device.cpp\ntests_test_reqrep_device_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_device_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_sub_forward_SOURCES = tests/test_sub_forward.cpp\ntests_test_sub_forward_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_sub_forward_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_invalid_rep_SOURCES = tests/test_invalid_rep.cpp\ntests_test_invalid_rep_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_invalid_rep_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_msg_flags_SOURCES = tests/test_msg_flags.cpp\ntests_test_msg_flags_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_msg_flags_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_msg_ffn_SOURCES = tests/test_msg_ffn.cpp\ntests_test_msg_ffn_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_msg_ffn_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_resolve_SOURCES = tests/test_connect_resolve.cpp\ntests_test_connect_resolve_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_resolve_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_immediate_SOURCES = tests/test_immediate.cpp\ntests_test_immediate_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_immediate_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_last_endpoint_SOURCES = tests/test_last_endpoint.cpp\ntests_test_last_endpoint_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_last_endpoint_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_term_endpoint_SOURCES = tests/test_term_endpoint.cpp\ntests_test_term_endpoint_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_term_endpoint_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_srcfd_SOURCES = tests/test_srcfd.cpp\ntests_test_srcfd_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_srcfd_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_monitor_SOURCES = tests/test_monitor.cpp\ntests_test_monitor_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_monitor_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_router_mandatory_SOURCES = tests/test_router_mandatory.cpp\ntests_test_router_mandatory_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_router_mandatory_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_router_mandatory_hwm_SOURCES = tests/test_router_mandatory_hwm.cpp\ntests_test_router_mandatory_hwm_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_router_mandatory_hwm_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_router_handover_SOURCES = tests/test_router_handover.cpp\ntests_test_router_handover_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_router_handover_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_probe_router_SOURCES = tests/test_probe_router.cpp\ntests_test_probe_router_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_probe_router_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_stream_SOURCES = tests/test_stream.cpp\ntests_test_stream_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_stream_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_stream_empty_SOURCES = tests/test_stream_empty.cpp\ntests_test_stream_empty_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_stream_empty_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_stream_timeout_SOURCES = tests/test_stream_timeout.cpp\ntests_test_stream_timeout_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_stream_timeout_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_stream_disconnect_SOURCES = tests/test_stream_disconnect.cpp\ntests_test_stream_disconnect_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_stream_disconnect_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_disconnect_inproc_SOURCES = tests/test_disconnect_inproc.cpp\ntests_test_disconnect_inproc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_disconnect_inproc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_unbind_wildcard_SOURCES = tests/test_unbind_wildcard.cpp\ntests_test_unbind_wildcard_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_unbind_wildcard_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_ctx_options_SOURCES = tests/test_ctx_options.cpp\ntests_test_ctx_options_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_ctx_options_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_iov_SOURCES = tests/test_iov.cpp\ntests_test_iov_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_iov_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_ctx_destroy_SOURCES = tests/test_ctx_destroy.cpp\ntests_test_ctx_destroy_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_ctx_destroy_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_security_no_zap_handler_SOURCES = tests/test_security_no_zap_handler.cpp\ntests_test_security_no_zap_handler_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_security_no_zap_handler_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_security_null_SOURCES = tests/test_security_null.cpp\ntests_test_security_null_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_security_null_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_security_plain_SOURCES = tests/test_security_plain.cpp\ntests_test_security_plain_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_security_plain_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_security_zap_SOURCES = tests/test_security_zap.cpp\ntests_test_security_zap_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_security_zap_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_spec_req_SOURCES = tests/test_spec_req.cpp\ntests_test_spec_req_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_spec_req_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_spec_rep_SOURCES = tests/test_spec_rep.cpp\ntests_test_spec_rep_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_spec_rep_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_spec_dealer_SOURCES = tests/test_spec_dealer.cpp\ntests_test_spec_dealer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_spec_dealer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_spec_router_SOURCES = tests/test_spec_router.cpp\ntests_test_spec_router_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_spec_router_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_spec_pushpull_SOURCES = tests/test_spec_pushpull.cpp\ntests_test_spec_pushpull_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_spec_pushpull_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_req_correlate_SOURCES = tests/test_req_correlate.cpp\ntests_test_req_correlate_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_req_correlate_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_req_relaxed_SOURCES = tests/test_req_relaxed.cpp\ntests_test_req_relaxed_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_req_relaxed_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_conflate_SOURCES = tests/test_conflate.cpp\ntests_test_conflate_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_conflate_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_inproc_connect_SOURCES = tests/test_inproc_connect.cpp\ntests_test_inproc_connect_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_inproc_connect_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_issue_566_SOURCES = tests/test_issue_566.cpp\ntests_test_issue_566_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_issue_566_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\n# TODO: gets stuck even with long timeout running under Github Actions\nif !VALGRIND_ENABLED\ntest_apps += tests/test_proxy\n\ntests_test_proxy_SOURCES = tests/test_proxy.cpp\ntests_test_proxy_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_proxy_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\n\ntests_test_proxy_hwm_SOURCES = tests/test_proxy_hwm.cpp\ntests_test_proxy_hwm_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_proxy_hwm_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_proxy_single_socket_SOURCES = tests/test_proxy_single_socket.cpp\ntests_test_proxy_single_socket_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_proxy_single_socket_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_proxy_steerable_SOURCES = tests/test_proxy_steerable.cpp\ntests_test_proxy_steerable_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_proxy_steerable_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_proxy_terminate_SOURCES = tests/test_proxy_terminate.cpp\ntests_test_proxy_terminate_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_proxy_terminate_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_getsockopt_memset_SOURCES = tests/test_getsockopt_memset.cpp\ntests_test_getsockopt_memset_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_getsockopt_memset_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_diffserv_SOURCES = tests/test_diffserv.cpp\ntests_test_diffserv_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_diffserv_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_rid_SOURCES = tests/test_connect_rid.cpp\ntests_test_connect_rid_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_rid_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_bind_src_address_SOURCES = tests/test_bind_src_address.cpp\ntests_test_bind_src_address_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_src_address_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_metadata_SOURCES = tests/test_metadata.cpp\ntests_test_metadata_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_metadata_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_capabilities_SOURCES = tests/test_capabilities.cpp\ntests_test_capabilities_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_capabilities_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_nodrop_SOURCES = tests/test_xpub_nodrop.cpp\ntests_test_xpub_nodrop_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_nodrop_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_manual_SOURCES = tests/test_xpub_manual.cpp\ntests_test_xpub_manual_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_manual_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_topic_SOURCES = tests/test_xpub_topic.cpp\ntests_test_xpub_topic_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_topic_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_welcome_msg_SOURCES = tests/test_xpub_welcome_msg.cpp\ntests_test_xpub_welcome_msg_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_welcome_msg_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_verbose_SOURCES = tests/test_xpub_verbose.cpp\ntests_test_xpub_verbose_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_verbose_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_atomics_SOURCES = tests/test_atomics.cpp\ntests_test_atomics_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_atomics_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_sockopt_hwm_SOURCES = tests/test_sockopt_hwm.cpp\ntests_test_sockopt_hwm_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_sockopt_hwm_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_setsockopt_SOURCES = tests/test_setsockopt.cpp\ntests_test_setsockopt_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_setsockopt_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_heartbeats_SOURCES = tests/test_heartbeats.cpp\ntests_test_heartbeats_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_heartbeats_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_stream_exceeds_buffer_SOURCES = tests/test_stream_exceeds_buffer.cpp\ntests_test_stream_exceeds_buffer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_stream_exceeds_buffer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pub_invert_matching_SOURCES = tests/test_pub_invert_matching.cpp\ntests_test_pub_invert_matching_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pub_invert_matching_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_bind_after_connect_tcp_SOURCES = tests/test_bind_after_connect_tcp.cpp\ntests_test_bind_after_connect_tcp_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_after_connect_tcp_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_base85_SOURCES = tests/test_base85.cpp\ntests_test_base85_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_base85_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_sodium_SOURCES = tests/test_sodium.cpp\ntests_test_sodium_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_sodium_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_socket_null_SOURCES = tests/test_socket_null.cpp\ntests_test_socket_null_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_socket_null_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reconnect_ivl_SOURCES = tests/test_reconnect_ivl.cpp\ntests_test_reconnect_ivl_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reconnect_ivl_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_mock_pub_sub_SOURCES = tests/test_mock_pub_sub.cpp\ntests_test_mock_pub_sub_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_mock_pub_sub_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_tcp_accept_filter_SOURCES = tests/test_tcp_accept_filter.cpp\ntests_test_tcp_accept_filter_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_tcp_accept_filter_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nif HAVE_CURVE\n\ntest_apps += \\\n\ttests/test_security_curve\n\ntests_test_security_curve_SOURCES = \\\n\ttests/test_security_curve.cpp \\\n        src/curve_client_tools.hpp \\\n\tsrc/clock.hpp \\\n\tsrc/clock.cpp \\\n\tsrc/random.hpp \\\n\tsrc/random.cpp \\\n\tsrc/err.hpp \\\n\tsrc/err.cpp\n\ntests_test_security_curve_LDADD = \\\n        ${TESTUTIL_LIBS} src/libzmq.la $(LIBUNWIND_LIBS) $(LIBBSD_LIBS)\ntests_test_security_curve_CPPFLAGS = \\\n        ${TESTUTIL_CPPFLAGS} \\\n\t${LIBUNWIND_CFLAGS}  ${LIBBSD_CFLAGS}\n\nif USE_LIBSODIUM\ntests_test_security_curve_CPPFLAGS += \\\n\t${sodium_CFLAGS}\ntests_test_security_curve_LDADD += \\\n\t${sodium_LIBS}\nendif\n\nendif\n\nif HAVE_WS\ntest_apps += \\\n\ttests/test_ws_transport\ntests_test_ws_transport_SOURCES = tests/test_ws_transport.cpp\ntests_test_ws_transport_LDADD = ${TESTUTIL_LIBS} src/libzmq.la ${NSS3_LIBS}\ntests_test_ws_transport_CPPFLAGS = ${TESTUTIL_CPPFLAGS} ${NSS3_CFLAGS}\nendif\n\nif HAVE_WSS\ntest_apps += \\\n\ttests/test_wss_transport\ntests_test_wss_transport_SOURCES = tests/test_wss_transport.cpp\ntests_test_wss_transport_LDADD = ${TESTUTIL_LIBS} src/libzmq.la ${GNUTLS_LIBS}\ntests_test_wss_transport_CPPFLAGS = ${TESTUTIL_CPPFLAGS} ${GNUTLS_CFLAGS}\nendif\n\nif !ON_MINGW\nif !ON_CYGWIN\ntest_apps += \\\n\ttests/test_shutdown_stress \\\n\ttests/test_ipc_wildcard \\\n\ttests/test_pair_ipc \\\n\ttests/test_rebind_ipc \\\n\ttests/test_reqrep_ipc \\\n\ttests/test_use_fd \\\n\ttests/test_zmq_poll_fd \\\n\ttests/test_timeo \\\n\ttests/test_filter_ipc\n\ntests_test_shutdown_stress_SOURCES = tests/test_shutdown_stress.cpp\ntests_test_shutdown_stress_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_shutdown_stress_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_ipc_wildcard_SOURCES = tests/test_ipc_wildcard.cpp\ntests_test_ipc_wildcard_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_ipc_wildcard_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pair_ipc_SOURCES = tests/test_pair_ipc.cpp\ntests_test_pair_ipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pair_ipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_rebind_ipc_SOURCES = tests/test_rebind_ipc.cpp\ntests_test_rebind_ipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_rebind_ipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_ipc_SOURCES = tests/test_reqrep_ipc.cpp\ntests_test_reqrep_ipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_ipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_timeo_SOURCES = tests/test_timeo.cpp\ntests_test_timeo_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_timeo_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_filter_ipc_SOURCES = tests/test_filter_ipc.cpp\ntests_test_filter_ipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_filter_ipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_use_fd_SOURCES = tests/test_use_fd.cpp\ntests_test_use_fd_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_use_fd_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_zmq_poll_fd_SOURCES = tests/test_zmq_poll_fd.cpp\ntests_test_zmq_poll_fd_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_zmq_poll_fd_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nif HAVE_FORK\nif !VALGRIND_ENABLED\ntest_apps += tests/test_fork\n\ntests_test_fork_SOURCES = tests/test_fork.cpp\ntests_test_fork_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_fork_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nendif\nendif\nendif\nendif\n\nif BUILD_TIPC\ntest_apps += \\\n\ttests/test_connect_delay_tipc \\\n\ttests/test_pair_tipc \\\n\ttests/test_reqrep_device_tipc \\\n\ttests/test_reqrep_tipc \\\n\ttests/test_router_mandatory_tipc \\\n\ttests/test_shutdown_stress_tipc \\\n\ttests/test_sub_forward_tipc \\\n\ttests/test_term_endpoint_tipc \\\n\ttests/test_address_tipc\n\ntests_test_connect_delay_tipc_SOURCES = tests/test_connect_delay_tipc.cpp\ntests_test_connect_delay_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_delay_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pair_tipc_SOURCES = tests/test_pair_tipc.cpp\ntests_test_pair_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pair_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_device_tipc_SOURCES = tests/test_reqrep_device_tipc.cpp\ntests_test_reqrep_device_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_device_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reqrep_tipc_SOURCES = tests/test_reqrep_tipc.cpp\ntests_test_reqrep_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_router_mandatory_tipc_SOURCES = tests/test_router_mandatory_tipc.cpp\ntests_test_router_mandatory_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_router_mandatory_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_shutdown_stress_tipc_SOURCES = tests/test_shutdown_stress_tipc.cpp\ntests_test_shutdown_stress_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_shutdown_stress_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_sub_forward_tipc_SOURCES = tests/test_sub_forward_tipc.cpp\ntests_test_sub_forward_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_sub_forward_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_term_endpoint_tipc_SOURCES = tests/test_term_endpoint_tipc.cpp\ntests_test_term_endpoint_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_term_endpoint_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_address_tipc_SOURCES = tests/test_address_tipc.cpp\ntests_test_address_tipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_address_tipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nendif\n\nif BUILD_GSSAPI\ntest_apps += tests/test_security_gssapi\n\ntests_test_security_gssapi_SOURCES = tests/test_security_gssapi.cpp\ntests_test_security_gssapi_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_security_gssapi_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nendif\n\nif ON_LINUX\ntest_apps += tests/test_abstract_ipc\n\ntests_test_abstract_ipc_SOURCES = tests/test_abstract_ipc.cpp\ntests_test_abstract_ipc_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_abstract_ipc_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\n# TODO: gets stuck even with long timeout running under Github Actions\nif !VALGRIND_ENABLED\ntest_apps += tests/test_socks\n\ntests_test_socks_SOURCES = tests/test_socks.cpp\ntests_test_socks_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_socks_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\n\n# TODO: enable when https://github.com/zeromq/libzmq/issues/3898 is fixed\nif !ENABLE_ASAN\ntest_apps += tests/test_many_sockets\n\ntests_test_many_sockets_SOURCES = tests/test_many_sockets.cpp\ntests_test_many_sockets_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_many_sockets_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\n\nendif\n\nif HAVE_VMCI\ntest_apps += tests/test_pair_vmci tests/test_reqrep_vmci\n\ntests_test_pair_vmci_SOURCES = tests/test_pair_vmci.cpp\ntests_test_pair_vmci_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pair_vmci_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_pair_vmci_LDFLAGS = @LIBZMQ_VMCI_LDFLAGS@\ntests_test_pair_vmci_CXXFLAGS = @LIBZMQ_VMCI_CXXFLAGS@\n\ntests_test_reqrep_vmci_SOURCES = tests/test_reqrep_vmci.cpp\ntests_test_reqrep_vmci_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reqrep_vmci_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_reqrep_vmci_LDFLAGS = @LIBZMQ_VMCI_LDFLAGS@\ntests_test_reqrep_vmci_CXXFLAGS = @LIBZMQ_VMCI_CXXFLAGS@\n\nendif\n\nif ENABLE_DRAFTS\ntest_apps += tests/test_poller \\\n\ttests/test_client_server \\\n\ttests/test_thread_safe \\\n\ttests/test_timers \\\n\ttests/test_radio_dish \\\n\ttests/test_scatter_gather \\\n\ttests/test_dgram \\\n\ttests/test_app_meta \\\n\ttests/test_xpub_manual_last_value \\\n\ttests/test_router_notify \\\n\ttests/test_peer \\\n\ttests/test_reconnect_options \\\n\ttests/test_msg_init \\\n\ttests/test_hello_msg \\\n\ttests/test_disconnect_msg \\\n\ttests/test_channel \\\n\ttests/test_hiccup_msg \\\n\ttests/test_zmq_ppoll_fd \\\n\ttests/test_xsub_verbose \\\n\ttests/test_pubsub_topics_count\n\ntests_test_poller_SOURCES = tests/test_poller.cpp\ntests_test_poller_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_poller_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_client_server_SOURCES = tests/test_client_server.cpp\ntests_test_client_server_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_client_server_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_thread_safe_SOURCES = tests/test_thread_safe.cpp\ntests_test_thread_safe_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_thread_safe_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_timers_SOURCES = tests/test_timers.cpp\ntests_test_timers_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_timers_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_radio_dish_SOURCES = tests/test_radio_dish.cpp\ntests_test_radio_dish_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_radio_dish_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_scatter_gather_SOURCES = tests/test_scatter_gather.cpp\ntests_test_scatter_gather_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_scatter_gather_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_dgram_SOURCES = tests/test_dgram.cpp\ntests_test_dgram_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_dgram_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xpub_manual_last_value_SOURCES = tests/test_xpub_manual_last_value.cpp\ntests_test_xpub_manual_last_value_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xpub_manual_last_value_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_app_meta_SOURCES = tests/test_app_meta.cpp\ntests_test_app_meta_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_app_meta_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_router_notify_SOURCES = tests/test_router_notify.cpp\ntests_test_router_notify_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_router_notify_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_peer_SOURCES = tests/test_peer.cpp\ntests_test_peer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_peer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_reconnect_options_SOURCES = tests/test_reconnect_options.cpp\ntests_test_reconnect_options_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_reconnect_options_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_msg_init_SOURCES = tests/test_msg_init.cpp\ntests_test_msg_init_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_msg_init_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_hello_msg_SOURCES = tests/test_hello_msg.cpp\ntests_test_hello_msg_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_hello_msg_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_disconnect_msg_SOURCES = tests/test_disconnect_msg.cpp\ntests_test_disconnect_msg_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_disconnect_msg_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_channel_SOURCES = tests/test_channel.cpp\ntests_test_channel_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_channel_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_hiccup_msg_SOURCES = tests/test_hiccup_msg.cpp\ntests_test_hiccup_msg_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_hiccup_msg_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_zmq_ppoll_fd_SOURCES = tests/test_zmq_ppoll_fd.cpp\ntests_test_zmq_ppoll_fd_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_zmq_ppoll_fd_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_xsub_verbose_SOURCES = tests/test_xsub_verbose.cpp\ntests_test_xsub_verbose_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_xsub_verbose_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_pubsub_topics_count_SOURCES = tests/test_pubsub_topics_count.cpp\ntests_test_pubsub_topics_count_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_pubsub_topics_count_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nif HAVE_FORK\ntest_apps += tests/test_zmq_ppoll_signals\n\ntests_test_zmq_ppoll_signals_SOURCES = tests/test_zmq_ppoll_signals.cpp\ntests_test_zmq_ppoll_signals_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_zmq_ppoll_signals_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\nendif\n\nif FUZZING_ENGINE_LIB\nfuzzer_apps = tests/test_bind_null_fuzzer \\\n\ttests/test_connect_null_fuzzer \\\n\ttests/test_bind_fuzzer \\\n\ttests/test_connect_fuzzer \\\n\ttests/test_bind_stream_fuzzer \\\n\ttests/test_connect_stream_fuzzer \\\n\ttests/test_socket_options_fuzzer\n\ntests_test_bind_null_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_bind_null_fuzzer_SOURCES = tests/test_bind_null_fuzzer.cpp\ntests_test_bind_null_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_bind_null_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_bind_null_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_connect_null_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_connect_null_fuzzer_SOURCES = tests/test_connect_null_fuzzer.cpp\ntests_test_connect_null_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_connect_null_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_connect_null_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_bind_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_bind_fuzzer_SOURCES = tests/test_bind_fuzzer.cpp\ntests_test_bind_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_bind_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_bind_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_connect_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_connect_fuzzer_SOURCES = tests/test_connect_fuzzer.cpp\ntests_test_connect_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_connect_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_connect_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_socket_options_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_socket_options_fuzzer_SOURCES = tests/test_socket_options_fuzzer.cpp\ntests_test_socket_options_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_socket_options_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_socket_options_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_bind_stream_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_bind_stream_fuzzer_SOURCES = tests/test_bind_stream_fuzzer.cpp\ntests_test_bind_stream_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_bind_stream_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_bind_stream_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_connect_stream_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_connect_stream_fuzzer_SOURCES = tests/test_connect_stream_fuzzer.cpp\ntests_test_connect_stream_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_connect_stream_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_connect_stream_fuzzer_CXXFLAGS = -std=c++11\n\nif HAVE_CURVE\nfuzzer_apps += tests/test_bind_curve_fuzzer \\\n\ttests/test_connect_curve_fuzzer \\\n\ttests/test_z85_decode_fuzzer\n\ntests_test_bind_curve_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_bind_curve_fuzzer_SOURCES = tests/test_bind_curve_fuzzer.cpp\ntests_test_bind_curve_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_bind_curve_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_bind_curve_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_connect_curve_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_connect_curve_fuzzer_SOURCES = tests/test_connect_curve_fuzzer.cpp\ntests_test_connect_curve_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_connect_curve_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_connect_curve_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_z85_decode_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_z85_decode_fuzzer_SOURCES = tests/test_z85_decode_fuzzer.cpp\ntests_test_z85_decode_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_z85_decode_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_z85_decode_fuzzer_CXXFLAGS = -std=c++11\nendif\n\nif HAVE_WS\nfuzzer_apps += tests/test_connect_ws_fuzzer \\\n\ttests/test_bind_ws_fuzzer\n\ntests_test_connect_ws_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_connect_ws_fuzzer_SOURCES = tests/test_connect_ws_fuzzer.cpp\ntests_test_connect_ws_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_connect_ws_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_connect_ws_fuzzer_CXXFLAGS = -std=c++11\n\ntests_test_bind_ws_fuzzer_DEPENDENCIES = src/libzmq.la\ntests_test_bind_ws_fuzzer_SOURCES = tests/test_bind_ws_fuzzer.cpp\ntests_test_bind_ws_fuzzer_LDADD = ${TESTUTIL_LIBS} ${FUZZING_ENGINE_LIB} \\\n\t\t$(top_builddir)/src/.libs/libzmq.a \\\n\t\t${src_libzmq_la_LIBADD}\ntests_test_bind_ws_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\ntests_test_bind_ws_fuzzer_CXXFLAGS = -std=c++11\nendif\n\nFUZZINGdir = ${prefix}/${FUZZING_INSTALLDIR}\nFUZZING_PROGRAMS = ${fuzzer_apps}\nelse\ntest_apps += tests/test_bind_null_fuzzer \\\n\ttests/test_connect_null_fuzzer \\\n\ttests/test_bind_fuzzer \\\n\ttests/test_connect_fuzzer \\\n\ttests/test_bind_stream_fuzzer \\\n\ttests/test_connect_stream_fuzzer \\\n\ttests/test_socket_options_fuzzer\n\ntests_test_bind_null_fuzzer_SOURCES = tests/test_bind_null_fuzzer.cpp\ntests_test_bind_null_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_null_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_null_fuzzer_SOURCES = tests/test_connect_null_fuzzer.cpp\ntests_test_connect_null_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_null_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_bind_fuzzer_SOURCES = tests/test_bind_fuzzer.cpp\ntests_test_bind_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_fuzzer_SOURCES = tests/test_connect_fuzzer.cpp\ntests_test_connect_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_socket_options_fuzzer_SOURCES = tests/test_socket_options_fuzzer.cpp\ntests_test_socket_options_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_socket_options_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_bind_stream_fuzzer_SOURCES = tests/test_bind_stream_fuzzer.cpp\ntests_test_bind_stream_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_stream_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_stream_fuzzer_SOURCES = tests/test_connect_stream_fuzzer.cpp\ntests_test_connect_stream_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_stream_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\nif HAVE_CURVE\ntest_apps += tests/test_bind_curve_fuzzer \\\n\ttests/test_connect_curve_fuzzer \\\n\ttests/test_z85_decode_fuzzer\n\ntests_test_bind_curve_fuzzer_SOURCES = tests/test_bind_curve_fuzzer.cpp\ntests_test_bind_curve_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_curve_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_connect_curve_fuzzer_SOURCES = tests/test_connect_curve_fuzzer.cpp\ntests_test_connect_curve_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_curve_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_z85_decode_fuzzer_SOURCES = tests/test_z85_decode_fuzzer.cpp\ntests_test_z85_decode_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_z85_decode_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\n\nif HAVE_WS\ntest_apps += tests/test_connect_ws_fuzzer \\\n\ttests/test_bind_ws_fuzzer\n\ntests_test_connect_ws_fuzzer_SOURCES = tests/test_connect_ws_fuzzer.cpp\ntests_test_connect_ws_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_connect_ws_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\n\ntests_test_bind_ws_fuzzer_SOURCES = tests/test_bind_ws_fuzzer.cpp\ntests_test_bind_ws_fuzzer_LDADD = ${TESTUTIL_LIBS} src/libzmq.la\ntests_test_bind_ws_fuzzer_CPPFLAGS = ${TESTUTIL_CPPFLAGS}\nendif\nendif\n\nif ENABLE_STATIC\n# unit tests - these include individual source files and test the internal functions\ntest_apps += \\\n\tunittests/unittest_poller \\\n\tunittests/unittest_ypipe \\\n\tunittests/unittest_mtrie \\\n\tunittests/unittest_ip_resolver \\\n\tunittests/unittest_udp_address \\\n\tunittests/unittest_radix_tree \\\n\tunittests/unittest_curve_encoding\n\nunittests_unittest_poller_SOURCES = unittests/unittest_poller.cpp\nunittests_unittest_poller_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_poller_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_poller_LDADD = \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_ypipe_SOURCES = unittests/unittest_ypipe.cpp\nunittests_unittest_ypipe_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_ypipe_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_ypipe_LDADD = \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_mtrie_SOURCES = unittests/unittest_mtrie.cpp\nunittests_unittest_mtrie_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_mtrie_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_mtrie_LDADD = \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_ip_resolver_SOURCES = unittests/unittest_ip_resolver.cpp unittests/unittest_resolver_common.hpp\nunittests_unittest_ip_resolver_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_ip_resolver_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_ip_resolver_LDADD = \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_udp_address_SOURCES = unittests/unittest_udp_address.cpp unittests/unittest_resolver_common.hpp\nunittests_unittest_udp_address_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_udp_address_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_udp_address_LDADD = \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_radix_tree_SOURCES = unittests/unittest_radix_tree.cpp\nunittests_unittest_radix_tree_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_radix_tree_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_radix_tree_LDADD =  \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nunittests_unittest_curve_encoding_SOURCES = unittests/unittest_curve_encoding.cpp\nunittests_unittest_curve_encoding_CPPFLAGS = -I$(top_srcdir)/src ${TESTUTIL_CPPFLAGS} $(CODE_COVERAGE_CPPFLAGS)\nunittests_unittest_curve_encoding_CXXFLAGS = $(CODE_COVERAGE_CXXFLAGS)\nunittests_unittest_curve_encoding_LDADD =  \\\n        ${TESTUTIL_LIBS} \\\n        $(top_builddir)/src/.libs/libzmq.a \\\n        ${src_libzmq_la_LIBADD} \\\n        $(CODE_COVERAGE_LDFLAGS)\n\nif USE_LIBSODIUM\nunittests_unittest_curve_encoding_CPPFLAGS += ${sodium_CFLAGS}\nunittests_unittest_curve_encoding_LDADD += ${sodium_LIBS}\nendif\nendif\n\ncheck_PROGRAMS = ${test_apps}\n\n#  Run the test cases\nTESTS = $(test_apps)\nXFAIL_TESTS =\n\nif !ON_LINUX\nXFAIL_TESTS += tests/test_abstract_ipc\nendif\n\n#  GNU/Hurd does not support getsockname on IPC, so ZMQ_LAST_ENDPOINT cannot be\n#  used with IPC, so the following tests will fail\nif ON_GNU\nXFAIL_TESTS += tests/test_ipc_wildcard \\\n\t\ttests/test_reqrep_ipc \\\n\t\ttests/test_pair_ipc \\\n\t\ttests/test_term_endpoint\nendif\n\nEXTRA_DIST = \\\n\texternal/unity/license.txt \\\n\texternal/unity/version.txt \\\n\texternal/wepoll/license.txt \\\n\texternal/wepoll/version.txt \\\n\texternal/wepoll/README.md \\\n\tCMakeLists.txt \\\n\tautogen.sh\t\\\n\tversion.sh\t\\\n\tci_build.sh \\\n\tLICENSE \\\n\tsrc/libzmq.vers \\\n\tsrc/version.rc.in \\\n\ttests/CMakeLists.txt \\\n        tests/test_pair_tcp_cap_net_admin.cpp \\\n\tunittests/CMakeLists.txt \\\n        tools/curve_keygen.cpp\n\nMAINTAINERCLEANFILES = \\\n\t$(srcdir)/aclocal.m4 \\\n\t$(srcdir)/autom4te.cache \\\n\t$(srcdir)/configure \\\n\t`find \"$(srcdir)\" -type f -name Makefile.in -print`\n\nif WITH_CLANG_FORMAT\nALL_SOURCE_FILES = $(wildcard \\\n\t$(top_srcdir)/src/*.c \\\n\t$(top_srcdir)/src/*.cc \\\n\t$(top_srcdir)/src/*.cpp \\\n\t$(top_srcdir)/src/*.h \\\n\t$(top_srcdir)/src/*.hpp \\\n\t$(top_srcdir)/tests/*.c \\\n\t$(top_srcdir)/tests/*.cc \\\n\t$(top_srcdir)/tests/*.cpp \\\n\t$(top_srcdir)/tests/*.h \\\n\t$(top_srcdir)/tests/*.hpp \\\n\t$(top_srcdir)/perf/*.c \\\n\t$(top_srcdir)/perf/*.cc \\\n\t$(top_srcdir)/perf/*.cpp \\\n\t$(top_srcdir)/perf/*.h \\\n\t$(top_srcdir)/perf/*.hpp \\\n\t$(top_srcdir)/tools/*.c \\\n\t$(top_srcdir)/tools/*.cc \\\n\t$(top_srcdir)/tools/*.cpp \\\n\t$(top_srcdir)/tools/*.h \\\n\t$(top_srcdir)/tools/*.hpp \\\n\t$(top_srcdir)/include/*.h \\\n )\n\n# Check if any sources need to be fixed, report the filenames and an error code\nclang-format-check: $(ALL_SOURCE_FILES)\n\t@FAILED=0 ; IFS=\";\" ; IDS=\"`printf '\\n\\b'`\" ; export IFS IDS; \\\n\t for FILE in $(ALL_SOURCE_FILES) ; do \\\n\t\ttest -s $$FILE || continue ; \\\n\t\t$(CLANG_FORMAT) -style=file -output-replacements-xml \"$$FILE\" | grep \"<replacement \" >/dev/null && \\\n\t\t{ echo \"$$FILE is not correctly formatted\" >&2 ; FAILED=1; } ; \\\n\t done; \\\n\t if test \"$$FAILED\" != 0 ; then \\\n\t\texit 1 ; \\\n\t fi\n\n# Change source formatting\nclang-format: $(ALL_SOURCE_FILES)\n\t$(CLANG_FORMAT) -style=file -i $(ALL_SOURCE_FILES)\n\n# Change source formatting AND report the diff\nclang-format-diff: clang-format\n\tgit diff $(ALL_SOURCE_FILES)\n\nelse\nclang-format clang-format-check clang-format-diff:\n\t@echo \"Install the clang-format program, reconfigure and re-run this request\"\n\t@exit 1\nendif\n\n@CODE_COVERAGE_RULES@\n\ndist-hook:\n\t-rm $(distdir)/src/platform.hpp\n\t@if test -d \"$(srcdir)/.git\"; \\\n\tthen \\\n\t\techo Creating ChangeLog && \\\n\t\t( cd \"$(top_srcdir)\" && \\\n\t\t  echo '# Generated by Makefile. Do not edit.'; echo; \\\n\t\t  $(top_srcdir)/config/missing --run git log --stat ) > ChangeLog.tmp \\\n\t\t  && mv -f ChangeLog.tmp $(top_distdir)/ChangeLog \\\n\t\t  || ( rm -f ChangeLog.tmp ; \\\n\t\t       echo Failed to generate ChangeLog >&2 ); \\\n\telse \\\n\t\techo A git clone is required to generate a ChangeLog >&2; \\\n\tfi\n\nmaintainer-clean-local:\n\t-rm -rf $(top_srcdir)/config\n\n@VALGRIND_CHECK_RULES@\n\nVALGRIND_SUPPRESSIONS_FILES = builds/valgrind/valgrind.supp\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 80.1357421875,
          "content": "0MQ version 4.3.5 stable, released on 2023/10/09\n================================================\n\n* Relicensing from LGPL-3.0+ (with custom exceptions) to MPL-2.0 is now complete.\n  libzmq is now distributed under the Mozilla Public License 2.0. Relicensing\n  grants have been collected from all relevant authors, and some functionality\n  has been clean-room reimplemented where that was not possible. In layman terms,\n  the new license provides the same rights and obligations as before. Source\n  files are now tagged using the SPDX license identifier format.\n  Details of the relicensing process can be seen at:\n  https://github.com/zeromq/libzmq/issues/2376\n  Relicensing grants have been archived at:\n  https://github.com/rlenferink/libzmq-relicense\n  A special thanks to everybody who helped with this long and difficult task,\n  with the process, the reimplementations, the collections and everything else.\n\n* New DRAFT (see NEWS for 4.2.0) socket options:\n  - ZMQ_BUSY_POLL will set the SO_BUSY_POLL socket option on the underlying\n    sockets, if it is supported.\n  - ZMQ_HICCUP_MSG will send a message when the peer has been disconnected.\n  - ZMQ_XSUB_VERBOSE_UNSUBSCRIBE will configure a socket to pass all\n    unsubscription messages, including duplicated ones.\n  - ZMQ_TOPICS_COUNT will return the number of subscribed topics on a\n    PUB/SUB socket.\n  - ZMQ_NORM_MODE, ZMQ_NORM_UNICAST_NACK, ZMQ_NORM_BUFFER_SIZE,\n    ZMQ_NORM_SEGMENT_SIZE, ZMQ_NORM_BLOCK_SIZE, ZMQ_NORM_NUM_PARITY,\n    ZMQ_NORM_NUM_AUTOPARITY and ZMQ_NORM_PUSH to control various aspect of\n    NORM sockets.\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_ppoll APIs was added that differs from\n  zmq_poll in the same way that ppoll differs from poll.\n  See doc/zmq_ppoll.txt for details.\n\n* Various bug fixes and performance improvements.\n\n\n0MQ version 4.3.4 stable, released on 2021/01/17\n================================================\n\n* New DRAFT (see NEWS for 4.2.0) socket option:\n  - ZMQ_PRIORITY will set the SO_PRIORITY socket option on the underlying\n    sockets. Only supported on Linux.\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* Fixed #4113 - compilation errors on kFreeBSD and GNU/Hurd\n\n* Fixed #4086 - excessive amount of socket files left behind in Windows TMP\n                directory\n\n* Fixed #4108 - regression that breaks using IPv6 link-local addresses on Linux\n\n* Fixed #4078 - compilation errors on Android\n\n* Fixed #4074 - compilation error with ulibc and libbsd\n\n* Fixed #4060 - stack overflow on Windows x64\n\n* Fixed #4051 - various compilation errors on Windows ARM 32bit\n\n* Fixed #4043 - various compilation warnings with XCode\n\n* Fixed #4038 - return value of zmq_ctx_get changed unintentionally\n\n\n0MQ version 4.3.3 stable, released on 2020/09/07\n================================================\n\n* Security advisories:\n  * CVE-2020-15166: Denial-of-Service on CURVE/ZAP-protected servers by\n    unauthenticated clients.\n    If a raw TCP socket is opened and connected to an endpoint that is fully\n    configured with CURVE/ZAP, legitimate clients will not be able to exchange\n    any message. Handshakes complete successfully, and messages are delivered to\n    the library, but the server application never receives them.\n    For more information see the security advisory:\n    https://github.com/zeromq/libzmq/security/advisories/GHSA-25wp-cf8g-938m\n  * Stack overflow on server running PUB/XPUB socket (CURVE disabled).\n    The PUB/XPUB subscription store (mtrie) is traversed using recursive\n    function calls. In the remove (unsubscription) case, the recursive calls are\n    NOT tail calls, so even with optimizations the stack grows linearly with the\n    length of a subscription topic. Topics are under the control of remote\n    clients - they can send a subscription to arbitrary length topics. An\n    attacker can thus cause a server to create an mtrie sufficiently large such\n    that, when unsubscribing, traversal will cause a stack overflow.\n    For more information see the security advisory:\n    https://github.com/zeromq/libzmq/security/advisories/GHSA-qq65-x72m-9wr8\n  * Memory leak in PUB server induced by malicious client(s) without CURVE/ZAP.\n    Messages with metadata are never processed by PUB sockets, but the metadata\n    is kept referenced in the PUB object and never freed.\n    For more information see the security advisory:\n    https://github.com/zeromq/libzmq/security/advisories/GHSA-4p5v-h92w-6wxw\n  * Memory leak in client induced by malicious server(s) without CURVE/ZAP.\n    When a pipe processes a delimiter and is already not in active state but\n    still has an unfinished message, the message is leaked.\n    For more information see the security advisory:\n    https://github.com/zeromq/libzmq/security/advisories/GHSA-wfr2-29gj-5w87\n  * Heap overflow when receiving malformed ZMTP v1 packets (CURVE disabled).\n    By crafting a packet which is not valid ZMTP v2/v3, and which has two\n    messages larger than 8192 bytes, the decoder can be tricked into changing\n    the recorded size of the 8192 bytes static buffer, which then gets overflown\n    by the next message. The content that gets written in the overflown memory\n    is entirely decided by the sender.\n    For more information see the security advisory:\n    https://github.com/zeromq/libzmq/security/advisories/GHSA-fc3w-qxf5-7hp6\n\n* Note for packagers: an external, self-contained sha1 library is now\n  included in the source tree under external/sha1/ - it is licensed\n  under BSD-3-Clause and thus it is fully compatible with libzmq's\n  license.\n  It is only used if WebSockets support is enabled, and if neither GnuTLS nor\n  NSS are available.\n\n* Note for packagers: an internal reimplementation of strlcpy is now included,\n  for wider platform compatibility.\n  libbsd can be used and is enabled by default if available instead of the\n  internal implementation, for better security maintenance in distros.\n\n* Note for packagers: ZeroMQConfig.cmake is now installed in the arch-dependent\n  subdirectory - eg: /usr/lib/x86_64-linux-gnu/cmake/\n\n* New DRAFT (see NEWS for 4.2.0) socket type:\n  - ZMQ_CHANNEL is a thread-safe alternative to ZMQ_PAIR.\n  See doc/zmq_socket.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) socket option:\n  - ZMQ_ONLY_FIRST_SUBSCRIBE will cause only the first part of a multipart\n    message to be processed as a subscribe/unsubscribe message, and the rest\n    will be forwarded as user data to the application.\n  - ZMQ_RECONNECT_STOP will cause a connecting socket to stop trying to\n    reconnect in specific circumstances. See the manpage for details.\n  - ZMQ_HELLO_MSG to set a message that will be automatically sent to a new\n    connection.\n  - ZMQ_DISCONNECT_MSG to set a message that will be automatically received when\n    a peer disconnects.\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_ctx_get_ext/zmq_ctx_set_ext APIs were added\n  to allow enhancing the context options with variable data inputs.\n  See doc/zmq_ctx_get_ext.txt and doc/zmq_ctx_set_ext.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) transport options WS and WSS added for support\n  of WebSockets (and secure WebSockets via TLS) via the ZWS 2.0 protocol.\n  WSS requires the GnuTLS library for TLS support. ZMQ_WSS_ specific socket\n  options were added to support TLS.\n  WebSockets support is disabled by default if DRAFT APIs are disabled.\n\n* New DRAFT (see NEWS for 4.2.0) socket type, PEER, which is thread safe and a\n  related zmq_connect_peer function which atomically and thread-safely connects\n  and returns a routing-id.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_msg_init_buffer API was added to allow\n  the construction of a message by copying from an existing buffer.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_poller_size API was added to allow querying\n  the number of sockets/fds registered in a zmq_poller.\n\n* ZMTP 3.1 peers will receive subscribe/cancel on PUB/SUB via commands rather\n  than using the first byte of the payload.\n\n* zmq_z85_decode now checks that the input string's length is at least 5 characters\n  and always a multiple of 5 as per API specification.\n\n* Fixed #3566 - malformed CURVE message can cause memory leak\n\n* Fixed #3567 - missing ZeroMQ_INCLUDE_DIR in ZeroMQConfig.cmake when only\n                static lib is built\n\n* Fixed #3576 - CURVE plaintext secrets now stored in libsodium's secure memory\n\n* Fixed #3588 - install debug libraries for debug msvc builds with CMake\n\n* Fixed #3591 - incorrect ZMQ_MAX_SOCKETS default value in doc\n\n* Fixed #3594 - fixed stream_engine use after free due to concurrent heartbeats\n\n* Fixed #3586 - error when compiling with MinGW due to usage of MS-specific\n                __except keyword\n\n* Fixed #3603 - fixed CMake build on SL6.9\n\n* Fixed #3607 - added scripts to ease performance graph generation\n\n* Fixed #3608 - fix for IPv4 mapping not supported in DragonFlyBSD\n\n* Fixed #3636 - added ENABLE_PRECOMPILED CMake option to fix build with Ninja\n\n* Fixed #2862 - UDP engine aborts on networking-related errors from socket\n                syscalls\n\n* Fixed #3656 - segfault on sending data from XSUB to XPUB\n\n* Fixed #3646 - static-only test run fails\n\n* Fixed #3668 - fixed CMAKE_CXX_FLAGS_* regexes on MSVC\n\n* Fixed #110  - do not include winsock2.h in public zmq.h header\n\n* Fixed #3683 - allow \"configure --disable-maintainer-mode\"\n\n* Fixed #3686 - fix documentation about sockets blocking on send operations\n\n* Fixed #3323 - fix behavior of ZMQ_CONFLATE on PUB sockets\n\n* Fixed #3698 - fix build on IBM i/PASE/os400\n\n* Fixed #3705 - zero-sized messages cause assertion when glibc assertion are on\n\n* Fixed #3713 - remove dependency on math library by avoiding std::ceil\n\n* Fixed #3694 - build targeting Windows XP is broken\n\n* Fixed #3691 - added support for IPC on Windows 10 via AF_UNIX\n\n* Fixed #3725 - disable by default test that requires sudo on CMake\n\n* Fixed #3727 - fix zmq_poller documentation example\n\n* Fixed #3729 - do not check for FD_OOB when using WSAEventSelect on Windows\n\n* Fixed #3738 - allow renaming the library in CMake\n\n* Fixed #1808 - use AF_UNIX instead of TCP for the internal socket on Windows 10\n\n* Fixed #3758 - fix pthread_set_affinity detection in CMake\n\n* Fixed #3769 - fix undefined behaviour in array.hpp\n\n* Fixed #3772 - fix compiling under msys2-mingw\n\n* Fixed #3775 - add -latomic to the private libs flag in pkg-config if needed\n\n* Fixed #3778 - fix documentation of zmq_poller's thread safety\n\n* Fixed #3792 - do not allow creation of new sockets after zmq_ctx_shutdown\n\n* Fixed #3805 - improve performance of CURVE by reducing copies\n\n* Fixed #3814 - send subscribe/cancel as commands to ZMTP 3.1 peers\n\n* Fixed #3847 - fix building without PGM and NORM\n\n* Fixed #3849 - install .cmake file in arch-dependent subdirectory\n\n* Fixed #4005 - allow building on Windows ARM/ARM64\n\n0MQ version 4.3.2 stable, released on 2019/07/08\n================================================\n\n* CVE-2019-13132: a remote, unauthenticated client connecting to a\n  libzmq application, running with a socket listening with CURVE\n  encryption/authentication enabled, may cause a stack overflow and\n  overwrite the stack with arbitrary data, due to a buffer overflow in\n  the library. Users running public servers with the above configuration\n  are highly encouraged to upgrade as soon as possible, as there are no\n  known mitigations. All versions from 4.0.0 and upwards are affected.\n  Thank you Fang-Pen Lin for finding the issue and reporting it!\n\n* New DRAFT (see NEWS for 4.2.0) zmq_socket_monitor_versioned API that supports\n  a versioned monitoring events protocol as a parameter. Passing 1 results in\n  the same behaviour as zmq_socket_monitor.\n  Version 2 of the events protocol allows new events, new metadata, different\n  socket types for the monitors and more. It is described in details in\n  doc/zmq_socket_monitor_versioned.txt\n\n* New DRAFT (see NEWS for 4.2.0) zmq_socket_monitor_pipes_stats that triggers\n  a new ZMQ_EVENT_PIPES_STATS to be delivered via zmq_socket_monitor_versioned\n  v2 API, which contains the current status of all the queues owned by the\n  monitored socket. See doc/zmq_socket_monitor_versioned.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_poller_fd that returns the FD of a thread\n  safe socket. See doc/zmq_poller.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) socket options:\n  - ZMQ_XPUB_MANUAL_LAST_VALUE is similar to ZMQ_XPUB_MANUAL but allows to avoid\n    duplicates when using last value caching.\n  - ZMQ_SOCKS_USERNAME and ZMQ_SOCKS_PASSWORD that implement SOCKS5 proxy\n    authentication.\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* Implemented background thread names for Windows, when the Visual Studio\n  debugger is being used.\n\n* Fixed #3358 - test_security_zap failing due to SIGBUS on SPARC64, hard-coded\n                IPC socket binds in tests cause race conditions\n\n* Fixed #3361 - enabling GSSAPI support (when using autools) does not work due\n                to regression introduced in 4.2.3\n\n* Fixed #3362 - remove documentation for ZMQ_THREAD_PRIORITY context option\n                getter, it's not implemented\n\n* Fixed #3363 - tests fail to build due to stricter compiler printf validation\n                in new versions of GCC\n\n* Fixed #3367 - try to infer cacheline size at build time, first with\n                getconf LEVEL1_DCACHE_LINESIZE, and then by reading\n                /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size\n                (autoconf only), and only then falling back to the previous\n                default of 64 bytes. Avoids false sharing on POWER and s390x.\n                Import ax_func_posix_memalign.m4 as a more reliable check for\n                posix_memalign presence on some unix platforms.\n                Prefer c++11 atomic primitives to compiler intrinsics, when\n                both are available, as the former is more reliable.\n                Set test_pair_ipc and test_rebind_ipc to XFAIL on GNU/Hurd due\n                to non-functioning getsockname on AF_UNIX.\n\n* Fixed #3370 - Make queue length and HWM state observable\n\n* Fixed #3373 - performance regression in zmq_poll on CentOS 6/7\n\n* Fixed #3375 - assign names to all pthreads created by the library to ease\n                debugging\n\n* Fixed #3376 - assigned random TIPC port is not returned by ZMQ_LAST_ENDPOINT\n\n* Fixed #3385 - TCP port in ZMQ_LAST_ENDPOINT depends on global locale\n\n* Fixed #3404 - use std::condition_variable_any when possible\n\n* Fixed #3436 - reconnect interval exponential backoff and may lead to integer\n                overflows\n\n* Fixed #3440 - improve zmq_proxy performance by batching of up to 1000\n                consecutive messages (if any) and add perf/proxy_thr tool\n\n* Fixed #3451 - fix support of /dev/poll on Solaris\n\n* Fixed #3452 - strnlen may not be available\n\n* Fixed #1462 - test failure in test_filter_ipc due to invalid system groups\n\n* Fixed #3269 - Boost.ASIO integration stopped working with v4.3.0\n\n* Fixed #3479 - ZeroMQ does not build for QNX 6.6 with CMake\n\n* Fixed #3481 - add <ios> include to fix uClibc++ compilation\n\n* Fixed #3491 - build broken on Fedora 30\n\n* Fixed #3494 - ZeroMQConfig.cmake fails if shared libraries are not built\n\n* Fixed #3498 - syntax error on Windows related to socket descriptor type\n\n* Fixed #3500 - PLAIN HELLO message incorrectly uses WELCOME literal, regression\n                introduced in 4.3.0\n\n* Fixed #3517 - configure errors because of syntax errors in the use of test\n                shell command\n\n* Fixed #3521 - document how to achieve high performance with the PGM transport\n\n* Fixed #3526 - failure case behavior unclear in zmq_msg_send documentation\n\n* Fixed #3537 - fix build on z/OS by using pthread_equal instead of comparing\n                variables directly\n\n* Fixed #3546 - CMake links with librt on MinGW which is not available\n\n* Many coding style, duplication, testing and static analysis improvements.\n\n\n0MQ version 4.3.1 stable, released on 2019/01/12\n================================================\n\n* CVE-2019-6250: A vulnerability has been found that would allow attackers to\n  direct a peer to jump to and execute from an address indicated by the\n  attacker.\n  This issue has been present since v4.2.0. Older releases are not affected.\n  NOTE: The attacker needs to know in advance valid addresses in the peer's\n  memory to jump to, so measures like ASLR are effective mitigations.\n  NOTE: this attack can only take place after authentication, so peers behind\n  CURVE/GSSAPI are not vulnerable to unauthenticated attackers.\n  See https://github.com/zeromq/libzmq/issues/3351 for more details.\n  Thanks to Guido Vranken for uncovering the issue and providing the fix!\n\n* Note for packagers: as pkg-config's Requires.private is now used to properly\n  propagate dependencies for static builds, the libzmq*-dev or zeromq-devel or\n  equivalent package should now depend on the libfoo-dev or foo-devel packages\n  of all the libraries that zmq is linked against, or pkg-config --libs libzmq\n  will fail due to missing dependencies on end users machines.\n\n* Fixed #3351 - remote code execution vulnerability.\n\n* Fixed #3343 - race condition in ZMQ_PUSH when quickly disconnecting and\n                reconnecting causes last part of multi-part message to get\n                \"stuck\" and resent by mistake to the new socket.\n\n* Fixed #3336 - set Requires.private in generate pkg-config file.\n\n* Fixed #3334 - set TCP_NODELAY after connect() on Windows for the I/O socket.\n\n* Fixed #3326 - assert on Android when opening a socket and disabling WiFi.\n\n* Fixed #3320 - build failure on OpenBSD with GCC.\n\n0MQ version 4.3.0 stable, released on 2018/11/28\n================================================\n\n* The following DRAFT APIs have been marked as STABLE and will not change\n  anymore:\n  - ZMQ_MSG_T_SIZE context option (see doc/zmq_ctx_get.txt)\n  - ZMQ_THREAD_AFFINITY_CPU_ADD and ZMQ_THREAD_AFFINITY_CPU_REMOVE (Posix only)\n    context options, to add/remove CPUs to the affinity set of the I/O threads.\n    See doc/zmq_ctx_set.txt and doc/zmq_ctx_get.txt for details.\n  - ZMQ_THREAD_NAME_PREFIX (Posix only) context option, to add a specific\n    integer prefix to the background threads names, to easily identify them.\n    See doc/zmq_ctx_set.txt and doc/zmq_ctx_get.txt for details.\n  - ZMQ_GSSAPI_PRINCIPAL_NAMETYPE and ZMQ_GSSAPI_SERVICE_PRINCIPAL_NAMETYPE\n    socket options, for the corresponding GSSAPI features. Additional\n    definitions for principal name types:\n    - ZMQ_GSSAPI_NT_HOSTBASED\n    - ZMQ_GSSAPI_NT_USER_NAME\n    - ZMQ_GSSAPI_NT_KRB5_PRINCIPAL\n    See doc/zmq_gssapi.txt for details.\n  - ZMQ_BINDTODEVICE socket option (Linux only), which will bind the\n    socket(s) to the specified interface. Allows to use Linux VRF, see:\n    https://www.kernel.org/doc/Documentation/networking/vrf.txt\n    NOTE: requires the program to be ran as root OR with CAP_NET_RAW\n  - zmq_timers_* APIs. These functions can be used for cross-platforms timed\n    callbacks. See doc/zmq_timers.txt for details.\n  - The following socket monitor events:\n    - ZMQ_EVENT_HANDSHAKE_FAILED_NO_DETAIL: unknown errors during handshake.\n    - ZMQ_EVENT_HANDSHAKE_SUCCEEDED: Handshake completed with authentication.\n    - ZMQ_EVENT_HANDSHAKE_FAILED_PROTOCOL: Protocol errors with peers or ZAP.\n    - ZMQ_EVENT_HANDSHAKE_FAILED_AUTH: Failed authentication requests.\n    See doc/zmq_socket_monitor.txt for more details and error codes.\n  - zmq_stopwatch_intermediate which returns the time elapsed without stopping\n    the stopwatch.\n  - zmq_proxy_steerable command 'STATISTICS' to retrieve stats about the amount\n    of messages and bytes sent and received by the proxy.\n    See doc/zmq_proxy_steerable.txt for more information.\n\n* The build-time configuration option to select the poller has been split, and\n  new API_POLLER (CMake) and --with-api-poller (autoconf) options will now\n  determine what system call is used to implement the zmq_poll/zmq_poller APIs.\n  The previous POLLER and --with-poller options now only affects the\n  internal I/O thread. In case API_POLLER is not specified, the behaviour keeps\n  backward compatibility intact and will be the same as with previous releases.\n\n* The non-default \"poll\" poller for the internal I/O thread (note: NOT for the\n  zmq_poll/zmq_poller user APIs!) has been disabled on Windows as WSAPoll does\n  not report connection failures. For more information see:\n  - https://daniel.haxx.se/blog/2012/10/10/wsapoll-is-broken/\n  - https://curl.haxx.se/mail/lib-2012-10/0038.html\n  - https://bugs.python.org/issue16507\n\n* New epoll implementation for Windows, using the following implementation:\n  https://github.com/piscisaureus/wepoll/tree/v1.5.4\n  To use this, select \"epoll\" as the poller option in the build system.\n  Note for distributors: the wepoll source code is embedded and distributed.\n  It is licensed under the BSD-2-Clause and thus it is compatible with LGPL-3.0.\n  Note that, if selected at build time, the license text must be distributed\n  with the binary in accordance to the license terms. A copy can be found at:\n  external/wepoll/license.txt\n\n* The pre-made Visual Studio solutions file are deprecated, and users are\n  encouraged to use the CMake solution generation feature instead.\n\n* New DRAFT (see NEWS for 4.2.0) socket options:\n  - ZMQ_ROUTER_NOTIFY to deliver a notification when a peer connects and/or\n    disconnects in the form of a routing id plus a zero-length frame.\n  - ZMQ_MULTICAST_LOOP to control whether the data sent should be looped back\n    on local listening sockets for UDP multicast sockets (ZMQ_RADIO).\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New perf tool, perf/benchmark_radix_tree, to measure the performance of the\n  different internal implementations of the trie algorithm used to track\n  subscriptions. Requires a compiler that supports C++11.\n\n* New autoconf flag \"--enable-force-CXX98-compat\" which will force -std=gnu++98\n  and, if the compiler supports them (clang++ at the moment), it will also add\n  -Wc++98-compat -Wc++98-compat-pedantic so that compatibility with C++98 can\n  be tested.\n\n* Many, many coding style, duplication and static analysis improvements.\n\n* Many, many improvements to the CMake build system, especially on Windows.\n\n* Many, many improvements to unit tests.\n\n* Fixed #3036 - Compilation error when -pedantic is used.\n\n* Fixed #3028 - Failure when zmq_poller_destroy is called after zmq_ctx_term.\n\n* Fixed #2989 - CMake: Linker PDB install rule does not work when Visual Studio\n                generators are used.\n\n* Fixed #3045 - configure.ac: search for dladdr only when using libunwind.\n\n* Fixed #3060 - REQ sockets terminate TCP connection after first heartbeat if\n                ZMQ_HEARTBEAT_IVL is set.\n\n* Fixed #2212 - UDP: need ability to specify bind address separately from\n                multicast address for multi-homed hosts.\n\n* Fixed #2891 - UDP: address name resolution is limited to dotted IPv4 rather\n                than being capable of IPv4, IPv6, and hostname lookup.\n\n* Fixed #3085 - autoconf/CMake getrandom test does not check if it's working but\n                only for its presence.\n\n* Fixed #3090 - compilation broken with Solaris Studio.\n\n* Fixed #3094 - UDP: pass interface via IP[V6]_MULTICAST_IF if provided.\n\n* Fixed #3061 - implement ZMTP 3.1 ping/pong context sending/receiving.\n\n* Fixed #2188 - Added documentation for new zmq_poller API.\n\n* Fixed #3088 - zmq_poller_add/zmq_poller_modify should reject invalid events\n                arguments.\n\n* Fixed #3042 - Fixed compilation on ARM with ZMQ_ATOMIC_PTR_MUTEX.\n\n* Fixed #3107 - test_immediate_3/test_reconnect_inproc do not terminate with\n                POLL as the I/O thread poller under Windows.\n\n* Fixed #3046 - Aborts when iOS abuses EBADF to report a socket has been\n                reclaimed.\n\n* Fixed #3136 - Cannot set ZMQ_HEARTBEAT_TTL to more than 655.3 seconds.\n\n* Fixed #3083 - link with -latomic when needed.\n\n* Fixed #3162 - build failure with MUSL libc.\n\n* Fixed #3158 - -1 value of ZMQ_RECONNECT_IVL was not correctly handled on some\n                platforms.\n\n* Fixed #3170 - improved documentation for ZMQ_PAIR.\n\n* Fixed #3168 - correctly use symbols map on Debian/kFreeBSD and Debian/HURD\n                to avoid exporting standard library symbols.\n\n* Fixed #3168 - correctly process ZMTP 3.1 cancel/subscribe commands.\n\n* Fixed #3171 - improve documentation for ZMQ_CONFLATE.\n\n* Fixed #2876 - stack overflow on Windows 64.\n\n* Fixed #3191 - race condition with received message causes\n                ZMQ_CONNECT_ROUTING_ID to be assigned to wrong socket.\n\n* Fixed #3005 - added documentation for new zmq_timers_* API.\n\n* Fixed #3222 - use /Z7 debug on Release builds too on Windows (CMake).\n\n* Fixed #3226 - possible PGM receiver crash.\n\n* Fixed #3236 - UDP dish socket can't bind to a multicast port already in use.\n\n* Fixed #3242 - improve HWM documentation.\n\n* Fixed #2488 - improve zmq_msg_send doc return value documentation.\n\n* Fixed #3268 - HWM in ZMQ_DGRAM socket does not respect multipart message.\n\n* Fixed #3284 - added support for ZMQ_MULTICAST_HOPS with UDP sockets.\n\n* Fixed #3245 - use-after-free reported in zmq::pipe_t::terminate.\n\n* Fixed #1400 - use patricia trie for subscription to improve performances and\n                memory usage. Note: only active in DRAFT builds for now.\n\n* Fixed #3263 - fix abort on Windows when a large TCP read is requested and\n                fails.\n\n* Fixed #3312 - fix build on Android Things 1.06 with Termux.\n\n\n0MQ version 4.2.5 stable, released on 2018/03/23\n================================================\n\n* Fixed #3018 - fix backward-incompatible change in the NULL auth\n                mechanism that slipped in 4.2.3 and made connections\n                with a ZAP domain set on a socket but without a working\n                ZAP handler fail. See ZMQ_ZAP_ENFORCE_DOMAIN and RFC27.\n\n* Fixed #3016 - clarify in zmq_close manpage that the operation will\n                complete asynchronously.\n\n* Fixed #3012 - fix CMake build problem when using LIBZMQ_WERROR and a\n                compiler other than GCC.\n\n\n0MQ version 4.2.4 stable, released on 2018/03/21\n================================================\n\n* New DRAFT (see NEWS for 4.2.0) socket options:\n  - ZMQ_LOOPBACK_FASTPATH to enable faster TCP loopback on Windows\n  - ZMQ_METADATA to set application-specific metadata on a socket\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) context options:\n  - ZMQ_ZERO_COPY_RECV to disable zero-copy receive to save memory\n    at the expense of slower performance\n  See doc/zmq_ctx_set.txt and doc/zmq_ctx_get.txt for details.\n\n* New DRAFT API zmq_stopwatch_intermediate which returns the time\n  elapsed without stopping the stopwatch.\n\n* TIPC: support addressing TIPC Port Identity addresses.\n\n* Added CMake option to disable tests: BUILD_TESTS\n\n* Added CMake and autotools make targets to support clang-formatter:\n  make clang-format, clang-format-check and clang-format-diff to\n  help developers make sure their code conforms to the style guidelines\n\n* For distributors: a new test framework has been added, which\n  includes a copy of the Unity source code. This source code library is\n  distributed under the MIT license and thus is compatible with\n  libzmq's LGPL3.\n\n* Fixed #2867 - add ZeroMQConfig.cmake.in to distributable tarball\n\n* Fixed #2868 - fix OpenBSD build\n\n* Fixed #2870 - fix VC++ 11.0 (VS2012) build\n\n* Fixed #2879 - prevent duplicate connections on PUB sockets\n\n* Fixed #2872 - fix CMake tests on Windows\n\n* Fixed #2895 - fix assert on Windows with POLL\n\n* Fixed #2920 - fix Windows build with Intel compiler\n\n* Fixed #2930 - use std::atomic when available with VC++ and VS2015\n\n* Fixed #2910 - fix race condition with ZMQ_LINGER socket option\n\n* Fixed #2927 - add support for ZMQ_XPUB_NODROP on ZMQ_RADIO\n\n* Fixed #2820 - further clarify ZMQ_XPUB_VERBOSE(R) documentation.\n\n* Fixed #2911 - ZMQ_DISH over UDP triggers errno_assert() after hitting\n                watermark\n\n* Fixed #2942 - ZMQ_PUB crash when due to high volume of subscribe and\n                unsubscribe messages, an unmatched unsubscribe message is\n                received in certain conditions\n\n* Fixed #2946 - fix Windows CMake build when BUILD_SHARED is off\n\n* Fixed #2960 - fix build with GCC 8\n\n* Fixed #2967 - fix race condition on thread safe sockets due to pthread\n                condvar timeouts on OSX\n\n* Fixed #2977 - fix TIPC build-time availability check to be more relaxed\n\n* Fixed #2966 - add support for WindRiver VxWorks 6.x\n\n* Fixed #2963 - fix some PVS Studio static analysis warnings\n\n* Fixed #2983 - fix MinGW cross-compilation\n\n* Fixed #2991 - fix mutex assert at shutdown when the zmq context is part\n                of a class declared as a global static\n\n\n0MQ version 4.2.3 stable, released on 2017/12/13\n================================================\n\n* API change: previously ZMQ_POLLOUT on a ZMQ_ROUTER socket returned always\n  true due to how the type works. When ZMQ_ROUTER_MANDATORY is set, sending\n  fails when the peer is not available, but ZMQ_POLLOUT always returns true\n  anyway, which does not make sense. Now when ZMQ_ROUTER_MANDATORY is set,\n  ZMQ_POLLOUT on a ZMQ_ROUTER will return true only if at least one peer is\n  available.\n  Given ZMQ_POLLOUT with ZMQ_ROUTER was not usable at all previously, we do\n  not consider this a breakage warranting a major or minor version increase.\n\n* ZMQ_IDENTITY has been renamed to ZMQ_ROUTING_ID and ZMQ_CONNECT_RID has been\n  renamed to ZMQ_CONNTECT_ROUTING_ID to disambiguate. ZMQ_IDENTITY and\n  ZMQ_CONNECT_RID are still available to keep backward compatibility, and will\n  be removed in a future release after further advance notice.\n\n* DRAFT API change: zmq_poller_wait, zmq_poller_wait_all and zmq_poller_poll\n  have been changed to be inline with other existing APIs that have a timeout\n  to return EAGAIN instead of ETIMEDOUT as the errno value.\n  See #2713 for details.\n\n* Existing non-DRAFT socket types ZMQ_REP/REQ, ZMQ_ROUTER/DEALER and\n  ZMQPUB/SUB, that were previously declared deprecated, have been reinstated\n  as stable and supported. See #2699 for details.\n\n* Tweetnacl: add support for, and use preferably if available, getrandom() as\n  a simpler and less error-prone alternative to /dev/urandom on OSes where it\n  is available (eg: Linux 3.18 with glibc 2.25).\n\n* Curve: all remaining traces of debug output to console are now removed, and\n  new DRAFT events are available to properly debug CURVE, PLAIN, GSSAPI and\n  ZAP events and failures. See below for details on the new events.\n\n* New DRAFT (see NEWS for 4.2.0) socket options:\n  - ZMQ_GSSAPI_PRINCIPAL_NAMETYPE and ZMQ_GSSAPI_SERVICE_PRINCIPAL_NAMETYPE, for\n    the corresponding GSSAPI features. Additional definitions for principal\n    name types:\n    - ZMQ_GSSAPI_NT_HOSTBASED\n    - ZMQ_GSSAPI_NT_USER_NAME\n    - ZMQ_GSSAPI_NT_KRB5_PRINCIPAL\n    See doc/zmq_gssapi.txt for details.\n  - ZMQ_BINDTODEVICE (Linux only), which will bind the socket(s) to the\n    specified interface. Allows to use Linux VRF, see:\n    https://www.kernel.org/doc/Documentation/networking/vrf.txt\n    NOTE: requires the program to be ran as root OR with CAP_NET_RAW\n  - ZMQ_ZAP_ENFORCE_DOMAIN, enables strict RFC 27 compatibility mode and makes\n    the ZAP Domain mandatory when using security. See:\n    https://rfc.zeromq.org/spec:27/ZAP\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) context options:\n  - ZMQ_THREAD_AFFINITY_CPU_ADD and ZMQ_THREAD_AFFINITY_CPU_REMOVE (Posix only),\n    to add and remove CPUs to the affinity set of the I/O threads. Useful to pin\n    the background threads to specific CPUs.\n  - ZMQ_THREAD_NAME_PREFIX (Posix only), to add a specific integer prefix to the\n    background threads names, to easily identify them for debugging purposes.\n  See doc/zmq_ctx_set.txt and doc/zmq_ctx_get.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) message property name definitions to facilitate\n  the use of zmq_msg_gets:\n  - ZMQ_MSG_PROPERTY_ROUTING_ID\n  - ZMQ_MSG_PROPERTY_SOCKET_TYPE\n  - ZMQ_MSG_PROPERTY_USER_ID\n  - ZMQ_MSG_PROPERTY_PEER_ADDRESS\n  See doc/zmq_msg_gets.txt for details.\n\n* New DRAFT (see NEWS for 4.2.0) API zmq_socket_get_peer_state, to be used to\n  query the state of a specific peer (via routing-id) of a ZMQ_ROUTER socket.\n\n* New DRAFT (see NEWS for 4.2.0) Socket Monitor events:\n  - ZMQ_EVENT_HANDSHAKE_FAILED_NO_DETAIL, unknown system error and returns errno\n  - ZMQ_EVENT_HANDSHAKE_SUCCEEDED, handshake was successful\n  - ZMQ_EVENT_HANDSHAKE_FAILED_PROTOCOL, protocol errors between peers or server\n    and ZAP handler. Returns one of ZMQ_PROTOCOL_ERROR_* - see manpage for list\n  - ZMQ_EVENT_HANDSHAKE_FAILED_AUTH, failed authentication, returns ZAP status\n  These events trigger when the ZMTP security mechanism handshake is\n  completed or failed. See doc/zmq_socket_monitor.txt for more information.\n\n* New DRAFT (see NEWS for 4.2.0) zmq_proxy_steerable command 'STATISTICS' to\n  retrieve stats about the amount of messages and bytes sent and received by\n  the proxy. See doc/zmq_proxy_steerable.txt for more information.\n\n* Add new autoconf --disable-libunwind option to stop building with libunwind\n  even if it is available.\n\n* Add new autoconf --disable-Werror option to avoid building with the Werror\n  flag.\n\n* Use pkg-config as the first method for finding and building with external\n  optional dependencies such as libnorm, libpgm and gssapi.\n\n* On Posix platform where the feature is available, name the ZMQ background\n  threads to simplify debugging: \"ZMQbg/<num_thread>\"\n\n* Improve performance of zmq_poller_* (and zmq_poll and zmq_proxy when building\n  with DRAFT APIs enabled).\n\n* The TCP unit tests have been refactored to bind and connect to random ports\n  rather than hard-coded ones, to allow running tests in parallel.\n  There are 6 exceptions where it is necessary to use an hard-coded port to\n  test specific code paths that would not be exercised when binding to a\n  wildcard port. These are listed in tests/testutil.hpp so that distributions\n  can easily patch them if they wish to and so that they can be unique across\n  all the tests, allowing parallel runs.\n  The IPC unit tests have been changed as well to use unique socket file names\n  per test, where before there were some clashes.\n\n* Fixed #2349 - fix building with libsodium when using CMake\n\n* Fixed #2334 - do not assert when tuning socket options fails due to network\n  errors, but simply retry again when connecting or send a socket monitor\n  ZMQ_EVENT_ACCEPT_FAILED event when binding\n\n* Fixed #2341 - fix source files path in VS2015 solution\n\n* Fixed #2344 - Note that on Windows with VS2012 it is mandatory to increase\n  the default stack size to at least 2MB\n\n* Fixed #2348 - ZMQ_ROUTER send with ZMQ_ROUTER_MANDATORY can be stuck in case of\n  network problem\n\n* Fixed #2358 - occasional abort on zmq_connect on Windows\n\n* Fixed #2370 - zmq_curve_keypair should return an error on failure rather\n  than ignoring them and always returning 0\n\n* Fixed #2452 - __STDC_LIMIT_MACROS before precompiled headers causes VC++\n  warning\n\n* Fixed #2457 - fix building with libsodium in Visual Studio solutions\n\n* Fixed #2466 - add const qualifier to internal and public API that does not\n  modify parameters\n\n* Fixed #2471 - do more checks for OOM conditions when dynamic allocations is\n  used\n\n* Fixed #2476 - assertion causes abort after ZAP stop at shutdown\n\n* Fixed #2479 - improve zmq_poller performance on Windows\n\n* Fixed #2481 - potential memory leaks due to ZMTP handshake failures\n\n* Fixed #2531 - ZMQ_GSSAPI_PRINCIPAL sockopt has no effect on client side\n\n* Fixed #2535 - add BUILD_SHARED and BUILD_STATIC options to CMake, both on by\n  default, to toggle shared and static library builds\n\n* Fixed #2537 - use SYSTEM_CLOCK on OSX and CLOCK_MONOTONIC elsewhere for\n  internal timers to avoid races\n\n* Fixed #2540 - new zmq_poller used by zmq_poll without DRAFTs\n\n* Fixed #2552 - Fix WITH_DOC CMake build to avoid checking for asciidoc if the\n  option is disabled\n\n* Fixed #2567 - Memory leak in REP socket handling\n\n* Fixed #2579 - Compilation issue on Windows with CMake + ninja\n\n* Fixed #2588 - SIGBUS under 64-bit SunOS Sparc\n\n* Fixed #2590 - crash when using ZMQ_IMMEDIATE and ZMQ_LINGER to non-zero\n\n* Fixed #2601 - XPUB_MANUAL subscriptions not removed on peer term\n\n* Fixed #2602 - intermittent memory leak for ZMQ_REQ/REP send/recv\n\n* Fixed #2608 - CURVE server (connect) fails when client rebinds\n\n* Fixed #2610 - print backtraces in mutual exclusion to avoid mixing\n  different traces\n\n* Fixed #2621 - add missing CMake files to distributable tarball\n\n* Fixed #2630 - improve compatibility with OpenBSD w.r.t. IPV6_V6ONLY\n\n* Fixed #2638 - note in INSTALL that when using Windows builds on Linux with\n  Wine it is necessary to increase the minimum TCP buffers\n\n* Fixed #2632 - Fix file descriptor leak when using Tweetnacl (internal NACL\n  implementation) instead of Libsodium, and fix race condition when using\n  multiple ZMQ contexts with Tweetnacl\n\n* Fixed #2681 - Possible buffer overflow in CURVE mechanism handshake.\n  NOTE: this was protected by an assert previously, so there is no security\n  risk.\n\n* Fixed #2704 - test_sockopt_hwm fails occasionally on Windows\n\n* Fixed #2701 - pgm build via cmake doesn't link libzmq with libpgm\n\n* Fixed #2711 - ZAP handler communication errors should be handled consistently\n\n* Fixed #2723 - assertion in src\\select.cpp:111 or hang on zmq_ctx_destroy on\n  Windows\n\n* Fixed #2728 - fix support O_CLOEXEC when building with CMake\n\n* Fixed #2761 - improve compatibility with TrueOS (FreeBSD 12)\n\n* Fixed #2764 - do not unlink IPC socket files when closing a socket to avoid\n  race conditions\n\n* Fixed #2770 - support lcov 1.13 and newer\n\n* Fixed #2787 - add libiphlpapi to PKGCFG_LIBS_PRIVATE for static mingw builds\n\n* Fixed #2788 - document that adding -DZMQ_STATIC is required for Windows\n  static builds with Mingw\n\n* Fixed #2789 - description of zmq_atomic_counter_value return value is cloned\n  from zmq_atomic_counter_new\n\n* Fixed #2791 - fix building with DRAFT APIs on CentOS 6\n\n* Fixed #2794 - router_t methods should not allocate memory for lookup in\n  outpipes\n\n* Fixed #2809 - optimize select() usage on Windows\n\n* Fixed #2816 - add CMake and autoconf check for accept4, as it is not\n  available on old Linux releases, and fallback to accept + FD_CLOEXEC\n\n* Fixed #2824 - ZMQ_REQ socket does not report ZMQ_POLLOUT when ZMQ_REQ_RELAXED\n  is set\n\n* Fixed #2827 - add support for Haiku\n\n* Fixed #2840 - fix building with VS2008\n\n* Fixed #2845 - correct the ZMQ_LINGER documentation to accurately reflect that\n  the default value is -1 (infinite). It never was 30 second in any released\n  version, it was only changed briefly and then changed back, but the manpage\n  was not reverted.\n\n* Fixed #2861 - CMake/MSVC: export ZMQ_STATIC when needed.\n\n0MQ version 4.2.2 stable, released on 2017/02/18\n=============================================\n\n* Improve compatibility with GNU Hurd\n\n* Fixed #2286 - improve CMake on Windows documentation\n\n* Fixed #1235 - improved compatibility with mingw64\n\n* Improve zmq_proxy documentation to state it can return ETERM as well\n\n* Fixed #1442 - SO_NOSIGPIPE and connection closing by peer race condition\n\n* Improve CMake functionality on Windows: ZeroMQConfig.cmake generation CPack\n  option, correct static library filename, ship FindSodium.cmake in tarball\n\n* Fixed #2228 - setting HWM after connect on inproc transport leads to infinite\n  HWM\n\n* Add support for Visual Studio 2017\n\n* New DRAFT (see NEWS for 4.2.0) zmq_has option \"draft\" option that returns\n  true if the library was built with DRAFT enabled. Useful for FFI bindings.\n  See doc/zmq_has.txt for more information\n\n* Fixed #2321 - zmq_z85_decode does not validate its input. The function has\n  been fixed to correctly follow RFC32 and return NULL if the input is invalid\n\n* Fixed #2323 - clock_t related crash on Apple iOS 9.3.2 and 9.3.5\n\n* Fixed #1801 - OSX: Cmake installs libzmq in a weird PATH\n\n* Fixed potential divide by zero in zmq::lb_t::sendpipe\n\n* Improve compatibility with OpenIndiana by skipping epoll and using poll/select\n\n* Fix IPv4-in-IPv6 mapped addresses parsing error\n\n\n0MQ version 4.2.1 stable, released on 2016/12/31\n=============================================\n\n* New DRAFT (see NEWS for 4.2.0) Socket Monitor events:\n  - ZMQ_EVENT_HANDSHAKE_SUCCEED\n  - ZMQ_EVENT_HANDSHAKE_FAILED\n  These events trigger when the ZMTP security mechanism handshake is\n  completed. See doc/zmq_socket_monitor.txt for more information.\n\n* New DRAFT (see NEWS for 4.2.0) Context options:\n  - ZMQ_MSG_T_SIZE\n  See doc/zmq_ctx_get.txt for more information.\n\n* Fixed #2268 - improved compatibility with mingw32\n\n* Fixed #2254 - ZMQ_PUB compatibility with libzmq 2.x broken\n\n* Fixed #2245 - added support for VS2017, Windows SDK 10.0.14393.0, toolset v141\n\n* Fixed #2242 - file descriptors leaks on fork+exec\n\n* Fixed #2239 - retired poller item crash from reaper thread\n\n* Fixed #2234 - improved compatibility with AIX 7.1\n\n* Fixed #2225 - cannot pick select for poller\n\n* Fixed #2217 - CMake build uses library version as the ABI version\n\n* Fixed #2208 - added support for ZMQ_TOS on IPv6\n\n* Fixed #2200 - no documentation for ZMQ_SOCKS_PROXY\n\n* Fixed #2199 - no documentation for zmq_curve_public\n\n* Fixed #2196 - fixed build and runtime errors on kFreeBSD\n\n\n0MQ version 4.2.0 stable, released on 2016/11/04\n=============================================\n\n* For Pieter. Thanks for making all of this possible.\n\n  \"Tell them I was a writer.\n   A maker of software.\n   A humanist. A father.\n   And many things.\n   But above all, a writer.\n   Thank You. :)\"\n   - Pieter Hintjens\n\n* This release introduces new APIs, but it is ABI compatible with\n  libzmq 4.1.2 and up.\n\n* Note for ARM and SPARC users: an alignment problem in zmq_msg_t that could in\n  some cases and on some CPUs cause a SIGBUS error was solved, but it requires\n  a rebuild of your application against the 4.2.0 version of include/zmq.h.\n  To clarify, this change does not affect the internals of the library but only\n  the public definition of zmq_msg_t, so there is no ABI incompatibility.\n\n* Security with Curve is now available by default thanks to Tweetnacl sources:\n  https://tweetnacl.cr.yp.to/index.html\n  Libsodium is still fully supported but has to be enabled with the build flag\n  --with-libsodium. Distribution and package maintainers are encouraged to use\n  libsodium so that the security implementation can be audited and maintained\n  separately.\n\n* New Context options:\n  - ZMQ_MAX_MSGSZ\n  - ZMQ_BLOCKY\n  See doc/zmq_ctx_set.txt and doc/zmq_ctx_get.txt for details.\n\n* New Socket options:\n  - ZMQ_HANDSHAKE_IVL\n  - ZMQ_SOCKS_PROXY\n  - ZMQ_XPUB_NODROP\n  - ZMQ_XPUB_MANUAL\n  - ZMQ_XPUB_WELCOME_MSG\n  - ZMQ_STREAM_NOTIFY\n  - ZMQ_INVERT_MATCHING\n  - ZMQ_HEARTBEAT_IVL\n  - ZMQ_HEARTBEAT_TTL\n  - ZMQ_HEARTBEAT_TIMEOUT\n  - ZMQ_XPUB_VERBOSER\n  - ZMQ_CONNECT_TIMEOUT\n  - ZMQ_TCP_MAXRT\n  - ZMQ_THREAD_SAFE\n  - ZMQ_MULTICAST_MAXTPDU\n  - ZMQ_VMCI_BUFFER_SIZE\n  - ZMQ_VMCI_BUFFER_MIN_SIZE\n  - ZMQ_VMCI_BUFFER_MAX_SIZE\n  - ZMQ_VMCI_CONNECT_TIMEOUT\n  - ZMQ_USE_FD\n  See doc/zmq_setsockopt.txt and doc/zmq_getsockopt.txt for details.\n\n* New CURVE helper function to derive z85 public key from secret key:\n    zmq_curve_public\n\n* New cross-platform atomic counter helper functions:\n    zmq_atomic_counter_new, zmq_atomic_counter_set, zmq_atomic_counter_inc,\n    zmq_atomic_counter_dec, zmq_atomic_counter_value, zmq_atomic_counter_destroy\n  See doc/zmq_atomic_*.txt for details.\n\n* New DRAFT APIs early-release mechanism. New APIs will be introduced early\n  in public releases, and until they are stabilized and guaranteed not to\n  change anymore they will be unavailable unless the new build flag\n  --enable-drafts is used. This will allow developers and early adopters to\n  test new APIs before they are finalized.\n  NOTE: as the name implies, NO GUARANTEE is made on the stability of these APIs.\n  They might change or disappear entirely. Distributions are recommended NOT to\n  build with them.\n\n  New socket types have been introduced in DRAFT state:\n    ZMQ_SERVER, ZMQ_CLIENT, ZMQ_RADIO, ZMQ_DISH, ZMQ_GATHER, ZMQ_SCATTER,\n    ZMQ_DGRAM\n  All these sockets are THREAD SAFE, unlike the existing socket types. They do\n  NOT support multipart messages (ZMQ_SNDMORE/ZMQ_RCVMORE).\n  ZMQ_RADIO, ZMQ_DISH and ZMQ_DGRAM also support UDP as transport,\n  both unicast and multicast. See doc/zmq_udp.txt for more details.\n  New methods to support the new socket types functionality:\n    zmq_join, zmq_leave, zmq_msg_set_routing_id, zmq_msg_routing_id,\n    zmq_msg_set_group, zmq_msg_group\n  See doc/zmq_socket.txt for more details.\n\n  New poller mechanism and APIs have been introduced in DRAFT state:\n    zmq_poller_new, zmq_poller_destroy, zmq_poller_add, zmq_poller_modify,\n    zmq_poller_remove, zmq_poller_wait, zmq_poller_wait_all, zmq_poller_add_fd\n    zmq_poller_modify_fd, zmq_poller_remove_fd\n  and a new supporting struct typedef: zmq_poller_event_t\n  They support existing socket type, new thread-safe socket types and file\n  descriptors (cross-platform).\n  Documentation will be made available in the future before these APIs are declared\n  stable.\n\n  New cross-platform timers helper functions have been introduced in DRAFT state:\n    zmq_timers_new, zmq_timers_destroy, zmq_timers_add, zmq_timers_cancel,\n    zmq_timers_set_interval, zmq_timers_reset, zmq_timers_timeout,\n    zmq_timers_execute\n  and a new supporting callback typedef: zmq_timer_fn\n\n* Many, many bug fixes. The most important fixes are backported and captured in the\n  4.1.x and 4.0.x changelogs.\n\n\n0MQ version 4.2.0 rc1, released on 2016/11/01\n=============================================\n\n* Many changes, see ChangeLog.\n\n\n0MQ version 4.1.6 stable, released on 2016/11/01\n================================================\n\n* Fixed #2051 - getifaddrs can fail with ECONNREFUSED\n\n* Fixed #2091 - testutil.hpp fails to build on Windows XP\n\n* Fixed #2096 - add tests/CMakeLists.in and version.rc.in to dist tar\n\n* Fixed #2107 - zmq_connect with IPv6 \"source:port;dest:port\" broken\n\n* Fixed #2117 - ctx_term assert with inproc zmq_router connect-before-bind\n\n* Fixed #2158 - Socket monitor uses internal Pair from multiple threads\n\n* Fixed #2161 - messages dropped due to HWM race\n\n* Fixed #1325 - alignment issue with zmq_msg_t causes SIGBUS on SPARC and ARM\n\n\n0MQ version 4.1.5 stable, released on 2016/06/17\n================================================\n\n* Fixed #1673 - CMake on Windows put PDB in wrong directory.\n\n* Fixed #1723 - Family is not set when resolving NIC on Android.\n\n* Fixed #1608 - Windows 7 TCP slow start issue.\n\n* Fixed #1806 - uninitialised read in curve getsockopt.\n\n* Fixed #1807 - build broken with GCC 6.\n\n* Fixed #1831 - potential assertion failure with latest libsodium.\n\n* Fixed #1850 - detection issues with tweetnacl/libsodium.\n\n* Fixed #1877 - Avoid terminating connections prematurely\n\n* Fixed #1887 - zmq_bind IPv4 fallback still tries IPv6\n\n* Fixed #1866 - fails to build on SunOS 5.10 / Solaris 10\n\n* Fixed #919 - ZMQ_LINGER (related to #1877)\n\n* Fixed #114 - cannot unbind with same endpoint with IPv6 enabled.\n\n* Fixed #1952 - CMake scripts not part of release tarballs\n\n* Fixed #1542 - Fix a crash on Windows when port 5905 is in use.\n\n* Fixed #2021 - Fix building on sparc32.\n\n\n0MQ version 4.1.4 stable, released on 2015/12/18\n================================================\n\n* Fixed #1315 - socket monitor hangs if bind/setsockopt failed.\n\n* Fixed #1399 - assertion failure in tcp.cpp after network reconnect.\n\n* Fixed #1632 - build failure using latest libsodium.\n\n* Fixed #1644 - assertion failure in msg.cpp:390 on STREAM sockets.\n\n* Fixed #1661 - does not handle IPv6 link local addresses.\n\n\n0MQ version 4.1.3 stable, released on 2015/08/17\n================================================\n\n* Fixed #1532 - getsockopt ZMQ_RCVMORE now resets all bits instead of only 32\n\n* Fixed #1445 - zmq::socket_base_t::connect fails on tcp ipv6 address\n\n\n0MQ version 4.1.2 stable, released on 2015/06/15\n================================================\n\n* Added explicit reference to static link exception in every source file.\n\n* Bumped ABI version to 5:0:0 since 4.1.x changed the ABI.\n\n* Fixed STDINT event interface macros to work with CZMQ 3.0.\n\n* Fixed installation of man pages when BUILD_DOC is not set.\n\n* Fixed #1428 - regression on single-socket proxies.\n\n\n0MQ version 4.1.1 stable, released on 2015/06/02\n================================================\n\n* Fixed #1208 - fix recursion in automake packaging.\n\n* Fixed #1224 - crash when processing empty unsubscribe message.\n\n* Fixed #1213 - properties files were missing from source packages.\n\n* Fixed #1273 - V3 protocol handler vulnerable to downgrade attacks.\n\n* Fixed #1347 - lack way to get peer address.\n\n* Fixed #1362 - SUB socket sometimes fails to resubscribe properly.\n\n* Fixed #1377, #1144 - failed with WSANOTINITIALISED in some cases.\n\n* Fixed #1389 - PUB, PUSH sockets had slow memory leak.\n\n* Fixed #1382 - zmq_proxy did not terminate if there were no readers.\n\n\n0MQ version 4.1.0 rc1, released on 2014/10/14\n=============================================\n\n* All issues that were fixed in 4.0.x\n\n* Improved client reconnection strategy on errors\n\n* GSSAPI security mechanism\n\n* SOCKS5 support (ZMQ_SOCKS_PROXY)\n\n* ZMQ_ROUTER_HANDOVER\n\n* ZMQ_TOS\n\n* ZMQ_CONNECT_RID\n\n* ZMQ_HANDSHAKE_IVL\n\n* ZMQ_IDENTITY_FD\n\n* ZMQ_XPUB_NODROP\n\n* ZMQ_SRCFD and ZMQ_SHARED message options\n\n* Message metadata -- zmq_msg_gets ()\n\n* Probe library configuration -- zmq_has ()\n\n\n0MQ version 4.0.8 stable, released on 2016/06/17\n================================================\n\n* Fixed LIBZMQ-949 - zmq_unbind fails for inproc and wildcard endpoints\n\n* Fixed #1806 - uninitialised read in curve getsockopt.\n\n* Fixed #1807 - build broken with GCC 6.\n\n* Fixed #1877 - Avoid terminating connections prematurely\n\n* Fixed #1887 - zmq_bind IPv4 fallback still tries IPv6\n\n* Fixed #98 - don't require libssp without libsodium on Solaris\n\n* Fixed #919 - ZMQ_LINGER (related to #1877)\n\n* Fixed #139 - \"tempnam\" is deprecated.\n\n\n0MQ version 4.0.7 stable, released on 2015/06/15\n================================================\n\n* Fixed #1428 - regression on single-socket proxies.\n\n\n0MQ version 4.0.6 stable, released on 2015/06/02\n================================================\n\n* Fixed #1273 - V3 protocol handler vulnerable to downgrade attacks.\n\n* Fixed #1362 - SUB socket sometimes fails to resubscribe properly.\n\n* Fixed #1377, #1144 - failed with WSANOTINITIALISED in some cases.\n\n* Fixed #1389 - PUB, PUSH sockets had slow memory leak.\n\n* Fixed #1382 - zmq_proxy did not terminate if there were no readers.\n\n\n0MQ version 4.0.5 stable, released on 2014/10/14\n================================================\n\n* Fixed #1191; CURVE mechanism does not verify short term nonces.\n\n* Fixed #1190; stream_engine is vulnerable to downgrade attacks.\n\n* Fixed #1088; assertion failure for WSAENOTSOCK on Windows.\n\n* Fixed #1015; race condition while connecting inproc sockets.\n\n* Fixed #994; bump so library number to 4.0.0\n\n* Fixed #939, assertion failed: !more (fq.cpp:99) after many ZAP requests.\n\n* Fixed #872; lost first part of message over inproc://.\n\n* Fixed #797, keep-alive on Windows.\n\n\n0MQ version 4.0.4 stable, released on 2014/03/10\n================================================\n\nBug Fixes\n---------\n\n* Fixed #909; out of tree build issue on Linux.\n\n* Fixed #888; hangs on terminate when inproc connected but never bound.\n\n* Fixed #868; assertion failure at ip.cpp:137 when using port scanner.\n\n* Fixed #818; fix timestamp counter on s390/s390x.\n\n* Fixed #817; only export zmq_* symbols.\n\n* Fixed #797; fixed setting TCP keepalive on Windows.\n\n* Fixed #775; compile error on Windows.\n\n* Fixed #763; when talking to a ZMTP v1 peer (libzmq 2.2), a socket would\n  send an extra identity frame at the start of the connection.\n\n* Fixed LIBZMQ-576 - Crash closing a socket after zmq_msg_send returns\n  EAGAIN (reverts LIBZMQ-497)\n\n* Fixed LIBZMQ-584; subscription filters getting lost on reconnection.\n\n\n0MQ version 4.0.3 stable, released on 2013/11/24\n================================================\n\nBug Fixes\n---------\n\n* Fixed test_many_sockets case, which failed when process socket limit\n  was 1024.\n\n\n0MQ version 4.0.2 stable, released on 2013/11/24\n================================================\n\nBug Fixes\n---------\n\n* Fixed LIBZMQ-583 - improved low-res timer for Windows\n* Fixed LIBZMQ-578 - z85_decode was extremely slow\n* Fixed LIBZMQ-577 - fault in man pages.\n* Fixed LIBZMQ-574 - assertion failure when ran out of system file handles\n* Fixed LIBZMQ-571 - test_stream failing in some cases\n* Fixed LIBZMQ-569 - Socket server crashes with random client data and when\n  talking to 2.2 versions\n* Fixed LIBZMQ-39 - Bad file descriptor during shutdown\n* Pulled expected failing test_linger.cpp from release\n* Reduced pause time in tests to allow \"make check\" to run faster\n\n\n0MQ version 4.0.1 stable, released on 2013/10/08\n================================================\n\nChanges\n-------\n\n* Updated CURVE mechanism to track revised RFC 27 (INITIATE vouch).\n\n  The INITIATE command vouch box is Box[C',S](C->S') instead of\n  Box[C'](C->S), to reduce the risk of client impersonation, as per\n  https://codesinchaos.wordpress.com/2012/09/09/curvecp-1/.\n\n* Fixed LIBZMQ-567, adding abstract namespaces for IPC sockets on Linux.\n\n  Converts an initial strudel or \"at sign\" (@) in the Unix socket path to\n  a NULL character ('\\0') indicating that the socket uses the abstract\n  namespace instead of the filesystem namespace.  For instance, binding a\n  socket to 'ipc://@/tmp/tester' will not create a file associated with\n  the socket whereas binding to 'ipc:///tmp/tester' will create the file\n  /tmp/tester. See issue 567 for more information.\n\n* Added zmq_z85_encode and zmq_z85_decode to core libzmq API.\n\n* Added zmq_curve_keypair to core libzmq API.\n\n* Bumped library ABI version to 4:0:1.\n\nBug fixes\n---------\n\n* Fixed some build/test errors on OS/X + Clang++.\n\n* Fixed LIBZMQ-565, typo in code.\n\n* Fixed LIBZMQ-566, dealer-to-router connections sometimes failing.\n\n* Fixed builds for AIX, MSVC 2008, OS/X with clang++, Solaris.\n\n* Improved CURVE handshake error handling.\n\n\n0MQ version 4.0.0 (RC1), released on 2013/09/20\n===============================================\n\nMajor changes\n-------------\n\n* New wire level protocol, ZMTP/3.0, see http://rfc.zeromq.org/spec:23.\n  Does not yet implement the SUBSCRIBE, CANCEL, PING, and PONG commands.\n  \n* New security framework, from plain user+password to strong encryption, \n  see section below. See http://hintjens.com/blog:49 for a tutorial.\n  \n* New ZMQ_STREAM socket type for working as a TCP client or server. See: \n  tests/test_stream.cpp.\n  \nImprovements\n------------\n\n* You can now connect to an inproc:// endpoint that does not already\n  exist. This means inproc:// no longer needs careful set-up, but it may\n  break code that relied on the old behaviour. See: \n  tests/test_inproc_connect.cpp.\n \n* Libzmq now checks socket types at connection time, so that trying to \n  connect a 'wrong' socket type will fail.\n  \n* New zmq_ctx_shutdown API method will shutdown a context and send ETERM\n  to blocking calls, without blocking. Use zmq_ctx_term to finalise the\n  process.\n  \n* The regression test suite has been significantly extended and improved.\n  \n* Contexts can now be terminated in forked child processes. See: \n  tests/test_fork.cpp.\n  \n* zmq_disconnect now respects the linger setting on sockets.\n\n* New zmq_send_const API method to send constant data (without copying).\n  See: tests/test_inproc_connect.cpp.\n  \n* Added CMake support for static libraries.\n\n* Added test cases for socket semantics as defined in RFCs 28, 29, 30, 31.\n  See: tests/test_spec_*.cpp.\n\n* New socket option, ZMQ_PROBE_ROUTER triggers an empty message on connect.\n  See: tests/test_probe_router.cpp.\n  \n* New socket option, ZMQ_REQ_CORRELATE allows for correlation of replies \n  from a REP socket. See: tests/test_req_correlate.cpp.\n  \n* New socket option, ZMQ_REQ_RELAXED, lets you disable the state machine \n  on a REQ socket, so you can send multiple requests without waiting for \n  replies, and without getting an EFSM error. See: \n  tests/test_req_relaxed.cpp.\n  \n* New socket option, ZMQ_CONFLATE restricts the outgoing and incoming \n  socket buffers to a single message. See: tests/test_conflate.cpp.\n\nDeprecated Options\n------------------\n\n* ZMQ_IPV4ONLY deprecated and renamed to ZMQ_IPV6 so that options are\n  consistently \"off\" by default. \n\n* ZMQ_DELAY_ATTACH_ON_CONNECT deprecated, and renamed to ZMQ_IMMEDIATE.\n  See: tests/test_immediate.cpp.\n\nSecurity Framework\n------------------\n\nBased on new ZMTP wire level protocol that negotiates a security \n\"mechanism\" between client and server before exchanging any other data.\n\nSecurity mechanisms are extensible. ZMTP defines three by default:\n\n* NULL - classic ZeroMQ, with no authentication. See \n  http://rfc.zeromq.org/spec:23.\n  \n* PLAIN - plain-text username + password authentication. See\n  http://rfc.zeromq.org/spec:24.\n\n* CURVE - secure authentication and encryption based on elliptic curve \n  cryptography, using the Curve25519 algorithm from Daniel Bernstein and \n  based on CurveCP's security handshake. See http://rfc.zeromq.org/spec:25, \n  http://rfc.zeromq.org/spec:26, and http://curvecp.org.\n  \nAuthentication is done by pluggable \"authenticators\" that connect to libzmq\nover an inproc endpoint, see http://rfc.zeromq.org/spec:27.\n\nSocket options to configure PLAIN security on client or server:\n\n* ZMQ_PLAIN_SERVER, ZMQ_PLAIN_USERNAME, ZMQ_PLAIN_PASSWORD. See \n  tests/test_security_plain.\n  \nSocket options to configure CURVE security on client or server:\n\n* ZMQ_CURVE_SERVER, ZMQ_CURVE_PUBLICKEY, ZMQ_CURVE_SECRETKEY, \n  ZMQ_CURVE_SERVERKEY. See tests/test_security_curve.cpp.\n  \nSocket options to configure \"domain\" for ZAP handler:\n \n* ZMQ_ZAP_DOMAIN, see tests/test_security_null.cpp.\n\nSupport for encoding/decoding CURVE binary keys to ASCII:\n\n* zmq_z85_encode, zmq_z85_decode.\n\nOther issues addressed in this release\n--------------------------------------\n\n* LIBZMQ-525 Multipart upstreaming from XSUB to XPUB\n\n\n0MQ version 3.2.4 stable, released on 2013/09/20\n================================================\n\n* LIBZMQ-84  (Windows) Assertion failed: Address already in use at signaler.cpp:80\n* LIBZMQ-456 ZMQ_XPUB_VERBOSE does not propagate in a tree of XPUB/XSUB devices\n* LIBZMQ-532 (Windows) critical section not released on error\n* LIBZMQ-569 Detect OpenPGM 5.2 system library\n* LIBZMQ-563 Subscribers sometimes stopped receiving messages (aka LIBZMQ-541)\n* LIBZMQ-XXX Added support for Travis Continuous Integration\n* LIBZMQ-XXX Several improvements to MSVC support\n\n\n0MQ version 3.2.3 stable, released on 2013/05/02\n================================================\n\nIssues addressed in this release\n--------------------------------\n\n* LIBZMQ-526 Assertion failure \"Invalid argument (tcp_connecter.cpp:285)\"\n* LIBZMQ-446 Setting the DSCP bits by default causes CAP_NET_ADMIN error\n* LIBZMQ-496 Crash on heavy socket opening/closing: Device or resource busy (mutex.hpp:90)\n* LIBZMQ-462 test_connect_delay fails at test_connect_delay.cpp:80\n* LIBZMQ-497 Messages getting dropped\n* LIBZMQ-488 signaler.cpp leaks the win32 Event Handle\n* LIBZMQ-476 zmq_disconnect has no effect for inproc sockets\n* LIBZMQ-475 zmq_disconnect does not sent unsubscribe messages\n\n\n0MQ version 3.2.2 stable, released on 2012/11/23\n================================================\n\nIssues addressed in this release\n--------------------------------\n\n* LIBZMQ-384 No meta data for ZMQ_EVENT_DISCONNECTED monitor event\n* LIBZMQ-414 Error in ARM/Thumb2 assembly (atomic_ptr.hpp)\n* LIBZMQ-417 zmq_assert (!incomplete_in) in session_base.cpp 228\n* LIBZMQ-447 socket_base_t::recv() packet loss and memory leak at high receiving rate\n* LIBZMQ-448 Builds fail on older versions of GCC\n* LIBZMQ-449 Builds fail on AIX\n* LIBZMQ-450 lt-test_monitor: fails with assertion at test_monitor.cpp:81\n* LIBZMQ-451 ZMQ_ROUTER_MANDATORY blocks forever\n* LIBZMQ-452 test_connect_delay.cpp:175:12: error: 'sleep' was not declared in this scope\n* LIBZMQ-458 lt-test_router_mandatory fails with assertion at test_router_mandatory.cpp:53\n* LIBZMQ-459 Assertion failed: encoder (stream_engine.cpp:266\n* LIBZMQ-464 PUB socket with HWM set leaks memory\n* LIBZMQ-465 PUB/SUB results in 80-90% of CPU load\n* LIBZMQ-468 ZMQ_XPUB_VERBOSE & unsubscribe\n* LIBZMQ-472 Segfault in zmq_poll in REQ to ROUTER dialog\n\n\n0MQ version 3.2.1 (RC2), released on 2012/10/15\n===============================================\n\nIssues addressed in this release\n--------------------------------\n\n* Fixed issue xxx - handle insufficient resources on accept() properly.\n* Fixed issue 443 - added ZMQ_XPUB_VERBOSE setsocket option.\n* Fixed issue 433 - ZeroMQ died on receiving EPIPE\n* Fixed issue 423 - test_pair_tcp hangs\n* Fixed issue 416 - socket_base: fix 'va_list' has not been declared error\n* Fixed issue 409 - Pub-sub interoperability between 2.x and 3.x.\n* Fixed issue 404 - zmq_term can not safely be re-entered with pgm transport\n* Fixed issue 399 - zmq_ctx_set_monitor callback is not works properly\n* Fixed issue 393 - libzmq does not build on Android (socklen_t signed comparison)\n* Fixed issue 392 - Interaction with pyzmq on Android\n* Fixed issue 389 - Assertion failure in mtrie.cpp:317\n* Fixed issue 388 - tests/test_monitor.cpp has no newline at EOF (causes compile error)\n* Fixed issue 387 - \"sa_family_t sa_family;\" in pgm_socket.cpp is unused variable\n* Fixed issue 385 - Rework ZMQ_FAIL_UNROUTABLE socket option to actually work\n* Fixed issue 382 - Current libzmq doesn't compile on Android NDK\n* Fixed issue 377 - ZeroMQ will not build on Windows with OpenPGM\n* Fixed issue 375 - error: unused variable 'sa_family'\n* Fixed issue 373 - Unable to build libzmq/zeromq3.x on AIX7\n* Fixed issue 372 - Unable to build libzmq/zeromq3.x on HPUX 11iv3\n* Fixed issue 371 - Unable to build libzmq/zeromq3.x on RHEL5/SLES10\n* Fixed issue 329 - wsa_error_to_errno() calls abort() on WSAEACCES\n* Fixed issue 309 - Assertion failed: options.recv_identity (socket_base.cpp:864)\n* Fixed issue 211 - Assertion failed: msg_->flags & ZMQ_MSG_MORE (rep.cpp:81)\n\nAPI changes\n-----------\n\n* zmq_device () deprecated and replaced by zmq_proxy ().\n* zmq_ctx_set_monitor () replaced by zmq_socket_monitor ().\n* ZMQ_ROUTER_BEHAVIOR/ZMQ_FAIL_UNROUTABLE renamed experimentally to\n  ZMQ_ROUTER_MANDATORY.\n\n\n0MQ version 3.2.0 (RC1), released on 2012/06/05\n===============================================\n\nBug fixes\n---------\n\n* Fixed issue 264 - Potential bug with linger, messages dropped during\n  socket close.\n\n* Fixed issue 293 - libzmq doesn't follow the ZMTP/1.0 spec (did not\n  set reserved bits to 0).\n\n* Fixed issue 303 - Assertion failure in pgm_sender.cpp:102.\n\n* Fixed issue 320 - Assertion failure in connect_session.cpp:96 when\n  connecting epgm to an invalid endpoint.\n\n* Fixed issue 325 - Assertion failure in xrep.cpp:93, when two sockets\n  connect using the same identity.\n\n* Fixed issue 327 - Assertion failure in mtrie.cpp:246, when\n  unsubscribing from channel.\n\n* Fixed issue 346 - Assertion failure in signaler.cpp:155, when using a\n  closed socket.\n\n* Fixed issue 328 - unsubscribe wrongly clears multiple subscriptions.\n\n* Fixed issue 330 - IPC listener does not remove unix domain stream file\n  when terminated.\n\n* Fixed issue 334 - Memory leak in session_base.cpp:59.\n\n* Fixed issue 369 - ROUTER cannot close/reopen while DEALER connected.\n\nOperating systems\n-----------------\n\n* Fixed issue 301 - HPUX 11iv2 - build fails, CLOCK_MONOTONIC\n  undefined.\n\n* Fixed issue 324 - OS/X - build fails, ECANTROUTE undefined.\n\n* Fixed issue 368 - Solaris / Sun C++ - build fails, no insert method\n  in multimap classes.\n\n* Fixed issue 366 - Windows - ports not freed after crash.\n\n* Fixed issue 355 - Windows - build fails, MSVC solution file is out of\n  date.\n\n* Fixed issue 331 - FreeBSD 8 and 9 - getaddrinfo fails with\n  EAI_BADFLAGS on AI_V4MAPPED flag.\n\n* Fixed issue xxx - Added support for WinCE.\n\nPerformance\n-----------\n\n* Fixed issue xxx - Implemented atomic operations for ARMv7a (runs 15-20% faster).\n\nAPI changes\n-----------\n\n* Fixed issue 337 - Cleaned-up context API:\n\n    zmq_ctx_new() - create new context (will deprecate zmq_init)\n    zmq_ctx_destroy() - destroy context (will deprecate zmq_term)\n    zmq_ctx_set() - set context property\n    zmq_ctx_get() - get context property\n\n* Fixed issue xxx - Cleaned-up message API:\n\n    zmq_msg_send() - send a message (will deprecate zmq_sendmsg)\n    zmq_msg_recv() - receive a message (will deprecate zmq_recvmsg)\n    zmq_msg_more() - indicate whether this is final part of message\n    zmq_msg_get() - get message property\n    zmq_msg_set() - set message property\n\n* Fixed issue xxx - Added context monitoring API:\n\n    zmq_ctx_set_monitor() - configure monitor callback.\n\n* Fixed issue xxx - Added unbind/disconnect API:\n\n    zmq_unbind() - unbind socket.\n    zmq_disconnect() - disconnect socket.\n\n* Fixed issue xxx - Added ZMQ_TCP_ACCEPT_FILTER setsockopt() for listening TCP sockets.\n\n* Fixed issue 336 - Removed sys: transport.\n\n* Fixed issue 333 - Added zmq_device function back to API (was removed\n  in 3.0).\n\n* Fixed issue 340 - Add support for MAX_SOCKETS to new context API.\n\n\nOMQ version 3.1.0 (beta), released on 2011/12/18\n================================================\n\nGeneral information\n-------------------\n\nBased on community consensus, the 0MQ 3.1.x release reverts a number of\nfeatures introduced in version 3.0. The major reason for these changes is\nimproving backward compatibility with 0MQ 2.1.x.\n\nDevelopment of the 0MQ 3.0.x series will be discontinued, and users are\nencouraged to upgrade to 3.1.\n\nThe 0MQ 3.1.x releases use ABI version 3.\n\nReverted functionality\n----------------------\n\nThe following functionality present in 0MQ 3.0 has been reverted:\n\n* Wire format changes. The 0MQ 3.1 wire format is identical to that of 0MQ\n  2.1.\n\n* LABELs and COMMANDs have been removed.\n\n* Explicit identies are re-introduced, however they can be used only for\n  explicit routing, not for durable sockets.\n\n* The ZMQ_ROUTER and ZMQ_DEALER socket types are once again aliases for\n  ZMQ_XREQ and ZMQ_XREP.\n\nNew functionality\n-----------------\n\n* The zmq_getmsgopt() function has been introduced.\n\n* Experimental IPv6 support has been introduced. This is disabled by\n  default, see the zmq_setsockopt() documentation for enabling it.\n\nOther changes\n-------------\n\n* The default HWM for all socket types has been set to 1000.\n\n* Many bug fixes.\n\nBuilding\n--------\n\n* The dependency on libuuid has been removed.\n\n* Support for building on Android, and with MSVC 10 has been added.\n\n0MQ version 3.0.0 (alpha), released on 2011/07/12\n=================================================\n\nNew functionality\n-----------------\n\n* A zmq_ctx_set_monitor() API to register a callback / event sink for changes\n  in socket state.\n\n* POSIX-compliant zmq_send and zmq_recv introduced (uses raw buffer\n  instead of message object).\n\n* ZMQ_MULTICAST_HOPS socket option added. Sets the appropriate field in\n  IP headers of PGM packets.\n\n* Subscription forwarding. Instead of filtering on consumer, the\n  subscription is moved as far as possible towards the publisher and\n  filtering is done there.\n\n* ZMQ_XPUB, ZMQ_XSUB introduced. Allow to create subscription-\n  forwarding-friendly intermediate devices.\n\n* Add sockopt ZMQ_RCVTIMEO/ZMQ_SNDTIMEO. Allow to set timeout for\n  blocking send/recv calls.\n\n* A new LABEL flag was added to the wire format. The flag distinguishes\n  message parts used by 0MQ (labels) from user payload message parts.\n\n* There is a new wire format for the REQ/REP pattern. First, the empty\n  bottom-of-the-stack message part is not needed any more, the LABEL\n  flag is used instead. Secondly, peer IDs are 32-bit integers rather\n  than 17-byte UUIDs.\n\n* The REQ socket now drops duplicate replies.\n\n* Outstanding requests & replies associated with a client are dropped\n  when the clients dies. This is a performance optimisation.\n\n* Introduced ZMQ_ROUTER and ZMQ_DEALER sockets. These mimic the\n  functionality of ZMQ_ROUTER and ZMQ_DEALER in 0MQ/2.1.x. Guarantees\n  backward compatibility for exsiting code.\n\n* Removed dependency on OS socketpair buffer size. No more asserts in\n  mailbox.cpp because of low system limit of sockepair buffer size.\n\nAPI improvements\n----------------\n\n* Obsolete constants ZMQ_UPSTREAM and ZMQ_DOWNSTREAM removed. Use\n  ZMQ_PUSH and ZMQ_PULL instead.\n\n* Timeout in zmq_poll is in milliseconds instead of microseconds. This\n  makes zmq_poll() compliant with POSIX poll()\n\n* ZMQ_MCAST_LOOP removed. There's no support for multicast over\n  loopback any more. Use IPC or TCP isntead.\n\n* zmq_send/zmq_recv was renamed zmq_sendmsg/zmq_recvmsg.\n\n* ZMQ_RECOVERY_IVL and ZMQ_RECOVERY_IVL_MSEC reconciled. The new option\n  is named ZMQ_RECOVERY_IVL and the unit is milliseconds.\n\n* Option types changed. Most of the numeric types are now represented\n  as 'int'.\n\n* ZMQ_HWM split into ZMQ_SNDHWM and ZMQ_RCVHWM. This makes it possible\n  to control message flow separately for each direction.\n\n* ZMQ_NOBLOCK renamed ZMQ_DONTWAIT. That makes it POSIX-compliant.\n\nLess is More\n------------\n\n* Pre-built devices and zmq_device() removed. Should be made available\n  as a separate project(s).\n\n* ZMQ_SWAP removed. Writing data to disk should be done on top of 0MQ,\n  on inside it.\n\n* C++ binding removed from the core. Now it's a separate project, same\n  as any other binding.\n\nBug fixes\n---------\n\n* Many.\n\nBuilding\n--------\n\n* Make pkg-config dependency conditional.\n\nDistribution\n------------\n\n* Removed Debian packaging, which is now available at packages.debian.org\n  or via apt-get.\n\n\n0MQ version 2.2.0 (Stable), released on 2012/04/04\n==================================================\n\nChanges\n-------\n\n* Fixed issue 349, add send/recv timeout socket options.\n\nBug fixes\n---------\n\n* Fixed issue 301, fix builds on HP-UX 11iv3 when using either gcc or aCC.\n\n* Fixed issue 305, memory leakage when using dynamic subscriptions.\n\n* Fixed issue 332, libzmq doesn't compile on Android NDK.\n\n* Fixed issue 293, libzmq doesn't follow ZMTP/1.0 spec.\n\n* Fixed issue 342, cannot build against zmq.hpp under C++11.\n\n\n0MQ version 2.1.11 (Stable), released on 2011/12/18\n===================================================\n\nBug fixes\n---------\n\n* Fixed issue 290, zmq_poll was using system time instead of monotonic\n  clock (Mika Fischer).\n\n* Fixed issue 281, crash on heavy socket creation - assertion failure in\n  mutex.hpp:91. (Mika Fischer).\n\n* Fixed issue 273, O_CLOEXEC flag used in ip.cpp:192 is supported only\n  on Linux kernels 2.6.27+\n\n* Fixed issue 261, assertion failure in kqueue.cpp:76.\n\n* Fixed issue 269, faulty diagnostic code in 2.1.10.\n\n* Fixed issue 254, assertion failure at tcp_socket.cpp:229 on ENOTCONN.\n\nChanges\n-------\n\n* Now builds properly on AIX 6.1 (AJ Lewis).\n\n* Builds using libdcekt on HP-UX (AJ Lewis).\n\n* New upstream OpenPGM maintenance release 5.1.118.\n\n* Enabled debugging on assertion failure on Windows (Paul Betts).\n\n\n0MQ version 2.1.10 (Stable), released on 2011/10/03\n===================================================\n\nBug fixes\n---------\n\n* Fixed issue 140, SWAP failed with assertion failure in pipe.cpp:187\n  if the current directory was not writeable. Behavior now is to return\n  -1 at zmq_setsockopt in this situation.\n\n* Fixed issue 207, assertion failure in zmq_connecter.cpp:48, when an\n  invalid zmq_connect() string was used, or the hostname could not be\n  resolved. The zmq_connect() call now returns -1 in both those cases.\n\n* Fixed issue 218, sockets not opened with SOCK_CLOEXEC, causing fork/exec\n  to sit on sockets unnecessarily.\n\n* Fixed issue 250, build errors on Windows (Mikko Koppanen).\n\n* Fixed issue 252, assertion failure in req.cpp:87 and req.cpp:88 (Mikko\n  Koppanen).\n\n\n0MQ version 2.1.9 (Stable), released on 2011/08/29\n==================================================\n\nBug fixes\n---------\n\n* Fixed issue 240, assertion failure in pgm_socket.cpp:437.\n\n* Fixed issue 238, assertion failure in zmq.cpp:655, when zmq_poll is\n  used on an empty set, on Windows.\n\n* Fixed issue 239, assertion failure in zmq.cpp:223, when ZMQ_SWAP was\n  used with explicit identities and multiple SUB sockets.\n\n* Fixed issue 236, zmq_send() and zmq_recv() did not always return\n  error conditions such as EFSM properly. This bug was introduced in\n  version 2.1.8 by the backport of changes for issue 231.\n\nBuilding\n--------\n\n* 0MQ support for Android added (Bill Roberts, Mikko Koppanen).\n\n\n0MQ version 2.1.8 (RC), released on 2011/07/28\n==============================================\n\nBug fixes\n---------\n\n* Fixed issue 223, assertion failure in tcp_connecter.cpp:300 when\n  connecting to a server that is on an unreachable network (errno is\n  equal to ENETUNREACH).\n\n* Fixed issue 228, assertion failure at rep.cpp:88 when HWM was reached.\n\n* Fixed issue 231, assertion failure at mailbox.cpp:183 when too many\n  pending socketpair operations were queued (major backport from 3.0).\n\n* Fixed issue 234, assertion failure at mailbox.cpp:77 when Ctrl-C was\n  used (only affected git master following backport for 231).\n\n* Fixed issue 230, SIGPIPE killing servers when client disconnected, hit\n  OS/X only.\n\nNote: this release was renamed \"release candidate\" due to issue 236,\nfixed in 2.1.9.\n\n\n0MQ version 2.1.7 (Stable), released on 2011/05/12\n==================================================\n\nBug fixes\n---------\n\n* Fixed issue 188, assert when closing socket that had unread multipart\n  data still on it (affected PULL, SUB, ROUTER, and DEALER sockets).\n\n* Fixed issue 191, message atomicity issue with PUB sockets (an old issue).\n\n* Fixed issue 199 (affected ROUTER/XREP sockets, an old issue).\n\n* Fixed issue 206, assertion failure in zmq.cpp:223, affected all sockets\n  (bug was introduced in 2.1.6 as part of message validity checking).\n\n* Fixed issue 211, REP socket asserted if sent malformed envelope (old issue\n  due to abuse of assertions for error checking).\n\n* Fixed issue 212, reconnect failing after resume from sleep on Windows\n  (due to not handling WSAENETDOWN).\n\n* Properly handle WSAENETUNREACH on Windows (e.g. if client connects\n  before server binds).\n\n* Fixed memory leak with threads on Windows.\n\nChanges\n-------\n\n* Checks zmq_msg_t validity at each operation.\n\n* Inproc performance tests now work on Windows.\n\n* PGM wire format specification improved in zmq_pgm(7)\n\n* Added thread latency/throughput performance examples.\n\n* Added \"--with-system-pgm\" configure option to use already installed\n  OpenPGM.\n\n* Runtime checking of socket and context validity, to catch e.g. using a\n  socket after closing it, or passing an invalid pointer to context/socket\n  methods.\n\n* Test cases moved off port 5555, which conflicts with other services.\n\n* Clarified zmq_poll man page that the resolution of the timeout is 1msec.\n\n\n0MQ version 2.1.6 (Broken), released on 2011/04/26\n==================================================\n\nNote that this version contained a malformed patch and is not usable.\nIt is not available for download, but is available in the git via the\n2.1.6 tag.\n\n0MQ version 2.1.5 (Broken), released on 2011/04/20\n==================================================\n\nNote that this version contained a malformed patch and is not usable.\nIt is not available for download, but is available in the git via the\n2.1.5 tag.\n\n\n0MQ version 2.1.4 (Stable), released on 2011/03/30\n==================================================\n\nBug fixes\n---------\n\n* Fix to OpenPGM which was asserting on small messages (Steven McCoy).\n\nChanges\n-------\n\n* Upgraded OpenPGM to version 5.1.115 (Pieter Hintjens).\n\n* OpenPGM build changed to not install OpenPGM artifacts.\n\n\n0MQ version 2.1.3 (Stable), released on 2011/03/21\n==================================================\n\nBug fixes\n---------\n\n* Fix to PUSH sockets, which would sometimes deliver tail frames of a\n  multipart message to new subscribers (Martin Sustrik).\n\n* Fix to PUB sockets, which would sometimes deliver tail frames of a\n  multipart message to new subscribers (Martin Sustrik).\n\n* Windows build was broken due to EPROTONOSUPPORT not being defined. This\n  has now been fixed (Martin Sustrik).\n\n* Various fixes to make OpenVMS port work (Brett Cameron).\n\n* Corrected Reference Manual to note that ZMQ_LINGER socket option may be\n  set at any time, not just before connecting/binding (Pieter Hintjens).\n\n* Fix to C++ binding to properly close sockets (Guido Goldstein).\n\n* Removed obsolete assert from pgm_socket.cpp (Martin Sustrik).\n\nChanges\n-------\n\n* Removed stand-alone devices (/devices subdirectory) from distribution.\n  These undocumented programs remain available in older packages (Pieter\n  Hintjens).\n\n* OpenPGM default rate raised to 40mbps by default (Steven McCoy).\n\n* ZMQ_DEALER and ZMQ_ROUTER macros provided to ease upgrade to 0MQ/3.0.\n  These are scheduled to replace ZMQ_XREQ and ZMQ_XREP (Pieter Hintjens).\n\n* Added man page for zmq_device(3) which was hereto undocumented (Pieter\n  Hintjens).\n\n* Removed zmq_queue(3), zmq_forwarder(3), zmq_streamer(3) man pages\n  (Pieter Hintjens).\n\nOpenPGM Integration\n-------------------\n\n* Upgraded OpenPGM to version 5.1.114 (Steven McCoy, Mikko Koppanen).\n\n* Build system now calls OpenPGM build process directly, allowing easier\n  future upgrades of OpenPGM (Mikko Koppanen).\n\n* Build system allows configuration with arbitrary versions of OpenPGM\n  (./configure --with-pgm=libpgm-x.y.z) (Mikko Koppanen).\n\n* OpenPGM uses new PGM_ODATA_MAX_RTE controlling original data instead of\n  PGM_TXW_MAX_RTE covering entire channel (Steven McCoy).\n\nBuilding\n--------\n\n* 0MQ builds properly on FreeBSD (Mikko Koppanen).\n\n\n0MQ version 2.1.2 (rc2), released on 2011/03/06\n===============================================\n\nBug fixes\n---------\n\n* 0MQ now correctly handles durable inproc sockets; previously it ignored\n  explicit identities on inproc sockets.\n\n* Various memory leaks were fixed.\n\n* OpenPGM sender/receiver creation fixed.\n\n\n0MQ version 2.1.1 (rc1), released on 2011/02/23\n===============================================\n\nNew functionality\n-----------------\n\n* New socket option ZMQ_RECONNECT_IVL_MAX added, allows for exponential\n  back-off strategy when reconnecting.\n\n* New socket option ZMQ_RECOVERY_IVL_MSEC added, as a fine-grained\n  counterpart to ZMQ_RECOVERY_IVL (for multicast transports).\n\n* If memory is exhausted, 0MQ warns with an explicit message before\n  aborting the process.\n\n* Size of inproc HWM and SWAP is sum of peers' HWMs and SWAPs (Douglas\n  Greager, Martin Sustrik).\n\nBug fixes\n---------\n\n* 0MQ no longer asserts in mailbox.cpp when multiple peers connect with\n  the same identity.\n\n* 0MQ no longer asserts when rejecting an oversized message.\n\n* 0MQ no longer asserts in pipe.cpp when the swap fills up.\n\n* zmq_poll now works correctly with an empty poll set.\n\n* Many more.\n\nBuilding\n--------\n\n* 0MQ now builds correctly on CentOS, Debian 6, and SunOS/gcc3.\n\n* Added WithOpenPGM configuration into MSVC builds.\n\nKnown issues\n------------\n\n* OpenPGM integration is still not fully stable.\n\n\n0MQ version 2.1.0 (Beta), released on 2010/12/01\n================================================\n\nNew functionality\n-----------------\n\n* New semantics for zmq_close () and zmq_term () ensure that all messages\n  are sent before the application terminates. This behaviour may be\n  modified using the new ZMQ_LINGER socket option; for further details\n  refer to the reference manual.\n\n* The new socket options ZMQ_FD and ZMQ_EVENTS provide a way to integrate\n  0MQ sockets into existing poll/event loops.\n\n* Sockets may now be migrated between OS threads, as long as the\n  application ensures that a full memory barrier is issued.\n\n* The 0MQ ABI exported by libzmq.so has been formalised; DSO symbol\n  visibility is used on supported platforms to ensure that only public ABI\n  symbols are exported. The library ABI version has been set to 1.0.0 for\n  this release.\n\n* OpenPGM has been updated to version 5.0.92. This version no longer\n  depends on GLIB, and integration with 0MQ should be much improved.\n\n* zmq_poll() now honors timeouts precisely, and no longer returns if no\n  events are signaled.\n\n* Blocking calls now return EINTR if interrupted by the delivery of a\n  signal; this also means that language bindings which previously had\n  problems with handling SIGINT/^C should now work correctly.\n\n* The ZMQ_TYPE socket option was added; this allows retrieval of the socket\n  type after creation.\n\n* Added a ZMQ_VERSION macro to zmq.h for compile-time API version\n  detection.\n\n* The ZMQ_RECONNECT_IVL and ZMQ_BACKLOG socket options have been added.\n\nBug fixes\n---------\n\n* Forwarder and streamer devices now handle multi-part messages correctly.\n\n* 0MQ no longer asserts when malformed data is received on the wire.\n\n* 0MQ internal timers now work correctly if the TSC jumps backwards.\n\n* The internal signalling functionality (mailbox) has been improved\n  to automatically resize socket buffers on POSIX systems.\n\n* Many more.\n\nBuilding\n--------\n\n* 0MQ now builds correctly with many more non-GCC compilers (Sun Studio,\n  Intel ICC, CLang).\n\n* AIX and HP-UX builds should work now.\n\n* FD_SETSIZE has been set to 1024 by default for MSVC builds.\n\n* Windows builds using GCC (MinGW) now work out of the box.\n\nDistribution\n------------\n\n* A simple framework for regression tests has been added, along with a few\n  basic self-tests. The tests can be run using \"make check\".\n"
        },
        {
          "name": "README.cygwin.md",
          "type": "blob",
          "size": 0.6025390625,
          "content": "libzmq-cygwin\n=============\n\nDefinitive build fixes for cygwin  (See https://github.com/zeromq/pyzmq/issues/113 for partial solution)\n\nWhat's changed:\n  ./Makefile.am                       Add cygwin-specific target mostly the same as mingw\n  ./configure.ac                      Add cygwin-specific target mostly the same as mingw\n  ./tests/testutil.hpp                Lengthen socket timeout to 121 seconds\n  \nWhat's new:\n  ./README.cygwin.md                  This file\n  ./builds/cygwin                     Folder for cygwin-specific build files\n  ./builds/cygwin/Makefile.cygwin     Makefile for cygwin targets\n  \n"
        },
        {
          "name": "README.doxygen.md",
          "type": "blob",
          "size": 2.01171875,
          "content": "## Overview\n\nThe ZeroMQ lightweight messaging kernel is a library which extends the\nstandard socket interfaces with features traditionally provided by\nspecialised messaging middleware products. ZeroMQ sockets provide an\nabstraction of asynchronous message queues, multiple messaging patterns,\nmessage filtering (subscriptions), seamless access to multiple transport\nprotocols and more.\n\nThis documentation describes the internal software that makes up the\nZeroMQ C++ core engine, and not how to use its API, however it may help\nyou understand certain aspects better, such as the callgraph of an API method.\nThere are no instructions on using ZeroMQ within this documentation, only\nthe API internals that make up the software.\n\n**Note:** this documentation is generated directly from the source code with\nDoxygen. Since this project is constantly under active development, what you\nare about to read may be out of date! If you notice any errors in the\ndocumentation, or the code comments, then please send a pull request.\n\nPlease refer to the README file for anything else.\n## Resources\n\nExtensive documentation is provided with the distribution. Refer to\ndoc/zmq.html, or \"man zmq\" after you have installed libzmq on your system.\n\n* Website: http://www.zeromq.org/\n* Official API documentation: http://api.zeromq.org/\n\nDevelopment mailing list: zeromq-dev@lists.zeromq.org\n\nAnnouncements mailing list: zeromq-announce@lists.zeromq.org\n\nGit repository: http://github.com/zeromq/libzmq\n\nZeroMQ developers can also be found on the IRC channel \\#zeromq, on the\nFreenode network (irc.freenode.net).\n\n## Copyright\nCopyright (c) 2007-2016 Contributors as noted in the AUTHORS file.  \nThe project license is specified in LICENSE.\n\nThe names \"ØMQ\", \"ZeroMQ\", \"0MQ\", and the ØMQ logo are registered trademarks\nof iMatix Corporation (\"iMatix\") and refers to either (a) the original libzmq\nC++ library, or (b) the community of projects hosted in the\nhttps://github.com/zeromq organization.\n\nThis Doxygen configuration is adapted by Hiten Pandya, for the ZeroMQ project.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.43359375,
          "content": "# ZeroMQ\n\n[![Build Status](https://github.com/zeromq/libzmq/actions/workflows/CI.yaml/badge.svg)](https://github.com/zeromq/libzmq/actions/workflows/CI.yaml)\n[![Build status](https://ci.appveyor.com/api/projects/status/e2ks424yrs1un3wt?svg=true)](https://ci.appveyor.com/project/zeromq/libzmq)\n[![Coverage Status](https://coveralls.io/repos/github/zeromq/libzmq/badge.svg?branch=master)](https://coveralls.io/github/zeromq/libzmq?branch=master)\n[![Conan Center](https://shields.io/conan/v/zeromq)](https://conan.io/center/zeromq)\n\n## Welcome\n\nThe ZeroMQ lightweight messaging kernel is a library which extends the\nstandard socket interfaces with features traditionally provided by\nspecialised messaging middleware products. ZeroMQ sockets provide an\nabstraction of asynchronous message queues, multiple messaging patterns,\nmessage filtering (subscriptions), seamless access to multiple transport\nprotocols and more.\n\n## Supported platforms <a name=\"#platforms\"/>\n\nLibzmq is mainly written in C++98 with some optional C++11-fragments. For\nconfiguration either autotools or CMake is employed. See below for some lists\nof platforms, where libzmq has been successfully compiled on.\n\n### Supported platforms with primary CI\n\n| OS and version                         | Architecture            | Compiler and version          | Build system | Remarks                                                                                                                               |\n|----------------------------------------|-------------------------|-------------------------------|--------------|---------------------------------------------------------------------------------------------------------------------------------------|\n| Android NDK r25                        | arm, arm64, x86, x86_64 | llvm (see NDK)                | autotools    | DRAFT                                                                                                                                       |\n| Ubuntu 14.04.5 LTS (trusty)            | amd64                   | clang 5.0.0                   | autotools    | STABLE, extras: GSSAPI, PGM, NORM, C++98 mode only                                                                                    |\n| Ubuntu 14.04.5 LTS (trusty)            | amd64                   | gcc 4.8.4                     | autotools    | STABLE, DRAFT, extras: GSSAPI, PGM, NORM, TIPC, IPV6, also POLLER=poll, POLLER=select, also valgrind and address sanitizer executions |\n| Ubuntu 14.04.5 LTS (trusty)            | amd64                   | gcc 4.8.4                     | CMake 3.12.2 | STABLE                                                                                                                                |\n| Windows Server 2012 R2                 | x86                     | Visual Studio 2008            | CMake 3.12.2 | DRAFT                                                                                                                                 |\n| Windows Server 2012 R2                 | x86                     | Visual Studio 2010 SP1        | CMake 3.12.2 | DRAFT                                                                                                                                 |\n| Windows Server 2012 R2                 | x86                     | Visual Studio 2012 Update 5   | CMake 3.12.2 | DRAFT                                                                                                                                 |\n| Windows Server 2012 R2                 | x86, amd64              | Visual Studio 2013 Update 5   | CMake 3.12.2 | DRAFT, STABLE (x86 Release only), also POLLER=epoll                                                                                   |\n| Windows Server 2012 R2                 | x86                     | Visual Studio 2015 Update 3   | CMake 3.12.2 | DRAFT                                                                                                                                 |\n| Windows Server 2016                    | x86                     | Visual Studio 2017 15.9.6     | CMake 3.13.3 | DRAFT                                                                                                                                 |\n| cygwin 3.0.0 on Windows Server 2012 R2 | amd64                   | gcc 7.4.0                     | CMake 3.6.2  | DRAFT                                                                                                                                 |\n| MSYS2 ? on Windows Server 2012 R2      | amd64                   | gcc 6.4.0                     | CMake ?      | DRAFT                                                                                                                                 |\n| Mac OS X 10.13                         | amd64                   | Xcode 9.4.1, Apple LLVM 9.1.0 | autotools    | STABLE, DRAFT                                                                                                                         |\n| Mac OS X 10.13                         | amd64                   | Xcode 9.4.1, Apple LLVM 9.1.0 | CMake 3.11.4 | DRAFT                                                                                                                                 |\n\nNote: the platforms are regularly updated by the service providers, so this information might get out of date\nwithout any changes on the side of libzmq. For Appveyor, refer to https://www.appveyor.com/updates/ regarding\nplatform updates. For travis-ci, refer to https://changelog.travis-ci.com/ regarding platform updates.\n\n### Supported platforms with secondary CI\n\n| OS and version               | Architecture               | Compiler and version | Build system | Remarks |\n|------------------------------|----------------------------|----------------------|--------------|---------|\n| CentOS 6                     | x86, amd64                 | ?                    | autotools    |         |\n| CentOS 7                     | amd64                      | ?                    | autotools    |         |\n| Debian 8.0                   | x86, amd64                 | ?                    | autotools    |         |\n| Debian 9.0                   | ARM64, x86, amd64          | ?                    | autotools    |         |\n| Fedora 28                    | ARM64, ARM32, amd64        | ?                    | autotools    |         |\n| Fedora 29                    | ARM64, ARM32, amd64        | ?                    | autotools    |         |\n| Fedora Rawhide               | ARM64, ARM32, amd64        | ?                    | autotools    |         |\n| RedHat Enterprise Linux 7    | amd64, ppc64               | ?                    | autotools    |         |\n| SuSE Linux Enterprise 12 SP4 | ARM64, amd64, ppc64, s390x | ?                    | autotools    |         |\n| SuSE Linux Enterprise 15     | amd64                      | ?                    | autotools    |         |\n| xUbuntu 12.04                | x86, amd64                 | ?                    | autotools    |         |\n| xUbuntu 14.04                | x86, amd64                 | ?                    | autotools    |         |\n| xUbuntu 16.04                | x86, amd64                 | ?                    | autotools    |         |\n| xUbuntu 18.04                | x86, amd64                 | ?                    | autotools    |         |\n| xUbuntu 18.10                | x86, amd64                 | ?                    | autotools    |         |\n\n### Supported platforms with known active users\n\nAt the time of writing, no explicit reports have been available. Please report your experiences by opening a PR\nadding an entry or moving an entry from the section below.\n\nUnder \"last report\", please name either the SHA1 in case of an unreleased version, or the version number in\ncase of a released version.\n\n| OS and version | Architecture      | Compiler and version | Build system | Last report             | Remarks |\n|----------------|-------------------|----------------------|--------------|-------------------------|---------|\n| Solaris 10     | x86, amd64, sparc | GCC 8.1.0            | CMake        | 2019/03/18              |         |\n| DragonFly BSD  | amd64             | gcc 8.3              | autotools    | 2018/08/07 git-72854e63 |         |\n| IBM i          | ppc64             | gcc 6.3              | autotools    | 2019/10/02 git-25320a3  |         |\n| QNX 7.0        | x86_64            | gcc 5.4.0            | CMake        | 4.3.2                   |         |\n| Windows 10     | ARM64             | Visual Studio 2019   | CMake        | 2021/11/15 git-2375ca8b |         |\n| Windows 10     | ARM64             | clang                | CMake        | 2021/11/15 git-2375ca8b |         |\n\n### Supported platforms without known active users\n\nNote: this list is incomplete and inaccurate and still needs some work.\n\n| OS and version         | Architecture | Compiler and version     | Build system     | Remarks |\n|------------------------|--------------|--------------------------|------------------|---------|\n| Any Linux distribution | x86, amd64   | gcc ?+, clang ?+, icc ?+ | autotools, CMake |         |\n| SunOS, Solaris         | x86, amd64   | SunPro                   | autotools, CMake |         |\n| GNU/kFreeBSD           | ?            | ?                        | autotools, CMake |         |\n| FreeBSD                | ?            | ?                        | autotools, CMake |         |\n| NetBSD                 | ?            | ?                        | autotools, CMake |         |\n| OpenBSD                | ?            | ?                        | autotools, CMake |         |\n| DragonFly BSD          | amd64        | gcc 8.3                  | autotools, CMake |         |\n| HP-UX                  | ?            | ?                        | autotools, CMake |         |\n| GNU/Hurd               | ?            | ?                        | autotools        |         |\n| VxWorks 6.8            | ?            | ?                        | ?                |         |\n| Windows CE             | ?            | ?                        | ?                |         |\n| Windows UWP            | ?            | ?                        | ?                |         |\n| OpenVMS                | ?            | ?                        | ?                |         |\n\n### Unsupported platforms\n\n| OS and version | Architecture | Compiler and version | Remarks                                                                 |\n|----------------|--------------|----------------------|-------------------------------------------------------------------------|\n| QNX 6.3        | ?            | gcc 3.3.5            | see #3371, support was added by a user, but not contributed to upstream |\n\nFor more details, see [here](SupportedPlatforms.md).\n\nFor some platforms (Linux, Mac OS X), [prebuilt binary packages are supplied by the ZeroMQ organization](#installation).\nFor other platforms, you need to [build your own binaries](#build).\n\n## Installation of binary packages <a name=\"installation\"/>\n\n### Linux\n\nFor Linux users, pre-built binary packages are available for most distributions.\nNote that DRAFT APIs can change at any time without warning, pick a STABLE build to\navoid having them enabled.\n\n#### Latest releases\n\n##### DEB\n\n[![OBS release stable](https://img.shields.io/badge/OBS%20master-stable-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Arelease-stable&package=libzmq3-dev)\n[![OBS release draft](https://img.shields.io/badge/OBS%20master-draft-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Arelease-draft&package=libzmq3-dev)\n\n##### RPM\n\n[![OBS release stable](https://img.shields.io/badge/OBS%20master-stable-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Arelease-stable&package=zeromq-devel)\n[![OBS release draft](https://img.shields.io/badge/OBS%20master-draft-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Arelease-draft&package=zeromq-devel)\n\n#### Bleeding edge packages\n\n##### DEB\n\n[![OBS release stable](https://img.shields.io/badge/OBS%20master-stable-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Agit-stable&package=libzmq3-dev)\n[![OBS release draft](https://img.shields.io/badge/OBS%20master-draft-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Agit-draft&package=libzmq3-dev)\n\n##### RPM\n\n[![OBS release stable](https://img.shields.io/badge/OBS%20master-stable-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Agit-stable&package=zeromq-devel)\n[![OBS release draft](https://img.shields.io/badge/OBS%20master-draft-yellow.svg)](http://software.opensuse.org/download.html?project=network%3Amessaging%3Azeromq%3Agit-draft&package=zeromq-devel)\n\n#### Example: Debian 9 latest release, no DRAFT apis\n\n    echo \"deb http://download.opensuse.org/repositories/network:/messaging:/zeromq:/release-stable/Debian_9.0/ ./\" >> /etc/apt/sources.list\n    wget https://download.opensuse.org/repositories/network:/messaging:/zeromq:/release-stable/Debian_9.0/Release.key -O- | sudo apt-key add\n    apt-get install libzmq3-dev\n\n### OSX\n\nFor OSX users, packages are available via brew.\n\n    brew install zeromq\n\n## Installation of package manager <a name=\"package manager\"/>\n\n### vcpkg\n\nvcpkg is a full platform package manager, you can easily install libzmq via vcpkg.\n\n    git clone https://github.com/microsoft/vcpkg.git\n    ./bootstrap-vcpkg.bat # For powershell\n    ./bootstrap-vcpkg.sh # For bash\n    ./vcpkg install zeromq\n\n## Build from sources <a name=\"build\"/>\n\nTo build from sources, see the INSTALL file included with the distribution.\n\n### Android\n\nTo build from source, see [README](./builds/android/README.md) file in the\nandroid build directory.\n\n## Resources\n\nExtensive documentation is provided with the distribution. Refer to\ndoc/zmq.html, or \"man zmq\" after you have installed libzmq on your system.\n\nWebsite: http://www.zeromq.org/\n\nDevelopment mailing list: zeromq-dev@lists.zeromq.org\nAnnouncements mailing list: zeromq-announce@lists.zeromq.org\n\nGit repository: http://github.com/zeromq/libzmq\n\nZeroMQ developers can also be found on the IRC channel #zeromq, on the\nLibera Chat network (irc.libera.chat).\n\n## License\n\nThe project license is specified in LICENSE.\n\nlibzmq is free software; you can redistribute it and/or modify it under\nthe terms of the Mozilla Public License Version 2.0.\n\n## Contributing\n\nThis project uses [C4(Collective Code Construction Contract)](https://rfc.zeromq.org/spec:42/C4/) process for contributions.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 17.71484375,
          "content": "# Security Policy\n\n## Supported Versions\n\n4.x versions are supported with critical and security bug fixes.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 4.3.x   | :white_check_mark: |\n| 4.2.x   | :white_check_mark: |\n| 4.1.x   | :white_check_mark: |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                |\n\n## Reporting a Vulnerability\n\nIf you believe a bug you found could have security implications,\nplease send a GPG encrypted email with the details to the maintainers:\n\n| Maintainer | Email address   | GPG fingerprint |\n| ---------- | --------------- | --------------- |\n| Doron Somech | somdoron@gmail.com | E0B0 E3D1 55DD 6ED6 71FB  2B79 D0B9 CC44 867D 8F3D |\n| Luca Boccassi | luca.boccassi@gmail.com | A9EA 9081 724F FAE0 484C 35A1 A81C EA22 BC8C 7E2E |\n\n## Internal severity classification\n\nWe will attempt to follow this general policy when assigning a severity to\nsecurity issues. These are guidelines more than rules, and as such end\nresults might vary.\n\n\n| Severity | Definition |\n| -------- | ---------- |\n| CRITICAL | endpoints using STRONG authentication are SILENTLY affected |\n| HIGH | endpoints using STRONG authentication are VISIBLY affected |\n| MODERATE | endpoints NOT using STRONG authentication are SILENTLY affected |\n| LOW | endpoints NOT using STRONG authentication are VISIBLY affected |\n\nSTRONG authentication means transports that use cryptography, for example CURVE\nand TLS.\n\nVISIBLY affected means that platform owners are likely to immediately notice\nmisbehaviours, like crashes or loss of connectivity for legitimate peers.\n\nSILENTLY affected means that without close inspection, platform owners are\nunlikely to notice misbehaviours, like remote code executions or data exfiltration.\n\n### Public keys\n<details>\n<summary>Doron Somech</summary>\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBF0YXO8BEAD8Be6QQa+ALzIWszeDPtVK9DCGN7ZM1C4Ygq6w7llauhg4wreg\nkQy7YwOFKsFTi9cmIRfkw/lX9tIn+PkNe+kV7tOLDCdAmNCqdERvM/C46uPM/Mx4\nIdaoUXOPVIwbLcCLysiYxickq/M6ymPH7pAT5deCxH9B1DV38T2Mlq+uXXyZ1aFE\n74oCouQ7Vau31NBeOA4DkpPjpdA/WXMVEqoB3PKALUGYs1Ce5CguE0WjdueZFt2k\nDvdYtbUFb+vNLMPCejf1sBWDnUygPfsPPakyimfxBSIRsQLvw/5t6bkiWgtGU4LD\no37skSzum7h0rw1378ryoMUYdaNu/oNlWCwbQzBjD6G+WYbmu5AB5aGSaDjUzg9K\nAIcaNbRFln7OwvHrQdvDuWypZw7JvWYbehaywBagbjSTjIwb+Umki8cF/zxi5sxI\neFRMARDVQa5PAeErDd+4RtMcB55M2a90xWcTcfBdE/VYmwBXsMMWju4ceBtAqBCB\nDTVxxaT54tKjkOKa1Yk75zL4Xu7Sekg2BIaHh/qVMn5aTEX+X6ImeFhWRjhgsk+Q\nXoXo74nJq2aCJ2sSjLRdvnePtc3WM+WfdmdnC12JpBiBn4TFYxMBJlvqfKBxZELU\neZBkB6eTcBO/n5U3jSdFM47SeiBgUlPRiV+0ArZJ4i2Giv9vduWO6XeMVwARAQAB\ntCFEb3JvbiBTb21lY2ggPHNvbWRvcm9uQGdtYWlsLmNvbT6JAjgEEwECACIFAl0Y\nXO8CGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJENC5zESGfY89i0wP/i5k\nsYQkdaPeos9JnfUd3cV588lQzBN2bVhzCtbrjR6wXn9hRhZP9ftCNKoVp8cpC07G\nVq87sKqeB7odaK67jS+XoF4msIUEYS0lN2lPORf523VK3Juy9FW39aEPfx+6P5+h\nh49VveR1t9I7MgdjnKVwmaELcFDKKGQaPlcWlKctSkOLRw/vYFIvajFJ30bkK9+z\nsjgtUvXbSgt4HHHOQ/M6oCNhDsY0YE1zNxDgc8EqRlRxf76+pwldMe47/sIP2U7m\nqI6d/LfsWnK6iJ0ehlp6oPP2GcUM8bH3lh2ugHH7sPSwpvh/rHqQTTxv+KiFeQOC\nyuxvWdjathnDDHRNPVahBR747iKlcebJeaK5X8wObcIDaGBecwnNIjws4hrYAFH0\neNiROIbDkxDjwFhBYLDMfVCPW3xpBDa67EBJ6qTrabxmXOGvUDR2kB0P5lmtU/jL\njdVeFLj9tgwuuL8PW5k/gCdeB4WSBF4VWAHBZ2vDXUPut78dHQQg+dgvHmbnRYZB\nEm6nrYUeoQ4nSOHf7VmdHf05HGwam+ZTWLN2sIEerNJlRCx6mEn20O2S7DE4RMi5\nVjBFHy8/YSR3hRtdOSYfE61AeProeDPTGiei6xxlN00MQ7K/kFhQHIjKz1Ao51LU\no6+KGTtka2+g368boLcQALIchlfp7cfUAEp+dB7UuQINBF0YXO8BEADBXhwad2VN\nXFhD69CPwWR39KmoW019EvT8tNWzCPzx8hQeTJz+fY0bTiXYxMROZwF0SD4kqYet\nnejfH+boUFV64coxmfCmriqOQ0SGZTCfWzrjDrWjj51Xe1NWsGnFNO6vCcL1NNPB\n0ZcE/wskEaKPi6Ui0SwvlDJQFK5UnrnFehmEIxEqi8BFez2Ft7/3I/XRrhlDzMtT\nhDgMb+Ro9BydddH3TRKAdJBzIsozCrv0nn1DIXM+Pocqiuvk72E6iUxS2meeA4F6\nDTG6MIWEcf6WPRVqXdD2bCBzDJ1NYixK9TFdZjo/6jTLwwX711+/NTIblAbpc/KE\nio+0cuRG99gP8Cr+1VVZ2fcK9FpjI/u4YERmj8arMkcFz+QQDaJnXIjmNDpD0zBQ\nDh2v6pKysoEgmOE2xDzBsJbZomluKOytLN9/KcqucB1qkjzHD5JeZe+/S1vxdZUn\n+81Us+SeepiDOfrT84xFYcqJentL+ylFj7zBdeqF4WTnZAT9/xbVuUSYnRm1Sm0z\nvr99Sum0MXUTzgNhY5x3PkFQyg91lllJUFGoXiLivG+3M8JFC7V2K7wXhHFqffVX\nQq6UOm6+kCTjUCgzpQswMpDremB7A2fBQObKOC/3pE0Gbh3uKvylqQkMPTn4lOao\nJ3VSd1hBqHAdb5uxnmxN8w3wIpnaSypBawARAQABiQIfBBgBAgAJBQJdGFzvAhsM\nAAoJENC5zESGfY895WkQAJYvJg/IYBKh0SblT8lGj9O+mLXO6K1q+HfZ6mERm9Ew\n+fgW/cwGzuUrn+DC6vfsXlqtshUwiaxaa6NJccPBfC5IGHAegK5giwnQ/sbrA70A\n7md2u+NK2tNDGK4Gxy8ZWMY1++TmwdVLzNivM5IA/NGotyYgQStDI+/Muvh+0wQ9\nxZjo/InxVXeQcnqQXVKhoouPo2GlXslHev04SRl/ZJYN5sEHCE0Qx6L++esVvrwE\n/N5NT5Rk41l4mXAN2SM0H5AB+Wf1qIiVB6pMLBzXM/7qnCnJS0FZZjf2WRiB0yXj\nxTl+/JUK9MYckkrNcAfnb6yvnvO5W3KDabZhl/Cqw08vVSvcqyYRFXIa4vduiGJP\nL6C8o3USbjVfZhBSHXpuo7JPzR0S4l52QB2ZnTCRIjSBe5vphVum6r3vR5rKAU1n\nHtytqm099TlDapj+4wixSv8TvwlJr9no0uEJloyRAMFMYms4KgLEEZfc2tqpe/sA\nnO6TM9h/hCbrImplSiesHqTxprnKAipudSYkc750zuFTiBQ5WwYbWjkCB2PSEh+l\n8ZCRM5Ropfk4ATMhXH/w2Dxa5mdaHuKWKUc14+YfSBJI8yohbVIzYVsvAclctCQY\nkAh/Z/Fl8W+ftDsZF0/1k3fxyKwExFej+AIsabcQDG0bAHscfH/44atKZRPn72FI\n=Qu19\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n</details>\n\n<details>\n<summary>Luca Boccassi</summary>\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFTKss4BEAC6LdgaSpaSBbMZK8erDulfXpCszvssCvEAI5lshfNNLHqOGy4r\ng+A3xyaGe+ITjoahT56Ly+dylduRvuZaJwbKWZqOKLnZHG0/Y/4K1MSk73TtcFbS\nVn0q1dZmr14ysTKB8E1UJ8XQZO+PO79VANjvj9oEqsYX4xJ5BenWdfqJOGa+8jn8\nou75vYcTFkIlvSnaHT4MkCqPGnuGgqiunEScjpBRFOX6ZIdRZvXcjP4HymdQAIMA\nBDDcV/qT+3VIOwKCn2e1jtxGbgMUwyosfz7nmlNHAdLrnficbSSsjRBIKxLgKN/N\n2fk/jk87mbs7Qz5L2bSxU68emGHZ1BEkBJ4vhiO6VBx8XHolK2RpI/3v0qzdGynZ\nYKTF2yBFqBlDI12gbfxabCQ7FgxwLBmYw/C068NVtXLM0AAMFrJmXRoexE698DJi\nwL/4qxWy2Py/wBHSFInmyUSSVi2CjRkLh2zA/EJ/268HooItcnL7kGnyWo9IJZEz\nMa7QO1FF/513xsW2QyPr/QNvuJ4GT/SyIgz+6Ln/z8wHCJQw8CM7vFRgOCuy2U3R\nsrO926muRbl97pqRmCXbb+OJQMcYaA841FPKHq52kUTeGqkiJW4RocckcEGqhxhh\nzj8KjIb2wBgkYviFQWKLIpZBVxKSAjVXTl/Bzk9m2ZPETjMZKtz09xtloQARAQAB\ntCBMdWNhIEJvY2Nhc3NpIDxibHVjYUBkZWJpYW4ub3JnPokCNwQTAQoAIQUCWab4\npwIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRCoHOoivIx+Lmx3D/0f5Nxi\nLYPDpxPOJDnEGUNqLiHlnyHwlHidV1xROfh8F6WkDrEAO5YfkASJjqBYJY93ZiZU\n/ROUdpcct9sN0K1Vw4yTAHFYpYO2G9oc3ax+3ly0rON4L7t1Xj9cvR1/b2fIIltE\nYied0XP3ukUfjECOkwQZJbmOHjsea61i5da/JEbDFkr32witorIMMIOAsZkZ+tcL\nxo2kRhk5PT7t6yo5cRLd0rLGKvKMBkMrNcPNk/T1V1YKB6yy0gAfo+dhZyI/khNC\nVuYZB59oYX5FS5FkGn/CCmuPN3YkGBqe0vZJjYLe8PK0vPS1obg9gRuYuJXdxIQn\nP8hD/y6Cu1axoy5EPt1uNc1bUSkvWUoJ2pWkeUAEKa/E8I0xKwQfHHo93rA1Xfdc\nc3rivihyj25/CkHo3zP6Xa0fqQLjpvusdf5nxuKL5cQYCAkNV9/sITTCxxYiKhp5\nlto9jhxs5j3/D4WV0+EGaQ/jfwg0i1h5eApzJQWMG+dEiT28s9+zPgFqfYq5oqVk\ncF+3tv39Mk/k06XqEwD+TmhV3Yv/wy1BDrGxvQgMP5GtIPS6p6+PBWFE+HUYYPdZ\n/vFN5DugzvVznjxLETUvj1G7mCQyHFXIkezF3mfr3uk0WiYWYoEqQ1Jdg8nsiTq3\niRTwW3XNsNhB28OoXH461215t/LakjGMVOmUSrQkTHVjYSBCb2NjYXNzaSA8bGJv\nY2Nhc3NAYnJvY2FkZS5jb20+iQIzBDABCgAdBQJZozczFh0gcHJldmlvdXMgam9i\nJ3MgZW1haWwACgkQqBzqIryMfi67IhAAq7Gj+p4Xt5Zc5OhMt7xaz6lGVdgXljGE\nmVmKgmyHWwMnNRpLrsXUWK8iZuvpg9Ges1o0Ckf7f+631XTOle0r3MwsVI+FgWVM\nBzAg7ft9GlIMqgY6suWlV7Rwar+rmzgf4A6tDjDWq4Lr2QTbhzjKoZeVL52Z2tpd\nnq0Iq1RKuXPQ8AEkPcfhYc3Z8ZL0MQ1cL98c42qVRYmoa1JmABen7rSUmIQL3t9v\naZXLqnTNOEtpbJ0QLuhasBTPwUW7FOwvSFr8PSoSKtOJ9VLEGDgJD6wewc/MYJsu\nfMECdfVYipOP/mlX1hrmxyucEm0a6CjFDvrP46sUJ4JoVcmr1Te898VQYKvBRFZK\n7UxJIbp6nZdyW6jI0HdstgUNyh0IzTgOUfgdkn5m8Xw3AaJdzGIy6cu4+g0Qmief\nrbZrReVcWYPswITpnDtEAmghq7C7QJ5OB7PA2G1xWqOeLMQnE2tTGpJfWkuv6FEI\nlG+5utAKSwDz9sZ93wbYGil5/rBSLOS2XoZfS67yROQH8+f1vc2tMpdfD6Z8rtkH\nHfotVwDkx3xIKWCENdmL0ewHbzjKXglSi1VkFGdrxoXyQvpSeAgO2GE0spM3lRIR\ncfNsXrzx4J21TUDrjK9mg/+KVEGA2I7E95d/ByyjDz4w0yx6xv4nyHtptgAc72aP\n41NMSpr0qje0J0x1Y2EgQm9jY2Fzc2kgPGx1Y2EuYm9jY2Fzc2lAZ21haWwuY29t\nPokCOgQTAQgAJAIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAUCVMq0wgIZAQAK\nCRCoHOoivIx+LtL+D/4+JIaILWcbIymShr7cOhlWKu7/AqAHrT+y/0s99O3Tu6TD\n7bk5LUMUL5TBZtyVbUQh0KPjVYH+QZyDGICwn9snbkftIACvwD8LgtUv+5PbAQ1D\nof1ZtNjbl5S+VeKoD5Ev01t5QusRfThyiHzFSZOvePiLuRyRe1ixn1fzXl/NxuW2\nd7eJyxNRmyZ6N63SVDnBvOFwbNSJ4awXZa2S23edswfNcfEeYVVrEmEfBsi4U3ZY\nrjHWV+SvHoa63vEfyooynRofXgwPZLeOcsa6f2Q3jTI7WaCVnxL7K0GlxW3pd+MO\nE8HKFj/8MnK29ykQgvfOjvBtKIQmZoPHB1+FT6YIxr0fkLIK2FHGZ0azh0T7sWEh\n0WPQeieGFdDOq0z9Jf6fiWwIeetpwdeEoAzzXQZkHfRNpwzkXx7RlfITUqko3UiW\nl/w5S7t4x2HFyFHVb5osqF+NhCxGaqZGGkkegE/9RRcvFzN8pbUHNMxnwV/KQW8V\n1DZ9P7Kr+a/KV+dmEs/7vAj0vyFzCJbc8qecqOWVOLjY9tzOBjEWa1zvt6PVxZGJ\nI3i+lvdLcpvIWyAI68Gi7kOsTuu8A8iXDxEfzJ8kGlBnflq14sio3VKP6nVIPwbF\n5CwturkRM0vPkKSIliBCvS2MvnC3S+0AkKjhKRl9InBh0mCx1cRylJ8ZltHj9rQr\nTHVjYSBCb2NjYXNzaSA8bHVjYS5ib2NjYXNzaUBtaWNyb3NvZnQuY29tPokCTgQT\nAQoAOBYhBKnqkIFyT/rgSEw1oagc6iK8jH4uBQJccpvuAhsDBQsJCAcDBRUKCQgL\nBRYCAwEAAh4BAheAAAoJEKgc6iK8jH4uA7kP/RbwUH1C8RfWJWvtaDsvoJ5jnoB1\nlJDxUBEd+6j+AWTUD+fAAxLE/bcqxXzsPz4dscwpnoKmqVIpAdhTN+EvRZRLA1r/\nkbKlnDFnEm89MYYS1e8dGtXqa1zAPl+IxL46Da5/l8GsepOr9HftrPBjN56R/HIf\ntOwc9Vir1NLaC+S0CsAKwyAjpq8srjvrxFWr9a82+7GiBz2Wrc60vWIfaZuDKpVE\n4RpvEaiYoGEJEUp4wNhaVdQrhe8m6C0uczwq2t5aSjxuuso+rsN3PK/jvNrmxfbS\na0NMzwhZ92w+J7CFyg85c0OQ6hmZRTf6G2v8pFpWlbcb7sePlvYcEIeZik4Nx73T\nEkqwmX5WC0NPzj+wdBWG/G+fFIcUUaMZzcGjgy9MXD+RVVyGs6W2/Q7iPBzDxny6\nKJLjUK8xMGRLo3rvdAUqug3Gpe6dth/8XBp0cY1gk4n3OUluBWOXSEwW7zm3s77r\nK4s5JC/rBOgCeCNV+qXLydazn4qjQXixqb0ezyGGxO9w/+q9T7MBwQy5/Q25w4qL\nbcCxTLAhRpye2C1nCHt4GvH4SUjdh6wtHdkXjtyYMTRmMU40GN/PL5QFyyMS7nEC\nYiycLB99knGwsh1FX31Q4aU7qUWO6Ejhk9W43IZjQpaITXoyCwKnMaE+X6Uqk745\nio6PFV1+6ix1l8MhuQENBFieLi0BCAC8doYzfmC8HWjtP0Q0s6fpRwjwGTTOaxk8\nqOMW+vgVY5eAIWYOGX8kNdzUE1nnRgrGhqcOe+g0NvXNkE83KIeAZFL5k96/o+K9\nIJTSlrNzjWR3NsQPfjrQ4/pDcuwtxWBIaZNAF7GJNnjGeQ4dvVHwTzi1b3xrELxK\nYO3iiYkku5O2rrHxI2Pv8mBWZ/v6Zr81hutk6TtpsGGWRBEq2sAdS+qV+Bk+C8LJ\nsdOLeZLU9aVILtMPQkL0z3GTcb7IVknLPZ+aeraFRBLXO1k29J2JnTwECEkfOQep\nmBkGJ4FGHQ+eG7ejLd1i8BLFEeLk9ia2wLl6xiij1I2lplcuaLq7ABEBAAGJA1sE\nGAEKACYCGwIWIQSp6pCBck/64EhMNaGoHOoivIx+LgUCXFwb5AUJCWGINgEpwF0g\nBBkBCgAGBQJYni4tAAoJEEspZoBQeFFiy5EIAI2YXvth4tRojymdZ3oYiZRz3Xtx\nOJiiEsjZkP036k4pKdmtn1zxAPzd5W5kprk8AkWjjKyBSNS47i3lvjRFQXpKpUbG\nJ0CdjDCE2CaonMb1oh/pVbQ0VvMoPRyj1Jjz/gFCeXLFq8AcXrRYjh/aW6RNPj0Q\nnqL70ta6qFSavxrLPVkm02mFWEKlWNLtb7uzLM2KfCLI/ZZdsKSkTwZhWDQybp2o\nXO1fZdI7aSoLYQFY6pIjdIuTnQrqIrRKtk+ummBMMKBS18eyiJ1FR7cIp54Vektl\nVcaFOGI+MHDrDO4+hGfE+w59szW5ma60S92keJSWgOJQD4Nu/sPor9M+ZlcJEKgc\n6iK8jH4u21wP/RtYbohWfpBDSReU+ynG5QGLcELpSMHlCRz2ZxaV8bqGblGftjiW\neyvEZePOJpb5Sev20TnUBzzilZc1nLwOxP5tDZpEvo1j2bIY1YamZc7g7XE+xRbl\ndjiwGtj9PA3z2DME0iuxM/xN0Ghaea/vHeMim1miRJ8sbOheHwmwALPQzvTUV1Cq\nNgn8J1eUP/tC6wv/BnBwTkaHugqqmBglE9V8GptIVE5Tam/TfwVQXx72ZW2YHa4A\nbwHf+oUtH2/jOTjOj/kWT7docgSDj7kColJ7mwuZZ0NSwYhA5dKN1CWX7c65ENzN\nh4pIiM9Ula0tInRal2qK9YXy/GV0gFXwV/aFh22G/xtPRs0qqhBxr2lxGOg5XsAk\nSEu+nlCThjEZDQVXxmptdVVvHwh/+Lrconk3o/sUTFgZ9mroQYceJa1z9cIn1A1Z\nPb2SffXWU18lOuuC2Cw7XGx8QN1rWbmVVA0mvNQ6MpUYCOICy7bVIfUYcX6xuoWh\nTfu5lE0qUw8PhBGUaW+pqGvEDcM/PWhopx+mSqq/Ip4LfZ0Cn33KLV4SzJjnhC1Q\nRVQoUYpzBDREgOUo6eqwNSCM1ZxkOIoueOZ6TRoYrUaJUGAJOZvXVl6NfpizQ1bp\nTu1l6dz7U3JqYG/V/kr+IKxWJf/JhYjZ73Da9mx+2SuNOKj1SFohLNL3uQENBFie\nLj4BCADUpbwnWqJsjL6la8HdROHY/LePMvWiCJAK1tZX6HadW07FxCMlQPOhX6jj\nYI85BmYM1AZpEDRLqdkAUf6+lSY9VywXy6G8DsQTSiO+Fn6DWEJ9yYelLIQW0xMJ\ncWd55D9+tDlJFFfiE2OLjrSoxPRGjhB7iajsdNlD6JTjuJq60zAcxF7J2o6Keesw\nHVYooz460MLuVq3BeyNxH/d9B/y5n3ibSVgJc8PYkDRN2Y+ILuAXd/ia0GTphTM5\nj9R+mCJDuRRVZAgNfa9AJMPJ0QbIFnRdnwRTEGt6LYA/AIoBgwjiveTfr8N2LArD\nARNP6rV+Ugf3rW2bZPEoCv82bsx3ABEBAAGJAjwEGAEKACYCGwwWIQSp6pCBck/6\n4EhMNaGoHOoivIx+LgUCXFwb5AUJCWGIJQAKCRCoHOoivIx+LoL6EACYK7c/yOQH\nZtSfzkrfNpd/MiY1j6rpUr0mrbKBVKamJ1N5Ae48E2ETlRfM3B6fk+dqovKbD0gQ\noDHcCo201770pyoFwxyHZleiSWfQjNp4JCoXvGAh+AK6xfiPZIEzfLDrm3nrd38m\nrLEsUPRPdoyemAb2kKBoMmfkPt0e6WnqKxlFBngyF35jOFXnp//yGNCWvr4gibXD\nzIlMnQUXlYzKqZPnIwdEGyQT4KWLAHLCu5lzk6JmvMJPqTPU/uKbgKcHHy8cY0Xm\nxPOAPbnSbSYsuMcJpZMiIKBRozZk26fWdDJorWBPZ91OEmfSCx2X1P99UQId67SJ\n9V4EUbZjGDrsEJcosmg1JN2bFIKzI6VTrYvxA2ghPuowXgKZ3k/BuFXMA41hnP/P\npn8DjsYu/9yzV5TRYvQEVSGrN7c3tJGlyZrbZ3YxyDyniWZhrFmgVqdo3jZfhhgT\nxTnuSfUyhtA6jk5ECVuF+oxmWyjRzJW2XoPPpmYe9CQ2efHZ4RFqCO50keBAH0KH\nUCl3eg2E4HeALu++Aq9v07JyAyA6MYbTvHjrdMmHHDb3kHG3O/rPoH2120wYXHAW\nSBvoOOJZyT/4rF3BNcrLiPxDCi+mOe5vkX5jymHe4fho1kvh0mLLzeC9fKiJjExL\nyF2yrNrTFESt66057r3CIb8BcJXPGhxpXrkBDQRYni5MAQgAnBzmeIfxaXebmSJj\nwbH1ScEHIATXoDs1FtVumWTmfGS851lqoMBoemWPZleBoMTOza5cnv6EzPIGYRYL\nSd+GTDOAzNdnuHxULm8gUqEdoQ8+GwcTXCSjOsvuZJvIWjJ3Siz3JRnTsM8hrYoz\ntZZhDQqsmqmCyrmw5IsxInDfTd6XrdJ834TOS87pJTwFzrt3B4UuhMMGX8IWjPsG\nZ0ZRBbUMhAxt07+JV2lW9o7AA0H733NHjhZ4/mjn62WpDVFzHIkvdVaNbb5hGXrJ\nHbRIqQUj4tX32uYEkpd0Uy7KEtqh/HI+tW1nL47Ba6EEY+3IvFO+XJiy5Zhoe0ku\nNiLebwARAQABiQI8BBgBCgAmAhsgFiEEqeqQgXJP+uBITDWhqBzqIryMfi4FAlxc\nG+QFCQlhiBcACgkQqBzqIryMfi5icA//f5d9VR2F/p/iBRbKudu5HHp3YxAxKLe/\nT5FobOd9LBM4z8G9x6puaVP5bFjN5IMB67piUTVgSTDFwvS5sj538xRddTLg6gdo\ncE8qU6gb0Caj3eDm6aaPH6sz8Dkq0lV0AibiFZAlysgH3Jb0mavTLbES92LVTC+y\njgm6rKxazD7Xf7eKKAtU6Yv5hy8/RtkxqXUjiW5JuvM6GHrplFaoqLQqTTs84jmU\nJdAn5ocTHSZkWnrXD2ymNcSQ1Rb34JYOzhEZmqk7qID0HvTT2g7D52gP2Jw4AzNM\nkmf/tbB/ugWIBsEClwVkk6yUxjSTjjOq5p3Jg/9vqiEEml7xnSNwqY5w/FCIdwV/\nbcrDAvRYAY2whDUtjIBJrD5AzRq3A4FU9ErdkKNGToL1sAUZdyH+qsCuJl0eY/Ry\nlMdgYrKc4HWNOh+viG7ap/RxUULll3wXuwtcDapRe/lg4YABmORzgDPgXcGPODhS\nWdKeQid9kKucWUrjOXogxa28hO9P/6OhngUor9FECHqxa3dTEm9GAxRKJhJhWm8m\nwu2rTGBSOEDk918ffR+HyPJ5CoEUCj03vY1OJwcwhtCaKb83swuiXwDeZ7eXVRL7\n2nRMieLWYxNV8seKDFCm/7fXbNWpYe6HRtZfGiPVICJZbVHS73n4Kglxg03LKSXT\nZEG+OhK+ULy5Ag0EVMqyzgEQAN1wRSjfQMyZRcelT38yhZUiSti6KqljizjkWzVY\nkhFab3IXeW4m5uUv/N8J23h2tUhc4R3di1W5L3dvOMzY9cHeR4KucU3QA7TC/cUS\nQo+tdxj0HgXLMoTHUUeo2w7mX0NTeH7Evq3zEwWOJksAXgb4+8V5t/afBl1IC0gf\nNol/1iHkX6/49kSJ+0HoYEj7cPF8Il7IN55Xe/ZmsuucgjM6Wt3/ndJKmHyssDxA\npUnlK5Uj++039Q7SNRDtLoc8Y1LoL544bSADOMrRAXEKj4ACYNUs8I1pf80w8CTn\nHg7SEILesOqBMfYotz2pQ2x0KqfCOfetSe9YcZIu/Qdjx8qBm3a69Y6wSn40uIws\nW8lfEL+V2ltRsyCtmA1hNmreNc4tXtlXtWF6aZxT2wm97Gn8YjiQTEe7sfvNNcTH\nwP29KUofmIFtXCX2eMeqRWBhtqFE5uaDdI5UQyfjY9Au+Mc/d2WHMS1PGK/Z8NKy\n7huM24/yK7GxFbbPm3pZiWlV5kbl5f4bEPrBoqzdzoK0/N12UsfuWFV5m2YUIwW4\nBXaI26dzUM9Fc9ecbcoJXd7FzgmdKUi0/Gw7NYrbsL09zrAB+AQer602LHW1Aiqr\n93QkkB2ViWupYiGli2sC54qrAR4iEUATAk2AJIyXnjaI3DftExz/c4y8NuMwFXKc\nLxWHABEBAAGJAjwEGAEKACYCGwwWIQSp6pCBck/64EhMNaGoHOoivIx+LgUCXFwb\n4wUJDTUDlQAKCRCoHOoivIx+Lgf8D/0ZoaK2TUxsdcINtHxeKP8zIjnk1HJQxVDs\nLewL90rP/sqHplYdDItBHW3aQT+S82xmb2DaWcy1DJ+kDAPqKIEgYcIVCho+8dD/\nXwY3/vQQnRYt3thxj/REtLid97ldtWn0pw4f4sxwMbs0qXq/R9fnnoNXBBH6ctxA\n6dy4/QkBMY4LyaTnSYzvaB6JSwIC95MGl2/yn1WFCzdRPjxU1SLsSImCkBaG1uhK\nrX/rECSuQCktfG0hy+F2QqMxHofPonBUZTrfLchWHgqIzCx2JXXC0KsXjg7r+s4+\nm2krnB4jKOnyAaNmwhnOY+qqVcy/IvJsvOeOP1J6j2e7oTNtcrHb/tHxOhUVKiOo\nvzSoLB47PtnTv6cVtiBIOFKyfl1dS8Q+vPtRqvjWAW7vcAfygxXwvJUslGUMU46J\nvJwcFFE4RQk4Ixm69AabTCCwLUWV0Pnx3rTNJHMxl+qzpvVwVuogVydxH2oqvBTt\nBpCsfgrhH5gcYRozCBvLGDetFa9YaAV4ZvwGq3lhkFnI/h3EpIDGCeDTsJP4+C+n\nmI2wM/rXt3m1CpgeVKH87E2+vSOoliyqW/DnceBE8JHEwg3nWX50GI+iW0Vm8t2Z\n1Dx2TJsrJdXy2vHYZDFOCfnz4SO6IafJZOGMVHPGNHp2AWH5mY9ZYE2N52QMoyjk\n42IBCOLqCrkCDQRVFuFCARAA+tTCfBs+pRBg7lPr6DtI3SY4M+T5Ip2EQGuWS7t7\nriNP0rbtShc3x1GBokVNEOTOe6n28DTI0TA8D7Wa6WefKnBbDQPVe7AgWCC11gYX\nXIqcRIPlnvW7X8hZn6Fw/b+ep9Fnw6piihRk5fnYyspDBTRE/1DBBzHqOPfepHgI\nzh7qVe8MCfTdpRYsHXZEa9o0WYLoRXeg+yFvKmjj8+Bm4OyLQ5vN7uDqDT3ph8av\nM7RQvvqLZrXhycWuq4btT6Ba9oMZ10UzUF/HXaLgakscDX6FzBwgv2/lVauh3ie4\nJ+Au0lA4hYHCVhNZGgLsGG6aoMEDA2Ab6vLqVIeOj7dbOXLq5wLMJlywAZwtnoSn\nzxyPPKQarCl30lYDaXFakFGZpI10nRrRSy2acRcpuS5662cnU8kZzVl9mbxyrEpI\nzkc54ND+UzHvW6FVKqJLB/y2rQ6ZRE6cLahwO74LZoDc48JpVkdXCkz+F2yI4ust\nWcv0vdUQ+mLHbjUof6zGLcTVRMpteFpIozB6giF1ohayoNAgwywk69tMThNa5O4J\n405dDPDO4lNyl7nGLlxyL0oua16ibpz2WfYUsPsJmRJnB+8KZ5SzIGW7D/aprhYp\norYdpz6qynPtDmkD7zl5RHQCb8PqgrkkHPVVrdjHC7UdP/CcXjq1KIuKEG446xJI\nTXcAEQEAAYkCPAQYAQoAJgIbIBYhBKnqkIFyT/rgSEw1oagc6iK8jH4uBQJcXBvk\nBQkM6NUhAAoJEKgc6iK8jH4uEfoQALPHThbHLBEZ1ueHAnyamgz3kKC7KW4HkwgG\npTvJ/r3cqdt8SBcdPamWORK95HKq1VahEW6yqWSVrsbYxqdXl/mI2mNIJxRBiM/h\nwOuZVLSNpK4Ou/XRz3NMFllZBJtJS6JGGpRtnhGQKrvkw04UtITpDahDlweVdart\nE0FaB89TagWZy7oH32M5wzHqUHSNnOfQR5VpttRBVkuqnN4xRePjJvjJae31LsAq\njOrJcME08Y8zG10p3Pm6x0lOvrM9nf/MMYGEaMhGQFp4XhvQ6hi736nFyyQD6uHU\nvw140+Y51kHMbceKjaoju9qHNzddmhFAL+YMZL0dtNk9F4kDpTCfMNgft4Y0IUQT\nlYAkMDxdYK1l+jYTFrsDZhw5GV1kYQo2s3j66rT+SHlXY8SbyE33Hm544WxAbCGE\ndB/H7ADaQhbFobXalTb+/QfWE2FkAYTvgiRhEhfhdr0ed2zHoolIF+zDWu58D61T\nQj0xx1/+PbaVq4NQAWigimRfhYEJjo0dJCYUFOI9mces4Fh0aUGpB0lyvBub6zWc\nQkHM/2NSsGLWIxCOjxR1qjMdM3cfTQe6BX1ZoE4hjQf1tolhDT3rUx032x4QH1wt\n5CdP4/Wz2Mn8oGCPvRwCNzYLjT/h2V3BFqIcbwNpfiLFMGtEYf0VD6Po5y2uxHNB\nV4vxw1Q7uQINBFUXAM0BEADWd0Gq5bkX2WVMfwI8EQTnuJBRgJLmaLb8INg/Iykr\nztnx0t/D5bxZ7SMmycRpvKEEwST2NMzutPt4bxrbNx5FAAslzy93bd1mHH0r2xQh\nM/NKSNHsYOtpoeyf7vcRPaBkCqu6UzeWCrYcFzbrEDmMqKoeAekSWFyij/1Sm0hP\nYWK9qHYG7dhqS+t5rq0IGuX2LhcSbDubHysCZLvJxWzZspudrFgGkCX68oS94uy3\nERgrUUt9QFweWueC6XJxj+FIlK/1j3ZgKUnJZ13iRXrz2vOr84C82MLpAw/HPmcU\n73qZM5V0+RFCKRP4ISKeGhrLFSMVOLVkyNHYYBq+0os21VIGBA/L2kWv1Gy/MnPD\nyI4p05zzwXUu6f3iAwPqwwRqA+/gj2J5YooZa1mPGUutkz3KmKWymTBlbdr1MR/l\ndnuUAwdgXdOEj/YPskb8VsVzyEjyNpaPTQW1KmsWDJPztuQ/6cAPXCeaECL/110M\nTFY1esS4SM7zd75Rgg1w68hFm0D1TotmuPVW59DN2TzjVUCamOVgMSEfUBERGo00\nPHuGYqDlVt+gLeyOM/WOLJizTEAJEUVpR9tRspFHf9nXIOJdSaoL4opXtLog5nVB\n2sqT9qt9qPtBPbQiHJXimv5rBpjaPeBZA+RxolTMpPkFsSXVkNcvhx3P/uKvD9um\n0QARAQABiQRbBBgBCgAmAhsCFiEEqeqQgXJP+uBITDWhqBzqIryMfi4FAlxcG+QF\nCQzotZYCKcFdIAQZAQgABgUCVRcAzQAKCRAoa/fvzXckHteED/9mP07v96WdQwx/\noNJ2gCAmee43Xll5kLVa4TCuYLI+iPtLt1gKrtViw+M+oYhst5KT2jlfaj6T0GpD\nbbpqBGCzJ2Eas0dsnJRtN6zuvXX+tYWe28/PCEuB9QSOHqkVPG84aabqAsletGhW\nTKHWTQf7Aa1xlXgdBJ8NkZBUkwWQ5MGkKS0BP7xvaK6z5nOZSPskpodhKl51d4IR\ngWwK+j0tKdgsDqSjeSOfw2eM7/z4kSzDTsdxoBWvskaSQtMnw9qibfUrI5zgi/Yc\nkh2ModEoxdIAQWEtKR0dEHwVhOId76lq19sS6I4MKTfHZ7xGnXTozbeqjcTX0edA\n031aFC4XGpDTDlyA/XXABu97582NOvXLkPMcj/N8/P0MWJgtwJHMNwDqBHCsZmSy\nK7ZKHLC71yh5mUCSnLiu0cz/7rLB+VHI+SwPXBO8iPCZAupmf+cyICkINFCwgFyu\nLKYYARhSr6LqbOzo/ekQvz8b9q73ODqvhEN0T945AJdAt2BPtzb0LYOBaAxdEZsu\n2BcnWE+xERVK7mSeGHmfnh6smEZSx6uRawMYm6Y/YLtzQp6iBTqtNwYryl+PbRJ1\nv28e5ispmylCrRyb0CSgNqKbQufhKO71+peBBytb0Nj9VUYXGYe7vHCeZxgvTUnP\nbHoVjUXZSu+Tiu1Gky1EOFtEW/Se8QkQqBzqIryMfi7vyQ//Ttd4ZNBdaZkMYQh+\nCP3WsuXD4Vip8Gh+tcg/+zJMDWqkgoW9OOkWh1MjxJBSBjSLqm8e23GrgJrHdRBm\nfR6WbMCXST5ZmRzEN2MZ9DPFGKuzOe1BeWx3hFc6crCB7h5/I3yiiMhagF/kCiZz\nzQu4Ebcc8gzRH65BbBHbathVWF4EmP4ZUy2hPOspwMClCmGsqVY1zt4KPp1BeB/Y\ngZ5eL1kdLuvCRQkFglPNELDgziKREJYO89g8f6V6teJDy+l6DtuzwnkO3BT1PntQ\n17I8etv3lgGfL42q1QUjhXn0ER6cfWOEeD36MThkZ6WTdtZ+45ROZsvCSl9BlE05\nhT13mBluscvxu0bo1ReAFYG2aHG05mZ/2qyoVY1eJa+Eq/rDhdJP5E8IhDfr/kCm\nAhcpb/916Jc0BTSpinIcuWMQaeWtpwz332Pa87M3SLLm0p390p9R7P+OI2FYVMYU\n/6dEqz9vrsTWaBLZV8bnItjn6r2MOXn7bGD6HW6euE78Bt+/Q9N/D53cgw3HGaDE\n0JqFt4gzT9d7D+jCYy3K5uAWBnKjua3mwMcBnO4GmQwVLauWex8BARlYpBoqqL/V\n5CorLVbhjFLWAiy1GsX4RM9RksG9TN8CMvNp1ZTpnqouwEuTmrWKwdQek1rPBRj0\nXNBso9Rw94Z5NVIXEcH3O44UsWI=\n=AXgM\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n</details>\n"
        },
        {
          "name": "SupportedPlatforms.md",
          "type": "blob",
          "size": 1.93359375,
          "content": "libzmq supports a large variety of platforms. The list of platforms can be found in the [README](README.md#platforms).\nThe degree to which this support is tested varies.\n\nPlatforms are currently assigned to one of the following categories:\n- supported platforms with primary CI (travis-ci.org, appveyor.com): https://travis-ci.org/zeromq/libzmq, https://ci.appveyor.com/project/zeromq/libzmq\n- supported platforms with secondary CI (openSUSE Build Service): https://build.opensuse.org/project/subprojects/network:messaging:zeromq\n- supported platforms with known active users\n- supported platforms without known active users\n- unsupported platforms\n\nSupported platforms with primary CI\n- have builds and tests run for the master branch\n- have builds and tests run for every pull request\n- it is a precondition for merging a pull request that no builds or tests of these platforms are broken\n- contributors can easily enable these builds and tests for their branches in their fork\n\nSupported platforms with secondary CI\n- have builds and tests run for the master branch\n- these are monitored periodically by the project maintainers, and efforts are made to fix any broken builds or tests in a timely manner\n- it is a precondition for a release that no builds or tests of these platforms are broken\n\nSupported platforms with known active users\n- have recently been reported to the maintainers (e.g. via pull requests modifying this document) as having working builds and possibly tests\n\nSupported platforms without known active users\n- have some platform-specific code within libzmq, but it is not known if it is still working\n- have been reported to the maintainers as having working builds and possibly tests only significant time/changes ago \n- or are assumed to work due to similarity to the above platforms\n\nUnsupported platforms\n- are either reported to be non-working for some reason that is not trivial to fix or are explicitly missing some required platform-specific code\n\n"
        },
        {
          "name": "acinclude.m4",
          "type": "blob",
          "size": 50.9599609375,
          "content": "dnl ##############################################################################\ndnl # LIBZMQ_CONFIG_LIBTOOL                                                      #\ndnl # Configure libtool. Requires AC_CANONICAL_HOST                              #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CONFIG_LIBTOOL],  [{\n    AC_REQUIRE([AC_CANONICAL_HOST])\n\n    # Libtool configuration for different targets\n    case \"${host_os}\" in\n        *mingw*|*cygwin*|*msys*)\n            # Disable static build by default\n            AC_DISABLE_STATIC\n        ;;\n        *)\n            # Everything else with static enabled\n            AC_ENABLE_STATIC\n        ;;\n    esac\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_LANG_ICC([action-if-found], [action-if-not-found])            #\ndnl # Check if the current language is compiled using ICC                        #\ndnl # Adapted from http://software.intel.com/en-us/forums/showthread.php?t=67984 #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_ICC],\n          [AC_CACHE_CHECK([whether we are using Intel _AC_LANG compiler],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler],\n          [_AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],\n[[#ifndef __INTEL_COMPILER\n       error if not ICC\n#endif\n]])],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler=\"yes\" ; $1],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler=\"no\" ; $2])\n])])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_LANG_SUN_STUDIO([action-if-found], [action-if-not-found])     #\ndnl # Check if the current language is compiled using Sun Studio                 #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_SUN_STUDIO],\n          [AC_CACHE_CHECK([whether we are using Sun Studio _AC_LANG compiler],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler],\n          [_AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],\n[[#if !defined(__SUNPRO_CC) && !defined(__SUNPRO_C)\n       error if not sun studio\n#endif\n]])],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler=\"yes\" ; $1],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler=\"no\" ; $2])\n])])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_LANG_CLANG([action-if-found], [action-if-not-found])          #\ndnl # Check if the current language is compiled using clang                      #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_CLANG],\n          [AC_CACHE_CHECK([whether we are using clang _AC_LANG compiler],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler],\n          [_AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],\n[[#ifndef __clang__\n       error if not clang\n#endif\n]])],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler=\"yes\" ; $1],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler=\"no\" ; $2])\n])])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_LANG_GCC4([action-if-found], [action-if-not-found])           #\ndnl # Check if the current language is compiled using clang                      #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_GCC4],\n          [AC_CACHE_CHECK([whether we are using gcc >= 4 _AC_LANG compiler],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_gcc4_compiler],\n          [_AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],\n[[#if (!defined __GNUC__ || __GNUC__ < 4)\n       error if not gcc4 or higher\n#endif\n]])],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_gcc4_compiler=\"yes\" ; $1],\n          [libzmq_cv_[]_AC_LANG_ABBREV[]_gcc4_compiler=\"no\" ; $2])\n])])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_DOC_BUILD                                                     #\ndnl # Check whether to build documentation and install man-pages                 #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_DOC_BUILD], [{\n\n    # Man pages are built/installed if asciidoctor and xmlto are present\n    #   --with-docs=no overrides this\n    AC_ARG_WITH([docs],\n        AS_HELP_STRING([--without-docs],\n            [Don't build and install man pages [default=build]]),\n        [with_docs=$withval])\n    AC_ARG_WITH([documentation], [AS_HELP_STRING([--without-documentation],\n        [Don't build and install man pages [default=build] DEPRECATED: use --without-docs])])\n\n    if test \"x$with_documentation\" = \"xno\"; then\n        AC_MSG_WARN([--without-documentation is DEPRECATED and will be removed in the next release, use --without-docs])\n    fi\n    if test \"x$with_docs\" = \"xno\" || test \"x$with_documentation\" = \"xno\"; then\n        libzmq_build_doc=\"no\"\n        libzmq_install_man=\"no\"\n    else\n        # Determine whether or not documentation should be built and installed.\n        libzmq_build_doc=\"yes\"\n        libzmq_install_man=\"yes\"\n        # Check for asciidoc and xmlto and don't build the docs if these are not installed.\n        AC_CHECK_PROG(libzmq_have_asciidoctor, asciidoctor, yes, no)\n        if test \"x$libzmq_have_asciidoctor\" = \"xno\"; then\n            libzmq_build_doc=\"no\"\n            # Tarballs built with 'make dist' ship with prebuilt documentation.\n            if ! test -f doc/zmq.7; then\n                libzmq_install_man=\"no\"\n                AC_MSG_WARN([You are building an unreleased version of 0MQ and asciidoctor is not installed.])\n                AC_MSG_WARN([Documentation will not be built and manual pages will not be installed.])\n            fi\n        fi\n\n        # Do not install man pages if on mingw\n        if test \"x$libzmq_on_mingw\" = \"xyes\"; then\n            libzmq_install_man=\"no\"\n        fi\n    fi\n\n    AC_MSG_CHECKING([whether to build documentation])\n    AC_MSG_RESULT([$libzmq_build_doc])\n\n    AC_MSG_CHECKING([whether to install manpages])\n    AC_MSG_RESULT([$libzmq_install_man])\n\n    AM_CONDITIONAL(BUILD_DOC, test \"x$libzmq_build_doc\" = \"xyes\")\n    AM_CONDITIONAL(INSTALL_MAN, test \"x$libzmq_install_man\" = \"xyes\")\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_LANG_COMPILER([action-if-found], [action-if-not-found])       #\ndnl # Check that compiler for the current language actually works                #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_COMPILER], [{\n    # Test that compiler for the current language actually works\n    AC_CACHE_CHECK([whether the _AC_LANG compiler works],\n                   [libzmq_cv_[]_AC_LANG_ABBREV[]_compiler_works],\n                   [AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],\n                   [libzmq_cv_[]_AC_LANG_ABBREV[]_compiler_works=\"yes\" ; $1],\n                   [libzmq_cv_[]_AC_LANG_ABBREV[]_compiler_works=\"no\" ; $2])\n                   ])\n\n    if test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_compiler_works\" != \"xyes\"; then\n        AC_MSG_ERROR([Unable to find a working _AC_LANG compiler])\n    fi\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_COMPILERS                                                     #\ndnl # Check compiler characteristics. This is so that we can AC_REQUIRE checks   #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_COMPILERS], [{\n    # For that the compiler works and try to come up with the type\n    AC_LANG_PUSH([C])\n    LIBZMQ_CHECK_LANG_COMPILER\n\n    LIBZMQ_CHECK_LANG_ICC\n    LIBZMQ_CHECK_LANG_SUN_STUDIO\n    LIBZMQ_CHECK_LANG_CLANG\n    LIBZMQ_CHECK_LANG_GCC4\n    AC_LANG_POP([C])\n\n    AC_LANG_PUSH(C++)\n    LIBZMQ_CHECK_LANG_COMPILER\n\n    LIBZMQ_CHECK_LANG_ICC\n    LIBZMQ_CHECK_LANG_SUN_STUDIO\n    LIBZMQ_CHECK_LANG_CLANG\n    LIBZMQ_CHECK_LANG_GCC4\n    AC_LANG_POP([C++])\n\n    # Set GCC and GXX variables correctly\n    if test \"x$GCC\" = \"xyes\"; then\n        if test \"xyes\" = \"x$libzmq_cv_c_intel_compiler\"; then\n            GCC=\"no\"\n        fi\n    fi\n\n    if test \"x$GXX\" = \"xyes\"; then\n        if test \"xyes\" = \"x$libzmq_cv_cxx_intel_compiler\"; then\n            GXX=\"no\"\n        fi\n    fi\n}])\n\ndnl ############################################################################\ndnl # LIBZMQ_CHECK_LANG_FLAG([flag], [action-if-found], [action-if-not-found]) #\ndnl # Check if the compiler supports given flag. Works for C and C++           #\ndnl # Sets libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_[FLAG]=yes/no           #\ndnl ############################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_FLAG], [{\n\n    AC_REQUIRE([AC_PROG_GREP])\n\n    AC_MSG_CHECKING([whether _AC_LANG compiler supports $1])\n\n    libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag_save=$ac_[]_AC_LANG_ABBREV[]_werror_flag\n    ac_[]_AC_LANG_ABBREV[]_werror_flag=\"yes\"\n\n    case \"x[]_AC_LANG_ABBREV\" in\n        xc)\n            libzmq_cv_check_lang_flag_save_CFLAGS=\"$CFLAGS\"\n            CFLAGS=\"$CFLAGS $1\"\n        ;;\n        xcxx)\n            libzmq_cv_check_lang_flag_save_CPPFLAGS=\"$CPPFLAGS\"\n            CPPFLAGS=\"$CPPFLAGS $1\"\n        ;;\n        *)\n            AC_MSG_WARN([testing compiler characteristic on an unknown language])\n        ;;\n    esac\n\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n                      # This hack exist for ICC, which outputs unknown options as remarks\n                      # Remarks are not turned into errors even with -Werror on\n                      [if ($GREP 'ignoring unknown' conftest.err ||\n                           $GREP 'not supported' conftest.err) >/dev/null 2>&1; then\n                           eval AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)=\"no\"\n                       else\n                           eval AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)=\"yes\"\n                       fi],\n                      [eval AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)=\"no\"])\n\n    case \"x[]_AC_LANG_ABBREV\" in\n        xc)\n            CFLAGS=\"$libzmq_cv_check_lang_flag_save_CFLAGS\"\n        ;;\n        xcxx)\n            CPPFLAGS=\"$libzmq_cv_check_lang_flag_save_CPPFLAGS\"\n        ;;\n        *)\n            # nothing to restore\n        ;;\n    esac\n\n    # Restore the werror flag\n    ac_[]_AC_LANG_ABBREV[]_werror_flag=$libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag_save\n\n    # Call the action as the flags are restored\n    AS_IF([eval test x$]AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)[ = \"xyes\"],\n          [AC_MSG_RESULT(yes) ; $2], [AC_MSG_RESULT(no) ; $3])\n\n}])\n\ndnl ####################################################################################\ndnl # LIBZMQ_CHECK_LANG_FLAG_PREPEND([flag], [action-if-found], [action-if-not-found]) #\ndnl # Check if the compiler supports given flag. Works for C and C++                   #\ndnl # This macro prepends the flag to CFLAGS or CPPFLAGS accordingly                   #\ndnl # Sets libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_[FLAG]=yes/no                   #\ndnl ####################################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_FLAG_PREPEND], [{\n    LIBZMQ_CHECK_LANG_FLAG([$1])\n    case \"x[]_AC_LANG_ABBREV\" in\n       xc)\n            AS_IF([eval test x$]AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)[ = \"xyes\"],\n                  [CFLAGS=\"$1 $CFLAGS\"; $2], $3)\n       ;;\n       xcxx)\n            AS_IF([eval test x$]AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_flag_$1)[ = \"xyes\"],\n                  [CPPFLAGS=\"$1 $CPPFLAGS\"; $2], $3)\n       ;;\n    esac\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_ENABLE_DEBUG([action-if-found], [action-if-not-found])        #\ndnl # Check whether to enable debug build and set compiler flags accordingly     #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_ENABLE_DEBUG], [{\n\n    # Require compiler specifics\n    AC_REQUIRE([LIBZMQ_CHECK_COMPILERS])\n\n    # This flag is checked also in\n    AC_ARG_ENABLE([debug], [AS_HELP_STRING([--enable-debug],\n        [enable debugging information [default=disabled]])])\n\n    AC_MSG_CHECKING(whether to enable debugging information)\n\n    if test \"x$enable_debug\" = \"xyes\"; then\n\n        # GCC, clang and ICC\n        if test \"x$GCC\" = \"xyes\" -o \\\n                \"x$libzmq_cv_c_intel_compiler\" = \"xyes\" -o \\\n                \"x$libzmq_cv_c_clang_compiler\" = \"xyes\"; then\n            CFLAGS=\"-g -O0 \"\n        elif test \"x$libzmq_cv_c_sun_studio_compiler\" = \"xyes\"; then\n            CFLAGS=\"-g0 \"\n        fi\n\n        # GCC, clang and ICC\n        if test \"x$GXX\" = \"xyes\" -o \\\n                \"x$libzmq_cv_cxx_intel_compiler\" = \"xyes\" -o \\\n                \"x$libzmq_cv_cxx_clang_compiler\" = \"xyes\"; then\n            CPPFLAGS=\"-g -O0 \"\n            CXXFLAGS=\"-g -O0 \"\n        # Sun studio\n        elif test \"x$libzmq_cv_cxx_sun_studio_compiler\" = \"xyes\"; then\n            CPPFLAGS=\"-g0 \"\n            CXXFLAGS=\"-g0 \"\n        fi\n\n        if test \"x$ZMQ_ORIG_CFLAGS\" != \"xnone\"; then\n            CFLAGS=\"${CFLAGS} ${ZMQ_ORIG_CFLAGS}\"\n        fi\n        if test \"x$ZMQ_ORIG_CPPFLAGS\" != \"xnone\"; then\n            CPPFLAGS=\"${CPPFLAGS} ${ZMQ_ORIG_CPPFLAGS}\"\n        fi\n        if test \"x$ZMQ_ORIG_CXXFLAGS\" != \"xnone\"; then\n            CXXFLAGS=\"${CXXFLAGS} ${ZMQ_ORIG_CXXFLAGS}\"\n        fi\n        AC_MSG_RESULT(yes)\n    else\n        AC_MSG_RESULT(no)\n    fi\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_WITH_GCOV([action-if-found], [action-if-not-found])                 #\ndnl # Check whether to build with code coverage                                  #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_WITH_GCOV], [{\n    # Require compiler specifics\n    AC_REQUIRE([LIBZMQ_CHECK_COMPILERS])\n\n    AC_ARG_WITH(gcov, [AS_HELP_STRING([--with-gcov=yes/no],\n                      [with GCC Code Coverage reporting.])],\n                      [ZMQ_GCOV=\"$withval\"])\n\n    AC_MSG_CHECKING(whether to enable code coverage)\n\n    if test \"x$ZMQ_GCOV\" = \"xyes\"; then\n\n        if test \"x$GXX\" != \"xyes\"; then\n            AC_MSG_ERROR([--with-gcov=yes works only with GCC])\n        fi\n\n        CFLAGS=\"-g -O0 -fprofile-arcs -ftest-coverage\"\n        if test \"x${ZMQ_ORIG_CPPFLAGS}\" != \"xnone\"; then\n            CFLAGS=\"${CFLAGS} ${ZMQ_ORIG_CFLAGS}\"\n        fi\n\n        CPPFLAGS=\"-g -O0 -fprofile-arcs -ftest-coverage\"\n        if test \"x${ZMQ_ORIG_CPPFLAGS}\" != \"xnone\"; then\n            CPPFLAGS=\"${CPPFLAGS} ${ZMQ_ORIG_CPPFLAGS}\"\n        fi\n\n        CXXFLAGS=\"-fprofile-arcs\"\n        if test \"x${ZMQ_ORIG_CXXFLAGS}\" != \"xnone\"; then\n            CXXFLAGS=\"${CXXFLAGS} ${ZMQ_ORIG_CXXFLAGS}\"\n        fi\n\n        LIBS=\"-lgcov ${LIBS}\"\n    fi\n\n    AS_IF([test \"x$ZMQ_GCOV\" = \"xyes\"],\n          [AC_MSG_RESULT(yes) ; $1], [AC_MSG_RESULT(no) ; $2])\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_WITH_FLAG([flags], [macro])                                   #\ndnl # Runs a normal autoconf check with compiler flags                           #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_WITH_FLAG], [{\n    libzmq_check_with_flag_save_CFLAGS=\"$CFLAGS\"\n    libzmq_check_with_flag_save_CPPFLAGS=\"$CPPFLAGS\"\n\n    CFLAGS=\"$CFLAGS $1\"\n    CPPFLAGS=\"$CPPFLAGS $1\"\n\n    # Execute the macro\n    $2\n\n    CFLAGS=\"$libzmq_check_with_flag_save_CFLAGS\"\n    CPPFLAGS=\"$libzmq_check_with_flag_save_CPPFLAGS\"\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_LANG_WALL([action-if-found], [action-if-not-found])                 #\ndnl # How to define -Wall for the current compiler                               #\ndnl # Sets libzmq_cv_[]_AC_LANG_ABBREV[]__wall_flag variable to found style      #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_LANG_WALL], [{\n\n    AC_MSG_CHECKING([how to enable additional warnings for _AC_LANG compiler])\n\n    libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag=\"\"\n\n    # C compilers\n    case \"x[]_AC_LANG_ABBREV\" in\n       xc)\n            # GCC, clang and ICC\n            if test \"x$GCC\" = \"xyes\" -o \\\n                    \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\" -o \\\n                    \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag=\"-Wall\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag=\"-v\"\n            fi\n       ;;\n       xcxx)\n            # GCC, clang and ICC\n            if test \"x$GXX\" = \"xyes\" -o \\\n                    \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\" -o \\\n                    \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag=\"-Wall\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag=\"+w\"\n            fi\n       ;;\n       *)\n       ;;\n    esac\n\n    # Call the action\n    if test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag\" != \"x\"; then\n        AC_MSG_RESULT([$libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag])\n        $1\n    else\n        AC_MSG_RESULT([not found])\n        $2\n    fi\n}])\n\ndnl ####################################################################\ndnl # LIBZMQ_LANG_STRICT([action-if-found], [action-if-not-found])     #\ndnl # Check how to turn on strict standards compliance                 #\ndnl ####################################################################\nAC_DEFUN([LIBZMQ_LANG_STRICT], [{\n    AC_MSG_CHECKING([how to enable strict standards compliance in _AC_LANG compiler])\n\n    libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"\"\n\n    # C compilers\n    case \"x[]_AC_LANG_ABBREV\" in\n       xc)\n            # GCC, clang and ICC\n            if test \"x$GCC\" = \"xyes\" -o \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-pedantic\"\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-strict-ansi\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-Xc\"\n            fi\n       ;;\n       xcxx)\n            # GCC, clang and ICC\n            if test \"x$GXX\" = \"xyes\" -o \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-pedantic\"\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-strict-ansi\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag=\"-compat=5\"\n            fi\n       ;;\n       *)\n       ;;\n    esac\n\n    # Call the action\n    if test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag\" != \"x\"; then\n        AC_MSG_RESULT([$libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag])\n        $1\n    else\n        AC_MSG_RESULT([not found])\n        $2\n    fi\n}])\n\ndnl ########################################################################\ndnl # LIBZMQ_LANG_WERROR([action-if-found], [action-if-not-found])         #\ndnl # Check how to turn warnings to errors                                 #\ndnl ########################################################################\nAC_DEFUN([LIBZMQ_LANG_WERROR], [{\n    AC_MSG_CHECKING([how to turn warnings to errors in _AC_LANG compiler])\n\n    libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag=\"\"\n\n    # C compilers\n    case \"x[]_AC_LANG_ABBREV\" in\n       xc)\n            # GCC, clang and ICC\n            if test \"x$GCC\" = \"xyes\" -o \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag=\"-Werror\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag=\"-errwarn=%all\"\n            fi\n       ;;\n       xcxx)\n            # GCC, clang and ICC\n            if test \"x$GXX\" = \"xyes\" -o \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag=\"-Werror\"\n            # Sun studio\n            elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n                libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag=\"-errwarn=%all\"\n            fi\n       ;;\n       *)\n       ;;\n    esac\n\n    # Call the action\n    if test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag\" != \"x\"; then\n        AC_MSG_RESULT([$libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag])\n        $1\n    else\n        AC_MSG_RESULT([not found])\n        $2\n    fi\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_LANG_PRAGMA([pragma], [action-if-found], [action-if-not-found]) #\ndnl # Check if the compiler supports given pragma                                  #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_PRAGMA], [{\n    # Need to know how to enable all warnings\n    LIBZMQ_LANG_WALL\n\n    AC_MSG_CHECKING([whether _AC_LANG compiler supports pragma $1])\n\n    # Save flags\n    libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag_save=$ac_[]_AC_LANG_ABBREV[]_werror_flag\n    ac_[]_AC_LANG_ABBREV[]_werror_flag=\"yes\"\n\n    if test \"x[]_AC_LANG_ABBREV\" = \"xc\"; then\n        libzmq_cv_check_lang_pragma_save_CFLAGS=\"$CFLAGS\"\n        CFLAGS=\"$CFLAGS $libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag\"\n    elif test \"x[]_AC_LANG_ABBREV\" = \"xcxx\"; then\n        libzmq_cv_check_lang_pragma_save_CPPFLAGS=\"$CPPFLAGS\"\n        CPPFLAGS=\"$CPPFLAGS $libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag\"\n    else\n        AC_MSG_WARN([testing compiler characteristic on an unknown language])\n    fi\n\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [[#pragma $1]])],\n                      [eval AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_pragma_$1)=\"yes\" ; AC_MSG_RESULT(yes)],\n                      [eval AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_pragma_$1)=\"no\" ; AC_MSG_RESULT(no)])\n\n    if test \"x[]_AC_LANG_ABBREV\" = \"xc\"; then\n        CFLAGS=\"$libzmq_cv_check_lang_pragma_save_CFLAGS\"\n    elif test \"x[]_AC_LANG_ABBREV\" = \"xcxx\"; then\n        CPPFLAGS=\"$libzmq_cv_check_lang_pragma_save_CPPFLAGS\"\n    fi\n\n    ac_[]_AC_LANG_ABBREV[]_werror_flag=$libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag_save\n\n    # Call the action as the flags are restored\n    AS_IF([eval test x$]AS_TR_SH(libzmq_cv_[]_AC_LANG_ABBREV[]_supports_pragma_$1)[ = \"xyes\"],\n          [$2], [$3])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_LANG_VISIBILITY([action-if-found], [action-if-not-found])       #\ndnl # Check if the compiler supports dso visibility                                #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_LANG_VISIBILITY], [{\n\n    libzmq_cv_[]_AC_LANG_ABBREV[]_visibility_flag=\"\"\n\n    if test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\" -o \\\n            \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_clang_compiler\" = \"xyes\" -o \\\n            \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_gcc4_compiler\" = \"xyes\"; then\n        LIBZMQ_CHECK_LANG_FLAG([-fvisibility=hidden],\n                               [libzmq_cv_[]_AC_LANG_ABBREV[]_visibility_flag=\"-fvisibility=hidden\"])\n    elif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n        LIBZMQ_CHECK_LANG_FLAG([-xldscope=hidden],\n                               [libzmq_cv_[]_AC_LANG_ABBREV[]_visibility_flag=\"-xldscope=hidden\"])\n    fi\n\n    AC_MSG_CHECKING(whether _AC_LANG compiler supports dso visibility)\n\n    AS_IF([test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_visibility_flag\" != \"x\"],\n          [AC_MSG_RESULT(yes) ; $1], [AC_MSG_RESULT(no) ; $2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_SOCK_CLOEXEC([action-if-found], [action-if-not-found])          #\ndnl # Check if SOCK_CLOEXEC is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_SOCK_CLOEXEC], [{\n    AC_CACHE_CHECK([whether SOCK_CLOEXEC is supported], [libzmq_cv_sock_cloexec],\n        [AC_TRY_RUN([/* SOCK_CLOEXEC test */\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint main (int argc, char *argv [])\n{\n    int s = socket (PF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);\n    return (s == -1);\n}\n        ],\n        [libzmq_cv_sock_cloexec=\"yes\"],\n        [libzmq_cv_sock_cloexec=\"no\"],\n        [libzmq_cv_sock_cloexec=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_sock_cloexec\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_O_CLOEXEC([action-if-found], [action-if-not-found])          #\ndnl # Check if O_CLOEXEC is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_O_CLOEXEC], [{\n    AC_CACHE_CHECK([whether O_CLOEXEC is supported], [libzmq_cv_o_cloexec],\n        [AC_TRY_RUN([/* O_CLOEXEC test */\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\nint main (int argc, char *argv [])\n{\n    int s = open (\"/dev/null\", O_CLOEXEC | O_RDONLY);\n    return (s == -1);\n}\n        ],\n        [libzmq_cv_o_cloexec=\"yes\"],\n        [libzmq_cv_o_cloexec=\"no\"],\n        [libzmq_cv_o_cloexec=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_o_cloexec\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_EVENTFD_CLOEXEC([action-if-found], [action-if-not-found])          #\ndnl # Check if EFD_CLOEXEC is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_EVENTFD_CLOEXEC], [{\n    AC_CACHE_CHECK([whether EFD_CLOEXEC is supported], [libzmq_cv_efd_cloexec],\n        [AC_TRY_RUN([/* EFD_CLOEXEC test */\n#include <sys/eventfd.h>\n\nint main (int argc, char *argv [])\n{\n    int s = eventfd (0, EFD_CLOEXEC);\n    return (s == -1);\n}\n        ],\n        [libzmq_cv_efd_cloexec=\"yes\"],\n        [libzmq_cv_efd_cloexec=\"no\"],\n        [libzmq_cv_efd_cloexec=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_efd_cloexec\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_ATOMIC_INSTRINSICS([action-if-found], [action-if-not-found])    #\ndnl # Check if compiler supoorts __atomic_Xxx intrinsics                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_ATOMIC_INTRINSICS], [{\n    AC_MSG_CHECKING(whether compiler supports __atomic_Xxx intrinsics)\n    AC_LINK_IFELSE([AC_LANG_SOURCE([\n/* atomic intrinsics test */\nint v = 0;\nint main (int, char **)\n{\n    int t = __atomic_add_fetch (&v, 1, __ATOMIC_ACQ_REL);\n    return t;\n}\n    ])],\n    [AC_MSG_RESULT(yes) ; GCC_ATOMIC_BUILTINS_SUPPORTED=1 libzmq_cv_has_atomic_instrisics=\"yes\" ; $1])\n\n    if test \"x$GCC_ATOMIC_BUILTINS_SUPPORTED\" != x1; then\n        save_LIBS=$LIBS\n        LIBS=\"$LIBS -latomic\"\n        AC_LINK_IFELSE([AC_LANG_SOURCE([\n        /* atomic intrinsics test */\n        int v = 0;\n        int main (int, char **)\n        {\n            int t = __atomic_add_fetch (&v, 1, __ATOMIC_ACQ_REL);\n            return t;\n        }\n        ])],\n        [AC_MSG_RESULT(yes) ; libzmq_cv_has_atomic_instrisics=\"yes\" PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -latomic\" ; $1],\n        [AC_MSG_RESULT(no) ; libzmq_cv_has_atomic_instrisics=\"no\" LIBS=$save_LIBS ; $2])\n    fi\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_SO_BINDTODEVICE([action-if-found], [action-if-not-found])          #\ndnl # Check if SO_BINDTODEVICE is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_SO_BINDTODEVICE], [{\n    AC_CACHE_CHECK([whether SO_BINDTODEVICE is supported], [libzmq_cv_so_bindtodevice],\n        [AC_TRY_RUN([/* SO_BINDTODEVICE test */\n#include <sys/socket.h>\n\nint main (int argc, char *argv [])\n{\n/* Actually making the setsockopt() call requires CAP_NET_RAW */\n#ifndef SO_BINDTODEVICE\n    return 1;\n#else\n    return 0;\n#endif\n}\n        ],\n        [libzmq_cv_so_bindtodevice=\"yes\"],\n        [libzmq_cv_so_bindtodevice=\"no\"],\n        [libzmq_cv_so_bindtodevice=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_so_bindtodevice\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_SO_KEEPALIVE([action-if-found], [action-if-not-found])          #\ndnl # Check if SO_KEEPALIVE is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_SO_KEEPALIVE], [{\n    AC_CACHE_CHECK([whether SO_KEEPALIVE is supported], [libzmq_cv_so_keepalive],\n        [AC_TRY_RUN([/* SO_KEEPALIVE test */\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_KEEPALIVE, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_so_keepalive=\"yes\"],\n        [libzmq_cv_so_keepalive=\"no\"],\n        [libzmq_cv_so_keepalive=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_so_keepalive\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_TCP_KEEPCNT([action-if-found], [action-if-not-found])           #\ndnl # Check if TCP_KEEPCNT is supported                                            #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_TCP_KEEPCNT], [{\n    AC_CACHE_CHECK([whether TCP_KEEPCNT is supported], [libzmq_cv_tcp_keepcnt],\n        [AC_TRY_RUN([/* TCP_KEEPCNT test */\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netinet/tcp.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_KEEPALIVE, (char*) &opt, sizeof (int))) == -1) ||\n        ((rc = setsockopt (s, IPPROTO_TCP, TCP_KEEPCNT, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_tcp_keepcnt=\"yes\"],\n        [libzmq_cv_tcp_keepcnt=\"no\"],\n        [libzmq_cv_tcp_keepcnt=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_tcp_keepcnt\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_TCP_KEEPIDLE([action-if-found], [action-if-not-found])          #\ndnl # Check if TCP_KEEPIDLE is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_TCP_KEEPIDLE], [{\n    AC_CACHE_CHECK([whether TCP_KEEPIDLE is supported], [libzmq_cv_tcp_keepidle],\n        [AC_TRY_RUN([/* TCP_KEEPIDLE test */\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netinet/tcp.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_KEEPALIVE, (char*) &opt, sizeof (int))) == -1) ||\n        ((rc = setsockopt (s, IPPROTO_TCP, TCP_KEEPIDLE, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_tcp_keepidle=\"yes\"],\n        [libzmq_cv_tcp_keepidle=\"no\"],\n        [libzmq_cv_tcp_keepidle=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_tcp_keepidle\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_TCP_KEEPINTVL([action-if-found], [action-if-not-found])          #\ndnl # Check if TCP_KEEPINTVL is supported                                           #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_TCP_KEEPINTVL], [{\n    AC_CACHE_CHECK([whether TCP_KEEPINTVL is supported], [libzmq_cv_tcp_keepintvl],\n        [AC_TRY_RUN([/* TCP_KEEPINTVL test */\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netinet/tcp.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_KEEPALIVE, (char*) &opt, sizeof (int))) == -1) ||\n        ((rc = setsockopt (s, IPPROTO_TCP, TCP_KEEPINTVL, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_tcp_keepintvl=\"yes\"],\n        [libzmq_cv_tcp_keepintvl=\"no\"],\n        [libzmq_cv_tcp_keepintvl=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_tcp_keepintvl\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_TCP_KEEPALIVE([action-if-found], [action-if-not-found])         #\ndnl # Check if TCP_KEEPALIVE is supported                                          #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_TCP_KEEPALIVE], [{\n    AC_CACHE_CHECK([whether TCP_KEEPALIVE is supported], [libzmq_cv_tcp_keepalive],\n        [AC_TRY_RUN([/* TCP_KEEPALIVE test */\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netinet/tcp.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_KEEPALIVE, (char*) &opt, sizeof (int))) == -1) ||\n        ((rc = setsockopt (s, IPPROTO_TCP, TCP_KEEPALIVE, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_tcp_keepalive=\"yes\"],\n        [libzmq_cv_tcp_keepalive=\"no\"],\n        [libzmq_cv_tcp_keepalive=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_tcp_keepalive\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_SO_PRIORITY([action-if-found], [action-if-not-found])           #\ndnl # Check if SO_PRIORITY is supported                                            #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_SO_PRIORITY], [{\n    AC_CACHE_CHECK([whether SO_PRIORITY is supported], [libzmq_cv_so_priority],\n        [AC_TRY_RUN([/* SO_PRIORITY test */\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint main (int argc, char *argv [])\n{\n    int s, rc, opt = 1;\n    return (\n        ((s = socket (PF_INET, SOCK_STREAM, 0)) == -1) ||\n        ((rc = setsockopt (s, SOL_SOCKET, SO_PRIORITY, (char*) &opt, sizeof (int))) == -1)\n    );\n}\n        ],\n        [libzmq_cv_so_priority=\"yes\"],\n        [libzmq_cv_so_priority=\"no\"],\n        [libzmq_cv_so_priority=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_so_priority\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_GETRANDOM([action-if-found], [action-if-not-found])  #\ndnl # Checks if getrandom is supported                                  #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_GETRANDOM], [{\n    AC_CACHE_CHECK([whether getrandom is supported], [libzmq_cv_getrandom],\n        [AC_TRY_RUN([/* thread-local storage test */\n#include <sys/random.h>\n\nint main (int argc, char *argv [])\n{\n    char buf[4];\n    int rc = getrandom(buf, 4, 0);\n    return rc == -1 ? 1 : 0;\n}\n        ],\n        [libzmq_cv_getrandom=\"yes\"],\n        [libzmq_cv_getrandom=\"no\"],\n        [libzmq_cv_getrandom=\"not during cross-compile\"]\n        )]\n    )\n    AS_IF([test \"x$libzmq_cv_getrandom\" = \"xyes\"], [$1], [$2])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_KQUEUE([action-if-found], [action-if-not-found])         #\ndnl # Checks kqueue polling system                                                 #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_KQUEUE], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/types.h>\n#include <sys/event.h>\n#include <sys/time.h>\n        ],[[\nstruct kevent t_kev;\nkqueue();\n        ]])],\n        [$1], [$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_EPOLL_RUN([action-if-found], [action-if-not-found])      #\ndnl # LIBZMQ_CHECK_POLLER_EPOLL_CLOEXEC([action-if-found], [action-if-not-found])  #\ndnl # Checks epoll polling system can actually run #\ndnl # For cross-compile, only requires that epoll can link #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_EPOLL], [{\n    AC_RUN_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/epoll.h>\n        ],[[\nstruct epoll_event t_ev;\nint r;\nr = epoll_create(10);\nreturn(r < 0);\n        ]])],\n        [$1],[$2],[\n            AC_LINK_IFELSE([\n                AC_LANG_PROGRAM([\n#include <sys/epoll.h>\n                ],[[\nstruct epoll_event t_ev;\nepoll_create(10);\n                ]])],\n                [$1], [$2]\n            )\n        ]\n    )\n}])\n\nAC_DEFUN([LIBZMQ_CHECK_POLLER_EPOLL_CLOEXEC], [{\n    AC_RUN_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/epoll.h>\n        ],[[\nstruct epoll_event t_ev;\nint r;\nr = epoll_create1(EPOLL_CLOEXEC);\nreturn(r < 0);\n        ]])],\n        [$1],[$2],[\n            AC_LINK_IFELSE([\n                AC_LANG_PROGRAM([\n#include <sys/epoll.h>\n                ],[[\nstruct epoll_event t_ev;\nepoll_create1(EPOLL_CLOEXEC);\n                ]])],\n                [$1], [$2]\n            )\n        ]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_DEVPOLL([action-if-found], [action-if-not-found])        #\ndnl # Checks devpoll polling system                                                #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_DEVPOLL], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/devpoll.h>\n        ],[[\nstruct pollfd t_devpoll;\nint fd = open(\"/dev/poll\", O_RDWR);\n        ]])],\n        [$1], [$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_POLLSET([action-if-found], [action-if-not-found])        #\ndnl # Checks pollset polling system                                                #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_POLLSET], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/poll.h>\n#include <sys/pollset.h>\n        ],[[\npollset_t ps = pollset_create(-1);\n        ]])],\n        [$1], [$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_POLL([action-if-found], [action-if-not-found])           #\ndnl # Checks poll polling system                                                   #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_POLL], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#include <poll.h>\n        ],[[\nstruct pollfd t_poll;\npoll(&t_poll, 1, 1);\n        ]])],\n        [$1], [$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER_SELECT([action-if-found], [action-if-not-found])         #\ndnl # Checks select polling system                                                 #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_POLLER_SELECT], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#ifdef ZMQ_HAVE_WINDOWS\n#include \"winsock2.h\"\n#elif defined ZMQ_HAVE_OPENVMS\n#include <sys/types.h>\n#include <sys/time.h>\n#else\n#include <sys/select.h>\n#endif\n        ],[[\nfd_set t_rfds;\nstruct timeval tv;\nFD_ZERO(&t_rfds);\nFD_SET(0, &t_rfds);\ntv.tv_sec = 5;\ntv.tv_usec = 0;\nselect(1, &t_rfds, 0, 0, &tv);\n        ]])],\n        [$1],[$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_PSELECT([action-if-found], [action-if-not-found])               #\ndnl # Checks pselect polling system                                                #\ndnl ################################################################################\nAC_DEFUN([LIBZMQ_CHECK_PSELECT], [{\n    AC_LINK_IFELSE([\n        AC_LANG_PROGRAM([\n#include <sys/select.h>\n#include <signal.h>\n        ],[[\nfd_set t_rfds;\nstruct timespec ts;\nFD_ZERO(&t_rfds);\nFD_SET(0, &t_rfds);\nts.tv_sec = 5;\nts.tv_nsec = 0;\nsigset_t sigmask, sigmask_without_sigterm;\nsigemptyset(&sigmask);\nsigprocmask(SIG_BLOCK, &sigmask, &sigmask_without_sigterm);\n\npselect(1, &t_rfds, 0, 0, &ts, &sigmask);\n        ]])],\n        [$1],[$2]\n    )\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_POLLER([action-if-found], [action-if-not-found])                #\ndnl # Choose polling system                                                        #\ndnl ################################################################################\n\nAC_DEFUN([LIBZMQ_CHECK_POLLER], [{\n    # Allow user to override poller autodetection\n    AC_ARG_WITH([poller],\n        [AS_HELP_STRING([--with-poller],\n        [choose I/O thread polling system manually. Valid values are 'kqueue', 'epoll', 'devpoll', 'pollset', 'poll', 'select', 'wepoll', or 'auto'. [default=auto]])])\n\n    # Allow user to override poller autodetection\n    AC_ARG_WITH([api_poller],\n        [AS_HELP_STRING([--with-api-poller],\n        [choose zmq_poll(er)_* API polling system manually. Valid values are 'poll', 'select', or 'auto'. [default=auto]])])\n\n    if test \"x$with_poller\" = \"x\"; then\n        pollers=auto\n    else\n        pollers=$with_poller\n    fi\n    if test \"$pollers\" = \"auto\"; then\n        # We search for pollers in this order\n        pollers=\"kqueue epoll devpoll pollset poll select\"\n    fi\n\n    # try to find suitable polling system. the order of testing is:\n    AC_MSG_NOTICE([Choosing I/O thread polling system from '$pollers'...])\n    poller_found=0\n    for poller in $pollers; do\n        case \"$poller\" in\n            kqueue)\n                LIBZMQ_CHECK_POLLER_KQUEUE([\n                    AC_MSG_NOTICE([Using 'kqueue' I/O thread polling system])\n                    AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_KQUEUE, 1, [Use 'kqueue' I/O thread polling system])\n                    poller_found=1\n                ])\n            ;;\n            epoll)\n                case \"$host_os\" in\n                    solaris*|sunos*)\n                        # Recent illumos and Solaris systems did add epoll()\n                        # syntax, but it does not fully satisfy expectations\n                        # that ZMQ has from Linux systems. Unless you undertake\n                        # to fix the integration, do not disable this exception\n                        # and use select() or poll() on Solarish OSes for now.\n                        AC_MSG_NOTICE([NOT using 'epoll' I/O thread polling system on '$host_os']) ;;\n                    *)\n                        LIBZMQ_CHECK_POLLER_EPOLL_CLOEXEC([\n                            AC_MSG_NOTICE([Using 'epoll' I/O thread polling system with CLOEXEC])\n                            AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_EPOLL, 1, [Use 'epoll' I/O thread polling system])\n                            AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_EPOLL_CLOEXEC, 1, [Use 'epoll' I/O thread polling system with CLOEXEC])\n                            poller_found=1\n                            ],[\n                            LIBZMQ_CHECK_POLLER_EPOLL([\n                                AC_MSG_NOTICE([Using 'epoll' I/O thread polling system with CLOEXEC])\n                                AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_EPOLL, 1, [Use 'epoll' I/O thread polling system])\n                                poller_found=1\n                            ])\n                        ])\n                        ;;\n                esac\n            ;;\n            devpoll)\n                LIBZMQ_CHECK_POLLER_DEVPOLL([\n                    AC_MSG_NOTICE([Using 'devpoll' I/O thread polling system])\n                    AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_DEVPOLL, 1, [Use 'devpoll' I/O thread polling system])\n                    poller_found=1\n                ])\n            ;;\n            pollset)\n                LIBZMQ_CHECK_POLLER_POLLSET([\n                    AC_MSG_NOTICE([Using 'pollset' I/O thread polling system])\n                    AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_POLLSET, 1, [Use 'pollset' I/O thread polling system])\n                    poller_found=1\n                ])\n            ;;\n            poll)\n                LIBZMQ_CHECK_POLLER_POLL([\n                    AC_MSG_NOTICE([Using 'poll' I/O thread polling system])\n                    AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_POLL, 1, [Use 'poll' I/O thread polling system])\n                    poller_found=1\n                ])\n            ;;\n            select)\n                LIBZMQ_CHECK_POLLER_SELECT([\n                    AC_MSG_NOTICE([Using 'select' I/O thread polling system])\n                    AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_SELECT, 1, [Use 'select' I/O thread polling system])\n                    poller_found=1\n                ])\n            ;;\n            wepoll)\n                # wepoll can only be manually selected\n                AC_MSG_NOTICE([Using 'wepoll' I/O thread polling system])\n                AC_DEFINE(ZMQ_IOTHREAD_POLLER_USE_EPOLL, 1, [Use 'epoll' I/O thread polling system])\n                poller_found=1\n            ;;\n        esac\n        test $poller_found -eq 1 && break\n    done\n    if test $poller_found -eq 0; then\n        AC_MSG_ERROR([None of '$pollers' are valid pollers on this platform])\n    fi\n    if test \"x$with_api_poller\" = \"x\"; then\n        with_api_poller=auto\n    fi\n\tif test \"x$with_api_poller\" = \"xauto\"; then\n\t\tif test $poller = \"select\"; then\n\t\t\tapi_poller=select\n\t\telif test $poller = \"wepoll\"; then\n\t\t\tapi_poller=select\n\t\telse\t\t\n\t\t\tapi_poller=poll\n\t\tfi\n\telse\n\t\tapi_poller=$with_api_poller\n\tfi\n\tif test \"$api_poller\" = \"select\"; then\n\t\tAC_MSG_NOTICE([Using 'select' zmq_poll(er)_* API polling system])\n\t\tAC_DEFINE(ZMQ_POLL_BASED_ON_SELECT, 1, [Use 'select' zmq_poll(er)_* API polling system])\n\telif test \"$api_poller\" = \"poll\"; then\n\t\tAC_MSG_NOTICE([Using 'poll' zmq_poll(er)_* API polling system])\n\t\tAC_DEFINE(ZMQ_POLL_BASED_ON_POLL, 1, [Use 'poll' zmq_poll(er)_* API polling system])\n\telse\n        AC_MSG_ERROR([Invalid API poller '$api_poller' specified])\n\tfi\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_PPOLL([action-if-found], [action-if-not-found])                 #\ndnl # Check whether zmq_ppoll can be activated, and do so if it can                #\ndnl ################################################################################\n\nAC_DEFUN([LIBZMQ_CHECK_PPOLL], [{\n    AC_REQUIRE([AC_CANONICAL_HOST])\n\n    case \"${host_os}\" in\n        *mingw*|*cygwin*|*msys*)\n            # Disable ppoll by default on Windows\n            AC_MSG_NOTICE([NOT building active zmq_ppoll on '$host_os']) ;;\n        *)\n            LIBZMQ_CHECK_PSELECT([\n                AC_MSG_NOTICE([Building with zmq_ppoll])\n                AC_DEFINE(ZMQ_HAVE_PPOLL, 1, [Build with zmq_ppoll])\n            ])\n        ;;\n    esac\n}])\n\ndnl ##############################################################################\ndnl # LIBZMQ_CHECK_CACHELINE                                                     #\ndnl # Check cacheline size for alignment purposes                                #\ndnl ##############################################################################\nAC_DEFUN([LIBZMQ_CHECK_CACHELINE], [{\n\n    zmq_cacheline_size=64\n    AC_CHECK_TOOL(libzmq_getconf, getconf)\n    if ! test \"x$libzmq_getconf\" = \"x\"; then\n        zmq_cacheline_size=$($libzmq_getconf LEVEL1_DCACHE_LINESIZE 2>/dev/null || echo 64)\n        if test \"x$zmq_cacheline_size\" = \"x0\" -o  \"x$zmq_cacheline_size\" = \"x-1\" -o \"x$zmq_cacheline_size\" = \"xundefined\"; then\n            # getconf on some architectures does not know the size, try to fallback to\n            # the value the kernel knows on Linux\n            zmq_cacheline_size=$(cat /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size 2>/dev/null || echo 64)\n        fi\n    fi\n    if test \"x$zmq_cacheline_size\" = \"xundefined\"; then\n        # On some platforms e.g. Fedora33 s390x the cacheline size reported\n        # by getconf as 'undefined'.\n        zmq_cacheline_size=64\n    fi\n\tAC_MSG_NOTICE([Using \"$zmq_cacheline_size\" bytes alignment for lock-free data structures])\n\tAC_DEFINE_UNQUOTED(ZMQ_CACHELINE_SIZE, $zmq_cacheline_size, [Using \"$zmq_cacheline_size\" bytes alignment for lock-free data structures])\n}])\n\ndnl ################################################################################\ndnl # LIBZMQ_CHECK_CV_IMPL([action-if-found], [action-if-not-found])               #\ndnl # Choose condition variable implementation                                     #\ndnl ################################################################################\n\nAC_DEFUN([LIBZMQ_CHECK_CV_IMPL], [{\n    # Allow user to override condition variable autodetection\n    AC_ARG_WITH([cv-impl],\n        [AS_HELP_STRING([--with-cv-impl],\n        [choose condition variable implementation manually. Valid values are 'stl11', 'pthread', 'none', or 'auto'. [default=auto]])])\n\n    if test \"x$with_cv_impl\" = \"x\"; then\n        cv_impl=auto\n    else\n        cv_impl=$with_cv_impl\n    fi\n    case $host_os in\n      vxworks*)\n        cv_impl=\"vxworks\"\n        AC_DEFINE(ZMQ_USE_CV_IMPL_VXWORKS, 1, [Use vxworks condition variable implementation.])\n      ;;\n    esac\n    if test \"$cv_impl\" = \"auto\" || test \"$cv_impl\" = \"stl11\"; then\n        AC_LANG_PUSH([C++])\n        AC_CHECK_HEADERS(condition_variable, [stl11=\"yes\"\n            AC_DEFINE(ZMQ_USE_CV_IMPL_STL11, 1, [Use stl11 condition variable implementation.])],\n            [stl11=\"no\"])\n        AC_LANG_POP([C++])\n        if test \"$cv_impl\" = \"stl11\" && test \"x$stl11\" = \"xno\"; then\n            AC_MSG_ERROR([--with-cv-impl set to stl11 but cannot find condition_variable])\n        fi\n    fi\n    if test \"$cv_impl\" = \"pthread\" || test \"x$stl11\" = \"xno\"; then\n        AC_DEFINE(ZMQ_USE_CV_IMPL_PTHREADS, 1, [Use pthread condition variable implementation.])\n    fi\n    if test \"$cv_impl\" = \"none\"; then\n        AC_DEFINE(ZMQ_USE_CV_IMPL_NONE, 1, [Use no condition variable implementation.])\n    fi\n       AC_MSG_NOTICE([Using \"$cv_impl\" condition variable implementation.])\n}])\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 13.5712890625,
          "content": "version: build-{build}\n\nshallow_clone: true\n\nos: Visual Studio 2013\n\nenvironment:\n  CMAKE_GENERATOR: \"Visual Studio 12 2013\"\n  MSVCVERSION: \"v120\"\n  MSVCYEAR: \"vs2013\"\n  ENABLE_DRAFTS: ON\n  matrix:\n    - platform: x64\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      CMAKE_GENERATOR: \"Visual Studio 16 2019\"\n      MSVCVERSION: \"v142\"\n      MSVCYEAR: \"vs2019\"\n      ARTIFACT_NAME: v142-x64\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: OFF # unavailable build files for VS2008\n      ENABLE_CURVE: OFF\n      CMAKE_GENERATOR: \"Visual Studio 9 2008\"\n      MSVCVERSION: \"v90\"\n      MSVCYEAR: \"vs2008\"\n      ARTIFACT_NAME: v90\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      CMAKE_GENERATOR: \"Visual Studio 10 2010\"\n      MSVCVERSION: \"v100\"\n      MSVCYEAR: \"vs2010\"\n      ARTIFACT_NAME: v100\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      ARTIFACT_NAME: v120\n    - platform: x64\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      ARTIFACT_NAME: v120-x64\n    - platform: Win32\n      configuration: Release\n      POLLER: epoll\n      API_POLLER: poll\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      TEST_OPTIONS: '-E \"(test_many_sockets)\"'\n      ARTIFACT_NAME: v120-epoll\n    - platform: Win32\n      configuration: Debug\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      TEST_OPTIONS: '-E \"(test_many_sockets)\"'\n      ARTIFACT_NAME: v120-gd\n    - platform: x64\n      configuration: Debug\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      TEST_OPTIONS: '-E \"(test_many_sockets)\"'\n      ARTIFACT_NAME: v120-gd-x64\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      ENABLE_DRAFTS: OFF\n      ARTIFACT_NAME: v120-nocurve\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      CMAKE_GENERATOR: \"Visual Studio 14 2015\"\n      MSVCVERSION: \"v140\"\n      MSVCYEAR: \"vs2015\"\n      ARTIFACT_NAME: v140\n    - platform: x64\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      CMAKE_GENERATOR: \"Visual Studio 14 2015\"\n      MSVCVERSION: \"v140\"\n      MSVCYEAR: \"vs2015\"\n      ARTIFACT_NAME: v140-x64\n    - platform: Win32\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n      MSVCVERSION: \"v141\"\n      MSVCYEAR: \"vs2017\"\n      TEST_OPTIONS: '-E \"(test_many_sockets)\"'\n      ARTIFACT_NAME: v141\n    - platform: x64\n      configuration: Release\n      WITH_LIBSODIUM: ON\n      ENABLE_CURVE: ON\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n      MSVCVERSION: \"v141\"\n      MSVCYEAR: \"vs2017\"\n      TEST_OPTIONS: '-E \"(test_many_sockets)\"'\n      ARTIFACT_NAME: v141-x64\n    - platform: cygwin64\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      CMAKE_GENERATOR: \"Unix Makefiles\"\n      ARTIFACT_NAME: cygwin64\n    - platform: mingw64\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      CMAKE_GENERATOR: \"MSYS Makefiles\"\n      ARTIFACT_NAME: mingw64\n    - platform: Win32-uwp\n      configuration: Debug\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n      MSVCVERSION: \"v141\"\n      MSVCYEAR: \"vs2017\"\n      ARTIFACT_NAME: v141-gd-uwp\n      CMAKE_SYSTEM_NAME: WindowsStore\n      CMAKE_SYSTEM_VERSION: 10.0.18362\n      EXTRA_FLAGS: -DCMAKE_SYSTEM_NAME=%CMAKE_SYSTEM_NAME% -DCMAKE_SYSTEM_VERSION=%CMAKE_SYSTEM_VERSION% -DBUILD_TESTS=OFF\n    - platform: Win32-uwp\n      configuration: Release\n      WITH_LIBSODIUM: OFF\n      ENABLE_CURVE: OFF\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n      MSVCVERSION: \"v141\"\n      MSVCYEAR: \"vs2017\"\n      ARTIFACT_NAME: v141-uwp\n      CMAKE_SYSTEM_NAME: WindowsStore\n      CMAKE_SYSTEM_VERSION: 10.0.18362\n      EXTRA_FLAGS: -DCMAKE_SYSTEM_NAME=%CMAKE_SYSTEM_NAME% -DCMAKE_SYSTEM_VERSION=%CMAKE_SYSTEM_VERSION% -DBUILD_TESTS=OFF\n\nmatrix:\n  fast_finish: false\n  allow_failures:\n    - platform: cygwin64 # TODO allow failures until tests are fixed\n    - platform: mingw64  # TODO allow failures until tests are fixed\n\ninit:\n  - cmd: if \"%NO_PR%\"==\"TRUE\" (\n            if \"%APPVEYOR_PULL_REQUEST_NUMBER%\" NEQ \"\" (\n                echo \"Build is disabled for PRs, aborting\" &&\n                appveyor exit\n            )\n         )\n  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n  - cmake --version\n  - msbuild /version\n  - cmd: reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\n\ncache:\n    - C:\\projects\\libsodium\n    - C:\\cygwin64\\var\\cache\\setup\n\ninstall:\n  - cmd: if \"%Platform%\"==\"cygwin64\" C:\\cygwin64\\setup-x86_64.exe --quiet-mode --no-shortcuts --upgrade-also --packages cmake,cygwin-devel,gcc-g++,libncurses-devel,make,pkg-config\n  - cmd: if \"%Platform%\"==\"cygwin64\" set PATH=C:\\cygwin64\\bin;%PATH%\n  - cmd: if \"%Platform%\"==\"mingw64\" C:\\msys64\\usr\\bin\\bash -lc \"pacman -Qg\"\n  - cmd: if \"%Platform%\"==\"mingw64\" set PATH=C:\\msys64\\usr\\bin;%PATH%\n  - cmd: if \"%Platform%\"==\"x64\" (if not \"%MSVCVERSION%\"==\"v142\" set \"CMAKE_GENERATOR=%CMAKE_GENERATOR% Win64\")\n  - cmd: echo \"Generator='%CMAKE_GENERATOR%'\"\n  - cmd: echo \"Platform='%Platform%'\"\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" set LIBSODIUMDIR=C:\\projects\\libsodium\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" (\n                git config --global user.email \"test@appveyor.com\" &&\n                git config --global user.name \"appveyor\"\n         )\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" (\n            if not exist \"%LIBSODIUMDIR%\" (\n                git clone --branch stable --depth 1 --quiet \"https://github.com/jedisct1/libsodium.git\" %LIBSODIUMDIR%\n            ) else (\n                git -C \"%LIBSODIUMDIR%\" fetch --all && git -C \"%LIBSODIUMDIR%\" reset --hard origin/stable\n            )\n         )\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" msbuild /v:minimal /maxcpucount:%NUMBER_OF_PROCESSORS% /p:Configuration=%Configuration%DLL %LIBSODIUMDIR%\\builds\\msvc\\%MSVCYEAR%\\libsodium\\libsodium.vcxproj\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" set SODIUM_LIBRARY_DIR=\"%LIBSODIUMDIR%\\bin\\%Platform%\\%Configuration%\\%MSVCVERSION%\\dynamic\"\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" set SODIUM_INCLUDE_DIR=\"%LIBSODIUMDIR%\\src\\libsodium\\include\"\n  - ps: if (${env:WITH_LIBSODIUM} -eq \"ON\") { Copy-Item \"C:\\projects\\libsodium\\bin\\${env:Platform}\\${env:Configuration}\\${env:MSVCVERSION}\\dynamic\\libsodium.lib\" -Destination \"C:\\projects\\libsodium\\bin\\${env:Platform}\\${env:Configuration}\\${env:MSVCVERSION}\\dynamic\\sodium.lib\" }\n\nclone_folder: C:\\projects\\libzmq\n\nbefore_build:\n  - cmd: set LIBZMQ_SRCDIR=%cd%\n  - cmd: set LIBZMQ_BUILDDIR=C:\\projects\\build_libzmq\n  # TODO this does not work with sonarcloud.io, as it misses the sonar-cxx plugin\n  # - cmd: curl -L https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.1.0.1141-windows.zip -o sonar-scanner-cli-3.1.0.1141-windows.zip\n  # - cmd: unzip sonar-scanner-cli-3.1.0.1141-windows.zip\n  # - cmd: set BUILDLOG=\"%LIBZMQ_SRCDIR%\\build.log\"\n  - cmd: md \"%LIBZMQ_BUILDDIR%\"\n  - cd \"%LIBZMQ_BUILDDIR%\"\n  - cmd: if \"%PLATFORM%\" == \"cygwin64\" set APPVEYOR_BUILD_FOLDER=/cygdrive/C/projects/libzmq\n  - cmd: if \"%ENABLE_ANALYSIS%\"==\"ON\" ( set LIBZMQ_WERROR=\"OFF\" ) else ( set LIBZMQ_WERROR=\"ON\" )\n  - cmd: cmake -D CMAKE_INCLUDE_PATH=\"%SODIUM_INCLUDE_DIR%\" -D CMAKE_LIBRARY_PATH=\"%SODIUM_LIBRARY_DIR%\" -D WITH_LIBSODIUM=\"%WITH_LIBSODIUM%\" -D ENABLE_DRAFTS=\"%ENABLE_DRAFTS%\" -D ENABLE_ANALYSIS=\"%ENABLE_ANALYSIS%\" -D ENABLE_CURVE=\"%ENABLE_CURVE%\" -D API_POLLER=\"%API_POLLER%\" -D POLLER=\"%POLLER%\" %EXTRA_FLAGS% -D WITH_LIBSODIUM=\"%WITH_LIBSODIUM%\" -D LIBZMQ_WERROR=\"%LIBZMQ_WERROR%\" -G \"%CMAKE_GENERATOR%\" \"%APPVEYOR_BUILD_FOLDER%\"\n  - cmd: cd \"%LIBZMQ_SRCDIR%\"\n  - ps: $env:ZMQ_VERSION_MAJOR = (Select-String -Path .\\include\\zmq.h -Pattern \".*#define ZMQ_VERSION_MAJOR ([0-9]+).*\").Matches.Groups[1].Value\n  - ps: $env:ZMQ_VERSION_MINOR = (Select-String -Path .\\include\\zmq.h -Pattern \".*#define ZMQ_VERSION_MINOR ([0-9]+).*\").Matches.Groups[1].Value\n  - ps: $env:ZMQ_VERSION_PATCH = (Select-String -Path .\\include\\zmq.h -Pattern \".*#define ZMQ_VERSION_PATCH ([0-9]+).*\").Matches.Groups[1].Value\n  - ps: $env:ZMQ_VERSION = \"${env:ZMQ_VERSION_MAJOR}.${env:ZMQ_VERSION_MINOR}.${env:ZMQ_VERSION_PATCH}\"\n  - cmd: echo \"ZMQ_VERSION is %ZMQ_VERSION%\"\n\nbuild_script:\n  - cmd: set verbosity=Minimal\n  - cmd: if \"%MSVCYEAR%\"==\"vs2008\" set verbosity=Normal\n  - cmd: if \"%MSVCYEAR%\"==\"vs2008\" set path=C:\\Windows\\Microsoft.NET\\Framework\\v3.5;%path% \n  - cmd: cd \"%LIBZMQ_BUILDDIR%\"\n  - cmd: if \"%PLATFORM:~0,5%\" == \"Win32\" (\n            if \"%MSVCYEAR%\"==\"vs2008\" (\n                cmake --build %LIBZMQ_BUILDDIR% --config %configuration% --target install\n            ) else (\n                cmake --build %LIBZMQ_BUILDDIR% --config %configuration% --target install -- -verbosity:Minimal -maxcpucount -logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n            )\n         )\n  - cmd: if \"%PLATFORM%\" == \"x64\" (\n            cmake --build %LIBZMQ_BUILDDIR% --config %configuration% --target install -- -verbosity:Minimal -maxcpucount -logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n         )\n  - cmd: if \"%PLATFORM%\" == \"cygwin64\" (\n            cmake --build . -- -j5\n         )\n  - cmd: if \"%PLATFORM%\" == \"mingw64\" (\n            cmake --build . -- -j5\n         )\n\n# TODO this does not work with sonarcloud.io, as it misses the sonar-cxx plugin\n# build_script:\n  # - cmd: msbuild %LIBZMQ_BUILDDIR%\\ZeroMQ.sln /verbosity:detailed >%BUILDLOG%\n\nafter_build:\n  # TODO this does not work with sonarcloud.io, as it misses the sonar-cxx plugin\n  # - cmd: cd \"%LIBZMQ_SRCDIR%\"\n  # - cmd: dir\n  # - cmd: sonar-scanner-3.1.0.1141-windows\\bin\\sonar-scanner \n            # -Dsonar.scm.provider=git \n            # -Dsonar.projectKey=libzmq-msvc \n            # -Dsonar.organization=sigiesec-github \n            # -Dsonar.sources=include,src,tests,unittests \n            # -Dsonar.host.url=https://sonarcloud.io \n            # -Dsonar.login=%SONARQUBE_TOKEN% \n            # -Dsonar.cxx.compiler.parser=\"Visual C++\" \n            # -Dsonar.cxx.compiler.reportPath=build.log \n            # -Dsonar.cxx.compiler.charset=UTF-8 \n            # -Dsonar.cxx.compiler.regex=^(?<filename>.*)\\\\((?<line>[0-9]+)\\\\):\\\\x20warning\\\\x20(?<id>C\\\\d\\\\d\\\\d\\\\d):(?<message>.*)$\n# TODO this should be done differently, using the INSTALL cmake target, the current handling depends on the details of the CMakeLists.txt\n  - cmd: cd %LIBZMQ_BUILDDIR%\\bin\\%Configuration%\"\n  - cmd: if \"%WITH_LIBSODIUM%\"==\"ON\" copy \"%SODIUM_LIBRARY_DIR%\\libsodium.dll\" .\n  - cmd: copy \"%LIBZMQ_SRCDIR%\\include\\zmq.h\" .\n  - cmd: copy ..\\..\\lib\\%Configuration%\\libzmq*.lib . & exit 0\n  - cmd: 7z a -y -bd -mx=9 libzmq.zip *.exe *.dll *.pdb *.h *.lib\n  - ps: Push-AppveyorArtifact \"libzmq.zip\" -Filename \"libzmq-${env:ARTIFACT_NAME}-${env:ZMQ_VERSION_MAJOR}_${env:ZMQ_VERSION_MINOR}_${env:ZMQ_VERSION_PATCH}.zip\"\n\ntest_script:\n  - cmd: cd \"%LIBZMQ_BUILDDIR%\"\n# TODO run tests in parallel only on selected platforms, since they fail on others, see https://github.com/zeromq/libzmq/issues/3123\n  - cmd: if \"%CMAKE_GENERATOR%\"==\"Visual Studio 12 2013\" set PARALLELIZE=ON\n  - cmd: if \"%CMAKE_GENERATOR%\"==\"Visual Studio 14 2015\" set PARALLELIZE=ON\n  - cmd: if \"%CMAKE_GENERATOR%\"==\"Visual Studio 12 2013 Win64\" set PARALLELIZE=ON\n  - cmd: if \"%CMAKE_GENERATOR%\"==\"Visual Studio 14 2015 Win64\" set PARALLELIZE=ON\n  - cmd: if not defined TEST_OPTIONS set \"TEST_OPTIONS= \"\n  - cmd: if \"%PARALLELIZE%\"==\"ON\" (\n            echo \"Running tests in parallel\" &&\n            set TEST_OPTIONS=%TEST_OPTIONS% -j5\n         )\n  - cmd: if \"%APPVEYOR_REPO_TAG%\"==\"false\" (ctest -C \"%Configuration%\" -V %TEST_OPTIONS%)\n\n\n# the analysis build is repeated; apparently appveyor only uses the first section that matches some branch\nfor:\n-\n    branches:\n        only:\n            - master\n    environment:\n        matrix:\n            - platform: Win32\n              configuration: Release\n              API_POLLER: poll\n              WITH_LIBSODIUM: ON\n              ENABLE_CURVE: ON\n              NO_PR: TRUE\n            - platform: x64\n              configuration: Release\n              WITH_LIBSODIUM: ON\n              ENABLE_CURVE: ON\n              NO_PR: TRUE\n            - platform: Win32\n              configuration: Release\n              WITH_LIBSODIUM: ON\n              ENABLE_CURVE: ON\n              NO_PR: TRUE\n            - platform: Win32\n              configuration: Release\n              WITH_LIBSODIUM: ON\n              ENABLE_CURVE: ON\n              ENABLE_ANALYSIS: ON\n              APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n              CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n              MSVCVERSION: \"v141\"\n              MSVCYEAR: \"vs2017\"\n              NO_PR: TRUE\n-\n    branches:\n        only:\n            - /.*analyze$/\n    environment:\n        matrix:\n            - platform: Win32\n              configuration: Release\n              WITH_LIBSODIUM: ON\n              ENABLE_CURVE: ON\n              ENABLE_ANALYSIS: ON\n              APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n              CMAKE_GENERATOR: \"Visual Studio 15 2017\"\n              MSVCVERSION: \"v141\"\n              MSVCYEAR: \"vs2017\"\n              NO_PR: TRUE\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.9150390625,
          "content": "#!/bin/sh\n# SPDX-License-Identifier: MPL-2.0\n\n# Script to generate all required files from fresh git checkout.\n\n# Debian and Ubuntu do not ship libtool anymore, but OSX does not ship libtoolize.\ncommand -v libtoolize >/dev/null 2>&1\nif  [ $? -ne 0 ]; then\n    command -v libtool >/dev/null 2>&1\n    if  [ $? -ne 0 ]; then\n        echo \"autogen.sh: error: could not find libtool.  libtool is required to run autogen.sh.\" 1>&2\n        exit 1\n    fi\nfi\n\ncommand -v autoreconf >/dev/null 2>&1\nif [ $? -ne 0 ]; then\n    echo \"autogen.sh: error: could not find autoreconf.  autoconf and automake are required to run autogen.sh.\" 1>&2\n    exit 1\nfi\n\nmkdir -p ./config\nif [ $? -ne 0 ]; then\n    echo \"autogen.sh: error: could not create directory: ./config.\" 1>&2\n    exit 1\nfi\n\nautoreconf --install --force --verbose -I config\nres=$?\nif [ \"$res\" -ne 0 ]; then\n    echo \"autogen.sh: error: autoreconf exited with status $res\" 1>&2\n    exit 1\nfi\n"
        },
        {
          "name": "branding.bmp",
          "type": "blob",
          "size": 25.212890625,
          "content": null
        },
        {
          "name": "build_qnx",
          "type": "tree",
          "content": null
        },
        {
          "name": "builds",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci_build.sh",
          "type": "blob",
          "size": 0.4248046875,
          "content": "#!/usr/bin/env bash\n\nset -x\nset -e\n\nif [ $BUILD_TYPE = \"default\" ]; then\n    mkdir tmp\n    BUILD_PREFIX=$PWD/tmp\n\n    source config.sh\n    set_config_opts\n\n    # Build and check this project\n    (\n        ./autogen.sh &&\n        ./configure \"${CONFIG_OPTS[@]}\" &&\n        export DISTCHECK_CONFIGURE_FLAGS=\"${CONFIG_OPTS[@]}\" &&\n        make VERBOSE=1 -j5 ${CHECK}\n    ) || exit 1\nelse\n    cd ./builds/${BUILD_TYPE} && ./ci_build.sh\nfi\n"
        },
        {
          "name": "ci_deploy.sh",
          "type": "blob",
          "size": 0.4697265625,
          "content": "#!/usr/bin/env bash\n\n# do NOT set -x or it will log the secret tokens!\nset -e\n\nif [[ $BUILD_TYPE == \"default\" && $CURVE == \"libsodium\" && -z $DRAFT ]]; then\n    # Tell travis to deploy all files in dist\n    mkdir dist\n    export LIBZMQ_DEPLOYMENT=dist/*\n    # Move archives to dist\n    mv *.tar.gz dist\n    mv *.zip dist\n    # Generate hash sums\n    cd dist\n    md5sum *.zip *.tar.gz > MD5SUMS\n    sha1sum *.zip *.tar.gz > SHA1SUMS\n    cd -\nelse\n    export LIBZMQ_DEPLOYMENT=\"\"\nfi\n"
        },
        {
          "name": "config.sh",
          "type": "blob",
          "size": 2.7138671875,
          "content": "#!/usr/bin/env bash\n\nfunction set_config_opts() {\n    CONFIG_OPTS=()\n    CONFIG_OPTS+=(\"CFLAGS=-g\")\n    CONFIG_OPTS+=(\"CPPFLAGS=-I${BUILD_PREFIX}/include\")\n    CONFIG_OPTS+=(\"CXXFLAGS=-g\")\n    CONFIG_OPTS+=(\"LDFLAGS=-L${BUILD_PREFIX}/lib\")\n    CONFIG_OPTS+=(\"PKG_CONFIG_PATH=${BUILD_PREFIX}/lib/pkgconfig\")\n    CONFIG_OPTS+=(\"--prefix=${BUILD_PREFIX}\")\n    CHECK=\"distcheck\"\n\n    if [ -n \"$ADDRESS_SANITIZER\" ] && [ \"$ADDRESS_SANITIZER\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--enable-address-sanitizer=yes\")\n        # distcheck does an out-of-tree build, and the fuzzer tests use a hard-coded relative path for simplicity\n        CHECK=\"check\"\n        git clone --depth 1 https://github.com/zeromq/libzmq-fuzz-corpora.git tests/libzmq-fuzz-corpora\n    fi\n\n    if [ \"$USE_NSS\" = \"yes\" ]; then\n        CONFIG_OPTS+=(\"--with-nss\")\n    fi\n\n    if [ -z \"$CURVE\" ]; then\n        CONFIG_OPTS+=(\"--disable-curve\")\n    elif [ \"$CURVE\" = \"libsodium\" ]; then\n        CONFIG_OPTS+=(\"--with-libsodium=yes\")\n\n        if ! ((command -v dpkg-query >/dev/null 2>&1 && dpkg-query --list libsodium-dev >/dev/null 2>&1) || \\\n                (command -v brew >/dev/null 2>&1 && brew ls --versions libsodium >/dev/null 2>&1)); then\n            git clone --depth 1 -b stable https://github.com/jedisct1/libsodium.git\n            ( cd libsodium; ./autogen.sh; ./configure --prefix=$BUILD_PREFIX; make install)\n        fi\n    fi\n\n    if [ -n \"$GSSAPI\" ] && [ \"$GSSAPI\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--with-libgssapi_krb5=yes\")\n    fi\n\n    if [ -n \"$PGM\" ] && [ \"$PGM\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--with-pgm=yes\")\n    fi\n\n    if [ -n \"$NORM\" ] && [ \"$NORM\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--with-norm=yes\")\n    fi\n\n    if [ -n \"$TIPC\" ] && [ \"$TIPC\" = \"enabled\" ]; then\n        sudo modprobe tipc\n    fi\n\n    if [ -n \"$POLLER\" ]; then\n        CONFIG_OPTS+=(\"--with-poller=${POLLER}\")\n    fi\n\n    if [ -n \"$TLS\" ] && [ \"$TLS\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--with-tls=yes\")\n    fi\n\n    if [ -z \"$DRAFT\" ] || [ \"$DRAFT\" = \"disabled\" ]; then\n        CONFIG_OPTS+=(\"--enable-drafts=no\")\n    elif [ \"$DRAFT\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--enable-drafts=yes\")\n    fi\n\n    if [ -n \"$FORCE_98\" ] && [ \"$FORCE_98\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--enable-force-CXX98-compat=yes\")\n    fi\n\n    if [ -n \"$VMCI\" ] && [ \"$VMCI\" = \"enabled\" ]; then\n        CONFIG_OPTS+=(\"--with-vmci=$PWD/vmci\")\n        # VMWare headeers are not ISO C++ compliant\n        CONFIG_OPTS+=(\"--disable-pedantic\")\n        git clone --depth 1 https://github.com/vmware/open-vm-tools.git\n        mkdir -p vmci\n        # Linux headers are redefined, so we can't just add -I to the whole dir\n        cp open-vm-tools/open-vm-tools/lib/include/vmci_* vmci/\n    fi\n}\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 39.693359375,
          "content": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\nAC_PREREQ(2.61)\n#\n# The 0MQ version number is extracted from include/zmq.h using\n# the version.sh script. Hence, it should be updated there.\n# The version in git should reflect the *next* version planned.\n#\nAC_INIT([zeromq],[m4_esyscmd([./version.sh])],[zeromq-dev@lists.zeromq.org])\n\nAC_CONFIG_AUX_DIR(config)\nAC_CONFIG_MACRO_DIR(config)\nAC_CONFIG_HEADERS([src/platform.hpp])\nAM_INIT_AUTOMAKE(foreign subdir-objects tar-ustar dist-zip)\n# Allow \"configure --disable-maintainer-mode\" to disable timestamp checking \nAM_MAINTAINER_MODE([enable])\n\nm4_pattern_allow([AC_PROG_CC_C99])\nm4_include([m4/ax_check_compile_flag.m4])\nm4_include([m4/ax_cxx_compile_stdcxx_11.m4])\nm4_include([m4/ax_code_coverage.m4])\nm4_include([m4/ax_valgrind_check.m4])\nm4_include([m4/ax_check_vscript.m4])\nm4_include([m4/ax_func_posix_memalign.m4])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\n# This lets us use PACKAGE_VERSION in Makefiles\nAC_SUBST(PACKAGE_VERSION)\n\n# Libtool -version-info (ABI version)\n#\n# Don't change this unless you know exactly what you're doing and have read and\n# understand:\n# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n#\n# Changes:\n#\n# ZeroMQ versions prior to 2.1.0 use 0:0:0 (undefined)\n# ZeroMQ versions 2.1.x: 1:0:0 (ABI version 1)\n# ZeroMQ version 3.0: 2:0:0 (ABI version 2)\n# ZeroMQ version 3.1: 3:0:0 (ABI version 3)\n# ZeroMQ version 4.0: 4:0:0 (ABI version 4)\n# ZeroMQ version 4.1: 5:0:0 (ABI version 5)\n# ZeroMQ version 4.2.0: 6:0:1 (ABI version 5)\n# ZeroMQ version 4.2.1: 6:1:1 (ABI version 5)\n# ZeroMQ version 4.2.2: 6:2:1 (ABI version 5)\n# ZeroMQ version 4.2.3: 6:3:1 (ABI version 5)\n# ZeroMQ version 4.2.4: 6:4:1 (ABI version 5)\n# ZeroMQ version 4.2.5: 6:5:1 (ABI version 5)\n# ZeroMQ version 4.3.0: 7:0:2 (ABI version 5)\n# ZeroMQ version 4.3.1: 7:1:2 (ABI version 5)\n# ZeroMQ version 4.3.2: 7:2:2 (ABI version 5)\n# ZeroMQ version 4.3.3: 7:3:2 (ABI version 5)\n# ZeroMQ version 4.3.4: 7:4:2 (ABI version 5)\n# ZeroMQ version 4.3.5: 7:5:2 (ABI version 5)\n# ZeroMQ version 4.3.6: 7:6:2 (ABI version 5)\n#\n# libzmq -version-info current:revision:age\nLTVER=\"7:6:2\"\nAC_SUBST(LTVER)\n\n# Take a copy of original flags\nZMQ_ORIG_CFLAGS=\"${CFLAGS:-none}\"\nZMQ_ORIG_CPPFLAGS=\"${CPPFLAGS:-none}\"\nZMQ_ORIG_CXXFLAGS=\"${CXXFLAGS:-none}\"\n\n# Checks for programs.\nAC_PROG_CC\nAX_CHECK_COMPILE_FLAG([-std=c11], [CFLAGS=\"${CFLAGS} -std=c11 -D_DEFAULT_SOURCE\"], [AC_PROG_CC_C99])\nAC_PROG_CXX\nAX_CODE_COVERAGE\nAM_PROG_CC_C_O\nAC_PROG_SED\nAC_PROG_AWK\nPKG_PROG_PKG_CONFIG\nm4_pattern_forbid([^PKG_[A-Z_]+$], [missing some pkg-config macros (pkg-config package)])\n\n# Libtool configuration for different targets. See acinclude.m4\nLIBZMQ_CONFIG_LIBTOOL\nAC_LIBTOOL_WIN32_DLL\nAC_PROG_LIBTOOL\nAX_VALGRIND_CHECK\nAX_CHECK_VSCRIPT\nAX_FUNC_POSIX_MEMALIGN\n\nAC_ARG_ENABLE([force-CXX98-compat],\n    [AS_HELP_STRING([--enable-force-CXX98-compat], [force C++98 build [default=disabled]])])\nif test \"x$enable_force_CXX98_compat\" = \"xyes\"; then\n    AC_LANG_PUSH([C++])\n    AX_CHECK_COMPILE_FLAG([-std=gnu++98], [CXXFLAGS=\"${CXXFLAGS} -std=gnu++98\"], [])\n    AX_CHECK_COMPILE_FLAG([-Wc++98-compat -Wc++98-compat-pedantic], [CXXFLAGS=\"${CXXFLAGS} -Wc++98-compat\"], [])\n    AC_LANG_POP([C++])\nelse\n    AX_CXX_COMPILE_STDCXX_11([ext], [optional])\nfi\n\n# Check whether to build a with debug symbols\nLIBZMQ_CHECK_ENABLE_DEBUG\n\n# Check whether to enable code coverage\nLIBZMQ_WITH_GCOV\n\nAC_MSG_CHECKING([if TIPC is available and supports nonblocking connect])\n\nAC_RUN_IFELSE(\n    [AC_LANG_PROGRAM([[\n            #include <stdlib.h>\n            #include <string.h>\n            #include <fcntl.h>\n            #include <errno.h>\n            #include <sys/socket.h>\n            #include <linux/tipc.h>\n        ]],[[\n            struct sockaddr_tipc topsrv;\n            int sd = socket(AF_TIPC, SOCK_SEQPACKET, 0);\n            memset(&topsrv, 0, sizeof(topsrv));\n            topsrv.family = AF_TIPC;\n            topsrv.addrtype = TIPC_ADDR_NAME;\n            topsrv.addr.name.domain = tipc_addr (10, 10, 10);\n            topsrv.addr.name.name.type = TIPC_TOP_SRV;\n            topsrv.addr.name.name.instance = TIPC_TOP_SRV;\n            fcntl(sd, F_SETFL, O_NONBLOCK);\n        ]])\n    ],\n    [libzmq_tipc_support=yes],\n    [libzmq_tipc_support=no],\n    [libzmq_tipc_support=no])\n\nAC_MSG_RESULT([$libzmq_tipc_support])\n\nAC_ARG_ENABLE([pedantic],\n    [AS_HELP_STRING([--disable-pedantic], [disable pedantic compiler checks [default=enabled]])],\n    [libzmq_pedantic=$enableval], [libzmq_pedantic=yes])\n\nAC_ARG_WITH([militant],\n    [AS_HELP_STRING([--with-militant],\n        [enable militant API assertions])],\n    [zmq_militant=\"yes\"],\n    [])\n\nif test \"x$zmq_militant\" = \"xyes\"; then\n    AC_DEFINE(ZMQ_ACT_MILITANT, 1, [Enable militant API assertions])\nfi\n\n# Disable IPC on unsupported platforms.\ncase \"${host_os}\" in\n    *vxworks*|*openvms*|*mingw*)\n        ;;\n    *)\n        AC_DEFINE(ZMQ_HAVE_IPC, 1, [Have AF_UNIX sockets for ipc transport])\n        ;;\nesac\n\n# Data race/deadlock detection\n# NOTE: Running libzmq under TSAN doesn't make much sense -- synchronization in libzmq is to some extent\n# handled by the code \"knowing\" what threads are allowed to do, rather than by enforcing those\n# restrictions, so TSAN generates a lot of (presumably) false positives from libzmq.\n# The settings below are intended to enable libzmq to be built with minimal support for TSAN\n# such that it can be used along with other code that is also built with TSAN.\nAC_MSG_CHECKING([whether to enable TSan])\nAC_ARG_ENABLE(thread-sanitizer, [AS_HELP_STRING([--enable-thread-sanitizer=yes/no],\n                  [Build with clang Thread Sanitizer instrumentation])],\n                  [ZMQ_TSAN=\"$enableval\"])\n\nif test \"x${ZMQ_TSAN}\" = \"xyes\"; then\n    TSAN_FLAGS=\"-fno-omit-frame-pointer -fsanitize=thread\"\n    TSAN_CCFLAGS=\"${TSAN_CCFLAGS} -mllvm -tsan-instrument-memory-accesses=0\"\n    TSAN_CCFLAGS=\"${TSAN_CCFLAGS} -mllvm -tsan-instrument-atomics=0\"\n    TSAN_CCFLAGS=\"${TSAN_CCFLAGS} -mllvm -tsan-instrument-func-entry-exit=1\"\n    CFLAGS=\"${CFLAGS} ${TSAN_FLAGS} ${TSAN_CCFLAGS}\"\n    CXXFLAGS=\"${CXXFLAGS} ${TSAN_FLAGS} ${TSAN_CCFLAGS}\"\n    LDFLAGS=\"${LDFLAGS} ${TSAN_FLAGS} -pie\"\n\n    AM_CONDITIONAL(ENABLE_TSAN, true)\n    AC_MSG_RESULT([yes])\nelse\n    AM_CONDITIONAL(ENABLE_TSAN, false)\n    AC_MSG_RESULT([no])\nfi\n\n# Memory mis-use detection\nAC_MSG_CHECKING([whether to enable ASan])\nAC_ARG_ENABLE(address-sanitizer, [AS_HELP_STRING([--enable-address-sanitizer=yes/no],\n                  [Build with GCC Address Sanitizer instrumentation])],\n                  [ZMQ_ASAN=\"$enableval\"])\n\nif test \"x${ZMQ_ASAN}\" = \"xyes\"; then\n    CFLAGS=\"${CFLAGS} -fsanitize=address -fsanitize=undefined -fsanitize=leak -fno-sanitize-recover=all\"\n    CXXFLAGS=\"${CXXFLAGS} -fsanitize=address -fsanitize=undefined -fsanitize=leak -fno-sanitize-recover=all\"\n\n    AM_CONDITIONAL(ENABLE_ASAN, true)\n    AC_MSG_RESULT([yes])\nelse\n    AM_CONDITIONAL(ENABLE_ASAN, false)\n    AC_MSG_RESULT([no])\nfi\n\n# By default compiling with -Werror except on OSX and Solaris when building\n# with libsodium.\nAC_ARG_ENABLE([Werror],\n    [AS_HELP_STRING([--disable-Werror], [disable Werror compiler flag [default=enabled]])],\n    [libzmq_werror=$enableval], [libzmq_werror=yes])\n\n# By default use DSO visibility\nlibzmq_dso_visibility=\"yes\"\n\n# Platform specific checks\nlibzmq_on_mingw=\"no\"\nlibzmq_on_cygwin=\"no\"\nlibzmq_on_android=\"no\"\nlibzmq_on_linux=\"no\"\nlibzmq_on_gnu=\"no\"\n\n# Set some default features required by ZeroMQ code\nCPPFLAGS=\"-D_REENTRANT -D_THREAD_SAFE $CPPFLAGS\"\nCXXFLAGS=\"-Wno-long-long $CXXFLAGS\"\n\n# Will be used to add flags to pkg-config useful when apps want to statically link\nPKGCFG_LIBS_PRIVATE=\"\"\nPKGCFG_NAMES_PRIVATE=\"\"\n\n# For host type checks\nAC_CANONICAL_HOST\n\n# OS-specific tests\ncase \"${host_os}\" in\n    *linux*)\n        # Define on Linux to enable all library features. Define if using a gnu compiler\n        if test \"x$GXX\" = \"xyes\"; then\n            CPPFLAGS=\"-D_GNU_SOURCE $CPPFLAGS\"\n        fi\n        AC_DEFINE(ZMQ_HAVE_LINUX, 1, [Have Linux OS])\n        libzmq_on_linux=\"yes\"\n\n        if test \"x$libzmq_tipc_support\" = \"xyes\"; then\n            AC_DEFINE(ZMQ_HAVE_TIPC, 1, [Have TIPC support])\n        fi\n        case \"${host_os}\" in\n            *android*)\n                AC_DEFINE(ZMQ_HAVE_ANDROID, 1, [Have Android OS])\n                libzmq_on_android=\"yes\"\n            ;;\n        esac\n        ;;\n    *solaris*)\n        # Define on Solaris to enable all library features\n        CPPFLAGS=\"-D_PTHREADS $CPPFLAGS\"\n        CXXFLAGS=\"-Wno-sign-compare $CXXFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_SOLARIS, 1, [Have Solaris OS])\n        AC_CHECK_LIB(socket, socket)\n        AC_CHECK_LIB(nsl, gethostbyname)\n        AC_MSG_CHECKING([whether atomic operations can be used])\n        AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n            [[#include <atomic.h>]],\n            [[uint32_t value;\n              atomic_cas_32 (&value, 0, 0);\n              return 0;]])],\n            [solaris_has_atomic=yes],\n            [solaris_has_atomic=no])\n        AC_MSG_RESULT([$solaris_has_atomic])\n        # Solaris 8 does not have atomic operations exported to user space.\n        if test \"x$solaris_has_atomic\" = \"xno\"; then\n            AC_DEFINE(ZMQ_FORCE_MUTEXES, 1, [Force to use mutexes])\n        fi\n        ;;\n    *freebsd*)\n        # Define on FreeBSD to enable all library features\n        CPPFLAGS=\"-D__BSD_VISIBLE $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_FREEBSD, 1, [Have FreeBSD OS])\n        ;;\n    *dragonfly*)\n        CPPFLAGS=\"-D__BSD_VISIBLE $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_FREEBSD, 1, [Have DragonFly OS])\n        AC_DEFINE(ZMQ_HAVE_DRAGONFLY, 1, [Have DragonFly OS])\n        ;;\n    *darwin*)\n        # Define on Darwin to enable all library features\n        CPPFLAGS=\"-D_DARWIN_C_SOURCE $CPPFLAGS\"\n        libzmq_pedantic=\"no\"\n        AC_DEFINE(ZMQ_HAVE_OSX, 1, [Have DarwinOSX OS])\n        ;;\n    *haiku*)\n        AC_DEFINE(ZMQ_HAVE_HAIKU, 1, [Have Haiku OS])\n        AC_CHECK_LIB(network, socket)\n        ;;\n    *netbsd*)\n        # Define on NetBSD to enable all library features\n        CPPFLAGS=\"-D_NETBSD_SOURCE $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_NETBSD, 1, [Have NetBSD OS])\n        # NetBSD 5.0 and newer provides atomic operations but we can\n        # only use these on systems where PR #42842 has been fixed so\n        # we must try and link a test program using C++.\n        libzmq_netbsd_has_atomic=no\n        AC_MSG_CHECKING([whether atomic operations can be used])\n        AC_LANG_PUSH([C++])\n        AC_LINK_IFELSE([AC_LANG_PROGRAM(\n            [[#include <atomic.h>]],\n            [[uint32_t value;\n              atomic_cas_32 (&value, 0, 0);\n              return 0;]])],\n            [libzmq_netbsd_has_atomic=yes],\n            [libzmq_netbsd_has_atomic=no])\n        AC_LANG_POP([C++])\n        AC_MSG_RESULT([$libzmq_netbsd_has_atomic])\n        if test \"x$libzmq_netbsd_has_atomic\" = \"xno\"; then\n            AC_DEFINE(ZMQ_FORCE_MUTEXES, 1, [Force to use mutexes])\n        fi\n        # NetBSD Current (to become 10) has changed the type of udata in it's\n        # kevent struct from intptr_t to void * to align with darwin and other\n        # BSDs, see upstream commit:\n        # https://github.com/NetBSD/src/commit/e5ead823eb916b56589d2c6c560dbcfe4a2d0afc\n        AC_MSG_CHECKING([whether kevent udata type is intptr_t])\n        AC_LANG_PUSH([C++])\n        AC_LINK_IFELSE([AC_LANG_PROGRAM(\n            [[#include <sys/types.h>\n              #include <sys/event.h>\n              #include <sys/time.h>]],\n            [[struct kevent ev;\n              intptr_t udata;\n              EV_SET(&ev, 0, 0, EV_ADD, 0, 0, udata);\n              return 0;]])],\n            [libzmq_netbsd_kevent_udata_intptr_t=yes],\n            [libzmq_netbsd_kevent_udata_intptr_t=no])\n        AC_LANG_POP([C++])\n        AC_MSG_RESULT([$libzmq_netbsd_kevent_udata_intptr_t])\n        if test \"x$libzmq_netbsd_kevent_udata_intptr_t\" = \"xyes\"; then\n            AC_DEFINE(ZMQ_NETBSD_KEVENT_UDATA_INTPTR_T, 1, [kevent udata type is intptr_t])\n        fi\n        ;;\n    *openbsd*|*bitrig*)\n        # Define on OpenBSD to enable all library features\n        CPPFLAGS=\"-D_BSD_SOURCE $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_OPENBSD, 1, [Have OpenBSD OS])\n        ;;\n    *nto-qnx*)\n        libzmq_pedantic=\"no\"\n        AC_DEFINE(ZMQ_HAVE_QNXNTO, 1, [Have QNX Neutrino OS])\n        AC_CHECK_LIB(socket, socket)\n        ;;\n    *aix*|*os400*)\n        AC_DEFINE(ZMQ_HAVE_AIX, 1, [Have AIX OS])\n        ;;\n    *hpux*)\n        # Define on HP-UX to enable all library features\n        CPPFLAGS=\"-D_POSIX_C_SOURCE=200112L $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_HPUX, 1, [Have HPUX OS])\n        LIBZMQ_CHECK_LANG_FLAG_PREPEND([-Ae])\n        AC_CHECK_FUNCS(gethrtime)\n        ;;\n    *mingw*|*msys*)\n        AC_DEFINE(ZMQ_HAVE_WINDOWS, 1, [Have Windows OS])\n        AC_DEFINE(ZMQ_HAVE_MINGW, 1, [Have MinGW])\n        AC_CHECK_HEADERS(windows.h)\n        AC_CHECK_LIB(ws2_32, main, ,\n            [AC_MSG_ERROR([cannot link with ws2_32.dll.])])\n        AC_CHECK_LIB(rpcrt4, main, ,\n            [AC_MSG_ERROR([cannot link with rpcrt4.dll.])])\n        AC_CHECK_LIB(iphlpapi, main, ,\n            [AC_MSG_ERROR([cannot link with iphlpapi.dll.])])\n        libzmq_on_mingw=\"yes\"\n        libzmq_dso_visibility=\"no\"\n\n        if test \"x$enable_static\" = \"xyes\"; then\n            CPPFLAGS=\"-DZMQ_STATIC $CPPFLAGS\"\n            PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -liphlpapi -lws2_32\"\n        fi\n\t# Set FD_SETSIZE to 16384\n\tCPPFLAGS=\" -DFD_SETSIZE=16384 $CPPFLAGS\"\n        ;;\n    *cygwin*)\n        # Define on Cygwin to enable all library features\n        CPPFLAGS=\"-D_GNU_SOURCE $CPPFLAGS\"\n        AC_DEFINE(ZMQ_HAVE_CYGWIN, 1, [Have Cygwin])\n        libzmq_on_cygwin=\"yes\"\n        libzmq_dso_visibility=\"no\"\n        if test \"x$enable_static\" = \"xyes\"; then\n            AC_MSG_ERROR([Building static libraries is not supported under Cygwin])\n        fi\n        ;;\n    gnu*)\n        # Define on GNU/Hurd to enable all library features. Define if using a gnu compiler\n        if test \"x$GXX\" = \"xyes\"; then\n            CPPFLAGS=\"-D_GNU_SOURCE $CPPFLAGS\"\n        fi\n        AC_DEFINE(ZMQ_HAVE_GNU, 1, [Have GNU/Hurd OS])\n        libzmq_on_gnu=\"yes\"\n\tAC_CHECK_LIB(rt, sem_init)\n        ;;\n    *)\n        AC_MSG_ERROR([unsupported system: ${host_os}.])\n        ;;\nesac\n\n# Sun Studio does not like anonymous structures in unions and does not have weak attribute\nif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" = \"xyes\"; then\n    CXXFLAGS=\"${CXXFLAGS} -features=extensions\"\n    CFLAGS=\"${CFLAGS} -features=extensions\"\n    CPPFLAGS=\"${CPPFLAGS} -DUNITY_WEAK_PRAGMA\"\nfi\n\n# Checks for libraries\nAC_CHECK_LIB([pthread], [pthread_create])\nif test \"x$ac_cv_lib_pthread_pthread_create\" = \"xyes\"; then\n    PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -lpthread\"\nfi\nAC_CHECK_LIB([rt], [clock_gettime])\nif test \"x$ac_cv_lib_rt_clock_gettime\" = \"xyes\"; then\n    PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -lrt\"\nfi\n\n#\n# Check if the compiler supports -fvisibility=hidden flag. MinGW uses __declspec\n#\nif test \"x$libzmq_dso_visibility\" = \"xyes\"; then\n    AC_LANG_PUSH([C++])\n    LIBZMQ_CHECK_LANG_VISIBILITY([LIBZMQ_EXTRA_CXXFLAGS=\"$libzmq_cv_[]_AC_LANG_ABBREV[]_visibility_flag ${LIBZMQ_EXTRA_CXXFLAGS}\"])\n    AC_LANG_POP([C++])\nfi\n\n# CPU-specific optimizations\ncase \"${host_cpu}\" in\n    *sparc64*)\n        AC_LANG_PUSH([C++])\n        LIBZMQ_CHECK_LANG_FLAG_PREPEND([-mcpu=v9])\n        AC_LANG_POP([C++])\n    ;;\n    *)\n    ;;\nesac\n\n# Check whether to build docs / install man pages\nLIBZMQ_CHECK_DOC_BUILD\n\n# Check polling system, set appropriate macro in src/platform.hpp\nLIBZMQ_CHECK_POLLER\n\n# Check for pselect to activate ppoll, set appropriate macro in src/platform.hpp\nLIBZMQ_CHECK_PPOLL\n\n# Check cacheline size, set appropriate macro in src/platform.hpp\nLIBZMQ_CHECK_CACHELINE\n\n# Check condition variable implementation, set appropriate macro in src/platform.hpp\nLIBZMQ_CHECK_CV_IMPL\n\n# Checks for header files.\nAC_HEADER_STDC\nAC_CHECK_HEADERS(\\\n    errno.h \\\n    time.h \\\n    unistd.h \\\n    limits.h \\\n    stddef.h \\\n    stdlib.h \\\n    string.h \\\n    arpa/inet.h \\\n    netinet/tcp.h \\\n    netinet/in.h \\\n    sys/socket.h \\\n    sys/time.h)\n\n# Check if we have ifaddrs.h header file.\nAC_CHECK_HEADERS(ifaddrs.h, [AC_DEFINE(ZMQ_HAVE_IFADDRS, 1, [Have ifaddrs.h header.])])\n\n# Check if we have sys/uio.h header file.\nAC_CHECK_HEADERS(sys/uio.h, [AC_DEFINE(ZMQ_HAVE_UIO, 1, [Have uio.h header.])])\n\n# Force not to use eventfd\nAC_ARG_ENABLE([eventfd],\n    [AS_HELP_STRING([--disable-eventfd], [disable eventfd [default=enabled]])],\n    [zmq_enable_eventfd=$enableval],\n    [zmq_enable_eventfd=yes])\n\nif test \"x$zmq_enable_eventfd\" = \"xyes\"; then\n    # Check if we have eventfd.h header file.\n    AC_CHECK_HEADERS(sys/eventfd.h, [\n        AC_DEFINE(ZMQ_HAVE_EVENTFD, 1, [Have eventfd extension])\n        LIBZMQ_CHECK_EVENTFD_CLOEXEC([\n            AC_DEFINE([ZMQ_HAVE_EVENTFD_CLOEXEC],\n               [1],\n               [Whether EFD_CLOEXEC is defined and functioning.])\n            ])\n    ])\nfi\n\n# Conditionally build performance measurement tools\nAC_ARG_ENABLE([perf],\n    [AS_HELP_STRING([--disable-perf], [don't build performance measurement tools [default=build]])],\n    [zmq_enable_perf=$enableval],\n    [zmq_enable_perf=yes])\n\nAM_CONDITIONAL(ENABLE_PERF, test \"x$zmq_enable_perf\" = \"xyes\")\n\n# Conditionally build curve key generation tool\nAC_ARG_ENABLE([curve-keygen],\n    [AS_HELP_STRING([--disable-curve-keygen], [don't build curve-keygen tool [default=build]])],\n    [zmq_enable_curve_keygen=$enableval],\n    [zmq_enable_curve_keygen=yes])\n\n# Use c++ in subsequent tests\nAC_LANG_PUSH(C++)\n\nAC_CHECK_DECLS([SO_PEERCRED],\n    [AC_DEFINE(ZMQ_HAVE_SO_PEERCRED, 1, [Have SO_PEERCRED socket option])],\n    [],\n    [#include <sys/socket.h>])\n\nAC_CHECK_DECLS([LOCAL_PEERCRED],\n    [AC_DEFINE(ZMQ_HAVE_LOCAL_PEERCRED, 1, [Have LOCAL_PEERCRED socket option])],\n    [],\n    [#include <sys/socket.h>])\n\nAM_CONDITIONAL(HAVE_IPC_PEERCRED, test \"x$ac_cv_have_decl_SO_PEERCRED\" = \"xyes\" || test \"x$ac_cv_have_decl_LOCAL_PEERCRED\" = \"xyes\")\n\nAC_HEADER_STDBOOL\nAC_C_CONST\nAC_C_INLINE\n\n# Checks for typedefs, structures, and compiler characteristics.\nif test \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_intel_compiler\" = \"xyes\"; then\n    dnl 279: controlling expression is constant\n    dnl Fixes build with ICC 12.x\n    LIBZMQ_CHECK_WITH_FLAG([-wd279], [AC_TYPE_SIZE_T])\n    LIBZMQ_CHECK_WITH_FLAG([-wd279], [AC_TYPE_SSIZE_T])\nelse\n    AC_TYPE_SIZE_T\n    AC_TYPE_SSIZE_T\nfi\n\nAC_HEADER_TIME\nAC_TYPE_UINT32_T\nAC_C_VOLATILE\n\n# build using libgssapi_krb5\nAC_ARG_WITH([libgssapi_krb5], [AS_HELP_STRING([--with-libgssapi_krb5],\n    [require libzmq build with libgssapi_krb5 [default=no]])],\n    [require_libgssapi_krb5_ext=$withval],\n    [require_libgssapi_krb5_ext=no])\n\n# conditionally require libgssapi_krb5\nif test \"x$require_libgssapi_krb5_ext\" != \"xno\"; then\n    PKG_CHECK_MODULES([gssapi_krb5], [krb5-gssapi], [\n        have_gssapi_library=\"yes\"\n        PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE krb5-gssapi\"\n    ], [\n        AC_CHECK_HEADERS(gssapi/gssapi_generic.h)\n        AC_SEARCH_LIBS([gss_init_sec_context], [gssapi_krb5 gssapi],\n            have_gssapi_library=\"yes\",\n            AC_MSG_ERROR(libgssapi_krb5 is needed for GSSAPI security))\n        PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -lgssapi_krb5\"\n    ])\nfi\nif test \"x$have_gssapi_library\" = \"xyes\"; then\n    AC_DEFINE(HAVE_LIBGSSAPI_KRB5, [1], [Enabled GSSAPI security])\nfi\nAM_CONDITIONAL(BUILD_GSSAPI, test \"x$have_gssapi_library\" = \"xyes\")\n\n# Select curve encryption library, defaults to disabled\n# To use libsodium instead, use --with-libsodium (must be installed)\n# To disable curve, use --disable-curve\n\nAC_ARG_WITH([libsodium],\n    [AS_HELP_STRING([--with-libsodium], [use libsodium [default=no]])])\n\nAS_IF([test \"x$with_libsodium\" = \"xyes\"], [\n    PKG_CHECK_MODULES([sodium], [libsodium], [libsodium_found=yes], [\n        AC_MSG_ERROR(libsodium is not installed. Install it, then run configure again)\n    ])\n])\n\nAC_ARG_ENABLE([curve],\n    [AS_HELP_STRING([--disable-curve], [disable CURVE security [default=no]])])\n\nAC_ARG_ENABLE(\n    [libsodium_randombytes_close],\n    [AS_HELP_STRING(\n        [--disable-libsodium_randombytes_close],\n        [Do not call libsodium randombytes_close() when terminating contexts.\n        If disabled, may leave one FD open on /dev/urandom\n        until randombytes_close() is called explicitly,\n        but fixes a crash when multiple contexts are used with CURVE.\n        Has no effect when getrandom() is available. [default=enabled]]\n    )],\n    [],\n    [enable_libsodium_randombytes_close=yes]\n)\n\nif test \"x$enable_curve\" = \"xno\"; then\n    curve_library=\"\"\n    AC_MSG_NOTICE([CURVE security is disabled])\n\nelif test \"x$with_libsodium\" = \"xyes\"; then\n    AC_MSG_NOTICE([Using libsodium for CURVE security])\n    AC_DEFINE(ZMQ_HAVE_CURVE, [1], [Using curve encryption])\n    AC_DEFINE(ZMQ_USE_LIBSODIUM, [1], [Using libsodium for curve encryption])\n    if test \"x$enable_libsodium_randombytes_close\" = \"xyes\"; then\n        AC_DEFINE(ZMQ_LIBSODIUM_RANDOMBYTES_CLOSE, [1], [Automatically close libsodium randombytes. Not threadsafe without getrandom()])\n    else\n        AC_MSG_NOTICE([Disabling libsodium randombytes_close(). randombytes_close() may need to be called in application code.])\n    fi\n\n    curve_library=\"libsodium\"\n    enable_curve=\"yes\"\n\n    case \"${host_os}\" in\n        *solaris*)\n            dnl On Solaris, libsodium depends on libssp\n            LDFLAGS=\"-lssp $LDFLAGS\"\n            libzmq_pedantic=\"no\"\n            libzmq_werror=\"no\"\n        ;;\n        *darwin*)\n            dnl On Darwin, building with libsodium causes\n            dnl macro redefinition warnings\n            libzmq_werror=\"no\"\n        ;;\n    esac\n\n    PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE libsodium\"\nfi\n\nAM_CONDITIONAL(ENABLE_CURVE_KEYGEN, test \"x$enable_curve\" = \"xyes\" -a \"x$zmq_enable_curve_keygen\" = \"xyes\")\n\nAM_CONDITIONAL(USE_LIBSODIUM, test \"$curve_library\" = \"libsodium\")\nAM_CONDITIONAL(HAVE_CURVE, test \"x$curve_library\" != \"x\")\nAM_CONDITIONAL(USE_WEPOLL, test \"$poller\" = \"wepoll\")\n\n# Check requiring packages for WebSocket\nws_crypto_library=\"\"\n\nAC_ARG_ENABLE([ws],\n    [AS_HELP_STRING([--enable-ws], [Enable WebSocket transport [default=state of DRAFT]])],\n    [enable_ws=$enableval],\n    [enable_ws=$enable_drafts])\n\nAC_ARG_WITH([nss],\n    [AS_HELP_STRING([--with-nss], [use nss instead of built-in sha1 [default=no]])])\n\nAC_ARG_WITH([tls],\n    [AS_HELP_STRING([--with-tls], [Enable TLS (WSS transport) [default=no]])])\n\nif test \"x$enable_ws\" != \"xno\"; then\n    if test \"x$with_tls\" = \"xyes\"; then\n        PKG_CHECK_MODULES([GNUTLS], [gnutls >= 3.1.4], [\n            PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE gnutls >= 3.1.4\"\n            ws_crypto_library=\"gnutls\"\n            AC_DEFINE(ZMQ_USE_GNUTLS, [1], [Use GNUTLS for TLS])\n            AC_DEFINE(ZMQ_HAVE_WS, [1], [Using websocket])\n            AC_DEFINE(ZMQ_HAVE_WSS, [1], [WSS enabled])\n            AC_MSG_NOTICE(Using gnutls)\n        ],[\n          AC_MSG_ERROR([GnuTLS is not installed. Install it, then run configure again])\n        ])\n    elif test \"x$with_nss\" = \"xyes\"; then\n        PKG_CHECK_MODULES([NSS3], [nss], [\n            PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE nss\"\n            AC_DEFINE(ZMQ_USE_NSS, [1], [Using NSS])\n            AC_DEFINE(ZMQ_HAVE_WS, [1], [Using websocket])\n            ws_crypto_library=\"nss\"\n            AC_MSG_NOTICE(Using NSS)\n        ], [\n            AC_MSG_ERROR([nss is not installed. Install it, then run configure again])\n        ])\n    else\n        AC_DEFINE(ZMQ_HAVE_WS, [1], [Using websocket])\n        AC_DEFINE(ZMQ_USE_BUILTIN_SHA1, [1], [Using built-in sha1])\n        AC_MSG_NOTICE(Using built-in SHA1)\n        ws_crypto_library=\"builtin\"\n    fi\nfi\n\nAM_CONDITIONAL(HAVE_WS, test \"x$ws_crypto_library\" != \"x\")\nAM_CONDITIONAL(USE_NSS, test \"x$ws_crypto_library\" = \"xnss\")\nAM_CONDITIONAL(USE_BUILTIN_SHA1, test \"x$ws_crypto_library\" = \"xbuiltin\")\nAM_CONDITIONAL(USE_GNUTLS, test \"x$ws_crypto_library\" = \"xgnutls\")\nAM_CONDITIONAL(HAVE_WSS, test \"x$ws_crypto_library\" = \"xgnutls\")\n\n# build using pgm\nhave_pgm_library=\"no\"\n\nAC_ARG_WITH([pgm], [AS_HELP_STRING([--with-pgm],\n    [build libzmq with PGM extension. Requires pkg-config [default=no]])],\n    [with_pgm_ext=$withval],\n    [with_pgm_ext=no])\n\n# conditionally require pgm package\nif test \"x$with_pgm_ext\" != \"xno\"; then\n    PKG_CHECK_MODULES([pgm], [openpgm-5.3 >= 5.3], [\n        have_pgm_library=\"yes\"\n        PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE openpgm-5.3 >= 5.3\"\n    ], [\n        PKG_CHECK_MODULES([pgm], [openpgm-5.2 >= 5.2], [\n            have_pgm_library=\"yes\"\n            PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE openpgm-5.2 >= 5.2\"\n        ], [\n            PKG_CHECK_MODULES([pgm], [openpgm-5.1 >= 5.1], [\n                have_pgm_library=\"yes\"\n                PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE openpgm-5.1 >= 5.1\"\n            ])\n        ])\n    ])\nfi\n\nif test \"x$have_pgm_library\" = \"xyes\"; then\n    AC_DEFINE(ZMQ_HAVE_OPENPGM, [1], [Have OpenPGM extension])\n    # When using CXX98 mode 'restrict will not be defined, so redefine it, as it\n    # is used in the PGM headers\n    if test \"x$enable_force_CXX98_compat\" = \"xyes\"; then\n        CPPFLAGS=\"-Drestrict=__restrict__ $CPPFLAGS\"\n    fi\nfi\n\nAM_CONDITIONAL(HAVE_PGM, test \"x$have_pgm_library\" = \"xyes\")\n\n\n# This uses \"--with-norm\" to point to the \"norm\" directory\n# for \"norm/include\" and \"norm/lib\"\n#(if \"--with-norm=yes\" is given, then assume installed on system)\nAC_ARG_WITH([norm],\n    [AS_HELP_STRING([--with-norm],\n        [build libzmq with NORM protocol extension, optionally specifying norm path [default=no]])],\n    [with_norm_ext=$withval],\n    [with_norm_ext=no])\n\nAC_MSG_CHECKING(\"with_norm_ext = ${with_norm_ext}\")\n\nif test \"x$with_norm_ext\" != \"xno\"; then\n    PKG_CHECK_MODULES([norm], [norm], [\n        have_norm_library=\"yes\"\n        PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE norm\"\n    ], [\n        AC_MSG_RESULT([yes])\n\n        norm_LIBS=\"\"\n        norm_CFLAGS=\"\"\n        if test \"x$with_norm_ext\" != \"xyes\"; then\n            norm_path=\"${with_norm_ext}\"\n            norm_CFLAGS=\"${norm_CFLAGS} -I${norm_path}/include\"\n            norm_LIBS=\"${norm_LIBS} -L${norm_path}/lib\"\n        fi\n        norm_LIBS=\"${norm_LIBS} -lnorm\"\n        have_norm_library=\"yes\"\n        PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE $norm_LIBS\"\n        AC_SUBST(norm_LIBS)\n        AC_SUBST(norm_CFLAGS)\n    ])\nelse\n    AC_MSG_RESULT([no])\nfi\nif test \"x$have_norm_library\" = \"xyes\"; then\n    AC_DEFINE(ZMQ_HAVE_NORM, [1], [Have NORM protocol extension])\nfi\nAM_CONDITIONAL(HAVE_NORM, test \"x$have_norm_library\" = \"xyes\")\n\n# build using vmci\nhave_vmci_library=\"no\"\n\nAC_ARG_WITH([vmci], [AS_HELP_STRING([--with-vmci],\n    [build libzmq with VMCI transport [default=no]])],\n    [have_vmci_ext=$withval],\n    [have_vmci_ext=no])\n\nif test \"x$have_vmci_ext\" != \"xno\"; then\n    AC_DEFINE(ZMQ_HAVE_VMCI, 1, [Have VMCI transport])\n\n    if test \"x$have_vmci_ext\" != \"xyes\"; then\n        vmci_path=\"${have_vmci_ext}\"\n        LIBZMQ_VMCI_CXXFLAGS=\"-I${vmci_path}\"\n        LIBZMQ_VMCI_LDFLAGS=\"-I${vmci_path}\"\n        LIBZMQ_EXTRA_CXXFLAGS=\"${LIBZMQ_VMCI_CXXFLAGS} ${LIBZMQ_EXTRA_CXXFLAGS}\"\n        LIBZMQ_EXTRA_LDFLAGS=\"${LIBZMQ_VMCI_LDFLAGS} ${LIBZMQ_EXTRA_LDFLAGS}\"\n    fi\nfi\n\nAM_CONDITIONAL(HAVE_VMCI, test \"x$have_vmci_ext\" != \"xno\")\n\n# Set -Wall, -Werror and -pedantic\nAC_LANG_PUSH([C++])\n\n# Check how to enable -Wall\nLIBZMQ_LANG_WALL([CXXFLAGS=\"$libzmq_cv_[]_AC_LANG_ABBREV[]_wall_flag $CXXFLAGS\"])\n\nif test \"x$libzmq_werror\" = \"xyes\" -a \"x$libzmq_cv_[]_AC_LANG_ABBREV[]_sun_studio_compiler\" != \"xyes\"; then\n    LIBZMQ_LANG_WERROR([CXXFLAGS=\"$libzmq_cv_[]_AC_LANG_ABBREV[]_werror_flag $CXXFLAGS\"])\nfi\n\nif test \"x$libzmq_pedantic\" = \"xyes\"; then\n    LIBZMQ_LANG_STRICT([CXXFLAGS=\"$libzmq_cv_[]_AC_LANG_ABBREV[]_strict_flag $CXXFLAGS\"])\nfi\nAC_LANG_POP([C++])\n\nAM_CONDITIONAL(BUILD_TIPC, test \"x$libzmq_tipc_support\" = \"xyes\")\nAM_CONDITIONAL(ON_MINGW, test \"x$libzmq_on_mingw\" = \"xyes\")\nAM_CONDITIONAL(ON_CYGWIN, test \"x$libzmq_on_cygwin\" = \"xyes\")\nAM_CONDITIONAL(ON_ANDROID, test \"x$libzmq_on_android\" = \"xyes\")\nAM_CONDITIONAL(ON_LINUX, test \"x$libzmq_on_linux\" = \"xyes\")\nAM_CONDITIONAL(ON_GNU, test \"x$libzmq_on_gnu\" = \"xyes\")\n\n# Check for __atomic_Xxx compiler intrinsics\nAC_LANG_PUSH([C++])\nAX_CHECK_COMPILE_FLAG([-Watomic-alignment],\n    [CXXFLAGS=\"${CXXFLAGS} -Wno-atomic-alignment\"],\n    [],\n    [-Werror])\nLIBZMQ_CHECK_ATOMIC_INTRINSICS([\n    AC_DEFINE([ZMQ_HAVE_ATOMIC_INTRINSICS],\n              [1],\n              [Whether compiler has __atomic_Xxx intrinsics.])\n    ])\nAC_LANG_POP([C++])\n\n# Checks for library functions.\nAC_TYPE_SIGNAL\nAC_CHECK_FUNCS(perror gettimeofday clock_gettime memset socket getifaddrs freeifaddrs mkdtemp accept4)\nAC_CHECK_HEADERS([alloca.h])\n\n# AC_CHECK_FUNCS(fork) fails on gcc 7\nAC_MSG_CHECKING([whether fork is available])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <unistd.h>]],\n\t\t[[return fork();]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(HAVE_FORK, [1], [fork is available])\n\t\tAM_CONDITIONAL(HAVE_FORK, true)\n\t],[\n\t\tAC_MSG_RESULT([no])\n\t\tAM_CONDITIONAL(HAVE_FORK, false)\n])\n\n# string.h doesn't seem to be included by default in Fedora 30\nAC_MSG_CHECKING([whether strnlen is available])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <string.h>]],\n\t\t[[size_t bar = strnlen (\"foo\", 1); (void)bar; return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(HAVE_STRNLEN, [1],\n\t\t    [strnlen is available])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\n\nAC_MSG_CHECKING([whether if_nametoindex is available])\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM([[\n        #ifdef _WIN32\n        #include <iphlpapi.h>\n        #else\n        #include <sys/types.h>\n        #include <sys/socket.h>\n        #include <net/if.h>\n        #endif]], [[\n        if_nametoindex(\"\");\n    ]])],[\n        AC_MSG_RESULT([yes])\n        AC_DEFINE(HAVE_IF_NAMETOINDEX, [1],\n        [if_nametoindex is available])\n    ],[\n        AC_MSG_RESULT([no])\n])\n\nAC_ARG_ENABLE([libbsd],\n    [AS_HELP_STRING([--enable-libbsd],\n        [enable libbsd [default=auto]])],\n    [enable_libbsd=$enableval],\n    [enable_libbsd=\"auto\"])\n\nif test \"x$enable_libbsd\" != \"xno\"; then\n    PKG_CHECK_MODULES(LIBBSD, [libbsd],\n        [\n            AC_DEFINE(ZMQ_HAVE_LIBBSD, 1, [The libbsd library is to be used])\n            AC_SUBST([LIBBSD_CFLAGS])\n            AC_SUBST([LIBBSD_LIBS])\n            PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE libbsd\"\n            found_libbsd=\"yes\"\n        ],\n        [\n            found_libbsd=\"no\"\n            if test \"x$enable_libbsd\" = \"xyes\"; then\n                AC_MSG_ERROR([Cannot find libbsd])\n            else\n                AC_MSG_WARN([Cannot find libbsd])\n            fi\n        ])\nfi\nAC_MSG_CHECKING([whether strlcpy is available])\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n        [[#include <string.h>]],\n        [[char buf [100]; size_t bar = strlcpy (buf, \"foo\", 100); (void)bar; return 0;]])\n    ],[\n        AC_MSG_RESULT([yes])\n        AC_DEFINE(ZMQ_HAVE_STRLCPY, [1],\n            [strlcpy is available])\n    ],[\n        AC_MSG_RESULT([no])\n])\n\n# pthread_setname is non-posix, and there are at least 4 different implementations\nAC_MSG_CHECKING([whether signature of pthread_setname_np() has 1 argument])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <pthread.h>]],\n\t\t[[pthread_setname_np (\"foo\"); return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(ZMQ_HAVE_PTHREAD_SETNAME_1, [1],\n\t\t    [Whether pthread_setname_np() has 1 argument])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\nAC_MSG_CHECKING([whether signature of pthread_setname_np() has 2 arguments])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <pthread.h>]],\n\t\t[[pthread_setname_np (pthread_self (), \"foo\"); return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(ZMQ_HAVE_PTHREAD_SETNAME_2, [1],\n\t\t    [Whether pthread_setname_np() has 2 arguments])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\nAC_MSG_CHECKING([whether signature of pthread_setname_np() has 3 arguments])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <pthread.h>]],\n\t\t[[pthread_setname_np (pthread_self(), \"foo\", (void *)0); return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(ZMQ_HAVE_PTHREAD_SETNAME_3, [1],\n\t\t    [Whether pthread_setname_np() has 3 arguments])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\nAC_MSG_CHECKING([whether pthread_set_name_np() exists])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <pthread.h>]],\n\t\t[[pthread_set_name_np (pthread_self(), \"foo\"); return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(ZMQ_HAVE_PTHREAD_SET_NAME, [1],\n\t\t    [Whether pthread_set_name_np() exists])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\n\n\n# pthread_setaffinity_np is non-posix:\nAC_MSG_CHECKING([whether pthread_setaffinity_np() exists])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <pthread.h>]],\n\t\t[[cpu_set_t test; pthread_setaffinity_np (pthread_self(), sizeof(cpu_set_t), &test); return 0;]])\n\t],[\n\t\tAC_MSG_RESULT([yes])\n\t\tAC_DEFINE(ZMQ_HAVE_PTHREAD_SET_AFFINITY, [1],\n\t\t    [Whether pthread_setaffinity_np() exists])\n\t],[\n\t\tAC_MSG_RESULT([no])\n])\n\n\nLIBZMQ_CHECK_SOCK_CLOEXEC([\n    AC_DEFINE([ZMQ_HAVE_SOCK_CLOEXEC],\n        [1],\n        [Whether SOCK_CLOEXEC is defined and functioning.])\n    ])\n\nLIBZMQ_CHECK_O_CLOEXEC([\n    AC_DEFINE([ZMQ_HAVE_O_CLOEXEC],\n        [1],\n        [Whether O_CLOEXEC is defined and functioning.])\n    ])\n\nLIBZMQ_CHECK_SO_BINDTODEVICE([\n    AC_DEFINE([ZMQ_HAVE_SO_BINDTODEVICE],\n        [1],\n        [Whether SO_BINDTODEVICE is supported.])\n    ])\n\n# TCP keep-alives Checks.\nLIBZMQ_CHECK_SO_KEEPALIVE([\n    AC_DEFINE([ZMQ_HAVE_SO_KEEPALIVE],\n        [1],\n        [Whether SO_KEEPALIVE is supported.])\n    ])\n\nLIBZMQ_CHECK_TCP_KEEPCNT([\n    AC_DEFINE([ZMQ_HAVE_TCP_KEEPCNT],\n        [1],\n        [Whether TCP_KEEPCNT is supported.])\n    ])\n\nLIBZMQ_CHECK_TCP_KEEPIDLE([\n    AC_DEFINE([ZMQ_HAVE_TCP_KEEPIDLE],\n        [1],\n        [Whether TCP_KEEPIDLE is supported.])\n    ])\n\nLIBZMQ_CHECK_TCP_KEEPINTVL([\n    AC_DEFINE([ZMQ_HAVE_TCP_KEEPINTVL],\n        [1],\n        [Whether TCP_KEEPINTVL is supported.])\n    ])\n\nLIBZMQ_CHECK_TCP_KEEPALIVE([\n    AC_DEFINE([ZMQ_HAVE_TCP_KEEPALIVE],\n        [1],\n        [Whether TCP_KEEPALIVE is supported.])\n    ])\n\nLIBZMQ_CHECK_SO_PRIORITY([\n    AC_DEFINE([ZMQ_HAVE_SO_PRIORITY],\n        [1],\n        [Whether SO_PRIORITY is supported.])\n    ])\n\nLIBZMQ_CHECK_GETRANDOM([\n    AC_DEFINE([ZMQ_HAVE_GETRANDOM],\n        [1],\n        [Whether getrandom is supported.])\n    ])\n\nif test \"x$cross_compiling\" = \"xyes\"; then\n    #   Enable draft by default when cross-compiling\n    defaultval=yes\nelse\n    # enable draft API by default if we're in a git repository\n    # else disable it by default; then allow --enable-drafts=yes/no override\n    AC_CHECK_FILE($srcdir/.git, [defaultval=yes], [defaultval=no])\nfi\n\nAC_ARG_ENABLE([drafts],\n    AS_HELP_STRING([--enable-drafts],\n        [Build and install draft classes and methods [default=yes]]),\n    [enable_drafts=$enableval],\n    [enable_drafts=$defaultval])\n\nAM_CONDITIONAL([ENABLE_DRAFTS], [test x$enable_drafts != xno])\n\nif test \"x$enable_drafts\" = \"xyes\"; then\n    AC_MSG_NOTICE([Building stable and legacy API + draft API])\n    AC_DEFINE(ZMQ_BUILD_DRAFT_API, 1, [Provide draft classes and methods])\n    AC_SUBST(pkg_config_defines, \"-DZMQ_BUILD_DRAFT_API=1\")\nelse\n    AC_MSG_NOTICE([Building stable and legacy API (no draft API)])\n    AC_SUBST(pkg_config_defines, \"\")\nfi\n\nAC_ARG_ENABLE([libunwind],\n    [AS_HELP_STRING([--enable-libunwind],\n        [enable libunwind [default=auto]])],\n    [enable_libunwind=$enableval],\n    [enable_libunwind=\"auto\"])\n\nif test \"x$enable_libunwind\" != \"xno\"; then\n    PKG_CHECK_MODULES(LIBUNWIND, [libunwind],\n        [\n            AC_DEFINE(HAVE_LIBUNWIND, 1, [The libunwind library is to be used])\n            AC_SUBST([LIBUNWIND_CFLAGS])\n            AC_SUBST([LIBUNWIND_LIBS])\n            AC_CHECK_LIB([dl], [dladdr], [\n                PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -ldl\"\n                LIBS=\"-ldl $LIBS\"\n            ], [\n                AC_CHECK_LIB([dld], [dladdr], [\n                    PKGCFG_LIBS_PRIVATE=\"$PKGCFG_LIBS_PRIVATE -ldld\"\n                    LIBS=\"-ldld $LIBS\"\n                ])\n            ])\n            PKGCFG_NAMES_PRIVATE=\"$PKGCFG_NAMES_PRIVATE libunwind\"\n        ],\n        [\n            if test \"x$enable_libunwind\" = \"xyes\"; then\n                AC_MSG_ERROR([Cannot find libunwind])\n            else\n                AC_MSG_WARN([Cannot find libunwind])\n            fi\n        ])\nfi\n\nAC_ARG_ENABLE([radix-tree],\n    AS_HELP_STRING([--enable-radix-tree],\n        [Use radix tree implementation to manage subscriptions [default=DRAFT]]),\n    [radix_tree=$enableval],\n    [radix_tree=$enable_drafts])\n\nAM_CONDITIONAL([ENABLE_RADIX_TREE], [test x$radix_tree != xno])\n\nif test \"x$radix_tree\" = \"xyes\"; then\n    AC_MSG_NOTICE([Using radix tree implementation to manage subscriptions])\n    AC_DEFINE(ZMQ_USE_RADIX_TREE, 1, [Use radix tree implementation to manage subscriptions])\nelse\n    AC_MSG_NOTICE([Using mtree implementation to manage subscriptions])\nfi\n\n# See if clang-format is in PATH; the result unblocks the relevant recipes\nWITH_CLANG_FORMAT=\"\"\nAS_IF([test x\"$CLANG_FORMAT\" = x],\n    [AC_PATH_PROG([CLANG_FORMAT], [clang-format], [])],\n    [AC_CHECK_PROG([WITH_CLANG_FORMAT], [$CLANG_FORMAT], [true], [fail])])\nAS_IF([test x\"$CLANG_FORMAT\" != x && test x\"$WITH_CLANG_FORMAT\" = x],\n    [AS_IF([test -x \"$CLANG_FORMAT\"],\n        [WITH_CLANG_FORMAT=true],\n        [AC_CHECK_PROG([WITH_CLANG_FORMAT], [$CLANG_FORMAT], [true], [false])])])\nAS_IF([test \"$WITH_CLANG_FORMAT\" = fail],\n    [AC_MSG_ERROR([Caller explicitly referenced CLANG_FORMAT=$CLANG_FORMAT which was not found])])\nAM_CONDITIONAL([WITH_CLANG_FORMAT], [$WITH_CLANG_FORMAT])\n\n# unittests will not build without the static libzmq.a\nAM_CONDITIONAL(ENABLE_STATIC, test \"x$enable_static\" = \"xyes\")\n\n# build using a fuzzing engine - fuzzers will be built separately and statically\nAC_ARG_WITH([fuzzing-engine], [AS_HELP_STRING([--with-fuzzing-engine],\n    [build libzmq with an exernal fuzzing engine [default=no]])],\n    [have_fuzzing_engine_ext=$withval],\n    [have_fuzzing_engine_ext=no])\nAC_ARG_WITH([fuzzing-installdir],\n    AS_HELP_STRING([--with-fuzzing-installdir=PATH],\n        [Path where to install fuzzer binaries]),\n    [fuzzing_installdir=\"$withval\"])\n\nif test \"x$have_fuzzing_engine_ext\" != \"xno\" && test \"x$fuzzing_installdir\" != \"x\" && test \"x$enable_static\" = \"xyes\"; then\n    FUZZING_ENGINE_LIB=\"${have_fuzzing_engine_ext}\"\n    FUZZING_INSTALLDIR=\"${fuzzing_installdir}\"\n    AC_SUBST(FUZZING_ENGINE_LIB)\n    AC_SUBST(FUZZING_INSTALLDIR)\n    AC_DEFINE(ZMQ_USE_FUZZING_ENGINE, 1, [fuzz tests will be built with fuzzing engine])\nfi\nAM_CONDITIONAL(FUZZING_ENGINE_LIB, test \"x$FUZZING_ENGINE_LIB\" != \"x\")\n\n# clang 6 has a warning that does not make sense on multi-platform code\nAC_LANG_PUSH([C])\nAX_CHECK_COMPILE_FLAG([-Wtautological-constant-compare],\n    [CFLAGS=\"${CFLAGS} -Wno-tautological-constant-compare\"],\n    [],\n    [-Werror])\nAC_LANG_POP([C])\nAX_CHECK_COMPILE_FLAG([-Wtautological-constant-compare],\n    [CXXFLAGS=\"${CXXFLAGS} -Wno-tautological-constant-compare\"],\n    [],\n    [-Werror])\n\n# LTO is enabled by default on SUSE Tumbleweed and RPM lint generates an error if\n# the flag is not used to compile archives:\n# E: lto-no-text-in-archive\nAC_LANG_PUSH([C])\nAX_CHECK_COMPILE_FLAG([-ffat-lto-objects],\n    [CFLAGS=\"${CFLAGS} -ffat-lto-objects\"],\n    [],\n    [-Werror])\nAC_LANG_POP([C])\nAX_CHECK_COMPILE_FLAG([-ffat-lto-objects],\n    [CXXFLAGS=\"${CXXFLAGS} -ffat-lto-objects\"],\n    [],\n    [-Werror])\n\n# Subst LIBZMQ_EXTRA_CFLAGS & CXXFLAGS & LDFLAGS\nAC_SUBST(LIBZMQ_EXTRA_CFLAGS)\nAC_SUBST(LIBZMQ_EXTRA_CXXFLAGS)\nAC_SUBST(LIBZMQ_EXTRA_LDFLAGS)\n\nAC_SUBST(LIBZMQ_VMCI_CXXFLAGS)\nAC_SUBST(LIBZMQ_VMCI_LDFLAGS)\n\nAC_SUBST(pkg_config_libs_private, $PKGCFG_LIBS_PRIVATE)\nAC_SUBST(pkg_config_names_private, $PKGCFG_NAMES_PRIVATE)\n\n# set pkgconfigdir, allow override\nAC_ARG_WITH([pkgconfigdir],\n    AS_HELP_STRING([--with-pkgconfigdir=PATH],\n        [Path to the pkgconfig directory [[LIBDIR/pkgconfig]]]),\n    [pkgconfigdir=\"$withval\"],\n    [pkgconfigdir='${libdir}/pkgconfig'])\nAC_SUBST([pkgconfigdir])\n\nAC_ARG_ENABLE([no-export],\n    [AS_HELP_STRING([--enable-no-export],\n        [Build libzmq with empty ZMQ_EXPORT macro, bypassing platform-based automated detection [default=no]])],\n    [CPPFLAGS=\"-DZMQ_NO_EXPORT $CPPFLAGS\"])\n\nAC_CONFIG_FILES([ \\\n    Makefile \\\n    src/libzmq.pc \\\n    doc/Makefile \\\n    builds/Makefile \\\n    builds/deprecated-msvc/Makefile])\n\nAC_OUTPUT\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "installer.ico",
          "type": "blob",
          "size": 2.775390625,
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "perf",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittests",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.sh",
          "type": "blob",
          "size": 0.7373046875,
          "content": "#!/bin/sh\n#\n# This script extracts the 0MQ version from include/zmq.h, which is the master\n# location for this information.\n#\nif [ ! -f include/zmq.h ]; then\n    echo \"version.sh: error: include/zmq.h does not exist\" 1>&2\n    exit 1\nfi\nMAJOR=`grep -E '^#define +ZMQ_VERSION_MAJOR +[0-9]+$' include/zmq.h`\nMINOR=`grep -E '^#define +ZMQ_VERSION_MINOR +[0-9]+$' include/zmq.h`\nPATCH=`grep -E '^#define +ZMQ_VERSION_PATCH +[0-9]+$' include/zmq.h`\nif [ -z \"$MAJOR\" -o -z \"$MINOR\" -o -z \"$PATCH\" ]; then\n    echo \"version.sh: error: could not extract version from include/zmq.h\" 1>&2\n    exit 1\nfi\nMAJOR=`echo $MAJOR | awk '{ print $3 }'`\nMINOR=`echo $MINOR | awk '{ print $3 }'`\nPATCH=`echo $PATCH | awk '{ print $3 }'`\necho $MAJOR.$MINOR.$PATCH | tr -d '\\n'\n\n"
        }
      ]
    }
  ]
}