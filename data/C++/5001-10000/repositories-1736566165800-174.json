{
  "metadata": {
    "timestamp": 1736566165800,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/DirectX-Graphics-Samples",
      "stars": 6157,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.259765625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Explicitly declare code/VS files as CRLF\n*.cpp eol=crlf\n*.h eol=crlf\n*.hlsl eol=crlf\n*.vcxproj eol=crlf\n*.filters eol=crlf\n*.sln eol=crlf\n\n# Explicitly declare resource files as binary\n*.bin binary"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.607421875,
          "content": "﻿################################################################################\n# This .gitignore file is manually maintained\n################################################################################\n\n/Samples/Desktop/D3D12Raytracing/src/D3D12RaytracingMiniEngineSample/dxcompiler.dll\n/Libraries/D3D12RaytracingFallback/src/FallbackLayerUnitTests/x64/\n/Packages\n\n**/bin/x64\n**/obj/x64\n**/src/packages\n**/src/bin\n**/src/obj\n**/.vs\n\n*.hlsl.h\n**/Build_VS16\n**/Build\n\n*.vcxproj.user\n*.opendb\nSamples/Desktop/D3D12HelloWorld/src/HelloVAResourceInterop/*.h264\nSamples/Desktop/D3D12HelloWorld/src/HelloVAEncode/*.h264\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "Libraries",
          "type": "tree",
          "content": null
        },
        {
          "name": "MiniEngine",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.43359375,
          "content": "\n# DirectX-Graphics-Samples\nThis repo contains the DirectX 12 Graphics samples that demonstrate how to build graphics intensive applications for Windows 10.\n\nWe invite you to join us at our [discord server](http://discord.gg/directx). See our [YouTube channel](https://www.youtube.com/MicrosoftDirectX12andGraphicsEducation) for tutorials, our [spec repo](https://microsoft.github.io/DirectX-Specs/) for engineering specs of our features and [devblogs](https://devblogs.microsoft.com/directx/) for blog posts. Follow us on Twitter [@DirectX12](https://twitter.com/directx12) for the latest! See the [related links](#related-links) section for our full list of DX12-related links.\n\nFinally, make sure that you visit the [DirectX Landing Page](https://devblogs.microsoft.com/directx/landing-page/) for more resources for DirectX developers.\n\n## API Samples\nIn the Samples directory, you will find samples that attempt to break off specific features and specific usage scenarios into bite-sized chunks. For example, the ExecuteIndirect sample will show you just enough about execute indirect to get started with that feature without diving too deep into multiengine whereas the nBodyGravity sample will delve into multiengine without touching on the execute indirect feature etc. By doing this, we hope to make it easier to get started with DirectX 12.\n\n### DirectX 12 Ultimate samples\n1. [D3D12 Mesh Shaders](Samples/Desktop/D3D12MeshShaders/readme.md): This sample demonstrates how Mesh shaders can be used to increase the flexibility and performance of the geometry pipeline.\n    \n    <img src=\"Samples/Desktop/D3D12MeshShaders/src/MeshletRender/Screenshot_DX12U.png\" alt=\"D3D12 Meshlet Render preview\" height=\"200\">\n\n1. [D3D12 Variable Rate Shading](Samples/Desktop/D3D12VariableRateShading/readme.md): This sample demonstrates how shading rate can be reduced with little or no reduction in visual quality, leading to “free” performance.\n    \n    <img src=\"Samples/Desktop/D3D12VariableRateShading/src/Screenshot_DX12U.png\" alt=\"D3D12 Variable Rate Shading GUI\" height=\"200\">\n\n1. [D3D12 Raytracing](Samples/Desktop/D3D12Raytracing/readme.md): This sample demonstrates how DirectX Raytracing (DXR) brings a new level of graphics realism to video games, previously only achievable in the movie industry.\n    \n    <img src=\"Samples/Desktop/D3D12Raytracing/src/D3D12RaytracingRealTimeDenoisedAmbientOcclusion/Screenshot_DX12U.png\" alt=\"D3D12 Raytracing Real-Time Denoised Ambient Occlusion preview\" height=\"200\">\n\n## MiniEngine: A DirectX 12 Engine Starter Kit\nIn addition to the samples, we are announcing the first DirectX 12 preview release of the MiniEngine.\n\nIt came from a desire to quickly dive into graphics and performance experiments.  We knew we would need some basic building blocks whenever starting a new 3D app, and we had already written these things at countless previous gigs.  We got tired of reinventing the wheel, so we established our own core library of helper classes and platform abstractions.  We wanted to be able to create a new app by writing just the Init(), Update(), and Render() functions and leveraging as much reusable code as possible.  Today our core library has been redesigned for DirectX 12 and aims to serve as an example of efficient API usage.  It is obviously not exhaustive of what a game engine needs, but it can serve as the cornerstone of something new.  You can also borrow whatever useful code you find.\n\n### Some features of MiniEngine\n* High-quality anti-aliased text rendering\n* Real-time CPU and GPU profiling\n* User-controlled variables\n* Game controller, mouse, and keyboard input\n* A friendly DirectXMath wrapper\n* Perspective camera supporting traditional and reversed Z matrices\n* Asynchronous DDS texture loading and ZLib decompression\n* Large library of shaders\n* Easy shader embedding via a compile-to-header system\n* Easy render target, depth target, and unordered access view creation\n* A thread-safe GPU command context system (WIP)\n* Easy-to-use dynamic constant buffers and descriptor tables\n\n## Requirements\nSome samples require support for DirectX 12 Ultimate, see [this](http://aka.ms/DirectX12UltimateDev) post for details.\n### Master branch\nThis branch is intended for the latest [released](https://docs.microsoft.com/en-us/windows/release-information/) Windows 10 version.\n* Windows 10 version 2004 (no new features were added in version 20H2)\n* [Visual Studio 2019](https://www.visualstudio.com/) with the [Windows 10 SDK version 2004(19041)](https://developer.microsoft.com/en-US/windows/downloads/windows-10-sdk)\n### Develop branch\nThis branch is intended for features available in the latest Windows Insider Preview\n* [Windows 10 Insider Preview builds](https://docs.microsoft.com/en-us/windows-insider/developers/get-started) ([Dev Channel](https://docs.microsoft.com/en-us/windows-insider/flighting))\n* [Visual Studio 2019](https://www.visualstudio.com/) with the [Windows 10 Insider Preview SDK](https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK)\n\n## Contributing\nWe're always looking for your help to fix bugs and improve the samples.  File those pull requests and we'll be happy to take a look.\n\nTroubleshooting information for this repository can be found in the site [Wiki](https://github.com/Microsoft/DirectX-Graphics-Samples/wiki).\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Related links\n* [DirectX Developer Blog](https://devblogs.microsoft.com/directx)\n* [DirectX API documentation](https://docs.microsoft.com/en-us/windows/win32/directx)\n* [PIX on Windows](https://devblogs.microsoft.com/pix/documentation/)\n* [D3DX12 (the D3D12 Helper Library)](https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12)\n* [D3D12 Raytracing Fallback Layer](https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3D12RaytracingFallback)\n* [D3D12 Residency Starter Library](https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12Residency)\n* [D3D12 MultiGPU Starter Library](https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12AffinityLayer)\n* [DirectX Tool Kit](https://github.com/Microsoft/DirectXTK12)\n* [D3DDred debugger extension](https://github.com/Microsoft/DirectX-Debugging-Tools)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.8 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "TechniqueDemos",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}