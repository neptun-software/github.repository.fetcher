{
  "metadata": {
    "timestamp": 1736566218041,
    "page": 230,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "arvidn/libtorrent",
      "stars": 5337,
      "defaultBranch": "RC_2_0",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 1.3955078125,
          "content": "# since CirrusCI has limited compute resources for free open-source projects\n# we only use it for its unique feature, FreeBSD images\n\nfreebsd_instance:\n  image_family: freebsd-14-0\n\ntask:\n  env:\n    CIRRUS_CLONE_DEPTH: 1\n    CIRRUS_CLONE_SUBMODULES: true\n    CIBW_BUILD_VERBOSITY: 3\n    CIBW_SKIP: pp* cp38-* # cp38-* has problem with x86_64 / arm64 confusion\n    CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*\n  install_script: |\n    pkg install -y boost-build boost-libs openssl cmake ninja py311-pip\n    echo \"using clang ;\" > ~/user-config.jam\n  build_cmake_script: |\n    cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=\"-Werror\" -DCMAKE_CXX_STANDARD=14 -Dbuild_tests=ON -Dbuild_examples=ON -Dbuild_tools=ON -Dpython-bindings=OFF -G Ninja .\n    cmake --build .\n    ./test/test_primitives\n  tests_script: |\n    cd test\n    b2 -l250 warnings-as-errors=on warnings=all crypto=openssl deterministic-tests include=/usr/local/include library-path=/usr/local/lib\n  enum_if_script: |\n    cd test\n    b2 -l250 warnings-as-errors=on warnings=all crypto=openssl stage_enum_if stage_dependencies include=/usr/local/include library-path=/usr/local/lib\n    LD_LIBRARY_PATH=./dependencies ./enum_if\n# it appears cibuildwheel does not support FreeBSD (nor CirrusCI)\n#  install_cibuildwheel_script:\n#    - python -m pip install cibuildwheel==2.16.5\n#  run_cibuildwheel_script:\n#    - cibuildwheel\n#  wheels_artifacts:\n#    path: \"wheelhouse/*\"\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.974609375,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\nlibtool\n\n# windows\n*.ilk\n*.pdb\n*.exp\n\n*.m4\n*.in\n*.pc\n*.libs\n*.deps\n*.cache\n*.dirstamp\n*.swp\n*.orig\n*.rej\n\nbin\ncmake-build-*\nCMakeLists.txt.user\nconfig*\nbuild-aux\ntest_tmp_*\nlibtool\ndocs/reference*\ndocs/*.html\ndocs/*-ref.rst\n\n.DS_Store\n.idea\n*~\n\n# Compile and link flag files\nbindings/python/*flags\n\n# Logs\nlibtorrent_logs*\n*.log\n\n# Python related files and dirs\n*.pyc\ndist\n*.egg-info\n\n# python binary\nbindings/python/compile_cmd\n\n# binaries in the examples directory\nexamples/bt_get\nexamples/bt_get2\nexamples/client_test\nexamples/connection_tester\nexamples/custom_storage\nexamples/dump_torrent\nexamples/make_torrent\nexamples/simple_client\nexamples/stats_counters\nexamples/upnp_test\n\n# binaries in the tests directory\ntools/dht_put\ntools/session_log_alerts\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3349609375,
          "content": "[submodule \"simulation/libsimulator\"]\n\tpath = simulation/libsimulator\n\turl = https://github.com/arvidn/libsimulator.git\n[submodule \"deps/try_signal\"]\n\tpath = deps/try_signal\n\turl = https://github.com/arvidn/try_signal.git\n[submodule \"deps/asio-gnutls\"]\n\tpath = deps/asio-gnutls\n\turl = https://github.com/paullouisageneau/boost-asio-gnutls.git\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 6.7783203125,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\n\nexclude: |\n    (?x)^(\n        # These files are vendored from elsewhere, don't process them\n        LICENSE|\n        docs/hunspell/.*|\n        src/ed25519/.*|\n        include/libtorrent/aux_/route\\.h|\n        test/.*\\.xml|\n        test/ssl/.*\\.pem\n    )$\ndefault_language_version:\n    python: python3\nrepos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n    #-   id: trailing-whitespace\n    #-   id: end-of-file-fixer\n    -   id: check-yaml\n    -   id: check-case-conflict\n    -   id: check-executables-have-shebangs\n        exclude: |\n            (?x)^(\n              # Enable these later, avoid bloating this PR\n              tools/run_tests.sh\n            )\n    -   id: check-xml\n    -   id: debug-statements\n    -   id: check-symlinks\n    -   id: check-toml\n- repo: https://github.com/pappasam/toml-sort\n  rev: v0.24.2\n  hooks:\n  - id: toml-sort\n    args: [--all, --in-place]\n- repo: https://github.com/pre-commit/pygrep-hooks\n  rev: v1.10.0\n  hooks:\n  - id: rst-directive-colons\n  - id: rst-inline-touching-normal\n- repo: https://github.com/PyCQA/isort\n  rev: 5.13.2\n  hooks:\n    - id: isort\n      exclude: |\n          (?x)^(\n            # Enable these later, avoid bloating this PR\n            bindings/python/client.py|\n            bindings/python/dummy_data.py|\n            bindings/python/make_torrent.py|\n            bindings/python/simple_client.py|\n            bindings/python/test.py|\n            docs/gen_reference_doc.py|\n            examples/run_benchmarks.py|\n            fuzzers/tools/generate_initial_corpus.py|\n            fuzzers/tools/unify_corpus_names.py|\n            test/socks.py|\n            test/web_server.py|\n            tools/clean.py|\n            tools/copyright.py|\n            tools/dht_flood.py|\n            tools/libtorrent_lldb.py|\n            tools/parse_dht_log.py|\n            tools/parse_dht_rtt.py|\n            tools/parse_dht_stats.py|\n            tools/parse_session_stats.py|\n            tools/parse_utp_log.py|\n            tools/run_benchmark.py|\n            tools/update_copyright.py\n          )$\n- repo: https://github.com/PyCQA/autoflake\n  rev: v2.3.1\n  hooks:\n    - id: autoflake\n      args: [--in-place, --remove-unused-variables, --remove-all-unused-imports, --remove-duplicate-keys]\n      # Avoiding PR bloat\n      exclude: |\n          (?x)^(\n               bindings/python/test.py|\n               tools/benchmark_checking.py|\n               tools/copyright.py|\n               tools/gen_convenience_header.py|\n               tools/libtorrent_lldb.py\n          )\n- repo: https://github.com/psf/black\n  rev: 24.10.0\n  hooks:\n    - id: black\n      # Avoiding PR bloat\n      exclude: |\n          (?x)^(\n               bindings/python/client.py|\n               bindings/python/dummy_data.py|\n               bindings/python/make_torrent.py|\n               bindings/python/simple_client.py|\n               bindings/python/test.py|\n               docs/filter-rst.py|\n               docs/gen_settings_doc.py|\n               docs/gen_reference_doc.py|\n               docs/gen_stats_doc.py|\n               docs/gen_todo.py|\n               examples/run_benchmarks.py|\n               fuzzers/tools/generate_initial_corpus.py|\n               fuzzers/tools/unify_corpus_names.py|\n               test/http_proxy.py|\n               test/socks.py|\n               test/web_server.py|\n               tools/benchmark_checking.py|\n               tools/clean.py|\n               tools/copyright.py|\n               tools/dht_flood.py|\n               tools/gen_convenience_header.py|\n               tools/gen_fwd.py|\n               tools/libtorrent_lldb.py|\n               tools/parse_dht_log.py|\n               tools/parse_dht_rtt.py|\n               tools/parse_dht_stats.py|\n               tools/parse_lookup_log.py|\n               tools/parse_peer_log.py|\n               tools/parse_sample.py|\n               tools/parse_session_stats.py|\n               tools/parse_utp_log.py|\n               tools/run_benchmark.py|\n               tools/set_version.py|\n               tools/update_copyright.py\n          )$\n      # black doesn't run on *.pyi files by default, for reasons\n    - id: black\n      name: black (pyi)\n      types: [pyi]\n- repo: https://github.com/pre-commit/mirrors-mypy\n  rev: v1.13.0\n  hooks:\n    - id: mypy\n      # Avoiding PR bloat\n      exclude: |\n          (?x)^(\n              bindings/python/client.py|\n              bindings/python/dummy_data.py|\n              bindings/python/make_torrent.py|\n              bindings/python/test.py|\n              docs/filter-rst.py|\n              docs/gen_reference_doc.py|\n              docs/gen_settings_doc.py|\n              docs/gen_stats_doc.py|\n              docs/gen_todo.py|\n              examples/run_benchmarks.py|\n              fuzzers/tools/generate_initial_corpus.py|\n              setup.py|\n              test/http_proxy.py|\n              test/socks.py|\n              test/web_server.py|\n              tools/benchmark_checking.py|\n              tools/clean.py|\n              tools/copyright.py|\n              tools/dht_flood.py|\n              tools/gen_convenience_header.py|\n              tools/gen_fwd.py|\n              tools/libtorrent_lldb.py|\n              tools/parse_dht_log.py|\n              tools/parse_dht_stats.py|\n              tools/parse_lookup_log.py|\n              tools/parse_peer_log.py|\n              tools/parse_sample.py|\n              tools/parse_session_stats.py|\n              tools/parse_utp_log.py|\n              tools/run_benchmark.py|\n              tools/update_copyright.py\n          )$\n- repo: https://github.com/PyCQA/flake8\n  rev: 7.1.1\n  hooks:\n  - id: flake8\n    exclude: |\n        (?x)^(\n            # Enable these later, avoid bloating this PR\n            bindings/python/client.py|\n            bindings/python/make_torrent.py|\n            bindings/python/test.py|\n            docs/gen_settings_doc.py|\n            docs/gen_todo.py|\n            docs/gen_reference_doc.py|\n            docs/gen_stats_doc.py|\n            examples/run_benchmarks.py|\n            fuzzers/tools/generate_initial_corpus.py|\n            test/http_proxy.py|\n            test/socks.py|\n            test/web_server.py|\n            tools/benchmark_checking.py|\n            tools/dht_flood.py|\n            tools/gen_convenience_header.py|\n            tools/gen_fwd.py|\n            tools/libtorrent_lldb.py|\n            tools/parse_dht_stats.py|\n            tools/parse_dht_log.py|\n            tools/parse_lookup_log.py|\n            tools/parse_peer_log.py|\n            tools/parse_sample.py|\n            tools/parse_session_stats.py|\n            tools/parse_utp_log.py|\n            tools/run_benchmark.py|\n            tools/update_copyright.py\n        )$\n#- repo: local\n#  hooks:\n#  - id: gen_fwd\n#    name: gen_fwd\n#    language: system\n#    entry: ./tools/gen_fwd.py\n#    always_run: true\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.4423828125,
          "content": "Written by Arvid Norberg. Copyright (c) 2003-2021\n\nContributions by:\nAndrei Kurushin\nSteven Siloti\nAlden Torres\nThomas Fischer\nMassaroddel\nTianhao Qiu.\nShyam\nMagnus Jonsson\nDaniel Wallin\nCory Nelson\nStas Khirman\nRyan Norton\nAndrew Resch\n\nThanks to (github user) nervoir for bug reports\n\nThanks to Reimond Retz for bugfixes, suggestions and testing\n\nThanks to University of Umeå for providing development and test hardware.\n\nProject is hosted by Github\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 25.1923828125,
          "content": "cmake_minimum_required(VERSION 3.16.0 FATAL_ERROR) # Configurable policies: <= CMP0097\n\ncmake_policy(SET CMP0091 NEW)\ncmake_policy(SET CMP0092 NEW)\n\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules)\ninclude(LibtorrentMacros)\n\nread_version(\"${CMAKE_CURRENT_SOURCE_DIR}/include/libtorrent/version.hpp\" VER_MAJOR VER_MINOR VER_TINY)\n\nproject(libtorrent\n\tDESCRIPTION \"Bittorrent library\"\n\tVERSION ${VER_MAJOR}.${VER_MINOR}.${VER_TINY}\n)\nset (SOVERSION \"${VER_MAJOR}.${VER_MINOR}\")\n\ninclude(GNUInstallDirs)\ninclude(GeneratePkgConfig)\n\nset(libtorrent_include_files\n\tadd_torrent_params.hpp\n\taddress.hpp\n\talert.hpp\n\talert_types.hpp\n\tannounce_entry.hpp\n\tassert.hpp\n\tbdecode.hpp\n\tbencode.hpp\n\tbitfield.hpp\n\tbloom_filter.hpp\n\tbt_peer_connection.hpp\n\tchoker.hpp\n\tclient_data.hpp\n\tclose_reason.hpp\n\tconfig.hpp\n\tcopy_ptr.hpp\n\tcrc32c.hpp\n\tcreate_torrent.hpp\n\tdeadline_timer.hpp\n\tdebug.hpp\n\tdisk_buffer_holder.hpp\n\tdisk_interface.hpp\n\tdisk_observer.hpp\n\tdownload_priority.hpp\n\tentry.hpp\n\tenum_net.hpp\n\terror.hpp\n\terror_code.hpp\n\textensions.hpp\n\tfile.hpp\n\tfile_storage.hpp\n\tfile_layout.hpp\n\tfingerprint.hpp\n\tflags.hpp\n\tfwd.hpp\n\tgzip.hpp\n\thash_picker.hpp\n\thasher.hpp\n\thex.hpp\n\thttp_connection.hpp\n\thttp_parser.hpp\n\thttp_seed_connection.hpp\n\thttp_stream.hpp\n\thttp_tracker_connection.hpp\n\ti2p_stream.hpp\n\tidentify_client.hpp\n\tindex_range.hpp\n\tio.hpp\n\tio_service.hpp\n\tip_filter.hpp\n\tip_voter.hpp\n\tlibtorrent.hpp\n\tlink.hpp\n\tlsd.hpp\n\tmagnet_uri.hpp\n\tmmap_disk_io.hpp\n\tmmap_storage.hpp\n\tnatpmp.hpp\n\tnetlink.hpp\n\toperations.hpp\n\toptional.hpp\n\tparse_url.hpp\n\tpart_file.hpp\n\tpeer.hpp\n\tpeer_class.hpp\n\tpeer_class_set.hpp\n\tpeer_class_type_filter.hpp\n\tpeer_connection.hpp\n\tpeer_connection_handle.hpp\n\tpeer_connection_interface.hpp\n\tpeer_id.hpp\n\tpeer_info.hpp\n\tpeer_list.hpp\n\tpeer_request.hpp\n\tperformance_counters.hpp\n\tpex_flags.hpp\n\tpiece_block.hpp\n\tpiece_block_progress.hpp\n\tpiece_picker.hpp\n\tplatform_util.hpp\n\tportmap.hpp\n\tproxy_base.hpp\n\tpuff.hpp\n\trandom.hpp\n\tread_resume_data.hpp\n\trequest_blocks.hpp\n\tresolve_links.hpp\n\tsession.hpp\n\tsession_handle.hpp\n\tsession_params.hpp\n\tsession_settings.hpp\n\tsession_stats.hpp\n\tsession_status.hpp\n\tsession_types.hpp\n\tsettings_pack.hpp\n\tsha1.hpp\n\tsha1_hash.hpp\n\tsha256.hpp\n\tsliding_average.hpp\n\tsocket.hpp\n\tsocket_io.hpp\n\tsocket_type.hpp\n\tsocks5_stream.hpp\n\tspan.hpp\n\tssl.hpp\n\tssl_stream.hpp\n\tstack_allocator.hpp\n\tstat.hpp\n\tstat_cache.hpp\n\tstorage_defs.hpp\n\tstring_util.hpp\n\tstring_view.hpp\n\ttailqueue.hpp\n\ttime.hpp\n\ttorrent.hpp\n\ttorrent_flags.hpp\n\ttorrent_handle.hpp\n\ttorrent_info.hpp\n\ttorrent_peer.hpp\n\ttorrent_peer_allocator.hpp\n\ttorrent_status.hpp\n\ttracker_manager.hpp\n\ttruncate.hpp\n\tudp_socket.hpp\n\tudp_tracker_connection.hpp\n\tunion_endpoint.hpp\n\tunits.hpp\n\tupnp.hpp\n\tutf8.hpp\n\tvector_utils.hpp\n\tversion.hpp\n\tweb_connection_base.hpp\n\tweb_peer_connection.hpp\n\twrite_resume_data.hpp\n\txml_parse.hpp\n)\n\nset(libtorrent_kademlia_include_files\n\tannounce_flags.hpp\n\tdht_observer.hpp\n\tdht_settings.hpp\n\tdht_state.hpp\n\tdht_storage.hpp\n\tdht_tracker.hpp\n\tdirect_request.hpp\n\tdos_blocker.hpp\n\ted25519.hpp\n\tfind_data.hpp\n\tget_item.hpp\n\tget_peers.hpp\n\tio.hpp\n\titem.hpp\n\tmsg.hpp\n\tnode.hpp\n\tnode_entry.hpp\n\tnode_id.hpp\n\tobserver.hpp\n\tput_data.hpp\n\trefresh.hpp\n\trouting_table.hpp\n\trpc_manager.hpp\n\tsample_infohashes.hpp\n\ttraversal_algorithm.hpp\n\ttypes.hpp\n)\n\nset(libtorrent_extensions_include_files\n\tsmart_ban.hpp\n\tut_metadata.hpp\n\tut_pex.hpp\n)\n\nset(libtorrent_aux_include_files\n\talert_manager.hpp\n\taligned_union.hpp\n\talloca.hpp\n\tallocating_handler.hpp\n\tapply_pad_files.hpp\n\tarray.hpp\n\tbandwidth_limit.hpp\n\tbandwidth_manager.hpp\n\tbandwidth_queue_entry.hpp\n\tbandwidth_socket.hpp\n\tbind_to_device.hpp\n\tbuffer.hpp\n\tbyteswap.hpp\n\tchained_buffer.hpp\n\tcpuid.hpp\n\tdeferred_handler.hpp\n\tdeprecated.hpp\n\tdeque.hpp\n\tdev_random.hpp\n\tdirectory.hpp\n\tdisable_warnings_pop.hpp\n\tdisable_warnings_push.hpp\n\tdisk_buffer_pool.hpp\n\tmmap_disk_job.hpp\n\tdisk_io_thread_pool.hpp\n\tdisk_job_fence.hpp\n\tdisk_job_pool.hpp\n\tdrive_info.hpp\n\ted25519.hpp\n\tescape_string.hpp\n\texport.hpp\n\tffs.hpp\n\tfile_descriptor.hpp\n\tfile_progress.hpp\n\tfile_view_pool.hpp\n\thas_block.hpp\n\theterogeneous_queue.hpp\n\tinstantiate_connection.hpp\n\tinvariant_check.hpp\n\tio.hpp\n\tip_helpers.hpp\n\tip_notifier.hpp\n\tkeepalive.hpp\n\tlisten_socket_handle.hpp\n\tlsd.hpp\n\tmerkle.hpp\n\tmerkle_tree.hpp\n\tnetlink_utils.hpp\n\tnoexcept_movable.hpp\n\tnumeric_cast.hpp\n\tpacket_buffer.hpp\n\tpacket_pool.hpp\n\tpath.hpp\n\tpolymorphic_socket.hpp\n\tpool.hpp\n\tportmap.hpp\n\tposix_part_file.hpp\n\tproxy_settings.hpp\n\trange.hpp\n\treceive_buffer.hpp\n\tresolver.hpp\n\tresolver_interface.hpp\n\tscope_end.hpp\n\tsession_call.hpp\n\tsession_impl.hpp\n\tsession_interface.hpp\n\tsession_settings.hpp\n\tsession_udp_sockets.hpp\n\tset_socket_buffer.hpp\n\tset_traffic_class.hpp\n\tset_traffic_class.hpp\n\tsocket_type.hpp\n\tstorage_free_list.hpp\n\tstorage_utils.hpp\n\tstring_ptr.hpp\n\tstrview_less.hpp\n\tsuggest_piece.hpp\n\tthrow.hpp\n\ttime.hpp\n\ttimestamp_history.hpp\n\ttorrent_impl.hpp\n\ttorrent_list.hpp\n\tunique_ptr.hpp\n\tutp_socket_manager.hpp\n\tutp_stream.hpp\n\tvector.hpp\n\twin_crypto_provider.hpp\n\twin_file_handle.hpp\n\twin_util.hpp\n)\n\nset(try_signal_include_files\n\ttry_signal\n\tsignal_error_code\n\ttry_signal_mingw\n\ttry_signal_msvc\n\ttry_signal_posix\n)\n\nset(sources\n\tadd_torrent_params.cpp\n\talert.cpp\n\talert_manager.cpp\n\tannounce_entry.cpp\n\tassert.cpp\n\tbandwidth_limit.cpp\n\tbandwidth_manager.cpp\n\tbandwidth_queue_entry.cpp\n\tbdecode.cpp\n\tbitfield.cpp\n\tbloom_filter.cpp\n\tbt_peer_connection.cpp\n\tchained_buffer.cpp\n\tchoker.cpp\n\tclose_reason.cpp\n\tcopy_file.cpp\n\tcpuid.cpp\n\tcrc32c.cpp\n\tcreate_torrent.cpp\n\tdirectory.cpp\n\tdisabled_disk_io.cpp\n\tdisk_buffer_holder.cpp\n\tdisk_buffer_pool.cpp\n\tdisk_interface.cpp\n\tdisk_io_thread_pool.cpp\n\tdisk_job_fence.cpp\n\tdisk_job_pool.cpp\n\tdrive_info.cpp\n\tentry.cpp\n\tenum_net.cpp\n\terror_code.cpp\n\tescape_string.cpp\n\tffs.cpp\n\tfile.cpp\n\tfile_progress.cpp\n\tfile_storage.cpp\n\tfile_view_pool.cpp\n\tfingerprint.cpp\n\tgenerate_peer_id.cpp\n\tgzip.cpp\n\thash_picker.cpp\n\thasher.cpp\n\thex.cpp\n\thttp_connection.cpp\n\thttp_parser.cpp\n\thttp_seed_connection.cpp\n\thttp_tracker_connection.cpp\n\ti2p_stream.cpp\n\tidentify_client.cpp\n\tinstantiate_connection.cpp\n\tip_filter.cpp\n\tip_helpers.cpp\n\tip_notifier.cpp\n\tip_voter.cpp\n\tlisten_socket_handle.cpp\n\tload_torrent.cpp\n\tlsd.cpp\n\tmagnet_uri.cpp\n\tmerkle.cpp\n\tmerkle_tree.cpp\n\tmmap.cpp\n\tmmap_disk_io.cpp\n\tmmap_disk_job.cpp\n\tmmap_storage.cpp\n\tnatpmp.cpp\n\tpacket_buffer.cpp\n\tparse_url.cpp\n\tpart_file.cpp\n\tpath.cpp\n\tpeer_class.cpp\n\tpeer_class_set.cpp\n\tpeer_connection.cpp\n\tpeer_connection_handle.cpp\n\tpeer_info.cpp\n\tpeer_list.cpp\n\tperformance_counters.cpp\n\tpiece_picker.cpp\n\tplatform_util.cpp\n\tposix_disk_io.cpp\n\tposix_part_file.cpp\n\tposix_storage.cpp\n\tproxy_base.cpp\n\tproxy_settings.cpp\n\tpuff.cpp\n\trandom.cpp\n\tread_resume_data.cpp\n\treceive_buffer.cpp\n\trequest_blocks.cpp\n\tresolve_links.cpp\n\tresolver.cpp\n\tsession.cpp\n\tsession_call.cpp\n\tsession_handle.cpp\n\tsession_impl.cpp\n\tsession_params.cpp\n\tsession_settings.cpp\n\tsession_stats.cpp\n\tsettings_pack.cpp\n\tsha1.cpp\n\tsha1_hash.cpp\n\tsha256.cpp\n\tsocket_io.cpp\n\tsocket_type.cpp\n\tsocks5_stream.cpp\n\tssl.cpp\n\tstack_allocator.cpp\n\tstat.cpp\n\tstat_cache.cpp\n\tstorage_utils.cpp\n\tstring_util.cpp\n\ttime.cpp\n\ttimestamp_history.cpp\n\ttorrent.cpp\n\ttorrent_handle.cpp\n\ttorrent_info.cpp\n\ttorrent_peer.cpp\n\ttorrent_peer_allocator.cpp\n\ttorrent_status.cpp\n\ttracker_manager.cpp\n\ttruncate.cpp\n\tudp_socket.cpp\n\tudp_tracker_connection.cpp\n\tupnp.cpp\n\tutf8.cpp\n\tutp_socket_manager.cpp\n\tutp_stream.cpp\n\tversion.cpp\n\tweb_connection_base.cpp\n\tweb_peer_connection.cpp\n\twrite_resume_data.cpp\n\txml_parse.cpp\n\n# -- extensions --\n\tsmart_ban.cpp\n\tut_pex.cpp\n\tut_metadata.cpp\n)\n\n# -- kademlia --\nset(kademlia_sources\n\tdht_settings.cpp\n\tdht_state.cpp\n\tdht_storage.cpp\n\tdht_tracker.cpp\n\tdos_blocker.cpp\n\ted25519.cpp\n\tfind_data.cpp\n\tget_item.cpp\n\tget_peers.cpp\n\titem.cpp\n\tmsg.cpp\n\tnode.cpp\n\tnode_entry.cpp\n\tnode_id.cpp\n\tput_data.cpp\n\trefresh.cpp\n\trouting_table.cpp\n\trpc_manager.cpp\n\tsample_infohashes.cpp\n\ttraversal_algorithm.cpp\n)\n\n# -- ed25519 --\nset(ed25519_sources\n\tadd_scalar.cpp\n\tfe.cpp\n\tge.cpp\n\tkey_exchange.cpp\n\tkeypair.cpp\n\tsc.cpp\n\tsign.cpp\n\tverify.cpp\n\tsha512.cpp\n\thasher512.cpp\n)\n\nset(try_signal_sources\n\ttry_signal.cpp\n\tsignal_error_code.cpp\n)\n\nlist(TRANSFORM sources PREPEND \"src/\")\nlist(TRANSFORM kademlia_sources PREPEND \"src/kademlia/\")\nlist(TRANSFORM ed25519_sources PREPEND \"src/ed25519/\")\nlist(TRANSFORM libtorrent_include_files PREPEND \"include/libtorrent/\")\nlist(TRANSFORM libtorrent_extensions_include_files PREPEND \"include/libtorrent/extensions/\")\nlist(TRANSFORM libtorrent_aux_include_files PREPEND \"include/libtorrent/aux_/\")\nlist(TRANSFORM libtorrent_kademlia_include_files PREPEND \"include/libtorrent/kademlia/\")\nlist(TRANSFORM try_signal_sources PREPEND \"deps/try_signal/\")\n\n# these options control target creation and thus have to be declared before the add_library() call\nfeature_option(BUILD_SHARED_LIBS \"build libtorrent as a shared library\" ON)\nfeature_option(static_runtime \"build libtorrent with static runtime\" OFF)\n\nset(THREADS_PREFER_PTHREAD_FLAG ON)\nfind_public_dependency(Threads REQUIRED)\n\nif(CMAKE_CXX_COMPILER_ID MATCHES Clang)\n\tadd_compile_options(\n\t\t-Weverything\n\t\t-Wno-c++98-compat-pedantic\n\t\t-Wno-c++11-compat-pedantic\n\t\t-Wno-padded\n\t\t-Wno-alloca\n\t\t-Wno-global-constructors\n\t\t-Wno-exit-time-destructors\n\t\t-Wno-weak-vtables\n\t\t-Wno-return-std-move-in-c++11\n\t\t-Wno-unsafe-buffer-usage\n\t\t-Wno-unknown-warning-option\n\t)\nelseif(CMAKE_CXX_COMPILER_ID MATCHES GNU)\n\tadd_compile_options(\n\t\t-Wall\n\t\t-Wextra\n\t\t-Wpedantic\n\t\t-Wvla\n\t\t-Wno-noexcept-type\n\t\t-Wno-format-zero-length\n\t\t-ftemplate-depth=512\n\t)\nelseif(MSVC)\n\tadd_compile_options(\n\t\t/W4\n\t\t# C4251: 'identifier' : class 'type' needs to have dll-interface to be\n\t\t#        used by clients of class 'type2'\n\t\t/wd4251\n\t\t# C4268: 'identifier' : 'const' static/global data initialized\n\t\t#        with compiler generated default constructor fills the object with zeros\n\t\t/wd4268\n\t\t# C4275: non DLL-interface classkey 'identifier' used as base for\n\t\t#        DLL-interface classkey 'identifier'\n\t\t/wd4275\n\t\t# C4373: virtual function overrides, previous versions of the compiler\n\t\t#        did not override when parameters only differed by const/volatile qualifiers\n\t\t/wd4373\n\t\t# C4503: 'identifier': decorated name length exceeded, name was truncated\n\t\t/wd4503\n\t)\nendif()\n\nif(static_runtime)\n\tif (MSVC)\n\t\tset(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n\telse()\n\t\tinclude(ucm_flags)\n\t\tucm_set_runtime(STATIC)\n\tendif()\n\tset(Boost_USE_MULTITHREADED ON)\n\tset(Boost_USE_STATIC_RUNTIME ON)\n\tset(OPENSSL_MSVC_STATIC_RT ON)\nendif()\n\nadd_library(torrent-rasterbar\n\t${sources}\n\t${try_signal_sources}\n\t${libtorrent_include_files}\n\t${libtorrent_extensions_include_files}\n\t${libtorrent_aux_include_files}\n)\n\n# C++ 14 support is required\ntarget_compile_features(torrent-rasterbar\n\tPUBLIC\n\t\tcxx_std_14\n\t\tcxx_attribute_deprecated\n\t\tcxx_binary_literals\n\t\tcxx_contextual_conversions\n\t\tcxx_decltype_auto\n\t\tcxx_digit_separators\n\t\tcxx_generic_lambdas\n\t\tcxx_lambda_init_captures\n\t\tcxx_relaxed_constexpr\n\t\tcxx_variable_templates\n)\n\nif (BUILD_SHARED_LIBS)\n\ttarget_compile_definitions(torrent-rasterbar\n\t\tPRIVATE TORRENT_BUILDING_SHARED\n\t\tINTERFACE TORRENT_LINKING_SHARED\n\t)\nendif()\n\nset_target_properties(torrent-rasterbar\n\tPROPERTIES\n\t\tCXX_VISIBILITY_PRESET \"hidden\"\n\t\tVISIBILITY_INLINES_HIDDEN \"true\"\n\t\tVERSION ${PROJECT_VERSION}\n\t\tSOVERSION ${SOVERSION}\n)\n\ntarget_include_directories(torrent-rasterbar PUBLIC\n\t$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n\t$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n\tPRIVATE deps/try_signal\n)\n\ntarget_compile_definitions(torrent-rasterbar\n\tPUBLIC\n\t\t$<$<CONFIG:Debug>:TORRENT_USE_ASSERTS>\n\t\tBOOST_ASIO_ENABLE_CANCELIO\n\t\tBOOST_ASIO_NO_DEPRECATED\n\tPRIVATE\n\t\tTORRENT_BUILDING_LIBRARY\n\t\tBOOST_EXCEPTION_DISABLE\n\t\tBOOST_ASIO_HAS_STD_CHRONO\n)\n\nif (NOT WIN32)\n\ttarget_compile_definitions(torrent-rasterbar\n\t\tPRIVATE\n\t\t\t_FILE_OFFSET_BITS=64\n\t)\nendif()\n\ntarget_link_libraries(torrent-rasterbar\n\tPUBLIC\n\t\tThreads::Threads\n)\n\n# Unconditional platform-specific settings\nif (WIN32)\n\ttarget_link_libraries(torrent-rasterbar\n\t\tPUBLIC\n\t\t\tbcrypt mswsock ws2_32 iphlpapi\n\t\t\tdebug dbghelp crypt32\n\t)\n\n\tadd_definitions(-D_WIN32_WINNT=0x0A00) # target Windows 10 or later\n\n\ttarget_compile_definitions(torrent-rasterbar\n\t\tPUBLIC WIN32_LEAN_AND_MEAN # prevent winsock1 to be included\n\t)\n\n\tif (MSVC)\n\t\ttarget_compile_definitions(torrent-rasterbar\n\t\t\tPUBLIC\n\t\t\t\tBOOST_ALL_NO_LIB\n\t\t\t\t_SCL_SECURE_NO_DEPRECATE _CRT_SECURE_NO_DEPRECATE # disable bogus deprecation warnings on msvc8\n\t\t)\n\t\ttarget_compile_options(torrent-rasterbar\n\t\t\tPRIVATE\n\t\t\t\t# allow larger .obj files (with more sections)\n\t\t\t\t/bigobj\n\t\t\t\t# https://learn.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170\n\t\t\t\t/permissive-\n\t\t\t\t# https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=msvc-170\n\t\t\t\t/utf-8\n\t\t\t\t# https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n\t\t\t\t/Zc:__cplusplus\n\t\t)\n\t\tset_target_properties(torrent-rasterbar PROPERTIES LINK_FLAGS_RELEASE \"/OPT:ICF=5 /OPT:REF\")\n\tendif()\nendif()\n\nif (ANDROID)\n\ttarget_link_libraries(torrent-rasterbar PRIVATE ${CMAKE_DL_LIBS})\nendif()\n\nif (APPLE)\n\t# for ip_notifier\n\ttarget_link_libraries(torrent-rasterbar PRIVATE \"-framework CoreFoundation\" \"-framework SystemConfiguration\")\nendif()\n\n# check if we need to link with libatomic (not needed on MSVC)\nif (NOT Windows)\n\t# TODO: migrate to CheckSourceCompiles in CMake >= 3.19\n\tinclude(CheckCXXSourceCompiles)\n\n\tset(ATOMICS_TEST_SOURCE [=[\n\t\t#include <atomic>\n\t\t#include <cstdint>\n\t\tstd::atomic<int> x{0};\n\t\tint main() {\n\t\t\tx.fetch_add(1, std::memory_order_relaxed);\n\t\t\treturn 0;\n\t\t}\n\t]=])\n\tstring(REPLACE \"std::atomic<int>\" \"std::atomic<std::int8_t>\" ATOMICS8_TEST_SOURCE \"${ATOMICS_TEST_SOURCE}\")\n\tstring(REPLACE \"std::atomic<int>\" \"std::atomic<std::int64_t>\" ATOMICS64_TEST_SOURCE \"${ATOMICS_TEST_SOURCE}\")\n\n\tif(APPLE)\n\t\tset(CMAKE_REQUIRED_FLAGS \"-std=c++11\")\n\tendif()\n\tcheck_cxx_source_compiles(\"${ATOMICS_TEST_SOURCE}\" HAVE_CXX_ATOMICS_WITHOUT_LIB)\n\tcheck_cxx_source_compiles(\"${ATOMICS8_TEST_SOURCE}\" HAVE_CXX_ATOMICS8_WITHOUT_LIB)\n\tcheck_cxx_source_compiles(\"${ATOMICS64_TEST_SOURCE}\" HAVE_CXX_ATOMICS64_WITHOUT_LIB)\n\tif((NOT HAVE_CXX_ATOMICS_WITHOUT_LIB) OR (NOT HAVE_CXX_ATOMICS8_WITHOUT_LIB) OR (NOT HAVE_CXX_ATOMICS64_WITHOUT_LIB))\n\t\tset(CMAKE_REQUIRED_LIBRARIES \"atomic\")\n\t\tcheck_cxx_source_compiles(\"${ATOMICS_TEST_SOURCE}\" HAVE_CXX_ATOMICS_WITH_LIB)\n\t\tcheck_cxx_source_compiles(\"${ATOMICS8_TEST_SOURCE}\" HAVE_CXX_ATOMICS8_WITH_LIB)\n\t\tcheck_cxx_source_compiles(\"${ATOMICS64_TEST_SOURCE}\" HAVE_CXX_ATOMICS64_WITH_LIB)\n\t\tif ((NOT HAVE_CXX_ATOMICS_WITH_LIB) OR (NOT HAVE_CXX_ATOMICS8_WITH_LIB) OR (NOT HAVE_CXX_ATOMICS64_WITH_LIB))\n\t\t\tmessage(FATAL_ERROR \"No native support for std::atomic, or libatomic not found!\")\n\t\telse()\n\t\t\tmessage(STATUS \"Linking with libatomic for atomics support\")\n\t\t\tunset(CMAKE_REQUIRED_LIBRARIES)\n\t\t\ttarget_link_libraries(torrent-rasterbar PUBLIC atomic)\n\t\tendif()\n\tendif()\n\tif(APPLE)\n\t\tunset(CMAKE_REQUIRED_FLAGS)\n\tendif()\nendif()\n\nfeature_option(build_tests \"build tests\" OFF)\nfeature_option(build_examples \"build examples\" OFF)\nfeature_option(build_tools \"build tools\" OFF)\nfeature_option(python-bindings \"build python bindings\" OFF)\nfeature_option(python-egg-info \"generate python egg info\" OFF)\nfeature_option(python-install-system-dir \"Install python bindings to the system installation directory rather than the CMake installation prefix\" OFF)\n\n# these options require existing target\nfeature_option(dht \"enable support for Mainline DHT\" ON)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME deprecated-functions DEFAULT ON\n\tDESCRIPTION \"enable deprecated functions for backwards compatibility\" DISABLED TORRENT_NO_DEPRECATE)\nfeature_option(encryption \"Enables encryption in libtorrent\" ON)\nfeature_option(exceptions \"build with exception support\" ON)\nfeature_option(gnutls \"build using GnuTLS instead of OpenSSL\" OFF)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME extensions DEFAULT ON\n\tDESCRIPTION \"Enables protocol extensions\" DISABLED TORRENT_DISABLE_EXTENSIONS)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME i2p DEFAULT ON\n\tDESCRIPTION \"build with I2P support\" DISABLED TORRENT_USE_I2P=0)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME logging DEFAULT ON\n\tDESCRIPTION \"build with logging\" DISABLED TORRENT_DISABLE_LOGGING)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME mutable-torrents DEFAULT ON\n\tDESCRIPTION \"Enables mutable torrent support\" DISABLED TORRENT_DISABLE_MUTABLE_TORRENTS)\ntarget_optional_compile_definitions(torrent-rasterbar PUBLIC FEATURE NAME streaming DEFAULT ON\n\tDESCRIPTION \"Enables support for piece deadline\" DISABLED TORRENT_DISABLE_STREAMING)\n\nif(NOT gnutls)\n\tfind_public_dependency(OpenSSL)\n\tset_package_properties(OpenSSL\n\t\tPROPERTIES\n\t\t\tURL \"https://www.openssl.org/\"\n\t\t\tDESCRIPTION \"Full-strength general purpose cryptography library\"\n\t\t\tTYPE RECOMMENDED\n\t\t\tPURPOSE \"Provides HTTPS support to libtorrent\"\n\t)\n\n\tif(TARGET OpenSSL::SSL)\n\t\t# TODO: needed until https://gitlab.kitware.com/cmake/cmake/issues/19263 is fixed\n\t\tif(WIN32 AND OPENSSL_USE_STATIC_LIBS)\n\t\t\ttarget_link_libraries(torrent-rasterbar PRIVATE crypt32)\n\t\tendif()\n\t\ttarget_link_libraries(torrent-rasterbar PUBLIC OpenSSL::SSL)\n\t\ttarget_compile_definitions(torrent-rasterbar\n\t\t\tPUBLIC\n\t\t\t\tTORRENT_USE_OPENSSL\n\t\t\t\tTORRENT_USE_LIBCRYPTO\n\t\t\t\tTORRENT_SSL_PEERS\n\t\t\t\tOPENSSL_NO_SSL2)\n\tendif()\nendif()\n\nif(gnutls OR NOT TARGET OpenSSL::SSL)\n\tfind_public_dependency(GnuTLS)\n\tset_package_properties(GnuTLS\n\t\tPROPERTIES\n\t\t\tURL \"https://www.gnutls.org/\"\n\t\t\tDESCRIPTION \"GnuTLS is a free software implementation of the TLS and DTLS protocols\"\n\t\t\tTYPE RECOMMENDED\n\t\t\tPURPOSE \"Provides HTTPS support to libtorrent\"\n\t)\n\tif(GNUTLS_FOUND)\n\t\ttarget_link_libraries(torrent-rasterbar PUBLIC GnuTLS::GnuTLS)\n\t\ttarget_compile_definitions(torrent-rasterbar\n\t\t\tPUBLIC\n\t\t\t\tTORRENT_USE_GNUTLS\n\t\t\t\tTORRENT_SSL_PEERS)\n\t\ttarget_include_directories(torrent-rasterbar PUBLIC\n\t\t\t$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/deps/asio-gnutls/include>\n            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)\n\t\tinstall(DIRECTORY deps/asio-gnutls/include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\telseif(gnutls)\n\t\tmessage(FATAL_ERROR \"GnuTLS library not found\")\n\tendif()\nendif()\n\nif (NOT GNUTLS_FOUND AND NOT TARGET OpenSSL::SSL)\n\tif(TARGET OpenSSL::Crypto)\n\t\ttarget_link_libraries(torrent-rasterbar PUBLIC OpenSSL::Crypto)\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_USE_LIBCRYPTO)\n\telse()\n\t\tfind_public_dependency(LibGcrypt)\n\t\tset_package_properties(LibGcrypt\n\t\t\tPROPERTIES\n\t\t\t\tURL \"https://www.gnupg.org/software/libgcrypt/index.html\"\n\t\t\t\tDESCRIPTION \"A general purpose cryptographic library\"\n\t\t\t\tTYPE RECOMMENDED\n\t\t\t\tPURPOSE \"Use GCrypt instead of the built-in functions for RC4 and SHA1\"\n\t\t)\n\t\tif (LibGcrypt_FOUND)\n\t\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_USE_LIBGCRYPT)\n\t\t\ttarget_link_libraries(torrent-rasterbar PRIVATE LibGcrypt::LibGcrypt)\n\t\tendif()\n\tendif()\nendif()\n\nif (encryption)\n\ttarget_sources(torrent-rasterbar PRIVATE include/libtorrent/pe_crypto.hpp src/pe_crypto.cpp)\nelse()\n\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_DISABLE_ENCRYPTION)\nendif()\n\nif (dht)\n\ttarget_sources(torrent-rasterbar PRIVATE\n\t\t${libtorrent_kademlia_include_files}\n\t\tinclude/libtorrent/aux_/hasher512.hpp\n\t\t${kademlia_sources}\n\t\t${ed25519_sources}\n\t)\nelse()\n\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_DISABLE_DHT)\nendif()\n\n# Boost\nfind_public_dependency(Boost REQUIRED)\ntarget_link_libraries(torrent-rasterbar PUBLIC Boost::headers)\nif (Boost_MAJOR_VERSION LESS_EQUAL 1 AND Boost_MINOR_VERSION LESS 69)\n\tfind_public_dependency(Boost REQUIRED COMPONENTS system)\n\ttarget_link_libraries(torrent-rasterbar PUBLIC Boost::system)\nendif()\n\nif (exceptions)\n\tif (MSVC)\n\t\ttarget_compile_options(torrent-rasterbar PUBLIC /EHsc)\n\telse (MSVC)\n\t\ttarget_compile_options(torrent-rasterbar PUBLIC -fexceptions)\n\tendif (MSVC)\nelse()\n\tif (MSVC)\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC _HAS_EXCEPTIONS=0)\n\telse (MSVC)\n\t\ttarget_compile_options(torrent-rasterbar PUBLIC -fno-exceptions)\n\tendif (MSVC)\nendif()\n\n# developer options\noption(developer-options \"Activates options useful for a developer\")\nif(developer-options)\n\tset(asserts \"auto\" CACHE STRING \"use assertions\")\n\tset_property(CACHE asserts PROPERTY STRINGS auto on off production system)\n\tif (\"${asserts}\" MATCHES \"on|production|system\")\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_USE_ASSERTS=1)\n\tendif()\n\tif (\"${asserts}\" STREQUAL \"production\")\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_PRODUCTION_ASSERTS=1)\n\telseif(\"${asserts}\" STREQUAL \"system\")\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_USE_SYSTEM_ASSERTS=1)\n\tendif()\n\n\ttarget_optional_compile_definitions(torrent-rasterbar PUBLIC NAME asio-debugging DEFAULT OFF\n\t\tENABLED TORRENT_ASIO_DEBUGGING)\n\ttarget_optional_compile_definitions(torrent-rasterbar PUBLIC NAME picker-debugging DEFAULT OFF\n\t\tENABLED TORRENT_DEBUG_REFCOUNTS)\n\tset(invariant-checks \"off\" CACHE STRING \"\")\n\tset_property(CACHE invariant-checks PROPERTY STRINGS off on full)\n\tif (invariant-checks MATCHES \"on|full\")\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_USE_INVARIANT_CHECKS=1)\n\tendif()\n\tif (invariant-checks STREQUAL \"full\")\n\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_EXPENSIVE_INVARIANT_CHECKS)\n\tendif()\n\n\ttarget_optional_compile_definitions(torrent-rasterbar PUBLIC NAME utp-log DEFAULT OFF\n\t\tENABLED TORRENT_UTP_LOG_ENABLE)\n\ttarget_optional_compile_definitions(torrent-rasterbar PUBLIC NAME simulate-slow-read DEFAULT OFF\n\t\tENABLED TORRENT_SIMULATE_SLOW_READ)\n\toption(debug-iterators \"\" OFF)\n\tif (debug-iterators)\n\t\tif (MSVC)\n\t\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC _ITERATOR_DEBUG_LEVEL=2)\n\t\tendif()\n\t\tif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU\")\n\t\t\ttarget_compile_definitions(torrent-rasterbar PUBLIC _GLIBCXX_DEBUG _GLIBCXX_DEBUG_PEDANTIC)\n\t\tendif()\n\tendif()\n\ttarget_optional_compile_definitions(torrent-rasterbar PUBLIC NAME profile-calls DEFAULT OFF\n\t\tENABLED TORRENT_PROFILE_CALLS=1)\nendif()\n\n# This is best effort attempt to propagate whether the library was built with\n# C++11 or not. It affects the ABI of entry. A client building with C++14 and\n# linking against a libtorrent binary built with C++11 can still define\n# TORRENT_CXX11_ABI\nif (\"${CMAKE_CXX_STANDARD}\" STREQUAL \"11\")\n\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_CXX11_ABI)\nendif()\n\n# There is little to none support for using pkg-config with MSVC and most users won't bother with it.\n# However, msys is a linux-like platform on Windows that do support/prefer using pkg-config.\nif (NOT MSVC)\n\tgenerate_and_install_pkg_config_file(torrent-rasterbar libtorrent-rasterbar)\nendif()\n\ninclude(CheckCXXCompilerFlag)\n\nadd_subdirectory(bindings)\n\nif(IS_ABSOLUTE \"${CMAKE_INSTALL_LIBDIR}\")\n\tfile(RELATIVE_PATH CMAKE_INSTALL_LIBDIR \"${CMAKE_INSTALL_PREFIX}\" \"${CMAKE_INSTALL_LIBDIR}\")\nendif()\n\ninstall(TARGETS torrent-rasterbar EXPORT LibtorrentRasterbarTargets\n\tLIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\tARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\tRUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n)\ninstall(DIRECTORY include/libtorrent DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} FILES_MATCHING PATTERN \"*.h*\")\n\n# === generate a CMake Config File ===\ninclude(CMakePackageConfigHelpers)\nset(ConfigPackageLocation ${CMAKE_INSTALL_LIBDIR}/cmake/LibtorrentRasterbar)\nstring(REGEX REPLACE \"([^;]+)\" \"find_dependency(\\\\1)\" _find_dependency_calls \"${_package_dependencies}\")\nstring(REPLACE \";\" \"\\n\" _find_dependency_calls \"${_find_dependency_calls}\")\n\nwrite_basic_package_version_file(\n\t\"${CMAKE_CURRENT_BINARY_DIR}/LibtorrentRasterbar/LibtorrentRasterbarConfigVersion.cmake\"\n\tVERSION ${libtorrent_VERSION}\n\tCOMPATIBILITY AnyNewerVersion\n)\n\nexport(EXPORT LibtorrentRasterbarTargets\n\tFILE \"${CMAKE_CURRENT_BINARY_DIR}/LibtorrentRasterbar/LibtorrentRasterbarTargets.cmake\"\n\tNAMESPACE LibtorrentRasterbar::\n)\n\nconfigure_package_config_file(LibtorrentRasterbarConfig.cmake.in\n\t\"${CMAKE_CURRENT_BINARY_DIR}/LibtorrentRasterbar/LibtorrentRasterbarConfig.cmake\"\n\tINSTALL_DESTINATION \"${ConfigPackageLocation}\"\n\tNO_SET_AND_CHECK_MACRO\n\tNO_CHECK_REQUIRED_COMPONENTS_MACRO\n)\n\ninstall(EXPORT LibtorrentRasterbarTargets\n\tNAMESPACE\n\t\tLibtorrentRasterbar::\n\tDESTINATION\n\t\t${ConfigPackageLocation}\n)\ninstall(\n\tFILES\n\t\t\"${CMAKE_CURRENT_BINARY_DIR}/LibtorrentRasterbar/LibtorrentRasterbarConfig.cmake\"\n\t\t\"${CMAKE_CURRENT_BINARY_DIR}/LibtorrentRasterbar/LibtorrentRasterbarConfigVersion.cmake\"\n\tDESTINATION\n\t\t${ConfigPackageLocation}\n)\n\ninstall(\n\tFILES\n\t\t${CMAKE_CURRENT_SOURCE_DIR}/examples/cmake/FindLibtorrentRasterbar.cmake\n\tDESTINATION\n\t\t${CMAKE_INSTALL_DATADIR}/cmake/Modules\n)\n\nif (MSVC)\n\tset_target_properties(torrent-rasterbar\n\tPROPERTIES\n\t\tPDB_NAME torrent-rasterbar\n\t\tPDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}\n\t\tCOMPILE_PDB_NAME torrent-rasterbar\n\t\tCOMPILE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}\n\t)\n\n\tif (static_runtime)\n\t\tset(PDB_INSTALL_DIR lib)\n\telse()\n\t\tset(PDB_INSTALL_DIR bin)\n\tendif()\n\n\tinstall(\n\t\tFILES\n\t\t\t${CMAKE_BINARY_DIR}/torrent-rasterbar.pdb\n\t\tDESTINATION\n\t\t\t${PDB_INSTALL_DIR}\n\t\tCONFIGURATIONS\n\t\t\tDebug RelWithDebInfo\n\t\tOPTIONAL\n\t)\nendif()\n\n# === build tools ===\nif (build_tools)\n\tadd_subdirectory(tools)\nendif()\n\n# === build examples ===\nif (build_examples)\n\tadd_subdirectory(examples)\nendif()\n\n# === build tests ===\nif(build_tests)\n\tenable_testing()\n\t# this will make some internal functions available in the DLL interface\n\ttarget_compile_definitions(torrent-rasterbar PUBLIC TORRENT_EXPORT_EXTRA)\n\tadd_subdirectory(test)\nendif()\n\nfeature_summary(DEFAULT_DESCRIPTION WHAT ALL)\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.48828125,
          "content": "Copyright (c) 2003-2020, Arvid Norberg\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the distribution.\n    * Neither the name of Rasterbar Software nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 103.53515625,
          "content": "\n2.0.11 not released\n\n\t* fix race condition when cancelling requests after becoming a seed\n\t* fix performance bug in the file pool, evicting MRU instead of LRU (HanabishiRecca)\n\t* fix bug where file_progress could sometimes be reported as >100%\n\t* don't hint FADV_RANDOM on posix systems. May improve seeding performance\n\t* allow boost connect while checking resume data if no_verify_files flag is set\n\t* fix BEP-40 peer priority for IPv6\n\t* limit piece size in torrent creator\n\t* fix file pre-allocation when changing file priority (HanabishiRecca)\n\t* fix uTP issue where closing the connection could corrupt the payload\n\t* apply DSCP/TOS to sockets before initiating the TCP connection\n\t* assume copy_file_range() exists on linux (unless old glibc)\n\t* fix issue where set_piece_deadline() did not correctly post read_piece_alert\n\t* fix integer overflow in piece picker\n\t* torrent_status::num_pieces counts pieces passed hash check, as documented\n\t* check settings_pack::max_out_request_queue before performance alert\n\t* add announce_port setting to override the port announced to trackers\n\n2.0.10 released\n\n\t* allow on_unknown_torrent method in the absence of active torrents (new plugin feature added)\n\t* add feature to async_move_storage() to not move files\n\t* fix reject resume data if it contains mismatching info hashes\n\t* fix clear the candidate_cache when clear peer_list\n\t* fix missing python converter for dht::announce_flags_t\n\n2.0.9 released\n\n\t* fix issue with web seed connections when they close and re-open\n\t* fallocate() not supported is not a fatal error\n\t* fix proxying of IPv6 connections via IPv4 proxy\n\t* treat CGNAT address range as local IPs\n\t* add stricter checking of piece layers when loading torrents\n\t* add stricter checking of v1 and v2 hashes being consistent\n\t* cache failed DNS lookups as well as successful ones\n\t* add an i2p torrent state to control interactions with clear swarms\n\t* fix i2p SAM protocol parsing of quoted messages\n\t* expose i2p peer destination in peer_info\n\t* fix i2p tracker announces\n\t* fix issue with read_piece() stopping torrent on pieces not yet downloaded\n\t* improve handling of allow_i2p_mixed setting to work for magnet links\n\t* fix web seed request for renamed single-file torrents\n\t* fix issue where web seeds could disappear from resume data\n\t* extend save_resume with additional conditional flags\n\t* fix issue with retrying trackers in tiers > 0\n\t* fix last_upload and last_download resume data fields to use posix time\n\t* improve error messages for no_connect_privileged_ports, by untangle it from the port filter\n\t* fix I2P issue introduced in 2.0.0\n\t* add async tracker status query, post_trackers()\n\t* add async torrent status query, post_status()\n\t* support loading version 2 of resume data format\n\t* fix issue with odd piece sizes\n\t* add async piece availability query, post_piece_availability()\n\t* add async download queue query, post_download_queue()\n\t* add async file_progress query, post_file_progress()\n\t* add async peer_info query, post_peer_info()\n\n2.0.8 released\n\n\t* fix uTP streams timing out instead of closing cleanly\n\t* add write_torrent_file_buf() overload for generating .torrent files\n\t* add create_torrent::generate_buf() function to generate into a buffer\n\t* fix copy_file when the file ends with a sparse region\n\t* uTP performance, fix packet loss when sending is stalled\n\t* fix trackers being stuck after session pause/resume\n\t* fix bug in hash_picker with empty files\n\t* uTP performance, prevent premature timeouts/resends\n\t* add option to not memory map files below a certain size\n\t* settings_pack now returns default values when queried for missing settings\n\t* fix copy_file fall-back when SEEK_HOL/SEEK_DATA is not supported\n\t* improve error reporting from file copy and move\n\t* tweak pad file placement to match reference implementation (tail-padding)\n\t* uTP performance, more lenient nagle's algorithm to always allow one outstanding undersized packet\n\t* uTP performance, piggy-back held back undersized packet with ACKs\n\t* uTP performance, don't send redundant deferred ACKs\n\t* support incoming SOCKS5 packets with hostnames as source address, for UDP trackers\n\t* ignore duplicate network interface change notifications on linux\n\t* fix total_want/want accounting when forcing a recheck\n\t* fix merging metadata with magnet links added on top of existing torrents\n\t* add torrent_flag to default all file priorities to dont_download\n\t* fix &so= feature in magnet links\n\t* improve compatibility of SOCKS5 UDP ASSOCIATE\n\t* fix madvise range for flushing cache in mmap_storage\n\t* open files with no_cache set in O_SYNC mode\n\n* 2.0.7 released\n\n\t* fix issue in use of copy_file_range() on linux\n\t* avoid open-file race in the file_view_pool\n\t* fix issue where stop-when-ready would not close files\n\t* fix issue with duplicate hybrid torrent via separate v1 and v2 magnet links\n\t* added new function to load torrent files, load_torrent_*()\n\t* support sync_file_range() on linux\n\t* fix issue in write_torrent_file() when file size is exactly piece size\n\t* fix file_num_blocks() and file_num_pieces() for empty files\n\t* add new overload to make_magnet_uri()\n\t* add missing protocol version to tracker_reply_alert and tracker_error_alert\n\t* fix privilege issue with SetFileValidData()\n\t* add asynchronous overload of torrent_handle::add_piece()\n\t* default to a single hashing thread, for full checks\n\t* Fix bug when checking files and the first piece is invalid\n\n* 2.0.6 released\n\n\t* fix issue creating a v2 torrent from torrent_info containing an empty file\n\t* make recheck files also update which files use partfile\n\t* add write_through disk_io_write_mode, which flushes pieces to disk immediately\n\t* improve copy file function to preserve sparse regions (when supported)\n\t* add function to truncate over-sized files part of a torrent\n\t* fix directory creation on windows shared folders\n\t* add flag to make add_files() not record file attributes\n\t* deprecate (unused) allow_partial_disk_writes settings\n\t* fix disk-full error reporting in mmap_disk_io\n\t* fixed similar-torrents feature for v2 torrents\n\t* fix potential unbounded recursion in add_completed_job, in disk I/O\n\t* deprecated (unused) volatile_read_cache setting\n\t* fix part files being marked as hidden on windows\n\n* 2.0.5 released\n\n\t* on windows, explicitly flush memory mapped files periodically\n\t* fix build with WolfSSL\n\t* fix issue where incoming uTP connections were not accepted over SOCKS5\n\t* fix several issues in handling of checking files of v2 torrents, esp. from magnet links\n\t* make the token limit when parsing metadata from magnet files configurable\n\t* fix issue with stalled pieces on disk full errors\n\t* fix missing python binding for file_progress_flags\n\t* fix torrent_file_with_hashes() to fail when we don't have the piece layers\n\t* restore path character encoding conversion for non UTF-8 locales on linux\n\t* fix use-after-free bug in make_magnet_uri\n\t* add write_torrent_file() to produce a .torrent file from add_torrent_params\n\t* allow loading v2 .torrent files without piece layer\n\t* fix issue with adding v2 torrents with invalid file root hash\n\n* 2.0.4 released\n\n\t* fix piece picker bug causing double-picks with prefer-contiguous enabled\n\t* expose session_params in python bindings\n\t* fix (deprecated) use of add_torrent_params::info_hash\n\t* fix issue creating and loading v2 torrents with empty files. Improves\n\t  conformance to BEP52 reference implementation\n\n* 2.0.3 released\n\n\t* add new torrent_file_with_hashes() which includes piece layers for\n\t  creating .torrent files\n\t* add file_prio_alert, posted when file priorities are updated\n\t* fix issue where set_piece_hashes() would not propagate file errors\n\t* add missing python binding for event_t\n\t* add work-around for systems without fseeko() (such as Android)\n\t* add convenience header libtorrent/libtorrent.hpp\n\t* increase default max_allowed_in_request_queue\n\t* fix loading non-ascii filenames on windows with torrent_info constructor (2.0 regression)\n\t* add std::hash<> specialization for info_hash_t\n\t* fix integer overflow in hash_picker and properly restrict max file sizes in torrents\n\t* strengthen SSRF mitigation for web seeds\n\n* 2.0.2 released\n\n\t* add v1() and v2() functions to torrent_info\n\t* fix piece_layers() to work for single-piece files\n\t* fix python binding regression in session constructor flags\n\t* fix unaligned piece requests in mmap_storage\n\t* improve client_data_t ergonomics\n\t* fix issue with concurrent access to part files\n\n* 2.0.1 released\n\n\t* fix attribute in single-file v2 torrent creation\n\t* fix padding for empty files in v2 torrent creation\n\t* add function to ask a file_storage whether it's v2 or not\n\t* fix mtime field when creating single-file v2 torrents\n\t* fix performance regression in checking files\n\t* disable use of SetFileValidData() by default (windows). A new setting\n\t  allows enabling it\n\n2.0 released\n\n\t* dropped dependency on iconv\n\t* deprecate set_file_hash() in torrent creator, as it's superseded by v2 torrents\n\t* deprecate mutable access to info_section in torrent_info\n\t* removed deprecated lazy_entry/lazy_bdecode\n\t* stats_alert deprecated\n\t* remove bittyrant choking algorithm\n\t* update userdata in add_torrent_params to be type-safe and add to torrent_handle\n\t* add ip_filter to session_params\n\t* added support for wolfSSL for SHA-1 hash and HTTPS (no Torrents over SSL)\n\t* requires OpenSSL minimum version 1.0.0 with SNI support\n\t* deprecated save_state() and load_state() on session in favour of new\n\t  write_session_params() and read_session_params()\n\t* added support for BitTorrent v2 (see docs/upgrade_to_2.0.html)\n\t* create_torrent() pad_file_limit parameter removed\n\t* create_torrent() merkle- and optimize-alignment flags removed\n\t* merkle_tree removed from add_torrent_params\n\t* announce_entry expose information per v1 and v2 info-hash announces\n\t* deprecated sha1_hash info_hash members on torrent_removed_alert,\n\t  torrent_deleted_alert, torrent_delete_failed_alert and add_torrent_params\n\t* undeprecate error_file_metadata for torrent errors related to its metadata\n\t* remove support for adding a torrent under a UUID (used for previous RSS support)\n\t* remove deprecated feature to add torrents by file:// URL\n\t* remove deprecated feature to download .torrent file from URL\n\t* requires boost >= 1.66 to build\n\t* update networking API to networking TS compatible boost.asio\n\t* overhauled disk I/O subsystem to use memory mapped files (where available)\n\t* libtorrent now requires C++14 to build\n\t* added support for GnuTLS for HTTPS and torrents over SSL\n\n\n\t* fix issue where stop-when-ready would not close files\n\t* uTP performance, fix packet loss when sending is stalled\n\t* uTP performance, prevent premature timeouts/resends\n\t* uTP performance, more lenient nagle's algorithm to always allow one outstanding undersized packet\n\t* uTP performance, piggy-back held back undersized packet with ACKs\n\t* uTP performance, don't send redundant deferred ACKs\n\t* fix wanted_done/done accounting when force-rechecking\n\t* expose userdata via torrent_handle (back-port from 2.0)\n\t* fix renaming of filenames that are too long for the filesystem\n\t* made UPnP and LSD code avoid using select_reactor (to work around an issue on windows in boost.asio < 1.80)\n\n1.2.17 released\n\n\t* fixed tracker connections spinning when hostname lookups stall\n\t* fixed error in pkg-config file generation in Jamfile\n\t* improve backwards compatibility with loading magnet link resume files\n\t* fix bind-to-device for tracker announces and UPnP\n\t* rename peer_tos setting to peer_dscp\n\t* fix bdecode support for large strings (>= 100 MB)\n\n1.2.16 released\n\n\t* send User-Agent field in anonymous mode\n\t* fix python binding for settings_pack conversion\n\t* fix DHT announce timer issue\n\t* use DSCP_TRAFFIC_TYPE socket option on windows\n\t* update default ToS setting according to RFC 8622\n\t* keep trying to announce to trackers even when all fail\n\t* don't disable announcing from local endpoints because of temporary failures\n\t* fix issue in parsing UPnP XML response with multiple forwarding services\n\n1.2.15 released\n\n\t* cache DNS lookups for SOCKS5 proxy\n\t* fix stalled pieces on disk-full errors\n\t* fix build configuration issue on NetBSD, OpenBSD and DragonFly\n\t* make UTF-8 sanitization a bit stricter. This will re-write invalid UTF-8\n\t  code points encoding surrogate pairs\n\t* fix restoring last_seen_complete from resume data\n\t* fix issue on MacOS where the DHT was not restarted on a network-up notification\n\t* make remove_torrent flags be treated as flags (instead of an enum)\n\n1.2.14 released\n\n\t* improve handling of seed flag in PEX messages\n\t* fix issue of accruing unlimited DHT node candidates when DHT is disabled\n\t* fix bug in parsing chunked encoding\n\t* fix incorrect reporting of active_duration when entering graceful-pause\n\t* fix python binding for functions taking string_view\n\t* fix python binding for torrent_info constructor overloads\n\t* issue python deprecation warnings for some deprecated functions in the python bindings\n\t* fix python binding for torrent_info::add_url_seed, add_tracker and add_http_seed\n\n1.2.13 released\n\n\t* Use /etc/ssl/cert.pem to validate HTTPS connections on MacOS\n\t* allow no-interest timeouts of peer connections before all connections slots are full\n\t* fix issue where a DHT message would count as an incoming connection\n\t* fix issue when failing to parse outgoing_interfaces setting\n\t* fix super-seeding issue that could cause a segfault\n\t* fix data race in python binding of session::get_torrent_status()\n\t* fix need_save_resume_data() for renaming files, share-mode, upload-mode,\n\t  disable- pex, lsd, and dht.\n\t* fix incoming TCP connections when using tracker-only proxy\n\t* fix issue with paths starting with ./\n\t* fix integer overflow when setting a high DHT upload rate limit\n\t* improve Path MTU discovery logic in uTP\n\t* fix overflow issue when rlimit_nofile is set to infinity\n\t* fix issue in python binding interpreting int settings > INT_MAX\n\t* Fix cxxflags and linkflags injection via environment variables\n\n1.2.12 released\n\n\t* fix loading of DHT node ID from previous session on startup\n\t* use getrandom(), when available, and fall back to /dev/urandom\n\t* fix python binding for \"value\" in dht put alerts\n\t* fix bug in python binding for dht_put_mutable_item\n\t* fix uTP issue acking FIN packets\n\t* validate HTTPS certificates by default (trackers and web seeds)\n\t* load SSL certificates from windows system certificate store, to authenticate trackers\n\t* introduce mitigation for Server Side Request Forgery in tracker and web seed URLs\n\t* fix error handling for pool allocation failure\n\n1.2.11 released\n\n\t* fix issue with moving the session object\n\t* deprecate torrent_status::allocating. This state is no longer used\n\t* fix bug creating torrents with symbolic links\n\t* remove special case to save metadata in resume data unconditionally when added through magnet link\n\t* fix bugs in mutable-torrent support (reusing identical files from different torrents)\n\t* fix incorrectly inlined move-assignment of file_storage\n\t* add session::paused flag, and the ability to construct a session in paused mode\n\t* fix session-pause causing tracker announces to fail\n\t* fix peer-exchange flags bug\n\t* allow saving resume data before metadata has been downloaded (for magnet links)\n\t* record blocks in the disk queue as downloaded in the resume data\n\t* fix bug in set_piece_deadline() when set in a zero-priority piece\n\t* fix issue in URL parser, causing issues with certain tracker URLs\n\t* use a different error code than host-unreachable, when skipping tracker announces\n\n1.2.10 released\n\n\t* fix regression in python binding for move_storage()\n\t* improve stat_file() performance on Windows\n\t* fix issue with loading invalid torrents with only 0-sized files\n\t* fix to avoid large stack allocations\n\n1.2.9 released\n\n\t* add macro TORRENT_CXX11_ABI for clients building with C++14 against\n\t  libtorrent build with C++11\n\t* refreshed m4 scripts for autotools\n\t* removed deprecated wstring overloads on non-windows systems\n\t* drop dependency on Unicode's ConvertUTF code (which had a license\n\t  incompatible with Debian)\n\t* fix bugs exposed on big-endian systems\n\t* fix detection of hard-links not being supported by filesystem\n\t* fixed resume data regression for seeds with prio 0 files\n\n1.2.8 released\n\n\t* validate UTF-8 encoding of client version strings from peers\n\t* don't time out tracker announces as eagerly while resolving hostnames\n\t* fix NAT-PMP shutdown issue\n\t* improve hostname lookup by merging identical lookups\n\t* fix network route enumeration for large routing tables\n\t* fixed issue where pop_alerts() could return old, invalid alerts\n\t* fix issue when receiving have-all message before the metadata\n\t* don't leave lingering part files handles open\n\t* disallow calling add_piece() during checking\n\t* fix incorrect filename truncation at multi-byte character\n\t* always announce listen port 1 when using a proxy\n\n1.2.7 released\n\n\t* add set_alert_fd in python binding, to supersede set_alert_notify\n\t* fix bug in part files > 2 GiB\n\t* add function to clear the peer list for a torrent\n\t* fix resume data functions to save/restore more torrent flags\n\t* limit number of concurrent HTTP announces\n\t* fix queue position for force_rechecking a torrent that is not auto-managed\n\t* improve rate-based choker documentation, and minor tweak\n\t* undeprecate upnp_ignore_nonrouters (but referring to devices on our subnet)\n\t* increase default tracker timeout\n\t* retry failed socks5 server connections\n\t* allow UPnP lease duration to be changed after device discovery\n\t* fix IPv6 address change detection on Windows\n\n1.2.6 released\n\n\t* fix peer timeout logic\n\t* simplify proxy handling. A proxy now overrides listen_interfaces\n\t* fix issues when configured to use a non-default choking algorithm\n\t* fix issue in reading resume data\n\t* revert NXDOMAIN change from 1.2.4\n\t* don't open any listen sockets if listen_interfaces is empty or misconfigured\n\t* fix bug in auto disk cache size logic\n\t* fix issue with outgoing_interfaces setting, where bind() would be called twice\n\t* add build option to disable share-mode\n\t* support validation of HTTPS trackers\n\t* deprecate strict super seeding mode\n\t* make UPnP port-mapping lease duration configurable\n\t* deprecate the bittyrant choking algorithm\n\t* add build option to disable streaming\n\n1.2.5 release\n\n\t* announce port=1 instead of port=0, when there is no listen port\n\t* fix LSD over IPv6\n\t* support TCP_NOTSENT_LOWAT on Linux\n\t* fix correct interface binding of local service discovery multicast\n\t* fix issue with knowing which interfaces to announce to trackers and DHT\n\t* undeprecate settings_pack::dht_upload_rate_limit\n\n1.2.4 release\n\n\t* fix binding TCP and UDP sockets to the same port, when specifying port 0\n\t* fix announce_to_all_trackers and announce_to_all_tiers behavior\n\t* fix suggest_read_cache setting\n\t* back-off tracker hostname looksups resulting in NXDOMAIN\n\t* lower SOCKS5 UDP keepalive timeout\n\t* fix external IP voting for multi-homed DHT nodes\n\t* deprecate broadcast_lsd setting. Just use multicast\n\t* deprecate upnp_ignore_nonrouters setting\n\t* don't attempt sending event=stopped if event=start never succeeded\n\t* make sure &key= stays consistent between different source IPs (as mandated by BEP7)\n\t* fix binding sockets to outgoing interface\n\t* add new socks5_alert to trouble shoot SOCKS5 proxies\n\n1.2.3 release\n\n\t* fix erroneous event=completed tracker announce when checking files\n\t* promote errors in parsing listen_interfaces to post listen_failed_alert\n\t* fix bug in protocol encryption/obfuscation\n\t* fix buffer overflow in SOCKS5 UDP logic\n\t* fix issue of rapid calls to file_priority() clobbering each other\n\t* clear tracker errors on success\n\t* optimize setting with unlimited unchoke slots\n\t* fixed restoring of trackers, comment, creation date and created-by in resume data\n\t* fix handling of torrents with too large pieces\n\t* fixed division by zero in anti-leech choker\n\t* fixed bug in torrent_info::swap\n\n1.2.2 release\n\n\t* fix cases where the disable_hash_checks setting was not honored\n\t* fix updating of is_finished torrent status, when changing piece priorities\n\t* fix regression in &left= reporting when adding a seeding torrent\n\t* fix integer overflow in http parser\n\t* improve sanitation of symlinks, to support more complex link targets\n\t* add DHT routing table affinity for BEP 42 nodes\n\t* add torrent_info constructor overloads to control torrent file limits\n\t* feature to disable DHT, PEX and LSD per torrent\n\t* fix issue where trackers from magnet links were not included in create_torrent()\n\t* make peer_info::client a byte array in python binding\n\t* pick contiguous pieces from peers with high download rate\n\t* fix error handling of moving storage to a drive letter that isn't mounted\n\t* fix HTTP Host header when using proxy\n\n1.2.1 release\n\n\t* add dht_pkt_alert and alerts_dropped_alert to python bindings\n\t* fix python bindings for block_uploaded_alert\n\t* optimize resolving duplicate filenames in loading torrent files\n\t* fix python binding of dht_settings\n\t* tighten up various input validation checks\n\t* fix create_torrent python binding\n\t* update symlinks to conform to BEP 47\n\t* fix python bindings for peer_info\n\t* support creating symlinks, for torrents with symlinks in them\n\t* fix error in seed_mode flag\n\t* support magnet link parameters with number suffixes\n\t* consistently use \"lt\" namespace in examples and documentation\n\t* fix Mingw build to use native cryptoAPI\n\t* uPnP/NAT-PMP errors no longer set the client's advertised listen port to zero\n\n1.2 release\n\n\t* requires boost >= 1.58 to build\n\t* tweak heuristic of how to interpret url seeds in multi-file torrents\n\t* support &ipv4= tracker argument for private torrents\n\t* renamed debug_notification to connect_notification\n\t* when updating listen sockets, only post alerts for new ones\n\t* deprecate anonymous_mode_alert\n\t* deprecated force_proxy setting (when set, the proxy is always used)\n\t* add support for Port Control Protocol (PCP)\n\t* deliver notification of alerts being dropped via alerts_dropped_alert\n\t* deprecated alert::progress_notification alert category, split into\n\t  finer grained categories\n\t* update plugin interface functions for improved type-safety\n\t* implemented support magnet URI extension, select specific file indices\n\t  for download, BEP53\n\t* make tracker keys multi-homed. remove set_key() function on session.\n\t* add flags()/set_flags()/unset_flags() to torrent_handle, deprecate individual functions\n\t* added alert for block being sent to the send buffer\n\t* drop support for windows compilers without std::wstring\n\t* implemented support for DHT info hash indexing, BEP51\n\t* removed deprecated support for file_base in file_storage\n\t* added support for running separate DHT nodes on each network interface\n\t* added support for establishing UTP connections on any network interface\n\t* added support for sending tracker announces on every network interface\n\t* introduce \"lt\" namespace alias\n\t* need_save_resume_data() will no longer return true every 15 minutes\n\t* make the file_status interface explicitly public types\n\t* added resolver_cache_timeout setting for internal host name resolver\n\t* make parse_magnet_uri take a string_view instead of std::string\n\t* deprecate add_torrent_params::url field. use parse_magnet_uri instead\n\t* optimize download queue management\n\t* deprecated (undocumented) file:// urls\n\t* add limit for number of web seed connections\n\t* added support for retrieval of DHT live nodes\n\t* complete UNC path support\n\t* add packets pool allocator\n\t* remove disk buffer pool allocator\n\t* fix last_upload and last_download overflow after 9 hours in past\n\t* python binding add more add_torrent_params fields and an invalid key check\n\t* introduce introduce distinct types for peer_class_t, piece_index_t and\n\t  file_index_t.\n\t* fix crash caused by empty bitfield\n\t* removed disk-access-log build configuration\n\t* removed mmap_cache feature\n\t* strengthened type safety in handling of piece and file indices\n\t* deprecate identify_client() and fingerprint type\n\t* make sequence number for mutable DHT items backed by std::int64_t\n\t* tweaked storage_interface to have stronger type safety\n\t* deprecate relative times in torrent_status, replaced by std::chrono::time_point\n\t* refactor in alert types to use more const fields and more clear API\n\t* changed session_stats_alert counters type to signed (std::int64_t)\n\t* remove torrent eviction/ghost torrent feature\n\t* include target in DHT lookups, when queried from the session\n\t* improve support for HTTP redirects for web seeds\n\t* use string_view in entry interface\n\t* deprecate \"send_stats\" property on trackers (since lt_tracker extension has\n\t  been removed)\n\t* remove deprecate session_settings API (use settings_pack instead)\n\t* improve file layout optimization when creating torrents with padfiles\n\t* remove remote_dl_rate feature\n\t* source code migration from boost::shared_ptr to std::shared_ptr\n\t* storage_interface API changed to use span and references\n\t* changes in public API to work with std::shared_ptr<torrent_info>\n\t* extensions API changed to use span and std::shared_ptr\n\t* plugin API changed to handle DHT requests using string_view\n\t* removed support for lt_trackers and metadata_transfer extensions\n\t  (pre-dating ut_metadata)\n\t* support windows' CryptoAPI for SHA-1\n\t* separated ssl and crypto options in build\n\t* remove lazy-bitfield feature\n\t* simplified suggest-read-cache feature to not depend on disk threads\n\t* removed option to disable contiguous receive buffers\n\t* deprecated public to_hex() and from_hex() functions\n\t* separated address and port fields in listen alerts\n\t* added support for parsing new x.pe parameter from BEP 9\n\t* peer_blocked_alert now derives from peer_alert\n\t* transitioned exception types to system_error\n\t* made alerts move-only\n\t* move files one-by-one when moving storage for a torrent\n\t* removed RSS support\n\t* removed feature to resolve country for peers\n\t* added support for BEP 32, \"IPv6 extension for DHT\"\n\t* overhauled listen socket and UDP socket handling, improving multi-home\n\t  support and bind-to-device\n\t* resume data is now communicated via add_torrent_params objects\n\t* added new read_resume_data()/write_resume_data functions to write bencoded,\n\t  backwards compatible resume files\n\t* removed deprecated fields from add_torrent_params\n\t* deprecate \"resume_data\" field in add_torrent_params\n\t* improved support for bind-to-device\n\t* deprecated ssl_listen, SSL sockets are specified in listen_interfaces now\n\t* improved support for listening on multiple sockets and interfaces\n\t* resume data no longer has timestamps of files\n\t* require C++11 to build libtorrent\n\n\t* replace use of boost-endian with boost-predef\n\n1.1.12 release\n\n\t* uTP performance fixes\n\n1.1.11 release\n\n\t* fix move_storage with save_path with a trailing slash\n\t* fix tracker announce issue, advertising port 0 in secondary IPv6 announce\n\t* fix missing boost/noncopyable.hpp includes\n\t* fix python binding for torrent_info::creation_date()\n\n1.1.10 release\n\n\t* fix issue in udp_socket with unusual socket failure\n\t* split progress_notification alert category into file-, piece- and block progress\n\t* utp close-reason fix\n\t* exposed default add_torrent_params flags to python bindings\n\t* fix redundant flushes of partfile metadata\n\t* add option to ignore min-interval from trackers on force-reannounce\n\t* raise default setting for active_limit\n\t* fall back to copy+remove if rename_file fails\n\t* improve handling of filesystems not supporting fallocate()\n\t* force-proxy no longer disables DHT\n\t* improve connect-boost feature, to make new torrents quickly connect peers\n\n1.1.9 release\n\n\t* save both file and piece priorities in resume file\n\t* added missing stats_metric python binding\n\t* uTP connections are no longer exempt from rate limits by default\n\t* fix exporting files from partfile while seeding\n\t* fix potential deadlock on Windows, caused by performing restricted\n\t  tasks from within DllMain\n\t* fix issue when subsequent file priority updates cause torrent to stop\n\n1.1.8 release\n\n\t* coalesce reads and writes by default on windows\n\t* fixed disk I/O performance of checking hashes and creating torrents\n\t* fix race condition in part_file\n\t* fix part_file open mode compatibility test\n\t* fixed race condition in random number generator\n\t* fix race condition in stat_cache (disk storage)\n\t* improve error handling of failing to change file priority\n\t  The API for custom storage implementations was altered\n\t* set the hidden attribute when creating the part file\n\t* fix tracker announces reporting more data downloaded than the size of the torrent\n\t* fix recent regression with force_proxy setting\n\n1.1.7 release\n\n\t* don't perform DNS lookups for the DHT bootstrap unless DHT is enabled\n\t* fix issue where setting file/piece priority would stop checking\n\t* expose post_dht_stats() to python binding\n\t* fix backwards compatibility to downloads without partfiles\n\t* improve part-file related error messages\n\t* fix reporting &redundant= in tracker announces\n\t* fix tie-break in duplicate peer connection disconnect logic\n\t* fix issue with SSL tracker connections left in CLOSE_WAIT state\n\t* defer truncating existing files until the first time we write to them\n\t* fix issue when receiving a torrent with 0-sized padfiles as magnet link\n\t* fix issue resuming 1.0.x downloads with a file priority 0\n\t* fix torrent_status::next_announce\n\t* fix pad-file scalability issue\n\t* made coalesce_reads/coalesce_writes settings take effect on linux and windows\n\t* use unique peer_ids per connection\n\t* fix iOS build on recent SDK\n\t* fix tracker connection bind issue for IPv6 trackers\n\t* fix error handling of some merkle torrents\n\t* fix error handling of unsupported hard-links\n\n1.1.6 release\n\n\t* deprecate save_encryption_settings (they are part of the normal settings)\n\t* add getters for peer_class_filter and peer_class_type_filter\n\t* make torrent_handler::set_priority() to use peer_classes\n\t* fix support for boost-1.66 (requires C++11)\n\t* fix i2p support\n\t* fix loading resume data when in seed mode\n\t* fix part-file creation race condition\n\t* fix issue with initializing settings on session construction\n\t* fix issue with receiving interested before metadata\n\t* fix IPv6 tracker announce issue\n\t* restore path sanitization behavior of \":\"\n\t* fix listen socket issue when disabling \"force_proxy\" mode\n\t* fix full allocation failure on APFS\n\n1.1.5 release\n\n\t* fix infinite loop when parsing certain invalid magnet links\n\t* fix parsing of torrents with certain invalid filenames\n\t* fix leak of torrent_peer objects (entries in peer_list)\n\t* fix leak of peer_class objects (when setting per-torrent rate limits)\n\t* expose peer_class API to python binding\n\t* fix integer overflow in whole_pieces_threshold logic\n\t* fix uTP path MTU discovery issue on windows (DF bit was not set correctly)\n\t* fix python binding for torrent_handle, to be hashable\n\t* fix IPv6 tracker support by performing the second announce in more cases\n\t* fix utf-8 encoding check in torrent parser\n\t* fix infinite loop when parsing maliciously crafted torrents\n\t* fix invalid read in parse_int in bdecoder (CVE-2017-9847)\n\t* fix issue with very long tracker- and web seed URLs\n\t* don't attempt to create empty files on startup, if they already exist\n\t* fix force-recheck issue (new files would not be picked up)\n\t* fix inconsistency in file_priorities and override_resume_data behavior\n\t* fix paused torrents not generating a state update when their ul/dl rate\n\t  transitions to zero\n\n1.1.4 release\n\n\t* corrected missing const qualifiers on bdecode_node\n\t* fix changing queue position of paused torrents (1.1.3 regression)\n\t* fix re-check issue after move_storage\n\t* handle invalid arguments to set_piece_deadline()\n\t* move_storage did not work for torrents without metadata\n\t* improve shutdown time by only announcing to trackers whose IP we know\n\t* fix python3 portability issue in python binding\n\t* delay 5 seconds before reconnecting socks5 proxy for UDP ASSOCIATE\n\t* fix NAT-PMP crash when removing a mapping at the wrong time\n\t* improve path sanitization (filter unicode text direction characters)\n\t* deprecate partial_piece_info::piece_state\n\t* bind upnp requests to correct local address\n\t* save resume data when removing web seeds\n\t* fix proxying of https connections\n\t* fix race condition in disk I/O storage class\n\t* fix http connection timeout on multi-homed hosts\n\t* removed dependency on boost::uintptr_t for better compatibility\n\t* fix memory leak in the disk cache\n\t* fix double free in disk cache\n\t* forward declaring libtorrent types is discouraged. a new fwd.hpp header is provided\n\n1.1.3 release\n\n\t* removed (broken) support for incoming connections over socks5\n\t* restore announce_entry's timestamp fields to posix time in python binding\n\t* deprecate torrent_added_alert (in favor of add_torrent_alert)\n\t* fix python binding for parse_magnet_uri\n\t* fix minor robustness issue in DHT bootstrap logic\n\t* fix issue where torrent_status::num_seeds could be negative\n\t* document deprecation of dynamic loading/unloading of torrents\n\t* include user-agent in tracker announces in anonymous_mode for private torrents\n\t* add support for IPv6 peers from udp trackers\n\t* correctly URL encode the IPv6 argument to trackers\n\t* fix default file pool size on windows\n\t* fix bug where settings_pack::file_pool_size setting was not being honored\n\t* add feature to periodically close files (to make windows clear disk cache)\n\t* fix bug in torrent_handle::file_status\n\t* fix issue with peers not updated on metadata from magnet links\n\n1.1.2 release\n\n\t* default TOS marking to 0x20\n\t* fix invalid access when leaving seed-mode with outstanding hash jobs\n\t* fix ABI compatibility issue introduced with preformatted entry type\n\t* add web_seed_name_lookup_retry to session_settings\n\t* slightly improve proxy settings backwards compatibility\n\t* add function to get default settings\n\t* updating super seeding would include the torrent in state_update_alert\n\t* fix issue where num_seeds could be greater than num_peers in torrent_status\n\t* finished non-seed torrents can also be in super-seeding mode\n\t* fix issue related to unloading torrents\n\t* fixed finished-time calculation\n\t* add missing min_memory_usage() and high_performance_seed() settings presets to python\n\t* fix stat cache issue that sometimes would produce incorrect resume data\n\t* storage optimization to peer classes\n\t* fix torrent name in alerts of builds with deprecated functions\n\t* make torrent_info::is_valid() return false if torrent failed to load\n\t* fix per-torrent rate limits for >256 peer classes\n\t* don't load user_agent and peer_fingerprint from session_state\n\t* fix file rename issue with name prefix matching torrent name\n\t* fix division by zero when setting tick_interval > 1000\n\t* fix move_storage() to its own directory (would delete the files)\n\t* fix socks5 support for UDP\n\t* add setting urlseed_max_request_bytes to handle large web seed requests\n\t* fix python build with CC/CXX environment\n\t* add trackers from add_torrent_params/magnet links to separate tiers\n\t* fix resumedata check issue with files with priority 0\n\t* deprecated mmap_cache feature\n\t* add utility function for generating peer ID fingerprint\n\t* fix bug in last-seen-complete\n\t* remove file size limit in torrent_info filename constructor\n\t* fix tail-padding for last file in create_torrent\n\t* don't send user-agent in metadata http downloads or UPnP requests when\n\t  in anonymous mode\n\t* fix internal resolve links lookup for mutable torrents\n\t* hint DHT bootstrap nodes of actual bootstrap request\n\n1.1.1 release\n\n\t* update puff.c for gzip inflation (CVE-2016-7164)\n\t* add dht_bootstrap_node a setting in settings_pack (and add default)\n\t* make pad-file and symlink support conform to BEP47\n\t* fix piece picker bug that could result in division by zero\n\t* fix value of current_tracker when all tracker failed\n\t* deprecate lt_trackers extension\n\t* remove load_asnum_db and load_country_db from python bindings\n\t* fix crash in session::get_ip_filter when not having set one\n\t* fix filename escaping when repairing torrents with broken web seeds\n\t* fix bug where file_completed_alert would not be posted unless file_progress\n\t  had been queries by the client\n\t* move files one-by-one when moving storage for a torrent\n\t* fix bug in enum_net() for BSD and Mac\n\t* fix bug in python binding of announce_entry\n\t* fixed bug related to flag_merge_resume_http_seeds flag in add_torrent_params\n\t* fixed inverted priority of incoming piece suggestions\n\t* optimize allow-fast logic\n\t* fix issue where FAST extension messages were not used during handshake\n\t* fixed crash on invalid input in http_parser\n\t* upgraded to libtommath 1.0\n\t* fixed parsing of IPv6 endpoint with invalid port character separator\n\t* added limited support for new x.pe parameter from BEP 9\n\t* fixed dht stats counters that weren't being updated\n\t* make sure add_torrent_alert is always posted before other alerts for\n\t  the torrent\n\t* fixed peer-class leak when settings per-torrent rate limits\n\t* added a new \"preformatted\" type to bencode entry variant type\n\t* improved Socks5 support and test coverage\n\t* fix set_settings in python binding\n\t* Added missing alert categories in python binding\n\t* Added dht_get_peers_reply_alert alert in python binding\n\t* fixed updating the node id reported to peers after changing IPs\n\n1.1.0 release\n\n\t* improve robustness and performance of uTP PMTU discovery\n\t* fix duplicate ACK issue in uTP\n\t* support filtering which parts of session state are loaded by load_state()\n\t* deprecate support for adding torrents by HTTP URL\n\t* allow specifying which tracker to scrape in scrape_tracker\n\t* tracker response alerts from user initiated announces/scrapes are now\n\t  posted regardless of alert mask\n\t* improve DHT performance when changing external IP (primarily affects\n\t  bootstrapping).\n\t* add feature to stop torrents immediately after checking files is done\n\t* make all non-auto managed torrents exempt from queuing logic, including\n\t  checking torrents.\n\t* add option to not proxy tracker connections through proxy\n\t* removed sparse-regions feature\n\t* support using 0 disk threads (to perform disk I/O in network thread)\n\t* removed deprecated handle_alert template\n\t* enable logging build config by default (but alert mask disabled by default)\n\t* deprecated RSS API\n\t* experimental support for BEP 38, \"mutable torrents\"\n\t* replaced lazy_bdecode with a new bdecoder that's a lot more efficient\n\t* deprecate time functions, expose typedefs of boost::chrono in the\n\t  libtorrent namespace instead\n\t* deprecate file_base feature in file_storage/torrent_info\n\t* changed default piece and file priority to 4 (previously 1)\n\t* improve piece picker support for reverse picking (used for snubbed peers)\n\t  to not cause priority inversion for regular peers\n\t* improve piece picker to better support torrents with very large pieces\n\t  and web seeds. (request large contiguous ranges, but not necessarily a\n\t  whole piece).\n\t* deprecated session_status and session::status() in favor of performance\n\t  counters.\n\t* improve support for HTTP where one direction of the socket is shut down.\n\t* remove internal fields from web_seed_entry\n\t* separate crypto library configuration <crypto> and whether to support\n\t  bittorrent protocol encryption <encryption>\n\t* simplify bittorrent protocol encryption by just using internal RC4\n\t  implementation.\n\t* optimize copying torrent_info and file_storage objects\n\t* cancel non-critical DNS lookups when shutting down, to cut down on\n\t  shutdown delay.\n\t* greatly simplify the debug logging infrastructure. logs are now delivered\n\t  as alerts, and log level is controlled by the alert mask.\n\t* removed auto_expand_choker. use rate_based_choker instead\n\t* optimize UDP tracker packet handling\n\t* support SSL over uTP connections\n\t* support web seeds that resolve to multiple IPs\n\t* added auto-sequential feature. download well-seeded torrents in-order\n\t* removed built-in GeoIP support (this functionality is orthogonal to\n\t  libtorrent)\n\t* deprecate proxy settings in favor of regular settings\n\t* deprecate separate settings for peer protocol encryption\n\t* support specifying listen interfaces and outgoing interfaces as device\n\t  names (eth0, en2, tun0 etc.)\n\t* support for using purgrable memory as disk cache on Mac OS.\n\t* be more aggressive in corking sockets, to coalesce messages into larger\n\t  packets.\n\t* pre-emptively unchoke peers to save one round-trip at connection start-up.\n\t* add session constructor overload that takes a settings_pack\n\t* torrent_info is no longer an intrusive_ptr type. It is held by shared_ptr.\n\t  This is a non-backwards compatible change\n\t* move listen interface and port to the settings\n\t* move use_interfaces() to be a setting\n\t* extend storage interface to allow deferred flushing and flush the part-file\n\t  metadata periodically\n\t* make statistics propagate instantly rather than on the second tick\n\t* support for partfiles, where partial pieces belonging to skipped files are\n\t  put\n\t* support using multiple threads for socket operations (especially useful for\n\t  high performance SSL connections)\n\t* allow setting rate limits for arbitrary peer groups. Generalizes\n\t  per-torrent rate limits, and local peer limits\n\t* improved disk cache complexity O(1) instead of O(log(n))\n\t* add feature to allow storing disk cache blocks in an mmapped file\n\t  (presumably on an SSD)\n\t* optimize peer connection distribution logic across torrents to scale\n\t  better with many torrents\n\t* replaced std::map with boost::unordered_map for torrent list, to scale\n\t  better with many torrents\n\t* optimized piece picker\n\t* optimized disk cache\n\t* optimized .torrent file parsing\n\t* optimized initialization of storage when adding a torrent\n\t* added support for adding torrents asynchronously (for improved startup\n\t  performance)\n\t* added support for asynchronous disk I/O\n\t* almost completely changed the storage interface (for custom storage)\n\t* added support for hashing pieces in multiple threads\n\n\t* fix padfile issue\n\t* fix PMTUd bug\n\t* update puff to fix gzip crash\n\n1.0.10 release\n\n\t* fixed inverted priority of incoming piece suggestions\n\t* fixed crash on invalid input in http_parser\n\t* added a new \"preformatted\" type to bencode entry variant type\n\t* fix division by zero in super-seeding logic\n\n1.0.9 release\n\n\t* fix issue in checking outgoing interfaces (when that option is enabled)\n\t* python binding fix for boost-1.60.0\n\t* optimize enumeration of network interfaces on windows\n\t* improve reliability of binding listen sockets\n\t* support SNI in https web seeds and trackers\n\t* fix unhandled exception in DHT when receiving a DHT packet over IPv6\n\n1.0.8 release\n\n\t* fix bug where web seeds were not used for torrents added by URL\n\t* fix support for symlinks on windows\n\t* fix long filename issue (on unixes)\n\t* fixed performance bug in DHT torrent eviction\n\t* fixed win64 build (GetFileAttributesEx)\n\t* fixed bug when deleting files for magnet links before they had metadata\n\n1.0.7 release\n\n\t* fix bug where loading settings via load_state() would not trigger all\n\t  appropriate actions\n\t* fix bug where 32 bit builds could use more disk cache than the virtual\n\t  address space (when set to automatic)\n\t* fix support for torrents with > 500'000 pieces\n\t* fix ip filter bug when banning peers\n\t* fix IPv6 IP address resolution in URLs\n\t* introduce run-time check for torrent info-sections being too large\n\t* fix web seed bug when using proxy and proxy-peer-connections=false\n\t* fix bug in magnet link parser\n\t* introduce add_torrent_params flags to merge web seeds with resume data\n\t  (similar to trackers)\n\t* fix bug where dont_count_slow_torrents could not be disabled\n\t* fix fallocate hack on linux (fixes corruption on some architectures)\n\t* fix auto-manage bug with announce to tracker/lsd/dht limits\n\t* improve DHT routing table to not create an unbalanced tree\n\t* fix bug in uTP that would cause any connection taking more than one second\n\t  to connect be timed out (introduced in the vulnerability path)\n\t* fixed falling back to sending UDP packets direct when socks proxy fails\n\t* fixed total_wanted bug (when setting file priorities in add_torrent_params)\n\t* fix python3 compatibility with sha1_hash\n\n1.0.6 release\n\n\t* fixed uTP vulnerability\n\t* make utf8 conversions more lenient\n\t* fix loading of piece priorities from resume data\n\t* improved seed-mode handling (seed-mode will now automatically be left when\n\t  performing operations implying it's not a seed)\n\t* fixed issue with file priorities and override resume data\n\t* fix request queue size performance issue\n\t* slightly improve UDP tracker performance\n\t* fix http scrape\n\t* add missing port mapping functions to python binding\n\t* fix bound-checking issue in bdecoder\n\t* expose missing dht_settings fields to python\n\t* add function to query the DHT settings\n\t* fix bug in 'dont_count_slow_torrents' feature, which would start too many\n\t  torrents\n\n1.0.5 release\n\n\t* improve ip_voter to avoid flapping\n\t* fixed bug when max_peerlist_size was set to 0\n\t* fix issues with missing exported symbols when building dll\n\t* fix division by zero bug in edge case while connecting peers\n\n1.0.4 release\n\n\t* fix bug in python binding for file_progress on torrents with no metadata\n\t* fix assert when removing a connected web seed\n\t* fix bug in tracker timeout logic\n\t* switch UPnP post back to HTTP 1.1\n\t* support conditional DHT get\n\t* OpenSSL build fixes\n\t* fix DHT scrape bug\n\n1.0.3 release\n\n\t* python binding build fix for boost-1.57.0\n\t* add --enable-export-all option to configure script, to export all symbols\n\t  from libtorrent\n\t* fix if_nametoindex build error on windows\n\t* handle overlong utf-8 sequences\n\t* fix link order bug in makefile for python binding\n\t* fix bug in interest calculation, causing premature disconnects\n\t* tweak flag_override_resume_data semantics to make more sense (breaks\n\t  backwards compatibility of edge-cases)\n\t* improve DHT bootstrapping and periodic refresh\n\t* improve DHT maintenance performance (by pinging instead of full lookups)\n\t* fix bug in DHT routing table node-id prefix optimization\n\t* fix incorrect behavior of flag_use_resume_save_path\n\t* fix protocol race-condition in super seeding mode\n\t* support read-only DHT nodes\n\t* remove unused partial hash DHT lookups\n\t* remove potentially privacy leaking extension (non-anonymous mode)\n\t* peer-id connection ordering fix in anonymous mode\n\t* mingw fixes\n\n1.0.2 release\n\n\t* added missing force_proxy to python binding\n\t* anonymous_mode defaults to false\n\t* make DHT DOS detection more forgiving to bursts\n\t* support IPv6 multicast in local service discovery\n\t* simplify CAS function in DHT put\n\t* support IPv6 traffic class (via the TOS setting)\n\t* made uTP re-enter slow-start after time-out\n\t* fixed uTP upload performance issue\n\t* fix missing support for DHT put salt\n\n1.0.1 release\n\n\t* fix alignment issue in bitfield\n\t* improved error handling of gzip\n\t* fixed crash when web seeds redirect\n\t* fix compiler warnings\n\n1.0 release\n\n\t* fix bugs in convert_to/from_native() on windows\n\t* fix support for web servers not supporting keepalive\n\t* support storing save_path in resume data\n\t* don't use full allocation on network drives (on windows)\n\t* added clear_piece_deadlines() to remove all piece deadlines\n\t* improve queuing logic of inactive torrents (dont_count_slow_torrents)\n\t* expose optimistic unchoke logic to plugins\n\t* fix issue with large UDP packets on windows\n\t* remove set_ratio() feature\n\t* improve piece_deadline/streaming\n\t* honor pieces with priority 7 in sequential download mode\n\t* simplified building python bindings\n\t* make ignore_non_routers more forgiving in the case there are no UPnP\n\t  devices at a known router. Should improve UPnP compatibility.\n\t* include reason in peer_blocked_alert\n\t* support magnet links wrapped in .torrent files\n\t* rate limiter optimization\n\t* rate limiter overflow fix (for very high limits)\n\t* non-auto-managed torrents no longer count against the torrent limits\n\t* handle DHT error responses correctly\n\t* allow force_announce to only affect a single tracker\n\t* add moving_storage field to torrent_status\n\t* expose UPnP and NAT-PMP mapping in session object\n\t* DHT refactoring and support for storing arbitrary data with put and get\n\t* support building on android\n\t* improved support for web seeds that don't support keep-alive\n\t* improve DHT routing table to return better nodes (lower RTT and closer\n\t  to target)\n\t* don't use pointers to resume_data and file_priorities in\n\t  add_torrent_params\n\t* allow moving files to absolute paths, out of the download directory\n\t* make move_storage more generic to allow both overwriting files as well\n\t  as taking existing ones\n\t* fix choking issue at high upload rates\n\t* optimized rate limiter\n\t* make disk cache pool allocator configurable\n\t* fix library ABI to not depend on logging being enabled\n\t* use hex encoding instead of base32 in create_magnet_uri\n\t* include name, save_path and torrent_file in torrent_status, for\n\t  improved performance\n\t* separate anonymous mode and force-proxy mode, and tighten it up a bit\n\t* add per-tracker scrape information to announce_entry\n\t* report errors in read_piece_alert\n\t* DHT memory optimization\n\t* improve DHT lookup speed\n\t* improve support for windows XP and earlier\n\t* introduce global connection priority for improved swarm performance\n\t* make files deleted alert non-discardable\n\t* make built-in sha functions not conflict with libcrypto\n\t* improve web seed hash failure case\n\t* improve DHT lookup times\n\t* uTP path MTU discovery improvements\n\t* optimized the torrent creator optimizer to scale significantly better\n\t  with more files\n\t* fix uTP edge case where udp socket buffer fills up\n\t* fix nagle implementation in uTP\n\n\t* fix bug in error handling in protocol encryption\n\n0.16.18 release\n\n\t* fix uninitialized values in DHT DOS mitigation\n\t* fix error handling in file::phys_offset\n\t* fix bug in HTTP scrape response parsing\n\t* enable TCP keepalive for socks5 connection for UDP associate\n\t* fix python3 support\n\t* fix bug in lt_donthave extension\n\t* expose i2p_alert to python. cleaning up of i2p connection code\n\t* fixed overflow and download performance issue when downloading at high rates\n\t* fixed bug in add_torrent_alert::message for magnet links\n\t* disable optimistic disconnects when connection limit is low\n\t* improved error handling of session::listen_on\n\t* suppress initial 'completed' announce to trackers added with replace_trackers\n\t  after becoming a seed\n\t* SOCKS4 fix for trying to connect over IPv6\n\t* fix saving resume data when removing all trackers\n\t* fix bug in udp_socket when changing socks5 proxy quickly\n\n0.16.17 release\n\n\t* don't fall back on wildcard port in UPnP\n\t* fix local service discovery for magnet links\n\t* fix bitfield issue in file_storage\n\t* added work-around for MingW issue in file I/O\n\t* fixed sparse file detection on windows\n\t* fixed bug in gunzip\n\t* fix to use proxy settings when adding .torrent file from URL\n\t* fix resume file issue related to daylight savings time on windows\n\t* improve error checking in lazy_bdecode\n\n0.16.16 release\n\n\t* add missing add_files overload to the python bindings\n\t* improve error handling in http gunzip\n\t* fix debug logging for banning web seeds\n\t* improve support for de-selected files in full allocation mode\n\t* fix dht_bootstrap_alert being posted\n\t* SetFileValidData fix on windows (prevents zero-fill)\n\t* fix minor lock_files issue on unix\n\n0.16.15 release\n\n\t* fix mingw time_t 64 bit issue\n\t* fix use of SetFileValidData on windows\n\t* fix crash when using full allocation storage mode\n\t* improve error_code and error_category support in python bindings\n\t* fix python binding for external_ip_alert\n\n0.16.14 release\n\n\t* make lt_tex more robust against bugs and malicious behavior\n\t* HTTP chunked encoding fix\n\t* expose file_granularity flag to python bindings\n\t* fix DHT memory error\n\t* change semantics of storage allocation to allocate on first write rather\n\t  than on startup (behaves better with changing file priorities)\n\t* fix resend logic in response to uTP SACK messages\n\t* only act on uTP RST packets with correct ack_nr\n\t* make uTP errors log in normal log mode (not require verbose)\n\t* deduplicate web seed entries from torrent files\n\t* improve error reporting from lazy_decode()\n\n0.16.13 release\n\n\t* fix auto-manage issue when pausing session\n\t* fix bug in non-sparse mode on windows, causing incorrect file errors to\n\t  be generated\n\t* fix set_name() on file_storage actually affecting save paths\n\t* fix large file support issue on mingw\n\t* add some error handling to set_piece_hashes()\n\t* fix completed-on timestamp to not be clobbered on each startup\n\t* fix deadlock caused by some UDP tracker failures\n\t* fix potential integer overflow issue in timers on windows\n\t* minor fix to peer_proportional mixed_mode algorithm (TCP limit could go\n\t  too low)\n\t* graceful pause fix\n\t* i2p fixes\n\t* fix issue when loading certain malformed .torrent files\n\t* pass along host header with http proxy requests and possible\n\t  http_connection shutdown hang\n\n0.16.12 release\n\n\t* fix building with C++11\n\t* fix IPv6 support in UDP socket (uTP)\n\t* fix mingw build issues\n\t* increase max allowed outstanding piece requests from peers\n\t* uTP performance improvement. only fast retransmit one packet at a time\n\t* improve error message for 'file too short'\n\t* fix piece-picker stat bug when only selecting some files for download\n\t* fix bug in async_add_torrent when settings file_priorities\n\t* fix boost-1.42 support for python bindings\n\t* fix memory allocation issue (virtual address space waste) on windows\n\n0.16.11 release\n\n\t* fix web seed URL double escape issue\n\t* fix string encoding issue in alert messages\n\t* fix SSL authentication issue\n\t* deprecate std::wstring overloads. long live utf-8\n\t* improve time-critical pieces feature (streaming)\n\t* introduce bandwidth exhaustion attack-mitigation in allowed-fast pieces\n\t* python binding fix issue where torrent_info objects where destructing when\n\t  their torrents were deleted\n\t* added missing field to scrape_failed_alert in python bindings\n\t* GCC 4.8 fix\n\t* fix proxy failure semantics with regards to anonymous mode\n\t* fix round-robin seed-unchoke algorithm\n\t* add bootstrap.sh to generate configure script and run configure\n\t* fix bug in SOCK5 UDP support\n\t* fix issue where torrents added by URL would not be started immediately\n\n0.16.10 release\n\n\t* fix encryption level handle invalid values\n\t* add a number of missing functions to the python binding\n\t* fix typo in Jamfile for building shared libraries\n\t* prevent tracker exchange for magnet links before metadata is received\n\t* fix crash in make_magnet_uri when generating links longer than 1024\n\t  characters\n\t* fix hanging issue when closing files on windows (completing a download)\n\t* fix piece picking edge case that could cause torrents to get stuck at\n\t  hash failure\n\t* try unencrypted connections first, and fall back to encryption if it\n\t  fails (performance improvement)\n\t* add missing functions to python binding (flush_cache(), remap_files()\n\t  and orig_files())\n\t* improve handling of filenames that are invalid on windows\n\t* support 'implied_port' in DHT announce_peer\n\t* don't use pool allocator for disk blocks (cache may now return pages\n\t  to the kernel)\n\n0.16.9 release\n\n\t* fix long filename truncation on windows\n\t* distinguish file open mode when checking files and downloading/seeding\n\t  with bittorrent. updates storage interface\n\t* improve file_storage::map_file when dealing with invalid input\n\t* improve handling of invalid utf-8 sequences in strings in torrent files\n\t* handle more cases of broken .torrent files\n\t* fix bug filename collision resolver\n\t* fix bug in filename utf-8 verification\n\t* make need_save_resume() a bit more robust\n\t* fixed sparse flag manipulation on windows\n\t* fixed streaming piece picking issue\n\n0.16.8 release\n\n\t* make rename_file create missing directories for new filename\n\t* added missing python function: parse_magnet_uri\n\t* fix alerts.all_categories in python binding\n\t* fix torrent-abort issue which would cancel name lookups of other torrents\n\t* make torrent file parser reject invalid path elements earlier\n\t* fixed piece picker bug when using pad-files\n\t* fix read-piece response for cancelled deadline-pieces\n\t* fixed file priority vector-overrun\n\t* fix potential packet allocation alignment issue in utp\n\t* make 'close_redudnant_connections' cover more cases\n\t* set_piece_deadline() also unfilters the piece (if its priority is 0)\n\t* add work-around for bug in windows vista and earlier in\n\t  GetOverlappedResult\n\t* fix traversal algorithm leak in DHT\n\t* fix string encoding conversions on windows\n\t* take torrent_handle::query_pieces into account in torrent_handle::statue()\n\t* honor trackers responding with 410\n\t* fixed merkle tree torrent creation bug\n\t* fixed crash with empty url-lists in torrent files\n\t* added missing max_connections() function to python bindings\n\n0.16.7 release\n\n\t* fix string encoding in error messages\n\t* handle error in read_piece and set_piece_deadline when torrent is removed\n\t* DHT performance improvement\n\t* attempt to handle ERROR_CANT_WAIT disk error on windows\n\t* improve peers exchanged over PEX\n\t* fixed rare crash in ut_metadata extension\n\t* fixed files checking issue\n\t* added missing pop_alerts() to python bindings\n\t* fixed typos in configure script, inversing some feature-enable/disable flags\n\t* added missing flag_update_subscribe to python bindings\n\t* active_dht_limit, active_tracker_limit and active_lsd_limit now\n\t  interpret -1 as infinite\n\n0.16.6 release\n\n\t* fixed verbose log error for NAT holepunching\n\t* fix a bunch of typos in python bindings\n\t* make get_settings available in the python binding regardless of\n\t  deprecated functions\n\t* fix typo in python settings binding\n\t* fix possible dangling pointer use in peer list\n\t* fix support for storing arbitrary data in the DHT\n\t* fixed bug in uTP packet circle buffer\n\t* fix potential crash when using torrent_handle::add_piece\n\t* added missing add_torrent_alert to python binding\n\n0.16.5 release\n\n\t* udp socket refcounter fix\n\t* added missing async_add_torrent to python bindings\n\t* raised the limit for bottled http downloads to 2 MiB\n\t* add support for magnet links and URLs in python example client\n\t* fixed typo in python bindings' add_torrent_params\n\t* introduce a way to add built-in plugins from python\n\t* consistently disconnect the same peer when two peers simultaneously connect\n\t* fix local endpoint queries for uTP connections\n\t* small optimization to local peer discovery to ignore our own broadcasts\n\t* try harder to bind the udp socket (uTP, DHT, UDP-trackers, LSD) to the\n\t  same port as TCP\n\t* relax file timestamp requirements for accepting resume data\n\t* fix performance issue in web seed downloader (coalescing of blocks\n\t  sometimes wouldn't work)\n\t* web seed fixes (better support for torrents without trailing / in\n\t  web seeds)\n\t* fix some issues with SSL over uTP connections\n\t* fix UDP trackers trying all endpoints behind the hostname\n\n0.16.4 release\n\n\t* raise the default number of torrents allowed to announce to trackers\n\t  to 1600\n\t* improve uTP slow start behavior\n\t* fixed UDP socket error causing it to fail on Win7\n\t* update use of boost.system to not use deprecated functions\n\t* fix GIL issue in python bindings. Deprecated extension support in python\n\t* fixed bug where setting upload slots to -1 would not mean infinite\n\t* extend the UDP tracker protocol to include the request string from the\n\t  tracker URL\n\t* fix mingw build for linux crosscompiler\n\n0.16.3 release\n\n\t* fix python binding backwards compatibility in replace_trackers\n\t* fix possible starvation in metadata extension\n\t* fix crash when creating torrents and optimizing file order with pad files\n\t* disable support for large MTUs in uTP until it is more reliable\n\t* expose post_torrent_updates and state_update_alert to python bindings\n\t* fix incorrect SSL error messages\n\t* fix windows build of shared library with openssl\n\t* fix race condition causing shutdown hang\n\n0.16.2 release\n\n\t* fix permissions issue on linux with noatime enabled for non-owned files\n\t* use random peer IDs in anonymous mode\n\t* fix move_storage bugs\n\t* fix unnecessary dependency on boost.date_time when building boost.asio as separate compilation\n\t* always use SO_REUSEADDR and deprecate the flag to turn it on\n\t* add python bindings for SSL support\n\t* minor uTP tweaks\n\t* fix end-game mode issue when some files are selected to not be downloaded\n\t* improve uTP slow start\n\t* make uTP less aggressive resetting cwnd when idle\n\n0.16.1 release\n\n\t* fixed crash when providing corrupt resume data\n\t* fixed support for boost-1.44\n\t* fixed reversed semantics of queue_up() and queue_down()\n\t* added missing functions to python bindings (file_priority(), set_dht_settings())\n\t* fixed low_prio_disk support on linux\n\t* fixed time critical piece accounting in the request queue\n\t* fixed semantics of rate_limit_utp to also ignore per-torrent limits\n\t* fixed piece sorting bug of deadline pieces\n\t* fixed python binding build on Mac OS and BSD\n\t* fixed UNC path normalization (on windows, unless UNC paths are disabled)\n\t* fixed possible crash when enabling multiple connections per IP\n\t* fixed typo in win vista specific code, breaking the build\n\t* change default of rate_limit_utp to true\n\t* fixed DLL export issue on windows (when building a shared library linking statically against boost)\n\t* fixed FreeBSD build\n\t* fixed web seed performance issue with pieces > 1 MiB\n\t* fixed unchoke logic when using web seeds\n\t* fixed compatibility with older versions of boost (down to boost 1.40)\n\n0.16 release\n\n\t* support torrents with more than 262000 pieces\n\t* make tracker back-off configurable\n\t* don't restart the swarm after downloading metadata from magnet links\n\t* lower the default tracker retry intervals\n\t* support banning web seeds sending corrupt data\n\t* don't let hung outgoing connection attempts block incoming connections\n\t* improve SSL torrent support by using SNI and a single SSL listen socket\n\t* improved peer exchange performance by sharing incoming connections which advertise listen port\n\t* deprecate set_ratio(), and per-peer rate limits\n\t* add web seed support for torrents with pad files\n\t* introduced a more scalable API for torrent status updates (post_torrent_updates()) and updated client_test to use it\n\t* updated the API to add_torrent_params turning all bools into flags of a flags field\n\t* added async_add_torrent() function to significantly improve performance when\n\t  adding many torrents\n\t* change peer_states to be a bitmask (bw_limit, bw_network, bw_disk)\n\t* changed semantics of send_buffer_watermark_factor to be specified as a percentage\n\t* add incoming_connection_alert for logging all successful incoming connections\n\t* feature to encrypt peer connections with a secret AES-256 key stored in .torrent file\n\t* deprecated compact storage allocation\n\t* close files in separate thread on systems where close() may block (Mac OS X for instance)\n\t* don't create all directories up front when adding torrents\n\t* support DHT scrape\n\t* added support for fadvise/F_RDADVISE for improved disk read performance\n\t* introduced pop_alerts() which pops the entire alert queue in a single call\n\t* support saving metadata in resume file, enable it by default for magnet links\n\t* support for receiving multi announce messages for local peer discovery\n\t* added session::listen_no_system_port flag to prevent libtorrent from ever binding the listen socket to port 0\n\t* added option to not recheck on missing or incomplete resume data\n\t* extended stats logging with statistics=on builds\n\t* added new session functions to more efficiently query torrent status\n\t* added alerts for added and removed torrents\n\t* expanded plugin interface to support session wide states\n\t* made the metadata block requesting algorithm more robust against hash check failures\n\t* support a separate option to use proxies for peers or not\n\t* pausing the session now also pauses checking torrents\n\t* moved alert queue size limit into session_settings\n\t* added support for DHT rss feeds (storing only)\n\t* added support for RSS feeds\n\t* fixed up some edge cases in DHT routing table and improved unit test of it\n\t* added error category and error codes for HTTP errors\n\t* made the DHT implementation slightly more robust against routing table poisoning and node ID spoofing\n\t* support chunked encoding in http downloads (http_connection)\n\t* support adding torrents by url to the .torrent file\n\t* support CDATA tags in xml parser\n\t* use a python python dictionary for settings instead of session_settings object (in python bindings)\n\t* optimized metadata transfer (magnet link) startup time (shaved off about 1 second)\n\t* optimized swarm startup time (shaved off about 1 second)\n\t* support DHT name lookup\n\t* optimized memory usage of torrent_info and file_storage, forcing some API changes\n\t  around file_storage and file_entry\n\t* support trackerid tracker extension\n\t* graceful peer disconnect mode which finishes transactions before disconnecting peers\n\t* support chunked encoding for web seeds\n\t* uTP protocol support\n\t* resistance towards certain flood attacks\n\t* support chunked encoding for web seeds (only for BEP 19, web seeds)\n\t* optimized session startup time\n\t* support SSL for web seeds, through all proxies\n\t* support extending web seeds with custom authorization and extra headers\n\t* settings that are not changed from the default values are not saved\n\t  in the session state\n\t* made seeding choking algorithm configurable\n\t* deprecated setters for max connections, max half-open, upload and download\n\t  rates and unchoke slots. These are now set through session_settings\n\t* added functions to query an individual peer's upload and download limit\n\t* full support for BEP 21 (event=paused)\n\t* added share-mode feature for improving share ratios\n\t* merged all proxy settings into a single one\n\t* improved SOCKS5 support by proxying hostname lookups\n\t* improved support for multi-homed clients\n\t* added feature to not count downloaded bytes from web seeds in stats\n\t* added alert for incoming local service discovery messages\n\t* added option to set file priorities when adding torrents\n\t* removed the session mutex for improved performance\n\t* added upload and download activity timer stats for torrents\n\t* made the reuse-address flag configurable on the listen socket\n\t* moved UDP trackers over to use a single socket\n\t* added feature to make asserts log to a file instead of breaking the process\n\t  (production asserts)\n\t* optimized disk I/O cache clearing\n\t* added feature to ask a torrent if it needs to save its resume data or not\n\t* added setting to ignore file modification time when loading resume files\n\t* support more fine-grained torrent states between which peer sources it\n\t  announces to\n\t* supports calculating sha1 file-hashes when creating torrents\n\t* made the send_buffer_watermark performance warning more meaningful\n\t* supports complete_ago extension\n\t* dropped zlib as a dependency and builds using puff.c instead\n\t* made the default cache size depend on available physical RAM\n\t* added flags to torrent::status() that can filter which values are calculated\n\t* support 'explicit read cache' which keeps a specific set of pieces\n\t  in the read cache, without implicitly caching other pieces\n\t* support sending suggest messages based on what's in the read cache\n\t* clear sparse flag on files that complete on windows\n\t* support retry-after header for web seeds\n\t* replaced boost.filesystem with custom functions\n\t* replaced dependency on boost.thread by asio's internal thread primitives\n\t* added support for i2p torrents\n\t* cleaned up usage of MAX_PATH and related macros\n\t* made it possible to build libtorrent without RTTI support\n\t* added support to build with libgcrypt and a shipped version of libtommath\n\t* optimized DHT routing table memory usage\n\t* optimized disk cache to work with large caches\n\t* support variable number of optimistic unchoke slots and to dynamically\n\t  adjust based on the total number of unchoke slots\n\t* support for BitTyrant choker algorithm\n\t* support for automatically start torrents when they receive an\n\t  incoming connection\n\t* added more detailed instrumentation of the disk I/O thread\n\n0.15.11 release\n\n\t* fixed web seed bug, sometimes causing infinite loops\n\t* fixed race condition when setting session_settings immediately after creating session\n\t* give up immediately when failing to open a listen socket (report the actual error)\n\t* restored ABI compatibility with 0.15.9\n\t* added missing python bindings for create_torrent and torrent_info\n\n0.15.10 release\n\n\t* fix 'parameter incorrect' issue when using unbuffered IO on windows\n\t* fixed UDP socket error handling on windows\n\t* fixed peer_tos (type of service) setting\n\t* fixed crash when loading resume file with more files than the torrent in it\n\t* fix invalid-parameter error on windows when disabling filesystem disk cache\n\t* fix connection queue issue causing shutdown delays\n\t* fixed mingw build\n\t* fix overflow bug in progress_ppm field\n\t* don't filter local peers received from a non-local tracker\n\t* fix python deadlock when using python extensions\n\t* fixed small memory leak in DHT\n\n0.15.9 release\n\n\t* added some functions missing from the python binding\n\t* fixed rare piece picker bug\n\t* fixed invalid torrent_status::finished_time\n\t* fixed bugs in dont-have and upload-only extension messages\n\t* don't open files in random-access mode (speeds up hashing)\n\n0.15.8 release\n\n\t* allow NULL to be passed to create_torrent::set_comment and create_torrent::set_creator\n\t* fix UPnP issue for routers with multiple PPPoE connections\n\t* fix issue where event=stopped announces wouldn't be sent when closing session\n\t* fix possible hang in file::readv() on windows\n\t* fix CPU busy loop issue in tracker announce logic\n\t* honor IOV_MAX when using writev and readv\n\t* don't post 'operation aborted' UDP errors when changing listen port\n\t* fix tracker retry logic, where in some configurations the next tier would not be tried\n\t* fixed bug in http seeding logic (introduced in 0.15.7)\n\t* add support for dont-have extension message\n\t* fix for set_piece_deadline\n\t* add reset_piece_deadline function\n\t* fix merkle tree torrent assert\n\n0.15.7 release\n\n\t* exposed set_peer_id to python binding\n\t* improve support for merkle tree torrent creation\n\t* exposed comparison operators on torrent_handle to python\n\t* exposed alert error_codes to python\n\t* fixed bug in announce_entry::next_announce_in and min_announce_in\n\t* fixed sign issue in set_alert_mask signature\n\t* fixed unaligned disk access for unbuffered I/O in windows\n\t* support torrents whose name is empty\n\t* fixed connection limit to take web seeds into account as well\n\t* fixed bug when receiving a have message before having the metadata\n\t* fixed python bindings build with disabled DHT support\n\t* fixed BSD file allocation issue\n\t* fixed bug in session::delete_files option to remove_torrent\n\n0.15.6 release\n\n\t* fixed crash in udp trackers when using SOCKS5 proxy\n\t* fixed reconnect delay when leaving upload only mode\n\t* fixed default values being set incorrectly in add_torrent_params through add_magnet_uri in python bindings\n\t* implemented unaligned write (for unbuffered I/O)\n\t* fixed broadcast_lsd option\n\t* fixed udp-socket race condition when using a proxy\n\t* end-game mode optimizations\n\t* fixed bug in udp_socket causing it to issue two simultaneous async. read operations\n\t* fixed mingw build\n\t* fixed minor bug in metadata block requester (for magnet links)\n\t* fixed race condition in iconv string converter\n\t* fixed error handling in torrent_info constructor\n\t* fixed bug in torrent_info::remap_files\n\t* fix python binding for wait_for_alert\n\t* only apply privileged port filter to DHT-only peers\n\n0.15.5 release\n\n\t* support DHT extension to report external IPs\n\t* fixed rare crash in http_connection's error handling\n\t* avoid connecting to peers listening on ports < 1024\n\t* optimized piece picking to not cause busy loops in some end-game modes\n\t* fixed python bindings for tcp::endpoint\n\t* fixed edge case of pad file support\n\t* limit number of torrents tracked by DHT\n\t* fixed bug when allow_multiple_connections_per_ip was enabled\n\t* potential WOW64 fix for unbuffered I/O (windows)\n\t* expose set_alert_queue_size_limit to python binding\n\t* support dht nodes in magnet links\n\t* support 100 Continue HTTP responses\n\t* changed default choker behavior to use 8 unchoke slots (instead of being rate based)\n\t* fixed error reporting issue in disk I/O thread\n\t* fixed file allocation issues on linux\n\t* fixed filename encoding and decoding issue on platforms using iconv\n\t* reports redundant downloads to tracker, fixed downloaded calculation to\n\t  be more stable when not including redundant. Improved redundant data accounting\n\t  to be more accurate\n\t* fixed bugs in http seed connection and added unit test for it\n\t* fixed error reporting when fallocate fails\n\t* deprecate support for separate proxies for separate kinds of connections\n\n0.15.4 release\n\n\t* fixed piece picker issue triggered by hash failure and timed out requests to the piece\n\t* fixed optimistic unchoke issue when setting per torrent unchoke limits\n\t* fixed UPnP shutdown issue\n\t* fixed UPnP DeletePortmapping issue\n\t* fixed NAT-PMP issue when adding the same mapping multiple times\n\t* no peers from tracker when stopping is no longer an error\n\t* improved web seed retry behavior\n\t* fixed announce issue\n\n0.15.3 release\n\n\t* fixed announce bug where event=completed would not be sent if it violated the\n\t  min-announce of the tracker\n\t* fixed limitation in rate limiter\n\t* fixed build error with boost 1.44\n\n0.15.2 release\n\n\t* updated compiler to msvc 2008 for python binding\n\t* restored default fail_limit to unlimited on all trackers\n\t* fixed rate limit bug for DHT\n\t* fixed SOCKS5 bug for routing UDP packets\n\t* fixed bug on windows when verifying resume data for a torrent where\n\t  one of its directories had been removed\n\t* fixed race condition in peer-list with DHT\n\t* fix force-reannounce and tracker retry issue\n\n0.15.1 release\n\n\t* fixed rare crash when purging the peer list\n\t* fixed race condition around m_abort in session_impl\n\t* fixed bug in web_peer_connection which could cause a hang when downloading\n\t  from web servers\n\t* fixed bug in metadata extensions combined with encryption\n\t* refactored socket reading code to not use async. operations unnecessarily\n\t* some timer optimizations\n\t* removed the reuse-address flag on the listen socket\n\t* fixed bug where local peer discovery and DHT wouldn't be announced to without trackers\n\t* fixed bug in bdecoder when decoding invalid messages\n\t* added build warning when building with UNICODE but the standard library\n\t  doesn't provide std::wstring\n\t* fixed add_node python binding\n\t* fixed issue where trackers wouldn't tried immediately when the previous one failed\n\t* fixed synchronization issue between download queue and piece picker\n\t* fixed bug in udp tracker scrape response parsing\n\t* fixed bug in the disk thread that could get triggered under heavy load\n\t* fixed bug in add_piece() that would trigger asserts\n\t* fixed vs 2010 build\n\t* recognizes more clients in identify_client()\n\t* fixed bug where trackers wouldn't be retried if they failed\n\t* slight performance fix in disk elevator algorithm\n\t* fixed potential issue where a piece could be checked twice\n\t* fixed build issue on windows related to GetCompressedSize()\n\t* fixed deadlock when starting torrents with certain invalid tracker URLs\n\t* fixed iterator bug in disk I/O thread\n\t* fixed FIEMAP support on linux\n\t* fixed strict aliasing warning on gcc\n\t* fixed inconsistency when creating torrents with symlinks\n\t* properly detect windows version to initialize half-open connection limit\n\t* fixed bug in url encoder where $ would not be encoded\n\n0.15 release\n\n\t* introduced a session state save mechanism. load_state() and save_state().\n\t  this saves all session settings and state (except torrents)\n\t* deprecated dht_state functions and merged it with the session state\n\t* added support for multiple trackers in magnet links\n\t* added support for explicitly flushing the disk cache\n\t* added torrent priority to affect bandwidth allocation for its peers\n\t* reduced the number of floating point operations (to better support\n\t  systems without FPU)\n\t* added new alert when individual files complete\n\t* added support for storing symbolic links in .torrent files\n\t* added support for uTorrent interpretation of multi-tracker torrents\n\t* handle torrents with duplicate filenames\n\t* piece timeouts are adjusted to download rate limits\n\t* encodes urls in torrent files that needs to be encoded\n\t* fixed not passing &supportcrypto=1 when encryption is disabled\n\t* introduced an upload mode, which torrents are switched into when\n\t  it hits a disk write error, instead of stopping the torrent.\n\t  this lets libtorrent keep uploading the parts it has when it\n\t  encounters a disk-full error for instance\n\t* improved disk error handling and expanded use of error_code in\n\t  error reporting. added a bandwidth state, bw_disk, when waiting\n\t  for the disk io thread to catch up writing buffers\n\t* improved read cache memory efficiency\n\t* added another cache flush algorithm to write the largest\n\t  contiguous blocks instead of the least recently used\n\t* introduced a mechanism to be lighter on the disk when checking torrents\n\t* applied temporary memory storage optimization to when checking\n\t  a torrent as well\n\t* removed hash_for_slot() from storage_interface. It is now implemented\n\t  by using the readv() function from the storage implementation\n\t* improved IPv6 support by announcing twice when necessary\n\t* added feature to set a separate global rate limit for local peers\n\t* added preset settings for low memory environments and seed machines\n\t  min_memory_usage() and high_performance_seeder()\n\t* optimized overall memory usage for DHT nodes and requests, peer\n\t  entries and disk buffers\n\t* change in API for block_info in partial_piece_info, instead of\n\t  accessing 'peer', call 'peer()'\n\t* added support for fully automatic unchoker (no need to specify\n\t  number of upload slots). This is on by default\n\t* added support for changing socket buffer sizes through\n\t  session_settings\n\t* added support for merkle hash tree torrents (.merkle.torrent)\n\t* added 'seed mode', which assumes that all files are complete\n\t  and checks hashes lazily, as blocks are requested\n\t* added new extension for file attributes (executable and hidden)\n\t* added support for unbuffered I/O for aligned files\n\t* added workaround for sparse file issue on Windows Vista\n\t* added new lt_trackers extension to exchange trackers between\n\t  peers\n\t* added support for BEP 17 http seeds\n\t* added read_piece() to read pieces from torrent storage\n\t* added option for udp tracker preference\n\t* added super seeding\n\t* added add_piece() function to inject data from external sources\n\t* add_tracker() function added to torrent_handle\n\t* if there is no working tracker, current_tracker is the\n\t  tracker that is currently being tried\n\t* torrents that are checking can now be paused, which will\n\t  pause the checking\n\t* introduced another torrent state, checking_resume_data, which\n\t  the torrent is in when it's first added, and is comparing\n\t  the files on disk with the resume data\n\t* DHT bandwidth usage optimizations\n\t* rate limited DHT send socket\n\t* tracker connections are now also subject to IP filtering\n\t* improved optimistic unchoke logic\n\t* added monitoring of the DHT lookups\n\t* added bandwidth reports for estimated TCP/IP overhead and DHT\n\t* includes DHT traffic in the rate limiter\n\t* added support for bitcomet padding files\n\t* improved support for sparse files on windows\n\t* added ability to give seeding torrents preference to active slots\n\t* added torrent_status::finished_time\n\t* automatically caps files and connections by default to rlimit\n\t* added session::is_dht_running() function\n\t* added torrent_handle::force_dht_announce()\n\t* added torrent_info::remap_files()\n\t* support min_interval tracker extension\n\t* added session saving and loading functions\n\t* added support for min-interval in tracker responses\n\t* only keeps one outstanding duplicate request per peer\n\t  reduces waste download, specifically when streaming\n\t* added support for storing per-peer rate limits across reconnects\n\t* improved fallocate support\n\t* fixed magnet link issue when using resume data\n\t* support disk I/O priority settings\n\t* added info_hash to torrent_deleted_alert\n\t* improved LSD performance and made the interval configurable\n\t* improved UDP tracker support by caching connect tokens\n\t* fast piece optimization\n\nrelease 0.14.10\n\n\t* fixed udp tracker race condition\n\t* added support for torrents with odd piece sizes\n\t* fixed issue with disk read cache not being cleared when removing torrents\n\t* made the DHT socket bind to the same interface as the session\n\t* fixed issue where an http proxy would not be used on redirects\n\t* Solaris build fixes\n\t* disabled buggy disconnect_peers feature\n\nrelease 0.14.9\n\n\t* disabled feature to drop requests after having been skipped too many times\n\t* fixed range request bug for files larger than 2 GB in web seeds\n\t* don't crash when trying to create torrents with 0 files\n\t* fixed big_number __init__ in python bindings\n\t* fixed optimistic unchoke timer\n\t* fixed bug where torrents with incorrectly formatted web seed URLs would be\n\t  connected multiple times\n\t* fixed MinGW support\n\t* fixed DHT bootstrapping issue\n\t* fixed UDP over SOCKS5 issue\n\t* added support for \"corrupt\" tracker announce\n\t* made end-game mode less aggressive\n\nrelease 0.14.8\n\n\t* ignore unknown metadata messages\n\t* fixed typo that would sometimes prevent queued torrents to be checked\n\t* fixed bug in auto-manager where active_downloads and active_seeds would\n\t  sometimes be used incorrectly\n\t* force_recheck() no longer crashes on torrents with no metadata\n\t* fixed broadcast socket regression from 0.14.7\n\t* fixed hang in NATPMP when shut down while waiting for a response\n\t* fixed some more error handling in bdecode\n\nrelease 0.14.7\n\n\t* fixed deadlock in natpmp\n\t* resume data alerts are always posted, regardless of alert mask\n\t* added wait_for_alert to python binding\n\t* improved invalid filename character replacement\n\t* improved forward compatibility in DHT\n\t* added set_piece_hashes that takes a callback to the python binding\n\t* fixed division by zero in get_peer_info()\n\t* fixed bug where pieces may have been requested before the metadata\n\t  was received\n\t* fixed incorrect error when deleting files from a torrent where\n\t  not all files have been created\n\t* announces torrents immediately to the DHT when it's started\n\t* fixed bug in add_files that would fail to recurse if the path\n\t  ended with a /\n\t* fixed bug in error handling when parsing torrent files\n\t* fixed file checking bug when renaming a file before checking the torrent\n\t* fixed race condition when receiving metadata from swarm\n\t* fixed assert in ut_metadata plugin\n\t* back-ported some fixes for building with no exceptions\n\t* fixed create_torrent when passing in a path ending with /\n\t* fixed move_storage when source doesn't exist\n\t* fixed DHT state save bug for node-id\n\t* fixed typo in python binding session_status struct\n\t* broadcast sockets now join every network interface (used for UPnP and\n\t  local peer discovery)\n\nrelease 0.14.6\n\n\t* various missing include fixes to be buildable with boost 1.40\n\t* added missing functions to python binding related to torrent creation\n\t* fixed to add filename on web seed urls that lack it\n\t* fixed BOOST_ASIO_HASH_MAP_BUCKETS define for boost 1.39\n\t* fixed checking of fast and suggest messages when used with magnet links\n\t* fixed bug where web seeds would not disconnect if being resolved when\n\t  the torrent was paused\n\t* fixed download piece performance bug in piece picker\n\t* fixed bug in connect candidate counter\n\t* replaces invalid filename characters with .\n\t* added --with-libgeoip option to configure script to allow building and\n\t  linking against system wide library\n\t* fixed potential pure virtual function call in extensions on shutdown\n\t* fixed disk buffer leak in smart_ban extension\n\nrelease 0.14.5\n\n\t* fixed bug when handling malformed webseed urls and an http proxy\n\t* fixed bug when setting unlimited upload or download rates for torrents\n\t* fix to make torrent_status::list_peers more accurate.\n\t* fixed memory leak in disk io thread when not using the cache\n\t* fixed bug in connect candidate counter\n\t* allow 0 upload slots\n\t* fixed bug in rename_file(). The new name would not always be saved in\n\t  the resume data\n\t* fixed resume data compatibility with 0.13\n\t* fixed rare piece-picker bug\n\t* fixed bug where one allowed-fast message would be sent even when\n\t  disabled\n\t* fixed race condition in UPnP which could lead to crash\n\t* fixed inversed seed_time ratio logic\n\t* added get_ip_filter() to session\n\nrelease 0.14.4\n\n\t* connect candidate calculation fix\n\t* tightened up disk cache memory usage\n\t* fixed magnet link parser to accept hex-encoded info-hashes\n\t* fixed inverted logic when picking which peers to connect to\n\t  (should mean a slight performance improvement)\n\t* fixed a bug where a failed rename_file() would leave the storage\n\t  in an error state which would pause the torrent\n\t* fixed case when move_storage() would fail. Added a new alert\n\t  to be posted when it does\n\t* fixed crash bug when shutting down while checking a torrent\n\t* fixed handling of web seed urls that didn't end with a\n\t  slash for multi-file torrents\n\t* lowered the default connection speed to 10 connection attempts\n\t  per second\n\t* optimized memory usage when checking files fails\n\t* fixed bug when checking a torrent twice\n\t* improved handling of out-of-memory conditions in disk I/O thread\n\t* fixed bug when force-checking a torrent with partial pieces\n\t* fixed memory leak in disk cache\n\t* fixed torrent file path vulnerability\n\t* fixed upnp\n\t* fixed bug when dealing with clients that drop requests (i.e. BitComet)\n\t  fixes assert as well\n\nrelease 0.14.3\n\n\t* added python binding for create_torrent\n\t* fixed boost-1.38 build\n\t* fixed bug where web seeds would be connected before the files\n\t  were checked\n\t* fixed filename bug when using wide characters\n\t* fixed rare crash in peer banning code\n\t* fixed potential HTTP compatibility issue\n\t* fixed UPnP crash\n\t* fixed UPnP issue where the control url contained the base url\n\t* fixed a replace_trackers bug\n\t* fixed bug where the DHT port mapping would not be removed when\n\t  changing DHT port\n\t* fixed move_storage bug when files were renamed to be moved out\n\t  of the root directory\n\t* added error handling for set_piece_hashes\n\t* fixed missing include in enum_if.cpp\n\t* fixed dual IP stack issue\n\t* fixed issue where renamed files were sometimes not saved in resume data\n\t* accepts tracker responses with no 'peers' field, as long as 'peers6'\n\t  is present\n\t* fixed CIDR-distance calculation in the presence of IPv6 peers\n\t* save partial resume data for torrents that are queued for checking\n\t  or checking, to maintain stats and renamed files\n\t* Don't try IPv6 on windows if it's not installed\n\t* move_storage fix\n\t* fixed potential crash on shutdown\n\t* fixed leaking exception from bdecode on malformed input\n\t* fixed bug where connection would hang when receiving a keepalive\n\t* fixed bug where an asio exception could be thrown when resolving\n\t  peer countries\n\t* fixed crash when shutting down while checking a torrent\n\t* fixed potential crash in connection_queue when a peer_connection\n\t  fail to open its socket\n\nrelease 0.14.2\n\n\t* added missing functions to the python bindings torrent_info::map_file,\n\t  torrent_info::map_block and torrent_info::file_at_offset.\n\t* removed support for boost-1.33 and earlier (probably didn't work)\n\t* fixed potential freezes issues at shutdown\n\t* improved error message for python setup script\n\t* fixed bug when torrent file included announce-list, but no valid\n\t  tracker urls\n\t* fixed bug where the files requested from web seeds would be the\n\t  renamed file names instead of the original file names in the torrent.\n\t* documentation fix of queueing section\n\t* fixed potential issue in udp_socket (affected udp tracker support)\n\t* made name, comment and created by also be subject to utf-8 error\n\t  correction (filenames already were)\n\t* fixed dead-lock when settings DHT proxy\n\t* added missing export directives to lazy_entry\n\t* fixed disk cache expiry settings bug (if changed, it would be set\n\t  to the cache size)\n\t* fixed bug in http_connection when binding to a particular IP\n\t* fixed typo in python binding (torrent_handle::piece_prioritize should\n\t  be torrent_handle::piece_priorities)\n\t* fixed race condition when saving DHT state\n\t* fixed bugs related to lexical_cast being locale dependent\n\t* added support for SunPro C++ compiler\n\t* fixed bug where messages sometimes could be encrypted in the\n\t  wrong order, for encrypted connections.\n\t* fixed race condition where torrents could get stuck waiting to\n\t  get checked\n\t* fixed mapped files bug where it wouldn't be properly restored\n\t  from resume data properly\n\t* removed locale dependency in xml parser (caused asserts on windows)\n\t* fixed bug when talking to https 1.0 servers\n\t* fixed UPnP bug that could cause stack overflow\n\nrelease 0.14.1\n\n\t* added converter for python unicode strings to utf-8 paths\n\t* fixed bug in http downloader where the host field did not\n\t  include the port number\n\t* fixed headers to not depend on NDEBUG, which would prohibit\n\t  linking a release build of libtorrent against a debug application\n\t* fixed bug in disk I/O thread that would make the thread\n\t  sometimes quit when an error occurred\n\t* fixed DHT bug\n\t* fixed potential shutdown crash in disk_io_thread\n\t* fixed usage of deprecated boost.filesystem functions\n\t* fixed http_connection unit test\n\t* fixed bug in DHT when a DHT state was loaded\n\t* made rate limiter change in 0.14 optional (to take estimated\n\t  TCP/IP overhead into account)\n\t* made the python plugin buildable through the makefile\n\t* fixed UPnP bug when url base ended with a slash and\n\t  path started with a slash\n\t* fixed various potentially leaking exceptions\n\t* fixed problem with removing torrents that are checking\n\t* fixed documentation bug regarding save_resume_data()\n\t* added missing documentation on torrent creation\n\t* fixed bugs in python client examples\n\t* fixed missing dependency in package-config file\n\t* fixed shared geoip linking in Jamfile\n\t* fixed python bindings build on windows and made it possible\n\t  to generate a windows installer\n\t* fixed bug in NAT-PMP implementation\n\nrelease 0.14\n\n\t* deprecated add_torrent() in favor of a new add_torrent()\n\t  that takes a struct with parameters instead. Torrents\n\t  are paused and auto managed by default.\n\t* removed 'connecting_to_tracker' torrent state. This changes\n\t  the enum values for the other states.\n\t* Improved seeding and choking behavior.\n\t* Fixed rare buffer overrun bug when calling get_download_queue\n\t* Fixed rare bug where torrent could be put back into downloading\n\t  state even though it was finished, after checking files.\n\t* Fixed rename_file to work before the file on disk has been\n\t  created.\n\t* Fixed bug in tracker connections in case of errors caused\n\t  in the connection constructor.\n\t* Updated alert system to be filtered by category instead of\n\t  severity level. Alerts can generate a message through\n\t  alert::message().\n\t* Session constructor will now start dht, upnp, natpmp, lsd by\n\t  default. Flags can be passed in to the constructor to not\n\t  do this, if these features are to be enabled and disabled\n\t  at a later point.\n\t* Removed 'connecting_to_tracker' torrent state\n\t* Fix bug where FAST pieces were cancelled on choke\n\t* Fixed problems with restoring piece states when hash failed.\n\t* Minimum peer reconnect time fix. Peers with no failures would\n\t  reconnect immediately.\n\t* Improved web seed error handling\n\t* DHT announce fixes and off-by-one loop fix\n\t* Fixed UPnP xml parse bug where it would ignore the port number\n\t  for the control url.\n\t* Fixed bug in torrent writer where the private flag was added\n\t  outside of the info dictionary\n\t* Made the torrent file parser less strict of what goes in the\n\t  announce-list entry\n\t* Fixed type overflow bug where some statistics was incorrectly\n\t  reported for file larger than 2 GB\n\t* boost-1.35 support\n\t* Fixed bug in statistics from web server peers where it sometimes\n\t  could report too many bytes downloaded.\n\t* Fixed bug where statistics from the last second was lost when\n\t  disconnecting a peer.\n\t* receive buffer optimizations (memcpy savings and memory savings)\n\t* Support for specifying the TOS byte for peer traffic.\n\t* Basic support for queueing of torrents.\n\t* Better bias to give connections to downloading torrents\n\t  with fewer peers.\n\t* Optimized resource usage (removed the checking thread)\n\t* Support to bind outgoing connections to specific ports\n\t* Disk cache support.\n\t* New, more memory efficient, piece picker with sequential download\n\t  support (instead of the more complicated sequential download threshold).\n\t* Auto Upload slots. Automatically opens up more slots if\n\t  upload limit is not met.\n\t* Improved NAT-PMP support by querying the default gateway\n\t* Improved UPnP support by ignoring routers not on the clients subnet.\n\nrelease 0.13\n\n\t* Added scrape support\n\t* Added add_extension() to torrent_handle. Can instantiate\n\t  extensions for torrents while downloading\n\t* Added support for remove_torrent to delete the files as well\n\t* Fixed issue with failing async_accept on windows\n\t* DHT improvements, proper error messages are now returned when\n\t  nodes sends bad packets\n\t* Optimized the country table used to resolve country of peers\n\t* Copying optimization for sending data. Data is no longer copied from\n\t  the disk I/O buffer to the send buffer.\n\t* Buffer optimization to use a raw buffer instead of std::vector<char>\n\t* Improved file storage to use sparse files\n\t* Updated python bindings\n\t* Added more clients to the identifiable clients list.\n\t* Torrents can now be started in paused state (to better support queuing)\n\t* Improved IPv6 support (support for IPv6 extension to trackers and\n\t  listens on both IPv6 and IPv4 interfaces).\n\t* Improved asserts used. Generates a stacktrace on linux\n\t* Piece picker optimizations and improvements\n\t* Improved unchoker, connection limit and rate limiter\n\t* Support for FAST extension\n\t* Fixed invalid calculation in DHT node distance\n\t* Fixed bug in URL parser that failed to parse IPv6 addresses\n\t* added peer download rate approximation\n\t* added port filter for outgoing connection (to prevent\n\t  triggering firewalls)\n\t* made most parameters configurable via session_settings\n\t* added encryption support\n\t* added parole mode for peers whose data fails the hash check.\n\t* optimized heap usage in piece-picker and web seed downloader.\n\t* fixed bug in DHT where older write tokens weren't accepted.\n\t* added support for sparse files.\n\t* introduced speed categories for peers and pieces, to separate\n\t  slow and fast peers.\n\t* added a half-open tcp connection limit that takes all connections\n\t  in to account, not just peer connections.\n\t* added alerts for filtered IPs.\n\t* added support for SOCKS4 and 5 proxies and HTTP CONNECT proxies.\n\t* fixed proper distributed copies calculation.\n\t* added option to use openssl for sha-1 calculations.\n\t* optimized the piece picker in the case where a peer is a seed.\n\t* added support for local peer discovery\n\t* removed the dependency on the compiled boost.date_time library\n\t* deprecated torrent_info::print()\n\t* added UPnP support\n\t* fixed problem where peer interested flags were not updated correctly\n\t  when pieces were filtered\n\t* improvements to ut_pex messages, including support for seed flag\n\t* prioritizes upload bandwidth to peers that might send back data\n\t* the following functions have been deprecated:\n\t  \tvoid torrent_handle::filter_piece(int index, bool filter) const;\n\t  \tvoid torrent_handle::filter_pieces(std::vector<bool> const& pieces) const;\n\t  \tbool torrent_handle::is_piece_filtered(int index) const;\n\t  \tstd::vector<bool> torrent_handle::filtered_pieces() const;\n\t  \tvoid torrent_handle::filter_files(std::vector<bool> const& files) const;\n\n\t  instead, use the piece_priority functions.\n\n\t* added support for NAT-PMP\n\t* added support for piece priorities. Piece filtering is now set as\n\t  a priority\n\t* Fixed crash when last piece was smaller than one block and reading\n\t  fastresume data for that piece\n\t* Makefiles should do a better job detecting boost\n\t* Fixed crash when all tracker urls are removed\n\t* Log files can now be created at user supplied path\n\t* Log files failing to create is no longer fatal\n\t* Fixed dead-lock in torrent_handle\n\t* Made it build with boost 1.34 on windows\n\t* Fixed bug in URL parser that failed to parse IPv6 addresses\n\t* Fixed bug in DHT, related to IPv6 nodes\n\t* DHT accepts transaction IDs that have garbage appended to them\n\t* DHT logs messages that it fails to decode\n\nrelease 0.12\n\n\t* fixes to make the DHT more compatible\n\t* http seed improvements including error reporting and url encoding issues.\n\t* fixed bug where directories would be left behind when moving storage\n\t  in some cases.\n\t* fixed crashing bug when restarting or stopping the DHT.\n\t* added python binding, using boost.python\n\t* improved character conversion on windows when strings are not utf-8.\n\t* metadata extension now respects the private flag in the torrent.\n\t* made the DHT to only be used as a fallback to trackers by default.\n\t* added support for HTTP redirection support for web seeds.\n\t* fixed race condition when accessing a torrent that was checking its\n\t  fast resume data.\n\t* fixed a bug in the DHT which could be triggered if the network was\n\t  dropped or extremely rare cases.\n\t* if the download rate is limited, web seeds will now only use left-over\n\t  bandwidth after all bt peers have used up as much bandwidth as they can.\n\t* added the possibility to have libtorrent resolve the countries of\n\t  the peers in torrents.\n\t* improved the bandwidth limiter (it now implements a leaky bucket/node bucket).\n\t* improved the HTTP seed downloader to report accurate progress.\n\t* added more client peer-id signatures to be recognized.\n\t* added support for HTTP servers that skip the CR before the NL at line breaks.\n\t* fixed bug in the HTTP code that only accepted headers case sensitive.\n\t* fixed bug where one of the session constructors didn't initialize boost.filesystem.\n\t* fixed bug when the initial checking of a torrent fails with an exception.\n\t* fixed bug in DHT code which would send incorrect announce messages.\n\t* fixed bug where the http header parser was case sensitive to the header\n\t  names.\n\t* Implemented an optimization which frees the piece_picker once a torrent\n\t  turns into a seed.\n\t* Added support for uT peer exchange extension, implemented by Massaroddel.\n\t* Modified the quota management to offer better bandwidth balancing\n\t  between peers.\n\t* logging now supports multiple sessions (different sessions now log\n\t  to different directories).\n\t* fixed random number generator seed problem, generating the same\n\t  peer-id for sessions constructed the same second.\n\t* added an option to accept multiple connections from the same IP.\n\t* improved tracker logging.\n\t* moved the file_pool into session. The number of open files is now\n\t  limited per session.\n\t* fixed uninitialized private flag in torrent_info\n\t* fixed long standing issue with file.cpp on windows. Replaced the low level\n\t  io functions used on windows.\n\t* made it possible to associate a name with torrents without metadata.\n\t* improved http-downloading performance by requesting entire pieces via\n\t  http.\n\t* added plugin interface for extensions. And changed the interface for\n\t  enabling extensions.\n\nrelease 0.11\n\n\t* added support for incorrectly encoded paths in torrent files\n\t  (assumes Latin-1 encoding and converts to UTF-8).\n\t* added support for destructing session objects asynchronously.\n\t* fixed bug with file_progress() with files = 0 bytes\n\t* fixed a race condition bug in udp_tracker_connection that could\n\t  cause a crash.\n\t* fixed bug occurring when increasing the sequenced download threshold\n\t  with max availability lower than previous threshold.\n\t* fixed an integer overflow bug occurring when built with gcc 4.1.x\n\t* fixed crasing bug when closing while checking a torrent\n\t* fixed bug causing a crash with a torrent with piece length 0\n\t* added an extension to the DHT network protocol to support the\n\t  exchange of nodes with IPv6 addresses.\n\t* modified the ip_filter api slightly to support IPv6\n\t* modified the api slightly to make sequenced download threshold\n\t  a per torrent-setting.\n\t* changed the address type to support IPv6\n\t* fixed bug in piece picker which would not behave as\n\t  expected with regard to sequenced download threshold.\n\t* fixed bug with file_progress() with files > 2 GB.\n\t* added --enable-examples option to configure script.\n\t* fixed problem with the resource distribution algorithm\n\t  (controlling e.g upload/download rates).\n\t* fixed incorrect asserts in storage related to torrents with\n\t  zero-sized files.\n\t* added support for trackerless torrents (with kademlia DHT).\n\t* support for torrents with the private flag set.\n\t* support for torrents containing bootstrap nodes for the\n\t  DHT network.\n\t* fixed problem with the configure script on FreeBSD.\n\t* limits the pipelining used on url-seeds.\n\t* fixed problem where the shutdown always would delay for\n\t  session_settings::stop_tracker_timeout seconds.\n\t* session::listen_on() won't reopen the socket in case the port and\n\t  interface is the same as the one currently in use.\n\t* added http proxy support for web seeds.\n\t* fixed problem where upload and download stats could become incorrect\n\t  in case of high cpu load.\n\t* added more clients to the identifiable list.\n\t* fixed fingerprint parser to cope with latest Mainline versions.\n\nrelease 0.10\n\n\t* fixed a bug where the requested number of peers in a tracker request could\n\t  be too big.\n\t* fixed a bug where empty files were not created in full allocation mode.\n\t* fixed a bug in storage that would, in rare cases, fail to do a\n\t  complete check.\n\t* exposed more settings for tweaking parameters in the piece-picker,\n\t  downloader and uploader (http_settings replaced by session_settings).\n\t* tweaked default settings to improve high bandwidth transfers.\n\t* improved the piece picker performance and made it possible to download\n\t  popular pieces in sequence to improve disk performance.\n\t* added the possibility to control upload and download limits per peer.\n\t* fixed problem with re-requesting skipped pieces when peer was sending pieces\n\t  out of fifo-order.\n\t* added support for http seeding (the GetRight protocol)\n\t* renamed identifiers called 'id' in the public interface to support linking\n\t  with Objective.C++\n\t* changed the extensions protocol to use the new one, which is also\n\t  implemented by uTorrent.\n\t* factorized the peer_connection and added web_peer_connection which is\n\t  able to download from http-sources.\n\t* converted the network code to use asio (resulted in slight api changes\n\t  dealing with network addresses).\n\t* made libtorrent build in vc7 (patches from Allen Zhao)\n\t* fixed bug caused when binding outgoing connections to a non-local interface.\n\t* add_torrent() will now throw if called while the session object is\n\t  being closed.\n\t* added the ability to limit the number of simultaneous half-open\n\t  TCP connections. Flags in peer_info has been added.\n\nrelease 0.9.1\n\n\t* made the session disable file name checks within the boost.filesystem library\n\t* fixed race condition in the sockets\n\t* strings that are invalid utf-8 strings are now decoded with the\n\t  local codepage on windows\n\t* added the ability to build libtorrent both as a shared library\n\t* client_test can now monitor a directory for torrent files and automatically\n\t  start and stop downloads while running\n\t* fixed problem with file_size() when building on windows with unicode support\n\t* added a new torrent state, allocating\n\t* added a new alert, metadata_failed_alert\n\t* changed the interface to session::add_torrent for some speed optimizations.\n\t* greatly improved the command line control of the example client_test.\n\t* fixed bug where upload rate limit was not being applied.\n\t* files that are being checked will no longer stall files that don't need\n\t  checking.\n\t* changed the way libtorrent identifies support for its excentions\n\t  to look for 'ext' at the end of the peer-id.\n\t* improved performance by adding a circle buffer for the send buffer.\n\t* fixed bugs in the http tracker connection when using an http proxy.\n\t* fixed problem with storage's file pool when creating torrents and then\n\t  starting to seed them.\n\t* hard limit on remote request queue and timeout on requests (a timeout\n\t  triggers rerequests). This makes libtorrent work much better with\n\t  \"broken\" clients like BitComet which may ignore requests.\n\nInitial release 0.9\n\n\t* multitracker support\n\t* serves multiple torrents on a single port and a single thread\n\t* supports http proxies and proxy authentication\n\t* gzipped tracker-responses\n\t* block level piece picker\n\t* queues torrents for file check, instead of checking all of them in parallel\n\t* uses separate threads for checking files and for main downloader\n\t* upload and download rate limits\n\t* piece-wise, unordered, incremental file allocation\n\t* fast resume support\n\t* supports files > 2 gigabytes\n\t* supports the no_peer_id=1 extension\n\t* support for udp-tracker protocol\n\t* number of connections limit\n\t* delays sending have messages\n\t* can resume pieces downloaded in any order\n\t* adjusts the length of the request queue depending on download rate\n\t* supports compact=1\n\t* selective downloading\n\t* ip filter\n\n"
        },
        {
          "name": "Jamfile",
          "type": "blob",
          "size": 31.7998046875,
          "content": "# This Jamfile requires boost-build v2 to build.\n# The version shipped with boost 1.34.0\n\nimport modules ;\nimport path ;\nimport os ;\nimport errors ;\nimport feature : feature ;\nimport package ;\nimport virtual-target ;\nimport cast ;\n\n# we need version numbers in the form X.Y.Z in order to trigger the built-in\n# support for generating symlinks to the installed library\nVERSION = 2.0.11 ;\n\nBOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;\nCXXFLAGS = [ modules.peek : CXXFLAGS ] ;\nLDFLAGS = [ modules.peek : LDFLAGS ] ;\n\nECHO \"CXXFLAGS =\" $(CXXFLAGS) ;\nECHO \"LDFLAGS =\" $(LDFLAGS) ;\nECHO \"OS =\" [ os.name ] ;\n\njam-version = [ modules.peek : JAM_VERSION ] ;\n\nif $(BOOST_ROOT)\n{\n\tECHO \"building boost from source directory: \" $(BOOST_ROOT) ;\n\n\tuse-project /boost : $(BOOST_ROOT) ;\n\talias boost_system : /boost/system//boost_system : : : <include>$(BOOST_ROOT) ;\n}\nelse\n{\n\tlocal boost-lib-search-path =\n\t\t<search>/usr/local/opt/boost/lib\n\t\t<search>/opt/homebrew/lib\n\t\t;\n\n\tlocal boost-include-path =\n\t\t<include>/usr/local/opt/boost/include\n\t\t<include>/opt/homebrew/include\n\t;\n\n\t# the names are decorated in MacPorts.\n\tlib boost_system : : <target-os>darwin <name>boost_system-mt $(boost-lib-search-path)\n\t\t: : $(boost-include-path) ;\n\n\tlib boost_system : : <name>boost_system ;\n}\n\nuse-project /try_signal : ./deps/try_signal ;\n\nrule linking ( properties * )\n{\n\tlocal result ;\n\tif <simulator>on in $(properties)\n\t{\n\t\tresult += <library>/libsimulator//simulator ;\n\t}\n\n\tif <target-os>windows in $(properties)\n\t\t&& ( <asserts>on in $(properties)\n\t\t\t|| <asserts>production in $(properties)\n\t\t\t|| <asio-debugging>on in $(properties) )\n\t{\n\t\tresult += <library>dbghelp ;\n\t}\n\n\tif <target-os>windows in $(properties)\n\t{\n\t\tswitch [ feature.get-values <windows-version> : $(properties) ]\n\t\t{\n\t\t\tcase xp : result += <define>_WIN32_WINNT=0x0501 ;\n\t\t\tcase vista : result += <define>_WIN32_WINNT=0x0600 ;\n\t\t\tcase win7 : result += <define>_WIN32_WINNT=0x0601 ;\n\t\t\tcase win10 : result += <define>_WIN32_WINNT=0x0A00 ;\n\t\t}\n\t}\n\n\t# gcrypt libraries, if enabled\n\tif <crypto>gcrypt in $(properties)\n\t{\n\t\tresult += <library>gcrypt ;\n\t}\n\telse if <crypto>openssl in $(properties)\n\t{\n\t\tresult += <library>ssl ;\n\t\tresult += <library>crypto ;\n\t\tif <target-os>linux in $(properties)\n\t\t{\n\t\t\tresult += <library>dl ;\n\t\t}\n\t}\n\telse if <crypto>gnutls in $(properties)\n\t{\n\t\tresult += <library>./deps/asio-gnutls//asio-gnutls ;\n\t\tresult += <library>gnutls/<link>shared ;\n\t}\n\telse if <crypto>libcrypto in $(properties)\n\t{\n\t\tresult += <library>crypto ;\n\t\tif <target-os>linux in $(properties)\n\t\t{\n\t\t\tresult += <library>dl ;\n\t\t}\n\t}\n\telse if <crypto>wolfssl in $(properties)\n\t{\n\t\tresult += <library>wolfssl ;\n\t}\n\n\tif <target-os>windows in $(properties)\n\t\t|| <target-os>cygwin in $(properties)\n\t{\n\t\t# socket functions on windows require winsock libraries\n\t\tresult += <library>ws2_32\n\t\t\t<library>wsock32\n\t\t\t<library>iphlpapi\n\t\t\t<define>WIN32_LEAN_AND_MEAN\n\t\t\t<define>__USE_W32_SOCKETS\n\t\t\t<define>WIN32\n\t\t\t<define>_WIN32\n\t\t;\n\n\t\t# when DHT is enabled, we need ed25519 which in turn\n\t\t# needs entropy\n\t\tif ! <dht>off in $(properties)\n\t\t{\n\t\t\tresult += <library>advapi32 ;\n\t\t}\n\n\t\t# windows xp has no CNG\n\t\tif ! <windows-version>xp in $(properties)\n\t\t{\n\t\t\tresult += <library>bcrypt ;\n\t\t}\n\t}\n\n\tif <target-os>android in $(properties)\n\t{\n\t\tresult += <library>dl ;\n\t}\n\n\tif <target-os>beos in $(properties)\n\t{\n\t\tresult += <library>netkit <library>gcc ;\n\t}\n\n\tif <target-os>haiku in $(properties)\n\t{\n\t\tresult += <library>libnetwork <library>gcc ;\n\t}\n\n\n\tif <target-os>solaris in $(properties)\n\t{\n\t\tresult += <library>libsocket <library>libnsl ;\n\t}\n\n\tif <target-os>darwin in $(properties)\n\t\t|| <target-os>iphone in $(properties)\n\t{\n\t\t# for ip_notifier\n\t\tresult += <framework>CoreFoundation <framework>SystemConfiguration ;\n\t}\n\n\tif <target-os>iphone in $(properties)\n\t{\n\t\t# boost.asio seems to mis-detect iOS as supporting the __thread\n\t\t# keyword, resulting in the error:\n\t\t# error: thread-local storage is not supported for the current target\n\t\tresult += <define>BOOST_ASIO_DISABLE_THREAD_KEYWORD_EXTENSION ;\n\t}\n\n\tif <toolset>gcc in $(properties)\n\t\t&& <target-os>linux in $(properties)\n\t\t&& ( <asserts>on in $(properties)\n\t\t\t|| <asserts>production in $(properties)\n\t\t\t|| <asio-debugging>on in $(properties) )\n\t{\n\t\t# for backtraces in assertion failures\n\t\t# which only works on ELF targets with gcc\n\t\tresult += <linkflags>-Wl,--export-dynamic <linkflags>-rdynamic ;\n\t}\n\telse if [ version.version-less $(jam-version) : 1990 0 ]\n\t{\n\t\t# the visibility feature was introduced in boost-1.69. This was close to\n\t\t# when the versioning scheme changed from year to (low) version numbers.\n\t\t# in boost-1.70\n\t\tresult += <visibility>hidden ;\n\t}\n\n\tif <boost-link>static in $(properties)\n\t{\n\t\tif <link>shared in $(properties)\n\t\t{\n\t\t\t# if libtorrent is being built as a shared library\n\t\t\t# but we're linking against boost statically, we still\n\t\t\t# need to make boost think it's being built as a shared\n\t\t\t# library, so that it properly exports its symbols\n\t\t\tresult += <define>BOOST_ALL_DYN_LINK ;\n\t\t\tresult += <library>boost_system/<link>static/<define>BOOST_ALL_DYN_LINK ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += <library>boost_system/<link>static ;\n\t\t}\n\n\t\tif <toolset>gcc in $(properties)\n\t\t\t&& ! <target-os>windows in $(properties)\n\t\t\t&& <link>shared in $(properties)\n\t\t{\n\t\t\tresult += <fpic>on ;\n\t\t}\n\n\t}\n\telse if <boost-link>shared in $(properties)\n\t{\n\t\tresult += <library>boost_system/<link>shared ;\n\t}\n\telse\n\t{\n\t\tresult += <library>boost_system ;\n\t}\n\n\tif ! <target-os>windows in $(properties)\n\t{\n\t\t# MingW defines a macro called \"stat\" if this is set, which causes build\n\t\t# failures\n\t\tresult += <define>_FILE_OFFSET_BITS=64 ;\n\t}\n\n\tresult += <define>BOOST_ALL_NO_LIB\n\t\t<define>BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n\t\t<define>BOOST_SYSTEM_NO_DEPRECATED\n\t\t;\n\n\tif <link>shared in $(properties)\n\t{\n\t\tresult += <library>/try_signal//try_signal/<link>static/<fpic>on ;\n\t}\n\telse\n\t{\n\t\tresult += <library>/try_signal//try_signal/<link>static ;\n\t}\n\n\treturn $(result) ;\n}\n\nrule warnings ( properties * )\n{\n\tlocal result ;\n\n\tif <warnings>off in $(properties)\n\t{\n\t\treturn $(result) ;\n\t}\n\n\tif <toolset>clang in $(properties)\n\t\t|| <toolset>darwin in $(properties)\n\t{\n\t\tresult += <cxxflags>-Weverything ;\n\t\tresult += <cxxflags>-Wno-documentation ;\n\t\tresult += <cxxflags>-Wno-c++98-compat-pedantic ;\n\t\tresult += <cxxflags>-Wno-c++11-compat-pedantic ;\n\t\tresult += <cxxflags>-Wno-padded ;\n\t\tresult += <cxxflags>-Wno-alloca ;\n\t\tresult += <cxxflags>-Wno-global-constructors ;\n\t\tresult += <cxxflags>-Wno-poison-system-directories ;\n# this warns on any global static object, which are used for error_category\n# objects\n\t\tresult += <cxxflags>-Wno-exit-time-destructors ;\n\n# enable these warnings again, once the other ones are dealt with\n\t\tresult += <cxxflags>-Wno-weak-vtables ;\n\n\t\tresult += <cxxflags>-Wno-return-std-move-in-c++11 ;\n\t\tresult += <cxxflags>-Wno-unknown-warning-option ;\n\n# libtorrent uses alloca() carefully\n\t\tresult += <cxxflags>-Wno-alloca ;\n\n# these warnings should all be addressed. Either by transitioning to span and\n# array, or by suppressing the warning for specific code\n\t\tresult += <cxxflags>-Wno-unsafe-buffer-usage ;\n\t}\n\n\tif <toolset>gcc in $(properties)\n\t{\n\t\tresult += <cflags>-Wall ;\n\t\tresult += <cflags>-Wextra ;\n\t\tresult += <cflags>-Wpedantic ;\n\t\tresult += <cflags>-Wvla ;\n\t\tresult += <cflags>-Wno-format-zero-length ;\n\t\tresult += <cxxflags>-Wno-noexcept-type ;\n\t}\n\n\tif <toolset>msvc in $(properties)\n\t{\n\t\t# on msvc this resolves to /W4\n\t\tresult += <warnings>all ;\n\n# enable these warnings again, once the other ones are dealt with\n\n# disable warning C4251: 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\t\tresult += <cxxflags>/wd4251 ;\n# disable warning C4275: non DLL-interface classkey 'identifier' used as base for DLL-interface classkey 'identifier'\n\t\tresult += <cxxflags>/wd4275 ;\n# disable warning C4373: virtual function overrides, previous versions of the compiler did not override when parameters only differed by const/volatile qualifiers\n\t\tresult += <cxxflags>/wd4373 ;\n\t\t# C4268: 'identifier' : 'const' static/global data initialized\n\t\t#        with compiler generated default constructor fills the object with zeros\n\t\tresult += <cxxflags>/wd4268 ;\n\t\t# C4503: 'identifier': decorated name length exceeded, name was truncated\n\t\tresult += <cxxflags>/wd4503 ;\n\t}\n\n\treturn $(result) ;\n}\n\n# rule for adding the right source files\n# depending on target-os and features\nrule building ( properties * )\n{\n\tlocal result ;\n\n\tif ( <asserts>off in $(properties) &&\n\t\t! <invariant-checks>off in $(properties) )\n\t{\n\t\tECHO \"'invariant-check' requires enabled 'asserts' mode. (e.g. specify build params: invariant-check=on asserts=on)\" ;\n\t\tresult += <build>no ;\n\t}\n\n\tlocal CXXVER = [ feature.get-values <cxxstd> : $(properties) ] ;\n\tif ! $(CXXVER) || $(CXXVER) < 14\n\t{\n\t\tECHO \"libtorrent requires at least C++14. Specify cxxstd=14 or higher\" ;\n\t\tresult += <build>no ;\n\t}\n\n\tif <toolset>msvc in $(properties) || <toolset>intel-win in $(properties)\n\t{\n\t\t# allow larger .obj files (with more sections)\n\t\tresult += <cxxflags>/bigobj ;\n\n\t\t# https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=msvc-170\n\t\tresult += <cxxflags>/utf-8 ;\n\n\t\t# two-phase lookup is not supported by C++/CX on msvc, so it needs to be\n\t\t# disabled. We can't set permissive- in that case\n\t\tif ! <windows-api>store in $(properties)\n\t\t{\n\t\t\t# https://learn.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170\n\t\t\tresult += <cxxflags>/permissive- ;\n\t\t}\n\t}\n\n\tif <toolset>gcc in $(properties) && <target-os>windows in $(properties)\n\t{\n\t\t# allow larger .obj files (with more sections)\n\t\tresult += <cxxflags>-Wa,-mbig-obj ;\n\t}\n\n\tif ( <asserts>production in $(properties)\n\t\t|| <asserts>on in $(properties) )\n\t{\n\t\tresult += <source>src/assert.cpp ;\n\t}\n\n\tif <encryption>on in $(properties)\n\t{\n\t\tresult += <source>src/pe_crypto.cpp ;\n\t}\n\n\tif ( <toolset>darwin in $(properties)\n\t\t|| <toolset>gcc in $(properties)\n\t\t|| <toolset>clang in $(properties)\n\t\t|| <toolset>clang-darwin in $(properties) )\n\t\t# on GCC, enabling debugging in libstdc++\n\t\t# breaks the ABI and its ability to appear\n\t\t# in shared object interfaces, so when it's\n\t\t# enabled, just export everything (since we're)\n\t\t# probably not a production build anyway\n\t\t&& ! <debug-iterators>on in $(properties)\n\t{\n\t\tif ( <toolset>gcc in $(properties) )\n\t\t{\n\t\t\tresult += <linkflags>-Wl,-Bsymbolic ;\n\t\t}\n\t}\n\n\treturn $(result) ;\n}\n\nrule tag ( name : type ? : property-set )\n{\n\t# we only care about the names of our output static- or shared library, not\n\t# other targets like object files\n\tif $(type) != SHARED_LIB && $(type) != STATIC_LIB\n\t{\n\t\treturn [ virtual-target.add-prefix-and-suffix $(name) : $(type) : $(property-set) ] ;\n\t}\n\n\t# static libraries are not versioned\n\tif $(type) = STATIC_LIB\n\t{\n\t\treturn [ virtual-target.add-prefix-and-suffix $(name)-rasterbar : $(type) : $(property-set) ] ;\n\t}\n\n\t# shared libraries have the version number before the filename extension on\n\t# windows\n\tif [ $(property-set).get <target-os> ] in windows cygwin\n\t{\n\t\t# TODO: add version on windows too\n\t\t# return [ virtual-target.add-prefix-and-suffix $(name)-rasterbar-$(VERSION) : $(type) : $(property-set) ] ;\n\t\treturn [ virtual-target.add-prefix-and-suffix $(name)-rasterbar : $(type) : $(property-set) ] ;\n\t}\n\telse\n\t{\n\t\tlocal name = [ virtual-target.add-prefix-and-suffix $(name)-rasterbar : $(type) : $(property-set) ] ;\n\t\treturn $(name).$(VERSION) ;\n\t}\n}\n\n# the search path to pick up the openssl libraries from. This is the <search>\n# property of those libraries\nrule openssl-lib-path ( properties * )\n{\n\tlocal OPENSSL_LIB = [ feature.get-values <openssl-lib> : $(properties) ] ;\n\n\tif <target-os>darwin in $(properties) && $(OPENSSL_LIB) = \"\"\n\t{\n\t\t# on macOS, default to pick up openssl from the homebrew installation\n\t\t# brew install openssl\n\t\t# homebrew on M1 Macs install to /opt/homebrew\n\t\tOPENSSL_LIB = /opt/homebrew/opt/openssl/lib /usr/local/opt/openssl/lib ;\n\t}\n\telse if <target-os>windows in $(properties) && $(OPENSSL_LIB) = \"\"\n\t{\n\t\t# the de-facto windows installer is https://slproweb.com/products/Win32OpenSSL.html, which installs to c:\\Program Files\\OpenSSL-Win{32,64}.\n\t\t# chocolatey appears to use this installer.\n\t\tlocal address_model = [ feature.get-values <address-model> : $(properties) ] ;\n\t\tOPENSSL_LIB += \"C:/Program Files/OpenSSL-Win$(address_model)/lib\" ;\n\t\tOPENSSL_LIB += \"C:/Program Files (x86)/OpenSSL-Win$(address_model)/lib\" ;\n\t\tOPENSSL_LIB += \"C:/Program Files/OpenSSL/lib\" ;\n\t}\n\n\tlocal result ;\n\tresult += <search>$(OPENSSL_LIB) ;\n\treturn $(result) ;\n}\n\n# the include path to pick up openssl headers from. This is the\n# usage-requirement for the openssl-related libraries\nrule openssl-include-path ( properties * )\n{\n\tlocal OPENSSL_INCLUDE = [ feature.get-values <openssl-include> : $(properties) ] ;\n\n\tif <target-os>darwin in $(properties) && $(OPENSSL_INCLUDE) = \"\"\n\t{\n\t\t# on macOS, default to pick up openssl from the homebrew installation\n\t\t# brew install openssl\n\t\t# homebrew on M1 Macs install to /opt/homebrew\n\t\tOPENSSL_INCLUDE = /opt/homebrew/opt/openssl/include /usr/local/opt/openssl/include ;\n\t}\n\telse if <target-os>windows in $(properties) && $(OPENSSL_INCLUDE) = \"\"\n\t{\n\t\t# the de-facto windows installer is https://slproweb.com/products/Win32OpenSSL.html, which installs to c:\\Program Files\\OpenSSL-Win{32,64}.\n\t\t# chocolatey appears to use this installer.\n\t\tlocal address_model = [ feature.get-values <address-model> : $(properties) ] ;\n\t\tOPENSSL_INCLUDE += \"C:/Program Files/OpenSSL-Win$(address_model)/include\" ;\n\t\tOPENSSL_INCLUDE += \"C:/Program Files (x86)/OpenSSL-Win$(address_model)/include\" ;\n\t\tOPENSSL_INCLUDE += \"C:/Program Files/OpenSSL/include\" ;\n\t}\n\n\tlocal result ;\n\tresult += <include>$(OPENSSL_INCLUDE) ;\n\treturn $(result) ;\n}\n\n# the search path to pick up the gnutls libraries from. This is the <search>\n# property of those libraries\nrule gnutls-lib-path ( properties * )\n{\n\tlocal GNUTLS_LIB = [ feature.get-values <gnutls-lib> : $(properties) ] ;\n\n\tif <target-os>darwin in $(properties) && $(GNUTLS_LIB) = \"\"\n\t{\n\t\t# on macOS, default to pick up openssl from the homebrew installation\n\t\t# brew install openssl\n\t\t# homebrew on M1 Macs install to /opt/homebrew\n\t\tGNUTLS_LIB = /opt/homebrew/opt/gnutls/lib /usr/local/opt/gnutls/lib ;\n\t}\n\n\tlocal result ;\n\tresult += <search>$(GNUTLS_LIB) ;\n\treturn $(result) ;\n}\n\n# the include path to pick up gnutls headers from. This is the\n# usage-requirement for the gnutls-related libraries\nrule gnutls-include-path ( properties * )\n{\n\tlocal GNUTLS_INCLUDE = [ feature.get-values <gnutls-include> : $(properties) ] ;\n\n\tif <target-os>darwin in $(properties) && $(GNUTLS_INCLUDE) = \"\"\n\t{\n\t\t# on macOS, default to pick up openssl from the homebrew installation\n\t\t# brew install openssl\n\t\t# homebrew on M1 Macs install to /opt/homebrew\n\t\tGNUTLS_INCLUDE = /opt/homebrew/opt/gnutls/include /usr/local/opt/gnutls/include ;\n\t}\n\n\tlocal result ;\n\tresult += <include>$(GNUTLS_INCLUDE) ;\n\treturn $(result) ;\n}\n\n# the search path to pick up the wolfssl libraries from. This is the <search>\n# property of those libraries\nrule wolfssl-lib-path ( properties * )\n{\n\tlocal WOLFSSL_LIB = [ feature.get-values <wolfssl-lib> : $(properties) ] ;\n\n\tif <target-os>linux in $(properties) && $(WOLFSSL_LIB) = \"\"\n\t{\n\t\t# on linux, default ./configure install path\n\t\tWOLFSSL_LIB = /usr/local/lib ;\n\t}\n\n\tlocal result ;\n\tresult += <search>$(WOLFSSL_LIB) ;\n\treturn $(result) ;\n}\n\n# the include path to pick up wolfssl headers from. This is the\n# usage-requirement for the wolfssl-related libraries\nrule wolfssl-include-path ( properties * )\n{\n\tlocal WOLFSSL_INCLUDE = [ feature.get-values <wolfssl-include> : $(properties) ] ;\n\n\tif <target-os>linux in $(properties) && $(WOLFSSL_INCLUDE) = \"\"\n\t{\n\t\t# on linux, default ./configure install path\n\t\tWOLFSSL_INCLUDE = /usr/local/include ;\n\t}\n\n\tlocal result ;\n\tresult += <include>$(WOLFSSL_INCLUDE) ;\n\tresult += <include>$(WOLFSSL_INCLUDE)/wolfssl ;\n\treturn $(result) ;\n}\n\npath-constant blacklist-file : tools/sanitizer-blacklist.txt ;\n\nfeature openssl-lib : : free path ;\nfeature openssl-include : : free path ;\n\nfeature gnutls-lib : : free path ;\nfeature gnutls-include : : free path ;\n\nfeature wolfssl-lib : : free path ;\nfeature wolfssl-include : : free path ;\n\nfeature test-coverage : off on : composite propagated link-incompatible ;\nfeature.compose <test-coverage>on : <cxxflags>--coverage <linkflags>--coverage ;\n\nfeature predictive-pieces : on off : composite propagated ;\nfeature.compose <predictive-pieces>off : <define>TORRENT_DISABLE_PREDICTIVE_PIECES ;\n\nfeature share-mode : on off : composite propagated ;\nfeature.compose <share-mode>off : <define>TORRENT_DISABLE_SHARE_MODE ;\n\nfeature streaming : on off : composite propagated ;\nfeature.compose <streaming>off : <define>TORRENT_DISABLE_STREAMING ;\n\nfeature super-seeding : on off : composite propagated ;\nfeature.compose <super-seeding>off : <define>TORRENT_DISABLE_SUPERSEEDING ;\n\nfeature i2p : on off : composite propagated ;\nfeature.compose <i2p>on : <define>TORRENT_USE_I2P=1 ;\nfeature.compose <i2p>off : <define>TORRENT_USE_I2P=0 ;\n\nfeature asserts : off on production system : composite propagated ;\nfeature.compose <asserts>on : <define>TORRENT_USE_ASSERTS=1 ;\nfeature.compose <asserts>production : <define>TORRENT_USE_ASSERTS=1 <define>TORRENT_PRODUCTION_ASSERTS=1 ;\nfeature.compose <asserts>system : <define>TORRENT_USE_ASSERTS=1 <define>TORRENT_USE_SYSTEM_ASSERTS=1 ;\n\nfeature windows-version : win10 vista xp win7 : composite propagated ;\n\nfeature extensions : on off : composite propagated link-incompatible ;\nfeature.compose <extensions>off : <define>TORRENT_DISABLE_EXTENSIONS ;\n\nfeature asio-debugging : off on : composite propagated link-incompatible ;\nfeature.compose <asio-debugging>on : <define>TORRENT_ASIO_DEBUGGING ;\n\nfeature picker-debugging : off on : composite propagated link-incompatible ;\nfeature.compose <picker-debugging>on : <define>TORRENT_DEBUG_REFCOUNTS ;\n\nfeature mmap-disk-io : on off : composite propagated ;\nfeature.compose <mmap-disk-io>off : <define>TORRENT_HAVE_MMAP=0 <define>TORRENT_HAVE_MAP_VIEW_OF_FILE=0 ;\n\nfeature simulator : off on : composite propagated link-incompatible ;\nfeature.compose <simulator>on : <define>TORRENT_BUILD_SIMULATOR ;\n\nfeature invariant-checks : off on full : composite propagated link-incompatible ;\nfeature.compose <invariant-checks>on : <define>TORRENT_USE_INVARIANT_CHECKS=1 ;\nfeature.compose <invariant-checks>full : <define>TORRENT_USE_INVARIANT_CHECKS=1 <define>TORRENT_EXPENSIVE_INVARIANT_CHECKS ;\n\nfeature utp-log : off on : composite propagated link-incompatible ;\nfeature.compose <utp-log>on : <define>TORRENT_UTP_LOG_ENABLE ;\n\nfeature simulate-slow-read : off on : composite propagated ;\nfeature.compose <simulate-slow-read>on : <define>TORRENT_SIMULATE_SLOW_READ ;\n\nfeature simulate-slow-write : off on : composite propagated ;\nfeature.compose <simulate-slow-write>on : <define>TORRENT_SIMULATE_SLOW_WRITE ;\n\nfeature logging : on off : composite propagated link-incompatible ;\nfeature.compose <logging>off : <define>TORRENT_DISABLE_LOGGING ;\n\nfeature alert-msg : on off : composite propagated link-incompatible ;\nfeature.compose <alert-msg>off : <define>TORRENT_DISABLE_ALERT_MSG ;\n\nfeature dht : on off : composite propagated link-incompatible ;\nfeature.compose <dht>off : <define>TORRENT_DISABLE_DHT ;\n\nfeature encryption : on off : composite propagated link-incompatible ;\nfeature.compose <encryption>off : <define>TORRENT_DISABLE_ENCRYPTION ;\n\nfeature mutable-torrents : on off : composite propagated link-incompatible ;\nfeature.compose <mutable-torrents>off : <define>TORRENT_DISABLE_MUTABLE_TORRENTS ;\n\nfeature crypto : openssl built-in wolfssl gnutls libcrypto gcrypt : composite propagated ;\nfeature.compose <crypto>openssl\n\t: <define>TORRENT_USE_LIBCRYPTO\n\t<define>TORRENT_USE_OPENSSL\n\t<define>TORRENT_SSL_PEERS\n\t<define>OPENSSL_NO_SSL2 ;\nfeature.compose <crypto>wolfssl\n\t: <define>TORRENT_USE_WOLFSSL\n\t<define>TORRENT_USE_LIBCRYPTO\n\t<define>TORRENT_USE_OPENSSL\n\t<define>OPENSSL_NO_SSL2\n\t<define>BOOST_ASIO_USE_WOLFSSL\n\t<define>OPENSSL_ALL\n\t<define>WOLFSSL_SHA512\n\t<define>WOLFSSL_NGINX\n\t<define>WC_NO_HARDEN ;\nfeature.compose <crypto>gnutls\n\t: <define>TORRENT_USE_GNUTLS\n\t<define>TORRENT_SSL_PEERS ;\nfeature.compose <crypto>libcrypto : <define>TORRENT_USE_LIBCRYPTO ;\nfeature.compose <crypto>gcrypt : <define>TORRENT_USE_LIBGCRYPT ;\n\nfeature openssl-version : 1.1 pre1.1 : composite propagated ;\n\nfeature deprecated-functions : on off : composite propagated link-incompatible ;\nfeature.compose <deprecated-functions>off : <define>TORRENT_NO_DEPRECATE ;\n\nfeature boost-link : default static shared : propagated composite ;\n\n# msvc enables debug iterators by default in debug builds whereas GCC and\n# clang do not, that's why \"default\" is there. msvc has incorrect noexcept\n# constructors on some containers when enabling debug iterators, so it's\n# possible to turn them off\nfeature debug-iterators : default off on : composite propagated link-incompatible ;\nfeature.compose <debug-iterators>on : <define>_GLIBCXX_DEBUG <define>_GLIBCXX_DEBUG_PEDANTIC ;\nfeature.compose <debug-iterators>off : <define>_ITERATOR_DEBUG_LEVEL=0 ;\n\nfeature fpic : off on : composite propagated link-incompatible ;\nfeature.compose <fpic>on : <cxxflags>-fPIC ;\n\nfeature profile-calls : off on : composite propagated link-incompatible ;\nfeature.compose <profile-calls>on : <define>TORRENT_PROFILE_CALLS=1 ;\n\n# controls whether or not to export some internal\n# libtorrent functions. Used for unit testing\nfeature export-extra : off on : composite propagated ;\n# export some internal libtorrent functions\n# in order to me able to unit test them.\n# this is off by default to keep the export\n# symbol table reasonably small\nfeature.compose <export-extra>on : <define>TORRENT_EXPORT_EXTRA ;\n\nfeature msvc-version-macro : off on : composite propagated link-incompatible ;\n# ask the compiler to correctly set __cplusplus version\nfeature.compose <msvc-version-macro>on : <cxxflags>/Zc\\:__cplusplus ;\n\nlib advapi32 : : <name>advapi32 ;\nlib user32 : : <name>user32 ;\nlib shell32 : : <name>shell32 ;\nlib gdi32 : : <name>gdi32 ;\nlib bcrypt : : <name>bcrypt ;\nlib crypt32 : : <name>crypt32 ;\nlib z : : <link>shared <name>z ;\n\n# openssl libraries on windows\n# technically, crypt32 is not an OpenSSL dependency, but libtorrent needs it on\n# windows to access the system certificate store, for authenticating trackers\nalias ssl-deps : advapi32 user32 shell32 gdi32 crypt32 ;\n\n# pre OpenSSL 1.1 windows\nlib crypto : ssl-deps : <target-os>windows <openssl-version>pre1.1 <name>libeay32\n\t<conditional>@openssl-lib-path : : <conditional>@openssl-include-path ;\nlib ssl : ssl-deps : <target-os>windows <openssl-version>pre1.1 <name>ssleay32\n\t<use>crypto <conditional>@openssl-lib-path : : <conditional>@openssl-include-path ;\n\n# OpenSSL 1.1+ windows\nlib crypto : ssl-deps : <target-os>windows <openssl-version>1.1 <name>libcrypto\n\t<conditional>@openssl-lib-path : : <conditional>@openssl-include-path ;\nlib ssl : ssl-deps : <target-os>windows <openssl-version>1.1 <name>libssl <use>crypto\n\t<conditional>@openssl-lib-path : : <conditional>@openssl-include-path ;\n\n# generic OpenSSL\nlib crypto : : <name>crypto <use>z <conditional>@openssl-lib-path : :\n\t<conditional>@openssl-include-path ;\nlib ssl : : <name>ssl <use>crypto <conditional>@openssl-lib-path : :\n\t<conditional>@openssl-include-path ;\n\nlib gnutls : : <name>gnutls <conditional>@gnutls-lib-path : :\n\t<conditional>@gnutls-include-path ;\n\nlib wolfssl : : <name>wolfssl <conditional>@wolfssl-lib-path : :\n\t<conditional>@wolfssl-include-path ;\n\nlib dbghelp : : <name>dbghelp ;\n\n# required for networking on beos\nlib netkit : : <name>net <search>/boot/system/lib <link>shared ;\nlib gcc : : <name>gcc <link>static ;\n\n# gcrypt on linux/bsd etc.\nlib gcrypt : : <name>gcrypt <link>shared <search>/opt/local/lib ;\nlib dl : : <link>shared <name>dl ;\n\nlib libsocket : : <use>libnsl <name>socket <link>shared <search>/usr/sfw/lib <link>shared ;\nlib libnsl : : <name>nsl <link>shared <search>/usr/sfw/lib <link>shared ;\nlib libnetwork : : <name>network <link>shared ;\n\n# socket libraries on windows\nlib wsock32 : : <name>wsock32 <link>shared ;\nlib ws2_32 : : <name>ws2_32 <link>shared ;\nlib iphlpapi : : <name>iphlpapi <link>shared ;\n\nSOURCES =\n\talert\n\talert_manager\n\tannounce_entry\n\tassert\n\tbandwidth_limit\n\tbandwidth_manager\n\tbandwidth_queue_entry\n\tbdecode\n\tbitfield\n\tbloom_filter\n\tchained_buffer\n\tchoker\n\tclose_reason\n\tcopy_file\n\tcpuid\n\tcrc32c\n\tcreate_torrent\n\tdirectory\n\tdisk_buffer_holder\n\tdisk_buffer_pool\n\tdisk_interface\n\tdisk_io_thread_pool\n\tdisabled_disk_io\n\tdisk_job_fence\n\tdisk_job_pool\n\tdrive_info\n\tentry\n\terror_code\n\tfile_storage\n\tescape_string\n\tstring_util\n\tfile\n\tpath\n\tfingerprint\n\tgzip\n\thasher\n\thash_picker\n\thex\n\thttp_connection\n\thttp_parser\n\tidentify_client\n\tip_filter\n\tip_helpers\n\tip_notifier\n\tip_voter\n\tlisten_socket_handle\n\tmerkle\n\tmerkle_tree\n\tpeer_connection\n\tplatform_util\n\tbt_peer_connection\n\tweb_connection_base\n\tweb_peer_connection\n\thttp_seed_connection\n\tpeer_connection_handle\n\ti2p_stream\n\tinstantiate_connection\n\tnatpmp\n\tpacket_buffer\n\tpiece_picker\n\tpeer_list\n\tproxy_base\n\tpuff\n\trandom\n\tread_resume_data\n\twrite_resume_data\n\treceive_buffer\n\tresolve_links\n\tsession\n\tsession_params\n\tsession_handle\n\tsession_impl\n\tsession_call\n\tsettings_pack\n\tsha1\n\tsha1_hash\n\tsha256\n\tsocket_io\n\tsocket_type\n\tsocks5_stream\n\tstat\n\tstorage_utils\n\ttorrent\n\ttorrent_handle\n\ttorrent_info\n\ttorrent_peer\n\ttorrent_peer_allocator\n\ttorrent_status\n\ttime\n\ttracker_manager\n\thttp_tracker_connection\n\tudp_tracker_connection\n\ttimestamp_history\n\tudp_socket\n\tupnp\n\tutf8\n\tutp_socket_manager\n\tutp_stream\n\tfile_view_pool\n\tlsd\n\tenum_net\n\tmagnet_uri\n\tparse_url\n\txml_parse\n\tversion\n\tpeer_class\n\tpeer_class_set\n\tpart_file\n\tstat_cache\n\trequest_blocks\n\tsession_stats\n\tperformance_counters\n\tresolver\n\tsession_settings\n\tproxy_settings\n\tfile_progress\n\tffs\n\tadd_torrent_params\n\tpeer_info\n\tstack_allocator\n\tgenerate_peer_id\n\tmmap\n\tmmap_disk_io\n\tmmap_disk_job\n\tmmap_storage\n\tposix_disk_io\n\tposix_part_file\n\tposix_storage\n\tssl\n\ttruncate\n\tload_torrent\n\n# -- extensions --\n\tut_pex\n\tut_metadata\n\tsmart_ban\n\t;\n\nKADEMLIA_SOURCES =\n\tdht_state\n\tdht_storage\n\tdht_tracker\n\tmsg\n\tnode\n\tnode_entry\n\trefresh\n\trpc_manager\n\tfind_data\n\tnode_id\n\trouting_table\n\ttraversal_algorithm\n\tdos_blocker\n\tget_peers\n\titem\n\tget_item\n\tput_data\n\ted25519\n\tsample_infohashes\n\tdht_settings\n\t;\n\nED25519_SOURCES =\n\tadd_scalar\n\tfe\n\tge\n\tkey_exchange\n\tkeypair\n\tsc\n\tsign\n\tverify\n\thasher512\n\tsha512\n\t;\n\nlocal usage-requirements =\n\t<include>./include\n\t<include>./include/libtorrent\n\t<variant>release:<define>NDEBUG\n# enable cancel support in asio\n\t<define>BOOST_ASIO_ENABLE_CANCELIO\n# make sure asio uses std::chrono\n\t<define>BOOST_ASIO_HAS_STD_CHRONO\n\t<define>BOOST_ASIO_NO_DEPRECATED\n\t<conditional>@linking\n# msvc optimizations\n\t<toolset>msvc,<variant>release:<linkflags>\"/OPT:ICF=5\"\n\t<toolset>msvc,<variant>release:<linkflags>\"/OPT:REF\"\n\n\t# disable bogus deprecation warnings on msvc8\n\t<target-os>windows:<define>_SCL_SECURE_NO_DEPRECATE\n\t<target-os>windows:<define>_CRT_SECURE_NO_DEPRECATE\n\n\t<cxxflags>\"$(CXXFLAGS:J= )\"\n\t;\n\nproject torrent ;\n\nlib torrent\n\n\t: # sources\n\tsrc/$(SOURCES).cpp\n\n\t: # requirements\n\t<threading>multi\n\t<define>TORRENT_BUILDING_LIBRARY\n\t<link>shared:<define>TORRENT_BUILDING_SHARED\n\t<define>BOOST_NO_DEPRECATED\n\t<link>shared:<define>BOOST_SYSTEM_SOURCE\n\n\t<dht>on:<source>src/kademlia/$(KADEMLIA_SOURCES).cpp\n\t<dht>on:<source>src/ed25519/$(ED25519_SOURCES).cpp\n\n\t<conditional>@building\n\t<conditional>@warnings\n\n\t<tag>@tag\n\n\t$(usage-requirements)\n\t<linkflags>\"$(LDFLAGS:J= )\"\n\n\t: # default build\n\t<threading>multi\n\t<cxxstd>14\n\t<c++-template-depth>512\n\n\t: # usage requirements\n\t$(usage-requirements)\n\t<link>shared:<define>TORRENT_LINKING_SHARED\n\n\t;\n\n\n# install rules\n\n# return libdir and includedir\nrule install-paths ( properties * )\n{\n\timport version ;\n\n\t# package.paths was introduced in boost-1.70 (2018.02)\n\t# however, boost build's versioning scheme changed in boost-1.71 to version\n\t# 4.0\n\t# so, if versions are 4.0+ we want to use package.paths, but if it's a year,\n\t# say 2018, that means it's old and we use the fallback below. Any version <\n\t# 1990 is considered the 4.0 and later numbering scheme.\n\tif [ version.version-less 1990 0 : $(jam-version) ]\n\t{\n\t\timport option ;\n\t\timport property ;\n\t\tlocal prefix = [ option.get prefix : [ property.select <install-default-prefix> : $(properties) ] ] ;\n\t\tprefix = $(prefix:G=) ;\n\t\t# Or some likely defaults if neither is given.\n\t\tif ! $(prefix)\n\t\t{\n\t\t\tif [ modules.peek : NT ] { prefix = C:\\\\$(package-name) ; }\n\t\t\telse if [ modules.peek : UNIX ] { prefix = /usr/local ; }\n\t\t}\n\n\t\treturn $(prefix)/lib $(prefix)/include ;\n\t}\n\telse\n\t{\n\t\tlocal p = [ package.paths libtorrent : $(properties) ] ;\n\t\treturn [ $(p).libdir ] [ $(p).includedir ] ;\n\t}\n}\n\nrule generate-pkg-config ( properties * )\n{\n\timport property-set ;\n\timport project ;\n\n\tlocal l = [ project.target [ project.module-name \".\" ] ] ;\n\n\t# this is the libtorrent library target\n\tlocal t = [ $(l).find torrent : . ] ;\n\n\t# these are the properties we're using to build it with\n\tlocal props = [ $(t).generate [ property-set.create $(properties) ] ] ;\n\tlocal libname = [ $(props[2]).name ] ;\n\tprops = $(props[1]) ;\n\n\tp = [ install-paths $(properties) ] ;\n\n\tlocal libdir = $(p[1]) ;\n\tlocal includes = $(p[2]) ;\n\n\tlocal defines ;\n\tlocal shared_deps ;\n\tlocal private_deps ;\n\tfor d in [ feature.expand $(properties) ] [ $(props).raw ] {\n\t\tswitch $(d)\n\t\t{\n\t\t\tcase \\<define\\>TORRENT_* : {\n\t\t\t\td = [ SPLIT_BY_CHARACTERS $(d) : \">\" ] ;\n\t\t\t\tdefines += $(d[2]) ;\n\t\t\t}\n\t\t\tcase \\<define\\>BOOST_* : {\n\t\t\t\td = [ SPLIT_BY_CHARACTERS $(d) : \">\" ] ;\n\t\t\t\tdefines += $(d[2]) ;\n\t\t\t}\n\t\t\tcase \\<include\\>* : {\n\t\t\t\td = [ SPLIT_BY_CHARACTERS $(d) : \">\" ] ;\n\t\t\t\td = $(d[2]) ;\n\t\t\t\tif ( [ path.is-rooted $(d) ] )\n\t\t\t\t{\n\t\t\t\t\tincludes += $(d) ;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase \\<library\\>* : {\n\t\t\t\td = [ SPLIT_BY_CHARACTERS $(d) : \">\" ] ;\n\t\t\t\t# this is the target\n\t\t\t\tlocal t = $(d[2]) ;\n\t\t\t\tif [ $(t).type ] = SHARED_LIB\n\t\t\t\t{\n\t\t\t\t\tlocal path = [ $(t).path ] ;\n\t\t\t\t\tif $(path) != \"\"\n\t\t\t\t\t{\n\t\t\t\t\t\tlibdir += $(path) ;\n\t\t\t\t\t}\n\t\t\t\t\tshared_deps += [ $(t).name ] ;\n\t\t\t\t}\n\t\t\t\telse if [ $(t).type ] = SEARCHED_LIB\n\t\t\t\t{\n\t\t\t\t\tlocal path = [ $(t).search ] ;\n\t\t\t\t\tif $(path) != \"\"\n\t\t\t\t\t{\n\t\t\t\t\t\tlibdir += $(path) ;\n\t\t\t\t\t}\n\t\t\t\t\tshared_deps += [ $(t).name ] ;\n\t\t\t\t}\n\t\t\t\telse if ( [ $(t).type ] = STATIC_LIB )\n\t\t\t\t{\n\t\t\t\t\tprivate_deps += [ $(t).name ] ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t# TODO: use $(libname) in future versions\n\tlocal config = \"Name: libtorrent-rasterbar\"\n\t\t\"\\nDescription: libtorrent is an open source C++ library implementing the BitTorrent protocol\"\n\t\t\"\\nURL: https://libtorrent.org\"\n\t\t\"\\nVersion: $(VERSION)\"\n\t\t\"\\nLibs:\"\n\t\t\" -L\\\"$(libdir)\\\"\"\n\t\t\" -ltorrent-rasterbar\"\n\t\t\" -l$(shared_deps)\"\n\t\t\"\\nLibs.private:\"\n\t\t\" -L\\\"$(libdir)\\\"\"\n\t\t\" -l$(private_deps)\"\n\t\t\"\\nCflags:\"\n\t\t\" -D$(defines)\"\n\t\t\" -I\\\"$(includes)\\\"\"\n\t\t\"\\n\"\n\t\t;\n\n\tlocal dummy = @(\"libtorrent-rasterbar.pc\":E=$(config)) ;\n}\n\nrule install-pkg-config ( target-name : data * : requirements * )\n{\n\timport stage ;\n\tlocal p = [ install-paths $(requirements) ] ;\n\tlocal libdir = $(p[0]) ;\n\n\tstage.install $(target-name)\n\t\t: $(data)\n\t\t: $(requirements) <location>$(libdir)/pkgconfig\n\t\t;\n\n\timport project ;\n\tlocal c = [ project.current ] ;\n\tlocal project-module = [ $(c).project-module ] ;\n\tmodule $(project-module)\n\t{\n\t\texplicit $(1) ;\n\t}\n}\n\nheaders = [ path.glob-tree include/libtorrent : *.hpp ] ;\n\npackage.install install-torrent-lib\n\t: <install-source-root>libtorrent\n\t:\n\t: torrent\n\t: $(headers)\n\t;\n\npackage.install-data install-cmake-module\n\t: cmake/Modules\n\t: examples/cmake/FindLibtorrentRasterbar.cmake\n\t;\n\ninstall-pkg-config pkg-config-target : libtorrent-rasterbar.pc : <conditional>@generate-pkg-config ;\n\nalias install : install-torrent-lib install-cmake-module pkg-config-target ;\n\nexplicit install ;\n\n\n# testing headers targets\n\nlocal header_targets ;\nfor local target in $(headers)\n{\n\tif ! [ path.basename $(target) ] in storage.hpp windows.hpp win_util.hpp win_crypto_provider.hpp torrent_impl.hpp io_service.hpp\n\t{\n\t\t# this cast tells boost build that the header files really *are* cpp files\n\t\t# otherwise the object rule doesn't know which language to interpret them as\n\t\tobj header-build/$(target).o : [ cast.cast _ cpp : $(target) ]\n\t\t\t: <library>torrent <cxxflags>-fsyntax-only\n\t\t\t: <cxxstd>14 ;\n\t\texplicit header-build/$(target).o ;\n\t\theader_targets += $(target) ;\n\t}\n}\n\nalias check-headers : header-build/$(header_targets).o ;\nexplicit check-headers ;\n"
        },
        {
          "name": "Jamroot.jam",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 8.869140625,
          "content": "Copyright (c) 2003-2020, Arvid Norberg\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the distribution.\n    * Neither the name of the author nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\n\npuff.c\nCopyright (C) 2002, 2003 Mark Adler\nFor conditions of distribution and use, see copyright notice in puff.h\nversion 1.7, 3 Mar 2003\n\npuff.c is a simple inflate written to be an unambiguous way to specify the\ndeflate format.  It is not written for speed but rather simplicity.  As a\nside benefit, this code might actually be useful when small code is more\nimportant than speed, such as bootstrap applications.  For typical deflate\ndata, zlib's inflate() is about four times as fast as puff().  zlib's\ninflate compiles to around 20K on my machine, whereas puff.c compiles to\naround 4K on my machine (a PowerPC using GNU cc).  If the faster decode()\nfunction here is used, then puff() is only twice as slow as zlib's\ninflate().\n\nAll dynamically allocated memory comes from the stack.  The stack required\nis less than 2K bytes.  This code is compatible with 16-bit int's and\nassumes that long's are at least 32 bits.  puff.c uses the short data type,\nassumed to be 16 bits, for arrays in order to conserve memory.  The code\nworks whether integers are stored big endian or little endian.\n\nIn the comments below are \"Format notes\" that describe the inflate process\nand document some of the less obvious aspects of the format.  This source\ncode is meant to supplement RFC 1951, which formally describes the deflate\nformat:\n\n   http://www.zlib.org/rfc-deflate.html\n\n------------------------------------------------------------------------------\n\nbindings/python/src/\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n------------------------------------------------------------------------------\n\ned25519 implementation based on:\n\nCopyright (c) 2015 Orson Peters <orsonpeters@gmail.com>\n\nThis software is provided 'as-is', without any express or implied warranty. In no event will the\nauthors be held liable for any damages arising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose, including commercial\napplications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not claim that you wrote the\n   original software. If you use this software in a product, an acknowledgment in the product\n   documentation would be appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be misrepresented as\n   being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n\n------------------------------------------------------------------------------\n\nsrc/sha1.cpp include/libtorrent/sha1.hpp\n\nSHA-1 in C\nBy Steve Reid <sreid@sea-to-sky.net>\n100% Public Domain\n\n------------------------------------------------------------------------------\n\ninclude/libtorrent/_aux/route.h\n\n * Copyright (c) 2000-2008 Apple Inc. All rights reserved.\n *\n * @APPLE_OSREFERENCE_LICENSE_HEADER_START@\n * \n * This file contains Original Code and/or Modifications of Original Code\n * as defined in and that are subject to the Apple Public Source License\n * Version 2.0 (the 'License'). You may not use this file except in\n * compliance with the License. The rights granted to you under the License\n * may not be used to create, or enable the creation or redistribution of,\n * unlawful or unlicensed copies of an Apple operating system, or to\n * circumvent, violate, or enable the circumvention or violation of, any\n * terms of an Apple operating system software license agreement.\n * \n * Please obtain a copy of the License at\n * http://www.opensource.apple.com/apsl/ and read it before using this file.\n * \n * The Original Code and all software distributed under the License are\n * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER\n * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,\n * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.\n * Please see the License for the specific language governing rights and\n * limitations under the License.\n * \n * Copyright (c) 1980, 1986, 1993\n *\tThe Regents of the University of California.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *\tThis product includes software developed by the University of\n *\tCalifornia, Berkeley and its contributors.\n * 4. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n *\t@(#)route.h\t8.3 (Berkeley) 4/19/94\n * $FreeBSD: src/sys/net/route.h,v 1.36.2.1 2000/08/16 06:14:23 jayanth Exp $\n\n------------------------------------------------------------------------------\n\nsrc/sha256.cpp\n\nSHA-256. Adapted from LibTomCrypt. This code is Public Domain\n\n"
        },
        {
          "name": "LibtorrentRasterbarConfig.cmake.in",
          "type": "blob",
          "size": 0.2666015625,
          "content": "# - Config file for the @PROJECT_NAME@ package\n# It defines the LibtorrentRasterbar::torrent-rasterbar target to link against\n\n@PACKAGE_INIT@\n\ninclude(CMakeFindDependencyMacro)\n@_find_dependency_calls@\n\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/LibtorrentRasterbarTargets.cmake\")\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 32.9462890625,
          "content": "VERSION=2.0.11\n\nBUILD_CONFIG=release link=shared crypto=openssl warnings=off address-model=64\n\nifeq (${PREFIX},)\nPREFIX=/usr/local/\nendif\n\nALL: FORCE\n\tBOOST_ROOT=\"\" b2 ${BUILD_CONFIG}\n\npython-binding: FORCE\n\t(cd bindings/python; BOOST_ROOT=\"\" b2 ${BUILD_CONFIG} stage_module stage_dependencies)\n\nexamples: FORCE\n\t(cd examples; BOOST_ROOT=\"\" b2 ${BUILD_CONFIG} stage_client_test stage_connection_tester)\n\ntools: FORCE\n\t(cd tools; BOOST_ROOT=\"\" b2 ${BUILD_CONFIG})\n\ninstall: FORCE\n\tBOOST_ROOT=\"\" b2 ${BUILD_CONFIG} install --prefix=${PREFIX}\n\nsim: FORCE\n\t(cd simulation; BOOST_ROOT=\"\" b2 $(filter-out crypto=openssl,${BUILD_CONFIG}) crypto=built-in)\n\ncheck: FORCE\n\t(cd test; BOOST_ROOT=\"\" b2 crypto=openssl warnings=off)\n\nclean: FORCE\n\trm -rf \\\n    bin \\\n    examples/bin \\\n    tools/bin \\\n    bindings/python/bin \\\n    test/bin \\\n    simulation/bin \\\n    simulator/libsimulator/bin\n\nDOCS_IMAGES = \\\n  docs/img/screenshot.png             \\\n  docs/img/screenshot_thumb.png       \\\n  docs/img/cwnd.png                   \\\n  docs/img/cwnd_thumb.png             \\\n  docs/img/delays.png                 \\\n  docs/img/delays_thumb.png           \\\n  docs/img/our_delay_base.png         \\\n  docs/img/our_delay_base_thumb.png   \\\n  docs/img/read_disk_buffers.png      \\\n  docs/img/read_disk_buffers.diagram  \\\n  docs/img/storage.png                \\\n  docs/img/write_disk_buffers.png     \\\n  docs/img/write_disk_buffers.diagram \\\n  docs/img/ip_id_v4.png               \\\n  docs/img/ip_id_v6.png               \\\n  docs/img/hash_distribution.png      \\\n  docs/img/complete_bit_prefixes.png  \\\n  docs/img/troubleshooting.dot        \\\n  docs/img/troubleshooting.png        \\\n  docs/img/troubleshooting_thumb.png  \\\n  docs/img/hacking.diagram            \\\n  docs/img/hacking.png                \\\n  docs/img/utp_stack.diagram          \\\n  docs/img/utp_stack.png              \\\n  docs/img/bitcoin.png                \\\n  docs/img/logo-color-text.png        \\\n  docs/img/pp-acceptance-medium.png   \\\n  docs/style.css\n\nDOCS_PAGES = \\\n  docs/building.html              \\\n  docs/client_test.html           \\\n  docs/contributing.html          \\\n  docs/dht_extensions.html        \\\n  docs/dht_rss.html               \\\n  docs/dht_sec.html               \\\n  docs/dht_store.html             \\\n  docs/examples.html              \\\n  docs/extension_protocol.html    \\\n  docs/features-ref.html          \\\n  docs/index.html                 \\\n  docs/manual-ref.html            \\\n  docs/projects.html              \\\n  docs/python_binding.html        \\\n  docs/tuning-ref.html            \\\n  docs/settings.rst               \\\n  docs/stats_counters.rst         \\\n  docs/troubleshooting.html       \\\n  docs/udp_tracker_protocol.html  \\\n  docs/utp.html                   \\\n  docs/streaming.html             \\\n  docs/building.rst               \\\n  docs/client_test.rst            \\\n  docs/contributing.rst           \\\n  docs/dht_extensions.rst         \\\n  docs/dht_rss.rst                \\\n  docs/dht_sec.rst                \\\n  docs/dht_store.rst              \\\n  docs/examples.rst               \\\n  docs/extension_protocol.rst     \\\n  docs/features.rst               \\\n  docs/index.rst                  \\\n  docs/manual.rst                 \\\n  docs/manual-ref.rst             \\\n  docs/projects.rst               \\\n  docs/python_binding.rst         \\\n  docs/tuning.rst                 \\\n  docs/troubleshooting.rst        \\\n  docs/udp_tracker_protocol.rst   \\\n  docs/utp.rst                    \\\n  docs/streaming.rst              \\\n  docs/tutorial.rst               \\\n  docs/tutorial-ref.rst           \\\n  docs/header.rst                 \\\n  docs/hacking.rst                \\\n  docs/hacking.html               \\\n  docs/todo.html                  \\\n  docs/tutorial-ref.html          \\\n  docs/upgrade_to_1.2-ref.html    \\\n  docs/upgrade_to_2.0-ref.html    \\\n  docs/security-audit.html        \\\n  docs/reference.html             \\\n  docs/reference-Core.html        \\\n  docs/reference-DHT.html         \\\n  docs/reference-Session.html     \\\n  docs/reference-Torrent_Handle.html \\\n  docs/reference-Torrent_Info.html \\\n  docs/reference-Trackers.html   \\\n  docs/reference-PeerClass.html  \\\n  docs/reference-Torrent_Status.html \\\n  docs/reference-Stats.html      \\\n  docs/reference-Resume_Data.html \\\n  docs/reference-Add_Torrent.html \\\n  docs/reference-Plugins.html    \\\n  docs/reference-Create_Torrents.html \\\n  docs/reference-Error_Codes.html \\\n  docs/reference-Storage.html    \\\n  docs/reference-Custom_Storage.html \\\n  docs/reference-Utility.html    \\\n  docs/reference-Bencoding.html  \\\n  docs/reference-Alerts.html     \\\n  docs/reference-Filter.html     \\\n  docs/reference-Settings.html   \\\n  docs/reference-Bdecoding.html  \\\n  docs/reference-ed25519.html    \\\n  docs/single-page-ref.html\n\nED25519_SOURCE = \\\n  fe.h \\\n  fixedint.h \\\n  ge.h \\\n  precomp_data.h \\\n  sc.h \\\n  add_scalar.cpp \\\n  fe.cpp \\\n  ge.cpp \\\n  key_exchange.cpp \\\n  keypair.cpp \\\n  sc.cpp \\\n  sign.cpp \\\n  verify.cpp \\\n  sha512.cpp \\\n  hasher512.cpp \\\n\nEXTRA_DIST = \\\n  Jamfile \\\n  Jamroot.jam \\\n  project-config.jam \\\n  Makefile \\\n  CMakeLists.txt \\\n  cmake/Modules/FindLibGcrypt.cmake \\\n  cmake/Modules/GeneratePkgConfig.cmake \\\n  cmake/Modules/ucm_flags.cmake \\\n  cmake/Modules/LibtorrentMacros.cmake \\\n  cmake/Modules/GeneratePkgConfig/generate-pkg-config.cmake.in \\\n  cmake/Modules/GeneratePkgConfig/pkg-config.cmake.in \\\n  cmake/Modules/GeneratePkgConfig/target-compile-settings.cmake.in \\\n  LibtorrentRasterbarConfig.cmake.in \\\n  bindings/CMakeLists.txt \\\n  setup.py \\\n  LICENSE \\\n  src/ed25519/LICENSE \\\n  COPYING \\\n  AUTHORS \\\n  NEWS \\\n  README.rst \\\n  ChangeLog \\\n  $(DOCS_PAGES) \\\n  $(DOCS_IMAGES)\n\nPYTHON_FILES= \\\n  CMakeLists.txt            \\\n  Jamfile                   \\\n  client.py                 \\\n  make_torrent.py           \\\n  setup.py                  \\\n  setup.py.cmake.in         \\\n  simple_client.py          \\\n  src/alert.cpp             \\\n  src/boost_python.hpp      \\\n  src/bytes.hpp             \\\n  src/converters.cpp        \\\n  src/create_torrent.cpp    \\\n  src/datetime.cpp          \\\n  src/entry.cpp             \\\n  src/error_code.cpp        \\\n  src/fingerprint.cpp       \\\n  src/gil.hpp               \\\n  src/ip_filter.cpp         \\\n  src/load_torrent.cpp      \\\n  src/magnet_uri.cpp        \\\n  src/module.cpp            \\\n  src/optional.hpp          \\\n  src/peer_info.cpp         \\\n  src/session.cpp           \\\n  src/session_settings.cpp  \\\n  src/sha1_hash.cpp         \\\n  src/sha256_hash.cpp       \\\n  src/info_hash.cpp         \\\n  src/string.cpp            \\\n  src/torrent_handle.cpp    \\\n  src/torrent_info.cpp      \\\n  src/torrent_status.cpp    \\\n  src/utility.cpp           \\\n  src/version.cpp\n\nEXAMPLE_FILES= \\\n  CMakeLists.txt \\\n  Jamfile \\\n  bt-get.cpp \\\n  bt-get2.cpp \\\n  bt-get3.cpp \\\n  check_files.cpp \\\n  client_test.cpp \\\n  cmake/FindLibtorrentRasterbar.cmake \\\n  connection_tester.cpp \\\n  dump_torrent.cpp \\\n  dump_bdecode.cpp \\\n  magnet2torrent.cpp \\\n  make_torrent.cpp \\\n  print.cpp \\\n  print.hpp \\\n  session_view.cpp \\\n  session_view.hpp \\\n  simple_client.cpp \\\n  custom_storage.cpp \\\n  stats_counters.cpp \\\n  torrent2magnet.cpp \\\n  torrent_view.cpp \\\n  torrent_view.hpp \\\n  upnp_test.cpp\n\nTOOLS_FILES= \\\n  CMakeLists.txt         \\\n  Jamfile                \\\n  dht_put.cpp            \\\n  dht_sample.cpp         \\\n  disk_io_stress_test.cpp\\\n  parse_dht_log.py       \\\n  parse_dht_rtt.py       \\\n  parse_dht_stats.py     \\\n  parse_peer_log.py      \\\n  parse_sample.py        \\\n  parse_session_stats.py \\\n  parse_utp_log.py       \\\n  session_log_alerts.cpp\n\nKADEMLIA_SOURCES = \\\n  dht_settings.cpp     \\\n  dht_state.cpp        \\\n  dht_storage.cpp      \\\n  dht_tracker.cpp      \\\n  dos_blocker.cpp      \\\n  ed25519.cpp          \\\n  find_data.cpp        \\\n  get_item.cpp         \\\n  get_peers.cpp        \\\n  item.cpp             \\\n  msg.cpp              \\\n  node.cpp             \\\n  node_entry.cpp       \\\n  node_id.cpp          \\\n  put_data.cpp         \\\n  refresh.cpp          \\\n  routing_table.cpp    \\\n  rpc_manager.cpp      \\\n  sample_infohashes.cpp \\\n  traversal_algorithm.cpp\n\nSOURCES = \\\n  add_torrent_params.cpp          \\\n  alert.cpp                       \\\n  alert_manager.cpp               \\\n  announce_entry.cpp              \\\n  assert.cpp                      \\\n  bandwidth_limit.cpp             \\\n  bandwidth_manager.cpp           \\\n  bandwidth_queue_entry.cpp       \\\n  bdecode.cpp                     \\\n  bitfield.cpp                    \\\n  bloom_filter.cpp                \\\n  bt_peer_connection.cpp          \\\n  chained_buffer.cpp              \\\n  choker.cpp                      \\\n  close_reason.cpp                \\\n  copy_file.cpp                   \\\n  cpuid.cpp                       \\\n  crc32c.cpp                      \\\n  create_torrent.cpp              \\\n  directory.cpp                   \\\n  disabled_disk_io.cpp            \\\n  disk_buffer_holder.cpp          \\\n  disk_buffer_pool.cpp            \\\n  disk_interface.cpp              \\\n  disk_io_thread_pool.cpp         \\\n  disk_job_fence.cpp              \\\n  disk_job_pool.cpp               \\\n  drive_info.cpp                  \\\n  entry.cpp                       \\\n  enum_net.cpp                    \\\n  error_code.cpp                  \\\n  escape_string.cpp               \\\n  ffs.cpp                         \\\n  file.cpp                        \\\n  file_progress.cpp               \\\n  file_storage.cpp                \\\n  file_view_pool.cpp              \\\n  fingerprint.cpp                 \\\n  generate_peer_id.cpp            \\\n  gzip.cpp                        \\\n  hash_picker.cpp                 \\\n  hasher.cpp                      \\\n  hex.cpp                         \\\n  http_connection.cpp             \\\n  http_parser.cpp                 \\\n  http_seed_connection.cpp        \\\n  http_tracker_connection.cpp     \\\n  i2p_stream.cpp                  \\\n  identify_client.cpp             \\\n  instantiate_connection.cpp      \\\n  ip_filter.cpp                   \\\n  ip_helpers.cpp                  \\\n  ip_notifier.cpp                 \\\n  ip_voter.cpp                    \\\n  listen_socket_handle.cpp        \\\n  load_torrent.cpp                \\\n  lsd.cpp                         \\\n  magnet_uri.cpp                  \\\n  merkle.cpp                      \\\n  merkle_tree.cpp                 \\\n  mmap.cpp                        \\\n  mmap_disk_io.cpp                \\\n  mmap_disk_job.cpp               \\\n  mmap_storage.cpp                \\\n  natpmp.cpp                      \\\n  packet_buffer.cpp               \\\n  parse_url.cpp                   \\\n  part_file.cpp                   \\\n  path.cpp                        \\\n  pe_crypto.cpp                   \\\n  peer_class.cpp                  \\\n  peer_class_set.cpp              \\\n  peer_connection.cpp             \\\n  peer_connection_handle.cpp      \\\n  peer_info.cpp                   \\\n  peer_list.cpp                   \\\n  performance_counters.cpp        \\\n  piece_picker.cpp                \\\n  platform_util.cpp               \\\n  posix_disk_io.cpp               \\\n  posix_part_file.cpp             \\\n  posix_storage.cpp               \\\n  proxy_base.cpp                  \\\n  proxy_settings.cpp              \\\n  puff.cpp                        \\\n  random.cpp                      \\\n  read_resume_data.cpp            \\\n  receive_buffer.cpp              \\\n  request_blocks.cpp              \\\n  resolve_links.cpp               \\\n  resolver.cpp                    \\\n  session.cpp                     \\\n  session_call.cpp                \\\n  session_handle.cpp              \\\n  session_impl.cpp                \\\n  session_params.cpp              \\\n  session_settings.cpp            \\\n  session_stats.cpp               \\\n  settings_pack.cpp               \\\n  sha1.cpp                        \\\n  sha1_hash.cpp                   \\\n  sha256.cpp                      \\\n  smart_ban.cpp                   \\\n  socket_io.cpp                   \\\n  socket_type.cpp                 \\\n  socks5_stream.cpp               \\\n  ssl.cpp                         \\\n  stack_allocator.cpp             \\\n  stat.cpp                        \\\n  stat_cache.cpp                  \\\n  storage_utils.cpp               \\\n  string_util.cpp                 \\\n  time.cpp                        \\\n  timestamp_history.cpp           \\\n  torrent.cpp                     \\\n  torrent_handle.cpp              \\\n  torrent_info.cpp                \\\n  torrent_peer.cpp                \\\n  torrent_peer_allocator.cpp      \\\n  torrent_status.cpp              \\\n  tracker_manager.cpp             \\\n  truncate.cpp                    \\\n  udp_socket.cpp                  \\\n  udp_tracker_connection.cpp      \\\n  upnp.cpp                        \\\n  ut_metadata.cpp                 \\\n  ut_pex.cpp                      \\\n  utf8.cpp                        \\\n  utp_socket_manager.cpp          \\\n  utp_stream.cpp                  \\\n  version.cpp                     \\\n  web_connection_base.cpp         \\\n  web_peer_connection.cpp         \\\n  write_resume_data.cpp           \\\n  xml_parse.cpp\n\nHEADERS = \\\n  add_torrent_params.hpp       \\\n  address.hpp                  \\\n  alert.hpp                    \\\n  alert_types.hpp              \\\n  announce_entry.hpp           \\\n  assert.hpp                   \\\n  bdecode.hpp                  \\\n  bencode.hpp                  \\\n  bitfield.hpp                 \\\n  bloom_filter.hpp             \\\n  bt_peer_connection.hpp       \\\n  choker.hpp                   \\\n  client_data.hpp              \\\n  close_reason.hpp             \\\n  config.hpp                   \\\n  copy_ptr.hpp                 \\\n  crc32c.hpp                   \\\n  create_torrent.hpp           \\\n  deadline_timer.hpp           \\\n  debug.hpp                    \\\n  disabled_disk_io.hpp         \\\n  disk_buffer_holder.hpp       \\\n  disk_interface.hpp           \\\n  disk_observer.hpp            \\\n  download_priority.hpp        \\\n  entry.hpp                    \\\n  enum_net.hpp                 \\\n  error.hpp                    \\\n  error_code.hpp               \\\n  extensions.hpp               \\\n  file.hpp                     \\\n  file_storage.hpp             \\\n  file_layout.hpp              \\\n  fingerprint.hpp              \\\n  flags.hpp                    \\\n  fwd.hpp                      \\\n  gzip.hpp                     \\\n  hash_picker.hpp              \\\n  hasher.hpp                   \\\n  hex.hpp                      \\\n  http_connection.hpp          \\\n  http_parser.hpp              \\\n  http_seed_connection.hpp     \\\n  http_stream.hpp              \\\n  http_tracker_connection.hpp  \\\n  i2p_stream.hpp               \\\n  identify_client.hpp          \\\n  index_range.hpp              \\\n  info_hash.hpp                \\\n  io.hpp                       \\\n  io_context.hpp               \\\n  io_service.hpp               \\\n  ip_filter.hpp                \\\n  ip_voter.hpp                 \\\n  libtorrent.hpp               \\\n  link.hpp                     \\\n  load_torrent.hpp             \\\n  lsd.hpp                      \\\n  magnet_uri.hpp               \\\n  mmap_disk_io.hpp             \\\n  mmap_storage.hpp             \\\n  natpmp.hpp                   \\\n  netlink.hpp                  \\\n  operations.hpp               \\\n  optional.hpp                 \\\n  parse_url.hpp                \\\n  part_file.hpp                \\\n  pe_crypto.hpp                \\\n  peer.hpp                     \\\n  peer_class.hpp               \\\n  peer_class_set.hpp           \\\n  peer_class_type_filter.hpp   \\\n  peer_connection.hpp          \\\n  peer_connection_handle.hpp   \\\n  peer_connection_interface.hpp \\\n  peer_id.hpp                  \\\n  peer_info.hpp                \\\n  peer_list.hpp                \\\n  peer_request.hpp             \\\n  performance_counters.hpp     \\\n  pex_flags.hpp                \\\n  piece_block.hpp              \\\n  piece_block_progress.hpp     \\\n  piece_picker.hpp             \\\n  platform_util.hpp            \\\n  portmap.hpp                  \\\n  posix_disk_io.hpp            \\\n  proxy_base.hpp               \\\n  puff.hpp                     \\\n  random.hpp                   \\\n  read_resume_data.hpp         \\\n  request_blocks.hpp           \\\n  resolve_links.hpp            \\\n  session.hpp                  \\\n  session_handle.hpp           \\\n  session_params.hpp           \\\n  session_settings.hpp         \\\n  session_stats.hpp            \\\n  session_status.hpp           \\\n  session_types.hpp            \\\n  settings_pack.hpp            \\\n  sha1.hpp                     \\\n  sha1_hash.hpp                \\\n  sha256.hpp                   \\\n  sliding_average.hpp          \\\n  socket.hpp                   \\\n  socket_io.hpp                \\\n  socket_type.hpp              \\\n  socks5_stream.hpp            \\\n  span.hpp                     \\\n  ssl.hpp                      \\\n  ssl_stream.hpp               \\\n  stack_allocator.hpp          \\\n  stat.hpp                     \\\n  stat_cache.hpp               \\\n  storage.hpp                  \\\n  storage_defs.hpp             \\\n  string_util.hpp              \\\n  string_view.hpp              \\\n  tailqueue.hpp                \\\n  time.hpp                     \\\n  torrent.hpp                  \\\n  torrent_flags.hpp            \\\n  torrent_handle.hpp           \\\n  torrent_info.hpp             \\\n  torrent_peer.hpp             \\\n  torrent_peer_allocator.hpp   \\\n  torrent_status.hpp           \\\n  tracker_manager.hpp          \\\n  truncate.hpp                 \\\n  udp_socket.hpp               \\\n  udp_tracker_connection.hpp   \\\n  union_endpoint.hpp           \\\n  units.hpp                    \\\n  upnp.hpp                     \\\n  utf8.hpp                     \\\n  vector_utils.hpp             \\\n  version.hpp                  \\\n  web_connection_base.hpp      \\\n  web_peer_connection.hpp      \\\n  write_resume_data.hpp        \\\n  xml_parse.hpp                \\\n  \\\n  aux_/alert_manager.hpp            \\\n  aux_/aligned_union.hpp            \\\n  aux_/alloca.hpp                   \\\n  aux_/allocating_handler.hpp       \\\n  aux_/announce_entry.hpp           \\\n  aux_/apply_pad_files.hpp          \\\n  aux_/array.hpp                    \\\n  aux_/bandwidth_limit.hpp          \\\n  aux_/bandwidth_manager.hpp        \\\n  aux_/bandwidth_queue_entry.hpp    \\\n  aux_/bandwidth_socket.hpp         \\\n  aux_/bind_to_device.hpp           \\\n  aux_/buffer.hpp                   \\\n  aux_/byteswap.hpp                 \\\n  aux_/container_wrapper.hpp        \\\n  aux_/chained_buffer.hpp           \\\n  aux_/cpuid.hpp                    \\\n  aux_/deferred_handler.hpp         \\\n  aux_/deprecated.hpp               \\\n  aux_/deque.hpp                    \\\n  aux_/dev_random.hpp               \\\n  aux_/directory.hpp                \\\n  aux_/disable_deprecation_warnings_push.hpp \\\n  aux_/disable_warnings_pop.hpp     \\\n  aux_/disable_warnings_push.hpp    \\\n  aux_/disk_buffer_pool.hpp         \\\n  aux_/disk_io_thread_pool.hpp      \\\n  aux_/disk_job_fence.hpp           \\\n  aux_/disk_job_pool.hpp            \\\n  aux_/drive_info.hpp               \\\n  aux_/ed25519.hpp                  \\\n  aux_/escape_string.hpp            \\\n  aux_/export.hpp                   \\\n  aux_/ffs.hpp                      \\\n  aux_/file_descriptor.hpp          \\\n  aux_/file_pointer.hpp             \\\n  aux_/file_progress.hpp            \\\n  aux_/file_view_pool.hpp           \\\n  aux_/generate_peer_id.hpp         \\\n  aux_/has_block.hpp                \\\n  aux_/hasher512.hpp                \\\n  aux_/heterogeneous_queue.hpp      \\\n  aux_/instantiate_connection.hpp   \\\n  aux_/invariant_check.hpp          \\\n  aux_/io.hpp                       \\\n  aux_/ip_helpers.hpp               \\\n  aux_/ip_notifier.hpp              \\\n  aux_/keepalive.hpp                \\\n  aux_/listen_socket_handle.hpp     \\\n  aux_/lsd.hpp                      \\\n  aux_/merkle.hpp                   \\\n  aux_/merkle_tree.hpp              \\\n  aux_/mmap.hpp                     \\\n  aux_/mmap_disk_job.hpp            \\\n  aux_/netlink_utils.hpp            \\\n  aux_/noexcept_movable.hpp         \\\n  aux_/numeric_cast.hpp             \\\n  aux_/open_mode.hpp                \\\n  aux_/packet_buffer.hpp            \\\n  aux_/packet_pool.hpp              \\\n  aux_/path.hpp                     \\\n  aux_/polymorphic_socket.hpp       \\\n  aux_/pool.hpp                     \\\n  aux_/portmap.hpp                  \\\n  aux_/posix_part_file.hpp          \\\n  aux_/posix_storage.hpp            \\\n  aux_/proxy_settings.hpp           \\\n  aux_/range.hpp                    \\\n  aux_/receive_buffer.hpp           \\\n  aux_/resolver.hpp                 \\\n  aux_/resolver_interface.hpp       \\\n  aux_/route.h                      \\\n  aux_/scope_end.hpp                \\\n  aux_/session_call.hpp             \\\n  aux_/session_impl.hpp             \\\n  aux_/session_interface.hpp        \\\n  aux_/session_settings.hpp         \\\n  aux_/session_udp_sockets.hpp      \\\n  aux_/set_socket_buffer.hpp        \\\n  aux_/set_traffic_class.hpp        \\\n  aux_/sha512.hpp                   \\\n  aux_/socket_type.hpp              \\\n  aux_/storage_free_list.hpp        \\\n  aux_/storage_utils.hpp            \\\n  aux_/store_buffer.hpp             \\\n  aux_/string_ptr.hpp               \\\n  aux_/strview_less.hpp             \\\n  aux_/suggest_piece.hpp            \\\n  aux_/throw.hpp                    \\\n  aux_/time.hpp                     \\\n  aux_/timestamp_history.hpp        \\\n  aux_/torrent_impl.hpp             \\\n  aux_/torrent_list.hpp             \\\n  aux_/unique_ptr.hpp               \\\n  aux_/utp_socket_manager.hpp       \\\n  aux_/utp_stream.hpp               \\\n  aux_/vector.hpp                   \\\n  aux_/windows.hpp                  \\\n  aux_/win_cng.hpp                  \\\n  aux_/win_crypto_provider.hpp      \\\n  aux_/win_file_handle.hpp          \\\n  aux_/win_util.hpp                 \\\n  \\\n  extensions/smart_ban.hpp          \\\n  extensions/ut_metadata.hpp        \\\n  extensions/ut_pex.hpp             \\\n  \\\n  kademlia/announce_flags.hpp       \\\n  kademlia/dht_observer.hpp         \\\n  kademlia/dht_settings.hpp         \\\n  kademlia/dht_state.hpp            \\\n  kademlia/dht_storage.hpp          \\\n  kademlia/dht_tracker.hpp          \\\n  kademlia/direct_request.hpp       \\\n  kademlia/dos_blocker.hpp          \\\n  kademlia/ed25519.hpp              \\\n  kademlia/find_data.hpp            \\\n  kademlia/get_item.hpp             \\\n  kademlia/get_peers.hpp            \\\n  kademlia/io.hpp                   \\\n  kademlia/item.hpp                 \\\n  kademlia/msg.hpp                  \\\n  kademlia/node.hpp                 \\\n  kademlia/node_entry.hpp           \\\n  kademlia/node_id.hpp              \\\n  kademlia/observer.hpp             \\\n  kademlia/put_data.hpp             \\\n  kademlia/refresh.hpp              \\\n  kademlia/routing_table.hpp        \\\n  kademlia/rpc_manager.hpp          \\\n  kademlia/sample_infohashes.hpp    \\\n  kademlia/traversal_algorithm.hpp  \\\n  kademlia/types.hpp\n\nTRY_SIGNAL = \\\n  signal_error_code.cpp \\\n  signal_error_code.hpp \\\n  try_signal.cpp \\\n  try_signal.hpp \\\n  try_signal_mingw.hpp \\\n  try_signal_msvc.hpp \\\n  try_signal_posix.hpp \\\n  LICENSE \\\n  README.rst \\\n  Jamfile \\\n  CMakeLists.txt\n\nASIO_GNUTLS = \\\n  LICENSE_1_0.txt \\\n  Jamfile \\\n  include/boost/asio/gnutls.hpp \\\n  include/boost/asio/gnutls \\\n  include/boost/asio/gnutls/rfc2818_verification.hpp \\\n  include/boost/asio/gnutls/stream_base.hpp \\\n  include/boost/asio/gnutls/error.hpp \\\n  include/boost/asio/gnutls/host_name_verification.hpp \\\n  include/boost/asio/gnutls/stream.hpp \\\n  include/boost/asio/gnutls/context_base.hpp \\\n  include/boost/asio/gnutls/verify_context.hpp \\\n  include/boost/asio/gnutls/context.hpp \\\n  README.md \\\n  test/unit_test.hpp \\\n  test/gnutls/context_base.cpp \\\n  test/gnutls/stream_base.cpp \\\n  test/gnutls/host_name_verification.cpp \\\n  test/gnutls/error.cpp \\\n  test/gnutls/Jamfile.v2 \\\n  test/gnutls/context.cpp \\\n  test/gnutls/rfc2818_verification.cpp \\\n  test/gnutls/stream.cpp\n\nSIM_SOURCES = \\\n  Jamfile \\\n  create_torrent.cpp \\\n  create_torrent.hpp \\\n  fake_peer.hpp \\\n  disk_io.hpp \\\n  disk_io.cpp \\\n  make_proxy_settings.hpp \\\n  setup_dht.cpp \\\n  setup_dht.hpp \\\n  setup_swarm.cpp \\\n  setup_swarm.hpp \\\n  test_auto_manage.cpp \\\n  test_checking.cpp \\\n  test_dht.cpp \\\n  test_dht_bootstrap.cpp \\\n  test_dht_rate_limit.cpp \\\n  test_dht_storage.cpp \\\n  test_error_handling.cpp \\\n  test_fast_extensions.cpp \\\n  test_http_connection.cpp \\\n  test_ip_filter.cpp \\\n  test_metadata_extension.cpp \\\n  test_optimistic_unchoke.cpp \\\n  test_pause.cpp \\\n  test_pe_crypto.cpp \\\n  test_peer_connection.cpp \\\n  test_save_resume.cpp \\\n  test_session.cpp \\\n  test_socks5.cpp \\\n  test_super_seeding.cpp \\\n  test_swarm.cpp \\\n  test_thread_pool.cpp \\\n  test_torrent_status.cpp \\\n  test_tracker.cpp \\\n  test_transfer.cpp \\\n  test_transfer_full_invalid_files.cpp \\\n  test_transfer_no_files.cpp \\\n  test_transfer_partial_valid_files.cpp \\\n  test_utp.cpp \\\n  test_web_seed.cpp \\\n  transfer_sim.hpp \\\n  transfer_sim.cpp \\\n  utils.cpp \\\n  utils.hpp\n\nLIBSIM_SOURCES = \\\n  acceptor.cpp \\\n  default_config.cpp \\\n  high_resolution_clock.cpp \\\n  high_resolution_timer.cpp \\\n  http_proxy.cpp \\\n  http_server.cpp \\\n  io_service.cpp \\\n  pcap.cpp \\\n  queue.cpp \\\n  resolver.cpp \\\n  simulation.cpp \\\n  simulator.cpp \\\n  sink_forwarder.cpp \\\n  socks_server.cpp \\\n  tcp_socket.cpp \\\n  udp_socket.cpp\n\nLIBSIM_HEADERS = \\\n  chrono.hpp \\\n  config.hpp \\\n  function.hpp \\\n  handler_allocator.hpp \\\n  http_proxy.hpp \\\n  http_server.hpp \\\n  noexcept_movable.hpp \\\n  packet.hpp \\\n  pcap.hpp \\\n  pop_warnings.hpp \\\n  push_warnings.hpp \\\n  queue.hpp \\\n  simulator.hpp \\\n  sink.hpp \\\n  sink_forwarder.hpp \\\n  socks_server.hpp \\\n  utils.hpp\n\nLIBSIM_EXTRA = \\\n  CMakeLists.txt \\\n  Jamfile \\\n  Jamroot.jam \\\n  LICENSE \\\n  README.rst\n\nLIBSIM_TESTS = \\\n  acceptor.cpp \\\n  main.cpp \\\n  multi_accept.cpp \\\n  multi_homed.cpp \\\n  null_buffers.cpp \\\n  parse_request.cpp \\\n  resolver.cpp \\\n  timer.cpp \\\n  udp_socket.cpp \\\n  catch.hpp\n\nTEST_SOURCES = \\\n  enum_if.cpp \\\n  test_add_torrent.cpp \\\n  test_alert_manager.cpp \\\n  test_alert_types.cpp \\\n  test_alloca.cpp \\\n  test_apply_pad.cpp \\\n  test_auto_unchoke.cpp \\\n  test_bandwidth_limiter.cpp \\\n  test_bdecode.cpp \\\n  test_bencoding.cpp \\\n  test_bitfield.cpp \\\n  test_bloom_filter.cpp \\\n  test_buffer.cpp \\\n  test_checking.cpp \\\n  test_copy_file.cpp \\\n  test_crc32.cpp \\\n  test_create_torrent.cpp \\\n  test_dht.cpp \\\n  test_dht_storage.cpp \\\n  test_direct_dht.cpp \\\n  test_dos_blocker.cpp \\\n  test_ed25519.cpp \\\n  test_enum_net.cpp \\\n  test_fast_extension.cpp \\\n  test_fence.cpp \\\n  test_ffs.cpp \\\n  test_file.cpp \\\n  test_file_progress.cpp \\\n  test_file_storage.cpp \\\n  test_flags.cpp \\\n  test_generate_peer_id.cpp \\\n  test_gzip.cpp \\\n  test_hash_picker.cpp \\\n  test_hasher.cpp \\\n  test_hasher512.cpp \\\n  test_heterogeneous_queue.cpp \\\n  test_http_connection.cpp \\\n  test_http_parser.cpp \\\n  test_identify_client.cpp \\\n  test_info_hash.cpp \\\n  test_io.cpp \\\n  test_ip_filter.cpp \\\n  test_ip_voter.cpp \\\n  test_listen_socket.cpp \\\n  test_lsd.cpp \\\n  test_magnet.cpp \\\n  test_merkle.cpp \\\n  test_merkle_tree.cpp \\\n  test_mmap.cpp \\\n  test_packet_buffer.cpp \\\n  test_part_file.cpp \\\n  test_pe_crypto.cpp \\\n  test_peer_classes.cpp \\\n  test_peer_list.cpp \\\n  test_peer_priority.cpp \\\n  test_piece_picker.cpp \\\n  test_primitives.cpp \\\n  test_priority.cpp \\\n  test_privacy.cpp \\\n  test_read_piece.cpp \\\n  test_read_resume.cpp \\\n  test_receive_buffer.cpp \\\n  test_recheck.cpp \\\n  test_remap_files.cpp \\\n  test_remove_torrent.cpp \\\n  test_resolve_links.cpp \\\n  test_resume.cpp \\\n  test_session.cpp \\\n  test_session_params.cpp \\\n  test_settings_pack.cpp \\\n  test_sha1_hash.cpp \\\n  test_similar_torrent.cpp \\\n  test_sliding_average.cpp \\\n  test_socket_io.cpp \\\n  test_span.cpp \\\n  test_ssl.cpp \\\n  test_stack_allocator.cpp \\\n  test_stat_cache.cpp \\\n  test_storage.cpp \\\n  test_store_buffer.cpp \\\n  test_string.cpp \\\n  test_tailqueue.cpp \\\n  test_threads.cpp \\\n  test_time.cpp \\\n  test_time_critical.cpp \\\n  test_timestamp_history.cpp \\\n  test_torrent.cpp \\\n  test_torrent_info.cpp \\\n  test_torrent_list.cpp \\\n  test_tracker.cpp \\\n  test_truncate.cpp \\\n  test_transfer.cpp \\\n  test_upnp.cpp \\\n  test_url_seed.cpp \\\n  test_utf8.cpp \\\n  test_utp.cpp \\\n  test_web_seed.cpp \\\n  test_web_seed_ban.cpp \\\n  test_web_seed_chunked.cpp \\\n  test_web_seed_http.cpp \\\n  test_web_seed_http_pw.cpp \\\n  test_web_seed_redirect.cpp \\\n  test_web_seed_socks4.cpp \\\n  test_web_seed_socks5.cpp \\\n  test_web_seed_socks5_no_peers.cpp \\\n  test_web_seed_socks5_pw.cpp \\\n  test_xml.cpp \\\n  \\\n  main.cpp \\\n  broadcast_socket.cpp \\\n  broadcast_socket.hpp \\\n  test.cpp \\\n  setup_transfer.cpp \\\n  dht_server.cpp \\\n  udp_tracker.cpp \\\n  peer_server.cpp \\\n  bittorrent_peer.cpp \\\n  make_torrent.cpp \\\n  web_seed_suite.cpp \\\n  swarm_suite.cpp \\\n  test_utils.cpp \\\n  settings.cpp \\\n  print_alerts.cpp \\\n  test.hpp \\\n  setup_transfer.hpp \\\n  dht_server.hpp \\\n  peer_server.hpp \\\n  udp_tracker.hpp \\\n  web_seed_suite.hpp \\\n  swarm_suite.hpp \\\n  test_utils.hpp \\\n  settings.hpp \\\n  make_torrent.hpp \\\n  bittorrent_peer.hpp \\\n  print_alerts.hpp\n\nTEST_TORRENTS = \\\n  absolute_filename.torrent \\\n  backslash_path.torrent \\\n  bad_name.torrent \\\n  base.torrent \\\n  collection.torrent \\\n  collection2.torrent \\\n  creation_date.torrent \\\n  dht_nodes.torrent \\\n  duplicate_files.torrent \\\n  duplicate_web_seeds.torrent \\\n  empty_httpseed.torrent \\\n  empty_path.torrent \\\n  empty_path_multi.torrent \\\n  empty-files-1.torrent \\\n  empty-files-2.torrent \\\n  empty-files-3.torrent \\\n  empty-files-4.torrent \\\n  empty-files-5.torrent \\\n  hidden_parent_path.torrent \\\n  httpseed.torrent \\\n  invalid_file_size.torrent \\\n  invalid_filename.torrent \\\n  invalid_filename2.torrent \\\n  invalid_info.torrent \\\n  invalid_name.torrent \\\n  invalid_name2.torrent \\\n  invalid_name3.torrent \\\n  invalid_path_list.torrent \\\n  invalid_piece_len.torrent \\\n  invalid_pieces.torrent \\\n  invalid_symlink.torrent \\\n  large.torrent \\\n  large_piece_size.torrent \\\n  long_name.torrent \\\n  many_pieces.torrent \\\n  missing_path_list.torrent \\\n  missing_piece_len.torrent \\\n  negative_file_size.torrent \\\n  negative_piece_len.torrent \\\n  negative_size.torrent \\\n  no_creation_date.torrent \\\n  no_files.torrent \\\n  no_name.torrent \\\n  overlapping_symlinks.torrent \\\n  pad_file.torrent \\\n  pad_file_no_path.torrent \\\n  parent_path.torrent \\\n  sample.torrent \\\n  similar.torrent \\\n  similar2.torrent \\\n  single_multi_file.torrent \\\n  slash_path.torrent \\\n  slash_path2.torrent \\\n  slash_path3.torrent \\\n  string.torrent \\\n  symlink1.torrent \\\n  symlink2.torrent \\\n  symlink_zero_size.torrent \\\n  unaligned_pieces.torrent \\\n  unordered.torrent \\\n  url_list.torrent \\\n  url_list2.torrent \\\n  url_list3.torrent \\\n  url_seed.torrent \\\n  url_seed_multi.torrent \\\n  url_seed_multi_single_file.torrent \\\n  url_seed_multi_space.torrent \\\n  url_seed_multi_space_nolist.torrent \\\n  whitespace_url.torrent \\\n  v2.torrent \\\n  v2_empty_file.torrent \\\n  v2_multipiece_file.torrent \\\n  v2_only.torrent \\\n  v2_invalid_filename.torrent \\\n  v2_mismatching_metadata.torrent \\\n  v2_no_power2_piece.torrent \\\n  v2_invalid_file.torrent \\\n  v2_deep_recursion.torrent \\\n  v2_non_multiple_piece_layer.torrent \\\n  v2_piece_layer_invalid_file_hash.torrent \\\n  v2_incomplete_piece_layer.torrent \\\n  v2_invalid_pad_file.torrent \\\n  v2_invalid_piece_layer.torrent \\\n  v2_invalid_piece_layer_root.torrent \\\n  v2_invalid_piece_layer_size.torrent \\\n  v2_unknown_piece_layer_entry.torrent \\\n  v2_multiple_files.torrent \\\n  v2_bad_file_alignment.torrent \\\n  v2_unordered_files.torrent \\\n  v2_overlong_integer.torrent \\\n  v2_missing_file_root_invalid_symlink.torrent \\\n  v2_symlinks.torrent \\\n  v2_no_piece_layers.torrent \\\n  v2_large_file.torrent \\\n  v2_large_offset.torrent \\\n  v2_piece_size.torrent \\\n  v2_zero_root.torrent \\\n  v2_zero_root_small.torrent \\\n  v2_hybrid.torrent \\\n  v2_hybrid-missing-tailpad.torrent \\\n  v2_invalid_root_hash.torrent \\\n  zero.torrent \\\n  zero2.torrent\n\nMUTABLE_TEST_TORRENTS = \\\n  test1.torrent \\\n  test1_pad_files.torrent \\\n  test1_single.torrent \\\n  test1_single_padded.torrent \\\n  test2.torrent \\\n  test2_pad_files.torrent \\\n  test3.torrent \\\n  test3_pad_files.torrent\n\nTEST_EXTRA = Jamfile \\\n  Jamfile                    \\\n  CMakeLists.txt             \\\n  $(addprefix test_torrents/,${TEST_TORRENTS}) \\\n  $(addprefix mutable_test_torrents/,${MUTABLE_TEST_TORRENTS}) \\\n  root1.xml                          \\\n  root2.xml                          \\\n  root3.xml                          \\\n  ssl/regenerate_test_certificate.sh \\\n  ssl/dhparams.pem                   \\\n  ssl/invalid_peer_certificate.pem   \\\n  ssl/invalid_peer_private_key.pem   \\\n  ssl/peer_certificate.pem           \\\n  ssl/peer_private_key.pem           \\\n  ssl/root_ca_cert.pem               \\\n  ssl/root_ca_private.pem            \\\n  ssl/server.pem                     \\\n  zeroes.gz \\\n  corrupt.gz \\\n  invalid1.gz \\\n  utf8_test.txt \\\n  web_server.py \\\n  socks.py \\\n  http_proxy.py \\\n  root1.xml \\\n  root2.xml \\\n  root3.xml\n\ndist: FORCE\n\t(cd docs; make)\n\trm -rf libtorrent-rasterbar-${VERSION} libtorrent-rasterbar-${VERSION}.tar.gz\n\tmkdir libtorrent-rasterbar-${VERSION}\n\trsync -R ${EXTRA_DIST} \\\n    $(addprefix src/,${SOURCES}) \\\n    $(addprefix src/kademlia/,${KADEMLIA_SOURCES}) \\\n    $(addprefix include/libtorrent/,${HEADERS}) \\\n    $(addprefix examples/,${EXAMPLE_FILES}) \\\n    $(addprefix tools/,${TOOLS_FILES}) \\\n    $(addprefix bindings/python/,${PYTHON_FILES}) \\\n    $(addprefix test/,${TEST_SOURCES}) \\\n    $(addprefix test/,${TEST_EXTRA}) \\\n    $(addprefix simulation/,${SIM_SOURCES}) \\\n    $(addprefix deps/try_signal/,${TRY_SIGNAL}) \\\n    $(addprefix deps/asio-gnutls/,${ASIO_GNUTLS}) \\\n    $(addprefix simulation/libsimulator/,${LIBSIM_EXTRA}) \\\n    $(addprefix simulation/libsimulator/test,${LIBSIM_TEST}) \\\n    $(addprefix simulation/libsimulator/include/simulator/,${LIBSIM_HEADERS}) \\\n    $(addprefix simulation/libsimulator/src/,${LIBSIM_SOURCES}) \\\n    $(addprefix src/ed25519/,$(ED25519_SOURCE)) \\\n    libtorrent-rasterbar-${VERSION}\n\ttar -czf libtorrent-rasterbar-${VERSION}.tar.gz libtorrent-rasterbar-${VERSION}\n\nFORCE:\n\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.013671875,
          "content": "See ChangeLog\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.669921875,
          "content": ".. image:: docs/img/logo-color-text.png\n\n.. image:: https://github.com/arvidn/libtorrent/actions/workflows/windows.yml/badge.svg\n    :target: https://github.com/arvidn/libtorrent/actions/workflows/windows.yml\n\n.. image:: https://github.com/arvidn/libtorrent/actions/workflows/macos.yml/badge.svg\n    :target: https://github.com/arvidn/libtorrent/actions/workflows/macos.yml\n\n.. image:: https://github.com/arvidn/libtorrent/actions/workflows/linux.yml/badge.svg\n    :target: https://github.com/arvidn/libtorrent/actions/workflows/linux.yml\n\n.. image:: https://github.com/arvidn/libtorrent/actions/workflows/python.yml/badge.svg\n    :target: https://github.com/arvidn/libtorrent/actions/workflows/python.yml\n\n.. image:: https://ci.appveyor.com/api/projects/status/w7teauvub5813mew/branch/RC_2_0?svg=true\n    :target: https://ci.appveyor.com/project/arvidn/libtorrent/branch/RC_2_0\n\n.. image:: https://api.cirrus-ci.com/github/arvidn/libtorrent.svg?branch=RC_2_0\n    :target: https://cirrus-ci.com/github/arvidn/libtorrent\n\n.. image:: https://oss-fuzz-build-logs.storage.googleapis.com/badges/libtorrent.svg\n    :target: https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&q=proj%3Alibtorrent&can=1\n\n.. image:: https://codecov.io/github/arvidn/libtorrent/coverage.svg?branch=RC_2_0\n    :target: https://codecov.io/github/arvidn/libtorrent?branch=RC_2_0&view=all#sort=missing&dir=desc\n\n.. image:: https://www.openhub.net/p/rasterbar-libtorrent/widgets/project_thin_badge.gif\n    :target: https://www.openhub.net/p/rasterbar-libtorrent\n\n.. image:: https://bestpractices.coreinfrastructure.org/projects/3020/badge\n    :target: https://bestpractices.coreinfrastructure.org/en/projects/3020\n\nlibtorrent is an open source C++ library implementing the BitTorrent protocol,\nalong with most popular extensions, making it suitable for real world\ndeployment. It is configurable to be able to fit both servers and embedded\ndevices.\n\nThe main goals of libtorrent are to be efficient and easy to use.\n\nSee `libtorrent.org`__ for more detailed build and usage instructions.\n\n.. __: https://libtorrent.org\n\nTo build with boost-build, make sure boost and boost-build is installed and run:\n\n   b2\n\nIn the libtorrent root. To build the examples, run ``b2`` in the ``examples``\ndirectory.\n\nSee `building.html`__ for more details on how to build and which configuration\noptions are available. For python bindings, see `the python docs`__.\n\nlibtorrent `ABI report`_.\n\n.. _`ABI report`: https://abi-laboratory.pro/index.php?view=timeline&l=libtorrent\n\nlibtorrent package versions in linux distributions, on repology_.\n\n.. _repology: https://repology.org/project/libtorrent-rasterbar/versions\n\n.. __: docs/building.rst\n.. __: docs/python_binding.rst\n\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 4.23046875,
          "content": "version: \"{build}\"\nbranches:\n  only:\n    - master\n    - RC_2_0\n    - RC_1_2\n    - RC_1_1\nimage: Visual Studio 2017\nclone_depth: 1\nenvironment:\n  matrix:\n    - variant: debug\n      compiler: gcc\n      model: 32\n      crypto: openssl\n      ssl_lib: /usr/local/include\n      ssl_include: /usr/local/lib\n      lib: 1\n    - cmake: 1\n    - variant: release\n      compiler: msvc-14.1\n      model: 64\n      crypto: openssl\n      ssl_lib: c:\\OpenSSL-v111-Win64\\lib\n      ssl_include: c:\\OpenSSL-v111-Win64\\include\n      tests: 1\n\nartifacts:\n  - path: bindings/python/dist/*\n    name: python-module\n\ninstall:\n  - git submodule update --init --recursive\n  - set ROOT_DIRECTORY=%CD%\n  - cd %ROOT_DIRECTORY%\n  - if not defined api ( set api=\"desktop\" )\n  - if not defined compiler ( set compiler=\"\" )\n  - if not defined crypto ( set crypto=built-in )\n  - if not defined ssl_lib ( set ssl_lib=c:\\ )\n  - if not defined ssl_include ( set ssl_include=c:\\ )\n  - cd %ROOT_DIRECTORY%\n  - set BOOST_ROOT=c:\\Libraries\\boost_1_69_0\n  - set BOOST_BUILD_PATH=%BOOST_ROOT%\\tools\\build\n  - echo %BOOST_ROOT%\n  - echo %BOOST_BUILD_PATH%\n  - set PATH=%PATH%;%BOOST_BUILD_PATH%\n  - ps: '\"using msvc : 14.1 ;`nusing gcc ;`nusing python : 3.7 : c:\\\\Python37-x64 : c:\\\\Python37-x64\\\\include : c:\\\\Python37-x64\\\\libs ;`n\" | Set-Content $env:HOMEDRIVE\\$env:HOMEPATH\\user-config.jam'\n  - type %HOMEDRIVE%%HOMEPATH%\\user-config.jam\n  - cd %ROOT_DIRECTORY%\n  - set PATH=c:\\msys64\\mingw32\\bin;%PATH%\n  - g++ --version\n  - set PATH=c:\\Python37-x64;%PATH%\n  - set PYTHON_INTERPRETER=c:\\Python37-x64\\python.exe\n  - python --version\n  - echo %ROOT_DIRECTORY%\n  - cd %BOOST_BUILD_PATH%\n  - bootstrap.bat >nul\n  - cd %ROOT_DIRECTORY%\n\nbuild_script:\n\n  # just the library\n  - cd %ROOT_DIRECTORY%\n  - if defined lib (\n    b2.exe --hash openssl-lib=%ssl_lib% openssl-include=%ssl_include% warnings=all warnings-as-errors=on %compiler% address-model=%model% picker-debugging=on invariant-checks=full variant=%variant% link=shared crypto=%crypto% asserts=on export-extra=on windows-api=%api% windows-version=win10 cxxstd=14\n    )\n\n  # test\n  - cd %ROOT_DIRECTORY%\\test\n  - if defined tests (\n    b2.exe --hash openssl-lib=%ssl_lib% openssl-include=%ssl_include% warnings=all warnings-as-errors=on %compiler% address-model=%model% picker-debugging=on invariant-checks=full variant=%variant% link=shared crypto=%crypto% asserts=on export-extra=on windows-api=%api% windows-version=win10 testing.execute=off deterministic-tests\n    )\n\n  # python binding\n  - cd %ROOT_DIRECTORY%\\bindings\\python\n  # we use 64 bit python builds\n  # boost.python itself doesn't build warning free, so we can't build\n  # with warnings-as-errors\n  - if defined python (\n    b2.exe --hash openssl-lib=%ssl_lib% openssl-include=%ssl_include% warnings=all %compiler% address-model=%model% picker-debugging=on invariant-checks=full variant=%variant% link=shared crypto=%crypto% asserts=on export-extra=on windows-api=%api% windows-version=win10 libtorrent-link=shared stage_module stage_dependencies\n    )\n  - if defined python_dist (\n    c:\\Python37-x64\\python.exe setup.py bdist --format=msi\n    )\n\n  # minimal support for cmake build\n  # we need to build the boost libraries we use with C++14\n  # and stage it for cmake to pick up\n  - if defined cmake (\n    cd %BOOST_ROOT% &&\n    bjam cxxstd=14 release --with-python --with-system --layout=system address-model=64 link=shared stage &&\n    cd %ROOT_DIRECTORY% &&\n    mkdir build &&\n    cd build &&\n    cmake -DBOOST_LIBRARYDIR=%BOOST_ROOT%\\stage\\lib -DCMAKE_CXX_STANDARD=14 -Dbuild_tests=ON -Dbuild_examples=ON -Dbuild_tools=ON -Dpython-bindings=%python% -Dboost-python-module-name=\"python\" -Dskip-python-runtime-test=true -DPython_ADDITIONAL_VERSIONS=\"2.7\" -G \"Visual Studio 15 2017\" -A x64 .. &&\n    cmake --build . --config Release --parallel %NUMBER_OF_PROCESSORS% -- -verbosity:minimal\n    )\n\ntest_script:\n  - cd %ROOT_DIRECTORY%\\test\n  - if defined tests (\n    appveyor-retry b2.exe -l500 --hash openssl-lib=%ssl_lib% openssl-include=%ssl_include% warnings=all warnings-as-errors=on %compiler% address-model=%model% picker-debugging=on invariant-checks=full variant=%variant% link=shared crypto=%crypto% asserts=on export-extra=on windows-api=%api% windows-version=win10 deterministic-tests\n    )\n\n  - if defined cmake (\n    appveyor-retry ctest\n    )\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "clang_tidy.jam",
          "type": "blob",
          "size": 3.8935546875,
          "content": "#  Copyright (c) 2018 Arvid Norberg (arvid@libtorrent.org)\n#\n#  Use, modification and distribution is subject to the Boost Software\n#  License Version 1.0. (See accompanying file LICENSE_1_0.txt or\n#  http://www.boost.org/LICENSE_1_0.txt)\n\nimport common ;\nimport toolset ;\nimport feature ;\n\nfeature.extend toolset : clang_tidy ;\n\ngenerators.register-c-compiler clang_tidy.compile.c++ : CPP : OBJ : <toolset>clang_tidy ;\ngenerators.register-c-compiler clang_tidy.compile.c : C : OBJ : <toolset>clang_tidy ;\ngenerators.register-archiver clang_tidy.archive : OBJ : STATIC_LIB : <toolset>clang_tidy ;\ngenerators.register-linker clang_tidy.link : OBJ SEARCHED_LIB STATIC_LIB : EXE : <toolset>clang_tidy ;\ngenerators.register-linker clang_tidy.link.dll : OBJ SEARCHED_LIB STATIC_LIB : SHARED_LIB : <toolset>clang_tidy ;\n\nrule init ( version ? :  command * : options * ) {\n  command = [ common.get-invocation-command clang_tidy : clang-tidy\n    : $(command) ] ;\n\n  # Determine the version\n  if $(command) {\n    local command-string = \\\"$(command)\\\" ;\n    command-string = $(command-string:J=\" \") ;\n    version ?= [ MATCH \"version ([0-9.]+)\"\n      : [ SHELL \"$(command-string) --version\" ] ] ;\n  }\n\n  local condition = [ common.check-init-parameters clang_tidy\n    : version $(version) ] ;\n\n  common.handle-options clang_tidy : $(condition) : $(command) : $(options) ;\n}\n\n###############################################################################\n# Flags\n\ntoolset.flags clang_tidy.compile OPTIONS <cflags> ;\ntoolset.flags clang_tidy.compile.c++ OPTIONS <cxxflags> ;\n\ntoolset.flags clang_tidy.compile DEFINES <define> ;\ntoolset.flags clang_tidy.compile INCLUDES <include> ;\n\ntoolset.flags clang_tidy.compile OPTIONS <optimization>off   : ;\ntoolset.flags clang_tidy.compile OPTIONS <optimization>speed : -O3 ;\ntoolset.flags clang_tidy.compile OPTIONS <optimization>space : -Os ;\n\ntoolset.flags clang_tidy.compile OPTIONS <inlining>off  : -fno-inline ;\n# For clang, 'on' and 'full' are identical.\ntoolset.flags clang_tidy.compile OPTIONS <inlining>on   : -Wno-inline ;\ntoolset.flags clang_tidy.compile OPTIONS <inlining>full : -Wno-inline ;\n\ntoolset.flags clang_tidy.compile OPTIONS <warnings>off : -w ;\ntoolset.flags clang_tidy.compile OPTIONS <warnings>on  : -Wall ;\ntoolset.flags clang_tidy.compile OPTIONS <warnings>all : -Wall -pedantic ;\ntoolset.flags clang_tidy.compile OPTIONS <warnings-as-errors>on : -Werror ;\n\ntoolset.flags clang_tidy.compile OPTIONS <debug-symbols>on : -g ;\ntoolset.flags clang_tidy.compile OPTIONS <profiling>on : -pg ;\ntoolset.flags clang_tidy.compile OPTIONS <rtti>off : -fno-rtti ;\n\nlocal rule cxxstd-flags ( toolset : condition * : options * )\n{\n    toolset.flags $(toolset).compile.c++ OPTIONS $(condition) : $(options) : unchecked ;\n    toolset.flags $(toolset).link OPTIONS $(condition) : $(options) : unchecked ;\n}\n\ncxxstd-flags clang_tidy : <cxxstd>11/<cxxstd-dialect>iso : -std=c++11 ;\ncxxstd-flags clang_tidy : <cxxstd>11/<cxxstd-dialect>gnu : -std=gnu++11 ;\ncxxstd-flags clang_tidy : <cxxstd>14/<cxxstd-dialect>iso : -std=c++14 ;\ncxxstd-flags clang_tidy : <cxxstd>14/<cxxstd-dialect>gnu : -std=gnu++14 ;\ncxxstd-flags clang_tidy : <cxxstd>17/<cxxstd-dialect>iso : -std=c++17 ;\ncxxstd-flags clang_tidy : <cxxstd>17/<cxxstd-dialect>gnu : -std=gnu++17 ;\n\n###############################################################################\n# C and C++ compilation\n\nTOUCH = [ common.file-creation-command ] ;\n\nactions compile.c++ {\n  \"$(CONFIG_COMMAND)\" -quiet -header-filter=* -warnings-as-errors=* \"$(>)\" -- -x c++ $(OPTIONS) -D$(DEFINES) -I\"$(INCLUDES)\" \\\n    && $(TOUCH) \"$(<)\"\n}\n\nactions compile.c {\n  \"$(CONFIG_COMMAND)\" -quiet -header-filter=* -warnings-as-errors=* \"$(>)\" -- -x c $(OPTIONS) -D$(DEFINES) -I\"$(INCLUDES)\" \\\n    && $(TOUCH) \"$(<)\"\n}\n\n###############################################################################\n# Linking\n\nactions archive {\n  $(TOUCH) \"$(<)\"\n}\n\nactions link {\n  $(TOUCH) \"$(<)\"\n}\n\nactions link.dll {\n  $(TOUCH) \"$(<)\"\n}\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "project-config.jam",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.2021484375,
          "content": "[project]\nrequires-python = \">=3.9\"\n\n[tool.cibuildwheel]\nskip = \"{pp*,}\"\n\n[tool.cibuildwheel.macos]\nbefore-all = [\n  \"./tools/cibuildwheel/setup_boost.sh $BOOST_VERSION $BOOST_ROOT\",\n  \"brew install openssl\"\n]\ntest-command = [\n  \"cd {project}/bindings/python\",\n  \"python test.py\"\n]\n\n[tool.cibuildwheel.macos.environment]\nBOOST_BUILD_PATH = \"/tmp/boost/tools/build\"\nBOOST_ROOT = \"/tmp/boost\"\nBOOST_VERSION = \"1.83.0\"\nPATH = \"/tmp/boost:$PATH\"\n\n[[tool.cibuildwheel.overrides]]\nbefore-all = [\n  \"./tools/cibuildwheel/setup_boost.sh $BOOST_VERSION $BOOST_ROOT\",\n  \"./tools/cibuildwheel/setup_ccache_on_manylinux.sh\",\n  \"./tools/cibuildwheel/setup_openssl.sh\",\n  \"yum install -y glibc-static\" # needed for libutil.a and libdl.a\n]\nbefore-test = \"ccache -s\"\nselect = \"*-manylinux_*\"\ntest-command = [\n  \"cd {project}/bindings/python\",\n  \"python test.py\"\n]\n\n[tool.cibuildwheel.overrides.environment] # sub-table of previous block!\nBOOST_BUILD_PATH = \"/tmp/boost/tools/build\"\nBOOST_ROOT = \"/tmp/boost\"\nBOOST_VERSION = \"1.83.0\"\nPATH = \"/usr/local/ccache/bin:/tmp/boost:$PATH\"\n\n[[tool.cibuildwheel.overrides]]\nbefore-all = [\n  \"./tools/cibuildwheel/setup_boost.sh $BOOST_VERSION $BOOST_ROOT\",\n  \"./tools/cibuildwheel/setup_openssl.sh\",\n  \"apk add ccache openssl-dev openssl-libs-static\"\n]\nbefore-test = \"ccache -s\"\nselect = \"*-musllinux_*\"\ntest-command = [\n  \"cd {project}/bindings/python\",\n  \"python test.py\"\n]\n\n[tool.cibuildwheel.overrides.environment] # sub-table of previous block!\nBOOST_BUILD_PATH = \"/tmp/boost/tools/build\"\nBOOST_ROOT = \"/tmp/boost\"\nBOOST_VERSION = \"1.83.0\"\nPATH = \"/usr/lib/ccache/bin:/tmp/boost:$PATH\"\n\n[[tool.cibuildwheel.overrides]]\nbefore-all = [\n  \"bash -c './tools/cibuildwheel/setup_boost.sh $BOOST_VERSION $BOOST_ROOT'\"\n]\nselect = \"*-win32\"\n\n[[tool.cibuildwheel.overrides]]\nbefore-all = [\n  \"bash -c './tools/cibuildwheel/setup_boost.sh $BOOST_VERSION $BOOST_ROOT'\"\n]\nselect = \"*-win_amd64\"\n\n[tool.cibuildwheel.windows]\ntest-command = '''bash -c \"cd '{project}/bindings/python' && python test.py\"'''\n\n[tool.cibuildwheel.windows.environment]\nBOOST_BUILD_PATH = 'c:/boost/tools/build'\nBOOST_ROOT = 'c:/boost'\nBOOST_VERSION = \"1.83.0\"\nPATH = 'c:/boost;$PATH'\n\n[tool.isort]\nprofile = \"google\"\nsingle_line_exclusions = []\nsrc_paths = [\".\"]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.390625,
          "content": "[flake8]\n# https://black.readthedocs.io/en/stable/compatible_configs.html#flake8\nmax-line-length = 88\nextend-ignore = E203, W503\n\n[mypy]\nwarn_return_any = True\nwarn_redundant_casts = True\nwarn_unused_ignores = True\nwarn_unreachable = True\nwarn_unused_configs = True\n#disallow_any_unimported = True\ndisallow_untyped_defs = True\ndisallow_incomplete_defs = True\nmypy_path = bindings/python/install_data\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.099609375,
          "content": "#!/usr/bin/env python3\nimport os\nimport runpy\n\nos.chdir(\"bindings/python\")\nrunpy.run_path(\"setup.py\")\n"
        },
        {
          "name": "simulation",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}