{
  "metadata": {
    "timestamp": 1736566101045,
    "page": 97,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cemu-project/Cemu",
      "stars": 7575,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.8173828125,
          "content": "AlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: false\nAlignOperands: true\nAlignTrailingComments: true\nAllowShortBlocksOnASingleLine: Empty\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLambdasOnASingleLine: Inline\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel: true\n  AfterClass: true\n  AfterControlStatement: Always\n  AfterEnum: true\n  AfterExternBlock: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterStruct: true\n  AfterUnion: true\n  BeforeElse: true\n  BeforeWhile: true\n  SplitEmptyFunction: false\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: true\nColumnLimit: 0\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nIndentWidth: 4\nKeepEmptyLinesAtTheStartOfBlocks: false\nLanguage: Cpp\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: All\nObjCSpaceAfterProperty: false\nPointerAlignment: Left\nReflowComments: true\nSortIncludes: false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceBeforeCtorInitializerColon: true\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Latest\nTabWidth: 4\nUseTab: Always\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6318359375,
          "content": "*.slo\n*.lo\n*.o\n*.obj\n*.gch\n*.pch\n*.so\n*.dylib\n*.dll\n*.a\n*.lib\n*.exe\n*.out\n*.app\n.vs\n.vscode\n.idea/\n\nbuild/\ncmake-build-*/\nout/\n.cache/\nbin/Cemu_*\nbin/Cemu_*.exe\n\n# Cemu bin files\nbin/otp.bin\nbin/seeprom.bin\nbin/log.txt\nbin/Cemu_*.pdb\nbin/Cemu_*.ilk\nbin/Cemu.exe.backup\nbin/mlc01/*\nbin/settings.xml\nbin/network_services.xml\nbin/title_list_cache.xml\nbin/debugger/*\nbin/sdcard/*\nbin/screenshots/*\nbin/dump/*\nbin/cafeLibs/*\nbin/portable/*\nbin/keys.txt\n\n!bin/shaderCache/info.txt\nbin/shaderCache/*\n\nbin/controllerProfiles/*\n\n!bin/gameProfiles/default/*\nbin/gameProfiles/*\n\nbin/graphicPacks/*\n\n# Ignore Finder view option files created by OS X\n.DS_Store"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.607421875,
          "content": "[submodule \"dependencies/ZArchive\"]\n\tpath = dependencies/ZArchive\n\turl = https://github.com/Exzap/ZArchive\n\tshallow = true\n[submodule \"dependencies/cubeb\"]\n\tpath = dependencies/cubeb\n\turl = https://github.com/mozilla/cubeb\n\tshallow = true\n[submodule \"dependencies/vcpkg\"]\n\tpath = dependencies/vcpkg\n\turl = https://github.com/microsoft/vcpkg\n\tshallow = false\n[submodule \"dependencies/Vulkan-Headers\"]\n\tpath = dependencies/Vulkan-Headers\n\turl = https://github.com/KhronosGroup/Vulkan-Headers\n\tshallow = true\n[submodule \"dependencies/imgui\"]\n\tpath = dependencies/imgui\n\turl = https://github.com/ocornut/imgui\n\tshallow = true\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 9.392578125,
          "content": "# Build Instructions\n\n## Table of Contents\n\n- [Windows](#windows)\n- [Linux](#linux)\n   - [Dependencies](#dependencies)\n      - [For Arch and derivatives:](#for-arch-and-derivatives)\n      - [For Debian, Ubuntu and derivatives](#for-debian-ubuntu-and-derivatives)\n      - [For Fedora and derivatives:](#for-fedora-and-derivatives)\n   - [Build Cemu](#build-cemu)\n      - [CMake and Clang](#cmake-and-clang)\n      - [GCC](#gcc)\n      - [Debug Build](#debug-build)\n      - [Troubleshooting Steps](#troubleshooting-steps)\n         - [Compiling Errors](#compiling-errors)\n         - [Building Errors](#building-errors)\n- [macOS](#macos)\n   - [Installing brew](#installing-brew)\n   - [Installing Tool Dependencies](#installing-tool-dependencies)\n   - [Installing Library Dependencies](#installing-library-dependencies)\n   - [Build Cemu using CMake](#build-cemu-using-cmake)\n- [Updating Cemu and source code](#updating-cemu-and-source-code)\n\n## Windows\n\nPrerequisites:\n- git\n- A recent version of Visual Studio 2022 with the following additional components:\n   - C++ CMake tools for Windows\n   - Windows 10/11 SDK\n\nInstructions for Visual Studio 2022:\n\n1. Run `git clone --recursive https://github.com/cemu-project/Cemu`\n2. Open the newly created Cemu directory in Visual Studio using the \"Open a local folder\" option\n3. In the menu select Project -> Configure CMake. Wait until it is done, this may take a long time\n4. You can now build, run and debug Cemu\n\nAny other IDE should also work as long as it has CMake and MSVC support. CLion and Visual Studio Code have been confirmed to work.\n\n## Linux\n\nTo compile Cemu, a recent enough compiler and STL with C++20 support is required! Clang-15 or higher is what we recommend.\n\n### Dependencies\n\n#### For Arch and derivatives:\n`sudo pacman -S --needed base-devel bluez-libs clang cmake freeglut git glm gtk3 libgcrypt libpulse libsecret linux-headers llvm nasm ninja systemd unzip zip`\n\n#### For Debian, Ubuntu and derivatives:\n`sudo apt install -y cmake curl clang-15 freeglut3-dev git libbluetooth-dev libgcrypt20-dev libglm-dev libgtk-3-dev libpulse-dev libsecret-1-dev libsystemd-dev libtool nasm ninja-build`\n\nYou may also need to install `libusb-1.0-0-dev` as a workaround for an issue with the vcpkg hidapi package.\n\nAt Step 3 in [Build Cemu using cmake and clang](#build-cemu-using-cmake-and-clang), use the following command instead:\n   `cmake -S . -B build -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=/usr/bin/clang-15 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-15 -G Ninja -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja`\n\n#### For Fedora and derivatives:\n`sudo dnf install bluez-libs-devel clang cmake cubeb-devel freeglut-devel git glm-devel gtk3-devel kernel-headers libgcrypt-devel libsecret-devel libtool libusb1-devel llvm nasm ninja-build perl-core systemd-devel wayland-protocols-devel zlib-devel zlib-static`\n\n### Build Cemu\n\n#### CMake and Clang\n\n```\ngit clone --recursive https://github.com/cemu-project/Cemu\ncd Cemu\ncmake -S . -B build -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -G Ninja\ncmake --build build\n```\n\n#### GCC\n\nIf you are building using GCC, make sure you have g++ installed:\n- Installation for Arch and derivatives: `sudo pacman -S gcc`\n- Installation for Debian, Ubuntu and derivatives: `sudo apt install g++`\n- Installation for Fedora and derivatives: `sudo dnf install gcc-c++`\n\n```\ngit clone --recursive https://github.com/cemu-project/Cemu\ncd Cemu\ncmake -S . -B build -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -G Ninja\ncmake --build build\n```\n\n#### Debug Build\n\n```\ngit clone --recursive https://github.com/cemu-project/Cemu\ncd Cemu\ncmake -S . -B build -DCMAKE_BUILD_TYPE=debug -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -G Ninja\ncmake --build build\n```\n\nIf you are using GCC, replace `cmake -S . -B build -DCMAKE_BUILD_TYPE=debug -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -G Ninja` with `cmake -S . -B build -DCMAKE_BUILD_TYPE=debug -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -G Ninja`\n\n#### Troubleshooting Steps\n\n##### Compiling Errors\n\nThis section refers to running `cmake -S...` (truncated).\n\n* `vcpkg install failed`\n   * Run the following in the root directory and try running the command again (don't forget to change directories afterwards):\n      * `cd dependencies/vcpkg && git fetch --unshallow`\n* `Please ensure you're using the latest port files with git pull and vcpkg update.`\n   * Either:\n      * Update vcpkg by running by the following command:\n         * `git submodule update --remote dependencies/vcpkg`\n      * If you are sure vcpkg is up to date, check the following logs:\n         * `Cemu/dependencies/vcpkg/buildtrees/wxwidgets/config-x64-linux-out.log`\n         * `Cemu/dependencies/vcpkg/buildtrees/libsystemd/config-x64-linux-dbg-meson-log.txt.log`\n         * `Cemu/dependencies/vcpkg/buildtrees/libsystemd/config-x64-linux-dbg-out.log`\n* Not able to find Ninja.\n   * Add the following and try running the command again:\n      * `-DCMAKE_MAKE_PROGRAM=/usr/bin/ninja`\n* Compiling failed during the boost-build dependency.\n   * It means you don't have a working/good standard library installation. Check the integrity of your system headers and making sure that C++ related packages are installed and intact.\n* Compiling failed during rebuild after `git pull` with an error that mentions RPATH\n   * Add the following and try running the command again:\n      * `-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON`\n* Environment variable `VCPKG_FORCE_SYSTEM_BINARIES` must be set.\n   * Execute the folowing and then try running the command again:\n      * `export VCPKG_FORCE_SYSTEM_BINARIES=1`\n* If you are getting a random error, read the [package-name-and-platform]-out.log and [package-name-and-platform]-err.log for the actual reason to see if you might be lacking the headers from a dependency.\n\n\nIf you are getting a different error than any of the errors listed above, you may either open an issue in this repo or try using [GCC](#gcc). Make sure your standard library and compilers are updated since Cemu uses a lot of modern features!\n\n\n##### Building Errors\n\nThis section refers to running `cmake --build build`.\n\n* `main.cpp.o: in function 'std::__cxx11::basic_string...`\n   * You likely are experiencing a clang-14 issue. This can only be fixed by either lowering the clang version or using GCC, see [GCC](#gcc).\n* `fatal error: 'span' file not found`\n   *  You're either missing `libstdc++` or are using a version that's too old. Install at least v10 with your package manager, eg `sudo apt install libstdc++-10-dev`. See [#644](https://github.com/cemu-project/Cemu/issues/644).\n* `undefined libdecor_xx`\n   * You are likely experiencing an issue with sdl2 package that comes with vcpkg. Delete sdl2 from vcpkg.json in source file and recompile.\n\nIf you are getting a different error than any of the errors listed above, you may either open an issue in this repo or try using [GCC](#gcc). Make sure your standard library and compilers are updated since Cemu uses a lot of modern features!\n\n## macOS\n\nTo compile Cemu, a recent enough compiler and STL with C++20 support is required! LLVM 13 and below\ndon't support the C++20 feature set required, so either install LLVM from Homebrew or make sure that\nyou have a recent enough version of Xcode. Xcode 15 is known to work. The OpenGL graphics API isn't\nsupported on macOS, so Vulkan must be used through the Molten-VK compatibility layer.\n\n### Installing brew\n\n1. `/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"`\n2. Set up the Homebrew shell environment:\n   1. **On an Intel Mac:** `eval \"$(/usr/local/Homebrew/bin/brew shellenv)\"`\n   2. **On an Apple Silicon Mac:** eval `\"$(/opt/homebrew/bin/brew shellenv)\"`\n\n### Installing Tool Dependencies\n\nThe native versions of these can be used regardless of what type of Mac you have.\n\n`brew install git cmake ninja nasm automake libtool`\n\n### Installing Library Dependencies\n\n**On Apple Silicon Macs, Rosetta 2 and the x86_64 version of Homebrew must be used to install these dependencies:**\n1. `softwareupdate --install-rosetta` # Install Rosetta 2 if you don't have it. This only has to be done once\n2. `arch -x86_64 zsh` # run an x64 shell\n3. `/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"`\n4. `eval \"$(/usr/local/Homebrew/bin/brew shellenv)\"`\n\nThen install the dependencies:\n\n`brew install boost molten-vk`\n\n### Build Cemu using CMake\n\n1. `git clone --recursive https://github.com/cemu-project/Cemu`\n2. `cd Cemu`\n3. `cmake -S . -B build -DCMAKE_BUILD_TYPE=release -DCMAKE_OSX_ARCHITECTURES=x86_64 -G Ninja`\n4. `cmake --build build`\n5. You should now have a Cemu executable file in the /bin folder, which you can run using `./bin/Cemu_release`.\n\n#### Troubleshooting steps\n- If step 3 gives you an error about not being able to find ninja, try appending `-DCMAKE_MAKE_PROGRAM=/usr/local/bin/ninja` to the command and running it again.\n\n## Updating Cemu and source code\n1. To update your Cemu local repository, use the command `git pull --recurse-submodules` (run this command on the Cemu root).\n    - This should update your local copy of Cemu and all of its dependencies.\n2. Then, you can rebuild Cemu using the steps listed above, according to whether you use Linux or Windows.\n\nIf CMake complains about Cemu already being compiled or another similar error, try deleting the `CMakeCache.txt` file inside the `build` folder and retry building.\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.9306640625,
          "content": "cmake_minimum_required(VERSION 3.21.1)\n\noption(ENABLE_VCPKG \"Enable the vcpkg package manager\" ON)\noption(MACOS_BUNDLE \"The executable when built on macOS will be created as an application bundle\" OFF)\noption(ALLOW_PORTABLE \"Allow Cemu to be run in portable mode\" ON)\n\n# used by CI script to set version:\nset(EMULATOR_VERSION_MAJOR \"0\" CACHE STRING \"\")\nset(EMULATOR_VERSION_MINOR \"0\" CACHE STRING \"\")\nset(EMULATOR_VERSION_PATCH \"0\" CACHE STRING \"\")\n\nexecute_process(\n\t\tCOMMAND git log --format=%h -1\n\t\tWORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}\n\t\tOUTPUT_VARIABLE GIT_HASH\n\t\tOUTPUT_STRIP_TRAILING_WHITESPACE\n)\nadd_definitions(-DEMULATOR_HASH=${GIT_HASH})\n\nif (ENABLE_VCPKG)\n\t# check if vcpkg is shallow and unshallow it if necessary\n\texecute_process(\n\tCOMMAND git rev-parse --is-shallow-repository\n\tWORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/dependencies/vcpkg\n\tOUTPUT_VARIABLE is_vcpkg_shallow\n\tOUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n\t\n\tif(is_vcpkg_shallow STREQUAL \"true\")\n\t\tmessage(STATUS \"vcpkg is shallow. Unshallowing it now...\")\n\t\texecute_process(\n\t\t\tCOMMAND git fetch --unshallow\n\t\t\tWORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}/dependencies/vcpkg\"\n\t\t\tRESULT_VARIABLE result\n\t\t\tOUTPUT_VARIABLE output\n\t\t)\n\tendif()\n\n\tif(UNIX AND NOT APPLE)\n\t\tset(VCPKG_OVERLAY_PORTS \"${CMAKE_CURRENT_LIST_DIR}/dependencies/vcpkg_overlay_ports_linux\")\n\telseif(APPLE)\n\t\tset(VCPKG_OVERLAY_PORTS \"${CMAKE_CURRENT_LIST_DIR}/dependencies/vcpkg_overlay_ports_mac\")\n\telse()\n\t\tset(VCPKG_OVERLAY_PORTS \"${CMAKE_CURRENT_LIST_DIR}/dependencies/vcpkg_overlay_ports\")\n\tendif()\n\tset(CMAKE_TOOLCHAIN_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/dependencies/vcpkg/scripts/buildsystems/vcpkg.cmake\"\n\t\tCACHE STRING \"Vcpkg toolchain file\")\n\t# Set this so that all the various find_package() calls don't need an explicit\n\t# CONFIG option\n\tset(CMAKE_FIND_PACKAGE_PREFER_CONFIG TRUE)\n\tif (WIN32)\n\t\tset(VCPKG_TARGET_TRIPLET \"x64-windows-static\" CACHE STRING \"\")\n\tendif()\nendif()\n\nproject(Cemu VERSION 2.0.0)\n\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nadd_compile_definitions($<$<CONFIG:Debug>:CEMU_DEBUG_ASSERT>) # if build type is debug, set CEMU_DEBUG_ASSERT\n\nadd_definitions(-DEMULATOR_VERSION_MAJOR=${EMULATOR_VERSION_MAJOR})\nadd_definitions(-DEMULATOR_VERSION_MINOR=${EMULATOR_VERSION_MINOR})\nadd_definitions(-DEMULATOR_VERSION_PATCH=${EMULATOR_VERSION_PATCH})\n\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\n# enable link time optimization for release builds\nset(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE ON)\nset(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELWITHDEBINFO ON)\n\nif (MSVC)\n\tset_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT CemuBin)\n\t# floating point model: precise, fiber safe optimizations\n\tadd_compile_options(/EHsc /fp:precise)\n\tif (CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n\t\t# Speeds up static linking (especially helpful in incremental compilation)\n\t\tif((CMAKE_LINKER MATCHES \".*lld-link.*\") AND (CMAKE_AR MATCHES \".*llvm-lib.*\"))\n\t\t\tset_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY STATIC_LIBRARY_OPTIONS /llvmlibthin)\n\t\tendif()\n  \telse()\n\t  add_compile_options(/GT)\n\tendif()\n\t# enable additional optimization flags for release builds\n\tadd_compile_options($<$<CONFIG:Release,RelWithDebInfo>:/Oi>) # enable intrinsic functions\n\tadd_compile_options($<$<CONFIG:Release,RelWithDebInfo>:/Ot>) # favor speed\nendif()\n\nif (APPLE)\n    enable_language(OBJC OBJCXX)\n    set(CMAKE_OSX_DEPLOYMENT_TARGET \"12.0\")\nendif()\n\nif (UNIX AND NOT APPLE)\n\toption(ENABLE_WAYLAND \"Build with Wayland support\" ON)\n\toption(ENABLE_FERAL_GAMEMODE \"Enables Feral Interactive GameMode Support\" ON)\n\toption(ENABLE_BLUEZ \"Build with Bluez support\" ON)\nendif()\n\noption(ENABLE_OPENGL \"Enables the OpenGL backend\" ON)\noption(ENABLE_VULKAN \"Enables the Vulkan backend\" ON)\noption(ENABLE_DISCORD_RPC \"Enables the Discord Rich Presence feature\" ON)\n\n\n# input backends\nif (WIN32)\n\toption(ENABLE_XINPUT \"Enables the usage of XInput\" ON)\n\toption(ENABLE_DIRECTINPUT \"Enables the usage of DirectInput\" ON)\n\tadd_compile_definitions(HAS_DIRECTINPUT)\nendif()\n\noption(ENABLE_HIDAPI \"Build with HIDAPI\" ON)\noption(ENABLE_SDL \"Enables the SDLController backend\" ON)\n\n# audio backends\nif (WIN32)\n\toption(ENABLE_DIRECTAUDIO \"Enables the directaudio backend\" ON)\n\toption(ENABLE_XAUDIO \"Enables the xaudio backend\" ON)\nendif()\noption(ENABLE_CUBEB \"Enabled cubeb backend\" ON)\n\n# usb hid backends\nif (WIN32)\n\toption(ENABLE_NSYSHID_WINDOWS_HID \"Enables the native Windows HID backend for nsyshid\" ON)\nendif ()\n# libusb and windows hid backends shouldn't be active at the same time; otherwise we'd see all devices twice!\nif (NOT ENABLE_NSYSHID_WINDOWS_HID)\n\toption(ENABLE_NSYSHID_LIBUSB \"Enables the libusb backend for nsyshid\" ON)\nelse ()\n\tset(ENABLE_NSYSHID_LIBUSB OFF CACHE BOOL \"\" FORCE)\nendif ()\nif (ENABLE_NSYSHID_WINDOWS_HID)\n\tadd_compile_definitions(NSYSHID_ENABLE_BACKEND_WINDOWS_HID)\nendif ()\nif (ENABLE_NSYSHID_LIBUSB)\n\tadd_compile_definitions(NSYSHID_ENABLE_BACKEND_LIBUSB)\nendif ()\n\noption(ENABLE_WXWIDGETS \"Build with wxWidgets UI (Currently required)\" ON)\n\nset(THREADS_PREFER_PTHREAD_FLAG true)\nfind_package(Threads REQUIRED)\nfind_package(SDL2 REQUIRED)\nfind_package(CURL REQUIRED)\nfind_package(pugixml REQUIRED)\nfind_package(RapidJSON REQUIRED)\nfind_package(Boost COMPONENTS program_options filesystem nowide REQUIRED)\nfind_package(libzip REQUIRED)\nfind_package(glslang REQUIRED)\nfind_package(ZLIB REQUIRED)\nfind_package(zstd MODULE REQUIRED) # MODULE so that zstd::zstd is available\nfind_package(OpenSSL COMPONENTS Crypto SSL REQUIRED)\nfind_package(glm REQUIRED)\nfind_package(fmt 9 REQUIRED)\nfind_package(PNG REQUIRED)\n\n# glslang versions older than 11.11.0 define targets without a namespace\nif (NOT TARGET glslang::SPIRV AND TARGET SPIRV)\n\tadd_library(glslang::SPIRV ALIAS SPIRV)\nendif()\n\nif (UNIX AND NOT APPLE)\n\tfind_package(X11 REQUIRED)\n\tif (ENABLE_WAYLAND)\n\t\tfind_package(Wayland REQUIRED Client)\n\t\tfind_package(WaylandScanner REQUIRED)\n\t\tfind_package(WaylandProtocols 1.15 REQUIRED)\n\n\t\tecm_add_wayland_client_protocol(WAYLAND_PROTOCOL_SRCS\n\t\t\tPROTOCOL \"${WaylandProtocols_DATADIR}/stable/viewporter/viewporter.xml\"\n\t\t\tBASENAME viewporter)\n\t\tadd_library(CemuWaylandProtocols STATIC ${WAYLAND_PROTOCOL_SRCS})\n\t\ttarget_include_directories(CemuWaylandProtocols PUBLIC \"${CMAKE_CURRENT_BINARY_DIR}\")\n\n\t\tadd_compile_definitions(HAS_WAYLAND)\n\tendif()\n\tfind_package(GTK3 REQUIRED)\n\n\tif(ENABLE_BLUEZ)\n\t\tfind_package(bluez REQUIRED)\n\t\tset(ENABLE_WIIMOTE ON)\n\t\tadd_compile_definitions(HAS_BLUEZ)\n\tendif()\n\nendif()\n\nif (ENABLE_VULKAN)\n\tinclude_directories(\"dependencies/Vulkan-Headers/include\")\nendif()\n\nif (ENABLE_OPENGL)\n\tfind_package(OpenGL REQUIRED)\nendif()\n\nif (ENABLE_DISCORD_RPC)\n\tadd_compile_definitions(ENABLE_DISCORD_RPC)\n\tadd_subdirectory(dependencies/discord-rpc EXCLUDE_FROM_ALL)\n\ttarget_include_directories(discord-rpc INTERFACE ./dependencies/discord-rpc/include)\nendif()\n\nif (ENABLE_HIDAPI)\n\tfind_package(hidapi REQUIRED)\n\tset(ENABLE_WIIMOTE ON)\n\tadd_compile_definitions(HAS_HIDAPI)\nendif ()\n\nif(UNIX AND NOT APPLE)\n\tif(ENABLE_FERAL_GAMEMODE)\n\t\tadd_compile_definitions(ENABLE_FERAL_GAMEMODE)\n\t\tadd_subdirectory(dependencies/gamemode EXCLUDE_FROM_ALL)\n\t\ttarget_include_directories(gamemode INTERFACE ./dependencies/gamemode/lib)\n\tendif()\nendif()\n\nif (ENABLE_WXWIDGETS)\n\tfind_package(wxWidgets 3.2 REQUIRED COMPONENTS base core gl propgrid xrc)\nendif()\n\nif (ENABLE_CUBEB)\n\tif (NOT ENABLE_VCPKG)\n\tfind_package(cubeb)\n\tendif()\n\tif (NOT cubeb_FOUND)\n\t\toption(BUILD_TESTS \"\" OFF)\n\t\toption(BUILD_TOOLS \"\" OFF)\n\t\toption(BUNDLE_SPEEX \"\" OFF)\n\t\tset(USE_WINMM OFF CACHE BOOL \"\")\n\t\tadd_subdirectory(\"dependencies/cubeb\" EXCLUDE_FROM_ALL SYSTEM)\n\t\tset_property(TARGET cubeb PROPERTY MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n\t\tadd_library(cubeb::cubeb ALIAS cubeb)\n\tendif()\n\tadd_compile_definitions(\"HAS_CUBEB=1\")\nendif()\n\nadd_subdirectory(\"dependencies/ih264d\" EXCLUDE_FROM_ALL)\n\nfind_package(ZArchive)\nif (NOT ZArchive_FOUND)\n\tadd_subdirectory(\"dependencies/ZArchive\" EXCLUDE_FROM_ALL)\nendif()\n\nadd_subdirectory(src)\n"
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 0.8310546875,
          "content": "﻿{\n  \"configurations\": [\n    {\n      \"name\": \"RelWithDebInfo\",\n      \"configurationType\": \"RelWithDebInfo\",\n      \"generator\": \"Ninja\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ],\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\"\n    },\n    {\n      \"name\": \"Release\",\n      \"configurationType\": \"Release\",\n      \"generator\": \"Ninja\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ],\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\"\n    },\n    {\n      \"name\": \"Debug\",\n      \"configurationType\": \"Debug\",\n      \"generator\": \"Ninja\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ],\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\"\n    }\n  ]\n}"
        },
        {
          "name": "CODING_STYLE.md",
          "type": "blob",
          "size": 4.091796875,
          "content": "\n# Coding style guidelines for Cemu\n\nThis document describes the latest version of our coding-style guidelines. Since we did not use this style from the beginning, older code may not adhere to these guidelines. Nevertheless, use these rules even if the surrounding code does not match. \n\nCemu comes with a `.clang-format` file which is supported by most IDEs for formatting. Avoid auto-reformatting whole files, PRs with a lot of formatting changes are difficult to review.\n\n## Names for variables, functions and classes\n\n- Always prefix class member variables with `m_`\n- Always prefix static class variables with `s_`\n- For variable names: Camel case, starting with a lower case letter after the prefix. Examples: `m_option`, `s_audioVolume`\n- For functions/class names: Use camel case starting with a capital letter. Examples: `MyClass`, `SetActive`\n- Avoid underscores in variable names after the prefix. Use `m_myVariable` instead of `m_my_variable`\n\n## About types\n\nCemu provides its own set of basic fixed-width types. They are:\n`uint8`, `sint8`, `uint16`, `sint16`, `uint32`, `sint32`, `uint64`, `sint64`. Always use these types over something like `uint32_t`. Using `size_t` is also acceptable where suitable. Avoid C types like `int` or `long`. The only exception is when interacting with external libraries which expect these types as parameters.\n\n## When and where to put brackets\n\nAlways put curly-brackets (`{ }`) on their own line. Example:\n\n```\nvoid FooBar()\n{\n   if (m_hasFoo)\n   {\n       ...\n   }\n}\n```\nAs an exception, you can put short lambdas onto the same line:\n```\nSomeFunc([]() { .... });\n```\nYou can skip brackets for single-statement `if`. Example:\n```\nif (cond)\n    action();\n```\n\n## Printing\n\nAvoid sprintf and similar C-style formatting API. Use `fmt::format()`.  \nIn UI related code you can use `formatWxString`, but be aware that number formatting with this function will be locale dependent!\n\n## Strings and encoding\n\nWe use UTF-8 encoded `std::string` where possible. Some conversions need special handling and we have helper functions for those:\n```cpp\n// std::filesystem::path <-> std::string (in precompiled.h)\nstd::string _pathToUtf8(const fs::path& path);\nfs::path _utf8ToPath(std::string_view input);\n\n// wxString <-> std::string\nwxString wxString::FromUTF8(const std::string& s)\nwxString to_wxString(std::string_view str); // in gui/helpers.h\nstd::string wxString::utf8_string();\n\n```\n\n## Logging\n\nIf you want to write to log.txt use `cemuLog_log()`. The log type parameter should be mostly self-explanatory. Use `LogType::Force` if you always want to log something. For example:  \n`cemuLog_log(LogType::Force, \"The value is {}\", 123);`\n\n## HLE and endianness\n\nA pretty large part of Cemu's code base are re-implementations of various Cafe OS modules (e.g. `coreinit.rpl`, `gx2.rpl`...). These generally run in the context of the emulated process, thus special care has to be taken to use types with the correct size and endianness when interacting with memory.\n\nKeep in mind that the emulated Espresso CPU is 32bit big-endian, while the host architectures targeted by Cemu are 64bit little-endian! \n\nTo keep code simple and remove the need for manual endian-swapping, Cemu has templates and aliases of the basic types with explicit endian-ness.\nFor big-endian types add the suffix `be`. Example: `uint32be`\n\nWhen you need to store a pointer in the guest's memory. Use `MEMPTR<T>`. It will automatically store any pointer as 32bit big-endian. The pointer you store must point to memory that is within the guest address space.\n\n## HLE interfaces\n\nThe implementation for each HLE module is inside a namespace with a matching name. E.g. `coreinit.rpl` functions go into `coreinit` namespace.\n\nTo expose a new function as callable from within the emulated machine, use `cafeExportRegister` or `cafeExportRegisterFunc`. Here is a short example:\n```cpp\nnamespace coreinit\n{\n\tuint32 OSGetCoreCount()\n\t{\n\t\treturn Espresso::CORE_COUNT;\n\t}\n\t\n\tvoid Init()\n\t{\n\t\tcafeExportRegister(\"coreinit\", OSGetCoreCount, LogType::CoreinitThread);\n\t}\n}\n```\nYou may also see some code which uses `osLib_addFunction` directly. This is a deprecated way of registering functions."
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.40625,
          "content": "# **Cemu - Wii U emulator**\n\n[![Build Process](https://github.com/cemu-project/Cemu/actions/workflows/build.yml/badge.svg)](https://github.com/cemu-project/Cemu/actions/workflows/build.yml)\n[![Discord](https://img.shields.io/discord/286429969104764928?label=Cemu&logo=discord&logoColor=FFFFFF)](https://discord.gg/5psYsup)\n[![Matrix Server](https://img.shields.io/matrix/cemu:cemu.info?server_fqdn=matrix.cemu.info&label=cemu:cemu.info&logo=matrix&logoColor=FFFFFF)](https://matrix.to/#/#cemu:cemu.info)\n\nThis is the code repository of Cemu, a Wii U emulator that is able to run most Wii U games and homebrew in a playable state.\nIt's written in C/C++ and is being actively developed with new features and fixes.\n\nCemu is currently only available for 64-bit Windows, Linux & macOS devices.\n\n### Links:\n - [Open Source Announcement](https://www.reddit.com/r/cemu/comments/wwa22c/cemu_20_announcement_linux_builds_opensource_and/)\n - [Official Website](https://cemu.info)\n - [Compatibility List/Wiki](https://wiki.cemu.info/wiki/Main_Page)\n - [Official Subreddit](https://reddit.com/r/Cemu)\n - [Official Discord](https://discord.gg/5psYsup)\n - [Official Matrix Server](https://matrix.to/#/#cemu:cemu.info)\n - [Setup Guide](https://cemu.cfw.guide)\n\n#### Other relevant repositories:\n - [Cemu-Language](https://github.com/cemu-project/Cemu-Language)\n - [Cemu's Community Graphic Packs](https://github.com/cemu-project/cemu_graphic_packs)\n\n## Download\n\nYou can download the latest Cemu releases for Windows, Linux and Mac from the [GitHub Releases](https://github.com/cemu-project/Cemu/releases/). For Linux you can also find Cemu on [flathub](https://flathub.org/apps/info.cemu.Cemu).\n\nOn Windows Cemu is currently only available in a portable format so no installation is required besides extracting it in a safe place.\n\nThe native macOS build is currently purely experimental and should not be considered stable or ready for issue-free gameplay. There are also known issues with degraded performance due to the use of MoltenVK and Rosetta for ARM Macs. We appreciate your patience while we improve Cemu for macOS.\n\nPre-2.0 releases can be found on Cemu's [changelog page](https://cemu.info/changelog.html).\n\n## Build Instructions\n\nTo compile Cemu yourself on Windows, Linux or macOS, view [BUILD.md](/BUILD.md).\n\n## Issues\n\nIssues with the emulator should be filed using [GitHub Issues](https://github.com/cemu-project/Cemu/issues).  \nThe old bug tracker can be found at [bugs.cemu.info](https://bugs.cemu.info) and still contains relevant issues and feature suggestions.\n\n## Contributing\n\nPull requests are very welcome. For easier coordination you can visit the developer discussion channel on [Discord](https://discord.gg/5psYsup) or alternatively the [Matrix Server](https://matrix.to/#/#cemu:cemu.info).\nBefore submitting a pull request, please read and follow our code style guidelines listed in [CODING_STYLE.md](/CODING_STYLE.md).\n\nIf coding isn't your thing, testing games and making detailed bug reports or updating the (usually outdated) compatibility wiki is also appreciated!\n\nQuestions about Cemu's software architecture can also be answered on Discord (or through the Matrix bridge).\n\n## License\nCemu is licensed under [Mozilla Public License 2.0](/LICENSE.txt). Exempt from this are all files in the dependencies directory for which the licenses of the original code apply as well as some individual files in the src folder, as specified in those file headers respectively.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 1.1630859375,
          "content": "{\n  \"name\": \"cemu\",\n  \"version-string\": \"1.0\",\n  \"builtin-baseline\": \"a4275b7eee79fb24ec2e135481ef5fce8b41c339\",\n  \"dependencies\": [\n    \"pugixml\",\n    \"zlib\",\n    \"zstd\",\n    {\n      \"name\": \"libzip\",\n      \"default-features\": false\n    },\n    \"rapidjson\",\n    \"sdl2\",\n    \"boost-tokenizer\",\n    \"boost-container\",\n    \"boost-program-options\",\n    \"boost-nowide\",\n    \"boost-algorithm\",\n    \"boost-functional\",\n    \"boost-optional\",\n    \"boost-signals2\",\n    \"boost-asio\",\n    \"boost-ptr-container\",\n    \"boost-property-tree\",\n    \"boost-static-string\",\n    \"boost-random\",\n    \"fmt\",\n    \"hidapi\",\n    \"libpng\",\n    \"glm\",\n    {\n      \"name\": \"glslang\",\n      \"default-features\": false\n    },\n    \"zstd\",\n    {\n      \"name\": \"wxwidgets\",\n      \"default-features\": false\n    },\n    \"openssl\",\n    {\n      \"name\": \"curl\",\n      \"default-features\": false,\n      \"features\": [ \"openssl\" ]\n    },\n    {\n      \"name\": \"dbus\",\n      \"default-features\": false,\n      \"platform\": \"linux\"\n    },\n    {\n      \"name\": \"tiff\",\n      \"default-features\": false,\n      \"features\": [\"jpeg\", \"zip\"]\n    },\n    \"libusb\"\n  ],\n  \"overrides\": [\n    {\n      \"name\": \"sdl2\",\n      \"version\": \"2.30.3\"\n    }\n  ]\n}\n"
        }
      ]
    }
  ]
}