{
  "metadata": {
    "timestamp": 1736566122555,
    "page": 124,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PaddlePaddle/Paddle-Lite",
      "stars": 7003,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.8193359375,
          "content": "# This file is used by clang-format to autoformat paddle source code\n#\n# The clang-format is part of llvm toolchain.\n# It need to install llvm and clang to format source code style.\n#\n# The basic usage is,\n#   clang-format -i -style=file PATH/TO/SOURCE/CODE\n#\n# The -style=file implicit use \".clang-format\" file located in one of \n# parent directory. \n# The -i means inplace change.\n#\n# The document of clang-format is \n#   http://clang.llvm.org/docs/ClangFormat.html\n#   http://clang.llvm.org/docs/ClangFormatStyleOptions.html\n---\nLanguage:        Cpp\nBasedOnStyle:  Google\nIndentWidth:     2\nTabWidth:        2\nContinuationIndentWidth: 4\nAccessModifierOffset: -1  # The private/protected/public has no indent in class\nStandard:  Cpp11 \nAllowAllParametersOfDeclarationOnNextLine: true\nBinPackParameters: false\nBinPackArguments: false\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.068359375,
          "content": "Checks: >\n  *\n  -android-*\n  -bugprone-bool-pointer-implicit-conversion\n  -cert-env33-c\n  -cert-dcl50-cpp\n  -cert-dcl59-cpp\n  -cppcoreguidelines-*\n  -fuchsia-*\n  -google-*\n  google-default-arguments\n  google-explicit-constructor\n  google-runtime-member-string-references\n  google-runtime-operator\n  -hicpp-braces-around-statements\n  -hicpp-named-parameter\n  -hicpp-no-array-decay\n  -hicpp-no-assembler\n  -hicpp-no-malloc\n  -hicpp-function-size\n  -hicpp-special-member-functions\n  -hicpp-vararg\n  -llvm-*\n  -objc-*\n  -readability-else-after-return\n  -readability-implicit-bool-conversion\n  -readability-named-parameter\n  -readability-simplify-boolean-expr\n  -readability-braces-around-statements\n  -readability-identifier-naming\n  -readability-function-size\n  -readability-redundant-member-init\n  -misc-bool-pointer-implicit-conversion\n  -misc-definitions-in-headers\n  -misc-unused-alias-decls\n  -misc-unused-parameters\n  -misc-unused-using-decls\n  -modernize-use-using\n  -modernize-use-default-member-init\n  -clang-diagnostic-*\n  -clang-analyzer-*\nWarningsAsErrors: '*'\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nFormatStyle:     none\nUser:            allonli\nCheckOptions:    \n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '1'\n  - key:             google-readability-function-size.StatementThreshold\n    value:           '800'\n  - key:             google-readability-namespace-comments.ShortNamespaceLines\n    value:           '10'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n  - key:             modernize-loop-convert.MaxCopySize\n    value:           '16'\n  - key:             modernize-loop-convert.MinConfidence\n    value:           reasonable\n  - key:             modernize-loop-convert.NamingStyle\n    value:           CamelCase\n  - key:             modernize-pass-by-value.IncludeStyle\n    value:           llvm\n  - key:             modernize-replace-auto-ptr.IncludeStyle\n    value:           llvm\n  - key:             modernize-use-nullptr.NullMacros\n    value:           'NULL'\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.669921875,
          "content": "# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.lib\n*.a\n\n# Executables\n*.exe\n*.out\n*.app\n\n.DS_Store\n\nbuild/\nbuild_fpga/\ndocs/_build/\n\n.idea/\n\nCMakeCache.txt\n\nCMakeFiles/\n\nMakefile\n\ncmake_install.cmake\n\n*.cbp\n\npaddle-mobile.cbp\n\n.idea\n\ncompile_commands.json\n\ncmake-build-debug/\ncmake-build-release/\n\ntest/models/\n\ntest/images/\n\n*.pyc\n\n# model\n*.nb\n*.svg\n*.dot\n\n# vim intermediate files\n*.swp\n\n# Emacs intermediate files\n*~\n\n# CMake building directory\nbuild\n\n# clion building directories\ncmake-build-debug\ncmake-build-release\n\n# vscode\n.vscode\n\n# ios\ntools/libomp.a\n\n# ios demo\ndemo/ios/PaddleMobileDemo/PaddleMobileDemo/googlenet_combine/\ndemo/ios/PaddleMobileDemo/PaddleMobileDemo/*.jpg\ndemo/ios/PaddleMobileDemo/PaddleMobileDemo/PaddleMobile/*.a\n*.xcuserstate\n/tools/quantification/quantify\n\n# metal\nPodfile.lock\nmetal/Pods/\nSwiftProtobuf.framework\npaddle-mobile.xcworkspace\nmetal/models/\nmetal/images/\n*.a\nmetal/paddle-mobile/paddle-mobile/CPU/libpaddle-mobile.a\n*.xcuserdatad/\n*/xcuserdata/\n/venv/\n\nmetal/paddle-mobile-demo/paddle-mobile-demo/images\nmetal/paddle-mobile-demo/paddle-mobile-demo/models\nmetal/paddle-mobile-demo/paddle-mobile-demo/Resources\nmetal/paddle-mobile-demo/paddle-mobile-demo/Resources/images\nmetal/paddle-mobile-demo/paddle-mobile-demo/Resources/models\nmetal/MobileNetDemo/MobileNetDemo/Resources\n\n#flatbuffers\nlite/model_parser/flatbuffers/framework_generated.h\nlite/model_parser/flatbuffers/param_generated.h\nlite/backends/opencl/utils/cache_generated.h\nbuild*\nthird-party/*\n\n# hiai libs\nai_ddk_lib*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.666015625,
          "content": "[submodule \"third-party/gflags\"]\n\tpath = third-party/gflags\n\turl = https://github.com/gflags/gflags.git\n[submodule \"third-party/googletest\"]\n\tpath = third-party/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"third-party/protobuf-mobile\"]\n\tpath = third-party/protobuf-mobile\n\turl = https://github.com/tensor-tang/protobuf.git\n[submodule \"third-party/protobuf-host\"]\n\tpath = third-party/protobuf-host\n\turl = https://github.com/protocolbuffers/protobuf.git\n[submodule \"third-party/glog\"]\n\tpath = third-party/glog\n\turl = https://github.com/google/glog.git\n[submodule \"third-party/pybind\"]\n\tpath = third-party/pybind\n\turl = https://github.com/pybind/pybind11.git\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.8583984375,
          "content": "repos:\n-   repo: https://github.com/Lucas-C/pre-commit-hooks.git\n    sha: v1.0.1\n    hooks:\n    -   id: remove-crlf\n        files: (?!.*third_party)^.*$|(?!.*book)^.*$\n        exclude: ^(third-party/|metal/|web/)\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    sha: 5bf6c09bfa1297d3692cadd621ef95f1284e33c0\n    hooks:\n    -   id: check-added-large-files\n    -   id: check-merge-conflict\n    -   id: check-symlinks\n    -   id: detect-private-key\n        files: (?!.*third_party)^.*$|(?!.*book)^.*$\n    -   id: end-of-file-fixer\n        exclude: ^(third-party/)\n-   repo: local\n    hooks:\n    -   id: clang-format-with-version-check\n        name: clang-format\n        description: Format files with ClangFormat.\n        entry: bash ./tools/codestyle/clang_format.hook -i\n        language: system\n        files: \\.(c|cc|cxx|cpp|cu|cl|h|hpp|hxx|proto|mm|m|metal)$\n        exclude: ^(third-party/|metal/|web/)\n-   repo: local\n    hooks:\n    -   id: cpplint-cpp-source\n        name: cpplint\n        description: Check C++ code style using cpplint.py.\n        entry: bash ./tools/codestyle/cpplint_pre_commit.hook\n        language: system\n        files: \\.(c|cc|cxx|cpp|cu|cl|h|hpp|hxx)$\n        exclude: ^(third-party/) | ^(metal/) | ^(web/) | ^(lite/kernels/metal/|lite/backends/metal/)\n#-   repo: local\n    #hooks:\n    #-   id: pylint-doc-string\n        #name: pylint\n        #description: Check python docstring style using docstring_checker.\n        #entry: bash ./tools/codestyle/pylint_pre_commit.hook\n        #language: system\n        #files: \\.(py)$\n-   repo: local\n    hooks:\n    -   id: copyright_checker\n        name: copyright_checker\n        entry: python3 ./tools/codestyle/copyright.hook\n        language: system\n        files: \\.(c|cc|cxx|cpp|cu|cl|h|hpp|hxx|proto|py|mm|m|metal)$\n        exclude: (?!.*third_party)^.*$|(?!.*book)^.*$\n        exclude: ^(third-party/|metal/|web/)\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.6923828125,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.6\"\n    # You can also specify other tool versions:\n    # nodejs: \"16\"\n    # rust: \"1.55\"\n    # golang: \"1.17\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n   configuration: docs/conf.py\n\n# If using Sphinx, optionally build your docs in additional formats such as PDF\n# formats:\n#    - pdf\n\n# Optionally declare the Python requirements required to build your docs\npython:\n   install:\n   - requirements: docs/requirements.txt\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6953125,
          "content": "language: cpp\ncache: ccache\nsudo: required\ndist: xenial\n\nos:\n  - linux\n\naddons:\n  apt:\n    packages:\n#      - git\n#      - python\n#      - python-pip\n#      - python2.7-dev\n#      - libc6-i386\n#      - curl\n      - clang-format-3.8\n        \nbefore_install:\n  - sudo pip install cpplint pre-commit==1.10.3\n  - sudo ln -s /usr/bin/clang-format-3.8 /usr/bin/clang-format\n  # Download and install recent cmake\n\nscript:\n  - | \n    function timeout() { perl -e 'alarm shift; exec @ARGV' \"$@\"; }\n  - |\n    timeout 600 .travis/pre-commit-job.sh # 10min timeout\n    RESULT=$?; if [ $RESULT -eq 0 ] || [ $RESULT -eq 142 ]; then true; else exit 1; fi;\n\nnotifications:\n  email:\n    on_success: change\n    on_failure: always\n"
        },
        {
          "name": ".travis",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.1328125,
          "content": "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License\n\ncmake_minimum_required(VERSION 3.0)\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\nset(PADDLE_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})\nset(PADDLE_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# c++ standard\nif(LITE_WITH_METAL)\n  set(CMAKE_CXX_STANDARD 14)\nelse()\n  set(CMAKE_CXX_STANDARD 11)\nendif()\n\n# Host system configurations\ninclude(system)\n# Paddlelite functions and macros\ninclude(functions)\n# Target os configurations\ninclude(os/common)\n# Paddlelite project\nproject(paddle CXX C)\nmessage(STATUS \"CXX compiler: ${CMAKE_CXX_COMPILER}, version: ${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}\")\nmessage(STATUS \"C compiler: ${CMAKE_C_COMPILER}, version: ${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}\")\nmessage(STATUS \"AR tools: ${CMAKE_AR}\")\nmessage(STATUS \"CMAKE GENERATOR: ${CMAKE_GENERATOR}\")\n\n# Thirdparty\nset(THIRD_PARTY_PATH \"${PADDLE_BINARY_DIR}/third_party\" CACHE STRING\n  \"A path setting third party libraries download & build directories.\")\n\nif(WIN32)\n  include(os/windows)\nendif()\n################################ Exposed Configurations #######################################\nlite_option(WITH_DSO                           \"Compile PaddlePaddle with dynamic linked CUDA\"                        ON)\nlite_option(WITH_AVX                           \"Compile PaddlePaddle with AVX intrinsics\"                             ON IF ${AVX_FOUND})\nlite_option(WITH_TESTING                       \"Compile PaddlePaddle with unit testing\"                               OFF)\nlite_option(WITH_MKL                           \"Compile PaddlePaddle with MKL support.\"                               ON IF ${AVX_FOUND})\nlite_option(WITH_ARM_DOTPROD                   \"Compile PaddlePaddle with ARM dot production\"                         ON)\nlite_option(WITH_SYSTEM_BLAS                   \"Use system blas library\"                                              OFF)\n# for lite, both server and mobile framework.\nlite_option(LITE_WITH_JAVA                     \"Enable Java JNI lib in lite mode\"                                     OFF)\nlite_option(LITE_WITH_STATIC_LIB               \"Enable static cplus lib in lite mode\"                                 OFF)\nlite_option(LITE_WITH_PYTHON                   \"Enable Python api lib in lite mode\"                                   OFF)\nlite_option(LITE_WITH_X86                      \"Enable X86 in lite mode\"                                              ON)\nlite_option(LITE_WITH_ARM                      \"Enable ARM in lite mode\"                                              OFF)\nlite_option(LITE_WITH_SW                       \"Enable SW in lite mode\"                                               OFF)\nlite_option(LITE_WITH_NNADAPTER                \"Enable NNAdapter in lite mode\"                                        OFF)\nlite_option(LITE_WITH_XPU                      \"Enable XPU in lite mode\"                                              OFF)\nlite_option(XPU_WITH_XFT                       \"Enable XPU-XFT in lite mode\"                                          OFF)\nlite_option(LITE_WITH_TRAIN                    \"Enable training operators and kernels in lite\"                        OFF)\nlite_option(LITE_WITH_OPENMP                   \"Enable OpenMP in lite framework\"                                      ON)\nlite_option(LITE_WITH_OPENCL                   \"Enable OpenCL support in lite\"                                        OFF)\nlite_option(LITE_WITH_METAL                    \"Enable Metal support in lite\"                                         OFF)\nlite_option(LITE_WITH_PROFILE                  \"Enable profile mode in lite framework\"                                OFF)\nlite_option(LITE_WITH_PRECISION_PROFILE        \"Enable precision profile in profile mode ON in lite\"                  OFF)\nlite_option(LITE_WITH_LOG                      \"Enable log printing or not.\"                                          ON)\nlite_option(LITE_WITH_EXCEPTION                \"Enable throwing the exception when error occurs in lite\"              OFF)\nlite_option(LITE_ON_TINY_PUBLISH               \"Publish tiny predictor lib.\"                                          OFF)\nlite_option(LITE_ON_MODEL_OPTIMIZE_TOOL        \"Build the model optimize tool\"                                        OFF)\nlite_option(LITE_WITH_BENCHMARK_TEST           \"Build benchmark test cases\"                                           OFF)\nlite_option(LITE_THREAD_POOL                   \"Enable thread pool in lite\"                                           OFF)\nlite_option(LITE_SKIP_SUPPORT_0_DIM_TENSOR_PASS \"Skip support_0_dim_tensor_pass\"                                      OFF)\n# publish options\nlite_option(LITE_BUILD_EXTRA                   \"Enable extra algorithm support in Lite, both kernels and operators\"   OFF)\nlite_option(LITE_BUILD_TAILOR                  \"Enable tailoring library according to model\"                          OFF)\n# cv build options\nlite_option(LITE_WITH_CV                       \"Enable build cv image in lite\"                                        OFF)\nlite_option(LITE_WITH_ARM_CLANG                \"when arm lang is clang, its ON.\"                                      OFF)\nlite_option(LITE_WITH_XCODE                    \"when debug in xcode, its ON.\"                                         OFF)\nlite_option(LITE_WITH_ARM82_FP16               \"when compile with arm v8.2 fp16, it's ON.\"                            OFF)\nlite_option(LITE_WITH_ARM8_SVE2                \"Enable SVE2 instructions in ARMv8.\"                                   OFF)\nlite_option(LITE_WITH_ARM82_INT8_SDOT          \"when compile with arm v8.2 int8, it's ON.\"                            OFF)\nlite_option(LITE_WITH_CODE_META_INFO           \"include git version in the header file.\"                              ON)\nlite_option(WITH_NODE_RAW_FS                   \"(Only available when compiling by Emscripten) Whether build with NODERAWFS\"               OFF)\nlite_option(LITE_WITH_ARM_DNN_LIBRARY          \"Use Arm DNN library instead of built-in math library.\"                OFF)\n\nfind_package(Git REQUIRED)\nfind_package(Threads REQUIRED)\n\n# Simd configurations\ninclude(simd)\n\n# CMAKE_BUILD_TYPE\nif(NOT CMAKE_BUILD_TYPE)\n  if(WIN32)\n    set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING\n      \"Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel\" FORCE)\n  else()\n    set(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING\n      \"Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel\" FORCE)\n    endif()\nendif()\nmessage(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\n\n# check options\nif(LITE_ON_TINY_PUBLISH)\n  if(NOT (LITE_WITH_ARM AND NOT WITH_TESTING))#LITE_WITH_JAVA AND\n    message(FATAL_ERROR \"LITE_ON_TINY_PUBLISH=ON must be used with LITE_WITH_ARM=ON LITE_WITH_JAVA=ON WITH_TESTING=OFF\")\n    return()\n  endif()\nendif()\n\ninclude_directories(\"${PADDLE_SOURCE_DIR}\")\n# the generated header files.\nset(LITE_GENERATED_INCLUDE_DIR \"${PADDLE_BINARY_DIR}\")\ninclude_directories(\"${LITE_GENERATED_INCLUDE_DIR}\")\n\nif(LITE_WITH_PYTHON)\n  include(external/python)    # download, build, install python\n  include(external/pybind11)    # download, build, install pybind11\nendif()\n\n# flatbuffer module for loading model\nif(LITE_UPDATE_FBS_HEAD)\n  include(external/flatbuffers)\nelse()\n  include_directories(\"${PADDLE_SOURCE_DIR}/third-party/flatbuffers/pre-build\")\n  add_custom_target(fbs_headers ${TARGET}\n    COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${PADDLE_SOURCE_DIR}/third-party/flatbuffers/pre-build/framework_generated.h\" \"${PADDLE_SOURCE_DIR}/lite/model_parser/flatbuffers/\"\n    COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${PADDLE_SOURCE_DIR}/third-party/flatbuffers/pre-build/param_generated.h\" \"${PADDLE_SOURCE_DIR}/lite/model_parser/flatbuffers/\"\n    COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${PADDLE_SOURCE_DIR}/third-party/flatbuffers/pre-build/cache_generated.h\" \"${PADDLE_SOURCE_DIR}/lite/backends/opencl/utils/\"\n    COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${PADDLE_SOURCE_DIR}/third-party/flatbuffers/pre-build/tune_cache_generated.h\" \"${PADDLE_SOURCE_DIR}/lite/backends/opencl/utils/\"\n    )\nendif()\n\nif(LITE_THREAD_POOL)\n  add_definitions(-DLITE_USE_THREAD_POOL)\nendif()\n\nif (LITE_THREAD_POOL OR ((ARM_TARGET_LANG STREQUAL \"clang\") AND (ARM_TARGET_ARCH_ABI STREQUAL \"armv7\")))\n  set(LITE_WITH_OPENMP OFF CACHE STRING \"Disable OpenMP when Thread Pool is enabled\" FORCE)\nendif()\n\nset(WITH_MKLML ${WITH_MKL})\nif(NOT DEFINED WITH_MKLDNN)\n  if(WITH_MKL AND AVX2_FOUND)\n    set(WITH_MKLDNN ON)\n  else()\n    message(STATUS \"Do not have AVX2 intrinsics and disabled MKL-DNN\")\n    set(WITH_MKLDNN OFF)\n  endif()\nendif()\n\ninclude(backends/common)\nadd_subdirectory(lite)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.169921875,
          "content": "Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.3857421875,
          "content": "#  Paddle Lite\n\n[English](README_en.md) | 简体中文\n\n  [![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](https://www.paddlepaddle.org.cn/lite)  [![Release](https://img.shields.io/github/release/PaddlePaddle/Paddle-Lite.svg)](https://github.com/PaddlePaddle/Paddle-Lite/releases)  [![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](LICENSE) \n\nPaddle Lite 是一个高性能、轻量级、灵活性强且易于扩展的深度学习推理框架，定位于支持包括移动端、嵌入式以及边缘端在内的多种硬件平台。\n\n当前 Paddle Lite 不仅在百度内部业务中得到全面应用，也成功支持了众多外部用户和企业的生产任务。\n\n## 快速入门\n\n使用 Paddle Lite，只需几个简单的步骤，就可以把模型部署到多种终端设备中，运行高性能的推理任务，使用流程如下所示：\n\n**一. 准备模型**\n\nPaddle Lite 框架直接支持模型结构为 [PaddlePaddle](https://github.com/PaddlePaddle/Paddle) 深度学习框架产出的模型格式。目前 PaddlePaddle 用于推理的模型是通过 [save_inference_model](https://www.paddlepaddle.org.cn/documentation/docs/zh/develop/api/paddle/static/save_inference_model_cn.html#save-inference-model) 这个 API 保存下来的。\n如果您手中的模型是由诸如 Caffe、Tensorflow、PyTorch 等框架产出的，那么您可以使用 [X2Paddle](https://github.com/PaddlePaddle/X2Paddle) 工具将模型转换为 PaddlePaddle 格式。\n\n**二. 模型优化**\n\nPaddle Lite 框架拥有优秀的加速、优化策略及实现，包含量化、子图融合、Kernel 优选等优化手段。优化后的模型更轻量级，耗费资源更少，并且执行速度也更快。\n这些优化通过 Paddle Lite 提供的 opt 工具实现。opt 工具还可以统计并打印出模型中的算子信息，并判断不同硬件平台下 Paddle Lite 的支持情况。您获取 PaddlePaddle 格式的模型之后，一般需要通过该 opt 工具做模型优化。opt 工具的下载和使用，请参考[模型优化方法](https://www.paddlepaddle.org.cn/lite/develop/user_guides/model_optimize_tool.html)。\n\n**三. 下载或编译**\n\nPaddle Lite 提供了 Android/iOS/x86/macOS 平台的官方 Release 预测库下载，我们优先推荐您直接下载 [Paddle Lite 预编译库](https://www.paddlepaddle.org.cn/lite/develop/quick_start/release_lib.html)，或者从 Release notes 处获取最新的[预编译编译库](https://github.com/PaddlePaddle/Paddle-Lite/releases)。\n\nPaddle Lite 已支持多种环境下的源码编译，为了避免复杂、繁琐的环境搭建过程，我们建议您使用 [Docker 统一编译环境搭建](https://www.paddlepaddle.org.cn/lite/develop/source_compile/docker_env.html) 进行编译。当然，您也可以根据宿主机和目标设备的 CPU 架构和操作系统，在[源码编译](https://www.paddlepaddle.org.cn/lite/develop/source_compile/compile_env.html)中找到相应的环境搭建及编译指南，自行完成编译环境的搭建。\n\n**四. 预测示例**\n\nPaddle Lite 提供了 C++、Java、Python 三种 API，并且提供了相应 API 的完整使用示例:\n\n- [C++ 完整示例](https://www.paddlepaddle.org.cn/lite/develop/user_guides/cpp_demo.html)\n- [Java 完整示例](https://www.paddlepaddle.org.cn/lite/develop/user_guides/java_demo.html)\n- [Python 完整示例](https://www.paddlepaddle.org.cn/lite/develop/user_guides/python_demo.html)\n\n您可以参考示例中的说明快速了解使用方法，并集成到您自己的项目中去。\n\n针对不同的硬件平台，Paddle Lite 提供了各个平台的完整示例：\n\n- [Android apps](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/android_app_demo.html) [[图像分类]](https://paddlelite-demo.bj.bcebos.com/apps/android/mobilenet_classification_demo.apk)  [[目标检测]](https://paddlelite-demo.bj.bcebos.com/apps/android/yolo_detection_demo.apk) [[口罩检测]](https://paddlelite-demo.bj.bcebos.com/apps/android/mask_detection_demo.apk)  [[人脸关键点]](https://paddlelite-demo.bj.bcebos.com/apps/android/face_keypoints_detection_demo.apk) [[人像分割]](https://paddlelite-demo.bj.bcebos.com/apps/android/human_segmentation_demo.apk)\n- [iOS apps](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/ios_app_demo.html)\n- [Linux apps](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/linux_arm_demo.html)\n- [Arm](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/arm_cpu.html)\n- [x86](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/x86.html)\n- [OpenCL](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/opencl.html)\n- [Metal](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/metal.html)\n- [华为麒麟 NPU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/huawei_kirin_npu.html)\n- [华为昇腾 NPU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/huawei_ascend_npu.html)\n- [昆仑芯 XPU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/kunlunxin_xpu.html)\n- [昆仑芯 XTCL](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/kunlunxin_xtcl.html)\n- [高通 QNN](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/qualcomm_qnn.html)\n- [寒武纪 MLU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/cambricon_mlu.html)\n- [(瑞芯微/晶晨/恩智浦) 芯原 TIM-VX](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/verisilicon_timvx.html)\n- [Android NNAPI](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/android_nnapi.html)\n- [联发科 APU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/mediatek_apu.html)\n- [颖脉 NNA](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/imagination_nna.html)\n- [Intel OpenVINO](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/intel_openvino.html)\n- [亿智 NPU](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/eeasytech_npu.html)\n\n\n\n## 主要特性\n\n- 支持多平台：涵盖 Android、iOS、嵌入式 Linux 设备、Windows、macOS 和 Linux 主机\n- 支持多种语言：包括 Java、Python、C++\n- 轻量化和高性能：针对移动端设备的机器学习进行优化，压缩模型和二进制文件体积，高效推理，降低内存消耗\n\n## 持续集成\n\n| System | x86 Linux | ARM Linux | Android (GCC/Clang) | iOS |\n|:-:|:-:|:-:|:-:|:-:|\n| CPU(32bit) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) |\n| CPU(64bit) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) |\n| OpenCL | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| Metal | - | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) |\n| 华为麒麟 NPU | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| 华为昇腾 NPU | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - |\n| 昆仑芯 XPU | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - |\n| 昆仑芯 XTCL | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - |\n| 高通 QNN | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| 寒武纪 MLU | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - | - |\n| (瑞芯微/晶晨/恩智浦) 芯原 TIM-VX | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| Android\tNNAPI | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| 联发科 APU | - | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - |\n| 颖脉 NPU | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - |\n| Intel OpenVINO | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - | - |\n| 亿智 NPU | - | ![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg) | - | - |\n\n## 架构设计\n\nPaddle Lite 的架构设计着重考虑了对多硬件和平台的支持，并且强化了多个硬件在一个模型中混合执行的能力，多个层面的性能优化处理，以及对端侧应用的轻量化设计。\n\n<p align=\"center\"><img width=\"500\" src=\"https://paddlelite-demo.bj.bcebos.com/devices/generic/paddle_lite_with_nnadapter.jpg\"/></p>\n\n其中，Analysis Phase 包括了 MIR(Machine IR) 相关模块，能够对原有的模型的计算图针对具体的硬件列表进行算子融合、计算裁剪 在内的多种优化。Execution Phase 只涉及到 Kernel 的执行，且可以单独部署，以支持极致的轻量级部署。\n\n## 进一步了解 Paddle Lite\n\n如果您想要进一步了解 Paddle Lite，下面是进一步学习和使用 Paddle Lite 的相关内容：\n### 文档和示例\n- 完整文档： [Paddle Lite 文档](https://www.paddlepaddle.org.cn/lite)\n-  API文档：\n\t- [C++ API 文档](https://www.paddlepaddle.org.cn/lite/develop/api_reference/cxx_api_doc.html)\n\t- [Java API 文档](https://www.paddlepaddle.org.cn/lite/develop/api_reference/java_api_doc.html)\n\t- [Python API 文档](https://www.paddlepaddle.org.cn/lite/develop/api_reference/python_api_doc.html)\n\t- [CV 图像处理 API 文档](https://www.paddlepaddle.org.cn/lite/develop/api_reference/cv.html)\n- Paddle Lite 工程示例： [Paddle-Lite-Demo](https://github.com/PaddlePaddle/Paddle-Lite-Demo)\n### 关键技术\n- 模型量化：\n\t- [静态离线量化](https://www.paddlepaddle.org.cn/lite/develop/user_guides/quant/quant_post_static.html)\n\t- [动态离线量化](https://www.paddlepaddle.org.cn/lite/develop/user_guides/quant/quant_post_dynamic.html)\n- 调试分析：[调试和性能分析工具](https://www.paddlepaddle.org.cn/lite/develop/user_guides/profiler.html)\n- 移动端模型训练：点击[了解一下](https://www.paddlepaddle.org.cn/lite/develop/demo_guides/cpp_train_demo.html)\n- 飞桨预训练模型库：试试在 [PaddleHub](https://www.paddlepaddle.org.cn/hublist?filter=hot&value=1) 浏览和下载 Paddle 的预训练模型\n- 飞桨推理 AI 硬件统一适配框架 NNAdapter：点击[了解一下](https://www.paddlepaddle.org.cn/lite/develop/develop_guides/nnadapter.html)\n### FAQ\n- FAQ：常见问题，可以访问 [FAQ](https://www.paddlepaddle.org.cn/lite/develop/quick_start/faq.html)、搜索 Issues、或者通过页面底部的联系方式联系我们\n### 贡献代码\n- 贡献代码：如果您想一起参与 Paddle Lite 的开发，贡献代码，请访问[开发者共享文档](https://www.paddlepaddle.org.cn/lite/develop/develop_guides/for-developer.html)\n\n\n##  交流与反馈\n* AIStudio 实训平台端测部署系列课程：https://aistudio.baidu.com/aistudio/course/introduce/22690\n* 欢迎您通过 [Github Issues](https://github.com/PaddlePaddle/Paddle-Lite/issues) 来提交问题、报告与建议\n* 技术交流微信群：添加 wechat id:baidupaddle或扫描下方微信二维码，添加并回复小助手“端侧”，系统自动邀请加入；技术群 QQ 群: 一群696965088（已满） ；二群，959308808；\n\n<p align=\"center\"><img width=\"200\" height=\"200\"  src=\"https://user-images.githubusercontent.com/63448337/162189409-6c0ef74f-82fd-48c9-9fa7-fc3473428a63.png\"/>&#8194;&#8194;&#8194;&#8194;&#8194;<img width=\"200\" height=\"200\" margin=\"500\" src=\"https://github.com/PaddlePaddle/Paddle-Lite/blob/develop/docs/images/qq-group-chat.png\"/></p>\n<p align=\"center\">&#8194;&#8194;&#8194;微信公众号&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;官方技术交流QQ群 \n\n\n* 如果您对我们的工作感兴趣，也欢迎[加入我们](https://github.com/PaddlePaddle/Paddle-Lite/issues/6091) ！\n\n## 版权和许可证\nPaddle Lite由 [Apache-2.0 license](LICENSE) 提供。\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 3.5625,
          "content": "# Paddle Lite\n\n[简体中文](README.md) | English\n\n[![Build Status](https://travis-ci.org/PaddlePaddle/Paddle-Lite.svg?branch=develop&longCache=true&style=flat-square)](https://travis-ci.org/PaddlePaddle/Paddle-Lite)  [![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](https://www.paddlepaddle.org.cn/lite)  [![Release](https://img.shields.io/github/release/PaddlePaddle/Paddle-Lite.svg)](https://github.com/PaddlePaddle/Paddle-Lite/releases)  [![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](LICENSE)\n\n\nPaddle Lite is an updated version of Paddle-Mobile, an open-open source deep learning framework designed to make it easy to perform inference on mobile, embeded, and IoT devices. It is compatible with PaddlePaddle and pre-trained models from other sources.\n\nFor tutorials, please see [PaddleLite Document](https://www.paddlepaddle.org.cn/lite).\n\n## Key Features\n\n- Multiple platform support, covering Android and iOS devices, embedded Linux, Windows, macOS and Linux computer.\n- Diverse language support, which includes Java, C++, and Python.\n- High performance and light weight: optimized for on-device machine learning, reduced model and binary size, efficient inference and reduced memory usage.\n\n\n## Architecture\n\nPaddle Lite is designed to support a wide range of hardwares and devices, and it enables mixed execution of a single model on multiple devices, optimization on various phases, and light-weighted applications on devices.\n\n![img](https://paddlelite-demo.bj.bcebos.com/devices/generic/paddle_lite_with_nnadapter.jpg)\n\nAs is shown in the figure above, analysis phase includes Machine IR module, and it enables optimizations like Op fusion and redundant computation pruning. Besides, excecution phase only involves Kernal execution, so it can be deployed on its own to ensure maximum light-weighted deployment.\n\n## Key Info about the Update\n\nThe earlier Paddle-Mobile was designed to be compatible with PaddlePaddle and multiple hardwares, including ARM CPU, Mali GPU, Adreno GPU, FPGA, ARM-Linux and Apple's GPU Metal. Within Baidu, inc, many product lines have been using Paddle-Mobile.\n\nAs an update of Paddle-Mobile, Paddle Lite has incorporated many older capabilities into the [new architecture](https://github.com/PaddlePaddle/Paddle-Lite/tree/develop/lite).\n\n## Special Thanks\n\nPaddle Lite has referenced the following open-source projects:\n\n- [ARM compute library](https://github.com/ARM-software/ComputeLibrary)\n- [Anakin](https://github.com/PaddlePaddle/Anakin). The optimizations under Anakin has been incorporated into Paddle Lite, and so there will not be any future updates of Anakin. As another high-performance inference project under PaddlePaddle, Anakin has been forward-looking and helpful to the making of Paddle Lite.  \n\n\n\n## Feedback and Community Support\n\n- Questions, reports, and suggestions are welcome through Github Issues!\n- Forum: Opinions and questions are welcome at our [PaddlePaddle Forum](https://ai.baidu.com/forum/topic/list/168)！\n- WeChat Official Account: PaddlePaddle\n- QQ Group Chat: 696965088\n<p align=\"center\"><img width=\"200\" height=\"200\"  src=\"https://user-images.githubusercontent.com/45189361/64117959-1969de80-cdc9-11e9-84f7-e1c2849a004c.jpeg\"/>&#8194;&#8194;&#8194;&#8194;&#8194;<img width=\"200\" height=\"200\" margin=\"500\" src=\"https://user-images.githubusercontent.com/45189361/64117844-cb54db00-cdc8-11e9-8c08-24bbe594608e.jpeg\"/></p>\n<p align=\"center\">&#8194; WeChat Official Account&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;QQ Group Chat&#8194;&#8194;&#8194;&#8194;&#8194;</p>\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lite",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}