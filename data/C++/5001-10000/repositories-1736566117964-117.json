{
  "metadata": {
    "timestamp": 1736566117964,
    "page": 117,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wang-xinyu/tensorrtx",
      "stars": 7127,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.541015625,
          "content": "# Google C/C++ Code Style settings (with 4-space)\n# Refered to https://github.com/kehanXue/google-style-clang-format/blob/master/.clang-format\n\nLanguage: Cpp\nBasedOnStyle: Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: None\nAlignOperands: Align\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Empty\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: Never  # To avoid conflict, set this \"Never\" and each \"if statement\" should include brace when coding\nAllowShortLambdasOnASingleLine: Inline\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: true\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterCaseLabel: false\n  AfterClass: false\n  AfterStruct: false\n  AfterControlStatement: Never\n  AfterEnum: false\n  AfterFunction: false\n  AfterNamespace: false\n  AfterUnion: false\n  AfterExternBlock: false\n  BeforeCatch: false\n  BeforeElse: false\n  BeforeLambdaBody: false\n  IndentBraces: false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: None\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\nBreakInheritanceList: BeforeColon\nColumnLimit: 120\nCompactNamespaces: false\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: false  # Make sure the * or & align on the left\nEmptyLineBeforeAccessModifier: LogicalBlock\nFixNamespaceComments: true\nIncludeBlocks: Preserve\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth: 4\nKeepEmptyLinesAtTheStartOfBlocks: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPointerAlignment: Left\nReflowComments: false\n# SeparateDefinitionBlocks: Always   # Only support since clang-format 14\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: c++11\nTabWidth: 8\nUseTab: Never\n"
        },
        {
          "name": ".cmake-format.yaml",
          "type": "blob",
          "size": 9.0517578125,
          "content": "_help_parse: Options affecting listfile parsing\nparse:\n  _help_additional_commands:\n  - Specify structure for custom cmake functions\n  additional_commands:\n    foo:\n      flags:\n      - BAR\n      - BAZ\n      kwargs:\n        HEADERS: '*'\n        SOURCES: '*'\n        DEPENDS: '*'\n  _help_override_spec:\n  - Override configurations per-command where available\n  override_spec: {}\n  _help_vartags:\n  - Specify variable tags.\n  vartags: []\n  _help_proptags:\n  - Specify property tags.\n  proptags: []\n_help_format: Options affecting formatting.\nformat:\n  _help_disable:\n  - Disable formatting entirely, making cmake-format a no-op\n  disable: false\n  _help_line_width:\n  - How wide to allow formatted cmake files\n  line_width: 80\n  _help_tab_size:\n  - How many spaces to tab for indent\n  tab_size: 2\n  _help_use_tabchars:\n  - If true, lines are indented using tab characters (utf-8\n  - 0x09) instead of <tab_size> space characters (utf-8 0x20).\n  - In cases where the layout would require a fractional tab\n  - character, the behavior of the  fractional indentation is\n  - governed by <fractional_tab_policy>\n  use_tabchars: false\n  _help_fractional_tab_policy:\n  - If <use_tabchars> is True, then the value of this variable\n  - indicates how fractional indentions are handled during\n  - whitespace replacement. If set to 'use-space', fractional\n  - indentation is left as spaces (utf-8 0x20). If set to\n  - '`round-up` fractional indentation is replaced with a single'\n  - tab character (utf-8 0x09) effectively shifting the column\n  - to the next tabstop\n  fractional_tab_policy: use-space\n  _help_max_subgroups_hwrap:\n  - If an argument group contains more than this many sub-groups\n  - (parg or kwarg groups) then force it to a vertical layout.\n  max_subgroups_hwrap: 2\n  _help_max_pargs_hwrap:\n  - If a positional argument group contains more than this many\n  - arguments, then force it to a vertical layout.\n  max_pargs_hwrap: 6\n  _help_max_rows_cmdline:\n  - If a cmdline positional group consumes more than this many\n  - lines without nesting, then invalidate the layout (and nest)\n  max_rows_cmdline: 2\n  _help_separate_ctrl_name_with_space:\n  - If true, separate flow control names from their parentheses\n  - with a space\n  separate_ctrl_name_with_space: false\n  _help_separate_fn_name_with_space:\n  - If true, separate function names from parentheses with a\n  - space\n  separate_fn_name_with_space: false\n  _help_dangle_parens:\n  - If a statement is wrapped to more than one line, than dangle\n  - the closing parenthesis on its own line.\n  dangle_parens: false\n  _help_dangle_align:\n  - If the trailing parenthesis must be 'dangled' on its on\n  - 'line, then align it to this reference: `prefix`: the start'\n  - 'of the statement,  `prefix-indent`: the start of the'\n  - 'statement, plus one indentation  level, `child`: align to'\n  - the column of the arguments\n  dangle_align: prefix\n  _help_min_prefix_chars:\n  - If the statement spelling length (including space and\n  - parenthesis) is smaller than this amount, then force reject\n  - nested layouts.\n  min_prefix_chars: 4\n  _help_max_prefix_chars:\n  - If the statement spelling length (including space and\n  - parenthesis) is larger than the tab width by more than this\n  - amount, then force reject un-nested layouts.\n  max_prefix_chars: 10\n  _help_max_lines_hwrap:\n  - If a candidate layout is wrapped horizontally but it exceeds\n  - this many lines, then reject the layout.\n  max_lines_hwrap: 2\n  _help_line_ending:\n  - What style line endings to use in the output.\n  line_ending: unix\n  _help_command_case:\n  - Format command names consistently as 'lower' or 'upper' case\n  command_case: canonical\n  _help_keyword_case:\n  - Format keywords consistently as 'lower' or 'upper' case\n  keyword_case: unchanged\n  _help_always_wrap:\n  - A list of command names which should always be wrapped\n  always_wrap: []\n  _help_enable_sort:\n  - If true, the argument lists which are known to be sortable\n  - will be sorted lexicographicall\n  enable_sort: true\n  _help_autosort:\n  - If true, the parsers may infer whether or not an argument\n  - list is sortable (without annotation).\n  autosort: false\n  _help_require_valid_layout:\n  - By default, if cmake-format cannot successfully fit\n  - everything into the desired linewidth it will apply the\n  - last, most agressive attempt that it made. If this flag is\n  - True, however, cmake-format will print error, exit with non-\n  - zero status code, and write-out nothing\n  require_valid_layout: false\n  _help_layout_passes:\n  - A dictionary mapping layout nodes to a list of wrap\n  - decisions. See the documentation for more information.\n  layout_passes: {}\n_help_markup: Options affecting comment reflow and formatting.\nmarkup:\n  _help_bullet_char:\n  - What character to use for bulleted lists\n  bullet_char: '*'\n  _help_enum_char:\n  - What character to use as punctuation after numerals in an\n  - enumerated list\n  enum_char: .\n  _help_first_comment_is_literal:\n  - If comment markup is enabled, don't reflow the first comment\n  - block in each listfile. Use this to preserve formatting of\n  - your copyright/license statements.\n  first_comment_is_literal: false\n  _help_literal_comment_pattern:\n  - If comment markup is enabled, don't reflow any comment block\n  - which matches this (regex) pattern. Default is `None`\n  - (disabled).\n  literal_comment_pattern: null\n  _help_fence_pattern:\n  - Regular expression to match preformat fences in comments\n  - default= ``r'^\\s*([`~]{3}[`~]*)(.*)$'``\n  fence_pattern: ^\\s*([`~]{3}[`~]*)(.*)$\n  _help_ruler_pattern:\n  - Regular expression to match rulers in comments default=\n  - '``r''^\\s*[^\\w\\s]{3}.*[^\\w\\s]{3}$''``'\n  ruler_pattern: ^\\s*[^\\w\\s]{3}.*[^\\w\\s]{3}$\n  _help_explicit_trailing_pattern:\n  - If a comment line matches starts with this pattern then it\n  - is explicitly a trailing comment for the preceeding\n  - argument. Default is '#<'\n  explicit_trailing_pattern: '#<'\n  _help_hashruler_min_length:\n  - If a comment line starts with at least this many consecutive\n  - hash characters, then don't lstrip() them off. This allows\n  - for lazy hash rulers where the first hash char is not\n  - separated by space\n  hashruler_min_length: 10\n  _help_canonicalize_hashrulers:\n  - If true, then insert a space between the first hash char and\n  - remaining hash chars in a hash ruler, and normalize its\n  - length to fill the column\n  canonicalize_hashrulers: true\n  _help_enable_markup:\n  - enable comment markup parsing and reflow\n  enable_markup: true\n_help_lint: Options affecting the linter\nlint:\n  _help_disabled_codes:\n  - a list of lint codes to disable\n  disabled_codes: []\n  _help_function_pattern:\n  - regular expression pattern describing valid function names\n  function_pattern: '[0-9a-z_]+'\n  _help_macro_pattern:\n  - regular expression pattern describing valid macro names\n  macro_pattern: '[0-9A-Z_]+'\n  _help_global_var_pattern:\n  - regular expression pattern describing valid names for\n  - variables with global (cache) scope\n  global_var_pattern: '[A-Z][0-9A-Z_]+'\n  _help_internal_var_pattern:\n  - regular expression pattern describing valid names for\n  - variables with global scope (but internal semantic)\n  internal_var_pattern: _[A-Z][0-9A-Z_]+\n  _help_local_var_pattern:\n  - regular expression pattern describing valid names for\n  - variables with local scope\n  local_var_pattern: '[a-z][a-z0-9_]+'\n  _help_private_var_pattern:\n  - regular expression pattern describing valid names for\n  - privatedirectory variables\n  private_var_pattern: _[0-9a-z_]+\n  _help_public_var_pattern:\n  - regular expression pattern describing valid names for public\n  - directory variables\n  public_var_pattern: '[A-Z][0-9A-Z_]+'\n  _help_argument_var_pattern:\n  - regular expression pattern describing valid names for\n  - function/macro arguments and loop variables.\n  argument_var_pattern: '[a-z][a-z0-9_]+'\n  _help_keyword_pattern:\n  - regular expression pattern describing valid names for\n  - keywords used in functions or macros\n  keyword_pattern: '[A-Z][0-9A-Z_]+'\n  _help_max_conditionals_custom_parser:\n  - In the heuristic for C0201, how many conditionals to match\n  - within a loop in before considering the loop a parser.\n  max_conditionals_custom_parser: 2\n  _help_min_statement_spacing:\n  - Require at least this many newlines between statements\n  min_statement_spacing: 1\n  _help_max_statement_spacing:\n  - Require no more than this many newlines between statements\n  max_statement_spacing: 2\n  max_returns: 6\n  max_branches: 12\n  max_arguments: 5\n  max_localvars: 15\n  max_statements: 50\n_help_encode: Options affecting file encoding\nencode:\n  _help_emit_byteorder_mark:\n  - If true, emit the unicode byte-order mark (BOM) at the start\n  - of the file\n  emit_byteorder_mark: false\n  _help_input_encoding:\n  - Specify the encoding of the input file. Defaults to utf-8\n  input_encoding: utf-8\n  _help_output_encoding:\n  - Specify the encoding of the output file. Defaults to utf-8.\n  - Note that cmake only claims to support utf-8 so be careful\n  - when using anything else\n  output_encoding: utf-8\n_help_misc: Miscellaneous configurations options.\nmisc:\n  _help_per_command:\n  - A dictionary containing any per-command configuration\n  - overrides. Currently only `command_case` is supported.\n  per_command: {}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9150390625,
          "content": "build\n*.wts\n*.engine\n*/*.ppm\n*idea*\n\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\nCMakeUserPresets.json\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.755859375,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n    -   id: check-merge-conflict\n    -   id: check-symlinks\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n    -   id: check-added-large-files\n-   repo: https://github.com/pre-commit/mirrors-clang-format\n    rev: v14.0.6\n    hooks:\n    -   id: clang-format\n        types_or: [c++, c, cuda]\n-   repo: https://github.com/PyCQA/flake8\n    rev: 7.0.0\n    hooks:\n    -   id: flake8\n        args: [--max-line-length=120]\n- repo: https://github.com/cheshirekow/cmake-format-precommit\n  rev: v0.6.13\n  hooks:\n  - id: cmake-format\n    additional_dependencies: [pyyaml]\n    args: [--in-place, -c, .cmake-format.yaml]\n    types: [file]\n    files: (\\.cmake|CMakeLists.txt)(.in)?$\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2019-2020 Wang Xinyu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.2685546875,
          "content": "# TensorRTx\n\nTensorRTx aims to implement popular deep learning networks with TensorRT network definition API.\n\nWhy don't we use a parser (ONNX parser, UFF parser, caffe parser, etc), but use complex APIs to build a network from scratch? I have summarized the advantages in the following aspects.\n- **Flexible**, easy to modify the network, add/delete a layer or input/output tensor, replace a layer, merge layers, integrate preprocessing and postprocessing into network, etc.\n- **Debuggable**, construct the entire network in an incremental development manner, easy to get middle layer results.\n- **Educational**, learn about the network structure during this development, rather than treating everything as a black box.\n\nThe basic workflow of TensorRTx is:\n1. Get the trained models from pytorch, mxnet or tensorflow, etc. Some pytorch models can be found in my repo [pytorchx](https://github.com/wang-xinyu/pytorchx), the remaining are from popular open-source repos.\n2. Export the weights to a plain text file -- [.wts file](./tutorials/getting_started.md#the-wts-content-format).\n3. Load weights in TensorRT, define the network, build a TensorRT engine.\n4. Load the TensorRT engine and run inference.\n\n## News\n\n- `22 Oct 2024`. [lindsayshuo](https://github.com/lindsayshuo): YOLOv8-obb\n- `18 Oct 2024`. [zgjja](https://github.com/zgjja): Rafactor docker image.\n- `11 Oct 2024`. [mpj1234](https://github.com/mpj1234): YOLO11\n- `9 Oct 2024`. [Phoenix8215](https://github.com/Phoenix8215): GhostNet V1 and V2.\n- `21 Aug 2024`. [Lemonononon](https://github.com/Lemonononon): real-esrgan-general-x4v3\n- `29 Jul 2024`. [mpj1234](https://github.com/mpj1234): Check the YOLOv5, YOLOv8 & YOLOv10 in TensorRT 10.x API, branch → [trt10](https://github.com/wang-xinyu/tensorrtx/tree/trt10)\n- `29 Jul 2024`. [mpj1234](https://github.com/mpj1234): YOLOv10\n- `21 Jun 2024`. [WuxinrongY](https://github.com/WuxinrongY): YOLOv9-T, YOLOv9-S, YOLOv9-M\n- `28 Apr 2024`. [lindsayshuo](https://github.com/lindsayshuo): YOLOv8-pose\n- `22 Apr 2024`. [B1SH0PP](https://github.com/B1SH0PP): EfficientAd: Accurate Visual Anomaly Detection at Millisecond-Level Latencies.\n- `18 Apr 2024`. [lindsayshuo](https://github.com/lindsayshuo): YOLOv8-p2\n- `12 Mar 2024`. [lindsayshuo](https://github.com/lindsayshuo): YOLOv8-cls\n- `11 Mar 2024`. [WuxinrongY](https://github.com/WuxinrongY): YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information\n- `7 Mar 2024`. [AadeIT](https://github.com/AadeIT): CSRNet: Dilated Convolutional Neural Networks for Understanding the Highly Congested Scenes\n- `17 Oct 2023`. [Rex-LK](https://github.com/Rex-LK): YOLOv8-Seg\n\n## Tutorials\n\n- [How to make contribution](./tutorials/contribution.md)\n- [Install the dependencies.](./tutorials/install.md)\n- [A guide for quickly getting started, taking lenet5 as a demo.](./tutorials/getting_started.md)\n- [The .wts file content format](./tutorials/getting_started.md#the-wts-content-format)\n- [Frequently Asked Questions (FAQ)](./tutorials/faq.md)\n- [Migrating from TensorRT 4 to 7](./tutorials/migrating_from_tensorrt_4_to_7.md)\n- [How to implement multi-GPU processing, taking YOLOv4 as example](./tutorials/multi_GPU_processing.md)\n- [Check if Your GPU support FP16/INT8](./tutorials/check_fp16_int8_support.md)\n- [How to Compile and Run on Windows](./tutorials/run_on_windows.md)\n- [Deploy YOLOv4 with Triton Inference Server](https://github.com/isarsoft/yolov4-triton-tensorrt)\n- [From pytorch to trt step by step, hrnet as example(Chinese)](./tutorials/from_pytorch_to_trt_stepbystep_hrnet.md)\n\n## Test Environment\n\n1. TensorRT 7.x\n2. TensorRT 8.x(Some of the models support 8.x)\n\n## How to run\n\nEach folder has a readme inside, which explains how to run the models inside.\n\n## Models\n\nFollowing models are implemented.\n\n|Name | Description |\n|-|-|\n|[mlp](./mlp) | the very basic model for starters, properly documented |\n|[lenet](./lenet) | the simplest, as a \"hello world\" of this project |\n|[alexnet](./alexnet)| easy to implement, all layers are supported in tensorrt |\n|[googlenet](./googlenet)| GoogLeNet (Inception v1) |\n|[inception](./inception)| Inception v3, v4 |\n|[mnasnet](./mnasnet)| MNASNet with depth multiplier of 0.5 from the paper |\n|[mobilenet](./mobilenet)| MobileNet v2, v3-small, v3-large |\n|[resnet](./resnet)| resnet-18, resnet-50 and resnext50-32x4d are implemented |\n|[senet](./senet)| se-resnet50 |\n|[shufflenet](./shufflenetv2)| ShuffleNet v2 with 0.5x output channels |\n|[squeezenet](./squeezenet)| SqueezeNet 1.1 model |\n|[vgg](./vgg)| VGG 11-layer model |\n|[yolov3-tiny](./yolov3-tiny)| weights and pytorch implementation from [ultralytics/yolov3](https://github.com/ultralytics/yolov3) |\n|[yolov3](./yolov3)| darknet-53, weights and pytorch implementation from [ultralytics/yolov3](https://github.com/ultralytics/yolov3) |\n|[yolov3-spp](./yolov3-spp)| darknet-53, weights and pytorch implementation from [ultralytics/yolov3](https://github.com/ultralytics/yolov3) |\n|[yolov4](./yolov4)| CSPDarknet53, weights from [AlexeyAB/darknet](https://github.com/AlexeyAB/darknet#pre-trained-models), pytorch implementation from [ultralytics/yolov3](https://github.com/ultralytics/yolov3) |\n|[yolov5](./yolov5)| yolov5 v1.0-v7.0 of [ultralytics/yolov5](https://github.com/ultralytics/yolov5), detection, classification and instance segmentation |\n|[yolov7](./yolov7)| yolov7 v0.1, pytorch implementation from [WongKinYiu/yolov7](https://github.com/WongKinYiu/yolov7) |\n|[yolov8](./yolov8)| yolov8, pytorch implementation from [ultralytics](https://github.com/ultralytics/ultralytics) |\n|[yolov9](./yolov9)| The Pytorch implementation is [WongKinYiu/yolov9](https://github.com/WongKinYiu/yolov9). |\n|[yolov10](./yolov10)| The Pytorch implementation is [THU-MIG/yolov10](https://github.com/THU-MIG/yolov10). |\n|[yolo11](./yolo11)| The Pytorch implementation is [ultralytics](https://github.com/ultralytics/ultralytics). |\n|[yolop](./yolop)| yolop, pytorch implementation from [hustvl/YOLOP](https://github.com/hustvl/YOLOP) |\n|[retinaface](./retinaface)| resnet50 and mobilnet0.25, weights from [biubug6/Pytorch_Retinaface](https://github.com/biubug6/Pytorch_Retinaface) |\n|[arcface](./arcface)| LResNet50E-IR, LResNet100E-IR and MobileFaceNet, weights from [deepinsight/insightface](https://github.com/deepinsight/insightface) |\n|[retinafaceAntiCov](./retinafaceAntiCov)| mobilenet0.25, weights from [deepinsight/insightface](https://github.com/deepinsight/insightface), retinaface anti-COVID-19, detect face and mask attribute |\n|[dbnet](./dbnet)| Scene Text Detection, weights from [BaofengZan/DBNet.pytorch](https://github.com/BaofengZan/DBNet.pytorch) |\n|[crnn](./crnn)| pytorch implementation from [meijieru/crnn.pytorch](https://github.com/meijieru/crnn.pytorch) |\n|[ufld](./ufld)| pytorch implementation from [Ultra-Fast-Lane-Detection](https://github.com/cfzd/Ultra-Fast-Lane-Detection), ECCV2020 |\n|[hrnet](./hrnet)| hrnet-image-classification and hrnet-semantic-segmentation, pytorch implementation from [HRNet-Image-Classification](https://github.com/HRNet/HRNet-Image-Classification) and [HRNet-Semantic-Segmentation](https://github.com/HRNet/HRNet-Semantic-Segmentation) |\n|[psenet](./psenet)| PSENet Text Detection, tensorflow implementation from [liuheng92/tensorflow_PSENet](https://github.com/liuheng92/tensorflow_PSENet) |\n|[ibnnet](./ibnnet)| IBN-Net, pytorch implementation from [XingangPan/IBN-Net](https://github.com/XingangPan/IBN-Net), ECCV2018 |\n|[unet](./unet)| U-Net, pytorch implementation from [milesial/Pytorch-UNet](https://github.com/milesial/Pytorch-UNet) |\n|[repvgg](./repvgg)| RepVGG, pytorch implementation from [DingXiaoH/RepVGG](https://github.com/DingXiaoH/RepVGG) |\n|[lprnet](./lprnet)| LPRNet, pytorch implementation from [xuexingyu24/License_Plate_Detection_Pytorch](https://github.com/xuexingyu24/License_Plate_Detection_Pytorch) |\n|[refinedet](./refinedet)| RefineDet, pytorch implementation from [luuuyi/RefineDet.PyTorch](https://github.com/luuuyi/RefineDet.PyTorch) |\n|[densenet](./densenet)| DenseNet-121, from torchvision.models |\n|[rcnn](./rcnn)| FasterRCNN and MaskRCNN, model from [detectron2](https://github.com/facebookresearch/detectron2) |\n|[tsm](./tsm)| TSM: Temporal Shift Module for Efficient Video Understanding, ICCV2019 |\n|[scaled-yolov4](./scaled-yolov4)| yolov4-csp, pytorch from [WongKinYiu/ScaledYOLOv4](https://github.com/WongKinYiu/ScaledYOLOv4) |\n|[centernet](./centernet)| CenterNet DLA-34, pytorch from [xingyizhou/CenterNet](https://github.com/xingyizhou/CenterNet) |\n|[efficientnet](./efficientnet)| EfficientNet b0-b8 and l2, pytorch from [lukemelas/EfficientNet-PyTorch](https://github.com/lukemelas/EfficientNet-PyTorch) |\n|[detr](./detr)| DE⫶TR, pytorch from [facebookresearch/detr](https://github.com/facebookresearch/detr) |\n|[swin-transformer](./swin-transformer)| Swin Transformer - Semantic Segmentation, only support Swin-T. The Pytorch implementation is [microsoft/Swin-Transformer](https://github.com/microsoft/Swin-Transformer.git) |\n|[real-esrgan](./real-esrgan)| Real-ESRGAN. The Pytorch implementation is [real-esrgan](https://github.com/xinntao/Real-ESRGAN) |\n|[superpoint](./superpoint)| SuperPoint. The Pytorch model is from [magicleap/SuperPointPretrainedNetwork](https://github.com/magicleap/SuperPointPretrainedNetwork) |\n|[csrnet](./csrnet)| CSRNet. The Pytorch implementation is [leeyeehoo/CSRNet-pytorch](https://github.com/leeyeehoo/CSRNet-pytorch) |\n|[EfficientAd](./efficient_ad)| EfficientAd: Accurate Visual Anomaly Detection at Millisecond-Level Latencies. From [anomalib](https://github.com/openvinotoolkit/anomalib) |\n\n## Model Zoo\n\nThe .wts files can be downloaded from model zoo for quick evaluation. But it is recommended to convert .wts from pytorch/mxnet/tensorflow model, so that you can retrain your own model.\n\n[GoogleDrive](https://drive.google.com/drive/folders/1Ri0IDa5OChtcA3zjqRTW57uG6TnfN4Do?usp=sharing) | [BaiduPan](https://pan.baidu.com/s/19s6hO8esU7-TtZEXN7G3OA) pwd: uvv2\n\n## Tricky Operations\n\nSome tricky operations encountered in these models, already solved, but might have better solutions.\n\n|Name | Description |\n|-|-|\n|BatchNorm| Implement by a scale layer, used in resnet, googlenet, mobilenet, etc. |\n|MaxPool2d(ceil_mode=True)| use a padding layer before maxpool to solve ceil_mode=True, see googlenet. |\n|average pool with padding| use setAverageCountExcludesPadding() when necessary, see inception. |\n|relu6| use `Relu6(x) = Relu(x) - Relu(x-6)`, see mobilenet. |\n|torch.chunk()| implement the 'chunk(2, dim=C)' by tensorrt plugin, see shufflenet. |\n|channel shuffle| use two shuffle layers to implement `channel_shuffle`, see shufflenet. |\n|adaptive pool| use fixed input dimension, and use regular average pooling, see shufflenet. |\n|leaky relu| I wrote a leaky relu plugin, but PRelu in `NvInferPlugin.h` can be used, see yolov3 in branch `trt4`. |\n|yolo layer v1| yolo layer is implemented as a plugin, see yolov3 in branch `trt4`. |\n|yolo layer v2| three yolo layers implemented in one plugin, see yolov3-spp. |\n|upsample| replaced by a deconvolution layer, see yolov3. |\n|hsigmoid| hard sigmoid is implemented as a plugin, hsigmoid and hswish are used in mobilenetv3 |\n|retinaface output decode| implement a plugin to decode bbox, confidence and landmarks, see retinaface. |\n|mish| mish activation is implemented as a plugin, mish is used in yolov4 |\n|prelu| mxnet's prelu activation with trainable gamma is implemented as a plugin, used in arcface |\n|HardSwish| hard_swish = x * hard_sigmoid, used in yolov5 v3.0 |\n|LSTM| Implemented pytorch nn.LSTM() with tensorrt api |\n\n## Speed Benchmark\n\n| Models | Device | BatchSize | Mode | Input Shape(HxW) | FPS |\n|-|-|:-:|:-:|:-:|:-:|\n| YOLOv3-tiny | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 333 |\n| YOLOv3(darknet53) | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 39.2 |\n| YOLOv3(darknet53) | Xeon E5-2620/GTX1080 | 1 | INT8 | 608x608 | 71.4 |\n| YOLOv3-spp(darknet53) | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 38.5 |\n| YOLOv4(CSPDarknet53) | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 35.7 |\n| YOLOv4(CSPDarknet53) | Xeon E5-2620/GTX1080 | 4 | FP32 | 608x608 | 40.9 |\n| YOLOv4(CSPDarknet53) | Xeon E5-2620/GTX1080 | 8 | FP32 | 608x608 | 41.3 |\n| YOLOv5-s v3.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 142 |\n| YOLOv5-s v3.0 | Xeon E5-2620/GTX1080 | 4 | FP32 | 608x608 | 173 |\n| YOLOv5-s v3.0 | Xeon E5-2620/GTX1080 | 8 | FP32 | 608x608 | 190 |\n| YOLOv5-m v3.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 71 |\n| YOLOv5-l v3.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 43 |\n| YOLOv5-x v3.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 29 |\n| YOLOv5-s v4.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 142 |\n| YOLOv5-m v4.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 71 |\n| YOLOv5-l v4.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 40 |\n| YOLOv5-x v4.0 | Xeon E5-2620/GTX1080 | 1 | FP32 | 608x608 | 27 |\n| RetinaFace(resnet50) | Xeon E5-2620/GTX1080 | 1 | FP32 | 480x640 | 90 |\n| RetinaFace(resnet50) | Xeon E5-2620/GTX1080 | 1 | INT8 | 480x640 | 204 |\n| RetinaFace(mobilenet0.25) | Xeon E5-2620/GTX1080 | 1 | FP32 | 480x640 | 417 |\n| ArcFace(LResNet50E-IR) | Xeon E5-2620/GTX1080 | 1 | FP32 | 112x112 | 333 |\n| CRNN | Xeon E5-2620/GTX1080 | 1 | FP32 | 32x100 | 1000 |\n\nHelp wanted, if you got speed results, please add an issue or PR.\n\n## Acknowledgments & Contact\n\nAny contributions, questions and discussions are welcomed, contact me by following info.\n\nE-mail: wangxinyu_es@163.com\n\nWeChat ID: wangxinyu0375 (可加我微信进tensorrtx交流群，**备注：tensorrtx**)\n"
        },
        {
          "name": "alexnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "arcface",
          "type": "tree",
          "content": null
        },
        {
          "name": "centernet",
          "type": "tree",
          "content": null
        },
        {
          "name": "crnn",
          "type": "tree",
          "content": null
        },
        {
          "name": "csrnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "dbnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "densenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "detr",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "efficient_ad",
          "type": "tree",
          "content": null
        },
        {
          "name": "efficientnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "ghostnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "googlenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "hrnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "ibnnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "inception",
          "type": "tree",
          "content": null
        },
        {
          "name": "lenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "lprnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "mlp",
          "type": "tree",
          "content": null
        },
        {
          "name": "mnasnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "mobilenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "psenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "rcnn",
          "type": "tree",
          "content": null
        },
        {
          "name": "real-esrgan",
          "type": "tree",
          "content": null
        },
        {
          "name": "refinedet",
          "type": "tree",
          "content": null
        },
        {
          "name": "repvgg",
          "type": "tree",
          "content": null
        },
        {
          "name": "resnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "retinaface",
          "type": "tree",
          "content": null
        },
        {
          "name": "retinafaceAntiCov",
          "type": "tree",
          "content": null
        },
        {
          "name": "scaled-yolov4",
          "type": "tree",
          "content": null
        },
        {
          "name": "senet",
          "type": "tree",
          "content": null
        },
        {
          "name": "shufflenetv2",
          "type": "tree",
          "content": null
        },
        {
          "name": "squeezenet",
          "type": "tree",
          "content": null
        },
        {
          "name": "superpoint",
          "type": "tree",
          "content": null
        },
        {
          "name": "swin-transformer",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsm",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorials",
          "type": "tree",
          "content": null
        },
        {
          "name": "ufld",
          "type": "tree",
          "content": null
        },
        {
          "name": "unet",
          "type": "tree",
          "content": null
        },
        {
          "name": "vgg",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolo11",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolop",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov10",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov3-spp",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov3-tiny",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov3",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov4",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov5",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov7",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov8",
          "type": "tree",
          "content": null
        },
        {
          "name": "yolov9",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}