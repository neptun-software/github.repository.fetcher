{
  "metadata": {
    "timestamp": 1736566048164,
    "page": 32,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bpftrace/bpftrace",
      "stars": 8822,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.626953125,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterFunction: true\nBreakAfterAttributes: Leave\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\nBreakStringLiterals: true\nColumnLimit: 80\nCommentPragmas: '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: true\nDisableFormat: false\nForEachMacros: ['bpf_map__for_each', 'bpf_object__for_each_program']\nFixNamespaceComments: true\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth: 2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\n# Note: These penalties are not only relative to each other, but also to\n# penalties for more cases hardcoded into clang-format\nPenaltyBreakAssignment: 100\nPenaltyBreakBeforeFirstCallParameter: 75\nPenaltyBreakComment: 1\nPenaltyBreakFirstLessLess: 50\nPenaltyBreakString: 500\nPenaltyExcessCharacter: 1000\nPenaltyReturnTypeOnItsOwnLine: 1000000\nPointerAlignment: Right\nReflowComments: true\nSortIncludes: true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp11\nTabWidth: 8\nUseTab: Never\n---\nLanguage: Json\nDisableFormat: true\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.529296875,
          "content": "Checks: |\n  -*\n  bugprone-suspicious-memset-usage\n  bugprone-unchecked-optional-access\n  bugprone-undefined-memory-manipulation\n  bugprone-unused-raii\n  bugprone-use-after-move\n  google-readability-casting\n  modernize-concat-nested-namespaces\n  modernize-deprecated-headers\n  modernize-loop-convert\n  modernize-make-shared\n  modernize-make-unique\n  modernize-raw-string-literal\n  modernize-use-nullptr\n  modernize-use-override\n  modernize-redundant-void-arg\n  performance-unnecessary-copy-initialization\n\nWarningsAsErrors: \"*\"\nUseColor: true\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2060546875,
          "content": "[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\nindent_style = space\nindent_size = 2\n\n[*.py]\nindent_size = 4\n\n[tools/*.bt]\nindent_style = tab\nindent_size = unset\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.080078125,
          "content": "# Move opening brace to starting context\n453198bdabdaffdc1cb600038af60644e1326656\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0771484375,
          "content": "*.bt linguist-language=D\n*.bt linguist-vendored\n*.ll linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1787109375,
          "content": "/.idea\nbuild/\nbuild-*/\ntests/runtime/*.pyc\n.vagrant\ntests/**/*.bc\n*~\n\\#*\\#\n.\\#*\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n*.btaot\n\nresult\nignored/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 115.169921875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to\n[Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## Unreleased\n\n#### Breaking Changes\n#### Added\n- Pointers may now be used in if conditions, tenary conditions and as operands in logical AND and OR expressions\n  - [#3656](https://github.com/bpftrace/bpftrace/pull/3656)\n#### Changed\n- `probe` builtin is now represented as a string type\n  - [#3638](https://github.com/bpftrace/bpftrace/pull/3638)\n- Change bpftrace help flag output from stderr to stdout\n  - [#3678](https://github.com/bpftrace/bpftrace/pull/3678)\n#### Deprecated\n#### Removed\n#### Fixed\n- Fix json output for none type\n  - [#3692](https://github.com/bpftrace/bpftrace/pull/3692)\n#### Security\n#### Docs\n#### Tools\n\n## [0.22.0] 2025-01-07\n\n#### Breaking Changes\n- Return `uint32` instead of `uint64` for `pid` and `tid` builtins\n  - [#3441](https://github.com/bpftrace/bpftrace/pull/3441)\n  - [Migration guide](docs/migration_guide.md#pid-and-tid-builtins-return-uint32)\n- Remove multi-map `delete` functionality\n  - [#3506](https://github.com/bpftrace/bpftrace/pull/3506)\n  - [Migration guide](docs/migration_guide.md#multi-key-delete-removed)\n- Add lexical/block scoping for variables\n  - [#3367](https://github.com/bpftrace/bpftrace/pull/3367)\n  - [Migration guide](docs/migration_guide.md#added-block-scoping-for-scratch-variables)\n- Replace default map printing on `SIGUSR1` with custom signal handling probes\n  - [#3522](https://github.com/bpftrace/bpftrace/pull/3522)\n  - [Migration guide](docs/migration_guide.md#default-sigusr1-handler-removed)\n#### Added\n- Bump max supported LLVM version to 19\n  - [#3433](https://github.com/bpftrace/bpftrace/pull/3433)\n- Add `--dry-run` CLI option\n  - [#3203](https://github.com/bpftrace/bpftrace/pull/3203)\n- Enable avg map reads in kernel space (implicit casting)\n  - [#3268](https://github.com/bpftrace/bpftrace/pull/3268)\n- Enable for-loops in multiple probes\n  - [#3285](https://github.com/bpftrace/bpftrace/pull/3285)\n- For-loops: Allow sharing variables between the main probe and the loop's body\n  - [#3014](https://github.com/bpftrace/bpftrace/pull/3014)\n- Parse C++ Class and Inheritance from Debug Info\n  - [#3094](https://github.com/bpftrace/bpftrace/pull/3094)\n- Add an optional `size` parameter to `path`\n  - [#3401](https://github.com/bpftrace/bpftrace/pull/3401)\n- Allow tuples to be used as map keys\n  - [#3390](https://github.com/bpftrace/bpftrace/pull/3390/)\n- Add `has_key` function for maps\n  - [#3358](https://github.com/bpftrace/bpftrace/pull/3358)\n- Add ability to attach kprobes to inlined functions\n  - [#3301](https://github.com/bpftrace/bpftrace/pull/3095)\n- Variable declarations with `let`\n  - [#3461](https://github.com/bpftrace/bpftrace/pull/3461)\n- Support symbolizing enum values using `%s` specifier in `printf()`\n  - [#3515](https://github.com/bpftrace/bpftrace/pull/3515)\n- Configuration option to suppress printing maps by default at program exit\n  - [#3547](https://github.com/bpftrace/bpftrace/pull/3547)\n- Add `symbol_source` config to source uprobe locations from either DWARF or the Symbol Table\n  - [#3504](https://github.com/bpftrace/bpftrace/pull/3504/)\n- Introduce builtin to access percpu kernel data\n  - [#3596](https://github.com/bpftrace/bpftrace/pull/3596/)\n#### Changed\n- Merge output into `stdout` when `-lv`\n  - [#3383](https://github.com/bpftrace/bpftrace/pull/3383)\n- Stream output when printing maps\n  - [#3264](https://github.com/bpftrace/bpftrace/pull/3264)\n- Only print kernel headers not found message if parsing fails\n  - [#3265](https://github.com/bpftrace/bpftrace/pull/3265)\n- Add mandatory \"stage\" argument to the `-d` CLI option\n  - [#3203](https://github.com/bpftrace/bpftrace/pull/3203)\n- Allow simultaneous use of `-v` and `-d`\n  - [#3203](https://github.com/bpftrace/bpftrace/pull/3203)\n- Remove length limitations for the `buf` builtin function\n  - [#3249](https://github.com/bpftrace/bpftrace/pull/3249)\n- Change `delete` API to accept a map and key as separate args\n  - [#3472](https://github.com/bpftrace/bpftrace/pull/3472)\n- Symbolize enums when used in maps\n  - [#3539](https://github.com/bpftrace/bpftrace/pull/3539)\n- Supported LLVM version for static builds changed to LLVM 18\n  - [#3631](https://github.com/bpftrace/bpftrace/pull/3631)\n#### Deprecated\n#### Removed\n- Remove the `-dd` CLI option\n  - [#3203](https://github.com/bpftrace/bpftrace/pull/3203)\n- Drop support for LLVM 12 and below\n  - [#3325](https://github.com/bpftrace/bpftrace/pull/3325)\n- Remove `ALLOW_UNSAFE_PROBE` compiler flag\n  - [#3476](https://github.com/bpftrace/bpftrace/pull/3476)\n#### Fixed\n- Fix verifier error when array indexing through pointer\n  - [#3465](https://github.com/bpftrace/bpftrace/pull/3465)\n- Fix segfault for multi-tracepoint probes\n  - [#3274](https://github.com/bpftrace/bpftrace/pull/3274)\n- Fix verifier error from misaligned stack access when using strings as map keys\n  - [#3294](https://github.com/bpftrace/bpftrace/issues/3294)\n- Fix min/max map functions\n  - [#3298](https://github.com/bpftrace/bpftrace/pull/3298)\n- Fix stack mode for stack builtin\n  - [#3322](https://github.com/bpftrace/bpftrace/pull/3322)\n- Fix lldb support in appimage builds\n  - #[3339](https://github.com/bpftrace/bpftrace/pull/3339)\n- Fix parsing large unsigned int strings as positional params\n  - [#3336](https://github.com/bpftrace/bpftrace/pull/3336)\n- Fix json formatting for `strftime` function\n  - [#3381](https://github.com/bpftrace/bpftrace/pull/3381)\n- Fix BTF/DWARF parsing for structs contained in arrays\n  - [#3422](https://github.com/bpftrace/bpftrace/pull/3422)\n- Fix integer comparisons and auto casting for scratch variables\n  - [#3416](https://github.com/bpftrace/bpftrace/pull/3416)\n- Fix tuple resizing\n  - [#3443](https://github.com/bpftrace/bpftrace/pull/3443)\n- Handle invalid BTF without crashing\n  - [#3453](https://github.com/bpftrace/bpftrace/pull/3453)\n- Fix json formatting for hex values\n  - [#3475](https://github.com/bpftrace/bpftrace/pull/3475)\n- Fix binary operations on integers always returning 64 bit values\n  - [#3517](https://github.com/bpftrace/bpftrace/pull/3517)\n- Fix verifier error when comparing result of len()\n  - [#3308](https://github.com/bpftrace/bpftrace/issues/3308)\n- Fix type back propagation for map keys\n  - [#3536](https://github.com/bpftrace/bpftrace/pull/3536)\n- Fix crash by adding checks for bad var/map assignments\n  - [#3542](https://github.com/bpftrace/bpftrace/pull/3542)\n- Fix field access and offsetof for strings that are builtin types\n  - [#3565](https://github.com/bpftrace/bpftrace/pull/3565)\n- Fix crash when using castable per-cpu map types as map keys\n  - [#3594](https://github.com/bpftrace/bpftrace/pull/3594)\n- Fix loop values with per-cpu aggregations\n  - [#3664](https://github.com/bpftrace/bpftrace/pull/3664)\n#### Security\n#### Docs\n- Remove mention of unsupported character literals\n  - [#3283](https://github.com/bpftrace/bpftrace/pull/3283)\n#### Tools\n- Fix bashreadline tool probe for dynamically linked readline\n  - [#3564](https://github.com/bpftrace/bpftrace/pull/3564)\n\n## [0.21.0] 2024-06-21\n\n#### Added\n- Add `lazy_symbolication` config option\n  - [#2958](https://github.com/bpftrace/bpftrace/pull/2958)\n- Add ability to list all probes in a program\n  - [#2969](https://github.com/bpftrace/bpftrace/pull/2969)\n- Add ability to call print() with indexed maps to print single map values\n  - [#3027](https://github.com/bpftrace/bpftrace/pull/3027)\n- Add LLVM 18 support\n  - [#3051](https://github.com/bpftrace/bpftrace/pull/3051)\n- Add ability to call delete() with multiple arguments\n  - [#3046](https://github.com/bpftrace/bpftrace/pull/3046)\n- Add for-each loops for iterating over map elements\n  - [#3003](https://github.com/bpftrace/bpftrace/pull/3003)\n- Add optional systemd support\n  - [#3158](https://github.com/bpftrace/bpftrace/pull/3158)\n- Add ability to attach uprobes to inlined functions\n  - [#3095](https://github.com/bpftrace/bpftrace/pull/3095)\n- Enable count, sum, min, and max map reads in kernel space (implicit casting)\n  - [#3189](https://github.com/bpftrace/bpftrace/pull/3189)\n  - [#3226](https://github.com/bpftrace/bpftrace/pull/3226)\n- Add config option for handling missing probes\n  - [#3246](https://github.com/bpftrace/bpftrace/pull/3246)\n- Support large arguments for printf() and print()\n  - [#3368](https://github.com/bpftrace/bpftrace/pull/3368)\n- Add ability to call exit() with an exit code\n  - [#3501](https://github.com/bpftrace/bpftrace/pull/3501)\n#### Changed\n- Better error message for args in mixed probes\n  - [#3047](https://github.com/bpftrace/bpftrace/pull/3047)\n- Reproducible Builds: Do not store timestamps in gzip header\n  - [#3096](https://github.com/bpftrace/bpftrace/pull/3096)\n- Improve DWARF support, using liblldb instead of libdw\n  - [#3042](https://github.com/bpftrace/bpftrace/pull/3042)\n- Use new hash function to reduce collisions when aggregating on stack traces\n  - [#3060](https://github.com/bpftrace/bpftrace/pull/3060)\n- Disable func builtin for kretprobes and uretprobes when `get_func_ip` feature is not available\n  - [#2645](https://github.com/bpftrace/bpftrace/pull/2645)\n- Move error printing from debug to verbose mode\n  - [#3202](https://github.com/bpftrace/bpftrace/pull/3202)\n- Better error message when libbpf is too old\n  - [#3212](https://github.com/bpftrace/bpftrace/pull/3212)\n- Allow trailing semicolons and empty blocks in config syntax\n  - [#3077](https://github.com/bpftrace/bpftrace/pull/3077)\n- Allow attaching to `spin_lock` functions with mitigations to prevent deadlocks\n  - [#3206](https://github.com/bpftrace/bpftrace/pull/3206)\n- Remove length limitations for strings coming out of `str()` and `path()`\n  - [#3228](https://github.com/bpftrace/bpftrace/pull/3228)\n  - [#3237](https://github.com/bpftrace/bpftrace/pull/3237)\n  - [#3245](https://github.com/bpftrace/bpftrace/pull/3245)\n#### Deprecated\n- Deprecate `sarg` builtin\n  - [#3095](https://github.com/bpftrace/bpftrace/pull/3095)\n#### Removed\n#### Fixed\n- Fix ability to interrupt bpftrace during probe attach\n  - [#3053](https://github.com/bpftrace/bpftrace/pull/3053)\n- Fix field resolution on structs with anon union as first field\n  - [#2964](https://github.com/bpftrace/bpftrace/pull/2964)\n- Fix alignment of atomic map counter update\n  - [#3045](https://github.com/bpftrace/bpftrace/pull/3045)\n- Fix func builtin for kretprobes and uretprobes for kernels with working `get_func_ip` feature\n  - [#2645](https://github.com/bpftrace/bpftrace/pull/2645)\n- Fix ustack missing the second-from-top stack frame in uprobes\n  - [#3095](https://github.com/bpftrace/bpftrace/pull/3095)\n- Fix storing strings of differing lengths in a variable\n  - [#3178](https://github.com/bpftrace/bpftrace/pull/3178)\n- Fix field resolution for structs in arrays\n  - [#3024](https://github.com/bpftrace/bpftrace/pull/3024)\n- Fix error in dereferencing kernel double pointers\n  - [#3024](https://github.com/bpftrace/bpftrace/pull/3024)\n- Fix variable corruption when used as map key\n  - [#3195](https://github.com/bpftrace/bpftrace/pull/3195)\n- Fix crash when assigning a record type to a map\n  - [#3220](https://github.com/bpftrace/bpftrace/pull/3220)\n- Fix type resolution for pointers with `BTF_KIND_TYPE_TAG`\n  - [#3240](https://github.com/bpftrace/bpftrace/pull/3240)\n- Fix attachment of probes attaching to wildcarded and non-wildcarded kprobes\n  - [#3246](https://github.com/bpftrace/bpftrace/pull/3246)\n#### Security\n- Don't unpack kernel headers or look in tmp\n  - [#3156](https://github.com/bpftrace/bpftrace/pull/3156)\n#### Docs\n#### Tools\n- Ignore warnings for missing probes\n  - [#3246](https://github.com/bpftrace/bpftrace/pull/3246)\n\n## [0.20.0] 2024-01-22\n\n#### Added\n- Add log2 histograms with finer granularity\n  - [#2831](https://github.com/bpftrace/bpftrace/pull/2831)\n- Add a `jiffies` builtin for advanced usages\n  - [#2769](https://github.com/bpftrace/bpftrace/pull/2769)\n- Emit better errors messages for invalid attachpoints\n  - [#2781](https://github.com/bpftrace/bpftrace/pull/2781)\n- Add support for uprobe_multi link\n  - [#2810](https://github.com/bpftrace/bpftrace/pull/2810)\n- Attach BTF to generated BPF programs\n  - [#2804](https://github.com/bpftrace/bpftrace/pull/2804)\n- Add fentry/fexit aliases for kfunc/kretfunc\n  - [#2844](https://github.com/bpftrace/bpftrace/pull/2844)\n- Add support for uprobe pid targeting\n  - [#2830](https://github.com/bpftrace/bpftrace/pull/2830)\n- New builtin for getting the number of map elements\n  - [#2840](https://github.com/bpftrace/bpftrace/pull/2840)\n- Add more helpful error messages for map operations\n  - [#2905](https://github.com/bpftrace/bpftrace/pull/2905)\n- New config block syntax\n  - [#2815](https://github.com/bpftrace/bpftrace/pull/2815)\n- Add support for kprobe:module:function\n  - [#2897](https://github.com/bpftrace/bpftrace/pull/2897)\n#### Changed\n- Standardize config and env var names\n  - [#2815](https://github.com/bpftrace/bpftrace/pull/2815)\n#### Deprecated\n#### Removed\n- Remove snapcraft support\n  - [#2832](https://github.com/bpftrace/bpftrace/pull/2832)\n#### Fixed\n- Fix JSON output for cgroup_path\n  - [#2793](https://github.com/bpftrace/bpftrace/pull/2793)\n- Fix silent truncation of 64-bit values in hist()\n  - [#2822](https://github.com/bpftrace/bpftrace/pull/2822)\n- utils: use /data/local/tmp as temprary dir on Android\n  - [#2828](https://github.com/bpftrace/bpftrace/pull/2828)\n- Fix uprobe multi probe for targets with wildcards\n  - [#2851](https://github.com/bpftrace/bpftrace/pull/2851)\n- Fix symbolication on for 32-bit userspcae and 64-bit kernel\n  - [#2869](https://github.com/bpftrace/bpftrace/pull/2869)\n- Fix retval for kretfunc/fexit\n  - [#2864](https://github.com/bpftrace/bpftrace/pull/2864)\n- Fix attachment/listing of wildcarded module kfuncs\n  - [#2914](https://github.com/bpftrace/bpftrace/pull/2914)\n- Fix uprobe attachment across container boundary\n  - [#2662](https://github.com/bpftrace/bpftrace/pull/2662)\n- Fix generated BTF for older kernels\n  - [#2934](https://github.com/bpftrace/bpftrace/pull/2934)\n#### Docs\n- Fix one-liner tutorial for systems with BTF\n  - [#2919](https://github.com/bpftrace/bpftrace/pull/2919)\n  - [#2924](https://github.com/bpftrace/bpftrace/pull/2924)\n#### Tools\n- Add PPID field to `execsnoop.bt`\n  - [#2876](https://github.com/bpftrace/bpftrace/pull/2876)\n- Use `strftime` instead of `elapsed` in `execsnoop.bt`\n  - [#2904](https://github.com/bpftrace/bpftrace/pull/2904)\n- Use `strftime` instead of `elapsed` in `threadsnoop.bt`\n  - [#2917](https://github.com/bpftrace/bpftrace/pull/2917)\n- Increase PID field width and align to the right in `threadsnoop.bt`\n  - [#2928](https://github.com/bpftrace/bpftrace/pull/2928)\n- Update runqlen.bt to remove `runnable_weight` field from cfs_rq struct.\n  - [#2790](https://github.com/bpftrace/bpftrace/pull/2790)\n- Update mdflush.bt to use blkdev.h instead of genhd.h for non-BTF builds.\n  - [#2849](https://github.com/bpftrace/bpftrace/pull/2849)\n- Add milliseconds to timestamp and align numbers to the right in `killsnoop.bt`\n  - [#2936](https://github.com/bpftrace/bpftrace/pull/2936)\n\n## [0.19.0] 2023-09-19\n\n#### Added\n- Rawtracepoint support wildcards and list show\n  - [#2588](https://github.com/bpftrace/bpftrace/pull/2588)\n- Support all iterators\n  - [#2630](https://github.com/bpftrace/bpftrace/pull/2630)\n- Improve working with all probe params (kfunc, uprobe)\n  - [#2477](https://github.com/bpftrace/bpftrace/pull/2477)\n- Support func builtin for k(ret)func probes\n  - [#2692](https://github.com/bpftrace/bpftrace/pull/2692)\n- Support casting int <-> int array\n  - [#2686](https://github.com/bpftrace/bpftrace/pull/2686)\n- Support targeting all running processes for USDTs\n  - [#2734](https://github.com/bpftrace/bpftrace/pull/2734)\n- Support targeting all running processes for uprobes/uretprobes\n  - [#2757](https://github.com/bpftrace/bpftrace/pull/2757)\n#### Changed\n- Make `args` a structure (instead of a pointer)\n  - [#2578](https://github.com/bpftrace/bpftrace/pull/2578)\n- Improve user symbol resolution\n  - [#2386](https://github.com/bpftrace/bpftrace/pull/2386)\n- uprobes: make C++ symbol demangling explicit\n  - [#2657](https://github.com/bpftrace/bpftrace/pull/2657)\n- uprobe: improve C++ probes listing\n  - [#2693](https://github.com/bpftrace/bpftrace/pull/2693)\n#### Removed\n- Delete embedded build support and surrounding infra\n  - [#2742](https://github.com/bpftrace/bpftrace/pull/2742)\n#### Fixed\n- Fix resolving username for malformed /etc/passwd\n  - [#2631](https://github.com/bpftrace/bpftrace/pull/2631)\n- Fix crashes when maps are concurrently modified\n  - [#2623](https://github.com/bpftrace/bpftrace/pull/2623)\n- Fix alignment of byte arrays inside tuples\n  - [#2625](https://github.com/bpftrace/bpftrace/pull/2625)\n- cmake: fix linking libbfd\n  - [#2673](https://github.com/bpftrace/bpftrace/pull/2673)\n- Allow '+' in attach point path\n  - [#2696](https://github.com/bpftrace/bpftrace/pull/2696)\n- Improve listing and 'probe' builtin for several probe types\n  - [#2691](https://github.com/bpftrace/bpftrace/pull/2691)\n- Allow probe builtin with aliased software/hardware probes\n  - [#2711](https://github.com/bpftrace/bpftrace/pull/2711)\n- Support executing symlinked binaries with `-c`\n  - [#2708](https://github.com/bpftrace/bpftrace/pull/2708)\n- Add access to `CLOCK_MONOTONIC` with `nsecs(monotonic)`\n  - [#2718](https://github.com/bpftrace/bpftrace/pull/2718)\n- iter: Skip structures with '__safe_trusted' suffix\n  - [#2732](https://github.com/bpftrace/bpftrace/pull/2732)\n- Improve detection of unknown typedefs in ClangParser\n  - [#2763](https://github.com/bpftrace/bpftrace/pull/2763)\n\n\n## [0.18.0] 2023-05-15\n\n#### Added\n- Add `iter:task_vma` iterators detection\n  - [#2524](https://github.com/bpftrace/bpftrace/pull/2524)\n- Support parsing bitfields from BTF/DWARF\n  - [#2505](https://github.com/bpftrace/bpftrace/pull/2505)\n- Support printing entire structs\n  - [#2557](https://github.com/bpftrace/bpftrace/pull/2557)\n- BTF support for tracepoints defined in modules\n  - [#2479](https://github.com/bpftrace/bpftrace/pull/2479)\n- Add trailer to truncated strings\n  - [#2559](https://github.com/bpftrace/bpftrace/pull/2559)\n- Enable watchpoint support for PowerPC\n  - [#2577](https://github.com/bpftrace/bpftrace/pull/2577)\n- Add new function, `offsetof`, get the offset of the element in the struct\n  - [#2579](https://github.com/bpftrace/bpftrace/pull/2579)\n- Add 'StackMode::raw' for ustack and kstack formatting\n  - [#2581](https://github.com/bpftrace/bpftrace/pull/2581)\n- Add 'BPFTRACE_STACK_MODE' env variable\n  - [#2586](https://github.com/bpftrace/bpftrace/pull/2586)\n#### Changed\n- Improve attaching to uprobes with size 0\n  - [#2562](https://github.com/bpftrace/bpftrace/pull/2562)\n- Support ringbuf output\n  - [#2475](https://github.com/bpftrace/bpftrace/pull/2475)\n#### Deprecated\n#### Removed\n#### Fixed\n- Simplify and fix probe index assignment\n  - [#2482](https://github.com/bpftrace/bpftrace/pull/2482)\n- Handle colon in positional param used in attachpoint\n  - [#2514](https://github.com/bpftrace/bpftrace/pull/2514)\n- Handle BPF load errors for multi-attachpoints\n  - [#2521](https://github.com/bpftrace/bpftrace/pull/2521)\n- Respect BPFTRACE_STRLEN environment variable for all strings\n  - [#2545](https://github.com/bpftrace/bpftrace/pull/2545)\n- Treat str() builtin's len parameter as int64\n  - [#2546](https://github.com/bpftrace/bpftrace/pull/2546)\n- arm64: define the KASAN_SHADOW_SCALE_SHIFT macro\n  - [#2518](https://github.com/bpftrace/bpftrace/pull/2518)\n- Fix segfaults in dwarf_parser\n  - [#2587](https://github.com/bpftrace/bpftrace/pull/2587)\n#### Docs\n#### Tools\n\n## [0.17.0] 2023-01-30\n\n#### Added\n- Support for 32-bit ARM systems\n  - [#2360](https://github.com/bpftrace/bpftrace/pull/2360)\n- Support BTF for kernel modules\n  - [#2315](https://github.com/bpftrace/bpftrace/pull/2315)\n- Add %rh option to print buffer as hex without \\x\n  - [#2445](https://github.com/bpftrace/bpftrace/pull/2445)\n- Add stdbool.h to built-in headers\n  - [#2380](https://github.com/bpftrace/bpftrace/pull/2380)\n- Add `strcontains` builtin function, find a substring in a string\n  - [#2393](https://github.com/bpftrace/bpftrace/pull/2393)\n\n#### Changed\n- Raise minimum versions for libbpf and bcc and vendor them for local builds\n  - [#2369](https://github.com/bpftrace/bpftrace/pull/2369)\n  - [#2370](https://github.com/bpftrace/bpftrace/pull/2370)\n- Support comparison for integer arrays\n  - [#2387](https://github.com/bpftrace/bpftrace/pull/2387)\n#### Deprecated\n#### Removed\n- Drop Ubuntu 19.10 lockdown detection\n  - [#2467](https://github.com/bpftrace/bpftrace/pull/2467)\n#### Fixed\n- Fix pointer/register loads on 32-bit architectures\n  - [#2361](https://github.com/bpftrace/bpftrace/pull/2361)\n- Fix kprobe multi-attachment\n  - [#2381](https://github.com/bpftrace/bpftrace/pull/2381)\n- Fix attaching to multiple USDT probes using the same wildcard\n  - [#2456](https://github.com/bpftrace/bpftrace/pull/2456)\n- Fix pointer arithmetics codegen\n  - [#2397](https://github.com/bpftrace/bpftrace/pull/2397)\n- Fix segfault for invalid AssignVarStatement visit\n  - [#2423](https://github.com/bpftrace/bpftrace/pull/2423)\n- Better handling of missing function trace support files\n  - [#2433](https://github.com/bpftrace/bpftrace/pull/2433)\n- Fix unroll ID reset\n  - [#2439](https://github.com/bpftrace/bpftrace/pull/2439)\n- Support profile and interval probes in probe matcher\n  - [#2443](https://github.com/bpftrace/bpftrace/pull/2443)\n- Fix BTF detection macro in tools/old/mdflush.bt\n  - [#2444](https://github.com/bpftrace/bpftrace/pull/2444)\n\n#### Docs\n#### Tools\n\n## [0.16.0] 2022-08-30\n\n#### Added\n- Add builtin: `numaid`\n  - [#2177](https://github.com/bpftrace/bpftrace/pull/2177)\n- Add helper verifier error handling\n  - [#2279](https://github.com/bpftrace/bpftrace/pull/2279)\n- Add builtin: `pton`\n  - [#2289](https://github.com/bpftrace/bpftrace/pull/2289)\n- Add builtin: `debugf`\n  - [#2307](https://github.com/bpftrace/bpftrace/pull/2307)\n- Add builtin: `strerror`\n  - [#2329](https://github.com/bpftrace/bpftrace/pull/2329)\n\n#### Changed\n- Move from BCC to libbpf\n  - [#2265](https://github.com/bpftrace/bpftrace/pull/2265)\n- Add non-uprobe based BEGIN/END implementation\n  - [#2264](https://github.com/bpftrace/bpftrace/pull/2264)\n- Helper errors (-k, -kk options) are now emitted to text or json output\n  - [#2326](https://github.com/bpftrace/bpftrace/pull/2326)\n- kprobe offset verification is now optional, without requiring --unsafe\n  - [#2332](https://github.com/bpftrace/bpftrace/pull/2332)\n\n#### Deprecated\n#### Removed\n#### Fixed\n- Disallow different lhist bounds in a single map\n  - [#2204](https://github.com/bpftrace/bpftrace/pull/2204)\n- Serialize empty histogram as an empty JSON array\n  - [#2250](https://github.com/bpftrace/bpftrace/pull/2250)\n- Handle enum values in tracepoint format defs\n  - [#2236](https://github.com/bpftrace/bpftrace/pull/2236)\n- Fix compound assignments with non-unary expr\n  - [#2291](https://github.com/bpftrace/bpftrace/pull/2293)\n- Fix invalid LLVM IR in join builtin\n  - [#2296](https://github.com/bpftrace/bpftrace/pull/2296)\n- Fix lexer buffer size check\n  - [#2313](https://github.com/bpftrace/bpftrace/pull/2313)\n- Fix invalid LLVM IR as detected by tests\n  - [#2316](https://github.com/bpftrace/bpftrace/pull/2316)\n- Fix builds against libbfd(binutils) >=2.39\n  - [#2328](https://github.com/bpftrace/bpftrace/pull/2328)\n- Fix access to ctx\n  - [#2343](https://github.com/bpftrace/bpftrace/pull/2343)\n\n#### Docs\n#### Tools\n- Add sslsnoop and ssllatency tools\n  - [#2117](https://github.com/bpftrace/bpftrace/pull/2117)\n- Add undump tool.\n  - [#2225](https://github.com/bpftrace/bpftrace/pull/2225)\n\n## [0.15.0] 2022-05-24\n\nThe 0.15.0 release has basic support for LLVM 14 but not all features work yet, see [#2228](https://github.com/bpftrace/bpftrace/issues/2228)\n\n#### Added\n- Add option for unconditional hex output\n  - [#2200](https://github.com/bpftrace/bpftrace/pull/2200)\n- Add builtin function: `cgroup_path`\n  - [#2055](https://github.com/bpftrace/bpftrace/pull/2055)\n- Limit number of generated BPF programs\n  - [#2141](https://github.com/bpftrace/bpftrace/pull/2141)\n- Support the octal format specifier (`%o`) in `printf`\n  - [#2147](https://github.com/bpftrace/bpftrace/pull/2147)\n- Improve include paths resolution\n  - [#2149](https://github.com/bpftrace/bpftrace/pull/2149)\n- Automatic type resolution from DWARF\n  - [#2034](https://github.com/bpftrace/bpftrace/pull/2034)\n- Add builtin function: `bswap`\n  - [#2166](https://github.com/bpftrace/bpftrace/pull/2166)\n- Print all maps to stdout on `SIGUSR1`\n  - [#2203](https://github.com/bpftrace/bpftrace/pull/2203)\n- Add builtin function: `skb_output`\n  - [#2223](https://github.com/bpftrace/bpftrace/pull/2223)\n\n#### Changed\n- Use auto-resolution of library paths for tools\n  - [#2181](https://github.com/bpftrace/bpftrace/pull/2181)\n- Improve handling empty attach points\n  - [#2179](https://github.com/bpftrace/bpftrace/pull/2179)\n\n#### Fixed\n- Fix precedence of multiplicative operations\n  - [#2096](https://github.com/bpftrace/bpftrace/pull/2096)\n- Fix probe matching for uprobes with absolute address\n  - [#2138](https://github.com/bpftrace/bpftrace/pull/2138)\n- Fix tools to work on new kernel versions\n  - [#2136](https://github.com/bpftrace/bpftrace/pull/2136)\n- Fix uprobe target resolution\n  - [#2180](https://github.com/bpftrace/bpftrace/pull/2180)\n- Fix using wildcards in kfunc\n  - [#2208](https://github.com/bpftrace/bpftrace/pull/2208)\n- Improve handling of format strings\n  - [#2164](https://github.com/bpftrace/bpftrace/pull/2164)\n- Fix codegen for buf\n  - [#2217](https://github.com/bpftrace/bpftrace/pull/2217)\n\n#### Tools\n- Update biosnoop.bt for kernel >=5.17\n  - [#2207](https://github.com/bpftrace/bpftrace/pull/2207)\n\n\n## [0.14.1] 2021-12-29\n\n#### Fixed\n\n- Fix precedence of multiplicative operations\n  - [#2096](https://github.com/bpftrace/bpftrace/pull/2096)\n\n## [0.14.0] 2021-10-22\n\n#### Added\n- Build time dependency on cereal\n  - [#1893](https://github.com/bpftrace/bpftrace/pull/1893)\n- Build time dependency on asciidoctor for man page generation\n  - [#1927] (https://github.com/bpftrace/bpftrace/pull/1927)\n- Support microsecond timestamps in stftime()\n  - [#1922](https://github.com/bpftrace/bpftrace/pull/1922)\n- Add `_` as integer literal digit separator\n  - [#1900](https://github.com/bpftrace/bpftrace/pull/1900)\n- Support for C style integer suffix in parser\n  - [#1938](https://github.com/bpftrace/bpftrace/pull/1938)\n- Add C like pointer arithmetic\n  - [#1881](https://github.com/bpftrace/bpftrace/pull/1881)\n- Automatic resolution of library paths for uprobes\n  - [#1971](https://github.com/bpftrace/bpftrace/pull/1971)\n- Support positional parameters as integer literals\n  - [#1982](https://github.com/bpftrace/bpftrace/pull/1982)\n- Access to uprobe arguments by name\n  - [#1994](https://github.com/bpftrace/bpftrace/pull/1994)\n- Support variable strings size\n  - [#2044](https://github.com/bpftrace/bpftrace/pull/2044)\n\n#### Changed\n- Prevent LLVM from unrolling loops\n  - [#1967](https://github.com/bpftrace/bpftrace/pull/1967)\n\n#### Deprecated\n\n#### Removed\n\n#### Fixed\n- Fix memory leaks in struct types\n  - [#1885](https://github.com/bpftrace/bpftrace/pull/1885)\n- Fix strncmp() when N is bigger than on-stack buffer\n  - [#1974](https://github.com/bpftrace/bpftrace/pull/1974)\n- Fix strncmp() to check for NUL terminator\n  - [#1974](https://github.com/bpftrace/bpftrace/pull/1974)\n- Fix unroll() with async calls\n  - [#1972](https://github.com/bpftrace/bpftrace/pull/1972)\n- Fix string comparison codegen\n  - [#1979](https://github.com/bpftrace/bpftrace/pull/1979)\n- Fix verifier error when accessing same tracepoint field twice\n  - [#2008](https://github.com/bpftrace/bpftrace/pull/2008)\n- Fix reading too many bits for <64 bit kfunc args\n  - [#2014](https://github.com/bpftrace/bpftrace/pull/2014)\n- Fix misaligned stack access for map keys\n  - [#2012](https://github.com/bpftrace/bpftrace/pull/2012)\n\n#### Tools\n\n#### Documentation\n- Write new man page for `bpftrace(8)`\n  - [#1711](https://github.com/bpftrace/bpftrace/pull/1711)\n\n## [0.13.1] 2021-12-29\n\n#### Fixed\n\n- Fix precedence of multiplicative operations\n  - [#2096](https://github.com/bpftrace/bpftrace/pull/2096)\n\n## [0.13.0] 2021-07-01\n\n#### Added\n- Warn if attaching a kprobe to a non-traceable function\n  - [#1835](https://github.com/bpftrace/bpftrace/pull/1835)\n- Support for `-k[k]` and `elapsed` in `iter` probes\n  - [#1882](https://github.com/bpftrace/bpftrace/pull/1882)\n\n#### Changed\n- Disallow accessing common tracepoint fields\n  - [#1810](https://github.com/bpftrace/bpftrace/pull/1810)\n- Improve JSON printing (nested structs)\n  - [#1778](https://github.com/bpftrace/bpftrace/pull/1778)\n- Return 1 from tracepoint probes\n  - [#1857](https://github.com/bpftrace/bpftrace/pull/1857)\n- Preserve original order of struct types\n  - [#1850](https://github.com/bpftrace/bpftrace/pull/1850)\n- Forbid casting from/to struct types\n  - [#1873](https://github.com/bpftrace/bpftrace/pull/1873)\n\n#### Deprecated\n\n#### Removed\n\n#### Fixed\n- Fix single arg wildcard probe listing\n  - [#1775](https://github.com/bpftrace/bpftrace/pull/1775)\n- Fix --info reporting wrong libbpf build info\n  - [#1776](https://github.com/bpftrace/bpftrace/pull/1776)\n- Reduce frequency of lost stack traces\n  - [#1812](https://github.com/bpftrace/bpftrace/pull/1812)\n- Make kaddr() report failure for unknown kernel symbols\n  - [#1836](https://github.com/bpftrace/bpftrace/pull/1836)\n- Fix false non-traceable function warnings\n  - [#1866](https://github.com/bpftrace/bpftrace/pull/1866)\n- Fix memory leak in clang parser\n  - [#1878](https://github.com/bpftrace/bpftrace/pull/1878)\n\n#### Tools\n\n#### Documentation\n\n## [0.12.1] 2021-04-16\n\nIncorrect --info output bug fix release\n\n## [0.12.0] 2021-04-01\n\n#### Added\n- Add path builtin\n  - [#1492](https://github.com/bpftrace/bpftrace/pull/1492)\n- Allow wildcards for tracepoint categories\n  - [#1445](https://github.com/bpftrace/bpftrace/pull/1445)\n- Add wildcard support for kfunc probe types\n  - [#1410](https://github.com/bpftrace/bpftrace/pull/1410)\n- Add builtin function: `strftime`\n  - [#1387](https://github.com/bpftrace/bpftrace/pull/1387)\n- Fix `printf` not allowing format specifiers to be directly followed by\n  alphabetic characters\n  - [#1414](https://github.com/bpftrace/bpftrace/pull/1414)\n- Fix `top` and `div` arguments of `print()` not working for Type::avg maps\n  - [#1416](https://github.com/bpftrace/bpftrace/pull/1416)\n- Add an option to disable warning messages\n  - [#1444](https://github.com/bpftrace/bpftrace/pull/1444)\n- Support scientific notation for integer literals\n  - [#1476](https://github.com/bpftrace/bpftrace/pull/1476)\n- List retprobes\n  - [#1484](https://github.com/bpftrace/bpftrace/pull/1484)\n- Resolve unknown typedefs using BTF and give a hint when a type cannot be found\n  - [#1485](https://github.com/bpftrace/bpftrace/pull/1485)\n- Support multi-matched globbed targets for uprobe and ustd probes\n  - [#1499](https://github.com/bpftrace/bpftrace/pull/1499)\n- Positional parameters: support numbers as strings and params as string literals\n  - [#1514](https://github.com/bpftrace/bpftrace/pull/1514)\n- Support for tracepoint __data_loc fields\n  - [#1542](https://github.com/bpftrace/bpftrace/pull/1542)\n- Set addrspace info for various builtins\n  - [#1504](https://github.com/bpftrace/bpftrace/pull/1504)\n- Support watchpoint for kernel space address\n  - [#1552](https://github.com/bpftrace/bpftrace/pull/1552)\n- Support for pointer to pointer\n  - [#1557](https://github.com/bpftrace/bpftrace/pull/1557)\n- Support for uprobe refcounts\n  - [#1567](https://github.com/bpftrace/bpftrace/pull/1567)\n- Add basic options and documentations for fuzzing\n  - [#1601](https://github.com/bpftrace/bpftrace/pull/1601)\n- Disable `str($# + 1)`\n  - [#1619](https://github.com/bpftrace/bpftrace/issues/1619)\n- Array improvements (support assignment to variables and usage as a map key)\n  - [#1656](https://github.com/bpftrace/bpftrace/pull/1656)\n- Add builtin function: `macaddr`\n  - [#1647](https://github.com/bpftrace/bpftrace/pull/1647)\n- Add support for usdt arguments utilising the index register and scale\n  - [#1684](https://github.com/bpftrace/bpftrace/pull/1684)\n- Add basic mips64 support\n  - [#1599](https://github.com/bpftrace/bpftrace/pull/1599)\n- Printing structures\n  - [#1705](https://github.com/bpftrace/bpftrace/pull/1705)\n- Array indexing on pointers\n  - [#1739](https://github.com/bpftrace/bpftrace/pull/1739)\n\n#### Changed\n- Warn if using `print` on `stats` maps with top and div arguments\n  - [#1433](https://github.com/bpftrace/bpftrace/pull/1433)\n- Prefer BTF data if available to resolve tracepoint arguments\n  - [#1439](https://github.com/bpftrace/bpftrace/pull/1439)\n- Improve error messages for kfunc probe types\n  - [#1451](https://github.com/bpftrace/bpftrace/pull/1451)\n- Better handling of empty usdt namespaces\n  - [#1486](https://github.com/bpftrace/bpftrace/pull/1486)\n- Switch `nsecs` to `ktime_get_boot_ns`\n  - [#1475](https://github.com/bpftrace/bpftrace/pull/1475)\n- Tracepoint __data_loc fields are renamed from `args->data_loc_name` to `args->name`\n  - [#1542](https://github.com/bpftrace/bpftrace/pull/1542)\n- Change a part of the message of '-v' output\n  - [#1553](https://github.com/bpftrace/bpftrace/pull/1553)\n- Improve tuple assignment error message\n  - [#1563](https://github.com/bpftrace/bpftrace/pull/1563)\n- Remove \"BTF: using data from ...\" message when using -v flag\n  - [#1554](https://github.com/bpftrace/bpftrace/pull/1554)\n- Add -q option for quiet\n  - [#1616](https://github.com/bpftrace/bpftrace/pull/1616)\n- Optimize unknown/incomplete types resolution\n  - [#1571](https://github.com/bpftrace/bpftrace/pull/1571)\n- Do not check size of the format string of `printf`\n  - [#1538](https://github.com/bpftrace/bpftrace/pull/1538)\n- Unify semantics of wildcards in probe listing and attachement\n  - [#1549](https://github.com/bpftrace/bpftrace/pull/1549)\n- Improve codegen for structs and arrays\n  - [#1705](https://github.com/bpftrace/bpftrace/pull/1705)\n- Do not unpack in-kernel headers if system has BTF\n  - [#1740](https://github.com/bpftrace/bpftrace/pull/1740)\n\n#### Deprecated\n\n#### Removed\n- Disable some kfunc probes whose tracing crashes\n  - [#1432](https://github.com/bpftrace/bpftrace/pull/1432)\n\n#### Fixed\n- Fix negative overflow bug and unstable tests in PR #1416\n  - [#1436](https://github.com/bpftrace/bpftrace/pull/1436)\n- Fix `print` outputs nothing when used on hist() maps with large top args\n  - [#1437](https://github.com/bpftrace/bpftrace/pull/1437)\n- Fix array indexing regression\n  - [#1457](https://github.com/bpftrace/bpftrace/pull/1457)\n- Fix type resolution for struct field access via variables\n  - [#1450](https://github.com/bpftrace/bpftrace/pull/1450)\n- Fix wrong setting of vmlinux_location.raw when offset kprobe used\n  - [#1530](https://github.com/bpftrace/bpftrace/pull/1530)\n- Fix pointer arithmetic for positional parameters\n  - [#1514](https://github.com/bpftrace/bpftrace/pull/1514)\n- SEGV when using perf format for stacks\n  - [#1524](https://github.com/bpftrace/bpftrace/pull/1524)\n- Fix llvm errors of PositonalParameter\n  - [#1565](https://github.com/bpftrace/bpftrace/pull/1565)\n- Error if Positional Params num is zero\n  - [#1568](https://github.com/bpftrace/bpftrace/issues/1568)\n- Fix LNOT\n  - [#1570](https://github.com/bpftrace/bpftrace/pull/1570)\n- Fix invalid cast handling in tuple\n  - [#1572](https://github.com/bpftrace/bpftrace/pull/1572)\n- Check string comparison size\n  - [#1573](https://github.com/bpftrace/bpftrace/pull/1573)\n- Fix a possible integer overflow\n  - [#1580](https://github.com/bpftrace/bpftrace/pull/1580)\n- Printing of small integers with `printf`\n  - [#1532](https://github.com/bpftrace/bpftrace/pull/1532)\n- Fix bitfield access for big endian\n  - [#1628](https://github.com/bpftrace/bpftrace/pull/1628)\n- Error if using negative length in str() and buf()\n  - [#1621](https://github.com/bpftrace/bpftrace/pull/1621)\n- Only create int type Identifier when it is used in sizeof()\n  - [#1622](https://github.com/bpftrace/bpftrace/pull/1622)\n- Check exponent value can be expressed in uint64_t\n  - [#1623](https://github.com/bpftrace/bpftrace/pull/1623)\n- Fix tracing of usdt probes across namespaces\n  - [#1637](https://github.com/bpftrace/bpftrace/pull/1637)\n- Disable reg() for kfunc\n  - [#1646](https://github.com/bpftrace/bpftrace/pull/1646)\n- Fix several undefined behavior\n  - [#1645](https://github.com/bpftrace/bpftrace/pull/1645)\n- Fix invalid size crash when using strftime() inside a tuple\n  - [#1658](https://github.com/bpftrace/bpftrace/pull/1658)\n- Don't create a tuple if an element size if zero\n  - [#1653](https://github.com/bpftrace/bpftrace/pull/1653)\n- Support clear() and delete() on a count()-based map without a key\n  - [#1639](https://github.com/bpftrace/bpftrace/pull/1639)\n- Add workaround for too deep or long macros\n  - [#1650](https://github.com/bpftrace/bpftrace/pull/1650)\n- Fix attaching to usdt probes in shared libraries\n  - [#1600](https://github.com/bpftrace/bpftrace/pull/1600)\n- Fix attaching to multiple usdt probe locations with the same label\n  - [#1681](https://github.com/bpftrace/bpftrace/pull/1681)\n- Fix signed extension of usdt arguments to the internal 64-bit integer type\n  - [#1684](https://github.com/bpftrace/bpftrace/pull/1684)\n\n#### Tools\n- Hook up execsnoop.bt script onto `execveat` call\n  - [#1490](https://github.com/bpftrace/bpftrace/pull/1490)\n- Support new capabilities for capable.bt\n  - [#1498](https://github.com/bpftrace/bpftrace/pull/1498)\n- Add disk field to biosnoop\n  - [#1660](https://github.com/bpftrace/bpftrace/pull/1660)\n\n#### Documentation\n- Document uptr() and kptr() function\n  - [#1626](https://github.com/bpftrace/bpftrace/pull/1626)\n\n## [0.11.4] 2020-11-14\n\nAlpine build bug fix release\n\n## [0.11.3] 2020-11-13\n\nbcc 0.17 support release\n\n### Changed\n\nDetect 7 arg bpf_attach_uprobe() API\n- [#1589](https://github.com/bpftrace/bpftrace/pull/1589)\n\n## [0.11.2] 2020-10-30\n\nLLVM 11 support release\n\n### Added\n\nAdd LLVM11 build support\n- [#1578](https://github.com/bpftrace/bpftrace/pull/1578)\n\n## [0.11.1] 2020-09-22\n\nBug fix release for the [Docker build](https://quay.io/repository/bpftrace/bpftrace)\n\n### Fixed\n\n- Don't strip END_trigger\n  - [#1513](https://github.com/bpftrace/bpftrace/pull/1513)\n\n## [0.11.0] 2020-07-15\n\n### All Changes\n\n#### Added\n\n- Allow uprobe placement on arbitrary addresses when --unsafe is used\n  - [#1388](https://github.com/bpftrace/bpftrace/pull/1388)\n- Support for s390x\n  - [#1241](https://github.com/bpftrace/bpftrace/pull/1241)\n- `buf` a new function that makes it possible to safely print arbitrary binary data\n  - [#1107](https://github.com/bpftrace/bpftrace/pull/1107)\n- A new function, `sizeof`, which returns the size of an expression, similar to  `sizeof` in C\n  - [#1269](https://github.com/bpftrace/bpftrace/pull/1269)\n- C style while loop support, `while ($a < 100) { $a++ }`\n  - [#1066](https://github.com/bpftrace/bpftrace/pull/1066)\n- Using a BTF enum value will pull in the entire enum definition\n  - [#1274](https://github.com/bpftrace/bpftrace/pull/1274)\n- Add support of using positional params in unroll and increase the unroll limit to 100\n  - [#1286](https://github.com/bpftrace/bpftrace/pull/1286)\n- Support for piping scripts in via stdin\n  - [#1310](https://github.com/bpftrace/bpftrace/pull/1310)\n- Don't require <linux/types.h> if --btf is specified\n  - [#1315](https://github.com/bpftrace/bpftrace/pull/1315)\n- Silence errors about `modprobe` not being found\n  - [#1314](https://github.com/bpftrace/bpftrace/pull/1314)\n- With --btf, do not use <linux/types.h> for resolving tracepoint defs\n  - [#1318](https://github.com/bpftrace/bpftrace/pull/1318)\n- Add environment variable, BPFTRACE_PERF_RB_PAGES, to tune perf ring buffer size\n  - [#1329](https://github.com/bpftrace/bpftrace/pull/1329)\n- Add --usdt-file-activation to activate usdt semaphores by file name\n  - [#1317](https://github.com/bpftrace/bpftrace/pull/1317)\n- Introduce `-k` and `-kk` options. Emit a warning when a bpf helper returns an error\n  - [#1276](https://github.com/bpftrace/bpftrace/pull/1276)\n- Add tuples to language\n  - [#1326](https://github.com/bpftrace/bpftrace/pull/1326)\n- Add support for listing struct/union/enum definitions using BTF\n  - [#1340](https://github.com/bpftrace/bpftrace/pull/1340)\n- Add libbpf build into in --info\n  - [#1367](https://github.com/bpftrace/bpftrace/pull/1367)\n- Add support for time units `us` and `hz` for probe `interval`\n  - [#1377](https://github.com/bpftrace/bpftrace/pull/1377)\n- Add support for non-map print()\n  - [#1381](https://github.com/bpftrace/bpftrace/pull/1381)\n- Enable `printf`, `cat` and `system` to have more than 7 arguments\n  - [#1404](https://github.com/bpftrace/bpftrace/pull/1404)\n- Enable the `ternary` operator to evaluate builtin calls\n  - [#1405](https://github.com/bpftrace/bpftrace/pull/1405)\n\n\n#### Changed\n\n- Require C++17 and CMake 3.8 for building bpftrace\n  - [#1200](https://github.com/bpftrace/bpftrace/pull/1200)\n  - [#1259](https://github.com/bpftrace/bpftrace/pull/1259)\n- Allow positional parameters in probe attachpoint definitions\n  - [#1328](https://github.com/bpftrace/bpftrace/pull/1328)\n- Only list uprobe and usdt probes when `-p` is given\n  - [#1340](https://github.com/bpftrace/bpftrace/pull/1340)\n- Remove address space memory limit\n  - [#1358](https://github.com/bpftrace/bpftrace/pull/1358)\n\n#### Deprecated\n\n#### Removed\n\n- Drop LLVM 5 support\n  - [#1215](https://github.com/bpftrace/bpftrace/issues/1215)\n- Remove the --btf option\n  - [#1669](https://github.com/bpftrace/bpftrace/pull/1669)\n\n#### Fixed\n\n- Various big endian related fixes\n  - [#1241](https://github.com/bpftrace/bpftrace/pull/1241)\n- Type check the `cond` of if and ternary statements\n  - [#1229](https://github.com/bpftrace/bpftrace/pull/1229)\n- Fix usdt reads in various architecture\n  - [#1325](https://github.com/bpftrace/bpftrace/pull/1325)\n- Attach to duplicated USDT markers\n  - [#1341](https://github.com/bpftrace/bpftrace/pull/1341)\n- Fix `KBUILD_MODNAME`\n  - [#1352](https://github.com/bpftrace/bpftrace/pull/1352)\n- Fix `ntop()` not accepting tracepoint arguments\n  - [#1365](https://github.com/bpftrace/bpftrace/pull/1365)\n- Fix attaching to usdt probes in multiple binaries\n  - [#1356](https://github.com/bpftrace/bpftrace/pull/1356)\n- Decrement usdt semaphore count after bpftrace execution\n  - [#1370](https://github.com/bpftrace/bpftrace/pull/1370)\n- Reduce high memory consumption when using usdt semaphore\n  - [#1374](https://github.com/bpftrace/bpftrace/pull/1374)\n- Remove registers that are not in struct pt_regs (x86-64)\n  - [#1383](https://github.com/bpftrace/bpftrace/issues/1383)\n- Ignore trailing kernel module annotation for k[ret]probe's\n  - [#1413](https://github.com/bpftrace/bpftrace/pull/1413)\n\n#### Tools\n\n#### Documentation\n\n- Clean up README\n  - [#1273](https://github.com/bpftrace/bpftrace/pull/1273)\n- Add missing `struct` keyword to examples in the one liner tutorial\n  - [#1275](https://github.com/bpftrace/bpftrace/pull/1275)\n\n## [0.10.0] 2020-04-12\n\n### Highlights\n\n#### kfuncs\n\nImproved kprobes which are near zero overhead and use BTF to derive argument\nnames and types:\n\n```\nbpftrace -e 'kfunc:fget { printf(\"fd %d\\n\", args->fd);  }'\n```\n\n#### C++ Symbol demangling\n\nbpftrace can now demangle C++ symbols in binaries:\n\n```\nbpftrace -e 'uprobe:./a.out:\"foo()\" {printf(\"ok\\n\");}\n```\n\n#### if else control flow\n\nSupport for `if else` has been added, making it possible to write:\n\n```\nif (cond) {\n  ...\n} else if (cond) {\n  ...\n}\n```\n\nInstead of:\n\n```\nif (cond) {\n  ...\n} else {\n  if (cond) {\n    ...\n  }\n}\n```\n\n#### LLVM 9 & 10\n\nSupport for LLVM 9 and LLVM 10 has been added.\n\n#### Docker images\n\nDocker images containing a static build are now available on [quay.io](https://quay.io/repository/bpftrace/bpftrace).\n\n### All Changes\n\n#### Added\n\n  - Add kfunc/kretfunc description to docs/reference_guide.md (e3b9518b) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add kfunc/kretfunc probe tests (bbf2083a) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add test_btf class to setup BTF data (ecbd66b7) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Fortify exported functions with has_data check (083bcf9f) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Detect btf feature via BTF class (a9450425) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add support to filter kfunc list (a98b3f02) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - List kfunc functions (75a0f9c7) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Generate load code for kfunc/kretfunc arguments (30f699b1) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Resolve kfunc arguments in semantic analyser (de2f6c1d) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Resolve kfunc arguments in BTF field analyser (8cd3fb50) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add single_provider_type function (3a6325e5) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Factor out builtin_args_tracepoint function (e33c246e) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add BTF::resolve_args function to resolve kfunc arguments (69c8fd45) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Load and attach kfunc/kretfunc programs (126a9edd) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add missing ProbeType::watchpoint to probetypeName function (343165b1) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Allow to specify kernel include dirs (1e987f45) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Feature detect `probe_read_{kernel,user}` (b7c236f9) by bas smit &lt;bas@baslab.org&gt;\n  - Add support for using demangled symbols in uretprobe names (269033de) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Implement `else if` control flow (34fc2801) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - detect lockdown mode (37d28c26) by bas smit &lt;bas@baslab.org&gt;\n  - Extend info flag with system/build info (73abef68) by bas smit &lt;bas@baslab.org&gt;\n  - Add support for C++ mangled symbols in uprobe names #687 (e8656cbd) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n\n#### Changed\n\n  - Allow hex/octal positional parameters (ef20128b) by bas smit &lt;bas@baslab.org&gt;\n  - Allow negative positional parameters (babf057e) by bas smit &lt;bas@baslab.org&gt;\n  - Make positionalparameters literal to avoid warnings (0859fc6b) by bas smit &lt;bas@baslab.org&gt;\n  - Make `exit()` terminate current probe (6334c23d) by bas smit &lt;bas@baslab.org&gt;\n  - Improve an error message when trying to use 'args' other than tracepoint (e303048c) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Disable a symbol name cache if ASLR is enabled and `-c` option is not given (4651255b) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Remove deprecated builtins (2667b8a2) by bas smit &lt;bas@baslab.org&gt;\n\n#### Fixed\n\n  - reject invalid pid argument (cebc5978) by bas smit &lt;bas@baslab.org&gt;\n  - Fix positional parameter error (1b4febee) by bas smit &lt;bas@baslab.org&gt;\n  - Emit better tracepoint parser errors (f5217821) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix if comparison (8f8c9cb4) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Do not keep open BEGIN/END probes (19d90057) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Check the length of ap.mode (a388dc14) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix ternary comparison (360be8cf) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Cast LNOT result (890f5930) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Gracefully handle long position param overflow (6f26a863) by Vlad Artamonov &lt;742047+vladdy@users.noreply.github.com&gt;\n  - Error if wildcards are used in \"category\" of tracepoint (3bfdec94) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix reading USDT probe arguments on AArch64 (ee5314ba) by Nick Gasson &lt;nick.gasson@arm.com&gt;\n  - Remove type qualifiers from a cast_type (4ad2bf19) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix printf argument offsets (2d2f2332) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Warn if Type::string size is not matched when assignment (4638b968) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Print Type::string and Type::array size information along with type information (03a837e7) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Consider a short Type::string value (684513ed) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Consider a non null-terminated Type::string value (13614152) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n\n#### Tools\n\n  - oomkill: fix kprobe arg (675727a4) by Xiaozhou Liu &lt;liuxiaozhou@bytedance.com&gt;\n  - Fix 'signed operands for /' warning in naptime.bt (c8f4a6d8) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n\n#### Documentation\n\n  - Fix example links to only search bpftrace repo (71c9d29e) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Remove example link to a runtime test (560454a1) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Add link to example for interval and BEGIN/END (badf5653) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Add link to example for profile (ea6f706a) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Add links to examples for tracepoints (f6a3d26a) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Add links to examples for uprobe/uretprobe (5dd4bd8d) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - Add links to examples for kprobe/kretprobe (c580ef26) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - When installing from source on ubuntu and Fedora, non-root users need to add 'sudo' when executing 'make install' (3030046b) by mazhen   &lt;mz1999@gmail.com&gt;\n  - docs: Add documentation for integer casts (f087abbd) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Docs: Fix broken link (f76b8bbb) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Docs: Add missing builtin functions (fd08a932) by Adam Jensen &lt;acjensen@gmail.com&gt;\n\n#### Internal\n\n  - Remove codegen tests warning (f18746af) by bas smit &lt;bas@baslab.org&gt;\n  - build: document libbcc linking (#1252) (4dadd515) by bas smit &lt;bas@baslab.org&gt;\n  - cmake: bail on unsupported architectures (4ae387f0) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Revert \"Only link agains libbpf if it exists (#1247)\" (04ecb731) by bas smit &lt;bas@baslab.org&gt;\n  - Only link agains libbpf if it exists (#1247) (a3febcb8) by bas smit &lt;bas@baslab.org&gt;\n  - Align libbpf.h (229eef6c) by bas smit &lt;bas@baslab.org&gt;\n  - Sync libbpf with v5.6 (0b369fe6) by bas smit &lt;bas@baslab.org&gt;\n  - Add runtime tests for ternary (2efcdb29) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Use BPFtrace::error for TracepointFormatParser errors (#1243) (9106e10c) by Martin Schmidt &lt;martin.schmidt@epita.fr&gt;\n  - codegen: Send map id instead of ident string for async events (9a063adc) by bas smit &lt;bas@baslab.org&gt;\n  - ci: Add LLVM 10 (696e16ce) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Add codegen test for LLVM 10 (33fe3ee4) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Suppress -Winconsistent-missing-override warning (2044c53d) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Use CreateMemCpy that takes MaybeAlign in LLVM 10 (a67fd22d) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Don't over-read usdt arguments (1711ec70) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add proper bcc prefix for bcc headers (977d5851) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Use urandom instead of random (23603bfc) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - tests: fix llmv 5 tests (449b33a4) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: correctly copy and \"usym\" map (f7a9d9e2) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Use map type in perf_event signature (0a27eeb5) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: avoid usym copy on map assignment (25116d21) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: deduplicate usym code (078a8236) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix `strncmp` type issues (e523e2c7) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: ensure `getmapkey` stores with equal types (1822cfde) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix deleteElem typing issues (0c6403bc) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: clang-format `join` (e641b115) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: memset takes an i8 value (d2a70f98) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: remove useless literal handling from `signal` (3bbbfe24) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix `probe_read` typing issue (eca43df2) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix sarg type issue (09152138) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix `probe_read_str` typing issues (914c87e2) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix reg typing issue (0c66f2f5) by bas smit &lt;bas@baslab.org&gt;\n  - parser: Do not remove empty probe arguments (ae4fe7fb) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - cmake: Link against libz when searching for btf_dump__new (6323d8fb) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - snapcraft: add arm64 to build architectures (2b0faa3e) by Colin Ian King &lt;colin.king@canonical.com&gt;\n  - cmake: Control manpages generation (ef39ed0f) by Ovidiu Panait &lt;ovpanait@gmail.com&gt;\n  - Don't check str arg length for cgroupid (aa94d9b3) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Track current function name during analysis (d1f23cab) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Remove unused srclines_ (ce9c4179) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Remove unused print_map_lhist (7c32b827) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Remove leftover print_hist declaration (63f4f029) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Remove leftover print_lhist declaration (8008c5a9) by Chris Hunt &lt;chrahunt@gmail.com&gt;\n  - Add apt-transport-https for xenial build (8bcf0c04) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Add the snapcraft yaml rules to allow bpftrace to be built as a snap. (c2eceeb3) by Colin Ian King &lt;colin.king@canonical.com&gt;\n  - Revert \"Require C++17 to build\" (24f97308) by bas smit &lt;bas@baslab.org&gt;\n  - Fix tracepoint expansion regression (b4f0c204) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - codegen: fix  `map` typing (11814f29) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Update LLVM5 codegen tests (c4f147d3) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: fix argX type issue (c04bad20) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Fix comm typing issues (5926429d) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Fix stackid typing issues (a7ba4a1e) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Fix exit typing issues (f676b9c5) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Fix ntop typing issues (ac792f58) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Fix usym typing issues (2e84b52d) by bas smit &lt;bas@baslab.org&gt;\n  - irbuilder: Add struct storage (1fbccf1b) by bas smit &lt;bas@baslab.org&gt;\n  - Strengthen tracepoint format parsing (a2e3d5db) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - cmake: use *_LIBRARIES when testing for libbfd version (b1200771) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Handle escaped double quotes in AttachPointParser (b98b281d) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Support `:`s in quoted string (c230fc42) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add parser tests for trailing non-numeric characters (c0b8644f) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Update AttachPoint::name to print out watchpoints correctly (dd2312c7) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Unify ast::AttachPoint::addr and ast::AttachPoint::address (71f4205f) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix semantic analyser unit tests (39d4a493) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix runtime tests (1612af97) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Update callee interfaces (78c04b01) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Move AttachPoint parsing logic out of bison (43a72e37) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - tests: cmake: Fix build with ninja (f1fc5190) by Ovidiu Panait &lt;ovpanait@gmail.com&gt;\n  - bpffeature: move macros to header (860ac6d4) by bas smit &lt;bas@baslab.org&gt;\n  - bpffeature: delete copy/move constructors/assign (ac5e0025) by bas smit &lt;bas@baslab.org&gt;\n  - bpffeature: cleanup `report` (af780eb1) by bas smit &lt;bas@baslab.org&gt;\n  - bpffeature: detect supported program types (ce5bbb78) by bas smit &lt;bas@baslab.org&gt;\n  - bpffeature: detect supported map types (437df58d) by bas smit &lt;bas@baslab.org&gt;\n  - bpffeature: remove boilerplate (ac4ad41c) by bas smit &lt;bas@baslab.org&gt;\n  - Avoid calling \"slow\" regex constructor (fc88784e) by bas smit &lt;bas@baslab.org&gt;\n  - CreateMemSet: llvm10: Fix compilation errors (6f81111c) by Ovidiu Panait &lt;ovidiu.panait@windriver.com&gt;\n  - Discard return value for emitAndFinalize() (29caf4b7) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Require C++17 to build (458bf66d) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Make docker run command more generic (#1182) (c67730c4) by Connor Nelson &lt;Connor@ConnorNelson.com&gt;\n  - Use host network when building docker image (23c29ff1) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - fix typo (92f25f95) by zeil &lt;nonamezeil@gmail.com&gt;\n  - Resolve USDT binaries relative to mount namespace (3bb4a9fd) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Add docker images as options in install.md (30756be7) by Dale Hamel &lt;dale.hamel@srvthe.net&gt;\n  - Add \"edge\" build, push master to :latest and :edge (b0e6bdc7) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - ast: add missing parameter name (f156a0fb) by bas smit &lt;bas@baslab.org&gt;\n  - Add the Japanese translation version of the one-liner tutorial (78621fb1) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Revert \"No need to promote scalars to 64-bit\" (9a9d1451) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - fix build error (ed48e795) by bas smit &lt;bas@baslab.org&gt;\n  - Make BEFORE clause in runtime tests synchronous (77f93dbc) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Only need to rebuild codegen tests if C++ files change (d0792c06) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Replace tabs with spaces (f4e377a1) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - No need to promote scalars to 64-bit (8af25ae9) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Regenerate codegen_includes.cpp when files it references are updated (d6d0e836) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - ci: Add LLVM 9 (42dab3c9) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: add LLVM-9 rewriter exceptions (681d1850) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: LLVM9 rewriter (3ec8af95) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Rewrite tests (aefc89e7) by bas smit &lt;bas@baslab.org&gt;\n  - codegen: Remove version dependence from codegen (cd3ab819) by bas smit &lt;bas@baslab.org&gt;\n  - Add STATIC_LIBC=ON to Docker build scripts (6ef3af3c) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Support pushing docker images to quay.io from github actions (b8ab21ae) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Add xenial to CI build (153e61ef) by Ace Eldeib &lt;alexeldeib@gmail.com&gt;\n  - Only send IRC notifications for build failures on master (471e79b7) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - vagrant: fix formatting (e8a14566) by bas smit &lt;bas@baslab.org&gt;\n  - vagrant: Add fedora 31 (c2354a78) by bas smit &lt;bas@baslab.org&gt;\n  - vagrant: Update ubuntu boxes (9610895c) by bas smit &lt;bas@baslab.org&gt;\n  - Add Dockerfile.release for bpftrace docker image on quay.io (c2568ee5) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Mark context accesses as volatile (56d4721e) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Cast ctx automatically depending on a program type (0e4282e1) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Access context fields directly (3a910814) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Error if trying to use context as a map key/value (b7d2510b) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Introduce Type::ctx (f05b4cda) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - No need to check result of check_assignment (f04c1ad9) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add workaround to remove duplicate entries in uprobe symbols listing (8f5e90f4) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - cmake: add GNUInstallDirs support (2f380013) by Ovidiu Panait &lt;ovpanait@gmail.com&gt;\n  - Allow running tests as non-root (again) (efa2da20) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Report kernel instruction limit (76770de3) by bas smit &lt;bas@baslab.org&gt;\n  - Add missing <string> include to btf.h (145041ec) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n\n## [0.9.4] 2020-02-04\n\n### Highlights\n\n  - New calls: `signal`, `override`, `strncmp`\n  - Support for attaching to `kprobes` at an offset\n  - Support for struct bitfields\n\n### All Changes\n\n#### Added\n  - Add support to attach kprobe to offset (e31e398) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Add `--info` flag (afafbf5) by bas smit &lt;bas@baslab.org&gt;\n  - Mark 'override_return' as unsafe (49cd031) by bas smit &lt;bas@baslab.org&gt;\n  - Implement bpf_override_return (784c64e) by bas smit &lt;bas@baslab.org&gt;\n  - arch: Add support for powerpc64 registers (472f5ed) by Sandipan Das &lt;sandipan@linux.ibm.com&gt;\n  - Add source line information to error messages (46e62c0) by bas smit &lt;bas@baslab.org&gt;\n  - Support octal and hexadecimal escape sequences in string (873d7ba) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Implement `signal` (32bb577) by bas smit &lt;bas@baslab.org&gt;\n  - Make `signal` unsafe (be676b5) by bas smit &lt;bas@baslab.org&gt;\n  - Implement strncmp (a1d0263) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n  - Add builtin: cpid (cae4dcf) by bas smit &lt;bas@baslab.org&gt;\n  - Allow uprobe offset on quoted attach points (6432609) by bas smit &lt;bas@baslab.org&gt;\n  - Allow string literals as signal specifiers (0230f98) by bas smit &lt;bas@baslab.org&gt;\n  - Implement bitfield support (8822cc2) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n\n#### Changed\n  - Take first binary match for PATH lookup on uprobe and USDT (ec5c2c3) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Infer `uaddr` pointer type from ELF symbol size (59b0659) by bas smit &lt;bas@baslab.org&gt;\n  - Rename `override_return` to `override` (96cb4b5) by bas smit &lt;bas@baslab.org&gt;\n  - Runtime feature testing (17f3c82) by bas smit &lt;bas@baslab.org&gt;\n  - Silenced unsigned/signed comparison warning (75101f9) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - error message for verification buffer size (41c0ab8) by Gordon Marler &lt;gmarler@bloomberg.net&gt;\n  - Reimplement `elapsed` using a hidden map (2613ea6) by bas smit &lt;bas@baslab.org&gt;\n  - Remove dependency on 'command' shell builtin (3f7a94a) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Make parsing fail if lexing fails (d092cb1) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Limit increment/decrement to variables (c126441) by bas smit &lt;bas@baslab.org&gt;\n  - Only warn about missing BTF info in debug mode (f84ae5c) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Allow uretprobe at an address (f0785b5) by bas smit &lt;bas@baslab.org&gt;\n  - fix uprobe address on short name (f7ed963) by bas smit &lt;bas@baslab.org&gt;\n  - Reverse return value of strncmp (384640e) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n  - Make strcmp return 0 on match (8d9069c) by bas smit &lt;bas@baslab.org&gt;\n  - Differentiate between regular structs and typedef'd structs (8d34209) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n\n#### Fixed\n  - Support \".\" in attach point function argument (c532159) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - clang_parser: workaround for asm_inline in 5.4+ kernel headers (c30e4dd) by Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;\n  - Consider signed array (9bb6a8b) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Support anonymous struct/union in BTF::type_of() (36d9914) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Allow resolving binary paths in different mount ns (124e569) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Avoid useless allocations in strncmp (551664e) by bas smit &lt;bas@baslab.org&gt;\n  - Avoid comparing past string length (b10dc32) by bas smit &lt;bas@baslab.org&gt;\n  - Call llvm.lifetime.end after memcpy if the expression is not a variable (8b2d219) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - bug: Strip newlines from log message (361d1fc) by bas smit &lt;bas@baslab.org&gt;\n  - Fix buggy signed binop warnings (e87897c) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Reuse `cat` and `system` ID when expanding probes (79aada5) by bas smit &lt;bas@baslab.org&gt;\n  - Remove unneeded `probe_read`s from `strcmp` (43b4e4c) by bas smit &lt;bas@baslab.org&gt;\n  - Fix func variable in uprobe (d864f18) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Add space for the error message about kernel.perf_event_max_stack (de2a7a8) by Kenta Tada &lt;Kenta.Tada@sony.com&gt;\n  - Improve uprobe/usdt visitor error handling and messaging (5005902) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Fix some semantic analyser crashes (b11dc75) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix codegen for modulo operation (fe0ed5a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n\n#### Documentation\n  - Document `override_return` (b83b51d) by bas smit &lt;bas@baslab.org&gt;\n  - Add documentation on BTF (6623f25) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - docs: limit to 105 chars (91e9dad) by bas smit &lt;bas@baslab.org&gt;\n  - docs: Remove double shebang (da8b10c) by bas smit &lt;bas@baslab.org&gt;\n  - docs: improve readability of code snippets (34a394a) by bas smit &lt;bas@baslab.org&gt;\n  - docs: remove unneeded html elements (06d8662) by bas smit &lt;bas@baslab.org&gt;\n  - Fix typos (e5ad6b9) by Michael Prokop &lt;michael.prokop@synpro.solutions&gt;\n  - One-liner tutorial: Use \"struct\" when casting (7a5624c) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - docs: Add centos 7 repo (1b4cb8f) by bas smit &lt;bas@baslab.org&gt;\n  - docs: Fix typo (b38dbd0) by bas smit &lt;bas@baslab.org&gt;\n  - Move debug flags closer to each other in help message (df61049) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add binutils dependency to documentation (c57204c) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add documentation on release procedure (#981) (528fd6e) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - fix: Minor spelling correction (b3a6aee) by Jason Wohlgemuth &lt;jhwohlgemuth@users.noreply.github.com&gt;\n  - Document `signal` (d5f3c75) by bas smit &lt;bas@baslab.org&gt;\n  - INSTALL.md: Fix TOC link (1ab0a71) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Amend sizes in documentation and provide date (ddd10fe) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Docs: add missing TOC entry (8c1d4e9) by bas smit &lt;bas@baslab.org&gt;\n  - Add the chinese version for one liners tutorial (15a930e) by supersojo &lt;suyanjun218@163.com&gt;\n\n#### Internal\n  - Reorganize tests/ directory (193177b) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix typing issues in `CreateMapUpdateElem` (e86b9bb) by bas smit &lt;bas@baslab.org&gt;\n  - Fix typing issues in `CreateMapLookup` (14af118) by bas smit &lt;bas@baslab.org&gt;\n  - Fix build: Add namespace to BPF_FUNC_override_return (b6de734) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Unify vmlinux and BTF location list (1d39776) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Disable probe.kprobe_offset_fail_size runtime test in CI (1497434) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - fmt: update formatting in clang_parser.cpp (aefc424) by Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;\n  - Use constexpr (b59c3a7) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Make use of feature testing (b01f89c) by bas smit &lt;bas@baslab.org&gt;\n  - Import libbpf (132e1ee) by bas smit &lt;bas@baslab.org&gt;\n  - Rename BPFTRACE_BTF_TEST to BPFTRACE_BTF (5bbeb31) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Add test for anonymous struct/union processing using BTF (240f59a) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Switch tests suite to `bcc_foreach_sym` (a251477) by bas smit &lt;bas@baslab.org&gt;\n  - Make resolve_binary_paths include non-executable shared objects in its return. (c3d1095) by Michał Gregorczyk &lt;michalgr@fb.com&gt;\n  - Remove full static builds from travis (4fe9064) by Dale Hamel &lt;dale.hamel@srvthe.net&gt;\n  - Move ast.h definitions into ast.cpp (f0dd0b4) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Use subprocess.Popen text mode (47de78b) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix debian libclang only linking (a9a2f0f) by Dale Hamel &lt;dale.hamel@srvthe.net&gt;\n  - Build static+libc images using github actions (4794aba) by Dale Hamel &lt;dale.hamel@srvthe.net&gt;\n  - Enable static+glibc builds and embedding LLVM deps (b1ae710) by Dale Hamel &lt;dale.hamel@shopify.com&gt;\n  - Create StderrSilencer helper class to redirect stderr (b59b97a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add missing semicolon (add4117) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - ast: codegen: Add abstraction for stack pointer offset (d19614d) by Sandipan Das &lt;sandipan@linux.ibm.com&gt;\n  - clang-format: avoid breaking indent in irbuilderbpf.h (5b6d236) by bas smit &lt;bas@baslab.org&gt;\n  - Non-invasive formatting of src/*.h (98328f1) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Clang Format: Update line-break penalties (30d5b8d) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - correct for clang-format check (bb30265) by Gordon Marler &lt;gmarler@bloomberg.net&gt;\n  - Add requested msg prefix (f3327bd) by Gordon Marler &lt;gmarler@bloomberg.net&gt;\n  - add requested changes. (c9453b5) by Gordon Marler &lt;gmarler@bloomberg.net&gt;\n  - Show current log size in msg as starting point (7942b9d) by Gordon Marler &lt;gmarler@bloomberg.net&gt;\n  - Fix CI clang-format (13556f9) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Make ninja work with build system (76bb97a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Clang Format: switch/case bracketing style fixes (f4e46b2) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Clang Format: Don't wrap braces after namespace (4b26e3f) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add non-literal strncmp test (1c41333) by bas smit &lt;bas@baslab.org&gt;\n  - Rename literal test (4295985) by bas smit &lt;bas@baslab.org&gt;\n  - refactor CreateMapLookupElem (7b7ab95) by bas smit &lt;bas@baslab.org&gt;\n  - Add a semantic and runtime test to test task_struct field accesses (8519550) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Use `struct task_struct` instead of `task_struct` (d39db3a) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - BTF leftover for full type rename (5088682) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Create a single is_numeric() function in utils (374ca46) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Warn if cmake is less than 3.13 when building with ASAN (ad3b9f3) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Remove unnecessary division (81b7c0a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add build option, BUILD_ASAN, to turn on address sanitizer (04d015e) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Properly indent cmake config (24a7695) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Use mocks consistently in codegen tests so they don't require root to run (b261833) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Enable -Werror on CI builds (2f0f5db) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - CMakeLists cleanups (6b8d7ad) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Disable deprecated ORCv1 warning in llvm (607b8af) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Normalize code (0878020) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Pass location to uprobe+offset probe (8c1a355) by bas smit &lt;bas@baslab.org&gt;\n  - Use symbolic constants instead of numeric literal (457aab9) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add clang-format rule to travis CI (3b9e959) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Turn off clang-format for specific long lists (bcbfaa0) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add .clang-format file (b04e478) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Change reinterpret_cast to static cast and fix formatting (03d2d67) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add PER_CPU detection helper (594fd34) by bas smit &lt;bas@baslab.org&gt;\n  - Store the BPF map type in the map object (2e850c5) by bas smit &lt;bas@baslab.org&gt;\n  - format: align parser (b3680e6) by bas smit &lt;bas@baslab.org&gt;\n  - Make ASSERTs in helper functions fail the parent testcase (ddaa482) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add dependency on testprogs and bpftrace to runtime tests (7870091) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add custom target for testprogs (d799e83) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Move testprogs cmake definition before runtime test definitions (6783448) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add tests for resolve_binary_path (8fb727a) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Fix tests to run without $PATH (c1c60c2) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Add runtime tests for ambiguous wildcard matches (cca9040) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Add regression tests for modulo operation (0a1cb65) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Don't take reference of a pointer (61ba68a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Silence test suite (8d1f691) by bas smit &lt;bas@baslab.org&gt;\n  - Disable builtin.cgroup runtime test in CI (8277876) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add a RUNTIME_TEST_DISABLE environment to runtime tests (6c984ea) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add script to compare tool codegen between builds (d95a2d1) by bas smit &lt;bas@baslab.org&gt;\n  - Minor btf cleanups (a10479b) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add FieldAnalyser to the clang parser tests (13b06d2) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Iterate only over detected types in BTF::c_def (409d7ad) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add BPFtrace::btf_set_ to replace global BTF type set (06a09ca) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add BTF::type_of function (4378e24) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Adding FieldAnalyser class (ec3c621) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Move BTF object into BPFtrace class (fdf3940) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add runtime test (db81d25) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add clang_parser test (6cae624) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Use struct instead of class (fbe3bf6) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Make `strncmp` codegen unsigned (af54c9b) by bas smit &lt;bas@baslab.org&gt;\n  - Avoid shift/reduce warnings (3761904) by bas smit &lt;bas@baslab.org&gt;\n  - Treat stackmode as identifier (e018da5) by bas smit &lt;bas@baslab.org&gt;\n  - Define all `call`s in the lexer to avoid redefinition (b8ddf25) by bas smit &lt;bas@baslab.org&gt;\n  - Remove `_` suffix from local variables (34d4654) by bas smit &lt;bas@baslab.org&gt;\n  - Add regression test for #957 (253cfd6) by bas smit &lt;bas@baslab.org&gt;\n  - Fix paths in tests (a8dcb02) by bas smit &lt;bas@baslab.org&gt;\n  - Allow runtime tests to be ran from any directory (9139bed) by bas smit &lt;bas@baslab.org&gt;\n  - Link libiberty during static builds (aa8c7ba) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - cpid vector -> single (52ff6e3) by bas smit &lt;bas@baslab.org&gt;\n  - 0.9.3 Changelog (f4ea282) by bas smit &lt;bas@baslab.org&gt;\n  - Bump to 0.9.3 (3d1e022) by bas smit &lt;bas@baslab.org&gt;\n  - Add `signal` tests (95cba2b) by bas smit &lt;bas@baslab.org&gt;\n  - Add missing kernel option in INSTALL.md (099d1c9) by Edouard Dausque &lt;git@edouard.dausque.net&gt;\n  - Make printing the LLVM IR from a debugger easier (d534295) by bas smit &lt;bas@baslab.org&gt;\n  - Make `uprobes - list probes by pid` test more quiet (b2a570a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - vagrant: add binutils-dev dependency (2e73e04) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - Fix maptype bugs (028c869) by bas smit &lt;bas@baslab.org&gt;\n  - Disable -Winconsistent-missing-override in mock.h (d3cb095) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Disable -Wcast-qual for bpf/btf.h (b308a9c) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Import used headers (979992e) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix modernize-deprecated-headers warnings (b09836b) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wcast-align (ce45470) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wdelete-abstract-non-virtual-dtor (cb78da3) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wstring-plus-int (3e52a3d) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wunreachable-code-loop-increment (f354911) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wbraced-scalar-init (6fc82ed) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wmismatched-tags (e29a4f2) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix -Wformat-security (cc3ef62) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Fix some compiler warnings (9a85f10) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n\n## [0.9.3] 2019-11-22\n\n### Highlights\n\n  - Allow attaching to uprobes at an offset\n  - BTF support\n  - integer casts\n  - integer pointer casts\n\n### All Changes\n\n#### Added\n  - Add support to cast to a pointer of integer (#942) (8b60006) by Masanori Misono &lt;m.misono760@gmail.com&gt;\n  - Add sargX builtin (9dc6024) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Add support to specify symbol with offset to uprobe (33e887f) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - add threadsnoop tool (f021967) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add tcpsynbl tool (0cbc301) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add tcplife tool (51d8852) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add swapin tool (c80753b) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add setuids tool (439311a) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add naptime tool (572de59) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - add biostacks tool (162bc63) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Add check if uprobe is aligned (e2c65bd) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Support wildcards in probe path (#879) (2a361cc) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Add --btf option (ec931fa) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Introduce int casts (ee82e64) by bas smit &lt;bas@baslab.org&gt;\n  - utils: unpack kheaders.tar.xz if necessary (#768) (896fafb) by Matt Mullins &lt;mokomull@gmail.com&gt;\n  - Add support to check for libbpf package (8e0800c) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add signed types (53cf421) by bas smit &lt;bas@baslab.org&gt;\n  - Add location support to builtins (a79e5a6) by bas smit &lt;bas@baslab.org&gt;\n  - Add location support to calls (c1b2a91) by bas smit &lt;bas@baslab.org&gt;\n  - Add location support to the AST (67c208d) by bas smit &lt;bas@baslab.org&gt;\n  - Highlight bpftrace source files (cfbaa2f) by Paul Chaignon &lt;paul.chaignon@orange.com&gt;\n  - Add travis CI build icon to README.md (50375e2) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add IRC badge to README (a20af57) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n\n#### Changed\n  - Use the same shebang for all tools (78eb451) by bas smit &lt;bas@baslab.org&gt;\n  - Change exit() to send SIGTERM to child processes (649cc86) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - Make `stats` and `avg` signed (809dc46) by bas smit &lt;bas@baslab.org&gt;\n  - Refactor error printer to make severity level configurable (676a6a7) by bas smit &lt;bas@baslab.org&gt;\n  - Make output line-buffered by default (#894) (78e64ba) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - cmake: don't use language extensions (like gnu++14) (4ce4afc) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - add file extension on README (545901c) by sangyun-han &lt;sangyun628@gmail.com&gt;\n  - build: don't set -std flag manually (3cbc482) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Don't use random value on stack (b67452b) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - codegen: ensure logical OR and AND works with non-64-bit integers (69cbd85) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Allow child process to exit on attach_probe failure (#868) (ecf1bc8) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - json output: Make output more consistent (#874) (9d1269b) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n  - Do not generate extra load for ++/-- for maps/variables (3f79fad) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n\n#### Fixed\n  - semantic_analyser: validate use of calls as map keys (b54c085) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - codegen: fix rhs type check for binop (2d87213) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix map field access (a9acf92) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Correctly parse enums (59d0b0d) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Allow build from uncommon bcc installation (9986329) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Fix sigint handling under heavy load (0058d41) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Assign default value to elem_type to avoid undefined behavior. (a0b8722) by Florian Kuebler &lt;kuebler@google.com&gt;\n  - Strip trailing newline from error message (5315eee) by bas smit &lt;bas@baslab.org&gt;\n  - Use strerror to improve `cgroupid` error message (72de290) by bas smit &lt;bas@baslab.org&gt;\n  - Initialize member variable (4dd8bb8) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix umask build issue (#861) (24de62a) by Michael Würtinger &lt;michael@wuertinger.de&gt;\n  - Handle SIGTERM gracefully (#857) (fb47632) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n  - json output: suppress output if map is not initialized (348975b) by Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;\n  - fix 'designated initializers' build errors (#847) (4910e75) by Alek P &lt;alek-p@users.noreply.github.com&gt;\n  - remove invalid 'unused attribute' (9bf8204) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n\n#### Documentation\n  - Mention sargX builtin in docs (352e983) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Update reference guide (65c97fd) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Docs: fix inconsistent install script option (a65e3d8) by Daniel T. Lee &lt;danieltimlee@gmail.com&gt;\n  - docs: Fix mismatch between code and example (2499437) by bas smit &lt;bas@baslab.org&gt;\n  - fix typo in example text - correct name of script (891021b) by sangyun-han &lt;sangyun628@gmail.com&gt;\n  - Add openSUSE package status link into install.md (#859) (613b42f) by James Wang &lt;jnwang@suse.com&gt;\n  - Fix a typo in reference_guide (e7420eb) by James Wang &lt;jnwang@suse.com&gt;\n  - Ubuntu instructions: add minimum release version (413c1a0) by Peter Sanford &lt;psanford@sanford.io&gt;\n\n#### Internal\n  - Add tests for sargX builtin (774a7a6) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Add test (0c08b1d) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Avoid leaking state between cmake tests (625269f) by bas smit &lt;bas@baslab.org&gt;\n  - Avoid testing for FOUR_ARGS_SIGNATURE on systems without bfd (cd1d231) by bas smit &lt;bas@baslab.org&gt;\n  - Unset `CMAKE_REQUIRED_LIBRARIES` to avoid influencing tests (ab0665b) by bas smit &lt;bas@baslab.org&gt;\n  - Define PACKAGE to make libbfd happy (d165396) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix 'may be used uninitialized' build warning in bfd-disasm.cpp (ffd203b) by Augusto Caringi   &lt;acaringi@redhat.com&gt;\n  - Change \"variable.tracepoint arg casts in predicates\" runtime test (9aae057) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - bfd-disasm: fix LIBBFD_DISASM_FOUR_ARGS_SIGNATURE (7d62627) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - semantic_analyser: fix gcc build error on xenial (0e6014a) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - Prevent forks from notifying the IRC channel (ca93440) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add runtime tests for uprobe offset/address (d9c2bab) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Bypass the uprobe align check in unsafe mode (18b9635) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Adding tests for uprobe offset definitions (d894d0e) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add BfdDisasm class (8198628) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add Disasm class (6f7bc6f) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add support to check for libbfd/libopcodes libraries (542f2b9) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add resolve_offset_uprobe functions (7be4143) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add address and func_offset to ast::AttachPoint and Probe classes (893201a) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Fix `sigint under heavy load` runtime test (4f7fd67) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Notify irc channel on build failures (83b5684) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add BTF class (43530aa) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Read every BTF type (67dbe3f) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Disable codegen.logical_and_or_different_type test in alpine CI (5271e6c) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Warn when doing signed division (#910) (fff3b05) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add short option for --btf and update usage (88dbe47) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add BTF tests (47621bb) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add ClangParser::parse_btf_definitions function (54cf4ab) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add SizedType::operator!= function (8cb79f9) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add ClangParserHandler::check_diagnostics function (3e75475) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add ClangParser::visit_children function (4842ccf) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add BTF::c_def function (02a2d0d) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add Expression::resolve string set (0779333) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Add curtask task_struct cast type for field access (80cb0d7) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - test: fix watchpoint runtime test flakiness (88fc1b8) by Matheus Marchini &lt;mmarchini@netflix.com&gt;\n  - Disable sign checking for division binop (8084463) by bas smit &lt;bas@baslab.org&gt;\n  - Add ability to test for warnings (b19ebb6) by bas smit &lt;bas@baslab.org&gt;\n  - Revert \"Signed types (#834)\" (6613a14) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Signed types (#834) (446facb) by bas smit &lt;bas@baslab.org&gt;\n  - test: fix flaky 32-bit tp runtime test (c0d94c8) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - travis: use bionic and enable runtime tests (57c5a55) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - test: print bpftrace script when codegen test fails (b0c4902) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - tests: add test for cat with fmt str (#842) (b3143a6) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix tests (#844) (fd0ec92) by bas smit &lt;bas@baslab.org&gt;\n\n## [0.9.2] 2019-07-31\n\n### Highlights\n\n - New environment variables (BPFTRACE_NO_USER_SYMBOLS, BPFTRACE_LOG_SIZE)\n - New probe type: memory `watchpoint`\n - Support for JSON output\n\n### All Changes\n\n#### Added\n - Add vargs support for cat() builtin (similar to system) (7f1aa7b) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n - Add memory watchpoint probe type (#790) (854cd4b) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n - Add support for Go symbol names to uaddr (#805) (e6eb3dd) by Jason Keene &lt;jasonkeene@gmail.com&gt;\n - add option for JSON output (5c6f20a) by Andreas Gerstmayr &lt;andreas@gerstmayr.me&gt;\n - Add $# for number of positional arguments (ec8b61a) by Mark Drayton &lt;mdrayton@gmail.com&gt;\n - Add BPFTRACE_NO_USER_SYMBOLS environment variable (#800) (41d2c9f) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n - Add line numbers to parser error messages (a584752, 2233ea7) by bas smit &lt;bas@baslab.org&gt;\n - Add new environment variable BPFTRACE_LOG_SIZE (2f7dc75, 7de1e84, 2f7dc75) by Ray Jenkins &lt;ray.jenkins@segment.com&gt;\n\n#### Changed\n - Terminate when map creation fails (6936ca6) by bas smit &lt;bas@baslab.org&gt;\n - Print more descriptive error message on uprobe stat failure (0737ec8) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n - Allow '#' in attach point path (2dfbc93) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n - Disable `func`, `retval` and `reg` for tracepoints since tracepoints can't access this information (7bfc0f8) by bas smit &lt;bas@baslab.org&gt;\n\n#### Fixed\n - Skip keys which were removed during iteration on `print` (bfd1c07) by Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;\n - Fix exiting prematurely on strace attach (a584752..0e97b2c) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n - Fix unused variable warnings (9d07eb5) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n - Fix alignment issues on `ntop` (2006424) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n - Fix BEGIN being triggered multiple times when bpftrace is run a second time (14bc835) by bas smit &lt;bas@baslab.org&gt;\n - Fix crash when using $0 (b41d66d) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n - Fix tcp tools printing errors (206b36c) by bas smit &lt;bas@baslab.org&gt;\n\n#### Documentation\n - Update Ubuntu install instructions (4e3ffc3) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n - Clarify help message for `-o` (d6e9478) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n - `opensnoop.bt` was incorrectly linked to load.bt (d74fae0) by southpawflo &lt;16946610+southpawflo@users.noreply.github.com&gt;\n - Document multiple attach points for probes (21bc5bf) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n - Fix incorrect reference to the `probe` key (83d473c) by Jeremy Baumont &lt;jeremy.baumont@gmail.com&gt;\n\n#### Internal\n - Fix failing test (086c018) by bas smit &lt;bas@baslab.org&gt;\n - Collapse bcc symbol resolvers by process executable (63ff8b0) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n - Remove unneeded probe read (7d0aa99) by bas smit &lt;bas@baslab.org&gt;\n - Fix runtime test parser to not break with commented out tests (#824) (b73c963) by Augusto Mecking Caringi &lt;acaringi@redhat.com&gt;\n - bpftrace: optimize resolve_kname (#765) (ec5278d) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n - Resolve symbol names using bcc_elf_foreach_sym (#811) (a2d9298) by Jason Keene &lt;jasonkeene@gmail.com&gt;\n - Add basic editorconfig for defining style (#775) (5b20829) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n - Auto-generate list of includes for codegen tests (e3b8ecd) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n - Do not emit GEP instruction when pushing string literals to stack (#667) (e98530c) by Michał Gregorczyk &lt;michalgr@users.noreply.github.com&gt;\n - tool style tweaks (8bb0940) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n - Clean up unused variable (#787) (8627e84) by Dan Xu &lt;dxu@dxuuu.xyz&gt;\n - Make member variables end with underscores (c76a8e4) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n - Fail in case there's unresolved type in definitions (ecb7a1b, 2239756, a6a4fb3) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n\n## [0.9.1] 2019-06-25\n\n### Highlights\n\n  - Introduce compound assignment operators (`+=` and friends) (7f26468) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add support for arrays and IPv6 for the `ntop` builtin function (c9dd10f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add basic support to enums (treat them as constants) (e4cb6ce) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add macro definition support (8826470,af67b56,14e892b) by Matheus Marchini &lt;mat@mmarchini.me&gt;, Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Add support for arrays and IPv6 for the `ntop` builtin function (c9dd10f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Allow comparison of two string variables (7c8e8ed) by williangaspar &lt;williangaspar360@gmail.com&gt;\n  - Add pre and post behavior to ++ and -- operators (f2e1345...9fea147) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - [**BREAKING CHANGE**] Ban kprobes that cause CPU deadlocks (40cf190) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - [**BREAKING CHANGE**] Add unsafe-mode and make default execution mode safe-mode (981c3cf,4ce68cd) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n\n### All Changes\n\n#### Added\n\n  - Introduce compound assignment operators (`+=` and friends) (7f26468) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add KBUILD_MODNAME (a540fba) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Add flags for include paths and files (`--include` and `-I`, respectively) (632652f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - List uprobes with -l (122ef6e) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add BPFTRACE_MAX_PROBES environment variable (ddb79df) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add option to redirect trace output to file (462a811) by bas smit &lt;bas@baslab.org&gt;\n  - Add script to check kernel requirements (ac19743) by bas smit &lt;bas@baslab.org&gt;\n  - Add USDT wildcard matching support (82dbe4e...3725edf,648a65a) by Dale Hamel &lt;dale.hamel@srvthe.net&gt;\n  - Add support for arrays and IPv6 for the `ntop` builtin function (c9dd10f,24a463f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add 'cat' builtin (ae1cfc9,ef9baf8) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Add array indexing operator [] for one-dimensional, constant arrays (ec664a1) by Dale Hamel &lt;dalehamel@users.noreply.github.com&gt;\n  - Allow dots to truncate fields in `printf` (0f636c9) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Add `BPFTRACE_MAP_KEYS_MAX` environment variable, and increase default map keys limit to 4096 (fab8bf6) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Add support for delimiters in join() statement (eb40386) by Jason Koch &lt;jkoch@netflix.com&gt;\n  - Add basic support to enums (treat them as constants) (e4cb6ce) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Add macro definition support (8826470,af67b56,14e892b) by Matheus Marchini &lt;mat@mmarchini.me&gt;, Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Add hardware:branch-misses (9631623) by Jason Koch &lt;jkoch@netflix.com&gt;\n  - Allow comparison of two string variables (7c8e8ed) by williangaspar &lt;williangaspar360@gmail.com&gt;\n\n#### Changed\n\n  - Add pre and post behavior to ++ and -- operators (f2e1345...9fea147) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Parse negative integer literals correctly (108068f) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Tools improvements (9dbee04,a189c36) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - USAGE message trim (18d63b0) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Allow `probe` builtin for `BEGIN` and `END` probes (3741efe) by bas smit &lt;bas@baslab.org&gt;\n  - Default -d and -dd output to stdout (ecea569) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n  - Return with error code if clang finds an error while parsing structs/enums/macros/includes (364849d) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Restore map key validation (7826ee3) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add `/usr/include` to default header search path (32dd14b) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - More information in error message when failing to open script file (3b06e5f) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - [**BREAKING CHANGE**] Add unsafe-mode and make default execution mode safe-mode (981c3cf,4ce68cd) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Safety measure for LLVM out of memory issue (6b53e4a) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Allow non-zero lhist min value (51fdb6a) by bas smit &lt;bas@baslab.org&gt;\n  - Improvements in startup speed (5ed8717,1ffb50f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - When using -c, spawn the child process only when the tracing is ready (e442e9d) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Allow more pointers as ints (3abc93e) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Validate that PID (received via `-p`) is an integer (48206ad) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Promote map keys to 64-bit (e06e39d) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Add hint when traced PID is not running (9edb3e1) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Allow pointers in printf, mapkeys, and filters (0202412,280f1c6) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - Allow ksym() lookups on function pointers (2139d46) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - [**BREAKING CHANGE**] Ban kprobes that cause CPU deadlocks (40cf190) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n\n#### Fixed\n\n  - Workaround for asm goto in Kernel 5+ headers (60263e1) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Properly handle invalid `args` utilization (13c2e2e) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix abort caused by lhist with incorrect number of arguments (41036b9) by bas smit &lt;bas@baslab.org&gt;\n  - Fix anonymous struct parsing (ea63e8b) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix code generation for bitwise and logical not on integer values (f522296) by synth0 &lt;synthkaf@outlook.com&gt;\n  - Fix typo in type mismatch error message (83924f8) by Jay Kamat &lt;jaygkamat@gmail.com&gt;\n  - Fix clearing action for some aggregations (dcd657e) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Fix possible crash if an invalid char is used in search (c4c6894) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix headers includes by using -isystem rather than -I (32daaa2) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Fix exit() function bypassing END probe processing #228 (f63e1df,e4c418e,5cce746) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix order in which probes fire (a4bf870) by John Gallagher &lt;john.gallagher@delphix.com&gt;\n  - Stop throwing 'failed to initialize usdt context for path' error message (1fa3d3c) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix stringification of ntop keys in maps (598050e) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix parsing of forward-decl structs inside structs (354c919) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix struct definition from headers (4564d55) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Avoid crash if incorrect command line option is used (aa24f29) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix clang_parser for LLVM 8+ (80ce138) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix semicolon being required in some cases after if statements (13de974) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Throw error message if argN or retval is used with incorrect probe type (b40354c) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix USDT listing (`-l`) without a search pattern (af01fac) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Add missing space to error message (e1f5f14) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix unroll in some cases (mostly when the generated code was large) (702145c) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n\n#### Documentation\n\n  - Added info on clang environment variables (7676530) by Richard Elling &lt;Richard.Elling@RichardElling.com&gt;\n  - Fix snap instructions. (3877e46) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Fix ustack documentation (5eeeb10) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Replace stack with kstack (49e01e0) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Fix TOC in the reference guide (05eb170) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix broken links in docs (c215c61,845f9b6) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix inaccurate tutorial on listing (a4aeaa5) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Add documentation for BEGIN/END probes (81de93a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Update build instructions for Ubuntu (38b9620) by bas smit &lt;bas@baslab.org&gt;\n  - INSTALL.md: update required dependency for usdt (5fc438e) by Zi Shen Lim &lt;zlim.lnx@gmail.com&gt;\n  - Fix ++ and -- text on undefined variables (47ab5cd) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Reference guide small fixes (0d9c1a4) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Add instructions to install on Gentoo (3c23187) by Patrick McLean &lt;chutzpah@gentoo.org&gt;\n  - Add install instructions for Ubuntu snap package (0982bb6) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Fix spelling mistake (a45869f) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Fix 'one liners tutorial': use 'openat' instead of 'open' in examples (0cce55c) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Add contributing section to the README (2a08468) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Standardise documentation on the bpftrace name (135a4d3) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Update install instructions (505b50a) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n\n#### Internal\n\n  - [tests] add missing tests to codegen.cpp (012ebda) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - tests: add runtime tests for regression bugs (ee57b6f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - vagrant: add Ubuntu 19.04 box (60e6d0a) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - docker: add Fedora 30 (9ccafa0) by Zi Shen Lim &lt;zlim.lnx@gmail.com&gt;\n  - Add Vagrantfile for ubuntu (b221f79) by bas smit &lt;bas@baslab.org&gt;\n  - tests: fix and improve runtime tests (c7b3b2f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Clean up includes in clang_parser (374c240) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Remove double `check_nargs` call (c226c10) by bas smit &lt;bas@baslab.org&gt;\n  - Fix call.system runtime test (3b4f578) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix call.str runtime test (8afbc22) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix k[ret]probe_order runtime tests (27a334c) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Remove old TODO (5be3752) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add clang_parser::parse_fail test (6fd7aac) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Fix some bugs with positional parameters (13fb175) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix runtime tests (a05ee59) by bas smit &lt;bas@baslab.org&gt;\n  - Enable multiline matching for runtime test regex (c8763e4) by bas smit &lt;bas@baslab.org&gt;\n  - Add environment var support to runtime tests (543513e) by bas smit &lt;bas@baslab.org&gt;\n  - Disable codegen.printf_offsets test for LLVM5 CI build (ea8a7e4) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix LLVM 5 tests (938e79b) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Refactor find_wildcard_matches() to allow for proper testing (371c7cf) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - tests: Use Python 3 for integration tests + test fix (#651) (4b0e477) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Add --unsafe to more runtime tests (8b2234a) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix 'ignoring return value' build warning (bdc9f16) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix 'signed overflow' related build warning (0ece2a9) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Fix UnboundLocalError on skipped test (03958cb) by John Gallagher &lt;john.gallagher@delphix.com&gt;\n  - Use getopt_long instead of getopt (d732298) by Daniel Xu &lt;dxu@dxuuu.xyz&gt;\n  - Fix docs typo (05bf095) by bas smit &lt;bas@baslab.org&gt;\n  - check explicitly for systemtap sys/sdt.h and ignore if not present (831633d) by Jason Koch &lt;jkoch@netflix.com&gt;\n  - Suppress build warning in GCC >=8 caused by #474 (71d1cd5) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Remove more tabs (e9594dd) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Convert tabs to spaces (585e8b5) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Add existence tests for kstack, kstack() and ustack() (954d93d) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - [tests] more runtime tests enhancements (#586) (249c7a1) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Codegen: Fix assigning non-struct \"internal\" values to maps (4020a5c) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Fix typo on LLVM_REQUESTED_VERSION macro in CMakeLists.txt (82dbe4e) by Quentin Monnet &lt;quentin.monnet@netronome.com&gt;\n  - Fix build warning (a77becb) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - [tests] allow tests to be skipped if a given condition is not met (59fa32a) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - [tests] make other.if_compare_and_print_string less flaky (840bbb3) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix compile warnings and mark more functions as const (cfb058d) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Misc readability fixes (9581e01) by Fangrui Song &lt;i@maskray.me&gt;\n  - build: unify dockerfiles under a bionic image (445fb61) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - [tests] fix and enhance runtime tests (ea5deb9) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - [tests] add test script to run tools with -d (4ff113d) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - [clang_parser] decouple kernel cflags from the parser method (ad753d5) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Address TODO items related to objdump dependency (382b9b7) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - Fall back to objdump/grep if bcc is older (fdd02ec) by Adam Jensen &lt;acjensen@gmail.com&gt;\n  - [clang_parser] pass BPFtrace as arg instead of StructMap (a0af75f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - [ast] introduce Identifier type to AST (389d55f) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - use CMAKE_SYSTEM_PROCESSOR when selecting whether to include x86_64 or aarch64 sources (0ea7a63) by Michał Gregorczyk &lt;michalgr@fb.com&gt;\n  - Clearify error message for mismatched llvm. (9b77fee) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Add more info to LLVM mismatch error message (1e3b1be) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Allow 0 as kernel version during first attempt to call bcc_prog_load (13499ac) by Michał Gregorczyk &lt;michalgr@fb.com&gt;\n  - Fix bpftrace_VERSION_MINOR in CMakeLists.txt (8 -> 9) (13321eb) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n  - Fix version information when not building inside a git repo (#489) (1f33126) by Augusto Caringi &lt;acaringi@redhat.com&gt;\n  - Do not try to load bpf program with unknown kernel version (2c00b7f) by Michał Gregorczyk &lt;michalgr@fb.com&gt;\n  - Add better checks for llvm version (4fe081e) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - Fix deprecated stack warning in builtin_stack test (a1aaed8) by George Slavin &lt;george.r.slavin@gmail.com&gt;\n  - add test for 32-bit tp args (77f7cb7) by Brendan Gregg &lt;bgregg@netflix.com&gt;\n  - tests: add some basic integration tests (e9805af) by Javier Honduvilla Coto &lt;javierhonduco@gmail.com&gt;\n  - Fix and simplify lexer.l (57bae63) by Fangrui Song &lt;i@maskray.me&gt;\n  - Fix 2 clang warnings: -Wmismatched-tags and -Wpessimizing-move (18da040) by Fangrui Song &lt;i@maskray.me&gt;\n  - Revert \"Stop linking against bcc-loader-static\" (5b6352c) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - fix typo on BPF_FUNC_get_current_cgroup_id missing message (27371c3) by Jason Koch &lt;jkoch@netflix.com&gt;\n  - propagate HAVE_GET_CURRENT_CGROUP_ID to ast modules (57e30da) by Jason Koch &lt;jkoch@netflix.com&gt;\n  - Add missing include (5763dc2) by Michał Gregorczyk &lt;michalgr@fb.com&gt;\n  - No need for `if` when we're not doing anything (a65ad14) by Alastair Robertson &lt;alastair@ajor.co.uk&gt;\n  - Make indirect* related data static (24d9dd2) by Jiri Olsa &lt;jolsa@kernel.org&gt;\n  - Fix issues, add tests and improve reliability of positional parameters (acec163,f2e1345) by Matheus Marchini &lt;mat@mmarchini.me&gt;\n\n## [0.9.0] 2019-03-16\n\n### Deprecated\n\n  - **Deprecate `sym()`**. Use `ksym()` instead (50a66d2) by williangaspar <williangaspar360@gmail.com>\n  - **Deprecate `stack`**. Use `kstack` instead (e8b99cd) by williangaspar <williangaspar360@gmail.com>\n\n### Added\n\n  - List usdt probes with -l (fa7d5f3) by Timothy J Fontaine <tjfontaine@gmail.com>\n  - Introduce perf formatting for ustack()/kstack() (db910b9) by Matheus Marchini <mat@mmarchini.me>\n  - Add increment and decrement operators (++/--) (c8d8a08, 6aa66a1, 223d8d8, 1f82aaf, 8c5c4ea) by Dale Hamel <dale.hamel@shopify.com>\n  - Add changelog file to keep track of unreleased changes (d11fb01) by Matheus Marchini <mat@mmarchini.me>\n  - Allow args with multiple tracepoints (a0a905f, 2df50d3, cddae1a) by Brendan Gregg <bgregg@netflix.com>\n  - Add elapsed builtin (0fde181) by Brendan Gregg <brendan.d.gregg@gmail.com>\n  - Add support to demangle C++ symbols in userspace stack traces (872525c) by Augusto Caringi <acaringi@redhat.com>\n  - allow \\r (e7f0584) by Brendan Gregg <bgregg@netflix.com>\n  - Use debuginfo files information when available (1132d42) by Augusto Caringi <acaringi@redhat.com>\n  - Add ustack([int limit])/kstack([int limit]) calls (08da997) by Matheus Marchini <mat@mmarchini.me>\n  - Allow custom provider name in USDT probe definition (361245c, 80d640a, 20ddfed, c3a6ff1) by Dale Hamel <dale.hamel@shopify.com>\n  - Detect kernel headers even if they are splitted into source/ and build/ directories (4d76385) by Kirill Smelkov <kirr@nexedi.com>\n  - Add support for arm64 (aarch64) (47fa8aa) by Ali Saidi <alisaidi@amazon.com>\n  - Allow customizing stdout buffering mode via -b (1663b84) by Hongli Lai (Phusion) <hongli@phusion.nl>\n  - Add support to list tracepoint arguments (#323) (4a048fc) by Augusto Caringi <acaringi@redhat.com>\n  - Add `ksym` as a replacement for `sym` (50a66d2) by williangaspar <williangaspar360@gmail.com>\n  - Add `kstack` as a replacement for `stack` (e8b99cd, 840712b, f8f7ceb,6ec9a02) by williangaspar <williangaspar360@gmail.com>\n  - cmake: add BUILD_TESTING support (a56ab12) by Aleksa Sarai <cyphar@cyphar.com>\n  - Add --version (61a4650, eab3675) by williangaspar <williangaspar360@gmail.com>\n  - Add hint to install docs and normalize format (c0084a2) by Daniel Xu <dxu@dxuuu.xyz>\n  - Make bpftrace -l list sofware and hardware types (#44) (acd9a80) by Augusto Caringi <acaringi@redhat.com>\n  - Print program ID when the verbose option is enabled. (8e8258d) by David Calavera <david.calavera@gmail.com>\n\n### Changed\n\n  - Use `struct` when casting on docs and tools (e2ba048) by Brendan Gregg <bgregg@netflix.com>\n  - Allow using the `struct` keyword when casting (df03256) by williangaspar <williangaspar360@gmail.com>\n  - Make path optional on usdts when attaching to pid (c1c7c83) by Timothy J Fontaine <tjfontaine@gmail.com>\n  - Resolve binary name from PATH for usdts and uprobes (28f0834) by Matheus Marchini <mat@mmarchini.me>\n  - Use map lookups instead of sequential checks in tcpdrop.bt and tcpretrans.bt (cb0969c) by Slavomir Kaslev <kaslevs@vmware.com>\n  - Implicitly declare variables to 0 if used but not defined (a408cc2) by Matheus Marchini <mat@mmarchini.me>\n  - Sort all integer maps by values, ascending (c378f57) by Dale Hamel <dale.hamel@shopify.com>\n  - Change Ubuntu install to LLVM 6.0 (98353bf) by Brendan Gregg <bgregg@netflix.com>\n  - ignore EFAULT stack IDs (f080bbf) by Brendan Gregg <bgregg@netflix.com>\n  - Usage updates (6de4101) by Brendan Gregg <bgregg@netflix.com>\n  - make map stack indentation 4 chars (c1dd418) by Brendan Gregg <bgregg@netflix.com>\n  - Print error messages on all `abort()` calls (5c2ca5b) by williangaspar <williangaspar360@gmail.com>\n  - Lesson 9: Replace \"stack\" to \"kstack\" (1ac56bd) by CavemanWork <yingyun@caveman.work>\n  - Use structs with semicolons in tools and documentation (85dba93) by Brendan Gregg <bgregg@netflix.com>\n  - Allow semicolon after struct definition (5982c74) by williangaspar <williangaspar360@gmail.com>\n  - remove unnecessary newlines in -l (bb4a83c) by Brendan Gregg <bgregg@netflix.com>\n  - list sw/hw probes with full names (6f3e1c4) by Brendan Gregg <bgregg@netflix.com>\n  - hist: split negative, zero, and one into separate buckets (48c0afb) by Brendan Gregg <bgregg@netflix.com>\n  - lhist: interval notation tweak (43e7974) by Brendan Gregg <bgregg@netflix.com>\n  - runqlat.bt: remove if semicolon (c10c0dc) by Brendan Gregg <bgregg@netflix.com>\n  - Probe list optimizations and improvements (7f84552) by Augusto Caringi <acaringi@redhat.com>\n  - Link against system installed bcc (#327) (4c3fbad) by Dan Xu <accounts@dxuuu.xyz>\n  - Make semicolon optional after if and unroll blocks (d74d403) by williangaspar <williangaspar360@gmail.com>\n  - Avoid crashing if mistakenly just '-d' or '-v' is used (f2f6732) by Augusto Caringi <acaringi@redhat.com>\n  - Return cleanly after printing help (1d41717) by Daniel Xu <dxu@dxuuu.xyz>\n\n### Fixed\n\n  - Make sure we create map keys when we have all the typing information (971bd77) by Matheus Marchini <mat@mmarchini.me>\n  - Fix for new bpf_attach_kprobe signature (080bef8) by Matheus Marchini <mat@mmarchini.me>\n  - Fix string comparison improperly deallocating variables (ffa173a) by williangaspar <williangaspar360@gmail.com>\n  - Fix probe keys on maps when the map is used more than one time (df81736) by Matheus Marchini <mat@mmarchini.me>\n  - Fix using same variable name on multiple programs (61a14f2) by williangaspar <williangaspar360@gmail.com>\n  - Fix build on old compilers (644943a, 1b69272) by Kirill Smelkov <kirr@nexedi.com>\n  - Fix build with latest bcc (d64b36a) by williangaspar <williangaspar360@gmail.com>\n  - Don't throw warning for undefined types in tracepoint structure definition if `args` is not used (f2ebe1a) by Matheus Marchini <mat@mmarchini.me>\n  - Fix for 'redefinition of tracepoint' warning message (baaeade) by Augusto Caringi <acaringi@redhat.com>\n  - Minor fixes in our documentation (0667533) by Matheus Marchini <mat@mmarchini.me>\n  - Fix string comparison (5e114dd, 63acdb6) by williangaspar <williangaspar360@gmail.com>\n  - Prevent empty trigger functions to be optimized away with -O2 (#218) (9f2069b) by Augusto Caringi <acaringi@redhat.com>\n  - Fix -l behavior with shortcut probe names (2d30e31) by williangaspar <williangaspar360@gmail.com>\n  - Fix alpine docker build (#372) (2b83b67) by Dan Xu <accounts@dxuuu.xyz>\n  - Fix tracepoint wildcards (946c785) by Brendan Gregg <bgregg@netflix.com>\n  - tests: fix codegen test fot call_hist (342fd6d) by Matheus Marchini <mat@mmarchini.me>\n  - docs: fix trivial typos (3da1980) by Xiaozhou Liu <liuxiaozhou@bytedance.com>\n  - Fix symbol translation for func, sym, and stack (6276fb5) by Brendan Gregg <bgregg@netflix.com>\n  - Fix wrong package name in Ubuntu Dockerfile (f8e67a9) by xbe <xbe@users.noreply.github.com>\n  - Fix wrong package name in build instructions (8e597de) by Daniel Xu <dxu@dxuuu.xyz>\n  - Fix arguments and error messages for tracepoint shortcut `t` (0eddba7) by williangaspar <williangaspar360@gmail.com>\n\n### Internal\n\n  - Fix 'different signedness' warning messages in codegen call_[uk]stack.cpp (cb25318) by Augusto Caringi <acaringi@redhat.com>\n  - Fix 'signedness' warning message in tracepoint_format_parser.cpp (c3e562f) by Augusto Caringi <acaringi@redhat.com>\n  - Stop linking against bcc-loader-static (5fbb7a7) by Daniel Xu <dxu@dxuuu.xyz>\n  - Speeding up runtime tests (60c5d96) by williangaspar <williangaspar360@gmail.com>\n  - docker: make sure debugfs is mounted (7dcfc47) by Zi Shen Lim <zlim.lnx@gmail.com>\n  - Better coverage for variable_clear() (34fdded) by williangaspar <williangaspar360@gmail.com>\n  - Add missing space (c65e7c1) by puyuegang <puyuegang@gmail.com>\n  - Ignore warnings on code generated by bison (a935942) by Matheus Marchini <mat@mmarchini.me>\n  - Ignore warnings from LLVM headers (b6c4fd6) by Matheus Marchini <mat@mmarchini.me>\n  - Downgrade back to c++14 (f6986d8) by Matheus Marchini <mat@mmarchini.me>\n  - Fix 'parameter not used' warning (2401ab3) by Matheus Marchini <mat@mmarchini.me>\n  - Fix new build warning msg after c++17 was enabled (e4cbe48) by Augusto Caringi <acaringi@redhat.com>\n  - Get rid of cmake CMP0075 policy warning (9b8208a) by Augusto Caringi <acaringi@redhat.com>\n  - Use C++17 instead of C++14 (4b4d5dc) by Alex Birch <Birch-san@users.noreply.github.com>\n  - Re-enable more build warnings, fix related warnings #316 (8c383dc) by Augusto Caringi <acaringi@redhat.com>\n  - Define `__BPF_TRACING__` before building (required for kernel 4.19+) (e0bf01d) by Kirill Smelkov <kirr@nexedi.com>\n  - Re-enable subset of build warnings and fix some related warnings #316 (f0f56b0) by Augusto Caringi <acaringi@redhat.com>\n  - Cleanup enforce_infinite_rmlimits : removed getrlimit() : Added error description using strerror() (d76465f) by T K Sourab <sourabhtk37@gmail.com>\n  - use the new libbcc API: bcc_{create_map, prog_load} when possible (c03c39f) by Xiaozhou Liu <liuxiaozhou@bytedance.com>\n  - resources: generate c++ file instead of c file (5e1350b) by Matheus Marchini <mat@mmarchini.me>\n  - docker: disable runtime tests on CI (0667b92) by Matheus Marchini <mat@mmarchini.me>\n  - Hide -inl.h header from interface (10a43d0) by Daniel Xu <dxu@dxuuu.xyz>\n\n## [0.8.0] - 2019-01-06\n\nThis is a release to aid packaging. bpftrace has not reached a 1.0 release\nstatus yet, as there are still development changes and things to fix. But what\nis here should be tremendously useful, provided you bear in mind that there\nwill be some changes made to the programming language and command line options\nbetween now and a 1.0 release, so any tools or documentation written will\nbecome out of date and require changes. If you are anxiously waiting a 1.0\nrelease, please consider contributing so that it can be released sooner.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.5498046875,
          "content": "cmake_minimum_required(VERSION 3.14)\nproject(bpftrace)\n\ncmake_policy(SET CMP0057 NEW)\n\n# bpftrace version number components.\nset(bpftrace_VERSION_MAJOR 0)\nset(bpftrace_VERSION_MINOR 22)\nset(bpftrace_VERSION_PATCH 0)\n\ninclude(GNUInstallDirs)\n\nset(WARNINGS_AS_ERRORS OFF CACHE BOOL \"Build with -Werror\")\nset(STATIC_LINKING OFF CACHE BOOL \"Build bpftrace as a statically linked executable\")\n\nset(BUILD_ASAN OFF CACHE BOOL \"Build bpftrace with -fsanitize=address\")\nset(ENABLE_MAN ON CACHE BOOL \"Build man pages\")\nset(BUILD_TESTING ON CACHE BOOL \"Build test suite\")\nset(ENABLE_TEST_VALIDATE_CODEGEN ON CACHE BOOL \"Run LLVM IR validation tests\")\nset(BUILD_FUZZ OFF CACHE BOOL \"Build bpftrace for fuzzing\")\nset(USE_LIBFUZZER OFF CACHE BOOL \"Use libfuzzer for fuzzing\")\nset(FUZZ_TARGET \"codegen\" CACHE STRING \"Fuzzing target\")\nset(ENABLE_SYSTEMD OFF CACHE BOOL \"Enable systemd integration\")\nset(KERNEL_HEADERS_DIR \"\" CACHE PATH \"Hard-code kernel headers directory\")\nset(SYSTEM_INCLUDE_PATHS \"auto\" CACHE STRING \"Hard-code system include paths (colon separated, the default value \\\"auto\\\" queries clang at runtime)\")\n\nset(ENABLE_SKB_OUTPUT ON CACHE BOOL \"Enable skb_output, will include libpcap\")\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n\nset (CMAKE_CXX_STANDARD 20)\nset (CMAKE_CXX_STANDARD_REQUIRED ON)\nset (CMAKE_CXX_EXTENSIONS OFF)\n\nadd_compile_options(\"-Wall\")\nadd_compile_options(\"-Wextra\")\nadd_compile_options(\"-Werror=missing-field-initializers\")\nadd_compile_options(\"-Werror=undef\")\nadd_compile_options(\"-Wpointer-arith\")\nadd_compile_options(\"-Wcast-align\")\nadd_compile_options(\"-Wwrite-strings\")\nadd_compile_options(\"-Wcast-qual\")\n#add_compile_options(\"-Wconversion\")\nadd_compile_options(\"-Wunreachable-code\")\n#add_compile_options(\"-Wformat=2\")\nadd_compile_options(\"-Wdisabled-optimization\")\n\nif (WARNINGS_AS_ERRORS)\n  add_compile_options(\"-Werror\")\nendif()\n\n# Clang compiler produces narrowing errors when calling BPF_LD_MAP_FD in the bcc library\n# Turning off them before bcc library fixes this\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n  add_compile_options(\"-Wno-narrowing\")\nendif()\n\ninclude_directories(${CMAKE_SOURCE_DIR}/src)\ninclude_directories(${CMAKE_BINARY_DIR})\n\n# Ninja buffers output so gcc/clang think it's not an interactive session.\n# Colors are useful for compiler errors so force the color\nif(\"${CMAKE_GENERATOR}\" STREQUAL \"Ninja\")\n  if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n    add_compile_options(-fdiagnostics-color=always)\n  elseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n    add_compile_options(-fcolor-diagnostics)\n  endif()\nendif()\n\ninclude(CTest)\n\nif(STATIC_LINKING)\n  set(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\n  set(CMAKE_LINK_SEARCH_START_STATIC TRUE)\n  set(CMAKE_LINK_SEARCH_END_STATIC TRUE)\nendif(STATIC_LINKING)\n\nset_property( GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )\n\ninclude_directories(SYSTEM ${KERNEL_INCLUDE_DIRS})\n\nfind_package(ZLIB REQUIRED)\ninclude_directories(SYSTEM ${ZLIB_INCLUDE_DIRS})\n\nfind_package(LibBcc REQUIRED)\ninclude_directories(SYSTEM ${LIBBCC_INCLUDE_DIRS})\n\nfind_package(LibBpf REQUIRED)\ninclude_directories(SYSTEM ${LIBBPF_INCLUDE_DIRS})\nif(\"${LIBBPF_VERSION_MAJOR}.${LIBBPF_VERSION_MINOR}\" VERSION_LESS 1.5)\n  message(SEND_ERROR \"bpftrace requires libbpf 1.5 or greater\")\nendif()\n\nfind_package(LibElf REQUIRED)\ninclude_directories(SYSTEM ${LIBELF_INCLUDE_DIRS})\n\nfind_package(LibCereal REQUIRED)\ninclude_directories(SYSTEM ${LIBCEREAL_INCLUDE_DIRS})\n\nfind_package(BISON REQUIRED)\nfind_package(FLEX REQUIRED)\n# `parser_class_name` is deprecated and generates warnings in bison >= 3.3.\n# But `api.parser.class` is not supported in bison < 3.3. So we must inject\n# the %define based on the bison version here.\nif(${BISON_VERSION} VERSION_GREATER_EQUAL 3.3)\n  set(BISON_FLAGS \"-Dapi.parser.class={Parser}\")\nelse()\n  set(BISON_FLAGS \"-Dparser_class_name={Parser}\")\nendif()\nbison_target(bison_parser src/parser.yy ${CMAKE_BINARY_DIR}/parser.tab.cc COMPILE_FLAGS ${BISON_FLAGS} VERBOSE)\nflex_target(flex_lexer src/lexer.l ${CMAKE_BINARY_DIR}/lex.yy.cc)\nadd_flex_bison_dependency(flex_lexer bison_parser)\nadd_library(parser STATIC ${BISON_bison_parser_OUTPUTS} ${FLEX_flex_lexer_OUTPUTS})\ntarget_compile_options(parser PRIVATE \"-w\")\ntarget_include_directories(parser PRIVATE src src/ast)\n\ninclude(CheckSymbolExists)\nset(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)\ncheck_symbol_exists(name_to_handle_at \"sys/types.h;sys/stat.h;fcntl.h\" HAVE_NAME_TO_HANDLE_AT)\nset(CMAKE_REQUIRED_DEFINITIONS)\n\nfind_package(LibBfd)\nfind_package(LibOpcodes)\n\nif(ENABLE_SKB_OUTPUT)\n  find_package(LibPcap)\nendif()\n\nif(ENABLE_SYSTEMD)\n  find_package(PkgConfig)\n  pkg_check_modules(libsystemd REQUIRED IMPORTED_TARGET libsystemd)\nendif()\n\nif(POLICY CMP0075)\n  cmake_policy(SET CMP0075 NEW)\nendif()\n\nif(${LIBBFD_FOUND} AND ${LIBOPCODES_FOUND})\n  set(HAVE_BFD_DISASM TRUE)\nendif()\n\ninclude(CheckIncludeFile)\ncheck_include_file(\"sys/sdt.h\" HAVE_SYSTEMTAP_SYS_SDT_H)\n\n# Some users have multiple versions of llvm installed and would like to specify\n# a specific llvm version.\nif(${LLVM_REQUESTED_VERSION})\n  find_package(LLVM ${LLVM_REQUESTED_VERSION} REQUIRED)\nelse()\n  find_package(LLVM REQUIRED)\nendif()\n\nset(MIN_LLVM_MAJOR 13)\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  # We assume bpftrace is not being packaged when CMAKE_BUILD_TYPE=Debug.\n  # So allow building with any LLVM version. This is purely for developers.\n  # Packagers are highly discouraged from shipping bpftrace with untested LLVM\n  # releases.\n  set(MAX_LLVM_MAJOR 999)\nelse()\n  set(MAX_LLVM_MAJOR 19)\nendif()\n\nif((${LLVM_VERSION_MAJOR} VERSION_LESS ${MIN_LLVM_MAJOR}) OR (${LLVM_VERSION_MAJOR} VERSION_GREATER ${MAX_LLVM_MAJOR}))\n  message(SEND_ERROR \"Unsupported LLVM version found via ${LLVM_INCLUDE_DIRS}: ${LLVM_VERSION_MAJOR}\")\n  message(SEND_ERROR \"Only versions between ${MIN_LLVM_MAJOR} and ${MAX_LLVM_MAJOR} are supported\")\n  message(SEND_ERROR \"Specify an LLVM major version using LLVM_REQUESTED_VERSION=<major version>\")\nendif()\n\nmessage(STATUS \"Found LLVM ${LLVM_PACKAGE_VERSION}: ${LLVM_CMAKE_DIR}\")\ninclude_directories(SYSTEM ${LLVM_INCLUDE_DIRS})\nadd_definitions(${LLVM_DEFINITIONS})\n\nfind_package(Clang REQUIRED)\ninclude_directories(SYSTEM ${CLANG_INCLUDE_DIRS})\n\nfind_package(LLDB)\n\n# BPFtrace compile definitions\n\nset(BPFTRACE_FLAGS)\n\nif(HAVE_NAME_TO_HANDLE_AT)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_NAME_TO_HANDLE_AT=1)\nendif(HAVE_NAME_TO_HANDLE_AT)\n\nif(HAVE_BFD_DISASM)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_BFD_DISASM)\n  if(LIBBFD_DISASM_FOUR_ARGS_SIGNATURE)\n    set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" LIBBFD_DISASM_FOUR_ARGS_SIGNATURE)\n  endif(LIBBFD_DISASM_FOUR_ARGS_SIGNATURE)\n  if(LIBBFD_INIT_DISASM_INFO_FOUR_ARGS_SIGNATURE)\n    set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" LIBBFD_INIT_DISASM_INFO_FOUR_ARGS_SIGNATURE)\n  endif(LIBBFD_INIT_DISASM_INFO_FOUR_ARGS_SIGNATURE)\nendif(HAVE_BFD_DISASM)\n\nif (LLDB_FOUND)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_LIBLLDB)\nendif ()\n\nif(LIBPCAP_FOUND)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_LIBPCAP)\nendif(LIBPCAP_FOUND)\n\nif (HAVE_LIBBPF_UPROBE_MULTI)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_LIBBPF_UPROBE_MULTI)\nendif(HAVE_LIBBPF_UPROBE_MULTI)\n\nif(ENABLE_SYSTEMD)\n  set(BPFTRACE_FLAGS \"${BPFTRACE_FLAGS}\" HAVE_LIBSYSTEMD)\nendif()\n\nadd_subdirectory(src)\nif (BUILD_TESTING)\n  add_subdirectory(tests)\nendif()\nadd_subdirectory(tools)\nif (ENABLE_MAN)\n  add_subdirectory(man)\nendif(ENABLE_MAN)\n\nif(NOT TARGET uninstall)\n  configure_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/CmakeUninstall.cmake.in\"\n\t\"${CMAKE_CURRENT_BINARY_DIR}/CmakeUninstall.cmake\"\n    IMMEDIATE @ONLY)\n\n  add_custom_target(uninstall\n\t  COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/CmakeUninstall.cmake)\nendif()\n"
        },
        {
          "name": "CONTRIBUTING-TOOLS.md",
          "type": "blob",
          "size": 0.611328125,
          "content": "# Contributing bpftrace tools\n\nAll new tools must be submitted to the [user-tools repository](https://github.com/bpftrace/user-tools/blob/master/CONTRIBUTING.md) (not here) where they have a chance to develop maturity and collect real world use cases. \n\nThe tools that exist in this repository are a small collection curated by the bpftrace maintainers that have been battle-tested and are packaged with bpftrace. They are also used for testing and validation.\n\nA list of requirements, which is currently under development, for how tools in the user-tools repository get added to the curated list here will be available soon.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 10.373046875,
          "content": "# bpftrace Install\n\n- [Linux Kernel Requirements](#linux-kernel-requirements)\n- [Kernel headers install](#kernel-headers-install)\n- [Package install](#package-install)\n  - [Ubuntu](#ubuntu-packages)\n  - [Fedora](#fedora-package)\n  - [Gentoo](#gentoo-package)\n  - [Debian](#debian-package)\n  - [openSUSE](#openSUSE-package)\n  - [CentOS](#CentOS-package)\n  - [Arch](#arch-package)\n  - [Alpine](#alpine-package)\n- [AppImage install](#appimage-install)\n- [Building bpftrace](#building-bpftrace)\n  - [Ubuntu](#ubuntu)\n  - [Fedora](#fedora)\n  - [Debian](#debian)\n  - [Amazon Linux](#amazon-linux)\n  - (*please add sections for other OSes)*\n  - [Generic build](#generic-build-process)\n- [Disable Lockdown](#disable-lockdown)\n\n# Linux Kernel Requirements\n\nIt is recommended that you are running a Linux 4.9 kernel or higher. Some tools may work on older kernels, but these old kernels are no longer tested. To explain this requirement, these are the kernel versions where major features were added:\n\n- 4.1 - kprobes\n- 4.3 - uprobes\n- 4.6 - stack traces, count and hist builtins (use PERCPU maps for accuracy and efficiency)\n- 4.7 - tracepoints\n- 4.9 - timers/profiling\n\nMinor improvements have been added in later kernels, so newer than 4.9 is preferred.\n\nYour kernel also needs to be built with the following options:\n\n```\nCONFIG_BPF=y\nCONFIG_BPF_SYSCALL=y\nCONFIG_BPF_JIT=y\nCONFIG_HAVE_EBPF_JIT=y\nCONFIG_BPF_EVENTS=y\nCONFIG_FTRACE_SYSCALLS=y\nCONFIG_FUNCTION_TRACER=y\nCONFIG_HAVE_DYNAMIC_FTRACE=y\nCONFIG_DYNAMIC_FTRACE=y\nCONFIG_HAVE_KPROBES=y\nCONFIG_KPROBES=y\nCONFIG_KPROBE_EVENTS=y\nCONFIG_ARCH_SUPPORTS_UPROBES=y\nCONFIG_UPROBES=y\nCONFIG_UPROBE_EVENTS=y\nCONFIG_DEBUG_FS=y\n```\n\nThis can be verified by running the `check_kernel_features` script from the\n`scripts` directory.\n\n# Kernel headers install\n\nUsually kernels headers can be installed from a system package manager. In some\ncases though, this may not be an option, and headers aren't easily available.\nFor instance, the default `docker desktop` (as of writing ships with kernel\n4.19 which supports bpf), benefits from this, as does Chromium OS and other\nlightweight Linux distributions.\n\nNewer kernels may have the IKHEADERS option, or support btf - in which case\nthere is no need to build these headers as the kernel provides this.\nFor older kernels, and on distributions where headers may not be available,\nthis script provides a generic means to get bpftrace kernel headers:\n\n```bash\n#!/bin/bash\n\nset -e\n\nKERNEL_VERSION=\"${KERNEL_VERSION:-$(uname -r)}\"\nkernel_version=\"$(echo \"${KERNEL_VERSION}\" | awk -vFS=- '{ print $1 }')\"\nmajor_version=\"$(echo \"${KERNEL_VERSION}\" | awk -vFS=. '{ print $1 }')\"\n\napt-get install -y build-essential bc curl flex bison libelf-dev\n\nmkdir -p /usr/src/linux\ncurl -sL \"https://www.kernel.org/pub/linux/kernel/v${major_version}.x/linux-$kernel_version.tar.gz\" \\\n  | tar --strip-components=1 -xzf - -C /usr/src/linux\ncd /usr/src/linux\nzcat /proc/config.gz > .config\nmake ARCH=x86 oldconfig\nmake ARCH=x86 prepare\nmkdir -p /lib/modules/$(uname -r)\nln -sf /usr/src/linux /lib/modules/$(uname -r)/source\nln -sf /usr/src/linux /lib/modules/$(uname -r)/build\n```\n\n# Package install\n\n## Ubuntu packages\n\n```\nsudo apt-get install -y bpftrace\n```\n\nShould work on Ubuntu 19.04 and later.\n\n## Fedora package\n\nFor Fedora 28 (and later), bpftrace is already included in the official repo. Just install the package with dnf.\n\n```\nsudo dnf install -y bpftrace\n```\n\n## Gentoo package\n\nOn Gentoo, bpftrace is included in the official repo. The package can be installed with emerge.\n```\nsudo emerge -av bpftrace\n```\n\n## Debian package\n\nIs available and tracked [here](https://tracker.debian.org/pkg/bpftrace).\n\n## openSUSE package\n\nIs available and tracked [here](https://software.opensuse.org/package/bpftrace).\n\n## CentOS package\n\nA build maintained by @fbs can be found\n[here](https://github.com/fbs/el7-bpf-specs/blob/master/README.md#repository).\n\n## Arch package\n\nIn Arch Linux, bpftrace is available in the official repositories.\n```\nsudo pacman -S bpftrace\n```\n\n## Alpine package\n\nbpftrace is available in Alpine's official `community` repository:\n\n```\nsudo apk add bpftrace\n```\n\nTo install tools and documentation:\n\n```\nsudo apk add bpftrace-doc bpftrace-tools bpftrace-tools-doc\n```\n\n# AppImage install\n\n[AppImages](https://appimage.org/) are a portable way to distribute Linux\napplications. To the user, they are functionally equivalent to statically\nlinked binaries.\n\nbpftrace currently ships AppImages in two locations:\n\n* in artifacts on official releases\n* as a CI artifact for every build on master\n\nTo download the official release artifacts, see the\n[latest release](https://github.com/bpftrace/bpftrace/releases/latest).\n\nTo download the bleeding edge AppImage, go to the\n[workflow page](https://github.com/bpftrace/bpftrace/actions/workflows/binary.yml)\nand select the latest run. You should find an uploaded artifact like below:\n\n<img src=\"./images/ci_appimage_artifact.png\" width=\"40%\" height=\"40%\">\n\nNote that Github will automatically place all build artifacts in a .zip (it's\nout of our control) so remember to unzip it first.\n\n# Building bpftrace\n\n## Ubuntu\n\nDue to the kernel requirements Ubuntu 18.04 or newer is highly recommended.\n\n### 18.04 and 18.10\n\nThe versions of `bcc` currently available in Ubuntu 18.04 (Bionic) and 18.10\n(Cosmic) do not have all the requirements for building `bpftrace` so building\n`bcc` first is required. The instructions for building `bcc` can be found\n[here](https://github.com/iovisor/bcc/blob/master/INSTALL.md#install-and-compile-bcc).\nThe build dependencies listed below are also required for `bcc` so install those first.\n\nMake sure `bcc` works by testing some of the shipped tools before proceeding. It\nmight be required to `ldconfig` to update the linker.\n\n### 19.04 and newer\n\nFor 19.04 and newer, please see the [regularly exercised Dockerfile](./docker/Dockerfile.ubuntu)\nfor documentation on how to build bpftrace on Ubuntu.\n\n## Fedora\n\nYou'll want the newest kernel possible (see kernel requirements), eg, by using\nFedora 28 or newer.\n\nPlease see the [regularly exercised Dockerfile](./docker/Dockerfile.fedora)\nfor documentation on how to build bpftrace on Fedora.\n\n## Debian\n\nPlease see the [regularly exercised Dockerfile](./docker/Dockerfile.debian)\nfor documentation on how to build bpftrace on Debian.\n\n## Amazon Linux\n\nIn the future the install should be `yum install bpftrace`. Right now (16-Oct-2018), however, three dependencies need updating in the Amazon Linux repositories (llvm, libtinfo, bison), and bpftrace itself needs to be packaged. The current workaround is to build the three dependencies manually, as well as bpftrace. It's not fun, but it is doable, and will only get better as Amazon updates things.\n\n```\nsudo bash\nbuilddir=/media/ephemeral0\t# change to suit your system: needs about 2 Gbytes free\n\n# dependencies\nyum install git cmake3 gcc64-c++.x86_64 bison flex\n\n# llvm\ncd $builddir\nwget http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-Fedora27.tar.xz\ntar xf clang*\n(cd clang* && sudo cp -R * /usr/local/)\ncp -p /usr/lib64/llvm6.0/lib/libLLVM-6.0.so /usr/lib64/libLLVM.so\n\n# libtinfo.so.6 (comes from ncurses)\ncd $builddir\nwget ftp://ftp.gnu.org/gnu/ncurses/ncurses-6.0.tar.gz\ntar xvf ncurses-6.0.tar.gz\ncd ncurses-6.0\n./configure --with-shared --with-termlib\nmake -j8\nmake install\n\n# bison\ncd $builddir\nwget http://ftp.gnu.org/gnu/bison/bison-3.1.tar.gz\ntar xf bison*\ncd bison*\n./configure\nmake -j4\nmake install\n\n# bpftrace\ncd $builddir\ngit clone https://github.com/bpftrace/bpftrace\ncd bpftrace\nmkdir build; cd build\ncmake3 ..\nmake -j8\nmake install\necho /usr/local/lib >> /etc/ld.so.conf\nldconfig -v\n```\n\nThe bpftrace binary will be in installed in /usr/local/bin/bpftrace, and tools in /usr/local/share/bpftrace/tools. You may need to add /usr/local/bin to your $PATH. You can also change the install location using an argument to cmake, where the default is `-DCMAKE_INSTALL_PREFIX=/usr/local`.\n\n## Generic build process\n\nUse specific OS build sections listed earlier if available.\n\n### Requirements\n\n- A C++ compiler\n- Libbpf\n- Libbcc\n- CMake\n- Flex\n- Bison\n- Asciidoctor\n- LLVM, LLDB & Clang 10.0+ development packages\n- LibElf\n- Binutils development package\n- Libcereal\n- Kernel requirements described earlier\n- Libpcap\n- Systemtap SDT headers\n- Zlib development package\n\n### Compilation\n\n```\ngit clone https://github.com/bpftrace/bpftrace\nmkdir -p bpftrace/build\ncd bpftrace/build\ncmake -DCMAKE_BUILD_TYPE=Release ../\nmake\nsudo make install\n```\n\nA debug build of bpftrace can be set up with `cmake -DCMAKE_BUILD_TYPE=Debug ../`.\n\nThe bpftrace binary will be in installed in /usr/local/bin/bpftrace, and tools\nin /usr/local/share/bpftrace/tools. You can change the install location using an\nargument to cmake, where the default is `-DCMAKE_INSTALL_PREFIX=/usr/local`.\n\nTo test that the build works, you can try running the unit tests and a one-liner:\n\n```\n$ ./tests/bpftrace_test\n# ./src/bpftrace -e 'kprobe:do_nanosleep { printf(\"sleep by %s\\n\", comm); }'\n```\n\n# Disable Lockdown\n\nFrom the original patch set description:\n\n> This patchset introduces an optional kernel lockdown feature, intended\n> to strengthen the boundary between UID 0 and the kernel. When enabled,\n> various pieces of kernel functionality are restricted. Applications that\n> rely on low-level access to either hardware or the kernel may cease\n> working as a result - therefore this should not be enabled without\n> appropriate evaluation beforehand.\n>\n> The majority of mainstream distributions have been carrying variants of\n> this patchset for many years now, so there's value in providing a\n> doesn't meet every distribution requirement, but gets us much closer to\n> not requiring external patches.\n>\n>   - https://patchwork.kernel.org/patch/11140085/\n\nWhen lockdown is enabled and set to 'confidentiality' all methods that can\nextract confidential data from the kernel are blocked. This means that:\n\n- kprobes are blocked\n- tracefs access is blocked\n- probe_read and probe_read_str are blocked\n\nwhich makes it impossible for bpftrace to function.\n\nThere are a few ways to disable lockdown.\n\n1. Disable secure boot in UEFI.\n2. Disable validation using mokutil, run the following command, reboot and\n   follow the prompt.\n```\n$ sudo mokutil --disable-validation\n```\n3. Use the `SysRQ+x` key combination to temporarily lift lockdown (until next\n   boot)\n\nNote that you may encounter kernel lockdown error if you install bpftrace\nvia `snap` incorrectly. Please refer to [Ubuntu](#ubuntu-packages) for more\ndetails regrading how to use `snap` to install `bpftrace`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.09375,
          "content": "# bpftrace\n\n[![Build Status](https://github.com/bpftrace/bpftrace/workflows/CI/badge.svg?branch=master)](https://github.com/bpftrace/bpftrace/actions?query=workflow%3ACI+branch%3Amaster)\n[![IRC#bpftrace](https://img.shields.io/badge/IRC-bpftrace-blue.svg)](https://webchat.oftc.net/?channels=bpftrace)\n[![CodeQL](https://github.com/bpftrace/bpftrace/actions/workflows/codeql.yml/badge.svg)](https://github.com/bpftrace/bpftrace/actions/workflows/codeql.yml)\n\nbpftrace is a high-level tracing language for Linux. bpftrace uses LLVM as a backend to compile scripts to [eBPF](https://ebpf.io/what-is-ebpf/)-bytecode and makes use of [libbpf](https://github.com/libbpf/libbpf) and [bcc](https://github.com/iovisor/bcc) for interacting with the Linux BPF subsystem, as well as existing Linux tracing capabilities: kernel dynamic tracing (kprobes), user-level dynamic tracing (uprobes), tracepoints, etc. The bpftrace language is inspired by awk, C, and predecessor tracers such as DTrace and SystemTap. bpftrace was created by [Alastair Robertson](https://github.com/ajor).\n\n- [How to Install and Build](INSTALL.md)\n- [Manual / Reference Guide](man/adoc/bpftrace.adoc)\n- [Tutorial](docs/tutorial_one_liners.md)\n- [Example One-Liners](#example-one-liners)\n- [Videos](#videos)\n- [Tools](tools/README.md)\n- [Contribute](#contribute)\n- [Development](#development)\n- [Support](#support)\n- [Migration guide](docs/migration_guide.md)\n- [Probe types](#probe-types)\n- [Plugins](#plugins)\n- [License](#license)\n\n## Example One-Liners\n\nThe following one-liners demonstrate different capabilities:\n\n```\n# Files opened by thread name\nbpftrace -e 'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\\n\", comm, str(args->filename)); }'\n\n# Syscall count by thread name\nbpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by thread name:\nbpftrace -e 'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by thread name:\nbpftrace -e 'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\nbpftrace -e 'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by PID and thread name\nbpftrace -e 'tracepoint:block:block_rq_issue { printf(\"%d %s %d\\n\", pid, comm, args->bytes); }'\n\n# Count page faults by thread name\nbpftrace -e 'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by thread name and PID (uses PMCs):\nbpftrace -e 'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz for PID 189:\nbpftrace -e 'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened in the root cgroup-v2\nbpftrace -e 'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\\n\", str(args->filename)); }'\n```\n\nMore powerful scripts can easily be constructed. See [Tools](tools/README.md) for examples.\n\n## Videos\n\nNote: some of the content in these videos may be out of date, the current [reference guide](man/adoc/bpftrace.adoc) is the source of truth.\n\n- [Making bpftrace more powerful - 2023](https://www.youtube.com/watch?v=19RZ7b6AZJ0)\n- [Bpftrace Recipes: 5 Real Problems Solved - 2023](https://www.youtube.com/watch?v=wMtArNjRYXU)\n- [Linux tracing made simpler with bpftrace - 2022](https://www.youtube.com/watch?v=gSxntAO2Iys)\n- [Ahead-of-time compiled bpftrace programs - 2021](https://www.youtube.com/watch?v=C2n2i__YCcI)\n- [Getting Started with BPF observability - 2021](https://www.youtube.com/watch?v=bGAVrtb_tFs)\n- [bpftrace internals - 2020](https://www.youtube.com/watch?v=nDY4iC_ekQY&t=1477s)\n- [Using bpftrace with Performance Co-Pilot & Grafana - 2020](https://www.youtube.com/watch?v=ZiGTbItyJyg)\n- [An introduction to bpftrace tracing language - 2020](https://www.youtube.com/watch?v=93aHXYqZmU0)\n\n## Contribute\n\nContributions are welcome! Please see the [development section](#development) below for more information. For new bpftrace tools, please add them to the new [user-tools repository](https://github.com/bpftrace/user-tools/blob/master/CONTRIBUTING.md). The tools that exist in this repository are a small collection curated by the bpftrace maintainers.\n\n* Bug reports and feature requests: [Issue Tracker](https://github.com/bpftrace/bpftrace/issues)\n\n* Development IRC: #bpftrace at irc.oftc.net\n\n* [Good first issues](https://github.com/bpftrace/bpftrace/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n\n## Development\n\n* [Coding Guidelines](docs/coding_guidelines.md)\n* [Development Guide](docs/developers.md)\n* [Development Roadmap](https://docs.google.com/document/d/17729Rlyo1xzlJObzHpFLDzeCVgvwRh0ktAmMEJLK-EU/edit)\n* [Fuzzing](docs/fuzzing.md)\n* [Nix](docs/nix.md)\n* [Release Process](docs/release_process.md)\n* [Tests](tests/README.md)\n\n## Support\n\nFor additional help / discussion, please use our [discussions](https://github.com/bpftrace/bpftrace/discussions) page.\n\nWe are also holding regular [office hours](https://docs.google.com/document/d/1nt010RfL4s4gydhCPSJ-Z5mnFMFuD4NrcpVmUcyvu2E/edit?usp=sharing) open to the public.\n\n## Probe types\n<center><a href=\"images/bpftrace_probes_2018.png\"><img src=\"images/bpftrace_probes_2018.png\" border=0 width=700></a></center>\n\nSee the [Manual](man/adoc/bpftrace.adoc) for more details.\n\n## Plugins\n\nbpftrace has several plugins/definitions, integrating the syntax into your editor.\n<!--- Feel free to add your own plugins below, in alphabetical order -->\n\n- [Emacs](https://gitlab.com/jgkamat/bpftrace-mode)\n- [Vim](https://github.com/mmarchini/bpftrace.vim)\n- [VS Code](https://github.com/bolinfest/bpftrace-vscode)\n\n## License\n\nCopyright 2019 Alastair Robertson\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 3.5859375,
          "content": "{\n  \"nodes\": {\n    \"appimage-runtime\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1733518164,\n        \"narHash\": \"sha256-htRRxzQuzzYrIFRskLyVFR3brkJUVhuVLhjd/P5JoQw=\",\n        \"owner\": \"danobi\",\n        \"repo\": \"appimage-runtime\",\n        \"rev\": \"23f655a9313a6b962e072f12534982b925ecb8f7\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"danobi\",\n        \"repo\": \"appimage-runtime\",\n        \"rev\": \"23f655a9313a6b962e072f12534982b925ecb8f7\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-compat\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1650374568,\n        \"narHash\": \"sha256-Z+s0J8/r907g149rllvwhb4pKi8Wam5ij0st8PwAh+E=\",\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"rev\": \"b4a34015c698c7793d592d66adbab377907a2be8\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"edolstra\",\n        \"repo\": \"flake-compat\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1731533236,\n        \"narHash\": \"sha256-l0KFg5HjrsfsO/JpG+r7fRrqm12kzFHyUHqHCVpMMbI=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"11707dc2f618dd54ca8739b309ec4fc024de578b\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nix-appimage\": {\n      \"inputs\": {\n        \"appimage-runtime\": \"appimage-runtime\",\n        \"flake-compat\": \"flake-compat\",\n        \"flake-utils\": [\n          \"flake-utils\"\n        ],\n        \"nixpkgs\": [\n          \"nixpkgs\"\n        ],\n        \"squashfuse\": \"squashfuse\"\n      },\n      \"locked\": {\n        \"lastModified\": 1733518359,\n        \"narHash\": \"sha256-cAjuMKREglYFnhNp1sps3t5gTiLxQpsYNko7Nj+lbtA=\",\n        \"owner\": \"danobi\",\n        \"repo\": \"nix-appimage\",\n        \"rev\": \"74e44691812b4f220e84fd89895931ff4f904a03\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"danobi\",\n        \"repo\": \"nix-appimage\",\n        \"rev\": \"74e44691812b4f220e84fd89895931ff4f904a03\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1733511610,\n        \"narHash\": \"sha256-GgkBDWJYObDbowLcbksXtkho4IncyTM6U6irbum6XpA=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"8b27a36b52d79a774bcda17dc1a2e9dad1bdce19\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"release-24.11\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nix-appimage\": \"nix-appimage\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"squashfuse\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1655253282,\n        \"narHash\": \"sha256-RIhDXzpmrYUOwj5OYzjWKJw0cwE+L3t/9pIkg/hFXA0=\",\n        \"owner\": \"vasi\",\n        \"repo\": \"squashfuse\",\n        \"rev\": \"d1d7ddafb765098b34239eacaf2f9abee1fbc27c\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"vasi\",\n        \"repo\": \"squashfuse\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 8.3623046875,
          "content": "{\n  description = \"High-level tracing language for Linux\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/release-24.11\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n    nix-appimage = {\n      # We're maintaining a fork b/c upstream is missing support for 24.11\n      # and has also dropped the following feature we depend on:\n      #   https://github.com/ralismark/nix-appimage/pull/9\n      #\n      # Also b/c appimage-runtime (which nix-appimage depends on) has a bug\n      # that's being fixed in:\n      #   https://github.com/AppImageCrafters/appimage-runtime/pull/14\n      url = \"github:danobi/nix-appimage/74e44691812b4f220e84fd89895931ff4f904a03\";\n      # Avoid multiple copies of the same dependency\n      inputs.nixpkgs.follows = \"nixpkgs\";\n      inputs.flake-utils.follows = \"flake-utils\";\n    };\n  };\n\n  outputs = { self, nixpkgs, flake-utils, nix-appimage, ... }:\n    # This flake only supports 64-bit linux systems.\n    # Note bpftrace support aarch32 but for simplicity we'll omit it for now.\n    flake-utils.lib.eachSystem [ \"x86_64-linux\" \"aarch64-linux\" ]\n      (system:\n        let\n          # The default LLVM version is the latest supported release\n          defaultLlvmVersion = 19;\n\n          # Overlay to specify build should use the specific libbpf we want\n          libbpfVersion = \"1.5.0\";\n          libbpfOverlay =\n            (self: super: {\n              libbpf = super.libbpf.overrideAttrs (old: {\n                version = libbpfVersion;\n                src = super.fetchFromGitHub {\n                  owner = \"libbpf\";\n                  repo = \"libbpf\";\n                  rev = \"v${libbpfVersion}\";\n                  # If you don't know the hash the first time, set:\n                  # hash = \"\";\n                  # then nix will fail the build with such an error message:\n                  # hash mismatch in fixed-output derivation '/nix/store/m1ga09c0z1a6n7rj8ky3s31dpgalsn0n-source':\n                  # specified: sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\n                  # got:    sha256-173gxk0ymiw94glyjzjizp8bv8g72gwkjhacigd1an09jshdrjb4\n                  sha256 = \"sha256-+L/rbp0a3p4PHq1yTJmuMcNj0gT5sqAPeaNRo3Sh6U8=\";\n                };\n              });\n            });\n\n          # Overlay to specify build should use the specific bcc we want\n          bccVersion = \"0.30.0\";\n          bccOverlay =\n            (self: super: {\n              bcc = super.bcc.overridePythonAttrs (old: {\n                version = bccVersion;\n                src = super.fetchFromGitHub {\n                  owner = \"iovisor\";\n                  repo = \"bcc\";\n                  rev = \"v${bccVersion}\";\n                  sha256 = \"sha256-ngGLGfLv2prnjhgaRPf8ea3oyy4129zGodR0Yz1QtCw=\";\n                };\n                # Seems like these extra tools are needed to build bcc\n                nativeBuildInputs = old.nativeBuildInputs ++ [ pkgs.python310Packages.setuptools pkgs.zip ];\n              });\n            });\n\n          # We need to use two overlays so that bcc inherits the our pinned libbpf\n          overlayedPkgs = import nixpkgs { inherit system; overlays = [ libbpfOverlay bccOverlay ]; };\n\n          pkgs = import nixpkgs { inherit system; };\n\n          # Define lambda that returns a derivation for bpftrace given llvm version as input\n          mkBpftrace =\n            llvmVersion:\n              with pkgs;\n              pkgs.stdenv.mkDerivation rec {\n                name = \"bpftrace\";\n\n                src = self;\n\n                nativeBuildInputs = [ cmake ninja bison flex gcc clang ];\n\n                buildInputs = [\n                  asciidoctor\n                  cereal\n                  elfutils\n                  gtest\n                  libbfd\n                  libelf\n                  libffi\n                  libopcodes\n                  libpcap\n                  libsystemtap\n                  pkgs.\"llvmPackages_${toString llvmVersion}\".libclang\n                  pkgs.\"llvmPackages_${toString llvmVersion}\".lldb\n                  pkgs.\"llvmPackages_${toString llvmVersion}\".llvm\n                  overlayedPkgs.bcc\n                  overlayedPkgs.libbpf\n                  pahole\n                  xxd\n                  zlib\n                ];\n\n                # Release flags\n                cmakeFlags = [\n                  \"-DCMAKE_BUILD_TYPE=Release\"\n                ];\n\n                # Technically not needed cuz package name matches mainProgram, but\n                # explicit is fine too.\n                meta.mainProgram = \"bpftrace\";\n              };\n\n          # Define lambda that returns a devShell derivation with extra test-required packages\n          # given the bpftrace package derivation as input\n          mkBpftraceDevShell =\n            pkg:\n              with pkgs;\n              pkgs.mkShell {\n                buildInputs = [\n                  binutils\n                  coreutils\n                  # Needed for the nix-aware \"wrapped\" clang-tidy\n                  clang-tools\n                  findutils\n                  gawk\n                  git\n                  gnugrep\n                  iproute2\n                  kmod\n                  # For git-clang-format\n                  libclang.python\n                  nftables\n                  procps\n                  python3\n                  python3Packages.looseversion\n                  strace\n                  unixtools.ping\n                  util-linux\n                ] ++ pkg.nativeBuildInputs ++ pkg.buildInputs;\n\n                # Some hardening features (like _FORTIFY_SOURCE) requires building with\n                # optimizations on. That's fine for actual flake build, but for most of the\n                # dev builds we do in nix shell, it just causes warning spew.\n                hardeningDisable = [ \"all\" ];\n              };\n        in\n        {\n          # Set formatter for `nix fmt` command\n          formatter = pkgs.nixpkgs-fmt;\n\n          # Define package set\n          packages = rec {\n            default = self.packages.${system}.\"bpftrace-llvm${toString defaultLlvmVersion}\";\n\n            # Support matrix of llvm versions\n            bpftrace-llvm19 = mkBpftrace 19;\n            bpftrace-llvm18 = mkBpftrace 18;\n            bpftrace-llvm17 = mkBpftrace 17;\n            bpftrace-llvm16 = mkBpftrace 16;\n            bpftrace-llvm15 = mkBpftrace 15;\n            bpftrace-llvm14 = mkBpftrace 14;\n\n            # Self-contained static binary with all dependencies\n            appimage = nix-appimage.mkappimage.${system} {\n              drv = default;\n              entrypoint = pkgs.lib.getExe default;\n              name = default.name;\n\n              # Exclude the following groups to reduce appimage size:\n              #\n              # *.a: Static archives are not necessary at runtime\n              # *.h: Header files are not necessary at runtime (some ARM headers for clang are large)\n              # *.pyc, *.whl: bpftrace does not use python at runtime (with exception\n              #               of stdlib for unfortunate lldb python bindings)\n              # libLLVM-11.so: Appimage uses the latest llvm we support, so not llvm11\n              #\n              # The basic process to identify large and useless files is to:\n              #\n              # ```\n              # $ nix build .#appimage\n              # $ ./result --appimage-mount\n              # $ cd /tmp/.mount_resultXXXX    # in new terminal\n              # $ fd -S +1m -l\n              # ```\n              exclude = [\n                \"... *.a\"\n                \"... *.h\"\n                \"... *.pyc\"\n                \"... *.whl\"\n                \"... libLLVM-11.so\"\n              ];\n            };\n          };\n\n          # Define apps that can be run with `nix run`\n          apps.default = {\n            type = \"app\";\n            program = \"${self.packages.${system}.default}/bin/bpftrace\";\n          };\n\n          devShells = rec {\n            default = self.devShells.${system}.\"bpftrace-llvm${toString defaultLlvmVersion}\";\n\n            bpftrace-llvm19 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm19;\n            bpftrace-llvm18 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm18;\n            bpftrace-llvm17 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm17;\n            bpftrace-llvm16 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm16;\n            bpftrace-llvm15 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm15;\n            bpftrace-llvm14 = mkBpftraceDevShell self.packages.${system}.bpftrace-llvm14;\n          };\n        });\n}\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}