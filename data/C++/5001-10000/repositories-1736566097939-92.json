{
  "metadata": {
    "timestamp": 1736566097939,
    "page": 92,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "project-chip/connectedhomeip",
      "stars": 7653,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".actrc",
          "type": "blob",
          "size": 0.9296875,
          "content": "# This file contains settings for local github action runner act:\n# https://github.com/nektos/act\n#\n# It is recommended to run specific jobs that you need, all jobs except those\n# running on should darwin work.\n# e.g. act -j build_linux\n#\n# It is recommended to set up a separate bridge network\n# and possibly define it in  ~/.actrc like so:\n# --network=bridge\n# https://docs.docker.com/network/drivers/bridge/\n\n# Remove containers after finishing a job, comment out for debugging\n--rm\n\n# Reuse the checkout from host, otherwise act will do docker cp that makes\n# running jobs a lot longer even on SSD. Clean up your .environment before\n# running it.\n--bind\n\n# Easier to have 1:1 match between triggering jobs and reading logs when they\n# use the same name\n--log-prefix-job-id\n\n# Default runner image does not include enough.\n# https://github.com/nektos/act#default-runners-are-intentionally-incomplete\n-P ubuntu-latest=catthehacker/ubuntu:full-latest\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.416015625,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands:   false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  BeforeCatch:     false\n  BeforeElse:      true\n  IndentBraces:    false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: AfterColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     132\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeCategories:\n  - Regex:           '^<Weave/Core.*'\n    Priority:        0\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Middle\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\nInsertNewlineAtEOF: true\n---\nLanguage: ObjC\nBasedOnStyle: WebKit\nStandard: c++17\nPointerAlignment: Middle\nSpaceAfterCStyleCast: true\nSpaceInEmptyBlock: false\nObjCBreakBeforeNestedBlockParam: false\n---\nLanguage: JavaScript\nBasedOnStyle: WebKit\nAlignConsecutiveAssignments: true\nAllowShortFunctionsOnASingleLine: None\nIndentWidth:     2\nColumnLimit:     132\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.0576171875,
          "content": "---\nChecks: >\n  bugprone-*,\n  modernize-redundant-void-arg,\n  modernize-use-bool-literals,\n  modernize-use-nullptr,\n  performance-for-range-copy,\n  readability-const-return-type,\n  readability-else-after-return,\n  readability-redundant-control-flow,\n  readability-redundant-string-cstr,\n  readability-redundant-string-init,\n  -bugprone-assignment-in-if-condition,\n  -bugprone-branch-clone,\n  -bugprone-casting-through-void, #TODO remove this after fixing issues in source code, issue 34008\n  -bugprone-copy-constructor-init,\n  -bugprone-easily-swappable-parameters,\n  -bugprone-forward-declaration-namespace,\n  -bugprone-forwarding-reference-overload,\n  -bugprone-implicit-widening-of-multiplication-result,\n  -bugprone-inc-dec-in-conditions,\n  -bugprone-macro-parentheses,\n  -bugprone-misplaced-widening-cast,\n  -bugprone-multi-level-implicit-pointer-conversion,\n  -bugprone-narrowing-conversions,\n  -bugprone-not-null-terminated-result,\n  -bugprone-pointer-arithmetic-on-polymorphic-object,\n  -bugprone-reserved-identifier,\n  -bugprone-signed-char-misuse,\n  -bugprone-suspicious-include,\n  -bugprone-switch-missing-default-case,\n  -bugprone-undelegated-constructor,\n  -bugprone-unused-return-value,\n  -clang-analyzer-core.CallAndMessage,\n  -clang-analyzer-core.NonNullParamChecker,\n  -clang-analyzer-core.NullDereference,\n  -clang-analyzer-cplusplus.Move,\n  -clang-analyzer-deadcode.DeadStores,\n  -clang-analyzer-nullability.NullablePassedToNonnull,\n  -clang-analyzer-optin.core.EnumCastOutOfRange,\n  -clang-analyzer-optin.cplusplus.UninitializedObject,\n  -clang-analyzer-optin.cplusplus.VirtualCall,\n  -clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,\n  -clang-analyzer-optin.performance,\n  -clang-analyzer-optin.performance.Padding,\n  -clang-analyzer-security.insecureAPI.rand,\n  -clang-analyzer-security.insecureAPI.strcpy,\n  -clang-analyzer-unix.Malloc,\n  -clang-diagnostic-implicit-int-conversion,\n  -clang-diagnostic-missing-template-arg-list-after-template-kw\nWarningsAsErrors: '*'\nHeaderFilterRegex: '(src|examples|zzz_generated|credentials).*(?<!third_party.*repo)'\n"
        },
        {
          "name": ".default-version.min",
          "type": "blob",
          "size": 0.0185546875,
          "content": "CHIP_VERSION=0.1.0\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 1.017578125,
          "content": ";;\n;;    Copyright (c) 2020 Project CHIP Authors\n;;    All rights reserved.\n;;\n;;    Licensed under the Apache License, Version 2.0 (the \"License\");\n;;    you may not use this file except in compliance with the License.\n;;    You may obtain a copy of the License at\n;;\n;;        http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;    Unless required by applicable law or agreed to in writing, software\n;;    distributed under the License is distributed on an \"AS IS\" BASIS,\n;;    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;    See the License for the specific language governing permissions and\n;;    limitations under the License.\n;;\n\n;; Per-directory local variables for GNU Emacs\n;;  https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html\n;;\n((nil . ((indent-tabs-mode . nil)\n         (show-trailing-whitespace . t)))\n (shell-script-mode . ((sh-basic-offset . 4)))\n (c-mode . ((c-basic-offset . 4)))\n (c++-mode . ((c-basic-offset . 4)))\n (makefile-mode . ((indent-tabs-mode t)))\n )\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.080078125,
          "content": "trim_trailing_whitespace = true\ninsert_final_newline = false\nindent_style = space\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4765625,
          "content": "# Mark all files in generated folders as auto-generated to hide them in diffs\n**/gen/** linguist-generated\n# Same for files in zap-generated folders\n**/zap-generated/** linguist-generated\n# And some specific generated files\nsrc/controller/python/chip/clusters/CHIPClusters.py linguist-generated\nsrc/controller/python/chip/clusters/Objects.py linguist-generated\n# Let bat file use CRLF linebreak\n**/*.bat eol=crlf\n# Mark Matter operational certificate/key files as binary\n**/*.chip binary\n"
        },
        {
          "name": ".githooks",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5009765625,
          "content": "# VS Code Configs\n.vscode/*\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/settings.json\n!.vscode/extensions.json\n\n# Platforms\n.DS_Store\n\n# Build System\nout/\n/examples/virtual-device-app/android/App/buildSrc/build/\n/src/test_driver/nrfconnect/build/\n/src/darwin/Framework/build/\n/src/python_testing/matter_testing_infrastructure/build/\n\n# Pigweed Environment\n.environment*/\nbuild_overrides/pigweed_environment.gni\n\n# Temporary Directories\n.tmp/\n\n# Xcode, other development environment stuff\n*.pbxuser\n*.mode1v3\n*.mode2v3\n*.perspectivev3\n*.xcuserstate\nproject.xcworkspace/\nxcuserdata/\n*.xcodeproj/*\n*.xcworkspace/*\nTAGS\n\n# Text editors\n.*.sw[a-z]\n\n# Patch files\n*.rej\n*.orig\n\n# C-Lion / IDEA files\n.idea/**\n\n# Python bytecodes\n__pycache__\n*.pyc\n*.egg-info\n\n# Doxygen outputs\ndocs/html\n\n# Python venv\n.venv\n\n# Documentation\ndocs/_build\n\n# VSCode java extensions\n.project\n\n# clangd index files\n.cache\n\n# compilation database for VSCode and other Ides\ncompile_commands.json\n\n# backup files, usually created by the ZAP tool\n*~\n\n# log files\n*.log\nexamples/thermostat/ameba/build\n\n# Downloaded zap without a pigweed root (via zap_download.py)\n.zap\n\n# When building esp-idf application, if any component is fetched using idf-component-manager then they are stored in\n# managed_component directory. Along with that dependencies.lock file is generated.\n# https://github.com/espressif/idf-component-manager#using-with-a-project\nexamples/*/esp32/managed_components\nexamples/*/esp32/dependencies.lock\n\n# jupyter temporary files\n.ipynb_checkpoints\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 12.986328125,
          "content": "[submodule \"nlassert\"]\n\tpath = third_party/nlassert/repo\n\turl = https://github.com/nestlabs/nlassert.git\n\tbranch  = master\n[submodule \"nlio\"]\n\tpath = third_party/nlio/repo\n\turl = https://github.com/nestlabs/nlio.git\n\tbranch  = master\n[submodule \"mbedtls\"]\n\tpath = third_party/mbedtls/repo\n\turl = https://github.com/ARMmbed/mbedtls.git\n\tbranch = mbedtls-2.28\n[submodule \"qrcode\"]\n\tpath = examples/common/QRCode/repo\n\turl = https://github.com/nayuki/QR-Code-generator.git\n\tbranch  = master\n[submodule \"m5stack-tft\"]\n\tpath = examples/common/m5stack-tft/repo\n\turl = https://github.com/jeremyjh/ESP32_TFT_library.git\n\tbranch  = master\n\tplatforms = esp32\n[submodule \"pigweed\"]\n\tpath = third_party/pigweed/repo\n\turl = https://github.com/google/pigweed.git\n\tbranch  = main\n[submodule \"openthread\"]\n\tpath = third_party/openthread/repo\n\turl = https://github.com/openthread/openthread.git\n\tbranch  = main\n[submodule \"ot-br-posix\"]\n\tpath = third_party/ot-br-posix/repo\n\turl = https://github.com/openthread/ot-br-posix.git\n\tbranch  = main\n\tplatforms = linux\n[submodule \"cirque\"]\n\tpath = third_party/cirque/repo\n\turl = https://github.com/openweave/cirque.git\n\tbranch  = master\n\tplatforms = linux\n[submodule \"nanopb\"]\n\tpath = third_party/nanopb/repo\n\turl = https://github.com/nanopb/nanopb.git\n\tbranch  = master\n[submodule \"qpg_sdk\"]\n\tpath = third_party/qpg_sdk/repo\n\turl = https://github.com/Qorvo/QMatter\n\tbranch  = vlatest-libs\n\tplatforms = qpg\n[submodule \"freertos\"]\n\tpath = third_party/freertos/repo\n\turl = https://github.com/FreeRTOS/FreeRTOS-Kernel.git\n\tbranch  = V10.3.1-kernel-only\n\tplatforms = ameba,cc13xx_26xx,bouffalolab,esp32,infineon,qpg,cc32xx\n[submodule \"simw-top-mini\"]\n\tpath = third_party/simw-top-mini/repo\n\turl = https://github.com/NXP/plug-and-trust.git\n\tbranch  = int/CHIPSE_Release\n\tplatforms = nxp\n[submodule \"third_party/openthread/ot-nxp\"]\n\tpath = third_party/openthread/ot-nxp\n\turl = https://github.com/NXP/ot-nxp.git\n\tplatforms = nxp\n[submodule \"third_party/openthread/ot-qorvo\"]\n\tpath = third_party/openthread/ot-qorvo\n\turl = https://github.com/openthread/ot-qorvo.git\n\tplatforms = qpg\n[submodule \"third_party/openthread/ot-efr32\"]\n\tpath = third_party/openthread/ot-efr32\n\turl = https://github.com/SiliconLabs/ot-efr32.git\n\tbranch  = matter_sve\n\tplatforms = silabs,silabs_docker\n[submodule \"ot-stm32\"]\n\tpath = third_party/openthread/ot-stm32\n\turl = https://github.com/openthread/openthread\n\tbranch = eb6377f\n\tplatforms = stm32\n[submodule \"third_party/openthread/ot-ifx\"]\n\tpath = third_party/openthread/ot-ifx\n\turl = https://github.com/Infineon/ot-ifx-release.git\n\tplatforms = infineon\n[submodule \"third_party/mbed-os/repo\"]\n\tpath = third_party/mbed-os/repo\n\turl = https://github.com/ARMmbed/mbed-os.git\n\tbranch = master\n\tplatforms = mbed\n[submodule \"third_party/mbed-os-posix-socket/repo\"]\n\tpath = third_party/mbed-os-posix-socket/repo\n\turl = https://github.com/ARMmbed/mbed-os-posix-socket.git\n\tbranch  = main\n\tplatforms = mbed\n[submodule \"mbed-os-cypress-capsense-button\"]\n\tpath = third_party/mbed-os-cypress-capsense-button/repo\n\turl = https://github.com/ARMmbed/mbed-os-cypress-capsense-button.git\n\tbranch = main\n\tplatforms = mbed\n[submodule \"p6/abstraction-rtos\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/abstraction-rtos\n\turl = https://github.com/Infineon/abstraction-rtos\n\tplatforms = infineon\n[submodule \"p6/btstack\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/btstack\n\turl = https://github.com/Infineon/btstack\n\tplatforms = infineon\n[submodule \"p6/clib-support\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/clib-support\n\turl = https://github.com/Infineon/clib-support\n\tplatforms = infineon\n[submodule \"p6/connectivity-utilities\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/connectivity-utilities\n\turl = https://github.com/Infineon/connectivity-utilities\n\tplatforms = infineon\n[submodule \"p6/core-lib\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/core-lib\n\turl = https://github.com/Infineon/core-lib\n\tplatforms = infineon\n[submodule \"p6/core-make\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/core-make\n\turl = https://github.com/Infineon/core-make\n\tplatforms = infineon\n[submodule \"p6/kv-store\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/kv-store\n\turl = https://github.com/Infineon/kv-store\n\tplatforms = infineon\n[submodule \"p6/mtb-hal-cat1\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/mtb-hal-cat1\n\turl = https://github.com/Infineon/mtb-hal-cat1\n\tplatforms = infineon\n[submodule \"p6/mtb-pdl-cat1\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/mtb-pdl-cat1\n\turl = https://github.com/Infineon/mtb-pdl-cat1\n\tplatforms = infineon\n[submodule \"p6/whd-bsp-integration\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/whd-bsp-integration\n\turl = https://github.com/Infineon/whd-bsp-integration\n\tplatforms = infineon\n[submodule \"p6/wifi-connection-manager\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/wifi-connection-manager\n\turl = https://github.com/Infineon/wifi-connection-manager\n\tplatforms = infineon\n[submodule \"p6/wifi-host-driver\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/wifi-host-driver\n\turl = https://github.com/Infineon/wifi-host-driver\n\tplatforms = infineon\n[submodule \"p6/TARGET_CY8CKIT-062S2-43012\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/TARGET_CY8CKIT-062S2-43012\n\turl = https://github.com/Infineon/TARGET_CY8CKIT-062S2-43012\n\tplatforms = infineon\n[submodule \"p6/freertos\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/freertos\n\turl = https://github.com/Infineon/freertos\n\tplatforms = infineon\n[submodule \"p6/retarget-io\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/retarget-io\n\turl = https://github.com/Infineon/retarget-io\n\tplatforms = infineon\n[submodule \"p6/mbedtls\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/mbedtls\n\turl = https://github.com/ARMmbed/mbedtls\n\tplatforms = infineon\n[submodule \"p6/secure-sockets\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/secure-sockets\n\turl = https://github.com/Infineon/secure-sockets\n\tplatforms = infineon\n[submodule \"p6/recipe-make-cat1a\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/recipe-make-cat1a\n\turl = https://github.com/Infineon/recipe-make-cat1a\n\tplatforms = infineon\n[submodule \"p6/lwip\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/lwip\n\turl = https://github.com/lwip-tcpip/lwip.git\n\tplatforms = infineon\n[submodule \"third_party/jsoncpp/repo\"]\n\tpath = third_party/jsoncpp/repo\n\turl = https://github.com/open-source-parsers/jsoncpp.git\n[submodule \"third_party/mbed-mcu-boot/repo\"]\n\tpath = third_party/mbed-mcu-boot/repo\n\turl = https://github.com/ATmobica/mcuboot.git\n\tplatforms = mbed\n[submodule \"p6/serial-flash\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/serial-flash\n\turl = https://github.com/Infineon/serial-flash\n\tplatforms = infineon\n[submodule \"infineon/matter-wpan-sdk\"]\n\tpath = third_party/infineon/repos/matter-wpan-sdk\n\turl = https://github.com/Infineon/matter-wpan-sdk.git\n\tbranch = main\n\tplatforms = infineon\n\trecursive = true\n[submodule \"ti_simplelink_sdk\"]\n\tpath = third_party/ti_simplelink_sdk/repo_cc13xx_cc26xx\n\turl = https://github.com/TexasInstruments/cc13xx_cc26xx_sdk.git\n\tbranch = main\n\tplatforms = cc13xx_26xx\n[submodule \"third_party/ti_simplelink_sdk/repo_cc32xx\"]\n\tpath = third_party/ti_simplelink_sdk/repo_cc32xx\n\turl = https://github.com/TexasInstruments/cc32xx_open_sdk.git\n\tbranch = main\n\tplatforms = cc32xx\n[submodule \"third_party/openthread/ot-ti\"]\n\tpath = third_party/openthread/ot-ti\n\turl = https://github.com/TexasInstruments/ot-ti.git\n\tbranch = main\n\tplatforms = cc13xx_26xx\n[submodule \"third_party/nxp/mw320_sdk/repo\"]\n\tpath = third_party/nxp/mw320_sdk/repo\n\turl = https://github.com/nxptest/mw320_sdk\n\tplatforms = mw320\n[submodule \"third_party/silabs/matter_support\"]\n\tpath = third_party/silabs/matter_support\n\turl = https://github.com/SiliconLabs/sdk_support.git\n\tbranch = main\n\tplatforms = silabs,silabs_docker\n[submodule \"third_party/silabs/simplicity_sdk\"]\n\tpath = third_party/silabs/simplicity_sdk\n\turl = https://github.com/SiliconLabs/simplicity_sdk.git\n\tbranch = v2024.6.2\n\tplatforms = silabs\n[submodule \"third_party/silabs/wiseconnect-wifi-bt-sdk\"]\n\tpath = third_party/silabs/wiseconnect-wifi-bt-sdk\n\turl = https://github.com/SiliconLabs/wiseconnect-wifi-bt-sdk.git\n\tbranch = 2.10.3\n\tplatforms = silabs\n[submodule \"third_party/silabs/wifi_sdk\"]\n\tpath = third_party/silabs/wifi_sdk\n\turl = https://github.com/SiliconLabs/wiseconnect.git\n\tbranch = v3.3.3\n\tplatforms = silabs\n[submodule \"editline\"]\n\tpath = third_party/editline/repo\n\turl = https://github.com/troglobit/editline.git\n[submodule \"third_party/boringssl/repo/src\"]\n\tpath = third_party/boringssl/repo/src\n\turl = https://github.com/google/boringssl.git\n\tbranch = master\n[submodule \"third_party/mt793x_sdk/filogic\"]\n\tpath = third_party/mt793x_sdk/filogic\n\turl = https://github.com/MediaTek-Labs/genio-matter-bsp.git\n\tbranch = main\n\tplatforms = genio\n[submodule \"third_party/mt793x_sdk/mDNSResponder\"]\n\tpath = third_party/mt793x_sdk/mDNSResponder\n\turl = https://github.com/matter-mtk/genio-matter-mdnsresponder.git\n\tbranch = main\n\tplatforms = genio\n[submodule \"third_party/mt793x_sdk/lwip\"]\n\tpath = third_party/mt793x_sdk/lwip\n\turl = https://github.com/matter-mtk/genio-matter-lwip.git\n\tbranch = main\n\tplatforms = genio\n[submodule \"open-iot-sdk\"]\n\tpath = third_party/open-iot-sdk/sdk\n\turl = https://git.gitlab.arm.com/iot/open-iot-sdk/sdk.git\n\tbranch = main\n\tplatforms = openiotsdk\n[submodule \"bouffalolab_sdk\"]\n\tpath = third_party/bouffalolab/repo\n\turl = https://github.com/bouffalolab/bl_iot_sdk_tiny.git\n\tbranch = main\n\tplatforms = bouffalolab\n[submodule \"third_party/libwebsockets/repo\"]\n\tpath = third_party/libwebsockets/repo\n\turl = https://github.com/warmcat/libwebsockets\n\tplatforms = linux,darwin,tizen\n[submodule \"third_party/imgui/repo\"]\n\tpath = third_party/imgui/repo\n\turl = https://github.com/ocornut/imgui\n\tplatforms = linux\n[submodule \"third_party/asr/asr582x/asr_sdk\"]\n\tpath = third_party/asr/asr582x/asr_sdk\n\turl = https://github.com/asriot/ASR582X_Freertos.git\n\tbranch = matter\n\tplatforms = asr\n[submodule \"third_party/asr/asr595x/asr_sdk\"]\n\tpath = third_party/asr/asr595x/asr_sdk\n\turl = https://github.com/asriot/ASR595X_Freertos.git\n\tbranch = matter\n\tplatforms = asr\n[submodule \"perfetto\"]\n\tpath = third_party/perfetto/repo\n\turl = https://github.com/google/perfetto.git\n\tbranch = master\n\tplatforms = linux,android,darwin\n[submodule \"third_party/asr/components\"]\n\tpath = third_party/asr/components\n\turl = https://github.com/asriot/asriot_components.git\n\tbranch = matter\n\tplatforms = asr\n[submodule \"third_party/asr/asr550x/asr_sdk\"]\n\tpath = third_party/asr/asr550x/asr_sdk\n\turl = https://github.com/asriot/ASR550X_Freertos.git\n\tbranch = matter\n\tplatforms = asr\n[submodule \"third_party/st/STM32CubeWB\"]\n\tpath = third_party/st/STM32CubeWB\n\turl = https://github.com/STMicroelectronics/STM32CubeWB.git\n\tbranch = v1.18.0\n\tplatforms = stm32\n[submodule \"third_party/infineon/trustm/optiga-trust-m\"]\n\tpath = third_party/infineon/trustm/optiga-trust-m\n\turl = https://github.com/Infineon/optiga-trust-m.git\n\tbranch = matter_support\n\tplatforms = infineon\n[submodule \"third_party/nxp/nxp_matter_support\"]\n\tpath = third_party/nxp/nxp_matter_support\n\turl = https://github.com/NXP/nxp_matter_support.git\n\tbranch = master\n\tplatforms = nxp\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/btstack-integration\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/btstack-integration\n\turl = https://github.com/Infineon/btstack-integration.git\n\tplatforms = infineon\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/cat1cm0p\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/cat1cm0p\n\turl = https://github.com/Infineon/cat1cm0p.git\n\tplatforms = infineon\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/cmsis\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/cmsis\n\turl = https://github.com/Infineon/cmsis.git\n\tplatforms = infineon\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/ota-bootloader-abstraction\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/ota-bootloader-abstraction\n\turl = https://github.com/Infineon/ota-bootloader-abstraction.git\n\tplatforms = infineon\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/ota-update\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/ota-update\n\turl = https://github.com/Infineon/ota-update.git\n\tplatforms = infineon\n[submodule \"third_party/infineon/psoc6/psoc6_sdk/libs/lwip-network-interface-integration\"]\n\tpath = third_party/infineon/psoc6/psoc6_sdk/libs/lwip-network-interface-integration\n\turl = https://github.com/Infineon/lwip-network-interface-integration.git\n\tplatforms = infineon\n[submodule \"third_party/lwip/repo\"]\n\tpath = third_party/lwip/repo\n\turl = https://github.com/lwip-tcpip/lwip.git\n\texcluded-platforms = darwin\n[submodule \"third_party/abseil-cpp/src\"]\n\tpath = third_party/abseil-cpp/src\n\turl = https://github.com/abseil/abseil-cpp.git\n\tplatforms = linux,darwin\n[submodule \"third_party/fuzztest\"]\n\tpath = third_party/fuzztest\n\turl = https://github.com/google/fuzztest.git\n\tplatforms = linux,darwin\n[submodule \"third_party/googletest\"]\n\tpath = third_party/googletest\n\turl = https://github.com/google/googletest\n\tplatforms = linux,android,darwin,tizen\n[submodule \"third_party/re2/src\"]\n\tpath = third_party/re2/src\n\turl = https://github.com/google/re2.git\n\tplatforms = linux,darwin\n"
        },
        {
          "name": ".gn",
          "type": "blob",
          "size": 1.537109375,
          "content": "# Copyright (c) 2020 Project CHIP Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport(\"//build_overrides/build.gni\")\nimport(\"//build_overrides/pigweed.gni\")\n\n# The location of the build configuration file.\nbuildconfig = \"${build_root}/config/BUILDCONFIG.gn\"\n\n# CHIP uses angle bracket includes.\ncheck_system_includes = true\n\nscript_executable = \"python3\"\n\ndefault_args = {\n  pw_unit_test_AUTOMATIC_RUNNER = \"$dir_pigweed/targets/host/run_test\"\n  pw_unit_test_CONFIG = \"//config/pw_unit_test:define_overrides\"\n\n  pw_build_PIP_CONSTRAINTS = [ \"//scripts/setup/constraints.txt\" ]\n  pw_build_PIP_REQUIREMENTS = [ \"//scripts/setup/requirements.build.txt\" ]\n\n  # GN target to use for the default Python build venv.\n  pw_build_PYTHON_BUILD_VENV = \"//:matter_build_venv\"\n\n  # Required for pw_unit_test\n  pw_sys_io_BACKEND = \"$dir_pw_sys_io_stdio\"\n  pw_assert_BACKEND = \"//src/pw_backends/assert\"\n  pw_log_BACKEND = \"//src/pw_backends/log\"\n\n  # TODO: Make sure only unit tests link against this\n  pw_build_LINK_DEPS = [\n    \"$dir_pw_assert:impl\",\n    \"$dir_pw_log:impl\",\n  ]\n}\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.0283203125,
          "content": "[settings]\nline_length = 132\n"
        },
        {
          "name": ".mergify.yml",
          "type": "blob",
          "size": 0.7451171875,
          "content": "pull_request_rules:\n  - name: Label conflicting pull requests\n    description: Add a label to a pull request with conflict to spot it easily\n    conditions:\n      - conflict\n      - '-closed'\n    actions:\n      label:\n        toggle:\n          - conflict\n  - name: Automatic merge on PullApprove\n    conditions:\n      - or:\n          - check-success=pullapprove\n          - label=\"fast track\"\n      - '#approved-reviews-by>=1'\n      - '#review-threads-unresolved=0'\n      - '-draft'\n      - label!=docker\n      - '#check-failure=0'\n      - '#check-pending=0'\n      - check-success~=Build\n      - or:\n          - check-success=pullapprove\n          - check-skipped=pullapprove\n          - check-neutral=pullapprove\n    actions:\n      merge:\n        method: squash\n"
        },
        {
          "name": ".prettierrc.json",
          "type": "blob",
          "size": 0.2783203125,
          "content": "{\n    \"$schema\": \"http://json.schemastore.org/prettierrc\",\n    \"printWidth\": 80,\n    \"tabWidth\": 4,\n    \"useTabs\": false,\n    \"semi\": true,\n    \"trailingComma\": \"all\",\n    \"bracketSpacing\": true,\n    \"jsxBracketSameLine\": false,\n    \"arrowParens\": \"avoid\",\n    \"proseWrap\": \"always\"\n}\n"
        },
        {
          "name": ".pullapprove.yml",
          "type": "blob",
          "size": 7.1474609375,
          "content": "version: 3\n\n# https://developer.github.com/v3/previews/#draft-pull-requests\ngithub_api_version: \"shadow-cat-preview\"\n\n############################################################\n#  Overrides\n############################################################\n\noverrides:\n  - if: \"'hotfix' in labels\"\n    status: success\n    explanation: \"Hotfix label added, bypassing reviews\"\n\n  ############################################################\n  #  Draft PRs\n  ############################################################\n  - if: \"draft\"\n    status: pending\n    explanation: \"PR is draft, pending review\"\n\n  ############################################################\n  #  License Checks\n  ############################################################\n  - if: \"'*license/cla*' not in statuses.successful\"\n    status: pending\n    explanation: \"CLA must be agreed to by all contributors\"\n\n  ############################################################\n  #  Conditions to Skip Review\n  ############################################################\n  - if: \"base.ref != 'master'\"\n    status: success\n    explanation: \"Review not required unless merging to master\"\n\n  ############################################################\n  #  Require Issues\n  ############################################################\n  # disabling until we have PRs up to date\n  #     - if: \"'*issue*' not in statuses.successful\"\n  #       status: failure\n  #       explanation: \"An issue is required for all PRs\"\n\n  ############################################################\n  #  Fast tracking\n  ############################################################\n  - if: \"'fast track' in labels\"\n    status: success\n    explanation: \"PR has been fast tracked, bypassing reviews\"\n\n############################################################\n#  Notifications\n############################################################\n\nnotifications:\n  ############################################################\n  #  New contributors\n  ############################################################\n  - when: pull_request.opened\n    if: \"author_association == 'FIRST_TIME_CONTRIBUTOR'\"\n    comment: |\n      Hey @{{ author }}, thanks for the PR! The review will start once\n      the tests and CI checks have passed. If they don't, please review\n      the logs and try to fix the issues (ask for help if you can't\n      figure it out). A reviewer will be assigned once the tests are\n      passing and they'll walk you through getting the PR finished\n      and merged.\n\ngroups:\n  ############################################################\n  #  Shared Reviewer Groups\n  ############################################################\n  shared-reviewers-amazon:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-amazon]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-apple:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-apple]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-bosch:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-bosch]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-comcast:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-comcast]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-dyson:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-dyson]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-espressif:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-espressif]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-google:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-google]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-grundfos:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-grundfos]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-irobot:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-irobot]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-lg:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-lg]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-logitech:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-logitech]\n    reviews:\n      request: 0 # Requested to be only on demand\n  shared-reviewers-nordic:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-nordic]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-nxp:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-nxp]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-samsung:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-samsung]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-eve:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-eve]\n    reviews:\n      request: 0 # Do not auto-add\n  # shared-reviewers-signify disabled for now, because the reviewers-signify\n  # team is empty and pullapprove seems to mis-handle that badly and treats\n  # _all_ reviewers as being in this group.\n  #\n  # See https://github.com/dropseed/pullapprove/issues/71\n  #\n  # shared-reviewers-signify:\n  #     type: optional\n  #     conditions:\n  #         - files.include('*')\n  #     reviewers:\n  #         teams: [reviewers-signify]\n  #     reviews:\n  #         request: 0 # Do not auto-add\n  shared-reviewers-silabs:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-silabs]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-somfy:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-somfy]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-tcl:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-tcl]\n    reviews:\n      request: 0 # Do not auto-add\n  shared-reviewers-qorvo:\n    type: optional\n    conditions:\n      - files.include('*')\n    reviewers:\n      teams: [reviewers-qorvo]\n    reviews:\n      request: 0 # Do not auto-add\n\n  ############################################################\n  #  Base Required Reviewers\n  ############################################################\n  required-reviewers:\n    description: >\n      [Required\n      Reviewers](https://github.com/project-chip/connectedhomeip/blob/master/CONTRIBUTING.md#review-requirements)\n      This is the main group of required reviews for general pull\n      requests.\n    type: required\n    requirements:\n      - len(groups.approved.include('shared-reviewers-*')) >= 2\n    reviews:\n      required: 0\n    labels:\n      approved: \"review - approved\"\n      pending: \"review - pending\"\n      rejected: \"review - changed requested\"\n"
        },
        {
          "name": ".restyled.yaml",
          "type": "blob",
          "size": 7.8330078125,
          "content": "#\n#    Copyright (c) 2020 Project CHIP Authors\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#\n\n# Do anything at all\nenabled: true\n\n# Push the style fixes directly to the original PR\nauto: false\n\n# Open Restyle PRs?\npull_requests: true\n\n# Add labels to any created Restyle PRs\nlabels:\n    - restyled\n\n# Labels to ignore\nignore_labels:\n    - restyled-ignore\n\n# Leave comments on the original PR linking to the Restyle PR?\ncomments: false\n\n# Request review on the Restyle PR\nrequest_review: none\n\n# Patterns to exclude from all Restylers\nexclude:\n    - \".github/workflows/**/*\" # https://github.com/restyled-io/restyler/issues/73\n    - \".github/workflows/*\" # https://github.com/restyled-io/restyler/issues/73\n    - \".github/**/*\" # https://github.com/restyled-io/restyler/issues/73\n    - \".github/*\" # https://github.com/restyled-io/restyler/issues/73\n    - \"*/**/third_party/*\" # https://github.com/restyled-io/restyled.io/issues/213\n    - \"*/**/third_party/**\" # https://github.com/restyled-io/restyled.io/issues/213\n    - \"*/**/third_party/**/*\" # https://github.com/restyled-io/restyled.io/issues/213\n    - \"third_party/android/**/*\"\n    - \"third_party/inipp/repo/**/*\"\n    - \"third_party/jlink/**/*\"\n    - \"third_party/lwip/repo/**/*\"\n    - \"third_party/nlbuild-autotools/repo/**/*\"\n    - \"third_party/nlbuild-autotools/repo/.**/*\" # \"**/*\" doesn't include directories that start with \".\"\n    - \"third_party/nlassert/repo/**/*\" # from here down built with $ awk '/path =/ {print $3 \"/**/*\"}' .gitmodules\n    - \"third_party/nlfaultinjection/repo/**/*\"\n    - \"third_party/nlio/repo/**/*\"\n    - \"third_party/mbedtls/repo/**/*\"\n    - \"examples/common/QRCode/repo/**/*\"\n    - \"examples/common/m5stack-tft/repo/**/*\"\n    - \"third_party/pigweed/repo/**/*\"\n    - \"third_party/openthread/repo/**/*\"\n    - \"third_party/ot-br-posix/repo/**/*\"\n    - \"third_party/bluez/repo/**/*\"\n    - \"third_party/cirque/repo/**/*\"\n    - \"third_party/nanopb/repo/**/*\"\n    - \"examples/android/CHIPTool/gradlew\" # gradle wrapper generated file\n    - \"third_party/android_deps/gradlew\" # gradle wrapper generated file\n    - \"src/controller/python/chip/clusters/Objects.py\" # generated file, no point to restyle\n    - \"src/controller/python/chip/clusters/CHIPClusters.py\" # generated file, no point to restyle\n    - \"scripts/py_matter_idl/matter_idl/tests/outputs/**/*\" # Matches generated output 1:1\n    - \"scripts/tools/zap/tests/outputs/**/*\" # Matches generated output 1:1\n    - \"examples/chef/sample_app_util/test_files/*.yaml\"\n    - \"examples/chef/zzz_generated/**/*\"\n    - \"examples/tv-casting-app/darwin/MatterTvCastingBridge/MatterTvCastingBridge/zap-generated/*\" # zap-generated files\n    - \"integrations/cloudbuild/*.yaml\" # uglier long command line content\n    - \"scripts/run_codegen_targets.sh\" # shellharden breaks for loops over command outputs\n    - \"scripts/tagging/tag_new_release.sh\" # shellharden breaks parameter passing\n    - \"src/darwin/Framework/CHIP/zap-generated/*\" # already clang-formatted by our zap tooling\n    - \"zzz_generated/**/*\" # already clang-formatted by our zap tooling\n    - \"src/controller/java/generated/java/**/*\" # not formatted: generated files\n    - \"src/controller/java/zap-generated/**/*\" # not formatted: generated files\n    - \"scripts/setup/bootstrap.sh\" # tries to quote loop variable\n    - \"integrations/docker/build-all.sh\" # tries to quote loop variable\n    - \"scripts/setup/pigweed.json\" # TODO(#29547). This file is temporary copy from pigweed repo that has minor edits. No restyle help in diff.\n    - \"docs/ids_and_codes/**\" # generated by scripts, not easy to align tables\n    - \"docs/testing/yaml_pseudocluster.md\" # generated by scripts, restyler makes the tables render improperly\n    - \"docs/testing/yaml_schema.md\" # generated by scripts, restyler makes the tables render improperly\n\nchanged_paths:\n    maximum: 100000\n    outcome: error\n\n# Restylers to run, and how\nrestylers:\n    - name: whitespace\n      enabled: true\n      image: restyled/restyler-whitespace:v0.1.0.1\n      command:\n          - whitespace\n      arguments: []\n      include:\n          - \"**/Dockerfile\"\n          - \".**/Dockerfile\"\n          - \"**/*.yml\"\n          - \"**/*.yaml\"\n          - \".**/*.yml\"\n          - \".**/*.yaml\"\n          - \"**/*.sh\"\n          - \"**/*.c\"\n          - \"**/*.cc\"\n          - \"**/*.cpp\"\n          - \"**/*.ipp\"\n          - \"**/*.cxx\"\n          - \"**/*.c++\"\n          - \"**/*.C\"\n          - \"**/*.cs\"\n          - \"**/*.h\"\n          - \"**/*.hh\"\n          - \"**/*.hpp\"\n          - \"**/*.hxx\"\n          - \"**/*.h++\"\n          - \"**/*.H\"\n          - \"**/*.java\"\n          - \"**/*.js\"\n          - \"**/*.json\"\n          - \".**/*.js\"\n          - \".**/*.json\"\n          - \"**/*.m\"\n          - \"**/*.mm\"\n    - name: google-java-format\n      enabled: true\n      # Update https://github.com/project-chip/connectedhomeip/blob/master/scripts/tools/zap/generate.py if this version changes.\n      image: restyled/restyler-google-java-format:v1.6\n      command:\n          - google-java-format\n          - \"--replace\"\n      arguments: []\n      include:\n          - \"**/*.java\"\n      interpreters: []\n    - name: clang-format\n      enabled: true\n      image: restyled/restyler-clang-format:v16.0.6\n      command:\n          - clang-format\n          - \"-i\"\n      arguments: []\n      include:\n          - \"**/*.c\"\n          - \"**/*.cc\"\n          - \"**/*.cpp\"\n          - \"**/*.ipp\"\n          - \"**/*.cxx\"\n          - \"**/*.c++\"\n          - \"**/*.C\"\n          - \"**/*.cs\"\n          - \"**/*.h\"\n          - \"**/*.hh\"\n          - \"**/*.hpp\"\n          - \"**/*.hxx\"\n          - \"**/*.h++\"\n          - \"**/*.H\"\n          - \"**/*.js\"\n          - \"**/*.m\"\n          - \"**/*.mm\"\n      interpreters: []\n    - name: gn\n      image: restyled/restyler-gn:v1\n      enabled: true\n      include:\n          - \"**/*.gn\"\n          - \"**/*.gni\"\n    - name: prettier-json\n      image: restyled/restyler-prettier:v1.19.1-2\n      enabled: true\n      command:\n          - prettier\n          - \"--write\"\n      arguments: []\n      include:\n          - \"**/*.json\"\n          - \".**/*.json\"\n      interpreters: []\n    - name: prettier-markdown\n      image: restyled/restyler-prettier:v1.19.1-2\n      command:\n          - prettier\n          - \"--write\"\n      arguments: []\n      enabled: true\n      include:\n          - \"**/*.md\"\n          - \"**/*.markdown\"\n    - name: prettier-yaml\n      image: restyled/restyler-prettier:v1.19.1-2\n      enabled: true\n      command:\n          - prettier\n          - \"--write\"\n      include:\n          - \"**/*.yml\"\n          - \"**/*.yaml\"\n    - name: shellharden\n      image: restyled/restyler-shellharden:v4.1.1-2\n      enabled: true\n      include:\n          - \"**/*.sh\"\n          - \"**/*.bash\"\n    - name: shfmt\n      image: restyled/restyler-shfmt:v3.0.1\n      enabled: true\n      command:\n          - shfmt\n          - \"-w\"\n      arguments:\n          - \"-i\"\n          - \"4\"\n          - \"-ci\"\n      interpreters:\n          - sh\n          - bash\n      include:\n          - \"**/*.sh\"\n          - \"**/*.bash\"\n    - name: autopep8\n      image: restyled/restyler-autopep8:v2.0.0\n      command:\n          - autopep8\n          - \"--in-place\"\n          - \"--max-line-length\"\n          - \"132\"\n      arguments: []\n      include:\n          - \"**/*.py\"\n      interpreters:\n          - python\n    - name: isort\n      image: restyled/restyler-isort:v5.11.2\n      command:\n          - isort\n      arguments: []\n      include:\n          - \"**/*.py\"\n      interpreters:\n          - python\n"
        },
        {
          "name": ".shellcheck_tree",
          "type": "blob",
          "size": 0.083984375,
          "content": "# configuration for shellcheck_tree.sh\nexcludes+=('third_party/*' 'build/*' '.git/*')\n"
        },
        {
          "name": ".spellcheck.yml",
          "type": "blob",
          "size": 2.4169921875,
          "content": "# Copyright (c) 2020-2021 Project CHIP Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# To run locally:\n#   Prerequisits (only once):\n#\n#      apt-get install aspell aspell-en\n#      pip install pyspelling\n#\n#   Actual run:\n#\n#      pyspelling --config .spellcheck.yml\n\nmatrix:\n  - name: markdown\n    dictionary:\n      wordlists:\n        - .github/.wordlist.txt\n    pipeline:\n      # See https://facelessuser.github.io/pyspelling/configuration/#pipeline\n      # and https://facelessuser.github.io/pyspelling/filters/context/\n\n      # context-aware logic: we have a LOT of code examples in markdown,\n      # avoid trying to spellcheck code.\n      - pyspelling.filters.context:\n          context_visible_first: true\n          escapes: \\\\[\\\\`~]\n          delimiters:\n          # Ignore multiline content between fences (fences can have 3 or more back ticks)\n          # ```\n          # content\n          # ```\n          #\n          # Allows language marker (since github allows it) like:\n          # ```python\n          # content\n          # ```\n          #\n          # Allow MyST extended syntax like:\n          # ```{include} my/file.md\n          # ```\n          - open: '(?s)^(?P<open> *`{3,})([a-z]*$|{[a-z]*?}\\s*[^\\n]*?$)'\n            close: '^(?P=open)$'\n          # Ignore text between inline back ticks\n          - open: '(?P<open>`+)'\n            close: '(?P=open)'\n          # Ignore URL in hyperlinks [title](url)\n          - open: '\\[[^]]*\\]\\('\n            close: '\\)'\n          # Ignore code markers\n          - open: '<code>'\n            close: '</code>'\n\n      # converts markdown to HTML\n      - pyspelling.filters.markdown:\n    sources:\n      - '**/*.md|!third_party/**|!examples/common/**/repo/**|!docs/ids_and_codes/ERROR_CODES.md|!docs/clusters.md|!docs/testing/yaml_schema.md|!docs/testing/yaml_pseudocluster.md|!docs/testing/python.md|!docs/testing/ChipDeviceCtrlAPI.md|!docs/issue_triage.md'\n    aspell:\n      ignore-case: true\n      camel-case: true\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.gn",
          "type": "blob",
          "size": 24.1640625,
          "content": "# Copyright (c) 2020 Project CHIP Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport(\"//build_overrides/build.gni\")\nimport(\"//build_overrides/chip.gni\")\nimport(\"//build_overrides/mbedtls.gni\")\nimport(\"//build_overrides/nlassert.gni\")\nimport(\"//build_overrides/pigweed.gni\")\n\nimport(\"//src/lwip/lwip.gni\")\nimport(\"//src/platform/device.gni\")\nimport(\"$dir_pw_build/python.gni\")\nimport(\"$dir_pw_build/python_dist.gni\")\nimport(\"$dir_pw_build/python_venv.gni\")\n\n# This build file should not be used in superproject builds.\nassert(chip_root == \"//\")\n\nimport(\"${chip_root}/build/chip/fuzz_test.gni\")\nimport(\"${chip_root}/build/chip/tests.gni\")\nimport(\"${chip_root}/build/chip/tools.gni\")\n\nimport(\"${build_root}/config/compiler/compiler.gni\")\n\nimport(\"//src/crypto/crypto.gni\")\n\nif (chip_with_lwip) {\n  import(\"//build_overrides/lwip.gni\")\n}\n\nif (current_toolchain != \"${dir_pw_toolchain}/default:default\") {\n  declare_args() {\n    chip_enable_python_modules =\n        (current_os == \"mac\" || current_os == \"linux\") &&\n        (host_cpu == \"x64\" || host_cpu == \"arm64\" || host_cpu == \"arm\")\n\n    # Build the Linux all clusters app example with default group\n    chip_build_all_clusters_app = false\n  }\n\n  if (enable_fuzz_test_targets) {\n    group(\"fuzz_tests\") {\n      deps = [\n        \"${chip_root}/examples/all-clusters-app/linux:fuzz-chip-all-clusters-app\",\n        \"${chip_root}/src/credentials/tests:fuzz-chip-cert\",\n        \"${chip_root}/src/lib/core/tests:fuzz-tlv-reader\",\n        \"${chip_root}/src/lib/dnssd/minimal_mdns/tests:fuzz-minmdns-packet-parsing\",\n        \"${chip_root}/src/lib/format/tests:fuzz-payload-decoder\",\n        \"${chip_root}/src/setup_payload/tests:fuzz-setup-payload-base38\",\n        \"${chip_root}/src/setup_payload/tests:fuzz-setup-payload-base38-decode\",\n      ]\n    }\n  }\n\n  if (pw_enable_fuzz_test_targets) {\n    group(\"pw_fuzz_tests\") {\n      deps = [\n        \"${chip_root}/src/credentials/tests:fuzz-chip-cert-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n        \"${chip_root}/src/lib/core/tests:fuzz-tlv-reader-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n        \"${chip_root}/src/lib/dnssd/minimal_mdns/tests:fuzz-minmdns-packet-parsing-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n        \"${chip_root}/src/lib/format/tests:fuzz-payload-decoder-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n        \"${chip_root}/src/protocols/secure_channel/tests:fuzz-PASE-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n        \"${chip_root}/src/setup_payload/tests:fuzz-setup-payload-base38-pw(//build/toolchain/pw_fuzzer:chip_pw_fuzztest)\",\n      ]\n    }\n  }\n\n  # Matter's in-tree pw_python_package or pw_python_distribution targets.\n  _matter_python_packages = [\n    \"//examples/chef\",\n    \"//examples/common/pigweed/rpc_console/py:chip_rpc\",\n    \"//integrations/mobly:chip_mobly\",\n    \"//scripts/py_matter_yamltests:matter_yamltests\",\n    \"//src/python_testing/matter_testing_infrastructure:chip-testing\",\n  ]\n\n  pw_python_venv(\"matter_build_venv\") {\n    path = \"$root_build_dir/python-venv\"\n    constraints = pw_build_PIP_CONSTRAINTS\n    requirements = pw_build_PIP_REQUIREMENTS\n\n    # Packages available to import within GN's build venv.\n    source_packages = _matter_python_packages +\n                      [ \"$dir_pw_env_setup:core_pigweed_python_packages\" ]\n  }\n\n  pw_python_pip_install(\"pip_install_matter_packages\") {\n    packages = [ \"//examples/common/pigweed/rpc_console:chip_rpc_distribution\" ]\n  }\n\n  # Python packages installed during bootstrap.\n  pw_python_group(\"python_packages\") {\n    python_deps = [\n      \":pip_install_editable_matter_packages\",\n      \":pip_install_matter_packages\",\n      \"$dir_pw_env_setup:pip_install_pigweed_package\",\n    ]\n  }\n\n  # These pw_python_package targets will be installed using 'pip install --editable'\n  pw_python_pip_install(\"pip_install_editable_matter_packages\") {\n    packages = [\n      \"//integrations/mobly:chip_mobly\",\n      \"//examples/chef\",\n    ]\n    editable = true\n  }\n\n  # Python wheel targets, used by //scripts/build_python.sh\n  group(\"python_wheels\") {\n    if (chip_enable_python_modules) {\n      deps = [\n        \"${chip_root}/scripts:matter_yamltests_distribution.wheel\",\n        \"${chip_root}/src/controller/python:chip-repl\",\n        \"${chip_root}/src/python_testing/matter_testing_infrastructure:chip-testing.wheel\",\n      ]\n    }\n  }\n\n  # This is a real toolchain. Build CHIP.\n  group(\"default\") {\n    deps = [\n      \"${chip_root}/src/app\",\n      \"${chip_root}/src/ble\",\n      \"${chip_root}/src/controller\",\n      \"${chip_root}/src/credentials\",\n      \"${chip_root}/src/credentials:default_attestation_verifier\",\n      \"${chip_root}/src/crypto\",\n      \"${chip_root}/src/inet\",\n      \"${chip_root}/src/lib\",\n      \"${chip_root}/src/lib/asn1\",\n      \"${chip_root}/src/lib/core\",\n      \"${chip_root}/src/lib/support\",\n      \"${chip_root}/src/messaging\",\n      \"${chip_root}/src/protocols\",\n      \"${chip_root}/src/setup_payload\",\n      \"${chip_root}/src/system\",\n      \"${chip_root}/src/transport\",\n      \"${nlassert_root}:nlassert\",\n    ]\n\n    if (enable_fuzz_test_targets) {\n      deps += [ \"//:fuzz_tests\" ]\n    }\n\n    if (pw_enable_fuzz_test_targets) {\n      deps += [ \"//:pw_fuzz_tests\" ]\n    }\n\n    if (chip_device_platform != \"none\") {\n      deps += [ \"${chip_root}/src/app/server\" ]\n    }\n\n    if (chip_build_tests) {\n      deps += [ \"//src:tests\" ]\n      deps += [ \"//examples:example_tests\" ]\n\n      if (current_os == \"android\" && current_toolchain == default_toolchain) {\n        deps += [ \"${chip_root}/build/chip/java/tests:java_build_test\" ]\n      }\n    }\n\n    if (chip_with_lwip) {\n      deps += [ \"${lwip_root}:lwip\" ]\n    }\n\n    if (chip_build_tools) {\n      deps += [\n        \":certification\",\n        \"${chip_root}/examples/shell/standalone:chip-shell\",\n        \"${chip_root}/src/app/tests/integration:chip-im-initiator\",\n        \"${chip_root}/src/app/tests/integration:chip-im-responder\",\n        \"${chip_root}/src/inet/tests:inet-layer-test-tool\",\n        \"${chip_root}/src/lib/address_resolve:address-resolve-tool\",\n        \"${chip_root}/src/messaging/tests/echo:chip-echo-requester\",\n        \"${chip_root}/src/messaging/tests/echo:chip-echo-responder\",\n        \"${chip_root}/src/qrcodetool\",\n        \"${chip_root}/src/setup_payload\",\n        \"${chip_root}/src/tools/spake2p\",\n      ]\n      if (chip_can_build_cert_tool) {\n        deps += [ \"${chip_root}/src/tools/chip-cert\" ]\n      }\n      if (chip_enable_python_modules) {\n        deps += [ \":python_wheels\" ]\n      }\n    }\n\n    if (current_os == \"android\") {\n      deps += [\n        \"${chip_root}/src/app/server/java\",\n        \"${chip_root}/src/controller/java\",\n        \"${chip_root}/src/controller/java:jsontlv\",\n        \"${chip_root}/src/controller/java:onboarding_payload\",\n        \"${chip_root}/src/controller/java:tlv\",\n        \"${chip_root}/src/platform/android:java\",\n      ]\n    }\n\n    if (build_tv_casting_common_a) {\n      deps += [ \"${chip_root}/examples/tv-casting-app/tv-casting-common:tvCastingCommon\" ]\n    }\n\n    if (chip_build_all_clusters_app) {\n      if (is_libfuzzer) {\n        deps += [ \"${chip_root}/examples/all-clusters-app/linux:chip-all-clusters-app-fuzzing\" ]\n      } else {\n        deps += [\n          \"${chip_root}/examples/all-clusters-app/linux:chip-all-clusters-app\",\n        ]\n      }\n    }\n  }\n\n  if (chip_build_tools) {\n    group(\"certification\") {\n      data_deps = [ \"${chip_root}/examples/chip-tool\" ]\n\n      if (chip_enable_python_modules) {\n        data_deps += [ \"${chip_root}/src/controller/python:chip-repl\" ]\n      }\n\n      write_runtime_deps = \"${root_out_dir}/certification.runtime_deps\"\n    }\n  }\n\n  group(\"fake_platform_tests\") {\n    if (chip_link_tests) {\n      deps = [ \"//src:fake_platform_tests_run\" ]\n    }\n  }\n\n  group(\"check\") {\n    if (chip_link_tests) {\n      deps = [\n        \"//:fake_platform_tests\",\n        \"//examples/chef:chef.tests\",\n        \"//scripts/build:build_examples.tests\",\n        \"//scripts/py_matter_idl:matter_idl.tests\",\n        \"//scripts/py_matter_yamltests:matter_yamltests.tests\",\n        \"//src:tests_run\",\n        \"//src/python_testing/matter_testing_infrastructure:chip-testing.tests\",\n      ]\n\n      if (current_os == \"linux\" || current_os == \"mac\") {\n        deps += [ \"${chip_root}/scripts/tools/zap:tests\" ]\n      }\n    }\n  }\n} else {\n  # This is the unified build. Configure various real toolchains.\n  import(\"${chip_root}/build/chip/chip_build.gni\")\n  declare_args() {\n    # Set this to false to disable all builds by default.\n    enable_default_builds = true\n\n    # Enable building for Android.\n    enable_android_builds = false\n\n    # Enable building for Tizen.\n    enable_tizen_builds = false\n\n    # Set this to true to enable TI builds by default.\n    enable_ti_simplelink_builds = false\n\n    # Set this to true to enable efr32 builds by default.\n    enable_efr32_builds = false\n\n    # Set this to true to enable psoc6 builds by default.\n    enable_psoc6_builds = false\n\n    # Set this to true to enable Qorvo qpg builds by default.\n    enable_qpg_builds = false\n\n    # Set this to true to enable k32w builds by default.\n    enable_k32w_builds = false\n\n    # Set this to true to enable bl602 builds by default.\n    enable_bl602_builds = false\n\n    # Set this to true to enable bl702 builds by default.\n    enable_bl702_builds = false\n\n    # Set this to true to enable mw320 builds by default.\n    enable_mw320_builds = false\n\n    # Set this to true to enable genio builds by default.\n    enable_genio_builds = false\n\n    # Set this to true to enable stm32 builds by default.\n    enable_stm32_builds = false\n  }\n\n  # Pigweed does not provide a clang in some configurations.\n  if (enable_default_builds) {\n    _have_pigweed_clang =\n        host_os != \"win\" && !(host_os == \"mac\" && host_cpu == \"arm64\")\n  }\n\n  declare_args() {\n    # Enable building chip with the pigweed clang.\n    enable_host_clang_build = enable_default_builds && _have_pigweed_clang\n\n    # Enable building chip with gcc.\n    enable_host_gcc_build = enable_default_builds && host_os != \"win\"\n\n    # Enable building chip with gcc & mbedtls.\n    enable_host_gcc_mbedtls_build = false\n\n    # Enable limited testing with gcc & mbedtls.\n    enable_host_gcc_mbedtls_crypto_tests =\n        enable_default_builds && host_os != \"win\"\n\n    # Enable building chip with clang & boringssl\n    enable_host_clang_boringssl_build = false\n\n    # Enable limited testing with pigweed clang & boringssl.  On Mac, boringssl\n    # tests do not compile with ASAN enabled.\n    enable_host_clang_boringssl_crypto_tests =\n        enable_default_builds && _have_pigweed_clang &&\n        !(is_asan == true && host_os == \"mac\")\n\n    # Build the chip-cert tool.\n    enable_standalone_chip_cert_build =\n        enable_default_builds && host_os != \"win\" && chip_can_build_cert_tool\n\n    # Build the chip-tool example.\n    enable_standalone_chip_tool_build =\n        enable_default_builds && host_os != \"win\"\n\n    # Build the darwin-framework-tool example.  By default this is off, because\n    # it requires a preceding XCode build of the framework.\n    enable_standalone_chip_tool_darwin_build = false\n\n    # Build the shell example.\n    enable_standalone_shell_build = enable_default_builds && host_os != \"win\"\n\n    # Build the Linux all clusters app example.\n    enable_linux_all_clusters_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux tv app example.\n    enable_linux_tv_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux tv casting app example.\n    enable_linux_tv_casting_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux bridge app example.\n    enable_linux_bridge_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux lighting app example.\n    enable_linux_lighting_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux microwave oven app example.\n    enable_microwave_oven_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux thermostat app example.\n    enable_linux_thermostat_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux lock app example.\n    enable_linux_lock_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux LIT ICD example.\n    enable_linux_lit_icd_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the Linux RVC app example.\n    enable_linux_rvc_app_build =\n        enable_default_builds && (host_os == \"linux\" || host_os == \"mac\")\n\n    # Build the cc13x2x7_26x2x7 lock app example.\n    enable_cc13x2x7_26x2x7_lock_app_build = enable_ti_simplelink_builds\n\n    # Build the cc13x2x7_26x2x7 all-clusters app example.\n    enable_cc13x2x7_26x2x7_all_clusters_app_build = enable_ti_simplelink_builds\n\n    # Build the efr32 lock app example.\n    enable_efr32_lock_app_build = enable_efr32_builds\n\n    # Build the psoc6 lock app example.\n    enable_psoc6_lock_app_build = enable_psoc6_builds\n\n    # Build the qpgxxxx lock app example.\n    enable_qpg_lock_app_build = enable_qpg_builds && !is_debug\n\n    # Build the efr32 lighting app example.\n    enable_efr32_lighting_app_build = enable_efr32_builds\n\n    # Build the efr32 window app example.\n    enable_efr32_window_app_build = enable_efr32_builds\n\n    # Build the k32w lighting app example.\n    enable_k32w_lighting_app_build = enable_k32w_builds\n\n    # Build the k32w lock app example.\n    enable_k32w_lock_app_build = enable_k32w_builds\n\n    # Build the k32w shell app example.\n    enable_k32w_shell_app_build = enable_k32w_builds\n\n    # Build the bl602 lighting app example.\n    enable_bl602_lighting_app_build = enable_bl602_builds\n\n    # Build the bl702 lighting app example.\n    enable_bl702_lighting_app_build = enable_bl702_builds\n\n    # Build the mw320 shell app example.\n    enable_mw320_shell_build = enable_mw320_builds\n\n    # Build the genio shell app example.\n    enable_genio_shell_app_build = enable_genio_builds\n\n    enable_fake_tests = enable_default_builds && host_os == \"linux\"\n\n    enable_tizen_lighting_app = enable_tizen_builds\n  }\n\n  builds = []\n  extra_build_deps = []\n  extra_check_deps = []\n\n  if (enable_host_clang_build) {\n    chip_build(\"host_clang\") {\n      toolchain = \"${build_root}/toolchain/host:${host_os}_${host_cpu}_clang\"\n    }\n\n    builds += [ \":host_clang\" ]\n  }\n\n  if (enable_host_gcc_build) {\n    chip_build(\"host_gcc\") {\n      toolchain = \"${build_root}/toolchain/host:${host_os}_${host_cpu}_gcc\"\n    }\n\n    builds += [ \":host_gcc\" ]\n  }\n\n  if (enable_host_gcc_mbedtls_build) {\n    chip_build(\"host_gcc_mbedtls\") {\n      toolchain = \"${chip_root}/config/mbedtls/toolchain:${host_os}_${host_cpu}_gcc_mbedtls\"\n    }\n\n    builds += [ \":host_gcc_mbedtls\" ]\n  }\n\n  if (enable_host_gcc_mbedtls_crypto_tests) {\n    chip_build(\"host_gcc_mbedtls_crypto_tests\") {\n      test_group = \"//src:crypto_tests\"\n      toolchain = \"${chip_root}/config/mbedtls/toolchain:${host_os}_${host_cpu}_gcc_mbedtls\"\n    }\n\n    builds += [ \":host_gcc_mbedtls_crypto_tests\" ]\n  }\n\n  if (enable_host_clang_boringssl_build) {\n    chip_build(\"host_clang_boringssl\") {\n      toolchain = \"${chip_root}/config/boringssl/toolchain:${host_os}_${host_cpu}_clang_boringssl\"\n    }\n\n    builds += [ \":host_clang_boringssl\" ]\n  }\n\n  if (enable_host_clang_boringssl_crypto_tests) {\n    chip_build(\"host_clang_boringssl_crypto_tests\") {\n      test_group = \"//src:crypto_tests\"\n      toolchain = \"${chip_root}/config/boringssl/toolchain:${host_os}_${host_cpu}_clang_boringssl\"\n    }\n\n    builds += [ \":host_clang_boringssl_crypto_tests\" ]\n  }\n\n  if (enable_android_builds) {\n    chip_build(\"android_arm\") {\n      toolchain = \"${build_root}/toolchain/android:android_arm\"\n    }\n\n    chip_build(\"android_arm64\") {\n      toolchain = \"${build_root}/toolchain/android:android_arm64\"\n    }\n\n    chip_build(\"android_x64\") {\n      toolchain = \"${build_root}/toolchain/android:android_x64\"\n    }\n\n    chip_build(\"android_x86\") {\n      toolchain = \"${build_root}/toolchain/android:android_x86\"\n    }\n\n    builds += [\n      \":android_arm\",\n      \":android_arm64\",\n      \":android_x64\",\n      \":android_x86\",\n    ]\n  }\n\n  if (enable_fake_tests) {\n    chip_build(\"fake_platform\") {\n      test_group = \"//src:fake_platform_tests\"\n      toolchain = \"${build_root}/toolchain/fake:fake_${host_cpu}_gcc\"\n    }\n\n    builds += [ \":fake_platform\" ]\n  }\n\n  standalone_toolchain = \"${chip_root}/config/standalone/toolchain:standalone\"\n  not_needed([ \"standalone_toolchain\" ])  # Might not be needed.\n\n  if (enable_standalone_chip_cert_build) {\n    group(\"standalone_chip_cert\") {\n      deps = [ \"${chip_root}/src/tools/chip-cert(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":standalone_chip_cert\" ]\n  }\n\n  if (enable_standalone_chip_tool_build) {\n    group(\"standalone_chip_tool\") {\n      deps = [ \"${chip_root}/examples/chip-tool(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":standalone_chip_tool\" ]\n  }\n\n  if (enable_standalone_chip_tool_darwin_build) {\n    group(\"standalone_chip_tool_darwin\") {\n      deps = [\n        \"${chip_root}/examples/darwin-framework-tool(${standalone_toolchain})\",\n      ]\n    }\n\n    extra_build_deps += [ \":standalone_chip_tool_darwin\" ]\n  }\n\n  if (enable_cc13x2x7_26x2x7_lock_app_build) {\n    group(\"cc13x2x7_26x2x7_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/cc13x2x7_26x2x7(${chip_root}/config/cc13x2_26x2/toolchain:cc13x2x7_26x2x7_lock_app)\" ]\n    }\n\n    extra_build_deps += [ \":cc13x2x7_26x2x7_lock_app\" ]\n  }\n\n  if (enable_cc13x2x7_26x2x7_all_clusters_app_build) {\n    group(\"cc13x2x7_26x2x7_all_clusters_app\") {\n      deps = [ \"${chip_root}/examples/all-clusters-app/cc13x2x7_26x2x7(${chip_root}/config/cc13x2_26x2/toolchain:cc13x2x7_26x2x7_all_clusters_app)\" ]\n    }\n\n    extra_build_deps += [ \":cc13x2x7_26x2x7_all_clusters_app\" ]\n  }\n\n  if (enable_standalone_shell_build) {\n    group(\"standalone_shell\") {\n      deps =\n          [ \"${chip_root}/examples/shell/standalone(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":standalone_shell\" ]\n  }\n\n  if (enable_linux_all_clusters_app_build) {\n    group(\"linux_all_clusters_app\") {\n      deps = [\n        \"${chip_root}/examples/all-clusters-app/linux(${standalone_toolchain})\",\n      ]\n    }\n\n    extra_build_deps += [ \":linux_all_clusters_app\" ]\n  }\n\n  if (enable_linux_thermostat_app_build) {\n    group(\"linux_thermostat_app\") {\n      deps =\n          [ \"${chip_root}/examples/thermostat/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_thermostat_app\" ]\n  }\n\n  if (enable_linux_tv_app_build) {\n    group(\"linux_tv_app\") {\n      deps = [ \"${chip_root}/examples/tv-app/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_tv_app\" ]\n  }\n\n  if (enable_linux_tv_casting_app_build) {\n    group(\"linux_tv_casting_app\") {\n      deps = [\n        \"${chip_root}/examples/tv-casting-app/linux(${standalone_toolchain})\",\n      ]\n    }\n\n    extra_build_deps += [ \":linux_tv_casting_app\" ]\n  }\n\n  if (enable_linux_bridge_app_build) {\n    group(\"linux_bridge_app\") {\n      deps =\n          [ \"${chip_root}/examples/bridge-app/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_bridge_app\" ]\n  }\n\n  if (enable_microwave_oven_app_build) {\n    group(\"linux_microwave_oven_app\") {\n      deps = [ \"${chip_root}/examples/microwave-oven-app/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_microwave_oven_app\" ]\n  }\n\n  if (enable_linux_lighting_app_build) {\n    group(\"linux_lighting_app\") {\n      deps = [\n        \"${chip_root}/examples/lighting-app/linux(${standalone_toolchain})\",\n      ]\n    }\n\n    extra_build_deps += [ \":linux_lighting_app\" ]\n  }\n\n  if (enable_linux_lock_app_build) {\n    group(\"linux_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_lock_app\" ]\n  }\n\n  if (enable_linux_lit_icd_app_build) {\n    group(\"linux_lit_icd_app\") {\n      lit_icd_standalone_toolchain =\n          \"${chip_root}/config/standalone/toolchain:lit_icd\"\n\n      deps = [ \"${chip_root}/examples/lit-icd-app/linux(${lit_icd_standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_lit_icd_app\" ]\n  }\n\n  if (enable_efr32_lock_app_build) {\n    group(\"efr32_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/efr32(${chip_root}/config/efr32/toolchain:efr32_lock_app)\" ]\n    }\n\n    extra_build_deps += [ \":efr32_lock_app\" ]\n  }\n\n  if (enable_psoc6_lock_app_build) {\n    group(\"psoc6_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/infineon/psoc6(${chip_root}/config/psoc6/toolchain:psoc6_lock_app)\" ]\n    }\n\n    extra_build_deps += [ \":psoc6_lock_app\" ]\n  }\n\n  if (enable_qpg_lock_app_build) {\n    group(\"qpg_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/qpg(${chip_root}/config/qpg/toolchain:qpg_lock_app)\" ]\n    }\n\n    extra_build_deps += [ \":qpg_lock_app\" ]\n  }\n\n  if (enable_efr32_lighting_app_build) {\n    group(\"efr32_lighting_app\") {\n      deps = [ \"${chip_root}/examples/lighting-app/efr32(${chip_root}/config/efr32/toolchain:efr32_lighting_app)\" ]\n    }\n\n    extra_build_deps += [ \":efr32_lighting_app\" ]\n  }\n\n  if (enable_efr32_window_app_build) {\n    group(\"efr32_window_app\") {\n      deps = [ \"${chip_root}/examples/window-app/efr32(${chip_root}/config/efr32/toolchain:efr32_window_app)\" ]\n    }\n\n    extra_build_deps += [ \":efr32_window_app\" ]\n  }\n\n  if (enable_k32w_lighting_app_build) {\n    group(\"k32w_lighting_app\") {\n      deps = [ \"${chip_root}/examples/lighting-app/nxp/k32w0/(${chip_root}/config/k32w/toolchain:k32w_lighting_app)\" ]\n    }\n\n    extra_build_deps += [ \":k32w_lighting_app\" ]\n  }\n\n  if (enable_k32w_lock_app_build) {\n    group(\"k32w_lock_app\") {\n      deps = [ \"${chip_root}/examples/lock-app/nxp/k32w0/(${chip_root}/config/k32w/toolchain:k32w_lock_app)\" ]\n    }\n\n    extra_build_deps += [ \":k32w_lock_app\" ]\n  }\n\n  if (enable_k32w_shell_app_build) {\n    group(\"k32w_shell_app\") {\n      deps = [ \"${chip_root}/examples/shell/nxp/k32w0/(${chip_root}/config/k32w/toolchain:k32w_shell_app)\" ]\n    }\n\n    extra_build_deps += [ \":k32w_shell_app\" ]\n  }\n\n  if (enable_tizen_lighting_app) {\n    group(\"tizen_lighting_app\") {\n      deps = [ \"${chip_root}/examples/lighting-app/tizen(${chip_root}/build/toolchain/tizen:tizen_arm)\" ]\n    }\n\n    extra_build_deps += [ \":tizen_lighting_app\" ]\n  }\n\n  if (enable_tizen_builds) {\n    group(\"check:tizen\") {\n      testonly = true\n      deps = [ \"${chip_root}/src/test_driver/tizen:check(${chip_root}/build/toolchain/tizen:tizen_arm)\" ]\n    }\n\n    # Include Tizen check target only if BLE is not enabled, since\n    # currently, QEMU-based Tizen does not support Bluetooth.\n    if (!chip_config_network_layer_ble) {\n      extra_check_deps += [ \":check:tizen\" ]\n    }\n  }\n\n  if (enable_mw320_shell_build) {\n    group(\"mw320_shell\") {\n      deps = [ \"${chip_root}/examples/shell/mw320(${chip_root}/config/mw320/toolchain:mw320_shell)\" ]\n    }\n\n    extra_build_deps += [ \":mw320_shell\" ]\n  }\n\n  if (enable_bl702_lighting_app_build) {\n    group(\"bl702_lighting_app\") {\n      deps = [ \"${chip_root}/examples/lighting-app/bl702(${chip_root}/config/bl702/toolchain:bl702_lighting_app)\" ]\n    }\n\n    extra_build_deps += [ \":bl702_shell\" ]\n  }\n\n  if (enable_genio_shell_app_build) {\n    group(\"genio_shell_app\") {\n      deps = [ \"${chip_root}/examples/shell/genio(${chip_root}/config/genio/toolchain:genio_shell_app)\" ]\n    }\n\n    extra_build_deps += [ \":genio_shell_app\" ]\n  }\n\n  if (enable_linux_rvc_app_build) {\n    group(\"linux_rvc_app\") {\n      deps = [ \"${chip_root}/examples/rvc-app/linux(${standalone_toolchain})\" ]\n    }\n\n    extra_build_deps += [ \":linux_rvc_app\" ]\n  }\n\n  group(\"default\") {\n    deps = extra_build_deps + builds\n  }\n\n  group(\"check\") {\n    testonly = true\n    deps = extra_check_deps\n    foreach(_build, builds) {\n      deps += [ get_label_info(_build, \"dir\") + \":check_\" +\n                get_label_info(_build, \"name\") ]\n    }\n  }\n}\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 2.8193359375,
          "content": "/src/platform/ASR/               @tx2rx\nasr/                             @tx2rx\nchip-build-asr/                  @tx2rx\n\n/src/platform/Ameba/             @pankore\nameba/                           @pankore\nchip-build-ameba/                @pankore\n\n/src/platform/Beken/             @zhengyaohan\n\n*.mm                             @project-chip/reviewers-apple\ndarwin/                          @project-chip/reviewers-apple\n/src/darwin/                     @project-chip/reviewers-apple\n/src/platform/Darwin/            @project-chip/reviewers-apple\n/examples/darwin-framework-tool/ @project-chip/reviewers-apple\n\n/src/platform/ESP32/             @project-chip/reviewers-espressif\nesp32/                           @project-chip/reviewers-espressif\nchip-build-esp32/                @project-chip/reviewers-espressif\nchip-build-esp32-qemu/           @project-chip/reviewers-espressif\n\n/src/platform/Infineon/          @ifyall\ninfineon/                        @ifyall\nchip-build-infineon/             @ifyall\n\n/src/platform/NuttX/             @zhhyu7\nchip-build-nuttx/                @zhhyu7\n\n/src/platform/Tizen/             @arkq\ntizen/                           @arkq\nchip-build-tizen/                @arkq\nchip-build-tizen-qemu/           @arkq\n\n*.java                           @project-chip/reviewers-google\n*.kt                             @project-chip/reviewers-google\nandroid/                         @project-chip/reviewers-google\n/src/examples/chef/              @project-chip/reviewers-google\n/integrations/appengine/         @project-chip/reviewers-google\n/integrations/cloudbuild/        @project-chip/reviewers-google\n/integrations/compute_engine/    @project-chip/reviewers-google\nchip-build-java/                 @project-chip/reviewers-google\nchip-build-android/              @project-chip/reviewers-google\n\n/src/platform/bouffalolab/       @wy-hh\nchip-build-bouffalolab/          @wy-hh\n\ncc13xx_26xx/                     @s-jain2022\ncc32xx/                          @s-jain2022\n\n/src/platform/mt793x/            @pakls\nnrfconnect/                      @project-chip/reviewers-nordic\nchip-build-nrf-platform/                      @project-chip/reviewers-nordic\nZephyr/                            @project-chip/reviewers-nordic @project-chip/reviewers-nxp @s07641069\n\n\nnxp/                             @project-chip/reviewers-nxp\nchip-build-nxp/                  @project-chip/reviewers-nxp\nchip-build-nxp-zephyr/           @project-chip/reviewers-nxp\nchip-build-k32w/                 @project-chip/reviewers-nxp\n\nqpg/                             @dvdm-qorvo\n\nsilabs/                          @project-chip/reviewers-silabs\nchip-build-efr32/                @project-chip/reviewers-silabs\n\nstm32/                           @STYoannZamaron\n\ntelink/                          @s07641069\nchip-build-telink/               @s07641069\n\nwebos/                           @joonhaengHeo\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.876953125,
          "content": "# Project CHIP Open Source Code of Conduct\n\nThis Project CHIP Open Source Code of Conduct applies to all those contributing\nto, participating in, or maintaining the Project CHIP open source project,\nincluding Connectivity Standards Alliance members and non-members.\n\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n-   Demonstrating empathy and kindness toward other people\n-   Being respectful of differing opinions, viewpoints, and experiences\n-   Giving and gracefully accepting constructive feedback\n-   Accepting responsibility and apologizing to those affected by our mistakes,\n    and learning from the experience\n-   Focusing on what is best not just for us as individuals, but for the overall\n    community\n-   Respecting people's privacy and private product plans\n\nExamples of unacceptable behavior include:\n\n-   The use of sexualized language or imagery, and sexual attention or advances\n    of any kind\n-   Trolling, insulting or derogatory comments, and personal or political\n    attacks\n-   Public or private harassment\n-   Publishing others' private information, such as a physical or email address,\n    without their explicit permission\n-   Other conduct which could reasonably be considered inappropriate in a\n    professional setting\n-   Disclosure of private information, unreleased products\n-   Disclosure of unreleased specification information outside of Connectivity\n    Standards Alliance approved forums\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhelp@csa-iot.org. All submissions will be reviewed and investigated promptly and\nfairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder][mozilla coc].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][faq]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[mozilla coc]: https://github.com/mozilla/diversity\n[faq]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.98828125,
          "content": "# Contributing to Matter (formerly Project CHIP)\n\nWant to contribute? Great! First, read this page (including the small print at\nthe end). By submitting a pull request, you represent that you have the right to\nlicense your contribution to the Connectivity Standards Alliance and the\ncommunity, and agree by submitting the patch that your contributions are\nlicensed under the [Apache 2.0 license](./LICENSE). Before submitting the pull\nrequest, please make sure you have tested your changes and that they follow the\nproject guidelines for contributing code.\n\n# Contributing as an Open Source Contributor\n\nAs an open source contributor you can report bugs and request features in the\n[Issue Tracker](https://github.com/project-chip/connectedhomeip/issues), as well\nas contribute bug fixes and features that do not impact Matter specification as\na pull request. For example: ports of Matter to add APIs to alternative\nprogramming languages (e.g. Java, JS), hardware ports, or an optimized\nimplementation of existing functionality. For features that impact the\nspecification, please join Matter work group within the Connectivity Standards\nAlliance. The requirements to become an open source contributor of the\n[Matter Repository](https://github.com/project-chip/connectedhomeip) are:\n\n-   Agree to the [Code of Conduct](./CODE_OF_CONDUCT.md)\n-   Agree to the [License](./LICENSE)\n-   Have signed the\n    [Matter Working Group CLA](https://gist.github.com/clapre/65aa9fc63981da765039e0bb7e8701be)\n\n# Contributing as a Connectivity Standards Alliance Matter Working Group Member\n\nAs a participant of the Connectivity Standards Alliance Matter Working Group,\nyou can attend Working Group meetings, propose changes to the Matter\nspecification, and contribute code for approved updates to the specification.\nThe requirements to become a member of the\n[Matter Repository](https://github.com/project-chip/connectedhomeip) are:\n\n-   Must be a [Participant member](http://www.zigbeealliance.org/join) or higher\n    of the Connectivity Standards Alliance\n-   Must be a Matter Working Group member\n-   Have signed the Alliance Matter Working Group CLA\n-   Have approval from your company's official approver\n\n# Bugs\n\nIf you find a bug in the source code, you can help us by\n[submitting a GitHub Issue](https://github.com/project-chip/connectedhomeip/issues/new).\nThe best bug reports provide a detailed description of the issue and\nstep-by-step instructions for predictably reproducing the issue. Even better,\nyou can\n[submit a Pull Request](https://github.com/project-chip/connectedhomeip/blob/master/CONTRIBUTING.md#submitting-a-pull-request)\nwith a fix.\n\n# New Features\n\nYou can request a new feature by\n[submitting a GitHub Issue](https://github.com/project-chip/connectedhomeip/issues/new).\nIf you would like to implement a new feature, please consider the scope of the\nnew feature:\n\n-   _Large feature_: first\n    [submit a GitHub Issue](https://github.com/project-chip/connectedhomeip/issues/new)\n    and communicate your proposal so that the community can review and provide\n    feedback. Getting early feedback will help ensure your implementation work\n    is accepted by the community. This will also allow us to better coordinate\n    our efforts and minimize duplicated effort.\n-   _Small feature_: can be implemented and directly\n    [submitted as a Pull Request](https://github.com/project-chip/connectedhomeip/blob/master/CONTRIBUTING.md#submitting-a-pull-request).\n\n# Contributing Code\n\nMatter follows the \"Fork-and-Pull\" model for accepting contributions.\n\n### Initial Setup\n\nSetup your GitHub fork and continuous-integration services:\n\n1. Fork the [Matter repository](https://github.com/project-chip/connectedhomeip)\n   by clicking \"Fork\" on the web UI.\n\n2. All contributions must pass all checks and reviews to be accepted.\n\nSetup your local development environment:\n\n```bash\n# Clone your fork\ngit clone git@github.com:<username>/connectedhomeip.git\n\n# Configure upstream alias\ngit remote add upstream git@github.com:project-chip/connectedhomeip.git\n```\n\n### Submitting a Pull Request\n\n#### Branch\n\nFor each new feature, create a working branch:\n\n```bash\n# Create a working branch for your new feature\ngit branch --track <branch-name> origin/master\n\n# Checkout the branch\ngit checkout <branch-name>\n```\n\n#### Create Commits\n\n```bash\n# Add each modified file you'd like to include in the commit\ngit add <file1> <file2>\n\n# Create a commit\ngit commit\n```\n\nThis will open up a text editor where you can craft your commit message.\n\n#### Upstream Sync and Clean Up\n\nPrior to submitting your pull request, you might want to do a few things to\nclean up your branch and make it as simple as possible for the original\nrepository's maintainer to test, accept, and merge your work.\n\nIf any commits have been made to the upstream master branch, you should rebase\nyour development branch so that merging it will be a simple fast-forward that\nwon't require any conflict resolution work.\n\n```bash\n# Fetch upstream master and merge with your repository's master branch\ngit checkout master\ngit pull upstream master\n\n# If there were any new commits, rebase your development branch\ngit checkout <branch-name>\ngit rebase master\n```\n\nNow, it may be desirable to squash some of your smaller commits down into a\nsmall number of larger more cohesive commits. You can do this with an\ninteractive rebase:\n\n```bash\n# Rebase all commits on your development branch\ngit checkout <branch-name>\ngit rebase -i master\n```\n\nThis will open up a text editor where you can specify which commits to squash.\n\n#### Push and Test\n\n```bash\n# Checkout your branch\ngit checkout <branch-name>\n\n# Push to your GitHub fork:\ngit push origin <branch-name>\n```\n\nThis will trigger the continuous-integration checks. You can view the results in\nthe respective services. Note that the integration checks will report failures\non occasion.\n\n#### Pull requests\n\nAim to make pull requests easy to read both when viewed in a list (title only)\nas well as clear in content within the description.\n\n##### Title formatting\n\nDescribe the change as a one-line in some descriptive manner. Add sufficient\ncontext for a reader to understand what is improved. If platform-specific\nconsider adding the platform as a prefix, like `[Android]` or any other tags may\nbe useful for quick filtering like `[TC-ABC-1.2]` to tag test changes.\n\nExamples of descriptive titles:\n\n-   `[Silabs] Fix compile of SiWx917 if LED and BUTTON are disabled`\n-   `[Telink] Update build Dockerfile with new Zeprhy SHA: c05c4.....`\n-   `General Commissioning Cluster: use AttributeAccessInterface/CommandHandlerInterface for processing`\n-   `Scenes Management/CopyScene: set access as manage instead of default to match the spec`\n-   `Fix build errors due to ChipDeviceEvent default constructor not being available`\n-   `Fix crash during DNSSD processing due to malformed packet`\n-   `[NRF] Fix crash due to stack overflow during logging for PW-RPC builds`\n-   `[TC-ABC-2.3] added new python test case based on test plan`\n-   `[TC-ABC] migrate tests from yaml to python`\n\nExamples of titles that are vague (not clear what the change is, one would need\nto open the pull request for details or open additional issue in GitHub)\n\n-   `Work on issue 1234`\n-   `Fix android JniTypeWrappers`\n-   `Fix segfault in BLE`\n-   `Fix TC-ABC-1.2`\n-   `Update Readme`\n\n##### Summary contents\n\nEnsure that there is sufficient detail in issue summaries to make the content of\nthe PR clear:\n\n-   a `TLDR` of the change content. This is a judgment call on details,\n    generally you should include a what was changed and why. The change is\n    trivial/short, this can be very short (i.e. \"fixed typos\" is perfectly\n    acceptable, however if changing 100-1000s of line, the areas of changes\n    should be explained)\n-   If a crash/error is fixed, explain the root cause and if the fix is not\n    obvious (again, judgment call), explain why the given approach was taken.\n-   Help the reviewer out with any notable information (specific platform\n    issues, extra thoughts or requests for feedback or gotchas on tricky code,\n    followup work or PR dependencies)\n-   TIP: use the syntax of `Fixes #....` to mark issues completed on PR merge or\n    use `#...` to reference issues that are addressed.\n-   TIP: prefer adding some brief description (especially about the content of\n    the changes) instead of just referencing an issue (helps reviewers get\n    context faster without extra clicks).\n\n##### Testing section\n\nAll Pull Requests **MUST** contain a `#### Testing` section that describes how\nthe pull request was tested. Ideally every test should have automated testing,\nhowever for platform specific changes or hardware-specific issues we may not be\nable to have such tests (e.g. we may not BLE or NFC capability in CI). As such,\nmanual testing is acceptable, however the description has to be detailed\nintentionally to avoid a bias towards marking pull requests as \"manually tested\"\nout of convenience.\n\n-   Automated testing\n\n    **AWESOME**. You can say \"unit tests added/updated\" or \"Integration tests\n    updated to cover functionality\" or \"existing tests already cover this\" (make\n    sure they do. Integration tests often only cover happy paths).\n\n    Add any notes on not covered things. It is a judgment call on how much can\n    be covered as 100% sounds great however not always possible.\n\n-   Manual testing\n\n    Describe why automated testing is impossible in the current CI environment\n    or difficult to add. If adding later, reference the issue to add automation\n    and a timeline for adding such automation.\n\n    Describe in **DETAIL** how manual testing was done: what environment, what\n    builds were used (`build-example` names are ok such as\n    `flashed qpg-qpg6105-light` and `used linux-x64-chip-tool-clang`). Describe\n    commands ran (often chip-tool) and physical interaction and what was\n    observed.\n\n-   Trivial/obvious change\n\n    In rare cases the change is trivial (e.g. fixing a typo in a `Readme.md`).\n    Scripts still require a `#### Testing` section however you can be brief like\n    `N/A` or `checked new URL opens`. Note that these cases are rare - e.g.\n    fixing a typo in an ID still requires some description on how you checked\n    that the new ID takes effect.\n\n### Review Requirements\n\n#### Documentation Best Practices\n\nMatter uses Doxygen to markup (or markdown) all C, C++, Objective C, Objective\nC++, Perl, Python, and Java code. Read our\n[Doxygen Best Practices, Conventions, and Style](https://github.com/project-chip/connectedhomeip/blob/master/docs/style/DOXYGEN.adoc)\n\n#### Submit Pull Request\n\nOnce you've validated the CI results, go to the page for your fork on GitHub,\nselect your development branch, and click the pull request button. If you need\nto make any adjustments to your pull request, just push the updates to GitHub.\nYour pull request will automatically track the changes on your development\nbranch and update.\n\n#### Merge Requirements\n\n-   Github Workflows pass\n-   Builds pass\n-   Tests pass\n-   Linting passes\n-   Code style passes\n\nWhen can I merge? After these have been satisfied, a reviewer will merge the PR\ninto master\n\n#### Documentation\n\nDocumentation undergoes the same review process as code See the\n[Documentation Style Guide](https://github.com/project-chip/connectedhomeip/blob/master/docs/STYLE_GUIDE.md)\nfor more information on how to author and format documentation for contribution.\n\n## Merge Processes\n\nMerges require at least 3 approvals from unique require-reviewers lists, and all\nCI tests passing.\n\n### Shorter Reviews\n\nDevelopment Lead & Vice Leads can merge a change with fewer then the required\napprovals have been submitted.\n\nA separate \"fast track\" label will be created that will only require a single\ncheckbox to be set, this label shall only be set by the Development Lead, and/or\nVice Lead (unless they’re both unavailable, in which case a replacement can be\ntemporarily appointed)\n\n\"Day\" here means \"business day\" (i.e. PRs on friday do not get fast-tracked\nfaster).\n\n### Fast track types\n\n### Trivial changes\n\nSmall changes or changes that do not affect the main functionality of the code\ncan be fast tracked immediately. Examples:\n\n-   Adding/removing documentation (.md files)\n-   Adding tests (may include small reorganization/method adding/changes to\n    enable testability):\n    -   certification tests\n    -   stability tests\n    -   integration tests\n    -   functional tests\n    -   Test scripts\n    -   Additional tests following a pattern (e.g. YAML tests)\n-   Adding/updating/fixing tooling to aid in development\n-   Re-running code generation\n-   Code readability refactors:\n    -   renaming enum/classes/structure members\n    -   moving constant header location\n    -   Obviously trivial build rule changes (e.g. adding missing files to build\n        rules)\n    -   Changing comments\n    -   Adding/removing includes (include what you need and only what you need\n        rules)\n-   Pulling new third-party repo files\n-   Platform vendors/maintainers adding platform features/logic/bug fixes to\n    their own platforms\n-   Most changes to existing docker files (pulling new versions, reorganizing)\n-   Most changes to new dockerfile version in workflows\n\n#### Fast track changes\n\nLarger functionality changes are allowed to be fast tracked with these\nrequirements/restrictions:\n\n-   Require at least 1 day to have passed since the creation of the PR\n-   Require at least 1 checkmark from someone familiar with the code or problem\n    space\n    -   This requirement shall be dropped after a PR is 3 days old with stale or\n        no feedback.\n-   Code is sufficiently covered by automated tests (or impossible to\n    automatically test with a very solid reason for this - e.g. changes to BLE\n    parameters cannot be automatically tested, but should have been manually\n    verified)\n\nFast tracking these changes will involve resolving any obviously 'resolved'\ncomments (judgment call here: were they replied to or addressed) and merging the\nchange.\n\nAny \"request for changes\" marker will always be respected unless obviously\nresolved (i.e. author marked \"requesting changes because of X and X was done in\nthe PR\")\n\n-   This requirement shall be dropped after a PR is 3 days old with stale or no\n    feedback.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 2.0908203125,
          "content": "The Matter SDK is an open source implementation of the Matter Specification\n(Matter). Matter is developed by members of the Connectivity Standards Alliance\n(Alliance) and promulgated by the Alliance.\n\nLIMITED RIGHTS TO THE MATTER SDK: Your rights to the Matter SDK are described in\nthe LICENSE. No warranty or assurance is made with respect to additional rights\nthat may be required to implement the Matter SDK. Use of the Matter SDK does not\nassure compliance with Matter and does not convey the right to identify any\ndevice, software, product or service as Matter compliant, certified or similar.\n\nCERTIFICATION REQUIRES MEMBERSHIP IN THE ALLIANCE: Certification by the Alliance\nof any device, software, product or service is limited to members of the\nAlliance, and requires compliance with applicable Alliance policies.\n\nUSE OF ALLIANCE TRADEMARKS AND LOGOS REQUIRES MEMBERSHIP IN THE ALLIANCE: Only\nthe Alliance and its members may use Alliance trademarks and logos, including,\nwithout limitation, the Matter trademarks and logos. All Alliance trademarks and\nlogos must be used in accordance with the Connectivity Standards Alliance\nTrademark and Logo Usage Guidelines and Terms, a copy of which can be found at\nwww.csa-iot.org/resources/governing-documents.\n\nJOINING CONNECTIVITY STANDARDS ALLIANCE: For information on how to become a\nmember of Connectivity Standards Alliance please visit\nwww.csa-iot.org/become-member.\n\nDISCLAIMER: Elements of the Matter SDK may be subject to third party\nintellectual property rights, including without limitation, patent, copyright or\ntrademark rights (such third party may or may not be a member of the Alliance).\nThe Alliance is not responsible and shall not be held responsible in any manner\nfor identifying or failing to identify any or all such third party intellectual\nproperty rights.\n\nMembers of the Alliance may own intellectual property rights in Matter which\nrights are subject to the Alliance’s Intellectual Property Rights Policy, which\ncan be found at www.csa-iot.org/resources/governing-documents, and not the\nLICENSE.\n\nThis NOTICE must be included on all copies of the Matter SDK.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.52734375,
          "content": "# Matter\n\n[![Builds](https://github.com/project-chip/connectedhomeip/workflows/Builds/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/build.yaml)\n\n**Builds**\n\n[![Android](https://github.com/project-chip/connectedhomeip/workflows/Android/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/android.yaml)\n[![Ameba](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Ameba/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-ameba.yaml)\n[![ASR](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20ASR/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-asr.yaml)\n[![BouffaloLab](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20BouffaloLab/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-bouffalolab.yaml)\n[![Darwin](https://github.com/project-chip/connectedhomeip/workflows/Darwin/badge.svg)](https://github.com/project-chip/connectedhomeip/blob/master/.github/workflows/darwin.yaml)\n[![TI CC26X2X7](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20TI%20CC13XX_26XX/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-cc13xx_26xx.yaml)\n[![TI CC32XX](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20TI%20CC32XX/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-cc32xx.yaml)\n[![EFR32](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20EFR32/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-efr32.yaml)\n[![ESP32](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20ESP32/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-esp32.yaml)\n[![Infineon](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-infineon.yaml/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-infineon.yaml)\n[![i.MX Linux](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20i.MX%20Linux/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-imx.yaml)\n[![K32W with SE051](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20K32W%20with%20SE051/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-k32w.yaml)\n[![Linux ARM](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20ARM/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-arm.yaml)\n[![Linux Standalone](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20Standalone/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-standalone.yaml)\n[![Linux Standalone](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20Standalone/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-standalone.yaml)\n[![Mbed OS](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Mbed%20OS/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-mbed.yaml)\n[![MW320](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20MW320/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-mw320.yaml)\n[![nRF Connect SDK](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20nRF%20Connect%20SDK/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-nrfconnect.yaml)\n[![Open IoT SDK](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Open%20IoT%20SDK/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-openiotsdk.yaml)\n[![QPG](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20QPG/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-qpg.yaml)\n[![STM32](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20stm32/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-stm32.yaml)\n[![Telink](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Telink/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-telink.yaml)\n[![Tizen](https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Tizen/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/examples-tizen.yaml)\n\n**Tests**\n\n[![Unit / Integration Tests](https://github.com/project-chip/connectedhomeip/workflows/Unit%20/%20Integration%20Tests/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/unit_integration_test.yaml)\n[![Cirque](https://github.com/project-chip/connectedhomeip/workflows/Cirque/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/cirque.yaml)\n[![QEMU](https://github.com/project-chip/connectedhomeip/workflows/QEMU/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/qemu.yaml)\n\n**Tools**\n\n[![ZAP Templates](https://github.com/project-chip/connectedhomeip/workflows/ZAP/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/zap_templates.yaml)\n\n**Documentation**\n\n[![Documentation Build](https://github.com/project-chip/connectedhomeip/actions/workflows/docbuild.yaml/badge.svg)](https://github.com/project-chip/connectedhomeip/actions/workflows/docbuild.yaml)\n\n-   [Matter SDK documentation page](https://project-chip.github.io/connectedhomeip-doc/index.html)\n\n# About\n\nMatter (formerly Project CHIP) creates more connections between more objects,\nsimplifying development for manufacturers and increasing compatibility for\nconsumers, guided by the Connectivity Standards Alliance.\n\n# What is Matter?\n\nMatter is a unified, open-source application-layer connectivity standard built\nto enable developers and device manufacturers to connect and build reliable, and\nsecure ecosystems and increase compatibility among connected home devices. It is\nbuilt with market-proven technologies using Internet Protocol (IP) and is\ncompatible with Thread and Wi-Fi network transports. Matter was developed by a\nWorking Group within the Connectivity Standards Alliance (Alliance). This\nWorking Group develops and promotes the adoption of the Matter standard, a\nroyalty-free connectivity standard to increase compatibility among smart home\nproducts, with security as a fundamental design tenet. The vision that led major\nindustry players to come together to build Matter is that smart connectivity\nshould be simple, reliable, and interoperable.\n\nMatter simplifies development for manufacturers and increases compatibility for\nconsumers.\n\nThe standard was built around a shared belief that smart home devices should be\nsecure, reliable, and seamless to use. By building upon Internet Protocol (IP),\nMatter enables communication across smart home devices, mobile apps, and cloud\nservices and defines a specific set of IP-based networking technologies for\ndevice certification.\n\nThe Matter specification details everything necessary to implement a Matter\napplication and transport layer stack. It is intended to be used by implementers\nas a complete specification.\n\nThe Alliance officially opened the Matter Working Group on January 17, 2020, and\nthe specification is\n[available](https://csa-iot.org/developer-resource/specifications-download-request/)\nfor adoption now.\n\nVisit [buildwithmatter.com](https://buildwithmatter.com) to learn more and read\nthe latest news and updates about the project.\n\n# Project Overview\n\n## Development Goals\n\nMatter is developed with the following goals and principles in mind:\n\n**Unifying:** Matter is built with and on top of market-tested, existing\ntechnologies.\n\n**Interoperable:** The specification permits communication between any\nMatter-certified device, subject to users’ permission.\n\n**Secure:** The specification leverages modern security practices and protocols.\n\n**User Control:** The end user controls authorization for interaction with\ndevices.\n\n**Federated:** No single entity serves as a throttle or a single point of\nfailure for root of trust.\n\n**Robust:** The set of protocols specifies a complete lifecycle of a device —\nstarting with the seamless out-of-box experience, through operational protocols,\nto device and system management specifications required for proper function in\nthe presence of change.\n\n**Low Overhead:** The protocols are practically implementable on low\ncompute-resource devices, such as MCUs.\n\n**Pervasive:** The protocols are broadly deployable and accessible, by\nleveraging IP and being implementable on low-capability devices.\n\n**Ecosystem-Flexible:** The protocol is flexible enough to accommodate\ndeployment in ecosystems with differing policies.\n\n**Easy to Use:** The protocol provides smooth, cohesive, integrated provisioning\nand out-of-box experience.\n\n**Open:** The Project’s design and technical processes are open and transparent\nto the general public, including non-members wherever possible.\n\n## Architecture Overview\n\nMatter aims to build a universal IPv6-based communication protocol for smart\nhome devices. The protocol defines the application layer that will be deployed\non devices and the different link layers to help maintain interoperability. The\nfollowing diagram illustrates the normal operational mode of the stack:\n![Matter Architecture Overview](docs/images/Matter_Arch_Overview.png)\n\nThe architecture is divided into layers to help separate the different\nresponsibilities and introduce a good level of encapsulation among the various\npieces of the protocol stack. The vast majority of interactions flow through the\nstack captured in the following Figure:\n\n![Matter Stack Architecture](docs/images/Matter_Layered_Arch.png)\n\n1. **Application:** High-order business logic of a device. For example, an\n   application that is focused on lighting might contain logic to handle turning\n   on/off the bulb as well as its color characteristics.\n\n2) **Data Model:** The data layer corresponds to the data and verb elements that\n   help support the functionality of the application. The Application operates\n   on these data structures when there is an intent to interact with the device.\n\n3. **Interaction Model:** The Interaction Model layer defines a set of\n   interactions that can be performed between a client and server device. For\n   example, reading or writing attributes on a server device would correspond to\n   application behavior on the device. These interactions operate on the\n   elements defined at the data model layer.\n\n4) **Action Framing:** Once an action is constructed using the Interaction\n   Model, it is serialized into a prescribed packed binary format to encode for\n   network transmission.\n\n5. **Security:** An encoded action frame is then sent down to the Security Layer\n   to encrypt and sign the payload to ensure that data is secured and\n   authenticated by both sender and receiver of a packet.\n\n6. **Message Framing & Routing:** With an interaction encrypted and signed, the\n   Message Layer constructs the payload format with required and optional header\n   fields; which specify the message's properties and some routing information.\n\n7) **IP Framing & Transport Management:** After the final payload has been\n   constructed, it is sent to the underlying transport protocol for IP\n   management of the data.\n\n# Current Status of Matter\n\nMatter’s design and technical processes are intended to be open and transparent\nto the general public, including to Working Group non-members wherever possible.\nThe availability of this GitHub repository and its source code under an Apache\nv2 license is an important and demonstrable step to achieving this commitment.\nMatter endeavors to bring together the best aspects of market-tested\ntechnologies and redeploy them as a unified and cohesive whole-system solution.\nThe overall goal of this approach is to bring the benefits of Matter to\nconsumers and manufacturers as quickly as possible. As a result, what you\nobserve in this repository is an implementation-first approach to the technical\nspecification, vetting integrations in practice. The Matter repository is\ngrowing and evolving to implement the overall architecture. The repository\ncurrently contains the security foundations, message framing and dispatch, and\nan implementation of the interaction model and data model. The code examples\nshow simple interactions, and are supported on multiple transports -- Wi-Fi and\nThread -- starting with resource-constrained (i.e., memory, processing) silicon\nplatforms to help ensure Matter’s scalability.\n\n# How to Contribute\n\nWe welcome your contributions to Matter. Read our contribution guidelines\n[here](./CONTRIBUTING.md).\n\n# Building and Developing in Matter\n\nInstructions about how to build Matter can be found [here](./docs/README.md) .\n\n# Directory Structure\n\nThe Matter repository is structured as follows:\n\n| File/Folder        | Content                                                                                                                                               |\n| ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| build              | Build system support content and built output directories                                                                                             |\n| build_overrides    | Build system parameter customization for different platforms                                                                                          |\n| config             | Project configurations                                                                                                                                |\n| credentials        | Development and test credentials                                                                                                                      |\n| docs               | Documentation, including guides. Visit the [Matter SDK documentation page](https://project-chip.github.io/connectedhomeip-doc/index.html) to read it. |\n| examples           | Example firmware applications that demonstrate use of Matter                                                                                          |\n| integrations       | 3rd party integrations                                                                                                                                |\n| scripts            | Scripts needed to work with the Matter repository                                                                                                     |\n| src                | Implementation of Matter                                                                                                                              |\n| third_party        | 3rd party code used by Matter                                                                                                                         |\n| zzz_generated      | ZAP generated template code - Revolving around cluster information                                                                                    |\n| BUILD.gn           | Build file for the GN build system                                                                                                                    |\n| CODE_OF_CONDUCT.md | Code of conduct for Matter and contribution to it                                                                                                     |\n| CONTRIBUTING.md    | Guidelines for contributing to Matter                                                                                                                 |\n| LICENSE            | Matter license file                                                                                                                                   |\n| REVIEWERS.md       | PR reviewers                                                                                                                                          |\n| gn_build.sh        | Build script for specific projects such as Android, EFR32, etc.                                                                                       |\n| README.md          | This file                                                                                                                                             |\n\n# License\n\nMatter is released under the [Apache 2.0 license](./LICENSE).\n"
        },
        {
          "name": "REVIEWERS.md",
          "type": "blob",
          "size": 0.94140625,
          "content": "People from the following groups can be chosen as, and act as required reviewers\non any PR\n\n| Group                                                                             | Company              |\n| --------------------------------------------------------------------------------- | -------------------- |\n| [reviewers-apple](https://github.com/orgs/project-chip/teams/reviewers-apple)     | Apple, Inc.          |\n| [reviewers-comcast](https://github.com/orgs/project-chip/teams/reviewers-comcast) | Comcast, Inc.        |\n| [reviewers-google](https://github.com/orgs/project-chip/teams/reviewers-google)   | Google, Inc.         |\n| [reviewers-nordic](https://github.com/orgs/project-chip/teams/reviewers-nordic)   | Nordic Semiconductor |\n| [reviewers-samsung](https://github.com/orgs/project-chip/teams/reviewers-samsung) | Samsung SmartThings  |\n| [reviewers-silabs](https://github.com/orgs/project-chip/teams/reviewers-silabs)   | Silicon Labs         |\n"
        },
        {
          "name": "SPECIFICATION_VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "1.2.0\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "credentials",
          "type": "tree",
          "content": null
        },
        {
          "name": "data_model",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gn_build.sh",
          "type": "blob",
          "size": 6.1748046875,
          "content": "#!/usr/bin/env bash\n#\n# Copyright (c) 2020 Project CHIP Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -e\n\nCHIP_ROOT=\"$(dirname \"$0\")\"\n\n_chip_red() {\n    echo -e \"\\033[0;31m$*\\033[0m\"\n}\n\n_chip_yellow() {\n    echo -e \"\\033[0;33m$*\\033[0m\"\n}\n\n_chip_banner() {\n    _chip_yellow '.--------------------------------'\n    _chip_yellow \"-- $1\"\n    _chip_yellow \"'--------------------------------\"\n}\n\n_chip_banner \"Environment bringup\"\n\ngit -C \"$CHIP_ROOT\" submodule update --init\n\n# TODO: Fix pigweed to bootstrap if necessary in activate.sh.\necho\necho \"NB: If this fails run \\\"source scripts/bootstrap.sh\\\"\"\n\nsource \"$CHIP_ROOT/scripts/activate.sh\"\n\n_chip_banner \"Instructions\"\n\necho\necho 'To activate existing build environment in your shell, run (do this first):'\necho source \"$CHIP_ROOT/scripts/activate.sh\"\n\necho\necho 'To re-create the build environment from scratch, run:'\necho source \"$CHIP_ROOT/scripts/bootstrap.sh\"\n\necho\necho 'To compile the generated debug build:'\necho ninja -C \"$CHIP_ROOT/out/debug\"\n\necho\necho 'To test the generated debug build (idempotent):'\necho ninja -C \"$CHIP_ROOT/out/debug\" check\n\necho\necho 'To compile the generated release build':\necho ninja -C \"$CHIP_ROOT/out/release\"\n\necho\necho 'To test the generated release build (idempotent):'\necho ninja -C \"$CHIP_ROOT/out/release\" check\n\necho\necho 'To build a custom build (for help run \"gn args --list out/debug\")'\necho gn args \"$CHIP_ROOT/out/custom\"\necho ninja -C \"$CHIP_ROOT/out/custom\"\n\nextra_args=\"\"\nuser_args=\"\"\nninja_args=()\n\nwhile getopts :d:j:k:l:nt:vw: opt; do\n    case \"$opt\" in\n        [nv])\n            ninja_args+=(\"-$opt\")\n            ;;\n        [djkltw])\n            ninja_args+=(\"-$opt\" \"$OPTARG\")\n            ;;\n        '?')\n            printf '\\nError: unknown option -%s\\n' \"$OPTARG\"\n            printf 'Usage: %s [ninja-options] [gn-args]\\n' \"$0\"\n            exit 1\n            ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nfor arg; do\n    case $arg in\n        enable_qpg_builds=true)\n            qpg_enabled=1\n            ;;\n        enable_efr32_builds=true)\n            efr32_enabled=1\n            ;;\n        enable_p6_builds=true)\n            p6_builds_enabled=1\n            ;;\n        psoc6_board=*)\n            p6_board_selected=1\n            ;;\n    esac\n    user_args+=\" $arg\"\ndone\n\n# Android SDK setup\nandroid_sdk_args=\"\"\n\nif [[ -d \"${ANDROID_NDK_HOME}/toolchains\" && -d \"${ANDROID_HOME}/platforms\" ]]; then\n    # Android prebuilt JAR setup\n    python3 third_party/android_deps/set_up_android_deps.py\n\n    android_sdk_args+=\"android_sdk_root=\\\"$ANDROID_HOME\\\" android_ndk_root=\\\"$ANDROID_NDK_HOME\\\"\"\n    extra_args+=\" $android_sdk_args enable_android_builds=true\"\nelse\n    echo\n    echo \"Hint: Set \\$ANDROID_HOME and \\$ANDROID_NDK_HOME to enable building for Android\"\n    echo \"      The required android sdk platform version is 21. It can be obtained from\"\n    echo \"      https://dl.google.com/android/repository/platform-26_r02.zip\"\nfi\n\necho\n\n# EFR32 SDK setup\nif [[ -z \"$efr32_enabled\" ]]; then\n    echo \"Hint: Pass enable_efr32_builds=true to enable building for EFR32\"\nelse\n    echo 'To build the EFR32 lock sample as a standalone project':\n    echo \"(cd $CHIP_ROOT/examples/lock-app/efr32; gn gen out/debug; ninja -C out/debug)\"\nfi\n\necho\n\n# PSoC6 Build setup\nif [[ -z \"$p6_builds_enabled\" ]]; then\n    echo \"Hint: Pass enable_p6_builds=true to this script to enable building for PSoC6-43012\"\nelse\n    psoc6_sdk_args=\"\"\n    if [[ -z \"$p6_board_selected\" ]]; then\n        psoc6_sdk_args=\"psoc6_board=\\\"CY8CKIT-062S2-43012\\\"\"\n    fi\nfi\n\n# K32W SDK setup\nk32w_sdk_args=\"\"\n\nif [[ -d \"$NXP_K32W0_SDK_ROOT\" ]]; then\n    k32w_sdk_args+=\"k32w0_sdk_root=\\\"$NXP_K32W0_SDK_ROOT\\\"\"\n    extra_args+=\" $k32w0_sdk_args enable_k32w_builds=true\"\nfi\n\necho\nif [[ ! -d \"$NXP_K32W0_SDK_ROOT\" ]]; then\n    echo \"Hint: Set \\$NXP_K32W0_SDK_ROOT to enable building for K32W061\"\nelse\n    echo 'To build the K32W lock sample as a standalone project':\n    echo \"(cd $CHIP_ROOT/examples/lock-app/nxp/k32w0; gn gen out/debug --args='$k32w_sdk_args'; ninja -C out/debug)\"\nfi\necho\n\nif [[ -z \"$qpg_enabled\" ]]; then\n    echo \"Hint: Pass enable_qpg_builds=true to this script to enable building for QPG\"\nelse\n    echo 'To build the QPG6100 lock sample as a standalone project:'\n    echo \"(cd $CHIP_ROOT/examples/lock-app/qpg; gn gen out/debug; ninja -C out/debug)\"\nfi\n\necho\n\n# TI SimpleLink Build setup\nti_simplelink_sdk_args=\"\"\n\nif [[ -f \"${TI_SYSCONFIG_ROOT}/sysconfig_cli.sh\" ]]; then\n    ti_simplelink_sdk_args+=\"ti_sysconfig_root=\\\"$TI_SYSCONFIG_ROOT\\\"\"\n    extra_args+=\" $ti_simplelink_sdk_args enable_ti_simplelink_builds=true\"\n\n    echo 'To build the cc13x2x7_26x2x7 lock sample as a standalone project':\n    echo \"(cd $CHIP_ROOT/examples/lock-app/cc13x2x7_26x2x7; gn gen out/debug --args='$ti_simplelink_sdk_args'; ninja -C out/debug)\"\nelse\n    echo \"Hint: Set \\$TI_SYSCONFIG_ROOT to enable building for cc13x2_26x2\"\nfi\n\necho\n\ntizen_sdk_args=\"\"\n\nif [[ -d \"${TIZEN_SDK_ROOT}\" && -d \"${TIZEN_SDK_SYSROOT}\" ]]; then\n    tizen_sdk_args+=\"tizen_sdk_root=\\\"$TIZEN_SDK_ROOT\\\" tizen_sdk_sysroot=\\\"$TIZEN_SDK_SYSROOT\\\"\"\n    extra_args+=\" $tizen_sdk_args enable_tizen_builds=true\"\nelse\n    echo\n    echo \"Hint: Set \\$TIZEN_SDK_ROOT and \\$TIZEN_SDK_SYSROOT to enable building for Tizen\"\n    echo \"      Required Tizen SDK can be obtained from\"\n    echo \"      https://developer.tizen.org/development/tizen-studio/download\"\nfi\n\necho\n\n_chip_banner \"Build: GN configure\"\n\ngn --root=\"$CHIP_ROOT\" gen --check --fail-on-unused-args \"$CHIP_ROOT/out/debug\" --args='target_os=\"all\"'\"$extra_args$user_args\"\ngn --root=\"$CHIP_ROOT\" gen --check --fail-on-unused-args \"$CHIP_ROOT/out/release\" --args='target_os=\"all\" is_debug=false'\"$extra_args$user_args\"\n\n_chip_banner \"Build: Ninja build\"\n\ntime ninja -C \"$CHIP_ROOT/out/debug\" \"${ninja_args[@]}\" all check\n"
        },
        {
          "name": "integrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "iwyu.imp",
          "type": "blob",
          "size": 0.9990234375,
          "content": "# General IWYU command example:\n#\n# iwyu_tool.py                                                  \\\n#    -p out/linux-x64-all-clusters-clang/compile_commands.json  \\\n#    src/lib/core/                                              \\\n#    --                                                         \\\n#    -Xiwyu --mapping_file=$(pwd)/iwyu.imp                      \\\n#    -Xiwyu --no_comments                                       \\\n#    -Xiwyu --comment_style=none                                \\\n#    -Xiwyu --cxx17ns                                           \\\n#    -Xiwyu no_fwd_decls                                        \\\n#  | tee out/iwyu.out\n#\n# cd out/linux-x64-all-clusters-clang\n#\n# fix_includes.py <../iwyu.out\n#\n[\n    { include: [ '\"system/SystemBuildConfig.h\"', private, '<system/SystemConfig.h>', public ] },\n    { include: [ '\"core/CHIPBuildConfig.h\"', private, '<lib/core/CHIPConfig.h>', public ] },\n    { include: [ '@\"platform/.*/CHIPPlatformConfig.h\"', private, '<lib/core/CHIPConfig.h>', public ] },\n]\n"
        },
        {
          "name": "kotlin-detect-config.yaml",
          "type": "blob",
          "size": 30.998046875,
          "content": "# this is NOT a full configuration file, it is expected to be used\n# with `--build-upon-default-config`\n#\n# Documentation at https://detekt.dev/docs/introduction/configurations\n\n# Exclude files with pre-existing issues BEFORE detect\n# Ideally this should be driven down to 0\n\nstyle:\n    MagicNumber:\n        excludes:\n            - \"**/examples/android/CHIPTest/app/src/test/java/com/tcl/chip/chiptest/ExampleUnitTest.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/bluetooth/BluetoothManager.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/AddressUpdateFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/MultiAdminClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/AddressCommissioningFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/DeviceProvisioningFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/EnterNetworkFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongImSubscribeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/Main.kt\"\n            - \"**/src/controller/java/src/matter/jsontlv/JsonToTlv.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Base38.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadParser.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeBasicOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeOnboardingPayloadParser.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/VendorId.kt\"\n            - \"**/src/controller/java/src/matter/tlv/tags.kt\"\n            - \"**/src/controller/java/src/matter/tlv/TlvWriter.kt\"\n            - \"**/src/controller/java/src/matter/tlv/types.kt\"\n            - \"**/src/controller/java/src/matter/tlv/utils.kt\"\n            - \"**/src/controller/java/src/matter/tlv/values.kt\"\n            - \"**/src/controller/java/src/matter/tlv/values.kt\"\n            - \"**/src/controller/java/src/matter/controller/model/Status.kt\"\n            - \"**/src/controller/java/tests/chip/devicecontroller/cluster/ChipClusterEventStructTest.kt\"\n            - \"**/src/controller/java/tests/chip/devicecontroller/cluster/ChipClusterStructTest.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReaderTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReadWriteTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvWriterTest.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    WildcardImport:\n        excludes:\n            - \"**/examples/android/CHIPTest/app/src/androidTest/java/com/tcl/chip/chiptest/ExampleInstrumentedTest.kt\"\n            - \"**/examples/android/CHIPTest/app/src/main/java/com/tcl/chip/chiptest/MainActivity.kt\"\n            - \"**/examples/android/CHIPTest/app/src/test/java/com/tcl/chip/chiptest/ExampleUnitTest.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/BasicClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/MultiAdminClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OnOffClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/UnpairDeviceFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/SelectActionFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/BarcodeFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/Main.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/jsontlv/JsonToTlv.kt\"\n            - \"**/src/controller/java/src/matter/jsontlv/TlvToJson.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n    NewLineAtEndOfFile:\n        excludes:\n            - \"**/examples/android/CHIPTest/app/src/androidTest/java/com/tcl/chip/chiptest/ExampleInstrumentedTest.kt\"\n            - \"**/examples/android/CHIPTest/app/src/test/java/com/tcl/chip/chiptest/ExampleUnitTest.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/AddressUpdateFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterInteractionFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterInteractionHistoryFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterInteractionSettingsFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/EndpointAdapter.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/EndpointItem.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/HistoryCommandAdapter.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/HistoryCommand.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/BarcodeFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Argument.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/ArgumentType.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Command.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CredentialsIssuer.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/IPAddress.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/MatterCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/CloseSessionCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/DiscoveryFilterType.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairAddressPaseCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairAlreadyDiscoveredCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairCodeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairCodePaseCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairCodeThreadCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairCodeWifiCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingModeType.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingNetworkType.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommissionerCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommissioningModeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkDeviceTypeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkFabricCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkInstanceNameCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongImInvokeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongImExtendableInvokeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongImWriteCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkShortCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkVendorCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/UnpairCommand.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Verhoeff.kt\"\n    MaxLineLength:\n        excludes:\n            - \"**/examples/android/CHIPTest/app/src/main/java/com/tcl/chip/chiptest/MainActivity.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/bluetooth/BluetoothManager.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/ChipClient.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/BasicClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/MultiAdminClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OnOffClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OpCredClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/DeviceProvisioningFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/CHIPLedgerDetailsFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Command.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/MatterCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkLongImSubscribeCommand.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/jsontlv/TlvToJson.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadParser.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeBasicOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n    UnusedParameter:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/bluetooth/BluetoothManager.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    ReturnCount:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/CHIPToolActivity.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/EnterNetworkFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Verhoeff.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n    UnusedPrivateProperty:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/CHIPToolActivity.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OnOffClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterInteractionFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/EnterNetworkFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/MatterCommand.kt\"\n            - \"**/src/controller/java/src/matter/controller/ReportCallbackJni.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Base38.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    ForbiddenComment:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/MultiAdminClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterInteractionFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/AddressCommissioningFragment.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeOnboardingPayloadParser.kt\"\n    ExplicitItLambdaParameter:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/HistoryCommandAdapter.kt\"\n    ThrowsCount:\n        excludes:\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/tlv/TlvReader.kt\"\n            - \"**/src/controller/java/src/matter/jsontlv/JsonToTlv.kt\"\n            - \"**/src/controller/java/src/matter/jsontlv/TlvToJson.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadParser.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Base38.kt\"\n    SerialVersionUIDInSerializableClass:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/HistoryCommand.kt\"\n    UnusedPrivateMember:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/BarcodeFragment.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/controller/Messages.kt\"\n            - \"**/src/controller/java/src/matter/controller/model/Paths.kt\"\n            - \"**/src/controller/java/src/matter/controller/ReportCallbackJni.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n    UseCheckOrError:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/tlv/tags.kt\"\n            - \"**/src/controller/java/src/matter/tlv/types.kt\"\n    UseRequire:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/jsontlv/JsonToTlv.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Verhoeff10.kt\"\n    UtilityClassWithPublicConstructor:\n        excludes:\n            - \"**/src/controller/java/src/matter/onboardingpayload/Verhoeff.kt\"\n    MayBeConst:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Base38.kt\"\n    FunctionOnlyReturningConstant:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/controller/Messages.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/QRCodeOnboardingPayloadGenerator.kt\"\n\nexceptions:\n    TooGenericExceptionCaught:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/BasicClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/BarcodeFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Argument.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/Main.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n    SwallowedException:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Argument.kt\"\n    TooGenericExceptionThrown:\n        excludes:\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/bdx/DownloadLogCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/bdx/PairOnNetworkLongDownloadLogCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/discover/DiscoverCommissionablesCommand.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    ThrowingExceptionsWithoutMessageOrCause:\n        excludes:\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n\nnaming:\n    VariableNaming:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n    FunctionNaming:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/SelectActionFragment.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReadWriteTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvWriterTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReaderTest.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n            - \"**/examples/android/CHIPTest/app/src/test/java/com/tcl/chip/chiptest/ExampleUnitTest.kt\"\n    ConstructorParameterNaming:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/HistoryCommandAdapter.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    FunctionParameterNaming:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n    TopLevelPropertyNaming:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n\nperformance:\n    SpreadOperator:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReaderTest.kt\"\n\npotential-bugs:\n    EqualsWithHashCodeExist:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n    ImplicitDefaultLocale:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadGenerator.kt\"\n\ncomplexity:\n    TooManyFunctions:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/CHIPToolActivity.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/AddressUpdateFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/GroupSettingFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OnOffClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OtaProviderClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/SensorClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/GenericChipDeviceListener.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/SelectActionFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/setuppayloadscanner/BarcodeFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/util/TlvParseUtil.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Command.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairingCommand.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/jsontlv/JsonToTlv.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n            - \"**/src/controller/java/src/matter/tlv/TlvReader.kt\"\n            - \"**/src/controller/java/src/matter/tlv/TlvWriter.kt\"\n            - \"**/src/controller/java/src/matter/controller/MatterControllerImpl.kt\"\n            - \"**/src/controller/java/src/matter/controller/CompletionListenerAdapter.kt\"\n            - \"**/src/controller/java/src/matter/controller/MatterController.kt\"\n            - \"**/src/controller/java/src/matter/controller/ReportCallbackJni.kt\"\n            - \"**/src/controller/java/src/matter/controller/model/States.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReadWriteTest.kt\"\n    NestedBlockDepth:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n    LongParameterList:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/clusterinteraction/ClusterDetailFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/Command.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/controller/MatterControllerImpl.kt\"\n            - \"**/src/controller/java/src/matter/controller/InvokeCallbackJni.kt\"\n            - \"**/src/controller/java/src/matter/controller/ReportCallbackJni.kt\"\n            - \"**/src/controller/java/src/matter/controller/model/States.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/OnboardingPayload.kt\"\n    LongMethod:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/AddressCommissioningFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/common/CommandManager.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/controller/MatterControllerImpl.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/Base38.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadGenerator.kt\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadParser.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/ManualCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/onboardingpayload/QRCodeTest.kt\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReaderTest.kt\"\n    LargeClass:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/WildcardFragment.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/tests/matter/tlv/TlvReadWriteTest.kt\"\n            - \"**/src/controller/java/tests/matter/jsontlv/JsonToTlvToJsonTest.kt\"\n    CyclomaticComplexMethod:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/tlv/TlvReader.kt\"\n            - \"**/src/controller/java/src/matter/tlv/types.kt\"\n            - \"**/src/controller/java/src/matter/jsontlv/TlvToJson.kt\"\n    ComplexCondition:\n        excludes:\n            - \"**/src/controller/java/generated/java/**/*\"\n            - \"**/src/controller/java/src/matter/onboardingpayload/ManualOnboardingPayloadGenerator.kt\"\n\nempty-blocks:\n    EmptyFunctionBlock:\n        excludes:\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/BasicClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/MultiAdminClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OnOffClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/clusterclient/OpCredClientFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/AddressCommissioningFragment.kt\"\n            - \"**/examples/android/CHIPTool/app/src/main/java/com/google/chip/chiptool/provisioning/DeviceProvisioningFragment.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/discover/DiscoverCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/discover/DiscoverCommissionersCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/CloseSessionCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairCodePaseCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommissionerCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkCommissioningModeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkDeviceTypeCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkFabricCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkInstanceNameCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkShortCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/PairOnNetworkVendorCommand.kt\"\n            - \"**/examples/java-matter-controller/java/src/com/matter/controller/commands/pairing/UnpairCommand.kt\"\n            - \"**/src/controller/java/generated/java/**/*\"\n"
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.07421875,
          "content": "queries:\n    - exclude: py/unused-import\n    - exclude: py/polluting-import\n"
        },
        {
          "name": "pigweed.json",
          "type": "blob",
          "size": 0.0888671875,
          "content": "{\n    \"pw\": {\n        \"pw_cli_analytics\": {\n            \"enabled\": false\n        }\n    }\n}\n"
        },
        {
          "name": "ruff.toml",
          "type": "blob",
          "size": 0.2763671875,
          "content": "exclude = [\n    \".environment\",\n    \".git\",\n    \".github\",\n    \".*\",\n    \"build\",\n    \"out\",\n    \"third_party\",\n    \"examples/common/QRCode/\",\n]\ntarget-version = \"py310\"\n\nline-length = 132\n\n[lint]\nselect = [\"E4\", \"E7\", \"E9\", \"F\"]\nignore = [\n    \"E721\" # We use it for good reasons\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "zzz_generated",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}