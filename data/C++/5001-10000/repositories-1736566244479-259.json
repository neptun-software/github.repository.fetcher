{
  "metadata": {
    "timestamp": 1736566244479,
    "page": 259,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "emcrisostomo/fswatch",
      "stars": 5092,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4130859375,
          "content": "# remove files from deployment using `git archive`\n\n# git files\n.gitattributes export-ignore\n.gitignore     export-ignore\n\n\n# several files and directories we never want to export \n# a little bit belt and braces as the most of these files\n# should never ever be in the repository\n\n.*~          export-ignore\n.kdev4/      export-ignore\n.idea/       export-ignore\n.travis.yml  export-ignore\n\n*.ac -crlf\n*.am -crlf\n*.sh -crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.189453125,
          "content": "# Binaries\nfswatch/src/fswatch\nfswatch.exe\nfswatch_test\n.libs\n*.lo\n*.o\ncmake-build-debug/\nbuild/\ndist/\n\n# Documentation\nlibfswatch.pdf\nlibfswatch/doc/doxygen/html\nlibfswatch/doc/doxygen/latex\nfswatch/doc/fswatch.html\nfswatch/doc/fswatch.pdf\n\n# Distribution files\n*.tar.gz\n\n# GNU Build System\nautom4te.cache/\n\n# IntelliJ IDEA\n.idea/\nout/*\n\n# Eclipse CDT\n.autotools\n.cproject\n.project\n.settings/\n\n# NetBeans\nnbproject/\n\n# VSCode\n.vscode/\n\n# GNU Build System\nautoscan.log\nconfigure.scan\n.deps\nMakefile\nMakefile.in\naclocal.m4\nconfig/\nconfig.*\nconfigure\nlibtool\nstamp-h1\n.dirstamp\n\n# CMake\nCMakeCache.txt\nCMakeFiles/*\n\n# libtool\n**/m4/libtool.m4\n**/m4/ltoptions.m4\n**/m4/ltsugar.m4\n**/m4/ltversion.m4\n**/m4/lt~obsolete.m4\n*.la\n\n# gettext\n**/ABOUT-NLS\n**/m4/build-to-host.m4\n**/m4/gettext.m4\n**/m4/host-cpu-c-abi.m4\n**/m4/iconv.m4\n**/m4/lib-ld.m4\n**/m4/lib-link.m4\n**/m4/lib-prefix.m4\n**/m4/nls.m4\n**/m4/po.m4\n**/m4/progtest.m4\n**/po/Makefile.in.in\n**/po/Makevars.template\n**/po/Rules-quot\n**/po/boldquot.sed\n**/po/en@boldquot.header\n**/po/en@quot.header\n**/po/insert-header.sin\n**/po/quot.sed\n**/po/remove-potcdate.sin\n**/po/stamp-po\n**/po/*.insert-header\n**/po/remove-potcdate.sed\nPOTFILES\n\n# M4 macros required by gettext and added by autopoint\n**/m4/codeset.m4\n**/m4/extern-inline.m4\n**/m4/fcntl-o.m4\n**/m4/glibc2.m4\n**/m4/glibc21.m4\n**/m4/intdiv0.m4\n**/m4/intl.m4\n**/m4/intldir.m4\n**/m4/intlmacosx.m4\n**/m4/intmax.m4\n**/m4/inttypes-pri.m4\n**/m4/inttypes_h.m4\n**/m4/lcmessage.m4\n**/m4/lock.m4\n**/m4/longlong.m4\n**/m4/printf-posix.m4\n**/m4/size_max.m4\n**/m4/stdint_h.m4\n**/m4/threadlib.m4\n**/m4/uintmax_t.m4\n**/m4/visibility.m4\n**/m4/wchar_t.m4\n**/m4/wint_t.m4\n**/m4/xsize.m4\n\n# Automatically generated PO and GMO files\n**/po/en@boldquot.po\n**/po/en@quot.po\n**/po/*.gmo\n\n# texinfo\nstamp-vti\nversion.texi\n*.info\n*.t2p\n\n# Template files\nDoxyfile\nbuild-aux/create-pot-template.sh\nlibfswatch_config.h\nlibfswatch/libfswatch_config.h.in\nlibfswatch/src/libfswatch.pc\nscripts/fswatch-run-bash\nscripts/fswatch-run-zsh\ndocker/alpine/Dockerfile\ndocker/alpine-no-gettext/Dockerfile\ndocker/debian9/Dockerfile\ndocker/debian10/Dockerfile\ndocker/debian11/Dockerfile\ndocker/debian-stable/Dockerfile\ndocker/debian-testing/Dockerfile\n\n# Output files\nman/fswatch.7\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.1435546875,
          "content": "AUTHORS\n=======\n\nAuthors of libfswatch:\n\n  - Alan Dipert <alan@dipert.org> (v. < 1.0.0).\n\n  - Enrico M. Crisostomo <enrico.m.crisostomo@gmail.com>\n"
        },
        {
          "name": "AUTHORS.libfswatch",
          "type": "blob",
          "size": 0.095703125,
          "content": "AUTHORS\n=======\n\nAuthors of libfswatch:\n\n  - Enrico M. Crisostomo <enrico.m.crisostomo@gmail.com>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.4072265625,
          "content": "#\n# Copyright (c) 2014-2025 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\ncmake_minimum_required(VERSION 3.14)\nproject(fswatch VERSION 1.19.0 LANGUAGES C CXX)\n\n#@formatter:off\nset(PACKAGE           \"${PROJECT_NAME}\")\nset(PACKAGE_NAME      \"${PACKAGE}\")\nset(PACKAGE_VERSION   \"${PROJECT_VERSION}-develop\")\nset(PACKAGE_STRING    \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\nset(PACKAGE_AUTHOR    \"enrico.m.crisostomo@gmail.com\")\nset(PACKAGE_BUGREPORT \"${PACKAGE_AUTHOR}\")\nset(PACKAGE_TARNAME   \"${PACKAGE}\")\nset(PACKAGE_URL       \"https://github.com/emcrisostomo/${PACKAGE}\")\nset(LOCALEDIR         \"${CMAKE_INSTALL_PREFIX}/share/locale\" CACHE FILEPATH \"locale dir\")\n#@formatter:on\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\n# Add option to choose between shared and static libraries\noption(BUILD_SHARED_LIBS \"Build shared libraries\" OFF)\n\n# include modules\ninclude(FindGettext)\ninclude(FindIntl)\ninclude(CheckIncludeFileCXX)\ninclude(CheckStructHasMember)\ninclude(CheckCXXSymbolExists)\n\n# check for gettext and libintl\ncheck_include_file_cxx(getopt.h HAVE_GETOPT_H)\n\nif (HAVE_GETOPT_H)\n    check_cxx_symbol_exists(getopt_long getopt.h HAVE_GETOPT_LONG)\nendif (HAVE_GETOPT_H)\n\n# If both gettext and libintl are found, define the USE_NLS variable to\n# optionally disable them\nif (Intl_FOUND AND GETTEXT_FOUND)\n    option(USE_NLS \"Use NLS\" ON)\nendif ()\n\nif (USE_NLS)\n    set(ENABLE_NLS 1)\n\n    # gettext configuration\n    set(LINGUAS en en@quot en@boldquot it es)\n\n    foreach (language ${LINGUAS})\n        configure_file(${PROJECT_SOURCE_DIR}/po/${language}.po ${PROJECT_BINARY_DIR}/${language}.po COPYONLY)\n    endforeach ()\n\n    gettext_process_pot_file(po/${PACKAGE}.pot ALL INSTALL_DESTINATION share/locale LANGUAGES ${LINGUAS})\nendif ()\n\nadd_subdirectory(libfswatch)\nadd_subdirectory(fswatch/src)\nadd_subdirectory(test/src)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8740234375,
          "content": "Contributing to fswatch\n=======================\n\nThe easiest ways to contribute to `fswatch` are:\n\n  * Creating a new [issue].\n  * Forking the repository, make your contribution and submit a pull request.\n    See [GitHub Flow](#github-flow) for further information.\n\n[issue]: https://github.com/emcrisostomo/fswatch/issues/new\n\nGithub Flow\n-----------\n\nI chose to use the [Github flow][flow] for `fswatch`, so you are\nkindly required to follow the same model when making your contributions.\n\n[flow]: https://help.github.com/articles/github-flow/\n\nCoding Conventions and Style\n----------------------------\n\nThe C and C++ code uses `snake_case` and is formatted with a customized\n[Allman (BSD)][allman] style.  See [`README.codestyle`][codestyle] for further \ninformation on how setting up your IDE.\n\n[codestyle]: README.codestyle\n[allman]: https://en.wikipedia.org/wiki/Indent_style#Allman_style\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0.126953125,
          "content": "ChangeLog\n*********\n\nThis file has been automatically generated using the following command:\n\n    $ git log --oneline --decorate\n\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 15.9931640625,
          "content": "Installation Instructions\n*************************\n\nBasic Installation\n==================\n\n   The following shell commands:\n\n     test -f configure || ./bootstrap\n     ./configure\n     make\n     make install\n\nshould configure, build, and install this package.  The first line,\nwhich bootstraps, is intended for developers; when building from\ndistribution tarballs it does nothing and can be skipped.\n\n   The following more-detailed instructions are generic; see the\n‘README’ file for instructions specific to this package.  Some packages\nprovide this ‘INSTALL’ file but do not implement all of the features\ndocumented below.  The lack of an optional feature in a given package is\nnot necessarily a bug.  More recommendations for GNU packages can be\nfound in the GNU Coding Standards.\n\n   Many packages have scripts meant for developers instead of ordinary\nbuilders, as they may use developer tools that are less commonly\ninstalled, or they may access the network, which has privacy\nimplications.  If the ‘bootstrap’ shell script exists, it attempts to\nbuild the ‘configure’ shell script and related files, possibly using\ndeveloper tools or the network.  Because the output of ‘bootstrap’ is\nsystem-independent, it is normally run by a package developer so that\nits output can be put into the distribution tarball and ordinary\nbuilders and users need not run ‘bootstrap’.  Some packages have\ncommands like ‘./autopull.sh’ and ‘./autogen.sh’ that you can run\ninstead of ‘./bootstrap’, for more fine-grained control over\nbootstrapping.\n\n   The ‘configure’ shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a ‘Makefile’ in each directory of the package.\nIt may also create one or more ‘.h’ files containing system-dependent\ndefinitions.  Finally, it creates a shell script ‘config.status’ that\nyou can run in the future to recreate the current configuration, and a\nfile ‘config.log’ containing output useful for debugging ‘configure’.\n\n   It can also use an optional file (typically called ‘config.cache’ and\nenabled with ‘--cache-file=config.cache’ or simply ‘-C’) that saves the\nresults of its tests to speed up reconfiguring.  Caching is disabled by\ndefault to prevent problems with accidental use of stale cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how ‘configure’ could check whether to do them, and mail\ndiffs or instructions to the address given in the ‘README’ so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point ‘config.cache’ contains results you don’t want to keep, you\nmay remove or edit it.\n\n   The ‘autoconf’ program generates ‘configure’ from the file\n‘configure.ac’.  Normally you should edit ‘configure.ac’ instead of\nediting ‘configure’ directly.\n\n   The simplest way to compile this package is:\n\n  1. ‘cd’ to the directory containing the package’s source code.\n\n  2. If this is a developer checkout and file ‘configure’ does not yet\n     exist, type ‘./bootstrap’ to create it.  You may need special\n     developer tools and network access to bootstrap, and the network\n     access may have privacy implications.\n\n  3. Type ‘./configure’ to configure the package for your system.  This\n     might take a while.  While running, ‘configure’ prints messages\n     telling which features it is checking for.\n\n  4. Type ‘make’ to compile the package.\n\n  5. Optionally, type ‘make check’ to run any self-tests that come with\n     the package, generally using the just-built uninstalled binaries.\n\n  6. Type ‘make install’ to install the programs and any data files and\n     documentation.  When installing into a prefix owned by root, it is\n     recommended that the package be configured and built as a regular\n     user, and only the ‘make install’ phase executed with root\n     privileges.\n\n  7. Optionally, type ‘make installcheck’ to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior ‘make install’ required\n     root privileges, verifies that the installation completed\n     correctly.\n\n  8. You can remove the program binaries and object files from the\n     source code directory by typing ‘make clean’.  To also remove the\n     files that ‘configure’ created (so you can compile the package for\n     a different kind of computer), type ‘make distclean’.  There is\n     also a ‘make maintainer-clean’ target, but that is intended mainly\n     for the package’s developers.  If you use it, you may have to\n     bootstrap again.\n\n  9. If the package follows the GNU Coding Standards, you can type ‘make\n     uninstall’ to remove the installed files.\n\nCompilers and Options\n=====================\n\n   Some systems require unusual options for compilation or linking that\nthe ‘configure’ script does not know about.  Run ‘./configure --help’\nfor details on some of the pertinent environment variables.\n\n   You can give ‘configure’ initial values for configuration parameters\nby setting variables in the command line or in the environment.  Here is\nan example:\n\n     ./configure CC=gcc CFLAGS=-g LIBS=-lposix\n\n   See “Defining Variables” for more details.\n\nCompiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each system in their own\ndirectory.  To do this, you can use GNU ‘make’.  ‘cd’ to the directory\nwhere you want the object files and executables to go and run the\n‘configure’ script.  ‘configure’ automatically checks for the source\ncode in the directory that ‘configure’ is in and in ‘..’.  This is known\nas a “VPATH” build.\n\n   With a non-GNU ‘make’, it is safer to compile the package for one\nsystem at a time in the source code directory.  After you have installed\nthe package for one system, use ‘make distclean’ before reconfiguring\nfor another system.\n\n   Some platforms, notably macOS, support “fat” or “universal” binaries,\nwhere a single binary can execute on different architectures.  On these\nplatforms you can configure and compile just once, with options specific\nto that platform.\n\nInstallation Names\n==================\n\n   By default, ‘make install’ installs the package’s commands under\n‘/usr/local/bin’, include files under ‘/usr/local/include’, etc.  You\ncan specify an installation prefix other than ‘/usr/local’ by giving\n‘configure’ the option ‘--prefix=PREFIX’, where PREFIX must be an\nabsolute file name.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\npass the option ‘--exec-prefix=PREFIX’ to ‘configure’, the package uses\nPREFIX as the prefix for installing programs and libraries.\nDocumentation and other data files still use the regular prefix.\n\n   In addition, if you use an unusual directory layout you can give\noptions like ‘--bindir=DIR’ to specify different values for particular\nkinds of files.  Run ‘configure --help’ for a list of the directories\nyou can set and what kinds of files go in them.  In general, the default\nfor these options is expressed in terms of ‘${prefix}’, so that\nspecifying just ‘--prefix’ will affect all of the other directory\nspecifications that were not explicitly provided.\n\n   The most portable way to affect installation locations is to pass the\ncorrect locations to ‘configure’; however, many packages provide one or\nboth of the following shortcuts of passing variable assignments to the\n‘make install’ command line to change installation locations without\nhaving to reconfigure or recompile.\n\n   The first method involves providing an override variable for each\naffected directory.  For example, ‘make install\nprefix=/alternate/directory’ will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n‘${prefix}’.  Any directories that were specified during ‘configure’,\nbut not in terms of ‘${prefix}’, must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\nplatforms have known limitations with the semantics of shared libraries\nthat end up requiring recompilation when using this method, particularly\nnoticeable in packages that use GNU Libtool.\n\n   The second method involves providing the ‘DESTDIR’ variable.  For\nexample, ‘make install DESTDIR=/alternate/directory’ will prepend\n‘/alternate/directory’ before all installation names.  The approach of\n‘DESTDIR’ overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of ‘${prefix}’\nat ‘configure’ time.\n\nOptional Features\n=================\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving ‘configure’ the\noption ‘--program-prefix=PREFIX’ or ‘--program-suffix=SUFFIX’.\n\n   Some packages pay attention to ‘--enable-FEATURE’ and\n‘--disable-FEATURE’ options to ‘configure’, where FEATURE indicates an\noptional part of the package.  They may also pay attention to\n‘--with-PACKAGE’ and ‘--without-PACKAGE’ options, where PACKAGE is\nsomething like ‘gnu-ld’.  ‘./configure --help’ should mention the\n‘--enable-...’ and ‘--with-...’ options that the package recognizes.\n\n   Some packages offer the ability to configure how verbose the\nexecution of ‘make’ will be.  For these packages, running ‘./configure\n--enable-silent-rules’ sets the default to minimal output, which can be\noverridden with ‘make V=1’; while running ‘./configure\n--disable-silent-rules’ sets the default to verbose, which can be\noverridden with ‘make V=0’.\n\nSpecifying a System Type\n========================\n\n   By default ‘configure’ builds for the current system.  To create\nbinaries that can run on a different system type, specify a\n‘--host=TYPE’ option along with compiler variables that specify how to\ngenerate object code for TYPE.  For example, to create binaries intended\nto run on a 64-bit ARM processor:\n\n     ./configure --host=aarch64-linux-gnu \\\n        CC=aarch64-linux-gnu-gcc \\\n        CXX=aarch64-linux-gnu-g++\n\nIf done on a machine that can execute these binaries (e.g., via\n‘qemu-aarch64’, ‘$QEMU_LD_PREFIX’, and Linux’s ‘binfmt_misc’\ncapability), the build behaves like a native build.  Otherwise it is a\ncross-build: ‘configure’ will make cross-compilation guesses instead of\nrunning test programs, and ‘make check’ will not work.\n\n   A system type can either be a short name like ‘mingw64’, or a\ncanonical name like ‘x86_64-pc-linux-gnu’.  Canonical names have the\nform CPU-COMPANY-SYSTEM where SYSTEM is either OS or KERNEL-OS.  To\ncanonicalize and validate a system type, you can run the command\n‘config.sub’, which is often squirreled away in a subdirectory like\n‘build-aux’.  For example:\n\n     $ build-aux/config.sub arm64-linux\n     aarch64-unknown-linux-gnu\n     $ build-aux/config.sub riscv-lnx\n     Invalid configuration 'riscv-lnx': OS 'lnx' not recognized\n\nYou can look at the ‘config.sub’ file to see which types are recognized.\nIf the file is absent, this package does not need the system type.\n\n   If ‘configure’ fails with the diagnostic “cannot guess build type”.\n‘config.sub’ did not recognize your system’s type.  In this case, first\nfetch the newest versions of these files from the GNU config package\n(https://savannah.gnu.org/projects/config).  If that fixes things,\nplease report it to the maintainers of the package containing\n‘configure’.  Otherwise, you can try the configure option ‘--build=TYPE’\nwhere TYPE comes close to your system type; also, please report the\nproblem to <config-patches@gnu.org>.\n\n   For more details about configuring system types, see the Autoconf\ndocumentation.\n\nSharing Defaults\n================\n\n   If you want to set default values for ‘configure’ scripts to share,\nyou can create a site shell script called ‘config.site’ that gives\ndefault values for variables like ‘CC’, ‘cache_file’, and ‘prefix’.\n‘configure’ looks for ‘PREFIX/share/config.site’ if it exists, then\n‘PREFIX/etc/config.site’ if it exists.  Or, you can set the\n‘CONFIG_SITE’ environment variable to the location of the site script.\nA warning: not all ‘configure’ scripts look for a site script.\n\nDefining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to ‘configure’.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\nthem in the ‘configure’ command line, using ‘VAR=value’.  For example:\n\n     ./configure CC=/usr/local2/bin/gcc\n\ncauses the specified ‘gcc’ to be used as the C compiler (unless it is\noverridden in the site shell script).\n\nUnfortunately, this technique does not work for ‘CONFIG_SHELL’ due to an\nAutoconf limitation.  Until the limitation is lifted, you can use this\nworkaround:\n\n     CONFIG_SHELL=/bin/bash ./configure CONFIG_SHELL=/bin/bash\n\n‘configure’ Invocation\n======================\n\n   ‘configure’ recognizes the following options to control how it\noperates.\n\n‘--help’\n‘-h’\n     Print a summary of all of the options to ‘configure’, and exit.\n\n‘--help=short’\n‘--help=recursive’\n     Print a summary of the options unique to this package’s\n     ‘configure’, and exit.  The ‘short’ variant lists options used only\n     in the top level, while the ‘recursive’ variant lists options also\n     present in any nested packages.\n\n‘--version’\n‘-V’\n     Print the version of Autoconf used to generate the ‘configure’\n     script, and exit.\n\n‘--cache-file=FILE’\n     Enable the cache: use and save the results of the tests in FILE,\n     traditionally ‘config.cache’.  FILE defaults to ‘/dev/null’ to\n     disable caching.\n\n‘--config-cache’\n‘-C’\n     Alias for ‘--cache-file=config.cache’.\n\n‘--srcdir=DIR’\n     Look for the package’s source code in directory DIR.  Usually\n     ‘configure’ can determine that directory automatically.\n\n‘--prefix=DIR’\n     Use DIR as the installation prefix.  See “Installation Names” for\n     more details, including other options available for fine-tuning the\n     installation locations.\n\n‘--host=TYPE’\n     Build binaries for system TYPE.  See “Specifying a System Type”.\n\n‘--enable-FEATURE’\n‘--disable-FEATURE’\n     Enable or disable the optional FEATURE.  See “Optional Features”.\n\n‘--with-PACKAGE’\n‘--without-PACKAGE’\n     Use or omit PACKAGE when building.  See “Optional Features”.\n\n‘--quiet’\n‘--silent’\n‘-q’\n     Do not print messages saying which checks are being made.  To\n     suppress all normal output, redirect it to ‘/dev/null’ (any error\n     messages will still be shown).\n\n‘--no-create’\n‘-n’\n     Run the configure checks, but stop before creating any output\n     files.\n\n‘configure’ also recognizes several environment variables, and accepts\nsome other, less widely useful, options.  Run ‘configure --help’ for\nmore details.\n\nCopyright notice\n================\n\n   Copyright © 1994–1996, 1999–2002, 2004–2017, 2020–2024 Free Software\nFoundation, Inc.\n\n   Copying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n"
        },
        {
          "name": "LICENSE-2.0.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.923828125,
          "content": "#\n# Copyright (c) 2014-2017 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\nACLOCAL_AMFLAGS = -I m4\n\n# Refresh configuration if libtool dependencies change\nLIBTOOL_DEPS = @LIBTOOL_DEPS@\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) $(top_builddir)/config.status libtool\n\nif USE_NLS\n  FSW_PO_SUBDIR = po\nendif\n\nSUBDIRS = libfswatch fswatch $(FSW_PO_SUBDIR)\n\ndist_man_MANS  = man/fswatch.7\ndist_doc_DATA  = README.bsd\ndist_doc_DATA += README.codestyle\ndist_doc_DATA += README.freebsd\ndist_doc_DATA += README.gnu-build-system\ndist_doc_DATA += README.illumos\ndist_doc_DATA += README.md\ndist_doc_DATA += README.libfswatch.md\ndist_doc_DATA += README.linux\ndist_doc_DATA += README.macos\ndist_doc_DATA += README.smartos\ndist_doc_DATA += README.solaris\ndist_doc_DATA += README.windows\nif USE_NLS\n  dist_doc_DATA += ABOUT-NLS\nendif\ndist_doc_DATA += AUTHORS\ndist_doc_DATA += CONTRIBUTING.md\ndist_doc_DATA += COPYING\ndist_doc_DATA += NEWS\ndist_doc_DATA += AUTHORS.libfswatch\ndist_doc_DATA += NEWS.libfswatch\n\ndist-hook:\n# The recipe cannot assume a file in $(distdir) is writable.\n\tchmod u+w $(distdir)/ChangeLog\n\tgit log --oneline --decorate >> $(distdir)/ChangeLog\n\n# Manually distributing config.rpath seems not to be required any longer with\n# current Autotools.\n#\n# EXTRA_DIST = config/config.rpath\n\ndocker-images:\n\t./docker/build-images.sh\n\ndoxygen:\n\t$(MAKE) -C libfswatch/doc/doxygen doxygen\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 9.044921875,
          "content": "NEWS\n****\n\nNew in current-develop:\n\n  * Added event flag CloseWrite: file open for write has been closed. \n\n  * kqueue_monitor: added support for CloseWrite, adding support for events of\n    type NOTE_CLOSE_WRITE.\n\n  * inotify_monitor: added support for CloseWrite, adding support for events of\n    type IN_CLOSE_WRITE.\n\nNew in 1.18.0:\n\n  * The C++17 standard has been adopted: code has been rewritten and simplified\n    to adobe new features of the C++17 standard library such as std::filesystem.\n\n  * gettextize: gettext v. 0.22.5\n\n  * Documentation: add reference to Go bindings.\n\n  * Issue 313: Make -1, --one-event return $? when killed.\n\n  * Remove unused or obsolete configuration checks.\n\n  * Use the #include predefined notation to include generated configuration\n    headers.\n\n  * Use target CPPFLAGS instead of AM_CPPFLAGS.\n\n  * Update FSEventStreamEventFlags flags and add support to macOS 10.13+\n    features.\n\n  * Issue 278: FSEvents monitor: Add support to for extended data, to allow file\n    inodes to be collected with events.  This feature enables users to correlate\n    rename events.\n\n  * Issue 278: inotify monitor: Add support for correlation cookie.  This\n    feature enables users to correlate rename events.\n\n  * Add %c format specifier to print the event correlation id.\n\n  * Require <mutex>, <atomic> and thread_local and remove checks and conditional\n    code.\n\nNew in 1.17.1:\n\n  * Issue 291: Configuration header leaked into public interface in v. 1.17.0.\n\nNew in 1.17.0:\n\n  * Refactor code to replace usages of deprecated function\n    FSEventStreamScheduleWithRunLoop with FSEventStreamSetDispatchQueue.\n\n  * Issue 230: Improve responsiveness on macos: add support for\n    kFSEventStreamCreateFlagNoDefer.\n\n  * Issue 249: Man page still mentions fswatch-run.\n\n  * Issue 255: Implement event bubbling.\n\n  * Issue 256: -1 flag prints the file changed 3x before exiting.\n\nNew in 1.16.0:\n\n  * Update FSEvents flags and add support to macOS 10.10+ features.\n\n  * Issue 226: Add FreeBSD installation instructions.\n\n  * Issue 243: PlatformSpecific instead of Updated on Darwin 19.4.\n\n  * Issue 248: Update fswatch.7.in to add the Event Types section to the man\n    page.\n\n  * Issue 257: Update FreeBSD installation instructions.\n\n  * Issue 260: Fix memory leak.\n\n  * Issue 269: do not use global variable in function, pass parameter\n    instead.\n\n  * Issue 270: using both AC_CONFIG_MACRO_DIR and AC_CONFIG_MACRO_DIRS is\n    deprecated in autoconf-2.71\n\n  * Issue 272: Send AttributeModified on touch when using the FSevents monitor.\n\nNew in 1.14.0:\n\n  * Issue 218: fswatch v1.13 ignores the --monitor parameter and always uses the\n    default monitor.\n\nNew in 1.12.0:\n\n  * Issue 178: Migrate usages of POSIX regular expressions (<regex.h>) to the\n    C++11 regex library (<regex>).\n\n  * Issue 191: Wrong error message is printed when inotify event queue\n    overflows.\n\nNew in 1.11.3:\n\n  * Issue 192: Make the build reproducible.\n\nNew in 1.11.2:\n\n  * Issue 182: Generate a single message catalog for both fswatch and\n    libfswatch.\n\n  * NLS support can be disabled.\n\n  * gettext is an optional dependency.\n\nNew in 1.11.1:\n\n  * Issue 182: Remove mandatory dependency to git.\n\nNew in 1.11.0:\n\n  * Issue 174: Allow a numeric event mask to be specified.\n\n  * Issue 181: Make gettext an optional dependency.\n\nNew in 1.10.0:\n\n  * Issue 60: Allow excluding file patterns by passing in a file.\n\n  * Issue 119: Merge fswatch and libfswatch Autotools project into one.\n\n  * Issue 141: Add Docker files for Linux distributions used for testing.\n\n  * Add target to build fswatch on Alpine Linux and Debian.\n\nNew in 1.9.3:\n\n  * Only libfswatch has been updated.\n\nNew in 1.9.2:\n\n  * Issue 118: v. 1.9.0 breaks the -1 option.\n\nNew in 1.9.1:\n\n  * Only libfswatch has been updated.\n\nNew in 1.9.0:\n\n  * Issue 84: Add the possibility of scheduling a periodic event.\n\n  * Issue 114: fswatch does not track newly created directories recursively when\n    using the inotify monitor.\n\n  * The AX_CXX_COMPILE_STDCXX macro was patched so that the switches it adds to\n    the compiler are added to the preprocessor configuration as well.\n\nNew in 1.8.0:\n\n  * Unsupported CMake files and CLion project files are included as a courtesy.\n\nNew in 1.7.0:\n\n  * Issue 35: Support Solaris/Illumos File Events Notification API.\n\n  * Issue 98: Add (-d, --directories) option to request the monitor to watch\n    directories only during a recursive scan.\n\n  * Issue 99: A monitor using the File Events Notification API of the\n    Solaris/Illumos kernel has been added.\n\n  * Issue 101: Add flag to watch file accesses.\n\nNew in 1.6.1:\n\n  * Texinfo documentation now includes @dircategory and @direntry tags to be\n    compatible with install-info.\n\nNew in 1.6.0:\n\n  * fswatch can now be built on Microsoft Windows using Cygwin.\n\n  * A monitor for Microsoft Windows has been added.\n\n  * fswatch can report monitor buffer overflows (which cannot be avoided with\n    certain monitors) as regular events for callers to recover gracefully.\n\n  * Monitors can be customized by passing monitor-specific configuration\n    properties.\n\nNew in 1.5.1:\n\n  * fswatch-run scripts have been removed.\n\n  * Dependency on at least one supported shell (Zsh or Bash) has been removed.\n\n  * Fixes Issue 91: Can't compile fswatch 1.5.0 on FreeBSD 9.3-RELEASE.\n\nNew in 1.5.0:\n\n  * Fix issue 46: Allow filtering by event type.\n\nNew in 1.4.7:\n\n  * Fix bug in exclusion filter ordering (PR 75).\n\n  * README.md improvements.\n\n  * Documentation improvements.\n\nNew in 1.4.6:\n\n  * Fix issue 74: Assertion failed on fsw_destroy_session.\n\nNew in 1.4.5.3:\n\n  * Fix issue 67: 100% CPU usage while using libfswatch.  This issue only\n    affects the inotify monitor, available only on Linux.\n\nNew in 1.4.5.2:\n\n  * Fix issue 66: Exclude items with poll_monitor not considered.\n\nNew in 1.4.5.1:\n\n  * Do not distribute wrapper scripts for shells which are not installed (the\n    FreeBSD port system checks shebangs and complains).\n\nNew in 1.4.5:\n\n  * Add custom record formats.\n\nNew in 1.4.4:\n\n  * Localize fswatch and libfswatch using GNU gettext.\n\n  * Add Italian (it) localization.\n\n  * Add Spanish (es) localization.\n\nNew in 1.4.3.2:\n\n  * Fix Makefile.am because of broken link when DESTDIR installs are performed.\n\nNew in 1.4.3.1:\n\n  * Fix bug in fswatch-run wrapper script for ZSH which caused last argument not\n    to be split when passed to xargs.\n\nNew in 1.4.3:\n\n  * Add batch marker feature to delimit the boundaries of a batch of events.\n\n  * Add Texinfo documentation.\n\n  * libfswatch API is now versioned.\n\n  * Improved Autoconf checks.\n\n  * The inotify monitor now waits for events and honours the latency settings.\n\n  * Automaticaly generate the ChangeLog using Git.\n\n  * Update autogen.sh to honour some commonly used environment variables.\n\nNew in 1.4.2:\n\n  * The inotify monitor now provides the same functionality provided by all the\n    other monitors.  Recursive directory monitoring is now implemented.\n\n  * Version and revision is now determined dynamically from Git by ancillary\n    scripts invoked by the GNU Build System.\n\nNew in 1.4.1.1:\n\n  * fswatch does not compile on OS X < 10.9 because some required C++11 classes\n    are not supported by the C++ runtime.\n\nNew in 1.4.1:\n\n  * fswatch does not compile on OS X < 10.9 because some required C++11 classes\n    are not supported by the C++ runtime.\n\nNew in 1.4.0:\n\n  * The libfswatch library has been added with bindings for C and C++.\n\n  * fswatch let users specify the monitor to use by name.\n\nNew in 1.3.9:\n\n  * Fix Issue 23: Add `--include [regex]` option.\n\n  * Fix Issue 25: Add `--include [regex]` option.\n\n  * Paths can be included using -i/--include and providing a set of regular\n    expressions.\n\nNew in 1.3.8:\n\n  * Fix Issue 34: Diagnostic messages were output by the inotify monitor even if\n    fswatch was not run in verbose mode.\n\nNew in 1.3.7:\n\n  * Fix Issue 32: Problems building fswatch 1.3.6 on Mac v10.8.5\n\n  * Remove usages of C++11 initializer lists so that fswatch builds with older\n    compiler.\n\nNew in 1.3.6:\n\n  * Fix Issue 26: fswatch-run can't run a command with arguments.\n\n  * fswatch-run scripts are provided for ZSH and Bash.\n\n  * System is scanned during installation to check for ZSH and Bash\n    availability.  Path of found shells is substituted in the corresponding\n    scripts, otherwise the default /bin/[shell] is used.\n\n  * If a supported shell is found, the fswatch-run symbolic link is created in\n    the installation directory to the corresponding script.  The lookup order\n    of the shells is:\n    - ZSH.\n    - Bash.\n\nNew in 1.3.5:\n\n  * Fix Issue 27: Redirect usage text to standard error unless `-h` or\n    `--help`.\n\n  * Fix bug to write usage to standard error when invalid arguments are\n    specified.\n\nNew in 1.3.4:\n\n  * Fix bug in fswatch-run script to allow arguments to be passed to the\n    command to run.\n\nNew in 1.3.3:\n\n  * Add -o/--one-per-batch option to print a single message with the number of\n    change events in the current batch.\n\n  * Add fswatch-run shell script to mimic the behaviour of earlier fswatch\n    versions and launch the specified command when change events are received.\n\nNew in 1.3.2:\n\n  * fswatch has been merged with fsw (https://github.com/emcrisostomo/fsw).\n"
        },
        {
          "name": "NEWS.libfswatch",
          "type": "blob",
          "size": 6.5869140625,
          "content": "NEWS\n****\n\nNew in 1.18.0:\n\n  * Documentation: add reference to Go bindings.\n\n  * Update FSEventStreamEventFlags flags and add support to macOS 10.13+\n    features.\n\n  * Issue 278: FSEvents monitor: Add support to for extended data, to allow file\n    inodes to be collected with events.  This feature enables users to correlate\n    rename events.\n\n  * Issue 278: inotify monitor: Add support for correlation cookie.  This\n    feature enables users to correlate rename events.\n\n  * Update the event class to have a correlation id field.\n\n  * Remove private headers from the list of installed header files.\n\n  * Require <mutex>, <atomic> and thread_local and remove checks and conditional\n    code.\n\n  * Library interface does not depend on configuration any longer.\n\nNew in 1.17.1:\n\n  * Issue 291: Configuration header leaked into public interface in v. 1.17.0.\n  \nNew in 1.17.0:\n\n  * Refactor code to replace usages of deprecated function\n    FSEventStreamScheduleWithRunLoop with FSEventStreamSetDispatchQueue.\n\n  * Issue 230: Improve responsiveness on macos: add support for\n    kFSEventStreamCreateFlagNoDefer.\n\n  * Issue 255: Implement event bubbling.\n\nNew in 1.16.0:\n\n  * Issue 260: Fix memory leak.\n\nNew in 1.15.0:\n\n  * Issue 224: Add pkg-config support.\n\nNew in 1.14.0:\n\n  * Issue 218: fswatch v1.13 ignores the --monitor parameter and always uses the\n    default monitor.\n\nNew in 1.13.0:\n\n  * Issue 142: Static library will not have any monitor type available.\n\nNew in 1.12.0:\n\n  * Issue 178: Migrate usages of POSIX regular expressions (<regex.h>) to the\n    C++11 regex library (<regex>).\n\n  * Issue 191: Wrong error message is printed when inotify event queue overflows.\n\nNew in 1.11.3:\n\n  * Issue 185: Fix C99 compatibility in cevent.h.\n\n  * Issue 186: Session memory is not freed.\n\n  * Issue 188: Fix segmentation fault when starting monitor.\n\n  * Issue 189: Add function to the C API to check that a monitor is running.\n\n  * Issue 190: Fix stop sequence for FSEvents monitor.\n\nNew in 1.11.2:\n\n  * Issue 182: Generate a single message catalog for both fswatch and\n    libfswatch.\n\nNew in 1.11.1:\n\n  * Issue 182: Remove mandatory dependency to git.\n\nNew in 1.11.0:\n\n  * Issue 181: Make gettext an optional dependency.\n\nNew in 1.10.0:\n\n  * Add Doxygen documentation.\n\n  * Issue 60: Add function to load filters from a file.\n\n  * Issue 137: Deadlock on C function fsw_destroy_session if fsw_start_monitor\n    is called.\n\n  * Modify fsw_destroy_session function not to destroy a session that has a\n    running monitor.\n\n  * Issue 143: Add fsw_stop_monitor to the C API.\n\nNew in 1.9.3:\n\n  * Use C header names in C headers instead of C++.\n\n  * Explicitly use the enum keyword when referring to enum types in C headers.\n\n  * Remove default argument values from C headers.\n\nNew in 1.9.2:\n\n  * Issue 118: v. 1.9.0 breaks the -1 option.\n\nNew in 1.9.1:\n\n  * libfswatch API version 7:0:1.\n\nNew in 1.9.0:\n\n  * Update monitor::~monitor() to invoke monitor::stop(), close resources in\n    monitor::on_stop().\n\n  * Issue 84: Add the possibility of scheduling a periodic idle event.\n\n  * Run a separate thread to fire idle events.\n\n  * Improve logging.\n\n  * Do not fail if blocking calls are interrupted by a signal.\n\n  * Issue 114: fswatch does not track newly created directories recursively when\n    using the inotify monitor.\n\n  * The AX_CXX_COMPILE_STDCXX macro was patched so that the switches it adds to\n    the compiler are added to the preprocessor configuration as well.\n\nNew in 1.8.0:\n\n  * Unsupported CMake files and CLion project files are included as a courtesy.\n\n  * Parts of the code have been refactored to use move semantics.\n\n  * Fixed a bug in fsw::monitor_factory::create_monitor().\n\n  * Refactor fsw::monitor_factory to dynamically create the default monitor\n    using the factory registration information.\n\n  * Generate documentation using Doxygen.\n\n  * Texinfo documentation has been obsoleted by Doxygen documentation and has\n    been removed.\n\n  * Add fsw::monitor::stop() function to allow for cooperative monitor shutdown.\n\n  * Implement fsw::monitor::stop() on all available monitors.\n\n  * Fixed a but in the Solaris/Illumos monitor that prevented it to correctly\n    detect the ETIME status code upon waiting for events.\n\nNew in 1.7.0:\n\n  * Issue 35: Support Solaris/Illumos File Events Notification API.\n\n  * Issue 98: A monitor can be requested to watch directories only during a\n    recursive scan.\n\n  * Issue 99: A monitor using the File Events Notification API of the\n    Solaris/Illumos kernel has been added.\n\n  * Issue 101: Add flag to watch file accesses.\n\nNew in 1.6.1:\n\n  * Texinfo documentation now includes @dircategory and @direntry tags to be\n    compatible with install-info.\n\nNew in 1.6.0:\n\n  * libfswatch can now be built on Microsoft Windows using Cygwin.\n\n  * A monitor for Microsoft Windows has been added.\n\n  * libfswatch can report monitor buffer overflows (which cannot be avoided with\n    certain monitors) as regular events for callers to recover gracefully.\n\n  * Monitor can be customized by passing monitor-specific configuration\n    properties.\n\nNew in 1.5.1:\n\n  * Fixes Issue 91: Can't compile fswatch 1.5.0 on FreeBSD 9.3-RELEASE.\n\nNew in 1.5.0:\n\n  * Fix issue 46: Allow filtering by event type.\n\n  * Fix issue 83: Callback invocation should be moved into fsw::monitor.\n\nNew in 1.4.7:\n\n  * Provide a way to pass context data to the C API monitor callback.\n\nNew in 1.4.6:\n\n  * Fix issue 74: Assertion failed on fsw_destroy_session.\n\nNew in 1.4.5.3:\n\n  * Fix issue 67: 100% CPU usage while using libfswatch.  This issue only\n    affects the inotify monitor, available only on Linux.\n\nNew in 1.4.5.2:\n\n  * Fix issue 66: Exclude items with poll_monitor not considered.\n\nNew in 1.4.4:\n\n  * Localize fswatch and libfswatch using GNU gettext.\n\n  * Add Italian (it) localization.\n\n  * Add Spanish (es) localization.\n\nNew in 1.4.3:\n\n  * Add Texinfo documentation.\n\n  * libfswatch API is now versioned.\n\n  * Improved Autoconf checks.\n\n  * The inotify monitor now waits for events and honours the latency settings.\n\n  * Automaticaly generate the ChangeLog using Git.\n\n  * Update autogen.sh to honour some commonly used environment variables.\n\nNew in 1.4.2:\n\n  * The inotify monitor now provides the same functionality provided by all the\n    other monitors.  Recursive directory monitoring is now implemented.\n\n  * Version and revision is now determined dynamically from Git by ancillary\n    scripts invoked by the GNU Build System.\n\nNew in 1.4.0:\n\n  * The libfswatch library has been added with bindings for C and C++.\n\n  * Move monitors to separate library.\n\n  * Provide a libtool-configured library exposing the functionality of fswatch\n    monitors.\n\n  * Provide C and C++ headers and bindings.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "README.bsd",
          "type": "blob",
          "size": 0.9453125,
          "content": "README.bsd\n**********\n\nIntroduction\n============\n\nThe kqueue-based monitor should be compatible with any *BSD release with support\nfor kqueue.  So far, however, the author has only tested this release on FreeBSD\nv. >= 10.0.  Feedback on different *BSD systems is much appreciated and will\nbenefit other users as well.\n\n-----\n\nCopyright (c) 2014-2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>."
        },
        {
          "name": "README.codestyle",
          "type": "blob",
          "size": 2.462890625,
          "content": "README.codestyle\n================\n\nThe indent style used by `fswatch` is a custom Allman (BSD) style.  The code is\nformatted using NetBeans with the following format settings:\n\n    Indents\n    Indent Size = 2\n    Expand Tabs to Spaces = true\n    Tab Size = 2\n    Statement Continuation = 2\n    Constructor Continuation = 2\n    Preprocessor Directive = Preprocessor\n    # at Start Line = true\n    Indent Namespaces = true\n    Indent Case Statements = false\n    Absolute Label Indentation = true\n    Indent Visibility = None\n    Keep Extra Spaces = false\n\n    Braces Placement\n    Namespace Declaration = New Line\n    Class Declaration = New Line\n    Function Declaration = New Line\n    Ignore Empty Function = false\n    Lambda = New Line\n    \"switch\" statement = New Line\n    Other = New Line\n\n    Multiline Alignment\n    Function Parameters = true\n    Function Call Arguments = true\n    Array Initializer = false\n    \"for\" Statement = true\n    \"if\" Condition = true\n    \"while\" Condition = true\n    Other Parenthesis = false\n\n    New Line\n    Function Name = false\n    \"catch\" = true\n    \"else\" = true\n    \"while\" = true\n\n    Spaces Before Keywords\n    \"catch\" = true\n    \"else\" = true\n    \"while\" = true\n\n    Spaces Before Parentheses\n    Function Declaration = false\n    Function Call = false\n    \"catch\" = true\n    \"for\" = true\n    \"if\" = true\n    \"switch\" = true\n    \"while\" = true\n    Other Keywords = true\n\n    Spaces Around Operators\n    Assignment Operators = true\n    Binary Operators = true\n    Ternary Operators = true\n    Unary Operators = false\n\n    Spaces Before Left Braces\n    Class Declaration = true\n    Function Declaration = true\n    Lambda = true\n    Array Initializer = false\n    \"catch\" = true\n    \"do\" = true\n    \"else\" = true\n    \"for\" = true\n    \"if\" = true\n    \"switch\" = true\n    \"try\" = true\n    \"while\" = true\n\n    Spaces Within Parentheses\n    Function Declaration = false\n    Function Call = false\n    Braces = false\n    Parentheses = false\n    \"catch\" = false\n    \"for\" = false\n    \"if\" = false\n    \"switch\" = false\n    Type Cast = false\n    \"while\" = false\n\n    Other Spaces\n    Before Comma = false\n    After Comma = true\n    Before Semicolon = false\n    After Semicolon = true\n    Before Colon = true\n    After Colon = true\n    After Type Cast = true\n    After operator Keyword = false\n\n    Blank Lines\n    Before Class = 1\n    After Class Header = 0\n    Before Function = 1\n\n    Other\n    Add Leading Star in = true\n    Toggle block comment = false\n    Insert 'inline' keyword = false\n"
        },
        {
          "name": "README.freebsd",
          "type": "blob",
          "size": 1.8828125,
          "content": "README.freebsd\n**************\n\nIntroduction\n============\n\nThis file describes the steps required to build this bundle on a supported\nFreeBSD system.  See README for more information about the tested\nconfigurations.\n\nThe kqueue-based monitor should be compatible with any *BSD release with support\nfor kqueue.  So far, however, the author has only tested this release on FreeBSD\nv. >= 10.0.  Feedback on different *BSD systems is much appreciated and will\nbenefit other users as well.\n\nInstallation\n============\n\nSee the INSTALL file for detailed information about how to configure and install\nfswatch.\n\nfswatch is a C++ program and a C++ compiler compliant with the C++11 standard is\nrequired to compile it.  FreeBSD v. >= 10.0 ships by default with the CLang\ncompiler suite which builds this package correctly.  It can also be built with\nGCC installed from the package collection or ports tree.\n\nThe configure script enforces an ordered compiler search list and clang++ will\nbe used first if available.  If you do not like this choice and wish to use\nanother compiler set the value of the CXX environment variable to the name of\nyour compiler binary.  If, for example, you wish to use the g++ compiler, then\nuse this command to configure the build:\n\n    $ ./configure CXX=g++\n\n-----\n\nCopyright (c) 2014-2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.gnu-build-system",
          "type": "blob",
          "size": 2.9365234375,
          "content": "README.gnu-build-system\n=======================\n\nIntroduction\n------------\n\n`fswatch` is built using the GNU Build System (a.k.a. the Autotools) and\ndevelopers willing to modify the configuration files must have the GNU Build\nSystem installed in order to do so.\n\nFor further information about the GNU Build System and its use, please refer to\nits official documentation.\n\nInstalling the GNU Build System\n-------------------------------\n\nTo install the GNU Build System, the following operations must be performed:\n\n  * Get the GNU Build System components:\n    - [Autoconf] (>= v. 2.69).\n    - [Automake]: (>= v. 1.14.1).\n    - [Libtool]: (>= v. 2.4.2).\n    - [Gettext]: (>= v. 0.19.4).\n\n  * Install the packages in the following order:\n    - Autoconf\n    - Automake\n    - Libtool\n    - Gettext\n\n  * From now on, `<bundle>` will indicate any of the above-mentioned\n     components.\n\n  * Grab the sources:\n\n        $ wget <sources-url>\n\n  * Uncompress the source bundle:\n\n        $ gunzip <bundle>.tar.gz\n        $ tar -xf <bundle>.tar\n\n  * Configure the GNU Build System using the provided `autogen.sh` script:\n\n        $ ./autogen.sh\n\n    Whenever any component of the GNU Build System is updated, the `--force`\n    option should be passed to `autogen.sh`, which in turn forwards it to\n    `autoreconf`, to make sure that automatically generated scripts and macros\n    are updated:\n\n        $ ./autogen.sh --force\n\n  * Configure the package:\n\n        $ ./configure [...]\n\n  * If you want to install the package in the default location\n    (`/usr/local/bin`) you can invoke `./configure` with no option, otherwise\n    provide the desired installation directory using the `--prefix` option:\n\n        $ ./configure --prefix=/destdir\n\n  * Build the package:\n\n        $ make\n\n  * Test the components:\n\n        $ make check\n\n  * Test the installed components:\n\n        $ make check\n\n  * Install the components:\n\n        $ make install\n\n    Depending on the installation directory additional privileges may be\n    required.\n\n  * Add the installation directory to the `PATH`, otherwise builds of the\n    package may fail:\n\n        $ export PATH=/destdir/bin:$PATH\n\n[Autoconf]: https://www.gnu.org/software/autoconf/\n[Automake]: https://www.gnu.org/software/automake/\n[Libtool]: https://www.gnu.org/software/libtool/\n[Gettext]: https://www.gnu.org/software/gettext/\n-----\n\nCopyright (c) 2014-2017 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.illumos",
          "type": "blob",
          "size": 0.013671875,
          "content": "README.solaris"
        },
        {
          "name": "README.libfswatch.md",
          "type": "blob",
          "size": 1.8076171875,
          "content": "README\n======\n\n`libfswatch` is a library that provides developers the functionality of\n`fswatch`, the main `libfswatch` frontend.  The library provides both C and C++\nbindings. [Go bindings](https://github.com/dunglas/go-fswatch) are also available.\n\n`libfswatch` provides the following [documentation]:\n\n  * Texinfo documentation, included with the distribution.\n  * HTML documentation.\n  * PDF documentation.\n  * A [wiki] page.\n  * A man page.\n\n`libfswatch` official documentation is provided in Texinfo format.  This is the\nmost comprehensive source of information about `libfswatch` and the only\nauthoritative one.  The man page, in particular, is a stub that suggests the\nuser to use the info page instead.\n\nIf you are installing `libfswatch` using a package manager and you would like\nthe PDF manual to be bundled into the package, please send a feature request to\nthe package maintainer.\n\n[documentation]: http://emcrisostomo.github.io/fswatch/doc\n[wiki]: https://github.com/emcrisostomo/fswatch/wiki\n\nBug Reports\n-----------\n\nBug reports can be sent directly to the authors.\n\nContact the Authors\n-------------------\n\nThe author can be contacted on IRC, using the Freenode `#fswatch` channel.\n\n-----\n\nCopyright (c) 2013-2016 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.linux",
          "type": "blob",
          "size": 1.9873046875,
          "content": "README.linux\n************\n\nIntroduction\n============\n\nThis file describes the steps required to build fswatch on a supported GNU/Linux\nsystem.\n\nThe supported monitors on GNU/Linux systems are:\n\n  * The inotify monitor (on Linux kernels > 2.6.13).\n  * The poll monitor.\n\nThe availability of the inotify API is checked by configure and it will be built\ninto fswatch when found.  When available, the inotify monitor is the default\nchoice on GNU/Linux systems.\n\nThe list of monitors built into libfswatch can be read in the help message of\nfswatch:\n\n    $ fswatch --help\n\nInstallation\n============\n\nSee the INSTALL file for detailed information about how to configure and install\nfswatch.\n\nfswatch is a C++ program and a C++ compiler compliant with the C++11 standard is\nrequired to compile it.  Reasonably recent GNU/Linux distributions usually ship\nat least two such compilers:\n\n  * GCC.\n  * Clang.\n\nPlease, check your distribution documentation to find an appropriate C++\ncompiler and how to install it.\n\nThe configure script enforces an ordered compiler search list and clang++ will\nbe used first if available.  If you do not like this choice and wish to use\nanother compiler set the value of the CXX environment variable to the name of\nyour compiler binary.  If, for example, you wish to use the g++ compiler, then\nuse this command to configure the build:\n\n    $ ./configure CXX=g++\n\n-----\n\nCopyright (c) 2014-2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.macos",
          "type": "blob",
          "size": 4.6376953125,
          "content": "README.macos\n************\n\nIntroduction\n============\n\nThis file describes the steps required to build this bundle on a supported Apple\nmacOS system.  A complete C/C++ toolchain for macOS is provided with Apple\nXCode, which can be freely installed from the Apple App Store.  See README for\nmore information about the tested configurations.\n\nXCode\n=====\n\nIf you plan to build the bundle with CLang/LLVM, the easiest way to get a\nworking toolchain is installing Apple XCode.  Apple XCode ships with both the\nCLang/LLVM and the GCC compiler.\n\nXCode, however, does not install some required command line tools by default.\nTo install them, the following operations must be performed:\n\n  1. Choose the \"XCode/Preferences...\" menu item.\n\n  2. Navigate to the \"Downloads\" pane.\n\n  3. Select the \"Components\" tab.\n\n  4. Select the \"Command Line Tools\" item and press the \"Install\" button.\n\nXCode 4.x\n=========\n\nXCode 4 ships with the following C/C++ compilers:\n\n  1. Apple clang++/LLVM v. 4.2:\n       Apple LLVM version 4.2 (clang-425.0.28) (based on LLVM 3.2svn)\n       Target: x86_64-apple-darwin12.4.0\n       Thread model: posix\n\n  2. GNU GCC v. 4.2.1:\n       i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1\n       (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)\n\nOnly clang++ implements the required C++11 features required by fswatch, so that\nit must be configured with this compiler:\n\n  $ CXX=clang++ ./configure\n\nXCode 5.x\n=========\n\nXCode 5 ships with the following C/C++ compilers:\n\n  1. Apple clang++/LLVM v. 5.0:\n       Apple LLVM version 5.0 (clang-500.2.75) (based on LLVM 3.3svn)\n       Target: x86_64-apple-darwin12.5.0\n       Thread model: posix\n\n  2. GNU GCC v. 5.0:\n       Apple LLVM version 5.0 (clang-500.2.76) (based on LLVM 3.3svn)\n       Target: x86_64-apple-darwin12.5.0\n       Thread model: posix\n\nThe GCC suite has been deprecated in favour of LLVM/CLang and gcc/g++ are now\naliases to clang/clang++.  The project can be configured with the default\ncompiler:\n\n  $ ./configure\n\nGNU Build System\n================\n\nThe GNU Build System is required only by developers willing to modify the code\non a macOS machine.  Regular users only willing to install fswatch do not need\nthe GNU Build System.\n\nRecent XCode Command Line Tools releases are not shipping all the components of\nthe GNU Build System any longer.  macOS users are thus required to build an\nalternate GNU Build System on their system.\n\nThe required source bundles can be downloaded from their official web pages:\n\n  1. Autoconf:\n\n     (http://www.gnu.org/software/autoconf/) (>= v. 2.69)\n\n  2. Automake\n\n     (http://www.gnu.org/software/automake/) (>= v. 1.14.1)\n\n  3. Libtool:\n\n     (http://www.gnu.org/software/libtool/)  (>= v. 2.4.2)\n\nLibtool is not required to build this package but it's a core component of the\nGNU Build System.\n\nXCode Command Line Tools still ships GNU M4 (v. 1.4.6).\n\nTo avoid conflicts with the binaries installed by XCode, it is strongly\nsuggested to install the GNU Build System in an alternate location (such as the\ndefault /usr/local/bin) or in a private user folder.  To choose the desired\ninstall location, use the --prefix configure option.\n\nFor further instruction on building the GNU Build System from scratch, please\ncheck the README.gnu-build-system file.\n\nLocalization and gettext\n========================\n\nfswatch is localizable and locale support requires GNU gettext to be available\nat build time.  macOS does not ship gettext you will need to build it yourself\nor use a package manager such as MacPorts or Homebrew to install it.\n\nDepending on gettext installation path, configure may not be able to find\n<libintl.h> or libintl.  In this case, you will need to instruct configure about\ntheir location (this example assumes you use MacPorts' default installation path\n/opt/local):\n\n  $ CPPFLAGS=\"-I/opt/local/include\" LDFLAGS=\"-L/opt/local/lib\" ./configure\n\nIf configure detects that gettext is available, you will find a message such as:\n\n  checking whether to use NLS... yes\n\nor, which is equivalent, config.h will contain the following definition:\n\n  #define ENABLE_NLS 1\n\n-----\n\nCopyright (c) 2014-2021 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.275390625,
          "content": "[![License](https://img.shields.io/badge/license-GPL--3.0-blue.svg?style=flat)](https://github.com/emcrisostomo/fswatch/blob/master/COPYING)\n[![C/C++ CI](https://github.com/emcrisostomo/fswatch/actions/workflows/c-cpp.yml/badge.svg)](https://github.com/emcrisostomo/fswatch/actions/workflows/c-cpp.yml)\n[![CMake](https://github.com/emcrisostomo/fswatch/actions/workflows/cmake.yml/badge.svg)](https://github.com/emcrisostomo/fswatch/actions/workflows/cmake.yml)\n\nREADME\n======\n\n`fswatch` is a file change monitor that receives notifications when the contents\nof the specified files or directories are modified.  `fswatch` implements\nseveral monitors:\n\n  * A monitor based on the _File System Events API_ of Apple macOS.\n  * A monitor based on _kqueue_, a notification interface introduced in FreeBSD\n    4.1 (and supported on most *BSD systems, including macOS).\n  * A monitor based on the _File Events Notification_ API of the Solaris kernel\n    and its derivatives.\n  * A monitor based on _inotify_, a Linux kernel subsystem that reports file\n    system changes to applications.\n  * A monitor based on _ReadDirectoryChangesW_, a Microsoft Windows API that\n    reports changes to a directory.\n  * A monitor which periodically stats the file system, saves file modification\n    times in memory, and manually calculates file system changes (which works\n    anywhere `stat (2)` can be used).\n\n`fswatch` should build and work correctly on any system shipping either of the\naforementioned APIs.\n\nTable of Contents\n-----------------\n\n  * [libfswatch](#libfswatch)\n  * [Features](#features)\n  * [Limitations](#limitations)\n  * [Getting fswatch](#getting-fswatch)\n  * [Building from Source](#building-from-source)\n  * [Installation](#installation)\n  * [Documentation](#documentation)\n  * [Localization](#localization)\n  * [Usage](#usage)\n  * [Contributing](#contributing)\n  * [Bug Reports](#bug-reports)\n\nlibfswatch\n----------\n\n`fswatch` is a frontend of `libfswatch`, a library with C, C++ and\n[Go][go.binding] bindings.  More information on `libfswatch` can be found\n[here][README.libfswatch.md].\n\n[go.binding]: https://github.com/dunglas/go-fswatch \n[README.libfswatch.md]: README.libfswatch.md\n\nFeatures\n--------\n\n`fswatch` main features are:\n\n  * Support for many OS-specific APIs such as kevent, inotify, and FSEvents.\n  * Recursive directory monitoring.\n  * Path filtering using including and excluding regular expressions.\n  * Customizable record format.\n  * Support for periodic idle events.\n\nLimitations\n-----------\n\nThe limitations of `fswatch` depend largely on the monitor being used:\n\n  * The **FSEvents** monitor, available only on macOS, has no known limitations,\n    and scales very well with the number of files being observed.\n\n  * The **File Events Notification** monitor, available on Solaris kernels and\n    its derivatives, has no known limitations.\n\n  * The **kqueue** monitor, available on any \\*BSD system featuring kqueue,\n    requires a file descriptor to be opened for every file being watched.  As a\n    result, this monitor scales badly with the number of files being observed,\n    and may begin to misbehave as soon as the `fswatch` process runs out of file\n    descriptors.  In this case, `fswatch` dumps one error on standard error for\n    every file that cannot be opened.\n\n  * The **inotify** monitor, available on Linux since kernel 2.6.13, may suffer\n    a queue overflow if events are generated faster than they are read from the\n    queue.  In any case, the application is guaranteed to receive an overflow\n    notification which can be handled to gracefully recover.  `fswatch`\n    currently throws an exception if a queue overflow occurs.  Future versions\n    will handle the overflow by emitting proper notifications.\n\n  * The **Windows** monitor can only establish a watch _directories_, not files.\n    To watch a file, its parent directory must be watched in order to receive\n    change events for all the directory's children, _recursively_ at any depth.\n    Optionally, change events can be filtered to include only changes to the\n    desired file.\n\n  * The **poll** monitor, available on any platform, only relies on\n    available CPU and memory to perform its task.  The performance of this\n    monitor degrades linearly with the number of files being watched.\n\nUsage recommendations are as follows:\n\n  * On macOS, use only the `FSEvents` monitor (which is the default behaviour).\n\n  * On Solaris and its derivatives use the _File Events Notification_ monitor.\n\n  * On Linux, use the `inotify` monitor (which is the default behaviour).\n\n  * If the number of files to observe is sufficiently small, use the `kqueue`\n    monitor.  Beware that on some systems the maximum number of file descriptors\n    that can be opened by a process is set to a very low value (values as low as\n    256 are not uncommon), even if the operating system may allow a much larger\n    value.  In this case, check your OS documentation to raise this limit on\n    either a per process or a system-wide basis.\n\n  * If feasible, watch directories instead of files.  Properly crafting the\n    receiving side of the events to deal with directories may sensibly reduce\n    the monitor resource consumption.\n\n  * On Windows, use the `windows` monitor.\n\n  * If none of the above applies, use the poll monitor.  The authors' experience\n    indicates that `fswatch` requires approximately 150 MB of RAM memory to\n    observe a hierarchy of 500.000 files with a minimum path length of 32\n    characters.  A common bottleneck of the poll monitor is disk access, since\n    `stat()`-ing a great number of files may take a huge amount of time.  In\n    this case, the latency should be set to a sufficiently large value in order\n    to reduce the performance degradation that may result from frequent disk\n    access.\n\nGetting fswatch\n---------------\n\nA regular user may be able to fetch `fswatch` from the package manager of your\nOS or a third-party one.  If you are looking for `fswatch` for macOS, you can\ninstall it using either [MacPorts] or [Homebrew]:\n\n```\n# MacPorts\n$ port install fswatch\n\n# Homebrew\n$ brew install fswatch\n```\n\nOn FreeBSD, `fswatch` can be installed using [pkg]:\n\n```console\n# pkg install fswatch-mon\n```\n\nCheck your favourite package manager and let us know if `fswatch` is missing\nthere.\n\n[MacPorts]: https://www.macports.org\n[Homebrew]: http://brew.sh\n[pkg]: https://man.freebsd.org/pkg/8\n\nBuilding from Source\n--------------------\n\nA user who wishes to build `fswatch` should get a [release tarball][release].\nA release tarball contains everything a user needs to build `fswatch` on their\nsystem, following the instructions detailed in the Installation section below\nand the `INSTALL` file.\n\nA developer who wishes to modify `fswatch` should get the sources (either from a\nsource tarball or cloning the repository) and have the GNU Build System\ninstalled on their machine.  Please read `README.gnu-build-system` to get\nfurther details about how to bootstrap `fswatch` from sources on your machine.\n\nGetting a copy of the source repository is not recommended unless (i) you are a\ndeveloper, (ii) you have the GNU Build System installed on your machine, and\n(iii) you know how to bootstrap it on the sources.\n\nCMake-support is unofficially offered as a courtesy.\n\n[release]: https://github.com/emcrisostomo/fswatch/releases\n\nInstallation\n------------\n\nSee the `INSTALL` file for detailed information about how to configure and\ninstall `fswatch`.  Since the `fswatch` builds and uses dynamic libraries, in\nsome platforms you may need to perform additional tasks before you can use\n`fswatch`:\n\n  * Make sure the installation directory of dynamic libraries (`$PREFIX/lib`) is\n    included in the lookup paths of the dynamic linker of your operating system.\n    The default path, `/usr/local/lib`, will work in nearly every operating\n    system.\n  * Refreshing the links and cache to the dynamic libraries may be required.  In\n    GNU/Linux systems you may need to run `ldconfig`:\n\n        $ ldconfig\n\n`fswatch` is a C++ program and a C++ compiler compliant with the C++ standard\ncurrently used is required.\n\nAs of version 1.17.1 included, `fswatch` has required a C++11-compliant\ncompiler.  Subsequent versions require a C++17-compliant compiler.  Check your\nOS documentation for information about how to install the C++ toolchain and the\nC++ runtime.\n\nNo other software packages or dependencies are required to configure and install\n`fswatch` but the aforementioned APIs used by the file system monitors.\n\nDocumentation\n-------------\n\n`fswatch` provides the following [documentation]:\n\n  * Texinfo documentation, included with the distribution.\n  * HTML documentation.\n  * PDF documentation.\n  * A [wiki] page.\n  * A man page.\n\n`fswatch` official documentation is provided in Texinfo format.  This is the\nmost comprehensive source of information about `fswatch` and the only\nauthoritative one.  The man page, in particular, is a stub that suggests the\nuser to use the info page instead.\n\nIf you are installing `fswatch` using a package manager and you would like the\nPDF manual to be bundled into the package, please send a feature request to the\npackage maintainer.\n\n[documentation]: http://emcrisostomo.github.io/fswatch/doc\n[wiki]: https://github.com/emcrisostomo/fswatch/wiki\n\nLocalization\n------------\n\n`fswatch` is localizable and internally uses GNU `gettext` to decouple\nlocalizable string from their translation.  The currently available locales are:\n\n  * English (`en`).\n  * Italian (`it`).\n  * Spanish (`es`).\n\nTo build `fswatch` with localization support, you need to have `gettext`\ninstalled on your system.  If `configure` cannot find `<libintl.h>` or the\nlinker cannot find `libintl`, then you may need to manually provide their\nlocation to `configure`, usually using the `CPPFLAGS` and the `LDFLAGS`\nvariables.  See `README.macos` for an example.\n\nIf `gettext` is not available on your system, `fswatch` shall build correctly,\nbut it will lack localization support and the only available locale will be\nEnglish.\n\nUsage\n-----\n\n`fswatch` accepts a list of paths for which change events should be received:\n\n    $ fswatch [options] ... path-0 ... path-n\n\nThe event stream is created even if any of the paths do not exist yet.  If they\nare created after `fswatch` is launched, change events will be properly\nreceived.  Depending on the watcher being used, newly created paths will be\nmonitored after the amount of configured latency has elapsed.\n\nThe output of `fswatch` can be piped to other program in order to process it\nfurther:\n\n    $ fswatch -0 path | while read -d \"\" event\n      do\n        # do something with ${event}\n      done\n\nTo run a command when a set of change events is printed to standard output but\nno event details are required, then the following command can be used:\n\n    $ fswatch -o path | xargs -n1 -I{} program\n\nThe behaviour is consistent with earlier versions of `fswatch` (v. 0.x).\nPlease, read the _Compatibility Issues with fswatch v. 0.x_ section for further\ninformation.\n\nBy default `fswatch` chooses the best monitor available on the current platform,\nin terms of performance and resource consumption.  If the user wishes to specify\na different monitor, the `-m` option can be used to specify the monitor by name:\n\n    $ fswatch -m kqueue_monitor path\n\nThe list of available monitors can be obtained with the `-h` option.\n\nFor more information, refer to the `fswatch` documentation.\n\nContributing\n------------\n\nEverybody is welcome to contribute to `fswatch`.  Please, see\n[`CONTRIBUTING`][contrib] for further information.\n\n[contrib]: CONTRIBUTING.md\n\nBug Reports\n-----------\n\nBug reports can be sent directly to the authors.\n\nContact the Authors\n-------------------\n\nThe author can be contacted on IRC, using the Freenode `#fswatch` channel.\n\nLicense\n-------\n\nThis software is dual-licensed under the GPL v. 3.0 and the Apache License\nv. 2.0.\n\n-----\n\nCopyright (c) 2013-2024 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.smartos",
          "type": "blob",
          "size": 3.0341796875,
          "content": "README.smartos\n**************\n\nIntroduction\n============\n\nThis file describes the steps required to build this bundle on SmartOS.  A\ncomplete C/C++ toolchain for SmartOS is provided on the base-multiarch image.\n\nThe user is currently using the following image for the development of fswatch\non SmartOS:\n\n    UUID:    9250f5a8-6e9c-11e5-9cdb-67fab8707bfd\n    NAME:    base-multiarch\n    VERSION: 15.3.0\n\nSetting Up a Development Zone\n=============================\n\nA development zone can be setup using the following procedure:\n\n  * Search for the latest base-multiarch image:\n\n        $ imgadm avail | grep base-multiarch\n        9250f5a8-6e9c-11e5-9cdb-67fab8707bfd  base-multiarch            15.3.0      smartos  2015-10-09T15:44:05Z\n\n  * Install the latest image available:\n\n        $ imgadm import 9250f5a8-6e9c-11e5-9cdb-67fab8707bfd\n\n  * Create a zone manifest called development.json.  A simple zone manifest\n    template is the following:\n\n        {\n          \"brand\": \"joyent\",\n          \"image_uuid\": \"9250f5a8-6e9c-11e5-9cdb-67fab8707bfd\",\n          \"alias\": \"development\",\n          \"hostname\": \"development\",\n          \"max_physical_memory\": 4096,\n          \"quota\": 10,\n          \"resolvers\": [\"8.8.8.8\", \"8.8.4.4\"],\n          \"nics\": [\n            {\n              \"nic_tag\": \"admin\",\n              \"ip\": \"dhcp\"\n            }\n          ]\n        }\n\n  * Install a zone using the specified image and manifest:\n\n        $ vmadm create -f development.json\n\nPrerequisites\n=============\n\nThe following packages must be installed on the zone where fswatch is built:\n\n  * autoconf\n\n  * automake\n\n  * gettext\n\n  * libtool\n\n  * gcc49\n\n  * git\n\n  * gmake\n\n  * gtexinfo\n\nPackages can be installed using pkgin:\n\n    $ pkgin update\n    $ pkgin install package ...\n\nInstallation\n============\n\nSee the INSTALL file for detailed information about how to configure and install\nfswatch.\n\nfswatch is a C++ program and a C++ compiler compliant with the C++11 standard is\nrequired to compile it.  Check the documentation of your distribution to learn\nhow to install the required software.\n\nThe configure script enforces an ordered compiler search list and clang++ will\nbe used first if available.  If you do not like this choice and wish to use\nanother compiler set the value of the CXX environment variable to the name of\nyour compiler binary.  If, for example, you wish to use the g++ compiler, then\nuse this command to configure the build:\n\n    $ ./configure CXX=g++\n\n-----\n\nCopyright (c) 2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>."
        },
        {
          "name": "README.solaris",
          "type": "blob",
          "size": 2.0771484375,
          "content": "README.solaris\n**************\n\nIntroduction\n============\n\nThis file describes the steps required to build this bundle on a supported\nsystem running the Solaris or the Illumos kernel.  See README for more\ninformation about the tested configurations.\n\nWhen Illumos was created, the Solaris kernel already included the File Events\nNotification API.  Hence, the fen_monitor should be available on any system\nrunning Solaris (> 10) or an Illumos kernel.\n\nAdditionally, a Solaris/Illumos system should be able to use the following\nmonitors:\n\n  * inotify_monitor, depending on the kernel version.\n\n  * poll_monitor.\n\nSo far, however, the author has only tested this release on SmartOS.  Feedback\non different Solaris/Illumos systems is much appreciated and will benefit other\nusers as well.\n\nInstallation\n============\n\nSee the INSTALL file for detailed information about how to configure and install\nfswatch.\n\nfswatch is a C++ program and a C++ compiler compliant with the C++11 standard is\nrequired to compile it.  Check the documentation of your distribution to learn\nhow to install the required software.\n\nThe configure script enforces an ordered compiler search list and clang++ will\nbe used first if available.  If you do not like this choice and wish to use\nanother compiler set the value of the CXX environment variable to the name of\nyour compiler binary.  If, for example, you wish to use the g++ compiler, then\nuse this command to configure the build:\n\n    $ ./configure CXX=g++\n\n-----\n\nCopyright (c) 2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>."
        },
        {
          "name": "README.windows",
          "type": "blob",
          "size": 2.7724609375,
          "content": "README.windows\n**************\n\nIntroduction\n============\n\nThis file describes the steps required to build fswatch on Windows.  fswatch was\nborn as a POSIX application and the Windows monitor has been developed trying to\nreduce the dependencies on the Windows API at a minimum.  To fulfill this goal,\na dependency to Cygwin has been introduced.\n\nWindows has historically provided multiple versions of the same API for single\nbyte and multibyte character sets.  We have decided to only support the\nmultibyte API: the Windows monitor will thus not build on Windows system\nsupporting only the single-byte APIs.  In this case, the only available monitor\non the Windows OS will be the poll monitor.\n\nCygwin\n======\n\nCygwin is a required dependency and must be installed to provide the toolchain\nand the libraries required by fswatch.  The current Cygwin distribution can be\ndownloaded at:\n\n    https://cygwin.com\n\nCygwin is a modular environment and the following componentes are required to\nsuccessfully build fswatch:\n\n  * GNU GCC C++ compiler.\n\n  * GNU Autoconf.\n\n  * GNU Automake.\n\n  * GNU Autoconf.\n\n  * GNU libtool.\n\nThe following are optional:\n\n  * GNU gettext (optional)\n\nWindows SDK\n===========\n\nThe Windows SDK is required to successfully build fswatch since it ships the\nheaders and the libraries required to build Windows applications.  Please,\nconsult your Windows documentation to get the latest SDK for your platform.\n\nGNU Build System\n================\n\nFor further instruction on building the GNU Build System from scratch, please\ncheck the README.gnu-build-system file.\n\nLocalization and gettext\n========================\n\nfswatch is localizable and locale support requires GNU gettext to be available\nat build time.\n\nDepending on gettext installation path, configure may not be able to find\n<libintl.h> or libintl.  In this case, you will need to instruct configure about\ntheir location:\n\n  $ CPPFLAGS=\"-I/path/to/include\" LDFLAGS=\"-L/path/to/lib\" ./configure\n\nIf configure detects that gettext is available, you will find a message such as:\n\n  checking whether to use NLS... yes\n\nor, which is equivalent, config.h will contain the following definition:\n\n  #define ENABLE_NLS 1\n\n-----\n\nCopyright (c) 2014-2015 Enrico M. Crisostomo\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.8125,
          "content": "#!/bin/sh\n#\n# Copyright (c) 2014-2015 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n: ${AUTORECONF=autoreconf}\nAUTORECONFFLAGS=\"--warnings=all --verbose --install --force $ACLOCAL_FLAGS\"\n\n${AUTORECONF} ${AUTORECONFFLAGS} \"$@\" || exit 1\n"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-from-scratch.sh",
          "type": "blob",
          "size": 3.67578125,
          "content": "#!/bin/zsh\n# -*- vim:fenc=utf-8:et:sw=2:ts=2:sts=2\n#\n# Copyright (c) 2014-2015 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\nsetopt local_options\nsetopt local_traps\nunsetopt glob_subst\n\nset -o errexit\nset -o nounset\n\nPROGNAME=${0:t}\nPROGDIR=${0:h}\nBUG_REPORT=enrico.m.crisostomo@gmail.com\nPACKAGE_VERSION=1.0.0\ntypeset -r LIBFSWATCH_DOC_DIR=libfswatch/doc/doxygen\ntypeset -r FSWATCH_DOC_DIR=fswatch/doc\ntypeset -i ARGS_PROCESSED=0\ntypeset -a help_flag\ntypeset -a verbose_flag\ntypeset -a version_flag\nVERBOSE=0\ntypeset -a configure_opts\nREQUIRED_PROGS=( doxygen git )\n\nfor p in ${REQUIRED_PROGS}\ndo\n  command -v ${p} > /dev/null 2>&1 ||\n    {\n      >&2 print -- Cannot find required program: ${p}\n      exit 1\n    }\ndone\n\nprint_version()\n{\n  print -- \"${PROGNAME} ${PACKAGE_VERSION}\"\n  print -- \"Copyright (C) 2017 Enrico M. Crisostomo\"\n  print -- \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\"\n  print -- \"This is free software: you are free to change and redistribute it.\"\n  print -- \"There is NO WARRANTY, to the extent permitted by law.\"\n  print\n  print -- \"Written by Enrico M. Crisostomo\"\n}\n\nprint_usage()\n{\n  print -- \"${PROGNAME}\"\n  print\n  print -- \"Usage:\"\n  print -- \"${PROGNAME}\"\n  print\n  print -- \"Build the package from scratch by performing the following steps:\"\n  print -- \" - Run the maintainer-clean target.\"\n  print -- \" - Bootstrap the autotools.\"\n  print -- \" - Configure the package.\"\n  print -- \" - Run the distcheck target.\"\n  print -- \" - Run the maintainer-clean target.\"\n  print\n  print -- \"Options:\"\n  print -- \" -h, --help     Print this message.\"\n  print -- \" -v, --verbose  Print verbose output.\"\n  print -- \"     --version  Print the program version.\"\n}\n\nparse_opts()\n{\n  while getopts \":\" opt\n  do\n    case $opt in\n      \\?)\n        >&2 print -- Invalid option -${OPTARG}.\n        exit 1\n        ;;\n    esac\n  done\n\n  ARGS_PROCESSED=$((OPTIND - 1))\n}\n\n# main\nzparseopts -D \\\n           h=help_flag -help=help_flag \\\n           v=verbose_flag -verbose=verbose_flag \\\n           -version=version_flag\n\nif (( ${+help_flag[1]} > 0 ))\nthen\n  print_usage\n  exit 0\nfi\n\nif (( ${+verbose_flag[1]} > 0 ))\nthen\n  VERBOSE=1\nfi\n\nif (( ${+version_flag[1]} > 0 ))\nthen\n  print_version\n  exit 0\nfi\n\nparse_opts $* && shift ${ARGS_PROCESSED}\n\n(( $# == 0 )) ||\n  {\n    >&2 print -- \"Invalid number of arguments.\"\n    exit 1\n  }\n\nif (( ${VERBOSE} > 0 ))\nthen\n  configure_opts=( --enable-silent-rules )\nelse\n  configure_opts=( --disable-silent-rules )\nfi\n\ncd ${PROGDIR}\nmake maintainer-clean || true\nrm -rf dist\n./autogen.sh\n./configure ${configure_opts}\nmake -j distcheck\nmake -C fswatch html pdf\nmake -C ${LIBFSWATCH_DOC_DIR} doxygen\nmkdir -p dist/fswatch/pdf\nmkdir -p dist/libfswatch/pdf\ncp -r ${LIBFSWATCH_DOC_DIR}/html             dist/libfswatch\ncp    ${LIBFSWATCH_DOC_DIR}/latex/refman.pdf dist/libfswatch/pdf\ncp -r ${FSWATCH_DOC_DIR}/fswatch.html        dist/fswatch\ncp    ${FSWATCH_DOC_DIR}/fswatch.pdf         dist/fswatch/pdf\nmake maintainer-clean\n\n# Local variables:\n# coding: utf-8\n# mode: sh\n# eval: (sh-set-shell \"zsh\")\n# tab-width: 2\n# indent-tabs-mode: nil\n# sh-basic-offset: 2\n# sh-indentation: 2\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 9.146484375,
          "content": "#                                               -*- Autoconf -*-\n#\n# Copyright (C) 2014-2024 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n# Process this file with autoconf to produce a configure script.\n#\ndnl Copyright (C) 2014-2024 Enrico M. Crisostomo\nAC_PREREQ([2.69])\nm4_include([m4/fswatch_version.m4])\nm4_include([m4/libfswatch_version.m4])\nAC_INIT([fswatch], LIBFSWATCH_VERSION, [enrico.m.crisostomo@gmail.com], [], [https://github.com/emcrisostomo/fswatch])\nAC_COPYRIGHT([2013-2024 (C) Enrico M. Crisostomo])\nAC_REVISION([$Revision: LIBFSWATCH_REVISION$])\nAC_CONFIG_SRCDIR([fswatch/src/fswatch.cpp])\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_HEADERS([libfswatch/libfswatch_config.h])\nAC_CONFIG_FILES([Makefile])\nAC_CONFIG_FILES([libfswatch/Makefile])\nAC_CONFIG_FILES([libfswatch/doc/doxygen/Makefile])\nAC_CONFIG_FILES([libfswatch/src/Makefile])\nAC_CONFIG_FILES([libfswatch/src/libfswatch.pc])\nAC_CONFIG_FILES([fswatch/Makefile fswatch/src/Makefile fswatch/doc/Makefile])\nAC_CONFIG_FILES([po/Makefile.in])\nAC_CONFIG_FILES([man/fswatch.7])\nAC_CONFIG_MACRO_DIRS([m4])\n\n# Compute the canonical target-system type variables\nAC_CANONICAL_HOST\nHOST_VENDOR=$host_vendor\nHOST_OS=$host_os\nAC_SUBST([HOST_VENDOR])\nAC_SUBST([HOST_OS])\n\nAC_CANONICAL_TARGET\nTARGET_VENDOR=$target_vendor\nTARGET_OS=$target_os\nAC_SUBST([TARGET_VENDOR])\nAC_SUBST([TARGET_OS])\n\n# Initialize Automake.\nAM_INIT_AUTOMAKE([-Wall -Werror gnu subdir-objects std-options 1.14])\nAM_SILENT_RULES([yes])\nAM_PROG_AR\n\n# Configure language.\nAC_LANG(C++)\nAC_PROG_CXX([clang++ g++])\n\n# Initialize libtool.\nLT_PREREQ([2.4.2])\nLT_INIT\nAC_SUBST([LIBTOOL_DEPS])\n\n# Configure package\nAC_ARG_ENABLE([docker],\n  [AS_HELP_STRING([--enable-docker], [enable docker (default=no)])],\n  [use_docker=${enableval}],\n  [use_docker=no])\n\n# Check compiler\nAX_COMPILER_VENDOR\nAX_COMPILER_VERSION\n\n# GCC 4.9 is the first compiler that implements <regex>: 4.8 shipped a broken\n# implementation, so we have to explicitly check for a version >= 4.9\nAS_VAR_IF([ax_cv_cxx_compiler_vendor], [gnu], [dnl\n  AX_COMPARE_VERSION([${ax_cv_cxx_compiler_version}], [lt], [4.9], [AC_MSG_ERROR([GCC v. 4.9 is required])])\n])\n\n# OS-specific treatment\nAM_CONDITIONAL([OS_CYGWIN], [test \"x${target_os}\" = \"xcygwin\"])\n\n# Set library interface version\nAC_SUBST([AM_LIBFSWATCH_API_VERSION], LIBFSWATCH_API_VERSION)\n\n# Checks for programs.\nEMC_PATH_PROG([DOXYGEN],  [doxygen],  [], [AC_MSG_WARN([Doxygen support disabled])],  [doxygen path])\nAM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"${DOXYGEN}\"])\nAM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([libfswatch/doc/doxygen/Doxyfile])])\n\nEMC_PATH_PROG([MAKEINFO_PROG], [makeinfo], [], [AC_MSG_WARN([Makeinfo support disabled])], [makeinfo path])\nAM_CONDITIONAL([HAVE_MAKEINFO], [test -n \"${MAKEINFO_PROG}\"])\n\n# Initialize gettext.\nAM_GNU_GETTEXT([external])\nAM_GNU_GETTEXT_VERSION([0.21])\nAM_CONDITIONAL([USE_NLS], [test \"x${USE_NLS}\" = \"xyes\"])\n\n# Configure C++ compiler\nAX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\nAX_CXXFLAGS_WARN_ALL\n\n# Checks for libraries.\n\n# Check for optional header files.\nAC_CHECK_HEADERS([getopt.h])\n\n# Check for optional header files required to support OS-specific monitors\n\n# Check for macOS\nAS_CASE([${HOST_OS}], [\"darwin\"*], [\n    IS_DARWIN=true\n    DARWIN_VER=\"${HOST_OS#darwin}\"\n    AC_SUBST([IS_DARWIN])\n    AC_SUBST([DARWIN_VER])\n])\n\nAS_VAR_SET_IF([IS_DARWIN], [\n  AX_COMPARE_VERSION([${DARWIN_VER}], [ge], [9.0],  [AC_DEFINE([HAVE_MACOS_GE_10_5],  [1], [\"macOS is at least the specified version\"])])\n  AX_COMPARE_VERSION([${DARWIN_VER}], [ge], [11.0], [AC_DEFINE([HAVE_MACOS_GE_10_7],  [1], [\"macOS is at least the specified version\"])])\n  AX_COMPARE_VERSION([${DARWIN_VER}], [ge], [13.0], [AC_DEFINE([HAVE_MACOS_GE_10_9],  [1], [\"macOS is at least the specified version\"])])\n  AX_COMPARE_VERSION([${DARWIN_VER}], [ge], [14.0], [AC_DEFINE([HAVE_MACOS_GE_10_10], [1], [\"macOS is at least the specified version\"])])\n  AX_COMPARE_VERSION([${DARWIN_VER}], [ge], [17.0], [AC_DEFINE([HAVE_MACOS_GE_10_13], [1], [\"macOS is at least the specified version\"])])\n  # Check for macOS FSEvents.  FSEvents added file events in a later release, so\n  # this check must be performed separately.\n  AC_CHECK_HEADERS([CoreServices/CoreServices.h])\n  AS_VAR_IF([ac_cv_header_CoreServices_CoreServices_h], [\"yes\"], [AX_FSEVENTS_HAVE_FILE_EVENTS])\n])\n\nAM_CONDITIONAL([USE_FSEVENTS], [test \"x${ax_cv_fsevents_have_fseventstreamsetdispatchqueue}\" = \"xyes\"])\n\n# Check for kqueue: if the sys/event.h header is present, perform a check for\n# the kqueue and kevent functions.\nAC_CHECK_HEADERS([sys/event.h])\nAS_VAR_IF([ac_cv_header_sys_event_h], [\"yes\"], [\n  AS_VAR_SET([KQUEUE_AVAILABLE], [\"yes\"])\n  AC_CHECK_DECLS(\n    [kqueue, kevent],\n    [],\n    [AS_VAR_SET([KQUEUE_AVAILABLE], [\"no\"])],\n    [\n      AC_INCLUDES_DEFAULT\n      [#include <sys/event.h>]\n      [#include <sys/types.h>]\n      [#include <sys/time.h>]\n    ]\n  )\n  AC_CHECK_LIB([c], [kqueue], [], [AS_VAR_SET([KQUEUE_AVAILABLE], [\"no\"])])\n])\n\nAM_CONDITIONAL([USE_KQUEUE], [test \"x${KQUEUE_AVAILABLE}\" = \"xyes\"])\n\n# Check for Solaris/Illumos File Events Notification API.\nAC_CHECK_HEADERS([port.h])\nAS_VAR_IF([ac_cv_header_port_h], [\"yes\"], [\n  AS_VAR_SET([FEN_AVAILABLE], [\"yes\"])\n  AC_CHECK_DECLS(\n    [port_create],\n    [],\n    [AS_VAR_SET([FEN_AVAILABLE], [\"no\"])],\n    [\n      AC_INCLUDES_DEFAULT\n      [#include <port.h>]\n    ]\n  )\n  AC_CHECK_LIB([c], [port_create], [], [AS_VAR_SET([FEN_AVAILABLE], [\"no\"])])\n])\n\nAM_CONDITIONAL([USE_FEN], [test \"x${FEN_AVAILABLE}\" = \"xyes\"])\n\n# Check for Linux inotify.\nAC_CHECK_HEADERS([sys/inotify.h])\nAS_VAR_IF([ac_cv_header_sys_inotify_h], [\"yes\"], [\n  AS_VAR_SET([INOTIFY_AVAILABLE], [\"yes\"])\n  AC_CHECK_DECLS(\n    [inotify_init, inotify_add_watch, inotify_rm_watch],\n    [],\n    [AS_VAR_SET([INOTIFY_AVAILABLE], [\"no\"])],\n    [\n      AC_INCLUDES_DEFAULT\n      [#include <sys/inotify.h>]\n    ]\n  )\n  AC_CHECK_LIB([c], [inotify_init], [], [AS_VAR_SET([INOTIFY_AVAILABLE], [\"no\"])])\n])\n\nAM_CONDITIONAL([USE_INOTIFY],  [test \"x${INOTIFY_AVAILABLE}\" = \"xyes\"])\n\n# Check for Microsoft Windows directory change notification API\nAS_VAR_SET([WINDOWS_AVAILABLE], [\"yes\"])\nAC_CHECK_HEADERS([windows.h], [], [AS_VAR_SET([WINDOWS_AVAILABLE], [\"no\"])])\nAS_VAR_IF([WINDOWS_AVAILABLE], [\"yes\"], [\n  AC_CHECK_DECLS(\n    [FindFirstChangeNotification, FindNextChangeNotification, FindCloseChangeNotification, WaitForSingleObject, ReadDirectoryChangesW],\n    [],\n    [AS_VAR_SET([WINDOWS_AVAILABLE], [\"no\"])],\n    [\n      AC_INCLUDES_DEFAULT\n      [#include <windows.h>]\n    ]\n  )\n])\n\nAM_CONDITIONAL([USE_WINDOWS], [test \"x${WINDOWS_AVAILABLE}\" = \"xyes\"])\nAS_VAR_IF([WINDOWS_AVAILABLE], [\"yes\"], [AC_DEFINE([HAVE_WINDOWS], [1], [Windows API present.])])\n\n# Check for CygWin only if Windows is available\nAS_VAR_IF([WINDOWS_AVAILABLE], [\"yes\"], [\n  AS_VAR_SET([CYGWIN_AVAILABLE], [\"yes\"])\n  AC_CHECK_HEADERS([sys/cygwin.h], [], [AS_VAR_SET([CYGWIN_AVAILABLE], [\"no\"])])\n  AS_VAR_IF([CYGWIN_AVAILABLE], [\"yes\"], [\n    AC_CHECK_DECLS(\n      [cygwin_create_path],\n      [],\n      [AS_VAR_SET([CYGWIN_AVAILABLE], [\"no\"])],\n      [\n        AC_INCLUDES_DEFAULT\n        [#include <sys/cygwin.h>]\n      ]\n    )\n  ])\n])\n\nAM_CONDITIONAL([USE_CYGWIN], [test \"x${CYGWIN_AVAILABLE}\" = \"xyes\"])\nAS_VAR_IF([CYGWIN_AVAILABLE], [\"yes\"], [AC_DEFINE([HAVE_CYGWIN], [1], [CygWin API present.])])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_CHECK_MEMBERS([struct stat.st_mtime],\n  [],\n  [],\n  [\n    AC_INCLUDES_DEFAULT\n    #include <sys/stat.h>\n  ])\n\nAC_CHECK_MEMBERS([struct stat.st_mtimespec],\n  [],\n  [],\n  [\n    AC_INCLUDES_DEFAULT\n    #include <sys/stat.h>\n  ])\n\n# Checks for library functions.\nAC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK\n\n# Check for optional library functions.\nAS_VAR_IF([ac_cv_header_getopt_h], [\"yes\"], [AC_CHECK_FUNCS([getopt_long])])\n\n# Create Dockerfile for test build containers\nAS_VAR_IF([use_docker], [yes],\n  [\n    AX_GIT_CURRENT_BRANCH\n    AC_CONFIG_FILES([docker/alpine/Dockerfile])\n    AC_CONFIG_FILES([docker/alpine-no-gettext/Dockerfile])\n    AC_CONFIG_FILES([docker/debian10/Dockerfile])\n    AC_CONFIG_FILES([docker/debian11/Dockerfile])\n    AC_CONFIG_FILES([docker/debian-stable/Dockerfile])\n    AC_CONFIG_FILES([docker/debian-testing/Dockerfile])\n  ],\n  [])\n\n# Variables used in man files.\nAX_PROG_DATE\n\nif test -n \"${SOURCE_DATE_EPOCH}\"\nthen\n  AS_VAR_IF([ax_cv_prog_date_gnu], [yes], [MAN_DATE=$(LC_ALL=C        date --utc --date=@${SOURCE_DATE_EPOCH} +'%B %d, %Y')])\n  AS_VAR_IF([ax_cv_prog_date_bsd], [yes], [MAN_DATE=$(LC_ALL=C TZ=UTC date            -r ${SOURCE_DATE_EPOCH} +'%B %d, %Y')])\nelse\n  MAN_DATE=$(date +'%B %d, %Y')\nfi\n\nFSWATCH=${PACKAGE_NAME}\nMAN_BUG_REPORT=${PACKAGE_BUGREPORT}\n\nAC_SUBST([MAN_DATE])\nAC_SUBST([FSWATCH])\nAC_SUBST([MAN_BUG_REPORT])\n\nAC_OUTPUT\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "fswatch",
          "type": "tree",
          "content": null
        },
        {
          "name": "full-build-with-cmake.zsh",
          "type": "blob",
          "size": 3.2685546875,
          "content": "#!/bin/zsh\n# -*- vim:fenc=utf-8:et:sw=2:ts=2:sts=2\n#\n# Copyright (c) 2014-2024 Enrico M. Crisostomo\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n#\nsetopt local_options\nsetopt local_traps\nunsetopt glob_subst\n\nset -o errexit\nset -o nounset\n\nPROGNAME=${0:t}\nPROGDIR=${0:h}\nBUG_REPORT=enrico.m.crisostomo@gmail.com\nPACKAGE_VERSION=1.0.0\ntypeset -r LIBFSWATCH_DOC_DIR=libfswatch/doc/doxygen\ntypeset -r FSWATCH_DOC_DIR=fswatch/doc\ntypeset -i ARGS_PROCESSED=0\ntypeset -a help_flag\ntypeset -a version_flag\ntypeset -a configure_opts\nREQUIRED_PROGS=( git )\n\nfor p in ${REQUIRED_PROGS}\ndo\n  command -v ${p} > /dev/null 2>&1 ||\n    {\n      >&2 print -- Cannot find required program: ${p}\n      exit 1\n    }\ndone\n\nprint_version()\n{\n  print -- \"${PROGNAME} ${PACKAGE_VERSION}\"\n  print -- \"Copyright (C) 2024 Enrico M. Crisostomo\"\n  print -- \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\"\n  print -- \"This is free software: you are free to change and redistribute it.\"\n  print -- \"There is NO WARRANTY, to the extent permitted by law.\"\n  print\n  print -- \"Written by Enrico M. Crisostomo\"\n}\n\nprint_usage()\n{\n  print -- \"${PROGNAME}\"\n  print\n  print -- \"Usage:\"\n  print -- \"${PROGNAME}\"\n  print\n  print -- \"Build the package from scratch using CMake:\"\n  print -- \" - Clean the source tree using: git clean -xfd\"\n  print -- \" - Bootstrap the CMake build in build/\"\n  print -- \" - Make the package\"\n  print\n  print -- \"Options:\"\n  print -- \"     --version  Print the program version.\"\n}\n\nparse_opts()\n{\n  while getopts \":\" opt\n  do\n    case $opt in\n      \\?)\n        >&2 print -- Invalid option -${OPTARG}.\n        exit 1\n        ;;\n    esac\n  done\n\n  ARGS_PROCESSED=$((OPTIND - 1))\n}\n\n# main\nzparseopts -D \\\n           h=help_flag -help=help_flag \\\n           -version=version_flag\n\nif (( ${+help_flag[1]} > 0 ))\nthen\n  print_usage\n  exit 0\nfi\n\nif (( ${+version_flag[1]} > 0 ))\nthen\n  print_version\n  exit 0\nfi\n\nparse_opts $* && shift ${ARGS_PROCESSED}\n\n(( $# == 0 )) ||\n  {\n    >&2 print -- \"Invalid number of arguments.\"\n    exit 1\n  }\n\nprint -- \"This script will clean up the source tree, bootstrap the CMake build,\"\nprint -- \"and build fswatch.  Are you sure you want to continue? [y/N]\"\nread -k1 -q\n\nif [[ ${REPLY} == [yY] ]] ; then\n  print -- \"Cleaning up the source tree...\"\n  git clean -xfd\n  print -- \"Bootstrapping the CMake build...\"\n  mkdir build\n  print -- \"Configuring the package...\"\n  mkdir -p build\n  cd build\n  cmake ..\n  print -- \"Building the package...\"\n  make\n  print -- \"Running the tests...\"\n  make test\n  print -- \"Build was successful.\"\nelse\n  print -- \"Aborted.\"\nfi\n\n# Local variables:\n# coding: utf-8\n# mode: sh\n# eval: (sh-set-shell \"zsh\")\n# tab-width: 2\n# indent-tabs-mode: nil\n# sh-basic-offset: 2\n# sh-indentation: 2\n# End:\n"
        },
        {
          "name": "libfswatch",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}