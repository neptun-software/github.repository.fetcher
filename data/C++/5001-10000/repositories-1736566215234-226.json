{
  "metadata": {
    "timestamp": 1736566215234,
    "page": 226,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/Detours",
      "stars": 5384,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.19921875,
          "content": "# Top-most EditorConfig file\r\nroot = true\r\n\r\n# Use same style for all files\r\n[*]\r\nindent_style = space\r\nindent_size = 4\r\nend_of_line = crlf\r\ninsert_final_newline = false\r\ntrim_trailing_whitespace = true\r\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4140625,
          "content": "# C extensions\r\n*.so\r\n\r\n# Unit test / coverage reports\r\n.coverage\r\n.tox\r\nnosetests.xml\r\n\r\n# Translations\r\n*.mo\r\n\r\n# Mr Developer\r\n.mr.developer.cfg\r\n.project\r\n.pydevproject\r\n\r\n# vim\r\n*~\r\n*.swp\r\n\r\n# Visual Studio build\r\n*.ipch\r\n.vs/\r\noutput/\r\ninclude/\r\n*.exp\r\n*.pdb\r\n*.lib\r\n*.dll\r\n*.exe\r\nobj.*\r\n*.ipdb\r\n*.iobj\r\n*.tlog\r\n*.log\r\n*.obj\r\n*.user\r\n*.recipe\r\n/bin.*\r\n*.vcxproj.FileListAbsolute.txt\r\n*.vcxprojAssemblyReference.cache\r\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 4.7451171875,
          "content": "# Detours Contributor Credits\n\nThe following individuals have helped identify specific bugs and improvements\nin Detours. The entire Detours community has benefited from their help.\n\n* Jay Krell:          Identified error in DetourFindPayload that caused a\n                      incorrect failure when pcbData is NULL. (Build_342)\n\n* Jay Krell:          Identified issue with VirtualSize == 0 files created in\n                      NT 3.1 images. (Build_339)\n\n* Igor Odnovorov:     Identified an issue with the placement of the trampoline\n                      region when a function is detoured twice and the second\n                      trampoline region is outside of the +/- 2GB range of\n                      the target. (Build_337)\n\n* Jay Krell:          Identified need for some programs to enumerate the\n                      address of IAT entries. (Build_336)\n\n* Calvin Hsia:        Identified need for some program to change the excluded\n                      system region. (Build_336)\n\n* Adam Smith:         Identified error in failure handling when VirtualProect\n                      cannot make pages executable because the Prohibit\n                      Dynamic Code Generation mitigation policy has been\n                      applied to a process. (Build_335)\n\n* Ben Faull:          Identified fix to detour_alloc_region_from_lo and\n                      detour_alloc_region_from_hi that preserves ASLR entropy.\n                      (Build_334)\n\n* Shaoxiang Su:       Reported errors building with Visual Studio 2015.\n                      (Build_332)\n\n* Jay Krell:          Identified and resolved significant gaps in the X86, X64\n                      and IA64 disassemblers for instruction found in code,\n                      but seldom found in function prologues. (Build_331)\n\n* Allan Murphy:       Identify error in rep and jmp ds: encodings. (Build_331)\n\n* Philip Bacon:       Identified incorrect entry point return for pure\n                      resource-only binaries. (Build_330)\n\n* Jay Krell:          Identified failure in DetourAttachEx to update nAlign.\n                      (Build_330)\n\n* Sumit Sarin:        Helped debug error with packed binaries.\n                      (Build_329)\n\n* Nitya Kumar Sharma: Reported bug in DetourAfterWithDll for 32/64 agnostic\n                      EXEs.\n                      (Build_327)\n\n* Richard Black:      Identified a large number of typos in documentation.\n                      (Build_326)\n\n* Michael Bilodeau:   Identified bug in DetourUpdateProcessWithDll when the\n                      target process contains a Detours payload *after* all\n                      valid PE binaries.\n                      (Build_324)\n\n* Meera Jindal:       Reported bug in identification of target address in\n                      DetourCopyInstruction for jmp[] and call[] on x86 & x64,\n                      the ff15 and ff25 opcodes.\n                      (Build_323)\n\n* Ken Johnson:        Assistance with SAL 2.0 annotations.\n                      (Build_319)\n\n* Nick Wood:          Identified bug in DetourFindFunction on ARM.\n                      (Build_314)\n\n* Mark Russinovich:   Helped debug DetourCreateProcessWithDllEx.\n                      (Build_314)\n\n* John Lin:           Implementation idea for DetoursCreateProcessWithDllEx.\n                      (Build_314)\n\n* Andrew Zawadowskiy  Reported an improper memory page permissions\n                      vulnerability in Detours 2.1.  (Vulnerability does not\n                      exist in versions later than Detours 2.1.)\n                      (Build_223)\n\n* Nightxie:           Identified bug in detour_alloc_round_up_to_region.\n                      (Build_310)\n\n* Diana Milirud:      Identified bug in B* instructions on ARM.\n                      (Build_309)\n\n* Juan Carlos         Identified correct MSIL entry point for unsigned MSIL.\n  Luciani:            (Build_308)\n\n* Lee Hunt            Suggested improvements in algorithm for allocation of\n  Lawrence Landauer   trampoline regions on x64 to avoid collisions with\n  Joe Laughlin:       system DLLs.\n                      (Build_307)\n\n* Tyler Sims          Identified bug in handling of \"anycpu\" MSIL binaries\n  Darren Kennedy:     on x64.\n                      (Build_307)\n\n* Andre Vachon:       Help with optimized binaries.\n                      (Build 301)\n\n* Chris Mann:         Identified fix not forward ported from 2.2 to 3.0.\n                      (Build_301)\n\n* Mark Irving:        Identified bug with EXEs missing second import table.\n                      (Build_300)\n\n* Ben Schwarz:        Identified bug in handling of multi-byte NOPs.\n                      (Build_300)\n\n* Aaron Giles         Coded initial ARM/Thumb2 disassembler.\n  Jared Henderson:    (Build_300)\n\n* Doug Brubacher:     Coded initial x86 disassembler.\n                      (Build_100)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "Copyright (c) Microsoft Corporation.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0732421875,
          "content": "# Copyright (c) Microsoft Corporation\n\nAll rights reserved.\n\n# MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.0166015625,
          "content": "##############################################################################\n##\n##  Makefile for Detours.\n##\n##  Microsoft Research Detours Package\n##\n##  Copyright (c) Microsoft Corporation.  All rights reserved.\n##\n\nROOT = .\n!include \"$(ROOT)\\system.mak\"\n\nall:\n    cd \"$(MAKEDIR)\"\n    @if exist \"$(MAKEDIR)\\core\\makefile\" cd \"$(MAKEDIR)\\core\" && $(MAKE) /NOLOGO /$(MAKEFLAGS)\n    cd \"$(MAKEDIR)\\src\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS)\n    cd \"$(MAKEDIR)\\samples\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS)\n    cd \"$(MAKEDIR)\\tests\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS)\n    @if exist \"$(MAKEDIR)\\bugs\\makefile\" cd \"$(MAKEDIR)\\bugs\" && $(MAKE) /NOLOGO /$(MAKEFLAGS)\n    cd \"$(MAKEDIR)\"\n\nclean:\n    cd \"$(MAKEDIR)\"\n    @if exist \"$(MAKEDIR)\\core\\makefile\" cd \"$(MAKEDIR)\\core\" && $(MAKE) /NOLOGO /$(MAKEFLAGS) clean\n    cd \"$(MAKEDIR)\\src\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) clean\n    cd \"$(MAKEDIR)\\samples\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) clean\n    cd \"$(MAKEDIR)\\tests\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) clean\n    @if exist \"$(MAKEDIR)\\bugs\\makefile\" cd \"$(MAKEDIR)\\bugs\" && $(MAKE) /NOLOGO /$(MAKEFLAGS) clean\n    cd \"$(MAKEDIR)\"\n\nrealclean: clean\n    cd \"$(MAKEDIR)\"\n    @if exist \"$(MAKEDIR)\\core\\makefile\" cd \"$(MAKEDIR)\\core\" && $(MAKE) /NOLOGO /$(MAKEFLAGS) realclean\n    cd \"$(MAKEDIR)\\src\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) realclean\n    cd \"$(MAKEDIR)\\samples\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) realclean\n    cd \"$(MAKEDIR)\\tests\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) realclean\n    @if exist \"$(MAKEDIR)\\bugs\\makefile\" cd \"$(MAKEDIR)\\bugs\" && $(MAKE) /NOLOGO /$(MAKEFLAGS) realclean\n    cd \"$(MAKEDIR)\"\n    -rmdir /q /s $(INCDS) 2> nul\n    -rmdir /q /s $(LIBDS) 2> nul\n    -rmdir /q /s $(BINDS) 2> nul\n    -rmdir /q /s dist 2> nul\n    -del docsrc\\detours.chm 2> nul\n    -del /q *.msi 2>nul\n    -del /q /f /s *~ 2>nul\n\ntest:\n    cd \"$(MAKEDIR)\\samples\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) test\n    cd \"$(MAKEDIR)\\tests\"\n    @$(MAKE) /NOLOGO /$(MAKEFLAGS) test\n    cd \"$(MAKEDIR)\"\n\n################################################################# End of File.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1025390625,
          "content": "# Microsoft Research Detours Package\n\nDetours is a software package for monitoring and instrumenting API calls on Windows. Detours\nhas been used by many ISVs and  is also  used by product teams at Microsoft. Detours is now available under\na standard open source  license ([MIT](https://github.com/microsoft/Detours/blob/master/LICENSE.md)).  This simplifies licensing for programmers using Detours\nand allows the community to support Detours using open source tools and processes.\n\nDetours is compatible with the Windows NT family of \noperating systems: Windows NT, Windows XP, Windows Server 2003, Windows 7,\nWindows 8, and Windows 10.  It cannot be used by Windows Store apps\nbecause Detours requires APIs not available to those applications. \nThis repo contains the source code for version 4.0.1 of Detours.\n\nFor technical documentation on Detours, see the [Detours Wiki](https://github.com/microsoft/Detours/wiki).\nFor directions on how to build and run samples, see the\nsamples [README.txt](https://github.com/Microsoft/Detours/blob/master/samples/README.TXT) file.\n\n## Contributing\n\nThe [`Detours`](https://github.com/microsoft/detours) repository is where development is done.\nHere are some ways you can participate in the project:\n\n* [Answer questions](https://github.com/microsoft/detours/issues) about using Detours.\n* [Improve the Wiki](https://github.com/microsoft/detours/wiki).\n* [Submit bugs](https://github.com/microsoft/detours/issues) and help us verify fixes and changes as they are checked in.\n* Review [source code changes](https://github.com/microsoft/detours/pulls).\n\nMost contributions require you to agree to a Contributor License Agreement (CLA) declaring that\nyou have the right to, and actually do, grant us the rights to use your contribution.\nFor details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Issues, questions, and feedback\n\n* Open an issue on [GitHub Issues](https://github.com/Microsoft/detours/issues).\n\n## Mailing list for announcements\n\nThe detours-announce mailing list is a low-traffic email list for important announcements \nabout the project, such as the availability of new versions of Detours.  To join it, send \nan email to listserv@lists.research.microsoft.com with a \nmessage body containing only the text SUBSCRIBE DETOURS-ANNOUNCE.\nTo leave it, send an email to listserv@lists.research.microsoft.com with a \nmessage body containing only the text UNSUBSCRIBE DETOURS-ANNOUNCE.\n\n\n## License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the [MIT](LICENSE.md) License.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.8 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "system.mak",
          "type": "blob",
          "size": 4.94140625,
          "content": "##############################################################################\n##\n##  Establish build target type for Detours.\n##\n##  Microsoft Research Detours Package\n##\n##  Copyright (c) Microsoft Corporation.  All rights reserved.\n##\n\n############################################## Determine Processor Build Type.\n#\n# Default the detours architecture to match the compiler target that\n# has been selected by the user via the VS Developer Command Prompt\n# they launched.\n!IF \"$(DETOURS_TARGET_PROCESSOR)\" == \"\" && \"$(VSCMD_ARG_TGT_ARCH)\" != \"\"\nDETOURS_TARGET_PROCESSOR = $(VSCMD_ARG_TGT_ARCH)\n!ENDIF\n\n!IF \"$(DETOURS_TARGET_PROCESSOR)\" == \"\" && \"$(PROCESSOR_ARCHITEW6432)\" != \"\"\nDETOURS_TARGET_PROCESSOR = X86\n!ENDIF\n\n!IF \"$(DETOURS_TARGET_PROCESSOR)\" == \"\"\nDETOURS_TARGET_PROCESSOR = $(PROCESSOR_ARCHITECTURE)\n!ENDIF\n\n# Uppercase DETOURS_TARGET_PROCESSOR\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:a=A)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:b=B)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:c=C)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:d=D)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:e=E)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:f=F)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:g=G)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:h=H)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:i=I)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:j=J)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:k=K)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:l=L)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:m=M)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:n=N)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:o=O)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:p=P)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:q=Q)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:r=R)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:s=S)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:t=T)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:u=U)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:v=V)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:w=W)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:x=X)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:y=Y)\nDETOURS_TARGET_PROCESSOR=$(DETOURS_TARGET_PROCESSOR:z=Z)\n\n!IF \"$(DETOURS_TARGET_PROCESSOR)\" == \"AMD64\"\nDETOURS_TARGET_PROCESSOR = X64\n!ENDIF\n\n\n!if \"$(DETOURS_TARGET_PROCESSOR:64=)\" == \"$(DETOURS_TARGET_PROCESSOR)\"\nDETOURS_32BIT=1\nDETOURS_BITS=32\n!else\nDETOURS_64BIT=1\nDETOURS_BITS=64\n!endif\n\n########################################## Configure build based on Processor.\n##\n## DETOURS_OPTION_PROCESSOR: Set this macro if the processor *will* run code\n##                           from another ISA (i.e. x86 on x64).\n##\n##      DETOURS_OPTION_BITS: Set this macro if the processor *may* have\n##                           an alternative word size.\n##\n!IF \"$(DETOURS_TARGET_PROCESSOR)\" == \"X64\"\n#!MESSAGE Building for 64-bit X64.\nDETOURS_SOURCE_BROWSING = 0\nDETOURS_OPTION_PROCESSOR=X86\nDETOURS_OPTION_BITS=32\n!ELSEIF \"$(DETOURS_TARGET_PROCESSOR)\" == \"IA64\"\n#!MESSAGE Building for 64-bit IA64.\nDETOURS_OPTION_PROCESSOR=X86\nDETOURS_OPTION_BITS=32\n!ELSEIF \"$(DETOURS_TARGET_PROCESSOR)\" == \"X86\"\n#!MESSAGE Building for 32-bit X86.\nDETOURS_OPTION_BITS=64\n# Don't set DETOURS_OPTION_PROCESSOR for x64 because we don't *know* that\n# we'll run on a 64-bit machine.\n!ELSEIF \"$(DETOURS_TARGET_PROCESSOR)\" == \"ARM\"\n#!MESSAGE Building for 32-bit ARM.\n!ELSEIF \"$(DETOURS_TARGET_PROCESSOR)\" == \"ARM64\"\n#!MESSAGE Building for 64-bit ARM.\n!ELSE\n!MESSAGE Note: To select the target processor architecture set either\n!MESSAGE       PROCESSOR_ARCHITECTURE or DETOURS_TARGET_PROCESSOR.\n!MESSAGE\n!ERROR Unknown target processor: \"$(DETOURS_TARGET_PROCESSOR)\"\n!ENDIF\n\n##############################################################################\n##\n!IF \"$(DETOURS_CONFIG)\" == \"Debug\"\nDETOURS_DEBUG=1\n!ELSE\nDETOURS_DEBUG=0\n!ENDIF\n\nINCD = $(ROOT)\\include\nLIBD = $(ROOT)\\lib.$(DETOURS_TARGET_PROCESSOR)$(DETOURS_CONFIG)\nBIND = $(ROOT)\\bin.$(DETOURS_TARGET_PROCESSOR)$(DETOURS_CONFIG)\nOBJD = obj.$(DETOURS_TARGET_PROCESSOR)$(DETOURS_CONFIG)\n!IF \"$(DETOURS_OPTION_PROCESSOR)\" != \"\"\nOPTD = $(ROOT)\\bin.$(DETOURS_OPTION_PROCESSOR)$(DETOURS_CONFIG)\n!ENDIF\n\nINCDS = $(ROOT)\\include\n\nLIBDS = \\\n        $(ROOT)\\lib.x86$(DETOURS_CONFIG) \\\n        $(ROOT)\\lib.x64$(DETOURS_CONFIG) \\\n        $(ROOT)\\lib.ia64$(DETOURS_CONFIG) \\\n        $(ROOT)\\lib.arm$(DETOURS_CONFIG) \\\n        $(ROOT)\\lib.arm64$(DETOURS_CONFIG) \\\n\nBINDS = \\\n        $(ROOT)\\bin.x86$(DETOURS_CONFIG) \\\n        $(ROOT)\\bin.x64$(DETOURS_CONFIG) \\\n        $(ROOT)\\bin.ia64$(DETOURS_CONFIG) \\\n        $(ROOT)\\bin.arm$(DETOURS_CONFIG) \\\n        $(ROOT)\\bin.arm64$(DETOURS_CONFIG) \\\n\nOBJDS = \\\n        obj.x86$(DETOURS_CONFIG) \\\n        obj.x64$(DETOURS_CONFIG) \\\n        obj.ia64$(DETOURS_CONFIG) \\\n        obj.arm$(DETOURS_CONFIG) \\\n        obj.arm64$(DETOURS_CONFIG) \\\n\n##############################################################################\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}