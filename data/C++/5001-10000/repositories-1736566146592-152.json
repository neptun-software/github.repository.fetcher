{
  "metadata": {
    "timestamp": 1736566146592,
    "page": 152,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mrousavy/react-native-mmkv",
      "stars": 6463,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": ".DS_Store\n**/node_modules/\n\n# no yarn/npm in the root repo!\n/package-lock.json\n/yarn.lock\n\n# when switching from v2 -> v3 branches\n/example\n/ios\n/android\n/lib\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0849609375,
          "content": "[submodule \"package/MMKV\"]\n\tpath = package/MMKV\n\turl = https://github.com/Tencent/MMKV\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3603515625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[INSERT CONTACT METHOD].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.5244140625,
          "content": "# Contributing\n\nContributions are always welcome, no matter how large or small!\n\nWe want this community to be friendly and respectful to each other. Please follow it in all your interactions with the project. Before contributing, please read the [code of conduct](./CODE_OF_CONDUCT.md).\n\n## Development workflow\n\nTo get started with the project, run `npm i` in the `package/` directory to install the required dependencies for each package:\n\n```sh\nyarn\n```\n\nThe [example app](/example/) demonstrates usage of the library. You need to run it to test any changes you make.\n\nIt is configured to use the local version of the library, so any changes you make to the library's source code will be reflected in the example app. Changes to the library's JavaScript code will be reflected in the example app without a rebuild, but native code changes will require a rebuild of the example app.\n\nIf you want to use Android Studio or XCode to edit the native code, you can open the `example/android` or `example/ios` directories respectively in those editors. To edit the Objective-C or Swift files, open `example/ios/MmkvExample.xcworkspace` in XCode and find the source files at `Pods > Development Pods > react-native-mmkv`.\n\nTo edit the Java or Kotlin files, open `example/android` in Android studio and find the source files at `react-native-mmkv` under `Android`.\n\nYou can use various commands from the `package/` directory to work with the project.\n\nTo start the packager:\n\n```sh\nyarn example start\n```\n\nTo run the example app on Android:\n\n```sh\nyarn example android\n```\n\nTo run the example app on iOS:\n\n```sh\nyarn example ios\n```\n\nTo confirm that the app is running with the new architecture, you can check the Metro logs for a message like this:\n\n```sh\nRunning \"MmkvExample\" with {\"fabric\":true,\"initialProps\":{\"concurrentRoot\":true},\"rootTag\":1}\n```\n\nNote the `\"fabric\":true` and `\"concurrentRoot\":true` properties.\n\nMake sure your code passes TypeScript and ESLint. Run the following to verify:\n\n```sh\nyarn typecheck\nyarn lint\n```\n\nTo fix formatting errors, run the following:\n\n```sh\nyarn lint --fix\n```\n\nRemember to add tests for your change if possible. Run the unit tests by:\n\n```sh\nyarn test\n```\n\n### Commit message convention\n\nWe follow the [conventional commits specification](https://www.conventionalcommits.org/en) for our commit messages:\n\n- `fix`: bug fixes, e.g. fix crash due to deprecated method.\n- `feat`: new features, e.g. add new method to the module.\n- `refactor`: code refactor, e.g. migrate from class components to hooks.\n- `docs`: changes into documentation, e.g. add usage example for the module..\n- `test`: adding or updating tests, e.g. add integration tests using detox.\n- `chore`: tooling changes, e.g. change CI config.\n\nOur pre-commit hooks verify that your commit message matches this format when committing.\n\n### Linting and tests\n\n[ESLint](https://eslint.org/), [Prettier](https://prettier.io/), [TypeScript](https://www.typescriptlang.org/)\n\nWe use [TypeScript](https://www.typescriptlang.org/) for type checking, [ESLint](https://eslint.org/) with [Prettier](https://prettier.io/) for linting and formatting the code, and [Jest](https://jestjs.io/) for testing.\n\nOur pre-commit hooks verify that the linter and tests pass when committing.\n\n### Publishing to npm\n\nWe use [release-it](https://github.com/release-it/release-it) to make it easier to publish new versions. It handles common tasks like bumping version based on semver, creating tags and releases etc.\n\nTo publish new versions, run the following:\n\n```sh\nyarn release\n```\n\n### Scripts\n\nThe `package.json` file contains various scripts for common tasks:\n\n- `yarn`: setup project by installing dependencies.\n- `yarn typecheck`: type-check files with TypeScript.\n- `yarn lint`: lint files with ESLint.\n- `yarn test`: run unit tests with Jest.\n- `yarn example start`: start the Metro server for the example app.\n- `yarn example android`: run the example app on Android.\n- `yarn example ios`: run the example app on iOS.\n\n### Sending a pull request\n\n> **Working on your first pull request?** You can learn how from this _free_ series: [How to Contribute to an Open Source Project on GitHub](https://app.egghead.io/playlists/how-to-contribute-to-an-open-source-project-on-github).\n\nWhen you're sending a pull request:\n\n- Prefer small pull requests focused on one change.\n- Verify that linters and tests are passing.\n- Review the documentation to make sure it looks good.\n- Follow the pull request template when opening a pull request.\n- For pull requests that change the API or implementation, discuss with maintainers first by opening an issue.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2024 Marc Rousavy\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.025390625,
          "content": "<a href=\"https://margelo.io\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"./package/img/banner-dark.png\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"./package/img/banner-light.png\" />\n    <img alt=\"react-native-mmkv\" src=\"./package/img/banner-light.png\" />\n  </picture>\n</a>\n\n<div align=\"center\">\n  <h1 align=\"center\">MMKV</h1>\n  <h3 align=\"center\">The fastest key/value storage for React Native.</h3>\n</div>\n\n<div align=\"center\">\n  <a align=\"center\" href=\"https://github.com/mrousavy?tab=followers\">\n    <img src=\"https://img.shields.io/github/followers/mrousavy?label=Follow%20%40mrousavy&style=social\" />\n  </a>\n  <br/>\n  <a align=\"center\" href=\"https://twitter.com/mrousavy\">\n    <img src=\"https://img.shields.io/twitter/follow/mrousavy?label=Follow%20%40mrousavy&style=social\" />\n  </a>\n  <br />\n  <a href=\"https://github.com/sponsors/mrousavy\">\n    <img align=\"right\" width=\"160\" alt=\"This library helped you? Consider sponsoring!\" src=\".github/funding-octocat.svg\">\n  </a>\n</div>\n<br/>\n\n\n* **MMKV** is an efficient, small mobile key-value storage framework developed by WeChat. See [Tencent/MMKV](https://github.com/Tencent/MMKV) for more information\n* **react-native-mmkv** is a library that allows you to easily use **MMKV** inside your React Native app through fast and direct JS bindings to the native C++ library.\n\n## Features\n\n* **Get** and **set** strings, booleans, numbers and ArrayBuffers\n* **Fully synchronous** calls, no async/await, no Promises, no Bridge.\n* **Encryption** support (secure storage)\n* **Multiple instances** support (separate user-data with global data)\n* **Customizable storage location**\n* **High performance** because everything is **written in C++**\n* **~30x faster than AsyncStorage**\n* Uses [**JSI**](https://reactnative.dev/docs/the-new-architecture/landing-page#fast-javascriptnative-interfacing) and [**C++ TurboModules**](https://github.com/reactwg/react-native-new-architecture/blob/main/docs/turbo-modules-xplat.md) instead of the \"old\" Bridge\n* **iOS**, **Android** and **Web** support\n* Easy to use **React Hooks** API\n\n## react-native-mmkv V3\n\n> [!IMPORTANT]\n> react-native-mmkv V3 is now a pure C++ TurboModule, and **requires the new architecture to be enabled**. (react-native 0.75+)\n> - If you want to use react-native-mmkv 3.x.x, you need to enable the new architecture in your app (see [\"Enable the New Architecture for Apps\"](https://github.com/reactwg/react-native-new-architecture/blob/main/docs/enable-apps.md))\n> - For React-Native 0.74.x, use react-native-mmkv 3.0.1. For React-Native 0.75.x and higher, use react-native-mmkv 3.0.2 or higher.\n> - If you cannot use the new architecture yet, downgrade to react-native-mmkv 2.x.x for now.\n\n## Benchmark\n\n[StorageBenchmark](https://github.com/mrousavy/StorageBenchmark) compares popular storage libraries against each other by reading a value from storage for 1000 times:\n\n<div align=\"center\">\n  <a href=\"https://github.com/mrousavy/StorageBenchmark\">\n    <img src=\"./package/img/benchmark_1000_get.png\" />\n  </a>\n  <p>\n    <b>MMKV vs other storage libraries</b>: Reading a value from Storage 1000 times. <br/>\n    Measured in milliseconds on an iPhone 11 Pro, lower is better. <br/>\n  </p>\n</div>\n\n## Installation\n\n### React Native\n\n```sh\nyarn add react-native-mmkv\ncd ios && pod install\n```\n\n### Expo\n\n```sh\nnpx expo install react-native-mmkv\nnpx expo prebuild\n```\n\n## Usage\n\n### Create a new instance\n\nTo create a new instance of the MMKV storage, use the `MMKV` constructor. It is recommended that you re-use this instance throughout your entire app instead of creating a new instance each time, so `export` the `storage` object.\n\n#### Default\n\n```js\nimport { MMKV } from 'react-native-mmkv'\n\nexport const storage = new MMKV()\n```\n\nThis creates a new storage instance using the default MMKV storage ID (`mmkv.default`).\n\n#### App Groups or Extensions\n\nIf you want to share MMKV data between your app and other apps or app extensions in the same group, open `Info.plist` and create an `AppGroup` key with your app group's value. MMKV will then automatically store data inside the app group which can be read and written to from other apps or app extensions in the same group by making use of MMKV's multi processing mode.\nSee [Configuring App Groups](https://developer.apple.com/documentation/xcode/configuring-app-groups).\n\n#### Customize\n\n```js\nimport { MMKV, Mode } from 'react-native-mmkv'\n\nexport const storage = new MMKV({\n  id: `user-${userId}-storage`,\n  path: `${USER_DIRECTORY}/storage`,\n  encryptionKey: 'hunter2',\n  mode: Mode.MULTI_PROCESS,\n  readOnly: false\n})\n```\n\nThis creates a new storage instance using a custom MMKV storage ID. By using a custom storage ID, your storage is separated from the default MMKV storage of your app.\n\nThe following values can be configured:\n\n* `id`: The MMKV instance's ID. If you want to use multiple instances, use different IDs. For example, you can separate the global app's storage and a logged-in user's storage. (required if `path` or `encryptionKey` fields are specified, otherwise defaults to: `'mmkv.default'`)\n* `path`: The MMKV instance's root path. By default, MMKV stores file inside `$(Documents)/mmkv/`. You can customize MMKV's root directory on MMKV initialization (documentation: [iOS](https://github.com/Tencent/MMKV/wiki/iOS_advance#customize-location) / [Android](https://github.com/Tencent/MMKV/wiki/android_advance#customize-location))\n* `encryptionKey`: The MMKV instance's encryption/decryption key. By default, MMKV stores all key-values in plain text on file, relying on iOS's/Android's sandbox to make sure the file is encrypted. Should you worry about information leaking, you can choose to encrypt MMKV. (documentation: [iOS](https://github.com/Tencent/MMKV/wiki/iOS_advance#encryption) / [Android](https://github.com/Tencent/MMKV/wiki/android_advance#encryption))\n* `mode`: The MMKV's process behaviour - when set to `MULTI_PROCESS`, the MMKV instance will assume data can be changed from the outside (e.g. App Clips, Extensions or App Groups).\n* `readOnly`: Whether this MMKV instance should be in read-only mode. This is typically more efficient and avoids unwanted writes to the data if not needed. Any call to `set(..)` will throw.\n\n### Set\n\n```js\nstorage.set('user.name', 'Marc')\nstorage.set('user.age', 21)\nstorage.set('is-mmkv-fast-asf', true)\n```\n\n### Get\n\n```js\nconst username = storage.getString('user.name') // 'Marc'\nconst age = storage.getNumber('user.age') // 21\nconst isMmkvFastAsf = storage.getBoolean('is-mmkv-fast-asf') // true\n```\n\n### Hooks\n\n```js\nconst [username, setUsername] = useMMKVString('user.name')\nconst [age, setAge] = useMMKVNumber('user.age')\nconst [isMmkvFastAsf, setIsMmkvFastAf] = useMMKVBoolean('is-mmkv-fast-asf')\n```\n\n### Keys\n\n```js\n// checking if a specific key exists\nconst hasUsername = storage.contains('user.name')\n\n// getting all keys\nconst keys = storage.getAllKeys() // ['user.name', 'user.age', 'is-mmkv-fast-asf']\n\n// delete a specific key + value\nstorage.delete('user.name')\n\n// delete all keys\nstorage.clearAll()\n```\n\n### Objects\n\n```js\nconst user = {\n  username: 'Marc',\n  age: 21\n}\n\n// Serialize the object into a JSON string\nstorage.set('user', JSON.stringify(user))\n\n// Deserialize the JSON string into an object\nconst jsonUser = storage.getString('user') // { 'username': 'Marc', 'age': 21 }\nconst userObject = JSON.parse(jsonUser)\n```\n\n### Encryption\n\n```js\n// encrypt all data with a private key\nstorage.recrypt('hunter2')\n\n// remove encryption\nstorage.recrypt(undefined)\n```\n\n### Buffers\n\n```js\nconst buffer = new ArrayBuffer(3)\nconst dataWriter = new Uint8Array(buffer)\ndataWriter[0] = 1\ndataWriter[1] = 100\ndataWriter[2] = 255\nstorage.set('someToken', buffer)\n\nconst buffer = storage.getBuffer('someToken')\nconsole.log(buffer) // [1, 100, 255]\n```\n\n### Size\n\n```js\n// get size of MMKV storage in bytes\nconst size = storage.size\nif (size >= 4096) {\n  // clean unused keys and clear memory cache\n  storage.trim()\n}\n```\n\n## Testing with Jest or Vitest\n\nA mocked MMKV instance is automatically used when testing with Jest or Vitest, so you will be able to use `new MMKV()` as per normal in your tests. Refer to [package/example/test/MMKV.test.ts](package/example/test/MMKV.test.ts) for an example using Jest.\n\n## Documentation\n\n* [Hooks](./docs/HOOKS.md)\n* [Value-change Listeners](./docs/LISTENERS.md)\n* [Migrate from AsyncStorage](./docs/MIGRATE_FROM_ASYNC_STORAGE.md)\n* [Using MMKV with redux-persist](./docs/WRAPPER_REDUX.md)\n* [Using MMKV with recoil](./docs/WRAPPER_RECOIL.md)\n* [Using MMKV with mobx-persist-storage](./docs/WRAPPER_MOBX.md)\n* [Using MMKV with mobx-persist](./docs/WRAPPER_MOBXPERSIST.md)\n* [Using MMKV with zustand persist-middleware](./docs/WRAPPER_ZUSTAND_PERSIST_MIDDLEWARE.md)\n* [Using MMKV with jotai](./docs/WRAPPER_JOTAI.md)\n* [Using MMKV with react-query](./docs/WRAPPER_REACT_QUERY.md)\n* [How is this library different from **react-native-mmkv-storage**?](https://github.com/mrousavy/react-native-mmkv/issues/100#issuecomment-886477361)\n\n## LocalStorage and In-Memory Storage (Web)\n\nIf a user chooses to disable LocalStorage in their browser, the library will automatically provide a limited in-memory storage as an alternative. However, this in-memory storage won't persist data, and users may experience data loss if they refresh the page or close their browser. To optimize user experience, consider implementing a suitable solution within your app to address this scenario.\n\n## Limitations\n\n- react-native-mmkv V3 requires react-native 0.74 or higher.\n- react-native-mmkv V3 requires [the new architecture](https://reactnative.dev/docs/the-new-architecture/landing-page)/TurboModules to be enabled.\n- Since react-native-mmkv uses JSI for synchronous native method invocations, remote debugging (e.g. with Chrome) is no longer possible. Instead, you should use [Flipper](https://fbflipper.com) or [React DevTools](https://react.dev/learn/react-developer-tools).\n\n## Integrations\n\n### Flipper\n\nUse [flipper-plugin-react-native-mmkv](https://github.com/muchobien/flipper-plugin-react-native-mmkv) to debug your MMKV storage using Flipper. You can also simply `console.log` an MMKV instance.\n\n### Reactotron\n\nUse [reactotron-react-native-mmkv](https://www.npmjs.com/package/reactotron-react-native-mmkv) to automatically log writes to your MMKV storage using Reactotron. [See the docs for how to setup this plugin with Reactotron.](https://www.npmjs.com/package/reactotron-react-native-mmkv)\n\n## Community Discord\n\n[**Join the Margelo Community Discord**](https://margelo.com/discord) to chat about react-native-mmkv or other Margelo libraries.\n\n## Adopting at scale\n\nreact-native-mmkv is provided _as is_, I work on it in my free time.\n\nIf you're integrating react-native-mmkv in a production app, consider [funding this project](https://github.com/sponsors/mrousavy) and <a href=\"mailto:me@mrousavy.com?subject=Adopting react-native-mmkv at scale\">contact me</a> to receive premium enterprise support, help with issues, prioritize bugfixes, request features, help at integrating react-native-mmkv, and more.\n\n## Contributing\n\nSee the [contributing guide](CONTRIBUTING.md) to learn how to contribute to the repository and the development workflow.\n\n## License\n\nMIT\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "tea.yaml",
          "type": "blob",
          "size": 0.123046875,
          "content": "# https://tea.xyz/what-is-this-file\n---\nversion: 1.0.0\ncodeOwners:\n  - '0xcF3c286e7cDED19D87f61E85B3370283C885bA88'\nquorum: 1\n"
        }
      ]
    }
  ]
}