{
  "metadata": {
    "timestamp": 1736566114515,
    "page": 113,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openscad/openscad",
      "stars": 7286,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.94140625,
          "content": "# Some set of config values, then refined below\nBasedOnStyle: Google\n\nColumnLimit: 105\nContinuationIndentWidth: 2\nConstructorInitializerIndentWidth: 2\n\n# public:, private: in classes: no indent\nAccessModifierOffset: -2\n\n# case on same level as switch\nIndentCaseLabels: false\nAllowShortCaseLabelsOnASingleLine: true\nAlignConsecutiveShortCaseStatements:\n  Enabled: true\n  AcrossEmptyLines: true\n  AcrossComments: true\n  AlignCaseColons: false\n\n# Always align pointer * and reference & to the right.\nDerivePointerAlignment: false\nPointerAlignment: Right\nReferenceAlignment: Left\n\n# To be enabled later:\n#  *  once all misc-include-cleaner are addressed an no accidental inclusion\n#     order needed.\n#  * Some CGAL inclusion order has been figuured out.\nSortIncludes: false\n\n# Braces on newline in functions, classes and namespaces.\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterFunction: true\n\nAllowShortIfStatementsOnASingleLine: AllIfsAndElse\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.5224609375,
          "content": "Checks: '\n  -*,\n  boost-*,\n  bugprone-*,\n    -bugprone-easily-swappable-parameters,\n    -bugprone-exception-escape,\n    -bugprone-narrowing-conversions,\n  clang-analyzer-*,\n    -clang-analyzer-cplusplus.NewDelete,\n    -clang-analyzer-cplusplus.NewDeleteLeaks,\n  misc-*,\n    -misc-definitions-in-headers,\n    -misc-no-recursion,\n    -misc-non-private-member-variables-in-classes,\n  modernize-*,\n    -modernize-avoid-c-arrays,\n    -modernize-use-nodiscard,\n    -modernize-use-trailing-return-type,\n  performance-*\n'\nWarningsAsErrors: ''\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.6142578125,
          "content": "# Commits listed in this file will be ignored by github in \"blame\" view.  \n# This feature is still in public beta at time of writing, 2022-03-27.\n# See Github docs here: https://docs.github.com/en/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view\n\n# This file may also be used when running git blame locally (git v2.23+):\n#   git blame --ignore-revs-file .git-blame-ignore-revs\n\n# Any mass-formatting / whitespace-only types of changes should ideally be listed in this file\n\n# Run uncrustify (via scripts/beautify.sh --all). 2022-02-06 by t-paul\n9b3163e740cbcc771c6825b679e02bb76a9b2b45\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5615234375,
          "content": ".uuid\n.cache/\n.vs/\n.vscode/\n/*.scad\n**/out*.*\n*.dmg\n*~\n*.tar*\n*.new\n*.bak\nout.*\nMakefile\nMakefile.Debug\nMakefile.Release\nobjects\nobject_script.openscad.Debug\nobject_script.openscad.Release\n.gdbinit\n.qmake.stash\n.tags*\n**/#*#\n/.dir-locals.el\n**/project.xcworkspace\n**/xcuserdata\n/*.stl\n/*.dxf\n/*.off\n/*.amf\n/*.png\n/*.csg\n/*.nef3\n/*.blend\n/*.obj\n/*.rcad\n/*.xml\n/*.dat\n/*.gcode\n/*.py\n/*.svg\n/*.h\n/*.dump\n/*.pl\n/b/\n/c/\n.gcov/\n/lexer_lex.cpp\n/parser_yacc.cpp\n/openscad_adaptor.cpp\n/openscad_interface.cpp\n/OpenSCAD.app\n/openscad.appdata.xml\n/openscad.appdata.xml.in2\n/openscad.pro.user\n/openscad\n/openscad-nightly\n/resources/*.rc\n/resources/mac.qrc\n/resources/common.qrc\n/resources/icons/openscad.desktop\n/locale/*/*/*.mo\n/locale/*.mo\n/locale/POTFILES\n/tmp\n/nbproject\n/mingw32.*\n/mingw64.*\nsrc/*.org\nsrc/*.old\nsrc/*.debug\n/Testing\n.DS_Store\n/build\n/build_xcode\n/release\ntests/DartConfiguration.tcl\ntests/__pycache__/\ntests/venv\nCMakeCache.txt\nCMakeFiles/\ncmake_install.cmake\nOpenSCAD_autogen\nresources/CMakeFiles\nresources/Makefile\nresources/cmake_install.cmake\nresources/docs/OpenSCADUserDocs\n/local.pri\ntests/data/python/gen_issue2342.py\ntests/data/python/gen_svg_viewbox_tests.py\ntests/data/scad/2D/features/import_dxf-tests.scad\ntests/data/scad/3D/features/import_stl-tests.scad\ntests/data/scad/3D/features/import_3mf-tests.scad\ntests/data/scad/issues/issue2342.scad\ntests/data/scad/misc/include-tests.scad\ntests/data/scad/misc/use-tests.scad\ntests/data/svg/viewbox/viewbox_*.svg\ntests/regression/pdfexporttest/centered.pdf\ntests/regression/pdfexporttest/simple-pdf.pdf\nscripts/run-clang-tidy-cached\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.6103515625,
          "content": "[submodule \"libraries/MCAD\"]\n\tpath = libraries/MCAD\n\turl = https://github.com/openscad/MCAD.git\n[submodule \"mimalloc\"]\n\tpath = submodules/mimalloc\n\turl = https://github.com/microsoft/mimalloc.git\n[submodule \"submodules/manifold\"]\n\tpath = submodules/manifold\n\turl = https://github.com/elalish/manifold.git\n[submodule \"sanitizers-cmake\"]\n\tpath = submodules/sanitizers-cmake\n\turl = https://github.com/arsenm/sanitizers-cmake.git\n[submodule \"OpenCSG\"]\n\tpath = submodules/OpenCSG\n\turl = https://github.com/openscad/OpenCSG.git\n[submodule \"Clipper2\"]\n\tpath = submodules/Clipper2\n\turl = https://github.com/AngusJohnson/Clipper2.git\n"
        },
        {
          "name": ".uncrustify.cfg",
          "type": "blob",
          "size": 2.2919921875,
          "content": "#\n# OpenSCAD uncrustify C++ config\n#\n# A reasoning on why this setup is maybe not well accessible\n# can be found in this article:\n# https://alexandersandberg.com/tabs-for-accessibility/\n#\n# If you have any accessibilty issues like mentioned in this\n# article, please file a github issue so a possible change of\n# coding style can be considered.\n\n#\n# General indentation strategy\n#\ninput_tab_size=2\noutput_tab_size=2\nindent_with_tabs=0\nindent_columns=output_tab_size\n\nindent_class=true\nindent_namespace=false\nindent_extern=false\nindent_align_assign=false\n\n#\n# Alignment\n#\nalign_right_cmt_span=0\n\n#\n# Code modification\n#\nmod_remove_extra_semicolon=true\nmod_add_long_ifdef_endif_comment=10\nmod_add_long_namespace_closebrace_comment=30\n\n#\n# Newline management\n#\nnl_func_leave_one_liners=true\nnl_class_brace=force\nnl_create_if_one_liner=true\nnl_if_brace=remove\nnl_brace_else=remove\nnl_elseif_brace=remove\nnl_else_brace=remove\nnl_else_if=remove\nnl_for_brace=remove\nnl_while_brace=remove\nnl_do_brace=remove\nnl_brace_while=remove\nnl_switch_brace=remove\nnl_create_while_one_liner=false\nnl_brace_catch=remove\n\n#\n# Spacing rules\n#\nsp_before_semi_for=remove\nsp_after_semi_for=force\nsp_paren_brace=force\nsp_before_sparen=force\nsp_inside_sparen=remove\nsp_inside_paren=remove\nsp_inside_fparens=remove\nsp_inside_fparen=remove\n\nsp_before_byref=remove\nsp_before_unnamed_byref=ignore\nsp_before_byref_func=remove\nsp_after_byref=force\nsp_after_byref_func=force\n\nsp_before_ptr_star=force\nsp_before_unnamed_ptr_star=ignore\nsp_before_ptr_star_func=force\nsp_after_ptr_star=remove\nsp_after_ptr_star_func=remove\nsp_after_ptr_star_qualifier=remove\nsp_between_ptr_star=remove\nsp_ptr_star_paren=remove\n\nsp_arith=force\nsp_assign=force\nsp_compare=force\nsp_after_comma=add\nsp_before_comma=remove\n\nsp_template_angle=force\nsp_before_angle=remove\nsp_inside_angle=remove\nsp_after_angle=force\nsp_angle_paren=remove\nsp_angle_paren_empty=remove\nsp_angle_word=force\nsp_angle_shift=remove\nsp_permit_cpp11_shift=true\n\nsp_after_operator=remove\nsp_after_operator_sym=remove\nsp_after_operator_sym_empty=remove\n\nsp_func_proto_paren=remove\nsp_func_def_paren=remove\nsp_func_call_paren=remove\n\nsp_else_brace=force\nsp_brace_else=force\nsp_brace_catch=force\n\nsp_before_case_colon=remove\nsp_before_class_colon=force\nsp_after_class_colon=force\nsp_before_constr_colon=force\nsp_after_constr_colon=force\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 55.4755859375,
          "content": "#\n# CMake build system for OpenSCAD\n#\n# Configuration variables\n#   -DHEADLESS=<ON|OFF>\n#   -DNULLGL=<ON|OFF>\n#   -DSNAPSHOT=<ON|OFF>\n#   -DEXPERIMENTAL=<ON|OFF>\n#\n\ncmake_minimum_required(VERSION 3.13)\n\nif(POLICY CMP0071) # Let AUTOMOC and AUTOUIC process GENERATED files.\n  cmake_policy(SET CMP0071 NEW)\nendif()\nif(POLICY CMP0072) # FindOpenGL prefers GLVND by default when available.\n  cmake_policy(SET CMP0072 NEW)\nendif()\nif(POLICY CMP0079) # `target_link_libraries()` allows use with targets in other directories.\n  cmake_policy(SET CMP0079 NEW)\nendif()\nif(POLICY CMP0082) # Install rules from add_subdirectory() calls are interleaved with those in caller.\n  cmake_policy(SET CMP0082 NEW)\nendif()\nif(POLICY CMP0077) # Let parent project set child project options (used to skip python lookup from manifold & force TBB)\n  cmake_policy(SET CMP0079 NEW)\nendif()\n\ninclude(\"cmake/Modules/openscad_version.cmake\")\n\noption(INFO \"Display build configuration info at end of cmake config\" ON)\noption(ENABLE_TESTS \"Run testsuite after building.\" ON)\noption(EXPERIMENTAL \"Enable Experimental Features\" OFF)\noption(USE_MANIFOLD_TRIANGULATOR \"Use Manifold's triangulator instead of CGAL's\" ON)\noption(USE_BUILTIN_MANIFOLD \"Use manifold from submodule\" ON)\noption(USE_BUILTIN_CLIPPER2 \"Use Clipper2 from submodule\" ON)\noption(USE_LEGACY_RENDERERS \"Use legacy (non-VBO) OpenGL renderers\" OFF)\noption(SNAPSHOT \"Create dev snapshot, uses nightly icons\" OFF)\noption(HEADLESS \"Build without GUI frontend\" OFF)\nif(APPLE)\n  option(USE_QT6 \"Build the GUI with Qt6\" ON)\nelse()\noption(USE_QT6 \"Build the GUI with Qt6\" OFF)\nendif()\noption(ENABLE_EGL \"Enable EGL support if available\" ON)\noption(ENABLE_GLX \"Enable GLX support if available\" ON)\n# For now, we'll default to whatever OpenCSG uses (>=1.6 -> GLAD, <1.6 -> GLEW)\noption(USE_GLAD \"Use GLAD. Mutually exclusive from USE_GLEW\" OFF)\noption(USE_GLEW \"Use GLEW. Mutually exclusive from USE_GLAD\" OFF)\noption(NULLGL \"Build without OpenGL, (implies HEADLESS=ON) \" OFF)\noption(IDPREFIX \"Prefix CSG nodes with index # (debugging purposes only, will break node cache)\" OFF)\noption(PROFILE \"Enable compiling with profiling / test coverage instrumentation\" OFF)\noption(MXECROSS \"Enable setup for MXE cross platform build\" OFF)\noption(OFFLINE_DOCS \"Download Documentation for offline usage\" OFF)\noption(USE_MIMALLOC \"Use mimalloc as malloc replacement.\" ON)\noption(USE_BUILTIN_OPENCSG \"Use OpenCSG from submodule.\" OFF)\noption(USE_CCACHE \"Use ccache to speed up compilation.\" ON)\noption(ENABLE_CAIRO \"Enable support for cairo vector graphics library.\" ON)\noption(ENABLE_SPNAV \"Enable support for libspnav input driver.\" ON)\noption(ENABLE_HIDAPI \"Enable support for HIDAPI input driver.\" ON)\noption(ENABLE_CGAL \"Enable CGAL.\" ON)\noption(ENABLE_MANIFOLD \"Enable Manifold.\" ON)\noption(ALLOW_BUNDLED_HIDAPI \"Allow usage of bundled HIDAPI library (Windows only).\" OFF)\noption(ENABLE_PYTHON \"Enable experimental Python Interpreter\" OFF)\noption(BUILD_SHARED_LIBS \"Build shared library\" OFF)\ninclude(CMakeDependentOption)\ncmake_dependent_option(APPLE_UNIX \"Build OpenSCAD in Unix mode in MacOS X instead of an Apple Bundle\" OFF \"APPLE\" OFF)\ncmake_dependent_option(ENABLE_QTDBUS \"Enable DBus input driver for Qt.\" ON \"NOT HEADLESS\" OFF)\ncmake_dependent_option(ENABLE_GAMEPAD \"Enable Qt5Gamepad input driver.\" ON \"NOT HEADLESS;NOT USE_QT6\" OFF)\nset(WASM_BUILD_TYPE \"web\" CACHE STRING \n  \"WebAssembly build type. Support web (builds an OpenSCAD module) or node (standalone .js executable)\")\n\nif (USE_QT6)\n  # Minimum version required for Qt-6.5\n  set(DEPLOYMENT_TARGET \"11.0\")\nelse()\n  # Minimum version required for std::filesystem\n  set(DEPLOYMENT_TARGET \"10.15\")\nendif()\n\n# Note: CMAKE_OSX_DEPLOYMENT_TARGET must be set before the project() invocation\nset(CMAKE_OSX_DEPLOYMENT_TARGET ${DEPLOYMENT_TARGET} CACHE STRING \"Minimum OS X deployment version\")\n\nproject(OpenSCAD\n  VERSION ${PROJECT_VERSION}\n  DESCRIPTION \"The Programmer's Solid 3D CAD Modeler\"\n  HOMEPAGE_URL \"https://openscad.org/\"\n  LANGUAGES C CXX\n)\n\n# GNUInstallDirs must be done before BuildParameters\ninclude(GNUInstallDirs)\n\n# Use clang-tidy if run with -DCLANG_TIDY=1\nset(CLANG_TIDY ${CLANG_TIDY} CACHE BOOL \"Enable clang-tidy\")\nif(CLANG_TIDY)\n  if(APPLE)\n    # clang-tidy isn't directly available on Homebrew, but exists inside the llvm package\n    set(CLANG_TIDY_HINTS \"/opt/homebrew/opt/llvm/bin\" \"/usr/local/opt/llvm/bin\")\n  endif()\n  find_program(CLANG_TIDY_EXE NAMES clang-tidy REQUIRED HINTS ${CLANG_TIDY_HINTS})\n  message(STATUS \"Found clang-tidy: ${CLANG_TIDY_EXE}\")\n  include(\"cmake/Modules/RegexUtils.cmake\")\n  escape_string_as_regex(regex \"${CMAKE_SOURCE_DIR}/src/\")\n  # /src/ext/.clang-tidy disables all checks for that dir.  Copy into build dir to ignore generated sources.\n  configure_file(${CMAKE_SOURCE_DIR}/src/ext/.clang-tidy ${CMAKE_BINARY_DIR} COPYONLY)\n  # Regex hack below since negative lookahead is not supported (POSIX regex only)\n  #  (?!ext/) becomes ([^e]...|e[^x]..|ex[^t].|ext[^/]|.{0,3}$)\n  # CMAKE_CXX_CLANG_TIDY must be set before target is created (with add_executable())\n  set(CMAKE_CXX_CLANG_TIDY \"${CLANG_TIDY_EXE};--header-filter=${regex}([^e]...|e[^x]..|ex[^t].|ext[^/]|.{0,3}$)\")\n  #  append \";--fix\" to arguments above to apply automatic fix (if the given checks support it)\nendif(CLANG_TIDY)\n\nadd_executable(OpenSCAD)\n\nset(CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/submodules/sanitizers-cmake/cmake\" ${CMAKE_MODULE_PATH})\nfind_package(Sanitizers)\n\n# Strict c++17, e.g. no GNU extensions\nset_property(TARGET OpenSCAD PROPERTY CXX_STANDARD 17)\nset_property(TARGET OpenSCAD PROPERTY CXX_EXTENSIONS OFF)\nset_property(TARGET OpenSCAD PROPERTY CXX_STANDARD_REQUIRED ON)\n# Output compilation database (compile_commands.json), so we can e.g. run clang-tidy or other tools separately\nset_property(TARGET OpenSCAD PROPERTY EXPORT_COMPILE_COMMANDS ON)\nset_property(TARGET OpenSCAD PROPERTY LINKER_LANGUAGE CXX)\n# Verbose link step\nif((\"${CMAKE_CXX_COMPILER_FRONTEND_VARIANT}\" STREQUAL \"GNU\") OR\n   (\"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"AppleClang|Clang|GNU\"))\n  target_link_options(OpenSCAD BEFORE PRIVATE \"-v\")\nendif()\n\nset(SUFFIX \"\" CACHE STRING \"Installation suffix for binary (e.g. 'nightly')\")\nset(STACKSIZE 8388608 CACHE STRING \"Stack size (default is 8MB)\")\n\nif(PROFILE)\n  SET(GCC_COVERAGE_COMPILE_FLAGS \"-g -O0 --coverage -fprofile-arcs -ftest-coverage -fprofile-dir=.gcov\")\n  SET(GCC_COVERAGE_LINK_FLAGS    \"--coverage\")\n  # TODO use more specific commands \"target_compile_options\" etc. to avoid potentially affecting submodules?\n  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}\")\n  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}\")\n  SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}\")\nendif()\n\nif (CMAKE_SYSTEM_NAME STREQUAL Emscripten)\n  set(Boost_USE_STATIC_LIBS ON CACHE BOOL \"\" FORCE)\n  set(Boost_USE_STATIC_RUNTIME ON CACHE BOOL \"\" FORCE)\n  set(ENABLE_CAIRO OFF CACHE BOOL \"\" FORCE)\n  set(MANIFOLD_PAR OFF CACHE BOOL \"\" FORCE)\n  set(NULLGL ON CACHE BOOL \"\" FORCE)\n  set(USE_MIMALLOC OFF CACHE BOOL \"\" FORCE)\n  set(ENV{PKG_CONFIG_PATH} \"/emsdk/upstream/emscripten/cache/sysroot/lib/pkgconfig\")\n  target_compile_definitions(OpenSCAD PRIVATE CGAL_DISABLE_ROUNDING_MATH_CHECK)\n  target_link_libraries(OpenSCAD PRIVATE /emsdk/upstream/emscripten/cache/sysroot/lib/libz.a)\n  \n  # https://emscripten.org/docs/tools_reference/emcc.html\n  # https://emscripten.org/docs/tools_reference/settings_reference.html\n  target_compile_options(OpenSCAD PRIVATE -fexceptions)\n  target_link_options(OpenSCAD PUBLIC\n    -fexceptions\n    -sABORT_ON_WASM_EXCEPTIONS\n    -sALLOW_MEMORY_GROWTH=1\n    -sDISABLE_EXCEPTION_CATCHING=0\n    -sEXIT_RUNTIME=1\n    -sEXPORTED_RUNTIME_METHODS=['ENV','ERRNO_CODES','FS','PATH','callMain']\n    -sMAXIMUM_MEMORY=4GB\n    \n    # -g produces DWARF debug info, which is quite large and may need debugger extensions.\n    # Alternatively, can pass -gsource-map -sLOAD_SOURCE_MAP but then variable debugging isn't possible\n    $<$<CONFIG:Debug>:-g -O0>\n  )\n  if (WASM_BUILD_TYPE STREQUAL \"web\")\n    target_link_options(OpenSCAD PUBLIC\n      -sENVIRONMENT=web,worker\n      -sEXPORT_ES6=1\n      -sEXPORT_NAME=OpenSCAD\n      -sMODULARIZE=1\n    )\n  elseif (WASM_BUILD_TYPE STREQUAL \"node\")\n    target_link_options(OpenSCAD PUBLIC\n      -sENVIRONMENT=node,worker\n      -sNODEJS_CATCH_EXIT\n      -sNODERAWFS\n\n      # Single .js (more elegant for CLI release) is larger than separate .js & .wasm (preferred for web)\n      $<$<CONFIG:Release>:-sSINGLE_FILE> \n      \n      # Alternatively to single-file mode, code caching could make repeated runs faster:\n      # -sNODE_CODE_CACHING -sWASM_ASYNC_COMPILATION=0\n    )\n\n    # Ensure the resulting .js file is executable on Unix:\n    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/prepend_node_shebang.cmake \"\n      file(READ \\\"\\${FILE}\\\" CONTENT)\n      file(WRITE \\\"\\${FILE}\\\" \\\"#!/usr/bin/env node\\n\\${CONTENT}\\\")\n      if(CMAKE_HOST_UNIX)\n        execute_process(COMMAND chmod +x \\\"\\${FILE}\\\")\n      endif()\n    \")\n    add_custom_command(\n      POST_BUILD TARGET OpenSCAD\n      COMMAND ${CMAKE_COMMAND} \"-DFILE=$<TARGET_FILE:OpenSCAD>\" -P \"${CMAKE_CURRENT_BINARY_DIR}/prepend_node_shebang.cmake\"\n    )\n  else()\n    message(FATAL_ERROR \"Invalid WASM_BUILD_TYPE: ${WASM_BUILD_TYPE} (allowed: node, web)\")\n  endif()\nendif()\n\nif(NULLGL)\n  set(HEADLESS ON CACHE BOOL \"\" FORCE)\nendif()\nif(EXPERIMENTAL)\n  target_compile_definitions(OpenSCAD PRIVATE ENABLE_EXPERIMENTAL)\nendif()\nif(IDPREFIX)\n  target_compile_definitions(OpenSCAD PRIVATE IDPREFIX)\nendif()\nif(USE_LEGACY_RENDERERS)\n  target_compile_definitions(OpenSCAD PRIVATE USE_LEGACY_RENDERERS)\nendif()\n\nif (NOT \"${SUFFIX}\" STREQUAL \"\")\n  set(SUFFIX_WITH_DASH \"-${SUFFIX}\")\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_SUFFIX=\"${SUFFIX_WITH_DASH}\")\nendif()\n\nif (MXECROSS OR WIN32)\n  add_subdirectory(winconsole)\n  set_property(TARGET OpenSCAD PROPERTY WIN32_EXECUTABLE ON)\nendif()\n\nset(OPENSCAD_LIB_OUTPUT_DIR \"${CMAKE_CURRENT_BINARY_DIR}/objects\")\nfile(MAKE_DIRECTORY ${OPENSCAD_LIB_OUTPUT_DIR})\n\n# Default to Release build\n#if(NOT CMAKE_BUILD_TYPE)\n#  message(STATUS \"CMAKE_BUILD_TYPE not specified.  Defaulting to 'Release'\")\n#  message(STATUS \"Usage: cmake -DCMAKE_BUILD_TYPE=[Debug|Release|RelWithDebInfo|MinSizeRel] .\")\n#  set(CMAKE_BUILD_TYPE Release)\n#else()\n#  message(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\n#endif()\n\ntarget_compile_options(OpenSCAD PRIVATE \"$<$<CONFIG:DEBUG>:-DDEBUG>\")\n\ntarget_compile_definitions(OpenSCAD PRIVATE\n  _REENTRANT\n  UNICODE\n  _UNICODE\n  _USE_MATH_DEFINES)\n\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -frounding-math\")\n  if (WIN32) # gcc bug spams warnings, See issue #2771\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-attributes\")\n  endif()\nendif()\n\nfind_package(PkgConfig)\n\nadd_subdirectory(submodules)\n\n# The submodules will set up mimalloc if needed, and we need to defer any\n# target_link_libraries() calls until after that.\n\nif (MXECROSS)\n  target_compile_definitions(OpenSCAD PRIVATE LIBXML_STATIC STATIC_QT_SVG_PLUGIN)\n  target_compile_definitions(OpenSCAD PRIVATE GLEW_STATIC)\n  target_link_libraries(OpenSCAD PRIVATE bcrypt)\nendif()\n\nmacro(find_graphics)\n  # NULLGL - Allow us to build without OpenGL(TM). run 'cmake .. -DNULLGL=1'\n  # Most tests will fail, but it can be used for testing/experiments\n  if(NULLGL)\n    target_compile_definitions(OpenSCAD PRIVATE NULLGL)\n  else()\n\n    set(OPENSCAD_UNITY_BUILD ${CMAKE_UNITY_BUILD})\n    set(CMAKE_UNITY_BUILD OFF)\n    if(NOT USE_BUILTIN_OPENCSG)\n      find_package(OpenCSG REQUIRED QUIET)\n      target_link_libraries(OpenSCAD PRIVATE ${OPENCSG_LIBRARY})\n      message(STATUS \"OpenCSG: ${OPENCSG_VERSION_STRING}\")\n      if(MSVC)\n        find_path(OPENCSG_INCLUDE_DIRS opencsg/opencsg.h)\n        target_include_directories(OpenSCAD SYSTEM PRIVATE \"${OPENCSG_INCLUDE_DIRS}/opencsg\")\n      else()\n        find_path(OPENCSG_INCLUDE_DIRS opencsg.h)\n        target_include_directories(OpenSCAD SYSTEM PRIVATE ${OPENCSG_INCLUDE_DIRS})\n      endif()\n    else()\n      include(\"submodules/CMakeLists-OpenCSG.txt\")\n      target_link_libraries(OpenSCAD PRIVATE OpenCSG)\n      message(STATUS \"OpenCSG submodule: ${OPENCSG_VERSION_STRING}\")\n    endif(NOT USE_BUILTIN_OPENCSG)\n    set(CMAKE_UNITY_BUILD ${OPENSCAD_UNITY_BUILD})\n\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_OPENCSG)\n\n    if (${OPENCSG_VERSION_STRING} VERSION_LESS \"1.6.0\")\n      set(OPENCSG_GLEW ON)\n      target_compile_definitions(OpenSCAD PRIVATE OPENCSG_GLEW)\n    endif()\n\n    if (NOT USE_GLAD AND NOT USE_GLEW)\n      if (OPENCSG_GLEW)\n        set(USE_GLEW ON)\n        set(WRANGLER \"glew\")\n      else()\n\tset(USE_GLAD ON)\n        set(WRANGLER \"GLAD\")\n      endif()\n      message(STATUS \"USE_GLAD/USE_GLEW not specified: Defaulting to ${WRANGLER}\")\n    endif()\n\n    if (USE_GLEW OR OPENCSG_GLEW)\n      find_package(GLEW REQUIRED QUIET)\n      message(STATUS \"GLEW: ${GLEW_VERSION}\")\n      target_link_libraries(OpenSCAD PRIVATE GLEW::glew)\n      set(GLEW_SOURCES src/glview/glew-utils.cc)\n    endif()\n\n    find_package(OpenGL REQUIRED QUIET)\n    target_link_libraries(OpenSCAD PRIVATE ${OPENGL_LIBRARIES})\n    message(STATUS \"OpenGL: ${OPENGL_LIBRARIES}\")\n  endif()\nendmacro(find_graphics)\n\nif (MSVC)\n  # Flex lexer options\n  set(WINCOMPAT \"--wincompat --nounistd\")\n  target_compile_definitions(OpenSCAD PRIVATE _USE_MATH_DEFINES)\n\n  find_package(Eigen3 CONFIG REQUIRED)\n  target_link_libraries(OpenSCAD PRIVATE Eigen3::Eigen)\n  message(STATUS \"Eigen: ${Eigen3_VERSION}\")\n\n  set(Boost_USE_STATIC_LIBS TRUE)\n  find_package(Boost 1.61 REQUIRED COMPONENTS system regex program_options)\n  message(STATUS \"Boost: ${Boost_VERSION}\")\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${Boost_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE ${Boost_LIBRARIES})\n  target_compile_definitions(OpenSCAD PRIVATE BOOST_DLL_USE_STD_FS)\n\n  find_package(harfbuzz CONFIG REQUIRED)\n  find_path(HARFBUZZ_INCLUDE_DIRS harfbuzz)\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${HARFBUZZ_INCLUDE_DIRS}/harfbuzz)\n  target_link_libraries(OpenSCAD PRIVATE harfbuzz::harfbuzz)\n\n  find_package(unofficial-fontconfig CONFIG REQUIRED)\n  target_link_libraries(OpenSCAD PRIVATE unofficial::fontconfig::fontconfig)\n\n  find_package(unofficial-glib CONFIG REQUIRED)\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${GLIB2_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE unofficial::glib::gio unofficial::glib::glib unofficial::glib::gmodule unofficial::glib::gobject)\n\n  find_package(double-conversion CONFIG REQUIRED)\n  target_link_libraries(OpenSCAD PRIVATE double-conversion::double-conversion)\n\n  find_library(GETTEXT_LIBRARY libintl)\n  target_link_libraries(OpenSCAD PRIVATE ${GETTEXT_LIBRARY})\n\n  # call before setting local CMAKE_MODULE_PATH so we use VCPKG version of FindGLEW\n  find_graphics()\n\n  # needed for QtQScintilla, maybe others\n  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules\")\nelse()\n  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules\")\n  if(MXECROSS)\n    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules/MXE\")\n  endif()\n\n  if(NOT \"$ENV{OPENSCAD_LIBRARIES}\" STREQUAL \"\")\n    list(APPEND CMAKE_PREFIX_PATH \"$ENV{OPENSCAD_LIBRARIES}\")\n    if(APPLE)\n      list(APPEND CMAKE_IGNORE_PREFIX_PATH \"/opt/homebrew\") # Homebrew Apple Silicon\n      list(APPEND CMAKE_IGNORE_PREFIX_PATH \"/usr/local\")    # Homebrew Intel\n    endif()\n  endif()\n\n  find_package(Eigen3 REQUIRED)\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${EIGEN3_INCLUDE_DIR})\n  target_compile_definitions(OpenSCAD PRIVATE EIGEN_DONT_ALIGN)\n  message(STATUS \"Eigen: ${Eigen3_VERSION}\")\n\n  find_package(Boost 1.61 REQUIRED COMPONENTS system regex program_options)\n  message(STATUS \"Boost: ${Boost_VERSION}\")\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${Boost_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE ${Boost_LIBRARIES})\n  target_compile_definitions(OpenSCAD PRIVATE BOOST_DLL_USE_STD_FS)\n\n  find_package(HarfBuzz 0.9.19 REQUIRED QUIET)\n  message(STATUS \"Harfbuzz: ${HARFBUZZ_VERSION}\")\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${HARFBUZZ_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE ${HARFBUZZ_LIBRARIES})\n\n  find_package(FontConfig 2.8.0 REQUIRED QUIET)\n  message(STATUS \"Fontconfig: ${FONTCONFIG_VERSION}\")\n  target_link_libraries(OpenSCAD PRIVATE ${FONTCONFIG_LIBRARIES})\n\n  find_package(GLIB2 2.26 REQUIRED QUIET)\n  message(STATUS \"Glib: ${GLIB2_VERSION}\")\n  target_include_directories(OpenSCAD SYSTEM PRIVATE ${GLIB2_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE ${GLIB2_LIBRARIES})\n\n  find_package(DoubleConversion REQUIRED QUIET)\n  target_link_libraries(OpenSCAD PRIVATE ${DoubleConversion_LIBRARIES})\n\n  find_graphics()\nendif()\n\nif(USE_GLAD)\n  target_link_libraries(OpenSCAD PRIVATE ${CMAKE_DL_LIBS})\nendif()\n\nif ((\"${Boost_VERSION}\" VERSION_GREATER \"1.72\") AND (\"${Boost_VERSION}\" VERSION_LESS \"1.76\"))\n  # Avoid warning messages from boost which are also caused by boost's code.\n  #   https://github.com/boostorg/property_tree/issues/51\n  target_compile_definitions(OpenSCAD PUBLIC BOOST_BIND_GLOBAL_PLACEHOLDERS)\nendif()\n\nif(ENABLE_CGAL)\n  # Note: Saving CMAKE_MODULE_PATH as CGAL will overwrite it.\n  # Reconsider this after CGAL 5.4: https://github.com/CGAL/cgal/pull/6029\n  set(OPENSCAD_ORIGINAL_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})\n  set(CGAL_DO_NOT_WARN_ABOUT_CMAKE_BUILD_TYPE TRUE)\n  # Some older versions do not match with CGAL 5.0 REQUIRED, so we check after.\n  find_package(CGAL REQUIRED COMPONENTS Core)\n  if (${CGAL_MAJOR_VERSION} LESS 5)\n    message(FATAL_ERROR \"CGAL: ${CGAL_MAJOR_VERSION}.${CGAL_MINOR_VERSION}.${CGAL_BUGFIX_VERSION} less than required minimum version 5.0\")\n  endif()\n  message(STATUS \"CGAL: ${CGAL_MAJOR_VERSION}.${CGAL_MINOR_VERSION}.${CGAL_BUGFIX_VERSION}\")\n  target_compile_definitions(OpenSCAD PRIVATE ENABLE_CGAL)\n  # The macro `CGAL_DEBUG` allows to force CGAL assertions, even if `NDEBUG` is defined,\n  # Enabling CGAL assertions is necessary for us to catch them before they cause a crash\n  # on bad geometry input.\n  target_compile_definitions(OpenSCAD PRIVATE CGAL_DEBUG)\n  target_compile_definitions(OpenSCAD PRIVATE CGAL_USE_GMPXX)\n  if(TARGET CGAL::CGAL)\n    target_link_libraries(OpenSCAD PRIVATE CGAL::CGAL CGAL::CGAL_Core)\n    message(STATUS \"CGAL: Using target CGAL::CGAL CGAL::CGAL_Core\")\n  else()\n    target_link_libraries(OpenSCAD PRIVATE ${CGAL_LIBRARY} ${GMP_LIBRARIES} ${MPFR_LIBRARIES})\n  endif()\n  # revert any changes to module path from CGAL_Macros.cmake; see note above\n  # Commented out code should work in CGAL>= 5.4\n  #if (CGAL_MODULE_PATH_IS_SET)\n  #  set(CMAKE_MODULE_PATH ${OPENSCAD_ORIGINAL_CMAKE_MODULE_PATH})\n  #endif()\n  set(CMAKE_MODULE_PATH ${OPENSCAD_ORIGINAL_CMAKE_MODULE_PATH})\nendif(ENABLE_CGAL)\n\nfind_package(LibZip REQUIRED QUIET)\nmessage(STATUS \"libzip: ${LIBZIP_VERSION}\")\ntarget_include_directories(OpenSCAD SYSTEM PRIVATE ${LIBZIP_INCLUDE_DIR_ZIP} ${LIBZIP_INCLUDE_DIR_ZIPCONF})\ntarget_link_libraries(OpenSCAD PRIVATE ${LIBZIP_LIBRARY})\ntarget_compile_definitions(OpenSCAD PRIVATE ENABLE_LIBZIP)\n\nfind_package(Freetype 2.4.9 REQUIRED QUIET)\nmessage(STATUS \"Freetype: ${FREETYPE_VERSION_STRING}\")\ntarget_include_directories(OpenSCAD SYSTEM PRIVATE ${FREETYPE_INCLUDE_DIRS})\ntarget_link_libraries(OpenSCAD PRIVATE ${FREETYPE_LIBRARIES})\n\nfind_package(LibXml2 2.9 REQUIRED QUIET)\nmessage(STATUS \"LibXml2: ${LIBXML2_VERSION_STRING}\")\ntarget_include_directories(OpenSCAD SYSTEM PRIVATE ${LIBXML2_INCLUDE_DIR})\ntarget_link_libraries(OpenSCAD PRIVATE ${LIBXML2_LIBRARIES})\n\nif(ENABLE_PYTHON)\n  find_package(Python REQUIRED COMPONENTS Interpreter Development)\n  find_package(CryptoPP REQUIRED)\n  message(STATUS \"Python enabled, using Crypto++ ${PC_CRYPTOPP_VERSION}\")\n  target_include_directories(OpenSCAD PRIVATE ${Python_INCLUDE_DIRS})\n  target_include_directories(OpenSCAD PRIVATE ${CRYPTOPP_INCLUDE_DIRS})\n  target_link_libraries(OpenSCAD PRIVATE ${Python_LIBRARIES})\n  target_link_libraries(OpenSCAD PRIVATE ${CRYPTOPP_LIBRARIES})\nendif()\n\nif(ENABLE_HIDAPI)\n  find_package(HidAPI 0.10 QUIET)\n  if(HIDAPI_FOUND)\n    set(INPUT_DRIVER_HIDAPI_SOURCES src/gui/input/HidApiInputDriver.cc)\n    target_include_directories(OpenSCAD SYSTEM PRIVATE ${HIDAPI_INCLUDE_DIR})\n    target_link_libraries(OpenSCAD PRIVATE ${HIDAPI_LIBRARY})\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_HIDAPI)\n    message(STATUS \"HidAPI: ${HIDAPI_VERSION_STRING}\")\n  elseif(ALLOW_BUNDLED_HIDAPI)\n    set(HIDAPI_SRC_DIR \"src/ext/hidapi\")\n    file(STRINGS \"${HIDAPI_SRC_DIR}/VERSION\" HIDAPI_VERSION_STRING)\n    target_include_directories(OpenSCAD SYSTEM PRIVATE \"${HIDAPI_SRC_DIR}\")\n    set(INPUT_DRIVER_HIDAPI_SOURCES \"${HIDAPI_SRC_DIR}/hid.c\" src/gui/input/HidApiInputDriver.cc)\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_HIDAPI)\n    target_link_libraries(OpenSCAD PRIVATE setupapi hid)\n    message(STATUS \"HidAPI: ${HIDAPI_VERSION_STRING} (bundled)\")\n  else()\n    message(STATUS \"HIDAPI: disabled\")\n  endif()\nelse()\n  message(STATUS \"HIDAPI: disabled per user request\")\nendif()\n\nif(ENABLE_SPNAV)\n  find_package(SpNav QUIET)\n  if(SPNAV_FOUND)\n    message(STATUS \"SpNav: found\")\n    set(INPUT_DRIVER_SPNAV_SOURCES src/gui/input/SpaceNavInputDriver.cc)\n    target_include_directories(OpenSCAD SYSTEM PRIVATE ${SPNAV_INCLUDE_DIR})\n    target_link_libraries(OpenSCAD PRIVATE ${SPNAV_LIBRARY})\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_SPNAV)\n  else()\n    message(STATUS \"SpNav: disabled\")\n  endif()\nendif()\n\nif(ENABLE_CAIRO)\n  find_package(Cairo 1.14 QUIET)\n  if (CAIRO_VERSION)\n    message(STATUS \"Cairo: ${CAIRO_VERSION}\")\n    target_include_directories(OpenSCAD SYSTEM PRIVATE ${CAIRO_INCLUDE_DIRS})\n    target_link_libraries(OpenSCAD PRIVATE ${CAIRO_LIBRARIES})\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_CAIRO)\n  else()\n    message(STATUS \"Cairo: disabled\")\n  endif()\nelse()\n  message(STATUS \"Cairo: disabled per user request\")\nendif()\n\nfind_package(FLEX REQUIRED QUIET)\nmessage(STATUS \"Flex: ${FLEX_VERSION}\")\n\nfind_package(BISON REQUIRED QUIET)\nmessage(STATUS \"Bison: ${BISON_VERSION}\")\n\nif(NOT MSVC)\n  find_package(Lib3MF)\n  if (Lib3MF_FOUND)\n    message(STATUS \"lib3mf: ${Lib3MF_VERSION}\")\n    target_link_libraries(OpenSCAD PRIVATE Lib3MF::Lib3MF)\n    target_compile_definitions(OpenSCAD PRIVATE ENABLE_LIB3MF)\n    if (Lib3MF_VERSION VERSION_GREATER_EQUAL 2)\n      set(LIB3MF_SOURCES src/io/export_3mf_v2.cc src/io/import_3mf_v2.cc)\n    else()\n      set(LIB3MF_SOURCES src/io/export_3mf_v1.cc src/io/import_3mf_v1.cc)\n    endif()\n  else()\n    set(LIB3MF_SOURCES src/io/export_3mf_dummy.cc src/io/import_3mf_dummy.cc)\n    message(STATUS \"lib3mf: disabled\")\n  endif()\nendif()\n\n# Automatically add the current source and build directories to the include path.\nset(CMAKE_INCLUDE_CURRENT_DIR ON) # (does not propagate down to subdirectories)\n\nif(USE_GLAD)\n  target_compile_definitions(OpenSCAD PRIVATE USE_GLAD)\nelse()\n  target_compile_definitions(OpenSCAD PRIVATE USE_GLEW)\nendif()\n\ntarget_include_directories(OpenSCAD PRIVATE\n  \"src\"\n  \"src/ext\"\n  \"src/ext/lexertl/include\"\n  \"src/ext/libtess2/Include\"\n\n  # All the following should go away, not needed anymore after\n  # PR #5312. Left here for now in case there are on-going PRs that\n  # rely on these. Should be removed soon.\n  \"src/core\"\n  \"src/core/customizer\"\n  \"src/ext/json\"\n  \"src/ext\"\n  \"src/geometry\"\n  \"src/geometry/cgal\"\n  \"src/geometry/manifold\"\n  \"src/glview\"\n  \"src/glview/preview\"\n  \"src/glview/cgal\"\n  \"src/gui\"\n  \"src/io\"\n  \"src/platform\"\n  \"src/utils\"\n)\n\nFLEX_TARGET(openscad_lexer src/core/lexer.l ${OPENSCAD_LIB_OUTPUT_DIR}/lexer.cxx DEFINES_FILE ${OPENSCAD_LIB_OUTPUT_DIR}/lexer.hxx COMPILE_FLAGS ${WINCOMPAT})\nBISON_TARGET(openscad_parser src/core/parser.y ${OPENSCAD_LIB_OUTPUT_DIR}/parser.cxx DEFINES_FILE ${OPENSCAD_LIB_OUTPUT_DIR}/parser.hxx COMPILE_FLAGS \"-d -p parser\")\nADD_FLEX_BISON_DEPENDENCY(openscad_lexer openscad_parser)\n\nFLEX_TARGET(comment_lexer src/core/customizer/comment_lexer.l ${OPENSCAD_LIB_OUTPUT_DIR}/comment_lexer.cxx DEFINES_FILE ${OPENSCAD_LIB_OUTPUT_DIR}/comment_lexer.hxx COMPILE_FLAGS ${WINCOMPAT})\nBISON_TARGET(comment_parser src/core/customizer/comment_parser.y ${OPENSCAD_LIB_OUTPUT_DIR}/comment_parser.cxx DEFINES_FILE ${OPENSCAD_LIB_OUTPUT_DIR}/comment_parser.hxx COMPILE_FLAGS \"-d -p comment_parser\")\nADD_FLEX_BISON_DEPENDENCY(comment_lexer comment_parser)\n\nif(NOT HEADLESS)\n  if (APPLE AND EXISTS /usr/local/opt/qt)\n    list(APPEND CMAKE_PREFIX_PATH \"/usr/local/opt/qt\")\n  endif()\n  if (USE_QT6)\n    if (APPLE AND EXISTS /usr/local/opt/qt@6)\n      list(APPEND CMAKE_PREFIX_PATH \"/usr/local/opt/qt@6\")\n    endif()\n    if (APPLE AND EXISTS /opt/homebrew/opt/qt@6)\n      list(APPEND CMAKE_PREFIX_PATH \"/opt/homebrew/opt/qt@6\")\n    endif()\n  else()\n    if (APPLE AND EXISTS /usr/local/opt/qt@5)\n      list(APPEND CMAKE_PREFIX_PATH \"/usr/local/opt/qt@5\")\n    endif()\n    if (APPLE AND EXISTS /opt/homebrew/opt/qt@5)\n      list(APPEND CMAKE_PREFIX_PATH \"/opt/homebrew/opt/qt@5\")\n    endif()\n  endif()\n\n  if(\"${CMAKE_VERSION}\" VERSION_GREATER_EQUAL \"3.14\")\n    set_property(TARGET OpenSCAD PROPERTY AUTOGEN_ORIGIN_DEPENDS OFF)\n  endif()\n  set_property(TARGET OpenSCAD PROPERTY AUTOMOC ON)\n  set_property(TARGET OpenSCAD PROPERTY AUTOUIC ON)\n  set_property(TARGET OpenSCAD PROPERTY AUTORCC ON)\n  set_property(TARGET OpenSCAD PROPERTY AUTOUIC_OPTIONS --tr q_)\n  set_property(TARGET OpenSCAD PROPERTY AUTORCC_OPTIONS --threshold 10 --compress 9)\n  if (USE_QT6)\n    find_package(Qt6 COMPONENTS Core Core5Compat Widgets Multimedia OpenGL OpenGLWidgets Concurrent Network Svg REQUIRED QUIET)\n    message(STATUS \"Qt6: ${Qt6_VERSION}\")\n\n    if (Qt6_POSITION_INDEPENDENT_CODE)\n      set_property(TARGET OpenSCAD PROPERTY POSITION_INDEPENDENT_CODE ON)\n    endif()\n\n    find_package(Qt6QScintilla 2.8.0 REQUIRED QUIET)\n    message(STATUS \"QScintilla: ${QT6QSCINTILLA_VERSION_STRING}\")\n\n    if(ENABLE_QTDBUS)\n      find_package(Qt6DBus QUIET)\n      if (Qt6DBus_FOUND)\n        message(STATUS \"DBus input driver enabled\")\n        target_compile_definitions(OpenSCAD PRIVATE ENABLE_DBUS)\n        set(INPUT_DRIVER_DBUS_SOURCES src/gui/input/DBusInputDriver.cc)\n        qt6_add_dbus_interface(INPUT_DRIVER_DBUS_SOURCES org.openscad.OpenSCAD.xml openscad_interface)\n        qt6_add_dbus_adaptor(INPUT_DRIVER_DBUS_SOURCES org.openscad.OpenSCAD.xml gui/input/DBusInputDriver.h DBusInputDriver openscad_adaptor)\n      else()\n        message(STATUS \"DBus input driver disabled as the QtDBus module could not be found.\")\n      endif()\n    else()\n      message(STATUS \"DBus input driver disabled per user request.\")\n    endif()\n  else()\n    find_package(Qt5 5.12 COMPONENTS Core Widgets Multimedia OpenGL Concurrent Network Svg REQUIRED QUIET)\n    message(STATUS \"Qt5: ${Qt5_VERSION}\")\n\n    if (Qt5_POSITION_INDEPENDENT_CODE)\n      set_property(TARGET OpenSCAD PROPERTY POSITION_INDEPENDENT_CODE ON)\n    endif()\n\n    if ((\"${Qt5_VERSION}\" VERSION_GREATER_EQUAL \"5.4\"))\n       target_compile_definitions(OpenSCAD PRIVATE USE_QOPENGLWIDGET)\n    endif()\n\n    find_package(Qt5QScintilla 2.8.0 REQUIRED QUIET)\n    message(STATUS \"QScintilla: ${QT5QSCINTILLA_VERSION_STRING}\")\n\n    if(ENABLE_QTDBUS)\n      find_package(Qt5DBus QUIET)\n      if (Qt5DBus_FOUND)\n        message(STATUS \"DBus input driver enabled\")\n        target_compile_definitions(OpenSCAD PRIVATE ENABLE_DBUS)\n        set(INPUT_DRIVER_DBUS_SOURCES src/gui/input/DBusInputDriver.cc)\n        qt5_add_dbus_interface(INPUT_DRIVER_DBUS_SOURCES org.openscad.OpenSCAD.xml openscad_interface)\n        qt5_add_dbus_adaptor(INPUT_DRIVER_DBUS_SOURCES org.openscad.OpenSCAD.xml gui/input/DBusInputDriver.h DBusInputDriver openscad_adaptor)\n      else()\n        message(STATUS \"DBus input driver disabled as the QtDBus module could not be found.\")\n      endif()\n    else()\n      message(STATUS \"DBus input driver disabled per user request.\")\n    endif()\n\n    if(ENABLE_GAMEPAD)\n      find_package(Qt5Gamepad QUIET)\n      if (Qt5Gamepad_FOUND)\n        message(STATUS \"Qt5Gamepad input driver enabled\")\n        set(GUI_SOURCES ${GUI_SOURCES} src/gui/input/QGamepadInputDriver.cc)\n        target_compile_definitions(OpenSCAD PRIVATE ENABLE_QGAMEPAD)\n      else()\n        message(STATUS \"Qt5Gamepad input driver disabled as the Qt5Gamepad module could not be found.\")\n      endif()\n    else()\n      message(STATUS \"Qt5Gamepad input driver disabled per user request.\")\n    endif()\n  endif()\nendif()\n\n# Setup ccache (if available) to speed up recompiles. It's especially useful\n# when switching back and forth between branches where large numbers of files\n# would otherwise need to be re-compiled each time.\nif(USE_CCACHE)\n  find_program(CCACHE_PATH ccache)\n  if (CCACHE_PATH)\n    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ${CCACHE_PATH})\n    set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ${CCACHE_PATH})\n  endif()\nendif()\n\ntarget_compile_definitions(OpenSCAD PRIVATE OPENSCAD_VERSION=${OPENSCAD_VERSION} OPENSCAD_SHORTVERSION=${OPENSCAD_SHORTVERSION} OPENSCAD_YEAR=${OPENSCAD_YEAR} OPENSCAD_MONTH=${OPENSCAD_MONTH})\nif (DEFINED OPENSCAD_DAY)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_DAY=${OPENSCAD_DAY})\nendif()\nif(DEFINED OPENSCAD_COMMIT)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_COMMIT=${OPENSCAD_COMMIT})\nendif()\n\n#\n# Platform specific settings\n#\n\n# Stack size 8MB; github issue 116\ntarget_compile_definitions(OpenSCAD PRIVATE \"STACKSIZE=${STACKSIZE}\") # used as default in src/platform/PlatformUtils.h\n\nif(NULLGL)\n  set(OFFSCREEN_METHOD \"NULLGL\")\n  message(STATUS \"Offscreen OpenGL Context - using NULLGL\")\nelse()\n  SET(OFFSCREEN_METHOD \"<undefined>\")\nendif()\nif(APPLE)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_OS=\"Mac OS X\")\n  message(STATUS \"Offscreen OpenGL Context - using Apple CGL/NSOpenGL\")\n  set(PLATFORM_SOURCES src/platform/PlatformUtils-mac.mm src/io/imageutils-macosx.cc src/platform/CocoaUtils.mm)\n  if(NOT HEADLESS)\n    set(PLATFORM_SOURCES ${PLATFORM_SOURCES} src/gui/AppleEvents.cc)\n  endif()\n  if(NOT NULLGL)\n    target_compile_definitions(OpenSCAD PRIVATE GL_SILENCE_DEPRECATION)\n    set(OFFSCREEN_METHOD \"Apple CGL/NSOpenGL\")\n    set(PLATFORM_SOURCES ${PLATFORM_SOURCES}\n        src/glview/offscreen-old/OffscreenContextNSOpenGL.mm\n        src/glview/OffscreenContextCGL.cc)\n  endif()\n  find_library(COCOA_LIBRARY Cocoa)\n  target_link_libraries(OpenSCAD PRIVATE ${COCOA_LIBRARY})\nelseif(UNIX)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_OS=\"Unix\")\n  set(PLATFORM_SOURCES src/io/imageutils-lodepng.cc src/platform/PlatformUtils-posix.cc)\n  if(NOT NULLGL)\n    set(OFFSCREEN_METHOD \"Unix\")\n    if(ENABLE_EGL AND OpenGL_EGL_FOUND)\n      target_compile_definitions(OpenSCAD PRIVATE ENABLE_EGL)\n      set(OFFSCREEN_METHOD \"${OFFSCREEN_METHOD} EGL\")\n      set(PLATFORM_SOURCES ${PLATFORM_SOURCES}\n\tsrc/glview/offscreen-old/OffscreenContextEGL.cc\n        src/glview/OffscreenContextEGL.cc)\n      if (NOT USE_GLAD)\n        target_compile_definitions(OpenSCAD PRIVATE GLEW_EGL)\n      endif()\n      target_link_libraries(OpenSCAD PRIVATE OpenGL::EGL)\n    endif()\n    if(ENABLE_GLX AND OpenGL_GLX_FOUND)\n      target_compile_definitions(OpenSCAD PRIVATE ENABLE_GLX)\n      set(OFFSCREEN_METHOD \"${OFFSCREEN_METHOD} GLX\")\n      set(PLATFORM_SOURCES ${PLATFORM_SOURCES}\n          src/glview/offscreen-old/OffscreenContextGLX.cc\n          src/glview/OffscreenContextGLX.cc)\n      find_package(X11 REQUIRED)\n      target_link_libraries(OpenSCAD PRIVATE X11::X11 ${CMAKE_DL_LIBS})\n    endif()\n    message(STATUS \"Offscreen OpenGL Context - using ${OFFSCREEN_METHOD}\")\n  endif()\nelseif(WIN32)\n  target_compile_definitions(OpenSCAD PRIVATE NOGDI)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_OS=\"Windows\")\n  message(STATUS \"Offscreen OpenGL Context - using Microsoft WGL\")\n  set(PLATFORM_SOURCES src/io/imageutils-lodepng.cc src/platform/PlatformUtils-win.cc)\n  if(NOT NULLGL)\n    set(OFFSCREEN_METHOD \"Windows WGL\")\n    message(STATUS \"Offscreen OpenGL Context - using Microsoft WGL\")\n    set(PLATFORM_SOURCES ${PLATFORM_SOURCES} src/glview/offscreen-old/OffscreenContextWGL.cc)\n  endif()\nendif()\n\n# NOTE: To keep HEADLESS builds working, do NOT add Qt-dependent sources here,\n#       see GUI_SOURCES list below for that.\nset(CORE_SOURCES\n  src/Feature.cc\n  src/FontCache.cc\n  src/LibraryInfo.cc\n  src/RenderStatistic.cc\n  src/core/AST.cc\n  src/core/Arguments.cc\n  src/core/Assignment.cc\n  src/core/BuiltinContext.cc\n  src/core/Builtins.cc\n  src/core/CSGNode.cc\n  src/core/CSGTreeEvaluator.cc\n  src/core/CgalAdvNode.cc\n  src/core/Children.cc\n  src/core/ColorNode.cc\n  src/core/Context.cc\n  src/core/ContextFrame.cc\n  src/core/ContextMemoryManager.cc\n  src/core/CsgOpNode.cc\n  src/core/DrawingCallback.cc\n  src/core/EvaluationSession.cc\n  src/core/Expression.cc\n  src/core/FreetypeRenderer.cc\n  src/core/FunctionType.cc\n  src/core/GroupModule.cc\n  src/core/ImportNode.cc\n  src/core/LinearExtrudeNode.cc\n  src/core/LocalScope.cc\n  src/core/ModuleInstantiation.cc\n  src/core/NodeDumper.cc\n  src/core/NodeVisitor.cc\n  src/core/OffsetNode.cc\n  src/core/Parameters.cc\n  src/core/ProjectionNode.cc\n  src/core/RenderNode.cc\n  src/core/RenderVariables.cc\n  src/core/RotateExtrudeNode.cc\n  src/core/ScopeContext.cc\n  src/core/SourceFile.cc\n  src/core/SourceFileCache.cc\n  src/core/StatCache.cc\n  src/core/SurfaceNode.cc\n  src/core/TextNode.cc\n  src/core/TransformNode.cc\n  src/core/Tree.cc\n  src/core/UndefType.cc\n  src/core/UserModule.cc\n  src/core/Value.cc\n  src/core/builtin_functions.cc\n  src/core/control.cc\n  src/core/customizer/Annotation.cc\n  src/core/customizer/CommentParser.cc\n  src/core/customizer/ParameterObject.cc\n  src/core/customizer/ParameterSet.cc\n  src/core/function.cc\n  src/core/module.cc\n  src/core/node.cc\n  src/core/parsersettings.cc\n  src/core/primitives.cc\n  src/core/progress.cc\n  src/ext/libtess2/Source/bucketalloc.c\n  src/ext/libtess2/Source/dict.c\n  src/ext/libtess2/Source/geom.c\n  src/ext/libtess2/Source/mesh.c\n  src/ext/libtess2/Source/priorityq.c\n  src/ext/libtess2/Source/sweep.c\n  src/ext/libtess2/Source/tess.c\n  src/ext/lodepng/lodepng.cpp\n  src/geometry/ClipperUtils.cc\n  src/geometry/Geometry.cc\n  src/geometry/GeometryCache.cc\n  src/geometry/GeometryEvaluator.cc\n  src/geometry/GeometryUtils.cc\n  src/geometry/PolySet.cc\n  src/geometry/PolySetBuilder.cc\n  src/geometry/PolySetUtils.cc\n  src/geometry/Polygon2d.cc\n  src/geometry/boolean_utils.cc\n  src/geometry/linalg.cc\n  src/geometry/linear_extrude.cc\n  src/glview/Camera.cc\n  src/glview/ColorMap.cc\n  src/glview/OffscreenContextFactory.cc\n  src/glview/RenderSettings.cc\n  src/glview/preview/CSGTreeNormalizer.cc\n  src/handle_dep.cc\n  src/io/DxfData.cc\n  src/io/dxfdim.cc\n  src/io/export.cc\n  src/io/export_amf.cc\n  src/io/export_dxf.cc\n  src/io/export_obj.cc\n  src/io/export_off.cc\n  src/io/export_param.cc\n  src/io/export_pdf.cc\n  src/io/export_stl.cc\n  src/io/export_svg.cc\n  src/io/export_pov.cc\n  src/io/export_param.cc\n  src/io/export_wrl.cc\n  src/io/fileutils.cc\n  src/io/import_amf.cc\n  src/io/import_json.cc\n  src/io/import_obj.cc\n  src/io/import_off.cc\n  src/io/import_stl.cc\n  src/io/import_svg.cc\n  src/libsvg/circle.cc\n  src/libsvg/data.cc\n  src/libsvg/ellipse.cc\n  src/libsvg/group.cc\n  src/libsvg/libsvg.cc\n  src/libsvg/line.cc\n  src/libsvg/path.cc\n  src/libsvg/polygon.cc\n  src/libsvg/polyline.cc\n  src/libsvg/rect.cc\n  src/libsvg/shape.cc\n  src/libsvg/svgpage.cc\n  src/libsvg/text.cc\n  src/libsvg/transformation.cc\n  src/libsvg/tspan.cc\n  src/libsvg/use.cc\n  src/libsvg/util.cc\n  src/platform/PlatformUtils.cc\n  src/utils/StackCheck.h\n  src/utils/calc.cc\n  src/utils/degree_trig.cc\n  src/utils/hash.cc\n  src/utils/printutils.cc\n  src/utils/svg.cc\n  src/utils/version_check.h\n  src/version.cc\n  ${LIB3MF_SOURCES}\n  ${PLATFORM_SOURCES}\n  ${FLEX_openscad_lexer_OUTPUTS}\n  ${BISON_openscad_parser_OUTPUTS}\n  ${FLEX_comment_lexer_OUTPUTS}\n  ${BISON_comment_parser_OUTPUTS})\nif(ENABLE_PYTHON)\n\tlist(APPEND CORE_SOURCES\n\t\t    src/core/pyopenscad.cc )\n\ttarget_compile_definitions(OpenSCAD PRIVATE ENABLE_PYTHON)\nendif()\n\nif(EXPERIMENTAL AND ENABLE_CGAL)\n  list(APPEND CORE_SOURCES\n  src/core/RoofNode.cc\n  src/geometry/roof_ss.cc\n  src/geometry/roof_vd.cc\n)\nendif()\n\nset(CGAL_SOURCES\n  src/geometry/cgal/cgalutils.cc\n  src/geometry/cgal/cgalutils-applyops.cc\n  src/geometry/cgal/cgalutils-closed.cc\n  src/geometry/cgal/cgalutils-convex.cc\n  src/geometry/cgal/cgalutils-kernel.cc\n  src/geometry/cgal/cgalutils-mesh.cc\n  src/geometry/cgal/cgalutils-minkowski.cc\n  src/geometry/cgal/cgalutils-nef.cc\n  src/geometry/cgal/cgalutils-orient.cc\n  src/geometry/cgal/cgalutils-polyhedron.cc\n  src/geometry/cgal/cgalutils-project.cc\n  src/geometry/cgal/cgalutils-tess.cc\n  src/geometry/cgal/cgalutils-triangulate.cc\n  src/geometry/cgal/CGAL_Nef_polyhedron.cc\n  src/geometry/cgal/CGALCache.cc\n  src/io/export_nef.cc\n  src/io/import_nef.cc\n  )\n\nset(MANIFOLD_SOURCES\n  src/geometry/manifold/ManifoldGeometry.cc\n  src/geometry/manifold/manifoldutils.cc\n  src/geometry/manifold/manifold-applyops.cc\n  src/geometry/manifold/Polygon2d-manifold.cc\n)\n\nset(MANIFOLD_CGAL_SOURCES\n  src/geometry/manifold/manifold-applyops-minkowski.cc\n)\n\nif(USE_BUILTIN_CLIPPER2)\n  set(CLIPPER2_UTILS OFF)\n  set(CLIPPER2_EXAMPLES OFF)\n  set(CLIPPER2_TESTS OFF)\n  add_subdirectory(\"submodules/Clipper2/CPP\" EXCLUDE_FROM_ALL)\n  set(Clipper2_FOUND \"YES\")\n  if(NOT TARGET Clipper2::Clipper2)\n    add_library(Clipper2::Clipper2 ALIAS Clipper2)\n  endif()\n  message(STATUS \"Clipper2 submodule\")\nelse()\n  find_package(Clipper2 REQUIRED QUIET)\n  message(STATUS \"Clipper2: ${Clipper2_VERSION}\")\nendif()\ntarget_link_libraries(OpenSCAD PRIVATE Clipper2::Clipper2)\n\nif(ENABLE_MANIFOLD)\n  if(NOT DEFINED MANIFOLD_PAR)\n    # Note: currently only Manifold-related code makes use of TBB parallelization\n    # (\"exact\" CGAL numerics are not thread-safe)\n    target_compile_options(OpenSCAD PRIVATE\n      -DENABLE_TBB\n    )\n    find_package(TBB QUIET)\n    if (NOT TBB_FOUND AND PKG_CONFIG_FOUND)\n      pkg_check_modules(TBB tbb REQUIRED)\n      add_library(TBB::tbb UNKNOWN IMPORTED)\n      set_target_properties(TBB::tbb\n        PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"${TBB_INCLUDE_DIRS}\")\n      set_target_properties(TBB::tbb\n        PROPERTIES INTERFACE_LINK_LIBRARIES \"${TBB_LINK_LIBRARIES}\")\n      list(GET TBB_LINK_LIBRARIES 0 TBB_IMPORTED_LOCATION)\n      set_target_properties(TBB::tbb\n        PROPERTIES IMPORTED_LOCATION \"${TBB_IMPORTED_LOCATION}\")\n    endif()\n    message(STATUS \"TBB: ${TBB_VERSION}\")\n    target_link_libraries(OpenSCAD PRIVATE TBB::tbb)\n\n    set(MANIFOLD_PAR ON CACHE BOOL \"Parallel backend\" FORCE)\n  endif()\n\n  set(MANIFOLD_PYBIND OFF)\n  set(MANIFOLD_TEST OFF)\n  if(USE_BUILTIN_MANIFOLD)\n    if(CMAKE_UNITY_BUILD)\n      set(CMAKE_UNITY_BUILD OFF)\n      add_subdirectory(submodules/manifold EXCLUDE_FROM_ALL)\n      set(CMAKE_UNITY_BUILD ON)\n    else()\n      add_subdirectory(submodules/manifold EXCLUDE_FROM_ALL)\n    endif()\n    message(STATUS \"mainfold submodule: ${manifold_VERSION}\")\n  else()\n    find_package(manifold REQUIRED QUIET)\n    message(STATUS \"mainfold: ${manifold_VERSION}\")\n  endif()\n  target_link_libraries(OpenSCAD PRIVATE manifold::manifold)\n  add_sanitizers(manifold)\n\n  if (USE_MANIFOLD_TRIANGULATOR)\n    target_compile_definitions(OpenSCAD PRIVATE USE_MANIFOLD_TRIANGULATOR)\n  endif()\nendif()\n\n#\n# Offscreen OpenGL context source code\n#\nif(NULLGL)\n  message(STATUS \"NULLGL is set. Overriding OpenGL(TM) settings\")\n  set(OFFSCREEN_SOURCES\n    src/glview/Renderer.cc\n    src/glview/NULLGL.cc # contains several 'nullified' versions of above .cc files\n    src/glview/OffscreenView.cc\n    src/glview/OffscreenContextNULL.cc\n    src/io/export_png.cc\n    src/io/imageutils.cc)\nelse()\n  if(USE_LEGACY_RENDERERS)\n    set(LEGACY_RENDERER_SOURCES\n      src/glview/cgal/LegacyCGALRenderer.cc\n      src/glview/preview/LegacyOpenCSGRenderer.cc\n      src/glview/preview/LegacyThrownTogetherRenderer.cc\n      src/glview/LegacyRendererUtils.cc\n    )\n  endif()\n  set(OFFSCREEN_SOURCES\n    src/glview/OpenGLContext.cc\n    src/glview/fbo.cc\n    src/glview/Renderer.cc\n    src/glview/system-gl.cc\n    src/glview/VertexArray.cc\n    src/glview/VertexState.cc\n    src/glview/VBORenderer.cc\n    src/glview/GLView.cc\n    src/glview/hershey.cc\n    src/glview/OffscreenView.cc\n    src/glview/cgal/CGALRenderer.cc\n    src/glview/cgal/CGALRenderUtils.cc\n    src/glview/preview/OpenCSGRenderer.cc\n    src/glview/preview/ThrownTogetherRenderer.cc\n    src/io/export_png.cc\n    src/io/imageutils.cc\n    ${LEGACY_RENDERER_SOURCES}\n    ${GLEW_SOURCES})\nendif()\n\n\nif(UNIX AND (NOT APPLE) AND (NOT HEADLESS))\n  set(PLATFORM_INPUT_DRIVER_SOURCES src/gui/input/JoystickInputDriver.cc)\n  target_compile_definitions(OpenSCAD PRIVATE ENABLE_JOYSTICK)\nendif()\n\nset(INPUT_DRIVER_SOURCES\n  ${PLATFORM_INPUT_DRIVER_SOURCES}\n  ${INPUT_DRIVER_HIDAPI_SOURCES}\n  ${INPUT_DRIVER_SPNAV_SOURCES}\n  ${INPUT_DRIVER_DBUS_SOURCES})\n\nset(GUI_SOURCES\n  ${GUI_SOURCES}\n  src/openscad_gui.cc\n  src/gui/AutoUpdater.cc\n  src/gui/CGALWorker.cc\n  src/gui/ViewportControl.cc\n  src/gui/Console.cc\n  src/gui/Dock.cc\n  src/gui/Editor.cc\n  src/gui/ErrorLog.cc\n  src/gui/EventFilter.h\n  src/gui/ExportPdfDialog.cc\n  src/gui/FontListDialog.cc\n  src/gui/FontListTableView.cc\n  src/gui/InitConfigurator.cc\n  src/gui/LaunchingScreen.cc\n  src/gui/LibraryInfoDialog.cc\n  src/gui/MainWindow.cc\n  src/gui/Measurement.cc\n  src/gui/Animate.cc\n  src/gui/FontList.cc\n  src/gui/MouseSelector.cc\n  src/gui/OctoPrint.cc\n  src/gui/OpenCSGWarningDialog.cc\n  src/gui/OpenSCADApp.cc\n  src/gui/Preferences.cc\n  src/gui/PrintInitDialog.cc\n  src/gui/PrintService.cc\n  src/gui/ExternalToolInterface.cc\n  src/gui/ProgressWidget.cc\n  src/gui/QGLView.cc\n  src/gui/QGLView2.cc\n  src/gui/QSettingsCached.cc\n  src/gui/QWordSearchField.cc\n  src/gui/ScadApi.cc\n  src/gui/ScadLexer.cc\n  src/gui/ScintillaEditor.cc\n  src/gui/Settings.cc\n  src/gui/SettingsWriter.cc\n  src/gui/TabManager.cc\n  src/gui/TabWidget.cc\n  src/gui/UIUtils.cc\n  src/gui/WindowManager.cc\n  src/gui/IgnoreWheelWhenNotFocused.cc\n  src/gui/input/AxisConfigWidget.cc\n  src/gui/input/ButtonConfigWidget.cc\n  src/gui/input/InputDriver.cc\n  src/gui/input/InputDriverManager.cc\n  src/gui/input/InputEventMapper.cc\n  src/gui/parameter/GroupWidget.cc\n  src/gui/parameter/ParameterCheckBox.cc\n  src/gui/parameter/ParameterComboBox.cc\n  src/gui/parameter/ParameterSlider.cc\n  src/gui/parameter/ParameterSpinBox.cc\n  src/gui/parameter/ParameterText.cc\n  src/gui/parameter/ParameterVector.cc\n  src/gui/parameter/ParameterVirtualWidget.cc\n  src/gui/parameter/ParameterWidget.cc\n  ${INPUT_DRIVER_SOURCES}\n  )\n\n# header-only code\nset(GUI_HEADER_ONLY\n  src/gui/AboutDialog.h\n  src/gui/Network.h\n  src/gui/NetworkSignal.h\n)\n\n# To be added in Source for QtCreator to show them in project tree\nset(GUI_HEADERS\n    src/gui/Animate.h\n    src/gui/AppleEvents.h\n    src/gui/AutoUpdater.h\n    src/gui/CGALWorker.h\n    src/gui/Console.h\n    src/gui/Dock.h\n    src/gui/Editor.h\n    src/gui/ErrorLog.h\n    src/gui/EventFilter.h\n    src/gui/ExportPdfDialog.h\n    src/gui/FontList.h\n    src/gui/FontListDialog.h\n    src/gui/FontListTableView.h\n    src/gui/IgnoreWheelWhenNotFocused.h\n    src/gui/InitConfigurator.h\n    src/gui/LaunchingScreen.h\n    src/gui/LibraryInfoDialog.h\n    src/gui/MainWindow.h\n    src/gui/MouseSelector.h\n    src/gui/Network.h\n    src/gui/NetworkSignal.h\n    src/gui/OctoPrint.h\n    src/gui/OpenCSGWarningDialog.h\n    src/gui/OpenSCADApp.h\n    src/gui/Preferences.h\n    src/gui/PrintInitDialog.h\n    src/gui/PrintService.h\n    src/gui/ProgressWidget.h\n    src/gui/QGLView.h\n    src/gui/QSettingsCached.h\n    src/gui/QWordSearchField.h\n    src/gui/ScadApi.h\n    src/gui/ScadLexer.h\n    src/gui/ScintillaEditor.h\n    src/gui/Settings.h\n    src/gui/SettingsWriter.h\n    src/gui/TabManager.h\n    src/gui/TabWidget.h\n    src/gui/UIUtils.h\n    src/gui/ViewportControl.h\n    src/gui/WindowManager.h\n    src/gui/qt-obsolete.h\n    src/gui/qtgettext.h\n    src/gui/AboutDialog.h\n    src/gui/parameter/GroupWidget.h\n    src/gui/parameter/ParameterCheckBox.h\n    src/gui/parameter/ParameterComboBox.h\n    src/gui/parameter/ParameterSlider.h\n    src/gui/parameter/ParameterSpinBox.h\n    src/gui/parameter/ParameterText.h\n    src/gui/parameter/ParameterVector.h\n    src/gui/parameter/ParameterVirtualWidget.h\n    src/gui/parameter/ParameterWidget.h\n)\n\n# To be added in Source for QtCreator to show them in project tree\nset(GUI_UIS\n    ${GUI_UIS}\n    src/gui/AboutDialog.ui\n    src/gui/Animate.ui\n    src/gui/Console.ui\n    src/gui/ErrorLog.ui\n    src/gui/ExportPdfDialog.ui\n    src/gui/FontList.ui\n    src/gui/FontListDialog.ui\n    src/gui/LaunchingScreen.ui\n    src/gui/LibraryInfoDialog.ui\n    src/gui/MainWindow.ui\n    src/gui/OpenCSGWarningDialog.ui\n    src/gui/Preferences.ui\n    src/gui/PrintInitDialog.ui\n    src/gui/ProgressWidget.ui\n    src/gui/ViewportControl.ui\n    src/gui/input/AxisConfigWidget.ui\n    src/gui/input/ButtonConfigWidget.ui\n    src/gui/parameter/ParameterCheckBox.ui\n    src/gui/parameter/ParameterComboBox.ui\n    src/gui/parameter/ParameterDescriptionWidget.ui\n    src/gui/parameter/ParameterSlider.ui\n    src/gui/parameter/ParameterSpinBox.ui\n    src/gui/parameter/ParameterText.ui\n    src/gui/parameter/ParameterVector.ui\n    src/gui/parameter/ParameterWidget.ui\n)\n\nif (ENABLE_MANIFOLD)\n  target_compile_definitions(OpenSCAD PRIVATE ENABLE_MANIFOLD)\n  list(APPEND Sources ${MANIFOLD_SOURCES})\nendif()\nif (ENABLE_CGAL)\n  list(APPEND Sources ${CGAL_SOURCES})\nendif()\nif (ENABLE_MANIFOLD AND ENABLE_CGAL)\n  list(APPEND Sources ${MANIFOLD_CGAL_SOURCES})\nendif()\nlist(APPEND Sources src/openscad.cc ${CORE_SOURCES} ${OFFSCREEN_SOURCES})\n\nset_source_files_properties(\n  # flex and bison tends to generate many macros, which does not work well with\n  # unity build\n  ${FLEX_openscad_lexer_OUTPUTS}\n  ${BISON_openscad_parser_OUTPUTS}\n  ${FLEX_comment_lexer_OUTPUTS}\n  ${BISON_comment_parser_OUTPUTS}\n  # manifold uses a lot of anonymous namespaces.\n  # unity build will cause naming conflict for functions inside those namespaces.\n  ${MANIFOLD_SOURCES}\n  # files using opengl does not work well with unity build, again due to the\n  # macros\n  ${OFFSCREEN_SOURCES}\n  ${PLATFORM_SOURCES}\n  src/glview/OffscreenContextFactory.cc\n  src/glview/RenderSettings.cc\n  src/glview/Camera.cc\n  src/glview/ColorMap.cc\n  src/glview/preview/CSGTreeNormalizer.cc\n  src/gui/QGLView.cc\n  src/gui/QGLView2.cc\n  # spnv.h references Xlib.h\n  src/gui/input/SpaceNavInputDriver.cc\n  # _USE_MATH_DEFINES should be defined before the first include of cmath,\n  # unity build will violate this so we just exclude them\n  src/core/BuiltinContext.cc\n  src/geometry/roof_vd.cc\n  src/geometry/manifold/manifold-applyops-minkowski.cc\n  src/io/DxfData.cc\n  src/utils/calc.cc\n  src/utils/degree_trig.cc\n  PROPERTIES SKIP_UNITY_BUILD_INCLUSION ON)\n\nset(RESOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/resources)\nif(HEADLESS)\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_NOGUI)\nelse()\n  list(APPEND RESOURCE_FILES\n    ${RESOURCE_DIR}/common.qrc\n    ${RESOURCE_DIR}/icons-chokusen.qrc\n    ${RESOURCE_DIR}/icons-chokusen-dark.qrc\n  )\n  # GUI_UIS for .ui files to be indexed by Qt Creator despite AUTOUIC usage\n  # GUI_HEADERS for .h files to be indexed by Qt Creator despite AUTOUIC usage\n  list(APPEND Sources ${GUI_SOURCES} ${GUI_HEADER_ONLY} ${GUI_UIS} ${GUI_HEADERS})\nendif()\n\nif (SNAPSHOT)\n  set(SNAPSHOT_SUFFIX \"-nightly\")\n  set(SNAPSHOT_NAME_SUFFIX \" (Nightly)\")\n  target_compile_definitions(OpenSCAD PRIVATE OPENSCAD_SNAPSHOT)\nendif()\nset(WINDOWS_RESOURCE_PATH ${CMAKE_BINARY_DIR}/openscad_win32${SNAPSHOT_SUFFIX}.rc)\nset(MACOSX_BUNDLE_ICON_FILE icon${SNAPSHOT_SUFFIX}.icns)\n\nif (APPLE)\n  list(APPEND RESOURCE_FILES ${RESOURCE_DIR}/mac.qrc)\n  list(APPEND RESOURCE_FILES ${RESOURCE_DIR}/icons/${MACOSX_BUNDLE_ICON_FILE})\nelseif(WIN32)\n  list(APPEND RESOURCE_FILES ${WINDOWS_RESOURCE_PATH})\nendif()\n\nif (SORT_BUILD)\n  # Build the last modified sources first (to fail fast during development)\n  execute_process(\n    COMMAND ../scripts/sort_cmake_filelist.sh \"${Sources}\"\n    OUTPUT_VARIABLE Sources)\nendif()\n\ntarget_sources(OpenSCAD PRIVATE ${Sources} ${RESOURCE_FILES})\nfind_program(SHELL_EXE NAMES sh bash $ENV{SHELL})\nadd_custom_command(TARGET OpenSCAD POST_BUILD\n    COMMAND \"${SHELL_EXE}\"\n    ARGS \"${CMAKE_CURRENT_LIST_DIR}/scripts/translation-make.sh\" \"${SUFFIX_WITH_DASH}\"\n    COMMENT \"Compiling language files\")\n\nif(APPLE AND NOT APPLE_UNIX)\n  set_target_properties(OpenSCAD PROPERTIES\n    MACOSX_BUNDLE_INFO_PLIST ${CMAKE_SOURCE_DIR}/Info.plist.in\n    MACOSX_BUNDLE TRUE\n    MACOSX_BUNDLE_ICON_FILE ${MACOSX_BUNDLE_ICON_FILE}\n    MACOSX_BUNDLE_BUNDLE_VERSION ${OPENSCAD_YEAR}.${OPENSCAD_MONTH}.${OPENSCAD_DAY}\n    MACOSX_BUNDLE_SHORT_VERSION_STRING ${OPENSCAD_YEAR}.${OPENSCAD_MONTH}\n    RESOURCE \"${RESOURCE_FILES}\"\n  )\n  set(BUNDLE_RESOURCES_DIR ${CMAKE_CURRENT_BINARY_DIR}/OpenSCAD.app/Contents/Resources)\n  file(COPY ${CMAKE_SOURCE_DIR}/color-schemes DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/examples DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/fonts DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/libraries DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/locale DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/shaders DESTINATION ${BUNDLE_RESOURCES_DIR})\n  file(COPY ${CMAKE_SOURCE_DIR}/templates DESTINATION ${BUNDLE_RESOURCES_DIR})\nelseif(MINGW)\n  set_target_properties(OpenSCAD PROPERTIES\n    LINK_FLAGS \"-Wl,--stack,${STACKSIZE}\"\n  )\nelseif(MSVC)\n  set_target_properties(OpenSCAD PROPERTIES\n    LINK_FLAGS \"-subsystem:windows -ENTRY:mainCRTStartup -stack:${STACKSIZE}\"\n  )\nendif()\n\nif (USE_QT6)\n  if(NOT HEADLESS)\n    target_link_libraries(OpenSCAD PRIVATE\n      Qt6::Core Qt6::Core5Compat Qt6::Widgets Qt6::Multimedia Qt6::OpenGL Qt6::OpenGLWidgets Qt6::Concurrent Qt6::Network Qt6::Svg\n      ${QT6QSCINTILLA_LIBRARY} ${Qt6DBus_LIBRARIES} ${Qt6Gamepad_LIBRARIES}\n    )\n  endif()\n  if(MXECROSS)\n    target_link_libraries(OpenSCAD PRIVATE Qt6::QSvgPlugin)\n  endif()\nelse()\n  if(NOT HEADLESS)\n    target_link_libraries(OpenSCAD PRIVATE\n      Qt5::Core Qt5::Widgets Qt5::Multimedia Qt5::OpenGL Qt5::Concurrent Qt5::Network Qt5::Svg\n      ${QT5QSCINTILLA_LIBRARY} ${Qt5DBus_LIBRARIES} ${Qt5Gamepad_LIBRARIES}\n    )\n  endif()\n  if(MXECROSS)\n    target_link_libraries(OpenSCAD PRIVATE Qt5::QSvgPlugin)\n  endif()\nendif()\n\n# Configure icon-related files, for release vs nightly\nconfigure_file(${CMAKE_CURRENT_LIST_DIR}/openscad.appdata.xml.in ${CMAKE_CURRENT_LIST_DIR}/openscad.appdata.xml.in2)\nconfigure_file(${RESOURCE_DIR}/icons/openscad.desktop.in ${RESOURCE_DIR}/icons/openscad.desktop)\nconfigure_file(${RESOURCE_DIR}/common.qrc.in ${RESOURCE_DIR}/common.qrc)\nconfigure_file(${RESOURCE_DIR}/mac.qrc.in ${RESOURCE_DIR}/mac.qrc)\n\n# Installation\nif(WIN32)\n  set(OPENSCAD_BINDIR \".\")\n  set(OPENSCAD_INSTALL_RESOURCEDIR \".\")\nelse()\n  set(OPENSCAD_BINDIR ${CMAKE_INSTALL_BINDIR})\n  set(OPENSCAD_INSTALL_RESOURCEDIR ${CMAKE_INSTALL_DATAROOTDIR}/openscad${SUFFIX_WITH_DASH})\nendif()\n\nif(NOT APPLE OR APPLE_UNIX)\n  set_target_properties(OpenSCAD PROPERTIES OUTPUT_NAME openscad${SUFFIX_WITH_DASH})\n  install(TARGETS OpenSCAD RUNTIME DESTINATION \"${OPENSCAD_BINDIR}\")\n  if(WIN32)\n    if(USE_MIMALLOC AND MI_LINK_SHARED)\n      if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n        install(FILES ${CMAKE_SOURCE_DIR}/submodules/mimalloc/bin/mimalloc-redirect.dll DESTINATION \".\")\n      elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)\n        install(FILES ${CMAKE_SOURCE_DIR}/submodules/mimalloc/bin/mimalloc-redirect32.dll DESTINATION \".\")\n      endif()\n      install(FILES ${CMAKE_BINARY_DIR}/submodules/mimalloc/mimalloc.dll DESTINATION \".\")\n    endif()\n  else()\n    install(FILES ${CMAKE_CURRENT_LIST_DIR}/doc/openscad.1 DESTINATION ${CMAKE_INSTALL_MANDIR}/man1 RENAME openscad${SUFFIX_WITH_DASH}.1)\n    install(FILES ${CMAKE_CURRENT_LIST_DIR}/openscad.appdata.xml DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/metainfo RENAME org.openscad.OpenSCAD${SUFFIX_WITH_DASH}.appdata.xml)\n    install(FILES ${RESOURCE_DIR}/icons/openscad.desktop DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications RENAME openscad${SUFFIX_WITH_DASH}.desktop)\n    install(FILES ${RESOURCE_DIR}/icons/openscad.xml DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/mime/packages RENAME openscad${SUFFIX_WITH_DASH}.xml)\n    install(FILES ${RESOURCE_DIR}/icons/openscad${SNAPSHOT_SUFFIX}-48.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/48x48/apps RENAME openscad${SNAPSHOT_SUFFIX}.png)\n    install(FILES ${RESOURCE_DIR}/icons/openscad${SNAPSHOT_SUFFIX}-64.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/64x64/apps RENAME openscad${SNAPSHOT_SUFFIX}.png)\n    install(FILES ${RESOURCE_DIR}/icons/openscad${SNAPSHOT_SUFFIX}-128.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/128x128/apps RENAME openscad${SNAPSHOT_SUFFIX}.png)\n    install(FILES ${RESOURCE_DIR}/icons/openscad${SNAPSHOT_SUFFIX}-256.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/256x256/apps RENAME openscad${SNAPSHOT_SUFFIX}.png)\n    install(FILES ${RESOURCE_DIR}/icons/openscad${SNAPSHOT_SUFFIX}-512.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/512x512/apps RENAME openscad${SNAPSHOT_SUFFIX}.png)\n  endif()\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/color-schemes DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\")\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/examples DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\")\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/fonts DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\" PATTERN \".uuid\" EXCLUDE)\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/libraries DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\" PATTERN \".git*\" EXCLUDE)\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/locale DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\" FILES_MATCHING PATTERN \"*/LC_MESSAGES/openscad.mo\")\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/shaders DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\")\n  install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/templates DESTINATION \"${OPENSCAD_INSTALL_RESOURCEDIR}\" FILES_MATCHING PATTERN \"*.json\")\nelse()\n  install(TARGETS ${CMAKE_PROJECT_NAME}\n      BUNDLE DESTINATION ${CMAKE_INSTALL_BINDIR}\n  )\nendif()\n\n# Packaging: CPACK_* settings should be configured before `include(CPack)`\ninclude(InstallRequiredSystemLibraries)\nset(CPACK_PACKAGE_NAME \"OpenSCAD\")\nset(CPACK_PACKAGE_VENDOR \"The OpenSCAD Developers\")\nset(CPACK_PACKAGE_VERSION \"${OPENSCAD_VERSION}\")\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"The Programmer's Solid 3D CAD Modeler\")\n\nif(MXECROSS)\n  set(CPACK_GENERATOR ZIP;NSIS)\n  set(CPACK_SYSTEM_NAME ${PACKAGE_ARCH})\n  set(CPACK_PACKAGE_EXECUTABLES \"openscad;${CPACK_PACKAGE_NAME}${SNAPSHOT_NAME_SUFFIX}\")\n  set(CPACK_PACKAGE_INSTALL_DIRECTORY \"${CPACK_PACKAGE_NAME}${SNAPSHOT_NAME_SUFFIX}\")\n  set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY \"${CPACK_PACKAGE_NAME}${SNAPSHOT_NAME_SUFFIX}\")\n  if(\"${CMAKE_VERSION}\" VERSION_GREATER_EQUAL \"3.22\")\n    set(CPACK_NSIS_IGNORE_LICENSE_PAGE ON)\n  else()\n    message(FATAL_ERROR \"CPACK_NSIS_IGNORE_LICENSE_PAGE requires cmake 3.22\")\n  endif()\n  set(CPACK_NSIS_EXTRA_PREINSTALL_COMMANDS \"\\\n    !include \\\\\\\"FileFunc.nsh\\\\\\\"\\n\\\n    !include \\\\\\\"${CMAKE_SOURCE_DIR}/cmake/nsis/mingw-file-association.nsh\\\\\\\"\\\n  \")\n  set(CPACK_NSIS_EXTRA_INSTALL_COMMANDS \"\\\n    !include \\\\\\\"${CMAKE_BINARY_DIR}/nsis-extra-install-commands.nsh\\\\\\\"\\\n  \")\n  set(CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS \"\\\n    !include \\\\\\\"${CMAKE_BINARY_DIR}/nsis-extra-uninstall-commands.nsh\\\\\\\"\\\n  \")\nendif()\nset(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/COPYING\")\n# None of config time variables are available for CPACK_PROJECT_CONFIG_FILE, so we configure it now with values.\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/openscad_cpack.cmake.in\"\n               \"${CMAKE_BINARY_DIR}/openscad_cpack.cmake\" @ONLY)\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/nsis/extra-install-commands.nsh.in\"\n               \"${CMAKE_BINARY_DIR}/nsis-extra-install-commands.nsh\" @ONLY)\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/nsis/extra-uninstall-commands.nsh.in\"\n               \"${CMAKE_BINARY_DIR}/nsis-extra-uninstall-commands.nsh\" @ONLY)\n# CPACK_PROJECT_CONFIG_FILE is for configuring CPack-generator specific settings\nset(CPACK_PROJECT_CONFIG_FILE \"${CMAKE_BINARY_DIR}/openscad_cpack.cmake\")\nset(CPACK_THREADS 0)\n\nif(ENABLE_TESTS)\n  enable_testing()\n  add_subdirectory(tests)\nendif()\n\nif(OFFLINE_DOCS)\n  add_subdirectory(resources)\nendif()\n\nconfigure_file(${RESOURCE_DIR}/openscad_win32${SNAPSHOT_SUFFIX}.rc.in\n\t       ${CMAKE_BINARY_DIR}/openscad_win32${SNAPSHOT_SUFFIX}.rc)\ninclude(CPack)\n\nadd_sanitizers(OpenSCAD)\n\nif(INFO)\n  include(\"cmake/Modules/info.cmake\")\nendif()\n"
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 2.1240234375,
          "content": "﻿{\n  \"configurations\": [\n\t\t{\n\t\t\t\"name\": \"x86-Debug\",\n\t\t\t\"generator\": \"Ninja\",\n\t\t\t\"configurationType\": \"Debug\",\n\t\t\t\"inheritEnvironments\": [\n\t\t\t\t\"msvc_x86\"\n\t\t\t],\n\t\t\t\"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n\t\t\t\"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\installDebug\\\\${name}\",\n\t\t\t\"cmakeCommandArgs\": \"--no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE=${env.VCPKG_PATH}\\\\scripts\\\\buildsystems\\\\vcpkg.cmake -DCMAKE_CXX_FLAGS=\\\"/we4316 /EHsc\\\"\",\n\t\t\t\"buildCommandArgs\": \"-v\",\n\t\t\t\"ctestCommandArgs\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"x86-Release\",\n\t\t\t\"generator\": \"Ninja\",\n\t\t\t\"configurationType\": \"Release\",\n\t\t\t\"inheritEnvironments\": [\n\t\t\t\t\"msvc_x86\"\n\t\t\t],\n\t\t\t\"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n\t\t\t\"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\installRelease\\\\${name}\",\n\t\t\t\"cmakeCommandArgs\": \"--no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE=${env.VCPKG_PATH}\\\\scripts\\\\buildsystems\\\\vcpkg.cmake -DCMAKE_CXX_FLAGS=\\\"/we4316 /EHsc\\\"\",\n\t\t\t\"buildCommandArgs\": \"-v\",\n\t\t\t\"ctestCommandArgs\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"x64-Debug\",\n\t\t\t\"generator\": \"Ninja\",\n\t\t\t\"configurationType\": \"Debug\",\n\t\t\t\"inheritEnvironments\": [\n\t\t\t\t\"msvc_x64_x64\"\n\t\t\t],\n\t\t\t\"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n\t\t\t\"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n\t\t\t\"cmakeCommandArgs\": \"--no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE=${env.VCPKG_PATH}\\\\scripts\\\\buildsystems\\\\vcpkg.cmake -DCMAKE_CXX_FLAGS=\\\"/we4316 /EHsc\\\"\",\n\t\t\t\"buildCommandArgs\": \"-v\",\n\t\t\t\"ctestCommandArgs\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"x64-Release\",\n\t\t\t\"generator\": \"Ninja\",\n\t\t\t\"configurationType\": \"Release\",\n\t\t\t\"inheritEnvironments\": [\n\t\t\t\t\"msvc_x64_x64\"\n\t\t\t],\n\t\t\t\"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n\t\t\t\"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n\t\t\t\"cmakeCommandArgs\": \"--no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE=${env.VCPKG_PATH}\\\\scripts\\\\buildsystems\\\\vcpkg.cmake -DCMAKE_CXX_FLAGS=\\\"/we4316 /EHsc\\\"\",\n\t\t\t\"buildCommandArgs\": \"-v\",\n\t\t\t\"ctestCommandArgs\": \"\"\n\t\t}\n  ]\n}"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.951171875,
          "content": "\n*********************************************************************\n  As a special exception, you have permission to link this program\n  with the CGAL library and distribute executables, as long as you\n  follow the requirements of the GNU GPL in regard to all of the\n  software in the executable aside from CGAL.\n*********************************************************************\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "Info.plist",
          "type": "blob",
          "size": 2.869140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist SYSTEM \"file://localhost/System/Library/DTDs/PropertyList.dtd\">\n<plist version=\"0.9\">\n<dict>\n\t<key>CFBundleName</key>\n\t<string>OpenSCAD</string>\n\t<key>CFBundleIconFile</key>\n\t<string>@ICON@</string>\n\t<key>CFBundlePackageType</key>\n\t<string>APPL</string>\n\t<key>CFBundleSignature</key>\n\t<string>????</string>\n\t<key>CFBundleExecutable</key>\n\t<string>OpenSCAD</string>\n\t<key>CFBundleIdentifier</key>\n\t<string>org.openscad.OpenSCAD</string>\n\t<key>CFBundleVersion</key>\n\t<string>@SHORT_VERSION@</string>\n\t<key>CFBundleShortVersionString</key>\n\t<string>@SHORT_VERSION@</string>\n\t<key>LSEnvironment</key>\n\t<dict>\n\t\t<key>GUI_LAUNCHED</key>\n\t\t<string></string>\n\t</dict>\n\t<key>CFBundleDocumentTypes</key>\n\t<array>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>scad</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeMIMETypes</key>\n\t\t\t<array>\n\t\t\t\t<string>text/plain</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>OpenSCAD Design</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Editor</string>\n\t\t\t<key>CFBundleTypeIconSystemGenerated</key>\n\t\t\t<integer>1</integer>\n\t\t\t<key>CFBundleTypeIconFile</key>\n\t\t\t<string>SCAD.icns</string>\n\t\t\t<key>LSIsAppleDefaultForType</key>\n\t\t\t<true/>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>stl</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>STL 3D file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>off</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>OFF 3D file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>dxf</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>DXF file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>svg</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>SVG file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>amf</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>AMF file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>3mf</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>3MF file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t</array>\n\t<key>NSAppleScriptEnabled</key>\n\t<true/>\n\t<key>NSPrincipalClass</key>\n\t<string>NSApplication</string>\n\t<key>OSAScriptingDefinition</key>\n\t<string>OpenSCAD.sdef</string>\n\t<key>SUPublicDSAKeyFile</key>\n\t<string>dsa_pub.pem</string>\n\t<key>SUFeedURL</key>\n\t<string>https://files.openscad.org/appcast.xml</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "Info.plist.in",
          "type": "blob",
          "size": 2.708984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist SYSTEM \"file://localhost/System/Library/DTDs/PropertyList.dtd\">\n<plist version=\"0.9\">\n<dict>\n\t<key>CFBundleName</key>\n\t<string>OpenSCAD</string>\n\t<key>CFBundleIconFile</key>\n\t<string>${MACOSX_BUNDLE_ICON_FILE}</string>\n\t<key>CFBundlePackageType</key>\n\t<string>APPL</string>\n\t<key>CFBundleSignature</key>\n\t<string>????</string>\n\t<key>CFBundleExecutable</key>\n\t<string>OpenSCAD</string>\n\t<key>CFBundleIdentifier</key>\n\t<string>org.openscad.OpenSCAD</string>\n\t<key>CFBundleVersion</key>\n\t<string>${MACOSX_BUNDLE_BUNDLE_VERSION}</string>\n\t<key>CFBundleShortVersionString</key>\n\t<string>${MACOSX_BUNDLE_SHORT_VERSION_STRING}</string>\n\t<key>LSEnvironment</key>\n\t<dict>\n\t\t<key>GUI_LAUNCHED</key>\n\t\t<string></string>\n\t</dict>\n\t<key>CFBundleDocumentTypes</key>\n\t<array>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>scad</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeMIMETypes</key>\n\t\t\t<array>\n\t\t\t\t<string>text/plain</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>OpenSCAD Design</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Editor</string>\n\t\t\t<key>CFBundleTypeIconSystemGenerated</key>\n\t\t\t<integer>1</integer>\n\t\t\t<key>CFBundleTypeIconFile</key>\n\t\t\t<string>SCAD.icns</string>\n\t\t\t<key>LSIsAppleDefaultForType</key>\n\t\t\t<true/>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>stl</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>STL 3D file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>off</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>OFF 3D file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>dxf</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>DXF file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>svg</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>SVG file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>CFBundleTypeExtensions</key>\n\t\t\t<array>\n\t\t\t\t<string>amf</string>\n\t\t\t</array>\n\t\t\t<key>CFBundleTypeName</key>\n\t\t\t<string>AMF file</string>\n\t\t\t<key>CFBundleTypeRole</key>\n\t\t\t<string>Viewer</string>\n\t\t</dict>\n\t</array>\n\t<key>NSAppleScriptEnabled</key>\n\t<true/>\n\t<key>NSPrincipalClass</key>\n\t<string>NSApplication</string>\n\t<key>OSAScriptingDefinition</key>\n\t<string>OpenSCAD.sdef</string>\n\t<key>SUPublicDSAKeyFile</key>\n\t<string>dsa_pub.pem</string>\n\t<key>SUFeedURL</key>\n\t<string>https://files.openscad.org/appcast.xml</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "OpenSCAD.sdef",
          "type": "blob",
          "size": 0.369140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE dictionary SYSTEM \"file://localhost/System/Library/DTDs/sdef.dtd\">\n<dictionary title=\"OpenSCAD Terminology\">\n <suite name=\"OpenSCAD Suite\" code=\"SCAD\" description=\"AppleScript support for OpenSCAD\">\n  <command name=\"reload\" code=\"SCADrelo\" description=\"Reload file in the front window (F4)\">\n  </command>\n </suite>\n</dictionary>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.91796875,
          "content": "[![GitHub (master)](https://img.shields.io/github/checks-status/openscad/openscad/master.svg?logo=github&label=build&logoColor=black&colorA=f9d72c&style=plastic)](https://github.com/openscad/openscad/actions)\n[![CircleCI (master)](https://img.shields.io/circleci/project/github/openscad/openscad/master.svg?logo=circleci&logoColor=black&colorA=f9d72c&style=plastic)](https://circleci.com/gh/openscad/openscad/tree/master)\n[![Coverity Scan](https://img.shields.io/coverity/scan/2510.svg?colorA=f9d72c&logoColor=black&style=plastic)](https://scan.coverity.com/projects/2510)\n\n[![Visit our IRC channel](https://kiwiirc.com/buttons/irc.libera.chat/openscad.png)](https://kiwiirc.com/client/irc.libera.chat/#openscad)\n\n# What is OpenSCAD?\n<p><a href=\"https://opencollective.com/openscad/donate\"><img align=\"right\" src=\"https://opencollective.com/openscad/donate/button@2x.png?color=white\" width=\"200\"/></a>\n\nOpenSCAD is a software for creating solid 3D CAD objects. It is free software and\navailable for Linux/UNIX, MS Windows and macOS.</p>\n\nUnlike most free software for creating 3D models (such as the famous\napplication Blender), OpenSCAD focuses on the CAD aspects rather than the \nartistic aspects of 3D modeling. Thus this might be the application you are\nlooking for when you are planning to create 3D models of machine parts but\nprobably not the tool for creating computer-animated movies.\n\nOpenSCAD is not an interactive modeler. Instead it is more like a\n3D-compiler that reads a script file that describes the object and renders\nthe 3D model from this script file (see examples below). This gives you, the\ndesigner, complete control over the modeling process and enables you to easily\nchange any step in the modeling process or make designs that are defined by\nconfigurable parameters.\n\nOpenSCAD provides two main modeling techniques: First there is constructive\nsolid geometry (aka CSG) and second there is extrusion of 2D outlines. As the data\nexchange format for these 2D outlines Autocad DXF files are used. In\naddition to 2D paths for extrusion it is also possible to read design parameters\nfrom DXF files. Besides DXF files OpenSCAD can read and create 3D models in the\nSTL and OFF file formats.\n\n# Contents\n\n- [Getting Started](#getting-started)\n- [Documentation](#documentation)\n    - [Building OpenSCAD](#building-openscad)\n        - [Prerequisites](#prerequisites)\n        - [Getting the source code](#getting-the-source-code)\n        - [Building for macOS](#building-for-macos)\n        - [Building for Linux/BSD](#building-for-linuxbsd)\n        - [Building for Linux/BSD on systems with older or missing dependencies](#building-for-linuxbsd-on-systems-with-older-or-missing-dependencies)\n        - [Building for Windows](#building-for-windows)\n        - [Compilation](#compilation)\n\n# Getting started\n\nYou can download the latest binaries of OpenSCAD at\n<https://www.openscad.org/downloads.html>. Install binaries as you would any other\nsoftware.\n\nWhen you open OpenSCAD, you'll see three frames within the window. The\nleft frame is where you'll write code to model 3D objects. The right\nframe is where you'll see the 3D rendering of your model.\n\nLet's make a tree! Type the following code into the left frame:\n\n    cylinder(h = 30, r = 8);\n\nThen render the 3D model by hitting F5. Now you can see a cylinder for\nthe trunk in our tree. Now let's add the bushy/leafy part of the tree\nrepresented by a sphere. To do so, we will union a cylinder and a\nsphere.\n\n    union() {\n      cylinder(h = 30, r = 8);\n      sphere(20);\n    }\n\nBut, it's not quite right! The bushy/leafy are around the base of the\ntree. We need to move the sphere up the z-axis.\n\n    union() {\n      cylinder(h = 30, r = 8);\n      translate([0, 0, 40]) sphere(20);\n    }\n\nAnd that's it! You made your first 3D model! There are other primitive\nshapes that you can combine with other set operations (union,\nintersection, difference) and transformations (rotate, scale,\ntranslate) to make complex models! Check out all the other language\nfeatures in the [OpenSCAD\nManual](https://en.wikibooks.org/wiki/OpenSCAD_User_Manual).\n\n# Documentation\n\nHave a look at the OpenSCAD Homepage (https://www.openscad.org/documentation.html) for documentation.\n\n## Building OpenSCAD\n\nTo build OpenSCAD from source, follow the instructions for the\nplatform applicable to you below.\n\n### Prerequisites\n\nTo build OpenSCAD, you need some libraries and tools. The version\nnumbers in brackets specify the versions which have been used for\ndevelopment. Other versions may or may not work as well.\n\nIf you're using a newer version of Ubuntu, you can install these \nlibraries from aptitude. If you're using Mac, or an older Linux/BSD, there \nare build scripts that download and compile the libraries from source. \nFollow the instructions for the platform you're compiling on below.\n\n* A C++ compiler supporting C++17\n* [cmake (3.5 ->)](https://cmake.org/)\n* [Qt (5.12 ->)](https://qt.io/)\n* [QScintilla2 (2.9 ->)](https://riverbankcomputing.com/software/qscintilla/)\n* [CGAL (5.4 ->)](https://www.cgal.org/)\n * [GMP (5.x)](https://gmplib.org/)\n * [MPFR (3.x)](https://www.mpfr.org/)\n* [boost (1.61 ->)](https://www.boost.org/)\n* [OpenCSG (1.4.2 ->)](http://www.opencsg.org/)\n* [GLEW (1.5.4 ->)](http://glew.sourceforge.net/)\n* [Eigen (3.x)](https://eigen.tuxfamily.org/)\n* [glib2 (2.x)](https://developer.gnome.org/glib/)\n* [fontconfig (2.10 -> )](https://fontconfig.org/)\n* [freetype2 (2.4 -> )](https://freetype.org/)\n* [harfbuzz (0.9.19 -> )](https://www.freedesktop.org/wiki/Software/HarfBuzz/)\n* [libzip (0.10.1 -> )](https://libzip.org/)\n* [Bison (2.4 -> )](https://www.gnu.org/software/bison/)\n* [Flex (2.5.35 -> )](http://flex.sourceforge.net/)\n* [pkg-config (0.26 -> )](https://www.freedesktop.org/wiki/Software/pkg-config/)\n* [double-conversion (2.0.1 -> )](https://github.com/google/double-conversion/)\n\nFor the test suite, additional requirements are:\n* Python3 (3.8 -> )\n* [Ghostscript (10.x ->)](https://www.ghostscript.com/index.html)\n\n### Getting the source code\n\nInstall git (https://git-scm.com/) onto your system. Then run a clone:\n\n    git clone https://github.com/openscad/openscad.git\n\nThis will download the latest sources into a directory named `openscad`.\n\nTo pull the various submodules (incl. the [MCAD library](https://github.com/openscad/MCAD)), do the following:\n\n    cd openscad\n    git submodule update --init --recursive\n\n### Building for macOS\n\nPrerequisites:\n\n* Xcode\n* automake, libtool, cmake, pkg-config, wget, meson, python-packaging (we recommend installing these using Homebrew)\n\nInstall Dependencies:\n\nAfter building dependencies using one of the following options, follow the instructions in the *Compilation* section.\n\n1. **From source**\n\n    Run the script that sets up the environment variables:\n\n        source scripts/setenv-macos.sh\n\n    Then run the script to compile all the dependencies:\n\n        ./scripts/macosx-build-dependencies.sh\n\n2. **Homebrew** (assumes [Homebrew](https://brew.sh/) is already installed)\n\n        ./scripts/macosx-build-homebrew.sh\n\n### Building for Linux/BSD\n\nFirst, make sure that you have git installed (often packaged as 'git-core' \nor 'scmgit'). Once you've cloned this git repository, download and install \nthe dependency packages listed above using your system's package \nmanager. A convenience script is provided that can help with this \nprocess on some systems:\n\n    sudo ./scripts/uni-get-dependencies.sh\n\nAfter installing dependencies, check their versions. You can run this \nscript to help you:\n\n    ./scripts/check-dependencies.sh\n\nTake care that you don't have old local copies anywhere (`/usr/local/`). \nIf all dependencies are present and of a high enough version, skip ahead \nto the Compilation instructions. \n\n### Building for Linux/BSD on systems with older or missing dependencies\n\nIf some of your system dependency libraries are missing or old, then you \ncan download and build newer versions into `$HOME/openscad_deps` by \nfollowing this process. First, run the script that sets up the \nenvironment variables. \n\n    source ./scripts/setenv-unibuild.sh\n\nThen run the script to compile all the prerequisite libraries above:\n\n    ./scripts/uni-build-dependencies.sh\n\nNote that huge dependencies like gcc, qt, or glib2 are not included \nhere, only the smaller ones (boost, CGAL, opencsg, etc). After the \nbuild, again check dependencies.\n\n    ./scripts/check-dependencies.sh\n\nAfter that, follow the Compilation instructions below.\n\n### Building for Windows\n\nOpenSCAD for Windows is usually cross-compiled from Linux. If you wish to\nattempt an MSVC build on Windows, please see this site:\nhttps://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Windows\n\nTo cross-build, first make sure that you have all necessary dependencies \nof the MXE project ( listed at https://mxe.cc/#requirements ). Don't install\nMXE itself, the scripts below will do that for you under `$HOME/openscad_deps/mxe`\n\nThen get your development tools installed to get GCC. Then after you've \ncloned this git repository, start a new clean bash shell and run the \nscript that sets up the environment variables.\n\n    source ./scripts/setenv-mingw-xbuild.sh 64\n\nThen run the script to download & compile all the prerequisite libraries above:\n\n    ./scripts/mingw-x-build-dependencies.sh 64\n\nNote that this process can take several hours, and tens of gigabytes of \ndisk space, as it uses the [https://mxe.cc](https://mxe.cc) system to cross-build many\nlibraries. After it is complete, build OpenSCAD and package it to an \ninstaller:\n\n    ./scripts/release-common.sh mingw64\n\nFor a 32-bit Windows cross-build, replace 64 with 32 in the above instructions. \n\n### Building for WebAssembly\n\nWe support building OpenSCAD headless for WebAssembly w/ Emscripten, using a premade Docker image built in [openscad/openscad-wasm](https://github.com/openscad/openscad-wasm) (which also has usage examples)\n\n#### Browser\n\nThe following command creates `build-web/openscad.wasm` & `build-web/openscad.js`:\n\n```bash\n./scripts/wasm-base-docker-run.sh emcmake cmake -B build-web -DCMAKE_BUILD_TYPE=Debug -DEXPERIMENTAL=1\n./scripts/wasm-base-docker-run.sh cmake --build build-web -j2\n```\n\n[openscad/openscad-playground](https://github.com/openscad/openscad-playground) uses this WASM build to provide a [Web UI](https://ochafik.com/openscad2/) with a subset of features of OpenSCAD.\n\n> [!NOTE]\n> With a debug build (`-DCMAKE_BUILD_TYPE=Debug`), you can set C++ breakpoints in Firefox and in Chrome (the latter [needs an extension](https://developer.chrome.com/docs/devtools/wasm)).\n\n#### Standalone node.js build\n\nThe following command creates `build-node/openscad.js`, which is executable (requires `node`):\n\n```bash\n./scripts/wasm-base-docker-run.sh emcmake cmake -B build-node -DWASM_BUILD_TYPE=node -DCMAKE_BUILD_TYPE=Debug -DEXPERIMENTAL=1\n./scripts/wasm-base-docker-run.sh cmake --build build-node -j2\nbuild-node/openscad.js --help\n```\n\n> [!NOTE]\n> With a debug build (`-DCMAKE_BUILD_TYPE=Debug`), you can set C++ breakpoints in VSCode + Node ([needs an extension](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_debugging-webassembly)).\n\n### Compilation\n\nFirst, run `cmake -B build -DEXPERIMENTAL=1` to generate a Makefile in the `build` folder.\n\nThen run `cmake --build build`. Finally, on Linux you might run `cmake --install build` as root.\n\nIf you had problems compiling from source, raise a new issue in the\n[issue tracker on the github page](https://github.com/openscad/openscad/issues).\n\nThis site and it's subpages can also be helpful:\nhttps://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_OpenSCAD_from_Sources\n\nOnce built, you can run tests with `ctest` from the `build` directory.\n\nNote: Both `cmake --build` and `ctest` accepts a `-j N` argument for distributing the load over `N` parallel processes.\n\n### Running CI workflows locally\n\n*   Install [circleci-cli](https://circleci.com/docs/2.0/local-cli/) (you'll need an API key)\n\n    *Note*: we also use GitHub Workflows, but only to run tests on Windows (which we cross-build for in the Linux-based CircleCI workflows below). Also, [act](https://github.com/nektos/act) doesn't like our submodule setup anyway.\n\n*   Run the CI jobs\n\n\t```bash\n\t# When \"successful\", these will fail to upload at the very end of the workflow.\n\tcircleci local execute --job  openscad-mxe-64bit\n\tcircleci local execute --job  openscad-mxe-32bit\n\tcircleci local execute --job  openscad-appimage-64bit\n\t```\n\n\t*Note*: openscad-macos can't be built locally.\n\n*   If/when GCC gets randomly killed, give docker more RAM (e.g. 4GB per concurrent image you plan to run)\n\n*   To debug the jobs more interactively, you can go the manual route (inspect .circleci/config.yml to get the actual docker image you need)\n\n\t```bash\n\tdocker run --entrypoint=/bin/bash -it openscad/mxe-x86_64-gui:latest\n\t```\n\n\tThen once you get the console:\n\t\n\t```bash\n\tgit clone https://github.com/%your username%/openscad.git workspace\n\tcd workspace\n\tgit checkout %your branch%\n\tgit submodule init\n\tgit submodule update\n\n\t# Then execute the commands from .circleci/config.yml:\n\t#    export NUMCPU=2\n\t#    ...\n\t#    ./scripts/release-common.sh -snapshot -mingw64 -v \"$OPENSCAD_VERSION\"\n\t```\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 21.4609375,
          "content": "\n# OpenSCAD 2021.01\n\n**Language Features**\n\n* New\n  * Add function literals\n  * Add exponent function (e.g. 2^3)\n  * Add convexity parameter to resize()\n  * Add support for generic tail recursion\n  * Add $vpf for viewport field of view\n  * Add support for line-cap and line-join in SVG import\n  * Add support stroke-linejoin in SVG import\n  * Add warnings for ranges with begin < end\n  * Add warnings for matrix structure problems\n\n* Changed\n  * Allow random seeds to stick between rands() calls\n  * Make comparison operators on mixed types return undef\n  * Track reason for values turning undef\n\n* Fixed\n  * Fix Range precision\n  * Fix empty geometry handling\n  * Fix search order for imported modules\n  * Improve internal handling of data values\n  * Improve performance of array concatenation\n  * Improve float accuracy of mirror matrix calculation\n  * Improve polygon and polyhedron warnings/errors\n\n**Program Features**\n\n* GUI\n  * Add PDF export (single page only)\n  * Add jump to source code from 3D preview\n  * Add Error-Log window for tracking errors and warnings\n  * Add window menu to allow keyboard access to all docked windows\n  * Enable default binary stl output, and ascii option\n  * Show message in console when caches are flushed\n  * Disable HTML rendering in console\n  * Enable color scheme for CGAL 2D render\n  * Simplified OpenCSG edge shader, with added smoothing\n  * New and updated translations: Chinese, Armenian, French, Russian, Polish, German\n\n* Editor\n  * Edit multiple files in tabs\n  * Switch tabs via Ctrl+Tab / Ctrl+Shift+Tab\n  * Modify numbers via mouse scroll (when holding ALT)\n  * Add auto-complete & call-tips for built-ins\n  * Add configurable code snippets\n  * Add (line) bookmarks\n  * Add jump to error\n  * Add support for line/block copy and move\n  * Add convenience context menu to tab header\n  * Open include<>/use<> files via inline link\n  * Fix search highlight for utf8 text\n  * Fix display of matches in search field\n  * Add Find/Find Next/Find Previous to editor context menu\n\n* Command line\n  * Support reading scripts from STDIN\n  * Support export to STDOUT\n  * Add multi-export on command line\n  * Add --animate command line option\n  * Add --export-format command line option\n  * Allow view-port variables in command-line mode\n  * Allow export to .ast, .csg, .echo and .term in preview mode\n  * Print statistics in cmdline mode as in GUI\n\n* General\n  * Change CGAL Union to join least complex geometries first\n  * Install start shortcut for all users on Windows\n  * Install icons with defined sizes (e.g. required by flathub)\n  * Switch to C++14 and allow usage of header-only CGAL\n  * Add support for lib3MF v2.0 API\n  * Update AppStream release info\n\n**Bug Fixes**\n* Raise error when export folder does not exist (fixes #432)\n* Fixes for linear_extrude with scale and/or twist\n* Avoid undefined behavior for 'convexity' parameter to linear_extrude\n* Fix echo() formatting error (fixes #2950)\n* Fix search order for use<>\n* Fix large text (fixes #3262)\n* Fix initial editor focus (fixes #3471)\n* Fix save error handling (fixes #3582)\n* Don't show autocomplete in strings (fixes #3563)\n* Don't crash with empty CSG normalizer result (fixes #3085)\n* Don't crash if 2D hull fails\n* Only enable 30ms joystick timer when needed\n* Fix 3MF export to produce correct winding order for internal cavities (fixes #3133)\n* Fix parent module handling (fixes #3264)\n* Fix search highlight with multi-byte utf8 characters (fixes #3068)\n* Make editor visible for new file and examples in launching screen (fixes #3401)\n* Handle SCN_URIDROPPED introduced in QScintilla 2.11 (fixes #3536)\n* Fix Background Modifier (fixes #2978)\n* Use std::string as storage (fixes #3057)\n* Setting minimum size of search label (fixes #2962)\n* Use a relative import() path for svg viewbox tests\n* Fix interpretation of '&' in title bar of undocked widget\n* Fix Recent-files handling with '&' in filename (fixes #2988)\n* Handle empty first geometry in 2D Minkowski (fixes #3527)\n* Fix HiDPI non-integer scaling issue (fixes #3614)\n* Fix template action shortcut to not clash with Copy&Paste (fixes #3558)\n* Abort Nef conversion early on invalid input, to avoid segfault (fixes #2847)\n* Have Reindexer return a const ref instead of a pointer into value array\n* Set value after min/max so it's not limited to wrong range (fixes #2995)\n* Set keyboard shortcut for \"reset translation\" as Ctrl+Shift+0 (fixes #3488)\n* Ensure experimental features are disabled in release mode (fixes #3517)\n* Fix handling of file links with spaces or comma characters (fixes #3609)\n* Fix customizer presets (fixes #3522)\n* Don't crash customizer with saved vector parameters with >4 values\n* Fix crash if non-integer in [max] customizer comment\n* Fix warning when using deprecated parameter triangles with polyhedron\n* Fix reconnect to Xvfb when running tests in parallel\n* Fix dangling pointer in \"--export-format\"\n* Fix root modifier warning\n* Fix export format name handling\n* Fix handling of editor margins\n* Fix icon size and location\n* Fix build with Boost 1.72\n* Build fixes for older systems (Ubuntu 16.04, Debian 8)\n* Add work-around for test failures on MIPS\n\n# OpenSCAD 2019.05\n\n**Language Features:**\n\n* New modules\n    * assert() - stop script evaluation on failed constraints\n    * let() - scoped assignment\n* New functions\n    * ord() - convert from character to Unicode code point\n    * echo()\n    * assert() - stop script evaluation on failed constraints\n    * Type testing functions: is_undef(), is_list(), is_num(), is_bool(), is_string()\n* New special variable: $preview variable which is set to true in preview mode\n* List comprehension updates\n   * Added if/else condition\n   * Added each keyword\n   * Added C-style for loop\n   * Now allows looping over characters of a string\n* rotate_extrude(): Added angle parameter to \n* import() now supports SVG, 3MF and AMF\n* color() now supports hex color codes\n* Removed glide() and subdiv() which were never implemented\n\n**Program Features:**\n\n* Customizer: Allow parametrizing design parameters with GUI customization\n* Support for using 3D-Mouse / Joystick / Gamepad input devices for controlling the 3D view\n* 3D Printing support: Purchase from a print service partner or print to Octoprint\n* New export file formats: SVG, 3MF, AMF\n* Quick-edit and preview of values using Alt-Arrows (Shift-Alt-Arrows on macOS)\n* Added --view cmd-line parameter\n* Play sound notification on render complete\n* Line numbers and filenames are now shown for many errors and warnings\n* Hardwarning preference: Stop on first warning\n* Hardwarning and assert now shows a stack trace\n* New warnings\n    * Module call parameterns don't match module declaration\n    * Argument value of of range\n    * Duplicate passed argument\n    * Children passed to module not accepting children\n    * Reference to inknown $special_variables\n    * Duplicate assignment\n* New translations: Ukrainian, Polish\n# OpenSCAD 2015.03\n\n## 2015.03-3\n\n**OS X only: Auto-update vulnerability fix**\n\n## 2015.03-2\n\n**Bugfixes**\n* \\#1483 - Fix Z-fighting in Ortho view\n* \\#1479 - No check for infinite $fn\n* \\#1472 - \"nan\" in list comprehension causes crash\n* \\#452 - rands() fails when the seed is a floating point number\n* \\#1407 - Recursive module crash\n* \\#1425 - Animate Filename Generation - Duplicate/Missing Filenames\n* \\#1420 - expression-evaluation-tests fails on arm64\n* \\#1410 - Crash when a polygon contains NaN\n* \\#1378 - Linear extrude plus infinite twist causes crash instead of just an error\n* \\#1358 - Add more detailed installer information including version number\n* \\#1356 - Crash when multiplying matrices with undefined elements\n* \\#1350 - Saving file when HD is full ends up in data loss\n* \\#1342 - Syntax Highlighting Does Not Work on Linux Mint 17.1\n* \\#1337 - Simple detection of script and direction based on given text\n* \\#1325 - Crash when polygons with > 3 indices turn out to be degenerate\n* \\#1329 - version() returned ```[0,0,0]```\n\n## 2015.03-1\n\n**Bugfixes**\n* \\#1203 - Linux: Missing icons on Xfce\n* \\#1258 - Occasional crash when exporting STL\n* \\#1260 - Minimal window width too large\n* \\#1264 - Replace All sometimes caused a hang\n* \\#1274 - Fixed some preview bugs on Intel GPUs (OpenCSG 1.4.0)\n* \\#1276 - Module recursion sometimes caused a crash\n* \\#1277 - Automatic reload sometimes messed up camera position\n* \\#1284 - Animation flicker eliminated\n* \\#1294 - Support reproducible builds\n* \\#1317 - Normals vectors in STL were sometimes 0 0 0\n\n## 2015.03\n\n**Language Features:**\n* Added text() module for 2D text\n* Added offset() module for 2D offsets\n* Added list comprehensions and let()\n* Added concat() function\n* Added chr() function\n* surface() can now take PNG images as input\n* min() and max() can now take a vector argument\n* 2D minkowski can now handle polygons with holes\n* Variables can now be assigned in local blocks without using assign()\n\n**Program Features:**\n* Added Toolbar icons\n* New code editor based on QScintilla\n* Added Splash screen\n* Added SVG export\n* Added AMF export\n* Added --viewall and --autocenter cmd-line parameters\n* GUI is now translated into German, Czech, Spanish, French and Russian\n* MDI (Multiple Document Interface) is now available on all platforms\n* Color schemes for viewer and editor can be user-edited using JSON files\n* GUI components are now dockable\n* Added Tickmarks on axes\n\n**Bugfixes/improvements:**\n* Performance improvement: 2D (clipper), preview, hull, minkowski, surface\n* Performance improvement: Reduce duplicate evaluation of identical expressions\n* Better recursion behavior\n* STL export and import is now more robust\n* Internal cavities are better supported\n* New examples\n* Windows cmd-line behaves better\n* Better mirror() and scale() behavior when using negative factors\n\n**Deprecations:**\n* polyhedron() now takes a faces= argument rather than triangles=\n* assign() is no longer needed. Local variables can be created in any scope\n# OpenSCAD 2014.03\n\n**Language Features:**\n* Added diameter argument: circle(d), cylinder(d, d1, d2) and sphere(d)\n* Added parent_module() and $parent_modules\n* Added children() as a replacement for child()\n* Unicode strings (using UTF-8) are now correctly handled\n* Ranges can have a negative step value\n* Added norm() and cross() functions\n\n**Program Features:**\n* Cmd-line: --info parameter prints system/library info\n* Cmd-line: --csglimit parameter to change CSG rendering limit\n* Cmd-line: Better handling of cmd-line arguments under Windows\n* GUI: Added Reset View\n* GUI: Added Search&Replace in editor\n* GUI: Syntax highlighting now has a dark background theme\n* GUI: We now create a backup file before rendering to allow for recovery if OpenSCAD crashes/freezes\n* GUI: Accessibility features enabled (e.g. screenreading)\n\n**Bugfixes/improvements:**\n* Reading empty STL files sometimes caused a crash\n* OPENSCADPATH now uses semicolon as path separator under Windows\n* polyhedron() is now much more robust handling almost planar polygons\n* Automatic reloads of large designs are more robust\n* Boolean logic in if() statements are now correctly short-circuited\n* rands() with zero range caused an infinite loop\n* resize(, auto=true) didn't work when shrinking objects\n* The $children variable sometimes misbehaved due to dynamic scoping\n* The --camera cmd-line option behaved differently then the corresponding GUI function\n* PNG export now doesn't leak transparency settings into the target image\n* Improved performance of 3D hull() operations\n* Some editor misbehaviors were fixed\n* Stability fixes of CGAL-related crashes\n* Windows cmd-line can now handle spaces in filenames\n* Default CSG rendering limit is now 100K elements\n* Fixed a crash reading DXF files using comma as decimal separator\n* Fixed a crash running the cmd-line without a HOME env. variable\n* Intersecting something with nothing now correctly results in an empty object\n\n**Deprecations:**\n* child() is no longer supported. Use children() instead.\n* polyhedron(triangles=[...]): Use polyhedron(faces=[...]) instead.\n\n**Misc:**\n* Test framework now shares more code with the GUI app\n* Test report can now be automatically uploaded to dinkypage.com\n* Better compatibility with BSD systems\n* Qt5 support\n\n# OpenSCAD 2013.06\n\n**Language Features:**\n* linear_extrude now takes a scale parameter:\n  linear_extrude(height=a, slices=b, twist=c, scale=[x,y])\n* Recursive use of modules is now supported (including cascading child() operations):\n  https://github.com/openscad/openscad/blob/master/examples/example024.scad\n* Parameter list values can now depend on earlier values, e.g. for (i=[0:2], j=[0:i]) ..\n* value assignments in parameters can now depend on already declared parameters\n* Added resize() module: \n  http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#resize\n\n**Program Features:**\n* Added basic syntax highlighting in the editor\n* There is now a built-in library path in user-space:\n  http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries#Library_Locations\n* Commandline output to PNG, with various camera and rendering settings.        \n  Run openscad -h to see usage info or see the OpenSCAD wiki user manual.\n* Attempting to open dxf, off or stl files in the GUI will now create an import statement.\n* The preview operator (%) will now preserve any manually set color\n* The highlight operator (#) will now color the object in transparent red\n* Mac: Added document icon\n* Mac: Added auto-update check\n* Windows: Better cmd-line support using the openscad.com executable\n\n**Bugfixes:**\n* Importing files is now always relative to the importing script, also for libraries\n* We didn't always print a warning when CSG normalization created too many elements\n* Binary STLs can now be read on big endian architectures\n* Some binary STLs couldn't be read\n* Fixed some issues related to ARM builds\n* CGAL triangulation more lenient- enables partial rendering of 'bad' DXF data\n* The Automatic Reload feature is now more robust\n* If a file couldn't be saved it no longer fails silently\n* Fixed a number of crashes related to CGAL and OpenCSG rendering or complex models\n* The lookup() function had bad boundary condition behavior\n* The surface() module failed when the .dat file lacked a trailing newline\n* The hull() module could crash if any of the children were empty objects\n* Some problems using unicode filenames have been fixed\n\n**Misc:**\n* Build scripts have been further improved\n* Regression test now creates single monolithic .html file for easier uploading\n* Regression test auto-starts & stops Xvfb / Xvnc if on headless unix machine\n* The backend is finally independent of Qt\n* Windows: We now have a 64-bit version\n\n**Known Bugs:**\n* Linux: command-line png rendering on Gallium is flaky. \n  Workaround: use CGAL --render or hardware rendering.\n\n# OpenSCAD 2013.01\n\n**Features:**\n* Snappier GUI while performing CGAL computations (computations running in separate thread)\n* The size of the misc. caches can now be adjusted from Preferences\n* The limit for when to disable OpenCSG can now be adjusted from Preferences\n* Added Dot product operator: vec * vec\n* Added Matrix multiplication operator: vec * mat, mat * mat\n* Added search() function\n* Dependencies are now tracked - any changes in uses/included files will be detected and cause a recompile\n* The OPENSCADPATH environment variable is now implemented will have precedence when searching for libraries\n* .csg files can now be opened from the GUI\n* linear_extrude() will now assume that the first parameter means 'height' if it's a number\n\n**Bugfixes:**\n* use'ing an non-existing file sometimes crashed under Windows\n* Better font handling: Ensure a monospace font is chosen as default\n* Division by zero caused hang in some cases (e.g. sin(1/0))\n* Larger minkowski operations sometimes caused a crash after a CGAL assert was thrown\n* Fixed crashes in shared_ptr.hpp (or similar places) due bugs in cache management and CSG normalization\n* scale() with a scale factor of zero could cause a crash\n* Fixed a number of issues related to use/include\n* Providing an unknown parameter on the cmd-line caused a crash\n* cmd-line overrides using -D now also work for USEd modules\n* Modifier characters can now be used in front of if statements\n* rotate() with a vector argument with less that 3 elements used uninitialized variables, ending up being non-deterministic.\n* .csg files will now have relative filenames whenever possible\n* Don't just ignore geometric nodes having zero volume/area - when doing difference/intersection, they tend to turn negative objects into positive ones.\n* Always use utf-8 file encoding, also under Windows\n* A lot of build script fixes\n* Some other crash bugs fixes\n\n**Deprecations:**\n* The old include syntax \"<filename.scad>\" without the include keyword is no\n  longer supported and will cause a syntax error.\n\n# OpenSCAD 2011.12\n\n**Features:**\n* The MCAD library is now bundled with OpenSCAD\n* Added len() function. Takes one vector or string parameter and returns its length.\n* The index operator [] now works on strings\n* The version() function will return the OpenSCAD version as a vector, e.g. [2011, 09]\n* The version_num() function will return the OpenSCAD version as a number, e.g. 20110923\n* hull() Now supports 3D objects\n* hull() with 2D object can now use for loops and boolean operations as children\n* New import() statement reads the correct file format based on the filename extension\n  (.stl, .dxf and .off is supported)\n* The color() statement now supports an alpha parameter, e.g. color(c=[1,0,0], alpha=0.4)\n* The color() statement now supports specifying colors as strings, e.g. color(\"Red\")\n* The color() statement now overrides colors specified further down in the tree\n* if()/else() and the ternary operator can now take any value type as parameter. false, 0, empty string and empty vector or illegal value type will evaluate as false, everything else as true.\n* Strings can now be lexographically compared using the <, <=, >, >= operators\n* Added PI constant.\n* Number literals in scientific notation are now accepted by the parser\n* Added import and export of the OFF file format\n* Now uses standard shortcuts for save, reload and quit on Linux and Windows. F2/F3 will still work but is deprecated.\n\n**Bugfixes:**\n* Complex CSG models sometimes took extremely long time to normalize before OpenCSG preview\n* square() crashed if any of the dimensions were zero\n* Flush Caches didn't flush cached USE'd modules\n* STL export should be a bit more robust\n* Dropping a file into the editor under Windows didn't work (double C:/C:/ problem)\n* On some platforms it was possible to insertion rich text in the editor, causing confusion.\n* Less crashes due to CGAL assertions\n* OpenCSG should now work on systems with OpenGL 1.x, given that the right extensions are available\n* include now searches librarydir\n* The $fs parameter yielded only half the number of segments it should have\n* surface(center=true) is now correctly centered in the XY plane\n\n**Deprecations:**\n* dxf_linear_extrude() and dxf_rotate_extrude() are now deprecated.\n  Use linear_extrude() and rotate_extrude() instead.\n* The file, layer, origin and scale parameters to linear_extrude() and rotate_extrude()\n  are now deprecated. Use an import() child instead.\n* import_dxf(), import_stl() and import_off() are now deprecated. Use import() instead.\n* When exporting geometry from the cmd-line, use the universal -o option. It will export to the correct file format based on the given suffix (dxf, stl, off). The -x and -s parameters are still working but deprecated.\n* F2 and F3 for Save and Reload is now deprecated\n\n# OpenSCAD 2011.06\n\n* Added \"Export as Image\" menu.\n\n**Bugfixes:**\n* Cylinder tesselation broke existing models which are using cylinders\n  for e.g. captured nut slots and are dependent on the orientation not\n  changing.\n* DXF output couldn't be imported into e.g. AutoCAD and Solidworks after updating\n  to using the AutoCAD 2000 (AC1015) format. Reverted to the old entity-only output,\n  causing LWPOLYLINES to not exported allowed anymore.\n\n# OpenSCAD 2011.04\n\n* Added hull() for convex hulls (2D object only)\n* minkowski() now supports 2D objects\n* Added functions: rands(), sign()\n* Now supports escaping of the following characters in strings: \\n, \\t, \\r, \\\\, \\\"\n* Support nested includes\n* Improved parsing of numbers\n* DXF: output LWPOLYLINE instead of just LINE entities\n* Bugfixes: More robust DXF export, setting $fs/$fa to 0 caused a crash\n* Some bugs fixed, maybe some new bugs added\n\n# OpenSCAD 2010.05\n\n* Added functions and statements\n  * Added abs() function\n  * Added exp(x), log(b, x), log(x) and ln(x) functions\n  * Added minkowski() statement for 3d minkowski sums\n* Added 'include <filename>' and 'use <filename>' statements\n  * Old implicit '<filename>' include statement is now obsolete\n* Some bugs fixed, maybe some new bugs added\n\n# OpenSCAD 2010.02\n\n* Added functions and statements\n  * Added sqrt() function\n  * Added round(), ceil() and floor() functions\n  * Added lookup() function for linear interpolation in value list\n  * Added projection(cut = true/false) statement\n  * Added child() statement for accessing child nodes of module instances\n  * Added mirror() statement\n* Improved DXF import code (more entities and some bugs fixed)\n* Added feature for dumping animation as PNG files\n* Added a preferences dialog\n* Now using CGAL's delaunay tesselator\n* Now using eigen2 for linear algebra\n* Reorganisation of the source tree\n* Some bugs fixed, maybe some new bugs added\n\n# OpenSCAD 2010.01\n\n* Added functions and statements\n  * Added intersection_for()\n  * Added str function\n  * Added min and max function\n  * Added color() statement\n* Added 2D Subsystem\n  * New primitives: circle(), square() and polygon()\n  * 2D->3D path: linear_extrude() and rotate_extrude()\n  * Import of DXF to 2d subsystem: import_dxf()\n  * Export of 2D data as DXF files\n* Some bugs fixed, maybe some new bugs added\n"
        },
        {
          "name": "appcast-snapshots.xml.in",
          "type": "blob",
          "size": 0.9208984375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<rss version=\"2.0\" xmlns:sparkle=\"http://www.andymatuschak.org/xml-namespaces/sparkle\">\n  <channel>\n    <title>OpenSCAD Development Snapshots</title>\n    <link>https://openscad.org/appcast-snapshots.xml</link>\n    <language>en</language>\n    <item>\n      <title>OpenSCAD @VERSION@</title>\n      <pubDate>@VERSIONDATE@</pubDate>\n      <sparkle:releaseNotesLink>https://raw.githubusercontent.com/openscad/openscad/master/releases/2015.XX.md</sparkle:releaseNotesLink>\n      <sparkle:minimumSystemVersion>10.9.0</sparkle:minimumSystemVersion>\n      <enclosure url=\"https://files.openscad.org/snapshots/OpenSCAD-@VERSION@.dmg\"\n                 sparkle:version=\"@VERSIONDATE@\"\n                 sparkle:shortVersionString=\"@VERSION@\"\n                 sparkle:dsaSignature=\"@DSASIGNATURE@\"\n                 length=\"@FILESIZE@\" \n                 type=\"application/octet-stream\"/>\n    </item>\n  </channel>\n</rss>\n"
        },
        {
          "name": "appcast.xml.in",
          "type": "blob",
          "size": 0.9052734375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<rss version=\"2.0\" xmlns:sparkle=\"http://www.andymatuschak.org/xml-namespaces/sparkle\">\n  <channel>\n    <title>OpenSCAD Updates</title>\n    <link>https://openscad.org/appcast.xml</link>\n    <language>en</language>\n    <item>\n      <title>OpenSCAD @VERSION@</title>\n      <pubDate>@VERSIONDATE@</pubDate>\n      <sparkle:releaseNotesLink>https://raw.githubusercontent.com/openscad/openscad/openscad-@VERSION@/releases/@SHORTVERSION@.md</sparkle:releaseNotesLink>\n      <sparkle:minimumSystemVersion>10.9.0</sparkle:minimumSystemVersion>\n      <enclosure url=\"https://files.openscad.org/OpenSCAD-@VERSION@.dmg\"\n                 sparkle:version=\"@VERSIONDATE@\"\n                 sparkle:shortVersionString=\"@VERSION@\"\n                 sparkle:dsaSignature=\"@DSASIGNATURE@\"\n                 length=\"@FILESIZE@\"\n                 type=\"application/octet-stream\"/>\n    </item>\n  </channel>\n</rss>\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "color-schemes",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "dsa_pub.pem",
          "type": "blob",
          "size": 0.638671875,
          "content": "-----BEGIN PUBLIC KEY-----\nMIIBtjCCASsGByqGSM44BAEwggEeAoGBAMP6y57wSCnUvfwehhit5K8EU4W3uf6s\nzCFUGWIxWaweWjkezHIZLz7pTv0dLm5Va0vKTIWgrNseTtdTaJ491lyGAHWlu9sP\nLAe/vG+UpIA6uNZX3gB7dDxunRUenTczYgnVoQWSIVRhZUEjci9WgbJJrguTPQvi\ncCfuI6Hox6cDAhUA3duJXWi3eaOIMqCfm6RpEt/fRC8CgYApHNQB5Ar/SIPobxtJ\nOx05xhhgm/YOJbGUcSZjsMgEP6rj+269vCBnYG+eE3nelXfOA5SXbOfY6Ju6+RBS\nOdPeNbWZah88QJK8bqBH7KS/EkMaiEXerPEIEIC5xOjKjYXs1z8AtNGUGORwWwjm\n85et2nY/WXvIJkUQtET/bWEYPQOBhAACgYB7hBLdC5rXpV0nqEmI4QYYt63OdP4D\nLf2XISyKi9H1F+6mwoeU4It7fMdGC1MBXyx/3sv8U1YbYIeDHB+lDy6QN2UxSBTN\nVI9UPUqdcoYZwQiaHHgqWcoyPDqzEVsFtHi3/pXLckuszA19NT8980o+7noiKxUm\n3pDa4C+oANPFCQ==\n-----END PUBLIC KEY-----\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts-osx",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "libraries",
          "type": "tree",
          "content": null
        },
        {
          "name": "locale",
          "type": "tree",
          "content": null
        },
        {
          "name": "openscad.appdata.xml.in",
          "type": "blob",
          "size": 3.1787109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<component type=\"desktop\">\n  <id>org.openscad.OpenSCAD${SUFFIX_WITH_DASH}</id>\n  <metadata_license>CC0-1.0</metadata_license>\n  <name>OpenSCAD</name>\n  <summary>The Programmers Solid 3D CAD Modeller</summary>\n  <icon type=\"remote\">https://www.openscad.org/images/openscad${SNAPSHOT_SUFFIX}.png</icon>\n  <categories>\n    <category>Graphics</category>\n    <category>3DGraphics</category>\n  </categories>\n  <url type=\"homepage\">https://www.openscad.org/</url>\n  <url type=\"bugtracker\">https://github.com/openscad/openscad/issues</url>\n  <url type=\"faq\">https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ</url>\n  <url type=\"help\">https://en.wikibooks.org/wiki/OpenSCAD_User_Manual</url>\n  <url type=\"donation\">https://www.openscad.org/community.html</url>\n  <launchable type=\"desktop-id\">openscad${SUFFIX_WITH_DASH}.desktop</launchable>\n  <project_license>GPL-3.0+</project_license>\n  <description>\n    <p>OpenSCAD is a software for creating solid 3D CAD models. Unlike most free software for creating 3D models (such as Blender) it does not focus on the artistic aspects of 3D modelling but instead on the CAD aspects. Thus it might be the application you are looking for when you are planning to create 3D models of machine parts but pretty sure is not what you are looking for when you are more interested in creating computer-animated movies.</p>\n    <p>OpenSCAD is not an interactive modeller. Instead it is something like a 3D-compiler that reads in a script file that describes the object and renders the 3D model from this script file. This gives you (the designer) full control over the modelling process and enables you to easily change any step in the modelling process or make designs that are defined by configurable parameters.</p>\n    <p>OpenSCAD provides two main modelling techniques: First there is constructive solid geometry (aka CSG) and second there is extrusion of 2D outlines. As data exchange format for this 2D outlines Autocad DXF files are used. In addition to 2D paths for extrusion it is also possible to read design parameters from DXF files. Besides DXF files OpenSCAD can read and create 3D models in the STL and OFF file formats.</p>\n  </description>\n  <provides>\n    <mediatype>application/x-openscad</mediatype>\n  </provides>\n  <developer_name>The OpenSCAD Developers</developer_name>\n  <screenshots>\n    <screenshot type=\"default\">\n      <image type=\"source\">https://www.openscad.org/images/appdata-screenshot-1.png</image>\n    </screenshot>\n    <screenshot>\n      <image type=\"source\">https://www.openscad.org/images/appdata-screenshot-2.png</image>\n    </screenshot>\n  </screenshots>\n  <content_rating type=\"oars-1.1\" />\n  <releases>\n    <release date=\"2021-01-31\" version=\"2021.01\"/>\n    <release date=\"2019-05-16\" version=\"2019.05\"/>\n    <release date=\"2016-02-22\" version=\"2015.03-3\"/>\n    <release date=\"2015-11-15\" version=\"2015.03-2\"/>\n    <release date=\"2015-04-21\" version=\"2015.03-1\"/>\n    <release date=\"2015-03-10\" version=\"2015.03\"/>\n    <release date=\"2014-03-09\" version=\"2014.03\"/>\n    <release date=\"2013-06-18\" version=\"2013.06\"/>\n    <release date=\"2013-01-17\" version=\"2013.01\"/>\n    <release date=\"2011-12-29\" version=\"2011.12\"/>\n  </releases>\n</component>\n"
        },
        {
          "name": "org.openscad.OpenSCAD.xml",
          "type": "blob",
          "size": 2.3720703125,
          "content": "<!DOCTYPE node PUBLIC \"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN\"\n\"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd\">\n<node  xmlns:tp=\"http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0\">\n  <interface name=\"org.openscad.OpenSCAD\">\n    <method name=\"zoom\">\n      <arg name=\"zoom\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"zoomTo\">\n      <arg name=\"zoom\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"rotate\">\n      <arg name=\"x\" type=\"d\" direction=\"in\"/>\n      <arg name=\"y\" type=\"d\" direction=\"in\"/>\n      <arg name=\"z\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"rotateTo\">\n      <arg name=\"x\" type=\"d\" direction=\"in\"/>\n      <arg name=\"y\" type=\"d\" direction=\"in\"/>\n      <arg name=\"z\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"rotateByVector\">\n      <tp:docstring>\n        The vector [x,y,z] describes the rotation.\n        The direction of the vector is the angle around which to rotate,\n        and the length of the vector is the angle by which to rotate.\n      </tp:docstring>\n      <arg name=\"x\" type=\"d\" direction=\"in\"/>\n      <arg name=\"y\" type=\"d\" direction=\"in\"/>\n      <arg name=\"z\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"translate\">\n      <arg name=\"x\" type=\"d\" direction=\"in\"/>\n      <arg name=\"y\" type=\"d\" direction=\"in\"/>\n      <arg name=\"z\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"translateTo\">\n      <arg name=\"x\" type=\"d\" direction=\"in\"/>\n      <arg name=\"y\" type=\"d\" direction=\"in\"/>\n      <arg name=\"z\" type=\"d\" direction=\"in\"/>\n    </method>\n    <method name=\"action\">\n      <arg name=\"name\" type=\"s\" direction=\"in\"/>\n    </method>\n    <method name=\"buttonPress\">\n      <arg name=\"idx\" type=\"u\" direction=\"in\"/>\n    </method>\n    <method name=\"getRotation\">\n      <annotation name=\"org.qtproject.QtDBus.QtTypeName.Out0\" value=\"QList&lt;double>\"/>\n      <arg name=\"rotation\" type=\"ad\" direction=\"out\"/>\n    </method>\n    <method name=\"getTranslation\">\n      <annotation name=\"org.qtproject.QtDBus.QtTypeName.Out0\" value=\"QList&lt;double>\"/>\n      <arg name=\"rotation\" type=\"ad\" direction=\"out\"/>\n    </method>\n    <method name=\"getActions\">\n      <arg name=\"names\" type=\"as\" direction=\"out\"/>\n      <annotation name=\"org.qtproject.QtDBus.QtTypeName.Out0\" value=\"QStringList&gt;\"/>\n    </method>\n  </interface>\n</node>\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "shaders",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "submodules",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "valgrind.supp",
          "type": "blob",
          "size": 1.0126953125,
          "content": "\n{\n   Conditional jump or move depends on uninitialised value(s) in Nvidia GL driver\n   Memcheck:Cond\n   obj:/usr/lib/libGLcore.so.190.29\n}\n\n{\n   Use of uninitialised value of size 4 in Nvidia GL driver\n   Memcheck:Value4\n   obj:/usr/lib/libGLcore.so.190.29\n}\n\n{\n   <insert a suppression name here>\n   Memcheck:Addr4\n   obj:/lib/ld-2.7.so\n   obj:/lib/libc-2.7.so\n   obj:/lib/ld-2.7.so\n   obj:/lib/libc-2.7.so\n   fun:__libc_dlopen_mode\n   fun:__nss_lookup_function\n   obj:/lib/libc-2.7.so\n   fun:__nss_passwd_lookup\n   fun:getpwuid_r\n   fun:_ZL22sm_performSaveYourselfP22QSessionManagerPrivate\n   fun:_ZL23sm_saveYourselfCallbackP8_SmcConnPviiii\n   fun:_SmcProcessMessage\n}\n\n{\n   <insert a suppression name here>\n   Memcheck:Free\n   fun:free\n   obj:/lib/libc-2.7.so\n   obj:/lib/libc-2.7.so\n   fun:_vgnU_freeres\n   fun:exit\n   fun:(below main)\n}\n\n{\n   Qt misc leaks\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_Z7qt_initP19QApplicationPrivatei\n   fun:_ZN19QApplicationPrivate9constructEv\n   fun:_ZN12QApplicationC2ERiPPcbi\n   fun:main\n}\n\n"
        },
        {
          "name": "winconsole",
          "type": "tree",
          "content": null
        },
        {
          "name": "xcode",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}