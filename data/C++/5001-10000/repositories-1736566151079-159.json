{
  "metadata": {
    "timestamp": 1736566151079,
    "page": 159,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "liuruoze/EasyPR",
      "stars": 6370,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4775390625,
          "content": ".idea/\n_build/\nresources/image/tmp/\n*.lib\n*.suo\n*.sdf\n*.opensdf\n*.exe\n*.dll\n*.ilk\n*.pdb\nexperi\n/tmp\nresources/image/native_test/*.jpg\nresources/image/native_test/cars\nresources/image/native_test/*.py\nresources/image/phone_test\n*.vsp\n*.psess\n*.DS_Store\n#ignore thumbnails created by windows\nThumbs.db\n#Ignore files build by Visual Studio\n*.user\n*.aps\n*.pch\n*.vspscc\n*_i.c\n*_p.c\n*.ncb\n*.tlb\n*.tlh\n*.bak\n[Dd]ebug*/\n*.sbr\nobj/\n[Rr]elease*/\n_ReSharper*/\n[Tt]est[Rr]esult*\n\n*.obj\n*.cache\n*.log\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.67578125,
          "content": "cmake_minimum_required(VERSION 3.0.0)\nproject(easypr)\n\n# c++11 required\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nif (CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n    set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} \"/usr/local/opt/opencv-3.2.0\")\nendif ()\n\n# OpenVC3 required\nfind_package(OpenCV 3.2.0 REQUIRED)\n\n# where to find header files\ninclude_directories(.)\ninclude_directories(include)\ninclude_directories(${OpenCV_INCLUDE_DIRS})\n\n# sub directories\nadd_subdirectory(thirdparty)\n\n# sources to be compiled\nset(SOURCE_FILES\n        src/core/core_func.cpp\n        src/core/chars_identify.cpp\n        src/core/chars_recognise.cpp\n        src/core/chars_segment.cpp\n        src/core/feature.cpp\n        src/core/plate_detect.cpp\n        src/core/plate_judge.cpp\n        src/core/plate_locate.cpp\n        src/core/plate_recognize.cpp\n        src/core/params.cpp\n\n        src/train/ann_train.cpp\n        src/train/annCh_train.cpp\n        src/train/svm_train.cpp\n        src/train/train.cpp\n        src/train/create_data.cpp\n\n        src/util/util.cpp\n        src/util/program_options.cpp\n        src/util/kv.cpp\n        )\n\n# pack objects to static library\nadd_library(easypr STATIC ${SOURCE_FILES})\n\nif (CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n    set(EXECUTABLE_NAME \"demo\")\nelseif (CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n    set(EXECUTABLE_NAME \"demo\")\nendif ()\n\n# set to be releas mode\n# set(CMAKE_BUILD_TYPE Release)\n\n# test cases\nadd_executable(${EXECUTABLE_NAME} test/main.cpp)\n# link opencv libs\ntarget_link_libraries(${EXECUTABLE_NAME} easypr thirdparty ${OpenCV_LIBS})\n# MESSAGE(${CMAKE_BINARY_DIR}/../)\nSET_TARGET_PROPERTIES(${EXECUTABLE_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY  \"${CMAKE_BINARY_DIR}/../\")"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 9.970703125,
          "content": "EasyPR版本更新\n\n======\n\n本次更新版本是1.6alpha版本，主要改进如下：\n\n1. 采用灰度字符训练以及新的特征，使中文字符正确率上升到了86%，比上个版本提升了近14个百分点。\n\n2. 借助于字符分割与识别算法的优化，在general_test上的完整识别率(0-error)从原先的59%首次上升到现在的70%，1-error则提升到了82%，提升巨大。\n\n3. 在车牌判断模块中，使用了新的SVM特征（颜色+投影），从而在保持鲁棒性的同时，提升了正确率。定位指标中FScore从76%提升到82%.\n\n4. 新增一种新的字符分割方法，groundMSER字符分割方法。\n\n5. 提供了近万张中文字符灰度图数据供训练，并且在主界面中提供了一个方法从free大神的车牌集里提取中文与英文字符。\n\n6. 提供了两万两千张的字符灰度图数据，供训练灰度字符模型使用。\n\n7. 代码优化与升级，许多bug修复。\n\n8. Opencv3.2版本的支持，编译前仅需要将config.h中将#define CV_VERSION_THREE_ZERO改为#define CV_VERSION_THREE_TWO即可。\n\n9. 更加友好的linux与mac版本支持，使用CMake即可顺利编译，单独的utf-8与gbk的文件供分别的系统使用。\n\n======\n\n本次更新是EasyPR 1.5正式版本，相比beta版本有以下几点更新：\n\n1.修正了SVM训练异常的问题！现在1.5版本也可以自由的使用SVM训练了。这个问题确实是opencv的bug，详见[讨论](https://github.com/opencv/opencv/issues/5054)，在此感谢 @tka 同学的告知。\n注意，3.2的opencv也修正了这个问题，如果你用3.2版本的话，也可以。但是不清楚3.2版本是否会引入其他的问题，在目前的EasyPR版本里，即便用3.0或者3.1版本也可以规避训练异常的问题。\n\n2.支持linux和mac编译，如果碰到问题请在issue里提问。\n\n3.增加一个无需配置opencv的[懒人版](http://git.oschina.net/easypr/EasyPR/attach_files)。仅仅支持vs2013，也只能在debug和x86下运行，其他情况的话还是得配置opencv。感谢范文捷同学的帮助。页面里的两个文件都要下载，下载后用[7zip](http://www.7-zip.org/)解压。\n\n其他的主要改进如下：\n\n1.增加了一种新的基于文字定位的定位方法 (MSER), 在面对低对比度，低光照以及大图像上有较强的鲁棒性。\n\n* 夜间的车牌图像\n\n![夜间的车牌图像](resources/doc/res/night_1.jpg)\n\n* 对比度非常低的图像\n\n![对比度非常低的图像](resources/doc/res/contrast_1.jpg)\n\n* 近距离的图像\n\n![近距离的图像](resources/doc/res/near_1.jpg)\n\n* 高分辨率的图像\n\n![高分辨率的图像](resources/doc/res/big_1.jpg)\n\n2.更加合理的评价协议。结合新增的GroundTruth文件与ICDAR2003的协议，使得整体评价指标更为合理。通用数据集里同时增加了近50张新图片。文字定位方法在面对这些复杂图片时比先前的SOBEL+COLOR的方法定位率提升了27个百分点。\n\n实际运行时，使用了文字定位与颜色定位的结合，最终对256张的测试图片的测试结果如下：\n\n![v1.5版运行结果](resources/doc/res/v1.5_result.jpg)\n\n3.使用了非极大值抑制算法去除相邻的车牌，使得最终输出变的合理。即便使用多个定位方法，最终也只会输出一个车牌，而且是可能性最大的车牌。\n\n4.基于局部空间的大津阈值算法与自适应阈值算法，提升了文字分割与分子识别的准确率。\n\n* 车牌图像\n\n![车牌图像](resources/doc/res/not_avg_contrast.jpg)\n\n* 普通大津阈值结果\n\n![普通大津阈值结果](resources/doc/res/normal_ostu.jpg)\n\n* 空间大津阈值结果\n\n![空间大津阈值结果](resources/doc/res/spatial_ostu.jpg)\n\n5.新的SVM模型与特征（LBP），提升了车牌判断的鲁棒性，新的中文ANN识别模型，提升了中文识别的整体准确率近15个百分点。\n\n6.增加了Grid Search方法，可以进行自动调参。\n\n7.首次增加了多线程支持，基于OpenMP的文字定位方法，在最终的识别速度上，比原先的单线程方法提高了接近2倍。\n\n8.替换了一部分中文注释，使得windows下的visual studio在面对全部以LF结尾的文件时，也能成功通过编译。目前的程序只要opencv配置正确，gitosc上通过zip下载下来的程序可以直接通过编译并运行。\n\n关于本次改动的具体内容可以看博客中的[介绍](http://www.cnblogs.com/subconscious/p/5637735.html)。\n\n======\n\n本次更新是1.4 正式版，主要改进在于几个方面：\n\n1.代码统一为UTF-8格式，多平台的Shell不再出现乱码。\n\n2.支持opencv3.0与3.1，注意，这与opencv2.x不兼容，要想支持的话请下载1.3版本。\n\n3.ANN训练开放。\n\n4.修正了SVM训练异常的问题。\n\n5.代码优化。\n\n不知道怎么下载以前的版本的小伙伴可以在github或gitosc的\"branch\"里选择\"tags\"，然后点击\"v1.3\"，再然后点击\"download zip\"。当然如果直接git clone的话可以随时方便切换。\n\n在后面的版本中计划做以下几点改善：\n\n1.新的评价框架，更加合理的评估数据。\n\n2.新的车牌定位算法。\n\n======\n\n本次更新是1.3beta版，主要改进在于提升了字符识别模块的准确性：\n\n平均字符差距从0.7降低到0.4，完整匹配度从68%左右上升到目前的81%，平均执行时间从2秒降低到1.5秒。见下图：\n\n![1.3版综合效果](resources/doc/res/testresult_1.3beta.png)\n\n主要改动如下：\n\n* 改进了字符识别算法，重新训练了ANN模型，从而使得字符识别准确率大幅度提升。\n\n* 使用了更鲁棒性的办法提升了车牌定位模块的准确率。\n\n目前版本的问题是处理时间还是偏高，1.3正式版本中会对这个问题进行fix。\n\n======\n\n本次更新是1.3alpha版，主要改进在于提升了字符识别模块的准确性：\n\n平均字符差距从2.0降低到0.7，完整匹配度从25%左右上升到目前的68%。\n\n同时，车牌定位模块准确率进一步提升，从上一个版本的94%上升到现在的99%。见下图：\n\n![1.3版综合效果](resources/doc/res/testresult_1.3alpha.png)\n\n主要改动如下：\n\n* 改进了字符识别算法，重新训练了ANN模型，从而使得字符识别准确率大幅度提升。\n\n* 使用了更鲁棒性的办法提升了车牌定位模块的准确率。\n\n目前版本的问题是处理时间大幅度上升，1.3正式版本中会对这个问题进行fix。\n\n======\n\n本次更新是1.2版，主要改进在于提升了车牌定位模块的准确性，从70%左右到目前的94%，见下图：\n\n![1.2版综合效果](resources/doc/res/testresult.png)\n\n主要改动如下：\n\n* 车牌定位使用了“颜色信息”+“二次Sobel”的综合搜索方法。在下面的window中红框代表Sobel定位结果，黄框代表颜色定位结果。\n\n* “批量测试”增加了一个结果查看window，这个窗口可以用SetDebug()方法开闭(true开，false关)。\n\n![查看结果](resources/doc/res/window.png)\n\n* 基本攻克了“大角度定位”问题，下图的车牌被定位并转到了正确的视角。\n\n![大角度定位](resources/doc/res/bigangle.png)\n\n* GDTS里新增了若干张新测试图，包括数张大角度图。\n\n* “批量测试”结果现在同时会保存在“run_accuracy”文件中，可以查询历史信息。\n\n* 与Linux版本做了整合，可以实现跨平台编译。\n\n======\n\n目前EasyPR的版本是1.1，相比上一个版本1.0，有以下更新（这次的更新内容较多，为了跟你现有的项目和代码不冲突，请\n谨慎选择全部更新，最好新起一个目录试试新增的功能和内容）：\n\n* 新的SVM模型。新模型使用rbf核替代了liner核，在车牌判断的准确率提升了8个百分点。\n\n![svm准确率改进](resources/doc/res/svm_upgragde.png)\n\n* 新增两个特征提取方法。并提供了相关的回调函数接口供二次开发。\n\n![fetures](resources/doc/res/fetures.png)\n\n* 新增Debug模式。可以在image/tmp文件夹下看到所有输出的中间图片。\n\n![Debug模式](resources/doc/res/debug.jpg)\n\n* 增加了LifeMode模式，相比默认模式，更适合在生活场景下定位车牌。\n\n![LifeMode模式](resources/doc/res/lifemode.jpg)\n\n* 增加了批量测试功能，这个功能可供测试EasyPR在多幅图片上的整体表现效果。\n\n![批量测试](resources/doc/res/batch_operation.jpg) ![批量测试结果](res/batch_result.png)\n\n* 引入了GDTS(General Data Test Set，通用数据测试集)这个概念，作为EasyPR准确率的评测数据集。\n\n![GDTS](resources/doc/res/general_test.jpg)\n\n* 为了确保GDTS的数据仅用于非商业目的，引入了新的[GDSL协议](../image/GDSL.txt)。\n\n![GDSL](resources/doc/res/gdsl.jpg)\n\n* 完善SVM训练功能。提供了一个方便简单的训练窗口。这些增加的功能是为了配合即将推出的SVM开发详解这篇文章。\n\n![SVM训练](resources/doc/res/svm_train.jpg)\n\n* 强化SVM模型验证。使用了三个新的数据集概念，即learn data，train data，test data。\n\n![SVM训练集](resources/doc/res/svm_data.jpg)\n\n* 新增评价指标。引入Precise，Recall，FSocre三个指标这三个指标作为SVM模型准确率评判的参数与改善的依据。\n\n![SVM指标](resources/doc/res/svm_rate.jpg)\n\n* 新增整体指标。引入levenshtein距离作为EasyPR整体识别准确率误差的评判参数与改善依据。\n\n![levenshtein1](resources/doc/res/levenshtein1.jpg) ![levenshtein2](resources/doc/res/levenshtein2.jpg) ![levenshtein3](resources/doc/res/levenshtein3.jpg)\n\n![levenshteinAll](resources/doc/res/levenshteinAll.JPG)\n\n* 大幅增加训练数据。SVM训练数据中增加了近千张新数据(未经直方图均衡化的车牌图片和非车牌图片)。\n\n请自行解压train/data/plate_detect_svm/learn下的压缩文件查看相关信息。\n\n* 新增命令行窗口，作为测试与训练的辅助工具。\n\n注意：上一个版本中image文件下的test.jpg如果有同学下载了，请删除。它的格式不符合新的GDSL协议的约定。\n如果想使用测试图片，可以使用1.1版本中新增的test.jpg替代。\n"
        },
        {
          "name": "EasyPR.sln",
          "type": "blob",
          "size": 2.2548828125,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 2013\r\nVisualStudioVersion = 12.0.21005.1\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"demo\", \"vcprojs\\demo.vcxproj\", \"{FADCD7E1-8071-4F1C-8071-C469569C3B56}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libeasypr\", \"vcprojs\\libeasypr.vcxproj\", \"{2791E339-04FB-44EF-9F92-C90131FE7772}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{FA4945DA-3C0F-44C5-90DF-A492614B8B4D}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tUsage.md = Usage.md\r\n\tEndProjectSection\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Win32 = Debug|Win32\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tRelease|Win32 = Release|Win32\r\n\t\tRelease|x64 = Release|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Debug|Win32.ActiveCfg = Debug|Win32\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Debug|Win32.Build.0 = Debug|Win32\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{FADCD7E1-8071-4F1C-8071-C469569C3B56}.Release|x64.Build.0 = Release|x64\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Debug|Win32.ActiveCfg = Debug|Win32\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Debug|Win32.Build.0 = Debug|Win32\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{2791E339-04FB-44EF-9F92-C90131FE7772}.Release|x64.Build.0 = Release|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.216796875,
          "content": "# EasyPR\n\nEasyPR是一个开源的中文车牌识别系统，其目标是成为一个简单、高效、准确的非限制场景(unconstrained situation)下的车牌识别库。\n\n相比于其他的车牌识别系统，EasyPR有如下特点：\n\n* 它基于openCV这个开源库。这意味着你可以获取全部源代码，并且移植到opencv支持的所有平台。\n* 它能够识别中文。例如车牌为苏EUK722的图片，它可以准确地输出std:string类型的\"苏EUK722\"的结果。\n* 它的识别率较高。图片清晰情况下，车牌检测与字符识别可以达到80%以上的精度。\n\n### 更新\n\n本次更新版本是1.6正式版本，主要有以下几点更新：\n\n1. 修正了多项readme的文本提示。\n\n2. 增加了C#调用EasyPR的一个项目的链接，感谢 @zhang-can 同学。\n\n\n**注意**\n\n1. 对于Opencv3.2或以上版本，如果碰到编译问题，例如“ANN_MLP”相关的错误，尝试将config.h中将#define CV_VERSION_THREE_ZERO改为#define CV_VERSION_THREE_TWO试试.\n\n2. linux系统推荐使用Opencv3.2以上版本。3.2以下的版本例如3.0和3.1在识别时可能会出现车牌识别结果为空的情况。稳妥起见，建议都升级到最新的3.2版本。Windows版本没有这个问题。\n\n## 待做的工作\n- [ ] 完成一个CNN框架\n- [ ] 替换ANN为CNN\n- [ ] 增加新能源车的识别（待定）\n- [ ] 增加两行车牌的识别（待定）\n\n### 跨平台\n\n目前除了windows平台以外，还有以下其他平台的EasyPR版本。一些平台的版本可能会暂时落后于主平台。\n\n现在有一个无需配置opencv的1.5版本的[懒人版](http://git.oschina.net/easypr/EasyPR/attach_files)。仅仅支持vs2013，也只能在debug和x86下运行，其他情况的话还是得配置opencv。感谢范文捷同学的帮助。页面里的两个文件都要下载，下载后用[7zip](http://www.7-zip.org/)解压。\n\n|版本 | 开发者 | 版本 | 地址 \n|------|-------|-------|-------\n| C# |  zhang-can  |  1.5  |  [zhang-can/EasyPR-DLL-CSharp](https://github.com/zhang-can/EasyPR-DLL-CSharp)\n| android |  goldriver  |  1.4  |  [linuxxx/EasyPR_Android](https://github.com/linuxxx/EasyPR_Android)\n| linux | Micooz  |  1.6  |  已跟EasyPR整合\n| ios | zhoushiwei |  1.3  |  [zhoushiwei/EasyPR-iOS](https://github.com/zhoushiwei/EasyPR-iOS)\n| mac | zhoushiwei,Micooz |  1.6  | 已跟EasyPR整合\n| java | fan-wenjie |  1.2  | [fan-wenjie/EasyPR-Java](https://github.com/fan-wenjie/EasyPR-Java)\n| 懒人版 | fan-wenjie |  1.5  | [git/oschina](http://git.oschina.net/easypr/EasyPR/attach_files)\n\n### 兼容性\n\n当前EasyPR是基于opencv3.0版本开发的，3.0及以上的版本应该可以兼容，以前的版本可能会存在不兼容的现象。\n\n### 例子\n\n假设我们有如下的原始图片，需要识别出中间的车牌字符与颜色：\n\n![EasyPR 原始图片](resources/doc/res/plate_locate.jpg)\n\n经过EasyPR的第一步处理车牌检测（PlateDetect）以后，我们获得了原始图片中仅包含车牌的图块：\n\n![EasyPR 车牌](resources/doc/res/blue_plate.jpg)\n\n接着，我们对图块进行OCR过程，在EasyPR中，叫做字符识别（CharsRecognize）。我们得到了一个包含车牌颜色与字符的字符串：\n\n“蓝牌：苏EUK722”\n\n### 示例\n\nEasyPR的调用非常简单，下面是一段示例代码:\n```c++\n\tCPlateRecognize pr;\n\tpr.setResultShow(false);\n\tpr.setDetectType(PR_DETECT_CMSER);\n     \n\tvector<CPlate> plateVec;\n\tMat src = imread(filepath);\n\tint result = pr.plateRecognize(src, plateVec);\n```\n\n我们首先创建一个CPlateRecognize的对象pr，接着设置pr的属性。\n\n```c++\n\tpr.setResultShow(false);\n```\n\n这句话设置EasyPR是否打开结果展示窗口，如下图。设置为true就是打开，否则就是关闭。在需要观看定位结果时，建议打开，快速运行时关闭。\n\n![EasyPR 输出窗口](resources/doc/res/window.png)\n\n```c++\n\tpr.setDetectType(PR_DETECT_CMSER);\n```\n\n这句话设置EasyPR采用的车牌定位算法。CMER代表文字定位方法，SOBEL和COLOR分别代表边缘和颜色定位方法。可以通过\"|\"符号结合。\n\n```c++\n\tpr.setDetectType(PR_DETECT_COLOR | PR_DETECT_SOBEL);\n```\n\n除此之外，还可以有一些其他的属性值设置：\n\n```c++\n\tpr.setLifemode(true);\n```\n\n这句话设置开启生活模式，这个属性在定位方法为SOBEL时可以发挥作用，能增大搜索范围，提高鲁棒性。\n\n```c++\n\tpr.setMaxPlates(4);\n```\n\n这句话设置EasyPR最多查找多少个车牌。当一副图中有大于n个车牌时，EasyPR最终只会输出可能性最高的n个。\n\n下面来看pr的方法。plateRecognize()这个方法有两个参数，第一个代表输入图像，第二个代表输出的车牌CPlate集合。\n\n```c++\n\tvector<CPlate> plateVec;\n\tMat src = imread(filepath);\n\tint result = pr.plateRecognize(src, plateVec);\n```\n\n当返回结果result为0时，代表识别成功，否则失败。\n\nCPlate类包含了车牌的各种信息，其中重要的如下：\n\n```c++\n\tCPlate plate = plateVec.at(i);\n\tMat plateMat = plate.getPlateMat();\n\tRotatedRect rrect = plate.getPlatePos();\n\tstring license = plate.getPlateStr();\n```\n\nplateMat代表车牌图像，rrect代表车牌的可旋转矩形位置，license代表车牌字符串，例如“蓝牌：苏EUK722”。\n\n这里说下如何去阅读如下图的识别结果。\n\n![EasyPR DetectResults](resources/doc/res/one_image_detect.jpg)\n\n第1行代表的是图片的文件名。\n\n第2行代表GroundTruth车牌，用后缀（g）表示。第3行代表EasyPR检测车牌，用后缀（d）表示。两者形成一个配对，第4行代表两者的字符差距。\n\n下面同上。本图片中有3个车牌，所有共有三个配对。最后的Recall等指标代表的是整幅图片的定位评价，考虑了三个配对的结果。\n\n有时检测车牌的部分会用“无车牌”与“No string”替代。“无车牌”代表“定位不成功”，“No string”代表“定位成功但字符分割失败”。\n\n### 版权\n\nEasyPR的源代码与训练数据遵循Apache v2.0协议开源。\n\nEasyPR的resources/image/general_test文件夹下的图片数据遵循[GDSL协议](image/GDSL.txt)（通用数据共享协议）进行开放。\n\n请确保在使用前了解以上协议的内容。\n\n### 目录结构\n\n以下表格是本工程中所有目录的解释:\n\n|目录 | 解释\n|------|----------\n| src |  所有源文件\n| include | 所有头文件\n| test | 测试程序\n| model | 机器学习的模型\n| resources/text | 中文字符映射表\n| resources/train | 训练数据与说明\n| resources/image | 测试用的图片\n| resources/doc | 相关文档\n| tmp | 训练数据读取目录，需要自建\n\n以下表格是resources/image目录中子目录的解释:\n\n|目录 | 解释\n|------|----------\n| general_test | GDTS（通用数据测试集）\n| native_test | NDTS（本地数据测试集）\n| tmp | Debug模式下EasyPR输出中间图片的目录，需要自建\n\n以下表格是src目录中子目录的解释:\n\n|目录 | 解释\n|------|----------\n| core |  核心功能\n| preprocess | SVM预处理\n| train | 训练目录，存放模型训练的代码\n| util | 辅助功能\n\n以下表格是src目录下一些核心文件的解释与关系:\n\n|文件 | 解释\n|------|----------\n| plate_locate |  车牌定位\n| plate_judge | 车牌判断\n| plate_detect | 车牌检测，是车牌定位与车牌判断功能的组合\n| chars_segment | 字符分割\n| chars_identify | 字符鉴别\n| chars_recognise | 字符识别，是字符分割与字符鉴别功能的组合\n| plate_recognize | 车牌识别，是车牌检测与字符识别的共有子类\n| feature | 特征提取回调函数\n| plate | 车牌抽象\n| core_func.h | 共有的一些函数\n\n以下表格是test目录下文件的解释:\n\n|文件 | 解释\n|------|----------\n| main.cpp | 主命令行窗口\n| accuracy.hpp | 批量测试\n| chars.hpp | 字符识别相关\n| plate.hpp | 车牌识别相关\n\n以下表格是train目录下文件的解释:\n\n|文件 | 解释\n|------|----------\n| ann_train.cpp | 训练二值化字符\n| annCh_train.hpp | 训练中文灰度字符\n| svm_train.hpp | 训练车牌判断\n| create_data.hpp | 生成合成数据\n\n### 使用\n\n请参考[这里](Usage.md)\n\n### 获取帮助\n\n详细的开发与教程请见[介绍与开发教程](http://www.cnblogs.com/subconscious/p/3979988.html)。\n\n如果你在使用过程中遇到任何问题，请在[这里](https://github.com/liuruoze/EasyPR/issues)告诉我们。\n\nEasyPR讨论QQ群号是：一群：366392603，二群：583022188，三群：637614031，四群：548362608，加前请注明EasyPR学习讨论。\n\n### Contributors\n\n* liuruoze：1.0-1.2，1.5版作者\n\n* 海豚嘎嘎(车主之家)：1.3版算法贡献者，提升了车牌定位与字符识别的准确率\n\n* Micooz：1.3-1.4版架构重构，linux与mac支持，opencv3.0支持，utf-8编码转换\n\n* jsxyhelu：deface版本一\n\n* zhoushiwei：deface版本二\n\n* ahccom：新的plateLocate函数\n\n* 阿水：1.3版整合，数据标注等工作\n\n* fan-wenjie：1.5版opencv整合版提供者\n\n* Free：1.6版数据提供者\n\n### 鸣谢\n\ntaotao1233，邱锦山，唐大侠，jsxyhelu，如果有一天(zhoushiwei)，学习奋斗，袁承志，圣城小石匠，goldriver，Micooz，梦里时光，Rain Wang，任薛纪，ahccom，星夜落尘，海豚嘎嘎(车主之家)，刘超，Free大神，以及所有对EasyPR贡献数据的热心同学。"
        },
        {
          "name": "Usage.md",
          "type": "blob",
          "size": 8.09765625,
          "content": "# 使用\n\n### 获取源代码\n\n可以访问我们的项目主页获取代码：\n\n* [github](https://github.com/liuruoze/EasyPR)\n* [oschina](https://git.oschina.net/easypr/EasyPR)\n\n如果你熟悉git版本控制工具，可以使用下面的命令从 Github 克隆代码：\n\n    $ git clone https://github.com/liuruoze/EasyPR\n\n### 准备工作\n\n1. 安装OpenCV\n\n从 [OpenCV官方网站](http://opencv.org/) 获取对应平台的 `OpenCV3.1.0`。\n\nEasyPR支持当前主流的操作系统，通常不需要对源代码进行更改就可以编译运行，尽管如此，不同平台上IDE的配置也是有很大差异的，下面主要说明Windows，Linux以及Mac OS下的编译方法。\n\n#### Windows\n\n对于使用 Windows 的同学，建议的IDE是Visual Studio，如果使用的不是VS，请自行配置，也欢迎分享你的配置方案。\n\n|环境 | 需求\n|------|----------\n| 操作系统 |  64位，Windows7 sp1 / Windows 8 及以上\n| Visual Studio | vs2013 / vs2015\n| Python（可选） | Python3.*\n\n**Note**: 预编译的 **OpenCV3.1** 已经不支持较低版本的Visual Studio，请选择vs2013及以上的版本。\n\n**方法一**\n\n**注意**: python方法仅针对v1.5以下的版本。在1.6及以上版本中，由于架构变化，不推荐使用。可以加群看群里的配置方法。\n\n1. 确保将Python的安装目录添加到系统环境变量PATH中。\n2. 执行 `python configure.py` ，根据提示填写相关信息。\n3. 打开解决方案文件 `EasyPR.sln`，直接编译运行即可。\n\n**方法二**\n\n打开解决方案文件 `EasyPR.sln`，该解决方案会加载两个项目:\n\n* `EasyPR`，用于编译src/下的源文件生成静态库`libeasypr.lib`\n* `Demo`，用来编译test/下的main.cpp，并链接libeasypr.lib生成可执行程序。\n\n**配置OpenCV**\n\nOpenCV for Windows 通常会将使用VS编译好二进制文件放到 `opencv\\build\\` 目录下。\n\n解决方案自动加载的两个项目配置不符合你的环境，请依次手动配置：\n\n**demo**\n\n|    配置项   |    值    \n|-------------|-----------\n| `C/C++`-`附加包含目录` | **[opencv的include目录]**;$(SolutionDir)include\n| `链接器`-`附加库目录` | **[opencv的lib目录]**\n| `链接器`-`输入`-`附加依赖项` | **opencv_world310d.lib**;%(AdditionalDependencies)\n\n*Note*：Debug版本为**opencv_world310d.lib**，Release版本为**opencv_world310.lib**\n\n**libeasypr**\n\n|    配置项   |    值    \n|-------------|-----------\n| `C/C++`-`附加包含目录` | **[opencv的include目录]**;$(SolutionDir)include\n\n**编译**\n\n默认情况下，生成的 `demo.exe` 会放在项目根目录下。\n\n**Note**: 直接双击运行程序会出现找不到opencv动态库的情况，这个时候有两个办法：\n\n* 在`opencv\\build\\x64\\vc(..)\\bin`下找到缺失的dll放到执行目录下。\n* 将上述bin目录添加到系统环境变量**PATH**中，然后重新运行程序。\n\n**参考**：windows平台下的opencv的手动配置可以参考这份[博客](http://my.phirobot.com/blog/2014-02-opencv_configuration_in_vs.html)。\n\n#### Linux & Mac OS\n\nEasyPR使用CMake在Linux及Mac OS下进行构建，确保系统安装了最新版本的[CMake](http://cmake.org)。\n\n为了避免系统中安装的老版本opencv对编译的影响，需要在 `CMakeLists.txt` 中修改：\n\n    set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} \"/usr/local/opt/opencv3\")\n\n路径指向opencv3的安装目录，该目录下应该有OpenCV的CMake配置文件。\n\n项目提供了一键编译shell，在项目根目录下执行：\n\n```\n$ ./build.sh\n```\n\n即可。\n\n----\n\n**Note**: *你可以直接利用 EasyPR/include 和编译生成的静态库来调用EasyPR提供的函数接口编写自己的程序。*\n\n运行Demo：\n\n```\n$ ./demo // 进入菜单交互界面\n$ ./demo ? // 查看CLI帮助\n\n```\n### 如何开始\n\n当进入交互界面以后，首先是主目录，下面是主目录各个功能的解释：\n\n| 名称   |    说明    \n|-------------|-----------\n| 测试 | 分别测试车牌识别中每个环节。要想更改测试的图片，可以替换resources/image下的图片；\n| 批量测试 | 跑完整个general_test下所有图片，输出准确率等指标，用于评估EasyPR的效果；\n| SVM训练 | 用SVM训练车牌判断模型；\n| ANN训练 | 用ANN训练字符识别和中文识别模型，对应ann.xml和ann_chinese.xml；\n| 中文训练 | 1.6版新增，用ANN模型训练灰度中文字符，生成annCh.xml；\n| 生成字符 | 需要配合plates_200k这个数据集才能作用；\n\n当成功运行EasyPR后，首先运行批量测试功能。如果最后的指标跟readme一致，说明EasyPR安装成功。\n\n可以在accuracy.hpp中修改 `pr.setResultShow(false)` 为 `pr.setResultShow(true)`， 让批量测试显示出车牌定位的效果。\n\n**Note**:\n\n在批量测试下有一个选项，native_test。可以把自己的图片放到resources/image/native_test下测试用的。如果你自己的图片没有ground_truth，无法计算准确率指标。但是可以打开车牌定位的效果。\n\n如果想评估车牌定位的指标。需要生成GroundTruth_windows.xml和GroundTruth_others.xml。可以参考general_test下的同名文件来了解下这个文件的格式该如何定义。例如下面的一个xml节点：\n\n```xml\n<taggedRectangle x=\"170\" y=\"184\" width=\"96\" height=\"27\" rotation=\"-1\" locateType=\"1\">蓝牌:京A88731</taggedRectangle>\n```\n\ntaggedRectangle对应一个车牌，属性x和y表示的是车牌外接矩形的中心点的坐标。width和height是宽度和高度。另外两个属性目前没用到。\n\nGroundTruth_windows.xml的编码需要设置为ANSI，而GroundTruth_others.xml的编码要设置为UTF-8，否则会出现乱码。\n\n### 命令行示例\n\n可以向 `demo[.exe]` 传递命令行参数来完成你想要的工作，目前Demo支持5个子命令。对于每个子命令的帮助信息可以传入 `-h` 参数来获取。\n\n**车牌识别**\n\n    # 利用提供的SVM和ANN模型来识别一张图片里面的所有车牌\n    \n    $ ./demo recognize -p resources/image/plate_recognize.jpg --svm model/svm.xml --ann model/ann.xml\n    \n    # 或者更简单一些(注意模型路径)\n    $ ./demo recognize -p resources/image/plate_recognize.jpg\n\n**SVM训练**\n\n新版本的EasyPR大大简化了SVM训练：\n\n    # 首先准备好车牌图片集合plates/\n    #    是车牌的放在plates/has/\n    #    不是车牌的放在plates/no/\n    #    车牌可从项目resources/train/svm.7z中解压得到。\n    \n    $ ./demo svm --plates=path/to/your/plates --svm=save/to/svm.xml\n    \n    # 该命令将70%的车牌作为训练数据，另外30%的车牌作为测试数据，\n    # 这个只可在 include/easypr/config.h 修改。\n    # 将训练好的模型存放在 save/to/svm.xml。\n\t\n首先在easypr的主目录下面新建了一个tmp文件夹，并且把svm.7z解压得到的svm文件夹移动到tmp文件夹下面，\n\n执行 $ demo svm --plates=tmp/svm --svm=tmp/svm.xml，生成得到的tmp文件夹下面的svm.xml就是训练好的模型，\n\n替换model/svm.xml就可以达到替换新模型的目的，替换前请先备份原始模型。\n\n**ANN训练**\n\n先准备好字符图片集合，可从项目resources/train/ann.7z中解压得到。\n\n每类字符都存放在以其名称命名的子文件夹中，命名规则请参考  `resources/text/province_mapping`。\n\n一切准备就绪后，运行下面这条命令即可：\n\n    $ ./demo ann --chars=path/to/chars --ann=save/to/ann.xml\n\t\n首先在easypr的主目录下面新建了一个tmp文件夹，并且把ann.7z解压得到的ann文件夹移动到tmp文件夹下面，\n\n执行 $ demo ann --chars=tmp/ann --ann=tmp/ann.xml，生成得到的tmp文件夹下面的svm.xml就是训练好的模型，\n\n替换model/ann.xml就可以达到替换新模型的目的，替换前请先备份原始模型。\n\n**注意**\n\ntrain文件夹下有3个ann压缩包，解释一下：\n\n|    文件   |    用途    \n|-------------|-----------\n| ann.7z | 包括黑白的字符和中文数据，ann以及ann_chinese.xml由这个训练得到；\n| annCh.7z | 仅仅包括中文的灰度数据，annCh.xml由这个训练得到；\n| annGray.7z | 包括了灰度的字符数据，目前没有任何模型由这个训练得到，主要是为未来的CNN做准备\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.0712890625,
          "content": "#!/usr/bin/env bash\n\nrm -rf build\nmkdir build\ncd build\ncmake ..\nmake -j8\n"
        },
        {
          "name": "configure.py",
          "type": "blob",
          "size": 4.5048828125,
          "content": "# -*- coding: utf-8 -*-\n\n# --------------------------------------------------------------------\n#                   EasyPR auto configure script\n# --------------------------------------------------------------------\n#\n# This script configures OpenCV3.1 for Visual Studio\n# on Windows.\n#\n# You are required to have Python3.* installed, and python.exe must\n# be added to your PATH (C:\\Python34 for example).\n#\n# You can use it by executing:\n#\n#     C:\\> cd path\\to\\EasyPR\n#     C:\\> python configure.py\n#\n# Note: compatible with python3, haven't been tested on python2.\n#\n# --------------------------------------------------------------------\n\nimport os\nimport re\n\nkProjectDir = \"vcprojs\"\n\nkProjects = [\"libeasypr.vcxproj\", \"demo.vcxproj\"]\n\nkProjectTemplates = [\"libeasypr.vcxproj.template\", \"demo.vcxproj.template\"]\n\nkOpenCVConfig = \"OpenCVConfig-version.cmake\"\n\nkConfig = {\n    \"build\": \"\",\n    \"include\": \"\",\n    \"library\": \"\",\n    \"link\": [\"opencv_world310\"],\n    \"bit\": \"\",\n    \"vs\": \"\"\n}\n\nkPatterns = {\n    \"include\": \"(<AdditionalIncludeDirectories>)(.*?)(</AdditionalIncludeDirectories>)\",\n    \"library\": \"(<AdditionalLibraryDirectories>)(.*?)(</AdditionalLibraryDirectories>)\",\n    \"link\": \"(<AdditionalDependencies>)(.*?)(</AdditionalDependencies>)\"\n}\n\nkReplacements = {\n    \"include\": r\"\\1%s;\\2\\3\",\n    \"library\": r'\\1%s\\3',\n    \"link\": r'\\1%s;\\2\\3'\n}\n\n\ndef configure():\n    for i in range(2):\n        print(\">> creating %s\" % kProjects[i])\n        tpath = os.path.join(kProjectDir, kProjectTemplates[i])\n        fp = open(tpath, encoding=\"utf-8\")\n        try:\n            # read from disk\n            original = fp.read()\n            nstring = \"\"\n            if 0 == i:\n                nstring = configure_libeasypr(original)\n            elif 1 == i:\n                nstring = configure_demo(original)\n\n            # write to disk\n            wpath = os.path.join(kProjectDir, kProjects[i])\n            writer = open(wpath, mode=\"wb\")\n            try:\n                writer.write(nstring.encode())\n            finally:\n                writer.close()\n        finally:\n            fp.close()\n    print(\">> all done! Open EasyPR.sln and have fun!\")\n\n\ndef configure_libeasypr(buffer):\n    # additional include dir\n    pattern = re.compile(kPatterns[\"include\"])\n    return pattern.sub(kReplacements[\"include\"] %\n                       (kConfig[\"include\"][:2] + re.escape(kConfig[\"include\"][2:])),\n                       buffer)\n\n\ndef configure_demo(buffer):\n    # additional include dir\n    pattern = re.compile(kPatterns[\"include\"])\n    nstring = pattern.sub(kReplacements[\"include\"] %\n                          (kConfig[\"include\"][:2] + re.escape(kConfig[\"include\"][2:])),\n                          buffer)\n    # additional library dir\n    pattern = re.compile(kPatterns[\"library\"])\n    nstring = pattern.sub(kReplacements[\"library\"] %\n                          (kConfig[\"library\"][:2] + re.escape(kConfig[\"library\"][2:])),\n                          nstring)\n    # additional dependencies\n    #lib_string = \"\"\n    #for lib in kConfig[\"link\"]:\n    #    lib_string += (lib + \"d.lib\")\n\n    #pattern = re.compile(kPatterns[\"link\"])\n    #return pattern.sub(kReplacements[\"link\"] % lib_string, nstring)\n\n    return nstring\n\n\ndef check_opencv_version():\n    file = os.path.join(kConfig[\"build\"], kOpenCVConfig)\n    print(\">> Checking \", file)\n    fp = open(file)\n    opencv_version = 0\n    try:\n        fline = fp.readline()\n        match = re.search(r\"OpenCV_VERSION (\\d)\\.(\\d)\\.(\\d{,2})\", fline)\n        if match is not None:\n            opencv_version = match.group(1) + \".\" + match.group(2)\n    finally:\n        fp.close()\n    return opencv_version\n\n\ndef cli():\n    while True:\n        root_ = input(r\"Where is your opencv root path? (e.g, C:\\path\\to\\opencv3): \")\n        if os.path.exists(root_):\n            kConfig[\"build\"] = os.path.join(root_, \"build\")\n            kConfig[\"include\"] = os.path.join(kConfig[\"build\"], \"include\")\n            break\n        else:\n            print(\"Invalid path\")\n\n    if check_opencv_version() != \"3.1\":\n        print(\"requires opencv 3.1\")\n        exit()\n\n    kConfig[\"bit\"] = \"x64\"\n\n    while True:\n        vc = input(\"Which Visual Studio you are using? (vs2013 or vs2015): \")\n        if vc == \"vs2013\":\n            kConfig[\"vs\"] = \"vc12\"\n            break\n        elif vc == \"vs2015\":\n            kConfig[\"vs\"] = \"vc14\"\n            break\n        else:\n            print(\"Please type vs2013 or vs2015\")\n\n    kConfig[\"library\"] = os.path.normpath(\"%s/%s/%s/lib/\" % (kConfig[\"build\"], kConfig[\"bit\"], kConfig[\"vs\"]))\n\n\nif __name__ == \"__main__\":\n    cli()\n    configure()\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "model",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "result.jpg",
          "type": "blob",
          "size": 2.8857421875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcprojs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}