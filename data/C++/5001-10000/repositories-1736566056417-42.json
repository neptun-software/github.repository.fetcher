{
  "metadata": {
    "timestamp": 1736566056417,
    "page": 42,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Maximus5/ConEmu",
      "stars": 8681,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.53515625,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n; Top-most EditorConfig file\nroot = true\n\n; 2 space indentation\n[*]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n\n; Tab indentation (no size specified)\n[*.{cpp,h,def,manifest}]\nindent_style = tab\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\nend_of_line = crlf\n\n; Tab indentation (no size specified)\n[makefile*]\nindent_style = tab\n\n; 4 space indentation\n[*.rc]\nindent_style = space\nindent_size = 4\n\n[*.py]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4794921875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n*.DotSettings eol=lf\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5654296875,
          "content": ".svn\n.svnignore\n.vscode\n.wsl\nDescript.ion\npremake5.exe\n\n_*.sln\n\n*.7z\n*.rar\n*.zip\n*.dat\n\n*.log\n\n*.pdb\n*.plg\n*.bak\n*.diff\n*.idc\n*.sdf\n*.depend\n*.psess\n\n\\!*.bmp\n\\!*.png\n\\!*.cpp\n\\!*.h\n\\!*.txt\n\\!*.mht\n\\!*.htm\n\\!*.xlsx\n\n/gcc\n/Debug\n/MinGW\n/Portable_Test\n/ConEmuPortableRarInfo.txt\n/Debug\n/build\n\n/Release/ConEmu/WhatsNew-ConEmu-Portable.txt\n/Release/ConEmu/Portable/\n\nipch\nbin\nhelp\nx64\n\nRelease/**/*.iobj\nRelease/**/*.ipdb\nRelease/**/*.exp\nRelease/**/*.lib\n/src/ConEmu/graphics.src\n/src/ConEmu/graphics.src\n/src/WebInstall\n/src/WebInstall\n\npvs-studio*.*\n/src/*.PVS-Studio.*\n/src/.pvs/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.568359375,
          "content": "[submodule \"src/modules/minhook\"]\n\tpath = src/modules/minhook\n\turl = https://github.com/Maximus5/minhook.git\n[submodule \"src/modules/terminals\"]\n\tpath = src/modules/terminals\n\turl = https://github.com/Maximus5/cygwin-connector.git\n[submodule \"src/modules/json-parser\"]\n\tpath = src/modules/json-parser\n\turl = https://github.com/Maximus5/json-parser.git\n[submodule \"src/modules/rapidxml\"]\n\tpath = src/modules/rapidxml\n\turl = https://github.com/Maximus5/RapidXml.git\n[submodule \"src/modules/googletest\"]\n\tpath = src/modules/googletest\n\turl = https://github.com/Maximus5/googletest.git\n"
        },
        {
          "name": "CreateRelease.cmd",
          "type": "blob",
          "size": 4.7763671875,
          "content": "@echo off\n\nsetlocal\n\nset ver_info=\"%~dp0PortableApps\\App\\AppInfo\\appinfo.ini\"\nset ver_hdr=\"%~dp0src\\ConEmu\\version.h\"\n\nrem Set curdt variable to YYMMDD\ncall \"%~dp0Deploy\\GetCurDate.cmd\"\n\nset ConEmuHooks=Enabled\n\nif exist \"%~dp0Deploy\\user_env.cmd\" (\n  call \"%~dp0Deploy\\user_env.cmd\"\n) else (\n  call \"%~dp0Deploy\\user_env.default.cmd\"\n)\n\nif not exist \"%MINGWRT%head.exe\" (\n  echo head.exe tool not found, exiting\n  exit /b 1\n)\nif not exist \"%CONEMU_WWW%index.html\" (\n  echo conemu.github.io sources not found, exiting\n  exit /b 1\n)\n\nset BUILD_NO=\nset BUILD_STAGE=\n\nif \"%~1\"==\"\" goto noparm\n\n:loop_param\nif /I \"%~1\" == \"ALPHA\" (\n  set BUILD_STAGE=ALPHA\n  shift /1\n) else if /I \"%~1\" == \"PREVIEW\" (\n  set BUILD_STAGE=PREVIEW\n  shift /1\n) else if /I \"%~1\" == \"STABLE\" (\n  set BUILD_STAGE=STABLE\n  shift /1\n) else if /I \"%~1\" == \"SIGN\" (\n  shift /1\n  goto do_sign\n) else (\n  set BUILD_NO=%~1\n  shift /1\n)\nif \"%~1\" NEQ \"\" goto loop_param\n\n:oneparm\n\nrem check date, must not bee too late or future ;)\nset /A maxdt=%curdt%+1\nset /A mindt=%curdt%-1\nif \"%BUILD_NO:~0,6%\" == \"%curdt%\" goto buildok\nif \"%BUILD_NO:~0,6%\" == \"%maxdt%\" goto buildok\nif \"%BUILD_NO:~0,6%\" == \"%mindt%\" goto buildok\necho \u001b[1;31;40m------- Warning -------\u001b[0m\necho \u001b[1;31;40mCheck your build number\u001b[0m\necho \u001b[1;31;40m  Build: %BUILD_NO%  \u001b[0m\necho \u001b[1;31;40m  Today: %curdt%  \u001b[0m\necho \u001b[1;31;40m------- Warning -------\u001b[0m\npause\n:buildok\n\n\ncall \"%~dp0\\src\\ConEmu\\gen_version.cmd\" %BUILD_NO% %BUILD_STAGE%\nif errorlevel 1 goto err\n\nrem Download new translations from Transifex\ncall \"%~dp0Deploy\\l10n_refresh.cmd\"\n\nrem This will create \".daily.md\"\ncall \"%~dp0Deploy\\git2log.cmd\" -skip_upd\ncall :edit -e5 \"%CONEMU_WWW%_posts\\.daily.md\"\ncall :edit -e23 \"%~dp0Release\\ConEmu\\WhatsNew-ConEmu.txt\"\n\nif /I \"%~2\" == \"-build\" goto do_build\nif /I \"%~2\" == \"-deploy\" goto do_deploy\n\nrem echo on\n\nrem Update versions in all release files (msi, portableapps, nuget, etc.)\npowershell -noprofile -ExecutionPolicy RemoteSigned -command \"%~dp0Deploy\\UpdateDeployVersions.ps1\" %BUILD_NO%\nif errorlevel 1 goto err\n\n\nrem set ConEmuHooks=OFF\n\necho \u001b[93;40mVersion from WhatsNew-ConEmu.txt\u001b[0m\n\"%MINGWRT%\\head\" -n 30 \"%~dp0Release\\ConEmu\\WhatsNew-ConEmu.txt\" | %windir%\\system32\\find \"20%BUILD_NO:~0,2%.%BUILD_NO:~2,2%.%BUILD_NO:~4,2%\"\nif errorlevel 1 (\n\"%MINGWRT%\\head\" -n 30 \"%~dp0Release\\ConEmu\\WhatsNew-ConEmu.txt\" | \"%MINGWRT%\\tail\" -n -16\necho/\necho \u001b[1;31;40mBuild number was not described in WhatsNew-ConEmu.txt!\u001b[0m\necho/\n)\n\necho \u001b[93;40mVersion from PortableApps\u001b[0m\ntype %ver_info% | \"%MINGWRT%\\grep\" -E \"^(PackageVersion|DisplayVersion)\"\n\necho \u001b[93;40mVersion from version.h\u001b[0m\ntype %ver_hdr% | \"%MINGWRT%\\grep\" -G \"^#define MVV_\"\n\nrem Don't wait for confirmation - build number was already confirmed...\nrem echo/\nrem echo Press Enter to continue if version is OK: \"%BUILD_NO%\"\nrem pause>nul\n\nrem Give a time to editors to be started\nrem timeout /t 15\necho Press Enter to start build\npause > nul\n\n:do_build\ncd /d \"%~dp0src\"\n\nrem touch\nrem call :tch common *.cpp *.hpp *.h\nrem call :tch ConEmu *.cpp *.h\nrem call :tch ConEmuBg *.cpp *.h\nrem call :tch ConEmuC *.cpp *.h\nrem call :tch ConEmuCD *.cpp *.h\nrem call :tch ConEmuDW *.cpp *.h\nrem call :tch ConEmuHk *.cpp *.h\nrem call :tch ConEmuLn *.cpp *.h\nrem call :tch ConEmuPlugin *.cpp *.h\nrem call :tch ConEmuTh *.cpp *.h\n\necho Removing intermediate files...\nrd /S /Q \"%~dp0src\\_VCBUILD\\Release\"\n\nrem Compile x86/x64\ncall \"%~dp0src\\ms.build.release.cmd\"\nif errorlevel 1 goto err\n:do_sign\nrem Sign code\ncall \"%~dp0src\\vc.build.release.cmd\" dosign\nif errorlevel 1 goto err\n\nif exist \"%UPLOADERS%Check-VirusTotal.cmd\" (\n\tpushd \"%~dp0Release\"\n\techo Starting Check-VirusTotal\n\tcall cmd /c \"%UPLOADERS%Check-VirusTotal.cmd\" -new_console:bc\n\tpopd\n) else (\n\techo Check-VirusTotal script not found\n)\n\nif exist \"%~dp0..\\Deploy\\av_scan_release.cmd\" (\n  Echo Scanning release files with av engine\n  call \"%~dp0..\\Deploy\\av_scan_release.cmd\"\n)\n\nif exist \"%~dp0Release\\UnitTests.cmd\" call \"%~dp0Release\\UnitTests.cmd\"\n\n:do_deploy\ncd /d \"%~dp0\"\ncall Deploy\\Deploy.cmd %BUILD_NO%\n\n\n\n\n\ngoto fin\n\n\n:tch\ncd %1\n\"%MINGWRT%\\touch\" %2 %3 %4\ncd ..\ngoto :EOF\n\n:edit\nif \"%FARRUN_EXIST%\" == \"NO\" (\n  start notepad.exe %2\n  goto :EOF\n)\nfarrun -new_console:b %1 %2\ngoto :EOF\n\n:noparm\ncall \"%~dp0Deploy\\GetCurVer.cmd\"\nif \"%CurVerBuild%\" NEQ \"\" goto build_found\nset CurVerBuild=%curdt%\n\n:build_found\necho Usage:    CreateRelease.cmd ^<Version^> [^<Stage^>]\necho Example:  CreateRelease.cmd %CurVerBuild% %CurVerStage%\necho/\nset CurVerBuild=%curdt%\nset BUILD_NO=\nset BUILD_STAGE=\nrem Version\nset /P BUILD_NO=\"Deploy build number [%CurVerBuild%]: \"\nif \"%BUILD_NO%\" == \"\" set \"BUILD_NO=%CurVerBuild%\"\nrem Version stage\nset /P BUILD_STAGE=\"Build stage [%CurVerStage%]: \"\nif \"%BUILD_STAGE%\" == \"\" set \"BUILD_STAGE=%CurVerStage%\"\necho.\n\nif NOT \"%BUILD_NO%\"==\"\" goto oneparm\ngoto fin\n\n:err\nEcho Deploy FAILED!!!\n\n:fin\npause\n"
        },
        {
          "name": "Deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "Deploy_to_all.bat",
          "type": "blob",
          "size": 4.84765625,
          "content": "@echo off\n\nsetlocal\n\ncall SetEscChar.cmd\n\nif exist \"%~dp0Deploy\\user_env.cmd\" (\n  call \"%~dp0Deploy\\user_env.cmd\"\n) else (\n  call \"%~dp0Deploy\\user_env.default.cmd\"\n)\ncall \"%GIT%\" --version 1> nul 2> nul\nif errorlevel 1 (\n  call cecho \"git not found, please configure user_env.cmd\"\n  exit /b 1\n)\n\ncd /d \"%~dp0\"\n\n\"%GIT%\" log -5 --decorate=short --oneline \n\"%GIT%\" status\n\nrem Returns env.var 'CurVerBuild' from version.h\ncall :getcurbuild\n\necho .\necho .\nset /P do_REL=%ESC%[1;31;40mCreate \"%CurVerBuild% release files\" commit [Y/n/q]: %ESC%[m\nif /I \"%do_REL%\" == \"q\" exit /B 1\nset /P do_TAG=%ESC%[1;31;40mCreate \"v%CurVerBuild:~0,2%.%CurVerBuild:~2,2%.%CurVerBuild:~4%\" tag [Y/n/q]: %ESC%[m\nif /I \"%do_TAG%\" == \"q\" exit /B 1\nset /P do_MST=%ESC%[1;31;40mMerge Daily branch into Master [Y/n/q]: %ESC%[m\nif /I \"%do_MST%\" == \"q\" exit /B 1\nrem set /P do_MPV=%ESC%[1;31;40mMerge Daily branch into Preview [y/N/q]: %ESC%[m\nrem if /I \"%do_MPV%\" == \"q\" exit /B 1\nset /P do_GHB=%ESC%[1;31;40mDeploy Branches to github^&sourgeforge [Y/n/q]: %ESC%[m\nif /I \"%do_GHB%\" == \"q\" exit /B 1\nset /P do_GRL=%ESC%[1;31;40mDeploy Release to github [Y/n/q]: %ESC%[m\nif /I \"%do_GRL%\" == \"q\" exit /B 1\nset /P do_CKL=%ESC%[1;31;40mDeploy Release to chocolatey [Y/n/q]: %ESC%[m\nif /I \"%do_CKL%\" == \"q\" exit /B 1\nset /P do_NGT=%ESC%[1;31;40mDeploy Release to nuget [Y/n/q]: %ESC%[m\nif /I \"%do_NGT%\" == \"q\" exit /B 1\nset /P do_FSH=%ESC%[1;31;40mDeploy Release to fosshub [Y/n/q]: %ESC%[m\nif /I \"%do_FSH%\" == \"q\" exit /B 1\nset /P do_VER=%ESC%[1;31;40mBinaries [(A)lpha/(p)review/(pa)preview+alpha/(s)table/n/q]: %ESC%[m\nif /I \"%do_VER%\" == \"q\" exit /B 1\n\necho .%ESC%[1;32;40m\npause\necho %ESC%[m.\n\n\n\n\nif /I \"%do_CKL%\" == \"N\" goto skip_CHOCO1\npushd \"%~dp0nuget\"\ncall cecho /yellow \"Creating Chocolatey package\"\ncall \"%~dp0nuget\\build.cmd\"\nif errorlevel 1 goto err\npopd\n:skip_CHOCO1\n\nif /I \"%do_NGT%\" == \"N\" goto skip_NUGET1\npushd \"%~dp0nuget\"\ncall cecho /yellow \"Creating NuGet package\"\ncall \"%~dp0nuget\\build.nuget-org.cmd\"\nif errorlevel 1 goto err\npopd\n:skip_NUGET1\n\n\n\nif /I \"%do_FSH%\" == \"N\" goto skip_FOSS\npushd \"%CONEMU_DEPLOY%\"\ncall \"%CONEMU_DEPLOY%foss.cmd\" %CurVerBuild%\nif errorlevel 1 goto err\npopd\n:skip_FOSS\n\n\n\nif /I \"%do_REL%\" == \"N\" goto skip_REL\n\"%GIT%\" commit -am \"%CurVerBuild% release files\"\nif errorlevel 1 goto err\n:skip_REL\n\nif /I \"%do_TAG%\" == \"N\" goto skip_TAG\n\"%GIT%\" tag v%CurVerBuild:~0,2%.%CurVerBuild:~2,2%.%CurVerBuild:~4%\nif errorlevel 1 goto err\nrem Move \"v-preview\" or \"v-alpha\" tag to the current location\nif /I \"%do_VER%\" == \"N\" goto skip_TAG\n\"%GIT%\" tag -f v-release\nif /I \"%do_VER%\" == \"S\" (\n  \"%GIT%\" tag -f v-stable\n) else if /I \"%do_VER%\" == \"P\" (\n  \"%GIT%\" tag -f v-preview\n) else if /I \"%do_VER%\" == \"PA\" (\n  \"%GIT%\" tag -f v-preview\n) else (\n  \"%GIT%\" tag -f v-alpha\n)\nrem Stable build is not available yet, so there is no v-stable tag\n:skip_TAG\n\nrem if /I NOT \"%do_MPV%\" == \"Y\" goto skip_MPV\nrem \"%GIT%\" checkout preview\nrem if errorlevel 1 goto err\nrem \"%GIT%\" merge daily\nrem if errorlevel 1 goto err\n:skip_MPV\n\nif /I \"%do_MST%\" == \"N\" goto skip_MST\n\"%GIT%\" checkout master\nif errorlevel 1 goto err\n\"%GIT%\" merge daily\nif errorlevel 1 goto err\n\"%GIT%\" checkout daily\n:skip_MST\n\n\"%GIT%\" log -5 --decorate=short --oneline \n\n\n\nrem \\Utils\\Lans\\GIT\\bin\\git.exe branch\nrem call cecho \"Press enter to deploy `%CurVerBuild% Alpha` to github/sourgeforge\"\nrem pause\n\nif /I \"%do_GHB%\" == \"N\" goto skip_GHB\n\"%GIT%\" push origin master daily\nif errorlevel 1 goto err\n\"%GIT%\" push -f origin --tags\nif errorlevel 1 goto err\nif /I \"%do_GRL%\" == \"N\" (\n  echo Release creating skipped!\n) else (\n  echo Creating release: v%CurVerBuild:~0,2%.%CurVerBuild:~2,2%.%CurVerBuild:~4% %CurVerBuild%\n  call \"%UPLOADERS%ConEmuGithubRelease.cmd\" v%CurVerBuild:~0,2%.%CurVerBuild:~2,2%.%CurVerBuild:~4% %CurVerBuild%\n  if errorlevel 1 goto err\n)\n\"%GIT%\" push forge\n:skip_GHB\n\n\nif /I \"%do_CKL%\" == \"N\" goto skip_CHOCO2\npushd \"%~dp0nuget\"\ncall cecho /yellow \"Uploading Chocolatey package\"\ncall \"%~dp0nuget\\upload.cmd\"\nif errorlevel 1 goto err\npopd\n:skip_CHOCO2\n\nif /I \"%do_NGT%\" == \"N\" goto skip_NUGET2\npushd \"%~dp0nuget\"\ncall cecho /yellow \"Uploading NuGet package\"\ncall \"%~dp0nuget\\upload.nuget-org.cmd\"\nif errorlevel 1 goto err\npopd\n:skip_NUGET2\n\nif /I \"%do_VER%\" == \"N\" goto skip_AUTO\npushd \"%CONEMU_DEPLOY%\"\nif /I \"%do_VER%\" == \"S\" (\ncall \"%CONEMU_DEPLOY%upld.cmd\" %CurVerBuild% \"Stable\"\n) else if /I \"%do_VER%\" == \"P\" (\ncall \"%CONEMU_DEPLOY%upld.cmd\" %CurVerBuild% \"Preview\"\n) else if /I \"%do_VER%\" == \"PA\" (\ncall \"%CONEMU_DEPLOY%upld.cmd\" %CurVerBuild% \"Preview+Alpha\"\n) else (\ncall \"%CONEMU_DEPLOY%upld.cmd\" %CurVerBuild% \"Alpha\"\n)\nif errorlevel 1 goto err\npopd\n:skip_AUTO\n\nrem call cecho \"Press enter to deploy `%CurVerBuild% Alpha` to googlecode/ConEmu-alpha\"\nrem pause\n\nrem if \"%~1\"==\"\" pause\ngoto :EOF\n\n\n:getcurbuild\ncall \"%~dp0Deploy\\GetCurVer.cmd\"\nif \"%CurVerBuild%\" == \"\" (\ncall cecho \"Can't find valid version in src\\ConEmu\\version.h\"\nexit /B 100\n)\ngoto :EOF\n\n:err\npause\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.169921875,
          "content": "# These are supported funding model platforms\n\ngithub: Maximus5\ncustom: ['https://conemu.github.io/donate.html', 'https://www.paypal.me/conemu/5']\nliberapay: conemu.maximus5\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5048828125,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2009-2017, Maximus5 <ConEmu.Maximus5@gmail.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PortableApps",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0537109375,
          "content": "## About ConEmu\n\n[![master build status](https://dev.azure.com/MaksimMoisiuk/conemu/_apis/build/status/Maximus5.ConEmu?branchName=master&label=master)](https://dev.azure.com/MaksimMoisiuk/conemu/_build/latest?definitionId=1&branchName=master&label=master)\n[![daily build status](https://dev.azure.com/MaksimMoisiuk/conemu/_apis/build/status/Maximus5.ConEmu?branchName=daily&label=daily)](https://dev.azure.com/MaksimMoisiuk/conemu/_build/latest?definitionId=1&branchName=daily&label=daily)\n\n[ConEmu-Maximus5](https://conemu.github.io) is a Windows console emulator with tabs, which represents\nmultiple consoles as one customizable GUI window with various features.\n\nInitially, the program was created as a companion to\n[Far Manager](http://en.wikipedia.org/wiki/FAR_Manager),\nmy favorite shell replacement - file and archive management,\ncommand history and completion, powerful editor.\n\nToday, ConEmu can be used with any other console application or simple GUI tools\n(like PuTTY for example). ConEmu is an active project, open to\n[suggestions](https://github.com/Maximus5/ConEmu/issues).\n\n<a href=\"https://www.fosshub.com/ConEmu.html\">![Fosshub.com ConEmu mirror](https://github.com/Maximus5/ConEmu/wiki/downloads-new.png)</a>\n<a href=\"https://conemu.github.io/donate.html\">![Donate](https://github.com/Maximus5/ConEmu/wiki/donate-new.png)</a>\n\nTake a look at [screencast](http://dotnetsurfers.com/blog/2013/12/15/developer-tools-screencast-7-conemu/) about ConEmu.\n\nThis fork grew up from ConEmu by Zoin.\n\n\n## License (BSD 3-clause)\n    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR\n    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\nSee [Release/ConEmu/License.txt](https://github.com/Maximus5/ConEmu/blob/master/Release/ConEmu/License.txt) for the full license text.\n\n\n## Some links\nWiki: https://conemu.github.io/en/TableOfContents.html\nWhat's new: https://conemu.github.io/en/Whats_New.html\nRelease stages: https://conemu.github.io/en/StableVsPreview.html\nDonate this project: <a ref=\"https://conemu.github.io/donate.html\" rel=\"nofollow\">https://conemu.github.io/donate.html</a>\n\n\n\n## Description\nConEmu starts a console program in hidden console window and provides\nan alternative customizable GUI window with various features:\n\n  * smooth window resizing;\n  * tabs and splits (panes);\n  * easy run old DOS applications (games) in Windows 7 or 64bit OS (DosBox required);\n  * quake-style, normal, maximized and full screen window graphic modes;\n  * window font anti-aliasing: standard, clear type, disabled;\n  * window fonts: family, height, width, bold, italic, etc.;\n  * using normal/bold/italic fonts for different parts of console simultaneously;\n  * cursor: standard console (horizontal) or GUI (vertical);\n  * and more, and more...\n\n### Far Manager related features\n  * tabs for editors, viewers, panels and consoles;\n  * thumbnails and tiles;\n  * show full output (1K+ lines) of last command in editor/viewer;\n  * customizable right click behaviour (long click opens context menu);\n  * drag and drop (explorer style);\n  * and more, and more...\n\nAll settings are read from the registry or ConEmu.xml file, after which the\n[command line parameters](https://conemu.github.io/en/CommandLine.html)\nare applied. You may easily use several named configurations (for different PCs for example).\n\n\n## Requirements\n  * Windows XP or later for 32-bit.\n  * Windows Vista or later for 64-bit.\n\n\n## Installation\nIn general, ConEmu installation is easy.\nJust unpack or install to any folder and run `ConEmu.exe`.\n\nRead [Installation wiki](https://conemu.github.io/en/Installation.html)\nabout release stages, distro packets, some warnings and much more...\n\n\n## Building from sources\nhttps://github.com/Maximus5/ConEmu/blob/master/src/HowToBuild.md\n\n## Screenshots\n![Splits and tabs in ConEmu](https://github.com/Maximus5/ConEmu/wiki/ConEmuSplits.png)\n\n![ConEmu+Powershell inside Windows Explorer pane](https://github.com/Maximus5/ConEmu/wiki/ConEmuInside.png)\n\n[More screenshots](https://conemu.github.io/en/Screenshots.html)\n"
        },
        {
          "name": "Release",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1064453125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report security issues to `ConEmu.Maximus5@gmail.com`"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.453125,
          "content": "version: 1.0.{build}\nimage: Visual Studio 2019\nconfiguration:\n- Release\nplatform:\n- x64\n- Win32\nclone_depth: 1\nbefore_build:\n- cmd: >-\n    git submodule update --init --recursive\n\n    mkdir Debug\\plugins\\ConEmu\\Background\n\n    mkdir Debug\\plugins\\ConEmu\\Lines\n\n    mkdir Debug\\plugins\\ConEmu\\Thumbs\nbuild:\n  project: src\\CE.sln\n  parallel: true\n  verbosity: minimal\ntest_script:\n- cmd: >-\n    call \"%Configuration%\\Tests_%Configuration%_%Platform%.exe\"\ndeploy: off"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 1.580078125,
          "content": "# .NET Desktop\n# Build and run tests for .NET Desktop or Windows classic desktop solutions.\n# Add steps that publish symbols, save build artifacts, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net\n\ntrigger:\n  branches:\n    include:\n    - master\n    - daily\n  paths:\n    exclude:\n    - '**/*.md'\n    - '*.md'\n    - '**/*.txt'\n    - '*.txt'\n    - .github/workflows/codeql-analysis.yml\n\npool:\n  vmImage: 'windows-2019'\n\nvariables:\n  solution: 'src/CE.sln'\n\njobs:\n\n- job: 'x64_Release'\n  displayName: 'x64|Release'\n  timeoutInMinutes: 15\n  variables:\n    platform: 'x64'\n    configuration: 'Release'\n  steps:\n  - checkout: self\n    submodules: true\n  - task: VSBuild@1\n    displayName: 'Build $(platform)|$(configuration)'\n    inputs:\n      solution: '$(solution)'\n      platform: '$(platform)'\n      configuration: '$(configuration)'\n  - script: |\n      cd\n      call \"$(configuration)\\Tests_$(configuration)_$(platform).exe\" --gtest_color=yes\n    displayName: 'Tests $(platform)|$(configuration)'\n    failOnStderr: false\n\n- job: 'Win32_Release'\n  displayName: 'Win32|Release'\n  timeoutInMinutes: 15\n  variables:\n    platform: 'Win32'\n    configuration: 'Release'\n  steps:\n  - checkout: self\n    submodules: true\n  - task: VSBuild@1\n    displayName: 'Build $(platform)|$(configuration)'\n    inputs:\n      solution: '$(solution)'\n      platform: '$(platform)'\n      configuration: '$(configuration)'\n  - script: |\n      cd\n      call \"$(configuration)\\Tests_$(configuration)_$(platform).exe\" --gtest_color=yes\n    displayName: 'Tests $(platform)|$(configuration)'\n    failOnStderr: false\n"
        },
        {
          "name": "descript.ion",
          "type": "blob",
          "size": 0.0322265625,
          "content": "premake5.exe premake5.exe vs2019\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": "premake5.lua",
          "type": "blob",
          "size": 22.455078125,
          "content": "-- ConEmu's solution generator script\n-- 1. Download premake5 from https://premake.github.io/download.html\n-- 2. Run `premake5 vs2019`\n\nworkspace \"CE\"\n  configurations { \"Release\", \"Debug\", \"Remote\" }\n  platforms { \"Win32\", \"x64\" }\n  -- Where *.vcxproj files would be placed\n  location \"src\"\n  --basedir \"%{cfg.location}\"\n  -- Subdir for temporary files\n  local build_dir = \"_VCBUILD\"\n\n  startproject \"ConEmu\"\n\n  staticruntime \"On\"\n  flags { \"MultiProcessorCompile\" }\n  flags { \"Maps\" }\n  filter \"configurations:Release\"\n    flags { \"NoIncrementalLink\" }\n\n  filter \"platforms:Win32\"\n    architecture \"x32\"\n    defines { \"WIN32\", \"_WIN32\" }\n\n  filter \"platforms:x64\"\n    architecture \"x64\"\n    defines { \"WIN64\", \"_WIN64\" }\n\n  filter { \"action:vs2019\", \"configurations:Release or Remote\", \"platforms:Win32\" }\n    toolset \"v141_xp\"\n  filter { \"action:vs2019\", \"configurations:Debug\", \"platforms:Win32\" }\n    toolset \"v141_xp\"\n  filter \"action:vs2017\"\n    toolset \"v141_xp\"\n  filter \"action:vs2015\"\n    toolset \"v140_xp\"\n  filter \"action:vs2013\"\n    toolset \"v120_xp\"\n  filter \"action:vs2012\"\n    toolset \"v110_xp\"\n\n  filter \"configurations:Release\"\n    defines { \"NDEBUG\", \"HIDE_TODO\", \"NOMINMAX\" }\n    optimize \"Size\"\n    symbols \"On\"\n\n  filter \"configurations:Debug\"\n    defines { \"_DEBUG\", \"HIDE_TODO\", \"MSGLOGGER\", \"NOMINMAX\" }\n    symbols \"On\"\n\n  filter \"configurations:Remote\"\n    defines { \"_DEBUG\", \"HIDE_TODO\", \"MSGLOGGER\", \"NOMINMAX\" }\n    symbols \"On\"\n\n  filter{}\n\nfunction target_dir(folder)\n  filter \"configurations:Release\"\n    targetdir(\"Release/\"..folder)\n\n  filter \"configurations:Debug\"\n    targetdir(\"Debug/\"..folder)\n\n  filter \"configurations:Remote\"\n    targetdir(\"Z:/\"..folder)\n\n  filter{}\nend\n\nfunction postbuild_module_(dllname, cfg, ext)\n  if cfg == \"Release\" or cfg == \"Debug\" then\n    postbuildcommands {\n      \"copy \\\"$(TargetPath)\\\" \\\"../\"..cfg..\"/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\"\\\"\",\n      \"copy \\\"$(TargetDir)$(TargetName).map\\\" \\\"../\"..cfg..\"/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\".map\\\"\",\n      \"copy \\\"$(TargetDir)$(TargetName).pdb\\\" \\\"../\"..cfg..\"/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\".pdb\\\"\",\n    }\n  else\n    postbuildcommands {\n      \"copy \\\"$(TargetPath)\\\" \\\"Z:/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\"\\\"\",\n      \"copy \\\"$(TargetDir)$(TargetName).map\\\" \\\"Z:/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\".map\\\"\",\n      \"copy \\\"$(TargetDir)$(TargetName).pdb\\\" \\\"Z:/plugins/ConEmu/Thumbs/\"..dllname..\".\"..ext..\".pdb\\\"\",\n    }\n  end\nend\n\nfunction postbuild_module(dllname)\n  filter { \"configurations:Release\", \"platforms:Win32\" }\n    postbuild_module_(dllname, \"Release\", \"t32\")\n\n  filter { \"configurations:Release\", \"platforms:x64\" }\n    postbuild_module_(dllname, \"Release\", \"t64\")\n\n  filter { \"configurations:Debug\", \"platforms:Win32\" }\n    postbuild_module_(dllname, \"Debug\", \"t32\")\n\n  filter { \"configurations:Debug\", \"platforms:x64\" }\n    postbuild_module_(dllname, \"Debug\", \"t64\")\n\n  filter { \"configurations:Remote\", \"platforms:Win32\" }\n    postbuild_module_(dllname, \"Z:/\", \"t32\")\n\n  filter { \"configurations:Remote\", \"platforms:x64\" }\n    postbuild_module_(dllname, \"Z:/\", \"t64\")\n\n  filter {}\nend\n\n\n\nlocal common_remove = {\n  \"**/ExecPty.*\",\n  \"**/ProcList.*\",\n  \"**/Processes.*\",\n  \"**/base64.*\",\n  \"**/ConsoleTrueMod_Concept.h\",\n  \"**/*.bak\",\n  \"**/!*.*\",\n  \"**/_*.*\",\n}\n\nlocal tests_remove = {\n  \"**/*_test.cpp\",\n}\n\nlocal common_kernel = {\n  \"src/common/CEHandle.*\",\n  \"src/common/CEStr.*\",\n  \"src/common/CmdArg.*\",\n  \"src/common/CmdLine.*\",\n  \"src/common/Common.cpp\",\n  \"src/common/Common.h\",\n  \"src/common/ConEmuCheck.*\",\n  \"src/common/ConsoleMixAttr.*\",\n  \"src/common/ConsoleRead.*\",\n  \"src/common/EnvVar.*\",\n  \"src/common/Execute.*\",\n  \"src/common/HandleKeeper.*\",\n  \"src/common/HkFunc.*\",\n  \"src/common/InQueue.*\",\n  \"src/common/Keyboard.*\",\n  \"src/common/MAssert.*\",\n  \"src/common/MConHandle.*\",\n  \"src/common/Memory.*\",\n  \"src/common/MEvent.*\",\n  \"src/common/MFileLog.*\",\n  \"src/common/MHandle.*\",\n  \"src/common/MModule.*\",\n  \"src/common/MProcess.*\",\n  \"src/common/MProcessBits.*\",\n  \"src/common/MRect.*\",\n  \"src/common/MSection.*\",\n  \"src/common/MSectionSimple.*\",\n  \"src/common/MSecurity.*\",\n  \"src/common/MStrDup.*\",\n  \"src/common/MStrSafe.*\",\n  \"src/common/MWnd.*\",\n  \"src/common/RConStartArgs.*\",\n  \"src/common/WCodePage.*\",\n  \"src/common/WConsole.*\",\n  \"src/common/WModuleCheck.*\",\n  \"src/common/WObjects.*\",\n  \"src/common/WThreads.*\",\n}\n\nlocal conemu_remove = {\n  \"**/ConEmuMinGW.rc\",\n  \"**/ToolBarClass.*\",\n  \"**/Theming.*\",\n  \"**/FontRanges.*\",\n  \"**/*-old.*\",\n  \"**/RegExp.*\",\n  \"**/ConsoleTrueMod_Concept.h\",\n  \"**/hourglass.bmp\",\n  \"**/UserImages.bmp\",\n  \"**/User16.bmp\",\n  \"**/Shield32*.bmp\",\n  \"**/Scroll256.bmp\",\n  \"**/Scroll16.bmp\",\n  \"**/Scroll0.bmp\",\n  \"**/base64.h\",\n  \"**/!*.*\",\n}\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"common-kernel\"\n  kind \"StaticLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  files (common_kernel)\n  files {\"src/common/defines.h\"}\n\n  removefiles (common_remove)\n  removefiles (tests_remove)\n\n  vpaths {\n    [\"Headers\"] = {\"**.h\"},\n    [\"Sources\"] = {\"**.cpp\"},\n  }\n\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  targetdir \"%{cfg.objdir}\"\n  filter \"platforms:Win32\"\n    targetsuffix \"32\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"common-kernel\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"common-user\"\n  kind \"StaticLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  files {\n    \"src/common/*.cpp\",\n    \"src/common/*.h\",\n  }\n\n  removefiles (common_remove)\n  removefiles (common_kernel)\n  removefiles (tests_remove)\n\n  vpaths {\n    [\"Headers\"] = {\"**.h\"},\n    [\"Sources\"] = {\"**.cpp\"},\n  }\n\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  targetdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"32\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"common-user\"\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"ConEmu\"\n  kind \"WindowedApp\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n  entrypoint \"WinMainCRTStartup\"\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n    \"comctl32\",\n    \"shlwapi\",\n    \"version\",\n    \"gdiplus\",\n    \"winmm\",\n    \"netapi32\",\n  }\n\n  -- we can't use pch because SHOWDEBUGSTR is defined or not per source file\n  -- pchheader \"Header.h\"\n  -- pchsource \"src/ConEmu/Header.cpp\"\n\n  files {\n    \"src/common/*.h\",\n    \"src/ConEmu/*.cpp\",\n    \"src/ConEmu/*.h\",\n    \"src/ConEmu/*.rc\",\n    \"src/ConEmu/*.rc2\",\n    \"src/ConEmu/*.bmp\",\n    \"src/ConEmu/*.cur\",\n    \"src/ConEmu/*.ico\",\n    \"Release/ConEmu/ConEmu.l10n\",\n    \"src/ConEmu/conemu.gcc.manifest\",\n  }\n\n  removefiles (conemu_remove)\n  removefiles (common_remove)\n  removefiles (tests_remove)\n\n  vpaths {\n    { [\"Common\"]    = {\"src/common/*.h\"} },\n    { [\"Resources\"] = {\"**/*.rc\", \"**/*.rc2\", \"**/*.manifest\", \"**/*.bmp\", \"**/*.cur\", \"**/*.ico\"} },\n    { [\"Localizations\"] = {\"**/Lng*.*\", \"Release/ConEmu/ConEmu.l10n\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n    { [\"Macro\"]     = {\"**/Macro*.*\"} },\n    { [\"Graphics\"]  = {\"**/GdiObjects.*\", \"**/Font*.*\", \"**/CustomFonts.*\", \"**/Background.*\", \"**/ColorFix.*\",\n                       \"**/IconList.*\", \"**/ImgButton.*\", \"**/LoadImg.*\", \"**/ScreenDump.*\", \"**/ToolImg.*\"} },\n    { [\"Settings\"]  = {\"**/SetPg*.*\", \"**/Options*.*\", \"**/SettingsStorage.*\"} },\n    { [\"Headers\"]   = {\"**/*.h\"} },\n    { [\"Sources\"]   = {\"**/*.cpp\"} },\n  }\n\n  target_dir(\"\")\n  targetname \"ConEmu\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"ConEmu\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"ConEmuC\"\n  kind \"ConsoleApp\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n  }\n\n  dependson {\n    \"ConEmuCD\",\n    \"ConEmuHk\",\n  }\n\n  files {\n    \"src/ConEmuC/*.cpp\",\n    \"src/ConEmuC/*.h\",\n    \"src/ConEmuC/*.rc\",\n    \"src/ConEmuC/ConEmuC.exe.manifest\",\n  }\n\n  removefiles (tests_remove)\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  filter { \"configurations:Debug or Remote\" }\n  postbuildcommands {\n    '{ECHO} Copying \"%{wks.location}../Release/ConEmu/*.cmd\" \"%{cfg.targetdir}\"',\n    '{COPY} \"%{wks.location}/../Release/ConEmu/*.cmd\" \"%{cfg.targetdir}\"',\n    '{ECHO} Copying \"%{wks.location}../Release/ConEmu/ConEmu.l10n\" \"%{cfg.targetdir}\"',\n    '{COPY} \"%{wks.location}/../Release/ConEmu/ConEmu.l10n\" \"%{cfg.targetdir}\"',\n  }\n  filter{}\n\n  target_dir(\"ConEmu/\")\n  targetname \"ConEmuC\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"ConEmuC\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"ConEmuCD\"\n  kind \"SharedLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  filter {\"action:vs*\", \"platforms:Win32\"}\n    linkoptions { \"/DYNAMICBASE:NO\", \"/FIXED:NO\", \"/BASE:0x6F780000\" }\n  filter {\"action:vs*\", \"platforms:x64\"}\n    linkoptions { \"/DYNAMICBASE:NO\", \"/FIXED:NO\", \"/BASE:0x6F780000000\" }\n  filter {\"action:gmake\", \"platforms:Win32\"}\n    linkoptions { \"--image-base=0x6F780000\" }\n  filter {\"action:gmake\", \"platforms:x64\"}\n    linkoptions { \"--image-base=0x6F780000000\" }\n  filter {}\n\n  defines { \"DLL_CONEMUCD_EXPORTS\" }\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n  }\n\n  files {\n    \"src/common/Common.h\",\n    \"src/ConEmuCD/*.cpp\",\n    \"src/ConEmuCD/*.h\",\n    \"src/ConEmuHk/Injects.*\",\n    \"src/ConEmuCD/*.rc\",\n  }\n\n  removefiles (tests_remove)\n\n  filter \"action:vs*\"\n    files \"src/ConEmuCD/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuCD/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Exports\"]   = {\"**.def\", \"**/ExportedFunctions.h\"} },\n    { [\"Interface\"] = {\"**/Common.h\", \"**/SrvCommands.*\", \"**/Queue.*\", \"**/SrvPipes.*\"} },\n    { [\"Automation\"] = {\"**/Actions.*\", \"**/GuiMacro.*\"} },\n    { [\"Console\"] = {\"**/ConAnsi.*\", \"**/ConAnsiImpl.*\", \"**/ConData.*\"} },\n    { [\"Server\"] = {\"**/ConEmuSrv.*\", \"**/ConEmuCmd.*\", \"**/WorkerBase.*\"} },\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n  }\n\n  target_dir(\"ConEmu/\")\n  targetname \"ConEmuCD\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"ConEmuCD\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"ConEmuHk\"\n  kind \"SharedLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  filter {\"action:vs*\", \"platforms:Win32\"}\n    linkoptions { \"/DYNAMICBASE:NO\", \"/FIXED:NO\", \"/BASE:0x7E110000\" }\n  filter {\"action:vs*\", \"platforms:x64\"}\n    linkoptions { \"/DYNAMICBASE:NO\", \"/FIXED:NO\", \"/BASE:0x7E1100000000\" }\n  filter {\"action:gmake\", \"platforms:Win32\"}\n    linkoptions { \"--image-base=0x7E110000\" }\n  filter {\"action:gmake\", \"platforms:x64\"}\n    linkoptions { \"--image-base=0x7E1100000000\" }\n  filter {}\n\n  --filter { \"configurations:Release\" }\n  --  optimize \"Full\"\n  --filter {}\n\n  defines { \"CONEMU_MINIMAL\" }\n\n  links {\n    \"common-kernel\",\n  }\n\n  files {\n    \"src/ConEmu/ConsoleMessages.h\",\n    \"src/ConEmu/DebugMsgLog.h\",\n    \"src/ConEmuHk/*.cpp\",\n    \"src/ConEmuHk/*.h\",\n    \"src/ConEmuHk/*.rc\",\n    \"src/ConEmuHk/hde.c\",\n    \"src/modules/terminals/ConnectorAPI.h\",\n    \"src/modules/minhook/src/**.c\",\n    \"src/modules/minhook/src/**.h\",\n    \"src/modules/minhook/include/*.h\",\n    \"src/modules/minhook/LICENSE.txt\",\n  }\n\n  removefiles {\n    \"**/CETaskBar_.*\",\n    \"**/*-orig.*\",\n  }\n  removefiles (tests_remove)\n\n  filter { \"files:**/HDE/*.*\" }\n    flags {\"ExcludeFromBuild\"}\n  filter {}\n\n  filter \"action:vs*\"\n    files \"src/ConEmuHk/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuHk/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"MinHook/HDE\"] = {\"**/minhook/src/HDE/*.*\"} },\n    { [\"MinHook/Trampoline\"] = {\"**/minhook/src/*.*\"} },\n    { [\"MinHook\"] = {\"**/minhook/**.*\", \"**/hde.c\"} },\n    { [\"Hooks\"] = {\"**/hk*.*\"} },\n    { [\"Connector\"] = {\"**/Connector*.*\"} },\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"ConEmu/\")\n  targetname \"ConEmuHk\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"ConEmuHk\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuPlugin\"\n  kind \"SharedLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n    \"version\",\n  }\n\n  files {\n    \"src/ConEmuPlugin/*.cpp\",\n    \"src/ConEmuPlugin/*.h\",\n    \"src/ConEmuPlugin/*.rc\",\n    \"src/ConEmuPlugin/Lang.templ\",\n  }\n\n  filter \"action:vs*\"\n    files \"src/ConEmuPlugin/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuPlugin/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\", \"**.templ\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"plugins/ConEmu/\")\n  targetname \"ConEmu\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \".x64\"\n  filter {}\n-- end of \"Far.ConEmuPlugin\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuBg\"\n  kind \"SharedLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n    \"version\",\n  }\n\n  files {\n    \"src/ConEmuBg/*.cpp\",\n    \"src/ConEmuBg/*.h\",\n    \"src/ConEmuBg/*.rc\",\n    \"src/ConEmuBg/Lang.templ\",\n  }\n\n  filter \"action:vs*\"\n    files \"src/ConEmuBg/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuBg/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\", \"**.templ\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"plugins/ConEmu/Background/\")\n  targetname \"ConEmuBg\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \".x64\"\n  filter {}\n-- end of \"Far.ConEmuBg\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuLn\"\n  kind \"SharedLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n    \"version\",\n  }\n\n  files {\n    \"src/ConEmuLn/*.cpp\",\n    \"src/ConEmuLn/*.h\",\n    \"src/ConEmuLn/*.rc\",\n    \"src/ConEmuLn/Lang.templ\",\n  }\n\n  filter \"action:vs*\"\n    files \"src/ConEmuLn/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuLn/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\", \"**.templ\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"plugins/ConEmu/Lines/\")\n  targetname \"ConEmuLn\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \".x64\"\n  filter {}\n-- end of \"Far.ConEmuLn\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuTh\"\n  kind \"SharedLib\"\n  language \"C++\"\n  --exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n    \"common-user\",\n    \"version\",\n  }\n\n  files {\n    \"src/ConEmuTh/*.cpp\",\n    \"src/ConEmuTh/*.h\",\n    \"src/ConEmuTh/*.rc\",\n    \"src/ConEmuTh/Lang.templ\",\n  }\n\n  filter \"action:vs*\"\n    files \"src/ConEmuTh/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuTh/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\", \"**.templ\", \"**.templ\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"plugins/ConEmu/Thumbs/\")\n  targetname \"ConEmuTh\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \".x64\"\n  filter {}\n-- end of \"Far.ConEmuTh\"\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuTh.gdi+\"\n  kind \"SharedLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n  }\n\n  files {\n    \"src/ConEmuTh/Modules/gdip/*.cpp\",\n    \"src/ConEmuTh/Modules/gdip/*.h\",\n    \"src/ConEmuTh/Modules/gdip/*.rc\",\n    \"src/ConEmuTh/Modules/gdip/gdip.def\",\n    \"src/ConEmuTh/Modules/ThumbSDK.h\",\n    \"src/ConEmuTh/Modules/MStream.h\",\n  }\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  targetname \"gdi+\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  targetdir (\"%{cfg.objdir}\")\n  implibdir (\"%{cfg.objdir}\")\n  postbuild_module (\"gdi+\")\n-- end of \"Far.ConEmuTh.gdi+\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuTh.ico\"\n  kind \"SharedLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n  }\n\n  files {\n    \"src/ConEmuTh/Modules/ico/*.cpp\",\n    \"src/ConEmuTh/Modules/ico/*.h\",\n    \"src/ConEmuTh/Modules/ico/*.rc\",\n    \"src/ConEmuTh/Modules/ico/ico.def\",\n    \"src/ConEmuTh/Modules/ThumbSDK.h\",\n    \"src/ConEmuTh/Modules/MStream.h\",\n  }\n\n  removefiles {\n    \"**/!*.*\",\n  }\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  targetname \"ico\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  targetdir (\"%{cfg.objdir}\")\n  implibdir (\"%{cfg.objdir}\")\n  postbuild_module (\"ico\")\n-- end of \"Far.ConEmuTh.ico\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ConEmuTh.pe\"\n  kind \"SharedLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n  }\n\n  files {\n    \"src/ConEmuTh/Modules/pe/*.cpp\",\n    \"src/ConEmuTh/Modules/pe/*.h\",\n    \"src/ConEmuTh/Modules/pe/*.rc\",\n    \"src/ConEmuTh/Modules/pe/pe.def\",\n    \"src/ConEmuTh/Modules/ThumbSDK.h\",\n  }\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  targetname \"pe\"\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  targetdir (\"%{cfg.objdir}\")\n  implibdir (\"%{cfg.objdir}\")\n  postbuild_module (\"pe\")\n-- end of \"Far.ConEmuTh.pe\"\n\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Far.ExtendedConsole\"\n  kind \"SharedLib\"\n  language \"C++\"\n  exceptionhandling \"Off\"\n\n  links {\n    \"common-kernel\",\n  }\n\n  files {\n    \"src/ConEmuDW/*.cpp\",\n    \"src/ConEmuDW/*.h\",\n    \"src/ConEmuDW/*.rc\",\n  }\n\n  removefiles {\n    \"**/!*.*\",\n  }\n\n  filter \"action:vs*\"\n    files \"src/ConEmuDW/export.def\"\n  filter \"action:gmake\"\n    files \"src/ConEmuDW/export.gcc.def\"\n  filter {}\n\n  vpaths {\n    { [\"Headers\"] = {\"**.h\"} },\n    { [\"Sources\"] = {\"**.cpp\"} },\n    { [\"Resources\"] = {\"**.rc\", \"**.rc2\", \"**.manifest\"} },\n    { [\"Exports\"]   = {\"**.def\"} },\n  }\n\n  target_dir(\"ConEmu/\") -- local function\n  targetname (\"ExtendedConsole\")\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  -- implibdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n  filter \"platforms:Win32\"\n    targetsuffix \"\"\n  filter \"platforms:x64\"\n    targetsuffix \"64\"\n  filter {}\n-- end of \"Far.ExtendedConsole\"\n\n\n\n-- ############################### --\n-- ############################### --\n-- ############################### --\nproject \"Tests\"\n  kind \"ConsoleApp\"\n  language \"C++\"\n  exceptionhandling \"On\"\n\n  defines {\"TESTS_MEMORY_MODE\", \"CE_UNIT_TEST=1\"}\n\n  files {\n    -- tests\n    \"src/UnitTests/*_test.cpp\",\n    \"src/UnitTests/test_stubs.cpp\",\n    \"src/UnitTests/test_mock*.*\",\n    \"src/**/*_test.cpp\",\n    -- common files\n    \"src/common/*.cpp\",\n    \"src/common/*.h\",\n    -- main sources\n    \"src/ConEmu/*.rc\",\n    \"src/ConEmu/*.cpp\",\n    \"src/ConEmu/*.h\",\n    \"src/ConEmu/conemu.gcc.manifest\",\n    -- server sources\n    \"src/ConEmuCD/StartEnv.cpp\",\n    -- conemuhk sources\n    \"src/ConEmuHk/DllOptions.cpp\",\n    \"src/ConEmuHk/ShellProcessor.cpp\",\n    -- googletest\n    \"src/modules/googletest/googletest/src/gtest-all.cc\",\n  }\n\n  removefiles (common_remove)\n  removefiles (conemu_remove)\n  removefiles {\n    \"src/ConEmu/ConEmuApp.*\",\n    \"src/UnitTests/test_*/*.cpp\",\n  }\n\n  vpaths {\n    { [\"mocks\"] = {\"**/test_stubs.cpp\", \"**/test_mock*.*\"} },\n    { [\"tests\"] = {\"**/*_test.*\"} },\n    { [\"Resources\"] = {\"**/*.rc\", \"**/*.rc2\", \"**/*.manifest\", \"**/*.bmp\", \"**/*.cur\", \"**/*.ico\"} },\n  }\n\n  includedirs {\n    \"src/modules/googletest/googletest/include\",\n    \"src/modules/googletest/googletest\",\n  }\n\n  links {\n    -- don't link \"common-kernel\" or  \"common-user\"!\n    \"comctl32\",\n    \"shlwapi\",\n    \"version\",\n    \"gdiplus\",\n    \"winmm\",\n    \"netapi32\",\n  }\n\n  target_dir(\"\")\n  targetname (\"Tests_%{cfg.buildcfg}_%{cfg.platform}\")\n  objdir (\"%{wks.location}/\"..build_dir..\"/%{cfg.buildcfg}/%{prj.name}_%{cfg.platform}\")\n  implibdir (\"%{cfg.objdir}\")\n\n  -- postbuildcommands {\"$(SolutionDir)UnitTests\\\\Tests_%{cfg.buildcfg}_%{cfg.platform}.exe\"}\n\n  filter {}\n-- end of \"Tests\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}