{
  "metadata": {
    "timestamp": 1736566110552,
    "page": 109,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "albertlauncher/albert",
      "stars": 7343,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": ".*\ndocumentation\n*build*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1572265625,
          "content": "*.jsc\n*.qmlc\n.DS_Store\n/.albertignore\n.idea\n/CMakeLists.txt.user*\n/LicenseTemplate\n/build*\n/cmake-*\n/design\n/documentation\n/doxygen\n/packaging\nconfig.h\nexport.h\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.365234375,
          "content": "[submodule \"plugins\"]\n\tpath = plugins\n\turl = https://github.com/albertlauncher/plugins.git\n[submodule \"lib/QHotkey\"]\n\tpath = lib/QHotkey\n\turl = https://github.com/Skycoder42/QHotkey\n[submodule \"i18n\"]\n\tpath = i18n\n\turl = https://github.com/albertlauncher/i18n.git\n[submodule \"lib/QNotification\"]\n\tpath = lib/QNotification\n\turl = https://github.com/QtCommunity/QNotification\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 48.64453125,
          "content": "v0.26.13 (2025-01-06)\n\nHotfix backward compatibility.\n\nv0.26.12 (2025-01-06)\n\n## Albert\n\n- Fix device dependent pixmap creation\n- Avoid usage of deprecated QStyle::standardPixmap\n\n## Plugins\n\n- **applications** Add ghostty\n\nv0.26.11 (2024-12-30)\n\n## Albert\n\n- Add a motivating text in the plugin settings placeholder page\n\n## Plugins\n\n- **timer** Allow h, m, s durations\n  - Clean obsolete translations\n  - User timer emoji icon\n- **caffeine** Fix non-persistent default interval\n- **menubar** Do not retain NSRunningApplication forever\n  Rather keep its PID for comparison.\n- **widgetsboxmodel** Update icon handling\n  - Do not upscale icons that are smaller than requested\n  - Draw the icon such that it is centered in the icon area\n- **chromium** Update bookmark icon\n  Also avoid usage of xdg: schemes on other than linux platforms\n- **websearch** Change icon sizes which lead to blurry output\n- **applications** Change missing terminal link to issues choice\n\nv0.26.10 (2024-12-06)\n\n## Albert\n\n- Add some more precise Match tests\n- Hardcode /usr/local/bin into PATH on macos\n- Fix Matcher type conversion\n- Precompile headers\n\n## Plugins\n\n- **chromium** Avoid warnings on emtpy paths\n- **menubar**\n  - Properly display glyphs\n  - Fix modifier conversion\n  - Minor improvements and fixes\n- **bluetooth** Add open settings action\n\nv0.26.9 (2024-12-02)\n\nThis release contains the latest bug fixes.\n\n- **widgetsboxmodel** Fix broken input history behavior\n- **applications** Set ignore_show_in_keys default to true\n- **clipboard** Fix typo\n- **path** Show PATH in settings and tr synopsis\n- **docs** \"Fix\" mac builds\n\nv0.26.8 (2024-11-18)\n\n## Albert\n\n- Minor improvements around telemetry\n\n## API\n\n- Add variadic ``Matcher::match(â€¦)``\n\n## Plugins\n\n- **python** Interface 2.5\n- **applications**\n  - Recurse app directories on macos\n  - Revert back to command based heuristic to find terminals\n- **menubar** Show hotkeys\n\nv0.26.7 (2024-11-07)\n\nThis release contains the new plugin menubar and separates the sleep inhibition extension from the system plugin.\n\n## Albert\n\n- CPack drop qt deloy tool\n- Update translations\n- Parse cli params asap for faster hotkeys\n\n## Plugins\n\n- **menubar** 1.0\n- **system** Move sleep inhibition in separate plugin\n- **caffeine** Separate from system\n\nv0.26.6 (2024-10-23)\n\n## Albert\n\n- Actually make use of telemetry and send enabled plugins and activated extensions.\n\n- Add context menu to the plugin list\n  - En/disable plugin\n  - Un/load plugin\n  - Option to sort list by checked state\n\n- Improve testing\n  - Drop doctest. Use QTest.\n  - Drop doctest and use QTest\n  - Enable CTest for better CI\n\n## API\n\n- ``albert``\n  - Add ``quit()``\n  - Add ``restart()``\n  - Add ``open(QUrl url)``\n  - Add ``open(QString path)``\n  - Add ``open(filesystem::path path)``\n- ``InputHistory``\n  - Constructor now optionally takes a path\n- Add colors to logging.h\n\n## Plugins\n\n- **applications**\n  - Send telemetry about available terminals\n  - Log warning on unsupported terminals\n  - Case sensitive desktop ids\n  - Fix desktop entry shadowing\n  - Add terminal org.gnome.ptyxis\n\n- **bluetooth**\n  - Fix warning on language\n\n- **files**\n  - Add filebrowser option: Show hidden files\n  - Add filebrowser option: Sort case insensitive\n  - Add filebrowser option: Show directories first\n  - Use QTest\n\n- **widgetsboxmodel**\n  - Fix weird end of history behavior\n\nv0.26.5 (2024-10-16)\n\n## Plugins\n\n- Archive **qmlboxmodel**\n- **applications**\n  - Fix segfaults on Qt 6.8\n  - Add option \"split camel case\"\n  - Add option \"use acronyms\"\n  - Add terminals debian-uxterm and com.alacritty.Alacritty\n- **python**\n  - Do not allow site_import\n- **dictionary**\n  - Implement FallbackHandler\n- **contacts**\n  - Implement IndexQueryHandler\n  - Index contacts in background\n  - Use all available names\n  - Add website addresses actions\n\nv0.26.4 (2024-09-24)\n\nThis version contains the latest fixes.\n\n## Albert\n\n- ItemIndex: Fix access to moved item. Skip emtpy IndexItems.\n\n## Plugins\n\n- [applications] Search in /System/Cryptexes/App/System/Applications\n- [files] Fix f-term action failing on spaces\n- [files] Fix xfce4-terminal\n- [snippets] Fix typo\n- [websearch] Create required data directory on start\n\n## Python\n\n- [syncthing] Use python-syncthing2. python-syncthing is dead.\n- [unit_converter] Remove future typehints\n\nv0.26.3 (2024-09-07)\n\n## plugins\n\n- [calculator_qalculate]\n  - Add option: Units in global query\n  - Add option: Functions in global query\n- [python]\n  - Proper venv isolation\n  - Fix excluding regex breaking aur builds\n  - No quotes around logs\n\nv0.26.2 (2024-08-21)\n\nHotfix docs plugin cluttering output due to nonunique item id\n\nv0.26.1 (2024-08-20)\n\n[albert]\n- Albert license v1.1\n\n[plugins]\n- [system]\n  - Also match the trigger for sleep inhibition\n  - Allow changing trigger for sleep inhibition\n- [docs]\n  - Proper anchor support for all kinds of docsets\n  - Add the type to the description\n- [files]\n  - Add option \"index file path\"\n  - Also fix persistence for option \"case senstive file browsers\"\n- [applications]\n  - Sort terminals list by caseinsensitive name\n\nv0.26.0 (2024-08-16)\n\n[albert]\n\n- Give QIcon::fromTheme another try\n- API\n  - Remove const from GQH::hgq and GQH::heq\n  - Drop albert::runTerminal. Moved to applications plugin.\n  - Make private property available in subclasses\n  - Add getter for plugin dependecies\n\n[plugins]\n\n- [system:10.0]\n  - Add inhibit sleep feature\n- [docs:3.17] Be more tolerant with anchors\n  Macos and Win cant handle anchors. Use it though because it is still better than\n  skipping the item entirely.\n- [applications:12.0]\n  - Move terminal detection here\n  - Proper flatpak terminal support\n  - Add public interface to run terminals\n  - Proper platform abstraction\n  - Foundation for xdg-terminal-execute\n  - Foundation for URL scheme and mime type handlers\n\n[python]\n\n- [inhibit_sleep] Archive. Moved to system plugin.\n- [docker:3.0] Revert to trigger query handling\n  Global query handler not applicable, queries take seconds sometimes\n- [unit_converter:1.6] Port to API v2\n- [jetbrains:2.0]\n  - Add Aqua and Writerside\n- [tex_to_unicode:1.3] Port to v2.3\n  Author is okay with license change. See https://github.com/orgs/albertlauncher/discussions/1391#discussioncomment-10263863\n\nv0.25.0 (2024-08-02)\n\n[albert]\n- Simplify MatchConfig\n  Hardcode error_tolerance_divisor to 4\n  Close #1412\n\n[plugins]\n- [chromium:7.1] Minor improvements\n  - Avoid initial double indexing\n  - Fix status message in settings window\n  - Fix warnings on empty paths\n- [bluetooth:1.1] Support fuzzy matching\n- [urlhandler:5.2] Use albert::openUrl instead of QDesktopServices::openUrl\n  QDesktopServices::openUrl fails on wayland\n  Close https://github.com/albertlauncher/albert/issues/1414\n\nv0.24.3 (2024-07-09)\n\n[albert]\n- Port applications settings to new id\n  Hotfix https://github.com/albertlauncher/albert/issues/1412\n- Fix telemetry\n\n[plugins]\n- [snippets:5.4] Show a snippet preview in description.\n  Close #1387\n\nv0.24.2 (2024-07-02)\n\n[albert]\n- Add \"open terminal here\" to app directory items\n- Hotfix #1408\n\n[plugins]\n- [python:4.5] Update python stub file\n\n[python]\n- [GoldenDict:1.5] Remove breaking type hints\n\nv0.24.1 (2024-06-28)\n\n[plugins]\n- [python:4.4] Revert back to using pybind submodule (v2.12.0)\n\nv0.24.0 (2024-06-28)\n\n[albert]\n\n- Ignore soft hyphens in lookup strings\n- Add TriggersQueryHandler builtin handler\n- Drop PluginConfigQueryHandler\n- Ignore order of query words\n- Do not run fallbacks on empty queries\n- Allow unsetting hotkey on backspace\n- Move about into general tab\n- Use a button for hotkeys such that tab order is usable\n- Cache icons in the fallback handler to avoid laggy resize\n- Set 700 on albert dirs\n- Use same config location and format on all platforms.\n- Show message box on errors while loading enabled plugins\n- Make openUrl working on wayland by using xdg-open\n\n[API 0.24]\n\n- Loads of changes around the project structure\n  - AUTOMOC,UIC,RCC per target\n  - Structure sources in folders\n  - Flatten headers\n  - No paths in core source files (rather lots of include dirs)\n  - Finally proper target export such that plugin build in build tree as well as separate projects\n  - Add custom target global_lupdate\n- CMake\n  - albert_plugin(â€¦) modifications\n    - Add QT parameter\n    - Add I18N_SOURCES parameter\n    - SOURCE_FILES > SOURCES\n    - I18N_SOURCE_FILES > I18N_SOURCES\n    - INCLUDE_DIRECTORIES > INCLUDE\n    - LINK_LIBRARIES > LINK\n    - Make SOURCES optional. Specify source conventions: include/*.h, src/*.h, src/*.cpp, src/*.mm, src/*.ui and <plugin_id>.qrc\n  - Drop METADATA the metadata.json is a mandatory convention now.\n  - Drop TS_FILES. Autosource from 'i18n' dir given a naming convention.\n    <plugin_id>.ts and <plugin_id>_<ui_language>.ts\n  - Add CMake option BUILD_PLUGINS\n- General\n  - Move Q_OBJECT into ALBERT_PLUGIN macro\n  - Remove app functions from API\n  - Rename albert.h to util.h\n  - albert::networkManager -> albert::network\n  - Add convenience classes for plugin interdependencies\n  - Allow RankItems to be created using a Match\n  - Revert back to per plugin translations. Plugins shall be self contained modules and in principle be packageable in a separate package.\n  - Let QtPluginLoader automatically load translations if available.\n  - Add finished and total count to translations metadata\n  - User per target compile options\n  - Add havePasteSupport()\n  - Remove openIssueTracker from interface\n  - Separate and improve ALBERT_PLUGIN_PROPERTY macros\n    - ALBERT_PROPERTY_GETSET\n    - ALBERT_PLUGIN_PROPERTY_GETSET\n    - ALBERT_PROPERTY_CONNECT_SPINBOX\n    - Add param in property changed signal\n- PluginInstance\n  - Add {cache,config,data}Location. Checks are up to the clients.\n  - Add createOrThrow as a utility function for the above functions.\n  - Add weak refs for PluginLoader and ExtensionRegistry\n  - Drop convenience functinos like id, name, description.\n  - Drop initialize/finalize\n  - Registering extensions can fail\n  - Auto register root extensions\n- Changes to icon provider API\n  - Add QIcon support\n  - Make it free functions\n  - Remove caching\n  - Returned size can be smaller than requestedSize, but is never larger.\n- Query, engine and handlers\n  - Handle handler configuration in core (trigger, fuzzy, enabled).\n    Remove the getters, have only setters to update plugins.\n    - Add TriggerQueryHandler::setUserTrigger\n    - Remove TriggerQueryHandler::trigger()\n    - Remove TriggerQueryHandler::fuzzyMatching()\n  - Do not allow users to disable triggered query handlers.\n    This may end up in states where plugins are loaded but actually not used.\n    Also some handlers may rely on them to be there, like e.g. the files global\n    handler redirects tabs to the triggered handlers.\n  - Remove const from handleTriggerQuery\n  - Support ignore diacritics\n  - Support ignore word order\n  - Make Query contextually convertible to QString\n  - Unify query interface, no more global- and triggerquery\n  - Add parameterizable Matcher/Match class\n  - Add dedicated empty query handling\n    Empty patterns should match everything. For global queries thats too\n    much. For triggered queries it is desired though. Since a lot of global\n    query handlers relay the handleTriggerQuery to handleGlobalQuery it is\n    not possible to have both. This introduces a dedicated function for\n    GlobalQueryHandlers that will be called on empty queries:\n\n[plugins]\n\n- All plugins: Minor fixes and port to API 0.24\n- [widgetsboxmodel:7.4] Use QWindow::startSystemMove instead QWidget:move for Wayland Support\n- [websearch:9.0] 0.24\n  - Add fallback option\n  - Add GPT to default engines\n  - Add fallback section.\n  - Allow inline editing of fallback and trigger withough using the search engine widget.\n  - Use matcher for more tolerant queries\n  - Complete to trigger instead of name\n- [timezones:1.0]\n- [timer:1.0]\n- [telegram] Archive failed telegram quick access approach\n- [path] Rename from 'terminal'\n- [system:9.1] System commands update for KDE Plasma 6\n- [ssh:8.3] Allow params only in triggered handler\n- [sparkle] Archive for now\n- [snippets:5.2] Check if paste is supported at all\n- [qmlboxmodel] Port\n- [python:4.3]\n  - Namespace plugin id\n  - Compensate the API changes gracefully to defer a breaking API change\n  - Ship stub file with the plugin\n  - Add buttons for stubfile and user plugin dir\n  - API 2.3\n    - Deprecate obscure module attached md_id. Use PluginInstance.id.\n    - Expose function albert.havePasteSupport\n    - Expose class albert.Matcher\n    - Expose class albert.Match\n    - Expose method albert.TQH.handleTriggerQuery\n    - Expose method albert.GQH.handleGlobalQuery\n    - albert.PluginInstance:\n        - Add read only property id\n        - Add read only property name\n        - Add read only property description\n        - Add instance method registerExtension(â€¦)\n        - Add instance method deregisterExtension(â€¦)\n        - Deprecate initialize(â€¦). Use __init__(â€¦).\n        - Deprecate finalize(â€¦). Use __del__(â€¦).\n        - Deprecate __init__ extensions parameter. Use (de)registerExtension(â€¦).\n        - Auto(de)register plugin extension. (if isinstance(Plugin, Extension))\n    - albert.Notification:\n        - Add property title\n        - Add property text\n        - Add instance method send()\n        - Add instance method dismiss()\n    - Minor breaking change that is probably not even in use:\n        Notification does not display unless send(â€¦) has been called\n- [mpris:3.1] Rewrite using xml interface files\n- [exprtk] Archive exprtk prototype\n- [docs:6.4] Fix XML based docs.\n- [docs:6.3] Do not upscale icons\n- [docs:6.2] Fix leak on plugin unloading\n- [dictionary:3.1] Drop resources, use Dictionary.app icon\n- [datetime:5.1] Separate timetzonehandler\n- [datetime:5.0] Add \"show_date_on_empty_query\" option\n- [clipboard:3.1]\n  - Check if paste is supported at all\n  - Use albert::WeakDependency\n- [chromium:7.0]\n  - Add completion\n  - Display bookmark folder\n- [bluetooth:1.0] New extension on macos\n  - Enable disable Bluetooth\n  - Connect to paired devices\n- [applications:11.0] Add non localized option on macos\n- [applications:10.0]\n  - Merge applications_macos and applications_xdg\n  - Add completion\n\n[python]\n- All plugins: Minor fixes and port to API 2.3\n- [zeal:2.0] Add fallback extension\n- [wikipedia:2.0] Add fuzzy search support\n- [tr:1.6] Check paste support\n- [timer] Move to archive\n- [syncthing:1.0] Initial prototype\n- [goldendict:1.4] Support flatpaks and goldendict-ng\n- [emoji:2.2] Check paste support\n- Remove albert.pyi\n  Ship, install and update with plugin.\n  Add python stubfile to ignore files\n\nv0.23.0 (2024-03-03)\n\n[albert]\n\n* i18n\n* Make fallback order settable in new query tab.\n* Load native plugins threaded.\n* Add --no-load cli param\n* Use hashmap and avoid exceptions. Twice as fast ðŸš€\n* Add german translation\n* Make \"Show settings\" action the default for plugin items\n* [API:v0.23]\n  * Change frontend interface design\n  * drop extensions() from PluginInstance interface.\n    Extensions can now bei registered dynamically at any time.\n  * Reduce the plugin system interfaces to the bare minimum\n  * Allow hard plugin dependencies.\n  * Private destructors for interfaces\n  * Refactoring\n    * ExtensionRegistry add > registerExtension\n    * ExtensionRegistry remove > deregisterExtension\n  * Make UI strings in the metadata required.\n  * Allow plugins to have public interfaces\n  * Revert to authors. Drop maintainers. (plugin metadata)\n  * Remove polymorphism in PluginInstance id/name/description\n  * Remove dynamic allocation of cache/config/dataDir()\n  * Drop template parameter QOBJECT\n  * Frontend is not an extension\n  * Support localized metadata\n  * CMake interface\n    * Drop long_description from metadata\n    * Add TS_FILES parameter to albert_plugin macro.\n    * Revert back to json metadata file again\n    * Complete metadata using cmake project details\n    * Move Qt::Widgets into the public link interface\n\n[plugins]\n\n* Support i18n\n* [python:4.2] Open external links in config labels by default\n* [widgetsboxmodel:7.1] Fix animation on linux\n* [qmlboxmodel] archive wip\n* [widgetsboxmodel:7.0]\n  * Dark theme support\n  * Themes update\n  * Reproducible style (fusion)\n  * Fix history search\n  * Move persistent window position to state\n  * Clear icon cache on hide\n  * Archive unlicensed themes\n  * Remove \"Show fallbacks on empty result\" option\n  * Drop fonts from themes\n* [websearch:8.0]\n  * Capital You_T_ube\n  * Add Google translate default engine\n* [ssh:8.0]\n  * Reduce complexity of this overengineered plugin\n    * Remove quick connect\n    * Remove known hosts\n    * Remove file watchers (configs change not that often)\n    * remove indexer mutexes\n    * remove fuzzy index\n* [snippets:5.0]\n  * Public extension interface \"Add snippet\"\n * [qmlboxmodel:3.0]\n  * Archived\n* [python:4.0]\n  * Drop source watches. a plugin provider cant just reload without notifying the plugin registry\n  * API 2.2\n    - PluginInstance.configWidget supports 'label'\n    - __doc__ is not used anymore, since 0.23 drops long_description metadata\n    - md_maintainers not used anymore\n    - md_authors new optional field\n* [dictionary:3.0] Former platform_services\n  * Rename plugin platform services to dict\n* [clipboard:3.0]\n  * use snippets interface\n* [applications_macos:5.0]\n  * Use KVO to track NSQuery results\n\n[python]\n\n* Reinstate proper licensing\n* [virtualbox:1.6] Add info on vboxapi requirement\n* [docker:2.0] Show error on conn failure.\n* [pomodoro:1.5] Fix notifications\n* [pyi] v2.2\n* [inhibit_sleep:1.0] Similar to caffeine, theine, amphetamine etcâ€¦\n\nv0.22.17 (2023-11-26)\n\n[albert]\n* Prepend albert to logging categories, default filter debug\n* Remove logging rules cli arguments\n  Dont work on some systems and there is QT_LOGGING_RULES for it\n* Differentiate terminator terminals suffering bug 660\n\n[plugins]\n* [mpris:2.0] Ported\n\nv0.22.16 (2023-11-18)\n\n[albert]\n* Remove the visual warning on crashes.\n  This ICE error bug is going to stay around for a while.\n* Remove autostart option\n  This is a feature unnecessary complicated to maintain and perfectly fine\n  to delegate entirely to the desktop environment.\n* Add \"report\" RPC\n  To get the ability to fetch report from the running instance.\n\n[plugins]\n* [python:2.1.0]\n  Make plugin major.minor the interface version\n  Improve UX while installing dependencies\n* [calc:1.4] Threadsafe and aborting calculations\n  libcalculate does not mention any thread safety. lock it.\n  Use async calculate(â€¦) function and poll query validity to abort\n  unnecessary calculations. This does not only save resources, but is\n  also required such that the locks above dont introduce stuttering.\n* [system:1.8] Dont prompt on gnome session logout\n* [app_xdg:1.8] Use Ubuntu gettext domains\n\n[python]\n* [bitwarden] 2.0\n  Add copy-username action\n\nv0.22.15 (2023-11-08)\n\n[albert]\n* Fix missing smooth transform in icon provider\n* Add style information to report\n* Use X-GNOME-Autostart-Delay\n* Add proper unix signal handling using self pipe trick\n* Revert printing to logfile\n* Give enough time to connect to other instance.\n\n[plugins]\n* [system:1.8] Dont prompt on gnome session logout\n* [wbm:1.6] Remove unnecessary cast that may introduce segfaults\n* [app_xdg:1.8] Use Ubuntu gettext domains\n\n[python]\n* [stub] Fix links\n\nv0.22.14 (2023-10-06)\n\n[albert]\n* Let RPCServer take care of crash reports. This is a hotfix to remove the recurring crash report on start, if the app is run more than once, e.g. because the session manager restores a session including albert, but albert is also configured to be autostarted.\n\nv0.22.13 (2023-10-05)\n\n[albert]\n* Hotfix create missing application paths\n* Fix pixmaps path\n\n[plugins]\n* [qml] Fix version branching logic\n\nv0.22.12 (2023-10-03)\n\n[albert]\n* CI/CD: Fix path in sed expression\n\n[plugins]\n* [sparkle] Add macos updater plugin prototype\n\n[python]\n* [jetbrains] Add RustRover editor\n\nv0.22.11 (2023-10-03)\n\n[albert]\n* Add missing \"-executable=\" for macdeployqt plugin parameters\n\n[plugins]\n* [py] Hotfix: Workaround https://bugreports.qt.io/browse/QTBUG-117153\n\nv0.22.10 (2023-10-03)\n\n[albert]\n* CI/CD: Appcast prototype\n* Store log in cache dir\n* Add loadtype NOUNLOAD\n  There are some plugins that dont like to be unloaded (Sparkle, Python).\n  Add a mechanism to let plugins prohibit users to unload it at runtime.\n\n[plugins]\n* [py] Fix 6.5.2 only QLogCat quirks. Fixes arch builds\n\nv0.22.9 (2023-09-28)\n\n[albert]\n* CD: upload on tag\n* Revert. NO_SONAME makes troubles on other platforms.\n\nv0.22.8 (2023-09-28)\n\n[albert]\n* Hotfix fixing RPM based builds\n\nv0.22.7 (2023-09-27)\n\n[albert]\n* Restore 6.2 backward compatibility\n\nv0.22.6 (2023-09-26)\n\n[albert]\n* Proper tab navigation in handler widget\n* NativePluginProvider: Use absolute file paths.\n\n[plugins]\n* [files] Fix \"rel. dirpaths of depth 1 have dot prepended\" issue\n* [docs] Fix recent changes to download urls\n* [qalc] Fix tab order\n\nv0.22.5 (2023-09-22)\n\n[albert]\n* CMake: On macOS include the macports lookup path\n* Fix segfaults on busywait\n* Hardcode /usr/local/bin to PATH\n* Move last report ts from settings to state\n* Add iconlookup in /usr/local/share although not standardized\n\n[plugins]\n* [qml] Add hack around lacking DropShadow.samples in Qt <6.4\n* [apps_macos] v1.3\n    * Find all apps in home dir\n    * Keep apps up to date unsing online search\n    * Localized app names\n    * Add prefpanes\n* [docs] Disable build on macOS. Licensing does not allow usage on macOS.\n* [files] Add emtpy trash action on macos\n* [muparser] Archive muparser. One calculator is enough.\n* [qml] Fix shadow clipping\n* [qml] Fix clear on hide breaking history search\n\n[python]\n* [goldendict] Fix import issue\n* [pass] Add OTP feature\n\nv0.22.4 (2023-08-30)\n\n[plugins]\n* [docs] Add cache for docset list\n* [docs] Use find_program to find brew for ootb cmake config\n* [muparser] Use find_program to find brew for ootb cmake config\n* [py] Silently skip dirs and files that are no python modules\n* [py] iid v2.1: Add config facilities\n* [qalcualte] Use find_program to find brew for ootb cmake config\n* [qml] Add Cmd/Ctrl+Enter/Return to show actions\n* [snippets] Port old snippets\n\n[python]\n* [googletrans] Archive. py-googletrans is broken.\n* [translators] Add \"translators\" plugin\n* [emoji] Add \"Use derived emojis\" option\n* [dice_roll] iid 2.0\n\nv0.22.3 (2023-08-17)\n\n[albert]\n* Dont show version notification before app is fully initialized\n\nv0.22.2 (2023-08-14)\n\n[albert]\n* Fix logging filters\n* Proper database move\n\n[plugins]\n* [ws] Fix websearch breaking users search engines config\n* [ws] Fix websearch not applying icon when selected from file dialog\n\nv0.22.1 (2023-08-14)\n\n[albert]\n* Freedesktop notification implementation\n* Adopt generic Notification interface on macOS\n* Fix Linux paste action\n\n[plugins]\n* [apps_xdg] Default trigger \"apps\"\n* [yp] Update notification function\n* [py] Fix function warn > warning\n* [clipboard] Add paste action\n\n[python]\n* [pint,yt] Archived. Require maintenance\n* [timer] Adopt notification api changes\n\nv0.22.0 (2023-08-12)\n\n### Albert\n\n* Add commandline option for logging filter rules\n* Add contour terminal\n* Add settingswindow shortcut action for plugin settings\n* Add feature copy and paste\n* Add \"Run empty query\" option\n* Add handler configurations tab\n* Sort fallbacks\n* LexSort items having equal score\n* Doxygen documentation\n\nAPI 0.22:\n\n* TriggerQueryHandler\n    * Add bool supportsFuzzyMatching()\n    * Add bool fuzzyMatchingEnabled()\n    * Add void setFuzzyMatchingEnabled(bool)\n    * Add QString trigger() (the user configured one)\n* GlobalQueryHandler\n    * Add applyUsageScore(â€¦).\n    * Inherit TQH, i.e. every handler is a TQH\n* IndexQueryHandler\n    * Reimplement TQH fuzzy methods\n    * Default synopsis <filter>\n* Plugin system\n    * Revert multithreaded plugin laoding (Qt makes problems everywhere)\n    * Statically inject metadata, use it for PluginInstances\n    * Move native plugin interface into plugin:: namespace\n    * Cache/Conf/Data dirs per plugin only (were per Extension)\n    * Add PluginInstance::extensions()\n    * Add Template based ExtensionPlugin(Instance)\n    * Make native plugin a template class to allow subclassing any QObject\n* Frontend:\n    * Add Frontend::winId, Move the window quirks to the core\n    * Use appwide input history file\n    * Add generic qml/widgets icon provider to interface\n    * Add generic icon provider, creating icons on the fly\n* Fuctions and macros:\n    * Put all free functions in albert.h\n    * Add openUrl QUrl overload\n    * Add convenience macros for user property definition\n    * Require albert logging category to pass the name\n    * Add state file\n    * Add global settings factory\n* Rename History to InputHistory\n* Drop QueryHandler convenience class\n* Drop global albert.h include\n\n### Plugins\n\n* [clipboard]\n    * Add paste action\n* [wbm]\n    * Remove option \"display icon\"\n    * Appwide input history\n* [websearch]\n    * Adopt to sorted fallbacks, drop dragndrop in listview\n    * Add drag'n'drop image feature\n* [snippets]\n    * Add paste action\n* [qml:2.0] Revamped QML frontend\n* [python]\n    * Mimic internal api as close as possible\n    * Attach logging functions to plugin modules\n    * Expose albert::setClipboardTextAndPaste\n    * Expose albert::Notification\n* [files]\n    * Show filePath instead path in subtext\n    * Add option for case sentivity of fs browsers.\n    * Add user property for inline config\n\n### Python plugins\n\n* Interface v2.0 stub\n* [emoji] New generic and platform agnostic emoji implementation\n* [duckduckgo] Add extension\n* [color] Add extension\n\nAnd loads of other changesâ€¦\n\nv0.21.1 (2023-06-27)\n\n[albert]\n* Add cmd/ctrl + number tab navigation in settings\n* Automatically add hpp and qml files to plugin projects\n\n[plugins]\n* [docs:1.2] Polish. Fix #106\n* Fix misleading comment in config widget\n\n[python]\n* [stub] Add missing imports to stub file\n* [tex_to_unicode] Fix crash due to wrong type annotation\n* [emoji] Fix #179. Call cacheLocation as method of self.\n\nv0.21.0 (2023-06-23)\n\n[albert]\n* v0.21.0\n  * Remove Item::hasActions\n  * Add global config, cache and data location functions\n  * Change RankItem::score type to float (0,1]\n  * Make queries pointers in handler functions\n  * Add function to get global network manager\n  * Use explicit named query handling methods (no parameter overloading) `handleTriggerQuery` and `handleGlobalQuery`. This reduces confusion, avoids annoying extra boilerplate to disambiguate methods to avoid hide-virtual warnings and serves as a lowest common denominator on a language/naming level since these features may not be supported by script languages (e.g. Python).\n* Settings window\n  * Add a new search widget in settingswindow\n  * Make handlers of all types optionable\n  * Make window and search widgets tabs in the settings window\n* Change usagedatabase location to datadir\n* Change IPC socket path to $CACHEDIR/albert/ipc_socket. Was $CACHEDIR/albert_socket.\n* Fix triggered global query MRU sort\n\n[plugins]\n* New extensions:\n  * [docs] Reduced set of Zeal docsets at hands\n  * [clipboard] Clipboard history\n* [contacts:1.2]\n  * Formatting: Remove Apple specific braces\n* [snip:1.3]\n  * Add \"Add\" and \"Remove\" button in config widget\n  * Add \"Add snippet\" item on \"add\" query\n  * Add \"Remove\" action to snippet items\n* [python:1.8] Adopt API v0.21. New interface version iid 1.0\n  * Add Extension.cache-, config- and dataLocation\n  * Expose FallbackHandler\n  * Proper multi extension registration\n  * Move interface spec into python stub file (yay!)\n  * Expose TriggerQueryHandler\n  * Expose GlobalQueryHandler\n  * Expose QueryHandler\n  * Expose IndexQueryHandler\n  * Expose Item class entirely such that plugins can subclass it\n  * Use pointer for queries\n  * Remove global cache/config/data dir functions\n* [all] Adopt API v0.21.0\n\n[python]\n* Add stub file for type hinting and documentation in IDEs\n* New extensions:\n  * [coingecko] Crypto currencies\n  * [mathematica] iid:1.0 port\n* [all] Adopt iid v1.0\n\nv0.20.14 (2023-05-01)\n\n[albert]\n* Sort triggerwidget by name rather than id\n* Avoid segfaults when setting hotkey failed.\n\n[plugins]\n* [ws] fix oversized text in config\n* [sys:1.6] Dynamic default commands.\n* [app_xdg] Remove content margins of settings widget\n* [system] Add lxqt defaults\n\n[python]\n* [python_eval:1.3] Fix type of result in item subtext\n* [locate:1.7] Fix lambda capture\n* remove api_test\n* [aur:1.6] Fix install action\n* [jetbrains_projects] handle missing projectOpenTimestamp\n\nv0.20.13 (2023-03-30)\n\n[plugins]\n* [ws] Show space markers in trigger section\n* [vbox:v1.3] Port iid:0.5\n* [dice_roll] iid:0.5 v1.0\n* [emoji] iid:0.5 v1.0\n\nv0.20.12 (2023-03-29)\n\n[plugins]\n* [system:1.4] Make items checkable and titles customizeable\n\nv0.20.11 (2023-03-27)\n\n[albert]\n* Respect whitespaces in rpcs\n\n[plugins]\n* [wbm] Add option \"Center on active screen\"\n* [app_xdg] Add action \"reveal desktop entry\"\n* [files] Workaround Qt appending slash to root paths\n\n[python]\n* [bitwarden] 1.1 (iid: 0.5)\n* [vpn] Add wireguard to connection types\n* [pacman] Fix out of scope lambda vars\n\nv0.20.10 (2023-03-20)\n\n* [vpn] Add wireguard to connection types\n* Several bugfixes\n\nv0.20.9 (2023-03-13)\n\n[albert]\n* Update supported terminals (add st and blackbox, remove tilda)\n\n[plugins]\n* [wbm] Hide task bar entry\n* [ws] Add google scholar to defaults\n\nv0.20.8 (2023-02-11)\n\n[albert]\n* Tilda support\n* Print font in report\n\n[plugins]\n* [contacts_mac] v1.0\n* [wbm] Dont hide window when control modifier is hold\n* [xdgapps] Do not inherit QT_QPA_PLATFORM to launched apps\n\nv0.20.7 (2023-02-10)\n\n[albert]\n* Clear icon cache if unused for a minute.\n\n[plugins]\n* [wbm] Postpone query deletion until hide event to prevent busy wait for destruction\n\nv0.20.6 (2023-02-08)\n\n[albert]\n* Close settingswindow on ctrl+w\n\n[plugins]\n* [wbm] Avoid segfaults on failing screenAt()\n\n[python]\n* [jetbrains:1.1] Polish. Fix Macos.\n\nv0.20.5 (2023-02-01)\n\n[albert]\n* Drop usage weight. Add option to prioritize perfect matches. See #695\n\nv0.20.4 (2023-01-31)\n\n[albert]\n* Reintroduce telemetry\n* Fix disfunctional link in settings\n[python]\n* [tex_to_unicode] py interface 0.5\n* [vpn] 1.1 (iid: 0.5)\n* [yt] v1.3 create tmp dirs lazily\n* [jetbrains] 1.0 (iid:0.5)\n\nv0.20.3 (2023-01-27)\n\n[albert]\n* Remove plugin registry from global search\n* Add -Wno-inline\n* Fix line breaks in errors displayed in settings\n* Tray icon isMask\n\n[plugins]\n* [platform_mac] 1.0\n* [py] Add button to open the dependency dir\n\n[python]\n* [pint] 1.0 (currency converter)\n\nv0.20.2 (2023-01-25)\n\n[plugins]\n* [py] Quote cd path\n\n[python]\n* [pacman] v1.6 iid:0.5\n* [timer] v1.4 iid:0.5\n\nv0.20.1 (2023-01-25)\n\n[albert]\n* Fix pedantic warnings\n* BW tray\n* Use env vars to set default locale\n* Strech config widget\n* Fix segfaults on empty icon name lookup\n\n[plugins]\n* Lots of UI polishing\n* [qalc] Fix precision probles\n* [websearch] Add google maps to defaults\n* [datetime] Use default locale\n\nv0.20.0 (2023-01-24)\n\n[albert]\n* Config widget per plugin (v0.20)\n* Make Triggerwidget edit trigger on double click anywhere\n\n[plugins]\n* [chromium:1.4] Add path reset button\n\n[python]\n* [locate] 1.6\n* [docker] 1.3\n\nLots of polishing around the new UI\n\nv0.19.4 (2023-01-22)\n\n[plugins]\n* [qalc] v1.0 Prototype\n\nv0.19.3 (2023-01-22)\n\n[albert]\n* [md] Use content if long description is a file path\n* Use both, extension and item id, as icon cache key\n* Add standard pixmaps support to iconprovider\n* Workaround terminator bug #702\n\n[plugins]\n* [wbm] Add Nord theme\n* [calc] Respect LC_*\n* [chromium] Fix filewatcher does not watch bookmarks\n* [wbm] Do not exit on missing themes\n* [wbm] Use generic placeholder color for input hint\n* [app:xdg] Add exec key option. Also exclude 'env' in exec keys.\n* [wbm] Fix clipped label\n* [WBM] fix open theme file action\n* [files] Provide trash item\n* [wbm] Fix list view height margins\n\n[python]\n* [trash] Drop. Provided by files plugin now.\n\nv0.19.2 (2023-01-18)\n\n[plugins]\n* [datetime] v1.0\n* [urlhandler] Fix tld validation\n\nv0.19.1 (2023-01-18)\n\n[albert]\n* Fix recurring new version info\n* Allow copyconstruction of rank and index items\n\n[plugins]\n* [calc] 1.5\n  * Inline evaluation\n  * Default trigger '='\n  * Synopsis\n* [wbm] Add item activation using Ctrl+O\n\nv0.19.0 (2023-01-18)\n\n[albert]\n* Add reload actinon for plugins\n* Support Console term\n* Fix backgroundexecutor not using move semantics\n* 0.19 interface\n  * Revert to dedicated FallbackHandler\n  * Clean interface using opaque pointers\n  * GlobalQueryHandler::rankItems -> handlyQuery\n  * IndexQueryHandlers have to set items directly\n* Refactoring\n* Show plugin header files in IDEs\n* Use handcrafted icon lookup again\n\n[plugins]\n* [wbs] 1.3 add query handler providing themes\n* [apps_xdg] 1.5 Remove desktop indexing\n* [ssh] 1.5\n  * Fix ssh connect containing user or port\n  * Allow specifying a command to send to the host\n  * Add action (keep/close term)\n\n[python]\n* [yt] v1.2 (iid:0.5)\n* [kill] v1.1 (iid:0.5)\n\nv0.18.13 (2023-01-13)\n\nFix invalid submodule link breaking OBS builds\n\n[plugins]\n* [chromium] Fix config loading\n\n[python]\n* [goldendict] 1.1 (0.18)\n\nv0.18.12 (2023-01-13)\n\n[albert]\n* Always print report in debug mode\n* Add platform, lang and locale to report\n* Support Terminology\n\n[plugins]\n* [mac_apps] Dons show system service apps\n! Add default md_id if not available\n\nv0.18.11 (2023-01-11)\n\n[albert]\n* Add missing long description in plugin metadata.\n\n[plugins]\n* Handcraft tld validation. Make handler global.\n* Add metadata LONG_DESCRIPTON to docs\n* [py] Create site-packages dir if necessary\n* Fix open snippet\n\nv0.18.10 (2023-01-09)\n\nFixes, minor changes and requests\n\nv0.18.9 (2023-01-07)\n\n[plugins]\n* [py] Ask user to install missing python dependencies in terminal\n\n[python]\n* googletrans 1.0\n* pass 1.2\n\nv0.18.8 (2023-01-07)\n\n[albert]\n* Give sensible defaults for usage history\n* Fix memory weight not being loaded\n* Merge frontend tab into general\n* Support foot terminal\n* Check for other instances _before_ laoding plugins\n\n[plugins]\n* Avoid starting indexing on file index serialization\n\n[python]\n* googletrans 1.0\n* pass 1.2\n\nv0.18.7 (2023-01-05)\n\n[albert]\n* Drop albertctl. Back to `albert <command>`\n\nv0.18.6 (2023-01-05)\n\n[albert]\n* sendTrayNotification(â€¦) add time parameter\n* Support wezterm.\n\n[plugins]\n* Python 1.5\n * sendTrayNotification(â€¦) add ms parameter\n* Hash 1.5\n * Global query handler\n * Add copy 8 char action\n\n[python]\n* Pomodoro 1.1\n* CopyQ 1.2\n\nv0.18.5 (2023-01-04)\n\n[albert]\n* Support Kitty terminal\n* Support Alacritty terminal\n[plugins]\n* [wbm] Show synopsis in tooltip\n\nv0.18.4 (2023-01-03)\n\n[albert]\n* fix single instance mechanism\n\n[python]\n* Archive docker, curious segfaults\n* Port 0.5 aur\n* Port 0.5 awiki\n\nv0.18.3 (2023-01-02)\n\n[plugins]\n* [wbm] Fix theme dir paths\n\nv0.18.2 (2023-01-02)\n\n[albert]\n* Better diagnostics on frontend loading\n\nv0.18.1 (2023-01-01)\n\n[albert]\n* Fix armhf builds\n\nv0.18.0 (2022-12-31)\n\nNote that there have been some breaking changes. The new plugin id format changed settings keys and config/cache/data paths. If you want to keep your old plugin settings you have to adjust the section names in the config file and adjust the paths in your config/cache/data dirs. (e.g. from `org.albert.files` to `files`). I'd recommend to start from scratch though, since too much changed.\n\n\n[albert]\n\n* Shorter plugin ids.\n* Customizeable triggers (if the extension permits)\n* Central plugin management\n* More useful plugin metadata\n* User customizable scoring parameters\n  * Add user option memory decay\n  * Add user option memory weight\n* Finally scoring for _all_ items\n* Inputline history goes to a file now\n* Settingswidget overhaul\n* Hello Qt6, C++20 ðŸ‘‹\n* Entirely new interface (see header files)\n* Value typed Action class based on std::function\n* Drop all former *Action classes\n * Free functions replace and extend action subclass functionality\n* Updates to Item interface\n* New and extended query handling interface classes\n* Extended frontend interface\n* New abstract plugin provider interface\n  * Common plugin metadata\n  * Maintainership is a thing now!\n* Add StandardItem factory for better type deduction and readability\n* Add bgexecutor class\n* Add timeprinter\n* Leaner logging\n* Query design change (realtime, global, indexed)\n* Add extension watcher template class\n* Move XDG into the lib.\n\n\n[plugins]\n\npython 1.4 (0.18)\n* Use system pybind\n* 0.5 interface\n* auto pip dependencies\n\nfiles 1.2 (0.18)\n* Drop bashlike completions. We have items.\n* Settings per root path\n* Add name filter dialog\n* Add option watch filesystem\n* Add option max depth\n\nsnippets 1.1 (0.18)\n* files instead database\n\nwidgetsboxmodel 1.2 (0.18)\n* Fading busy indicating settingsbutton\n* Drop rich text\n* Proper async query without flicker using statemachines\n* Add input hint\n* Add option show fallbacks on empty query\n* Add option history search\n\nAlso new or ported to 0.18\n* calculator 1.3 (0.18)\n* system 1.2 (0.18)\n* applications_xdg 1.3 (0.18)\n* applications_macos 1.0 (0.18)\n* ssh 1.3 (0.18)\n* terminal 1.2 (0.18)\n* chromium 1.2 (0.18)\n* websearch 1.2 (0.18)\n* urlhander 1.0 (0.18)\n* hash 1.4 (0.18)\n* template 0.0 (0.18)\n* debug 1.1 (0.18)\n\nArchived\n\n* firefox\n* qml box model\n* mpris\n* vbox\n\nv0.17.6 (2022-10-08)\n\n* Let users choose the chromium bookmarks path\n* Fix https://github.com/albertlauncher/albert/issues/978\n\nv0.17.5 (2022-10-05)\n\n* Fix #1064.\n\nv0.17.4 (2022-10-04)\n\n* Fix https://github.com/albertlauncher/albert/issues/1117\n\nv0.17.3 (2022-07-05)\n\n[albert]\n* Sloppy hotfix #1088. 0.18 will change DB entirely anyway.\n\nv0.17.2 (2020-12-24)\n\n[albert]\n* Drop telemetry\n\n[plugins]\n* [wbm] Fix completion\n\nv0.17.1 (2020-12-21)\n\n[albert]\n* Fix OBS builds\n* Several fixes\n* Archive virtualbox python extension\n\nCopyright (c) 2018 Copyright Holder All Rights Reserved.v0.17.0 (2020-12-17)\n\n[albert]\n* Again break init order of Item for the sake of less boilerplate. Presumed this frequency indexStrings > actions > completion > urgency.\n* Let shells handle splitting/quoting\n* Add core as QueryHandler. Add restart, quit, settings action. Also to tray and cli.\n* Drop shutil:: and let shells handle lexing\n\n[plugins]\n* FINALLY ARCHIVE EXTERNAL EXTENSIONS.\n* New extension state : MissingDependencies\n* Disable settings items of exts in this new state\n* Use pybind v2.6.1\n* [term] v1.1 Let shells handle lexing\n* [calc] Add muparserInt option for hex calculations\n* Use QLoggingCategory in all extensions\n* Implicit dependency check for executables and Python modules\n* [Pyv1.3] Adopt core changes. PyAPIv0.4. Changes to the API:\n  * embedded module is called 'albert' now\n  * Reflect core api changes:\n    * Positional arguments of the standard item changes\n    * New semantics of the term action constructors\n      * String commandline will be executed in a shell\n      * StringList commandline will be executed without shell\n  * Add core version of iconLookup(StringList)\n  * New metadata labels:\n    * __version__: new versioning scheme iid_maj.iid_min.ext_version\n    * __title__: former __prettyname__\n    * __authors__: string or list\n    * __exec_deps__: string or list\n    * __py_deps__: string or list\n    * __triggers__: string or list\n  * Allow multiple triggers\n  * Allow multiple authors\n\n[python]\n* Adpot APIv0.4 changes\n* [locate] ' for basename '' for full path lookups\n* [timer] Make notification stay.\n* [baseconv] Python-style base prefixes to detect source base\n* [texdoc] Add texdoc plugin\n* [aur] add yay helper\n\nCheck the GitHub repositories for details.\nhttps://github.com/albertlauncher/albert/commits/v0.17.0\n\nv0.16.4 (2020-12-10)\n\nHotfix for #959\n\n[albert]\n* Fix tab order. Closes #866\n* Update stale.yml\n\n[plugins]\n* [chromium] Chromium v1.1\n\n[python]\n* [docker] New extension prototype\n* [timer] Use dbus instead of notify-send\n* [units] v1.2 including to time conversion\n\nv0.16.3 (2020-12-03)\n\n* Hotfix for #955\n* Archive defunct CoinMarketCap and Bitfinex extensions\n\nv0.16.2 (2020-11-26)\n\n[albert]\n* Allow multiple instances of albert on different X sessions\n* Fix super key not registering\n* Add terms: Elementary, Tilix, QTerminal, Termite\n* Fix build on FreeBSD\n* Dont show fallbacks on triggered queries\n\n[plugins]\n* [Applications] Index desktop files on desktop\n* [firefox] Rework v2\n* [ssh] Respect the Include keyword\n* [ssh] Allow hyphens to be part of hostnames\n* [chromium] Add brave-browser to list of chromium based browsers.\n\n[python]\n* Add an offline emoji picker\n* Add bitwarden extension\n* Add xkcd plugin as submodule\n* Add new extension: node.js evaluator\n* Add new extension: php evaluator\n\nv0.16.1 (2018-12-31)\n\n* [albert] Fix default plugin lookup path\n* [albert] Fix flicker when changing frontends\n* [albert] Fix \"Terminal option resets after a restart\"\n* [albert] Link libglobalshortcut statically\n* [albert] Add a build flag for QtCharts\n* [albert] Drop debug options if favor of QLoggingCategory env vars\n* [plugins:ssh] Fix input regex. Sort by length then lexically.\n* [plugins:ssh] Use backward compatible ssh url syntax\n* [plugins:qml] Consistent form layout\n* [modules:aur] Sort items by length first\n\nv0.16.0 (2018-12-28)\n\n* Add jekyll website as submodule\n* New project structure (minimal shared lib)\n* Let travis build against Ubuntu 18.04 and 16.04\n* Backward compatibility for Ubuntu 16.04\n* Let fuzzy require an additional character. Tolerance: floor((wordlen - 1)/3))\n* Print logging category to stdout QT_LOGGING_RULES=\"*debug=false;driver.usb.debug=true\"\n* [Term] Change terminal action order: Let \"Run w/o term\" be the last one\n* [VBox] Set default build switch for VirtualBox to OFF\n* [Files] Add fancy icons to mime dialog\n* [Py] Use ast to read metadata without loading the modules\n* [Py] Additional constraint: Metadata have to be string literals (for ast)\n* [Py] Additional constraint: Name modules according PEP8\n* [Py/WinSwitch] Add close win action\n* [Py/VBox] Add VirtualBox extension\n\nv0.15.0 (2018-12-16)\n\n* Usage graph in the settings (QtCharts (>=5.6))\n* [QML] Frontend plugin requires ()5.9\n* [QML] History search of the input now allows substring matching (Type and navigate)\n* [QML] Store user input of every session\n* New Python extension: Fortune\n* New Python extension: Window switcher\n\nv0.14.22 (2018-09-21)\n\n* Telemetry is now opt-in.\n* New Python extension: Pidgin\n* New themes\n\nv0.14.21 (2018-06-08)\n\n* Bugfix release\n\nv0.14.20 (2018-06-04)\n\n* Bugfix release\n\nv0.14.19 (2018-05-15)\n\n* New Python extension: Datetime. (Time display and conversion. Supersedes the external extension)\n* New Python extension: Bitfinex. (Quickly access Bitfinex markets)\n* The file browse mode finally mimics bash completion behavior.\n\nv0.14.18 (2018-03-23)\n\n* Hotfix release\n\nv0.14.17 (2018-03-23)\n\n* New Python extension: Arch Wiki\n* New option in applications extension: Use keywords for lookup\n* New option in applications extension: Use generic name for lookup\n* The _kvstore_ extension was renamed to _Snippets_ and got an improved config UI.\n\nv0.14.16 (2018-03-09)\n\n* New Python extension: Gnome dictionary (nikhilwanpal)\n* New Python extension: Mathematica (Asger Hautop Drewsen)\n* New Python extension: TeX to unicode (Asger Hautop Drewsen)\n* New Python extension: IP address (Benedict Dudel)\n* New Python extension: Multi Translate (David Britt)\n* New Python extension: Emoji lookup (David Britt)\n* New Python extension: Kaomoji lookup (David Britt)\n* New Python extension: Timer\n* New Python extension: Binance\n\nv0.14.15 (2018-01-26)\n\n* New Python extensions: CoinMarketCap, Trash, Pomodoro, Epoch, Packagist.\n* New Python API PythonInterface/v0.2 (`configLocation()`, `dataLocation()`,`cacheLocation()`).\n\nv0.14.14 (2017-12-06)\n\n* New Python extension: npm (Benedict Dudel)\n\nv0.14.13 (2017-11-25)\n\n* Rich text support\n* New AUR Python extension\n* New `scrot` Python extension\n\nv0.14.12 (2017-11-23)\n\n* New CopyQ Python extension (Ported from external extension)\n\nv0.14.11 (2017-11-19)\n\n* New `locate` Python extension\n\nv0.14.10 (2017-11-16)\n\n* Bugfixes\n\nv0.14.9 (2017-11-16)\n\n* Better HiDPI support\n* New commandline option for debug output (-d)\n\nv0.14.8 (2017-11-14)\n\n* New Gnote Python extension (Ported from external extension)\n* New Tomboy Python extension (Ported from external extension)\n* New Pacman Python extension\n* New Pass Python extension\n* New Kill Python extension\n\nv0.14.7 (2017-11-03)\n\n* Bugfixes\n\nv0.14.6 (2017-10-31)\n\n* New Wikipedia Python extension\n\nv0.14.5 (2017-10-30)\n\n* Bugfixes\n\nv0.14.4 (2017-10-25)\n\n* New base converter Python extension\n\nv0.14.3 (2017-10-21)\n\n* New Google Translate Python extension\n\nv0.14.2 (2017-10-20)\n\n* Bugfixes\n\nv0.14.1 (2017-10-19)\n\n* Bugfixes\n\nv0.14.0 (2017-10-18)\n\n* New Python Embedding extension\n* New Python Eval Python extension\n* New Debugging Python extension\n* New Zeal Python extension\n* New GoldenDict Python extension\n* New Unit Converter Python extension (Gnu units)\n* New Currency Converter Python extension (Google finance)\n\nv0.13.1 (2017-00-30)\n\n* Bugfixes\n\nv0.13.0 (2017-09-28)\n\n* Modular frontends\n* QML frontend\n* Tree structure in file index and \"smart\" indexing\n* New KeyValue extension\n* New Hash Generator extension\n* Shell like completion for terminal extension\n\nv0.12.0 (2017-06-09)\n\n* Git-like ignore files\n* Dedicated dialog for websearch editing.\n\nv0.11.3 (2017-05-28)\n\n*  Bugfixes\n\nv0.11.2 (2017-05-13)\n\n* <kbd>Home</kbd> and <kbd>End</kbd> now work for the results list holding <kbd>Ctrl</kbd>.\n\nv0.11.1 (2017-04-16)\n\n* Bugfixes\n\nv0.11.0 (2017-04-16)\n\n* Fine-grained control of the MIME types to be indexed.\n* Extensions can now have multiple triggers.\n* The sorting algorithm is now stable.\n* Browse mode now lists the results in lexicographical order with directories before the files.\n* The use of fallbacks has been disabled for triggered queries.\n* Further the websearch extension now contains an URL handler.\n* The qss property `selection-color` works as expected now.\n\nv0.10.4 (2017-04-14)\n\n* Bugfixes\n\nv0.10.3 (2017-04-02)\n\n* Terminal extension does no more show suggestions.\n* Any shell querying dropped.\n* Bugfixes\n\nv0.10.2 (2017-03-24)\n\n* Bugfixes\n\nv0.10.1 (2017-03-20)\n\n* Bugfixes\n\nv0.10.0 (2017-03-19)\n\n* Tab completion.\n* Hovering over the input box the mouse wheel can now be used to browse the history.\n* Spotlight themes (Bright, Dark and Space).\n* New native extension: MPRIS\n* New native extension: Secure Shell\n* The terminal extension now provides the shell aliases too.\n* File browse mode.\n* The application extension allows to ignore the `OnlyShowIn`/`NotShowIn` keys.\n* The bash script to clone the template extension is now deprecated and replaced by a Python script.\n\nv0.9.5 (2017-03-13)\n\n* Bugfixes\n\nv0.9.4 (2017-03-01)\n\n* Bugfixes\n\nv0.9.3 (2017-02-05)\n\n* Bugfixes\n\nv0.9.2 (2017-01-30)\n\n* Bugfixes\n\nv0.9.1 (2017-01-23)\n\n* Chooseable terminal command of a list of installed terminals.\n* The app icon now uses a theme icon\n* _Open terminal here_ action.\n* Mostly fixes\n\nv0.9.0 (2017-01-17)\n\n* New extension system architecture\n* New native extension: External extensions\n* New native extension: Firefox\n* Improved VirtualBox extension\n\nv0.8.11 (2016-09-29)\n\n* Plugin abstraction architecture\n* New plugin support: Native C++ QPlugins\n* New plugin support: Executables\n* Single click activation of items\n* Action modifiers\n* Multithreading\n* Core is now responsible for usage counting (obsoletes most serialization)\n* Asynchronous query \"live\" results\n* Tray icon\n* New option: Show tray icon\n* New extension: Debug\n\nv0.8.10 (2016-06-23)\n\n* New extension: Virtual Box\n* Basic IPC\n* Graceful termination on SIGHUP\n\nv0.8.9 (2016-05-12)\n\n* New option: Hide on close\n* New option: Display shadow\n* Graceful termination on SIGINT\n\nv0.8.8 (2016-04-28)\n\n* Single instance\n\nv0.8.7.3 (2016-04-27), v0.8.7.2 (2016-04-03), v0.8.7.1 (2016-03-31)\n\n* Hotfixes\n\nv0.8.7 (2016-03-31)\n\n* New extension: Terminal\n* Project structure: Use libraries\n\nv0.8.6 (2016-03-28)\n\n* Restructured settings widget\n\nv0.8.5 (2016-03-25)\n\n* Custom icon lookup\n* Make main window movable\n* Show alternative actions o Tab\n* New option: Always on top\n* New option: Hide on focus out\n* New option: Display icons\n* New option: Display scrollbar\n* Dozens of new themes: Dark, Bright, SolarizedDark, SolarizedBright in several colors.\n\nv0.8.4 (2016-03-15)\n\n* Show message box after ungraceful termination\n\nv0.8.3 (2016-03-13)\n\n* Restructured settings widget\n\nv0.8.2 (2016-03-09)\n\n* New option: Group separators for calculator\n* New themes: Arc\n* New theme: Numix\n\nv0.8.1 (2016-03-04)\n\n* Minor tasks and improvements\n\nv0.8.0 (2015-10-27)\n\n* New extension: System control\n\nv0.7.7 (2015-10-16)\n\n* Bring settings window to front if it is already open.\n\nv0.7.6 (2015-10-15)\n\n* Reorderable websearches\n* Allow exclusive queries by trigger\n\nv0.7.5 (2015-10-12)\n\n* Graceful termination on SIGINT\n\nv0.7.1 (2015-10-06), v0.7.2 (2015-10-07), v0.7.3 (2015-10-07), v0.7.4 (2015-10-08)\n\n* Tasks, Hotfixes, minor changes\n\nv0.7.0 (2015-10-05)\n\n* Implement plugin architecture\n* Port the modules\n* Ignore file (\".albertignore\")\n* Actions\n* Threaded background indexing\n* New themes\n\nv0.6.0 (2014-11-12)\n\n* Make action modifications configurable\n* Command history\n\nv0.5.0 (2014-11-06)\n\n* Add configuration widget to configure the modules\n* Make user interface themable\n* Provide proof-of-concept themes\n* Make actions modifiable\n* Show action modifications in the list\n* Use CMake build system\n\nv0.4.0 (2014-10-16)\n\n* Add settings widget\n* Implement indexing and search algorithms 'prefixmatch' and 'fuzzy'\n\nv0.3.0 (2014-09-12)\n\n* Implement serialization of indexes\n* New module: Applications\n* New module: Bookmarks\n* New module: Calculator\n* New module: Web search\n\nv0.2.0 (2014-09-08)\n\n* Abstract module architecture\n* New module: Files\n\nv0.1.0 (2014-09-01)\n\n* Basic user interface\n* Hotkeymanager\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 17.22265625,
          "content": "# SPDX-FileCopyrightText: 2024 Manuel Schneider\n\ncmake_minimum_required(VERSION 3.22)  # Ubuntu 22.04\n\n# dont touch! set by metatool\nset(PROJECT_VERSION 0.26.13)\n\nproject(albert\n    VERSION ${PROJECT_VERSION}\n    DESCRIPTION \"Keyboard launcher\"\n    HOMEPAGE_URL \"https://albertlauncher.github.io\"\n    LANGUAGES CXX\n)\nif(APPLE)\n    enable_language(OBJCXX)  # used by pch\nendif()\nset(PROJECT_DISPLAY_NAME \"Albert\")\n\n# Local cmake modules (also CMake uses this in a pretty obscure way, e.g. for the plist)\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\n# Put the binaries in dedicated toplevel directories\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n\n### Dependencies ##############################################################\n\n# QNotification\n\nadd_subdirectory(lib/QNotification EXCLUDE_FROM_ALL)\n\n# QHotkey\n\nset(QT_DEFAULT_MAJOR_VERSION 6)\nset(BUILD_SHARED_LIBS FALSE)\nset(QHOTKEY_INSTALL OFF CACHE BOOL \"\" FORCE)\nadd_subdirectory(lib/QHotkey EXCLUDE_FROM_ALL)\ntarget_compile_options(qhotkey PRIVATE -Wno-gnu-zero-variadic-macro-arguments -Wno-unused-parameter -Wno-shadow)\n\n\n### Lib  ######################################################################\n\nset(TARGET_LIB lib${PROJECT_NAME})\n\nset(LIB_PUBLIC_HEADER\n    ${PROJECT_BINARY_DIR}/include/albert/config.h  # generated\n    ${PROJECT_BINARY_DIR}/include/albert/export.h  # generated\n    include/albert/action.h\n    include/albert/backgroundexecutor.h\n    include/albert/extension.h\n    include/albert/extensionplugin.h\n    include/albert/extensionregistry.h\n    include/albert/extensionwatcher.h\n    include/albert/fallbackhandler.h\n    include/albert/frontend.h\n    include/albert/globalqueryhandler.h\n    include/albert/iconprovider.h\n    include/albert/indexitem.h\n    include/albert/indexqueryhandler.h\n    include/albert/inputhistory.h\n    include/albert/item.h\n    include/albert/logging.h\n    include/albert/matchconfig.h\n    include/albert/matcher.h\n    include/albert/notification.h\n    include/albert/plugindependency.h\n    include/albert/plugininstance.h\n    include/albert/pluginloader.h\n    include/albert/pluginmetadata.h\n    include/albert/pluginprovider.h\n    include/albert/property.h\n    include/albert/query.h\n    include/albert/rankitem.h\n    include/albert/standarditem.h\n    include/albert/telemetryprovider.h\n    include/albert/timeit.h\n    include/albert/triggerqueryhandler.h\n    include/albert/util.h\n)\n\nset(LIB_SRC\n    src/app/app.cpp\n    src/app/app.h\n    src/app/appqueryhandler.cpp\n    src/app/appqueryhandler.h\n    src/app/messagehandler.cpp\n    src/app/messagehandler.h\n    src/app/pluginqueryhandler.cpp\n    src/app/pluginqueryhandler.h\n    src/app/qtpluginloader.cpp\n    src/app/qtpluginloader.h\n    src/app/qtpluginprovider.cpp\n    src/app/qtpluginprovider.h\n    src/app/report.cpp\n    src/app/report.h\n    src/app/rpcserver.cpp\n    src/app/rpcserver.h\n    src/app/telemetry.cpp\n    src/app/telemetry.h\n    src/app/telemetryprovider.cpp\n    src/app/triggersqueryhandler.cpp\n    src/app/triggersqueryhandler.h\n\n    src/common/action.cpp\n    src/common/extension.cpp\n    src/common/item.cpp\n    src/common/rankitem.cpp\n\n    src/frontend/frontend.cpp\n    src/frontend/inputhistory.cpp\n    src/frontend/itemsmodel.cpp\n    src/frontend/itemsmodel.h\n    src/frontend/session.cpp\n    src/frontend/session.h\n\n    src/platform/platform.h\n    src/platform/signalhandler.h\n\n    src/plugin/extensionregistry.cpp\n    src/plugin/plugin.cpp\n    src/plugin/plugin.h\n    src/plugin/plugininstance.cpp\n    src/plugin/pluginloader.cpp\n    src/plugin/pluginprovider.cpp\n    src/plugin/pluginregistry.cpp\n    src/plugin/pluginregistry.h\n    src/plugin/topologicalsort.hpp\n\n    src/query/fallbackhandler.cpp\n    src/query/globalqueryhandler.cpp\n    src/query/query.cpp\n    src/query/queryengine.cpp\n    src/query/queryengine.h\n    src/query/queryexecution.cpp\n    src/query/queryexecution.h\n    src/query/triggerqueryhandler.cpp\n    src/query/usagedatabase.cpp\n    src/query/usagedatabase.h\n\n    src/settings/pluginswidget/pluginsmodel.cpp\n    src/settings/pluginswidget/pluginsmodel.h\n    src/settings/pluginswidget/pluginssortproxymodel.cpp\n    src/settings/pluginswidget/pluginssortproxymodel.h\n    src/settings/pluginswidget/pluginswidget.cpp\n    src/settings/pluginswidget/pluginswidget.h\n    src/settings/pluginswidget/pluginwidget.cpp\n    src/settings/pluginswidget/pluginwidget.h\n\n    src/settings/querywidget/fallbacksmodel.cpp\n    src/settings/querywidget/fallbacksmodel.h\n    src/settings/querywidget/queryhandlermodel.cpp\n    src/settings/querywidget/queryhandlermodel.h\n    src/settings/querywidget/querywidget.cpp\n    src/settings/querywidget/querywidget.h\n\n    src/settings/settingswindow.cpp\n    src/settings/settingswindow.h\n\n    src/util/extensionplugin.cpp\n    src/util/iconprovider.cpp\n    src/util/indexitem.cpp\n    src/util/indexqueryhandler.cpp\n    src/util/itemindex.cpp\n    src/util/itemindex.h\n    src/util/levenshtein.cpp\n    src/util/levenshtein.h\n    src/util/matcher.cpp\n    src/util/notification.cpp\n    src/util/standarditem.cpp\n    src/util/util.cpp\n\n    src/config.h.in\n)\n\nif (WIN32)\n    list(APPEND LIB_SRC\n        src/platform/win/signalhandler.cpp\n    )\nelseif (APPLE)\n    list(APPEND LIB_SRC\n        src/platform/unix/signalhandler.cpp\n        src/platform/mac/platform.mm\n    )\nelseif(UNIX)  # assume xdg\n    list(APPEND LIB_SRC\n        src/platform/unix/signalhandler.cpp\n        src/platform/xdg/iconlookup.cpp\n        src/platform/xdg/iconlookup.h\n        src/platform/xdg/platform.cpp\n        src/platform/xdg/themefileparser.cpp\n        src/platform/xdg/themefileparser.h\n    )\nendif()\n\nset(LIB_UI\n    src/settings/querywidget/querywidget.ui\n    src/settings/settingswindow.ui\n)\n\nadd_library(${TARGET_LIB} SHARED\n    ${LIB_PUBLIC_HEADER}\n    ${LIB_SRC}\n    ${LIB_UI}\n    resources/resources.qrc\n)\n\nadd_library(\"${PROJECT_NAME}::${TARGET_LIB}\" ALIAS ${TARGET_LIB})\n\ninclude(GNUInstallDirs)\ninclude(GenerateExportHeader)\n\ngenerate_export_header(${TARGET_LIB}\n    BASE_NAME ${PROJECT_NAME}\n    EXPORT_FILE_NAME \"${PROJECT_BINARY_DIR}/include/albert/export.h\"\n)\n\ntarget_precompile_headers(${TARGET_LIB} PRIVATE ${LIB_PUBLIC_HEADER})\n\ntarget_include_directories(${TARGET_LIB}\n    PUBLIC\n        \"$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include/>\"\n        \"$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include/>\"\n        \"$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\"\n    PRIVATE\n        \"${PROJECT_BINARY_DIR}/include/albert\"\n        \"${PROJECT_SOURCE_DIR}/include/albert\"\n        src\n        src/app\n        src/common\n        src/frontend\n        src/handlers\n        src/platform\n        src/platform/mac\n        src/platform/unix\n        src/platform/xdg\n        src/plugin\n        src/query\n        src/settings\n        src/settings/pluginswidget\n        src/settings/querywidget\n        src/util\n)\n\nconfigure_file(\n    \"${PROJECT_SOURCE_DIR}/src/config.h.in\"\n    \"${PROJECT_BINARY_DIR}/include/albert/config.h\"\n    @ONLY\n)\n\nfind_package(Qt6 6.2 REQUIRED COMPONENTS # Ubuntu 22.04\n    Core\n    Concurrent\n    Network\n    Sql\n    Svg\n    Widgets\n    LinguistTools\n)\n\ntarget_link_libraries(${TARGET_LIB}\n    PRIVATE\n        QHotkey::QHotkey\n        QNotifications::QNotifications\n        Qt6::Concurrent\n        Qt6::Core\n        Qt6::Network\n        Qt6::Sql\n        Qt6::Widgets\n)\n\nif(APPLE)\n    target_link_libraries(${TARGET_LIB} PRIVATE objc \"-framework Cocoa\")\n    target_compile_options(${TARGET_LIB} PRIVATE \"-fobjc-arc\")\nelseif(UNIX)\n    if (DEFINED CMAKE_LIBRARY_ARCHITECTURE)\n        target_compile_definitions(${TARGET_LIB}\n            PRIVATE -DMULTIARCH_TUPLE=\"${CMAKE_LIBRARY_ARCHITECTURE}\"\n        )\n    endif()\nendif()\n\nset_target_properties(${TARGET_LIB} PROPERTIES\n    #INSTALL_RPATH \"$ORIGIN\"\n    CXX_STANDARD 20\n    CXX_STANDARD_REQUIRED ON\n    CXX_EXTENSIONS OFF\n    CXX_VISIBILITY_PRESET hidden\n    FRAMEWORK TRUE\n    FRAMEWORK_VERSION A\n    MACOSX_FRAMEWORK_BUNDLE_VERSION \"${PROJECT_VERSION}\"\n    MACOSX_FRAMEWORK_IDENTIFIER \"org.albertlauncher.albert.interface\"\n    MACOSX_FRAMEWORK_SHORT_VERSION_STRING ${PROJECT_VERSION}\n    OUTPUT_NAME \"${PROJECT_NAME}\"\n    PUBLIC_HEADER \"${LIB_PUBLIC_HEADER}\"\n    SOVERSION \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}\"  # also mach-o compat version\n    # NO_SONAME true # do _not_ add. linkers other that ldd will make troubles using non relative paths\n    VERSION ${PROJECT_VERSION}\n    VISIBILITY_INLINES_HIDDEN 1\n    AUTOMOC ON\n    AUTOUIC ON\n    AUTORCC ON\n)\n\ntarget_compile_options(${TARGET_LIB}\n    PUBLIC\n        #-Werror\n        -Wall\n        -Wextra\n        -Wpedantic\n\n        # warnings that should be errors\n        -Werror=return-type  # silently buils but crashes at runtime\n        -Werror=float-conversion  # Implicit cast may loose precision (e.g. match scores)\n\n        # -Wconversion\n        # -Weffc++\n        -Winline\n        -Wmissing-field-initializers\n        -Wshadow\n        -Wstrict-aliasing\n        -Winvalid-pch\n\n        # Use this from time to time\n        # -Weverything\n        # -Wdocumentation\n        # -Wno-c++98-compat\n        # -Wno-c++20-compat\n        # -Wno-c++98-compat-pedantic\n\n        # ??\n        # -Wl,-undefined\n)\n\n\n### Internationalization\n\nfile(GLOB TS_FILES i18n/*.ts)\n\n# Source files to be translated (separate because some files may be masked)\nfile(GLOB_RECURSE TRANSLATION_SOURCE_FILES\n    include/.h\n    src/*.h\n    src/*.ui\n    src/*.mm\n    src/*.cpp\n)\n\nqt_add_translations(\n    ${TARGET_LIB}\n    TS_FILES ${TS_FILES}\n    SOURCES ${TRANSLATION_SOURCE_FILES}\n    LUPDATE_OPTIONS\n      # -no-obsolete\n      -locations none\n)\n\n# For convenience, QtCreator does not show the umbrella target\nadd_custom_target(global_lupdate DEPENDS update_translations)\n\n\n### Export/Install\n\ninclude(CMakePackageConfigHelpers)\n\nset(LIB_EXPORT_NAME \"${PROJECT_NAME}-targets\")\nset(LIB_TARGETS_FILE \"${LIB_EXPORT_NAME}.cmake\")\nset(LIB_CONFIG_FILE \"${PROJECT_NAME}-config.cmake\")\nset(LIB_VERSION_FILE \"${PROJECT_NAME}-config-version.cmake\")\nset(LIB_MACROS_FILE \"${PROJECT_NAME}-macros.cmake\")\nset(LIB_FIND_ALBERT_FILE \"FindAlbert.cmake\")\nset(LIB_CMAKE_MODULE_DIR \"${PROJECT_SOURCE_DIR}/cmake\")\nset(INSTALL_CONFIGDIR \"${CMAKE_INSTALL_LIBDIR}/cmake/Albert\")\n\n# Install the target\n# https://cmake.org/cmake/help/latest/command/install.html#targets\ninstall(\n    TARGETS ${TARGET_LIB}\n    EXPORT ${LIB_EXPORT_NAME}  # association for install(EXPORT â€¦) and export(EXPORT â€¦)\n    FRAMEWORK DESTINATION .\n    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/albert\n)\n\n# Create a targets file in install tree\n# https://cmake.org/cmake/help/latest/command/install.html#export\n# By default the generated file will be called <export-name>.cmake\ninstall(\n    EXPORT ${LIB_EXPORT_NAME} # association from above\n    NAMESPACE ${PROJECT_NAME}::\n    DESTINATION ${INSTALL_CONFIGDIR}\n)\n\n# Create a targets file in build tree (matching install(EXPORT))\n# https://cmake.org/cmake/help/latest/command/export.html#exporting-targets-matching-install-export\n# Seems like a shorthand for export(TARGETS)\nexport(\n   EXPORT ${LIB_EXPORT_NAME} # association from above\n   NAMESPACE ${PROJECT_NAME}::\n   FILE \"${PROJECT_BINARY_DIR}/${LIB_TARGETS_FILE}\"\n)\n\ninclude(CMakePackageConfigHelpers)\n\n# Create version file in build tree\nwrite_basic_package_version_file(\n    \"${PROJECT_BINARY_DIR}/${LIB_VERSION_FILE}\"\n    VERSION \"${PROJECT_VERSION}\"\n    COMPATIBILITY AnyNewerVersion\n)\n\n# Create config file in build tree\nconfigure_package_config_file(\n   \"${LIB_CMAKE_MODULE_DIR}/${LIB_CONFIG_FILE}.in\"\n   \"${PROJECT_BINARY_DIR}/${LIB_CONFIG_FILE}\"\n   INSTALL_DESTINATION ${INSTALL_CONFIGDIR}\n)\n\n# Copy the macros to the build directory\nconfigure_file(\n    \"${LIB_CMAKE_MODULE_DIR}/${LIB_MACROS_FILE}\"\n    \"${PROJECT_BINARY_DIR}/${LIB_MACROS_FILE}\"\n    COPYONLY\n)\n\n# Copy the dummy FindAlbert to the build directory\nconfigure_file(\n    \"${LIB_CMAKE_MODULE_DIR}/${LIB_FIND_ALBERT_FILE}.in\"\n    \"${PROJECT_BINARY_DIR}/${LIB_FIND_ALBERT_FILE}\"\n    @ONLY\n)\n\ninstall(FILES\n    \"${PROJECT_BINARY_DIR}/${LIB_CONFIG_FILE}\"\n    \"${PROJECT_BINARY_DIR}/${LIB_VERSION_FILE}\"\n    \"${PROJECT_BINARY_DIR}/${LIB_MACROS_FILE}\"\n    DESTINATION ${INSTALL_CONFIGDIR}\n)\n\n\n### App  ######################################################################\n\nset(TARGET_APP ${CMAKE_PROJECT_NAME})\n\nadd_executable(${TARGET_APP} MACOSX_BUNDLE \"src/main.cpp\")\n\nif (APPLE)\n\n    # Avoid regranting permissions all the time\n    option(BUILD_DEV_BUNDLE \"Build a separate plugins\" OFF)\n    if (BUILD_DEV_BUNDLE)\n        set(DEV_BUNDLE_SUFFIX \"Dev\")\n        set(DEV_BUNDLE_ID_SUFFIX \".dev\")\n    endif()\n\n    set(ICON_NAME \"albert\")\n    set(ICON_PATH \"dist/macos/${ICON_NAME}.icns\")\n    target_sources(${TARGET_APP} PRIVATE ${ICON_PATH})\n\n    set_source_files_properties(${ICON_PATH} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n\n    set_target_properties(${TARGET_APP} PROPERTIES\n        BUNDLE True\n        OUTPUT_NAME \"${PROJECT_DISPLAY_NAME}${DEV_BUNDLE_SUFFIX}\"\n        MACOSX_BUNDLE TRUE\n        MACOSX_BUNDLE_BUNDLE_NAME \"${PROJECT_DISPLAY_NAME}\"  # \"${PROJECT_NAME}\"\n        MACOSX_BUNDLE_BUNDLE_VERSION \"${CMAKE_PROJECT_VERSION}\"\n        MACOSX_BUNDLE_COPYRIGHT \"Copyright (c) 2024 Manuel Schneider\"\n        MACOSX_BUNDLE_GUI_IDENTIFIER \"org.albertlauncher.albert${DEV_BUNDLE_ID_SUFFIX}\"\n        MACOSX_BUNDLE_ICON_FILE \"${ICON_NAME}\"\n        MACOSX_BUNDLE_INFO_STRING \"Albert keyboard launcher\"\n        MACOSX_BUNDLE_SHORT_VERSION_STRING \"${CMAKE_PROJECT_VERSION}\"\n    )\n\nelseif (UNIX)\n\n    install(FILES dist/xdg/albert.desktop DESTINATION ${CMAKE_INSTALL_DATADIR}/applications)\n    install(FILES resources/albert.svg DESTINATION ${CMAKE_INSTALL_DATADIR}/icons/hicolor/scalable/apps)\n\nendif()\n\ntarget_link_libraries(${TARGET_APP} PRIVATE ${TARGET_LIB})\n\n\n    #INSTALL_RPATH_USE_LINK_PATH TRUE\n    #INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}\"\n    #BUILD_WITH_INSTALL_RPATH FALSE\n    #INSTALL_RPATH \"$ORIGIN/../${CMAKE_INSTALL_LIBDIR}/albert/\"  # Set the RPATH for the library lookup\n    #INSTALL_RPATH \"$ORIGIN/../Frameworks/albert/\"  # Set the RPATH for the library lookup\n\ninstall(\n    TARGETS ${TARGET_APP}\n    BUNDLE DESTINATION .\n    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n)\n\n\n### Plugins ###################################################################\n\n# Since the cmake module path of this project contains a dummy FindAlbert.cmake\n# CMake uses this one instead of searching systemwide.\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_BINARY_DIR}\")\n\n# # on macOS include the macports lookup path\n# if (APPLE)\n#     list(APPEND CMAKE_PREFIX_PATH \"/opt/local\")\n#     message(STATUS \"CMAKE_PREFIX_PATH: ${CMAKE_PREFIX_PATH}\")\n# endif()\n#2024: Drop ports use brew only\n# if (APPLE)\n#     list(APPEND CMAKE_PREFIX_PATH \"/opt/homebrew\")\n#     message(STATUS \"CMAKE_PREFIX_PATH: ${CMAKE_PREFIX_PATH}\")\n# endif()\n\noption(BUILD_PLUGINS \"Build plugins\" ON)\nset(PLUGINS_DIR \"${CMAKE_CURRENT_LIST_DIR}/plugins\")\nif (BUILD_PLUGINS)\n    file(GLOB ENTRIES RELATIVE \"${PLUGINS_DIR}\" plugins/*)\n    list(FILTER ENTRIES EXCLUDE REGEX \"^\\\\..+\")\n    foreach(ENTRY ${ENTRIES})\n        if(IS_DIRECTORY \"${PLUGINS_DIR}/${ENTRY}\")\n            string(TOUPPER ${ENTRY} UPPER)\n            option(BUILD_PLUGIN_${UPPER} \"Build plugin ${ENTRY}\" ON)\n            if (BUILD_PLUGIN_${UPPER})\n                add_subdirectory(\"${PLUGINS_DIR}/${ENTRY}\")\n            endif()\n        endif()\n    endforeach()\nendif()\n\n\n### Test ######################################################################\n\noption(BUILD_TESTS \"Build tests (Requires QTest)\" OFF)\nif (BUILD_TESTS)\n    include(CTest)\n    find_package(Qt6 REQUIRED COMPONENTS Test)\n\n    get_target_property(SRC_TST ${TARGET_LIB} SOURCES)\n    get_target_property(INC_TST ${TARGET_LIB} INCLUDE_DIRECTORIES)\n    get_target_property(LIBS_TST ${TARGET_LIB} LINK_LIBRARIES)\n    get_target_property(CXX_STD_TST ${TARGET_LIB} CXX_STANDARD)\n\n    set(TARGET_TST ${CMAKE_PROJECT_NAME}_test)\n\n    add_executable(${TARGET_TST} ${SRC_TST} test/test.h test/test.cpp)\n\n    target_include_directories(${TARGET_TST} PRIVATE ${INC_TST} test)\n    target_link_libraries(${TARGET_TST} PRIVATE ${LIBS_TST} Qt6::Test)\n    set_target_properties(${TARGET_TST} PROPERTIES\n        CXX_STANDARD ${CXX_STD_TST}\n        AUTOMOC ON\n        AUTOUIC ON\n        AUTORCC ON\n    )\n    add_test(NAME ${TARGET_TST} COMMAND ${TARGET_TST})\n\nendif()\n\n\n### Packaging #################################################################\n\n\nif (APPLE)\n    set(CPACK_GENERATOR \"DragNDrop\")\n    set(CPACK_PACKAGE_CHECKSUM \"SHA256\")\n    set(CPACK_PACKAGE_DESCRIPTION_FILE \"${PROJECT_SOURCE_DIR}/README.md\")\n    set(CPACK_PACKAGE_EXECUTABLES \"${PROJECT_NAME}\" \"${PROJECT_DISPLAY_NAME} executable\")\n    set(CPACK_PACKAGE_FILE_NAME \"${PROJECT_DISPLAY_NAME}-v${PROJECT_VERSION}\")\n    set(CPACK_PACKAGE_NAME \"${PROJECT_DISPLAY_NAME}\")\n    #set(CPACK_PACKAGE_ICON \"${PROJECT_SOURCE_DIR}/${ICON_PATH}\")\n    set(CPACK_PACKAGE_INSTALL_DIRECTORY \"${CMAKE_PROJECT_NAME}\")\n    set(CPACK_PACKAGE_VENDOR \"manuelschneid3r\")\n    set(CPACK_RESOURCE_FILE_LICENSE \"${PROJECT_SOURCE_DIR}/LICENSE.md\")\n    set(CPACK_RESOURCE_FILE_README \"${PROJECT_SOURCE_DIR}/README.md\")\n    set(CPACK_RESOURCE_FILE_WELCOME \"${PROJECT_SOURCE_DIR}/README.md\")\n    set(CPACK_STRIP_FILES TRUE)\n    set(CPACK_MONOLITHIC_INSTALL TRUE)\n\n    configure_file(\"cmake/bundle-macos.cmake.in\" \"${PROJECT_BINARY_DIR}/bundle-macos.cmake\" @ONLY)\n    install(SCRIPT \"${PROJECT_BINARY_DIR}/bundle-macos.cmake\")\n\n    include(CPack)\nendif()\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.724609375,
          "content": "Copyright 2021 Manuel Schneider\nAlbert license v1.1\n\nPersonal use in source and binary forms, with or without modification, and\nredistribution in source and binary forms without modification \nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must not target Microsoft or Apple platforms, reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nInformal note:\n\nThis is basically a BSD-2-Clause without the permission for redistribution of modifications and an explicit exclusion of Microsoft or Apple platforms.\nI am not a lawyer and it is hard to properly regulate redistribution of modifications so I simply do not permit it. \nHowever, if you just want to help with e.g. a public pull request, I will turn a blind eye.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.0068359375,
          "content": "# Albert launcher\n\n[![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/albertlauncher/albert)](https://github.com/albertlauncher/albert/tags)\n[![Docker CI Status](https://github.com/albertlauncher/albert/actions/workflows/ci.yml/badge.svg?event=push)](https://github.com/albertlauncher/albert/actions/workflows/ci.yml) \n[![OBS status](https://build.opensuse.org/projects/home:manuelschneid3r/packages/albert/badge.svg?type=percent)](https://build.opensuse.org/package/show/home:manuelschneid3r/albert)\n[![Telegram community chat](https://img.shields.io/badge/chat-telegram-0088cc.svg?style=flat)](https://telegram.me/albert_launcher_community)\n[![Discord](https://img.shields.io/badge/chat-discord-7289da.svg?style=flat)](https://discord.gg/t8G2EkvRZh)\n\nAlbert is a plugin-based, desktop-agnostic C++/Qt keyboard launcher.\n\nVisit the [*website*](https://albertlauncher.github.io/) for more information.\n\nEnjoy using Albert! If you find it helpful, feel free to [tip me](https://albertlauncher.github.io/donation/).\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "commit",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "metatool.py",
          "type": "blob",
          "size": 7.654296875,
          "content": "#!/usr/bin/env python3\nimport os\nimport re\nimport subprocess\nimport sys\nimport argparse\nimport datetime\nimport tempfile\nfrom pathlib import Path\nfrom subprocess import run\n\n\ndef create_changelog(args) -> str:\n    native_plugins_root = f\"{args.root}/plugins\"\n    python_plugins_root = f\"{args.root}/plugins/python/plugins\"\n    latest_tag = run([\"git\", \"describe\", \"--tags\", \"--abbrev=0\"], capture_output=True).stdout.decode().strip()\n    out = []\n\n    placeholder = 'BOOOOM'\n    def process_git_log(s: str):\n        indented_output = []\n        for line in s.split('\\n'):\n            if not line:  # skip empty\n                continue\n            if line.startswith(f'{placeholder} '): # replace placeholder with -\n                indented_output.append('- ' + line[7:])\n            else: # indent all other lines\n                indented_output.append('  ' + line)\n\n        return '\\n'.join(indented_output)\n\n    out.append(f\"[Key changes]\")\n\n    log = run([\"git\", \"log\", f\"--pretty=format:{placeholder} %B\", f\"{latest_tag}..HEAD\"], capture_output=True).stdout.decode().strip()\n    log = process_git_log(log)\n    if log:\n        out.append(f\"## Albert\\n\\n{log}\\n\\n\\n## API\\n\\n- ````\")\n\n    begin = run([\"git\", \"ls-tree\", latest_tag, native_plugins_root], capture_output=True).stdout.decode().strip().split()[2]\n    log = run([\"git\", \"-C\", native_plugins_root, \"log\", f\"--pretty=format:{placeholder} %B\", f\"{begin}..HEAD\"], capture_output=True).stdout.decode().strip()\n    log = process_git_log(log)\n    if log:\n        out.append(f\"## Plugins\\n\\n- ****\\n\\n{log}\")\n\n    begin = run([\"git\", \"-C\", native_plugins_root, \"ls-tree\", begin, python_plugins_root], capture_output=True).stdout.decode().strip().split()[2]\n    log = run([\"git\", \"-C\", python_plugins_root, \"log\", f\"--pretty=format:{placeholder} %B\", f\"{begin}..HEAD\"], capture_output=True).stdout.decode().strip()\n    log = process_git_log(log)\n    if log:\n        out.append(f\"## Python\\n\\n- ****\\n\\n{log}\")\n\n    return '\\n\\n'.join(out)\n\n\ndef test_build(args):\n\n    cmds = {\n        'Arch':   [\"docker\", \"build\", \"--progress=plain\", \"-f\", \".docker/arch.Dockerfile\", \"-t\",\n                   \"albert:arch\", \"--platform\", \"linux/amd64\", \".\"],\n        'Fedora': [\"docker\", \"build\", \"--progress=plain\", \"-f\", \".docker/fedora.Dockerfile\", \"-t\",\n                   \"albert:fedora\", \".\"],\n        'Ubuntu': [\"docker\", \"build\", \"--progress=plain\", \"-f\", \".docker/ubuntu.Dockerfile\", \"-t\",\n                   \"albert:ubuntu\", \".\"],\n    }\n\n    if args.distribution is not None:\n        cmds = [v for k,v  in cmds.items() if args.distribution.lower() in k.lower()]\n    else:\n        keys = list(cmds.keys())\n        for i, k in enumerate(keys):\n            print(f\"{i}: {k}\")\n        indices = input(\"Choose image: [All] \")\n        indices = [int(s) for s in filter(None, indices.split())]\n        cmds = [cmds[key] for key in [keys[i] for i in indices]] if indices else cmds.values()\n\n    try:\n        for cmd in cmds:\n            print(f\">>> {' '.join(cmd)}\")\n            run(cmd).check_returncode()\n    except subprocess.CalledProcessError as e:\n        print(e)\n        sys.exit(1)\n\n\ndef release(args):\n    root = Path(args.root)\n\n    if 'main' != run(['git', 'rev-parse', '--abbrev-ref', 'HEAD'], capture_output=True).stdout.decode().strip():\n        print('Not on main branch')\n        sys.exit(1)\n\n    if args.version[0] == 'v':\n        args.version = args.version[1:]\n\n    if not re.match(r'^[0-9]+\\.[0-9]+\\.[0-9]+$', args.version):\n        print('Expected version number as parameter: major.minor.patch')\n        sys.exit(1)\n\n    print(\"CHECK THESE!\")\n    print(\"- PRs and feature branches merged?\")\n    print(\"- submodules staged/committed? (python, plugins, â€¦)\")\n    print(\"- 'v%s' > '%s' ?\"\n          % (args.version, run([\"git\", \"describe\", \"--tags\", \"--abbrev=0\"], capture_output=True).stdout.decode().strip()))\n\n    if \"y\".startswith(input(\"Shall I run a test build in docker (docker running?)? [Y/n] \").lower()):\n        test_build(args)\n\n    atomic_changelog = root/f\"changelog_v{args.version}\"\n\n    with open(atomic_changelog, 'w') as file:\n        file.write(create_changelog(args))\n\n    input(\"Edit the changelog created from git logs to be meaningful to humans. Press Enter to continue...\")\n    run([\"vim\", atomic_changelog]).check_returncode()\n\n    if 'yes' == input(\"Release? (CHANGELOG, VERSION, tagged push)? [yes/NO]\").lower():\n        print(\"Appending changelogâ€¦\")\n\n        with open(atomic_changelog, 'r') as file:\n            changelog = file.read().strip()\n\n        with open(root/\"CHANGELOG.md\", 'r') as file:\n            old_changelog = file.read()\n\n        with open(root/\"CHANGELOG.md\", 'w') as file:\n            file.write(f\"v{args.version} ({datetime.date.today().strftime('%Y-%m-%d')})\\n\\n{changelog}\\n\\n{old_changelog}\")\n\n        print(\"Update CMake project versionâ€¦\")\n        run([\"sed\", \"-i.bak\", f\"s/^set(PROJECT_VERSION.*$/set(PROJECT_VERSION {args.version})/\", root/\"CMakeLists.txt\"], cwd=root).check_returncode()\n\n        run([\"git\", \"add\", root/\"CHANGELOG.md\", root/\"CMakeLists.txt\"], cwd=root).check_returncode()\n        run([\"git\", \"commit\", \"-m\", f\"v{args.version}\"], cwd=root).check_returncode()\n        run([\"git\", \"tag\", f\"v{args.version}\"], cwd=root).check_returncode()\n        run([\"git\", \"push\", \"--tags\", \"--atomic\", \"origin\", \"main\"], cwd=root).check_returncode()\n\n        run([\"rm\", atomic_changelog])\n        run([\"rm\", \"CMakeLists.txt.bak\"])\n\n        docs_root_path = root / \"documentation\"\n\n        if docs_root_path.exists():\n            run([\"git\", \"pull\"], cwd=docs_root_path).check_returncode()\n        else:\n            run([\"git\", \"clone\", \"git@github.com:albertlauncher/documentation.git\"], cwd=root).check_returncode()\n\n        relative_file_path = f\"src/_posts/{datetime.date.today().strftime('%Y-%m-%d')}-albert-v{args.version}-released.md\"\n\n        with open(docs_root_path / relative_file_path, 'w') as file:\n            file.write(f\"\"\"---\ntitle:  \"Albert v{args.version} released\"\ndate: {datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M%z\")}\n---\n\n# {{{{ page.title }}}}\n\n{changelog.strip()}\n\nCheck the [GitHub repositories](https://github.com/albertlauncher/albert/commits/v{args.version}) for details.\n\"\"\")\n\n        run([\"git\", \"add\", relative_file_path], cwd=docs_root_path).check_returncode()\n        run([\"git\", \"commit\", \"-m\", f\"Albert v{args.version} released\"], cwd=docs_root_path).check_returncode()\n        run([\"git\", \"push\"], cwd=docs_root_path).check_returncode()\n\n    print(\"Done.\")\n\n\ndef main():\n    p = argparse.ArgumentParser()\n    sps = p.add_subparsers()\n\n    for c in ['changelog', 'cl']:\n        sp = sps.add_parser(c, help='Create raw changelog.')\n        sp.set_defaults(func=lambda args: print(create_changelog(args)))\n\n    for c in ['test', 't']:\n        sp = sps.add_parser(c, help='Test build using docker.')\n        sp.add_argument('distribution', type=str, nargs='?', default=None, help=\"The distro.\")\n        sp.set_defaults(func=test_build)\n\n    for c in ['release', 'r']:\n        sp = sps.add_parser(c, help=\"Release a new version.\")\n        sp.add_argument('version', type=str, help=\"The semantic version.\")\n        sp.set_defaults(func=release)\n\n    args, unknown = p.parse_known_args()\n    args.unknown = unknown\n    if not hasattr(args, \"func\"):\n        p.print_help()\n        sys.exit(1)\n\n    sha = run([\"git\", \"rev-list\", \"--parents\", \"HEAD\"], capture_output=True).stdout.decode().strip().split(\"\\n\")[-1]\n    if sha != '4d409110b9771e688acbb995422541f03ef0d8a7':\n        print(\"Working dir is not the albert repository\")\n        sys.exit(1)\n\n    args.root = run([\"git\", \"rev-parse\", \"--show-toplevel\"], capture_output=True).stdout.decode().strip()\n\n    try:\n        args.func(args)\n    except KeyboardInterrupt:\n        print(\"\\nBye.\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "plugins",
          "type": "commit",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}