{
  "metadata": {
    "timestamp": 1736566065750,
    "page": 52,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "owasp-modsecurity/ModSecurity",
      "stars": 8430,
      "defaultBranch": "v3/master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.548828125,
          "content": "# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\nindent_style = space\n# Scripts without suffixes in the project root tend to indent by two spaces\nindent_size = 2\n\n# Most of the project files indent by four spaces\n[*/**]\nindent_size = 4\n\n# Test files indent by two spaces\n[test/**]\nindent_size = 2\n\n# The config parser file indents by both two and four spaces,\n# so we choose to indent by two spaces as a common denominator.\n[*.yy]\nindent_size = 2\n\n[{Makefile,Makefile.am}]\nindent_style = tab\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.974609375,
          "content": "*.o\n*.lo\n*.la\n**/Makefile\n**/Makefile.in\naclocal.m4\nar-lib\nautom4te.cache/\nbuild/libtool.m4\nbuild/ltoptions.m4\nbuild/ltsugar.m4\nbuild/ltversion.m4\nbuild/lt~obsolete.m4\nbuild/win32/build\nbuild/win32/CMakeUserPresets.json\ncompile\nconfig.guess\nconfig.log\nconfig.status\nconfig.sub\nconfig.h.in~\nconfigure\nconfigure~\ndepcomp\nmodsecurity.pc\n.deps\n.libs\n.dirstamp\nsrc/config.h\nsrc/config.h.in\nsrc/location.hh\nsrc/position.hh\nsrc/stack.hh\nsrc/stamp-h1\n/test/rules_optimization\n/test/regression_tests\n/test/unit_tests\n/test-driver\n/test/massif.out.*\n/test/benchmark/benchmark\n/test/benchmark/owasp-v3/\n/test/test-cases/regression/*.trs\n/test/test-cases/regression/*.log\n/test-suite.log\nylwrap\nmissing\ninstall-sh\nlibtool\nltmain.sh\nexamples/simple_example_using_c/test\n/tools/rules-check/modsec-rules-check\nexamples/multiprocess_c/multi\nexamples/multithread/multithread\nexamples/reading_logs_via_rule_message/simple_request\nexamples/reading_logs_with_offset/read\nexamples/using_bodies_in_chunks/simple_request\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.5048828125,
          "content": "[submodule \"test/test-cases/secrules-language-tests\"]\n\tpath = test/test-cases/secrules-language-tests\n\turl = https://github.com/owasp-modsecurity/secrules-language-tests\n[submodule \"others/libinjection\"]\n\tpath = others/libinjection\n\turl = https://github.com/libinjection/libinjection.git\n[submodule \"bindings/python\"]\n\tpath = bindings/python\n\turl = https://github.com/owasp-modsecurity/ModSecurity-Python-bindings.git\n[submodule \"others/mbedtls\"]\n\tpath = others/mbedtls\n\turl = https://github.com/Mbed-TLS/mbedtls.git\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.197265625,
          "content": "zimmerle = Felipe Zimmerle <felipe@zimmerle.org>\nrbarnett = Ryan C. Barnett <rcbarnett@gmail.com>\ncsanders-git = Chaim Sanders <chaim@chaimsanders.com>\nvictorhora = Victor Hora <victorminuto@gmail.com>\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 28.619140625,
          "content": "v3.0.13 - 2024-Sep-03\n---------------------\n\n  - Adjust reference to modsecurity::utils::string::VALID_HEX\n    [PR #3243 - @eduar-hte]\n  - Lua::run: Move logging of str parameter to higher log level.\n    [PR #3240 - @frozenice]\n  - Remove unnecessary heap allocated copies in Transformation actions\n    [PR #3231 - @eduar-hte]\n  - Removed multiple heap-allocated copies in Pm::init & parse_pm_content\n    [PR #3233 - @eduar-hte]\n  - Unit tests results should not be displayed in 'automake output' mode\n    [PR #3232 - @eduar-hte]\n  - Replace usage of std::ctime, which is not safe in\n    multithread contexts\n    [PR #3228 - @eduar-hte]\n  - Removed unnecessary lock to call acmp_process_quick in Pm::evaluate\n    [PR #3227 - @eduar-hte]\n  - feat: Check if the MP header contains invalid character\n    [PR #3225 - @airween]\n  - Prevent concurrent access to data in InMemoryPerProcess'\n    resolveXXX methods\n    [PR #3216 - @eduar-hte]\n  - Remove several string copies and unnecessary heap allocations\n    [PR #3222 - @eduar-hte]\n  - Creating a std::string with a null pointer\n    is undefined behaviour\n    [PR #3220 - @eduar-hte]\n  - Simplifiy configuration to build using std C++17\n    [PR #3219 - @eduar-hte]\n  - Remove unnecessary dynamic casts\n    [PR #3218 - @eduar-hte]\n  - fix: Sonarcloud reported memleak fixes\n    [PR #3114 - @airween]\n  - V3/sonarcloud replace this declaration by a structured\n    binding declaration\n    [PR #3217 - @gberkes]\n  - Do not assume ModSecurityIntervention argument to\n    transaction::intervention has been initialized/cleaned\n    [PR #3212 - @eduar-hte]\n  - Refactor: used the init-statement to declare \"pos\" inside the\n    if statement\n    [PR #3214 - @gberkes]\n  - Refactor: moved 3 #include directives to the top of the file.\n    [PR #3213 - @gberkes]\n  - Fix SecRemoteRules regression test not to depend on a\n    specific error message\n    [PR #3211 - @eduar-hte]\n  - Fixed shared files deadlock in a multi-threaded Windows application\n    [PR #3210 - @eduar-hte]\n  - Add cleanup methods to complete C based ABI\n    [PR #3209 - @eduar-hte]\n  - Build on macOS with Apple silicon (arm64)\n    [PR #3208 - @eduar-hte]\n  - remove 'this throw' call in transaction\n    [PR #3207 - @gberkes]\n  - New API function: set hostname for log\n    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n  - Update libinjection & Mbed TLS\n    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n  - Update to seclang-scanner changes introduced by Windows support\n    [PR #3146 - @eduar-hte]\n  - GitHub build & quality assurance workflow updates\n    [PR #3144 - @eduar-hte]\n  - Add link to Rust bindings in README\n    [PR #3141 - @rkrishn7]\n  - Remove cppcheck suppressions with line numbers in test/cppcheck_suppressions.txt\n    [PR #3134 - @eduar-hte]\n  - Add support to build libModSecurity v3 on Windows\n    [PR #3132 - @eduar-hte]\n  - fix: update submodule url\n    [PR #3128 - @fzipi]\n  - fix(rbl): typo in rbl check selector\n    [PR #3127 - @fzipi]\n  - fix: Changed 'equal_range()' + loop by 'find()' in resolveFirst() methods\n    [PR #3117 - @airween]\n  - Deleted redundant code in 'ModSecurity::serverLog(...)'.\n    [PR #3116 - @gberkes]\n  - doc: Update CHANGES\n    [PR #3101 - @airween]\n  - Reduce the scope of variables in a for loop\n    [PR #3098 - @devzero2000]\n  - Clean up 'return' never will be executed.\n    [PR #3096 - @gberkes]\n  - fix: Replace obsolete macros\n    [PR #3095 - @airween]\n  - fix: Change 'SecEngineStatus' to Off by default\n    [PR #3092 - @airween]\n  - chore: update bug-report-for-version-3-x.md\n    [PR #3086 - @fzipi]\n  - test: Logical, syntax and cosmetic fixes on test cases\n    [PR #3080 - @MirkoDziadzka, @airween]\n  - Bump the C++ version from C++11 to C++17\n    [PR #3079 - @MirkoDziadzka]\n  - fix: makes uri decode platform independent\n    [PR #3016 - @M4tteoP]\n\nv3.0.12 - 2024-Jan-30\n---------------------\n\n  - Change REQUEST_FILENAME and REQUEST_BASENAME behavior\n    [Issue #3048 - @martinhsv, @theMiddleBlue, @theseion, @M4tteoP, @airween]\n  - Set the minimum security protocol version for SecRemoteRules\n    [Issue security/code-scanning/2 - @airween]\n\nv3.0.11 - 2023-Dec-06\n---------------------\n\n  - Add WRDE_NOCMD to wordexp call\n    [Issue #3024 - @sahruldotid, @martinhsv]\n  - Fix: validateDTD compile fails if when libxml2 not installed\n    [Issue #3014 - @zangobot, @martinhsv]\n  - Fix memory leak of validateDTD's dtd object\n    [Issue #3008 - @martinhsv, @zimmerle]\n  - Fix memory leaks in ValidateSchema\n    [Issue #3005 - @martinhsv, @zimmerle]\n  - Add support for expirevar action\n    [Issue #1803, #3001 - @martinhsv]\n  - Fix: lmdb regex match on non-null terminated string\n    [Issue #2985 - @martinhsv]\n  - Fix memory leaks in lmdb code (new'd strings)\n    [Issue #2983 - @martinhsv]\n  - Configure: add additional name to pcre2 pkg-config list\n    [Issue #2939 - @agebhar1, @fzipi, @martinhsv]\n\nv3.0.10 - 2023-Jul-25\n---------------------\n\n  - Fix: worst-case time in implementation of four transformations\n    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n  - Support isolated PCRE match limits\n    [Issue #2736 - @brandonpayton, @martinhsv]\n  - Fix: meta actions not applied if multiMatch in first rule of chain\n    [Issue #2867, #2868 - @mlevogiannis, @martinhsv]\n  - Fix: audit log may omit tags when multiMatch\n    [Issue #2866 - @mlevogiannis]\n  - Exclude CRLF from MULTIPART_PART_HEADER value\n    [Issue #2870 - @airween, @martinhsv]\n  - Configure: use AS_ECHO_N instead echo -n\n    [Issue #2894 - @liudongmiao, @martinhsv]\n  - Adjust position of memset from 2890\n    [Issue #2891 - @mirkodziadzka-avi, @martinhsv]\n  - Add test: empty lines in ipMatchFromFile test\n    [Issue #2846 - @tomsommer]\n\n\nv3.0.9 - 2023-Apr-12\n--------------------\n\n  - Fix: possible segfault on reload if duplicate ip+CIDR in ip match list\n    [Issue #2877, #2890 - @tomsommer, @martinhsv]\n  - Add some member variable inits in Transaction class (possible segfault)\n    [Issue #2886 - @GNU-Plus-Windows-User, @airween, @mdounin, @martinhsv]\n  - Resolve memory leak on reload (bison-generated variable)\n    [Issue #2876 - @martinhsv]\n  - Support equals sign in XPath expressions\n    [Issue #2328 - @dennus, @martinhsv]\n  - Encode two special chars in error.log output\n    [Issue #2854 - @airween, @martinhsv]\n  - Add JIT support for PCRE2\n    [Issue #2791 - @wfjsw, @airween, @FireBurn, @martinhsv]\n  - Support comments in ipMatchFromFile file via '#' token\n    [Issue #2554 - @tomsommer, @martinhsv]\n  - Use name package name libmaxminddb with pkg-config\n    [Issue #2595, #2596 - @frankvanbever, @ffontaine, @arnout]\n  - Fix: FILES_TMP_CONTENT collection key should use part name\n    [Issue #2831 - @airween]\n  - Use AS_HELP_STRING instead of obsolete AC_HELP_STRING macro\n    [Issue #2806 - @hughmcmaster]\n  - During configure, do not check for pcre if pcre2 specified\n    [Issue #2750 - @dvershinin, @martinhsv]\n  - Use pkg-config to find libxml2 first\n    [Issue #2714 - @hughmcmaster]\n  - Fix two rule-reload memory leak issues\n    [Issue #2801 - @Abce, @martinhsv]\n  - Correct whitespace handling for Include directive\n    [Issue #2800 - @877509395, @martinhsv]\n\n\nv3.0.8 - 2022-Sep-07\n--------------------\n\n  - Adjust parser activation rules in modsecurity.conf-recommended\n    [Issue #2796 - @terjanq, @martinhsv]\n  - Multipart parsing fixes and new MULTIPART_PART_HEADERS collection\n    [Issue #2795 - @terjanq, @martinhsv]\n  - Prevent LMDB related segfault\n    [Issue #2755, #2761 - @dvershinin]\n  - Fix msc_transaction_cleanup function comment typo\n    [Issue #2788 - @lookat23]\n  - Fix: MULTIPART_INVALID_PART connected to wrong internal variable\n    [Issue #2785 - @martinhsv]\n  - Restore Unique_id to include random portion after timestamp\n    [Issue #2752, #2758 - @datkps11, @martinhsv]\n\nv3.0.7 - 2022-May-30\n--------------------\n\n  - Move PCRE2 match block from member variable\n    [@martinhsv]\n  - Add SecArgumentsLimit, 200007 to modsecurity.conf-recommended\n    [Issue #2738 - @jleproust, @martinhsv]\n  - Fix memory leak when concurrent log includes REMOTE_USER\n    [Issue #2727 - @liudongmiao]\n  - Fix LMDB initialization issues\n    [Issue #2688 - @ziollek, @martinhsv]\n  - Fix initcol error message wording\n    [Issue #2732 - @877509395, @martinhsv]\n  - Tolerate other parameters after boundary in multipart C-T\n    [Issue #1900 - @martinhsv]\n  - Add DebugLog message for bad pattern in rx operator\n    [Issue #2723 - @martinhsv]\n  - Support PCRE2\n    [Issue #2668 - @martinhsv]\n  - Support SecRequestBodyNoFilesLimit\n    [Issue #2670 - @airween, @martinhsv]\n  - Fix misuses of LMDB API\n    [Issue #2601, #2602 - @hyc]\n  - Fix duplication typo in code comment\n    [Issue #2677 - @gleydsonsoares]\n  - Add ctl:auditEngine action support\n    [Issue #2606 - @alekravch, @martinhsv]\n  - Fix multiMatch msg, etc, population in audit log\n    [Issue #2573 - @Sachin-M-Desai, @martinhsv]\n  - Fix some name handling for ARGS_*NAMES: regex SecRuleUpdateTargetById, etc.\n    [Issue #2627, #2648 - @lontchianicet, @victorserbu2709, @martinhsv]\n  - Adjust confusing variable name in setRequestBody method\n    [Issue #2635 - @Mesar-Ali, @martinhsv]\n  - Multipart names/filenames may include single quote if double-quote enclosed\n    [Issue #2352 - @martinhsv]\n  - Add SecRequestBodyJsonDepthLimit to modsecurity.conf-recommended\n    [Issue #2647 - @theMiddleBlue, @airween, @877509395 ,@martinhsv]\n\n\nv3.0.6 - 2021-Nov-19\n--------------------\n\n  - Support configurable limit on depth of JSON parsing\n    [@theMiddleBlue, @martinhsv]\n\nv3.0.5 - 2021-Jul-07\n--------------------\n\n  - Handle URI received with uri-fragment\n    [@martinhsv]\n  - Having ARGS_NAMES, variables proxied\n    [@zimmerle, @martinhsv, @KaNikita]\n  - Use explicit path for cross-compile environments.\n    [Issue #2485 - @dtoubelis]\n  - Fix: FILES variable does not use multipart part name for key\n    [Issue #2377 - @martinhsv]\n  - Replaces put with setenv in SetEnv action\n    [Issue #2469 - @martinhsv, @WGH-, @zimmerle]\n  - Regression: Mark the test as failed in case of segfault.\n    [@zimmerle]\n  - Regex key selection should not be case-sensitive\n    [Issue #2296, #2107, #2297 - @michaelgranzow-avi, @victorhora,\n                                 @airween, @martinhsv, @zimmerle]\n  - Fix: Only delete Multipart tmp files after rules have run\n    [Issue #2427 - @martinhsv]\n  - Fixed MatchedVar on chained rules\n    [Issue #2423, #2435, #2436 - @michaelgranzow-avi]\n  - Add support for new operator rxGlobal\n    [@martinhsv]\n  - Fix maxminddb link on FreeBSD\n    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n  - GeoIP: switch to GEOIP_MEMORY_CACHE from GEOIP_INDEX_CACHE\n    [Issues #2378, #2186 - @defanator]\n  - rx: exit after full match (remove /g emulation); ensure capture\n    groups occuring after unused groups still populate TX vars\n    [Issue #2336 - @martinhsv]\n  - Correct CHANGES file entry for #2234\n  - Add support to test framework for audit log content verification\n    and add regression tests for issues #2000, #2196\n  - Support configurable limit on number of arguments processed\n    [Issue #2234 - @jleproust, @martinhsv]\n  - Multipart Content-Dispostion should allow field: filename*=\n    [@martinhsv]\n  - Fix rule-update-target for non-regex\n    [Issue 2251 - @martinhsv]\n  - Fix configure script when packaging for Buildroot\n    [Issue 2235 - @frankvanbever]\n  - modsecurity.pc.in: add Libs.private\n    [Issue #1918, #2253 - @ffontaine, @Dridi, @victorhora]  \n\nv3.0.4 - 2020-Jan-13\n--------------------\n\n - Fix: audit log data omitted when nolog,auditlog\n   [@martinhsv]\n - Fix: ModSecurity 3.x inspectFile operator does not pass\n   FILES_TMPNAMES parameter to lua engine\n   [Issue #2204, #2205 - @kadirerdogan]\n - XML: Remove error messages from stderr\n   [Issue #2010 - @JaiHarpalani, @zimmerle]\n - Filter comment or blank line for pmFromFile operator\n   [Issue #1645 - @LeeShan87, @victorhora, @tdoubley]\n - Additional adjustment to Cookie header parsing\n   [@martinhsv]\n - Restore chained rule part H logging to be more like 2.9 behaviour\n   [Issue #2196 - @martinhsv]\n - Small fixes in log messages to help debugging the file upload\n   [Issue #2130 - @airween]\n - Fix Cookie header parsing issues\n   [Issue #2201 - @airween, @martinhsv]\n - Fix rules with nolog are logging to part H\n   [Issue #2196 - @martinhsv]\n - Fix argument key-value pair parsing cases\n   [Issue #1904 - @martinhsv]\n - Fix: audit log part for response body for JSON format to be E\n   [Issue #2066 - @martinhsv, @zimmerle]\n - Make sure m_rulesMessages is filled after successfull match\n   [Issue #2000, #2048 - @victorhora, @defanator]\n - Fix @pm lookup for possible matches on offset zero.\n   [@zimmerle, @afoxdavidi, @martinhsv, @marshal09]\n - Regex lookup on the key name instead of COLLECTION:key\n   [@rdiperri-yottaa, @danbiagini-work, @mmelo-yottaa, @zimmerle]\n - Missing throw in Operator::instantiate\n   [Issue #2106 - @marduone]\n - Making block action execution dependent of the SecEngine status\n   [Issue #2113, #2111 - @theMiddleBlue, @airween]\n - Making block action execution dependent of the SecEngine status\n   [Issue #1960 - @theMiddleBlue, @zimmerle, @airween, @victorhora]\n - Having body limits to respect the rule engine state\n   [@zimmerle]\n - Fix SecRuleUpdateTargetById does not match regular expressions\n   [Issue #1872 - @zimmerle, @anush-cr, @victorhora, @j0k2r]  \n - Adds missing check for runtime ctl:ruleRemoveByTag\n   [Issue #2102, #2099 - @airween]\n - Adds a new operator verifySVNR that checks for Austrian social\n   security numbers.\n   [Issue #2063 - @Rufus125]\n - Fix variables output in debug logs\n   [Issue #2057 - @jleproust]\n - Correct typo validade in log output\n   [Issue #2059 - @nerrehmit]\n - fix/minor: Error encoding hexa decimal.\n   [Issue #2068 - @tech-ozon-io]\n - Limit more log variables to 200 characters.\n   [Issue #2073 - @jleproust]\n - parser: fix parsed file names\n   [@zimmerle]\n - Allow empty anchored variable\n   [Issue #2024 - @airween]\n - Fixed FILES_NAMES collection after the end of multipart parsing\n   [Issue #2016 - @airween]\n - Fixed validateByteRange parsing method\n   [Issue #2017 - @airween]\n - Removes a memory leak on the JSON parser\n   [@zimmerle]\n - Enables LMDB on the regression tests.\n   [Issue #2011, #2008 - @WGH-, @mdunc]\n - Fix: Extra whitespace in some configuration directives causing error\n   [Issue #2006 - @porjo, @zimmerle]\n - Refactoring on Regex and SMatch classes.\n   [@WGH-]\n - Fixed buffer overflow in Utils::Md5::hexdigest()\n   [Issue #2002 - @defanator]\n - Implemented merge() method for ConfigInt, ConfigDouble, ConfigString\n   [Issue #1990 - @defanator]\n - Adds initially support to the drop action.\n   [@zimmerle]\n - Complete merging of particular rule properties\n   [Issue #1978 - @defanator]\n - Replaces AC_CHECK_FILE with 'test -f'\n   [Issue #1984 - @chuckwolber]\n - Fix inet addr handling on 64 bit big endian systems\n   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Fix setenv action to strdup key=variable\n   [@zimmerle]\n - Allow 0 length JSON requests.\n   [Issue #1822 - @allanbomsft, @zimmerle, @victorhora, @marcstern]\n - Fix \"make dist\" target to include default configuration\n   [Issue #1966 - @defanator]\n - Replaced log locking using mutex with fcntl lock\n   [Issue #1949, #1927 - @Cloaked9000]\n - Correct the usage of modsecurity::Phases::NUMBER_OF_PHASES\n   [Issue #1959 - @weliu]\n - Adds support to multiple ranges in ctl:ruleRemoveById\n   [Issue #1956 - @theseion, @victorhora, @zimmerle]\n - Rule variable interpolation broken\n   [Issue #1961 - @soonum, @zimmerle] \n - Make the boundary check less strict as per RFC2046\n   [Issue #1943 - @victorhora, @allanbomsft]\n - Fix buffer size for utf8toUnicode transformation\n   [Issue #1208 - @katef, @victorhora]\n\n\nv3.0.3 - 2018-Nov-05\n--------------------\n\n - Fix double macros bug\n   [Issue #1943 - @supplient, @zimmerle]\n - Override the default status code if not suitable to redirect action\n   [Issue #1850 - @zimmerle, @victorhora]\n - parser: Fix the support for CRLF configuration files\n   [Issue #1945 - @zimmerle, @defanator, @kjakub]\n - Organizes the server logs\n   [0xb7c36 and 0x5ac20 - @zimmerle, @steven-j-wojcik]\n - m_lineNumber in Rule not mapping with the correct line number in file\n   [Issue #1844 - @zimmerle, @victorhora, @xizeng]\n - Using shared_ptr instead of unique_ptr on rules exceptions\n   [Issue #1697 - @zimmerle, @brianp9906, @victorhora, @LeSwiss, @defanator]\n - Changes debuglogs schema to avoid unecessary str allocation\n   [0xb2840 - @zimmerle]\n - Fix the SecUnicodeMapFile and SecUnicodeCodePage\n   [0x3094d - @zimmerle, @victorhora]\n - Changes the timing to save the rule message\n   [0xca270 - @zimmerle]\n - Fix crash in msc_rules_add_file() when using disruptive action in chain\n   [Issue #1849 - @victorhora, @zimmerle, @rperper]\n - Fix memory leak in AuditLog::init()\n   [Issue #1897 - @weliu]\n - Fix RulesProperties::appendRules()\n   [Issue #1901 - @steven-j-wojcik]\n - Fix RULE lookup in chained rules\n   [0x3077c - @zimmerle]\n - @ipMatch \"Could not add entry\" on slash/32 notation in 2.9.0\n   [Issue #849 - @zimmerle, @dune73]\n - Using values after transformation at MATCHED_VARS\n   [0x14316 - @zimmerle]\n - Adds support to UpdateActionById.\n   [Issue #1800 - @zimmerle, @victorhora, @NisariAIT]\n - Add correct C function prototypes for msc_init and msc_create_rule_set\n   [Issue #1922 - @steven-j-wojcik]\n - Allow LuaJIT 2.1 to be used\n   [Issue #1909 - @victorhora, @mdunc]\n - Match m_id JSON log with RuleMessage and v2 format\n   [Issue #1185 - @victorhora]\n - Adds support to setenv action.\n   [Issue #1044 - @zimmerle]\n - Adds new transaction constructor that accepts the transaction id\n   as parameter.\n   [Issue #1627 - @defanator, @zimmerle]\n - Adds request IDs and URIs to the debug log\n   [Issue #1627 - @defanator, @zimmerle]\n - Treating variables exception on load-time instead of run time.\n   [0x028e0 and 0x275a1 - @zimmerle]\n - Fix: function m.setvar in Lua scripts and add testcases\n   [Issue #1859 - @nowaits, @victorhora]\n - Fix SecResponseBodyAccess and ctl:requestBodyAccess directives\n   [Issue #1531 - @victorhora, @defanator]\n - Fix OpenBSD build\n   [Issue #1841 - @victorhora, @zimmerle, @juanfra684]\n - Fix parser to support GeoLookup with MaxMind\n   [Issue #1884, #1895 - @victorhora, @everping]\n - parser: Fix simple quote setvar in the end of the line\n   [Issue #1831 - @zimmerle, @csanders-git]\n - Fix pc file\n   [Issue #1847 - @gquintard]\n - modsec_rules_check: uses the gnu `.la' instead of `.a' file\n   [Issue #1853 - @ste7677, @victorhora, @zimmerle]\n - good practices: Initialize variables before use it\n   [Issue #1889 - Marc Stern]\n - Fix utf-8 character encoding conversion\n   [Issue #1794 - @tinselcity, @zimmerle]\n - Adds support for ctl:requestBodyProcessor=URLENCODED\n   [Issue #1797 - @victorhora]\n - Add LUA compatibility for CentOS and try to use LuaJIT first if available\n   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n - Implement support for Lua 5.1\n   [Issue #1809 - @p0pr0ck5, @victorhora]\n - Variable names must match fully, not partially. Match should be case\n   insensitive.\n   [Issue #1818, #1820, #1810, #1808 - @michaelgranzow-avi, @victorhora,\n                                       @theMiddleBlue, @airween, @zimmerle,\n                                       @LeeShan87]\n - Improves the performance while loading the rules\n   [Issue #1735 - @zimmerle, @p0pr0ck5, @victorhora]\n - Allow empty strings to be evaluated by regex::searchAll\n   [Issue #1799, #1785 - @victorhora, @XuanHuyDuong, @zimmerle]\n - Adds basic pkg-config info\n   [Issue #1790 - @gquintard, @zimmerle]\n - Fixed LMDB collection errors\n   [Issue #1787 - @airween, @zimmerle]\n - Fixed false positive MULTIPART_UNMATCHED_BOUNDARY errors\n   [Issue #1747, #1924 - @airween, @victorhora, @defanator, @zimmerle]\n - Fix ip tree lookup on netmask content\n   [Issue #1793 - @tinselcity, @zimmerle]\n - Changes the behavior of the default sec actions\n   [Issue #1629 - @mirkodziadzka-avi, @zimmerle, @victorhora]\n - Refactoring on {global,ip,resources,session,tx,user} collections\n   [Issue #1754, #1778 - @LeeShan87, @zimmerle, @victorhora, @wwd5613,\n                         @sobigboy]\n - Fix race condition in UniqueId::uniqueId()\n   [Issue #1786 - @weliu]\n - Fix memory leak in error message for msc_rules_merge C APIs\n   [Issue #1765 - @weliu]\n - Return false in SharedFiles::open() when an error happens\n   [Issue #1783 - @weliu]\n - Use rvalue reference in ModSecurity::serverLog\n   [Issue #1769 - @weliu]\n - Build System: Fix when multiple lines for curl version.\n   [Issue #1771 - @Artistan]\n - Checks if response body inspection is enabled before process it\n   [Issue #1643 - @zoltan-fedor, @dennus, @defanator, @zimmerle]\n - Code Cleanup.\n   [Issue #1757, #1755, #1756, #1761 - @p0pr0ck5]\n - Fix setvar parsing of quoted data\n   [Issue #1733, #1759, #1775 - @victorhora, @JaiHarpalani, @defanator]\n - Fix LDFLAGS for unit tests.\n   [Issue #1758 - @smlx]\n - Adds time stamp back to the audit logs\n   [Issue #1762 - @Pjack, @zimmerle]\n - Disables skip counter if debug log is disabled\n   [@zimmerle]\n - Cosmetics: Represents amount of skipped rules without decimal\n   [Issue #1737 - @p0pr0ck5]\n - Add missing escapeSeqDecode, urlEncode and trimLeft/Right tfns to parser\n   [Issue #1752 - @victorhora]\n - Fix STATUS var parsing and accept STATUS_LINE var for v2 backward comp.\n   [Issue #1738 - @victorhora]\n - Fix memory leak in modsecurity::utils::expandEnv()\n   [Issue #1750 - @defanator]\n - Initialize m_dtd member in ValidateDTD class as NULL\n   [Issue #1751 - @airween]\n - Fix broken @detectxss operator regression test case\n   [Issue #1739 - @p0pr0ck5]\n - Fix utils::string::ssplit() to handle delimiter in the end of string\n   [Issue #1743, #1744 - @defanator]\n - Fix variable FILES_TMPNAMES \n   [Issue #1646, #1610 - @victorhora, @zimmerle, @defanator]\n - Fix memory leak in Collections\n   [Issue #1729, #1730 - @defanator]\n\n\nv3.0.2 - 2018-Apr-03\n--------------------\n\n - Fix lib version information while generating the .so file\n   [@gl1f1v21, @zimmerle]\n\nv3.0.1 - 2018-Apr-02\n--------------------\n\n - Adds support for ctl:ruleRemoveByTag\n   [@zimmerle, @weliu]\n - Fix SecUploadDir configuration merge\n   [Issue #1720 - @zimmerle, @gjvanetten]\n - Include all prerequisites for \"make check\" into dist archive\n   [Issue #1716 - @defanator]\n - Fix: Reverse logic of checking output in @inspectFile\n   [Issue #1715 - @defanator]\n - Adds support to libMaxMind\n   [Issue #1307 - @zimmerle, @defanator]\n - Adds capture action to detectXSS\n   [Issue #1698 - @victorhora]\n - Temporarily accept invalid MULTIPART_SEMICOLON_MISSING operator\n   [Issue #1701 - @victorhora]\n - Adds capture action to detectSQLi\n   [Issue #1698 - @zimmerle]\n - Adds capture action to rbl\n   [Issue #1698 - @zimmerle]\n - Adds capture action to verifyCC\n   [Issue #1698 - @michaelgranzow-avi, @zimmerle]\n - Adds capture action to verifySSN\n   [Issue #1698 - @zimmerle]\n - Adds capture action to verifyCPF\n   [Issue #1698 - @zimmerle]\n - Prettier error messages for unsupported configurations (UX)\n   [@victorhora]\n - Add missing verify*** transformation statements to parser\n   [Issue #1006 and #1007 - @victorhora]\n - Fix a set of compilation warnings\n   [Issue #1650 - @zimmerle, @JayCase]\n - Check for disruptive action on SecDefaultAction.\n   [Issue #1614 - @zimmerle, @michaelgranzow-avi]\n - Fix block-block infinite loop.\n   [Issue #1614 - @zimmerle, @michaelgranzow-avi]\n - Correction remove_by_tag and remove_by_msg logic.\n   [Issue #1636 - @Minasu]\n - Fix LMDB compile error\n   [Issue #1691 - @airween]\n - Fix msc_who_am_i() to return pointer to a valid C string\n   [Issue #1640 - @defanator]\n - Added some cosmetics to autoconf related code\n   [Issue #1652 - @airween]\n - Fix \"make dist\" target to include necessary headers for Lua\n   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n - Fixed examples compilation while using disable-shared\n   [#1670 - @zimmerle, @ivanbaldo]\n - Fixed compilation issue while xml is disabled\n   [0x243028 - @zimmerle]\n - Having LDADD and LDFLAGS organized on Makefile.am\n   [0xd0e85e - @zimmerle]\n - Checking std::deque size before use it\n   [0x217cbf - @zimmerle, Yaron Dayagi]\n - perf improvement: Added the concept of RunTimeString and removed\n   all run time parser.\n   [0x3eae51 0x0320e0 0xb5688f 0xfe47a9 0xfa9842 0x1affc3 0x079de4\n    0xc7c04f 0x5262ea 0x01974a 0xd5ee1e - @zimmerle]\n - perf improvement: Checks debuglog level before format debug msg\n   [0x42ee9 - @zimmerle]\n - perf. improvement/rx: Only compute dynamic regex in case of macro\n   [0x91ff3 - @zimmerle]\n - Fix uri on the benchmark utility\n   [0x63bec - @zimmerle]\n - disable Lua on systems with liblua5.1\n   [Issue #1639 - @victorhora, @defanator]\n\nv3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n - Improvements on the benchmark tool.\n   [Issue #1615 - @zimmerle]\n - Fix lua headers on the build scripts\n   [Issue #1621 - @Minasu]\n - Refactoring on the JSON parser.\n   [Issue #1576, #1577 - Tobias Gutknecht, @zimmerle, @victorhora, @marcstern]\n - Adds support to WEBAPPID variable.\n   [Issue #1027 - @zimmerle, @victorhora]\n - Adds support for SecWebAppId.\n   [Issue #1442 - @zimmerle, @victorhora] \n - Adds support for SecRuleRemoveByTag.\n   [Issue #1476 - @zimmerle, @victorhora]\n - Adds support for update target by message.\n   [Issue #1474 - @zimmerle, @victorhora]\n - Adds support to SecRuleScript directive.\n   [Issue #994 - @zimmerle]\n - Adds support for the exec action.\n   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n - Adds support for @inspectFile operator.\n   [Issue #999 - @zimmerle, @victorhora]\n - Adds support for RESOURCE variable collection.\n   [Issue #1014 - @zimmerle, @victorhora]\n - Adds support for @fuzzyHash operator.\n   [Issue #997 - @zimmerle]\n - Fix build on non x86 arch build\n   [Issue #1598 - @athmane]\n - Fix memory issue while changing rule target dynamic\n   [Issue #1590 - @zimmerle, @slabber]\n - Fix log while displaying the name of a dict selection by regex.\n   [@zimmerle]\n - Setting http response code on the auditlog.\n   [Issue #1592 - @zimmerle]\n - Refactoring on RuleMessage class, now accepting http code as parameter.\n   [@zimmerle]\n - Having disruptive msgs as disruptive [instead of warnings] on audit log\n   [Issue #1592 - @zimmerle, @nobodysz]\n - Parser: Pipes are no longer welcomed inside regex dict element selection.\n   [Issue #1591 - @zimmerle, @slabber]\n - Avoids unicode initialization on every rules object\n   [Issue #1563 - @zimmerle, @Tiki-God, @sethinsd, @Cloaked9000, @AnoopAlias,\n                  @intelbg]\n - Makes clear to the user whenever the audit log is empty due to missing\n   JSON support.\n   [Issue #1585 - @zimmerle]\n - Makes auditlog more verbose on debug logs\n   [Issue: #1559 - @zimmerle]\n - Enable support for AuditLogFormat\n   Issue: #1583, #1493 and #1453 - @victorhora]\n - Adds macro expansion for @rx operator\n   [Issue: #1528, #1536 - @asterite3, @zimmerle]\n - Consideres under quoted variable while loading the rules.\n   [Felipe Zimmerle/@zimmerle, Victor Hora/@victorhora]\n - Store the connection and url parameters in std::string\n   [Issue: #1571 - @majordaw]\n - Eliminate some reorder and sign warnings\n   [Issue: #1572 - Dávid Major/@majordaw]\n - Makes parallel logging to work when SELinux is enabled.\n   [Issue: #1562 - David Buckle/@met3or]\n - Adds possibility to run the pm operator inside a mutex to avoid concurrent\n   access while working on a thread environment. This option is a compilation\n   flag.\n   [Felipe Zimmerle/@zimmerle]\n\n\nv3.0.0-rc1 - 2017-Aug-28\n------------------------\n\n Very first public version.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.3037109375,
          "content": "\nif TEST_UTILITIES\nexport MAYBE_TEST = test\nendif\n\nif EXAMPLES\nexport MAYBE_EXAMPLES = examples\nendif\n\n\nSUBDIRS = \\\n\tothers \\\n\tsrc \\\n\tdoc \\\n\ttools \\\n\t$(MAYBE_EXAMPLES) \\\n\t$(MAYBE_TEST)\n\n\n\n# make clean\nCLEANFILES = \n\nACLOCAL_AMFLAGS = -I build\n\n# make maintainer-clean\nMAINTAINERCLEANFILES = \\\n\taclocal.m4 \\\n\tar-lib \\\n\tbuild/libtool.m4 \\\n\tbuild/lt~obsolete.m4 \\\n\tbuild/ltoptions.m4 \\\n\tbuild/ltsugar.m4 \\\n\tbuild/ltversion.m4 \\\n\tcoding-style.txt \\\n\tcompile \\\n\tconfig.guess \\\n\tconfig.sub \\\n\tconfigure \\\n\tcppcheck.txt \\\n\tdepcomp \\\n\tinstall-sh \\\n\tltmain.sh \\\n\tMakefile.in \\\n\tmissing \\\n\ttest/modsec-shared-collections \\\n\ttest/modsec-shared-collections-lock \\\n\ttest-suite-drd.log \\\n\ttest-suite-helgrind.log \\\n\ttest-suite-memcheck.log \\\n\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\ncppcheck:\n\t@cppcheck -U YYSTYPE -U MBEDTLS_MD5_ALT -U MBEDTLS_SHA1_ALT \\\n\t\t-D MS_CPPCHECK_DISABLED_FOR_PARSER -U YY_USER_INIT \\\n\t\t--suppressions-list=./test/cppcheck_suppressions.txt \\\n\t\t--inline-suppr \\\n\t\t--enable=warning,style,performance,portability,unusedFunction,missingInclude \\\n\t\t--inconclusive \\\n\t\t--template=\"warning: {file},{line},{severity},{id},{message}\" \\\n\t\t-I headers -I . -I others -I src -I others/mbedtls/include \\\n\t\t--error-exitcode=1 \\\n\t\t-i \"src/parser/seclang-parser.cc\" -i \"src/parser/seclang-scanner.cc\" \\\n\t\t-i others \\\n\t\t--std=c++17 \\\n\t\t--force --verbose .\n\n\ncheck-static: cppcheck\n\ncheck-style: check-coding-style\n\ncheck-coding-style:\n\t@cpplint.py \\\n\t\t$$(find . -name \"*.h\" -o -name \"*.cc\" | xargs) 2>&1 \\\n \t\t| egrep -v $$(echo -n \"catchall\" ; \\\n\t  \t\tfor i in $$(cat test/coding_style_suppressions.txt); do echo -n \"|\"$$i; done) \\\n\t\t| sed 's/^\\./warning: ./g' > coding-style.txt\n\t-cat coding-style.txt\n\n\n@VALGRIND_CHECK_RULES@\nVALGRIND_SUPPRESSIONS_FILES = valgrind_suppressions.txt\n\nLOG_DRIVER = env $(SHELL) $(top_srcdir)/test/custom-test-driver\nAM_TESTS_ENVIRONMENT=AUTOMAKE_TESTS=true; export AUTOMAKE_TESTS;\nLOG_COMPILER=test/test-suite.sh\n\nTESTS=\ninclude test/test-suite.in\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = modsecurity.pc\nEXTRA_DIST = modsecurity.pc.in \\\n             modsecurity.conf-recommended \\\n             unicode.mapping\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.716796875,
          "content": "\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./others/modsec_white_bg.png\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"./others/modsec.png\">\n  <img src=\"./others/modsec.png\" width=\"50%\">\n</picture>\n\n![Quality Assurance](https://github.com/owasp-modsecurity/ModSecurity/workflows/Quality%20Assurance/badge.svg)\n[![Build Status](https://sonarcloud.io/api/project_badges/measure?project=owasp-modsecurity_ModSecurity&metric=alert_status)](https://sonarcloud.io/dashboard?id=owasp-modsecurity_ModSecurity)\n[![](https://sonarcloud.io/api/project_badges/measure?project=owasp-modsecurity_ModSecurity&metric=sqale_rating\n)](https://sonarcloud.io/dashboard?id=owasp-modsecurity_ModSecurity)\n[![](https://sonarcloud.io/api/project_badges/measure?project=owasp-modsecurity_ModSecurity&metric=reliability_rating\n)](https://sonarcloud.io/dashboard?id=owasp-modsecurity_ModSecurity)\n[![](https://sonarcloud.io/api/project_badges/measure?project=owasp-modsecurity_ModSecurity&metric=security_rating\n)](https://sonarcloud.io/dashboard?id=owasp-modsecurity_ModSecurity)\n[![](https://sonarcloud.io/api/project_badges/measure?project=owasp-modsecurity_ModSecurity&metric=vulnerabilities\n)](https://sonarcloud.io/dashboard?id=owasp-modsecurity_ModSecurity)\n\n\n\nLibmodsecurity is one component of the ModSecurity v3 project. The library\ncodebase serves as an interface to ModSecurity Connectors taking in web traffic\nand applying traditional ModSecurity processing. In general, it provides the\ncapability to load/interpret rules written in the ModSecurity SecRules format\nand apply them to HTTP content provided by your application via Connectors.\n\nIf you are looking for ModSecurity for Apache (aka ModSecurity v2.x), it is still under maintenance and available:\n[here](https://github.com/owasp-modsecurity/ModSecurity/tree/v2/master).\n\n### What is the difference between this project and the old ModSecurity (v2.x.x)?\n\n* All Apache dependencies have been removed\n* Higher performance\n* New features\n* New architecture\n\nLibmodsecurity is a complete rewrite of the ModSecurity platform. When it was first devised the ModSecurity project started as just an Apache module. Over time the project has been extended, due to popular demand, to support other platforms including (but not limited to) Nginx and IIS. In order to provide for the growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support auditlogs in the JSON format, along with a host of other functionality in future versions.\n\n\n### It is no longer just a module.\n\nThe 'ModSecurity' branch no longer contains the traditional module logic (for Nginx, Apache, and IIS) that has traditionally been packaged all together. Instead, this branch only contains the library portion (libmodsecurity) for this project. This library is consumed by what we have termed 'Connectors' these connectors will interface with your webserver and provide the library with a common format that it understands. Each of these connectors is maintained as a separate GitHub project. For instance, the Nginx connector is supplied by the ModSecurity-nginx project (https://github.com/owasp-modsecurity/ModSecurity-nginx).\n\nKeeping these connectors separated allows each project to have different release cycles, issues and development trees. Additionally, it means that when you install ModSecurity v3 you only get exactly what you need, no extras you won't be using.\n\n# Compilation\n\nBefore starting the compilation process, make sure that you have all the\ndependencies in place. Read the subsection “Dependencies”  for further\ninformation.\n\nAfter the compilation make sure that there are no issues on your\nbuild/platform. We strongly recommend the utilization of the unit tests and\nregression tests. These test utilities are located under the subfolder ‘tests’.\n\nAs a dynamic library, don’t forget that libmodsecurity must be installed to a location (folder) where you OS will be looking for dynamic libraries.\n\n\n\n### Unix (Linux, MacOS, FreeBSD, …)\n\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n```\n\nYou can then start the build process:\n\n```shell\n$ ./build.sh\n$ ./configure\n$ make\n$ sudo make install\n```\n\nDetails on distribution specific builds can be found in our Wiki:\n[Compilation Recipes](https://github.com/owasp-modsecurity/ModSecurity/wiki/Compilation-recipes)\n\n### Windows\n\nWindows build information can be found [here](build/win32/README.md).\n\n## Dependencies\n\nThis library is written in C++ using the C++17 standards. It also uses Flex\nand Yacc to produce the “Sec Rules Language” parser. Other, mandatory dependencies include YAJL, as ModSecurity uses JSON for producing logs and its testing framework, libpcre (not yet mandatory) for processing regular expressions in SecRules, and libXML2 (not yet mandatory) which is used for parsing XML requests.\n\nAll others dependencies are related to operators specified within SecRules or configuration directives and may not be required for compilation. A short list of such dependencies is as follows:\n\n* libinjection is needed for the operator @detectXSS and @detectSQL\n* curl is needed for the directive SecRemoteRules.\n\nIf those libraries are missing ModSecurity will be compiled without the support for the operator @detectXSS and the configuration directive SecRemoteRules.\n\n# Library documentation\n\nThe library documentation is written within the code in Doxygen format. To generate this documentation, please use the doxygen utility with the provided configuration file, “doxygen.cfg”, located with the \"doc/\" subfolder. This will generate HTML formatted documentation including usage examples.\n\n# Library utilization\n\nThe library provides a C++ and C interface. Some resources are currently only\navailable via the C++ interface, for instance, the capability to create custom logging\nmechanism (see the regression test to check for how those logging mechanism works).\nThe objective is to have both APIs (C, C++) providing the same functionality,\nif you find an aspect of the API that is missing via a particular interface, please open an issue.\n\nInside the subfolder examples, there are simple examples on how to use the API.\nBelow some are illustrated:\n\n###  Simple example using C++\n\n```c++\nusing ModSecurity::ModSecurity;\nusing ModSecurity::Rules;\nusing ModSecurity::Transaction;\n\nModSecurity *modsec;\nModSecurity::Rules *rules;\n\nmodsec = new ModSecurity();\n\nrules = new Rules();\n\nrules->loadFromUri(rules_file);\n\nTransaction *modsecTransaction = new Transaction(modsec, rules);\n\nmodsecTransaction->processConnection(\"127.0.0.1\");\nif (modsecTransaction->intervention()) {\n   std::cout << \"There is an intervention\" << std::endl;\n}\n```\n\n### Simple example using C\n\n```c\n#include \"modsecurity/modsecurity.h\"\n#include \"modsecurity/transaction.h\"\n\n\nchar main_rule_uri[] = \"basic_rules.conf\";\n\nint main (int argc, char **argv)\n{\n    ModSecurity *modsec = NULL;\n    Transaction *transaction = NULL;\n    Rules *rules = NULL;\n\n    modsec = msc_init();\n\n    rules = msc_create_rules_set();\n    msc_rules_add_file(rules, main_rule_uri);\n\n    transaction = msc_new_transaction(modsec, rules);\n\n    msc_process_connection(transaction, \"127.0.0.1\");\n    msc_process_uri(transaction, \"http://www.modsecurity.org/test?key1=value1&key2=value2&key3=value3&test=args&test=test\");\n    msc_process_request_headers(transaction);\n    msc_process_request_body(transaction);\n    msc_process_response_headers(transaction);\n    msc_process_response_body(transaction);\n\n    return 0;\n}\n\n```\n\n# Contributing\n\nYou are more than welcome to contribute to this project and look forward to growing the community around this new version of ModSecurity. Areas of interest include: New\nfunctionalities, fixes, bug report, support for beginning users, or anything that you\nare willing to help with.\n\n## Providing patches\n\nWe prefer to have your patch within the GitHub infrastructure to facilitate our\nreview work, and our Q.A. integration. GitHub provides excellent\ndocumentation on how to perform “Pull Requests”, more information available\nhere: https://help.github.com/articles/using-pull-requests/\n\nPlease respect the coding style. Pull requests can include various commits, so\nprovide one fix or one piece of functionality per commit. Please do not change anything outside\nthe scope of your target work (e.g. coding style in a function that you have\npassed by). For further information about the coding style used in this\nproject, please check: https://www.chromium.org/blink/coding-style\n\nProvides explanative commit messages. Your first line should  give the highlights of your\npatch, 3rd and on give a more detailed explanation/technical details about your\npatch. Patch explanation is valuable during the review process.\n\n### Don’t know where to start?\n\nWithin our code there are various items marked as TODO or FIXME that may need\nyour attention. Check the list of items by performing a grep:\n\n```\n$ cd /path/to/modsecurity-nginx\n$ egrep -Rin \"TODO|FIXME\" -R *\n```\n\nA TODO list is also available as part of the Doxygen documentation.\n\n### Testing your patch\n\nAlong with the manual testing, we strongly recommend you to use the our\nregression tests and unit tests. If you have implemented an operator, don’t\nforget to create unit tests for it. If you implement anything else, it is encouraged that you develop complimentary regression tests for it.\n\nThe regression test and unit test utilities are native and do not demand any\nexternal tool or script, although you need to fetch the test cases from other\nrepositories, as they are shared with other versions of ModSecurity, those\nothers repositories git submodules. To fetch the submodules repository and run\nthe utilities, follow the commands listed below:\n\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n ```\n\n### Debugging\n\n\nBefore start the debugging process, make sure of where your bug is. The problem\ncould be on your connector or in libmodsecurity. In order to identify where the\nbug is, it is recommended that you develop a regression test that mimics the\nscenario where the bug is happening. If the bug is reproducible with the\nregression-test utility, then it will be far simpler to debug and ensure that it never occurs again. On Linux it is\nrecommended that anyone undertaking debugging utilize gdb and/or valgrind as needed.\n\nDuring the configuration/compilation time, you may want to disable the compiler\noptimization making your “back traces” populated with readable data. Use the\nCFLAGS to disable the compilation optimization parameters:\n\n```shell\n$ export CFLAGS=\"-g -O0\"\n$ ./build.sh\n$ ./configure --enable-assertions=yes\n$ make\n$ sudo make install\n```\n\"Assertions allow us to document assumptions and to spot violations early in the\ndevelopment process. What is more, assertions allow us to spot violations with a\nminimum of effort.\" https://dl.acm.org/doi/pdf/10.1145/240964.240969\n\nIt is recommended to use assertions where applicable, and to enable them with\n'--enable-assertions=yes' during the testing and debugging workflow.\n\n### Benchmarking\n\nThe source tree includes a Benchmark tool that can help measure library performance. The tool is located in the `test/benchmark/` directory. The build process also creates the binary here, so you will have the tool after the compilation is finished.\n\nTo run, just type:\n\n```shell\ncd test/benchmark\n$ ./benchmark\nDoing 1000000 transactions...\n\n```\n\nYou can also pass a lower value:\n\n```shell\n$ ./benchmark 1000\nDoing 1000 transactions...\n```\n\nTo measure the time:\n```shell\n$ time ./benchmark 1000\nDoing 1000 transactions...\n\nreal\t0m0.351s\nuser\t0m0.337s\nsys\t0m0.022s\n```\n\nThis is very fast because the benchmark uses the minimal `modsecurity.conf.default` configuration, which doesn't include too many rules:\n\n```shell\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n```\n\nTo measure with real rules, run one of the download scripts in the same directory:\n\n```shell\n$ ./download-owasp-v3-rules.sh\nCloning into 'owasp-v3'...\nremote: Enumerating objects: 33007, done.\nremote: Counting objects: 100% (2581/2581), done.\nremote: Compressing objects: 100% (907/907), done.\nremote: Total 33007 (delta 2151), reused 2004 (delta 1638), pack-reused 30426\nReceiving objects: 100% (33007/33007), 9.02 MiB | 16.21 MiB/s, done.\nResolving deltas: 100% (25927/25927), done.\nSwitched to a new branch 'tag3.0.2'\n/path/to/ModSecurity/test/benchmark\nDone.\n\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\nInclude \"owasp-v3/crs-setup.conf.example\"\nInclude \"owasp-v3/rules/*.conf\"\n```\n\nNow the command will give much higher value.\n\n#### How the benchmark works\n\nThe tool is a straightforward wrapper application that utilizes the library. It creates a ModSecurity instance and a RuleSet instance, then runs a loop based on the specified number. Within this loop, it creates a Transaction object to emulate real HTTP transactions.\n\nEach transaction is an HTTP/1.1 GET request with some GET parameters. Common headers are added, followed by the response headers and an XML body. Between phases, the tool checks whether an intervention has occurred. All transactions are created with the same data.\n\nNote that the tool does not call the last phase (logging).\n\nPlease remember to reset `basic_rules.conf` if you want to try with a different ruleset.\n\n## Reporting Issues\n\nIf you are facing a configuration issue or something is not working as you\nexpected to be, please use the ModSecurity user’s mailing list. Issues on GitHub\nare also welcomed, but we prefer to have user ask questions on the mailing list first so that you can reach an entire community. Also don’t forget to look for existing issues before open a new one.\n\nIf you are going to open a new issue on GitHub, don’t forget to tell us the\nversion of your libmodsecurity and the version of a specific connector if there\nis one.\n\n\n### Security issue\n\nPlease do not make public any security issue. Contact us at:\nmodsecurity@owasp.org reporting the issue. Once the problem is fixed your\ncredit will be given.\n\n## Feature request\n\nWe are open to discussing any new feature request with the community via the mailing lists. You can alternativly,\nfeel free to open GitHub issues requesting new features. Before opening a\nnew issue, please check if there is one already opened on the same topic.\n\n## Bindings\n\nThe libModSecurity design allows the integration with bindings. There is an effort to avoid breaking API [binary] compatibility to make an easy integration with possible bindings. Currently, there are a few notable projects maintained by the community:\n   * Python - https://github.com/actions-security/pymodsecurity\n   * Rust - https://github.com/rkrishn7/rust-modsecurity\n   * Varnish - https://github.com/xdecock/vmod-modsecurity\n\n## Packaging\n\nHaving our packages in distros on time is a desire that we have, so let us know\nif there is anything we can do to facilitate your work as a packager.\n\n## Sponsor Note\n\nDevelopment of ModSecurity is sponsored by Trustwave. Sponsorship will end July 1, 2024. Additional information can be found here https://www.trustwave.com/en-us/resources/security-resources/software-updates/end-of-sale-and-trustwave-support-for-modsecurity-web-application-firewall/\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.25390625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe latest versions of both v2.9.x and v3.0.x are supported.\n\n## Reporting a Vulnerability\n\nFor information on how to report a security issue, please see https://github.com/owasp-modsecurity/ModSecurity#security-issue\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.2666015625,
          "content": "#!/bin/sh\n\nrm -rf autom4te.cache\nrm -f aclocal.m4\ncase `uname` in Darwin*) glibtoolize --force --copy ;;\n  *) libtoolize --force --copy ;; esac\nautoreconf --install\nautoheader\nautomake --add-missing --foreign --copy --force-missing\nautoconf --force\nrm -rf autom4te.cache\n\n\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 18.1630859375,
          "content": "# ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_version_major + msc_version_minor)])\n\n\nm4_define([msc_version],\n    [msc_version_major.msc_version_minor])\n\nm4_define([msc_version_with_patchlevel],\n    [msc_version_major.msc_version_minor.msc_version_patchlevel])\n\nm4_define([msc_version_git],\n    [m4_esyscmd_s(git describe)])\n\nm4_define([msc_version_info],\n    [msc_version_c_plus_a:msc_version_patchlevel:msc_version_minor])\n\n\n# Project Information\nAC_INIT([modsecurity], [3.0], [security@modsecurity.org])\n\n\n# General definitions\nAC_CONFIG_MACRO_DIR([build])\nAC_PREFIX_DEFAULT([/usr/local/modsecurity])\n\n\n# General automake options.\nAM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])\n\n\n# Check for dependencies (C++, AR, Lex, Yacc and Make)\nAC_PROG_CXX\nAM_PROG_AR\nAC_PROG_MAKE_SET\nPKG_PROG_PKG_CONFIG\n\n\n# Set C++ standard version and check if compiler supports it.\nAX_CXX_COMPILE_STDCXX(17, noext, mandatory)\n\n# Check for libinjection\nif ! test -f \"${srcdir}/others/libinjection/src/libinjection_html5.c\"; then\nAC_MSG_ERROR([\\\n\n\n  libInjection was not found within ModSecurity source directory.\n\n  libInjection code is available as part of ModSecurity source code in a format\n  of a git-submodule. git-submodule allow us to specify the correct version of\n  libInjection and still uses the libInjection repository to download it.\n\n  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Libinjection version\nAC_DEFUN([LIBINJECTION_VERSION], m4_esyscmd_s(cd \"others/libinjection\" && git describe && cd ../..))\nAC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\nif ! test -f \"${srcdir}/others/mbedtls/library/base64.c\"; then\nAC_MSG_ERROR([\\\n\n\n  Mbed TLS was not found within ModSecurity source directory.\n\n  Mbed TLS code is available as part of ModSecurity source code in a format\n  of a git-submodule. git-submodule allow us to specify the correct version of\n  Mbed TLS and still uses the Mbed TLS repository to download it.\n\n  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Mbed TLS version\nAC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n\n\n# Check for yajl\nPROG_YAJL\n\nAM_CONDITIONAL([YAJL_VERSION], [test \"$YAJL_VERSION\" != \"\"])\n\n# Check for LibGeoIP\nPROG_GEOIP\nAM_CONDITIONAL([GEOIP_CFLAGS], [test \"GEOIP_CFLAGS\" != \"\"])\n\n# Check for MaxMind\nPROG_MAXMIND\nAM_CONDITIONAL([MAXMIND_CFLAGS], [test \"MAXMIND_CFLAGS\" != \"\"])\n\n\n# Check for LMDB\nPROG_LMDB\nAM_CONDITIONAL([LMDB_CFLAGS], [test \"LMDB_CFLAGS\" != \"\"])\n\n# Check for SSDEEP\nCHECK_SSDEEP\nAM_CONDITIONAL([SSDEEP_CFLAGS], [test \"SSDEEP_CFLAGS\" != \"\"])\n\n# Check for LUA\nCHECK_LUA\nAM_CONDITIONAL([LUA_CFLAGS], [test \"LUA_CFLAGS\" != \"\"])\n\n\n#\n# Check for curl\n#\nCHECK_CURL\n\nif ! test -z \"${CURL_VERSION}\"; then\n  AC_DEFINE([MSC_WITH_CURL], [1], [Define if libcurl is available])\nfi\n\n\n#\n# Check for LibXML\n#\nCHECK_LIBXML2\n\n\n#\n# Check for libpcre\n#\nCHECK_PCRE\n\n\n#\n# Check for pcre2\n#\nPROG_PCRE2\nAM_CONDITIONAL([PCRE2_CFLAGS], [test \"PCRE2_CFLAGS\" != \"\"])\n\n\n# Checks for header files.\nAC_CHECK_HEADERS([string])\nAC_CHECK_HEADERS([iostream])\nAC_CHECK_HEADERS([sys/utsname.h])\n\n\n# Initialize libtool\nLT_INIT\n\n# Identify platform\nAC_CANONICAL_HOST\n\ncase $host in\n  *-*-aix*)\n    echo \"Checking platform... Identified as AIX\"\n    AC_DEFINE([AIX], [1], [Define if the operating system is AIX])\n    PLATFORM=\"AIX\"\n    ;;\n  *-*-hpux*)\n    echo \"Checking platform... Identified as HPUX\"\n    AC_DEFINE([HPUX], [1], [Define if the operating system is HPUX])\n    PLATFORM=\"HPUX\"\n    ;;\n  *-*-darwin*)\n    echo \"Checking platform... Identified as Macintosh OS X\"\n    AC_DEFINE([MACOSX], [1], [Define if the operating system is Macintosh OSX])\n    PLATFORM=\"MacOSX\"\n    ;;\n  *-*-linux* | *-*uclinux*)\n    echo \"Checking platform... Identified as Linux\"\n    AC_DEFINE([LINUX], [1], [Define if the operating system is LINUX])\n    PLATFORM=\"Linux\"\n    ;;\n  *-*-solaris*)\n    echo \"Checking platform... Identified as Solaris\"\n    AC_DEFINE([SOLARIS], [1], [Define if the operating system is SOLARIS])\n    PLATFORM=\"Solaris\"\n    ;;\n  *-*-freebsd*)\n    echo \"Checking platform... Identified as FreeBSD\"\n    AC_DEFINE([FREEBSD], [1], [Define if the operating system is FREEBSD])\n    PLATFORM=\"FreeBSD\"\n    ;;\n  *-*-netbsd*)\n    echo \"Checking platform... Identified as NetBSD\"\n    AC_DEFINE([NETBSD], [1], [Define if the operating system is NETBSD])\n    PLATFORM=\"NetBSD\"\n    ;;\n  *-*-openbsd*)\n    echo \"Checking platform... Identified as OpenBSD\"\n    AC_DEFINE([OPENBSD], [1], [Define if the operating system is OPENBSD])\n    PLATFORM=\"OpenBSD\"\n    ;;\n  *-*-kfreebsd*)\n    echo \"Checking platform... Identified as kFreeBSD, treating as linux\"\n    AC_DEFINE([FREEBSD], [1], [Define if the operating system is FREEBSD])\n    PLATFORM=\"kFreeBSD\"\n    ;;\n  *-*-dragonfly*)\n    echo \"Checking platform... Identified as DragonFlyBSD, treating as linux\"\n    AC_DEFINE([DRAGONFLY], [1], [Define if the operating system is DRAGONFLY])\n    PLATFORM=\"DragonFly\"\n    ;;\n  *-*-gnu*.*)\n    echo \"Checking platform... Identified as HURD, treating as linux\"\n    AC_DEFINE([LINUX], [1], [Define if the operating system is LINUX])\n    PLATFORM=\"HURD\"\n    ;;\n       *)\n    echo \"Unknown CANONICAL_HOST $host\"\n    exit 1\n    ;;\nesac\n\n# Variables to be used inside the Makefile.am files.\nMSC_BASE_DIR=`pwd`\nAC_SUBST([MSC_BASE_DIR])\n\nMSC_VERSION_INFO=msc_version_info\nAC_SUBST([MSC_VERSION_INFO])\n\nMSC_VERSION_WITH_PATCHLEVEL=msc_version_with_patchlevel\nAC_SUBST([MSC_VERSION_WITH_PATCHLEVEL])\n\nMSC_VERSION=msc_version\nAC_SUBST([MSC_VERSION])\n\nMSC_GIT_VERSION=msc_version_git\nAC_SUBST([MSC_GIT_VERSION])\n\nAC_ARG_ENABLE(assertions,\n    [AS_HELP_STRING([--enable-assertions],[Turn on assertions feature: undefine NDEBUG])],\n\n    [case \"${enableval}\" in\n        yes) assertions=true ;;\n        no)  assertions=false ;;\n        *) AC_MSG_ERROR(bad value ${enableval} for --enable-assertions) ;;\n        esac],\n\n        [assertions=false]\n        )\n\nAC_ARG_ENABLE(debug-logs,\n    [AS_HELP_STRING([--disable-debug-logs],[Turn off the SecDebugLog feature])],\n\n    [case \"${enableval}\" in\n        yes) debugLogs=true ;;\n        no)  debugLogs=false ;;\n        *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug-logs) ;;\n    esac],\n\n    [debugLogs=true]\n    )\nif test \"$debugLogs\" != \"true\"; then\n    MODSEC_NO_LOGS=\"-DNO_LOGS=1\"\n    AC_SUBST(MODSEC_NO_LOGS)\nfi\n\n\n# Fuzzer\nAC_ARG_ENABLE(afl-fuzz,\n    [AS_HELP_STRING([--enable-afl-fuzz],[Turn on the afl fuzzer compilation utilities])],\n\n    [case \"${enableval}\" in\n        yes) aflFuzzer=true ;;\n        no)  aflFuzzer=false ;;\n        *) AC_MSG_ERROR(bad value ${enableval} for --enable-afl-fuzz) ;;\n    esac],\n\n    [aflFuzzer=false]\n    )\n\n# Examples\nAC_ARG_ENABLE(examples,\n    [AS_HELP_STRING([--enable-examples],[Turn on the examples compilation (default option)])],\n\n    [case \"${enableval}\" in\n        yes) buildExamples=true ;;\n        no)  buildExamples=false ;;\n        *) AC_MSG_ERROR(bad value ${enableval} for --enable-examples) ;;\n    esac],\n\n    [buildExamples=true]\n    )\n\n# Parser\nAC_ARG_ENABLE(parser-generation,\n    [AS_HELP_STRING([--enable-parser-generation],[Enables parser generation during the build])],\n\n    [case \"${enableval}\" in\n        yes) buildParser=true ;;\n        no)  buildParser=false ;;\n        *) AC_MSG_ERROR(bad value ${enableval} for --enable-parser-generation) ;;\n    esac],\n\n    [buildParser=false]\n    )\n\n\nif test $buildParser = true; then\n    AC_PROG_YACC\n    AC_PROG_LEX(noyywrap)\n    AC_PATH_PROG([FLEX], [flex])\n    test \"x$FLEX\" = \"x\" && AC_MSG_ERROR([flex is needed to build ModSecurity])\n\n    AC_PATH_PROG([BISON], [bison])\n    test \"x$BISON\" = \"x\" && AC_MSG_ERROR([bison is needed to build ModSecurity])\n\n    AC_PATH_PROG([YACC_INST], $YACC)\n    if test ! -f \"$srcdir/gram.c\"; then\n        if test -z \"$YACC_INST\"; then\n            AC_MSG_ERROR([yacc not found - unable to compile ModSecurity])\n        fi\n    fi\nfi\n\n\n# Decide if we want to build the tests or not.\nbuildTestUtilities=false\nif test \"x$YAJL_FOUND\" = \"x1\"; then\n    # Regression tests will not be able to run without the logging support.\n    # But we still have the unit tests.\n    # if test \"$debugLogs\" = \"true\"; then\n        buildTestUtilities=true\n    # fi\nfi\n\n\nAM_CONDITIONAL([TEST_UTILITIES], [test $buildTestUtilities = true])\nif test $buildTestUtilities = true; then\n    if test $debugLogs = true; then\n        if test -f ./test/test-list.sh; then\n            TEST_CASES=`./test/test-list.sh`\n        fi\n    fi\nfi\n\nAM_CONDITIONAL([EXAMPLES], [test $buildExamples = true])\nAM_CONDITIONAL([BUILD_PARSER], [test $buildParser = true])\nAM_CONDITIONAL([USE_MUTEX_ON_PM], [test $mutexPm = true])\n\n\n# General link options\nif test \"$PLATFORM\" != \"MacOSX\" -a \"$PLATFORM\" != \"OpenBSD\"; then\n    GLOBAL_LDADD=\"-lrt  \"\nfi\n\nif test \"$aflFuzzer\" == \"true\"; then\n    FUZZ_CPPCFLAGS=\"-fsanitize=address -fsanitize-coverage=4 \"\n    GLOBAL_LDADD=\"$GLOBAL_LDADD -fsanitize=address \"\n    GLOBAL_CPPFLAGS=\"$GLOBAL_CPPFLAGS $FUZZ_CPPCFLAGS\"\n    $buildExamples = false\nfi\n\ncase $assertions in\n    false) ASSERTIONS_CPPCFLAGS=\"-DNDEBUG\" ;;\n    true) ASSERTIONS_CPPCFLAGS=\"-UNDEBUG\" ;;\n    *) AC_MSG_ERROR(bad value ${assertions} for assertions) ;;\nesac\nGLOBAL_CPPFLAGS=\"$GLOBAL_CPPFLAGS $ASSERTIONS_CPPCFLAGS\"\n\nAC_SUBST(GLOBAL_LDADD)\nAC_SUBST(GLOBAL_CPPFLAGS)\n\nAM_CONDITIONAL([AFL_FUZZER], [test $aflFuzzer = true])\n\nGLOBAL_CFLAGS=\"\"\nAC_SUBST(GLOBAL_CFLAGS)\n\n# Files to be generated via autotools.\nAC_CONFIG_FILES([\\\n    modsecurity.pc \\\n    Makefile \\\n    doc/Makefile \\\n    src/Makefile \\\n    others/Makefile \\\n    tools/Makefile \\\n    tools/rules-check/Makefile\n    ])\n\nAM_COND_IF([TEST_UTILITIES],\n       [AC_CONFIG_FILES([test/Makefile test/benchmark/Makefile])])\n\nAM_COND_IF([EXAMPLES],\n       [AC_CONFIG_FILES([ \\\n            examples/Makefile \\\n            examples/simple_example_using_c/Makefile \\\n            examples/multiprocess_c/Makefile \\\n            examples/multithread/Makefile \\\n            examples/reading_logs_with_offset/Makefile \\\n            examples/reading_logs_via_rule_message/Makefile \\\n            examples/using_bodies_in_chunks/Makefile \\\n            ])])\n\nAM_COND_IF([AFL_FUZZER],\n       [AC_CONFIG_FILES([test/fuzzer/Makefile])])\n\nAM_COND_IF([BUILD_PARSER],\n       [AC_CONFIG_FILES([src/parser/Makefile])])\n\n\nAC_CONFIG_HEADERS([src/config.h])\n\n\n# Doxygen support\nDX_HTML_FEATURE(ON)\nDX_CHM_FEATURE(OFF)\nDX_CHI_FEATURE(OFF)\nDX_MAN_FEATURE(OFF)\nDX_RTF_FEATURE(OFF)\nDX_XML_FEATURE(OFF)\nDX_PDF_FEATURE(OFF)\nDX_PS_FEATURE(OFF)\n\nDX_INIT_DOXYGEN([ModSecurity],[doc/doxygen.cfg])\n\n# make check-valgrind\nAX_VALGRIND_DFLT([sgcheck], [off])\nAX_VALGRIND_CHECK\n\n# Generate the files.\nAC_OUTPUT\n\n\n# Print a fancy summary\necho \" \"\necho \" \"\necho \"ModSecurity - ${MSC_GIT_VERSION} for $PLATFORM\"\necho \" \"\necho \" Mandatory dependencies\"\nAS_ECHO_N(\"   + libInjection                                  ....\")\necho LIBINJECTION_VERSION\nAS_ECHO_N(\"   + Mbed TLS                                      ....\")\necho MBEDTLS_VERSION\nAS_ECHO_N(\"   + SecLang tests                                 ....\")\necho SECLANG_TEST_VERSION\n\necho \" \"\necho \" Optional dependencies\"\n\n\n\n## GeoIP - MaxMind\nif test \"x$GEOIP_FOUND\" = \"x0\" && test \"x$MAXMIND_FOUND\" = \"x0\"; then\n    echo \"   + GeoIP/MaxMind                                 ....not found\"\nfi\nif test \"x$GEOIP_FOUND\" = \"x1\" || test \"x$MAXMIND_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + GeoIP/MaxMind                                 ....found \")\n    echo \"\"\n    if test \"x$MAXMIND_FOUND\" = \"x1\"; then\n        echo \"      * (MaxMind) v${MAXMIND_VERSION}\"\n        echo \"         ${MAXMIND_DISPLAY}\"\n    fi\n    if test \"x$GEOIP_FOUND\" = \"x1\"; then\n        echo \"      * (GeoIP) v${GEOIP_VERSION}\"\n        echo \"         ${GEOIP_DISPLAY}\"\n    fi\nfi\nif test \"x$GEOIP_FOUND\" = \"x2\" && test \"x$MAXMIND_FOUND\" = \"x2\"; then\n    echo \"   + GeoIP/MaxMind                                 ....disabled\"\nfi\n\n\n## LibCurl\nif test \"x$CURL_FOUND\" = \"x0\"; then\n    echo \"   + LibCURL                                       ....not found\"\nfi\nif test \"x$CURL_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LibCURL                                       ....found \")\n    if ! test \"x$CURL_VERSION\" = \"x\"; then\n        echo \"v${CURL_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${CURL_DISPLAY}\"\nfi\nif test \"x$CURL_FOUND\" = \"x2\"; then\n    echo \"   + LibCURL                                       ....disabled\"\nfi\n\n\n## YAJL\nif test \"x$YAJL_FOUND\" = \"x0\"; then\n    echo \"   + YAJL                                          ....not found\"\nfi\nif test \"x$YAJL_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + YAJL                                          ....found \")\n    if ! test \"x$YAJL_VERSION\" = \"x\"; then\n        echo \"v${YAJL_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${YAJL_DISPLAY}\"\nfi\nif test \"x$YAJL_FOUND\" = \"x2\"; then\n    echo \"   + YAJL                                          ....disabled\"\nfi\n\n\n## LMDB\nif test \"x$LMDB_FOUND\" = \"x0\"; then\n    echo \"   + LMDB                                          ....not found\"\nfi\nif test \"x$LMDB_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LMDB                                          ....found \")\n    if ! test \"x$LMDB_VERSION\" = \"x\"; then\n        echo \"v${LMDB_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${LMDB_DISPLAY}\"\nfi\nif test \"x$LMDB_FOUND\" = \"x2\"; then\n    echo \"   + LMDB                                          ....disabled\"\nfi\n\n\n## libxml2\nif test \"x$LIBXML2_FOUND\" = \"x0\"; then\n    echo \"   + LibXML2                                       ....not found\"\nfi\nif test \"x$LIBXML2_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LibXML2                                       ....found \")\n    if ! test \"x$LIBXML2_VERSION\" = \"x\"; then\n        echo \"v${LIBXML2_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${LIBXML2_DISPLAY}\"\nfi\nif test \"x$LIBXML2_FOUND\" = \"x2\"; then\n    echo \"   + LibXML2                                       ....disabled\"\nfi\n\n\n## SSDEEP\nif test \"x$SSDEEP_FOUND\" = \"x0\"; then\n    echo \"   + SSDEEP                                        ....not found\"\nfi\nif test \"x$SSDEEP_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + SSDEEP                                        ....found \")\n    if ! test \"x$SSDEEP_VERSION\" = \"x\"; then\n        echo \"v${SSDEEP_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${SSDEEP_DISPLAY}\"\nfi\nif test \"x$SSDEEP_FOUND\" = \"x2\"; then\n    echo \"   + SSDEEP                                        ....disabled\"\nfi\n\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n    if ! test \"x$LUA_VERSION\" = \"x\"; then\n        echo \"v${LUA_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${LUA_DISPLAY}\"\nfi\nif test \"x$LUA_FOUND\" = \"x2\"; then\n    echo \"   + LUA                                           ....disabled\"\nfi\n\n\n## PCRE2\nif test \"x$PCRE2_FOUND\" = \"x0\"; then\n    echo \"   + PCRE2                                          ....not found\"\nfi\nif test \"x$PCRE2_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + PCRE2                                          ....found \")\n    if ! test \"x$PCRE2_VERSION\" = \"x\"; then\n        echo \"v${PCRE2_VERSION}\"\n    else\n        echo \"\"\n    fi\n    echo \"      ${PCRE2_DISPLAY}\"\nfi\nif test \"x$PCRE2_FOUND\" = \"x2\"; then\n    echo \"   + PCRE2                                          ....disabled\"\nfi\n\necho \" \"\necho \" Other Options\"\nif test $buildTestUtilities = true; then\n    if test $debugLogs = true; then\n        echo \"   + Test Utilities                                ....enabled\"\n    else\n        echo \"   + Test Utilities                                ....partially\"\n    fi\nelse\n    echo \"   + Test Utilities                                ....disabled\"\nfi\nif test $assertions = true; then\n    echo \"   + Assertions                                    ....enabled\"\nelse\n    echo \"   + Assertions                                    ....disabled\"\nfi\nif test $debugLogs = true; then\n    echo \"   + SecDebugLog                                   ....enabled\"\nelse\n    echo \"   + SecDebugLog                                   ....disabled\"\nfi\n\nif test \"$aflFuzzer\" = \"true\"; then\n    echo \"   + afl fuzzer                                    ....enabled\"\n    echo \"    ($FUZZ_CPPCFLAGS)\"\nelse\n    echo \"   + afl fuzzer                                    ....disabled\"\nfi\n\nif test \"$buildExamples\" = \"true\"; then\n    echo \"   + library examples                              ....enabled\"\nelse\n    echo \"   + library examples                              ....disabled\"\nfi\n\nif test \"$buildParser\" = \"true\"; then\n    echo \"   + Building parser                               ....enabled\"\nelse\n    echo \"   + Building parser                               ....disabled\"\nfi\n\nif test \"$mutexPm\" = \"true\"; then\n    echo \"   + Treating pm operations as critical section    ....enabled\"\nelse\n    echo \"   + Treating pm operations as critical section    ....disabled\"\nfi\n\n\necho \" \"\n\n\nif test \"$aflFuzzer\" = \"true\"; then\n    echo \"WARNING: afl fuzzer was enabled. Make sure you are using the\"\n    echo \" 'afl-clang-fast' as the compiler, otherwise the compilation\"\n    echo \"  will fail.\"\n    echo \" \"\n    echo \" You can set the compiler using:\"\n    echo \" \"\n    echo \"  $ export CXX=afl-clang-fast++ \"\n    echo \"  $ export CC=afl-clang-fast \"\n    echo \" \"\nfi\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "headers",
          "type": "tree",
          "content": null
        },
        {
          "name": "modsecurity.conf-recommended",
          "type": "blob",
          "size": 11.072265625,
          "content": "# -- Rule engine initialization ----------------------------------------------\n\n# Enable ModSecurity, attaching it to every transaction. Use detection\n# only to start with, because that minimises the chances of post-installation\n# disruption.\n#\nSecRuleEngine DetectionOnly\n\n\n# -- Request body handling ---------------------------------------------------\n\n# Allow ModSecurity to access request bodies. If you don't, ModSecurity\n# won't be able to see any POST parameters, which opens a large security\n# hole for attackers to exploit.\n#\nSecRequestBodyAccess On\n\n\n# Enable XML request body parser.\n# Initiate XML Processor in case of xml content-type\n#\nSecRule REQUEST_HEADERS:Content-Type \"^(?:application(?:/soap\\+|/)|text/)xml\" \\\n     \"id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML\"\n\n# Enable JSON request body parser.\n# Initiate JSON Processor in case of JSON content-type; change accordingly\n# if your application does not use 'application/json'\n#\nSecRule REQUEST_HEADERS:Content-Type \"^application/json\" \\\n     \"id:'200001',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON\"\n\n# Sample rule to enable JSON request body parser for more subtypes.\n# Uncomment or adapt this rule if you want to engage the JSON\n# Processor for \"+json\" subtypes\n#\n#SecRule REQUEST_HEADERS:Content-Type \"^application/[a-z0-9.-]+[+]json\" \\\n#     \"id:'200006',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON\"\n\n# Maximum request body size we will accept for buffering. If you support\n# file uploads then the value given on the first line has to be as large\n# as the largest file you are willing to accept. The second value refers\n# to the size of data, with files excluded. You want to keep that value as\n# low as practical.\n#\nSecRequestBodyLimit 13107200\nSecRequestBodyNoFilesLimit 131072\n\n# What to do if the request body size is above our configured limit.\n# Keep in mind that this setting will automatically be set to ProcessPartial\n# when SecRuleEngine is set to DetectionOnly mode in order to minimize\n# disruptions when initially deploying ModSecurity.\n#\nSecRequestBodyLimitAction Reject\n\n# Maximum parsing depth allowed for JSON objects. You want to keep this\n# value as low as practical.\n#\nSecRequestBodyJsonDepthLimit 512\n\n# Maximum number of args allowed per request. You want to keep this\n# value as low as practical. The value should match that in rule 200007.\nSecArgumentsLimit 1000\n\n# If SecArgumentsLimit has been set, you probably want to reject any\n# request body that has only been partly parsed. The value used in this\n# rule should match what was used with SecArgumentsLimit\nSecRule &ARGS \"@ge 1000\" \\\n\"id:'200007', phase:2,t:none,log,deny,status:400,msg:'Failed to fully parse request body due to large argument count',severity:2\"\n\n# Verify that we've correctly processed the request body.\n# As a rule of thumb, when failing to process a request body\n# you should reject the request (when deployed in blocking mode)\n# or log a high-severity alert (when deployed in detection-only mode).\n#\nSecRule REQBODY_ERROR \"!@eq 0\" \\\n\"id:'200002', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2\"\n\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n\"id:'200003',phase:2,t:none,log,deny,status:400, \\\nmsg:'Multipart request body failed strict validation: \\\nPE %{REQBODY_PROCESSOR_ERROR}, \\\nBQ %{MULTIPART_BOUNDARY_QUOTED}, \\\nBW %{MULTIPART_BOUNDARY_WHITESPACE}, \\\nDB %{MULTIPART_DATA_BEFORE}, \\\nDA %{MULTIPART_DATA_AFTER}, \\\nHF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n# Did we see anything that might be a boundary?\n#\n# Here is a short description about the ModSecurity Multipart parser: the\n# parser returns with value 0, if all \"boundary-like\" line matches with\n# the boundary string which given in MIME header. In any other cases it returns\n# with different value, eg. 1 or 2.\n#\n# The RFC 1341 descript the multipart content-type and its syntax must contains\n# only three mandatory lines (above the content):\n# * Content-Type: multipart/mixed; boundary=BOUNDARY_STRING\n# * --BOUNDARY_STRING\n# * --BOUNDARY_STRING--\n#\n# First line indicates, that this is a multipart content, second shows that\n# here starts a part of the multipart content, third shows the end of content.\n#\n# If there are any other lines, which starts with \"--\", then it should be\n# another boundary id - or not.\n#\n# After 3.0.3, there are two kinds of types of boundary errors: strict and permissive.\n#\n# If multipart content contains the three necessary lines with correct order, but\n# there are one or more lines with \"--\", then parser returns with value 2 (non-zero).\n#\n# If some of the necessary lines (usually the start or end) misses, or the order\n# is wrong, then parser returns with value 1 (also a non-zero).\n#\n# You can choose, which one is what you need. The example below contains the\n# 'strict' mode, which means if there are any lines with start of \"--\", then\n# ModSecurity blocked the content. But the next, commented example contains\n# the 'permissive' mode, then you check only if the necessary lines exists in\n# correct order. Whit this, you can enable to upload PEM files (eg \"----BEGIN..\"),\n# or other text files, which contains eg. HTTP headers.\n#\n# The difference is only the operator - in strict mode (first) the content blocked\n# in case of any non-zero value. In permissive mode (second, commented) the\n# content blocked only if the value is explicit 1. If it 0 or 2, the content will\n# allowed.\n#\n\n#\n# See #1747 and #1924 for further information on the possible values for\n# MULTIPART_UNMATCHED_BOUNDARY.\n#\nSecRule MULTIPART_UNMATCHED_BOUNDARY \"@eq 1\" \\\n    \"id:'200004',phase:2,t:none,log,deny,msg:'Multipart parser detected a possible unmatched boundary.'\"\n\n\n# PCRE Tuning\n# We want to avoid a potential RegEx DoS condition\n#\nSecPcreMatchLimit 1000\nSecPcreMatchLimitRecursion 1000\n\n# Some internal errors will set flags in TX and we will need to look for these.\n# All of these are prefixed with \"MSC_\".  The following flags currently exist:\n#\n# MSC_PCRE_LIMITS_EXCEEDED: PCRE match limits were exceeded.\n#\nSecRule TX:/^MSC_/ \"!@streq 0\" \\\n    \"id:'200005',phase:2,t:none,log,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'\"\n\n\n# -- Response body handling --------------------------------------------------\n\n# Allow ModSecurity to access response bodies. \n# You should have this directive enabled in order to identify errors\n# and data leakage issues.\n# \n# Do keep in mind that enabling this directive does increases both\n# memory consumption and response latency.\n#\nSecResponseBodyAccess On\n\n# Which response MIME types do you want to inspect? You should adjust the\n# configuration below to catch documents but avoid static files\n# (e.g., images and archives).\n#\nSecResponseBodyMimeType text/plain text/html text/xml\n\n# Buffer response bodies of up to 512 KB in length.\nSecResponseBodyLimit 524288\n\n# What happens when we encounter a response body larger than the configured\n# limit? By default, we process what we have and let the rest through.\n# That's somewhat less secure, but does not break any legitimate pages.\n#\nSecResponseBodyLimitAction ProcessPartial\n\n\n# -- Filesystem configuration ------------------------------------------------\n\n# The location where ModSecurity stores temporary files (for example, when\n# it needs to handle a file upload that is larger than the configured limit).\n# \n# This default setting is chosen due to all systems have /tmp available however, \n# this is less than ideal. It is recommended that you specify a location that's private.\n#\nSecTmpDir /tmp/\n\n# The location where ModSecurity will keep its persistent data.  This default setting \n# is chosen due to all systems have /tmp available however, it\n# too should be updated to a place that other users can't access.\n#\nSecDataDir /tmp/\n\n\n# -- File uploads handling configuration -------------------------------------\n\n# The location where ModSecurity stores intercepted uploaded files. This\n# location must be private to ModSecurity. You don't want other users on\n# the server to access the files, do you?\n#\n#SecUploadDir /opt/modsecurity/var/upload/\n\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n# Uploaded files are by default created with permissions that do not allow\n# any other user to access them. You may need to relax that if you want to\n# interface ModSecurity to an external program (e.g., an anti-virus).\n#\n#SecUploadFileMode 0600\n\n\n# -- Debug log configuration -------------------------------------------------\n\n# The default debug log configuration is to duplicate the error, warning\n# and notice messages from the error log.\n#\n#SecDebugLog /opt/modsecurity/var/log/debug.log\n#SecDebugLogLevel 3\n\n\n# -- Audit log configuration -------------------------------------------------\n\n# Log the transactions that are marked by a rule, as well as those that\n# trigger a server error (determined by a 5xx or 4xx, excluding 404,  \n# level response status codes).\n#\nSecAuditEngine RelevantOnly\nSecAuditLogRelevantStatus \"^(?:5|4(?!04))\"\n\n# Log everything we know about a transaction.\nSecAuditLogParts ABIJDEFHZ\n\n# Use a single file for logging. This is much easier to look at, but\n# assumes that you will use the audit log only ocassionally.\n#\nSecAuditLogType Serial\nSecAuditLog /var/log/modsec_audit.log\n\n# Specify the path for concurrent audit logging.\n#SecAuditLogStorageDir /opt/modsecurity/var/audit/\n\n\n# -- Miscellaneous -----------------------------------------------------------\n\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n# Settle on version 0 (zero) cookies, as that is what most applications\n# use. Using an incorrect cookie version may open your installation to\n# evasion attacks (against the rules that examine named cookies).\n#\nSecCookieFormat 0\n\n# Specify your Unicode Code Point.\n# This mapping is used by the t:urlDecodeUni transformation function\n# to properly map encoded data to your language. Properly setting\n# these directives helps to reduce false positives and negatives.\n#\nSecUnicodeMapFile unicode.mapping 20127\n\n# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\n# NB: As of April 2022, there is no longer any advantage to turning this\n# setting On, as there is no active receiver for the information.\nSecStatusEngine Off\n\n"
        },
        {
          "name": "modsecurity.pc.in",
          "type": "blob",
          "size": 0.3681640625,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: ModSecurity\nDescription: ModSecurity API\nVersion: @MSC_VERSION_WITH_PATCHLEVEL@\nCflags: -I@includedir@\nLibs: -L@libdir@ -lmodsecurity\nLibs.private: @CURL_LDADD@ @GEOIP_LDADD@ @MAXMIND_LDADD@ @GLOBAL_LDADD@ @LIBXML2_LDADD@ @LMDB_LDADD@ @LUA_LDADD@ @PCRE_LDADD@ @SSDEEP_LDADD@ @YAJL_LDADD@\n"
        },
        {
          "name": "others",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "unicode.mapping",
          "type": "blob",
          "size": 51.900390625,
          "content": "(MAC - Roman)\r\n\r\n\r\n(MAC - Icelandic)\r\n\r\n\r\n1250  (ANSI - Central Europe)\r\n00a1:21 00a2:63 00a3:4c 00a5:59 00aa:61 00b2:32 00b3:33 00b9:31 00ba:6f 00bc:31 00bd:31 00be:33 00c0:41 00c3:41 00c5:41 00c6:41 00c8:45 00ca:45 00cc:49 00cf:49 00d1:4e 00d2:4f 00d5:4f 00d8:4f 00d9:55 00db:55 00e0:61 00e3:61 00e5:61 00e6:61 00e8:65 00ea:65 00ec:69 00ef:69 00f1:6e 00f2:6f 00f5:6f 00f8:6f 00f9:75 00fb:75 00ff:79 0100:41 0101:61 0108:43 0109:63 010a:43 010b:63 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 013b:4c 013c:6c 0145:4e 0146:6e 014c:4f 014d:6f 014e:4f 014f:6f 0152:4f 0153:6f 0156:52 0157:72 015c:53 015d:73 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0180:62 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c0:7c 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2032:27 2035:60 203c:21 2044:2f 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2082:32 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:50 2119:50 211a:51 211b:52 211c:52 211d:52 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2191:5e 2194:2d 2195:7c 21a8:7c 2212:2d 2215:2f 2216:5c 2217:2a 221f:4c 2223:7c 2236:3a 223c:7e 2303:5e 2329:3c 232a:3e 2502:2d 250c:2d 2514:4c 2518:2d 251c:2b 2524:2b 252c:54 2534:2b 253c:2b 2550:3d 2554:2d 255a:4c 255d:2d 2566:54 256c:2b 2580:2d 2584:2d 2588:2d 2591:2d 2592:2d 2593:2d 25ac:2d 25b2:5e 25ba:3e 25c4:3c 25cb:30 25d9:30 263c:30 2640:2b 2642:3e 266a:64 266b:64 2758:7c 3000:20 3008:3c 3009:3e 301a:5b 301b:5d ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1251  (ANSI - Cyrillic)\r\n00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 203c:21 2190:3c 2191:5e 2192:3e 2193:76 2194:2d 221a:76 221f:4c 2500:2d 250c:2d 2514:4c 2518:2d 251c:2b 2524:2b 252c:54 2534:2b 253c:2b 2550:3d 2552:2d 2558:4c 2559:4c 255a:4c 255b:2d 255c:2d 255d:2d 2564:54 2565:54 2566:54 256a:2b 256b:2b 256c:2b 2580:2d 2584:2d 2588:2d 2591:2d 2592:2d 2593:2d 25ac:2d 25b2:5e 25ba:3e 25c4:3c 25cb:30 25d9:30 263a:4f 263b:4f 263c:30 2640:2b 2642:3e 266a:64 266b:64 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1252  (ANSI - Latin I)\r\n0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0179:5a 017b:5a 017c:7a 0180:62 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c0:7c 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c8:27 02cb:60 02cd:5f 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 037e:3b 0393:47 0398:54 03a3:53 03a6:46 03a9:4f 03b1:61 03b4:64 03b5:65 03c0:70 03c3:73 03c4:74 03c6:66 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2017:3d 2032:27 2035:60 2044:2f 2074:34 2075:35 2076:36 2077:37 2078:38 207f:6e 2080:30 2081:31 2082:32 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20a7:50 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:50 2119:50 211a:51 211b:52 211c:52 211d:52 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2212:2d 2215:2f 2216:5c 2217:2a 221a:76 221e:38 2223:7c 2229:6e 2236:3a 223c:7e 2261:3d 2264:3d 2265:3d 2303:5e 2320:28 2321:29 2329:3c 232a:3e 2500:2d 250c:2b 2510:2b 2514:2b 2518:2b 251c:2b 252c:2d 2534:2d 253c:2b 2550:2d 2552:2b 2553:2b 2554:2b 2555:2b 2556:2b 2557:2b 2558:2b 2559:2b 255a:2b 255b:2b 255c:2b 255d:2b 2564:2d 2565:2d 2566:2d 2567:2d 2568:2d 2569:2d 256a:2b 256b:2b 256c:2b 2584:5f 2758:7c 3000:20 3008:3c 3009:3e 301a:5b 301b:5d ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1253  (ANSI - Greek)\r\n00b4:2f 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 037e:3b 203c:21 2190:3c 2191:5e 2192:3e 2193:76 2194:2d 221f:4c 2500:2d 250c:2d 2514:4c 2518:2d 251c:2b 2524:2b 252c:54 2534:2b 253c:2b 2550:3d 2554:2d 255a:4c 255d:2d 2566:54 256c:2b 2580:2d 2584:2d 2588:2d 2591:2d 2592:2d 2593:2d 25ac:2d 25b2:5e 25ba:3e 25c4:3c 25cb:30 25d9:30 263a:4f 263b:4f 263c:30 2640:2b 2642:3e 266a:64 266b:64 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1254  (ANSI - Turkish)\r\n00dd:59 00fd:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c0:7c 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c7:5e 02c8:27 02cb:60 02cd:5f 02d8:5e 02d9:27 0300:60 0302:5e 0331:5f 0332:5f 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2032:27 2035:60 203c:21 2044:2f 2074:34 2075:35 2076:36 2077:37 2078:38 2081:30 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:50 2119:50 211a:51 211b:52 211c:52 211d:52 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2191:5e 2193:76 2194:2d 2195:7c 21a8:7c 2212:2d 2215:2f 2216:5c 2217:2a 221f:4c 2223:7c 2236:3a 223c:7e 2303:5e 2329:3c 232a:3e 2502:2d 250c:2d 2514:4c 2518:2d 251c:2b 2524:2b 252c:54 2534:2b 253c:2b 2550:3d 2554:2d 255a:4c 255d:2d 2566:54 256c:2b 2580:2d 2584:2d 2588:2d 2591:2d 2592:2d 2593:2d 25ac:2d 25b2:5e 25ba:3e 25c4:3c 25cb:30 25d9:30 263a:4f 263b:4f 263c:30 2640:2b 2642:3e 266a:64 266b:64 2758:7c 3000:20 3008:3c 3009:3e 301a:5b 301b:3d 301d:22 301e:22 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1255  (ANSI - Hebrew)\r\n0191:46 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1256  (ANSI - Arabic)\r\n0620:41 0621:41 0622:43 0623:45 0624:45 0625:45 0626:45 0627:49 0628:49 0629:4f 062a:55 062b:55 062c:55 062d:46 062e:43 062f:44 0630:45 0631:46 0632:47 0633:48 0634:49 0635:4a 0636:4b 0637:4c 0638:4d 0639:4e 063a:4f 0641:41 0642:42 0643:43 0644:44 0645:45 0646:46 0647:47 0648:48 0649:49 064a:4a 064b:4b 064c:4c 064d:4d 064e:4e 064f:4f 0650:50 0651:51 0652:52 \r\n\r\n1257  (ANSI - Baltic)\r\nff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n1258  (ANSI/OEM - Viet Nam)\r\nff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n20127 (US-ASCII)\r\n00a0:20 00a1:21 00a2:63 00a4:24 00a5:59 00a6:7c 00a9:43 00aa:61 00ab:3c 00ad:2d 00ae:52 00b2:32 00b3:33 00b7:2e 00b8:2c 00b9:31 00ba:6f 00bb:3e 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c6:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d0:44 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e6:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:2c 201c:22 201d:22 201e:22 2022:2e 2026:2e 2032:27 2035:60 2039:3c 203a:3e 2122:54 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n20261 (T.61)\r\nf8dd:5c f8de:5e f8df:60 f8e0:7b f8fc:7d f8fd:7e f8fe:7f \r\n\r\n20866 (Russian - KOI8)\r\n00a7:15 00ab:3c 00ad:2d 00ae:52 00b1:2b 00b6:14 00bb:3e 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 2013:2d 2014:2d 2018:27 2019:27 201a:27 201c:22 201d:22 201e:22 2022:07 2026:3a 2030:25 2039:3c 203a:3e 203c:13 2122:54 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 221f:1c 2302:7f 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e \r\n\r\n28591 (ISO 8859-1 Latin I)\r\n0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:2c 201c:22 201d:22 201e:22 2022:2e 2026:2e 2032:27 2035:60 2039:3c 203a:3e 2122:54 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n28592 (ISO 8859-2 Central Europe)\r\n00a1:21 00a2:63 00a5:59 00a6:7c 00a9:43 00aa:61 00ab:3c 00ae:52 00b2:32 00b3:33 00b7:2e 00b9:31 00ba:6f 00bb:3e 00c0:41 00c3:41 00c5:41 00c6:41 00c8:45 00ca:45 00cc:49 00cf:49 00d0:44 00d1:4e 00d2:4f 00d5:4f 00d8:4f 00d9:55 00db:55 00e0:61 00e3:61 00e5:61 00e6:61 00e8:65 00ea:65 00ec:69 00ef:69 00f1:6e 00f2:6f 00f5:6f 00f8:6f 00f9:75 00fb:75 00ff:79 0100:41 0101:61 0108:43 0109:63 010a:43 010b:63 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 013b:4c 013c:6c 0145:4e 0146:6e 014c:4f 014d:6f 014e:4f 014f:6f 0152:4f 0153:6f 0156:52 0157:72 015c:53 015d:73 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0180:62 0189:44 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:2c 201c:22 201d:22 201e:22 2022:2e 2026:2e 2032:27 2035:60 2039:3c 203a:3e 2122:54 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n28605 (ISO 8859-15 Latin 9)\r\n00a6:7c 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0138:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014a:4e 014b:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:54 0169:74 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0179:5a 017b:5a 017c:7a 0180:62 0189:44 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:2c 201c:22 201d:22 201e:22 2022:2e 2026:2e 2032:27 2035:60 2039:3c 203a:3e 2122:54 ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n37    (IBM EBCDIC - U.S./Canada)\r\n0004:37 0005:2d 0006:2e 0007:2f 0008:16 0009:05 000a:25 0014:3c 0015:3d 0016:32 0017:26 001a:3f 001b:27 0020:40 0021:5a 0022:7f 0023:7b 0024:5b 0025:6c 0026:50 0027:7d 0028:4d 0029:5d 002a:5c 002b:4e 002c:6b 002d:60 002e:4b 002f:61 003a:7a 003b:5e 003c:4c 003d:7e 003e:6e 003f:6f 0040:7c 005f:6d 0060:79 007c:4f 007f:07 0080:20 0081:21 0082:22 0083:23 0084:24 0085:15 0086:06 0087:17 0088:28 0089:29 008a:2a 008b:2b 008c:2c 008d:09 008e:0a 008f:1b 0090:30 0091:31 0092:1a 0093:33 0094:34 0095:35 0096:36 0097:08 0098:38 0099:39 009a:3a 009b:3b 009c:04 009d:14 009e:3e 00a0:41 00a2:4a 00a6:6a 00ac:5f 00c0:64 00c1:65 00c2:62 00c3:66 00c4:63 00c5:67 00c7:68 00c8:74 00c9:71 00ca:72 00cb:73 00cc:78 00cd:75 00ce:76 00cf:77 00d1:69 00df:59 00e0:44 00e1:45 00e2:42 00e3:46 00e4:43 00e5:47 00e7:48 00e8:54 00e9:51 00ea:52 00eb:53 00ec:58 00ed:55 00ee:56 00ef:57 00f1:49 00f8:70 ff01:5a ff02:7f ff03:7b ff04:5b ff05:6c ff06:50 ff07:7d ff08:4d ff09:5d ff0a:5c ff0b:4e ff0c:6b ff0d:60 ff0e:4b ff0f:61 ff1a:7a ff1b:5e ff1c:4c ff1d:7e ff1e:6e ff20:7c ff3f:6d ff40:79 ff5c:4f \r\n\r\n437   (OEM - United States)\r\n00a4:0f 00a7:15 00a8:22 00a9:63 00ad:2d 00ae:72 00af:5f 00b3:33 00b4:27 00b6:14 00b8:2c 00b9:31 00be:5f 00c0:41 00c1:41 00c2:41 00c3:41 00c8:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d0:44 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d7:78 00d8:4f 00d9:55 00da:55 00db:55 00dd:59 00de:5f 00e3:61 00f0:64 00f5:6f 00f8:6f 00fd:79 00fe:5f 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c0:7c 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02ca:27 02cb:60 02cd:5f 02dc:7e 0300:60 0301:27 0302:5e 0303:7e 0308:22 030e:22 0327:2c 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2017:5f 2018:60 2019:27 201a:2c 201c:22 201d:22 201e:2c 2020:2b 2022:07 2026:2e 2030:25 2032:27 2035:60 2039:3c 203a:3e 203c:13 2044:2f 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2082:32 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20dd:09 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:50 2119:50 211a:51 211b:52 211c:52 211d:52 2122:54 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2212:2d 2215:2f 2216:5c 2217:2a 221f:1c 2223:7c 2236:3a 223c:7e 2302:7f 2303:5e 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 2758:7c 3000:20 3007:09 3008:3c 3009:3e 301a:5b 301b:5d ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n500   (IBM EBCDIC - International)\r\n0004:37 0005:2d 0006:2e 0007:2f 0008:16 0009:05 000a:25 0014:3c 0015:3d 0016:32 0017:26 001a:3f 001b:27 0020:40 0021:4f 0022:7f 0023:7b 0024:5b 0025:6c 0026:50 0027:7d 0028:4d 0029:5d 002a:5c 002b:4e 002c:6b 002d:60 002e:4b 002f:61 003a:7a 003b:5e 003c:4c 003d:7e 003e:6e 003f:6f 0040:7c 005b:4a 005d:5a 005e:5f 005f:6d 0060:79 007f:07 0080:20 0081:21 0082:22 0083:23 0084:24 0085:15 0086:06 0087:17 0088:28 0089:29 008a:2a 008b:2b 008c:2c 008d:09 008e:0a 008f:1b 0090:30 0091:31 0092:1a 0093:33 0094:34 0095:35 0096:36 0097:08 0098:38 0099:39 009a:3a 009b:3b 009c:04 009d:14 009e:3e 00a0:41 00a6:6a 00c0:64 00c1:65 00c2:62 00c3:66 00c4:63 00c5:67 00c7:68 00c8:74 00c9:71 00ca:72 00cb:73 00cc:78 00cd:75 00ce:76 00cf:77 00d1:69 00df:59 00e0:44 00e1:45 00e2:42 00e3:46 00e4:43 00e5:47 00e7:48 00e8:54 00e9:51 00ea:52 00eb:53 00ec:58 00ed:55 00ee:56 00ef:57 00f1:49 00f8:70 ff01:4f ff02:7f ff03:7b ff04:5b ff05:6c ff06:50 ff07:7d ff08:4d ff09:5d ff0a:5c ff0b:4e ff0c:6b ff0d:60 ff0e:4b ff0f:61 ff1a:7a ff1b:5e ff1c:4c ff1d:7e ff1e:6e ff20:7c ff3b:4a ff3d:5a ff3e:5f ff3f:6d ff40:79 \r\n\r\n850   (OEM - Multilingual Latin I)\r\n0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01a9:53 01ab:74 01ae:54 01af:55 01b0:75 01b6:5a 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02cb:27 02cd:5f 02dc:7e 0300:27 0302:5e 0303:7e 030e:22 0331:5f 0332:5f 037e:3b 0393:47 03a3:53 03a6:46 03a9:4f 03b1:61 03b4:64 03b5:65 03c0:70 03c3:73 03c4:74 03c6:66 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:27 201c:22 201d:22 201e:22 2022:07 2024:07 2026:2e 2030:25 2039:3c 203a:3e 203c:13 2044:2f 2070:30 2074:34 2075:35 2076:36 2077:37 2078:39 207f:6e 2080:30 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20a7:50 20dd:4f 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:50 2119:50 211a:51 211b:52 211c:52 211d:52 2122:54 2124:5a 2126:4f 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2211:53 2212:2d 2215:2f 2216:2f 2217:2a 2219:07 221a:56 221e:38 221f:1c 2229:6e 2236:3a 223c:7e 2248:7e 2261:3d 2264:3d 2265:3d 2302:7f 2303:5e 2320:28 2321:29 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 2713:56 3000:20 3007:4f 3008:3c 3009:3e 301a:5b 301b:5d ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n860   (OEM - Portuguese)\r\n00a4:0f 00a5:59 00a7:15 00a8:22 00a9:63 00ad:5f 00ae:72 00af:16 00b3:33 00b4:2f 00b6:14 00b8:2c 00b9:31 00be:33 00c4:41 00c5:41 00c6:41 00cb:45 00ce:49 00cf:49 00d0:44 00d6:4f 00d7:58 00d8:4f 00db:55 00dd:59 00de:54 00e4:61 00e5:61 00e6:61 00eb:65 00ee:69 00ef:69 00f0:64 00f6:6f 00f8:6f 00fb:75 00fd:79 00fe:74 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:5c 0161:7c 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0191:46 0192:66 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c0:7c 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 0278:66 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02c9:16 02ca:2f 02cb:60 02cd:5f 02dc:7e 0300:60 0301:2f 0302:5e 0303:7e 0304:16 0305:16 0308:22 030e:22 0327:2c 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:5f 2011:5f 2013:5f 2014:5f 2017:5f 2018:27 2019:27 201a:2c 201c:22 201d:22 201e:22 2022:07 2024:07 2026:2e 2030:25 2032:27 2035:60 2039:3c 203a:3e 203c:13 2044:2f 2070:30 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20dd:4f 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:70 2119:50 211a:51 211b:52 211c:52 211d:52 2122:74 2124:5a 2128:5a 212a:4b 212b:41 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2205:4f 2212:5f 2215:2f 2216:5c 2217:2a 221f:1c 2223:7c 2236:3a 223c:7e 22c5:07 2302:7f 2303:5e 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 3000:20 3007:4f 3008:3c 3009:3e 301a:5b 301b:5d 30fb:07 \r\n\r\n861   (OEM - Icelandic)\r\n00a2:63 00a4:0f 00a5:59 00a7:15 00a8:22 00a9:63 00aa:61 00ad:5f 00ae:72 00af:16 00b3:33 00b4:2f 00b6:14 00b8:2c 00b9:31 00ba:6f 00be:33 00c0:41 00c2:41 00c3:41 00c8:45 00ca:45 00cb:45 00cc:49 00ce:49 00cf:49 00d1:4e 00d2:4f 00d4:4f 00d5:4f 00d7:58 00d9:55 00db:55 00e3:61 00ec:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f5:6f 00f9:75 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 0278:66 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02c9:16 02ca:2f 02cb:60 02cd:5f 02dc:7e 0300:60 0301:2f 0302:5e 0303:7e 0304:16 0305:16 0308:22 030e:22 0327:2c 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2017:5f 2018:27 2019:27 201a:27 201c:22 201d:22 201e:22 2022:07 2024:07 2026:07 2030:25 2032:27 2035:27 2039:3c 203a:3e 203c:13 2044:2f 2070:30 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20dd:4f 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:70 2119:50 211a:51 211b:52 211c:52 211d:52 2122:74 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2205:4f 2212:5f 2215:2f 2216:5c 2217:2a 221f:1c 2223:7c 2236:3a 223c:7e 22c5:07 2302:7f 2303:5e 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 3000:20 3007:4f 3008:3c 3009:3e 301a:5b 301b:5d 30fb:07 \r\n\r\n863   (OEM - Canadian French)\r\n00a1:21 00a5:59 00a9:63 00aa:61 00ad:16 00ae:72 00b9:33 00ba:6f 00c1:41 00c3:41 00c4:41 00c5:41 00c6:41 00cc:49 00cd:49 00d0:44 00d1:4e 00d2:4f 00d3:4f 00d5:4f 00d6:4f 00d7:58 00d8:4f 00da:55 00dd:59 00de:54 00e1:61 00e3:61 00e4:61 00e5:61 00e6:61 00ec:69 00ed:69 00f0:64 00f1:6e 00f2:6f 00f5:6f 00f6:6f 00f8:6f 00fd:79 00fe:74 00ff:79 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:22 02ba:27 02bc:27 02c4:5e 02c6:5e 02c8:27 02c9:16 02cb:60 02cd:5f 02dc:7e 0300:60 0302:5e 0303:7e 0304:16 0305:16 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2018:27 2019:27 201a:27 201c:22 201d:22 201e:22 2022:07 2024:07 2026:07 2030:25 2032:27 2035:27 2039:3c 203a:3e 203c:13 2044:2f 2070:30 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20a7:50 20dd:4f 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:70 2119:50 211a:51 211b:52 211c:52 211d:52 2122:74 2124:5a 2128:5a 212a:4b 212b:41 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2205:4f 2212:5f 2215:2f 2216:5c 2217:2a 221f:1c 2223:7c 2236:3a 223c:7e 22c5:07 2302:7f 2303:5e 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 3000:20 3007:4f 3008:3c 3009:3e 301a:5b 301b:5d 30fb:07 \r\n\r\n865   (OEM - Nordic)\r\n00a2:63 00a5:59 00a7:15 00a8:22 00a9:63 00ad:5f 00ae:72 00af:16 00b3:33 00b4:2f 00b6:14 00b8:2c 00b9:31 00bb:3e 00be:33 00c0:41 00c1:41 00c2:41 00c3:41 00c8:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d0:44 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d7:58 00d9:55 00da:55 00db:55 00dd:59 00de:54 00e3:61 00f0:64 00f5:6f 00fd:79 00fe:74 0100:41 0101:61 0102:41 0103:61 0104:41 0105:61 0106:43 0107:63 0108:43 0109:63 010a:43 010b:63 010c:43 010d:63 010e:44 010f:64 0110:44 0111:64 0112:45 0113:65 0114:45 0115:65 0116:45 0117:65 0118:45 0119:65 011a:45 011b:65 011c:47 011d:67 011e:47 011f:67 0120:47 0121:67 0122:47 0123:67 0124:48 0125:68 0126:48 0127:68 0128:49 0129:69 012a:49 012b:69 012c:49 012d:69 012e:49 012f:69 0130:49 0131:69 0134:4a 0135:6a 0136:4b 0137:6b 0139:4c 013a:6c 013b:4c 013c:6c 013d:4c 013e:6c 0141:4c 0142:6c 0143:4e 0144:6e 0145:4e 0146:6e 0147:4e 0148:6e 014c:4f 014d:6f 014e:4f 014f:6f 0150:4f 0151:6f 0152:4f 0153:6f 0154:52 0155:72 0156:52 0157:72 0158:52 0159:72 015a:53 015b:73 015c:53 015d:73 015e:53 015f:73 0160:53 0161:73 0162:54 0163:74 0164:54 0165:74 0166:54 0167:74 0168:55 0169:75 016a:55 016b:75 016c:55 016d:75 016e:55 016f:75 0170:55 0171:75 0172:55 0173:75 0174:57 0175:77 0176:59 0177:79 0178:59 0179:5a 017b:5a 017c:7a 017d:5a 017e:7a 0180:62 0189:44 0197:49 019a:6c 019f:4f 01a0:4f 01a1:6f 01ab:74 01ae:54 01af:55 01b0:75 01b6:7a 01c3:21 01cd:41 01ce:61 01cf:49 01d0:69 01d1:4f 01d2:6f 01d3:55 01d4:75 01d5:55 01d6:75 01d7:55 01d8:75 01d9:55 01da:75 01db:55 01dc:75 01de:41 01df:61 01e4:47 01e5:67 01e6:47 01e7:67 01e8:4b 01e9:6b 01ea:4f 01eb:6f 01ec:4f 01ed:6f 01f0:6a 0261:67 02b9:27 02ba:22 02bc:27 02c4:5e 02c6:5e 02c8:27 02c9:16 02ca:2f 02cb:60 02cd:5f 02dc:7e 0300:60 0301:2f 0302:5e 0303:7e 0304:16 0305:16 0308:22 030e:22 0327:2c 0331:5f 0332:5f 037e:3b 04bb:68 0589:3a 066a:25 2000:20 2001:20 2002:20 2003:20 2004:20 2005:20 2006:20 2010:2d 2011:2d 2013:2d 2014:2d 2017:5f 2018:27 2019:27 201a:27 201c:22 201d:22 201e:22 2022:07 2024:07 2026:07 2030:25 2032:27 2035:27 2039:3c 203a:3e 203c:13 2044:2f 2070:30 2074:34 2075:35 2076:36 2077:37 2078:38 2080:30 2081:31 2083:33 2084:34 2085:35 2086:36 2087:37 2088:38 2089:39 20dd:4f 2102:43 2107:45 210a:67 210b:48 210c:48 210d:48 210e:68 2110:49 2111:49 2112:4c 2113:6c 2115:4e 2118:70 2119:50 211a:51 211b:52 211c:52 211d:52 2122:74 2124:5a 2128:5a 212a:4b 212c:42 212d:43 212e:65 212f:65 2130:45 2131:46 2133:4d 2134:6f 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 2205:4f 2212:5f 2215:2f 2216:5c 2217:2a 221f:1c 2223:7c 2236:3a 223c:7e 226b:3c 22c5:07 2302:7f 2303:5e 2329:3c 232a:3e 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e 3000:20 3007:4f 3008:3c 3009:3e 300b:3e 301a:5b 301b:5d 30fb:07 \r\n\r\n874   (ANSI/OEM - Thai)\r\n00a7:15 00b6:14 203c:13 2190:1b 2191:18 2192:1a 2193:19 2194:1d 2195:12 21a8:17 221f:1c 2302:7f 25ac:16 25b2:1e 25ba:10 25bc:1f 25c4:11 25cb:09 25d8:08 25d9:0a 263a:01 263b:02 263c:0f 2640:0c 2642:0b 2660:06 2663:05 2665:03 2666:04 266a:0d 266b:0e ff01:21 ff02:22 ff03:23 ff04:24 ff05:25 ff06:26 ff07:27 ff08:28 ff09:29 ff0a:2a ff0b:2b ff0c:2c ff0d:2d ff0e:2e ff0f:2f ff10:30 ff11:31 ff12:32 ff13:33 ff14:34 ff15:35 ff16:36 ff17:37 ff18:38 ff19:39 ff1a:3a ff1b:3b ff1c:3c ff1d:3d ff1e:3e ff20:40 ff21:41 ff22:42 ff23:43 ff24:44 ff25:45 ff26:46 ff27:47 ff28:48 ff29:49 ff2a:4a ff2b:4b ff2c:4c ff2d:4d ff2e:4e ff2f:4f ff30:50 ff31:51 ff32:52 ff33:53 ff34:54 ff35:55 ff36:56 ff37:57 ff38:58 ff39:59 ff3a:5a ff3b:5b ff3c:5c ff3d:5d ff3e:5e ff3f:5f ff40:60 ff41:61 ff42:62 ff43:63 ff44:64 ff45:65 ff46:66 ff47:67 ff48:68 ff49:69 ff4a:6a ff4b:6b ff4c:6c ff4d:6d ff4e:6e ff4f:6f ff50:70 ff51:71 ff52:72 ff53:73 ff54:74 ff55:75 ff56:76 ff57:77 ff58:78 ff59:79 ff5a:7a ff5b:7b ff5c:7c ff5d:7d ff5e:7e \r\n\r\n932   (ANSI/OEM - Japanese Shift-JIS)\r\n00a1:21 00a5:5c 00a6:7c 00a9:63 00aa:61 00ad:2d 00ae:52 00b2:32 00b3:33 00b9:31 00ba:6f 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c6:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d0:44 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00de:54 00df:73 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e6:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f0:64 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00fe:74 00ff:79 \r\n\r\n936   (ANSI/OEM - Simplified Chinese GBK)\r\n00a6:7c 00aa:61 00ad:2d 00b2:32 00b3:33 00b9:31 00ba:6f 00d0:44 00dd:59 00de:54 00e2:61 00f0:65 00fd:79 00fe:74 \r\n\r\n949   (ANSI/OEM - Korean)\r\n00a6:7c 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00ff:79 20a9:5c \r\n\r\n950   (ANSI/OEM - Traditional Chinese Big5)\r\n00a1:21 00a6:7c 00a9:63 00aa:61 00ad:2d 00ae:52 00b2:32 00b3:33 00b9:31 00ba:6f 00c0:41 00c1:41 00c2:41 00c3:41 00c4:41 00c5:41 00c6:41 00c7:43 00c8:45 00c9:45 00ca:45 00cb:45 00cc:49 00cd:49 00ce:49 00cf:49 00d0:44 00d1:4e 00d2:4f 00d3:4f 00d4:4f 00d5:4f 00d6:4f 00d8:4f 00d9:55 00da:55 00db:55 00dc:55 00dd:59 00de:54 00df:73 00e0:61 00e1:61 00e2:61 00e3:61 00e4:61 00e5:61 00e6:61 00e7:63 00e8:65 00e9:65 00ea:65 00eb:65 00ec:69 00ed:69 00ee:69 00ef:69 00f0:65 00f1:6e 00f2:6f 00f3:6f 00f4:6f 00f5:6f 00f6:6f 00f8:6f 00f9:75 00fa:75 00fb:75 00fc:75 00fd:79 00fe:74 00ff:79 \r\n\r\n(UTF-7)\r\n\r\n\r\n(UTF-8)\r\n\r\n\r\n"
        },
        {
          "name": "vcbuild.bat",
          "type": "blob",
          "size": 0.810546875,
          "content": "@rem For Windows build information, see build\\win32\\README.md\n\n@echo off\npushd %CD%\n\nif not \"%1\"==\"\" (set build_type=%1) else (set build_type=Release)\necho Build type: %build_type%\n\nif not \"%2\"==\"\" (set arch=%2) else (set arch=x86_64)\necho Arch: %arch%\n\nif \"%3\"==\"USE_ASAN\" (\n    echo Address Sanitizer: Enabled\n    set CI_ASAN=-c tools.build:cxxflags=\"[\"\"/fsanitize=address\"\"]\"\n    set ASAN_FLAG=ON\n) else (\n    echo Address Sanitizer: Disabled\n    set CI_ASAN=\n    set ASAN_FLAG=OFF\n)\n\ncd build\\win32\nconan install . -s compiler.cppstd=17 %CI_ASAN% --output-folder=build --build=missing --settings=build_type=%build_type% --settings=arch=%arch%\ncd build\ncmake --fresh .. -G \"Visual Studio 17 2022\" -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DUSE_ASAN=%ASAN_FLAG% %4 %5 %6 %7 %8 %9\ncmake --build . --config %build_type%\n\npopd\n"
        }
      ]
    }
  ]
}