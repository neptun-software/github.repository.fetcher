{
  "metadata": {
    "timestamp": 1736566063752,
    "page": 50,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sass/node-sass",
      "stars": 8502,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.27734375,
          "content": "# This file is for unifying the coding style for different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc.json",
          "type": "blob",
          "size": 0.68359375,
          "content": "{\n  \"env\": {\n    \"es6\": true,\n    \"node\": true\n  },\n  \"globals\": {},\n  \"extends\": \"eslint:recommended\",\n  \"overrides\": [\n    {\n      \"files\": [\n        \"test/**/*.js\"\n      ],\n      \"env\": {\n        \"mocha\": true\n      }\n    }\n  ],\n  \"rules\": {\n    \"no-bitwise\": 2,\n    \"curly\": 2,\n    \"eqeqeq\": 2,\n    \"no-unused-expressions\": [\n      2,\n      {\n        \"allowTernary\": true\n      }\n    ],\n    \"wrap-iife\": [\n      2,\n      \"any\"\n    ],\n    \"indent\": [\n      2,\n      2,\n      {\n        \"SwitchCase\": 1\n      }\n    ],\n    \"linebreak-style\": 2,\n    \"no-multi-str\": 2,\n    \"new-cap\": 2,\n    \"no-caller\": 2,\n    \"quotes\": [\n      2,\n      \"single\"\n    ],\n    \"semi\": 2,\n    \"block-scoped-var\": 2\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.833984375,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted\n# to native line endings on checkout.\n\n# Declare files that will always have LF line endings on checkout.\n*.c text eol=lf\n*.css text eol=lf\n*.cpp text eol=lf\n.editorconfig text eol=lf\n.gitattributes text eol=lf\n.gitignore text eol=lf\n.gitmodules text eol=lf\n*.gyp text eol=lf\n*.h text eol=lf\n*.hpp text eol=lf\n*.js text eol=lf\n*.json text eol=lf\nLICENSE text eol=lf\n*.md text eol=lf\nnode-sass text eol=lf\n*.sass text eol=lf\n*.scss text eol=lf\n*.svg text eol=lf\n\n# Declare files that will always have CRLF line endings on checkout.\n*.bat text eol=crlf\n*.cmd text eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.gif binary\n*.jpg binary\n*.node binary\n*.png binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.212890625,
          "content": "*.log\n.DS_Store\n.sass-cache\nbuild\nlib-cov\nnode_modules\nvendor\ntest/html-report\ntest/lcov-report\ntest/lcov.info\ntest/fixtures/watching-css-out-01\ntest/fixtures/watching-css-out-02\ncoverage\npackage-lock.json\n.nyc_output\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.0498046875,
          "content": "Michał Gołębiowski-Owczarek <m.goleb@gmail.com>\n"
        },
        {
          "name": ".nycrc.json",
          "type": "blob",
          "size": 0.1591796875,
          "content": "{\n  \"all\": true,\n  \"include\": [\n    \"bin/*\",\n    \"lib/*.js\",\n    \"scripts/**/*.js\"\n  ],\n  \"extension\": [\n    \"node-sass\"\n  ],\n  \"reporter\": [\n    \"lcovonly\"\n  ]\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.03515625,
          "content": "## v4.14.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.14.0\n\n## v4.13.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.13.1\n\n## v4.13.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.13.0\n\n## v4.12.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.12.0\n\n## v4.11.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.11.0\n\n## v4.10.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.10.0\n\n## v4.9.4\n\nhttps://github.com/sass/node-sass/releases/tag/v4.9.4\n\n## v4.9.3\n\nhttps://github.com/sass/node-sass/releases/tag/v4.9.3\n\n## v4.9.2\n\nhttps://github.com/sass/node-sass/releases/tag/v4.9.2\n\n## v4.9.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.9.1\n\n## v4.9.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.9.0\n\n## v4.8.3\n\nhttps://github.com/sass/node-sass/releases/tag/v4.8.3\n\n## v4.8.2\n\nhttps://github.com/sass/node-sass/releases/tag/v4.8.2\n\n## v4.8.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.8.1\n\n## v4.8.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.8.0\n\n## v4.7.2\n\nhttps://github.com/sass/node-sass/releases/tag/v4.7.2\n\n## v4.7.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.7.1\n\n## v4.7.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.7.0\n\n## v4.6.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.6.1\n\n## v4.6.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.6.0\n\n## v4.5.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.5.0\n\n## v4.4.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.4.0\n\n## v4.3.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.3.0\n\n## v4.2.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.2.0\n\n## v4.1.1\n\nhttps://github.com/sass/node-sass/releases/tag/v4.1.1\n\n## v4.1.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.1.0\n\n## v4.0.0\n\nhttps://github.com/sass/node-sass/releases/tag/v4.0.0\n\n## v3.13.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.13.1\n\n## v3.13.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.13.0\n\n## v3.12.5\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.5\n\n## v3.12.4\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.4\n\n## v3.12.3\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.3\n\n## v3.12.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.2\n\n## v3.12.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.1\n\n## v3.12.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.12.0\n\n## v3.11.3\n\nhttps://github.com/sass/node-sass/releases/tag/v3.11.3\n\n## v3.11.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.11.2\n\n## v3.11.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.11.1\n\n## v3.11.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.11.0\n\n## v3.10.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.10.1\n\n## v3.10.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.10.0\n\n## v3.9.3\n\nhttps://github.com/sass/node-sass/releases/tag/v3.9.3\n\n## v3.9.2\n\n(removed)\n\n## v3.9.1\n\n(removed)\n\n## v3.9.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.9.0\n\n## v3.8.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.8.0\n\n## v3.7.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.7.0\n\n## v3.6.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.6.0\n\n## v3.5.3\n\nhttps://github.com/sass/node-sass/releases/tag/v3.5.3\n\n## v3.5.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.5.2\n\n## v3.5.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.5.1\n\n## v3.5.0\n\n(removed)\n\n## v3.4.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.4.2\n\n## v3.4.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.4.1\n\n## v3.4.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.4.0\n\n## v3.3.3\n\nhttps://github.com/sass/node-sass/releases/tag/v3.3.3\n\n## v3.3.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.3.2\n\n## v3.3.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.3.1\n\n## v3.3.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.3.0\n\n## v3.2.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.2.0\n\n## v3.1.2\n\nhttps://github.com/sass/node-sass/releases/tag/v3.1.2\n\n## v3.1.1\n\nhttps://github.com/sass/node-sass/releases/tag/v3.1.1\n\n## v3.1.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.1.0\n\n## v3.0.0\n\nhttps://github.com/sass/node-sass/releases/tag/v3.0.0\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.5244140625,
          "content": "Sass is more than a technology; Sass is driven by the community of individuals\nthat power its development and use every day. As a community, we want to embrace\nthe very differences that have made our collaboration so powerful, and work\ntogether to provide the best environment for learning, growing, and sharing of\nideas. It is imperative that we keep Sass a fun, welcoming, challenging, and\nfair place to play.\n\n[The full community guidelines can be found on the Sass website.][link]\n\n[link]: https://sass-lang.com/community-guidelines\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "Copyright (c) 2013-2016 Andrew Nesbitt\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.220703125,
          "content": "# node-sass\n\n**Warning:** [Node Sass has reached end of life]. It will receive no more\nreleases, even for security fixes. Projects that still use it should move onto\n[Dart Sass](https://sass-lang.com/dart-sass).\n\n[Node Sass has reached end of life]: https://sass-lang.com/blog/node-sass-is-end-of-life\n\n## Node version support policy\n\n1. Supported Node.js versions vary by release, please consult the [releases page](https://github.com/sass/node-sass/releases).\n1. Node versions that hit end of life <https://github.com/nodejs/Release>, will be dropped from support at each node-sass release (major, minor).\n1. We will stop building binaries for unsupported releases, testing for breakages in dependency compatibility, but we will not block installations for those that want to support themselves.\n1. New node release require minor internal changes along with support from CI providers (AppVeyor, GitHub Actions). We will open a single issue for interested parties to subscribe to, and close additional issues.\n\nBelow is a quick guide for minimum and maximum supported versions of node-sass:\n\nNodeJS  | Supported node-sass version | Node Module\n--------|-----------------------------|------------\nNode 20 | 9.0+                        | 115\nNode 19 | 8.0+                        | 111\nNode 18 | 8.0+                        | 108\nNode 17 | 7.0+, <8.0                  | 102\nNode 16 | 6.0+                        | 93\nNode 15 | 5.0+, <7.0                  | 88\nNode 14 | 4.14+, <9.0                 | 83\nNode 13 | 4.13+, <5.0                 | 79\nNode 12 | 4.12+, <8.0                 | 72\nNode 11 | 4.10+, <5.0                 | 67\nNode 10 | 4.9+, <6.0                  | 64\nNode 8  | 4.5.3+, <5.0                | 57\nNode <8 | <5.0                        | <57\n\n<table>\n  <tr>\n    <td>\n      <img width=\"77px\" alt=\"Sass logo\" src=\"https://rawgit.com/sass/node-sass/master/media/logo.svg\" />\n    </td>\n    <td valign=\"bottom\" align=\"right\">\n      <a href=\"https://www.npmjs.com/package/node-sass\">\n        <img width=\"100%\" src=\"https://nodei.co/npm/node-sass.png?downloads=true&downloadRank=true&stars=true\">\n      </a>\n    </td>\n  </tr>\n</table>\n\n![Alpine](https://github.com/sass/node-sass/workflows/Build%20bindings%20for%20Alpine%20releases/badge.svg)\n![Linux](https://github.com/sass/node-sass/workflows/Build%20bindings%20for%20Linux%20releases/badge.svg)\n![macOS](https://github.com/sass/node-sass/workflows/Build%20bindings%20for%20macOS%20releases/badge.svg)\n![Windows x64](https://github.com/sass/node-sass/workflows/Build%20bindings%20for%20Windows%20releases/badge.svg)\n![Linting](https://github.com/sass/node-sass/workflows/Lint%20JS/badge.svg)\n[![Windows x86](https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true)](https://ci.appveyor.com/project/sass/node-sass/branch/master)\n[![Coverage Status](https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master)](https://coveralls.io/r/sass/node-sass?branch=master)\n\nNode-sass is a library that provides binding for Node.js to [LibSass], the C version of the popular stylesheet preprocessor, Sass.\n\nIt allows you to natively compile .scss files to css at incredible speed and automatically via a connect middleware.\n\nFind it on npm: <https://www.npmjs.com/package/node-sass>\n\nFollow @nodesass on twitter for release updates: <https://twitter.com/nodesass>\n\n## Install\n\n```shell\nnpm install node-sass\n```\n\nSome users have reported issues installing on Ubuntu due to `node` being registered to another package. [Follow the official NodeJS docs](https://github.com/nodesource/distributions/blob/master/README.md#debinstall) to install NodeJS so that `#!/usr/bin/env node` correctly resolves.\n\nCompiling on Windows machines requires the [node-gyp prerequisites](https://github.com/nodejs/node-gyp#on-windows).\n\nAre you seeing the following error? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md#installing-node-sass-4x-with-node--4).**\n\n```\nSyntaxError: Use of const in strict mode.\n```\n\n**Having installation troubles? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md).**\n\n### Install from mirror in China\n\n```shell\nnpm install -g mirror-config-china --registry=https://registry.npmmirror.com\nnpm install node-sass\n```\n\n## Usage\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});\n```\n\n## Options\n\n### file\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nPath to a file for [LibSass] to compile.\n\n### data\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nA string to pass to [LibSass] to compile. It is recommended that you use `includePaths` in conjunction with this so that [LibSass] can find files when using the `@import` directive.\n\n### importer (>= v2.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n* Type: `Function | Function[]` signature `function(url, prev, done)`\n* Default: `undefined`\n\nFunction Parameters and Information:\n\n* `url (String)` - the path in import **as-is**, which [LibSass] encountered\n* `prev (String)` - the previously resolved path\n* `done (Function)` - a callback function to invoke on async completion, takes an object literal containing\n  * `file (String)` - an alternate path for [LibSass] to use **OR**\n  * `contents (String)` - the imported contents (for example, read from memory or the file system)\n\nHandles when [LibSass] encounters the `@import` directive. A custom importer allows extension of the [LibSass] engine in both a synchronous and asynchronous manner. In both cases, the goal is to either `return` or call `done()` with an object literal. Depending on the value of the object literal, one of two things will happen.\n\nWhen returning or calling `done()` with `{ file: \"String\" }`, the new file path will be assumed for the `@import`. It's recommended to be mindful of the value of `prev` in instances where relative path resolution may be required.\n\nWhen returning or calling `done()` with `{ contents: \"String\" }`, the string value will be used as if the file was read in through an external source.\n\nStarting from v3.0.0:\n\n* `this` refers to a contextual scope for the immediate run of `sass.render` or `sass.renderSync`\n\n* importers can return error and LibSass will emit that error in response. For instance:\n\n  ```javascript\n  done(new Error('doesn\\'t exist!'));\n  // or return synchronously\n  return new Error('nothing to do here');\n  ```\n\n* importer can be an array of functions, which will be called by LibSass in the order of their occurrence in array. This helps user specify special importer for particular kind of path (filesystem, http). If an importer does not want to handle a particular path, it should return `null`. See [functions section](#functions--v300---experimental) for more details on Sass types.\n\n### functions (>= v3.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n`functions` is an `Object` that holds a collection of custom functions that may be invoked by the sass files being compiled. They may take zero or more input parameters and must return a value either synchronously (`return ...;`) or asynchronously (`done();`). Those parameters will be instances of one of the constructors contained in the `require('node-sass').types` hash. The return value must be of one of these types as well. See the list of available types below:\n\n#### types.Number(value [, unit = \"\"])\n\n* `getValue()`/ `setValue(value)` : gets / sets the numerical portion of the number\n* `getUnit()` / `setUnit(unit)` : gets / sets the unit portion of the number\n\n#### types.String(value)\n\n* `getValue()` / `setValue(value)` : gets / sets the enclosed string\n\n#### types.Color(r, g, b [, a = 1.0]) or types.Color(argb)\n\n* `getR()` / `setR(value)` : red component (integer from `0` to `255`)\n* `getG()` / `setG(value)` : green component (integer from `0` to `255`)\n* `getB()` / `setB(value)` : blue component (integer from `0` to `255`)\n* `getA()` / `setA(value)` : alpha component (number from `0` to `1.0`)\n\nExample:\n\n```javascript\nvar Color = require('node-sass').types.Color,\n  c1 = new Color(255, 0, 0),\n  c2 = new Color(0xff0088cc);\n```\n\n#### types.Boolean(value)\n\n* `getValue()` : gets the enclosed boolean\n* `types.Boolean.TRUE` : Singleton instance of `types.Boolean` that holds \"true\"\n* `types.Boolean.FALSE` : Singleton instance of `types.Boolean` that holds \"false\"\n\n#### types.List(length [, commaSeparator = true])\n\n* `getValue(index)` / `setValue(index, value)` : `value` must itself be an instance of one of the constructors in `sass.types`.\n* `getSeparator()` / `setSeparator(isComma)` : whether to use commas as a separator\n* `getLength()`\n\n#### types.Map(length)\n\n* `getKey(index)` / `setKey(index, value)`\n* `getValue(index)` / `setValue(index, value)`\n* `getLength()`\n\n#### types.Null()\n\n* `types.Null.NULL` : Singleton instance of `types.Null`.\n\n#### Example\n\n```javascript\nsass.renderSync({\n  data: '#{headings(2,5)} { color: #08c; }',\n  functions: {\n    'headings($from: 0, $to: 6)': function(from, to) {\n      var i, f = from.getValue(), t = to.getValue(),\n          list = new sass.types.List(t - f + 1);\n\n      for (i = f; i <= t; i++) {\n        list.setValue(i - f, new sass.types.String('h' + i));\n      }\n\n      return list;\n    }\n  }\n});\n```\n\n### includePaths\n\n* Type: `Array<String>`\n* Default: `[]`\n\nAn array of paths that [LibSass] can look in to attempt to resolve your `@import` declarations. When using `data`, it is recommended that you use this.\n\n### indentedSyntax\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` values enable [Sass Indented Syntax](https://sass-lang.com/documentation/file.INDENTED_SYNTAX.html) for parsing the data string or file.\n\n__Note:__ node-sass/libsass will compile a mixed library of scss and indented syntax (.sass) files with the Default setting (false) as long as .sass and .scss extensions are used in filenames.\n\n### indentType (>= v3.0.0)\n\n* Type: `String`\n* Default: `space`\n\nUsed to determine whether to use space or tab character for indentation.\n\n### indentWidth (>= v3.0.0)\n\n* Type: `Number`\n* Default: `2`\n* Maximum: `10`\n\nUsed to determine the number of spaces or tabs to be used for indentation.\n\n### linefeed (>= v3.0.0)\n\n* Type: `String`\n* Default: `lf`\n\nUsed to determine whether to use `cr`, `crlf`, `lf` or `lfcr` sequence for line break.\n\n### omitSourceMapUrl\n\n* Type: `Boolean`\n* Default: `false`\n\n**Special:** When using this, you should also specify `outFile` to avoid unexpected behavior.\n\n`true` values disable the inclusion of source map information in the output file.\n\n### outFile\n\n* Type: `String | null`\n* Default: `null`\n\n**Special:** Required when `sourceMap` is a truthy value\n\nSpecify the intended location of the output file. Strongly recommended when outputting source maps so that they can properly refer back to their intended files.\n\n**Attention** enabling this option will **not** write the file on disk for you, it's for internal reference purpose only (to generate the map for example).\n\nExample on how to write it on the disk\n\n```javascript\nsass.render({\n    ...\n    outFile: yourPathTotheFile,\n  }, function(error, result) { // node-style callback from v3.0.0 onwards\n    if(!error){\n      // No errors during the compilation, write this result on the disk\n      fs.writeFile(yourPathTotheFile, result.css, function(err){\n        if(!err){\n          //file written on disk\n        }\n      });\n    }\n  });\n});\n```\n\n### outputStyle\n\n* Type: `String`\n* Default: `nested`\n* Values: `nested`, `expanded`, `compact`, `compressed`\n\nDetermines the output format of the final CSS style.\n\n### precision\n\n* Type: `Integer`\n* Default: `5`\n\nUsed to determine how many digits after the decimal will be allowed. For instance, if you had a decimal number of `1.23456789` and a precision of `5`, the result will be `1.23457` in the final CSS.\n\n### sourceComments\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` Enables the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins.\n\n### sourceMap\n\n* Type: `Boolean | String | undefined`\n* Default: `undefined`\n\nEnables source map generation during `render` and `renderSync`.\n\nWhen `sourceMap === true`, the value of `outFile` is used as the target output location for the source map with the suffix `.map` appended. If no `outFile` is set, `sourceMap` parameter is ignored.\n\nWhen `typeof sourceMap === \"string\"`, the value of `sourceMap` will be used as the writing location for the file.\n\n### sourceMapContents\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` includes the `contents` in the source map information\n\n### sourceMapEmbed\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` embeds the source map as a data URI\n\n### sourceMapRoot\n\n* Type: `String`\n* Default: `undefined`\n\nthe value will be emitted as `sourceRoot` in the source map information\n\n## `render` Callback (>= v3.0.0)\n\nnode-sass supports standard node style asynchronous callbacks with the signature of `function(err, result)`. In error conditions, the `error` argument is populated with the error object. In success conditions, the `result` object is populated with an object describing the result of the render call.\n\n### Error Object\n\n* `message` (String) - The error message.\n* `line` (Number) - The line number of error.\n* `column` (Number) - The column number of error.\n* `status` (Number) - The status code.\n* `file` (String) - The filename of error. In case `file` option was not set (in favour of `data`), this will reflect the value `stdin`.\n\n### Result Object\n\n* `css` (Buffer) - The compiled CSS. Write this to a file, or serve it out as needed.\n* `map` (Buffer) - The source map\n* `stats` (Object) - An object containing information about the compile. It contains the following keys:\n  * `entry` (String) - The path to the scss file, or `data` if the source was not a file\n  * `start` (Number) - Date.now() before the compilation\n  * `end` (Number) - Date.now() after the compilation\n  * `duration` (Number) - *end* - *start*\n  * `includedFiles` (Array) - Absolute paths to all related scss files in no particular order.\n\n### Examples\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: '/path/to/myFile.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash, this.callback contains the node-style callback\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  },\n  includePaths: [ 'lib/', 'mod/' ],\n  outputStyle: 'compressed'\n}, function(error, result) { // node-style callback from v3.0.0 onwards\n  if (error) {\n    console.log(error.status); // used to be \"code\" in v2x and below\n    console.log(error.column);\n    console.log(error.message);\n    console.log(error.line);\n  }\n  else {\n    console.log(result.css.toString());\n\n    console.log(result.stats);\n\n    console.log(result.map.toString());\n    // or better\n    console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\n  }\n});\n// OR\nvar result = sass.renderSync({\n  file: '/path/to/file.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  outputStyle: 'compressed',\n  outFile: '/to/my/output.css',\n  sourceMap: true, // or an absolute or relative (to outFile) path\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  }\n});\n\nconsole.log(result.css);\nconsole.log(result.map);\nconsole.log(result.stats);\n```\n\n### Special behaviours\n\n* In the case that both `file` and `data` options are set, node-sass will give precedence to `data` and use `file` to calculate paths in sourcemaps.\n\n### Version information (>= v2.0.0)\n\nBoth `node-sass` and `libsass` version info is now exposed via the `info` method:\n\n```javascript\nvar sass = require('node-sass');\n\nconsole.log(sass.info);\n\n/*\n  it will output something like:\n\n  node-sass       2.0.1   (Wrapper)       [JavaScript]\n  libsass         3.1.0   (Sass Compiler) [C/C++]\n*/\n```\n\nSince node-sass >=v3.0.0 LibSass version is determined at run time.\n\n## Integrations\n\nListing of community uses of node-sass in build tools and frameworks.\n\n### Brackets extension\n\n[@jasonsanjose](https://github.com/jasonsanjose) has created a [Brackets](http://brackets.io) extension based on node-sass: <https://github.com/jasonsanjose/brackets-sass>. When editing Sass files, the extension compiles changes on save. The extension also integrates with Live Preview to show Sass changes in the browser without saving or compiling.\n\n### Brunch plugin\n\n[Brunch](http://brunch.io)'s official sass plugin uses node-sass by default, and automatically falls back to ruby if use of Compass is detected: <https://github.com/brunch/sass-brunch>\n\n### Connect/Express middleware\n\nRecompile `.scss` files automatically for connect and express based http servers.\n\nThis functionality has been moved to [`node-sass-middleware`](https://github.com/sass/node-sass-middleware) in node-sass v1.0.0\n\n### DocPad Plugin\n\n[@10xLaCroixDrinker](https://github.com/10xLaCroixDrinker) wrote a [DocPad](http://docpad.org/) plugin that compiles `.scss` files using node-sass: <https://github.com/docpad/docpad-plugin-nodesass>\n\n### Duo.js extension\n\n[@stephenway](https://github.com/stephenway) has created an extension that transpiles Sass to CSS using node-sass with [duo.js](http://duojs.org/)\n<https://github.com/duojs/sass>\n\n### Grunt extension\n\n[@sindresorhus](https://github.com/sindresorhus/) has created a set of grunt tasks based on node-sass: <https://github.com/sindresorhus/grunt-sass>\n\n### Gulp extension\n\n[@dlmanning](https://github.com/dlmanning/) has created a gulp sass plugin based on node-sass: <https://github.com/dlmanning/gulp-sass>\n\n### Harp\n\n[@sintaxi](https://github.com/sintaxi)’s Harp web server implicitly compiles `.scss` files using node-sass: <https://github.com/sintaxi/harp>\n\n### Metalsmith plugin\n\n[@stevenschobert](https://github.com/stevenschobert/) has created a metalsmith plugin based on node-sass: <https://github.com/stevenschobert/metalsmith-sass>\n\n### Meteor plugin\n\n[@fourseven](https://github.com/fourseven) has created a meteor plugin based on node-sass: <https://github.com/fourseven/meteor-scss>\n\n### Mimosa module\n\n[@dbashford](https://github.com/dbashford) has created a Mimosa module for sass which includes node-sass: <https://github.com/dbashford/mimosa-sass>\n\n## Example App\n\nThere is also an example connect app here: <https://github.com/andrew/node-sass-example>\n\n## Rebuilding binaries\n\nNode-sass includes pre-compiled binaries for popular platforms, to add a binary for your platform follow these steps:\n\nCheck out the project:\n\n```bash\ngit clone --recursive https://github.com/sass/node-sass.git\ncd node-sass\nnpm install\nnode scripts/build -f  # use -d switch for debug release\n# if succeeded, it will generate and move\n# the binary in vendor directory.\n```\n\n## Command Line Interface\n\nThe interface for command-line usage is fairly simplistic at this stage, as seen in the following usage section.\n\nOutput will be sent to stdout if the `--output` flag is omitted.\n\n### Usage\n\n `node-sass [options] <input> [output]`\n Or:\n `cat <input> | node-sass > output`\n\nExample:\n\n`node-sass src/style.scss dest/style.css`\n\n **Options:**\n\n```bash\n    -w, --watch                Watch a directory or file\n    -r, --recursive            Recursively watch directories or files\n    -o, --output               Output directory\n    -x, --omit-source-map-url  Omit source map URL comment from output\n    -i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n    -q, --quiet                Suppress log output except on error\n    -v, --version              Prints version info\n    --output-style             CSS output style (nested | expanded | compact | compressed)\n    --indent-type              Indent type for output CSS (space | tab)\n    --indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n    --linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n    --source-comments          Include debug info in output\n    --source-map               Emit source map\n    --source-map-contents      Embed include contents in map\n    --source-map-embed         Embed sourceMappingUrl as data URI\n    --source-map-root          Base path, will be emitted in source-map as is\n    --include-path             Path to look for imported files\n    --follow                   Follow symlinked directories\n    --precision                The amount of precision allowed in decimal numbers\n    --error-bell               Output a bell character on errors\n    --importer                 Path to .js file containing custom importer\n    --functions                Path to .js file containing custom functions\n    --help                     Print usage info\n```\n\nThe `input` can be either a single `.scss` or `.sass`, or a directory. If the input is a directory the `--output` flag must also be supplied.\n\nAlso, note `--importer` takes the (absolute or relative to pwd) path to a js file, which needs to have a default `module.exports` set to the importer function. See our test [fixtures](https://github.com/sass/node-sass/tree/974f93e76ddd08ea850e3e663cfe64bb6a059dd3/test/fixtures/extras) for example.\n\nThe `--source-map` option accepts a boolean value, in which case it replaces destination extension with `.css.map`. It also accepts path to `.map` file and even path to the desired directory.\nWhen compiling a directory `--source-map` can either be a boolean value or a directory.\n\n## Binary configuration parameters\n\nnode-sass supports different configuration parameters to change settings related to the sass binary such as binary name, binary path or alternative download path. Following parameters are supported by node-sass:\n\nVariable name            | .npmrc parameter         | Process argument           | Value\n-------------------------|--------------------------|----------------------------|------\nSASS_BINARY_NAME         | sass_binary_name         | --sass-binary-name         | path\nSASS_BINARY_SITE         | sass_binary_site         | --sass-binary-site         | URL\nSASS_BINARY_PATH         | sass_binary_path         | --sass-binary-path         | path\nSASS_BINARY_DIR          | sass_binary_dir          | --sass-binary-dir          | path\nSASS_REJECT_UNAUTHORIZED | sass_reject_unauthorized | --sass-reject-unauthorized | value\n\nThese parameters can be used as environment variable:\n\n* E.g. `export SASS_BINARY_SITE=http://example.com/`\n\nAs local or global [.npmrc](https://docs.npmjs.com/misc/config) configuration file:\n\n* E.g. `sass_binary_site=http://example.com/`\n\nAs a process argument:\n\n* E.g. `npm install node-sass --sass-binary-site=http://example.com/`\n\nIf you are using self-signed certificates for your binary then `SASS_REJECT_UNAUTHORIZED` will override (rejectUnauthorized)[https://nodejs.org/docs/latest/api/tls.html#tls_tls_createserver_options_secureconnectionlistener].\n\n## Post-install Build\n\nInstall runs only two Mocha tests to see if your machine can use the pre-built [LibSass] which will save some time during install. If any tests fail it will build from source.\n\n## Maintainers\n\nThis module is brought to you and maintained by the following people:\n\n* Michael Mifsud - Project Lead ([Github](https://github.com/xzyfer) / [Twitter](https://twitter.com/xzyfer))\n* Andrew Nesbitt ([Github](https://github.com/andrew) / [Twitter](https://twitter.com/teabass))\n* Dean Mao ([Github](https://github.com/deanmao) / [Twitter](https://twitter.com/deanmao))\n* Brett Wilkins ([Github](https://github.com/bwilkins) / [Twitter](https://twitter.com/bjmaz))\n* Keith Cirkel ([Github](https://github.com/keithamus) / [Twitter](https://twitter.com/Keithamus))\n* Laurent Goderre ([Github](https://github.com/laurentgoderre) / [Twitter](https://twitter.com/laurentgoderre))\n* Nick Schonning ([Github](https://github.com/nschonni) / [Twitter](https://twitter.com/nschonni))\n* Adeel Mujahid ([Github](https://github.com/am11) / [Twitter](https://twitter.com/adeelbm))\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here.](https://github.com/sass/node-sass/graphs/contributors)\n\n### Note on Patches/Pull Requests\n\nCheck out our [Contributing guide](/.github/CONTRIBUTING.md)\n\n## Copyright\n\nCopyright (c) 2015 Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass/blob/master/LICENSE) for details.\n\n[LibSass]: https://github.com/sass/libsass\n"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 7.90234375,
          "content": "# Troubleshooting\n\nThis document covers some common node-sass issues and how to resolve them. You\nshould always follow these steps before opening a new issue.\n\n## TOC\n\n- [Installation problems](#installation-problems)\n  - [404 downloading binding.node file](#404s)\n- [Glossary](#glossary)\n  - [Which node runtime am I using?](#which-node-runtime-am-i-using)\n  - [Which version of node am I using?](#which-version-of-node-am-i-using)\n  - [Debugging installation issues.](#debugging-installation-issues)\n    - [Windows](#windows)\n    - [Linux/OSX](#linuxosx)\n- [Using node-sass with Visual Studio 2015 Task Runner.](#using-node-sass-with-visual-studio-2015-task-runner)\n- [Installing node-sass 4.x with Node < 4](#installing-node-sass-4x-with-node--4)\n\n## Installation\n\n### 404s\n\nIf you see a 404 when trying to install node-sass, this indicates that you're trying\nto install a version of node-sass that doesn't support your version of NodeJS, or\nuses an alternate V8 environment (Meteor, Electron, etc...) that isn't supported\nby node-sass.\n\n```console\n> node-sass@4.6.1 install /src/node_modules/node-sass\n> node scripts/install.js\n\nDownloading binary from https://github.com/sass/node-sass/releas…\nCannot download \"https://github.com/sass/node-sass/releas…\":\n\nHTTP error 404 Not Found\n```\n\nIf you encounter this, please check what version of NodeJs you're running (`node -v`)\nand check for a supported version of node-sass for your NodeJs by checking our\n[release page](https://github.com/sass/node-sass/releases).\n\n### Proxy issues\n\nIf you work in behind a corporate proxy try setting the proxy variables. The\nfollowing is a [guide for setting this up](https://jjasonclark.com/how-to-setup-node-behind-web-proxy/).\n\n### Running with sudo or as root\n\nThis can happen if you are install node-sass as `root`, or globally with `sudo`.\nThis is a security feature of `npm`. You should always avoid running `npm` as\n`sudo` because install scripts can be unintentionally malicious.\nPlease check [npm documentation on fixing permissions](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\n\nIf you must however, you can work around this error by using the `--unsafe-perm`\nflag with npm install i.e.\n\n```sh\nsudo npm install --unsafe-perm -g node-sass\n```\n\nIf this didn't solve your problem please open an issue with the output from\n[our debugging script](#debugging-installation-issues).\n\n### npm\n\nSome users upgrading from previous versions of npm before 5 have found conflicts with\nold lock file formats. This may be show up as a URL instead of the actual version\nnumber when downloading the binary. EX:\n\n```console\nDownloading binary from https://github.com/sass/node-sass/releases/download/vhttps://registry.npmjs.org/node-sass/-/node-sass-4.5.3.tgz/win32-x64-57_binding.node\nCannot download \"https://github.com/sass/node-sass/releases/download/vhttps://registry.npmjs.org/node-sass/-/node-sass-4.5.3.tgz/win32-x64-57_binding.node\":\n\nHTTP error 404 Not Found\n```\n\nThe easiest way to get around this is just to cleanup the npm files and reinstall.\n\n```console\nrm -rf node_modules\nrm package-lock.json\nnpm cache clean\nnpm install\n```\n\n## Helping us, help you\n\n### Find what version of Node you're running\n\nTo determine which version of Node.js or io.js you are currently using run the\nfollowing command in a terminal.\n\n```console\nnode -v\n```\n\nThe resulting value the version you are running.\n\n### Debugging installation issues\n\nNode sass runs some install scripts to make it as easy to use as possible, but\nsome times there can be issues. Before opening a new issue please follow the\ninstructions for [Windows](#windows) or [Linux/OSX](#linuxosx) and provide\ntheir output in you [GitHub issue](https://github.com/sass/node-sass/issues).\n\n**Remember to always search before opening a new issue**.\n\n#### Windows\n\nFirstly create a clean work space.\n\n```console\nmkdir \\temp1\ncd \\temp1\n```\n\nCheck your `COMSPEC` environment variable.\n\n```console\nnode -p process.env.comspec\n```\n\nPlease make sure the variable points to `C:\\WINDOWS\\System32\\cmd.exe`\n\nGather some basic diagnostic information.\n\n```console\nnpm -v\nnode -v\nnode -p process.versions\nnode -p process.platform\nnode -p process.arch\n```\n\nClean npm cache\n\n```console\nnpm cache clean\n```\n\nInstall the latest node-sass\n\n```console\nnpm install node-sass@latest\n```\n\nNote which version was installed by running\n\n```console\nnpm ls node-sass\n```\n\n```console\ny@1.0.0 /tmp\n└── node-sass@3.8.0\n```\n\nIf node-sass couldn't be installed successfully, please publish your `npm.log`\nand `npm.err` files for analysis.\n\nYou can [download reference known-good logfiles](https://gist.github.com/saper/62b6e5ea41695c1883e3)\nto compare your log against.\n\nIf node-sass install successfully lets gather some basic installation information.\n\n```console\nnode -p \"require('node-sass').info\"\n```\n\n```console\nnode-sass       3.8.0   (Wrapper)       [JavaScript]\nlibsass         3.3.6   (Sass Compiler) [C/C++]\n```\n\nIf the node-sass installation process produced an error, open the vendor folder.\n\n```console\ncd node_modules\\node-sass\\vendor\n```\n\nThen, using the version number we gather at the beginning, go to `https://github.com/sass/node-sass/releases/tag/v<your-version>`.\n\nThere you should see a folder with same name as the one in the `vendor` folder.\nDownload the `binding.node` file from that folder and replace your own with it.\n\nTest if that worked by gathering some basic installation information.\n\n```console\nnode -p \"require('node-sass').info\"\n```\n\n```console\nnode-sass       3.8.0   (Wrapper)       [JavaScript]\nlibsass         3.3.6   (Sass Compiler) [C/C++]\n```\n\nIf this still produces an error please open an issue with the output from these\nsteps.\n\n#### Linux/OSX\n\nFirstly create a clean work space.\n\n```sh\nmkdir ~/temp1\ncd ~/temp1\n```\n\nGather some basic diagnostic information.\n\n```sh\nnpm -v\nnode -v\nnode -p process.versions\nnode -p process.platform\nnode -p process.arch\n```\n\nInstall the latest node-sass\n\n```sh\nnpm install node-sass@latest\n```\n\nNote which version was installed by running\n\n```sh\nnpm ls node-sass\n```\n\n```sh\ny@1.0.0 /tmp\n└── node-sass@3.8.0\n```\n\nIf node-sass install successfully lets gather some basic installation information.\n\n```sh\nnode -p \"require('node-sass').info\"\n```\n\n```sh\nnode-sass       3.8.0   (Wrapper)       [JavaScript]\nlibsass         3.3.6   (Sass Compiler) [C/C++]\n```\n\nIf the node-sass installation process produced an error, open the vendor folder.\n\n```sh\ncd node_modules/node-sass/vendor\n```\n\nThen, using the version number we gather at the beginning, go to `https://github.com/sass/node-sass/releases/tag/v<your-version>`.\n\nThere you should see a folder with same name as the one in the `vendor` folder.\nDownload the `binding.node` file from that folder and replace your own with it.\n\nTest if that worked by gathering some basic installation information.\n\n```sh\nnode -p \"require('node-sass').info\"\n```\n\n```sh\nnode-sass       3.8.0   (Wrapper)       [JavaScript]\nlibsass         3.3.6   (Sass Compiler) [C/C++]\n```\n\nIf this still produces an error please open an issue with the output from these\nsteps.\n\n### Using node-sass with Visual Studio 2015 Task Runner\n\nIf you are using node-sass with VS2015 Task Runner Explorer, you need to make\nsure that the version of node.js is same as the one you installed node-sass\nwith. This is because for each node.js runtime modules version (`node -p process.versions.modules`)\n, we have a separate build of native binary. See [#532](https://github.com/sass/node-sass/issues/532).\n\nAlternatively, if you prefer using system-installed node.js (supposedly higher\nversion than one bundles with VS2015), you may want to point Visual Studio 2015\nto use it for task runner jobs by [following the guidelines](http://blogs.msdn.com/b/webdev/archive/2015/03/19/customize-external-web-tools-in-visual-studio-2015.aspx).\n\n### Installing node-sass 4.x with Node < 4\n\nSee the discussion in [this comment](https://github.com/sass/node-sass/issues/2100#issuecomment-334651235)\nfor a workaround. As of node-sass@v5 only Node 6 and above will be officially supported.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.28125,
          "content": "-\n  branches:\n    only:\n      - release\n      - /v\\d\\.\\d\\.\\d/\n    except:\n      - master\n\n  os: Visual Studio 2017\n\n  configuration: release\n\n  platform:\n    - x86\n\n  version: \"{build}\"\n\n  build: off\n\n  clone_folder: c:\\projects\\node_modules\\node-sass\n\n  # http://www.wintellect.com/devcenter/jrobbins/pdb-files-what-every-developer-must-know\n  # http://help.appveyor.com/discussions/kb/32-how-to-build-on-logical-drive-created-by-subst\n  init:\n    - cmd: >-\n        subst s: c:\\projects\n    - ps: set-location -path s:\\node_modules\\node-sass\n\n  cache:\n    - '%userprofile%\\.node-gyp'\n    - '%AppData%\\npm-cache'\n\n  environment:\n    SKIP_SASS_BINARY_DOWNLOAD_FOR_CI: true\n    matrix:\n      - nodejs_version: 16\n        GYP_MSVS_VERSION: 2019\n        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      - nodejs_version: 18\n        GYP_MSVS_VERSION: 2019\n        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      - nodejs_version: 19\n        GYP_MSVS_VERSION: 2019\n        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      - nodejs_version: 20\n        GYP_MSVS_VERSION: 2019\n        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n\n\n  install:\n    # https://www.appveyor.com/docs/lang/nodejs-iojs/#installing-any-version-of-nodejs-or-iojs\n    - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform\n    - node --version\n    - npm --version\n    - npm install\n\n  test: off\n\n  before_deploy:\n    # Save artifacts with full qualified names of binding.node and binding.pdb\n    # (which we use in node-sass-binaries repo)\n    - ps: >-\n        Get-ChildItem .\\vendor\\**\\*.node | % {\n           ( $BindingName = $_.FullName ).Split('\\\\') |\n             Select-Object -Last 2 | Select-Object -First 1 } |\n               .{ process { (\n                  @( $BindingName,\n                       ( ( $_, \"binding.node\" ) -join '_' ) ),\n                  @( \".\\build\\Release\\binding.pdb\",\n                       ( ( $_, \"binding.pdb\" ) -join '_' ) )\n               ) } } | % { Push-AppveyorArtifact $_[0] -FileName $_[1] }\n\n  deploy:\n    - provider: GitHub\n      description: $(APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED)\n      artifact:\n      auth_token:\n        secure: IZIifH990iABY3PQUtkRscTU/NOyYYwptGB6B1y2b618vpphV/2KD/4IWJzSAYAi\n      on:\n        appveyor_repo_tag: true       # deploy on tag push only\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "binding.gyp",
          "type": "blob",
          "size": 1.8818359375,
          "content": "{\n  'variables': {\n      'libsass_ext%': '',\n  },\n  'targets': [\n    {\n      'target_name': 'binding',\n      'win_delay_load_hook': 'true',\n      'sources': [\n        'src/binding.cpp',\n        'src/create_string.cpp',\n        'src/custom_function_bridge.cpp',\n        'src/custom_importer_bridge.cpp',\n        'src/sass_context_wrapper.cpp',\n        'src/sass_types/boolean.cpp',\n        'src/sass_types/color.cpp',\n        'src/sass_types/error.cpp',\n        'src/sass_types/factory.cpp',\n        'src/sass_types/list.cpp',\n        'src/sass_types/map.cpp',\n        'src/sass_types/null.cpp',\n        'src/sass_types/number.cpp',\n        'src/sass_types/string.cpp'\n      ],\n      'msvs_settings': {\n        'VCLinkerTool': {\n           'SetChecksum': 'true'\n        }\n      },\n      'xcode_settings': {\n        'CLANG_CXX_LIBRARY': 'libc++',\n        'OTHER_LDFLAGS': [],\n        'GCC_ENABLE_CPP_EXCEPTIONS': 'NO',\n        'MACOSX_DEPLOYMENT_TARGET': '10.11'\n      },\n      'include_dirs': [\n        '<!(node -e \"require(\\'nan\\')\")',\n      ],\n      'conditions': [\n        ['libsass_ext == \"\" or libsass_ext == \"no\"', {\n          'dependencies': [\n            'src/libsass.gyp:libsass',\n          ]\n        }],\n        ['libsass_ext == \"auto\"', {\n          'cflags_cc': [\n            '<!(pkg-config --cflags libsass)',\n          ],\n          'link_settings': {\n            'ldflags': [\n              '<!(pkg-config --libs-only-other --libs-only-L libsass)',\n            ],\n            'libraries': [\n              '<!(pkg-config --libs-only-l libsass)',\n            ],\n          }\n        }],\n        ['libsass_ext == \"yes\"', {\n          'cflags_cc': [\n            '<(libsass_cflags)',\n          ],\n          'link_settings': {\n            'ldflags': [\n              '<(libsass_ldflags)',\n            ],\n            'libraries': [\n              '<(libsass_library)',\n            ],\n          }\n        }]\n      ]\n    }\n  ]\n}\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "memory-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.76171875,
          "content": "{\n  \"name\": \"node-sass\",\n  \"version\": \"9.0.0\",\n  \"libsass\": \"3.5.5\",\n  \"description\": \"Wrapper around libsass\",\n  \"license\": \"MIT\",\n  \"bugs\": \"https://github.com/sass/node-sass/issues\",\n  \"homepage\": \"https://github.com/sass/node-sass\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sass/node-sass\"\n  },\n  \"author\": {\n    \"name\": \"Andrew Nesbitt\",\n    \"email\": \"andrewnez@gmail.com\",\n    \"url\": \"http://andrew.github.com\"\n  },\n  \"engines\": {\n    \"node\": \">=16\"\n  },\n  \"main\": \"lib/index.js\",\n  \"nodeSassConfig\": {\n    \"binarySite\": \"https://github.com/sass/node-sass/releases/download\"\n  },\n  \"bin\": {\n    \"node-sass\": \"bin/node-sass\"\n  },\n  \"gypfile\": true,\n  \"scripts\": {\n    \"coverage\": \"nyc npm run test\",\n    \"install\": \"node scripts/install.js\",\n    \"postinstall\": \"node scripts/build.js\",\n    \"lint\": \"eslint bin/node-sass lib scripts test\",\n    \"test\": \"mocha test/{*,**/**}.js\",\n    \"build\": \"node scripts/build.js --force\",\n    \"prepublishOnly \": \"scripts/prepublish.js\"\n  },\n  \"files\": [\n    \"bin\",\n    \"binding.gyp\",\n    \"lib\",\n    \"scripts\",\n    \"src\",\n    \"test\",\n    \"vendor\"\n  ],\n  \"keywords\": [\n    \"css\",\n    \"libsass\",\n    \"preprocessor\",\n    \"sass\",\n    \"scss\",\n    \"style\"\n  ],\n  \"dependencies\": {\n    \"async-foreach\": \"^0.1.3\",\n    \"chalk\": \"^4.1.2\",\n    \"cross-spawn\": \"^7.0.3\",\n    \"gaze\": \"^1.0.0\",\n    \"get-stdin\": \"^4.0.1\",\n    \"glob\": \"^7.0.3\",\n    \"lodash\": \"^4.17.15\",\n    \"make-fetch-happen\": \"^10.0.4\",\n    \"meow\": \"^9.0.0\",\n    \"nan\": \"^2.17.0\",\n    \"node-gyp\": \"^10.0.1\",\n    \"sass-graph\": \"^4.0.1\",\n    \"stdout-stream\": \"^1.4.0\",\n    \"true-case-path\": \"^2.2.1\"\n  },\n  \"devDependencies\": {\n    \"eslint\": \"^8.0.0\",\n    \"fs-extra\": \"^10.0.0\",\n    \"mocha\": \"^9.0.1\",\n    \"nyc\": \"^15.1.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"unique-temp-dir\": \"^1.0.0\"\n  }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}