{
  "metadata": {
    "timestamp": 1736566193541,
    "page": 202,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TheAssassin/AppImageLauncher",
      "stars": 5852,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1201171875,
          "content": "cmake-build-*/\nbuild*/\n*.AppImage*\n*.deb*\n*.tar*\ncmake/GIT_COMMIT\nsquashfs-root/\n*.qm\nresources/l10n/*\n*.html\n*.swp\n*.rpm*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1201171875,
          "content": "[submodule \"lib/AppImageUpdate\"]\n\tpath = lib/AppImageUpdate\n\turl = https://github.com/AppImageCommunity/AppImageUpdate.git\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 2.1630859375,
          "content": "# How to build AppImageLauncher\n\n**Note:** This file was contributed by a user. It may be out of date.\n\nIf there are no pre-build binaries for your platform you may consider to build AppImageLauncher yourself. Please follow these instructions.\n\n\n## Download source\n\nThis step is only required if you would like to build the source from GitHub. *If you have a local copy, please skip this section.*\n\nYou can download the source either using Git or by mannually downloading a tarball on the [Releases page](https://github.com/TheAssassin/AppImageLauncher/releases).\n\nThe branch can be customized by setting the `-b` or `--branch` argument. Select `stable` to download the current stable source or use `master` to get the most current unstable source containing the latest features.\n\n```shell\ngit clone https://github.com/TheAssassin/AppImageLauncher.git -b stable\ncd AppImageLauncher\ngit submodule update --init --recursive\n```\n\n\n## Dependencies\n\nAll dependencies need to be installed as development libraries. Some names may differ on your system.\n\n - make\n - cmake\n - glib-2\n - cairo\n - librsvg\n - fuse\n - libarchive\n - libXpm\n - qt5\n - libcurl\n - boost\n\nFor Ubuntu/Debian systems, this might look like:\n\n```bash\nsudo apt install make cmake libglib2.0-dev libcairo2-dev librsvg2-dev libfuse-dev libarchive-dev libxpm-dev libcurl4-openssl-dev libboost-all-dev qtbase5-dev qtdeclarative5-dev qttools5-dev-tools patchelf libc6-dev libc6-dev gcc-multilib g++-multilib\n```\n\n## Build\n\nPlease update the `PREFIX` if you want. The prefix is the location the final application will be installed to. Usual locations may be `/usr/local` (default), `/usr`, `~/.local` or `/opt`.\n\n```shell\nexport PREFIX=\"/usr/local/\"\nmkdir build\ncd build\n\ncmake .. -DCMAKE_INSTALL_PREFIX=\"$PREFIX\" -DUSE_SYSTEM_BOOST=true\n\n# See https://github.com/TheAssassin/AppImageLauncher/issues/251 for more details why this is required\nmake libappimage libappimageupdate libappimageupdate-qt\ncmake .\n\nmake\n```\n\nNow you may create a distribution package or alternatively install the source for testing purpose.\n\n*Note: This may harm your system. It's highly recommended to build and install distribution packages instead.*\n\n```shell\nsudo make install\n```\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.7451171875,
          "content": "cmake_minimum_required(VERSION 3.2)\n\nproject(AppImageLauncher)\n\n# versioning\ninclude(cmake/versioning.cmake)\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake/modules)\n\ninclude(cmake/scripts.cmake)\n\ninclude(cmake/reproducible_builds.cmake)\n\n# support for ccache\n# call CMake with -DUSE_CCACHE=ON to make use of it\nset(USE_CCACHE OFF CACHE BOOL \"\")\nif(USE_CCACHE)\n    find_program(CCACHE ccache)\n    if(CCACHE)\n        message(STATUS \"Using ccache\")\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ${CCACHE})\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ${CCACHE})\n    else()\n        message(WARNING \"USE_CCACHE set, but could not find ccache\")\n    endif()\nendif()\n\n# used by Debian packaging infrastructure\ninclude(GNUInstallDirs)\n\n# if there's a system libappimage package on the system, we can use that directly\nset(USE_SYSTEM_LIBAPPIMAGE OFF CACHE BOOL \"\")\n\n# if the system version should be used, import globally _before_ including third-party stuff and own executables/libs\nif(USE_SYSTEM_LIBAPPIMAGE)\n    find_package(libappimage REQUIRED)\nendif()\n\n# optional; if AppImageUpdate dependency is not viable, the update helper can be disabled\nset(ENABLE_UPDATE_HELPER ON CACHE BOOL \"\")\n\n# install resources, bundle libraries privately, etc.\n# initializes important installation destination variables, therefore must be included before adding subdirectories\ninclude(cmake/install.cmake)\n\nadd_subdirectory(lib)\nadd_subdirectory(src)\n\n# contains install configs for resource files\nadd_subdirectory(resources)\n\n# translation management\nadd_subdirectory(i18n)\n\n# packaging\ninclude(cmake/cpack_general.cmake)\ninclude(cmake/cpack_source.cmake)\ninclude(cmake/cpack_deb.cmake)\ninclude(cmake/cpack_rpm.cmake)\n\n# must be the last instruction\ninclude(CPack)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.744140625,
          "content": "# Contributing to AppImageLauncher\n\nThere are many ways how you can help improve the AppImageLauncher project. Everyone with some interest in technology, not just developers, can help make the project better. Any contribution is welcome!\n\n\n## Translations\n\nAppImageLauncher is developed in the English language. If you speak any other language (e.g., your mother language or a foreign language), you can help translate AppImageLauncher into that language.\n\nTo translate AppImageLauncher, you can use the very good [Weblate](https://weblate.org). We run [our own instance](https://translate.assassinate-you.net/projects/appimagelauncher/). Just sign up there and start translating strings.\n\nYou can also review and improve existing translations.\n\nDuring development, strings regularly change, and new strings are added while olds are removed. Therefore, you're welcome to check from time to time whether there's new work to be done. We appreciate every contribution.\n\n\n## Documentation & Tutorials\n\nAppImageLauncher is a tool for everyone, not just tech savvy people. However, there is a lack of documentation. We invite every interested user to improve our README, add and edit our\n[Wiki](https://github.com/TheAssassin/AppImageLauncher/wiki), write articles, make (video) tutorials etc. The only limit is your imagination!\n\nThe README already links to a lot of articles, videos, podcasts and potentially other media. If you find some more and want them to be added to the list, just send a\n[pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests).\n\n\n## Bug reporting\n\nIf you encounter a problem and consider it to be a bug, please do not hesitate to [open a new issue](https://github.com/TheAssassin/AppImageLauncher/issues/new). Even if you can't help fix the problem, reporting it is required\nand the only way for you to receive a solution. Also, if the problem is affecting others, too, others can find the discussion online and find out how to solve the issue.\n\nPlease make sure to add as many details as possible to your bug report. This way, the developers can focus on finding a solution instead of playing information ping-pong.\n\nSee also: https://www.chiark.greenend.org.uk/~sgtatham/bugs.html (but please don't send bug reports to Simon Tatham!)\n\n\n## Feature requests\n\nYou can also [open a new issue](https://github.com/TheAssassin/AppImageLauncher/issues/new) to request new features. If you have an idea and think it might help the users of the project, please don't hesitate to send it to us.\n\nPlease describe your idea as detailedly as possible.\n\n\n## Fix bugs and send pull requests\n\nIf you encounter a bug and have the skill and ability to find the solution even, please feel free to send us a pull request. Any contribution is welcome!\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.068359375,
          "content": "Copyright (C) 2018-2020 TheAssassin <theassassin@assassinate-you.net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.3154296875,
          "content": "# AppImageLauncher\nmakes your Linux desktop AppImage readyâ„¢\n<p align=\"center\">\n<img src=\"https://github.com/TheAssassin/AppImageLauncher/raw/master/resources/icons/hicolor/128x128/apps/AppImageLauncher.png\"/>\n</p>\n\nIntegrate AppImages to your application launcher with one click, and manage, update and remove them from there.\nDouble-click AppImages to open them, without having to make them executable first.\n\nAppImageLauncher plays well with other applications managing AppImages, for example app stores.\nHowever, it doesn't depend on any of those, and can run completely standalone.\n\n<p align=\"center\">\n<img src=\"https://github.com/TheAssassin/AppImageLauncher/raw/master/resources/doc/screenshot.png\"/>\n</p>\n\n> ### :smiley: Info on how to install and use AppImageLauncher on the [wiki](https://github.com/TheAssassin/AppImageLauncher/wiki).\n\nAppImageLauncher is a novel and unique solution of integrating with the system. It intercepts all attempts to open an AppImage to provide its integration features.\n\nBeing the launcher for AppImages, AppImageLauncher can control how the system treats AppImages. It integrates them into the system, provides helpers for updating or removing AppImages, and a lot more.\n\nOn their first execution (i.e., if they have not been integrated yet), it displays a dialog prompting the user whether to run the AppImage once, or move it to a predefined location and adding it to the application menus, launchers, etc.\n\n\n## Features\n\n### AppImage desktop integration\n\nThis core feature allows you to integrate AppImages you download into your application menu or launcher, to make it easier for you to launch them. It also takes care of moving them into a central location, where you can find them later.\nFurthermore, it sets up the update and removal entries in the launcher for you.\n\nAppImages use the term \"desktop integration\", as they're not \"installed\" in the traditional sense. They remain single, self-contained executable files. AppImageLauncher and other tools extract and patch the [desktop entry](https://specifications.freedesktop.org/desktop-entry-spec/latest/) as well as the related [icons](https://specifications.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html) into the relevant locations.\nMore information on desktop integration can be found in the [AppImage docs](https://docs.appimage.org/reference/desktop-integration.html).\n\n\n### Update management\n\nAfter desktop integration, the context menu of the AppImage's entry in the application launcher will have an \"Update\" entry that launches a little helper tool to apply updates.\n\n\n### Remove AppImages from system\n\nClick the \"Remove\" entry in the context menu in the application launcher and the removal tool will ask you to confirm.\nIf you choose to do so, the desktop integration is undone, and the file is removed from your system.\n\n\n### CLI\n\nThe packages ship with a CLI tool called `ail-cli`, providing basic operations in the terminal, for automation in scripts etc. As of February 2020, only integration and unintegration are supported. More features planned!\n\n\n## Differences between regular and Lite version\n\nFrom version 1.4.0, there's a *Lite* edition of AppImageLauncher.\nIt provides all of AppImageLauncher you can get without having root access to your computer. AppImageLauncher Lite is shipped as an AppImage, which can be installed by users from the command-line.\nEnter `./appimagelauncher-lite...AppImage install`. in a terminal, and it integrates itself in the users' home directory.\n\n**Traditional packages are highly recommended *if possible*, as they provide many more features and provide a much better overall experience.**\n\n*Note: if you're interested in a GUI installer, please consider sending a pull request. More information in [#243](https://github.com/TheAssassin/AppImageLauncher/issues/243).*\n\n## About\n\nCurrently, desktop environments consider executables a security risk, and would rather have users use the app stores they include.\n\nThe ability to easily run them, however, isn't all that's needed to provide a good AppImage desktop experience. Making them accessible from the application menus and launchers is a level of \"desktop integration\" that can't be provided by the AppImages themselves properly (even though some AppImages ship with a \"desktop integration script\" prompting the user to do so). There are too many impliciations requiring external software, especially regarding cleanup and removal of AppImages. (If applications are simply made executable, they're still spread all over the users' personal files and folders.) The average user will not find a \"Downloads\" directory full of AppImages with cryptic filenames friendly.\n\nTherefore, system-side ways have been developed to perform the desktop integration.\nOne of the first solutions was [appimaged](https://github.com/AppImage/appimaged), a daemon users could install to perform everything automagically in the background, without notifying the user in any way.\nIt scans a predefined set of directories including `~/Downloads` and `~/.bin`, making recognized AppImages executable and then performing the desktop integration. Those operations and monitoring produced a lot of file I/O, so were rather inefficent. Also, many users don't like the lack of control. The approach also opens attack vectors and thus can be considered a security hazard, as a vulnerability discovered in appimaged recently has shown.\n\n\n## As seen in\n\n### :movie_camera: Tutorials:\n\n* [Eric Adams](https://invidio.us/watch?v=D2WA2zdLvVk)\n\n\n### :sound: Podcasts:\n\n* [DLN Xtend 11h](ttps://dlnxtend.com/11)\n  + [Invidious](https://invidio.us/watch?v=yaZygqyN_KE)\n* [DLN Xtend 14](https://dlnxtend.com/14)\n  + [Invidious](https://invidio.us/watch?v=QCkJ74kOlGQ)\n\n\n### :page_facing_up: Articles\n\n  * [Linux Uprising](https://www.linuxuprising.com/2018/04/easily-run-and-integrate-appimage-files.html) (English)\n  * [Linux-OS.net](https://linux-os.net/appimagelauncher-ejecuta-e-integra-facilmente-aplicaciones-en-appimage/) (Spanish)\n    + Same article also available [here](https://blog.desdelinux.net/appimagelauncher-ejecuta-e-integra-facilmente-aplicaciones-en-appimage/).\n  * [Edvaldo Brito](https://www.edivaldobrito.com.br/integrador-appimagelauncher-no-linux/) (Portuguese)\n  * [przystajnik](https://404.g-net.pl/2018/08/appimagelauncher/) (Polish)\n  * [Linux Mint Magyar KÃ¶zÃ¶ssÃ©g](https://linuxmint.hu/blog/2018/12/appimage) (Hungarian)\n  * [FreeYourDesktop](https://medium.com/@freeyourdesktopblog/install-manage-appimages-with-appimagelauncher-2a2078c55f37) (English)\n    + Please note that AppImageLauncher could *not* be \"installed\" via AppImage at that time, only recently was a Lite version added, that now can be installed from an AppImage (more info to follow.)\n  * [Pardus forum](https://forum.pardus.org.tr/t/appimagelauncher-tek-tiklama-ile-appimage-sisteminizle-butunlestiriniz/11275) (Turkish)\n  * [Linux Team Vietnam](https://linuxteamvietnam.us/cach-chay-ung-dung-dinh-dang-appimage-tren-linux/) (Vietnamese)\n    + Contains a few wrong assumptions: as soon as AppImageLauncher is installed, you do not have to make AppImages executable, you can just double-click them (or otherwise open them, e.g., from your file- or web-browsers' downloads).\n  * [RealLinuxUser](https://www.reallinuxuser.com/15-best-things-to-do-after-installing-zorin-os-15/) (English)\n  * [manjaro.site](https://manjaro.site/how-to-install-appimage-launcher-on-ubuntu-19-04/) (English)\n  * [CubicleNate's Techpad](https://cubiclenate.com/2020/01/09/appimagelauncher-appimage-manager-on-opensuse/) (English)\n    + See also: [CubicleNate's Techpad](https://cubiclenate.com/2020/01/10/noodlings-lighting-the-emby-server-with-kdenlive/)\n  * [CHRIS R MILLER](https://chrisrmiller.com/2019/05/29/integrate-appimages-into-your-linux-distro/) (English)\n  * [doLys Forum](https://dolys.fr/forums/topic/gerer-les-appimage-sous-linux/) (French)\n  * [LINUXUSER](https://linux-user.gr/t/eykolh-chrhsh-efarmogwn-appimage/2066) (Greek)\n\n\n## Installation\n\n### System-wide Installation\n\nAppImageLauncher integrates deeply into the system. Therefore, an installation via native system packages is the preferred way to install AppImageLauncher. This way, AppImageLauncher's package can perform the necessary steps to have your system use it for all AppImage invocations.\n\nCompatibility table (likely incomplete.) Please, feel free to open PRs to add distributions.\n\n| Release filename | Build system | Compatible distributions (incomplete) |\n| ---------------- | ------------ | ------------------------------------- |\n| `appimagelauncher-<version>.xenial_(amd64,i386).deb` | Ubuntu Xenial | Ubuntu Xenial (16.04), Debian Stretch (9), Netrunner 17.01 |\n| `appimagelauncher-<version>.bionic_(amd64,i386).deb` | Ubuntu Bionic | Ubuntu Bionic (18.04), Ubuntu Disco (19.04), Ubuntu Eoan (19.10) and newer, Debian buster (10) and newer, Netrunner 19.01, 19.08 and newer, LMDE 6 \"Faye\" |\n| ~~`appimagelauncher-<version>.disco_(amd64,i386).deb`~~  | ~~Ubuntu Disco~~  | ~~Ubuntu Disco (19.04)~~ |\n| ~~`appimagelauncher-<version>.eoan_(amd64,i386).deb`~~   | ~~Ubuntu Eoan~~   | ~~Ubuntu Eoan (19.10) and newer~~ |\n| ~~`appimagelauncher-<version>.buster_(amd64,i386).deb`~~ | ~~Debian Buster~~ | ~~Debian Buster (10) and newer, Netrunner 19.01 and 19.08~~ |\n| `appimagelauncher-<version>.(i386,x86_64).rpm`       | Ubuntu Xenial | openSUSE Leap 42 and newer, possibly openSUSE Tumbleweed, SUSE Enterprise Linux, RHEL 7, CentOS 7 |\n\n  - Ubuntu Trusty (14.04) and newer\n    - **Important:** Ubuntu Bionic (and newer) broke with the backwards compatibility of its `libcurl` packages, therefore users of these systems need to install the special `bionic` package\n  - Debian stable (Jessie, 8) and newer\n  - Netrunner 17 and newer\n  - openSUSE Leap 42 and newer\n  - openSUSE Tumbleweed\n\nThe installation of packages on systems with a set of packages similar to one of the listed ones (e.g., Linux Mint, Fedora, etc.) should work as well.\n\n**Note:** For Ubuntu 19.04 and newer as well as derivatives, there's two PPAs (personal package archives) available providing a simple way to install and update AppImageLauncher (thanks [Peter Jonas](https://github.com/shoogle) for creating and maintaining them):\n\n  - stable (provides all releases): https://launchpad.net/~appimagelauncher-team/+archive/ubuntu/stable\n  - daily (latest and greatest but possibly unstable): https://launchpad.net/~appimagelauncher-team/+archive/ubuntu/daily\n\nManjaro and Netrunner Rolling users can install AppImageLauncher with a distribution-provided package called `appimagelauncher`.\n\nArch Linux, Manjaro, Antergos and Netrunner Rolling users can use AUR to install AppImageLauncher by installing [appimagelauncher](https://aur.archlinux.org/packages/appimagelauncher) or [appimagelauncher-git](https://aur.archlinux.org/packages/appimagelauncher-git) (possibly broken, see [#574](https://github.com/TheAssassin/AppImageLauncher/issues/574)) (thanks @NuLogicSystems for setting up the build). \n\nOther systems derived from the listed ones, such as for instance Linux Mint (Ubuntu), should support AppImageLauncher as well.\nIf they don't, please don't hesitate to create an issue.\n\n**Note:** Feel free to request support for other distributions by [opening an issue](https://github.com/TheAssassin/AppImageLauncher/issues/new).\n\n\n### Build from source\n\nBuild instructions in [BUILD.md](BUILD.md).\n\n\n## Background\n\nTechnical details about how AppImageLauncher registers itself on [this wiki page](https://github.com/TheAssassin/AppImageLauncher/wiki/Idea).\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}