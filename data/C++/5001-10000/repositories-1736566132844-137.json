{
  "metadata": {
    "timestamp": 1736566132844,
    "page": 137,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "focus-creative-games/hybridclr",
      "stars": 6742,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "MIT License\n\nCopyright (c) 2023 Code Philosophy Technology Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.564453125,
          "content": "- [README 中文](./README.md)\n- [README English](./README_EN.md)\n\n# HybridCLR\n\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE)\n\n![logo](./docs/images/logo.jpg)\n\n<br/>\n<br/>\n\nHybridCLR是一个**特性完整、零成本、高性能、低内存**的**近乎完美**的Unity全平台原生c#热更新解决方案。\n\nHybridCLR扩充了il2cpp运行时代码，使它由纯[AOT](https://en.wikipedia.org/wiki/Ahead-of-time_compilation) runtime变成AOT+Interpreter 混合runtime，进而原生支持动态加载assembly，从底层彻底支持了热更新。使用HybridCLR技术的游戏不仅能在Android平台，也能在IOS、Consoles、WebGL等所有il2cpp支持的平台上高效运行。\n\n由于HybridCLR对ECMA-335规范 的良好支持以及对Unity开发工作流的高度兼容，Unity项目在接入HybridCLR后，可以几乎无缝地获得C#代码热更新的能力，开发者不需要改变日常开发习惯和要求。HybridCLR首次实现了将Unity平台的全平台代码热更新方案的工程难度降到几乎为零的水平。\n\n欢迎拥抱现代原生C#热更新技术 ！！！\n\n## 文档\n\n- [官方文档](https://hybridclr.doc.code-philosophy.com/docs/intro)\n- [快速上手](https://hybridclr.doc.code-philosophy.com/docs/beginner/quickstart)\n- [商业项目案例](https://hybridclr.doc.code-philosophy.com/docs/other/businesscase)\n\n\n## 特性\n\n- 近乎完整实现了[ECMA-335规范](https://www.ecma-international.org/publications-and-standards/standards/ecma-335/)，只有极少量的[不支持的特性](https://hybridclr.doc.code-philosophy.com/docs/basic/notsupportedfeatures)。\n- 零学习和使用成本。对绝大多数开发者来说写代码近乎没有限制。 热更新代码与AOT代码无缝工作，可以随意写继承、**泛型**、**反射**之类的代码。不需要额外写任何特殊代码、没有代码生成\n- 完全支持多线程，包含但不限于 volatile、ThreadStatic、async Task等相关功能和特性。这是其他所有热更新方案都不支持的\n- 几乎完全兼容Unity的工作流。包括且不限于支持热更新**MonoBehaviour**、ScriptableObject、**DOTS**技术，资源上挂载的热更新脚本可以正确实例化，这是其他所有热更新方案都不支持的\n- 执行高效。实现了一个极其高效的寄存器解释器，所有指标都大幅优于其他热更新方案。[性能测试报告](https://hybridclr.doc.code-philosophy.com/docs/basic/performance)\n- 内存高效。 热更新脚本中定义的类跟普通c#类占用一样的内存空间，远优于其他热更新方案。[内存占用报告](https://hybridclr.doc.code-philosophy.com/docs/basic/memory)\n- 支持MonoPInvokeCallback，可以与native代码或者其他语言如lua、javascript、python良好交互\n- 支持一些il2cpp不支持的特性，如__makeref、 __reftype、__refvalue指令\n- 支持独创的 **Differential Hybrid Execution(DHE)** 差分混合执行技术，即可以对AOT dll任意增删改，会智能地让未改动的函数以AOT方式运行，变化或者新增的函数以interpreter模式运行，让热更新的游戏逻辑的运行性能基本达到原生AOT的水平\n- 支持 **热重载** 技术，可以100%卸载程序集\n- 支持 **热修复** 技术，不需要重启游戏即可无感修复bug\n- 支持现代的dll加密技术，有效保障代码安全\n\n## 支持的版本与平台\n\n- 支持2019.4.x、2020.3.x、2021.3.x、2022.3.x、2023.2.x、6000.0.x全系列LTS版本\n- 支持所有il2cpp支持的平台\n- 支持团结引擎和鸿蒙平台\n\n## 工作原理\n\nHybridCLR从mono的 [mixed mode execution](https://www.mono-project.com/news/2017/11/13/mono-interpreter/) 技术中得到启发，为unity的il2cpp之类的AOT runtime额外提供了interpreter模块，将它们由纯AOT运行时改造为\"AOT + Interpreter\"混合运行方式。\n\n![icon](docs/images/architecture.png)\n\n更具体地说，HybridCLR做了以下几点工作：\n\n- 实现了一个高效的元数据(dll)解析库\n- 改造了元数据管理模块，实现了元数据的动态注册\n- 实现了一个IL指令集到自定义的寄存器指令集的compiler\n- 实现了一个高效的寄存器解释器\n- 额外提供大量的instinct函数，提升解释器性能\n\n## 稳定性状况\n\nHybridCLR已经被广泛验证是非常高效、稳定的Unity热更新解决方案，良好满足大中型商业项目的稳定和性能要求。\n\n目前已经有数千个商业游戏项目接入了HybridCLR，其中有超过千个已经在App Store和Google Player上线，仅仅iOS免费榜前500名中就有近百款使用了HybridCLR。上线的项目中包括MMORPG、重度卡牌、重度塔防之类的游戏。国内绝大多数**Top游戏公司**都已经在使用HybridCLR。\n\n可查看我们已知的头部公司中使用HybridCLR并且已经上线的[项目列表](https://hybridclr.doc.code-philosophy.com/docs/other/businesscase)。\n\n## 支持与联系\n\n- 官方1群：651188171（满）\n- 新手1群：428404198（满）\n- 新手2群：**680274677（推荐）**\n- discord频道 https://discord.gg/BATfNfJnm2\n- 商业合作邮箱: business#code-philosophy.com\n- [商业化支持](https://hybridclr.doc.code-philosophy.com/docs/business/intro)\n\n## 关于作者\n\n**walon** ：**Code Philosophy（代码哲学）** 创始人\n\n毕业于清华大学物理系，2006年CMO金牌，奥数国家集训队成员，保送清华基科班。专注于游戏技术，擅长开发架构和基础技术设施。\n\n## license\n\nHybridCLR is licensed under the [MIT](https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE) license\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 6.55078125,
          "content": "\n- [README Chinese](./README.md)\n- [README English](./README_EN.md)\n\n# HybridCLR\n\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE)\n\n![logo](./docs/images/logo.jpg)\n\n<br/>\n<br/>\n\nHybridCLR is a **feature-complete, zero-cost, high-performance, low-memory** **near-perfect** Unity cross-platform native C# hot update solution.\n\nHybridCLR extends the il2cpp runtime code, transforming it from a pure [AOT](https://en.wikipedia.org/wiki/Ahead-of-time_compilation) runtime to an AOT+Interpreter hybrid runtime, thereby natively supporting the dynamic loading of assemblies and fundamentally supporting hot updates from the bottom layer. Games using HybridCLR technology can not only run efficiently on the Android platform but also on all platforms supported by il2cpp, including iOS, Consoles, WebGL, etc.\n\nThanks to HybridCLR's good support for the ECMA-335 specification and its high compatibility with the Unity development workflow, Unity projects can almost seamlessly gain the ability to hot update C# code after integrating HybridCLR. Developers do not need to change their daily development habits and requirements. HybridCLR is the first to achieve the engineering difficulty of a full-platform code hot update solution for the Unity platform to almost zero.\n\nWelcome to embrace modern native C# hot update technology!\n\n## Documentation\n\n- [Official Documentation](https://hybridclr.doc.code-philosophy.com/en/docs/intro)\n- [Quick Start](https://hybridclr.doc.code-philosophy.com/en/docs/beginner/quickstart)\n- [Business Project Cases](https://hybridclr.doc.code-philosophy.com/en/docs/other/businesscase)\n\n## Features\n\n- Nearly complete implementation of the [ECMA-335 specification](https://www.ecma-international.org/publications-and-standards/standards/ecma-335/), with only a very small number of [unsupported features](https://hybridclr.doc.code-philosophy.com/en/docs/basic/notsupportedfeatures).\n- Zero learning and usage costs. For most developers, writing code is almost unrestricted. Hot update code works seamlessly with AOT code, allowing for inheritance, **generics**, **reflection**, and other code without additional special code or code generation.\n- Full support for multithreading, including but not limited to volatile, ThreadStatic, async Task, and related features and characteristics. This is not supported by any other hot update solution.\n- Almost complete compatibility with Unity's workflow. This includes support for hot updating **MonoBehaviour**, ScriptableObject, **DOTS** technology, and correctly instantiating hot update scripts mounted on resources, which is not supported by any other hot update solution.\n- Efficient execution. A highly efficient register interpreter has been implemented, with all indicators significantly better than other hot update solutions. [Performance Test Report](https://hybridclr.doc.code-philosophy.com/en/docs/basic/performance)\n- Efficient memory usage. Classes defined in hot update scripts occupy the same memory space as ordinary C# classes, far superior to other hot update solutions. [Memory Usage Report](https://hybridclr.doc.code-philosophy.com/en/docs/basic/memory)\n- Supports MonoPInvokeCallback, enabling good interaction with native code or other languages such as Lua, JavaScript, Python.\n- Supports some features not supported by il2cpp, such as __makeref, __reftype, __refvalue instructions.\n- Supports the unique **Differential Hybrid Execution (DHE)** technology, which allows for arbitrary additions, deletions, and modifications to AOT DLLs. It intelligently runs unchanged functions in AOT mode and changed or newly added functions in interpreter mode, bringing the performance of hot-updated game logic close to that of native AOT.\n- Supports **hot reload** technology, allowing 100% unloading of assemblies.\n- Supports **Hotfix** technology, allowing for bug fixes without the need to restart the game, resulting in a seamless repair experience.\n- Supports modern DLL encryption technology to effectively protect code security.\n\n## Supported Versions and Platforms\n\n- Supports all LTS versions including 2019.4.x, 2020.3.x, 2021.3.x, 2022.3.x, 2023.2.x, 6000.0.x.\n- Supports all platforms supported by il2cpp.\n- Supports Tuanjie(China) Engine and HarmonyOS platform.\n\n## Working Principle\n\nHybridCLR draws inspiration from Mono's [mixed mode execution](https://www.mono-project.com/news/2017/11/13/mono-interpreter/) technology, providing an interpreter module for AOT runtimes like Unity's il2cpp, transforming them from pure AOT runtimes to \"AOT + Interpreter\" hybrid operation modes.\n\n![icon](docs/images/architecture.png)\n\nMore specifically, HybridCLR has done the following:\n\n- Implemented an efficient metadata (dll) parsing library.\n- Modified the metadata management module to achieve dynamic registration of metadata.\n- Implemented a compiler that converts IL instructions to a custom register instruction set.\n- Implemented an efficient register interpreter.\n- Provided a large number of instinct functions to enhance interpreter performance.\n\n## Stability Status\n\nHybridCLR has been widely verified as an efficient and stable Unity hot update solution, meeting the stability and performance requirements of medium and large commercial projects.\n\nCurrently, thousands of commercial game projects have integrated HybridCLR, with over a thousand already launched on the App Store and Google Play. Nearly a hundred of the top 500 free iOS games use HybridCLR, including MMORPGs, heavy card games, and heavy tower defense games. Most of the **Top Game Companies** in China are already using HybridCLR.\n\nYou can view the [list of known top companies using HybridCLR and their launched projects](https://hybridclr.doc.code-philosophy.com/en/docs/other/businesscase).\n\n## Support and Contact\n\n- Official Group 1: 651188171 (Full)\n- Beginner Group 1: 428404198 (Full)\n- Beginner Group 2: **680274677 (Recommended)**\n- Discord channel https://discord.gg/BATfNfJnm2\n- Business cooperation email: business#code-philosophy.com\n- [Commercial Support](https://hybridclr.doc.code-philosophy.com/en/docs/business/intro)\n\n## About the Author\n\n**walon**: Founder of **Code Philosophy (代码哲学)**\n\nGraduated from the Department of Physics at Tsinghua University, gold medalist of the 2006 CMO, member of the National Mathematical Olympiad Training Team, and sent to the Basic Science Class of Tsinghua. Focused on game technology, proficient in development architecture and basic technical infrastructure.\n\n## License\n\nHybridCLR is licensed under the [MIT](https://github.com/focus-creative-games/hybridclr/blob/main/LICENSE) license.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hybridclr",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}