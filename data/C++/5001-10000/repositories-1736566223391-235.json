{
  "metadata": {
    "timestamp": 1736566223391,
    "page": 235,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mcmilk/7-Zip-zstd",
      "stars": 5287,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.275390625,
          "content": "\n# default\n* text=auto\n\n# leave unmodified\n*.ico binary\n*.bmp binary\n\n# Visual Studio\n*.dsp text eol=crlf\n*.dsw text eol=crlf\n*.manifest text eol=crlf\n\n# Windows\n*.bat text eol=crlf\n*.cmd text eol=crlf\n*.hhp text eol=crlf\n*.inf text eol=crlf\n*.nsi text eol=crlf\n*.wxs text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "\n*.obj\n*.exe\n*.res\n*.dll\n*.pch\n*.exp\n*.lib\n\n"
        },
        {
          "name": "Asm",
          "type": "tree",
          "content": null
        },
        {
          "name": "C",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 4.0625,
          "content": "  7-Zip-ZSTD\n  ~~~~~\n  License for use and distribution\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  7-Zip Copyright (C) 1999-2021 Igor Pavlov.\n  7-Zip-ZSTD Copyright (C) 2016-2021 Tino Reichardt.\n\n  The licenses for files are:\n\n    1) 7z.dll:\n         - The \"GNU LGPL version 2.1 or later\" as main license for most of the code\n         - The \"GNU LGPL version 2.1 or later\" with \"unRAR license restriction\" for some code\n         - The \"BSD 3-clause License\" for some code\n    2) All other files: the \"GNU LGPL\".\n\n  Redistributions in binary form must reproduce related license information from this file.\n\n  Note:\n    You can use 7-Zip-ZSTD on any computer, including a computer in a commercial\n    organization. You don't need to register or pay for 7-Zip-ZSTD.\n\n\n  GNU LGPL information\n  --------------------\n    SPDX-License-Identifier: LGPL-2.1-or-later\n    \n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You can receive a copy of the GNU Lesser General Public License version 2.1 from\n    https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html\n\n\n\n\n  BSD 3-clause License\n  --------------------\n    SPDX-License-Identifier: BSD-3-Clause\n    \n    The \"BSD 3-clause License\" is used for the code in 7z.dll that implements LZFSE data decompression.\n    That code was derived from the code in the \"LZFSE compression library\" developed by Apple Inc,\n    that also uses the \"BSD 3-clause License\":\n\n    ----\n    Copyright (c) 2015-2016, Apple Inc. All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n    2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer\n        in the documentation and/or other materials provided with the distribution.\n\n    3.  Neither the name of the copyright holder(s) nor the names of any contributors may be used to endorse or promote products derived\n        from this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    ----\n\n\n\n\n  unRAR license restriction\n  -------------------------\n\n    The decompression engine for RAR archives was developed using source\n    code of unRAR program.\n    All copyrights to original unRAR code are owned by Alexander Roshal.\n\n    The license for original unRAR code has the following restriction:\n\n      The unRAR sources cannot be used to re-create the RAR compression algorithm,\n      which is proprietary. Distribution of modified unRAR sources in separate form\n      or as a part of other software is permitted, provided that it is clearly\n      stated in the documentation and source comments that the code may\n      not be used to develop a RAR (WinRAR) compatible archiver.\n\n\n  --\n  Tino Reichardt"
        },
        {
          "name": "CPP",
          "type": "tree",
          "content": null
        },
        {
          "name": "DOC",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.3173828125,
          "content": "\n# README\n\nThis is the Github Page of [7-Zip] ZS with support of additional Codecs. The library used therefore is located here: [Multithreading Library](https://github.com/mcmilk/zstdmt)\n\nYou can install it in two ways:\n1. complete setup with additions within the GUI and a modified Explorer context menu\n2. only the codec plugin that goes to your existing [7-Zip] installation (no GUI changes and no additional Hashers)\n\n# Status\n\n[![Build status](https://ci.appveyor.com/api/projects/status/j9cwlxqe1g21c4dj?svg=true)](https://ci.appveyor.com/project/mcmilk/7-zip-zstd)\n[![Latest stable release](https://img.shields.io/github/release/mcmilk/7-Zip-zstd.svg)](https://github.com/mcmilk/7-Zip-zstd/releases)\n[![PayPal.me](https://img.shields.io/badge/PayPal-me-blue.svg?maxAge=2592000)](https://www.paypal.me/TinoReichardt)\n\n\n## Codec overview\n1. [Zstandard] v1.5.6 is a real-time compression algorithm, providing high compression ratios. It offers a very wide range of compression / speed trade-off, while being backed by a very fast decoder.\n   - Levels: 1..22\n\n2. [Brotli] v.1.0.9 is a generic-purpose lossless compression algorithm that compresses data using a combination of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling, with a compression ratio comparable to the best currently available general-purpose compression methods. It is similar in speed with deflate but offers more dense compression.\n   - Levels: 0..11\n\n3. [LZ4] v1.9.4 is lossless compression algorithm, providing compression speed at 400 MB/s per core (0.16 Bytes/cycle). It features an extremely fast decoder, with speed in multiple GB/s per core (0.71 Bytes/cycle). A high compression derivative, called LZ4_HC, is available, trading customizable CPU time for compression ratio.\n   - Levels: 1..12\n\n4. [LZ5] v1.5 is a modification of LZ4 which was meant for a better ratio at cost of slower compression and decompression. It's superseded by [Lizard] now.\n   - Levels: 1..15\n\n5. [Lizard] v1.0 is an efficient compressor with fast decompression. It achieves compression ratio that is comparable to zip/zlib and zstd/brotli (at low and medium compression levels) at decompression speed of 1000 MB/s and faster.\n   - Levels 10..19 (fastLZ4) are designed to give about 10% better decompression speed than LZ4\n   - Levels 20..29 (LIZv1) are designed to give better ratio than LZ4 keeping 75% decompression speed\n   - Levels 30..39 (fastLZ4 + Huffman) adds Huffman coding to fastLZ4\n   - Levels 40..49 (LIZv1 + Huffman) give the best ratio, comparable to zlib and low levels of zstd/brotli, but with a faster decompression speed\n\n6. [Fast LZMA2] v1.0.1 is a LZMA2 compression algorithm, 20% to 100% faster than normal LZMA2 at levels 5 and above, but with a slightly lower compression ratio. It uses a parallel buffered radix matchfinder and some optimizations from Zstandard. The codec uses much less additional memory per thread than standard LZMA2.\n   - Levels: 1..9\n\n## 7-Zip Zstandard Edition (full setup, with GUI and Explorer integration)\n\n### Installation (via setup)\n1. download the setup from here [7-Zip ZS Releases](https://github.com/mcmilk/7-Zip-zstd/releases)\n2. install it, like the default [7-Zip]\n3. use it ;)\n4. you may check, if the [7-Zip] can deal with [Zstandard] or other codecs via this command: `7z.exe i`\n\nThe output should look like this:\n```\n7-Zip 24.08 ZS v1.5.6 (x64) : Copyright (c) 1999-2022 Igor Pavlov, 2016-2023 Tino Reichardt : 2023-06-18\n\nLibs:\n 0  c:\\Program Files\\7-Zip-Zstandard\\7z.dll\n 1  C:\\Program Files\\7-Zip-Zstandard\\Codecs\\Iso7z.64.dll\n \nFormats:\n...\n 0 CK            xz       xz txz (.tar) FD 7 z X Z 00\n 0               Z        z taz (.tar)  1F 9D\n 0 CK            zstd     zst zstd tzst (.tar) tzstd (.tar) 0 x F D 2 F B 5 2 5 . . 0 x F D 2 F B 5 2 8 00\n 0 C   F         7z       7z            7 z BC AF ' 1C\n 0     F         Cab      cab           M S C F 00 00 00 00\n...\n\nCodecs:\n 0 4ED   303011B BCJ2\n 0  EDF  3030103 BCJ\n 0  EDF  3030205 PPC\n 0  EDF  3030401 IA64\n 0  EDF  3030501 ARM\n 0  EDF  3030701 ARMT\n 0  EDF  3030805 SPARC\n 0  EDF    20302 Swap2\n 0  EDF    20304 Swap4\n 0  ED     40202 BZip2\n 0  ED         0 Copy\n 0  ED     40109 Deflate64\n 0  ED     40108 Deflate\n 0  EDF        3 Delta\n 0  ED        21 LZMA2\n 0  ED     30101 LZMA\n 0  ED     30401 PPMD\n 0   D     40301 Rar1\n 0   D     40302 Rar2\n 0   D     40303 Rar3\n 0   D     40305 Rar5\n 0  ED   4F71102 BROTLI\n 0  ED   4F71104 LZ4\n 0  ED   4F71106 LIZARD\n 0  ED   4F71105 LZ5\n 0  ED   4F71101 ZSTD\n 0  ED        21 FLZMA2\n 0  EDF  6F10701 7zAES\n 0  EDF  6F00181 AES256CBC\n\nHashers:\n 0   32      202 BLAKE2sp\n 0   32      204 BLAKE3\n 0    4        1 CRC32\n 0    8        4 CRC64\n 0   16      205 MD2\n 0   16      206 MD4\n 0   16      207 MD5\n 0   20      201 SHA1\n 0   32        A SHA256\n 0   48      208 SHA384\n 0   64      209 SHA512\n 0   32      20A SHA3-256\n 0   48      20B SHA3-384\n 0   64      20C SHA3-512\n 0    4      20D XXH32\n 0    8      20E XXH64\n```\n\n### Usage and features of the full installation\n\n- compression and decompression for [Brotli], [Lizard], [LZ4], [LZ5] and [Zstandard] within the [7-Zip] container format\n- compression and decompression of [Brotli] (`.br`), [Lizard] (`.liz`), [LZ4] (`.lz4`), [LZ5] (`.lz5`) and [Zstandard] (`.zst`) files\n- handling of ZIP files with [Zstandard] compression\n- included [lzip] decompression support, patch from: https://download.savannah.gnu.org/releases/lzip/7zip/\n- explorer context menu: _\"Add to xy.7z\"_ will use all parameters of the last \"Add to Archive\" compression dialog (this includes: method, level, dictionary, blocksize, threads and paramters input box)\n- squashfs files with LZ4 or Zstandard compression can be handled\n- several history settings aren't stored by default, look [here](https://sourceforge.net/p/sevenzip/discussion/45797/thread/dc2ac53d/?limit=25) for some info about that, you can restore original 7-Zip behavior via `tools->options->settings`\n- these hashes can be calculated: CRC32, CRC64, MD2, MD4, MD5, SHA1, SHA256, SHA384, SHA512, SHA3-256, SHA3-384, SHA3-512, XXH32, XXH64, BLAKE2sp, BLAKE3 (lowercase or uppercase)\n\n```\n7z a archiv.7z -m0=zstd -mx0   Zstandard Fastest Mode, without BCJ preprocessor\n7z a archiv.7z -m0=zstd -mx1   Zstandard Fast mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=zstd -mx..  ...\n7z a archiv.7z -m0=zstd -mx21  Zstandard 2nd Slowest Mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=zstd -mx22  Zstandard Ultra Mode, with BCJ preprocessor on executables\n\n7z a archiv.7z -m0=lz4 -mx0   LZ4 Fastest Mode, without BCJ preprocessor\n7z a archiv.7z -m0=lz4 -mx1   LZ4 Fast mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=lz4 -mx..  ...\n7z a archiv.7z -m0=lz4 -mx12  LZ4 Ultra Mode, with BCJ preprocessor on executables\n\n7z a archiv.7z -m0=lz5 -mx0   LZ5 Version 1.5 Fastest Mode, without BCJ preprocessor\n7z a archiv.7z -m0=lz5 -mx1   LZ5 Version 1.5 Fast mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=lz5 -mx..  ...\n7z a archiv.7z -m0=lz5 -mx16  LZ5 Version 1.5 Ultra Mode, with BCJ preprocessor on executables\n\n7z a archiv.7z -m0=flzma2 -mx1   Fast LZMA2 Fastest mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=flzma2 -mx..  ...\n7z a archiv.7z -m0=flzma2 -mx9   Fast LZMA2 Ultra Mode, with BCJ preprocessor on executables\n\n7z x -so test.tar.zst | 7z l -si -ttar\n-> show contents of zstd compressed tar archive test.tar.zst\n\n7z x -so test.tar.lz | 7z l -si -ttar\n-> show contents of lzip compressed tar archive test.tar.lz\n```\n\n![Explorer inegration](https://mcmilk.de/projects/7-Zip-zstd/Add-To-Archive.png \"Add to Archive Dialog with ZSTD options\")\n![File Manager](https://mcmilk.de/projects/7-Zip-zstd/Fileman.png \"File Manager with the Listing of an Archive\")\n![Methods](https://mcmilk.de/projects/7-Zip-zstd/Methods2.png \"Methods\")\n![Hashes](https://mcmilk.de/projects/7-Zip-zstd/Hashes.png \"Hashes\")\n![Settings](https://mcmilk.de/projects/7-Zip-zstd/Settings.png \"Settings for storing the history within the registry.\")\n\n## Zstandard codec Plugin for Mainline 7-Zip\n\n### Installation (via plugin)\n\n1. download the `Codecs.7z` archive from here [7-Zip ZS Releases](https://github.com/mcmilk/7-Zip-zstd/releases), this archive holds binaries, which are compatible with the Mainline version of [7-Zip]\n2. create a new directory named `Codecs` and put in there the zstd-x32.dll or the zstd-x64.dll, depending on your [7-Zip] installation\n   - normally, the x32 should go to: \"C:\\Program Files (x86)\\7-Zip\\Codecs\"\n   - the x64 version should go in here: \"C:\\Program Files\\7-Zip\\Codecs\"\n3. you could also replace the `7z.dll` directly within `C:\\Program Files (x86)\\7-Zip`\n4. then you may check if the dll is correctly installed via this command: `7z.exe i`\n\nThe output should look like this:\n```\n7-Zip 21.03 (x64) : Copyright (c) 1999-2021 Igor Pavlov : 2021-05-06\n\nLibs:\n 0  C:\\Program Files\\7-Zip\\7z.dll\n\nLibs:\n 0  c:\\Program Files\\7-Zip\\7z.dll\n 1  c:\\Program Files\\7-Zip\\Codecs\\brotli-x64.dll\n 2  c:\\Program Files\\7-Zip\\Codecs\\flzma2-x64.dll\n 3  c:\\Program Files\\7-Zip\\Codecs\\lizard-x64.dll\n 4  c:\\Program Files\\7-Zip\\Codecs\\lz4-x64.dll\n 5  c:\\Program Files\\7-Zip\\Codecs\\lz5-x64.dll\n 6  c:\\Program Files\\7-Zip\\Codecs\\zstd-x64.dll\n\n...\n\nCodecs:\n 0 4ED  303011B BCJ2\n 0  ED  3030103 BCJ\n 0  ED  3030205 PPC\n 0  ED  3030401 IA64\n 0  ED  3030501 ARM\n 0  ED  3030701 ARMT\n 0  ED  3030805 SPARC\n 0  ED    20302 Swap2\n 0  ED    20304 Swap4\n 0  ED    40202 BZip2\n 0  ED        0 Copy\n 0  ED    40109 Deflate64\n 0  ED    40108 Deflate\n 0  ED        3 Delta\n 0  ED       21 LZMA2\n 0  ED    30101 LZMA\n 0  ED    30401 PPMD\n 0   D    40301 Rar1\n 0   D    40302 Rar2\n 0   D    40303 Rar3\n 0   D    40305 Rar5\n 0  ED  6F10701 7zAES\n 0  ED  6F00181 AES256CBC\n 1  ED  4F71102 BROTLI\n 2  ED       21 FLZMA2\n 3  ED  4F71106 LIZARD\n 4  ED  4F71104 LZ4\n 5  ED  4F71105 LZ5\n 6  ED  4F71101 ZSTD\n```\n\n### Usage (codec plugin)\n\n- compression and decompression for [Brotli], [Fast LZMA2], [Lizard], [LZ4], [LZ5] and [Zstandard] within the 7-Zip container format\n- you can only create `.7z` files, the files like `.lz4`, `.lz5` and `.zst` are not covered by the plugins\n- when compressing binaries (*.exe, *.dll), you have to explicitly disable the bcj2 filter via `-m0=bcj`,\n  when using only the plugin dll's\n- so the usage should look like this:\n```\n7z a archiv.7z -m0=bcj -m1=zstd -mx1   Fast mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=bcj -m1=zstd -mx..  ...\n7z a archiv.7z -m0=bcj -m1=zstd -mx21  2nd Slowest Mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=bcj -m1=zstd -mx22  Ultra Mode, with BCJ preprocessor on executables\n7z a archiv.7z -m0=bcj -m1=brotli -mxN  ...\n7z a archiv.7z -m0=bcj -m1=lizard -mxN  ...\n7z a archiv.7z -m0=bcj -m1=lz4 -mxN  ...\n7z a archiv.7z -m0=bcj -m1=lz5 -mxN  ...\n7z a archiv.7z -m0=bcj -m1=flzma2 -mxN  ...\n```\n\n## Codec Plugin for Total Commander\n- download [TotalCmd.7z]\n- install it, by replacing the files `tc7z.dll` and `tc7z64.dll` with the new ones\n- you can check the Total Commander Forum for more information about this [DLL Files](https://ghisler.ch/board/viewtopic.php?p=319216)\n- decompression for [Brotli], [Lizard], [LZ4], [LZ5] and [Zstandard] ot the 7-Zip `.7z` format\n  will work out of the box with Total Commander now :-)\n\n## Codec Plugin for Far Manager\n- copy the `7z.dll` file from `C:\\Program Files\\7-Zip-Zstandard\\7z.dll` to `C:\\Program Files\\Far Manager\\Plugins\\ArcLite\\7z.dll`\n- then restart the Far manager - and on next start, you will have support for 7-Zip Zstandard archives ;-)\n\n## Benchmarks\n\nFor the benchmarks I am using Windows 7 64bit on my Laptop which has the following Hardware:\n- Intel i7-3632QM, limited to 2,2GHz, 16GB RAM, disabled swap space\n- the compression benchmark is read / written to an 4 GiB [ImDisk]\n- the decompression benchmark is also done in RAM via: `7z t archiv.7z`\n- the tool for measuring the times is [wtime](https://github.com/mcmilk/wtime), together with some [scripts](https://github.com/mcmilk/7-Zip-Benchmarking)\n- the testfile is generated via [generate-mcorpus](https://github.com/mcmilk/7-Zip-Benchmarking/blob/master/generate-mcorpus)\n- please note, that the benchmarks are outdated now (new one will come, but it needs some time)\n\n![Compression Speed vs Ratio](https://mcmilk.de/projects/7-Zip-zstd/dl/compr-v120.png \"Compression Speed vs Ratio\")\n![Decompression Speed](https://mcmilk.de/projects/7-Zip-zstd/dl/decomp-v120.png \"Decompression Speed per Level\")\n![Memory at Compression](https://mcmilk.de/projects/7-Zip-zstd/dl/MemCompr.png \"Memory usage at Compression\")\n![Memory at Decompression](https://mcmilk.de/projects/7-Zip-zstd/dl/MemDecomp.png \"Memory usage at Decompression\")\n\n\n## Themes\n\n- FileManager Toolbar Icon Theme: Glyfz 2016 by AlexGal [homepage](https://www.deviantart.com/alexgal23)\n- File Types Icon Theme: Windows 10 by masamunecyrus [homepage](https://www.deviantart.com/masamunecyrus)\n- Additional icons file types created by Mr4Mike4 [homepage](https://github.com/Mr4Mike4)\n\n## License and Redistribution\n\n- The same as the Mainline [7-Zip], which means most of the code is GNU LGPL v2.1-or-later\n- Read [COPYING](COPYING) for more details\n\n## Links\n\n- [7-Zip Homepage](https://www.7-zip.org/)\n- [7-Zip Zstandard Homepage](https://mcmilk.de/projects/7-Zip-zstd/)\n- [Request for inclusion](https://sourceforge.net/p/sevenzip/discussion/45797/thread/a7e4f3f3/) into the mainline 7-Zip:\n  - result, will currently not included :(\n- [p7zip Homepage](https://github.com/jinfeihan57/p7zip) - for Linux and MacOS with LZ4 and Zstandard\n\n## Donate\n\nYou find this project useful, maybe you consider a donation ;-)\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.me/TinoReichardt)\n\n## Version Information\n\n- 7-Zip ZS Version 24.08\n  - [Brotli] Version 1.0.9\n  - [Fast LZMA2] Version 1.0.1\n  - [Lizard] Version 1.0\n  - [LZ4] Version 1.9.4\n  - [LZ5] Version 1.5\n  - [Zstandard] Version 1.5.6\n  - [BLAKE3] Version 0.3.7\n\n/TR 2023-06-18\n\n## Notes\n\n- if you want an code signed installer, you need to donate sth.\n\n[7-Zip]:https://www.7-zip.org/\n[lzip]:https://www.nongnu.org/lzip/\n[Brotli]:https://github.com/google/brotli/\n[BLAKE3]:https://github.com/BLAKE3-team/BLAKE3\n[LZ4]:https://github.com/lz4/lz4/\n[LZ5]:https://github.com/inikep/lz5/\n[Zstandard]:https://github.com/facebook/zstd/\n[Lizard]:https://github.com/inikep/lizard/\n[ImDisk]:https://sourceforge.net/projects/imdisk-toolkit/\n[Fast LZMA2]:https://github.com/conor42/fast-lzma2\n[Codecs.7z]:https://github.com/mcmilk/7-Zip-zstd/releases\n[TotalCmd.7z]:https://github.com/mcmilk/7-Zip-zstd/releases\n"
        }
      ]
    }
  ]
}