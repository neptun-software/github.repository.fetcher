{
  "metadata": {
    "timestamp": 1736566252122,
    "page": 267,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OSGeo/gdal",
      "stars": 5020,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.1328125,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: true\nAlignConsecutiveAssignments: false\nAlignEscapedNewlinesLeft: false\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Allman\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIndentCaseLabels: true\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 1000000000\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        4\nUseTab:          Never\n# Add line breaks\nSeparateDefinitionBlocks: Always\nEmptyLineBeforeAccessModifier: LogicalBlock\n---\nLanguage: Json\nBasedOnStyle: llvm\n"
        },
        {
          "name": ".cmake-format.py",
          "type": "blob",
          "size": 9.0263671875,
          "content": "# ----------------------------------\n# Options affecting listfile parsing\n# ----------------------------------\nwith section(\"parse\"):\n\n    # Specify structure for custom cmake functions\n    additional_commands = {\n        \"add_gdal_driver\": {\n            \"flags\": [\"BUILTIN\", \"PLUGIN\"],\n            \"kwargs\": {\"DEF\": 1, \"TARGET\": 1, \"SOURCES\": \"+\"},\n        },\n        \"gdal_driver\": {\n            \"flags\": [\"BUILTIN\"],\n            \"kwargs\": {\n                \"TARGET\": 1,\n                \"SOURCES\": \"+\",\n                \"INCLUDES\": \"*\",\n                \"LIBRARIES\": \"*\",\n                \"DEFINITIONS\": \"*\",\n            },\n        },\n        \"gdal_dependent_format\": {\"pargs\": {\"nargs\": 3}},\n        \"gdal_driver_standard_includes\": {\"pargs\": {\"nargs\": 1}},\n        \"gdal_format\": {\"pargs\": {\"nargs\": 2}},\n        \"gdal_optional_format\": {\"pargs\": {\"nargs\": 2}},\n        \"gdal_target_interfaces\": {\"pargs\": {\"nargs\": 1}},\n        \"gdal_target_link_libraries\": {\"kwargs\": {\"TARGET\": 1, \"LIBRARIES\": \"*\"}},\n        \"is_plugin\": {\"pargs\": {\"nargs\": 2}},\n        \"ogr_default_driver\": {\"pargs\": {\"nargs\": 2}},\n        \"ogr_default_driver2\": {\"pargs\": {\"nargs\": 3}},\n        \"ogr_dependent_driver\": {\"pargs\": {\"nargs\": 3}},\n        \"ogr_optional_driver\": {\"pargs\": {\"nargs\": 2}},\n        \"gdal_swig_binding_target\": {\n            \"kwargs\": {},\n            \"pargs\": {\"flags\": [], \"nargs\": \"*\"},\n        },\n        \"gdal_swig_bindings\": {\"kwargs\": {}, \"pargs\": {\"flags\": [], \"nargs\": \"*\"}},\n        \"gdal_csharp_dll\": {\n            \"flags\": [],\n            \"kwargs\": {\n                \"TARGET\": 1,\n                \"NAMESPACE\": 1,\n                \"WRAPPER\": 1,\n                \"SWIG_INTERFACE\": 1,\n                \"CS_SOURCES\": \"*\",\n                \"WORKING_DIRECTORY\": \"*\",\n                \"DEPENDS\": \"*\",\n            },\n        },\n        \"gdal_java_wrap\": {\"flags\": [\"CXX\"], \"kwargs\": {\"TARGET\": \"*\", \"ARGS\": \"*\"}},\n    }\n\n    # Specify variable tags.\n    vartags = []\n\n    # Specify property tags.\n    proptags = []\n\n# -----------------------------\n# Options affecting formatting.\n# -----------------------------\nwith section(\"format\"):\n\n    # How wide to allow formatted cmake files\n    line_width = 120\n\n    # How many spaces to tab for indent\n    tab_size = 2\n\n    # If an argument group contains more than this many sub-groups (parg or kwarg\n    # groups) then force it to a vertical layout.\n    max_subgroups_hwrap = 2\n\n    # If a positional argument group contains more than this many arguments, then\n    # force it to a vertical layout.\n    max_pargs_hwrap = 6\n\n    # If a cmdline positional group consumes more than this many lines without\n    # nesting, then invalidate the layout (and nest)\n    max_rows_cmdline = 2\n\n    # If true, separate flow control names from their parentheses with a space\n    separate_ctrl_name_with_space = True\n\n    # If true, separate function names from parentheses with a space\n    separate_fn_name_with_space = False\n\n    # If a statement is wrapped to more than one line, than dangle the closing\n    # parenthesis on its own line.\n    dangle_parens = False\n\n    # If the trailing parenthesis must be 'dangled' on its on line, then align it\n    # to this reference: `prefix`: the start of the statement,  `prefix-indent`:\n    # the start of the statement, plus one indentation  level, `child`: align to\n    # the column of the arguments\n    dangle_align = \"prefix-indent\"\n\n    # If the statement spelling length (including space and parenthesis) is\n    # smaller than this amount, then force reject nested layouts.\n    min_prefix_chars = 4\n\n    # If the statement spelling length (including space and parenthesis) is larger\n    # than the tab width by more than this amount, then force reject un-nested\n    # layouts.\n    max_prefix_chars = 16\n\n    # If a candidate layout is wrapped horizontally but it exceeds this many\n    # lines, then reject the layout.\n    max_lines_hwrap = 2\n\n    # What style line endings to use in the output.\n    line_ending = \"unix\"\n\n    # Format command names consistently as 'lower' or 'upper' case\n    command_case = \"canonical\"\n\n    # Format keywords consistently as 'lower' or 'upper' case\n    keyword_case = \"unchanged\"\n\n    # A list of command names which should always be wrapped\n    always_wrap = []\n\n    # If true, the argument lists which are known to be sortable will be sorted\n    # lexicographicall\n    enable_sort = True\n\n    # If true, the parsers may infer whether or not an argument list is sortable\n    # (without annotation).\n    autosort = False\n\n    # By default, if cmake-format cannot successfully fit everything into the\n    # desired linewidth it will apply the last, most aggressive attempt that it\n    # made. If this flag is True, however, cmake-format will print error, exit\n    # with non-zero status code, and write-out nothing\n    require_valid_layout = False\n\n    # A dictionary mapping layout nodes to a list of wrap decisions. See the\n    # documentation for more information.\n    layout_passes = {}\n\n# ------------------------------------------------\n# Options affecting comment reflow and formatting.\n# ------------------------------------------------\nwith section(\"markup\"):\n\n    # What character to use for bulleted lists\n    bullet_char = \"*\"\n\n    # What character to use as punctuation after numerals in an enumerated list\n    enum_char = \".\"\n\n    # If comment markup is enabled, don't reflow the first comment block in each\n    # listfile. Use this to preserve formatting of your copyright/license\n    # statements.\n    first_comment_is_literal = False\n\n    # If comment markup is enabled, don't reflow any comment block which matches\n    # this (regex) pattern. Default is `None` (disabled).\n    literal_comment_pattern = None\n\n    # Regular expression to match preformat fences in comments default=\n    # ``r'^\\s*([`~]{3}[`~]*)(.*)$'``\n    fence_pattern = \"^\\\\s*([`~]{3}[`~]*)(.*)$\"\n\n    # Regular expression to match rulers in comments default=\n    # ``r'^\\s*[^\\w\\s]{3}.*[^\\w\\s]{3}$'``\n    ruler_pattern = \"^\\\\s*[^\\\\w\\\\s]{3}.*[^\\\\w\\\\s]{3}$\"\n\n    # If a comment line matches starts with this pattern then it is explicitly a\n    # trailing comment for the preceding argument. Default is '#<'\n    explicit_trailing_pattern = \"#<\"\n\n    # If a comment line starts with at least this many consecutive hash\n    # characters, then don't lstrip() them off. This allows for lazy hash rulers\n    # where the first hash char is not separated by space\n    hashruler_min_length = 10\n\n    # If true, then insert a space between the first hash char and remaining hash\n    # chars in a hash ruler, and normalize its length to fill the column\n    canonicalize_hashrulers = True\n\n    # enable comment markup parsing and reflow\n    enable_markup = True\n\n# ----------------------------\n# Options affecting the linter\n# ----------------------------\nwith section(\"lint\"):\n\n    # a list of lint codes to disable\n    disabled_codes = []\n\n    # regular expression pattern describing valid function names\n    function_pattern = \"[0-9a-z_]+\"\n\n    # regular expression pattern describing valid macro names\n    macro_pattern = \"[0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with global\n    # scope\n    global_var_pattern = \"[0-9A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with global\n    # scope (but internal semantic)\n    internal_var_pattern = \"_[0-9A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with local\n    # scope\n    local_var_pattern = \"[0-9a-z_]+\"\n\n    # regular expression pattern describing valid names for privatedirectory\n    # variables\n    private_var_pattern = \"_[0-9a-z_]+\"\n\n    # regular expression pattern describing valid names for publicdirectory\n    # variables\n    public_var_pattern = \"[0-9A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for keywords used in\n    # functions or macros\n    keyword_pattern = \"[0-9A-Z_]+\"\n\n    # In the heuristic for C0201, how many conditionals to match within a loop in\n    # before considering the loop a parser.\n    max_conditionals_custom_parser = 2\n\n    # Require at least this many newlines between statements\n    min_statement_spacing = 1\n\n    # Require no more than this many newlines between statements\n    max_statement_spacing = 1\n    max_returns = 6\n    max_branches = 12\n    max_arguments = 5\n    max_localvars = 15\n    max_statements = 50\n\n# -------------------------------\n# Options affecting file encoding\n# -------------------------------\nwith section(\"encode\"):\n\n    # If true, emit the unicode byte-order mark (BOM) at the start of the file\n    emit_byteorder_mark = False\n\n    # Specify the encoding of the input file. Defaults to utf-8\n    input_encoding = \"utf-8\"\n\n    # Specify the encoding of the output file. Defaults to utf-8. Note that cmake\n    # only claims to support utf-8 so be careful when using anything else\n    output_encoding = \"utf-8\"\n\n# -------------------------------------\n# Miscellaneous configurations options.\n# -------------------------------------\nwith section(\"misc\"):\n\n    # A dictionary containing any per-command configuration overrides. Currently\n    # only `command_case` is supported.\n    per_command = {}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.876953125,
          "content": "## Reference:\n#   - http://editorconfig.org/\n#   - https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options\n## Visual Studio IDE support for editing .editorconfig files:\n#   - https://marketplace.visualstudio.com/items?itemName=EditorConfigTeam.EditorConfig\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[{*.h.vc*}]\ncharset = utf-8\nend_of_line = crlf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.{bat,sln,*proj,*proj.filters,rc,rc2}]\ncharset = unset\nend_of_line = crlf\ninsert_final_newline = unset\nindent_style = unset\nindent_size = unset\n\n[{makefile.vc,nmake.opt}]\nend_of_line = crlf\nindent_style = tab\n\n[{configure,configure.*,config.*,*.{sh,yml}}]\nindent_size = 2\n\n[{GNUmakefile,*.in}]\nindent_style = tab\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 1.001953125,
          "content": "[flake8]\nmax_line_length = 88\nignore =\n    # Unnecessary dict/list/tuple call - rewrite as a literal\n    C408 \n    # whitespace before ':' - doesn't work well with black\n    E203 \n    # missing whitespace around operator - let black worry about that\n    E225 \n    # inline comment should start with '# '\n    E262 \n    # block comment should start with '# '\n    E265 \n    # too many leading '#' for block comment\n    E266 \n    # expected 2 blank lines, found 1\n    E302 \n    # module level import not at top of file\n    E402 \n    # line too long - let black handle that\n    E501 \n    # comparison to None should be\n    E711 \n    # comparison to False/True should be\n    E712 \n    # ambiguous variable name\n    E741 \n    # may be undefined, or defined from star imports\n    F405 \n    # trailing\n    W291 \n    # line break occurred before a binary operator - let black worry about that\n    W503 \n    # line break occurred adter a binary operator - let black worry about that\n    W504 \nper-file-ignores =\n    .cmake-format.py:F821"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 8.0078125,
          "content": "b6f007e10f2f1d965daae679c9f4f84574517a77\nd3829db87cc127bf1397d31ec31f41c6a11246e2\n37cfdc3839820f1706b24237798c0e220c2ff970\n2299a46ef4f4b545f99360171d6acb1d0b259bb7\n4e8e5beff9365d1561fb3062cac4dc52f16502e3\nef5ff12ac5198aacf67380423816a814764d156d\ne8d930be90388a81a04e904210900e8848473af0\n81bc857c2634d4366d91d2fbe595d8446e431dd2\nb46abc0080fe3d4a51e6b3b1777d550fed958c34\ne420c2ec8ce41af536452ca8cbf25cdb8e7cc81f\n5ba6633340a8c53987d4e005fbdbbd831c8326d8\ne0b2d6e1b9f0ccf90539bc8f6aaa5a6c9b6df2e0\n32297606baff1180e35da431e366854e3976cf56\ned3eb1757f94d267621e8013388d51e5dd1906c1\n781f758885c4ac6c6d5b6a558ca2308e4f01c318\ne71bc54062c7b95a9f1670ce2de4cf7c7539f30a\n8ec03610edc2a42ed43a8ebcf95323e99032c2e6\n2a4df7a98b26f45e92d57ba9ed8d71cc404111b1\n51130e8c9430b024fb50ac24e510d651bcc37b95\n50091b26c253f3d887f4ee4f08d6254843148b68\n5aa23d13884f2ed80ad3e91e8a7d3f1d7489b83d\nf758f061ccb410800861c47915df7aa160760ada\nb1ef2b4a84e5a9231a4dd8ce6c9e47116f54d258\n62b4724ce724bb72f75822d0a17ae7335ff815ae\nb5f91831d2d79fc6a13a0c590b46f455804d0129\n39c3aa97c57ae557f286e18dd9fe08fa7bc92f93\n5fd4ed9c4d3b017b39c6cbb3808aa8dba571a09f\nb6ad6005fa7c8ad083abebecb04fa5c2006dbd34\ne92856171a7f2f8ff5fe27090f36bc7b7e97be73\n8b56d900320f2630b7ca5151df1ff251f645a15b\ndd94fb7ec70f694decb26f49fffcd80439825839\na3e09700497632b7bbbf6d44b2e9b7800b42c60f\n7f005e2a2e1223841e0e5d18fcd2add1b6edfb54\nba763baad4722883a47370a2991eb9e57db17906\na4f639313dec051994464e38b48cc94c392c513a\n45b4d39690ff23f3a23226d3646062983f95e63b\n66230faaa30cb2f183c4feb7eb9bdb258b59d72f\nf5cc41cafe850c31eb18753ae8c294fde5b10635\n053518e2599351a7ac29839594f8664c3ede30d3\nb30f325309ab8c89e9d5bfef59d3ce41749ef458\na0a9710550ca3972e0f01b0f6a766bf78f2a2166\n420936f397f55ca39f337b4c96f392da84da937c\nef1aa372779e977033f6665ee2348b20dd22d6d1\n00d12b027399a7226b8ffbaa92f3e4cb01f5df08\n71a2ccda12b25aec455a7de784cd9e847f8e904f\nc786325120214cb0c2bb6b59d4301d08b8060999\n6bafb2fc3e87e0711b8ad499e8cef99db8f8e6dd\n9701f1a90934e39de2f1ffe2035ade58dca9c1c3\nadcc008ee0761073fd2aa540230d7c45d79f6e57\n0ffaf66fdd6c4f7135a9dcf6aa1511d11b15575d\n3f2c262d63407dae3c3e4e2dd78a1665eb26091c\n010ccabf19ede29002e940fbe2f39b90318e1217\n1142a586a5f57da74a3b15b2a01cb7effe65e5f2\n68f98a759c3fad8bf75f6aa4907659cddc53c3bd\n9e20d63bb54abdb709c9f4adda7b1367c5275966\ne817b4c1636f2f6b3142153b0ea7d6af0d0bca28\ne215c46b32feda7098d74f5add22eac7786f30f9\n30e1d8436f36caa208ca1bd246afb9f06a8e4103\nbe51a1bcde83999496705e2147b052b6b9ac4390\n030620d05f171673ef0f95f96b690c5749017cdb\n71e1daafd9b30fe6fb68e8c1dcfef8bb1ace380d\ndadbf54e204ee3827ef920bb3dd899440782db70\n584990c7484aa55e6660f60af2dd3009bad9cbf8\n0673fcc0b83819f7609f6687a339912302f3cf83\n1ffa79d8b25dd9152aa0bc9a7c26acb7a7d4a46d\n9a4c7fe32e2261c288f7b357a30e7ecfa3f1ce6f\n86c7adc8beb4340e17558e9a8cf537da1f832f3f\n3ac5c439fd1d1b989796f6dc5070e108fbb87651\nb416f5aafdcd4ffdf850416777d0104397bb7389\n47cc9295f870703d5f01088561a3060ce4165191\n9b9cb36189f84374be3cd7bbb3e7d315d75a42b1\n09c1d3a1bf248610083e10dc7f743cbccca277b5\nd1c5623cf07c174c38818542022f4b1489dd328b\n3383c9eea634f4890210c1355ecc31e3954a9ad1\n71f8d8fe2a2ffc37fedf6727e36b0fdc035d7be6\nea7b9180c8bafb818d95b48f2d91f6fb73f0793b\n17ad2e401268e0a2ae2d73f2621b6b4d222687a4\nab7743ef275d70f03c75f1430ebe4f6a9fca8d12\n786004d9bbf1bd029e0671fe3043be1ce3edd510\n510f7174458e73383cc0220551135758fdde2753\n464e1dbcd31ab73ffa3e7b7eade515cd5a03e291\n28fe21528152426f8724fac770b4184b962342e4\nd915ccec42f50240894f59194ba073f73d2c1a4a\n4aba3660c7a84c87adf8169183e3e57df3802f12\n4308c27334aafbce9af7ead3cd520b4e40a46497\naefd1b7ced23eb6039967a4cddceef402fe186ca\n4a181b9881be7d081ed924be2008ef9ba92ebe2e\n315fa9dcddee6510d7fac8f63ede6f7e57690767\n16a3e6fb5fa615c55dbaf56db59120b76e55b23a\n881308367153a4ae782b017463ea96168e4553cf\nfe7824e3c653f0fd57471dcd939e5a0c5201c71d\nd83e5f866a549282e80050b8f9f1ee54590ebacc\n80b209677131a1657096bcf5c23abb5828f26af1\n3d4fb9d468dfa36e3d63c0a94663a5254336bd50\n5f9bdedb17ea80e92f43424d5aac9c5440c7240d\n2e2bddc39aec67b1d277b50c8dbe08fec453c0a0\nfbc2484163835ae191497275eea31a81461afa51\n14e6c597f64a96a4095d7168bcb670c1d5294baa\n3b368c889ed5b8fe3e292e683d9d954c1f40705e\n7831e82c9ef28e69de2f1543f9a5ae41f802d38a\n0c6f48501c15f2ef4d4f47fa9012ffa8817897ca\n00d3ec7e72175ce562915951e1fdae527872fc6f\na92a5f68e16c0af4aa5f9fa79b8d1c55ea643ae0\nee25de6811ef4ae7afe0548ad3f96114d3a14bf2\n0302dfd678a7cac1a4c63a74ab274cec04e1c2e1\nba22240bb44c3330ca5d18aacaa34fdd846a168c\ndc2c0b148f96a709dd1a5feac849499b42988f0f\n45a4b4ed9ced6258960782485e1566e05ec05bdf\n1810b3ef3fca33ec3e3381cf370c9a8f0678b302\n522d9b578d9d2452a589ed48ac34fe1e24cacf0d\n47a2263cd0950e7faef6e10ac030d587c2e9345e\ne8e22b23600cf9b39b205fad0dae0afed364eaa7\nbcb7822a254f7f0541b127e3d528c287676ee041\n30f51c21b93c71cf5d79e296603cfc8ba87fd2f2\neb92c932448095d73e568c9f31e6a963512561b8\n15c4e7ad96848c843c034fc1e6c3374e5c8c5911\nbec1a77ff2836495135b4a42454e8899e81eab72\n8788d8a404076226d9bed04f8400f65f4bb4a8b4\n3d5e80908ca657e09f92b52cb7c6e4324beaf2db\n24a0bd7a5e40a62f1f5fbb65668d8214dcbf863b\nb714ce8cbda82ab399d7ae79101e0c329bcb242d\n21e61eab44d8177fd8fbe8550b59d1830b34382b\nda3dda56950b2360dc0aaa2a56887ae1b9a14478\n46058958e63cbaf7162d73e8731844264ea81511\nbf146647e0aeb53da0a42519a4bbd24e5d24b088\n9661beb300a28d9409aff830ee9cdb7892a2a31d\n3624ed59d7a0b30e288bcd325d95e9a2477da1ed\nd6b842205cdc4f267870ea4263d485cb57ecb924\n31a8d9e6da538e49dbd4c09d9ea56a6a06d76c5b\nf731f9b347d6977c72ccfa2653c3eba949897193\nb4e54092086531effb53c7e8269818f249c2dc26\nd55fe83f4b249a228b6ec0c8bd650eff292f0d41\n594cd5ef3234acca20eb3920a044cec9da4413c4\n3954f6a0634151ff34f7c626b1366206e1d7b9ce\n4045c386e14f6005e0759fe44e5413ee1b843508\n35ed5367d1c4f31a25758e12e1f144d10013a2a5\nab27a8dfb1a4f866194e3290ba06fbbc16ed735b\n417b23baeccff3109d3d55653e3da90c6535c0f3\ne3eaceffb1be129dbaa187b1d6ba9e7af43e1427\na4ad3eb4cc9c0c3d2548e04516fd37f4947391d7\n1ab7b6bc4bcf76939f556bfae20eda80d798e3c3\n610b7dba0408899ca91a656327be6d335bc5e344\n4d6899387d445934e7727c1731c1b116a646bde8\n19bc75ed6416fb35f0199ec2078b03fc51a8f03f\n80a603a046c24446dee9bd73bc88fe124f79c486\n6a83aeb05bc3bd83b55409f9c5b2a921bf363253\na9ac469a04589333debefbef577f49ecd4b50d05\n72250d78642c2e1e98a0a51db86f4c72b2878fb1\n6a5faf12aa2c2f9cd6464769690ba75d0a226a20\n9d1def4dfc1269f879a248bfcfddea94b5a73d77\n8e7166c17a08df8ca77b60e403e67b1acc7d359a\n9a816e43802eb9a87cc211c26824220d886cc62f\n65003f7d66a7842666049f5e11ca7dd93abfd84f\n3a53c57768c93eec3145b1fbd14c03205a73b49c\n95913ccd9fc0f2a8a33a88c4f741604db64eef29\na8c8b93d0d64b7e421f17b2bbae395194cf1b726\nf5f5f747494a9aeb00ffd1636de72882cdb1a954\n5db56baefb7e17d12a731c788d34017931aa8efa\n33c23e696130404f4edca5fb3382f8f3275dd0c3\n92292c790364d49211eb176514ac5cc51919e960\n5934631bc02cceba0d92826a5f74938ca27a1d66\nf2bbf9045f73727b02f98e66dd9125259296fcf4\nebd1e405dd295aeafa9803632ba9e243ad78287d\nae613b2bf7fe6572ec51fe5c662165be23e74c75\n951c2d9c3eb7d5284eb88fd6b7cf61b63a3466f2\nb509e8d61ea49399f37f47a62454c32b24f6022a\n03a9df0cd7d19b1a033ca40350125f0725716e60\nfb02e41ae172342b2400bb167f751da7baab7d3d\n659038a9b891b9aa756ce47a926674775e2e6ce1\n868eda6c74fce0fdbcbf854aea8f6709738ad0f2\n6b4ac3bd358db1475625078f2570592ce8ac84e5\n132eb4504c3d186b07c931a2d2ad7129cbd11b9a\nb41414d755749340228ddb7871064e6fa7950e41\n43bf66ce52606797cd8a97db6ce34f8627efb55b\n3ccc62c521f88900c5bbd63223a66ee7620cb709\n162286713a538cee5071fc819fcf939830c6bc21\n5ad39d99a3ce4482c851028ce14c0197d2c0302a\nb078bd6a27109942b10c639f4f224feac6350062\n37e9d49b3c19f11acd1d436831a5e54d571c445d\nc0ba79fd53e4de27c8fae2630f686363aa29d795\n4c8ec92dc7821a7cf2465c4e57a8325f4c0afd4c\na439de9a83389fca5f11f9154de757f70ea482e6\nf631bf10710fa9207894e0b9637deb2cff40d914\nbed780d01063a9fe24d2e3bebb9e1f5eb6385971\nff8e2c54d09d9ad2f8c1a35e332ee18c8f75ac89\n60f2f366a8e56389f653da9b88ca91b437472bee\nf291010dbe384b5f1c4946e8afb598b52d940cc7\n97bad73a13e0427190570f72fc705c06307d4a7b\n8546ab726c88e38c0b6531d5619992b2050349e3\n3278f3f3737128f678350f76614b9eb2af2a7171\nb70def244c0b037cd4cd5db4758e8183161b8caf\n3c5d1aeba3aa9be20080d7b0fc35b55e4bda3d96\n6b4c73b19f53b4ae5b90c46c9897d06e7f296f39\nca6b5f598c41b9fc1b76ec106b914ef8674a9f58\ncb5dc009cf60be71f12b2718017da4621c92c561\na11bca1150f65804c78b1f3e7ad2f0ef3e47035b\n9ea22d57af187eb018a4fc84577381be0817fe95\n5247bbb4b27c7bf7cd6074deeeac087c1a4144b8\nd7e5c0055c176ff6e70da7aa47a29654ece08ce1\nc39127b8dca9228e728a56dd93fc8ebf7c212060\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7919921875,
          "content": "# Do NOT set the default behavior, in case people don't have core.autocrlf set.\n# This may lead to implicit modification of certain files (eg. test data) during git clone.\n#* text=auto\n\n# Declare files that will always have LF line endings on checkout.\n*.m4            text eol=lf\n*.sh            text eol=lf\nconfig.guess    text eol=lf\ncpl_config.h.in text eol=lf\nconfig.sub      text eol=lf\nconfigure       text eol=lf\nconfigure.ac    text eol=lf\ngdal.pc.in      text eol=lf\ninstall-sh      text eol=lf\nGNUmakefile     text eol=lf\nGNUmake.opt*    text eol=lf\nVERSION         text eol=lf\n\n# Declare files that will always have CRLF line endings on checkout.\n*.bat           text eol=crlf\n*.cmd           text eol=crlf\n*.ps1           text eol=crlf\ncpl_config.h.vc.* text eol=crlf\nmakefile.vc     text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7197265625,
          "content": "GDALmake.opt\nautom4te.cache\ndetectavx.dSYM\ndetectsse.dSYM\ngdal.pc\nconfig.log\nconfig.status\nconfigure\naclocal.m4\nlibtool\ncpl_config.h\nclean_main_build_output.bat\n*.o\n*.res\n*.obj\n*.lib\n*.exe\n*.exe.manifest\n*.dll\n*.pdb\n*.idb\n*.ilk\n*.dll.manifest\n*.exp\n*.lo\n*.la\n*.so\n.libs\n*.pyc\n*.sdf\n*.sln\n*.vcxproj\n*.vcxproj.filters\n*.vcxproj.user\n*.VC.db\n*.VC.opendb\n*.swp\n/[Dd]ebug\n/[Rr]elease\n/x64\n/.vs\n/.vscode\n/nbproject\nfrmts/jpipkak/kdu_cache.cpp\nfrmts/jpipkak/kdu_cache_wrapper.h\nfrmts/msg/PublicDecompWT/\nfrmts/msg/PublicDecompWT_all.h\nfrmts/jpeg/libjpeg12/*.c\nfrmts/jpeg/libjpeg12/*.h\ngcore/gdal_version.h\nlibgdal.a\nlibgdal.so\nlibgdal.so.*\napps/gdal-config\napps/gdal-config-inst\napps/gdal_contour\napps/gdal_grid\napps/gdal_rasterize\napps/gdal_translate\napps/gdal_viewshed\napps/gdaladdo\napps/gdalbuildvrt\napps/gdaldem\napps/gdalenhance\napps/gdalinfo\napps/gdalmdiminfo\napps/gdalmdimtranslate\napps/gdallocationinfo\napps/gdalmanage\napps/gdalsrsinfo\napps/gdaltindex\napps/gdaltransform\napps/gdalwarp\napps/gnmanalyse\napps/gnmmanage\napps/nearblack\napps/ogr2ogr\napps/ogrinfo\napps/ogrlineref\napps/ogrtindex\napps/testepsg\napps/gdalserver\napps/test_ogrsf\napps/dumpoverviews\napps/gdalwarpsimple\napps/multireadtest\napps/gdal_create\nport/dllbuild.prev\nport/prev_dllbuild.bat\nswig/java/build\nswig/java/gdal.jar\nswig/java/gdal_wrap.cpp\nswig/java/gdalconst_wrap.c\nswig/java/libgdalconstjni.so\nswig/java/libgdaljni.so\nswig/java/libogrjni.so\nswig/java/libosrjni.so\nswig/java/ogr_wrap.cpp\nswig/java/org/\nswig/java/osr_wrap.cpp\nswig/java/gnm_wrap.cpp\nswig/python/build\nswig/python/setup_vars.ini\nswig/python/record.txt\nswig/perl/Const.bs\nswig/perl/GDAL.bs\nswig/perl/Makefile_Geo__GDAL\nswig/perl/Makefile_Geo__GDAL__Const\nswig/perl/Makefile_Geo__OGR\nswig/perl/Makefile_Geo__OSR\nswig/perl/OGR.bs\nswig/perl/OSR.bs\nswig/perl/blib/\nswig/perl/lib/Geo/GDAL/*.pm\nswig/perl/lib/Geo/*.pm\nswig/perl/gdal_wrap.cpp\nswig/perl/gdalconst_wrap.c\nswig/perl/ogr_wrap.cpp\nswig/perl/osr_wrap.cpp\nswig/perl/pm_to_blib\nswig/perl/GNM.bs\nswig/perl/MYMETA.json\nswig/perl/MYMETA.yml\nswig/perl/Makefile_Geo__GNM\nswig/perl/gnm_wrap.cpp\nswig/csharp/*.cpp\nswig/csharp/*.c\nswig/csharp/*.mdb\nswig/csharp/*.config\nswig/csharp/osr\nswig/csharp/ogr\nswig/csharp/gdal\nswig/csharp/const\nfuzzers/libFuzzingEngine.a\nfuzzers/tests/test_gdal_fuzzer\nfuzzers/tests/test_ogr_fuzzer\nfuzzers/tests/test_osr_set_from_user_input_fuzzer\nfuzzers/tests/test_wkb_import_fuzzer\nfuzzers/tests/test_wkt_import_fuzzer\nhtml/\n*~\n*tmp\n.python-version\n.vagrant\n\n# IDE ignore\n.project\n.settings\n.pydevproject\n.cproject\n.idea\n.vscode\n.vs\n.vim\n\n# clangd lsp\n.clangd\ncompile_commands.json\n\n# Python\n__pycache__/\n.env*/\n.venv*/\n\n# NuGet package manager storage\ngdal/packages*\ngdal/share\n\n# CMake files (CMakeSettings.json is generated by Visual Studio)\n/build\nCMakeSettings.json\nout/\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.0595703125,
          "content": "[settings]\nknown_first_party=osgeo,osgeo_utils\nprofile=black\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.626953125,
          "content": "repos:\n    -   repo: https://github.com/psf/black\n        rev: 22.3.0\n        hooks:\n        -   id: black\n            exclude: >\n              (?x)^(\n                swig/python/osgeo/__init__.py|\n                swig/python/osgeo/gdalnumeric.py|\n                doc/source/_extensions/sphinxcontrib_programoutput_gdal.py|\n                autotest/ogr/data/\n              )\n    -   repo: https://github.com/timothycrosley/isort\n        rev: 5.12.0\n        hooks:\n        -   id: isort\n            exclude: >\n              (?x)^(\n                swig/python/osgeo/__init__.py|\n                swig/python/osgeo/gdalnumeric.py|\n                doc/source/_extensions/sphinxcontrib_programoutput_gdal.py|\n                autotest/ogr/data/\n              )\n    -   repo: https://github.com/pycqa/flake8\n        rev: 7.0.0\n        hooks:\n        -   id: flake8\n            exclude: >\n              (?x)^(\n                swig/python/osgeo/__init__.py|\n                swig/python/osgeo/gdalnumeric.py|\n                doc/source/_extensions/sphinxcontrib_programoutput_gdal.py|\n                examples/|\n                autotest/ogr/data/\n              )\n    -   repo: https://github.com/pre-commit/mirrors-clang-format\n        rev: 'v15.0.7'\n        hooks:\n        -   id: clang-format\n            exclude: >\n              (?x)^(\n                autotest/cpp/data/|\n                autotest/gdrivers/data/|\n                swig/|\n                third_party/fast_float/|\n                third_party/LercLib/|\n                autotest/ogr/data/|\n                alg/internal_libqhull/|\n                apps/argparse/|\n                frmts/gtiff/libtiff/|\n                frmts/gtiff/libgeotiff/|\n                frmts/hdf4/hdf-eos/|\n                frmts/jpeg/libjpeg/|\n                frmts/jpeg/libjpeg12/|\n                frmts/pcraster/libcsf/|\n                frmts/png/libpng/|\n                frmts/gif/giflib/|\n                frmts/zlib/|\n                frmts/pcidsk/sdk|\n                frmts/grib/degrib/degrib|\n                frmts/grib/degrib/g2clib|\n                gcore/sse2neon.h|\n                port/utf8.h|\n                ogr/ogrsf_frmts/adbc/ogr_adbc_internal.h|\n                ogr/ogrsf_frmts/cad/libopencad/|\n                ogr/ogrsf_frmts/geojson/libjson/|\n                ogr/ogrsf_frmts/flatgeobuf/flatbuffers/|\n                ogr/ogrsf_frmts/pmtiles/pmtiles/|\n                ogr/ogrsf_frmts/ods/ods_formula_parser.cpp|\n                ogr/ogrsf_frmts/ods/ods_formula_parser.hpp|\n                ogr/ogrsf_frmts/sqlite/sqlite_rtree_bulk_load|\n                ogr/swq_parser.cpp|\n                ogr/swq_parser.hpp|\n                doc/source/\n              )\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.7607421875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nbuild:\n  os: \"ubuntu-24.04\"\n  tools:\n    python: \"3.12\"\n\n  jobs:\n    post_checkout:\n      - (git --no-pager log --pretty=\"tformat:%s -- %b\" -1 | paste -s -d \" \" | grep -viqP \"skip ci|ci skip\") || exit 183\n    pre_build:\n      - ./doc/rtd/pre_build.sh\n      - cd doc && make doxygen generated_rst_files\n\n  apt_packages:\n    - ant\n    - cmake\n    - doxygen\n    - g++\n    - libproj-dev\n    - make\n    - openjdk-11-jdk-headless\n    - patchelf\n    - swig\n    - unzip\n\nformats:\n  - htmlzip\n  - pdf\n\npython:\n  install:\n      - requirements: doc/requirements.txt\n\nsphinx:\n  configuration: doc/source/conf.py\n  fail_on_warning: true\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.396484375,
          "content": "# This is the config file for building GDAL and running its autotest suite\n# with Travis-ci.org\n\n# FIXME: Travis-CI builds are disabled\nbranches:\n  only:\n    - disabled_disabled\n#branches:\n#  except:\n#  - /^(cherry-pick-)?backport-\\d+-to-/\n\nmatrix:\n  fast_finish: true\n  include:\n\n    - os: linux\n      arch: s390x\n      compiler: gcc\n      language: cpp\n      sudo: false\n      dist: jammy\n      cache:\n        apt: true\n        directories:\n          - $HOME/.ccache\n      apt:\n        packages:\n          - ccache\n      env:\n        - BUILD_NAME=s390x\n        - DETAILS=\"\"\n\n    #- os: linux\n    #  arch: arm64-graviton2\n    #  virt: lxd\n    #  group: edge\n    #  compiler: gcc\n    #  language: cpp\n    #  sudo: false\n    #  dist: jammy\n    #  cache:\n    #    apt: true\n    #    directories:\n    #      - $HOME/.ccache\n    #  apt:\n    #    packages:\n    #      - ccache\n    #  env:\n    #    - BUILD_NAME=graviton2\n    #    - DETAILS=\n\nbefore_install:\n  - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep -qvE '(.rst)$'; then travis_terminate 0; fi\n  - ./ci/travis/${BUILD_NAME}/before_install.sh\n\ninstall:\n  - ./ci/travis/${BUILD_NAME}/install.sh\n\nscript:\n  - ./ci/travis/${BUILD_NAME}/script.sh\n\nnotifications:\n  irc:\n    channels:\n       - \"irc.freenode.org#gdal-activity\"\n      #- \"irc.freenode.org#gdal\"\n    use_notice: true\n    on_success: change\n#\n#   email:\n#     recipients:\n#       - gdal-commits@lists.osgeo.org\n\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 0.5791015625,
          "content": "# GDAL build instructions\n\nThis file contains and points to instructions about building GDAL from source.\n\n# Building with cmake (GDAL >= 3.5.0)\n\nCMake is the only build system supported since GDAL 3.6.0.\n\nThere is a [build hints](https://gdal.org/build_hints.html) page on the website.\n\nBeyond that page, note:\n  - cmake builds in the source directory are not supported (expected to fail)\n\n# Building with autoconf or nmake (GDAL < 3.6.0)\n\nautoconf and nmake build systems were only available in GDAL < 3.5.0, have\nbeen deprecated in GDAL 3.5.x, and finally completely removed in GDAL 3.6.0.\n"
        },
        {
          "name": "CITATION",
          "type": "blob",
          "size": 0.505859375,
          "content": "To cite GDAL/OGR in publications use:\n\n  GDAL/OGR contributors (2025). GDAL/OGR Geospatial Data Abstraction\n  software Library. Open Source Geospatial Foundation. URL https://gdal.org\n  DOI: 10.5281/zenodo.5884351\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {{GDAL/OGR} Geospatial Data Abstraction software Library},\n    author = {{GDAL/OGR contributors}},\n    organization = {Open Source Geospatial Foundation},\n    year = {2025},\n    url = {https://gdal.org},\n    doi = {10.5281/zenodo.5884351},\n  }\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 2.28125,
          "content": "cff-version: 1.2.0\nmessage: Please cite this software using these metadata or in the CITATION file.\ntype: software\ntitle: GDAL\nversion: 3.10.0\ndate-released: 2024-11-01\ndoi: 10.5281/zenodo.5884351\nabstract: GDAL is a translator library for raster and vector geospatial data\n  formats that is released under an MIT style Open Source License by the Open\n  Source Geospatial Foundation. As a library, it presents a single raster\n  abstract data model and single vector abstract data model to the calling\n  application for all supported formats. It also comes with a variety of useful\n  command line utilities for data translation and processing.\nurl: https://gdal.org\nrepository-code: https://github.com/OSGeo/gdal/\nlicense: MIT\nauthors:\n  - given-names: Even\n    family-names: Rouault\n    affiliation: Spatialys\n    orcid: https://orcid.org/0000-0002-5068-0476\n  - given-names: Frank\n    family-names: Warmerdam\n    affiliation: Planet Labs Inc\n  - given-names: Kurt\n    family-names: Schwehr\n    affiliation: Google Inc\n    orcid: https://orcid.org/0000-0002-5624-8190\n  - given-names: Andrey\n    family-names: Kiselev\n  - given-names: Howard\n    family-names: Butler\n    affiliation: Hobu Inc\n    orcid: https://orcid.org/0000-0002-5340-1380\n  - given-names: Mateusz\n    family-names: Łoskot\n    affiliation: Cadcorp\n  - given-names: Tamas\n    family-names: Szekeres\n  - given-names: Etienne\n    family-names: Tourigny\n  - given-names: Martin\n    family-names: Landa\n  - given-names: Idan\n    family-names: Miara\n  - given-names: Ben\n    family-names: Elliston\n  - given-names: Kumar\n    family-names: Chaitanya\n  - given-names: Lucian\n    family-names: Plesea\n    affiliation: Esri\n  - given-names: Daniel\n    family-names: Morissette\n    affiliation: Mapgears Inc\n  - given-names: Ari\n    family-names: Jolma\n  - given-names: Nyall\n    family-names: Dawson\n    affiliation: North Road\n    orcid: https://orcid.org/0000-0001-9812-7584\n  - given-names: Daniel\n    family-names: Baston\n    affiliation: ISciences, L.L.C.\n    orcid: https://orcid.org/0000-0002-2195-1716\n  - given-names: Craig\n    family-names: de Stigter\n    affiliation: Koordinates\n  - given-names: Hiroshi\n    family-names: Miura\n    orcid: https://orcid.org/0000-0001-7754-0433\n\nkeywords:\n  - GDAL\n  - geospatial\n  - raster\n  - vector\n  - conversion\n  - processing\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 8.1689453125,
          "content": "# CMake4GDAL project is distributed under MIT license. See accompanying file LICENSE.txt.\ninclude(cmake/helpers/GdalCMakeMinimumRequired.cmake)\ncmake_minimum_required(VERSION ${GDAL_CMAKE_VERSION_MIN}...${GDAL_CMAKE_VERSION_MAX})\n\nproject(gdal LANGUAGES C CXX)\n\nset(GDAL_LIB_TARGET_NAME GDAL)\n\n#\n# setup cmake modules paths\ninclude(cmake/modules/init.cmake)\n\n#\n# template files path\nset(GDAL_CMAKE_TEMPLATE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/template)\n#\n# Custom global properties\ndefine_property(\n  GLOBAL\n  PROPERTY GDAL_FORMATS\n  BRIEF_DOCS \"Builtin format\"\n  FULL_DOCS \"Builtin format\")\ndefine_property(\n  GLOBAL\n  PROPERTY OGR_FORMATS\n  BRIEF_DOCS \"Builtin ogr drivers\"\n  FULL_DOCS \"Builtin ogr drivers\")\ndefine_property(\n  GLOBAL\n  PROPERTY PLUGIN_MODULES\n  BRIEF_DOCS \"Plugin modules\"\n  FULL_DOCS \"Plugin modules\")\ndefine_property(\n  TARGET\n  PROPERTY PLUGIN_OUTPUT_DIR\n  BRIEF_DOCS \"Plugin modules build directories\"\n  FULL_DOCS \"Plugin modules build directories\")\n\ninclude(GdalCAndCXXStandards)\ninclude(CheckCompilerMachineOption)\ninclude(CheckCompilerSIMDFeature)\n\noption(USE_PRECOMPILED_HEADERS \"Use precompiled headers (does not work with MSVC)\" OFF)\nif (USE_PRECOMPILED_HEADERS AND MSVC)\n  message(FATAL_ERROR \"USE_PRECOMPILED_HEADERS=ON does not currently work with Visual Studio C++ compiler\")\nendif()\n\ninclude(Ccache)\n\n#\nif (\"${CMAKE_SYSTEM_PROCESSOR}\" MATCHES \"(x86|AMD64)\")\n  check_compiler_machine_option(flag SSE)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_SSE_AT_COMPILE_TIME 1)\n    add_definitions(-DHAVE_SSE_AT_COMPILE_TIME)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_SSE_FLAG ${flag})\n    endif ()\n  endif ()\n\n  check_compiler_machine_option(flag SSE2)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_SSE2_AT_COMPILE_TIME 1)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_SSE2_FLAG ${flag})\n    endif ()\n  endif ()\n\n  check_compiler_machine_option(flag SSSE3)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_SSSE3_AT_COMPILE_TIME 1)\n    add_definitions(-DHAVE_SSSE3_AT_COMPILE_TIME)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_SSSE3_FLAG ${flag})\n    endif ()\n  endif ()\n\n  check_compiler_machine_option(flag SSE4_1)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_SSE41_AT_COMPILE_TIME 1)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_SSE41_FLAG ${flag})\n    endif ()\n  endif ()\n\n  check_compiler_machine_option(flag AVX)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_AVX_AT_COMPILE_TIME 1)\n    add_definitions(-DHAVE_AVX_AT_COMPILE_TIME)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_AVX_FLAG ${flag})\n    endif ()\n  endif ()\n\n  check_compiler_machine_option(flag AVX2)\n  if (NOT ${flag} STREQUAL \"\")\n    set(HAVE_AVX2_AT_COMPILE_TIME 1)\n    if (NOT ${flag} STREQUAL \" \")\n      set(GDAL_AVX2_FLAG ${flag})\n    endif ()\n  endif ()\n\nelse()\n\n  # Check ability to use Arm Neon optimizations\n  include(CheckCXXSourceCompiles)\n  include(CMakePushCheckState)\n  cmake_push_check_state(RESET)\n  set(CMAKE_REQUIRED_INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/gcore\")\n  check_cxx_source_compiles(\"#include \\\"include_sse2neon.h\\\"\\nint main() { return 0; }\" SSE2NEON_COMPILES)\n  cmake_pop_check_state()\n\nendif ()\n#\noption(CLANG_TIDY_ENABLED \"Run clang-tidy with the compiler.\" OFF)\nset(CLANG_TIDY_CHECKS\n    \"-*,clang-analyzer-alpha.unix.cstring.*\"\n    CACHE STRING \"clang-tidy checks\")\nset(CLANG_TIDY_WARNINGS_AS_ERRORS\n    \"clang-analyzer-alpha.unix.cstring.*\"\n    CACHE STRING \"clang-tidy warnings as errors.\")\nif (RUN_CLANG_TIDY)\n  if (PROJECT_SOURCE_DIR STREQUAL PROJECT_BINARY_DIR)\n    message(FATAL_ERROR \"RUN_CLANG_TIDY requires an out-of-source build!\")\n  endif ()\n  find_program(CLANG_TIDY_COMMAND NAMES clang-tidy)\n  if (NOT CLANG_TIDY_COMMAND)\n    message(WARNING \"RUN_CLANG_TIDY is ON but clang-tidy is not found!\")\n    set(CMAKE_CXX_CLANG_TIDY)\n  else ()\n    set(CMAKE_CXX_CLANG_TIDY\n        \"${CLANG_TIDY_COMMAND}\" \"-checks='${CLANG_TIDY_CHECKS}'\" \"-header-filter='${PROJECT_SOURCE_DIR}/*'\"\n        \"-warnings-as-errors='${CLANG_TIDY_WARNINGS_AS_ERRORS}'\")\n  endif ()\nendif ()\n\nif (APPLE)\n  # To avoid the issue mentioned at\n  # https://stackoverflow.com/questions/36523911/osx-homebrew-cmake-libpng-version-mismatch-issue on github action\n  # MacOSX workers that have the Mono framework installed, whose libpng headers will be used instead of the homebrew\n  # ones\n  get_property(\n    result\n    CACHE CMAKE_FIND_FRAMEWORK\n    PROPERTY TYPE)\n  if (NOT result)\n    set(CMAKE_FIND_FRAMEWORK LAST)\n    message(STATUS \"Setting CMAKE_FIND_FRAMEWORK=${CMAKE_FIND_FRAMEWORK}\")\n  endif ()\nendif ()\n\n#\n# Developer may want to specify some variable to find proper version.\n# ~~~\n# Priority is as same order as follows:\n#   1. `Python_LOOKUP_VERSION`: specify major.minor version to find.\n#   2. 'Python_FIND_VIRTUALENV': specify 'ONLY' to use virtualenv activated.\n#   3. `Python_ROOT`: specify installed location.\n#   4. If nothing specified, use default behavior.\n#\n# for example\n#   $ cmake -DPython_LOOKUP_VERSION=3.8.0 ..\n#   $ cmake -DPython_FIND_VIRTUALENV=ONLY ..\n#   $ cmake -DPython_ROOT=C:\\Python38 ..\n# ~~~\n#\ninclude(FeatureSummary)\n\nfind_package(SWIG)\nset_package_properties(\n  SWIG PROPERTIES\n  DESCRIPTION\n    \"Software development tool that connects programs written in C and C++ with a variety of high-level programming languages.\"\n  URL \"http://swig.org/\"\n  TYPE RECOMMENDED)\n\n# Workaround Intel MKL library outputting a message in stdout, which cause\n# incorrect detection of numpy.get_include() and numpy.__version__\n# See https://github.com/numpy/numpy/issues/23775\n# Fix also proposed to upstream CMake FindPython per\n# https://gitlab.kitware.com/cmake/cmake/-/merge_requests/9359/\nif(DEFINED ENV{MKL_ENABLE_INSTRUCTIONS})\n  set(BACKUP_ENV_VAR_MKL_ENABLE_INSTRUCTIONS ENV{MKL_ENABLE_INSTRUCTIONS})\nendif()\nset(ENV{MKL_ENABLE_INSTRUCTIONS} \"SSE4_2\")\n\nif (Python_LOOKUP_VERSION)\n    set(Python_FIND_STRATEGY VERSION)\n    find_package(Python ${Python_LOOKUP_VERSION} EXACT COMPONENTS Interpreter Development NumPy)\nelse ()\n    set(Python_FIND_STRATEGY LOCATION)\n    find_package(Python 3.8 COMPONENTS Interpreter Development NumPy)\nendif ()\nset_package_properties(Python PROPERTIES PURPOSE \"SWIG_PYTHON: Python binding\")\n\nif (Python_Interpreter_FOUND)\n  file(\n    GENERATE\n    OUTPUT \"${CMAKE_CURRENT_BINARY_DIR}/python_executable.txt\"\n    CONTENT \"${Python_EXECUTABLE}\")\n  if(NOT Python_NumPy_FOUND)\n    # Detect numpy\n    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/get_numpy.py\n         \"try:\\n  import numpy\\n  print(numpy.get_include())\\nexcept:\\n  pass\\n\")\n    execute_process(\n      COMMAND ${Python_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/get_numpy.py\n      OUTPUT_VARIABLE _numpy_include\n      OUTPUT_STRIP_TRAILING_WHITESPACE)\n    if (NOT _numpy_include STREQUAL \"\")\n      set(Python_NumPy_FOUND TRUE)\n      set(Python_NumPy_INCLUDE_DIRS ${Python_NumPy_INCLUDE_DIRS})\n    endif ()\n  endif()\nendif()\n\n# Restore previous value of MKL_ENABLE_INSTRUCTIONS\nif(DEFINED BACKUP_ENV_VAR_MKL_ENABLE_INSTRUCTIONS)\n  set(ENV{MKL_ENABLE_INSTRUCTIONS} ${BACKUP_ENV_VAR_MKL_ENABLE_INSTRUCTIONS})\nelse()\n  unset(ENV{MKL_ENABLE_INSTRUCTIONS})\nendif()\n\n\nif (SWIG_FOUND AND (Python_Interpreter_FOUND OR Python_FOUND))\n  option(BUILD_PYTHON_BINDINGS \"Build Python bindings\" ON)\nelse()\n  option(BUILD_PYTHON_BINDINGS \"Build Python bindings\" OFF)\nendif()\n\nif (BUILD_PYTHON_BINDINGS)\n    if (NOT (Python_Interpreter_FOUND OR Python_FOUND))\n      message(FATAL_ERROR \"Python is a requirement to build the Python bindings\")\n    endif()\n    if (NOT SWIG_FOUND)\n        message(FATAL_ERROR \"SWIG is a requirement to build the Python bindings\")\n    endif()\nendif()\n\noption(BUILD_TESTING \"Build the testing tree.\" ON)\n# Make sure enable_testing() is defined before including gdal.cmake for\n# Java and CSharp tests\nif (BUILD_TESTING)\n  enable_testing()\nendif()\n\n#\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/gdal.cmake)\n\nif (BUILD_TESTING AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/autotest\")\n  # unit tests\n  add_subdirectory(autotest/cpp)\n  if(BUILD_PYTHON_BINDINGS)\n      add_subdirectory(autotest)\n  endif()\nendif ()\nif (EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/fuzzers\")\n    # Google OSS-Fuzz project utilities\n    add_subdirectory(fuzzers)\n    if (BUILD_TESTING)\n        add_subdirectory(fuzzers/tests)\n    endif()\nendif()\nif (BUILD_TESTING AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/perftests\")\n  add_subdirectory(perftests)\nendif ()\n# vim: ts=4 sw=4 sts=4 et\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.111328125,
          "content": "Code of Conduct\n===============\n\nSee [the GDAL Code of Conduct](https://gdal.org/community/code_of_conduct.html).\n"
        },
        {
          "name": "COMMITTERS",
          "type": "blob",
          "size": 9.3857421875,
          "content": "===========================================================\nList of GDAL/OGR committers\n===========================================================\n\nFolks who have agreed to RFC 3 terms:\n\n==================================\nDevelopers with github push rights\n==================================\n\ngithub nickname  Name/Contact                    Area of Interest\n===============  ============                    ================\nrouault          Even Rouault                    all\n                 even.rouault at spatialys.com\n\nwarmerdam        Frank Warmerdam                 all\n                 warmerdam@pobox.com\n\ndmorissette      Daniel Morissette               mitab, avc, cpl\n                 dmorissette at mapgears.com\n\nhobu             Howard Butler                   swig/python, sde\n                 hobu.inc at gmail.com\n\nszekerest        Tamas Szekeres                  c# swig bindings\n                 szekerest at gmail.com\n\nksshannon        Kyle Shannon                    lcp, netcdf, apps\n                 kyle@pobox.com\n\navalentino       Antonio Valentino               SAR formats\n                 antonio.valentino@tiscali.it\n\njef-n            Juergen E. Fischer              OGR: NAS\n                 jef at norbit dot de\n\najolma           Ari Jolma                       perl bindings\n                 ari.jolma at gmail.com\n\nmloskot          Mateusz Loskot                  geojson, wince\n                 mateusz at loskot.net\n\nstrezen          Andrey Kiselev                  HDF, geotiff, informix, core\n                 dron at ak4719.spb.edu\n\npka              Pirmin Kalberer                 interlis\n                 pka at sourcepole.ch\n\nlucianpls        Lucian Plesea                   mrf, wms\n                 lplesea@esri.com\n\natlight          Alan Thomas                     DXF\n                 athomas@thinkspatial.com.au\n\navalentino       Antonio Valentino               SAR formats\n                 antonio.valentino@tiscali.it\n\npramsey          Paul Ramsey                     OGR: FGDB, PostGIS\n                 pramsey@cleverelephant.ca\n\netiennesky       Etienne Tourigny                netcdf, hdf\n                 etourigny.dev at gmail dot com\n\nrcoup            Robert Coup                     OGR: FGDB\n                 robert@coup.net.nz\n\ndzwarg           David Zwarg                     PostGIS Raster\n                 dzwarg@azavea.com\n\nIvanLucena       Ivan Lucena                     georaster, oci\n                 ivan.lucena at outlook.com\n\nBishopGIS        Dmitry Baryshnikov              core, sxf, cad, shp\n                 bishop.dev at gmail dot com\n\nschwehr          Kurt Schwehr                    ocean related drivers, python\n                 schwehr@gmail.com\n\n===================\nPast SVN developers\n===================\n\nSVN Login(s)  Name/Contact                 Area of Interest\n============  ============                 ================\nwarmerda      Frank Warmerdam              all\nfwarmerdam    warmerdam@pobox.com\nwarmerdam\n\ntamas         Tamas Szekeres               c# swig bindings\n              szekerest at gmail.com\n\ndmorissette   Daniel Morissette            mitab, avc, cpl\ndanmo         dmorissette at mapgears.com\n\nhobu          Howard Butler                swig/python, sde\n              hobu.inc at gmail.com\n\nkdejong       Kor de Jong                  pcraster\n              k.dejong at geo.uu.nl\n\nrblazek       Radim Blazek                 grass drivers\n              radim.blazek at gmail.com\n\nosemykin      Oleg Semykin\t           postgis, informix\n              oss-dev at rambler.ru\n\nsperkins      Simon Perkins                fits, windows builds.\n              sy at perkins.net\n\nkmelero\t      Ken Melero\t\t   mrsid\n              kmelero at sanz.com\n\najolma        Ari Jolma                    perl bindings\n              ari.jolma at gmail.com\n\nshalasz       Steve Halasz                 DebianGIS Packaging\n              debian at adkgis.org\n\nmloskot\t      Mateusz Loskot\t\t   wince, geojson\n              mateusz at loskot.net\n\nmbrudka\t      Marek Brudka\t\t   thread safety\n              mbrudka at aster.pl\n\njlacroix      Julien-Samuel Lacroix\t   mitab, avc\n              jlacroix at mapgears.com\n\ndnadeau\t      Denis Nadeau                 netcdf, hdf, opendap\n              denis.nadeau@gmail.com\n\ncfis          Charles F. I. Savage         ruby\n              cfis at savagexi.com\n\nlichun\t      Lichun Wang                  ilwis\n              lichun at itc.nl\n\ndron          Andrey Kiselev               HDF, geotiff, informix, core\n              dron at ak4719.spb.edu\n\ndreamil       Swapnil Harjare\n              dreamil at gmail.com\n\nmchapman      Martin Chapman               mysql, postgres, etc\n              mchapman at sanz.com\n\nhannah\t      Hannah Valbonesi             hdf, png, gif, geotiff\n              Hannah.Valvonesi at safe.com\n\ngaopeng       Gao Peng\n              pgao at esri.com\n\naaime         Andrea Aime                  swig java bindings\n              aaime at openplans.org\n\npka           Pirmin Kalberer              interlis\n              pka at sourcepole.ch\n\nkosta         Dr. Konstantin Baumann       MySQL, SQLite\n              Konstantin.Baumann at hpi.uni-potsdam.de\n\nrayg          Ray Gardener                 DEM drivers, leveller, terragen\n              rayg@daylongraphics.com\n\nrouault       Even Rouault                 all\n              even.rouault at spatialys.com\n\nretsios       Bas Retsios                  ILWIS, GRIB\n              retsios at itc.nl\n\ncondit        Chris Condit                 Python, KML\n              condit at sdsc.edu\n\nklokan        Petr Pridal                  gdal2tiles\n              klokan at klokan.cz\n\npvachon       Phil Vachon                  jaxapalsar, radar in general.\n              philippe at cowpig.ca\n\nmoratto\t      Stefano Moratto              delphi bindings, OGR: shp\n              stefano.moratto@gmail.com\n\ndgrichard     Didier Richard               geoconcept, coordinate systems.\n              didier.richard@ign.fr\n\nchaitanya     Chaitanya Kumar CH           \n              chaitanya.ch at gmail.com\n\nrprinceley    Robin Princeley              ESRI branches.\n              rprinceley at esri.com\n\njorgearevalo  Jorge Arevalo\t\t   PostGIS Raster driver.\n\t      jorgearevalo at libregis.org\n\nmartinl       Martin Landa                 OGR: VFK and GRASS drivers\n              landa.martin at gmail.com\n\ngaige         Gaige B Paulsen\n              osgeo at gbp.gaige.net\n\nkyle          Kyle Shannon                 netcdf, lcp\n              kyle at pobox.com\n\nwinkey        Brian Case                   libkml\n              rush at winkey.org\n\nnowakpl       Adam Nowacki                 wms\n              nowak at xpam.de\n\nharshgovind   Harsh Govind                 kmlsuperoverlay, sde\n              harsh.govind at spadac.com\n\naboudreault   Alan Boudreault\n              aboudreault at mapgears.com  mitab, DebianGIS Packaging\n              \nrburhum       Ragi Yaser Burhum            OGR: ArcObjects, filegdb\n              ragi at burhum.com\n\nkirk          Kirk McKelvey                mrsid, raster\n              kmckelvey@lizardtech.com\n\nantonio       Antonio Valentino            SAR formats\n              antonio.valentino@tiscali.it\n\npramsey       Paul Ramsey                  OGR: FGDB, PostGIS\n              pramsey@cleverelephant.ca\n\netourigny     Etienne Tourigny             netcdf, hdf\n              etourigny.dev at gmail dot com\n              (old osgeo id etiennesky)\n\nbishop        Dmitry Baryshnikov            postgis, hdf, geotiff, mitab, shp\n              polimax at mail.ru\n\nrcoup         Robert Coup                  OGR: FGDB\n              robert@coup.net.nz\n\ndzwarg        David Zwarg                  PostGIS Raster\n              dzwarg@azavea.com\n\nwolf          Wolf Bergenheim              GME, vector, python\n              wolf+grass@bergenheim.net\n\ngoatbar       Kurt Schwehr                 ocean related drivers, python\n              schwehr@google.com\n\njef           Juergen Fischer              OGR: NAS\n              jef@norbit.de\n\nvmo           Vincent Mora                 wasp\n              vincent.mora@oslandia.com\n\njratike80     Jukka Rahkonen               documentation\n              jukka.rahkonen@latuviitta.fi\n\ndadler        David Adler                  DB2\n              dadler@adtechgeospatial.com\n\nlplesea       Lucian Plesea                mrf, wms\n              lplesea@esri.com\n\natlight       Alan Thomas                  DXF\n              athomas@thinkspatial.com.au\n\n===================\nPast CVS developers\n===================\n\nCVS Login(s)\tName\t\t\tEmail / Contact\t\t\tProject\n============\t====\t\t\t===============\t\t\t=======\n\n\ngwalter\t\tGillian Walter\t\tgillian.walter at vexcel.com\tgdal\n\nbfreisen\tBob Friesenhahn\t\tbfriesen at simple.dallas.tx.us\tlibtiff\n\nandrea\t\tAlessandro Amici \talexamici at tiscali.it\t\tgdal\n\ndgilbert\tDave Gilbert\t\tdgilbert at dclg.ca\t\tlibjpeg\n\nnhv\t\tNorman Vine\t\tnhv at cape.com\t\t\tgdal\n\nkruland\t\tKevin Ruland\t\tkruland at ku.edu\t\tgdal\n\nfvdbergh\tFrans van der Bergh\tfvdbergh at csir.co.za\t\tgdal\n\ndwallner\tDaniel Wallner\t\tdaniel.wallner at bredband.net\tgdal\n\npnagy           Peter Nagy              peter.nagy at vexcel.com        gdal\n\njoris           Joris Van Damme         joris.at.lebbeke at skynet.be   libtiff\n\nkintel\t\tMarius Kintel           kintel at sim.no                dgnlib\n\nnbrodin         Nacho Brodin            brodin_ign at gva.es            gdal\n\ncollinsb\tBenjamin Collins        collinsb at mitre.org\t\tgdal\n\nmarit\t\tMarit Jentoft-Nilson    jentoft-nilsen at agnes.gsfc.nasa.gov geotiff\n\nvgough\t\tValient Gough\t\tvgough at remotesensing.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0869140625,
          "content": "Contributor information is provided at the GDAL [website](https://gdal.org/contributing)."
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 44.3701171875,
          "content": "# Doxyfile 1.4.2\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded\n# by quotes) that should identify the project.\n\nPROJECT_NAME           = GDAL\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       =\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish,\n# Dutch, Finnish, French, German, Greek, Hungarian, Italian, Japanese,\n# Japanese-en (Japanese with English messages), Korean, Korean-en, Norwegian,\n# Polish, Portuguese, Romanian, Russian, Serbian, Slovak, Slovene, Spanish,\n# Swedish, and Ukrainian.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend\n# the brief description of a member or function before the detailed description.\n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator\n# that is used to form the text in various listings. Each string\n# in this list, if found as the leading text of the brief description, will be\n# stripped from the text and the result after processing the whole list, is\n# used as the annotated text. Otherwise, the brief description is used as-is.\n# If left blank, the following values are used (\"$name\" is automatically\n# replaced with the name of the entity): \"The $name class\" \"The $name widget\"\n# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\"\n# \"represents\" \"a\" \"an\" \"the\"\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = NO\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of\n# the path mentioned in the documentation of a class, which tells\n# the reader which header file to include in order to use a class.\n# If left blank only the name of the header file containing the class\n# definition is used. Otherwise one should specify the include paths that\n# are normally passed to the compiler using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful is your file systems\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like the Qt-style comments (thus requiring an\n# explicit @brief command for a brief description.\n\nJAVADOC_AUTOBRIEF      = YES\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behavior.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behavior instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# re-implements.\n\nINHERIT_DOCS           = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 8\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C\n# sources only. Doxygen will then generate output that is more tailored for C.\n# For instance, some of the names that are used will be different. The list\n# of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources\n# only. Doxygen will then generate output that is more tailored for Java.\n# For instance, namespaces will be presented as packages, qualified scopes\n# will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class\n# will be included in the documentation.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the\n# brief documentation of file, namespace and class members alphabetically\n# by member name. If set to NO (the default) the members will appear in\n# declaration order.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be\n# sorted by fully-qualified names, including namespaces. If set to\n# NO (the default), the class list will be sorted only by class name,\n# not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the\n# alphabetical list.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if sectionname ... \\endif.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or define consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and defines in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text. Optionally the format may contain\n# $version, which will be replaced by the version of the file (if it could\n# be obtained via FILE_VERSION_FILTER)\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = port \\\n                         gcore \\\n                         frmts/gdalallregister.cpp \\\n                         alg \\\n                         alg/viewshed \\\n                         frmts/vrt \\\n                         apps \\\n                         ogr \\\n                         ogr/ogrsf_frmts \\\n                         ogr/ogrsf_frmts/generic \\\n                         swig/python/gdal-utils/scripts \\\n                         gnm \\\n                         doxygen_index.md\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx\n# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm\n\nFILE_PATTERNS          = *.h \\\n                         *.cpp \\\n                         *.c \\\n                         *.dox\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = NO\n\n# The EXCLUDE tag can be used to specify files and/or directories that should\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\nEXCLUDE                = gcore/rawdataset.cpp \\\n                         gcore/rawdataset.h \\\n                         gcore/include_sse2neon.h \\\n                         gcore/sse2neon.h\n\n# The EXCLUDE_SYMLINKS tag can be used select whether or not files or\n# directories that are symbolic links (a Unix filesystem feature) are excluded\n# from the input.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n\nEXCLUDE_PATTERNS       =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           = apps \\\n                         frmts \\\n                         frmts/jdem\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output.  If FILTER_PATTERNS is specified, this tag will be\n# ignored.\n\nINPUT_FILTER           =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = doxygen_index.md\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n# Note: To get rid of all source code in the generated output, make sure also\n# VERBATIM_HEADERS is set to NO.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C and C++ comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES (the default)\n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES (the default)\n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n# link to the source code.  Otherwise they will link to the documentation.\n#\n# http://trac.osgeo.org/gdal/ticket/2723\n\nREFERENCES_LINK_SOURCE = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = NO\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            =\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# Custom layout (see http://www.stack.nl/~dimitri/doxygen/manual/customize.html)\nLAYOUT_FILE \t       = DoxygenLayout.xml\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If the tag is left blank doxygen\n# will generate a default style sheet. Note that doxygen will try to copy\n# the style sheet file to the HTML output directory, so don't put your own\n# stylesheet in the HTML output directory as well, or it will be erased!\n\nHTML_STYLESHEET        =\n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,\n# files or namespaces will be aligned in HTML using tables. If set to\n# NO a bullet list will be used.\n\n# HTML_ALIGN_MEMBERS     = YES\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files\n# will be generated that can be used as input for tools like the\n# Microsoft HTML help workshop to generate a compressed HTML help file (.chm)\n# of the generated HTML documentation.\n\nGENERATE_HTMLHELP      = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n# be used to specify the file name of the resulting .chm file. You\n# can add a path in front of the file if the result should not be\n# written to the html output directory.\n\nCHM_FILE               =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n# be used to specify the location (absolute path including file name) of\n# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run\n# the HTML help compiler on the generated index.hhp.\n\nHHC_LOCATION           =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag\n# controls if a separate .chi index file is generated (YES) or that\n# it should be included in the master .chm file (NO).\n\nGENERATE_CHI           = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag\n# controls whether a binary table of contents is generated (YES) or a\n# normal table of contents (NO) in the .chm file.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members\n# to the contents of the HTML help documentation and to the tree view.\n\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at\n# top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20])\n# that doxygen will group on one line in the generated HTML documentation.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be\n# generated containing a tree-like index structure (just like the one that\n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (for instance Mozilla 1.0+,\n# Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are\n# probably better off using the HTML help feature.\n\nGENERATE_TREEVIEW      = NO\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will\n# generate Latex output.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `latex' will be used as the default path.\n\nLATEX_OUTPUT           =\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked. If left blank `latex' will be used as the default command name.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n# generate index for LaTeX. If left blank `makeindex' will be used as the\n# default command name.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact\n# LaTeX documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_LATEX          = NO\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX\n# packages that should be included in the LaTeX output.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for\n# the generated latex document. The header should contain everything until\n# the first chapter. If it is left blank doxygen will generate a\n# standard header. Notice: only use this tag if you know what you are doing!\n\nLATEX_HEADER           =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated\n# is prepared for conversion to pdf (using ps2pdf). The pdf file will\n# contain links (just like the HTML output) instead of page references\n# This makes the output suitable for online browsing using a pdf viewer.\n\nPDF_HYPERLINKS         = NO\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n# plain latex in the generated Makefile. Set this option to YES to get a\n# higher quality PDF documentation.\n\nUSE_PDFLATEX           = NO\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode.\n# command to the generated LaTeX files. This will instruct LaTeX to keep\n# running if errors occur, instead of asking the user for help.\n# This option is also used when generating formulas in HTML.\n\nLATEX_BATCHMODE        = NO\n\n# If LATEX_HIDE_INDICES is set to YES then doxygen will not\n# include the index chapters (such as File Index, Compound Index, etc.)\n# in the output.\n\nLATEX_HIDE_INDICES     = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output\n# The RTF output is optimized for Word 97 and may not look very pretty with\n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `rtf' will be used as the default path.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact\n# RTF documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated\n# will contain hyperlink fields. The RTF file will\n# contain links (just like the HTML output) instead of page references.\n# This makes the output suitable for online browsing using WORD or other\n# programs which support those fields.\n# Note: wordpad (write) and others do not support links.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# config file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an rtf document.\n# Syntax is similar to doxygen's config file.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will\n# generate man pages\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `man' will be used as the default path.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to\n# the generated man pages (default is the subroutine's section .3)\n\nMAN_EXTENSION          = .1\n\n# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n# then it will generate one additional man file for each entity\n# documented in the real man page(s). These additional files\n# only source the real man page, but without them the man command\n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will\n# generate an XML file that captures the structure of\n# the code including all documentation.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `xml' will be used as the default path.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES Doxygen will\n# dump the program listings (including syntax highlighting\n# and cross-referencing information) to the XML output. Note that\n# enabling this will significantly increase the size of the XML output.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n# generate an AutoGen Definitions (see autogen.sf.net) file\n# that captures the structure of the code including all\n# documentation. Note that this feature is still experimental\n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will\n# generate a Perl module file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate\n# the necessary Makefile rules, Perl scripts and LaTeX code to be able\n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be\n# nicely formatted so it can be parsed by a human reader.  This is useful\n# if you want to understand what is going on.  On the other hand, if this\n# tag is set to NO the size of the Perl module output will be much smaller\n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file\n# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.\n# This is useful so different doxyrules.make files included by the same\n# Makefile don't overwrite each other's variables.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_PREDEFINED tags.\n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# in the INCLUDE_PATH (see below) will be search if a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed. To prevent a macro definition from being\n# undefined via #undef or recursively expanded use the := operator\n# instead of the = operator.\n\nPREDEFINED             = HAVE_DLFCN_H \\\n                         CPL_DLL \\\n                         CPL_STDCALL= \\\n                         CPL_C_START \\\n                         CPL_C_END \\\n                         __cplusplus \\\n                         DOXYGEN_SKIP \\\n                         HAVE_CURL \\\n                         HDFS_ENABLED \\\n                         CPL_UNUSED= \\\n                         UNUSED_IF_NO_GEOS= \\\n                         UNUSED_IF_NO_SFCGAL= \\\n                         UNUSED_PARAMETER= \\\n                         isinf \\\n                         HAVE_LIBXML2 \\\n                         HAVE_RECENT_LIBXML2 \\\n                         HAVE_LONG_LONG=1 \\\n                         HAVE_SC_PHYS_PAGES=1 \\\n                         final= \\\n                         CPL_RESTRICT= \\\n                         CPL_WARN_UNUSED_RESULT= \\\n                         CPL_RETURNS_NONNULL= \\\n                         CPLSTRING_METHOD_DLL= \\\n                         CPL_NO_RETURN= \\\n                         EXPERIMENTAL_CPL_WARN_UNUSED_RESULT= \\\n                         CPL_MULTIPROC_PTHREAD \\\n                         CPL_NON_FINAL=\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition.\n\nEXPAND_AS_DEFINED      = CPL_PRINT_FUNC_FORMAT CPL_FORMAT_STRING\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all function-like macros that are alone\n# on a line, have an all uppercase name, and do not end with a semicolon. Such\n# function macros are typically used for boiler-plate code, and will confuse\n# the parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles.\n# Optionally an initial location of the external documentation\n# can be added for each tagfile. The format of a tag file without\n# this location is as follows:\n#   TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#   TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths or\n# URLs. If a location is present for each tag, the installdox tool\n# does not have to be run to correct the links.\n# Note that each tag file must have a unique name\n# (where the name does NOT include the path)\n# If a tag file is not located in the directory in which doxygen\n# is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = NO\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will\n# generate a call dependency graph for every global function or class method.\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are png, jpg, or gif\n# If left blank png will be used.\n\nDOT_IMAGE_FORMAT       = png\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes\n# that lay further from the root node will be omitted. Note that setting this\n# option to 1 or 2 may greatly reduce the computation time needed for large\n# code bases. Also note that a graph may be further truncated if the graph's\n# image dimensions are not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH\n# and MAX_DOT_GRAPH_HEIGHT). If 0 is used for the depth value (the default),\n# the graph is not depth-constrained.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to the search engine\n#---------------------------------------------------------------------------\n\n# The SEARCHENGINE tag specifies whether or not a search engine should be\n# used. If set to NO the values of all tags below this one will be ignored.\n\nSEARCHENGINE           = NO\n"
        },
        {
          "name": "DoxygenLayout.xml",
          "type": "blob",
          "size": 6.67578125,
          "content": "<doxygenlayout version=\"1.0\">\r\n  <!-- Generated by doxygen 1.8.12 -->\r\n  <!-- Navigation index tabs for HTML output -->\r\n  <!-- see \"Changing the layout of pages\" at http://www.stack.nl/~dimitri/doxygen/manual/customize.html -->\r\n  <navindex>\r\n    <tab type=\"mainpage\" visible=\"yes\" title=\"\"/>\r\n    <tab type=\"pages\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n    <tab type=\"modules\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n    <tab type=\"namespaces\" visible=\"yes\" title=\"\">\r\n      <tab type=\"namespacelist\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n      <tab type=\"namespacemembers\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n    </tab>\r\n    <tab type=\"classes\" visible=\"yes\" title=\"\">\r\n      <tab type=\"classlist\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n      <tab type=\"classindex\" visible=\"$ALPHABETICAL_INDEX\" title=\"\"/> \r\n      <tab type=\"hierarchy\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n      <tab type=\"classmembers\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n    </tab>\r\n    <tab type=\"files\" visible=\"yes\" title=\"\">\r\n      <tab type=\"filelist\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n      <tab type=\"globals\" visible=\"yes\" title=\"\" intro=\"\"/>\r\n    </tab>\r\n    <tab type=\"examples\" visible=\"yes\" title=\"\" intro=\"\"/>  \r\n    \r\n    <!-- beginning GDAL customization -->\r\n    <tab type=\"usergroup\" title=\"Download\">\r\n      <tab type=\"user\" url=\"http://trac.osgeo.org/gdal/wiki/DownloadSource\" title=\"Source\"/>\r\n      <tab type=\"user\" url=\"http://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries\" title=\"Binaries\"/>\r\n    </tab>\r\n    <tab type=\"user\" url=\"https://github.com/OSGeo/gdal/issues/\" title=\"Issue Tracker\"/>\r\n    <!-- end GDAL customization -->\r\n    \r\n  </navindex>    \r\n\r\n  <!-- Layout definition for a class page -->\r\n  <class>\r\n    <briefdescription visible=\"yes\"/>\r\n    <includes visible=\"$SHOW_INCLUDE_FILES\"/>\r\n    <inheritancegraph visible=\"$CLASS_GRAPH\"/>\r\n    <collaborationgraph visible=\"$COLLABORATION_GRAPH\"/>\r\n    <memberdecl>\r\n      <nestedclasses visible=\"yes\" title=\"\"/>\r\n      <publictypes title=\"\"/>\r\n      <services title=\"\"/>\r\n      <interfaces title=\"\"/>\r\n      <publicslots title=\"\"/>\r\n      <signals title=\"\"/>\r\n      <publicmethods title=\"\"/>\r\n      <publicstaticmethods title=\"\"/>\r\n      <publicattributes title=\"\"/>\r\n      <publicstaticattributes title=\"\"/>\r\n      <protectedtypes title=\"\"/>\r\n      <protectedslots title=\"\"/>\r\n      <protectedmethods title=\"\"/>\r\n      <protectedstaticmethods title=\"\"/>\r\n      <protectedattributes title=\"\"/>\r\n      <protectedstaticattributes title=\"\"/>\r\n      <packagetypes title=\"\"/>\r\n      <packagemethods title=\"\"/>\r\n      <packagestaticmethods title=\"\"/>\r\n      <packageattributes title=\"\"/>\r\n      <packagestaticattributes title=\"\"/>\r\n      <properties title=\"\"/>\r\n      <events title=\"\"/>\r\n      <privatetypes title=\"\"/>\r\n      <privateslots title=\"\"/>\r\n      <privatemethods title=\"\"/>\r\n      <privatestaticmethods title=\"\"/>\r\n      <privateattributes title=\"\"/>\r\n      <privatestaticattributes title=\"\"/>\r\n      <friends title=\"\"/>\r\n      <related title=\"\" subtitle=\"\"/>\r\n      <membergroups visible=\"yes\"/>\r\n    </memberdecl>\r\n    <detaileddescription title=\"\"/>\r\n    <memberdef>\r\n      <inlineclasses title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <services title=\"\"/>\r\n      <interfaces title=\"\"/>\r\n      <constructors title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <related title=\"\"/>\r\n      <variables title=\"\"/>\r\n      <properties title=\"\"/>\r\n      <events title=\"\"/>\r\n    </memberdef>\r\n    <allmemberslink visible=\"yes\"/>\r\n    <usedfiles visible=\"$SHOW_USED_FILES\"/>\r\n    <authorsection visible=\"yes\"/>\r\n  </class>\r\n\r\n  <!-- Layout definition for a namespace page -->\r\n  <namespace>\r\n    <briefdescription visible=\"yes\"/>\r\n    <memberdecl>\r\n      <nestednamespaces visible=\"yes\" title=\"\"/>\r\n      <constantgroups visible=\"yes\" title=\"\"/>\r\n      <classes visible=\"yes\" title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n      <membergroups visible=\"yes\"/>\r\n    </memberdecl>\r\n    <detaileddescription title=\"\"/>\r\n    <memberdef>\r\n      <inlineclasses title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n    </memberdef>\r\n    <authorsection visible=\"yes\"/>\r\n  </namespace>\r\n\r\n  <!-- Layout definition for a file page -->\r\n  <file>\r\n    <briefdescription visible=\"yes\"/>\r\n    <includes visible=\"$SHOW_INCLUDE_FILES\"/>\r\n    <includegraph visible=\"$INCLUDE_GRAPH\"/>\r\n    <includedbygraph visible=\"$INCLUDED_BY_GRAPH\"/>\r\n    <sourcelink visible=\"yes\"/>\r\n    <memberdecl>\r\n      <classes visible=\"yes\" title=\"\"/>\r\n      <namespaces visible=\"yes\" title=\"\"/>\r\n      <constantgroups visible=\"yes\" title=\"\"/>\r\n      <defines title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n      <membergroups visible=\"yes\"/>\r\n    </memberdecl>\r\n    <detaileddescription title=\"\"/>\r\n    <memberdef>\r\n      <inlineclasses title=\"\"/>\r\n      <defines title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n    </memberdef>\r\n    <authorsection/>\r\n  </file>\r\n\r\n  <!-- Layout definition for a group page -->\r\n  <group>\r\n    <briefdescription visible=\"yes\"/>\r\n    <groupgraph visible=\"$GROUP_GRAPHS\"/>\r\n    <memberdecl>\r\n      <nestedgroups visible=\"yes\" title=\"\"/>\r\n      <dirs visible=\"yes\" title=\"\"/>\r\n      <files visible=\"yes\" title=\"\"/>\r\n      <namespaces visible=\"yes\" title=\"\"/>\r\n      <classes visible=\"yes\" title=\"\"/>\r\n      <defines title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <enumvalues title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n      <signals title=\"\"/>\r\n      <publicslots title=\"\"/>\r\n      <protectedslots title=\"\"/>\r\n      <privateslots title=\"\"/>\r\n      <events title=\"\"/>\r\n      <properties title=\"\"/>\r\n      <friends title=\"\"/>\r\n      <membergroups visible=\"yes\"/>\r\n    </memberdecl>\r\n    <detaileddescription title=\"\"/>\r\n    <memberdef>\r\n      <pagedocs/>\r\n      <inlineclasses title=\"\"/>\r\n      <defines title=\"\"/>\r\n      <typedefs title=\"\"/>\r\n      <enums title=\"\"/>\r\n      <enumvalues title=\"\"/>\r\n      <functions title=\"\"/>\r\n      <variables title=\"\"/>\r\n      <signals title=\"\"/>\r\n      <publicslots title=\"\"/>\r\n      <protectedslots title=\"\"/>\r\n      <privateslots title=\"\"/>\r\n      <events title=\"\"/>\r\n      <properties title=\"\"/>\r\n      <friends title=\"\"/>\r\n    </memberdef>\r\n    <authorsection visible=\"yes\"/>\r\n  </group>\r\n\r\n  <!-- Layout definition for a directory page -->\r\n  <directory>\r\n    <briefdescription visible=\"yes\"/>\r\n    <directorygraph visible=\"yes\"/>\r\n    <memberdecl>\r\n      <dirs visible=\"yes\"/>\r\n      <files visible=\"yes\"/>\r\n    </memberdecl>\r\n    <detaileddescription title=\"\"/>\r\n  </directory>\r\n</doxygenlayout>\r\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 0.1669921875,
          "content": "Governance\n==========\n\nThe governance of the GDAL project is described by [RFC 1: Project Management Committee Guidelines](https://gdal.org/development/rfc/rfc1_pmc.html)\n"
        },
        {
          "name": "HOWTO-RELEASE",
          "type": "blob",
          "size": 14.0087890625,
          "content": "\tNotes on Preparing a GDAL Source Release\n\t========================================\n\n\nPrerequisites:\n\n1) Check that the release is ready to go as far as ABI (binary compatibility)\n   is concerned. This can be checked by comparing the installed headers of the\n   candidate release with the installed headers of the previous release\n   (diff -ur $(OLD_INSTALL_DIR)/include $(NEW_INSTALL_DIR)/include). The API\n   is defined as all functions and classes exported by the CPL_DLL keyword.\n\n  - For major and minor releases, there must be no function signature change\n    for the C API. Only new functions are allowed.\n\n  - For major releases, the allowed changes in C++ API should (or must?) be\n    such that user calling C++ code can still compile against new headers\n    without modification (existing methods can become virtual, default\n    arguments can be added, new methods or members can be added)\n\n  - For minor releases (1.6.1 versus 1.6.0), the C++ ABI stability must be\n    preserved : no method signature change, no addition of virtual methods, no\n    new members. Only non-virtual methods can be added.\n\n    It may also be helpful to check:\n      https://abi-laboratory.pro/tracker/timeline/gdal/\n\n2) Delete existing fix_typos directory and run scripts/fix_typos.sh\n\nProcess :\n\n1) \"make completion\" to regenerate scripts/gdal-bash-completion.sh\n   if new command line switches have been added. scripts/completionFinder.py\n   must also be edited before if new utilities/scripts are added/removed.\n\n2) Update the release date, and number information in gcore/gdal_version.h.in\n   (*NOT* gdal_version.h which is a generated file)\n   Note: the format of GDAL_RELEASE_DATE should be YYYYMMDD.\n\n3) Update two instances of year in CITATION file to the current year.\n\n4) Update \"version\" and \"date-released\" in CITATION.cff (Note: the DOI does\n   *not* need to be updated as it is a generic one)\n\n5) Update the VERSION file (if not already done)\n\n6) Update the version information in the following files:\n    - ./swig/python/gdal-utils/osgeo_utils/__init__.py (gdal-utils python package)\n    - ./swig/python/README.rst (libgdal)\n\n7) Update the GDAL_SOVERSION number at top of gdal.cmake according to the\n   directions given in the comment preceding it.\n\n8) Prepare release overview in the NEWS.md file. For example, to get all changes\n   from v3.4.0 to current HEAD\n     git log --reverse -v v3.4.0..HEAD . \":(exclude)autotest\" \":(exclude)doc\" \":(exclude).github\"\n\n   For a feature release, e.g 3.6.0, you can use scripts/generate_log_feature_release.py to generate a log without commit that went in the previous 3.5.x bugfix releases with:\n     python3 scripts/generate_log_feature_release.py\n\n  - commit new version to NEWS.md file.\n\n  - for bugfixes releases, forward port additions of NEWS.md to master\n\n9) Update doc/source/about_no_title.rst, doc/source/download.rst and doc/source/download_past.rst\n   to advertise the new release and link to the release notes. Do that in a dedicated commit.\n\n   (It is necessary to do that at that stage, so that the ReadTheDocs \"stable\" branch, based on the latest tag, proposes to download it)\n\n10) If this is a feature release (e.g 3.1), prepare a branch.\n\n   git checkout master\n   git pull origin master\n   git checkout -b release/3.1\n   git push origin release/3.1\n\n11) Tag the release with a RC suffix:\n\n   git checkout release/3.1\n   git pull origin release/3.1\n   git tag -a -m \"Create tag v3.1.0RC1\" v3.1.0RC1\n   git push origin v3.1.0RC1\n\n12) Prepare archives\n\n12.0) Ensure you have the following prerequisites (beyond normal build deps):\n\n   If make is not GNU make, e.g., export MAKE=gmake\n\n   doxygen\n\n   python available as \"python\", or e.g. export PYTHON=python3.9\n\n   python3 available as \"python3\" in path (export PYTHON=python3.9\n   partially works, but some scripts under doc have hardcoded python3)\n\n   sphinx-build in path, or e.g. export SPHINXBUILD=sphinx-build-3.9\n\n   breathe extension for sphinx\n\n   swig 4 in path as \"swig\"\n\n   md5sum (GNU version) in path (not a POSIX requirement)\n\n12.1) Create the source distributions using the mkgdaldist.sh script.\n   The argument should be the version number (i.e. 1.4.2). As our process involves\n   doing betas or RCs, use the -rc option so that the filenames include this\n   information (after promotion to official release, filename renaming will have\n   to be done)\n\n   % ./mkgdaldist.sh 3.1.0 -tag v3.1.0RC1 -rc rc1\n\n   For a beta version:\n\n   % ./mkgdaldist.sh 3.1.0beta1 -tag v3.1.0beta1\n\n   For a version intended for testing packaging (and not for\n   distribution):\n\n   % ./mkgdaldist.sh 3.4.80 -tag master\n\n   It might be useful to compare the content of the generated tarball, with\n   a previous release (diff -Nur gdal-3.0.1 gdal-3.0.2).\n   This is more easily doable for a bugfix release.\n\n12.2) Create a snapshot of the documentation (only for feature releases)\n\n    1. Refresh\n       https://download.osgeo.org/gdal/for_doc/javadoc.zip\n       by building the Java bindings, with -DGDAL_JAVA_GENERATE_JAVADOC=ON.\n       javadoc.zip is in the swig/java subdirectory of the build directory.\n    2. cd doc\n    3. ./build_doc_snapshot 310\n       This generates gdal310doc.zip\n\n12.3) Publish the resulting files on download.osgeo.org,\n    in /osgeo/download/gdal/X.Y.Z (where X.Y.Z is the version number)\n\n    with ~/.ssh/config containing:\n\n   Host osgeo7-*\n        ProxyCommand ssh rouault@download.osgeo.org -W $(sed -e \"s/^osgeo7-//;s/$/.lxd/\" <<< \"%h\"):%p\n\n\n13) Announce the release candidate availability to gdal-dev@\n    Example: https://lists.osgeo.org/pipermail/gdal-dev/2019-June/050509.html\n\n14) If new RC is needed, update gcore/gdal_version.h.in with the new date\n    and update NEWS,and go to 7)\n\n    If no new RC is needed, after a few days, raise a motion to gdal-dev@ for approval\n\n15) Once the vote has positively completed,\n\n15.0) For a new feature release, update the STABLE_BRANCH repository variable\n\n    Go to https://github.com/OSGeo/GDAL/settings/variables/actions/STABLE_BRANCH\n    and update the value to be release/x.y\n\n15.1) Tag the release as final:\n\n    git checkout v3.1.0RC1\n    git tag -a -m \"Create tag v3.1.0\" v3.1.0\n    git push origin v3.1.0\n\n15.2) Log on download.osgeo.org, go to /osgeo/download/gdal/X.Y.Z\n\n      Remove the RC suffixes for the final RC, like:\n      mv gdal-3.8.3rc1.tar.xz gdal-3.8.3.tar.xz\n      mv gdal-3.8.3rc1.tar.xz.md5 gdal-3.8.3.tar.xz.md5\n      mv gdal-3.8.3rc1.tar.xz.sig gdal-3.8.3.tar.xz.sig\n      mv gdal-3.8.3rc1.tar.gz gdal-3.8.3.tar.gz\n      mv gdal-3.8.3rc1.tar.gz.md5 gdal-3.8.3.tar.gz.md5\n      mv gdal-3.8.3rc1.tar.gz.sig gdal-3.8.3.tar.gz.sig\n      mv gdal383rc1.zip gdal383.zip\n      mv gdal383rc1.zip.md5 gdal383.zip.md5\n      mv gdal383rc1.zip.sig gdal383.zip.sig\n      mv gdalautotest-3.8.3rc1.tar.gz gdalautotest-3.8.3.tar.gz\n      mv gdalautotest-3.8.3rc1.zip gdalautotest-3.8.3.zip\n\n      And edit the .md5 file to remove the reference to RC in the names they contain\n      vim gdal-3.8.3.tar.gz.md5\n      vim gdal-3.8.3.tar.xz.md5\n      vim gdal383.zip.md5\n\n      Check that everything is fine:\n      md5sum -c *.md5\n\n15.3) In /osgeo/download/gdal, add a symlink from X.Y.Z to CURRENT (except for stable releases in a \"old\" branch).\n\n  % ln -sf X.Y.Z CURRENT\n\n16) Update GitHub to close the release milestone.\n    Then create a new milestone for the next release.\n\n17) Upload the new Python bindings to Pypi (requires upload rights to\nthe GDAL package by one of the current owners : HowardB/FrankW/EvenR)\n( procedure taken from http://peterdowns.com/posts/first-time-with-pypi.html )\n\n17.1) Prerequisite:\n    a) Install twine https://pypi.org/project/twine/\n\n    b) Create a $HOME/.pypirc file :\n\n    [distutils] # this tells distutils what package indexes you can push to\n    index-servers = pypi\n                    pypitest\n\n    [pypi] # authentication details for live PyPI\n    repository: https://upload.pypi.org/legacy/\n    username: yourlogin\n    password: yourpassword\n\n    [pypitest] # authentication details for test PyPI\n    repository: https://test.pypi.org/legacy/\n    username: yourlogin\n    password: yourpassword\n\n17.2) create gdal sdist and upload to pypi:\n\n    a) Create a build directory if not already done. Go to it and run cmake\n\n    b) cd $BUILD_DIR/swig/python\n\n    c) python3 setup.py sdist\n\n    d) Check the output (this assumes setuptools >= 65.3.0, otherwise the filename is GDAL-*.gz):\n        twine check dist/gdal-*.gz\n\n    e) For trial :\n        twine upload dist/gdal-*.gz -r pypitest\n\n    f) For real :\n        twine upload dist/gdal-*.gz\n\n17.3) create gdal-utils wheel and upload to pypi:\n\n    a) cd $BUILD_DIR/swig/python/gdal-utils\n\n    b) python3 setup.py bdist_wheel\n\n    c) Check the output:\n        twine check dist/gdal_utils-*.whl\n\n    c) For trial :\n        twine upload dist/gdal_utils-*.whl -r pypitest\n\n    d) For real :\n        twine upload dist/gdal_utils-*.whl\n\n18) Generate signed maven artifacts with GPG for Java bindings.\n    This step is required in order to deploy the\n    maven artifacts to the central Maven repository. Before this step can\n    proceed you must set up a signing key as described here:\n\n      http://central.sonatype.org/pages/working-with-pgp-signatures.html\n\n a) Each developer can use their own signing key although it is usually best to\n    avoid constantly using a different key for releases as users will need to\n    import the public key in order to verify the artifacts.\n\n    Here are a quick set of steps to generate a signing key key.\n\n       gpg --gen-key\n       gpg --list-keys (and note the key id)\n       gpg --keyserver hkp://pool.sks-keyservers.net --send-keys <key id>\n\n    See the above link for more details.\n\n  b) Run CMake with the following variables:\n\n       1. GPG_KEY: the identifier for the signing keys\n       2. GPG_PASS: the passphrase for the signing key (optional)\n\n  c) Build the bindings: make java_binding\n\n    Upon success you should see a file named \"swig/java/build/maven/bundle.jar\"\n    that contains all the maven artifacts with signatures. This file is what\n    will be uploaded to maven central. See the next step.\n\n19) Deploy maven artifacts to Maven central.\n\n    NOTE: Before you can deploy to maven central you must set up an account\n    in Sonatype JIRA. That can be done here:\n\n        https://issues.sonatype.org/secure/Signup!default.jspa\n\n    Once you have an account set up you must be associated with the gdal\n    project. Create a ticket here asking to be associated with the project:\n\n        https://issues.sonatype.org/browse/OSSRH\n\n    The entire deployment process is described in detail here:\n\n       http://central.sonatype.org/pages/manual-staging-bundle-creation-and-deployment.html\n       http://central.sonatype.org/pages/releasing-the-deployment.html\n\n    The following steps summarize the process.\n\na) Log into the Sonatype repository manager at https://oss.sonatype.org. Use the\n   same credentials as your Sonatype JIRA account.\n\nb) Once log in select \"Staging Upload\" on the left hand side.\n\nc) Select \"Artifact Bundle\" under \"Upload Mode\" and then choose the \"bundle.jar\"\n   created in the previous Step 22. Finally \"Upload Bundle\" to start the upload.\n\nd) When the upload has been completed you will be notified that a staging\n   repository has been created. Note the name of the repository. It should look\n   something like \"orggdal-100x\".\n\ne) From the left hand menu navigate to \"Staging Repositories\". In the search\n   box look for the staging repository name you noted from the previous section.\n   Or just search for \"gdal\". It should be obvious which repository is the\n   current one.\n\nf) Select the staging repository. If all is well You should see the option to\n   \"Release\" (Located as a button near the top of the page). If not it means\n   there was an issue with the bundle. Consult the \"Activity\" tab at the bottom\n   of the page to find out why.\n\ne) Click the \"Release\" button and that is it! The release should be available in\n   Maven Central shortly. You can verify this by going to search.maven.org and\n   searching for \"gdal\".\n\n18) Create a release on GitHub\n    Go to https://github.com/OSGeo/gdal/releases/new\n    And create a release for the vX.Y.Z tag\n    Attach the following files:\n    - gdal-X.Y.Z.tar.gz\n    - gdal-X.Y.Z.tar.gz.sig\n    - gdal-X.Y.Z.tar.gz.md5\n    - gdalXYZ.zip\n    - gdalXYZ.zip.sig\n    - gdalXYZ.zip.md5\n    - gdalautotest-X.Y.Z.zip\n\n20) Regenerate Docker images\n\n    e.g\n        ./docker/build-all.sh --with-multi-arch --release --tag 3.3.1 --gdal v3.3.1 --proj 8.1.0 --platform linux/arm64,linux/amd64 --push\n\n    and update docker/README.md with the latest release\n\n21) Announce release to :\n    - major release: gdal-dev@lists.osgeo.org, gdal-announce@lists.osgeo.org, news_item@osgeo.org.\n    - bugfix release: gdal-dev@lists.osgeo.org, gdal-announce@lists.osgeo.org\n\n   Example:\n    - bugfix release: https://lists.osgeo.org/pipermail/gdal-dev/2019-July/050543.html\n    - feature release: https://lists.osgeo.org/pipermail/gdal-dev/2020-May/052117.html\n\nNote: gdal-announce@ is moderated. Make sure that your email address is approved\n('mod' tick disabled in https://lists.osgeo.org/mailman/admin/gdal-announce/members),\nor your message manually approved, with an administrator of the list.\n\n22) For a feature release: after it has been done, in the master branch, update\n    the VERSION to the next one and in gcore/gdal_version.h.in, update\n    GDAL_VERSION_MAJOR/_MINOR, GDAL_RELEASE_NAME (with a dev suffix, like \"3.7.0dev\"),\n    and set GDAL_RELEASE_DATE to a date like {YEAR}9999.\n    Update swig/python/gdal-utils/osgeo_utils/__init__.py to something like (3, 6, 99, 0)\n    if master is 3.7.0dev\n\n23) For bugfixes releases, forward port to master changes done in\n    doc/source/about_no_title.rst, doc/source/download.rst and doc/source/download_past.rst\n\n24) For a feature release, enable a new version in the ReadTheDocs administration panel.\n    a) Go to https://readthedocs.org/projects/gdal/versions/\n    b) In the \"Activate a version\" tab, enter \"release/X.Y\" in the text entry and click on the Filter button\n    c) Click on the Activate button\n    d) Go to https://readthedocs.org/projects/gdal/, and in the \"Compile a version\" drop-down list,\n       select the newt \"release-X.Y\" label and click on the \"Compile a version\" button\n"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 21.3291015625,
          "content": "\nGDAL/OGR Licensing\n==================\n\nThis file attempts to include all licenses that apply within the GDAL/OGR\nsource tree, in particular any that are supposed to be exposed to the end user\nfor credit requirements for instance.  The contents of this file can be\ndisplayed from GDAL commandline utilities using the --license commandline\nswitch.\n\n\nGDAL/OGR General\n----------------\n\nIn general GDAL/OGR is licensed under an MIT style license with the\nfollowing terms:\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n\nport/cpl_float.cpp\n------------------\n\nCopyright (c) 2002, Industrial Light & Magic, a division of Lucas\nDigital Ltd. LLC\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n*       Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n*       Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n*       Neither the name of Industrial Light & Magic nor the names of\nits contributors may be used to endorse or promote products derived\nfrom this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nfrmts/hdf4/hdf-eos/*\n--------------------\n\n Copyright (C) 1996 Hughes and Applied Research Corporation\n\n Permission to use, modify, and distribute this software and its documentation\n for any purpose without fee is hereby granted, provided that the above\n copyright notice appear in all copies and that both that copyright notice and\n this permission notice appear in supporting documentation.\n\n\nfrmts/pcraster/libcsf\n---------------------\n\nCopyright (c) 1997-2003, Utrecht University\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following\n  disclaimer in the documentation and/or other materials provided\n  with the distribution.\n\n* Neither the name of Utrecht University nor the names of its contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nfrmts/grib/degrib/*\n-------------------\n\nThe degrib and g2clib source code are modified versions of code produced\nby NOAA NWS and are in the public domain subject to the following\nrestrictions:\n\nhttp://www.weather.gov/im/softa.htm\n\nDISCLAIMER The United States Government makes no warranty, expressed or\nimplied, as to the usefulness of the software and documentation for any\npurpose. The U.S. Government, its instrumentalities, officers, employees,\nand agents assumes no responsibility (1) for the use of the software and\ndocumentation listed below, or (2) to provide technical support to users.\n\nhttp://www.weather.gov/disclaimer.php\n\n The information on government servers are in the public domain, unless\nspecifically annotated otherwise, and may be used freely by the public so\nlong as you do not 1) claim it is your own (e.g. by claiming copyright for\nNWS information -- see below), 2) use it in a manner that implies an\nendorsement or affiliation with NOAA/NWS, or 3) modify it in content and\nthen present it as official government material. You also cannot present\ninformation of your own in a way that makes it appear to be official\ngovernment information..\n\n The user assumes the entire risk related to its use of this data. NWS is\nproviding this data \"as is,\" and NWS disclaims any and all warranties,\nwhether express or implied, including (without limitation) any implied\nwarranties of merchantability or fitness for a particular purpose. In no\nevent will NWS be liable to you or to any third party for any direct,\nindirect, incidental, consequential, special or exemplary damages or lost\nprofit resulting from any use or misuse of this data.\n\n As required by 17 U.S.C. 403, third parties producing copyrighted works\nconsisting predominantly of the material appearing in NWS Web pages must\nprovide notice with such work(s) identifying the NWS material incorporated\nand stating that such material is not subject to copyright protection.\n\nport/cpl_minizip*\n-----------------\n\nThis is version 2005-Feb-10 of the Info-ZIP copyright and license.\nThe definitive version of this document should be available at\nftp://ftp.info-zip.org/pub/infozip/license.html indefinitely.\n\n\nCopyright (c) 1990-2005 Info-ZIP.  All rights reserved.\n\nFor the purposes of this copyright and license, \"Info-ZIP\" is defined as\nthe following set of individuals:\n\n   Mark Adler, John Bush, Karl Davis, Harald Denker, Jean-Michel Dubois,\n   Jean-loup Gailly, Hunter Goatley, Ed Gordon, Ian Gorman, Chris Herborth,\n   Dirk Haase, Greg Hartwig, Robert Heath, Jonathan Hudson, Paul Kienitz,\n   David Kirschbaum, Johnny Lee, Onno van der Linden, Igor Mandrichenko,\n   Steve P. Miller, Sergio Monesi, Keith Owens, George Petrov, Greg Roelofs,\n   Kai Uwe Rommel, Steve Salisbury, Dave Smith, Steven M. Schweda,\n   Christian Spieler, Cosmin Truta, Antoine Verheijen, Paul von Behren,\n   Rich Wales, Mike White\n\nThis software is provided \"as is,\" without warranty of any kind, express\nor implied.  In no event shall Info-ZIP or its contributors be held liable\nfor any direct, indirect, incidental, special or consequential damages\narising out of the use of or inability to use this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       definition, disclaimer, and this list of conditions.\n\n    2. Redistributions in binary form (compiled executables) must reproduce\n       the above copyright notice, definition, disclaimer, and this list of\n       conditions in documentation and/or other materials provided with the\n       distribution.  The sole exception to this condition is redistribution\n       of a standard UnZipSFX binary (including SFXWiz) as part of a\n       self-extracting archive; that is permitted without inclusion of this\n       license, as long as the normal SFX banner has not been removed from\n       the binary or disabled.\n\n    3. Altered versions--including, but not limited to, ports to new operating\n       systems, existing ports with new graphical interfaces, and dynamic,\n       shared, or static library versions--must be plainly marked as such\n       and must not be misrepresented as being the original source.  Such\n       altered versions also must not be misrepresented as being Info-ZIP\n       releases--including, but not limited to, labeling of the altered\n       versions with the names \"Info-ZIP\" (or any variation thereof, including,\n       but not limited to, different capitalizations), \"Pocket UnZip,\" \"WiZ\"\n       or \"MacZip\" without the explicit permission of Info-ZIP.  Such altered\n       versions are further prohibited from misrepresentative use of the\n       Zip-Bugs or Info-ZIP e-mail addresses or of the Info-ZIP URL(s).\n\n    4. Info-ZIP retains the right to use the names \"Info-ZIP,\" \"Zip,\" \"UnZip,\"\n       \"UnZipSFX,\" \"WiZ,\" \"Pocket UnZip,\" \"Pocket Zip,\" and \"MacZip\" for its\n       own source and binary releases.\n\n\nogr/ogrsf_frmts/dxf/intronurbs.cpp\n----------------------------------\n\nThis code is derived from the code associated with the book \"An Introduction\nto NURBS\" by David F. Rogers.  More information on the book and the code is\navailable at:\n\n  http://www.nar-associates.com/nurbs/\n\n\nCopyright (c) 2009, David F. Rogers\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of the David F. Rogers nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\nalg/thinplatespline.cpp\n-----------------------\n\nIEEE754 log() code derived from:\n@(#)e_log.c 1.3 95/01/18\n\nCopyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n\nDeveloped at SunSoft, a Sun Microsystems, Inc. business.\nPermission to use, copy, modify, and distribute this\nsoftware is freely granted, provided that this notice\nis preserved.\n\n\nalg/libqhull\n------------\n\nOnly applies when GDAL is compiled with internal qhull support\n\n\n                    Qhull, Copyright (c) 1993-2012\n\n                            C.B. Barber\n                           Arlington, MA\n\n                               and\n\n       The National Science and Technology Research Center for\n        Computation and Visualization of Geometric Structures\n                        (The Geometry Center)\n                       University of Minnesota\n\n                       email: qhull@qhull.org\n\nThis software includes Qhull from C.B. Barber and The Geometry Center.\nQhull is copyrighted as noted above.  Qhull is free software and may\nbe obtained via http from www.qhull.org.  It may be freely copied, modified,\nand redistributed under the following conditions:\n\n1. All copyright notices must remain intact in all files.\n\n2. A copy of this text file must be distributed along with any copies\n   of Qhull that you redistribute; this includes copies that you have\n   modified, or copies of programs or other software products that\n   include Qhull.\n\n3. If you modify Qhull, you must include a notice giving the\n   name of the person performing the modification, the date of\n   modification, and the reason for such modification.\n\n4. When distributing modified versions of Qhull, or other software\n   products that include Qhull, you must provide notice that the original\n   source code may be obtained as noted above.\n\n5. There is no warranty or other guarantee of fitness for Qhull, it is\n   provided solely \"as is\".  Bug reports or fixes may be sent to\n   qhull_bug@qhull.org; the authors may or may not act on them as\n   they desire.\n\nfrmts/pdf/pdfdataset.cpp (method PDFiumRenderPageBitmap())\n----------------------------------------------------------\n\nCopyright 2014 PDFium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nfrmts/mrf/* (apply when MRF driver included in build)\n------------------------------------------------------\n\nCopyright (c) 2002-2012, California Institute of Technology.\nAll rights reserved.  Based on Government Sponsored Research under contracts NAS7-1407 and/or NAS7-03001.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n  2. Redistributions in binary form must reproduce the above copyright notice,\n     this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n  3. Neither the name of the California Institute of Technology (Caltech), its operating division the Jet Propulsion Laboratory (JPL),\n     the National Aeronautics and Space Administration (NASA), nor the names of its contributors may be used to\n     endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE CALIFORNIA INSTITUTE OF TECHNOLOGY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n~~~~~~~~\n\nCopyright 2014-2015 Esri\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\ncmake/modules/3.* (backported CMake find modules)\n-------------------------------------------------\n\nCMake - Cross Platform Makefile Generator\nCopyright 2000-2022 Kitware, Inc. and Contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* Neither the name of Kitware, Inc. nor the names of Contributors\n  may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nogr/ogrsf_frmts/flatgeobuf\n--------------------------\n\nFlatGeobuf\n++++++++++\n\nISC License\n\nCopyright (c) 2018, Bjorn Harrtell\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\nFlatbush\n++++++++\n\nISC License\n\nCopyright (c) 2018, Vladimir Agafonkin\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\nogr/ogrsf_frmts/flatgeobuf/flatbuffers\n--------------------------------------\n\nCopyright 2021 Google Inc. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "MIGRATION_GUIDE.TXT",
          "type": "blob",
          "size": 29.853515625,
          "content": "MIGRATION GUIDE FROM GDAL 3.10 to GDAL 3.11\n------------------------------------------\n\n- If only a specific GDAL Minor version is to be supported, this must now be\n  specified in the find_package call in CMake via a version range specification.\n\nMIGRATION GUIDE FROM GDAL 3.9 to GDAL 3.10\n------------------------------------------\n\n- The OGR SQL parser has been modified to evaluate NULL values in boolean\n  operations similarly to other SQL engines (SQLite, PostgreSQL, etc.). Previously,\n  with a foo=NULL field, expressions ``foo NOT IN ('bar')`` and ``foo NOT LIKE ('bar')``\n  would evaluate as true. Now the result is false (with the NULL state being\n  propagated to it). Concretely, to get the same results as in previous versions,\n  the above expressions must be rewritten as ``foo IS NULL OR foo NOT IN ('bar')``\n  and ``foo IS NULL OR foo NOT LIKE ('bar')``.\n\n- MEM driver: opening a dataset with the MEM::: syntax is now disabled by\n  default because of security implications. This can be enabled by setting the\n  GDAL_MEM_ENABLE_OPEN build or configuration option. Creation of a 0-band MEM\n  dataset, and using the GDALDataset::AddBand() method with the DATAPOINTER,\n  PIXELOFFSET and LINEOFFSET options is the recommended way. For example, like\n  in https://github.com/OSGeo/gdal/blob/e32a2fde41a555b7948cece9ab9b4e979138e7dd/gcore/rasterio.cpp#L1534-L1576\n\n- The Erdas Imagine (HFA) and Derived drivers are now optional drivers. Users\n  building with GDAL_BUILD_OPTIONAL_DRIVERS=OFF may need to explicitly enable\n  them with GDAL_ENABLE_DRIVER_HFA=ON and GDAL_ENABLE_DRIVER_DERIVED=ON.\n  The MapInfo, OGR_VRT and KML drivers are now an optional driver. Users\n  building with OGR_BUILD_OPTIONAL_DRIVERS=OFF may need to explicitly enable\n  them with OGR_ENABLE_DRIVER_TAB=ON, OGR_ENABLE_DRIVER_VRT=ON and\n  OGR_ENABLE_DRIVER_KML=ON.\n\n- User code using VSIFEofL() to potentially to end read loops should also test\n  the return code of the new VSIFError() function. Some virtual file systems\n  that used to report errors through VSIFEofL() now do through VSIFError().\n\n- Out-of-tree implementations of VSIVirtualHandle():\n  2 new required virtual methods must be implemented: int Error(), and\n  void ClearErr() following POSIX semantics of ferror() and clearerr().\n  This is to distinguish Read() that returns less bytes than requested because\n  of an error (Error() != 0) or because of end-of-file (Eof() != 0)\n\n  The VSIFilesystemPluginCallbacksStruct structure is extended with 2\n  corresponding optional (but recommended to be implemented to reliably detect\n  reading errors) callbacks \"error\" and \"clear_err\".\n\n- Python bindings: Band.GetStatistics() and Band.ComputeStatistics() now\n  return a None value in case of error (when exceptions are not enabled)\n\n- New color interpretation (GCI_xxxx) items have been added to the GDALColorInterp\n  enumeration. Code testing color interpretation may need to be adapted.\n\nMIGRATION GUIDE FROM GDAL 3.8 to GDAL 3.9\n-----------------------------------------\n\n- Out-of-tree vector drivers:\n  * OGRLayer::CreateField() now takes a const OGRFieldDefn* instead of a\n    OGRFieldDefn*.\n  * OGRLayer::CreateGeomField() now takes a const OGRGeomFieldDefn* instead of\n    a OGRGeomFieldDefn*.\n  * OGRLayer::ICreateLayer() has a new prototype, due to RFC 99 \"Geometry\n    coordinate precision\" changes.\n\n    The fastest migration path is from:\n\n    OGRLayer *\n         MyDataset::ICreateLayer(const char* pszLayerName,\n                                 const OGRSpatialReference *poSpatialRef,\n                                 OGRwkbGeometryType eGType, char **papszOptions)\n    {\n        ...\n    }\n\n    to\n\n    OGRLayer *\n         MyDataset::ICreateLayer(const char *pszLayerName,\n                                 const OGRGeomFieldDefn *poGeomFieldDefn,\n                                 CSLConstList papszOptions)\n    {\n        const auto eGType = poGeomFieldDefn ? poGeomFieldDefn->GetType() : wkbNone;\n        const auto poSpatialRef =\n            poGeomFieldDefn ? poGeomFieldDefn->GetSpatialRef() : nullptr;\n        ...\n    }\n\n- Sealed feature and field definition (RFC 97). A number of drivers now \"seal\"\n  their layer definition, which might cause issue to user code currently\n  mis-using setters of OGRFeatureDefn, OGRFieldDefn or OGRGeomFieldDefn on such\n  instances.\n  The drivers that have been updated to seal their layer definition are:\n  GeoPackage, PostgreSQL, Shapefile, OpenFileGDB, MITAB, Memory, GeoJSON, JSONFG,\n  TopoJSON, ESRIJSON, ODS, XLSX.\n\n- OGRLayer::SetIgnoredFields() now accepts a ``CSLConstList papszIgnoredFields``\n  instead of a ``const char** papszIgnoredFields``\n\nMIGRATION GUIDE FROM GDAL 3.7 to GDAL 3.8\n-----------------------------------------\n\n- Out-of-tree vector drivers:\n  * GDALDataset::ICreateLayer() now takes a const OGRSpatialReference* instead\n    of a OGRSpatialReference*. Drivers should clone the passed SRS if they need\n    to keep it.\n\n- The /vsimem virtual file system is modified to automatically create parent\n  directories when a file is created. (e.g., creating /vsimem/parent/child.txt\n  would cause the directory /vsimem/parent to be created.) If the parent\n  directory cannot be created because the file /vsimem/parent exists, file\n  creation will now fail.\n\n- In SWIG bindings, the function FileFromMemBuffer now returns an error code\n  if the file could not be created.\n\n\nMIGRATION GUIDE FROM GDAL 3.6 to GDAL 3.7\n-----------------------------------------\n\n- Following RFC 87, PIXELTYPE=SIGNEDBYTE in IMAGE_STRUCTURE metadata domain is\n  no longer reported by drivers that used to do it. The new GDT_Int8 data type\n  is now reported.\n  On writing, the PIXELTYPE=SIGNEDBYTE creation option is preserved in drivers\n  that used to support it, but is deprecated and external code should rather use\n  the GDT_Int8 data type.\n\n- The VSILFILE* type is no longer aliased to FILE* in builds without the DEBUG\n  define (that is production builds). External code that used FILE* with\n  GDAL VSI*L API has to be changed to use VSILFILE*.\n  This aliasing dates back to old times where both types were indifferently\n  used in the code base. In the mean time, this was cleaned up. But there was a\n  drawback of having VSILFILE* being either a dedicated type oor an alias of\n  FILE* depending whether DEBUG is defined, especially with the C++ API, for\n  people building their plugins with DEBUG and running them against a non-DEBUG\n  GDAL build, or the reverse.\n\n- GDALFlushCache() and GDALDataset::FlushCache() are modified to return a CPLErr\n  error code instead of void. Affects out-of-tree drivers.\n\n- A Close() virtual method is added to GDALDataset per RFC 91. Out-of-tree\n  drivers with write support are encouraged to implement it for error\n  propagation.\n\n- Pansharpening now requires that panchromatic and multispectral bands have\n  valid geotransform (in early versions, it was assumed in the case of missing\n  geotransform that they covered the same geospatial extent).\n  The undocumented VRT pansharpened MSShiftX and MSShiftY options (and the\n  corresponding C++ GDALPansharpenOptions::dfMSShiftX and dfMSShiftY members)\n  have been removed, due to using the inverted convention as one would expect,\n  and being sub-par solution compared to using geotransform to correlate pixels\n  of panchromatic and multispectral bands.\n\n- OGRCoordinateTransformation::GetSourceCS() and GetTargetCS() now returns\n  a const OGRSpatialReference*\n\n- OGRGeometry::getSpatialReference() now returns a const OGRSpatialReference*\n\n- OGRGeomFieldDefn::GetSpatialRef() now returns a const OGRSpatialReference*\n\nMIGRATION GUIDE FROM GDAL 3.5 to GDAL 3.6\n-----------------------------------------\n\n- Out-of-tree vector drivers:\n  * GDALDataset::IBuildOverviews(): parameters panOverviewList and panBandList\n    are now of type 'const int*' (previously 'int*')\n    Added a CSLConstList papszOptions member.\n  * GDALRasterBand::BuildOverviews(): parameter panOverviewList is now of\n    type 'const int*' (previously 'int*')\n    Added a CSLConstList papszOptions member.\n  * Compatibility layers of GDAL 3.0 _GetProjectionRef(), _GetGCPProjectionRef(),\n    _SetProjection(), _SetGCPs() have been removed\n\nMIGRATION GUIDE FROM GDAL 3.4 to GDAL 3.5\n-----------------------------------------\n\n- GDAL drivers may now return raster bands with the new data types GDT_Int64 or\n  GDT_UInt64.\n- Make GDALProxyRasterBand::RefUnderlyingRasterBand() / UnrefUnderlyingRasterBand() const. May affect out-of-tree drivers\n\nMIGRATION GUIDE FROM GDAL 3.3 to GDAL 3.4\n-----------------------------------------\n\n- Out-of-tree vector drivers:\n    * OGRFeatureDefn protected member variables have been changed.\n        - (nFieldCount, papoFieldDefn)        ==> std::vector<std::unique_ptr<OGRFieldDefn>> apoFieldDefn{};\n        - (nGeomFieldCount, paoGeomFieldDefn) ==> std::vector<std::unique_ptr<OGRGeomFieldDefn>> apoGeomFieldDefn{};\n    * OGRFeatureDefn::AddGeomFieldDefn( OGRGeomFieldDefn *, bCopy = FALSE ) is\n      replaced by AddGeomFieldDefn( std::unique_ptr<OGRGeomFieldDefn>&& )\n    * GDALDataset::FlushCache() and GDALRasterBand::FlushCache() now takes a bool bAtClosing argument.\n      That argument is set to true when FlushCache() is called from the dataset/band destructor.\n      This can be used as a hint, for example to avoid doing extra work if the dataset is marked\n      for deletion at closing. Driver implementing that method should propagate the argument to the\n      base implementation when calling it.\n\nMIGRATION GUIDE FROM GDAL 3.2 to GDAL 3.3\n-----------------------------------------\n\n- Python bindings:\n  * Python 2 is no longer supported per RFC 77. Python 3.6 or later required\n  * \"osgeo.utils\" was replaced by \"osgeo_utils\" (more details: see RFC78)\n  * The following undocumented, untested utility scripts are no longer installed as system scripts and were moved\n    from \"gdal/swig/python/gdal-utils\" to: \"gdal/swig/python/gdal-utils/samples\":\n    - epsg_tr.py\n    - esri2wkt.py\n    - gcps2vec.py\n    - gcps2wld.py\n    - gdal_auth.py\n    - gdalchksum.py\n    - gdalident.py\n    - gdalimport.py\n    - mkgraticule.py\n    In order to import sample script X (i.e. `epsg_tr`) as a module, use: `from osgeo_utils.samples import X`.\n    In order to run it as a script run: `python -m osgeo_utils.samples.X`.\n  * packaging:\n    - \"gdal/swig/python/samples\" moved to: \"gdal/swig/python/gdal-utils/osgeo_utils/samples\"\n    - \"gdal/swig/python/scripts\" moved to: \"gdal/swig/python/gdal-utils/scripts\"\n- gdaldem TRI: default algorithm has been changed to use Riley et al. 1999. Use -alg Wilson to select the algorithm used previously\n- Disable by default raster drivers DODS, JPEG2000(Jasper), JPEGLS, MG4LIDAR, FUJIBAS, IDA, INGR, ZMAP and vector driver ARCGEN, ArcObjects, CLOUDANT, COUCHDB, DB2, DODS, FME, GEOMEDIA, GTM, INGRES, MONGODB, REC, WALK at runtime, unless the GDAL_ENABLE_DEPRECATED_DRIVER_{drivername} configuration option is set to YES. Those drivers are planned for complete removal in GDAL 3.5\n- Perl bindings are deprecated. Removal planned for GDAL 3.5. Use Geo::GDAL::FFI instead\n- Removal of BNA, AeronavFAA, HTF, OpenAir, SEGUKOOA, SEGY, SUA, XPlane, BPG, E00GRID, EPSILON, IGNFHeightASCIIGrid, NTV1 drivers. Moved to (unsupported) https://github.com/OSGeo/gdal-extra-drivers repository.\n\nMIGRATION GUIDE FROM GDAL 3.1 to GDAL 3.2\n-----------------------------------------\n\n- Python bindings: old-style, deprecated for many years, import method of\n  importing the gdal module through \"import gdal\" is no longer available.\n  \"from osgeo import gdal\" must now be used. This holds true for the ogr, osr,\n  gdalconst and gdalnumeric modules.\n\n\nMIGRATION GUIDE FROM GDAL 3.0 to GDAL 3.1\n-----------------------------------------\n\n- OGR SQL: the 'LIKE' operator is now case sensitive by default. ILIKE (supported\n  in previous versions) must be used for case insensitive comparison. The\n  OGR_SQL_LIKE_AS_ILIKE configuration option can be set to YES to make LIKE behave\n  in a case insensitive way as in previous versions.\n\nMIGRATION GUIDE FROM GDAL 2.4 to GDAL 3.0\n-----------------------------------------\n\n- Unix Build: ./configure arguments --without-bsb, --without-grib,\n  and --without-mrf have been renamed to --disable-driver-bsb,\n  --disable-driver-grib and --disable-driver-mrf\n - Unix build: Arguments of --with-pg changed to yes/no only.\n- Substantial changes, sometimes backward incompatible, in coordinate reference\n  system and coordinate transformations have been introduced per\n  https://gdal.org/en/latest/development/rfc/rfc73_proj6_wkt2_srsbarn.html\n    * OSRImportFromEPSG() takes into account official axis order.\n      Traditional GIS-friendly axis order can be restored with\n      OGRSpatialReference::SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER);\n    * Same for SetWellKnownGeogCS(\"WGS84\") / SetFromUserInput(\"WGS84\")\n    * removal of OPTGetProjectionMethods(), OPTGetParameterList() and OPTGetParameterInfo()\n      No equivalent.\n    * removal of OSRFixup() and OSRFixupOrdering(): no longer needed since objects\n      constructed are always valid\n    * removal of OSRStripCTParms(). Use OSRExportToWktEx() instead with the\n      FORMAT=SQSQL option\n    * exportToWkt() outputs AXIS nodes\n    * OSRIsSame(): now takes into account data axis to CRS axis mapping, unless\n      IGNORE_DATA_AXIS_TO_SRS_AXIS_MAPPING=YES is set as an option to OSRIsSameEx()\n    * ogr_srs_api.h: SRS_WKT_WGS84 macro is no longer declared by default since\n      WKT without AXIS is too ambiguous. Preferred remediation: use SRS_WKT_WGS84_LAT_LONG.\n      Or #define USE_DEPRECATED_SRS_WKT_WGS84 before including ogr_srs_api.h\n\nOut-of-tree drivers:\n* GDALDataset::GetProjectionRef() made non-virtual.\n  Replaced by GetSpatialRef() virtual method.\n  Compatibility emulation possible by defining:\n    const char* _GetProjectionRef() override; // note leading underscore\n    const OGRSpatialReference* GetSpatialRef() const override {\n        return GetSpatialRefFromOldGetProjectionRef();\n    }\n\n* GDALDataset::SetProjection() made non-virtual.\n  Replaced by SetSpatialRef() virtual method.\n  Compatibility emulation possible by defining:\n    CPLErr _SetProjection(const char*) override; // note leading underscore\n    CPLErr SetSpatialRef(const OGRSpatialReference* poSRS) override {\n        return OldSetProjectionFromSetSpatialRef(poSRS);\n    }\n\n* GDALDataset::GetGCPProjection() made non-virtual.\n  Replaced by GetGCPSpatialRef() virtual method.\n  Compatibility emulation possible by defining:\n    const char* _GetGCPProjectionRef() override; // note leading underscore\n    const OGRSpatialReference* GetGCPSpatialRef() const override {\n        return GetGCPSpatialRefFromOldGetGCPProjection();\n    }\n\n* GDALDataset::SetGCPs(..., const char* pszWKT) made non-virtual.\n  Replaced by SetGCPs(..., const OGRSpatialReference* poSRS) virtual mode.\n    CPLErr _SetGCPs( int nGCPCount, const GDAL_GCP *pasGCPList,\n                    const char *pszGCPProjection ) override; // note leading underscore\n    CPLErr SetGCPs( int nGCPCountIn, const GDAL_GCP *pasGCPListIn,\n                    const OGRSpatialReference* poSRS ) override {\n        return OldSetGCPsFromNew(nGCPCountIn, pasGCPListIn, poSRS);\n    }\n\nMIGRATION GUIDE FROM GDAL 2.3 to GDAL 2.4\n-----------------------------------------\n\n1) Out-of-tree drivers: RawRasterBand() constructor changes\n\nRawRasterBand now only accepts a VSILFILE* file. Consequently the void* fpRaw\nargument has become a VSILFILE* one. And the bIsVSIL = FALSE argument has\nbeen removed. The int bOwnsFP = FALSE has seen its default value suppressed,\nand has seen its type changed to the RawRasterBand::OwnFP::YES/NO enumeration,\nto detect places where your code must be changed.\n\nCaution: code like RawRasterBand(..., bNativeOrder, TRUE) must be changed to\nRawRasterBand(..., bNativeOrder, RawRasterBand::OwnFP::NO, the TRUE value\nbeing the bIsVSIL value, and the default argument being bOwnsFP == FALSE.\n\nMIGRATION GUIDE FROM GDAL 2.2 to GDAL 2.3\n-----------------------------------------\n\n1) RFC 70: Guessing output format from output file name extension for utilities\n\nLink: https://gdal.org/en/latest/development/rfc/rfc70_output_format_guess.html\n\nBefore GDAL 2.3, if not specifying the output format to utilities, GeoTIFF or\nShapefile were assumed for most utilities. Now, the output format will be\nguessed from the output filename extension. This might break usages where\nnon-standard extensions are used for GeoTIFF or Shapefile output when -f/-of is\nnot specified (but warnings were already emitted in such situations).\n\n2) RFC 68: C++11 Compilation requirement\n\nLink: https://gdal.org/en/latest/development/rfc/rfc68_cplusplus11.html\n\nGDAL now requires a C++11 compatible compiler. External code using GDAL C++ API\nwill also need to enable at least C++11 compilation mode, if the compiler\ndefaults to C++98/C++03.\n\n3) Stricter const-ness in OGRGeomFieldDefn, OGRFeatureDefn and OGRFeature\n   classes, impacting out-of-tree drivers that subclass them.\n\n   The following methods are now const qualified:\n\n     OGRGeomFieldDefn class:\n        virtual OGRSpatialReference* GetSpatialRef() const\n\n     OGRFeatureDefn class:\n        virtual const char* GetName() const\n        virtual int GetFieldCount() const\n        virtual int GetFieldIndex(const char*) const\n        virtual int GetGeomFieldCount() const\n        virtual int GetGeomFieldIndex(const char*) const\n        virtual OGRwkbGeometryType GetGeomType() const\n        virtual OGRFeatureDefn* Clone() const\n        virtual int IsGeometryIgnored() const\n        virtual int IsSame(const OGRFeatureDefn*) const // argument is const now too\n\n     OGRFeature class:\n        virtual OGRBoolean Equal(const OGRFeature*) const // argument is const now too\n        virtual const char* GetStyleString() const\n        virtual OGRStyleTable* GetStyleTable() const\n\n    The following virtual methods, offering const alternatives to their\n    non-const equivalent methods, should be overloaded if the non-const\n    method is overloaded.\n\n     OGRFeatureDefn class:\n        virtual const OGRFieldDefn* GetFieldDefn(int) const\n        virtual const OGRGeomFieldDefn* GetGeomFieldDefn(int) const\n\n\nMIGRATION GUIDE FROM GDAL 2.1 to GDAL 2.2\n-----------------------------------------\n\nA) RFC 64: Triangle, Polyhedral surface and TIN\n\nLink: https://gdal.org/en/latest/development/rfc/rfc64_triangle_polyhedralsurface_tin.html\n\nVector drivers can now return geometries of type wkbPolyhedralSurface, wkbTIN\nand wkbTriangle; and their Z, M and ZM variants (as well as for the type of\ngeometry fields). Client code, as well as out-of-tree drivers that support\nwriting geometries, must be ready to deal with them.\n\nB) RFC 67: Null values in OGR\n\nLink: https://gdal.org/en/latest/development/rfc/rfc67_nullfieldvalues.html\n\nPreviously, the \"unset\" state of a field was used both for a unset state\n(ie no information for the field of the feature) or the NULL state of the\nfield. Now there is OGR_F_IsFieldSet() / OGRFeature::IsFieldSet() for the\nunset state, and a new OGR_F_IsFieldNull() / OGRFeature::IsFieldNull() for the\nnew NULL state. Code that used OGR_F_IsFieldSet() / OGRFeature::IsFieldSet()\nshould also test the NULL state, otherwise empty strings or 0 numeric values\nwill be returned. A convenient way of migrating is to replace the use of\nOGR_F_IsFieldSet() / OGRFeature::IsFieldSet() by OGR_F_IsFieldSetAndNotNull() /\nOGRFeature::IsFieldSetAndNotNull() if there is no need to distinguish both\nstates.\nOn the writing side, a few drivers will now distinguish between the unset\nand null state, namely GeoJSON, CouchDB, Cloudant, MongoDB, ElasticSearch and\nGML. For example, for the GeoJSON driver, in GDAL 2.1 or before, a unset field\nwas written as field_name: null. Starting with GDAL 2.2, only fields explicitly\nset as null with OGR_F_SetFieldNull() will be written with a null value.\nUnset fields of a feature will not be present in the corresponding JSon feature\nelement.\n\nMIGRATION GUIDE FROM GDAL 2.0 to GDAL 2.1\n------------------------------------------\n\nA) RFC 61: Support for measured geometries\n\nLink: https://gdal.org/en/latest/development/rfc/rfc61_support_for_measured_geometries.html\n\nThe OGRwkbGeometryType enumeration has been extended with new values for the\nM and ZM variants of the geometry types. Client code may have to be upgraded\nto take into account those new values. Note that the wkbPolyhedralSurface, wkbTIN\nand wkbTriangle types and their Z, M and ZM variants, have also been introduced\nas a provision for a potential support in a future version (they are unused in\nOGR core and drivers for now).\n\nPreviously the ESRI Shapefile driver read XYM data as XYZ. Now it is read\nas XYM.\n\nMIGRATION GUIDE FROM GDAL 1.11 to GDAL 2.0\n------------------------------------------\n\nThis file documents backwards incompatible changes. You are strongly encouraged\nto read the relevant RFCs for details and rationale for those changes.\n\nChanges to the Perl bindings API are listed in swig/perl/Changes-in-the-API-in-2.0.\n\nA) RFC 46: Unification of GDAL and OGR driver models\n\nLink: https://gdal.org/en/latest/development/rfc/rfc46_gdal_ogr_unification.html\n\nC++ API:\n\n  * OGRSFDriverRegistrar and OGRSFDriver are now deprecated. Use GDALDriverManager\n    and GDALDriver instead.\n\n  * The following methods from OGRSFDriverRegistrar are removed : Open(),\n    OpenShared(), ReleaseDataSource(), DeregisterDriver(), AutoLoadDrivers()\n    GetDriver() and GetDriverByName() now return a GDALDriver* instance.\n\n  * OGRDataSource::CreateLayer() specialized implementations should be renamed\n    as ICreateLayer() to benefit from layer creation options validation.\n\n  * OGRLayer::GetInfo() has been removed.\n\n  * All methods of OGRDataSource have been transferred to GDALDataset, except\n    SyncToDisk() that should now be implemented as FlushCache() in drivers.\n\n  * GDALOpenInfo::papszSiblingFiles member is now private. Use the new\n    GetSiblingFiles() method instead.\n\n  * GDALOpenInfo::fp member is replaced by fpL member of type VSILFILE*.\n\n  * OGRSFDriver::CopyDataSource() has been removed.\n\n  * GDALDriverManager::GetHome() and SetHome() have been removed.\n\nOut-of-tree drivers :\n\n  * Read RFC 46 for the needed changes. Changes in GDALOpenInfo will impact GDAL\n    drivers. GDAL drivers should also declare SetMetadataItem( GDAL_DCAP_RASTER, \"YES\" ).\n    OGRDataSource::CreateLayer() and SyncToDisk() changes will affect OGR drivers.\n\nBehavior changes :\n\n  * GDALDriverManager::GetDriverCount() and GetDriver() return both raster and\n    vector drivers. The nature of a driver can be tested with the GDAL_DCAP_RASTER\n    and GDAL_DCAP_VECTOR driver metadata item.\n\n  * GetRefCount() starts at 1 for OGRDataSource instead of 0.\n\nB) RFC 49: Curve geometries\n\nLink: https://gdal.org/en/latest/development/rfc/rfc49_curve_geometries.html\n\nC/C++ API :\n\n  * Use of wkb25DBit macro is strongly discouraged, as not compatible with new\n    geometry types. Use wkbFlatten(), wkbHasZ(), wkbSetZ() instead\n  * OGRwkbGeometryType enumeration has new values.\n\nBehavior changes :\n\n  * GML, NAS, WFS, PostGIS, VRT, GeoPackage and CSV drivers can return non-linear geometries.\n    Applications that do not wish to get such geometries can call\n    OGRSetNonLinearGeometriesEnabledFlag(FALSE)\n\nOut-of-tree drivers :\n\n  * Read RFC 49 for the needed changes. CreateFeature() and SetFeature() virtual\n    methods must be renamed ICreateFeature() and ISetFeature().\n\nC) RFC 51: RasterIO() improvements : resampling and progress callback\n\nLink: https://gdal.org/en/latest/development/rfc/rfc51_rasterio_resampling_progress.html\n\nOut-of-tree drivers :\n\n  * Read RFC 51 for the needed changes. GDALRasterBand and GDALDataset::IRasterIO()\n    take a new GDALRasterIOExtraArg* psExtraArg argument.\n    GDALRasterBand and GDALDataset::RasterIO() take a new\n    GDALRasterIOExtraArg* psExtraArg argument\n\nD) RFC 31: OGR 64bit Integer Fields and FIDs\n\nLink: https://gdal.org/en/latest/development/rfc/rfc31_ogr_64.html\n\nC++ API:\n  * OGRLayer::GetFeature(), OGRLayer::DeleteFeature(), OGRLayer::SetNextByIndex() take a GIntBig instead of a long\n  * OGRFeature::GetFID() and OGRLayer::GetFeatureCount() now returns a GIntBig\n\nC API:\n  * OGR_L_GetFeature(), OGR_L_DeleteFeature(), OGR_L_SetNextByIndex() take a GIntBig instead of a long\n  * OGR_F_GetFID() and OGR_L_GetFeatureCount() now returns a GIntBig\n\nBehavior changes :\n  * OFTInteger64 and OFTIntegerList64 can be returned whereas OGRFieldType is returned.\n\nOut-of-tree drivers :\n  * Virtual method signature change: OGRLayer::GetFeature(), OGRLayer::DeleteFeature(),\n    OGRLayer::SetNextByIndex() take a GIntBig argument instead of a long\n  * Virtual method signature change: OGRLayer::GetFeatureCount() now returns a GIntBig\n  * OGRFeature::GetFID() returns a GIntBig\n\nE) RFC 52: Strict OGR SQL quoting\n\nLink: https://gdal.org/en/latest/development/rfc/rfc52_strict_sql_quoting.html\n\nNo API changes\n\nBehavior changes:\n  * Identifiers, i.e column names or table names, can no longer be quoted with\n    single quote characters, but must use double quote characters if quoting is\n    needed, conforming with SQL 92 syntax. Failure to do the change will not\n    necessarily need to verbose errors at runtime since an expression like\n    WHERE 'a_column_name' = 'a_value' will now always evaluate to FALSE whereas\n    it would have been interpreted as WHERE \"a_column_name\" = 'a_value\" if\n    a_column_name was indeed a column name.\n\nF) RFC 53: OGR not-null constraints and default values\n\nLink: https://gdal.org/en/latest/development/rfc/rfc53_ogr_notnull_default.html\n\nAPI changes:\n    * OGRFieldDefn::SetDefault() now takes a const char* as argument.\n      OGRFieldDefn::GetDefaultRef() removed and replaced by GetDefault() that\n      returns a const char*\n\nG) RFC 54: Dataset transactions\n\nLink: https://gdal.org/en/latest/development/rfc/rfc54_dataset_transactions.html\n\nOnly API additions.\n\nBehavior changes:\n  * As described in the RFC, subtle behavior changes can be observed with the PG driver,\n    related to implicit transactions that were flushed before and are no longer now,\n    but this should hopefully be restricted to non-typical use cases. So some cases that \"worked\" before might\n    no longer work, but the new behavior should hopefully be more understandable.\n\n  * The PG and SQLite drivers could accept apparently nested calls to StartTransaction()\n    (at the layer level). This is no longer possible since they are now redirected\n    to dataset transactions, that explicitly do not support it.\n\nH) RFC 55: Refined SetFeature() and DeleteFeature() semantics\n\nLink: https://gdal.org/en/latest/development/rfc/rfc55_refined_setfeature_deletefeature_semantics.html\n\nBehavior changes:\n    * Drivers will now return OGRERR_NON_EXISTING_FEATURE when calling SetFeature()\n      or DeleteFeature() with a feature id that does not exist.\n\nI) RFC 56:\n\nLink: https://gdal.org/en/latest/development/rfc/rfc56_millisecond_precision.html\n\nAPI/ABI changes:\n\n  * OGRField.Date structure has now a Reserved field that must be set to 0 when\n    using the OGRFeature::SetField( int i, OGRField * puValue ) method.\n    The \"GByte Second\" field is now a \"float Second\".\n\n  * OGRFeature::SetField( int i, int nYear, int nMonth, int nDay,\n                          int nHour=0, int nMinute=0, float fSecond=0.f,\n                          int nTZFlag = 0 )\n    and the variant that take a const char* as first argument now accept a\n    floating-point number for seconds.\n\nAPI additions :\n\n    * OGRFeature::GetFieldAsDateTime( int i,\n                                     int *pnYear, int *pnMonth, int *pnDay,\n                                     int *pnHour, int *pnMinute, float *pfSecond,\n                                     int *pnTZFlag );\n\n    * OGR_F_GetFieldAsDateTimeEx() and OGR_F_SetFieldDateTimeEx() are added.\n\nDriver related changes:\n\n    * The following functions, mainly used by driver implementations, have\n      seen their signature change :\n\n        int CPL_DLL OGRParseXMLDateTime( const char* pszXMLDateTime,\n                                        OGRField* psField );\n        int CPL_DLL OGRParseRFC822DateTime( const char* pszRFC822DateTime,\n                                            OGRField* psField );\n        char CPL_DLL * OGRGetRFC822DateTime(const OGRField* psField);\n        char CPL_DLL * OGRGetXMLDateTime(const OGRField* psField);\n\nBehavior changes:\n\n    * OGRFeature::GetFieldAsString() will now output milliseconds if a DateTime/Time\n      field has such precision.\n    * Drivers will now output milliseconds if a DateTime/Time field has such precision.\n\nJ) RFC 57: 64-bit bucket count for histograms\n\nLink: https://gdal.org/en/latest/development/rfc/rfc57_histogram_64bit_count.html\n\nC++ API:\n  * GDALRasterBand::GetHistogram() and GDALRasterBand::SetDefaultHistogram() take a GUIntBig* instead of a int* for bucket counts.\n  * GDALRasterBand::GetDefaultHistogram() takes a GUIntBig** instead of a int** for bucket counts.\n  * GDALRasterBand::GetRasterSampleOverview() takes a GUIntBig instead of int.\n\nC API:\n  * GDALGetRasterHistogramEx(), GDALGetDefaultHistogramEx() and GDALSetDefaultHistogramEx() are added\n    and deprecate the old interfaces.\n  * GDALGetRasterSampleOverviewEx() is added.\n\nOut-of-tree drivers :\n  * See the virtual method API changes mentioned above in the C++ API paragraph.\n\nMIGRATION GUIDE FROM GDAL 1.10 to GDAL 1.11\n-------------------------------------------\n\nThis file documents backwards incompatible changes.\n\nC++ API:\n\n  * GDALRasterAttributeTable is now an abstract class.\n    See https://gdal.org/en/latest/development/rfc/rfc40_enhanced_rat_support.html\n    The functionality of GDAL 1.X GDALRasterAttributeTable is now in\n    GDALDefaultRasterAttributeTable.\n\nOGR drivers :\n\n  * Due to RFC 41, if a OGR driver calls SetGeomType(wkbNone) on a layer,\n    it will be impossible to affect geometries to features of that layer.\n    This worked before, although it was inconsistent, but it does no longer now.\n    In the development of RFC 41, the CSV and VRT drivers have been upgraded\n    to fix such errors.\n\nChanges that should likely not impact anybody :\n\n   * OGRGeometry::exportToGEOS() and OGRGeometryFactory::createFromGEOS() now\n     take a GEOSContextHandle_t argument ( GEOS >= 3.1.0 )\n\n   * OGRGeometryFactory::getGEOSGeometryFactory() has been removed.\n     This method returned NULL since 2006\n     ( https://github.com/OSGeo/gdal/commit/42d5fd976795b9c85aac2c4ffac12025e21697c1#diff-9b267dec2a69d6f56247a5525195973890780ce50ae8c9c809bf4818754f4e46L885 )\n"
        },
        {
          "name": "NEWS-1.x.md",
          "type": "blob",
          "size": 307.560546875,
          "content": "## GDAL/OGR 1.11.0 - General Changes\n\nBuild(Unix):\n * add Unix configure support for SOSI\n * remove pointers to old ver of ingres library files\n * add --with-libjson-c configure option to build against external libjson-c (>= 0.11) (#4676)\n * compilation fixes for iOS (#5197, #5198)\n * update to autoconf 2.69\n * add pkg-config gdal.pc (#3470)\n * configure for FileGDB: add explicit linking to libfgdbunixrtl (requires FileGDB SDK >= 1.2) (#5215); also try .dylib extension (#5221)\n * fix so that Java installs are found on the MAC to enable the MDB driver (#5267)\n * fix compilation with recent MySQL versions (5.6 for example) (#5284)\n * support --with-jp2mrsid with standalone Kakadu with MRSID v8 or later\n * Fix parallel build in Python bindings (#5346)\n * PCIDSK: don't link against libjpeg if configured --without-jpeg\n * Update configure script to pick up ECW JP2 SDK 5.1 (#5390)\n * add a 'make install' target for the Java bindings  (#5424)\n * add Vagrant configuration\n\nBuild(Windows):\n * add option to generate VC project for x64 on makegdal_gen.bat\n * nmake.opt: add WITH_PDB=1 option to optionally generate .pdb file on Release builds (#5420)\n * add support for building the OGR SOSI driver as a plugin (#3638)\n * add support for building the HDF4 driver as plugin (#5294)\n * add support for MrSID v9\n * Remove makegdalXX.bat generated files\n\n## GDAL 1.11.0 - Overview of Changes\n\nPort:\n * vsisubfile: fix Eof() behavior to be POSIX compliant, so that the shapefile reader can read the last feature when using /vsitar (#5093)\n * vsicache: fix for 32bit binaries when file size is over 2GB (#5170)\n * vsicache: add optional nChunkSize and nCacheSize parameters to VSICreateCachedFile()\n * vsicurl: add CPL_VSIL_CURL_USE_HEAD config option to disable use of CURL HEAD for other services like mapbox (likely lame python http implementations)\n * vsitar: avoid infinite loop in case of invalid .tar structure\n * vsizip: fix path separator in CPLFormFilename\n * vsizip: allow additional extensions listed in CPL_VSIL_ZIP_ALLOWED_EXTENSIONS config option.\n * vsizip: improve UTF-8 support of filenames inside ZIP file (#5361)\n * vsizip: fix ZIP64 support\n * vsigzip: reset EOF flag when doing a Seek() to be POSIX compliant\n * curl: add .netrc support\n * Windows CPLGetSymbol(): avoid dialog boxes to pop up when a DLL or one of its dependencies does not exist (#5211)\n * Add CPLOPrintf() and CPLOvPrintf() functions for easy CPLString formatting\n * CPLBase64DecodeInPlace() : fix to be robust to malformed base64 strings\n * CPLQuadTree: add CPLQuadTreeInsertWithBounds() where the pfnGetBounds is not needed.\n * CPLQuadTree: fix potential infinite recursion when inserting several points with identical coordinates in the mode with limited bucket size\n * Protect concurrent calls to setlocale() by a mutex (#5366)\n\nCore:\n * RFC 45: GDAL datasets and raster bands as virtual memory mapping\n * GDALRasterBand::GetHistogram(): ignore nodata values (#4750, #5289)\n * allow auto loading of drivers to be disabled via config option\n * PAM .aux.xml and VRT: serialize Z component of a GCP as 'Z' attribute,\n   for consistency, instead of GCPZ that could not be read back previously.\n   In reading code, try reading 'Z' and if not found try 'GCPZ' (#5326)\n * JPEG2000: Add GDALGeorefPamDataset and GDALJP2AbstractDataset classes and use\n             them in JP2KAK, JP2ECW, JP2OpenJPEG, JPEG2000 and MrSID drivers so that PAM\n             georeferencing consistently overrides internal georeferencing\n * GDALDataset::IRasterIO(): don't use BlockBasedRasterIO() when INTERLEAVE=PIXEL if the request band count is just 1\n * CopyWholeRaster(): make default GDAL_SWATH_SIZE to 1/4 of GDAL_CACHEMAX instead of hard-coded value of 10 MB\n * don't report empty RAT on GDALGetDefaultRAT() (#5232)\n * modify GDALGCPsToGeotransform() to do the regression in normalized coordinates to make the math more stable.\n * expose new GDALComposeGeoTransforms() function.\n * GDALDefaultOverviews::HaveMaskFile(): avoid fetching .ovr file\n * JPEG2000: Fix reading georeferencing from some JPEG2000 files with duplicated GeoTIFF JP2Box (#5249)\n * Cleanup raster block mutex (#5296)\n * Driver registration: move JPEG2000 (Jasper based) after MrSID JPEG2000 support\n\nAlgorithms:\n * warper: fix regression with lanczos resampling when yradius > xradius (#5058)\n * warper: Make GDALCreateGenImgProjTransformer2() and GDALCreateGenImgProjTransformer3() fail when the creation of the reprojection transformer fails\n * warper: Fix warping when input pixel size is too close to 0 (#5190)\n * warper: revise formula of cubic resampling kernel, and a few optimizations (#5209)\n * warper: added DST_METHOD and support for GCP and TPS dest\n * warper: add support for DST_METHOD=RPC\n * warper: fix mode and near resampling corner computation (#5311)\n * warper: GDALGenImgProjTransform(): don't set panSuccess[i] to 1 in the middle of the function, if an intermediate transform before has set the flag to 0\n * warper: fix cutline blending (#5343)\n * warper: Average/mode kernels: make them less sensitive to numerical precision issues (#5350)\n * warper: Average/mode kernels: avoid 'holes' when the source coordinates are in a reversed order from the target coordinates (#5433)\n * warper: provide prototypes and work around strict compiler requirements on some opencl platforms (#5400)\n * RPC: fix for computation of adfGTFromLL (#5395)\n * TPS: optimization for GCC x86_64 that make computation about twice faster with huge number of GCPs\n * TPS: when using Armadillo to solve the coefficients, use solve(A,B) instead of inv(A)xB to faster resolution\n * TPS: compute direct and inverse transformations in parallel when warping option NUM_THREADS or GDAL_NUM_THREADS config. options are set to > 1\n * Geoloc: fix wrong bilinear interpolation in GDALGeoLocTransform() (#5305)\n * Geoloc: fail transformation of coordinates that is located on a nodata place of the geoloc array\n * rasterize: preliminary support for MERGE_ALG=ADD for heatmaps\n * gdal_grid: Add AVX optimized version of GDALGridInverseDistanceToAPower2NoSmoothingNoSearch\n * fill_nodata: GDALFillNodata(): Fix use of uninitialized memory and integer overflows (#4010, #5203)\n * rpc: Fix out-of-bounds read in RPC dem cubic interpolation\n\nUtilities:\n * gdalinfo: add -listmdd and -mdd all options (#5275)\n * gdal_translate: add a -exponent option to be used with -scale\n * gdal_translate: fix output file naming scheme in gdal_translate -sds (#5119)\n * gdal_translate: fix logic in detection non-gray color table level (#5245)\n * gdal_translate: add a -norat option\n * gdal_translate: don't add 0.1 when -scale is used with a dstmin equal to dstmax (useful to generate a raster with uniform color, i.e. scaleRatio = 0)\n * gdal_translate: use floor() to compute image coordinates from world coordinates when specifying -projwin (useful when extracting from left or top of upper-left corner, which generate negative image coordinates) (#5367)\n * gdaltindex: remove annoying warning 'Warning 1: Field location of width 255 truncated to 254' (#5121)\n * gdaltindex: add -src_srs_name and -src_srs_format to go with MapServer RFC100; add also a -f and -lyr_name options to be able to create a non-shapefile tileindex\n * gdalwarp: Fix segfault where metadata values were not being nullchecked properly during conflict resolution (#5069)\n * gdalwarp: honor -s_srs when using cutline (#5081)\n * gdalwarp: copy nodata values from source to dest if -dstnodata is not given ; add option to not set dest nodata with -dstnodata None (#5087)\n * gdalwarp: do not return a non-zero exit status for warnings\n * gdalwarp: prevent from copying statistics metadata (#5319)\n * gdal_rasterize: set the progress bar to 100% even when there's nothing to do\n * gdal_grid: add support for different types of geometries (#5341)\n * gdal_grid: add  -z_increase and -z_multiply options\n * gdaldem: check that value of -z, -s, -az and -alt is numeric\n * gdalbuildvrt: validate values of -srcnodata and -vrtnodata arguments\n * gdal2tiles.py: Corrected OpenLayers code to reflect fix to geodetic resolution factor\n * gdal2tiles.py: add --tmscompatible flag so as to produce 2 tiles at zoom level 0 in geodetic profile\n * rgb2pct.py: Use python tempfile logic to avoid permissions issues with cwd (#5079)\n * gdal_edit.py: add a -ro option for drivers refusing to use the dataset in update-mode.\n * gdal_calc.py: add --allBands options (#5388)\n * Add vsipreload.cpp that can be compiled as a shared library that can be LD_PRELOAD'ed as an overload of libc to enable VSI Virtual FILE API to be used with binaries using regular libc for I/O\n * Add the wcs_virtds_params.py sample utility to be able to set the MapServer WCS virtual dataset parameters from a tileindex with rasters of mixed SRS (linked to MapServer RFC100)\n * gdalcompare.py: move to scripts\n * gdalcompare.py: ensure image dimensions match\n * gdal_ls.py: Fix issue with UTF-8 characters\n\nMulti driver changes:\n * JPEG2000 drivers: take into account PixelIsPoint in GeoJP2 boxes, and expose AREA_OR_POINT=Point (#5437)\n * JP2KAK, JP2ECW, JP2OpenJPEG, JPEG2000 CreateCopy(): take into account AREA_OR_POINT=Point if present to write GeoJP2 box (#5437)\n\nAAIGRID:\n * revert DECIMAL_PRECISION and add SIGNIFICANT_DIGITS to CreateCopy() (#3732)\n\nAIGRID:\n * Turn off errors that can be triggered if the info has no VAT table related with this coverage (#3031)\n\nBAG driver:\n * Recognise falseNorthing=10000000 as UTM South (#5152)\n\nDIMAP driver:\n * fix memleak in error-code path\n\nDTED driver:\n * Speed optimization to be more friendly with CPU cache in GDAL_DTED_SINGLE_BLOCK=YES mode\n\nECW driver:\n * fix crash in GDALDeregister_ECW() with ECW SDK 5 called from GDALDestroy() (#5214)\n * fix issue with ECW_CLEVER optimization when nPixelSpace != sizeof eBufDataType (#5262)\n\nEnvisat driver:\n * implement more reliable way of extracting GCPs from Meris tie-points (#5423)\n * add DEM corrections of TP-ADS products when present (#5423)\n * workaround dateline discontinuity in GCPs so they can be used with GDAL warping transformers (#5423)\n\nERS driver:\n * fix wrong interpretation of RegistrationCellX/RegistrationCellY (#2612, #3056, #5075)\n\nGeoRaster driver:\n * fix RPC support (#4038)\n * fix read error when reading from pyramids (#5076)\n * make regular table and secure file a default for RDT (#5127)\n * fix error when reading NBIT pyramid levels (#5199)\n * show the VAT as RAT (#5200)\n * fix reading and writing of statistics metadata (#5237)\n * add generate pyramid create options (#5288)\n * fix incorrect geotransform interpretation when there is no SRS (#5323)\n\nGRASS driver:\n * fix compilation issues for GRASS 7\n\nGRIB driver:\n * display temperature unit as deg Celsius in metadata (#3606)\n\nGTiff driver:\n * when compiling against internal libtiff, in read-only mode, optimization to\n   avoid fetching the whole Strip/TileCounts and Strip/TileOffsets arrays\n * add validation of source overview characteristics with COPY_SRC_OVERVIEWS (#5059)\n * convert invalid TIFFTAG_RESOLUTIONUNIT=0 to 1(Unknown) (#5069)\n * fix potential issues in gt_citation.cpp / CheckUTM()\n * upgrade internal libtiff to latest CVS\n * implement reading and writing of ICC profiles (#5246)\n * make SetColorInterpretation() round-trip with GetColorInterpretation();\n   read color interpretation from PAM if it exists (overrides internal tiff color interpretation);\n   set TIFFTAG_PHOTOMETRIC=PHOTOMETRIC_RGB if calling SetColorInterpretation() with R,G,B and no explicit PHOTOMETRIC creation option defined\n * gt_wkt_srs.cpp: fix compilation with external libgeotiff. The file is dependent of quite a few CPL stuff, don't try to pretend otherwise\n * implement GetVirtualMemAuto() for some formulations of TIFF files (RFC 45)\n * fix reading a single-strip TIFF file where the single strip is bigger than 2GB (32bit builds only) (#5403)\n * look for .tab file before .wld/.tfw\n\nGTX driver:\n * Add nodata support (#4660)\n\nHDF4 driver:\n * Skip \"SceneLineNumber\" table if present in the list of geolocation fields of\n   ASTER L1A dataset.\n\nHDF5 driver:\n * add support for ODIM H5 georeferencing method (#5032)\n * set SRS GEOGCS in all cases (reverts r25801 and closes #4160)\n * support HDF5 NATIVE_SCHAR type, subdatsets without PAM (#5088)\n * release all opened handles so the file is closed at dataset closing (#5103)\n * better deal with dimensions of CSK-L1A HDF5 subdatasets (#4227)\n * avoid segmentation fault when H5Sget_simple_extent_ndims() returns negative value (#5291)\n\nHFA driver:\n * add minimally tested support for u2 and u4 data in basedata\n * use direct binning for thematic layers and real instead of integer for values (#5066)\n * add a HFA_COMPRESS_OVR config option to select whether to create compressed overviews (#4866)\n * fix rewriting of statistics in existing HFA file where base data value is 8-bit (#5175)\n * implement re-writing existing histogram in HFA file, after raster editing (#5176)\n * avoid segfaults when creating a Imagine dataset with an invalid WKT (#5258)\n * expose color columns in RAT as Integer with values in range [0-255] instead of Real with values [0-1] (#5362)\n * report histogram column as GFU_PixelCount instead of GFU_Generic (#5359)\n * ensure histogram column written as float for HFA when using RAT API (#5382)\n\nIdrisi driver:\n * Improve coordinate system handling and min/max statistics (#4980)\n\nIRIS driver:\n * add height information on bands; rename dataset metadata item CAPPI_HEIGHT --> CAPPI_BOTTOM_HEIGHT (#5104)\n * IRIS: add support for two bytes data (#5431)\n\nJP2ECW driver:\n * fix problem with JP2 write with SDK v5\n * fix issue with ECW_CLEVER optimization when nPixelSpace != sizeof eBufDataType (#5262)\n * avoid writing dummy GeoJP2 box when source dataset has no georeferencing (#5306)\n\nJP2KAK driver:\n * preliminary support for Kakadu V7.x\n * fix creation of unsigned int16 with reversible compression (#4050)\n * on Windows, use VSI cache for I/O by default, instead Kakadu own I/O layer\n * remove extension from 12bit to 16bit (#5328)\n\nJP2OpenJPEG driver:\n * avoid 'Empty SOT marker detected: Psot=12.' warning to be repeated several times\n * add support for encoding GCPs in a GeoJP2 box (#5279)\n * avoid writing dummy GeoJP2 box when source dataset has no georeferencing (#5306)\n\nJPEG driver:\n * add autodetection of bitmasks that are msb ordered (#5102)\n * avoid memory leak when GDALOpen'ing() a JPEG through a http:// URL, and make it possible to access its overviews\n * return YCbCrK raw data for YCbCrK JPEG in GDAL_JPEG_TO_RGB = NO mode (instead of CMYK as before) (#5097)\n * implement reading and writing of ICC profiles (#5246)\n * internal libjpeg: apply patch for CVE-2013-6629\n * allow fallback to PAM to read GCPs\n * give priority to PAM GeoTransform if it exists and other source of geotransform (.wld, .tab) also exists (#5352)\n\nKMLSuperOverlay driver:\n * recognize an alternate structure for raster KMZ file made of a single doc.kml\n    and tiles whose name pattern is kml_image_L{level}_{j}_{i}.{png|jpg}\n * fix horrible speed performance in Open() (#5094)\n * fix crash at dataset closing and inability to read some big PNG tiles (#5154)\n * fix to generate files validating against OGC KML 2.2 schema\n * put Style into conformity with ATC 7\n * remove Region in root KML (ATC 41)\n * add NAME and DESCRIPTION creation options; read them back as metadata\n * add ALTITUDE and ALTITUDEMODE creation options\n * directly write into .kmz file (instead of in temporary location)\n * correctly write directories entry in .kmz file\n * add progress callback\n\nL1B driver:\n * report correct values for GCP (#2403)\n * report more GCPS than before\n * implement geolocation array\n * add fetching of record metadata in .csv file\n * add subdatasets with solar zenith angles, cloud coverage\n * recognize NOAA-9/14 datasets whose dataset name in TBM header is encoded in EBCDIC and not in ASCII (#2848)\n * support opening a few NOAA <= 9 datasets that have no dataset name in the TBM header\n\nLCP driver:\n * better handling of projections (#3255)\n * add CreateCopy() (#5172)\n\nMBTiles driver:\n * add write support\n * avoid failure when there's no tile at the center of the maximum zoom level (#5278)\n * add capability to open /vsicurl/https:// signed AWS S3 URLs\n\nMEM driver:\n * Create(): use calloc() instead of malloc()+memset() for faster creation of huge in-memory datasets\n\nNetCDF driver:\n * fix to read netcdf-4 files with UBYTE data (#5053)\n * fix reading large netcdf-4 files with chunking and DEFLATE compression\n * fix netcdf chunking when creating file with > 2 dims ; add CHUNKING creation option (#5082 )\n * fix duplicate nodata metadata when using CreateCopy() (#5084)\n * fix copying large metadata in netcdf driver (#5113)\n * fix netcdf geotransform detection (#5114)\n * fix netcdf driver irregular grids management (#5118 and #4513)\n * only call nc_close on a valid netcdf id when closing dataset\n * try and identify .grd (and .nc3) files in netcdf-4 format (#5291), so they are identified before the hdf5 driver\n\nNITF driver:\n * fix to support reading horizontal and/or vertical mono-block uncompressed images, even when the number of columns is <= 8192 (#3263)\n * update NITF Series list with new entries from MIL-STD-2411_1_CHG-3.pdf (#5353)\n * allow JP2KAK to be used as the JPEG2000 compression engine in the CreateCopy() case (#5386)\n\nPDF driver:\n * Avoid reporting a Poppler error as a GDAL error on some newer USGS GeoPDF files (#5201)\n * PDF writing: automatically adjust DPI in case the page dimension exceeds the 14400 maximum value (in user units) allowed by Acrobat (#5412)\n\nPDS driver:\n * Parse correctly MISSING_CONSTANT = 16#FF7FFFFB# as a IEEE754 single precision float expressed in hexadecimal; add support for ENCODING_TYPE = ZIP (data file compressed in a ZIP); recognize IMAGE_MAP_PROJECTION as an object included in UNCOMPRESSED_FILE object (#3939)\n\nPNG driver:\n * Implement reading and writing of ICC profiles (#5246)\n\nPostgisRaster driver:\n * Speed-up dataset opening (#5046).\n * Multi-tile multi-band caching added.\n * Smarter use of the information advertized in raster_columns view.\n * Avoid full table scan in situations without PKID/GIST indices.\n * Use of quadtree.\n\nRasdaman driver:\n * caching of tiles for datasets with more than one band (#5298)\n * connections are now kept for a whole session (#5298)\n * fixing connection-string regex (#5298)\n * fixing possible memory leaks (#5298)\n\nRasterlite driver:\n * fix resolution check typo in rasterlite driver\n\nRaw drivers:\n * implement GetVirtualMemAuto() (RFC 45)\n * IRasterIO(): add special behavior to avoid going to block based IO when the dataset has INTERLEAVE=PIXEL and is eligible to direct I/O access pattern\n * allow direct I/O access even if a small proportion of scanlines are loaded (improve QGIS use case where the overview display will load sparse scanlines, which would prevent direct I/O at full resolution afterwards)\n * fix optimized RasterIO() when doing sub-sampling with non standard buffer pixel offset (#5438)\n\nRMF driver:\n * fix decompression of 24-bit RMF DEM (#5268)\n\nRPFTOC driver:\n * fix potential crash on some datasets when selecting the color palette (#5345)\n\nSAGA driver:\n * add read/write support for .prj files (#5316)\n\nSRP driver:\n * read TRANSH01.THF file to establish subdatasets (#5297)\n\nVRT driver:\n * Implement non-linear scaling with a power function (addition of Exponent, SrcMin, SrcMax, DstMin, DstMax sub-elements in <ComplexSource>)\n * Preserve 64bit integer image offsets (#5086)\n * Make sure that VRTSourcedRasterBand::AddMaskBandSource() takes into account specified window (#5120)\n * Make GDALAutoCreateWarpedVRT() return NULL when GDALSuggestedWarpOutput() fails\n * VRTDataset::IRasterIO(): use source DatasetRasterIO even if band count is 1\n * VRTWarped: avoid setting up relative paths for things that aren't file-like\n * make relativeToVRT=1 work with NITF_IM:, NETCDF:, HDF5:, RASTERLITE:\n\nWCS driver:\n * ensure C locale is enforced before parsing floating point values\n\nWMS driver:\n * accept 'WMS:http://server/?SRS=EPSG:XXXX' syntax to select the preferred SRS in which to fetch layers\n * CPLHTTPFetchMulti(): avoid doing a timeout-only select when there are no file descriptor to wait on (can happen when doing a file:// URL)\n * allow cache location to be specified with GDAL_DEFAULT_WMS_CACHE_PATH configuration option if not provided in the XML (#4540)\n * Update to be able to understand slight changes in formatting of JSon output of ArcGIS mapserver protocol\n\nXYZ driver:\n * accept datasets that have missing values at beginning and/or end of lines, such as MNT250_L93_FRANCE.XYZ\n * fix detection when there are only integral values with comma field separator\n * reopen with 'rb' flags for Windows happyness\n\n## OGR 1.11.0 - Overview of Changes\n\nCore:\n * GEOS support: require GEOS >= 3.1.0 and use the _r API of GEOS to avoid issues with the global GEOS error handlers\n * exportToWkb(): ISO WKB generation with wkbVariant option (#5330)\n * geocoding: when getting several answers from server for a query, report geometries on second, third, etc.. feature, and not only first one (#5057)\n * allow auto loading of drivers to be disabled via config option\n * remove obsolete OGRGeometryFactory::getGEOSGeometryFactory()\n * OGRGeometryFactory::organizePolygons() in DEFAULT method: fix a case with 2 outer rings that are touching by the first point of the smallest one\n * OGRGeometryFactory::organizePolygons(): optimization in ONLY_CCW case\n * OGRGeometryFactory::organizePolygons(): Add an experimental mode : CCW_INNER_JUST_AFTER_CW_OUTER\n * OGRLineString::segmentize() : do not set 0 as z for interpolated points, but the z from the previous point\n * OGRLineString::setNumPoints(): add an optional argument to avoid zeroing the arrays\n * Add OGRLineString::setZ()\n * Add OGRLineString::Project() and OGRLineString::getSubline()\n * OGRPolygon: add stealExteriorRing() and stealInteriorRing(int iRing)\n * OGRLinearRing::isClockwise(): optimizations and make it work in a degenerated case when a vertex is used several times in the vertex list (#5342)\n * OGRLinearRing::isPointOnRingBoundary() : optimizations and take into account bTestEnvelope\n * Add OGR_G_SetPointCount and OGR_G_SetPoints functions to API C (#5357)\n * OGREnvelope3D::Contains(): fix incorrect test\n * Layer algebra: fix handling of method field mapping to output fields when output fields are precreated (#5089)\n * Layer algebra: when an error condition is skipped, call CPLErrorReset() (#5269)\n * OGRLayer::GetFeature(): make sure that the behavior is not influenced by\n   attribute or spatial filters in the generic implementation;\n   upgrade OGDI, PG, MySQL, MSSQLSpatial, OCI, SDE, PGeo, ODBC, WALK, IDB, SQLite and Ingres driver  (#5309)\n * introduce OGRLayer::FindFieldIndex() / OGR_L_FindFieldIndex() to lookup potentially laundered field names (RFC 42)\n * OGR SQL: upgrade to support RFC 41 (multiple geometry fields)\n * OGR SQL: more stricter checks\n * OGR SQL: make parsing error report a useful hint where the syntax error occurred\n * OGR SQL: fix thread-safety of swq_op_registrar::GetOperator() (#5196)\n * OGR SQL: support not explicitly specifying AS keyword for aliasing a column spec\n * OGR SQL: don't call CONCAT(a_column ...) or SUBSTR(a_column ...) as a_column\n * OGR SQL: validate that arguments of MAX, MIN, AVG, SUM, COUNT are columns and not any expression since this is not supported\n * OGR SQL: make AVG field definition a OFTReal\n * OGR SQL: implement MIN(), MAX() and AVG() on a date (#5333)\n * OGR SQL: fix SELECT * on a layer with a field that has a dot character (#5379)\n * SQL SQLITE dialect: Make it available to all OGR drivers that have a specialized ExecuteSQL() implementation\n\nOGRSpatialReference:\n * Upgrade to EPSG 8.2 database\n * identify LCC_2SP instead of LCC_1SP if lat_0==lat_1 and lat_2 is present (#5191)\n * add a variety of linear units to proj4 parsing (#5370)\n * Fix crash in CleanupESRIDatumMappingTable() if it is called twice (#5090)\n * fix order of AXIS and UNIT nodes in a VERT_CS node (#5105)\n * ecw_cs.wkt: add missing TOWGS84[-168,-60,320,0,0,0,0] to NTF datum (#5145)\n * fix OGRSpatialReference::importFromProj4() to work with non-C locale (#5147)\n * morph central_latitude to latitude_of_origin in morphFromESRI() (#3191)\n * OGRProj4CT: avoid using proj when the 2 projections are actually identical (#5188)\n * add sanity checks in OGR_SRSNode::importFromWkt() (#5193)\n * VERT_CS: when importing from proj.4 put AXIS node after UNIT; COMPD_CS: when importing from EPSG:x+y, set a more meaningful name for the COMPD_CS node\n * OGRSpatialReference::Validate() : in addition to hand-validation, use WKT grammar from OGC 01-009 CT\n * preserve authority when importing +init=auth_name:auth_code (e.g. +init=IGNF:LAMB93)\n\nUtilities:\n * ogrlineref: new utility to deal with linear geometries.\n * ogrinfo: upgrade to support RFC 41 (multiple geometry fields)\n * ogr2ogr: upgrade to support RFC 41 (multiple geometry fields)\n * ogr2ogr: bump default value for -gt from 200 to 20000 (#5391)\n * ogr2ogr: add -addfields option to add new fields found in a source layer into an existing layer ; add -unsetFieldWidth option to unset field with and precision; add -dim layer_dim option to force the coordinate dimension of geometries to match the one of the layer geometry type\n * ogr2ogr: Check that -t_srs is also specified when -s_srs is specified\n * ogr2ogr: add an explicit error message to report FID of feature that couldn't be inserted when CreateFeature() fails\n * ogr2ogr: make relaxed lookup optional and add a switch -relaxedFieldNameMatch to allow it (RFC 42)\n * ogr2ogr: make sure that the progress bar reaches 100% when converting OSM\n * ogr2ogr: make sure that target dataset is properly closed when a CreateFeature() fails (so that truncated shapefiles have their header file properly updated)\n * ogr_dispatch.py: Sample Python script to dispatch features into layers according to the value of some fields or the geometry type\n * ogrinfo.py: sync with ogrinfo (RFC 41)\n * ogr2ogr.py: port -nlt PROMOTE_TO_MULTI option from ogr2ogr.cpp (#5139)\n\nCSV driver:\n * avoid erroneously reset of file content when opening in update mode a file without header (#5161)\n * upgrade to support RFC 41 in read/write (multiple geometry fields)\n * allow backslash doublequote to load (#5318)\n\nDGN driver:\n * DGN writing: added polygon inner ring (holes) writing and MSLink writing (#5381)\n\nDXF driver:\n * fix writing of 25D linestring where z is not constant (#5210)\n * fix writing of POLYLINE objects (#5217, #5210)\n * accept reading files starting with a TABLES section (#5307)\n * support reading 3DFACE and SOLID (#5380) entities\n * fix an error when processing clockwise circle arc (#5182)\n * avoid building an invalid polygon when edges cannot be reassembled: turn it into a multilinestring\n * use CPLAtof() instead of atof() to avoid issues with locales\n * fix linear approximation of circular and elliptic arc in HATCH boundaries (#5182)\n\nDWG driver:\n * add support for reading AcDb3dPolyline (#5260)\n * fix linear approximation of circular and elliptic arc in HATCH boundaries (#5182)\n\nFileGDB driver:\n * implement IgnoreFields API to speed-up a bit the conversion of a sub-set of fields when there's a huge amount of them (e.g. Tiger database).\n * when writing <Length> of an attribute, use size in bytes (#5192)\n * implement ref counting of the FileGDB SDK API' Geodatabase* object to avoid issues on Linux 64bit with interleaved opening and closing of databases (#4270)\n * honour update flag to determine which operations are allowed or not\n * add a driver global mutex to protect all calls as the FileGDB API SDK is not thread-safe at all\n * add a COLUMN_TYPES layer creation option to override default column types; support reading/writing XML column types\n * optimize GetFeatureCount() and GetExtent() when there are filters set\n * set the default width for string fields to 65536.\n   The width can be configured with the FGDB_STRING_WIDTH configuration option\n * fix creation and writing of Binary fields; enable reading\n * add a CREATE_MULTIPATCH creation option\n\nFME driver:\n * fix Linux compilation\n\nGeoJSON driver:\n * recognize alternate formats such as the ones of https://code.google.com/p/election-maps/\n * add read support for TopoJSON\n * upgrade internal libjson-c to json-c 0.11 (#4676)\n * report integer values that are int64 as strings\n * add 3d support to esri geojson reader (#5219)\n * be less strict on looking for esri field type tag (#5219)\n * fix sometimes incorrect result (significant digit lost...) when using -lco COORDINATE_PRECISION=0\n * fix handling of huge coordinates when writing (#5377)\n\nGeoRSS driver:\n * advertise OLCCreateField capability\n\nGFT driver:\n * switch http to https for the oauth2 link to improve security\n\nGML driver:\n * add support for multiple geometry columns (RFC 41)\n * add support for reading Finnish National Land Survey Topographic data (MTK GML)\n * add support for support Finnish NLS cadastral data and Inspire cadastral data.\n * add support for Czech RUIAN VFR format\n * add data/gml_registry.xml file to associate feature types with schemas.\n * extend .gfs syntax to be able to fetch OGR fields from XML attributes.\n * extend .gfs syntax to support multiple geometry columns, and define a geometry property name\n * autodiscover all XML attributes as OGR fields when creating .gfs file if GML_ATTRIBUTES_TO_OGR_FIELDS is set to YES (#5418)\n * allow the <ElementPath> in .gfs to have several components that give the full XML path\n * fix writing of .xsd file to avoid fid/gml_id being written as regular fields (#5142)\n * fix writing of global srsName attribute on the global boundedBy.Envelope when all layers have same SRS (#5143)\n * support for writing .gml/.xsd with fields of type StringList, RealList, IntegerList and support for parsing such .xsd files\n * when writing .xsd for a datasource that has fields of type StringList, RealList or IntegerList, advertise SF-1 profile in the .XSD schema\n * recognize xsd:boolean in XSD parsing and map it to String (#5384)\n * add STRIP_PREFIX and WRITE_FEATURE_BOUNDED_BY dataset creation option to help minimizing the size of GML files\n * don't write top <gml:boundedBy> in GML files with multiple layers of different SRS\n * fix segfault when reading a GML file with huge coordinates (#5148)\n * avoid opening our own .xsd files as valid datasources (#5149)\n * make driver thread-safe with Xerces\n * open successfully GML datasources with 0 layers (#249, #5205)\n * fix tweaking of DescribeFeatureType requests\n * support reading WFS 2.0 GetFeature documents with wfs:FeatureCollection as a wfs:member of the top wfs:FeatureCollection\n * fix for crash on certain xlink:href with GML_SKIP_RESOLVE_ELEMS=NONE (#5417)\n * GML geometry: fix duplicated points in GML_FACE_HOLE_NEGATIVE=YES mode (TopoSurface) (#5230)\n * GML geometry: accept CompositeSurface as a child of surfaceMembers (#5369)\n * GML geometry: join multilinestrings to linestrings in rings\n * GML geometry: correctly deal with MultiSurface of Surface of PolygonPatch where a PolygonPatch has only interior ring(s) and no exterior ring (#5421)\n * GML geometry: accept formulations of 'MULTIPOINT EMPTY, MULTILINESTRING EMPTY, MULTIPOLYGON EMPTY and GEOMETRYCOLLECTION EMPTY that are valid GML 3 (and accepted by PostGIS)\n * GML geometry: make use of cs, ts and decimal attributes of (deprecated) gml:coordinates element\n * GML geometry: accept XML header and comments\n\nGPX driver:\n * advertise OLCCreateField capability\n\nILI driver:\n * add support for multiple geometry columns (RFC 41)\n * use IlisMeta model reader/writer instead of IOM\n * add layers for surface and area geometries\n\nKML driver:\n * output KML that validates the ogckml22.xsd schema by placing <Schema> elements under the <Document> level (#5068)\n * in writing mode, avoid defining an extending schema for the name and description fields (related to #5208)\n\nLIBKML driver:\n * various checks, fixes and improvements related to OGC KML 2.2 Abstract Test Suite\n * add support for reading <gx:Track> as a LINESTRING (#5095)\n * add support for writing and reading <snippet>\n * add support for writing atom:author, atom:link, phonenumber, Region,\n   ScreenOverlay, 3D model, StyleMap\n * add support for reading and generating Camera object\n * add layer creation options to generate a LookAt element at layer level\n * if UPDATE_TARGETHREF dataset creation option is defined, a NetworkLinkControl/Update document will be created\n * add dataset creation options to generate a NetworkLinkControl element\n * add dataset and layer creation options LISTSTYLE_ICON_HREF and LISTSTYLE_TYPE\n * add support for writing a NetworkLink\n * add support for creating PhotoOverlay objects\n * add support for creating BalloonStyle elements\n * offer LIBKML_USE_SIMPLEFIELD configuration option can be set to NO to use Data element instead of SimpleField\n * add layer creation option FOLDER to optionally write layers as Folder instead of Document\n * add dataset and layer creation options NAME, VISIBILITY, OPEN, SNIPPET and DESCRIPTION\n * workaround bugs in pretty serializers\n * when writing a .kmz file, put layers .kml docs into a layers/ subdirectory\n * fix mem leaks, and use after free in kml2FeatureDef() (#5240)\n * create document with default namespace set to http://www.opengis.net/kml/2.2\n * when writing, consider empty strings as unset (useful when converting from CSV)\n * don't write empty <Style /> element if OGR_STYLE is empty string\n * transform multigeometry with one single component into single geometry\n * create libkml/ subdirectory entry in .kmz\n\nMITAB driver:\n * support reading MIF file with no associated MID file (when MIF file advertises 'Columns 0') (#5141)\n\nMSSQLSpatial driver:\n * Fix MSSQL to be aware of removed tables (#5071)\n * Eliminate the per table server access when identifying the spatial reference (#5072)\n * Improve detection of geometry column with MSSQL select layer (#4318)\n * Fix for an issue with multicolumn primary keys (#5155)\n * Add support for handling non spatial data tables (#5155)\n * Fix creation of spatial_ref_sys and geometry_columns tables (#5339)\n\nMySQL:\n * robustness for huge coordinates in spatial filter\n\nNAS driver:\n * also accept XML files that have NAS-Operationen_optional.xsd in header\n * make driver thread-safe with Xerces\n * warn when geometry cannot be saved\n\nOCI driver:\n * fix make plugin option\n\nODBC driver:\n\nOSM driver:\n * support relations with more than 2000 members in a OSM XML file (#5055)\n * make the driver work with PBF files produced by osmconvert.\n * osmconf.ini: report the waterway attribute for the lines layer (#5056)\n * add an option in osmconf.ini to enable creating a 'all_tags' field, combining both fields specifically identified, and other tags\n * always use quoting of key/values in other_tags field (#5096)\n * use alternative implementation of FindNode() that is a bit more efficient when process is CPU-bound\n * fix issue with attribute filtering\n * avoid GetNextFeature() to be blocked in certain conditions in non-interleaved mode (#5404)\n\nPG driver:\n * upgrade to support RFC 41 in read/write (multiple geometry fields)\n * use ST_Estimated_Extent() on table layers if GetExtent() is called with force = 0 (#5427)\n * add a OGR_TRUNCATE configuration option (#5091)\n * let postgres name the constraints to avoid long name truncation resulting in conflicts (#5125)\n * map PG 'numeric' to OFTReal instead of OFTInteger\n * retrieve SRID from geometry value, if not found in geometry_columns (#5131)\n * fix ResolveSRID() when the current user has no select rights on geometry_columns table (#5131)\n * fix retrieval of SRID on a table without SRID constraint, and when the datasource is opened with ' tables=fake' (#5131)\n * robustness for huge coordinates in spatial filter\n * fix delete layer bug on PG 2.0 (#5349)\n * fix to be able to detect version of EntrepriseDB (#5375)\n * Fix UTF-8 encoded string length\n\nPGDump driver:\n * upgrade to support RFC 41 (multiple geometry fields)\n * fix error when inserting a string that has backslash in it with PostgreSQL >= 9.1 (#5160)\n\nREC driver:\n * fix runtime compatibility for Windows\n\nShapefile driver:\n * fix buffer overflow when creating a field of type Integer with a big width (#5135)\n * delete temporary .cpg file earlier in REPACK\n * fix leak of file descriptor in error code paths\n * speed optimizations when reading geometries from .shp (#5272)\n * add a 2GB_LIMIT=YES layer creation option (and SHAPE_2GB_LIMIT configuration option)\n * .sbn support: increase allowed max depth from 15 to 24 (#5383)\n\nSOSI driver:\n * fix memory leaks, and crashes\n * advertise OLCCreateField capability\n\nS57 driver:\n * make the driver thread-safe\n * remove use of MAX_CLASSES in favor of dynamic sizing (#5227)\n * fix GetFeature() on DSID layer\n\nSQLite/Spatialite driver:\n * Make SQLite SQL dialect compatible with multiple geometry fields (note: however, multiple geom fields is not yet supported by OGR SQLite table layers)\n * implement SetAttributeFilter() on SQL result layers, to directly inject it as a WHERE clause when possible\n * add the OGR_SQLITE_PRAGMA configuration option\n * Spatialite: correctly set proj4text field of spatial_ref_sys when inserting a new SRS in the spatial_ref_sys table (#5174)\n * Spatialite: fix insertion in spatial_ref_sys to avoid issues with non-numeric authority codes (auth_srid)\n * Spatialite: make creation of database much faster with spatialite 4.1 by using InitSpatialMetaData(1) (#5270)\n * Spatialite: use thread-safe initialization for spatialite >= 4.1.2\n * avoid Spatialite views to emit (hidden) errors that cause troubles to MapServer OGR input driver (#5060)\n * attempt to make VirtualOGR (and thus sqlite dialect) work even with a libsqlite3 compiled with SQLITE_OMIT_LOAD_EXTENSION (on Unix only)\n * add warning when calling CreateField() with a field name that is 'ROWID' since it can cause corrupted spatial index\n * serialize StringList as non-truncated strings\n * detection of DateTime/Date/Time column type on the result of a max() / min() function\n * ensure fields of type DateTime/Date/Time are properly recognized if the table is empty (#5426)\n\nVFK driver:\n * fix memory leak\n * change VFK header check (first line starts with '&H')\n * implement OGR_VFK_DB_DELETE configuration option\n * read all data blocks by default\n * fix GetFeatureCount()\n * don't use existing internal db when it's older then original vfk file\n\nVRT driver:\n * add support for multiple geometry columns in OGRVRTLayer, OGRVRTUnionLayer and OGRVRTWarpedLayer (RFC 41)\n * add validation of OGR VRT document against the schema (if libXML2 available);\n   can be disabled by setting GDAL_XML_VALIDATION configuration option to NO\n * make relativeToVRT=1 work with CSV:filename or GPSBABEL:driver:filename (#5419)\n\nWFS driver:\n * WFS 2.0: be a good citizen and send TYPENAMES (with a S) for GetFeature request (but still TYPENAME for DescribeFeatureType)\n * accept TYPENAME(S) in URL with characters escaped by '%' (#5354)\n\nXLS driver:\n * don't use sheetId attribute from workbook.xml to link a sheet name to its filename. The first sheet is sheet1.xml, etc...\n\nXPlane driver:\n * accept V1000 APT files\n\n## SWIG Language Bindings\n\nAll bindings:\n * include constraints.i in gdal.i so that NONNULL constraints are really applied\n * add Feature.SetFieldBinaryFromHexString()\n * add SpatialReference.EPSGTreatsAsNorthingEasting (#5385)\n * map OGR_L_GetStyleTable(), OGR_L_SetStyleTable(), OGR_DS_GetStyleTable(), OGR_DS_SetStyleTable()\n * Add OGR_STBL_AddStyle() and map all OGR_STBL_ C methods to SWIG\n\nCSharp bindings:\n * Fix handling UTF8 strings in GDAL C# (#4971)\n * Add C# typemaps for RFC-39 functions (#5264)\n * Fix typo in OGRLayerAlg.cs (#5264)\n * Add missing typemaps for C# (#5265)\n\nJava bindings:\n * run 'make ANDROID=yes' in swig/java to generate SWIG bindings that compile for Android (#5107)\n * fix linking issue that is encountered in non libtool builds with g++ 4.6\n * add multireadtest utility\n * respect JAVA_HOME set via configure\n\nPerl bindings:\n * ColorTable method of ColorTable class was documented but ColorEntries was\n   implemented. Implemented but deprecated ColorEntries.\n\nPython bindings:\n * fix ref-counting of callable passed to gdal.PushErrorHandler() that could cause segfaults (#5186)\n * make gdal_array.NumericTypeCodeToGDALTypeCode accept numpy dtype arguments (#5223)\n * add default xoff,yoff,xsize,ysize values to ReadRaster calls\n * make ogr.CreateGeometryFromWkt() and SpatialReference.ImportFromWkt() properly validate their argument (#5302)\n\n# GDAL/OGR 1.10.0 Release Notes (r23656 to r25905)\n\n## In a nutshell...\n\n * New GDAL drivers:\n   - ARG: read/write support for ARG datasets (#4591)\n   - CTable2: read/write support for CTable2 datum grid shift format\n   - DDS: write-only support for DirectDraw Surface format (#5017)\n   - IRIS: read support for products generated by the IRIS weather radar software (#4854)\n   - MAP:  read OziExplorer .map files (#3380)\n   - MBTiles: read-only support for MBTiles rasters (needs libsqlite3)\n * New OGR drivers:\n   - ElasticSearch: write-only support to write into ElasticSearch databases (needs libcurl)\n   - ODS : read/write support for OpenOffice .ods (Open Document Spreadsheets) (needs libexpat)\n   - OSM : read-only support for .osm / .pbf OpenStreetMap files\n   - PDF: read/write support for vector/structured PDF files\n   - XLSX: read/write support for MS Excel 2007 and later Open Office XML .xlsx spreadsheets (needs libexpat)\n * RFC 39: OGR Layer algebra methods : http://trac.osgeo.org/gdal/wiki/rfc39_ogr_layer_algebra\n * Add a SQL SQLite dialect : http://gdal.org/ogr/ogr_sql_sqlite.html\n * Make GDAL loadable as a SQLite3 extension (named VirtualOGR) (#4782)\n * /vsicurl_streaming/: new virtual file system handler designed to read in streaming mode dynamically generated files\n * GDAL API_PROXY mechanism to run GDAL drivers in a separate process: http://gdal.org/gdal_api_proxy.html\n * Significantly improved drivers : PDF, SQLite, JP2OpenJPEG\n * Add a geocoding client : http://gdal.org/ogr/ogr__geocoding_8h.html\n * Upgrade to EPSG 8.0 database\n\n## New installed files\n\n * data/ozi_datum.csv\n * data/ozi_ellips.csv\n * data/osmconf.ini\n * include/cpl_progress.h\n * include/cpl_spawn.h\n * bin/gdalserver[.exe]\n\n## Backward compatibility issues\n\nDue to the 2-digit number '10' in GDAL 1.10, the GDAL_VERSION_NUM macro has been changed.\nThe new advised way of testing the GDAL version number (for GDAL 1.10 or later) at compilation time is :\n\n#ifdef GDAL_COMPUTE_VERSION /* only available in GDAL 1.10 or later */\n#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(1,10,0)\n///\n#endif\n#endif\n\nTesting of previous versions is of course unchanged.\n\n## GDAL/OGR 1.10.0 - General Changes\n\nBuild(Unix):\n * New optional dependencies : libpcre (for regular expressions support in SQLite), libxml2 (validation of GML files)\n * --with-python: make it work with python3, and also accept path to python binary as argument of --with-python (#4725)\n * Use nc-config to detect netcdf compilation and linking parameters (#4424)\n * Add frmts/vrt to CONFIG_CFLAGS for development version of gdal-config (needed for postgis 2.0 compilation)\n * Fix compilation failure with iconv on FreeBSD (#4525)\n * Make FileGDBAPI detection work with FileGDBAPI v1.1 and v1.2 (#4570)\n * Fix build on Gentoo with its custom zlib 1.2.6 with the OF macro removed\n * Mark man target as phony (#4629)\n * Add guess for the directory where to find openjdk on Ubuntu 12.04 (#4643)\n * Look for geotiff headers in /usr/include/libgeotiff too (#4706)\n * For install target, create gdalplugins subdirectory in $(DESTDIR)$(INST_LIB)/ (Unix, except MacOSX)\n * Better detection of OpenCL headers and library (#4665)\n * Changed libdap test to use dap-config to detect version when possible\n\nBuild(Windows):\n * (Preliminary) support to build INGRES\n * Make CPLGetErrorHandlerUserData() exported\n * Make OGDI include path overridable (to match OSGeo4W's default location)\n * Build and install plugins\n\n## GDAL 1.10.0 - Overview of Changes\n\nPort:\n * CPL Thread API: add condition API, modeled on POSIX pthread_cond_ API\n * Add CPLGetNumCPUs()\n * Deserialize various forms of textual representation for positive/negative infinity\n * Add routine to validate a XML file against its XSD schema (needs libxml2); 'optimize' it for GML files\n * CPLRecodeStub(): for Windows, provide an implementation of UTF8 <--> CPxxx conversions using Windows API\n * Make VSIFileManager::Get() thread-safe\n * Fix thread-safety of CPLOpenShared() (#4848)\n * Add CPLZLibDeflate() and CPLZLibInflate()\n * Add API for OAuth2 authentication protocol.\n * Curl: allows setting the CURLOPT_PROXYAUTH setting through GDAL_PROXY_AUTH=BASIC/NTLM/DIGEST/ANY,\n   allow setting CURLOPT_HTTPAUTH through GDAL_HTTP_AUTH=BASIC/NTLM/GSSNEGOTIATE/ANY (#4998)\n * /vsicurl/ and /vsicurl_streaming/ : make it possible to cache the files in RAM with VSI_CACHE = TRUE\n * /vsizip/: fix handling of Eof() that could cause missed last feature(s) of zipped shapefiles (#4748)\n\nCore:\n * Add a DMD_SUBDATASETS driver metadata, and advertise it in relevant drivers (#4902)\n * Fix statistics computation when nodata value is +/- infinity (#4506)\n * GDALNoDataMaskBand: implement IRasterIO() for an optimization in common use case (#4488)\n * GDALVersionInfo(): add BUILD_INFO version string\n * GMLJP2: Fix bad interpretation when Lat/Long (#4657)\n * Set nodata value when creating external overviews so that AVERAGE algorithm works as expected (#4679)\n * EXIFExtractMetadata() moved to gcore/gdalexif.cpp to make it usable for other drivers\n * Fix infinite recursion in GDALOpen() (#4835)\n * GDALRasterBand::IRasterIO() : optimize downsampling/upsampling code path\n * C API: make GDALSetDefaultRAT() accept a NULL RAT. All drivers are ready for that now.\n * GDALRasterBand::GetDefaultHistogram(): change how min and max bounds are computed in the non GDT_Byte case\n * GDALDataset::BlockBasedFlushCache(): fix crash when band has sub-blocking\n\nAlgorithms:\n * GSOC Image Correlator work (preliminary state)\n * Warp: divide Lanczos resampling time by at least a factor of 4.\n * Warp: add NUM_THREADS warping option to set the number of threads to use to parallelize the computation part of the warping\n * Warp: do not stop collecting chunks to operate on just because some subchunks fail (#4795)\n * Warp: add mode and average resampling methods (#5049)\n * OpenCL warper: handle errors in set_supported_formats(), fix memory leaks in error code paths, add detection of Intel OpenCL (by the way, Intel OpenCL seems to work properly only with a Float32 working data type)\n * OpenCL warper: fix segmentation fault related to source/destination validity masks (#4840)\n * Geoloc: do not trust pabSuccess in geolocation transformer (#4794)\n * Geoloc: add bilinear interpolation of coordinates from backmap (#4907)\n * Geoloc: add GDALTransformGeolocations() and SWIG binding\n * Add nearest neighbor and cubic interpolation of DEM in GDALRPCTransform (#3634).\n   User can set RPC_DEMINTERPOLATION to near, bilinear or cubic to interpolate of input DEM file which set in RPC_DEM. The default interpolation is bilinear.\n * gdal_rasterize: fix problem identifying some connected-8 polygons (#4647)\n * gdal_grid: speed-up dramatically nearest neighbour search (with radius1 == radius2) by using a search quad tree\n * gdal_grid: parallelize processing by specifying the GDAL_NUM_THREADS configuration option (default to ALL_CPUS)\n * gdal_grid: for 'invdist' algorithm with default parameters, use SSE optimized version if available (at compile and runtime). Can be disabled with GDAL_USE_SSE=NO\n\nUtilities:\n * General: make usage message more self-explanatory in case of bad option (#4973)\n * gdalmove.py: New application for \"warping\" an image by just updating its SRS and geotransform.\n * gdal_edit.py: promote it as an 'official' tool (#4963)\n * gdalwarp: add \"-r average\" and \"-r mode\" resampling methods (#5049)\n * gdalwarp: copy metadata and band information from first source dataset and detect for conflicting values, new options -nomd and -cvmd (#3898)\n * gdalwarp: optimization when (-tr and -te) or (-ts and -te) are specified (#4804)\n * gdalwarp: assign color interpretation of source bands to target dataset, in the case of target VRT (#4462)\n * gdalwarp: add -setci option to set the color interpretation of the bands of the target dataset from the source dataset\n * gdal_translate: accept -srcwin or -projwin values that fall partially or completely outside the source raster extent. Introduce -epo and -eco options to error out in those situations.\n * gdallocationinfo: add a -overview overview_level option to specify an overview level, instead of the base band\n * gdalsrsinfo: try to open with GDAL and OGR even if argument is not a file (#4493)\n * gdaldem: add a -combined option to the hillshade mode to compute combined hillshading (#4753)\n * gdaldem: fix color-relief output with driver that has only CreateCopy() capability, and when the source block dimensions are not multiple of the raster dimension (#4764)\n * gdaltindex: add -t_srs option, to transform all input source bounds to same SRS (#4773)\n * gdalbuildvrt: add -a_srs option\n * gdalbuildvrt: add -sd option to select subdataset by its number\n * gdalbuildvrt: add a -b flag (#4992)\n * gdalgrid: increase working buffer of gdal_grid binary to 16 MB\n * gdal_retile.py: Don't pass creation options to the MEM driver used for generating temporary datasets (#4532)\n * gdal_edit.py: make -a_srs option work properly by expanding the user input to WKT; support -a_srs ''\n * gdal_edit.py: add support for -gcp option\n * gdal2tiles.py: make KML output conformant with KML 2.2 (#4536)\n * gdal2tiles.py: OL 2.12 support (#4742)\n * gdal_polygonize.py: add -8 option to select 8 connectedness (#4655)\n * gdal_merge.py, gdalident.py: remove using of glob() API\n * gdal2xyz.py: fix output of -csv mode with multi-band raster\n * gdal_contour / gdal_rasterize / gdal_translate: accept numeric values in scientific format.\n * crs2crs2grid.py: New sample Python script\n * gdalcompare.py: New sample Python scrip to compare GDAL datasets\n * gdal_calc.py: add --co creation option flag (#4964)\n * gdaladdo: add a -b flag\n * pct2rgb.py: deal with color tables with more than 256 entries (#4905)\n\nMulti driver changes:\n * Add support for reading .j2w, .jp2w and .wld files for JP2ECW, JP2MrSID, JP2OPENJPEG and JPEG2000 drivers (#4651)\n\nAAIGrid:\n * Change float format string for AAIGrid to prevent pointless padding/decimals (#3732)\n\nACE2 driver:\n * Fix typo that prevented dataset to be opened with explicit /vsigzip/ (#4460)\n\nADRG driver:\n * Various fixes when opening ill-formed datasets.\n\nBAG driver:\n * Fix serious problems with tiled images, particularly when not multiples of tile size (#4548)\n * Added capture of dateTime attribute\n * Support WKT (with Esri style VERTCS) spatial reference\n * Allow WGS84 spatial reference\n * Include compression method in metadata.\n\nBT driver:\n * Fixes for huge files (>2GB) support (#4765)\n\nCEOS2 driver:\n * Add various radarsat-1 related metadata fields (#4996)\n\nDIMAP driver:\n * Check signature in METADATA.DIM, not just file existence\n * Fixed DIMAP2 driver to get the proper absolute path in a specific case\n\nDTED driver:\n * Write the updated value of the partial cell indicator to the file (#4687)\n * Honour 'Longitude count' field of Data Record to deal properly with files with missing columns at the left and/or right of the file (#4711)\n\nECW driver:\n * Add support for ECW SDK 5.0\n * Improve picking performance on large datasets (#4790)\n * Use ECW SDK to do super-sampling for SDK >= 4.X\n * Expose 256x256 block dimension instead of scanline\n * Workaround a ECW SDK 3.3 bug, when doing a RasterIO() with the total number of bands, but not in the 1,2,..n order (#4234)\n * Add heuristics to detect successive band reading pattern (such as done by QGIS). Beneficial for ECWP\n\nENVI driver:\n * Add support for writing RPCs and GCPs\n * Add ability to access all ENVI header fields to the ENVI reader (#4735)\n * Write in the ENVI header metadata found in the ENVI metadata domain (#4957)\n * Fix reading of .sta file on 64bit Linux\n * Assume BSQ interleaving when 'interleave' keyword missing or unknown\n * Fix category names writing\n * Remove 'envi fft result' from the blacklist\n * Report wavelength and wavelength_units as band metadata (#3682)\n\nENVISAT driver:\n * Ported to VSI*L\n\nGeoRaster driver:\n * Add spatialExtent and extentSRID create-options (#4529)\n * Fix JPEG quality not updated on metadata (#4552)\n * Search for RDT as regular table\n * Add support for RPC (#4038)\n\nGIF driver:\n * Add support for giflib 4.2.0 (#4675) and giflib 5.0\n\nGMT driver:\n * Make GMT driver thread-safe by adding a global mutex (since the netcdf library isn't thread-safe)\n\nGTiff driver:\n * Internal libtiff and libgeotiff refreshed from upstream\n * Use EXTRASAMPLE_UNASSALPHA by default (behavior change w.r.t. previous GDAL versions) (#4733)\n * Add support for reading GeoEye *.pvl metadata files (#4465)\n * Lossless CreateCopy'ing() from a JPEG dataset\n * Read EXIF metadata in the EXIF metadata domain\n * Ensure that rowsperstrip is never larger than ysize (#4468)\n * Fix writing of RGBA pixel-interleaved JPEG-compressed TIFF (#4732)\n * Set color interpretation to GCI_PaletteIndex after calling SetColorTable() (#4547)\n * Conversion for 8-bit unpacked CMYK (PHOTOMETRIC_SEPARATED) to RGBA.\n * Maximize EPSG compatibility where PCS is defined (#4607)\n * Ensure that unusual units with an authority node are saved nicely (like EPSG:2066)\n * Add CT_HotineObliqueMercatorAzimuthCenter support\n * Fix PolarStereographic / 9829 support\n * Make sure that GetMetadata() initializes the value of GDALMD_AREA_OR_POINT item, if not already done (#4691)\n * When building overviews, if the image has already an internal mask, then build internal overviews for the mask implicitly\n * Better handling of SetMetadata(a_string) (#4816)\n * Use GTIFAllocDefn/GTIFFreeDefn with libgeotiff 1.4.1+\n * Add support for GEO_NORMALIZE_DISABLE_TOWGS84 (#3309)\n * Improve handling of description and offset/scale without reverting to .aux.xml\n * Workaround defects in libtiff 3.X when generating several overview levels at the same time\n * Special case where the EGM96 Vertical Datum code is misused as a Vertical CS code (#4922)\n * Support unsetting geotiff tags when calling SetGeoTransform([0,1,0,0,0,1]) and SetProjection('')\n * Rework how CSV files are searched w.r.t libgeotiff (#4994)\n\nGRIB driver:\n * Report nodata value (#4433)\n * Fix fgetc signed/unsigned problem for Grib format VSI*L reader (#4603)\n * Avoid caching more than 100 MB in case of dataset with many bands (#4682)\n * uses meshLat as the latitude_of_origin parameter of LCC projection (#4807)\n\nGSAG driver:\n * Fix hangs when reading truncated dataset (#4889)\n\nGS7BG driver:\n * Implement Create() and CreateCopy() (#4707)\n\nGTX driver:\n * Support reading old GTX files where datatype was Float64\n\nGXF driver:\n * Avoid having big buffer on stack (#4852)\n * Avoid locale floating point parsing problems (similar to r24367).\n * Implement continued lines mechanism (#4873)\n * Fix various vulnerabilities / DoS\n\nHDF4 driver:\n * Add ability to increase the maximum number of opened HDF4 files\n * Unix build: avoid issue with system hdfeos library\n * Ensure we do not try to use the grid tile api for non-tilesized chunks (#4672)\n * Preserve more Float32 attribute precision\n * Import HDF USGS GCTP angular parameters as radians\n * Restore conventional add_offset interpretation (#4891)\n * Be more careful about missing dimensions (#4900)\n * Make HDF4 driver thread-safe by adding a global mutex (since the HDF4 library isn't thread-safe)\n * Search for \"coremetadata\" attribute name instead of \"coremetadata.\"\n\nHDF5 driver:\n * Add support for COSMO-SkyMed metadata (#4160)\n\nHFA driver:\n * Added BASEDATA support for EPT_u1 (#4537)\n * Fix crash on dataset closing when .ige file header is corrupted (#4596)\n * .aux overviews: avoid destroying existing overviews when asking twice in a row to build overviews for exactly the same overview levels (#4831)\n * Fix sizing of RAT string column maxwidth to include null char (#4867)\n * Fix segfault in HFAAuxBuildOverviews with selected bands (#4976)\n\nINGR driver:\n * do not reduce tile size to image size (#4856)\n * Fix value inversion when reading type 9 (bitonal RLE) untiled files (#5030)\n * fix slowness and incorrect random reading with RLE datasets (#4965)\n * Enable reading bitonal rle files wider than 22784 (0x5900) pixels (#5030)\n * Add RESOLUTION metadata/option to read/write DPI (#5030)\n * Add write support for .rle (bitonal rle files) to test the above (#5030)\n\nISIS3 driver:\n * Ensure scaleFactor defaults to 1 (#4499)\n\nJP2ECW driver:\n * Workaround conflict between ECW SDK deinitialization and GDAL deinitialization, as shown by gdaljp2ecw tests of imageio-ext (#5024)\n * Promote 1bit alpha band of a RGBA dataset to 8 bits to improve general user experience (can be turned off by setting GDAL_ECW_PROMOTE_1BIT_ALPHA_AS_8BIT to NO)\n\nJP2KAK driver:\n * Capture Corder in metadata for user convenience\n * Fix writing of resolution box where the xresolution value was written instead of the yresolution one\n * Skip bands that have different data type when reading multiple bands in IReadBlock() (#4638)\n * Default to less than 250000 lines per tile (#5034)\n\nJP2OpenJPEG driver:\n * Require OpenJPEG 2.0.0 now\n * Use several decoding threads when processing multi-tiles IRasterIO() requests\n * Add support for writing georeferencing\n * Read and write JP2 Res box and translate it from/to TIFFTAG_XRESOLUTION, TIFFTAG_YRESOLUTION and TIFFTAG_RESOLUTIONUNIT metadata items\n * Promote 1bit alpha band of a RGBA dataset to 8 bits to improve general user experience (can be turned off by setting JP2OPENJPEG_PROMOTE_1BIT_ALPHA_AS_8BIT to NO)\n\nJPEG driver:\n * When there are no external overviews built, take advantage of the nature of JPEG compression to expose overviews of level 2, 4 and 8\n * Don't return junk content when requesting xml:XMP but no XMP metadata is present (#4593)\n * add a INTERNAL_MASK creation option to be able to disable appending the ZLib mask if not needed\n * add support for creating a JPEG loss-less file starting with the recent IJG libjpeg v9\n   (with -co ARITHMETIC=yes -co BLOCK=1 -co COLOR_TRANSFORM=RGB1)\n\nJPEG2000 driver:\n * do not accept by default source bands of type different from Byte, Int16 or UInt16 since they seem to cause crashes in libjasper.\n   This can be overridden, at your own risk, by setting JPEG2000_FORCE_CREATION configuration option to YES (#5002)\n\nKMLSuperOverlay driver:\n * Add read support\n * Remove bogus code that limited generation to one zoom level (#4527)\n * Set minLodPixels to 1 for zoom level 0 (#4721)\n * Fix bad placing of tiles with raster of the extent of a country or more (#4834)\n * Add FIX_ANTIMERIDIAN creation option (#4528)\n\nL1B driver:\n * Add support for NOAA19, METOP-B and guess for METOP-C (#2352)\n\nMG4Lidar driver:\n * Add UTF-8 filename support under Windows (#4612)\n\nNetCDF driver:\n * Fix for gdal_rasterize (#4432)\n * Enable PAM for band histogram and statistics (#4244)\n * Add longitude_of_prime_meridian value to PRIMEM\n * Fix SetNoDataValue() - do not update when already set to new value (#4484)\n * Convert longitude values in [180,360] interval to [-180,180] (#4512) - override with config option GDAL_NETCDF_CENTERLONG_180=0\n * Support 2D GEOLOCATION arrays when a projected variable has coordinates attribute and supporting long/lat arrays (#4513)\n * Ignore coordinate and bounds variables (CF sections 5.2, 5.6 and 7.1) as raster bands, but expose them as subdatasets - this allows opening files with projected SRS (or dimension bounds) directly, without specifying the variable as a subdataset\n * Better support for Gaussian grids - store original latitude values in special Y_VALUES geolocation metadata item and use it for netcdf export (#4514)\n * Write multi-dimensional variables to a single variable (not one for each unrolled band) in CreateCopy() (#2581)\n * Fix handling of km units in netcdf driver and importFromProj4() (#4769)\n * Fix detection of 1 and 2 pixel width/height netcdf datasets (#4874)\n * Fix subdataset data type info (#4932)\n * Make netCDF driver thread-safe by adding a global mutex (since the netcdf library isn't thread-safe)\n\nNITF driver:\n * nitf_spec.xml: add definition of ACFTB and AIMIDB TREs\n * Don't escape DESDATA for sizes >10mb (#4803)\n * Fix NITF creation when both BLOCKA and TRE are passed in (#4958)\n * Allow reading JPEG-in-NITF where JPEG stream dimensions are larger than NITF dimensions (#5001)\n * Support for cases with 2 LUTs\n\nNorthwood driver:\n * Fixes for huge files (>2GB) support (#4565, #4645)\n * NWT_GRD: don't advertise scale/offset as they are transparently applied in IReadBlock() (#5839).\n\nPDF driver:\n * Add CreateCopy() support\n * Add update support for georeferencing and metadata\n * Add support for selective layer rendering (only with poppler backend)\n * Add GDAL_PDF_BANDS = 3 or 4 config option to select RGB or RGBA rendering; add GDAL_PDF_RENDERING_OPTIONS config option to enable selective feature rendering by combining VECTOR, BITMAP and TEXT values\n * Fix parsing of some georeferencing (r24022)\n * Recognized ISO georeferencing set at the image level (and not at the page level); expose such images as subdatasets (#4695)\n * Support Poppler 0.20 (and for current Poppler development version 0.23/0.24)\n * UTF-16 support\n * Report registration points as GCPs (OGC Best Practice)\n * Allow building driver with both Poppler and Podofo (testing purposes mostly)\n * Fix crashes on some PDF files with poppler >= 0.17.0 (#4520)\n * Improve rounding of raster dimensions (#4775)\n * With podofo, avoid launching the 'pdftoppm' process in a visible console on Windows (#4864)\n * Select neatline whose description is 'Map Layers' when it is found, to keep the best neatline for USGS PDF Topo\n   and add GDAL_PDF_NEATLINE config. option to override that default value.\n * Improve detection of DPI for USGS Topo PDF to get the maximum raster quality (will increase\n   reported dataset height and width)\n * Extract USGS Topo PDF embedded metadata in the EMBEDDED_METADATA domain\n\nPNG driver:\n * Internal libpng upgraded to 1.2.50\n\nPostgisRaster driver:\n * Implement CreateCopy and Delete (#4530)\n * Supports reading of tiled raster with irregular blocking and irregular pixel size\n * Cache postgres db connection.\n * Use PG environment variables as fallback when settings are not provided in the connection string. (#4533).\n * Do not report nodata value when there is none (#4414)\n * Removed dependency on the 'rid' column.\n * Fix to make SQL queries with un-rounded floating point string representations. (#4736)\n * Fix overview support\n\nRasterlite driver:\n * Support all resampling methods for internal overviews (#4740)\n * Fix overview support with multi-table datasets (#4568, #4737)\n * Add RASTERLITE_OVR_OPTIONS configuration option to specify options for the tiles of the internal overviews\n\nRMF driver:\n * Fix incorrect zone number detection for Transverse Mercator (#4766)\n\nRPFTOC driver:\n * Relax SanityCheckOK() to avoid rejecting valid CIB datasets (#4791)\n * Avoid selecting a color table that is full black\n * Add missing NITF series code 'TF' for 'TFC' (and fix typo in some other long descriptions) (#4776)\n\nRS2 driver:\n * added various metadata fields (#4997)\n\nSDTS driver:\n * Various fixes when opening ill-formed datasets.\n\nSRP driver:\n * Various fixes when opening ill-formed datasets.\n\nTIL driver:\n * Fix TIL driver using overview (#3482)\n * Add set projection and geotransformation for TILDataset\n\nTSX driver:\n * Fix crashes in Identify() with certain filenames, and the file is empty or doesn't exist (#4622)\n\nVRT driver:\n * VRTWarpedDataset: add INIT_DEST=0 if no INIT_DEST specified (#4571)\n * VRTFilteredSource: fix RasterIO() to take into account source and dest windows (#4616)\n * avoid crashes due to int overflow when dealing with requests filling a buffer larger than 2 GB (#4815)\n * VRTSourcedRasterBand: override ComputeRasterMinMax(), ComputeStatistics() and GetHistogram() to make them run on sources, only when there's one VRTSimpleSource covering the whole VRTSourcedRasterBand\n * solve issue when the VRT is a symlink and that the sources filenames are RelativeToVRT (#4999)\n * Fix relariveToVRT option in VRTRawRasterBand (#5033)\n\nWCS driver:\n * Support version 1.1.2\n\nWebP driver:\n * Allow reading/writing alpha channel (libwebp >= 0.1.4)\n * Add support for reading XMP metadata in the xml:XMP metadata domain\n\nWMS driver:\n * Implement GetMetadataItem(Pixel_iCol_iLine, LocationInfo) to retrieve pixel attributes\n * Retrieve nodata, min and max values, defined per band or per dataset in the config file (#4613)\n * Add GetColorTable(), used by the TiledWMS mini driver (#4613)\n * Update TiledWMS mini-driver to support new variable substitution mechanism, min/max/nodata settings, color table support (#4613)\n * Add a <UserPwd> element in the XML service description file\n\nXYZ driver:\n * avoid rescanning output file at end of CreateCopy()\n\n## OGR 1.10.0 - Overview of Changes\n\nCore:\n * Add OGRLayerDecorator class (decorator base class for OGRLayer),\n * Add OGRWarpedLayer class (on-the-fly reprojection of a base layer)\n * Add OGRUnionLayer class (on-the-fly concatenation of several base layers)\n * Add OGRFieldDefn::IsSame() and OGRFeatureDefn::IsSame()\n * Add OGRAbstractProxiedLayer, OGRProxiedLayer and OGRLayerPool classes\n * OGRGeometry: set SRS of geometries created via GEOS functions from the source geometry (idem for geometries returned by OGR_G_ForceXXXX() methods) (#4572)\n * OGRFeature: Add OGR_SETFIELD_NUMERIC_WARNING option to issue a warning when not fully\n               numeric values are assigned to numeric fields. If the field type is Integer,\n               then also warn if the long value doesn't fit on a int.\n * Add OGR_G_PointOnSurface() and add it to SWIG bindings\n * Add OGR_G_ForceToLineString / OGRGeometryFactory::forceToLineString to join\n   connected segments in line strings.\n * Better implementation of getDimension() for OGRMultiPoint, OGRMultiLineString, OGRMultiPolygon and OGRGeometryCollection\n * Fix incorrect rounding in OGRFormatDouble that affected geometry WKT output (#4614)\n * OGRSQL: support UNION ALL of several SELECTs\n * OGRSQL: defer ORDER BY evaluation until necessary, so that a spatial filter can be taken into account after layer creation\n * OGRSQL: allow using indexes when OR or AND expressions are found in the WHERE clause\n * OGRSQL: fix incorrect result with more than 2 JOINs and SELECT with expressions with field names (#4521)\n * OGRSQL: fix 'SELECT MAX(OGR_GEOM_AREA) FROM XXXX' (#4633)\n * OGRSQL: fix invalid conversion from float to integer (#4634)\n * OGRSQL: fix behavior of binary operations when one operand is a NULL value\n * OGRDataSource::CopyLayer(): take into account field renaming by output driver (e.g. Shapefile driver that might truncated field names) (#4667)\n * OGRLayer::FilterGeometry() : speed-up improvement in some cases and  use GEOSPreparedIntersects() when available (r23953, r25268)\n * OGRLayer::SetNextByIndex(): return OGRERR_FAILURE if index < 0\n * OGRLineString::setPoint( int iPoint, OGRPoint * poPoint ) : avoid promoting the line to 25D if the point is only 2D (#4688)\n * OGRGeometry::Centroid(): make it work properly on POINT EMPTY with latest SVN geos version\n * Add reversePoints() method on linestring\n\nOGRSpatialReference:\n * Add support for OGC URLs (#4752)\n * add dumpReadable() method on OGRSpatialReference\n * Differentiation between Hotine Oblique Mercator (aka Variant A) and Oblique Mercator (aka Variant B) (#104, #2745)\n * EPSG: Map methods 1028 and 1029 to normal equidistant cylindrical (#4589)\n * EPSG: add support for EPSG:5514 (Krovak East North)\n * EPSG: Add EPSGTreatsAsNorthingEasting() to deal with CRS with non-GIS friendly northing/easting axis order similarly as what was done with lat/long geographic SRS, and automatically do coord swapping in GML/WFS drivers in that case (#4329)\n * Ozi datum support: support all Ozi datums (#3929), support UTM projection\n * USGS: support USGS angular parameters in radians\n * MorphFromESRI() fix WKT : compare SPHEROID and PRIMEM parameters instead of names (#4673)\n * MorphToESRI(): Add common New Zealand GEOGCS values (#4849)\n * OSR ESRI: add GCS mapping name for ETRS89\n * ogr_srs_esri: Make InitDatumMappingTable() thread-safe\n * ecw_cs.wkt: Add entry for European Terrestrial Reference System 1989.\n * pci_datum.txt: Add entry for D894\n * accept \"+proj=XXXX [...] +wktext\" as a valid PROJ.4 string, even if projection is unhandled by OGR\n * recognize +proj=etmerc when importing from PROJ.4 string; and output +proj=etmerc when exporting Transverse_Mercator to PROJ.4 string if OSR_USE_ETMERC = YES (#4853)\n\nUtilities:\n * ogr2ogr: add a -dim option to force the coordinate dimension to 2 or 3\n * ogr2ogr: accept -nlt PROMOTE_TO_MULTI to ease conversion from shapefiles to PostGIS, by auto-promoting polygons to multipolygons and linestrings to multilinestrings\n * ogr2ogr: add -gcp, -order n and -tps options to georeference ungeoreferenced vectors (#4604)\n * ogr2ogr: fix -select with shapefile output when specified field name case doesn't match source field name case (#4502)\n * ogr2ogr: correctly deal with filenames that begin with 'polygon' or 'multipolygon' as arguments of -clipsrc (#4590)\n * ogr2ogr: return non-zero exit code if the -sql triggers an error (#4870)\n * ogr2ogr: make -t_srs work when there's no per layer source SRS, but there's per feature SRS\n * ogr2ogr: add a -datelineoffset option  to provide users with capability to set different offsets than 170 to -170 (#4098)\n * ogr2ogr: add a -fieldmap option (#5021)\n * ogr2ogr: automatically rename duplicated field names of source layer so that the target layer has unique field names\n * ogrupdate.py: new sample script to update an OGR datasource from another one, by trying to identify matches between the 2 datasources\n * ogr_layer_algebra.py: new sample script to use OGR layer algebra operations\n\nMulti driver changes:\n * Fix bad AND priority when spatial and attribute filter are combined in PG, MySQL, SQLite MSSQLSpatial and VRT drivers (#4507)\n\nAVCE00 driver:\n * Fix GetFeatureCount() when an attribute or spatial filter is set\n\nAVCBin driver:\n * Fix EOF test (#3031)\n\nCSV driver:\n * Allow creating /vsimem/foo.csv\n * Detect and remove UTF-8 BOM marker if found (#4623)\n * Fix handling of empty column names in header (#4654)\n * Allow creating a new .csv file in a directory where there are invalid .csv\n   files (#4824)\n * Use a trick so that the CSV driver creates valid single column files (#4824)\n * Add WRITE_BOM option to CSV driver to write UTF8 BOM for improved Excel/unicode compatibility (#4844)\n * Don't turn \\r\\n into \\n in CSV field output, regardless of LINEFORMAT settings (#4452)\n * Don't left-pad numbers in CSV output when a width is set (#4469)\n * Add support for opening .tsv files, in particular the specific Eurostat .tsv files\n\nDGN driver:\n * Add support to read and write font name in the style (#3392)\n\nDXF driver:\n * Write HATCH (Polygon) compatible with other DXF viewers\n * Write layer geometry extent in file header (#4618)\n * Ignore Spline frame control points for VERTEX of POLYLINE (#4683)\n * Add color to POINT, INSERT and HATCH\n * Take into account extrusion vector to transform from OCS to WCS for MTEXT, TEXT, POINT, LINE, CIRCLE, ELLIPSE, ARC, SPLINE and HATCH (#4842)\n\nFileGDB driver:\n * Add the FGDB_BULK_LOAD configuration option (#4420)\n * Do compulsory field name laundering. (#4458)\n * Add special SQL commands 'GetLayerDefinition a_layer_name' and 'GetLayerMetadata a_layer_name'\n * Implement SetFeature(), DeleteFeature() and DeleteField()\n * Fix inserting features in a layer of geometry type wkbNone\n * Define CLSID/EXTCLSID to fix Feature Class alias being ignored in ArcMap (#4477)\n * Use more sensible default values for tolerance and scale parameters (#4455)\n * Use ESRI SRS DB to find the WKT definition to use when creating a layer (#4838)\n * Fix the way empty geometries are written\n * Add read support for fields of type GlobalID or GUID (#4882)\n * Add XML_DEFINITION layer creation option\n * Support setting fields of type SmallInteger, Float and GUID\n\nGeoconcept driver:\n * Partial support of relaxed GXT export syntax and fix when line is incomplete (#4983)\n\nGeoJSON driver:\n * Fix HTTP HEADERS field send to server (#4546)\n * GeoJSON: write crs object as a FeatureCollection attribute in generated GeoJSON files (#4995); on read, strip AXIS nodes\n\nGeomedia driver:\n * Fix loading of 'boundary' geometries when they are 2.5D or contain more than one inner rings (#4734)\n\nGFT driver:\n * Use OAuth2 authentication (was ClientLogin in previous versions).\n\nGML driver:\n * Add PREFIX and TARGET_NAMESPACE dataset creation options\n * Fix typo when writing geometry type name of MultiLineString in GML3 .xsd (#4674)\n * CreateFeature(): assign spatial ref when it is unset in source feature, even for GML2 case (fixes non-compliance with missing srsName on multi-geometries)\n * Make filtering of features based on OGR_GEOMETRY work (#4428)\n * Avoid point duplication concatenating GML curve segments (#4451)\n * Add special SQL command 'SELECT ValidateSchema()'\n * Allow reading srsDimension attribute when set on LineString element, and not on posList (#4663)\n * Partial support for reading GML 3.3 compat encoding profile, limited to <gmlce:SimplePolygon>, <gmlce:SimpleRectangle>, <gmlce:SimpleTriangle>, <gmlce:SimpleMultiPoint> elements\n * Support WFS GetFeature response document to be piped and opened with /vsistdin/\n * Support specifying connection string as 'filename.gml,xsd=some_filename.xsd' to explicitly provide a XSD\n * Improve detection of extent and srs for WFS 2.0\n * Allow ISO-8859-15 encoded files to be used by Expat parser (#4829)\n * Handle CompositeCurve like MultiCurve (for NAS)\n * Remove duplicate points in rings\n * Add OGR_ARC_MINLENGTH to limit the number of segments in interpolated arcs\n * When there are several geometries per feature, use geometry inside <XX:geometry> element for Inspire compatibility\n * Return per-feature SRS if there's no global SRS for a layer\n * Parse correctly <gml:outerBoundaryIs> when there are attributes in the element (#4934)\n * Recognize <gml:GeodesicString>\n * Recognize <gml:Envelope> elements (#4941)\n * Fix crash when reading CityGML attribute with empty string (#4975)\n\nILI driver:\n * Support for format codes (#3972)\n * ILI1: Use Topic name from model in itf output\n * ILI1: Recode ISO 8859-1 strings\n * ILI1: Various fixes related to enumerations\n * ILI2: Fix reading with models\n\nIngres driver:\n * Add effuser and dbpwd connection parameters.\n * Enhance EPSG search bath on WKT AUTH ids.\n * Use system defined sequence for fid instead of global (#4567)\n * Fix a name mixup when creating the table (#4567)\n\nKML driver:\n * Report empty layers when there is only empty layers; don't error out on empty document (#4511)\n * Recognize file whose root element is <Document> and not <kml>\n\nIdrisi driver:\n * Add support for reading attributes from .AVL / .ADC files\n * Ignore nodata value when computing min/max of CreateCopy()'ed dataset\n * Avoid setting unset values of mean and stddev to PAM (#4878)\n\nLIBKML driver:\n * Add stylemap support\n * Add support for GroundOverlay reading (#4738)\n * Fix memory leak in OGRLIBKMLDataSource::FindSchema() when a schema is referenced by name and not by id (#4862)\n * Correct use of temporary variable for schema field names (#4883)\n * Update the layer class internal feature count when a new feature is added\n\nMITAB driver:\n * Fix unwanted changes in data types while converting a datasource to MIF (#3853)\n * Fix incorrect handling of Mollweide projection (#4628)\n * Fix double free in OGRTABDataSource::Create() when exiting with error (#4730)\n * Add datum mapping between EPSG/authority codes and the MapInfo definitions. Falls back to old behavior of name/string matching. (#481)\n * Avoid negative zeros in TOWGS84 read from TAB file (#4931)\n\nMSSQLSpatial driver:\n * Report DeleteFeature/DeleteLayer capabilities\n * Fix the parser to swap coordinates with geography data type (#4642)\n * Fix to read multipoint geometries correctly (#4781)\n * Fix to read 3D geometries correctly (#4806, #4626)\n * Use MSSQL catalog if geometry_columns doesn't exist (#4967)\n * Utilize OGRFieldDefn::IsIgnored() (#4534)\n * Remove requirement for identity fid column in MSSQL tables (#4438)\n\nMySQL:\n * Enable auto reconnect to MySQL (#4819)\n * Reset field width and precision when converting from an unhandled field type to TEXT (#4951)\n\nNAS driver:\n * Better support for wfsext:Replace (#4555)\n * Skip elements \"zeigtAufExternes\" and \"objektkoordinaten\" (fixes PostNAS #3 and #15)\n * Issue a warning when geometry is overwritten, invalid geometry is found or featureless geometry appears\n * Issue a debug message when a existing attribute is overwritten (to catch array)\n * Use forceToLineString() on line strings (fixes PostNAS #18)\n * Handle MultiCurve and CompositeCurve\n * Merge multilinestrings\n * Accept XML files that have AAA-Fachschema.xsd in header (and remove trailing whitespace)\n * Add EPSG:25833\n\nNULL driver:\n * No-op output driver for debugging/benchmarking purpose (Not included in build process)\n\nOCI driver:\n * Fix for index creation when layers are created (#4497)\n\nODBC driver:\n * Allow opening directly *non-spatial* MS Access .MDB databases (on Windows only)\n * Make SetAttributeFilter(NULL) work (#4821)\n * Add optimized GetFeatureCount() implementation\n\nNTF driver:\n * Various fixes when opening ill-formed datasets.\n\nOCI driver:\n * Fix issue with pre-existing tables with laundered names not being recognized (#4966)\n * Make sure the FID counter is correctly initialized when data is appended (#4966)\n * Better quoting of identifiers (#4966)\n\nPGeo driver:\n * PGeo / Geomedia : remove heuristics that tried to identify if a MDB file belonged to the PGeo or Geomedia driver (#4498)\n\nPG driver:\n * Add a 'COLUMN_TYPES' layer creation option (#4788)\n * Fix insertion of features with FID set in COPY mode (#4495)\n * Honour datasource read-only mode in CreateField(), CreateFeature(), SetFeature() and DeleteFeature() (#4620)\n * Avoid fatal error when the public schema is absent (#4611)\n * Differ SRS evaluation on SQL layers (#4644)\n * Optimize SRID fetching on SQL result layer; compatibility with PostGIS 2.0 by using ST_SRID (#4699, #4700)\n * Always fetch the SRS to attach it to feature geometry of result SQL layers.\n\nPGDump driver:\n * Add a 'COLUMN_TYPES' layer creation option (#4788)\n\nREC driver:\n * Add robustness checks against corrupted files\n\nSDE driver:\n * Add support for CLOB and NCLOB data type (#4801)\n\nShapefile driver:\n * Add support for reading ESRI .sbn spatial index (#4719)\n * Add deferred layer loading\n * Implement auto-growing of string and integer columns\n * Add a special SQL command 'RESIZE table_name' to resize (shrink) fields to their optimum size, also available as a RESIZE=YES layer creation option for convenience\n * Recode field name from UTF-8 to DBF encoding in CreateField()\n * In creation, limit fields of type OFTString to a width of 254 characters (#5052)\n * Spatial index optimization (#4472)\n * Fix GetFeatureCount() when spatial filter set, especially on big-endian hosts (#4491)\n * Fixed wrong return value of OLCStringsAsUTF8 in OGRShapeLayer::TestCapability if GDAL was compiled without iconv support (#4650)\n * Support properly creating layers that include dot character\n * Avoid assert() if SetFeature() is called on a feature with invalid FID (#4727)\n * Correctly deal with .cpg files containing 8859xx string (#4743)\n * Make TestCapability(OLCFastFeatureCount) return TRUE when an attribute filter is set only if attribute indices can be used\n * Shapelib: Fix memory leaks in error code path of DBFCreateLL() (#4860)\n * Deal better with shapefile directories with foo.shp and FOO.DBF, particularly for REPACK support, and particularly for Windows OS (on Linux, foo.shp and FOO.DBF will be 2 different layers)\n * Delete temporary _packed.cpg file generated during REPACK of a layer whose .dbf has an accompanying .cpg file\n * In DeleteDataSource(), delete .cpg file if existing\n\nS57 driver:\n * Various fixes when opening ill-formed datasets.\n * Preliminary support for FFPT/FFPC update records (#5028)\n * Add RECODE_BY_DSS suboption to OGR_S57_OPTIONS configuration option that can be set to YES so that the attribute values are recoded to UTF-8, from the character encoding specified in the S57 DSSI record (#5048, #3421, adapted from patch by julius6)\n\nSQLite/Spatialite driver:\n * Add support for tables with multiple geometry columns (#4768)\n * Add (preliminary) support for SpatiaLite 4.0 database changes (#4784)\n * Make GDAL loadable as a SQLite3 extension (named VirtualOGR) (#4782)\n * Add support for OFTDateTime/OFTDate/OFTTime field types\n * Add a SRID layer creation option\n * Make REGEXP function available by using libpcre (#4823)\n * Add a COMPRESS_COLUMNS layer creation option to make string columns ZLib compressed\n * Implement minimal set of spatial functions if SpatiaLite isn't available\n * SpatiaLite: make use of spatial filter on result layers when the SQL expression is simple enough (no join, etc...) (#4508)\n * SpatiaLite: spatial index can be used even when linking against regular SQLite (#4632)\n * SpatiaLite: to improve performance, defer spatial index creation at layer closing or when a spatial request is done\n * SpatiaLite: use SpatiaLite 'layer_statistics' and 'spatialite_history' to cache the row count and extent of (spatial) layers\n * Spatialite: add support for reading Spatialite 4.0 statistics (filling them on the fly still not implemented)\n * SpatiaLite: for SpatiaLite 4.0, translate INIT_WITH_EPSG=NO into InitSpatialMetaData('NONE') to avoid filling the spatial_ref_sys table\n * On SQL result layers, report the SRS of the geometry of the first feature as the layer SRS\n * Deferred layer definition building for table and view layers\n * Speed-up opening of a result layer that has an ORDER BY\n * Cache GetExtent() result\n * Allow inserting empty feature\n * Return empty layer when SELECT returns 0 rows (#4684)\n * Add compatibility for newer SQLite versions when using the VFS layer (#4783)\n * Add missing column name quoting\n\nTIGER driver:\n * Fix opening TIGER datasource by full file name (#4443)\n * Updated to use VSI*L\n\nVFK driver:\n * SQLite is now a compulsory dependency for VFK\n * Store VFK data in SQLite (in-memory) database\n * Don't read whole file into buffer, but only on request\n * id property of data records in VFK file exceed int limit -> use GUIntBig for id values\n * Fix reading multi-line data records\n * Recode string feature properties - convert from cp-1250 to utf-8\n * Skip invalid VFK features\n\nVRT driver:\n * Add <OGRVRTWarpedLayer> (on-the-fly reprojection of a base layer)\n * Add <OGRVRTUnionLayer> (on-the-fly concatenation of several base layers)\n * Add <FeatureCount>, <ExtentXMin>, <ExtentYMin>, <ExtentXMax>, <ExtentYMax> to <OGRVRTLayer>\n * Add an optional 'dialect' attribute on the <SrcSQL> element\n * Fix OGR VRT sensitive to whitespace and <?xml> nodes (#4582)\n * Optimizations to avoid feature translation when possible\n * Implement GetFIDColumn() (#4637)\n * Implement StartTransaction(), CommitTransaction() and RollbackTransaction() by forwarding to the source layer\n * Auto enable bAttrFilterPassThrough when possible\n\nWFS driver:\n * WFS paging: change default base start index to 0 (was 1 before), as now clarified by OGC (#4504)\n * Accept several type names if the TYPENAME parameter is specified\n * Forward SQL ORDER BY clause as a WFS SORTBY for WFS >= 1.1.0\n * Fix spatial filter with WFS 2.0 GeoServer\n * Check that left-side of a binary operator in an attribute filter is a property name before submitting it to server-side\n * Major overhaul of URL-escaping\n * Fix issues when querying the WFSLayerMetadata and that one of the field contains double-quote characters (#4796)\n * Remove auto-added ACCEPTVERSIONS=1.0.0,1.1.1 - when none of VERSION or ACCEPTVERSIONS were specified - because it does not work with WFS 2.0 only servers\n * Automagically convert MAXFEATURES= to COUNT= if people still (wrongly) used it for WFS 2.0\n * Honour paging when running GetFeatureCount() and that RESULTTYPE=HITS isn't available (e.g. WFS 1.0.0) (#4953)\n * Optimize WFS 1.0 (or WFS 1.1.0 where RESULTTYPE=HITS isn't available) so that in some circumstances the GML stream\n   downloaded is used to compute GetFeatureCount() and GetExtent() together\n * Fix segfault on non-GML output when there's SRS axis swapping but the feature has no geometry (#5031)\n\nXLS driver:\n * Set FID to the row number in the spreadsheet software (first row being 1). In case OGR detects a header line, the first feature will then be assigned a FID of 2 (#4586)\n * Non-ascii path support for Windows (#4927)\n\n## SWIG Language Bindings\n\nAll bindings:\n * Add VSIReadDirRecursive() (#4658)\n * Add a osr.CreateCoordinateTransformation(src, dst) method (and for Java, a static method CoordinateTransformation.CreateCoordinateTransformation(src, dst) (#4836)\n * Add ogr.ForceToLineString()\n * Clear error before OGR_Dr_Open() (#4955)\n * Add a SetErrorHandler(handler_name) method\n\nCSharp bindings:\n * Add C# signature for FileFromMemBuffer that accepts byte array (#4701)\n\nJava bindings:\n * Fix compilation issue with SWIG 2.0.6 on Java bindings (#4669)\n * New test application: ogrtindex.java\n * Fix values of gdalconst.DCAP_* and gdalconst.DMD_* constants (#4828)\n * Fix check for opaque colors in getIndexColorModel()\n\nPerl bindings:\n * Specify module files to install\n * Return values have to be mortal, this was not the case in many instances.\n * New method Driver::Name aka GetName\n * doc target in GNUmakefile to call doxygen\n * Default to first band in GetRasterBand.\n * New method Geo::OGR::Layer::DataSource\n * New method Geo::OGR::Layer::HasField\n * Geometry method accepts geometries in Perl structures\n * Fixed a bug in FeatureDefn::create which changed the fields.\n * New experimental methods ForFeatures and ForGeometries.\n * InsertFeature, Tuple and Row methods use the Tuple and Row methods from Feature.\n * Do not use pattern my var = value if ...; as it seemingly may cause unexpected things.\n   target_key is optional argument.\n * Allow setting geometry type with schema argument.\n * Fix incorrect behavior of Geo::OGR::Geometry method Points in the case of a Point (#4833)\n * Preserve the coordinate dimension in Move method\n\nPython bindings:\n * setup.py: Changes to run without setuptools (#4693)\n * setup.py: Automatically run 2to3 for Python3\n * Define __nonzero__ on Layer object to avoid GetFeatureCount() being called behind our back when doing 'if a_layer:' (#4758)\n * Fix performance problem when instantiating Feature, especially with Python 3\n * Add RasterBand.ReadBlock(), mostly for driver testing\n * Reject strings when array of strings are expected\n * make gdal.PushErrorHandler() also accept a Python error handler function as an argument (#4993)\n * Fix Feature.ExportToJSon() to write the id attribute when it is 0 (the undefined value is NullFID ## -1)\n\n# GDAL/OGR 1.9.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL drivers: ACE2, CTG, E00GRID, ECRGTOC, GRASSASCIIGrid, GTA, NGSGEOID, SNODAS, WebP, ZMap\n * New OGR drivers:  ARCGEN, CouchDB, DWG, EDIGEO, FileGDB, Geomedia, GFT, IDRISI, MDB, SEGUKOOA, SEGY, SVG, XLS\n * Significantly improved drivers: NetCDF\n * Encoding support for shapefile/dbf (#882)\n * RFC 35: Delete, reorder and alter field definitions of OGR layers\n * RFC 37: Add mechanism to provide user data to CPLErrorHandler (#4295)\n * gdalsrsinfo: new supported utility to report SRS in various form (supersedes testepsg)\n\n## New installed files\n\n * data/nitf_spec.xml and data/nitf_spec.xsd\n\n## Backward compatibility issues\n\n * GTiff: ensure false easting/northing in geotiff geokeys are treated as being in geosys units (#3901)\n * GRIB: Fix grid vs cell-center convention (#2637)\n * OGR SQL: with DISTINCT, consider null values are such, and not as empty string (#4353)\n\n## GDAL/OGR 1.9.0 - General Changes\n\nBuild(Unix):\n * Add --with-rename-internal-libtiff-symbols and --with-rename-internal-libgeotiff-symbols\n   flags in order to safely link against an external libtiff (3.X) and a GDAL built with\n   internal libtiff (4.0) support (#4144)\n * Add --with-mdb --with-java,--with-jvm-lib, --with-jvm-lib-add-rpath options\n * Add --with-podofo, --with-podofo-lib, --with-podofo-extra-lib-for-test options\n * Add --with-armadillo\n * Update to libtool 2.4\n * Fix linking against static libkml (#3909)\n * Fix Xerces detection by using LIBS instead of LDFLAGS (#4195)\n * Check for .dylib too, when configuring MrSID SDK paths (#3910)\n * Fix wrong include order in GNUmakefile of GPX and GeoRSS drivers (#3948)\n * cpl_strtod.cpp: Enable android support (#3952).\n * ensure swig-modules depends on lib-target so make -j works with swig bindings\n * Change how we check for GEOS >= 3.1  (#3990)\n * Define SDE64 on at least x86_64 platforms (#4051)\n * Make ./configure --with-rasdaman=yes work (#4349)\n * MinGW cross compilation: clear GEOS_CFLAGS and XERCES_CFLAGS\n   if headers found in /usr/include, do not use Unix 64 bit IO\n * MinGW build: define __MSVCRT_VERSION__ to 0x0601 if not already set\n\nBuild(Windows):\n * Move MSVC warning disabling to nmake.opt, add SOFTWARNFLAGS for external code\n * Use nmake.local (#3959)\n * cpl_config.h.vc: fix up so it also works with mingw (#3960)\n * Build testepsg utility by default when OGR is enabled (#2554)\n\n## GDAL 1.9.0 - Overview of Changes\n\nPort:\n * /vsigzip/ : Avoid reading beyond file size in case of uncompressed/stored files in zip (#3908)\n * /vsicurl/ : Better support for escaped and UTF-8 characters\n * /vsicurl/ : speed-up with a per-thread Curl connection cache\n * /vsicurl/ : read https directory listing\n * /vsicurl/ : look for GDAL_DISABLE_READDIR_ON_OPEN configuration option in\n   Open() and Stat() to avoid trying fetching the directory file list\n * /vsicurl/ : fix performance problem when parsing large directory listings (#4164)\n * /vsicurl/ : recognize listing of Apache 1.3\n * /vsicurl/ : fix ReadDir() after reading a file on the same server\n * /vsicurl/ : fetch more info (size, date) when listing FTP or HTTP directories and save it in cache; use those info for ReadDir() and Stat()\n * /vsicurl/: accept 225 as a valid response code for FTP downloads (#4365)\n * /vsicurl/ : add CPL_VSIL_CURL_ALLOWED_EXTENSIONS configuration option that can be used to restrict files whose existence is going to be tested.\n * /vsitar/ : Recognize additional .tar files with slightly header differences\n * /vsizip/ : wrap the returned file handle in a BufferedReader\n * /vsizip/ : fix 1900 year offset for year returned by VSIStatL()\n * /vsizip and /vsitar: remove leading './' pattern at the beginning of filenames contained in the archive\n * /vsistdout_redirect/ : New virtual file system driver that has the same\n   behavior as /vsistdout/ (write-only FS) except it can redirect the output to\n   any VSIVirtualFile instead of only stdout (useful for debugging purposes)\n * Implement VSI*L read caching - useful for crappy io environments like Amazon\n * VSI*L: Add Truncate() virtual method and implement it for unix, win32 and /vsimem file systems\n * VSI*L: Add ReadMultiRange() virtual method to read several ranges of data in single call; add an optimized implementation for /vsicurl/\n * VSIFEofL(): make it more POSIX compliant.\n * Fine tune CPLCorrespondingPaths() for different basenames when paths involved.\n * VSIWin32FilesystemHandler::Open() : implement append mode.  Needed by ISIS2 driver with attached label (#3944)\n * CPLString: add case insensitive find operator (ifind)\n * RFC23: Add the iconv() based implementation of the CPLRecode() function (#3950)\n * Preliminary support for wchar_t with iconv recode (#4135)\n * Avoid calling setlocale if we are already in the C locale, or GDAL_DISABLE_CPLLOCALEC is TRUE (#3979)\n * CPLMiniXML: emit warnings when encountering non-conformant XML that is however accepted by the parser\n * add CPLBase64Encode(); move cpl_base64.h contents to cpl_string.h\n * Use CRITICAL_SECTION instead of Mutex on win32\n * CPLHTTPFetch(): Add a CLOSE_PERSISTENT option to close the persistent sessions\n * CPLHTTPFetch(): Add support for \"NEGOTIATE\" http auth mechanism\n * CPLHTTPFetch(): Add a CUSTOMREQUEST option\n * VSIBufferedReaderHandle: fix Eof()\n * Add CPLStringList class\n * Add CPLEmergencyError() - to call when services are too screwed up for normal error services to work (#4175)\n * CPLEscapeString(,,CPLES_URL) : don't escape dot character; fix escaping of characters whose code >= 128\n\nCore:\n * Provide for ABI specific plugin subdirectories on all platforms\n * Force cleanup of datasets when destroying the dataset manager\n * Add a GDALDataset::CloseDependentDatasets() that can be used by GDALDriverManager::~GDALDriverManager() to safely close remaining opened datasets (#3954)\n * Add GDALRasterBand::ReportError() and GDALDataset::ReportError() to prepend dataset name (and band) before error message (#4242)\n * Fix performance problem when serializing huge color tables, metadata, CategoryNames and GCPs to VRT/PAM (#3961)\n * Be careful about Nan complex values getting histogram, avoid locale issues with statistics metadata\n * GDALRasterBand::IRasterIO() default implementation : don't try to use full-res band if I/O failed on the appropriate overview band (for WMS errors)\n * RasterIO: Return earlier when a write error occurred while flushing dirty block\n * GDAL_DISABLE_READDIR_ON_OPEN can be set to EMPTY_DIR to avoid reading the dir, but it set an empty dir to avoid looking for auxiliary files\n * Use sibling file list to look for .aux.xml, .aux, .ovr, world files, tab files\n * Add GDALFindAssociatedFile() (#4008)\n * PAM: Make sure GCPs loaded from a .aux.xml override any existing ones from other sources, like an .aux file\n * PAM: Add cloning of CategoryNames\n * PAM : PamFindMatchingHistogram() - fix floating-point comparison\n * GMLJP2: Use http://www.opengis.net/gml as the schemaLocation\n * GMLJP2: Support for capturing and writing page resolution in a TIFF compatible way (#3847)\n * GDALJP2Box::SetType() : remove byte-swapping so that SetType()/GetType() correctly round-trips. Do appropriate changes in JP2KAK and ECW drivers. (#4239)\n * GDALReplicateWord(): fix off-by-one error initialization (#4090)\n\nAlgorithms:\n * polygonize: Added GDALFPolygonize() as an alternative version of GDALPolygonize() using 32b float buffers instead of int32 ones. (#4005)\n * gdalwarp: take into account memory needed by DstDensity float mask (#4042)\n * rasterfill: create working file as a bigtiff if at all needed (#4088)\n * gdalrasterize: use double instead of float to avoid precision issues (#4292)\n\nUtilities:\n * gdalsrsinfo: new supported utility to report SRS in various form (supersedes testepsg)\n * gdalinfo: add '-nofl' option to only display the first file of the file list\n * gdalinfo: add '-sd num' option to report subdataset with the specified number.\n * gdalinfo: add '-proj4' option to gdalinfo, to report a PROJ.4 string for the CRS\n * gdal_translate: propagate INTERLEAVE metadata to intermediate VRT dataset\n * gdal_translate: force quiet mode when writing to /vsistdout/\n * gdalwarp: Disable CENTER_LONG rewrapping for cutline (#3932)\n * gdalwarp: add -refine_gcps option to discard outliers GCPs before warping (#4143)\n * gdalwarp: add warning if user specifies several of -order, -tps, -rpc or -geoloc options\n * gdalwarp: speed-up when using -tps with large number of GCPs\n * gdalwarp: add support for optional use of libarmadillo to speed-up matrix inversion in -tps mode\n * gdalwarp: detect situations where the user will override the source file\n * gdallocationinfo: do not let one off-db pixel cause all the rest to be suppressed (#4181)\n * gdal_rasterize: fix half pixel shift when rasterizing points; make gdal_rasterize utility increase the computed raster extent by a half-pixel for point layers (#3774)\n * gdal_rasterize: when source datasource has a single layer, use it implicitly if none of -l or -sql is specified\n * nearblack: add -color option (#4085)\n * nearblack: improve detection of collar\n * nearblack: remove useless restrictions on number of bands for -setmask and -setalpha options (#4124)\n * gcps2vec.py: Fix command line parsing; Add SRS definition to created vector layer; Use Point geometry when dumping pixel/line coordinates.\n * gdal_merge.py: add support for -separate with multiband inputs (#4059)\n * gdal_merge.py: add a -a_nodata option (#3981)\n * gdal_proximity.py: -co option existed, but was unused...\n * gdal_fillnodata.py: add -co option\n * Add gdal_ls.py and gdal_cp.py as Python samples\n * Add new sample utility, gdal_edit.py, to edit in place various information of an existing GDAL dataset (projection, geotransform, nodata, metadata) (#4220)\n * gdalcopyproj.py: make it copy GCPs too\n * Add warning if a target filename extension isn't consistent with the output driver\n * Add --pause for convenient debugging, document it and --locale\n\nMulti-driver topics:\n * Implement reading XMP metadata from GIF, JPEG, PNG, GTiff, PDF and the 5 JPEG2000 drivers. The XMP metadata is stored as raw XML content in the xml:XMP metadata domain (#4153)\n * Mark BT, DIPEx, ERS, FAST, GenBIN, GSC, GSBG, GSAG, GS7BG, JDEM, JP2ECW, PNM, RMF, TIL, WCS and WMS drivers as compatible with VSI virtual files\n * Port DOQ1, DOQ2, ELAS, Idrisi, L1B, NDF, NWT_GRD, NWT_GRC, USGSDEM to VSI virtual file API\n * PAM-enable BT and BLX drivers\n * Implement Identify() for AAIGrid, ACE2, DTED, NWT_GRD, NWT_GRC, WMS, WCS, JDEM and BSB drivers\n * Make GIF, JPEG and PNG drivers return a non NULL dataset when writing to /vsistdout/\n * HFA and GTiff: add explicit error message when trying to add external overviews when there are already internal overviews (#4044)\n * Initialize overview manager to support external overviews for AAIGRID, DIPX, ELAS, GXF, FIT, FITS, GMT, GRIB, GSAG, GSBG, GS7BG, ILWIS, L1B, LCP, Leveller, NWT_GRD, NWT_GRC, RIK, SDTS and SAGA\n\nAAIGrid:\n * Make opening from /vsicurl/ work even when the server returns an empty file list\n\nACE2 driver:\n * New for GDAL/OGR 1.9.0\n * Read ACE2 DEM\n\nAIG driver:\n * Support uncompressed integer files, new in ArcGIS 10 it seems (#4035)\n * Use color table from PAM if no native one (#4021)\n * Fallback to PAM mechanism for RAT (#4021)\n\nBSB driver:\n * Parse the GD keyword in BSB_KNP to recognize European 1950 datum (#4247)\n * fix compilation issues with -DBSB_CREATE\n\nCEOS2 driver:\n * avoid potential crash reading past end of string. (#4065)\n\nCTG driver:\n * New for GDAL/OGR 1.9.0\n * Read USGS LULC Composite Theme Grid files\n\nDIMAP driver:\n * Add support for DIMAP2\n * Check underlying raster for SRS. There are cases where HORIZONTAL_CS_CODE is empty and the underlying raster is georeferenced\n\nE00GRID driver:\n * New for GDAL/OGR 1.9.0\n * Read Arc/Info Export E00 GRID\n\nECRGTOC driver:\n * New for GDAL/OGR 1.9.0\n * Read TOC.xml file of ECRG products\n\nECW driver:\n * Use a long refresh time for ecwp:// connections to ensure we get full resolution data, make configurable\n * Re-enable writing non8bit data in jpeg2000\n * Add implementation of an Async reader (4.x SDK)\n * Improve to support all /vsi stuff (#2344)\n * Ensure ECW_ENCODE_ values are applied for direct Create as well as CreateCopy\n * force adfGeoTransform[5] sign to negative. (#393)\n * Mark GDAL_DCAP_VIRTUALIO=YES when the driver is configured in read-only mode\n * Ensure we fallback to native geotransform if no pam override\n * Try to read projection info embedded in ECW file before reading the worldfile (#4046)\n * Add support for updating geotransform and projection info of a ECW file (#4220)\n * Fix ECW_CACHE_MAXMEM that was without effect and ECW_AUTOGEN_J2I that set an unrelated ECW parameter (#4308)\n * Allow to open a ECW file with invalid EPSG code from SWIG bindings (#4187)\n\nEHdr driver:\n * Improve floating point detection (#3933)\n * Recognize MIN_VALUE and MAX_VALUE as found in ETOPO1 header\n * Try opening the .sch file for GTOPO30 or SRTM30 source file\n * Ignore bogus .stx file where min == nodata\n\nEIR driver:\n * Add support for DATA_TYPE keyword\n\nENVI driver:\n * Add support for ESRI style coordinate system string (#3312)\n * Try to guess interleave mode from file extension, if interleave keyword is missing\n * Refuse to open unsupported types, but attempt to open everything else.\n\nENVISAT driver:\n * Correct dfGCPLine values for stripline products (#3160, #3709)\n * Fix checking of tie points per column for MERIS GCPs (#4086)\n * Report metadata from the ASAR ADS and GADS in the RECORDS metadata domain (#4105)\n * Read MERIS metadata (#4105)\n * Read data from ERS products in ENVISAT format (#4105)\n * Improved MERIS Level 2 bands detection (#4141 and #4142)\n\nEPSILON driver:\n * Now require libepsilon 0.9.1 to build (now dual LGPL/GPL) (#4084)\n\nERS driver:\n * Use case insensitive find so case does not matter (#3974)\n * Handle case of 1 m pixel resolution when CellInfo is missing (#4067)\n * Implement ERSRasterBand::SetNoDataValue() (#4207)\n * Add support for DATUM, PROJ and UNITS creation option; report the values read from the .ers file in the ERS metadata domain (#4229)\n\nGeoRaster driver:\n * Set nodata causes invalid XML metadata (#3893)\n * Fix SetStatistics() failure (#4072)\n * Fix default interleaving (#4071)\n * modelCoordinateLocation=CENTER default (#3266)\n * Cache block/level error in update (#4089)\n * Fix sequence.nextval not supported (Oracle 10g) (#4132)\n * change BLOCKING option to OPTIMALPADDING\n * fix 'cannot specify columns on insert create option' (#4206)\n * Fix ULTCoordinate Rows/Columns swapping (#3718)\n * Fix loading of small images, FlushCache issue (#4363)\n\nGIF driver:\n * Make CreateCopy() more friendly with writing in /vsistdout/\n\nGRIB driver:\n * Fix grid vs cell-center convention (#2637)\n * use /vsi for all jpeg2000 files now\n * Fix to allow GFS data to show up properly (#2550)\n * Added a ConfigOption in GRIB driver to not normalize units to metric when reading the data\n * Fixed grib1 & grib2 : pixel size precision introduces error for corner coordinates (#4287)\n\nGTA driver:\n * New for GDAL/OGR 1.9.0\n * Read/write support for Generic Tagged Arrays\n\nGTiff driver:\n * Ensure false easting/northing in geotiff geokeys are treated as being in geosys units.  Add GTIFF_LINEAR_UNITS=BROKEN config option to try and read old broken files, and logic to cover for older libgeotiffs when reading (#3901)\n * Add support for a special tag to keep track of properly written linear units (#3901)\n * Implement deferred directory chain scanning to accelerate simple opens\n * Make GTiff COPY_SRC_OVERVIEWS to deal with unusual source overview sizes (#3905)\n * Fix bug when using -co COPY_SRC_OVERVIEWS=YES on a multiband source with external overviews (#3938)\n * Add logic to fill out partial tiles on write in for jpeg images (#4096)\n * Updated to libtiff 4.0.0 final\n * Refresh with libgeotiff 1.4.0, to support for GeogTOWGS84GeoKey\n * Add support for Geocentric SRS\n * libtiff: Enable DEFER_STRILE_LOAD\n * Turn warning 'ASCII value for tag xx into more silent CPLDebug message\n * Overviews: Improve error reporting for >16bit images to JPEG compression\n * Use CPLAtof() for geotiff and epsg .csv file handling (#3886, #3979)\n * Lots of Imagine and ESRI PE string citation handling changes from 1.8-esri. Some citation related changes only compiled in if ESRI_SPECIFIC defined.\n * Give PAM information precedence over metadata from GeoTIFF itself.   Avoid unnecessary (default) writes of scale/offset.  Treat (0,1,0,0,0,-1) as a default geotransform as well as (0,1,0,0,0,1).\n * Migrate in some ESRI only logic for 1bit color tables, AdjustLinearUnits and default for 1bit data\n * Add a GTIFF_IGNORE_READ_ERRORS configuration option (#3994)\n * Lazy loading of RPC/RPB/IMD files (#3996)\n * Add mutex protection in GTiffOneTimeInit() to avoid occasional segfaults\n * Stop interpreting 4th band as alpha when not defined\n * Also list nSubType == FILETYPE_PAGE as subdatasets\n * CreateCopy(): copies category names from the source bands\n * Add capability of writing TIFFTAG_MINSAMPLEVALUE and TIFFTAG_MAXSAMPLEVALUE\n * Don't prevent from loading GTiff driver even if libtiff version mismatch detected (#4101)\n * Use GTIFF_ESRI_CITATION flag to disable writing special meaning ESRI citations\n * Optimize GTiffRGBABand implementation (#3476)\n * Add GTIFF_DIRECT_IO config. option that can be set to YES so that IRasterIO() reads directly bytes from the file using ReadMultiRange().\n * Use VSI_TIFFOpen() in GTIFFBuildOverviews() to make it work on virtual file systems\n * Treat _UNASSALPHA as alpha\n\nGRASSASCIIGrid driver:\n * New for GDAL/OGR 1.9.0\n * Read GRASS ASCII grids (similar to ArcInfo ASCII grids)\n\nGRIB driver:\n * Check for memory allocation failures\n\nHDF4 driver:\n * Use larger object name buffer\n * Handle SWopen failures\n\nHDF5 driver:\n * Fix HDF5/BAG handle/memory leaks (#3953)\n * Better error checking\n * Do not return NULL from getprojectionref() (#4076)\n * Identify datasets whose header starts with some XML content (#4196)\n * Fixed HDF5 variable length string attributes reading (#4228)\n\nHFA driver:\n * Add support for writing RATs (#999)\n * Add support for reading 2bit compressed .img files (#3956)\n * Update EPRJ_ list based on input from Erdas, round trip Krovak and Mercator Variant A (#3958)\n * Major push to move projections from 1.6-esri into trunk in HFA driver (#3958)\n * Reinitialize RRDNamesList and ExternalRasterDMS (#3897)\n * Ensure the whole entry is reinitialized when writing proparams and datum (#3969)\n * Ensure PEString cleared if we aren't writing it (#3969)\n * Get nodata from an overview if not present on main band.  Set geotransform[1] and [5] to 1.0 if pixelSize.width/height are 0.0.  Improve error checking if MakeData() fails.\n * atof() changed to CPLAtofM() to avoid locale issues.\n * Altered Edsc_BinFunction column \"Value\" to \"BinValues\" and changed type.\n * Equirectangular StdParallel1 changed to LatitudeOfOrigin.\n * Logic to preserve psMapInfo->proName as the PROJCS name for UTM/StatePlane.\n * Special state plane zone handling.\n * Special wisconsin handling for some LCC and TM SRSes.\n * 1-bit null blocks to default to 1 in ESRI_BUILDs\n * Add support for GDA94 (#4025)\n\nIdrisi driver:\n * Fix segfaults when fields are missing in .ref or .rdc files (#4100)\n * Fix problem with inverse flattening when reading a SRS of a sphere (#3757)\n\nINGR driver:\n * Set NBITS for 1 bit bands\n\nISIS2/ISIS3 driver:\n * Various improvements to PDS related drivers (#3944)\n\nJaxaPalsar driver:\n * Fixed datatype of ALOS PALSAR products Level 1.5 (#4136)\n * Fixed detection of unsupported PALSAR Level 1.0 products (#2234)\n\nJPIPKAK driver:\n * Add try to in GetNextUpdatedRegion() to protect against kakadu exceptions (#3967)\n * Fixed a serious bug in the computation of fsiz and region. (#3967)\n\nKMLSUPEROVERLAY driver :\n * Remove spaces between coordinates in coordinate triplets as mandated by KML 2.2 spec, to restore compatibility with Google Earth 6.1.0.5001 (#4347)\n\nLAN driver:\n * Preliminary support for writing gis/lan files\n\nMEM driver:\n * Add support for remembered histograms and PIXELTYPE\n\nMG4Lidar driver:\n * Clamp nOverviewCount, some LiDAR files end up with -1 overviews\n\nMrSID driver:\n * Initialize overview manager to enable RFC 15 mask band support (#3968)\n * Mark GDAL_DCAP_VIRTUALIO=YES when the driver is configured in read-only mode\n * Handle LTI_COLORSPACE_RGBA\n\nNetCDF driver:\n * Set cylindrical equal area representation to the proper cf-1.x notation (#3425)\n * Fix precision issue in geotransform (#4200) and metadata\n * Add support for netcdf filetypes nc2(64-bit) and nc4 to netCDFDataset (#3890, #2379)\n * Add function Identify and IdentifyFileType() (#3890, #2379)\n * Temporarily disabling PAM for netcdf driver (#4244)\n * Make creation of geographic grid CF compliant (#2129)\n * Fixes for netcdf metadata export: duplication, Band metadata, int/float/double vs. char* and add_offset/scale_factor (#4211, #4204), double precision ( 4200)\n * Fix netcdf metadata import (float and double precision) (#4211)\n * Improve import of CF projection\n * Add netcdf history metadata (#4297)\n * CF-1.5 compatible export of projected grids (optional long/lat export)\n * Fix LCC-1SP import and export (#3324)\n * Fix handling of UNITS import and export (#4402 and #3324)\n * Fix upside-down export and import of grids without projection and geotransform (#2129, #4284)\n * Support import of polar stereographic variant without standard parallel (#2893)\n * New driver options\n * Add simple progress indicator\n * Add support for netcdf-4, HDF4 and HDF5 (#4294 and #3166)\n * Add support for deflate compression\n * Add format support information and CreateOptionList to driver metadata\n * Add support for valid_range/valid_min/valid_max\n * Proper handling of signed/unsigned byte data\n * Add support for Create() function and significantly refactor code for export (#4221)\n * Improvements to CF projection support (see wiki:NetCDF_ProjectionTestingStatus)\n\nNGSGEOID driver:\n * New for GDAL/OGR 1.9.0\n * Read NOAA NGS Geoid Height Grids\n\nNITF driver:\n * Add a generic way of decoding TREs from a XML description file located in data/nitf_spec.xml\n * Add a new metadata domain xml:TRE to report as XML content the decoded TREs\n * Add NITF_OPEN_UNDERLYING_DS configuration option that can be set to FALSE to avoid opening the underlying image with the J2K/JPEG drivers\n * Support JP2KAK driver for jpeg2000 output, use /vsisubfile/ in all cases\n * NITFCreate(): deal with cases where image_height = block_height > 8192 or image_width = block_width > 8192 (#3922)\n * Add IREPBAND and ISUBCAT creation option (#4343)\n * Make sure scanline access is used only on single block image (#3926)\n * Add a NITF_DISABLE_RPF_LOCATION_TABLE_SANITY_TESTS configuration option that can be set to TRUE to blindly trust the RPF location table (#3930)\n * Correctly assign hemisphere for a ICORDS='U' NITF file with accompanying .nfw and .hdr files (#3931)\n * Make PAM available at band level for JPEG/JPEG2000 compressed datasets (#3985)\n * Read IMRFCA TRE for RPC info. Read CSEXRA TRE.\n * Read CSDIDA and PIAIMC TREs as metadata\n * Optional support for densifying GCPs and applying RPCs to them\n * Add GetFileList() that captures associated files with some NITF products.\n * Added ESRI only ExtractEsriMD() function.  Add raw header capture in NITF_METADATA domain in base64 encoded form.\n * Fetch NITF_DESDATA in segment data; decode specialized fields of XML_DATA_CONTENT and CSATTA DES\n * Truncate TRE name to 6 character (#4324)\n * Take into account the presence of comments when patching COMRAT for JPEG/JPEG2000 NITF (#4371)\n\nNWT_GRD driver:\n  * Fix interpolation of color when the maximum z value is below a threshold of the color scheme (#4395)\n\nOPENJPEG driver:\n * Optimize decoding of big images made of a single block\n * Fallback to PAM to get projection and geotransform\n\nPCIDSK driver:\n * Refresh PCIDSK SDK from upstream\n * Fix support for band description setting, add BANDDESCn creation option\n * Implement GetCategoryNames(), and color table from metadata for PCIDSK\n * Fix exception on files with bitmaps as bands in GetFileList()\n * Avoid closing and reopening file so we don't fracture the SysBMData with a metadata write\n * In read-only, if .pix is raster (resp. vector) only, then make sure that OGR (resp. GDAL) cannot open it\n\nPDF driver:\n * Support linking against podofo library (LGPL) instead of poppler --> however\n   pdftoppm binary from poppler distribution is needed for rasterization\n\nPDS driver:\n * Add support for MISSING and MISSING_CONSTANT keywords for nodata values (#3939)\n * Add support for uncompressed images in the UNCOMPRESSED_FILE subdomain (#3943)\n * Add support for PDS_Sample/LineProjectOffset_Shift/Mult (#3940)\n * Preliminary qube write support (#3944)\n * Fix band offset computation in BSQ (#4368)\n\nPNG driver:\n * Add compatibility with libpng >= 1.5.0 (#3914)\n * Upgrade internal libpng to 1.2.46\n\nPNM driver:\n * Make it compatible with VSI virtual files\n\nPostgisRaster driver:\n * Speed of PostGIS Raster driver improved. (#3228, #3233)\n\nRasterlite driver:\n * Robustness against buggy databases\n * Enable QUALITY creation option for WEBP tiles\n\nRS2 driver:\n * Setup to properly support subdataset oriented metadata and overviews (#4006)\n * Allow opening subdatasets by passing in the folder (#4387)\n\nSAGA driver:\n * Fix reading & writing .sdat files bigger than 2GB (#4104)\n * Use nodata value from source dataset in CreateCopy() (#4152)\n\nSDE driver:\n * Break assumption that LONG==long (#4051)\n\nSNODAS driver:\n * New for GDAL/OGR 1.9.0\n * Read Snow Data Assimilation System datasets\n\nSRP driver:\n * Set Azimuthal Equidistant projection/geotransform info for ASRP north/south polar zones (#3946)\n * ASRP/USRP: fix skipping of padding characters on some datasets (#4254)\n\nSRTMHGT driver:\n * Fix segfault in CreateCopy() if we cannot create the output file\n\nTerralib driver:\n * Removed driver: was unfinished and is unmaintained (#3288)\n\nTIL driver:\n * Implement GetFileList() (#4008)\n\nTSX driver:\n * Add support for selecting a directory\n * Make Terrasar-X driver also open TanDEM-X data (#4390)\n * Fix memleaks\n\nUSGSDEM driver:\n * Ensure blocks read in C locale (#3886)\n\nVRT driver:\n * Implement VRTDataset::IRasterIO() that can delegate to source Dataset::RasterIO() in particular cases\n * Implement GetMinimum() and GetMaximum()\n * GetFileList(): for /vsicurl/ resources, don't actually test their existence as it can be excruciating slow\n * VRTComplexSource: correctly deal with complex data type (#3977)\n * Fix 2 segfaults related to using '<VRTDataset', but with invalid XML, as the target filename of VRTDataset::Create()\n * Fix 'VRTDerivedRasterBand with ComplexSource and nodata value yields potentially uninitialized buffer' (#4045)\n * VRTDerivedRasterBand: Recognize PixelFunctionType and SourceTransferType options in AddBand() for  (#3925)\n * Copy GEOLOCATION metadata in CreateCopy().\n * VRTDerivedRasterBand: register pixel functions in a map for faster access (#3924)\n * VRT warped dataset: limit block size to dataset dimensions (#4137)\n\nWCS driver:\n * Add time support (#3449)\n * Honour dimensionLimit restrictions on WCS request size.\n * Fetch projection from returned image file chunks if they have them (i.e. GeoTIFF).\n * Honour Resample option for WCS 1.0.\n * Include service url in GetFileList if ESRI_BUILD defined\n * Check validity of 'OverviewCount' parameter\n * Add support for getting the coverage offering details from the xml:CoverageOffering domain\n * Try to preserve the servers name for a CRS (WCS 1.0.0) (#3449).\n\nWebP driver:\n * New for GDAL/OGR 1.9.0\n * Read/write GDAL driver for WebP image format\n\nWMS driver:\n * Implementation of the OnEarth Tiled WMS minidriver (#3493)\n * Implementation of a VirtualEarth minidriver\n * Improve handling of .aux.xml files, ensure colorinterp support works for tiled wms server\n * Report subdatasets when being provided WMS:http://server.url (classic WMS), WMS:http://server.url?request=GetTileService or a url to a TMS server; recognize datasets specified as a pseudo GetMap request\n * Add capability to open the URL of a REST definition for a ArcGIS MapServer, like http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer?f=json\n * Parse WMS-C TileSet info in VendorSpecificCapabilities of GetCapabilities\n * Implement CreateCopy() when source is a WMS dataset to serialize to disk the definition of a WMS dataset\n * WMS dataset : report INTERLEAVE=PIXEL\n * Make autodetection of TMS work with http://maps.qualitystreetmap.org/tilecache\n * Add capability to set Referer http header\n * Add a TMS-specific hack for some servers that require tile numbers to have exactly 3 characters (#3997)\n * Fix to make file:// URL to work\n * Add hack for OSGEO:41001\n * Fix GDALWMSRasterBand::IReadBlock() to avoid the ReadBlocks() optimization to become an anti-optimization in some use cases\n * Add service=WMS parameter if not already provided in <ServerUrl> (#4080)\n * Add options, ZeroBlockHttpCodes and ZeroBlockOnServerException, to control which http error codes should be considered as meaning blank tile (#4169)\n\nZMap driver:\n * New for GDAL/OGR 1.9.0\n * Read/write GDAL driver for ZMap Plus Grid format\n\n## OGR 1.9.0 - Overview of Changes\n\nCore:\n * RFC35: Add OGRLayer::DeleteField(), ReorderField(), ReorderFields() and AlterFieldDefn()\n * Avoid OGRLineString::addPoint( OGRPoint * poPoint ) to always force the geometry to be 3D (#3907)\n * Add a OGREnvelope3D object and getEnvelope( OGREnvelope3D * psEnvelope ) / OGR_G_GetEnvelope3D() method\n * Add OGR_G_SimplifyPreserveTopology() / OGRGeometry::SimplifyPreserveTopology()\n * OGR SQL: recognize optional ESCAPE escape_char clause\n * OGR SQL: allow NULL to be used as a value, so that 'SELECT *, NULL FROM foo works'\n * OGR SQL: Accept doublequoting of column_name in 'SELECT DISTINCT \"column_name\" FROM table_name' (#3966)\n * OGR SQL: OGRGenSQLResultsLayer: if the dialect is explicitly set to OGRSQL, don't propagate the WHERE clause of the SELECT to the source layer, but evaluate it instead at the OGRGenSQLResultsLayer level (#4022)\n * OGR SQL: Avoid error emission on requests such as 'SELECT MIN(EAS_ID), COUNT(*) FROM POLY'\n * OGR SQL: Avoid setting width/precision for AVG column\n * OGR SQL: Add a mechanism to delete a layer (DROP TABLE x)\n * OGR SQL: fix segfault when evaluating a 'IS NULL' on a float column (#4091)\n * OGR SQL: add support for new special commands : 'ALTER TABLE layername ADD COLUMN columnname columntype', 'ALTER TABLE layername RENAME COLUMN oldname TO new name', 'ALTER TABLE layername ALTER COLUMN columnname TYPE columntype', 'ALTER TABLE layername DROP COLUMN columnname'\n * OGR SQL: Add implicit conversion from string to numeric (#4259)\n * OGR SQL: Correctly parse big SQL statements (#4262)\n * OGR SQL: fix joining a float column with a string column (#4321)\n * OGR SQL: with DISTINCT, consider null values are such, and not as empty string (#4353)\n * OGR SQL: fix offset conversion for SUBSTR() (#4348)\n * Add OGR_G_GetPoints()\n * Fix parsing of WKT geometries mixing 2D and 3D parts\n * OGR_Dr_CopyDataSource() and OGRSFDriver::CopyDataSource() : make sure that the driver is attached to the created datasource (#4350)\n * OGRFeature::SetFrom() supports more conversions between field types.\n\nOGRSpatialReference:\n * Update to EPSG 7.9 database\n * Add Geocentric SRS Support\n * Add support for Interrupted Goode Homolosine projection (#4060)\n * Add SRS vertical unit support\n * Add SetVertCS(), OSRSetVertCS(), SetCompound(), IsCompound() and target oriented set/get linear units functions\n * ESRI : Improve spheroid remapping (#3904)\n * ESRI: Compare whole names in RemapNameBasedOnKeyName() (#3965).\n * ESRI: addition of ImportFromESRIStatePlaneWKT and ImportfromESRIWisconsinWKT methods\n * ESRI: importFromESRI() : support POLYCONIC projection from old style files (#3983)\n * ESRI: importFromESRI() : support LAMBERT_AZIMUTHAL projection from old style files (#4302)\n * ESRI: fix EPSG:32161 mapping\n * ESRI: fix Stereo/Oblique_Stereo/Double_Stereo (bugs #1428 and #4267)\n * ESRI: fix projection parameter mapping for Orthographic projection (#4249)\n * ESRI: add optional fixing of TOWGS84, DATUM and GEOGCS with GDAL_FIX_ESRI_WKT config. option (#4345 and #4378)\n * ESRI: fix add Krassowsky/Krasovsky 1940 spheroid mapping\n * Add EPSG:102113 in the data/esri_extra.wkt file\n * Add Germany zone 1-5 in range 31491-31495 in the data/esri_extra.wkt file\n * fix NAD_1983_Oregon_Statewide_Lambert_Feet_Intl code\n * added/updated coordinates systems provided by IGNF (#3868)\n * ERM: add support for EPSG:n based coordinate systems (#3955)\n * ImportFromEPSG(): Add default support for various degree units without supporting .csv file.\n * ImportFromEPSG(): Add support for spherical LAEA (#3828)\n * ImportFromEPSG(): use CoLatConeAxis parameter to build Krovak azimuth parameter (#4223)\n * importFromURN(): support compound SRS\n * importFromURN(): accept 'urn:opengis:crs:' syntax found in some TOP10NL GML files\n * Add CRS: support and for importing two part ESRI PE SRS with VERTCS\n * SetFromUserInput() : recognize 'IGNF:xxx'\n * Ensure that the result of importFromEPSGA() always has keyword ordering fixed up (#4178)\n * exportToERM() : deal with GDA94 datum and its UTM projections (#4208)\n * Fix ESRI_DATUM_NAME for D_MOLDREF99 and D_Philippine_Reference_System_1992 (#4378)\n\nUtilities:\n * ogr2ogr: Make 'ogr2ogr someDirThatDoesNotExist.shp dataSourceWithMultipleLayer' create a directory\n * ogr2ogr: make -overwrite/-append work with non-spatial tables created by GDAL 1.8.0;\n * ogr2ogr: take into account fields specified in the -where clause in combinations with -select to create the correct list of fields to pass to SetIgnoredFields() (#4015)\n * ogr2ogr: fix -zfield option so that the modified geometry properly reports coordinate dimension = 3. Also avoids it to be in the list of ignored field names\n * ogr2ogr: add -simplify option to simplify geometries\n * ogr2ogr: add a warning if the target filename has an extension or a prefix that isn't consistent with the default output format (i.e. Shapefile), but which matches another driver. Can be made quiet with -q option\n * ogrinfo/ogr2ogr: exit when SetAttributeFilter() fails, instead of silently going on (#4261)\n\nMulti driver topics:\n * RFC35 : implementation in Shapefile, Memory and PG drivers (#2671)\n * DXF, EDIGEO, KML, LIBKML, Shapefile, SDE, SOSI: Mark as supporting UTF-8\n * BNA, CSV, GPX, KML, GeoRSS, GML, LIBKML, GeoJSON, PGDump : accept both /dev/stdout and /vsistdout/ as filenames; remove 'stdout' as a valid alias that could be used in some of them (#4225, #4226)\n\nARCGEN driver:\n * New for GDAL/OGR 1.9.0\n * Read-only OGR driver for Arc/Info Generate files\n\nCouchDB driver:\n * New for GDAL/OGR 1.9.0\n * Read/write OGR driver for CouchDB / GeoCouch\n\nCSV driver:\n * Add special recognition and handling for USGS GNIS (Geographic Names Information System) files\n * Directly recognize the structure of the allCountries file from GeoNames.org\n * Implement GetFeatureCount() to be a little bit faster\n * Accept /dev/stdout as a filename for CreateDataSource()\n * Fix handling of non-numeric values in numeric columns (NULL instead of 0)\n * Fix handling of column names with numbers\n * Recognize numeric fieldnames inside quotes\n * Accept real numbers with ',' as decimal separator when ';' is the field separator (CSV export in French locale)\n\nDXF driver:\n * Add support for DXF_ENCODING config var and DWGCODEPAGE header field (#4008)\n * Added DXF_MERGE_BLOCK_GEOMETRIES\n * Treat ATTDEFs the same as TEXT entities\n * Implement hatch polyline and elliptical arc support, hatch fill, do not polygonize closed smoothed lines\n * Add handling of hidden/frozen/off layers.\n\nDWG driver:\n * New for GDAL/OGR 1.9.0\n * Read DWG files through the use of Open Design Alliance Teigha Libraries\n\nEDIGEO driver:\n * New for GDAL/OGR 1.9.0\n * Read files of French EDIGEO exchange format\n\nFileGDB driver:\n * New for GDAL/OGR 1.9.0\n * Read/write support based on FileGDB API SDK\n\nGeoJSON driver:\n * Support writing 3D lines and polygons\n * Add a bbox attribute with the geometry bounding box if WRITE_BBOX layer creation option is set (#2392)\n * Write bbox of FeatureCollection before features when file is seekable\n * Remove unsetting of FID that caused FID not at the last position of properties to be lost\n * Properly deal with null field values in reading and writing\n * Handle OFTIntegerList, OFTRealList and OFTStringList fields\n * Recognize other arrays as OFTString field\n * Fix assertion on unhandled ESRI json (#4056)\n * Fix segfault on feature where 'properties' member exists but isn't an object (#4057)\n * Better detection of OGR type for numeric JSON fields (#4082)\n * Add COORDINATE_PRECISION layer creation option to specify the maximum number of figures after decimal point in coordinates; set to 15 by default with smart truncation of trailing zeros (like done for WKT)\n * Add OGR_G_ExportToJsonEx() to accept a list of options\n * Add ability to detect geojson files without an extension (#4314)\n\nGeomedia driver:\n * New for GDAL/OGR 1.9.0\n * Read-only driver to read Geomedia .MDB databases\n\nGeoRSS driver:\n * Parse RSS documents without <channel> element\n\nGFT driver:\n * New for GDAL/OGR 1.9.0\n * Read/write driver for Google Fusion Tables\n\nGML driver:\n * Major performance improvement when reading large multi-layer GML files. See usage of new GML_READ_MODE configuration option\n * Support gml:xlink resolving for huge GML files through GML_SKIP_RESOLVE_ELEMS=HUGE (requires SQLite)\n * Add GML_GFS_TEMPLATE config option to specify a template .gfs file that can be used for several GML files with similar structure (#4380)\n * Be able to build the driver with support of both Expat and Xerces libraries and add ability of select one at runtime. For UTF-8 documents, we select Expat if it is available, because it is faster than Xerces\n * Expose fid or gml_id as feature fields if autodetected. This behavior can be altered by the GML_EXPOSE_FID / GML_EXPOSE_GML_ID configuration option.\n * Improve handling of .gml and .xsd produced by FME (in particular for CanVec GML)\n * Be able to open .gz file directly (like OS Mastermap ones), and read/write the .gfs file next to the .gz file\n * Fix segfault when encountering an invalid (or unhandled by OGR) geometry and when the axis order is lat/long (#3935)\n * GML3: use a new method to interpret Face objects (which requires GEOS support);\n         old method available if GML_FACE_HOLE_NEGATIVE config. option set to YES (#3937)\n * GML3: support Curve as a valid child for curveProperty inside directEdge parsing (#3934)\n * GML3: don't force the linestring to be 3D when inverting its orientation during parsing of directedEdge (#3936)\n * GML3: accept <pointProperty> element in <gml:LineString> or <gml:LineStringSegment>\n * OGR_G_CreateFromGML(): accept <gml:coordinates> with coordinate tuples separated by comma and coordinate components separated by space\n * Recognized schemas with <complexType> inside <element>, such as the one returned by http://deegree3-demo.deegree.org:80/deegree-utah-demo/services\n * Write the Z component of bounding box for 25D geometries\n * Force layer geometry type to 3D when there's only a .xsd file and we detect a hint that the bounding box is 3D\n * Handle layers of type wkbNone appropriately (#4154)\n * Change format of (GML 2.1.1) FID generated from Fxxx to layer_name.xxx (where xxx is the OGR FID) to ensure uniqueness (#4250)\n * Accept 'GML3Deegree' as a valid value for the dataset creation option FORMAT, to produce a .XSD that should be better handled by Deegree3 (#4252), and 'GML3.2' to produce GML file and schema that validate against GML 3.2.1 schema.\n * Don't try to parse successfully a feature type in the .xsd if there are elements we don't know how to parse. Better to rely on the .gfs mechanism (#4328)\n * Fix bug in OGRAtof() that caused wrong parsing of coordinates in GML files written in scientific notation (#4399)\n\nGMT driver:\n * Fix GetExtent() result that swallowed the first char of the minx bound (#4260)\n\nIDRISI driver:\n * New for GDAL/OGR 1.9.0\n * Read Idrisi .VCT vector files\n\nILI1 driver:\n * Fix for missing geometry in ILI1\n\nLIBKML driver:\n * Set the OGRStylePen unit type to pixel when reading <LineStyle>\n * Avoid ingesting zip files that are not valid kmz (#4003)\n * Do not use displayname to set the field name\n * Recognize <Data> elements of <ExtendedData> in case <ExtendedData> doesn't use a <SchemaData>\n * Fix mapping of the type attribute of <SimpleType> elements inside <Schema> to OGR field type (#4171)\n * Parse correctly kml docs containing only one placemark\n * Properly set the feature style string from a placemarks style\n * Improve OGRStyleLabel <-> KmlLabelStyle mapping\n * Combine styles from the style table and features styles when LIBKML_RESOLVE_STYLE=YES (#4231)\n * Check that string values put in fields are valid UTF-8 (#4300)\n\nMDB driver:\n * New for GDAL/OGR 1.9.0\n * Read-only driver to read PGeo and Geomedia .MDB databases\n * Relies on using the Java Jackcess library (LGPL) through JNI.\n\nMITAB driver:\n * Add support for reading google mercator from mapinfo (#4115)\n * Fixed problem of the null datetime values (#4150)\n * Fix problem with tab delimiter used in MIF files (#4257)\n\nMSSQLSpatial driver:\n * Removing 'Initial Catalog' which is not supported in the ODBC SQL driver connection strings.\n * Allow to specify 'Driver' in MSSQL connection strings (#4393)\n * Fix for the IDENTITY INSERT problem with MSSQL Spatial (#3992)\n * Add more verbose warnings to the geometry validator\n * Fix for the schema handling problem with MSSQL Spatial (#3951)\n * Fix for the corrupt geometry report when using the ogr2ogr -sql option (#4149)\n\nMySQL driver:\n * Recognize columns with types POINT, LINESTRING, etc. as geometry columns\n\nNAS driver:\n * Add support for treating wfs:Delete as a special Delete feature with typeName and FeatureId properties\n * Handle empty files gracefully (#3809)\n * Preliminary support for SRS in NAS files, including 3GKn SRS\n * Implement special treatment for <lage> to be zero passed and string (NAS #9)\n * Add special handling of punktkennung (NAS #12)\n * Add special handling for artDerFlurstuecksgrenze (#4255)\n * Add support for wfsext:Replace operations (PostNAS #11)\n * Correct NASHandler::dataHandler() to avoid trimming non-leading white space\n\nNTF driver:\n * Create and manage height field as floating point since some DTM products have floating point elevations.\n\nOCI driver:\n * Added TRUNCATE layer creation option (#4000)\n * Clear errors after speculative dimension calls (#4001)\n * Fix multithreading related problems (#4039)\n * Ensure that AllocAndBindForWrite does not mess up if there are no general attributes (#4063)\n * Implement DeleteLayer(int) method\n * Ensure extents updated by SyncToDisk(), and that new features are merged into existing extents (#4079)\n\nOGDI driver:\n * Fix GetFeature() that did not like switching between layers\n\nPG driver:\n * Write geometries as EWKB by default to avoid precision loss (#4138)\n * Return the table columns in the order they are in the database (#4194)\n * Add a NONE_AS_UNKNOWN layer creation option that can be set to TRUE to force layers with geom type = wkbNone to be created as if it was wkbUnknown (PostGIS GEOMETRY type) to be able to revert to behavior prior to GDAL 1.8.0 (#4012)\n * Add EXTRACT_SCHEMA_FROM_LAYER_NAME layer creation option that can be set to OFF to disable analysis of layer name as schema_name.table_name\n * Add FID layer creation option to specify the name of the FID column\n * ogr2ogr: make sure that for a PG datasource, -nln public.XXX can also be used with -append\n * Fix CreateFeatureViaInsert() to emit 'INSERT INTO xx DEFAULT VALUES'\n * Fix handling of Nan with fields with non-zero width (#2112)\n * Use wrapper for PQexec() to use PQexecParams() instead in most cases\n * Add proper escaping of table and column names\n * OGR SQL: add proper column name escaping and quoting for PostgreSQL datasources\n * Launder single quote character in table name\n * Better reporting of error in case of failed ExecuteSQL()\n * Create field of type OFTString and width > 0, as VARCHAR(width) (#4202)\n * Add more compat with Postgis 2.0SVN (geometry_columns- #4217, unknown SRID handling)\n * Better behavior, in particular in error reporting, of ExecuteSQL() when passed with non-select statements, or with select statements that have side-effects such as AddGeometryColumn()\n\nPGDump driver:\n * fix handling of Nan with fields with non-zero width (#2112)\n * Add CREATE_SCHEMA and DROP_TABLE layer creation option (#4033)\n * Fix crash when inserting a feature with a geometry in a layer with a geom type of wkbNone;\n * PG and PGDump: fix insertion of features with first field being a 0-character string in a non-spatial table and without FID in COPY mode (#4040)\n * Add NONE_AS_UNKNOWN, FID, EXTRACT_SCHEMA_FROM_LAYER_NAME layer creation options\n * Better escaping of column and table names\n * Create field of type OFTString and width > 0, as VARCHAR(width) (#4202)\n\nPGeo driver:\n * Move CreateFromShapeBin() method to an upper level\n * Only try to open .mdb files that have the GDB_GeomColumns string\n * Decode Z coordinate for a POINTZM shape\n * Aad support for decoding multipoint/multipointz geometries\n * Fix setting of the layer geometry type\n * Add support for zlib compressed streams\n * Implement MultiPatch decoding\n\nSDE driver:\n * Add support for decoding NSTRING fields (#4053)\n * Add support in CreateLayer() to clean up partially registered tables that aren't full spatial layers\n * Add logic to force envelope for geographic coordsys objects (#4054)\n * Add USE_STRING layer creation and configuration options information\n * Set SE_MULTIPART_TYPE_MASK for multipolygon layers (#4061).\n * Change how offset and precision are set for geographic coordinate systems to more closely match SDE\n\nSEGUKOOA driver:\n * New for GDAL/OGR 1.9.0\n * Read files in SEG-P1 and UKOOA P1/90 formats\n\nSEGY driver:\n * New for GDAL/OGR 1.9.0\n * Read files in SEG-Y format\n\nShapefile driver:\n * Encoding support for shapefile/dbf (#882)\n * Allow managing datasources with several hundreds of layers (#4306)\n * Lazy loading of SRS and lazy initialization of attribute index support\n * Use VSI*L API to access .qix spatial index files\n * Add special SQL command 'RECOMPUTE EXTENT ON layer_name' to force recomputation of the layer extent (#4027)\n * Faster implementation of GetFeatureCount() in some circumstances.\n * Fix crash in CreateField() if there is no DBF file\n * Fix add field record flushing fix (#4073)\n * Fix decoding of triangle fan in a multipatch made of several parts (#4081)\n * Refuse to open a .shp in update mode if the matching .dbf exists but cannot be opened in update mode too (#4095)\n * Recognize blank values for Date fields as null values (#4265)\n * Recognize 'NULL' as a valid value for SHPT creation option as documented\n * Check that we are not trying to add too many fields.\n * Support reading measure values as Z coordinate.\n\nSQLite/Spatialite driver:\n * Spatialite: major write support improvements (creation/update of Spatialite DB now limited to GDAL builds with libspatialite linking)\n * Spatialite: add support for 3D geometries (#4092)\n * Spatialite: speed-up spatial filter on table layers by using spatial index table (#4212)\n * Spatialite: add support for reading Spatialite views registered in the views_geometry_columns\n * Spatialite: better support for building against amalgamated or not\n * Spatialite: when it exists, use srs_wkt column in spatial_ref_sys when retrieving/inserting SRS\n * Spatialite: add COMPRESS_GEOM=YES layer creation option to generate Spatialite compressed geometries\n * Spatialite: add support for VirtualXLS layers.\n * Spatialite: imported VirtualShape support, in particular it is now possible to open on-the-fly a shapefile as a VirtualShape with 'VirtualShape:shapefile.shp' syntax as a datasource\n * Implement RFC35 (DeleteField, AlterFieldDefn, ReorderFields)\n * Implement DeleteDataSource()\n * Implement DeleteFeature()\n * Implement SetFeature() by using UPDATE instead of DELETE / INSERT\n * Add capability to use VSI Virtual File API when needed (if SQLite >= 3.6.0)\n * Make CreateDataSource(':memory:') work\n * Enforce opening update/read-only mode to allow/forbid create/delete layers, create/update features (#4215)\n * Launder single quote character in table name; properly escape table name if no laundering (#1834)\n * Use ALTER TABLE ADD COLUMN by default to create a new field; older method can still be used by defining the OGR_SQLITE_USE_ADD_COLUMN config option to FALSE in order to provide read-compat by sqlite 3.1.3 or earlier\n * Fix bug in CreateField() : if there was already one record, the content of the table was not preserved, but filled with the column names, and not their values\n * Map 'DECIMAL' columns to OGR real type (#4346)\n * Add OGR_SQLITE_CACHE configuration option for performance enhancements\n * Try to reuse INSERT statement to speed up bulk loading.\n\nSVG driver:\n * New for GDAL/OGR 1.9.0\n * Read only driver for Cloudmade Vector Stream files\n\nS57 driver:\n * Add support for Dutch inland ENCs (#3881)\n * Allow up to 65536 attributes, use GUInt16 for iAttr (#3881)\n * Be cautious of case where end point of a line segment has an invalid RCID\n * Correct handling of update that need to existing SG2D into an existing feature without it (#4332)\n\nVRT driver:\n * Do not try to read too big files\n * Lazy initialization of OGRVRTLayer\n * Don't set feature field when source feature field is unset\n\nWFS driver:\n * Add preliminary support for WFS 2.0.0, but for now don't request it by default.\n * Increase performance of layer definition building by issuing a DescribeFeatureType request for several layers at the same time\n * Better server error reporting\n * Use the layer bounding box for EPSG:4326 layers (restricted to GEOSERVER for now) (#4041)\n * Add capability of opening a on-disk Capabilities document\n * Add special (hidden) layer 'WFSLayerMetadata' to store layer metadata\n * Add special (hidden) layer 'WFSGetCapabilities' to get the raw XML result of the GetCapabilities request\n * CreateFeature()/SetFeature(): use GML3 geometries in WFS 1.1.0 (make TinyOWS happy when it validates against the schema)\n * Make spatial filtering work with strict Deegree 3 servers\n * Fix reading when layer names only differ by their prefix\n\nXLS driver:\n * New for GDAL/OGR 1.9.0\n * Read only driver for MS XLS files and relies on FreeXL library.\n\nXPlane driver:\n * Port to VSI*L API\n\nXYZ driver:\n * Ignore comment lines at the beginning of files\n\n## SWIG Language Bindings\n\nGeneral :\n * RFC 30: Correct the signature of Datasource.CreateDataSource() and DeleteDataSource(),  gdal.Unlink() to accept UTF-8 filenames (#3766)\n * Add Band.GetCategoryNames() and Band.SetCategoryNames()\n * Add Geometry.GetPoints() (only for Python and Java) (#4016)\n * Add Geometry.GetEnvelope3D()\n * Add Geometry.SimplifyPreserveTopology()\n * Extend SWIG Geometry.ExportToJson() to accept a list of options (#4108)\n * Add (OGR)DataSource.SyncToDisk()\n * Add SpatialReference.SetVertCS(), IsSameVertCS(), IsVertical(), SetCompound(), IsCompound()\n * Add SpatialReference.SetIGH() (#4060)\n * RFC 35: Add OGRLayer.DeleteField(), ReorderField(), ReorderFields(), AlterFieldDefn()\n * Add gdal.VSIFTruncateL()\n\nCSharp bindings:\n * Implement the typemap for utf8_path in C# (#3766)\n * Correcting the signature of OGRDataSource.Open to make the utf8 typemap to work (#3766)\n\nJava bindings:\n * Turn the gdalJNI, gdalconstJNI and osrJNI into package private classes\n * Make Layer.GetExtent() return null when OGR_L_GetExtent() fails.\n\nPerl bindings:\n * The \"Points\" method of Geometry was not accepting its own output in the case of a single point. It accepted only a point as a list. Now it accepts a point both as a list containing one point (a ref to a point as a list) and a point as a list.\n * Fixed UTF-8 support in decoding names (datasource, layer, field etc.).\n * Assume all GDAL strings are UTF-8, handle all changes in typemaps.\n * Additions to Perl bindings due to new developments etc: Layer capabilities, GeometryType  method for Layer, improved create, new Export and Set methods for SpatialReference.\n * Detect context in a typemap which returns a array, this now returns a list in list context; the change affects at least GetExtent and GetEnvelope methods, which retain backward compatibility though new and/or changed methods: FeatureDefn::Name, FeatureDefn::GeometryIgnored, FeatureDefn::StyleIgnored, Feature::ReferenceGeometry, Feature::SetFrom, FieldDefn::Ignored, Geometry::AsJSON\n * Perl typemaps: more correct manipulation of the stack, more cases where a list is returned in a list context, better handling of callback_data @Band::COLORINTERPRETATIONS, Band methods Unit, ScaleAndOffset, GetBandNumber, RasterAttributeTable method LinearBinning\n * Typemaps for VSIF{Write|Read}L, tests and docs for some VSI* functions.\n * Perl bindings: better by name / by index logic, some checks for silent failures, return schema as a hash if wanted, support ->{field} syntax for features, return list attributes as lists or listrefs as wished so that ->{field} works for lists too (API change)\n\nPython bindings:\n * Improvements for ogr.Feature field get/set\n * Add hack to bring Python 3.2 compatibility\n * First argument of VSIFWriteL() should accept buffers for Python3 compat\n * Fix reference leak in 'typemap(in) char **dict'\n * Add gdal.VSIStatL()\n * swig/python/setup.py : fix for virtualenv setups (#4285)\n * Layer.GetExtent() : add optional parameter can_return_null that can be set to allow returning None when OGR_L_GetExtent() fails\n * Make gdal.VSIFSeekL(), gdal.VSIFTellL() and gdal.VSIFTruncateL() use GIntBig instead of long for compat with 32bit platforms\n * Add script to build the python extensions with Python 2.7 and a mingw32 cross-compiler under Linux/Unix\n\nRuby bindings:\n * Build SWIG Ruby Bindings against modern Ruby versions (1.8.7 and 1.9.2) (#3999)\n\n# GDAL/OGR 1.8.0 release notes\n\n(Note: Most changes/bugfixes between 1.7.0 and 1.8.0 that have already gone\nto the 1.7.X maintenance releases are not mentioned hereafter.)\n\n## In a nutshell...\n\n* New GDAL drivers : GTX, HF2, JPEGLS, JP2OpenJPEG, JPIPKAK, KMLSUPEROVERLAY,\n                     LOS/LAS, MG4Lidar, NTv2, OZI, PDF, RASDAMAN, XYZ\n* New OGR drivers : AeronavFAA, ArcObjects, GPSBabel, HTF, LIBKML, MSSQLSpatial, NAS,\n                    OpenAir, PDS, PGDump, SOSI, SUA, WFS\n* Significantly improved OGR drivers : DXF, GML\n* New implemented RFCs : RFC 7, RFC 24, RFC 28, RFC 29, RFC 30, RFC 33\n* New utility : gdallocationinfo\n\n## Backward compatibility issues\n\n* MITAB driver: use \",\" for the OGR Feature Style id: parameter delimiter,\n  not \".\" as per the spec. Known impacted application :\n  MapServer (http://trac.osgeo.org/mapserver/ticket/3556)\n* RFC 33 changes the way PixelIsPoint is handled for GeoTIFF (#3838,#3837)\n* GML driver: write valid <gml:MultiGeometry> element instead of the non-conformant\n  <gml:GeometryCollection>. For backward compatibility, recognize both syntax for\n  the reading part (#3683)\n\n## GDAL/OGR 1.8.0 - General Changes\n\nBuild(All):\n * Make sure that 'import gdal' can work in a --without-ogr build\n\nBuild(Unix):\n * Fix compilation on RHEL/Centos 64bit for expat and sqlite3 (#3411)\n * Update to autoconf 2.67 and libtool 2.2.6\n * During the external libtiff autodetection check whether library version is 4.0\n   or newer, fallback to internal code otherwise. It is still possible to link\n   with older libtiff using the explicit configure option (#3695)\n * Make --with-threads=yes the default\n * Allow using --with-spatialite=yes\n * Check /usr/lib64/hdf for RedHat 64bit\n\nBuild(Windows):\n * Change the default MSVC version to VS2008.\n\n## GDAL 1.8.0 - Overview of Changes\n\nPort:\n * RFC 7 : Use VSILFILE for VSI*L Functions (#3799)\n * RFC 30 : Unicode support for filenames on Win32\n * Implement Rename() for /vsimem\n * New virtual file system handlers :\n    - /vsicurl/ : to read from HTTP or FTP files (partial downloading)\n    - /vsistdin/ : to read from standard input\n    - /vsistdout/ : to write to standard output\n    - /vsisparse/ :mainly to make testing of large file easier\n    - /vsitar/ : to read in .tar or .tgz/.tar.gz files\n * Add C API to create ZIP files\n * Add support for writable /vsizip/\n * Add VSIBufferedReaderHandle class that is useful to improve performance when\n   doing backward seeks by a few bytes on underlying file handles for which\n   backwardseeks are very slow, such as GZip handle\n * Add service for base64 decoding\n * CPL ODBC : Add transaction support (#3745)\n * CPL ODBC: Increase the default connection timeout to 30 sec\n * Add VSIStatExL() that has a flag to specify which info is really required\n   (potential speed optimization on slow virtual filesystems such as /vsicurl)\n * Add VSIIsCaseSensitiveFS() to avoid ugly #ifndef WIN32 / #endif in the code of\n   various drivers\n * Add Recode() convenience method to CPLString\n * HTTP downloader: add PROXY and PROXYUSERPWD options (and GDAL_HTTP_PROXY and\n   GDAL_HTTP_PROXYUSERPWD configurations option) to allow request to go through a\n   proxy server.\n\nCore:\n * RFC 24: progressive/async raster reading\n * On Unix, add capability of opening the target of a symlink through GDALOpen()\n   even if it not a real filename. Useful for opening resources expressed as\n   GDAL virtual filenames in software offering only file explorers (#3902)\n * Assume anything less than 100000 for GDAL_CACHEMAX is measured in megabytes.\n * Read cartesian coordinates if applicable in GDALLoadOziMapFile().\n * Avoid being overly sensitive to numeric imprecision when comparing pixel\n   value and nodata value in GDALRasterBand::ComputeStatistics()/\n   ComputeRasterMinMax(), especially for GeoTIFF format where nodata is\n   stored as text (#3573)\n * Better handling of NaN (not a number) (#3576)\n * Add C wrapper GDALSetRasterUnitType() for GDALRasterBand::SetUnitType() (#3587)\n * Add GDALLoadRPCFile() to read RPCs from GeoEye _rpc.txt files (#3639)\n * Allow GDALLoadRPB/RPC/IMDFile() to be called directly with the RPB/RPC/IMD\n   filename\n * In GDAL cache block, use 64-bit variables for cache size\n * Add GDALSetCacheMax64(), GDALGetCacheMax64() and GDALGetCacheUsed64() (#3689)\n * Improve formatting of seconds in DecToDMS()\n * Support negative nPixelOffset values for RawRasterBands\n * GDALDatasetCopyWholeRaster(): improve performance in certain cases by better\n   fitting to input/output block sizes\n * Add GDALRasterBandCopyWholeRaster()\n * Make sure band descriptions are properly captured and cloned (#3780)\n * GDALDataset/GDALRasterBand::CreateMaskBand(): invalidate pre-existing raster\n   band mask that could be created lazily with GetMaskBand()/GetMaskFlags(),\n   so that a later GetMaskBand() returns the newly created mask band\n * Overview computation : speed improvements in resampling kernels\n * Fix dereferencing of open datasets for GetOpenDatasets (#3871)\n * Add DllMain callback to set-up and tear-down internal GDAL library\n   resources automatically (#3824)\n * List .aux file if it used in GDALPamDataset::GetFileList()\n * PAM dataset : try retrieving projection from xml:ESRI metadata domain\n\nAlgorithms:\n * rasterize: Burn the attribute value in ALL the bands during rasterization. (#3396)\n * geoloc : Allow using XBAND and YBAND with height == 1 in the case of a regular\n   geoloc grid, suc h as for LISOTD_HRAC_V2.2.hdf (#3316)\n * GDALFillNodata(): improve&fix progress report\n * warper : Try to determine if we will need a UnifiedSrcDensity buffer\n            when doing memory computations (#3515).\n * warper : GDALSuggestedWarpOutput2(): use more sample points around the edge\n            of the raster to get more accurate result (#3742)\n * warper : added (preliminary) support for mask bands that aren't nodata or alpha\n * warper : integrate Google Summer of Code OpenCL implementation of warper\n * gdalgrid: Move ParseAlgorithmAndOptions from apps/gdal_grid.cpp to\n             alg/gdalgrid.cpp (#3583)\n * RPCTransformer: take into account optional DEM file to extract elevation\n   offsets (RPC_HEIGHT_SCALE and RPC_DEM transformation options added) (#3634)\n * GDALReprojectImage() : correctly assign nSrcAlphaBand and nDstAlphaBand (#3821)\n * gdalgrid : Properly initialize the first nearest distance in GDALGridNearestNeighbor().\n\nUtilities :\n * gdallocationinfo : new\n * nearblack: add -setalpha option to add/set an alpha band + -of, -q, -co\n * nearblack: add -setmask option to use a mask band to mask the nodata areas\n * gdalbuildvrt: support stacking ungeoreferenced images when using -separate,\n   provided they have the same size (#3432)\n * gdalbuildvrt: implement a check to verify that all color tables are identical\n * gdalbuildvrt: automatically create a VRT mask band as soon one of the sources\n   has a dataset mask band (non-trivial = neither alpha, neither alldata, neither nodata)\n * gdalbuildvrt: use OSRIsSame() to check if all source raster have same SRS (#3856)\n * gdal_translate: Transfer GEOLOCATION in the -of VRT case if spatial\n   arrangement of the data is unaltered\n * gdal_translate : add support for resizing datasets with mask bands\n * gdal_translate : add -mask option to add a mask band from an input band/mask band.\n   Also extend syntax for the value of the -b option to allow specifying mask band as input band\n * gdal_translate : support '-a_nodata None' as a way of unsetting the nodata value\n * gdal_translate : invalidate statistics when using -scale, -unscale, -expand, -srcwin,\n                    -projwin or -outsize and a new -stats option to force their (re)computation (#3889)\n * gdal_rasterize: Add capability of creating output file (#3505)\n * gdaldem: add a new option, -compute_edges, that enable gdaldem to compute\n   values at image edges or if a nodata value is found in the 3x3 window,\n   by interpolating missing values\n * gdaldem : add '-alg ZevenbergenThorne' as an alternative to Horn formula\n   for slope, aspect and hillshade\n * gdaldem : support GMT .cpt palette files for color-relief (#3785)\n * gdalwarp: add -crop_to_cutline to crop the extent of the target dataset to\n   the extent of the cutline\n * gdalwarp: add a -overwrite option (#3759)\n * gdal_grid : Properly use the spatial filter along with the bounding box.\n * epsg_tr.py: added -copy format for INGRES COPY command\n * hsv_merge.py: support RGBA dataset as well as RGB dataset, add -q and -of\n   options, avoid using hillband when it is equal to its nodata value\n * val_repl.py: copy geotransform and projection from input dataset to output\n   dataset\n * gdal_retile.py : assign color interpretation (#3821)\n * gdal_retile.py : add -useDirForEachRow option to create a different output structure (#3879)\n * Make gdal_translate and gdalwarp return non-zero code when block writing failed\n   for some reason (#3708)\n * loslas2ntv2.py : new utility : .los/.las to NTv2 converter\n * gdal_calc.py : new utility\n * Add -tap option to gdal_rasterize, gdalbuildvrt, gdalwarp and gdal_merge.py\n   to align on a standard grid (#3772)\n\nAAIGRID driver:\n * Cast nodata value to float to be consistent with precision of pixel data in\n   GDT_Float32 case; small optimization to avoid reading the first 100K when\n   we know that the datatype is already Float32\n * Allow reading files where decimal separator is comma (#3668)\n * Detect 1e+XXX as a real value among integer values (#3657)\n * Add a AAIGRID_DATATYPE configuration option that can be set to Float64\n * speed-up CreateCopy(), particularly on windows, by buffering the output\n\nAIGrid driver:\n * Support sparse sets of tile files {w,z}001???.adf (#3541)\n\nBSB driver:\n * Capture extension lines for headers\n * Added UNIVERSAL TRANSVERSE MERCATOR, LCC and POLYCONIC handling (#3409)\n * provide an option (BSB_IGNORE_LINENUMBERS) to ignore line numbers as some\n   generators do them wrong but the image is otherwise readable (#3776)\n * Avoid turning missing values to index 255 (#3777)\n\nDODS driver:\n * Compilation fix to support libdap 3.10\n\nDTED driver:\n * Add origin metadata in original format (#3413)\n * Report NIMA Designator field as 'DTED_NimaDesignator' metadata (#3684)\n * Fixes to read some weird DTED3 file\n\nECW driver:\n * Support building against 4.1 SDK (compat with older versions maintained) (#3676)\n * Add alpha support with 4.1 SDK, and various configuration options\n * Add pseudo powers of two overviews.\n\nEHdr driver:\n * Improvements to deal with http://www.worldclim.org/futdown.htm datasets\n\nENVI driver:\n * Support tabulation character in .hdr files (#3741)\n * Support reading gzipped image file (#3849)\n\nERS driver:\n * Read \"Units\" child of the \"BandId\" node and set it as unit type for RasterBand.\n\nFITS driver:\n * Accept files whose metadata list doesn't end with 'END' (#3822)\n\nGeoRaster driver :\n * Suppress error when testing SRID code as EPSG (#3326)\n * Several improvements and fixes (#3424)\n * Deprecates JPEG-B compression (#3429)\n * Fix GetColorInterpretation() on RGBA's alpha channel (#3430)\n * Allows OS authentication (#3185)\n * Add support for Point Cloud, add transaction control wrapper\n * use OCI Bind to load VAT (#3277)\n * Change order of NODATA tag on XML metadata (#3673)\n * Add support for per band NoData value - Oracle 11g (#3673)\n * Add support to ULTCoordinate - (#3718)\n * Fix interleaving cache error (#3723)\n * Fix compress vs nbits order error (#3763)\n * Fix writing interleaved jpeg #3805 and reading default blocksize #3806\n * Add create option blocking=(YES,NO,OPTIMUM) #3807, also fix #3812\n\nGRASS driver:\n * Update GDAL and OGR GRASS drivers to compile against GRASS 7.0SVN (#2953)\n\nGTiff driver :\n * RFC 33 : Adjust PixelIsPoint handling (#3838,#3837)\n * Refresh internal libtiff with upstream\n * Refresh internal libgeotiff with upstream\n * Add PREDICTOR_OVERVIEW configuration option to set the predictor value for\n   LZW or DEFLATE compressed external overviews; Also make sure that the\n   predictor value gets well propagated in the case of internal overviews (#3414)\n * Add a COPY_SRC_OVERVIEWS creation option (for CreateCopy()) that copies\n   existing overviews in the source dataset.\n * Make GetScale() and GetOffset() retrieve values from PAM if not available in\n   internal metadata\n * Use GCP info from PAM if available\n * Support CreateCopy() on datasets with a color indexed channel and an alpha\n   channel (#3547)\n * Allow reading geotransform when opening with GTIFF_DIR prefix (#3478)\n * Add a warning when clipping pixel values for odd-bits band\n * Make sure that 16bit overviews with jpeg compression are handled using 12bit\n   jpeg-in-tiff (#3539)\n * Add GDAL_TIFF_OVR_BLOCKSIZE configuration option to specify block size used\n   for overviews\n * Read RPCs from GeoEye _rpc.txt files (#3639)\n * Implement GetUnitType() and SetUnitType(); make sure to remove\n   TIFFTAG_GDAL_METADATA tag if it existed before and there are no more\n   metadata; fix to make sure we can unset offset & scale stored in PAM\n * Speed-up writing of blocks in case of multi-band 8 bit images\n * Support TIFF_USE_OVR config option to force external overviews\n * Add special ability to for xml:ESRI metadata into PAM\n * Try to detect build-time vs runtime libtiff version mismatch (*nix only)\n * Added logic to expand verticalcs using importFromEPSG() when possible\n * Create internal masks with deflate compression if available\n * Fix jpeg quality propagation (particularly remove warning when\n   using a deflate compressed internal mask band with jpeg compressed main IFD)\n * Add support for JPEG_QUALITY_OVERVIEW configuration option for internal\n   overviews when adding them after dataset reopening\n * auto-promote mask band to full 8 bits by default (unless\n   GDAL_TIFF_INTERNAL_MASK_TO_8BIT is set TO FALSE).\n * add LZMA compression optional support (requires latest libtiff4 CVS HEAD)\n * Supporting writing compound coordinate systems.\n\nGTX driver:\n * New for GDAL/OGR 1.8.0\n * Read NOAA .gtx vertical datum shift files.\n\nGXF driver:\n * Cast nodata value to float to be consistent with precision of pixel data in\n   GDT_Float32 case\n * Introduce a GXF_DATATYPE configuration option that can be set to Float64\n * Use GDALGetScanline() instead of GDALGetRawScanline() so that #SENS\n   is applied to normally return things in conventional orientation as\n   is assumed by the geotransform.  (#3816).\n\nHDF4 driver:\n * Prevent reading nonexistent subdatasets\n * Allow reading 1D subdatasets, in particular for GEOLOC bands\n * Workaround strange test that swaps xsize, ysize and nbands for the particular\n   case of the dataset of ticket #3316\n * Speed up access to HDF4_SDS datasets; allow multi-line block dimension for\n   HDF4_EOS datasets (#2208)\n * HDF4_EOS_GRID : detect tile dimensions and use them as block size; increase\n   HDF4_BLOCK_PIXELS default value to 1,000,000 (#3386)\n * Support reading of L1G MTL metadata (#3532)\n * Read as HDF if HDFEOS returned 0 datasets\n * Improve fetching the geolocation data in case of one-to-one mapping and\n   abcence of dimension maps (#2079)\n * Properly set the GCP projection for MODIS Aerosol L2 Product.\n * Fetch scale/offset, unit type and descriptions for some HDF-EOS datasets.\n\nHDF5 driver:\n * Avoid setting bogus projection if we don't get georeferencing from\n   CreateProjections().  Avoid trying to operate if DeltaLat/Long is zero.\n   Avoid crashing on NULL poH5Object->pszPath in CreateMetadata().  (#3534)\n * Ensure backslashes are preserved in paths for UNC on win32 (#3851)\n\nHF2 driver:\n * New for GDAL/OGR 1.8.0\n * Read and write HF2/HFZ heightfield raster\n\nHFA driver:\n * Ensure that an .aux file created for overviews has AUX=YES set so a\n   base raster will not be created.\n * Various robustness improvements (#3428)\n * Support pulling overviews from an .rrd file even if the .aux does not\n   reference it (#3463)\n * avoid using empty names for layer, if we have one generate a fake name,\n   use for overviews (#3570)\n * Add support for New Zealand Map Grid to HFA driver (#3613)\n * Support EPT_s8 in BASEDATA (#3819)\n * Substantial improvements for Rename/CopyFiles (#3897)\n\nIdrisi driver:\n * Allow color items greater than maximum value (#3605)\n\nJPEGLS driver:\n * New for GDAL/OGR 1.8.0\n * JPEG-LOSSLESS driver based on CharLS library\n\nJP2KAK driver:\n * Allow quality as low as 0.01\n * Major restructuring, all reading now goes through DirectRasterIO (#3295)\n * Introduce YCC optimization\n * Ensure we fetch <= 8 bit images with their true precision (#3540)\n * Make JP2KAK_RESILIENT also turn off persist, and force sequential access (#4336)\n * Fix reading overviews via direct case (#4340)\n\nJP2OpenJPEG:\n * New for GDAL/OGR 1.8.0\n * JPEG2 driver based on OpenJPEG library\n\nJPIPKAK driver:\n * New for GDAL/OGR 1.8.0\n * JPIP driver based on Kakadu library\n\nKMLSUPEROVERLAY driver :\n * New for GDAL/OGR 1.8.0\n * Added new plug-in GDAL Super-Overlay Driver. The driver allows converts\n   raster (like TIF/GeoTIFF, JPEG2000, JPEG, PNG) into a directory structure\n   of small tiles and KML files which can be displayed in Google Earth.\n\nLOS/LAS driver:\n * New for GDAL/OGR 1.8.0\n * Read NADCON .los/.las Datum Grid Shift files\n\nMG4Lidar driver\n * New for GDAL/OGR 1.8.0\n * Read MG4 Lidar point cloud data and expose it as a Raster. It depends on\n   the current, freely-available-though-not-open-source MG4 Lidar SDK v1.1\n\nMrSID:\n * Updated to support MrSID SDK v8.0.0 (compat with older versions maintained) (#3889)\n * Updated to support writing MG4/Raster (#3889)\n * Support reading projection from .met files accompanying NASA LandSat SID files\n\nNetCDF driver:\n * Improve coordinate system support (#3425)\n * Add support for multiple standard_parallel tags to support LCC single\n   standard parallel (#3324)\n * Add CF-1 spheroid tag support for netcdf driver\n * Add support for weather/climate files with pixel size in km\n * Attempt to fix flip image (#3575)\n * Add support for Scale and Offset (#3797)\n\nNITF driver:\n * Ensure that igeolo corners are not messed up if irregular, keep center/edge\n   of pixel location info (#3347)\n * Add capture of select RPF attribute metadata (#3413)\n * Carry raw IGEOLO and ICORDS through as metadata (#3419)\n * Added NITFPossibleIGEOLOReorientation() in an attempt to deal with\n   files written with the IGEOLO corners out of order.\n * Implement readonly support for RSets (#3457)\n * Add capability of writing CGM segment as creation option (or from the source\n   CGM metadata domain if no CGM= creation option); for consistency, also add\n   the capability of writing TEXT segment as creation option, in addition to\n   the existing capability of writing it from the source TEXT metadata domain (#3376)\n * Fix read out of buffer for NBPP < 8 and very small block size; fix decoding\n   of NBPP=4 (#3517)\n * Add FILE_TRE creation option to write TRE content in XHD field of file header\n * Add SDE_TRE creation option to write GEOLOB and GEOPSB TREs. This is limited\n   to geographic SRS, and to CreateCopy() for now\n * Allow using NITF header located in STREAMING_FILE_HEADER DE segment when\n   header at beginning of file is incomplete\n * Improve NITF to NITF translation\n * Fetch TREs from DE segment\n * Support reading CSSHPA DES & extracting embedded shapefile\n * Support writing image comments (ICOM)\n * Add description for NITF file & image header fields in creation options XML\n * Accept A.TOC files with frame entries that have same (row,col) coordinates\n * Avoid erroring out when file or image user TRE size is just 3\n * Load subframe mask table if present (typically, for CADRG/CIB images with IC=C4/M4) (#3848)\n * A few hacks to accept some (recoverable) file inconsistencies (#3848)\n\nNTv2 driver:\n * New for GDAL/OGR 1.8.0\n * Read&write NTv2 Datum Grid Shift files\n\nOZI driver:\n * New for GDAL/OGR 1.8.0\n * Read OZI OZF2/OZFX3 files\n\nPAUX driver:\n * Add support for INTERLEAVE option\n\nPCIDSK2 driver:\n * PCIDSK SDK refreshed from upstream\n * Remove svn:external for pcidsk sdk; Copy it directly in GDAL tree\n * Support for reading and writing descriptions added to the PCIDSK SDK.\n * Add bitmap support\n * Support for reading/writing complex PCIDSK files through libpcidsk\n * Support worldfile if lacking internal georef (#3544)\n * Fix locking state at CPLThreadMutex creation (#3755)\n * Improved projection support.\n\nPDF driver:\n * New for GDAL/OGR 1.8.0\n * Read Geospatial PDF (through poppler library), either encoded according\n   to OGC Best practice or Adobe ISO32000 extensions.\n\nPDS driver:\n * Support quoted SAMPLE_TYPE. Check for UNSIGNED in SAMPLE_TYPE for UInt16.\n * Support files where scanlines are broken over several records.\n * Support newline continuation\n * Recognize ENCODING_TYPE = \"N/A\" (N/A surrounded by double-quotes)\n * Take into account MINIMUM, MAXIMUM, MEAN and STANDARD_DEVIATION when\n   available to set the statistics\n\nPNG driver:\n * Update internal libpng to 1.2.44\n * Internal libpng : Make screwy MSPaint \"zero chunks\" only a warning,\n   not error (#3416).\n * Added ZLEVEL creation option\n\nPostGIS Raster (formerly WKTRaster driver):\n * Improved block reading and raster settings reading in WKT Raster driver\n * Functions SetRasterProperties and GetGeoTransform modified to allow both\n   referenced and not referenced rasters\n * Connection string parsing simplified. Schema, table name and where clause\n   can be passed with or without quotes\n * New parameter \"mode\"\n\nRASDAMAN driver:\n * New for GDAL/OGR 1.8.0\n * Read rasters in rasdaman databases\n\nRMF driver:\n * Significant improvements. Implemented decompression scheme typically\n   used in DEM data.\n\nSRP driver:\n * Relax strict equality test for TSI size for unusual products (#3862)\n\nTerraSAR driver:\n * Enhancements related to GCPs handling (#3564).\n\nUSGSDEM driver:\n * Support non-standard DEM file (#3513)\n\nVRT driver:\n * Preliminary Overview support on VRT bands (#3457)\n * Support for mask band : VRT may expose a mask band,\n   and mask bands can be used as VRTRasterBand sources\n * Port to VSIF*L API; advertise GDAL_DCAP_VIRTUALIO=YES\n * Make format identification less strict (#3793)\n * Support for LocationInfo metadata item on bands\n\nWCS driver:\n * Decode base64 encoded multipart data\n\nWMS driver:\n * Adds a <UserAgent> optional parameter so that the user be able to provide\n   its own useragent string for picky WMS servers (#3464)\n * Default color interpretation for wms driver (#3420)\n * Add UnsafeSSL setting (#3882)\n\nXYZ driver:\n * New for GDAL/OGR 1.8.0\n * Read ASCII XYZ gridded datasets\n\n## OGR 1.8.0 - Overview of Changes\n\nCore:\n * RFC 28 : OGR SQL Generalized Expressions\n * RFC 29 : Support for ignoring fields in OGR\n * Add OGRLayer::GetName() and OGRLayer::GetGeomType() virtual methods,\n   and their C and SWIG mappings (#3719)\n * On Unix, add capability of opening the target of a symlink through OGROpen()\n   even if it not a real filename. Useful for opening resources expressed as\n   GDAL virtual filenames in software offering only file explorers (#3902)\n * Expat based XML readers : add support for reading files with Windows-1252\n   encoding\n * Use transactions in CopyLayer for better speed. (#3335)\n * OGRGeometry::importFromWkt() : allow importing SF-SQL 1.2 style WKT while\n   preserving compatibility with previously recognized non conformant WKT (#3431)\n * Add C functions : OGR_G_ForceToPolygon(), OGR_G_ForceToMultiPolygon(),\n                     OGR_G_ForceToMultiPoint() and OGR_G_ForceToMultiLineString()\n * Add C functions : OGR_G_Length(), OGR_G_Simplify(), OGR_G_Area(), OGR_G_Boundary()\n                     OGR_G_SymDifference() and OGR_G_UnionCascaded()\n * Add C function: OGR_F_StealGeometry()\n * Move Centroid() method from OGRPolygon to OGRGeometry base class to be able\n   to operate on various geometry types, and to be consistent with PostGIS\n   ST_Centroid() capabilities and the underlying GEOS method\n * Make the GetStyleTable() SetStyleTable() SetStyleTableDirectly() methods on\n   datasources and layers virtual (#2978)\n * Add OGRSFDriverRegistrar::DeregisterDriver() and OGRDeregisterDriver()\n * Improve detection of rounding errors when writing coordinates as text with\n   OGRMakeWktCoordinate()\n * OGR SQL: allow comparing datetime columns in WHERE clause\n * OGR indexing: re-use .ind file in read-write mode when calling CreateIndex()\n   but the index was opened as read-only (follow up of #1620); ensure that the\n   .ind file is closed before being unlink()'ed\n * AssemblePolygon: ensure largest area ring is used as exterior ring (#3610)\n * OGRGeometryFactory::createFromGEOS() : preserve coordinate dimension\n   (with GEOS >= 3.3) (#3625)\n * Allow calling transformWithOptions() with a NULL poCT\n * Improve wrapdateline, especially on LINESTRING\n * Fix getEnvelope() for OGRPolygon and OGRGeometryCollection to avoid taking\n   into empty sub-geometries; Fix OGRLayer::GetExtent() to avoid taking into\n   account empty geometries\n * Support attribute index scan with the sql 'IN' operator (#3686)\n * Add attribute index support for the sql queries in mapinfo tab format (#3687)\n * OGRGometry: add a swapXY() virtual method\n * Implement special field support for IsFieldSet\n * OGRLineString::transform() : allow partial reprojection if\n   OGR_ENABLE_PARTIAL_REPROJECTION configuration option is set to YES (#3758)\n * Add OGR_G_ExportToGMLEx() that can take options to enable writing GML3\n   geometries compliant with GML3 SF-0\n * OGRFeature::SetField() : support setting integer and real lists from a\n   string in the format (n:value,value,value,...)\n\nOGRSpatialReference:\n * Big upgrade to EPSG 7.4.1 with improved datum logic\n * Use PROJ 4.8.0 thread-safe functions if available to avoid global OGR PROJ4\n   mutex when doing OGRProj4CT::TransformEx()\n * Support for defining VERT_CS and COMPD_CS from EPSG and from/to PROJ.4\n * Implement OGRSpatialReference:IsVertival() and\n   OGRSpatialReference::IsSameVertCS() methods\n * add RSO gamma handling (proj #62)\n * TMSO support\n * Adjust handling of NAD27 to avoid towgs84 params, use +datum when no towgs84,\n   do not emit +ellipse if +datum used (#3737)\n * exportToProj4() : add +towgs84= instead of +datum= if both information are\n   available. This behavior can be turned off by setting\n   OVERRIDE_PROJ_DATUM_WITH_TOWGS84=NO (#3450)\n * Add PROJ4_GRIDS EXTENSION as a way of preserving datum grids\n * ogr_srs_proj4: add a table for Prime Meridians; improve recognition of prime\n   meridian to export them as names when possible with exportToProj4()\n * importFromProj4(): recognize +f= option\n * Correct handling of Mercator2SP from EPSG (#2744)\n * Make GetAxis() const\n * Improve axis orientation recognition for stuff like EPSG:3031\n * Fix Amersfoort (geotiff #22)\n * Panorama: Added zone number to the list of projection parameters list.\n   Use the zone number when we need to compute Transverse Mercator projection.\n * Panorama: Use Pulkovo 42 coordinate system instead of WGS84 as a fallback\n   if the CS is not specified.\n * ESRI: added support for Mercator in an old style file\n * Add Bonne, Gauss-Schreiber Transverse Mercator, Mercator (2SP), Two Point\n   Equidistant and Krovak to the list of projections description dictionary.\n * SRS validation : various fixes\n * Exposure OSRImportFromERM() and OSRExportToERM() functions in C API.\n * PCI : Fix the transfer of scale for Stereographic Projection (#3840).\n         Add support for Oblique Stereographic (SGDO) (#3841)\n * Substantially upgrade PCI datum conversions using PCI datum/ellips.txt files\n\nVarious drivers:\n * Improve behavior of DXF, VFK, GPX, SHAPE, PG, LIBKML, KML, VRT, CSV, GML,\n   BNA, GeoRSS, GEOJSON drivers when LC_NUMERIC is not the C locale\n\nUtilities:\n * ogr2ogr: copy datasources and layers style table\n * ogr2ogr: use OGRGeometryFactory::forceToMultiLineString() when -nlt\n            MULTILINESTRING is specified\n * ogr2ogr: allow -wrapdateline if neither input or output srs is specified,\n            but input layer srs is geographic\n * ogr2ogr: add -splitlistfields and -maxsubfields options to split fields of\n            type IntegerList, RealList or StringList into as many subfields of\n            single type as necessary.\n * ogr2ogr: accept None or Null as a special value of -a_srs to nullify the output SRS\n * ogr2ogr: ignore -overwrite options if the output datasource does not yet exist (#3825)\n * ogr2ogr: special case when output datasource is a existing single-file Shapefile :\n            auto-fill the -nln argument if not specified (#2711)\n * ogr2ogr: add a -explodecollections option to split multi geometries into several features\n * ogr2ogr: add a -zfield option to set the Z coordinate of a 3D geometry from the value of\n            a field\n\nAeronavFAA driver:\n * New for GDAL/OGR 1.8.0\n\nArcObjects driver:\n * New for GDAL/OGR 1.8.0\n\nBNA driver:\n * Ported to use VSIF*L API\n\nCSV driver:\n * For files structured as CSV, but not ending with .CSV extension, the 'CSV:'\n   prefix can be added before the filename to force loading by the CSV driver\n * Support reading airport data coming from http://www.faa.gov/airports/airport_safety/airportdata_5010\n * If a datasource is created with the extension .csv assume this should be\n   the first layer .csv file instead of a directory\n * Skip empty lines (#3782)\n * Port to VSI*L API for read&write; support writing to /vsistdout/\n\nDGN driver:\n * Correct computation of abyLevelsOccurring (#3554).\n\nDODS driver:\n * Compilation fix to support libdap 3.10\n\nDXF driver:\n * Smooth polyline entity support added\n * Read blocks as a distinct layer instead of inlining\n * Assemble file at end with changes to header template - so far only inserting\n   new layer definitions\n * Support for writing user defined blocks\n * Add limited hatch support\n * Add support for writing linetypes.  Support using complete dxf files as\n   the header or trailer template.\n * Apply the INSERT entity id to all features inserted in its place (#3817)\n * various fixes\n * Implement Win1252/utf8 conversion for dxf text\n * Fix issues with text angles, text escape and multiline text\n * add support for \\U+xxxx unicode chars in labels\n\nGeoJSON driver:\n * Add reader to parse JSON output of FeatureService following GeoServices REST\n * Read and write \"id\" member at feature object level\n * Various robustness fixes to avoid crashes\n * Fix combined spatial and attribute filtering (#3803)\n\nGeoRSS driver:\n * Ported to use VSIF*L API\n * Recognize <gml:MultiPoint>, <gml:MultiLineString> and <gml:MultiPolygon>\n * Support reading GeoRSS inside <rdf:RDF>\n\nGML driver:\n * Adding support for xlink:href. (#3630)\n * Add support for Polish TBD GML\n * Support reading <gml:Curve>, <gml:MultiCurve>, <gml:TopoCurve>,\n   <gml:TopoSurface>, <gml:Ring>, <gml:Surface>, <gml:PolygonPatch>,\n   <gml:pointMembers>, <gml:curveMembers>, <gml:surfaceMembers>\n   <gml:Triangle>, <gml:Rectangle>, <gml:Tin/gml:TriangulatedSurface>,\n   <gml:Arc>, <gml:Circle> elements in GML3 geometries\n * Recognize <gml:Solid> and <gml:CompositeSurface>, <gml:OrientableSurface> elements\n   (dealt as an approximation as multipolygons, and not as volumes)\n * Add support for \"complex structure flattening\" of attributes, and OFTStringList,\n   OFTRealList and OFTIntegerList field types in case of multiple occurrences of\n   a GML element (such as UK Ordnance Survey Mastermap) (#3680)\n * Add support for CityGML generic attributes <stringAttribute>, <intAttribute> and\n   <doubleAttribute>\n * Various improvements for better support of AIXM 5.1\n * Write and retrieve layer geometry type to/from .gfs file (#3680)\n * Support using the <GeometryElementPath> to retrieve the appropriate geometry in\n   case several ones are available per feature\n * Use VSIF*L API for read&write\n * XSD reader : various improvements, in particular to support various types of schema\n   returned by WFS DescribeFeatureType\n * XSD writer: change the default GeometryPropertyType to a more precise type name\n   according to the layer geometry type\n * Write valid <gml:MultiGeometry> element instead of the non-conformant\n   <gml:GeometryCollection>. For backward compatibility, recognize both syntax for\n   the reading part (#3683)\n * Support reading SRS per layer when possible, and deal with urn:ogc:def:crs:EPSG::xxx\n   geographic coordinate systems (as returned by WFS 1.1.0 for example) to restore\n   (longitude, latitude) order (unless GML_INVERT_AXIS_ORDER_IF_LAT_LONG is set to NO)\n   Also add a GML_CONSIDER_EPSG_AS_URN option that can be set to YES when EPSG:XXXX should\n   be considered as urn:ogc:def:crs:EPSG::XXXX\n * Expose gml:id as a string field when reading <wfs:FeatureCollection>\n * Add dataset creation option FORMAT=GML3 to write GML3 SF-0 compliant data\n * Add dataset creation option SPACE_INDENTATION=YES/NO to optionally disable space indentation\n   when writing GML.\n * Recognize GML answer of MapServer WMS GetFeatureInfo request\n * Fix datatype detection to fallback to Real when an integer cannot fit into a 32bit int (#3866)\n * GML/WFS : use SRS defined in global gml:Envelope if no SRS is set for any feature geometry\n\nGMT driver:\n * Add support for multilinestring reading (#3802)\n\nGPSBabel driver:\n * New for GDAL/OGR 1.8.0\n * Read/Write files supported by GPSBabel utility\n\nGPX driver:\n * Port write side of the driver to VSIF Large API\n * Add LINEFORMAT dataset creation option\n * Allow writing track points and route points with their own attributes by\n   writing point features in track_points and route_points layers\n\nHTF driver:\n * New for GDAL/OGR 1.8.0\n * Read Hydrographic Transfer Format (HTF)\n\nIngres driver:\n * Implement support for spatial reference systems (atrofast, #3159)\n * Added support for GEOMETRYCOLLECTION as a generic geometry type, and\n   fleshed out the layer creation logic to support all geometry types.\n\nKML driver:\n * KML vertex output: avoid warning for coordinates just above 90 and 180\n   degrees due to numerical imprecisions\n * Port to VSI*L API for write\n\nLIBKML driver:\n * New for GDAL/OGR 1.8.0\n * Alternate KML driver relying on Google libkml\n\nMITAB driver:\n * Use \",\" for the OGR Feature Style id: parameter delimiter, not \".\" as per\n   the spec.\n * Synchronized with mitab CVS HEAD\n * Fixed crash when trying to get the same mitab feature twice\n\nMSSQLSpatial driver:\n * New for GDAL/OGR 1.8.0\n * Read/write support for MS SQL Spatial databases\n\nNAS driver:\n * New for GDAL/OGR 1.8.0\n * Reads the NAS/ALKIS format used for cadastral data in Germany\n\nOCI driver:\n * Allows OS authentication (#3185)\n * Uppercase table_name on SQL queries #1960 - OCI: ogr2ogr with append option\n   is not considering layer creation\n * Support creation of non-spatial tables (#3690)\n * Set MULTI_LOAD as default #3656, for new layer and update\n\nOGDI driver:\n * Add OGR_OGDI_LAUNDER_LAYER_NAMES configuration option to simplify reported layer names\n * Fix GetFeatureCount() when used with SetAttributeFilter()\n\nOpenAir driver:\n * New for GDAL/OGR 1.8.0\n * Read Special Use Airspace in OpenAir format\n\nPCIDSK driver:\n * Implement creation/update and coordinate system support\n\nPDS driver:\n * New for GDAL/OGR 1.8.0\n * Read NASA Planetary Data Systems TABLE objects\n\nPGeo driver:\n * Add PGEO_DRIVER_TEMPLATE option\n\nPGDump driver:\n * New for GDAL/OGR 1.8.0\n * To output PostgreSQL SQL dump (very similar to shp2pgsql utility)\n\nPostgreSQL driver:\n * Add support for PostgreSQL >= 9.0 new binary data format\n * Use canonical (HEXEWKB) form to get geometry to speed-up feature retrieval.\n   WKT-based retrieval can still be used if PG_USE_TEXT configuration option\n   is set to YES\n * If the PG_USE_BASE64 configuration option is set to YES, geometries will be\n   requested as BASE64 encoded EWKB instead of canonical HEX encoded EWKB.\n   (useful when bandwidth is the limiting factor)\n * Don't instantiate layer defn at layer creation. This can speed up\n   significantly database opening when they are many tables and the user just\n   needs to fetch one with GetLayerByName().\n * Implement efficient OGRLayer::GetName() and OGRLayer::GetGeomType()\n * Allow creating layer with eType = wkbNone\n * Don't require to have found a layer in readonly mode to succeed in opening\n   the datasource.\n * Add TEMPORARY (ON/OFF) layer creation option to create TEMPORARY tables\n * CreateLayer() : don't launder schema_name if passed string is schema_name.table_name,\n   and when testing if the layer already exists prepend or remove the\n   schema_name to the table_name when comparing to layer names\n * Handle Nan and Inf values for float types in INSERT, UPDATE and\n   COPY SQL commands. (#3667)\n * Retrieve the FID of a newly inserted feature (#3744)\n * Remove use of deprecated PostGIS functions when running against PostGIS 2.0SVN\n\nS57 driver:\n * Avoid crashing if there is a missing VRPT field in a vector record.\n\nSOSI driver:\n * New for GDAL/OGR 1.8.0\n * Read Norwegian SOSI-standard\n\nShapefile driver:\n * Use VSI*L API for .prj file so it works in virtual circumstances (#3536).\n * CreateLayer(): Check that the layer doesn't already exist\n * Implement multipatch read support\n * Remove ESRI style spatial indexes from Shapefile on update via OGR (#2798)\n * Fix conflict between spatial and attribute indexes (#3722)\n * Create integer fields with unknown width as 10 characters instead of 11\n   to avoid them getting immediately considered to be real when reopening (#2151)\n * Make 'ogr2ogr -overwrite dst.shp src.shp -nln dst' work when dst.shp already exists\n\nSQLite driver:\n * Spatialite : use MBRIntersects operator instead of MBRWithin (#3810)\n * Spatialite: avoid executing some Spatialite functions several times when\n   issuing SQL queries\n * Add a INIT_WITH_EPSG dataset creation option to fill the spatial_ref_sys\n   table with content of EPSG CSV files (default to NO); several fixes to be\n   robust to single quote characters in SRS strings\n * Fix to make CopyLayer() work when src layer is a SQL result layer (#3617)\n * Add OGR_SQLITE_SYNCHRONOUS configuration option that, when set to OFF,\n   can speed up considerably write operations (e.g. on EXT4 filesystems),\n   at the expense of extra robustness w.r.t system crashes.\n * Spatialite: when creating a spatialiate DB, add a srs_wkt column in the\n   spatial_ref_sys table, as introduced in libspatialite 2.4.0\n * Implement the DeleteLayer() interface and report the ODsCDeleteLayer capability\n\nSUA driver:\n * New for GDAL/OGR 1.8.0\n * Read Special Use Airspace in Tim Newport-Peace's format\n\nVRT driver :\n * Fix GetExtent() on non VGS_Direct VRT layers (#3783)\n\nWFS driver:\n * New for GDAL/OGR 1.8.0\n * WFS client that brings read & write (WFS-T) support for WFS 1.0.0 and 1.1.0\n\n## SWIG Language Bindings\n\nGeneral :\n * Add Geometry.Length(), Geometry.Area(), Geometry.Simplify(), Geometry.UnionCascaded(),\n   Geometry.SymDifference, Geometry.Boundary()\n * Add SpatialReference.GetUTMZone()\n * Add Geometry.ForceToPolygon(), Geometry.ForceToMultiPolygon(),\n       Geometry.ForceToMultiPoint() and Geometry.ForceToMultiLineString()\n * Add Band.SetScale() Band.SetOffset(), and Band.SetUnitType()\n * Add ogr.RegisterDriver() and ogr.DeregisterDriver()\n * Move ogr.GeometryTypeToName() and ogr.GetFieldTypeName() from Java bindings\n   to all bindings\n * Initialize return values of GetRasterStatistics() so that we know if they\n   have been updated\n * Add Feature.SetFromWithMap()\n * Add gdal.GridCreate() (#3661)\n * Expose OSR GetSemiMajor(), GetSemiMinor(), GetInvFlattening() and\n   ImportFromERM() functions\n\nCSharp bindings:\n * Use the .NET Framework 2.0 transparency rules (level 1 transparency) for the\n   VC2010 builds (#3559)\n * Fix GDAL_DMD_ and GDAL_DCAP_ constants for Csharp (#3601)\n\nJava bindings:\n * Add GdalGrid.java, GDALContour.java\n * Add 'make test' target for Unix/Windows\n\nPerl bindings:\n * Support polygons in TransformPoints.\n * Test for existence of capability before comparison (avoid unnecessary warning)\n * Added CAPABILITIES lists to driver, datasource and layer classes;\n   Capabilities and TestCapability methods return and use strings as documented\n   already earlier; added FIELD_TYPES, JUSTIFY_TYPES, GEOMETRY_TYPES and\n   BYTE_ORDER_TYPES lists into appropriate classes\n * \"create\" constructor for FeatureDefn\n * Add aliases Equals and Intersects as mentioned in #3492\n * Changes to support RFC 30\n * Add bindings for ReadDir, Stat, FillNodata\n * Simple support for PostGIS HEX EWKB (remove/add SRID)\n * The Schema method of FeatureDefn returns a schema, where each field hash contains\n   also key 'Index' and the field index as the value.\n\nPython bindings:\n * Fix compilation of Python bindings with Python 3.X on 64 bit platform\n * Optimize Band.ReadRaster() and Dataset.ReadRaster() to avoid extra buffer\n   copy; also add the capability to pass the result buffer such as\n   result_buf = ' '; ReadRaster(0, 0, 1, 1, buf_obj = result_buf) (#3521)\n * NumPy Band.WriteArray() : use numpy object directly instead of converting to\n   string\n * Band.ReadAsArray() : instantiate the numpy object before calling RasterIO()\n   instead of creating it from a string\n * NumPy : add support for signed byte\n * Make sure that feat.SetField('field_name', double_value) goes through\n   OGR_F_SetFieldDouble() instead of being first converted to string\n * Add an optional parameter can_return_null to Dataset.GetGeoTransform();\n   when used and set to True, None is returned when GDALGetGeoTransform()\n   returns CE_Failure (instead of the fake (0,1,0,0,0,1)); backward\n   compatibility preserved when the parameter isn't specified\n * Avoid suppressing warnings and errors when exceptions are used (#3632)\n * Add gdalinfo.py, ogrinfo.py and ogr2ogr.py as sample scripts, direct ports\n   of corresponding C/C++ utilities\n * Allow manipulating buffer > 2 GB on 64bit builds for ReadRaster() and WriteRaster()\n * Map gdal.GetCacheMax(), gdal.SetCacheMax() and gdal.GetCacheUsed() to the\n   corresponding 64bit new API\n * Reset error status before new GDAL/OGR call when using gdal.UseExceptions() (#3077)\n * Changes to support RFC 30\n * Fix Feature.ExportToJson() (#3870)\n\n# GDAL/OGR 1.7.0\n\n(Some of the bug fixes mentioned below might also have gone into 1.6.X maintenance releases.)\n\n## In a nutshell...\n\n* New GDAL drivers : BAG, EPSILON, Northwood/VerticalMapper, R, Rasterlite,\n                     SAGA GIS Binary, SRP (USRP/ASRP), EarthWatch .TIL, WKT Raster\n* GDAL PCIDSK driver using the new PCIDSK SDK by default\n* New OGR drivers : DXF, GeoRSS, GTM, PCIDSK and VFK\n* New utility : gdaldem, gdalbuildvrt now compiled by default\n* Add support for Python 3.X. Compatibility with Python 2.X preserved (#3265)\n* Remove old-generation Python bindings.\n* Significantly improved GDAL drivers: GeoRaster, GeoTIFF, HFA, JPEG2000 Jasper, JPEG2000 Kakadu, NITF\n* Significantly improved OGR drivers: CSV, KML, SQLite (SpatiaLite support), VRT\n* WARNING: incompatibility between MrSID GeoDSDK and libgeotiff 1.3.0 or internal libgeotiff on some platforms (see #3309)\n\n## GDAL/OGR 1.7.0 - General Changes\n\nBuild (All) :\n * Add gdalbuildvrt to the list of utilities built by default (#2747)\n * Improve Mingw compatibility (#2649)\n * Add Expat read support for GML driver when Xerces is unavailable (#2999)\n * Fix GML and ILI reading problems with Xerces 3.x (#3156)\n * Add 8/12bit JPEG-in-TIFF support\n * Fix trunk compilation against libdap 3.9.X (#3105)\n\nBuild (Windows) :\n * Check for CURL_LIB instead of CURL_DIR\n * ensure OGR_ENABLED gets defined if INCLUDE_OGR_FRMTS set (#2784)\n * Change quoting in VCDIR and SETARGV to avoid likely problems.\n * added dll and target-lib targets\n * fix _findfirst handle type for win64 (#3035)\n * Add support to compile OGR-postgis as a plugin (#3125)\n * Trap failures in subdirectories and stop build\n\nBuild (Unix) :\n * Use proper object file names when building prerequisites lists (#1878)\n * Updated man page generation\n * Add new ./configure test to check that the GCC 4.1 built-in functions for atomic memory access are really available\n * Handle external libz (#2942)\n * Add support for 64bit file i/o on BSD systems, through fseeko/ftello\n * Add support for linking against libspatialite to benefit from spatial functions in SQL queries (#2666)\n * Fix support for --with-threads configure option on BSDs (tested on DragonFlyBSD 2.2.1)\n * Add support for autodetection of ogdi 3.2 in ./configure (#3007)\n * Remove additional dependency to libgdal.so added during linking in gdal/apps (#2970)\n * Improved ax_oracle_oci.m4 macro to handle libnnzXX for Oracle 10 and 11.\n * support using the Oracle Instant Client SDK\n * Make --with-ingres work with newer versions (#3126)\n * Search for alternative HDF4 flavor in HDF4 testing macro. Alternative HDF4\n   (libmfhdfalt/libdfalt) build is NetCDF-compatible and used in Debian.\n * Support MacOSX \"fat\" binary building\n\nPort :\n * Provide API and implementation for thread and SMP safe atomic increments (#2648)\n * Add /vsisubfile virtual file driver\n * Added gzip write implementation\n * VSI ZIP : Allow natural chaining of VSI drivers without requiring double slash\n * Add a shortcut when looking for .csv files that are already open\n * Add CPLSetThreadLocalConfigOption()\n * Add CPLIsUTF8() and CPLForceToASCII(); Use them in GML, KML, GPX and GeoRSS drivers (#2971)\n * Add CPLStrlcpy() and CPLStrlcat(), clones of BSD strlcpy() and strlcat() functions\n * Add CPLStrnlen()\n * Add CSLLoad2() and CPLReadLine2L() with max number of lines and chars per line allowed\n * cplkeywordparser.cpp: Support parsing IMD files with values of the form list of lists\n * odbc: Fixed the null terminators for columns of length (x*511)+1, where x>1. (#2727)\n * unix VSIF*L : reworked to avoid unnecessary seeks which can be expensive\n * added HTTPAUTH and USERPWD options for http fetch (#3091)\n\n## GDAL 1.7.0 - Overview of Changes\n\nAlgorithms:\n * cutline : optimize by clipping cutline to region of interest (#2736)\n * cutline : avoid scanline to scanline blending problems (#2740)\n * rasterfill : substantially reworked\n * rasterfill : deprecate bConicSearch option - unused\n * rasterize : optimized\n * rasterize : Added GDALRasterizeLayersBuf() function to rasterize geometries directly\n               into the supplied raster array.\n * rasterize : Add ALL_TOUCHED rasterize option (#2840)\n * rasterize : Added 3D support for rasterizing points and lines. (#3202)\n * rasterize : correct case of vertical/horizontal lines on raster right/bottom edge (#3268)\n * Added GDALCreateGenImgProjTransformer3() function\n * warp: Reduce destination file size, especially when it has compression (#1688)\n * warp: Fix crash when reprojecting to irrelevant SRS (#3079)\n * warp: avoid using the destination nodata value for integer datatypes (#3142)\n * warp: fix panDstValid generation, and avoid using it improperly (#3222)\n * warp: Restore support of reprojection of a lat-long image crossing 180E/180W longitude (#3206)\n * contour: Fix name of GDAL_CG_Create in contour.cpp (#2795)\n * contour: Generate contours with correct orientation (#3129)\n * gdalgeoloc: Improve geoloc backmap interpolation (#2501)\n * overview: added support for cubic convolution overviews\n * gdal_grid: 3 new metrics: data point count, average distance between data points\n              and a grid node, average distance between data points.\n * gdal_grid: Properly cast the poOptions parameter in data metrics computation functions. (#3207)\n\nCore :\n * Added mechanism to clear overviews if zero overviews requested. Implemented by GTiff and HFA drivers (#2915)\n * Support for overviews in subdatasets\n * Support for overviews in proxydb directory (#2432)\n * SetColorTable(NULL) is permitted and means delete (#2421)\n * Preserve NBITS and SIGNEDBYTE in CreateCopy() for supporting drivers (#2902)\n * GDALCopyWords() : performance optimizations\n * Add GDALCheckDatasetDimensions() and GDALCheckBandCount()\n * Add GDALGetColorInterpretationByName()\n * Use tiff .ovr for overviews if .aux is just metadata (#2854)\n * Add missing argument in function declaration for GDALRATTranslateToColorTable()\n * Do not use colortable for bit2grayscale overviews (#2914)\n * Support world files with blank lines (ESRI Merge)\n * Add worldfiles in GetFileList() (ESRI Merge)\n * Fix rpb/imd loading with a path (#3047)\n * Add support for using overviews in GDALDataset::BlockBasedRasterIO() (#3124)\n * Take into account SIGNEDBYTE for GetStatistics() & GetHistogram() (#3151)\n * Add GDALReadOziMapFile() and GDALLoadOziMapFile() to read projection\n   and georeferencing information from OziExplorer .MAP files.\n * Added declarations for GDALLoadTabFile() and GDALReadTabFile()\n * Add missing case for CInt16 and CInt32 in GDALNoDataMaskBand and GDALNoDataValuesMaskBand\n\nUtilities :\n * gdaldem: new for GDAL/OGR 1.7.0 (#2640)\n * gdalinfo:\n    - add -norat switch\n    - do not report RPC or GEOLOCATION metadata with -nomd\n    - Use pretty wkt to display GCP projection\n * gdalwarp:\n    - fix cutline blend distance setting (#2733)\n    - in -te case, adjust the resolution after computing the image dimensions\n    - improved cutline support (#2733, #2847, #2884, #2984)\n    - avoid overwriting an existing destination file that cannot be opened in update mode with a new GTiff file\n    - better heuristics to guess output extent when projection from lat/long world\n      extent to other world global projections (#2305)\n * gdaltindex:\n    - Avoid unnecessary error message in gdaltindex when creating a new shapefile (#2779)\n    - Rewritten to use OGR API instead of ShapeLib API, so as to produce .prj files more easily (#982)\n * gdal_contour:\n    - make -3d option work even after -fl option (#2793)\n    - Call GDALGetProjectionRef() on the dataset, not the raster band (#3062)\n * gdalbuildvrt:\n    - Add -separate, -allow_projection_difference, -te, -tr, -q, -addalpha options\n    - Add -srcnodata and -vrtnodata options (#3254)\n    - Add -hidenodata option (#3327)\n    - Avoid accidental overwriting of a non VRT dataset due to reversed filename order\n    - Fix -resolution lowest/highest (#3198)\n * gdaladdo: add -clean option (#2915)\n * gdaladdo: add -q option\n * gdal_grid: Add support for spatial filtering with -clipsrc option\n * gdal_translate: support translation of a dataset with subdatasets if the parent has bands\n * gdal_translate: Add 'gray' as a value of -expand rgb option\n * gdal_translate: Add -unscale commandline option\n * gdal_merge.py: Add progress report\n * gdal_vrtmerge.py: Fix -separate case (#2836)\n * gdal_vrtmerge.py: Write the <SourceProperties> element (#1985)\n * gdal_retile.py: add lanczos resampling (#2859)\n * gdal_fillnodata.py: ensure dstfile support works by copying source (#2866)\n * GDAL2Tiles: --srcnodata support + fixed KML rendering for -p raster\n * rgb2pct.py: Added ability to use a preexisting color table from a file (#2958)\n * pct2rgb.py and rgb2pct.py : Copy the GCPs and their projection to the target dataset.\n * classify.py: Fix order of args to numpy.ones() and numpy.zeros() (#3089)\n * hsv_merge.py: New sample script to greyscale as intensity into an RGB image,\n                 for instance to apply hillshading to a dem colour relief.\n * support filename globbing for various Python scripts (#2783)\n * --formats will add 'v' in report on drivers that support virtual io\n * all utilities and scripts : consistently advertise -q as the official quiet\n                               option, but accept both -q and -quiet (#3820)\n\nChanges in various drivers :\n * Implement support for overviews on subdatasets for HDF4, HDF5, NetCDF, NITF, XPM, TERRAGEN, PCIDSK (#2719)\n * Add support for 64bit offsets in /vsisubfile, JPEG and JP2ECW drivers\n * External overviews support added to some drivers (JDEM, ...)\n * Avoid incorrect GEOGCS AXIS settings (#2713)\n * Use GDALCheckDatasetDimensions() and GDALCheckBandCount() in various drivers\n * Many memory leak fixes (HDF5, HKV, Leveler, MFF, NITF, RMF, JPEG2000, WCS ... drivers)\n * Many fixes to improve robustness against corrupt data in many drivers\n * Error out when trying to open a read-only dataset in update mode (#3147)\n * Ensure that the same JPEG2000 driver that has been used with CreateCopy() is used to re-open it (#1596)\n\nADRG driver:\n * Support PSP != 100 (#3193)\n\nAIG driver:\n * Differ opening of the RAT only when GetDefaultRat() is called.\n   Will improve performances and make less likely the error message of #3031\n\nAAIGRID driver:\n * Fix bad reading of AAIGRID dataset whose last line doesn't have a linebreak character (#3022)\n * Make the ArcInfo ASCII driver more Mac-compatible. (#3212)\n\nBAG driver :\n * New for GDAL/OGR 1.7.0\n\nBLX driver:\n * Implement progress callback in CreateCopy() (#2830)\n\nBMP driver:\n * Modify GetGeoTransform() to return geotransform based on the resolution\n   information in the BMP header if nothing else is available (ESRI merge).\n * use pam functions properly for geotransform when not using world file\n\nBSB driver:\n * Fix several issues with BSB files reading (#2782)\n * Handle properly more than 256 GCPs (#2777)\n * Add logic to chip GCPs around to avoid split over dateline problems (#2809)\n * Add logic to reproject GCPs into Mercator for mercator projected images.\n\nDTED driver:\n * Re-enable DTED driver to recognize files not starting by a UHL record (#2951)\n\nECW driver:\n * Enable the JP2ECW driver to open JP2 files with the VSILAPI\n * Fix build with MSVC2008  (#2850)\n * Fix memory overwrite while zooming an ECW image (#2934)\n * Speed-up de-registration of the driver that can take up to 3 seconds (#3134)\n\nEHDR driver:\n * Add color table update.  Add limited support for floating point\n   files (.flt) (ESRI Merge)\n * added support for SIGNEDBYTE pixels (#2717)\n * Restructure stats handling so pam capture works right when stx write fails\n * improve a bit .clr reading (#3253)\n\nENVI driver:\n * Move RPC info into the RPC domain (#3063)\n * Converted to using VSI Large File API (#3274)\n * re-enabled complex support (#3174)\n\nEPSILON driver:\n * New for GDAL/OGR 1.7.0\n * Mainly used coupled with Rasterlite\n\nERS driver:\n * Added PIXELTYPE support to report/create SIGNEDBYTE (#2902)\n * Give precedence to PAM SRS, and even check for .aux file.  (ESRI Merge)\n\nFAST driver:\n * Support 7 bands (#3307)\n\nFujibas driver:\n * Fix to work on big-endian hosts\n\nGenBin driver:\n * Implemented custom class for 1bit (U1) files (#2730)\n * Fix inverse flattening computation (#2755).\n * Added U2 and U4 support\n * Look for LSB, assuming MSB if not found (#2730)\n\nGeoRaster driver:\n * Fix compression problems\n * Add MaskBand support\n * Support UNICODE metadata\n * Support cross database schema/user access\n * add COORDLOCATOR create option\n\nGeoTIFF driver :\n * Add 8/12bit jpeg in tiff support\n * Add support for creating external BigTIFF overview files,\n   with BIGTIFF_OVERVIEW configuration option. (#2785)\n * Add support for deleting a color table (#2421)\n * Add logic for Imagine citation parsing\n * Add logic for encoding and reading ESRI PE string from citation.\n * Add support for reading and writing vertical datum info from geotiff\n * Changes to units handling.  (#2755)\n * Optimize opening speed by deferring fetching the coordinate system till GetProjectionRef (#2957)\n * Optimize GTiffRasterBand::IReadBlock() for multi-band interleaved case.\n * Avoid unnecessary re-writing the TIFF directory (#3021)\n * Use official value for inverse flattening of the WGS84 ellipsoid (#2787)\n * Add metadata domain for XML documents (#2786)\n * Make GTiff driver friendly with files with huge number of bands and pixel interleaving (#2838)\n * Avoid precaching other bands if block cache size is not big enough to accommodate them (#2838)\n * Internal libtiff (4.0.0beta5) and libgeotiff (1.3.0beta) upgraded\n * use the SetCitationToSRS call for the PCSCitationGeoKey in a similar fashion to the GTCitationGeoKey (#2933)\n * NBITS set for GTiffOddBits.  YCbCr JPEG added as a compression type.\n   generate MINISWHITE IMAGESTRUCTURE metadata item.  Set missing blocks\n   to the nodata value if there is one.  (ESRI Merge)\n * Support GeoTIFF with only ProjectedCSTypeGeoKey defined (#3019)\n * External overviews: try to preserve the bit depth of the original image\n * Allow reading and creation of big all-in-one-strip 8bit TIFF (#3094)\n * Handle projection methods for Google Mercator special case (#3217)\n\nGFF driver :\n * Fix support for big endian host (#2832)\n * Add pam, and overview support.  Switch to VSI*L API to support virtualio (#3014)\n\nGIF driver :\n * Introduced a BIGGIF driver to handle GIF files without using the\n   slurp into memory approach. (#2542)\n * CreateCopy() reports now progress\n * Replace internal libungif by giflib-4.1.6 (#1825)\n * Read projection and georeferencing from OziExplorer .MAP file if possible.\n\nGRASS driver:\n * Add support for GRASS 7.0 GDAL and OGR plugins (#2953)\n * Use GRASS_GISBASE for GDAL GRASS driver instead of hard-coded path (#2721)\n\nGRIB driver:\n * only scan for PDS templates in GRIB2 files (#2858)\n * Avoid dumping GribLen debug message if built with -DDEBUG.\n * Remove verbosity from GRIB driver (#2887)\n * Make GRIB detection thread safe (#3209)\n * Check that bands have the same dimensions (#3246)\n\nGS7BG driver:\n  * Recognize version 2 datasets (#3123)\n\nHDF4 driver :\n * Allow HDF4 subdataset name to include Windows letter drive (#2823)\n\nHDF5 driver :\n * subdatsets need to be numbered from 1 not 0 (#2462)\n * Block size recognition. (#2270)\n * Fix initial value for nGCPCount in HDF5ImageDataset (#2774)\n * Fixes to type classification, and to avoid listing subdatsets for unsupported pixel data types (#2941)\n * Mark PAM for not saving .aux.xml files at this level.  Directly open\n   subdatasets in HDF5Dataset::Open() if there is only one subdataset.\n\nHFA driver:\n * Support reading and evaluating 3rd order xforms (#2716)\n * Various improvements to SRS support, particularly to preserve PE\n   compatibility.  (#2755)\n * Added HFAEntry::RemoveAndDestroy() method to remove nodes from tree (#2421)\n * Added support for deleting color tables (#2421)\n * Add a scaled progress monitor for HFADataset::IBuildOverviews()\n * Fix HFA u2 compression/decompression (ESRI merge)\n * Add support for reading compressed s8 HFA (#3152)\n * Defer opening overviews till they are first requested (#3155)\n * Support multiple excluded values (#3252)\n * added a variety of additional coordinate system based types missing in some files (#3262)\n * Various fixes (#2421, #2842, #2755, #3082, #2730)\n\nIdrisi driver:\n * Writing text file in CRLF format (#3199)\n * forward porting esri changes + other changes\n * provide default values on Create() (#3243)\n\nINGR driver:\n * Fix INGR driver that was failing on big endian hosts (#2898)\n * Fix RLE support (#3106)\n * Added overview building (#2904)\n\nJPEG driver:\n * Enable the JPEG driver to read and create 12bit JPEG images when JPEG12_ENABLED=yes\n * Internal libjpeg: additional changes to ensure operation with IPP enabled apps (#2606,#2845)\n * JPEG read optimizations : differ extraction of EXIF metadata and internal maskband\n\nJPEG2000 (JasPer) Driver:\n * Allow proper reading of JP2 images where dimensions are not multiple of 256 (#2399)\n * Add a virtual I/O interface to able to read from/write to JPEG2000-NITF files\n * Do not deregister jas_image_clearfmts() to avoid failure when gdal_translat'ing from JP2 streams\n * Add proper reading of YCbCr images as RGB\n * fix decoding of bit depth for BPCC and PCLR boxes\n\nJP2KAK (Kakadu) Driver :\n * Fix band selection from ycbcr to rgb converted images in DirectRasterIO (#2732)\n * Support jpc vsisubfile streams\n * add handling of reversibly compressed data with 9 to 16 bits precision (#2964)\n * Modify transfer_bytes() buf32 case to offset/scale based on precision. (#2964)\n   Fixed _WriteTile() lossless 16bit case to avoid improper 32K offset.\n   Added support for NBITS image structure metadata, and creation option.\n * Added logic to limit tiles to 64K due to jpeg2000 limitation. (ESRI Merge)\n * Fix offsetting of 16U buf32 data (#3027)\n * Support 16u/16s imagery through DirectRasterIO interface (#3049)\n * Support external overviews as an override to internal overviews\n * Rework jp2kak support to use natural kakadu builds (Windows build)\n * ensure external overviews get used if available (#3276)\n * add preliminary multi-threading read support via DirectRasterIO()\n\n\nLAN driver:\n * Give preference to PAM coordinate system since built-in info is very\n  limited.  Fallback to PAM geotransform if internal missing. (ESRI Merge)\n\nLCP driver:\n * Add projection file support (#3255)\n\nMEM driver:\n * Allow creating bands of more than 2GB each if size_t is large enough.\n * Added GetInternalHandle() implementation to fetch band memory buffer\n\nMrSID driver:\n * Implement faster resampling for 1:1 case\n * Improve stream implementation so it works for jp2 with v7\n * Make the JP2MrSID driver accept .ntf extension to allow reading jpeg2000\n   datastream in NITF files\n * Avoid reporting large metadata objects.  Add MG version to metadata.\n\nNetCDF driver:\n * Fix handling of pixel validity mask (#3112)\n * correct a problem with 5+ dimensional data access (#2583)\n * fix y flip detection in common case (#2654)\n * add support for subdataset names with Windows full path names, like NETCDF:D:\\...\n\nNITF driver:\n * Add support for reading & creating large (>4GB) NITF files.\n * Add support for NITF/JPEG2000 overviews (JP2KAK)\n * Add support for reading & creating 12bit JPEG compressed NITF files when JPEG12_ENABLED=yes\n * Add support for creating a NITF file with many bands and big TRE content\n * Add support for creating several uncompressed images in a NITF file (#2989)\n * Add support for creating M3 (masked multi-block JPEG compressed) images\n * Add support for unpacking a wider variety of pixel depths.\n * Add support for overriding IGEOLO with GEOLOB TRE precision georef (#3180)\n * Add support for for CFloat32 reading & writing (#2526)\n * Add support for reading and writing NITF file with large single block (#3263)\n * Allow Jasper driver to be used for NITF IC=C8 (JPEG2000) CreateCopy() if JP2ECW is not available\n * Allow JP2MrSID driver to be used for reading JPEG2000 datastreams in NITF\n * Avoid issues when reading M3 single block images\n * Fix CreateCopy() of multi block JPEG-NITF\n * Various bugfixes (#2940, #2912, #3029, #3088)\n * Support NITF file with a color table and JPEG2000 data content (#3110)\n\nNWT_GRC / NWG_GRD drivers (Northwood/VerticalMapper) :\n * New for GDAL/OGR 1.7.0\n\nOGDI driver:\n * improve finding of PROJ.4 include files for OGDI (#1242)\n\nPCIDSK driver (old driver):\n * Added worldfile reading. Added PAM fallback for geotransform.\n * Added support for default overviews (i.e. .ovr or .rrd).  (ESRI Merge)\n * fail somewhat gracefully on compressed images\n\nPCIDSK driver (new driver):\n * New for GDAL/OGR 1.7.0, using the PCIDSK SDK\n\nPDS driver:\n * Transfer various keywords to metadata\n * Made keyword handler more in complaint with ODL (#2956)\n * Support detached files with an offset (#3177)\n * Support .LBL labelled compressed files\n\nPNG driver :\n * Upgrade internal libpng to 1.2.35\n * Only write a world file if the source datasource has a geotransform\n * Allow writing a nodata value of 0 as the transparent color value (#3208)\n\nR driver:\n * New for GDAL/OGR 1.7.0\n\nRasterlite driver\n * New for GDAL/OGR 1.7.0\n\nRIK driver:\n * Improved error checking\n\nSAGA GIS Binary driver:\n * New for GDAL/OGR 1.7.0\n\nSDE driver :\n * Fix exporting ArcSDE raster results in a displaced image (#2063)\n\nSRP driver (ASRP/USRP):\n * New for GDAL/OGR 1.7.0\n\nSRTM driver :\n * Set GDALMD_AOP_POINT metadataitem (#1884)\n\nTIL driver (EarthWatch .TIL) driver:\n * New for GDAL/OGR 1.7.0\n\nVRT driver :\n * Honour the INIT_DEST warp option (#2724)\n * Improve performance of LUTs in VRTComplexSource from O(n) to O(log2(n)) (#3003)\n * Implement (advertized in doc) support for SetMetadataItem( \"source_0\", szFilterSourceXML, \"vrt_sources\" ) on a VRTSourcedRasterBand (#3052)\n * Implement GetFileList() to list the source files\n * Fix wrong initialization of destination buffer in VRTSourcedRasterBand::IRasterIO() in case of not standard pixel/line spacing. (#2867)\n\nWCS driver:\n * do not try to parse HTML content, which is returned by some provider when the server doesn't exist\n * added HttpAuth and UserPwd options for authentication (#3091)\n\nWKT Raster driver:\n * New for GDAL/OGR 1.7.0\n\nWMS driver:\n * Support TMS/formatted URLs in WMS minidriver (#2878)\n * Be tolerant if we have required 3 bands and got 4, or the other way round\n * Declare a user agent string\n\n## OGR 1.7.0 - Overview of Changes\n\nUtilities:\n * ogrinfo: Preserve order of source layers specified on ogrinfo command line,\n            and use GetLayerByName() which enables to read some hidden layers\n            like public.<table> layers from a PG database (#2922, #2026)\n * ogr2ogr:\n    - Add -clipsrc and -clipdst option to clip geometries to the specified extents\n    - Add -fieldTypeToString option to conveniently cast any fields of given type to fields of type string (#2968)\n    - Add -progress option for ogr2ogr to displaying progress (#2998)\n    - Add -wrapdateline option to ogr2ogr to deal with geometries that cross 180 degree longitude (#3158)\n    - Add -dialect flag to specify SQL dialect\n    - Preserve order of source layers specified on command line (#2922)\n    - -overwrite and -append now automatically imply -update (#3048)\n    - Support converting to a format after field name \"laundering\" (#3247)\n  * ogrtindex:\n    - Skip layers whose schema does not match instead of terminating (#3141)\n    - Add a -accept_different_schemas option for non-MapServer use cases (#3141)\n    - Set SRS to tileindex when one is found in the tiles\n  * ogr2vrt.py : new script that will create a VRT corresponding to a\n    source datasource (sample script for the moment, not promoted officially)\n\nCore :\n * Improved OGR feature style (#2875, #2808)\n * Considerable speed-up of ExportToWkt() for very large geometries\n * Added new OGR_GEOM_AREA special field (#2949)\n * ensure forceToMultiLineString() works for MultiPolygons (#2735)\n * Various fixes in OGR SQL engine (r16116, #2996, #2788, #3143, #3144)\n * Add OGREnvelope::Intersect()\n * Add OGR_G_ApproximateArcAngles() for ellipses\n * Fix crash on Ubuntu 8.10 in GetFieldAsString() because of (too) strict guard logic (#2896)\n * add field type max so we can iterate through all possible values\n * Avoid making a 2D5 geometry from a 2D only linestring when reprojecting\n\nOGRSpatialReference :\n * Upgrade EPSG derived files to EPSG 7.1\n * Added support to operate on COMPD_CS coordinate systems\n * Added support for importing spatial reference definitions from the OziExplorer .MAP files.\n * Introduce static methods to destroy OGRSpatialReference and OGRCoordinateTransformation objects\n * Expose more of the axis orientation API to C\n * Add missing Eckert 1, 2, 3 and 5 projections\n * Fix typos in proj4 conversion for Wagner projections\n * Hack in EXTENSION nodes for Google Mercator (#3136)\n * Validates PROJCS with AXIS definitions (#2739)\n * Added support for urn:ogc:def:crs:OGC::CRS:84 (and CRS:83, CRS:27) per WMS spec.\n * Wide variety of improvements to preserve PE strings through a morphFromESRI()\n   and morphToESRI() process (#2755)\n * Fix inversion of dictionary filename and GEOGCS/PROJCS name in OGRSpatialReference::exportToERM() (#2819)\n * Fix SpatialReference::IsSame() for LOCAL_CS case (#2849)\n * Fix bug in ImportFromXML that prevented from retrieving projection method\n * Accept both href and xlink:href in OGC XML\n * improve us foot translation handling (#2901)\n * OGRSpatialReference::importFromUrl() : add a default 10 second timeout to avoid waiting forever when remote server is stalled\n * ensure we can translate mercator1sp with non-zero origin to proj4 (#3026)\n * ensure scalefactor preserved in somerc translation (#3032)\n * SRS_ESRI: attempt to correct equidistant cylindrical parameter morph (#3036)\n * SRS_ESRI: improve plate_carree parameter morphing (#3036)\n * SRS_PCI : Fix PCI projection string handling for UTM\n * esri_extra.wkt: correct equidistant conic definitions (#3086)\n * SRS_PANORAMA : Added support for British National Grid and Pulkovo 1995 datums.\n * Improve recognition of WKT text strings when translating into proj4 hard-coded datum names, in particular nzgd49\n   (also add ggrs87, carthage, hermannskogel, ire65); Fix ellipsoid parameters for modified airy (#3104)\n * OSRGetEllipsoidInfo() available for various OGR SRS modules\n * added support for OGC:CRS84 and similar srses from wms/wcs spec in SetFromUserInput (#3090)\n\nBNA driver :\n * Fix output of BNA driver with polygons with inner ring (#2985)\n * Proper CRLF output on Windows (#3256)\n\nCSV driver :\n * Add support for reading and writing CSV files with semicolon or tabulation\n   as the field separator (#2925, #2136)\n * Add automatic treatment of WKT column as geometry\n * Add 'CREATE_CSVT' layer creation option\n\nDXF driver :\n * New for GDAL/OGR 1.7.0\n\nGeoconcept driver:\n * Fix 'private Class and SubClass headers are inverted' (#2919)\n * Fix error in writing 2.5D/3D export file (#2921)\n\nGeoJSON driver:\n * updated JSON-C library to version 0.9\n * use VSIF*L API\n\nGML driver :\n * Speed-up considerably parsing of GML coordinates in big geometries, in particular on Windows\n * Add support for gml3.1.1 srsDimension attribute, to deal with 3D geometries (#2311)\n * Support multiple <gml:pos> elements in linearrings of polygons (#3244)\n * Limited support for GML3\n * Support direct use of FIDs as long as they are all numeric or they have a completely fixed prefix (#1017)\n * Fix OGRGMLLayer::GetFeatureCount() if there's a .XSD file available (#2969)\n * Added support for out-of-band attributes on features (for NAS)\n * Adding the date field type to xsd writer and precision info for OFTReal fields. (#2857)\n\nGPX driver:\n * Add GPX_SHORT_NAMES configuration option to make the GPX driver report shorter field names\n   and avoid duplicated field names once translated to shapefile (#2966)\n * Write the <bounds> element (write only)\n * Avoid escaping XML content when writing <extensions>.\n * Add appropriate xmlns when detecting Garmin GPX extensions\n\nGRASS driver:\n * Do not report 3D geometries for 2D GRASS maps (#3009)\n\nGTM (GPSTrackMaker) driver :\n * New for GDAL/OGR 1.7.0 (#3113)\n\nILI driver :\n * Improved curve segmentation algorithm\n * ILI1: Support for multiple point geomtries\n * ILI1: Support Real and Integer column types\n\nIngres driver:\n * Utilize the new OGC based ingres capabilities (#3159)\n\nKML driver:\n * Support reading MultiGeometry and layers with mixed geometry type.\n * Speed-up considerably the reading of huge KML geometries (#3005)\n * Speed-up considerably with huge number of layers\n * Moved the location of the Style element to match the OGC Schema (#2858)\n * Advertise 25D geometry type when relevant (#1803, #1853, #2181)\n * Relax KML driver about xmlns (#3004)\n\nMySQL driver :\n * Fix mysql driver compilation with mysql 5.1/g++-4.3.2 (Mandriva 2009.1) (#2972)\n * Fixed bug MySQL driver truncating decimal places for double field type. (#2852)\n\nOCI driver :\n * OCI varchar2 columns can be up to 4000 bytes (#2876)\n\nODBC driver :\n * make it slightly less likely that the srs_tablename parsing will interfere with complex DSNs.\n * support for schemas (#1969)\n\nOGDI driver :\n  * fix to avoid applying old spatial filter to unrelated layer\n  * fix to force ResetReading() when changing current layer\n\nPGEO driver :\n * Recognize more ESRI shape type constants. (#2991, #3100)\n * implement GetFIDColumn() and GetGeometryColumn() methods (#2694)\n\nPostgreSQL driver:\n * Add support for tables with 'geography' column type introduced in PostGIS 1.5 (#3216)\n * Extend support of schemas in PG driver with 2 new options in the connection string:\n   active_schema=foo and schemas=foo[,bar] (#522 and #525)\n * Implement OGRPGTableLayer::CreateFeature() by using UPDATE instead of DELETE + INSERT (#2557)\n * Implement SetNextByIndex() for layers of PG datasources (#3117)\n * Support PG 'real' data type in tables (#3006)\n * Speed-up PG database opening by avoiding 2 SQL requests per table\n * Avoid evaluating GetFieldIndex() on each field of each feature,\n   which can be very expensive if the layer has many fields\n * allow ST_AsBinary with non binary connections\n * added a configuration option PG_SKIP_VIEWS.\n\nGeoRSS driver :\n * New for GDAL/OGR 1.7.0 (#2726)\n\nOCI driver:\n * support blob column binding\n\nPCIDSK driver :\n * New for GDAL/OGR 1.7.0\n\nShape driver :\n * Handle duplicate field names in shapefile driver. (#3247)\n * Support for opening and handling .DBF files > 2 GB (#3011)\n * Optimize to use shape bounds for spatial test before organizing poly (#2775)\n * Support for alternate date format (#2746)\n * Improve/fix TestCapability() on OGRShapeLayer\n * Refreshed shapelib from upstream\n\nS57 driver :\n * Fix incorrect return value of GetFeatureCount() on S57 SOUNDG layer when SPLIT_MULTIPOINT=ON;\n   also avoid warning on that layer when ADD_SOUNDG_DEPTH=OFF (#3163)\n\nSQLite driver:\n * Add creation and write support in SpatiaLite-compatible databases\n * Add SPATIAL_INDEX creation option for SpatiaLite tables if linked against\n   libspatialite (default to YES)\n * Implement OGRSQLiteTableLayer::TestCapability(OLCFastFeatureCount)\n * Implement OGRSQLiteLayer::GetFIDColumn() and GetGeometryColumn()\n * Implement TestCapability(OLCRandomRead)\n * Add a SQLITE_LIST_ALL_TABLES configuration option to list all(non-spatial)\n   tables into a SQLite DB even if there are spatial tables\n * Avoid reporting the primary key column as a regular column.\n * Better precision for double values in CreateFeature()\n\nVFK driver:\n  * New for GDAL/OGR 1.7.0\n\nVRT driver:\n * Allow fast spatial filtering in the VGS_Direct case\n * Add support for CreateFeature(), SetFeature() and DeleteFeature() operations\n * Added field definition and style control\n * Added new vrt/schema creation capability (@dummy@ datasource, ogr2vrt.py script)\n * Implement 'SrcRegion' element\n * Add a 'reportSrcColumn' attribute to the 'GeometryField' to avoid reporting\n   the x,y,wkt or wkb source fields in the VRT layer field definition\n * Forward TestCapability(), GetExtent(), SetNextByIndex() to source layer when possible\n\nXPlane/Flightgear driver:\n * Improve handling of Bezier curves (#3030)\n * Support new file names used by XPlane 9.00 & later\n * Cut into 2 pieces airway segments that cross the antemeridian\n * Add new layer 'Stopway' that contains the shape of the stopway/blastpad/over-run of a runway\n * Recognize code 16 and 17 for seaplane bases and heliports and add a new field to APT layer\n\n## SWIG Language Bindings\n\nGeneral:\n * Recommended SWIG version is 1.3.39\n * Added API :\n    - GDAL :\n        gdal.FilldoData(), gdal.FileFromMemBuffer(), gdal.Unlink()\n        gdal.ApplyGeoTransform(), gdal.InvGeoTransform()\n        Band.GetUnitType(), Band.GetBand()\n        Band.ComputeStatistics(), Band.HasArbitraryOverviews()\n        RasterAttributeTable.GetLinearBinning()  and SetLinearBinning()\n        extend [Band|Dataset].[ReadRaster|WriteRaster] to accept pixel, line and band spacing parameters\n    - OGR:\n        ogr.GeneralCmdLineProcessor(), Geometry.Segmentize(), FieldDefn.GetTypeName(),\n        Geometry.ApproximateArcAngles()\n    - OSR :\n        osr.ImportFromMICoordSys(), osr.ExportToMICoordSys(), SpatialReference.Clone()\n        osr.EPSGTreatsAsLatLong(), osr.ImportFromEPSGA()\n * Make resampling an optional parameter for gdal.RegenerateOverview(),\n   to be consistent with gdal.RegenerateOverviews()\n * NONNULL checks have been added to check various arguments of methods\n * add missing constants : DCAP_VIRTUALIO, color interpretations, OGR constants\n\nCSharp bindings :\n * Add support for GetFieldAsStringList, GetFieldAsDoubleList and\n   GetFieldAsIntegerList in the C# wrapper (#2839)\n * Support MSVC2008 builds with the csharp interface (#2862)\n * Change the dll mapping rules to support the recent MONO versions\n * Use GC pinned arrays instead of the double copy in the RasterIO functions (#3073)\n * Add typemaps to support custom CPLErrorHandler via C# swig bindings\n\nPerl bindings :\n * in Polygonize make a local copy of the parameters as they are potentially edited\n\nPython bindings :\n * Add support for Python 3.X. Compatibility with Python 2.X preserved (#3265)\n * Remove old-generation Python bindings.\n * Add Python binding's version description capabilities (#3137)\n * NUMPY : Make Band|Dataset.ReadAsArray() take into account preallocated array (#2658, #3028)\n * Various memory leaks fixed\n * Fix gdal.RegenerateOverviews(), Feature.GetFieldAsStringList(),\n   Feature.GetFieldAsIntegerList(), Feature.GetFieldAsDoubleList(),\n   Transform.TransformPoints and CoordinateTransformation.TransformPoints\n * Extend python TransformPoints typemap to accept any sequence (#3020)\n * Make Geometry iterable (#1886)\n\nJava bindings (general changes):\n * Maintained again. A lot of changes to get them into clean state.\n * RasterIO API : added API for standard Java arrays in addition to DirectByteBuffer\n * Javadoc available at http://gdal.org/java\n\n# GDAL/OGR 1.6.0\n\n## GDAL/OGR 1.6.0 - General Changes\n\nBuild (Unix):\n * Added basic support for LDFLAGS\n * Try prefix/lib before prefix/src for proj.4 linking (#1345)\n * Allow specification of a python binary for --with-python (#2258)\n * Added NAS driver config support\n * Fixed Expat detection problem on MinGW (#2050)\n * Fix INST_DATA setting (/share/gdal instead of /share) (#2382)\n * Build MSGN driver on Unix-like platforms\n * Added MSG driver support to configure.in. EUMETSAT Wavelet Transform software is only detected on request, option --with-msg specified.\n * Improve cross-compilation\n * Fix linking with HDF4 library when configuring with --with-hdf4 or --with-hdf4=yes (#2602)\n * Fixes for compilation with GCC 4.3\n\nBuild (Windows)\n * Default to non-debug builds.  Use /GR in pre 1400 builds so that dynamic_cast doesn't just cause an blowout.  Use .pdb file with version embedded.\n * Make vc++ builds usable from mingw (#2216)\n * Updated nmake.opt for building with Visual C++ adding /W3 flag for release build and /W4 for debug build.\n * Add VS Makefile for GDAL and OGR DODS drivers (#2383)\n\nBuild (All)\n * Remove support for \"Panorama\" GIS SDK (#2669)\n\nPort:\n * RFC 19: Added VSIMalloc2() and VSIMalloc3() API and use them in GDAL drivers\n * RFC 23: Added implementation of recode API\n * Added infrastructure to detect bad arguments to printf-like functions\n * Added CPLHashSet data structure\n * Added quad tree implementation derived from shapelib & mapserv\n * Added support for reading on-the-fly .gz files and .zip files (#1369)\n * Added CSLFindName()\n * Added two new flags to CSLTokenizeString2() function: CSLT_STRIPLEADSPACES and CSLT_STRIPENDSPACES to strip leading and ending spaces from the token.\n * Added CSVGetNextLine() to fetch next record based on just csv filename\n * Added CPL_ACCUM_ERROR_MSG=ON for CPLQuietErrorHandler\n * Added CPL_MAX_ERROR_REPORTS config option (#2409).\n * Added CPL_INLINE macro\n * Added UNREFERENCED_PARAM macro to cpl_port.h.\n * Added CPLGenerateTempFilename()\n * Improve performance of CPLParseXMLString from O(n*n) to O(n) where n is the number of siblings node\n * Fix bug with url encoding in CPLEscapeString() (#2314)\n * Various fixes in CPLList implementation (CPLListInsert and CPLListRemove) (#2134)\n * VSIMEM: added path normalization so everything is converted to forward slashes\n * VSIMEM: prevent file extension, or write/update to files opened in readonly mode\n * cpl_path.cpp: Add CPLAssert to check that the string inputs are not the result static buffer\n\nUtilities:\n * Added a --utility_version that displays the version of GDAL used for compiling the utility and add runtime checks to see if GDAL library is compatible with the utility version\n\n## GDAL 1.6.0 - Overview of Changes\n\nCore :\n * RFC 22 : Added RPC and IMD support\n * Added support for computing statistics for datasets with arbitrary overviews in GDALRasterBand::ComputeStatistics()\n * Added Gaussian resampling in overview building (#2137)\n * Added Mode resampling in overview building (#2347)\n * Allow fast NONE overview generation (#2677)\n * Added in GDALRasterBand::GetRasterSampleOverview() and ComputeRasterMinMax() (#2148)\n * Preliminary gmljp2 specific changes to address axis orientation (#2131)\n * Added GDALProxyDataset and GDALProxyRasterBand abstract classes to be able to make proxy datasets and raster bands\n * Added a proxy dataset class, GDALProxyPoolDataset, that differ at the maximum the opening of the underlying dataset and keep the number of simultaneous opened underlying datasets under a limit (similar to what is done in the RPFTOC driver)\n * Migrate GDALRegenerateOverviews() to C API\n * Added GDALDestroyDriver()\n * Added special case in GDALCopyWholeRaster to be more friendly when writing a tiled compressed GeoTIFF (massive reduction of destination file size)\n * Added GDALRegenerateOverviewsMultiBand to process all the bands at the same time to optimize the generations of compressed pixel-interleaved overviews (such as JPEG-In-TIFF). Optimization triggered in some cases for external and internal GeoTIFF overviews. PHOTOMETRIC_OVERVIEW and INTERLEAVE_OVERVIEW config options added for external overviews. -ro option added to gdaladdo to generate external overviews for GeoTIFF. Result : divide by 2 to 3 the size of JPEG-In-TIFF overviews on big RGB datasets\n * Add a new class GDALNoDataValuesMaskBand to create a per-dataset nodata mask band (GMF_PER_DATASET | GMF_NODATA) when the metadata item NODATA_VALUES is found on the dataset (#2149)\n\n * Fix segfault when building overviews with --config USE_RRD YES (#2145)\n * PAM: save floating point nodata in IEEE floating point binary format\n * Fix division by zero in GDALGetRandomRasterSample (#2429)\n * GDALOpen: Use EOVERFLOW if defined otherwise use hardcoded likely values (#2437)\n * Replace implementation of arrays for maintaining the list of opened shared datasets by a CPLHashSet to avoid O(n*n) complexity\n * Fix GDALRasterBand::IRasterIO fails to read data from dataset when block cache is too small (#2457)\n * Modify GDALFindAssociatedAuxFile() to only select .aux files that have the same raster configuration as the target dataset (PxLxB).  (#2471).\n * When available use arbitrary overviews for computations in GDALRasterBand::ComputeRasterMinMax() and GDALRasterBand::GetHistogram().\n * Fix crash in GDALValidateCreationOptions when passed a creation option not in format key=value (#2499)\n * Fix 'GDALNoDataMaskBand::IReadBlock doesn't behave correctly when eWrkDT != eDataType' (#2504)\n * Use nodata masks when generating overviews (#2149)\n * Improve error propagation when GDALRasterBlock::Write() fails (#2524)\n * gdalnodatamaskband: add case for uint16 and uint32 as uint32 - fixes neg. nodata values for these\n * Add a special case for dealing with RasterIO expansion on writes (#773)\n * Add GDALValidateCreationOptions() checks in GDALDriver::Create() and GDALDriver::CreateCopy(). Can be disabled with GDAL_VALIDATE_CREATION_OPTIONS=NO\n * Optimization of GDALCopyWords for transfer from buffer of packed bytes to buffer of bytes with interleaving (#2536)\n * Use BlockBasedRasterIO in GDALDataset::IRasterIO for pixel-interleaved datasets when source and destination have the same size (#2536)\n * PAM: Allow empty category in .aux.xml  (#2562)\n * GDALDataTypeUnion(): Add missing GDT_CInt16 case that was triggering a CPLAssert(FALSE) (linked to #2564)\n * PAM: improve the find existing histogram logic to check approx and out of range\n * Fix validation of values for creation option parameters of type float\n * Fix memory leak related to PAM histograms\n * Restrict dataset sharing to a one thread by tracking owning pid (#2229)\n * rasterio.cpp: Handle >2GB memory arrays on a 64-bit build (#2199)\n\nAlgorithms:\n * Added GDALPolygonize() function\n * Added sieve filter\n * Add implementation of raster hole filler\n * Added proximity algorithm implementation\n * Added GDALRasterizeLayers() function to rasterize the all the features in the list of layers rather than individual geometries.\n * Added support for point geometries rasterization\n * Added line rasterization routine.\n * Added GDALCreateGenImgProjTransformer2()\n\n * warper: massive upgrade that fixes number of problems with Cubic Spline and Lanczos resamplers, multiple performance improvements.\n * Implement overview building for paletted rasterbands with average resampling by selecting the nearest entry after averaging on R,G,B components (#2408)\n * Fix destination coordinate system setting logic in GDALReprojectImage (#2231)\n * Modify GDALChecksum to give it a deterministic behavior when given a GDT_[C]Float[32|64] rasterband with NaN and Inf values. The result is backward compatible with previous implementations with finite values\n * Add options to RPC transformer, use for RPC_HEIGHT offset\n * TPS : fix uninitialized variables (#2300), fix wrong behavior with negative coordinates  (#2615)\n * gdalgeoloc.cpp : Fix crash in GDALCreateGeoLocTransformer if X_DATASET, etc... cannot be opened (#2434)\n * warper: Prevent crashes when srcAlphaBand and dstAlphaBand are wrong\n * Fix tiling in gdal_grid and output of geotransform when -txe and -tye not specified (#2508)\n * warper: Wait for the threads to complete before leaving GDALWarpOperation::ChunkAndWarpMulti() (#2518)\n * warper: When warping an RGBA image whose borders have alpha=0, avoid writing alpha=255 with bilinear, cubic, cubic spline resampling\n * warper: Properly set a resample window size for Cubic Spline kernel. (#2414)\n * gdalsimplewarp.cpp: fix pointer array allocation (#2586)\n\nUtilities:\n * gdal_lut.py: New for 1.6.0. Sample app applying a greyscale lookup table\n * gdal_polygonize.py : New for 1.6.0\n * gdal_proximity.py : New for 1.6.0\n * gdal_sieve.py: New for 1.6.0\n * densify.py: New for 1.6.0. A generic Translator class for ogr2ogr-like operations that can be easily overridden for special translation operations\n * gdalflattenmask : New utility to merge regular data bands with the mask bands, for applications not being able to use the mask band concept. (Not compiled by default)\n * gdal2ogr: New for 1.6.0. to create an OGR datasource from the values of a GDAL dataset; May be useful to test gdal_grid and generate its input OGR file (Not compiled by default)\n\n * Fix crash in gdalenhance\n * Add -nln switch for gdal_contour\n * gdalgrid: Fixed zero search radius handling in nearest neighbor interpolation method.\n * gdalgrid: Added support for data metrics (minimum, maximum and range) computation.\n * gdalgrid: Added spatial filter support applied on the OGR data source\n * gdalgrid: Added ability to read values from the attribute field using the \"-zfield\" option.\n * gdalgrid: fix crash on features with NULL geometry or when no point geometry is found on a layer (#2424)\n * esri2wkt.py: Fix esri2wkt for NG python bindings (#2548)\n * Build testepsg utility by default when OGR is enabled (Ticket #2554).\n * gdaltranslate: new -expand rgb|rgba option to make color table expansion\n * gdaltindex: Use correct index variable name\n * gdal2tiles.py: Bug fix: switched axes in BoundingBox of tilemapresource.xml.\n * gdal2tiles.py: Bug fix: wrong Origin in tilemapresource.xml.\n * gdal2tiles.py: New version of GDAL2Tiles (SoC 2008 - GDAL2Tiles Improvements)\n * gdal_retile.py: Some minor enhancement optionally storing the  georeferencing data of created tiles in a csv file\n * gdal_vrtmerge.py: add support for NODATA\n * gdalinfo: Don't show RAT if -nomdd is used.\n * gdalinfo: Display checksums on overviews when -checksum is specified\n * gdalinfo: Display whether the mask band has overviews\n * ogr2ogr: reset -gt to 1 with -skipfailures, document -gt (#2409)\n * ogr2ogr: Output error messages on stderr to be consistent; Make error message about failed reprojection more clearer (hopefully); Advertise the use of -skipfailures in error message (#2588)\n * nearblack: Add support for scanning from top and bottom as well as from the sides.\n * Prevent crash in gdalwarpsimple utility and in GDALSimpleImageWarp() when source dataset has no raster band\n * gdal_rasterize: check that coordinates systems match (Ticket #1937)\n * gdalwarp: Add cutline support\n\nVarious drivers:\n * Reports GDAL_DCAP_VIRTUALIO=YES for drivers supporting it (#2193)\n * Add warnings in CreateCopy() methods for drivers not supporting color tables (#1939)\n * Simplify and harmonize how ESRI world file extensions are handled for BMP, GIF, JPEG, PNG and GTiff drivers (fix #1734)\n * Windows : enable bigtiff by default when using internal libtiff (#2257)\n * Added plugin building support for ECW, MrSID, HDF5, NetCDF, FITS and SDE drivers.\n * fix case of capabilities xml elements to match properly (#2322)\n * Add ALPHA creation option in the list of creation options\n\nAAIGrid Driver:\n * Re-fix nodata test when determining AAIGrid data type (Ticket #2107).\n * fix yllcorner computation (#1794)\n * mark driver as supporting virtualio.\n * Fix wrong data type used to read the source band AAIGCreateCopy (#2369)\n * Add DECIMAL_PRECISION creation option for AAIGRID (#2430)\n\nADRG driver:\n * Initialize PAM to avoid creating .aux.xml file when gdalinfo an ADRG dataset\n * Prevent opening in update mode && fix reading of blocks in creation mode\n * Prevent error message coming from ADRG driver when trying to open in update mode a non-existing dataset\n * Avoid error reporting and subsequent failure on some DIGEST files where the last record ends in a non-standard way\n\nBLX Magellan Topo driver:\n * New for 1.6.0 (#2254 and #2570)\n\nBSB driver:\n * Add support for alternate palettes via config option\n * Fix Valgrind warning about read of uninitialized memory; Replace a CPLAssert by a test in case of corrupted dataset; Remove static buffer in BSBReadHeaderLine to improve thread-safety\n * Update BSB write support to use VSIF*L API (still disabled by default); fix palette handling (last color entry was lost); add GCP/Geotransform writing\n\nCOSAR driver:\n * Initialize integral variables to prevent failure of test condition in case file read operation fails; clean signed/unsigned mismatch warning.\n * Additional tests to protect against corrupted datasets\n\nDIMAP driver:\n * Fix use of static CPL buffers\n * Implement GetFileList() and support for opening directory for DIMAP format\n * Add metadata at the raster band level by reading the Spectral_Band_Info tag\n\nDODS driver:\n * Add using namespace libdap for version 3.8.2 (#2404)\n\nDTED driver:\n * Add the GDAL_DTED_SINGLE_BLOCK config option to make a single block of a whole DTED file. This can speed-up a lot scanline oriented algorithms (#1909)\n * Add support for DTED products strictly following MIL-D-89020 that was buggy\n * Fix compilation without CPL\n * Improve thread safety\n\nECW driver:\n * Fix memory leaks (#2210)\n * Be more careful deciding what geotransforms to ignore (#1935)\n * Rename ecw plugin gdal_ECW_JP2ECW.so/dll (#2320)\n * Properly set default nPixelSpace and nLineSpace in ECWRasterBand::IRasterIO().\n * Added pixel data type checking in ECWCreateCopy() (#2593).\n\nEHDR driver:\n * Port EHDR driver to large file API (by apetkov) (#2580)\n\nEIR (Erdas Imagine Raw format) driver:\n * New for 1.6.0\n\nENVI driver:\n * fix problems with old/new state plane zone codes (#2227)\n\nERS driver:\n * add support for HeaderOffset keyword (#2598)\n\nFAST driver:\n * Order the GCP in TL, TR, BR, BL order to benefit from the GDALGCPsToGeoTransform optimization\n * Add support for Euromap FAST datasets for IRS-1C/IRS-1D PAN/LISS3/WIFS (#2329)\n * Fix USGS projection decoding for EOSAT FAST format Rev C (#2381)\n * Add support for detection of FAST IRS P6 and CARTOSAT-1 band filenames\n\nFITS driver:\n * Fix crash in FITS when dataset has metadata; Fix 2 minor Valgrind warnings (#2396)\n * Fix crash on int32 test case in fits.py for 64-bit GDAL build (#2579)\n\nGeoRaster driver:\n * New for 1.6.0\n\nGFF driver:\n * Close file pointer in dataset destructor\n\nGIF driver:\n * Disable opening of large files which hang GDALOpen() (#2542)\n\nGRASS driver:\n * Fix obvious memory leaks in GRASS driver (#2537)\n * fix to use G_free() instead of free() (#1983)\n\nGRIB driver:\n * Moved from spike to trunk: grib now standard, but support --without-grib option\n\nGSAG driver:\n * Prevent crash on huge number of rows\n * Prevent Valgrind warnings on bogus short GSAG files\n * Major update to correct upside problems, removing Create (#2224, #1616, #2191)\n\nGS7BG driver:\n * Fixed geotransformation matrix calculation (#2132)\n * Properly read the header on big-endian system.\n * Fix bigendian support (#2172)\n\nGTiff driver:\n * Add support for reading and writing embedded nodata masks of a TIFF file (TIFFTAG_SUBFILETYPE=FILETYPE_MASK)\n * Added SUBDATASETS support\n * Add the ability to create files with PHOTOMETRIC=PALETTE.\n * Add the ability to update palette on existing files (#2421)\n * Enforce PROFILE properly for Create (#1527)\n * Add support for reading a CMYK TIFF. By default, it will be opened with the RGBA interface (CMKY->RGBA translation done by libtiff. Said to be *very* crude), unless 'GTIFF_RAW:' is specified before the filename. In that later case, the CMYK bands will be presented. Also add support for translating to a CMYK TIFF too : the source dataset must have CMYK bands. No colorspace translation is done\n * Internal libtiff : refresh from upstream libtiff\n * Added GTiffSplitBitmapBand to treat one row 1bit files as scanline blocks (#2622)\n * Don't use GCS if it is less than 1 (#2183).\n * Modified so that the RGBA interface is not used for YCbCr mode JPEG compressed data.  Set JPEGCOLORMODE to RGB at the point a directory is read to avoid error report if doing it later during writing.  This fixes the GDAL 1.5.0 issues with writing YCbCr JPEG compressed data (#2189).\n * Fix memory leak in gt_wkt_srs.cpp\n * Prevent crash in GTiff driver in case we cannot GDALOpen the newly create-copied file\n * Fix buffer overflow when calling GTIFDirectoryInfo in GTIFGetOGISDefn (#2372)\n * add special handling for 24bit data which gets byteswapped by libtiff (#2361)\n * Replace hard-coded 3 byte increment by iPixelByteSkip in int24 gtiff decoding (#2361)\n * Cleaunup frmt/gtiff directory by removing unused files. Move TIFF_WriteOverview to gt_overview.cpp. Create gt_overview.h to declare TIFF_WriteOverview and GTIFFBuildOverviewMetadata\n * Add a ENDIANNESS creation option to GTiff driver for debug purpose mostly\n * Fix writing of blocks on TIFF files in non-native endianness (#2398)\n * Push extra bands of pixel interleaved data into block cache (#2435)\n * Improve integration with PAM metadata loading and saving (#2448)\n * Fix potential buffer overflow in GTIFAngleStringToDD (committed in upstream libgeotiff) - #2228\n * Fix GTiffOddBitsBand::IWriteBlock with GDT_UInt16/32; Error properly with GDT_Float32; Support creating files with NBITS>8; Handle NBITS=1 IReadBlock/IWriteBlock in GTiffOddBitsBand; Prevent subtle IReadBlock/IWriteBlock round-tripping bug for NBITS<8 (#2360)\n * Set the TIFFTAG_COMPRESSION compression before asking the default strip size, so that in the case of JPEG compression, the correct strip height is selected (either 8 or 16). Tested with libtiff-3.8.2 and internal libtiff\n * Prevent crash on tiff_ovr_9 when JPEG-In-TIFF support is not built\n * In GTiffDataset::Create(), set TIFFTAG_JPEGCOLORMODE=JPEGCOLORMODE_RGB when creating a TIFF with COMPRESS=JPEG and PHOTOMETRIC=YCBCR; In Crystalize(), backup the value of TIFFTAG_JPEGCOLORMODE and set it again after writing the directory (#2645)\n * Handle more gracefully the case where we open or create a TIFF file with a compression method not built in libtiff (use of TIFFIsCODECConfigured)\n * Don't fail when TIFFTAG_JPEGCOLORMODE tag cannot be read\n * IPP libjpeg compatibility changes (#2606)\n * ensure zip/jpeg quality is preserved in crystalize. (#2642)\n * support handling nodata via pam/aux mechanisms (#2505)\n * ensure TIFFFlush() is called in FlushCache() (#2512)\n * Replace Crystalize() by SetDirectory() in GTiffDataset::IBuildOverviews() so that 2 consecutive ds.BuildOverviews() calls work without needing to close and reopen the dataset in between\n * Prevent crash when disk is full\n * Add detection of big-endian bigtiffs when BIGTIFF_SUPPORT is *NOT* defined\n * Add missing ScaleAtCenter parameter for Hotine Oblique Mercator when writing the geotiff keys\n * Added logic to pre-clear geotiff tags when updating a file (#2546)\n * Add ExtraSample tag in overviews too (#2572)\n * Fix handling of non-degree angular units (#601)\n\nGXF driver:\n * Add GXFRasterBand::GetNoDataValue (fix #835)\n * Avoid crash on bogus GXF file\n\nHDF4 driver:\n * add support for projected NRL products (#2225)\n * make a block consist of several scanlines for SDS case to speed up (#2208)\n * Add H4ST prefix to names of HDF4SubdatasetType enumeration values. (#2296).\n * Remove useless and dangerous redefinition of sincos in HDF-EOS (#2494)\n * Added compatibility definitions for HDF 4.2 library (#2609)\n * Read HDF raster images containing in HDF-EOS datasets (#2656)\n\nHDF5 driver:\n * Fix minor memory leaks and one incorrect memory usage in HDF5\n * implement support for 1.8+ hdf library versions (#2297)\n\nHFA driver:\n * Avoid possible uninitialized variable usage in HFAWriteXFormStack()\n * Fix BASEDATA count value (preceding pointer) at 1 (#2144)\n * Incorporate generalization of EPT_f32 reduced precision handling (#1000)\n * Add missing creation options, fix doc to refer to COMPRESSED instead of COMPRESS (#2167)\n * remove static buffer to improve thread-safety\n * Read invalid blocks as nodata value if available.  Create new files with all blocks marked invalid.  Support writing to invalid blocks as long as there is already a pointer to valid data.  (#2427)\n * add support for writing 1, 2 and 4 bit data (#2436)\n * Attempt to preserve PROJCS name in sMapInfo.proName, and to capture it as the PROJCS name when reading.  This will hopefully preserve symbolic names like NAD_1983_StatePlane_Ohio_South_FIPS_3402_Feet instead of replacing them with something generic like \"Lambert_Conformal_Conic\" (#2422).\n * avoid reducing array sizes if writing them in random order (#2427)\n * Prevent writing out cached information after the file has been closed.  Loosely related to (#2524).\n * Error out gracefully and early on attempts to write to readonly file (#2524)\n * Open the dependent file(s) with same permissions as master (#2425)\n * Fix crash in HFACompress::compressBlock when compressing random data with m_nDataTypeNumBits >= 16 (#2525)\n * Fix reading of a non-initialized compressed HFA file (#2523)\n * Add FORCETOPESTRING, and ensure ProjectionX applied to all bands (#2243)\n * Added support for unique values color tables (#2419)\n\nHTTP driver:\n * Fix HTTP driver when falling back to /tmp (#2363)\n\nIDRISI driver:\n * Force min/max calculation on IWriteBlock\n * remove conditional from CreateColorRamp() call\n * Fix #2444 (lat/long) and #2442 (uppercase file extension)\n\nILWIS driver:\n * Modified to use VSI*L API for reading and writing.  Modify ReadBlock() so that data written on newly created datasets can still be read back.\n * Fix memory leaks in ILWIS driver\n * Avoid writing an ILWIS file to disk when it is a src_dataset. Design of responsible class (IniFile) is simplified, to prevent this from happening unintentionally.\n * Spend extra effort to find the most compact GDAL data-type for storing the ILWIS data; Added missing ILWIS-system domains to the list; Initialized variables before they are used; Added comments to code.\n * Solved unwanted rounding in the pixel size, that resulted in wrong map size calculation.\n\nINGR driver:\n * Support splitting bitonal images into scanline blocks too (#1959)\n * Fix compilation of INGR driver on big-endian target (#2613)\n\nISIS3 driver:\n * fix earth model, already in meters, not kilometers! (#2321)\n * ensure we adjust first tile offset depending on band (#2573)\n\nISO8211 driver:\n * corrections to handle double byte attributes better (#1526)\n * add a -xml option to 8211dump utility; add a 8211createfromxml utility to generate a ISO8211 file from the output of 8211dump -xml\n * robustness fixes\n\nJP2KAK driver:\n * Add VSI*L reading and writing (vsil_target) (#2255)\n * Remove KAKADU4 related ifdefs, we now assume at least KAKADU 4.2.\n * disable JPIP - not working with modern Kakadu\n\nJPEG driver:\n * Added support for reading georeferencing from .tab files. Fixes #682.\n * Add support for reading images in CMYK and YCbCrK color spaces (#2443)\n * make sure bHasDoneJpegStartDecompress is set in Reset() (#2535)\n * Added fill/flush support compatible with IPP libjpeg (#2606)\n\nLCP (FARSITE) driver:\n * New for 1.6.0\n\nL1B driver:\n * Added support for NOAA-18(N) and METOP-2 datasets; tiny code refactoring.\n * L1B : add auto guess of data format when it is 2 spaces or empty string\n * The GAC GCPs are not tied to the center of pixel.\n * Serious code rewriting in order to read datasets without archive header\n\nMEM driver:\n * Avoid failure when doing mem_driver->Create('MEM:::')\n\nMrSID driver:\n * Use VSI Virtual File API in MRSID DSDK I/O routines. MrSID reading now\nworks through the VSI calls as any other GDAL driver.\n * Added support for MrSID DSDK 7.x (#2410)\n * Use int 32 types instead of long types for LTI_METADATA_DATATYPE_UINT32 and LTI_METADATA_DATATYPE_SINT32 metadata (#2629)\n\nMSG driver:\n * Fixes and improvements to enable compilation with GCC 4.x (Ticket #2168).\n\nNDF driver:\n * Support NDF2 files in other than the current directory (#2274)\n * Added somewhat improved coordinate system support (#2623)\n\nNetCDF driver:\n * Handle very large attributes properly (#2196)\n * NETCDF plugin name doesn't correspond to the loader entry name causes an error in AutoLoadDrivers (#2464)\n * Fix allocation of panBandZLev (#2582)\n * Fix accidentally too large memory allocation (#2591)\n * Do not report char variables as subdataset (#2599)\n * Fix LAEA projection (#2584)\n\nNITF driver:\n * Add support for RPB and IMD files\n * Handle NITF JPEG-compressed image with data mask subheader (IC=M3) multi-blocks (#2364)\n * Implement SetProjection for NITF (#2095)\n * Added support for decoding 12 bit images (#2532)\n * Added support for writing TEXT segments in CreateCopy()\n * Added support for writing arbitrary user defined TREs\n * Fix #2249 : shift when writing NITF color table with nColors < 256\n * Prevent crash with LUT entry count > 256\n * Disable unnecessary VSIFFlush() calls that slowdown writing on some systems\n * Apply untested RPC00A remapping (#2040)\n * Fix #2135 by narrowing workaround test made for #1750\n * Prevent crash on NITF file without image segment (#2362)\n * Additional fix for handling 1-bit uncompressed NITF images with NITF_IC=NM  (#1854)\n * Set IREP=RGB implicitly when the first 3 channels of an image are R,G,B (#2343)\n * Allocate one extra byte for the NULL terminating character when reading TEXT data in NITF file (#2366)\n * Fix 'adding BLOCKA TRE precludes writing IGEOLO' (#2475)\n * Add GDAL_DMD_CREATIONOPTIONLIST for NITF\n * Prevent crash when using a bad value for TRE creation option\n * Fallback to pam info for nodata (#2596)\n\nPAUX driver:\n * Check for either generated spelling of AuxiliaryTarget (#2219)\n\nPCRaster driver:\n * Add overview support\n * Added support for CSF version 1. Updated nodata values to be equal to gdal's internal ones.\n\nPDS driver:\n * Add support for # style comments (#2176)\n * Improve PDS dataset identification & fixes image segment offset (#2397)\n * Add LSB_SIGNED_INTEGER\n\nPGCHIP driver:\n * Many memory leak fixes & cleanups, add an extra parameter '%name=my_name' for handling several rasters in the same table, add support for reading&writing geotransform\n\nPNM driver:\n * Fix potential buffer overflow in case of bad PNM file\n * Fix logical tests in PNM Identify (bug #2190)\n\nRAW drivers:\n * manage RawRasterBand NODATA values at PAM level\n * RawRasterBand : add extra parameter bOwnsFP to enable the RawRasterBand to take ownership of the fpRaw so as to close it properly in its destructor\n * Fix crash in rawdataset.cpp with pixeloffset=0 (#2576)\n\nRMF driver:\n * Do not forget to swap block size/offset table on big-endian archs. (#2169)\n * Added support for reading and writing extended header..\n * RMF driver can crash / corrupt stack when importing projection from Panorama (#2277)\n * Fixed error checking code returned by color table read function.\n * Added support for reading big endian variant of the RSW files.\n * Report units and dataset statistics (#2670)\n\nRPFTOC driver:\n * Enable external overview building on RPFTOC subdatasets\n * Use new proxy API instead of RPFTOCGDALDatasetCache\n * Initialize PAM for RPFTocDataset\n * Implement GetFileList() for RPFTOCDataset and RPFTOCSubDataset\n\nRS2 driver:\n * Added projection reading\n * Updates to RADARSAT-2 driver to account for tiled GeoTIFF images.\n * Capture all files for GetFileList().\n * Support selecting directory as well as product.xml to open the dataset.\n * Various other enhancements\n\nSDTS driver:\n * Prevent infinite recursion in SDTSRasterReader::GetBlock when CEL0 file is truncated\n * SDTS DEM : Read metadata in the IDEN file\n\nSGI driver:\n * Implemented SGI write support (always RLE)\n * Fix SGI driver that misidentified SRTMHGT files as SGI files (#2289)\n\nTerragen Driver:\n * Fix overflow in implicit constant conversion (#2119)\n\nTerralib driver:\n * New for 1.6.0\n\nTSX driver:\n * Added support to extract GCPs from XML metadata for TerraSAR-X SSC products.\n * Provide an error message if the sceneInfo tag cannot be found in the TerraSAR-X image metadata.\n * Fix lat/long inversion (whoops, #2565); expose additional metadata items\n\nUSGSDEM driver:\n * mark NTS and INTERNALNAME as legal options\n * make parser more permissive (#2348)\n * add missing ZRESOLUTION creation option in GDAL_DMD_CREATIONOPTIONLIST\n * USGSDEM: add precisions to creation options documentation; check that source dataset dimensions are at least 2x2 for CreateCopy()\n * USGSDEM: fix USGSDEMDecToPackedDMS when input is very close to an integer degree value\n\nVRT driver:\n * Use VSIF Large API in VRTDataset::Open to fix #1070\n * recover from failure to create transformer (#2240)\n * Added LUT based transformation support to the VRTComplexSource\n * Extend the output of <SimpleSource> in a forward and backward compatible way, and make use of GDALProxyPoolDataset when possible\n * Add the <ColorTableComponent> element to <ComplexSource> to do color table expansion in the VRT\n * Fix failure when attempting to read a warped VRT made from a 3-band dataset with -dstalpha option (#2502)\n * In VRTDerivedRasterBand::IRasterIO() don't call RasterIO() on sources with 0,0 for nPixelSpace and nLineSpace as most sources, except VRTSimpleSource, don't translate them.\n * Allow empty category in VRT rasterband (#2562)\n * Use nodata in VRTKernelFilteredSource::FilterData (#1739)\n * Fix VRT average resampling when resampling factor > 100% (#1725)\n\nWCS driver:\n * Improvements to identify Band field name\n * More fiddling with GetCoverage() bounding boxes.  Avoid half pixel bounding box shift south east.  When using GridOffset/GridStep values expand the bounding box out by 1% of a pixel to avoid \"on edge\" rounding issues.\n * Strip namespaces off DescribeCoverage response (early), and add a bug\nworkaround for GeoServer WCS 1.1 responses.\n * Correct wcs 1.1 band identification logic\n * URL encode format and coverage name.  Improve error recognition.\n * GridOffset should be top left corner of pixel center oriented bounds\n\nWMS driver:\n * Add ClampRequests setting (#2450)\n * Fix WMS driver to make it work when ReadBlockFromFile() must deal with blocks already in block-cache but that are not the band to fill (#2647)\n * Add a <Timeout> option (#2646)\n\nXPM driver:\n * Prevent crash when opening an XPM file with large file API\n\n\n## OGR 1.6.0 - Overview of Changes\n\nGeneral:\n  * RFC 21: OGR SQL type cast and field name alias (#2171)\n  * Added support for outline color in OGRStyleLabel (#2480)\n  * Added support for symbol outline color in OGR Style Strings (#2509)\n  * Added geometry type merger\n  * Added SetEquirectangular2()\n  * Added SetLinearUnitsAndUpdateParameters() to C API\n  * Add support to translate OGRPolygon to OGRMultiLineString\n  * Add a segmentize() method to OGRGeometry to modify the geometry such it has no segment longer then the given distance; add a -segmentize option to ogr2ogr\n  * Many performance fixes in OGRGeometryFactory::organizePolygons (#1217, #2428, #2589)\n  * Changed OGRFeature::GetStyleString() to return the value of the OGR_STYLE field if no style string have been specified.\n  * Ensure OpenShared sharing is only with same thread (#2229)\n  * ogrfeaturestyle : OGRSTBrushAngle parameter should not be georeferenced.\n  * Strip whitespaces at the start and end of parsed pairs of style elements in OGRStyleTool::Parse(). As per #1413.\n  * Remove empty linestrings from multilinestring objects\n  * Allow 'POINT EMPTY' in WKT (bug #1628)\n  * Fix OGRGeometryCollection::getCoordinateDimension() (#2334)\n  * Make OGRLineString::importFromWkb and OGRPolygon::importFromWkb with EMPTY geometries\n  * Implement IsEmpty() for all geometries without using GEOS (for speed purpose, and also because GEOS 2.2.3 is buggy with multipolygons with empty polygon inside); Make exportToWkt() export a valid WKT when multipoints/linestrings/polygons have an empty geometry inside\n  * Reintroduce OFTWideString and OFTWideStringList but mark them as deprecated (#2359).\n  * Fixed segmentation fault in swq_select_finish_summarize when SQL query issued on layer without any attributes like empty shapefile (Ticket #2358).\n  * Fix crash in OGRDataSource::ExecuteSQL with an empty SQL query (#2386)\n  * Make OGRLayer::FilterGeometry more restrictive in the geometries it selects (#2454)\n  * OGRStyleVector class and related stuff has been removed (#2070).\n\n  * Fixed OGR SQL to properly escape single quotes in string literals (Ticket #2220).\n  * Prevent an OGR driver from being registered several times (#2544)\n\nUtilities:\n * Start on a dissolve utility based on ogr2ogr\n * Add --version and --licence options for OGR CLI utilities\n\nOGRSpatialReference:\n * RFC 20: Axes methods\n * Upgrade to EPSG 6.17\n * Added support for \"International Map of the World Polyconic\" and \"Wagner I-VII\" projections.\n * Add EquidistantCylindricalSphere and GaussLabordeReunion (#2134)\n * Fix exportToProj() translation for OSGB36 (#2160)\n * ogr_srs_panorama.cpp : Fixed search in ellipsoid list\n * ogr_srs_pci.cpp : List of ellipsoids updated\n * Treat spherical mercator 1SP similarly to normal mercator 1sp (proj #9).\n * Ensure Clear() clears the bNormInfoSet flag and use Clear() from the various import methods to wipe old state (#2533).\n * add import/export for MITAB CoordSys\n * Added declarations for OSRImportFromMICoordSys()/OSRExportToMICoordSys(); make OSRImportFromPanorama()/OSRExportToPanorama() externally visible again.\n * Ensure rectified_grid_angle gets stripped for HOM projections (#2575)\n * ogr_srs_esri.cpp: Correct test of iRGAChild (#2575).\n * Recent EPSG releases seem to use PolarLongOrigin instead of ProjCenterLong for the Krovak projection parameters.  Handle either (#2559).\n * Test that input pointer is not NULL in OGRSpatialReference::importFromWkt().\n\nAVC driver:\n * Make AVCE00 a distinct driver\n * Update from AVCE00 master, includes the fixes for #2495 (GCC warnings)\n * Detect compressed E00 input files and refuse to open them instead of crashing (#2513)\n * Avoid scanning the whole E00 input file in AVCE00ReadOpenE00() if the file does not start with an EXP line (#1989)\n\nBNA driver:\n * Fix crash when trying to write features with empty geometries\n * Add support for Unix End-Of-Line characters on Windows\n\nCSV driver:\n * Add support for writing the geometry of features through the new GEOMETRY layer creation option\n * Allow to define field width via .csvt text file (bug #2142)\n * Handle more gracefully CSV files with an empty column title (#2538)\n\nDGN driver:\n * add some experimental linkage testing\n\nDODS driver:\n * add using namespace libdap for version 3.8.2 (#2404)\n\nGeoconcept Export driver:\n * New for 1.6.0\n\nGeoJSON driver:\n * Fixed GeoJSON driver crash when writing features with null geometry (#2212)\n * GeoJSON: enabled read/write of 25D geometry types.\n * Improved GeoJSON driver to gracefully handle JSON strings that do not encode GeoJSON content.\n * Support GeoJSON 1.0 Spec CRS 'link' and 'name' members. (#2665)\n\nGPX driver:\n * XML Datetime can be expressed without explicit timezone mention\n * <extensions> is valid inside <rtept> and <trkpt> too\n * Add support for GPX 1.0 reading\n * Handle degenerate and NULL geometries in creation mode\n * Remove noisy CPL_DEBUG message when GPX driver built without Expat and when the input file doesn't look like GPX (#2394)\n * Prevent GPX and KML drivers to read too much of a non GPX/KML file (#2395)\n * GPX writer: Remove leading spaces for a numeric field (#2638)\n\nGML driver:\n * Support reading GML 3 posList geometry (#2311)\n * Add logic to potentially track geometry type (mostly for NAS just now)\n * Fix #2141 : GML driver recognizes improperly strings as integers\n * Do geometry element name test (IsGeometryElement) case sensitive to avoid false positives on property names, and such (#2215).\n * Fix memory bug in OGRGMLLayer::GetNextFeature() when using attribute filter (#2349)\n\nGMT driver :\n * Remove spaces from numeric field values before writing to avoid unnecessary quoting.\n\nGRASS driver:\n * Call Vect_close() in the OGR GRASS driver (#2537)\n\nINGRES driver:\n * New for 1.6.0\n\nInterlis 1 driver:\n * Support for SURFACE polygons spread over multiple OBJECTs Polygonize on demand. Generation of area layer\n * Fix a crash (#2201)\n * Fix memory leaks & apps/test_ogrsf correctness in OGRILI1 (#2203)\n * Prevent crash in OGRILI1DataSource::Open with an empty string (#2335)\n * Fixed column order detection for some Interlis 1 models (#2595)\n\nInterlis 2 driver:\n * Fix memory usage and leaks in OGRILI2 (bug #2203)\n * Fix logic to detect ILI2 datasets (#2516)\n\nKML driver:\n * Updated KML write driver to support KML v2.2.\n * Added support for \"SchemaData\" - typed KML fields that maintain feature data.\n * Support of date types, written out as strings (#2264)\n * Added automatic coordinate system transformation to WGS84 (the only CS that KML recognizes). (#2271)\n * Report XML parsing error in KML driver in a similar way it's done in the GPX driver\n * Speedup detection of KML documents\n * Use VSI Large File API\n * Corrected case on schemaUrl attribute and added the id attribute to the schema element. (#1897)\n\nMITAB driver:\n * Upgraded to current dev version of MITAB - includes a number of TAB StyleString improvements\n * Support font point outline color\n\nMySQL Driver:\n * Fix memory leaks in MySQL driver\n * Fix crash with very long WHERE clause in MySQL driver\n * Use assignSpatialReference for read features\n * Fix SRS cache in FetchSRS()\n * MYSQL: Add backquotes around table and column names to enable the use of reserved keywords (#2315)\n * Fix reporting of capabilities for OGRMySQLResultLayer\n * return proper results for various writing capabilities (#2184)\n\nNTF driver:\n * Update for new meridian and strategi products (#2600)\n\nOCI driver:\n * Fixed memory leaks in OCI driver reported by Linda Thompson (#2120)\n * Support for OCI + VRT to access non spatial data (#2202)\n * Prevent from calling CPLError when SDO_GEOMETRY is missing (non spatial) (#2202)\n * Added support for fields of type DATE and TIMESTAMP [WITH [LOCAL] TIME ZONE] as OFTDate and OFTDateTime.\n * An extra space is needed for the decimal separator when retrieving the numeric fields (#2350)\n * Improved OCI driver to query spatial extent of layer using SDO_GEOM_METADATA for better performance (Ticket #543).\n * OCI: Filter out MDSYS.CS_SRS entries with NULL value of WKTEXT.\n * add compound and stroked-arc read support\n\nPG (Postgres/PostGIS) Driver:\n * Add the ability to specify a list of tables to be treated as layers with the 'tables=' connection string option (#1699)\n * Add SPATIAL_INDEX creation option to create GIST index. Turned ON by default (#959)\n * Add support for listing and correctly fetching geometry type of inherited spatial tables (#2558)\n * Add support for Postgis tables with multiple geometry columns (#1476)\n * Fixes to Postgres binary cursor mode and improvement/fixes to data types handling (#2312)\n * Implement efficient GetFeatureCount, SetSpatialFilter and GetExtent for OGRPGResultLayer\n * Apply spatial filter in OGRPGDataSource::ExecuteSQL()\n * Make binary cursor work with non-PostGIS geometry column\n * Fix memory leaks\n * Fix write outside of allocated buffer in OGR PG driver (#2303)\n * Use assignSpatialReference for read features\n * Fix geometry filter when there is no PostGIS geometry column\n * Fix getting the PK of a table with PostgreSQL <= 7.3; Fix CreateFeatureViaCopy when geometry column is not PostGIS geometry\n * Use the 'auth_srid' to avoid mismatches between OGR and PostGIS WKTs of EPSG codes (#2123)\n * Fix reporting of capabilities and handling of spatial and attribute filters by OGRPGResultLayer\n * Add PG_USE_POSTGIS to be able to disable PostGIS for debug purpose\n * Re-enable PQsetClientEncoding but set it to UNICODE now that the driver advertises OLCStringsAsUTF8\n * Replace use of risky sprintf by CPLString to avoid potential buffer overflows\n * In non PostGIS mode, skip tables of schema 'information_schema'\n * Allow VACUUM through ExecuteSQL() without a transaction (#2619).\n\nPGEO driver:\n * correct testcapability results (#2601)\n * treat type 50 geometry as SHPT_ARC (#1484)\n\nSDE driver:\n * Versioned editing/write support for SDE.\n\nSQLite driver:\n * Added support for geometry_columns, and WKB support\n * Added preliminary FGF to geometry support\n * Added spatial_ref_sys support\n * Added preliminary support for spatialite geometries\n\nSHAPE driver:\n * CreateField() now works on populated layers (#2672)\n * Cleanup to remove unused old classification code for multipolygons (#2174)\n * Fix error class in VSI_SHP_Error (#2177)\n * Fix crash with polygon with nParts == 0\n * Change SHAPE driver to return a NULL geometry instead of an empty OGRMultiPoint, OGRMultiLineString and OGRMultiPolygon (bug #2217)\n * Fix crashes on corrupted geometries (#2218 and #2610)\n * Fix crash when dealing with unhandled field types in shape driver, in DEBUG mode (#2309)\n * Add case for wkbMultiLineString and 25D in OGRShapeLayer::CreateFeature\n * Make SHPWriteOGRObject write a SHPT_NULL object for empty geometries and handle correctly multigeometries with empty geometries inside\n * Make sure field type set to OFTDate when OFTDataTime requested (#2474)\n * Implement OGRShapeDataSource::DeleteLayer() (#2561)\n\nS57 driver:\n * Ensure SOUNDG in multipoint form is MultiPoint25D not 2D.\n * Print out contents of OGR_S57_OPTIONS environment variable if set (for debug\npurposes).\n * Correct control for applying updates, now done in Ingest method.\n\nVRT driver:\n * carry style string through VRT layer\n * Pass the envelope of the geometry as the spatial filter in the sub-query (#2214)\n * Add \"shared\" attribute on SrcDataSource to control sharing.  Default to OFF for SrcLayer layers, and ON for SrcSQL layers.  This endeavors to avoid conflicts of layer state. (#2229)\n\nXPlane/Flightgear driver:\n * New for 1.6.0\n\n\n\n## SWIG Language Bindings\n\nSWIG General :\n * Added GetHistogram\n * Added SetLinearUnitsAndUpdateParameters\n * Added GetSubDatasets method on Dataset\n * Added SetEquirectangular2\n * Cast returned value to OGRDriverShadow in GetDriver method instead of OGRLayerShadow\n * Make it possible to skip adding the inline C functions into the wrapper\n * Fix SWIG ReadRaster_internal and DSReadRaster_internal may crash (#2140)\n * Modify GeneralCmdLineProcessor() to recognise that a <= 0 return result is special and means NULL should be returned indicating a need to terminate the calling application.\n * Added SetMetadataItem/GetMetadataItem\n * Added gdaltransformer wrapper for RFC 22\n * implement the BuildFromEdges function #2380\n * Added ComputeProximity\n * Added GDALRegenerateOverviews\n * Added GetFileList\n * Added GRA_Lanczos\n * Added gdal.Polygonize()\n * expose GDALDestroyDriverManager() to improve leak detection\n * Added RasterizeLayer() and SieveFilter()\n * If we receive an odd array type in BandWriteArray(), cast the array to float64 which we do support (#2285).\n\nSWIG C# related changes:\n * Implement GDALProgressFunc callback for C# (fix for #2122)\n * Fixed that passing null as the options parameter of Driver.CreateCopy causes access violation (#2185).\n * Added GDALCreateCopy sample application\n * Support for signing the GDAL C# assemblies (#2186)\n * Added raster specific tests\n * Reworked the wrapper implementation\n * Added the bandMap parameter to the C# Dataset.ReadRaster and Dataset.WriteRaster API.\n * Added a C# sample to demonstrate the GDALDatasetRasterIO operations.\n * Added Band.GetHistogram to the C# bindings\n * Sample application for Band.GetHistogram.\n * Added the GDALAdjustContrast sample to demonstrate the image correction at the C# side.\n * Added Dataset.GetGCPs, Dataset.SetGCPs and GCPsToGeoTransform in the C# bindings (bugs #2426, #1986 and #1677\n * Added support for using OGR.Layer in Gdal.Polygonize\n * Changed the behavior to use OSR.SpatialReference and OSR.CoordinateTransformation instead of defining the same classes in the OGR namespace\n * Changed the scope from internal to public of the required functions\n\nSWIG Python related changes:\n * Fix layer __getitem__ bug (#2187)\n * add some sugar to ogr.DataSource.DeleteLayer to be able to take in either an index or a layer name.  If you give it a name, it *will* loop through all of the layers on the datasource.  This might be expensive depending on the driver.\n * add date/time fetching support to the generic GetField implementation... note this is not real 'datetime' support yet\n * a typemap for taking in lists of GDAL objects #2458\n * don't always return 0 for OGRErrs #2498\n * Added GetDefaultHistogram() with Python implementation\n * support for mingw Windows builds\n * Link with gdal_i.lib instead of gdal.lib when building with MSVC compiler. (#2578)\n\nSWIG Perl\n * Added a more verbose description to the error message if projection method test fails. Skip testing parameters of International Map of the World projection since it fails (a bug?).\n * driver's create method's 2nd parameter, if given, is a listref\n * Support Cygwin by adding -lstdc++ to LIBS if OS is cygwin\n * Add GetDriver method as an alias to _GetDriver for DataSource. This fixes an unnoticed side-effect of rewrapping GetDriver for root class OGR.\n * force name to be a string for _GetLayerByName and make default for name 0\n * fix Layer::Schema\n * use perl hash also for fields in schema (the new API was not really implemented), add Schema method also for Feature\n * croak in Geometry::create unless type, wkt, wkb, or gml given\n * do not call UseExceptions when booting OGR wrappers since it is only done once when booting GDAL (of which OGR is a part), do not include inline functions from cpl_exceptions.i into OGR wrappers\n * add exception support as for OGR\n * use geometry factory methods in Geometry::create; accept also only coordinate parameters (i.e. auto-add 0 if needed) in Point method for Point type\n * Add wrappers for field types datetime and lists. Do not use the overloaded (field name) versions of the get/set functions.\n * GetField and SetField methods, which check for goodness of the field (name, index) and support dates, times, datetimes, and lists. In Row and Tuple the field value may be a listref.\n * Support HEXWKB in Geo::OGR::Geometry::create.\n * As* methods for Geometry as aliases for ExportTo; SpatialReference->create constructor\n * made needed links from parameters to typemaps to make Get- and SetDefaultHistogram methods work in Perl\n * support for mingw Windows builds\n\nSWIG Java:\n * removed colortable from java bindings for now (#2231)\n\n# GDAL/OGR 1.5.0\n\n## GDAL/OGR 1.5.0 - General Changes\n\nBuild:\n * CFG environment variable now ignored.  Instead set CFLAGS and CXXFLAGS\n   environment variables to desired compilation options, or use --enable-debug\n   for a debug build.  Default is \"-g -O2\" like most other packages.\n * Added --with-hide-internal-symbols to restrict exported API from .so files\n   to be the GDAL public API (as marked with CPL_DLL).\n\nOther:\n * OGR and GDAL C APIs now generally check for NULL objects and recover\n   with an error report instead of crashing.\n\n\n## GDAL 1.5.0 - Overview of Changes\n\nCore:\n * Enable Persistent Auxiliary Metadata (.aux.xml) by default.\n * Support for \"pam proxies\" for files in read-only locations.\n * Create and !CreateCopy pre-Delete output existing dataset.\n * Added Identify() method on drivers (per RFC 11: Fast Format Identify)\n * Implement !GetFileList() on datasets (per RFC 12).\n * Implement Delete(), Rename(), Copy() based on !GetFileList() (per RFC 12).\n * vrtdataset.h, memdataset.h and rawdataset.h are now considered part of\n   the public GDAL API, and will be installed along with gdal.h, etc.\n * Support nodata/validity masks per RFC 14: Band Masks.\n * Plugin drivers test for ABI compatibility at load time.\n * Creation flags can now be validated (this is used by gdal_translate)\n * Default block cache size changed to 40MB from 10MB.\n\nAlgorithms / Utilities:\n * gdal_grid: New utility to interpolate point data to a grid.\n * gdal2tiles.py is new for 1.5.0.\n * gdaltransform: stdin/stdout point transformer similar to PROJ.4 cs2cs.\n * gdalwarp: Several fixes related to destination \"nodata\" handling and\n   nodata mixing in resampling kernels.\n * gdalwarp: Added Lanczos Windows Sinc resampling.\n * gdal_rasterize: added -i flag to rasterize all areas outside geometry.\n * gdalenhance: new utility for applying histogram equalization enhancements.\n * gdalmanage: Utility for managing datasets (identify, delete, copy, rename)\n * nearblack: Utility for fixing lossy compressed nodata collars.\n\nIntergraph Raster Driver:\n * New for 1.5.0.\n\nCOSAR (TerraSAR-X) Driver:\n * New for 1.5.0.\n * SAR Format.\n\nCOASP Driver:\n * New for 1.5.0\n * SAR format produced by DRDC CASP SAR Processor.\n\nGFF Driver:\n * New for 1.5.0\n\nGENBIN (Generic Binary) Driver:\n * New for 1.5.0.\n\nISIS3 Driver:\n * New for 1.5.0.\n * Also PDS and ISIS2 driver improved substantially and all moved to frmts/pds\n\nWMS Driver:\n * New for 1.5.0.\n\nSDE Raster Driver:\n * New for 1.5.0.\n\nSRTMHGT Driver:\n * New for 1.5.0.\n\nPALSAR Driver:\n * New for 1.5.0.\n * SAR format.\n\nERS Driver:\n * New for 1.5.0.\n * ERMapper ASCII Header\n\nHTTP Driver:\n * New for 1.5.0.\n * Fetches file by http and then GDALOpen()s.\n\nGSG Driver:\n * New for 1.5.0.\n * Golden Software Surfer Grid.\n\nGS7 Driver:\n * New for 1.5.0.\n * Golden Software Surfer 7 Binary Grid.\n\nSpot DIMAP Driver:\n * New for 1.5.0.\n\nRPFTOC Driver:\n * New for 1.5.0.\n\nADRG Driver:\n * New for 1.5.0.\n\nNITF Driver:\n * Added support for writing JPEG compressed (IC=C3).\n * Added support for reading text segments and TREs as metadata.\n * Added support for 1bit images.\n * Added support for GeoSDE TRE for georeferencing.\n * Support PAM for subdatasets.\n * Improved NSIF support.\n * Support C1 (FAX3) compression.\n * Improved CADRG support (#913, #1750, #1751, #1754)\n\nENVI Driver:\n * Many improvements, particularly to coordinate system handling and metadata.\n\nJP2KAK (Kakadu JPEG2000) Driver:\n * Now builds with libtool enabled.\n\nGTIFF (GeoTIFF) Driver:\n * Now supports BigTIFF (read and write) with libtiff4 (internal copy ok).\n * Upgraded to include libtiff 4.0 (alpha2) as the internal option.\n * Support AVERAGE_BIT2GRAYSCALE overviews.\n * Produce pixel interleaved files instead of band interleaved by default.\n * Support TIFF files with odd numbers of bits (1-8, 11, etc).\n * Add ZLEVEL creation option to specify level of compression for DEFLATE method\n\nGIF Driver:\n * Nodata/transparency support added.\n\nJPEG Driver:\n * Support in-file masks.\n\nAIGrid Driver:\n * Supports reading associated info table as a Raster Attribute Table.\n\nHFA Driver:\n * Support MapInformation/xform nodes for read and write.\n * Support AVERAGE_BIT2GRAYSCALE overviews.\n * Support Signed Byte pixel type.\n * Support 1/2/4 bit pixel types.\n * Support PE_STRING coordinate system definitions.\n * Support nodata values (#1567)\n\nWCS Driver:\n * Support WCS 1.1.0\n\nDTED Driver:\n * Can now perform checksum verification.\n * Better datum detection.\n\nHDF4 Driver:\n * Support PAM for subdatasets.\n\nLeveller Driver:\n * Added write support.\n * Added v7 (Leveller 2.6) support.\n\n## OGR 1.5.0 - Overview of Changes\n\nGeneral:\n * Plugin drivers test for ABI compatibility at load time.\n * SFCOM/OLEDB stuff all removed (moved to /spike in subversion).\n * Various thread safety improvements made.\n * Added PointOnSurface implementation for OGRPolygon.\n * Added C API interface to OGR Feature Style classes (RFC 18).\n\nUtilities:\n * All moved to gdal/apps.\n\nOGRSpatialReference:\n * Supports URL SRS type.\n * Upgraded to EPSG 6.13.\n * Operating much better in odd numeric locales.\n\nBNA Driver:\n * New for 1.5.0.\n\nGPX Driver:\n * New for 1.5.0.\n\nGeoJSON Driver:\n * New for 1.5.0.\n\nGMT ASCII Driver:\n * New for 1.5.0.\n\nKML Driver:\n * Preliminary read support added.\n\nDXF / DWG Driver:\n * Removed due to licensing issues with some of the source code.  Still\n   available in subversion from under /spike if needed.\n\nPG (Postgres/PostGIS) Driver:\n * Added support for recognising primary keys other than OGR_FID to use as FID.\n * Improved schema support.\n * Performance improvements related to enabling SEQSCAN and large cursor pages\n\nShapefile Driver:\n * Do not keep .shx open in read only mode (better file handle management).\n * Use GEOS to classify rings into polygons with holes and multipolygons if it is available.\n * Support dbf files larger than 2GB.\n\nMySQL Driver:\n * Added support for BLOB fields.\n\nMITAB (MapInfo) Driver:\n * Upgraded to MITAB 1.6.4.\n\nInterlis Drivers:\n * Support datasources without imported Interlis TID\n * Remove ili2c.jar (available from http://home.gdal.org/dl/ili2c.jar\n * Support for inner rings in Surface geometries.\n * Support spatial and attribute filters.\n\n## SWIG Language Bindings\n\n * The \"Next Generation\" Python SWIG bindings are now the default.\n * Python utility and sample scripts migrated to swig/python/scripts and\n   swig/python/samples.\n * Added Raster Attribute Tables to swig bindings.\n * Added Geometry.ExportToKML\n * Added CreateGeometryFromJson\n * Added Geometry.ExportToJson\n\nSWIG C# related changes:\n * Support for the enumerated types of the C# interface\n * C# namespace names and module names follows the .NET framework naming guidelines\n * Changed the names of the Windows builds for a better match with the GNU/Linux/OSX builds\n * The gdalconst assembly is now deprecated\n * GDAL C# libtool build support\n * !CreateFromWkb support\n * Dataset.!ReadRaster, Dataset.!WriteRaster support\n * Added support for Dataset.!BuildOverviews\n * More examples added\n\nSWIG Python related changes:\n * Progress function callback support added.  You can use a Python function, or the standard GDALTermProgress variant\n * Sugar, sweet, sweet sugar.\n    * ogr.Feature.geometry()\n    * ogr.Feature.items()\n    * ogr.Feature.keys()\n * doxygen-generated docstrings for ogr.py\n * geometry pickling\n * setuptools support\n * !PyPi http://pypi.python.org/pypi/GDAL/\n * setup.cfg for configuring major significant items (libs, includes, location of gdal-config0\n * support building the bindings from *outside* the GDAL source tree\n\nSWIG Java:\n * SWIG Java bindings are orphaned and believed to be broken at this time.\n\n\n# GDAL/OGR 1.4.0 - General Changes\n\nPerl Bindings:\n - Added doxygen based documentation.\n\nNG Python Bindings:\n - Implemented numpy support.\n\nCSharp Bindings:\n - Now mostly operational.\n\nWinCE Porting:\n - CPL\n - base OGR, OSR and mitab and shape drivers.\n - GDAL, including GeoTIFF, DTED, AAIGrid drivers\n - Added test suite (gdalautotest/cpp)\n\nMac OSX Port:\n - Added framework support (--with-macosx-framework)\n\n## GDAL 1.4.0 - Overview Of Changes\n\nWCS Driver:\n - New\n\nPDS (Planetary Data Set) Driver:\n - New\n\nISIS (Mars Qubes) Driver:\n - New\n\nHFA (.img) Driver:\n - Support reading ProjectionX PE strings.\n - Support producing .aux files with statistics.\n - Fix serious bugs with u1, u2 and u4 compressed data.\n\nNITF Driver:\n - Added BLOCKA reading support.\n - Added ICORDS='D'\n - Added jpeg compression support (readonly)\n - Support multiple images as subdatasets.\n - Support CGM data (as metadata)\n\nAIGrid Driver:\n - Use VSI*L API (large files, in memory, etc)\n - Support upper case filenames.\n - Support .clr file above coverage.\n\nHDF4 Driver:\n - Added support for access to geolocation arrays (see RFC 4).\n - External raw raster bands supported.\n\nPCIDSK (.pix) Driver:\n - Support METER/FEET as LOCAL_CS.\n - Fix serious byte swapping error on creation.\n\nBMP Driver:\n - Various fixes, including 16bit combinations, and non-intel byte swapping.\n\nGeoTIFF Driver:\n - Fixed in place update for LZW and Deflated compressed images.\n\nJP2KAK (JPEG2000) Driver:\n - Added support for reading and writing gmljp2 headers.\n - Read xml boxes as metadata.\n - Accelerate YCbCr handling.\n\nJP2MrSID (JPEG2000) Driver:\n - Added support for reading gmljp2 headers.\n\nEHDR (ESRI BIL) Driver:\n - Support 1-7 bit data.\n - Added statistics support.\n\n## OGR 1.4.0 - Overview of Changes\n\nOGR SQL:\n - RFC 6: Added support for SQL/attribute filter access to geometry, and\n   style strings.\n\nOGRSpatialReference:\n - Support for OGC SRS URNs.\n - Support for +wktext/EXTENSION stuff for preserving PROJ.4 string in WKT.\n - Added Two Point Equidistant projection.\n - Added Krovak projection.\n - Updated support files to EPSG 6.11.\n\nOGRCoordinateTransformation:\n - Support source and destination longitude wrapping control.\n\nOGRFeatureStyle:\n - Various extensions and improvements.\n\nINFORMIX Driver:\n - New\n\nKML Driver:\n - New (write only)\n\nE00 Driver:\n - New (read only)\n - Polygon (PAL) likely not working properly.\n\nPostgres/PostGIS Driver:\n - Updated to support new EWKB results (PostGIS 1.1?)\n - Fixed serious bug with writing SRSes.\n - Added schema support.\n\nGML Driver:\n - Strip namespaces off field names.\n - Handle very large geometries gracefully.\n\nODBC Driver:\n - Added support for spatial_ref_sys table.\n\nSDE Driver:\n - Added logic to speed things up while actually detecting layer geometry types\n\nPGeo Driver:\n - Added support for MDB Tools ODBC driver on linux/unix.\n\nVRT Driver:\n - Added useSpatialSubquery support.\n\n\n# GDAL/OGR 1.3.2 - General Changes\n\nWinCE Porting:\n - Support for MS WinCE new for this release.\n\nJava SWIG Bindings:\n - Preliminary support implemented.\n\n\n## GDAL 1.3.2 - Overview of Changes\n\nLocale:\n - Force numeric locale to \"C\" at a few strategic points.\n\nIdrisi Driver:\n - New for 1.3.2.\n - Includes reading and writing.\n - Limited coordinate system support.\n\nDIPEx Driver:\n - New for GDAL 1.3.2 (related to ELAS format).\n\nLeveller Driver:\n - New for GDAL 1.3.2.\n\nNetCDF Driver:\n - Improved autoidentification of x, y dimensions.\n - Improved CF support.\n\nJPEG2000 (JasPer) Driver:\n - Use GDALJP2Metadata to support various kinds of georeferencing.\n\nJPEG2000 (JP2KAK) Driver:\n - Support writing tiles outputs so that very large images can be written.\n\nGeoTIFF Driver:\n - Report error when attempting to create >4GB uncompressed file.\n - Updated to latest libtiff, now supports \"old jpeg\" fairly well.\n - Improved support for subsampled YCbCr images.\n\nImagine (HFA) Driver:\n - Support reading affine polynomial transforms as geotransform.\n - Support overviews of different type than base band.\n - Support reading RDO style \"nodata\" indicator.\n\nPCI Aux Driver:\n - Support projections requiring parameters.\n\nMrSID Driver;\n - Fixed problem with writing files other than 1 or 3 bands.\n - Support ESDK 6.x.\n\nBMP Driver:\n - Added support for 32bit images with bitfields compression.\n\nDODS Driver:\n - Upgraded to support libdap 3.6.x.\n - Upgraded to support [-x][-y] to flip image.\n\ngdal_rasterize Utility:\n - New for GDAL 1.3.2.\n - Rasterize OGR polygons into a raster.\n\n## OGR 1.3.2 - Overview of Changes\n\nOGRFeature:\n - Added support for OFTDate, OFTTime and OFTDateTime field types.\n - Also applied to a few drivers (shapefile, mysql, postgres)\n\nOGRLayer:\n - GetFIDColumn() and GetGeometryColumn() added.\n\nGeneric OGR SQL:\n - Proper support for spatial and attribute filters installed on\n   OGR SQL resultsets.\n\nOGRSpatialReference:\n - Upgraded data files to EPSG 6.9\n\nPostGIS Driver:\n - Include proj4text in new spatial_ref_sys entries.\n - Fixed support for very large queries.\n - Fixed DeleteLayer() implementation.\n - Added COPY support for accelerated loading.\n\nMySQL Driver:\n - Added read and write support for Spatial types.\n - Support spatial_ref_sys and geometry_columns tables.\n - Various other improvements (dates, smallint, tinyint, etc)\n - More robust auto-detection of column types for layers\n   created from SQL statements\n\nArcSDE Driver:\n - New for 1.3.2.\n - Read-only support for all geometry types.\n - Supports coordinate systems.\n - Requires SDE C API from ESRI.\n\nShapefile Driver:\n - Avoid posting errors when .dbf's without .shps are opened.\n - Added pseudo-SQL REPACK command after deleting features.\n - Implement DeleteFeature()\n\nS-57 Driver:\n - Added support for Arcs.\n - Added special DSID_DSSI feature class to capture header info.\n\nDGN Driver:\n - Support writing geometry collections.\n\nDWG/DXF Driver:\n - New for OGR 1.3.2\n - Only supports writing DWG and DXF.\n - Depends on DWGdirect library.\n\n\n# GDAL 1.3.1 - Overview of Changes\n\nNext Generation SWIG Wrappers (GDAL and OGR):\n - Python, Perl and Ruby bindings considered to be ready to use.\n - C#, Java, PHP are at best initial prototypes.\n - Added configure options for most NG options.\n\nPCRaster Driver:\n - libcsf is now included as part of GDAL.\n - PCRaster enabled by default on win32.\n - --with-pcraster=internal option now supported on unix (but not yet default)\n\nVSI Virtualization:\n - The \"large file API\" (VSI*L) has been re-engineered to allow installing\n   additional file handlers at runtime.\n - Added \"in memory\" VSI handler so that now any driver using VSI*L\n   functions for data access can operate on in-memory files.\n - PNG, JPEG and GeoTIFF drivers upgraded to work with in-memory support.\n\nRaster Attribute Tables:\n - Implemented new Raster Attribute Tables support.  See the\n   GDALRasterAttributeTable class for more information.\n\nErdas Imagine Overviews:\n - Erdas Imagine driver upgraded to support building internal overviews.\n - Generic overview handler updated to support overviews in Erdas Imagine\n   format for any file format.  Set USE_RRD config option to YES to enable.\n\ngdalwarp:\n - Added proper support for \"unified source nodata\", so the -srcnodata\n   switch works well.\n\nRIK Driver:\n - New Swedish format driver implemented by Daniel Wallner.\n\nJPEG Driver:\n - Substantial improvements to EXIF support.\n\nMrSID Driver:\n - Updated with proper JPEG2000 support as JP2MRSID driver, including\n   encoding with ESDK.\n - Updated to support MrSID Version 5.x SDKs.\n\nPNG Driver:\n - Fixed serious bugs with 16bit file support.\n - Added NODATA_VALUES to identify RGB sets that indicate a nodata pixel.\n\n\n## OGR 1.3.1 - Overview of Changes\n\nReference Counting:\n - OGRSpatialReference and OGRFeatureDefn now honour reference counting\n   semantics.\n - Note that, especially for the OGRFeatureDefn, it is now critical that\n   all drivers be careful with reference counting.  Any OGR drivers not in\n   the core distribution will likely crash if not updated.\n\nESRI Personal Geodatabase Driver:\n - New driver implemented for ESRI Personal Geodatabase (.mdb) files.\n - Uses ODBC, enabled by default on win32.\n\nODBC Driver:\n - Updated to support binary fields.\n - Updated to support WKB geometry fields.\n - Updated to support DSN-less connections.\n\nS57 Driver:\n - Added support for Inland Waterways, and Additional Military Layers profiles\n\n# GDAL 1.3.0 - Overview of Changes\n\nMultithreading:\n - Lots of work done to implement support for multiple threads reading\n   from distinct GDALDataset objects at the same time.\n\nGDALRasterBand / Persistent Auxiliary Metadata (PAM):\n - Support for preserving a variety of metadata in a supporting XML file.\n - GDALRasterBand now supports \"remembering\" histograms, and has a concept\n   of the default histogram.\n - GDALRasterBand now supports remembering image statistics.\n - Disabled by default (set GDAL_PAM_ENABLED=YES to turn on).\n - Supported by *most* drivers with some caveats.\n\nGDALCopyWords():\n - This function is a low level work horse for copying and converting pixel\n   data in GDAL.  It has been substantially optimized by Steve Soule (Vexcel).\n\nNext Generation Bindings:\n - Kevin Ruland and Howard Butler are working on reworked support for\n   SWIG to generate Python, PHP, Java, C# and other language bindings for GDAL\n   and OGR.\n\nVB6 Bindings:\n - Now substantially complete, see VB6 directory.\n\nHDF5 Driver:\n - New HDF5 driver implemented by Denis Nadeau.\n\nRMF Driver:\n - New driver for Raster Matrix Format by Andrey Kislev.\n\nMSGN (Meteosat Second Generation Native) Driver:\n - New driver implemented by Frans van der Bergh.\n\nVRT Driver:\n - Fixed whopper of a memory leak in warped raster case.\n\nNetCDF Driver:\n - Preliminary CF conventions support by Denis Nadeau.\n\nNITF Driver:\n - NITF files between 2 and 4 GB in size can now be read and written.\n\nJPEG Driver:\n - Added support for reading EXIF as metadata by Denis Nadeau.\n\nDODS Driver:\n - Fixed up libdap 3.5.x compatibility.\n\nJP2ECW (JPEG2000 ECW SDK) Driver:\n - Implemented support for new GML-in-JPEG2000 specification.\n - Implemented support for old MSI \"worldfile\" box.\n\nJP2KAK (JPEG2000 Kakadu) Driver:\n - Implemented support for new GML-in-JPEG2000 specification.\n - Implemented support for old MSI \"worldfile\" box.\n\nPCIDSK Driver:\n - tiled files now supported for reading.\n - overviews now supported for reading.\n\nHFA (Imagine) Driver:\n - Supports creating internal overviews in very large files.\n - Support reading class names.\n - Support creating compressed files.\n\nGeoTIFF Driver:\n - Support reading files with odd bit depths (i.e. 3, 12, etc).\n - Support 16/24bit floating point TIFFs (per Technote 3) (Andrey).\n - Support 12bit jpeg compressed imagery using libjpeg \"MK1\" library.\n\nHDF4 Driver:\n - Added support for ASTER Level 1A, 1B and 2 products (Andrey).\n\n## OGR 1.3.0 - Overview of Changes\n\nOGRGeometry:\n - WKT (and GML) encoding now attempts to preserve pretty much full double\n   precision.\n - geometries are now \"coordinate dimension preserving\" rather than dynamically\n   figuring out dimension depending on whether Z is set.  So a geometry can\n   now be 3D even if all z values are zero.\n - Fixed up proper EMPTY geometry support per standard.\n\nGRASS Driver:\n - New driver for GRASS 6 vector data written by Radim Blazek.\n\nInterlis Driver:\n - New driver for Swiss Interlis format from Permin Kalberer (SourcePole).\n\nShape Driver:\n - Fixed logic for degenerate polygons (Baumann Konstantin).\n\nPostgreSQL/PostGIS Driver:\n - Implemented fast GetExtent() method (Oleg Semykin).\n - Implemented layer type from geometry_columns (Oleg Semykin).\n - Handle PostGIS 1.0 requirements for coordinate dimension exactness.\n - Handle EWKT type in PostGIS 1.0.\n - Generally PostGIS 0.x and 1.0 should now be supported fairly gracefully.\n - Added PostGIS \"binary cursor\" mode for faster geometry access.\n\nVRT Driver:\n - Pass through attribute queries to underlying driver.\n - Pass through spatial queries as attribute filters on the underlying layer.\n\nS57 Driver:\n - Added concept of supporting different profiles.\n - Added prototype AML profile support.\n\nMySQL Driver:\n - Fixed for FID recognition (eg. mediumint).\n\nGML Driver:\n - Various fixes for generated GML correctness (Tom Kralidis).\n\nTIGER/Line Driver:\n - Added Tiger 2004 support.\n\nOracle Driver:\n - Use VARCHAR2 for fixed size string fields.\n - Use OCI_FID config variable when creating layers, and reading select results\n\n\n\n# GDAL 1.2.6 - Overview of Changes\n\ngdal_translate:\n - Added -sds switch to copy all subdatasets.\n\ngdalwarp:\n - Added Thin Plate Spline support (-tps switch).\n\nGDALRasterBand:\n - Now uses two level block cache allowing efficient access to files\n   with a very large number of tiles.\n - Added support for YCbCr color space for raster band color interpretations.\n - Added AdviseRead() method - currently only used by ECW driver and OGDI\n   drivers.\n\nILWIS Driver:\n - New driver for the raster format of the ILWIS software.\n\nECW Driver:\n - Updated to use ECW SDK 3.1 (older ECW SDK no longer supported!)\n\nECWJP2 Driver:\n - Added JPEG2000 support driver based on ECW/JPEG2000 SDK with a variety\n   of features.\n\nNITF Driver:\n - Added support for reading *and* writing JPEG2000 compressed NITF files\n   using the ECW/JPEG2000 SDK.\n - Added ICHIPB support.\n\nHDF Driver:\n - Add support for georeferencing from some additional metadata formats.\n - Fixed bug with multi-band HDF-EOS datasets.\n\nMrSID Driver:\n - Driver can now be built as a plugin on win32.\n - Split out MrSID 3.x SDK support - not readily buildable now.\n - Implemented accelerated IO cases for MrSID 4.x SDK.\n - Support for writing MrSID files added (improved?)\n\nImagine Driver:\n - Fixed bug reading some large multiband Imagine files.\n - Added support for writing compressed files.\n\nWin32 Builds:\n - Added versioning information to GDAL DLL.\n\nL1B Driver:\n - Only return a reduced grid of control points.\n\nIDA (WinDisp4) Driver:\n - New read/write driver for the Image Display and Analysis raster format\n   used by WinDisp 4.\n\nNDF (NLAPS) Driver:\n - Added NDF/NLAPS read driver for version 1 and 2.\n\nMSG Driver:\n - Added support for the Metosat Second Generation raw file format.\n\nGTiff Driver:\n - Added support for offset/scale being saved and loaded (special metadata).\n - Added Cylindrical Equal Area.\n - Added PROFILE creation option to limit extra tags.\n\nPNG Driver:\n - Updated internal code for libpng to libpng 1.2.8.\n\n## OGR 1.2.6 - Overview of Changes\n\nOGRSFDriverRegistrar:\n - Added support for autoloading plugin drivers from ogr_<driver>.so.\n\nogr.py:\n - Geometry, and Feature now take care of their own reference counting and\n   will delete themselves when unreferenced.  Care must still be taken to\n   unreference all features before destroying the corresponding\n   layer/datasource.\n - ogr.Feature fields can now be fetched and set directly as attributes.\n - Geometry constructor can now take various formats (wkt, gml, and wkb).\n - Added docstrings.\n - Added better __str__ methods on several objects.\n - Various other improvements.\n\nOGRLayer:\n - Re-wrote generic spatial search support to be faster in case of rectangular\n   filters.\n - Intersects() method now really uses GEOS.  This also affects all OGR\n   layer spatial filtering (with non-rectangular filters).\n - Added SetNextByIndex() method on OGRLayer.\n\nOGRSpatialReference:\n - Automatically generate +towgs84 from EPSG tables when translating to\n   PROJ.4 if available and TOWGS84 not specified in source WKT.\n - Updated GML CRS translation to follow OGC 05-011 more closely.  Still\n   incomplete but operational for some projections.\n - Added support for FIPSZONE State Plane processing for old ESRI .prjs.\n - Added Goode Homolosine support.\n - Added GEOS (Geostationary Satellite) support.\n\nOCI (Oracle) Driver:\n - Added GEOMETRY_NAME creation option to control the name of the field to\n   hold the geometry.\n\nPostGIS Driver:\n - Fixed some problems with truncation for integer and float list fields.\n\nShapefile Driver:\n - Added support for MapServer style spatial index (.qix).\n\nGML Driver:\n - Improved support for 3L0 (GML 3 - Level 0 profile) reading and writing.\n   On read we can now use the .xsd instead of needing to build a .gfs file.\n\n\n# GDAL 1.2.5 - Overview of Changes\n\ngdalwarp Utility:\n - Added \"proper\" source and destination alpha support.\n\nPCRaster Driver:\n - added write support, now consider ready for regular use.\n\nMrSID Driver:\n - Initial support for writing to MrSID with encoding SDK.\n\nGeoTIFF Driver:\n - Updated internal copy of libtiff to fix overview building ... really!\n - Fixed bug when writing south-up images.\n\n## OGR 1.2.5 - Overview of Changes\n\nOGRSpatialReference:\n - Added Bonne projection.\n\nDocs:\n - Added OGR C++ API Tutorial (reading and writing).\n\nPostGIS Driver:\n - Implemented SetFeature() and DeleteFeature() methods for in-place updates.\n\nOracle (OCI) Driver:\n - Fixed support for writing into Oracle 10g.\n - Fixed serious memory leak of geometries.\n - Fixed bug with 3D multipolygons.\n - Added support for selecting tables in the datasource name.\n\n\n# GDAL 1.2.4 - Overview of Changes\n\ngdalwarp:\n  - Fixed some issues with only partially transformable regions.\n  - Added Alpha mask generation support (-dstalpha switch).\n\nHFA/Imagine Driver:\n  - bug fix in histogram handling.\n  - improved support for large colormaps.\n\nEnvi Driver:\n  - Capture category names and colormaps when reading.\n\nSAR CEOS Driver:\n  - Added support for PALSAR/ALOS Polarimetric Datasets.\n\nRadarSat 2 Driver:\n  - New.  Reads RadarSat 2 Polarimetric datasets with a \"product.xml\" and\n    imagery in TIFF files.\n\nOGDI Driver:\n  - Important bug fix for downsampled access.\n\nGeoTIFF Driver:\n  - Lots of libtiff upgrades, including some quite serious bug fixes.\n  - Added better support for 16bit colormaps.\n  - Write projection information even if we don't have a geotransform or GCPs.\n  - Improved alpha support.\n  - Generate graceful error message for BigTIFF files.\n\nDODS Driver:\n  - Almost completely reimplemented.   Uses chunk-by-chunk access.  Supports\n    reading several bands from separate objects.  Some new limitations too.\n\nNetCDF Driver:\n  - Separated out a GMT NetCDF driver and a more generic but partially broken\n    NetCDF driver (Radim).\n\nJP2KAK Driver:\n  - Added alpha support, including greyscale+alpha.\n\nAirSAR Driver:\n  - New, reads AirSAR Polarimetric Radar format.\n\n## OGR 1.2.4 - Overview of Changes\n\nepsg_tr.py:\n  - Added escaping rules when generating PostGIS output.\n\ntigerpoly.py:\n  - Discard dangles and degenerate rings.\n\nVRT Driver:\n  - Fixed serious error in handling cleanup of VRT datasources, was often\n   causing a crash.\n\nSQLLite Driver:\n  - Fixed substantial memory leaks.\n\nMySQL Driver:\n  - New readonly non-spatial MySQL driver implemented.\n\nMITAB Driver:\n  - Updated from upstream, several fixes.\n\nTIGER/Line Driver:\n  - Fixed serious bug with handling \"full\" records at end of .RT2 file.\n\nOCI/Oracle Driver:\n  - Added OCI_FID environment support to control FID selection.\n\nOGRGeometry:\n  - Added Centroid() implementation (from GEOS?)\n\n# GDAL 1.2.3 - Overview of Changes\n\nGeoTIFF Driver:\n    - Fixed many missing compression codecs when built with the internal\n      libtiff.\n    - Modified driver metadata to only list available compression types.\n\nDODS Driver:\n    - Added support for OPeNDAP version after 3.4.x (use of opendap-config).\n\nGRASS Driver:\n    - Fixed support for building with grass57.\n\nMrSID Driver:\n    - Fixed support for MrSID Encoding SDK.\n\nNITF Driver:\n    - Fixed serious bug with non-square output files.\n\n\n## OGR 1.2.3 - Overview of Changes\n\nOGRSpatialReference:\n    - Corrected memory leaks - OSRCleanup() cleans up temporary tables.\n    - Fixed build problem with ogrct.cpp on Solaris.\n\nTIGER Driver:\n    - Improved generality of support for GDT files.\n\nOGRGeometry:\n    - Added getArea() method for rings, polygons and multipolygons.\n\n\n# GDAL 1.2.2 - Overview of Changes\n\nGRASS Driver:\n    - Add Radim's version of the driver submitted by Radim.  This version\n      uses GRASS 5.7 libraries directly instead of using libgrass.\n\nDODS Driver:\n    - Added support for spatial_ref, FlipX and FlipY .das info.\n\nCPG Driver:\n    - added new driver for Convair Polarimetric format.\n\nHDF Driver:\n    - Significant bugs fixed.\n\nUSGS DEM Driver:\n    - Support writing UTM projected files.\n\nPNG Driver:\n    - Upgraded to libpng 1.2.6.\n\nMrSID Driver:\n    - Substantial performance improvements.\n    - Support for DSDK 4.x\n    - Support JPEG2000 files via MrSID SDK.\n\nNITF Driver:\n    - Support JPEG2000 compressed files (with Kakadu support)\n\nESRI BIL:\n    - Support .clr color files.\n\nVRT Driver:\n    - Added support for describing raw files with VRTRawRasterBand.\n    - Added support for virtual warped files with VRTWarpedRasterBand.\n\nGeoTIFF Driver:\n    - Fix support for 16bit image color tables.\n    - Write ExtraSamples tag for files with more samples than expected\n      in photometric interpretation.\n    - External overviews now built for read-only files.\n\nErdas Imagine Driver:\n    - Fixed support for compressed floating point layers.\n    - Various other fixes for compatible with newer Imagine versions.\n    - improved metadata handling.\n\ngdal_merge.py:\n    - sets projection on output file.\n\n## OGR 1.2.2 - Overview of Changes\n\nSQLite Driver:\n    - New read/write driver implemented for SQLite databases.\n\nCSV Driver:\n    - New read/write driver implemented for comma separated value files.\n\nS-57 Driver:\n    - Substantial performance improvements.\n\nODBC Driver:\n    - Arbitrary length field values now supported.\n\nGEOS:\n    - Integration a series of methods utilizing GEOS when available.  Note\n      that Intersect() is still just an envelope comparison.\n\nOGRSpatialReference:\n    - Fixed Swiss Oblique Mercator support.\n\n===========================================================================\n\n# GDAL 1.2.1 - Overview of Changes\n\ngdal_contour:\n    - Now build and installed by default.\n\nHDF4 Driver:\n    - Added some degree of HDF-EOS support.  HDFEOS layer now part of GDAL.\n\nDODS Driver:\n    - Substantial fixes, support for flipped datasets.\n\nHFA (Erdas Imagine) Driver:\n    - Fixed bug with files between 2 and 4GB.\n    - Capture statistics as metadata.\n\nErdas 7.x LAN/GIS Driver:\n    - Newly implemented.\n\nUSGS DEM Driver:\n    - Various fixes to creation support / CDED product.\n\nNITF Driver:\n    - Capture USE001 and STDIDC TREs as metadata.\n    - Capture all sorts of header information as metadata.\n    - Support geocentric corner coordinate specification.\n\nMrSID Driver:\n    - Support added for DSDK 4.0.x.\n\nECW Driver:\n    - Added preliminary support for using 3.0 SDK for JPEG2000 support.\n    - Fix oversampling assertion problem.\n\nArcInfo Binary Grids:\n    - Added support for 0x01 and 0x20 block type.\n\n## OGR 1.2.1 - Overview of Changes\n\nOGRSpatialReference:\n    - Various fixes related to prime meridians.\n\nPostgreSQL/PostGIS Driver:\n    - Added layer name laundering.\n    - Launder names on by default.\n    - Clean stale entries in geometry_columns table when creating a layer.\n    - Support treating names views as layers.\n    - Handle long command strings.\n\nS57 Driver:\n    - Fixed serious bugs with support for auto-applying update files.\n    - Improvements to S57 writing support.\n\n# GDAL 1.2.0 - Overview of Changes\n\nConfiguration:\n    - Libtool used by default with Unix style builds.  Use --without-libtool\n      to avoid this.\n    - PROJ.4 can now be linked statically using --with-static-proj4.\n    - Added --without-bsb option for those averse to legal risk.\n\nDODS/OPeNDAP Driver:\n    - Preliminary DODS (OPeNDAP) driver implemented (James Gallagher @ URI).\n\nPCIDSK Driver:\n    - PCIDSK read/write raster driver implemented (Andrey).\n\nErdas Imagine / HFA Driver:\n    - Support recent Imagine versions (data dictionary changes).\n    - Better logic to search for .rrd file locally.\n    - Support creating files in the 2GB to 4GB size range.\n\nGIF Driver:\n    - Updated to libungif 4.1.0.\n    - Various hacks to try and identify transparent colors better.\n\nBMP Driver:\n    - Handle 32bit BMPs properly.\n\nHDF4 Driver:\n    - Added proper support for multi-sample GR datasets.\n    - Various fixes and improvements for specific product types.\n\nGeoTIFF Driver:\n    - Added PHOTOMETRIC option to control photometric interp of new files.\n\nJPEG2000/Kakadu Driver:\n    - Support reading/creating lossless 16bit files.\n    - Updated to support Kakadu 4.1 library.\n\nNITF Driver:\n    - Implement support for IGEOLO=\"U\" (MGRS/UTM) coordinates.\n    - Added overview (as external GeoTIFF file) support.\n\nMrSID Driver:\n    - Support DSDK 4.2.x.\n\nPNG Driver:\n    - Support required byte swapping of 16bit PNG data.\n\nFAST Driver:\n    - lots of fixes, supports more datums and ellipsoids.\n\nNetCDF Driver:\n    - New driver implemented for netCDF support.\n    - Pretty much tied to form of netCDF used in GMT for now.\n\nVTerrain .bt Driver:\n    - New driver for VTerrain .bt elevation format.\n\nECW Driver:\n    - support supersampled reads efficiently.\n    - special case for dataset level RasterIO() implemented for much better\n      performance in some applications.\n\nESRI BIL (EHdr) Driver:\n    - Support world files.\n\nVRT Driver:\n    - Implement filtering support.\n\nGIO (Arc/Info Binary Grid via avgridio.dll):\n   - Driver disabled ... to undependable.\n\n\nPython:\n    - Preliminary support for numarray in addition to numpy (Numeric).\n\nContouring:\n    - New gdal_contour utility program implementing contour generation.\n    - Underlying algorithm in gdal/alg.\n\nWarping:\n    - Improved support in GDALSuggestedWarpOutput() for \"world\" sized\n      files that are only partially transformable.\n    - Bicubic resampler improved.\n    - What was gdalwarptest is now gdalwarp, and the old gdalwarp is now\n      gdalwarpsimple.  The sophisticated warper is now the default.\n\nMan Pages:\n    - Man pages for GDAL utilities now being maintained and installed (Silke).\n\n## OGR 1.2.0 - Overview of Changes\n\nOGRSpatialReference:\n   - Added methods for converting to/from GCTP representation.\n   - Added HOM 2 points on centerline variant.\n\nDODS (OPeNDAP) Driver:\n   - Preliminary implementation.\n\nTIGER/Line Driver:\n   - Added support for GDT ASCII TIGER-like format.\n   - Support TIGER/Line 2003 format.\n\nS-57 Driver:\n   - Preliminary export support implemented.\n   - Support capture of FFPT (feature to feature) linkages.\n   - Support capture of TOPI from VRPT.\n   - Support capture of primitives as additional layers.\n\nShapefile Driver:\n   - gdal/frmts/shapelib removed from GDAL source tree, now just a\n     copy of required shapelib files are kept in gdal/ogr/ogrsf_frmts/shape.\n   - Attempt identify polygons that are really multi-polygons and convert them\n     into multi-polygons properly (Radim Blazek).\n   - Create FID attribute in .dbf file if no attribute added by application.\n\nGML Driver:\n   - Lots of fixes and improvements for reading and writing.\n   - Now writes a schema file by default.\n   - Field types are set now when reading based on data found on first pass.\n   - Added support for the various kinds of geometry collections.\n\nDGN Driver:\n   - Now using dgnlib 1.9 - this carries with it various new element types\n     and some important bug fixes.\n\nODBC Driver:\n   - New ODBC driver implemented.  Build by default on Windows, and buildable\n     on Unix (with unixodbc).\n\nVRT Driver:\n   - New \"virtual\" OGR Datasource format implemented.\n   - Configuration stored in XML control file.\n\nOracle (OCI) Driver:\n   - support reading views.\n\nOGR Core:\n   - Added support for WKT EMPTY geometry objects (like \"MULTIPOINT(EMPTY)\").\n   - Added DeleteFeature() method on OGRLayer class.\n\nNTF Driver:\n   - Support CHG_TYPE attribute for landline plus product.\n\n\n# GDAL 1.1.9 - Overview of Changes\n\n o MrSID Driver: New for 1.1.9, read-only, includes good coordinate system\n   support, and should be high performance.\n\n o ECW Driver: Now reads coordinate system information (but doesn't write).\n\n o HDF Driver: Added support for Hyperion Level 1, Aster Level 1A/1B/2, MODIS\n   Level 1B(earth-view)/2/3, SeaWIFS Level 3.\n\n o L1B Driver: Now reads GCPs for georeferencing.\n\n o NITF Driver: Support for reading RPC, variety of bugs fixes for reading and\n   writing.  Also some general RPC infrastructure added to GDAL.\n\n o JP2KAK Driver: Can be used with Kakadu 4.0.2 now.  Compatibility fixes\n   for internal geotiff to improve compatibility with Mapping Science tools.\n   Added palette support.\n\n o HFA (Imagine) Driver: Added read/write support for color table opacity.\n   Added write support for large (spill) files.\n\n o \"core\" directory renamed to \"gcore\" to avoid confusing configure script.\n\n o Added support for GDAL_DATA environment variable to point to GDAL support\n   data files (those in gdal/data directory).\n\n o Added GDALDataset::RasterIO() for more efficient reading of multiple bands\n   in one request (in some cases anyways).\n\n o High performance warp api considered to be complete now, and substantially\n   optimized.\n\n o gdal_merge.py: supported multiple bands, copying PCT.\n\n\n## OGR 1.1.9 - Overview of Changes\n\n o Oracle Spatial: New generic read/write, and implemented highly optimized\n   loading support.\n\n o Tiger driver: added support for TIGER/Line 2002 product.\n\n o GML driver:  now supports Xerces versions from 1.6 up to 2.3.  Lots of\n   bugs fixes and improvements.   GML Geometry now in OGR core.\n\n o Improved support for translating to and from ESRI WKT, including a complete\n   mapping between EPSG related ESRI datum names and OGR's expected names.\n\n o Improved support for alternate prime meridians in coordinate system code.\n\n o Shapefiles: Can write features with NULL geometry,\n\n o DGN: added 3d write support.\n\n o Implemented generic attribute indexing support (only used for shapefile\n   at this point).  Use in SQL where clauses and ExecuteSQL().\n\n o WKT MULTIPOINT in/out formatting fixed.\n\n o Added SynToDisk() method on OGRDataset and OGRLayer.\n\n o Implemented \"Web Coordinate Transformation Service\" (ogr/wcts).\n\n o Implemented \"in memory\" format driver.\n\n o C API documented.\n\n\n# GDAL 1.1.8 - Overview of Changes\n\n o Implemented HDF 4 read/write support. This includes HDF EOS reading.\n\n o Implemented Windows BMP read/write support.\n\n o Implemented NITF read/write support.\n\n o Implemented NOAA Polar Orbiter L1B format driver.\n\n o Implemented EOSAT FAST format driver.\n\n o Implemented a JasPer based JPEG2000 driver (several limitations).\n\n o Implemented a Kakadu based JPEG2000/GeoJP2(tm) driver (full featured, but\n   Kakadu is not open source).\n\n o Implemented new 'gdalwarp' application for projection and GCP based image\n   warping.  See gdal/alg for underlying algorithms.  Currently gdalwarp only\n   supports 8 bit images and holds the whole source image in memory.\n\n o Implemented write support for ESRI ASCII Grids.\n\n o Lots of improvements to GeoTIFF driver.  Metadata writing, update of\n   georeferencing, and support for writing PCS codes based on AUTHORITY fields\n   in WKT.\n\n o Implemented support for uncompressed 1bit data in Erdas Imagine files,\n   as well as generic metadata.\n\n o Fixed 0xFF compression support in the Arc/Info Binary Grid (AIG) driver.\n\n o Lots of improvements to BSB drive, including preliminary uncompressed\n   output support, support for reading BSB 3.0 and GEO/NOS.\n\n o Lots of work on VRT format.\n\n o ECW: Fixed bug with reading a more than full resolution.\n\n o Envisat driver now supports AATSR TOA and MERIS data.\n\n o Fixes for nodata support in GRASS driver.\n\n o Added the --version and --formats options to many utility programs.\n\n o gdal_translate:\n    - added -projwin flag to copy a window specified in projection coordinates.\n    - added the -a_srs option to assign a user supplied SRS to output file.\n    - translation with subsetting to any format now support (uses VRT inside).\n\n o Lots of metadata now attached to driver objects describing their\n   capabilities.\n\n o Implemented GDALDestroyDriverManager() to ensure full memory cleanup of\n   GDAL related resources.\n\n o Added a 'devinstall' target on Windows to support easy installation of\n   include files and stub libraries on Windows.  Also many other improvements\n   to Windows build.  Most options can be easily turned on and off from the\n   nmake.opt file now.\n\n\n## OGR 1.1.8 - Overview of Changes\n\n o Implemented support for writing 2D DGN files.   Added support for MSLINK\n   and Text values available as attributes.\n\n o Implemented FMEObjects based read driver.\n\n o Implemented ExecuteSQL() method on OGRDataSource.  Generic code supports\n   fairly full featured SELECT statements.\n\n o Various fixes to 3D shapefile support.\n\n o Fixes to binary representation for 2.5D geometries.  Fixed MULTIPOINT WKT\n   geometry representation.\n\n o Upgraded OGRSpatialReference.importFromEPSG() to use the new EPSG 6.2.2\n   tables instead of the old EPSG 4.x tables.\n\n o Many fixes to PostGIS driver, including special creation options for\n   \"laundering\" field names to save tokens.\n\n o Many improvements to standards conformance of OGRSpatialReference WKT\n   representation to the OGC Coordinate Transformations specification.  Still\n   some quirks related to prime meridians and coordinate systems with units\n   other than degrees.\n\n o Implemented support for Meridian 2 NTF files in NTF driver.  Better\n   support for GENERIC_CPOLY geometries.\n\n o  Added support for [NOT] IN, [NOT] LIKE and IS [NOT] NULL predicates in\n   WHERE clauses.\n\n o Implemented a C API for accessing OGR.\n\n o Implemented support for building OLE DB Provider with Visual Studio.NET\n   (many changes in ATL templates).  Lots of other OLE DB improvements for\n   better MapGuide compatibility.\n\n\n# GDAL 1.1.7 - Overview of Changes\n\n o Add XPM (X11 Pixmap) format.\n\n o Added rough ENVI raster format read support.\n\n o Added --version support (and supporting GDALVersionInfo() function).\n\n o Special hooks for getting raw record data from sar ceos files and Envisat\n   via the metadata api.\n\n o Upgraded TIFF/GeoTIFF support to CVS version ... includes new extension\n   API and removes need for private libtiff include files entirely.\n\n o gdal_translate now has scaling option (-scale).\n\n o Added utility documentation.\n\n## OGR 1.1.7 - Overview of Changes\n\n o Added Arc/Info binary coverage format read support.\n\n o Added ogrtindex for building MapServer compatible OGR tile indexes.\n\n o Added default implementation of GetFeature(fid) method on OGRLayer.\n\n o Shape driver now supports reading and creating free standing .dbf files\n   for layers without geometry.\n\n o Added utility documentation.\n\n o Fixed major memory/file handle leak in SDTS access.\n\n o Added ADSK_GEOM_EXTENT support for OLE DB provider.\n\n o Ensure shapefiles written with correct polygon ring winding direction\n   plus various other shapefile support fixes.\n\n o GML read/write working reasonable well, including use of .gfs files.\n\n\n# GDAL 1.1.6 - Overview of Changes\n\n o Add > 2GB file support on Linux 2.4.\n\n o Implemented USGS DEM reading.\n\n o Implemented BSB Format (Nautical Chart Format) read support.\n\n o Preliminary implementation of Virtual Datasets (gdal/frmts/vrt).\n\n o Support for writing DTED files.\n\n o Some raw formats (i.e. PAux, HKV) support files larger than 2GB.\n\n o Add the AddBand() method on GDALDataset.\n\n o PAux: Added color table read support.\n\n o Various fixes to OGDI driver.\n\n o Stripped out the GDALProjDef related capabilities.  Superseded by\n   OGRSpatialReference, and OGRCoordinateTransformation functionality.\n\n o Improved CEOS support, notable for ESA LANDSAT files, D-PAF ERS-1 and\n   Telaviv ERS data.\n\n o geotiff: upgraded libtiff support to approximately libtiff 3.5.7.\n\n o DGN: Added support for complex shapes, shapes assembled from many elements.\n   Various other improvements.\n\n\n## OGR 1.1.6 - Overview of Changes\n\n o Fixed OGDI driver so that gltp urls with drive letters work properly on\n   windows.\n\n o Many improvements to OLE DB provider during the process of making it\n   compatible with the MapGuide (SDP) client.  These include implementing\n   restrictions for schema rowsets, treating missing information like WKT\n   coordinate systems as NULL fields, and setting ISLONG on geometry fields.\n   Also made thread safe.\n\n o DGN: Threat SHAPE elements as polygons.  Set style information for text.\n   Added 3D support for most elements.\n\n o Fixed bugs in WKT format for some OGR geometry types (i.e. multipoint).\n\n o Added support for morphing to/from ESRI WKT format for OGRSpatialReference.\n\n o NTF: Don't try to cache all the records from multiple files at once.\n\n o Added experimental XML SRS support ... not the final schema.  Added\n   supporting \"minixml\" support to CPL.\n\n o PostGIS: Upgraded to PostGIS 0.6.  Added \"soft transaction\" semantics.\n   Many create feature calls can now be part of one transaction.  Transactions\n   are now a general OGR concept although only implemented for PostGIS.\n\n o Added transform() and transformTo() methods for reprojecting geometries and\n   added user options for this in ogr2ogr.\n\n o Very preliminary GML read/write support.  Needs Xerces C++ XML parser for\n   read support.\n\n# GDAL 1.1.5 New Features\n\no AIGrid:\n- Return nodata value.\n\no OGDI:\n- Added format user documentation.\n- Added Sub Dataset support.\n- Utilize OGDI 3.1 style capabilities metadata.\n\no SAR_CEOS:\n- Added support for Alaska SAR Toolbox naming convention.\n- Read map projection record for corner GCPs.\n\no PNG Driver:\n- read/write support for transparency via colortable and nodata value.\n\no Erdas Imagine (HFA) Driver:\n- Added support for reading external large image files.\n- Added support for uncompressed, but reduced precision blocks.\n\no GIF Driver:\n- Added .wld world file support.\n- Added transparency read support.\n- Upgraded to libungif 4.x.\n\no JPEG Driver:\n- Added .wld world file support.\n\no PAux Driver:\n- Added limited gcp and projection read support.\n\no GeoTIFF Driver:\n- Added specialized support for 1 bit files.\n- Upgraded world file reading (added .wld files), use\nGDALReadWorldFile().\n\no JDEM Driver is new (Japanese DEM format).\n\no FujiBAS Driver is new.\n\no ERMapper ECW Driver is new.\n\no GDAL Bridge: upgraded to include new entry points, like GCP access and\nnodata api.\n\no gdal_translate: added the -not_strict option.\n\no GDALGetRandomRasterSample(): Return magnitude for random samples.\n\no Added use of CPL_CVSID macro in most source files. Running the RCS ident\ncommand on any GDAL executable or shared library should now give a listing\nof most object file versions from which it was built.\n\no Various improvements so that static builds will work under Cygwin.\n\no Various improvements so that builds can be done on MacOS X.\n\no Overviews: Implement AVERAGE_MAGPHASE option for complex image overviews.\n\no Added support for sub datasets to gdalinfo, core api and OGDI raster driver.\n\no The size of the GDAL cache can now be overridden with the GDAL_CACHEMAX\nenvironment variable (measured in MB).\n\no Added Driver implementation tutorial to documentation.\n\no Added apps/gdaltindex.c - application for building tile indexed raster\ndatasets suitable for use with UMN MapServer.\n\n\n## GDAL 1.1.5 Significant Bug Fixes\n\no SAR_CEOS:\n- Don't try to get GCPs from scanlines with no prefix data.\n\no GeoTIFF:\n- Fixed handling of RGBA band ordering on big endian systems.\n- Fixed bugs in overview generation, especially when updating in place.\n\no gdal-config should work properly in all situations now.\n\no JPEG Driver: improved magic number tested to avoid ignoring some jpeg files.\n\no FITS Driver: lots of fixes and improvements.\n\n\n## OGR 1.1.5 New Features\n\no Implemented support for attribute query filters (SetAttributeFilter())\non OGRLayer, provided SWQ based implementation, plugged into all\ndrivers and added hooks to ogrinfo.\n\no MapInfo Driver:\n- Added accelerated spatial query support.\n- Upgraded to current MITAB source as of GDAL release date.\n\no S-57 Driver:\n- Added support for applying S-57 updates automatically.\n\no SDTS Driver:\n- Added ENID and SNID to line features.\n- Return coordinate system in WKT instead of PROJ.4 format.\n\no Shapefile Driver:\n- Auto determine shapefile type from first object written.\n- Added good support for NULL shapes, and NULL attribute fields.\n- Added support for .prj files (read and write).\n\no PostgreSQL Driver:\n- Added PostGIS support.\n- Pass attribute queries through to PostgreSQL.\n\no NTF Driver:\n- Added support for GTYPE 5 geometries (a type of arc).\n- Added support for GEOMETRY3D records in indexed (generic) datasets.\n\no TIGER/Line Driver:\n- Added write support.\n- Improved read support for TIGER 2000.\n\no OLE DB Provider:\n- Added support for spatial queries via ICommand parameters.\n- Added support for attribute queries by parsing out WHERE clause.\n- In general substantial rework and extensions were made to make it\nwork with ESRI and AutoDesk clients.\n\no Added gdal/data/stateplane.txt - a test file with one line per state plane\nzone for applications wanting to present options to users.\n\no Install ogrsf_frmts.a on install if building with OGR support enabled.\n\no Reports layer extents in ogrinfo.\n\n## OGR 1.1.5 Significant Bug Fixes\n\no OGRSpatialReference:\n- Fix bug with extracting linear units from EPSG derived definitions.\n- Fixed bug translating LCC from EPSG to WKT (importFromEPSG()).\n- Improved IsSame() test for GEOGCS now.\n- Fixed crash if PROJECTION missing from PROJCS definition.\n\no S-57:\n- Improve recovery from corrupt line geometries.\n- Read objects as generic if the object class is not recognised.\n- Handle LIST attributes as a string, instead of as a single int.\n\no NTF:\n- Fixed circle conversion to polylines to close the circle properly.\n- Upped MAX_LINK to 5000 to handle much more complex geometries.\n\no DGN:\n- Don't include elements with the complex bit set in extents\ncomputations.\n\no OGRGeometry:\n- Fixed WKT format (import and export) for various container types.\n- WKT import fixed for coordinates, and Z coordinates.\n"
        },
        {
          "name": "NEWS-2.x.md",
          "type": "blob",
          "size": 242.154296875,
          "content": "# GDAL/OGR 2.4.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL drivers:\n   - BYN: read/write support for Natural Resources Canada's Geoid binary format\n   - EEDAI: read-only driver for Google Earth Engine Data API\n   - IGNFHeightASCIIGrid: read-only driver to read IGN-France height correction ASCII grids\n   - NGW: NextGIS Web read-only driver\n   - NTv1: read-only driver for NTv1 datum shift grids\n * New OGR drivers:\n   - EEDA: read-only driver for Google Earth Engine Data API\n   - GeoJSONSeq: read/creation support of new-line or record-separator separated GeoJSON features (#378)\n   - NGW: NextGIS Web read-write driver\n * Improved drivers:\n   - BAG: add read support for variable-resolution grids, and write support for single-resolution grids\n   - GTiff driver: add Lerc and WebP codecs\n   - PostgisRaster: add support for out-db rasters\n   - RMF\n   - MSSQLSpatial\n * RFC 72: Make GDAL Python autotest suite use pytest framework\n * Add /vsihdfs/ virtual file system handler for Hadoop File System (via libhdfs)\n * Add /vsiwebhdfs/ read-write virtual file system for Web Hadoop File System REST API\n * gdal_contour rewriting: speed optimizations and capability to compute polygon isosurfaces.\n * Remove PHP and Ruby bindings.\n * Continued code linting in C++, Python scripts, Shell scripts and autotest\n\n## Backward compatibility issues\n * The value of COMPRESSION_ZSTD used for ZStd-in-TIFF compression has been changed. ZStd-compressed TIFF files produced by GDAL 2.3.0 will not be readable\n\n## GDAL/OGR 2.4.0 - General Changes\n\nBuild(Unix):\n * configure: error out when --enable-pdf-plugin is used with --with-libtool since frmts/pdf/GNUmakefile isn't ready for that (#556)\n * Fix compilation in C++17 mode with older ogdi headers\n * Fix the datadir in gdal.pc.\n * re-install cpl_vsi_error.h\n * update GRASS drivers to support GRASS 7.4.0 (#639, #633)\n * configure: use CXXFLAGS when CXX is used (#693)\n * GNUmakfile: fix dependency of install target (#707)\n * configure: fix 12 bit JPEG-in-TIFF support (#716)\n * configure: Remove additional '$' in front of '${CXX}' to fix ECW5 detection\n * configure: use ogdi.pc if available\n * Set minimum pkg-config version to 0.21\n * fix potential link errors when using internal libgif and internal libpng but headers of those libraries are available in the system in different versions than our internal ones (#938)\n\nBuild(Windows):\n * nmake.opt: allow install into paths with spaces\n * MBTiles driver: fix issue in Makefile\n * Fix HDF4 Plugin build for Visual C++ (#624)\n * NMAKE: copy gdal pdb to $(LIBDIR) in libinstall target\n * NMAKE: Enable friendlier static library builds to allow an external `DLLBUILD = 0`\n * nmake.opt: allow DEBUG=0 to be set (#703)\n * Do not include DllMain() in static library builds\n * add support for JPEGLS driver\n\nAll:\n * Add support for Poppler 0.64, 0.69, 0.71\n * avoid compilation error when compiling GMT's gmtdigitize.c that defines _XOPEN_SOURCE to empty (#590)\n * Fix build against PDFium (#612)\n * Add support for MySQL 8.0\n\n## GDAL 2.4.0 - Overview of Changes\n\nPort:\n * Add multi-threaded compression to /vsigzip/ and /vsizip/\n * /vsizip/: create ZIP64 when needed\n * /vsizip/: encode filename in Unicode when needed also in local file header\n * /vsigzip/: allow seeking to beginning of file, despite decompression error\n * /vsicurl/: extend retry logic to HTTP 500 and HTTP 400 with RequestTimeout, emit a CE_Warning if code != 400 and != 404\n * /vsicurl/: fix parsing of HTML file listing that got broken in GDAL 2.3.0\n * /vsicurl/ and derived: implement a LRU cache for file properties (instead of ever growing cache)\n * /vsicurl/ and derived: implement a LRU cache for directory content listing\n * /vsicurl/: make GetCurlMultiHandleFor() more thread-safe\n * HTTP: added curl cookiefile and cookiejar variables (fixes #1000)\n * /vsioss/: fix support of filenames with spaces\n * /vsizip/: output explicit error message when encountering a unsupported file compression method\n * /vsis3/: fix VSIStatL() on a directory (#603)\n * /vsis3/: take into account AWS_CONTAINER_CREDENTIALS_RELATIVE_URI for ECS instances (#673)\n * /vsis3/: honour CPL_VSIL_CURL_ALLOWED_EXTENSIONS configuration option (#995)\n * /vsis3/: ignores files with GLACIER storage class in directory listing, unless CPL_VSIL_CURL_IGNORE_GLACIER_STORAGE=NO\n * /vsiaz/: support BlobEndpoint element in AZURE_STORAGE_CONNECTION_STRING such as found in Azurite (#957)\n * Add a VSICurlPartialClearCache(const char* filenameprefix) function to partially clear the /vsicurl/ and related caches; and bind it to SWIG\n * Add VSISync() to synchronize source and target files/directories\n * /vsitar/: support headers with fields using star base-256 coding (#675)\n * Add VSIOpenDir/VSIGetNextDirEntry/VSICloseDir and provide efficient recursive implementation for /vsis3/, /vsigs/, /vsioss/ and /vsiaz/\n * Detect Amazon EC2 instances that use the newer hypervisor. Deprecates CPL_AWS_CHECK_HYPERVISOR_UUID and replaces with CPL_AWS_AUTODETECT_EC2\n * CPLString class: rework visibility of exported symbols for Visual Studio (rework of #321) (#636)\n * CPLGetPhysicalRAM(): take into account cgroup limitation (Docker use case), and rlimit (#640)\n * CPLGetNumCPUs(): take into account cgroup limitation.\n * ODBC: Improve Fetch() error handling.\n * ODBC: get multiple ODBC error messages.\n * ODBC: Fetch wide-char strings on UNIX (#839)\n * Fix buffer overflow in GDALDefaultCSVFilename with GDAL_NO_HARDCODED_FIND (#683)\n * VSIZipFilesystemHandler::Open: Fix leaks of poVirtualHandle (#699)\n * Fix date-time formatting for /vsigs/, /vsiaz/ and /vsioss/ protocols with non-C locales\n * CPLQuadTreeGetAdvisedMaxDepth(): avoid int overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9248\n * CPLJSonStreamingParser: make it error on invalid array constructs (#970)\n * Add a GDAL_HTTPS_PROXY configuration option to selectively setup proxy for https only connections (#972)\n * Add template class CPLAutoClose (#952)\n * Make VSIToCPLError() handle the generic VSIE_AWSError (#1007)\n * Propagate error handler user data correctly (#1098)\n * CPLOpenSSLCleanup(): reset callbacks to nullptr to avoid potential segfault\n\nCore:\n * SetStatistics(): write a STATISTICS_APPROXIMATE=YES metadata item if bApproxOK=true, and take it into account in GetStatistics() (trac #4857, trac #4576)\n * Add percentage of valid pixels to metadata when computing raster band statistics (#698)\n * Overview creation: avoid creating too many levels, and fix related heap buffer overflow (#557,#561)\n * Overview: fix wrong computation of source pixel indices for AVERAGE and pixel-interleave bands\n * Lanczos rasterio/overview/warp: do not compute target pixel if there are too many missing source pixels, to avoid weird visual effects depending on if valid source pixels match positive or negative kernel weights\n * Overview / RasterIO resampling: do not use nodata value as a valid output value\n * RawRasterBand: only accept VSILFILE*\n * Add alpha mask flag for alpha band in Uint16 One band dataset (#742)\n * GetMaskBand(): do not use a GDALNoDataMaskBand when nodata value is out of range (#754)\n * Pleiades metadata reader: Add more strict check (#431)\n * Statistics/minmax computation: on a float32 raster, be more tolerant when the nodata is slightly larger than +/- FLOAT_MAX\n * GDALNoDataMaskBand: improve performance in downsampling cases\n * GDALDestroy(): no longer call it automatically on GCC/CLang (non-MSVC) builds\n * GDALGetJPEG2000Structure(): avoid excessive memory allocation. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8268\n * Implement GDALAllValidMaskBand::ComputeStatistics(). Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9309\n * PAMDataset: avoid illegal down_cast to GDALPamRasterBand. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9358\n * GDALOpenEx(): improve anti recursion detection. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9391\n * GDALResampleChunk32R_Convolution: avoid invalid left shift. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9477\n * Gauss resampling: fix potential read heap buffer overflow in corner cases. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9783\n * GDALDefaultOverviews::OverviewScan(): avoid potential infinite recursion. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10153\n * GDALPamRasterBand::CloneInfo(): do not clone empty RAT\n\nAlgorithms:\n * OpenCL wrapper: fix memory leak\n * Warper: add complex nodata handling in average/min/max modes\n * TPS solver: improve numerical stability, for non Armadillo builds, for points not centered on (0,0)\n * GCP polynomial interpolation: fix bug where worst_oultier always assumed polynomial order 2\n * GCP polynomial interpolation: fix bug where remove_ouliers used the parameters of the reverse transformation\n * GDALGridLinear(): speed-up search of triangle for points outside of the triangulation\n * gdal_grid linear: avoid artifacts with degenerate triangles (#638)\n * GDALPansharpenOperation::Initialize(): validate value of GDAL_NUM_THREADS (CID 1393944)\n * GDALFillNodata(): add NODATA option\n * GDALDEMProcessing(): fix null pointer dereference if psOptionsIn == nullptr (#931)\n\nUtilities:\n * gdal_translate: make -stats option work with -co COPY_SRC_OVERVIEWS=YES (#792)\n * gdal_translate: fix RPC correction when using -srcwin with negative offsets (#827)\n * gdalwarp: automatically enable SKIP_NOSOURCE=YES when it is safe to do so\n * gdalwarp: make -crop_to_cutline stick to source pixel boundaries when no raster reprojection is involved, to avoid unnecessary resampling or resolution change\n * gdalwarp -r average: better deal with south-up oriented datasets (#778)\n * gdalwarp: improve robustness of computation of source raster window for a given target raster window (#862)\n * gdalwarp: allow to create bottom-up grid with -te xmin ymax ymin ymin\n * gdalwarp: fix crash when warping on an existing dataset with less bands as needed\n * gdal_contour: speed optimizations and capability to compute polygon isosurfaces.\n * gdal_contour: add amin and amax parameter for gdal_contour to be used with option -p\n * gdal_contour: avoid out-of-memory situation (#594)\n * gdal_contour: fix GDAL 2.3 regression with fixed interval contouring that resulted in discontinuities in contour lines (#889)\n * gdal_merge.py: deal with NaN values\n * gdal_retile.py: fix rounding issues when computing source and target regions (#670)\n * gdal_calc.py: add --optfile switch\n * gdal2tiles: fix wrong computation of min zoom level in some cases (#730)\n * gdal2tiles: add -x option for skipping transparent tile generation\n * gdal2tiles: fix performance issue by caching source dataset; GDALAutoCreateWarpedVRT()\n * gdal2tiles: fix issue with out-of-range nodata values (#770)\n * gdal2tiles: restore GDAL < 2.3 behavior when output directory is not explicitly specified (#795)\n * gdal2tiles: fix --force-kml (#809)\n * gdal_edit.py: add -setstats to set \"fake\" statistics (#819)\n * gdal_edit.py: add -unsetrpc option to gdal_edit.py, and fix GTiff driver to be able to clear RPC\n * gdal_grid: fix -clipsrc from a vector datasource (broken at least since GDAL 2.1)\n * gdalenhance: avoid potential nullptr dereference (CID 1394096)\n * make sure that --config is early evaluated for config options such as CPL_VSIL_CURL_CHUNK_SIZE that are read early\n\nMulti driver changes:\n * HFA and KEA: better support for writing RATs (trac #4903)\n * Fix creation of large enough datasets with drivers EHdr, ENVI and ISCE that failed due to inappropriate check on file size whereas the file wasn't filled yet (#705, 2.3.0 regression)\n\nBAG driver:\n * avoid warnings when reading georeferencing\n * get datetime\n * safer retrieval of variable extents\n * add read support for variable-resolution grids, and write support for single-resolution grids\n\nE00GRID driver:\n * correctly parse projection sections that have lines with tildes (#894)\n\nEHdr driver:\n * only write .stx if bApproxOK=false (#514)\n\nENVI driver:\n * support reading truncated datasets (#915)\n\nERS driver:\n * fix quadratic performance in parsing .ers header. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8404\n * avoid excessive memory allocation. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8497\n * avoid potential stack overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8614\n * prevent infinite recursion. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8744\n * avoid potential bad cast. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8745\n\nFIT driver:\n * avoid excessive block size on creation. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8292\n * error out in CreateCopy() on failed I/O on source dataset. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8338\n\nGeoRaster driver:\n * Fix the issue by freeing the temporary lobs created by readCLob() and writeCLOB().\n\nGPKG driver:\n * fix memleak if I/O error occurs on write\n * retrieve original raster file when using gdal_translate -co APPEND_SUBDATASET=YES with other gdal_translate switches\n * copy source metadata when using TILING_SCHEME\n * properly delete gridded coverage raster layers\n\nGRIB driver:\n * replace DataSource and derived classes with VSILFILE directly for > 4GB file support on Windows\n * turn printf() warning as CPLDebug() messages\n * read and write missing data values correctly for complex packing when original data is integer (#1063)\n * g2clib: avoid int overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8194\n * g2clib: avoid potential out of bound access (CID 1393528)\n * degrib: fix floating point division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9407.\n * degrib: avoid potential floating point division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10291\n * add UNIT[] node to SRS on reading, so that is valid\n\nGTiff driver:\n * Add TIFF Lerc codec (in GTiff driver itself)\n * Add TIFF WebP codec (in libtiff)\n * save XMP on field TIFFTAG_XMLPACKET (#767)\n * fix retrieving mask band of overview band when the mask is external. Fixes -co COPY_SRC_OVERVIEWS=YES of such datasets (#754)\n * improve progress report in CreateCopy() when there is a mask (#935)\n * improve performance reading multi-band 1-bit data. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7840.\n * internal libtiff: updated to libtiff 4.0.10\n * internal libgeotiff: resync with upstream.\n * workaround bug in currently released libgeotiff versions, where when rewriting a ASCII key with a string value longer than the original value (#641)\n * allow the use of PREDICTOR with ZSTD compression\n * avoid various memory corruptions in case of some corrupted file. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8488\n * load PAM if not already done when GetDefaultRAT() is called\n * fix missing #ifdef causing compilation failure due to missing bTryCopy (#946)\n\nHDF4 driver:\n * quote swath and field names if needed (if they contain spaces, column, quotes) in HDF4_EOS subdataset names\n\nHDF5 driver:\n * add VSI functionality (#786)\n * fix reading variable names with single character (#622)\n * fix HDF5 object leak (thus preventing file closing) on datasets with variable length attributes (#933)\n\nHFA driver:\n * fix floating point division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9201\n * fix division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10190\n\nHTTP driver:\n * do not immediately delete a file used by the JP2OpenJPEG driver\n\nILWIS driver:\n * Fix performance issue on creation with big number of bands. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9062\n\nIRIS driver:\n * add UNIT[] node to SRS on reading, so that is valid\n * avoid infinite loop. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8256 and 8439\n\nISCE driver:\n * do not try to stat() mainfile.xml if mainfile does not exist\n\nISIS3 driver:\n\nFITS driver:\n * allow reading/writing beyond 2 billion pixels limit\n\nJP2OpenJPEG driver:\n * allow YCC for non-Byte datasets; and allow 4-band MCT with openjpeg >= 2.2\n * add CODEBLOCK_STYLE creation option for OpenJPEG >= 2.3\n * add support for generating and using external overviews\n\nJPEG driver:\n * slightly improve performance of whole RGB image loading with pixel-interleaved buffer\n * Internal libjpeg: Avoid integer overflow on corrupted image in decode_mcu_DC_first() (https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9447)\n\nJPEGLS driver:\n * Add support for CharLS 2 (#632)\n\nMRF driver:\n * Add TestBlock(), skip empty areas when building overviews\n * Fix detection of Lerc2 data\n * Resync with upstream LercLib and put it in third_party/LercLib\n\nNetCDF driver:\n * add VSI functionality on Linux (#786)\n * add support for longitude values wrapping at 180deg of longitude (#1114)\n * avoid use of uninitialized variable when reading blocks in creation mode\n\nNGSGEOID driver:\n * report a CRS that conforms to the official publications for GEOID2012 and USGG2012 datasets (#1103)\n\nNITF driver:\n * avoid excessive processing time on corrupted files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8972\n * avoid heap-buffer-overflow for VQ compression. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9467\n\nPCIDSK driver:\n * add back support for creating external overviews, removed years ago when switching to the new PCIDSK SDK (#887)\n\nPCRaster driver:\n * libcsf: avoid potential out of bound access (CID 1074445)\n\nPDF driver:\n * Remove forced use of libstdc++ for macOS when building plugin (#888)\n\nPDS driver:\n * deal with detached labels whose line spacing is not a multiple of record size (#955)\n * add support for reading CRISM images\n * add support for ^QUBE = number for multi-band images\n\nPDS4 driver:\n * fix georeferencing reading/writing to use pixel corner convention (#735)\n * add UNIT[] node to SRS on reading, so that is valid\n\nPostgisRaster driver:\n * add support for out-db rasters (Trac #3234)\n * use ST_BandFileSize of PostGIS 2.5 when available for outdb_resolution=client_side_if_possible\n * improve performance of line by line reading; add performance hints section in the doc\n * fix CreateCopy() when PostGIS is not in public schema\n * add quoting of identifiers\n\nPRF driver:\n * Fix Photomod x-dem files georeference\n\nRasterLite2 driver:\n * fail on Create() that is not supported\n\nRDA driver:\n * enable support for DG RDA Image Reference string\n\nRMF driver:\n * Add support JPEG compressed RMF datasets (#691)\n * Add optional projection import/export from EPSG code (#701)\n * Create compressed datasets: LZW, DEM, JPEG (#732)\n * Cache decoded tile to improve performance of interleaved access\n * Parallelize data compression, add internal tile write-cache, add compressed overviews support (#748)\n * Fix 4-bit dataset reading\n * Expose NBITS to metadata\n\nRS2 driver:\n * avoid potential memleak (CID 1393537, CID 1393534, CID 1074387)\n\nSENTINEL2 driver:\n * Add support of S2x_MSIL2A files (#1069)\n\nSGI driver:\n * writer: avoid out-of-bound buffer access. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8889\n\nSIGDEM driver:\n * be more robust against excessive memory allocation attempt\n * avoid floating point division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11220\n\nSDTS driver:\n * avoid long processing time on corrupted dataset. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11219\n\nSRP driver:\n * ASRP/USRP: allow opening files padded with 0x5E / ^ character without emitting error (#838)\n\nUSGSDEM driver:\n * fix reading of Benicia.dem and Novato.dem (trac #4901, #583)\n * optimize I/O access a bit\n * avoid potential out-of-bounds access (CID 1393532)\n * avoid int overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9475\n\nVRT driver:\n * GDALCreateWarpedVRT(): automatically set GCI_AlphaBand on the alpha band\n * data/gdalvrt.xsd: add GDALRasterAttributeTable (#818)\n * VRTComplexSource: make sure that min and max values in case of exponential resampling are properly computed\n * ComputeStatistics(): optimize when nodata is set on a single SimpleSource\n * Fix issue when opening VRT with large number of bands (#1048)\n * deal with serialized nodata value that is slightly outside Float32 validity range (#1071)\n * fix source window computation that caused sub-pixel shift with non-nearest resampling\n * fix potential int overflow on invalid VRT\n\nWCS driver:\n * Parse envelopes with time periods. Improve error reporting. Fix one SUBDATASETS metadata thing. More metadata from Capabilities to metadata. Print some URLs in debug mode. Unique subset params in URLs. Add time domain interval to metadata.\n * GeoServer does not like primary subsets to have postfixes. Fix service dirty issue. Add GeoServer TimeDomain coverage metadata. Do not put service parameter into subdataset name and use generic coverage parameter\n * deal with GDALPamDataset::GetMetadata returning nullptr. (#648)\n\nWMTS driver:\n * avoid issue with reprojection of layer extent into TileMatrixSet SRS\n * fix issue with inappropriate zoom level being selected causing integer overflow in raster dimension computation\n * fix potential off-by-one pixel when compositing the underlying WMS/TMS source into the final raster\n\n## OGR 2.4.0 - Overview of Changes\n\nCore:\n * Add JSON field subtype for String fields\n * OGR SQL: avoid int overflow on -(-9223372036854775808) evaluation. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8717\n * OGR SQL: evaluation modulo operator on floating point values as a floating point modulo. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8761.\n * OGR SQL: swq_expr_node::Evaluate(): avoid too deep recursion. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8836\n * OGRLineString::TransferMembersAndDestroy(): fix crashing issue with M component. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8773.\n * OGRGeometry::exportToGEOS(): fix potential out-of-bounds write on some GeometryCollection with TIN/PolyhedralSurface (#688)\n * OGRGeometryFactory::organizePolygons(): improve performance for polygons with many consecutive identical nodes. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9618\n * Fix IsValid() for a TRIANGLE with GEOS, but without SFCGAL\n * morphToESRI(): fix a heap user-after-free.\n * OGRFeature::SetField( int iField, const char * const * papszValues ): avoid potential invalid access to pauFields[iField].StringList.paList\n * SQLite dialect: fix when ROWID is used in WHERE clause and the source layer has a real FID column name\n * GML geometry parser: recognize MultiGeometry.geometryMembers syntax (refs https://issues.qgis.org/issues/19571)\n * OGRGetXMLDateTime(): Interpret TZFlag correctly (#996)\n * OGRFeatureStyle: Restore font field at OGRStyleSymbol\n\nOGRSpatialReference:\n * importFromEPSG(): append ' (deprecated)' at end of deprecated GCS and GEOCCS (#646)\n * ogr_opt.cpp: fix wrong values and add missing values in papszProjectionDefinitions[]\n * importFromProj4/exportToProj4: fix typo in the PROJ method name of InternalMapOfTheWorldPolyconic which is imw_p\n * Krovak: explicit that alpha and Pseudo_standard_parallel_1 are hardcoded in PROJ\n * SetNormProjParm(): avoid division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10588\n * FindMatches(): if the input SRS has a EPSG code, check that its definition and the EPSG one actually matches (#990)\n\nUtilities:\n * ogr2ogr: reject -append, -select options together\n * ogr2ogr: speed-up in case of big number of field name clashes. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8960\n * ogr2ogr: make -clipsrc work when output dataset has no geometry field (#943)\n * ogrlineref: fix tolerance for not geographic spatial reference\n * ogrmerge.py: avoid exception in error code path of GetOutputDriverFor()\n * ogrmerge.py: fix issue with non-ASCII characters (fixes #1067)\n\nMulti driver changes:\n * KML/LIBKML: robustify for out-of-memory conditions (fixes https://issues.qgis.org/issues/19989)\n * XLSX / ODS: avoid harmless warning in some cases when guessing column data types\n\nAVCE00 driver:\n * avoid perforance issues on huge lines. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8284\n * fix performance issue on reading PRJ section. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9061\n\nBNA driver:\n * refuse to open existing file in update mode, since it causes later crashes when attempting to add new features (https://issues.qgis.org/issues/18563)\n * avoid long processing. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8754\n * more efficient building of polygons. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10951\n\nCAD driver:\n * Fix read objects map. Upgrade version of libopencad to 0.3.4. (#677)\n * Fix wrong OGRCircularString construction from CADCircle. (#736)\n * avoid integer overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8385\n * Fix buffer overflow on skip read. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9107\n\nCarto driver:\n * Use new /sql/copy-from end point for writing (#715)\n * fix ICreateFeatureCopy() with unset fields\n\nCSV driver:\n * in writing, use WKT instead of actual geometry column name if GEOMETRY=AS_WKT mode is used without CREATE_CSVT=YES (fixes #660)\n * writer: limit to 10000 fields to avoid performance issues. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9336 (8449 as well)\n * avoid endless loop when iterating and updating features (#919)\n\nDXF driver:\n * add PaperSpace field (Trac #7121)\n * allow attributes with spaces in the tag\n * Correctly handle non-uniformly-weighted spline HATCH boundaries (#1011)\n * avoid null pointer dereference when DXF_MAX_BSPLINE_CONTROL_POINTS is hit. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8254.\n * Fix reporting of wrong line numbers in errors (fixes #726)\n * Don't crash when spline control point limit is reached\n * fix memory leak in case of attempt to write GeometryCollection of unsupported type\n\nEDIGEO driver:\n * reading multipolygons (trac #6955, #711)\n\nElasticSearch driver:\n * add compatibility with ES v6.0\n * add a USERPWD open option\n * add lazy loading of layers\n * add a LAYER open option\n * skip xpack indices, and do not emit 503 error when listing unauthorized layers\n * add a INDEX_DEFINITION layer creation option\n *allow several geometry fields of type GEO_POINT to be created\n\nESRIJson driver:\n * parse documents that lack 'geometryType' member (#914)\n\nGeoJSON driver:\n * fix type deduction when there is a Feature.id of type string and Feature.properties.id of type int. The later has precedence over the former (arbitrary decision) (#669)\n * properly flush the file in SyncToDisk() in append situations (https://issues.qgis.org/issues/18596)\n * parse '{\"type\": \"GeometryCollection\", \"geometries\": []}' as empty geometrycollection\n * increase max memory allowed to parse a single feature (#807)\n * remove topojson from extensions recognized by the driver\n * add partial support for field names differing by case (#1057)\n * RFC7946 writer: clip and offset geometries outside [-180,180] (#1068)\n * no longer write NaN/Infinity values by default (#1109)\n\nGeoRSS driver:\n * avoid excessive processing time. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9263\n\nGML driver:\n * avoid fetching SRS from http\n * fix potential memory leak in case of duplicated name of geometry fields in .gfs\n * improve performance for large number of attributes. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9038.\n\nGPKG driver:\n * add read/write support for JSON field subtype\n * speed up GetExtent() on huge tables with rtree. Refs https://issues.qgis.org/issues/18402\n * take into ROLLBACK TO SAVEPOINT to invalidate cached feature count\n * make sure to not invalidate POSIX advisory locks\n * remove useless check that encoding is UTF-8 (#793)\n * fix typo in gpkg_metadata_reference_column_name_update trigger definition\n * optimize table renaming by avoiding to drop the spatial index, but just renaming it\n\nIDF driver:\n * use a temporary SQLite database (when driver available) for files larger than 100 MB\n * add support for Z coordinate (#964)\n\nLIBKML driver:\n * add support for reading several schemas for the same layer (#826)\n * make edition of existing file work (https://issues.qgis.org/issues/18631)\n * implement OGRLIBKMLLayer::SyncToDisk() to fix https://issues.qgis.org/issues/18631\n * workaround weird issue with OSGeo4W and newline characters in <coordinate> element (fixes https://issues.qgis.org/issues/19215)\n\nMITAB driver:\n * fix potential use of uninitialized memory\n * improve performance of adding many fields in a .tab. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8559\n * fix geometry corruption when editing some datasets (#817)\n * fix writing .tab when field name has invalid characters in it (#924)\n * Expose font family to feature style symbol ID\n\nMSSQLSpatial driver:\n * Add support for MSODBCSQL (#1136)\n * Fix layer-schema separation problem (#586)\n * Fix bulk copy for multiple layers (#619)\n * Accept datetime values (#841)\n * Don't truncate string values on Unix (#843)\n * Create 3D features (#852)\n * enforce read-only/update mode for CreateFeature/SetFeature/DeleteFeature\n * fix retrieval of geometry column on Linux for SQL result layers\n * Use only valid SRIDs; Create features preserving SRID (#860)\n * Fix geometry parser with M values (#1051)\n * Assign new ID following an INSERT (#1052)\n * Adding configuration option MSSQLSPATIAL_ALWAYS_OUTPUT_FID (#1101)\n\nMVT driver:\n * writer: do not ignore Z/M/ZM geometries\n * writer: make it possible to output to /vsizip/output.zip out-of-the-box\n * disable check on 'extent' field in identifiation method, which rejected tiles with extent > 16384\n * avoid recursion on opening. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10226\n\nMySQL:\n * add support for MySQL 8.0\n\nNAS driver:\n * speed-up in case of huge number of attributes. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7977\n\nOCI driver:\n * Ensure table Dims and GTYPE are retrieved for the correct table (#629)\n\nOGR_GMT driver:\n * avoid performance issue when opening layer with big number of fields. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8259.\n\nOGR_PDS driver:\n * avoid int overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9136\n\nOpenFileGDB driver:\n * Catch a NaN in FileGDBDoubleDateToOGRDate to prevent undefined behavior. (#740)\n * fix potential crash on corrupted datasets. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11313\n\nOSM driver:\n * allow parsing files with up to 10 000 nodes per way (#849)\n * avoid array overflow with ways with many tags. Relates to https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9618\n\nPCIDSK driver:\n * defer writing of segment header to improve performance when creating huge number of fields. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8191\n * fix performance issue when inserting in layer with huge number of fields. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8335.\n\nPDF driver:\n * fix the parser of drawing instructions that had issues with array objects\n\nPG driver:\n * add SPATIAL_INDEX=SPGIST/BRIN layer creation options (and PGDump as well) (#892)\n * add read/write support for JSON field subtype\n\nPGDump driver:\n\nPLScenes driver:\n * fix /vsicurl/ raster download\n * fix scene activation\n * add ground_control field in layer definition\n\nShapefile driver:\n * avoid being dependent on correctness of file size field in .shp\n * fix corruption when deleting a field from a .dbf without records (#863)\n * Add CP1251 codepage name synonym (ANSI 1251) for DBF files.\n\nS57 driver:\n * add S57_AALL, S57_NALL, S57_COMF, S57_SOMF creation options (#810)\n\nSOSI driver:\n * fix memory leaks / null pointer dereference\n\nSQLite/Spatialite driver:\n * avoid SetFeature() to reset the iterator (#964)\n * Spatialite: read table name in its original case (#1060)\n * do not run spatial index creation in rollback code\n\nVFK driver:\n * create index on ID column only for selected (geometry-related) layers (#498)\n * create db indices after inserting data (#498)\n * create indices before resolving geometry\n * new open option - include filename field (#564)\n * speed up sequential feature access\n * fix leak of unfinalized statement (#634)\n * fix file check on Windows with large files (#637)\n * fix big int overflow, force text attributes (PODIL_CITATEL/PODIL_JMENOVATEL) to avoid int64 overflow (#672)\n * fix missing geometry for SBPG layer (#710)\n * missing fields in update mode gfs (#734)\n\nVRT driver:\n * revise logic for handling the <FID> element (or when it is omitted) (#941)\n\nWFS driver:\n * avoid potential bad cast. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9800\n\nWFS3 driver:\n * update to current version (May 2018) of the API draft (#626)\n * add USERPWD open option\n\nXLSX driver:\n * avoid stack buffer overflow is creating too many fields. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8198\n * avoid timeout. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8225\n * fix null pointer dereference. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8286\n\n## SWIG Language Bindings\n\nAll bindings:\n * use a dedicated VSILFILE class to avoid type mismatch (#601)\n * reload drivers if GDAL_SKIP/OGR_SKIP is defined with --config in gdal/ogr.GeneralCmdLineProcessor()\n * Add VSIFFlushL()\n * Add VSIErrorReset()\n\nCSharp bindings:\n * GDALCreateCopy.cs sample code: Correct misspelling in info message (#647)\n * SWIG 2.x and 3.x compatibility (#824)\n\nJava bindings:\n * update to Java 1.6 requirement to please 'ant maven' target\n * Fix JNI library bundling.\n\nPerl bindings:\n * fix make dependencies (#43)\n\nPython bindings:\n * Python logging improvements: add gdal.ConfigurePythonLogging() function  (#1017)\n * added support for band / pixel interleave for numpy array\n * fixed NULL check on python's swig VSIFReadL (#572)\n * fix dataset[slice] access (#574)\n * added support for reading vsi data as memorybuffer and writing buffers via VSIFWriteL\n * setup.py: add more prominent warning when numpy is not available (#822)\n * for utilities as library functions, when gdal.UseExceptions() is enabled, do not emit Python exceptions when the operation is reported as successful\n * update import path\n * avoid crash in ReadRaster() under low memory condition (#1026)\n\n# GDAL/OGR 2.3.0 Release Notes\n\nNote: due to the change of SCM during the development, #XXXX still refers to\nTrac tickets. GitHub tickets are explicitly indicated with github #XXXX\n\n## In a nutshell...\n\n * New GDAL drivers:\n   - PDS4: read/write\n   - RDA: DigitalGlobe Raster Data Access (read-only)\n * New OGR drivers:\n   - MVT: add read/write driver for Mapbox Vector Tile standalone files or tilesets\n   - ESRIJson and TopoJSON: read-only, split from existing code of the GeoJSON driver\n   - WFS3: *experimental* read-only driver\n * RFC 68: Make C++11 a build requirement\n    https://trac.osgeo.org/gdal/wiki/rfc68_cplusplus11\n * RFC 70: Guess output format from extension of output filename, if no explicit format passed to C++ or Python utilities\n    https://trac.osgeo.org/gdal/wiki/rfc70_output_format_guess\n * RFC 71: Move to GitHub for source code repository and issue tracker.\n    https://trac.osgeo.org/gdal/wiki/rfc71_github_migration\n * Significantly improved drivers:\n    - MBTiles (vector tiles support)\n    - DXF\n    - GRIB (GRIB2 write support)\n    - WCS (support WCS 2.0)\n * Improvements in network-based /vsi handlers: /vsicurl, /vsis3, /vsigs. Add:\n     - /vsiaz for Microsoft Azure Blobs\n     - /vsioss for Alibaba Cloud Object Storage Service\n     - /vsiswift/ for OpenStack Swift object storage\n * Command line utilities: use Unicode main on Windows to avoid issues with non-ASCII characters (#7065)\n * Update to EPSG v9.2 (#7125)\n * Update data/esri_extra.wkt and add data/esri_epsg.wkt, taken from https://github.com/Esri/projection-engine-db-doc (Apache v2 license) (#2163)\n * Add support for PROJ.5 new API (requires proj 5.0.1 or later). PROJ 4.X is still supported.\n * More than 1000 fixes for issues/vulnerabilities found by OSS-Fuzz\n * Remove raster OGDI driver (vector OGDI driver still there) (#7087)\n\n## New installed files\n\n * data/pds4_template.xml\n * data/esri_epsg.wkt\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.TXT\n\n## GDAL/OGR 2.3.0 - Build changes\n\nBuild(Unix):\n * refresh config.{guess,sub} from latest upstream; upgrade to libtool 2.4.6 files\n * add a --with-rename-internal-shapelib-symbols option that defaults to yes if --with-hide-internal-symbols is set; and make -with-rename-internal-libtiff/libgeotiff-symbols also defaults to yes when --with-hide-internal-symbols is set\n * add a --with-charls switch (enabled by default) to compile that JPEGLS driver\n * make --without-static-proj and --with-fgdb an error when filegdb (>= 1.5) embeds proj.4 symbols\n * add --with-zstd switch (for GTiff ZStd compressino with internal libtiff)\n * add support for ECW SDK 5.4, by detecting if we must link against the newabi or oldabi link\n * fix detection of 64bit file API with clang 5 (#6912)\n * GNUmakefile: add a static-lib and install-static-lib targets\n * use .exe extension when building with mingw64* toolchains (#6919)\n * Pass --silent to libtool in compile (C and C++), link, install and clean modes.\n * Limit number of installed cpl*.h files installed to a fixed list.\n * configure / m4/acinclude.m4: replace use of CCFLAGS by plain CFLAGS (github #529)\n * configure / m4/acinclude.m4: require 'long long' type (github #530)\n\nBuild(Windows):\n * always build the PDF driver, even when none of poppler/podofo/pdfium are available, in which case it is write-only (#6938)\n * add new targets bindings, bindings_install and bindings_clean that depend on the new BINDINGS option in nmake.opt (#6948)\n * for Kakadu, add capability to build as a plugin, and make it possibly to link only against the Kakadu .lib/.dll instead of incorporating some of its .obj (#6940)\n * nmake.opt: Ensure PDB is included in release DLL if WITH_PDB requested (#7055)\n * nmake.opt: use /MDd for OPTFLAGS for DEBUG=1 builds (#7059)\n * nmake.opt: avoid some settings to be defined unconditionally (#5286)\n * nmake.opt: add configuration to enable openssl (which is needed for thread-safe curl use)\n\nBuild(All):\n * fix compilation error with Crypto++ 7.0.0 (github #541)\n\nDeveloper corner:\n * Add scripts/setdevenv.sh to setup env variables needed for running GDAL without installing it\n\n## GDAL 2.3.0 - Overview of Changes\n\nPort:\n * Add CPLJSONDocument/Object/Array - C++ thin wrapper around json-c library. (github #282)\n * /vsicurl/: fix occasional inappropriate failures in Read() with some combinations of initial offset, file size and read request size (#6901)\n * /vsicurl/: add a CPL_VSIL_CURL_NON_CACHED configuration option, so as to be able to specify filenames whose content must not be cached after dataset closing\n * /vsicurl/: honour GDAL_HTTP_MAX_RETRY and GDAL_HTTP_RETRY_DELAY config options. Add extended filename syntax to pass options use_head, max_retry, retry_delay and list_dir.\n * /vsicurl/: enable redirection optimization on signed URLs of Google Cloud Storage. Helps for the PLScenes driver (fixes #7067)\n * /vsicurl/ and derived filesystems: redirect ReadDir() to ReadDirEx() (#7045)\n * /vsicurl/ and related file systems: add compatibility with HTTP/2 (requires recent enough curl, built against nghttp2). Can be controlled with the GDAL_HTTP_VERSION=1.0/1.1/2/2TLS\n * /vsicurl/: fix 2.2 regression regarding retrieval of file size of FTP file (#7088)\n * /vsicurl/: when stat'ing a file, fallback from HEAD to GET if the server issues a 405 error\n * Add a VSICurlClearCache() function (bound to SWIG as gdal.VSICurlClearCache()) to be able to clear /vsicurl/ related caches (#6937)\n * CPLHTTPSetOptions(): use SearchPathA() for curl-ca-bundle.crt on Windows. See https://github.com/curl/curl/issues/1538\n * CPLHTTPFetch() / vsicurl: add retry on HTTP 429, and add exponential backoff logic for retry delay\n * CPLHTTPFetch(): when openssl is enabled, and used by libcurl, use openssl thread safety mechanism to avoid potential crashes in multithreading scenarios\n * CPLHTTPFetch(): add a SSL_VERIFYSTATUS option / GDAL_HTTP_SSL_VERIFYSTATUS configuration option to check OCSP stapling\n * CPLHTTPFetch(): add a USE_CAPI_STORE option / GDAL_HTTP_USE_CAPI_STORE configuration option to use certificates from the Windows certificate store\n * Ignore SIGPIPE that may arose during curl operations (mostly when using OpenSSL for TLS)\n * Add CPLHTTPMultiFetch() and CPLMultiPerformWait()\n * /vsis3/: support reading credentials from ~/.aws/credentials, ~/.aws/config or IAM role on EC2 instances\n * /vsis3/: properly handle cases where a directory contains a file and subdir of same names; implement Mkdir() and Rmdir()\n * /vsis3/: fix Seek(Tell(), SEEK_SET) fails if current position is not 0 (#7062)\n * /vsis3/: properly handle 307 TemporaryRedirection (#7116)\n * /vsis3/: fix support of bucket names with dot in them (#7154)\n * /vsis3/: make multipart upload work with Minio\n * /vsigs/: add new authentication methods using OAuth2 refresh token or service account or Google Compute Engine VM authentication, or using ~/.boto file\n * /vsigs/: add write, Unlink(), Mkdir() and Rmdir() support\n * /vsigs/: allow authentication to be done with the GOOGLE_APPLICATION_CREDENTIALS configuration option pointing to a JSon file containing OAuth2 service account credentials\n * /vsis3/ and /vsigs/: take into account user provided x-amz- / x-goog- HTTP headers with GDAL_HTTP_HEADER_FILE\n * Fix CPLReadDirRecursive() to behave properly on /vsis3/ buckets that have foo (file) and foo/ (sub-directory) entries (#7136)\n * /vsis3/: add a AWS_NO_SIGN_REQUEST=YES configuration option to disable request signing (#7205)\n * /vsis3, /vsigs, /vsioss, /vsiaz: fix support of non-ASCII characters in keys (#7143)\n * Add VSIGetActualURL(), typically to expand /vsis3/ paths to full URLs, and bind it to SWIG as gdal.GetActualURL()\n * Add VSIGetSignedURL()\n * Add VSIGetFileSystemsPrefixes() and VSIGetFileSystemOptions()\n * CPLFormFilename() / CPLProjectRelativeFilename(): add /vsis3 and similar file systems to the list of filesystems requiring unix separator (github #281)\n ù Make CPLFormFilename() properly work with http[s:]// filenames\n * Add a CPLGetErrorCounter() function that can be used to test if new errors have been emitted\n * Add cpl_safemaths.hpp to detect integer overflows (#6229)\n * /vsigzip/: avoid trying to write a .gz.properties file on a /vsicurl/ file (#7016)\n * CPLStrtod(): parse string like '-1.#IND0000000' as NaN instead of -1 (seen when looking at refs #7031, but does not fix it)\n * Fix CPLCopyTree() that doesn't properly on MSVC 2015 (and possibly other platforms) (#7070)\n * /vsimem/: to improve Posix compliance, do not make Seek() after end of file error out in read-only mode\n * cpl_config.h.vc: define HAVE_LONG_LONG 1; cpl_port.h remove MSVC specific logic for int64 (github #264)\n * /vsisparse/: make Read() detect end of file\n * GDALVersionInfo(\"BUILD_INFO\"): report if GEOS is available\n * Add VSIMkdirRecursive() and VSIRmdirRecursive()\n * Add CPLGetHomeDir()\n * CPLSetErrorHandler(): avoid later crashes when passing a null callback (github #298)\n * CPLHTTPParseMultipartMime(): make it format the pasMimePart[].papszHeaders in a standard key=value format without EOL\n * CPLString: avoid std::string symbols to be exported with Visual Studio (#7254)\n * I/O on Android: add support for 64-bit file operations if API level >= 24 (Android 7.0 or later) (github #339)\n\nCore:\n * add GDALDataTypeIsFloating, GDALDataTypeIsSigned, GDALDataTypeUnionWithValue, GDALFindDataType, GDALFindDataTypeForValue (github #215). Add GDALDataTypeIsInteger()\n * Cleanup ARE_REAL_EQUAL() and GDALIsValueInRange() (#6945, #6946)\n * Various SSE2/AVX2 optimizations for GDALCopyWords()\n * GDALGCPsToGeoTransform(): add GDAL_GCPS_TO_GEOTRANSFORM_APPROX_OK=YES and GDAL_GCPS_TO_GEOTRANSFORM_APPROX_THRESHOLD=threshold_in_pixel configuration option (#6995)\n * RawDataset::IRasterIO(): don't assume all bands are RawRasterBand\n * GDALOpenInfo: make number of bytes read at opening configurable with GDAL_INGESTED_BYTES_AT_OPEN\n * GDALCopyWholeRasterGetSwathSize(): try to use at least 10 MB for swath size\n * GDALDatasetCopyWholeRaster(), GDALRasterBandCopyWholeRaster(), GDALCreateCopy(): always call AdviseRead() on the full extent of the source dataset (#7082)\n * make DefaultCreateCopy() copy RAT\n * Generate gcore/gdal_version.h from git date and sha for a dev version (Unix builds only)\n * Add GDALDataset::Open()\n * Add C++ iterators for layers, bands and features in GDALDataset\n * External .ovr: make sure that ExtraSamples tag is written\n * Overview creation: avoid creating too many levels, and fix related heap buffer overflow (github #557)\n * SetStatistics(): write a STATISTICS_APPROXIMATE=YES metadata item if bApproxOK=true, and take it into account in GetStatistics() (#4857,#4576)\n\nAlgorithms:\n * Contour: make sure no 3D geometry is created unless -3d switch is defined (#336)\n * Warper: revise/improver how working data type is inferred from other parameters\n * Warper: when operating on single-band, skip target pixels whose source center pixel is nodata (2.2 regression, #7001)\n * Warper: avoid blocking when number of rows is 1 and NUM_THREADS > 1 (#7041). Also limit the number of threads so that each one processes at least 65536 pixels\n * Warper: use AdviseRead() when source chunks are sufficiently compact (#7082)\n * Warper: fix rounding error in scale factor computation (github #273)\n * Warper: use panSrcBands[0] in the single band case (regression fix, github #295)\n * Warper: add very special case to handle situation where input raster edge touches dateline, but proj.4 transformation involves a discontinuity (#7243)\n * Geoloc transformer: fix systematic pixel shift (github #244)\n * RPC transformer: set output coordinates to HUGE_VAL when failure occurs, so that a following coordinate transformation can detect the error too (#7090)\n * RPC transformer: return NULL at instantiation if the specified RPC_DEM file cannot be opened\n * Export GDALRegisterTransformDeserializer() and GDALUnregisterTransformDeserializer() (#5392)\n * GDALRasterize(): avoid hang in some cases with all_touched option (#5580)\n * Optimize GDALResampleConvolutionVertical() and GDALPansharpenOperation::WeightedBroveyPositiveWeightsInternal() for SSE2 / AVX\n * Overview / resampling: speed-up bicubic upsampling for SSE2\n * GDALGrid() with linear algorithm: avoid assertions/segmentation fault when GDALTriangulationFindFacetDirected() fails (#7101)\n * GDALComputeProximity(): fix int32 overflow when computing distances on large input datasets (#7102)\n * GDALAllRegister(): make sure that all drivers that need to look for sidecar files are put at the end\n\nUtilities:\n * GDAL and OGR C++ and Python utilities: accept -f or -of to specify output format\n * --optfile: re-parse inlined content with GDALGeneralCmdLineProcessor(), in particular to support --config key value in option file\n * gdalsrsinfo: for consistency with other output, do not quote the proj.4 string output\n * gdal_rasterize: fix segfault when rasterizing onto a raster with RPC (#6922)\n * gdal_rasterize: add a -to option to specify transformer options\n * gdal_rasterize / GDALRasterizeGeometries(): optimize rasterization for large number of small geometries (#5716)\n * gdal_rasterize: fix crash in some situations with ALL_TOUCHED option (#7176)\n * gdaladdo: support not specifying explicitly overview factors, and add -minsize option\n * gdal_translate: add -a_scale / -a_offset (#7093)\n * gdal_translate: add -colorinterp / -colorinterp_X options\n * DefaultCreateCopy()/gdal_translate: do not destroy target file in case of failed copy wen using -co APPEND_SUBDATASET=YES (#7019)\n * gdal_translate: make -b mask[,xx] use the appropriate band data type (#7028)\n * gdal_translate property copy RAT (or not-copy RAT when -norat is specified)\n * gdalwarp: make -crop_to_cutline works when RPC transform is involved\n * gdalwarp: for RPC warping add a few extra source pixels by default\n * gdalwarp: -crop_to_cutline: reduce number of iterations to find the appropriate densification (#7119)\n * gdalwarp: do not set implicitly nodata on destination dataset when -dstalpha is specified (#7075)\n * gdalwarp: display errors (such as invalid open options) on successful opening of destination dataset\n * gdalwarp: fix \"-dstnodata inf\" (#7097)\n * gdalwarp: fix when several input datasets with different SRS are specified, and no explicit target SRS is provided (#7170)\n * gdalwarp: make sure to try to redefine the destination nodata value from the source nodata even if the newly created dataset has already set a default nodata value (#7245)\n * gdalwarp: improve progress meter when using multiple source files. For GDALWarp() function, make sure that the progress goes monotonically from 0 to 1. (#352)\n * gdal2tiles.py: fix GDAL 2.2 regression where tilemapresource.xml was no longer generated (#6966)\n * gdal2tiles: add --processes=intval option to parallelize processing (#4379)\n * gdalinfo --format / ogrinfo --format: report extra metada items in a 'Other metadata items:' section (#7007)\n * gdalinfo: make sure to display geodetic coordinates always in degree (and not potentially in another unit such as grad) (#4198)\n * gdalinfo: report 'Mask Flags: PER_DATASET NODATA' when NODATA_VALUES metadata item is specified\n * gdal_edit.py: add a -colorinterp_X red|green|blue|alpha|gray|undefined option to change band color interpretation\n * gdal_contour: return with non-0 code if field creation or contour generation failed  (#7147)\n * gdal_retile.py: fix failure if the filename contains % (percent) symbol (#7186)\n * gdalbuildvrt: make warnings about heterogeneous projection/band characteristics more explicit (#6829)\n * gdalbuildvrt: add support for band scale and offset (#3221)\n * gdal_fillnodata.py, gdal_pansharpen.py, gdal_polygonize.py, gdal_proximity.py, gdal_sieve.py, rgb2pct.py: avoid potential problem on Windows in verbose mode (github #458)\n\nSample Python scripts:\n * Add gdal_mkdir.py, gdal_rm.py and gdal_rmdir.py samples scripts\n * gdalcopyproj.py: fix use of GCP related API (github #255)\n * ogr2vrt.py: automatically set relativeToVRT=1 for input and output filenames givn in relative form in the same directory\n\nMulti driver changes:\n * tag (and do needed changes) CALS, FUJIBAS, PAUX, SGI, RS2, GXF, TERRAGEN, Rasterlite, CPG, MSGN, Leveller as supporting GDAL_DCAP_VIRTUALIO\n\nAIGRID:\n * fix handling on raw 32-bit AIG blocks (#6886)\n\nBT driver:\n * make GetNoDataValue()/SetNoDataValue() use PAM\n\nDIMAP driver:\n * do not report dummy geotransform (see https://lists.osgeo.org/pipermail/gdal-dev/2018-January/048014.html)\n\nDTED driver:\n * Support VerticalCS for DTED and SRTM drivers when REPORT_COMPD_CS config option is set (github #237)\n\nECW driver:\n * fix Windows compilation against old ECW SDK and VS < 2015 (#6943)\n * make AdviseRead() to store its call parameters, and only do the actual work in RunDeferredAdviseRead() if TryWinRasterIO() determines that the IRasterIO() parameters are compatible of the AdviseRead() ones (#7082)\n * data/ecw_cs.wkt: fix PRIMEM of MONTROME (#2340)\n\nEHdr driver:\n * support reading/writing .clr as/from RAT (#3253)\n * only write .stx if bApproxOK=false (github #514)\n\nENVI driver:\n * support 'major frame offsets' keyword (#7114)\n\nERS driver:\n   add extension metadata (github #320)\n\nGeoPackage driver:\n * update from 'tiled gridded extension' to now OGC approved 'tiled gridded coverage data extension' (OGC 17-066r1) (#7159)\n * avoid corruption of gpkg_tile_matrix when building overviews, down to a level where they are smaller than the tile size (#6932)\n * fix opening subdatasets with absolute filenames on Windows (https://issues.qgis.org/issues/16997)\n * fix possible assertion / corruption when creating a raster GeoPackage (#7022)\n * properly handle non-0 nodata value in edge tiles, especially with TILING_SCHEME creation option\n * do not write empty tiles for Float32 data type\n * speed-up statistics retrieval on non-Byte datasets (#7096)\n * make DELLAYER:rastertable / DROP TABLE rastertable delete the table and all references to it (#7013)\n * create single tiled TIFF tiles if they are not bigger than 512x512 pixels\n * avoid multi-threading issues when creating TIFF tiles with GDAL_NUM_THREADS defined.\n * fix overview creation with big overview factors on some datasets\n\nGeoRaster driver:\n * handle memory allocation failures (#6884)\n * add support for GCP (#6973)\n\nGTiff driver:\n * add support for ZSTD compression/decompression (requires internal libtiff, or libtiff HEAD)\n * when IRasterIO() realizes that several blocks are going to be needed, use MultiRangeRead() interface for /vsicurl/ related file systems to get data in parallel\n * change default value of BIGTIFF_OVERVIEW to be IF_SAFER (github #231)\n * make sure that -co PHOTOMETRIC=RGB overrides the color interpretation of the first 3 bands of the source datasets (#7064)\n * allow modifying color interpretation on existing file opened in update mode\n * Internal libtiff: resync with upstream HEAD (post 4.0.9)\n * Internal libgeotiff: resync with upstream HEAD: use ProjScaleAtCenterGeoKey for CT_Mercator if ProjScaleAtNatOriginGeoKey is not set (github #296)\n * fix compilation without BIGTIFF_SUPPORT (#6890)\n * fix reading subsampled JPEG-in-TIFF when block height = 8 (#6988)\n * when reading a COMPD_CS (and GTIFF_REPORT_COMPD_CS=YES), set the name from the GTCitationGeoKey (#7011)\n * on reading use GeogTOWGS84GeoKey to override the defaults TOWGS84 values coming from EPSG code (#7144)\n * when writing SRS, do not drop EXTENSION PROJ4 node if the projection is unknown (#7104)\n * make it accept to write SetGeoTransform([0,1,0,0,0,1]) as a ModelTransformationTag, and remove particular cases with the [0,1,0,0,0,1] geotransform (#1683)\n * warn when SetNoDataValue() is called on different bands with different values (#2083)\n * add a GTIFF_HONOUR_NEGATIVE_SCALEY=YES config option that can be set to honour negative ScaleY value in GeoPixelScale tag according to the GeoTIFF specification (#4977)\n * read/write Z dimension for ModelTiepointTag and ModelPixelScaleTag and translate it into/from band scale and offset, when there's a SRS with a vertical component (#7093)\n * fix reading PCSCitationGeoKey (#7199)\n * add support for reading and writing TIFF_RSID and GEO_METADATA GeoTIFF DGIWG tags\n * use consistently multiplication/division by 257 when converting between GDAL [0,255] range to TIFF [0,65535] range for color map values (#2213)\n * don't write <GDALMetadata> colorinterp when writing a file with a color table\n * copy georeferencing info to PAM if the profile is not GeoTIFF\n\nGRIB driver:\n * add GRIB2 write support\n * update to degrib 2.14 and g2clib 1.6.0\n * add support for GRIB2 template 4.32 (github #249)\n * add support for GRIB2 template '4.32 Simulate (synthetic) Satellite Product'\n * add support for GRIB2 template 4.40 (Analysis or forecast at a horizontal level or in a horizontal layer at a point in time for atmospheric chemical constituents)\n * update table 4.2-0-7 current (github #274)\n * add support for GRIB1 products with non-zero NV (number of vertical coordinate parameters) field in GDS (NV is just ignored) (#7104)\n * add support for Rotated pole LatLong projections (#7104)\n * adjust the longitude range to be close to [-180,180] when possible for products whose left origin is close to 180deg. Can be controlled with the GRIB_ADJUST_LONGITUDE_RANGE=YES/NO config option, that defaults to YES  (#7103)\n * advertise .grb2 and .grib2 extensions in metadata\n * expose product discipline of GRIB2 products in GRIB_DISCIPLINE (#5108)\n * add a GRIB_PDS_TEMPLATE_ASSEMBLED_VALUES metadata items which expose a slightly higher view of GRIB_PDS_TEMPLATE_NUMBERS\n * speed-up GetNoData() implementation of GRIB2 files by avoiding decompressing the data\n * GRIB2: add support for Transverse Mercator, Albers Equal Area, Lambert Azimuthal projections, fixes in Mercator and Polar Stereographic support, adjustment for GS80 and WGS84 datums\n * correctly read Mercator as Mercator_2SP when stdparallel1 != 0\n * GRIB2: add support for Grid point data - IEEE Floating Point Data template 5.4 encoding\n * GRIB2: report Section 1 / Identification section as GRIB_IDS metadata item\n * fix decimal_scale_factor != 0 handling with nbits = 0 for simple packing and JP2K compression/decompression, and PNG compression.\n * GRIB2: don't error out on a unhandled template in Section 4\n * remove TDLPack support\n\nGSAG driver:\n * fix reading issue that could cause a spurious 0 value to be read and shift all following values (#6992)\n\nGTX driver:\n * do not emit error when opening with GDAL_PAM_ENABLED=NO (#6996)\n\nGRC driver:\n * Fix handling of alpha values in GRC color table (#6905)\n * Handle case of 0-len GRC class names (#6907)\n\nHDF5 driver:\n * Added CInt16, CInt32, CFloat32, CFloat64 support (github #359)\n * HDF5 driver as a plugin: register the BAG driver as well (#5802)\n\nHF2 driver:\n * creation: copy source information (including nodata) into PAM if needed (#6885)\n *  fix reading tiles that are 1-pixel wide (2.1 regression, #6949)\n\nHFA driver:\n * add GDAL_HFA_OVR_BLOCKSIZE configuration option to control HFA overviews block size (github #292)\n\nHTTP driver:\n * do not open the underlying dataset with GDAL_OF_SHARED, to avoid later assertion\n\nISIS3 driver:\n * make sure that -co USE_SRC_HISTORY=NO -co ADD_GDAL_HISTORY=NO results in remove of History section (#6968)\n * fix logic to initialize underlying GeoTIFF file in IWriteBlock(), and implement Fill() (#7040)\n\nJP2ECW driver:\n * add NBITS creation option, and automatically select codestream output for .j2k extension\n\nJP2KAK driver:\n * add support fr Kakadu 7.A (#7048)\n * fix lossless compression with NBITS != 8 for Byte and NBITS != 16 for UInt16\n * use tile dimensions as block size up to 2048x2048 (#6941)\n * make write side honour .j2k extension to generate only codestream\n\nJP2OpenJPEG driver:\n * add support for OpenJPEG 2.2 (#7002) and 2.3 (#7074). Drop support for openjpeg 2.0\n * fix performance issues with small images with very small tile size, such as some Sentinel2 quicklooks (#7012)\n * emit warning if GMLJP2v2 explicitly requested but georeferencing implemented\n * allow YCC for non-Byte datasets; and allow 4-band MCT with openjpeg >= 2.2\n\nJPEG driver:\n * Add compatibility with libjpeg-turbo 1.5.2 that honours max_memory_to_use\n * add capability to write EXIF and GPS tags in a EXIF segment\n * Internal libjpeg: provide implementation of tmpfile() that works better on Windows (#1795)\n * avoid mis-identification of some SRTMHGT files as JPEG\n\nJPEG2000 driver:\n * add NBITS creation option, and automatically select codestream output for .j2k extension\n\nKEA driver:\n * add some additional metadata items (STATISTICS_HISTOBINVALUES and STATISTICS_HISTONUMBINS) (#6892)\n\nL1B driver:\n * support reading NOAA18 datasets (#7115)\n\nMBTiles driver:\n * add read/write support for Mapbox vector tiles\n * support opening and creating datasets with tiles whose dimension is not 256 (#7233)\n * default to opening as RGBA (#6119)\n\nMEM driver:\n * Avoid Create(foo.tif) / CreateCopy(foo.tif) on the MEM or Memory drivers to delete a 'real' foo.tif file\n * add RAT support\n\nMRF driver:\n * Add Zen chunk support\n * Open option to ignore decompression errors and missing data files\n * delay data file creation when NOCOPY is set\n * Identify MRF metadata passed as filename\n * Initialize PAM better on CopyCreate, enable external mask.\n * Fix for coordinates when opening single overview level\n * Use input mask if available to filter input data when creating JPEG compressed files.\n * Add open option to select Z-slice, also Z-slice selection in the metadata file\n\nMrSID driver:\n * add support for LTI_COLORSPACE_GRAYSCALEA and LTI_COLORSPACE_GRAYSCALEA_PM color\n spaces\n\nNetCDF driver:\n * avoid vector vs raster variable confusion that prevents reading Sentinel3 datasets, and avoid invalid geolocation array to be reported (#6974)\n * fix raster read as nodata with Byte datatype, (valid_range={0,255} or _Unsigned = True) and negative _FillValue (#7069)\n * be more tolerant on the formatting of standard parallel (space separated instead of {x,y,...} syntax), and accept up to 2/1000 error on spacing to consider a regular grid, to be able to read files provided by the national weather institute of Netherlands (KNMI) (#7086)\n * on creation, attach grid_mapping attribute to all bands\n * netCDF: support UTF-8 filenames on Windows (#7065)\n * add support for reading files in rotated pole projection (#4285)\n * behave correctly when an extra dimension of a variable has a corresponding 1D variable of different names (#7165)\n * netCDF: fix bad interaction of SetNoDataValue() and SetGeoTransform()/SetProjection() for NC4/NC4C modes (#7245)\n\nNITF driver:\n * add support for NITF CCINFA TRE (github #232)\n * data/nitf_spec.xml: fix location of PIAPRD TRE (github #234)\n * make sure that BLOCKA_ or TRE=BLOCKA= creation option override source NITF metadata; add a USE_SRC_NITF_METADATA=YES/NO creation option; make sure that gdal_translate doesn't preserve source BLOCKA when georeferencing is modified\n * fix swapped lines and samples in IMRFCA (github #289)\n * allow to read single-block JPEG2000 compressed images with one dimension > 8192 pixels (fixes #407)\n\nPCIDSK driver:\n * sort overviews (#7100)\n\nPCRaster driver:\n * fix fseek/ftell for large files on Windows (#322)\n\nPDF driver:\n * add support for Poppler 0.58 (#7033)\n * round to upper integer when computing a DPI such that page size remains within limits accepted by Acrobat (#7083)\n * do not emit 'Cannot find GPTS object' on VP.Measure objects whose Subtype != GEO\n\nPDS driver:\n * map STEREOGRAPHIC with fabs(lat)=90 to Polar_Stereographic (#6893)\n\nPLMosaic driver:\n * update to use the new Basemaps and Mosaics API\n * take into account BBOX for XYZ tiles\n\nPNM driver:\n * add .pgm and .ppm extensions in metadata\n\nRMF driver:\n * add RMF native overviews support (github #266)\n * fix raster garbage values while reading sparse RMF files (github #267)\n * add native overview build (github #275)\n * fix NoData value update (github #312)\n * fix elevation units write and update (github #314)\n\nRRASTER driver:\n * add support for reading creator and created metadata items, band names and color table / RAT\n * add update and create/createcopy support\n\nSAGA driver:\n * add support for .sg-grd-z files (github #228)\n\nSentinel2 driver:\n * make sure that the True Color Image subdatset really uses the R,G,B bands and not the R,R,R (#7251)\n * add support for direct opening of .zip files of new safe_compact L1C products (#7085)\n\nSNODAS driver:\n * accept header lines up to 1024 characters (github #506)\n\nSRTMHGT driver:\n * set appropriate description when opening a .hgt.zip file\n * recognizes the .hgt.gz extension (#7016)\n * add support for reading .SRTMSWBD.raw.zip files (GRASS #3246)\n\nUSGSDEM driver:\n * properly handle southern hemisphere UTM projections (#344)\n\nVICAR driver:\n * optimize nodata handling, and map STEREOGRAPHIC with fabs(lat)=90 to Polar_Stereographic (#6893)\n\nVRT driver:\n * add option for separable kernel (github #216)\n * warn if band attribute of VRTRasterBand is not the one expected\n * implement FlushCache()\n * fix use of VRTs that point to the same source in multi-threaded scenarios (#6939)\n * Warped VRT: correctly take into account cutline for implicit overviews; also avoid serializing a duplicate CUTLINE warping options in warped .vrt (#6954)\n * Warped VRT: fix implicit overview when output geotransform is not the same as the transformer dst geotransform (#6972)\n * fix IGetDataCoverageStatus() in the case of non-simple sources, which unbreaks gdalenhance -equalize (#6987)\n * re-apply shared='0' on sources if existing in original VRT when rewriting it due to invalidation\n * avoid error being emitted when opening a VRTRawRasterBand in a .zip files (#7056)\n * implement VRTDataset::AdviseRead() (in the particular case of a single source) (#7082)\n * allow to incorporate a warped VRT as CDATA in the SourceFileName field of a regular VRT\n * VRTDerivedRasterBand: fix detection of Python runtime already loaded when more than 100 modules are linked. Fixes QGIS3 use case (#7213)\n * add RAT support\n * for consistency, make sure that VRT intermediate datatype demotion is done, e.g that a VRT band of type Byte, with a source of type Float32, requested as Float32 buffer involves Float32 -> Byte -> Float32 conversions\n * VRTDataset::AddBand(): honour 'PixelFunctionLanguage' option (github #501)\n\nWCS driver:\n * add support for WCS 2.0\n * add caching\n * add various open options\n\nWMS driver:\n * ArcGIS miniserver: use latestWkid and wkt metadata (#6112)\n * avoid AdviseRead() to download too many tiles at once (#7082)\n * recognize /ImageServer?f=json ESRI endpoints\n * Add support for maximum size and expiration time and unique per dataset name for WMS cache\n\nXYZ driver:\n * fix 2.2.0 regression where the driver hangs on some dataset with missing samples (#6934)\n * support non numeric characters when there is an header line (#7261)\n\n## OGR 2.3.0 - Overview of Changes\n\nCore:\n * OGRLayer::FilterGeom(): make sure a feature with a null or empty geometry never matches a spatial filter (#7123)\n * OGRSimpleCurve::get_LinearArea(): return 0 on a non-closed linestring (#6894)\n * OGRFeature::SetField: Improve the setting for OFTInteger fields from a double.\n * OGR_G_TransformTo(): emit error message when source geometry has no SRS\n * OGR API SPY: various fixes\n * OGRCurve::get_isClosed(): do not take into account M component (#7017)\n * OGRLineString::setPoint() and addPoint() with a OGRPoint* argument. properly takes into account ZM, Z and M dimensions (#7017)\n * OGRMultiSurface: refuse to add a triangle to it. (github #357)\n * OGRPolyhedralSurface: importFromWkt(): remove support for invalid constructs, that contrary to comments are not supported by PostGIS\n * Fix OGR[Curve]Polygon::Intersects(OGRPoint*) to return true when point is on polygon boundary (#7091)\n * Emit an explicit error message for OGRGeometry::IsValid(), IsSimple(), IsRing() when GEOS is not available\n * Make OGRGeometry::assignSpatialReference() a virtual method, and make implementation recursively assign the SR to child geometries (#7126)\n * Expose OGRGeometry::swapXY() as OGR_G_SwapXY() in C API (#7025)\n * importFromWkt(): fix import of GEOMETRYCOLLECTION ending with POINT EMPTY or LINESTRING EMPTY (#7128, 2.1 regression)\n * OGRSQL: avoid silent cast so that int64->int overflow is better signaled\n * OGRSQL: accept using the real FID column name (in addition to the special 'FID' alias) (#7050)\n * Add GDAL_DCAP_NONSPATIAL capability to ODS, REC, XLS and XLSX drivers\n * Add GDAL_DCAP_FEATURE_STYLES capability to CAD, DGN, DWG, DXF, EDIGEO, JML, KML, lIBLML, MITAB, OpenAIR and VRT drivers\n * Add DMD_CREATIONFIELDDATASUBTYPES metadata type (github #278)\n * OGRParseDate(): only accept seconds up to 60 included for leap seconds (#6525)\n * Fix OGRPolygon::IsPointOnSurface() broken with polygons with holes\n * OGRFormatDouble(): add a OGR_WKT_ROUND config option that can be set to FALSE to disable the heuristics that remove trailing 00000x / 99999x patterns (#7188)\n * Add C++ iterators for feature in layer and field values in features.\n * Add C++ iterators for \"sub-parts\" of geometry classes\n * Const-correctness fixes in signatures of methods of OGRFeatureDefn, OGRFeature, OGRFieldDefn and OGRGeomFieldDefn classes.\n * Fix constness of OGR_G_CreateFromWkb(), OGR_G_CreateFromFgf(), OGR_G_ImportFromWkb() and related C++ methods\n * Fix const correctness of OGRGeometry::importFromWkt() and OGRGeometryFactory::createFromWkt(), and add compatibility wrappers\n\nOGRSpatialReference:\n * Update to EPSG v9.2 (#7125)\n * Update data/esri_extra.wkt and add data/esri_epsg.wkt, taken from https://github.com/Esri/projection-engine-db-doc (Apache v2 license) (#2163)\n * Add support for PROJ.5 new API (requires proj 5.0.1 or later)\n * Add a OSRFindMatches() function to look for equivalent SRS in the EPSG database, map it to SWIG Python. Enhance gdalsrsinfo to use it\n * Add OGRSpatialReference::convertToOtherProjection() (bound to C as OSRConvertToOtherProjection() and to SWIG) to transform between different equivalent projections (currently Merc_1SP <--> Merc_2SP and LCC_1SP <--> LCC_2SP) (#3292)\n * Fix OGRSpatialReference::IsSame() to return FALSE when comparing EPSG:3857 (web_mercator) and EPSG:3395 (WGS84 Mercator) (#7029)\n * importFromProj4(): implement import of Hotine Oblique Mercator Two Points Natural Origin, and fix OGRSpatialReference::Validate() for that formulation (#7042)\n * morphFromESRI(): fix remapping from DATUM = D_S_JTSK + PRIMEM = Ferro to OGC DATUM System_Jednotne_Trigonometricke_Site_Katastralni_Ferro\n * Add alternate simpler signature for OGRGeometryFactory::createFromWkt()\n * Add importFromWkt(const char**)\n\nUtilities:\n * ogrmerge.py: fix '-single -o out.shp in.shp' case (#6888)\n * ogrmerge.py: allow using wildchar '*' in source names and use glob.glob to expand it\n * ogrmerge.py: correctly guess vrt format\n * ogrmerge.py: error when outputting to a existing vrt if -overwrite_ds is not specified\n * ogrmerge.py: use ogr.wkbUnknown to fix -nlt GEOMETRY\n * ogr2ogr: fix crash when using -f PDF -a_srs (#6920)\n * ogr2ogr: make -f GMT work again (#6993)\n * ogr2ogr: make it fail if GetNextFeature() returned NULL with an error\n * ogr2ogr: honour -select when using -addfiels\n * ogr2ogr: preserve source geometry field name for output drivers that support GEOMETRY_NAME layer creation option (such as GPKG)\n * ogr2ogr: add support for circularstring, compoundcurve, curvepolygon, multicurve and multisurface in SetZ()\n * GDALVectorTranslate(): fix converting from Memory to Memory datasources (#7217)\n * gnmmanage: fix crash on shape files with linestring and multilinestring geometries mixing\n * ogrtindex: fix crash when using -f SQLITE -t_srs XXXX (#7053)\n * ogrinfo: always open in read-only mode, unless -sql without -ro is specified\n * ogrinfo/ogr2ogr with -sql @filename: remove lines starting with '--' (github #459)\n\nMulti driver changes:\n * port/tag ILI, NAS, DGN, NTF, SDTS, OGR_GMT, Geoconcept, AVCE00, AVCBin to VirtualIO API\n\nAmigocloud driver:\n * Fixed data field types (github #246)\n * Output list of datasets if dataset id is not provided.\n * Implemented waiting for job to complete on the server. This will improve write to AmigoCloud reliability.\n * Add HTTP user agent (github #263)\n * add OVERWRITE open option (github #268)\n\nAVCE00 driver:\n * Make sure AVCE00 opens .e00 files and not AVCBIN one\n\nAVCBin driver:\n * fix 2.1 regression regarding attributes fetching (#6950)\n\nCarto driver:\n * fix append mode by retrieving the sequence name for the primary key (#7203)\n * fix insertion with ogr2ogr -preserve_fid (#7216)\n * fix missing features when iterating over a SQL result layer with pagination (#6880)\n\nCSV driver:\n * add a STRING_QUOTING=IF_NEEDED/IF_AMBIGUOUS/ALWAYS layer creation option, that defaults to IF_AMBIGUOUS (quote strings that look like numbers)\n * temporarily disable spatial and attribute filter when rewriting CSV file (#7123)\n * fix autodetection of types when a Real value is followed by a Integer64 one (#343)\n\nDGNv8 driver:\n * add support for building against static library (#7155)\n\nDXF driver:\n * Support LEADER and MULTILEADER entities (#7111, #7169)\n * Support HELIX and TRACE entities\n * Support spline hatch boundaries\n * Support MLINE entity\n * Support rows/columns within INSERT\n * Add support for block attributes (ATTRIB entities) (#7139)\n * Support text styles (#7151)\n * Support cylinders (CIRCLE entities with thickness)\n * set dx and dy to DXF LABEL style string on TEXT and MTEXT objects (github #225)\n * fix reading of hatches with boundaries that contain elliptical arcs (#6971)\n * fix reading files where INSERT is the last entity and DXF_MERGE_BLOCK_GEOMETRIES is false (#7006)\n * fix ordering of vertices in a SOLID entity (#7089)\n * only apply certain escaping rules to the text of the MTEXT object (#7047)\n * Handle all known MTEXT escapes; allow user to turn off text unescaping (fixes #7122)\n * do not apply the OCS transformation for MTEXT (#7049)\n * do not output dx and dy in MTEXT style strings (#7105)\n * apply DXF codepage encoding while decoding ExtendedEntity field (#5626)\n * allow user to set the tolerance used when joining parts of a hatch boundary with a DXF_HATCH_TOLERANCE config option, and default to 1e-7 of the extent of the geometry (#7005)\n * refactor out block insertion to its own function, and transform insertion point of an INSERT entity into OCS (#7077)\n * on write side, force 'defpoints' layer to be non-displayed (#7078)\n * entities on layer 0 within a block should inherit the style of the layer the INSERT is on. Do that for entities with a PEN style string for now. (#7099)\n * OCS fixes for HATCH and INSERT entities (#7098)\n * defer inlining of blocks until actually required (#7106)\n * Read DIMSTYLEs and block record handles\n * Handle linetype scales (#7129)\n * Improved support for DIMENSION entities (#7120)\n * handle ByBlock colors (#7130)\n * Fix parsing of complex linetypes (#7134)\n * Correct color for ByBlock text features; respect hidden objects (#5592, #7099, #7121)\n * Make ACAdjustText also transform text width and offset (#7151)\n * Honor block base points (#5592)\n * Use BRUSH style tool instead of PEN when reading polygonal SOLIDs and leader arrowheads; add PEN style string to 3DFACE\n * Specify ground units for TEXT dx and dy style values; interpret dx and dy in the writer\n * Fix bug in text style property retrieval; handle text color in DIMENSION fallback renderer\n * Write text styles and HATCH elevations; fix output of invalid extent values (#7183)\n * Allow access to unused entity group codes with RawCodeValues field (github #226)\n * Reduce the size of header.dxf and trailer.dxf (tested with AutoCAD, QCAD Teigha, QCAD dxflib, FME)\n * Make the writer aware of linetype scaling\n * Don't force elevation to zero in smooth polylines (#7200)\n * Always output all edges in polyface mesh, and add styling (#7219)\n * Remove incorrect OCS transformation from MLINE entities\n * Introduce 3D extensible mode to allow translation of 3D entities\n\nESRIJson driver:\n * \"New\": extracted from code previously in GeoJSON driver\n * avoid endless looping on servers that don't support resultOffset (#6895)\n * use 'latestWkid' in priority over 'wkid' when reading 'spatialReference' (github #218)\n * recognize documents that lack geometry fields (#7071)\n * do not attempt paging requests on a non-HTTP resource\n * recognize documents starting with a very long fieldAliases list (#7107)\n\nFileGDB driver:\n * remove erroneous ODsCCreateGeomFieldAfterCreateLayer capability declaration (github #247)\n * add LAYER_ALIAS layer creation option (#7109)\n * FileGDB / OpenFileGDB: attempt to recover EPSG code using FindMatches()\n * FileGDB / OpenFileGDB: linearize Bezier curves with a more reasonable number of points\n\nGeoJSON driver:\n * Add support for json-c v0.13 (github #277)\n * support loading (true) GeoJSON files of arbitrary size (#6540)\n * in update mode, support appending features, in some cases, without ingesting features of existing file into memory\n * writer: accept writing ZM or M geometry by dropping the M component (#6935)\n * fix 2.2 regression regarding lack of setting the FeatureCollection CRS on feature geometries (fixes https://github.com/r-spatial/sf/issues/449#issuecomment-319369945)\n * make sure that -lco WRITE_NAME=NO works even if the native data has a 'name' attribute\n * ignore 'properties' member of features whose value is null or empty array\n * fix writing of id with RFC7946=YES (#7194)\n * add ID_FIELD and ID_TYPE layer creation options\n\nGeoPackage driver:\n * default to version 1.2 (#7244)\n * speed-up loading of databases with hundreds of layers\n * make driver robust to difference of cases between table_name in gpkg_contents/gpkg_geometry_columns and name in sqlite_master (#6916)\n * fix feature count after SetFeature() with sqlite < 3.7.8 (#6953)\n * do not error out if extent in gpkg_contents is present but invalid (#6976)\n * avoid GetFeature() to hold a statement, that can cause database locking issues (https://issues.qgis.org/issues/17034)\n * emit warning when feature geometries are not assignable to layer geometry type\n * remove UNIQUE keyword for PRIMARY KEY of gpkg_metadata (doesn't hurt, but just to align with the examples of DDL in the GeoPackage spec)\n * fix logic to detect FID on SQL result layer when several FID fields are selected (#7026)\n * fix handling of spatial views\n * do not try to update extent on gpkg_contents after GetExtent() on a empty layer of a datasource opened in read-only mode\n * when inserting a SRS with a non-EPSG code, then avoid using srs_id that could be later assigned to a EPSG code\n * when deleting a layer, delete from gpkg_metadata metadata records that are only referenced by the table we are about to drop\n * fix incorrect rtree_<t>_<c>_update3 trigger statement (https://github.com/opengeospatial/geopackage/issues/414)\n * fix definition of extensions\n * only create metadata table if needed, and register it as extension\n * declare gpkg_crs_wkt extension when using GPKG_ADD_DEFINITION_12_063=YES config option, and do not emit warning when finding it declared\n\nGeoRSS driver:\n * fix detection of field type (#7108)\n\nGML driver:\n * CreateGeometryFromGML(): accept gml:Arc with odd number of points > 3, even if they are invalid\n * decode gml:Solid as PolyhedralSurface (#6978)\n * JPGIS FGD v4: fix logic so that coordinate order reported is long/lat (github #241)\n * a GML_FEATURE_COLLECTION=YES/NO dataset creation option\n * fix FORCE_SRS_DETECTION=YES effect on feature count and SRS reporting on gml files with .gfs (#7046)\n * do not try to open some kml files (#7061)\n * do not report gml:name / gml:description of features as layer metadata\n\nGMLAS driver:\n * get the srsName when set on the srsName of the gml:pos of a gml:Point (#6962)\n * CityGML related fixes: better take into account .xsd whose namespace prefix is not in the document, fix discovery of substitution elements, handle gYear data type (#6975)\n * properly interpret SolidPropertyType (#6978)\n * handle GML geometries in elements that are a substitutionGroup of an element (#6990)\n * make sure to try namespaces that are indirectly imported (helps in the case of parsing the result of a WFS GetFeature request)\n * take into account gYearMonth XML data type (https://github.com/BRGM/gml_application_schema_toolbox/issues/46)\n * implement resolution of internal xlink:href='#....' references (https://github.com/BRGM/gml_application_schema_toolbox/issues/31)\n * Recognize gml:Envelope as a Polygon geometry (https://github.com/BRGM/gml_application_schema_toolbox/issues/56#issuecomment-381967784)\n\nGMT:\n * fix creation of several layers\n\nIDB driver:\n * optimize spatial query using spatial index and st_intersects function (#6984)\n * close connection at dataset closing (#7024)\n\nILI driver:\n * declare OLCCreateField and OLCSequentialWrite capabilities\n\nIngres driver:\n\nJML driver:\n * add support for reading and write SRS from gml:Box element (#7215)\n\nKML driver:\n * KML / LIBKML: read documents with an explicit kml prefix (#6981)\n * KML/LIBKML: make sure layer names are unique (QGIS github#5415)\n\nLIBKML driver:\n * fix reading placemarks in toplevel container, when it has subfolders (#7221)\n * improve open performance on huge number of layers\n\nMDB driver:\n * fix multi-thread support (https://issues.qgis.org/issues/16039)\n\nMITAB driver:\n * support for additional datums (#5676)\n * add support for Reseau_National_Belge_1972 / EPSG:31370 on writing (#6903)\n * add support for SWEREF99 datum (#7256)\n * fix EPSG datum code for NTF Paris\n * support units as code instead of string when reading a coordsys string from a .mif (#3590)\n * add read/write support between MapInfo text encodings and UTF-8. Add ENCODING layer/dataset creation option (github #227)\n * do not emit error if the .ind file is missing, just a debug message (#7094)\n * accept creating files with LCC_1SP SRS (#3292)\n * support 'CREATE INDEX ON layer_name USING field_name' (if called after field creation and before first feature insertion)\n * avoid reporting invalid extent on empty .mif\n * report aspatial .tab as wkbNone geometry type\n * export BRUSH(fc:#.....) with mapinfo brush pattern 2 (solid fill)\n\nmongoDB driver:\n * compilation fix on Windows\n\nMSSQLSpatial driver:\n * Fix issues on x64 (#6930)\n * Implement EXTRACT_SCHEMA_FROM_LAYER_NAME layer creation option.\n * properly format DELETE statement with schema (#7039)\n\nMySQL:\n * fix compilation issue with MariaDB 10.1.23 (#6899) and MariaDB 10.2 (#7079)\n * make sure geometry column name is properly set (GDAL 2.0 regression, github #397)\n\nNAS driver:\n * [NAS/GML] try reversing non contiguous curves\n * Allow usage of a GFS template file for type assignment and mapping of element paths to attributes and remove arbitrary hacks that used to avoid attribute name conflicts:\n * New option: NAS_GFS_TEMPLATE: specify gfs template\n * New option: NAS_NO_RELATION_LAYER: skip unused alkis_beziehungen (also makes progress available)\n * Multiple geometries per layer\n * NAS_INDICATOR updated to \"NAS-Operationen;AAA-Fachschema;aaa.xsd;aaa-suite\"\n * use single geometry column name from input (like GMLAS)\n * accept unqualified attribute name in wfs:Update\n\nNTF driver:\n * fix regression introduced by fix for https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2166 causing some valid records to be skipped (#7204)\n\nNULL driver:\n * Generalize OGR NULL development driver as a GDAL raster+vector one; enable to compile it --with-null\n\nOCI driver:\n * initialize in multi-threaded compatible mode (https://issues.qgis.org/issues/17311)\n * support for extended max_string_size (#7168)\n\nODBC driver:\n * deal with table names that require double quoting (#7242)\n\nODS driver:\n * add read/write support for Boolean sub datatype\n\nOSM driver:\n * performance improvements\n * increase string buffer for osm XML files (#6964)\n * OGR_SQL/OSM: avoid OSM driver warning about attribute filter not being taken into account when issuing a 'select * from X limit Y' request on a OSM datasource\n\nOpenFileGDB driver:\n * properly read GeneralPolygon with M component whose all values are set to NaN (#7017)\n\nPDF driver:\n * make OGR_PDF_READ_NON_STRUCTURED=YES configuration option work with documents without layers (#6359)\n * Improvements to text and dash pattern support in writer (#7185)\n\nPDS driver:\n * fix reading 8-byte IEEE_REAL fields (github #570)\n\nPG driver:\n * do not be confused by a 'geometry' table in a non-PostGIS enabled database (#6896)\n * PG/PGDump: make sure serial sequence is updated at layer closing/end-of-copy if we inserted features with fixed ids (#7032)\n\nPLScenes driver:\n * remove support for V0 and V1 API. Only Data V1 is kept (#6933)\n * add SkySatScene\n\nSEGY driver:\n *report more attributes from Segy Standard Trace Header (github #315)\n\nShapefile driver:\n * Fix GetFeatureCount() to properly take into account spatial filter when attribute filter also in effect (#7123)\n * use VSIStatL() in Create() to properly work with /vsimem/ directories (#6991)\n * fix regression affecting GDAL 2.1.3 or later, 2.2.0 and 2.2.1, when editing the last shape of a file and growing it, and then appending a new shape, which resulted in corruption of both shapes (#7031)\n * hide shapelib symbols on Unix\n * improvements auto-identification of EPSG codes from input SRS, using OSRFindMatches()\n * Improve guidance on use of SHAPE_RESTORE_SHX in SHPOpenLL() (#7246)\n\nSQLite/Spatialite driver:\n * SQLite/GPKG: report SQLITE_HAS_COLUMN_METADATA=YES as driver metadata item when it is available (#7007)\n * escape integer primary key column name on table creation (#7007)\n * don't invalidate statistics when running a PRAGMA (https://issues.qgis.org/issues/17424)\n * SQLite dialect: avoid erroring out if source layer has a OGR_STYLE field\n * SQLite dialect: support SQLite 3.21, and LIKE, <>, IS NOT, IS NOT NULL, IS NULL and IS operators (fixes #7149)\n * SQLite/GPKG: avoid parsing of OGR_SQLITE_JOURNAL to stop on JOURNAL_MODE keyword\n\nVFK driver:\n * fix collecting linestrings for sbp layer\n * collect geometries also for zvb layer\n * Improve VFK parser logic (github #365)\n * add option to suppress geometry (github #371)\n\nVRT driver:\n * increase maximum size limit to 10 MB (instead of 1MB), and add config option to be able to force loading if above that\n\nXLS driver:\n * workaround opening filenames with incompatible character set on Windows (https://issues.qgis.org/issues/9301)\n\nXLSX driver:\n * avoid 'ogr2ogr -f XLSX out.xlsx in.shp -preserve_fid' to overwrite the first record. Note however that FID preservation itself doesn't really work with XLSX (#6994)\n * fix non working detection of Date/Time fields in some documents (#7073)\n * fix opening of documents with x: namespace in xl/workbook.xml (#7110)\n * fix misdetection of field type if first cell blank (github #291)\n * fix updating multi layer document where existing layers where dropped (#7225)\n * add read/write support for Boolean sub datatype\n * on writing, use %.16g formatting for floating point numbers (#7230)\n\n## SWIG Language Bindings\n\nAll bindings:\n * Expose gdal.VSIFEofL()\n * Expose gdal.GRA_Max, GRA_Min, GRA_Med, GRA_Q1 and GRA_Q3 (#7153)\n * Expose Geometry.SwapXY()\n * Expose Geometry.RemoveGeometry()\n * Expose SpatialReference.SetMercator2SP()\n * Expose Band.AdviseRead() and Dataset.AdviseRead()\n\nCSharp bindings:\n\nJava bindings:\n * create single JNI shared library (gdalalljni.so/dll) (github #286)\n\nPerl bindings:\n * Keep parent geometry alive if an object is created from a child geometry. Experimental methods Features and Geometries. Catch an error in storing a geometry into a feature. Prefer GeometryCount over GetGeometryCount and Geometry over GetGeometryRef.\n * Set INSTALLSITEMAN1DIR and INSTALLSITEMAN3DIR according to what is in GDALmake.opt if INSTALL_BASE is set. (#6142)\n * ignore no data cells in ClassCounts and Reclassify for real valued rasters.\n * support for number line (or decision tree) classifiers also for integer bands.\n * Set error handler separately in all modules (required by Strawberry Perl build).\n\nPython bindings:\n * add scripts to python module (#342)\n * make sure that errors in Open() related functions, that do not prevent dataset opening in C/C++, do not either prevent it in Python (#7094)\n * avoid hang when calling gdal/ogr.UseExceptions()/DontUseExceptions() in wrong order (#6891)\n * accept callback = 0 since SWIG generates it as the default argument of BandRasterIONumPy(). (github #219)\n * fix 2.2.0 regression preventing use of callback function in Band.ComputeStatistics() (#6927)\n * fix reference count issue on gdal.VSIStatL() when it returns None, that can cause Python crashes if None refcount drops to zero\n * avoid potential cross-heap issue on Windows with numpy (https://trac.osgeo.org/osgeo4w/ticket/466)\n * fix potential alignment issues when reading double values with ReadRaster() or ReadBlock()\n * fix issue with PyInstaller (#7044)\n * add a addAlpha option to gdal.DEMProcessing()\n * fix for include files when building .cpp files (github #258)\n * make gdal.Transform() return None in case of an error (instead of an invalid Transformer object)\n * emit exceptions if VSI_RETVAL methods (such as gdal.Rename()) fail and gdal.UseExceptions() is enabled\n * add addFields and forceNullable options to gdal.VectorTranslate()\n * for command line utilities as functions, serialize number of floating-point arguments with higher precision\n * Fix python 3.x package installation in custom prefixes (#6671)\n * lots of PEP8-related fixes in scripts and autotest\n * add NULL checks after PyUnicode_AsUTF8String() in case the unicode cannot be translated to UTF-8 and workaround SWIG bug to avoid crashes with Python 3. (github #356)\n * make sure gdal.VectorTranslate() and gdal.Grid() open their source dataset with a vector driver (github #449)\n * make 'for field_val in feature' work (github #451)\n\n# GDAL/OGR 2.2.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL/raster drivers:\n   - DERIVED driver: read-support. Expose subdatasets in a a new metadata domain, called DERIVED_SUBDATASETS\n   - JP2Lura driver: read/create support for JPEG-2000 images using Luratech JP2 Library\n   - PRF: add read-only support for PHOTOMOD PRF file format driver (github #173)\n   - RRASTER driver: read-support .grd/.gri files handled by the R 'raster' package (#6249)\n * New OGR/vector drivers:\n    - CAD driver: read support for DWG R2000 files (GSoC 2016 project)\n    - DGNv8 driver: read-write support for DGN 8.0 format (using Teigha ODA libraries)\n    - GMLAS driver: read-write support. XML/GML driver driven by Application Schemas.\n * New utility script: ogrmerge.py to merge several vector datasets into a single one\n * New /vsigs/ and /vsigs_streaming/ virtual file systems to read Google Cloud Storage non-public files\n * Significantly improved drivers:\n  - NWT_GRD: write support (#6533)\n  - FileGDB/OpenFileGDB: add support to read curve geometries (#5890)\n  - VRT derived band: add the capability to define pixel functions in Python\n  - Add read support for RasterLite2 coverages in SQLite driver\n  - GPKG: implement tiled gridded elevation data extension\n  - ISIS3: add write support and improve read support\n * RFC 63: Add GDALRasterBand::GetDataCoverageStatus() and implement it in GTiff and VRT drivers\n        https://trac.osgeo.org/gdal/wiki/rfc63_sparse_datasets_improvements\n * RFC 64: Triangle, Polyhedral surface and TIN\n        https://trac.osgeo.org/gdal/wiki/rfc64_triangle_polyhedralsurface_tin\n   ==> this RFC introduces potential backward incompatible behavior.\n        Consult MIGRATION_GUIDE.txt\n * RFC 66: OGR random layer read/write capabilities\n        https://trac.osgeo.org/gdal/wiki/rfc66_randomlayerreadwrite\n * RFC 67: add null field state for OGR features, in addition to unset fields\n        https://trac.osgeo.org/gdal/wiki/rfc67_nullfieldvalues\n   ==> this RFC introduces potential backward incompatible behavior.\n        Consult MIGRATION_GUIDE.txt\n * Upgrade to EPSG database v9.0 (#6772)\n * Python bindings: Global Interpreter Lock (GIL) released before entering GDAL native code (for all, in GDAL module and a few ones in ogr like ogr.Open())\n * Continued major efforts on sanitization of code base\n * Remove bridge and vb6 bindings (#6640)\n * GNM built by default\n\n## Installed files\n\n * Removed: data/s57attributes_aml.csv data/s57attributes_iw.csv data/s57objectclasses_aml.csv data/s57objectclasses_iw.csv\n * Added plscenesconf.json, gmlasconf.xsd\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.TXT\n\n## GDAL/OGR 2.2.0 - General Changes\n\nBuild(Unix):\n * improve detection of packaged libfyba (SOSI) --with-sosi, as in Ubuntu 16.04 (#6488)\n * Sort files in static library to make the build reproducible (#6520)\n * fix libqhull include path when it is /usr/local/include/libqhull (#6522)\n * FileGDB: compilation fix on Linux in C++11 mode\n * configure: make pdfium detection not fail if there are just warnings. And make configure fail if --with-pdfium was required but failed (#6653)\n * Make ./configure --with-xerces fail if not found\n * Don't install script documentation in INST_BIN (github #157)\n * configure: auto-detect webp without requiring explicit --with-webp\n * configure: use pkg-config for HDF5 detection so that works out of the box on recent Ubuntu\n * auto-detect JDK 8 on Ubuntu\n * MDB: allow libjvm.so to be dlopen'd with --with-jvm-lib=dlopen (Unix only, github #177)\n * configure: delete temporary directories on the mac\n * configure: make sure --with-macosx-framework is correctly defined\n * configure: error out if --with-ld-shared is specified (#6769)\n * configure: remove bashism.\n * configure: fix --without-mrf (#6811)\n * configure: take into account CXXFLAGS and LDFLAGS in a few more cases (cryptopp, podofo, libdap)\n * Vagrant: all lxc and Hyper-V provider support; use vagrant-cachier for package caching\n * configure: update DWG support to work with Teigha libraries\n * Internal libgeotiff: hide symbols in --with-hide-internal-symbols mode\n * Shape: do not export Shapelib symbols for builds --with-hide-internal-symbols (#6860)\n\nBuild(Windows):\n * Try to avoid confusion between libqhull io.h and mingw own io.h (#6590)\n * update script to generate most recent Visual C++ project files (#6635)\n * fix broken and missing dependencies in makefile.vc\n * add a way to use an external zlib (github #171)\n * Rename makegdal_gen.bat to generate_vcxproj.bat\n * generate_vcxproj.bat: Set correct value of PlatformToolset property based on specified Visual C++ version. Add NMAKE command line parameters: MSVC_VER based on specified Visual C++ version, DEBUG=1 WITH_PDB=1 to Debug build configuration.\n * generate_vcxproj.bat: generate project for autotest/cpp (Ticket #6815)\n* Add WIN64=1 to NMAKE command line options.\n * Add HDF4_INCLUDE option (#6805)\n * Add MSVC compiler option /MP to build with parallel processes.\n * Add ZLIB_LIB missing from EXTERNAL_LIBS\n\nBuild(all):\n * make Xerces 3.1 the minimal version\n * drop support for PostgreSQL client library older than 7.4, or non security maintained releases older than 8.1.4, 8.0.8, 7.4.13, 7.3.15\n\n## GDAL 2.2.0 - Overview of Changes\n\nPort:\n * Export VSICreateCachedFile() as CPL_DLL so as to enable building JP2KAK as a plugin\n * Added possibility to find GDAL_DATA path using INST_DATA definition without execution GDALAllRegister if GDAL_DATA placed in version named directory on Linux (#6543)\n * Unix filesystem: make error message about failed open to report the filename (#6545)\n * File finder: Remove hardcoded find location (/usr/local/share/gdal) (#6543)\n * Win32 filesystem handler: make Truncate() turn on sparse files when doing file extension\n * Add VSIFGetRangeStatusL() and VSISupportsSparseFiles()\n * GDAL_NO_HARDCODED_FIND compilation option (#6543,#6531) to block file open calls (for sandboxed systems)\n * Add VSIMallocAligned(), VSIMallocAlignedAuto() and VSIFreeAligned() APIs\n * /vsizip / /vsitar: support alternate syntax /vsitar/{/path/to/the/archive}/path/inside/the/tar/file so as not to be dependent on file extension and enable chaining\n * Optimize opening of /vsitar/my.tar.gz/my_single_file\n * /vsizip/ : support creating non-ASCII filenames inside a ZIP (#6631)\n * VSI Unix file system: fix behavior in a+ mode that made MRF caching not work on Mac and other BSD systems\n * Fix deadlock at CPLWorkerThreadPool destruction (#6646)\n * Windows: honour GDAL_FILENAME_IS_UTF8 setting to call LoadLibraryW() (#6650)\n * CPLFormFilename(): always use / path separator for /vsimem, even on Windows\n * /vsimem/: add trick to limit the file size, so as to be able to test how drivers handle write errors\n * /vsimem/: fix potential crash when closing -different- handles pointing to the same file from different threads (#6683)\n * CPLHTTPFetch(): add MAX_FILE_SIZE option\n * CPLHTTPFetch(): add a CAINFO option to set the path to the CA bundle file. As a fallback also honour the CURL_CA_BUNDLE and SSL_CERT_FILE environment variables used by the curl binary, which makes this setting also available for /vsicurl/, /vsicurl_streaming/, /vsis3/ and /vsis3_streaming/ file systems (#6732)\n * CPLHTTPFetch(): don't disable peer certificate verification when doing https (#6734)\n * CPLHTTPFetch(): cleanly deal with multiple headers passed with HEADERS and separated with newlines\n * CPLHTTPFetch(): add a CONNECTTIMEOUT option\n * CPLHTTPFetch(): add a GDAL_HTTP_HEADER_FILE / HEADER_FILE option.\n * CPLHTTPSetOptions(): make redirection of POST requests to still be POST requests after redirection (#6849)\n * /vsicurl/: take CPL_VSIL_CURL_ALLOWED_EXTENSIONS into account even if GDAL_DISABLE_READDIR_ON_OPEN is defined (#6681)\n * /vsicurl/: get modification time if available from GET or HEAD results\n * /vsis3/: add a AWS_REQUEST_PAYER=requester configuration option (github #186)\n * CPLParseXMLString(): do not reset error state\n * Windows: fix GetFreeDiskSpace()\n * Fix GetDiskFreeSpace() on 32bit Linux to avoid 32bit overflow when free disk space is above 4 GB (#6750)\n * Fix CPLPrintUIntBig() to really print a unsigned value and not a signed one\n * Add CPL_HAS_GINT64, GINT64_MIN/MAX, GUINT64_MAX macros (#6747)\n * Add CPLGetConfigOptions(), CPLSetConfigOptions(), CPLGetThreadLocalConfigOptions() and CPLSetThreadLocalConfigOptions() to help improving compatibility between osgeo.gdal python bindings and rasterio (related to https://github.com/mapbox/rasterio/pull/969)\n * MiniXML serializer: fix potential buffer overflow.\n\nCore:\n * Proxy dataset: add consistency checks in (the unlikely) case the proxy and underlying dataset/bands would not share compatible characteristics\n * GDALPamDataset::TryLoadXML(): do not reset error context when parsing .aux.xml\n * PAM/VRT: only take into account <Entry> elements when deserializing a <ColorTable>\n * GDALCopyWords(): add fast copy path when src data type == dst data type == Int16 or UInt16\n * GetVirtualMemAuto(): allow USE_DEFAULT_IMPLEMENTATION=NO to prevent the default implementation from being used\n * Nodata comparison: fix test when nodata is FLT_MIN or DBL_MIN (#6578)\n * GetHistogram() / ComputeRasterMinMax() / ComputeStatistics(): better deal with precision issues of nodata comparison on Float32 data type\n * Fast implementation of GDALRasterBand::ComputeStatistics() for GDT_Byte and GDT_UInt16 (including use of SSE2/AVX2)\n * Driver manage: If INST_DATA is not requested, do not check the GDAL_DATA variable.\n * Make sure that GDALSetCacheMax() initialize the raster block mutex (#6611)\n * External overview: fix incorrect overview building when generating from greater overview factors to lower ones, in compressed and single-band case (#6617)\n * Speed-up SSE2 implementation of GDALCopy4Words from float to byte/uint16/int16\n * Add SSE2 and SSSE3 implementations of GDALCopyWords from Byte with 2,3 or 4 byte stride to packed byte\n * GDALCopyWords(): SSE2-accelerated Byte->Int32 and Byte->Float32 packed conversions\n * Fix GDALRasterBand::IRasterIO() on a VRT dataset that has resampled sources, on requests such as nXSize == nBufXSize but nXSize != dfXSize\n * GDALRasterBand::IRasterIO(): add small epsilon to floating-point srcX and srcY to avoid some numeric precision issues when rounding.\n * Add GDALRasterBand::GetActualBlockSize() (#1233)\n * Fix potential deadlock in multithreaded writing scenarios (#6661)\n * Fix thread-unsafe behavior when using GetLockedBlock()/MarkDirty()/DropLock() lower level interfaces (#6665)\n * Fix multi-threading issues in read/write scenarios (#6684)\n * Resampled RasterIO(): so as to get consistent results, use band datatype as intermediate type if it is different from the buffer type\n * Add GDALIdentifyDriverEx() function (github #152)\n * GDALOpenInfo: add a papszAllowedDrivers member and fill it in GDALOpenEx()\n * GDALDefaultOverviews::BuildOverviews(): improve progress report\n * Average and mode overview/rasterio resampling: correct source pixel computation due to numerical precision issues when downsampling by an integral factor, and also in oversampling use cases (github #156)\n * Overview building: add experimental GDAL_OVR_PROPAGATE_NODATA config option that can be set to YES so that a nodata value in source samples will cause the target pixel to be zeroed. Only implemented for AVERAGE resampling right now\n * GDALValidateOptions(): fix check of min/max values\n * GMLJP2 v2: update to 2.0.1 corrigendum and add capability to set gml:RectifiedGrid/gmlcov:rangeType content. Set SRSNAME_FORMAT=OGC_URL by default when converting to GML. Add gml:boundedBy in gmljp2:GMLJP2RectifiedGridCoverage\n * GMLJP2 v2: ensure KML root node id unicity when converting annotations on the fly. When generating GML features, make sure that PREFIX and TARGET_NAMESPACE are unique when specifying several documents.\n\nAlgorithms:\n * RPC transformer: speed-up DEM extraction by requesting and caching a larger buffer, instead of doing many queries of just a few pixels that can be costly with VRT for example\n * GDALDeserializeRPCTransformer(): for consistency, use the same default value as in GDALCreateRPCTransformer() if <PixErrThreshold> is missing (so use 0.1 instead of 0.25 as before)\n * TPS solver: when Armadillo fails sometimes, fallback to old method\n * GDALCreateGenImgProjTransformer2(): add SRC_APPROX_ERROR_IN_SRS_UNIT, SRC_APPROX_ERROR_IN_PIXEL, DST_APPROX_ERROR_IN_SRS_UNIT, DST_APPROX_ERROR_IN_PIXEL, REPROJECTION_APPROX_ERROR_IN_SRC_SRS_UNIT and REPROJECTION_APPROX_ERROR_IN_DST_SRS_UNIT transformer options, so as to be able to have approximate sub-transformers\n * Fix GDAL_CG_Create() to call GDALContourGenerator::Init() (#6491)\n * GDALContourGenerate(): handle the case where the nodata value is NaN (#6519)\n * GDALGridCreate(): fix hang in multi-threaded case when pfnProgress is NULL or GDALDummyProgress (#6552)\n * GDAL contour: fix incorrect oriented contour lines in some rare cases (#6563)\n * Warper: multiple performance improvements for cubic interpolation and uint16 data type\n * Warper: add SRC_ALPHA_MAX and DST_ALPHA_MAX warp options to control the maximum value of the alpha channel. Set now to 65535 for UInt16 (and 32767 for Int16), or to 2^NBITS-1. 255 used for other cases as before\n * Warper: avoid undefined behavior when doing floating point to int conversion, that may trigger exception with some compilers (LLVM 8) (#6753)\n * OpenCL warper: update cubicConvolution to use same formula as CPU case (#6664)\n * OpenCL warper: fix compliance to the spec. Fix issues with NVidia opencl (#6624, #6669)\n * OpenCL warper: use GPU based over CPU based implementation when possible, use non-Intel OpenCL implementation when possible. Add BLACKLISTED_OPENCL_VENDOR and PREFERRED_OPENCL_VENDOR to customize choice of implementation\n\nUtilities:\n * gdalinfo -json: fix order of points in wgs84Extent.coordinates (github #166)\n * gdalwarp: do not densify cutlines by default when CUTLINE_BLEND_DIST is used (#6507)\n * gdalwarp: when -to RPC_DEM is specified, make -et default to 0 as documented (#6608)\n * gdalwarp: improve detection of source alpha band and auto-setting of target alpha band. Automatically set PHOTOMETRIC=RGB on target GeoTIFF when input colors are RGB\n * gdalwarp: add a -nosrcalpha option to wrap the alpha band as a regular band and not as the alpha band\n * gdalwarp: avoid cutline densification when no transform at all is involved (related to #6648)\n * gdalwarp: fix failure with cutline on a layer of touching polygons (#6694)\n * gdalwarp: allow to set UNIFIED_SRC_NODATA=NO to override the default that set it to YES\n * gdalwarp: fix -to SRC_METHOD=NO_GEOTRANSFORM -to DST_METHOD=NO_GEOTRANSFORM mode (#6721)\n * gdalwarp: add support for shifting the values of input DEM when source and/or target SRS references a proj.4 vertical datum shift grid\n * gdalwarp: fix crash when -multi and -to RPC_DEM are used together (#6869)\n * gdal_translate: when using -projwin with default nearest neighbour resampling, align on integer source pixels (#6610)\n * gdal_translate & gdalwarp: lower the default value of GDAL_MAX_DATASET_POOL_SIZE to 100 on MacOSX (#6604)\n * gdal_translate: avoid useless directory scanning on GeoTIFF files\n * gdal_translate: make \"-a_nodata inf -ot Float32\" work without warning\n * gdal_translate: set nodata value on vrtsource on scale / unscale / expand cases (github #199)\n * GDALTranslate(): make it possible to create a anonymous target VRT from a (anonymous) memory source\n * gdaldem: speed-up computations for src type = Byte/Int16/UInt16 and particularly for hillshade\n * gdaldem hillshade: add a -multidirectional option\n * GDALDEMProcessing() API: fix -alt support (#6847)\n * gdal_polygonize.py: explicitly set output layer geometry type to be polygon (#6530)\n * gdal_polygonize.py: add support for -b mask[,band_number] option to polygonize a mask band\n * gdal_rasterize: make sure -3d, -burn and -a are exclusive\n * gdal_rasterize: fix segfaults when rasterizing into an ungeoreferenced raster, or when doing 'gdal_rasterize my.shp my.tif' with a non existing my.tif (#6738)\n * gdal_rasterize: fix crash when rasterizing empty polygon (#6844)\n * gdal_grid: add a smoothing parameter to invdistnn algorithm (github #196)\n * gdal_retile.py: add a -overlap switch\n * gdal2tiles.py: do not crash on empty tiles generation (#6057)\n * gdal2tiles.py: handle requested tile at too low zoom to get any data (#6795)\n * gdal2tiles: fix handling of UTF-8 filenames (#6794)\n * gdal2xyz: use %d formatting for Int32/UInt32 data types (#6644)\n * gdal_edit.py: add -scale and -offset switches (#6833)\n * gdaltindex: emit warning in -src_srs_format WKT when WKT is too large\n * gdalbuildvrt: add a -oo switch to specify dataset open options\n\nPython samples:\n * add validate_cloud_optimized_geotiff.py\n * add validate_gpkg.py\n\nMulti-driver:\n * Add GEOREF_SOURCES open option / GDAL_GEOREF_SOURCES config. option to all JPEG2000 drivers and GTiff to control which sources of georeferencing can be used and their respective priority\n\nAIGRID driver:\n * fix 2.1.0 regression when reading statistics (.sta) file with only 3 values, and fix <2.1 behavior to read them in LSB order (#6633)\n\nAAIGRID driver:\n * auto-detect Float64 when the nodata value is not representable in the Float32 range\n\nADRG driver:\n * handle north and south polar zones (ZNA 9 and 18) (#6783)\n\nASRP driver:\n * fix georeferencing of polar arc zone images (#6560)\n\nBPG driver:\n* declare GDALRegister_BPG as C exported for building as a plugin (#6693)\n\nDIMAP driver:\n * DIMAP: for DIMAP 2, read RPC from RPC_xxxxx.XML file (#6539)\n * DIMAP/Pleiades metadata reader: take into tiling to properly shift RPC (#6293)\n * add support for tiled DIMAP 2 datasets (#6293)\n\nDODS driver:\n * fix crash on URL that are not DODS servers (#6718)\n\nDTED driver:\n * correctly create files at latitudes -80, -75, -70 and -50 (#6859)\n\nECW driver:\n * Add option ECW_ALWAYS_UPWARD=TRUE/FALSE  to work around issues with \"Downward\" oriented images (#6516).\n\nENVI driver:\n * on closing, pad image file with trailing nul bytes if needed (#6662)\n * add read/write support for rotated geotransform (#1778)\n\nGeoRaster driver:\n * fix report of rotation (#6593)\n * support for JP2-F compression (#6861)\n * support direct loading of JPEG-F when blocking=no (#6861)\n * default blocking increased from 256x256 to 512x512 (#6861)\n\nGPKG driver:\n * implement tiled gridded elevation data extension\n * add VERSION creation option\n * check if transaction COMMIT is successful (#6667)\n * fix crash on overview building on big overview factor (#6668)\n * fix crash when opening an empty raster with USE_TILE_EXTENT=YES\n * fix gpkg_zoom_other registration\n\nGTiff driver:\n * support SPARSE_OK=YES in CreateCopy() mode (and in update mode with the SPARSE_OK=YES open option), by actively detecting blocks filled with 0/nodata about to be written\n * When writing missing blocks (i.e. non SPARSE case), use the nodata value when defined. Otherwise fallback to 0 as before.\n * in FillEmptyTiles() (i.e. in the TIFF non-sparse mode), avoid writing zeroes to file so as to speed up file creation when filesystem supports ... sparse files\n * add write support for half-precision floating point (Float32 with NBITS=16)\n * handle storing (and reading) band color interpretation in GDAL internal metadata when it doesn't match the capabilities of the TIFF format, such as B,G,R ordering (#6651)\n * Fix RasterIO() reported when downsampling a RGBA JPEG compressed TIFF file (#6943)\n * Switch search order in GTIFGetOGISDefn() - Look for gdal_datum.csv before datum.csv (#6531)\n * optimize IWriteBlock() to avoid reloading tile/strip from disk in multiband contig/pixel-interleave layouts when all blocks are dirty\n * fix race between empty block filling logic and background compression threads when using Create() interface and NUM_THREADS creation option (#6582)\n * use VSIFTruncateL() to do file extension\n * optimize reading and writing of 1-bit rasters\n * fix detection of blocks larger than 2GB on opening on 32-bit builds\n * fix saving and loading band description (#6592)\n * avoid reading external metadata file that could be related to the target filename when using Create() or CreateCopy() (#6594)\n * do not generate erroneous ExtraSamples tag when translating from a RGB UInt16, without explicit PHOTOMETRIC=RGB (#6647)\n * do not set a PCSCitationGeoKey = 'LUnits = ...' as the PROJCS citation on reading\n * fix creating an image with the Create() interface with BLOCKYSIZE > image height (#6743)\n * fix so that GDAL_DISABLE_READDIR_ON_OPEN = NO / EMPTY_DIR is properly honoured and doesn't cause a useless directory listing\n * make setting GCPs when geotransform is already set work (with warning about unsetting the geotransform), and vice-versa) (#6751)\n * correctly detect error return of TIFFReadRGBATile() and TIFFReadRGBAStrip()\n * in the YCBCR RGBA interface case, only expose RGB bands, as the alpha is always 255\n * don't check free disk space when outputting to /vsistdout/ (#6768)\n * make GetUnitType() use VERT_CS unit as a fallback (#6675)\n * in COPY_SRC_OVERVIEWS=YES mode, set nodata value on overview bands\n * read GCPs in ESRI <GeodataXform> .aux.xml\n * explicitly write YCbCrSubsampling tag, so as to avoid (latest version of) libtiff to try reading the first strip to guess it. Helps performance for cloud optimized geotiffs\n * map D_North_American_1927 datum citation name to OGC North_American_Datum_1927 so that datum is properly recognized (#6863)\n * Internal libtiff. Resync with CVS (post 4.0.7)\n * Internal libtiff: fix 1.11 regression that prevents from reading one-strip files that have no StripByteCounts tag (#6490)\n\nGRASS driver:\n * plugin configure: add support for GRASS 7.2 (#6785)\n * plugin makefile: do not clone datum tables and drivers (#2953)\n * use Rast_get_window/Rast_set_window for GRASS 7 (#6853)\n\nGRIB driver:\n * Add (minimalistic) support for template 4.15 needed to read Wide Area Forecast System (WAFS) products (#5768)\n * **Partial** resynchronization with degrib-2.0.3, mostly to get updated tables (related to #5768)\n * adds MRMS grib2 decoder table (http://www.nssl.noaa.gov/projects/mrms/operational/tables.php) (github #160)\n * enable PNG decoding on Unix (#5661, github #160)\n * remove explicitly JPEG2000 decompression through Jasper and use generic GDAL code so that other drivers can be triggered\n * fix a few crashes on malformed files\n\nGTX driver:\n * add a SHIFT_ORIGIN_IN_MINUS_180_PLUS_180 open option\n\nHDF4 driver:\n * Fixed erroneous type casting in HDF4Dataset::AnyTypeToDouble() that breaks reading georeferencing and other metadata\n\nHDF5 driver:\n * correct number of GCPs to avoid dummy trailing (0,0)->(0,0,0) and remove +180 offset applied to GCP longitude. Add instead a heuristics to determine if the product is crossing the antimeridian, and a HDF5_SHIFT_GCPX_BY_180 config option to be able to override the heuristics (#6666)\n\nHFA driver:\n * fix reading and writing of TOWGS84 parameters (github #132)\n * export overview type from HFA files to GDAL metadata as OVERVIEWS_ALGORITHM (github #135)\n * make .ige initialization use VSIFTruncateL() to be faster on Windows\n * add support for TMSO and HOM Variant A projections (#6615)\n * Add elevation units read from HFA files metadata (github #169)\n * set binning type properly according to layerType being thematic or not (#6854)\n\nIdrisi driver:\n * use geotransform of source dataset even if it doesn't have a SRS (#6727)\n * make Create() zero-initialize the .rst file (#6873)\n\nILWIS driver:\n * avoid IniFile::Load() to set the bChanged flag, so as to avoid a rewrite of files when just opening datasets\n\nISCE driver:\n * fix computation of line offset for multi-band BIP files, and warn if detecting a wrong file produced by GDAL 2.1.0 (#6556)\n * fix misbehaviour on big endian hosts\n * add support for reading and writing georeferencing (#6630, #6634)\n * make parsing of properties case insensitive (#6637)\n\nISIS3 driver:\n * add write support\n * add mask band support on read\n * get label in json:ISIS3 metadata domain\n\nJPEGLS driver:\n\nJP2ECW driver:\n * fix crash when translating a Float64 raster (at least with SDK 3.3)\n\nJP2KAK driver:\n * add support for Kakadu v7.9.  v7.8 should not be used.  It has a bug fixed in v7.9\n * catch exceptions in jp2_out.write_header()\n\nJP2OpenJPEG driver:\n * add a USE_TILE_AS_BLOCK=YES open option that can help with whole image conversion\n * prevent endless looping in openjpeg in case of short write\n * for single-line organized images, such as found in some GRIB2 JPEG2000 images, use a Wx1 block size to avoid huge performance issues (#6719)\n  * ignore warnings related to empty tag-trees.\n\nJPIPKAK driver:\n * fix random crashes JPIP in multi-tread environment (#6809)\n\nKEA driver:\n * Add support for Get/SetLinearBinning (#6855)\n\nKMLSuperOverlay driver:\n * recognize simple document made of GroundOverlay (#6712)\n * Add FORMAT=AUTO option. Uses PNG for semi-transparent areas, else JPG. (#4745)\n\nLAN driver:\n * remove wrong byte-swapping for big-endian hosts\n\nMAP driver:\n * change logic to detect image file when its path is not absolute\n\nMBTiles driver:\n * on opening if detecting 3 bands, expose 4 bands since there might be transparent border tiles (#6836)\n * fix setting of minzoom when computing overviews out of order\n * do not open .mbtiles that contain vector tiles, which are not supported by the driver\n\nMEM driver:\n * disable R/W mutex for tiny performance increase in resampled RasterIO\n * add support for overviews\n * add support for mask bands\n\nMRF driver:\n * bug fix in PNG and JPEG codecs\n * Fixing a problem with setting NoData for MRFs generated with Create\n * fix plugin building (#6498)\n * rename CS variable so as to avoid build failure on Solaris 11 (#6559)\n * Allow MRF to write the data file directly to an S3 bucket.\n * Allow relative paths when MRF is open via the metadata string.\n * Add support for spacing (unused space) between tiles. Defaults to none.\n * Read a single LERC block as an MRF file.\n\nMSG driver:\n * fix incorrect georeference calculation for msg datasets (github #129)\n\nNetCDF driver:\n * add support for reading SRS from srid attribute when it exists and has content like urn:ogc:def:crs:EPSG::XXXX (#6613)\n * fix crash on datasets with 1D variable with 0 record (#6645)\n * fix erroneous detection of a non-longitude X axis as a longitude axis that caused a shift of 360m on the georeferencing (#6759)\n * read/write US_survey_foot unit for linear units of projection\n * apply 'add_offset' and 'scale_factor' on x and y variables when present, such as in files produced by NOAA from the new GOES-16 (GOES-R) satellite (github #200)\n * add a HONOUR_VALID_RANGE=YES/NO open option to control whether pixel values outside of the validity range should be set to the nodata value (#6857)\n * fix crash on int64/uint64 dimensions and variables, and add support for them (#6870)\n\nNITF driver:\n * add support for writing JPEG2000 compressed images with JP2OpenJPEG driver\n * fix writing with JP2KAK driver (emit codestream only instead of JP2 format)\n * fix setting of NBPR/NBPC/NPPBH/NPPBV fields for JPEG2000 (fixes #4322); in JP2ECW case, make sure that the default PROFILE=NPJE implies 1024 block size at the NITF level\n * implement creation of RPC00B TRE for RPC metadata in CreateCopy() mode\n * add support for reading&writing _rpc.txt files\n * nitf_spec.xml: Add support for MTIRPB TRE in NITF image segment. Also makes minor change to BLOCKA to include default values (github #127)\n * nitf_spec.xml: add IMASDA and IMRFCA TREs\n * GetFileList(): Small optimization to avoid useless file probing.\n\nNWT_GRD:\n * detect short writes\n\nOpenJPEG driver:\n * support direct extracting of GeoRaster JP2-F BLOB (#6861)\n\nPCIDSK driver:\n * handle Exceptions returned from destructor and check access rights in setters (github #183)\n\nPDF driver:\n * implement loading/saving of metadata from/into PAM (#6600)\n * implement reading from/writing to PAM for geotransform and projection (#6603)\n * prevent crashes on dataset reopening in case of short write\n\nPLScenes driver:\n * add a METADATA open option\n\nPostgisRaster driver:\n * fix potential crash when one tile has a lower number of bands than the max of the table (#6267)\n\nR driver:\n * fix out-of-memory (oom) with corrupt R file\n\nRaw drivers:\n * prevent crashes on dataset closing in case of short write\n\nRMF driver:\n * fix wrong counter decrement that caused compressed RMF to be incorrectly decompressed (github #153)\n * fix load/store inversion of cm and dm units in MTW files (github #162)\n * fix reading nodata for non-double data type (github #174)\n\nROIPAC driver:\n * add support for reading/writing .flg files (#6504)\n * fix computation of line offset for multi-band BIP files, and warn if detecting a wrong file produced by GDAL >= 2.0.0 (#6591)\n * fix for big endian hosts\n\nRS2 driver:\n * add support for reading RPC from product.xml\n\nSAFE driver:\n * fix handling of SLC Products by providing access to measurements as subdatasets (#6514)\n\nSentinel2 driver:\n * add support for new \"Safe Compact\" encoding of L1C products (fixes #6745)\n\nSQLite driver:\n * Add read support for RasterLite2 coverages in SQLite driver\n\nSRTMHGT driver:\n * open directly .hgt.zip files\n * accept filenames like NXXEYYY.SRTMGL1.hgt (#6614)\n * handle files for latitude >= 50 (#6840)\n\nVRT driver:\n * add default pixel functions: real, imag, complex, mod, phase, conj, etc... for complex data types (github #141)\n * avoid useless floating point values in SrcRect / DstRect (#6568)\n * avoid buffer initialization in RasterIO() when possible (replace ancient and likely broken concept of bEqualAreas)\n * make CheckCompatibleForDatasetIO() return FALSE on VRTDerivedRasterBands (#6599)\n * VRT warp: fix issue with partial blocks at the right/bottom and dest nodata values that are different per band (#6581)\n * fix performance issue when nodata set at band level and non-nearest resampling used (#6628)\n * VRTComplexSource: do temp computations on double to avoid precision issues when band data type is Int32/UInt32/CInt32/Float64/CFloat64 (#6642)\n * VRT derived band: add the capability to define pixel functions in Python\n * CreateCopy(): detect short writes\n * Fix linking error on VRTComplexSource::RasterIOInternal<float>() (#6748)\n * avoid recursion in xml:VRT metadata (#6767)\n * prevent 'Destination buffer too small' error when calling GetMetadata('xml:VRT') on a in-memory VRT copied from a VRT\n * fix 2.1 regression that can cause crash in VRTSimpleSource::GetFileList() (#6802)\n\nWMS driver:\n * Added support for open options to WMS minidrivers\n * Refactored the multi-http code to make it possible to do range requests.\n * Added a minidriver_mrf, which reads from remote MRFs using range requests.\n * Made the minidriver_arcgis work with an ImageService, not only MapService.\n * Added static cache of server response.\n * Allow tiledWMS to work in off-line mode by including the server response in the .wms file itself.\n * honour GDAL_HTTP_USERAGENT config option when it is set and <UserAgent> is missing (#6825)\n * WMS/WMTS: better deal with tiles with different band count (grayscale, gray+alpha, palette, rgb, rgba) (github #208)\n * Make HTTPS options apply to tWMS minidriver init, better HTTP error reporting\n\nWMTS driver:\n * do not take into account WGS84BoundingBox/BoundingBox that would be the result of the densified reprojection of the bbox of the most precise tile matrix\n * add TILEMATRIX / ZOOM_LEVEL open options\n * accept tiles of small dimensions (github #210)\n\nXYZ driver:\n\n## OGR 2.2.0 - Overview of Changes\n\nCore:\n * Layer algebra: Add KEEP_LOWER_DIMENSION_GEOMETRIES=YES/NO option to Intersection, Union and Identity.\nDefault is yes, but it is set to no unless result layer is of geom type unknown.\nIf set to no, result features which would have lower dim geoms are skipped\nif operating on two layers with same geom dim.\n * Fix crash/corrupted values when running importFromWkb() on POLYGON M/POLYGON ZM geometries (#6562)\n * Add OGR_WKT_PRECISION config option that defaults to 15 to select the number of decimals when outputting to WKT\n * Make OGRFeature::SetField(string) accept JSon serialized arrays for the String/Integer/Integer64/RealList types; add reciprocal OGRFeature::GetFieldAsSerializedJSon() for those types\n * OGRGeometryFactory::transformWithOptions(): better deal with reprojection from polar projection to WGS84, and projections crossing the antimeridian to WGS84, by splitting geometries prior to reprojection (#6705)\n * LinearRing transformTo(): force last point to be identical to first one in case it is not.\n * GML geometry parsing: avoid 'Cannot add a compound curve inside a compound curve' error (#6777)\n * OGR SQL: fix IN filtering on MapInfo indexed columns (#6798)\n * OGR SQL: add support for LIMIT and OFFSET keywords\n * OGR SQL: add comparisons on date / datetime (#6810)\n * OGR SQL: increase efficiency of DISTINCT operator\n * OGREnvelope: change initialization to fix issue when getting MULTIPOINT(0 0,1 1) envelope (#6841)\n * OGRParse: fix parsing logic to avoid false positive detection of string as datetime (#6867)\n\nOGRSpatialReference:\n * Upgrade to EPSG database v9.0 (#6772)\n * OGRCT: upgrade LIBNAME of mingw and cygwin to libproj-9.dll and cygproj-9.dll to be up-to-date with proj 4.9.X (recommended method is using ./configure --with-static-proj4 instead) (#6501)\n * importFromESRI(): fix import of multi line MERCATOR SRS (#6523)\n * morphToESRI(): correctly compute standard_parallel_1 of Mercator(2SP) projection from scale factor of Mercator(1SP) (#6456, #4861)\n * exportToProj4(): recognize explicit OSR_USE_ETMERC=NO to avoid using etmerc with proj >= 4.9.3\n * importFromProj4(): do not set a AUTHORITY node for strings like '+init=epsg:XXXX +some_param=val'\n * importFromProj4(): be robust with missing proj.4 epsg dictionary when importing '+init=epsg:xxxx +other_parm=value'\n * AutoIdentifyEPSG(): add identification of EPSG:3995 (Arctic Polar Stereographic on WGS84) and EPSG:3031 (Antarctic Polar Stereographic on WGS84)\n * OGRCoordinateTransformation: avoid potential bugs in proj.4 on NaN input\n * importFromEPSG(): take into account DX,DY,DZ,RX,RY,RZ,DS columns in pcs.csv to add per-PCS TOWGS84 overrides (geotiff #52)\n * Coordinate transformation: prevent unnecessary coordinate transformations (github #184, #185)\n\nUtilities:\n * ogr2ogr: do not return error on ogr2ogr --utility_version\n * ogr2ogr: keep -append and -overwrite when -update follows\n * ogr2ogr: fix heuristics to detect likely absence of '-f' (#6561)\n * ogr2ogr: do not emit a warning when updating/overwriting a destination dataset that is not a Shapefile and if -f is not specified (#6561)\n * ogr2ogr: make overwriting of lots of PG tables less prone to PostgreSQL 'out of shared memory' errors, by committing transactions after each table recreation\n * ogr2ogr: prevent 'ogr2ogr same.shp same.shp' (#1465)\n * ogr2ogr: add a -limit option to limit the number of features read per layer\n * GDALVectorTranslate(): imply update mode if access mode not explicitly specified and hDstDS != NULL (#6612)\n * ogrlineref: Fix crash if no new layer name provided\n * ogrtindex: add -src_srs_name, -src_srs_format and -t_srs option to allow indexing files that have different projections\n\nMultidriver:\n * PGeo/FileGDB/OpenFileGDB: OGRCreateFromShapeBin(): do not error out on empty lines/polygons\n * GPKG/SQLite/PG/FileGDB/MEM: properly set/reset field subtype with AlterFieldDefn() (#6689)\n * DXF, GeoJSON, GML, KML, LIBKML, ODS, Shape, XLSX: report operating system error if file creation fails (#2253)\n\nAmigoCloud driver:\n * add option to receive an AmigoCloud API key in the connection string, fix page size (github #137)\n\nCarto:\n * renamed from CartoDB\n * fix CartoDB'fication() by removing manual creation of the_geom_webmercator mercator, and also attach created sequence to table.cartodb_id (#6565)\n\nCSV driver:\n * add read/write support for String/Integer/Integer64/RealList types as serialized JSon arrays\n\nDGN driver:\n * avoid crash with -ftrapv on 250K_NF44NE_Area_V7.dgn (relates to #6806)\n * use coordinate delta encoding from the attribute records array (6806)\n\nDXF driver:\n * sanitize layer name on export to avoid forbidden characters\n * reader: convert GeometryCollection to MultiPoint, MultiLineString or MultiPolygon when possible (QGIS #10485)\n * add font of TEXT and MTEXT to OGR style string (https://github.com/OSGeo/gdal/pull/198)\n\nDWG driver:\n * compilation fixes with Teigha 4.2.2\n\nElasticSearch driver:\n * add support for ElasticSearch 5.0 and fix 2.X support (#6724)\n * implement translation from SQL to E.S. query language\n\nFileGDB driver:\n * add support to read curve geometries (#5890)\n * support opening '.' directory\n\nGeoJSON driver:\n * writer: add a RFC7946=YES creation option (#6705)\n * read and write 'name' and 'description' members at FeatureCollection level\n * fix field type detection when first value of a field is null (#6517)\n * improve/fix field type promotion\n * fix wrong behavior when there's a 'id' at Feature level and 'id' or 'ID' field in properties (#6538)\n * in case top level id is a negative integer, put the value in a 'id' attribute (#6538)\n * ESRI Json reader: support multilinestring from esriGeometryPolyline\n * ESRI Json reader: do not set field width of 2147483647 (#6529)\n * ESRI Json reader: support reading M and ZM geometries\n * Add CPL_json_object_object_get() and use it, to avoid deprecation warnings on json_object_object_get()\n * TopoJSON reader: sanitize invalid polygons (such as found in the 'TopoJSON' layer of http://bl.ocks.org/mbostock/raw/4090846/us.json)\n * writer: fix segfaults on NULL geometry with -lco WRITE_BBOX=YES (#6698)\n * writer: fix crash if NATIVE_MEDIA_TYPE creation option is specified alone\n * Add support of TopoJSON without 'transform' element (github #192)\n * don't set SRS if 'crs' set to null (github #206)\n\nGML driver:\n * remove hack for CityGML regarding forcing srsDimension to 3 if not specified. Instead add a GML_SRS_DIMENSION_IF_MISSING config option that can be set to 3 if needed (#6597)\n * consider srsName with URL like 'http://www.opengis.net/def/crs/EPSG/0/' as following EPSG axis order. Add SWAP_COORDINATES=YES/NO/AUTO (and GML_SWAP_COORDINATES configuration option) to override all auto guessing (#6678)\n * add a SRSNAME_FORMAT=SHORT/OGC_URN/OGC_URL dataset creation option\n * OGR_G_ExportToGMLEx(): add a COORD_SWAP option\n * Writer: make ogr:FeatureCollection be a substitutionGroup of AbstractFeature for GML 3.2 output, so as to be compatible of GMLJP2 v2\n * GML and NAS: improve error reporting (mention feature id and gml_id) when parsing fails because of geometry decoding error\n * GML and NAS: add GML_SKIP_CORRUPTED_FEATURES and NAS_SKIP_CORRUPTED_FEATURES configuration options to avoid stopping reading a layer because of a corrupted geometry\n * Add support for Japanese GML FGD v4.1 format (github #204)\n\nGPKG driver:\n * list all tables/views by default (useful for non spatial tables not registered as aspatial). Add ASPATIAL_VARIANT layer creation option to select the way how to create a non-spatial table as aspatial.\n * Create non-spatial tables by default conforming to GPKG v1.2 'attributes'\n * use OGR_CURRENT_DATE config option if defined as the value of the 'last_change' of column of 'gpkg_contents' so as to be able to have binary identical output\n * update last_change column when content of raster or vector tables has changed\n * do not emit error when running ExecuteSQL() with a spatial filter on an empty layer (#6639)\n * update schema to reflect CURRENT_TIMESTAMP -> 'now' changes (github #155)\n * better table and column quoting.\n * Robustify layer deletion (make it accessible through DROP TABLE xxx and DELLAYER:xxx syntax) and renaming\n * implement DeleteField(), AlterFieldDefn(), ReorderFields()\n * make GetExtent() save extent if not already cached\n * add special SQL 'RECOMPUTE EXTENT ON layer_name' to force recomputation of extent\n * check identifier unicity on layer creation\n * add possibility to disable foreign key check by setting OGR_GPKG_FOREIGN_KEY_CHECK=NO config option\n * add HasSpatialIndex(tblname,geomcolname) SQL function\n * don't show Spatialite vgpkg_ virtual tables (#6707)\n * SQLite/GPKG: add explicit error message when trying to open a read-only WAL-enabled database (#6776)\n * SQLite/GPKG: make sure when closing a WAL-enabled database opened in read-only mode to reopen it in read-write mode so that the -wal and -shm files are removed (#6776)\n * make GetFeature() works on non conformant tables that have no integer primary key field (#6799), and be robust to non standard column types\n * remove triggers related to metadata tables that cause issues and have been removed by latest revisions of the spec.\n * declare feature id column of features tables and tile pyramid user data tables as NOT NULL (#6807)\n * add a gpkg_ogr_contents table to store feature count.\n * speed-up GetFeatureCount() with only a spatial filter set\n * improve column recognition for SQL result layer\n * add/override ST_Transform() and SridFromAuthCRS() from Spatialite to make them work with gpkg_spatial_ref_sys\n * add ImportFromEPSG()\n * make ST_Min/MaxX/Y(), ST_SRID(), ST_GeometryType() and ST_IsEmpty() work with Spatialite geometries\n * improve performance of spatial index creation and use on multi-gigabyte databases\n * better support of spatial views, by adding a special behavior if a column is named OGC_FID\n * avoid potential denial of services by adding LIMIT clauses\n * slightly more efficient implementation of GetExtent() if extent in gpkg_contents is empty\n * create a dummy 'ogr_empty_table' features table in case we have no 'features' or 'tiles' table, so as to be conformant with Req 17 of the GeoPackage specification\n * add DEFAULT '' to metadata column of gpkg_metadata table\n * accept opening a .gpkg without vector content and without gpkg_geometry_columns table in vector mode if we also open in update mode; remove capability of opening a .gpkg without vector content but with gpkg_geometry_columns table in vector mode if we only open in read-only mode; fix creation of a vector layer in a database if it initially lacks a gpkg_geometry_columns table\n * fix appending a raster to a vector database without pre-existing raster support tables\n * add minimalistic support for definition_12_063 column in gpkg_spatial_ref_sys, so that insertion of new SRS doesn't fail\n * use GEOMETRYCOLLECTION instead of GEOMCOLLECTION for SQL and gpkg_geometry_columns.geometry_type_name\n * do not warn if gpkg_metadata extension declared\n\nGPX driver:\n * ignore wpt/rtept/trkpt with empty content for lat or long\n\nILI driver:\n * ILI1: fix crash in JoinSurfaceLayer() when the multicurve of the feature of the poSurfaceLineLayer layer is empty (#6688)\n * ILI1: make polygon reconstruction in Surface layers robust to curves not in natural order (#6728)\n * ILI2: assign FID to features (#6839)\n * ILI2: fix crashing bug in Create() if model file not specified\n\nKML driver:\n * add a DOCUMENT_ID datasource creation option to set the id of the root <Document> node\n\nLIBKML driver:\n * fix crash when reading <gx:TimeStamp> or <gx:TimeSpan> elements (#6518)\n * add a DOCUMENT_ID datasource creation option to set the id of the root <Document> node\n * emit style related errors as warnings to make datasets openable by SWIG bindings (#6850)\n\nMITAB driver:\n * limit (width, precision) of numeric fields on creation to (20,16) for compatibility with MapInfo (#6392)\n * add support for oblique stereographic (#6598)\n * Adds the authority code for Irish national grid (Ireland_1965) (github #149)\n * fix spelling for Euref_89 and add EPSG code (#6816)\n\nMSSQLSpatial driver:\n * Fix bulk insert with table names containing spaces (#6527)\n * Build optional mssql plugin with SQL Native Client support for MSSQL Bulk Copy\n * Fix MSSQL select layer to recognize geometry column with sqlncli (#6641)\n\nMySQL driver:\n * fix spatial filtering on recent mysql by adding a SRID in the rectangle geometry\n * do not force NOT NULL constraint on geometry field if no spatial index is used\n\nNAS driver:\n * support multiple 'anlass' in updates\n\nNWT_GRD:\n * add write support (#6533)\n\nOCI driver:\n * Add options for faster feature loading (#6606)\n * add WORKSPACE open option\n * correctly handle OFTInteger64 case in loader layer (bug found by cppcheck multiCondition)\n * support for long identifiers (up to 128 long) when running of 12.2 or + (#6866)\n * OCILOB VSIL driver: new driver to streams in and out of Oracle BLOB as a GDAL large virtual file system (#6861)\n\nODS driver:\n * fix FID filtering (#6788)\n\nOGDI driver:\n * make GetNextRawFeature() report an error when it is not end of layer\n * better error reporting when the layer list cannot be established\n * catch non-fatal OGDI errors emitted by OGDI 3.2.0 if OGDI_STOP_ON_ERROR environment variable is set to NO, and emit them as CPLError()s\n * display OGDI error message if opening fails\n\nOpenFileGDB driver:\n * do not error out on geometries that have a declared M array but that is missing (#6528)\n * add support to read curve geometries (#5890)\n * transcode UTF-16 strings found in column names, alias, etc... to UTF-8 (instead of using only their ASCII byte) (#6544)\n * do not emit an error on a empty table whose declaration has M settings (#6564)\n * support opening '.' directory\n * improve detection of some form of TINs from MULTIPATCH, and for MultiPatch layers, try to select a better geometry type for those layers (#5888)\n * fix bug when field description offset is beyond 4GB (#6830)\n\nOSM driver:\n * fix 'too many tags in relation' error when parsing .osm files\n * allow key=value entries in closed_ways_are_polygons= configuration (#6476)\n * allow OSM_SQLITE_CACHE config option to be greater than 2047\n\nPG driver:\n * fix insertion of binary/bytea content in non-copy mode (#6566)\n * fix errors caused by missing geometry_columns/spatial_ref_sys tables in non PostGIS databases, that prevent reading more than 500 features (QGIS #10904)\n * avoid errors with field default expressions like 'foo'::text (#6872)\n\nPLScenes driver:\n * add HTTP retry logic (#6655)\n * V0 API: workaround limitations on filtering on image_statistics.image_quality (#6657)\n * add support for Data V1 API\n\nS57 driver:\n * Fix ogr2ogr -f S57 (#6549)\n * fix crashes if the s57objectclasses.csv resource file contains invalid lines\n * remove data/s57attributes_aml.csv data/s57attributes_iw.csv data/s57objectclasses_aml.csv data/s57objectclasses_iw.csv and move their content into main s57attributes.csv and s57objectclasses.csv files (#6673)\n * Update s57 attributes and object classes according to s-57 reference (github #202)\n * add POSACC and QUAPOS fields for geometric primitive layers (github #205)\n\nSDE driver:\n * rename driver to OGR_SDE. Fix build (#6714)\n\nSEGY driver:\n * Accept SEGY files with ASCII headers that have nul terminated strings (#6674)\n\nShapefile driver:\n * auto-repack by default at dataset closing and FlushCache()/SyncToDisk() time. Controlled by AUTO_REPACK open and layer creation options (that default to YES)\n * generate .dbf end-of-file 0x1A character by default. Add DBF_EOF_CHAR layer creation options / open options to control that behavior\n * writing: use strerrno() for better error messages (QGIS #13468)\n * change REPACK implementation on Windows to be robust to remaining file descriptors opened on the .shp/.shx/.dbf (#6672, QGIS #15570)\n * Fix issue in DBFCloneEmpty() one a one field DBF not yet written to disk\n * add call to AutoIdentifyEPSG() when reading a .prj\n * support reading .dbf with substantial padding after last field definition.\n * when rewriting the geometry of the last record in the .shp, do it at the file offset it previously used (#6787)\n\nSOSI driver:\n * make registration of driver work again (2.1.0 regression) (#6500)\n * update to latest version of https://github.com/kartverket/gdal. Make SOSI driver support more geometry types (including curved geometries) plus provides some improvements on attribute-type mapping. Fix some memory errors/leaks. Disable by default non working creation code (#6503)\n\nSQLite/Spatialite driver:\n * do not emit error when running ExecuteSQL() with a spatial filter on an empty layer (#6639)\n * add read/write support for String/Integer/Integer64/RealList types as serialized JSon arrays\n * Spatialite: avoid crash when creating layer with geom_type = wkbCurve (fixes #6660)\n * Spatialite: do not report some BLOB columns as geometry columns of tables/views (when found before the geometry column(s)) (#6695, #6659)\n * fix update of features with multiple geometry columns (#6696)\n * speed-up dataset closing when creating a database with many spatial layers\n * Spatialite: avoid spatial views to cause layers 'layer_name(geometry_name)' to be publicly listed (#6740)\n * Spatialite: speed-up creation of database with INIT_WITH_EPSG=NO that is slow without transaction (not sure why as the table is empty...)\n * use AUTOINCREMENT for feature id column\n * allow OGR_SQLITE_CACHE to be set to > 2047 (MB) without overflowing\n * SQLite/GPKG: use SQLITE_OPEN_NOMUTEX flag to open databases.\n * GPKG/SQLite: fix ExecuteSQL() to work with a statement with 2 SELECT and ORDER BY clause (#6832)\n * SQLite/GPKG: change default page_size to 4096 bytes.\n * Update layer statistics for Spatialite 4 DB (#6838)\n * Remove traces of support of SQLite < 3.6.0\n * SQLite dialect: properly quote column names when needed (github #214)\n\nVFK driver:\n * allow reading multiple VFK files into single DB support amendment VFK files\n * recreate DB in the case that it's outdated (VFK DB created by previous versions of GDAL)\n * allow reading DB as valid datasource (#6509)\n * new tables in backend SQLite database (geometry_columns/spatial_ref_sys) to enable reading DB datasource by SQLite driver\n * new configuration option OGR_VFK_DB_READ to enable reading backend database by VFK driver\n\nVRT driver:\n * add support for 'm' attribute in PointFromColumns mode (#6505)\n\nWFS driver:\n * invalidate underlying layer when SetIgnoredFields() is called (QGIS #15112)\n * don't crash on empty <Keyword/> declaration (#6586)\n * fix potential nullptr dereference on dataset without layer (github #179)\n\nXLSX driver:\n * only list worksheets (and no charts) as layers (#6680)\n\n## SWIG Language Bindings\n\nAll bindings:\n * map osr.GetTargetLinearUnits() (#6627)\n * allow wkbCurve/wkbSurface as valid values for the geom type of GeomFieldDefn object\n * map GDALIdentifyDriverEx()\n\nJava bindings:\n * Fix SWIG Java bindings for GNM (#6434)\n * Fix crash on GetDefaultHistogram() if the C++ method returns an error (#6812)\n\nPerl bindings:\n * return value always from GetGeomFieldIndex (#6506)\n * the Warp method requires a list of datasets (#6521)\n * when 'use bigint' is in effect, int var is a ref.\n * Separate the module building in the CPAN distribution and in\nthe GDAL source tree. The CPAN distribution will be\ndeveloped at https://github.com/ajolma\n * Fix the Extension method in Driver per RFC 46\n * The Inv method of GeoTransform did not return a new object.\nAllow a single point in Apply method of GeoTransform.\n * Test for existence of PDL and require it if available.\n * allow decimation/replication in Piddle i/o.\n * support resampling in ReadTile.\n * Polygonize: Require explicit 8 for Connectedness to set 8-connectedness and allow 8CONNECTED as an option.\n * use Safefree to free memory allocated in Perl (#6796)\n\nPython bindings:\n * release the GIL before entering GDAL native code (for all, in GDAL module and a few ones in ogr like ogr.Open())\n * add outputType option to gdal.Rasterize()\n * fix build issues when CXX is defined in the environment\n * gdal.VectorTranslate(): add spatSRS option\n * when enabling ogr.UseExceptions(), use the GDAL error message in the exception text (if available), when the exception is linked to an error value in the OGRErr return code\n * gdal.VectorTranslate(): accept a single string as value of the layers option (instead of iterating over each of its characters)\n * Regenerate Python bindings with SWIG 3.0.8 to avoid issue with Python 3.5. Add backward compatibility in Band.ComputeStatistics() to accept 0/1 as input instead of the expected bool value (#6749)\n * fix gdal.DEMProcessingOptions(zeroForFlat=True) (#6775)\n * fix 'import osgeo.gdal_array' with python3 and SWIG 3.0.10 (#6801)\n * allow gdal.FileFromMemBuffer() to use buffer > 2GB (#6828)\n * accept unicode strings as field name argument in Feature (like SetField, GetField, etc...) and FeatureDefn methods\n\n# GDAL/OGR 2.1.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL/raster drivers:\n    - CALS: read/write driver for CALS Type I rasters\n    - DB2 driver: read/write support for DB2 database (Windows only)\n    - ISCE: read/write driver (#5991)\n    - MRF: read/write driver (#6342)\n    - SAFE: read driver for ESA SENTINEL-1 SAR products (#6054)\n    - SENTINEL2: read driver for ESA SENTINEL-2 L1B/LC1/L2A products\n    - WMTS: read driver for OGC WMTS services\n * New OGR/vector drivers:\n    - AmigoCloud: read/write support for AmigoCloud mapping platform\n    - DB2 driver: read/write support for DB2 database (Windows only)\n    - MongoDB: read/write driver\n    - netCDF: read/write driver\n    - VDV: read/write VDV-451/VDV-452 driver, with specialization for the\n           Austrian official open government street graph format\n * Significantly improved drivers:\n    - CSV: new options, editing capabilities of existing file\n    - ElasticSearch: read support and support writing any geometry type\n    - GeoJSON: editing capabilities of existing file, \"native data\" (RFC 60) support\n    - MBTiles: add raster write support. fixes in open support\n    - PDF: add PDFium library as a possible back-end.\n    - PLScenes: add support for V1 API\n    - VRT: on-the-fly pan-sharpening\n    - GTiff: multi-threaded compression for some compression methods\n * Port library: add /vsis3/, /vsis3_streaming/, /vsicrypt/ virtual file systems\n * RFC 26: Add hash-set band block cache implementation for very larger rasters (WMS, WMTS, ...)\n        http://trac.osgeo.org/gdal/wiki/rfc26_blockcache\n * RFC 48: Geographical networks support (GNM)\n        https://trac.osgeo.org/gdal/wiki/rfc48_geographical_networks_support\n * RFC 58: Add DeleteNoDataValue():\n        https://trac.osgeo.org/gdal/wiki/rfc58_removing_dataset_nodata_value\n * RFC 59.1: Make GDAL/OGR utilities available as library functions:\n        https://trac.osgeo.org/gdal/wiki/rfc59.1_utilities_as_a_library\n   For gdalinfo, gdal_translate, gdalwarp, ogr2ogr, gdaldem, nearblack, gdalgrid,\n   gdal_rasterize, gdalbuildvrt\n   Available in C, Python, Perl and Java bindings.\n * RFC 60: Improved round-tripping in OGR\n        https://trac.osgeo.org/gdal/wiki/rfc60_improved_roundtripping_in_ogr\n   Implemented in GeoJSON driver\n * RFC 61: Support for measured geometries.\n        https://trac.osgeo.org/gdal/wiki/rfc61_support_for_measured_geometries\n   Implemented in Shapefile, PostgreSQL/PostGIS, PGDump, MEM, SQLite, GeoPackage,\n   FileGDB, OpenFileGDB, CSV, VRT\n * Upgrade to EPSG database v8.8\n * General sanitization pass to clean-up code, fix a lot of compiler warnings,\n   as well as issues pointed by static code analyzers, such as Coverity Scan\n   (credits to Kurt Schwehr for tackling a large part of them) or CLang Static Analyzer.\n * Fixes in a number of drivers to be more robust against corrupted files (most found\n   with American Fuzzy Lop): RIK, INGR, Northwood, HF2, CEOS, GTiff, GXF, BMP,\n   NITF, HFA, VRT, FIT, CEOS2, NWT_GRD/NWT_GRC, MITAB, RPFTOC, DBF/Shape, XYZ, VFK, DXF,\n   NAS, GSAG, GS7BG, OpenFileGDB, RMF, AIGRID, OpenAIR, EHDR, ISO8211, FAST,\n   USGSDEM, DGN, SGI, OpenJPEG, PCRaster, BSB, ADRG, SRP, JPEG, Leveller, VICAR, PCIDSK, XPM\n   as well as in portability library (CPL), algorithms and raster core.\n * Driver removed:\n    - Google Maps Engine (GME)  (#6261)\n\n## New installed files\n * gdal_pansharpen.py\n * data/vdv452.xml\n * data/vdv452.xsd\n * data/netcdf_config.xsd\n * /path/where/bash-completion/scripts/are/installed/gdal-bash-completion.sh\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.TXT\n\n## GDAL/OGR 2.1.0 - General Changes\n\nBuild(Unix):\n * Allow plugin for HDF4, HDF5, GeoRaster, FileGDB, OCI and PG\n * Add a --with-gnm option to enable GNM\n * Add --enable-lto switch to turn on link time optimization (GCC >= 5)\n * Add --with-spatialite=dlopen --with-spatialite-soname=libspatialite.so[.X] syntax to allow linking against spatialite through dlopen() mechanism (#6386)\n * Add a lot of warning options when available in the compiler.\n * Change detection test of podofo to work with podofo 0.9.3\n * Fix gdalserver compilation with recent GNU libc (such as in Arch Linux) (#6073)\n * Add pkg-config support for libkml fork (#6077)\n * Update config.sub and config.guess to their latest upstream versions so as to be able to detect new architectures (android, ppcle64, etc..) (#6101)\n * Fix python package installation in custom prefixes (#4563)\n * configure: check that CXX is really a working compiler (#4436)\n * Build support for Kakadu 7.7\n * thinplatespline.cpp: avoid using optimized version of VizGeorefSpline2DBase_func4() with ICC versions that fail on it (#6350)\n * Add bash completion for GDAL/OGR utilities and scripts (#6381)\n * Add support for ODBC autodetection with mingw64 (#6000)\n * Remove macos 9 and older support (#6133).\n * Remove dist_docs, burnpath and pszUpdableINST_DATA in gcore/gdaldrivermanager.cpp as they are have not been used for a while (#6140).\n * Removed --without-ogr configure flag (#6117).  Always build with OGR.\n\nBuild(Windows):\n * Add support for Visual Studio 2015 (a.k.a MSVC_VER=1900 or VC 14)\n * Add KAKFLAGS to nmake.opt with KDU_{MAJOR,MINOR,PATCH}_VERSION define-s.\n * nmake.opt: make it less error prone to define SETARGV when paths include spaces (#6032)\n * nmake.opt: add CL.EXE compiler option /FC to display full path of source code file in diagnostics\n * Remove WinCE support (#6133)\n * nmake.opt: add /I flag to the INSTALL command so that xcopy will be smart enough to create a directory when copying files and avoid prompting for user input (https://github.com/OSGeo/gdal/pull/95)\n * Enable mssql spatial blugin build, use BCP as the default option for the sqlncli enabled builds\n * Add support to find MrSID 9.5 dll\n * Fix Windows build with recent MySQL versions and Visual Studio 2015 (#6457)\n\nBuild(all):\n * Compatibility with C++11 and C++14\n * Optional crypto++ dependency for /vsicrypt/ support\n * Optional mongocxx dependency for MongoDB support\n\nOther:\n * Disable copy constructor and assignment operators in classes OGRFieldDefn, OGRGeomFieldDefn, OGRFeature, GDALMultiDomainMetadata, GDALDefaultOverviews, GDALOpenInfoGDALDataset, GDALRasterBlock, GDALRasterBand and GDALDriver (#6100)\n\n## GDAL 2.1.0 - Overview of Changes\n\nPort:\n * Add /vsicrypt/ virtual file system for reading/creating/update encrypted files on the fly, with random access capabilities\n * Add /vsis3/ and /vsis3_streaming/ virtual file systems to read/write objects from AWS S3 buckets\n * /vsizip/: avoid returning the previous file list of an already opened .zip if it has changed afterwards (#6005)\n * /vsizip/: use CP437 on Windows when ICONV support is available (#6410)\n * /vsimem/: implement append mode (#6049)\n * /vsistdin/: fix caching of first 1MB / VRT driver: read XML content from /vsistdin/ in a streaming compatible way (#6061)\n * /vsistdout/: flush when closing the handle (#6149)\n * Add VSIReadDirEx() with a limit on the number of files before giving up and corresponding VSIFilesystemHandler::ReadDirEx() virtual function\n * cpl_vsil_cache: rework to be able to work on very large files on 32bit systems\n * Add CPLThreadLocaleC class to use thread-specific locale settings (when available)\n * VSIWin32Handle::Flush(): add VSI_FLUSH config option that can be set to TRUE to force FlushFileBuffers(). (hack related to #5556)\n * Fix VSIL append mode in Windows (#6065)\n * Make CPLCreateMutexEx() support CPL_MUTEX_REGULAR; and fix CPL_MUTEX_ADAPTIVE to avoid continuing in code path for creation of recursive mutex\n * Add CPLWorkerThreadPool API\n * Add CPLGetThreadLocalConfigOption()\n * Fix CPL_LSBINT16PTR() and CPL_LSBINT32PTR() to work with non-byte pointer (#6090)\n * CPLRecodeStub(): add special case for CP437 -> UTF-8 when input is only printable ASCII\n * CPLHTTPFetch(): add LOW_SPEED_TIME and LOW_SPEED_LIMIT options\n * CPLGetValueType(): improve heuristics to avoid detecting some WKB strings as real numbers (#6128)\n * Add CPL_SHA256* and CPL_HMAC_SHA256 functions\n * Make CPLVirtualMemFileMapNew() work on all systems having mmap(), and thus GeoTIFF GTIFF_VIRTUAL_MEM_IO optimization too\n * Add VSI_MALLOC_VERBOSE() and similar macros to output an error message in case of failed alloc\n * CPLParseXMLString(): limit depth of elements to 10000\n * Win32 file management: handle files whose total file path length is greater than 255 characters in Open() and Stat()\n * Make CPLFormFilename(absolute_path, \"..\", NULL) truncate when possible\n * Add VSIGetDiskFreeSpace()\n * Implement CPLIsInf() for Solaris 11\n * Add a CPL_FINAL macro that expands to C++11 final keyword when C++11 is enabled, and use it in a few places\n * Avoid CPLEscapeString (CPLES_URL) encoding some characters unnecessarily (#5526)\n * Add CPLTestBool(), CPLTestBoolean(), CPLFetchBool()\n * Fix CPLGetValueType() to recognize D1 as a string and not a real number (#6305)\n * CPLFormFilename(): use '/' directory separator on Windows on /vsicurl_streaming/ files (#6310)\n * Add hack enabled by -DDEBUG_BOOL to detect implicit int->bool conversions that dislike MSVC (#6325)\n * Add hack to '#define NULL nullptr' when NULL_AS_NULLPTR is defined. Must be used together with -std=c++11 -Wzero-as-null-pointer-constant with GCC to detect misuses of NULL/nullptr (#6327)\n * Add VSIError mechanism to store errors related to filesystem calls, and use it for /vsis3/. Add new CPLE_ error numbers. (https://github.com/OSGeo/gdal/pull/98)\n * Fix CPLsscanf() to be conformant regarding how space/tab/... separators are handled, so as to fix OGR GMT to be able to read coordinates separated by tabulations (#6453)\n\nCore:\n * Change default value of GDAL_CACHEMAX to 5% of usable physical RAM\n * Allow open options name to be prefixed by @ to be silently ignored when not existing in driver options (RFC 60)\n * Honour NBITS metadata item when doing RasterIO() with non-nearest resampling (#6024)\n * GDALClientServer: pass open options to INSTR_Open call\n * Improve performance of GDALCopyWords() float->byte/int16/uint16 by using SSE2\n * Decorate prototypes of RasterIO() related operations with CPL_WARN_UNUSED_RESULT\n * Avoid deadlock when writing 2 datasets in 2 threads (#6163)\n * Remove obsolete symbols __pure_virtual(), GDALCreateProjDef(), GDALReprojectToLongLat(), GDALReprojectFromLongLat() and GDALDestroyProjDef()\n * Remove obsolete non-template-based implementation of GDALCopyWords(). We don't support anymore such compilers\n * GDALJP2Box::ReadBoxData(): do not abort if memory allocation fails\n * Add GDALAdjustValueToDataType() in C API, and use it in GDALTranslate() and GDALWarp()\n * GDALDefaultOverviews::CreateMaskBand(): fix logic error related to writing per-band mask\n * Block cache: fix excessive memory consumption when dealing with datasets with different block sizes (#6226)\n * EXIFExtractMetadata(): fix potential 1-byte write buffer stack overflow\n * MDReader: do no attempt reading side-car files on /vsisubfile/ (#6241)\n * GDALCheckBandCount(): allow by default a maximum number of bands to 65536\n * GDALOpenInfo: add StealSiblingFiles() and AreSiblingFilesLoaded() methods\n * GDALOpenInfo::GetSiblingFiles(): give up after GDAL_READDIR_LIMIT_ON_OPEN (default=1000) files in the directory\n * GDALDefaultOverviews: add TransferSiblingFiles() method\n * GDALDriver::DefaultCreateCopy(): fix logic related to propagation of NBITS / PIXELTYPE metadata items as creation options\n * Reorder driver registration a bit so that formats with efficient identification are probed first\n * Add GDALIdentifyEnum (GDAL_IDENTIFY_UNKNOWN, GDAL_IDENTIFY_FALSE or GDAL_IDENTIFY_TRUE) for return values of Identify()\n * GDALLoadRPCFile(): load .rpc files from Ikonos products that have extra end-of-line character (#6341)\n * Export GDALRegenerateOverviewsMultiBand() symbol, but mostly for plugins (#6342)\n * Add GDAL_NO_AUTOLOAD to compile out the body of AutoLoadDriver (#6380)\n * Avoid ComputeStatistics(), GetHistogram() and ComputeRasterMinMax() to use only the first column of blocks in approximation mode for a raster whose shape of blocks is a square (#6378)\n * Add GDALGetDataTypeSizeBits() and GDALGetDataTypeSizeBytes().\n * GDALReadOziMapFile(): fix reading Ozi external files from virtual file systems (https://github.com/OSGeo/gdal/pull/114)\n * Add CPLSetCurrentErrorHandlerCatchDebug() to enable custom error handlers not to intercept debug messages\n\nAlgorithms:\n * RPC transformer: provide SSE2 accelerated transformer\n * RPC: fix off-by-half pixel computation of (pixel, line), and in bilinear and bicubic RPC DEM interpolation; fix off-by-one pixel registration for Pleiades RPC (#5993)\n * RPC: make RPCInverseTransformPoint() check convergence has been reached (#6162)\n * RPC DEM: optimize when DEM is in NAD83 or any other geodetic CS that transform as a no-op to WGS 84\n * RPC DEM: take into account vertical datum of the DEM when present to convert DEM elevations to ellipsoidal heights (#6084)\n * RPC DEM: do fallback cubic -> bilinear and bilinear -> near on DEM edges\n * RPC DEM: improve inverse transformer to validate error threshold and improve convergence (#6162, #6377)\n * RPC: fix issues with dateline (#6472)\n * TPS solver: discard duplicated GCP to avoid avoidable error, warning when 2 GCPs have same (pixel,line) but different (X,Y) or the reverse\n * Warper: rework multithreaded computations to use a thread pool rather than forking threads each time\n * Warper: avoid really excessive processing time for some warping with target areas completely off the source raster (especially when involving RPC) (#6182)\n * Warper: CreateKernelMask(): fix potential 32 bit integer overflow when using warp memory value > 2GB (#6448)\n * gdal_grid: add linear interpolation algorithm\n * gdal_grid: add invdistnn algorithm, variation on the existing inverse distance weighting algorithm with quadtree to search for points only in the neighborhood (#6038)\n * gdal_grid: fix crash in optimized mode with GCC 4.4 on 64bit (#5987)\n * gdal_grid: compile gdalgrid AVX optimization for Windows when supported by compiler\n * Add GDALTriangulationXXXX() API through libqhull\n * Sieve filter: fix crash on nodata polygons (#6096)\n * Sieve filter: improvement to walk through the biggest neighbour chain until we find a polygon larger than the threshold (#6296)\n * GDALFPolygonize(): factor implementation with integer case\n * GDALComputeMedianCutPCT(): fix to make it work with rasters with more than 2 billion pixels (#6146)\n * Overview: Make average and gauss methods aware of transparent color table entries (#6371)\n\nUtilities:\n * gdalinfo: workaround bug in proj <= 4.9.1 on datasets with a SRS with a vertical shift grid (#6083)\n * gdal_translate: detect more reliably if specified bands are not in default order\n * gdal_translate: fix -a_nodata with negative values on rasters that have PIXELTYPE=SIGNEDBYTE; fix preserving PIXELTYPE=SIGNEDBYTE with VRT\n * gdal_translate: fix random behavior when -scale is used without source bounds (#6455)\n * gdal_rasterize: do on-the-fly reprojection of input vector onto output raster\n * gdal_rasterize: rasterize: always create output with 1/2 cell buffer of input geometry envelope (#6058)\n * gdal_rasterize: add the -dialect option\n * gdal_rasterize: accept NaN as a valid value for -init / -burn (#6467)\n * gdalwarp: add -doo option to specify open options of (existing) output dataset\n * gdalwarp: if RPC_DEM warping option is specified, use exact transformer by default (#5993)\n * gdalwarp: make it honour nodata value of existing dataset (if -dstNoData isn't explicitly specified)\n * gdalwarp: do not propagate STATISTICS_ of second or following source datasets\n * gdalwarp: do not emit warning when using -cutline with a SRS and the source raster has RPC or GEOLOCATION\n * gdalwarp: check that the cutline is valid after transformation/reprojection\n * gdalwarp: better deal when dealing with a mix of RGB and RGBA datasets as input\n * gdalwarp: fix -srcnodata to not put garbage values as target dstnodata (#6315)\n * gdalwarp: densify cutline to avoid invalid geometry after reprojection to source raster, especially in the RPC case (#6375)\n * gdalserver: add a -nofork mode (Unix only for now), so that multiple clients can connect to the same dataset. Useful for safe 'concurrent' updates\n * add gdal_pansharpen.py script\n * gdal2tiles.py: fix error on a raster with less than 3 bands that resulted in a 'IndexError: list index out of range'\n * gdal2tiles.py: Change EPSG:3785 / EPSG:900913 into EPSG:3857 (#5622)\n * gdal2tiles.py: add Leaflet template (https://github.com/OSGeo/gdal/pull/71)\n * gdal2tiles.py: add -q switch for quiet mode\n * gdaldem: correctly deal with NaN as nodata value (#6066)\n * gdaldem color-relief: deal with the case of repeated entries with the same value and the input raster has pixels that match that value exactly (#6422)\n * gdaladdo: emit error message if passed an invalid dataset name (#6240)\n * gdaladdo: do not silence warnings when opening in update mode, if the open is successful\n * gdalbuildvrt: fix potential crash when using -b switch (#6095)\n * gdalbuildvrt: accept nan as value for -srcnodata and -vrtnodata\n * gdalbuildvrt: return non zero return code if the flush of the VRT to disk failed\n * gdal_merge.py: takes again into account -n flag (#6067)\n * gdalbuildvrt / gdal_translate / VRT: use floating point values for source and destination offsets and sizes (#6127)\n * gdalmove.py: fix to run with GDAL 2.0 gdal.InvGeoTransform() signature\n * gdal_calc.py: Add * from gdalnumeric to gdal_calc.py eval namespace again, to fix 2.0 regression that made for example 'log10(A)' to no longer work (https://github.com/OSGeo/gdal/pull/121)\n\nPython samples:\n * gdalpythonserver.py: update to protocol 3\n\nAAIGRID:\n * when writing with floating-point values, ensure at least one value has a decimal point to avoid issues with some readers (#6060)\n\nBMP driver:\n * BMP: avoid too big color table allocation in case of wrong iClrUsed value\n\nBLX driver:\n * converted to support VirtualIO\n\nECRG driver:\n * change subdataset definition to make sure that they only consist of frames of same scale (#6043)\n * fix base34 decoding and Windows filename handling (#6271)\n\nECW driver:\n * use wide char Open API on Windows when GDAL_FILENAME_IS_UTF8=YES (https://github.com/OSGeo/gdal/pull/70)\n * fix reading of ECW in /vsi file systems (with SDK >= 4) (#6482)\n\nGeoRaster driver:\n * fix deflate read error depending on endianness (#6252)\n\nGIF driver:\n * libgif: partial resync with giflib master (but keep ABI of 4.1.6)\n * fix crash when CreateCopy a source with one color in the color table\n\nGMT driver:\n * validate raster dimensions on opening, and acquire mutex in dataset destructor\n\nGPKG driver:\n * write support: fix various issues in update scenarios when interacting with the GDAL block cache that could result in lost/corrupted band data to be written in tiles (#6309)\n * write support: fix potential use of freed sqlite temporary DB handle when generating overviews with partial tiles (#6335)\n * write support: fix potential crash in scenarios when block cache is full (#6365)\n * write support: fix inversion of row/column in one of the SQL request involved in partial tiles management (#6339)\n * fix generation of files with 1-band paletted input dataset. Also improve the logic to retrieve color palette when forcing BAND_COUNT=1 on opening (#6450)\n\nGTiff driver:\n * add NUM_THREADS creation and open options to enable multi-threaded compression\n * fix GTiffDataset::IsBlockAvailable() wrong behavior when compiling against internal libtiff, when a BigTIFF file has a TileByteCounts with LONG/4-byte counts and not LONG8 (#6001)\n * Correctly take into account overridden linear units for a geotiff with a EPSG PCS code (#6210, #4954)\n * make VirtualMemIO() work with non native endianness\n * improve VirtualMemIO() performance in tiled Contig read to single band copy\n * improve single band tiled VirtualMemIO reading\n * improve DirectIO() to work on tiled uncompressed geotiff, for non-resampling and nearest resampling cases. Also improve performance of resampling cases on un-tiled files\n * fix DirectIO() mode with complex types and inverted endianness (#6198)\n * optimize writing of 12-bit values\n * implement lazy loading of .aux.xml and .tfw/.wld\n * Internal libtiff: update to CVS HEAD post libtiff 4.0.6\n * make SetColorInterpretation(GCI_AlphaBand) work on a 5 band or more GeoTIFF (#6102)\n * automatically set PHOTOMETRIC=RGB if manually assigning color interpretation Red,Green,Blue to band 1,2,3 before directory crystallization (#6272)\n * add GEOTIFF_KEYS_FLAVOR=ESRI_PE creation option to write EPSG:3857 in a ESRI compatible way (#5924)\n * call XTIFFInitialize() in LibgeotiffOneTimeInit() as the former isn't thread-safe, so better call it from the later which is thread-safe (#6163)\n * fix reading and writing angular units different from degree (namely arc-second, arc-minute, grad, gon and radian) (#6171)\n * do not use VirtualMemIO optimization on compressed /vsimem/ files (#6195)\n * correctly set GTRasterTypeGeoKey=RasterPixelIsPoint if AREA_OR_POINT=Point but there is no SRS set (#6225)\n * improve a bit error detection when writing\n * check free space before writing (only for big, non sparse, uncompressed)\n * do not read large 'one row' JBIG compressed files with the scanline API (#6264)\n * Fix SetMetadata() to properly clear existing PAM metadata (complement to #5807)\n * prevent potential out of bounds read/write to TIFFTAG_EXTRASAMPLES (#6282)\n * do not use first directory as potential mask, to avoid assertion in GTiffDataset::SetDirectory() (#6287)\n * reject files with strips/tiles/scanlines bigger than 2 GB to avoid 32 bit integer overflow.\n   Also in case of files with Contig PlanarConfiguration do not make reading one block for band 2 OK when reading for band 1 issued an error (#6288)\n * GTIFFWriteDirectory(): avoid memory leak of codec related memory (#2055)\n * Make ALPHA=NO in CreateCopy() cancel alpha color interpretation even if present in source raster\n * fix problem with implicit overviews of JPEG-compressed files (#6308)\n * fix compilation problem with internal libtiff if DEFER_STRILE_LOAD isn't defined (which is not the default configuration) (https://github.com/OSGeo/gdal/pull/90)\n * use more appropriate error message when 4GB threshold is reached with external overviews, and try to make doc of BIGTIFF=IF_NEEDED/IF_SAFER clearer (#6353)\n\nHDF4 driver:\n * Skip quotation mark when parsing HDF-EOS metadata.\n\nHDF5 driver:\n * add Komsat Mission ID to possible value for HDF5 SAR product (https://github.com/OSGeo/gdal/pull/103)\n\nHF2 driver:\n * fix reading side of the driver to work on architectures where char is unsigned, like PPC or ARM (#6082)\n\nHFA driver:\n * when reading projection, preserve EPSG code if AutoIdentifyEPSG() identified the SRS, even if a PE string is present (#6079)\n * keep TOWGS84 even when using ESRI PE string (#6158)\n * fix crashes on corrupted files (#6208, #6286)\n\nINGR driver:\n * check that RLE decoding produced the expected number of bytes and error out otherwise; test that 'random' line seeking actually works\n\nJPEGLS driver:\n * fix build error (#6430)\n\nJP2ECW driver:\n * honour psExtraArg->eResampleAlg when upsampling (#6022)\n\nJP2KAK driver:\n * honour psExtraArg->eResampleAlg when upsampling (#6022)\n * try rounded dimensions to decide if the data is being requested exactly at a sub-resolution\n * support v7.7 on Unix (additional changes potentially needed on Windows)\n\nJP2OpenJPEG driver:\n * Safer multi-threaded use\n\nJPEG driver:\n * add USE_INTERNAL_OVERVIEWS open option (default to TRUE as in recent versions, can be set to FALSE to hide internal overviews\n\nKMLSuperOverlay driver:\n * fix 2.0 regression with some RasterIO() requests involving resampling (#6311)\n * recognize datasets that have a intermediate <Folder> that forms a <Document><Folder><Region/><GroundOverlay/> structure (#6343)\n\nLCP driver:\n * fix wrong use of endianness macros to fix behavior on big-endian hots\n\nLeveller driver:\n * update to v9 read support (#5632,)\n\nMBTiles driver:\n * add raster write support\n * fix so that datasets whose lowest min zoom level is 16 or above are recognized\n * be robust to invalid 'bounds' at dataset opening (#6458)\n\nMEM driver:\n * avoid 32 bit overflows\n\nNetCDF driver:\n * add support for reading NC4 unsigned short attributes and variables (#6337) * read correctly nodata values in [128,255] range for (unsigned) Byte data type (#6175)\n * implement Get/SetUnitType() using the standard units attribute (https://github.com/OSGeo/gdal/pull/96)\n * optimize IReadBlock() and CheckData() handling of partial blocks in the x axis by re-using the GDAL block buffer instead of allocating a new temporary buffer for each block (#5950)\n * full read/write support for new NetCDF4 types NC_UBYTE, NC_USHORT, NC_UINT and NC_STRING for variables (except for NC_STRING) and attributes (https://github.com/OSGeo/gdal/pull/99)\n * add support for the geostationary projection (#6030)\n * fix one byte heap write overflow in NCDFTokenizeArray() (#6231)\n * fix potential buffer overflows with uses of nc_inq_varname(), nc_inq_attname() and nc_get_att_text() (#6227)\n * validate that gridmapping:GeoTransform has 6 values (#6244)\n * fix wrong use of deallocator when writing a GEOLOCATION array, and other issues\n * limit number of bands reported to 32768 by default\n * validate raster dimensions\n * validate content of NC_GLOBAL#GDAL variable (#6245)\n\nNGSGEOID driver:\n * make it work on > 2GB file\n\nNITF driver:\n * data/nitf_spec.xml: Add CSCCGA, MENSRB, SENSRB, STREOB, ENGRDA, EXPLTB and PATCHB TREs (https://github.com/OSGeo/gdal/pull/81, #6285, https://github.com/OSGeo/gdal/pull/86)\n * fix parser to properly deal with variable length items not in first nesting level\n\nNorthwoord driver:\n * fix computation of intermediate color table values on non-Intel platforms (#6091)\n\nNTv2 driver:\n * support reading/writing/appending to files with big-endian order (cf https://github.com/OSGeo/proj.4/issues/345)\n\nOpenJPEG driver:\n * do not expose block dimensions larger than dataset dimensions to avoid wasting memory (#6233)\n\nPCIDSK driver:\n * Remove the old driver (#6172)\n\nPDF driver:\n * add PDFium library as a possible back-end. Initial support contributed by Klokan Technologies GmbH  (http://www.maptiler.com/)\n * workaround a bug of PoDoFo 0.9.0 by avoiding loading of vector content in raster-only mode (doesn't prevent the crash if reading the vector layers) (#6069)\n * make OGC BP registration work with media box where bottom_y is negative and top_y = 0 (in non rotated case)\n * make OGC BP registration work with media box where min_x != 0 (in non-rotated case)\n * correctly take into account non-meter linear units with OGC BP encoding, and add support for US FOOT (#6292)\n\nPDS driver:\n * change default values of PDS_SampleProjOffset_Shift and PDS_LineProjOffset_Shift to 0.5 (#5941)\n * fix nodata value for UInt16 to be 0 (#6064)\n * accept 'ODL_VERSION_ID = ODL3' in header (#6279)\n\nPGChip driver:\n * driver removed from sources\n\nPLScenes driver:\n * PLScenes V0: avoid opening raster to generate dummy .aux.xml\n\nPNG driver:\n * Support writing 1, 2 or 4 bit single band\n * Add NBITS creation option\n * fix XML of creation option list\n * Update internal libpng to 1.2.56\n\nPostgisRaster driver:\n * avoid Identify() to recognize OGR PostgreSQL connection strings with schemas option and cause loud 'QuietDelete' (#6034)\n\nRaw drivers:\n * better support for direct read of more than 2GB in single gulp (untested though)\n\nRIK driver:\n * fix Identify() method to recognize again non-RIK3 RIK datasets (#6078)\n\nRMF driver:\n * implement GetNoDataValue()\n * add read/write access to new RMF format for files larger than 4 Gb (version=0x201) (https://github.com/OSGeo/gdal/pull/11)\n\nROIPAC driver:\n * Support offset and scale band (#6189)\n\nVICAR driver:\n * change PDS_SampleProjOffset_Shift and PDS_LineProjOffset_Shift default values to 0.5 (#5941)\n * fix loss of precision in scale and offset\n\nVRT driver:\n * expose implicit 'virtual' overviews for VRT whose bands are made of a single SimpleSource/ComplexSource\n * gdalvrt.xsd: Add capitalized versions of true and false (#6014)\n * GetSingleSimpleSource(): check there's a single source (#6025)\n * honour VRTRasterBand NBITS metadata with SimpleSource and ComplexSource\n * properly take into account nodata value declared at VRT band level when doing resampling with non-nearest\n * honour relativeToVRT when using AddBand() to add a VRTRawRasterBand (https://github.com/OSGeo/gdal/pull/67)\n * VRT warp: fix crash with implicit overviews and destination alpha band (#6081)\n * make GetDefaultHistogram() on a sourced raster band save the result in the VRT (#6088)\n * serialize NODATA and NoDataValue items with %.16g, e.g. so as to be able to hold large int32 nodata values (#6151)\n * VRTSourcedRasterBand: make ComputeRasterMinMax() and ComputeStatistics() forward bApproxOK to overview band (useful for implicit overviews)\n * make CreateCopy() preserve NBITS metadata item\n * avoid loading sibling file list if not available\n * VRT raw: don't truncate last figure of ImageOffset if there are left space padding (#6290)\n * VRTWarpedDataset::SetMetadataItem(): fix crash when calling with name=SrcOvrLevel and value=NULL (#6397)\n * Warped VRT: fix deadlock in situation where warped VRT datasets are read in multiple threads and the block cache reaches saturation. Also add a GDAL_ENABLE_READ_WRITE_MUTEX config option that can be set to NO to disable the read/write mutex mechanism in cases where it would deadlock (#6400)\n\nWMS driver:\n * add a IIP (Internet Imaging Protocol) minidriver\n * limit number of zoom levels for ArcGIS MapServer JSon (#6186)\n * determine a resolution that will not result in a number that is larger than the maximum size of an integer.  Any value that exceeds the maximum size of an integer will raise an invalid dataset dimensions error. (https://github.com/OSGeo/gdal/pull/89)\n\nXYZ driver:\n * be more robust to not exactly equal X and Y spacing (#6461)\n\n## OGR 2.1.0 - Overview of Changes\n\nCore:\n * Add OGREditableLayer class to add editing capabilities to drivers with none or limited editing capabilities\n * OGRGeometry: add DelaunayTriangulation() method (GEOS >= 3.4)\n * OGRGeometry and derived classes: implement copy constructor and assignment operator (#5990)\n * OGRGeometry: Fix result of Equals on POINT EMPTY with POINT(0 0)\n * OGRFeature SetField(): more type conversions allowed, particularly with array types\n * OGRFeature::SetGeometry()/SetGeometryDirectly(): make it work when passed geometry is the currently installed geometry (#6312)\n * OGR SQL: do not silently skip NULL values in the first records when evaluating a SELECT DISTINCT (#6020)\n * OGR SQL: correctly sort NULL values in first positions (#6155)\n * OGR SQL: fix CAST(x AS bigint) to return an evaluated int64 node, and not int32 (#6479)\n * OGR SQL: handle 'fid' as Integer64 in where clause, and allow CAST(fid AS bigint) in selected columns (#6484)\n * Add OGRUpdateFieldType()\n * Decorate a few functions/methods of the OGR layer API with CPL_WARN_UNUSED_RESULT\n * WKT export: use 15 significant figures, instead of 15 figures after decimal point (#6145)\n * WKT export: do not append .0 after non-finite values (#6319)\n * Fix typo in definition of name of OGR_FD_ReorderFieldDefns (final s was missing)\n * OGRLayer::SetIgnoredFields(): properly reset state of non first geometry fields (#6283)\n * Make OGRLayer::SetSpatialFilter(GetSpatialFilter()) work with non empty spatial filter (#6284)\n * OGRLayerDecorator: add missing CreateGeomField()\n * OGRLayer::Erase(): do not discard input geometries that have no intersection with method layer (#6322)\n * OGRLayer::Erase(): Speedup = ~70%\n * Add OGRPreparedGeometryContains()\n * Use prepared geometry intersects as pretest in layer Intersection, Union, and Identity methods if requested.\n   Use prepared geometry containment as pretest in layer Intersection method if requested.\n * Bail out from layer algebra methods if GEOS calls fail and not SKIP_FAILURES.\n * OGR_G_SetPoints(): error out if padfX or padfY == NULL, do not change coordinate dimension to 3D when pabyZ == NULL, fix optimization on linestring to call setPoints() only if the strides are the ones of a double, not 0 as incorrectly done before (#6344)\n * OGRParseDate(): more strict validation to reject invalid dates (#6452)\n\nOGRSpatialReference:\n * Upgrade to EPSG database v8.8\n * Add support for SCH (Spherical Cross-track Height) projection\n * Optimize reprojection typically between WGS84 based SRS and WebMercator\n * Correctly transform Mercator_2SP and _1SP to ESRI Mercator, and back from ESRI Mercator to Mercator_2SP (#4861)\n * No longer enforce C locale if running against latest proj that is locale safe (4.9.2 or later)\n * EPSGGetPCSInfo(): use pcs.override.csv in priority over pcs.csv to read projection name, UOM, UOMAngle, GeogCS, etc... (#6026)\n * morphToESRI(): use GCS_WGS_1972 as GCS name for EPSG:4322 (#6027)\n * morphToESRI(): use Mercator_Auxiliary_Sphere projection for EPSG:3857. morphFromESRI(): map Mercator_Auxiliary_Sphere to EPSG:3857 (#5924)\n * Align hard-coded WKT of well known GCS definitions of WGS84, WGS72, NAD27 and NAD83 with the WKT of their EPSG def (#6080)\n * morphFromESRI(): special case with PROJCS name 'WGS_84_Pseudo_Mercator' (#6134)\n * OSR C API: fix declarations of OSRSetAxes() and OSRSetWagner(), and add missing OSRSetHOMAC(), OSRSetMercator2SP() and OSRSetTPED() (#6183)\n * Recognize EPSG 9835 method (Lambert Cylindrical Equal Area (Ellipsoidal)), needed for EPSG:6933 PCS for example\n * importFromProj4/exportToProj4(): rework linear unit conversion between WKT name/values and proj4 unit name, and extend its scope in WKT to proj4 conversions\n * OSR ESRI .prj: add support for reading custom ellipsoid in Parameters line\n * on import of +proj=geos, if +sweep=x is used then store it as a proj4 extension node (#6030)\n\nUtilities:\n * ogrinfo / ogr2ogr: implement @filename syntax for -sql and -where\n * ogr2ogr: prevent the -gt setting from overriding transaction group size of 1 set by skipfailures earlier (#2409)\n * ogr2ogr: warn if -zfield field does not exist in source layer\n * ogr2ogr -skip: rollback dataset transaction in case of failure (#6328)\n * ogr2ogr: fix -append with a source dataset with a mix of existing and non existing layers in the target datasource (#6345)\n * ogr2ogr: imply quiet mode if /vsistdout/ is used as destination filename\n * ogr2ogr: make -dim and -nlt support measure geometry types\n\nCartoDB:\n * fix GetNextFeature() on a newly create table (#6109)\n * defer 'CartoDBfycation' at layer closing\n * optimize feature insertion with multiple rows INSERT\n\nCSV driver:\n * add editing capabilities of existing files\n * add X_POSSIBLE_NAMES, Y_POSSIBLE_NAMES, Z_POSSIBLE_NAMES, GEOM_POSSIBLE_NAMES and KEEP_GEOM_COLUMNS open options\n * add HEADERS open option to force OGR to handle numeric column names. (PR #63)\n * add EMPTY_STRING_AS_NULL=YES/NO open option\n * implement compatibility enhancements for GeoCSV specification (#5989)\n * fix detection of TAB delimiter in allCountries.csv when the first line has a comma (#6086)\n * fix issues with leading single quote, and missing first line after ResetReading(), when parsing allCountries.txt (#6087)\n * speed-up GetFeatureCount() on allCountries.txt\n * on CreateDataSource() with a .csv name, do not try to open other existing .csv files in the directory\n * make CreateGeomField() returns OGRERR_NONE in case of success instead of OGRERR_FAILURE (#6280)\n * avoid adding trailing comma in header line when writing 'WKT,a_single_field'\n\nDGN driver:\n * add partial 3D transformation support for cell headers\n\nDXF driver:\n * detect files without .dxf extension (#5994)\n * fix handling of ELLIPSE with Z extrusion axis = -1 (#5705)\n * take into account full definition of spline entity (degree, control points, weights and knots) when stroking splines (#6436)\n * better handling of various object coordinate systems found in dxf files for point, line, polyline, spline and ellipse entities. Add anchor position to text styles. Remove polygon/polyface mesh parsing from polyline entity (#6459)\n\nElasticSearch driver:\n * use get /_stats instead of /_status for ElasticSearch 2.0 compatibility (#6346)\n\nFileGDB driver:\n * make CreateFeature() honour user set FID, and implement more fine grained transaction for Linux/Unix\n * give a hint of using FileGDB SDK 1.4 is FileGDB compression is used\n\nGeoJSON driver:\n * Add editing capabilities of existing files\n * Add ARRAY_AS_STRING=YES open option\n * Use '%.17g' formatting by default for floating-point numbers and add SIGNIFICANT_FIGURES layer creation option (#6291)\n * add a json_ex_get_object_by_path() function\n * fix crash on null / non-json object features (#6166)\n * serialize string values that are valid JSon dictionary or array as it (ie do not quote them)\n * make sure there's enough space to write the FeatureCollection bbox (#6262). Also avoid duplicating FeatureCollection bbox if source has one (trunk only)\n * Export POINT EMPTY as having a null geometry, instead as of being POINT(0 0) (#6349)\n * Do not 'promote' a null field to OFTString type if it had another type before (#6351)\n\nGME driver:\n * Driver removed.  Maps Engine being shut down at the end of January 2016.\n\nGML driver:\n * VFR: add new attribute DatumVzniku (v1.6)\n * VFR: fix ST_UVOH type handling\n * VFR: fix ZpusobyOchrany attributes (data types and names)\n * VFR: fix CisloDomovni attributes (Integer->IntegerList)\n * VFR: fix TEA attributes of StavebniObjekty\n * add NAMESPACE_DECL=YES option to OGR_G_ExportToGMLEx() to add xmlns:gml=http://www.opengis.net/gml or http://www.opengis.net/gml/3.2 declaration; Also accept GML2 or GML32 as valid valiues for FORMAT option (#6214)\n * serialize in .gfs file the name of the geometry element when it is 'geometry' since this is a particular case (#6247)\n * fix logic error in BuildJointClassFromScannedSchema() (#6302)\n\nGPKG driver:\n * make it accept files with non standard extension if they still have the correct application_id (#6396); also accept the .gpkx extension that may be used for extended geopackages\n * emit warning when generating a database without .gpkg/.gpkx extension (#6396)\n * as GPKG 1.1 uses a different application_id, emit a more specific warning if the application id starts with GPxx (but is not GP10). Add GPKG_WARN_UNRECOGNIZED_APPLICATION_ID config option to avoid the warning\n * correct scope of gpkg_geom_XXXXX extensions to be read-write, and allow reading geometry types CURVE or SURFACE\n * avoid trying to insert a gpkg_geom_XXXX extension if already done (#6402)\n * writer: implement strategy to flush partial_tiles temporary database when it becomes too big (#6462)\n * writer: when writing to GoogleMapsCompatible tiling scheme, better deal with source rasters in EPSG:4326 with latitude = +/-90 (#6463)\n * fix generation of files with 1-band paletted input dataset. Also improve the logic to retrieve color palette when forcing BAND_COUNT=1 on opening (#6450)\n\nGPX driver:\n * fix crash when parsing a 'time' extension element at route/track level (2.0 regression, #6237)\n\nILI driver:\n * ILI1: Support for Surface polygon rings spread over multiple geometry records\n * ILI1: add string TID support (https://github.com/OSGeo/gdal/pull/91)\n * Fix crash with models using types derived from INTERLIS\n * Fix memory leaks (#6178)\n\nJML driver:\n * remove arbitrary limitation preventing from reading geometries with <gml:coordinates> larger than 10 MB (#6338)\n\nKML driver:\n * fix crash on KML files without content but with nested folders (#6486)\n\nLIBKML driver:\n * for documents without folder, use document name when available as name of layer (#6409)\n\nMemory driver:\n * add support for sparse feature IDs\n * add ADVERTIZE_UTF8 layer creation option\n\nMITAB driver:\n * Add support for block sizes other than 512 bytes in .map files, for MapInfo 15.2 compatibility (#6298)\n * write correct datum id for EPSG:3857\n * read MID files with TAB delimiter and empty first field (#5405)\n * use projection code 29 when exporting non-Polar Lambert Azimuthal Equal Area (#5220)\n * fix crashes when parsing invalid MIF geometries (#6273)\n\nMSSQLSpatial driver:\n * Implement MSSQL bulk insert (#4792)\n * do not treat a primary key that is not of integer type as the FID (#6235)\n\nNTF driver:\n * fix potential buffer overflows when reading too short lines (#6277)\n\nODBC driver:\n * remove limitations to 500 columns\n\nODS driver:\n * fix loss of precision in formula computation\n\nOpenFileGDB driver:\n * do not emit warning if SDC/CDF table detected and that FileGDB driver is present\n * fix min/max on columns without indices (#6150)\n * build correct geometry for a multi-part wkbMultiLineStringZ (#6332)\n * add support for reading SHPT_GENERALPOINT (#6478)\n\nOSM driver:\n * correct fields ids for the (non frequently used) Node message\n * do not override 'our' osm_id (the node, way or relation id) with a tag named 'osm_id' (#6347)\n * properly deal with polygons in other_relations geometrycollection (#6475)\n\nPG driver:\n * Add PRELUDE_STATEMENTS and CLOSING_STATEMENTS open option to be for example able to specify options, like statement_timeout, with pg_bouncer\n * Fix 2.0 regression when overwriting several existing PostGIS layers with ogr2ogr (#6018)\n * Update PG, PGDump and CartoDB drivers to correctly export POINT EMPTY for PostGIS 2.2\n * avoid resetting error potentially emitted by ExecuteSQL() (#6194)\n * sanitize management of quoting for FID column at layer creation\n * fix to get SRID on result layer with PostGIS 2.2\n * in copy mode (the default on layer creation), do not truncate the concatenated string list to the field width (#6356)\n * make such that GEOMETRY_NAME layer creation option is honoured in ogr2ogr when the source geometry field has a not-null constraint (#6366)\n * read and set DESCRIPTION metadata item from/into pg_description system table; add DESCRIPTION layer creation option\n * support int2[] and numeric[] types, better map float4[] type\n * remove code that was intended to handled binary cursors as it cannot be triggered\n * fix append of several layers in PG_USE_COPY mode and within transaction (ogr2ogr -append use case) (#6411)\n\nPGDump driver:\n * fix issue with case of ogc_fid field in case the FID  layer creation option is not set by user or by ogr2ogr (related to #6232)\n * in copy mode (the default on layer creation), do not truncate the concatenated string list to the field width (#6356)\n * make such that GEOMETRY_NAME layer creation option is honoured in ogr2ogr when the source geometry field has a not-null constraint (#6366)\n * set DESCRIPTION metadata item from/into pg_description system table; add DESCRIPTION layer creation option\n\nShapefile driver:\n * accept opening standalone .dbf files whose header length is not a multiple of 32 bytes (#6035)\n * fix REPACK crash on shapefile without .dbf (#6274)\n * add capability to restore/build a missing .shx file when defining SHAPE_RESTORE_SHX to TRUE (#5035)\n * avoid CreateLayer() to error out when passed wkbUnknown | wkb25D (#6473)\n\nSQLite/Spatialite driver:\n * support file:xxx URI syntax (derived from patch by joker99, #6150)\n * fix heuristics in OGRSQLiteSelectLayer::GetExtent() to not be used when there's a sub SELECT (#6062)\n * fix crash on GetLayerByName('non_existing_table(geom_column)') (#6103)\n * fix OGRSQLiteSelectLayerCommonBehaviour::GetBaseLayer() to no longer 'eat' consecutive characters in layer name (#6107)\n * Spatialite: turn debug messages warning about update not being supported because of missing or too old spatialite version as errors, and return NULL to the caller (#6199)\n * fix memleak in OGRSQLiteTableLayer destructor when updating geometry_columns_time\n * VFS: increase mxPathname to 2048 by default, and provide OGR_SQLITE_VFS_MAXPATHNAME config option to be able to configure that higher if that would be needed. Useful when dealing with very long names like /vsicurl/.... with AWS S3 security tokens\n * VFS: do not probe -wal files on /vsicurl/\n\nSXF driver:\n * fix wrong use of endianness macros to fix behavior on big-endian hots\n * add recoding from CP1251 for TEXT attribute that is now decoded\n * fix various issues (#6357)\n\nVRT driver:\n * implement CloseDependentDatasets()\n * fix editing with 'direct' geometry mode which could cause attribute column to be empty (#6289)\n * fix crash with a OGRVRTWarpedLayer using a source layer that would have non geometry column (unlikely to happen currently as this would require explicit disabling it, but more likey with following commit that createe VRT non-spatial layer implicitly when the source is non-spatial, linked to #6336)\n * avoid creating an implicit wkbUnknown geometry field when the source has no geometry column and there's no XML elements related to geometry fields (#6336)\n\nXLSX driver:\n * fix reading sheets with more than > 26 columns and 'holes' (#6363)\n\nXPlane driver:\n * extend ICAO identifiers to 5 digits (#6003)\n\n## SWIG Language Bindings\n\nAll bindings:\n * add a options parameter to gdal.ReprojectImage() to pass warp options\n * Change ReadRaster and WriteRaster to use GIntBig and the *IOEx-methods\n * prevent NULL file pointer from being passed to VSIF*L functions\n * make gdal.Rename() accept Unicode strings\n * add SpatialReference.GetAxisName() and SpatialReference.GetAxisOrientation() (#6441)\n * add SpatialReference.GetAngularUnitsName() (#6445)\n\nJava bindings:\n * Fix typemap for input parameter of type GIntBig (fixes GetFeature(long), DeleteFeature(long), etc...) (#6464)\n * Bump minimal java version to 1.5 in case SWIG generates anotations (#6433, patch by Bas Couwenberg)\n * GNUmakefile: add -f in rm commands\n * GNUmakefile: add support for all hardening buildflags\n\nPerl bindings:\n * Fix #6050: string formatting in croak.\n * Perl Makefile.PL: add support for all hardening buildflags (#5998)\n * use strict and warnings in overridden constructors.\n * add $VERSION to ogr_perl.i (OGR.pm), which is required by pause.perl.org.\n * Add some basic module info for CPAN.\n * Bugfix for Geo::OGR::Feature->new().\n * Add many utility level algorithms as methods to various classes.\n * New class for XML stuff\n * New Makefile.PL, which can download and build GDAL. This allows automatic testing of the CPAN module.\n * Wrap VSIStdoutSetRedirection and allow creating datasets via an object, which can write and close.\n * Geo::OGR::Driver and Geo::OGR::DataSource are now Perl wrappers for respective GDAL classes.\n * Add to the error stack also errors from the bindings\n * Fix sending utf8 from Perl to GDAL. Should also remove some \"uninitialized value\" warnings.\n * ReadTile and WriteTile methods for Dataset, ReadTile accepts now tile size and scaling algorithm.\n * Improved Parent - Child management.\n * Improved support for 64bit ints.\n * Measures support in Geometry class.\n * Many new tests\n\nPython bindings:\n * make Feature.ExportToJson() output boolean value for a boolean field\n * support floating point coordinates for the source windows of Band.ReadRaster() and Band.ReadAsArray()\n * fix build with SWIG 3.0.6 (#6045)\n * make gdal.OpenEx() throw a Python exception in case of failed open when exceptions are enables with gdal.UseExceptions() (#6075)\n * Disable opening a NumPy dataset with a filename returned by gdal_array.GetArrayFilename(() unless GDAL_ARRAY_OPEN_BY_FILENAME is set to TRUE\n * disable the warning about using deprecated wkb25DBit constant as it uses a trick that prevents the bindings from being used by py2exe / pyinstaller (#6364)\n\n# GDAL/OGR 2.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL drivers:\n    - BPG: read-only driver for Better Portable Graphics format (experimental, no build support)\n    - GPKG: read/write/update capabilities in the unified raster/vector driver\n    - KEA: read/write driver for KEA format\n    - PLMosaic: read-only driver for Planet Labs Mosaics API\n    - ROI_PAC: read/write driver for image formats of JPL's ROI_PAC project (#5776)\n    - VICAR: read-only driver for VICAR format\n * New OGR drivers:\n    - Cloudant: read/write driver for Cloudant service\n    - CSW: read-only driver for OGC CSW (Catalog Service for the Web) protocol\n    - JML: read/write driver for OpenJUMP .jml format\n    - PLScenes: read-only driver for Planet Labs Scenes API\n    - Selaphin: read/write driver for the Selaphin/Seraphin format (#5442)\n * Significantly improved drivers: CSV, GPKG, GTiff, JP2OpenJPEG, MapInfo file, PG, SQLite\n * RFC 31: OGR 64bit Integer Fields and FIDs (trac.osgeo.org/gdal/wiki/rfc31_ogr_64)\n   In OGR core, OGR SQL, Shapefile, PG, PGDump, GeoJSON, CSV, GPKG, SQLite, MySQL,\n   OCI, MEM, VRT, JML, GML, WFS, CartoDB, XLSX, ODS, MSSQLSpatial, OSM, LIBKML, MITAB\n * RFC 46: GDAL/OGR unification ( http://trac.osgeo.org/gdal/wiki/rfc46_gdal_ogr_unification)\n     - GDAL and OGR PDF drivers are unified into a single one\n     - GDAL and OGR PCIDSK drivers are unified into a single one\n * RFC 49: Add support for curve geometries (http://trac.osgeo.org/gdal/wiki/rfc49_curve_geometries)\n   In OGR core, and GML, NAS, PostgreSQL, PGDUMP, GPKG, SQLite, VFK, VRT, Interlis drivers\n * RFC 50: Add support for OGR field subtypes (http://trac.osgeo.org/gdal/wiki/rfc50_ogr_field_subtype)\n   In OGR core, OGR SQL, swig bindings, CSV, FileGDB, GeoJSON, GML, GPKG, OpenFileGDB, PG, PGDump, SQLite, VRT\n * RFC 51: RasterIO() improvements : resampling and progress callback (http://trac.osgeo.org/gdal/wiki/rfc51_rasterio_resampling_progress)\n * RFC 52: Stricter SQL quoting (http://trac.osgeo.org/gdal/wiki/rfc52_strict_sql_quoting)\n * RFC 53: OGR not-null constraints and default values (http://trac.osgeo.org/gdal/wiki/rfc53_ogr_notnull_default)\n   In OGR core, OGR SQL, PG, PGDump, CartoDB, GPKG, SQLite, MySQL, OCI, VRT, GML, WFS, FileGDB, OpenFileGDB and MSSQLSpatial\n * RFC 54: Dataset transactions (https://trac.osgeo.org/gdal/wiki/rfc54_dataset_transactions)\n   In PG, GPKG, SQLite, FileGDB and MSSQLSpatial\n * RFC 55: refined SetFeature() and DeleteFeature() semantics.\n   In GPKG, Shape, MySQL, OCI, SQLite, FileGDB, PG, CartoDB, MITAB and MSSQL\n * RFC 56: OFTTime/OFTDateTime millisecond accuracy ( https://trac.osgeo.org/gdal/wiki/rfc56_millisecond_precision )\n * RFC 57: 64bit histogram bucket count ( https://trac.osgeo.org/gdal/wiki/rfc57_histogram_64bit_count )\n * Upgrade to EPSG v8.5 database\n * Fix locale related issues when formatting or reading floating point numbers (#5731)\n\n## New installed files\n * data/gdalvrt.xsd: XML schema of the GDAL VRT format\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.TXT\n\n## GDAL/OGR 2.0 - General Changes\n\nBuild(Unix):\n * Fix for cpl_recode_iconv.cpp compilation error on freebsd 10 (#5452)\n * Fix pthread detection for Android\n * Fix in Armadillo detection test (#5455)\n * Fix detection of OCI by changing linking order to please modern GCC (#5550)\n * Fix test to accept MariaDB 10.X as valid MySQL (#5722)\n * Make sure $(GDAL_INCLUDE) is first to avoid being confused by GDAL headers of a previous version elsewhere in the include path (#5664)\n * Always use stat rather than stat64 for Mac OSX in AC_UNIX_STDIO_64. (#5780, #5414).\n * Add support for ECW SDK 5.1 (#5390)\n * Do not enable Python bindings if PYTHON env variable is set without --with-python being explicitly specified (#5956)\n\nBuild(Windows):\n * PDF: fix compilation issue with Visual Studio 2012 (#5744)\n * PDF: Add support to compile the pdf driver as plugin (#5813)\n * Add support for MrSID 9.1 SDK (#5814)\n * when building netCDF, HDF4, HDF5 as plugins, call registration of 'sub-drivers' GMT, HDF4Image and HDF5Image (#5802)\n\nBuild(all):\n * Ruby bindings: disable autoconf and makefile support (#5880)\n * Fix compilation errors with json-c 0.12 (#5449)\n * Fix compilation error in alg/gdalgrid.cpp when AVX is available, but not SSE (#5566)\n\n## GDAL 2.0 - Overview of Changes\n\nPort:\n * Introduce a more generic lock API (recursive mutex, adaptive mutex, spinlock)\n * Add types for CPLMutex, CPLCond and CPLJoinableThread (only enforced in -DDEBUG mode)\n * Add CPLGetPhysicalRAM() and CPLGetUsablePhysicalRAM()\n * CPLSpawn() on Windows: quote arguments with spaces in them (#5469)\n * /vsigzip/: avoid infinite loop when reading broken .gml.gz file (#5486)\n * /vsizip/ : fix bug that caused premature end of file condition with some read patterns (#5530)\n * /vsizip/ on >4GB zips: accept .zip declare 0 disks (#5615)\n * /vsitar/: remove useless validation test that prevents from opening valid .tar files (#5864)\n * /vsistdout/: add VSIStdoutSetRedirection() for compatibility with MapServer FCGI (https://github.com/mapserver/mapserver/pull/4858)\n * /vsimem/: update st_mtime and return it with Stat()\n * /vsimem/: in update mode, when seeking after end of file, only extend it if a write is done\n * /vsimem/: Make Rename() on a directory also rename filenames under that directory (#5934)\n * /vsicurl/: manage redirection from public URLs to redirected AWS S3 signed urls, with management of the expiration. Enabled by default. Can be disabled if CPL_VSIL_CURL_USE_S3_REDIRECT=NO (#6439)\n * /vsicurl/: avoid reading after end-of-file and fix failure when reading more than 16MB in a single time (#5786)\n * /vsicurl/: by default do not use HEAD request when detecting a AWS S3 signed URL\n * Allow CPL_VSIL_CURL_ALLOWED_EXTENSIONS to be set to special value {noext}\n * VSIWin32Handle::Flush(): no-op implementation is sufficient to offer same guarantee as POSIX fflush() (#5556)\n * Unix VSIL: reset eof in all cases in Seek()\n * Windows plugins: complementary fix to #5211 to avoid error dialog box when there are dependency problems (#5525)\n * Fix VSIReadDirRecursive() recursing on the parent or current directory (#5535)\n * cpl_error: obfuscate password\n * HTTP: set CURLOPT_NOSIGNAL if available (#5568)\n * Add COOKIE option to CPLHTTPFetch() (#5824)\n * CPLHTTPFetch(): add retry logic in case of 502, 503 and 504 errors with the GDAL_HTTP_MAX_RETRY (default: 0)and GDAL_HTTP_RETRY_DELAY (default: 30 s) config options (#5920)\n * Fix stack corruption upon thread termination with CPLSetThreadLocalConfigOption on Windows 32 bit (#5590)\n * cpl_csv: Stop probing for csv/horiz_cs.csv. (#5698)\n * vsipreload: implement clearerr() and readdir64() (#5742)\n * CPLsetlocale(): return a string that is thread-locale storage to avoid potential race in CPLLocaleC::CPLLocaleC() (#5747)\n * CPLHexToBinary(): faster implementation (#5812)\n * CPLAcquireMutex(): improve performance on Windows (#5986)\n\nCore:\n * Add imagery (satellite or aerial) metadata support (Alos, DigitalGlobe, Eros, GeoEye, OrbView, Landsat, Pleiades, Resurs-DK1, Spot/Formosat).\n * Reduce lock contention on the global cache mutex and make it possible to use spin lock instead with GDAL_RB_LOCK_TYPE=SPIN\n * Block cache: make block cache manager safe with respect to writing dirty blocks (#5983)\n * EXIF reader: fix memleak in error code path\n * EXIF reader: add missing validation for some data types (#3078)\n * Fix crash in GDALPamRasterBand::SerializeToXML() when saving an empty RAT (#5451)\n * ComputeStatistics(): use Welford algorithm to avoid numerical precision issues when computing standard deviation (#5483)\n * Fix crashing issue with TLS finalization on Unix (#5509)\n * GDALJP2Metadata::CreateGMLJP2(): use EPSGTreatsAsLatLong() and EPSGTreatsAsNorthingEasting() to determine if axis swapping is needed (#2131)\n * GDALJP2AbstractDataset: implement GetFileList() to report .wld/.j2w if used\n * GMLJP2: be robust when parsing GMLJP2 content that has nul character instead of \\n (#5760)\n * GMLJP2: add missing rangeParameters element to validate against GMLJP2 schema (#5707)\n * GMLJP2: write non null bounding box at root of FeatureCollection (#5697)\n * GMLJP2: SRS export as GML: output XML definition of a SRS as a GML 3.1.1 compliant Dictionary (#5697)\n * GMLJP2: when setting GDAL_JP2K_ALT_OFFSETVECTOR_ORDER=TRUE write it as a XML comment so that we can interpret the OffsetVector elements correctly on reading\n * GMLJP2: when parsing a GMLJP2 box, accept srsName found on gml:RectifiedGrid if not found on origin.Point, so as to be compatible with the example of DGIWG_Profile_of_JPEG2000_for_Georeferenced_Imagery.pdf (#5697)\n * GMLJP2: add compatibility with GMLJP2 v2.0 where SRS is expressed as CRS URL\n * GMLJP2: on reading, don't do axis inversation if there's an explicit axisName requesting easting, northing order (#5960); also strip axis order in reported SRS\n * JP2Boxes: add null terminated byte to GDAL XML, XML or XMP boxes\n * Add GDALGetJPEG2000Structure() (#5697)\n * GDALMultiDomainMetadata::XMLInit(): when importing XML metadata, erase the existing document to replace it with the new one\n * Metadata: fix correct sorting of StringList / metadata (#5540, #5557)\n * Make GetMaskBand() work with GDT_UInt16 alpha bands (#5692)\n * Fix 32bit overflow in GDALRasterBand::IRasterIO() and  GDALDataset::BlockBasedRasterIO() (#5713)\n * RasterIO: small optimization in generic RasterIO() implementation to avoid loading partial tiles at right and/or bottom edges of the raster when they are going to be completely written\n * Fix crash when calling GetTiledVirtualMem() on non-Linux platform (#5728)\n * Add GDAL_OF_INTERNAL flag to avoid dataset to be registered in the global list of open datasets\n * GDALDriver::CreateCopy(): accept _INTERNAL_DATASET=YES as creation option, so as to avoid the returned dataset to be registered in the global list of open datasets\n * Implement GDALColorTable::IsSame()\n * GDALPamDataset: do not serialize dataset metadata unless it has been set through GDALDataset::SetMetadata() or GDALDataset::SetMetadataItem()\n * GDALLoadTabFile: add TAB_APPROX_GEOTRANSFORM=YES/NO configuration option to decide if an approximate geotransform is OK (#5809)\n * Optimize copy efficiency from tiled JPEG2000 images\n * Avoid fetching remote non-existing resources for sidecar files, when using /vsicurl/ with a URL that takes arguments (#5923)\n * Use GDALCanFileAcceptSidecarFile() in GDALMDReaderManager::GetReader()\n\nAlgorithms:\n * RPC transformer: fix near interpolation in RPC DEM (#5553)\n * RPC transformer: take into account nodata in RPC DEM (#5680)\n * RPC transformer: add RPC_DEM_MISSING_VALUE transformer option to avoid failure when there's no DEM at the transformed point (#5730)\n * RPC transformer: in DEM mode, implement optimization, in specific conditions (input points at same longitude, DEM in EPSG:4326) to extract several elevations at a time\n * TPS transformer: fix crash if the forward or backward transform cannot be computed (#5588)\n * OpenCL warper: remove unused variable in bilinear resampling that can cause compilation error (#5518)\n * OpenCL wrapper: fix code compilation with NVIDIA OpenCL (#5772)\n * Overview: Fix and speed-up cubic resampling in overview computation to take into account scaling factor (#5685)\n * Overview: ignore alpha=0 values when compute an average overview of an alpha band; and also avoid memory errors when calling GetMaskBand()/GetMaskFlags() after overview computation if GetMaskXXX() has been called before (#5640)\n * Overview: avoid crash when computing overview with a X dimension much smaller than Y dimension (#5794)\n * GDALRegenerateOverviewsMultiBand(): fix stride calculation error with certain raster dimensions (#5653)\n * Warper: numerous speed optimizations (SSE2 specific code, more fast code paths, ...)\n * Warper: fix Cubic and Bilinear resampling to work correctly with downsizing (#3740)\n * Warper: fix and optimize CubicSpline\n * Warper: regardless of the warping memory limit, add heuristics to determine if we must split the target window in case the 'fill ratio' of the source dataset is too low (#3120)\n * Warper: accept warping options METHOD=NO_GEOTRANSFORM and DST_METHOD=NO_GEOTRANSFORM to run gdalwarp on ungeoreferenced images\n * Warper: fix GDALSuggestedWarpOutput() wrong extent in some circumstances (e.g. dataset of big dimension with world coordinates) (#5693)\n * Warper: fix integer overflow when reprojecting into an area with (part of) bounds completely outside of the source projection (#5789)\n * Warper: add min,max,med,q1 and q3 resampling algorithms (#5868)\n * Warper: add a SRC_COORD_PRECISION warping option to help getting more reproducible output when -wm parameter changes (#5925)\n * Warper: fix failure in GDALSuggestedWarpOut2() when top-left and bottom-right corners transform to the same point (#5980)\n * GDALReprojectImage(): takes into account nodata values set on destination dataset\n * Median cut and dithering: optimizations and enhancements to deal with 8-bit precision (only if using internal interface for now)\n * rasterfill: add option to specify driver to use for temporary files\n * Polygonize: speed optimization: do not try to build the polygon for pixels that are masked by the mask band (i.e. alpha, nodata, etc...). Can considerably speed-up processing when the nodata outline forms a very complex polygon\n\nUtilities:\n * gdalinfo: display extra metadata domains attached to band, and refactor code a bit (#5542)\n * gdalinfo: add -oo option per RFC 46\n * gdalinfo: add -json switch (partial implementation of RFC 44)\n * gdaladdo: add -oo option per RFC 46\n * gdaladdo: add warning when subsampling factor 1 specified\n * gdal_translate: add -oo option per RFC 46\n * gdal_translate: add -r and -tr options per RFC 51\n * gdal_translate: add a -projwin_srs option to be able to express -projwin coordinates in another SRS than the one of the dataset\n * gdal_translate: support -'outsize avalue 0' or '-outsize 0 avalue' to preserve aspect ratio\n * gdal_translate: avoid preserving statistics when changing data type in situations where clamping can occur\n * gdal_translate: adjust RPC metadata (pixel/line offset/scale) when subsetting/rescaling, instead of just discarding it\n * gdal_translate: don't recopy band units if rescaling or unscaling is involved (#3085)\n * gdal_translate: increase GDAL_MAX_DATASET_POOL_SIZE default value to 450. (#5828)\n * gdal_translate: preserve NBITS image structure metadata when possible\n * gdalwarp: add -oo option per RFC 46\n * gdalwarp: add -te_srs option to specify -te in a SRS which isn't the target SRS\n * gdalwarp: add a -ovr option to select which overview level to use, and default to AUTO. Also add a generic OVERVIEW_LEVEL=level open option, and make it available in standard VRT (#5688)\n * gdalwarp: initialize destination dataset to no_data value when automatically propagating source nodata (#5675)\n * gdalwarp: only apply INIT_DEST when processing the first input dataset (#5387)\n * gdalwarp: increase GDAL_MAX_DATASET_POOL_SIZE default value to 450. (#5828)\n * gdalwarp: do not preserve NODATA_VALUES metadata item in output dataset if adding an alpha channel with -dstalpha\n * gdalwarp: fix '-dstnodata none' to avoid read of uninitialized values (#5915)\n * gdalwarp: make -crop_to_cutline densify cutline in source SRS before reprojecting it to target SRS (#5951)\n * gdaldem: avoid too large files to be produced when using -co COMPRESS=xxxx -co TILED=YES (#5678)\n * gdallocationinfo: add -oo option\n * gdaltransform: add a -output_xy flag to restrict output coordinates to 'x y' only\n * gdal_grid: use nodata= parameter in the algorithm string to determine the nodata value to set on the band (#5605)\n * gdal_grid: fix crash in optimized mode with GCC 4.4 on 64bit (#5987)\n * gdalbuildvrt: add a -r option to specify the resampling algorithm\n * gdal_edit.py: add -unsetstats option (and fix -a_nodata to run on all bands, ant not just first one)\n * gdal_edit.py: add -stats and -approx_stats flags (patch by mwtoews, #5805)\n * gdal_edit.py: change -mo add metadata to existing one; add new option -unsetmd to clean existing metadata\n * gdal_edit.py: add -oo to specify open options\n * gdal_retile.py: fix to make it work with input images of different resolutions (#5749)\n * gdal_retile.py: implement progress bar (#5750)\n * gdal_merge.py: add timing information in verbose output\n * gdal_merge.py: take into account alpha band to avoid writing zones of source images that are fully transparent (#3669)\n * gdal2tiles.py: fix inverted long/lat in BoundingBox and Origin elements of tilemapresource.xml (#5336)\n * pct2rgb.py: make it work with color tables with less than 256 entries (#5555)\n * gdal_fillnodata.py: FillNodata: copy no data value to destination band when creating a dataset (if available) (#4625)\n * gdal_proximity.py: add a -use_input_nodata flag\n * gdalcompare.py: add options to suppress selected comparisons\n * gdalcompare.py: takes into account differences in overview bands\n * gdalcompare.py: compute difference on float to avoid integer underflow\n * epsg_tr.py: change to make it possible to export GEOCCS and COMPD_CS to proj.4 epsg and PostGIS spatial_ref_sys.sql files\n\nPython samples:\n * Added swig/python/samples/jpeg_in_tiff_extract.py\n * Added dump_jp2.py\n * Added validate_jp2.py\n * Added build_jp2.py\n * Added gcps2ogr.py\n * tolatlong.py: report error when operating on a non-georeferenced dataset\n\nAAIGRID:\n * Fix formatting string (#5731)\n\nBAG driver:\n * change nodata value for uncertainty band to 1e6 (#5482)\n\nBMP driver:\n * back out r17065 change that inferred georeferencing based on the resolution information in the BMP header (#3578)\n\nDIMAP driver:\n * DIMAP 2: handle the case where the Raster_Data element is in main file (#5018, #4826)\n * DIMAP 2: fix to extract geodetic SRS (#5018, #4826)\n * DIMAP 2: fix to extract geotransform from JPEG2000 file if not available in XML (#5018, #4826)\n\nDDS driver:\n * Add ETC1 compression format support\n * Header correction for worldwind client\n\nECW driver:\n * correctly assign color interpretation to bands if order is unusual\n\nENVI driver:\n * avoid generating potentially corrupted .hdr files when opening in update mode; Write 'Arbitrary' instead of 'Unknown' as the projection name for an undefined SRS (#5467)\n * when writing, consider that LOCAL_CS SRS is like ungeoreferenced (#5467)\n\nERS driver:\n * reset RasterInfo.RegistrationCellX/Y if setting a new geotransform on an updated .ers file (#5493)\n * fix SetProjection() (#5840)\n\nGeoRaster driver:\n * fix Oracle SRID authority (#5607)\n * fix user-defined SRID issue (#5881)\n * new SRID search (#5911)\n\nGIF driver:\n * add compatibility with giflib 5.1 (#5519)\n * fix crash on images without color table (#5792)\n * fix reading of interlaced images with giflib >= 5.0\n * validate the size of the graphic control extension block (#5793)\n * implement GetFileList() to report worldfile\n\nGRASS driver:\n * GRASS 7.0.0 support (#5852)\n\nGRIB driver:\n * avoid divide by zero while setting geotransform on 1xn or nx1 grib file (#5532)\n * allow writing PDS template numbers to all bands (#5144)\n\nGTiff driver:\nNew capabilities:\n * for JPEG-in-TIFF, use JPEG capabilities to decompress fast overview levels 2,4 and 8, to generate 'hidden' overviews used by RasterIO()\n * add DISCARD_LSB creation option (lossy compression) to be best used with PREDICTOR=2 and LZW/DEFLATE compression\n * when GTIFF_DIRECT_IO=YES is enabled, performance improvements in GTiffRasterBand::DirectIO() with Byte dataset and Byte buffer\n * implement dataset DirectIO()\n * add GTIFF_VIRTUAL_MEM_IO=YES/NO/IF_ENOUGH_RAM configuration option so that RasterIO() can rely on memory-mapped file I/O (when possible and supported by the OS)\n * support reading and created streamable files\n * for JPEG-compressed TIFF, avoid quantization tables to be emitted in each strip/tile and use optimized Huffman coding by default\n * avoid SetNoDataValue() to immediately 'crystallize' the IFD\n * allow unsetting TIFFTAG_SOFTWARE, TIFFTAG_DOCUMENTNAME, etc... by removing them from metadata list or passing None as a value of SetMetadataItem() (#5619)\n * allow lossless copying of CMYK JPEG into JPEG-in-TIFF\n * set alpha on target by default when translating from Grey+Alpha\n * Internal overviews: for near, average, gauss and cubic, and pixel interleaving, make sure to use the same code path for compressed vs uncompressed overviews (#5701)\n * add RPCTXT=YES creation option to write sidecar _RPC.TXT file\n * internal libtiff updated to upstream libtiff 4.0.4beta\n * internal libgeotiff updated to upstream libgeotiff SVN head\n * speed optimization on write (at least in Vagrant) (#5914)\n * use importFromEPSG() when ProjectedCSTypeGeoKey is available (#5926)\n * on reading better deal with a few ESRI formulations of WebMercator (#5924)\nFixes:\n * when overriding metadata in update mode, make sure to clear it from PAM file (#5807)\n * fix handling of Mercator_2SP (#5791)\n * avoid TIFF directory to be written (at end of file) when creating a JPEG-in-TIFF file\n * for a paletted TIFF with nodata, set the alpha component of the color entry that matches the nodata value to 0, so as gdal_translate -expand rgba works properly\n * fix to make band SetMetadata(NULL) clear band metadata (#5628)\n * fix error message when requesting a non existing directory\n * check data type with PHOTOMETRIC=PALETTE\n * be robust to out-of-memory conditions with SplitBand and SplitBitmapBand\n * avoid using optimized JPEG --> JPEG-in-TIFF path if INTERLEAVE=BAND is specified with a 3-band JPEG\n * to make Python bindings happy, avoid emitting CE_Failure errors due to libtiff errors when we still manage to open the file (#5616)\n * avoid crash when reading GeoTIFF keys if the stored key type isn't the one expected\n * make sure to call libgeotiff gtSetCSVFilenameHook() method when linking against external libgeotiff\n * avoid/limit DoS with huge number of directories\n * clean spurious spaces when reading values from _RPC.TXT\n * serialize RPC in PAM .aux.xml file if using PROFILE != GDALGeoTIFF and RPB = NO\n * fix clearing of GCPs (#5945)\n * avoid generated corrupted right-most and bottom-most tiles for 12-bit JPEG-compressed (#5971)\n * make sure to use scanline write API when writing single-band single-strip 1-bit datasets\n\nGRASS driver:\n * fix compilation issues against GRASS 7\n\nHDF4 driver:\n * Add configuration support to be able to open more files simultaneously\n * Add class suffix to the parameter name when parsing HDF-EOS objects.\n * Fix AnyTypeToDouble() to use proper type (int instead of long) to work with DFNT_INT32/DFNT_UINT32 on 64-bit Linux (#5965)\n * MODIS: Set more correct values for PIXEL_/LINE_ OFFSET/STEP by comparing longitude and latitude subdatasets dimensions with main subdataset dimensions\n\nHDF5 driver:\n * avoid opening BAG files in the case HDF5 and BAG are plugins, and HDF5 is registered before BAG\n\nHFA driver:\n * fix recognition of Hotine Mercator Azimuth Center in Imagine format (and Swisstopo GeoTIFF) (#5551)\n * fix various hangs on invalid files\n * read projection even when it does not contain datum information (#4659)\n\nHTTP driver/wrapper:\n  * make it work with vector files too\n  * fix handling of non VSI*L file on Windows\n\nIRIS driver:\n * add support for the SHEAR data type (#5549)\n\nJPEG2000 driver:\n * do expansion of 1-bit alpha channel to 8-bit by default. Can be controlled with the 1BIT_ALPHA_PROMOTION open option (default to YES)\n * add GMLJP2 creation option\n * add GMLJP2V2_DEF creation option to create a GMLJP2 v2 box\n * Add capability of reading GMLJP2 v2 embedded feature collections and annotations\n * Add read/write support for RPC in GeoJP2 box (#5948)\n\nJP2ECW driver:\n * add metadata about JPEG2000 codestream and boxes (#5408)\n * Add 1BIT_ALPHA_PROMOTION open option (default to YES) to control expansion of 1-bit alpha channel to 8-bit\n * correctly assign color interpretation to bands if order is unusual\n * add WRITE_METADATA and MAIN_MD_DOMAIN_ONLY creation options to write GDAL metadata, JP2 XML boxes or XMP box\n * add GMLJP2V2_DEF creation option to create a GMLJP2 v2 box\n * Add capability of reading GMLJP2 v2 embedded feature collections and annotations\n * Add read/write support for RPC in GeoJP2 box (#5948)\n\nJP2KAK driver:\n * Compatibility with Kakadu v7.5 (#4575, #5344)\n * Handle Kakadu version 7 allocator.finalize (#4575)\n * fix bug in vsil_target::end_rewrite() that prevented TLM index to be generated (#5585)\n * Add FLUSH in creation option XML (#5646)\n * Do expansion of 1-bit alpha channel to 8-bit by default. Can be controlled with the 1BIT_ALPHA_PROMOTION open option (default to YES)\n * add GMLJP2V2_DEF creation option to create a GMLJP2 v2 box\n * Add capability of reading GMLJP2 v2 embedded feature collections and annotations\n * Add read/write support for RPC in GeoJP2 box (#5948)\n\nJP2OpenJPEG driver:\n * Support writing arbitrary number of bands. (#5697)\n * Generate cdef box when transparency is needed. Add NBITS, 1BIT_ALPHA and ALPHA creation options (#5697)\n * add INSPIRE_TG (for conformance with Inspire Technical Guidelines on Orthoimagery), PROFILE, JPX and GEOBOXES_AFTER_JP2C creation option (#5697)\n * add GMLJP2V2_DEF creation option to create a GMLJP2 v2 box\n * Add capability of reading GMLJP2 v2 embedded feature collections and annotations\n * add PRECINCTS creation option (#5697)\n * allow several quality values to be specified with QUALITY creation option. Add TILEPARTS, CODEBLOCK_WIDTH and CODEBLOCK_HEIGHT options (#5697)\n * support reading&writing datasets with unusual order of band color interpretation (#5697)\n * add WRITE_METADATA and MAIN_MD_DOMAIN_ONLY creation options to write GDAL metadata, JP2 XML boxes or XMP box (#5697)\n * add support for reading/writing/updating IPR box (from/into xml:IPR metadata domain) (#5697)\n * add YCC creation option to do RGB->YCC MCT, and turn it ON by default (#5634)\n * add USE_SRC_CODESTREAM=YES experimental creation option, to reuse the codestream of the source dataset unmodified\n * support reading & writing images with a color table (#5697)\n * support update mode for editing metadata and georeferencing (#5697)\n * add compatibility with OpenJPEG 2.1 (#5579)\n * fix warning when reading a single tile image whose dimensions are not a multiple of 1024 (#5480)\n * Add 1BIT_ALPHA_PROMOTION open option (default to YES) to control expansion of 1-bit alpha channel to 8-bit\n * Add read/write support for RPC in GeoJP2 box (#5948)\n * limit number of file descriptors opened\n\nJPEG driver:\n * use EXIF overviews if available\n * add EXIF_THUMBNAIL creation option to generate an EXIF thumbnail\n * use optimized Huffman coding to reduce file size\n * add support for reading and writing COMMENT\n * optimize whole image reading with dataset IRasterIO()\n * report non-fatal libjpeg errors as CE_Warning (or CE_Failure if GDAL_ERROR_ON_LIBJPEG_WARNING = TRUE) (#5667)\n * in compressor, increase default val of max_memory_to_use to 500MB\n\nJPIPKAK driver:\n * avoid symbol collision with kdu_cpl_error_message from JP2KAK driver\n * reset the bNeedReinitialize flag after a timeout (#3626)\n\nKMLSuperOverlay driver:\n * fix truncated raster on 32 bit builds (#5683)\n * make Identify() more restrictive to avoid false positives\n\nL1B driver:\n * add support for little-endian LRPT datasets (#5645)\n * expose band mask when there are missing scanlines (#5645)\n * expose WGS-84 or GRS-80 datum if read from header record (#5645)\n\nMAP driver:\n * retrieve the image filename in a case insensitive way (#5593)\n\nMBTiles driver:\n * better detection of 4 bands dataset and take into account alpha component of color table in RasterIO() (#5439)\n * avoid wrong detection of 3 bands when finding paletted PNG in /vsicurl mode (#5439)\n * fix dimension computation when opening a single tile dataset\n * better computation of extent from min/max of tile coordinates, for a single zoom level\n * use standard EPSG:3857 origin to fix a ~8m shift (#5785)\n\nMEM driver:\n * implement optimized versions of raster band and dataset IRasterIO()\n\nMSG driver:\n * fix compilation problem (#5479)\n * fix memory leaks (#5541)\n\nNetCDF driver:\n * Force block size to 1 scanline for bottom-up datasets if nBlockYSize != 1 (#5291)\n * Fix computation of inverse flattening (#5858)\n * In case the netCDF driver is registered before the GMT driver, avoid opening GMT files\n * Fix crash on opening a NOAA dataset (#5962)\n\nNGSGEOID driver:\n * make Identify() more restrictive\n\nNITF driver:\n * deal correctly with JPEG2000 NITF datasets that have a color table inboth Image Subheader and JP2 boxes, and for drivers that don't do color table expension\n * HISTOA TRE: put definition of TRE in conformance with STDI-0002 (App L page 14) and STDI-0006 (Page 57) (#5572)\n\nOGDI driver:\n * Remove OGDIDataset::GetInternalHandle (#5779).\n\nOZI driver:\n * remove .map header detection from Identify() since this is actually handled by the MAP driver\n\nPCIDSK driver:\n * close dataset in case of exception in PCIDSK2Dataset::LLOpen() (#5729)\n\nPCRaster driver:\n * Align libcsf code with PCRaster raster format code (#5843)\n * Implement Create() (#5844)\n * Improve handling of no-data value (#5953)\n\nPDF driver:\n * add compatibility with Poppler 0.31.0\n * in the OGC Best practice case, switch rotational terms of the geotransform matrix (gt[2] and gt[4])\n * in the OGC Best practice case, handle rotations of 90 and 270 degrees.\n * advertise LAYERS metadata domain\n * deal with OHA- datum (Old Hawaiian)\n * fix compilation problem with Podofo on Windows (patch by keosak, #5469)\n * add sanity check on page count\n\nPDS driver:\n * Added support for SPECTRAL_QUBE objects used e.g. by THEMIS instrument of Mars Odyssey spacecraft.\n\nPNG driver:\n * add creation options to write metadata in TEXT/iTXt chunks\n * optimize whole image reading with dataset IRasterIO()\n * Internal libpng: update to 1.2.52\n\nPostgisRaster driver:\n * Fix read of metadata for tables with multiple raster cols (#5529)\n\nRasterlite driver:\n * accept space in filename\n\nRPFTOC driver:\n * add tweak for weird relative directory names in the A.TOC file (#5979)\n\nVRT driver:\n * add handling of a shared='0' attribute on <SourceFilename> to open sources in non-shared mode, and VRT_SHARED_SOURCE config option that can be set to 0 in case the shared attribute isn't there (#5992)\n * VRT warp: make selection of source overview work (#5688)\n * VRT warp: expose as many overviews in warped dataset as there are in source dataset, and make warped VRT honour -ovr parameter of gdalwarp (#5688)\n * make sure nodata value set on VRT raster band is taken into account in statistics computation (#5463)\n * fix ComputeStatistics() on VRT that are a sub-window of source dataset (#5468)\n * VRT raw: fix corrupted serialization on Windows (#5531)\n * implement heuristics to determine if GetMinimum()/GetMaximum() should use the implementation of their sources of not. Can be overridden by setting VRT_MIN_MAX_FROM_SOURCES = YES/NO (#5444)\n * VRT warp: avoid to warp truncated blocks at right/bottom edges, so that scale computation is correct\n * fix RasterIO() to be able to fill buffers larger than 2GB (#5700)\n * fix performance problem when serializing into XML a big number of sources\n * do not output empty <Metadata> node on VRTDataset and VRTRasterBand elements\n * fix rounding of output window size on VRTSimpleSource (#5874)\n * add trick to make relativeToVRT works for a VRT-in-VRT\n * add more checks to CheckCompatibleForDatasetIO() to avoid issues with overview bands (#5954)\n * preserves relative links on reserialization of existing VRT (#5985)\n\nUSGSDEM driver:\n * take into account horizontal unit = ft in the UTM case (#5819)\n\nTIL driver:\n * fix half pixel shift in geo registration (#5961)\n\nWEBP driver:\n * Lazy uncompressed buffer allocation and optimize band-interleaved IRasterIO() for whole image reading\n\nWMS driver:\n * Add support for ArcGIS server REST API\n * fix to make GDAL_DEFAULT_WMS_CACHE_PATH configuration option work as expected (#4540)\n * move the WMS layer name encoding to be done before the sub datasets URLs are created.\n\nXYZ driver:\n * fix back line seeking with datasets that have not the same number of values per lines (#5488)\n * deal with lines that have missing values (but still regularly spaced)\n\n## OGR 2.0 - Overview of Changes\n\nCore:\n * OGRPolygon::importFromWkt(): fix memleak when importing broken 2.5D polygon\n * Fix OGRFeature::SetGeometryDirectly() and SetGeomFieldDirectly() to free the passed geometry even if the method fails (#5623)\n * OGR SQL: Add hstore_get_value(hstore, key) function\n * OGR SQL: sanitize how we deal with field names expressed as table_name.field_name and \"fieldname.with_point_inside\". By default, use standard quoting rules, and be tolerant when there's no ambiguity\n * OGR SQL: support arbitrary boolean expression on ON clause of a JOIN\n * OGR SQL: accept AS keyword in 'FROM table_name AS alias' clause\n * OGR SQL: don't consider backslash-doublequote as an escape sequence when inside a single-quoted string literal\n * Add OGR_API_SPY mechanism (http://www.gdal.org/ograpispy_8h.html)\n * Make OGRParseDate() recognize ISO 8601 format\n * ogr_core.h: only ignore -Wfloat-equal for IsInit() and not for the rest of the file and files that include it (#5299)\n * OGR layer algebra: properly initialize field maps to avoid Valgrind warnings in OGRLayer::Update() (#5778)\n * Make OGR_F_SetFieldBinary() set OFTString fields, mostly for testing purposes\n * OGR_G_CreateGeometryFromJson(): attach a WGS84 SRS to the returned geometry if the json object has no 'crs' member (#5922)\n\nOGRSpatialReference:\n * Upgrade to EPSG v8.5 database\n * Proj.4 import: for HOM, make sure +no_off/no_uoff is preserved, and change default value of gamma parameter to be the same as alpha (#5511)\n * Proj.4 export: export Aitoff, Winkel I, Winkel II, Winkel-Tripel, Craster, Loximuthal, Quartic Authalic\n * Adding support for Mercator_Auxiliary_Sphere without AUTHORITY SECTIONS (#3962)\n * Add QSC (Quadrilateralized_Spherical_Cube) projection, compatible with PROJ 4.9\n * Various fixes to put EXTENSION node before AUTHORITY and make it pass Validate() (#5724)\n * importFromEPSG()/exportToProj4(): avoid precision loss in TOWGS84 parameters, e.g. on Amersfoort / RD EPSG:4289 (https://trac.osgeo.org/proj/ticket/260)\n * Add OSRCalcInvFlattening() and OSRCalcSemiMinorFromInvFlattening(), and use them in various places (#5858)\n * Remove deprecated variant of OGRSpatialReference::importFromOzi() (#5932)\n\nUtilities:\n * ogrinfo: add -oo option per RFC 46\n * ogrinfo: display dataset and layer metadata. Add -nomdd, -listmdd, -mdd all|domain options, like in gdalinfo. OGR VRT: add dataset and layer metadata support\n * ogrinfo: add -nocount and -noextent options\n * ogr2ogr: add -oo and -doo options per RFC 46\n * ogr2ogr: add -spat_srs option\n * ogr2ogr: turn string value to one element list if destination field is stringlist\n * ogr2ogr: fix problem with SRS when copying layers with multiple geometry columns with different SRS (#5546)\n * ogr2ogr: add special case for -update and GPKG and input=output\n * ogr2ogr: when copying a layer that has a source integer/integer64 field with same name as target FID column, avoid creating it into target layer and use its content as the FID value (#5845)\n * ogr2ogr: in non-append mode, if target layer has a FID creation option, reuse source FID name and source FIDs, unless -unsetFid is specified (#5845)\n * ogr2ogr: copy source dataset and layer metadata, unless disabled by -nomd. Additional dataset metadata can be set with -mo KEY=VALUE\n * ogr2ogr: add -ds_transaction to force dataset transactions, mainly for FileGDB driver\n * ogr2ogr: fix crash with -clipdst when a reprojection fails before (#5973)\n * ogrlineref: fix project if reper lies on first point or last point of line\n * ogr_layer_algebra.py: for Update, Clip and Erase, only creates attribute of input layer by default (#5976)\n\nOther:\n * OGR WCTS removed from tree\n\nCross driver changes:\n * MSSQLSpatial and GPKG: use standardized 'GEOMETRY_NAME' option name. Add GEOMETRY_NAME to SQLite (#5816)\n * FileGDB and MySQL: use standardized 'FID' option name. SQLite: add a FID layer creation option (#5816)\n * SQLite, GPKG, PG, PGDump: in a newly created table, allow to create a integer field with same name of FID column (#5845)\n\nBNA driver:\n * fix segfault when calling GetNextFeature() on a write-only layer\n\nCartoDB:\n * add CARTODBFY layer creation option\n * launder layer and column names by default (#5904)\n * enable by default batch insertion of features in update mode\n * on a newly created layer, send new features created by CreateFeature() by chunks of a maximum size of 15 MB (configurable through CARTODB_MAX_CHUNK_SIZE).\n * implement deferred field creation\n * support boolean type\n * register tables with cdb_cartodbfytable()\n * fix creation of features with Date/DateTime/Time values\n * fix for multi-user account, and optimization for SQL layers\n * implement TestCapability() and CreateDataSource() similarly to PostgreSQL, i.e. redirect to Open() in update mode\n * accept a user column to have the same name of the FID (cartodb_id)\n * do automatic polygon->multipolygon promotion at creation time\n * in authenticated mode, retrieve all column information, including spatial info, default value and primary key in one single statement\n * use integer primary key of tables, when available, to scroll faster among features instead of using OFFSET/LIMIT (#5906)\n\nCSV driver:\n * add optional field type detection with AUTODETECT_TYPE=YES open option\n * add QUOTED_FIELDS_AS_STRING open option that default to NO. So by default, if AUTODETECT_TYPE=YES, the content of quoted fields will be tested for real, integer,... data types\n * fix to avoid truncation of WKT geometries to 8000 characters (#5508)\n * fix segfault when reading allCountries.txt of geonames.org (#5668)\n * accept space as separator as input/output, and add MERGE_SEPARATOR=YES/NO open option\n\nDXF driver:\n * improve TestCapability(ODsCCreateLayer)\n\nFileGDB driver:\n * add layer creation option to set CONFIGURATION_KEYWORD\n * avoid error message when failing to import SRS from WKID code (might be an ESRI code for example)\n * do not reject features with null geometry\n * use LatestWKID when available (#5638)\n * avoid emitting error when opening a FileGDB v9, so that OpenFileGDB can be tried to open it, in the case FileGDB is a plugin (#5674)\n * fix CreateFeature() to work when a esriFieldTypeGlobalID field is not set\n * report width of string fields (#5806)\n * add compatibility with FileGDB SDK v1.4\n * enable bulk load on newly created layers\n\nGeoJSON driver:\n * implement Date/Time/DateTime field type detection\n * expose a 'id' object, of type string, directly on Feature object (not in its properties) as a field\n * add FLATTEN_NESTED_ATTRIBUTES and NESTED_ATTRIBUTE_SEPARATOR open options\n * TopoJSON: establish layer schema from objects properties (#5870)\n * implement automatic scrolling through result sets of ArcGIS GeoServices Feature Service (#5943)\n * accept and skip UTF-8 BOM (#5630)\n * ESRIJson: parse correctly rings of esriGeometryPolygon objects to build correct Polygon or MultiPolygon (#5538)\n * avoid truncation of real numbers on reading (#5882)\n * internal libjson-c: Fix to read floating point numbers in non C locale (#5461)\n * improve TestCapability(ODsCCreateLayer)\n * make string comparison for authority name case insensitive so as to recognize lowercase 'epsg' (#4995)\n * support reading Feature without geometry field\n\nGeoRSS driver:\n * fix to parse ATOM feed documents with atom: namespace (#5871)\n\nGME driver:\n * Added fixes discovered while using v.in.ogr and v.out.ogr in GRASS\n\nGML driver:\n * add XSD=filename open option\n * add FORCE_SRS_DETECTION, INVERT_AXIS_ORDER_IF_LAT_LONG, CONSIDER_EPSG_AS_URN, READ_MODE, EXPOSE_GML_ID, EXPOSE_FID, DOWNLOAD_SCHEMA and REGISTRY open options\n * Fix bug that prevented multiple instances of the reader with Xerces backend (#5571)\n * parse correctly GML geometries whose srsDimension attribute is on top-level geometry element and not on posList (#5606)\n * add datasource option SRSDIMENSION_LOC=GEOMETRY to be able to write srsDimension attribute on top level geometry element, default on posList unchanged (#5066)\n * add support for reading layers resulting from a WFS 2.0 join query\n * read/write top <gml:description> and <gml:name> as DESCRIPTION and NAME metadata items. Also add GML_ID, DESCRIPTION and NAME creation options\n * support to reader response to CSW GetRecords queries\n * Fix incorrect geometry cast when reading GML topogeometries (#5715)\n * VFR: fix ST_Z type (changes) -- list all layers\n * VFR: include also non-spatial (removed) features (ZaniklePrvky) in type ST_Z (changes)\n * VFR: use String when 32-bit integer was not wide enough\n * VFR: add support for UVOH file type\n * VFR: add missing support for OriginalniHraniceOmpv geometry\n * VFR: update GFS files to RFC31 (OGR 64bit Integer Fields and FIDs)\n * update RUIAN GFS files: add missing GMLFeatureClasses to OB type (SpravniObvody, Mop, Momc)\n * add support for parsing .xsd with a <choice> of polygonProperty and multiPolygonProperty\n * remove wrong case insensitive comparison related to gml_registry.xml use\n * various fixes to better deal with ArcByCenterPoint() as found in FAA AIXML files\n * make Expat parser accept trailing nul characters\n * correctly record path to attribute in case of attribute located on a nested element when .gfs is created with GML_ATTRIBUTES_TO_OGR_FIELDS=YES\n * fix GML_ATTRIBUTES_TO_OGR_FIELDS=YES to work correctly with xlink:href too (#5970\n * make GML_EXPOSE_GML_ID to be honoured on WFS documents\n\nGPKG driver:\n * add support for non-spatial layers via the gdal_aspatial extension (#5521)\n * add support for creating spatial index\n * add layer metadata read/write support\n * implement ST_GeometryType(), GPKG_IsAsisgnable() and ST_SRID() to be compatible with Geometry Type Triggers and SRS ID Triggers Extensions\n * on creation, use GEOMCOLLECTION (instead of GEOMETRYCOLLECTION) (#5937)\n * make SELECT expressions passed to ExecuteSQL() be evaluated by SQLite\n * make it possible to use spatialite 4.2.0 SQL functions\n * add a 'INDIRECT_SQLITE' dialect that goes through the VirtualOGR mechanism (e.g. for compat with older Spatialite)\n * allow table names with dash character (#5472)\n * emit warning when required extensions are not implemented\n * disable PRAGRAM integrity_check by default, since it can be expensive on big files\n * read-only support for tables without integer primary key\n * fix Date and DateTime support\n * implement TEXT(maxwidth) type in read and creation\n * implement deferred table creation\n * fix reporting of geometry type for 2.5D (previous behavior had the effect to turn to wkbUnknown)\n * put correct value (1) in gpkg_geometry_columns for 2.5D tables (#5481)\n * fix component geometry type of 3D MultiGeometries (#5629)\n * fix GetExtent() crash on layers without extent set in gpkg_contents (#5471)\n * avoid leak when a table has more than one FID column\n * accept spatial tables whose geometry field is declared as BLOB\n * recognize both GeomCollection and GeometryCollection as possible values, until GeoPackage SWG clears what is the official value\n * escape all column names in SQL (#5520)\n * accept geometries with Spatialite format, that can be returned with issuing a SQL request using spatialite functions\n * enable Spatialite 4.3 'amphibious' mode to avoid explicit cast to Spatialite geometries\n\nGPSBabel driver:\n * automatically open .igc files, implement Identify() and add open options\n * advertise creation option\n\nGTM driver:\n * declare OLCCreateField and OLCSequentialWrite capabilities\n\nIDRISI driver:\n * fix support for multi-ring polygons (#5544)\n\nILI driver:\n * Use Ili1TransferElement written by ili2c 4.5.5 and newer\n * Fix crash in polygon geometry reading\n * Fix reading SURFACE polygons with multiple rings\n * Fix reading tables with polygon type\n * Support curve geometries for ILI1 and ILI2.\n * Add a MODEL open option\n\nISIS3 driver:\n * fix to recognize IsisCube.Mapping.LatitudeType = Planetocentric (#5717)\n\nKML driver:\n * fix segfault when calling GetNextFeature() on a write-only layer\n\nLIBKML driver:\n * add support for reading gx:MultiTrack\n * rework libkml singleton factory management (#5775)\n\nMITAB driver:\n * add support for append/update/delete operations on .tab files (#5652)\n * add support for CreateField() on non empty file, AlterFieldDefn() and DeleteField() for .TAB (#5652)\n * implement SyncToDisk() for TAB layers (#5652)\n * convert to use of VSI*L FILE API (#5558)\n * don't write field width for integer fields in .mif, which is incompatible with MapInfo (#3853)\n * report OLCCreateField for .mif files (#5477)\n * fix opening .mif file without .mid file (#5570)\n * swap StdParallel1 and stdParallel2 if necessary on LCC projections (https://github.com/mapgears/mitab/issues/1)\n * take into account scale/bounds to properly round coordinates (https://github.com/mapgears/mitab/issues/2)\n * add MITAB_BOUNDS_FILE configuration option to specify a file with projection bounds (https://github.com/mapgears/mitab/issues/3)\n * add BOUNDS layer creation option (#5642)\n * refactor import/export of MIF coordsys to use the TAB code; take into account MITAB_BOUNDS_FILE to add Bounds to the CoordSys string\n * close polygon rings when reading Region from MIF file (#5614)\n * fix segfault in CreateFeature() if passing an invalid OGR feature style string (#1209)\n\nMSSQLSpatial driver:\n * Implement SPATIAL_INDEX layer creation option for MSSQL (#5563)\n * Implement support for WKB geometry upload (#5682)\n * Fix schema handling in MSSQL driver (#5401)\n * Fix spatial geometry field handling (#5474)\n * Bind string fields to unicode string columns in the database (#5239)\n * Fix recognizing image columns as geometry columns for the select layers. (#5498)\n * Fix issue when creating non-spatial table (#5696)\n * Fix to read metadata if the tables are specified in the connection string (#5796)\n * Fix crash if the tablename is specified in the connection string (#5826)\n * Include geometry column name in Update statement (#5930)\n * Implement FID layer creation option (#5816)\n * Fix issue when removing an MSSQL spatial layer\n\nMySQL:\n * thread-safe initialization of mysql client library (#5528)\n\nNAS driver:\n * implement wfs:update (adds new context 'update' and fields \"endet\" and \"anlass\" to \"delete\" layer).\n * also assign xlink:href attributes as layer attribute (not only in \"alkis_beziehungen\" layer; #5372)\n * fix filtering on OGR_GEOMETRY special field\n * make chevrons configurable by NAS_INDICATOR\n\nOCI driver:\n * add a ADD_LAYER_GTYPE=YES/NO layer creation option that defaults to YES to enforce a layer geometry type and is used to retrieve the layer geometry type when listing layers (#3754)\n * Fix FID (multi_load=off, OGRNullFID) - start with 1 (not -1) (#5454)\n * use VARCHAR2 instead of VARCHAR for unsupported types\n * Fix \"ORA-00972: identifier is too long\" error (#5466)\n * Fix memory leaks (#5599)\n * Fix creation of date and datetime fields (#5600)\n * initialize member variable to avoid UpdateLayerExtents() to be called randomly on non spatial tables (#5376)\n * avoid spatial index to be created each time SyncToDisk() is called\n * fix memory leak in DeleteLayer(const char*)\n * fix reading of 2D geometries that were always turned as 3D\n * in layers returned by ExecuteSQL(), only expose geometry column if there's one\n * force NLS_NUMERIC_CHARACTERS to \". \" (#5709)\n\nODBC driver:\n * try alternate DSN template for 64bit ODBC\n * make ODBC driver honour PGEO_DRIVER_TEMPLATE config. option (and also MDB_DRIVER_TEMPLATE in case PGEO_DRIVER_TEMPLATE isn't defined) (#5594)\n\nODS driver:\n * fix export of OFTDate fields that were exported as string\n\nOpenAir driver:\n * tweak detection logic to read beyond first 10KB bytes when needed (#5975)\n\nOpenFileGDB driver:\n * add compatibility with .gdbtable files bigger than 4 GB (#5615)\n * support opening files with ConfigurationKeyword=MAX_FILE_SIZE_4GB or MAX_FILE_SIZE_256TB (#5615)\n * fix occasional write-after-end-of-buffer (#5464)\n * avoid error message when failing to import SRS from WKID code (might be an ESRI code for example)\n * fix spatial filter with GeneralPolygon shapes (#5591)\n * fix for reading GDB with string fields with a default value length > 127 (#5636)\n * better handling of certain definitions of raster columns\n * use LatestWKID when available (#5638)\n * increase accepted size for field description zone up to 10 MB (#5660)\n * fix ResetReading() on SQL layer with ORDER BY on indexed column (#5669)\n * add support for non spatial GDB v9 tables (#5673)\n * improve error reporting when file exists but cannot be opened due to permission problem (#5838)\n * report width of string fields (#5806)\n * try to deal more gracefully with inconsistent nValidRecordCount vs nTotalRecordCount values (#5842)\n * report 25D layer geometry type on FileGDB v9 tables when relevant\n * optimize sequential reading of sparse layers\n * avoid warning when opening a00000004.gdbtable\n * disable feature count optimization with IS NOT NULL on an index column\n\nOSM driver:\n * add mechanism to compute fields from other fields/tags with SQL expressions. Apply it for z_order on lines layer\n * fix random crash, particularly on MacOSX (#5465)\n * add CONFIG_FILE, USE_CUSTOM_INDEXING, COMPRESS_NODES, MAX_TMPFILE_SIZE and INTERLEAVED_READING open options\n\nPG driver:\n * use COPY mode by default (unless PG_USE_COPY is set to NO) when inserting features in a newly create table (#5460)\n * add UNLOGGED=YES/NO layer creation option to create unlogged tables (improved version of patch by Javier Santana, #4708)\n * implement deferred loading of table list, to optimize ExecuteSQL() (#5450)\n * implement optimization for spatial table listing for PostGIS 2.x\n * implement deferred creation of tables to capture all attribute and geometry column creations into a single CREATE TABLE statement (#5547)\n * change \"No field definitions found\" from fatal error to debug\n * when creating a table and filling it, avoid re-reading the table definition from PG system tables (#5495)\n * better handling of SRS authority name different than EPSG (authority code must still be integral)\n * fix crash when writing a StringList with 0 element (#5655)\n * emit errors instead of debug messages when postgres issues an error (#5679)\n * fix to make ExecuteSQL('CREATE DATABASE foo') work\n * fix regression that prevented to retrieve more than 500 features from a connection with tables= parameter and on a SQL result layer (#5837)\n * PG/PGDump: fix truncation of fields to work with multi-byte UTF-8 characters (#5854)\n\nPGDump driver:\n * switch to DROP_TABLE=IF_EXISTS by default (#5627)\n * fix crash when writing a StringList with 0 element (#5655)\n\nPGeo driver:\n * try alternate DSN template for 64bit ODBC\n\nREC driver:\n\nShapefile driver:\n * add SPATIAL_INDEX layer creation option (#5562)\n * support .prj files with UTF-8 BOM\n * fill 'date of last update' header with current time instead of dummy date, and add a DBF_DATE_LAST_UPDATE layer creation option to override this with a fixed date (#3919)\n * fix reading of shapefiles whose .shx is non conformant (#5608)\n * fix writing values up to 2^53 in OFTReal fields with 0 decimal places (#5625)\n * delete implicit FID field as soon as we CreateField a real one\n * GetExtent(): don't trust extent in header if it contains Not-A-Number values (#5702)\n * make REPACK compact .shp if SetFeature() is called and changes one geometry size (#5706)\n * add check not to cut unicode character while cut the string lengnt for field max length during SetFeature\n * avoid reading whole .shx at open time for /vsicurl/\n * add SHAPE_REWIND_ON_WRITE configuration option that can be set to NO to disable correction of ring winding order on write. Useful when dealing with MultiPolygon that are MultiPatch objects in fact (#5888)\n * Make ENCODING layer creation option proprietary over SHAPE_ENCODING config. option\n\nSOSI driver:\n * remove error noise (#5710)\n\nS57 driver:\n * various compliance fixes in ISO8211 and S57 writer (#5798)\n * make it possible to set LNAM_REFS=OFF as advertized in the doc\n\nSQLite/Spatialite driver:\n * SQLite/Spatialite: add support for multiple geometry column tables, accordingly with RFC 41 (#5494)\n * SQLite SQL dialect: Add hstore_get_value(hstore, key) function\n * remove 'T' suffix when formatting the content of a Date field (#5672)\n * optimize CreateFeature() when fields can be null or not null from one feature to another one\n * Spatialite: improve insertion performance by disabling triggers and doing the job ourselves\n * Fix segmentation fault when executing OGR2SQLITE_Register() when compiling against sqlite 3.8.7 (#5725)\n * make GetFIDColumn() work when run as first method call (#5781)\n * emit warning when reading text values in a integer/real field (possible since SQLite has no strong typing)\n * support reading date/datetime from Julian day floating point representation\n * SQLite dialect: fix insertion in geometry_columns of table names that are not in upper-case (#6483)\n\nSUA driver:\n * tweak detection logic to read beyond first 10KB bytes when needed (#5975)\n\nSXF driver:\n * Fix SXF file version check (#5456)\n * Fix wrong Miller Cylindrical projection string\n * Fix encoding issues (#5647)\n * Fix extract z value to OGRGeometry\n * Fix case sensitivity of RSC file\n\nVFK driver:\n * recode also header values\n * process DKATUZE from header properly\n * handle also duplicated records\n * check attribute 'parametry_spojeni'\n * speed-up GetFeatureCount()\n * fix reading properties. Escape characters for SQL\n * change SRS from EPSG 2065 to 5514\n * fix reading SBP datablock (fix mismatch when reading from file and db)\n\nVRT driver:\n * do not propagate ignoring of x and y cols of a PointFromColumns to the source layer (#5777)\n * add an optional 'name' attribute on FID element, so as to be able to force the report of a FID column name even if it is not exposed as a regular field (related to #5845)\n * handle optional <OpenOptions><OOI key='key'>value</OOI></OpenOptions> to specify open options\n * do not enable passthrough filtering if redefining <FID> (#6480)\n\nTiger driver:\n * Fix potential buffer underflow when providing /vsistdin/ to Tiger driver (#5567)\n\nWAsP driver:\n * added options and changed output precision to match WAsP Map Editor\n * improve TestCapability(ODsCCreateLayer)\n\nWFS driver:\n * automatically enable paging if WFS 2.0 capabilities report paging support\n * evaluate SELECT with JOIN on server-side for a Join-capable WFS 2.0 server\n * add a TRUST_CAPABILITIES_BOUNDS open option, that can be set to YES to trust layer bounds declared in GetCapabilities response, for faster GetExtent() runtime (#4041)\n * add INVERT_AXIS_ORDER_IF_LAT_LONG, CONSIDER_EPSG_AS_URN and EXPOSE_GML_ID open options\n * add capability to use spatial functions ST_xxxxx() as server-side filters\n * add dataset and layer metadata\n * allow SELECT with several ORDER BY columns\n * report name of geometry column\n * Add COOKIE option (#5824)\n * when parsing a layer schema without geometry from the GML .xsd, do not expose a geometry field at the WFS layer level (#5834)\n\nXLSX driver:\n * fix column numbering when there are more than 26 columns (#5774)\n\nXPlane driver:\n * add support for Taxi Location 1300 record found in V1000\n\n## SWIG Language Bindings\n\nAll bindings:\n * bind GDALGetBandDataset() as Band.GetDataset()\n * add Feature.GetFieldAsBinary()\n\nJava bindings:\n * Pass eRWFlag to allow both reading or writing.  Write was broken in DatasetRasterIO().\n * updates to generate maven artifacts\n\nPerl bindings:\n * The breaking changes are described in more detail in swig/perl/Changes-in-the-API-in-2.0.\n * More comprehensive use of strings as constants (such as capabilities); they are also taken from bindings, which added new ones, and not hard-coded.\n * New classes (e.g., VSIF, GeoTransform, GeomFieldDefn) and new methods (e.g., constant lists, Dataset::SpatialReference).\n * Much improved documentation and switch to Doxygen::Filter::Perl.\n * New test codes.\n * Errors are confessed with stack trace and often caught earlier with better messages.\n * Use of attributes is deprecated and methods have been added to replace them.\n * Multiple geometry fields have necessitated some changes in schema and field related methods.\n * More support for named parameters (i.e., hashes as arguments).\n * NoDataValue: set max float if undef is given.\n * Unit: set '' if undef is given.\n * Also other changes that will also remove some \"use of uninitialized value in subroutine entry\" warnings.\n * Automatic handling of SQL result layers.\n * Fix issue with index attribute for field meta data (schema) (#5662)\n * Warn if attempt to create non-integer column for colors.\n * Remove prefix GCP from GCP swig made attributes.\n\nPython bindings:\n * add optional buf_xsize, buf_ysize and buf_type parameters to Dataset.ReadAsArray() and Dataset.LoadFile(), and use dataset RasterIO for better efficiency\n * avoid generating Python exception when PyString_FromStringAndSize() fails and GDAL errors as Python exceptions are disabled\n * Band.ReadRaster() and Dataset.ReadRaster(): clear the buffer in case there are holes in it due to odd spacings specified by the user\n * Fix hang of Python in case of repeated call to gdal/ogr.UseExceptions() and CE_Warning emitted (#5704)\n * for Python 2, accept unicode string as argument of Feature.SetField(idx_or_name, value) (#4608)\n * for Python 2, accept Unicode strings to be passed as key and/or value of the dictionary passed to SetMetadata() (#5833)\n * fix processing error of ogr_python.i with SWIG 3 (#5795)\n * NUMPY driver: avoid returning CE_None in GetGeoTransform() when there's no geotransform set (#5801)\n * Make GetFieldAsBinary() work with OFTString fields\n * For Python3 compat, make Feature.GetField() use GetFieldAsBinary() if GetFieldAsString() fails (#5811)\n\n# GDAL/OGR 1.11.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL drivers:\n    - KRO: read/write support for KRO KOKOR Raw format\n * New OGR drivers:\n    - CartoDB : read/write support\n    - GME (Google Map Engine) : read/write support\n    - GPKG (GeoPackage): read-write support (vector part of the spec.)\n    - OpenFileGDB: read-only support (no external dependency)\n    - SXF driver: read-only support\n    - WALK : read-only support\n    - WasP : read-write support\n * Significantly improved drivers: GML, LIBKML\n * RFC 40: enhanced RAT support (#5129)\n * RFC 41: multiple geometry fields support\n * RFC 42: OGR Layer laundered field lookup\n * RFC 43: add GDALMajorObject::GetMetadataDomainList() (#5275)\n * RFC 45: GDAL datasets and raster bands as virtual memory mapping\n * Upgrade to EPSG 8.2 database\n\n## New installed files\n * bin/ogrlineref\n * lib/pkgconfig/gdal.pc\n * gdalcompare.py\n * data/gml_registry.xml\n * data/inspire_cp_CadastralParcel.gfs\n * data/inspire_cp_BasicPropertyUnit.gfs\n * data/inspire_cp_CadastralBoundary.gfs\n * data/inspire_cp_CadastralZoning.gfs\n * data/ruian_vf_ob_v1.gfs\n * data/ruian_vf_st_v1.gfs\n * data/ogrvrt.xsd\n\n## Backward compatibility issues\n\n# GDAL 1.x\n\nConsult [NEWS-1.x.md](NEW-1.x.md)\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 404.8720703125,
          "content": "# GDAL/OGR 3.10.0 Release Notes\n\nGDAL/OGR 3.10.0 is a feature release.\nThose notes include changes since GDAL 3.9.0, but not already included in a\nGDAL 3.9.x bugfix release.\n\n## In a nutshell...\n\n* [RFC 101](https://gdal.org/en/latest/development/rfc/rfc101_raster_dataset_threadsafety.html):\n  Raster dataset read-only thread-safety\n* New read/write [AVIF](https://gdal.org/en/latest/drivers/raster/avif.html)\n  raster driver\n* New read-only [SNAP_TIFF](https://gdal.org/en/latest/drivers/raster/snap_tiff.html)\n  raster driver for Sentinel Application Processing GeoTIFF files\n* New OGR read-only [XODR](https://gdal.org/en/latest/drivers/vector/xodr.html)\n  driver for OpenDRIVE (#9504)\n* Code linting and security fixes\n* Bump of shared lib major version\n\n## New optional dependencies\n\n* [libavif](https://github.com/AOMediaCodec/libavif) for AVIF driver\n* [libopendrive](https://github.com/DLR-TS/libOpenDRIVE) for XODR driver\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.10/MIGRATION_GUIDE.TXT)\n\n## Build\n\n* add html, man, latexpdf, doxygen, doxygen_check_warnings, clean_doc targets\n  (require doc/ subdirectory to be re-added) (#5484)\n* Java and CSharp bindings: do not build sample/tests programs if\n  BUILD_TESTING=OFF (#9857)\n* Allow following drivers to be built in new -DSTANDALONE=ON mode: MrSID,\n  JP2KAK, OCI, Arrow, Parquet, JP2OPENJPEG, TileDB, ECW, GeoRaster\n* Internal zlib: update to 1.3.1\n* Internal libpng: update to 1.6.43\n* Add scripts/check_binaries.py to detect unknown binaries and run it in CI\n\n## General changes\n\n* Reduce excessive precision %.18g to %.17g\n* Replace MIT license long text with 'SPDX-License-Identifier: MIT' (#10903)\n\n## GDAL 3.10.0\n\n### Port\n\n* Add VSIMemGenerateHiddenFilename() and use it extensively in whole code base\n* Add VSICopyFileRestartable() to allow restart of upload of large files\n* Add VSIMultipartUploadXXXXX() functions for multi-part upload\n* VSICopyFile(): detect error when reading source file, and delete output file\n  on error\n* VSI CopyFile() implementations: make them actually robust to pszSource==nullptr\n* VSIMallocAligned(): make behavior more predictable when nSize == 0\n* CPLHTTPFetch(): add a RETRY_CODES option (GDAL_HTTP_RETRY_CODES config option)\n  (#9441)\n* /vsicurl/: honor 'Cache-Control: no-cache' header\n* /vsicurl/: no longer forward Authorization header when doing redirection to\n  other hosts.\n* /vsiaz/: add BLOB_TYPE=BLOCK and CHUNK_SIZE options to VSIFOpenEx2L()\n* /vsis3/: avoid emitting a CPLError() when bSetError=false and access=r+b\n* /vsigs/: make sure access token with GOOGLE_APPLICATION_FILE in authorized_user\n  mode is cached\n* /vsimem/: make Read() error for a file not opened with read permissions\n* /vsimem/: more efficient SetLength()\n* /vsicrypt/: if opening in write-only mode, do so on the underlying file as well\n* /vsigzip/: sanitize Eof() detection\n* /vsigzip/: Read(): detect attempts to read more than 4 GB at once\n* Add VSIFErrorL() and VSIFClearErrL(), and implement them in file systems\n* VSIVirtualHandle: add a Interrupt() method and implement in in /vsicurl/ (and\n  related filesystems)\n* VSIWin32Handle: Read(): handle cleanly nSize * nCount > UINT32_MAX\n* Add VSIToCPLErrorWithMsg()\n* CPLHTTPFetch(): Add support for GDAL_HTTP_VERSION=2PRIOR_KNOWLEDGE\n* Add a cpl::contains(container, value) helper\n* CPLFormFilename()/CPLGetDirname()/CPLGetPath(): make it work with\n  'vsicurl/http://example.com?foo' type of filename, to fix Zarr driver\n* Thread pool: Use std::function as pool job and job queue function (#10505, #10628)\n* CPLHTTPGetOptionsFromEnv(): fallback to non-streaming filename with no path\n  specific option has been found on the streaming one\n* CPLSpawn() (unix): correctly return the exit() code of the process\n* CPLRecode(): make ISO-8859-2 and -15 and CP437/CP1250/CP1251/CP1252 to UTF-8\n  always available\n\n### Core\n\n* Add new GCI_ constants in particular for infra-red and SAR, and standardize\n  a band-level IMAGERY metadata domain with \"CENTRAL_WAVELENGTH_UM\" and \"FWHM_UM\"\n* Add GDALRasterBand::InterpolateAtPoint() and GDALRasterInterpolateAtPoint()\n* GDALRasterBand: add convenience ReadRaster() methods accepting std::vector<>\n* GDALIdentifyDriverEx(): pass nIdentifyFlags to GDALOpenInfo, so that drivers\n  can see which type of dataset is asked for\n* GDALIdentifyDriverEx(): transmit papszAllowedDrivers to Identify()\n* Deprecate GDALDestroyDriverManager() and OGRCleanupAll()\n* GDALNoDataMaskBand::IRasterIO(): speed optimization\n* Fix GDALDataTypeUnion() to check that the provided value fits into eDT\n* Add GDALIsValueExactAs()\n* GDALFindDataTypeForValue(): fix for integer values that can't be represented\n  as UInt64\n* GDALDataset::RasterIO() / GDALDatasetRasterIO[Ex](): accept a const int*\n  panBandList, instead of a int*\n* Make GDALDataset::IRasterIO() implementations ready to switch to use\n  const int* panBandList (enabled only if -DDGDAL_BANDMAP_TYPE_CONST_SAFE)\n* Add GDALOpenInfo::IsSingleAllowedDriver()\n* GDALDriver::QuietDeleteForCreateCopy(): do not set error state when attempting\n  to open datasets\n* Rasterband methods (histogram, statistics): make them compatible of a dataset\n  with more than 2 billion blocks\n* gdal_priv_templates.hpp: implement GDALIsValueInRange<[u]int64_t]>, and add GDALIsValueExactAs<>\n* GDALMDArray::GetResampled(): take into account good_wavelengths array for EMIT\n  dataset orthorectification\n* EXIF reader: strip trailing space/nul character in ASCII tags\n* GDALDatasetCopyWholeRaster(): fix SKIP_HOLES=YES in the interleaved case that\n  failed to detect holes\n* GDALDriver::DefaultCreateCopy(): recognize SKIP_HOLES=YES option and forward\n  it to GDALDatasetCopyWholeRaster()\n* Multidimensional API: add GDALMDArray::GetMeshGrid()\n* Multidim: AsClassicDataset(): make it able to retrieve dataset metadata from PAM\n* JSON TileMatrixSet parser: accept crs.uri and crs.wkt encodings (#10989)\n\n### Algorithms\n\n* Polygonize: optimizations to reduce runtime\n* Polygonize: make it catch out of memory situations\n* GDALRasterizeGeometries(): various robustness fixes\n* GDALPansharpenOperation::PansharpenResampleJobThreadFunc(): make it more robust\n* Contour: include minimum raster value as contour line when it exactly matches\n  the first level (#10167)\n* GDALWarpResolveWorkingDataType(): ignore srcNoDataValue if it doesn't fit into\n  the data type of the source band\n* Warper: fix shifted/aliased result with Lanczos resampling when XSCALE < 1 or\n  YSCALE < 1 (#11042)\n* Warper: optimize speed of Lanczos resampling in Byte case without any\n  masking/alpha\n* Warper: make sure to check that angular unit is degree for heuristics related\n  to geographic CRS (#10975)\n\n### Utilities\n\n* gdalinfo: add -nonodata and -nomask options\n* gdalinfo/ogrinfo: make --formats -json work (#10878)\n* gdalbuildvrt: add a -co switch (#11062)\n* gdal_translate: use GDALIsValueExactAs<> to check range of [u]int64 nodata\n* gdal_viewshed: multi-threaded optimization (#9991)\n* gdal_viewshed: support observers to left, right, above and below of input\n  raster (#10264, #10352)\n* gdal_viewshed: address potential issues with line-based interpolation (#10237)\n* gdal_viewshed: add support for cumulative viewshed (#10674)\n* gdal_contour: allow to use -fl with -i and -e (#10172)\n* gdal_contour: add a -gt option to define the transaction flush interval\n (default it to 100,000) (#10729)\n* gdallocationinfo: add -r resampling switch\n* gdalwarp: allow specifying units of warp memory (#10976)\n* Use GDALArgumentParser for gdal_contour, gdallocationinfo, gdaltindex,\n  ogrtindex, gdal_footprint, gdal_create, gdalmdiminfo, gdalmdimtranslate,\n  gdaldem, gdalmanage, ogrlineref, gdal_rasterize\n* GDALArgumentParser: support sub-parser\n* --formats option: detail abbreviation codes\n* crs2crs2grid.py: Update to work with current data output format from HTDP (#2655)\n\n### Raster drivers\n\nMulti-driver changes:\n * BAG, GTI, HDF5, OGCAPI, netCDF, S102/S104/S111, STACTA, STACIT, TileDB,\n   VICAR, WMS, WMTS, XYZ:\n   relax identification checks when papszAllowedDrivers[] contains only the\n   driver name\n\nDerived driver:\n * make it optional\n\nDIMAP driver:\n * for PNEO products, use the new color interpretations for the NIR, RedEdge\n   and DeepBlue/Coastal bands\n\nDTED driver:\n * added metadata items Security Control and Security Handling (#10173)\n\nEEDA/EEDAI drivers:\n * add a VSI_PATH_FOR_AUTH open option to allow using a /vsigs/ path-specific\n   GOOGLE_APPLICATION_CREDENTIALS option\n\nGeoPackage driver:\n * Implement ALTER TABLE RENAME for rasters (#10201)\n * use GDALIsValueInRange<> to avoid potential undefined behavior casts\n * in CreateCopy() without resampling, use IGetDataCoverageStatus() on the source\n   dataset\n * detect non-RGBA tiles fully at 0 and do not write them\n * implement IGetDataCoverageStatus()\n\nGRIB driver:\n * display hint to speed-up operations when using gdalinfo on a remote GRIB2\n   file with an .idx side car file\n\nGTI driver:\n * multi-threaded IRasterIO() for non-overlapping tiles\n * recognize STAC GeoParquet catalogs\n * implement GetDataCoverageStatus()\n * emit warning if bounding box from the tile's feature extent in the index does\n   not match actual bounding box of tile\n\nGTiff driver:\n * fix nMaxBits computation for Float32/Float64\n * DiscardLsb(): use GDALIsValueExactAs<> to check range of nodata\n * handle TIFF color map that uses a 256 multiplication factor and add open\n   option COLOR_TABLE_MULTIPLIER\n * clearer error when attempting to create external JPEG compressed overviews on\n   dataset with color table\n * honor GDAL_DISABLE_READDIR_ON_OPEN when working on a dataset opened with\n   OVERVIEW_LEVEL open option\n * better error messages when trying to create too-large untiled JPEG/WEBP\n   compressed files (or with huge tiles)\n * when reading a unrecognized value of color interpretation in the GDAL_METADATA,\n   expose it in a COLOR_INTERPRETATION metadata item\n * use main dataset GetSiblingFiles() for overviews\n * SRS writer: do not use EPSG:4326 if angular unit is not degree\n * make driver optional (but must be explicitly disabled)\n * tif_jxl: writer: propagate DISTANCE/QUALITY setting to extra channel\n * fix memory leak when trying to open COG in update mode\n * Internal libtiff: resync with upstream\n\nHEIF driver:\n * correctly initialize PAM for multiple images per file\n * make simple identification more robust (#10618)\n * make it possibly accept AVIF files (depends on libheif capabilities)\n\nHFA driver:\n * SRS reading: strip TOWGS84 when datum name is known, and use FindBestMatch()\n   to try to find known SRS (#10129)\n * make driver optional and buildable as a plugin\n\nHTTP driver:\n * make parsing of Content-Disposition header aware of double quotes around\n   filename=\n\nISIS3 driver:\n * Create(): open file(s) in wb+ mode if possible\n\nISG driver:\n *  Parse dms in ISG format\n\nJP2ECW driver:\n * report JPEG2000 tile size as GDAL block size for ECW SDK >= 5.1\n   (up to 2048x2048 and dataset dimensions)\n\nJP2KAK driver:\n * add Cycc=yes/no creation option to set YCbCr/YUV color space and set it to\n   YES by default (#10623)\n\nJP2Lura driver:\n * fix Identify() method\n * planned for removal in GDAL 3.11\n\nJPEG driver:\n * make sure not to expose DNG_UniqueCameraModel/DNG_CameraSerialNumber if the\n   corresponding EXIF tags are set at the same value\n * add support for reading Pix4DMapper CRS from XMP\n\nJPEGXL driver:\n * writer: propagate DISTANCE/QUALITY setting to extra channel (#11095)\n * writer: allow a minimum DISTANCE of 0.01, max of 25 and revise QUALITY to\n   DISTANCE formula (#11095)\n\nKMLSuperOverlay driver:\n * recognize <GroundOverlay> with <gx:LatLonQuad> forming a rectangle (#10629)\n\nMEM driver:\n * disable opening a dataset with MEM::: syntax by default (unless\n   GDAL_MEM_ENABLE_OPEN build or config option is set)\n\nMRF driver:\n * (~twice) faster LERC V1 encoding (#10188)\n * Add 64bit int support (#10265)\n * Allow open of MRF-in-TAR as MRF (#10331)\n * MRF/LERC: check that values are within target type range before casting\n * enable QB3_FTL mode when available (#10753)\n\nnetCDF driver:\n * multidim: add OpenMDArray() options to set up nc_set_var_chunk_cache()\n * use GDALIsValueExactAs<> to check range of [u]int64 nodata\n * do not override GDALPamDataset::TrySaveXML() to allow proper mixing of\n   classic and multidim PAM metadata\n * make sure CreateMetadataFromOtherVars() doesn't set PAM dirty flag\n * simplify identification logic by just checking runtime availability of\n   HDF4/HDF5 drivers.\n * CreateCopy(): fix taking into account NETCDF_DIM_EXTRA when source dataset is\n   not georeferenced\n * do not emit error when longitude axis unit is degrees_east and latitude axis\n   unit is degrees_north (#11009)\n\nNITF driver:\n * Create()/CreateCopy(): make sure that provided ABPP creation option is zero\n   left-padded\n * add an alias of existing ABPP creation option as NBITS; propagate NBITS/ABPP\n   creation option to JPEG2000 drivers (#10442)\n * remove ABPP field as NBITS IMAGE_STRUCTURE metadata item, instead of NBPP\n * CreateCopy(): support Blue,Green,Red[,other] color interpretation ordering\n   (#10508)\n * when built as plugin, make sure to register the RPFTOC and ECRGTOC drivers too\n\nOGCAPI driver:\n * combine CURL error message and data payload (when it exists) to form error\n   message\n\nOpenFileGDB driver:\n * Identify: if nOpenFlags == GDAL_OF_RASTER, and the dataset is local, check\n   file extensions to better identify\n * use GDALIsValueInRange<> to avoid potential undefined behavior casts\n\nPDF driver:\n * PDFium backend: update to PDFium 6677\n\nPDS4 driver:\n * Create(): open file(s) in wb+ mode if possible\n * flip image along horizontal axis when horizontal_display_direction = Right\n   to Left (#10429)\n\nS102 driver:\n * GDALPamDataset::XMLInit(): preserve DerivedDataset nodes that affect S102\n   PAM saving\n * add (limited) support for IHO S102 v3.0 specification (#10779)\n\nSAFE (Sentinel1):\n * report a FOOTPRINT metadata item\n * report failure to opening a band dataset as a warning\n\nSTACIT driver:\n * correctly return the STACIT driver as the dataset's driver, instead of VRT\n * support top-level Feature in addition to FeatureCollection\n\nSRTMHGT driver:\n * add support for reading/wrinting 0.5 deg resolution datasets (#10514)\n\nTileDB driver:\n * implement GetNoDataValue()/SetNoDataValue()\n * implement BuildOverviews() (for dataset created with CREATE_GROUP=YES)\n * Default to CREATE_GROUP=YES when creating datasets\n * allow to potentially read/write more than 2GB at once\n * IRasterIO(): fix checks related to pixel/line/band spacing for optimized code paths\n * CopySubDatasets(): support very large number of blocks and very large block size\n * CreateCopy(): return nullptr in error cases\n * CreateCopy(): do not force returned dataset to be in read-only mode\n * IRasterIO(): avoid reading out-of-raster with TILEDB_ATTRIBUTE creation option,\n   when the block size is not a multiple of the raster size\n\nVICAR driver:\n * handle VICAR header being located beyond 2 GB within PDS3 file\n\nVRT driver:\n * multi-thread IRasterIO() in 'simple' situations\n * reduce mutex contention, particularly useful for multithreading of remote\n   sources\n * GetDataCoverageStatus(): implement special case on a single source covering\n   the whole dataset\n * GDALAutoCreateWarpedVRT(): ignore src nodata value if it cannot be represented\n   in the source band data type\n * VRTComplexSource::RasterIO(): speed-up pixel copy in more cases\n * Warped VRT: instantiate overview bands in a lazy fashion for faster execution\n * VRTWarpedDataset::IRasterIO(): avoid a memory allocation and pixel copy when\n   possible\n * VRTWarpedDataset::IRasterIO(): optimize I/O when requesting whole image at a\n   resolution that doesn't match an overview\n * allow it to be partially disabled if GDAL built with GDAL_ENABLE_VRT_DRIVER=OFF\n * use GDAL_OF_VERBOSE_ERROR flag in vrt:// and pansharpened modes\n\nWMTS driver:\n * when reading a WMTS capabilities file, use in priority Operation.GetCapabilities.DCP.HTTP\n   to retrieve the URL (#10732)\n * try to be robust to servers using CRS instead of SRS in 1.1.1 mode (#10922)\n\nXYZ driver:\n * add COLUMN_ORDER open option\n\nZarr driver:\n * Zarr V2 creation: fix bug when creating dataset with partial blocks and need\n   to re-read them in the writing process when compression is involved (#11016)\n * Allow int64 attributes (#10065)\n * SerializeNumericNoData(): use CPLJSonObject::Add(uint64_t) to avoid\n   potential undefined behavior casts\n * Create(): remove created files / directories if an error occurs (#11023)\n\n## OGR 3.10.0\n\n### Core\n\n* OGRSQL and SQLite dialect: add STDDEV_POP() and STDDEV_SAMP() aggregate functions\n* SQL SQLite dialect: fix translation of \"x IN (NULL)\" with \"recent\"\n  (at least > 3.31.1) versions of SQLite3\n* OGRSQL: fix compliance of NOT and IN operators regarding NULL values\n* OGRSQL: SQL expression tree to string: add missing parenthesis that could make\n  further evaluation of operator priority wrong\n* OGRSQL: add SELECT expression [AS] OGR_STYLE HIDDEN to be able to specify\n  feature style string without generating a visible column (#10259)\n* OGRSQL: use Kahan-Babuska-Neumaier algorithm for accurate SUM()\n* OGRSQL: avoid going through string serialization for MIN(), MAX(), SUM(),\n  AVG() on numeric fields\n* OGRSQL: do not query geometry column(s) when not needed\n* SQLite SQL dialect: add MEDIAN, PERCENTILE, PERCENTILE_CONT and MODE\n  ordered-set aggregate functions\n* SQLite/GPKG: extend gdal_get_pixel_value()/gdal_get_layer_pixel_value()\n  to support an interpolation method\n* SQLite/GPKG: Add ST_Length(geom, use_ellipsoid)\n* GetNextArrowArray() generic implementation: avoid calling\n  VSI_MALLOC_ALIGNED_AUTO_VERBOSE() with a zero size\n* Arrow reading: generic code path (as used by GeoJSON): fix mis-handling of\n  timezones\n* OGRFeature: optimizations while accessing field count\n* OGRFeature: SetXXX() methods: more informative warning messages reporting\n  field name and value for out-of-range values\n* Add OGRGeometry::BufferEx() method\n* Add OGRGeometry::hasEmptyParts()/removeEmptyParts()\n* Add OGRCurve::reversePoints(), and deprecated OGRLinearRing::reverseWindingOrder()\n* Add OGRGeometryCollection::stealGeometry()\n* Add OGR_G_GeodesicLength() and OGRCurve/OGRSurface/OGRGeometryCollection::get_GeodesicLength()\n* make OGR_G_GetLength() work on surfaces, suming the length of their\n  exterior and interior rings.\n* OGR geometry classes: add a bool return type for methods that can fail\n* OGR geometry classes: mark default constructors directly in .h and removed\n  useless overridden destructor for better code generation\n* MakeValid(METHOD=STRUCTURE): make sure to return a MULTIPOLYGON if input is\n  MULTIPOLYGON (#10819)\n* GML geometry reader: add support for gml:OrientableCurve (#10301)\n* GenSQL layer: implement OLCFastGetArrowStream when underlying layer does and\n  for very simple SQL statements\n* WKT geometry importer: accept (non conformant) PointZ/PointZM without space as\n  generated by current QGIS versions\n* OGRLineString::SetPoint(): avoid int overflow if passing iPoint = INT_MAX\n* OGRCurveCollection::addCurveDirectly(): avoid int overflow if adding to a\n  already huge collection\n* OGRGeometryCollection::addGeometryDirectly(): avoid int overflow if adding to\n  a already huge collection\n* OGRGeometryFactory::transformWithOptions(): in WRAPDATELINE=YES mode, return a\n  multi polygon if a input multi polygon has been provided (#10686)\n* OGRGeometryFactory::transformWithOptions(): deal with polar or anti-meridian\n  discontinuities when going from projected to (any) geographic CRS\n* OGRProjCT::TransformWithErrorCodes(): speed-up by avoiding OSRGetProjTLSContext()\n  when possible\n* Add OGRWKBTransform() for in-place coordinate transformation of WKB geometries\n* OGR_GreatCircle_ API: do not hardcode Earth radius\n* ogr_core.h: suppress warning when building with -Wpedantic for C < 23 (#2322)\n\n### OGRSpatialReference\n\n* OGRSpatialReference::FindMatches(): improve when input SRS doesn't have\n  expected axis order\n* OGRSpatialReference::EPSGTreatsAsLatLong()/EPSGTreatsAsNorthingEasting():\n  remove the check on the EPSG authority\n* Add OSRGetAuthorityListFromDatabase() to get the list of CRS authorities used\n  in the PROJ database.\n\n### Utilities\n\n* ogr2ogr: add -skipinvalid to skip features whose geometry is not valid w.r.t\n  Simple Features\n* ogr2ogr: error out if WKT argument of -clipsrc/-clipdst is an invalid geometry\n  (#10289)\n* ogr2ogr: speed-up -clipsrc/-clipdst by avoiding GEOS when possible\n* ogr2ogr: speed-up -t_srs in Arrow code path using multi-threaded coordinate\n  transformation\n* ogr2ogr: optim: call GetArrowStream() only once on source layer when using\n  Arrow interface\n* ogr2ogr: fix -explodecollections on empty geometries (#11067)\n* validate_gpkg.py: make it robust to CURRENT_TIMESTAMP instead of 'now'\n\n### Vector drivers\n\nMulti-driver changes:\n * Arrow, CSV, ESRIJSON, JSONFG, GeoJSON, GeoJSONSeq, GML, GTFS, LVBAG, NAS,\n   OAPIF, TopoJSON:\n   relax identificationchecks when papszAllowedDrivers[] contains only the\n   driver name\n * GeoJSON like driver: avoid fetching unrecognized HTTP dataset more than once\n\nArrow ecosystem:\n * Arrow/Parquet/generic arrow: add write support for arrow.json extension\n * Add a Arrow VSI file system (for libarrow >= 16.0) allowing to use GDAL\n   VSI file systems as libarrow compatible file systems.\n * Add (minimum) support for libarrow 18.0.0\n\nArrow driver\n * add read support for StringView and BinaryView (but not in OGR generic Arrow\n   code)\n * use recommended item names for GeoArrow [multi]line, [multi]polygon, multipoint\n\nCSV driver:\n * error out if invalid/inconsistent value for GEOMETRY layer creation option\n   (#10055)\n * allow inf, -inf and nan as numeric values\n * emit warning when reading invalid WKT (#10496)\n\nCSW driver:\n * make it buildable as plugin\n\nDGN driver:\n * add ENCODING open option and creation option (#10630)\n\nDXF driver:\n * add a DXF_CLOSED_LINE_AS_POLYGON=YES/NO configuration option (#10153)\n\nESRIJSON driver:\n * make it able to parse response of some CadastralSpecialServices APIs (#9996)\n * use 'alias' field member to set OGR alternative field name\n\nFileGDB/OpenFileGDB drivers:\n * update (and unify) list of reserved keywords that can't be used for column\n   and table names (#11094)\n\nJSONFG driver:\n * avoid Polyhedron/Prism geometry instantiation during initial scan\n\nGeoJSON driver:\n * make it (and companion TopoJSON, ESRIJSON, GeoJSONSeq) optional (but must be\n   explicitly disabled) and buildable as plugin\n * avoid false-positive identification as TopoJSON\n\nGeoJSONSeq driver:\n * add a WRITE_BBOX layer creation option\n\nGML driver:\n * XSD parser: fix to resolve schema imports using open option USE_SCHEMA_IMPORT\n   (#10500)\n * make it buildable as plugin if NAS driver is explicitly disabled\n * add a GML_DOWNLOAD_SCHEMA config option matching the DOWNLOAD_SCHEMA open\n   option (and deprecate undocumented GML_DOWNLOAD_WFS_SCHEMA)\n\nGPKG driver:\n * prevent from creating field with same name, or with the name of the geometry\n   field\n * CreateField(): check we are not reaching the max number of fields\n * SQLite/GPKG: turn on SQLite 'PRAGMA secure_delete=1' by default\n\nHANA driver:\n * Add support for REAL_VECTOR type (#10499)\n * Add support for fast extent estimation (#10543)\n\nKML driver:\n * make it optional and buildable as plugin\n * writer: generate a Placemark id\n\nLIBKML driver:\n * writer: validate longitude, latitude to be in range (#10483)\n * writer: set name of NetworkLink from NAME layer creation option (#10507)\n * writer: dump feature when its geometry cannot be written (#10829)\n * on reading of directory KML datasets, don't consider the root doc.kml as a layer\n\nMapInfo driver:\n * make it optional and buildable as plugin\n * implement read/write support for MapInfo logical type to OGR OFSTBoolean\n * Add UTF-8 encoding\n * Disable table fields \"laundering\" for non-neutral charset\n * Add 'STRICT_FIELDS_NAME_LAUNDERING' creation option\n * better deal with EPSG:3301 'Estonian Coordinate System of 1997'\n\nMiramon driver:\n * various memory leak fixes on corrupted datasets\n\nOAPIF driver:\n * combine CURL error message and data payload (when it exists) to form error\n   message (#10653)\n * make it buildable as plugin (independently of WFS driver)\n * add a DATETIME open option (#10909)\n\nOCI driver:\n * OCI: use TIMESTAMP(3) and tweak NLS_TIME[STAMP][_TZ]_FORMAT to accept\n   milliseconds (#11057)\n\nODBC driver:\n * add GDAL_DMD_LONGNAME\n\nOpenFileGDB driver:\n * add partial read-only support for tables with 64-bit ObjectIDs\n * more informative warning message when opening a dataset with a .cdf file and\n   FileGDB driver isn't there\n * error out explicitly when attempting to create an index on multiple columns\n\nOSM driver:\n * add a \\[general\\] section at top of osmconf.ini to make it INI compliant (and\n   Python's configparser friendly)\n * actually reserve memory for /vsimem/ temp files\n\nParquet driver:\n * dataset (multi-file typically) mode: enable use of bounding box columns\n   for spatial filter; optimize spatial filtering\n * dataset mode: implement SetIgnoredFields() and SetAttributeFilter()\n * dataset mode: detect bbox geometry column when opening current Overture Maps\n * dataset mode: make sure all files are closed before closing the GDALDataset\n\nPDF driver:\n * reader: fixes to handle recursive resources, /OC property attached to a\n   XObjet and an empty UTF-16 layer name (#11034)\n\nPostgreSQL driver:\n * OGR_PG_SKIP_CONFLICTS: optionally insert with ON CONFLICT DO NOTHING (#10156)\n * avoid error when the original search_path is empty\n\nShapefile driver:\n * make it optional (but must be explicitly disabled) and buildable as plugin\n * Shapelib: resync'ed with upstream\n\nSQLite driver:\n * run deferred table creation before StartTransaction\n * avoid some potential O(n^2) issues with n=field_count\n\nTileDB driver:\n * use GEOM_WKB type when creating geometry columns with TileDB >= 2.21\n\nVRT driver:\n * OGRWarpedVRT: use faster SetFrom() implementation (#10765)\n * UnionLayer: avoid some potential O(n^2) issues with n=field_count\n\nWFS driver:\n * make it buildable as plugin\n\n## SWIG bindings\n\n* Python/Java: replace sprintf() with snprintf() to avoid warnings on OSX\n* fix memleak in gdal.GetConfigOptions()\n\n### Python bindings\n\n* generate launcher shell/bat scripts for Python scripts in /swig/python/bin\n* make GetStatistics() and ComputeStatistics() return None in case of error (#10462)\n* Make ogr.DataSource a synonym of gdal.Dataset\n* Remove ogr.Driver\n* do not emit warnings about not having used UseExceptions() if run under\n  gdal.ExceptionMgr()\n* avoid gdal.ExceptionMgr() to re-throw a GDAL exception already caught under it\n* avoid exception emitted and caught under gdal.ExceptionMgr() to cause later issues\n* Python scripts: use local exception manager, instead of global UseExceptions()\n* check validity of GDALAccess flag passed to gdal.Open()\n* make MDArray.Write(array_of_strings) work with a 0-d string variable\n* Avoid linear scan in gdal_array.NumericTypeCodeToGDALTypeCode (#10694)\n* Dataset.Close(): invalidate children before closing dataset\n* __init__.py: remove calls to warnings.simplefilter() (#11140)\n* fix compatibility issue with SWIG 4.3.0 and PYTHONWARNINGS=error\n\n### Java bindings\n\n* Make sure a valid UTF-8 string is passed to NewStringUTF()\n* OGR module: add various xxxxAsByteArray() method that return a byte[] when\n  content is not UTF-8 (#10521, #10630)\n\n# GDAL/OGR 3.9.3 Release Notes\n\nGDAL 3.9.3 is a bugfix release.\n\n## Build\n\n* Java bindings: remove unneeded dependency on Java AWT\n* Use the right header for std::endian cpl_conv.cpp (C++20 compilation)\n* Fix build failure with upstream netcdf caused by _FillValue macro renaming\n\n## GDAL 3.9.3\n\n### Port\n\n* /vsitar/: fix support of /vsitar/ of /vsitar/ (#10821)\n* CPLGetValueType(): do not recognize '01' as integer, but as string\n  (Toblerity/Fiona#1454)\n\n### Algorithms\n\n* Geoloc array: fix bad usage of path API that resulted in temporary files\n  not being created where expected (#10671)\n* GDALCreateGeoLocTransformer(): fix inverted logic to decide for a debug\n  message\n* GDALCreateGeoLocTransformer(): increase threshold to use GTiff geoloc\n  working datasets to 24 megapixels (#10809)\n* GDALGeoLocDatasetAccessors: use smaller, but more, cached tiles (#10809)\n* Warper: fix too lax heuristics about antimeridian warping for Avg/Sum/Q1/\n  Q3/Mode algorithms (#10892)\n\n### Core\n\n* Fix GDALDataTypeUnion() to check that the provided value fits into eDT\n* GDALRegenerateOverviewsMultiBand(): make sure than when computing large\n  reduction factors (like > 1024) on huge rasters does not lead to excessive\n  memory requirements\n* Overview: fix nearest resampling to be exact with all data types (#10758).\n  Also make sure that for other resampling methods, the working data type\n  is large enough (e.g using Float64 for Int32/UInt32/Int64/UInt64).\n\n### Raster utilities\n\n* gdal_translate/GDALOverviewDataset: fix half-pixel shift issue when\n  rescaling RPC (#10600)\n* gdaldem color-relief: fix issues with entry at 0 and -exact_color_entry\n  mode, and other issues\n* gdalwarp: fix crash/infinite loop when using -tr one a 1x1 blank raster\n  (3.8.0 regression)\n* gdalwarp: be more robust to numerical instability when selecting overviews\n  (#10873)\n* gdal_contour: Fix regression when fixed level == raster max (#10854)\n\n### Raster drivers\n\nDIMAP driver:\n * emit verbose error message if not able to open image file (#10928)\n\nGeoRaster driver:\n * Preserve quote in the connection string to the GeoRaster driver so that\n   Oracle Database wallet can be supported (#10869)\n\nGRIB:\n * adjust longitude range from \\[180, xxx\\] to \\[-180, xxx\\] (#10655)\n\nGTiff driver:\n * do not query TIFFTAG_TRANSFERFUNCTION if m_nBitsPerSample > 24 (#10875)\n * fix to not delete DIMAP XML files when cleaning overviews on a DIMAP2\n   GeoTIFF file with external overviews\n\nJPEG driver:\n * Fix inverted handling of GDAL_ERROR_ON_LIBJPEG_WARNING\n\nJP2KAK driver:\n * fix data corruption when creating multi-band tiled with the stripe\n   compressor code path (#10598)\n\nKEA driver:\n * fix overview writing\n\nMrSID driver:\n * prevent infinite recursion in IRasterIO() in some cases (#10697)\n\nnetCDF driver:\n * honour BAND_NAMES creation option in CreateCopy() (#10646)\n\nNITF driver:\n * properly take into account comma-separated list of values for JPEG2000\n   QUALITY when JPEG2000_DRIVER=JP2OpenJPEG (#10927)\n * fix parsing of CSCSDB DES\n\nOpenFileGDB raster:\n * do not generate debug 'tmp.jpg' file when reading JPEG tiles\n\nPDF driver:\n * avoid 'Non closed ring detected' warning when reading neatlines from OGC\n   Best Practice encoding\n\nTileDB driver:\n * make Identify() method return false if passed object is not a directory\n\nVRT driver:\n * VRTSourcedRasterBand::IRasterIO(): initialize output buffer to nodata\n   value if VRT band type is Int64 or UInt64\n * VRTComplexSource::RasterIO(): use double working data type for more\n   source or VRT data types\n * VRTComplexSource::RasterIO(): speed-up pixel copy in more cases (#10809)\n * VRTProcessedDataset: fix issue when computing RasterIO window on\n   auxiliary datasets on right-most/bottom-most tiles\n\n## OGR 3.9.3\n\n### Core\n\n* Make OGRSFDriver::TestCapability(ODrCCreateDataSource) work with\n  defered-loaded drivers (#10783)\n* MEM layer: fix UpdateFeature() that didn't mark the layer as updated,\n  which caused GeoJSON files to not be updated (qgis/QGIS#57736)\n\n### Vector drivers\n\nFlatGeobuf driver:\n * Fix reading of conformant single-part MultiLineString (#10774)\n\nGeoPackage driver:\n * OGR_GPKG_FillArrowArray_Step(): more rigorous locking\n\nGMLAS driver:\n * make it robust to XML billion laugh attack\n\nJSONFG driver:\n * accept coordRefSys starting with https://www.opengis.net/def/crs/\n\nNAS driver:\n * make it robust to XML billion laugh attack\n\nOpenFileGDB driver:\n * add missing GetIndexCount() in FileGDBTable::CreateIndex\n * fix writing a Int32 field with value -21121\n * exclude straight line segments when parsing arcs (#10763)\n\nParquet driver:\n * fix crash when using SetIgnoredFields() + SetSpatialFilter() on\n   GEOMETRY_ENCODING=GEOARROW layers with a covering bounding box\n   (qgis/QGIS#58086)\n\nPostgreSQL/PGDump drivers:\n * properly truncates identifiers exactly of 64 characters (#10907)\n\nPostgreSQL driver:\n * ensure current user has superuser privilege beore attemption to create\n   event trigger for metadata table (#10925)\n\nShapefile driver:\n * Add new shapelib API functions to the symbol rename header\n\nSQLite/GPKG drivers:\n * fix potential double-free issue when concurrently closing datasets when\n   Spatialite is available\n\n## Python bindings\n\n* Silence SWIG 'detected a memory leak' message (#4907)\n* fix passing a dict value to the transformerOptions argument of gdal.Warp()\n  (#10919)\n\n# GDAL/OGR 3.9.2 Release Notes\n\nGDAL 3.9.2 is a bugfix release.\n\n## Build\n\n* Fix compilation against openssl-libs-3.2.2-3 of fedora:rawhide\n* Fix compilation against libarchive-3.3.3-5 as shipped by RHEL 8 (#10428)\n* Fix -Wnull-dereference warnings of gcc 14.2\n\n## GDAL 3.9.2\n\n### Port\n\n* CPLFormFilename()/CPLGetDirname()/CPLGetPath(): make it work with\n  'vsicurl/http://example.com?foo' type of filename, to fix Zarr driver\n\n### Core\n\n* GDALCopyWords(): Fix double->uint64 when input value > UINT64_MAX that was\n  wrongly converted to 0\n\n### Raster utilities\n\n* gdalinfo_output.schema.json: pin stac-extensions/eo to v1.1.0\n* gdal_translate: fix -a_nodata to accept '-inf' as input (3.9.0 regression)\n* gdalwarp: fix -srcnodata/-dstnodata to accept negative value in first position\n  (3.9.0 regression)\n* gdalbuildvrt: -fix -srcnodata/-vrtnodata to accept negative value in first\n  position (3.9.0 regression)\n* gdallocationinfo: avoid extra newline character in -valonly mode if coordinate\n  is outside raster extent (3.9.0 regression)\n* gdal_rasterize: on a int64 band, set nodata value as int64 (#10306)\n* gdal_rasterize: restrict to defaulting to Int64 raster data type only if\n  output driver supports it (and the burned field is Int64)\n* gdal_retile: error out with clear message when trying to retile a file with a\n  geotransform with rotation terms, or several input files with inconsistent SRS\n  (#10333)\n* gdallocationinfo: in -E echo mode, always report input coordinates, not pixel,line\n* gdal2tiles: update links in generate_leaflet(), remove OSM Toner (#10304)\n* gdal2tiles: uUse correct OpenStreetMap tile url (openstreetmap/operations#737)\n* gdal2tiles: fix exception with --nodata-values-pct-threshold but not\n  --excluded-values on a multi-band raster\n\n### Raster drivers\n\nCOG driver:\n * properly deal with mask bands w.r.t resampling when generating JPEG output,\n   or when input has a mask band (3.5 regression) (#10536)\n\nGTI driver:\n * start looking for OVERVIEW_<idx>_xxxx metadata items at index 0\n * automatically add overviews of overviews, unless the OVERVIEW_LEVEL=NONE open\n   option is specified\n\nGTiff driver:\n * make SetNoDataValue(double) work on a Int64/UInt64 band (#10306)\n\nKEA driver:\n * don't derive from PAM classes (#10355)\n\nJPEG driver:\n * ReadFLIRMetadata(): avoid potential infinite loop\n\nnetCDF driver:\n * multidim: fix use-after-free on string variables in ReadOneElement()\n\nNITF driver:\n * 12-bit JPEG writer: fix crash if raster width > block width (#10441)\n\nOGCAPI driver:\n * do not emit 'Server does not support specified IMAGE_FORMAT: AUTO' when\n   opening a vector layer with MVT tiles only\n * fix reading encodingInfo/dataType for Coverage API\n\nSRTMHGT driver:\n * add support for 0.5 deg resolution datasets (#10514)\n\nVRT driver:\n * fix reading from virtual overviews when SrcRect / DstRect elements are missing\n\nWMTS driver:\n * make sure not to request tiles outside of tile matrix / tile matrix limits,\n   if the dataset extent goes beyond them\n * clip layer extent with union of extent of tile matrices (#10348)\n\n## OGR 3.9.2\n\n### Core\n\n* WKT geometry importer: accept (non conformant) PointZ/PointZM without space as\n  generated by current QGIS versions\n* OGR SQL: do not make backslash a special character inside single-quoted\n  strings, to improve compliance with SQL92 (#10416)\n* OGRSQL: return in error when 'Did not find end-of-string character' is emitted\n  (#10515)\n\n### OGRSpatialReference\n\n* EPSGTreatsAsNorthingEasting(): make it work correctly with compound CRS\n\n### Vector drivers\n\nGeoJSON driver:\n * writer: make sure geometry is reprojected even when it is invalid after\n   coordinate rounding (3.9.0 regression) (qgis/QGIS#58169)\n\nGML driver:\n * writer: fix missing SRS in Featurecollection's boundedBy element (3.9.1\n   regression) (#10332)\n\nGMLAS driver:\n * avoid crash on a OSSFuzz generated xsd (ossfuzz#70511)\n\nGTFS:\n * fix error when applying an attribute filter on a field whose advertized data\n   type is not string (duckdb/duckdb_spatial#343)\n\nJSONFG driver:\n * fix reading non-FeatureCollection documents larger than 6,000 bytes (#10525)\n\nLIBKML driver:\n * fix writing a .kmz to cloud storage (#10313)\n * fix LIBKML_RESOLVE_STYLE=YES when reading a KML file with dataset-level\n   styles (3.9.1 regression) (qgis/qgis#58208)\n * fix reading/writing style URL in KMZ files (#10478)\n\nMiraMonVector driver:\n * fix oss-fuzz#70860\n\nOAPIF driver:\n * fix resolving of relative links (#10410)\n\nOpenFileGDB driver:\n * fix attribute filter when an equality comparison is involved with a field\n   with an index created with a LOWER(field_name) expression (#10345)\n\nOSM driver:\n * avoid creating /vsimem/osm_importer directory (#10566)\n\nPG driver:\n * fix ogr2ogr scenarios to PostgreSQL when there are several input layer names\n   like schema_name.layer_name (3.9.0 regression)\n * fix support for geometry/geography OID in range between 2^31 and 2^32 (#10486)\n\nPG/PGDump drivers:\n * make sure spatial index name is unique, even if several tables have a long\n   enough prefix (#10522, #7629)\n\nShapefile driver:\n * fix recognizing an empty string as a NULL date (#10405)\n * fix off-by-one write heap buffer overflow when deleting exactly 128, 232,\n   etc. features and repacking (#10451)\n\nXLSX driver:\n * support documents whose XML elements have a prefix (duckdb\n/duckdb_spatial#362)\n\n## Python bindings\n\n* fix typos in gdal.Footprint() help message\n* make MDArray.Write(array_of_strings) work with a 0-d string variable\n\n# GDAL/OGR 3.9.1 Release Notes\n\nGDAL 3.9.1 is a bugfix release.\n\n## Build\n\n* PDF: fix build with PoDoFo >= 0.10 with C++20 compilation (#9875)\n* PDF: fix build against PoDoFo with MSYS2 UCRT64 and CLANG64 (#9976)\n* Fix compiler errors in C++20 and C++23 modes\n* Fix compiler warnings with gcc 14\n* CMake: add infrastructure so we can build plugins that can be loaded against\n  a libgdal that has been without any support for them.\n  Note: this is an ABI break for in-tree drivers, with deferred loading capability, when built as plugin. That is such a driver built against\n  GDAL 3.9.0 won't be able to be loaded by GDAL 3.9.1.\n\n## GDAL 3.9.1\n\n### Port\n\n* /vsis3/: include AWS_CONTAINER_CREDENTIALS_TOKEN in container credentials\n flow (#9881)\n* VSIStatL(): allow trailing slash on mingw64 builds\n\n### Algorithms\n\n* Warper: relax longitude extend check to decide whether we can insert a\n  CENTER_LONG wrapping longitude\n* GCPTransformer: accept only 2 points for order=1 transformer (#10074)\n* GDALContourGenerateEx(): validate LEVEL_INTERVAL option (#10103)\n* GDALTranslate(): use directly generated VRT even if BLOCKXSIZE/BLOCKYSIZE\n  creation options are specified\n* GDALSieveFilter(): avoid assert() when all pixels are masked (3.9.0 regression)\n  (raster/rasterio#3101)\n* Overview generation: fix multi-threaded bug, resulting in locks/crashes with\n  GeoPackage in particular (#10245)\n\n### Core\n\n* GDALIdentifyDriverEx(): transmit papszAllowedDrivers to Identify() (#9946)\n* GDALNoDataMaskBand::IRasterIO(): fix crash on memory allocation failure\n  (rasterio/rasterio#3028)\n* Rasterband methods (histogram, statistics): make them compatible of a dataset\n  with more 2 billion blocks\n\n### Raster utilities\n\n* Add argument name after 'Too few arguments' error (#10011)\n* gdalwarp: fix help message for -wm (#9960)\n* gdalinfo text output: avoid weird truncation of coordinate epoch when\n  its value is {year}.0\n* Python utilities: avoid UseExceptions() related deprecation warning when\n  launched from launcher shell scripts (#10010)\n\n### Raster drivers\n\nAAIGRID driver:\n * fix forcing datatype to Float32 when NODATA_value is nan and pixel values\n   look as ints\n\nESRIC driver:\n * ingest more bytes to be able to identify more datasets (#10006)\n * properly takes into account minLOD for .tpkx (#10229)\n * validate tile size\n * add a EXTENT_SOURCE open option and default to FULL_EXTENT (#10229)\n\nGRIB driver:\n * make .idx reading compatible of /vsisubfile/ (#10214)\n\nGTiff driver:\n * fix reading angular projection parameters in non-degree unit\n   (typically grads), when reading projection from ProjXXXXGeoKeys (#10154)\n * fix writing angular projection parameters in non-degree unit (typically\n   grads), when writing ProjXXXXGeoKeys\n * multithreaded reading: avoid emitting tons of warnings when ExtraSamples tag\n   is missing\n * writer: limit number of GCPs in GeoTIFF tag to 10922 to avoid overflowing\n   uint16_t (#10164)\n\nHDF5 driver:\n * add support for libhdf5 >= 1.14.4.2 when built with Float16\n * make logic to assign per-band attribute more generic\n\nnetCDF driver:\n * netCDFAttribute::IWrite(): fix writing an array of (NC4) strings, from a\n   non-string array\n * try to better round geotransform values when read from single-precsion\n   lon/lat float arrays\n\nSTACIT driver:\n * add a OVERLAP_STRATEGY opening option to determine how to handle sources\n   fully overlapping others, and taking into account nodata values\n * honour MAX_ITEMS=0 as meaning unlimited as documented\n * implement paging using POST method\n\nVRT driver:\n * fix processing of LUT where the first source value is NaN\n * fix serialization of separatable kernel in VRTKernelFilteredSource (#10253)\n\nZarr driver:\n * SerializeNumericNoData(): use CPLJSonObject::Add(uint64_t) to avoid potential\n   undefined behavior casts\n\n## OGR 3.9.1\n\n### Core\n\n* OGRSQL: validate column name in COUNT(field_name) and error out if it\n  doesn't exist (#9972)\n* OGR SQL: fix crash when the ON expression of a JOIN contains OGR special\n  fields (in particular feature id)\n* OGR layer algebra: honour PROMOTE_TO_MULTI=YES for Points\n* OGRFeature::SetField(int, double): avoid UndefinedBehavior when passing NaN\n* OGRFeature::SetField(int, GIntBig): avoid UndefinedBehavior when passing value\n  close to INT64_MAX\n* OGRLayer::WriteArrowBatch(): avoid UndefinedBehavior when trying to convert\n  NaN to Int64\n\n### OGRSpatialReference\n\n* importFromESRI() Arc/Info 7 .prj: fix importing LAMBERT_AZIMUTHAL with a\n  'radius of the sphere of reference'\n* workaround bug of PROJ < 9.5 regarding wrong conversion id for UTM south\n* importFromUSGS(): use plain WGS84 datum with WGS84 ellipsoid, and identify\n  EPSG code\n\n### Vector utilities\n\n* ogrinfo: fix error message when not specifying a filename\n* ogrinfo text output: avoid weird truncation of coordinate epoch when\n  its value is {year}.0\n* ogr2ogr: do not call CreateLayer() with a geom field defn of type wkbNone\n  (#10071)\n* ogr2ogr: error out if GCP transform creation fails (#10073)\n\n### Vector drivers\n\nAVCBin driver:\n * avoid integer overflow (ossfuzz #68814)\n\nDXF driver:\n * avoid slight numeric imprecision with closed lwpolyline and arcs (#10153)\n\nESRIJSON driver:\n * do not set width on DateTime field\n * fix paging when URL contains f=pjson instead of f=json (#10094)\n\nFileGDB driver:\n * be robust to be called with a geometry field definition of type wkbNone\n   (#10071)\n\nFlatGeoBuf driver:\n * more explicit error message in case of feature geometry type != layer\n   geometry type (#9893)\n\nGeoJSON driver:\n * do not recognize GeoJSON files with a featureType feature property as JSONFG\n   (#9946)\n * make it possible with -if/papszAllowedDrivers to force opening a JSONFG file\n   with the GeoJSON driver\n * implement IUpdateFeature() that was broken up to now\n * declare missing capabilities DELETE_FIELD, REORDER_FIELDS,\n   ALTER_FIELD_DEFN_FLAGS\n\nGML driver:\n * fix memory leak due do xlink:href substitution in a non-nominal case\n   (ossfuzz #68850)\n * GML_SKIP_RESOLVE_ELEMS=HUGE: keep gml:id in .resolved.gml file\n * avoid assertion due to trying to load existing .gfs file after reading\n   .resolved.gml (#10015)\n * fix issue with nested elements with identical names in\n   GML_SKIP_RESOLVE_ELEMS=HUGE mode (#10015)\n * make sure SRS is detected when using GML_SKIP_RESOLVE_ELEMS=HUGE on a AIXM\n   file, otherwise GML_SWAP_COORDINATES might not work correctly\n\nJSONFG driver:\n * dataset identification: recognize more JSON-FG specification version\n\nLIBKML driver:\n * fix handling of styleUrl element referencing to an external document (#9975)\n * fix performance issue when writing large files (#10138)\n\nMiraMonVector driver:\n * adding which polygon cycles the linestring in the linestring metadata information (#9885)\n * Adding more matches in the look-up table MM_m_idofic.csv\n * Fixing error in linestring (from not polygon) metadata file\n * Robustness fixes (ossfuzz #68809)\n * fix a case of sensitive comparison\n * fix MMResetFeatureRecord\n * fix accepted metadata versions/subversions\n\nMapInfo:\n * .tab: AlterFieldDefn(): fix data corruption when altering (for example\n   renaming) a Integer/Float32 field of size 4 (or Integer64/Float64 field of\n   size 8\n * avoid potential double-free (ossfuzz#69332, ossfuzz#69334)\n\nnetCDF driver:\n * writer: use CF-1.8 with FORMAT=NC4 and GEOMETRY_ENCODING=WKT\n\nODS driver:\n * implement IUpdateFeature() that was broken up to now\n * declare missing capabilities DELETE_FIELD, REORDER_FIELDS,\n   ALTER_FIELD_DEFN_FLAGS\n * fix CreateFeature() implementation when a FID is set\n\nOpenFileGDB driver:\n * writer: .gdbtable header must be rewritten when updating an existing feature\n   at the end of file (otherwise resulting file might not be readable by\n   Esri software)\n * detect and try to repair corruption of .gdbtable header related to above item\n * BuildSRS(): do not use CPLErrorReset()\n\nParquet driver:\n * GeoParquet: always write version=1.1.0\n\nPDF driver:\n * fix wrong order of matrix multiplication for 'cm' operator... (#9870)\n * make ExploreContentsNonStructured() be able to parse OGCs as generated\n   by ArcGIS 12.9 (fixes #9870)\n * just ignore unknown objects referenced by /Do (#9870)\n\nPMTiles driver:\n * writer: fix crash in ogr2ogr (or Arrow based workflows) from GeoPackage/\n   GeoParquet to PMTiles (#10199)\n\nPG driver:\n * avoid errors related to ogr_system_tables.metadata when user has not enough\n   permissions (#9994)\n * really honor OGR_PG_ENABLE_METADATA=NO in SerializeMetadata()\n\nSQLite/GPKG drivers\n * detect UNIQUE constraints expressed as a ', CONSTRAINT name UNIQUE (column_name)'\n   at the end of CREATE TABLE (qgis/QGIS#57823)\n\nXLSX driver:\n * implement IUpdateFeature() that was broken up to now\n * declare missing capabilities DELETE_FIELD, REORDER_FIELDS,\n   ALTER_FIELD_DEFN_FLAGS\n * fix CreateFeature() implementation when a FID is set\n\n## Python bindings\n\n* do not emit warnings about not having used [Dont]UseExceptions() if run under\n  gdal.ExceptionMgr()\n* avoid gdal.ExceptionMgr() to re-throw a GDAL exception already caught under it\n* avoid exception emitted and caught under gdal.ExceptionMgr() to cause later\n  issues\n* Avoid crash when using orphaned subgeometry (#9920)\n* make them compatible of SWIG 4.3.0dev\n\n\n# GDAL/OGR 3.9.0 Releases Notes\n\nGDAL/OGR 3.9.0 is a feature release.\nThose notes include changes since GDAL 3.8.0, but not already included in a\nGDAL 3.8.x bugfix release.\n\n## In a nutshell...\n\n* [RFC 96](https://gdal.org/development/rfc/rfc96_deferred_plugin_loading.html):\n  Deferred C++ plugin loading\n* [RFC 97](https://gdal.org/development/rfc/rfc97_feature_and_fielddefn_sealing.html):\n  OGRFeatureDefn, OGRFieldDefn and OGRGeomFieldDefn \"sealing\"\n* [RFC 98](https://gdal.org/development/rfc/rfc98_build_requirements_gdal_3_9.html):\n  Build requirements for GDAL 3.9\n* [RFC 99](https://gdal.org/development/rfc/rfc99_geometry_coordinate_precision.html):\n  Geometry coordinate precision\n* Add [S104](https://gdal.org/drivers/raster/s104.html) (Water Level Information\n  for Surface Navigation Product) and\n  [S111](https://gdal.org/drivers/raster/s111.html) (Surface Currents Product)\n  raster read-only drivers (required libhdf5)\n* Add raster [GTI](https://gdal.org/drivers/raster/gti.html) (GDAL Raster Tile\n  Index) driver to support catalogs with huge number of sources.\n* Add vector [MiraMonVector](https://gdal.org/drivers/vector/miramon.html)\n  read/creation driver (#9688)\n* Deprecated ARG driver has been removed (#7920)\n* Code linting\n\n## Build\n\n* CMake: add ``[GDAL|OGR]_REGISTER_DRIVER_<driver_name>_FOR_LATER_PLUGIN``\n  variables (RFC 96)\n* CMake: Bump max compatible version to 3.28\n* CMake: add a way of defining an external deferred driver by setting one or\n  several ADD_EXTERNAL_DEFERRED_PLUGIN_XXX CMake variables (RFC 96)\n* CMake: error out if a driver has been asked as a plugin, but conditions are not met\n* CMake: rework PROJ detection\n* CMAKE_UNITY_BUILD=YES builds are possible, but not recommended for production\n* gdal.cmake: set -DDEBUG for CMAKE_BUILD_TYPE=Debug for Windows builds as well\n* CMake: add GDAL_FIND_PACKAGE_OpenJPEG_MODE and GDAL_FIND_PACKAGE_PROJ_MODE\n  variables\n* FindSQLite3.cmake: avoid repeating finding `SQLite3_INCLUDE_DIR`/\n `SQLite3_LIBRARY` if existed.\n* Add compatibility for Intel Compiler 2024.0.2.29\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.8/MIGRATION_GUIDE.TXT)\n\n## Changes in installed files\n\n* data/MM_m_idofic.csv: new\n* data/gdalvrtti.xsd: new\n* data/pci_datum.txt and data/pci_ellips.txt: updated (#8034)\n* include/cpl_minizip_ioapi.h, cpl_minizip_unzip.h, cpl_minizip_zip.h:\n  removed. They use since 3.5 an header that is not installed, so were unusable\n\n## GDAL 3.9.0 - Overview of Changes\n\n### Port\n\n* /vsicurl: add ANYSAFE & BEARER to auth methods (#8683)\n* /vsicurl/: re-emit HTTP error code next times we try opening a resource that\n  failed the first time (#8922)\n* /vsicurl/: add a VSICURL_PC_URL_SIGNING path-specific option to enable\n  Planetary Computer URL signing only on some URLs\n* /vsicurl/: Read(): emit error message when receiving HTTP 416 Range Not\n  Satisfiable error\n* Add VSIVirtualHandle::GetAdviseReadTotalBytesLimit()\n* cpl_http: retry \"Connection reset by peer\"\n* Add a VSICURLMultiCleanup() that runs with SIGPIPE ignored (#9677)\n* /vsiaz/: fix RmdirRecursive() on an empty directory with just the\n  .gdal_marker_for_dir special marker file\n* /vsis3/: include region to build s3.{region}.amazonaws.com host name (#9449)\n* /vsigs/: fix RmdirRecursive() on an empty directory\n* /vsigs/ UnlinkBatch(): make sure that path config options are checked for the\n  deleted files and not '/vsigs/batch/\n* /vsiaz/ UnlinkBatch(): make sure that path config options are checked for the deleted files\n* Add VSIVirtualHandle::Printf()\n* Add VSIRemovePluginHandler() to enable removal of virtual filesystems (#8772)\n* No longer alias CPLMutex, CPLCond and CPLJoinableThread to void in non-DEBUG\n  builds (ABI change)\n* Win32 extended filenames (starting with \"\\\\?\\\"): various fixes; add support\n  for network UNC paths\n* Add VSIGetDirectorySeparator() to return the directory separator for the\n  specified path\n* Add CPLXMLNodeGetRAMUsageEstimate()\n* CPLCreateOrAcquireMutexEx(): fix warning about lock-order inversion (#1108)\n* Win32 Stat(VSI_STAT_EXISTS_FLAG): improve performance (#3139)\n* Add CPLDebugProgress() to display a debugging message indicating a progression\n* CSLConstList/CPLStringList: add iterating facilities and better\n  ``std::vector<std::string>`` operability\n* Add CPLStringList::front(), back() and clear()\n* Add CPLStrtodM()\n* CPLStrtod(): set errno=0 when no value has been parsed to conform to POSIX\n* Add CPLUTF8ForceToASCII()\n* VSICACHE: avoid EOF read (#9669)\n\n### Core\n\n* GDALRATValuesIOAsString(): fix wrong type for papszStrList argument\n* Add GDALDataset::DropCache() (#8938)\n* Add GDALDataset::UnMarkSuppressOnClose() and IsMarkSuppressOnClose() (#8980)\n* Add GDALGetOutputDriversForDatasetName()\n* Modify the logic of selection of overviews for non-nearest resampling; add a\n  GDAL_OVERVIEW_OVERSAMPLING_THRESHOLD config option (#9040)\n* GDALMDArray::AsClassicDataset(): make it possible to use overviews\n* GDALOpen(): change error message when a dataset isn't recognized (#9009)\n* GDALDeserializeGCPListFromXML(): validate value of GCP Pixel,Line,X,Y,Z\n  attributes\n* PAM: only unset GPF_DIRTY flag\n* GDALGetCacheMax64(): fix warning about lock-order inversion (#1837)\n* Add gdal::GCP class\n* QuietDeleteForCreateCopy(): forward source dataset open options (#9422)\n\n### Multidimensional API\n\n* Add GDALCreateRasterAttributeTableFromMDArrays() to return a virtual Raster\n  Attribute Table from several GDALMDArray's\n* fix wrong DataAxisToSRSAxisMapping\n* GDALMDArray::AsClassicDataset(): make it possible to use overviews\n\n### Algorithms\n\n* Implement basic Line-of-sight algorithm (#9506, #9050)\n* Warper: fix artifacts when reprojecting from long/lat to ortho (#9056)\n* GDALSuggestedWarpOutput2(): ortho->long/lat: limit extent to\n  [lon_0-90,lon_0+90] even when poles are included\n* Warper: limit artifacts when doing ortho->long/lat (provided that srcNodata is\n  set)\n* GDALSuggestWarpOutput(): make it return original potential non-square pixel\n  shape for a south-up oriented dataset (#9336)\n* Warper: add a EXCLUDED_VALUES warping option to specify pixel values to be\n  ignored as contributing source pixels during average resampling. And\n  similarly, add a NODATA_VALUES_PCT_THRESHOLD warping option for nodata/\n  transparent pixels.\n* GDALFillNodata(): add a INTERPOLATION=NEAREST option\n* GDALChecksumImage(): read by multiple of blocks for floating-point bands to\n  improve performance\n\n### Utilities\n\n* Add GDALArgumentParser class to extend p-ranav/argparse framework\n* Use GDALArgumentParser for: gdaladdo, gdalinfo, gdal_translate, gdalwarp,\n  gdal_grid, gdal_viewshed, gdalbuildvrt, nearblack, ogrinfo, ogr2ogr, sozip\n* Add support for ``--config <key>=<value>`` syntax\n* gdaladdo: reuse previous resampling method (from GTiff RESAMPLING metadata\n  item) if not specifying -r and overview levels if not specifying them\n* gdaladdo: make --partial-refresh-from-source-timestamp work on GTI datasets\n* gdal_contour: fix lowest min value in polygonize mode (#9710)\n* gdalbuildvrt: add a -nodata_max_mask_threshold option\n* gdal_create: copy GCPs present in the input file\n* gdal_edit: add -a_coord_epoch option\n* gdal_footprint: fix -split_polys and -convex_hull to not consume the argument\n  specified just after them\n* gdal_footprint: write source dataset path in a 'location' field (#8795)\n* gdal_grid: error out on in invalid layer name, SQL statement or failed where\n  condition (#9406)\n* gdallocationinfo: make it output extra content at end of input line, and\n  add -E echo mode, and -field_sep option (#9411)\n* gdalmdimtranslate: add -arrayoptions\n* gdalinfo: do not call GDALGetFileList() if -nofl is specified (#9243)\n* gdal_translate: add -dmo option, for domain-metadata items (#8935)\n* gdal_translate -expand rgb[a]: automatically select Byte output data type if\n  not specified and color table compatible of it (#9402)\n* gdaltransform: make it output extra content at end of input line, and add\n  -E echo mode, and -field_sep option (#9411)\n* gdalmanage: make --utility_version work\n* gdal_polygonize.py: handle error if creation of destination fails\n* gdal_viewshed: add support for south-up source datasets (#9432)\n* gdalwarp: progress bar tunings\n* gdalwarp: emit error message when transformation isn't inversible (#9149)\n* gdalwarp: fix performance issue when warping to COG (#9416)\n* gdalwarp: make target resolution independent from source extent when -te is\n  specified (#9573)\n* allow passing a WKT geometry as -cutline value, and add -cutline_srs (#7658)\n* sozip: support generic command line options\n* --formats option: append list of extensions (#8958)\n* Make gdaltindex a C callable function: GDALTileIndex()\n* gdaltindex: add -overwrite, -vrtti_filename, -tr, -te, -ot, -bandcount,\n  -nodata, -colorinterp, -mask, -mo, -recursive, -filename_filter,\n  -min_pixel_size, -max_pixel_size, -fetch_md, -lco options\n* gdal2tiles: added support for JPEG output\n* gdal2tiles: Fix case where --exclude still writes fully transparent tiles\n  (#9532)\n* gdal2tiles: add --excluded-values, --excluded-values-pct-threshold and\n  --nodata-values-pct-threshold options\n* gdal2tiles: support an input dataset name not being a file (#9808)\n* gdal2xyz: Change -srcwin parameter type to integer.\n* Python sample scripts: add gdalbuildvrtofvrt.py (#9451)\n* Python utilities: do not display full traceback on OpenDS failures (#9534)\n* gdalinfo: suggest trying ogrinfo if appropriate, and vice-versa\n* gdalinfo and ogrinfo -json: add newline character at end of JSON output\n\n### Raster drivers\n\nUpdates affecting multiple drivers:\n * All drivers depending on external libraries that can be built as plugins\n   have been updated to implement RFC 96 deferred plugin loading\n * Drivers that can now be built as plugins if using external libraries and\n   not vendored/internal libraries: GIF, JPEG, MRF, NITF, RAW drivers (as a\n   single plugin), PDS related drivers (as a single plugin)\n * do not export GMLJP2 if the SRS isn't compatible (#9223): JP2KAK, JP2ECW,\n   JP2Lura, JP2OPENJPEG\n\nAAIGRID driver:\n * fix reading file whose first value is nan (#9666)\n\nBAG driver:\n * make sure to report a subdataset for the bathymetry coverage when we expose\n   one(s) for the georeferenced metadata\n\nGeoPackage driver:\n * support maximum level up to 29 or 30; add a ZOOM_LEVEL creation option\n\nGTiff driver:\n * Internal libtiff: resync with upstream\n * Use (future) libtiff 4.6.1 TIFFOpenOptionsSetMaxSingleMemAlloc()\n * add JXL_LOSSLESS_OVERVIEW, JXL_EFFORT_OVERVIEW, JXL_DISTANCE_OVERVIEW and\n   JXL_ALPHA_DISTANCE_OVERVIEW configuration options (#8973)\n * overviews: generalize saving resampling method in a RESAMPLING metadata item\n * friendlier error message when attempting to create JXL compressed file with\n   unsupported type/bits_per_sample\n * deal with issues with multi-band PlanarConfig=Contig, LERC and NaN values\n   (#9530)\n * make BuildOverviews() in update mode work when there is an external .msk file\n * no longer condition CreateInternalMaskOverviews() behavior to\n   GDAL_TIFF_INTERNAL_MASK being unset or set to YES\n * change default value of GDAL_TIFF_INTERNAL_MASK config option to YES\n * multi-threaded decoding: fix potential mutex deadlock\n * MultiThreadedRead(): make it take into account AdviseRead() limit to reduce\n   the number of I/O requests (#9682)\n\nHDF5 driver:\n * multidim: fix crash on reading compound data type with fixed-length strings\n * multidim: implement GDALMDArray::GetBlockSize() and GetStructuralInfo()\n * improve performance of band IRasterIO() on hyperspectral products\n * support HDF5EOS metadata where the GROUP=GridStructure has an empty sub\n   GROUP=Dimension (like for AMSR-E/AMSR2 Unified L3 Daily 12.5 km)\n * implement GetOffset() and GetScale() for netCDF metadata items add_offset\n   and scale_factor\n\nJP2KAK driver:\n * make result of RasterIO() consistent depending if it is called directly or\n   through VRT, with non-nearest upsampling (#8911)\n * refactor how overviews work\n\nJP2OpenJPEG driver:\n * CreateCopy(): limit number of resolutions taking into account minimum block\n   width/height\n\nJPEG driver:\n * ReadXMPMetadata(): only stop looking for XMP marker at Start Of Scan\n * ReadFLIRMetadata(): stop on Start-Of-Scan marker (speeds up opening large\n   remote JPEG files)\n * CreateCopy(): emit warning/error message before progress bar (#9441)\n\nMRF driver:\n * BuildOverviews: bail out when no overviews are needed\n * emit warning when attempting to clean internal overviews (#9145)\n * Use ZSTD streaming API for compression: faster and better compression (#9230)\n\nnetCDF driver:\n * use the SRS (its geographic part) if found in the file, instead of the\n   hardcoded WGS84 string, for the GEOLOCATION.SRS metadata item (#9526)\n * Add BAND_NAMES creation option\n * fix writing of metadata items whose value has an equal sign [\"9702)\n\nNITF driver:\n * in xml:DES metadata domain field, expand content of XML_DATA_CONTENT DES as\n   XML in a <xml_content> sub-node of >field name=DESDATA> instead as a Base64\n   value\n * fix undefined behavior when using NITFGetField() several times in the same\n   statement\n\nOGCAPI driver:\n * OGCAPI Maps: support image formats beyond PNG/JPG as well as enables content\n   negotiation. (#9231, #9420)\n\nPDF driver:\n * correctly initialize PAM when opening a subdataset (specific page e.g.)\n * PDFium backend: update to support (and require) PDFium/6309\n * deal with the situation where a multipage PDF has layers with same name but\n   specific to some page(s)\n * Fix build with Poppler 24.05\n\nS102 driver:\n * add support for spatial metadata of the QualityOfSurvey group\n * read nodata value from dataset metadata\n\nSentinel2 driver:\n * include 10m AOT and WVP bands in 10m subdataset (#9066)\n\nTileDB driver:\n * Remove use of deprecated API, and bump minimum version to 2.15\n * Added tiledb metadata fields to easily tag array type\n * be able to read datasets converted with 'tiledb-cf netcdf-convert'\n * make its identify() method more restrictive by not identifying /vsi file\n   systems it doesn't handle\n * multidim: prevent infinite recursion when opening an array in a group where\n   there are 2 or more 2D+ arrays\n * multidim: OpenMDArray(): fix opening an array, member of a group, which has\n   no explicit name\n\nVRT driver:\n * add a VRTProcessedDataset new mode to apply chained processing steps that\n   apply to several bands at the same time. Currently available algorithms:\n   LocalScaleOffset (for dehazing), BandAffineCombination, Trimming, LUT\n * vrt:// connection: add a_nodata, sd_name, sd options\n * add a NoDataFromMaskSource source: replaces the value of the source with\n   the value of the NODATA child element when the value of the mask band of\n   the source is less or equal to the MaskValueThreshold child element.\n * VRT serialization: emit a warning if RAM usage of XML serialization reaches\n   80% of RAM (#9212)\n * VRTWarpedDataset: add an optimized IRasterIO() implementation\n\nWMS driver:\n * change logic to set gdalwmscache directory to honor in particular\n   XDG_CACHE_HOME (#8987)\n * Use GDAL_HTTP_TIMEOUT\n\nZarr driver:\n * Add capability to read CRS from CF1 conventions\n\nZMap driver:\n * support reading variant of format where there is no newline character at\n   end of column\n\n## OGR 3.9.0 - Overview of Changes\n\n### Core\n\n* OGRSQL: Support SELECT * EXCLUDE(...)\n* OGRSQL: add UTF-8 support for LIKE/ILIKE (for layers declaring\n  OLCStringsAsUTF8) (#8835)\n* Add OGRLayer::GetExtent3D() (#8806)\n* OGRLayer: Have CreateField/CreateGeomField take const OGRFieldDefn\n  /OGRGeomFieldDefn* argument (#8741)\n* OGRFeatureDefn, OGRFieldDefn, OGRGeomFieldDefn: add Seal() and Unseal()\n  methods\n* Fix swq_select::Unparse()\n* ExecuteSQL(): add a warning if the dialect name isn't recognized (#8843)\n* ExecuteSQL() with OGRSQL and SQLITE dialects: get OLCStringsAsUTF8 from\n  underlying layer (#9648)\n* ExecuteSQL() OGRSQL and SQLITE dialects: error out if SetSpatialFilter() fails\n  (#9623)\n* OGRGeometryFactory::forceTo(): make it honour dimensionality of eTargetType\n  (in particular fix POLYGON -> LINESTRING or POLYGON -> LINESTRINGZ) (#9080)\n* OGRGeometryCollection::importFromWkb(): fix reading corrupted wkb with mixed\n  2D and 3D geoms (#9236)\n* RFC99: Add C++ OGRGeomCoordinatePrecision class and corresponding C / SWIG API\n* Change prototype of GDALDataset::ICreateLayer() to take a\n  ``const OGRGeomCoordinatePrecision*``\n* Add OGRGeometry::SetPrecision() / OGR_G_SetPrecision(), as wrapper of\n  GEOSGeom_setPrecision_r()\n* Add a OGRGeometry::roundCoordinates() method\n* OGRFeature: add SerializeToBinary() / DeserializeFromBinary()\n* OGRFeature::SetField(): add warnings when detecting some lossy conversions (#9792)\n* Add OGR_G_GeodesicArea() / OGRSurface::get_GeodesicArea()\n* SQLite SQL dialect: implement ST_Area(geom, use_ellipsoid)\n* Add OGR_L_GetDataset() and implement GetDataset() in all drivers with creation\n  support\n* Arrow array: fix decoding of ``date32[days]`` values before Epoch\n (Arrow->OGRFeature), and fix rounding when encoding such values\n (OGRFeature->Arrow) (#9636)\n* OGRLayer::WriteArrowBatch(): add tolerance for field type mismatches if int32/int64/real;\n  Also add an option IF_FIELD_NOT_PRESERVED=ERROR to error out when lossy conversion occurs. (#9792)\n* OGRLayer::SetIgnoredFields(): make it take a CSLConstList argument instead of\n  const char*\n\n### OGRSpatialReference\n\n* Add OGRSpatialReference::exportToCF1() and importFromCF1()\n* Add OSRIsDerivedProjected() / OGRSpatialReference::IsDerivedProjected()\n* OGRCoordinateTransformation::Transform(): change nCount parameter to size_t\n  (C++ API only for now) (#9074)\n* OGRProjCT::TransformWithErrorCodes(): Improve performance of axis swapping\n  (#9073)\n* OSR_CT: fix ``SetDataAxisToSRSAxisMapping([-2, 1])``` on target SRS\n* exportToXML(): error out on unsupported projection method (#9223)\n* Add OSRSetFromUserInputEx() and map it to SWIG (#9358)\n* Add std::string OGRSpatialReference::exportToWkt(\n  const char* const* papszOptions = nullptr) const\n* OGR_CT: use PROJJSON internally rather than in WKT:2019 (#9732)\n\n### Utilities\n\n* ogrinfo: add a -extent3D switch\n* ogrinfo: output coordinate resolution in -json mode\n* ogrinfo: add -limit option (#3413)\n* ogr2ogr: do not copy private layers (would for example break SQLite ->\n  SQLite/GPKG)\n* ogr2ogr: force -preserve_fid when doing GPX to GPKG (#9225)\n* ogr2ogr: propagate input coordinate precision\n* ogr2ogr: add options -xyRes, -zRes, -mRes and -unsetCoordPrecision\n* ogr2ogr: make -select tokenize only on comma (and not on space), and honour\n  double-quoting (#9613)\n* Remove ogr2ogr.py sample utilities (gdal.VectorTranslate() is a more powerful\n  replacement)\n\n### Vector drivers\n\nUpdates affecting multiple drivers:\n * Drivers updated for RFC 97 feature definition sealing: GPKG, Shape,\n   OpenFileGDB, MITAB, MEM, GeoJSON, JSONFG, TopoJSON, ESRIJSON, ODS, XLSX, PG\n * Drivers updated for RFC99 geometry coordinate precision: GML, GeoJSON,\n   GeoJSONSeq, JSONFG, GPKG, CSV, OpenFileGDB, FileGDB, OGR VRT\n * All drivers depending on external libraries that can be built as plugins\n   have been updated to implement RFC 96 deferred plugin loading\n * GetExtent3D() implemented in Shapefile, Arrow, Parquet, PostgreSQL, GeoJSON,\n   GeoPackage drivers\n\nOGR SQLite/SQLite/GPKG: add UTF-8 support for case-insensitive LIKE (#8835)\n\nArrow/Parquet drivers:\n * GetArrowSchema(): potential fix when there are ignored fields and the FID\n   column is not the first one\n * Read/write support for GeoArrow (struct-based) encoding\n * silently ignore column of type null in GetArrowSchema/GetArrowArray\n * fix crash when reading geometries from a geometry column with a\n   pyarrow-registered extension type\n * handle fields with a pyarrow-registered extension type\n * preliminary/in-advance read support for future JSON Canonical Extension\n * OGRCloneArrowArray(): add missing support for 'tss:' Arrow type\n\nCSV driver:\n * parse header with line breaks (#9172)\n\nDGN (v7) driver:\n * emit explicit error when attempting to open a DGNv8 file and the DGNv8\n   driver is not available (#9004)\n\nFileGDB/OpenFileGDB drivers:\n * fix co-operation between the 2 drivers to make sure .cdf is opened with\n   FileGDB\n\nFileGDB driver:\n * remove warning 'Empty Spatial Reference'\n\nFlatGeobuf driver:\n * add support for reading and writing layer title, description and metadata\n * CreateFeature(): error out if a string context is not valid UTF-8 (#7458)\n\nGeoJSON driver:\n * OGRGeoJSONDriverIdentify: return -1 when unsure\n * writer: add FOREIGN_MEMBERS_FEATURE and FOREIGN_MEMBERS_COLLECTION layer\n   creation options\n * reader: accept a {\"type\": \"Polygon\",\"coordinates\": []} as a representation\n   of POLYGON EMPTY\n\nGeoPackage driver:\n * fixes to make most operations compatible with PRAGMA foreign_keys=1 (#9135)\n * writer: set Z/M columns of gpkg_geometry_columns when there are Z/M\n   geometries in a 2D declared layer\n * Read relationships defined using foreign key constraints\n * CreateFeature(): allow creating a feature with FID=0 (#9225)\n * Add DISCARD_COORD_LSB layer creation option\n * map Null CRS to a new srs_id=99999, and add a SRID layer creation option\n * add a LAUNDER=YES/NO layer creation option (default: NO)\n * fix random error in threaded RTree creation, particularly on Mac M1 ARM64\n\nGeoRaster driver:\n * Added GENSTATS options, security fixes, and prevent failing when password is\n   near expiration (#9290)\n\nGML driver:\n * writer: honour geometry field name and isnullable passed to ICreateLayer()\n\nGMLAS driver:\n * faster retrieval of GML and ISO schemas by using zip archives\n * use CPLHTTPFetch() instead of /vsicurl_streaming/ to allow alternate HTTP\n   downloader (for QGIS 3.36 enhanced WFS provider)\n\nLIBKML driver:\n * improve generation of internal ids for layer names starting with digits\n  (#9538)\n\nnetCDF driver:\n * writer: make it more robust to empty geometries\n\nOpenFileGDB driver:\n * add support for Integer64, Date, Time and DateTimeWithOffset data types\n   added in ArcGIS Pro 3.2 (#8862)\n * writer: set xml shape type to \"esriGeometryPolyline\" for LineString/\n   MultiLineString (#9033)\n\nOSM driver:\n * properly escape special characters with TAGS_FORMAT=JSON open option (#9673)\n\nParquet driver:\n * support reading and writing layer metadata\n * Read/write support for covering.bbox struct columns for spatial\n   filtering, add SORT_BY_BBOX=YES/NO layer creation option (GeoParquet 1.1)\n * Read/write support for GeoArrow (struct-based) encoding (GeoParquet 1.1)\n * add more configuration options for Parquet dataset case, and default to using\n   custom I/O layer (#9497)\n * ogr2ogr/Parquet: add hack to avoid super lengthy processing when using -limit\n   with a Parquet dataset source (#9497)\n * make it recognize bbox field from Overture Maps 2024-01-17-alpha.0 and\n   2024-04-16-beta.0 releases\n * fix ResetReading() implementation, when using the ParquetDataset API and\n   when there's a single batch\n * fix opening single file Parquet datasets with the ParquetDataset API when\n   using PARQUET:filename.parquet\n\nPGDUMP driver:\n * add a LAUNDER_ASCII=YES/NO (default NO) layer creation option\n\nPMTiles driver:\n * handle decompressing data with a compression ratio > 16 (#9646)\n\nPostgreSQL driver:\n * serialize GDAL multidomain metadata of layer as XML in a\n   ogr_system_tables.metadata table\n * be robust to inexact case for schema when creating a layer\n   'schema_name.layer_name' (#9125)\n * remove support for PostgreSQL < 9 and PostGIS < 2 (#8937)\n * add a LAUNDER_ASCII=YES/NO (default NO) layer creation option\n\nShapefile driver:\n * Shapelib: resync with upstream\n * GetNextArrowArray(): add specialized implementation restricted to situations\n   where only retrieving of FID values is asked\n * make it recognize /vsizip/foo.shp.zip directories\n * add read/write support for DBF Logical field type mapped to OGR OFSTBoolean\n\nVFK driver:\n * Fix solving circle parcel geometry (#8993)\n\n## SWIG Language Bindings\n\nAll bindings:\n * add osr.SpatialReference.ImportFromCF1(), ExportToCF1(), ExportToCF1Units()\n * expose Geometry.UnaryUnion()\n * expose OLCFastWriteArrowBatch\n * add gdal.IsLineOfSightVisible()\n\nCSharp bindings:\n * Exposes additional Dataset methods (#918, #9398)\n\nJava bindings:\n * bump minimum version to Java 8\n\nPython bindings:\n * lots of improvements to documentation\n * add a pyproject.toml with numpy as a build requirement (#8926, #8069)\n * pyproject.toml: use numpy>=2.0.0rc1 for python >=3.9 (#9751)\n * bump setuptools requirement to >= 67.0\n * define entry_points.console_scripts (#8811)\n * add RasterAttributeTable::ReadValuesIOAsString, ReadValuesIOAsInteger,\n   ReadValuesIOAsDouble, RemoveStatistics()\n * implement ``__arrow_c_stream__()`` interface for ogr.Layer\n * add a ogr.Layer.GetArrowArrayStreamInterface() method\n * add a ogr.Layer.WriteArrow() method consuming ``__arrow_c_stream__`` or\n   ``__arrow_c_array__`` interfaces (#9132)\n * Invalidate layer ref when Dataset closes\n * Accept str arg in FeatureDefn.GetFieldDefn\n * Add Band.ReadAsMaskedArray\n * Make gdal/ogr.GeneralCmdLineProcessor accept int, os.PathLike\n * Avoid crash when accessing closed file\n\n# GDAL/OGR 3.8.5 Release Notes\n\nGDAL 3.8.5 is a bugfix release.\n\n## Build\n\n* Disable my_test_sqlite3_ext in static builds\n* Fix false-positive -Wformat-truncation with clang 18 on fedora:rawhide CI\n* cpl_vsil_unix_stdio_64.cpp: avoid compiler warning related to ftello()\n* Fix compiler crash on gcore/overview.cpp with ICC 2024.0.2.29 (#9508)\n* CMake: Fix FindGEOS to remove use of deprecated exec_program()\n* CMake: fix NumPy detection when Intel MKL library is installed\n* CMake: add modern Apple OS (visionOS|tvOS|watchOS) support (#9550)\n* Minimal support for TileDB 2.21 to avoid build & test issues\n\n## GDAL 3.8.5\n\n### Port\n\n* /vsiaz/: handle properly BlobEndpoint ending with a slash (#9519)\n\n### Core\n\n* QuietDeleteForCreateCopy(): forward source dataset open options (#9424)\n* Overview/RasterIO resampling: fix infinite looping when nodata has a big\n  absolute value (#9427)\n\n### Utilities\n\n* gdalinfo_output.schema.json: add comment about size and proj:shape ordering\n* gdalinfo -json/gdal.Info(format='json'): avoid error/exception on engineering\n  CRS (#9396)\n* gdalwarp: cutline zero-width sliver enhancement: avoid producing invalid\n  polygons\n* gdal2tiles.py: fix exception when -v flag is used and overview tiles are\n  generated (3.7.0 regression) (#9272)\n* gdalattachpct.py: fix it when output file is a VRT (#9513)\n\n### Raster drivers\n\nDIMAP driver:\n * add radiometric metadata\n\nERS driver:\n * avoid 'Attempt at recursively opening ERS dataset' when the .ers file\n   references a .ecw (#9352)\n\nGPKG driver:\n * avoid invalid use of pointer aliasing that caused ICC 2024.0.2.29 to\n   generate invalid code (#9508)\n\nGRIB driver:\n * avoid floating-point issues with ICC 2024.0.2.29 (#9508)\n\nGTiff driver:\n * fix read error/use-after-free when reading COGs with mask from network\n   storage (#9563)\n\nJP2OpenJPEG driver:\n * CreateCopy(): limit number of resolutions taking into account minimum block\n   width/height (#9236)\n\nOGCAPI driver:\n * fix potential use-after-free on vector tiled layers\n\nVRT driver:\n * VRTDerivedRasterBand: Support Int8, (U)Int64 with Python pixel functions\n * VRT/gdal_translate -of 200% 200%: make sure that the synthetized virtual\n   overviews match the dimension of the source ones when possible\n * VRTPansharpenedDataset: allow to specify <OpenOptions> for <PanchroBand> and\n   <SpectralBand>\n\n## OGR 3.8.5\n\n### Core\n\n* OGRGeometry::getCurveGeometry(): avoid failures when building some compound\n  curves with inferred circular strings (#9382)\n* OGRLayer::GetArrowSchema(): remove potential unaligned int32_t writes\n* CreateFieldFromArrowSchema(): don't propagate native subtype if we have to\n  use a fallback main type\n\n### Vector drivers\n\nArrow/Parquet driver:\n * fix inverted logic regarding spatial filtering of multipolygon with GeoArrow\n   interleaved encoding\n\nFlatGeoBuf driver:\n * Make sure vendored flatbuffers copy has a unique namespace\n * implement OGRLayer::GetDataset() (#9568)\n\nGMLAS driver:\n * fix crash when reading CityGML files (r-spatial/sf#2371)\n\nGPKG driver:\n * Ensure that mapping tables are inserted into gpkg_contents\n * Ensure that tables present in gpkgext_relations can be read\n\nILI2 driver:\n * emit an error and not just a warning when creating a dataset without a model\n   file\n\nODS driver:\n * declare OLCStringsAsUTF8 on newly created layers\n\nOpenFileGDB driver:\n * Correctly use \"features\" as related table type (instead of \"feature\")\n * writer: fix corrupted maximum blob size header field in some SetFeature()\n   scenarios (#9388)\n * avoid issue with -fno-sanitize-recover=unsigned-integer-overflow with recent\n   clang\n\nParquet driver:\n * avoid potential assertion/out-of-bounds access when a subset of row groups\n   is selected\n\nPMTiles driver:\n * fix 'Non increasing tile_id' error when opening some files (#9288)\n\nShapefile driver:\n * Fix bug when reading some .sbn spatial indices\n\nXLSX driver:\n * declare OLCStringsAsUTF8 on newly created layers\n\n## Python bindings\n\n* gdal.Translate()/gdal.Warp()/etc.: make sure not to modify provided options[]\n  array (#9259)\n* Fix gdal.Warp segfault with dst=None\n\n# GDAL/OGR 3.8.4 Release Notes\n\nGDAL 3.8.4 is a bugfix release.\n\n## Build\n\n* FindECW.cmake: make it work for Windows 32-bit builds (#9106)\n* Restore use of gmtime_r and localtime_r; extend to ctime_r; use Windows\n  variants too\n* FindSQLite3.cmake: improve detection of static libsqlite3.a (#9096)\n* bash_completion installation: Allow the project_binary_dir to contain a\n  whitespace\n\n## Docker build recipes\n\n* docker/ubuntu-full/Dockerfile: update to Arrow 15.0.0\n* docker/ubuntu-full/Dockerfile: pin libarrow-acero-dev version (#9183)\n* docker/ubuntu-full/Dockerfile: disable AVX2 when building TileDB\n\n## GDAL 3.8.4\n\n### Port\n\n* /vsisparse/: fix Stat() on files larger than 4 GB on 32-bit builds\n* CPLAtof()/CPLStrtod(): recognize again INF and -INF\n* /vsicurl/: fix potential multithreaded crash when downloading the same region\n  in parallel and that the download fails\n\n### Core\n\n* PAM: only unset GPF_DIRTY flag\n* GDALOverviewDataset: avoid setting SetEnableOverviews(false) during lifetime\n  of object. Just do it transiently\n\n### Utilities\n\n* gdalinfo: do not emit errors if corner coordinate reprojection fails\n* gdalwarp: do not enable blank line detection when -tap and -te are specified\n (#9059)\n\n### Raster drivers\n\nBMP driver:\n * fix reading images larger than 4GB (3.4.0 regression)\n\nEEDA/EEDAI driver:\n * use 'crsWkt' element\n\nGRIB driver:\n * degrib: use gmtime_r() or gmtime_s() when possible\n\nnetCDF driver:\n * use VSILocalTime()\n\nPCIDSK driver:\n * PCIDSK SDK: use ctime_r() or ctime_s() when possible\n\nPDF driver:\n * correctly initialize PAM when opening a subdataset (specific page for\n   example)\n\nVRT driver:\n * VRTPansharpenedRasterBand::GetOverviewCount(): robustify against potential\n   failure of GDALCreateOverviewDataset()\n\nWMS driver:\n * fix nullptr dereference on invalid document (ossfuzz #65772)\n\n## OGR 3.8.4\n\n### Core\n\n* ExecuteSQL(dialect=SQLite): support 'SELECT\\n' for example (#9093)\n* OGRGeometryFactory::createGeometry(): do not assert on wkbUnknown input\n\n### Utilities\n\n* ogr2ogr: Arrow code path: take into account -limit parameter for\n  MAX_FEATURES_IN_BATCH\n\n### Vector drivers\n\nGeoRSS, GPX, JML, KML, LVBAG, SVG, XLSX drivers:\n * harmonize on a 8192 byte large parsing buffer on all platforms\n\nArrow/Parquet driver:\n * add (minimum) support for libarrow 15.0\n * MapArrowTypeToOGR(): make the code robust to potentially new entries in the\n   arrow::Type enumeration\n\nCAD driver:\n * Internal libopencad: use localtime_r() or localtime_s() when possible\n\nCSV driver:\n * do not quote numeric fields even if STRING_QUOTING=ALWAYS (3.8.1 regression)\n   (#55808)\n\nGMLAS driver:\n * recognize GeometricPrimitivePropertyType\n\nLIBKML driver:\n * fix crash on a gx:Track without when subelements (qgis/qgis#55963)\n\nMSSQLSpatial driver:\n * Fix BCP performance problem (#9112)\n\nMySQL driver:\n * fix/workaround server-side spatial filtering when SRS is geographic with\n   MySQL >= 8 (qgis/QGIS#55463)\n\nODS driver:\n * fix parsing of large cells on Windows (at least with mingw64) with recent\n   expat 2.6.0 release\n\nPDF driver:\n * vector stream parser: correctly parse structures like \"[3 3.5] 0 d\"\n\nPDS driver:\n * fix compilation with Emscripten version 3.1.7\n\nSQLite driver:\n * OGR2SQLITE_Setup(): robustify against potential crashing scenario\n\n### Python bindings\n\n* remove run of 'python -m lib2to3' that is a no-op, given that lib2to3 is\n  removed in python 3.13 (#9173)\n\n# GDAL/OGR 3.8.3 Release Notes\n\nGDAL 3.8.3 is a bugfix release.\n\n## Build\n\n* infback9: fix various build issues with clang 17\n* fix build with sqlite 3.36.x (#9021)\n* fix build of optional utility gdal2ogr\n\n## GDAL 3.8.3\n\n### Port\n\n* AWS S3: add explicit error message when IMDS fails and we know we are on EC2\n\n### Utilities\n\n* gdalbuildvrt: in -separate mode, only use ComplexSource if needed\n\n### Raster drivers\n\nVRT driver:\n* VRTDerivedRasterBand::IRasterIO(): fix potential multiplication overflow\n\n## OGR 3.8.3\n\n### OGRSpatialReference\n\n* CoordinateTransformation::TransformBounds(): fix polar stereographic (\n  including pole) to Web Mercator (#8996)\n\n### Utilities\n\n* ogr2ogr: do not use ArrowArray interface if -clipsrc, -clipdst, -gcp or\n  -wrapdateline are specified (#9013)\n\n### Vector drivers\n\n* OGRArrowArrayHelper::SetBoolOn(): fix wrong bit shift computation.\n  Affects ogr2ogr from GPKG/FlatGeoBuf to something else) (#8998)\n\nGPKG driver:\n * Fix error message that sometimes occurred with multi-threaded ArrowArray\n   interface, and add OGR_GPKG_NUM_THREADS config option. (#9018, 9030)\n\nGeoJSON driver:\n  * Internal libjson: resync random_seed.c with upstream, and use getrandom()\n    implementation when available (#9024)\n\n# GDAL/OGR 3.8.2 Release Notes\n\nGDAL 3.8.2 is a bugfix release.\n\n## GDAL 3.8.2\n\n### Port\n\n* /vsis3/: takes into account AWS_CONTAINER_CREDENTIALS_FULL_URI environment\n  variable (#8858)\n* cpl_safemaths.hpp: fix compilation with clang targeting Windows (#8898)\n* CPLGetPhysicalRAM(): fix getting right value when running inside Docker on a\n  cgroups v1 system (like Amazon Linux 2) (#8968)\n\n### Algorithms\n\n* Rasterization: avoid burning pixel that we only touch (with an empty\n  intersection) (#8918)\n\n### Utilities\n\n* gdal_footprint: return an error if the requested output layer doesn't exist\n* gdal_translate: avoid useless extra GDALOpen() call on a target GeoRaster\n* pct2rgb.py: emit explicit exception when source file has no color table (#8793)\n\n### Raster drivers\n\nHDF5 driver:\n * classic 2D API: handle char,ushort,uint,int64,uint64 attributes when\n   reading them as double\n * multidim: better warning when nodata value is out of range\n\nJPEGXL driver:\n * add compatibility with latest libjxl git HEAD\n\nNGSGEOID driver:\n * make dataset identification robust to NaN values (#8879)\n\nOGCAPI driver:\n * make it robust to missing 'type' on 'self' link (#8912)\n\nSTACTA driver:\n * use GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR instead of\n   CPL_VSIL_CURL_ALLOWED_EXTENSIONS\n * use STAC Raster extension to get number of bands, their data type, nodata\n   value, scale/offset, units, and avoid fetching a metatile\n * add support for upcoming STAC 1.1 which merges eo:bands and raster:bands\n   into bands\n\nnetCDF, HDF4, HDF5:\n * SubdatasetInfo API: fix various issues (#8869, #8881)\n\nVRT driver:\n * VRTComplexSource: fix excessive RAM usage with many sources (#8967, 3.8.0 regression)\n\n### OGR 3.8.2\n\n### Core\n\n* OGRGeometryFactory::transformWithOptions(): fix WRAPDATELINE=YES on\n  multipoint geometries (#8889)\n* OGRSpatialReference::importFromUrl(): changes to no longer use a\n  'Accept: application/x-ogcwkt' header\n* OSRPJContextHolder: call pthread_atfork() once for the process, and\n  re-enable it for MacOS\n* OGRWKBIntersectsPessimisticFixture: handle all geometry types\n\n### Utilities\n\n* ogrinfo: really honours -if (refs #8590)\n* ogr2ogr: implement -if\n\n### Vector drivers\n\n* PMTiles: Correct extension for temporary mbtiles file\n\n## Python bindings\n\n* gdal.Footprint(): add a minRingArea option\n* fix build/install when there's a gdal-config from a pre-installed version in\n  the PATH (#8882)\n* add missing reference increment on Py_None in error case of\n  Geometry.GetPoints() (#8945)\n\n# GDAL/OGR 3.8.1 Release Notes\n\nGDAL 3.8.1 is a bugfix release.\n\n## Build\n\n* CMake: add gdalinfo bash-completion file to list of installed files\n* Fix build error with libxml2 2.12\n* CMake: make GDAL_USE_LIBKML and GDAL_USE_OPENJPEG honor GDAL_USE_EXTERNAL_LIBS\n* Detect failure in installation of the Python bindings\n\n## GDAL 3.8.1\n\n### Port\n\n* CSLLoad2(): remove CPLErrorReset()\n\n### Core\n\n* RasterIO: fix subpixel shift when reading from overviews with non-nearest\n  resampling\n* GDALOverviewDataset::IRasterIO(): use parent dataset when possible for more\n  efficiency\n\n### Algorithms\n\n* Inverse TPS transformer: speed improvement in gdalwarp use case (#8672)\n\n### Utilities\n\n* gdalwarp -of COG: use target SRS from -co TILING_SCHEME when specified (#8684)\n* gdalwarp: add a heuristic to clamp northings when projecting from geographic\n  to Mercator (typically EPSG:3857) (#8730)\n* gdal_rasterize: fix inverse rasterization of polygon nested inside another\n  one. Requires GEOS enabled build (#8689)\n* gdal_footprint: fix -ovr on RGBA datasets (#8792)\n* gdal_footprint: fix wrong taking into account of alpha band (#8834)\n* gdal_footprint: fix taking into account of individual bands that have nodata\n* gdal_sieve.py/gdalattachpct.py/gdalcompare.py/gdalmove.py:\n  make sure --version and --help return 0 error code (#8717)\n\n### Raster drivers\n\nBSB driver:\n * fix opening datasets with errant 0x1A character in header (#8765)\n\nCOG driver:\n * avoid warnings when converting from world coverage to EPSG:3857\n * for JPEG compression, convert single band+alpha as single band JPEG +\n   1-bit mask band\n\nKEA driver:\n * Create(): error out if passing a /vsi file. avoids crashes (#8743)\n\nMRF driver:\n * Avoid crashes when no overviews can be generated (#8809)\n\nMSGN driver:\n * fix memleak in error code path\n\nGeoTIFF driver:\n* multithreaded reader/writer: in update scenarios, do not force serialization\n  to disk of dirty blocks that intersect the area of interest to read (#8729)\n* SRS reader: include VertCRS name from EPSG in CompoundCRS name if there's no\n  citation geokey\n\nVRT driver:\n * VRTSourcedRasterBand: serialize approximate statistics inside .vrt when\n   there are overviews\n\n## OGR 3.8.1\n\n### Core\n\n* PostFilterArrowArray(): various fixes to pass libarrow full validation checks\n (#8755)\n* Add OGRCloneArrowArray()\n* WriteArrowArray(): fix wrong taking into account of struct offset\n\n### Utilities\n\n* ogr2ogr: fix GPKG to shapefile with the -preserve_fid flag (#8761,\n  3.8.0 regression)\n* ogr2ogr: fix GPKG -> Shapefile when field names are truncated (#8849,\n  3.8.0 regression)\n\n### Vector drivers\n\nArrow/Parquet driver:\n * use OGRCloneArrowArray() for safer filtering\n\nCSV driver:\n * CSV writer: do not quote integer fields by default (only if\n   STRING_QUOTING=ALWAYS is specified)\n\nGML driver:\n * SaveClasses(): fix memleak in error code path (ossfuzz#63871)\n\nGPKG driver:\n * fix SetFeature()/UpdateFeature()/DeleteFeature() on views with INSTEAD OF\n   triggers (#8707)\n * sqlite_rtree_bulk_load.c: fix memleak in error code path\n * fix adding field comments after alternative name\n * Add a OGRPARSEDATE_OPTION_LAX option to OGRParseDate() and use it when\n   reading GPKG files (#8759)\n * fix GetNextArrowArray() when there are more than 125 columns (affects\n   ogr2ogr from such GPKG) (#8757)\n\nGPX driver:\n * make detection of extensions element more robust (#8827)\n\nOAPIF driver:\n * add INITIAL_REQUEST_PAGE_SIZE open option (#4556)\n\nPMTiles driver:\n * avoid undefined-shift when zoom level is too big (ossfuzz#64234,\n   ossfuzz#64404)\n\nS57 driver:\n * stricter dataset identification to avoid recognize S-101 datasets we don't\n   handle\n\nShapefile driver:\n * fix spurious warning when reading polygons (#8767)\n * recognize '      0' as a null date\n * fix writing an invalid \"0000/00/00\" date\n\nSQLite driver:\n * fix SRS retrieval of a SELECT layer from a non-Spatialite DB with a point\n   geometry column (#8677)\n\n## Python bindings\n\n* GetArrowStreamAsNumPy(): fix missing offset when reading fixed size list of\n  string\n* Fix installation issue with Python 3.12 on Debian\n* Python bindings: add a combineBands option to gdal.Footprint()\n\n# GDAL/OGR 3.8.0 Releases Notes\n\nGDAL/OGR 3.8.0 is a feature release.\nThose notes include changes since GDAL 3.7.0, but not already included in a\nGDAL 3.7.x bugfix release.\n\n## In a nutshell...\n\n* Add [JSONFG](https://gdal.org/drivers/vector/jsonfg.html) read/write vector\n  driver for OGC Features and Geometries JSON.\n* Add [PMTiles](https://gdal.org/drivers/vector/pmtiles.html) read/write vector\n  driver for PMTiles v3 datasets containing MVT PBF tiles\n* Add [S102](https://gdal.org/drivers/raster/s102.html) raster read-only driver\n  for S-102 bathymetric products (depends on libhdf5)\n* Add [gdal_footprint](https://gdal.org/programs/gdal_footprint.html) utility:\n  compute the footprint of a raster file, taking into account nodata/mask band,\n  and generating polygons/multipolygons corresponding to areas where pixels are\n  valid (#6264)\n* Python bindings: various enhancements to reduce the number of \"gotchas\"\n  related to inter-object ownership relationships, and a few syntaxic sugar\n  enhancements\n* Arrow interface: improve spatial and attribute filtering on read side;\n  add write side with OGRLayer::WriteArrowBatch()\n* GeoPackage: much faster spatial index creation (~ 3-4 times faster)\n* ARG driver deprecated: will be removed in 3.9.0\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.8/MIGRATION_GUIDE.TXT)\n\n## New optional dependencies\n\n* libaec to enable CCSDS Adaptive Entropy Coding decompression in the GRIB driver\n\n## Build\n\n* emit better error message when a raster driver cannot be enabled\n  because of OGR_BUILD_OPTIONAL_DRIVERS=OFF\n* improve static linking for CURL and EXPAT\n* Java bindings: change default installation directory of JNI shared\n  library and control it with GDAL_JAVA_JNI_INSTALL_DIR\n* automatically enable SQLite driver if -DOGR_ENABLE_DRIVER_GPKG=ON\n* Don't use libjpeg if disabled (and libjpeg-turbo >= 3.0 available) (#8336)\n* gdal.pc generation: use CMAKE_INSTALL_INCLUDEDIR/CMAKE_INSTALL_LIBDIR for\n  includedir/libdir (#8012)\n* gdal-config: add a --plugindir switch (#8012)\n\n## GDAL 3.8.0 - Overview of Changes\n\n### Port\n\n* Add third_party/fast_float header library for fast string->double conversion\n  for CPLStrtodDelim()\n* /vsimem/: make it safe to use in multi-threaded scenarios\n* /vsimem/: implicitly create parent directories when creating file\n* CPLParseXML(): do not call CPLErrorReset()\n* CPLJSon: add setters for uint64_t\n* Add CPLJSONArray::AddNull() and CPLJSONObject constructor with primitive types\n* VSIUnixStdioHandle / VSIWin32Handle: make Close() be callable multiple times\n  to be friendly with VSIVirtualHandleUniquePtr\n* /vsicurl/: avoid the same region to be downloaded at the same time from\n  concurrent threads (#8041)\n* /vsicurl/ / /vsicurl_streaming/: recognize IGNORE_FILENAME_RESTRICTIONS=YES\n  open option to skip any extension based filtering (#8162)\n* /vsicurl/: emit warnings if invalid values of CPL_VSIL_CURL_CHUNK_SIZE and\n  CPL_VSIL_CURL_CACHE_SIZE are used (#8499)\n* /vsicurl_streaming/: implement retry strategy if GDAL_HTTP_MAX_RETRY is set\n* /vsis3_streaming/ and the like: implement ReadDir() by forwarding to\n  non-streaming filesystem (#8191)\n* IVSIS3LikeFSHandler::CopyFile(): retry with non-streaming source for more\n  robustness\n* /vsis3/ and /vsioss/: less error prone management of redirects / region\n  discovery\n* /vsiaz/: do not append trailing slash for directories deduced from\n  .gdal_marker_for_dir special file\n* /vsiaz/: implement server-side copy from /vsis3/, /vsigs/, /vsiadls/,\n  /vsicurl/ to /vsiaz\n* /vsiaz/: fix CopyObject() when source and target are both /vsiaz/ but in\n  different buckets\n* /vsiaz/: update to version 2020-12-06 for GetSignedURL(), limit to https and\n  use blob resource type\n* /vsi network file system: support r+ access under\n  CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES by copying initial content of\n  remove file locally\n* VSISync() network to network: implement SyncStrategy::TIMESTAMP\n* Add VSIGetCanonicalFilename()\n* CPLvsnprintf(): deal with '%.*f' formatting\n* VSIFilesystemHandler: remove 'virtual' qualifier from ReadDir(), which now\n  forwards to ReadDirEx(); modify all implementations to implement ReadDirEx()\n* Add /vsicached? virtual file system, as another way of doing the same as\n  VSICreateCachedFile() / VSI_CACHE=YES\n* VSIFilesystemHandler::CopyFile(): detect wrong target file size w.r.t source\n  file size\n* /vsi7z/: Accept ArcGIS Pro Project Packages extension\n* cpl_vsil_win32: check return value of FlushFileBuffers(), and open file with\n  GENERIC_WRITE only if access=w or wb\n* cpl_vsil_win32: implement a WRITE_THROUGH=YEs option to pass to VSIFOpenEx2L()\n\n### Core\n\n* GDALIdentifyDriverEx() and GDALDriver::QuietDelete(): do not call\n  CPLErrorReset()\n* GDALDataset::Open(): take into account open options for OF_SHARED mode (#7824)\n* PAM .aux.xml: read geotransform from Esri GeodataXform.CoeffX/CoeffY elements\n (qgis/qgis#53125)\n* Add a DCAP_FLUSHCACHE_CONSISTENT_STATE capability, and fix GeoJSON, JSONFG,\n  GPKG drivers to implement it\n* Overview/RasterIO resampling: use Float64 as working data type for Float64\n  input data (#8187)\n* Add GDALRegisterPlugins function to register all/only plugins (#8447)\n* GDALDriver::DefaultCreateCopy(): in non-strict mode, turn (ignored) errors as\n  warnings and do not silence them\n* Add a GDALPamDataset::SetDerivedDatasetName() method, and use it to be able to\n  save statistics of datasets returned by GDALMDArray::AsClassicDataset()\n* Add GDALGetSubdatasetInfo() and related functions  (#8155)\n\n### Multidimensional API\n\n* add Rename() methods. Implemented in MEM, netCDF, Zarr drivers\n* add DeleteGroup(), DeleteMDArray(), DeleteAttribute()\n  methods. Implemented in MEM, netCDF (for attributes) and Zarr drivers\n* GDALDatasetFromArray: fix write/update support\n* GDALMDArrayMask: take into account attributes at construction time\n* GetMask(): add a UNMASK_FLAGS option\n* GDALMDArray::ComputeStatistics(): add option to set actual_range in netCDF\n  and Zarr when computing statistics\n* GDALMDArray::AsClassicDataset(): add a LOAD_EXTRA_DIM_METADATA_DELAY option,\n  and expose it in Zarr driver\n* GDALMDArray::AsClassicDataset(): allow to map band indexing arrays as band\n  metadata items with BAND_METADATA option\n* Add GDALGroup::SubsetDimensionFromSelection()\n\n### Algorithms\n\n* Warp average resampling: using Weighted incremental algorithm mean for numeric\n  stability\n* Warper: auto-enable OPTIMIZE_SIZE warping option when reasonable (#7761)\n* Geoloc transformer: warn if the input dataset is larger in width or height\n  compared to the geoloc array (#7751)\n* GDALCreateGenImgProjTransformer2(): deal with discontinuity of GCPs around\n  antimeridian (#8371)\n* TPS transformer: use an iterative method to refine the inverse transformation\n  (#8572)\n\n### Utilities\n\n* gdaladdo: add options to partially refresh existing overviews:\n  ``--partial-refresh-from-source-timestamp,``,\n  ``--partial-refresh-from-projwin <ulx> <uly> <lrx> <lry>``,`\n  ``--partial-refresh-from-source-extent <filename1,...,filenameN>``\n* gdal_translate: emit warning when -a_scale/-a_offset + -unscale is specified\n (#7863)\n* gdal_translate: GTiff, COG, VRT, PNG and JPEG drivers recognize\n  COPY_SRC_MDD=AUTO/YES/NO and SRC_MDD=domain_name creation options\n* gdal_translate: add -a_gt option to assign geotransform (#8248)\n* gdal_translate -scale: change dstMax value from 255.999 to 255\n* gdal_translate: when specifying -srcwin, preserve source block size in the\n  temporary VRT if srcwin top,left is a multiple of the block size\n* gdalwarp: in -tr mode (without -ts / -te), detect blank edge lines/columns\n  before warping and remove them (#7905)\n* gdalwarp: fix cutline processing when warping with a cutline geometry in UTM\n  1/60 crossing the antimeridian, on a raster in long/lat SRS (#8163)\n* gdalwarp: tune usage to allow both -s_coord_epoch and -t_coord_epoch\n* gdalwarp: fix error when using -ct and -cutline (master only), and actually\n  use the -ct when possible if sourceCRS != targetCRS and targetCRS == cutlineCRS\n* gdalwarp: do not enter a specific COG optimized code path when some of its\n  preconditons are not met (#8655)\n* gdalmdiminfo: output details of indexing variables that can be accessed only\n  from the array (typically for TileDB dimension labels)\n* nearblack: add \"-alg floodfill\" to select a flood fill algorithm, to address\n  concave areas.\n* gdalmdimtranslate: add support for resample=yes array spec option\n* gdalbuildvrt: make -separate option process all bands of input datasets,\n  unless -b is specified (#8584)\n* gdal_polygonize: add a -overwrite switch (#7913)\n* gdal_rasterize_lib: fix error messages\n* gdaltransform: add -s_coord_epoch and -t_coord_epoch\n* gdalcompare.py: multiple enhancements and new command line options\n* gdal_pansharpen.py: avoid error trying to generate relative path\n* Add validate_geoparquet.py sample Python script\n* gdalinfo.py: use math.isnan() (#8196)\n* gdalinfo.py: fix wrong order of long,lat corner coordinates (#8199)\n* make --help and --help-general available in all utilities (#3816)\n\n### Raster drivers\n\nAAIGRID driver:\n * writing: remove leading space on each line (#8344)\n\nARG driver:\n * mark it deprecated, removal planned for GDAL 3.9 (#7920)\n\nBAG driver:\n * increase the efficiency of getting depth&uncertainty values from the\n   refinement grids\n * use low-resolution grid as the last overview level in MODE=RESAMPLED_GRID\n * add a MODE=INTERPOLATED mode using mostly bilinear interpolation of the\n   refinement grid nodes\n\nCOG driver:\n * only update mode if the IGNORE_COG_LAYOUT_BREAK=YES open option is specified\n   (#7735)\n * add a STATISTICS=AUTO/YES/NO creation option and forward gdal_translate\n   -stats to it (#8169)\n * Lerc: add a MAX_Z_ERROR_OVERVIEW creation option to separately control the\n   error threshold of overviews w.r.t the one of the full resolution image\n\nENVI driver:\n * warn if assigning different nodata value to different bands\n * support Int64 and UInt64\n\nESRIC driver:\n * Implement ESRI Tile Package (.tpkx) support (#7799)\n\nGRIB driver:\n * allow opening files with invalid Earth of shape (#7811)\n * implement CCSDS Adaptive Entropy Coding decompression. Requires libaec (#8092)\n * only emit a CPLDebug() instead of a message on stdout when there are trailing\n   bytes (#8574)\n * GRIB2 SRS writing: add support for Rotated LatLong grids (fixes #8536)\n\nGTiff driver:\n * Performance improvement: avoid using block cache when writing whole blocks\n   (up to about twice faster in some scenarios)\n * GTiff multi-threaded reader: catch errors emitted in worker threads and\n   re-emit them in main thread\n * Internal libtiff: WebP codec: turn exact mode when creating lossless files\n   to avoid altering R,G,B values in areas where alpha=0 (#8038)\n * Lerc: add a MAX_Z_ERROR_OVERVIEW creation option to separately control the\n   error threshold of overviews w.r.t the one of the full resolution image\n * SRS writer: write Projected 3D built as a pseudo-compound in .aux.xml\n * Internal libtiff and libgeotiff: resynchronization with upstream\n\nHDF5 driver:\n * optimize code-paths for RasterIO() without resampling\n * multidim: speed-up very slow cases of IRead()\n\nISG driver:\n * make it able to read headers > 1024 bytes\n * take into ISG format 2.0\n\nJPEG driver:\n * allow QUALITY down to 1\n * redirect JPEG 'output message' to GDAL debug messages\n * only take into account first Exif directory found\n\nMBTiles driver:\n * Add WEBP support (#8409)\n\nMEM driver:\n * allocate a single buffer for band-interleaved data\n\nnetCDF driver:\n * on reading, set NETCDF_DIM_xxx band metadata items in on-demand way (helps\n   with network accesses)\n * do not set NETCDF_DIM_xxxx_VALUES dataset metadata items for variables of\n   unlimited dimensions on network access for performance reasons\n * better error message when reading from /vsi is not possible (#8398, #8378)\n * renormalize CRS and geotransform to metric, typically for EUMETSAT OSI SAF\n   products. Add a PRESERVE_AXIS_UNIT_IN_CRS=YES/NO open option\n * add support for EMIT band data ordering and geolocation array (\n   using glt_x/glt_y for multidimensional API)\n\nNITF driver:\n * add support for CSCSDB (Common Sensor Covariance Support Data) DES from\n   GLAS/GFM SDEs\n\nOpenFileGDB raster:\n * add support for FileGDB v9 raster datasets\n * add a RASTER_DATASET metadata item with the name of the RasterDataset (#8427)\n\nPDF driver:\n * PDFium backend: update to support (and require) PDFium/5952\n * Poppler backend: implement overviews by adjusting the DPI value (#8233)\n * PoDoFo backend: add support for PoDoFo >= 0.10.0 (#8356)\n * increase threshold to detect tile size and band count (#8236, #8240)\n * Various robustness fixes\n\nPRF driver:\n * add associated PRJ file read\n\nSentinel2 driver:\n * additional metadata (#8379)\n\nTileDB driver:\n * add read/write multidimensional support (requires libtiledb >= 2.15)\n * TileDBRasterBand::IRasterIO(): use correct band indexing\n * read/write Int8, Int64 and UInt64\n * add capability to read arbitrary (i.e. not created by GDAL) 2D/3D dense\n   array (provided it uses uint64 dimension)\n * Add support for TileDB 2.17\n\nVRT driver:\n * add `norm_diff` (#8081), `min` and `max` pixel functions (#8292)\n * ignore <OverviewList> when external .vrt.ovr is present, as documented and\n   intended\n * vrt:// connection string: add `projwin`, `projwin_srs`, `tr`, `r`,\n   `srcwin`, `a_gt`, `oo`, `scale`, `unscale`, `a_coord_epoch`, `nogcp`, `eco`,\n   `epo`\n * VRTComplexSource (scaling typically): make sure to take into account\n   constraints from VRTRasterBand data type in RasterIO() (rather than just\n   taking into account output buffer data type)\n * IRasterIO(): avoid edge effects at sources boundaries when downsampling with\n   non-nearest resampling\n * VRTMDArraySourceFromArray: fix taking into account relativeToVRT=1\n * allow a <ArraySource> element containing a 2D multidimensional array as a\n   VRTRasterBand source and through the use of a <DerivedArray> make it possible\n   to create a 2D array from a 3D or more multidimensional one, by slicing,\n   transposing, resampling, gridding, etc.\n * VRTComplexSource: perf improvement: add specialization when only NODATA for\n   Byte/UInt16/Int16 data types\n * VRTSimpleSource::GetFileList(): do not issue a stat() as it may be slow on\n   network drives\n * VRTSourcedRasterBand::GetMinimum/GetMaximum(): limit to 1 second max when\n   iterating over sources\n * VRTSourcedRasterBand::GetMinimum/GetMaximum(): use STATISTICS_MINIMUM/MAXIMUM\n   metadata first\n\nWCS driver:\n * remove non-standard 'FORMAT' parameter from 'DescribeCoverage' requests\n   (#8381)\n\nZarr driver:\n * allow update support in classic mode\n * Zarr V3: update to current specification (breaks backward compatibility)\n * implement GDALDriver::Rename(), Delete() and CopyFiles()\n * ignore filename restrictions when reading tile data files (#8162)\n * add MULTIBAND=YES/NO, DIM_X and DIM_Y open options (#8237)\n * classic raster API: write multi-band datasets as Zarr 3D arrays (writing\n   them as several 2D arrays as in GDAL 3.7 can be asked with the\n   SINGLE_ARRAY=NO creation option)\n * fix writing partial tiles\n\n## OGR 3.8.0 - Overview of Changes\n\n### Core\n\n* exportToGEOS(): do not drop M dimension with GEOS >= 3.12\n* Add OGR_G_IsClockwise() and map it to SWIG\n* core and ogr2ogr: add logic so that ogr2ogr can try a driver specific\n  implementation of GDALVectorTranslate()\n* OGRParseDate(): restrict valid times to HH:MM:SS(.sss) with at least 2 figures\n  (#8150)\n* Add OGR_F_DumpReadableAsString\n* ArrowArray interface: make PostFilterArrowArray() deal with attribute filter,\n  and enable that in Parquet&Arrow drivers\n* OGRLayer::GetArrowStream(): do not issue ResetReading() at beginning of\n  iteration, but at end instead, so SetNextByIndex() can be honoured\n* ArrowStream interface: make TIMEZONE=\"unknown\", \"UTC\", \"(+|:)HH:MM\" or any\n  other Arrow supported value as an option of the generic implementation\n* Add OGRLayer::WriteArrowBatch()\n* ArrowArray: implement fast 'FID IN (...)' / 'FID = ...' attribute filter in\n  generic GetNextArrowArray(), and use it for FlatGeoBuf one too (when it has a\n  spatial index) (#8590)\n* GetArrowStream(): support a GEOMETRY_METADATA_ENCODING=GEOARROW option (#8605)\n* GetNextArrowArray() implementations: automatically adjust batch size of list/\n  string/binary arrays do not saturate their capacity (2 billion elements)\n* OGRGeometry classes: add addGeometry()/addRing()/addCurve() methods accepting\n  a std::unique_ptr\n* OGRLineString/Polygon/MultiPolygon/MultiLineString: make it possible to run\n  importFromWkb() on the same object and limiting the number of dynamic memory\n  (re)allocations\n* organizePolygons: Remove handling of nonpolygonal geometries\n* OGRGeometryFactory::transformWithOptions() WRAPDATELINE=YES: remove heuristics\n  about points exactly at +/- 180 (#8645)\n* gml2ogrgeometry: reject empty <gml:Triangle/>\n* OGRGF_DetectArc(): harden tolerance when detecting consecutive arcs to avoid\n  incorrect arc center computation (#8332)\n* OGR SQL: allow MIN() and MAX() on string fields\n* SQLite dialect: when the underlying layer has a FID column name, enable the\n  user to use it as an alias of ROWID\n* SQLite dialect: error out with explicit message on unsupported commands (#8430)\n* Add OGRFieldDefn::GetTZFlag()/SetTZFlag(), and OGR_TZFLAG_ constants\n* GDALDataset::ICreateLayer(): now takes a const OGRSpatialReference* instead of\n  a OGRSpatialReference*. Affects out-of-tree drivers (#8493)\n* OGR Python drivers: support WKB geometries\n\n### OGRSpatialReference\n\n* Add OGRCoordinateTransformationOptions::SetOnlyBest() /\n  OCTCoordinateTransformationOptionsSetOnlyBest() (#7753)\n* OGRProjCT::Transform(): do not emit generic error message if a specific one\n  has already been emitted\n* SetFromUserInput(): add support for urn:ogc:def:coordinateMetadata (PROJ >=\n  9.4)\n* SetFromUserInput(): recognize 'EPSG:XXXX@YYYY' (PROJ >= 9.4)\n* Add OSRHasPointMotionOperation() (PROJ >= 9.4)\n* OGR_CT: handle point motion operations (PROJ >= 9.4)\n\n### Utilities\n\n* ogrinfo: speed-up string concatenation\n* ogrinfo: add support for DateTime field domains\n* ogrinfo: emit distinct error message if the file doesn't exist or can't be\n  opened (#8432)\n* ogrinfo: output timezone flag\n* ogr2ogr: calls FlushCache() (#8033)\n* ogr2ogr: tune usage to allow both -s_coord_epoch and -t_coord_epoch\n* ogr2ogr: better deal when reprojecting curve geometries to a non-curve\n  geometry type (#8332)\n* ogr2ogr: use Arrow interface in reading and writing when possible\n* make -select '' work (or gdal.VectorTranslate(selectFields=[]))\n\n### Vector drivers\n\nArrow/Parquet driver:\n * emit ARROW:extension:name=ogc.wkb in Feature field metadata, and return it\n   also through GetArrowStream() for Parquet\n * implement faster spatial filtering with ArrowArray interface\n * optimize attribute filter on FID column\n * support/reading nested list/map datatypes as JSON\n * implement full spatial filtering (not just bbox intersection)\n * reading and writing: use field TZFlag\n * implement WriteArrowBatch() specific implementation\n * support LargeString and LargeBinary for geometry columns (read support only)\n\nCSV driver:\n * reader: change to use separator with the most occurrences (#7831)\n * and add a SEPARATOR=AUTO/COMMA/SEMICOLON/TAB/SPACE/PIPE open option (#7829)\n * implement GetFileList() and return .csvt if used (#8165)\n\nDGN driver:\n * CreateFeature(): fix crash on empty geometries (ossfuzz#56771)\n\nDXF driver:\n * Preserve attributes in nested block insertions\n\nESRIJSON driver:\n * add support for esriFieldTypeSingle and esriFieldTypeDate data types\n\nFlatGeoBuf driver:\n * GetNextArrowArray(): implement full spatial filtering (not just bbox\n   intersection)\n\nGeoJSON driver:\n * add AUTODETECT_JSON_STRINGS layer creation option (#8391)\n * writer: when writing with limited coordinate precision, run MakeValid() to\n   avoid creating invalid geometries\n * reading: set field TZFlag\n * writer: in RFC7946 mode, refine logic to determine if a multipolygon spans\n   over the antimeridian to write correct bbox (qgis/qgis#42827)\n * writer: use faster file write() primitive and detect write() errors\n\nGeoJSONSeq driver:\n * add AUTODETECT_JSON_STRINGS layer creation option (#8391)\n * writer: use faster file write() primitive and detect write() errors\n\nGeoPackage driver:\n * use much faster creation of RTree with a in-memory RTree building\n * speed-up HasMetadataTables() on dataset with many layers\n * speed-up unique constraint discovery on dataset with many layers\n * more efficient retrieval of layer extent from RTree content\n * deal with DateTime fields without milliseconds or seconds, as allowed by\n   GeoPackage 1.4 (#8037)\n * add a DATETIME_PRECISION layer creation option (#8037)\n * implement SetNextByIndex() on table layers (by appending\n   'OFFSET -1 LIMIT index')\n * make GetArrowStream() honour SetNextByIndex()\n * add a CRS_WKT_EXTENSION=YES/NO dataset creation option to force addition of\n   definition_12_063 column\n * add a METADATA_TABLES creation option to control creation of system metadata\n   tables\n * GetNextArrowArray(): implement full spatial filtering (not just bbox\n   intersection)\n * GetNextArrowArray(): only do multi-threaded prefetch if more than 1 GB RAM\n   available\n * make invalid attribute filter to cause error in main thread (so Python\n   binding can emit an exception)\n * GPKG / SQLite dialect: improve detection of geometry columns when first row\n   is NULL (#8587)\n * make GetFeatureCount() do full geometry intersection and not just bounding\n   box (#8625)\n\nGPX driver:\n * add a CREATOR dataset creation option\n\nHANA driver:\n * Set sessionVariable:APPLICATION in connection string\n * Support connections using a user store key (#7946)\n\nMemory driver:\n * add a FID layer creation option to specify the FID column name\n\nMVT/MBTiles driver:\n * take into account tileStats metadata item to decide if a field of type\n   'number' might be Integer or Integer64\n * MVT writer: clamp generated tile x, y coordinates to \\[0,(1<<z)-1\\]\n\nNAS driver:\n * remove unused nas relation layer and remove GML driver's out-of-band\n   attribute handling only used for it\n * support gfs @ notation for attributes to handle attributes for codelists\n   (fixes norBIT/alkis-import#65)\n * Fix (and refactor) update operations for GID7\n\nMySQL driver:\n * fix compliance issues with test_ogrsf\n\nOAPIF driver:\n * bump default limit to 1000 and honor schema from API (#8566)\n\nODS driver:\n * add FIELD_TYPES and HEADERS open options (#8028)\n\nOpenFileGDB driver:\n * add support for DateTime field domains\n * expose layer alias name in ALIAS_NAME layer metadata item\n\nParquet driver:\n * emit GeoParquet 1.0.0 version number\n * add a COORDINATE_PRECISION layer creation option\n * add fast implementation of Arrow Array interface when requesting WKT as WKB\n * make Parquet driver recognize a geometry column if it has\n   ARROW:extension:name=ogc.wkb/ogc.wkt field metadata\n * add a GEOM_POSSIBLE_NAMES and CRS open options for wider compatibility with\n   datasets not following GeoParquet dataset-level metadata\n * fix ExecuteSQL() MIN/MAX optimization on a UINT32 field on a Parquet 2 file\n * optimize SELECT MIN(FID), MAX(FID)\n * restrict FID column detection to Int32/Int64 data types\n * use statistics to skip row groups that don't match attribute filter (#8225)\n * use statistics of bbox.minx/miny/max/maxy fields (as found in Ouverture Maps\n   datasets) to implement fast GetExtent()\n\nPDF driver:\n * (minimal) take into account BMC operator to correctly handle BMC/EMC pairs\n   w.r.t BDC/EMC ones (#8372)\n * Read vector unstructured: take into account OCMD constructs as found in\n   recent USGS GeoPDFs (#8372)\n * ignore non-relevant StructTreeRoot in most recent USGS GeoPDFs (#8372)\n\nPGDump driver:\n * use faster file write() primitive\n\nPostgreSQL driver:\n * do not override search_path when not needed (#8641)\n\nShapefile driver:\n * use VSIGetCanonicalFilename() in GetFileList() (#8164)\n * be tolerant with .prj with lon, lat axis order (fixes #8452)\n\nTileDB driver:\n * GetNextArrowArray(): implement full spatial filtering (not just bbox\n   intersection)\n\nXLSX driver:\n * add FIELD_TYPES and HEADERS open options (#8028)\n\nWFS driver:\n * Don't issue STARTINDEX if feature count is small (#8146)\n * do not emit twice DescribeFeatureType request on servers with complex\n   features and a single layer\n * ExecuteSQL(): skip leading spaces that could cause the rest of the function\n   to malfunction\n * correctly paginate when number of features is lower than page size (#8653)\n * use numberMatched when present to avoid last empty GetFeature request, and\n   set GetFeatureCount()\n\n## SWIG Language Bindings\n\nAll bindings:\n * Map multidimensional API Rename() methods\n * Increment FeatureDefn ref count on ogr.Layer.GetLayerDefn()\n * add ogr.CreateRangeFieldDomainDateTime() and Domain.GetMinAsString()\n   /GetMaxAsString()\n * Expose GetConfigOptions()\n * add gdal.SuggestedWarpOutput()\n * Expose GDALClose\n\nJava bindings:\n * add Read/WriteRaster abilities for GDT_UInt64 & GDT_Int64 (#7893)\n * make multidimensional API usable (#8048)\n * implement ogr.CreateCodedFieldDomain() and FieldDomain.GetEnumeration()\n  (#8085)\n * eliminate some deprecations / compiler warnings (#8055)\n * Add FieldDefn::GetFieldType() compatibility method\n\nPython bindings:\n * Allow passing options as dict\n * Return context manager from Create, CreateDataSource\n * Use ogr.DataSource and gdal.Dataset as context managers\n * make gdal.Group.GetGroupNames() and GetMDArrayNames() return an empty list instead of None\n * detect invalid use of ReleaseResultSet() (#7782)\n * Invalidate band and layer refs when dataset closes\n * Invalidate mask, overview references after dataset close\n * Invalidate refs from CreateLayer on datasource close\n * Invalidate refs from CopyLayer on datasource close\n * Avoid crash when using dataset after Destroy or Release\n *  Avoid crashes when using orphaned Geometry refs\n * GetArrowStreamAsNumPy(): various fixes\n * Fix gdal.config_options to prevent migration of config options in and out of\n   thread-local storage (#8018)\n * accept numpy.int64/float64 arguments for xoff, yoff, win_xsize, win_ysize,\n   buf_xsize, buf_ysize arguments of ReadAsArray() (#8026)\n * make setup.py check that libgdal version >= python bindings version (#8029)\n * fix CoordinateTransform.TransformPoint(sequence of 3 or 4 values)\n * Use DumpReadable for Feature __repr__\n * add a outputGeotransform option to gdal.Translate()\n * Accept os.PathLike arguments where applicable\n * make Feature.SetField(field_idx_or_name, binary_values) work\n * add feature.SetFieldBinary(field_idx_or_name, binary_values)\n * throw exceptions (when enabled) on gdal_array.OpenArray()/OpenNumPyArray()/\n   OpenMultiDimensionalNumPyArray()\n * improve performance of CSLFromPySequence() on large sequences\n   (like > 100,000 strings)\n * Allow ExecuteSQL context manager to work on empty datasources\n * make sure that CPL_DEBUG=ON and gdal.UseExceptions() work fine during\n   gdal.VectorTranslate() (and similar) (#8552)\n\n# GDAL/OGR 3.7.3 Release Notes\n\nGDAL 3.7.3 is a bugfix release.\n\n## Build\n\n* CheckDependentLibraries.cmake: don't use libjpeg if disabled\n* frmts/mrf/CMakeLists.txt: ignore HAVE_JPEGTURBO_DUAL_MODE_8_12 if\n  GDAL_USE_JPEG is OFF (tune #8336)\n* FindPostgreSQL.cmake: Update the list of released PgSQL versions\n* Add support for PoDoFo >= 0.10.0 (#8356)\n* Add support for TileDB 2.17\n* Fix build with -DRENAME_INTERNAL_SHAPELIB_SYMBOLS=OFF (#8532)\n\n## GDAL 3.7.3\n\n### Algorithms\n\n* Rasterize: avoid burning the same pixel twice in MERGE_ALG=ADD mode within\n  a same geometry (#8437)\n* OpenCL warp: scan multiple devices for each platform (#8540)\n* GDALSerializeReprojectionTransformer(): fallback to WKT2 for SourceCRS/\n  TargetCRS if WKT1 cannot be used\n\n### Port\n\n* VSIReadDirRecursive(): make it work properly with a trailing slash\n  (especially on /vsizip/) (#8474)\n* /vsi7z/: accept ArcGIS Pro Project Packages\n\n### Utilities\n\n* gdal_translate -ovr: properly rescale RPC (#8386)\n* gdal_translate: when specifying -srcwin, preserve source block size in the\n  temporary VRT if srcwin top,left is a multiple of the block size\n* gdal2tiles: raise explicit exception if bad value for --s_srs (#8331)\n\n### Raster drivers\n\nENVI driver:\n * skip leading spaces at front of metadata keys\n\nGIF driver:\n * Internal giflib: fix memleak on animations (#8380)\n * Internal giflib: fix memleak on truncate files (#8383)\n\nGTiff driver:\n * multithreaded reading/writing: fix a deadlock and/or data corruption\n   situation (#8470)\n * DirectIO(): fix integer overflow when requesting more than 2 GB at once\n * Support writing a CRS of known code but unknown GeoTIFF projection method\n   (#8611). Support also a CRS of unknown code but that can be encoded as\n    ESRI_WKT if GEOTIFF_KEYS_FLAVOR=ESRI_PE creation option is used\n * JXL codec: fix wrong use of memcpy() in decoding, and add memcpy()\n   optimizations\n\nMBTiles driver:\n * BuildOverviews(): correctly set minzoom metadata (#8565)\n\nnetCDF driver:\n * multidim: add write support for Int8 data type (#8421)\n\nVRT driver:\n * IRasterIO(): avoid edge effects at sources boundaries when downsampling\n   with non-nearest resampling\n\nWCS driver:\n * remove 'FORMAT' parameter from 'DescribeCoverage' requests\n\n## OGR 3.7.3\n\n### Core\n\n* OGRSQL: fix incorrect interaction of LIMIT clause and SetNextByIndex()(#8585)\n* OGRWKBGetBoundingBox(): properly initialize envelope\n\n### OGRSpatialReference\n\n* TransformBounds(): do not emit errors when trying to reproject\n  points at poles\n* ogr_proj_p.cpp: disable pthread_atfork() optimization on MacOS (#8497)\n\n### Utilities\n\n* ogr2ogr: fix -gt 0 to disable transactions\n* ogr2ogr: make -select '' work (or gdal.VectorTranslate(selectFields=[]))\n* ogr2ogr: fix preserve_fid and explodecollections incompatible options (#8523)\n\n### Vector drivers\n\nArrow/Parquet drivers:\n * fix crash on ArrowArray interface when there is a fid column\n\nCSV driver:\n * avoid extra comma at end of header line with GEOMETRY=AS_XYZ and a single\n   attribute (#8410)\n\nFlatGeoBuf driver:\n * ArrowStream: return a released array when there are no rows (#8509)\n\nGeoPackage driver:\n * GPKG SQL layer GetNextArrowArray(): fix wrong array size when spatial\n   filtering occurs\n * ArrowStream: immediately return a release array when there are no rows\n   (#8509)\n * declare OGR_GPKG_GeometryTypeAggregate_INTERNAL only when needed\n\nGPKG/SQLITE drivers:\n * declare relevant SQL functions as SQLITE_INNOCUOUS (#8514)\n * turn PRAGMA trusted_schema = 1 when loading Spatialite (#8514)\n * turn PRAGMA trusted_schema = 1 if RTree+update mode or if views use\n   Spatialite functions (#8514)\n\nOAPIF driver:\n * make comparison of rel case insensitive to account for describedBy ->\n   describedby change\n\nOpenFileGDB driver:\n * fix opening of .gdb directories whose last component starts with 'a' and\n   is 18 character long... (#8357)\n\nNTF driver:\n * fix assertion on corrupted dataset (ossfuzz#63531)\n\nShapefile driver:\n * Reader: correct bad (multi)polygons as written by QGIS < 3.28.11 with\n   GDAL >= 3.7 (qgis/qgis#54537)\n\nSQLite driver:\n * ignore 'SRID=' layer creation option (qgis/QGIS#54560)\n\nXLSX driver:\n * do not write empty 'cols' element on empty layers, and change heuristics to\n   detect 'default' empty layers from intended empty ones (qgis/qgis#42945)\n\n## Python bindings\n\n* GetArrowStreamAsNumPy(): fix reading fixed size list arrays that were\n  ignoring the parent offset (affects Parquet)\n* GetArrowStreamAsNumPy(): fix reading fixed width binary that were misusing\n  the offset (affects Parquet)\n\n# GDAL/OGR 3.7.2 Release Notes\n\nGDAL 3.7.2 is a bugfix release.\n\n## Build\n\n* Ccache.cmake: fix warning\n* XLS: avoid compiler warning when building against freexl 2.0\n* FindSPATIALITE.cmake: updated for SpatiaLite 5.1.0\n* CMakeLists.txt: update maximum range to 3.27\n* fix building test_ofgdb_write (#8321)\n\n## GDAL 3.7.2\n\n### Port\n\n* /vsiaz/: fix cached URL names when listing /vsiaz/\n* /vsiaz/: add options to pass object_id/client_id/msi_res_id in IMDS\n  authentication requests (AZURE_IMDS_OBJECT_ID, AZURE_IMDS_CLIENT_ID,\n  AZURE_IMDS_MSI_RES_ID)\n* /vsiaz/: implement Azure Active Directory Workload Identity authentication,\n  typically for Azure Kubernetes\n\n### Core\n\n* TileMatrixSet::parse(): add support for OGC 2D Tile Matrix Set v2 (#6882)\n\n### Algorithms\n\n* Warper: do not modify bounds when doing geographic->geographic on a dataset\n  with world extent but not in [-180,180] (#8194)\n* RMS resampling: avoid potential integer overflow with UInt16 values\n* GDALChecksumImage(): fix 3.6.0 regression regarding integer overflow on\n  images with more than 2 billion pixels (#8254)\n\n### Utilities\n\n* gdalinfo -json output: emit a stac['proj:epsg'] = null object when emitting\n  proj:wkt2 or proj:projjson (#8137)\n* gdalmdimtranslate: fix wrong output dimension size when using syntax like\n  '-array name=XXX,view=[::factor_gt_1]'\n* gdal2tiles: fix exception with dataset in EPSG:4326 with longitudes > 180 in\n  WebMercator profile (#8100)\n* gdal_retile.py: allow gaps in input files larger than grid size (#8260)\n\n### Raster drivers\n\nGeoPackage driver:\n * GDALGeoPackageRasterBand::GetMetadata(): fix use after free\n * fix missing GRID_CELL_ENCODING metadata item when there is other metadata\n * remove .aux.xml file in Delete()\n\nGTiff driver:\n * fix reading .tif + .tif.aux.xml file with xml:ESRI SourceGCPs without\n   TIFFTAG_RESOLUTIONUNIT (#8083)\n\nHDF5 driver:\n * more efficient metadata collection (no functional change)\n * deal with int64/uint64 attributes\n * remove trailing space in multi-valued metadata items\n * remove dataset name prefix in band level metadata\n * address Planet's datacube band-specific metadata\n\nNITF driver:\n * fix MIN/MAX_LONG/LAT when reading RPC00B\n * add support for CSCSDB (Common Sensor Covariance Support Data) DES from\n   GLAS/GFM SDEs\n * nitf_spec.xml: corrections to CSEXRB TRE\n\nOGCAPI driver:\n * make it work when the media type of links (expected to be application/json)\n   is missing, using Accept content negotiation (#7970)\n * do not try to use the 'uri' member of a tilematrixset definition document\n * reproject bounding box from CRS84 to tile matrix set CRS\n * skip too small overview levels\n * remove erroneous taking into account of tilematrixset limits\n\nSTACIT driver:\n * correctly process asset 'href' starting with 'file://' (#8135)\n * make it tolerant to missing proj:epsg if proj:wkt2 or proj:projjson are\n   provided (#8137)\n * apply vsis3 protocol to s3:// items\n\nWEBP driver:\n * fix build against libwebp < 0.4.0 (#8111)\n\nZarr driver:\n * Zarr V2: fix duplicate array listing when both a 'foo' file and 'foo/'\n   directory exist on the object storage (#8192)\n\n## OGR 3.7.2\n\n### Core\n\n* Fix ExecuteSQL(dialect='SQLITE', spatialFilter=...) on a Memory datasource\n* OGRCurve::isClockwise(): fix wrong result when lowest rightmost vertex is the\n  first one (#8296)\n\n### Utilities\n\n* ogrinfo: return non-zero ret code if -sql failed (#8215)\n* ogrinfo_output.schema.json: reflect actual output of ogrinfo (#8300)\n* ogr2ogr: support -nlt GEOMETRY -nlt CONVERT_TO_LINEAR (#8101)\n\n### Vector drivers\n\nHANA driver:\n * Fix incorrect detection of table name for view columns\n * Don't process layers that are not in TABLES list\n\nOGCAPI driver:\n * vector tiles: avoid potential infinite time to establish layer definition\n\nOpenFileGDB driver:\n * make Open() to fail if requested to open in update mode and that files are\n   in read-only (qgis/QGIS#53715)\n\nShapefile driver:\n * make CreateLayer() + GetFileList() list the .prj file when it exists (#8167)\n\nWFS driver:\n * do not surround selected fields names in PROPERTYNAME with open and close\n   parenthesis (#8089)\n\n## Python bindings\n\n* fix typo on slopeFormat parameter (#8154)\n* osgeo_utils: align base.get_extension() and util.DoesDriverHandleExtension()\n  on C++ versions (#8277)\n\n# GDAL/OGR 3.7.1 Release Notes\n\nGDAL 3.7.1 is a bugfix release.\n\n## New installed files\n\n* data/gfs.xsd and data/gml_registry.xsd\n\n## Build\n\n* CMake: only try to detect HDF5 CXX component if KEA is detected\n* CMake: capture dependency of MBTiles driver to MVT\n* CMake: add a EXPAT_USE_STATIC_LIBS hint (#7955)\n* CMake: add a CURL_USE_STATIC_LIBS hint (#7955)\n* minified_zutil.h: fix build error on Gentoo and derivatives (#7739)\n* Fix build error with MSYS64 UCRT64 with gcc 13 (#7909)\n* FlatGeobuf: fix build error when new Abseil headers are present (#7894)\n* Fix build against latest libjxl master\n\n## GDAL 3.7.1\n\n### Port\n\n* CPLBloscDecompressor(): fix logic error when providing an output buffer\n  larger than needed\n* Fix issues on big endian hosts: recode from UTF-16\n* RequiresUnixPathSeparator(): takes into account /vsihdfs/ and /vsiwebhdfs/\n  (#7801)\n* /vsiadls/: make it take into account Azure SAS token\n* /vsiaz/: fix truncated Authorization header with very large SAS tokens\n\n### Core\n\n* Multidim GDALGroup::CopyFrom(): modify logic to copy first indexing variables.\n  Fixes issue with gdalmdimtranslate from Zarr to netCDF\n* RawRasterBand::IRasterIO(): avoid harmless unsigned integer overflow\n  (ossfuzz #57371)\n* GDALDatasetPool: Make VRT pool size clamping more lenient (#7977)\n* PAM rasterband: on .aux.xml reading do not systematically set (offset,scale)\n  to (0,1) and similarly for unit type (#7997)\n\n### Algorithms\n\n* Warp (average,mode,min,max,med,Q1,Q3): fix issue on edge of target valid area\n  when oversampling (#7733)\n* Warp average resampling: using Weighted incremental algorithm mean for numeric\n  stability\n* GDALWarpResolveWorkingDataType(): take into account data type of both source\n  and target dataset\n\n### Utilities\n\n* gdallocationinfo: set exit code to 1 as soon as one coordinate is off the file\n  (#7759)\n* gdal_rasterize: issue explicit error message when specifying invalid layer\n  name, and catch absence of bounds (#7763)\n* gdalsrsinfo: when -e flag is passed, report properly non EPSG authorities\n  (#7833)\n* gdalwarp: make -cutline to work again with PostGIS datasources\n  (fixes 3.7.0 regression, #8023)\n* gdal_calc.py: allow \"none\" or a float for --NoDataValue (#7796)\n* gdal_calc.py: make --hideNoData imply --NoDataValue=none as documented (#8009)\n\n### Raster drivers\n\nDIMAP driver:\n * correctly set RPC origin for SPOT, PHR and PNEO (#7726)\n\nDIPEx driver:\n * fix memleak in error code path (ossfuzz 57478)\n\nERS driver:\n * avoid integer overflow (ossfuzz 57472)\n\nGTiff driver:\n * multi-threaded reader: avoid error when reading PlanarConfiguration=Separate\n   and ExtraSamples > 0 (fixes #7921)\n * Multi-threaded reader: fix crash/read errors when reading a\n   PlanarConfiguration=Separate file band per band (rasterio/rasterio#2847)\n * SRS writer: make sure to write EPSG codes only in VerticalDatumGeoKey and\n   VerticalUnitsGeoKey, and write VerticalCSTypeGeoKey = KvUserDefined,\n   VerticalDatumGeoKey = KvUserDefined and VerticalCitationGeoKey=CRS name when\n   the vertical CRS code is unknown (#7833)\n * SRS reader: try to recover the vertical datum from the name of the vertical\n   CRS if we only know it (#7833)\n * SRS reader: try to retrieve the EPSG code of a CompoundCRS if the one of its\n   horizontal and vertical part is known (#7982)\n * SPARSE_OK=YES: recognize negative floating point 0 as 0 (#8025)\n * do not emit 'WEBP_LEVEL is specified, but WEBP_LOSSLESS=YES' warning when\n   only WEBP_LOSSLESS=YES is specified\n\nHDF5 driver:\n * multidim: deal with _FillValue attribute of different type as variable\n   (e.g. for NASA GEDI L2B products)\n\nISG driver:\n * relax tolerance check to accept GEOIDEAR16_20160419.isg\n\nJP2OpenJPEG driver:\n * avoid hard crash in multi-threaded writing mode when opj_write_tile()\n   fails (#7713)\n\nnetCDF driver:\n * multidim: fix issues with data vs definition mode\n * multidim: deal with _FillValue attribute of different type as variable\n   (e.g. for NASA GEDI L2B products)\n * parse coordinates attribute from Sentinel-3 Synergy product which uses\n   comma instead of space\n\nOGCAPI driver:\n * Fix TILES raster API not working\n * make sure OGR_ENABLE_DRIVER_GML is set when the driver is built\n\nOpenFileGDB driver:\n * correctly deal with rasters whose block_origin_x/y != (eminx, emaxy) (#7794)\n * do not emit error if SRS is unknown (#7794)\n * reduce debug traces on raster datasets\n\nSAFE driver:\n * fix non-contiguous number in subdataset names (#7939)\n\nZarr driver:\n * avoid GetMDArrayNames() to report duplicates\n * fix SRS DataAxisToSRSAxisMapping\n\nWMTS driver:\n * workaround buggy TileMatrix.TopLeftCorner of one server (#5729)\n\n## OGR 3.7.1\n\n### Core\n\n* OGRGeometryFactory::createGeometry(): take into account Z/M flags\n* SQL SQLite: fix error on field of type String with GetWidth() > 0 and a\n  field domain\n\n### Vector drivers\n\nCSV driver:\n * do not allow CREATE_CSVT=YES with /vsistdout/ (#7699), and make it possible\n   to use GEOMETRY_NAME with /vsistdout/ (#7700)\n\nDGN driver:\n * CreateFeature(): fix crash on empty geometries (ossfuzz 56771)\n\nDXF driver:\n * show constant ATTDEFs as text\n\nFileGDB driver:\n * OGRCreateFromShapeBin(): accept empty polygon (#7986)\n\nGeoJSON driver:\n * Internal libjson: use locale insensitive CPLStrtod() to parse floating point\n   numbers (qgis/qgis#52731)\n\nGeoPackage driver:\n * ArrowArray interface: make it tolerant to Spatialite geometries\n * fix handling of geometry column from a view, when it is the result of\n   computing, and not just simple selection from a table\n * define a 'gdal_spatialite_computed_geom_column' extension when a view has\n   its geometry column being the result of Spatialite SQL function\n * implement GeoPackage 1.4 RTree triggers, and add a VERSION=1.4 dsco (#7823)\n\nGML driver:\n * fix 3.7.0 regression when reading files with several layers, whose features\n   have gml:boundedBy elements and the geometry element name is different\n   between the different layers (#7925)\n * add a USE_BBOX=YES open option to allow using gml:boundedBy as feature\n   geometry (#7947) to revert back to < 3.7.0 behavior by default\n\nGTFS driver:\n * Fix date parsing\n\nMITAB driver:\n * fix reading CRS with LCC_2SP and non-metre unit (#7715)\n\nMSSQL driver:\n * fix crash in ogr2ogr when BCP is enabled (#7787)\n * fix GEOGRAPHY clockwise vertex order (#1128)\n * fix cannot write binary field in BCP mode (#3040)\n\nMVT driver:\n * writing: improve dealing with polygon inner rings (#7890)\n * writing: fix wrong winding order for polygons after MakeValid()\n\nMySQL driver:\n * add support for inserting new SRS in MySQL >= 8\n   INFORMATION_SCHEMA.ST_SPATIAL_REFERENCE_SYSTEMS table (#7781)\n\nnetCDF driver:\n * fix crash on invalid layer (ossfuzz 58469)\n\nOpenFileGDB driver:\n * allows to modify a record with a GlobalID field without regenerating it\n * correctly read POINT EMPTY (#7986)\n\nParquet driver:\n * fix crash when calling SetIgnoredFields() after SetAttributeFilter()\n   (qgis/QGIS#53301)\n * do not hang on empty RecordBatch (#8042)\n\nSDTS driver:\n * fix reading of polygon geometries (#7680)\n\nShapefile driver:\n * in creation, uses w+b file opening mode instead of wb followed by r+b, to\n   support network file systems having sequential write only and when using\n   CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES (#7801)\n * SHPRestoreSHX: update SHX content length even if error occurred\n * Internal Shapelib: update list of symbols to rename to avoid conflicts with\n   external shapelib (microsoft/vcpkg#32070)\n\nTileDB driver:\n * add TILE_Z_EXTENT layer creation option (#7683)\n * fully apply spatial filter when using ArrowArray interface\n * FillPrimitiveListArray(): fix data corruption with spatial filter\n\n## Python bindings\n\n* take into account Int64/UInt64 in gdal.Array.Write(array(...))\n* do not pass deprecated -py3 SWIG switch for SWIG >= 4.1\n* GetArrowStreamAsNumPy(): fix wrong retrieval of content when\n  ArrowArray::offset != 0 on a field of primitive type (integer, float)\n* works around issue with SWIG 4.1 related to module unloading (#4907)\n\n# GDAL/OGR 3.7.0 Releases Notes\n\nGDAL/OGR 3.7.0 is a feature release.\nThose notes include changes since GDAL 3.6.0, but not already included in a\nGDAL 3.6.x bugfix release.\n\n## In a nutshell...\n\n* [RFC 87](https://gdal.org/development/rfc/rfc87_signed_int8.html): Add\n  GDT_Int8 support\n* [RFC 88](https://gdal.org/development/rfc/rfc88_googletest.html): switch\n  to GoogleTest framework for C++ tests (#3525)\n* [RFC 89](https://gdal.org/development/rfc/rfc89_sql_logging_callback.html):\n  SQL query logging callback (#6967)\n* [RFC 90](https://gdal.org/development/rfc/rfc90_read_compressed_data.html):\n  Direct access to compressed raster data\n* [RFC 91](https://gdal.org/development/rfc/rfc91_dataset_close.html):\n  GDALDataset::Close() method\n* [RFC 93](https://gdal.org/development/rfc/rfc93_update_feature.html):\n  OGRLayer::UpdateFeature() method\n* [RFC 94](https://gdal.org/development/rfc/rfc94_field_precision_width_metadata.html):\n  Numeric fields width/precision metadata\n* ogrinfo: make it accessible through a new GDALVectorInfo() C API call, and\n  a -json switch\n* Add read-only raster driver NOAA_B to read NOAA GEOCON/NADCON5 .b grids\n* Add read-only raster driver NSIDCbin for Sea Ice Concentrations (#7263)\n* Add read-only vector GTFS (General Transit Feed Specification) driver\n* TileDB: add read/write vector side\n* Add support for [SOZip](https://sozip.org) (Seek Optimized ZIP) with enhanced\n  /vsizip/ virtual file system and a new sozip utility\n* OpenFileGDB: add read-only support for raster datasets (.gdb v10)\n* PNG: 1.7-2.0x speed-up in whole image decompression with libdeflate on\n  Intel/AMD CPUs. Benefits GPKG, MRF drivers\n* [RFC 69](https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html):\n  C++ code reformatting\n* Code linting and security fixes\n* Remove any traces of Rasdaman driver, now moved to OSGeo/gdal-extra-drivers\n  repository (#4808)\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.7/MIGRATION_GUIDE.TXT)\n\n## New installed files\n\n* data/gfs.xsd: XML schema for .gfs files (#6655)\n* data/gml_registry.xsd: new file with XML schema of gml_registry.xml (#6716)\n* data/ogrinfo_output.schema.json: to validate ogrinfo -json output\n* data/gdalinfo_output.schema.json: to validate gdalinfo -json output (fixes #6850)\n* data/grib2_table_4_2_0_21.csv\n* data/grib2_table_4_2_2_6.csv\n* bin/sozip\n\n## Build\n\n* make BUILD_JAVA/CSHARP/PYTHON_BINDINGS default value dependent on the\n  presence of requirements, and error out if those variables are set but\n  requirements are missing\n* Python bindings: remove generated files and require SWIG to be present\n* Fix build with -DOGR_ENABLE_DRIVER_GML=OFF (#6647)\n* make it possible to build on Linux if linux/fs.h is missing by explicitly\n  setting ACCEPT_MISSING_LINUX_FS_HEADER\n* Add support for (future) libjpeg-turbo 2.2 with its 8/12 bit dual mode (#6645)\n* PDF driver with PDFium support must be built against PDFium from\n  https://github.com/rouault/pdfium_build_gdal_3_7\n* No longer alias VSILFILE* to FILE* in non-DEBUG builds (#6790)\n* Add build option for using static Arrow/Parquet build (#7082)\n* Quote variables for INTERFACE_INCLUDE_DIRECTORIES / IMPORTED_LOCATION\n* Enable OpenCL at build-time, but disable it at runtime by default unless\n  the USE_OPENCL warping option or GDAL_USE_OPENCL config option is set (#7224)\n* Fix MSVC x64 builds with /arch:AVX2 (#7625)\n\n## New optional dependencies\n\n* libarchive for new /vsi7z/ and /vsirar/ virtual file systems\n\n## GDAL 3.7.0 - Overview of Changes\n\n### Port\n\n* /vsizip/: add read support for Deflate64 (#7013)\n* Add read-only /vsi7z/ and /vsirar/ virtual file systems (depends on libarchive)\n* Make it possible to specify all HTTP related configuration options as\n  path-specific options with VSISetPathSpecificOption()\n* VSIGSFSHandler::UnlinkBatch(): avoid potential nullptr deref\n* /vsiaz/: implement UnlinkBatch()\n* /vsis3/: add CPL_VSIS3_CREATE_DIR_OBJECT configuration option\n* /vsigs/ allow GDAL_HTTP_HEADERS config option to be used as authentication method if contains at least a line starting with \"Authorization:\"\n* /vsihdfs/: fix ReadDir() and EOF flag (#7632)\n* add a robust CPLParseKeyValueJson() function (#6753)\n* HTTP: set default User-Agent header to GDAL/x.y.z and add a\n  CPLHTTPSetDefaultUserAgent() function (#6376)\n* HTTP: CUSTOMREQUEST option overrides POST while send form\n* /vsicurl/ / CPLHTTPFetch(): add a GDAL_HTTP_NETRC_FILE config option\n* /vsicurl/ / CPLHTTPFetch(): add options to support SSL client certificates\n* VSICurlHandle::ReadMultiRange(): avoid potential infinite loop\n* Add VSIVirtualHandle::AdviseRead() virtual method and implement it in /vsicurl\n* Add VSICopyFile()\n* CPLCopyFile(): remap onto VSICopyFile()\n* Implement CopyFile() for VSIZipFilesystemHandler\n* Implement GetFileMetadata() for /vsizip/\n* CPLDefaultFindFile: Warn if file not found and GDAL_DATA not defined\n* Add VSIDuplicateFileSystemHandler() (for remote stores identifcal to popular\n  ones, but with different settings).\n* Make C type VSILFILE an alias of C++ VSIVirtualHandle (and make it a struct\n  for that purpose) (#6643)\n* Add a CPLGetErrorHandler() function\n* Add VSIVirtualHandleUniquePtr type, unique pointer of VSIVirtualHandle that\n  calls the Close() method\n\n### Core\n\n* ComputeRasterMinMax(), ComputeStatistics(), GetHistogram(): take into account\n  mask band (and not only nodata value)\n* Modify GDALFlushCache() and GDALDataset::FlushCache() to return CPLErr\n  instead of void\n* Add GDALDataset::Close() virtual method, call it from GDALClose() and make\n  GDALClose() return a CPLErr\n* GDALDataset:: add a SetBand() method that takes a GDALRasterBand unique_ptr\n* RawRasterBand: cache GDAL_ONE_BIG_READ value for RasterIO (#6726)\n* RawRasterBand: add IsValid() and Create() methods that return a unique_ptr\n* RawDataset::RasterIO(): add optimization when reading from a BIP dataset to\n  a BIP buffer (#6819)\n* RAW: fix performance issue when reading files with very small width (#1140)\n* Raw drivers: check RawRasterBand validity\n* LoadPythonAPI(): take into account Python 3.12\n* NASAKeywordHandler: add a Parse() method and change Ingest() return type to be bool\n* Add GDALMDArray::GetGridded() / GDALMDArrayGetGridded()\n* Add GDALMDArray::Resize() / GDALMDArrayResize(). Implement it in MEM, netCDF\n  and Zarr drivers\n* Support blocks > 2GB in GDALAllValidMaskBand and GDALNoDataValuesMaskBand\n* GDALVersionInfo(\"BUILD_INFO\"): report CURL_ENABLED=YES and CURL_VERSION=x.y.z\n* Add CPLSubscribeToSetConfigOption() to subscribe to config option settings\n* GoogleMapsCompatible tiling scheme: Increase max zoom level from 24 to 30\n* JP2 structure dump: fix interpretation of METH field in COLR JP2 box\n* Enable SSE2/AVX2 optims on 32bit MSVC builds if /arch:AVX2 is defined (#7625)\n\n### Algorithms\n\n* Polygonizer: switch implementation to Two-Arm Chains EdgeTracing Algorithm,\n  which is much faster in some cases (#7344)\n* Prefix ParseAlgorithmAndOptions() public symbol with GDALGrid for proper\n  namespacing, and add #define alias for API compat (but ABI breakage)\n* Pansharpening: require geotransform on panchromatic and multispectral bands.\n  Remove undocumented and somewhat broken MSShiftX and MSShiftY options\n* Warper: fix issue with insufficiently large source window, visible with RPC\n  DEM warping (#7491)\n\n### Utilities\n\n* gdalwarp: add -srcband (aliased to -b) and -dstband options\n* gdalwarp: preserve source resolution by default when no reprojection is\n  involved (behavior change), and add '-tr square' to use previous behavior\n* gdalwarp: better error message when not providing enough values after a switch\n  (#7086)\n* gdal_rasterize: support @filename for -sql option (#7232)\n* gdal_rasterize: add -oo switch for open options (#7329)\n* gdal_grid: add -oo switch for open options (#7329)\n* gdal_polygonize.py: use transactions to speed-up writing\n* gdal_polygonize.py: add a -lco option, and fix -o (#7374)\n* gdalbuildvrt: implement numerically stable averaging of resolution (#7502)\n* gdal2tiles: use logging module instead of print() for verbose output (#4894)\n* gdal2tiles: update doctype to html format (#7631)\n* gdal2tiles: uses GDALTermProgress() for progress bar\n* gdal_calc: uses GDALTermProgress() for progress bar (#7549)\n* gdal_fillnodata: fix parsing of -co option\n* validate_gpkg.py: make it work better on examples from ngageoint repositories\n* gdal_cp.py: use gdal.CopyFile()\n* C/C++ command line utilities: take into account GDALClose() error code\n\n### Raster drivers\n\nARG driver:\n * add support for int64/uint64\n\nCOG driver:\n * relax a bit the tolerance when computing tile number\n * propagate NUM_THREADS to warping (#7479)\n * add NBITS creation option (#7361)\n\nERS driver:\n * support GDA2020\n\nGeoPackage driver:\n * load/save band statistics in GPKG metadata tables or PAM .aux.xml\n\nGRIB driver:\n * update tables to wmo-im/GRIB2@v30\n * g2clib: allow negative longitudes in grid templates Lon/Lat, Rotated,\n   Stretched, Stretched & Rotated, LAEA (#7456) and Mercator\n * fix GetNoDataValue() on band > 1 when there's a bitmap section (#7649)\n\nGTiff driver:\n * add a JXL_ALPHA_DISTANCE creation option, e.g. to have lossless alpha and\n   lossy RGB.\n * call VSIVirtualHandle::AdviseRead() in multithreaded read implementation\n * implement GetCompressionFormats() and ReadCompressedData()\n * add minimum support for reading CRS from ESRI's .xml side car file (#7187)\n * use libtiff >= 4.5 reentrant error handlers (when available) (#6659)\n * make sure that band description in PAM overrides the one coming from\n   GDAL_METADATA tag\n * Internal libtiff: resync with upstream\n\nHFA driver:\n * add a DISABLEPESTRING=YES creation option to disable use of ArcGIS PE String\n   (#1003)\n\nHDF5 driver:\n * add generic support for HDF-EOS5 grids and swaths (#7117)\n\nJP2OpenJPEG driver:\n * add workaround for dop10 orthophotos wrong colorspace\n\nJPEG driver:\n * add a APPLY_ORIENTATION=YES open option to take into account EXIF_Orientation\n * advertise JPEG_QUALITY metadata item in IMAGE_STRUCTURE domain\n * use ReadCompressedData(), implement lossless copy from JPEGXL that has\n   JPEG reconstruction box\n * add a LOSSLESS_COPY creation option\n * add support for reading lossless 8-bit JPEG if using libjpeg-turbo >= 2.2\n * change behavior to return an error and not just a warning with reading a\n   truncated file\n * Internal libjpeg: decompressor: initialize Huffman tables to avoid issues\n   with some FileGDB raster\n\nJPEGXL driver:\n * add a ALPHA_DISTANCE creation option, e.g. to have lossless alpha and\n   lossy RGB.\n * add a APPLY_ORIENTATION=YES open option to take into account EXIF_Orientation\n * advertise COMPRESSION_REVERSIBILITY=LOSSY when there is a JPEG reconstruction\n   box\n * add a LOSSLESS_COPY creation option\n * implement creation from JPEGXL content\n * fix lossless copy of JPEG with zlib compressed mask band\n * implement GetCompressionFormats() and ReadCompressedData()\n\nMEM driver:\n * implement GetCoordinateVariables() from coordinates attribute\n * Adds 'SPATIALREFERENCE' element to the DSN format (#7272)\n\nMRF driver:\n * make it use PNG driver for decompression of 8-bit images\n\nnetCDF driver:\n * add a ASSUME_LONGLAT open option (#6195)\n * add heuristics to detect invalid validity range when scale_factor is\n   present (#7167)\n * report geolocation array for NASA L2 ocean colour products (#7605)\n\nNITF driver:\n * nitf_spec.xml: add definition for subheader of CSATTB, CEEPHB and CSSFAB DES\n   of GLAS/GFM\n * add capability of decoding DES data part as XML fields and add descriptors\n   for CSATTB, CEEPHB and CSSFAB DES\n * add VALIDATE and FAIL_IF_VALIDATION_ERROR open options\n * fix bug that prevents adding subsequent TREs after a HEX TRE (#6827)\n\nOGCAPI driver:\n * define raster/vector scope of open options\n * Passed uri to TileMatrixSet::parse\n * Updated uris of well-known tile matrix sets\n\nPCIDSK driver:\n * support Web Mercator projection (#7647)\n\nPDF driver:\n * skip JP2ECW driver if ECW_ENCODE_KEY required but not found\n\nPNG driver:\n * 1.7-2.0x speed-up in whole image decompression with libdeflate on Intel/AMD CPUs\n\nRMF driver:\n * Add scale, name, frame support.\n * Add vert CS write support.\n * Implement GetSuggestedBlockAccessPattern\n\nVRT driver:\n * add 'a_offset', 'a_scale', 'a_srs', 'a_ullr', 'expand', 'exponent', 'gcp',\n  'if', 'ot', 'outsize', 'ovr', 'scale' options for vrt:// connection string\n * add BLOCKXSIZE and BLOCKYSIZE creation options\n * Fix excessive RAM usage when reading a VRT made of single-tiled JPEG2000\n   files read with the JP2OpenJPEG driver\n * implement GetCompressionFormats() and ReadCompressedData()\n * derived band: add a <SkipNonContributingSources>true optional element\n   to discard non contributing sources (#7223)\n * VRTPansharpened: avoid issue when querying overviews when PAN and MS bands\n   have significant different spatial extent\n * serialize NODATA/NoDataValue elements with double precision (#7486)\n * fix warning regarding with OpenShared with vrt://http://example.com/test.jp2\n   with the JP2OpenJPEG driver\n\nWEBP driver:\n * implement GetCompressionFormats() and ReadCompressedData()\n\n## OGR 3.7.0 - Overview of Changes\n\n### Core\n\n* Add OGRLayer::UpdateFeature() and OGR_L_UpdateFeature() (RFC 93).\n  Implement it in Memory, GPKG, MongoDBv3, PG\n* OGRFeatureDefn: add GetFields() and GetGeomFields() for easier C++ iteration\n* OGRFieldDefn: add GetComment() / SetComment() methods\n* OGRFeature/OGRGeometry: add a DumpReadable method that outputs to a string\n* Add GDAL_DMD_ILLEGAL_FIELD_NAMES, and feel it for OpenFileGDB, FileGDB,\n  PostgreSQL\n* Add GDAL_DMD_RELATIONSHIP_RELATED_TABLE_TYPES: list of standard related table\n  types recognized by the driver, and feel it for OpenFileGDB, FileGDB and GPKG\n* Add GDAL_DMD_CREATION_FIELD_DEFN_FLAGS metadata\n* Add DCAP_FEATURE_STYLES_READ and DCAP_FEATURE_STYLES_WRITE capabilities\n* Add ALTER_ALTERNATIVE_NAME_FLAG for use changing a field's alternative name\n  when calling OGR_L_AlterFieldDefn\n* Add ALTER_COMMENT_FLAG for altering field comments via OGR_L_AlterFieldDefn\n* Add OGRLayer::GetSupportedSRSList() and SetActiveSRS()\n* OGRToOGCGeomType(): add options to control output\n* GenSQL: fix SetAttributeFilter() when dialect=OGRSQL and not forwarding the\n  initial where clause to the source layer (#7087)\n* OGR SQL: do not emit error message when comparing a NULL datetime\n* OGRFeature::SetField(string argument): for bool, recognize 0/false/off/no as\n  false and 1/true/on/yes as true\n* Add OGRFeature::GetFieldAsISO8601DateTime() (#7555)\n* Geometry WKT import: accept nan as a value, for parity with PostGIS and GEOS\n* GDALDataset::CopyLayer(): copy source layer metadata, unless the COPY_MD=NO\n  option is specified\n* Add OGRGeometry::UnaryUnion() / OGR_G_UnaryUnion()\n* SQL SQLite parser: correctly take into account statements like\n  'SELECT ... FROM json_each(...)' (#7464)\n* Make OGRGeometry::getSpatialReference() return a const OGRSpatialReference*\n* Make OGRGeomFieldDefn::GetSpatialRef() return a const OGRSpatialReference*\n\n### OGRSpatialReference\n\n* importFromWkt(): take into account COORDINATEMETADATA[] (PROJ >= 9.2)\n* update hard-coded definition of OGC:CRS84 to include the ID\n* OSR_Panorama: Add some spatial references (GSK 2011, etc.)\n* OSR_Panorama: Fix TM zone for projections with negative central meridian\n* OSR_Panorama: Fix import from invalid data\n* SetFromUserInput(): skip leading white space (#7170)\n* Make OGRCoordinateTransformation::GetSourceCS() and GetTargetCS() return a\n  const OGRSpatialReference* (#7377)\n* OSRImportFromEPSG(): emit warning message about deprecated CRS substitution\n  (#7524)\n* Allow CPLSetConfigOption('PROJ_DATA', ...) to work by making it call\n  OSRSetPROJSearchPaths()\n\n### Utilities\n\n* ogrinfo: make it accessible through a new GDALVectorInfo() C API call\n* ogrinfo: add a -json switch\n* ogrinfo: output CRS supported list\n* ogrinfo: output relationships\n* ogr2ogr: use SetActiveSRS() when possible when -t_srs is used\n* ogr2ogr: make conversion from GML2 to GPKG work without explicit -lco\n  FID=some_name_different_than_fid\n* ogr2ogr: add a -dateTimeTo option to convert datetime between timezones (#5256)\n* ogr2ogr: Improve performance of -clipsrc and -clipdst (#7197)\n* ogr2ogr: LoadGeometry(): use UnaryUnion()\n* ogrmerge.py: add optimization for GPKG -> GPKG non-single layer case (up to\n  10x faster)\n\n### Vector drivers\n\nArrow driver:\n * add support for getting/setting field alternative name and comment in\n   gdal:schema extension\n\nCSV driver:\n * recognize pipe separator and .psv extension for read (#6811)\n * fix GetFeatureCount() to work correctly with spatial and attribute filters\n * allow reading single column file (#7595)\n\nCSW driver:\n * Add 'title' as query-able property\n\nFileGDB driver:\n * do not set Length/Precision from OGR width/precision for floating-point data\n   types (#7283)\n * correct ObjectID field to have a Length of 4.\n\nFlatGeobuf driver:\n * decrease memory usage when inserting lots of features\n * speed-up writing of DateTime/Date values\n * avoid crash when writing huge geometry\n * Support reading/writing field comments in field description metadata (#7598)\n\nGML driver:\n * Use geometry in boundedBy element if there are no geometry properties\n * use srsDimension on top gml:Envelope as the default one (#6986)\n * GML geometry parsing: don't promote to 3D a 2D <gml:Box>\n * deal with only <gml:null> in boundedBy element\n * fix reading CityGML Lod2 with xlink:href in gml:Solid as found in German\n   datasets (qgis/QGIS#51647)\n * add support for getting/setting field comment\n\nGMLAS driver:\n * add BoundingShapeType as a known geometry type\n\nGPKG driver:\n * Implement relationship creation, deletion and update support\n * add direct read and create support for .gpkg.zip files\n * SQLite/GPKG: move PRELUDE_STATEMENTS evaluation just after database opening\n * add a gdal_get_pixel_value() SQL function.\n * add a SetSRID() SQL function\n * speed-up writing of DateTime/Date values\n * allow opening filenames >= 512 characters\n * do not register non-spatial layers on creation if there are already\n   unregistered non-spatial layers (qgis/qgis#51721)\n * avoid potential int overflows / crash on huge geometries\n * make SQL function ogr_layer_Extent() available (#7443)\n * Map field alternative name with \"name\" attribute from gpkg_data_columns table\n * Map field comment with \"description\" attribute from gpkg_data_columns table\n * hide implicit relationships from NGA GeoInt and Spatialite system tables\n * add ST_EnvIntersects() for faster spatial filtering when there is no\n   spatial index\n * minimum (read) support for non-standard multiple geometry columns per table\n\nGPX driver:\n * add capability to read & write content of <metadata> element (#7190)\n\nLVBAG driver:\n * fix std::find() test\n\nMITAB driver:\n * add support for LargeInt (Integer64) data type (#7162)\n\nNAS driver:\n * make it trigger only if NAS_GFS_TEMPLATE config option is set (#7529)\n\nMongoDBv3 driver:\n * avoid get_utf8() deprecatation warning with mongocxx 3.7.0\n\nnetCDF driver:\n * add support for getting/setting alternative name and comment\n\nOAPIF driver:\n * Add support for OGC API Features - Part 2 CRS extension (ie ability to work\n   with non WGS 84 CRS)\n * Add CRS/PREFERRED_CRS open options to control the active CRS\n * Add a SERVER_FEATURE_AXIS_ORDER open option\n * Implement GetSupportedSRSList() and SetActiveSRS()\n\nOCI driver:\n * improve round-tripping of EPSG CRS (#7551)\n\nOpenFileGDB driver:\n * Optimise writing of large geometries\n * allow CreateField() with OBJECTID as the column name (#51435)\n * make Delete() method to remove the directory (#7216)\n * remove traces of dealing with field precision (#7283)\n * correct ObjectID field to have a Length of 4.\n * take into account SpatialReference.VCSWKID/LatestVCSWKID for compound CRS\n * relax test to detect broken .spx\n\nOGR_VRT:\n * add support for reading alternative name and comment from VRT XML\n\nOSM driver:\n * add a tags_format=json osmconf.ini setting and TAGS_FORMAT=JSON open option,\n   as an alternative for HSTORE for other_tags/all_tags fields (#7533)\n\nParquet driver:\n * add support for getting/setting field alternative name and comment in\n   gdal:schema extension\n\nPG driver:\n * Add WKBFromEWKB() for a slightly faster OGRGeometryFromEWKB()\n * fix TEMPORARY layer creation option\n * Add SKIP_VIEWS open option to replace PG_SKIP_VIEWS config option\n * Remove PG_USE_TEXT config option\n * use standard_conforming_strings=ON\n * add support for getting/setting/altering field comments (#7587)\n * truncate table names larger than 63 characters (#7628)\n\nPGDump driver:\n * fix TEMPORARY layer creation option\n * add GEOM_COLUMN_POSITION layer creation option and allow empty FID= (#7482)\n * fix escaping of schema and table name (#7497)\n * add support for setting field comments\n * truncate table names larger than 63 characters (#7628)\n\nShapefile driver:\n * writer: do no use SHPRewindObject() for [Multi]Polygon layers, but use the\n   input OGRGeometry structure to deduce the winding order (#5315)\n * writer: prevent potential overflows on 64-bit platforms on huge geometries\n * writer: optimize MultiLineString writing\n\nSQLite driver:\n * Implement AddRelationship support\n * add a gdal_get_pixel_value() SQL function\n * allow opening filenames >= 512 characters\n * make SQL function ogr_layer_Extent() available (#7443)\n * Spatialite: remove support for libspatialite < 4.1.2\n\nWFS driver:\n * implement GetSupportedSRSList() and SetActiveSRS()\n\n## SWIG Language Bindings\n\nAll bindings:\n * add gdal.VectorInfo()\n * fix GDT_TypeCount value (affects C# and Java bindings)\n * add gdal.GetNumCPUs() and gdal.GetUsablePhysicalRAM()\n * add gdal.CopyFile()\n * fix syntax error that fail with SWIG 4.1\n\nCSHARP bindings:\n * add SkiaSharp (#6957)\n * Add missing wrappers for BuildVRT and MultiDimTranslate (#7517)\n\nPython bindings:\n * Emit FutureWarning when exceptions are not explicitly enabled or disabled.\n   Turning on exceptions by default is planned for GDAL 4.0\n * Make UseExceptions() on one of gdal/ogr/osr module affect all of them\n * add gdal/ogr/osr.ExceptionMgr() Context Manager for handling Python exception\n   state (#6637)\n * add gdal.config_option() and gdal.config_options() context manager\n * add gdal.quiet_errors() context manage\n * make ogr.Open() and ogr.OpenShared() work with verbose error when exceptions\n   are enabled\n * gdal.VectorTranslate: add missing extra options (#6486)\n * Adapt various utilities for exceptions enabled: gdal_merge.py,\n   ogr_layer_algebra.py, ogr_merge, gdalinfo.py, ogr2ogr.py\n * __init__.py: more robust handling of PATH (cf rasterio/rasterio#2713)\n * do not make gdal.PushErrorHandler()/PopErrorHandler() sensitive to the GDAL\n   error context\n * Make GetArrowStreamAsNumPy() handle large lists, strings and binaries\n * make Dataset.ExecuteSQL() usable as a context manager to automatically\n   release the layer (#7459)\n * GetArrowStreamAsNumPy(): optimization to save memory on string fields with\n   huge strings compared to the average size\n\n# GDAL/OGR 3.6.4 Release Notes\n\nGDAL 3.6.4 is a bugfix release.\n\n## GDAL 3.6.4\n\n### Port\n\n* userfaultfd: avoid it to stall on 32bit and test real working of syscall in\n  CPLIsUserFaultMappingSupported()\n\n### Core\n\n* RawRasterBand::FlushCache(): avoid crash in some situations\n* RawRasterBand::IRasterIO(): fix wrong byte swapping in Direct IO multiline\n  writing code path\n* RawRasterBand::IRasterIO(): fix optimized code path that wrongly triggered\n  on BIL layout\n* RawRasterBand::IRasterIO(): avoid reading and writing too many bytes\n* RawRasterBand::IRasterIO(): fix floating-point issues with ICC that could\n  result in wrong lines/cols being read/written\n\n### Algorithms\n\n* Rasterize all touched: tighten(decrease) the tolerance to consider that edge\n  of geometries match pixel obundaries (#7523)\n\n### Utilities\n\n* gdal_translate: fix crash when specifying -ovr on a dataset that has no\n  overviews (#7376)\n* gdalcompare.py: correctly take into account NaN nodata value (#7394)\n* gdal2xyz.py: fix -srcnodata and -dstnodata options (#7410)\n* gdal2tiles: update 'ol-layerswitcher' widget to v4.1.1 (#7544)\n\n### Raster drivers\n\nGTiff driver:\n * correctly read GCPs from ArcGIS 9 .aux.xml when TIFFTAG_RESOLUTIONUNIT=3\n  (pixels/cm) (#7484)\n\nHDF5 driver:\n * fix detecting if HDF5 library is thread-safe (refs #7340)\n\nLCP driver:\n * CreateCopy(): fix crash on negative pixel values (#7561)\n\nMRF driver:\n * restore SetSpatialRef() that was wrongly deleted in 3.6.0\n\nnetCDF driver:\n * restore capability of reading CF-1.6-featureType vector layers even if the\n   conventions >= CF 1.8, and improve featureType=trajectory by adding the\n   time attribute (fixes #7550)\n\n## OGR 3.6.4\n\n### Core\n\n* OGRSQL: fix 'SELECT ... WHERE ... AND ... AND ... AND ... UNION ALL ...'\n  (#3395)\n* OGRUnionLayer::GetExtent(): do not emit error on no-geometry layer\n* OGREditableLayer::IUpsertFeature(): fix memleak\n\n### OGRSpatialReference\n\n* Fix OGRSpatialReference::SetProjCS() on an existing BoundCRS;\n  affects GeoTIFF SRS reader (fixes gdal-dev/2023-March/057011.html)\n\n### Utilities\n\n* ogr2ogr: fix and automate conversion from list types to String(JSON) when the\n  output driver doesn't support list types but String(JSON) (#7397)\n\n### Vector drivers\n\nCSV driver:\n * CSVSplitLine(): do not treat in a special way double quotes that appear in\n   the middle of a field\n\nFlatGeobuf driver:\n * improve handling of null geoms (#7483)\n\nGeoPackage driver:\n * Update definition of gpkg_data_columns to remove unique constraint on \"name\"\n\nOpenFileGDB driver:\n * fix write corruption when re-using freespace slots in some editing scenarios\n   (#7504)\n * relax test to detect broken .spx\n * CreateField(): in approxOK mode, do not error out if default value of a\n   DateTime field is CURRENT_TIMESTAMP, just ignore it with a warning (#7589)\n\nOSM driver:\n * Fix handling of closed_ways_are_polygons setting in osmconf.ini (#7488)\n\nS57 driver:\n * s57objectclasses.csv: apply S-57 Edition 3.1 Supplement No. 2\n\nSQLite driver:\n * GDAL as a SQLite3 loadable extension: avoid crash on Linux\n\n# GDAL/OGR 3.6.3 Release Notes\n\nGDAL 3.6.3 is a bugfix release.\n\n## Build\n\n* CMake: Fix integration of find_package2()\n* CMake: avoid HDF4 CMake error with Windows paths with spaces\n* CMake: quote variables for INTERFACE_INCLUDE_DIRECTORIES / IMPORTED_LOCATION\n* CMake: fix wrong test when GDAL_SET_INSTALL_RELATIVE_RPATH is set\n* CMake: issue an error when the user explicitly asks for a condition-dependent\n  driver and the condition is not met\n* CMake: add include to FindSQLite3.cmake\n* fix uclibc build without NPTL\n* zlib: Add ZLIB_IS_STATIC build option\n* FindCryptoPP.cmake: properly take into account _LIBRARY_RELEASE/_DEBUG (#7338)\n* FindPoppler.cmake: check that Poppler private headers are available (#7352)\n\n## GDAL 3.6.3\n\n### Port\n\n* CPLGetPhysicalRAM(): take into account current cgroup (v1 and v2)\n* CPLGetPhysicalRAM(): take into account MemTotal limit from /proc/meminfo\n* /vsicurl/: fix CPL_VSIL_CURL_USE_HEAD=NO mode (#7150)\n* Avoid use of deprecated ZSTD_getDecompressedSize() function with libzstd 1.3+\n* cpl_vsil_crypt.cpp: fix build isse on Windows (#7304)\n\n### Algorithms\n\n* GDALPolygonizeT(): add sanity check\n* GDALRasterPolygonEnumeratorT::NewPolygon(): check memory allocation to avoid\n  crash (#7027)\n* Warper: do not use OpenCL code path when pafUnifiedSrcDensity is not null\n  (#7192)\n* Warper: optimize a bit when warping a chunk fully within the cutline\n* Geoloc inverse transformer: fix numeric instability when quadrilaterals are\n  degenerate to triangles (#7302)\n\n### Core\n\n* GDALProxyPoolRasterBand::FlushCache(): fix for ref counting when calling\n  FlushCache() on GDALProxyPoolMaskBand or GDALProxyPoolOverviewRasterBand\n* VirtualMem: Fix mremap() detection with clang 15, and disable\n  HAVE_VIRTUAL_MEM_VMA if HAVE_5ARGS_MREMAP not found\n\n### Utilities\n\n* gdal_translate: make -colorinterp work on a source band that is a mask band\n* gdalmdimtranslate: do not require VRT driver to be registered (#7021)\n* gdalmdimtranslate: fix subsetting in the situation of dataset of #7199\n* gdalwarp: fix vshift mode when vertical unit of dstSrs is non-metric\n* gdalwarp: overview choice: fix longitude wrap problem (#7019)\n* gdalwarp: allow up to inaccuracy in cropline coordinates up to 0.1% of a\n  pixel size for rounding (#7226)\n* gdalsrsinfo: fix crash on 'gdalsrsinfo IAU:2015:49902 -o xml'\n* gdal_retile.py: fix wrong basename for .aux.xml files (#7120)\n* gdallocationinfo: fix issue with VRTComplexSource and nodata (#7183)\n* gdal_rasterize: ignore features whose Z attribute is null/unset (#7241)\n\n### Raster drivers\n\nBMP driver:\n * Make sure file is created at proper size if only calling Create() without\n   writing pixels (#7025)\n * Create(): add checks and warnings for maximum dimensions\n\nCOG driver:\n * avoid warning message when using -co COMPRESS=WEBP -co QUALITY=100 (#7153)\n\nDIMAP driver:\n * optimize performance of dataset RasterIO()\n\nGRIB driver:\n * fix reading South Polar Stereographic from GRIB1 datasets (#7298)\n * degrib: replace use of sprintf() with snprintf()\n\nGTiff driver:\n * GTiffJPEGOverviewBand::IReadBlock(): remove hack that causes read errors in\n   some circumstances\n * do not use implicit JPEG overviews with non-nearest resampling\n * fix generation of external overviews on 1xsmall_height rasters (#7194)\n\nGTX driver:\n * fix (likely harmless in practice) integer overflow (ossfuzz#55718)\n\nHDF5 driver:\n * add a GDAL_ENABLE_HDF5_GLOBAL_LOCK build option to add a global lock when\n   the HDF5 library is not built with thread-safety enabled (#7340)\n\nHFA driver:\n * ERDAS Imagine SRS support: various fixes: Vertical Perspective projection,\n   LCC_1SP, Mercator_2SP, Eqirectanglar, Hotine Obliqe Mercator Azimuth Center\n\nJPEG driver:\n * Correctly read GCPS when an .aux.xml sidecar has GeodataXform present in the\n   ESRI metadata element instead of root element\n\nJPEGXL driver:\n * CreateCopy(): fix memory leak when writing georeferencing\n\nMBTiles driver:\n * fix nullptr deref when calling GetMetadata() on a dataset returned by\n   Create() (#7067)\n\nnetCDF driver:\n * quote variable name in subdataset list if it contains a column character\n   (#7061)\n * report GEOLOCATION metadata for a lon/lat indexed variable where lon and/or\n   lat has irregular spacing\n * netCDFDimension::GetIndexingVariable(): be more restrictive\n * resolve variable names beyond the parent group (#7325)\n\nNITF driver:\n * update CLEVEL to appropriate values when using compression / multiple image\n   segments\n * fix bug that prevents adding subsequent TREs after a HEX TRE (#6827)\n\nPDF driver:\n * skip JP2ECW driver if ECW_ENCODE_KEY required but not found\n\nTileDB driver:\n * fix compatibility with tiledb 2.14\n\nVRT:\n * warp: fix issue when warping a Float32 raster with nodata = +/- FLOAT_MAX\n\nZMap creation:\n * fix potential truncation of nodata value (#7203)\n\n## OGR 3.6.3\n\n### Core\n\n* OGRSQL: fix crash when comparing integer array fields (#6714)\n* OGRSQL: fix SetAttributeFilter() when dialect=OGRSQL and not forwarding the\n  initial where clause to the source layer (#7087)\n\n### Utilities\n\n* ogr2ogr: fix -clipsrc/-clipdst when clip dataset has SRS != features's\n  geometry (#7126)\n\n### Vector drivers\n\nGeoJSON driver:\n * avoid duplication of FID in streaming parser (#7258)\n * declare GDAL_DCAP_MEASURED_GEOMETRIES and ODsCMeasuredGeometries\n * fix mixed type field not flagged as JSON if first is a string (#7313)\n * writer: take into account COORDINATE_PRECISION for top bbox (#7319)\n * writer: fix json mixed types roundtrip (#7368)\n\nGeoJSONSeq driver:\n * fix writing to /vsigzip/ (#7130)\n\nGeoPackage driver:\n * avoid issue with duplicated column names in some cases (#6976)\n * GetNextArrowArray(): fix retrieving only the geometry (geopandas/pyogrio#212)\n * restore async RTree building for 1st layer (broken by GDAL 3.6.2)\n\nGML driver:\n * fix CurvePolygon export of CompoundCurve and CircularString child elements\n   (#7294)\n\nHANA driver:\n * fix DSN open option\n\nMITAB driver:\n * handle projection methods 34 (extended transverse mercator) and 35 (Hotine\n   Oblique Mercator) (#7161)\n * Fix possible crash on NULL feature text (#7341)\n * Fix a typo at MITABGetCustomDatum\n\nNAS driver:\n * fix file descriptor leak in error code path\n\nOpenFileGDB driver:\n * fix performance issue when identifying a CRS\n * detect broken .spx file with wrong index depth (qgis/qgis#32534)\n * index reading: avoid integer overflow on index larger than 2 GB\n * allow CreateField() with OBJECTID as the column name (qgis/qgis#51435)\n * make Delete() method to remove the directory (fixes #7216)\n\nShapefile driver:\n * fix adding features in a .dbf without columns (qgis/qgis#51247)\n * make sure eAccess = GA_Update is set on creation (#7311)\n\n## SWIG bindings\n\n* add missing OLCUpsertFeature constant\n\n## Python bindings\n\n* fix setup.py dir-list issue on macOS\n\n# GDAL/OGR 3.6.2 Release Notes\n\nGDAL 3.6.2 is a bugfix release.\n\n## General\n\n[RFC69](https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html):\nWhole code base C/C++ reformatting\n\n## Build\n\n* Avoid warning with curl >= 7.55 about CURLINFO_CONTENT_LENGTH_DOWNLOAD being\n  deprecated\n* Avoid warning with curl >= 7.87 about CURLOPT_PROGRESSFUNCTION being\n  deprecated\n* fix nitfdump build against external libtiff (#6968)\n* fix compilation with gcc 4.8.5 of Centos 7.9 (#6991)\n\n## Data files\n\n* tms_MapML_CBMTILE.json: fix wrong matrixWidth value (#6922)\n\n## GDAL 3.6.2\n\n### Port\n\n* CPLGetUsablePhysicalRAM(): take into account RSS limit (ulimit -m) (#6669)\n* CPLGetNumCPUs(): take into sched_getaffinity() (#6669)\n\n### Algorithms\n\n* Warp: fix crash in multi-threaded mode when doing several warping runs with\n  the same WarpOperation\n* RasterizeLayer: prevent out-of-bounds index/crash on some input data (#6981)\n\n### Core\n\n* gdal_pam.h: workaround for code including it after windows.h\n\n### Raster drivers\n\nAAIGRID driver:\n * fix CreateCopy() of source raster with south-up orientation (#6946)\n\nBAG driver:\n * conform to the final BAG georeferenced metadata layer specification (#6933)\n\nESRIC driver:\n * Fix DCAP_VECTOR metadata\n\nJPEGXL driver:\n * advertise COMPRESSION_REVERSIBILITY=LOSSY when there is a JPEG\n   reconstruction box\n\nnetCDF driver:\n * deal with files with decreasing latitudes/north-up orientation and presence\n   of actual_range attribute (#6909)\n\nVRT driver:\n * VRTSourcedRasterBand: replace potentially unsafe cpl::down_cast<> by\n   dynamic_cast<>\n\n## OGR 3.6.2\n\n### Core\n\n* OGRGenSQLResultsLayer::GetFeatureCount(): fix it to return -1 when base layer\n  also returns -1 (#6925)\n* OGRXercesInstrumentedMemoryManager::deallocate(): avoid (likely harmless)\n  unsigned integer overflow in error code path.\n* GPKG/SQLite dialect: fix issues when SQL statement provided to ExecuteSQL()\n  starts with space/tabulation/newline (#6976)\n* ArrowArray generic: FillBoolArray(): avoid out-of-bounds write access\n\n### Utilities\n\n* ogr2ogr: make -nln flag with GeoJSON output even if a name exists in input\n  GeoJSON (#6920)\n* ogr2ogr: silent reprojection errors related to IsPolarToWGS84() in\n  OGRGeometryFactory::transformWithOptions()\n\n### Drivers\n\nGML driver:\n * fix recognizing WFS GetFeature response with a very long initial XML element\n   (#6940)\n * default srsDimension to 3 for CityGML files (#6989)\n * fix incorrect behavior when using GFS_TEMPLATE open option with a .gfs that\n   refers to FeatureProperty/FeaturePropertyList fields (#6932)\n\nGeoPackage driver:\n * fix threaded RTree building when creating several layers (3.6.0 regression),\n   by disabling async RTree building\n * avoid SQLite3 locking in CreateLayer() due to RemoveOGREmptyTable()\n\nNGW driver:\n * remove DCAP_ items set to NO (#6994)\n\nParquet driver:\n * update to read and write GeoParquet 1.0.0-beta.1 specification (#6646)\n\nSelafin driver:\n * Fix DCAP_VECTOR metadata\n\n# GDAL/OGR 3.6.1 Release Notes\n\nGDAL 3.6.1 is a bugfix release. It officially retracts GDAL 3.6.0 which\ncould cause corruption of the spatial index of GeoPackage files it created\n(in tables with 100 000 features or more):\ncf https://github.com/qgis/QGIS/issues/51188 and\nhttps://github.com/OSGeo/gdal/pull/6911. GDAL 3.6.1 fixes that issue. Setting\nOGR_GPKG_ALLOW_THREADED_RTREE=NO environment variable (at generation time)\nalso works around the issue with GDAL 3.6.0. Users who have generated corrupted\nGeoPackage files with 3.6.0 can regnerate them with 3.6.1 with, for example,\n\"ogr2ogr out_ok.gpkg in_corrupted.gpkg\" (assuming a GeoPackage file with vector\ncontent only)\n\n## Build\n\n* Fix build with -DOGR_ENABLE_DRIVER_GML=OFF (#6647)\n* Add build support for libhdf5 1.13.2 and 1.13.3 (#6657)\n* remove RECOMMENDED flag to BRUNSLI and QB3. Add it for CURL (cf\n  https://github.com/spack/spack/pull/33856#issue-1446090634)\n* configure.cmake: fix wrong detection of pread64 for iOS\n* FindSQLite3.cmake: add logic to invalidate SQLite3_HAS_ variables if\n  the library changes\n* detect if sqlite3 is missing mutex support\n* Fix build when sqlite3_progress_handler() is missing\n* do not use Armadillo if it lacks LAPACK support (such as on Alpine)\n* make it a FATAL_ERROR if the user used -DGDAL_USE_ARMADILLO=ON and it\n  can't be used\n* Fix static HDF4 libraries not found on Windows\n* Internal libjpeg: rename extra symbol for iOS compatibility (#6725)\n* gdaldataset: fix false-positive gcc 12.2.1 -O2 warning about truncation\n  of buffer\n* Add minimal support for reading 12-bit JPEG images with libjpeg-turbo\n  2.2dev and internal libjpeg12\n* Fix detection of blosc version number\n* Add missing includes to fix build with upcoming gcc 13\n\n## GDAL 3.6.1\n\n### Port\n\n* CPLGetExecPath(): add MacOSX and FreeBSD implementations; prevent\n  potential one-byte overflow on Linux&Windows\n* /vsiaz/: make AppendBlob operation compatible of Azurite (#6759)\n* /vsiaz/: accept Azure connection string with only BlobEndpoint and\n  SharedAccessSignature (#6870)\n* S3: fix issue with EC2 IDMSv2 request failing inside Docker container\n  with default networking\n\n### Algorithms\n\n* warp: Also log number of chunks in warp operation progress debug logs (#6709)\n* Warper: use exact coordinate transformer on source raster edges to avoid\n  missing pixels (#6777)\n\n### Utilities\n\n* gdalbuildvrt: make -addalpha working when there's a mix of bands with or\n  without alpha (#6794)\n* gdalwarp: fix issue with vertical shift, in particular when CRS has US\n  survey foot as vertical unit (#6839)\n* gdalwarp: speed-up warping with cutline when the source dataset or\n  processing chunks are fully contained within the cutline (#6905)\n* validate_gpkg.py: make it work with SRID=-1 in geometry blobs\n\n### Core\n\n* GDALMDReader: avoid possible stack overflow on hostile XML metadata\n  (ossfuzz #53988)\n\n### Raster drivers\n\nGeoRaster driver:\n * add internal OCI connection support to vsilocilob which is used only\n    by the GeoRaster driver. (#6654)\n\nGPKG driver:\n * implement setting the nodata value for Byte dataset (#1569)\n\nGTiff driver:\n * DISCARD_LSB: reduce range of validity to 0-7 range for Byte to avoid\n   unsigned integer overflow if 8. (ossfuzz #53570)\n * if CRS is DerivedProjected, write it to PAM .aux.xml file (#6758)\n * SRS reader: do not emit warning when reading a projected CRS with GeoTIFF\n   keys override and northing, easting axis order (related to #6905)\n\nnetCDF driver:\n * fix exposing geotransform when there's x,y and lat,lon coordinates and\n   the CRS is retrieved from crs_wkt attribute (#6656)\n\nHDF4 driver:\n * fix regression of CMake builds, related to opening more than 32 simultaneous\n   HDF4_EOS files (#6665)\n\nOGCAPI driver:\n * update for map api; also for tiles but not working properly due to\n   churn in tilematrixset spec (#6832)\n\nRMF driver:\n * Implement GetSuggestedBlockAccessPattern\n\nSAR_CEOS driver:\n * fix small memleak\n\nXYZ driver:\n * support more datasets with rather sparse content in first lines (#6736)\n\n## OGR 3.6.1\n\n### Core\n\n* OGRArrowArrayHelper::SetDate(): simplify implementation\n* OGRSpatialReference::importFromWkt(): fix compatibility with PROJ master\n  9.2.0dev for DerivedProjectedCRS\n* OGR layer algebra: make sure result layer has no duplicated field names\n  (#6851)\n\n### Utilities\n\n* ogr2ogr: densify points of spatial filter specified with -spat_srs to\n  avoid reprojection artifacts\n* ogr2ogr: discard features whose intersection with -clipsrc/-clipdst\n  result in a lower dimensionality geometry than the target layer geometry\n  type (#6836)\n* ogr2ogr: add warning when -t_srs is ignored by drivers that\n  automatically reproject to WGS 84 (#6859)\n* ogr2ogr: make sure an error in GDALClose() of the output dataset result\n  in a non-zero return code (https://github.com/Toblerity/Fiona/issues/1169)\n\n### Vector drivers\n\nCSV driver:\n * accept comma as decimal separator in X_POSSIBLE_NAMES, Y_POSSIBLE_NAMES\n   and Z_POSSIBLE_NAMES fields\n\nFileGDB driver:\n * avoid crash in the SDK if passing incompatible geometry type (#6836)\n\nFlatGeoBuf driver:\n * speed-up writing of DateTime/Date values\n\nGPKG driver:\n * fix corruption of spatial index on layers with >= 100 000 features,\n   with the default background RTree building mechanism introduced in\n   3.6.0 (https://github.com/qgis/QGIS/issues/51188, #6911) when flushing\n   transactions while adding features (triggered by ogr2ogr). See announcement\n   at top of release notes of this version.\n * avoid nullptr dereference on corrupted databases\n * add support for reading tables with generated columns (#6638)\n * fix bad performance of ST_Transform() by caching the\n   OGRCoordinateTransformation object\n * improve multi-threaded implementation of GetNextArrowArray() on tables\n   with FID without holes and when no filters are applied (full bulk\n   loading)\n * FixupWrongRTreeTrigger(): make it work with table names that need to be\n   quoted (https://github.com/georust/gdal/issues/235)\n * Fix opening /vsizip//path/to/my.zip/my.gpkg with NOLOCK=YES open option\n * speed-up writing of DateTime/Date values, and fix writing DateTime with\n   milliseconds with a locale where the decimal point is not dot, and when\n   spatialite is not loaded\n\nMITAB driver:\n * add support for 'Philippine Reference System 1992' datum\n\nMSSQLSPATIAL driver:\n * Get UID and PWD from configuration options (#6818)\n\nOpenFileGDB driver:\n * do not use buggy .spx spatial index found in some datasets\n   (geopandas/geopandas#2253)\n\nParquet driver:\n * make sure that ArrowLayer destructor is available (for plugin building)\n\nPCIDSK driver:\n * advertise missing capabilities\n\nPGDump driver:\n * Fix support for the TEMPORARY layer creation option\n\nPostgreSQL driver:\n * avoid error when inserting single feature of FID 0 (#6728)\n * Fix support for the TEMPORARY layer creation option\n\nSOSI driver:\n * do not advertise GDAL_DCAP_CREATE_FIELD as it is not implemented\n\nSQLite driver:\n * Fix relationships determined through foreign keys have tables reversed\n * Use 'features' as related table type instead of 'feature' to match\n   gpkg/filegdb\n\nVDV driver:\n * make creation of temporary .gpkg files more robust on some platforms\n\nWFS driver:\n * do not remove single or double quote character in a LIKE filter (also\n   applies to CSW driver)\n\n## SWIG bindings:\n * add gdal.GetNumCPUs() and gdal.GetUsablePhysicalRAM()\n\n## CSharp bindings\n\n* Default to dotnet 6 (#6843)\n\n## Python bindings\n\n* make Geometry.__str__() use ExportToIsoWkt() (#6842)\n* setup.py: improve numpy fixing (#6700)\n* add a 'python_generated_files' target that facilitate generation of bindings without building the lib\n\n# GDAL/OGR 3.6.0 Release Notes\n\nThose notes include changes since GDAL 3.5.0, but not already included in a GDAL 3.5.x bugfix release.\n\n## In a nutshell...\n\n* CMake is the only build system available in-tree. autoconf and nmake build systems have been removed\n* OpenFileGDB: write and update support (v10.x format only), without requiring any external dependency, with same (and actually larger) functional scope as write side of the FileGDB driver\n* [RFC 86](https://gdal.org/development/rfc/rfc86_column_oriented_api.html): Column-oriented read API for vector layers.\n  Implemented in core, Arrow, Parquet, GPKG and FlatGeoBuf drivers\n* Add read/write raster [JPEGXL driver](https://gdal.org/drivers/raster/jpegxl.html) for standalone JPEG-XL files. Requires libjxl\n* Add KTX2 and BASISU read/write raster drivers for texture formats. Require (forked) basisu library\n* Vector layer API: table relationship discovery & creation, Upsert() operation\n* GeoTIFF: add multi-threaded read capabilities (reqiures NUM_THREADS open option or GDAL_NUM_THREADS configuration option to be set)\n* Multiple performance improvements in GPKG driver\n* ogr_layer_algebra.py: promoted to official script (#1581)\n* Code linting and security fixes\n* Bump of shared lib major version\n\n## New optional dependencies\n\n* libjxl: for JPEGXL driver (it was already a potential dependency in past versions, when using internal libtiff, to get the JXL TIFF codec)\n* libarrow_dataset: for Parquet driver\n* [QB3](https://github.com/lucianpls/QB3): for QB3 codec in MRF driver\n* [basisu](https://github.com/rouault/basis_universal/tree/cmake): required for KTX2 and BASISU drivers\n\n## New installed files\n\n* bin/ogr_layer_algebra.py\n* include/ogr_recordbatch.h\n\n## Removed installed files\n\nNone\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.6/MIGRATION_GUIDE.TXT)\n\n## Build changes\n\nEnhancements:\n * Add version suffix to DLL when compiling for MinGW target\n * Add a -DBUILD_WITHOUT_64BIT_OFFSET advanced option (#5941)\n * Add a USE_ALTERNATE_LINKER option\n * Build iso8211 library conditionally to drivers requiring it\n\nFixes:\n * Fix build without PNG (#5742) and JPEG (#5741)\n * Various changes for CHERI-extended architectures such CHERI-RISC-V or Arm Morello with sizeof(void*) == 16\n * FindMono.cmake: fix setting 'CSHARP_MONO_INTERPRETER_', to avoid having to run CMake twice\n * swig/python/CMakeLists.txt: fix SWIG_REGENERATE_PYTHON mode\n * FindNetCDF.cmake: fix when running on Ubuntu 16.04 regarding erroneous detection of netcdf_mem.h\n * Remove uses of std::regex (#6358)\n * honour CMAKE_INSTALL_RPATH for Python bindings, but only if it is an absolute path. (#6371)\n * Python: fix to allow building in ubuntu 18.04 (#6443)\n * Fixed building position independent static lib\n * Fix issues when building/installing in directories with spaces, at least on Unix.\n * fix LIBKML linking on Windows Conda\n * make sure to register EEDAI driver when built as a plugin\n * fix Win32 csharp build (#6620)\n\n## Internal libraries\n\n* flatbuffers: updated\n* internal libtiff: resynchroinzation with upstream\n* internal libpng: use __UINTPTR_TYPE__ for png_ptruint when available\n\n## GDAL 3.6.0 - Overview of Changes\n\n### Port\n\nNew features:\n * Add CPLIsASCII()\n * /vsis3/: Provide credentials mechanism for web identity token on AWS EKS (#4058)\n * /vsis3/: support source_profile in .aws/config pointing to a profile with a web_identity_token_file (#6320)\n * /vsistdin/: make size of buffered area configurable (#751)\n * add VSIIsLocal(), VSISupportsSequentialWrite() and VSISupportsRandomWrite()\n * Configuration file: add a ignore-env-vars=yes setting (#6326) in a \\[general\\] leading section\n * Add a cpl::ThreadSafeQueue<> class\n\nEnhancements:\n * VSIFileFromMemBuffer(): allow anonymous files\n * CPLCheckForFile(): do not request file size\n * /vsicurl/: when CPL_CURL_VERBOSE is enabled, log as CPLDebug() message the error message from the server\n * /vsicurl / CPLHTTPFetch(): add GDAL_HTTP_HEADERS configuration option (#6230)\n * VSIVirtualHandle: add a PRead() method for thread-safe parallel read and implement it in /vsimem/ and Unix virtual file system\n * /vsis3/: make CPL_VSIS3_USE_BASE_RMDIR_RECURSIVE a path-specific configuration option\n * Make GDAL_DISABLE_READDIR_ON_OPEN a path-specific configuration option\n * Add VSISetPathSpecificOption() / VSIGetPathSpecificOption() / VSIClearPathSpecificOptions().\n   Deprecate VSISetCredential() / VSIGetCredential() / VSIClearCredentials()\n * /vsicurl/ and other network file systems: add a DISABLE_READDIR_ON_OPEN=YES/NO VSIFOpenEx2L() option\n * Add a VSIFilesystemHandler::SupportsRead() method\n * Add GDAL_HTTP_TCP_KEEPALIVE/GDAL_HTTP_TCP_KEEPIDLE/GDAL_HTTP_TCP_KEEPINTVL configuration options to control TCP keep-alive functionality\n * Make CPLODBCSession and CPLODBCStatement member variables 'protected' (#6314)\n\nBugfixes:\n * cpl_config.h: Don't use __stdcall on MinGW\n * CPL recode: fix issues with iconv library integrated in musl C library\n * CPLWorkerThreadPool::SubmitJob(): avoid potential deadlock when called from worker thread\n * /vsicurl/: fix caching of first bytes of the files\n\n### Core\n\nNew features:\n * Add a GDALRasterBand::GetSuggestedBlockAccessPattern() method, implement it in GTiff, JPEG, PNG, PDF drivers and use it in GDALCopyWholeRasterGetSwathSize().\n * GDALJP2Box/GDALJP2Metadata: add support for reading/writing JUMBF box\n * Add a GDALDeinterleave() function, to copy values from a pixel-interleave buffer to multiple per-component,\n  and add SSE2/SSSE3 optimizations for a few common scenarios like Byte/UInt16 3/4 components.\n  Use it in GTiff and MEM drivers.\n * C API change: make GDALComputeRasterMinMax() return CPLErr instead of void (#6300)\n * Add a GDAL_DMD_MULTIDIM_ARRAY_OPENOPTIONLIST constant\n\nEnhancements:\n * GDALRasterBand::ComputeRasterMinMax(): add optimized implementation for Byte and UInt16 data types (~10 times faster)\n * Multidim API: significantly enhance performance of reading transposed arrays for netCDF/HDF5\n * GDALVersionInfo(): report if it is a debug build in --version output, and report compiler version in BUILD_INFO output\n * /vsicurl/: cache the result of several collections/URL signing requests to Planetary Computer\n * GDALCopyWholeRasterGetSwathSize(): aim for a chunk that is at least tall as the maximum of the source and target block heights\n * GDALGetJPEG2000Structure(): add JP2_BOXES, CODESTREAM_MARKERS, STOP_AT_SOD, ALLOW_GET_FILE_SIZE options\n * GDALDataset::BuildOverviews/IBuildOverviews(): add a CSLConstList papszOptions parameter\n * GDALDataset::CreateLayer(): honor GDAL_VALIDATE_CREATION_OPTIONS (#6487)\n\nBreaking changes:\n * Remove use of compatibility wrappers _GetProjectionRef / _GetGCPProjection / _SetProjection / _SetGCPs (#6186)\n\nBugfixes:\n * EXIFCreate(): fix writing of EXIF_UserComment\n * GDALPamDataset::TrySaveXML(): do not set error if a subdataset name is set but the .aux.xml doesn't exist (#5790)\n * GDALOpen(): make recursive opening of dataset more reliable when papszAllowedDrivers is passed\n * GetHistogram(): Support 64 bit images (#6059)\n * GetHistogram(): deal with undefined behavior when raster values are at infinity, or with pathological min/max bounds\n * GDALPamRasterBand::SetOffset()/SetScale(): set the bOffsetSet/bScaleSet even if the value provided is the default offset/scale\n * GDALDataset/GDALRasterBand::BuildOverviews/IBuildOverviews(): fix const correctness of panOverviewList and panBandList arguments\n * Overview: tighten GAUSS and MODE to be exactly those names, and not starting with them\n * Overview building: fix MODE resampling on large datasets (#6587)\n\n### Algorithms\n\nEnhancements:\n * Transformer: add SRC_GEOLOC_ARRAY and DST_GEOLOC_ARRAY transformer options\n * GDALChecksumImage(): make it return -1 in case of error\n\n### Utilities\n\nNew features:\n * gdalinfo: add a STAC section to `gdalinfo -json` output (#6265)\n * gdal_translate: add a -ovr <level|AUTO|AUTO-n|NONE> flag (#1923)\n * gdal2tiles.py: add WEBP support with --tiledriver option\n * gdalmdiminfo & gdalmdimtranslate: add -if (input format) flag (#6295)\n * gdal_grid: add 'radius' parameter to invdist, nearest, averge and metrics algorithm, to set radius1 and radius2 at the same time\n * gdal_grid: add per-quadrant search capabilities for invdistnn, average, and metrics algorithms\n * ogr_layer_algebra.py: promoted to official script (#1581)\n\nEnhancements:\n * gdal2tiles.py: short circuit overview tile creation for --resume ahead of processing base tiles\n * gdal2tiles.py: refactor transparent file check in overview creation\n * gdalsrsinfo: use wkt2_2019 name instead of wkt2_2018\n * gdal_viewshed: use -cc 1.0 as default for non-Earth CRS (#6278)\n * nearblack: skip erosion when pixel at edge is valid\n * gdal_grid: produce north-up images\n * gdal_grid: add validation of algorithm parameters and warn when a unknown parameter is specified\n * gdal_grid: add a nSizeOfStructure leading structure member in GDALGridXXXXOptions structure, as a way to detect ABI issues when adding new parameters\n\nBugfixes:\n * gdalwarp: modify 'sum' resampling to preserve total sum\n * gdalwarp: fix issue with wrong resolution when reprojecting between geographic CRS with source extent slightly off [-180,180]\n * gdalwarp: fix artifacts around antimeridian for average/mode/min/max/med/q1/q3/sum/rms resampling (#6478)\n * gdal2tiles.py: remove PIL deprecation warning by replacing ANTIALIAS with LANCZOS\n * gdal2tiles: allow oversampling in -p raster mode (fixes #6207)\n * gdal2xyz.py: fix parsing of -b option (#5984)\n * gdal_rasterize: fix ALL_TOUCHED on polygons whose boundaries coordinates are aligned on pixels (#6414)\n\n### gdal_utils package\n\n* standardized return codes (#5561). Return 2 when utilities called without argumen\n\n### Raster drivers\n\nADRG driver:\n * add SRP pixel spacing value (SRP_PSP) to the dataset metadata\n\nCOG driver:\n * add a OVERVIEW_COUNT creation option to control the number of overview levels (#6566)\n * add DMD_EXTENSIONS metadata item (#6073)\n * properly set lossy WEBP compression when QUALITY_OVERVIEW < 100 but QUALITY = 100 (#6550)\n\nCOSAR driver:\n * handle version 2 files that contain half-foat samples (#6289)\n\nECRGTOC driver:\n * fix error on RasterIO() when GDAL_FORCE_CACHING=YES is set\n\nECW driver:\n * strip off boring Kakadu and OpenJPEG COM marker comments\n\nENVI driver:\n * implement 'default bands' to read/write R,G,B and gray color interpretation (#6339)\n * implement Get/Set Scale/Offset from ENVI 'data gain values'/'data offset values' (#6444)\n * use OGRSpatialReference::FindBestMatch() on reading to find a matching known CRS (#6453)\n\nGPKG driver:\n * in CreateCopy() mode for Byte data, save the band count in a IMAGE_STRUCTURE metadata domain to be able to re-open the file with the appropriate number of bands\n * default to PNG storage for single band dataset (qgis/QGIS#40425)\n * writer: write fully set tiles as soon as possible to decrease pressure on block cache\n\nGTiff driver:\n * add multi-threaded read capabilities (reqiures NUM_THREADS open option or GDAL_NUM_THREADS configuration option to be set)\n * JXL codec: support more than 4 bands in INTERLEAVE=PIXEL mode (#5704)\n * JXL codec: preserve Alpha color interpretation when the Alpha band does not immediately follow color bands (e.g. R,G,B,undefined,Alpha), and fix decoding of such files\n * add a WEBP_LOSSLESS_OVERVIEW=YES/NO configuration option (#6439)\n * report a COMPRESSION_REVERSIBILITY=LOSSLESS (possibly)/LOSSY metadata item in IMAGE_STRUCTURE for WEBP and JXL compression\n * read/write JPEGXL and WEBP compression parameters (for main dataset only) in IMAGE_STRUCTURE metadata domain of GDAL_METADATA tag\n * avoid potential crash on creation in a disk full situation\n * fix reading a CompoundCRS of a LocalCS/EngineeringCS, and avoid warnings on writing (#5890)\n * report codec name (or code) when opening a file with a unhandled code\n * WEBP: avoid unnecessary temporary buffer creation and copy (most of changes are in libtiff itself)\n * force INTERLEAVE=PIXEL for internal overviews when using WEBP compression\n * avoid SetMetadata() to cancel effect of SetGeoTransform() (#6015)\n * refuse to open files with SampleFormat=IEEEFP and BitsPerSample != 16, 24, 32 or 64\n * SRS import: better deal when angular unit of the GEOGCS[] of the PROJCS[] doesn't match the one from the database\n * SRS export: avoid error when exporting a Projected 3D CRS (#6362)\n * honour COMPRESS_OVERVIEW and INTERLEAVE_OVERVIEW for internal overviews (#6344)\n * CreateCopy(): fix marking alpha channels that are not the last one (#6395)\n\nHDF5 driver:\n * multidim: fix crash on 'gdalmdiminfo HDF5:autotest/gdrivers/data/netcdf/alldatatypes.nc'\n\nJP2KAK driver:\n * use kdu_multi_analysis class for tile encoding, instead of very low level kdu_analysis\n * use kdu_stripe_compressor whenever the required buffer size is < CACHE_MAX / 4, otherwise fallback to kdu_multi_analysis\n * add (at least build) support for versions down to 7.3\n\nAll JPEG2000 drivers:\n * report a COMPRESSION_REVERSIBILITY=LOSSLESS/LOSSLESS (possibly)/LOSSY metadata item in IMAGE_STRUCTURE domain\n\nJP2OpenJPEG driver:\n * for reversible compression, write a hint in the COM marker if the compression is lossy or not, and use it on reading\n\nJPEG-XL driver:\n * NEW!\n * The JPEG-XL format is supported for reading, and batch writing (CreateCopy()), but not update in place.\n  The driver supports reading and writing:\n    - georeferencing: encoded as a GeoJP2 UUID box within a JUMBF box.\n    - XMP in the xml:XMP metadata domain\n    - EXIF in the EXIF metadata domain\n    - color profile in the COLOR_PROFILE metadata domain.\n\nKEA driver:\n * add support for 64 bit nodata functions\n\nMRF driver:\n * Add QB3 compression (#5824)\n\nnetCDF driver:\n * handle variables of type NC_SHORT with _Unsigned=true as GDT_UInt16 (#6352)\n * do not report metadata of indexing variables of dimensions not used by the variable of interest (#6367)\n * fix 2 issues with netCDF 4.9.0 of msys2-mingw64 (#5970)\n * multidim: workaround crash with using same file in 2 different threads (each thread with its own dataset object) (#6253)\n * ignore 'missing_value' when it is a non-numeric string\n * multidim: use 'fill_value' attribute as an alternative for nodata, and add a USE_DEFAULT_FILL_AS_NODATA=YES array open option\n * allow NETCDF:\"/vsicurl_streaming/http[s]://example.com/foo.nc\":variable_name (#6610)\n\nNITF driver:\n * do not put PAM metadata in a Subdataset node of .aux.xml file if there's a single dataset (3.4.0 regression) (#5790)\n * avoid excessive memory allocation on broken files (ossfuzz#52642)\n ù fix crash when reading all metadata from a file without image segment, and allow creating such file\n * add support for writing a TRE_OVERFLOW DES\n * nitf_spec.xml: lower minlength for CSEPHA\n\nPDF driver:\n * avoid PROJ error when reading a CRS with a EPSG code that is actually a ESRI one (#6522)\n\nPNG driver:\n * report cause when unable to create file\n\nRMF driver:\n * backup error state before min-max computation at FlushCache\n * Ext header size checks improved\n\nVRT driver:\n * optimize speed of statistics and minmax computation when the VRT is a mosaics of non-overlapping simple sources\n * ComputeStatistics(): for mosaicing case, enable it to be multi-threaded if GDAL_NUM_THREADS is set\n * take into account open options when sharing sources (#5989)\n\nWEBP driver:\n * report a COMPRESSION_REVERSIBILITY=LOSSLESS/LOSSY metadata item in IMAGE_STRUCTURE\n\n## OGR 3.6.0 - Overview of Changes\n\n### Core\n\nNew features:\n * OGRLayer: add Arrow C stream based batch retrieval (RFC 86)\n * Add OGRLayer::Upsert() operation support (#6199). Implement it in MongoDBv3, ElasticSearch MEM, GPKG drivers\n * Add OGR_G_ConcaveHull(), using GEOS >= 3.11 GEOSConcaveHull_r(), and map it to SWIG\n * Add a OGRLayer::AlterGeomFieldDefn() / OGR_L_AlterGeomFieldDefn() to change geometry field definitions. Implement in MEM, Shapefile, GPKG, PG, OpenFileGDB drivers\n * Add GDALRelationship class for describing a relationship between two tables,\n   and related API for retrieving the relationship\n   names and relationships in a dataset.\n   Implement discovery in FileGDB, OpenFileGDB, PGeo and GPKG drivers, SQLite\n * Add API for relationship creation/deletion/update.\n   Implement in OpenFileGDB driver\n * Add OGRLayer::GetGeometryTypes(). This method iterates over features to retrieve their geometry types.\n   This is mostly useful for layers that report a wkbUnknown geometry type.\n   Specialized implementation in GPKG and PG drivers.\n * Add a GDAL_DMD_ALTER_GEOM_FIELD_DEFN_FLAGS driver metadata item\n * Add DCAP_CREATE_LAYER for drivers which have support for layer creation\n * Add DCAP_DELETE_LAYER for drivers which have support for layer deletion\n * Add DCAP_DELETE_FIELD for drivers which have support for field deletion\n * Add DCAP_REORDER_FIELDS for drivers which have support for field reordering\n * Add GDAL_DMD_ALTER_FIELD_DEFN_FLAGS for drivers which describe the flags supported for a driver by the AlterFieldDefn API\n * Add DCAP_CURVE_GEOMETRIES for drivers which support curved geometries\n * Add DCAP_MEASURED_GEOMETRIES for drivers which support measured geometries\n * Add driver capability for DCAP_Z_GEOMETRIES\n * Add OLCZGeometries (equivalent to OLCMeasuredGeometries for Z support)\n * Add ODsCZGeometries datasource capability flag\n * Add driver metadata for DMD_GEOMETRY_FLAGS. Contains a list of (space separated) flags which reflect the geometry handling behavior of a driver.\n   Supported values are currently \"EquatesMultiAndSingleLineStringDuringWrite\", \"EquatesMultiAndSinglePolygonDuringWrite\".\n * Add OGRParseDateTimeYYYYMMDDTHHMMSSZ() and OGRParseDateTimeYYYYMMDDTHHMMSSsssZ()\n * Add GDAL_DMD_SUPPORTED_SQL_DIALECTS driver metadata.\n\nEnhancements:\n * Make isClockwise() available at the OGRCurve level\n * Export OSRStripVertical() function in C API\n * OGRSimpleCurve point iterator: make its modification instant on the parent curve (#6215)\n\nBugfixes:\n * OGRFeature::FillUnsetWithDefault(): do not set driver-specific default values on unset numeric fields\n * OGR_SM_InitStyleString(): make it work with a @style_name argument (#5555)\n * Fix loss of split/merge policy when cloning field domains\n * OGRSQL: fix GetFeature() to return a feature such that GetFeature(fid).GetFID() == fid (#5967)\n * OGRGeometry::UnionCascaded(): avoid crash with GEOS < 3.11 on empty multipolygon input\n\n### OGRSpatialReference\n\nNew features:\n * Add a OGRSpatialReference::FindBestMatch() method\n\nEnhancements:\n * Warping/coordinate transformation performance improvements\n * OSRGetProjTLSContext(): make it faster on Linux by saving getpid() system call\n * OGRSpatialReference::SetFromUserInput(): allow using strings like EPSG:3157+4617 where the 'vertical CRS' is actually the geographic CRS, to mean ellipsoidal height, which is supported in recent PROJ versions\n * Improve OGRCoordinateTransformation::TransformBounds error handling (#6081)\n * OGRSpatialReference: evaluate OSR_DEFAULT_AXIS_MAPPING_STRATEGY config option at each object construction (#6084)\n\nBugfixes:\n * Avoid issues with PROJJSON with id in members of datum ensemble\n * OGRSpatialReference::GetTargetLinearUnits(): fix getting linear units from a CompoundCRS of a LocalCS/EngineeringCS (#5890)\n\n### Utilities\n\nNew features:\n * ogr2ogr: add -upsert option\n\nBugfixes:\n * ogr2ogr: make sure geometry column name is going through laundering when outputting to PG/PGDump (#6261)\n * ogr2ogr: take into account -limit when -progress is used\n\n### Vector drivers\n\nAll drivers:\n * Add some missing DCAP_VECTOR capabilities to drivers\n\nArrow/Parquet drivers:\n * implement faster SetAttributeFilter() for simpler filters.\n   Things like \"col =/!=/>/>=/</<= constant\", \"col IS NULL\", \"col IS NOT NULL\", possibly combined with AND.\n\nCSV driver:\n * make AUTODETECT_SIZE_LIMIT=0 open option to scan the whole file, including beyond 2 GB (for non-streaming input) (#5885)\n * fix width autodetection\n\nDXF driver:\n * Support files between 2 GB and 4 GB in size\n * Prevent buffer from sometimes splitting CRLF newlines in MLEADER entities\n\nFlatGeoBuf driver:\n * make CreateLayer() to fail if output file cannot be\n created\n\nFileGDB driver:\n * handle Shape_Area/Shape_Length fields on reading/writing\n * avoid crash when reading layer with AliasName with XML special characters (issue with embedded libxml2 in SDK), and fallback to OpenFileGDB driver to reliably retrieve it (#5841)\n * Report relationships\n\nGeoJSONSeq driver:\n * add support for appending features to an existing file (#2080)\n\nGML driver:\n * make FORCE_SRS_DETECTION=YES open option work with multiple geometry columns (#6392)\n * read <gml:description>, <gml:identifier>, <gml:name> fields in a feature (qgis/QGIS#42660)\n * OGRMergeGeometryTypesEx(): do not consider different type of MultiGeometries (ie MultiPoint, MultiLineString, MultiPolygon) as being mergeable as GeometryCollections (#6616)\n\nGMLAS driver:\n * be robust to GML schemas being pointed to a location different from http://schemas.ogc.net/\n\nGPKG driver:\n * Do not list layers referenced in gpkg_contents but that have no corresponding table (qgis/qgis#30670)\n * Performance improvement in reading features\n * Performance improvement in reading DateTime fields\n * Performance improvement: do not request ignored fields\n * Micro optimizations to improve CreateFeature() speed\n * Performance improvement: implement background RTree creation in bulk insertion into a new table\n * Implement a fast ST_Area() method\n * optimization to remove bbox filtering when the spatial filter is larger than the layer extent\n * remove code path specific to SQLite < 3.7.8 (PROJ requires SQLite >= 3.11)\n * avoid integer overflow when trying to insert strings larger > 2 GB\n * preliminary non-user-visible support for Related Tables Extension\n * fix issue with ST_MakeValid() when the SQLite driver runs before GPKG on Alpine Linux\n * Report relationships, through FOREIGN KEY constraints, and Related Tables extension.\n * properly update gpkg_ogr_contents on INSERT OR REPLACE statements\n * do not warn about http://ngageoint.github.io/GeoPackage/docs/extensions extensions in read-only mode\n * Rename layer: take into account QGIS layer_styles extension\n * add compatibility with GPKG 1.0 gpkg_data_column_constraints table\n\nGRIB driver:\n * fix crash and invalid metadata when processing index .idx file with sub-messages (#6613)\n\nHANA driver:\n * pending batches are not flushed when layer is destroyed\n * reset prepared statements when creating new field\n * fix transaction support\n * execute pending batches from other operations\n * properly handle special characters in connection string\n\nLIBKML driver:\n * writer: add automatic reprojection to EPSG:4326 (#6495)\n\nMITAB driver:\n * implements writing Text objects for Point geometries with LABEL style string (#6149)\n\nODS driver:\n * make it possible to open file without .ods extension if prefixed with ODS: (#6375)\n\nOpenFileGDB driver:\n * Add write support\n * handle Shape_Area/Shape_Length fields on reading\n * fix use of indexes on strings when the searched value is longer than the max indexed string, or ending with space\n * Report relationships\n\nParquet driver:\n * add basic support for reading partitionned datasets\n * add CREATOR option\n * do not write statistics for WKB geometry columns\n * make sure 'geo' metadata is embedded in ARROW:schema so that partitioned reading works fine\n * implement SetNextByIndex()\n * make it honour GDAL_NUM_THREADS, and assume min(4, ALL_CPUS) as default value\n\nPG driver:\n * make GEOM_TYPE layer creation option be taken into account by CreateGeomField() (instead of always assuming geometry)\n\nPGDump driver:\n * avoid extraneous harmless spaces in CREATE TABLE statements\n\nS57 driver:\n * resource files: fix missing punctuation (#6000)\n\nSelafin driver:\n * remove likely broken logic in handing /vsigzip/foo.gz filenames\n\nSQLite driver:\n * Report relationships, through FOREIGN KEY constraints\n * SQLiteVFS: fix semantics of xOpen(SQLITE_OPEN_CREATE) that could cause to wrongly truncate an attached database\n\nVFK driver:\n * add support for UTF-8 (VFK 6.0 switched from ISO-8859-2 to UTF-8)\n\nXLSX driver:\n * make it possible to open file without .xlsx extension if prefixed with XLSX: (#6375)\n * improve detection to recognize even if no XLSX: prefix or .xlsx extension\n\n## SWIG Language Bindings\n\nAll bindings:\n * Add SWIG bindings for OGR_L_AlterGeomFieldDefn()\n * fix SpatialReference.GetLinearUnitsName() to use OSRGetLinearUnits() to retrieve the name\n * add SpatialReference.StripVertical()\n * Create alias versions with/without GDAL_ prefix for c#/java constants\n * add inverseCT optional parameter to CoordinateOperation.SetOperation(), and add CoordinateOperation.GetInverse()\n * make Band.ComputeStatistics() kwargs\n * add options argument to Dataset.BuildOverviews()\n * fix GDT_TypeCount value (affects C# and Java bindings)\n\nPython bindings:\n * bindings for Arrow Batch functionality\n * add numpy to extras_require option of setup.py\n * add an optional can_return_none=True parameter to Band.ComputeRasteMinMax() to make it return None in case of error. Otherwise, return (nan, nan) (#6300)\n\n# GDAL/OGR 3.6.4 Release Notes\n\nGDAL 3.6.4 is a bugfix release.\n\n## GDAL 3.6.4\n\n### Port\n\n* userfaultfd: avoid it to stall on 32bit and test real working of syscall in\n  CPLIsUserFaultMappingSupported()\n\n### Core\n\n* RawRasterBand::FlushCache(): avoid crash in some situations\n* RawRasterBand::IRasterIO(): fix wrong byte swapping in Direct IO multiline\n  writing code path\n* RawRasterBand::IRasterIO(): fix optimized code path that wrongly triggered\n  on BIL layout\n* RawRasterBand::IRasterIO(): avoid reading and writing too many bytes\n* RawRasterBand::IRasterIO(): fix floating-point issues with ICC that could\n  result in wrong lines/cols being read/written\n\n### Algorithms\n\n* Rasterize all touched: tighten(decrease) the tolerance to consider that edge\n  of geometries match pixel obundaries (#7523)\n\n### Utilities\n\n* gdal_translate: fix crash when specifying -ovr on a dataset that has no\n  overviews (#7376)\n* gdalcompare.py: correctly take into account NaN nodata value (#7394)\n* gdal2xyz.py: fix -srcnodata and -dstnodata options (#7410)\n* gdal2tiles: update 'ol-layerswitcher' widget to v4.1.1 (#7544)\n\n### Raster drivers\n\nGTiff driver:\n * correctly read GCPs from ArcGIS 9 .aux.xml when TIFFTAG_RESOLUTIONUNIT=3\n  (pixels/cm) (#7484)\n\nHDF5 driver:\n * fix detecting if HDF5 library is thread-safe (refs #7340)\n\nLCP driver:\n * CreateCopy(): fix crash on negative pixel values (#7561)\n\nMRF driver:\n * restore SetSpatialRef() that was wrongly deleted in 3.6.0\n\nnetCDF driver:\n * restore capability of reading CF-1.6-featureType vector layers even if the\n   conventions >= CF 1.8, and improve featureType=trajectory by adding the\n   time attribute (fixes #7550)\n\n## OGR 3.6.4\n\n### Core\n\n* OGRSQL: fix 'SELECT ... WHERE ... AND ... AND ... AND ... UNION ALL ...'\n  (#3395)\n* OGRUnionLayer::GetExtent(): do not emit error on no-geometry layer\n* OGREditableLayer::IUpsertFeature(): fix memleak\n\n### OGRSpatialReference\n\n* Fix OGRSpatialReference::SetProjCS() on an existing BoundCRS;\n  affects GeoTIFF SRS reader (fixes gdal-dev/2023-March/057011.html)\n\n### Utilities\n\n* ogr2ogr: fix and automate conversion from list types to String(JSON) when the\n  output driver doesn't support list types but String(JSON) (#7397)\n\n### Vector drivers\n\nCSV driver:\n * CSVSplitLine(): do not treat in a special way double quotes that appear in\n   the middle of a field\n\nFlatGeobuf driver:\n * improve handling of null geoms (#7483)\n\nGeoPackage driver:\n * Update definition of gpkg_data_columns to remove unique constraint on \"name\"\n\nOpenFileGDB driver:\n * fix write corruption when re-using freespace slots in some editing scenarios\n   (#7504)\n * relax test to detect broken .spx\n * CreateField(): in approxOK mode, do not error out if default value of a\n   DateTime field is CURRENT_TIMESTAMP, just ignore it with a warning (#7589)\n\nOSM driver:\n * Fix handling of closed_ways_are_polygons setting in osmconf.ini (#7488)\n\nS57 driver:\n * s57objectclasses.csv: apply S-57 Edition 3.1 Supplement No. 2\n\nSQLite driver:\n * GDAL as a SQLite3 loadable extension: avoid crash on Linux\n\n# GDAL/OGR 3.6.3 Release Notes\n\nGDAL 3.6.3 is a bugfix release.\n\n## Build\n\n* CMake: Fix integration of find_package2()\n* CMake: avoid HDF4 CMake error with Windows paths with spaces\n* CMake: quote variables for INTERFACE_INCLUDE_DIRECTORIES / IMPORTED_LOCATION\n* CMake: fix wrong test when GDAL_SET_INSTALL_RELATIVE_RPATH is set\n* CMake: issue an error when the user explicitly asks for a condition-dependent\n  driver and the condition is not met\n* CMake: add include to FindSQLite3.cmake\n* fix uclibc build without NPTL\n* zlib: Add ZLIB_IS_STATIC build option\n* FindCryptoPP.cmake: properly take into account _LIBRARY_RELEASE/_DEBUG (#7338)\n* FindPoppler.cmake: check that Poppler private headers are available (#7352)\n\n## GDAL 3.6.3\n\n### Port\n\n* CPLGetPhysicalRAM(): take into account current cgroup (v1 and v2)\n* CPLGetPhysicalRAM(): take into account MemTotal limit from /proc/meminfo\n* /vsicurl/: fix CPL_VSIL_CURL_USE_HEAD=NO mode (#7150)\n* Avoid use of deprecated ZSTD_getDecompressedSize() function with libzstd 1.3+\n* cpl_vsil_crypt.cpp: fix build isse on Windows (#7304)\n\n### Algorithms\n\n* GDALPolygonizeT(): add sanity check\n* GDALRasterPolygonEnumeratorT::NewPolygon(): check memory allocation to avoid\n  crash (#7027)\n* Warper: do not use OpenCL code path when pafUnifiedSrcDensity is not null\n  (#7192)\n* Warper: optimize a bit when warping a chunk fully within the cutline\n* Geoloc inverse transformer: fix numeric instability when quadrilaterals are\n  degenerate to triangles (#7302)\n\n### Core\n\n* GDALProxyPoolRasterBand::FlushCache(): fix for ref counting when calling\n  FlushCache() on GDALProxyPoolMaskBand or GDALProxyPoolOverviewRasterBand\n* VirtualMem: Fix mremap() detection with clang 15, and disable\n  HAVE_VIRTUAL_MEM_VMA if HAVE_5ARGS_MREMAP not found\n\n### Utilities\n\n* gdal_translate: make -colorinterp work on a source band that is a mask band\n* gdalmdimtranslate: do not require VRT driver to be registered (#7021)\n* gdalmdimtranslate: fix subsetting in the situation of dataset of #7199\n* gdalwarp: fix vshift mode when vertical unit of dstSrs is non-metric\n* gdalwarp: overview choice: fix longitude wrap problem (#7019)\n* gdalwarp: allow up to inaccuracy in cropline coordinates up to 0.1% of a\n  pixel size for rounding (#7226)\n* gdalsrsinfo: fix crash on 'gdalsrsinfo IAU:2015:49902 -o xml'\n* gdal_retile.py: fix wrong basename for .aux.xml files (#7120)\n* gdallocationinfo: fix issue with VRTComplexSource and nodata (#7183)\n* gdal_rasterize: ignore features whose Z attribute is null/unset (#7241)\n\n### Raster drivers\n\nBMP driver:\n * Make sure file is created at proper size if only calling Create() without\n   writing pixels (#7025)\n * Create(): add checks and warnings for maximum dimensions\n\nCOG driver:\n * avoid warning message when using -co COMPRESS=WEBP -co QUALITY=100 (#7153)\n\nDIMAP driver:\n * optimize performance of dataset RasterIO()\n\nGRIB driver:\n * fix reading South Polar Stereographic from GRIB1 datasets (#7298)\n * degrib: replace use of sprintf() with snprintf()\n\nGTiff driver:\n * GTiffJPEGOverviewBand::IReadBlock(): remove hack that causes read errors in\n   some circumstances\n * do not use implicit JPEG overviews with non-nearest resampling\n * fix generation of external overviews on 1xsmall_height rasters (#7194)\n\nGTX driver:\n * fix (likely harmless in practice) integer overflow (ossfuzz#55718)\n\nHDF5 driver:\n * add a GDAL_ENABLE_HDF5_GLOBAL_LOCK build option to add a global lock when\n   the HDF5 library is not built with thread-safety enabled (#7340)\n\nHFA driver:\n * ERDAS Imagine SRS support: various fixes: Vertical Perspective projection,\n   LCC_1SP, Mercator_2SP, Eqirectanglar, Hotine Obliqe Mercator Azimuth Center\n\nJPEG driver:\n * Correctly read GCPS when an .aux.xml sidecar has GeodataXform present in the\n   ESRI metadata element instead of root element\n\nJPEGXL driver:\n * CreateCopy(): fix memory leak when writing georeferencing\n\nMBTiles driver:\n * fix nullptr deref when calling GetMetadata() on a dataset returned by\n   Create() (#7067)\n\nnetCDF driver:\n * quote variable name in subdataset list if it contains a column character\n   (#7061)\n * report GEOLOCATION metadata for a lon/lat indexed variable where lon and/or\n   lat has irregular spacing\n * netCDFDimension::GetIndexingVariable(): be more restrictive\n * resolve variable names beyond the parent group (#7325)\n\nNITF driver:\n * update CLEVEL to appropriate values when using compression / multiple image\n   segments\n * fix bug that prevents adding subsequent TREs after a HEX TRE (#6827)\n\nPDF driver:\n * skip JP2ECW driver if ECW_ENCODE_KEY required but not found\n\nTileDB driver:\n * fix compatibility with tiledb 2.14\n\nVRT:\n * warp: fix issue when warping a Float32 raster with nodata = +/- FLOAT_MAX\n\nZMap creation:\n * fix potential truncation of nodata value (#7203)\n\n## OGR 3.6.3\n\n### Core\n\n* OGRSQL: fix crash when comparing integer array fields (#6714)\n* OGRSQL: fix SetAttributeFilter() when dialect=OGRSQL and not forwarding the\n  initial where clause to the source layer (#7087)\n\n### Utilities\n\n* ogr2ogr: fix -clipsrc/-clipdst when clip dataset has SRS != features's\n  geometry (#7126)\n\n### Vector drivers\n\nGeoJSON driver:\n * avoid duplication of FID in streaming parser (#7258)\n * declare GDAL_DCAP_MEASURED_GEOMETRIES and ODsCMeasuredGeometries\n * fix mixed type field not flagged as JSON if first is a string (#7313)\n * writer: take into account COORDINATE_PRECISION for top bbox (#7319)\n * writer: fix json mixed types roundtrip (#7368)\n\nGeoJSONSeq driver:\n * fix writing to /vsigzip/ (#7130)\n\nGeoPackage driver:\n * avoid issue with duplicated column names in some cases (#6976)\n * GetNextArrowArray(): fix retrieving only the geometry (geopandas/pyogrio#212)\n * restore async RTree building for 1st layer (broken by GDAL 3.6.2)\n\nGML driver:\n * fix CurvePolygon export of CompoundCurve and CircularString child elements\n   (#7294)\n\nHANA driver:\n * fix DSN open option\n\nMITAB driver:\n * handle projection methods 34 (extended transverse mercator) and 35 (Hotine\n   Oblique Mercator) (#7161)\n * Fix possible crash on NULL feature text (#7341)\n * Fix a typo at MITABGetCustomDatum\n\nNAS driver:\n * fix file descriptor leak in error code path\n\nOpenFileGDB driver:\n * fix performance issue when identifying a CRS\n * detect broken .spx file with wrong index depth (qgis/qgis#32534)\n * index reading: avoid integer overflow on index larger than 2 GB\n * allow CreateField() with OBJECTID as the column name (qgis/qgis#51435)\n * make Delete() method to remove the directory (fixes #7216)\n\nShapefile driver:\n * fix adding features in a .dbf without columns (qgis/qgis#51247)\n * make sure eAccess = GA_Update is set on creation (#7311)\n\n## SWIG bindings\n\n* add missing OLCUpsertFeature constant\n\n## Python bindings\n\n* fix setup.py dir-list issue on macOS\n\n# GDAL/OGR 3.6.2 Release Notes\n\nGDAL 3.6.2 is a bugfix release.\n\n## General\n\n[RFC69](https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html):\nWhole code base C/C++ reformatting\n\n## Build\n\n* Avoid warning with curl >= 7.55 about CURLINFO_CONTENT_LENGTH_DOWNLOAD being\n  deprecated\n* Avoid warning with curl >= 7.87 about CURLOPT_PROGRESSFUNCTION being\n  deprecated\n* fix nitfdump build against external libtiff (#6968)\n* fix compilation with gcc 4.8.5 of Centos 7.9 (#6991)\n\n## Data files\n\n* tms_MapML_CBMTILE.json: fix wrong matrixWidth value (#6922)\n\n## GDAL 3.6.2\n\n### Port\n\n* CPLGetUsablePhysicalRAM(): take into account RSS limit (ulimit -m) (#6669)\n* CPLGetNumCPUs(): take into sched_getaffinity() (#6669)\n\n### Algorithms\n\n* Warp: fix crash in multi-threaded mode when doing several warping runs with\n  the same WarpOperation\n* RasterizeLayer: prevent out-of-bounds index/crash on some input data (#6981)\n\n### Core\n\n* gdal_pam.h: workaround for code including it after windows.h\n\n### Raster drivers\n\nAAIGRID driver:\n * fix CreateCopy() of source raster with south-up orientation (#6946)\n\nBAG driver:\n * conform to the final BAG georeferenced metadata layer specification (#6933)\n\nESRIC driver:\n * Fix DCAP_VECTOR metadata\n\nJPEGXL driver:\n * advertise COMPRESSION_REVERSIBILITY=LOSSY when there is a JPEG\n   reconstruction box\n\nnetCDF driver:\n * deal with files with decreasing latitudes/north-up orientation and presence\n   of actual_range attribute (#6909)\n\nVRT driver:\n * VRTSourcedRasterBand: replace potentially unsafe cpl::down_cast<> by\n   dynamic_cast<>\n\n## OGR 3.6.2\n\n### Core\n\n* OGRGenSQLResultsLayer::GetFeatureCount(): fix it to return -1 when base layer\n  also returns -1 (#6925)\n* OGRXercesInstrumentedMemoryManager::deallocate(): avoid (likely harmless)\n  unsigned integer overflow in error code path.\n* GPKG/SQLite dialect: fix issues when SQL statement provided to ExecuteSQL()\n  starts with space/tabulation/newline (#6976)\n* ArrowArray generic: FillBoolArray(): avoid out-of-bounds write access\n\n### Utilities\n\n* ogr2ogr: make -nln flag with GeoJSON output even if a name exists in input\n  GeoJSON (#6920)\n* ogr2ogr: silent reprojection errors related to IsPolarToWGS84() in\n  OGRGeometryFactory::transformWithOptions()\n\n### Drivers\n\nGML driver:\n * fix recognizing WFS GetFeature response with a very long initial XML element\n   (#6940)\n * default srsDimension to 3 for CityGML files (#6989)\n * fix incorrect behavior when using GFS_TEMPLATE open option with a .gfs that\n   refers to FeatureProperty/FeaturePropertyList fields (#6932)\n\nGeoPackage driver:\n * fix threaded RTree building when creating several layers (3.6.0 regression),\n   by disabling async RTree building\n * avoid SQLite3 locking in CreateLayer() due to RemoveOGREmptyTable()\n\nNGW driver:\n * remove DCAP_ items set to NO (#6994)\n\nParquet driver:\n * update to read and write GeoParquet 1.0.0-beta.1 specification (#6646)\n\nSelafin driver:\n * Fix DCAP_VECTOR metadata\n\n# GDAL/OGR 3.6.1 Release Notes\n\nGDAL 3.6.1 is a bugfix release. It officially retracts GDAL 3.6.0 which\ncould cause corruption of the spatial index of GeoPackage files it created\n(in tables with 100 000 features or more):\ncf https://github.com/qgis/QGIS/issues/51188 and\nhttps://github.com/OSGeo/gdal/pull/6911. GDAL 3.6.1 fixes that issue. Setting\nOGR_GPKG_ALLOW_THREADED_RTREE=NO environment variable (at generation time)\nalso works around the issue with GDAL 3.6.0. Users who have generated corrupted\nGeoPackage files with 3.6.0 can regnerate them with 3.6.1 with, for example,\n\"ogr2ogr out_ok.gpkg in_corrupted.gpkg\" (assuming a GeoPackage file with vector\ncontent only)\n\n## Build\n\n* Fix build with -DOGR_ENABLE_DRIVER_GML=OFF (#6647)\n* Add build support for libhdf5 1.13.2 and 1.13.3 (#6657)\n* remove RECOMMENDED flag to BRUNSLI and QB3. Add it for CURL (cf\n  https://github.com/spack/spack/pull/33856#issue-1446090634)\n* configure.cmake: fix wrong detection of pread64 for iOS\n* FindSQLite3.cmake: add logic to invalidate SQLite3_HAS_ variables if\n  the library changes\n* detect if sqlite3 is missing mutex support\n* Fix build when sqlite3_progress_handler() is missing\n* do not use Armadillo if it lacks LAPACK support (such as on Alpine)\n* make it a FATAL_ERROR if the user used -DGDAL_USE_ARMADILLO=ON and it\n  can't be used\n* Fix static HDF4 libraries not found on Windows\n* Internal libjpeg: rename extra symbol for iOS compatibility (#6725)\n* gdaldataset: fix false-positive gcc 12.2.1 -O2 warning about truncation\n  of buffer\n* Add minimal support for reading 12-bit JPEG images with libjpeg-turbo\n  2.2dev and internal libjpeg12\n* Fix detection of blosc version number\n* Add missing includes to fix build with upcoming gcc 13\n\n## GDAL 3.6.1\n\n### Port\n\n* CPLGetExecPath(): add MacOSX and FreeBSD implementations; prevent\n  potential one-byte overflow on Linux&Windows\n* /vsiaz/: make AppendBlob operation compatible of Azurite (#6759)\n* /vsiaz/: accept Azure connection string with only BlobEndpoint and\n  SharedAccessSignature (#6870)\n* S3: fix issue with EC2 IDMSv2 request failing inside Docker container\n  with default networking\n\n### Algorithms\n\n* warp: Also log number of chunks in warp operation progress debug logs (#6709)\n* Warper: use exact coordinate transformer on source raster edges to avoid\n  missing pixels (#6777)\n\n### Utilities\n\n* gdalbuildvrt: make -addalpha working when there's a mix of bands with or\n  without alpha (#6794)\n* gdalwarp: fix issue with vertical shift, in particular when CRS has US\n  survey foot as vertical unit (#6839)\n* gdalwarp: speed-up warping with cutline when the source dataset or\n  processing chunks are fully contained within the cutline (#6905)\n* validate_gpkg.py: make it work with SRID=-1 in geometry blobs\n\n### Core\n\n* GDALMDReader: avoid possible stack overflow on hostile XML metadata\n  (ossfuzz #53988)\n\n### Raster drivers\n\nGeoRaster driver:\n * add internal OCI connection support to vsilocilob which is used only\n    by the GeoRaster driver. (#6654)\n\nGPKG driver:\n * implement setting the nodata value for Byte dataset (#1569)\n\nGTiff driver:\n * DISCARD_LSB: reduce range of validity to 0-7 range for Byte to avoid\n   unsigned integer overflow if 8. (ossfuzz #53570)\n * if CRS is DerivedProjected, write it to PAM .aux.xml file (#6758)\n * SRS reader: do not emit warning when reading a projected CRS with GeoTIFF\n   keys override and northing, easting axis order (related to #6905)\n\nnetCDF driver:\n * fix exposing geotransform when there's x,y and lat,lon coordinates and\n   the CRS is retrieved from crs_wkt attribute (#6656)\n\nHDF4 driver:\n * fix regression of CMake builds, related to opening more than 32 simultaneous\n   HDF4_EOS files (#6665)\n\nOGCAPI driver:\n * update for map api; also for tiles but not working properly due to\n   churn in tilematrixset spec (#6832)\n\nRMF driver:\n * Implement GetSuggestedBlockAccessPattern\n\nSAR_CEOS driver:\n * fix small memleak\n\nXYZ driver:\n * support more datasets with rather sparse content in first lines (#6736)\n\n## OGR 3.6.1\n\n### Core\n\n* OGRArrowArrayHelper::SetDate(): simplify implementation\n* OGRSpatialReference::importFromWkt(): fix compatibility with PROJ master\n  9.2.0dev for DerivedProjectedCRS\n* OGR layer algebra: make sure result layer has no duplicated field names\n  (#6851)\n\n### Utilities\n\n* ogr2ogr: densify points of spatial filter specified with -spat_srs to\n  avoid reprojection artifacts\n* ogr2ogr: discard features whose intersection with -clipsrc/-clipdst\n  result in a lower dimensionality geometry than the target layer geometry\n  type (#6836)\n* ogr2ogr: add warning when -t_srs is ignored by drivers that\n  automatically reproject to WGS 84 (#6859)\n* ogr2ogr: make sure an error in GDALClose() of the output dataset result\n  in a non-zero return code (https://github.com/Toblerity/Fiona/issues/1169)\n\n### Vector drivers\n\nCSV driver:\n * accept comma as decimal separator in X_POSSIBLE_NAMES, Y_POSSIBLE_NAMES\n   and Z_POSSIBLE_NAMES fields\n\nFileGDB driver:\n * avoid crash in the SDK if passing incompatible geometry type (#6836)\n\nFlatGeoBuf driver:\n * speed-up writing of DateTime/Date values\n\nGPKG driver:\n * fix corruption of spatial index on layers with >= 100 000 features,\n   with the default background RTree building mechanism introduced in\n   3.6.0 (https://github.com/qgis/QGIS/issues/51188, #6911) when flushing\n   transactions while adding features (triggered by ogr2ogr). See announcement\n   at top of release notes of this version.\n * avoid nullptr dereference on corrupted databases\n * add support for reading tables with generated columns (#6638)\n * fix bad performance of ST_Transform() by caching the\n   OGRCoordinateTransformation object\n * improve multi-threaded implementation of GetNextArrowArray() on tables\n   with FID without holes and when no filters are applied (full bulk\n   loading)\n * FixupWrongRTreeTrigger(): make it work with table names that need to be\n   quoted (https://github.com/georust/gdal/issues/235)\n * Fix opening /vsizip//path/to/my.zip/my.gpkg with NOLOCK=YES open option\n * speed-up writing of DateTime/Date values, and fix writing DateTime with\n   milliseconds with a locale where the decimal point is not dot, and when\n   spatialite is not loaded\n\nMITAB driver:\n * add support for 'Philippine Reference System 1992' datum\n\nMSSQLSPATIAL driver:\n * Get UID and PWD from configuration options (#6818)\n\nOpenFileGDB driver:\n * do not use buggy .spx spatial index found in some datasets\n   (geopandas/geopandas#2253)\n\nParquet driver:\n * make sure that ArrowLayer destructor is available (for plugin building)\n\nPCIDSK driver:\n * advertise missing capabilities\n\nPGDump driver:\n * Fix support for the TEMPORARY layer creation option\n\nPostgreSQL driver:\n * avoid error when inserting single feature of FID 0 (#6728)\n * Fix support for the TEMPORARY layer creation option\n\nSOSI driver:\n * do not advertise GDAL_DCAP_CREATE_FIELD as it is not implemented\n\nSQLite driver:\n * Fix relationships determined through foreign keys have tables reversed\n * Use 'features' as related table type instead of 'feature' to match\n   gpkg/filegdb\n\nVDV driver:\n * make creation of temporary .gpkg files more robust on some platforms\n\nWFS driver:\n * do not remove single or double quote character in a LIKE filter (also\n   applies to CSW driver)\n\n## SWIG bindings:\n * add gdal.GetNumCPUs() and gdal.GetUsablePhysicalRAM()\n\n## CSharp bindings\n\n* Default to dotnet 6 (#6843)\n\n## Python bindings\n\n* make Geometry.__str__() use ExportToIsoWkt() (#6842)\n* setup.py: improve numpy fixing (#6700)\n* add a 'python_generated_files' target that facilitate generation of bindings without building the lib\n\n# GDAL/OGR 3.5.0 Release Notes\n\n## In a nutshell...\n\n* [RFC 84](https://gdal.org/development/rfc/rfc84_cmake.html):\n  Addition of a CMake build system, which deprecates the existing\n  autoconf/automake and nmake build systems, that will be removed\n  in GDAL 3.6.0. Users are encouraged to adopt the new CMake build system.\n  Documentation of the CMake build system is at\n  https://gdal.org/build_hints.html.\n* Add GDT_Int64 and GDT_UInt64 data types and handle them in MEM, GTiff, netCDF and Zarr drivers\n* Add read/write OGR Parquet (Apache Parquet) and 'Arrow' (Apache Arrow IPC File/Feather or stream) drivers. Only in CMake builds\n* Add OGR HANA database driver. Only in autoconf & cmake builds\n* Removed drivers: RDA, JPEG2000 (Jasper-based), CharLS, MG4 LIDAR, FujiBAS, IDA, INGR, ARCGEN, ArcObjects, CouchDB, Cloudant, DB2, FME, Geomedia, MDB (Java Jackess based), GTM, Ingres, MongoDB (old one. MongoDBv3 is the one to use now), REC, Walk, GMT raster, DODS raster and vector\n* GDAL and OGR GRASS drivers moved to https://github.com/OSGeo/gdal-grass repository\n* Tiger: remove deprecated write side of the driver (#4216)\n* Remove deprecated SWIG Perl bindings\n* Code linting and security fixes\n* Bump of shared lib major version\n\n## New optional dependencies\n\n* odbc-cpp-wrapper (https://github.com/SAP/odbc-cpp-wrapper): for SAP Hana driver\n* Apache arrow-cpp (https://github.com/apache/arrow/tree/master/cpp) libraries: for Parquet and Arrow drivers\n\n## New installed files\n\n* lib/gdalplugins/drivers.ini: list of (known) drivers in the order they must be registered, for deterministic behavior with plugins\n* shared/gdal/grib2_*.csv: resource files for GRIB driver\n\n## Removed files\n\n* Remove deprecated testepsg utility (#3993)\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.5/MIGRATION_GUIDE.TXT)\n\n## Build changes\n\nBuild(all):\n * Drop support for non-reentrant external libqhull\n * support libhdf5 1.13.0 (#5061)\n * Support latest Poppler versions (requires C++17)\n * Support tiledb >= 2.7 (requires C++17)\n * Updates for IJG libjpeg-9e\n * Require using https://github.com/rouault/pdfium_build_gdal_3_5 for PDF PDFium support\n * cpl_config.h: remove lots of unused defines, and severely restrict what we export in non-GDAL compilation mode\n\nBuild(autoconf/automake):\n * fix detection of OpenEXR >= 3 (#4766)\n * Add support for PCRE2 (to replace deprecated PCRE) (#4822)\n * Add support for external libqhull_r (#4040)\n * add a --with-qhull-pkgname=qhull_r/qhullstatic_r option to select with qhull package to use\n * generate test_ogrsf by default (but not installed)\n * change default of RENAME_INTERNAL_LIBTIFF/LIBGEOTIFF/SHAPELIB_SYMBOLS to yes\n * when building against internal libjpeg, prefix by default libjpeg symbols with gdal_ (#4948)\n * when building against internal libpng, prefix internal libpng symbols with gdal_ (#5303)\n * m4/acinclude.m4: fix detection of fseeko/ftello on netBSD\n * detect xlocale.h to use LC_NUMERIC_MASK on Mac (#5022)\n * move generated headers to a generated_headers subdirectory to allow in a same git checkout, to continue to do autoconf in-source-tree builds as well as cmake out-of-source-tree build\n\nBuild(nmake):\n * nmake.opt: fix wrong variable name in example MSODBCSQL_LIB\n * nmake.opt: add a HAVE_ATLBASE_H variable that can be set to NO\n\n## Internal libraries\n\n* Internal zlib: update to 1.2.12 (#5587)\n* Internal libtiff: resync with upstream\n* Internal libgeotiff: resync with upstream\n* Internal libpng: fix memleak on corrupted file (ossfuzz #44486)\n* Internal libjson: update to 0.15.0\n* Internal libLerc: Prevent LERC out of bounds access (#5598)\n* Internal libqhull: update to qhull_r 2020.2 (8.0.2)\n\n## GDAL 3.5.0 - Overview of Changes\n\n### Port\n\n* CPLRecode(): fix recoding between UTF-8 and CP_ACP/CP_OEMCP on Windows build that have iconv support\n* CPLRecodeIconv(): avoid potential unsigned integer overflow (ossfuzz#41201)\n* Fix out of bounds read in CPLRecodeFromWCharIconV() (#5542)\n* Add VSISetCredential() to set /vsis3, /vsigs, /vsiaz ... credentials for a given file prefix\n* VSICurl: Print response code for failed range requests\n* /vsis3/: allow setting AWS_PROFILE to a profile that uses IAM role assumption\n* IVSIS3LikeFSHandler::CopyFile(): always take into account ret code of CopyObject()\n* VSISync() onto /vsis3/: allow x-amz- headers to be specified for object creation\n* /vsis3/: ignore object class DEEP_ARCHIVE in addition to GLACIER, and add CPL_VSIL_CURL_IGNORE_STORAGE_CLASSES to configure which object classes should be ignored\n* /vsis3/: make sure file properties of /vsis3_streaming/foo are invalidated when /vsis3/foo ones are\n* /vsis3/ with GDAL_DISABLE_READDIR_ON_OPEN: do not hide when accessing non existing file (#1900)\n* VSISync(): fix sync'ing from /vsis3/, /vsigs/, /vsiaz/ to local disk, when the source contains implicit directories\n* /vsiaz/: read credentials from ~/.azure/config as an additional fallback method. Add AZURE_STORAGE_SAS_TOKEN configuration option and deprecate AZURE_SAS\n*  /vsiaz/: allow authorization through an access token specified with the AZURE_STORAGE_ACCESS_TOKEN config option (to be used with AZURE_STORAGE_ACCOUNT)\n* /vsiaz/: fix handling of BlobEndpoint in connection string, and fix signing of requests to handle a directory part in the endpoint\n* /vsiaz/: implement container creation/destruction with VSIMkdir()/VSIRmdir()\n* /vsiaz/: add compatibility with Azurite emulator\n* /vsiadls/: add missing call to InvalidateParentDirectory()\n* /vsigs/: Support type=user JSON file for authentication\n* /vsigs/: fix upload of files > 4 MB in HTTP 1.1 (#5267)\n* /vsigs/, /vsiaz/, /vsiadls/: allow x-goog- / x-ms-/ headers to be specified for object creation\n* ZIP support: avoid warnings on MacOS\n* CPLZLibInflate(): workaround issue with /opt/intel/oneapi/intelpython/latest/lib/libz.so.1 from intel/oneapi-basekit Docker image\n* /vsizip/: fix Eof() detection on stored (ie not compressed) files inside the zip (#5468)\n* /vsitar/: fix reading .tar.gz files when the size of the uncompressed .tar file is a multiple of 65536 bytes (#5225)\n* CPLGetCurrentDir(): use _wgetcwd() on Windows to get a UTF-8 filename\n* CSLTokenizeString2(): make it work with strings > 2 GB\n* CPLLoadConfigOptionsFromFile(): add a \\[credentials\\] section to load VSI credentials\n* /vsimem/: VSIFTruncateL(): make sure to zeroize beyond the truncated area\n\n### Core\n\n* Embedded Python: fixes to load Conda and mingw64 python on Windows\n* Embedded python: list Python 3.10\n* GDALDriver::QuietDelete(): take into account papszAllowedDrivers argument\n* GDALDataset::MarkSuppressOnClose(): delete auxiliary files (#4791)\n* GDALPamRasterBand::CloneInfo(): deal correctly with NaN nodata to avoid generating useless .aux.xml file (#4847)\n* External overviews: automatically turn PLANARCONFIG_CONTIG for WebP overviews\n* GDALDatasetCopyWholeRaster(): clarify INTERLEAVE option meaning and raises warning if invalid value is specified (#4909)\n* CreateCopy(): propagate INTERLEAVE from source data (#4911)\n* Add GDALPamDataset::DeleteGeoTransform() (#4877)\n* Metadata readers: remove thread-unsafe use of localtime()\n* Pleiades metadata reader: fix to handle RPC for Pleiades Neo (#5090)\n* GeoEye metadata reader: avoid potential write stack-buffer overflow on long basename files (#5506)\n* Overview generation: fix Cubic resampling on boundaries between valid and transparent areas (#5016)\n* make GDALProxyRasterBand::RefUnderlyingRasterBand() / UnrefUnderlyingRasterBand() const. May affect out-of-tree drivers\n* Add GDALRasterBand::IsMaskBand() and GetMaskValueRange() virtual methods\n* Avoid CPLError() on number of drivers when PAM is disabled\n* RawRasterBand::AccessBlock(): do not early return in case of truncated block\n\n### Algorithms\n\n* Geoloc transformer: fix inverse transform to be exact (#5520)\n* Geoloc transformer: make it usable with arbitrary large geolocation arrays, using temporary GTiff storage (#5520)\n* gdal_grid: add facility to search points included in search ellipse for GDALDataMetrics (minimum, maximum, range, count, average_distance, average_distance_pts) in the already implemented quadtree data structure (#5530)\n* Rasterization of polygons: avoid underflow/overflow of output data type\n* Rasterize: use rounding to integers of floating-point value, and handle +/- inf for floating point rasters\n* Rasterize: make it possible to burn a Int64 attribute into a Int64 raster in a lossless way\n* Warp kernel: avoid writing outside allocated buffer if more threads than needed are allocated\n* warper: better guess output bounds when warping from a rotated pole projection that include poles\n* transformer: implement DST_METHOD=GEOLOC_ARRAY\n* avoid using any resampling kernel when doing just a subsetting of the source image (alignment on pixel boundaries) (#5345)\n* GDALBuildVRT(): in -separate mode, add support for sources such as MEM dataset or non-materialized VRT files\n\n### Utilities\n\n* gdalinfo --build: report PROJ version of build and runtime\n* gdaladdo -clean: remove overviews of mask (#1047)\n* gdalwarp -crop_to_cutline: relax epsilon to avoid extremely long loop (#4826)\n* gdalwarp: do not emit \"Point outside of projection domain\" / \"tolerance condition error\" (#4934)\n* gdalwarp: avoid useless use of CHECK_WITH_INVERT_PROJ when computed bounds are at the 'edges' of the geographic domain\n* gdal_translate/gdalwarp: do not delete DIM_/RPC_ auxiliary XML files on converting a jp2 file to a tif file (#5633)\n* gdalbuildvrt: change logic to check homogeneous number of bands (#5136)\n* gdalsrsinfo: emit message when replacement of deprecated CRS occurs, with hint to set OSR_USE_NON_DEPRECATED=NO configuration option to avoid that (#5106)\n* gdalsrsinfo: return a non-zero exit code when specified SRS fails to load (#5201)\n* gdalbuildvrt: add a -strict/-non_strict flag, and in strict mode consider non-existing datasets as a failure (#4755)\n* gdal_pansharpen.py: display usage if not enough filenames provided\n* gdal_polygonize.py: remove use of Unicode double quote characters\n* gdal_polygonize.py: make -8 switch work again (#5000)\n* gdal_sieve.py: fix exception when source dataset has no nodata value (3.4.0 regression) (#4899)\n* gdal_calc.py: support wildcard for filenames, and use 3D arrays instead of list for multiple filenames per alpha\n* gdal_calc.py: raise error when overwriting behavior is apparently wished but not specified (#5270)\n* gdal2tiles: make --no-kml option takes effect (#4940)\n* gdal2tiles: XML escape input filename (#5032)\n* gdal2tiles: remove/fix broken links in generated files\n* gdal2tiles: implement parallel generation of overview tiles (#5052)\n* gdal2tiles: lower chunksize value to allow parallel processing when generating ~ 100 tiles\n* gdal2tiles: fix issue with multiprocessing and the gdal2tiles launcher script on Windows and Python >= 3.8 (#4951)\n* gdal2tiles: support mpi4py multi-node parallelism (#5309)\n* gdal2tiles: detect write error when creating tiles, and allow outputting to /vsi filesystems (#3382, #5370)\n* gdal2tiles: do not generate .aux.xml files on overview tiles\n* bash-completion: fixes and update gdal-bash-completion.sh\n\n### gdal_utils package\n\n* Make scripts executable\n* Add entry points for gdal-utils package (#5281)\n\n### Raster drivers\n\nAAIGRID driver:\n * add support for 'null' as can be generated by D12 software (#5095)\n\nBAG driver:\n * fix 'too many refinement grids' error (#3759)\n\nBMP driver:\n * harden identify checks to avoid misidentification of other datasets (#4713)\n\nBYN driver:\n * remove validation of nTideSys and nPtType fields\n\nCOG driver:\n * only create RGB JPEG with mask if 4-band is alpha (#4853)\n * fix potential generation failure when main imagery has overview and mask none\n * output exactly square pixels when using -co TILING_SCHEME (#5343)\n * add a ZOOM_LEVEL creation option (#5532)\n\nDIMAP driver:\n * avoid warning when extracting metadata from unsupported band_id\n * register metadata on all 6 PNEO bands\n * validate raster dimensions to avoid further issues (ossfuzz #46762)\n\nECW driver:\n * fix test failures with ECW 5.5\n * do not try to open UInt32 JPEG2000 if the SDK is buggy (#3860)\n * fix non-nearest upsampling on multi-band datasets (#5288)\n * Added source read by swath to improve encoder performance\n\nERS driver:\n * Add support for comments in ERS files (#4835)\n\nESRIC driver:\n * Fix bundle file name\n\nFITS driver:\n * fix non-conformant use of &v[0] that crashes with clang 14 -O2\n\nGeoRaster driver:\n * fix build without JPEG\n\nGRIB driver:\n * GRIB2: mode degrib hard-coded tables to .csv files in resource files\n * GRIB2: merge content from WMO tables at https://github.com/wmo-im/GRIB2 with DEGRIB ones\n * fix writing negative longitude of natural origin for Transverse Mercator, and fix reading it for TMerc, LCC, ACEA and LAEA\n * fix thread-safetey of errSprintf() (#4830)\n * avoid read heap buffer overflow due to inappropriate split-and-swap on dataset with weird georeferencing (#5290, ossfuzz #41260, ossfuzz #41637)\n * consider longitudes that slightly exceed 360° as 360° for Split&Swap mode (#5496)\n * degrib: partial resynchroinzation with degrib 2.25 (degrib-20200921)\n * fix use of uninitialized memory on some datasets (#5290)\n * multidim: fix crash when a .idx file is present (#5569)\n\nGTiff driver:\n * explicitly enable strip choping to avoid issues with cmake libtiff builds\n * JXL codec: use non-deprecated methods and update for compatibility with latest state of libjxl\n * only emit warnings on libgeotiff PROJ errors (#4801)\n * SRS reading: add warning when CRS definition from geokeys is inconsistent with EPSG, and a GTIFF_SRS_SOURCE=EPSG/GEOKEYS configuration option to alter the SRS (#5399)\n * avoid warning with >= 5 bands and JPEG compression\n * LERC overview related improvements (#4848): MAX_Z_ERROR_OVERVIEW, ZLEVEL_OVERVIEW, ZSTD_LEVEL_OVERVIEW configuration options added\n * propagate SPARSE_OK to overviews (#4932), and add SPARSE_OK_OVERVIEW configuration option.\n * fix performance issue when reading transfer functions (#4923)\n * avoid huge memory allocation when generating overviews on large single-band 1-bit tiled files (#4932)\n * make SetGCPs(), SetGeoTransform(), SetSpatialRef(), SetNoDataValue(), SetMetadata(Item)() write to PAM .aux.xml on read only files (#4877)\n * add support for reading/writing color table from/into PAM .aux.xml (#4897)\n * do not warn about buggy Sentinel1 geotiff files use a wrong 4326 code for the ellipsoid\n * fix DISCARD_LSB with nodata value (#5097)\n * GTIFWktFromMemBufEx / GTIFMemBufFromSRS: use OSRSetPROJSearchPaths()  (#5184). Affects GeoJP2 encoding/decoding\n * fix exposing WEBP_LOSSLESS option\n * early checks for PREDICTOR settings, and update internal libtiff to support PREDICTOR=2 for 64-bit samples (rasterio/rasterio#2384)\n * remove limitation to 32,000 bytes when writing the GDAL metadata tag (#4116)\n * Create(): better detection of threshold when to switch to BigTIFF for tiled images (#5479)\n * unset geotransform from non-PAM source if PAM defines GCPs, and PAM is the prioritary source\n * fix crash when building overviews and computing approx stats (#5580)\n\nHDF5 driver:\n * fix issue when netCDF and/or HDF5 drivers built as plugins with multidim datasets\n * detect Matlab .mat HDF5-based, or other files with HDF5 superblock at offset 512\n\nHFA driver:\n * Fix \"Pulkovo 1942\" datum write to IMG files\n\nJP2KAK driver:\n * add support for reading/writing Int32/UInt32 data types\n * Add support for Creversible & RATE creation option  (#5131)\n\nJP2OpenJPEG driver:\n * add a STRICT=YES/NO open option to allow decoding some broken files (requires OpenJPEG 2.5)\n\nJPEG driver:\n * make sure that max memory usage check is done in all code paths that require it\n\nKEA driver:\n * print error message when opening of kea file fails\n\nMRF driver:\n * Fix padding space logic (#5096)\n * Add LERC2 padding when encoding\n * Adjust PNG limits (#5347)\n * Allow using external libLerc (#5386)\n\nMSG driver:\n * fix/workaround MSVC warnings\n\nnetCDF driver:\n * handle 'crs_wkt' attribute\n * always use WKT when found, without comparing with CF params (#4725)\n * limit SetFromUserInput() use to non file input\n * disable filename recoding to ANSI on Windows for netCDF >= 4.8\n * add WRITE_GDAL_VERSION and WRITE_GDAL_HISTORY creation option\n * add a VARIABLES_AS_BANDS=YES/NO open option\n * allow update mode of raster datasets\n * implement SetMetadataItem()/SetMetadata()\n * avoid warnings when CreateCopy() a non-georeferenced dataset, and opening a 1x1 non-georeferenced dataset\n * add a IGNORE_XY_AXIS_NAME_CHECKS=YES open option (qgis/QGIS#47158)\n * recognize x/y axis from GMT generated files as geospatial axis (#5291, qgis/QGIS#47158, qgis/QGIS#45704)\n * read CF attributes giving CRS component names (#5493)\n\nNITF driver:\n * Add ISO-8859-1 decoding for file and image header metadata\n * avoid PROJ error to be emitted in Create() when ICORDS=N/S (#5563)\n * CADRG polar zone! CRS definition aligned with ADRG and SRP (#5656)\n * RPF.toc: skip plausibility check for Overviews and Legends; disable some checks for polar zones (#5654)\n\nPCIDSK driver:\n * fix write heap-buffer-overflow (ossfuzz #41993)\n\nPDS4 driver:\n * write conformant Equirectangular when input raster is a geographic CRS\n\nPDF driver:\n * Named NEATLINE extraction from ISO32000 style Geospatial PDF (#5504)\n\nRRASTER driver:\n * add support for CRS WKT2 (#5473)\n\nSAGA driver:\n * implement SetNoDataValue() (#5147)\n\nSENTINEL2 driver:\n * identify zipped S2 datasets from file content (#5505)\n\nTGA driver:\n * fix reading images with runs crossing scanlines (#5168)\n\nTileDB driver:\n * fix crash when creating array from subdatasets fails\n * fix handling of relative paths on Windows\n * avoid warnings about deprecated functions\n\nUSGSDEM driver:\n * fix reading datasets with 1025 byte records ending with linefeed (#5007)\n\nVICAR driver:\n * avoid undefined behavior on empty container (ossfuzz #46650)\n\nVRT driver:\n * Add div, polar, exp pixel functions. Improvements in sum, mul, inv (#5298)\n * pixel function: implements metadata, and replace_nodata and scale builtin functions (#5371)\n * Warped VRT: detect inconsistent block size between dataset and bands (#4714)\n * Warped VRT: do not serialize block size at band level, since already serialized at dataset level (#4714)\n * Warped VRT: advertise INTERLEAVE=PIXEL for faster processing of multiband\n * Warped VRT: fix issue with blocks without sources and alpha band (#4997)\n * VRTWarpedDataset::ProcessBlock(): fix issue in the unlikely situation where a block would be > 4 GB\n * Warped VRT opening: do not open the source dataset with GDAL_OF_SHARED\n * fix serialization of relativeToVRT=1 when mix of relative and absolute paths for source and VRT (#4983)\n * GDALAutoCreateWarpedVRTEx(): avoid potential crash in case of error\n * allow setting VRT description after CreateCopy('', src_ds)\n * fix serialization of relativeToVRT=1 when mix of relative and absolute paths for source and VRT\n * ComputeSourceWindow(): round source coordinates when very close (#5343)\n\nWMTS driver:\n * disable clipping with TileMatrixSetLimits by default when using layer extent and add open options to control that behavior (#4461)\n\nXYZ driver:\n * Fix incorrect failure to open ASCII-file due to floating point comparison\n\nZarr driver:\n * be robust to duplicated array and group names in NCZarr metadata (ossfuzz #40949)\n * fix nullptr dereference on array with zero-dim and Fortran order (ossfuzz #46717)\n\n## OGR 3.5.0 - Overview of Changes\n\n### Core\n\nNew features:\n* Add layer renaming capacity, and implement it in GPKG, PG, FileGDB and Shapefile drivers\n* Add GDALDataset::GetFieldDomainNames method to retrieve all field domain names which are available for a dataset. Implemented in OpenFileGDB, FileGDB, GPKG drivers\n* Add GDALDataset::DeleteFieldDomain for deleting an existing field domain. Implemented in MEM driver\n* Add GDALDataset::UpdateFieldDomain for replaciong the definition of an existing field domain. Implemented in MEM driver\n* Add driver metadata for GDAL_DCAP_FIELD_DOMAINS and GDAL_DMD_CREATION_FIELD_DOMAIN_TYPES\n* Add OGR_F_StealGeometryEx to steal more than the 1st geometry of a feature (#5115)\n* OGRFeature: add fast/unsafe field getters/setters\n* OGREnvelope: add == and != comparison operators\n* OGRFeature: add Reset() method\n\nBug fixes:\n* OGRSimpleCurve::segmentize(): avoid too many memory reallocation (#4826)\n* OGR SQLite dialect: avoid being confused by an attribute and geometry field of same name\n* OGRFormatFloat(): handle nan and inf\n* OGRFeature::Equal(): fix when a Real or RealList field contains NaN\n* OGRCurvePolygon::checkRing(): make it accept non-closed rings by default (#5488)\n* OGRCreateFromShapeBin(): do not report M if all NaN coordinates\n* OGRGeometryFactory::forceTo(): fix dimensionality with empty geometries\n* Multipoint WKT import: accept MULTIPOINT Z in non-backeted mode, like what PostGIS outputs\n* OGR_F_SetFieldRaw() / OGRFeature::SetField( const char*, const OGRField *): fix const correctness of OGRField argument\n\n### OGRSpatialReference\n\n* OGRSpatialReference::GetName(): workaround a PROJ 8.2.0 bug for BoundCRS\n* add a OGR_CT_PREFER_OFFICIAL_SRS_DEF config option (fixes https://github.com/OSGeo/PROJ/issues/2955)\n* OGRSpatialReference::importFromEPSG(): document OSR_USE_NON_DEPRECATED=NO configuration option (#5106)\n* OGRSpatialReference::SetFromUserInput(): make it work with 'IAU:XXXX' and 'IAU:2015:XXXX' (when using PROJ >= 8.2)\n* OGRSpatialReference::SetFromUserInput(): do not emit error message on unrecognized string when ALLOW_FILE_ACCESS=NO (Toblerity/Fiona#1063)\n* Add a OSR_DEFAULT_AXIS_MAPPING_STRATEGY configuration option\n* OGRProjCT: add missing copying of epoch related fields in copy constructor\n* Add OGRSpatialReference::GetOGCURN()\n\n### Utilities\n\n* ogr2ogr: propagate error in final CommitTransaction() to status code of the utility (#5054)\n* ogr2ogr: make detection of FID layer creation option more robust\n* ogr2ogr: fix cutting of geometries in projected coordinates intersecting antimeridian, in some configurations\n* ogr2ogr: avoid (in-memory) copying of source feature to target feature when possible\n* ogr2ogr: make 'ogr2ogr [-f PostgreSQL] PG:dbname=.... source [srclayer] -lco OVERWRITE=YES' work as if -overwrite was specified (#5640)\n\n### Vector drivers\n\nCAD driver:\n * libopencad: fix crash on corrupted datasets (ossfuzz #45943, ossfuzz #46887, osffuzz #45962)\n\nCSV driver:\n * when the .csvt indicates WKT and in default KEEP_GEOM_COLUMNS=YES mode, prefix the geometry field name with 'geom_'\n\nDXF driver:\n * Do not copy final DXF when MarkSuppressOnClose was called.\n * Fix long line handling in edge case\n\nDWG driver:\n * Add block attributes to entities layer (#5013)\n * support AcDbFace reading (#5034)\n * read block attributes as feature fields (#5055)\n * add DWG_ALL_ATTRIBUTES to get all attributes (#5103)\n\nDWG/DGNv8 driver:\n * avoid potential crash with ODA 2022 on Linux\n\nElasticSearch driver:\n * do not try to open reserved .geoip_databases to avoid error message with recent Elastic versions\n * add a AGGREGATION open option (#4962)\n * support GetLayerByName() with multiple layers and/or wildcard (#4903)\n\nESRIJSON driver:\n * fix dimensionality of PolygonZ\n\nFileGDB driver:\n * add support for writing field domains\n * implement database compaction on 'REPACK' SQL command\n * workaround a crash involving binary field and CDF datasets\n * fix crash related to feature of FID 2147483647\n\nFlatGeoBuf driver:\n * If CRS WKT detected to be non UTF-8, force it to ASCII (#5062)\n * catch exception on GetFeature() on corrupted index\n * fix GetFeature() when featuresCount != 0 and indexNodeSize == 0\n * in SPATIAL_INDEX=NO mode, write a meaningful featureCount and extent in the header\n\nGeoJSON driver:\n * reader: expose EPSG:4979 as CRS when none is specified and 3D geoms are found\n * use OGRSpatialReference::GetOGCURN() to handle compound CRS when writing 'crs' member\n * writer: in RFC7946=YES mode, reproject to EPSG:4979 if source CRS is 3D\n * report OFSTJSON subfield type for properties we can't map to a native OGR type, and better handling of mixed content in properties (#3882)\n\nGMLAS driver:\n * be robust to leading spaces in <gml:coordinates> element (#5494)\n\nGMT driver:\n * allow writing to /vsistdout/ (#4993)\n\nGPKG driver:\n * fix nullptr dereference on corrupted databases with sqlite >= 3.35\n * deal explicitly with CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES for /vsi network file systems (#5031)\n * when adding a 'epoch' column to gpkg_spatial_ref_sys, one must use the 'gpkg_crs_wkt_1_1' extension instead of 'gpkg_crs_wkt'\n * DeleteField(): use ALTER TABLE ... DROP COLUMN if sqlite >= 3.35.5, and run foreign_key_check only if foreign_keys is ON (fixes qgis/qgis#47012)\n * AlterFieldDefn(): use ALTER TABLE ... RENAME COLUMN when only renaming is to be done and sqlite >= 3.26.0, and do not run integrity_check in that situation (fixes qgis/qgis#47012)\n * intercept 'ALTER TABLE table RENAME COLUMN src_name TO dst_name' and 'ALTER TABLE table DROP COLUMN col_name'\n * add a NOLOCK=YES option to open a file without any lock (for read-only access) (helps fixing qgis/qgis#2399)\n * add ST_MakeValid() SQL function if not linking against Spatialite or if Spatialite lacks ST_MakeValid()\n\nGPSBabel driver:\n * Allow identifying tcx (gtrnctr) files directly\n\nILI driver:\n * IMDReader: fix various potential crashes on invalid input\n\nMapInfo driver:\n * allow reading MID/MIF files with lines up to 1 million bytes (#3943)\n * fix parsing .mid files with newline character in string field (#4789)\n * .tab writing: correctly detect datum when creating a layer from a WKT2 CRS string (#5217)\n * Add GSK2011 and PZ90.11 to list of ellipsoids (#5541)\n * add WindowsBalticRim / CP1257 charset mapping (#5608)\n\nMSSQL driver:\n * fix build warnings on Linux\n * GetLayerDefn(): fix potential memory leak\n * DeleteLayer(): fix read after free\n * fix issue when inserting strings in bulk copy mode on Linux\n * make GetNextFeature() end bulk copy mode\n * CreateFeature in bulk copy mode: make it use feature geometry SRID when set\n * disable bulk mode when a UUID field is found, as this doesn't work currently\n * do not set field width when reading smallint/int/bigint/float/real columns, and correctly roundtrip smallint/Int16 (#3345)\n\nMVT driver:\n * writing: using MakeValid() when possible on polygon output\n\nODS driver:\n * avoid huge memory allocations on files abusing repeated cells (ossfuzz #40568)\n * avoid crashing 'floating-point exception' when evaluating -2147483648 % -1 (ossfuzz #41541)\n\nOpenFileGDB driver:\n * correctly parse raster fields of type == 2 which are inlined binary content (#4881)\n * do not report extent with NaN values\n * fix crash related to feature of FID 2147483647\n * fix dimensionality of MULTILINESTRING M geometries\n * add support for reading (non-default) UTF16 encoding for strings\n\nOSM driver:\n * add a railway attributes to lines (#5141)\n\nPGeo driver:\n * Always request numeric column values as numeric types (#4697)\n\nPostgreSQL driver:\n * skip all leading whitespace in SQL statements. (#4787)\n * error out if non UTF-8 content is transmitted in COPY mode, when client_encoding=UTF8 (#4751)\n * propagate errors in deferred EndCopy() call in CommitTransaction() (#5054)\n * make ogr2ogr -lco GEOM_TYPE=geography work when the source layer has a named geometry column, and also reject creating geography columns with a SRS != EPSG:4326 (#5069)\n * support other geographic SRS than EPSG:4326 for geographic type (#5075)\n\nS57 driver:\n * enable recoding to UTF-8 by default (RECODE_BY_DSSI=YES open option) (#4751)\n * handle more than 255 updates to a feature (#5461)\n * only apply an update if update.UPDT == 1 + previous.UPDT, or update.EDTN == 0 (#5461)\n\nSelafin driver:\n * fix time step count when none dataset in the file\n\nShapefile driver:\n * better deal with ETRS89 based CRS with TOWGS84\\[0,0,0,0,0,0,0\\]\n * writer: avoid considering rings slightly overlapping as inner-outer rings of others (#5315)\n * fix perf issue when writing multilinestring with lots of parts (#5321)\n * consider rings at non-constant Z as outer rings (#5315)\n * fix unlikely nullptr dereference (#5635)\n\nSOSI driver:\n * avoid segfault on invalid geometries (#5502)\n\nSQLite driver:\n * add a STRICT=YES layer creation option to create tables as SQLite >= 3.37 STRICT tables\n * workaround MacOS system SQLite non-default settings that cause issues with WAL and AlterFieldDefn() when patching CREATE TABLE DDL\n * deal explicitly with CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES for /vsi network file systems (#5031)\n * DeleteField(): use ALTER TABLE ... DROP COLUMN if sqlite >= 3.35.5, and run foreign_key_check only if foreign_keys is ON (refs qgis/qgis#47012)\n * AlterFieldDefn(): use ALTER TABLE ... RENAME COLUMN when only renaming is to be done and sqlite >= 3.26.0\n * fix crash when doing select load_extension('libgdal.so') from a statically linked sqlite3 console application\n * add a OGR_SQLITE_LOAD_EXTENSIONS configuration option\n * fix VirtualShape support with spatialite 5.0.1 or older and sqlite 3.38.0\n\nTopoJSON driver:\n * fix duplicate 'id' field, and other potential issues when reading fields (3.4.0 regression)\n\nVFK driver:\n * avoid crash when a SQLite3 statement fails\n\nWFS driver:\n * if COUNT is present in WFS >= 2, use it as the page size\n\n## SWIG Language Bindings\n\nAll bindings:\n * add missing CPLES_SQLI constant (#4878)\n * add gdal.DataTypeUnion()\n * Geometry.ExportToWkb()/ExportToIsoWkb(): use Intel order by default to avoid useless byte swapping\n * use OGR_G_CreateFromWkbEx() in ogr.CreateGeometryFromWkb() to be able to handle > 2 GB WKB\n\nC# Bindings:\n * Re-target C# bindings apps to netcoreapp2.2 (#4792)\n * Switch default platform target to AnyCPU #1368\n\nPython bindings:\n * for Windows and Python >= 3.8, automatically add the first path with (lib)gdal*.dll with os.add_dll_directory()\n * Change GetFieldAsBinary to use VSIMalloc. (#4774)\n * add xmp=True/False argument to gdal.Translate()\n * fix/workaround setuptools 60.0 and Debian --install-layout\n * replace unsafe use of tempfile.mktemp() by mkstemp()\n * utilities-as-lib: propagate warnings to custom error handler when UseExceptions is on (#5136)\n * remove all traces of distutils\n * make sure GetUseExceptions() doesn't clear the error state (#5374)\n * make feature.GetField() returns a bool for a (type=OFTInteger, subtype=OFSTBool) field\n\n# GDAL/OGR 3.4.3 Release Notes\n\n## GDAL 3.4.3 - Overview of Changes\n\n### Port\n\n* /vsizip/: fix Eof() detection on stored (ie not compressed) files inside the zip (#5468)\n* /vsiaz/: do not sign request in AZURE_NO_SIGN_REQUEST mode even when we have credentials\n* /vsimem/: VSIFTruncateL(): make sure to zeroize beyond the truncated area\n* Fix memory leak in VSICurlClearCache() (#5457)\n* Fix out of bounds read in CPLRecodeFromWCharIconV() (#5542)\n\n### Core\n\n* GeoEye metadata reader: avoid potential write stack-buffer overflow on long basename files (#5506)\n\n### Utilities\n\n* gdalbuildvrt: fix potential out-of-bounds access when using -b option\n* gdalwarp: fix issue with vertical shift mode when only one of the CRS is 3D, with PROJ 9.1\n\n### Raster drivers\n\nFITS driver:\n * fix crash at runtime with clang 14 -O2\n\nGRIB driver:\n * consider longitudes that slightly exceed 360° as 360° for Split&Swap mode (#5499)\n * multidim: fix crash when a .idx file is present (#5569)\n\nGTiff driver:\n * SRS reading: add warning when CRS definition from geokeys is inconsistent with EPSG, and a GTIFF_SRS_SOURCE=EPSG/GEOKEYS configuration option to alter the SRS (#5399)\n * avoid hang when trying to create a larger than 4GB classic TIFF, and switch to BigTIFF before that happens\n * fix crash when building overviews and computing approx stats (#5580)\n\nMRF driver:\n * Prevent LERC out of bounds access (#5598)\n\nNITF driver:\n * avoid PROJ error to be emitted in Create() when ICORDS=N/S (#5563)\n\nVICAR driver:\n * avoid undefined behavior on empty container (ossfuzz #46650)\n\n## OGR 3.4.3 - Overview of Changes\n\n### Core\n\n* OGREnvelope: ignore fp warnings for operator== like IsInit()\n* GML geometry importer / GMLAS: be robust to leading spaces in <gml:coordinates> element (#5494)\n* Multipoint WKT import: accept MULTIPOINT Z in non-backeted mode, like what PostGIS outputs\n\n### Utilities\n\n* ogr2ogr: fix cutting of geometries in projected coordinates intersecting antimeridian, in some configurations\n\n### Vector drivers\n\nESRIJSON driver:\n * fix dimensionality of PolygonZ\n\nFlatGeoBuf driver:\n * catch exception on GetFeature() on corrupted index\n * fix GetFeature() when featuresCount != 0 and indexNodeSize == 0\n\nGPKG driver:\n * fix opening files in NOLOCK=YES mode that contains '?' or '#' (fixes qgis/QGIS#48024)\n\nMITAB driver:\n * add WindowsBalticRim / CP1257 charset mapping (#5608)\n\nOpenFileGDB:\n * fix dimensionality of MULTILINESTRING M geometries\n\nS57 driver:\n * fixes related to update files (#5461)\n\nSOSI driver:\n * avoid segfault on invalid geometries (#5502)\n\n# GDAL/OGR 3.4.2 Release Notes\n\n## Build\n\n* Fix build against Poppler > 21 (#5071)\n* Fix build against libhdf5 1.13.0 (#5061)\n* Fix build with tiledb >= 2.7 (#5409)\n\n## GDAL 3.4.2 - Overview of Changes\n\n### Port\n\n* Google cloud - Support type=authorized_user JSON file for authentication\n* /vsigs/: fix upload of files > 4 MB in HTTP 1.1 (#5267)\n* /vsitar/: fix reading .tar.gz files when the size of the uncompressed  .tar file is a multiple of 65536 bytes (#5225)\n* VSICurl: Print response code for failed range requests\n\n### Core\n\n* Pleiades metadata reader: fix to handle RPC for Pleiades Neo (#5090)\n* Driver manager: make sure oMapNameToDrivers.size() == nDrivers when querying a non existing driver\n* Overview generation: fix Cubic resampling on boundaries between valid and nodata areas.\n\n### Algorithms\n\n* Rasterization of polygons: avoid underflow/overflow of output data type\n* warper: better guess output bounds when warping from a rotated pole projection that include poles\n\n### Utilities\n\n* gdal_calc.py: raise error when overwriting behavior is apparently wished but not specified (#5270)\n* gdalbuildvrt: change logic to check homogeneous number of bands (#5136)\n  - if no explicit band list is specified, all source datasets must have\n    the same number of bands (previously we checked that the second,\n    third, etc. datasets had at least a number of bands greater or equal\n    than the first one, which made things order dependent).\n  - if an explicit band list is specified, we tolerate a different number of bands, provided that datasets have at least all requested bands.\n* gdalbuildvrt: add a -strict/-non_strict flag, and in strict mode consider non-existing datasets as a failure (#4755)\n* gdalsrsinfo: emit message when replacement of deprecated CRS occurs\n* gdalsrsinfo: return a non-zero exit code when specified SRS fails to load (#5201)\n* gdal2tiles: remove/fix broken links in generated HTML files\n* gdal2tiles: fix issue with multiprocessing and the gdal2tiles launcher script on Windows and Python >= 3.8 (#4951)\n* gdal2tiles: detect write error when creating tiles, and allow outputting to /vsi filesystems (#3382, #5370)\n\n### Raster drivers\n\nBAG driver:\n * fix 'too many refinement grids' error (#3759)\n\nBSB driver:\n * Add missing kap file extension in driver metadata\n\nBYN driver:\n * remove validation of nTideSys and nPtType fields\n\nCOG driver:\n * output exactly square pixels when using -co TILING_SCHEME (#5343)\n * and emit warning messages when using RES or EXTENT options in that mode.\n\nDIMAP driver:\n * register metadata on all 6 PNEO bands (#5420)\n\nECW driver:\n * fix non-nearest upsampling on multi-band datasets (#5288)\n\nESRIC driver:\n * Fix bundle file name\n\nFileGDB driver:\n * workaround a crash involving binary field and CDF datasets\n\nGTiff driver:\n * fix DISCARD_LSB with nodata value (#5097)\n * Updates for IJG libjpeg-9e\n * GTIFWktFromMemBufEx / GTIFMemBufFromSRS: use OSRSetPROJSearchPaths() (#5187). Affects GeoJP2 encoding/decoding\n * fix exposing WEBP_LOSSLESS option\n * remove limitation to 32,000 bytes when writing the GDAL metadata tag (#4116)\n\nGRIB driver:\n * fix write heap-buffer-overflow when using 'split and swap column' mode when the split column is not equal to width / 2 (#5290)\n\nHFA driver:\n * Fix \"Pulkovo 1942\" datum write to IMG files\n\nMRF driver:\n * Fix padding space logic (#5096)\n * Adjust PNG limits (#5347)\n\nnetCDF driver:\n * add a IGNORE_XY_AXIS_NAME_CHECKS=YES open option (refs qgis/QGIS#47158)\n * recognize x/y axis from GMT generated files as geospatial axis (#5291, qgis/QGIS#47158, qgis/QGIS#45704)\n\nPNG driver:\n * Internal libpng: fix memleak on corrupted file.\n\nTGA driver:\n * fix reading images with runs crossing scanlines (#5168)\n\nWMTS driver:\n * disable clipping with TileMatrixSetLimits by default\n\n## OGR 3.4.2 - Overview of Changes\n\n### OGRSpatialReference\n\n* OGRSpatialReference::SetFromUserInput(): make it work with 'IAU:XXXX'\n\n### Vector drivers\n\nCSV driver:\n * Fix issues with attribute and geometry fields of same name\n\nFlatGeobuf driver:\n * If CRS WKT detected to be non UTF-8, force it to ASCII (#5062)\n\nGPKG:\n * deal explicitly with CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES for /vsi network file systems (#5031)\n * use ALTER TABLE ... RENAME/DROP COLUMN when possible\n * when adding a 'epoch' column to gpkg_spatial_ref_sys, one must use the 'gpkg_crs_wkt_1_1' extension instead of 'gpkg_crs_wkt'\n * add a NOLOCK=YES option to open a file without any lock (for read-only access) (helps fixing qgis/qgis#23991, but requires QGIS changes as well)\n\nMapInfo driver:\n * .tab writing: correctly detect datum when creating a layer from a WKT2 CRS string (#5217)\n\nPG driver:\n * ogr2ogr/PG: propagate errors in CommitTransaction() (#5054)\n * support other geographic SRS than EPSG:4326 for geographic type (#5075)\n\nShapefile driver:\n * writer: fix speed issue when writing multilinestring with lots of parts (#5321)\n * writer: fixes for slightly overlapping parts in a multipolygon, and non-horizontal multipolygon Z (#5315)\n\nSQLite:\n * deal explicitly with CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES for /vsi network file systems (#5031)\n * use ALTER TABLE ... RENAME/DROP COLUMN when possible\n * SQLite SQL dialect: Fix issues with attribute and geometry fields of same name\n * fix crash when doing select load_extension('libgdal.so') from a statically linked sqlite3 console application\n * fix VirtualShape support with spatialite 5.0.1 or older and sqlite 3.38.0\n\n## SWIG bindings\n\nCSharp bindings:\n * Switch default platform target to AnyCPU (#1368)\n\nPython bindings:\n * utilities-as-lib: propagate warnings to custom error handler when UseExceptions is on (#5136)\n * make sure GetUseExceptions() doesn't clear the error state (#5374)\n\n# GDAL/OGR 3.4.1 Release Notes\n\n## Build\n\n* configure.ac: fix detection of OpenEXR >= 3 (#4766)\n* Add support for PCRE2 (to replace deprecated PCRE) (#4822)\n* nmake.opt: fix wrong variable name in example MSODBCSQL_LIB\n* Add support for external libqhull_r (#4040)\n\n## GDAL 3.4.1 - Overview of Changes\n\n### Algorithms\n\n* viewshed.cpp: remove hidden bidirectional unicode character in code comment\n\n### Port\n\n* CPLRecodeIconv(): avoid potential unsigned integer overflow (ossfuzz #41201)\n* CPLRecode(): ZIP support: avoid warnings on MacOS\n* IVSIS3LikeFSHandler::CopyFile(): always take into account ret code of CopyObject()\n* CPLZLibInflate(): workaround issue with /opt/intel/oneapi/intelpython/latest/lib/libz.so.1 from intel/oneapi-basekit Docker image\n\n### Core\n\n* GDALDataset::MarkSuppressOnClose(): delete auxiliary files (#4791)\n* GDALPamRasterBand::CloneInfo(): deal correctly with NaN nodata to avoid generating useless .aux.xml file (#4847)\n* External overviews: automatically turn PLANARCONFIG_CONTIG for WebP overviews\n\n### Utilities\n\n* gdaladdo -clean: remove overviews of mask (#1047)\n* gdalwarp -crop_to_cutline: fix extremely long loop (#4826)\n* gdalwarp: do not emit \"Point outside of projection domain\" / \"tolerance condition error\" (#4934)\n* gdal_polygonize.py: remove use of Unicode double quote characters\n* gdal_polygonize.py: make -8 switch work again (#5000)\n* gdal_sieve.py: fix exception when source dataset has no nodata value (3.4.0 regression) (#4899)\n* gdal2tiles: making --no-kml option takes effect (#4936)\n* gdal2tiles: XML escape input filename (#5032)\n\n### Raster drivers\n\nCOG driver:\n * only create RGB JPEG with mask if 4-band is alpha (#4853)\n * fix potential generation failure when main imagery has overview and mask none\n\nECW driver:\n * do not try to open UInt32 JPEG2000 if the SDK is buggy (#3860)\n\nERS driver:\n * Add support for comments in ERS files (#4835)\n\nGRIB driver:\n * fix thread-safetey of errSprintf()\n * avoid read heap buffer overflow due to inappropriate split-and-swap on dataset with weird georeferencing (ossfuzz #41260, #41637)\n * fix writing negative longitude of natural origin for Transverse Mercator\n\nGTiff driver:\n * only emit warnings on libgeotiff PROJ errors (#4801)\n * Initialize jxl structures with zeros.\n * LERC overview related improvements (#4848):\n   + COMPRESS_OVERVIEW configuration option now honours LERC_DEFLATE and LERC_ZSTD for external overviews\n   + MAX_Z_ERROR_OVERVIEW configuration option is added for LERC compressed internal and external overviews.\n   + ZLEVEL_OVERVIEW configuration option is added for DEFLATE/LERC_DEFLATE compressed internal and external overviews.\n   + ZSTD_LEVEL_OVERVIEW configuration option is added for ZSTD/LERC_ZSTD compressed internal and external overviews.\n * fix performance issue when reading transfer functions (#4923)\n * propagate SPARSE_OK to overviews (#4932)\n * avoid huge memory allocation when generating overviews on large single-band 1-bit tiled files (#4932)\n * make SetGCPs(), SetGeoTransform(), SetSpatialRef(), SetNoDataValue(), SetMetadata[Item]() write to PAM .aux.xml on read only files (#4877)\n * add support for reading/writing color table from/into PAM .aux.xml (#4897)\n * do not warn about buggy Sentinel1 geotiff files use a wrong 4326 code for the ellipsoid\n * Internal libtiff: fix issue with rewrite-in-place logic of libtiff #309\n\nKEA driver:\n * print error message when opening of kea file fails\n\nNITF driver:\n * Add ISO-8859-1 decoding for file and image header metadata\n\nPCIDSK driver:\n * fix write heap-buffer-overflow (ossfuzz #41993)\n\nPDS4 driver:\n * write conformant Equirectangular when input raster is a geographic CRS\n\nUSGSDEM driver:\n * fix reading datasets with 1025 byte records ending with line feed (#5007)\n\nVRT driver:\n * Warped VRT: fix issue with blocks without sources and alpha band (#4997)\n\nXYZ driver:\n * Fix incorrect failure to open ASCII-file due to floating point comparison\n\nZarr driver:\n * be robust to duplicated array and group names in NCZarr metadata, which could lead to performance issues\n * fixes 'runtime error: reference binding to null pointer of type 'unsigned char' (ossfuzz #41517)\n\n## OGR 3.4.1 - Overview of Changes\n\n### OGRSpatialReference\n\n* OGR_CT: add a OGR_CT_PREFER_OFFICIAL_SRS_DEF config option\n\n### Vector drivers\n\nDXF driver:\n * Do not copy final DXF when MarkSuppressOnClose was called\n\nDWG/DGNv8 drivers:\n * avoid potential crash with ODA 2022 on Linux when driver unloading doesn't occur properly\n * DWG: Add block attributes to entities layer (#5013)\n\nElasticSearch driver:\n * do not try to open reserved .geoip_databases to avoid error message with recent Elastic versions\n\nGPKG driver:\n * fix nullptr dereference on corrupted databases with sqlite >= 3.35\n\nMSSQL driver:\n * fix compilation warnings on Linux\n * avoid GetLayerDefn() to return null, and call it in GetExtent()\n * DeleteLayer(): remove suspicious test 'strlen(pszTableName) == 0' that causes a read after free\n * fix issue when inserting strings in bulk copy mode on Linux\n * make GetNextFeature() end bulk copy mode\n * CreateFeature in bulk copy mode: make it use feature geometry SRID when set\n * disable bulk mode when a UUID field is found, as this doesn't work currently\n * do not set field width when reading smallint/int/bigint/float/real columns, and correctly roundtrip smallint/Int16 (#3345)\n\nODS driver:\n * avoid crashing 'floating-point exception' when evaluating -2147483648 % -1 (ossfuzz #41541)\n\nOpenFileGDB driver:\n * correctly parse raster fields of type == 2 which are inlined binary content (#4881)\n\nPG driver:\n * skip all leading whitespace in SQL statements. (#4787)\n\nSelafin driver:\n * fix time step count when none dataset in the file\n\nShape driver:\n * better deal with ETRS89 based CRS with TOWGS84[0,0,0,0,0,0,0]\n\nSQLite driver:\n * Various fixes for MacOS system SQLite\n\nS57 driver:\n * enable recoding to UTF-8 by default (RECODE_BY_DSSI=YES open option) (#4751)\n\nTopoJSON driver:\n * fix duplicate 'id' field, and other potential issues when reading fields\n\nWFS driver:\n * if COUNT is present in WFS >= 2, use it as the page size. Also clarify doc\n\n## SWIG Language Bindings\n\nAll bindings:\n * add missing CPLES_SQLI constant (#4878)\n\nCSharp bindings:\n * Re-target apps to netcoreapp2.2, fix broken build (#4792)\n\nJava bindings:\n * add_javadoc.c: robustness fixes and fix crash on MacOS\n\nPython bindings:\n * Change GetFieldAsBinary to use VSIMalloc. (#4774)\n * install target: fix/workaround for setuptools 60.0 and Debian --install-layout\n\n# GDAL/OGR 3.4.0 Release Notes\n\n## In a nutshell...\n\n* [RFC 81](https://gdal.org/development/rfc/rfc81_coordinate_epoch.html):\n  Support for coordinate epochs in geospatial formats.\n  Implemented in FlatGeoBuf, GeoPackage, MEM, VRT\n* New GDAL drivers:\n  - [Zarr](https://gdal.org/drivers/raster/zarr.html):\n    read/write support for ZarrV2 (and experimental V3), using 2D classic raster\n    API or multidimensional API:\n  - [STACIT](https://gdal.org/drivers/raster/stacit.html):\n    Spatio-Temporal Asset Catalog Items as virtual mosaics\n* Other improvements:\n  - number of enhancements in file system operations of /vsigs/\n  - NITF: additions to comply with NITF Version 2.1 Commercial Dataset\n    Requirements Document (NCDRD)\n  - ODBC and PGeo: multiple fixes and improvements\n  - SAFE (Sentinel1): multiple improvements related to SLC/calibration (change\n    subdataset naming)\n  - multidimensional API: caching, and other improvements\n* Code linting and security fixes\n* Bump of shared lib major version\n* MDB driver (Java based) mark as deprecated. Planned for removal for GDAL 3.5.\n  ODBC driver is the preferred solution (with up-to-date MDBTools library on\n  non-Windows platforms)\n* Writing side of Tiger driver deprecated and will be removed in GDAL 3.5\n* Remainder: DODS, JPEG2000(Jasper), JPEGLS, MG4LIDAR, FUJIBAS, IDA, INGR and\n  vector driver ARCGEN, ArcObjects, CLOUDANT, COUCHDB, DB2, DODS, FME, GEOMEDIA,\n  GTM, INGRES, MONGODB, REC, WALK are planned for removal in GDAL 3.5. As well\n  as Perl bindings\n\n## New optional dependencies\n\n* libjxl (master) when using internal libtiff for JPEG-XL support in TIFF\n* liblz4, libblosc: recommended for Zarr driver (as well as existing libzstd, liblzma)\n* libbrunsli for JPEG-XL support in MRF driver (as well as existing libzstd)\n\n## New installed files\n\n * include/cpl_compressor.h\n\n## Removed installed files\n\n * no longer build testepsg utility by default, which has been superseded by\n   gdalsrsinfo for many years. It will be finally removed in GDAL 3.5\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/3.4/gdal/MIGRATION_GUIDE.TXT)\n\n## Build changes\n\nBuild(General):\n * Changes to build against Xerces-c 4.0dev\n\nBuild(Unix):\n * configure file no longer in git. autogen.sh must be run\n * configure: fix explicit disabling of geos/sfcgal (#3782)\n * configure.ac: also check netcdf presence by using static linking\n * fix lack of compilation of nasakeywordhandler.o with some old/non-gnu versions of grep (#3836)\n * configure.ac: Add compatibility with autoconf 2.71. Set 2.69 as minimum version\n * #include local files with quotes, and for Unix build, use -iquote instead of -I (#4091)\n * Use pkg-config for libdap when dap-config is not available.\n\n## GDAL 3.4.0 - Overview of Changes\n\n### Port\n * Add cpl_compressor.h API\n * Add VSIAbortPendingUploads() to abort pending multipart uploads on /vsis3/ and /vsigs/\n * /vsiaz/: avoid appending same chunk several times\n * /vsigs/: switch to using S3-style multipart upload API, which is now supported\n * /vsigs/: enable parallel multipart upload\n * /vsigs/: add support for reading/writing ACLs through GetFileMetadata/SetFileMetadata with the ACL domain\n * /vsigs/: implement UnlinkBatch() (efficient implementation only works with OAuth2 authentication)\n * /vsigs/: implement RmdirRecursive() (efficient implementation only works with OAuth2 authentication)\n * /vsigs/: add support for GS_USER_PROJECT config option to specify the project ID to bill for requester pays access\n * /vsigs/: add support for GS_NO_SIGN_REQUEST=YES\n * /vsigs/: implement SetFileMetadata(filename, metadata, 'HEADERS')\n * /vsiswift/: Fix openstack swift endpoint detection, add application_credential authentication support (#3960)\n * /vsiswift/: properly cache stat() results\n * VSISwiftFSHandler::Stat(): fix potential nullptr dereference (ossfuzz #37906)\n * /vsis3/ , /vsiaz/: properly set mode field into file property cache\n * /vsicurl/: fix to be able to read /vsis3/zarr-demo/store/spam\n * /vsicurl/: make it work without explicit CPL_VSIL_CURL_USE_HEAD=FALSE with .earthdata.nasa.gov/ URLs (#4641)\n * /vsicurl/: fix crash with curl 7.79.0 to get file size when retrieving headers only\n * /vsizip/: fix memory leak in error code path (ossfuzz #29715)\n * /vsitar/: support prefixed filename of ustar .tar archives (#4625)\n * /vsitar/ etc: avoid potential long processing time on invalid filenames in archive (ossfuzz #30312, ossfuzz #39129)\n * IVSIS3LikeFSHandler::Sync(): add missing lock\n * VSIS3FSHandler::GetOptions(): fix non-XML conformity\n * cpl_odbc.cpp: fix segfault in debug message due to nullptr dereference\n * CPLODBCSession::ConnectToMsAccess(): try various DSN template combinations because the combo odbcinst 2.3.7 from Ubuntu 20.04 + self compiled mdbtools-0.9.3 doesn't like double quoting of DBQ\n * MDBTools driver installation: do not error out if /etc/odbcinst.ini contains an entry for Access, and also add /usr/lib64/odbc as a path to please Fedora\n * Add CPLJSONObject::DeleteNoSplitName()\n * CPLJSONDocument::Load(): increase max document size to 100 MB\n * CPLJSONDocument::LoadMemory(): fix parsing 'true' and 'false'\n * Add CPLQuadTreeRemove()\n * VSIGetMemFileBuffer(): delay destroying VSIMemFile on bUnlinkAndSeize (#4158)\n * Fix VSIMemHandle::Read(buffer,nSize=0,nCount=1) to return 0\n * minixml parser: fix performance issue on very large processing instructions. (ossfuzz #37113)\n * VSIOpenDir(): add a PREFIX option to select only filenames starting with the specified prefix\n * Unix file system: implement OpenDir() with a NAME_AND_TYPE_ONLY option\n * VSIReadDirRecursive(): use VSIOpenDir() / VSIGetNextDirEntry()\n * VSIStatExL(): add a VSI_STAT_CACHE_ONLY flag to avoid attempting any network access\n * CPLCreateUserFaultMapping(): better error message when userfaultfd system call fails due to permission issue\n * userfaultfd: make it work with kernel >= 5.11 without special OS settings\n * CPL logging mechanism: fix writing non-ASCII UTF-8 filenames on Windows (#4492)\n * VSI cache: fix crash when a Read() to the underlying file fails (#4559)\n\n### Core\n * Add a GDAL_DCAP_COORDINATE_EPOCH driver capability set by drivers which support storing/retrieving coordinate epoch\n * fixed issue with GDALLoadRPBFile failing when RPB file does not contain errBias or errRand fields\n * CPLKeywordParser / IMD parser: accept .IMD files with non-properly quoted values (#4037)\n * NASAKeywordHandler: fix performance issues (ossfuzz #39092)\n * IMD writer: properly quote values that have spaces (#4037)\n * ComputeStatistics(): tiny speed improvements for SSE2 Byte/UInt16 cases\n * Overview generation: use per band mask with nodatavalue and average (#3913)\n * GMLJP2v2 writing: fix axis order issue for gml:Envelope (#3866)\n * Overview/rasterio: fix RMS on large Float32 values\n * Overview/rasterio: RMS resampling: add AVX2 implementation for Float and UInt16\n * Overview building: fix crash possibility if user interrupting multi-threaded computation\n * GDALDriver::DefaultCreateCopy(): preserve coordinate epoch\n * PAM: support coordinate epoch as a SRS.coordinateEpoch attribute (RFC 81)\n * GDALDataset::BlockBasedRasterIO(): fixed progress calculation\n * GDALDataset::BlockBasedRasterIO(): fix when an overview is selected and non-integer window coordinates are involved (fix issue with GeoRaster driver. #4665)\n * GetIndexColorTranslationTo(): fix non-exact color matching when palettes don't have the same number of entries (#4156)\n * Block cache: fix potential infinite loop in case of high concurrency and multi-threaded writing (#3848)\n * GDALDataset::GetFileList(): avoid cyclic calls on odd/corrupted datasets (ossfuzz #37460)\n * GDALOpenInfo(): fix issue when passing a directory on netBSD and potentially other BSDs\n * DumpJPK2CodeStream(): dump COC, QCD and QCC segments, and add HTJ2K specificities\n * GDALGetJPEG2000Structure(): limit default number of lines in output to avoid excessive memory and processing time (ossfuzz #14547)\n * GDALMDReaderPleiades::LoadRPCXmlFile(): fix nullptr dereference on non-conformant file (ossfuzz #38998)\n * GDALDataset::FlushCache() and GDALRasterBand::FlushCache(): add a bool bAtClosing argument (fixes #4652)\n * Make GDALRasterBand::TryGetLockedBlockRef() public\n\n### Multidimensional API\n * Add GDALMDArray::IsRegularlySpaced() and GDALMDArray::GuessGeoTransform()\n * Add GDALMDArray::GetResampled() to get a resampled / reprojected view\n * Add a GDALMDArray::GetCoordinateVariables() method\n * Add a GDALMDArray::Cache() method to cache an array/view into a .gmac side car file\n * Add GDALMDArray::IsCacheable() so that drivers can disable attempts at opening cache file on main dataset\n * API: add JSON as a possible subtype of (string) extended data type\n * GDALRasterBand::AsMDArray(): fix data axis to SRS Axis mapping in the return of GetSpatialRef()\n * GDALMDArray::AsClassicDataset(): fix RasterIO() when buffer data type is not native data type\n * Add GDALPamMDArray and GDALPamMultiDim classes to be able to serialize/deserialize metadata (SRS for now) from GDALMDArray\n * Add GDALExtendedDataTypeCreateStringEx() and map it to SWIG\n\n### Algorithms\n * Warper: Eliminate thread lock timeouts on Windows (#3631)\n * Warper: prevent potential int overflows for > 2 GB work buffers\n * Warper: force SAMPLE_GRID=YES when target output includes one pole (#4064)\n * Warper: OpenCL: remove extra double quote character in resampling kernel (#4404)\n * Warper: avoid selecting Float64 working data type with a Float32 raster and a nodata value compatible of it (#4469)\n * geolocation transformer: use GDALFillNodata() to fill holes in the backmap\n * GDALSuggestedWarpOutput2(): better guess of bounds when transforming with a geolocation array\n * gdalgeoloc: fix if the backmap would be larger than 2 Giga pixels\n * gdalgeoloc: backmap generation: prevent averaging that would lead to unexpected results\n * gdalgeoloc: improve backmap hole filling\n * Polygonize: fix self intersection polygon when raster image contains complex holes (#1158, #3319)\n * Deprecate GDALOpenVerticalShiftGrid() and GDALApplyVerticalShiftGrid() that are no longer needed. Will be removed in GDAL 4.0\n\n### Utilities\n * gdalinfo: report coordinate epoch (RFC 81)\n * gdalinfo: avoid displaying thousands of filename in /vsizip/ if open fails\n * gdal_translate: add -a_coord_epoch switch (RFC 81)\n * gdalwarp: allow vertical shift when using EPSG codes (#4566)\n * gdalwarp: preserve coordinate epoch in output SRS (RFC 81)\n * gdalwarp: add a -s_coord_epoch/_t_coord_epoch switches (RFC 81)\n * Fix gdalwarp / exporting to WKT when a projection that isn't supported in WKT1 is involved (#4133)\n * gdalwarp: allow reprojecting a rater with geotransform = (0,1,0,0,0,-1) (#4147)\n * gdalwarp: slightly change default behavior of unified src band masking when a pixel is evaluate to the nodata value on all bands (#4253)\n * gdal_contour: fix bad coordinate order when outputting from raster with geographic CRS to KML driver (#3757)\n * gdal_viewshed: fix incorrect calculation if target height is specified (#4381)\n * gdal_viewshed: Fix incorrect progress reporting (#4390)\n * gdal_viewshed: change default value of -cc (curvature coefficient) to 0.85714, standard value for atmospheric refraction (#4415)\n * gdal_polygonize.py: fix output driver guessing\n * gdal_fillnodata.py: copy pixel data after metadata\n * gdal_fillnodata.py: fix -si option (#4192)\n * gdal_fillnodata.py: remove broken -nomask option. It has likely never worked, and was equivalent to the default mode\n * gdal_sieve.py: preserve NoData value when output to a new file\n * gdal2tiles: fix tile grid origin of openlayers with -p geodetic --tmscompatible --xyx as arguments\n * gdal2tiles: avoid potential race when creating directories (#4691)\n * gdal_pansharpen.py: display usage if not enough filenames provided\n * gdalmdiminfo: add dimension_size and block_size in output\n * gdalmdimtranslate: add -oo switch to specify open option of source dataset\n\n### gdal_utils package\n * Various linting and improvements in gdal_utils package\n * Create ogrmerge(), gdalproximity(), gdal_sieve(), rgb2pct(), pct2rgb(), gdal_fillnodata(), gdal_polygonize() functions\n * fix GetOutputDriversFor for ext == 'nc' (#4498)\n\n### Raster drivers\n\nAIGRID driver:\n * avoid integer overflow (ossfuzz #31766)\n * fix crash when accessing twice to a broken tile (#4316)\n\nBAG driver:\n * ignore pixel at nodata value when updating min/max attributes (#4057)\n\nBMP driver:\n * harden identify checks to avoid misidentification of other datasets (#4713)\n\nCEOS2 driver:\n * Add ASF Compatibility (#4026)\n\nCOG driver:\n * Default to LZW compression (#4574)\n * Add LZMA to compressions list\n * don't crash if GDALCreateGenImgProjTransformer2() fails\n * Fix error messages when creating JPEG compressed COGs from RGBA\n\nDIMAP driver:\n * expose virtual overviews (#4400)\n * fix integer overflows (ossfuzz #39027, #39795)\n * fix potential performance issue in SetMetadataFromXML() (ossfuzz #39183)\n * avoid excessive memory allocation / almost infinite loop on corrupted dataset (ossfuzz #39324)\n\nECW driver:\n * Enable reading ECW files from virtual file systems for ECW SDK 3.3\n\nEEDAI driver:\n * Point at highvolume EE API endpoint by default\n\nEIR driver:\n * avoid excessive memory allocation on small files (ossfuzz #9408)\n\nENVI driver:\n * Open(): use .hdr as an additional extension in priority over a replacement one (#4317)\n * use newer Get/SetSpatialRef API to avoid performance issue (ossfuzz #38295)\n\nENVISAT driver:\n * avoid potential buffer overflow (CID 1074533)\n\nERS driver:\n * avoid long open delay on bogus datasets that reference themselves (ossfuzz #36701)\n * Fix off-by-one error when reading ERS header\n\nEXR driver:\n * fix build against OpenEXR 3.0.1 (#3770)\n\nGeoRaster driver:\n * Fix the Oracle DB connection when user and pwd are empty, while Oracle wallet is used. (#3768)\n * Set the SRID value for the extent when flushing the metadata to the database. (#4106)\n * fix issue when user name is not provided in connection string (#4460)\n * Add owner checking in the query (#4565)\n\nGRIB driver:\n * use sidecar .idx file and lazy initialization (#3799)\n * implement transparent [0,360] to [-180,180] translation, in reading and writing (#4524, #3799)\n * add/fill a few GRIB1 ECMWF table to read a ERA5 product (#3874)\n * turn debug messages about unknown GRIB1 table as warnings\n * fix stack read buffer overflow (ossfuzz #38610)\n * fix wrong check related to memory allocation limit (ossfuzz #38894)\n * fix potential crashes on big GRIB1 files on low-memory condition (ossfuzz #38971)\n * multidim: catch potential exception in case of out-of-memory situation\n\nGTiff driver:\n * add support for coordinate epoch with a new CoordinateEpochGeoKey=5120 GeoKey (RFC 81)\n * Enable JPEG-in-TIFF for 12 bit samples (for internal libtiff), whatever libjpeg is used for 8 bit sample support\n * Add support for JPEG-XL codec when using internal libtiff, through libjxl master (#4573)\n * fix overviews with NaN nodata value\n * when reading NoData value of Float32 dataset, cast it to float to avoid overprecision (#3791)\n * Fix SetDefaultRAT() (#3783)\n * signedbyte: do not write 0 values for tiles/strips entirely at a negative nodata value (#3984)\n * Set color interpretation on overview bands (#3939)\n * SRS reading: ignore vertical information when one of the tag has a value in the private user range (#4197)\n * write georeferencing info to PAM .aux.xml when using PROFILE=BASELINE\n * do not try to export a DerivedGeographic CRS to GeoTIFF, but fallback to PAM\n * fix corruption in TIFF directory chaining when altering nodata value after IFD crystallization (#3746)\n * Update internal libtiff to latest upstream\n * limit error message count, mainly with Fax3 decoder, to avoid performance issues (ossfuzz #38317)\n\nHDF5 driver:\n * multidim: fix crash when extracting a field from a compound HDF5 data type\n * fix issue when netCDF and/or HDF5 drivers built as plugins with multidim datasets\n\nHFA driver:\n * enable to read GCPs from PAM .aux.xml (#4591)\n\nIdrisi driver:\n * Add support of Cylindrical Equal Area (#3750)\n\nJP2KAK driver:\n * fix Unix build with Kakadu 8.2 (#4306)\n * accept files with .jhc extension (HTJ2K codestreams)\n * report Corder metadata item in IMAGE_STRUCTURE domain instead of default domain\n\nJP2OpenJPEG driver:\n * add a TLM=YES creation option to write Tile-part Length Marker (requires openjpeg >= 2.5)\n\nJPEG driver:\n * fix wrong detection of bit ordering (msb instead of lsb) of mask band (#4351)\n\nKMLSuperOverlay driver:\n * Allow reading kml documents with a GroundOverlay element directly inside a Document element (#4124)\n\nMEM driver:\n * Open(): add support for the 'GEOTRANSFORM' options\n * multidim: faster copying when data type conversion is involved\n * multidim: add MEMAbstractMDArray::SetWritable, IsModified and SetModified methods\n\nMRF driver:\n * add JPEG-XL (brunsli) support (#3945)\n * add ZStd compression (#4177)\n\nMSG driver:\n * fix race condition in satellite number lookup (#4153)\n\nNetCDF driver:\n * expose Sentinel5 verbose metadata in json:ISO_METADATA/ESA_METADATA/EOP_METADATA/QA_STATISTICS/GRANULE_DESCRIPTION/ALGORITHM_SETTINGS metadata domains\n * use new PROJ method 'rotated pole netCDF CF convention'\n * add write support for rotated pole method\n * be more restrictive on axis to decide if to advertise a geotransform.\n * fix wrong offsetting by -360 of longitude values when huge nodata value found at beginning or end of line\n * fix reading MODIS_ARRAY.nc file that has non CF-compliant way of expressing axis and CRS (#4075)\n * support more possibilities for content of 'crs' attribute in some opendatacube datasets\n * accept degree_north/degree_east (degree singular) as acceptable unit for latitude/longitude axis (#4439)\n * accept \"degrees_E\"/\"degrees_N\" as valid axis names (#4581)\n * Accept HDF5 files if HDF5 driver is not available and libnetcdf has support for them\n * properly deal with Polar Stereographic in reading and writing (#4144)\n * parse correctly valid_range/valid_min/valid_max attributes when they are of non-integer type (#4443)\n * no longer do filename recoding with netCDF >= 4.8 on Windows\n * multidim: make opening /vsimem/ file work when netCDF MEM API is available (avoids using userfaultfd)\n * multidim: make /vsi access work with netcdf >= 4.7\n * multidim: avoid crash when getting data type of a char variable with 2 dimensions.\n * multim: GetBlockSize(): fix heap buffer write overflow on 2D char variables (ossfuzz #39258)\n * multidim: fix use of coordinates attribute to find the indexing variable of a dimension\n\nNITF driver:\n * add PROFILE=NPJE_VISUALLY_LOSSLESS/NPJE_NUMERICALLY_LOSSLESS with JP2OpenJPEG driver, to comply with STDI-0006 NITF Version 2.1 Commercial Dataset Requirements Document (NCDRD)\n * fix writing of COMRAT field in JPEG/JPEG2000 mode, when there are FILE TREs\n * expose ISUBCAT for each band (if non-empty) (#4028)\n * add capability to add several images in a file\n * extend nitf_spec.xml to contain DES subheader user-data fields definitions for CSATTA DES, CSSHPA DES, CSSHPB DES and XML_DATA_CONTENT\n * Slightly modify xml:DES output, such that field names no longer have the NITF_ prefix\n\nPCIDSK driver:\n * fix retrieval of RPC metadata (3.3 regression) (#4118)\n * avoid big memory allocation and processing time (ossfuzz #37912)\n * avoid long processing time by limiting the number of bands (ossfuzz #38885)\n\nPDF driver:\n * update PDFium dependency to pdfium/4627. Requires use of https://github.com/rouault/pdfium_build_gdal_3_4 PDFium fork\n * avoid potential nullptr dereference on corrupted datasets (ossfuzz #28635)\n * Poppler backend: limit CPU time when reading extremely corrupted file. (ossfuzz #37384)\n\nPDS4 driver:\n * update template to CART_1G00_1950 version\n * add support for reading PositiveWest longitudes, MapRotation and Oblique Cylindrical\n * add write support for Oblique Cylindrical\n * fix opening of some .xml files with large number of <?xml-model> tags\n * accept optional <Reference_List> element in template.\n * fixes for compatibility with sp:Spectral_Characteristics in template.\n * projection writing: honor LONGITUDE_DIRECTION=Positive West by negating longitudes in projection parameters\n\nPNG driver:\n * disable Neon optimizations for internal libpng as we don't include the needed source file (fix build issue)\n\nPostgisRaster driver:\n * support for libpq services (#3820)\n * do not append generated application_name in subdataset names\n\nRMF driver:\n * Fix delta compression with non-initialized elevation min-max (#4399)\n\nSAFE driver:\n * multiple improvements related to SLC/calibration (change subdataset naming)\n\nSRTMHGT driver:\n * support .hgts files from NASADEM SHHP. Also support auxiliary files with .err, .img, .num, .img.num and .swb extensions from other NASADEM products (#4239)\n\nTileDB driver:\n * fix crash when creating array from subdatasets fails\n * fix handling of relative paths on Windows\n\nTGA driver:\n * fix heap buffer overflow (ossfuzz #35520)\n\nVICAR driver:\n * add read/write support for GeoTIFF encoding of CRS and geotransform\n\nVRT driver:\n * Support named arguments to C++ derived band pixel functions (#4049)\n * Add interpolate_linear pixel function\n * use source floating point coordinates when valid (#4098)\n * make SourceProperties element no longer needed on reading for deferred opening of sources\n * avoid potential very deep call stack if SourceFilename contains empty string (ossfuzz #37530)\n * Add a per-thread mechanism to count call depth and use it in VRT driver to avoid infinite recursive calls on corrupted datasets (ossfuzz #37717)\n * GDALDatasetPool: avoid potential crash during destruction (#4318)\n * VRT pixelfunc: make it work with buffers larger than 2 giga pixels\n * fix issue with sources with nodata and OverviewList resampling='average' that triggers a 'recursion error' message\n * GDALAutoCreateWarpedVRTEx(): do not set padfSrcNoDataReal/padfDstNoDataReal if already set in passed-in options (rasterio/rasterio#2233)\n * avoid recursion issue on ComputeStatistics()/.ComputeRasterMinMax()/GetHistogram() with implicit overviews and approximation enabled (#4661)\n\nWCS driver:\n * fix issue with negative coordinates (#4550)\n\nWebP driver:\n * Support 'exact' option to preserve the RGB values under transparent areas.\n\nWMS driver:\n * Add an option to disable the cache (#4097)\n * use correct default bbox according to the SRS (#4094)\n\nWMTS driver:\n * Add an option to disable the cache (#4097)\n * do not take into account a TileMatrixSetLink that points to a non-existing TileMatrixSet\n\nZMap driver:\n * undeprecate it since we got feedback it is still useful (#4086)\n\n## OGR 3.4.0 - Overview of Changes\n\n### Core\n * Add support for reporting hiearchical organization of vector layers, and implement it in FileGDB/OpenFileGDB drivers. (Trac #5752)\n * Add GDALGroup::GetVectorLayerNames() and OpenVectorLayer(), and corresponding C and SWIG API\n * Geometry::MakeValid(): add option to select the GEOS 3.10 'structure' method\n * Support multiline geometry WKT input\n * OGRGeometryFactory::createFromGeoJson(): Support importing GeoJSON fragments in non-null terminated strings (#3870)\n * OGR SQL: fix wrong evaluation of attribute filter when a OR with >= 3 clauses is nested inside in another OR (#3919)\n * OGR SQL: Support ISO-8601 literal dates with IN operator (#3978)\n * OGRFeature::GetFieldAsSerializedJSon(): fix nullptr dereference on empty string list (#3831)\n * Add OGRGetGEOSVersion() and map it to SWIG (#4079)\n * Add GDAL_DCAP_MULTIPLE_VECTOR_LAYERS capability (#4135)\n * Add virtual method GDALDataset::IsLayerPrivate\n\n### OGRSpatialReference\n * Improve OGRProjCT::Clone() and export OGRCoordinateTransformation::Clone() to C API (#3809)\n * Export OCTGetSourceCS(), OCTGetTargetCS() and OCTGetInverse() to C API (#3857)\n * Add OGRSpatialReference::IsDynamic() to check if a CRS is a dynamic one\n * Add OGRSpatialReference::SetCoordinateEpoch()/GetCoordinateEpoch()\n * Coordinate transformation: take into account SRS coordinate epoch if the coordinate tuple has no time value\n * Fix crash in AutoIdentifyEPSG/GetEPSGGeogCS() on some WKTs (#3915)\n * Fix wrong quoting for WKT spatial CS type\n * Add DERIVEDPROJCRS to WKT keywords for OGRSpatialReference::SetFromUserInput\n * Support GetLinearUnits for ellipsoidal and spherical coordinate systems that have a height axis (#4030)\n * AutoIdentifyEPSG(): do not add AUTHORITY node if the axis order of the geographic CRS contradicts the one from EPSG (#4038)\n * OGR_CT: fix transformation between CRS that only differ by axis order (related to #4038)\n * OGR_CT: when a WKT def contradicts its AUTHORITY node, use the WKT def (relates to #4038)\n * OGR_CT: deal with bogus NaN coordinates as output of PROJ (#4224)\n * OGR_CT with OGR_CT_OP_SELECTION=BEST_ACCURACY: fix for non-Greenwich prime meridian\n * OGR_CT: take into account PROJ_NETWORK=ON in OGR_CT_OP_SELECTION=BEST_ACCURACY/FIRST_MATCHING modes\n * OGRSpatialRef::SetFromUserInput(): add options to disallow file and network access, and use it various drivers (ossfuzz #35453)\n * importFromCRSURL() / importFromWMSAUTO() / importFromURN(): avoid excessive memory allocation and processing time on invalid input (ossfuzz #37922 and #38134)\n * OGRSpatialReference::GetAxesCount(): fix on CompoundCRS of BoundCRS\n * fix retrieving projection parameters from WKT1 name on a Projected 3D CRS (OSGeo/PROJ#2846)\n * Fix EPSGTreatsAsLatLong with compoundCRS (#4505)\n * OSRProjTLSCache: avoid use of exceptions (#4531)\n * exportToWkt(): use WKT2 for DerivedProjectedCRS (#3927)\n * Add OSRSetPROJEnableNetwork() / OSRGetPROJEnableNetwork(), and expose them to SWIG\n * Adds OCTTransformBounds to the C and SWIG API to transform a bounding box (#4630)\n\n### Utilities\n * ogrinfo: report hiearchical organization of layers\n * ogrinfo: report SRS coordinate epoch (RFC 81)\n * ogrinfo: Report private layers with a \"[private]\" suffix\n * ogr2ogr: add a -a_coord_epoch/-s_coord_epoch/_t_coord_epoch switches (RFC 81)\n * ogr2ogr: fix quadratic performance if many source field names are identical (ossfuzz #37768)\n\n### Vector drivers\n\nMultiple drivers:\n * geomedia, walk: Check sql tables for required tables before trying to query them when trying to open a .mdb dataset\n\nCSV driver:\n * improve concatenation performance of multi-line records (ossfuzz #37528)\n * OGREditableLayer (affects CSV driver): fix quadratic performance when creating field (ossfuzz #37768)\n * limit to 2000 fields in opening by default. (ossfuzz #39095)\n\nDGN driver:\n * avoid potential buffer overflow (CID 1074498)\n * replace undefined behavior 1 << 31 by 1U << 31. Not sure of the consequences\n\nDXF driver:\n * Improved handling of very long lines of text in DXF file (#3909)\n * Correctly handle hidden (invisible) INSERTs\n\nDWG driver:\n * Make Closed AcDb2dPolyline and AcDb3dPolyline to Closed OGRLineString (#4264)\n\nESRIJSON driver:\n * make 'ESRIJSON:http://' connection string scroll results\n\nFlatGeoBuf driver:\n * add support for coordinate epoch (RFC 81)\n * fix memory leaks when reading invalid geometries (ossfuzz #37752, #37834, #38166)\n * set minimum alignment to 8 bytes\n\nFileGDB driver:\n * report hiearchical organization of layers\n * Fix reading of field domains when data source is wrapped in OGRDataSourceWithTransaction\n * Ensure tables which are present in the catalog but not listed in GDB_Items can be read by the driver (#4463)\n * faster CreateLayer() w.r.t SRS identification\n * Implement Identify method\n\nGeoJSON driver:\n * writer: emit error msg when geometry type is not supported in GeoJSON (#4006)\n * recognize URL of likely OAPIF items response page (#4601)\n\nGML driver:\n * reading: fix reading compound curves with gml:ArcByCenterPoint and in a projected CRS in northing/easting axis order (#4155)\n * writer: use GML 3.2 as the new default version (instead of GML 2)\n * read/write srsName as a XML comment in .xsd\n * store geometry element name as geometry column name when reading without .gfs/.xsd (#4386)\n * avoid read heap-buffer-overflow (ossfuzz #35363)\n * avoid performance issue on too nested structure (ossfuzz #21737)\n * fix warning when reading .gfs file with a polyhedral surface\n * expose field names in a more consistent orders when some feature lacks some fields (qgis/QGIS#45139)\n\nGMLAS driver:\n * avoid uncaught exception when opening corrupted .xsd\n * use our own network accessor to honour GDAL_HTTP_TIMEOUT (ossfuzz #37356)\n * fix potential crash on XMLString::transcode() failure (ossfuzz #37459)\n * fix potential crash in ProcessSWEDataArray() (ossfuzz #37474)\n * improve performance of field name truncation (ossfuzz #37836)\n * fix likely quadratic performance in LaunderFieldNames() (ossfuzz #39797)\n * error out on huge mem allocation / processing time in Xerces (ossfuzz #38073)\n * fix performance issue (ossfuzz #38707)\n\nGPKG driver:\n * add support for coordinate epoch (RFC 81)\n * accept CreateField with a column with the fid column name and type=real, width=20, precision=0 (qgis/qgis#25795)\n * fix wrong gpkg_metadata_reference_column_name_update trigger (qgis/qgis#42768)\n * fix for compatibility with SQLite 3.36.0 and views (#4015)\n * add error message when prepare fails\n * capitalize cartesian as Cartesian for SRS of id -1 'Undefined Cartesian coordinate reference system' (#4468)\n\nGPX driver:\n * avoid potential integer overflow on writing (ossfuzz #30937)\n\nILI driver:\n * Fix non contiguous curves for COORD/ARC sequences (#3755)\n\nKML driver:\n * add read support for non-conformant MultiPolygon/MultiLineString/MultiPoint elements (#4031)\n\nLIBKML driver:\n * add read support for non-conformant MultiPolygon/MultiLineString/MultiPoint elements (#4031)\n\nLVBAG driver:\n * add field definition for \"gerelateerdewoonplaats\" (#4161)\n * add Field verkorteNaam to OpenbareRuimte FT (#4286)\n\nMemory driver:\n * add support for coordinate epoch (RFC 81)\n\nMITAB driver:\n * Fix mapping of mapinfo symbol numbers to corresponding OGR symbol IDs (#3826)\n\nMongoDB3 driver:\n * fix deprecation warnings with mongocxx >= 3.6\n\nMVT driver:\n * use 'number' instead of wrong 'numeric' when generating metadata tilestats (#4160)\n * reader: be tolerant to broken points generated by Mapserver\n\nOCI driver:\n * Don't try to create new layer with TRUNCATE option (#4027)\n\nODBC driver:\n * Fix incorrect ODBC type mapping for a number of SQL types\n * Optimise testing if mdb is a PGeo/Walk/Geomedia database\n * Add support for LIST_ALL_TABLES open option\n * Update driver metadata\n * Move MDB Tools access driver installation to  CPLODBCDriverInstaller, and ensure driver installation is attempted when trying to open an MDB file using the ODBC driver\n * Add identify support\n * Add GetLayerByName override which can retrieve private layers by name\n * Implement IsLayerPrivate support\n\nODS driver:\n * limit maximum number of fields to 2000 by default (ossfuzz #7969)\n\nOGR_GMT driver:\n * fix performance issue. (ossfuzz #38158)\n\nOpenFileGDB driver:\n * report hiearchical organization of layers\n * fix reading of raster fields\n * Add a \"LIST_ALL_TABLES\" open option\n * Support detection of private layers\n * Correctly list non-spatial, non-private tables which are not present in the GDB_Items table (#4463)\n\nPDS4 vector:\n * add a LINE_ENDING=CRLF/LF layer creation option for DELIMITED and CHARACTER tables\n * fix quadratic performance when creating fields (ossfuzz #37768)\n * avoid warning about wrong field subtype when parsing ASCII_Boolean\n * fix issue with layer names with non alphanum characters or leading digit\n\nPG driver:\n * support postgresql:// connection strings (#4570)\n\nPGeo driver:\n * add search path for libmdbodbc on Ubuntu 20.04\n * use SELECT COUNT(*) for GetFeatureCount() with mdbtools only if it appears to be working (#4103)\n * Make identification of system tables case insensitive\n * Add more internal tables to block list\n * Always promote polygon or line layers to multi-type geometries (#4255)\n * Correctly reflect whether layers have m values in the layer types\n * Correctly return failure when getting extent for non-spatial pgeo select layer\n * Correctly set no geometry type for pgeo select queries with no shape column\n * Add support for field domains (#4291)\n * Add support for retrieving layer definition and metadata with special \"GetLayerDefinition table_name\" and \"GetLayerMetadata table_name\" SQL queries\n * Add LIST_ALL_TABLES open option\n * Implement IsLayerPrivate()\n * Add GetLayerByName override which can retrieve private layers by name (#4361)\n * Add identify method (#4357)\n\nPGDump driver:\n * fix performance issue on huge number of columns (ossfuzz #38262)\n * set limit to number of created fields to 1600, consistently with PostgreSQL\n\nPLScenes driver:\n * add PSScene and SkySatVideo item types to conf, and update other item types\n * raster side: make it work with Sentinel2L1C and Landsat8L1G\n\nShapefile driver:\n * fix wrong SRS when reading a WGS 84 SRS with a TOWGS84[0,0,0,0,0,0,0] (#3958)\n * Communicate why the file size cannot be reached when appending features (#4140)\n\nSQLite/Spatialite driver:\n * fix crash when calling GetMetadataItem() with domain==nullptr (qgis/qgis#43224)\n * fix for compatibility with SQLite 3.36.0 and views (#4015)\n * Implement IsLayerPrivate()\n * support reading tables WITHOUT ROWID (#3884)\n * Add missing SQL datatypes\n\nTiger driver:\n * tag writing side as deprecated and for removal in 3.5 (#4215)\n\nVRT driver:\n * add support for coordinate epoch (RFC 81)\n * Fix spatial filter for geometry column names with space\n * fix performance issue (ossfuzz #38629)\n\nWasP driver:\n * fix likely wrong condition in line merging (spotted by cppcheck)\n\nWFS driver:\n\nXLS driver:\n * Set OLCStringsAsUTF8 capability to TRUE\n\n## SWIG Language Bindings\n\nAll bindings:\n * add VSI_STAT_SET_ERROR_FLAG constant\n * Map CPLSetThreadLocalConfigOption() and CPLGetThreadLocalConfigOption()\n\nPython bindings:\n * add MDArray.GetNoDataValueAsString() / SetNoDataValueString()\n * change gdal.EscapeString() to return a bytearray() when input is bytes(), to make it compatible with backslash escaping of non-ASCII content\n * fix GDALPythonObjectFromCStr() to return a bytes() object rather than a corrupted unicode string when invalid UTF-8 sequences are found\n * make GDALAttribute.Write() accept a dictionary for JSON attributes, and make GDALAttribute.Read() return a dictionary for a JSON attribute\n * fix resampleAlg=gdal.GRA_Sum/Med/Min/Max/Q1/Q3 in gdal.Warp()\n * Fix inversion between GRA_ and GRIORA_ enums in gdal.Warp()/Translate()/BuildVRT()\n * fix bilinear, cubic, cubicspline resampling for gdal.BuildVRT()\n * make GetMetadata(None) work\n * fix MDArray.ReadAsArray() with CInt16/CInt32 data type\n * fix memleak in gdal|ogr|osr.DontUseExceptions()\n * fix crash when reading null strings with MDArray.Read()\n * catch potential exception thrown by SWIG_AsCharPtrAndSize()\n * Build windows python wrappers with -threads argument\n * Python >= 3.8 on Windows: automatically add path with [lib]gdal*.dll with os.add_dll_directory()\n * Python >= 3.8 import: fix exception when PATH has nonexistent paths on Windows (#3898)\n * fix behavior of SetMetadata() when a value is of type bytes (#4292)\n * no longer use distutils (deprecated since python 3.10) when setuptools is available (#4334)\n * remove call to __del__() in Geometry.Destroy(), which no longer exists in SWIG 4\n\n# GDAL/OGR 3.3.0 Release Notes\n\n## In a nutshell...\n\n* RFC 77 (https://gdal.org/development/rfc/rfc77_drop_python2_support.html): Drop Python 2 support in favor of Python 3.6 (#3142)\n* RFC 78 (https://gdal.org/development/rfc/rfc78_gdal_utils_package.html): Add a gdal-utils Python package\n* New driver:\n  - STACTA: raster driver to read Spatio-Temporal Asset Catalog Tiled Assets\n* Add /vsiadls/ virtual file system for Azure Data Lake Storage Gen2\n* Improved drivers: DIMAP, NITF\n* Number of improvements in Python bindings\n* Add automatic loading of configuration options from a file\n* Add support for enumerated, constraint and glob field domains in MEM, FileGDB/OpenFileGDB and GeoPackage drivers\n* Deprecation:\n  - Disable by default raster drivers DODS, JPEG2000(Jasper), JPEGLS, MG4LIDAR, FUJIBAS, IDA, INGR, ZMAP and vector driver ARCGEN, ArcObjects, CLOUDANT, COUCHDB, DB2, DODS, FME, GEOMEDIA, GTM, INGRES, MONGODB, REC, WALK at runtime, unless the GDAL_ENABLE_DEPRECATED_DRIVER_{drivername} configuration option is set to YES. Those drivers are planned for removal in GDAL 3.5\n  - Perl bindings are deprecated. Removal planned for GDAL 3.5. Use Geo::GDAL::FFI instead\n* Removal of BNA, AeronavFAA, HTF, OpenAir, SEGUKOOA, SEGY, SUA, XPlane, BPG, E00GRID, EPSILON, IGNFHeightASCIIGrid, NTV1 drivers. Moved to (unsupported) https://github.com/OSGeo/gdal-extra-drivers repository.\n* Continued code linting (cppcheck, CoverityScan, etc.)\n* Bump of shared lib major version\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.txt\n\n## GDAL/OGR 3.3.0 - General Changes\n\nGeneral:\n * fix build with recent gcc/clang\n\nBuild(Unix):\n * Support CharLS 2.1 on Debian as well. (#3083)\n * disable LERC on big-endian hosts, as it is not big-endian ready\n * gdal-config (non installed): add -I/gnm in CFLAGS\n * fix compilation failure with gcc < 5 in Elasticsearch driver\n * configure: Also save LDFLAGS when checking compatibility.\n * configure: Ensure --with-geos/sfcgal fail if unavailable.\n * configure: check presence of linux/fs.h for Linux builds\n * configure: Fix gdal compilation when using proj-8.0.0 and libtiff with static jpeg support\n * GDALmake.opt.in: in non-libtool LD_SHARED builds, do not link applications against libgdal dependencies, but only against libgdal itself\n\nBuild(Windows):\n * add missing makefile.vc for heif\n\n## GDAL 3.3.0 - Overview of Changes\n\nPort:\n * GOA2GetRefreshToken(): avoid nullptr dereference in some cases\n * /vsicurl/: for debug messages, use the debug key of derived filesystem, such as 'S3' instead of 'VSICURL'\n * /vsicurl/: fix issue when trying to read past end of file.\n * /vsicurl/: use less restrictive check for S3-like signed URLs to be usable by OpenIO (#3703)\n * /vsicurl/: fix handling of X-Amz-Expires type of signed URLs (#3703)\n * VSICurlStreamingClearCache(): fix cache clearing for /vsiaz_streaming/\n * /vsimem/, /vsisubfile/: fix memleak if destroying the C++ handle with delete instead of using VSIFCloseL() (ossfuzz #28422 #28446)\n * /vsiaz/: fetch credentials from Azure Active Directory when run from a Azure VM when AZURE_STORAGE_ACCOUNT is set.\n * /vsiaz/: add SAS query string in HTTP Get Range requests.\n * /vsiaz/: implement GetFileMetadata() / SetFileMetadata()\n * /vsiaz/: fix Stat('/vsiaz/container') when shared access signature is enabled\n * /vsis3/, /vsiaz/, /vsigs/: set Content-Type from filename extension for a few select file types\n * /vsis3/ sync: improve upload performance by setting the default number of threads and increase the chunk size\n * VSICachedFile::Read(): avoid division by zero if nSize ## 0 (#3331)\n * Make creation of global hCOAMutex thread-safer on Windows (#3399)\n * Add VSIFOpenEx2L() to be able to specify headers such as Content-Type or Content-Encoding at file creation time\n * CPLHTTP: Allow to set GSSAPI credential delegation type with GSSAPI_DELEGATION option / GDAL_GSSAPI_DELEGATION config. option\n * CPLHTTPGetNewRetryDelay(): match 'Operation timed out' curl error\n * CPLDebug: in CPL_TIMESTAMP mode, display also elapsed time since first trace\n * Use _stricmp / _strnicmp for Windows EQUAL / EQUALN() macros\n\nCore:\n * Add automatic loading of configuration options from a file (located in {sysconfdir}/gdal/gdalrc or $(USERPROFILE)/.gdal/gdalrc)\n * RasterIO: massive speed-up of nearest-neighbour downsampling when the downsampling factor is a integer value\n * RasterIO: speed-up average downsampling when the downsampling factor is 2 and with Byte/UInt16/Float32 data type\n * GDALDataset::BlockBasedRasterIO(): make it take into account floating-point window coordinates, as GDALRasterBand::IRasterIO() generic case does  (#3101)\n * GDALOpenEx(): supports OVERVIEW_LEVEL=NONE to indicate overviews shouldn't be exposed\n * GDALCopyWholeRasterGetSwathSize(): take into account COMPRESSION IMAGE_STRUCTURE metadata item at dataset level (helps for DIMAP)\n * cpl_userfaultfd.cpp: enable to disable it at runtime with CPL_ENABLE_USERFAULTFD=NO\n * Python embedding: fix symbol conflicts with python library (#3215)\n * Python embedding: fix loading in QGIS/Windows (or any process with more than 100 modules)\n * Python embedding: make it work on Ubuntu 20.04 when python-is-python3 package that symlinks python to python3 is installed\n * GDALUnrolledCopy_GByte: improve base SSE2 implementation so that specialized SSSE3 is no longer needer\n * RPC: add parameters ERR_BIAS and ERR_RAND (#3484)\n\nMultidim API:\n * CreateCopy() multidim: allow to provide array-level creation options by prefixing them with \"ARRAY:\"\n * [Set/Get][Offset/Scale](): extend to get/set storage data type. Add 'Ex' suffixed C API functions for that\n * GDALMDArrayUnscaled: implement Write() to be able to get from unscaled values to raw values\n * GDALMDArrayUnscaled::IWrite(): speed optimization when writing to netCDF 4\n * GDALGroup::CopyFrom(): add ARRAY:AUTOSCALE=YES and ARRAY:AUTOSCALE_DATA_TYPE=Byte/UInt16/Int16/UInt32/Int32 creation options\n * CreateCopy(): allow IF(NAME={name}) to be a full qualified name\n * GDALExtendedDataType::Create(): do not allow creating compound data type with no component\n\nAlgorithms:\n * Add RMS (Quadratic Mean) subsampling to RasterIO, overviews and warp kernel (#3210)\n * Warping: improve performance related to PROJ usage for warping of small rasters\n * Warper ComputeSourceWindow(): avoid potential integer overflow with a ill-behaved transformer/inverse projection\n * Warper: fix assertion/crash in debug mode in GWKCheckAndComputeSrcOffsets() in some circumstances\n * Pansharpening: fix wrong band assignment when input multispectral bands not in order 1,2,... and NoData set as PansharpeningOptions and not present in input bands\n * internal_libqhull/poly.c: avoid int overflow on 32bit\n * Fix failure in overview generation for certain raster sizes and overview factor, on raster with color table in particular (#3336)\n * GDALSuggestedWarpOutput2(): avoid potential crash if an approximate transformer is provided\n\nUtilities:\n * gdalinfo: add -approx_stats in synopsis (#3296)\n * gdal_translate -tr: make non-nearest resampling honour the specified resolution to avoid potential sub-pixel misalignment when the spatial extent, resolution and dimensions in pixels don't perfectly match\n * gdal_translate: preserve source block size when not subsetting, and preserve as well COMPRESSION IMAGE_STRUCTURE metadata item\n * gdal_translate / gdalwarp: do not copy CACHE_PATH metadata item from WMS driver\n * gdalwarp: make -of COG work with multiple input sources when BigTIFF temporary output is needed (#3212)\n * gdalwarp: preserve scale/offset settings of source bands to output (#3232)\n * gdalwarp: address (one situation of) geometry invalidity when reprojecting the cutline to the source image\n * gdal_create: add a -if option to specify a prototype input file\n * gdal_rasterize: make -i work again (#3124)\n * gdaldem TRI: add a -alg Riley option to use the Riley 1999 formula, for terrestrial use cases (#3320), and make it the new default\n * gdal2tiles: Allow automatic max zoom when min zoom is specified\n * gdal2tiles: change from cdn.leafletjs.com to unpkg.com for leaflet .css and .js (#3084)\n * gdal2tiles: take into account --xyz in leafleft output (#3359)\n * gdal_calc: multiple improvements (nodata, multiple inputs in the same alpha, checks, extent with union/intersection logic, color table, ...)\n * gdal_edit: Correctly handle the error of parameter '-scale' with no number given\n * gdal_ls.py: display file mode when available\n * gdal2xyz.py: various improvements (nodata, band selection, etc.)\n * pct2rgb.py and rgb2pct.py: added support for an input pct_filename\n * gdalattachpct.py: new utility from attachpct.py sample\n * validate_gpkg.py: various improvements\n * add gdallocationinfo.py sample script\n\nResource files:\n * tms_MapML_CBMTILE.json: fix it to use correct resolution / scaleDenominator. Unfortunately this makes it non-usable by gdal2tiles, but still by the COG driver\n\nMulti driver changes:\n * gdal2tiles/COG/MBTiles/GeoPackage: adjustments for EPSG:3857 output (due to PROJ 8 changes)\n\nBAG driver:\n * fix inversion of width and height in XML metadata (#3605)\n\nBLX driver:\n * fix potential free of uninitialized variable in case memory allocation would fail\n\nBYN driver:\n * relax checks in header bytes to allow products with some unset/invalid fields we don't use\n\nCOG driver:\n * allow customising overview compression type (#3453)\n\nDAAS driver:\n * fix pixel retrieval of dataset with UInt16 data type and one mask band (#3061), and also use pixelType from bands[] instead of deprecated top-level one\n\nDIMAP driver:\n * add support for VHR 2020 Multispectral Full Spectrum products\n * add support for multiple components / subdatasets\n * set source block size to DIMAP VRT band (helps for performance with JP2KAK)\n\nECW driver:\n * fix build with original ECW SDK 5.4 (#2776)\n\nENVI, Ehdr, and other \"raw\" drivers:\n * lower memory requirements for BIP interleave, and improve efficiency (#3213)\n\nFIT driver:\n * reject negative value PAGESIZE creation option (ossfuzz #26596)\n\nFITS driver:\n * apply vertical mirroring on reading/writing\n * add support for creation and update of binary tables\n * display more informative error message when opening raster dataset in vector mode, or vice-verca\n * avoid stack smash overflow with 32 bit Linux builds in GetRawBinaryLayout()\n * set physical filename when opening subdataset\n\nGRIB driver:\n * fix reading subfields reusing the bitmap of a previous one (#3099)\n * degrib: avoid erroneous unit conversion when section 4 has vertical values coordinates (#3158)\n * degrib: add surface type 150 = Generalized Vertical Height Coordinate (#3158)\n * Update MRMS Local Table to v12 (#3328)\n * fix writing of ComplexPacking with nodata values and a single valid value (#3352)\n\nGTiff driver:\n * Internal libtiff resync with libtiff 4.3.0. Includes:\n   - tif_lerc.c: fix encoding of datasets with NaN values (#3055)\n   - TIFFStartStrip(): avoid potential crash in WebP codec when using scanline access on corrupted files (ossfuzz #26650)\n * Export JPEG compression tags to metadata\n * Report PREDICTOR in IMAGE_STRUCTURE dataset metadata domain (when it is set)\n * avoid setting compoundCRS name to 'unknown' when the GTCitationGeoKey is absent\n * better parse VerticalCitationGeoKey that is in the form 'VCS Name = foo|...'\n * rely on libtiff for LERC codec instead of internal libtiff-only codec previously\n * avoid GetSpatialRef() to return non-NULL on dataset with GCPs (#3642)\n\nHDF5 driver:\n * fix reading files whose HDF5 signature is not at offset 0 (#3188)\n\nHFA driver:\n * fix reading SRS with NAD83 favors, like 'NAD83(CORS96)'\n\nJP2KAK driver:\n * JP2KAKCreateCopy(): add validation of BLOCKXSIZE/BLOCKYSIZE to avoid Coverity warning about division by zero (CID 1086659, 1086660)\n\nJPEG driver:\n * add support for reading FLIR (infrared) metadata and thermal image\n * read XMP tag from EXIF and expose its content in xml:XMP metadata domain\n * CreateCopy(): add a warning when writing a non-CMYK 4-band dataset, and improve doc\n * switch internal libjpeg internal memory allocator to default (malloc/free) (#3601)\n\nLercLib (third_party):\n * fix portability issue on non-Intel platforms\n\nMRF driver:\n * Restore raw Lerc1 detection (#3109)\n * Support LERC1 compression improvements with non-finite values (#3335)\n\nnetCDF driver:\n * fix reading netCDF4/HDF5 files whose HDF5 signature is not at offset 0 (#3188)\n * accept relative variations in X/longitude and Y/latitude spacing of up to 0.2% for float variables or 0.05% for double. Add a GDAL_NETCDF_IGNORE_EQUALLY_SPACED_XY_CHECK config option to ignore those checks if needed (#3244, #3663)\n * open /vsimem/ files without requiring Linux userfaultfd mechanism\n * Set scope for raster/vector-only options in driver metadata\n * multidim: add a GROUP_BY=SAME_DIMENSION option to GetGroupNames()\n * change the 'No UNIDATA NC_GLOBAL:Conventions attribute' from a warning to a debug message\n\nNITF driver:\n * Add support for SNIP TREs: CSRLSB, CSWRPB, RSMAPB, RSMDCB, RSMECB, SECURA and SNSPSB\n * Add xml:DES metadata domain and DES creation option (#3153)\n * Add support for ISO8859-1 fields in NITF TREs\n\nNWT_GRD driver:\n * fix portability issue on non-Intel platforms\n\nOGCAPI driver:\n * add missing Windows build support\n * fixes to handle links without type, in the coverage code path (Rasdaman use case)\n * fix when coverage uses a compoundCRS with a time component (#3665)\n\nPCIDSK driver:\n * resynchronization of PCIDSK SDK with the internal repository maintained by PCI\n * make GetMetadataItem() returns the same const char* for a given key (while SetMetadata/SetMetadataItem is not called)\n\nPDS4 driver:\n * update value of <parsing_standard_id> for TIFF/BigTIFF to what is expected by PDS4 IM (#3362)\n\nRMF driver:\n * Better support for sparse files. Fill null tiles with NoData value.\n * Fix portability issues on non-Intel platforms\n\nTileDB driver:\n * Add support for array versioning (#3293)\n * do not try to identify /vsis3/ files ending with .tif\n * add /vsigs/ support\n\nVRT driver:\n * add a <UseMaskBand>true</UseMaskBand> element of <ComplexSource> to allow compositing of overlapping sources (#1148)\n * AddBand() support BLOCKXSIZE and BLOCKYSIZE options; serialize/deserialize block size as attributes of VRTRasterBand element\n * VRTPansharpenedDataset: fix crash when the spectral bands have no nodata value, but we have one declared in PansharpeningOptions, and when the VRTPansharpenedDataset exposes overviews (#3189)\n * close sources at dataset closing (#3253)\n\nWCS driver:\n * fix memory leak in error code path (ossfuzz #28345)\n\nWMS driver:\n * tWMS: improves usability with NASA GIBS services (#3463)\n * properly deal with northing,easting ordered CRS in WMS 1.3.0 when using connection string being a GetMap URL request (#3191)\n * add option to specify HTTP Accept header\n * Use noDataValue on empty blocks (#3375)\n * Let pass expected NoDataValue to MRF for reading data (#3388)\n * Update default values for VirtualEarth minidriver\n\nWMTS driver:\n * Map CURLE_FILE_COULDNT_READ_FILE to 404 (#2941)\n\nXYZ driver:\n * support reading datasets organized by columns, such as the ones of https://www.opengeodata.nrw.de/produkte/geobasis/hm/dgm1_xyz/dgm1_xyz\n\n## OGR 3.3.0 - Overview of Changes\n\nCore:\n * Add UUID string field subtype\n * OGRFeature::GetFieldAsString() and GeoJSON output: do not output Float32 with excessive precision\n * IsPolarToWGS84(): make detection of polar projections more specific\n * OGR SQL: fix potential crash or incorrect result on multi column ORDER BY (#3249)\n * Expose prepared geometry API to C and in SWIG bindings\n * OGRGeometry::ExportToJson(): takes into account CRS and axis order to swap\n * OGRShapeCreateCompoundCurve(): fix memory leak in error code path. (ossfuzz #28923)\n * Add OGR_G_Normalize() and bind it to SWIG (#3506)\n * OGRPoint: make it empty when x or y is NaN (refs #3542)\n * Avoid SWIG generating exception on OGRGeometry::IsValid (#3578)\n * OGRGeometry::exportToWkt(): rebustify implementation against out-of-memory, and make it slightly more efficient for some huge geometries\n * OGRSimpleCurve: fix copy constructor / assignment operator of empty Z/M geometries in some cases\n * OGRGeometry: make sure that the return type of clone() for all classes is their own type\n * OGRGeometry: make getGeometryRef() in subclasses return a better type\n * OGRGeometry: Handle WKB > 2 GB. Add OGR_G_WkbSizeEx() and OGR_G_CreateFromWkbEx()\n * Add OGRSimpleCurve::removePoint()\n\nOGRSpatialReference:\n * Fix exportToWkt() after morphToESRI() on Geographic/Projected 3D CRS.\n * GetEPSGGeogCS(): make it use database lookups if needed (and avoid misidentification of 'NAD83(CORS96)' for example\n * exportToWKT(): add a ALLOW_ELLIPSOIDAL_HEIGHT_AS_VERTICAL_CRS=YES option to allow export of Geographic/Projected 3D CRS in WKT1_GDAL as CompoundCRS with a VerticalCRS being an ellipsoidal height (for LAS 1.4)\n * Add OGRCoordinateTransformation::TransformWithErrorCodes() and OCTTransform4DWithErrorCodes() to get PROJ (>= 8) error codes\n * Add OCTCoordinateTransformationOptionsSetDesiredAccuracy() and OCTCoordinateTransformationOptionsSetBallparkAllowed(), and map them to SWIG\n * GetEPSGGeogCS(): fix when projected CRS can't be exported to WKT2\n * SetFromUserInput() allow https:// when loading CRS from opengis.net (#3548)\n * Add Get/Set for PROJ auxiliary database filenames (#3590)\n * Delegate to PROJ (>= 8.1) import from OGC URN and URL (OSGeo/PROJ#2656)\n\nUtilities:\n * ogrinfo: report field domain type and add '-fielddomain name' switch\n * ogr2ogr: add -emptyStrAsNull option\n * ogr2ogr: add propagation of field domains\n * ogr2ogr: add a -resolveDomains switch\n\nAmigoCloud driver:\n * Fix date/datetime field type handling.\n * Fix json encoder to handle nested strings. (#3483)\n * Fix SQL delete (#3512)\n\nCAD driver:\n * fixes for big endian hosts\n\nDGN driver:\n * avoid assert() in case of very low memory condition (ossfuzz #27006)\n\nDGN and DGNv8 driver:\n * Support for reading User Data Linkage data (#3089)\n\nDXF driver:\n * Skip hatch polyline segments with one vertex\n\nElasticsearch driver:\n * support WKT geo_shape encoding, and make GetExtent() use server-side query for geo_shape if ES >= 7.8 and XPack is installed\n * fix GetFeatureCount() when SetAttributeFilter() is a ElasticSearch JSON filter\n * add open options for timeouts and maximum number of features\n\nFlatGeobuf driver:\n * add editable capabilities\n * fix crash when writing a geometry collection with an empty polygon (ossfuzz #29291)\n * fix crash in GetFileList() on a dataset opened in update mode\n * fix crash when writing features larger than 32 KB\n\nGeoPackage driver:\n * Add support for GeoPackage 1.3 (creation still defaults to 1.2)\n * Fix handling of invalid SRS ID (#3286)\n * always write milliseconds in a DATETIME field for strict compliance with the spec (#3423)\n * no longer create triggers on gpkg_metadata and gpkg_metadata_reference\n * Take into account OGR_CURRENT_DATE config option in gpkg_metadata_reference table (fixes #3537)\n * Remove creation support for data_type='aspatial' legacy tables\n * fix update of gpkg_metadata_reference when renaming or dropping a column, and this table references it\n\nGeoJSON driver:\n * writer: avoid invalid .0 suffix to be added to numeric values like 1eXX (#3172)\n * writer: avoid CPLDebug() messages when writing BBOX in RFC7946 mode\n * reader: accept files starting with {\"bbox\":...,\"features\":[... (#1537)\n * reader: fix opening of file containing a Feature object and starting with a large properties (fixes #3280)\n\nGML driver:\n * fix layer extent with wrong axis order in some cases (#3091)\n * recognize AIXM ElevatedSurface to be able to proper axis swapping (#3091)\n * GML geometry parsing: handle km unit for radius of arcs (#3118)\n * fix nullptr dereference on invalid GML (ossfuzz #28040)\n\nLVBAG driver:\n * Update to the new XSD schema (#3324)\n * Minor fixes (#3467, #3462)\n * Convert MultiPolygon to Polygon (#3581)\n\nMapInfo driver:\n * Support for font and custom symbols (#3081)\n * Explicitly set pen cap and join params for pen tools\n\nNAS driver:\n * don't skip prescan, if NAS_GFS_TEMPLATE is given, but still don't     write .gfs\n\nNGW driver:\n * Add extensions support.\n * Add alternative field name support.\n\nOAPIF driver:\n * report url of STAC asset items\n\nODBC driver:\n * Remove text trimming behavior\n\nPGeo driver:\n * don't silently ignore rows with NULLs for Memo fields\n\nPostGIS driver:\n * on reading, instantiate SRS from EPSG when possible instead of srtext to avoid axis order issues, and strip TOWGS84 on known datum (#3174)\n * when detecting srid from table contents, ignore null geometries.\n\nShapefile driver:\n * writer: do not write coordinates with non-finite values (#3542)\n\nSQLite driver:\n * recognize col decltype 'INTEGER_OR_TEXT' as a string\n * better detection of view column types\n\nSXF driver:\n * fix reading on big-endian architectures\n\nWFS driver:\n * fix CreateFeature() for WFS 2 (#3323). And for WFS 2, make CreateFeature() and SetFeature() use GML 3\n\nXLSX driver:\n * fix read cells with inline formatting (#3729)\n\n## SWIG Language Bindings\n\nAll bindings:\n * avoid nullptr deref if providing some NULL arguments to gdal.Debug() and gdal.GOA2xxxxx() methods\n * fix return type of Dataset.SetSpatialRef()\n * fix expansion of ODsCRandomLayerWrite constant\n * add missing GRA_Sum constant (#3724)\n\nCSharp bindings:\n * Replace ToInt32 calls with ToInt64 to prevent an ArithmeticException when executing against large images in a 64-bit context.\n * Sign csharp assemblies as part of the netcore build process, verify signature during tests (#1368) (#3332)\n * fix 'make' target on Linux/Mac\n\nJava bindings:\n * Add CoordinateTransformation.TransformPointWithErrorCode()\n\nPython bindings:\n * Add Dataset.WriteArray()\n * Make Dataset.ReadRaster() and ReadAsArray() accept floating-point coordinates (#3101)\n * Make methods such as WriteRaster() accept a bytearray object\n * Return bytearray object as return of ReadRaster(), ReadBlock(), VSIFReadL(), MDArray.Read(), ...\n * Add a band_list optional argument to Dataset.ReadAsArray()\n * Make methods such as WriteRaster() accept any memoryview compatible of PyBUF_SIMPLE\n * Make ogr.GetFieldAsBinary(), geom.ExportTo[Iso]Wkb() return a bytearray instead of a bytes object\n * Make ReadRaster() and ReadBlock() accept an existing buf_obj buffer\n * Make ReadAsArray(buf_obj = ar) fail if ar.flags.writable is False\n * Make WriteRaster() accept a numpy array (when used without the buf_ overriders)\n * Allow list or array types as input of MDArray.Write() for 1D arrays\n * Prepare all samples scripts for reuse\n * Add osgeo_utils.auxiliary submodules for auxiliary functions.\n * [epsg_tr|esri2wkt|gcps2vec|gcps2wld|gdal_auth|gdalchksum|gdalident|gdalimport|mkgraticule].py - move undocumented untested utils to the `samples` subfolder where they belong\n * Implement correct behavior for copy.copy() and copy.deepcopy() on a Geometry object (#3278)\n * Add CoordinateTransformation.TransformPointWithErrorCode()\n * Remove deprecated NumPy aliases for standard types.\n * Better validation of Band.ReadAsArray() input shape (#3466)\n * Dictionary typemap: accept key/value not being strings\n * Add batch_creator.py, a Windows batch file creator\n * Fix 'make generate' target on Unix builds (#3696)\n\n# GDAL/OGR 3.2.0 Release Notes\n\n## In a nutshell...\n\n * New GDAL drivers:\n   - ESRIC: ESRI bundle cache read-only driver (#2663)\n   - HEIF: read-only driver for HEIF/HEIC file. Requires libheif\n   - OGCAPI: tiles/maps/coverage raster/vector experimental driver\n   - TGA: read/only driver to read TGA image file format\n * New OGR drivers:\n   - LVBAG: read-only support for Dutch LVBAG/Kadaster 2.0 vector format\n * New utilities:\n   - gdal_create: to create/initialize a new raster file\n * Other improvements:\n   - Multi-threaded overview computation (if GDAL_NUM_THREADS set)\n   - COG driver: TILING_SCHEME creation option\n   - OpenFileGDB driver: add support for using spatial indexes\n   - BAG driver: multiple improvements\n   - FITS driver: multiple improvements (MEF and binary table support)\n   - NITF driver: support for SNIP TREs\n   - OGRFieldDefn: support UNIQUE constraint\n   - OGRFieldDefn: support a AlternativeName (alias) property (#2729)\n   - Python bindings: move implementation of scripts (except gdal2tiles) in osgeo.utils package to be reusable\n   - Faster GTIFF Deflate compression/decompression through libdeflate (if using internal libtiff or libtiff > 4.1.0)\n * Removed functionality:\n   - Python bindings: old-style \"import gdal\" is no longer available. Use \"from osgeo import gdal\" instead\n   - API_PROXY mechanism: likely never used for real usage.\n   - Removal of GDAL and OGR ArcSDE drivers\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.txt\n\n## New installed files\n\n * data/tms_NZTM2000.json\n * data/tms_LINZAntarticaMapTileGrid.json\n * data/tms_MapML_APSTILE.json\n * data/tms_MapML_CBMTILE.json\n * data/template_tiles.mapml\n\n## GDAL/OGR 3.2.0 - General Changes\n\nGeneral:\n * fix building against Jasper 2.0.19 and 2.0.21\n * Add optional libdeflate dependency for faster Deflate compression/decompression\n\nBuild(Unix):\n * GNUmakefile: split long line to avoid 32K character limitation on MSYS2\n * configure: Configure proj dependencies before proj (#2512)\n * configure. add $with_proj_extra_lib_for_test n LIBS when detecting PROJ when no path is specified (#2672)\n * configure: fix CharLS 2.1 detection on case insensitive filesystems (#2710)\n * configure: fix --with-hdf4 and --disable-all-optional-drivers (#2740)\n * GNUmakefile: make 'all' target an alias of the default one to avoid potential double build of OGR objects (fixes #2777)\n * configure: add ODA lib requirements to compile GDAL with ODA 2021 (#2812)\n * configure: fix detection of minor version number of Poppler with the new YY.MM.X numbering scheme (#2823)\n * configure: fix detection of Spatialite 5 build against PROJ >= 6 (#2826)\n * configure: fix detection of libtiff and libjpeg on mingw (fixes #2881)\n * configure: fix linking order for Informix libraries\n * configure: support CharLS 2.1 on Debian as well. (#3083)\n * configure: disable LERC on big-endian hosts, as it is not big-endian ready\n * fix compilation issue of gdallinearsystem.cpp on Slackware 14.2 (#2883)\n * Update scripts/gdal-bash-completion.sh\n\nBuild(Windows):\n * nmake.opt: mention shell32.lib in PROJ_LIBRARY\n * nmake.opt: Add a PYEXEC var to specify the python executable when building GDAL/bindings on Windows.\n * nmake.opt: add hint about adding ole32.lib to PROJ_LIBRARY for PROJ 7.1 when static linking (#2743)\n * only expand CPL_DLL to__declspec(dllexport) when building GDAL (shared configuration) (#2664)\n * add missing Windows build support for EXR driver\n * generate_vcxproj.bat: add vs2019 compatibility (#2676)\n * fix build in AVC driver in VSIL_STRICT_ENFORCE mode\n\n## GDAL 3.2.0 - Overview of Changes\n\nPort:\n * cpl_json.h: change the Type and PrettyFormat 'enum' to 'enum class', so that Double doesn't conflict with a C enum from OGDI include files\n * cpl_json.h: add an iterator on array items, and fix const correctness of LoadUrl() method\n * Add logging capabilities for /vsicurl, /vsis3 and the like. Add VSINetworkStatsGetAsSerializedJSON() and VSINetworkStatsReset(), CPL_VSIL_NETWORK_STATS_ENABLED and CPL_VSIL_SHOW_NETWORK_STATS config options\n * /vsis3/ and other cloud file system: allow random-write access (for GTiff creation in particular) through temporary local file when CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE config option is set to YES\n * /vsis3/: recognize AWS_PROFILE in addition to obsolete AWS_DEFAULT_PROFILE (#2470)\n * /vsis3/: use IMDSv2 protocol to retrieve IAM role and credentials\n * /vsis3/: add CPL_VSIS3_USE_BASE_RMDIR_RECURSIVE=YES for some S3-like APIs do not support DeleteObjects\n * /vsis3/: additional retry on failures on write operations\n * VSIS3FSHandler::SetFileMetadata(): fix memleak\n * Improved AWS EC2 detection on Windows\n * /vsicurl/: defer reading of CPL_VSIL_CURL_CHUNK_SIZE and CPL_VSIL_CURL_CACHE_SIZE config options until a /vsicurl/ access (or other network filesystem) is done\n * /vsiaz/: do not consider directory absence as an error situation for Rmdir()\n * /vsiaz/: fix OpenDir()/NextDirEntry() that returned S_IFDIR for regular files\n * /vsiaz/: update to latest version of API (2019-12-12)\n * /vsiaz/: add a AZURE_NO_SIGN_REQUEST=YES config option for unsigned public buckets and AZURE_SAS to provided Shared Access Signature. Both to be used with AZURE_STORAGE_ACCOUNT (#2766)\n * /vsiaz/: ReadDir(): fix caching of file properties with space in the name\n * VSISync(): implement chunking of large files for /vsiaz/ upload when CHUNK_SIZE and NUM_THREADS are set\n * VSISync(): split large files on download/upload for /vsis3/ and /vsiaz/ (#2786)\n * VSISync(): add a SYNC_STRATEGY=OVERWRITE to always overwrite target file\n * RmdirRecursive(): use OpenDir() in recursive mode to have more efficient directory deletion on /vsiaz/ for example\n * /vsimem/: fix normalization of slashes in filenames to avoid potential infinite loop in VSIDirGeneric::NextDirEntry()\n * VSI plugin: add caching option (#2901)\n * VSI plugin: add callback to explicitly list sibling files (#2980)\n * CPLWorkerThreadPool: add capability to create several job queues\n * CPLStrtodDelim(): recognize '1.#SNAN' as a NaN value\n * CPLAtoGIntBigEx(): use strtoll() when available since POSIX doesn't guarantee atoll() will return ERANGE (and libmusl for example does not return it)\n * CPLIsFilenameRelative(): treat \"scheme://..\" filenames as absolute\n * Add GDAL_CURL_CA_BUNDLE environment variable (#3025)\n * CPLHTTPFetch: fix reading FORM_FILE_PATH on Windows (#2971)\n * Add CPLHTTP[Push|Pop]FetchCallback() and CPLHTTPSetFetchCallback() callback mechanisms to replace curl implementation (to be used by QGIS)\n * VSI_CACHE: do not trust unreliable file size from underlying layer as in fixes #3006\n * CPLMultiPerformWait(): use curl_multi_poll() for curl >= 7.66\n\nCore:\n * Overview building: add multi-threading of resampling computations when GDAL_NUM_THREADS config option is set\n * add a TileMatrixSet class to parse OGC Two Dimensional Tile Matrix Set 17-083r2 JSON encoded definitions, and add NZTM2000 and LINZAntarticaMapTileGrid definitions\n * Add GDALAutoCreateWarpedVRTEx function to GDAL API to accept extra options for transformer (#2565)\n * add a global thread pool mechanism\n * GDALDataset::IRasterIO(): Fixes wrong IO of subpixel shifted window (#2057)\n * GDALDriver::QuietDelete(): partially revert 3.1 commit f60392c8\n * gdal_priv.h: export EXIFExtractMetadata() for plugin uses\n * DumpJPK2CodeStream(): fix reported offset of EOC marker when PSOT = 0 (#2724)\n * Overview generation: fix progress percentage when using USE_RRD=YES (#2722)\n * reader_geo_eye.cpp and reader_pleiades.cpp: avoid potential issue with overuse of per-thread CPLPath static buffers\n * GDALDataset::IRasterIO(): make it try overviews when non-nearest resampling is done before doing RasterIOResampled() on full resolution dataset\n * Workaround issue with UTF-8 precomposed vs decomposed encodings on MacOS filesystems that affect sidecar file discovery (#2903)\n * GDALBuildVRT(): add support for sources such as MEM dataset or non-materialized VRT files\n * GDALDataset::BlockBasedRasterIO(): make it take into account floating-point window coordinates, as GDALRasterBand::IRasterIO() generic case does  (#3101)\n\nMultidim API:\n * GetMask(): use underlying parent data type as much as possible, instead of double, to avoid potential performance issues\n * GetMask(): optimize when we know the mask is always at 1, and when output buffer is contiguous Byte\n * Add GDALGroupOpenMDArrayFromFullname() and GDALGroupOpenGroupFromFullname(), and exose them to SWIG (#2790)\n * Add GDALGroup::ResolveMDArray() and map it to C and SWIG\n * Add GDALMDArrayGetStatistics(), GDALMDArrayComputeStatistics() and GDALDatasetClearStatistics()\n * Make sliced and transpose arrays access the attributes of their source array\n * add GDALMDArrayAdviseRead() and implement it in netCDF driver for DAP datasets\n\nAlgorithms:\n * Warper/transformer: avoid error about invalid latitude when warping a dataset in Geographic CRS whose north/south lat is > 90deg (#2535)\n * Warper: use gcore global thread pool when doing multithreaded operations\n * Warper: fix average resampling that lead to very wrong results in some circumstances (#2665) (3.1.0 regression)\n * Warper: ComputeSourceWindow(): modify extra source pixel computation in anti-meridian warping situations\n * Warper: fix computation of kernel resampling width when wrapping across the antimeridian\n * Warper: emit error message instead of assertion if cutline is not a (multi)polygon (#3037)\n * RPC transformer: Add RPC_DEM_SRS option to override SRS of RPC_DEM. (#2680)\n * TPS transformer: fix handling of duplicated GCPs (fixes #2917)\n * Polygonize: make sure not to use dummy geotransform\n\nUtilities:\n * gdalinfo, gdal_translate, gdalwarp: add a -if switch to be able to specify input driver(s) (#2641)\n * gdalinfo: json output: report nan/inf values as a string instead of invalid JSON\n * gdalinfo: json output: do not escape forward slash\n * gdal_translate (and GTiff driver): copy XMP metadata unless -noxmp is specified (#3050)\n * gdal_viewshed: adjust computation of observer position (#2599)\n * gdaldem: ignore 'nv' entry in color file if there is no nodata value in input file\n * gdalwarp: fix crash if warping a dataset without source or target CRS when -ct is specified (#2675)\n * gdalwarp: improve logic for selecting input overview when target bounds and resolution are specified\n * gdalwarp: better guess of target resolution when target extent is specified (#2754)\n * gdalbuildvrt: for easier understanding, and replicate gdal_translate -of VRT behavior, clamp xSize/ySize of SrcRect/DstRect if outside raster dimensions. Not a fix per se\n * gdalbuildvrt: add support for automatically declaring virtual overviews in very restricted situations\n * gdalbuildvrt: fix -srcnodata / -vrtnodata handling in -separate mode (#2978)\n * gdal_grid: Addition of -tr option (#2839)\n * gdal_contour: major speed up in polygon mode (#2908)\n * gdal2tiles: make general cmd line switches like --formats work without exception (#2522)\n * gdal2tiles: fix issue in nativezoom computation with --profile=raster on a raster whose size is below the tile size\n * gdal2tiles: fix --xyz with -p raster, fix KML generation with --xyz (#2463) and update OpenLayers export to OpenLayers 6.3.1\n * gdal2tiles: add -w mapml output, and possibilities to use custom tiling scheme / profile\n * gdal2tiles.py: fix generation of tiles at high zoom levels when input is small (#2896)\n * gdal2tiles.py: make sure configuration options specified with --config are passed to worker processes (#2950)\n * gdal2tiles.py: fix --profile=raster on a non-georeferenced image (#2998)\n * gdal2tiles: change from cdn.leafletjs.com to unpkg.com for leaflet .css and .js (#3084)\n * gdal_merge.py: fix rounding of source coordinates, when they are very close to an integer, which would otherwise result in a one-pixel shift\n * gdal_calc: support multiple calc arguments to produce a multiband file (#3003)\n * gdal_calc.py: raise exception in case of I/O error. Fixes QGIS #36867\n * gdal_sieve.py: do not write geotransform to the target if the source doesn't have one (#2830)\n * gdalcompare.py - export def find_diff(golden_file, new_file, check_sds=False) into a function for reuse\n * gdalcompare.py: fix floor division in Python 3\n * validate_cloud_optimized_geotiff.py: update to support SPARSE_OK=YES files\n\nMulti driver changes:\n * Driver metadata: fix XML errors in option declarations and add testing (#2656)\n * JPEG2000 drivers: extent signature for JPEG2000 codestream to avoid false positive detections.\n\nLERC:\n * Fixed a bug in Lerc2 decoder (https://github.com/Esri/lerc/pull/129)\n * Fixed a bug in Lerc1 decoder (https://github.com/Esri/lerc/pull/121)\n\nAAIGrid:\n * mention dataset name in errors (#3051)\n\nBAG driver:\n * add support for reading georeferenced metadata\n * remove support for interpolated resampled raster\n * add support for COUNT VALUE_POPULATION strategy\n * support reading other single resolution layers on the root node\n * add support for Create()/warp operation\n * add support for reading the tracking list (with OGR API)\n * fix reporting of vertical CRS\n * fix missing nodes at right and top edges of supergrids in resampling mode (#2737)\n * allow it to be used in multidimensional mode through the generic HDF5 driver\n * fix for big endian arch\n * avoid crash on non-standard dataset\n\nCOG driver:\n * add support for using custom TILING_SCHEME using OGC 17-083r2 JSON encoded definitions\n * add ZOOM_LEVEL_STRATEGY creation option\n * add WARP_RESAMPLING and OVERVIEW_RESAMPLING to override general RESAMPLING option (#2671)\n * write information about tiling scheme in a TILING_SCHEME metadata domain\n * add a SPARSE_OK=YES option to create sparse files\n * TIFF/COG: report content of the header ghost area in metadata\n * skip reprojection when source dataset matches reprojection specifications\n * fix rounding issue when computing overview dimensions\n * fix crash if passing an invalid (warp) resampling\n * fix crash when source dataset is non-Byte/non-UInt16 with a color table (fixes #2946)\n\nDIMAP driver:\n * fix loading when R1C1 tile is not present (#2999)\n\nDTED driver:\n * add support for EGM08 for dted metadata \"E08\" (#3047)\n\nE00grid driver:\n * avoid recursive call in _GetNextSourceChar(). Fixes ossfuzz#25161\n\nECW driver:\n * fix related to network files with SDK >= 5.5 (#2652)\n\nENVI driver:\n * write nodata value in 'data ignore value' header field\n * add support for writing south-up / rotation=180 datasets\n\nFIT driver:\n * reject negative value PAGESIZE creation option (ossfuzz#26596)\n\nFITS driver:\n * add support for reading multiple-extension FITS files through subdatasets\n * add support for reading binary tables\n * initialize default geotransform\n * do not emit error if no georeferencing is found\n\nGPKG driver:\n * perf improvement: when inserting more than 100 features in a transaction in an existing layer, switch to a deferred insertion strategy for spatial index entries\n * on reading of gridded coverage data with PNG tiles, select -FLT_MAX as the nodata value (#2857)\n * add support for using custom TILING_SCHEME using OGC 17-083r2 JSON encoded definitions\n * increase limitation of number of tables to 10000, and make it configurable through OGR_TABLE_LIMIT config option as for vector tables\n * more robust and simple logic to build overviews and compute overview factor (#2858)\n * make ST_Transform() fallback to EPSG code when no SRS with the given srs_id can be found in gpkg_spatial_ref_sys\n * CreateSpatialIndex(): slight optimization by bumping batches to 500K features\n * make SELECT DisableSpatialIndex(...) run faster\n * fix when writing a tile with uniform negative values or values > 65535 (when nodata is set) in PNG tiles (#3044)\n * fix GDAL 3.0 regression regarding some update scenarios (#2325)\n\nGRASS driver:\n * simplified to GRASS GIS 7+ only (#2945)\n * fix reading GRASS groups (#2876)\n\nGRIB driver:\n * correctly report PDS template number for messages with subgrids (#3004)\n * avoid rejecting valid product due to security check\n * fix retrieval of nodata value for GRIB1 products (GDAL 3.1 regression, #2962)\n * fix reading subfields reusing the bitmap of a previous one (GDAL 3.1 regression,  #3099)\n * Degrib g2clib: rename symbols of our internal modified copy (#2775)\n\nGTiff driver:\n * add read support for overviews/masks referenced through TIFFTAG_SUBIFD (#1690)\n * add WEBP_LEVEL_OVERVIEW config option to set WebP compression level on overviews\n * fix wrong direction for half-pixel shift with GCPs and PixelIsPoint convention\n * for Geodetic TIFF grids (GTG), report the 'grid_name' metadata item in the subdataset description\n * fix reading/writing GEO_METADATA TIFF tag on big-endian\n * fix importing WGS_1984_Web_Mercator / ESRI:102113 (#2560)\n * use gcore global thread pool when doing multithreaded operations\n * allow multi-threaded JPEG compression. This can help a bit\n * fix potential crash when generating degenerate 1x1 overviews\n * in CreateCopy() mode, avoid closing and re-opening the file handle\n * add earlier check to bail out when attempting JPEG compression with paletted image\n * LERC codec: do not write TIFFTAG_LERC_PARAMETERS several times as it cause spurious directory rewrites, and breaks for example COG creation\n * LERC codec: fix encoding of datasets with NaN values (#3055)\n * SRS reader: interpret infinite value in GeogInvFlatteningGeoKey as 0 (fixes PROJ #2317)\n * support hidden SHIFT_ORIGIN_IN_MINUS_180_PLUS_180=YES open option used by GDALOpenVerticalShiftGrid()\n * Internal libtiff: updated to latest upstream master version\n * Internal libgeotiff: updated to latest upstream master version\n\nHDF4 driver:\n * do not report SDS when there are EOS_SWATH or EOS_GRID in it. Add LIST_SDS open option\n * multidim: fix issue when reading transposed array, and duplicate attribute names (#2848)\n\nHDF5 driver:\n * add support for new 'CSK 2nd generation' (CSG) (#2930)\n * multidim: fixes for big endian host\n * multidim: fix performance issue when reading from sliced array\n\nHFA driver:\n * do not report TOWGS84 when reading SRS with WGS84, NAD27 or NAD83 datums (unless OSR_STRIP_TOWGS84 config option is set to NO) (fixes QGIS #36837)\n\nISCE driver:\n * avoid crashing division by zero on corrupted datasets. Fixes ossfuzz#24252\n\nISIS3 driver:\n * make sure that in-line label size is at least 65536 bytes (#2741)\n\nJP2KAK driver:\n * add ORGtparts creation option\n\nJP2OpenJPEG driver:\n * add support for generating files with PLT marker segments (OpenJPEG > 2.3.1)\n * add support to enable multi-threaded encoded (OpenJPEG > 2.3.1)\n * writer: acquire input data in background thread\n * fix reading overviews on Sentinel2 PVI files (343x343 size, with 8x8 tiles) (#2984)\n\nLCP driver:\n * add extension checking in Identify() (#2641)\n\nMRF driver:\n * add support for interleaved LERC (#2846)\n * LERC V1 support for NaN and other bug fixes (#2891)\n * missing data return on initial caching of nodata tiles (#2913)\n * Fixes for Create() (#2923)\n\nNetCDF driver:\n * GrowDim(): fix issue with non-ASCII filename on Windows\n * fix setting offset and scale in CreateCopy()\n * allow a NETCDF:http://example.com/my.nc DAP dataset to be opened\n * multidim: fix performance issue when reading from sliced array\n * multidim: optimize reading into a data type 'larger' than the native one\n * multidim: identify the indexing variable of a dimension through the 'coordinates' attribute of other variables (#2805)\n * multidim: add CHECKSUM and FILTER creation options. Make SetRawNoDataValue() use nc_def_var_fill()\n * multidim: fix retrieval of missing_attribute, etc... when reading mask\n\nNITF driver:\n * add support for various TREs for Spectral NITF Implementation Profile (SNIP): MATESA, GRDPSB, BANDSB, ACCHZB, ACCVTB, MSTGTA, PIATGB, PIXQLA, PIXMTA, CSEXRB, ILLUMB, CSRLSB, CSWRPB\n * Add nested variable support in xml:TRE\n\nPAux driver:\n * avoid ingesting large binary unrelated files (found when investigating #2722)\n\nPCRaster driver:\n * fix Create() mode by propagating eAccess = GA_Update (#2948)\n\nPDF driver:\n * update to pdfium/4272 with https://github.com/rouault/pdfium_build_gdal_3_2\n\nPDS driver:\n * take into account FIRST_STANDARD_PARALLEL for Mercator projection (#2490)\n\nRMF driver:\n * Better support for sparse files. Fill null tiles with NoData value.\n\nRS2 driver:\n * remove support for CharLS compression since it is removed from upstream librasterlite2\n\nSAFE driver:\n * deal correctly with WV swaths (#2843)\n\nTileDB driver:\n * support for pixel interleave and single formats (#2703)\n\nTSX driver:\n * fix issue with reading dataset in .zip file on Windows (#2814)\n\nVICAR driver:\n * fix for Basic compression and non-Byte type on big endian host\n * avoid potential null-dereference on corrupted dataset. Fixes ossfuzz#24254\n\nVRT driver:\n * Add support for explicit virtual overviews. Can be built with gdaladdo --config VRT_VIRTUAL_OVERVIEW YES (#2955)\n * VRTDataset::IRasterIO(): allow source overviews to be used when non-nearest resampling is used, and the VRT bands don't expose overviews (#2911)\n * fix VRTRasterBand nodata handling when creating implicit overviews (#2920)\n * round src/dst coordinates to integer within 1e-3 margin\n * prevent potential infinite recursion in VRTDataset::IRasterIO()\n\nWMS driver:\n * Add a GDAL_MAX_CONNECTIONS config option\n * WMS cache: add a <CleanTimeout> in <Cache> XML configuration (#2966)\n\nWMTS driver:\n * Add support for DataType tag in service description XML (#2794)\n\n## OGR 3.2.0 - Overview of Changes\n\nCore:\n * Add unique constraints to OGRFieldDefn in core, GML, PG, PGDump, GPKG, SQLite and VRT drivers (#2622)\n * Add support for field AlternativeName to OGRFieldDefn, read alias in openfilegdb driver (#2729)\n * Add GDALDataset::AbortSQL (#2953)\n * OGRFeature::GetFieldAsString(): remove 80 character limitation when formatting string/integer/real lists (#2661)\n * Add OGRLayerUniquePtr and OGRExpatUniquePtr aliases (#2635)\n * OGRSQL: take into account second part of arithmetic expression to correctly infer\n result type.\n * OGRSQL: support constructs 'A AND B AND C ... AND N' with many successive AND ((#2989)\n * OGRSQL: Fixed buffer overflow in BuildParseInfo for SQL query when joining multiple tables that each have implicit FID columns.\n * ogr_geometry.h: export OGRWktOptions class (#2576)\n * ogr_swq.h: type nOperation as swq_op\n\nOGRSpatialReference:\n * Make GetAuthorityCode('PROJCS') work on a WKT1 COMPD_CS with a VERT_DATUM type = 2002 (Ellipsoid height)\n * Make OSRGetPROJSearchPaths() return the value set by OSRSetPROJSearchPaths()\n * exportToProj4(): make it add +geoidgrids= when possible (needs PROJ 7.2)\n * Add OSRDemoteTo2D() and expose it to SWIG\n * fix GetUTMZone() to work on 3D projected CRS\n * exportToWkt(): accept FORMAT=WKT2_2019 (alias of WKT2_2018)\n * fixes to avoid crashes with datum ensemble objects (needs PROJ 7.2)\n * Avoid warnings in GetProjTLSContextHolder() when PROJ resource path is not already set (PROJ #2242)\n * ogr_proj_p.cpp: make sure init() is called in OSRPJContextHolder() constructor to avoid potential use of default NULL PROJ context (#2691)\n * fix issue with PROJ context and OSRCleanup() (#2744)\n * Fix exportToWkt() after morphToESRI() on Geographic/Projected 3D CRS. But only works with PROJ 7.2\n\nUtilities:\n * ogrinfo: report field unique constraint\n * ogrinfo: report field alternative name\n * ogrinfo: report SUBDATASETS domain\n * ogrinfo/ogr2ogr: fix issues with -sql @filename where SQL comments are not at start of line (#2811)\n * ogr2ogr: bump default value of -gt to 100 000\n\nMulti driver changes:\n * Avoid copy&paste implementations of GetNextFeature() relying on GetNextRawFeature() through OGRGetNextFeatureThroughRaw class\n * make sure GetNextFeature() always return nullptr after the first time it did (ie no implicit ResetReading()) in GPKG, SQLite, PCIDSK, MSSQLSpatial and MySQL driver\n * better support for layers with field names differing by case in OGR SQL, SQL SQLite and VRT\n\nCSV driver:\n * do not try to read .csvt if CSV filename has no extension (#3006)\n\nDXF driver:\n * Propagate PaperSpace field from INSERTs to subfeatures\n * Fix wrong transformer composition for ASM entities\n * do not rely on tail recursion and avoid potential big stack calls when eliminated 999 comment lines. Fixes ossfuzz#22668\n\nElasticsearch driver:\n * make OVERWRITE_INDEX=YES work properly by re-creating the index afterwards\n\nESRIJSON driver:\n * fix GetFeatureCount() and GetExtent()\n\nFileGDB/OpenFileGDB drivers:\n * qualify DateTime values with UTC timezone when <IsTimeInUTC>true</IsTimeInUTC> is present in layer metadata (#2719)\n\nFileGDB driver:\n * generate layer definition XML with HasSpatialIndex=true to better reflect reality.\n * add support for reading and writing field alternative names\n * simplify spatial filtering, and apply full intersection in GetFeatureCount() instead of BBOX one, so as to be similar to OpenFileGDB\n\nFlatGeoBuf driver:\n * Metadata extensions (#2929)\n * fix illegal use of std::vector (#2773)\n * make GetExtent() work on feature write (#2874)\n\nGeoJSON driver:\n * fix opening of file starting with {\"coordinates\" (#2720)\n * fix opening of file starting with {\"geometry\":{\"coordinates\" (#2787)\n * RFC7946 writer: fix processing of geometry that covers the whole world (#2833)\n * writer: use JSON_C_TO_STRING_NOSLASHESCAPE when available to avoid escaping forward slash, and very partial resync of internal libjson-c to get it\n\nGML driver:\n * add a WRITE_GFS=AUTO/YES/NO open option (#2982)\n * writer: correctly format OFTDate and OFTDateTime fields (#2897)\n * hugefileresolver: add missing xmlns:xlink to make Xerces parser happy\n * fix typo in VFR GFS files BonitovaneDilRizeniId -> BonitovanyDilRizeniId (#2685)\n * when encountering XML issue, defer emission of error message until we return a NULL feature, so as to avoid to confuse ogr2ogr (#2730)\n * XSD parser: recognized unsignedLong data type\n * avoid 'Destination buffer too small' error to be emitted on /vsicurl_streaming/ URLs with filters coming from the WFS driver\n * fix layer extent with wrong axis order in some cases (#3091)\n * recognize AIXM ElevatedSurface to be able to proper axis swapping (#3091)\n\nGMLAS driver:\n * avoid running out of file descriptors in case of big number of layers\n * fix so as to get same unique ids on big-endian arch\n\nGPKG driver:\n * add a PRELUDE_STATEMENTS open option that can be used for example to attach other databases\n * add a DATETIME_FORMAT=WITH_TZ/UTC dataset creation option (defaults to WITH_TZ) to specify how to deal with non-UTC datetime values (#2898)\n * hide view \"geometry_columns\"\n * fix wrong RTree _update3 trigger on existing files (QGIS #36935)\n\nGRASS driver:\n * simplified to GRASS GIS 7+ only (#2945)\n\nGTM driver:\n * on write, do not consider TZFlag=1 (localtime) as a timezone value (refs #2696)\n * on write, take into correctly timezone value to convert to UTC (refs #2696)\n\nLIBKML driver:\n * do not advertise RandomWrite capability (unless on a update layer, when datasource is created with UPDATE_TARGETHREF creation option) (fixes QGIS 39087)\n\nMDB driver:\n * fix warning when parsing 'false' boolean value\n\nMITAB driver:\n * fix reading and writing of Transverse Mercator projections based on KKJ\n * .tab: fix writing empty/null Time fields (#2612)\n * fix reading and writing of non-metre linear units\n * Support for font and custom symbols in mitab (#3081)\n\nMVT driver:\n * fix 'random' failures in test_ogr_mvt_point_polygon_clip() by sorting sub-directory names, and also revise logic to attribute FID when reading directories (#2566)\n * writing: fix crashes in multi-threading mode (#2764)\n\nNAS driver:\n * add support for new GID7 updates\n * also filter for wfs:member (as in GID7)\n * do not try to write a .gfs file when NAS_GFS_TEMPLATE is specified\n\nnetCDF driver:\n * simple geometries: fix for big-endian\n\nOAPIF driver:\n * avoid re-adding user query parameters if they are found in URLs returned by the API (#2873)\n * do not list raster or coverage collections\n * support opening of a collection when its URL is non-standard such as in MOAW workflows\n * fix memory leak when reading schema from .xsd\n\nODBC driver:\n * Allow mdb files to be opened with the generic ODBC driver on non-windows platforms\n * Fix w.r.t fallback to alternative Access ODBC driver name\n * Fix DSN string construction for Windows Access ODBC driver, template candidate preference order (#2878)\n * Correctly handle datetime fields provided by the mdbtools ODBC driver\n * Read MS Access databases with ACCDB and STYLE extensions (#2880)\n\nOCI driver:\n * fix server 12.2 version detection\n\nODS driver:\n * do not create files with Zip64 extension, to avoid compatibility issue with LibreOffice Calc\n * avoid potential deep call stack in formula evaluation. Fixes ossfuzz#22237\n\nOpenFileGDB driver:\n * add support for reading .spx spatial index file\n * more reliable .gdbtable header reading\n\nOSM driver:\n * remove limitation to 10000 nodes per way (#849)\n * Replace hard-coded tag filter with variable\n * Optionally disable early tag filtering\n * Don't filter out explicit attributes (#2603)\n\nPDF driver:\n * write correctly attribute object dictionary when there is no field to write, and read back correctly broken files we generated before (#2624)\n\nPDS4 driver:\n * fix potential double free if RenameFileTo() fails\n\nPGeo driver:\n * Quote DBQ value in PGEO driver template to avoid issues opening MDB paths with spaces\n * Fixes to automatic ODBC driver installation (#2838)\n * Read non-spatial tables (#2889)\n\nPG driver:\n * Make ogr2ogr -f PostgreSQL work when using PG:service= syntax (actually a workaround in GDALDriver::Create())\n * take into potential generated columns (PostgreSQL >= 12) to avoid issuing INSERT, UPDATE or COPY statements with them\n * PG (and PostgisRaster driver): set the application name in PostgreSQL connections (#2658)\n * apply standard libpq parsing rules for connection parameters for our custom connection parameters (schemas, active_schemas, tables) (#2824)\n\nPGDump driver:\n * change default value of POSTGIS_VERSION layer creation option to 2.2\n\nSEGY driver:\n * avoid opening FITS files\n\nShapefile driver:\n * do not claim to support DateTime data type\n *  when several candidate SRS are found with confidence >= 90%, take the one from EPSG (contributes to fixes QGIS #32255)\n * SHPRestoreSHX: fix for (64 bit) big endian\n\nS57 driver:\n * apply update to DSID_EDTN field (#2498)\n * report attributes tagged as list in S57 dictionaries as StringList fields. Add a LIST_AS_STRINGLIST open option that can be set to OFF to restore GDAL < 3.2 behavior (#2660)\n\nSXF driver:\n * fixes for big-endian\n\nSQLite/Spatialite driver:\n * add a PRELUDE_STATEMENTS open option that can be used for example to attach other databases\n\nWFS driver:\n * avoid /vsicurl_streaming/ URL to be truncated in case of big filter (but the server might reject it)\n\nXLSX driver:\n * do not create files with Zip64 extension, to avoid compatibility issue with LibreOffice Calc\n * fix numeric precision issue when reading datetime that could lead to an error of 1 second (#2683)\n\n## SWIG Language Bindings\n\nAll bindings:\n * OGRDriver.CopyDataSource(): check that source dataset is not NULL\n * validate range of resample_alg algorithm (#2591)\n *  expose CPLSetCurrentErrorHandlerCatchDebug() as gdal.SetCurrentErrorHandlerCatchDebug()\n\nCSharp bindings:\n * Add build support for .NET core (#1368)\n * SWIG 4.0 compatibility (#2802)\n * Adding typemaps C# for wrapper_GDALWarpDestDS and wrapper_GDALWarpDestName (#2621)\n * Expose Dataset.GetSpatialRef() (#2620)\n * Expose OSR.GetCRSInfoListFromDatabase (#1665)\n * Fixed implementation of Utf8BytesToString (#2649)\n\nJava bindings:\n * update minimum source/target Java version to 7 to please JDK 11 (#2594)\n * make 'install' target copy maven artifacts (gdal-X.Y.Z.jar) to /usr/share/java\n\nPerl bindings:\n\nPython bindings:\n * Move implementation of scripts in osgeo.utils package to be reusable\n * Fix Python2 install to be synchronous and report all errors (#2515)\n * add a colorSelection='nearest_color_entry'/'exact_color_entry' argument to gdal.DEMProcessing()\n * accept string as value for gdal.Translate() metadataOptions and creationOptions argument when providing single option (#2709)\n * gdal.Info(): make options=['-json'] work properly\n * remove use of deprecated PyObject_AsReadBuffer() function\n * makefile.vc: remove '-modern -new_repr' on python target for SWIG 4 compatibility\n * add GDALMDArray.shape attribute and GDALMDArray.ReadAsMaskedArray() method\n * make Dataset.ReadRaster() and Dataset.ReadAsArray() accept floating-point coordinates (#3101)\n\n# GDAL/OGR 3.1.0 Release Notes\n\n## In a nutshell...\n\n * Implement RFC 75: support for multidimensional arrays in MEM, VRT, netCDF, HDF4, HDF5 and GRIB drivers. Read/write for MEM and netCDF. Read/only for others. Add gdalmdiminfo and gdalmdimtranslate utilities.\n * Implement RFC76: add capability of writing vector drivers in Python\n * New GDAL drivers:\n   - COG: write-only, for Cloud Optimized GeoTIFF\n   - EXR: read/write driver, relying on OpenEXR library\n   - ISG: read-only, for geoid models of the International Service for the Geoid\n   - RDB: read-only, for RIEGL Database .mpx RDB 2 files (#1538) (needs proprietary SDK)\n * New OGR drivers:\n   - FlatGeoBuf: read-support and creation (#1742)\n   - MapML: read/write driver for experimental web spec\n * Improved drivers:\n  - OAPIF driver (renamed from WFS3): updated to OGC API - Features 1.0 core spec\n  - GTiff: improve performance of internal overview creation\n  - GTiff: GeoTIFF 1.1 support\n  - Shapefile driver: add read/creation/update support for .shz and .shp.zip\n  - netCDF vector: read/write support for CF-1.8 Encoded Geometries (#1287)\n  - VICAR: multiple improvements and write support (#1855)\n  - DDS: add read support\n * Other improvements:\n   - gdalwarp: accept output drivers with only CreateCopy() capabilities\n   - gdal_viewshed: new utility for viewshed algorithm\n * Remove GFT driver now that the online service no longer exists (#2050)\n * New Sphinx-based documentation\n * Multiple security related fixes (ossfuzz)\n * Continued code linting (cppcheck, CoverityScan, etc.)\n * Compatibility with GDAL 3.0:\n    - C and C++ API: backward compatible changes\n    - C ABI: backward compatible changes\n    - C++ ABI: modified\n    - Functional changes: see MIGRATION_GUIDE.TXT\n\n## GDAL/OGR 3.1.0 - General Changes\n\nBuild(Unix):\n * use pkg-config for libxml2 detection (#2173)\n * fix detection of libpq in a non-standard place (#1542)\n * do not use absolute path in linking command. Helps Mac OS and cygwin builds (#2075)\n * Enable Bash completions and control installation\n * GDALmake.opt.in: silence datarootdir warning\n * Doc: allow user full control over installation directory\n * fix JVM detection for HDFS support on MacOS (#2313)\n * Remove #define HOST_FILLORDER from cpl_config.h (#2345)\n * Added search for proj library in lib64 directory.\n * configure: strip -L/usr/lib and similar from netCDF, MySQL, GEOS and SFCGAL lib path (#2395)\n * configure: remove useless -lproj from --with-spatialite detection\n\nBuild(Windows):\n * parametrize number of CPUs for parallel builds with CPU_COUNT variable (#1922)\n * add HDF5_H5_IS_DLL variable to switch the scenario when HDF5 is built as a DLL (#1931)\n * add POSTFIX that defaults to _d for GDAL .dll, .lib and .pdb for DEBUG builds (#1901)\n *  Fix issues with thread_local and C++ objects that don't work well with DLL on Windows\n\nAll:\n * Support Poppler 0.82, 0.83, 0.85\n\n## GDAL 3.1.0 - Overview of Changes\n\n## Algorithms\n\n* Warper: add sum resampling method (#1437)\n* Average resampling (warp and overview/translate): use weighted average for border source pixels\n* GDALReprojectImage(): properly take into account source/target alpha bands\n* GDALCreateReprojectionTransformerEx(): do not emit error if reverse transformation fails, and fix crash when trying to use null reverse transformation\n* Warper: fix GDAL 2.3 regression in a situation with source nodata value, multiple bands and nearest resampling where the logic to detect which source pixels are nodata was inverted (#1656)\n* GWKAverageOrModeThread(): reject invalid source pixels for average/q1/q3/mode/min/max resampling (#2365)\n* Multithreaded warper: make sure a transformer object is used by the thread which created it (#1989). This workarounds a PROJ bug also fixed per https://github.com/OSGeo/PROJ/pull/1726\n* Contour: fix SegmentMerger list iterator skipping and out of bounds error (#1670)\n* Contour: fix (over) precision issue when comparing pixel value to NoData on Float32 rasters (#1987)\n* Contour: add sanity checks for interval based contouring, in case the dataset contains extreme values regarding the settings, which would lead to a lot of memory allocations / too large computation time\n* TPS warper: enhance precision without armadillo support (#1809)\n* RPC warper: fix issue when source image has a geotransform (#2460)\n* GDALRasterizeGeometries(): fix potential integer overflow / memory allocation failure, depending on GDAL_CACHEMAX and raster dimensions (#2261)\n* Rasterize: speed optimization for geometry collections (#2369)\n* GDALContourGenerate(): propagate raster acquisition error (#2410)\n\n## Port\n\n* /vsitar/: support >100 character file names (#1559)\n* /vsitar/: accept space as end of field terminator\n* /vsigz/: fix seeking within .gz/.tgz files larger than 2 GB (#2315)\n* /vsicurl (and derived filesystems): fix concurrency issue with multithreaded reads (#1244)\n* /vsicurl/: avoid downloading one extra block when the end offset is just at a chunk boundary\n* /vsicurl/: fix CPL_VSIL_CURL_ALLOWED_EXTENSIONS with query string (#1614)\n* /vsicurl/: allow 'Connection timed out' CURL errors as candidate for HTTP retry\n* /vsicurl/: GetFileSize(): when HEAD request does not return Content-Length header, retry with GET\n* /vsis3/: for a long living file handle, refresh credentials coming from EC2/AIM (#1593)\n* /vsis3/: invalidate cached non-existing file is AWS_ config options are changed in the meantime (#2294)\n* /vsis3/ /vsigs/ /vsiaz/: implement Rename() first doing a copy of the original file and then deleting it\n* /vsis3/ and similar: add a NUM_THREADS option to Sync() for parallelized copy\n* AWS: Fix error in loading ~/.aws/config file (#2203)\n* VSISync(): when copying from /vsis3/ to /vsis3/ (or /vsigs/->/vsigs/, /vsiaz/->/vsiaz/), use CopyObject() method to use server side copy\n* VSISync(): make file copying from /vsis3/ actually use /vsis3_streaming/ to reduce number of GET requests\n* VSISync(): add a CHUNK_SIZE option to Sync() to split large objects and get parallelization of their download and upload\n* Add VSIUnlinkBatch() for batch deletion of files, and add optimized /vsis3/ implementation\n* Add efficient VSIRmdirRecursive() implementation for /vsis3/\n* Add VSIGetFileMetadata()/VSISetFileMetadata() and implement them to get/set HTTP headers, and AWS S3 object tagging\n* /vsis3/ and other network filesystems: avoid useless network requests when we already got a directory listing (#2429)\n* /vsiswift/: V3 authentication method, handling auth token expiration\n* /vsimem/: make Rename() error if destination file is not in /vsimem/\n* /vsizip/ writing: in ZIP64 mode, also advertise 45 as the version in the central directory (avoids a warning from 'zip' utility)\n* Add CPLCanRecode function and use it in MITAB, Shape and SXF drivers to decide when to advertise UTF-8 capability\n* CPLConfigOptionSetter: only reset thread-locale value, not global one\n* CPLJSONObject::GetType(): return Long when the value doesn't fit on a int32\n* CPLJSON: distinguish Null type from Unknown/invalid type\n* CPLEscapeString(): escape double-quote for CPLES_URL\n* Add a CPLCondTimedWait()\n* cpl_safemaths.hpp: safe + and * for GUInt64\n* Add CPLJSonStreamingWriter class\n* Add cpl_error_internal.h with logic with error accumulator\n* Add VSIOverwriteFile()\n* Add CPLLaunderForFilename()\n* cpl_error.h: add a CPLDebugOnly() macro that expands to CPLDebug() only for DEBUG builds\n* QuietDelete: support expliciting the drivers to use\n\n## Core\n\n* Block cache: fix corruption on multithreaded write on datasets (#2011)\n* GDALInvGeoTransform(): make it work with scale and rotation/skew coefficients of small absolute value (#1615)\n* GDALCopyWholeRasterGetSwathSize(): fix potential int overflows for big values of GDAL_SWATH_SIZE or GDAL_CACHEMAX\n* PAMRasterBand: add presence flag for Offset and SetScale so that GetOffset()/GetScale() properly reports if they are defined in PAM\n* GDALDefaultOverviews::BuildOverviews(): fix typo in detection of 1x1 overview (#1730)\n* Fix precision loss at GDALResampleChunkC32R with complex data\n* Fix precision loss at GDALComputeBandStats with complex data\n* Proxy pool: Load band block sizes if not provided at creation. Fixes floating point exception on copy overviews from PRF dataset to destination dataset.\n* GTiff and PAM: allow serializing WKT2 for SRS using non-WKT1 compatible projections such as Vertical Perspective (#1856)\n* RasterIO(): fix non-neareset resampling over nodata blocks (#1941)\n* Overview dataset (-oo OVERVIEW_LEVEL): expose mask if the source dataset has a mask with overviews\n* GDALUnrolledCopy<GByte,2,1>: fix SSE2-only implementation (when SSSE3 is not available, on older AMD CPUs)\n* PAM: support reading GCPs from ESRI GeodataXform in .aux.xml files\n* Make it possible to call BuildOverviews() on a dataset returned by GDALBuildVRT()\n* GDALDataset::SetProjection(): re-allow the use of PROJ4 strings (#2034)\n\n## Utilities\n\n* GDALInfo(): fix axis order issue in long,lat corner coordinates, in particular when reading from a .aux.xml with a ProjectedCRS (#2195)\n* gdal_translate: Make 'gdal_translate foo.tif foo.tif.ovr -outsize 50% 50% -of GTiff' work\n* gdal_translate: clamp/round source nodata value when not compatible of the target data type. Was already done when using -a_nodata, but not with implicit copy (#2105)\n* gdalwarp: accept output drivers with only CreateCopy() capabilities\n* gdalwarp: adjust nodata values, passed with -srcnodata/-dstnodata, and close to FLT_MAX to exactly it (#1724)\n* gdalwarp: fix wrong axis order when using source/target CRS being a geographic3D CRS such as EPSG:4979, and with vertical shift grid application (#1561, GDAL 3.0 regression)\n* gdal_contour: remove explicit width/precision=12/3 of the elev field (#1487)\n* gdal_contour: turn on quiet mode if output dataset is standard output (refs #2057)\n* gdaldem: avoid potential integer overflow in color-relief mode (#2354)\n* gdal_calc.py: fixed NaN-streaking in output images when the --allBands option is given to tiled images\n* gdal_polygonize.py: fix outputting to geojson without explicit -f switch (#1533)\n* gdalcompare.py: take into account mask bands\n* gdal_retile.py: add resume option (#1703)\n* gdallocationinfo: emit verbose error when dataset cannot be opened (#1684)\n* gdallocationinfo and gdaltransform: print a hint when values are expected from the command line and stdin is an interactive terminal (refs #1684)\n* Python utilities: fix GetOutputDriverFor() when multiple drivers found (#1719)\n* gdal2tiles.py: add remaining resample methods\n* gdal2tiles.py: add option for setting the tile size (#2097)\n* gdal2tiles.py: add --xyz option to generate tiles in the OSM Slippy Map standard (#2098)\n* gdal2tiles.py: show warning when running against non-Byte input (#1956)\n* gdal2tiles.py: update cache calculation (#2020)\n* gdal2tiles.py: check that min zoom <= max zoom (#2161)\n* gdal2tiles.py: ignore nodata values that are not in the range of the band data type\n* gdal2tiles.py: fix hang when --s_srs specified but image lacks georeferencing\n* gdal_translate / gdalwarp / ogrct: allow dealing with non-WKT1 representable SRS (#1856)\n* gdal_edit.py: add a -units switch\n* gdal_edit.py: add -a_ulurll switch\n* gdal_fillnodata.py/GDALFillNodata: fix crash when smooth_iterations is used, and with some progress functions such as the one used by Python (#1184)\n* Python scripts and samples: use python3 for shebang (#2168)\n\n## Sample scripts\n\n* Add tile_extent_from_raster.py: sample script to generate the extent of each raster tile in a overview as a vector layer\n* Add gdal_remove_towgs84.py script\n\n## GDAL drivers\n\nMultiple drivers:\n * GTiff, GPKG, MBTiles, PostgisRaster drivers: share lock of overview dataset with parent dataset (#1488)\n * HDF5 and netCDF: fix crash when reading attributes of type string of variable length with NULL values\n * CTable2/LOSLAS/NTv1/NTv2: document in metadata that positive longitude shift values are towards west\n * Revise raster drivers GDAL_DMD_HELPTOPIC\n * JP2KAK and JP2OPENJPEG: fix to read images whose origin is not (0,0)\n * Strip TOWGS84 when datum is known, in GTiff, Spatialite and GPKG drivers\n\nBAG driver:\n * modify way georeferencing is read (particularly pixel sizes and origin) (#1728)\n * Backward compatibility for metadata reading for BAG < 1.5 (#2428)\n\nBSB driver:\n * Report PLY coordinates as a WKT POLYGON in a BSB_CUTLINE metadata item\n\nBYN driver:\n * fix nodata value for Int32 encoded products\n\nDAAS driver:\n * accept 4-band RGBA PNG response even when a single band is requested\n\nDIMAP driver:\n * don't look inside Dataset_Components if Raster_Data is present\n * avoid reparsing xml if already a product dimap\n * ignore missing strip xml file\n\nDDS driver:\n * add read support\n\nDTED driver:\n * Add DTED_APPLY_PIXEL_IS_POINT environment switch  (#2384)\n * emit a CE_Failure instead of a CE_Warning in case of checksum verification failure (#2410)\n * support E96 as well as MSL for COMPD_CS (#2422)\n\nEEDA driver:\n * fix startTime / endTime comparisons that were incomplete in #1506\n\nFITS driver:\n * fix memory leaks\n\nENVI driver:\n * add read support for reading GCPs (#1528), and fix off-by-one offset on line,pixel on reading GCP\n * fix potential use of invalid pointer on some unusual std::string implementations (#1527)\n * preserve 'byte order' on update (#1796)\n\nGPKG driver:\n * support opening subdataset of /vsicurl/ files (#2153)\n\nGTiff driver:\n * improve performance of internal overview creation (#1442)\n * in COPY_SRC_OVERVIEWS=YES, interleave mask with imagery, and add leader/trailer to strile\n * optimize read of cloud-optimized geotiffs\n * do not generate a TIFFTAG_GDAL_METADATA with color interpretation information for JPEG YCbCr compression\n * make -co NUM_THREADS produce reproducible output\n * make overview blocksize defaults to same as full-resolution\n * move deferred tile/strip offset/bytecount loading to libtiff\n * make WEBP_LEVEL to be honored in Create() mode (fixes #1594)\n * PushMetadataToPam(): early exit when PAM is disabled, to avoid error messages\n * remove support for libtiff 3.X\n * set a LAYOUT=COG metadata item in the IMAGE_STRUCTURE metadata domain of the dataset when the hidden feature declarations typical of a COG file are found\n * fix memory leak with -co APPEND_SUBDATASET=YES\n * fix error message for NBITS != 16 and Float32\n * add explicit error message when trying to create a too big tiled TIFF file (refs #1786)\n * ensure GDAL PROJ context is used for all libgeotiff functions (requires internal libgeotiff / libgeotiff 1.6)\n * make sure that GetMetadataDomainList() doesn't return EXIF when there's no EXIF metadata\n * GTIFGetOGISDefn: avoid querying UOM length info when it is KvUserDefined to avoid an error to be emitted\n * on CRS reading, avoid unsetting of EPSG code when ProjLinearUnitsGeoKey = Linear_Foot_US_Survey and the CRS also uses that unit (#2290)\n * do not write in GeoTIFF keys non-standard projections\n * do not write TOWGS84 that come from EPSG codes, unless GTIFF_WRITE_TOWGS84=YES is explicitly set\n * GTiff writing: workaround PROJ 6.3.0 bug when writing a EPSG:4937 ETRS89 Geog3D CRS\n * GTiff writing: do not write by default EPSG:3857/WebMercator as a ESRI PE string. Fixes 3.0 regression\n * avoid crash on single-component file with Whitepoint and PrimaryChromaticities tags\n * libtiff: BigTIFF creation: write TileByteCounts/StripByteCounts tag with SHORT or LONG when possible\n * Internal libgeotiff: set UOMLength from GeogLinearUnits (for geocentric CRS) (#1596)\n * Internal libgeotiff: upgrade to libgeotiff 1.6.0dev to support OGC GeoTIFF 1.1\n * Internal libtiff: resync with internal libtiff (post 4.1.0)\n\nGRIB driver:\n * do not do erroneous K->C unit conversion for derived forecasts whose content is not a temperature, but a derived quantity, such as spread\n * avoid erroneous K->C conversion for Dew point depression\n * update GRIB tables to degrib 2.24\n * add missing entries in MeteoAtmoChem table\n * add more values from Table 4.5 in Surface type table\n * add support for template 4.48 Optical Properties of Aerosol\n * add support for rotated lat-lon grids\n * avoid quadratic performance on GRIB2 datasets using subgrids within a single GRIB message (#2288)\n\nGXF driver:\n * avoid closing the file pointer before being sure this is a GXF driver, otherwise this can prevent the opening of some raw format files (#1521)\n\nHDF4 driver:\n * fix retrieval of non-string swath and grid attributes\n * fix GR support for non-Byte rasters\n * remove broken attribute reading\n * fixes related to color table\n\nHDF5 driver:\n * avoid error report of the HDF5 library when _FillValue attribute is missing\n * Make GH5_FetchAttribute(CPLString) more robust and able to cope with variable-length string\n * type detection: only detect complex data type if the component names start with r/R and i/I (refinement of #359)\n * add a way to open datasets split over several files using the 'family' driver\n * fix reading single dimension dataset (#2180)\n\nHFA driver:\n * fix writing of compressed file when a RLE run count is in the [0x4000,0x8000[ range or [0x400000, 0x800000[ (#2150)\n\nIGNFHeightASCIIGrid driver:\n * fix to read RASPM2018.mnt grid\n\nIRIS driver:\n * make identification more restrictive to avoid false-positive identification of raw binary formats such as ENVI (#1961)\n\nISIS3 driver:\n * extract band name from BandBin group, and wavelength/bandwidth (#1853)\n * preserve label in PAM .aux.xml when copying to other formats (#1854)\n * add support for PointPerspective projection (#1856)\n * add support for Oblique Cylindrical projection (#1856)\n\nJP2ECW driver:\n * add support for ECWJP2 SDK 5.5\n\nJP2OpenJPEG driver:\n * Fix multi-threading race condition (#1847)\n * fix reading overviews, when tiled API is used, and the dimensions of the full resolution image are not a multiple of 2^numresolutions (#1860)\n * fix to return the proper number of bytes read when we read more than 2 GB at once (fixes https://github.com/uclouvain/openjpeg/issues/1151)\n\nJP2KAK driver:\n * fix issue with multi-threaded reads\n * NMAKE: Allow users to tweak/append extras to KAKINC (#1584)\n\nJPEG driver:\n * fix further calls to RasterIO after reading full image at full resolution (#1947)\n * tune sanity check for multiple-scan (QGIS #35957)\n * in case of multiscan image and implicit overviews, limit memory consumption\n\nKEA driver:\n * return error when deleting metadata item rather than crashing (#1681)\n * Backport thread safety fixes and nullptr tests from standalone driver (#2372)\n\nLOSLAS driver:\n * add support for .geo geoid models\n\nMEM driver:\n * Set access mode to the one required in Open()\n\nMRF driver:\n * fix relative file name detection\n * relax TIFF tile format rules on read\n * Accept any known projection encoding\n * use PNG library for swapping\n * fixes caching MRF issue\n\nMrSID driver:\n * add MRSID_PLATFORM to frmts/mrsid/nmake.opt\n\nnetCDF driver:\n * improve performance when reading chunked netCDF 4 bottom-up files (read-only)\n * correctly parse grid_mapping attribute in expanded form\n * allow \"radian\" value for the X/Y axis units\n * very partial workaround for an issue in libnetcdf 4.6.3 and 4.7.0 with unlimited dimensions (refs https://github.com/Unidata/netcdf-c/pull/1442)\n * NCDFIsUserDefinedType(): make it work for types in subgroups\n * Disregard valid range if min > max (#1811)\n * for byte (signed/unsigned) variables, do not report a nodata value if there's no explicit _FillValue/missing_value as recommended by the netCDF specs. And for other data types use nc_inq_var_fill() to get the default value\n * do not report nodata if NOFILL is set\n * fix bottom-up identification with negative scale_factor for y axis (#1383)\n * fix issue when opening /vsicurl/http[s]://example.com/foo.nc filenames (#2412)\n * Fix support of WKT1_GDAL with netCDF rotated pole formulation\n\nNGW driver:\n * Add support for additional raster types and QGIS styles.\n * Add more server side attribute filters.\n\nNITF driver:\n * skip bad UDID data (#1578)\n\nNTv2 driver:\n * add support for the Canadian NAD83(CRSR)v7 / NAD83v70VG.gvb velocity grid\n\nOZI driver:\n * fix axis order issue with georeferencing (3.0 regression)\n\nPDF driver:\n * update to use newer versions of pdfium\n\nPDS3 driver:\n * report the label in a json:PDS metadata domain\n * fix support of Oblique Cylindrical (#1856)\n * ix opening of datasets with BSQ organization (or single band), where one band is larger than 2 GB (2.3 regression)\n * nasakeywordhandler: fixes to be able to read some labels with metadata items whose value is a list on several lines\n * add a GDAL_TRY_PDS3_WITH_VICAR configuration option that can be set to YES so that PDS3 datasets that contain a VICAR label are opened by the VICAR driver\n\nPDS4 driver:\n * update CART schema to 1D00_1933 and PDS to 1C00 (#1851)\n * fix reading side of Mercator and Orthographic\n * add a CREATE_LABEL_ONLY=YES creation option, and create a <Header> element (#1832)\n * add write support for LAEA projection\n\nPNG driver:\n * Update internal libpng to 1.6.37\n\nPNM driver:\n * emit warning if creating file with non-standard extension\n\nRasterLite2 driver:\n * fix build against latest librasterlite2, and require it\n\nRMF driver:\n * Add support for PZ-90.11 and GSK-2011 coordinate systems\n * Read vertical datum info\n * Add translation vertical CS ID to dataset's spatial reference\n\nRS2 driver:\n * add half-pixel shift to reported GCP line and column numbers (#1666)\n\nSentinel2 driver:\n * Add support for exposing Level-2A AOT, WVP, SCL, CLD, SNW data in SAFE_COMPACT format (#2404)\n\nTileDB driver:\n * add capability to define co-registered attributes per band\n * set row-major reads and removed adviseread (#1479)\n * added support for raster band metadata\n * TILEDB_LIBS added for windows build\n * partial updates to existing arrays\n * support reading tiles in update mode (#2185)\n * use array metadata to store xml (#2103)\n * redirect vsis3 calls to tiledb s3 direct calls\n * Flush cache in block order for global writes (#2391)\n\nTSX driver:\n * add PAZ support\n\nUSGSDEM driver:\n * fix reading FEMA generated Lidar datasets whose header is 918 bytes large\n\nVICAR driver:\n * Support FORMAT=HALF, DOUB and COMP\n * Support big-endian order for integer & floating point values\n * Support VAX floating-point order\n * Support BIP and BIL organizations\n * Ignore binary label records (NBL), and properly skip binary prefixes (NBB)\n * fix reading of EOL labels with non BSQ organizations, and possible confusion with LBLSIZE of EOL overwriting the main one\n * improvements in label reading, and report label in a json:VICAR metadata domain\n * read binary prefixes as OGR layer\n * add read support for BASIC and BASIC2 compression methods\n * add write support\n * remove obsolete END-OF-DATASET_LABEL, CONVERSION_DETAILS and PIXEL-SHIFT-BUG metadata items that dates back to 1.X era\n\nVRT driver:\n * add 'vrt://{gdal_dataset}?bands=num1,...,numN' syntax as a convenient way of creating a on-the-fly VRT with a subset of bands\n * VRT warp: do not fail if a block has no corresponding source pixels (#1985)\n * VRT Python: also probe libpython3.Xm.so.1.0 (#1660)\n * VRT Python: add Python 3.8 compatibility\n * avoid erroneous pixel request do be done with KernelFilteredSource\n * VRTRawRasterBand: add GetVirtualMemAuto interface to enable mmap io\n * fix requesting a downsampling version of the mask band of a source that has masks and overviews\n * VRT pansharpening: fix crash when NoData is set and input multispectral bands are separate files (#2328)\n * fix IGetDataCoverageStatus() that can cause issue for the use case of https://lists.osgeo.org/pipermail/gdal-dev/2020-April/051889.html\n * gdalvrt.xsd: add 'dataAxisToSRSAxisMapping' attribute for GCPList element (#2378)\n\nWCS driver:\n * pass user-supplied progress function to curl HTTP request when using DirectRasterIO\n\nWMS driver:\n * IReadBlock(): limit number of tiles downloaded at once\n * Use curl_multi_wait instead of socket API (#1789)\n * AGS: Remove unused parameters from url\n\n## OGR 3.1.0 - Overview of Changes\n\n## Core\n\n* Support API-level precision/round for geometry WKT (#1797)\n* OGR SQL: make LIKE behave in a case sensitive way from now\n* OGR SQL: support constructs 'A OR B OR C ... OR N' with many successive OR\n* SQL SQLite: do not propagate 'IS / IS NOT value' constructs to OGR SQL\n* SQL SQLite: add support for ST_MakeValid() using OGRGeometry::MakeValid() if not exposed by Spatialite already\n* Rename swq.h->ogr_swq.h and install it, mark SQL query parse API with\nCPL_UNSTABLE_API macro (#1925)\n* SQLite dialect: fix issue when using JOIN on a layer without fast filter count capability\n* OGRSimpleCurve::getPoints() with XYZM: fix wrong stride used for M array\n* OGRSimpleCurve: fix reversePoints() and addSubLineString() to take into account M dimension\n* Add OGR_G_CreateGeometryFromEsriJson() and map it to SWIG\n* OGRLinearRing::isPointOnRingBoundary(): fix incomplete test that could falsely return true if the point was aligned with a segment, but not between the nodes. Impact correct reconstruction of holes in shapefile driver\n* OGRGeometryFactory::ForceTo(): fix crash when forcing a MultiPolygon Z/M/ZM to a CompoundCurve (#2120)\n* OGRGeometryFactory::forceToMultiLineString(): fix for a GeometryCollection of LineStringZ/M/ZM (#1873)\n* OGRGeometryRebuildCurves(): only try to reconstruct curved geometry if one of the input geometries has really a non-linear portion\n* curveFromLineString(): make sure to exactly close the compound curve if the input curve is itself closed\n* GDALDataset::CopyLayer(): fix crash when using DST_SRSWKT option. And also set SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER)\n* Add OGR_G_RemoveLowerDimensionSubGeoms()\n\n## OGRSpatialReference\n\n* Revise how SRS methods deal with TOWGS84. Add OSR_ADD_TOWGS84_ON_IMPORT_FROM_EPSG, OSR_ADD_TOWGS84_ON_EXPORT_TO_PROJ4 and OSR_ADD_TOWGS84_ON_EXPORT_TO_WKT1 configuration options. See https://github.com/OSGeo/gdal/commit/cc02dc4397c7ec43ec4c4b842e5faabe16c54904 for details\n* SetFromUserInput(): add capability to import PROJJSON\n* add ExportToPROJJSON() (PROJ >= 6.2)\n* GetAxis(): make it work with a compound CRS (#1604)\n* Coordinate transformation: fix invalid output with some input coordinates in EPSG:4326 to EPSG:3857 transformation (3.0 regression)\n* Coordinate transformation: Coordinate transformation: add a OGR_CT_OP_SELECTION=PROJ/BEST_ACCURACY/FIRST_MATCHING config option. Defaults to PROJ for PROJ >= 6.3\n* importFromWkt(): emit a CPLError() in case of import failure (#1623)\n* Add OSRGetAxesCount() to C API and SWIG bindings\n* Add OSRPromoteTo3D() and map it to SWIG (PROJ >= 7) (#1852)\n* importFromESRI(): acept COMPD_CS (#1881)\n* add an internal cache for importFromEPSG() and importFromWkt(). Helps performance for MapServer PROJ6 migration\n* Add support for Vertical Perspective projection (#1856)\n* Add a OSRGetPROJSearchPaths() function and a SWIG osr.GetPROJVersionMicro()\n* Fix use-after-free issue when destroying a OGRSpatialReference object in a thread when another thread has created it but has been destroy in-between\n* Coordinate transformation: make it work with hacky WKT1 rotated pole from netCDF driver\n* Add OGR_GeomTransformer_XXXX API that wraps OGRGeometryFactory::transformWithOptions() and expose it to SWIG (fixes #1911)\n* Fix PROJ usage across fork() calls (#2221)\n* OGRCoordinateTransformation: correctly deal when transforming CRS that includes +lon_wrap= or similar qualifiers\n* Add OSRIsDerivedGeographic()\n* EPSGTreatsAsNorthingEasting(): fix it to properly deal with Polar projected CRS with northing,easting order\n\n## Utilities\n\n* ogrinfo: add a -nogeomtype switch\n* ogrinfo: fix to output WKT2 SRS by default. Was done correctly for several geometry column, but not single one\n* ogr2ogr: emit better error message when using -f VRT\n* ogr2ogr: improve performance of -explodecollections on collections with big number of parts\n* ogr2ogr: avoid non-relevant warning 'Input datasource uses random layer reading, but output datasource does not support random layer writing' when converting one single layer\n* ogr2ogr: allow to combine -nlt CONVERT_TO_LINEAR and -nlt PROMOTE_TO_MULTI (#2338)\n* ogr2ogr: add a -makevalid switch (requires GEOS 3.8 or later) and expose it in Python as makeValid=True options of gdal.VectorTranslate()\n\n## OGR drivers\n\nMultiple drivers:\n * GML/WFS: add support for Date, Time and DateTime fields\n * GeoJSONSeq & TopoJSON: avoid false positive detection and errors on unrelated http[s]:// filenames\n\nAmigoCloud driver:\n * Modify amigocloud URL endpoint.\n\nAVCE00 driver:\n * fix alternance from sequential to per-FID reading\n\nCAD driver:\n * Fix read ellipse and arc (#1886)\n\nDXF driver:\n * Re-add some header and trailer elements that caused compatibility issues with recent Autocad versions (#1213)\n * Generate correct HATCH boundary elliptical arc segments for certain start/end angles\n * Skip \"Embedded Object\" sections in 2018 version DXFs\n * Specify maximum gap between interpolated curve points, configurable with OGR_ARC_MAX_GAP\n * do not error out if trying to create a OGR_STYLE field\n * fix handling of SPLINE whose first knot is at a very very close to zero negative (#1969)\n * do not discard Z value when reading a HATCH (#2349)\n * write (100, AcDbEntity) before (8, layer_name) (#2348)\n * Correct handling of \"off\" and \"frozen\" layers in blocks (#1028)\n\nDWG driver:\n * add support for ODA 2021.2 (Windows builds)\n\nElasticSearch driver:\n * rename driver to Elasticsearch (s lowercase for search)\n * update geometry type name for Points\n * Enable support for Elasticsearch 7 (#1246)\n * Set 'application/json' in RunRequest() with POST (#1628)\n * GeoJSON type field should be mapped as text in ES>=5\n * add FORWARD_HTTP_HEADERS_FROM_ENV open option to pass HTTP headers down to the ES server\n * translate constructs like CAST(field_name AS CHARACTER[(size)]) = 'foo' to ES query language\n\nESRIJson driver:\n * attempt identification of SRS from database entries (#2007)\n * do not require a 'geometry' member to be present in a feature\n\nGeoJSON driver:\n * on writing, format OFTDate and OFTDateTime as ISO 8601 strings rather than OGR traditional formatting\n * add a DATE_AS_STRING open option that can be set to YES to disable autodetection of date/time/datetime\n * Advertise UTF-8 encoding of strings (#2151).\n * report 3D layer geometry types (#1495)\n * fix recognizing some documents with members sorted alphabetically (#1537)\n * avoid SetFeature() to repeat first feature when looping over features (#1687)\n * use VSIOverwriteFile() to fix update of file on Windows (fixes https://github.com/qgis/QGIS/issues/28580)\n * Transform MAX_OBJECT_SIZE to runtime environment option - OGR_GEOJSON_MAX_OBJ_SIZE\n * on reading of a file that use crs.name = urn:ogc:def:crs:OGC:1.3:CRS84, report EPSG:4326 as we used to do in GDAL 2 (#2035)\n * in writing mode, implement GetExtent() (#2269)\n * Add ID_GENERATE option for generating missing feature ids (#2406)\n\nGeoJSONSeq driver:\n * make Open() return successfully only if at least one feature is detected\n\nGML driver:\n * support reading standalone geometry (#2386)\n * fix axis order issue when decoding AIXM ElevationPoint (#2356)\n * fix axis order issue with gml:CircleByCenterPoint and gml:ArcByCenterPoint (# 2356)\n * fix handling of angles with ArcByCenterPoint and urn:ogc:def:crs:EPSG::4326, and compound curves made of a sequence of straight lines and ArcByCenterPoint in a <segments> (#2356)\n\nGPKG driver:\n * change default value of OGR_GPKG_FOREIGN_KEY_CHECK to NO, so as to avoid issues in downstream software\n * insert more accurate spatial extent in gpkg_contents\n * on layer creation, check if the SRS is consistent with its advertise AUTHORITY/ID, and if not do not use official EPSG entries (#1857)\n * allow parsing datetime serialized as OGR strings, and emit warnings when unrecognized content is found (#2183)\n * when writing a layer of geometry wkbUnknown, make sure to set gpkg_geometry_columns.z/m to 2 when there are geometries with Z/M values (#2360)\n\nKML driver:\n * set OAMS_TRADITIONAL_GIS_ORDER for SRS returned on returned layers\n\nLIBKML driver:\n * make it accept /vsigzip/foo.kml.gz files (#1743)\n\nMITAB driver:\n * Add friendly layer name (description) support.\n * Fix creation of long field names in local encoding (#1617)\n * don't left truncate numeric values in the .dat when the field formatting is incompatible, but error out (#1636)\n * Add custom datum/spheroid parameters export\n * Update WindowsLatin2 definition (#1571)\n * identify correctly GDA2020 datum\n * do not set (by default) TOWGS84 when reading a known Datum\n * cleanup management of update flag (#2170)\n\nMSSQLSpatial driver:\n * Fix handling empty geometries (#1674)\n * Fix handling mixed geometries (#1678)\n * avoid GetExtent() to mess with GetNextFeature() statement, so that ogrinfo -al works properly\n\nMVT driver:\n * make CONF option accept a filename as well\n * reduce memory usage when processing big geometries (#1673)\n\nMySQL driver:\n * Add SRID to geometry when creating layer table (#1015)\n * use INFORMATION_SCHEMA.ST_GEOMETRY_COLUMNS to get SRSId\n\nNAS driver:\n *  disable generation of .gfs file in read-only file systems (or intended to be), similarly to GML driver\n\nnetCDF driver:\n * add read/write support for CF-1.8 Encoded Geometries\n * add support for vector products Sentinel3 SRAL MWR Level 2\n\nNGW driver:\n * Fix dataset access mode\n * Add support for layers geometry types with Z\n\nOAPIF driver (previously WFS3):\n * updated to OGC API - Features 1.0 core spec (#1878)\n * correctly handle user query string parameters in connection URL (#1710)\n * add persistent curl session for better performance\n * add capability to use a XML Schema to build the layer field definition and geometry type\n * add capability to use JSON schema\n * add support for rel=queryables and cql-text\n * add a IGNORE_SCHEMA=YES/NO open option\n * implement filter-lang=json-filter-expr\n * avoid issues with double slash when building a /collections URL\n\nOSM driver:\n * make error message hopefully clearer and more complete (#2100)\n\nPDF driver:\n * fix reading polygon with holes and Bezier curves (#1932)\n * add a GDAL_PDF_LAUNDER_LAYER_NAMES configuration option\n * fix reading strings with escape sequences\n\nPostgreSQL driver:\n * add support for PostgreSQL 12 (#1692)\n * add support for PG:service=xxx syntax and SERVICE open option (#2373)\n * support PostGIS schema installed in non-public schema (#2400)\n * do not attempt to create VARCHAR(n) columns with n >= 10485760 (#1508)\n * be more restrictive when deducing non-nullability of columns in SQL result layers (#1734)\n\nShape driver:\n * add read/creation/update support for .shz and .shp.zip\n * identify a EPSG code if the confidence is >= 90 (https://github.com/OSGeo/PROJ/issues/1799)\n * better deal with empty .shp+.shx and SHAPE_RESTORE_SHX (#1525)\n * launder layer name to get Windows compatible filename\n * try to better deal with polygons with parts touching on an edge (which is illegal simple features) (#1787)\n * fix crash when creating a layer with a wkbNone geometry type but a SRS (3.0 regression)\n * include fseek() optimization of https://github.com/OSGeo/shapelib/pull/3\n * expose .dbf and .cpg source encodings in the SHAPEFILE metadata domain\n * correctly update layer extent when first feature is a point at (0,0) (#2269)\n\nS57 driver:\n * s57objectclasses.csv: add missing TXTDSC attribute for DRYDOC class (#1723)\n * s57objectclasses.csv: add wtwdis and unlocd for distance marks from IENC (#2123)\n * s57objectclasses.csv: add PICREP attribute to LNDMRK object class\n * Added handling of ISDT when using updates (#895)\n * Added creation of additional field \"ATTF\" when missing while updating (#2249)\n\nSOSI driver:\n * Append values from duplicate fields when setting new appendFieldsMap open option (#1794)\n\nSQLITE driver:\n * fix crash in loading sqlite extensions on iOS (#1820)\n * fix conversion of geometry collections (and derived types) in geometry collections as Spatialite geometries, by flattening the structure\n * cleanup management of update flag (#2162)\n * GetSpatialiteGeometryHeader(): fix bug regarding detection of empty geometries\n\nSXF driver:\n * Add open options with RSC file name\n * Use SXF_LAYER_FULLNAME from dataset open options\n * Use SXF_SET_VERTCS from dataset open options\n * Add OGRSXFLayer::CanRecode and check it for OLCStringsAsUTF8 capability\n * Add driver identify function (#1607)\n\nVFK driver:\n * use a faster implementation of VFKDataBlockSQLite::LoadGeometryPolygon()\n\nVRT driver:\n * set OAMS_TRADITIONAL_GIS_ORDER for LayerSRS (#1975)\n\nWaSP driver:\n * on creation, make sure the layer geometry type set on the feature definition is wkbLineString25D\n\nWFS driver:\n * Support FlatGeobuf as WFS outputformat (#2135)\n * skip silently GeoServer EPSG:404000 dummy CRS\n\nXLSX driver:\n * add support for .xlsm extension\n\n## SWIG Language Bindings\n\nAll:\n * add osr.SetPROJSearchPath(path) that can be used since setting PROJ_LIB from C# does no work (#1647)\n\nPython bindings:\n * add 'add' option to gdal.Rasterize\n * add hint&workaround for ImportError on Windows Python >= 3.8\n * add compatibility with SWIG 4.0 (#1702)\n * build modules in parallel\n * honour gdal.UseExceptions() in numpy related methods (gdalnumeric module) (#1515)\n * update to SWIG 3.0.12 to have better error message (#1677)\n * make the feature iterator on the layer call ResetReading()\n * Removed calls to deprecated imp module (#2264)\n * Add numpy as extras_require dependency (#2158)\n * emit exception is osr.SpatialReference(wkt) fails, even if in non-UseExceptions() mode, to avoid later cryptic exception (#2303)\n * NUMPYDataset::Open() / gdal_array.OpenArray(): honour writable flag of the numpy array to decide update status of GDAL dataset\n * fix invalid check for Dataset.ReadAsArray(buf_obj=some_array, interleave='pixel') scenario\n\n# GDAL/OGR 3.0.0 Release Notes\n\n## In a nutshell...\n\n * Implement RFC 73: Integration of PROJ6 for WKT2, late binding capabilities, time-support and unified CRS database. PROJ >= 6 is now a build requirement\n    https://trac.osgeo.org/gdal/wiki/rfc73_proj6_wkt2_srsbarn\n * New GDAL drivers:\n  - DAAS: read driver for Airbus DS Intelligence Data As A Service\n  - TileDB: read/write driver for https://www.tiledb.io (#1402)\n * New OGR drivers:\n  - MongoDBv3: read/write driver using libmongocxx v3.4.0 client (for MongoDB >= 4.0)\n * Improved drivers:\n   - FITS: read/write support for scale, offset and CRS\n   - netCDF: read support for groups\n   - PDF: add a COMPOSITION_FILE creation option to generate a complex document\n   - PDS4: subdataset creation support, read/write table/vector support\n * Support for minimal builds on Unix (#1250)\n * Add a docker/ directory with Dockerfile for different configurations\n * Continued code linting\n\n## New installed files\n\n * Resource file: pdfcomposition.xsd\n\n## Removed installed files\n\n * Removal of resource files related to EPSG and ESRI CRS databases: compdcs.csv, coordinate_axis.csv, datum_shift.csv, ellipsoid.csv, esri_epsg.wkt, esri_extra.wkt, esri_Wisconsin_extra.wkt, gcs.csv, gcs.override.csv, gdal_datum.csv, geoccs.csv, pcs.csv, pcs.override.csv, prime_meridian.csv, projop_wparm.csv, unit_of_measure.csv, vertcs.csv, vertcs.override.csv\n\n## Backward compatibility issues\n\nSee MIGRATION_GUIDE.txt\n\n## GDAL/OGR 3.0.0 - General Changes\n\nBuild(Unix):\n * Allow internal drivers to be disabled (#1250)\n * Fix build with OpenBSD which doesn't support RLIMIT_AS (#1163)\n * Fix MacOS build failures due to json-c\n * Poppler: require pkg-config\n * PostgreSQL: Switch from pg_config to pkg-config (#1418)\n * fix build --without-lerc (#1224)\n * fix netcdf_mem.h detection in netcdf 4.6.2 (#1328)\n * Fix build --with-curl --without-threads (#1386)\n\nBuild(Windows):\n * nmake.opt: remove unicode character at line starting with '# 4275' that apparently cause build issues with some MSVC versions (#1169)\n\nAll:\n * PROJ >= 6.0 is a required external dependency\n * libgeotiff >= 1.5 should be used for builds with external libgeotiff\n * Poppler: drop support for Poppler older than 0.23.0\n * Poppler: add support for 0.72.0, 0.73.0, 0.75.0, 0.76.0\n\n## GDAL 3.0.0 - Overview of Changes\n\nPort:\n * Add capability to define external VSI virtual file systems from C API (#1289)\n * MiniXML: Fix wrong node order when calling CPLAddXMLAttributeAndValue() after CPLCreateXMLElementAndValue()\n * /vsicurl/: ReadMultiRange(): use default implementation if there is a single range (#1206)\n * /vsicurl/: ignore proxy CONNECT response headers (#1211)\n * /vsicurl/: automatically detect signed URLs where host ends with a port number; also detect signed URLs as created with the AWS4-HMAC-SHA256 method (#1456)\n * /vsizip/: Add config option to create zip64 extra fields by default (#1267)\n * /vsis3/, /vsigs/, /vsiaz/: add HTTP retry logic in writing code paths\n * Fix data race in VSIFileManager::Get\n * cpl_zipOpenNewFileInZip3: fix memory leak in error code path. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13103.\n * VSIGZipWriteHandleMT: avoid potential deadlock in case of error\n * Fix assertion in CPLGetValueType when testing non-ASCII chars\n * /vsihdfs/: fix Read() when more than one hdfsRead call is needed (#1349)\n * Fix potential buffer overflow in CPLODBCSession::Failed (#1390)\n * /vsitar/: handle .tar file header with space padding instead of 0 for file size (#1396)\n\nCore:\n * Support blocks larger than 2 billion pixels/bytes\n * Make CPLHaveRuntimeSSSE3() and CPLHaveRuntimeAVX() use GCC constructor functions\n * Move RawDataset base class to gcore/ (#1268)\n * RasterBand/Dataset::RasterIO(): enforce access mode on write\n * PAM: preserve existing metadata when setting new one (#1430)\n * RawDataset: use generic RasterIO() implementation when non-nearest resampling is asked (#1301)\n * DumpJPK2CodeStream(): dump PLT and POC markers\n\nAlgorithms:\n * RPC transformer: test success code of GDALRPCTransform() in GDALCreateRPCTransformer()\n * RPC transformer: add a RPC_FOOTPRINT transformer option to provide a polygon in long/lat space where the RPC is valid, and also make gdalwarp use GDALSuggestedWarpOutput2() to restrict the bounding box of the output dataset\n * GDALFillNodata(): fix wrong comparison in QUAD_CHECK() macro: nNoDataVal is only assigned to target_y values (#1228)\n * GDALFillNodata(): reinitialize panLastY array to nNoDataVal before bottom to top pass (#1228)\n * GDALFillNodata(): do an extra iteration to reach the maximum search distance in all quadrants (#1228)\n * GDALRasterizeLayersBuf():support any GDAL data type for buffer,and pixel and line spaceing arguments\n * GDALResampleChunk32R_Mode: performance improvement\n * Rasterize with MERGE_ALG=ADD: avoid burning several times intermediate points of linestrings (#1307)\n * rasterize: fix crash when working buffer is larger than 2GB (#1338)\n\nUtilities:\n * gdal_translate: add \"-nogcp\" option (#1469)\n * gdal_contour: remove explicit width/precision=12/3 of the elev field (#1487)\n * gdaldem hillshade: add -igor option (#1330)\n * gdalwarp -crop_to_cutline: do not round computed target extent to be aligned on the grid of the source raster if -tr is set (restore partially pre 2.4 behavior) (#1173)\n * gdalwarp: assume -tap when using -crop_to_cutline, -tr and -wo CUTLINE_ALL_TOUCHED=TRUE, so as to avoid issues with polygons smaller than 1x1 pixels (#1360)\n * gdal2tiles: give local tile layer and basemap layers same min/max zoom levels as generated tile cache\n * gdal2tiles: fix breakage of openlayers.html getURL() javascript function, introduced in GDAL 2.3.3 / 2.4.0 (#1127)\n * gdal2tiles: prevent accidental copy of full GeoTIFF into temporary .vrt file\n  gdal2tiles: Refactor and fix multiprocessing completion handling\n * gdal_fillnodata.py: preserve color interpretation and table\n * gdal_fillnodata.py: do not set geotransform if source doesn't have one\n * gdalsrsinfo: do not silence errors when calling SetFromUserInput()\n * gdal_retile: Use nodata value from origin dataset\n * gdal_edit.py: allow setting band-specific scale and offset values (#1444)\n * validate_cloud_optimized_geotiff.py: check if file is only greater than 512px (#1403)\n * validate_cloud_optimized_geotiff.py: report headers size\n\nMultidriver fixes:\n  * GTiff, GPKG, MBTiles, PostgisRaster drivers: ensure that main dataset and overviews share the same lock, so as to avoid crashing concurrent access (#1488)\n\nADRG driver:\n * modified to ensure that there is no confliction between ADRG and SRP when opening a .gen file (#953)\n\nAIGRID / AVCBin:\n * fix filename case adjustment that failed on /vsi filesystems (#1385)\n\nBAG driver:\n * fix potential nullptr deref on corrupted file\n\nCOSAR driver:\n * avoid out-of-bound write on corrupted dataset. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12360.\n\nEEDA driver:\n * report 'path' metadata in 'path' field\n\nGPKG driver:\n * allow negative srs_id values in gpkg_spatial_ref_sys\n * reduce memory requirements for cached tiles\n\nGTiff diver:\n * supports tiles/strips larger than 2GB\n * add APPEND_SUBDATASET=YES capability to create subdataset / new TIFF page to an existing file\n * only report scale/offset deduced from ModelTiepointTag and ModelPixelScaleTag if the SRS has a vertical component (and thus currently if GTIFF_REPORT_COMPD_CS is set) (https://issues.qgis.org/issues/20493)\n * TIFF Lerc: properly initialize state after Create() so that BuildOverviews() succeed (#1257)\n * emit merged consecutive multi-range reads (#1297)\n * add warnings when using unsupported combination of internal mask+external overview, and fix COPY_SRC_OVERVIEWS=YES so that it does not copy ALL_VALID masks (#1455)\n * do not generate a TIFFTAG_GDAL_METADATA with color interpretation information for JPEG YCbCr compression\n * Internal libtiff and libgeotiff: resync with upstream\n\nFITS driver:\n * new functions for Scale Offset and FITS World Coordinate System read and write (#1298)\n\nGeoRaster driver:\n * Fix memory leaks\n\nHDF5 driver:\n * support reading blocks larger than 2GB\n * fix handling of attributes of type SCHAR, UCHAR, USHORT and UINT (https://github.com/mapbox/rasterio/issues/1663)\n * detect nodata from netCDF _FillValue (#1451)\n * add more strict checks for accepting datasets for GCP, and handle nodata in GCP too (#1451)\n\nIGNFHeightAsciiGrid driver:\n * add support for RAF18.mnt\n\nJPEG driver:\n * fix GDAL 2.3.0 performance regression when decoding JPEG (or GPKG using JPEG) images (#1324)\n\nKEA driver:\n * add support for /vsi file systems\n\nKMLSuperOverlay driver:\n * report color table of single overlay datasets, and also handle some variation in the KML structure (https://issues.qgis.org/issues/20173)\n\nMRF driver:\n * sparse index and internal resampling fixes\n * fix integer overflow. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13974\n\nMrSID driver:\n * fix potential crash when a zoom level cannot be opened\n\nnetCDF driver:\n * implement support for NetCDF-4 groups on reading (#1180)\n * support complex data types (#1218)\n * fix crash when opening a dataset with an attribute of length 0 (#1303)\n * fix IWriteBlock() to support non-scanline blocks, and use the chunk size\n * better deal with datasets indexed with unusual order for x/y dimensions\n * avoid inappropriate shift by -360 when attribute axis=X is set (#1440)\n\nNGW driver:\n * Add CreateCopy function\n\nNITF driver:\n * avoid harmless floating point division by zero. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12844.\n\nPCIDSK driver:\n * avoid uint overflow and too big memory allocation attempt. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12893\n\nPDF driver:\n * Add a COMPOSITION_FILE creation option to generate a complex document\n * And a gdal_create_pdf.py sample script\n * Fix selection of Poppler PDF layers with duplicate names (#1477)\n * avoid division by zero when generating from vector content whose bounding box is almost a horizontal or vertical line. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13408\n\nPDS3:\n * fix decoding of band interleaved images (such as for CRISM HSP) (#1239)\n * add support for ENCODING_TYPE=DCT_DECOMPRESSED (#1457)\n\nPDS4 driver:\n * add subdataset creation support, and getting/setting the band unit\n * update template and code to PDS v1B00 schema versions\n\nVRT driver:\n * Python pixel functions: add shared object name for python 3.7\n * VRT: in case of no SourceProperties, do not use global shared datasets, but only shared to the owning VRTDataset, to avoid potential reference cycles and annoying related issues. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13476.\n\nWCS driver:\n * avoid potential out-of-bound access\n\nWMS driver:\n * use proper JSon parsing for ESRI MapServer document (#1416)\n * Add url parameters escaping to ArcGIS Server minidriver\n * avoid warning when a wms cache doesn't exist\n\nXPM driver:\n * fix read heap buffer overflow on corrupted image. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13455.\n\nXYZ driver:\n * add creation options DECIMAL_PRECISION and SIGNIFICANT_DIGITS like with AAIGrid\n * fix regression regarding header lines that are not X,Y,Z (#1472)\n\n## OGR 3.0.0 - Overview of Changes\n\nCore:\n * Add OGR_G_MakeValid() (requires GEOS 3.8)\n * change prototye of OGRFeature::SetField( int iField, int nBytes, GByte *pabyData ) to ( ... , const void* pabyData), and same for OGR_F_SetFieldBinary().\n * Polyhedral surface: fix importFromWKT to properly fix Z/M flag\n * OGRBuildPolygonFromLines: avoid generating effectively duplicate points\n * OGRBuildPolygonFromEdges(): improve performance. https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13798\n * OGRGeometryFactory::transformWithOptions(): if WRAPDATELINE=YES, test that the geometry SRS is geographic\n * OGRGeometryFactory::GetCurveParameters(): fix assertion when coordinates are very near 0\n * Expat XML parsing: add OGR_EXPAT_UNLIMITED_MEM_ALLOC=YES config option to workaround failure for very specific cases\n * OGRLineString::segmentize(): fix issues when segment length is divisible by maxlength (#1341)\n * OGR SQL: limit recursion in swq_expr_node::Check(). Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13540\n * OGRGeometry / SFCGAL: fix dead code, memory leaks and potential nullptr deref.\n\nOGRSpatialReference:\n * Deep rework due to RFC 73 integration\n * SRS_WKT_WGS84 macro replaced by SRS_WKT_WGS84_LAT_LONG\n * Add OSRSetPROJSearchPaths(), OSRExportToWktEx(), OSRGetName(), OSRIsSameEx(), OSRGetCRSInfoListFromDatabase(), OSRGetAreaOfUse(),OSRGetAxisMappingStrategy(), OSRSetAxisMappingStrategy(), OSRGetDataAxisToSRSAxisMapping()\n * Add OCTNewCoordinateTransformationOptions(), OCTCoordinateTransformationOptionsSetOperation(), OCTCoordinateTransformationOptionsSetAreaOfInterest(), OCTDestroyCoordinateTransformationOptions(), OCTNewCoordinateTransformationEx(), OCTTransform4D()\n * Remove OSRFixupOrdering(), OSRFixup(), OSRStripCTParms(), OCTProj4Normalize(), OCTCleanupProjMutex(), OPTGetProjectionMethods(), OPTGetParameterList(), OPTGetParameterInfo()\n\nUtilities:\n * ogrinfo: report TITLE metadata in summary layer listing\n * ogr2ogr: for drivers supporting ODsCCreateGeomFieldAfterCreateLayer, do not create geometry column if -nlt none\n * ogrmerge.py: add shared='1' to speed-up -single mode with many layers\n\nCARTO driver:\n * Overwrite tables in single transactions\n * Improve documentation and warnings around CARTODBFY (#1445)\n\nCSW driver:\n * fix crash when geometry parsing fails (#1248)\n\nDODS driver:\n * fixes related to memory leaks and null pointer dereferences\n\nDXF driver:\n * support RGB true color values\n * fix the coloring of ByBlock entities inserted via a ByLayer INSERT\n * fix double-free issue in case of writing error. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13516.\n\nFileGDB/OpenFileGDB drivers:\n * be robust when winding order of outer ring is incorrect (#1369)\n\nElasticsearch driver:\n * Fixed index comparison bug when a index have at least one mapping\n * Fix _mapping url for Elasticsearch 7 compatibility\n\nGeoJSON driver:\n * speed-up random reading with GetFeature() by storing a map FID->(start,size) to retrieve performance similar to GDAL 2.2 or before (https://issues.qgis.org/issues/21085)\n * report 3D layer geometry types (#1495)\n\nGeoJSONSeq driver:\n * be more robust to invalid objects, and fixes performance issue on corrupted files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13770.\n\nGML driver:\n * write SRSName element in .gfs when parsing a GML file with srsName only on top-level boundedBy element (#1210)\n * Add \"FeatureType\" to list of suffixes recognized by XSD parser (#1313)\n * GML/WFS: add minimum support for 'hexBinary' type (as string) (#1375)\n\nGMLAS driver:\n * avoid null pointer dereference on some schemas\n * do not use space as separator for schema filename in XSD open option (#1452)\n\nGMT driver:\n * use file extension based detection to accept files without header (#1461)\n\nMongoDB driver:\n * fix related to filters in GetFeature()\n\nMITAB driver:\n * Add encode/decode feature labels to/from UTF-8 encoding while MIF file read/write (#1151)\n * .tab: fix deleting a feature without geometry (#1232)\n * adapt dynamically default projection bounds to false_easting/false_northing values (#1316)\n * avoid potential assertion or stack buffer overflow on corrupted .ind files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11999\n * prevent potential infinite recursion on broken indexes. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12739.\n * TAB_CSLLoad(): fix performance issue. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13588\n * avoid long processing on corrupted .mif files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13152\n\nMSSQLSpatial driver:\n * Add support for curve geometries (#1299)\n * Add option to expose the FID column as a feature attribute (#1227)\n * Adding improved extent queries\n * Fix extent calculation for geography type, take care of invalid geometries\n\nNGW driver:\n * Fix get children API. Add authorization support to create dataset options\n * Add support for feature extensions in OGRFeature native data\n * Add feature query via chunks, attribute and spatial filter support\n * Add resource type and parent identifier to metadata\n * Fix batch update features\n * Add JSON_DEPTH open option\n * Add check forbidden field names, check duplicate field names.\n\nOCI driver:\n * Add MULTI_LOAD to open options (#1233)\n * Fix memory leaks\n\nODS driver:\n * allow opening tables with empty cells with huge values of columns-repeated attribute at end of line (#1243)\n * avoid potential null pointer dereference when writing to corrupted filename. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12976.\n\nOGDI driver:\n * switch incorrect order for east/west bounds of spatial filter\n\nPDS4 driver:\n * add read/write support for tables (vector support)\n\nPGDump driver:\n * in WRITE_EWKT_GEOM=YES non-default mode, export geometries to ISO WKT so as to be able to export XYZM (#1327)\n * Fix emitted SQL when UNLOGGED=ON\n\nPLScenes driver:\n * update plscenesconf.json with SkySatCollect and add missing fields for PSOrthoTile\n\nSDTS driver:\n * error out if too many errors are raised to avoid timeout in oss-fuzz. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13819.\n\nSelafin driver:\n * avoid null pointer dereference on corrupted files. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12356.\n\nShapefile driver:\n* DeleteLayer(): make it delete .cpg, .sbn, .sbx, .qpj and other sidecar files (#1405)\n * speed-up creation of lots of fields with name collisions. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13065\n\nSQLite driver:\n * set sqlite3_busy_timeout, handle SQLITE_BUSY during tile read (#1370)\n * close database before freeing the spatialite context. Fix crashes on dataset closing, with VirtualShape and recent spatialite versions\n * Spatialite: fix update of geometry_columns_statistics when extent goes to infinity (#1438)\n\nS57 driver:\n * avoid long procession on corrupted datasets. Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13238\n\nSXF driver:\n * Fix wrong EPSG codes range (#1278)\n * Fix memory leaks in SetVertCS()\n\nVFK driver:\n * fix curved geometries being ignored (#1351)\n\nWFS3 driver:\n * handle paging with missing type for rel:next, and better deal with user:pwd in URL\n * use 'id' attribute of collection items, if 'name' not available\n\n## SWIG Language Bindings\n\nAll bindings:\n * add Geometry::MakeValid()\n\nPython bindings:\n * fix Dataset.ReadAsRaster() on CInt16 data type (#82)\n * adding overviewLevel option to WarpOptions\n * add noGCP options to gdal.Translate()\n\n# GDAL 2.x and older\n\nConsult [NEWS-2.x.md](NEW-2.x.md)\n"
        },
        {
          "name": "NEWS.template",
          "type": "blob",
          "size": 0.5458984375,
          "content": "# GDAL/OGR X.Y.Z Release Notes\n\n## In a nutshell...\n\n## New optional dependencies\n\n## New installed files\n\n## Removed files\n\n## Backward compatibility issues\n\nSee [MIGRATION_GUIDE.TXT](https://github.com/OSGeo/gdal/blob/release/X.Y/MIGRATION_GUIDE.TXT)\n\n## Build changes\n\n## Internal libraries\n\n## GDAL X.Y.Z - Overview of Changes\n\n### Port\n\n### Core\n\n### Algorithms\n\n### Utilities\n\n### gdal_utils package\n\n### Raster drivers\n\n## OGR X.Y.Z - Overview of Changes\n\n### Core\n\n### OGRSpatialReference\n\n### Utilities\n\n### Vector drivers\n\n## SWIG Language Bindings\n"
        },
        {
          "name": "PROVENANCE.TXT",
          "type": "blob",
          "size": 17.517578125,
          "content": "== Committers ==\n\nCurrent:\n\nSee COMMITTERS file.\n\nHistorical and Current:\n\n fwarmerdam & warmerda - Frank Warmerdam\n dron - Andrey Kiselev\n danmo & daniel & dmorissette - Daniel Morissette (MapGears)\n dnadeau & denad21 - Denis Nadeau\n kdejong & kor - Kor de Jong (geog.uu.nl / PCRaster)\n aubin - Mark Aubin - Keyhole\n svillene & stephane - Stephane Villeneuve\n kmelero - Ken Melero (SANZ)\n nemec - Philip Nemec (Keyhole)\n pka - Pirmin Kalberer (Sourcepole)\n pgs - Paul Spencer (DM Solutions)\n assefa - Assefa Yewondwossen (DM Solutions)\n jlacroix & julien - Julie Lacroix (Map Gears)\n shadow   (shadow @ dementia.org?)\n mbrudka - Marek Brudka (Filbico?)\n mbp - Mark Phillips (Tiger writer)\n gpotts - Garrett Potts (OSSIM)\n gwalter - Gillian Walter (Atlantis)\n aamici & andrea - Alessandro Amici\n kintel - Marius Kintel - dgnlib only\n lichun - Lichun Wang at ITC.\n hobu - Howard Butler (Hobu Inc)\n bsimon - Benjamin Simon - pgchip\n kshih - Ken Shih\n hsaggu - Harbinder Saggu (Safe Software)\n ryan - Ryan Proulx (Safe Software)\n geh - Graeme Hiebert (Safe Software)\n ssoule - Steve Soule (Vexcel)\n pnagy - Peter Nagy (Vexcel)\n sperkins - Simon Perkins (LANL)\n osemykin - Oleg Semykin\n cees - Cees Wesseling (PCRaster)\n rblazek - Radim Blazek (GRASS)\n cfis - Charles Savage - swig/ruby\n mloskot - Mateusz Loskot\n dwallner - Daniel Wallner\n collinsb - Benjamin Collins (MITRE) - swig/java\n jimg - James Gallager (OPeNDAP)\n kruland - Kevin Ruland\n vgough - Valient Gough - 1999 - configure stuff.\n silke - Silke Reimer (Intevation)\n ilucena - Ivan Lucena (Oracle)\n shalasz - Steve Halasz (Debian)\n srioux - Sylvain Rioux (Softmap)\n ldjohn - Lowell D. Johnson - 2001 - rawdataset.cpp - one commit\n pvachon - Phil Vachon\n klokan - Petr Pridal\n condit - Chris Condit (SDSC)\n retsios - Bas Retsios (ITC)\n rouault - Even Rouault\n rayg - Ray Gardener (Daylon Graphics)\n kosta - Konstantin Baumann\n aaime - Andrea Aime (Openplans)\n gaopeng - Gao Peng (ESRI)\n hannah - hHannah Valbonesi (Safe Software)\n mchapman - Martin Chapman\n dreamil - Swapnil Harjare (Indictrans)\n\n== Outstanding Issues ==\n\nIn gdal/data we have several coordinate system dictionary files derived in one fashion or another from other source (via translation scripts):\n\n* gdal/data/cubewerx_extra.wkt: derived from definitions distributed by Cubewerx, rights unclear. See http://trac.osgeo.org/gdal/ticket/2165\n* gdal/data/ecw_cs.wkt: Derived via much processing from ERMapper GDT definitions, rights unclear.  See http://trac.osgeo.org/gdal/ticket/2162\n\n== Included Libraries ==\n\n* zlib: gdal/frmts/zlib\n* libtiff: gdal/frmts/gtiff/libtiff\n* libgeotiff: gdal/frmts/gtiff/libgeotiff\n* libjpeg: gdal/frmts/jpeg/libjpeg\n* libpng: gdal/frmts/png/libpng\n* libgif/libungif: gdal/frmts/gif/libungif\n* libcsf: gdal/frmts/pcraster/libcsf\n* hdfeoslib: gdal/frmts/hdf4/hdf-eos\n\n== Non-free Libraries ==\n\nNote: all the following are build options, not required.\n\n* Oracle OCI for OCI OGR driver.\n* ESRI SDE for SDE OGR Driver.\n* ECW SDK for ECW/JP2ECW GDAL driver (close to free now I think).\n* Kakadu for JP2KAK GDAL driver.\n* MrSID SDK for MrSID/JP2MrSID driver.\n* DWGdirect library for DWG writing.\n\n== Code Reviewed ==\n\n=== gdal/port ===\n\n* Various contributors including Daniel Morissette, Andrey Kiselev, Frank Warmerdam and Mateusz Loskot.\n* cpl_minizip* files come from the \"minizip\" distribution. Placed under a modified BSD Licence (see port/LICENCE_minizip). Added to gdal/LICENSE.TXT\n\n=== gdal/gcore ===\n\n* Various contributed, but mostly FrankW.\n* All copyright held by FrankW.\n* Version.rc contributed without copyright notice by Martin Daly, clarification requested.  Martin explicitly agreed by email, notice applied, all ok.\n\n=== gdal/alg ===\n\n* contour.cpp: Joint copyright between FrankW and ACT.\n* gdal_crs.c: derived from old GRASS/UMichigan code also under MIT license, properly noted in headers.\n* gdalmediancut.cpp: derived from libtiff tiffmedian.c utility under a GDAL compatible license.  Properly noted in headers.\n* gdalrasterize.cpp: Derived from OpenEV code.  Relicensed from LGPL to MIT by explicit grant from copyright holder (Frank Warmerdam).\n* gvgcpfit.c: Believed to be derived from Numerical Recipes in C.  It has not been used for some time, but was still in the CVS repository.  I have now removed it.\n* llrasterize.c: Derived from GD which has compatible MIT license.  Properly noted in header.\n* thinplatespline.cpp: Contributed by VIZRT Inc.,  Relicensed to MIT with their explicit permission as noted in the header.\n\n=== gdal/data ===\n\n* Contains various data files without copyright messages embedded.\n* cubewerx_extra.wkt: derived from definitions distributed by Cubewerx, rights unclear. See http://trac.osgeo.org/gdal/ticket/2165\n* ecw_cs.wkt: Derived via much processing from ERMapper GDT definitions, rights unclear. See http://trac.osgeo.org/gdal/ticket/2162\n* seed_2d.dgn, seed_3d.dgn: Exact source of these files is unclear.  The files contain no substantial creative content since all but the header elements were stripped.  Judged to acceptable use.\n* NTS-50kindex.csv: Provided by Matt Wilkie, derived from NRCan dataset, rights unclear.  See http://trac.osgeo.org/gdal/ticket/2164 (closed - this file isn't actually in the source tree - it is separately distributed as part of FWTools!)\n\n=== gdal/apps ===\n\n* gdal_contour.cpp: copyright held by ACT.\n* gdaltindex.cpp: copyright held by DM Solutions.\n* gdalwarp.cpp, gdalwarpsimple.cpp: copyright held by i-cubed.\n* gdaldem.cpp: copyright held by Matthew Perry, Even Rouault, and Howard Butler\n               Derived from code by Michael Shapiro, Olga Waupotitsch, Marjorie Larson, Jim Westervelt :\n               U.S. Army CERL, 1993. GRASS 4.1 Reference Manual. U.S. Army Corps of Engineers,\n               Construction Engineering Research Laboratories, Champaign, Illinois, 1-425.\n               Derived from modules of GRASS 4.1 (public domain), properly noted in the headers.\n               See http://trac.osgeo.org/gdal/ticket/2975\n\n=== gdal/doc ===\n\n* no copyright messages in .dox files.\n* ERMapper logo used with permissions.\n* \"ru\" subdirectory (Russian translations) by Andrey Kiselev.\n\n=== gdal/ogr/ogrsf_frmts/generic ===\n\n* Some files here (and elsewhere in OGR) copyright Softmap Inc (but MIT).\n\n=== gdal/ogr/ogrsf_frmts/avc ===\n\n* Some copyright Daniel Morissette, MIT.\n* Included copy of dbfopen.h from Shapelib.  We really ought to reference the one in ../shape.\n\n=== gdal/ogr/ogrsf_frmts/csv ===\n\n* drv_*.html not copyright.\n\n=== gdal/ogr/ogrsf_frmts/dgn ===\n\n* Copyright Avenza Systems (MIT).\n* dgn_pge.cpp, dgn_pge.h, pge_test.cpp, vbe_pge.cpp: copyright Pacific Gas and Electric, all rights reserved!  (this has all been removed from trunk)\n* web/* docs lack any copyright message.  The isff.txt originally came from Intergraph and dgn.html is a reformatted version of that.  Perhaps these ought to move out of GDAL CVS tree - action: this has been removed from svn. (#1813)\n\n=== gdal/ogr/ogrsf_frmts/dods ===\n\n* all FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/fme ===\n\n* All code is Copyright Safe Software, \"All Rights Reserved\"! - License changed to MIT with explicit permission from Dale Lutz.  Copyright still held by Safe.\n\n=== gdal/ogr/ogrsf_frmts/gml ===\n\n* All FrankW, clean.\n\n\n=== gdal/ogr/ogrsf_frmts/grass ===\n\n* copyright Radim Blazek, MIT.\n\n=== gdal/ogr/ogrsf_frmts/ili ===\n\n* ili level code copyright Pirmin Kalberer (Sourcepole), MIT.\n* iom/ili2c.jar is ambiguous.  (#1812) (removed - ok)\n* iom source code is all LGPL (per iom/README.src.txt) but none of the source files have a copyright or license header.  Action: this file has been removed. (#1812)\n\n=== gdal/ogr/ogrsf_frmts/mem ===\n\n* All FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/mitab ===\n\n* Copyright Daniel Morissette, Stepane Villeneuve, Frank Warmerdam (MIT).\n* Some code derived from MapServer with credit in headers, no problem foreseen.\n* All clean.\n\n=== gdal/ogr/ogrsf_frmts/mysql ===\n\n* FrankW, clean.\n* Howard Butler is co-author of some modules (but copyright all FrankW).\n\n=== gdal/ogr/ogrsf_frmts/ntf ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/oci ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/odbc ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/ogdi ===\n\n* Copyright Daniel Morrissette, MIT.\n\n=== gdal/ogr/ogrsf_frmts/pg ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/pgeo ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/rec ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/s57 ===\n\n* added copyright messages to s57tables.h (derived from s57objectclasses.csv).\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/sde ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/sdts ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/shape ===\n\n* inline copy of Shapelib which is dual licensed MIT and LGPL.\n* Note, Shapelib code was written while I was at PCI, but permission was given to release it as open source.\n* Some (OGR) code is Copyright Softmap Inc, MIT.\n\n=== gdal/ogr/ogrsf_frmts/sqlite ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts/tiger ===\n\n* Copyright mostly FrankW, but also Mark Phillips, clean.\n\n=== gdal/ogr/ogrsf_frmts/vrt ===\n\n* FrankW, clean.\n\n=== gdal/ogr/ogrsf_frmts ===\n\n* Some copyright softmap Inc, all MIT.\n\n=== gdal/ogr ===\n\n* SpatialReferenceIdl.idl, GeometryIdl.idl, CoverageIdl.idl: From OGC spec package I believe.  (removed)\n* ogr_capi_test.c: no copyright message, written by Daniel Morissette. Added copyright.\n* oledbgis.h: No copyright message, mostly OGC spec constants.\n* ogr_swq.h, swq.c: Has alternate form of MIT license.  On review this license is functionally equivalent to the general GDAL license.\n* Copyright holders include Frank Warmerdam, Daniel Morissette, Softmap Inc., Stephane Villeneuve., Andrey Kiselev, Information Interoperability Institute\n\n=== gdal/frmts/aaigrid ===\n\n* FrankW, clean.\n\n=== gdal/frmts/aigrid ===\n\n* aigccitt.c: Derived from libtiff - MIT.\n* FrankW, clean.\n\n=== gdal/frmts/airsar ===\n\n* FrankW, clean.\n\n=== gdal/frmts/bmp ===\n\n* AndreyK, clean.\n\n=== gdal/frmts/bsb ===\n\n* FrankW, Mike Higgins, clean.\n\nNOTE: This code is implemented on the basis of work by Mike Higgins.  The\nBSB format is subject to US patent 5,727,090; however, that patent\napparently only covers *writing* BSB files, not reading them, so this code\nshould not be affected.\n\nSee [http://home.gdal.org/projects/bsb/ipi.html]\n\n=== gdal/frmts/ceos ===\n\n* FrankW, clean.\n\n=== gdal/frmts/ceos2 ===\n\n* Atlantis Scientific (now Vexcel Canada), clean.\n\n=== gdal/frmts/dods ===\n\n* OPeNDAP Inc/FrankW, clean.\n\n=== gdal/frmts/dted ===\n\n* FrankW, clean.\n\n=== gdal/frmts/ecw ===\n\n* FrankW, clean.\n\n=== gdal/frmts/elas ===\n\n* FrankW, clean.\n\n=== gdal/frmts/envisat ===\n\n* Atlantis Scientific (now Vexcel Canada), clean.\n\n=== gdal/frmts/fit ===\n\n* Keyhole (Google), clean.\n\n=== gdal/frmts/fits ===\n\n* Simon Perkins (LANL), clean.\n\n=== gdal/frmts/gif ===\n\n* FrankW, clean.\n* libungif is under the MIT license as established in ticket #1818.\n\n=== gdal/frmts/grass ===\n\n* Frank, clean\n* Added copyright header to dist/configure.in\n\n=== gdal/frmts/gtiff ===\n\n* tif_float.c: Industrial Light and Magic - MIT style, but with a credit requirement. Added license notice in gdal/LICENSE.TXT, setup ticket #1819 to streamline it's use.\n* tif_memio.c: FrankW, Mike Johnson and MancTec AB - MIT.\n* Contains copy of libtiff, license terms explicit in source files.\n* Contains copy of libgeotiff, license terms not made clear.  A review of libgeotiff's LICENSE file makes it clear code is public domain unless otherwise noted (which would be FrankW's MIT code)\n\n=== gdal/frmts/gxf ===\n\n* README states:\n  Gilles Clement of Global Geomatics approved this support library\n  for general OpenSource release six months after it was released\n  as part of OGDI.  This should be approximately September of 1999.\n\n* Frank, clean.\n\n=== gdal/frmts/hdf4 ===\n\n* AndreyK, clean.\n* embedded copy of HDF-EOS library with these apparent terms:\n\n Copyright (C) 1996 Hughes and Applied Research Corporation\n\n Permission to use, modify, and distribute this software and its documentation\n for any purpose without fee is hereby granted, provided that the above\n copyright notice appear in all copies and that both that copyright notice and\n this permission notice appear in supporting documentation.\n\nI have added this license to LICENSE.TXT to satisfy the credit requirement.\n\n* cfortHdf.h had \"cfortran.h\" strings, and has been removed.\n\n=== gdal/frmts/hdf5 ===\n\n* FrankW, clean.\n\n=== gdal/frmts/hfa ===\n\n* Mostly copyright Intergraph Corporation, clean.\n* hfacompress.cpp: Sam Gillingham, clean.\n\n=== gdal/frmts/idrisi ===\n\n* Ivan Lucena (Clark University), clean.\n* READMEs for rdc and rst format don't have any copyright details.\n\n=== gdal/frmts/ilwis ===\n\n* ITC, clean.\n* Fixed ilwiscoordinatesystem.cpp header after review of cvs log.\n\n=== gdal/frmts/iso8211 ===\n\n* FrankW, clean.\n\n=== gdal/frmts/jdem ===\n\n* FrankW, clean.\n\n=== gdal/frmts/jp2kak ===\n\n* dbg_file_source.h: Derived from Kakadu, no copyright or other history.  (#1820) (removed - ok)\n* jp2kak_roi.h: Derived from Kakadu with proper credit.  But re-copyrighted FrankW improperly.   (#1820) (removed - ok)\n* Otherwise FrankW, clean.\n\n=== gdal/frmts/jpeg ===\n\n* FrankW, clean.\n* Contains embedded copy of libjpeg - copyright/license notice README was missing and has been added.\n\n=== gdal/frmts/jpeg2000 ===\n\n* AndreyK, clean.\n\n=== gdal/frmts/l1b ===\n\n* AndreyK, clean.\n\n=== gdal/frmts/leveller ===\n\n* Daylon Graphics, clean.\n\n=== gdal/frmts/mem ===\n\n* FrankW, clean.\n\n=== gdal/frmts/mrsid ===\n\n* AndreyK, clean.\n\n=== gdal/frmts/msg ===\n\n* xritheaderparser.cpp, xritheaderparser.h: Copyright ITC and R. Alblas and released under the GPL.   (#1821)  The GPL code has been removed and reimplemented a different way.  Problem resolved.\n* the rest, ITC, clean\n\n=== gdal/frmts/msgn ===\n\n* msg_basic_types.{cpp,h}, msg_reader_core.{cpp,h}: Added copyright headers with explicit permission from Frans van den Bergh, the author/copyright holder.\n\n=== gdal/frmts/netcdf ===\n\n* FrankW, clean.\n\n=== gdal/frmts/nitf ===\n\n* mgrs.h, mgrs.c: Derived from Geotrans (public domain), not current copyright header.\n* The rest is FrankW, clean.\n\n=== gdal/frmts/pcidsk ===\n\n* AndreyK/FrankW, clean.\n\n=== gdal/frmts/pcraster ===\n\n* Kor de Jong holds copyright.\n* Some missing headers (pcrasterdataset.h, pcrastermisc.cpp, pcrasterrasterband.cpp, pcrasterutil.cpp, pcrasterutil.h (#1822).\n* libcsf: license and copyright implicit in AUTHORS and COPYING documents.\n* libcsf COPYING indicates an MIT-like agreement but with more explicit requirements for notice in binaries.  Added to gdal/LICENSE.TXT\n\n Copyright (c) 1997-2003, Utrecht University\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above\n   copyright notice, this list of conditions and the following\n   disclaimer in the documentation and/or other materials provided\n   with the distribution.\n\n * Neither the name of Utrecht University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=== gdal/frmts/png ===\n\n* FrankW, clean.\n* includes copy of libpng.\n* libpng has a roughly MIT-like license but with explicit indication that notice is only required in source distributions.   http://www.gdal.org/srctree/frmts/png/libpng/LICENSE\n\n=== gdal/frmts/raw ===\n\n* FrankW, Derrick J Brashear, AndreyK, clean.\n\n=== gdal/frmts/rik ===\n\n* Daniel Wallner, clean.\n\n=== gdal/frmts/rmf ===\n\n* AndreyK, clean.\n\n=== gdal/frmts/rs2 ===\n\n* FrankW, clean.\n\n=== gdal/frmts/sdts ===\n\n* FrankW, clean.\n\n=== gdal/frmts/sgi ===\n\n* FrankW, clean.\n* Original SGI code used with permission of Paul Bourke.\n\n=== gdal/frmts/usgsdem ===\n\n* FrankW, clean.\n\n=== gdal/frmts/vrt ===\n\n* FrankW, Vexcel, clean.\n\n=== gdal/frmts/xpm ===\n\n* FrankW, clean.\n\n=== gdal/frmts/zlib ===\n\n* Using external zlib library\n* README includes the license (same as libpng).\n\n=== gdal ===\n\n* aclocal.m4 and configure.in have copyright/license headers.\n* Various readme's, Doxyfile, Makefiles, scripts without any licensing info.\n\n=== gdal/swig/include ===\n* Kevin Ruland, HowardB, FrankW, TamasS, clean.\n\n=== gdal/swig/include/csharp ===\n* Mostly written by TamasS, lacking copyright headers.  Emailing Tamas.\n\n=== gdal/swig/include/java ===\n* Mostly written by BenC, AndreaA, lacking copyright headers.\n\n=== gdal/swig/include/python ===\n* Mostly written by HowardB, KevinR, lacking copyright headers.\n\n=== gdal/swig/include/python/docs ===\n* doxy2swig.py is imported from outside, but is under a compatible BSD license\n* The rest of the .i files are written or produced by HowardB and lack copyright headers.\n\n=== gdal/swig/include/perl ===\n* Written by Kevin and Ari, a few files lack copyright notices.\n\n=== gdal/swig/csharp ===\n* Just makefiles and stuff, no problems.\n\n=== gdal/swig/csharp/apps ===\n* Written by Tamas, lacking copyright headers (emailed).\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0439453125,
          "content": "GDAL - Geospatial Data Abstraction Library\n====\n\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/linux_build.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Linux+Builds%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/macos.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22MacOS+build%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/windows_build.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Windows+builds%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/android_cmake.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Android+CMake+build%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/clang_static_analyzer.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22CLang+Static+Analyzer%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/code_checks.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Code+Checks%22+branch%3Amaster)\n[![Build Status](https://github.com/OSGeo/gdal/actions/workflows/conda.yml/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Conda%22+branch%3Amaster)\n[![Build Status](https://scan.coverity.com/projects/749/badge.svg?flat=1)](https://scan.coverity.com/projects/gdal)\n[![Documentation build Status](https://github.com/OSGeo/gdal/workflows/Docs/badge.svg)](https://github.com/osgeo/gdal/actions?query=workflow%3A%22Docs%22+branch%3Amaster)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/gdal.svg)](https://issues.oss-fuzz.com/issues?q=status:open%20gdal)\n[![Coverage Status](https://coveralls.io/repos/github/OSGeo/gdal/badge.svg?branch=master)](https://coveralls.io/github/OSGeo/gdal?branch=master)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8250/badge)](https://www.bestpractices.dev/projects/8250)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/OSGeo/gdal/badge)](https://securityscorecards.dev/viewer/?uri=github.com/OSGeo/gdal)\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5884351.svg)](https://doi.org/10.5281/zenodo.5884351)\n\n[![Powered by NumFOCUS](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A )](http://numfocus.org)\n\n\nGDAL is an open source MIT licensed translator library for raster and vector geospatial data formats.\n\n* Main site: https://gdal.org - Developer and user docs, links to other resources\n* GIT repository: https://github.com/OSGeo/gdal\n* Bug tracker: https://github.com/OSGeo/gdal/issues\n* Download: https://download.osgeo.org/gdal\n* Mailing list: https://lists.osgeo.org/mailman/listinfo/gdal-dev\n\n[//]: # (numfocus-fiscal-sponsor-attribution)\n\nThe GDAL project uses a [custom governance](./GOVERNANCE.md)\nand is fiscally sponsored by [NumFOCUS](https://numfocus.org/). Consider making\na [tax-deductible donation](https://numfocus.org/donate-to-gdal) to help the project\npay for developer time, professional services, travel, workshops, and a variety of other needs.\n\n<div align=\"center\">\n  <a href=\"https://numfocus.org/project/gdal\">\n    <img height=\"60px\"\n         src=\"https://raw.githubusercontent.com/numfocus/templates/master/images/numfocus-logo.png\"\n         align=\"center\">\n  </a>\n</div>\n<br>\n\nNumFOCUS is 501(c)(3) non-profit charity in the United States; as such, donations to\nNumFOCUS are tax-deductible as allowed by law. As with any donation, you should\nconsult with your personal tax adviser or the IRS about your particular tax situation.\n\n### How to build\n\nSee [BUILDING.md](BUILDING.md)\n\n### How to contribute\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n### Docker images\n\nSee [docker/](docker/)\n\n### Code of Conduct\n\nSee [doc/source/community/code_of_conduct.rst](doc/source/community/code_of_conduct.rst)\n\n### Security policy\n\nSee [SECURITY.md](SECURITY.md)\n\n### Citing GDAL/OGR in publications\n\nSee [CITATION](CITATION) and [CITATION.cff](CITATION.cff)\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.1220703125,
          "content": "Security policy\n===============\n\nGDAL is a large software dealing literally with hundreds of file formats and protocols.\nSome effort is made to ensure the code is safe, but analysis tools like ossfuzz continually\nfind issues in the code. Data from untrusted sources should be treated with caution.\nWhen security is a major concern, consider running GDAL or code using GDAL in a\nrestricted sandbox environment.\n\nOur current policy for anyone wanting to report a security related issue is just\nto use the [public issue tracker](https://github.com/OSGeo/gdal/issues/new) for it.\nHowever please refrain from publicly posting exploits with harmful consequences (data destruction,\netc.). Only people with the github handles from the [Project Steering Committee](https://gdal.org/community/index.html#project-steering-committee)\n(or people that they would explicitly allow) are allowed to ask you privately for\nsuch dangerous reproducers if that was needed.\n\nNote also that we have [listed a number of potential security issues](https://trac.osgeo.org/gdal/wiki/SecurityIssues)\ndepending on how you use GDAL (caution: the linked page is somewhat outdated)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "3.11.0\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 5.884765625,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nrequire 'socket'\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  # specify memory size in MiB\n  vm_ram = ENV['VAGRANT_VM_RAM'] || 4096\n  vm_cpu = ENV['VAGRANT_VM_CPU'] || 2\n  vm_ram_bytes = vm_ram * 1024 * 1024\n\n  config.vm.hostname = \"gdal-vagrant\"\n  config.vm.host_name = \"gdal-vagrant\"\n\n  # proxy configurations.\n  # these options are also specified by environment variables;\n  #   VAGRANT_HTTP_PROXY, VAGRANT_HTTPS_PROXY, VAGRANT_FTP_PROXY\n  #   VAGRANT_NO_PROXY, VAGRANT_SVN_PROXY, VAGRANT_GIT_PROXY\n  # if you want to set these on Vagrantfile, edit the following:\n  if Vagrant.has_plugin?(\"vagrant-proxyconf\")\n    config.proxy.enabled   = false  # true|false\n    #config.proxy.http      = \"http://192.168.0.2:3128\"\n    #config.proxy.ftp       = \"http://192.168.0.2:3128\"\n    #config.proxy.https     = \"DIRECT\"\n    #config.proxy.no_proxy  = \"localhost,127.0.0.1,.example.com\"\n    #config.svn_proxy.http  = \"\"\n    #config.git_proxy.http  = \"\"\n  end\n\n  config.vm.network :forwarded_port, guest: 80, host: 8080\n  # See https://bugs.launchpad.net/cloud-images/+bug/1969664\n  # Ubuntu 22.04 no longer accepts RSA keys, which causes issues with older Vagrant\n  # The below location has a jammy64 image that accepts RSA keys\n  config.vm.box_url = \"https://people.canonical.com/~jchittum/vagrant-testing/ubuntu-jammy-vagrant-TESTING-20220419.box\"\n  config.vm.box = \"ubuntu/jammy64\"\n\n  config.vm.provider :virtualbox do |vb|\n     vb.customize [\"modifyvm\", :id, \"--memory\", vm_ram]\n     vb.customize [\"modifyvm\", :id, \"--cpus\", vm_cpu]\n     vb.customize [\"modifyvm\", :id, \"--ioapic\", \"on\"]\n     vb.name = \"gdal-vagrant\"\n  end\n\n  #config.vm.provider :lxc do |lxc,ovrd|\n  #  ovrd.vm.box = \"cultuurnet/ubuntu-14.04-64-puppet\"\n  #  lxc.backingstore = 'dir'\n  #  lxc.customize 'cgroup.memory.limit_in_bytes', vm_ram_bytes\n  #  # LXC 3 or later deprecated old parameter\n  #  lxc.customize 'apparmor.allow_incomplete', 1\n  #  # for LXC 2.1 or before\n  #  #lxc.customize 'aa_allow_incomplete', 1\n  #  lxc.container_name = \"gdal-vagrant\"\n  #  # allow android adb connection from guest\n  #  #ovrd.vm.synced_folder('/dev/bus', '/dev/bus')\n  #  # allow runnng wine inside lxc\n  #  ovrd.vm.synced_folder('/tmp/.X11-unix/', '/tmp/.X11-unix/')\n  #end\n\n  #config.vm.provider :hyperv do |hyperv,ovrd|\n  #  ovrd.vm.box = \"withinboredom/Trusty64\"\n  #  ovrd.ssh.username = \"vagrant\"\n  #  hyperv.cpus = vm_cpu\n  #  hyperv.memory = vm_ram\n  #  # If you want to avoid copying an entire image with\n  #  # differencing disk feature, uncomment a following line.\n  #  # hyperv.differencing_disk = true\n  #  hyperv.vmname = \"gdal-vagrant\"\n  #end\n\n  if Vagrant.has_plugin?(\"vagrant-cachier\")\n    config.cache.scope = :box\n    config.cache.enable :generic, {\n        \"wget\" => { cache_dir: \"/var/cache/wget\" },\n      }\n  end\n\n  # Unless explicitly declined, use the VM host's file system to cache\n  # .deb files to avoid repeated downloads on each vagrant up\n  unless File.exists?(\"../.no_apt_cache\")\n    cache_dir = \"../apt-cache/#{config.vm.box}\"\n    FileUtils.mkdir_p(cache_dir) unless Dir.exists?(cache_dir)\n    puts \"Using local apt cache, #{cache_dir}\"\n    config.vm.synced_folder cache_dir, \"/var/cache/apt/archives\"\n  end\n\n  ppaRepos = [\n  ]\n\n  packageList = [\n    \"build-essential\",\n    \"ca-certificates\",\n    \"git\",\n    \"make\",\n    \"ninja-build\",\n    \"cmake\",\n    \"ccache\",\n    \"gdb\",\n    \"g++\",\n    \"mold\",\n    \"bison\",\n    \"flex\",\n    \"wget\",\n    \"curl\",\n    \"unzip\",\n    \"libtool\",\n    \"autoconf\",\n    \"automake\",\n    \"zlib1g-dev\",\n    \"libsqlite3-dev\",\n    \"pkg-config\",\n    \"sqlite3\",\n    \"bash-completion\",\n    \"swig\",\n    \"ant\",\n    \"openjdk-11-jdk\",\n    \"mono-mcs\",\n    \"mono-runtime\",\n    \"libmono-system-drawing4.0-cil\",\n    \"python3-dev\",\n    \"python3-numpy\",\n    \"python3-setuptools\",\n    \"python3-pip\",\n    \"postgis\",\n    \"postgresql\",\n    \"postgresql-postgis\",\n    \"gpsbabel\",\n    \"doxygen\",\n    \"libproj-dev\",\n    \"proj-data\",\n    \"libarchive-dev\",\n    \"libcurl4-gnutls-dev\",\n    \"libtiff5-dev\",\n    \"libopenjp2-7-dev\",\n    \"libcairo2-dev\",\n    \"libpng-dev\",\n    \"libjpeg-dev\",\n    \"libgif-dev\",\n    \"liblzma-dev\",\n    \"libgeos-dev\",\n    \"libxml2-dev\",\n    \"libexpat-dev\",\n    \"libxerces-c-dev\",\n    \"libnetcdf-dev\",\n    \"libpoppler-dev\",\n    \"libpoppler-private-dev\",\n    \"libspatialite-dev\",\n    \"librasterlite2-dev\",\n    \"libhdf4-alt-dev\",\n    \"libhdf5-serial-dev\",\n    \"libfreexl-dev\",\n    \"unixodbc-dev\",\n    \"mdbtools-dev\",\n    \"libwebp-dev\",\n    \"liblcms2-2\",\n    \"libpcre3-dev\",\n    \"libcrypto++-dev\",\n    \"libfyba-dev\",\n    \"libkml-dev\",\n    \"libmysqlclient-dev\",\n    \"libogdi-dev\",\n    \"libcfitsio-dev\",\n    \"libzstd-dev\",\n    \"libpq-dev\",\n    \"libssl-dev\",\n    \"libboost-dev\",\n    \"libarmadillo-dev\",\n    \"libopenexr-dev\",\n    \"libheif-dev\",\n    \"libdeflate-dev\",\n    \"libblosc-dev\",\n    \"liblz4-dev\",\n    \"libbz2-dev\",\n    \"libbrotli-dev\",\n    \"libqhull-dev\",\n    \"libjson-c-dev\",\n    \"libtiff5-dev\",\n  ];\n\n  config.ssh.forward_agent = true\n  config.ssh.forward_x11 = true\n\n  if Dir.glob(\"#{File.dirname(__FILE__)}/.vagrant/machines/default/*/id\").empty?\n    pkg_cmd = \"\"\n    if ppaRepos.length > 0\n      ppaRepos.each { |repo| pkg_cmd << \"add-apt-repository -y \" << repo << \" ; \" }\n    end\n\n    # install packages we need\n    pkg_cmd << \"apt-get update -qq; \"\n    pkg_cmd << \"apt-get --no-install-recommends install -q -y \" + packageList.join(\" \") << \" ; \"\n\n    # setup environment when we log in\n    pkg_cmd << \"echo 'CCACHE_DIR=/vagrant/ccache_vagrant' >> /etc/environment; \"\n    pkg_cmd << \"echo 'cd /vagrant/build_vagrant; source /vagrant/scripts/setdevenv.sh' >> /home/vagrant/.bashrc; \"\n\n    config.vm.provision :shell, :inline => pkg_cmd\n    scripts = [\n      \"arrow-parquet.sh\",\n      \"postgis.sh\",\n      \"gdal.sh\",\n    ];\n    scripts.each { |script| config.vm.provision :shell, :privileged => false, :path => \"scripts/vagrant/\" << script }\n  end\nend\n"
        },
        {
          "name": "alg",
          "type": "tree",
          "content": null
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "autotest",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "doxygen_index.md",
          "type": "blob",
          "size": 0.8671875,
          "content": "GDAL\n====\n\nIntroduction\n----\n\n[GDAL](https://gdal.org) is a translator library for raster and\nvector geospatial data formats that is released under an MIT style Open\nSource license by the\n[Open Source Geospatial Foundation](http://www.osgeo.org/).  As a library, it\npresents a single raster abstract data model and a single vector abstract data\nmodel to the calling application for all supported formats.  It also comes with\na variety of useful command line utilities for data translation and processing.\n\nThis site contains the complete documentation of the GDAL source code, as\ngenerated automatically by Doxygen.  For general information about GDAL,\nincluding user-oriented documentation, please see the\n[GDAL main website](https://gdal.org).\n\nHow to use this documentation\n---\n\nYou can navigate through this documentation using the \"Classes\" and \"Files\"\nmenus at the top of the page.\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "frmts",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "gdal.cmake",
          "type": "blob",
          "size": 30.068359375,
          "content": "# CMake4GDAL project is distributed under MIT license. See accompanying file LICENSE.txt.\n\n# Increment the below number each time an ABI incompatible change is done,\n# e.g removing a public function/method, changing its prototype (including\n# adding a default value to a parameter of a C++ method), adding\n# a new member or virtual function in a public C++ class, etc.\n# This will typically happen for each GDAL feature release (change of X or Y in\n# a X.Y.Z numbering scheme), but should not happen for a bugfix release (change of Z)\n# Previous value: 36 for GDAL 3.10\nset(GDAL_SOVERSION 36)\n\n# Switches to control build targets(cached)\noption(ENABLE_GNM \"Build GNM (Geography Network Model) component\" ON)\noption(ENABLE_PAM \"Set ON to enable Persistent Auxiliary Metadata (.aux.xml)\" ON)\noption(BUILD_APPS \"Build command line utilities\" ON)\n\n# This option is to build drivers as plugins, for drivers that have external dependencies, that are not parf of GDAL\n# core dependencies Examples are netCDF, HDF4, Oracle, PDF, etc. This global setting can be overridden at the driver\n# level with GDAL_ENABLE_FRMT_{foo}_PLUGIN or OGR_ENABLE_{foo}_PLUGIN variables.\noption(GDAL_ENABLE_PLUGINS \"Set ON to build drivers that have non-core external dependencies as plugin\" OFF)\n\n# This option is to build drivers as plugins, for drivers that have no external dependencies or dependencies that are\n# part of GDAL core dependencies Examples are BMP, FlatGeobuf, etc.\noption(GDAL_ENABLE_PLUGINS_NO_DEPS \"Set ON to build drivers that have no non-core external dependencies as plugin\" OFF)\nmark_as_advanced(GDAL_ENABLE_PLUGINS_NO_DEPS)\n\noption(ENABLE_IPO \"Enable Inter-Procedural Optimization if possible\" OFF)\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n  option(GDAL_ENABLE_MACOSX_FRAMEWORK \"Enable Framework on Mac OS X\" OFF)\nendif ()\noption(GDAL_BUILD_OPTIONAL_DRIVERS \"Whether to build GDAL optional drivers by default\" ON)\noption(OGR_BUILD_OPTIONAL_DRIVERS \"Whether to build OGR optional drivers by default\" ON)\n\n# libgdal shared/satic library generation\noption(BUILD_SHARED_LIBS \"Set ON to build shared library\" ON)\n\n# produce position independent code, default is on when building a shared library\noption(GDAL_OBJECT_LIBRARIES_POSITION_INDEPENDENT_CODE \"Set ON to produce -fPIC code\" ${BUILD_SHARED_LIBS})\n\n# Option to set preferred C# compiler\noption(CSHARP_MONO \"Whether to force the C# compiler to be Mono\" OFF)\n\nif (SSE2NEON_COMPILES)\n  option(GDAL_ENABLE_ARM_NEON_OPTIMIZATIONS \"Set ON to use ARM Neon FPU optimizations\" ON)\n  if (GDAL_ENABLE_ARM_NEON_OPTIMIZATIONS)\n      message(STATUS \"Using ARM Neon optimizations\")\n  endif()\nendif()\n\n# This line must be kept early in the CMake instructions. At time of writing,\n# this file is populated only be scripts/install_bash_completions.cmake.in\ninstall(CODE \"file(REMOVE \\\"${PROJECT_BINARY_DIR}/install_manifest_extra.txt\\\")\")\n\ninclude(GdalCompilationFlags)\n\n# ######################################################################################################################\n# generate ${CMAKE_CURRENT_BINARY_DIR}/port/cpl_config.h\n\nset(_CMAKE_C_FLAGS_backup ${CMAKE_C_FLAGS})\nset(_CMAKE_CXX_FLAGS_backup ${CMAKE_CXX_FLAGS})\n\nif (CMAKE_C_FLAGS)\n  string(REPLACE \"-Werror \" \" \" CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} \")\n  string(REPLACE \"/WX \" \" \" CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} \")\nendif ()\nif (CMAKE_CXX_FLAGS)\n  string(REPLACE \"-Werror \" \" \" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \")\n  string(REPLACE \"/WX \" \" \" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \")\nendif ()\ninclude(configure)\n\n# generate ${CMAKE_CURRENT_BINARY_DIR}/gcore/gdal_version.h and set GDAL_VERSION variable\ninclude(GdalVersion)\n\n# find 3rd party libraries\ninclude(CheckDependentLibraries)\n\n# Generates now port/cpl_config.h (it depends on at least iconv detection in CheckDependentLibraries)\nconfigure_file(${GDAL_CMAKE_TEMPLATE_PATH}/cpl_config.h.in ${PROJECT_BINARY_DIR}/port/cpl_config.h @ONLY)\n\nset(CMAKE_C_FLAGS ${_CMAKE_C_FLAGS_backup})\nset(CMAKE_CXX_FLAGS ${_CMAKE_CXX_FLAGS_backup})\n\nif (GDAL_HIDE_INTERNAL_SYMBOLS)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fvisibility=hidden\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=hidden\")\nendif ()\n\n# Check that all symbols we need are present in our dependencies This is in particular useful to check that drivers\n# built as plugins can access all symbols they need.\nif (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n  include(CheckLinkerFlag)\n  check_linker_flag(C \"-Wl,--no-undefined\" HAS_NO_UNDEFINED)\n  if (HAS_NO_UNDEFINED AND (NOT \"${CMAKE_CXX_FLAGS}\" MATCHES \"-fsanitize\") AND NOT CMAKE_SYSTEM_NAME MATCHES \"OpenBSD\")\n    string(APPEND CMAKE_SHARED_LINKER_FLAGS \" -Wl,--no-undefined\")\n    string(APPEND CMAKE_MODULE_LINKER_FLAGS \" -Wl,--no-undefined\")\n  endif ()\nendif ()\n\nmacro(set_alternate_linker linker)\n  if( NOT \"${USE_ALTERNATE_LINKER}\" STREQUAL \"${USE_ALTERNATE_LINKER_OLD_CACHED}\" )\n    unset(LINKER_EXECUTABLE CACHE)\n  endif()\n  find_program(LINKER_EXECUTABLE ld.${USE_ALTERNATE_LINKER} ${USE_ALTERNATE_LINKER})\n  if(LINKER_EXECUTABLE)\n    if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n      if( \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_GREATER_EQUAL 12.0.0)\n        add_link_options(\"--ld-path=${LINKER_EXECUTABLE}\")\n      else()\n        add_link_options(\"-fuse-ld=${LINKER_EXECUTABLE}\")\n      endif()\n    elseif( \"${linker}\" STREQUAL \"mold\" AND\n            \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND\n            \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS 12.1.0)\n      # GCC before 12.1.0: -fuse-ld does not accept mold as a valid argument,\n      # so you need to use -B option instead.\n      get_filename_component(_dir ${LINKER_EXECUTABLE} DIRECTORY)\n      get_filename_component(_dir ${_dir} DIRECTORY)\n      if( EXISTS \"${_dir}/libexec/mold/ld\" )\n          add_link_options(-B \"${_dir}/libexec/mold\")\n      else()\n          message(FATAL_ERROR \"Cannot find ${_dir}/libexec/mold/ld\")\n      endif()\n    else()\n      add_link_options(\"-fuse-ld=${USE_ALTERNATE_LINKER}\")\n    endif()\n    message(STATUS \"Using alternative linker: ${LINKER_EXECUTABLE}\")\n  else()\n    message(FATAL_ERROR \"Cannot find alternative linker ${USE_ALTERNATE_LINKER}\")\n  endif()\nendmacro()\n\nif( \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" )\n  set(USE_ALTERNATE_LINKER \"\" CACHE STRING \"Use alternate linker. Leave empty for system default; potential alternatives are 'gold', 'lld', 'bfd', 'mold'\")\n  if(NOT \"${USE_ALTERNATE_LINKER}\" STREQUAL \"\")\n    set_alternate_linker(${USE_ALTERNATE_LINKER})\n  endif()\n  set(USE_ALTERNATE_LINKER_OLD_CACHED\n      ${USE_ALTERNATE_LINKER}\n      CACHE INTERNAL \"Previous value of USE_ALTERNATE_LINKER\")\nendif()\n\nif (ENABLE_IPO)\n    include(CheckIPOSupported)\n    check_ipo_supported(RESULT result)\n    if (result)\n      set(CMAKE_INTERPROCEDURAL_OPTIMIZATION True)\n    endif ()\nendif ()\n\n# ######################################################################################################################\n\nset_property(GLOBAL PROPERTY gdal_private_link_libraries)\nfunction (gdal_add_private_link_libraries)\n  get_property(tmp GLOBAL PROPERTY gdal_private_link_libraries)\n  foreach (arg ${ARGV})\n    set(tmp ${tmp} ${arg})\n  endforeach ()\n  set_property(GLOBAL PROPERTY gdal_private_link_libraries ${tmp})\nendfunction (gdal_add_private_link_libraries)\n\nadd_library(${GDAL_LIB_TARGET_NAME} gcore/gdal.h)\n\nset(GDAL_LIB_OUTPUT_NAME\n    \"gdal\"\n    CACHE STRING \"Name of the GDAL library\")\n# If a shared lib renaming has been set in ConfigUser.cmake\nset_target_properties(${GDAL_LIB_TARGET_NAME} PROPERTIES OUTPUT_NAME ${GDAL_LIB_OUTPUT_NAME})\n\nadd_library(GDAL::GDAL ALIAS ${GDAL_LIB_TARGET_NAME})\nadd_dependencies(${GDAL_LIB_TARGET_NAME} generate_gdal_version_h)\nif (M_LIB)\n  gdal_add_private_link_libraries(-lm)\nendif ()\n# Set project and C++ Standard properties\nset_target_properties(\n  ${GDAL_LIB_TARGET_NAME}\n  PROPERTIES PROJECT_LABEL ${PROJECT_NAME}\n             VERSION ${GDAL_ABI_FULL_VERSION}\n             SOVERSION \"${GDAL_SOVERSION}\"\n             ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n             LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n             RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n             CXX_STANDARD 11\n             CXX_STANDARD_REQUIRED YES)\nset_property(TARGET ${GDAL_LIB_TARGET_NAME} PROPERTY PLUGIN_OUTPUT_DIR \"${CMAKE_CURRENT_BINARY_DIR}/gdalplugins\")\nfile(MAKE_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}/gdalplugins\")\n\nif (MSVC)\n  set(GDAL_DEBUG_POSTFIX\n      \"d\"\n      CACHE STRING \"Postfix to add to the GDAL dll name for debug builds\")\n  set_target_properties(${GDAL_LIB_TARGET_NAME} PROPERTIES DEBUG_POSTFIX \"${GDAL_DEBUG_POSTFIX}\")\nendif ()\nif (MINGW AND BUILD_SHARED_LIBS)\n    set_target_properties(${GDAL_LIB_TARGET_NAME} PROPERTIES SUFFIX \"-${GDAL_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}\")\nendif ()\n\n# Some of the types in our public headers are dependent on whether GDAL_DEBUG\n# is defined or not\ntarget_compile_definitions(${GDAL_LIB_TARGET_NAME} PUBLIC $<$<CONFIG:DEBUG>:GDAL_DEBUG>)\n\n# Install properties\nif (GDAL_ENABLE_MACOSX_FRAMEWORK)\n  set(FRAMEWORK_VERSION ${GDAL_VERSION_MAJOR}.${GDAL_VERSION_MINOR})\n  set(FRAMEWORK_DESTINATION\n      \"Library/Frameworks\"\n      CACHE STRING \"Framework destination sub-directory\")\n  set(FRAMEWORK_SUBDIR \"${FRAMEWORK_DESTINATION}/gdal.framework/Versions/${FRAMEWORK_VERSION}\")\n  set(INSTALL_PLUGIN_DIR\n      \"${FRAMEWORK_SUBDIR}/PlugIns\"\n      CACHE PATH \"Installation sub-directory for plugins\")\n  set(CMAKE_INSTALL_BINDIR\n      \"bin\"\n      CACHE STRING \"Installation sub-directory for executables\")\n  set(CMAKE_INSTALL_LIBDIR\n      \"${FRAMEWORK_SUBDIR}\"\n      CACHE INTERNAL \"Installation sub-directory for libraries\" FORCE)\n  # CMAKE_INSTALL_INCLUDEDIR should normally not be used\n  set(CMAKE_INSTALL_INCLUDEDIR\n      \"${FRAMEWORK_SUBDIR}/Headers\"\n      CACHE INTERNAL \"Installation sub-directory for headers\" FORCE)\n  set(CMAKE_INSTALL_DATADIR\n      \"${FRAMEWORK_SUBDIR}/Resources\"\n      CACHE INTERNAL \"Installation sub-directory for resources\" FORCE)\n  set(GDAL_RESOURCE_PATH ${CMAKE_INSTALL_DATADIR})\n  set_target_properties(\n    ${GDAL_LIB_TARGET_NAME}\n    PROPERTIES FRAMEWORK TRUE\n               FRAMEWORK_VERSION ${GDAL_VERSION_MAJOR}.${GDAL_VERSION_MINOR}\n               MACOSX_FRAMEWORK_SHORT_VERSION_STRING ${GDAL_VERSION_MAJOR}.${GDAL_VERSION_MINOR}\n               MACOSX_FRAMEWORK_BUNDLE_VERSION \"GDAL ${GDAL_VERSION_MAJOR}.${GDAL_VERSION_MINOR}\"\n               MACOSX_FRAMEWORK_IDENTIFIER org.osgeo.libgdal\n               XCODE_ATTRIBUTE_INSTALL_PATH \"@rpath\"\n               INSTALL_NAME_DIR \"${CMAKE_INSTALL_PREFIX}/${FRAMEWORK_DESTINATION}\"\n               BUILD_WITH_INSTALL_RPATH TRUE\n               # MACOSX_FRAMEWORK_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/info.plist.in\"\n    )\nelse ()\n  include(GNUInstallDirs)\n  set(INSTALL_PLUGIN_DIR\n      \"${CMAKE_INSTALL_LIBDIR}/gdalplugins\"\n      CACHE PATH \"Installation sub-directory for plugins\")\n  set(GDAL_RESOURCE_PATH ${CMAKE_INSTALL_DATADIR}/gdal)\n\n  option(GDAL_SET_INSTALL_RELATIVE_RPATH \"Whether the rpath of installed binaries should be written as a relative path to the library\" OFF)\n  if(GDAL_SET_INSTALL_RELATIVE_RPATH)\n      if(APPLE)\n        set(base @loader_path)\n      else()\n        set(base $ORIGIN)\n      endif()\n\n      file(RELATIVE_PATH relDir\n        ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}\n        ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR}\n      )\n      if( NOT \"${CMAKE_INSTALL_RPATH}\" STREQUAL \"\" )\n          message(WARNING \"CMAKE_INSTALL_RPATH=${CMAKE_INSTALL_RPATH} will be ignored and replaced with ${base};${base}/${relDir} due to GDAL_SET_INSTALL_RELATIVE_RPATH being set\")\n      endif()\n      set(CMAKE_INSTALL_RPATH ${base} ${base}/${relDir})\n  endif()\nendif ()\n\nset(INSTALL_PLUGIN_FULL_DIR \"${CMAKE_INSTALL_PREFIX}/${INSTALL_PLUGIN_DIR}\")\n\nfunction (is_sharp_embed_available res)\n    if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.21 AND\n        ((CMAKE_C_COMPILER_ID STREQUAL \"GNU\") OR (CMAKE_C_COMPILER_ID STREQUAL \"Clang\")))\n        # CMAKE_C_STANDARD=23 only supported since CMake 3.21\n        set(TEST_SHARP_EMBED\n          \"static const unsigned char embedded[] = {\\n#embed __FILE__\\n};\\nint main() { (void)embedded; return 0;}\"\n        )\n        set(CMAKE_C_STANDARD_BACKUP \"${CMAKE_C_STANDARD}\")\n        set(CMAKE_C_STANDARD \"23\")\n        check_c_source_compiles(\"${TEST_SHARP_EMBED}\" _TEST_SHARP_EMBED)\n        set(CMAKE_C_STANDARD \"${CMAKE_C_STANDARD_BACKUP}\")\n        if (_TEST_SHARP_EMBED)\n            set(${res} ON PARENT_SCOPE)\n        else()\n            set(${res} OFF PARENT_SCOPE)\n        endif()\n    else()\n        set(${res} OFF PARENT_SCOPE)\n    endif()\nendfunction()\n\nis_sharp_embed_available(IS_SHARP_EMBED_AVAILABLE_RES)\nif (NOT BUILD_SHARED_LIBS AND IS_SHARP_EMBED_AVAILABLE_RES)\n    set(DEFAULT_EMBED_RESOURCE_FILES ON)\nelse()\n    set(DEFAULT_EMBED_RESOURCE_FILES OFF)\nendif()\noption(EMBED_RESOURCE_FILES \"Whether resource files should be embedded into the GDAL library (only available with a C23 compatible compiler)\" ${DEFAULT_EMBED_RESOURCE_FILES})\n\nif (EMBED_RESOURCE_FILES AND NOT IS_SHARP_EMBED_AVAILABLE_RES)\n  message(FATAL_ERROR \"C23 #embed not available with this compiler\")\nendif()\n\noption(USE_ONLY_EMBEDDED_RESOURCE_FILES \"Whether embedded resource files should be used (should nominally be used together with EMBED_RESOURCE_FILES=ON, otherwise this will result in non-functional builds)\" OFF)\n\nif (USE_ONLY_EMBEDDED_RESOURCE_FILES AND NOT EMBED_RESOURCE_FILES)\n  message(WARNING \"USE_ONLY_EMBEDDED_RESOURCE_FILES=ON set but EMBED_RESOURCE_FILES=OFF: some drivers will lack required resource files\")\nendif()\n\n# Configure internal libraries\nif (GDAL_USE_ZLIB_INTERNAL)\n  option(RENAME_INTERNAL_ZLIB_SYMBOLS \"Rename internal zlib symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_ZLIB_SYMBOLS)\n  add_subdirectory(frmts/zlib)\nendif ()\nif (GDAL_USE_JSONC_INTERNAL)\n  # Internal libjson symbols are renamed by default\n  add_subdirectory(ogr/ogrsf_frmts/geojson/libjson)\nendif ()\n\noption(ENABLE_DEFLATE64 \"Enable Deflate64 decompression\" ON)\nmark_as_advanced(ENABLE_DEFLATE64)\nif(ENABLE_DEFLATE64)\n    add_subdirectory(frmts/zlib/contrib/infback9)\nendif()\n\n# Internal zlib and jsonc must be declared before\nadd_subdirectory(port)\n\n# JPEG options need to be defined before internal libtiff\nif (GDAL_USE_JPEG_INTERNAL)\n  option(RENAME_INTERNAL_JPEG_SYMBOLS \"Rename internal libjpeg symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_JPEG_SYMBOLS)\n  add_subdirectory(frmts/jpeg/libjpeg)\nendif ()\nif (NOT HAVE_JPEGTURBO_DUAL_MODE_8_12)\n    option(GDAL_USE_JPEG12_INTERNAL \"Set ON to use internal libjpeg12 support\" ON)\nelse()\n    option(GDAL_USE_JPEG12_INTERNAL \"Set ON to use internal libjpeg12 support\" OFF)\nendif()\nif (GDAL_USE_JPEG12_INTERNAL)\n  add_subdirectory(frmts/jpeg/libjpeg12)\nendif ()\n\n# Lerc options need to be defined before internal libtiff\nif (GDAL_USE_LERC_INTERNAL)\n  # Internal liblerc uses a dedicated namespace\n  add_subdirectory(third_party/LercLib)\nendif ()\n\nif (GDAL_USE_TIFF_INTERNAL)\n  option(RENAME_INTERNAL_TIFF_SYMBOLS \"Rename internal libtiff symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_TIFF_SYMBOLS)\n  add_subdirectory(frmts/gtiff/libtiff)\nendif ()\nif (GDAL_USE_GEOTIFF_INTERNAL)\n  option(RENAME_INTERNAL_GEOTIFF_SYMBOLS \"Rename internal libgeotiff symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_GEOTIFF_SYMBOLS)\n  add_subdirectory(frmts/gtiff/libgeotiff)\nendif ()\nif (GDAL_USE_PNG_INTERNAL)\n  option(RENAME_INTERNAL_PNG_SYMBOLS \"Rename internal libpng symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_PNG_SYMBOLS)\n  add_subdirectory(frmts/png/libpng)\nendif ()\nif (GDAL_USE_SHAPELIB_INTERNAL)\n  option(RENAME_INTERNAL_SHAPELIB_SYMBOLS \"Rename internal Shapelib symbols\" ON)\n  mark_as_advanced(RENAME_INTERNAL_SHAPELIB_SYMBOLS)\nendif ()\n\n# Must be set before including ogr\noption(OGR_ENABLE_DRIVER_TAB\n       \"Set ON to build MapInfo TAB and MIF/MID driver (required by Northwoord driver, and Shapefile attribute indexing)\"\n       ${OGR_BUILD_OPTIONAL_DRIVERS})\nif(OGR_ENABLE_DRIVER_TAB AND\n   NOT DEFINED OGR_ENABLE_DRIVER_TAB_PLUGIN AND\n   GDAL_ENABLE_PLUGINS_NO_DEPS)\n    option(OGR_ENABLE_DRIVER_TAB_PLUGIN \"Set ON to build OGR MapInfo TAB and MIF/MID driver as plugin\" ON)\nendif()\n\n# Precompiled header\nif (USE_PRECOMPILED_HEADERS)\n  include(GdalStandardIncludes)\n  file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/gcore/empty_c.c\" \"\")\n  file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/gcore/empty.cpp\" \"\")\n  add_library(gdal_priv_header OBJECT \"${CMAKE_CURRENT_BINARY_DIR}/gcore/empty_c.c\" \"${CMAKE_CURRENT_BINARY_DIR}/gcore/empty.cpp\")\n  gdal_standard_includes(gdal_priv_header)\n  add_dependencies(gdal_priv_header generate_gdal_version_h)\n  target_compile_options(gdal_priv_header PRIVATE $<$<COMPILE_LANGUAGE:CXX>:${GDAL_CXX_WARNING_FLAGS} ${WFLAG_OLD_STYLE_CAST} ${WFLAG_EFFCXX}> $<$<COMPILE_LANGUAGE:C>:${GDAL_C_WARNING_FLAGS}>)\n  target_compile_definitions(gdal_priv_header PUBLIC $<$<CONFIG:DEBUG>:GDAL_DEBUG>)\n  set_property(TARGET gdal_priv_header PROPERTY POSITION_INDEPENDENT_CODE ${GDAL_OBJECT_LIBRARIES_POSITION_INDEPENDENT_CODE})\n  target_precompile_headers(gdal_priv_header PUBLIC\n    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/gcore/gdal_priv.h>\n    $<$<COMPILE_LANGUAGE:C>:${CMAKE_CURRENT_SOURCE_DIR}/port/cpl_port.h>\n  )\nendif()\n\n# Core components\nadd_subdirectory(alg)\nadd_subdirectory(ogr)\nif (ENABLE_GNM)\n  add_subdirectory(gnm)\nendif ()\n\n# Raster/Vector drivers (built-in and plugins)\nset(GDAL_RASTER_FORMAT_SOURCE_DIR \"${PROJECT_SOURCE_DIR}/frmts\")\nset(GDAL_VECTOR_FORMAT_SOURCE_DIR \"${PROJECT_SOURCE_DIR}/ogr/ogrsf_frmts\")\n\nif(OGR_ENABLE_DRIVER_GPKG AND\n   NOT DEFINED OGR_ENABLE_DRIVER_SQLITE AND\n   DEFINED OGR_BUILD_OPTIONAL_DRIVERS AND\n   NOT OGR_BUILD_OPTIONAL_DRIVERS)\n   message(STATUS \"Automatically enabling SQLite driver\")\n   set(OGR_ENABLE_DRIVER_SQLITE ON CACHE BOOL \"Set ON to build OGR SQLite driver\")\nendif()\n\n# We need to forward declare a few OGR drivers because raster formats need them\noption(OGR_ENABLE_DRIVER_AVC \"Set ON to build OGR AVC driver\" ${OGR_BUILD_OPTIONAL_DRIVERS})\noption(OGR_ENABLE_DRIVER_GML \"Set ON to build OGR GML driver\" ${OGR_BUILD_OPTIONAL_DRIVERS})\ncmake_dependent_option(OGR_ENABLE_DRIVER_SQLITE \"Set ON to build OGR SQLite driver\" ${OGR_BUILD_OPTIONAL_DRIVERS}\n                       \"GDAL_USE_SQLITE3\" OFF)\ncmake_dependent_option(OGR_ENABLE_DRIVER_GPKG \"Set ON to build OGR GPKG driver\" ${OGR_BUILD_OPTIONAL_DRIVERS}\n                       \"GDAL_USE_SQLITE3;OGR_ENABLE_DRIVER_SQLITE\" OFF)\ncmake_dependent_option(OGR_ENABLE_DRIVER_MVT \"Set ON to build OGR MVT driver\" ${OGR_BUILD_OPTIONAL_DRIVERS}\n                       \"GDAL_USE_SQLITE3\" OFF)\n\n# Build frmts/iso8211 conditionally to drivers requiring it\nif ((GDAL_BUILD_OPTIONAL_DRIVERS AND NOT DEFINED GDAL_ENABLE_DRIVER_ADRG AND NOT DEFINED GDAL_ENABLE_DRIVER_SDTS) OR\n    GDAL_ENABLE_DRIVER_ADRG OR\n    GDAL_ENABLE_DRIVER_SDTS OR\n    (OGR_BUILD_OPTIONAL_DRIVERS AND NOT DEFINED OGR_ENABLE_DRIVER_S57 AND NOT DEFINED OGR_ENABLE_DRIVER_SDTS) OR\n    OGR_ENABLE_DRIVER_S57 OR\n    OGR_ENABLE_DRIVER_SDTS)\n  add_subdirectory(frmts/iso8211)\nendif()\n\nadd_subdirectory(frmts)\nadd_subdirectory(ogr/ogrsf_frmts)\n\n# It needs to be after ogr/ogrsf_frmts so it can use OGR_ENABLE_SQLITE\nadd_subdirectory(gcore)\n\n# Bindings\nif (BUILD_SHARED_LIBS)\n  add_subdirectory(swig)\nendif ()\n\n# Utilities\nadd_subdirectory(apps)\n\nadd_subdirectory(scripts)\n\n# Add all library dependencies of target gdal\nget_property(GDAL_PRIVATE_LINK_LIBRARIES GLOBAL PROPERTY gdal_private_link_libraries)\n# GDAL_EXTRA_LINK_LIBRARIES may be set by the user if the various FindXXXX modules\n# didn't capture all required dependencies (used for example by OSGeo4W)\ntarget_link_libraries(${GDAL_LIB_TARGET_NAME} PRIVATE ${GDAL_PRIVATE_LINK_LIBRARIES} ${GDAL_EXTRA_LINK_LIBRARIES})\n\n# Document/Manuals\nif (EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/doc\")\n  add_subdirectory(doc)\nendif ()\nadd_subdirectory(man)\n\n# So that GDAL can be used as a add_subdirectory() of another project\ntarget_include_directories(\n  ${GDAL_LIB_TARGET_NAME}\n  PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/apps>\n         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/alg>\n         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/gcore>\n         $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/gcore/gdal_version_full>\n         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/port>\n         $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/port>\n         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/ogr>\n         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/ogr/ogrsf_frmts>\n         $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)\n\n# MSVC specific resource preparation\nif (MSVC)\n  target_sources(${GDAL_LIB_TARGET_NAME} PRIVATE gcore/Version.rc)\n  source_group(\"Resource Files\" FILES gcore/Version.rc)\nendif ()\n\nget_property(_plugins GLOBAL PROPERTY PLUGIN_MODULES)\nadd_custom_target(gdal_plugins DEPENDS ${_plugins})\n\n# Install drivers.ini along with plugins\n# We request the TARGET_FILE_DIR of one of the plugins, since the PLUGIN_OUTPUT_DIR will not contain the \\Release suffix\n# with MSVC generator\nlist(LENGTH _plugins PLUGIN_MODULES_LENGTH)\nif (PLUGIN_MODULES_LENGTH GREATER_EQUAL 1)\n  list(GET _plugins 0 FIRST_TARGET)\n  set(PLUGIN_OUTPUT_DIR \"$<TARGET_FILE_DIR:${FIRST_TARGET}>\")\n  file(READ ${CMAKE_CURRENT_SOURCE_DIR}/frmts/drivers.ini DRIVERS_INI_CONTENT)\n  file(\n    GENERATE\n    OUTPUT ${PLUGIN_OUTPUT_DIR}/drivers.ini\n    CONTENT ${DRIVERS_INI_CONTENT})\nendif ()\n\ninstall(FILES ${CMAKE_CURRENT_SOURCE_DIR}/frmts/drivers.ini DESTINATION ${INSTALL_PLUGIN_DIR})\n\n# ######################################################################################################################\n\n# Note: this file is generated but not used.\nconfigure_file(${GDAL_CMAKE_TEMPLATE_PATH}/gdal_def.h.in ${CMAKE_CURRENT_BINARY_DIR}/gcore/gdal_def.h @ONLY)\n\n# ######################################################################################################################\nset_property(\n  TARGET ${GDAL_LIB_TARGET_NAME}\n  APPEND\n  PROPERTY PUBLIC_HEADER ${CMAKE_CURRENT_BINARY_DIR}/port/cpl_config.h)\n\nset(GDAL_DATA_FILES\n    LICENSE.TXT\n    data/GDALLogoBW.svg\n    data/GDALLogoColor.svg\n    data/GDALLogoGS.svg\n    data/gdalicon.png\n)\nset_property(\n  TARGET ${GDAL_LIB_TARGET_NAME}\n  APPEND\n  PROPERTY RESOURCE \"${GDAL_DATA_FILES}\")\n\n# Copy all resource files from their source location to ${CMAKE_CURRENT_BINARY_DIR}/data\n# Note that this is not only the small list of files set a few lines above,\n# but also resource files attached to ${GDAL_LIB_TARGET_NAME} in other directories (drivers, etc.)\nget_property(\n  _data_files\n  TARGET ${GDAL_LIB_TARGET_NAME}\n  PROPERTY RESOURCE)\nfile(MAKE_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}/data\")\nforeach(_file IN LISTS _data_files)\n    configure_file(\"${_file}\" \"${CMAKE_CURRENT_BINARY_DIR}/data\" COPYONLY)\nendforeach()\n\nif (GDAL_ENABLE_MACOSX_FRAMEWORK)\n  # We need to add data files and public headers as sources of the library os they get installed through the framework\n  # installation mechanisms\n  target_sources(${GDAL_LIB_TARGET_NAME} PRIVATE \"${GDAL_DATA_FILES}\")\n  get_property(\n    _public_headers\n    TARGET ${GDAL_LIB_TARGET_NAME}\n    PROPERTY PUBLIC_HEADER)\n  target_sources(${GDAL_LIB_TARGET_NAME} PRIVATE \"${_public_headers}\")\nendif ()\n\ninstall(\n  TARGETS ${GDAL_LIB_TARGET_NAME}\n  EXPORT gdal-export\n  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n  RESOURCE DESTINATION ${GDAL_RESOURCE_PATH}\n  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n  FRAMEWORK DESTINATION \"${FRAMEWORK_DESTINATION}\")\n\nif (NOT GDAL_ENABLE_MACOSX_FRAMEWORK)\n  # Generate GdalConfig.cmake and GdalConfigVersion.cmake\n  install(\n    EXPORT gdal-export\n    FILE GDAL-targets.cmake\n    NAMESPACE GDAL::\n    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/gdal/\n    EXPORT_LINK_INTERFACE_LIBRARIES)\n  if (NOT BUILD_SHARED_LIBS)\n    install(\n      FILES\n        \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/GdalFindModulePath.cmake\"\n        \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/DefineFindPackage2.cmake\"\n      DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/gdal/\")\n    include(GdalFindModulePath)\n    foreach(dir IN LISTS GDAL_VENDORED_FIND_MODULES_CMAKE_VERSIONS ITEMS packages thirdparty)\n      install(\n        DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/${dir}\"\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/gdal\")\n    endforeach()\n  endif ()\n\n  include(CMakePackageConfigHelpers)\n  # SameMajorVersion as the C++ ABI stability is not relevant for new linking and there are only a few breaking API changes.\n  write_basic_package_version_file(\n    GDALConfigVersion.cmake\n    VERSION ${GDAL_VERSION}\n    COMPATIBILITY SameMajorVersion)\n  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/GDALConfigVersion.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/gdal/)\n  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/template/GDALConfig.cmake.in\n                 ${CMAKE_CURRENT_BINARY_DIR}/GDALConfig.cmake @ONLY)\n  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/GDALConfig.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/gdal/)\n\n  # Generate gdal-config utility command and pkg-config module gdal.pc\n  include(GdalGenerateConfig)\n  gdal_generate_config(\n    TARGET\n    \"${GDAL_LIB_TARGET_NAME}\"\n    GLOBAL_PROPERTY\n    \"gdal_private_link_libraries\"\n    GDAL_CONFIG\n    \"${PROJECT_BINARY_DIR}/apps/gdal-config\"\n    PKG_CONFIG\n    \"${CMAKE_CURRENT_BINARY_DIR}/gdal.pc\")\n  install(\n    PROGRAMS ${PROJECT_BINARY_DIR}/apps/gdal-config\n    DESTINATION ${CMAKE_INSTALL_BINDIR}\n    COMPONENT applications)\n  install(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/gdal.pc\n    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig\n    COMPONENT libraries)\nendif ()\n\nconfigure_file(${GDAL_CMAKE_TEMPLATE_PATH}/uninstall.cmake.in ${PROJECT_BINARY_DIR}/cmake_uninstall.cmake @ONLY)\nadd_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\n\n################################################################\n# Final reports and warnings\n################################################################\n\nif($ENV{GDAL_CMAKE_QUIET})\n  set(GDAL_CMAKE_QUIET ON)\nendif()\n\n# Print summary\ninclude(SystemSummary)\nif(NOT GDAL_CMAKE_QUIET)\n  system_summary(DESCRIPTION \"GDAL is now configured on;\")\nendif()\n\n# Do not warn about Shapelib being an optional package not found, as we don't recommend using it.\n# Mono/DotNetFrameworkSdk is also an internal detail of CSharp that we don't want to report\nget_property(_packages_not_found GLOBAL PROPERTY PACKAGES_NOT_FOUND)\nset(_new_packages_not_found)\nforeach (_package IN LISTS _packages_not_found)\n  if (NOT ${_package} STREQUAL \"Shapelib\"\n      AND NOT ${_package} STREQUAL \"Podofo\"\n      AND NOT ${_package} STREQUAL \"Mono\"\n      AND NOT ${_package} STREQUAL \"DotNetFrameworkSdk\")\n    set(_new_packages_not_found ${_new_packages_not_found} \"${_package}\")\n  endif ()\nendforeach ()\n\ninclude(FeatureSummary)\nset_property(GLOBAL PROPERTY PACKAGES_NOT_FOUND ${_new_packages_not_found})\nif(NOT GDAL_CMAKE_QUIET)\n  feature_summary(DESCRIPTION \"Enabled drivers and features and found dependency packages\" WHAT ALL)\nendif()\nset_property(GLOBAL PROPERTY PACKAGES_NOT_FOUND ${_packages_not_found})\n\nset(disabled_packages \"\")\nget_property(_packages_found GLOBAL PROPERTY PACKAGES_FOUND)\nforeach (_package IN LISTS _packages_found)\n  string(TOUPPER ${_package} key)\n  if (DEFINED GDAL_USE_${key} AND NOT GDAL_USE_${key})\n    if (DEFINED GDAL_USE_${key}_INTERNAL)\n      if (NOT GDAL_USE_${key}_INTERNAL)\n        string(APPEND disabled_packages \" * ${key} component has been detected, but is disabled with GDAL_USE_${key}=${GDAL_USE_${key}}, and the internal library is also disabled with GDAL_USE_${key}_INTERNAL=${GDAL_USE_${key}_INTERNAL}\\n\")\n      endif()\n    else ()\n      string(APPEND disabled_packages \" * ${key} component has been detected, but is disabled with GDAL_USE_${key}=${GDAL_USE_${key}}\\n\")\n    endif()\n  endif ()\nendforeach ()\nif (NOT GDAL_CMAKE_QUIET AND disabled_packages)\n  message(STATUS \"Disabled components:\\n\\n${disabled_packages}\\n\")\nendif ()\n\nset(internal_libs_used \"\")\nforeach (_package IN LISTS _packages_found _new_packages_not_found)\n  string(TOUPPER ${_package} key)\n  if( GDAL_USE_${key}_INTERNAL )\n      string(APPEND internal_libs_used \" * ${key} internal library enabled\\n\")\n  endif()\nendforeach()\nif (NOT GDAL_CMAKE_QUIET AND internal_libs_used)\n  message(STATUS \"Internal libraries enabled:\\n\\n${internal_libs_used}\\n\")\nendif ()\n\nif (NOT GDAL_CMAKE_QUIET AND\n    DEFINED GDAL_USE_EXTERNAL_LIBS_OLD_CACHED)\n  if (GDAL_USE_EXTERNAL_LIBS_OLD_CACHED AND NOT GDAL_USE_EXTERNAL_LIBS)\n    message(\n      WARNING\n        \"Setting GDAL_USE_EXTERNAL_LIBS=OFF after an initial invocation to ON may require to invoke CMake with \\\"-UGDAL_USE_*\\\"\"\n      )\n  endif ()\nendif ()\nset(GDAL_USE_EXTERNAL_LIBS_OLD_CACHED\n    ${GDAL_USE_EXTERNAL_LIBS}\n    CACHE INTERNAL \"Previous value of GDAL_USE_EXTERNAL_LIBS\")\n\n# Emit a warning if users do not define the build type for non-multi config and that we can't find -O in CMAKE_CXX_FLAGS\n# This is not super idiomatic to warn this way, but this will help users transitionning from autoconf where the default\n# settings result in a -O2 build.\nget_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\nif (NOT GDAL_CMAKE_QUIET\n    AND NOT _isMultiConfig\n    AND (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n    AND (((CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n          AND (NOT (\"${CMAKE_C_FLAGS}\" MATCHES \"-O\") OR NOT (\"${CMAKE_CXX_FLAGS}\" MATCHES \"-O\"))) OR\n         ((CMAKE_CXX_COMPILER_ID MATCHES \"MSVC\")\n          AND ((\"${CMAKE_C_FLAGS}\" MATCHES \"/Od\") OR NOT (\"${CMAKE_C_FLAGS}\" MATCHES \"/O\")))))\n  message(\n    WARNING\n      \"CMAKE_BUILD_TYPE is not defined and CMAKE_C_FLAGS='${CMAKE_C_FLAGS}' and/or CMAKE_CXX_FLAGS='${CMAKE_CXX_FLAGS}' do not contain optimizing flags. Do not use in production! Using -DCMAKE_BUILD_TYPE=Release is suggested.\"\n    )\nendif ()\n\nif (NOT GDAL_CMAKE_QUIET AND\n    \"${CMAKE_BINARY_DIR}\" STREQUAL \"${CMAKE_SOURCE_DIR}\")\n  message(WARNING \"In-tree builds, that is running cmake from the top of the source tree are not recommended. You are advised instead to 'mkdir build; cd build; cmake ..'.\")\nendif()\n\nif (NOT GDAL_CMAKE_QUIET\n    AND UNIX # On Windows, Conda seems to be automatically used\n    AND DEFINED ENV{CONDA_PREFIX}\n    AND NOT \"${CMAKE_PREFIX_PATH}\" MATCHES \"$ENV{CONDA_PREFIX}\")\n  message(WARNING \"Environment variable CONDA_PREFIX=$ENV{CONDA_PREFIX} found, its value is not included in the content of the CMake variable CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}. You likely want to run \\\"${CMAKE_COMMAND} ${PROJECT_SOURCE_DIR} -DCMAKE_PREFIX_PATH=$ENV{CONDA_PREFIX}\\\"\")\nendif()\n\n\n# vim: ts=4 sw=4 sts=4 et\n"
        },
        {
          "name": "gnm",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkgdaldist.sh",
          "type": "blob",
          "size": 4.9765625,
          "content": "#!/bin/sh\n#\n# mkgdaldist.sh - prepares GDAL source distribution package\n\nset -eu\n\nif [ -z ${MAKE+x} ]; then\n    MAKE=\"make\"\nfi\n\nif [ -z ${PYTHON+x} ]; then\n    PYTHON=\"python3\"\nfi\n\n# Doxygen 1.7.1 has a bug related to man pages. See https://trac.osgeo.org/gdal/ticket/6048\ndoxygen --version | xargs ${PYTHON} -c \"import sys; v = sys.argv[1].split('.'); v=int(v[0])*10000+int(v[1])*100+int(v[2]); sys.exit(v < 10704)\"\nrc=$?\nif test $rc != 0; then\n    echo \"Wrong Doxygen version. 1.7.4 or later required\"\n    exit $rc;\nfi\n\ngpg2 --version >/dev/null || (echo \"gpg2 not available\"; exit 1)\n\nGITURL=\"https://github.com/OSGeo/gdal\"\n\nif [ $# -lt 1 ] || [ \"$1\" = \"-h\" ] || [ \"$1\" = \"--help\" ] ; then\n  echo \"Usage: mkgdaldist.sh <version> [-date date] [-branch branch|-tag tag] [-rc n] [-url url]\"\n  echo \" <version> - version number used in name of generated archive.\"\n  echo \" -date     - date of package generation, current date used if not provided\"\n  echo \" -branch   - path to git branch, master is used if not provided\"\n  echo \" -tag      - path to git tag\"\n  echo \" -rc       - gives a release candidate id to embed in filenames\"\n  echo \" -url      - git url, ${GITURL} if not provided\"\n  echo \"Example: mkgdaldist.sh 2.2.4 -branch v2.2.4 -rc RC1\"\n  echo \"or       mkgdaldist.sh 2.3.0beta1 -tag v2.3.0beta1\"\n  exit\nfi\n\n#\n# Processing script input arguments\n#\nGDAL_VERSION=$1\nCOMPRESSED_VERSION=$(echo \"$GDAL_VERSION\" | tr -d .)\n\nforcedate=no\nif test \"$#\" -ge 3; then\n  if test \"$2\" = \"-date\" ; then\n    forcedate=$3\n    shift\n    shift\n  fi\nfi\n\nBRANCH=\"master\"\nif test \"$#\" -ge 3; then\n  if test \"$2\" = \"-branch\"; then\n    BRANCH=$3\n    shift\n    shift\n  fi\nfi\n\nTAG=\"\"\nif test \"$#\" -ge 3; then\n  if test \"$2\" = \"-tag\"; then\n    TAG=$3\n    shift\n    shift\n fi\nfi\n\nRC=\"\"\nif test \"$#\" -ge 3; then\n  if test \"$2\" = \"-rc\"; then\n    RC=$3\n    shift\n    shift\n  fi\nfi\n\nif test \"$#\" -ge 3; then\n  if test \"$2\" = \"-url\"; then\n    GITURL=$3\n    shift\n    shift\n  fi\nfi\n\n#\n# Checkout GDAL sources from the repository\n#\necho \"* Downloading GDAL sources from git...\"\nrm -rf dist_wrk\nmkdir dist_wrk\ncd dist_wrk\n\nif test \"$TAG\" != \"\"; then\n   echo \"Generating package '${GDAL_VERSION}' from '${TAG}' tag\"\n   git clone \"${GITURL}\" gdal\nelse\n   echo \"Generating package '${GDAL_VERSION}' from '${BRANCH}' branch\"\n   git clone -b \"${BRANCH}\" --single-branch \"${GITURL}\" gdal\nfi\n\nif [ ! -d gdal ] ; then\n\techo \"git clone reported an error ... abandoning mkgdaldist\"\n\tcd ..\n\trm -rf dist_wrk\n\texit\nfi\n\ncd gdal\n\nif test \"$TAG\" != \"\"; then\n   echo \"Checkout tag $TAG\"\n   git checkout \"$TAG\" || exit 1\nfi\n\n#\n# Make some updates and cleaning\n#\nif test \"$forcedate\" != \"no\" ; then\n  echo \"* Updating release date...\"\n  echo \"Forcing Date To: $forcedate\"\n  rm -f gcore/gdal_new.h\n  sed -e \"/define GDAL_RELEASE_DATE/s/20[0-9][0-9][0-9][0-9][0-9][0-9]/$forcedate/\" gcore/gdal.h > gcore/gdal_new.h\n  mv gcore/gdal_new.h gcore/gdal.h\nfi\n\necho \"* Cleaning .git, .github .gitignore, ci under $PWD...\"\nrm -rf .git\nrm -f .gitignore\nrm -rf .github\nrm -rf ci\n\nCWD=${PWD}\n\n#\n# Generate man pages\n#\necho \"* Generating man pages...\"\n\n(cd doc; SPHINXOPTS='--keep-going -j auto' make man)\nmkdir -p man/man1\ncp doc/build/man/*.1 man/man1\nrm -rf doc/build\nrm -f doc/.doxygen_up_to_date\n\nif test ! -f \"man/man1/gdalinfo.1\"; then\n    echo \" make man failed\"\nfi\n\ncd \"$CWD\"\n\necho \"* Cleaning doc/, fuzzers/ and perftests/ under $CWD...\"\nrm -rf doc\nrm -rf fuzzers\nrm -rf perftests\n\n#\n# Make distribution packages\n#\necho \"* Making distribution packages...\"\nrm -f VERSION\necho \"$GDAL_VERSION\" > VERSION\n\ncd ..\nmv gdal/autotest \"gdalautotest-${GDAL_VERSION}\"\nmv gdal \"gdal-${GDAL_VERSION}\"\n\nrm -f \"../gdal-${GDAL_VERSION}${RC}.tar.xz\" \"../gdal-${GDAL_VERSION}${RC}.tar.gz\" \"../gdal${COMPRESSED_VERSION}${RC}.zip\"\n\ntar cf \"../gdal-${GDAL_VERSION}${RC}.tar\" \"gdal-${GDAL_VERSION}\"\nxz -k9e \"../gdal-${GDAL_VERSION}${RC}.tar\"\ngzip -9 \"../gdal-${GDAL_VERSION}${RC}.tar\"\nzip -qr \"../gdal${COMPRESSED_VERSION}${RC}.zip\" \"gdal-${GDAL_VERSION}\"\n\nrm -f \"../gdalautotest-${GDAL_VERSION}${RC}.tar.gz\"\nrm -f \"../gdalautotest-${GDAL_VERSION}${RC}.zip\"\ntar czf \"../gdalautotest-${GDAL_VERSION}${RC}.tar.gz\" \"gdalautotest-${GDAL_VERSION}\"\nzip -qr \"../gdalautotest-${GDAL_VERSION}${RC}.zip\" \"gdalautotest-${GDAL_VERSION}\"\n\necho \"* Generating MD5 sums ...\"\n\nMY_OSTYPE=$(uname -s)\nif test \"$MY_OSTYPE\" = \"Darwin\" ; then\nMD5=md5\nelse\nMD5=md5sum\nfi\n\ncd ..\n$MD5 \"gdal-${GDAL_VERSION}${RC}.tar.xz\" > \"gdal-${GDAL_VERSION}${RC}.tar.xz.md5\"\n$MD5 \"gdal-${GDAL_VERSION}${RC}.tar.gz\" > \"gdal-${GDAL_VERSION}${RC}.tar.gz.md5\"\n$MD5 \"gdal${COMPRESSED_VERSION}${RC}.zip\" > \"gdal${COMPRESSED_VERSION}${RC}.zip.md5\"\n\n\necho \"* Signing...\"\nGPG_TTY=$(tty)\nexport GPG_TTY\nfor file in \"gdal-${GDAL_VERSION}${RC}.tar.xz\" \"gdal-${GDAL_VERSION}${RC}.tar.gz\" \"gdal${COMPRESSED_VERSION}${RC}.zip\"; do \\\n  gpg2 --output ${file}.sig --detach-sig $file ; \\\ndone\n\nfor file in \"gdal-${GDAL_VERSION}${RC}.tar.xz\" \"gdal-${GDAL_VERSION}${RC}.tar.gz\" \"gdal${COMPRESSED_VERSION}${RC}.zip\"; do \\\n  gpg2 --verify ${file}.sig $file ; \\\ndone\n\necho \"* Cleaning...\"\nrm -rf dist_wrk\n\necho \"*** The End ***\"\n"
        },
        {
          "name": "ogr",
          "type": "tree",
          "content": null
        },
        {
          "name": "perftests",
          "type": "tree",
          "content": null
        },
        {
          "name": "port",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "swig",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}