{
  "metadata": {
    "timestamp": 1736566231651,
    "page": 245,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gnuradio/gnuradio",
      "stars": 5206,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".ci_support",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 5.54296875,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveMacros: None\nAlignConsecutiveAssignments: None\nAlignConsecutiveBitFields: None\nAlignConsecutiveDeclarations: None\nAlignEscapedNewlines: Left\nAlignOperands:   Align\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortEnumsOnASingleLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nAttributeMacros:\n  - __capability\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      true\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: true\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     90\nCommentPragmas:  '^ IWYU pragma:'\nQualifierAlignment: Leave\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDeriveLineEnding: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nPackConstructorInitializers: NextLine\nBasedOnStyle:    ''\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nAllowAllConstructorInitializersOnNextLine: true\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIfMacros:\n  - KJ_IF_MAYBE\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(gnuradio)/'\n    Priority:        1\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^<(gnuradio)/'\n    Priority:        2\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^<(boost)/'\n    Priority:        98\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^<[a-z]*>$'\n    Priority:        99\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^\".*\"$'\n    Priority:        0\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '.*'\n    Priority:        10\n    SortPriority:    0\n    CaseSensitive:   false\nIncludeIsMainRegex: '(Test)?$'\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentCaseLabels: false\nIndentCaseBlocks: false\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentExternBlock: AfterExternBlock\nIndentRequires:  false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: None\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nLambdaBodyIndentation: Signature\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPenaltyIndentedWhitespace: 0\nPointerAlignment: Left\nPPIndentWidth:   -1\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSortIncludes:    CaseSensitive\nSortJavaStaticImport: Before\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   true\n  AfterOverloadedOperator: false\n  BeforeNonEmptyParentheses: false\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  Never\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInLineCommentPrefix:\n  Minimum:         1\n  Maximum:         -1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nBitFieldColonSpacing: Both\nStandard:        Latest\nStatementAttributeLikeMacros:\n  - Q_EMIT\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseCRLF:         false\nUseTab:          Never\nWhitespaceSensitiveMacros:\n  - STRINGIZE\n  - PP_STRINGIZE\n  - BOOST_PP_STRINGIZE\n  - NS_SWIFT_NAME\n  - CF_SWIFT_NAME\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.4033203125,
          "content": "---\nChecks:          '-*,misc-throw-by-value-catch-by-reference,misc-static-assert,readability-container-size-empty,modernize-use-override,modernize-make-unique,modernize-deprecated-headers,misc-unused-using-decls,misc-redundant-expression'\n# Not in here: modernize-use-emplace, since that basically broke all things it touched\nWarningsAsErrors: ''\nHeaderFilterRegex: '\\.(cc|c|cpp|h|hpp)$'\nFormatStyle:     file\n\n"
        },
        {
          "name": ".cmake-format.py",
          "type": "blob",
          "size": 1.8271484375,
          "content": "# Copyright 2021 Marcus MÃ¼ller\n# SPDX-License-Identifier: LGPL-3.0-or-later\nclass _clang_format_options:\n    def __init__(self, clangfile=None):\n        if not clangfile:\n            clangfile = \".clang-format\"\n        self.lines = []\n        with open(clangfile, encoding=\"utf-8\") as opened:\n            for line in opened:\n                if line.strip().startswith(\"#\"):\n                    continue\n                self.lines.append(line.rstrip().split(\":\"))\n\n    def __getitem__(self, string):\n        path = string.split(\".\")\n        value = None\n        for crumble in path:\n            for line in self.lines:\n                if line[0].strip() == crumble:\n                    if len(line) > 1:\n                        value = line[1].strip().rstrip()\n                    break\n        return value\n\n\n_clang_format = _clang_format_options()\n\nwith section(\"parse\"):\n    additional_commands = {\n        'gr_python_install': {\n            'flags': [],\n            'kwargs': {\n                \"PROGRAMS\": \"*\",\n                \"FILES\": \"*\",\n                \"DESTINATION\": \"*\"\n            }\n        },\n    }\n\nwith section(\"markup\"):\n    first_comment_is_literal = True\n    enable_markup = False\n\nwith section(\"format\"):\n    disable = False\n    line_width = int(_clang_format[\"ColumnLimit\"])\n    tab_size = int(_clang_format[\"IndentWidth\"])\n    min_prefix_chars = tab_size\n    max_prefix_chars = 3 * tab_size\n    use_tabchars = _clang_format[\"UseTab\"] in (\"ForIndentation\",\n                                               \"ForContinuationAndIndentation\",\n                                               \"Always\")\n    separate_ctrl_name_with_space = False\n    separate_fn_name_with_space = False\n    dangle_parens = False\n    command_case = 'canonical'\n    keyword_case = 'upper'\n\nwith section(\"lint\"):\n    max_arguments = 6\n    max_localvars = 20\n    max_statements = 75\n"
        },
        {
          "name": ".conda-forge.yml",
          "type": "blob",
          "size": 2.2919921875,
          "content": "# This file defines the configuration for building conda packages with CI.\n# The actual files for running the CI are created/updated by \"conda-smithy\".\n# You should edit only this file and the recipe files (in recipe_dir, below)\n# and not any of the automatically-generated files in e.g. .ci_support,\n# .scripts, or .github/workflows/conda-build.yml.\n\n# To update the generated conda CI files after a change here or in the recipe,\n# or because of updates to conda-smithy, run\n#\n#   conda-smithy rerender --feedstock_config .conda-forge.yml -c auto\n#   git rm -f .github/workflows/automerge.yml .github/workflows/webservices.yml .circleci/config.yml\n#   git commit --amend -s\n#\n# which will automatically commit any changes.\n# ***** RUN THE ABOVE TO CHECK FOR UPDATES WHENEVER EDITS ARE MADE HERE *****\n#\n# You can also re-render from a pull request by starting a comment with\n# \"/rerender\", which will trigger a Github workflow to perform the above steps.\n\n# The CI will build conda packages for commits and pull requests, and it will\n# upload the packages to Anaconda Cloud on commits to the branch specified\n# in the configuration below. The channel and label that the packages are\n# uploaded to are set in the recipe directory in conda_build_config.yaml.\n# Uploads to Anaconda Cloud also require an API token to be set to the\n# BINSTAR_TOKEN environment variable. Documentation for token generation:\n# https://docs.anaconda.com/anacondaorg/user-guide/tasks/work-with-accounts/#creating-access-tokens\n# To populate BINSTAR_TOKEN for CI jobs, add the token as a secret, e.g.:\n# https://docs.github.com/en/actions/reference/encrypted-secrets\n\n# See https://conda-forge.org/docs/maintainer/conda_forge_yml.html for\n# documentation on possible keys and values.\n\nclone_depth: 0\ngithub_actions:\n  cancel_in_progress: false\n  store_build_artifacts: true\nos_version:\n  linux_64: cos7\nprovider:\n  linux: github_actions\n  osx: github_actions\n  win: github_actions\nrecipe_dir: .packaging/conda_recipe\n# skip unnecessary files since this is not a full-fledged conda-forge feedstock\nskip_render:\n  - README.md\n  - LICENSE.txt\n  - .gitattributes\n  - .gitignore\n  - build-locally.py\n  - LICENSE\n# enable uploads to Anaconda Cloud from specified branches only\n# ***** UPDATE THIS FOR MAINTENANCE BRANCHES ********************************\nupload_on_branch: main\n"
        },
        {
          "name": ".conda",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5908203125,
          "content": "#\n# The following turn off LF->CRLF conversion for some files on Windows.\n# these conversions cause syntax errors on MinGW/MSYS.  They should not\n# have any effect on non-Windows systems or on Cygwin.  Any files that\n# required svn:eof-style=lf under subversion should be included here.\n#\n*.m4\t-crlf\n*.ac\t-crlf\n*.scm\t-crlf\n#\n# In GNURadio 3.9, pybind11 compares hash values of headers and source\n# files against knowns values.  Conversion of values to CRLF on checkout\n# break those checks so keep LF values when files are subject to said checks\n#\n*.h    text eol=lf\n*.c    text eol=lf\n*.cc   text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0224609375,
          "content": "*~\n*.pyc\n*.pyo\nbuild*/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.7646484375,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n    # You can also specify other tool versions:\n    # nodejs: \"16\"\n    # rust: \"1.55\"\n    # golang: \"1.17\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n   configuration: docs/sphinx/conf.py\n\nconda:\n  environment: docs/sphinx/environment.yml\n\n# If using Sphinx, optionally build your docs in additional formats such as PDF\n# formats:\n#    - pdf\n\n# Optionally declare the Python requirements required to build your docs\n#python:\n   #install:\n   #- requirements: host/docs/sphinx/requirements.txt\n"
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 53.4365234375,
          "content": "# Changelog\nAll notable changes to GNU Radio will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic\nVersioning](http://semver.org/spec/v2.0.0.html), starting with version 3.7.12.0.\n\nOlder Logs can be found in `docs/RELEASE-NOTES-*`.\n\n## [3.10.0.0] - 2022-01-14\n\nIt is with much excitement that we release the next step forward for GNU Radio - 3.10.0.0!\n\nNot only does this release bring in some extremely useful new modules (gr-iio, gr-pdu, and arguably gr-soapy thought that thankfully made it also into recent 3.9 maintenance releases), but also sets a path forward for using GNU Radio in heterogeneous compute environments by providing \"custom buffers\" for more efficiently interacting with accelerators (GPUS, FPGAs, TPUs, etc.).\n\nWe have been fortunate this year to have extremely active backporting and consistent maintenance releases from co-maintainter Jeff Long - so many of the fixes and smaller feature (and larger ones) have already seen the light of day in the 3.9.x.x and even 3.8.x.x releases.  \n\nA special specific thanks to the contributors that made these larger features and upstreamed modules possible, but much appreciation to all that contributed through code, documentation, review, and just generally being a part of this wonderful community.\n- gr-pdu: Jacob Gilbert and the team at Sandia National Labs\n- gr-iio: Travis Collins and the team at Analog Devices as well as Adam Horden, David Winter, and Volker Shroer for bringing this in-tree and working through many of the complexities.\n- Custom Buffers Support: We have David Sorber to thank for this incredible, yet advanced, feature that came out of the DARPA SDR 4.0 program and should get a lot of traction.  Check out https://wiki.gnuradio.org/index.php/Custom_Buffers for more of the gory detail.  Also thanks to Seth Hitefield whose initial work in this area helped get this concept into the mainstream for GNU Radio.\n-  Logging Infrastructure Overhaul: A huge thanks to Marcus MÃ¼ller for fixing all of this up, replacing Log4CPP with spdlog and also for providing ongoing architectural leadership to the project\n\n### Changed\n\n- Moved PDU blocks from gr-blocks to gr-network and gr-pdu\n   - Compatibility shim included to allow access to these blocks from gr-blocks\n     but these are deprecated from the gr-blocks namespace and the shim is\n     scheduled for removal in 3.11.\n- gr::blocks::pdu namespace has been reorganized in gr\n   - PDU vector types are accessible in gr::types\n   - PDU functions are accessible in gr::pdu\n   - Common msg port names are accessible in gr::ports\n- Logging Infrastructure changed to use spdlog\n   - +dependency spdlog, -dependency Log4CPP\n   - New, more convenient logging methods\n   - Modernized Interface\n   - Removed iostream and cstdio from logging statements\n\n#### Project Scope\n\n- C++17\n  - requires MSVC 1914 (Microsoft VS 2017 15.7)\n  - replace boost::filesystem with std::filesystem\n- Windows build: removed unnecessary MSVC-specific system include overrides\n- Removed unused volk_benchmark\n- Use Pre-Compiled Headers - speeds up compilation time\n- Further replacements of boost::bind with lambda functions\n- Remove more manual memory management and general c++ modernization\n- PEP8 formatting applied and enforced on all Python files\n- Centralized min dependency and compiler versions in one place for GR and modtool created OOTs\n- Update QA tests to work with OpenEmbedded cross compilations\n- Dependency versions:\n  - Python 3.6.5\n  - numpy 1.17.4\n  - VOLK 2.4.1\n  - CMake 3.16.3\n  - Boost 1.69\n  - Mako 1.1.0\n  - PyBind11 2.4.3\n  - pygccxml 2.0.0\n- Compiler options:\n  - GCC 9.3.0\n  - Clang 11.0.0 / Apple Clang 1100\n  - MSVC 1916 (Microsoft VS 2017 15.9)\n- Replace deprecated distutils in CMake macros\n- Build targets with python dependencies conditionally on `ENABLE_PYTHON`\n\n\n#### gr-blocks\n\n- Remove deprecated networking blocks: `udp_source`, `udp_sink`, `tcp_server_sink`; replaced\n  in 3.9 with more capable blocks in `gr-network`\n- Document the supported operations in transcendental\n\n#### gr-analog\n\n- `fastnoise_source`: Use `uint64_t` seed API, use `size_t` for vector length/indices\n- `fastnoise_source`: Use a simple bitmask if the random pool length is a power\n  of 2 to determine indices, instead of `%`, which consumed considerable CPU\n- `sig_source`: Remove deprecated `freq` message port of signal source block; Use `cmd` port instead\n\n### gr-filter\n\n- Remove deprecated `mmse_interpolator` block; Replaced previously by `mmse_resampler`\n- Speed up filter building with moves\n- Add const to temporary tap vectors\n\n### gr-digital\n\n- Remove deprecated simple_{correlator,framer}\n- Remove deprecated cma, lms, kurtotic equalizers; replaced in 3.9 by `linear_equalizer`\n- Un-deprecate pfb_clock_sync\n- Add header payload demux example \n- Remove crc32 utility and most of packet_utils \n- Remove yml files for non-existent QAM mod/demod blocks\n\n#### gr-dtv\n\n- Refactor ATSC blocks to have separate metadata stream rather than passing structs\n- Add energy normalization for DVB-S2X constellations\n\n#### gr-network\n\n- Fix segfaults when TCP and UDP are restarted\n\n#### gr-qtgui\n\n- Remove spurious volk includes\n- Fix segfaulting overflow in time_sink and waterfall\n- Support for Qwt 6.2\n- Frequency/Waterfall Sinks expand range to 32k and enums in GRC\n- Frequency/Waterfall Sinks force power of 2 for fft size\n\n#### gr-uhd\n\n- Python bindings for RFNoC blocks\n\n#### gr-utils\n\n- gr_modtool bind workaround for pygccxml incompatibility with spdlog\n\n#### gr-video-sdl\n\n- Clean up the SDL sinks:\n   -  Remove unused format parameter \n\n#### gnuradio-runtime\n\n- `gr::random` uses xoroshiro128+ internally, takes `uint64_t` seed\n- Remove unused misc.cc/h\n- Accelerator Device Support\n    - Major changes to the runtime to support \"custom buffers\"\n    - Single Mapped Buffer abstraction that can be inherited out of tree\n- Remove Tag Checker\n- Explicitly convert path to string to fix MSVC build\n- size_t for vmcircbuf constructor and buffer factories\n- Reconfigurable timer value for input blocked condition (scheduler detail workaround)\n\n#### grc\n\n- grcc --output switch for hierarchical blocks\n- Clean up Bokeh server loop\n- Don't blacklist `default` as a flowgraph ID to prevent always starting in an error state\n\n#### Testing\n\n- rm dependencies from disabled components in blocks/runtime tests\n\n#### Misc.\n\n- dtools: Added run-clang-tidy-on-codebase, which does what the name suggests,\n  then updates all bindtool hashes, and commits everything appropriately\n- `gr_filter_design` \n  - update to support PyQt5\n  - fix loading of previously saved .csv files\n\n### Added\n\n- New in-tree module gr-pdu\n- New in-tree module gr-iio\n\n## [3.9.5.0] - 2022-01-XX\n\nThis is an API compatible update to GNU Radio 3.9. Code written for 3.9.X versions should compile and link without modification. The ABI is not guaranteed to be compatible, so a rebuild of OOT modules may be necessary.\n\n### Changes\n\n#### GRC\n- Fix: dependent variables sometimes fail to evaluate\n- Modify and cleanup bokeh server loop\n\n#### gr-analog\n- Update python bindings for power squelch\n\n#### gr-dtv\n- Add energy normalization for DVB-S2X constellations.\n\n#### gr-filter\n- Remove pyqwt and qt4 from filter_design\n\n#### gr-network\n- Fix: segfaults when TCP & UDP blocks are restarted\n- Add throttle flag to the tcp source and sink blocks\n\n#### gr-qtgui\n- Enable use of Qwt 6.2\n\n#### gr-uhd\n- Add Python bindings for rfnoc_{block, ddc, duc, rx/tx_radio}\n\n#### modtool\n- Improvements in generated QA code\n\n#### Build System\n- Better support for cross-compiling (OpenEmbedded)\n- Find log4cpp on Ubuntu systems\n- Handle optional components in `find_package`\n- Add version check for pygccxml\n\n#### CI/QA\n- Update tests to work with OpenEmbedded\n\n\n## [3.9.4.0] - 2021-10-25\n\nThis is an API compatible update to GNU Radio 3.9. Code written for 3.9.X versions should compile and link without modification. The ABI is not guaranteed to be compatible, so a rebuild of OOT modules may be necessary.\n\n### Changes\n\n#### Regressions Fixes\n\n- Remove `#include <filesystem>` (C++17 feature) from one file\n- Restore `pyqwidget()` in gr-qtgui\n\n#### GRC\n\n- GRC now runs on Fedora 35 ... Gtk initialization checks were too strict\n- Add keyboard shortcuts for zoom\n- Account for scale factor when computing drawing area size\n- Use font size from config for block comments\n- Change type aliasing to allow interleaved short/byte to be connected to vectors of short/byte. Stricter type checking was added previously and caused some blocks to be unconnectable when using these types.\n- Required params no longer default to `0` when left empty. This caused hard-to-find errors. Older flowgraphs that have empty required fields will need to be fixed.\n- Tooltips fixed for categories and modules\n\n#### gr-runtime\n\n- PMT uses the VOLK allocator for vectors\n- `get_tags_in_window()` Python wrapper calls the correct function\n- Add `--pybind` option to `gnuradio-config-info` to get PyBind11 version\n\n#### gr-blocks\n\n- Add example for XMLRPC\n- Add a unit test for Message Strobe\n- Fix C++ support for Unpacked to Packed\n\n#### gr-channels\n\n- RNG seeds are initialized correctly\n\n#### gr-digital\n\n- Fix yml file for Header/Payload Demux\n\n#### gr-network\n\n- Suppress warning in tuntap\n\n#### gr-qtgui\n\n- Remove unusable int type in Number Sink yml\n- Use `no_quotes()` function in several yml files\n\n#### modtool\n\n- Hashes can be fixed using modtool using `--update-hash-only`\n- Use `tempfile()` instead of `/tmp` in bindtool and modtool\n- Use `static_cast` instead of `reinterpret_cast` in templates\n- Correct broken Python general block template\n\n#### Build system\n\n- Better check for Boost version\n- Determine the Python prefix more reliably\n- Use GR-specified compiler standard (C++14) in gr-soapy, instead of the SoapySDR standard (C++11)\n- GrPython.cmake is compatible with older cmake\n\n#### Documentation\n\n- Man pages are in-tree\n- Repair many examples, especially in gr-digital\n- Allow UTF-8 in pydoc templates\n\n#### CI\n\n- Execute `make install` during test\n- Add Ubuntu 18.04 test target\n\n## [3.9.3.0] - 2021-09-30\n\nThis is an API compatible update to GNU Radio 3.9. Code written for 3.9.X versions should\ncompile and link without modification. The ABI is not guaranteed to be compatible, so\na rebuild of OOT modules may be necessary.\n\n### Changes\n\n#### General\n\n- Many cleanups and some C++ modernization changes\n- Replace Boost with stdc++ equivalents (ongoing effort)\n- Logging cleanup and performance improvements (ongoing effort)\n- Cleanup of many unused includes\n- Various block yaml cleanups and repairs\n- Use Soapy instead of UHD for flowgraph testing in gr-analog and gr-dtv\n\n#### GRC\n\n- Improvements in C++ templates and code generation, more blocks are usable\n- Add specification of packages to find (via cmake) for C++ templates\n- Fix C++ hier block param template\n- Add GUI hints for widgets in C++ code generation\n- Add no_quotes() convenience function to strip quotes from strings, callable from templates\n- Allow short and byte as valid types in an enum\n- Fix desync when dragging block (block would not always track cursor)\n- Correctly evaluate interdependent variables\n- Allow error messages to be copied to clipboard\n- Update disabled blocks if they depend on others\n\n#### gnuradio-runtime\n\n- Deprecate tag_checker class (will be removed in 3.10)\n- Detect and follow symbolic links for installation prefix in gr::prefix()\n- Add \"<\" operator for comparison of tags (instead of offset_compare())\n\n#### gr-blocks\n\n- New Matrix Interleaver block\n- Throttle and Head blocks can be input-only when no output is needed, improving performance\n- Fix tag propagation in (un)pack-k-bits blocks\n- Fix namespace for nco and vco in benchmarks\n\n#### gr-digital\n\n- New Async CRC16 block\n- Add NRZI option to Differential En/Decoder\n- Constellation performance improvements\n- Fix constellation normalization by average power\n- Remove unimplemented msg output port from Chunks to Symbols block\n- Make unpacking of bits optional in GMSK modulator so the blocks can accept unpacked bits\n- In GFSK/GMSK hier blocks, replace M&M clock recovery with newer and more capable Digital Symbol Sync block\n\n#### gr-fec\n\n- Cleanups and code improvements\n\n#### gr-fft\n\n- Add a \"shift\" paramenter to Log Power FFT, to place DC bin at center\n\n#### gr-filter\n\n- Performance improvement in PFB Arbitrary Resampler when interpolating, especially at low rates\n\n#### gr-qtgui\n\n- Fix display of tags on the last sample (would be dropped)\n- Python wrapping: replace pyqwidget() with qwidget() - this is not intended to be a visible fix, but is mentioned here in case it causes trouble for anyone\n- C++ generation\n  - add double quotes to cpp_opts keys with colons\n  - position windows correctly depending on gui_hint\n  - use option attributes to generate enums\n  - use the cpp enums for wintype and trigger_type\n\n#### gr-uhd\n\n- Fix input filename in freq hopping examples\n- Make RFNoC a separately enabled component in cmake\n- Python bindings for rfnoc_graph,_rx/tx_streamer\n\n#### gr-video-sdl\n\n- U and V channels were reversed on sink blocks\n\n#### gr-soapy\n\n- Added message support for SoapySDR 0.8 API\n\n#### modtool\n\n- Set VERSION_PATCH to 0 instead of \"git\" in new modules\n- Fix \"rm\", \"bind\", disable\", \"rename\" and \"makeyml\" which had unexpected side effects, or did not work as a user would expect\n\n#### Build System\n\n- Correct minimum version checking for Mako\n- Ensure that RC_*_VERSION are numeric (Windows)\n- Fix finding libunwind\n- Pass through extra arguments to GR_PYTHON_INSTALL to install command\n- Remove absolute paths and private links from exported targets\n- Add gir1.2-gtk-3.0 as deb runtime dependency\n\n#### Documentation\n\n- Code of Conduct updates and link to Wiki\n\n#### CI\n\n- Do not error out on deprecations, allowing testing of deprecated code\n\n## [3.9.2.0] - 2021-06-10\n\n### Changed\n\n#### SoapySDR support (gr-soapy)\nThe new gr-soapy built-in module provides access to Soapy hardware drivers using the SoapySDR driver framework. See https://wiki.gnuradio.org/index.php/Soapy for more information.\n\nIf SoapySDR 0.7.2 or newer is available during GNU Radio configuration, the gr-soapy module will be enabled.\n\nThe SoapySDR framework and Soapy driver modules are not maintained by the GNU Radio project. Driver modules are dynamically discovered and linked. They may be added and updated independently from the GNU Radio release cycle.\n\n#### GRC\n\n- Parameter expressions and/or values can be displayed in blocks on the flowgraph. Previously, only values were displayed. Look for the \"Show Parameter ...\" toggles under the View menu.\n- Deprecated blocks are shown in a distinct color (orange), and the optional `deprecated` property has been added to block yaml\n- Dark theme works better, especially for parameter fields\n- Vector length is now correctly applied to all input ports\n- Validation has been improved. Raw types are validated. Port connections are checked by type rather than by item size.\n- Variable names that cause name conflicts in Python code (e.g., with package names) are rejected\n- Bus logic fixes\n- Blocks can no longer be dragged off the screen and lost forever\n\n#### gnuradio-runtime\n\n- Remove `pmt::pmt_*` functions, which were not actually implemented. This is technically an API change, but any use of the API would have resulted in a link error.\n- Remove Python bindings for internal buffer functions\n\n#### gr-analog\n\n- Added an example for PLL Frequency Detector\n- Better names for parameters in PLL GRC blocks\n\n#### gr-blocks\n\n- Consistent naming for Vector Length parameter in GRC blocks\n- `count_bits` uses VOLK `popcnt` for better performance (used for example in the Correlate Access Code block)\n- Rotator block phase increment parameter is controllable via a message, and a tag can be added at the point where the increment is adjusted\n\n#### gr-digital\n\n- MPSK example updated to use a Linear Equalizer (replacing deprecated block)\n\n#### gr-filter\n\n- Filter Delay documentation improvement\n- Interpolating FIR filter can generate C++ code\n\n#### gr-dtv\n\n- VL-SNR bugs fixed (incorrect constants).\n\n#### gr-qtgui\n\n- Improve autoscaling for vector sinks\n- Fix floating-point resolution problems in several widgets, due to interpretation of PMT doubles as floats\n\n#### gr-uhd\n\n- Add policy enum to Python bindings for `tune_request` \n- Additional time spec options on UHD blocks (PC Clock on Next PPS, GPS Time on Next PPS)\n- Fix up code that was generating warnings\n- Fix command handler logic to apply commands from messages to the correct channel\n\n#### gr_filter_design\n\n- \"File/Save\" is disabled until the taps have been computed, and the GUI is reset after a save, to make it clearer which data is being saved.\n- Entries are hidden for parameters that do not apply to the selected filter type.\n- Save window type as an integer instead of a Python enum name\n\n#### gr_modtool\n\n- Improve validation of module and block names\n\n#### Build System and Infrastructure\n\n- Improved messages related to dependencies MPIR and GMP. Only one of these packages is required, and the previous error messages were confusing.\n- Cleaner builds for Windows and Conda. A number of general cmake improvements have resulted from this work.\n- In-tree packaging files for DEB and RPM, used with Launchpad and COPR\n- Added man pages for GNU Radio tools\n- Test code generation for all in-tree GRC examples\n- In GrPybind.cmake, `PYBIND11_INCLUDE_DIR` (incorrect) was changed to `pybind11_INCLUDE_DIR`\n\n### Contributors\nAt LEAST the following authors contributed to this release. Note that only authors of commits are included here. A number of people contribute in other ways, including code review, documentation and testing.\n\n- 0xloem <0xloem@gmail.com>\n- Christophe Seguinot <christophe.seguinot@univ-lille.fr>\n- Chuang Zhu <genelocated@yandex.com>\n- Codey McCodeface <Codey.McCodeface@gmail.com>\n- Ferenc Gerlits <fgerlits@gmail.com>\n- HÃ¥kon VÃ¥gsether <hauk142@gmail.com>\n- Igor Freire <igor@blockstream.com>\n- Jacob Gilbert <jacob.gilbert@protonmail.com>\n- Jeff Long <willcode4@gmail.com>\n- Josh Morman <jmorman@perspectalabs.com>\n- Liu, Andrew Z <liu.andrew@vast-inc.com>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Martin Braun <martin@gnuradio.org>\n- Martyn van Dijke <martijnvdijke600@gmail.com>\n- Nicholas Corgan <n.corgan@gmail.com>\n- Ron Economos <w6rz@comcast.net>\n- Ryan Volz <ryan.volz@gmail.com>\n- Solomon Tan <solomonbstoner@yahoo.com.au>\n- Volker Schroer\n- Zackery Spytz <zspytz@gmail.com>\n\n## [3.9.1.0] - 2021-03-17 \"Luck-O-The-Radio\"\n\nAPI is compatible with C++ code written against previous v3.9 releases.\n\nABI (link time) compatibility is not guaranteed. Out-of-tree C++ code\nlinked to previous v3.9 releases should be rebuilt against this version.\n\n### Project Scope\n- (internal) Build system improvements and fixes\n- (internal) Use C++14 features instead of Boost where possible\n- Fewer compiler warnings (due to fixed code, not removal of warnings!)\n\n### OOT Support\n- cmake: standard FindGSL used in lieu of custom one, so OOTs should no longer\n  copy this module from the GNU Radio tree if needed\n- modtool: better exception/error handling\n- modtool: will non-interactively add blocks with no parameters\n  (`--argument-list=\"\"`)\n- PyBind11 header hash hotfixer\n  (gr-utils/bindtool/scripts/binding-hash-hotfixer.zsh) makes life easier\n\n### GRC\n- Block param values can be shown as expressions and/or evaluated values. Under\n  the View menu, see \"Show parameter ...\" options.\n- Better handling of gui hints, avoid hiding widgets in cases where some have\n  GUI hints and some do not\n- Ensure that strings are valid utf8 when evaluating parameters\n- Save embedded python blocks/modules to hier_block_directory\n- Save config and update recent file sub-menu before executing flowgraph\n- Revert to previous \"block id\" display behavior\n- Fix drag n' drop issue with Quartz (macOS) backend\n- C++ generated code: remove gnuradio prefix from linked libraries\n- Python generated code: prefix generated modules with flowgraph id\n- connect() will be called for hier blocks even if they don't have ports\n- Check for PyYAML 3.11 (was checking for 3.10 even though 3.11 was required)\n\n### gnuradio-runtime\n- Default buffer size can be adjusted by setting `buffer_size` in the\n`[Default]` section of the GNU Radio config file. Otherwise, the longstanding\n  default of `32768` is used.\n- Windows/Python: add DLL search path, as required by newer versions of Python\n\n### gr-audio\n- Windows: reduce priority of Windows native audio to LOW, preferring Portaudio\n\n### gr-blocks\n- Message Debug: prints warning when a non-PDU message is received on the\n  Print PDU port\n- File Source handles EOF properly in non-seekable files (e.g., pipes)\n- Several bounds checking and boundary condition improvements\n- Remove DC Spike AutoSync algorithm fixed\n\n### gr-digital\n- MSK timing error detector improvement\n- Python bindings include control_loop parent class in child class\n- Correlation Estimator parameter `threshold` well documented\n\n### gr-fft\n- New window types: Nuttall, Blackman Nuttall, Nuttall CFD, Welch, Parzen,\n  Exponential, Riemann, Gaussian and Tukey\n\n### gr-filter\n- Taps blocks (e.g., Low Pass Filter Taps) now propagate parameter changes\n- Filter Designer: IIR/Band Pass/Bessel works\n\n### gr-qtgui\n- Add toggling label and icon on plot play/stop button\n- Time Raster Sink: axis labels and ranges are configurable\n- Qt Chooser: label improvements\n\n### gr-uhd\n- DEPRECATION: UHD blocks currently accept control messages (e.g. for\n  frequency change) as PMT pairs and tuples, in addition to the intended\n  PMT dict format. In v3.11, only the dict format will be accepted.\n- Command note: `freq` messages in this version must be dicts. Additionally,\n  the `direction` key must be present and set to `TX` or `RX`.\n  Python example: `pmt.to_pmt({'freq':100e6,'direction':'RX'})`\n  The original behavior may be restored in an update, but code should be\n  converted to use the dict format in preparation for future versions.\n- `set_filter()` adds `chan` parameter\n- Python generated code improved for FE corrections\n- Allow control of frequency and gain in both directions at the same moment\n- Add command handler for mtune (\"manual tune\")\n- Add GPIO control via messages\n- Add start time param to GRC blocks\n- Support streaming modes: `STREAM_MODE_START_CONTINUOUS`,\n  `STREAM_MODE_STOP_CONTINUOUS`, `STREAM_MODE_NUM_SAMPS_AND_DONE`,\n  `STREAM_MODE_NUM_SAMPS_AND_MORE`\n- Documentation improvements\n- Tag sink demo example\n- Better logging of over/underflows, time errors and time tags\n- Added Python binding for ALL_LOS (all local oscillators)\n- `uhd_fft` application X11/Qt related cleanups\n\n### QA\n- `waitFor(condition, ...)` available for tests that use timeouts\n\n### Contributors\nAt LEAST the following authors contributed to this release.\n\n- Artem Pisarenko <artem.k.pisarenko@gmail.com>\n- Christophe Seguinot <christophe.seguinot@univ-lille.fr>\n- Daniel EstÃ©vez <daniel@destevez.net>\n- David Pi <david.pinho@gmail.com>\n- Emmanuel Blot <emmanuel.blot@free.fr>\n- gnieboer <gnieboer@corpcomm.net>\n- HÃ¥kon VÃ¥gsether <hauk142@gmail.com>\n- Ipsit <mmkipsit@gmail.com>\n- Jacob Gilbert <jacob.gilbert@protonmail.com>\n- Jason Uher <jason.uher@jhuapl.edu>\n- Jeff Long <willcode4@gmail.com>\n- Jason Uher <jason.uher@jhuapl.edu>\n- Jeppe Ledet-Pedersen <jlp@satlab.com>\n- Josh Blum <josh@joshknows.com>\n- Josh Morman <jmorman@perspectalabs.com>\n- karel <5636152+karel@users.noreply.github.com>\n- luz paz <luzpaz@users.noreply.github.com>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Martin Braun <martin@gnuradio.org>\n- Nick Foster <bistromath@gmail.com>\n- Niki <niki@aveer.io>\n- rear1019 <rear1019@posteo.de>\n- Ron Economos <w6rz@comcast.net>\n- Ryan Volz <ryan.volz@gmail.com>\n- Sebastian Koslowski <sebastian.koslowski@gmail.com>\n- Terry May <terrydmay@gmail.com>\n- Vasilis Tsiligiannis <acinonyx@openwrt.gr>\n- Victor Wollesen <victor.w@pervices.com>\n- Volker Schroer\n- Zackery Spytz <zspytz@gmail.com>\n\n## [3.9.0.0] - 2020-01-17\n\nThe future is not set, there is no fate but what we make for ourselves. In this\nvery spirit, GNU Radio 3.9 packs a whole bunch of power when it comes to\ntransforming the way GNU Radio and its ecosytem can be developed in the future.\n\nNot only did we have great progressions from old dependencies that proved to be\nall too problematic (SWIG, Python2), but also did we see an incredibly influx of\npeople actively working on how maintainable this code base is. This will nurture\nthe project for years to come.\n\nAll in all, the main breaking change for pure GRC users will consist in a few\nchanged blocks â an incredible feat, considering the amount of shift under the\nhood. Mentioning large shifts, the work that went into the PyBind binding, the\nCMake modernization, the C++ cleanup, the bug-fixing and the CI infrastructure\nis worthy of explicit call out; I especially thank\n\n* Josh Morman\n* Thomas Habets\n* Jacob Gilbert\n* Andrej Rode\n* Ryan Volz\n\nhere.\n\nFor developers of OOTs, I'm sure PyBind11 will pose a surprise. If you're used\nto SWIG, yes, that's more code to write yourself. But in effect, it's less code\nthat breaks, and when it breaks, it breaks in much more understandable ways.\nJosh has put a lot of effort into automating as much of that as possible.\nThere's certainly no shortage of demand for that! The ecosystem (remember GNU\nRadio's tagline?) is in a steady upwind. We've seen more, and more stable,\ncontributions from OOT maintainers. That's great!\n\nFor in-tree development, newer dependencies and removal of anachronisms will\nmake sure things move much smoother. Our CI is getting â lately literally every\nday â better, which means we not only catch bugs earlier, but also allow for\nmuch quicker review cycles.\n\nOne central change:\n\nIf you're contributing code upstream, we no longer need you to submit a CLA;\ninstead, we ask you to just certify, yourself, that you're allowed to contribute\nthat code (and not, e.g. misappropriating someone else's code).\n\nThat's what the DCO (Developer Certificate of Origin) is: Just a quick, \"hey,\nthis code is actually for me to contribute under the project's license\"; nothing\nmore.\n\nWhich means that our infrastructure will refuse to let your code into the tree\nif you didn't add a\n\n`Signed-off-by: Maxime Example <maxime@example.com>`\n\nto your commit message. Luckily, git can do that for you: `git commit -s`.\n\n### Changed\n\n#### Project Scope\n\n- **We now require commits to be signed off (DCO)**; this means you have to\nattach `-s` to your `git commit` command line\n- License headers now SPDX format\n- C++14\n - use C++11 facilities in a lot of places where Boost was still used,\n   especially smart pointers, range loops\n - lambdas where `boost::bind` was used\n- C11\n- Dependency versions:\n  - Python 3.6.5\n  - numpy 1.13.3\n  - VOLK 2.4.1\n  - CMake 3.10.2\n  - Boost 1.65\n  - Mako 1.0.7\n  - PyBind11 2.4.3\n- Compiler options:\n  - GCC 8.3.0\n  - Clang 11.0.0 / Apple Clang 1100\n  - MSVC 1910 (Microsoft VS 2017 15.0)\n- VOLK now \"regular\" dependency, not in-tree submodule\n- numpy now also a CMake-checked hard dependency for Python support\n- Exception Handling: throw by value, catch by reference (clang-tidy check)\n- C++11: Emplace in vectors where you can; brings performance boni, but not\n  included in clang-tidy-checks\n- Further clang-tidy based code optimizations:\n- empty() instead of size() == 0\n- override where overriding virtual functions (which we do a lot)\n- Logging: removed all `std::cerr` and `fprintf(stderr,â¦)` by GNU Radio logging\n- Logging: Changed logging format for many multiline error logs\n- purged `snprintf`, `printf` logging\n- There were a lot of places where a malloc'ed object was used internally, where\n  that was inappropriate. Using simple instance-holding fields now.\n- `const` for members that were only set at construction time is now desired,\n  and implemented in most places\n- `const` -> `constexp` in a lot of places.\n- `assert` -> `static_assert`\n- An exception-throwing block will now terminate the flow graph process,\n  configurable through `top_block`\n- `gr-utils` cleanup, folder restructuring\n- config version checks installed CMake file will accept \"at least this version\"\n  now\n- PyBind11 replaces SWIG\n  - Full tree conversion from SWIG to Pybind11 bindings\n- Doxygen now uses MathJax, full LaTeX installation no longer required\n\n**NOTE**: Most of the changes above change the generally preferred coding style\nin a lot of situations.\n\n#### GRC\n\n- start flowgraph in folder where it resides\n\n#### gnuradio-runtime\n\n- When calculating offsets in non-integer rate FEC, `lround`\n- default seed for `gr::random` now actually as documented time-dependent\n- loggers moved from `gr::block` to `gr::basic_block`\n- PMT serialization\n- PMT dicts no longer indistinguishable from pairs\n- PMT symbol hashing no longer suffers under oddball own implementations\n\n#### gr-audio\n\n- Increased ALSA buffer nperiods\n\n#### gr-blocks\n\n- `add`, `add_const` VOLK'ized, templated\n  - this seems to break things in other places, even if it proves to be\n    mathematically identical\n- `wavfile` infrastructure: `libsndfile` now dependency\n\n#### gr-digital\n\n- `transcendental` block: default to 32 bit float complex, not double\n- Linear equalizer: separate adaptive algorithm, allows for using e.g. trained\n  sequences instead of the classical LMS, CMA\n- DFE: better structure for decision history\n\n#### gr-dtv\n\n- LDPC encoder: template functions instead of `#define`d macros\n- LDPC encoder: smaller tables through `uint16_t` for index tables\n\n#### gr-fec\n\n- API `uint8_t`, not `char`\n\n#### gr-fft\n\n- FFT blocks/functions templatized\n\n#### gr-filter\n\n- logging format\n- `rational_resampler_base` -> `rational_resampler`\n\n#### gr-uhd\n\n- Required UHD version bumped to 3.9.7\n- logging format\n\n### Deprecated\n\n#### gr-analog\n\n- `sig_source`: `freq` port will be removed in the future\n\n#### gr-audio\n\n- `audio-sink`, `-source`: Windows audio sink/source deprecated, the portaudio\nsink/source works even better under windows anyway\n\n#### gr-digital\n\n- In favor of `symbol_sync`, deprecate:\n  - `clock_recovery_mm`\n  - `msk_timing_recovery`\n  - `pfb_clock_sync`\n\n### Added\n\n#### Project Scope\n\n- C++ Generation all over the place\n- PyBind bindings + generator\n- Github actions\n- Reproducible builds-compatible CMake TIMESTAMP\n\n#### gnuradio-runtime\n\n- `block_gateway`: `set_max_output_buffer`\n- `GR_PREFS_PATH` environment variable sensitivity to configure the path to the\n  config file\n- `gnuradio-config-info --print-all`\n\n#### GRC\n\n- option to toggle ID visibilities globally\n- Validation check for QT GUI hints\n- Python snippets\n\n#### block header parsing tool\n\n- block header parsing tool (GSoC 2019)\n\n#### gr_modtool\n\n- option to convert blacklisted files\n\n#### gr-analog\n\n- `sig_source`: `cmd` port adds support for dicts, setting of frequency,\namplitude, offset and phase parameters\n\n#### gr-blocks\n\n- `selector` now has control message ports\n- Rotator-based freq shift convenience wrapper\n- Message-to-Variable and vice versa blocks\n- DC Spike removal\n- IQ Swap\n- Complex to interleaved char / short: scaling option\n- Delay block: control message port\n- Phase Shift block with message port\n- `wavfile_sink`, `_source` can now deal with a lot of audio formats:\n  uncompressed WAV/AIFF, Âµ- and A-law compressed audio, OGG/Vorbis, FLAC, even\n  octave files\n- Stream Demux, which demuxes streams according to lengths vector\n- `rotator`: `phase()` getter\n\n#### gr-digital\n\n- OFDM: multiple CP lengths\n- `ofdm_equalizer_simpledfe`: `enable_soft_output`\n- Constellation Encoder\n- Constellation: normalization options\n\n#### gr-fec\n\n- `{en,de}code_rs_8`, `{en,de}code_rs_ccsds`: Reed-Solomon en- and decoders\n\n#### gr-fft\n\n- Windows:\n  - Gaussian\n  - Flat Top\n  - Tukey\n- Window build() call now with default beta\n\n#### gr-filter\n\n- GRC: File taps loader block\n- Low pass FFT filter convenience wrapper\n- ichar / ishort decimator\n- phase continuity for `freq_xlating_fir_filter`\n\n#### gr-network\n\n- `gr-network`: a whole new networking blocks module!\n  - TCP\n  - UDP\n- Much better lockup/multithreading support than 3.7-era `blks2` nightmare\n  infrastructure :)\n\n\n#### gr-qtgui\n\n- Azimuth/Elevation plot\n- Autocorrelation plot\n- Compass visualization\n- Dial control\n- Gauge: dial, level\n- Distance plot\n- LED-like indicator\n- Message-passing check box\n- Message-passing numeric control\n- Message-passing push button\n- Toggle Button\n- Eye sink\n- Vertical slider\n\n#### gr-uhd\n\n- Filter API\n- UHD 4.0 support\n- Power Reference API\n- Bidirectional setting messages on both sink, source\n\n#### gr-vocoder\n\n- Codec2 dev branch support\n- FreeDV: In/output rates can differ\n- FreeDV: text message output\n\n#### gr-zeromq\n\n- C++ GRC templates\n- Tag filtering for tag-forwarding blocks\n\n### Removed\n\n#### Project Scope\n\n- VOLK is no longer a submodule\n- Sphinx: consolidate into doxygen, or wiki-maintained block list.\n- Python 2\n- SWIG\n- `gru` python module\n\n#### gnuradio-runtime\n\n- `circular_file.cc`\n- `math/common_factor.hpp`\n\n#### gr-blocks\n\n- `bin_statistics_f`\n- `log2_const`\n\n#### gr-digital\n\n- PFB clock sync: `set_taps`\n- deprecated old OFDM infrastructur\n  - `ofdm_frame_acquisition`\n  - `ofdm_frame_sink`\n  - `ofdm_insert_preamble`\n  - `ofdm_sync_fixed`\n  - `ofdm_sync_pn`\n  - `ofdm_sync_pnac`\n  - `ofdm_sync_ml`\n  - `ofdm_receiver`\n- `digital_voice`\n\n#### gr-fft\n\n- `malloc_float`, `_double`: rely on VOLK\n- Goertzel: dtor superfluous\n\n#### gr-filter\n\n- deprecated window function duplicates (use them from gr-fft!)\n\n### Fixed\n\n#### Project Scope\n\n- CMake: Qwt, Log4Cpp detection\n- ctrlport strings unicodified\n- Freedesktop install script was not executed\n- Redundant icons installed\n- Path substitution on Windows was backslash-broken\n- YAML definitions: more than I can count\n- Cross-building: py interpreter at runtime != build time\n\n#### gnuradio-runtime\n\n- ctrlport: unholy stored reference to stack-allocated object removed\n- Sine table generation for fixed point math\n- `gr_unittest`: `floatAlmostEqual` had a lot of false passes due abuse of\n  `all()`\n- `get_tags_in_range` for `delay < (end-start)`\n- Premature tag pruning\n- release flattened flowgraph after stopping, fixes restartability/shutdown\n  problem\n- PMT serialization portability\n- latency issue caused by setting block alias on msg block\n- Windows logging errors\n- ctrlport: Thrift >= 0.13 broke\n\n#### GRC\n\n- Tab widget ID visibilities\n- A lot of YAML templates\n- Default setting in qtgui chooser restored\n- Boolean parameters no longer switch buttons\n- Nested namespace handling\n- Don't rely on set ordering in tests\n- configparser import\n- input box color theme on dark themes\n- Search box typing doesn't inadvertedly interact with the rest of GRC anymore\n\n#### gr_modtool\n\n- Empty argument lists allowed\n- Boost UTF replaced CppUnit, this needed to be done here, too\n\n#### gr-analog\n\n- `wfm` left/right, filters\n\n#### gr-audio\n\n- portaudio: lock acquisition was improper\n\n#### gr-blocks\n\n- Throttle now uses monotonic clock\n- Tag debug only saved last `work` call's tags\n- File sink flushes on `stop`\n- `gr_read_file_metadata.py` used to lose `rx_time` precision\n- File source big file handling under Windows\n- `file_*`: `fseek` errors used to be ignored\n\n#### gr-digital\n\n- `map_bb`: thread safety, buffer overflows\n- `additive_scrambler`: reset was broken\n- Constellation scalefactor wasn't always initialized\n- long-standing `qa_header_payload_demux` bug addressed by waiting for both RX\n  and TX, not only either\n- false triggers in `correlate_access_code`\n\n#### gr-dtv\n\n- rate mismatch in ATSC flowgraphs\n\n#### gr-fec\n\n- `async_decoder` Heap corruption\n- `cc_encoder`: constraint length K > 8 led to wrong output\n\n#### gr-fft\n\n- thread safety of copy assignment/ctor\n- log power FFT Python\n\n#### gr-filter\n\n- `variable_band_pass_filter` GRC complex taps input\n- RRC filter gain for alpha = 1\n\n#### gr-qtgui\n\n- Remove copies of image data in returns by using move semantics\n- Remove bogus overriding in drawing functions of `plot_raster`, `_waterfall`\n- Edit MSG box: don't require key to be set\n- Don't check for Python2 libs\n- Number Sink ignored averaging setting\n\n#### gr-uhd\n\n- UHD apps: Py3 fixes\n- USRP blocks: multichannel objects not properly populating channels\n\n#### gr-video-sdl\n\n- YUV formats fixed\n\n#### gr-zeromq\n\n- Don't depend on deprecated ZMQ functionality (fix warnings, include what you\n  use)\n- Unhandled exceptions now handled, much calmer\n- Avoid infinite blocking in `tb.stop()` by using `ZMQ_LINGER`\n\n#### gr-uhd\n\n- Change of log method, and increase message verbosity\n\n### Added\n\n#### gr-uhd\n\n- Added `gr::prefs`-configurable logging interval for underflow, overflow and\n  command time error (`[uhd]` section, `logging_interval_ms` key, milliseconds\n  integer)\n\n## [3.8.5.0] - 2022-01-XX\n\nThis is an API compatible update to GNU Radio 3.8. Code written for 3.8.X versions should compile and link without modification. The ABI is not guaranteed to be compatible, so a rebuild of OOT modules may be necessary.\n\n#### GRC\n- GRC now runs on Fedora 35 ... Gtk initialization checks were too strict\n- Fix: dependent variables sometimes fail to evaluate\n- Change type aliasing to allow interleaved short/byte to be connected to vectors of short/byte. Stricter type checking was added previously and caused some blocks to be unconnectable when using these types.\n- Account for scale factor when computing drawing area size\n- Tooltips fixed for categories and modules\n- \n#### gr-digital\n- Fix yml file for Header/Payload Demux\n\n#### gr-dtv\n- Add energy normalization for DVB-S2X constellations.\n\n#### gr-filter\n- Remove pyqwt and qt4 from filter_design\n\n#### gr-qtgui\n- Enable use of Qwt 6.2\n- Remove unusable int type in Number Sink yml\n- RangeWidget - implement Eng & EngSlider\n\nAt LEAST the following authors contributed to this release.\n\n- Bill Muzika <bill.muzika@outlook.com>\n- Chris <christopher.donohue@gmail.com>\n- Chris Vine <vine35792468@gmail.com>\n- Clayton Smith <argilo@gmail.com>\n- Doron Behar <doron.behar@gmail.com>\n- Jeff Long <willcode4@gmail.com>\n- John Sallay <jasallay@gmail.com>\n- Josh Morman <jmorman@gnuradio.org>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Mark Pentler <tehhustler@hotmail.com>\n- Martin Braun <martin@gnuradio.org>\n- masw <masw@masw.tech>\n- Matt Mills <mmills@2bn.net>\n- Nick Ãstergaard <oe.nick@gmail.com>\n- Ron Economos <w6rz@comcast.net>\n- Ryan Volz <ryan.volz@gmail.com>\n- Sec <sec@42.org>\n- Volker Schroer\n\n## [3.8.4.0] - 2021-09-30\n\nAPI is compatible with C++ code written against previous v3.8 releases.\n\nABI (link time) compatibility is not guaranteed. Out-of-tree C++ code\nlinked to previous v3.8 releases should be rebuilt against this version.\n\n### Changed\n\n#### GRC\n\n- Fix drag and drop issue with Quartz\n- Fix desync when dragging block\n- Update disabled blocks if they depend on others\n- Allow short and byte as valid types in an enum\n- Fix evaluation of interdependent variables\n\n#### modtool\n\n- Set VERSION_PATH to 0 in new modules, instead of using GIT rev\n- For Python3, return correct exeption ModuleNotFoundError instead of ImportError\n\n#### gr-blocks\n\n- New Matrix Interleaver block\n\n#### gr-channels\n\n- Fix \"hide\" expressions in yml files\n\n#### gr-digital\n\n- Remove unused msg output port from Chunks To Symbols block yml\n\n#### gr-fft\n\n- Add \"shift\" parameter to Log Power FFT\n\n#### gr-qtgui\n\n- Fix: tags on the last sample were not shown\n\n#### gr-video-sdl\n\n- Fix: U and V channels were reversed on sink blocks\n\nAt LEAST the following authors contributed to this release.\n\n- Adrien Michel <adriengit@users.noreply.github.com>\n- David Winter <david.winter@analog.com>\n- Emmanuel Blot <emmanuel.blot@free.fr>\n- HÃ¥kon VÃ¥gsether <hauk142@gmail.com>\n- Jared Dulmage <jared.dulmage@caliola.com>\n- Jason Uher <jason.uher@jhuapl.edu>\n- Jeff Long <willcode4@gmail.com>\n- Marc L <marcll@vt.edu>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Martin Braun <martin@gnuradio.org>\n- Ron Economos <w6rz@comcast.net>\n- Volker Schroer\n\n## [3.8.3.1] - 2021-06-10\n\nThis is a PATCH level revision. The API is compatible with C++ code written for previous v3.8 releases. ABI (shared library signature) is intended to be compatible, so code linked against v3.8.3.0 should not require recompilation.\n\n### Changed\n\n#### Build system\n\n- Improved messages related to dependencies MPIR and GMP. Only one of these packages is required, and the previous error messages were confusing.\n\n#### GRC\n\n- Parameter expressions and/or values can be displayed in blocks on the flowgraph. Previously, only values were displayed. Look for the \"Show Parameter ...\" toggles under the View menu.\n- Vector length is now correctly applied to all input ports.\n- Validation has been improved. Raw types are validated. Port connections are checked by type rather than by item size.\n- Variable names that cause conflicts in Python code (e.g., package names) are rejected.\n- Bus logic fixes.\n- Blocks can no longer be dragged off the screen and lost forever.\n\n#### gr-dtv\n\n- VL-SNR bugs fixed (incorrect constants).\n\n#### gr-qtgui\n\n- Improve autoscaling for vector sinks.\n\n#### gr_filter_design\n\n- \"File/Save\" is disabled until the taps have been computed, and the GUI is reset after a save, to make it clearer which data is being saved.\n- Entries are hidden for parameters that do not apply to the selected filter type.\n\nAt LEAST the following authors contributed to this release.\n\n- 0xloem <0xloem@gmail.com>\n- Christophe Seguinot <christophe.seguinot@univ-lille.fr>\n- David Pi <david.pinho@gmail.com>\n- Igor Freire <igor@blockstream.com>\n- Jeff Long <willcode4@gmail.com>\n- Josh Morman <jmorman@perspectalabs.com>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Ron Economos <w6rz@comcast.net>\n- Solomon Tan <solomonbstoner@yahoo.com.au>\n- Volker Schroer\n- Zackery Spytz <zspytz@gmail.com>\n\n## [3.8.3.0] - 2021-03-17\n\nAPI is compatible with C++ code written against previous v3.8 releases.\n\nABI (link time) compatibility is not guaranteed. Out-of-tree C++ code\nlinked to previous v3.8 releases should be rebuilt against this version.\n\n### Changed\n\n#### Project Scope\n\n- Preference file path may be set using the `GR_PREFS_PATH` environment variable\n- Lower message latency, previously slow when block aliases were used\n- PMT: `is_dict()` no longer returns True for PMT pairs, only for PMT dicts\n- Util gnuradio-config-info gets --print-all for those that want it all\n- Allow Thrift versions up thorugh 0.13\n- (internal) Build system improvements and fixes\n- (internal) Reduce Boost usage by replacing bind() with lambdas supported in C++11\n\n#### OOT Support\n\n- Allow override of gr python dir by setting `-DGR_PYTHON_DIR`\n- Modtool will not try to add duplicate block names in a module\n- Modtool can non-interactively add blocks with no parameters (`--argument-list=\"\"`)\n- Modtool will use current installation prefix instead of /usr/local as source of templates\n\n#### GRC\n\n- Better handling of gui hints, avoid hiding widgets in cases where some have GUI hints and some do not\n- Dark theme detection fix\n- Add window size option for bokeh gui\n\n#### gr-audio\n\n- ALSA nperiods default increased to 32 frames to reduce drops (can be set in conf file under the `audio_alsa` section)\n\n#### gr-blocks\n\n- File Source handles EOF properly in non-seekable files (e.g., pipes)\n- File Source handles large files on Windows\n- Several bounds checking and boundary condition improvements\n\n#### gr-digital\n\n- MSK timing error detector improvement\n- Improvements to correlation estimator example\n- Correlate Access Code will not trigger until it receives enough bits to compare to the access code\n\n#### gr-dtv\n\n- Performance improvements\n\n#### gr-filter\n\n- Filter designer works with Qt5 and Python3\n- Taps blocks (e.g., Low Pass Filter Taps) now propagate parameter changes\n\n#### gr-qtgui\n\n- Chooser label defaults now correct\n- Frequency Sink max hold plot for half spectrum width option shows correctly\n- Number Sink honors setting of 'avg' more consistently\n\n#### gr-uhd\n\n- Add start time parameter to GRC blocks\n- Add message handler for GPIO control messages\n- Additional master clock rates in GRC blocks\n- UHD source sends tags on center frequency change\n\n#### gr-video-sdl\n\n- Correct YUV format options\n\n#### gr-zeromq\n\n- Connections no longer hang when flowgraph stops and other end is still connected (`ZMQ_LINGER` now set)\n- Receipt of bad PMTs logged (instead of exception)\n\n### Contributors\nAt LEAST the following authors contributed to this release.\n\n- alekhgupta1441 <alekhgupta1441@gmail.com>\n- A. Maitland Bottoms <bottoms@debian.org>\n- Christophe Seguinot <christophe.seguinot@univ-lille.fr>\n- Clayton Smith <argilo@gmail.com>\n- David Pi <david.pinho@gmail.com>\n- Derek Kozel <derek@bitstovolts.com>\n- Doron Behar <doron.behar@gmail.com>\n- duggabe <barry@dcsmail.net>\n- elms <elms@freshred.net>\n- gnieboer <gnieboer@corpcomm.net>\n- HÃ¥kon VÃ¥gsether <hauk142@gmail.com>\n- Huang Rui <vowstar@gmail.com>\n- Jacob Gilbert <mrjacobagilbert@gmail.com>\n- Jeff Long <willcode4@gmail.com>\n- Johannes Demel <demel@ant.uni-bremen.de>\n- Marcus MÃ¼ller <mmueller@gnuradio.org>\n- Martin Braun <martin@gnuradio.org>\n- Matt Mills <mmills@2bn.net>\n- Michael Dickens <michael.dickens@ettus.com>\n- mormj <mormjb@gmail.com>\n- Nick Foster <bistromath@gmail.com>\n- Nick Ãstergaard <oe.nick@gmail.com>\n- Niki <niki@aveer.io>\n- Notou <barthy42@laposte.net>\n- rear1019 <rear1019@posteo.de>\n- Ron Economos <w6rz@comcast.net>\n- Ryan Volz <ryan.volz@gmail.com>\n- Sam Schmidt <samuel.schmidt.ee@gmail.com>\n- Sebastian Koslowski <sebastian.koslowski@gmail.com>\n- Steve Lunsford <lunsford-stephen@vast-inc.com>\n- Thomas Habets <thomas@habets.se>\n- Vasil Velichkov <vvvelichkov@gmail.com>\n- Volker Schroer\n- Zackery Spytz <zspytz@gmail.com>\n\n## [3.8.2.0] - 2020-08-21\n\n### Changed\n\n#### Project Scope\n\n- Call SWIG without `-modern` flag if new enough to make that inherent, thus\n  removing warnings\n\n#### GRC\n\n- Mako templating now `strict_undefined`\n- Show block comments by default\n- dynamically updated block namespaces (execute imports from templates)\n- Name-lookup detection of dark color themes, adjusted input box color scheme\n\n#### gr-dtv\n\n- `dvb_bbscrambler`: LUT 8B alignment (private, but relevant for future usable\n  optimization)\n\n### Fixed\n\n#### GRC\n\n- incorrect \"clear console\" and \"save console\" labels\n- generator: `flow_graph.py.mako` now contains import for `print_function` for\n  compatibility in Py2 generation\n- `variable_config.block.yml` now properly handles `configparser` /\n  `ConfigParser` import\n- Change port types of all selected block on key-press cycling, not just first\n  one\n- Always check for Python version in flow graph generation, not only in specific\n  block types\n- Don't run stale flow graphs\n- Prevent search keystrokes from modifying flowgraph\n\n#### gr-blocks\n\n- `file_sink` flushes contents to file on `stop()`\n- `file_meta_sink` block YAML: emit proper default PMT dict\n- XMLRPC client/server block templates: use Py3 XMLRPC when possible\n\n#### gr-digital\n\n- `soft_dec_lut_gen` now explicitly casts `2.0**prec` to `int`\n- `map_bb`: add missing definition of static `constexpr size_t s_map_size`\n\n#### gr-dtv\n\n- Reduce `send_frame_size` in UHD examples (broken after UHD v3.13.0.3-rc1)\n\n#### gr-filter\n\n- `logpwrfft` YAML was hiding FFT length\n- FFT frequency range calculation was occasionally off due to abuse of\n  `numpy.arange`\n\n#### gr-filter\n\n- GRC band pass filter taps block: use `firdes.complex_band_pass` when complex\n- `firdes.root_raised_cosine` gain for unity alpha\n\n#### gr-qtgui\n\n- `qtgui_chooser` regained 3.7 capability to set default\n- Frequency Sink hovering now respects set units\n- GRC blocks had optional stream inputs\n\n#### gr-uhd\n\n- ignore `len_tag_name` in USRP Source YAML generator python\n- `uhd_fft`/`uhd_siggen_gui`: import order of sip and Qt\n- GRC example block errors\n\n### Added\n\n#### GRC\n\n- OS X: Meta modifier key support (eq. Ctrl on other platforms)\n- configuration setting `show_block_comments`\n\n#### gr-analog\n\n- Signal source `cmd` port\n\n#### gr-zeromq\n\n- Message-based ZMQ blocks take bind argument, as necessary for N:1 patterns.\n  Changes ABI.\n\n### Deprecated\n\n#### gr-analog\n\n- Signal source `freq` port\n\n## [3.8.1.0] - 2020-04-08\n\n### Changed\n\n#### Project Scope\n\n- clang-tidy improvements\n  - Throw exceptions by value, catch by reference\n  - `emplace_back` where applicable\n  - `empty()` instead of `vector::size() == 0`\n- Use CMake to check for endianness instead of `BOOST_BIG_ENDIAN`\n\n#### gr-fec\n\n- Scipy becomes optional dependency (for polar channel code construction)\n\n#### gr_modtool\n\n- use Boost.UTF instead of cppunit\n\n### Fixed\n\n#### Project Scope\n\n- FindQwt paths\n- floatAlmostEqual unittest assert function wrongly passing on sequence types\n- Only require boost unittest when testing is enabled\n- FindLOG4CPP typo\n- numpy.fft(pack) imports\n- several scipy imports that can be done with numpy alone\n\n#### gnuradio-runtime\n\n- block gateway shadowed system port\n- Flaky message passing unit test contained timeout (not the test's job)\n- ctrlport/`rpcaggregator` & Co: removed storage of references to scope-lifetime objects\n- Sine table generation python was wrong\n- `get_tags_in_range` for delay < (end-start)\n- premature tag pruning\n- release flattened flowgraph after stopping; fixes restartability/shutdown issues\n\n#### gr-analog\n\n- clipping in FM receiver: remove superfluous gain\n- C++ generation for multiple blocks\n\n#### gr-audio\n\n- portaudio source: lock acquisition\n\n#### gr-blocks\n\n- rotator VOLK workaround\n\n#### gr-digital\n\n- `map_bb` buffer overflow\n- `map_bb` thread safety\n- `additive_scrambler `count based reset\n\n#### gr-fec\n\n- heap corruption in `async_decoder`\n- `cc_encoder` was broken for constraint lengths > 8\n\n#### gr-fft\n\n- restore Boost 1.53 compat\n\n#### gr-qtgui\n\n- no longer requiring unnecessary key in `edit_box_msg`\n\n#### gr-uhd\n\n- fixed examples under Py3\n- multichannel objects not populating channels\n\n#### gr_modtool\n\n- wrong use of `input` -> `raw_input`\n- allow empty argument list\n- testing\n- check for and deny TSB under Python\n- QA addition bugs\n- correct path for C++ QA tests\n\n#### GRC\n\n- several issues with YAML files\n- nested objects now properly populate namespaces\n- comments now included in block bounds calculation\n- Wiki documentation link removed from OOT blocks' docs tab\n- Dragging connections to auto-hide ports works now\n- generated and re-generated several example flowgraphs\n- `bokeh_layout` module name\n- Revert toggle buttons to text entry for bool block props, allowing GRC\n  variables to be used\n\n### Added\n\n#### Project Scope\n\n- Codec2 development branch / future compat\n- Boost 1.71 compat\n- CI now checks for formatting\n\n#### gnuradio-runtime\n\n- dot graphs now contain message edges\n- Python wrapping for blocks' `set_affinity` and `{g,s}et_alias`\n\n#### gr-uhd\n\n- UHD Filter API\n\n#### GRC\n\n- block affinity, buffer sizes available as advanced options for blocks\n- testing\n- Python snippets (please snippet responsibly!)\n- `show_id` flag added to embedded python blocks, Probes\n- global option to toggle showing of IDs\n- Help \"Keyboard Shortcut\" entry\n\n### Deprecated\n\n#### gr-analog\n\n- `sig_source`: `freq` port will be removed in the future\n\n### Added \n#### gr-analog\n\n- `sig_source`: `cmd` port adds support for dicts, setting of frequency,\n  amplitude, offset and phase parameters\n\n## [3.8.0.0] - 2019-08-09\n\nWitness me!\n\nTonight, we release GNU Radio 3.8.0.0.\n\nIt's the first minor release version since more than six years, not without\npride this community stands to face the brightest future SDR on general purpose\nhardware ever had.\n\nSince we've not been documenting changes in the shape of a Changelog for the\nwhole of the development that happened since GNU Radio 3.7.0, I'm afraid that\nthese release notes will be more of a GLTL;DR (git log too long; didn't read)\nthan a detailed account of what has changed.\n\nWhat has _not** changed is the fact that GNU Radio is centered around a very\nsimple truth:\n\n> Let the developers hack on DSP. Software interfaces are for humans, not the\n> other way around.\n\nAnd so, compared to the later 3.7 releases, nothing has fundamentally modified\nthe way one develops signal processing systems with GNU Radio: You write blocks,\nand you combine blocks to be part of a larger signal processing flow graph.\n\nWith that as a success story, we of course have faced quite a bit of change in\nthe systems we use to develop and in the people that develop GNU Radio. This has\nlead to several changes that weren't compatible with 3.7.\n\n**This is an excerpt only:**\n\n### Fixed\n\n#### Project Scope\n\n- Roughly 36 dBBug, (ETOOMANYBUGS)\n- Fixed .so versioning\n\n### Changed\n\n#### Project Scope\n\n- C++11\n- merged the wholeness of the `next` branch\n- Dependency version bumps: CMake, GCC, MSVC, Swig, Boost\n- New dependencies: MPIR/GMP, Qt5, gsm, codec2\n- Removed dependencies: libusb, Qt4, CppUnit\n- Python: Python 2 & Python 3 compatible. 3.8 will be the last Py2k-compatible\n  release series\n- gengen was replaced by templates (if you don't know gengen, don't do any\n  research; save yourself that sorrow)\n- Modern CMake (as far as feasible at this point)\n- VOLK version updated to v2.0.0\n- .clang-format file now dictates coding style\n- clang-format'ed the whole tree.\n- installed CMake files now tell about configuration\n\n#### gnuradio-runtime\n\n- reworked fractional tag time handling, especially in the context of resamplers\n\n#### GRC\n\n- C++ generation as option\n- YAML instead of XML\n- removed `blks2`\n- much better canvas tooling\n- consistent gobject usage\n- ROUNDED ARROWS\n\n#### gr-qtgui\n\n- moving from Qt4 to Qt5\n\n#### gr-utils\n\n- `gr_modtool` now vastly improved\n\n#### gr-vocoder\n\n- improved versatility\n- removed in-tree libgsm, libcodec2, use system-wide libs\n\n\n### Removed\n\n#### Project Scope\n- Modules `gr-comedi`, `gr-fcd` and `gr-wxgui` are gone\n\n#### gr-comedi\n\n- nobody could remember who used this, or for what. It has seen 0 active code\n  contributions in the 3.7 lifecycle\n\n#### gr-digital\n\n- python-based `packet_encoder` and related tools: Bugs that were sporadic and\n  never fixed, so after long deprecation, we're removing it\n\n#### gr-fcd\n\n- since it's currently untestable by the CI, it's being removed, as there was no\n  code contributions. Generally, we strive to include all batteries with GNU\n  Radio. Re-integration within a more general SDR interface would be desirable.\n\n#### gr-utils\n\n- removed PyQwt (dead) based tools\n\n#### gr-wxgui\n\n- Unmaintained, breaks on increasingly many systems, always was slower than\n  Qtgui. We've been starting to tell people to migrate to Qt since at\n  least 2015. Now, we're finally removing it.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 20.7744140625,
          "content": "# Copyright 2011-2021 Free Software Foundation, Inc.\n#\n# This file is part of GNU Radio\n#\n# SPDX-License-Identifier: GPL-3.0-or-later\n#\n\n########################################################################\nif(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n    message(FATAL_ERROR \"Prevented in-tree build. This is bad practice.\")\nendif(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n\n# Select the release build type by default to get optimization flags.\n# This has to come before project() which otherwise initializes it.\n# Build type can still be overridden by setting -DCMAKE_BUILD_TYPE=\nset(CMAKE_BUILD_TYPE\n    \"Release\"\n    CACHE STRING \"\")\n\n########################################################################\n# Project setup\n########################################################################\n# Make sure this version matches ${GR_CMAKE_MIN_VERSION} (a variable can't be\n# used here).\ncmake_minimum_required(VERSION 3.16)\nproject(gnuradio CXX C)\nenable_testing()\noption(BUILD_SHARED_LIBS \"Build shared libraries\" ON)\n\n# Make sure our local CMake Modules path comes first\nlist(INSERT CMAKE_MODULE_PATH 0 ${PROJECT_SOURCE_DIR}/cmake/Modules)\n\n# Add more build types and check that requested build type is valid\ninclude(GrBuildTypes)\ngr_check_build_type(${CMAKE_BUILD_TYPE})\nmessage(STATUS \"Build type set to ${CMAKE_BUILD_TYPE}.\")\n\n# Set the build date\nstring(TIMESTAMP BUILD_DATE \"%a, %d %b %Y %H:%M:%SZ\" UTC)\nstring(TIMESTAMP BUILD_DATE_SHORT \"%Y-%m-%d\" UTC)\nmessage(STATUS \"Build date set to ${BUILD_DATE}.\")\n\ninclude(GrComponent)\n\n# Set the version information here\n# cmake-format: off\nSET(VERSION_MAJOR 3)\nSET(VERSION_API   11)\nSET(VERSION_ABI   0)\nSET(VERSION_PATCH git)\ninclude(GrVersion) #setup version info\n# cmake-format: on\n\n#Set minimum version requirements\ninclude(GrMinReq)\n\n########################################################################\n# Setup Boost for global use (within this build)\n# Do this before enabling testing support, as it depends\n# on unit_test_framework\n########################################################################\ninclude(GrBoost)\ngr_register_component(\"testing-support\" ENABLE_TESTING Boost_UNIT_TEST_FRAMEWORK_FOUND)\n\n# Enable generation of compile_commands.json for code completion engines\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# Set wiki block docs url prefix used in grc-docs.conf (block name gets appended to end of this string)\nset(GRC_DOCS_URL_PREFIX \"https://wiki.gnuradio.org/index.php/\")\n\n########################################################################\n# Environment setup\n########################################################################\nif(NOT DEFINED BOOST_ROOT)\n    set(BOOST_ROOT \"${CMAKE_INSTALL_PREFIX}\")\nendif()\n\n########################################################################\n# Import executables from a native build (for cross compiling)\n# http://www.vtk.org/Wiki/CMake_Cross_Compiling#Using_executables_in_the_build_created_during_the_build\n########################################################################\nif(IMPORT_EXECUTABLES)\n    include(${IMPORT_EXECUTABLES})\nendif(IMPORT_EXECUTABLES)\n\n#set file that the native build will fill with exports\nset(EXPORT_FILE ${PROJECT_BINARY_DIR}/ImportExecutables.cmake)\nfile(WRITE ${EXPORT_FILE} ) #blank the file (subdirs will append)\n\n########################################################################\n# Incorporate CMake function/macros overloading.\n########################################################################\n\ninclude(CMakeOverloads)\n\n########################################################################\n# Compiler settings\n########################################################################\n\ninclude(GrCompilerSettings)\n\n# Record Compiler Info for record\nstring(TOUPPER ${CMAKE_BUILD_TYPE} GRCBTU)\nset(COMPILER_INFO \"\")\nif(MSVC)\n    if(MSVC_VERSION LESS \"${MSVC_MIN_VERSION}\")\n        message(FATAL_ERROR \"MSVC Versions < minimum version ${MSVC_MIN_VERSION}\")\n    endif()\n    set(cmake_c_compiler_version ${MSVC_VERSION})\n    set(cmake_cxx_compiler_version ${MSVC_VERSION})\nelse()\n    execute_process(COMMAND ${CMAKE_C_COMPILER} --version\n                    OUTPUT_VARIABLE cmake_c_compiler_version)\n    execute_process(COMMAND ${CMAKE_CXX_COMPILER} --version\n                    OUTPUT_VARIABLE cmake_cxx_compiler_version)\nendif(MSVC)\nset(COMPILER_INFO\n    \"${CMAKE_C_COMPILER}:::${CMAKE_C_FLAGS_${GRCBTU}} ${CMAKE_C_FLAGS}\\n${CMAKE_CXX_COMPILER}:::${CMAKE_CXX_FLAGS_${GRCBTU}} ${CMAKE_CXX_FLAGS}\\n\"\n)\n\n# Convert to a C string to compile and display properly\nstring(STRIP \"${cmake_c_compiler_version}\" cmake_c_compiler_version)\nstring(STRIP \"${cmake_cxx_compiler_version}\" cmake_cxx_compiler_version)\nstring(STRIP ${COMPILER_INFO} COMPILER_INFO)\nmessage(STATUS \"Compiler Version: ${cmake_c_compiler_version}\")\nmessage(STATUS \"Compiler Flags: ${COMPILER_INFO}\")\nstring(REPLACE \"\\n\" \" \\\\n\" cmake_c_compiler_version ${cmake_c_compiler_version})\nstring(REPLACE \"\\n\" \" \\\\n\" cmake_cxx_compiler_version ${cmake_cxx_compiler_version})\nstring(REPLACE \"\\n\" \" \\\\n\" COMPILER_INFO ${COMPILER_INFO})\n\n########################################################################\n# Install directories\n########################################################################\ninclude(GrPlatform) #define LIB_SUFFIX\n\n# Install our Cmake modules into $prefix/lib/cmake/gnuradio\n# See \"Package Configuration Files\" on page:\n#    http://www.cmake.org/Wiki/CMake/Tutorials/Packaging\n\nif(NOT CMAKE_MODULES_DIR)\n    set(CMAKE_MODULES_DIR lib${LIB_SUFFIX}/cmake)\nendif(NOT CMAKE_MODULES_DIR)\n\n# cmake-format: off\nSET(GR_RUNTIME_DIR     bin CACHE PATH \"Path to install all binaries\")\nSET(GR_LIBRARY_DIR     lib${LIB_SUFFIX} CACHE PATH \"Path to install libraries\")\nSET(GR_INCLUDE_DIR     include CACHE PATH \"Path to install header files\")\nSET(GR_CMAKE_DIR       ${CMAKE_MODULES_DIR}/gnuradio)\nSET(GR_DATA_DIR        share CACHE PATH \"Base location for data\")\nSET(GR_PKG_DATA_DIR    ${GR_DATA_DIR}/${CMAKE_PROJECT_NAME} CACHE PATH \"Path to install package data\")\nSET(GR_DOC_DIR         ${GR_DATA_DIR}/doc CACHE PATH \"Path to install documentation\")\nSET(GR_PKG_DOC_DIR     ${GR_DOC_DIR}/${CMAKE_PROJECT_NAME}-${DOCVER} CACHE PATH \"Path to install package docs\")\nSET(GR_MAN_DIR         ${GR_DATA_DIR}/man CACHE PATH \"Path to install man pages\")\nSET(GR_LIBEXEC_DIR     libexec CACHE PATH \"Path to install libexec files\")\nSET(GR_PKG_LIBEXEC_DIR ${GR_LIBEXEC_DIR}/${CMAKE_PROJECT_NAME} CACHE PATH \"Path to install package libexec files\")\nSET(GRC_BLOCKS_DIR     ${GR_PKG_DATA_DIR}/grc/blocks CACHE PATH \"Path to install GRC blocks\")\nSET(GR_THEMES_DIR      ${GR_PKG_DATA_DIR}/themes CACHE PATH \"Path to install QTGUI themes\")\nSET(GRC_EXAMPLES_DIR   ${GR_PKG_DATA_DIR}/examples CACHE PATH \"Path to install GRC example flowgraphs\")\n# cmake-format: on\n\n# Set location of config/prefs files in /etc\n# Special exception if prefix is /usr so we don't make a /usr/etc.\nset(GR_CONF_DIR\n    etc\n    CACHE PATH \"Path to install config files\")\nstring(COMPARE EQUAL \"${CMAKE_INSTALL_PREFIX}\" \"/usr\" isusr)\nif(isusr)\n    set(SYSCONFDIR\n        \"/${GR_CONF_DIR}\"\n        CACHE PATH \"System configuration directory\")\nelse(isusr)\n    set(SYSCONFDIR\n        \"${CMAKE_INSTALL_PREFIX}/${GR_CONF_DIR}\"\n        CACHE PATH \"System configuration directory\" FORCE)\nendif(isusr)\n\nset(GR_PKG_CONF_DIR\n    ${SYSCONFDIR}/${CMAKE_PROJECT_NAME}/conf.d\n    CACHE PATH \"Path to install package configs\")\nset(GR_PREFSDIR\n    ${SYSCONFDIR}/${CMAKE_PROJECT_NAME}/conf.d\n    CACHE PATH \"Path to install preference files\")\n\noption(ENABLE_PERFORMANCE_COUNTERS \"Enable block performance counters\" ON)\nif(ENABLE_PERFORMANCE_COUNTERS)\n    message(STATUS \"ADDING PERF COUNTERS\")\n    set(GR_PERFORMANCE_COUNTERS True)\nelse(ENABLE_PERFORMANCE_COUNTERS)\n    set(GR_PERFORMANCE_COUNTERS False)\n    message(STATUS \"NO PERF COUNTERS\")\nendif(ENABLE_PERFORMANCE_COUNTERS)\n\nstring(COMPARE EQUAL \"${CMAKE_INSTALL_PREFIX}\" \"/usr/local\" isusrlocal)\nstring(COMPARE EQUAL \"${CMAKE_INSTALL_PREFIX}\" \"$ENV{HOME}/.local\" ishomelocal)\n\noption(ENABLE_BASH_COMPLETIONS \"Enable shell completions for bash\" ON)\nif(ENABLE_BASH_COMPLETIONS)\n    if(NOT DEFINED GR_BASH_COMPLETIONS_DIR)\n        if(isusr OR isusrlocal OR ishomelocal)\n            set(GR_BASH_COMPLETIONS_DIR\n                share/bash-completion/completions\n                CACHE PATH \"Path to install bash completions\")\n        else(isusr OR isusrlocal OR ishomelocal)\n            message(WARNING \"GR_BASH_COMPLETIONS_DIR is not defined\")\n            set(ENABLE_BASH_COMPLETIONS OFF)\n        endif(isusr OR isusrlocal OR ishomelocal)\n    endif(NOT DEFINED GR_BASH_COMPLETIONS_DIR)\nendif(ENABLE_BASH_COMPLETIONS)\n\noption(ENABLE_ZSH_COMPLETIONS \"Enable shell completions for zsh\" ON)\nif(ENABLE_ZSH_COMPLETIONS)\n    if(NOT DEFINED GR_ZSH_COMPLETIONS_DIR)\n        if(isusr OR isusrlocal)\n            set(GR_ZSH_COMPLETIONS_DIR\n                share/zsh/site-functions\n                CACHE PATH \"Path to install zsh completions\")\n        else(isusr OR isusrlocal)\n            message(WARNING \"GR_ZSH_COMPLETIONS_DIR is not defined\")\n            set(ENABLE_ZSH_COMPLETIONS OFF)\n        endif(isusr OR isusrlocal)\n    endif(NOT DEFINED GR_ZSH_COMPLETIONS_DIR)\nendif(ENABLE_ZSH_COMPLETIONS)\n\noption(ENABLE_FISH_COMPLETIONS \"Enable shell completions for fish\" ON)\nif(ENABLE_FISH_COMPLETIONS)\n    if(NOT DEFINED GR_FISH_COMPLETIONS_DIR)\n        if(isusr OR ishomelocal)\n            set(GR_FISH_COMPLETIONS_DIR\n                share/fish/vendor_completions.d\n                CACHE PATH \"Path to install fish completions\")\n        else(isusr OR ishomelocal)\n            message(WARNING \"GR_FISH_COMPLETIONS_DIR is not defined\")\n            set(ENABLE_FISH_COMPLETIONS OFF)\n        endif(isusr OR ishomelocal)\n    endif(NOT DEFINED GR_FISH_COMPLETIONS_DIR)\nendif(ENABLE_FISH_COMPLETIONS)\n\n########################################################################\n# Variables replaced when configuring the package config files\n########################################################################\n# cmake-format: off\nfile(TO_CMAKE_PATH \"${CMAKE_INSTALL_PREFIX}\"           prefix)\nfile(TO_CMAKE_PATH \"\\${prefix}\"                        exec_prefix)\nfile(TO_CMAKE_PATH \"\\${exec_prefix}/${GR_LIBRARY_DIR}\" libdir)\nfile(TO_CMAKE_PATH \"\\${prefix}/${GR_INCLUDE_DIR}\"      includedir)\nfile(TO_CMAKE_PATH \"${SYSCONFDIR}\"                     SYSCONFDIR)\nfile(TO_CMAKE_PATH \"${GR_PREFSDIR}\"                    GR_PREFSDIR)\n# cmake-format: on\n\nif(WIN32)\n    file(RELATIVE_PATH prefix_relative_to_lib \"${prefix}/${GR_RUNTIME_DIR}\" \"${prefix}\")\nelse(WIN32)\n    file(RELATIVE_PATH prefix_relative_to_lib \"${prefix}/${GR_LIBRARY_DIR}\" \"${prefix}\")\nendif(WIN32)\nfile(RELATIVE_PATH SYSCONFDIR_relative_to_prefix \"${prefix}\" \"${SYSCONFDIR}\")\nfile(RELATIVE_PATH GR_PREFSDIR_relative_to_prefix \"${prefix}\" \"${GR_PREFSDIR}\")\n\n########################################################################\n# On Apple only, set install name and use rpath correctly, if not already set\n########################################################################\nif(APPLE)\n    if(NOT CMAKE_INSTALL_NAME_DIR)\n        set(CMAKE_INSTALL_NAME_DIR\n            ${CMAKE_INSTALL_PREFIX}/${GR_LIBRARY_DIR}\n            CACHE PATH \"Library Install Name Destination Directory\" FORCE)\n    endif(NOT CMAKE_INSTALL_NAME_DIR)\n    if(NOT CMAKE_INSTALL_RPATH)\n        set(CMAKE_INSTALL_RPATH\n            ${CMAKE_INSTALL_PREFIX}/${GR_LIBRARY_DIR}\n            CACHE PATH \"Library Install RPath\" FORCE)\n    endif(NOT CMAKE_INSTALL_RPATH)\n    if(NOT CMAKE_BUILD_WITH_INSTALL_RPATH)\n        set(CMAKE_BUILD_WITH_INSTALL_RPATH\n            ON\n            CACHE BOOL \"Do Build Using Library Install RPath\" FORCE)\n    endif(NOT CMAKE_BUILD_WITH_INSTALL_RPATH)\nendif(APPLE)\n\n########################################################################\n# Create uninstall target\n########################################################################\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\n               ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake @ONLY)\n\nadd_custom_target(uninstall ${CMAKE_COMMAND} -P\n                            ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\n\n########################################################################\n# Enable python component\n########################################################################\ninclude(GrPython)\ngr_python_check_module_raw(\"packaging\" \"import packaging\" PACKAGING_FOUND)\nif(NOT PACKAGING_FOUND)\n    message(STATUS \"\")\n    message(STATUS \"***************************** WARNING!!! *******\")\n    message(STATUS \"The python package packaging is missing\")\n    message(STATUS \"This package is required for python support\")\n    message(STATUS \"Please install python3-packaging\")\n    message(STATUS \"or run pip3 install packaging\")\n    message(STATUS \"************************************************\")\nendif()\ngr_python_check_module(\n    \"numpy\" numpy\n    \"LooseVersion(numpy.__version__) >= LooseVersion('${GR_NUMPY_MIN_VERSION}')\"\n    NUMPY_FOUND)\n# Needed for automatic regeneration of some bindings\ngr_python_check_module(\n    \"pygccxml\" pygccxml\n    \"LooseVersion(pygccxml.__version__) >= LooseVersion('${GR_PYGCCXML_MIN_VERSION}')\"\n    PYGCCXML_FOUND)\nif(NOT PYGCCXML_FOUND)\n    message(STATUS \"\")\n    message(STATUS \"***************************** WARNING!!! *************************\")\n    message(STATUS \"pygccxml is highly recommended for using gr_modtool\")\n    message(STATUS \"and is either not present or below the minimum version \"\n                   ${GR_PYGCCXML_MIN_VERSION})\n    message(STATUS \"Only trivial bindings will be generated using gr_modtool bind \")\n    message(STATUS \"******************************************************************\")\nendif()\n\nfind_package(pybind11)\nif(pybind11_FOUND)\n    if(${pybind11_VERSION} VERSION_LESS ${PYBIND11_MIN_VERSION})\n        message(WARNING \"pybind11 version ${pybind11_VERSION} < ${PYBIND11_MIN_VERSION}\")\n        set(pybind11_FOUND False)\n    endif()\nendif()\n\ninclude(GrComponent)\ngr_register_component(\"python-support\" ENABLE_PYTHON PYTHONLIBS_FOUND PACKAGING_FOUND\n                      pybind11_FOUND NUMPY_FOUND)\n\nif(${CMAKE_BUILD_TYPE} STREQUAL \"Coverage\")\n    include(CodeCoverage)\n    setup_target_for_coverage(coverage \"ctest || exit 0\" coverage)\nendif()\n\n########################################################################\n# Enable/disable examples\n########################################################################\noption(ENABLE_EXAMPLES \"Enable examples\" ON)\n\n########################################################################\n# Detect and configure VOLK\n########################################################################\nmessage(STATUS \"\")\nmessage(STATUS \"Configuring VOLK support...\")\nfind_package(Volk)\nif(Volk_FOUND)\n    message(STATUS \"  Found VOLK:\")\n    message(STATUS \"  * Version: ${Volk_VERSION}\")\n    message(STATUS \"  * Libraries: ${VOLK_LIBRARIES}\")\n    message(STATUS \"  * Includes: ${VOLK_INCLUDE_DIRS}\")\n    if(\"${Volk_VERSION}\" STREQUAL \"\")\n        message(WARNING \"Empty VOLK version string. Assuming compatibility. Good luck!\")\n    else()\n        if(\"${Volk_VERSION}\" VERSION_LESS ${VOLK_MIN_VERSION})\n            message(FATAL_ERROR \"VOLK version ${Volk_VERSION} < ${VOLK_MIN_VERSION}\")\n        endif()\n    endif()\nelse()\n    message(WARNING \"VOLK not found.\")\nendif()\n\n########################################################################\n# Setup Native Capabilities Flag\n########################################################################\noption(ENABLE_NATIVE \"Enable native build optimizations\" OFF)\nif(UNIX)\n    if(ENABLE_NATIVE)\n        message(\n            STATUS\n                \"Found GNU Radio native optimization flag.  Setting native CPU optimization flags.\"\n        )\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native -ftree-vectorize\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -march=native -ftree-vectorize\")\n    else(ENABLE_NATIVE)\n        message(\n            STATUS \"Not using additional GNU Radio native architecture optimizations.\")\n    endif(ENABLE_NATIVE)\nendif(UNIX)\n\n########################################################################\n# Disable complex math NaN/INFO range checking for performance\n########################################################################\ncheck_cxx_compiler_flag(-fcx-limited-range HAVE_CX_LIMITED_RANGE)\nif(HAVE_CX_LIMITED_RANGE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fcx-limited-range\")\nendif(HAVE_CX_LIMITED_RANGE)\n\n########################################################################\n# Distribute the README file\n########################################################################\ninstall(FILES README.md CONTRIBUTING.md CHANGELOG.md DESTINATION ${GR_PKG_DOC_DIR})\n\ninstall(\n    FILES .clang-format\n    RENAME clang-format.conf\n    DESTINATION ${GR_PKG_DATA_DIR})\ninstall(FILES .cmake-format.py DESTINATION ${GR_PKG_DATA_DIR})\n\n########################################################################\n# The following dependency libraries are needed by all gr modules:\n########################################################################\nlist(APPEND GR_TEST_PYTHON_DIRS ${PROJECT_BINARY_DIR}/gnuradio-runtime/python\n     ${PROJECT_SOURCE_DIR}/gnuradio-runtime/python)\n\n# Note that above we put the binary gnuradio-runtime/python directory\n# before the source directory. This is due to a quirk with ControlPort\n# and how slice generates files and names. We want the QA and\n# installed code to import the same names, so we have to grab from the\n# binary directory first.\n\n# gnuradio-runtime/include/gnuradio/block.h needs a define to tell it which\n# multiprecision arithmetic library header to include\nfind_package(MPLIB)\n\n########################################################################\n# Post-Install tasks are tasks that are usually not executed during\n# install, but for source builds, that's actually more convenient.\n########################################################################\ngr_register_component(\"post-install\" ENABLE_POSTINSTALL)\n\n########################################################################\n# Add subdirectories (in order of deps)\n########################################################################\nadd_subdirectory(docs)\nadd_subdirectory(gnuradio-runtime)\nif(ENABLE_PYTHON)\n    add_subdirectory(grc)\nendif()\nadd_subdirectory(gr-blocks)\nadd_subdirectory(gr-fec)\nadd_subdirectory(gr-fft)\nadd_subdirectory(gr-filter)\nadd_subdirectory(gr-analog)\nadd_subdirectory(gr-digital)\nadd_subdirectory(gr-dtv)\nadd_subdirectory(gr-audio)\nadd_subdirectory(gr-channels)\nadd_subdirectory(gr-pdu)\nadd_subdirectory(gr-iio)\nadd_subdirectory(gr-qtgui)\nadd_subdirectory(gr-trellis)\nadd_subdirectory(gr-uhd)\nif(ENABLE_PYTHON)\n    add_subdirectory(gr-utils)\nendif()\nadd_subdirectory(gr-video-sdl)\nadd_subdirectory(gr-vocoder)\nadd_subdirectory(gr-wavelet)\nadd_subdirectory(gr-zeromq)\nadd_subdirectory(gr-network)\nadd_subdirectory(gr-soapy)\n\n# Defining GR_CTRLPORT for gnuradio/config.h\nif(ENABLE_GR_CTRLPORT)\n    set(GR_CTRLPORT True)\n\n    if(CTRLPORT_BACKENDS GREATER 0)\n        set(GR_RPCSERVER_ENABLED True)\n\n        if(ENABLE_CTRLPORT_THRIFT)\n            set(GR_RPCSERVER_THRIFT True)\n        endif(ENABLE_CTRLPORT_THRIFT)\n    endif(CTRLPORT_BACKENDS GREATER 0)\nendif(ENABLE_GR_CTRLPORT)\n\n# Install all other cmake files into same directory\nfile(GLOB cmake_others \"cmake/Modules/*.cmake\")\nlist(REMOVE_ITEM cmake_others \"${PROJECT_SOURCE_DIR}/cmake/Modules/FindGnuradio.cmake\")\n\ninclude(CMakePackageConfigHelpers)\nconfigure_package_config_file(\n    ${PROJECT_SOURCE_DIR}/cmake/Modules/GnuradioConfig.cmake.in\n    ${PROJECT_BINARY_DIR}/cmake/Modules/GnuradioConfig.cmake\n    INSTALL_DESTINATION ${CMAKE_MODULES_DIR}/gnuradio)\n\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/Modules/GnuradioConfigVersion.cmake.in\n               ${PROJECT_BINARY_DIR}/cmake/Modules/GnuradioConfigVersion.cmake @ONLY)\n\nset(cmake_configs ${PROJECT_BINARY_DIR}/cmake/Modules/GnuradioConfig.cmake\n                  ${PROJECT_BINARY_DIR}/cmake/Modules/GnuradioConfigVersion.cmake)\n\ninstall(FILES ${cmake_configs} ${cmake_others} DESTINATION ${CMAKE_MODULES_DIR}/gnuradio)\n\nfile(APPEND ${CMAKE_CURRENT_BINARY_DIR}/grc/grc.conf\n     \"enabled_components = ${_gr_enabled_components}\")\n\n########################################################################\n# Print summary\n########################################################################\ngr_print_component_summary()\nmessage(STATUS \"Using install prefix: ${CMAKE_INSTALL_PREFIX}\")\nmessage(STATUS \"Building for version: ${VERSION} / ${LIBVER}\")\n\n# Create a config.h with some definitions to export to other projects.\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in\n               ${CMAKE_CURRENT_BINARY_DIR}/gnuradio-runtime/include/gnuradio/config.h)\n\n# Re-generate the constants file, now that we actually know which components will be enabled.\nconfigure_file(\n    ${CMAKE_CURRENT_SOURCE_DIR}/gnuradio-runtime/lib/constants.cc.in\n    ${CMAKE_CURRENT_BINARY_DIR}/gnuradio-runtime/lib/constants.cc ESCAPE_QUOTES @ONLY)\n\n# Install config.h in include/gnuradio\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/gnuradio-runtime/include/gnuradio/config.h\n        DESTINATION ${GR_INCLUDE_DIR}/gnuradio)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.5517578125,
          "content": "# GNU Radio Code of Conduct\n\nNOTE: This is a copy of the GNU Radio Code of Conduct, it might be out of date, the latest version can be found [on the gnuradio/gr-governance repository](https://github.com/gnuradio/gr-governance/blob/main/CODE_OF_CONDUCT.md).\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at conduct@gnuradio.org.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.767578125,
          "content": "# Contributing to GNU Radio\n\nWelcome! You are reading about how to contribute code to GNU Radio. First of\nall, we are very happy that you're about to contribute, and welcome your\nsubmissions! We hope many more will come.\n\nIn this document, we will explain the main things to consider when submitting\npull requests against GNU Radio. Reading this first will help a lot with\nstreamlining the process of getting your code merged.\n\nThere is also a [wiki-based version of this file][wikicontrib], which contains\nmore detail.  This file is more of a checklist.\n\n## New to GNU Radio?\n\nIf you're new, it is a good idea to first get acquainted with GNU Radio from a\nuser perspective.  https://tutorials.gnuradio.org/ is a good place to start.\n\n## What about non-code contributions?\n\nThose are at least as important as code contributions: Emails to the mailing\nlist, answers on Stack Overflow, Wiki page edits, examples... We very much\nappreciate those. However, this document is specifically about contributing\ncode.\n\n## DCO Signed?\n\nAny code contributions going into GNU Radio will become part of a GPL-licensed,\nopen source repository. It is therefore imperative that code submissions belong\nto the authors, and that submitters have the authority to merge that code into\nthe public GNU Radio codebase.\n\nFor that purpose, we use the [Developer's Certificate of Origin](DCO.txt). It\nis the same document used by other projects. Signing the DCO states that there\nare no legal reasons to not merge your code.\n\nTo sign the DCO, suffix your git commits with a \"Signed-off-by\" line. When\nusing the command line, you can use `git commit -s` to automatically add this\nline. If there were multiple authors of the code, or other types of\nstakeholders, make sure that all are listed, each with a separate Signed-off-by\nline.\n\n## Coding Guidelines\n\nWe have codified our coding guidelines in [GREP1][grep1]. Please read them, and\nstick to them. For C++ code, use clang-format. For Python, PEP8 is your friend\n(but again, check the actual coding guidelines).\n\n## Python or C++?\n\nPython is nice, and generally simpler. However, all performance-critical code\nshould be written in C++. The same goes for all blocks, since there are use\ncases for C++-only GNU Radio.\n\n## Git commit messages are very important\n\nWe follow standard git commit message guidelines, similar to many other open\nsource projects. See the [coding guidelines][grep1] for more details. In a\nnutshell:\n- Keep the lines below 72 characters\n- Subject line has the component prepended (e.g., `runtime:`)\n- Avoid empty git commit messages\n- The git commit message explains the change, the code only explains the current\n  state\n\n## Include Unit Tests\n\nIf you have an obvious test, that might speed up the time it takes to convince\nreviewers that your code is correct.\n\n## GitHub-specific Actions\n\nGNU Radio is currently hosted at GitHub, where we've added some mechanics that\nhelp with getting code merged. If you intend to develop code more than once,\nrequest being accepted into the [gr-devs][gr-devs] group. Members of this group\ncan change labels and approve pull requests or request changes.\n\n## The Buddy Principle: Submit One, Review One\n\nWhen you've submitted a pull request, please take the time to review another\none. This helps make sure that there are always a number of reviews at least\nequal to the number of pull requests, which means the maintainers don't get\noverwhelmed when a lot is being contributed.\n\n## Standard command line options\n\nWhen writing programs that are executable from the command line,\nplease follow existing examples regarding their command line arguments, and\nreuse them.\n\n[grep1]: https://github.com/gnuradio/greps/blob/master/grep-0001-coding-guidelines.md\n[wikicontrib]: https://wiki.gnuradio.org/index.php/Development\n[gr-devs]: https://github.com/orgs/gnuradio/teams/gr-devs\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "DCO.txt",
          "type": "blob",
          "size": 1.3876953125,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.873046875,
          "content": "<p align=\"center\">\n<img src=\"https://github.com/gnuradio/gnuradio/blob/main/docs/gnuradio.png\" width=\"75%\" />\n</p>\n\n[![Make Test](https://github.com/gnuradio/gnuradio/actions/workflows/make-test.yml/badge.svg?branch=main)](https://github.com/gnuradio/gnuradio/actions/workflows/make-test.yml)\n![Version](https://img.shields.io/github/tag/gnuradio/gnuradio.svg)\n[![AUR](https://img.shields.io/github/license/gnuradio/gnuradio)](https://github.com/gnuradio/gnuradio/blob/main/COPYING)\n[![Docs](https://img.shields.io/badge/docs-doxygen-orange.svg)](https://www.gnuradio.org/doc/doxygen/)\n[![Packaging status](https://repology.org/badge/tiny-repos/gnuradio.svg)](https://repology.org/project/gnuradio/badges)\n[![Donate](https://img.shields.io/badge/donate-donorbox-green)](https://donorbox.org/gnuradio)\n\n# GNU Radio\n\n<table align=\"center\">\n    <tr>\n        <td>\n            <img src=\"./docs/grc_eg.png\" height=\"200px\" />\n        </td>\n        <td>\n            <img src=\"./docs/grc_eg_code.png\" height=\"200px\" />\n        </td>\n        <td>\n            <img src=\"./docs/grc_eg_out.png\" height=\"200px\" />\n        </td>\n    </tr>\n</table>\n\nGNU Radio is a free & open-source signal processing runtime and signal processing\nsoftware development toolkit. Originally developed for use with software-defined\nradios and for simulating wireless communications, it's robust capabilities have\nled to adoption in hobbyist, academic, and commercial environments. GNU Radio has\nfound use in software-defined radio, digital communications, nuclear physics, high-\nenergy particle physics, astrophysics, radio astronomy and more!\n\n## Helpful Links\n\n* [GNU Radio Website](https://gnuradio.org)\n* [GNU Radio Wiki](https://wiki.gnuradio.org/)\n* [Github issue tracker for bug reports and feature requests](https://github.com/gnuradio/gnuradio/issues)\n* [View the GNU Radio Mailing List Archive](https://lists.gnu.org/archive/html/discuss-gnuradio/)\n* [Subscribe to the GNU Radio Mailing List](https://lists.gnu.org/mailman/listinfo/discuss-gnuradio)\n* [GNU Radio Chatroom on Matrix](https://chat.gnuradio.org/)\n* [Contributors and Affiliated Organizations](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTORS.md)\n\n## How to Run the QT Version of GNU Radio Companion\n\n```bash\n    # Ensure PyQt5 and other dependencies are installed\n    pip install QDarkStyle qtpy\n    \n    # If you want to run tests\n    pip install pytest-qt pyautogui\n\n    # Build and install as usual (described below) and then run\n    gnuradio-companion --qt\n```\n\n## GNU Radio 4.0\n\nThe next major release of GNU Radio, GNU Radio 4.0, is currently under active development. The effort is being spearheaded by FAIR (The Facility for Anti-Proton and Ion Research), part of GSI in Germany. Development of that version is currently taking place under their GitHub organization, [here](https://github.com/fair-acc/gnuradio4).\n\n## How to Install GNU Radio\n\n### Prebuilt Binaries\n\nThe recommended way to install GNU Radio on most platforms is using available binary package distributions. \n\nThe following command is for Debian, Ubuntu, and derivatives. Consult your distribution information to obtain the version of GNU Radio which is included.\n\n```\n    sudo apt install gnuradio\n```\n\nFor other operating systems and versions, see [Quick Start](https://wiki.gnuradio.org/index.php/InstallingGR#Quick_Start)\n\n### Ubuntu PPA Installation\n\nFor Ubuntu, the latest builds (both released and pulled from master branch) are maintained as PPAs (Personal Package Archives) on [launchpad.net](https://launchpad.net/~gnuradio). **Be sure to uninstall any previously installed versions of gnuradio first.** See [UnInstall GR](https://wiki.gnuradio.org/index.php?title=UnInstallGR#From_Distribution_package_manager_or_PPA).\n\n### Other Installation Methods\n\nPlatform-specific guides and Cross-platform guides are described in [Other Installation Methods](https://wiki.gnuradio.org/index.php/InstallingGR#Other_Installation_Methods).\n\n### From Source\n\nComplete instructions for building GNU Radio from source code are detailed in \n[Installing From Source](https://wiki.gnuradio.org/index.php?title=LinuxInstall#From_Source). \n\n### PyBOMBS\n\n**We are no longer recommending** [PyBOMBS](https://github.com/gnuradio/pybombs#pybombs) **to install modern versions of GNU Radio.**\n\n## Supporting GNU Radio\n\nIf you find GNU Radio useful and would like to support its development, you can make a [donation](https://gift.idonate.com/seti/GNURadio). Your contributions help ensure ongoing improvements and maintenance. Thank you for your support!\n\n## Legal Matters\n\nSome files have been changed many times throughout the years. Copyright \nnotices at the top of source files list which years changes have been \nmade. For some files, changes have occurred in many consecutive years. \nThese files may often have the format of a year range (e.g., \"2006 - 2011\"), \nwhich indicates that these files have had copyrightable changes made \nduring each year in the range, inclusive.\n"
        },
        {
          "name": "VERSIONING",
          "type": "blob",
          "size": 6.5498046875,
          "content": "# GNU Radio Versioning\n\nFor the 3.8 Release and going on, the following versioning scheme is to be used.\nFor 3.7 and earlier, other schemes apply.\n\nGNU Radio versioning is based on [Semantic Versioning](https://semver.org).\n\n## GNU Radio Versioning in 60s or less\n\nIf in doubt, the formal definition below applies. However, to ease use of this\nversioning scheme, an abridged, specified conclusion is given in this section.\n\nGNU Radio uses a four-number versioning:\n\n```\nA.B.C.D\n```\n\n* A is the paradigm version. This has been '3' for more than a decade, meaning:\n\n> GNU Radio is a block-based flow graph framework that uses classes to represent\n> blocks whose main feature is a `work()` function taking input samples from\n> quasi-circular buffers and putting results in quasi-circular output buffers.\n\n  It's encouraged that in the future, relevant modifications and extensions of\n  that model will lead to changes to the paradigm version number.\n* A.B is the public API version. We'll only accept patches that don't change the\n  public API on a `maint-A.B` branch. GNU Radio users need not change their code\n  to stay compatible with any future A.B.x.x version (barring bugs), but might\n  have to recompile.\n  Forward-going development should happen on the A.(B+1) branch, once A.B is\n  released.\n* A.B.C is the ABI version. This includes C/C++, Python bindings and the\n  interfaces of GRC blocks. Programmers need not recompile their code if A.B.C\n  stays unchanged.\n* A.B.C.D is the patch level. Versions A.B.C.D and A.B.C.D' are compatible with\n  one another, both binary and in API, although one versions might have fixed\n  bugs that the other has not.\n\n### Formal Definition of GNU Radio's Semantic Versioning\n\nThe key words âMUSTâ, âMUST NOTâ, âREQUIREDâ, âSHALLâ, âSHALL NOTâ,\nâSHOULDâ, âSHOULD NOTâ, âRECOMMENDEDâ, âMAYâ, and âOPTIONALâ in this\ndocument are to be interpreted as described in [*RFC\n2119*](http://tools.ietf.org/html/rfc2119).\n\n1.  Software using Semantic Versioning MUST declare a public API. This\n    API could be declared in the code itself or exist strictly\n    in documentation. However it is done, it should be precise\n    and comprehensive.\n\n2.  A normal version number MUST take the form W.X.Y.Z where W, X, Y,\n    and Z are non-negative integers, and MUST NOT contain\n    leading zeroes. W is the major version, X is the API version, Y\n    is the ABI version, and Z is the patch version. Each element\n    MUST increase numerically. For instance: 3.1.9.0 -> 3.1.10.0\n    -> 3.1.11.0.\n\n3.  Once a versioned package has been released, the contents of that\n    version MUST NOT be modified. Any modifications MUST be released\n    as a new version.\n\n4.  Patch version Z (w.x.y.Z) MUST be incremented if only backwards\n    API-compatible & ABI-compatible changes are introduced.\n\n5.  ABI version Y (w.x.Y.z) MUST be incremented if changes break ABI\n    compatibility with the previous release.\n\n6.  API version X (w.X.y.z) MUST be incremented if changes break public\n    API compatibility with the previous release. It MAY include ABI\n    and patch level changes. It MAY be incremented if substantial new\n    functionality or improvements are introduced within private code.\n    ABI and PATCH version MUST be reset to 0 when API version\n    is incremented. An API breakage is defined as the case where\n    recompiling software against GNU Radio without modifications may yield\n    different results. The following cases, for example, are typically\n    not API-breaking, but are ABI-breaking: adding new public methods,\n    adding new default parameters to public methods if the default\n    case is identical to the previous case.\n\n7.  MAJOR version W (W.x.y.z) MAY be incremented if significant\n    architectural or technological changes are made that warrant\n    identifying the software as a new generation of product.\n\n8.  A pre-release version MAY be denoted by appending a hyphen and a\n    series of dot separated identifiers immediately following the\n    patch version. Identifiers MUST comprise only ASCII alphanumerics\n    and hyphen [0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric\n    identifiers MUST NOT include leading zeroes. Pre-release versions\n    have a lower precedence than the associated normal version. A\n    pre-release version indicates that the version is unstable and\n    might not satisfy the intended compatibility requirements as\n    denoted by its associated normal version. Examples: 3.1.0.0-alpha,\n    3.1.0.0-alpha.1, 3.1.0.0-0.3.7, 3.1.0.0-x.7.z.92.\n\n9.  Build metadata MAY be denoted by appending a plus sign and a series\n    of dot separated identifiers immediately following the patch or\n    pre-release version. Identifiers MUST comprise only ASCII\n    alphanumerics and hyphen [0-9A-Za-z-]. Identifiers MUST NOT\n    be empty. Build metadata SHOULD be ignored when determining\n    version precedence. Thus two versions that differ only in the\n    build metadata, have the same precedence. Examples:\n    3.1.0.0-alpha+001, 3.1.0.0+20130313144700, 3.1.0.0-beta+exp.sha.5114f85.\n\n10. Precedence refers to how versions are compared to each other\n    when ordered. Precedence MUST be calculated by separating the\n    version into major, API, ABI, patch and pre-release\n    identifiers in that order (Build metadata does not figure\n    into precedence). Precedence is determined by the first difference\n    when comparing each of these identifiers from left to right as\n    follows: Major, API, ABI, and patch versions are always\n    compared numerically. Example: 3.1.0.0 < 3.2.0.0 < 3.2.1.0\n    < 3.2.1.1. When major, API, ABI, and patch are equal, a\n    pre-release version has lower precedence than a normal version.\n    Example: 3.1.0.0-alpha < 3.1.0.0. Precedence for two\n    pre-release versions with the same major, API ABI, and patch\n    version MUST be determined by comparing each dot separated\n    identifier from left to right until a difference is found as\n    follows: identifiers consisting of only digits are compared\n    numerically and identifiers with letters or hyphens are compared\n    lexically in ASCII sort order. Numeric identifiers always have\n    lower precedence than non-numeric identifiers. A larger set of\n    pre-release fields has a higher precedence than a smaller set, if\n    all of the preceding identifiers are equal. Example: 3.1.0.0-alpha\n    < 3.1.0.0-alpha.1 < 3.1.0.0-alpha.beta < 3.1.0.0-beta\n    < 4.1.0.0-beta.2 < 3.1.0.0-beta.11 < 3.1.0.0-rc.1 < 3.1.0.0.\n\n#### License of this Document\n\nThe versioning scheme is based on [*SemVer 2.0.0*](http://semver.org/); it's\nlicensed under\n[*Creative Commons - CC BY 3.0*](http://creativecommons.org/licenses/by/3.0/)\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.in",
          "type": "blob",
          "size": 0.8017578125,
          "content": "/*\n * Copyright 2013 Free Software Foundation, Inc.\n *\n * This file is part of GNU Radio\n *\n * SPDX-License-Identifier: GPL-3.0-or-later\n *\n */\n\n#ifndef GNURADIO_CONFIG_H\n#define GNURADIO_CONFIG_H\n#ifndef TRY_SHM_VMCIRCBUF\n#cmakedefine TRY_SHM_VMCIRCBUF\n#endif\n#ifndef GR_PERFORMANCE_COUNTERS\n#cmakedefine GR_PERFORMANCE_COUNTERS\n#endif\n#ifndef GR_CTRLPORT\n#cmakedefine GR_CTRLPORT\n#endif\n#ifndef GR_RPCSERVER_ENABLED\n#cmakedefine GR_RPCSERVER_ENABLED\n#endif\n#ifndef GR_RPCSERVER_THRIFT\n#cmakedefine GR_RPCSERVER_THRIFT\n#endif\n#ifndef THRIFT_HAS_VERSION_H\n#cmakedefine THRIFT_HAS_VERSION_H\n#endif\n#ifndef THRIFT_HAS_THREADFACTORY_H\n#cmakedefine THRIFT_HAS_THREADFACTORY_H\n#endif\n#ifndef GR_MPLIB_GMP\n#cmakedefine GR_MPLIB_GMP\n#endif\n#ifndef GR_MPLIB_MPIR\n#cmakedefine GR_MPLIB_MPIR\n#endif\n\n#endif /* GNURADIO_CONFIG_H */\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "gnuradio-runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-analog",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-audio",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-blocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-channels",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-digital",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-dtv",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-fec",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-fft",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-filter",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-iio",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-network",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-pdu",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-qtgui",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-soapy",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-trellis",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-uhd",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-video-sdl",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-vocoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-wavelet",
          "type": "tree",
          "content": null
        },
        {
          "name": "gr-zeromq",
          "type": "tree",
          "content": null
        },
        {
          "name": "grc",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.4716796875,
          "content": "[pycodestyle]\n# -------------------------------------------------------------\n# UPDATE .github/workflows/make-test.yml's WHEN MAKING CHANGES!\n# -------------------------------------------------------------\n# from github workflow:\n# arguments: '--max-line-length=120 --ignore E265,E266,E275,E402,E501,E704,E712,E713,E714,E711,E721,E722,E741,W504,W605 --exclude *.yml.py'\nmax-line-length = 120\nextend-ignore = E265,E266,E275,E402,E501,E704,E712,E713,E714,E711,E721,E722,E741,W504,W605\n"
        }
      ]
    }
  ]
}