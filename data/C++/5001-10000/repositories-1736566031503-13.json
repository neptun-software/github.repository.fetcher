{
  "metadata": {
    "timestamp": 1736566031503,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/skia",
      "stars": 9433,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazelignore",
          "type": "blob",
          "size": 0.0234375,
          "content": "infra/bots/.recipe_deps\n"
        },
        {
          "name": ".bazelproject",
          "type": "blob",
          "size": 0.4404296875,
          "content": "directories:\n  .\n  -bin\n  -out\n  -node_modules\n  -third_party/externals\n\n# Automatically includes all relevant targets under the 'directories' above\nderive_targets_from_directories: false\n\ntargets:\n  # If source code isn't resolving, add additional targets that compile it here\n  //example:hello_world_vulkan\n  //example:hello_world_gl\nadditional_languages:\n  # Uncomment any additional languages you want supported\n  javascript\n  python\n  typescript\n"
        },
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 7.3525390625,
          "content": "# https://bazel.build/concepts/platforms-intro#cxx\n# This forces Bazel's C++ rules use platforms to select toolchains instead of the default\n# --crosstool_top, --compiler, etc.\nbuild --incompatible_enable_cc_toolchain_resolution\n\n# We do not want Bazel to detect any C++ toolchains on the local machine\n# https://github.com/bazelbuild/bazel/blob/4ccc21f2f089971e5f4032397764a4be3549c40a/tools/cpp/cc_configure.bzl#L47\nbuild --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1\n\n# We would like developers to not upload to the remote build cache, only the RBE workers themselves.\nbuild --remote_upload_local_results=false\n\n# Enforce stricter environment rules, which eliminates some non-hermetic behavior and therefore\n# improves both the remote cache hit rate and the correctness and repeatability of the build.\nbuild --incompatible_strict_action_env=true\n\n# This tells Bazel that the host platform can use the hermetic toolchain. This is a small lie until\n# Windows support is added.\nbuild --host_platform=//bazel/platform:host_with_hermetic_toolchain\n# Linux users (the only platform where we support remote builds currently) can add the following\n# line (uncommented) to //bazel/user/buildrc to allow interchangeable operation between local\n# operations and remote operations.\n# build --host_platform=//bazel/platform:linux_x64_hermetic\n\n# Register our toolchains. We do this here, and not in WORKSPACE.bazel because\n# --extra_toolchains has priority over register_toolchains and we conditionally add some toolchains\n# for RBE.\nbuild --extra_toolchains=//toolchain:clang_ios_arm64_toolchain\nbuild --extra_toolchains=//toolchain:clang_linux_x64_toolchain\nbuild --extra_toolchains=//toolchain:clang_mac_x64_toolchain\nbuild --extra_toolchains=//toolchain:clang_mac_arm64_toolchain\nbuild --extra_toolchains=//toolchain:clang_host_mac_x64_target_mac_arm64_toolchain\nbuild --extra_toolchains=//toolchain:clang_windows_x64_toolchain\nbuild --extra_toolchains=//toolchain:linux_amd64_ndk_arm64_toolchain\nbuild --extra_toolchains=//toolchain:linux_amd64_ndk_arm32_toolchain\n\n# Hide DEBUG messages from Bazel.\n# Many of these are things related to the git checkouts that are not relevent to devs.\n# https://bazel.build/reference/command-line-reference#flag--ui_event_filters\nbuild --ui_event_filters=-debug\n\n# For some reason, since upgrading to Go v1.21 and rules_go v0.42.0, Go binaries fail at runtime\n# with \"fatal error: invalid function symbol table\" unless we disable cgo via the below flag.\n# Reference:\n# https://github.com/bazelbuild/rules_go/blob/d74d9ab34e8789e6a55a2d9caf0e2b3c63202e04/go/modes.rst#build-settings.\nbuild --@io_bazel_rules_go//go/config:pure\n\n# =============================================================================\n# Alias to build configurations below. This makes configuring things from\n# the command line easier.\n\n# Flags used by Skia tools, not to be used by clients\nbuild --flag_alias=adb_platform=//tools/testrunners/common/android/adb_test_runner:adb_platform\n\n# Public CanvasKit flags\nbuild --flag_alias=ck_enable_fonts=//modules/canvaskit:enable_fonts\nbuild --flag_alias=ck_disable_fonts=no//modules/canvaskit:enable_fonts\nbuild --flag_alias=ck_enable_canvas_polyfill=//modules/canvaskit:enable_canvas_polyfill\nbuild --flag_alias=ck_disable_canvas_polyfill=no//modules/canvaskit:enable_canvas_polyfill\nbuild --flag_alias=ck_enable_embedded_font=//modules/canvaskit:include_embedded_font\nbuild --flag_alias=ck_disable_embedded_font=no//modules/canvaskit:include_embedded_font\nbuild --flag_alias=ck_enable_matrix_js=//modules/canvaskit:include_matrix_js\nbuild --flag_alias=ck_disable_matrix_js=no//modules/canvaskit:include_matrix_js\nbuild --flag_alias=ck_enable_skottie=//modules/canvaskit:enable_skottie\nbuild --flag_alias=ck_disable_skottie=no//modules/canvaskit:enable_skottie\nbuild --flag_alias=ck_enable_skp_serialization=//modules/canvaskit:enable_skp_serialization\nbuild --flag_alias=ck_disable_skp_serialization=no//modules/canvaskit:enable_skp_serialization\nbuild --flag_alias=ck_enable_runtime_effect=//modules/canvaskit:enable_runtime_effect\nbuild --flag_alias=ck_disable_runtime_effect=no//modules/canvaskit:enable_runtime_effect\nbuild --flag_alias=ck_enable_webgl=//modules/canvaskit:enable_webgl\nbuild --flag_alias=ck_exclude_debugger=no//modules/canvaskit:build_for_debugger\nbuild --flag_alias=ck_include_debugger=//modules/canvaskit:build_for_debugger\n\n# =============================================================================\n# REMOTE BUILD EXECUTION\n# =============================================================================\n\n# =====\n# The following was copied from https://github.com/bazelbuild/bazel-toolchains/blob/ea243d43269df23de03a797cff2347e1fc3d02bb/bazelrc/bazel-4.1.0.bazelrc\n# We should be free to modify this as we see fit.\n#\n# Depending on how many machines are in the remote execution instance, setting\n# this higher can make builds faster by allowing more jobs to run in parallel.\n# Setting it too high can result in jobs that timeout, however, while waiting\n# for a remote machine to execute them.\nbuild:remote --jobs=50\n\n# Set several flags related to specifying the platform, toolchain and java\n# properties.\nbuild:remote --java_runtime_version=rbe_jdk\nbuild:remote --tool_java_runtime_version=rbe_jdk\n\n# When a remote configuration is chosen, add \"remote\" to the list of spawn_strategies.\nbuild:remote --spawn_strategy=remote,sandboxed,local\n\n# Enable remote execution so actions are performed on the remote systems.\nbuild:remote --remote_executor=grpcs://remotebuildexecution.googleapis.com\n\n# Some long running tasks are linking because the workers have relatively little RAM\n# (at least as of now).\nbuild:remote --remote_timeout=300\n\n# Enable authentication. This will pick up application default credentials by\n# default. You can use --google_credentials=some_file.json to use a service\n# account credential instead.\n# See https://developers.google.com/remote-build-execution/docs/authentication\n# To authenticate, you should run gcloud auth application-default login\nbuild:remote --google_default_credentials=true\n\n# End of the copied RBE settings\n#=====\n\n# Use the RBE instance on the skia-rbe GCP project.\nbuild:remote --remote_instance_name projects/skia-rbe/instances/default_instance\n\n# The linxu_rbe config will build on RBE and default to compiling for linux_x64 using\n# the hermetic toolchain.\nbuild:linux_rbe --config=remote\n# On the RBE instances, we also have the Java and C++ toolchain from the Docker image available.\n# These need to come after the --extra_toolchains flags (above) that register our hermetic\n# toolchains, because we only want these backup toolchains to be used by Bazel internals,\n# if at all.\nbuild:linux_rbe --extra_toolchains=//bazel/rbe/gce_linux/java:all\nbuild:linux_rbe --extra_toolchains=//bazel/rbe/gce_linux/config:cc-toolchain\n# Make the Linux platform available for selection as an Execution platform (if it is not already,\n# e.g. on a Linux host)\nbuild:linux_rbe --extra_execution_platforms=//bazel/platform:linux_x64_hermetic\n\n# Import our specified build configurations\n# https://docs.bazel.build/versions/main/best-practices.html#using-the-bazelrc-file\n# We chose to split our build configurations into their own file to have better organization\n# because we anticipate that file growing large.\nimport %workspace%/bazel/buildrc\n\n# Device-specific configurations.\nimport %workspace%/bazel/devicesrc\n\n# Import User's custom builds if they have defined any\ntry-import %workspace%/bazel/user/buildrc\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "7.3.1\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 6.3583984375,
          "content": "---\n# Typical usage is to apply this to the lines you've modified in a local\n# change. Make sure to install git-clang-format [1] by adding it to your\n# path and make it executable.\n#\n# Stage your changes with \"git add\" and then run:\n# $ git clang-format\n# You can optionally use the \"--\" file filter to restrict formatting to certain\n# files or directories. The tool will display  the list of files that were\n# modified. These have been modified without being staged. You can review the\n# modifications using \"git diff\".\n#\n# Some clients are running on older versions of clang-format, so please limit\n# flag choices to options supported by clang-format version 10 and below.\n# - XcodeClangFormat: clang-format 10\n# - bin/clang-format: clang-format 11\n# - brew:             clang-format 14\n#\n# [1] https://source.chromium.org/chromium/chromium/src/+/HEAD:third_party/clang-format/script/git-clang-format\n#\n# IF YOU UPDATE THE CPP SECTION ALSO UPDATE THE OBJECTIVE-C SECTION. IF YOU\n# KNOW HOW TO SHARE SETTINGS BETWEEN THE TWO YOU'RE A TRUE HERO.\n\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories:\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        4\nUseTab:          Never\n---\nLanguage:        ObjC\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories:\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        4\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.8876953125,
          "content": "Checks: >\n    -*,\n    bugprone-argument-comment,\n    bugprone-bool-pointer-implicit-conversion,\n    bugprone-suspicious-string-compare,\n    bugprone-undelegated-constructor,\n    bugprone-unused-raii,\n    bugprone-use-after-move,\n    google-build-namespaces,\n    llvm-namespace-comment,\n    misc-definitions-in-headers,\n    misc-uniqueptr-reset-release,\n    modernize-make-unique,\n    modernize-use-nullptr,\n    modernize-use-override,\n    performance-for-range-copy,\n    performance-move-constructor-init,\n    performance-unnecessary-copy-initialization,\n    readability-const-return-type,\n    readability-redundant-preprocessor,\n    readability-redundant-smartptr-get,\n    readability-static-accessed-through-instance\nCheckOptions:\n  - key:             llvm-namespace-comment.ShortNamespaceLines\n    value:           40\n  - key:             llvm-namespace-comment.SpacesBeforeComments\n    value:           2\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.171875,
          "content": "*.pyc\n*.swp\n*.iml\n*.perfetto-trace\n.DS_Store\n.android_config\n.gclient*\n.gradle\n.idea\n.cproject\n.clwb/\n.project\n.recipe_deps/\n.settings/\n.vscode/\n.win_toolchain/\nTAGS\nbower_components\nimgui.ini\ninfra/bots/gen_tasks_aux.go\ninfra/bots/tools/luci-go/linux64/cipd\ninfra/bots/tools/luci-go/linux64/isolate\ninfra/bots/tools/luci-go/mac64/cipd\ninfra/bots/tools/luci-go/mac64/isolate\ninfra/bots/tools/luci-go/win64/cipd.exe\ninfra/bots/tools/luci-go/win64/isolate.exe\nout\nplatform_tools/android/apps/build\nplatform_tools/android/apps/*.properties\nplatform_tools/android/apps/*/build\nplatform_tools/android/apps/*/src/main/libs\nplatform_tools/android/apps/*/*/src/main/libs\nplatform_tools/android/apps/*.hprof\nplatform_tools/android/apps/*/.externalNativeBuild\n\n/mskps\n/skps\n/svgs\ntools/skp/page_sets/data/*.json\ntools/skp/page_sets/data/*.wpr\n\nbuildtools\nthird_party/externals\n\nbin/gn\nbin/gn.exe\nbin/clang-format\nbin/clang-format.exe\nbin/sk\nbin/sk.exe\nbin/sk.version\nthird_party/ninja\nbin/ninja\nbin/ninja.exe\nbin/ninja.version\n\n\nnode_modules\ntools/lottiecap/filmstrip.png\n\nbazel-*\n\nCargo.lock\ntarget/\n\n# A user is free to specify custom builds or options here without them being checked in.\nbazel/user/buildrc\n"
        },
        {
          "name": ".gn",
          "type": "blob",
          "size": 0.2060546875,
          "content": "buildconfig = \"//gn/BUILDCONFIG.gn\"\nscript_executable = \"python3\"\n\ndefault_args = {\n  angle_standalone = false\n  angle_enable_msl_through_spirv = false\n  angle_use_wayland = false\n  dawn_use_built_dxc = false\n}\n"
        },
        {
          "name": ".vpython3",
          "type": "blob",
          "size": 0.0224609375,
          "content": "python_version: \"3.11\"\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 4.3837890625,
          "content": "# This is the official list of Skia authors for copyright purposes.\n#\n# Before adding your name to this file make sure you have signed the CLA.\n# Follow the instructions at https://skia.org/docs/dev/contrib on how to\n# sign the CLA.\n#\n# Names should be added to this file with one of the following patterns:\n#\n# For individual contributors:\n# Name <email address>\n#\n# For corporate contributors:\n# Organization <fnmatch pattern>\n# See examples below or python fnmatch module documentation for more information.\n#\n# Please keep the list sorted alphabetically.\n\nACCESS CO., LTD. <*@access-company.com>\nARM <*@arm.com>\nAaron O'Mullan <aaron.omullan@gmail.com>\nAdobe Systems Incorporated <*@adobe.com>\nAdrian E <aehkn@xenhub.one>\nAlexander Khovansky <alx.khovansky@gmail.com>\nAmazon, Inc <*@amazon.com>\nAnthony Catel <paraboul@gmail.com>\nAndrew Kurushin <ajax16384@gmail.com>\nBharat Ahuja <ahujabharat93@gmail.com>\nBiswapriyo Nath <nathbappai@gmail.com>\nBrian Salomon <briansalomon@gmail.com>\nCallum Moffat <smartercallum@gmail.com>\nCary Clark <cclark2@gmail.com>\nCasey Banner <kcbanner@gmail.com>\nChengYang <chengyangyang-hf@loongson.cn>\nChristian Plesner Hansen <plesner@t.undra.org>\nColdPaleLight <coldpalelight@gmail.com>\nDawson Coleman <dawsonmcoleman@gmail.com>\nDeepak Mohan <hop2deep@gmail.com>\nEhsan Akhgari <ehsan.akhgari@gmail.com>\nElad Lahav <e2lahav@gmail.com>\nErik Sombroek <eriksombroek@gmail.com>\nFacebook, Inc. <*fb.com>\nFrançois Beaufort <beaufort.francois@gmail.com>\nGeorge Wright <george@mozilla.com>\nGiWan Go <gogil@stealien.com>\nGoogle Inc. <*@google.com>\nHerb Derby <herbderby@gmail.com>\nHo Cheung <uioptt24@gmail.com>\nIgalia <*@igalia.com>\nIntel <*@intel.com>\nIon Rosca <rosca@adobe.com>\nJacek Caban <cjacek@gmail.com>\nJames Clarke <james@clarkezone.io>\nJeff Muizelaar <jmuizelaar@mozilla.com>\nJetBrains <*@jetbrains.com>\nJoey Bevilacqua <bevilacquajoey@gmail.com>\nJohn Armstrong <jlarmstrongiv@gmail.com>\nJongdeok Kim <jongdeok.kim@navercorp.com>\nJordan Williams <jordan@jwillikers.com>\nJose Mayol <jei.mayol@gmail.com>\nKai Zou <double1kai@gmail.com>\nKaloyan Donev <kdonev@gmail.com>\nLG Electronics <*@lge.com>\nLee Salzman <lsalzman@mozilla.com>\nLinaro <*@linaro.org>\nLuis Grimaldo <luisgrimaldo@me.com>\nMIPS <*@imgtec.com>\nMainframe North <*@mainframe.co.uk>\nMarcin Kazmierczak <mar.kazmierczak@gmail.com>\nMarco Alesiani <marco.diiga@gmail.com>\nMatthew Blanchard <matthewrblanchard@gmail.com>\nMatthew Leibowitz <mattleibow@live.com>\nMicrosoft <*@microsoft.com>\nMike Reed <mike@reedtribe.org>\nNVIDIA <*@nvidia.com>\nNamse <skatpgusskat@naver.com>\nNils André-Chang <nils@nilsand.re>\nNing Liu <ningliu@invisionapp.com>\nNoah Lavine <noah.b.lavine@gmail.com>\nOliver Dawes <olliedawes@gmail.com>\nOmeid Matten <contact@omeid.me>\nOpera Software ASA <*@opera.com>\nPavel Krajcevski <pavel@cs.unc.edu>\nPetar Kirov <petar.p.kirov@gmail.com>\nPing Wang <ping.wang@amd.com>\nRaul Tambre <raul@tambre.ee>\nRoman Petrenko <roman@canva.com>\nSafa Sofuoglu <safasofuoglu@gmail.com>\nSamsung <*@samsung.com>\nSamsung Open Source Group <*@osg.samsung.com>\nScene Group Ltd. <*@scenegroup.co>\nSergey Melnikov <Melnikov.Sergey.V@gmail.com>\nShachar Langbeheim <nihohit@gmail.com>\nShekhar Dutta <sherlockdoyle1904@gmail.com>\nSida Zhu <zhusida@bytedance.com>\nSkia <*@skia.org>\nSkia Buildbots <skia.buildbots@gmail.com>\nSony Mobile Communications Inc. <*@sonymobile.com>\nSoso Tsertsvadze <sosotsertsvadze2@gmail.com>\nStan I <stililiev@gmail.com>\nStepan Mikhailiuk <istepancar@gmail.com>\nStephan Hartmann <stha09@googlemail.com>\nSteve Singer <steve@ssinger.info>\nSylvestre Ledru <sylvestre.ledru@gmail.com>\nThe Chromium Authors <*@chromium.org>\nThiago Fransosi Farina <thiago.farina@gmail.com>\nVibe Inc <*@vibe.us>\nWilliam Candillon <wcandillon@gmail.com>\nWonmin Park <satcom1600@hanmail.net>\nYandex LLC <*@yandex-team.ru>\nYang Guang <yangguang@jwzg.com>\nYong-Hwan Baek <meisterdevhwan@gmail.com>\nYorkie Makoto <yorkiefixer@gmail.com>\nZhuo Qingliang <zhuo.dev@gmail.com>\nZoho Corporation Private Limited <*@zohocorp.com>\nDanil Bulanov <blnvdanil@gmail.com>\nWey <w2284938880@gmail.com>\nLinXunFeng <linxunfeng@yeah.net>\nXiaohan Wang <wxh158849067@gmail.com>\n\n# Trusted service accounts.\nGitHub Dependabot <(\\d+)\\+dependabot\\[bot\\]@users.noreply.github.com>\nRecipe roller SA <recipe-mega-autoroller@chops-service-accounts.iam.gserviceaccount.com>\nRecreate SKPs Bot SA <skia-recreate-skps@skia-swarming-bots.iam.gserviceaccount.com>\nSkia Autorollers SA <skia-autoroll@skia-public.iam.gserviceaccount.com>\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 10.1318359375,
          "content": "load(\"@rules_license//rules:license.bzl\", \"license\")\nload(\"//bazel:gen_compile_flags_txt_linux_amd64.bzl\", \"gen_compile_flags_txt_linux_amd64\")\n\npackage(\n    default_applicable_licenses = [\"//:license\"],\n)\n\n# https://opensource.google/documentation/reference/thirdparty/new_license_rules\n# https://github.com/bazelbuild/rules_license/blob/bcffeb0c481d178cbee69bdc7e23ef22d3a087b1/rules/license.bzl\nlicense(\n    name = \"license\",\n    license_kinds = [\"@rules_license//licenses/generic:notice\"],\n    license_text = \"LICENSE\",\n)\n\nlicenses([\"notice\"])\n\nalias(\n    name = \"core\",\n    actual = \"//src/core:core\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"pathops\",\n    actual = \"//src/pathops:pathops\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"ganesh_gl\",\n    actual = \"//src/gpu/ganesh/gl:ganesh_gl\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_egl_factory\",\n    actual = \"//src/gpu/ganesh/gl/egl:egl_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_gl_epoxy_factory\",\n    actual = \"//src/gpu/ganesh/gl/epoxy:epoxy_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_glx_factory\",\n    actual = \"//src/gpu/ganesh/gl/glx:glx_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_gl_ios_factory\",\n    actual = \"//src/gpu/ganesh/gl/ios:ios_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_gl_mac_factory\",\n    actual = \"//src/gpu/ganesh/gl/mac:mac_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_webgl_factory\",\n    actual = \"//src/gpu/ganesh/gl/webgl:webgl_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_gl_win_factory\",\n    actual = \"//src/gpu/ganesh/gl/win:win_factory\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_metal\",\n    actual = \"//src/gpu/ganesh/mtl:ganesh_metal\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ganesh_vulkan\",\n    actual = \"//src/gpu/ganesh/vk:ganesh_vulkan\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"graphite_dawn_vulkan\",\n    actual = \"//src/gpu/graphite/vk:graphite_dawn_vulkan\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"graphite_native_metal\",\n    actual = \"//src/gpu/graphite/mtl:graphite_native_metal\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"graphite_native_vulkan\",\n    actual = \"//src/gpu/graphite/vk:graphite_native_vulkan\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"bmp_decode_codec\",\n    actual = \"//src/codec:bmp_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"gif_decode_codec\",\n    actual = \"//src/codec:gif_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"ico_decode_codec\",\n    actual = \"//src/codec:ico_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"jpeg_encode_codec\",\n    actual = \"//src/encode:jpeg_encode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"jpeg_decode_codec\",\n    actual = \"//src/codec:jpeg_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"jpegxl_decode_codec\",\n    actual = \"//src/codec:jpegxl_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"png_decode_codec\",\n    actual = \"//src/codec:png_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"png_encode_codec\",\n    actual = \"//src/encode:png_encode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"wbmp_decode_codec\",\n    actual = \"//src/codec:wbmp_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"webp_decode_codec\",\n    actual = \"//src/codec:webp_decode\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"webp_encode_codec\",\n    actual = \"//src/encode:webp_encode\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"fontmgr_empty_freetype\",\n    actual = \"//src/ports:fontmgr_empty_freetype\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_coretext\",\n    actual = \"//src/ports:fontmgr_coretext\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_data_freetype\",\n    actual = \"//src/ports:fontmgr_data_freetype\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_directory_freetype\",\n    actual = \"//src/ports:fontmgr_directory_freetype\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"freetype_support\",\n    actual = \"//src/ports:freetype_support\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_fontconfig_freetype\",\n    actual = \"//src/ports:fontmgr_fontconfig_freetype\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_fontconfig_fontations\",\n    actual = \"//src/ports:fontmgr_fontconfig_fontations\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_android_freetype\",\n    actual = \"//src/ports:fontmgr_android_freetype\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"fontmgr_empty_fontations\",\n    actual = \"//src/ports:fontmgr_fontations_empty\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"pdf_writer\",\n    actual = \"//src/pdf:pdf\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"skottie\",\n    actual = \"//modules/skottie:skottie\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"skparagraph_harfbuzz_skunicode\",\n    actual = \"//modules/skparagraph:skparagraph_harfbuzz_skunicode\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"skshaper_core\",\n    actual = \"//modules/skshaper:skshaper_core_and_utils\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"skshaper_coretext\",\n    actual = \"//modules/skshaper:skshaper_coretext\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"skshaper_harfbuzz\",\n    actual = \"//modules/skshaper:skshaper_harfbuzz\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"skshaper_unicode\",\n    actual = \"//modules/skshaper:skshaper_unicode\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"skresources\",\n    actual = \"//modules/skresources:skresources\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\n# Allows Skia to take an SVG in as an input\nalias(\n    name = \"svg_renderer\",\n    actual = \"//modules/svg:svg_renderer\",\n    visibility = [\"//visibility:public\"],\n)\n\n# Allows Skia to draw to an SVG\nalias(\n    name = \"svg_writer\",\n    actual = \"//src/svg:svg\",\n    visibility = [\"//visibility:public\"],\n)\n\n###\n\nalias(\n    name = \"skunicode_core\",\n    actual = \"//modules/skunicode:skunicode_core\",\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"skunicode_icu\",\n    actual = \"//modules/skunicode:skunicode_icu\",\n    visibility = [\"//visibility:public\"],\n)\n\n# Load bearing comment below - gazelle looks here (and not in any other BUILD.bazel files)\n# for a special comment indicating the prefix.\n# gazelle:prefix go.skia.org/skia\n\n# This is an alias to avoid having to load the golang toolchain code just to\n# create the rules in our primary BUILD.bazel file\nalias(\n    name = \"gazelle\",\n    actual = \"//infra:gazelle\",\n    visibility = [\"//visibility:public\"],\n)\n\ntest_suite(\n    name = \"all_go_tests\",\n    tests = [\n        # Go tests in this list will be tested in CI. Please add any new Go tests to this suite.\n        \"//bazel/device_specific_configs:device_specific_configs_test\",\n        \"//bazel/exporter:exporter_test\",\n        \"//infra/bots/task_drivers/bazel_test_benchmark:bazel_test_benchmark_test\",\n        \"//infra/bots/task_drivers/bazel_test_gm:bazel_test_gm_test\",\n        \"//infra/bots/task_drivers/bazel_test_precompiled:bazel_test_precompiled_test\",\n        \"//infra/bots/task_drivers/codesize:codesize_test\",\n        \"//infra/bots/task_drivers/common:common_test\",\n        \"//infra/bots/task_drivers/perf_puppeteer_canvas:perf_puppeteer_canvas_test\",\n        \"//infra/bots/task_drivers/perf_puppeteer_render_skps:perf_puppeteer_render_skps_test\",\n        \"//infra/bots/task_drivers/perf_puppeteer_skottie_frames:perf_puppeteer_skottie_frames_test\",\n        \"//tools/testrunners/common/android/adb_test_runner:adb_test_runner_test\",\n    ],\n)\n\n# Generates a compile_flags.txt file for use with clangd against the Bazel-downloaded Linux AMD64\n# clang hermetic toolchain.\n#\n# This command prints to standard output a compile_flags.txt file that can be used with clangd to\n# enable autocompletion on editors that support it. See:\n# https://clangd.llvm.org/design/compile-commands.\n#\n# Note that this is implemented on a best effort basis. The produced compile_flags.txt file will\n# contain the subset of flags used by most targets, but some targets might require additional\n# flags. If that's the case, please manually add them to your compile_flags.txt file.\n#\n# Sample usage:\n#\n#     $ bazel run //:gen_compile_flags_txt_linux_amd64 > compile_flags.txt\n#\n# Invoke with --config=<some config> to generate flags with the defines and includes required for\n# your build. For example, if you build your binary as follows:\n#\n#     $ bazel build //path/to:binary --config=gl_ganesh\n#\n# Then your compile_flags.txt file should be generated with:\n#\n#     $ bazel run //:gen_compile_flags_txt_linux_amd64 --config=gl_ganesh > compile_flags.txt\n#\n# This was tested with Visual Studio Code and the clangd extension:\n# https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.vscode-clangd.\ngen_compile_flags_txt_linux_amd64(\n    name = \"gen_compile_flags_txt_linux_amd64\",\n)\n\n######\n# go #\n######\n\n# Sample usage: \"bazel run //:go -- generate ./...\".\nalias(\n    name = \"go\",\n    actual = \"@go_sdk//:bin/go\",\n    visibility = [\"//visibility:public\"],\n)\n\n#########\n# gofmt #\n#########\n\n# Sample usage: \"bazel run //:gofmt -- -s -w .\".\nalias(\n    name = \"gofmt\",\n    actual = \"@go_sdk//:bin/gofmt\",\n    visibility = [\"//visibility:public\"],\n)\n\n############\n# Errcheck #\n############\n\n# Sample usage: \"bazel run //:errcheck -- go.skia.org/skia/...\".\nalias(\n    name = \"errcheck\",\n    actual = \"//infra:errcheck\",\n    visibility = [\"//visibility:public\"],\n)\n\n##############\n# buildifier #\n##############\n\n# Sample usage: \"bazel run //:buildifier\".\nalias(\n    name = \"buildifier\",\n    actual = \"//bazel:buildifier\",\n)\n"
        },
        {
          "name": "BUILD.gn",
          "type": "blob",
          "size": 98.71484375,
          "content": "# Copyright 2016 Google Inc.\n#\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\nimport(\"gn/codec.gni\")\nimport(\"gn/fuchsia_defines.gni\")\nimport(\"gn/shared_sources.gni\")\nimport(\"gn/skia.gni\")\nimport(\"gn/toolchain/wasm.gni\")\n\nif (is_fuchsia) {\n  import(\"//build/fuchsia/sdk.gni\")\n  import(\"build/fuchsia/fuchsia_download_sdk.gni\")\n}\n\nif (skia_use_dawn) {\n  import(\"//third_party/externals/dawn/scripts/dawn_features.gni\")\n}\n\nif (defined(skia_settings)) {\n  import(skia_settings)\n}\n\nimport(\"gn/ios.gni\")\n\n# Skia public API, generally provided by :skia.\nconfig(\"skia_public\") {\n  include_dirs = [ \".\" ]\n\n  defines = [\n    \"SK_CODEC_DECODES_BMP\",\n    \"SK_CODEC_DECODES_WBMP\",\n  ]\n  cflags_objcc = []\n  if (is_component_build) {\n    defines += [ \"SKIA_DLL\" ]\n  }\n  if (is_fuchsia || is_linux) {\n    defines += [ \"SK_R32_SHIFT=16\" ]\n  }\n  if (skia_enable_optimize_size) {\n    defines += [ \"SK_ENABLE_OPTIMIZE_SIZE\" ]\n  }\n  if (skia_enable_precompile) {\n    defines += [ \"SK_ENABLE_PRECOMPILE\" ]\n  }\n  if (is_fuchsia) {\n    defines += fuchsia_defines\n  }\n  if (is_wasm) {\n    defines += wasm_defines\n  }\n  if (skia_gl_standard == \"gles\") {\n    defines += [ \"SK_ASSUME_GL_ES=1\" ]\n  } else if (skia_gl_standard == \"gl\") {\n    defines += [ \"SK_ASSUME_GL=1\" ]\n  } else if (skia_gl_standard == \"webgl\") {\n    defines += [ \"SK_ASSUME_WEBGL=1\" ]\n  }\n  if (skia_enable_ganesh) {\n    defines += [ \"SK_GANESH\" ]\n  }\n  if (skia_enable_graphite) {\n    defines += [ \"SK_GRAPHITE\" ]\n  }\n  if (skia_disable_tracing) {\n    defines += [ \"SK_DISABLE_TRACING\" ]\n  }\n  if (skia_use_perfetto) {\n    defines += [ \"SK_USE_PERFETTO\" ]\n  }\n  if (skia_use_safe_libcxx) {\n    defines += [ \"_LIBCPP_ENABLE_ASSERTIONS=1\" ]\n  }\n\n  # Some older versions of the Clang toolchain change the visibility of\n  # symbols decorated with API_AVAILABLE macro to be visible. Users of such\n  # toolchains suppress the use of this macro till toolchain updates are made.\n  if (is_mac || is_ios) {\n    if (skia_enable_api_available_macro) {\n      defines += [ \"SK_ENABLE_API_AVAILABLE\" ]\n    } else {\n      cflags_objcc += [ \"-Wno-unguarded-availability\" ]\n    }\n  }\n}\n\n# Skia internal APIs, used by Skia itself and a few test tools.\nconfig(\"skia_private\") {\n  visibility = [ \"./*\" ]\n\n  defines = [ \"SK_GAMMA_APPLY_TO_A8\" ]\n  if (skia_use_fixed_gamma_text) {\n    defines += [\n      \"SK_GAMMA_EXPONENT=1.4\",\n      \"SK_GAMMA_CONTRAST=0.0\",\n    ]\n  }\n  if (is_skia_dev_build && !is_wasm) {\n    defines += [\n      \"SK_ALLOW_STATIC_GLOBAL_INITIALIZERS=1\",\n      \"GPU_TEST_UTILS=1\",\n    ]\n  }\n  libs = []\n  lib_dirs = []\n  if (skia_use_gl && skia_use_angle) {\n    defines += [ \"SK_ANGLE\" ]\n  }\n  if (skia_use_vma) {\n    defines += [ \"SK_USE_VMA\" ]\n  }\n  if (skia_enable_winuwp) {\n    defines += [ \"SK_WINUWP\" ]\n  }\n  if (skia_print_sksl_shaders) {\n    defines += [ \"SK_PRINT_SKSL_SHADERS\" ]\n  }\n  if (skia_print_native_shaders) {\n    defines += [ \"SK_PRINT_NATIVE_SHADERS\" ]\n  }\n\n  # Temporary staging flag:\n  defines += [ \"SK_ENABLE_AVX512_OPTS\" ]\n}\n\n# Any code that's linked into Skia-the-library should use this config via += skia_library_configs.\nconfig(\"skia_library\") {\n  visibility = [ \"./*\" ]\n  defines = [ \"SKIA_IMPLEMENTATION=1\" ]\n}\n\nskia_library_configs = [\n  \":skia_public\",\n  \":skia_private\",\n  \":skia_library\",\n]\n\n# Use for CPU-specific Skia code that needs particular compiler flags.\ntemplate(\"opts\") {\n  if (invoker.enabled) {\n    skia_source_set(target_name) {\n      visibility = [ \":*\" ]\n      check_includes = false\n      configs = skia_library_configs\n      forward_variables_from(invoker, \"*\")\n      if (defined(invoker.configs)) {\n        configs += invoker.configs\n      }\n    }\n  } else {\n    # If not enabled, a phony empty target that swallows all otherwise unused variables.\n    skia_source_set(target_name) {\n      visibility = [ \":*\" ]\n      check_includes = false\n      forward_variables_from(invoker,\n                             \"*\",\n                             [\n                               \"sources\",\n                               \"cflags\",\n                             ])\n    }\n  }\n}\n\nis_x86 = current_cpu == \"x64\" || current_cpu == \"x86\"\nis_loong64 = current_cpu == \"loong64\"\n\nopts(\"hsw\") {\n  enabled = is_x86\n  sources = skia_opts.hsw_sources\n  if (is_win) {\n    cflags = [ \"/arch:AVX2\" ]\n  } else {\n    cflags = [ \"-march=haswell\" ]\n  }\n}\n\nopts(\"skx\") {\n  enabled = is_x86\n  sources = skia_opts.skx_sources\n  if (is_win) {\n    cflags = [ \"/arch:AVX512\" ]\n  } else {\n    cflags = [ \"-march=skylake-avx512\" ]\n  }\n}\n\nopts(\"lasx\") {\n  enabled = is_loong64\n  sources = skia_opts.lasx_sources\n  cflags = [ \"-mlasx\" ]\n}\n\n# Any feature of Skia that requires third-party code should be optional and use this template.\ntemplate(\"optional\") {\n  if (invoker.enabled) {\n    config(target_name + \"_public\") {\n      if (defined(invoker.public_defines)) {\n        defines = invoker.public_defines\n      }\n      if (defined(invoker.public_configs)) {\n        configs = invoker.public_configs\n      }\n    }\n    skia_source_set(target_name) {\n      visibility = [ \":*\" ]\n      check_includes = false\n      configs = skia_library_configs\n\n      # \"*\" clobbers the current scope; append to existing configs\n      forward_variables_from(invoker,\n                             \"*\",\n                             [\n                               \"configs\",\n                               \"public_defines\",\n                               \"sources_for_tests\",\n                               \"sources_when_disabled\",\n                             ])\n      if (defined(invoker.configs)) {\n        configs += invoker.configs\n      }\n      all_dependent_configs = [ \":\" + target_name + \"_public\" ]\n    }\n    if (defined(invoker.sources_for_tests) && skia_enable_tools) {\n      skia_source_set(target_name + \"_tests\") {\n        visibility = [ \":*\" ]\n        check_includes = false\n        configs = skia_library_configs\n\n        # \"*\" clobbers the current scope; append to existing configs\n        forward_variables_from(invoker,\n                               \"*\",\n                               [\n                                 \"configs\",\n                                 \"public_defines\",\n                                 \"sources\",\n                                 \"sources_for_tests\",\n                                 \"sources_when_disabled\",\n                               ])\n        if (defined(invoker.configs)) {\n          configs += invoker.configs\n        }\n        testonly = true\n        sources = invoker.sources_for_tests\n        if (!defined(deps)) {\n          deps = []\n        }\n        deps += [\n          \":test\",\n          \":\" + target_name,\n        ]\n        all_dependent_configs = [ \":\" + target_name + \"_public\" ]\n      }\n    }\n  } else {\n    skia_source_set(target_name) {\n      visibility = [ \":*\" ]\n      configs = skia_library_configs\n\n      # \"*\" clobbers the current scope; append to existing configs\n      forward_variables_from(invoker,\n                             \"*\",\n                             [\n                               \"configs\",\n                               \"public\",\n                               \"public_defines\",\n                               \"public_deps\",\n                               \"deps\",\n                               \"libs\",\n                               \"frameworks\",\n                               \"sources\",\n                               \"sources_for_tests\",\n                               \"sources_when_disabled\",\n                             ])\n      if (defined(invoker.configs)) {\n        configs += invoker.configs\n      }\n      if (defined(invoker.sources_when_disabled)) {\n        sources = invoker.sources_when_disabled\n      }\n    }\n    if (defined(invoker.sources_for_tests)) {\n      skia_source_set(target_name + \"_tests\") {\n        visibility = [ \":*\" ]\n      }\n    }\n  }\n}\n\noptional(\"android_utils\") {\n  enabled = skia_enable_android_utils\n\n  public = [\n    \"client_utils/android/BRDAllocator.h\",\n    \"client_utils/android/BitmapRegionDecoder.h\",\n    \"client_utils/android/FrontBufferedStream.h\",\n  ]\n  public_defines = [ \"SK_ENABLE_ANDROID_UTILS\" ]\n  sources = [\n    \"client_utils/android/BitmapRegionDecoder.cpp\",\n    \"client_utils/android/FrontBufferedStream.cpp\",\n  ]\n}\n\noptional(\"fontmgr_android\") {\n  enabled = skia_enable_fontmgr_android\n\n  deps = [\n    \":typeface_freetype\",\n    \":typeface_proxy\",\n    \"//third_party/expat\",\n  ]\n  public_defines = [ \"SK_FONTMGR_ANDROID_AVAILABLE\" ]\n  public = skia_ports_fontmgr_android_public\n  sources = skia_ports_fontmgr_android_sources\n  sources_for_tests = [ \"tests/FontMgrAndroidParserTest.cpp\" ]\n}\n\n# if building Skia for API >= 30 and not using custom fonts, enable\n# skia_enable_fontmgr_android_ndk and disable skia_enable_fontmgr_android\noptional(\"fontmgr_android_ndk\") {\n  enabled = skia_enable_fontmgr_android_ndk\n\n  deps = [\n    \":typeface_freetype\",\n    \":typeface_proxy\",\n  ]\n  libs = [ \"android\" ]\n  public_defines = [ \"SK_FONTMGR_ANDROID_NDK_AVAILABLE\" ]\n  public = skia_ports_fontmgr_android_ndk_public\n  sources = skia_ports_fontmgr_android_ndk_sources\n}\n\noptional(\"fontmgr_custom\") {\n  enabled =\n      skia_enable_fontmgr_custom_directory ||\n      skia_enable_fontmgr_custom_embedded || skia_enable_fontmgr_custom_empty\n\n  deps = [ \":typeface_freetype\" ]\n  sources = skia_ports_fontmgr_custom_sources\n}\n\noptional(\"fontmgr_custom_directory\") {\n  enabled = skia_enable_fontmgr_custom_directory\n  public_defines = [ \"SK_FONTMGR_FREETYPE_DIRECTORY_AVAILABLE\" ]\n  deps = [\n    \":fontmgr_custom\",\n    \":typeface_freetype\",\n  ]\n  public = skia_ports_fontmgr_directory_public\n  sources = skia_ports_fontmgr_directory_sources\n}\n\noptional(\"fontmgr_custom_embedded\") {\n  enabled = skia_enable_fontmgr_custom_embedded\n  public_defines = [ \"SK_FONTMGR_FREETYPE_EMBEDDED_AVAILABLE\" ]\n  deps = [\n    \":fontmgr_custom\",\n    \":typeface_freetype\",\n  ]\n  public = skia_ports_fontmgr_embedded_public\n  sources = skia_ports_fontmgr_embedded_sources\n}\n\noptional(\"fontmgr_custom_empty\") {\n  enabled = skia_enable_fontmgr_custom_empty\n  public_defines = [ \"SK_FONTMGR_FREETYPE_EMPTY_AVAILABLE\" ]\n  deps = [\n    \":fontmgr_custom\",\n    \":typeface_freetype\",\n  ]\n  public = skia_ports_fontmgr_empty_public\n  sources = skia_ports_fontmgr_empty_sources\n}\n\nskia_source_set(\"typeface_proxy\") {\n  configs = [ \":skia_public\" ]\n  sources = skia_ports_typeface_proxy_sources\n}\n\noptional(\"fontmgr_fontconfig\") {\n  enabled = skia_enable_fontmgr_fontconfig\n  public_defines = [ \"SK_FONTMGR_FONTCONFIG_AVAILABLE\" ]\n\n  # The public header includes fontconfig.h and uses FcConfig*\n  public_deps = [ \"//third_party:fontconfig\" ]\n  public = skia_ports_fontmgr_fontconfig_public\n  deps = [\n    \":typeface_freetype\",\n    \":typeface_proxy\",\n  ]\n  sources = skia_ports_fontmgr_fontconfig_sources\n  sources_for_tests = [ \"tests/FontMgrFontConfigTest.cpp\" ]\n}\n\nskia_source_set(\"fontscanner_tests\") {\n  testonly = true\n\n  deps = [ \":skia\" ]\n  sources = [\n    \"tests/FontScanner.cpp\",\n    \"tests/FontScanner.h\",\n  ]\n}\n\noptional(\"fontmgr_FontConfigInterface\") {\n  enabled = skia_enable_fontmgr_FontConfigInterface\n  public_defines = [ \"SK_FONTMGR_FCI_AVAILABLE\" ]\n  deps = [\n    \":typeface_freetype\",\n    \"//third_party:fontconfig\",\n  ]\n  public = skia_ports_fci_public\n  sources = skia_ports_fci_sources\n  sources_for_tests = [ \"tests/FCITest.cpp\" ]\n}\n\noptional(\"fontmgr_fontations_empty\") {\n  enabled = skia_use_fontations\n  public_defines = [ \"SK_FONTMGR_FONTATIONS_AVAILABLE\" ]\n\n  deps = [ \":typeface_fontations\" ]\n  public = skia_ports_fontmgr_fontations_public\n  sources = skia_ports_fontmgr_fontations_sources\n}\n\noptional(\"fontmgr_fuchsia\") {\n  enabled = skia_enable_fontmgr_fuchsia\n  public_defines = [ \"SK_FONTMGR_FUCHSIA_AVAILABLE\" ]\n  deps = []\n\n  if (is_fuchsia && using_fuchsia_sdk) {\n    deps += [ \"//build/fuchsia/fidl:fuchsia.fonts\" ]\n  } else {\n    deps = [ \"//sdk/fidl/fuchsia.fonts\" ]\n  }\n  public = skia_ports_fontmgr_fuchsia_public\n  sources = skia_ports_fontmgr_fuchsia_sources\n}\n\noptional(\"fontmgr_mac_ct\") {\n  enabled = skia_use_fonthost_mac\n\n  public_defines = [\n    \"SK_TYPEFACE_FACTORY_CORETEXT\",\n    \"SK_FONTMGR_CORETEXT_AVAILABLE\",\n  ]\n  public = skia_ports_fontmgr_coretext_public\n  sources = skia_ports_fontmgr_coretext_sources\n  sources_for_tests = [ \"tests/TypefaceMacTest.cpp\" ]\n\n  if (is_mac) {\n    frameworks = [\n      # AppKit symbols NSFontWeightXXX may be dlsym'ed.\n      \"AppKit.framework\",\n      \"ApplicationServices.framework\",\n    ]\n  }\n\n  if (is_ios) {\n    frameworks = [\n      \"CoreFoundation.framework\",\n      \"CoreGraphics.framework\",\n      \"CoreText.framework\",\n\n      # UIKit symbols UIFontWeightXXX may be dlsym'ed.\n      \"UIKit.framework\",\n    ]\n  }\n}\n\noptional(\"fontmgr_win\") {\n  enabled = skia_enable_fontmgr_win\n\n  public_defines = [\n    \"SK_TYPEFACE_FACTORY_DIRECTWRITE\",\n    \"SK_FONTMGR_DIRECTWRITE_AVAILABLE\",\n  ]\n  public = skia_ports_windows_fonts_public\n  sources = skia_ports_windows_fonts_sources\n  if (skia_dwritecore_sdk != \"\") {\n    defines = [ \"DWRITE_CORE\" ]\n    if (is_win && is_clang) {\n      # Clang complains about these headers, so mark them as system. These\n      # headers are hiding SDK headers of the same name, which are also\n      # included as system headers, so these need to go first in the cflags\n      # \"includes\" before the SDK. gn appends configs in the order listed,\n      # so these flags will be first.\n      cflags = [\n        \"-imsvc\",\n        \"${skia_dwritecore_sdk}/include\",\n      ]\n    } else {\n      include_dirs = [ \"${skia_dwritecore_sdk}/include\" ]\n    }\n  }\n}\n\noptional(\"fontmgr_win_gdi\") {\n  enabled = skia_enable_fontmgr_win_gdi\n  public_defines = [ \"SK_FONTMGR_GDI_AVAILABLE\" ]\n  public = skia_ports_windows_fonts_public\n  sources = skia_ports_fonthost_win_sources\n  libs = [ \"Gdi32.lib\" ]\n}\n\nif (skia_lex) {\n  skia_executable(\"sksllex\") {\n    sources = [\n      \"src/sksl/lex/DFA.h\",\n      \"src/sksl/lex/DFAState.h\",\n      \"src/sksl/lex/LexUtil.h\",\n      \"src/sksl/lex/Main.cpp\",\n      \"src/sksl/lex/NFA.cpp\",\n      \"src/sksl/lex/NFA.h\",\n      \"src/sksl/lex/NFAState.h\",\n      \"src/sksl/lex/NFAtoDFA.h\",\n      \"src/sksl/lex/RegexNode.cpp\",\n      \"src/sksl/lex/RegexNode.h\",\n      \"src/sksl/lex/RegexParser.cpp\",\n      \"src/sksl/lex/RegexParser.h\",\n      \"src/sksl/lex/TransitionTable.cpp\",\n      \"src/sksl/lex/TransitionTable.h\",\n    ]\n    include_dirs = [ \".\" ]\n  }\n\n  action(\"run_sksllex\") {\n    script = \"gn/run_sksllex.py\"\n    deps = [ \":sksllex(//gn/toolchain:$host_toolchain)\" ]\n    sources = [ \"src/sksl/lex/sksl.lex\" ]\n\n    # GN insists its outputs should go somewhere underneath target_out_dir, so we trick it with a\n    # path that starts with target_out_dir and then uses \"..\" to back up into the src dir.\n    outputs = [\n      \"$target_out_dir/\" + rebase_path(\"src/sksl/SkSLLexer.h\", target_out_dir),\n      # the script also modifies the corresponding .cpp file, but if we tell GN that it gets\n      # confused due to the same file being named by two different paths\n    ]\n    sksllex_path = \"$root_out_dir/\"\n    if (host_toolchain != default_toolchain_name) {\n      sksllex_path += \"$host_toolchain/\"\n    }\n    sksllex_path += \"sksllex\"\n    if (host_os == \"win\") {\n      sksllex_path += \".exe\"\n    }\n    args = [\n      rebase_path(sksllex_path),\n      rebase_path(\"bin/clang-format\"),\n      rebase_path(\"bin/fetch-clang-format\"),\n      rebase_path(\"src\"),\n    ]\n  }\n} else {\n  group(\"run_sksllex\") {\n  }\n}\n\nif (skia_compile_modules || skia_compile_sksl_tests) {\n  # Copy the module source files into the same directory as skslc.\n  copy(\"sksl_modules\") {\n    sources = [\n      \"src/sksl/sksl_compute.sksl\",\n      \"src/sksl/sksl_frag.sksl\",\n      \"src/sksl/sksl_gpu.sksl\",\n      \"src/sksl/sksl_graphite_frag.sksl\",\n      \"src/sksl/sksl_graphite_frag_es2.sksl\",\n      \"src/sksl/sksl_graphite_vert.sksl\",\n      \"src/sksl/sksl_graphite_vert_es2.sksl\",\n      \"src/sksl/sksl_public.sksl\",\n      \"src/sksl/sksl_rt_shader.sksl\",\n      \"src/sksl/sksl_shared.sksl\",\n      \"src/sksl/sksl_vert.sksl\",\n    ]\n    skslc_dir = \"$root_out_dir/\"\n    if (host_toolchain != default_toolchain_name) {\n      skslc_dir += \"$host_toolchain/\"\n    }\n    outputs = [ \"$skslc_dir/{{source_file_part}}\" ]\n  }\n}\n\nif (skia_compile_modules) {\n  # Generate the sksl-minify binary.\n  skia_executable(\"sksl-minify\") {\n    defines = [\n      \"SKSL_STANDALONE\",\n      \"SK_DISABLE_TRACING\",\n    ]\n    sources = skslc_deps\n    sources += [\n      \"tools/sksl-minify/SkSLMinify.cpp\",\n      \"tools/skslc/ProcessWorklist.cpp\",\n      \"tools/skslc/ProcessWorklist.h\",\n    ]\n    libs = []\n    if (is_win) {\n      sources += [ \"src/utils/SkGetExecutablePath_win.cpp\" ]\n    } else if (is_mac || is_ios) {\n      sources += [ \"src/utils/SkGetExecutablePath_mac.cpp\" ]\n    } else if (is_linux || is_android) {\n      sources += [ \"src/utils/SkGetExecutablePath_linux.cpp\" ]\n    }\n    if (is_win) {\n      sources += skia_ports_windows_sources\n    } else {\n      sources += [ \"src/ports/SkOSFile_posix.cpp\" ]\n      libs += [ \"dl\" ]\n    }\n    sources += skia_sksl_core_sources\n    sources += skia_sksl_codegen_sources\n    include_dirs = [ \".\" ]\n    deps = [ \":run_sksllex\" ]\n  }\n\n  sksl_minify_path = \"$root_out_dir/\"\n  if (host_toolchain != default_toolchain_name) {\n    sksl_minify_path += \"$host_toolchain/\"\n  }\n  sksl_minify_path += \"sksl-minify\"\n  if (host_os == \"win\") {\n    sksl_minify_path += \".exe\"\n  }\n\n  # Use minify_sksl.py to precompile all of the modules.\n  minify_sksl_sources = get_target_outputs(\":sksl_modules\")\n\n  minify_sksl_outputs = []\n  foreach(src, minify_sksl_sources) {\n    name = get_path_info(src, \"name\")\n\n    # GN insists its outputs should go somewhere underneath target_out_dir, so we trick it with a\n    # path that starts with target_out_dir and then uses \"..\" to back up into the src dir.\n    minify_sksl_outputs += [ \"$target_out_dir/\" + rebase_path(\n                                 \"src/sksl/generated/$name.minified.sksl\",\n                                 target_out_dir) ]\n    minify_sksl_outputs += [ \"$target_out_dir/\" + rebase_path(\n                                 \"src/sksl/generated/$name.unoptimized.sksl\",\n                                 target_out_dir) ]\n  }\n\n  action(\"minify_sksl\") {\n    script = \"gn/minify_sksl.py\"\n    deps = [\n      \":sksl-minify(//gn/toolchain:$host_toolchain)\",\n      \":sksl_modules\",\n    ]\n    sources = minify_sksl_sources\n    outputs = minify_sksl_outputs\n    args = [\n      rebase_path(sksl_minify_path),\n      rebase_path(\"src/sksl/generated\"),\n    ]\n    args += rebase_path(minify_sksl_sources)\n  }\n\n  if (skia_compile_sksl_tests) {\n    # Minify our existing .rts files into golden minified outputs.\n    import(\"gn/sksl_tests.gni\")\n    action(\"minify_sksl_tests\") {\n      script = \"gn/minify_sksl_tests.py\"\n      deps = [\n        \":sksl-minify(//gn/toolchain:$host_toolchain)\",\n        \":sksl_modules\",\n      ]\n      sources = []\n      outputs = []\n      response_file_contents = []\n      args = [\n        # Comments match the variable names in minify_sksl_tests.py\n        rebase_path(sksl_minify_path),  # sksl_minify\n        rebase_path(\"src/sksl/sksl_shared.sksl\"),  # shared_module\n        rebase_path(\"src/sksl/sksl_public.sksl\"),  # public_module\n        rebase_path(\"src/sksl/sksl_rt_shader.sksl\"),  # public_module\n        rebase_path(\"resources\"),  # input_root_dir\n        rebase_path(\"tests\"),  # output_root_dir\n        \"{{response_file_name}}\",  # input_file\n      ]\n\n      testsDir = get_path_info(\"tests/sksl/\", \"abspath\")\n      resourcesDir = get_path_info(\"resources/sksl/\", \"abspath\")\n\n      foreach(partialPath, sksl_minify_tests_sources) {\n        dst = testsDir + partialPath\n        src = resourcesDir + partialPath\n\n        dir = get_path_info(dst, \"dir\")\n        name = get_path_info(dst, \"name\")\n        ext = get_path_info(dst, \"extension\")\n        if (ext == \"rts\" || ext == \"privrts\" || ext == \"rtcf\" || ext == \"rtb\" ||\n            ext == \"mfrag\" || ext == \"mvert\") {\n          response_file_contents += [ rebase_path(src) ]\n          sources += [ src ]\n          outputs += [ target_out_dir + \"/\" +\n                       rebase_path(dir + \"/\" + name + \".minified.sksl\",\n                                   target_out_dir) ]\n        }\n      }\n    }\n  }\n} else {\n  group(\"minify_sksl\") {\n  }\n  group(\"minify_sksl_tests\") {\n  }\n}\n\n# `Compile SkSL Tests` relies on skslc and the precompiled modules.\nif (skia_compile_sksl_tests) {\n  # Build skslc.\n  skia_executable(\"skslc\") {\n    defines = [\n      \"SKSL_STANDALONE\",\n      \"SK_DISABLE_TRACING\",\n      \"SK_COMPILE_WITH_GN\",\n    ]\n    sources = skslc_deps\n    sources += [\n      \"tools/skslc/Main.cpp\",\n      \"tools/skslc/ProcessWorklist.cpp\",\n      \"tools/skslc/ProcessWorklist.h\",\n    ]\n    libs = []\n    if (is_win) {\n      sources += [ \"src/utils/SkGetExecutablePath_win.cpp\" ]\n    } else if (is_mac || is_ios) {\n      sources += [ \"src/utils/SkGetExecutablePath_mac.cpp\" ]\n    } else if (is_linux || is_android) {\n      sources += [ \"src/utils/SkGetExecutablePath_linux.cpp\" ]\n    }\n    if (is_win) {\n      sources += skia_ports_windows_sources\n    } else {\n      sources += [ \"src/ports/SkOSFile_posix.cpp\" ]\n      libs += [ \"dl\" ]\n    }\n    sources += skia_sksl_codegen_sources\n    sources += skia_sksl_core_sources\n    sources += skia_sksl_hlsl_sources\n    sources += skia_sksl_pipeline_sources\n    sources += skia_sksl_tracing_sources\n    sources += skia_sksl_validate_spirv_sources\n    sources += skia_sksl_validate_wgsl_sources\n    include_dirs = [ \".\" ]\n    deps = [\n      \":run_sksllex\",\n      \"//third_party/externals/dawn/src/tint/api:api\",\n      \"//third_party/externals/spirv-tools:spvtools\",\n      \"//third_party/externals/spirv-tools:spvtools_val\",\n      \"//third_party/spirv-cross:spirv_cross\",\n    ]\n  }\n\n  skslc_path = \"$root_out_dir/\"\n  if (host_toolchain != default_toolchain_name) {\n    skslc_path += \"$host_toolchain/\"\n  }\n  skslc_path += \"skslc\"\n  if (host_os == \"win\") {\n    skslc_path += \".exe\"\n  }\n\n  # Build the test files using skslc.\n  import(\"gn/sksl_tests.gni\")\n  template(\"compile_sksl\") {\n    # Compile the passed-in `sources` into `outputs` using skslc, with the given language/settings.\n    action(\"compile_sksl_${target_name}\") {\n      script = \"gn/compile_sksl_tests.py\"\n      deps = [\n        \":sksl_modules\",\n        \":skslc(//gn/toolchain:$host_toolchain)\",\n      ]\n      sources = []\n      outputs = []\n      response_file_contents = []\n      args = [\n        # Comments are the variable name in compile_sksl_tests.py\n        rebase_path(skslc_path),  # skslc\n        invoker.lang,  # lang\n        invoker.settings,  # settings\n        rebase_path(\"resources\"),  # input_root_dir\n        rebase_path(\"tests\"),  # output_root_dir\n        \"{{response_file_name}}\",  # input_file\n      ]\n\n      testsDir = get_path_info(\"tests/sksl/\", \"abspath\")\n      resourcesDir = get_path_info(\"resources/sksl/\", \"abspath\")\n\n      foreach(partialPath, invoker.sources) {\n        dst = testsDir + partialPath\n        src = resourcesDir + partialPath\n\n        dir = get_path_info(dst, \"dir\")\n        name = get_path_info(dst, \"name\")\n        ext = get_path_info(dst, \"extension\")\n        response_file_contents += [ rebase_path(src) ]\n        sources += [ src ]\n\n        foreach(outExtension, invoker.outExtensions) {\n          # SPIR-V uses separate extensions for .vert and .compute shaders.\n          if (ext == \"vert\" && outExtension == \".asm.frag\") {\n            outExtension = \".asm.vert\"\n          } else if (ext == \"compute\" && outExtension == \".asm.frag\") {\n            outExtension = \".asm.comp\"\n          }\n          outputs +=\n              [ target_out_dir + \"/\" +\n                rebase_path(dir + \"/\" + name + outExtension, target_out_dir) ]\n        }\n      }\n    }\n  }\n  compile_sksl(\"glsl_tests\") {\n    sources = sksl_glsl_tests_sources + sksl_glsl_settings_tests_sources\n    outExtensions = [ \".glsl\" ]\n    lang = \"--glsl\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"glsl_nosettings_tests\") {\n    sources = sksl_glsl_settings_tests_sources\n    outExtensions = [ \"StandaloneSettings.glsl\" ]\n    lang = \"--glsl\"\n    settings = \"--nosettings\"\n  }\n  compile_sksl(\"metal_tests\") {\n    sources = sksl_metal_tests_sources\n    outExtensions = [ \".metal\" ]\n    lang = \"--metal\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"hlsl_tests\") {\n    sources = sksl_hlsl_tests_sources\n    outExtensions = [ \".hlsl\" ]\n    lang = \"--hlsl\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"skrp_tests\") {\n    sources = sksl_skrp_tests_sources\n    outExtensions = [ \".skrp\" ]\n    lang = \"--skrp\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"stage_tests\") {\n    sources = sksl_stage_tests_sources\n    outExtensions = [ \".stage\" ]\n    lang = \"--stage\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"spirv_tests\") {\n    sources = sksl_spirv_tests_sources\n    outExtensions = [ \".asm.frag\" ]\n    lang = \"--spirv\"\n    settings = \"--settings\"\n  }\n  compile_sksl(\"wgsl_tests\") {\n    sources = sksl_wgsl_tests_sources\n    outExtensions = [ \".wgsl\" ]\n    lang = \"--wgsl\"\n    settings = \"--settings\"\n  }\n} else {\n  group(\"compile_sksl_glsl_tests\") {\n  }\n  group(\"compile_sksl_glsl_nosettings_tests\") {\n  }\n  group(\"compile_sksl_metal_tests\") {\n  }\n  group(\"compile_sksl_hlsl_tests\") {\n  }\n  group(\"compile_sksl_skrp_tests\") {\n  }\n  group(\"compile_sksl_spirv_tests\") {\n  }\n  group(\"compile_sksl_wgsl_tests\") {\n  }\n}\n\ngroup(\"compile_all_sksl_tests\") {\n  deps = [\n    \":compile_sksl_glsl_nosettings_tests\",\n    \":compile_sksl_glsl_tests\",\n    \":compile_sksl_hlsl_tests\",\n    \":compile_sksl_metal_tests\",\n    \":compile_sksl_skrp_tests\",\n    \":compile_sksl_spirv_tests\",\n    \":compile_sksl_wgsl_tests\",\n  ]\n}\n\noptional(\"gpu_shared\") {\n  enabled = skia_enable_ganesh || skia_enable_graphite\n\n  configs = []\n  deps = []\n  libs = []\n  public_defines = []\n  public_deps = []\n  frameworks = []\n\n  sources = skia_shared_gpu_sources\n  sources += skia_sksl_pipeline_sources\n  sources += skia_sksl_codegen_sources\n\n  if (skia_use_dawn) {\n    public_defines += [ \"SK_DAWN\" ]\n\n    # When building for WASM, the WebGPU headers are provided by Emscripten. For native builds we\n    # have to depend on Dawn directly.\n    if (!skia_use_webgpu) {\n      public_deps += [\n        \"//third_party/externals/dawn/include/dawn:cpp_headers\",\n        \"//third_party/externals/dawn/src/dawn:cpp\",\n        \"//third_party/externals/dawn/src/dawn:proc\",\n      ]\n\n      if (dawn_enable_d3d12 || dawn_enable_d3d11 || dawn_enable_desktop_gl ||\n          dawn_enable_metal || dawn_enable_opengles || dawn_enable_vulkan) {\n        public_deps += [ \"//third_party/externals/dawn/src/dawn/native\" ]\n      }\n      if (dawn_enable_d3d12) {\n        libs += [\n          \"d3d12.lib\",\n          \"dxgi.lib\",\n          \"d3dcompiler.lib\",\n        ]\n      } else if (dawn_enable_metal) {\n        frameworks += [ \"Metal.framework\" ]\n      }\n    }\n  }\n\n  if (skia_use_direct3d) {\n    sources += skia_sksl_hlsl_sources\n    deps += [ \"//third_party/spirv-cross:spirv_cross\" ]\n  }\n\n  if (skia_use_vulkan) {\n    public_defines += [ \"SK_VULKAN\" ]\n    sources += skia_shared_vk_sources\n    configs += [ \":use_skia_vulkan_headers\" ]\n    if (skia_enable_vulkan_debug_layers) {\n      public_defines += [ \"SK_ENABLE_VK_LAYERS\" ]\n    }\n    if (skia_use_vma) {\n      sources += skia_vma_sources\n      public_deps += [ \"src/gpu/vk/vulkanmemoryallocator\" ]\n    }\n  }\n\n  if (skia_use_metal) {\n    public_defines += [ \"SK_METAL\" ]\n    sources += skia_shared_mtl_sources\n  }\n\n  if (is_android) {\n    sources += skia_shared_android_sources\n  }\n}\n\noptional(\"gpu\") {\n  enabled = skia_enable_ganesh\n  deps = [\n    \":gpu_shared\",\n    \":minify_sksl\",\n    \":run_sksllex\",\n  ]\n  if (skia_generate_workarounds) {\n    deps += [ \":workaround_list\" ]\n  }\n  configs = []\n  public_defines = []\n  public_configs = []\n  public_deps = []\n\n  public = skia_gpu_public\n  sources = skia_ganesh_private\n\n  libs = []\n  frameworks = []\n\n  if (is_android) {\n    sources += skia_gpu_android_private\n\n    # this lib is required to link against AHardwareBuffer\n    if (defined(ndk_api) && ndk_api >= 26) {\n      libs += [ \"android\" ]\n    }\n  }\n\n  if (skia_use_gl) {\n    public_defines += [ \"SK_GL\" ]\n    if (is_android) {\n      sources += [\n        \"src/gpu/ganesh/gl/egl/GrGLMakeEGLInterface.cpp\",\n        \"src/gpu/ganesh/gl/egl/GrGLMakeNativeInterface_egl.cpp\",\n      ]\n      sources += skia_android_gl_sources\n\n      # this lib is required to link against AHardwareBuffer\n      if (defined(ndk_api) && ndk_api >= 26) {\n        libs += [ \"android\" ]\n      }\n    } else if (skia_use_egl) {\n      if (skia_use_epoxy_egl) {\n        sources += [ \"src/gpu/ganesh/gl/epoxy/GrGLMakeEpoxyEGLInterface.cpp\" ]\n        libs += [ \"epoxy\" ]\n      } else {\n        sources += [\n          \"src/gpu/ganesh/gl/egl/GrGLMakeEGLInterface.cpp\",\n          \"src/gpu/ganesh/gl/egl/GrGLMakeNativeInterface_egl.cpp\",\n        ]\n        libs += [ \"EGL\" ]\n      }\n    } else if (skia_use_webgl) {\n      sources += [ \"src/gpu/ganesh/gl/webgl/GrGLMakeNativeInterface_webgl.cpp\" ]\n    } else if (is_linux && skia_use_x11) {\n      sources += [\n        \"src/gpu/ganesh/gl/glx/GrGLMakeGLXInterface.cpp\",\n        \"src/gpu/ganesh/gl/glx/GrGLMakeNativeInterface_glx.cpp\",\n      ]\n      libs += [ \"GL\" ]\n    } else if (is_mac) {\n      sources += [ \"src/gpu/ganesh/gl/mac/GrGLMakeNativeInterface_mac.cpp\" ]\n    } else if (is_ios) {\n      sources += [ \"src/gpu/ganesh/gl/iOS/GrGLMakeNativeInterface_iOS.cpp\" ]\n    } else if (is_win && !skia_enable_winuwp) {\n      sources += [\n        \"src/gpu/ganesh/gl/win/GrGLMakeNativeInterface_win.cpp\",\n        \"src/gpu/ganesh/gl/win/GrGLMakeWinInterface.cpp\",\n      ]\n      if (target_cpu != \"arm64\") {\n        libs += [ \"OpenGL32.lib\" ]\n      }\n    } else {\n      sources += [ \"src/gpu/ganesh/gl/GrGLMakeNativeInterface_none.cpp\" ]\n    }\n    public += skia_gpu_gl_public\n    sources += skia_gpu_gl_private\n  }\n\n  if (skia_use_vulkan) {\n    public += skia_gpu_vk_public\n    sources += skia_gpu_vk_private\n    configs += [ \":use_skia_vulkan_headers\" ]\n    if (is_fuchsia) {\n      if (using_fuchsia_sdk) {\n        public_deps += [ \"$fuchsia_sdk_root/pkg:vulkan\" ]\n      } else {\n        public_deps += [ \"//src/graphics/lib/vulkan\" ]\n      }\n    }\n    if (is_android) {\n      sources += skia_gpu_vk_android_private\n    }\n  }\n\n  if (skia_use_direct3d) {\n    public_defines += [ \"SK_DIRECT3D\" ]\n    deps += [ \"//third_party/d3d12allocator\" ]\n    sources += skia_direct3d_sources\n    if (skia_enable_direct3d_debug_layer) {\n      public_defines += [ \"SK_ENABLE_D3D_DEBUG_LAYER\" ]\n    }\n    libs += [\n      \"d3d12.lib\",\n      \"dxgi.lib\",\n      \"d3dcompiler.lib\",\n    ]\n  }\n\n  cflags_objcc = []\n  if (skia_use_metal) {\n    public_defines += [ \"SK_METAL\" ]\n    public += skia_gpu_metal_public\n    sources += skia_gpu_metal_private\n    sources += skia_gpu_metal_cpp\n    if (skia_enable_metal_debug_info) {\n      public_defines += [ \"SK_ENABLE_MTL_DEBUG_INFO\" ]\n    }\n    frameworks += [ \"Metal.framework\" ]\n    frameworks += [ \"Foundation.framework\" ]\n    if (is_ios) {\n      frameworks += [ \"UIKit.framework\" ]\n    }\n    cflags_objcc += [ \"-fobjc-arc\" ]\n  }\n\n  if (is_debug || skia_build_for_debugger) {\n    public_defines += [ \"SK_ENABLE_DUMP_GPU\" ]\n  }\n}\n\noptional(\"vello\") {\n  enabled = skia_enable_vello_shaders\n  public_defines = [ \"SK_ENABLE_VELLO_SHADERS\" ]\n  public_deps = [ \"//third_party/vello\" ]\n}\n\noptional(\"heif\") {\n  enabled = skia_use_libheif\n  public_defines = [ \"SK_HAS_HEIF_LIBRARY\" ]\n\n  # This HEIF decoding functionality is a part of the Android Framework.\n  # https://android.googlesource.com/platform/frameworks/av/+/master/media/libheif/include/HeifDecoderAPI.h\n  # There isn't a way to compile that library outside of it, so we just link against\n  # the library. This feature is not supported on other platforms (and we haven't\n  # yet tried something like https://github.com/strukturag/libheif/tree/master/libheif).\n  # The dependency for Android is set in gn_to_bp.py.\n  deps = []\n\n  sources = [ \"src/codec/SkHeifCodec.cpp\" ]\n}\n\noptional(\"avif\") {\n  enabled = skia_use_libavif\n  public_defines = [ \"SK_CODEC_DECODES_AVIF\" ]\n\n  deps = [ \"//third_party/libavif\" ]\n\n  sources = [ \"src/codec/SkAvifCodec.cpp\" ]\n}\n\noptional(\"crabbyavif\") {\n  enabled = skia_use_crabbyavif\n  public_defines = [ \"SK_CODEC_DECODES_AVIF\" ]\n\n  # AVIF decoding is provided by CrabbyAvif (a Rust library). Since skia's\n  # standalone builds do not support Rust, it is only being enabled when\n  # building for the Android framework.\n  # The dependency for Android is set in gn_to_bp.py\n  deps = []\n  sources = [ \"src/codec/SkCrabbyAvifCodec.cpp\" ]\n}\n\noptional(\"jpeg_mpf\") {\n  enabled = skia_use_jpeg_gainmaps &&\n            (skia_use_libjpeg_turbo_encode || skia_use_libjpeg_turbo_decode)\n  sources = [\n    \"src/codec/SkJpegMultiPicture.cpp\",\n    \"src/codec/SkJpegSegmentScan.cpp\",\n  ]\n}\n\noptional(\"jpeg_decode\") {\n  enabled = skia_use_libjpeg_turbo_decode\n  public_defines = [ \"SK_CODEC_DECODES_JPEG\" ]\n\n  deps = [ \"//third_party/libjpeg-turbo:libjpeg\" ]\n  sources = [\n    \"src/codec/SkJpegCodec.cpp\",\n    \"src/codec/SkJpegDecoderMgr.cpp\",\n    \"src/codec/SkJpegMetadataDecoderImpl.cpp\",\n    \"src/codec/SkJpegSourceMgr.cpp\",\n    \"src/codec/SkJpegUtility.cpp\",\n  ]\n  if (skia_use_jpeg_gainmaps) {\n    # Theoretically this doesn't need to be public, but this allows gn_to_bp.py to see it, and seems\n    # to align with other codec support. See b/265939413\n    public_defines += [ \"SK_CODEC_DECODES_JPEG_GAINMAPS\" ]\n    deps += [\n      \":jpeg_mpf\",\n      \":xml\",\n    ]\n    sources += skia_codec_jpeg_xmp\n  }\n}\n\noptional(\"jpeg_encode\") {\n  enabled = skia_use_libjpeg_turbo_encode && !skia_use_ndk_images\n  public_defines = [ \"SK_CODEC_ENCODES_JPEG\" ]\n\n  deps = [ \"//third_party/libjpeg-turbo:libjpeg\" ]\n  public = skia_encode_jpeg_public\n  sources = skia_encode_jpeg_srcs\n\n  if (skia_use_jpeg_gainmaps) {\n    deps += [ \":jpeg_mpf\" ]\n    sources += [ \"src/encode/SkJpegGainmapEncoder.cpp\" ]\n  }\n}\n\noptional(\"jpegxl_decode\") {\n  enabled = skia_use_libjxl_decode\n  public_defines = [ \"SK_CODEC_DECODES_JPEGXL\" ]\n\n  deps = [ \"//third_party/libjxl\" ]\n  sources = [ \"src/codec/SkJpegxlCodec.cpp\" ]\n}\n\noptional(\"ndk_images\") {\n  enabled = skia_use_ndk_images\n  public_defines = [ \"SK_ENABLE_NDK_IMAGES\" ]\n  sources = [\n    \"src/ports/SkImageEncoder_NDK.cpp\",\n    \"src/ports/SkImageGeneratorNDK.cpp\",\n    \"src/ports/SkNDKConversions.cpp\",\n  ]\n  libs = [ \"jnigraphics\" ]\n}\n\noptional(\"graphite\") {\n  configs = []\n  libs = []\n  frameworks = []\n  public_defines = []\n\n  enabled = skia_enable_graphite\n  deps = [\n    \":gpu_shared\",\n    \":vello\",\n  ]\n  public = skia_graphite_public\n  sources = skia_graphite_sources\n  sources += skia_sksl_graphite_modules_sources\n\n  if (is_android) {\n    sources += skia_graphite_android_private\n  }\n\n  if (skia_enable_vello_shaders) {\n    sources += skia_graphite_vello_sources\n  }\n\n  if (skia_use_dawn) {\n    public += skia_graphite_dawn_public\n    sources += skia_graphite_dawn_sources\n  }\n  if (skia_use_metal) {\n    public_defines += [ \"SK_METAL\" ]\n    public += skia_graphite_mtl_public\n    sources += skia_graphite_mtl_sources\n    if (skia_enable_metal_debug_info) {\n      public_defines += [ \"SK_ENABLE_MTL_DEBUG_INFO\" ]\n    }\n    frameworks += [ \"Metal.framework\" ]\n    frameworks += [ \"Foundation.framework\" ]\n    if (is_ios) {\n      frameworks += [ \"UIKit.framework\" ]\n    }\n  }\n  if (skia_use_vulkan) {\n    public += skia_graphite_vk_public\n    sources += skia_graphite_vk_sources\n    configs += [ \":use_skia_vulkan_headers\" ]\n  }\n  if (skia_enable_precompile) {\n    public += skia_graphite_precompile_public\n    sources += skia_graphite_precompile_sources\n  }\n  if (is_debug) {\n    public_defines += [ \"SK_PIPELINE_LIFETIME_LOGGING\" ]\n  }\n}\n\noptional(\"pdf\") {\n  enabled = skia_use_zlib && skia_enable_pdf && skia_use_libjpeg_turbo_decode &&\n            skia_use_libjpeg_turbo_encode\n  public_defines = [ \"SK_SUPPORT_PDF\" ]\n\n  deps = [ \"//third_party/zlib\" ]\n  public = skia_pdf_public\n  sources = skia_pdf_sources\n  sources_when_disabled = [ \"src/pdf/SkDocument_PDF_None.cpp\" ]\n  if (skia_pdf_subset_harfbuzz) {\n    deps += [ \"//third_party/harfbuzz\" ]\n    defines = [ \"SK_PDF_USE_HARFBUZZ_SUBSET\" ]\n  }\n  deps += [\n    \":jpeg_decode\",\n    \":jpeg_encode\",\n  ]\n}\n\noptional(\"xps\") {\n  enabled = skia_use_xps && is_win\n  public_defines = [ \"SK_SUPPORT_XPS\" ]\n  public = skia_xps_public\n  sources = skia_xps_sources\n}\n\noptional(\"png_decode_libpng\") {\n  enabled = skia_use_libpng_decode\n  public_defines = [\n    \"SK_CODEC_DECODES_ICO\",\n    \"SK_CODEC_DECODES_PNG\",\n    \"SK_CODEC_DECODES_PNG_WITH_LIBPNG\",\n  ]\n\n  deps = [ \"//third_party/libpng\" ]\n  sources = [ \"src/codec/SkIcoCodec.cpp\" ] + skia_codec_png_base +\n            skia_codec_libpng_srcs\n}\n\noptional(\"png_encode\") {\n  enabled = skia_use_libpng_encode && !skia_use_ndk_images\n  public_defines = [\n    \"SK_CODEC_ENCODES_PNG\",\n    \"SK_CODEC_ENCODES_PNG_WITH_LIBPNG\",\n  ]\n\n  public = skia_encode_png_public\n  deps = [ \"//third_party/libpng\" ]\n  sources = skia_encode_png_srcs\n}\n\noptional(\"raw\") {\n  enabled = skia_use_dng_sdk && skia_use_libjpeg_turbo_decode && skia_use_piex\n  public_defines = [ \"SK_CODEC_DECODES_RAW\" ]\n\n  deps = [\n    \"//third_party/dng_sdk\",\n    \"//third_party/libjpeg-turbo:libjpeg\",\n    \"//third_party/piex\",\n  ]\n\n  # SkRawCodec catches any exceptions thrown by dng_sdk, insulating the rest of\n  # Skia.\n  configs = [ \"gn/portable:add_exceptions\" ]\n\n  sources = [ \"src/codec/SkRawCodec.cpp\" ]\n}\n\noptional(\"typeface_freetype\") {\n  enabled = skia_use_freetype\n\n  public_defines = [ \"SK_TYPEFACE_FACTORY_FREETYPE\" ]\n  deps = [ \"//third_party/freetype2\" ]\n  sources = skia_ports_freetype_sources\n  sources_for_tests = [ \"tests/FontScanner_FreeTypeTest.cpp\" ]\n}\n\nbazel_args = []\nif (is_mac && target_cpu == \"arm64\") {\n  # TODO: Normally the target toolchain would be specified with `--platforms` but that doesn't\n  # work. When building and running on an arm64 mac, setting `--host_platform` seems to do the\n  # right thing but may not be the right build configuration in the long run.\n  bazel_args += [ \"--host_platform=//bazel/platform:mac_arm64_hermetic\" ]\n}\nif (is_debug) {\n  bazel_args += [ \"--compilation_mode=dbg\" ]\n} else {\n  bazel_args += [ \"--compilation_mode=opt\" ]\n}\n\nif (skia_use_fontations) {\n  action(\"fontations_rust_side_bazel_build\") {\n    script = \"gn/bazel_build.py\"\n    sources = [\n      \"src/ports/fontations/BUILD.bazel\",\n      \"src/ports/fontations/src/ffi.rs\",\n    ]\n    outputs = [ \"$root_out_dir/libbridge_rust_side.a\" ]\n    args =\n        [\n          \"//src/ports/fontations:bridge_rust_side\",\n          rebase_path(\"//bazel-bin/src/ports/fontations/libbridge_rust_side.a\",\n                      root_build_dir),\n        ] + bazel_args\n  }\n\n  # We only use Bazel to get the generated `.cc` and `.h` file and then compile\n  # them on GN/ninja side using `skia_source_set` below.  This ensures that the\n  # same C++ stdlib and compiler is used throughout the build (in some scenarios\n  # Bazel may end up using different ones).\n  action(\"fontations_ffi_bazel_build\") {\n    script = \"gn/bazel_build.py\"\n    sources = [\n      \"src/ports/fontations/BUILD.bazel\",\n      \"src/ports/fontations/src/ffi.rs\",\n    ]\n    outputs = [\n      \"$root_out_dir/src/ports/fontations/src/ffi.rs.h\",\n      \"$root_out_dir/src/ports/fontations/src/ffi.rs.cc\",\n    ]\n    args = [\n             \"//src/ports/fontations:fontations_ffi\",\n\n             # we want the header to not simply be copied into the output directory,\n             # but in the same path as the Bazel build uses.\n             rebase_path(\"//bazel-bin/src/ports/fontations/src/ffi.rs.h\",\n                         root_build_dir) + \"=src/ports/fontations/src/ffi.rs.h\",\n             rebase_path(\"//bazel-bin/src/ports/fontations/src/ffi.rs.cc\",\n                         root_build_dir) +\n                 \"=src/ports/fontations/src/ffi.rs.cc\",\n           ] + bazel_args\n  }\n  config(\"fontations_ffi_public_config\") {\n    include_dirs = [\n      # This is where `src/ports/fontations/src/ffi.rs.h` was put by Bazel\n      \"$root_out_dir\",\n    ]\n  }\n  config(\"fontations_ffi_private_config\") {\n    include_dirs = [\n      # This entry is needed so that `ffi.rs.cc` can resolve\n      # `#include \"src/ports/fontations/src/ffi.rs.h\"`\n      \".\",\n    ]\n  }\n  skia_source_set(\"fontations_ffi\") {\n    deps = [\n      \":fontations_ffi_bazel_build\",\n      \":fontations_rust_side_bazel_build\",\n    ]\n    public = [ \"${root_out_dir}/src/ports/fontations/src/ffi.rs.h\" ]\n    sources = [ \"${root_out_dir}/src/ports/fontations/src/ffi.rs.cc\" ]\n    libs = [ \"$root_out_dir/libbridge_rust_side.a\" ]\n    public_configs = [ \":fontations_ffi_public_config\" ]\n    configs = [ \":fontations_ffi_private_config\" ]\n  }\n}\n\noptional(\"typeface_fontations\") {\n  public_defines = [ \"SK_TYPEFACE_FACTORY_FONTATIONS\" ]\n  enabled = skia_use_fontations\n  public_deps = [ \":fontations_ffi\" ]\n  sources = skia_ports_typeface_fontations_sources\n  sources_for_tests = [\n    \"tests/FontationsTest.cpp\",\n    \"tests/FontationsFtCompTest.cpp\",\n    \"tests/FontScanner_FontationsTest.cpp\",\n  ]\n}\n\nif (skia_use_rust_png_decode || skia_use_rust_png_encode) {\n  # We only use Bazel to get the generated `.cc` and `.h` file and then compile\n  # them on GN/ninja side using `skia_source_set` below.  This ensures that the\n  # same C++ stdlib and compiler is used throughout the build (in some scenarios\n  # Bazel may end up using different ones).\n  action(\"rust_png_ffi_bazel_build\") {\n    script = \"gn/bazel_build.py\"\n    sources = [\n      \"experimental/rust_png/ffi/BUILD.bazel\",\n      \"experimental/rust_png/ffi/FFI.h\",\n      \"experimental/rust_png/ffi/FFI.rs\",\n    ]\n    outputs = [\n      \"$root_out_dir/librust_png_ffi_rs.a\",\n      \"$root_out_dir/experimental/rust_png/ffi/FFI.rs.h\",\n      \"$root_out_dir/experimental/rust_png/ffi/FFI.rs.cc\",\n    ]\n    args =\n        [\n          \"//experimental/rust_png/ffi:*\",\n\n          rebase_path(\"//bazel-bin/experimental/rust_png/ffi/libffi_rs.a\",\n                      root_build_dir) + \"=librust_png_ffi_rs.a\",\n\n          # we want the `cxx`-generated headers to not simply be copied into\n          # the output directory, but in the same path as the Bazel build\n          # uses.\n          rebase_path(\"//bazel-bin/experimental/rust_png/ffi/FFI.rs.h\",\n                      root_build_dir) + \"=experimental/rust_png/ffi/FFI.rs.h\",\n          rebase_path(\"//bazel-bin/experimental/rust_png/ffi/FFI.rs.cc\",\n                      root_build_dir) + \"=experimental/rust_png/ffi/FFI.rs.cc\",\n        ] + bazel_args\n  }\n  action(\"rust_png_cxx_core_bazel_build\") {\n    script = \"gn/bazel_build.py\"\n    sources = [\n      \"WORKSPACE.bazel\",\n      \"bazel/external/cxx/BUILD.bazel\",\n      \"bazel/external/cxx/BUILD.bazel.skia\",\n    ]\n    outputs = [\n      \"$root_out_dir/librust_png_cxx_core_lib.a\",\n      \"$root_out_dir/third_party/rust/cxx/v1/cxx.h\",\n    ]\n    args = [\n             \"@cxx//:core-lib\",\n\n             rebase_path(\"//bazel-bin/external/cxx/libcore-lib.a\",\n                         root_build_dir) + \"=librust_png_cxx_core_lib.a\",\n\n             # we want the `cxx.h` header to not simply be copied into the\n             # output directory, but in the same path as the Bazel build uses.\n             rebase_path(\n                     \"//bazel-bin/external/cxx/_virtual_includes/core-lib/third_party/rust/cxx/v1/cxx.h\",\n                     root_build_dir) + \"=third_party/rust/cxx/v1/cxx.h\",\n           ] + bazel_args\n  }\n  config(\"rust_png_cxx_bridge_public_config\") {\n    include_dirs = [\n      # This is where `experimental/rust_png/ffi/FFI.rs.h` and\n      # `third_party/rust/cxx/v1/cxx.h` were put by Bazel\n      \"$root_out_dir\",\n    ]\n  }\n  config(\"rust_png_cxx_bridge_private_config\") {\n    include_dirs = [\n      # This entry is needed so that `FFI.rs.cc` can resolve\n      # `#include \"experimental/rust_png/ffi/FFI.h\"`\n      \".\",\n    ]\n  }\n  skia_source_set(\"rust_png_cxx_bridge\") {\n    deps = [ \":rust_png_ffi_bazel_build\" ]\n    public = [ \"${root_out_dir}/experimental/rust_png/ffi/FFI.rs.h\" ]\n    sources = [ \"${root_out_dir}/experimental/rust_png/ffi/FFI.rs.cc\" ]\n    libs = [ \"$root_out_dir/librust_png_ffi_rs.a\" ]\n    public_configs = [ \":rust_png_cxx_bridge_public_config\" ]\n    configs = [ \":rust_png_cxx_bridge_private_config\" ]\n  }\n}\n\noptional(\"png_decode_rust\") {\n  public_defines = [ \"SK_CODEC_DECODES_PNG_WITH_RUST\" ]\n  enabled = skia_use_rust_png_decode\n  public = skia_codec_rust_png_public\n  sources = skia_codec_rust_png + skia_codec_png_base\n  sources_for_tests = [ \"tests/SkPngRustDecoderTest.cpp\" ]\n\n  deps = [\n    \":rust_png_cxx_bridge\",\n    \":rust_png_cxx_core_bazel_build\",\n  ]\n  libs = [ \"$root_out_dir/librust_png_cxx_core_lib.a\" ]\n}\n\noptional(\"png_encode_rust\") {\n  public_defines = [ \"SK_CODEC_ENCODES_PNG_WITH_RUST\" ]\n  enabled = skia_use_rust_png_encode\n  public = skia_encode_rust_png_public  # From `gn/core.gni`\n  sources =\n      skia_encode_rust_png_srcs + skia_encode_png_base  # From `gn/core.gni`\n  sources_for_tests = [ \"tests/SkPngRustEncoderTest.cpp\" ]\n  deps = [\n    \":rust_png_cxx_bridge\",\n    \":rust_png_cxx_core_bazel_build\",\n  ]\n  libs = [ \"$root_out_dir/librust_png_cxx_core_lib.a\" ]\n}\n\noptional(\"webp_decode\") {\n  enabled = skia_use_libwebp_decode\n  public_defines = [ \"SK_CODEC_DECODES_WEBP\" ]\n\n  deps = [ \"//third_party/libwebp\" ]\n  sources = [ \"src/codec/SkWebpCodec.cpp\" ]\n}\n\noptional(\"webp_encode\") {\n  enabled = skia_use_libwebp_encode && !skia_use_ndk_images\n  public_defines = [ \"SK_CODEC_ENCODES_WEBP\" ]\n  public = skia_encode_webp_public\n\n  deps = [ \"//third_party/libwebp\" ]\n  sources = skia_encode_webp_srcs\n}\n\noptional(\"wuffs\") {\n  enabled = skia_use_wuffs\n  public_defines = [\n    \"SK_HAS_WUFFS_LIBRARY\",\n    \"SK_CODEC_DECODES_GIF\",\n  ]\n\n  deps = [ \"//third_party/wuffs\" ]\n  sources = [ \"src/codec/SkWuffsCodec.cpp\" ]\n}\n\noptional(\"xml\") {\n  enabled = skia_use_expat || skia_use_jpeg_gainmaps\n  public_defines = [ \"SK_XML\" ]\n\n  deps = [ \"//third_party/expat\" ]\n  sources = skia_xml_sources + skia_codec_xmp + [\n              \"src/svg/SkSVGCanvas.cpp\",\n              \"src/svg/SkSVGDevice.cpp\",\n            ]\n}\n\nif (skia_enable_ganesh && skia_generate_workarounds) {\n  action(\"workaround_list\") {\n    script = \"tools/build_workaround_header.py\"\n\n    inputs = [ \"src/gpu/gpu_workaround_list.txt\" ]\n\n    # GN insists its outputs should go somewhere underneath root_out_dir, so we trick it with a\n    # path that starts with root_out_dir and then uses \"..\" to back up into the src dir.\n    output_file =\n        rebase_path(\"include/gpu/ganesh/GrDriverBugWorkaroundsAutogen.h\",\n                    root_out_dir)\n\n    outputs = [ \"$root_out_dir/$output_file\" ]\n    args = [\n      \"--output-file\",\n      \"$output_file\",\n    ]\n\n    foreach(file, inputs) {\n      args += [ rebase_path(file, root_build_dir) ]\n    }\n  }\n}\n\nimport(\"gn/codec.gni\")\n\nskia_component(\"skia\") {\n  public_configs = [ \":skia_public\" ]\n  configs = skia_library_configs\n\n  public_deps = [\n    \":fontmgr_FontConfigInterface\",\n    \":fontmgr_android\",\n    \":fontmgr_android_ndk\",\n    \":fontmgr_custom_directory\",\n    \":fontmgr_custom_embedded\",\n    \":fontmgr_custom_empty\",\n    \":fontmgr_fontations_empty\",\n    \":fontmgr_fontconfig\",\n    \":fontmgr_fuchsia\",\n    \":fontmgr_mac_ct\",\n    \":fontmgr_win\",\n    \":fontmgr_win_gdi\",\n    \":gpu\",\n    \":graphite\",\n    \":jpeg_encode\",\n    \":pdf\",\n    \":png_encode\",\n    \":webp_encode\",\n    \":xps\",\n  ]\n\n  deps = [\n    \":android_utils\",\n    \":avif\",\n    \":crabbyavif\",\n    \":heif\",\n    \":hsw\",\n    \":jpeg_decode\",\n    \":jpegxl_decode\",\n    \":lasx\",\n    \":minify_sksl\",\n    \":ndk_images\",\n    \":png_decode_libpng\",\n    \":png_decode_rust\",\n    \":raw\",\n    \":skx\",\n    \":typeface_fontations\",\n    \":vello\",\n    \":webp_decode\",\n    \":wuffs\",\n    \":xml\",\n    \"modules/skcms\",\n  ]\n\n  public = skia_core_public\n  public += skia_codec_public\n  public += skia_utils_public\n  public += skia_effects_public\n  public += skia_effects_imagefilter_public\n\n  sources = []\n  sources += skia_core_sources\n  sources += skia_utils_private\n  sources += skia_utils_chromium\n  sources += skia_effects_sources\n  sources += skia_colorfilters_sources\n  sources += skia_effects_imagefilter_sources\n  sources += skia_codec_shared\n  sources += skia_codec_decode_bmp\n  sources += skia_encode_srcs\n  sources += skia_sksl_core_sources\n  sources += skia_sksl_core_module_sources\n  sources += skia_sksl_tracing_sources\n  sources += skia_ports_sources\n  sources += [\n    \"src/android/SkAndroidFrameworkUtils.cpp\",\n    \"src/android/SkAnimatedImage.cpp\",\n    \"src/codec/SkAndroidCodec.cpp\",\n    \"src/codec/SkAndroidCodecAdapter.cpp\",\n    \"src/codec/SkSampledCodec.cpp\",\n    \"src/ports/SkDiscardableMemory_none.cpp\",\n    \"src/ports/SkMemory_malloc.cpp\",\n    \"src/sfnt/SkOTTable_name.cpp\",\n    \"src/sfnt/SkOTUtils.cpp\",\n  ]\n\n  defines = []\n  libs = []\n\n  if (skia_build_for_debugger) {\n    defines += [ \"SK_BUILD_FOR_DEBUGGER\" ]\n  }\n\n  if (skia_use_no_jpeg_encode) {\n    sources += skia_no_encode_jpeg_srcs\n  }\n  if (skia_use_no_png_encode) {\n    sources += skia_no_encode_png_srcs\n  }\n  if (skia_use_no_webp_encode) {\n    sources += skia_no_encode_webp_srcs\n  }\n\n  if (is_win) {\n    sources += skia_ports_windows_sources + [\n                 \"src/ports/SkDebug_win.cpp\",\n                 \"src/ports/SkImageGeneratorWIC.cpp\",\n               ]\n    libs += [\n      \"Ole32.lib\",\n      \"OleAut32.lib\",\n    ]\n\n    if (!skia_enable_winuwp) {\n      libs += [\n        \"FontSub.lib\",\n        \"User32.lib\",\n        \"Usp10.lib\",\n      ]\n    }\n  } else {\n    sources += [ \"src/ports/SkOSFile_posix.cpp\" ]\n    if (is_ios) {\n      sources += [ \"src/ports/SkOSFile_ios.h\" ]\n    }\n    libs += [ \"dl\" ]\n  }\n\n  if (is_android) {\n    deps += [ \"//third_party/expat\" ]\n    if (defined(ndk) && ndk != \"\") {\n      deps += [ \"//third_party/cpu-features\" ]\n    }\n    sources += [ \"src/ports/SkDebug_android.cpp\" ]\n    libs += [\n      \"EGL\",\n      \"GLESv2\",\n      \"log\",\n    ]\n  }\n\n  if (is_linux || is_wasm) {\n    sources += [ \"src/ports/SkDebug_stdio.cpp\" ]\n    if (skia_use_egl) {\n      libs += [ \"GLESv2\" ]\n    }\n  }\n\n  if (is_mac) {\n    public += [ \"include/ports/SkCFObject.h\" ]\n    sources += [\n      \"src/ports/SkDebug_stdio.cpp\",\n      \"src/ports/SkImageGeneratorCG.cpp\",\n    ]\n    frameworks = [\n      \"ApplicationServices.framework\",\n      \"OpenGL.framework\",\n    ]\n  }\n\n  if (is_ios) {\n    public += [ \"include/ports/SkCFObject.h\" ]\n    sources += [\n      \"src/ports/SkDebug_stdio.cpp\",\n      \"src/ports/SkImageGeneratorCG.cpp\",\n    ]\n    frameworks = [\n      \"CoreFoundation.framework\",\n      \"ImageIO.framework\",\n      \"MobileCoreServices.framework\",\n    ]\n  }\n\n  if (is_fuchsia) {\n    sources += [ \"src/ports/SkDebug_stdio.cpp\" ]\n  }\n\n  if (skia_enable_spirv_validation) {\n    deps += [ \"//third_party/externals/spirv-tools:spvtools_val\" ]\n    defines += [ \"SK_ENABLE_SPIRV_VALIDATION\" ]\n  }\n\n  if (skia_include_multiframe_procs) {\n    sources += [ \"tools/SkSharingProc.cpp\" ]\n  }\n\n  # Overrides TRACE_EVENT0..2 macros (etc) to map to Perfetto's tracing macros.\n  # Currently only supported in Android framework.\n  if (skia_android_framework_use_perfetto) {\n    defines += [ \"SK_ANDROID_FRAMEWORK_USE_PERFETTO\" ]\n    sources += [ \"src/android/SkAndroidFrameworkPerfettoStaticStorage.cpp\" ]\n  }\n\n  if (!skia_enable_ganesh && !skia_enable_graphite) {\n    sources += skia_no_slug_srcs\n  }\n}\n\n# DebugCanvas used in experimental/wasm-skp-debugger\nif (is_wasm) {\n  skia_static_library(\"debugcanvas\") {\n    public_configs = [ \":skia_public\" ]\n\n    sources = [\n      \"tools/SkSharingProc.cpp\",\n      \"tools/UrlDataManager.cpp\",\n      \"tools/debugger/DebugCanvas.cpp\",\n      \"tools/debugger/DebugLayerManager.cpp\",\n      \"tools/debugger/DrawCommand.cpp\",\n      \"tools/debugger/JsonWriteBuffer.cpp\",\n    ]\n  }\n}\n\nskia_static_library(\"pathkit\") {\n  check_includes = false\n  public_configs = [ \":skia_public\" ]\n  configs = skia_library_configs\n\n  deps = [ \":hsw\" ]\n\n  sources = []\n  sources += skia_pathops_sources\n  sources += skia_pathops_public\n  sources += [\n    \"src/base/SkArenaAlloc.cpp\",\n    \"src/base/SkBezierCurves.cpp\",\n    \"src/base/SkContainers.cpp\",\n    \"src/base/SkCubics.cpp\",\n    \"src/base/SkFloatingPoint.cpp\",\n    \"src/base/SkMalloc.cpp\",\n    \"src/base/SkMathPriv.cpp\",\n    \"src/base/SkQuads.cpp\",\n    \"src/base/SkSafeMath.cpp\",\n    \"src/base/SkSemaphore.cpp\",\n    \"src/base/SkTDArray.cpp\",\n    \"src/base/SkThreadID.cpp\",\n    \"src/base/SkUTF.cpp\",\n    \"src/base/SkUtils.cpp\",\n    \"src/core/SkAnalyticEdge.cpp\",\n    \"src/core/SkContourMeasure.cpp\",\n    \"src/core/SkCubicMap.cpp\",\n    \"src/core/SkEdge.cpp\",\n    \"src/core/SkEdgeBuilder.cpp\",\n    \"src/core/SkEdgeClipper.cpp\",\n    \"src/core/SkGeometry.cpp\",\n    \"src/core/SkIDChangeListener.cpp\",\n    \"src/core/SkLineClipper.cpp\",\n    \"src/core/SkMallocPixelRef.cpp\",\n    \"src/core/SkMatrix.cpp\",\n    \"src/core/SkOpts.cpp\",\n    \"src/core/SkPaint.cpp\",\n    \"src/core/SkPaintPriv.cpp\",\n    \"src/core/SkPath.cpp\",\n    \"src/core/SkPathBuilder.cpp\",\n    \"src/core/SkPathEffect.cpp\",\n    \"src/core/SkPathMeasure.cpp\",\n    \"src/core/SkPathRef.cpp\",\n    \"src/core/SkPathUtils.cpp\",\n    \"src/core/SkPoint.cpp\",\n    \"src/core/SkRRect.cpp\",\n    \"src/core/SkReadBuffer.cpp\",\n    \"src/core/SkRect.cpp\",\n    \"src/core/SkStream.cpp\",\n    \"src/core/SkString.cpp\",\n    \"src/core/SkStringUtils.cpp\",\n    \"src/core/SkStroke.cpp\",\n    \"src/core/SkStrokeRec.cpp\",\n    \"src/core/SkStrokerPriv.cpp\",\n    \"src/effects/SkDashPathEffect.cpp\",\n    \"src/effects/SkTrimPathEffect.cpp\",\n    \"src/ports/SkDebug_stdio.cpp\",\n    \"src/ports/SkMemory_malloc.cpp\",\n    \"src/utils/SkDashPath.cpp\",\n    \"src/utils/SkParse.cpp\",\n    \"src/utils/SkParsePath.cpp\",\n  ]\n}\n\ngroup(\"modules\") {\n  deps = [\n    \"modules/bentleyottmann\",\n    \"modules/skottie\",\n    \"modules/skparagraph\",\n    \"modules/skshaper\",\n    \"modules/svg\",\n  ]\n\n  if (is_wasm) {\n    deps += [ \"modules/canvaskit\" ]\n  }\n}\n\nconfig(\"use_skia_vulkan_headers\") {\n  include_dirs = [ \"include/third_party/vulkan\" ]\n  defines = [ \"SK_USE_INTERNAL_VULKAN_HEADERS\" ]\n}\n\nconfig(\"vulkan_memory_allocator\") {\n  include_dirs = [ \"$skia_vulkan_memory_allocator_dir/include\" ]\n}\n\n# Targets guarded by skia_enable_tools may use //third_party freely.\nif (skia_enable_tools) {\n  skia_public_includes = [\n    \"client_utils/android\",\n    \"include/android\",\n    \"include/codec\",\n    \"include/config\",\n    \"include/core\",\n    \"include/docs\",\n    \"include/effects\",\n    \"include/encode\",\n    \"include/gpu\",\n    \"include/pathops\",\n    \"include/ports\",\n    \"include/svg\",\n    \"include/utils\",\n    \"include/utils/mac\",\n    \"modules/skottie/include\",\n    \"modules/skparagraph/include\",\n    \"modules/skshaper/include\",\n    \"modules/svg/include\",\n  ]\n\n  # Used by gn_to_bp.py to list our public include dirs.\n  skia_source_set(\"public\") {\n    configs = [ \":skia_public\" ]\n    include_dirs = skia_public_includes\n  }\n\n  config(\"skia.h_config\") {\n    include_dirs = [ \"$target_gen_dir\" ]\n  }\n  action(\"skia.h\") {\n    public_configs = [ \":skia.h_config\" ]\n    skia_h = \"$target_gen_dir/skia.h\"\n    script = \"gn/find_headers.py\"\n\n    args = [ rebase_path(\"//bin/gn\") ] + [ rebase_path(\"//\") ] +\n           [ rebase_path(skia_h, root_build_dir) ] +\n           rebase_path(skia_public_includes)\n    depfile = \"$skia_h.deps\"\n    outputs = [ skia_h ]\n  }\n\n  if (is_linux && target_cpu == \"x64\") {\n    skia_executable(\"fiddle\") {\n      check_includes = false\n      libs = []\n      sources = [\n        \"tools/fiddle/draw.cpp\",\n        \"tools/fiddle/fiddle_main.cpp\",\n      ]\n\n      if (skia_use_egl) {\n        sources += [ \"tools/fiddle/egl_context.cpp\" ]\n      } else {\n        sources += [ \"tools/fiddle/null_context.cpp\" ]\n      }\n      testonly = true\n      deps = [\n        \":flags\",\n        \":gpu_tool_utils\",\n        \":skia\",\n        \":skia.h\",\n        \"modules/skottie\",\n        \"modules/skparagraph\",\n        \"modules/skshaper\",\n        \"modules/svg\",\n      ]\n    }\n  }\n\n  config(\"cpp17\") {\n    if (is_win) {\n      cflags_cc = [ \"/std:c++17\" ]\n    } else {\n      cflags_cc = [ \"-std=c++17\" ]\n    }\n  }\n\n  skia_source_set(\"public_headers_warnings_check\") {\n    sources = [ \"tools/public_headers_warnings_check.cpp\" ]\n    configs = [\n      \":use_skia_vulkan_headers\",\n      \":cpp17\",\n    ]\n    if (defined(skia_header_target_default_configs)) {\n      configs += skia_header_target_default_configs\n    }\n    deps = [\n      \":skia\",\n      \":skia.h\",\n      \"modules/skottie\",\n      \"modules/skshaper\",\n    ]\n\n    if (skia_use_dawn) {\n      deps += [ \"//third_party/externals/dawn/include/dawn:headers\" ]\n    }\n  }\n\n  template(\"test_lib\") {\n    config(target_name + \"_config\") {\n      if (defined(invoker.public_defines)) {\n        defines = invoker.public_defines\n      }\n    }\n    skia_source_set(target_name) {\n      forward_variables_from(invoker, \"*\", [])\n      check_includes = false\n      public_configs = [\n        \":\" + target_name + \"_config\",\n        \":skia_private\",\n      ]\n\n      if (!defined(deps)) {\n        deps = []\n      }\n      deps += [ \":skia\" ]\n      testonly = true\n    }\n  }\n\n  template(\"test_app\") {\n    if (is_ios) {\n      ios_app_bundle(target_name) {\n        forward_variables_from(invoker,\n                               \"*\",\n                               [\n                                 \"output_name\",\n                                 \"visibility\",\n                                 \"is_shared_library\",\n                               ])\n        testonly = true\n        extra_configs = [ \":skia_private\" ]\n        launchscreen = \"platform_tools/ios/app/LaunchScreen.storyboard\"\n        data_sources = [ \"resources\" ]\n        if (\"True\" == exec_script(\"//gn/checkdir.py\",\n                                  [ rebase_path(\"skps\", root_build_dir) ],\n                                  \"trim string\")) {\n          data_sources += [ \"skps\" ]\n        }\n        if (\"True\" == exec_script(\"//gn/checkdir.py\",\n                                  [ rebase_path(\"mskps\", root_build_dir) ],\n                                  \"trim string\")) {\n          data_sources += [ \"mskps\" ]\n        }\n      }\n    } else {\n      # !is_ios\n\n      if (defined(invoker.is_shared_library) && invoker.is_shared_library) {\n        skia_shared_library(\"lib\" + target_name) {\n          output_dir = root_build_dir\n          forward_variables_from(invoker, \"*\", [ \"is_shared_library\" ])\n          if (!defined(configs)) {\n            configs = []\n          }\n          configs += [ \":skia_private\" ]\n          testonly = true\n        }\n      } else {\n        _executable = target_name\n        skia_executable(_executable) {\n          check_includes = false\n          output_dir = root_build_dir\n          forward_variables_from(invoker, \"*\", [ \"is_shared_library\" ])\n          if (!defined(configs)) {\n            configs = []\n          }\n          configs += [ \":skia_private\" ]\n          testonly = true\n        }\n      }\n      if (is_android && skia_android_serial != \"\" && defined(_executable)) {\n        action(\"push_\" + target_name) {\n          output_dir = root_build_dir\n          script = \"gn/push_to_android.py\"\n          deps = [ \":\" + _executable ]\n          _stamp = \"$target_gen_dir/$_executable.pushed_$skia_android_serial\"\n          outputs = [ _stamp ]\n          args = [\n            rebase_path(\"$root_build_dir/$_executable\"),\n            skia_android_serial,\n            rebase_path(_stamp),\n          ]\n          testonly = true\n        }\n      }\n    }\n  }\n\n  test_lib(\"load_dynamic_library\") {\n    configs = [ \":skia_private\" ]\n    deps = [ \":skia\" ]\n    sources = [ \"tools/library/LoadDynamicLibrary.h\" ]\n    if (is_win) {\n      sources += [ \"tools/library/LoadDynamicLibrary_win.cpp\" ]\n    } else {\n      sources += [ \"tools/library/LoadDynamicLibrary_posix.cpp\" ]\n    }\n  }\n\n  test_lib(\"gpu_tool_utils\") {\n    public_defines = []\n\n    # Bots and even devs may not have Vulkan headers, so put\n    # include/third_party/vulkan on our path so they're always available.\n    all_dependent_configs = [ \":use_skia_vulkan_headers\" ]\n\n    defines = []\n    if (skia_enable_discrete_gpu) {\n      defines += [ \"SK_ENABLE_DISCRETE_GPU\" ]\n    }\n\n    deps = [ \":load_dynamic_library\" ]\n    public_deps = []\n    sources = [\n      \"tools/gpu/BackendSurfaceFactory.cpp\",\n      \"tools/gpu/BackendSurfaceFactory.h\",\n      \"tools/gpu/BackendTextureImageFactory.cpp\",\n      \"tools/gpu/BackendTextureImageFactory.h\",\n      \"tools/gpu/ContextType.cpp\",\n      \"tools/gpu/ContextType.h\",\n      \"tools/gpu/FlushFinishTracker.cpp\",\n      \"tools/gpu/FlushFinishTracker.h\",\n      \"tools/gpu/GrContextFactory.cpp\",\n      \"tools/gpu/GrContextFactory.h\",\n      \"tools/gpu/GrTest.cpp\",\n      \"tools/gpu/ManagedBackendTexture.cpp\",\n      \"tools/gpu/ManagedBackendTexture.h\",\n      \"tools/gpu/MemoryCache.cpp\",\n      \"tools/gpu/MemoryCache.h\",\n      \"tools/gpu/ProtectedUtils.cpp\",\n      \"tools/gpu/ProtectedUtils.h\",\n      \"tools/gpu/ProxyUtils.cpp\",\n      \"tools/gpu/ProxyUtils.h\",\n      \"tools/gpu/TestCanvas.cpp\",\n      \"tools/gpu/TestCanvas.h\",\n      \"tools/gpu/TestContext.cpp\",\n      \"tools/gpu/TestOps.cpp\",\n      \"tools/gpu/TestOps.h\",\n      \"tools/gpu/YUVUtils.cpp\",\n      \"tools/gpu/YUVUtils.h\",\n      \"tools/gpu/mock/MockTestContext.cpp\",\n      \"tools/text/gpu/TextBlobTools.cpp\",\n    ]\n\n    libs = []\n    frameworks = []\n\n    if (skia_use_gl) {\n      sources += [ \"tools/gpu/gl/GLTestContext.cpp\" ]\n      if (is_ios) {\n        sources += [ \"tools/gpu/gl/iOS/CreatePlatformGLTestContext_iOS.mm\" ]\n        frameworks += [ \"OpenGLES.framework\" ]\n      } else if (is_mac) {\n        sources += [ \"tools/gpu/gl/mac/CreatePlatformGLTestContext_mac.cpp\" ]\n      }\n      if (skia_use_angle) {\n        deps += [ \"//third_party/angle2\" ]\n        sources += [ \"tools/gpu/gl/angle/GLTestContext_angle.cpp\" ]\n      }\n    }\n\n    if (skia_use_gl && target_cpu != \"wasm\") {\n      if (is_android || skia_use_egl) {\n        sources += [ \"tools/gpu/gl/egl/CreatePlatformGLTestContext_egl.cpp\" ]\n        libs += [ \"EGL\" ]\n      } else if (is_linux) {\n        sources += [ \"tools/gpu/gl/glx/CreatePlatformGLTestContext_glx.cpp\" ]\n        libs += [\n          \"GLU\",\n          \"GL\",\n          \"X11\",\n        ]\n      } else if (is_win) {\n        sources += [\n          \"tools/gpu/gl/win/CreatePlatformGLTestContext_win.cpp\",\n          \"tools/gpu/gl/win/SkWGL.h\",\n          \"tools/gpu/gl/win/SkWGL_win.cpp\",\n        ]\n        libs += [ \"Gdi32.lib\" ]\n        if (target_cpu != \"arm64\") {\n          libs += [ \"OpenGL32.lib\" ]\n        }\n      }\n    }\n\n    if (skia_use_vulkan) {\n      sources += [ \"tools/gpu/vk/VkTestContext.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestContext.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkTestHelper.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestHelper.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkTestMemoryAllocator.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestMemoryAllocator.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkTestUtils.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestUtils.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkYcbcrSamplerHelper.h\" ]\n      sources += [ \"tools/gpu/vk/VkYcbcrSamplerHelper.cpp\" ]\n      all_dependent_configs += [ \":vulkan_memory_allocator\" ]\n    }\n    if (skia_use_metal) {\n      sources += [ \"tools/gpu/mtl/MtlTestContext.mm\" ]\n    }\n    if (skia_use_direct3d) {\n      sources += [ \"tools/gpu/d3d/D3DTestContext.cpp\" ]\n      sources += [ \"tools/gpu/d3d/D3DTestUtils.cpp\" ]\n    }\n    if (skia_use_dawn) {\n      public_deps += [ \"//third_party/externals/dawn/include/dawn:headers\" ]\n      if (is_clang) {\n        cflags_cc = [ \"-Wno-microsoft-cast\" ]\n      }\n    }\n    if (!skia_enable_ganesh) {\n      sources -= [ \"tools/gpu/GrTest.cpp\" ]\n      sources -= [ \"tools/gpu/TestOps.cpp\" ]\n      sources -= [ \"tools/gpu/TestOps.h\" ]\n    } else {\n      sources += [\n        \"tools/gpu/ganesh/AtlasTextOpTools.cpp\",\n        \"tools/gpu/ganesh/AtlasTextOpTools.h\",\n        \"tools/gpu/ganesh/GrAtlasTools.cpp\",\n        \"tools/gpu/ganesh/GrAtlasTools.h\",\n      ]\n    }\n    if (skia_enable_graphite) {\n      sources += [\n        \"tools/graphite/ContextFactory.cpp\",\n        \"tools/graphite/ContextFactory.h\",\n        \"tools/graphite/GraphiteTestContext.cpp\",\n        \"tools/graphite/GraphiteTestContext.h\",\n        \"tools/graphite/GraphiteToolUtils.cpp\",\n        \"tools/graphite/GraphiteToolUtils.h\",\n        \"tools/graphite/ProtectedUtils_Graphite.cpp\",\n        \"tools/graphite/UniqueKeyUtils.cpp\",\n        \"tools/graphite/UniqueKeyUtils.h\",\n      ]\n      if (skia_use_dawn) {\n        sources += [\n          \"tools/graphite/dawn/GraphiteDawnTestContext.cpp\",\n          \"tools/graphite/dawn/GraphiteDawnTestContext.h\",\n        ]\n      }\n      if (skia_use_metal) {\n        sources += [\n          \"tools/graphite/mtl/GraphiteMtlTestContext.h\",\n          \"tools/graphite/mtl/GraphiteMtlTestContext.mm\",\n        ]\n      }\n      if (skia_use_vulkan) {\n        sources += [\n          \"tools/graphite/vk/GraphiteVulkanTestContext.cpp\",\n          \"tools/graphite/vk/GraphiteVulkanTestContext.h\",\n        ]\n      }\n    }\n\n    if (is_fuchsia && using_fuchsia_sdk) {\n      libs +=\n          [ \"${fuchsia_sdk_path}/arch/${target_cpu}/sysroot/lib/libzircon.so\" ]\n    }\n  }  # test_lib(\"gpu_tool_utils\")\n\n  test_lib(\"flags\") {\n    sources = [\n      \"tools/flags/CommandLineFlags.cpp\",\n      \"tools/flags/CommandLineFlags.h\",\n    ]\n  }\n\n  test_lib(\"common_flags_config\") {\n    sources = [\n      \"tools/flags/CommonFlags.h\",\n      \"tools/flags/CommonFlagsConfig.cpp\",\n      \"tools/flags/CommonFlagsConfig.h\",\n    ]\n    deps = [ \":flags\" ]\n    public_deps = [ \":gpu_tool_utils\" ]\n  }\n  test_lib(\"common_flags_gpu\") {\n    sources = [ \"tools/flags/CommonFlagsGanesh.cpp\" ]\n    deps = [ \":flags\" ]\n    public_deps = [ \":gpu_tool_utils\" ]\n  }\n  test_lib(\"common_flags_graphite\") {\n    sources = [ \"tools/flags/CommonFlagsGraphite.cpp\" ]\n    deps = [ \":flags\" ]\n    public_deps = [ \":gpu_tool_utils\" ]\n  }\n  test_lib(\"common_flags_images\") {\n    sources = [ \"tools/flags/CommonFlagsImages.cpp\" ]\n    deps = [ \":flags\" ]\n  }\n\n  test_lib(\"trace\") {\n    deps = [ \":flags\" ]\n    sources = [\n      \"tools/trace/ChromeTracingTracer.cpp\",\n      \"tools/trace/ChromeTracingTracer.h\",\n      \"tools/trace/EventTracingPriv.cpp\",\n      \"tools/trace/EventTracingPriv.h\",\n      \"tools/trace/SkDebugfTracer.cpp\",\n      \"tools/trace/SkDebugfTracer.h\",\n    ]\n    if (skia_use_perfetto) {\n      deps += [ \"//third_party/perfetto\" ]\n      sources += [\n        \"tools/trace/SkPerfettoTrace.cpp\",\n        \"tools/trace/SkPerfettoTrace.h\",\n      ]\n      defines = [ \"SK_USE_PERFETTO\" ]\n    }\n  }\n\n  test_lib(\"tool_utils\") {\n    sources = [\n      \"tools/AndroidSkDebugToStdOut.cpp\",\n      \"tools/AutoreleasePool.h\",\n      \"tools/DDLPromiseImageHelper.cpp\",\n      \"tools/DDLPromiseImageHelper.h\",\n      \"tools/DDLTileHelper.cpp\",\n      \"tools/DDLTileHelper.h\",\n      \"tools/DecodeUtils.cpp\",\n      \"tools/DecodeUtils.h\",\n      \"tools/EncodeUtils.cpp\",\n      \"tools/EncodeUtils.h\",\n      \"tools/GpuToolUtils.h\",\n      \"tools/LsanSuppressions.cpp\",\n      \"tools/ProcStats.cpp\",\n      \"tools/ProcStats.h\",\n      \"tools/Resources.cpp\",\n      \"tools/Resources.h\",\n      \"tools/RuntimeBlendUtils.cpp\",\n      \"tools/RuntimeBlendUtils.h\",\n      \"tools/SkMetaData.cpp\",\n      \"tools/SkMetaData.h\",\n      \"tools/Stats.h\",\n      \"tools/TestFontDataProvider.cpp\",\n      \"tools/TestFontDataProvider.h\",\n      \"tools/ToolUtils.cpp\",\n      \"tools/ToolUtils.h\",\n      \"tools/TsanSuppressions.cpp\",\n      \"tools/UrlDataManager.cpp\",\n      \"tools/UrlDataManager.h\",\n      \"tools/debugger/DebugCanvas.cpp\",\n      \"tools/debugger/DebugCanvas.h\",\n      \"tools/debugger/DebugLayerManager.cpp\",\n      \"tools/debugger/DebugLayerManager.h\",\n      \"tools/debugger/DrawCommand.cpp\",\n      \"tools/debugger/DrawCommand.h\",\n      \"tools/debugger/JsonWriteBuffer.cpp\",\n      \"tools/debugger/JsonWriteBuffer.h\",\n      \"tools/fonts/FontToolUtils.cpp\",\n      \"tools/fonts/FontToolUtils.h\",\n      \"tools/fonts/RandomScalerContext.cpp\",\n      \"tools/fonts/RandomScalerContext.h\",\n      \"tools/fonts/TestEmptyTypeface.h\",\n      \"tools/fonts/TestFontMgr.cpp\",\n      \"tools/fonts/TestFontMgr.h\",\n      \"tools/fonts/TestSVGTypeface.cpp\",\n      \"tools/fonts/TestSVGTypeface.h\",\n      \"tools/fonts/TestTypeface.cpp\",\n      \"tools/fonts/TestTypeface.h\",\n      \"tools/sksltrace/SkSLTraceUtils.cpp\",\n      \"tools/sksltrace/SkSLTraceUtils.h\",\n      \"tools/text/SkTextBlobTrace.cpp\",\n      \"tools/text/SkTextBlobTrace.h\",\n      \"tools/timer/TimeUtils.h\",\n      \"tools/timer/Timer.cpp\",\n      \"tools/timer/Timer.h\",\n    ]\n    if (skia_enable_svg) {\n      sources += [\n        \"tools/SvgPathExtractor.cpp\",\n        \"tools/SvgPathExtractor.h\",\n      ]\n    }\n    if (skia_use_libpng_decode) {\n      sources += [\n        \"tools/MSKPPlayer.cpp\",\n        \"tools/MSKPPlayer.h\",\n        \"tools/SkSharingProc.cpp\",\n        \"tools/SkSharingProc.h\",\n      ]\n    }\n\n    if (target_cpu != \"wasm\") {\n      sources += [ \"tools/CrashHandler.cpp\" ]\n    }\n    libs = []\n    frameworks = []\n    if (is_ios) {\n      sources += [ \"tools/ios_utils.m\" ]\n      sources += [ \"tools/ios_utils.h\" ]\n      sources += [ \"tools/AutoreleasePool.mm\" ]\n      frameworks += [ \"Foundation.framework\" ]\n    } else if (is_mac) {\n      sources += [ \"tools/AutoreleasePool.mm\" ]\n      frameworks += [ \"Foundation.framework\" ]\n    } else if (is_win && !skia_enable_winuwp) {\n      libs += [ \"DbgHelp.lib\" ]\n    }\n\n    defines = []\n    if (skia_tools_require_resources) {\n      defines += [ \"SK_TOOLS_REQUIRE_RESOURCES\" ]\n    }\n    deps = [ \":flags\" ]\n    if (skia_enable_svg) {\n      deps += [ \"modules/svg\" ]\n    }\n    public_deps = [\n      \":gpu_tool_utils\",\n      \"modules/jsonreader\",\n    ]\n  }\n\n  test_lib(\"etc1\") {\n    sources = [ \"third_party/etc1/etc1.cpp\" ]\n  }\n\n  import(\"gn/gm.gni\")\n  test_lib(\"gm\") {\n    sources = gm_sources\n    if (skia_use_gl) {\n      sources += gl_gm_sources\n    }\n    if (!skia_enable_ganesh) {\n      sources -= ganesh_gm_sources\n    }\n    if (skia_use_fontations) {\n      sources += fontations_gm_sources\n    }\n    deps = [\n      \":etc1\",\n      \":flags\",\n      \":skia\",\n      \":tool_utils\",\n      \"modules/skottie\",\n      \"modules/skottie:gm\",\n      \"modules/skparagraph\",\n      \"modules/skparagraph:gm\",\n      \"modules/skresources\",\n      \"modules/skshaper\",\n    ]\n    if (is_skia_dev_build) {\n      sources += [ \"gm/fiddle.cpp\" ]\n      deps += [ \":skia.h\" ]\n    }\n    public_deps = [ \":gpu_tool_utils\" ]\n\n    if (skia_use_ffmpeg) {\n      deps += [ \"experimental/ffmpeg:video_decoder\" ]\n      sources += [ \"gm/video_decoder.cpp\" ]\n    }\n  }\n\n  test_lib(\"test\") {\n    sources = [\n      \"tests/CtsEnforcement.cpp\",\n      \"tests/Test.cpp\",\n      \"tests/Test.h\",\n      \"tests/TestHarness.cpp\",\n      \"tests/TestHarness.h\",\n      \"tests/TestUtils.cpp\",\n      \"tests/TestUtils.h\",\n    ]\n    deps = [\n      \":flags\",\n      \":skia\",\n      \":tool_utils\",\n    ]\n    public_deps = [\n      \":gpu_tool_utils\",  # Test.h #includes headers from this target.\n    ]\n  }\n\n  import(\"gn/tests.gni\")\n  test_lib(\"tests\") {\n    sources = tests_sources + pathops_tests_sources\n    frameworks = []\n    if (skia_use_metal) {\n      sources += metal_tests_sources\n      cflags_objcc = [ \"-fobjc-arc\" ]\n      frameworks += [ \"MetalKit.framework\" ]\n    }\n    if (skia_use_jpeg_gainmaps) {\n      sources += jpeg_gainmap_tests_sources\n    }\n    if (skia_use_gl) {\n      sources += gl_tests_sources\n    }\n    if (skia_use_vulkan) {\n      sources += skia_gpu_vk_chromium_public\n      sources += skia_gpu_vk_chromium_private\n    }\n    if (skia_enable_graphite) {\n      sources += graphite_tests_sources\n      if (skia_use_dawn) {\n        sources += graphite_dawn_tests_sources\n      }\n      if (skia_use_metal) {\n        sources += graphite_metal_tests_sources\n      }\n      if (skia_use_vulkan) {\n        sources += graphite_vulkan_tests_sources\n      }\n    }\n    if (!skia_enable_ganesh) {\n      sources -= ganesh_tests_sources\n    }\n    if (skia_enable_precompile) {\n      sources += precompile_tests_sources\n    }\n    deps = [\n      \":flags\",\n      \":fontmgr_FontConfigInterface_tests\",\n      \":fontmgr_android_tests\",\n      \":fontmgr_fontconfig_tests\",\n      \":fontmgr_mac_ct_tests\",\n      \":fontscanner_tests\",\n      \":png_decode_rust_tests\",\n      \":png_encode_rust_tests\",\n      \":skia\",\n      \":test\",\n      \":tool_utils\",\n      \":typeface_fontations_tests\",\n      \"modules/bentleyottmann:tests\",\n      \"modules/skottie:tests\",\n      \"modules/skparagraph:tests\",\n      \"modules/sksg:tests\",\n      \"modules/skshaper\",\n      \"modules/skshaper:tests\",\n      \"modules/skunicode:tests\",\n      \"modules/svg:tests\",\n      \"//third_party/libpng\",\n      \"//third_party/libwebp\",\n      \"//third_party/zlib\",\n    ]\n  }\n\n  import(\"gn/bench.gni\")\n  test_lib(\"bench\") {\n    sources = bench_sources\n    if (skia_enable_graphite) {\n      sources += graphite_bench_sources\n    }\n    if (!skia_enable_ganesh) {\n      sources -= ganesh_bench_sources\n    }\n    deps = [\n      \":flags\",\n      \":gm\",\n      \":gpu_tool_utils\",\n      \":skia\",\n      \":tool_utils\",\n      \"modules/skparagraph:bench\",\n      \"modules/skshaper\",\n    ]\n  }\n\n  if (is_linux || is_mac || skia_enable_optimize_size) {\n    if (skia_enable_skottie) {\n      test_app(\"skottie_tool\") {\n        deps = [ \"modules/skottie:tool\" ]\n      }\n      test_app(\"skottie_tool_cpu\") {\n        deps = [ \"modules/skottie:tool_cpu\" ]\n      }\n      test_app(\"skottie_tool_gpu\") {\n        deps = [ \"modules/skottie:tool_gpu\" ]\n      }\n      test_app(\"skottie_preshape_tool\") {\n        deps = [ \"modules/skottie:preshape_tool\" ]\n      }\n    }\n    if (skia_enable_svg && skia_use_expat && defined(is_skia_standalone)) {\n      test_app(\"svg_tool\") {\n        deps = [ \"modules/svg:tool\" ]\n      }\n    }\n  }\n\n  test_lib(\"hash_and_encode\") {\n    sources = [\n      \"tools/HashAndEncode.cpp\",\n      \"tools/HashAndEncode.h\",\n    ]\n    deps = [\n      \":flags\",\n      \":skia\",\n      \"//third_party/libpng\",\n    ]\n  }\n  if (target_cpu != \"wasm\") {\n    test_app(\"convert-to-nia\") {\n      sources = [ \"tools/convert-to-nia.cpp\" ]\n      deps = [ \":skia\" ]\n    }\n    test_app(\"imgcvt\") {\n      sources = [ \"tools/imgcvt.cpp\" ]\n      configs = [ \":use_skia_vulkan_headers\" ]\n      deps = [\n        \":skia\",\n        \"modules/skcms\",\n      ]\n    }\n    test_app(\"dm\") {\n      sources = [\n        \"dm/DM.cpp\",\n        \"dm/DMGpuTestProcs.cpp\",\n        \"dm/DMJsonWriter.cpp\",\n        \"dm/DMJsonWriter.h\",\n        \"dm/DMSrcSink.cpp\",\n        \"dm/DMSrcSink.h\",\n      ]\n      deps = [\n        \":common_flags_config\",\n        \":common_flags_gpu\",\n        \":common_flags_graphite\",\n        \":common_flags_images\",\n        \":compile_all_sksl_tests\",\n        \":flags\",\n        \":gm\",\n        \":gpu_tool_utils\",\n        \":hash_and_encode\",\n        \":skia\",\n        \":tests\",\n        \":tool_utils\",\n        \":trace\",\n        \"modules/skottie\",\n        \"modules/skottie:utils\",\n        \"modules/skshaper\",\n        \"modules/skunicode\",\n      ]\n      if (skia_use_libpng_decode) {\n        deps += [ \"modules/svg\" ]\n      }\n    }\n    test_app(\"filterfuzz\") {\n      sources = [ \"experimental/filterfuzz/filterfuzz.cpp\" ]\n      deps = [\n        \":flags\",\n        \":skia\",\n        \":tool_utils\",\n      ]\n    }\n\n    if (!skia_enable_optimize_size && !skia_use_fontations &&\n        !skia_enable_vello_shaders) {\n      # optional separate library to dlopen when running CanvasStateTests.\n      skia_shared_library(\"canvas_state_lib\") {\n        sources = [\n          \"tests/CanvasStateHelpers.cpp\",\n          \"tests/CanvasStateHelpers.h\",\n        ]\n        deps = [ \":skia\" ]\n      }\n    }\n  }\n\n  if (!is_win) {\n    test_app(\"blob_cache_sim\") {\n      sources = [ \"tools/blob_cache_sim.cpp\" ]\n      deps = [\n        \":skia\",\n        \":tool_utils\",\n      ]\n    }\n  }\n\n  if (skia_use_libpng_decode) {\n    test_app(\"nanobench\") {\n      sources = [\n        \"bench/nanobench.cpp\",\n        \"bench/nanobench.h\",\n      ]\n      deps = [\n        \":bench\",\n        \":common_flags_config\",\n        \":common_flags_gpu\",\n        \":common_flags_graphite\",\n        \":common_flags_images\",\n        \":flags\",\n        \":gm\",\n        \":gpu_tool_utils\",\n        \":skia\",\n        \":tool_utils\",\n        \":trace\",\n        \"modules/skparagraph\",\n        \"modules/skshaper\",\n        \"modules/skunicode\",\n        \"modules/svg\",\n      ]\n    }\n  }\n\n  test_app(\"skpinfo\") {\n    sources = [ \"tools/skpinfo.cpp\" ]\n    configs = [ \":use_skia_vulkan_headers\" ]\n    deps = [\n      \":flags\",\n      \":skia\",\n    ]\n  }\n\n  if (skia_use_ffmpeg) {\n    test_app(\"skottie2movie\") {\n      sources = [ \"tools/skottie2movie.cpp\" ]\n      deps = [\n        \":flags\",\n        \":gpu_tool_utils\",\n        \":skia\",\n        \"experimental/ffmpeg:video_encoder\",\n        \"modules/skottie\",\n        \"modules/skottie:utils\",\n      ]\n    }\n  }\n\n  if (skia_use_libpng_decode) {\n    test_app(\"skpbench\") {\n      sources = [\n        \"bench/BigPath.cpp\",\n        \"tools/skpbench/skpbench.cpp\",\n      ]\n      deps = [\n        \":common_flags_config\",\n        \":common_flags_gpu\",\n        \":flags\",\n        \":gpu_tool_utils\",\n        \":skia\",\n        \":tool_utils\",\n      ]\n    }\n  }\n\n  if (is_linux && skia_use_icu) {\n    test_app(\"sktexttopdf\") {\n      sources = [ \"tools/using_skia_and_harfbuzz.cpp\" ]\n      deps = [\n        \":skia\",\n        \"modules/skshaper\",\n      ]\n    }\n  }\n\n  if (is_linux || is_mac) {\n    test_app(\"create_test_font\") {\n      sources = [ \"tools/fonts/create_test_font.cpp\" ]\n      deps = [ \":skia\" ]\n      assert_no_deps = [\n        # tool_utils requires the output of this app.\n        \":tool_utils\",\n      ]\n    }\n  }\n\n  if (skia_use_expat) {\n    test_app(\"create_test_font_color\") {\n      sources = [ \"tools/fonts/create_test_font_color.cpp\" ]\n      deps = [\n        \":flags\",\n        \":skia\",\n        \":tool_utils\",\n        \"//modules/svg\",\n      ]\n    }\n  }\n\n  test_app(\"get_images_from_skps\") {\n    sources = [ \"tools/get_images_from_skps.cpp\" ]\n    deps = [\n      \":flags\",\n      \":skia\",\n    ]\n  }\n\n  test_app(\"fuzz\") {\n    sources = [\n      \"fuzz/Fuzz.cpp\",\n      \"fuzz/Fuzz.h\",\n      \"fuzz/FuzzCanvas.cpp\",\n      \"fuzz/FuzzCommon.cpp\",\n      \"fuzz/FuzzCommon.h\",\n      \"fuzz/FuzzCreateDDL.cpp\",\n      \"fuzz/FuzzCubicRoots.cpp\",\n      \"fuzz/FuzzDDLThreading.cpp\",\n      \"fuzz/FuzzDrawFunctions.cpp\",\n      \"fuzz/FuzzEncoders.cpp\",\n      \"fuzz/FuzzGradients.cpp\",\n      \"fuzz/FuzzMain.cpp\",\n      \"fuzz/FuzzParsePath.cpp\",\n      \"fuzz/FuzzPathMeasure.cpp\",\n      \"fuzz/FuzzPathop.cpp\",\n      \"fuzz/FuzzPolyUtils.cpp\",\n      \"fuzz/FuzzQuadRoots.cpp\",\n      \"fuzz/FuzzRegionOp.cpp\",\n      \"fuzz/FuzzSkParagraph.cpp\",\n      \"fuzz/FuzzTriangulation.cpp\",\n      \"fuzz/oss_fuzz/FuzzAndroidCodec.cpp\",\n      \"fuzz/oss_fuzz/FuzzAnimatedImage.cpp\",\n      \"fuzz/oss_fuzz/FuzzCOLRv1.cpp\",\n      \"fuzz/oss_fuzz/FuzzColorspace.cpp\",\n      \"fuzz/oss_fuzz/FuzzImage.cpp\",\n      \"fuzz/oss_fuzz/FuzzImageFilterDeserialize.cpp\",\n      \"fuzz/oss_fuzz/FuzzIncrementalImage.cpp\",\n      \"fuzz/oss_fuzz/FuzzJSON.cpp\",\n      \"fuzz/oss_fuzz/FuzzParsePath.cpp\",\n      \"fuzz/oss_fuzz/FuzzPathDeserialize.cpp\",\n      \"fuzz/oss_fuzz/FuzzRegionDeserialize.cpp\",\n      \"fuzz/oss_fuzz/FuzzRegionSetPath.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKP.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKSL2GLSL.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKSL2Metal.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKSL2Pipeline.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKSL2SPIRV.cpp\",\n      \"fuzz/oss_fuzz/FuzzSKSL2WGSL.cpp\",\n      \"fuzz/oss_fuzz/FuzzSVG.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkDescriptorDeserialize.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkMeshSpecification.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkParagraph.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkRuntimeBlender.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkRuntimeColorFilter.cpp\",\n      \"fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp\",\n      \"fuzz/oss_fuzz/FuzzTextBlobDeserialize.cpp\",\n      \"tools/UrlDataManager.cpp\",\n      \"tools/debugger/DebugCanvas.cpp\",\n      \"tools/debugger/DebugLayerManager.cpp\",\n      \"tools/debugger/DrawCommand.cpp\",\n      \"tools/debugger/JsonWriteBuffer.cpp\",\n      \"tools/fonts/FontToolUtils.cpp\",\n    ]\n\n    if (skia_enable_graphite && skia_enable_precompile) {\n      sources += [ \"fuzz/FuzzPrecompile.cpp\" ]\n    }\n    deps = [\n      \":flags\",\n      \":gpu_tool_utils\",\n      \":skia\",\n      \"modules/jsonreader\",\n      \"modules/skottie:fuzz\",\n      \"modules/skparagraph\",\n      \"modules/svg\",\n    ]\n  }\n\n  test_app(\"dump_record\") {\n    sources = [ \"tools/dump_record.cpp\" ]\n    deps = [\n      \":flags\",\n      \":skia\",\n    ]\n  }\n\n  if (skia_use_libpng_decode) {\n    test_app(\"skdiff\") {\n      sources = [\n        \"tools/skdiff/skdiff.cpp\",\n        \"tools/skdiff/skdiff_html.cpp\",\n        \"tools/skdiff/skdiff_main.cpp\",\n        \"tools/skdiff/skdiff_utils.cpp\",\n      ]\n      deps = [ \":skia\" ]\n    }\n\n    test_app(\"skp_parser\") {\n      sources = [ \"tools/skp_parser.cpp\" ]\n      deps = [\n        \":skia\",\n        \":tool_utils\",\n      ]\n    }\n  }\n\n  if (!is_win) {\n    source_set(\"skqp_lib\") {  # Not a skia_source_set\n      check_includes = false\n      testonly = true\n      public_configs = [ \":skia_private\" ]\n      sources = [\n        \"tools/skqp/src/skqp.cpp\",\n        \"tools/skqp/src/skqp.h\",\n        \"tools/skqp/src/skqp_GpuTestProcs.cpp\",\n      ]\n      deps = [\n        \":gm\",\n        \":skia\",\n        \":tests\",\n        \":tool_utils\",\n      ]\n    }\n    if (skia_use_libpng_decode) {\n      test_app(\"skqp\") {\n        sources = [ \"tools/skqp/src/skqp_main.cpp\" ]\n        include_dirs = [ \"//\" ]\n        lib_dirs = []\n        deps = [ \":skqp_lib\" ]\n      }\n    }\n  }\n  if (is_fuchsia) {\n    # Build a package repository for skqp on Fuchsia.\n    group(\"skqp_repo\") {\n      testonly = true\n      deps = [ \"//build/fuchsia/skqp:skqp_repo\" ]\n    }\n  }\n  if (is_android) {\n    shared_library(\"libskqp_jni\") {  # Not a skia_shared_library\n      configs += [ \":skia_private\" ]\n      testonly = true\n      sources = [ \"tools/skqp/src/jni_skqp.cpp\" ]\n      deps = [\n        \":skia\",\n        \":skqp_lib\",\n        \":tool_utils\",\n      ]\n      libs = [ \"android\" ]\n    }\n  }\n  if (is_android && skia_use_gl) {\n    test_app(\"skottie_android\") {\n      is_shared_library = true\n\n      sources = [ \"platform_tools/android/apps/skottie/skottielib/src/main/cpp/native-lib.cpp\" ]\n      libs = []\n\n      deps = [\n        \":skia\",\n        \"modules/skottie\",\n        \"modules/skshaper\",\n        \"modules/skunicode\",\n      ]\n    }\n\n    test_app(\"jetski\") {\n      is_shared_library = true\n\n      sources = [\n        \"modules/jetski/src/Canvas.cpp\",\n        \"modules/jetski/src/ColorFilters.cpp\",\n        \"modules/jetski/src/Gradients.cpp\",\n        \"modules/jetski/src/Image.cpp\",\n        \"modules/jetski/src/ImageFilter.cpp\",\n        \"modules/jetski/src/JetSki.cpp\",\n        \"modules/jetski/src/Matrix.cpp\",\n        \"modules/jetski/src/Paint.cpp\",\n        \"modules/jetski/src/Path.cpp\",\n        \"modules/jetski/src/PathBuilder.cpp\",\n        \"modules/jetski/src/RuntimeShaderBuilder.cpp\",\n        \"modules/jetski/src/Shader.cpp\",\n        \"modules/jetski/src/SkottieAnimation.cpp\",\n        \"modules/jetski/src/Surface.cpp\",\n        \"modules/jetski/src/Surface.h\",\n        \"modules/jetski/src/SurfaceThread.cpp\",\n        \"modules/jetski/src/SurfaceThread.h\",\n        \"modules/jetski/src/Utils.cpp\",\n      ]\n      libs = [\n        \"android\",\n        \"jnigraphics\",\n      ]\n\n      deps = [\n        \":skia\",\n        \"modules/skottie:skottie\",\n        \"tools/window:window\",\n      ]\n    }\n  }\n\n  if (is_ios && skia_enable_skottie) {\n    group(\"skottie_ios\") {\n      deps = [ \"tools/skottie_ios_app\" ]\n    }\n  }\n\n  test_lib(\"sk_app\") {\n    public_deps = [\n      \":gpu_tool_utils\",\n      \":skia\",\n    ]\n    sources = [\n      \"tools/sk_app/Application.h\",\n      \"tools/sk_app/CommandSet.cpp\",\n      \"tools/sk_app/CommandSet.h\",\n      \"tools/sk_app/Window.cpp\",\n      \"tools/sk_app/Window.h\",\n    ]\n    libs = []\n    frameworks = []\n\n    if (is_android) {\n      sources += [\n        \"tools/sk_app/android/Window_android.cpp\",\n        \"tools/sk_app/android/Window_android.h\",\n        \"tools/sk_app/android/main_android.cpp\",\n        \"tools/sk_app/android/surface_glue_android.cpp\",\n        \"tools/sk_app/android/surface_glue_android.h\",\n      ]\n      libs += [ \"android\" ]\n    } else if (is_linux) {\n      sources += [\n        \"tools/sk_app/unix/Window_unix.cpp\",\n        \"tools/sk_app/unix/Window_unix.h\",\n        \"tools/sk_app/unix/keysym2ucs.c\",\n        \"tools/sk_app/unix/keysym2ucs.h\",\n        \"tools/sk_app/unix/main_unix.cpp\",\n      ]\n      libs += [\n        \"GL\",  # Used by raster window context, so cannot be behind skia_use_gl.\n        \"X11\",\n      ]\n    } else if (is_win) {\n      sources += [\n        \"tools/sk_app/win/Window_win.cpp\",\n        \"tools/sk_app/win/Window_win.h\",\n        \"tools/sk_app/win/main_win.cpp\",\n      ]\n    } else if (is_mac) {\n      sources += [\n        \"tools/sk_app/mac/Window_mac.h\",\n        \"tools/sk_app/mac/Window_mac.mm\",\n        \"tools/sk_app/mac/main_mac.mm\",\n      ]\n      frameworks += [\n        \"QuartzCore.framework\",\n        \"Cocoa.framework\",\n        \"Foundation.framework\",\n      ]\n    } else if (is_ios) {\n      sources += [\n        \"tools/sk_app/ios/Window_ios.h\",\n        \"tools/sk_app/ios/Window_ios.mm\",\n        \"tools/sk_app/ios/main_ios.mm\",\n      ]\n      frameworks += [ \"QuartzCore.framework\" ]\n    }\n\n    deps = [\n      \":tool_utils\",\n      \"tools/window\",\n    ]\n    if (is_android) {\n      deps += [ \"//third_party/native_app_glue\" ]\n    }\n    if (skia_use_gl && skia_use_angle) {\n      deps += [ \"//third_party/angle2\" ]\n    }\n  }\n\n  if (!skia_use_vulkan && (is_mac || is_linux || is_win)) {\n    test_app(\"fiddle_examples\") {\n      sources = [\n        \"tools/fiddle/all_examples.cpp\",\n        \"tools/fiddle/examples.cpp\",\n        \"tools/fiddle/examples.h\",\n      ]\n      if (is_win) {\n        cflags = [\n          \"/wd4756\",  # Overflow in constant arithmetic\n          \"/wd4305\",  # truncation from 'double' to 'float'\n        ]\n      }\n      deps = [\n        \":skia\",\n        \":skia.h\",\n        \"modules/skottie\",\n        \"modules/skparagraph\",\n        \"modules/skshaper\",\n        \"modules/svg\",\n      ]\n    }\n  }\n\n  # sk_app can work without GL but viewer always runs raster through a GL window context.\n  if (skia_use_gl) {\n    test_app(\"viewer\") {\n      is_shared_library = is_android\n      sources = [\n        \"tools/viewer/3DSlide.cpp\",\n        \"tools/viewer/AndroidShadowsSlide.cpp\",\n        \"tools/viewer/AnimBlurSlide.cpp\",\n        \"tools/viewer/AnimTimer.h\",\n        \"tools/viewer/AnimatedImageSlide.cpp\",\n        \"tools/viewer/AnimatedImageSlide.h\",\n        \"tools/viewer/AnimatedRectsSlide.cpp\",\n        \"tools/viewer/AnimatedTextSlide.cpp\",\n        \"tools/viewer/ArcSlide.cpp\",\n        \"tools/viewer/AtlasSlide.cpp\",\n        \"tools/viewer/AudioSlide.cpp\",\n        \"tools/viewer/BisectSlide.cpp\",\n        \"tools/viewer/BisectSlide.h\",\n        \"tools/viewer/CameraSlide.cpp\",\n        \"tools/viewer/ChartSlide.cpp\",\n        \"tools/viewer/ChineseFlingSlide.cpp\",\n        \"tools/viewer/ClickHandlerSlide.cpp\",\n        \"tools/viewer/ClickHandlerSlide.h\",\n        \"tools/viewer/ClipSlide.cpp\",\n        \"tools/viewer/ClockSlide.cpp\",\n        \"tools/viewer/CowboySlide.cpp\",\n        \"tools/viewer/DegenerateQuadsSlide.cpp\",\n        \"tools/viewer/DegenerateTwoPtRadialsSlide.cpp\",\n        \"tools/viewer/FatBitsSlide.cpp\",\n        \"tools/viewer/FilterBoundsSlide.cpp\",\n        \"tools/viewer/FitCubicToCircleSlide.cpp\",\n        \"tools/viewer/FlutterAnimateSlide.cpp\",\n        \"tools/viewer/GMSlide.cpp\",\n        \"tools/viewer/GMSlide.h\",\n        \"tools/viewer/GlyphTransformSlide.cpp\",\n        \"tools/viewer/GradientsSlide.cpp\",\n        \"tools/viewer/GraphitePrimitivesSlide.cpp\",\n        \"tools/viewer/ImGuiLayer.cpp\",\n        \"tools/viewer/ImGuiLayer.h\",\n        \"tools/viewer/ImageFilterDAGSlide.cpp\",\n        \"tools/viewer/ImageSlide.cpp\",\n        \"tools/viewer/ImageSlide.h\",\n        \"tools/viewer/LayersSlide.cpp\",\n        \"tools/viewer/ManyRectsSlide.cpp\",\n        \"tools/viewer/MaterialShadowsSlide.cpp\",\n        \"tools/viewer/MegaStrokeSlide.cpp\",\n        \"tools/viewer/MeshGradientSlide.cpp\",\n        \"tools/viewer/MeshSlide.cpp\",\n        \"tools/viewer/MixerSlide.cpp\",\n        \"tools/viewer/MotionMarkSlide.cpp\",\n        \"tools/viewer/PatchSlide.cpp\",\n        \"tools/viewer/PathClipSlide.cpp\",\n        \"tools/viewer/PathEffectsSlide.cpp\",\n        \"tools/viewer/PathLerpSlide.cpp\",\n        \"tools/viewer/PathOverstrokeSlide.cpp\",\n        \"tools/viewer/PathSlide.cpp\",\n        \"tools/viewer/PathTessellatorsSlide.cpp\",\n        \"tools/viewer/PathTextSlide.cpp\",\n        \"tools/viewer/ProtectedSlide.cpp\",\n        \"tools/viewer/QuadStrokerSlide.cpp\",\n        \"tools/viewer/RectanizerSlide.cpp\",\n        \"tools/viewer/RepeatTileSlide.cpp\",\n        \"tools/viewer/SBIXSlide.cpp\",\n        \"tools/viewer/SGSlide.cpp\",\n        \"tools/viewer/SKPSlide.cpp\",\n        \"tools/viewer/SKPSlide.h\",\n        \"tools/viewer/SVGFileSlide.cpp\",\n        \"tools/viewer/ShadowColorSlide.cpp\",\n        \"tools/viewer/ShadowReferenceSlide.cpp\",\n        \"tools/viewer/ShadowUtilsSlide.cpp\",\n        \"tools/viewer/ShipSlide.cpp\",\n        \"tools/viewer/SimpleStrokerSlide.cpp\",\n        \"tools/viewer/SkSLDebuggerSlide.cpp\",\n        \"tools/viewer/SkSLDebuggerSlide.h\",\n        \"tools/viewer/SkSLSlide.cpp\",\n        \"tools/viewer/SkSLSlide.h\",\n        \"tools/viewer/SkottieSlide.cpp\",\n        \"tools/viewer/SkottieSlide.h\",\n        \"tools/viewer/Slide.h\",\n        \"tools/viewer/SlideDir.cpp\",\n        \"tools/viewer/SlideDir.h\",\n        \"tools/viewer/SlidesSlide.cpp\",\n        \"tools/viewer/StatsLayer.cpp\",\n        \"tools/viewer/StatsLayer.h\",\n        \"tools/viewer/StringArtSlide.cpp\",\n        \"tools/viewer/StrokeVerbSlide.cpp\",\n        \"tools/viewer/SvgSlide.cpp\",\n        \"tools/viewer/SvgSlide.h\",\n        \"tools/viewer/TextBoxSlide.cpp\",\n        \"tools/viewer/TextureUploadSlide.cpp\",\n        \"tools/viewer/ThinAASlide.cpp\",\n        \"tools/viewer/TimingSlide.cpp\",\n        \"tools/viewer/TouchGesture.cpp\",\n        \"tools/viewer/TouchGesture.h\",\n        \"tools/viewer/TypefaceSlide.cpp\",\n        \"tools/viewer/VariableWidthStrokerSlide.cpp\",\n        \"tools/viewer/Viewer.cpp\",\n        \"tools/viewer/Viewer.h\",\n        \"tools/viewer/XferSlide.cpp\",\n      ]\n      libs = []\n\n      deps = [\n        \":common_flags_config\",\n        \":common_flags_gpu\",\n        \":common_flags_graphite\",\n        \":flags\",\n        \":gm\",\n        \":gpu_tool_utils\",\n        \":sk_app\",\n        \":skia\",\n        \":tool_utils\",\n        \":trace\",\n        \":xml\",\n        \"modules/audioplayer\",\n        \"modules/skottie\",\n        \"modules/skottie:utils\",\n        \"modules/skparagraph:slides\",\n        \"modules/skresources\",\n        \"modules/sksg:slides\",\n        \"modules/skshaper:skshaper\",\n        \"modules/skunicode\",\n        \"//third_party/delaunator\",\n        \"//third_party/imgui\",\n      ]\n      if (skia_use_libpng_decode) {\n        deps += [ \"modules/svg\" ]\n\n        sources += [\n          \"tools/viewer/MSKPSlide.cpp\",\n          \"tools/viewer/MSKPSlide.h\",\n        ]\n      }\n      if (skia_use_vulkan) {\n        deps += [\n          \"//third_party/externals/spirv-tools:spvtools\",\n\n          #spvtools depends on this but doesn't deps it in.\n          \"//third_party/externals/spirv-tools:spvtools_val\",\n        ]\n      }\n    }\n  }\n\n  if (skia_use_vulkan) {\n    test_app(\"VulkanBasic\") {\n      # Bots and even devs may not have Vulkan headers, so put\n      # include/third_party/vulkan on our path so they're always available.\n      all_dependent_configs = [\n        \":use_skia_vulkan_headers\",\n        \":vulkan_memory_allocator\",\n      ]\n\n      sources = [ \"example/VulkanBasic.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkTestMemoryAllocator.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestMemoryAllocator.cpp\" ]\n      sources += [ \"tools/gpu/vk/VkTestUtils.h\" ]\n      sources += [ \"tools/gpu/vk/VkTestUtils.cpp\" ]\n      deps = [\n        \":load_dynamic_library\",\n        \":skia\",\n      ]\n    }\n  }\n\n  if (is_ios && skia_use_metal && skia_enable_ganesh) {\n    group(\"minimal_ios_mtl_skia_app\") {\n      deps = [ \"experimental/minimal_ios_mtl_skia_app\" ]\n    }\n  }\n\n  if (is_linux || is_win || is_mac) {\n    test_app(\"editor\") {\n      is_shared_library = is_android\n      deps = [ \"modules/skplaintexteditor:editor_app\" ]\n    }\n  }\n\n  skia_executable(\"image_diff_metric\") {\n    sources = [ \"tools/image_diff_metric.cpp\" ]\n    deps = [ \":skia\" ]\n  }\n\n  group(\"modules_testonly\") {\n    testonly = true\n    deps = []\n    if (is_wasm) {\n      deps += [ \"modules/canvaskit:viewer_wasm\" ]\n    }\n  }\n\n  if (skia_build_fuzzers) {\n    template(\"libfuzzer_app\") {\n      skia_executable(target_name) {\n        output_dir = root_build_dir\n        check_includes = false\n        forward_variables_from(invoker, \"*\", [ \"is_shared_library\" ])\n        if (!defined(configs)) {\n          configs = []\n        }\n        configs += [ \":skia_private\" ]\n        sources += [\n          \"fuzz/Fuzz.cpp\",\n          \"fuzz/FuzzCommon.cpp\",\n        ]\n        deps += [\n          \":flags\",\n          \":gpu_tool_utils\",\n          \":skia\",\n          \":tool_utils\",\n        ]\n        defines = [\n          \"SK_BUILD_FOR_LIBFUZZER\",\n          \"SK_BUILD_FOR_FUZZER\",\n        ]\n        if (skia_use_libfuzzer_defaults) {\n          cflags = [ \"-fsanitize=fuzzer\" ]\n          ldflags = [ \"-fsanitize=fuzzer\" ]\n        }\n        testonly = true\n      }\n    }\n\n    libfuzzer_app(\"region_deserialize\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzRegionDeserialize.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"image_filter_deserialize\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzImageFilterDeserialize.cpp\" ]\n      deps = [ \"modules/svg\" ]\n    }\n\n    libfuzzer_app(\"region_set_path\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzRegionSetPath.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"textblob_deserialize\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzTextBlobDeserialize.cpp\" ]\n      deps = [ \"modules/svg\" ]\n    }\n\n    libfuzzer_app(\"path_deserialize\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzPathDeserialize.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"image_decode\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzImage.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"animated_image_decode\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzAnimatedImage.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_create_ddl\") {\n      sources = [\n        \"fuzz/FuzzCreateDDL.cpp\",\n        \"fuzz/oss_fuzz/FuzzAPICreateDDL.cpp\",\n      ]\n      deps = [\n        \"modules/svg\",\n        \"//third_party/libpng\",\n      ]\n    }\n\n    libfuzzer_app(\"api_draw_functions\") {\n      sources = [\n        \"fuzz/FuzzDrawFunctions.cpp\",\n        \"fuzz/oss_fuzz/FuzzDrawFunctions.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_ddl_threading\") {\n      sources = [\n        \"fuzz/FuzzDDLThreading.cpp\",\n        \"fuzz/oss_fuzz/FuzzDDLThreading.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_gradients\") {\n      sources = [\n        \"fuzz/FuzzGradients.cpp\",\n        \"fuzz/oss_fuzz/FuzzGradients.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_image_filter\") {\n      sources = [\n        \"fuzz/FuzzCanvas.cpp\",\n        \"fuzz/oss_fuzz/FuzzAPIImageFilter.cpp\",\n      ]\n      deps = [ \"//third_party/libpng\" ]\n    }\n\n    libfuzzer_app(\"api_path_measure\") {\n      sources = [\n        \"fuzz/FuzzPathMeasure.cpp\",\n        \"fuzz/oss_fuzz/FuzzPathMeasure.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_pathop\") {\n      sources = [\n        \"fuzz/FuzzPathop.cpp\",\n        \"fuzz/oss_fuzz/FuzzPathop.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_triangulation\") {\n      sources = [\n        \"fuzz/FuzzTriangulation.cpp\",\n        \"fuzz/oss_fuzz/FuzzTriangulation.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"api_raster_n32_canvas\") {\n      sources = [\n        \"fuzz/FuzzCanvas.cpp\",\n        \"fuzz/oss_fuzz/FuzzRasterN32Canvas.cpp\",\n      ]\n      deps = [\n        \"modules/svg\",\n        \"//third_party/libpng\",\n      ]\n    }\n\n    libfuzzer_app(\"api_regionop\") {\n      sources = [\n        \"fuzz/FuzzRegionOp.cpp\",\n        \"fuzz/oss_fuzz/FuzzRegionOp.cpp\",\n      ]\n      deps = []\n    }\n\n    if (skia_enable_ganesh) {\n      libfuzzer_app(\"api_mock_gpu_canvas\") {\n        sources = [\n          \"fuzz/FuzzCanvas.cpp\",\n          \"fuzz/oss_fuzz/FuzzMockGPUCanvas.cpp\",\n        ]\n        deps = [\n          \"modules/svg\",\n          \"//third_party/libpng\",\n        ]\n      }\n    }\n\n    if (skia_enable_graphite && skia_enable_precompile) {\n      libfuzzer_app(\"api_precompile\") {\n        sources = [\n          \"fuzz/FuzzPrecompile.cpp\",\n          \"fuzz/oss_fuzz/FuzzPrecompile.cpp\",\n        ]\n        deps = []\n      }\n    }\n\n    libfuzzer_app(\"api_null_canvas\") {\n      sources = [\n        \"fuzz/FuzzCanvas.cpp\",\n        \"fuzz/oss_fuzz/FuzzNullCanvas.cpp\",\n      ]\n      deps = [\n        \"modules/svg\",\n        \"//third_party/libpng\",\n      ]\n    }\n\n    libfuzzer_app(\"api_skparagraph\") {\n      sources = [\n        \"fuzz/FuzzSkParagraph.cpp\",\n        \"fuzz/oss_fuzz/FuzzSkParagraph.cpp\",\n      ]\n      deps = [ \"modules/skparagraph\" ]\n    }\n\n    libfuzzer_app(\"api_svg_canvas\") {\n      sources = [\n        \"fuzz/FuzzCanvas.cpp\",\n        \"fuzz/oss_fuzz/FuzzAPISVGCanvas.cpp\",\n      ]\n      deps = [\n        \"modules/svg\",\n        \"//third_party/libpng\",\n      ]\n    }\n\n    libfuzzer_app(\"png_encoder\") {\n      sources = [\n        \"fuzz/FuzzEncoders.cpp\",\n        \"fuzz/oss_fuzz/FuzzPNGEncoder.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"jpeg_encoder\") {\n      sources = [\n        \"fuzz/FuzzEncoders.cpp\",\n        \"fuzz/oss_fuzz/FuzzJPEGEncoder.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"webp_encoder\") {\n      sources = [\n        \"fuzz/FuzzEncoders.cpp\",\n        \"fuzz/oss_fuzz/FuzzWEBPEncoder.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skottie_json\") {\n      sources = [ \"modules/skottie/fuzz/FuzzSkottieJSON.cpp\" ]\n      deps = [\n        \"modules/jsonreader\",\n        \"modules/skottie:skottie\",\n        \"modules/svg\",\n      ]\n    }\n\n    libfuzzer_app(\"skjson\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzJSON.cpp\" ]\n      deps = [ \"modules/jsonreader\" ]\n    }\n\n    libfuzzer_app(\"api_polyutils\") {\n      sources = [\n        \"fuzz/FuzzPolyUtils.cpp\",\n        \"fuzz/oss_fuzz/FuzzPolyUtils.cpp\",\n      ]\n      deps = [ \":skia\" ]\n    }\n\n    libfuzzer_app(\"android_codec\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzAndroidCodec.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"image_decode_incremental\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzIncrementalImage.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"sksl2glsl\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKSL2GLSL.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"sksl2metal\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKSL2Metal.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"sksl2pipeline\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKSL2Pipeline.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"sksl2spirv\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKSL2SPIRV.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"sksl2wgsl\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKSL2WGSL.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skdescriptor_deserialize\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSkDescriptorDeserialize.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"svg_dom\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSVG.cpp\" ]\n      deps = [ \"modules/svg\" ]\n    }\n\n    libfuzzer_app(\"skruntimeblender\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSkRuntimeBlender.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skruntimecolorfilter\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSkRuntimeColorFilter.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skruntimeeffect\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skmeshspecification\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSkMeshSpecification.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skp\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzSKP.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"colrv1\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzCOLRv1.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"quad_roots\") {\n      sources = [\n        \"fuzz/FuzzQuadRoots.cpp\",\n        \"fuzz/oss_fuzz/FuzzQuadRoots.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"cubic_roots\") {\n      sources = [\n        \"fuzz/FuzzCubicRoots.cpp\",\n        \"fuzz/oss_fuzz/FuzzCubicRoots.cpp\",\n      ]\n      deps = []\n    }\n\n    libfuzzer_app(\"skcolorspace\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzColorspace.cpp\" ]\n      deps = []\n    }\n\n    libfuzzer_app(\"parse_path\") {\n      sources = [ \"fuzz/oss_fuzz/FuzzParsePath.cpp\" ]\n      deps = []\n    }\n  }\n}\n\nif (skia_build_rust_targets) {\n  action(\"rust_hello_world\") {\n    script = \"gn/bazel_build.py\"\n    sources = [ \"experimental/rust_cxx/hello-world.rs\" ]\n    outputs = [ \"$root_out_dir/rust_hello_world\" ]\n    args = [\n      \"//experimental/rust_cxx:rust_hello_world\",\n      \"../../bazel-bin/experimental/rust_cxx/rust_hello_world\",\n    ]\n  }\n\n  action(\"cpp_with_rust\") {\n    script = \"gn/bazel_build.py\"\n    sources = [\n      \"experimental/rust_cxx/hype-bridge.rs\",\n      \"experimental/rust_cxx/main.cpp\",\n    ]\n    outputs = [ \"$root_out_dir/cpp_with_rust\" ]\n    args = [\n      \"//experimental/rust_cxx:cpp_with_rust\",\n      \"../../bazel-bin/experimental/rust_cxx/cpp_with_rust\",\n    ]\n  }\n}\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 0.083984375,
          "content": "Please see the guidelines for contributing code at https://skia.org/docs/dev/contrib/\n"
        },
        {
          "name": "CQ_COMMITTERS",
          "type": "blob",
          "size": 0.1044921875,
          "content": "The committer list has moved to\nhttps://chrome-infra-auth.appspot.com/auth/groups/project-skia-committers.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.052734375,
          "content": "[workspace]\n\nmembers = [\n    \"src/ports/fontations\",\n]"
        },
        {
          "name": "DEPS",
          "type": "blob",
          "size": 9.7880859375,
          "content": "# This file manages the dependencies used by Skia developers for local, stand-alone Skia builds and\n# Skia testing infrastructure. The versions specified by the commit hashes represent the revisions\n# we happen to be currently testing. Skia provides no endorsement or recommendation on the revision\n# to use for these libraries.\n\nuse_relative_paths = True\n\nvars = {\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling different\n  # dependencies without interference from each other.\n  'infra_revision': 'c67b4fc704ca321f710c653de844ec95107439ee',\n\n  # ninja CIPD package version.\n  # https://chrome-infra-packages.appspot.com/p/infra/3pp/tools/ninja\n  'ninja_version': 'version:2@1.12.1.chromium.4',\n\n  # googlefonts_testdata CIPD package version\n  # https://chrome-infra-packages.appspot.com/p/chromium/third_party/googlefonts_testdata/\n  'googlefonts_testdata_version': 'version:20230913',\n\n  # Pre-built task drivers from this repo, used for CI.\n  'task_drivers_revision': 'git_revision:b5d31abb7bc772a69f800de45783768768437675',\n}\n\n# If you modify this file, you will need to regenerate the Bazel version of this file (bazel/deps.bzl).\n# To do so, run:\n#     bazelisk run //bazel/deps_parser\n#\n# To apply the changes for the GN build, you will need to resync the git repositories using:\n#     ./tools/git-sync-deps\ndeps = {\n  \"buildtools\"                                   : \"https://chromium.googlesource.com/chromium/src/buildtools.git@1760ff6d7267dd97ae1968c7bee9ce04a2a8489d\",\n  \"third_party/externals/angle2\"                 : \"https://chromium.googlesource.com/angle/angle.git@f64fef257ef0281b5cce3ec4748fc614d5e696a7\",\n  \"third_party/externals/brotli\"                 : \"https://skia.googlesource.com/external/github.com/google/brotli.git@6d03dfbedda1615c4cba1211f8d81735575209c8\",\n  \"third_party/externals/d3d12allocator\"         : \"https://skia.googlesource.com/external/github.com/GPUOpen-LibrariesAndSDKs/D3D12MemoryAllocator.git@169895d529dfce00390a20e69c2f516066fe7a3b\",\n  # Dawn requires jinja2 and markupsafe for the code generator, tint for SPIRV compilation, and abseil for string formatting.\n  # When the Dawn revision is updated these should be updated from the Dawn DEPS as well.\n  \"third_party/externals/dawn\"                   : \"https://dawn.googlesource.com/dawn.git@8c8e27355e127401b523e10ce908446719bcf030\",\n  \"third_party/externals/jinja2\"                 : \"https://chromium.googlesource.com/chromium/src/third_party/jinja2@e2d024354e11cc6b041b0cff032d73f0c7e43a07\",\n  \"third_party/externals/markupsafe\"             : \"https://chromium.googlesource.com/chromium/src/third_party/markupsafe@0bad08bb207bbfc1d6f3bbc82b9242b0c50e5794\",\n  \"third_party/externals/abseil-cpp\"             : \"https://skia.googlesource.com/external/github.com/abseil/abseil-cpp.git@65a55c2ba891f6d2492477707f4a2e327a0b40dc\",\n  \"third_party/externals/delaunator-cpp\"         : \"https://skia.googlesource.com/external/github.com/skia-dev/delaunator-cpp.git@98305ef6c4e862f7d48df9cc647b690d796fec68\",\n  \"third_party/externals/dng_sdk\"                : \"https://android.googlesource.com/platform/external/dng_sdk.git@c8d0c9b1d16bfda56f15165d39e0ffa360a11123\",\n  \"third_party/externals/egl-registry\"           : \"https://skia.googlesource.com/external/github.com/KhronosGroup/EGL-Registry@b055c9b483e70ecd57b3cf7204db21f5a06f9ffe\",\n  \"third_party/externals/emsdk\"                  : \"https://skia.googlesource.com/external/github.com/emscripten-core/emsdk.git@a896e3d066448b3530dbcaa48869fafefd738f57\",\n  \"third_party/externals/expat\"                  : \"https://chromium.googlesource.com/external/github.com/libexpat/libexpat.git@624da0f593bb8d7e146b9f42b06d8e6c80d032a3\",\n  \"third_party/externals/freetype\"               : \"https://chromium.googlesource.com/chromium/src/third_party/freetype2.git@59320b2d3c2584ac01914ed0deff64bcc8fb23b2\",\n  \"third_party/externals/harfbuzz\"               : \"https://chromium.googlesource.com/external/github.com/harfbuzz/harfbuzz.git@a070f9ebbe88dc71b248af9731dd49ec93f4e6e6\",\n  \"third_party/externals/highway\"                : \"https://chromium.googlesource.com/external/github.com/google/highway.git@424360251cdcfc314cfc528f53c872ecd63af0f0\",\n  \"third_party/externals/icu\"                    : \"https://chromium.googlesource.com/chromium/deps/icu.git@364118a1d9da24bb5b770ac3d762ac144d6da5a4\",\n  \"third_party/externals/icu4x\"                  : \"https://chromium.googlesource.com/external/github.com/unicode-org/icu4x.git@bcf4f7198d4dc5f3127e84a6ca657c88e7d07a13\",\n  \"third_party/externals/imgui\"                  : \"https://skia.googlesource.com/external/github.com/ocornut/imgui.git@55d35d8387c15bf0cfd71861df67af8cfbda7456\",\n  \"third_party/externals/libavif\"                : \"https://skia.googlesource.com/external/github.com/AOMediaCodec/libavif.git@55aab4ac0607ab651055d354d64c4615cf3d8000\",\n  \"third_party/externals/libgav1\"                : \"https://chromium.googlesource.com/codecs/libgav1.git@5cf722e659014ebaf2f573a6dd935116d36eadf1\",\n  \"third_party/externals/libgrapheme\"            : \"https://skia.googlesource.com/external/github.com/FRIGN/libgrapheme/@c0cab63c5300fa12284194fbef57aa2ed62a94c0\",\n  \"third_party/externals/libjpeg-turbo\"          : \"https://chromium.googlesource.com/chromium/deps/libjpeg_turbo.git@ccfbe1c82a3b6dbe8647ceb36a3f9ee711fba3cf\",\n  \"third_party/externals/libjxl\"                 : \"https://chromium.googlesource.com/external/gitlab.com/wg1/jpeg-xl.git@a205468bc5d3a353fb15dae2398a101dff52f2d3\",\n  \"third_party/externals/libpng\"                 : \"https://skia.googlesource.com/third_party/libpng.git@ed217e3e601d8e462f7fd1e04bed43ac42212429\",\n  \"third_party/externals/libwebp\"                : \"https://chromium.googlesource.com/webm/libwebp.git@845d5476a866141ba35ac133f856fa62f0b7445f\",\n  \"third_party/externals/libyuv\"                 : \"https://chromium.googlesource.com/libyuv/libyuv.git@d248929c059ff7629a85333699717d7a677d8d96\",\n  \"third_party/externals/oboe\"                   : \"https://chromium.googlesource.com/external/github.com/google/oboe.git@b02a12d1dd821118763debec6b83d00a8a0ee419\",\n  \"third_party/externals/opengl-registry\"        : \"https://skia.googlesource.com/external/github.com/KhronosGroup/OpenGL-Registry@14b80ebeab022b2c78f84a573f01028c96075553\",\n  \"third_party/externals/partition_alloc\"        : \"https://chromium.googlesource.com/chromium/src/base/allocator/partition_allocator.git@ce13777cb731e0a60c606d1741091fd11a0574d7\",\n  \"third_party/externals/perfetto\"               : \"https://android.googlesource.com/platform/external/perfetto@93885509be1c9240bc55fa515ceb34811e54a394\",\n  \"third_party/externals/piex\"                   : \"https://android.googlesource.com/platform/external/piex.git@bb217acdca1cc0c16b704669dd6f91a1b509c406\",\n  \"third_party/externals/swiftshader\"            : \"https://swiftshader.googlesource.com/SwiftShader@e76961fac58c34c61bb52ed3887917300f0e37a3\",\n  \"third_party/externals/vulkanmemoryallocator\"  : \"https://chromium.googlesource.com/external/github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator@a6bfc237255a6bac1513f7c1ebde6d8aed6b5191\",\n  # vulkan-deps is a meta-repo containing several interdependent Khronos Vulkan repositories.\n  # When the vulkan-deps revision is updated, those repos (spirv-*, vulkan-*) should be updated as well.\n  \"third_party/externals/vulkan-deps\"            : \"https://chromium.googlesource.com/vulkan-deps@199e36d15635305911d4ad0fae6ef733a681f149\",\n  \"third_party/externals/spirv-cross\"            : \"https://chromium.googlesource.com/external/github.com/KhronosGroup/SPIRV-Cross@b8fcf307f1f347089e3c46eb4451d27f32ebc8d3\",\n  \"third_party/externals/spirv-headers\"          : \"https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Headers.git@a380cd25433092dbce9a455a3feb1242138febee\",\n  \"third_party/externals/spirv-tools\"            : \"https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Tools.git@8b39a8b54d55c8737196cdce705f32f94d3b2463\",\n  \"third_party/externals/vello\"                  : \"https://skia.googlesource.com/external/github.com/linebender/vello.git@3ee3bea02164c5a816fe6c16ef4e3a810edb7620\",\n  \"third_party/externals/vulkan-headers\"         : \"https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Headers@d4a196d8c84e032d27f999adcea3075517c1c97f\",\n  \"third_party/externals/vulkan-tools\"           : \"https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Tools@315964ad5aabd5b148a484e5fbea8a365c8d1eb3\",\n  \"third_party/externals/vulkan-utility-libraries\": \"https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Utility-Libraries@5a88b6042edb8f03eefc8de73bd73a899989373f\",\n  \"third_party/externals/unicodetools\"           : \"https://chromium.googlesource.com/external/github.com/unicode-org/unicodetools@66a3fa9dbdca3b67053a483d130564eabc5fe095\",\n  #\"third_party/externals/v8\"                     : \"https://chromium.googlesource.com/v8/v8.git@5f1ae66d5634e43563b2d25ea652dfb94c31a3b4\",\n  \"third_party/externals/wuffs\"                  : \"https://skia.googlesource.com/external/github.com/google/wuffs-mirror-release-c.git@e3f919ccfe3ef542cfc983a82146070258fb57f8\",\n  \"third_party/externals/zlib\"                   : \"https://chromium.googlesource.com/chromium/src/third_party/zlib@646b7f569718921d7d4b5b8e22572ff6c76f2596\",\n\n  'bin': {\n    'packages': [\n      {\n        'package': 'skia/tools/sk/${{platform}}',\n        'version': 'git_revision:' + Var('infra_revision'),\n      },\n      {\n        'package': 'infra/3pp/tools/ninja/${{platform}}',\n        'version': Var('ninja_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n  },\n\n  'task_drivers': {\n    'packages': [\n      {\n        'package': 'skia/tools/bazel_build/${{platform}}',\n        'version': Var('task_drivers_revision'),\n      },\n    ],\n    'dep_type': 'cipd',\n    'condition': 'False',\n  },\n\n  'infra/skia-infra': {\n    'url': 'https://skia.googlesource.com/buildbot.git@' + Var('infra_revision'),\n    'condition': 'False',\n  },\n}\n"
        },
        {
          "name": "DIR_METADATA",
          "type": "blob",
          "size": 0.0869140625,
          "content": "monorail {\n  component: \"Internals>Skia\"\n}\nbuganizer_public: {\n  component_id: 1457031\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4716796875,
          "content": "Copyright (c) 2011 Google Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n  * Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived\n    from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.4208984375,
          "content": "###############################################################################\n# Bazel now uses Bzlmod by default to manage external dependencies.\n# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.\n#\n# For more details, please check https://github.com/bazelbuild/bazel/issues/18958\n###############################################################################\n# TODO(kjlubick) set up modules\n"
        },
        {
          "name": "MODULE.bazel.lock",
          "type": "blob",
          "size": 9.306640625,
          "content": "{\n  \"lockFileVersion\": 11,\n  \"registryFileHashes\": {\n    \"https://bcr.bazel.build/bazel_registry.json\": \"8a28e4aff06ee60aed2a8c281907fb8bcbf3b753c91fb5a5c57da3215d5b3497\",\n    \"https://bcr.bazel.build/modules/abseil-cpp/20210324.2/MODULE.bazel\": \"7cd0312e064fde87c8d1cd79ba06c876bd23630c83466e9500321be55c96ace2\",\n    \"https://bcr.bazel.build/modules/abseil-cpp/20211102.0/MODULE.bazel\": \"70390338f7a5106231d20620712f7cccb659cd0e9d073d1991c038eb9fc57589\",\n    \"https://bcr.bazel.build/modules/abseil-cpp/20211102.0/source.json\": \"7e3a9adf473e9af076ae485ed649d5641ad50ec5c11718103f34de03170d94ad\",\n    \"https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel\": \"50341a62efbc483e8a2a6aec30994a58749bd7b885e18dd96aa8c33031e558ef\",\n    \"https://bcr.bazel.build/modules/apple_support/1.5.0/source.json\": \"eb98a7627c0bc486b57f598ad8da50f6625d974c8f723e9ea71bd39f709c9862\",\n    \"https://bcr.bazel.build/modules/bazel_features/1.11.0/MODULE.bazel\": \"f9382337dd5a474c3b7d334c2f83e50b6eaedc284253334cf823044a26de03e8\",\n    \"https://bcr.bazel.build/modules/bazel_features/1.11.0/source.json\": \"c9320aa53cd1c441d24bd6b716da087ad7e4ff0d9742a9884587596edfe53015\",\n    \"https://bcr.bazel.build/modules/bazel_skylib/1.0.3/MODULE.bazel\": \"bcb0fd896384802d1ad283b4e4eb4d718eebd8cb820b0a2c3a347fb971afd9d8\",\n    \"https://bcr.bazel.build/modules/bazel_skylib/1.2.1/MODULE.bazel\": \"f35baf9da0efe45fa3da1696ae906eea3d615ad41e2e3def4aeb4e8bc0ef9a7a\",\n    \"https://bcr.bazel.build/modules/bazel_skylib/1.3.0/MODULE.bazel\": \"20228b92868bf5cfc41bda7afc8a8ba2a543201851de39d990ec957b513579c5\",\n    \"https://bcr.bazel.build/modules/bazel_skylib/1.6.1/MODULE.bazel\": \"8fdee2dbaace6c252131c00e1de4b165dc65af02ea278476187765e1a617b917\",\n    \"https://bcr.bazel.build/modules/bazel_skylib/1.6.1/source.json\": \"082ed5f9837901fada8c68c2f3ddc958bb22b6d654f71dd73f3df30d45d4b749\",\n    \"https://bcr.bazel.build/modules/buildozer/7.1.2/MODULE.bazel\": \"2e8dd40ede9c454042645fd8d8d0cd1527966aa5c919de86661e62953cd73d84\",\n    \"https://bcr.bazel.build/modules/buildozer/7.1.2/source.json\": \"c9028a501d2db85793a6996205c8de120944f50a0d570438fcae0457a5f9d1f8\",\n    \"https://bcr.bazel.build/modules/googletest/1.11.0/MODULE.bazel\": \"3a83f095183f66345ca86aa13c58b59f9f94a2f81999c093d4eeaa2d262d12f4\",\n    \"https://bcr.bazel.build/modules/googletest/1.11.0/source.json\": \"c73d9ef4268c91bd0c1cd88f1f9dfa08e814b1dbe89b5f594a9f08ba0244d206\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.4/MODULE.bazel\": \"9b328e31ee156f53f3c416a64f8491f7eb731742655a47c9eec4703a71644aee\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.5/MODULE.bazel\": \"5733b54ea419d5eaf7997054bb55f6a1d0b5ff8aedf0176fef9eea44f3acda37\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.6/MODULE.bazel\": \"ad6eeef431dc52aefd2d77ed20a4b353f8ebf0f4ecdd26a807d2da5aa8cd0615\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.7/MODULE.bazel\": \"72fd4a0ede9ee5c021f6a8dd92b503e089f46c227ba2813ff183b71616034814\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.9/MODULE.bazel\": \"4a87a60c927b56ddd67db50c89acaa62f4ce2a1d2149ccb63ffd871d5ce29ebc\",\n    \"https://bcr.bazel.build/modules/platforms/0.0.9/source.json\": \"cd74d854bf16a9e002fb2ca7b1a421f4403cda29f824a765acd3a8c56f8d43e6\",\n    \"https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel\": \"a5a29bb89544f9b97edce05642fac225a808b5b7be74038ea3640fae2f8e66a7\",\n    \"https://bcr.bazel.build/modules/protobuf/21.7/source.json\": \"bbe500720421e582ff2d18b0802464205138c06056f443184de39fbb8187b09b\",\n    \"https://bcr.bazel.build/modules/protobuf/3.19.0/MODULE.bazel\": \"6b5fbb433f760a99a22b18b6850ed5784ef0e9928a72668b66e4d7ccd47db9b0\",\n    \"https://bcr.bazel.build/modules/protobuf/3.19.6/MODULE.bazel\": \"9233edc5e1f2ee276a60de3eaa47ac4132302ef9643238f23128fea53ea12858\",\n    \"https://bcr.bazel.build/modules/rules_cc/0.0.1/MODULE.bazel\": \"cb2aa0747f84c6c3a78dad4e2049c154f08ab9d166b1273835a8174940365647\",\n    \"https://bcr.bazel.build/modules/rules_cc/0.0.2/MODULE.bazel\": \"6915987c90970493ab97393024c156ea8fb9f3bea953b2f3ec05c34f19b5695c\",\n    \"https://bcr.bazel.build/modules/rules_cc/0.0.8/MODULE.bazel\": \"964c85c82cfeb6f3855e6a07054fdb159aced38e99a5eecf7bce9d53990afa3e\",\n    \"https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel\": \"836e76439f354b89afe6a911a7adf59a6b2518fafb174483ad78a2a2fde7b1c5\",\n    \"https://bcr.bazel.build/modules/rules_cc/0.0.9/source.json\": \"1f1ba6fea244b616de4a554a0f4983c91a9301640c8fe0dd1d410254115c8430\",\n    \"https://bcr.bazel.build/modules/rules_java/4.0.0/MODULE.bazel\": \"5a78a7ae82cd1a33cef56dc578c7d2a46ed0dca12643ee45edbb8417899e6f74\",\n    \"https://bcr.bazel.build/modules/rules_java/7.6.5/MODULE.bazel\": \"481164be5e02e4cab6e77a36927683263be56b7e36fef918b458d7a8a1ebadb1\",\n    \"https://bcr.bazel.build/modules/rules_java/7.6.5/source.json\": \"a805b889531d1690e3c72a7a7e47a870d00323186a9904b36af83aa3d053ee8d\",\n    \"https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel\": \"a56b85e418c83eb1839819f0b515c431010160383306d13ec21959ac412d2fe7\",\n    \"https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/source.json\": \"a075731e1b46bc8425098512d038d416e966ab19684a10a34f4741295642fc35\",\n    \"https://bcr.bazel.build/modules/rules_license/0.0.3/MODULE.bazel\": \"627e9ab0247f7d1e05736b59dbb1b6871373de5ad31c3011880b4133cafd4bd0\",\n    \"https://bcr.bazel.build/modules/rules_license/0.0.7/MODULE.bazel\": \"088fbeb0b6a419005b89cf93fe62d9517c0a2b8bb56af3244af65ecfe37e7d5d\",\n    \"https://bcr.bazel.build/modules/rules_license/0.0.7/source.json\": \"355cc5737a0f294e560d52b1b7a6492d4fff2caf0bef1a315df5a298fca2d34a\",\n    \"https://bcr.bazel.build/modules/rules_pkg/0.7.0/MODULE.bazel\": \"df99f03fc7934a4737122518bb87e667e62d780b610910f0447665a7e2be62dc\",\n    \"https://bcr.bazel.build/modules/rules_pkg/0.7.0/source.json\": \"c2557066e0c0342223ba592510ad3d812d4963b9024831f7f66fd0584dd8c66c\",\n    \"https://bcr.bazel.build/modules/rules_proto/4.0.0/MODULE.bazel\": \"a7a7b6ce9bee418c1a760b3d84f83a299ad6952f9903c67f19e4edd964894e06\",\n    \"https://bcr.bazel.build/modules/rules_proto/5.3.0-21.7/MODULE.bazel\": \"e8dff86b0971688790ae75528fe1813f71809b5afd57facb44dad9e8eca631b7\",\n    \"https://bcr.bazel.build/modules/rules_proto/5.3.0-21.7/source.json\": \"d57902c052424dfda0e71646cb12668d39c4620ee0544294d9d941e7d12bc3a9\",\n    \"https://bcr.bazel.build/modules/rules_python/0.10.2/MODULE.bazel\": \"cc82bc96f2997baa545ab3ce73f196d040ffb8756fd2d66125a530031cd90e5f\",\n    \"https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel\": \"26114f0c0b5e93018c0c066d6673f1a2c3737c7e90af95eff30cfee38d0bbac7\",\n    \"https://bcr.bazel.build/modules/rules_python/0.22.1/source.json\": \"57226905e783bae7c37c2dd662be078728e48fa28ee4324a7eabcafb5a43d014\",\n    \"https://bcr.bazel.build/modules/rules_python/0.4.0/MODULE.bazel\": \"9208ee05fd48bf09ac60ed269791cf17fb343db56c8226a720fbb1cdf467166c\",\n    \"https://bcr.bazel.build/modules/stardoc/0.5.1/MODULE.bazel\": \"1a05d92974d0c122f5ccf09291442580317cdd859f07a8655f1db9a60374f9f8\",\n    \"https://bcr.bazel.build/modules/stardoc/0.5.1/source.json\": \"a96f95e02123320aa015b956f29c00cb818fa891ef823d55148e1a362caacf29\",\n    \"https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/MODULE.bazel\": \"7298990c00040a0e2f121f6c32544bab27d4452f80d9ce51349b1a28f3005c43\",\n    \"https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/source.json\": \"f1ef7d3f9e0e26d4b23d1c39b5f5de71f584dd7d1b4ef83d9bbba6ec7a6a6459\",\n    \"https://bcr.bazel.build/modules/zlib/1.2.11/MODULE.bazel\": \"07b389abc85fdbca459b69e2ec656ae5622873af3f845e1c9d80fe179f3effa0\",\n    \"https://bcr.bazel.build/modules/zlib/1.2.12/MODULE.bazel\": \"3b1a8834ada2a883674be8cbd36ede1b6ec481477ada359cd2d3ddc562340b27\",\n    \"https://bcr.bazel.build/modules/zlib/1.3.1.bcr.3/MODULE.bazel\": \"af322bc08976524477c79d1e45e241b6efbeb918c497e8840b8ab116802dda79\",\n    \"https://bcr.bazel.build/modules/zlib/1.3.1.bcr.3/source.json\": \"2be409ac3c7601245958cd4fcdff4288be79ed23bd690b4b951f500d54ee6e7d\"\n  },\n  \"selectedYankedVersions\": {},\n  \"moduleExtensions\": {\n    \"@@apple_support~//crosstool:setup.bzl%apple_cc_configure_extension\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"PjIds3feoYE8SGbbIq2SFTZy3zmxeO2tQevJZNDo7iY=\",\n        \"usagesDigest\": \"aLmqbvowmHkkBPve05yyDNGN7oh7QE9kBADr3QIZTZs=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"local_config_apple_cc\": {\n            \"bzlFile\": \"@@apple_support~//crosstool:setup.bzl\",\n            \"ruleClassName\": \"_apple_cc_autoconf\",\n            \"attributes\": {}\n          },\n          \"local_config_apple_cc_toolchains\": {\n            \"bzlFile\": \"@@apple_support~//crosstool:setup.bzl\",\n            \"ruleClassName\": \"_apple_cc_autoconf_toolchains\",\n            \"attributes\": {}\n          }\n        },\n        \"recordedRepoMappingEntries\": [\n          [\n            \"apple_support~\",\n            \"bazel_tools\",\n            \"bazel_tools\"\n          ]\n        ]\n      }\n    },\n    \"@@platforms//host:extension.bzl%host_platform\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"xelQcPZH8+tmuOHVjL9vDxMnnQNMlwj0SlvgoqBkm4U=\",\n        \"usagesDigest\": \"meSzxn3DUCcYEhq4HQwExWkWtU4EjriRBQLsZN+Q0SU=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"host_platform\": {\n            \"bzlFile\": \"@@platforms//host:extension.bzl\",\n            \"ruleClassName\": \"host_platform_repo\",\n            \"attributes\": {}\n          }\n        },\n        \"recordedRepoMappingEntries\": []\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.001953125,
          "content": "*\n"
        },
        {
          "name": "OWNERS.android",
          "type": "blob",
          "size": 0.666015625,
          "content": "# Bug component: 1346\n# This file uses '*' instead of naming specific owners because we are unable to\n# list the autoroller as an owner (see b/199385287 and skbug.com/12454), so this\n# would prevent the autoroller from working. Please get a review from one of the\n# following:\n# - jmbetancourt@google.com\n# - nscobie@google.com\n# - scroggo@google.com\n# - skia-staff@google.com\n*\n\n# These files are generated by gn/gn_to_bp.py, and upstream Skia committers\n# often don't have visibility into potentially unexpected consequences of GN\n# build flag changes.\nper-file */include/config/SkUserConfig.h=set noparent\nper-file */include/config/SkUserConfig.h=file:OWNERS_build_files.android\n"
        },
        {
          "name": "OWNERS_build_files.android",
          "type": "blob",
          "size": 0.3798828125,
          "content": "# This file doesn't do anything on its own, but serves as a group definition. It is imported into\n# OWNERS.android to enforce per-file rules on certain files generated by gn/gn_to_bp.py.\n# Fully-specified individuals only, in alphabetical order:\nbungeman@google.com\ndjsollen@google.com\nhcm@google.com\njmbetancourt@google.com\nnscobie@google.com\nrobertphillips@google.com\nscroggo@google.com\n"
        },
        {
          "name": "PRESUBMIT.py",
          "type": "blob",
          "size": 30.38671875,
          "content": "#!/usr/bin/env python3\n# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n\n\"\"\"Top-level presubmit script for Skia.\n\nSee http://dev.chromium.org/developers/how-tos/depottools/presubmit-scripts\nfor more details about the presubmit API built into gcl.\n\"\"\"\n\nimport difflib\nimport os\nimport re\nimport subprocess\nimport sys\n\n\nRELEASE_NOTES_DIR = 'relnotes'\nRELEASE_NOTES_FILE_NAME = 'RELEASE_NOTES.md'\nRELEASE_NOTES_README = '//relnotes/README.md'\n\nGOLD_TRYBOT_URL = 'https://gold.skia.org/search?issue='\n\nSERVICE_ACCOUNT_SUFFIX = [\n    '@%s.iam.gserviceaccount.com' % project for project in [\n        'skia-buildbots.google.com', 'skia-swarming-bots', 'skia-public',\n        'skia-corp.google.com', 'chops-service-accounts']]\n\nUSE_PYTHON3 = True\n\n\ndef _CheckChangeHasEol(input_api, output_api, source_file_filter=None):\n  \"\"\"Checks that files end with at least one \\n (LF).\"\"\"\n  eof_files = []\n  for f in input_api.AffectedSourceFiles(source_file_filter):\n    contents = input_api.ReadFile(f, 'rb')\n    # Check that the file ends in at least one newline character.\n    if len(contents) > 1 and contents[-1:] != '\\n':\n      eof_files.append(f.LocalPath())\n\n  if eof_files:\n    return [output_api.PresubmitPromptWarning(\n      'These files should end in a newline character:',\n      items=eof_files)]\n  return []\n\n\ndef _JsonChecks(input_api, output_api):\n  \"\"\"Run checks on any modified json files.\"\"\"\n  failing_files = []\n  for affected_file in input_api.AffectedFiles(None):\n    affected_file_path = affected_file.LocalPath()\n    is_json = affected_file_path.endswith('.json')\n    is_metadata = (affected_file_path.startswith('site/') and\n                   affected_file_path.endswith('/METADATA'))\n    if is_json or is_metadata:\n      try:\n        input_api.json.load(open(affected_file_path, 'r'))\n      except ValueError as ve:\n        failing_files.append(f'{affected_file_path}\\t\\t{ve}')\n\n  results = []\n  if failing_files:\n    results.append(\n        output_api.PresubmitError(\n            'The following files contain invalid json:\\n%s\\n' %\n                '\\n'.join(failing_files)))\n  return results\n\n\ndef _IfDefChecks(input_api, output_api):\n  \"\"\"Ensures if/ifdef are not before includes. See skbug/3362 for details.\"\"\"\n  comment_block_start_pattern = re.compile('^\\s*\\/\\*.*$')\n  comment_block_middle_pattern = re.compile('^\\s+\\*.*')\n  comment_block_end_pattern = re.compile('^\\s+\\*\\/.*$')\n  single_line_comment_pattern = re.compile('^\\s*//.*$')\n  def is_comment(line):\n    return (comment_block_start_pattern.match(line) or\n            comment_block_middle_pattern.match(line) or\n            comment_block_end_pattern.match(line) or\n            single_line_comment_pattern.match(line))\n\n  empty_line_pattern = re.compile('^\\s*$')\n  def is_empty_line(line):\n    return empty_line_pattern.match(line)\n\n  failing_files = []\n  for affected_file in input_api.AffectedSourceFiles(None):\n    affected_file_path = affected_file.LocalPath()\n    if affected_file_path.endswith('.cpp') or affected_file_path.endswith('.h'):\n      f = open(affected_file_path)\n      for line in f:\n        if is_comment(line) or is_empty_line(line):\n          continue\n        # The below will be the first real line after comments and newlines.\n        if line.startswith('#if 0 '):\n          pass\n        elif line.startswith('#if ') or line.startswith('#ifdef '):\n          failing_files.append(affected_file_path)\n        break\n\n  results = []\n  if failing_files:\n    results.append(\n        output_api.PresubmitError(\n            'The following files have #if or #ifdef before includes:\\n%s\\n\\n'\n            'See https://bug.skia.org/3362 for why this should be fixed.' %\n                '\\n'.join(failing_files)))\n  return results\n\n\ndef _CopyrightChecks(input_api, output_api, source_file_filter=None):\n  results = []\n  year_pattern = r'\\d{4}'\n  year_range_pattern = r'%s(-%s)?' % (year_pattern, year_pattern)\n  years_pattern = r'%s(,%s)*,?' % (year_range_pattern, year_range_pattern)\n  copyright_pattern = (\n      r'Copyright (\\([cC]\\) )?%s \\w+' % years_pattern)\n\n  for affected_file in input_api.AffectedSourceFiles(source_file_filter):\n    if ('third_party/' in affected_file.LocalPath() or\n        'tests/sksl/' in affected_file.LocalPath() or\n        'bazel/rbe/' in affected_file.LocalPath() or\n        'bazel/external/' in affected_file.LocalPath() or\n        'bazel/exporter/interfaces/mocks/' in affected_file.LocalPath() or\n        affected_file.LocalPath().endswith('gen.go')):\n      continue\n    contents = input_api.ReadFile(affected_file, 'rb')\n    if not re.search(copyright_pattern, contents):\n      results.append(output_api.PresubmitError(\n          '%s is missing a correct copyright header.' % affected_file))\n  return results\n\n\ndef _InfraTests(input_api, output_api):\n  \"\"\"Run the infra tests.\"\"\"\n  results = []\n  if not any(f.LocalPath().startswith('infra')\n             for f in input_api.AffectedFiles()):\n    return results\n\n  cmd = ['python3', os.path.join('infra', 'bots', 'infra_tests.py')]\n  try:\n    subprocess.check_output(cmd)\n  except subprocess.CalledProcessError as e:\n    results.append(output_api.PresubmitError(\n        '`%s` failed:\\n%s' % (' '.join(cmd), e.output)))\n  return results\n\n\ndef _CheckGNFormatted(input_api, output_api):\n  \"\"\"Make sure any .gn files we're changing have been formatted.\"\"\"\n  files = []\n  for f in input_api.AffectedFiles(include_deletes=False):\n    if (f.LocalPath().endswith('.gn') or\n        f.LocalPath().endswith('.gni')):\n      files.append(f)\n  if not files:\n    return []\n\n  cmd = ['python3', os.path.join('bin', 'fetch-gn')]\n  try:\n    subprocess.check_output(cmd)\n  except subprocess.CalledProcessError as e:\n    return [output_api.PresubmitError(\n        '`%s` failed:\\n%s' % (' '.join(cmd), e.output))]\n\n  results = []\n  for f in files:\n    gn = 'gn.exe' if 'win32' in sys.platform else 'gn'\n    gn = os.path.join(input_api.PresubmitLocalPath(), 'bin', gn)\n    cmd = [gn, 'format', '--dry-run', f.LocalPath()]\n    try:\n      subprocess.check_output(cmd)\n    except subprocess.CalledProcessError:\n      fix = 'bin/gn format ' + f.LocalPath()\n      results.append(output_api.PresubmitError(\n          '`%s` failed, try\\n\\t%s' % (' '.join(cmd), fix)))\n  return results\n\n\ndef _CheckGitConflictMarkers(input_api, output_api):\n  pattern = input_api.re.compile('^(?:<<<<<<<|>>>>>>>) |^=======$')\n  results = []\n  for f in input_api.AffectedFiles():\n    for line_num, line in f.ChangedContents():\n      if f.LocalPath().endswith('.md'):\n        # First-level headers in markdown look a lot like version control\n        # conflict markers. http://daringfireball.net/projects/markdown/basics\n        continue\n      if pattern.match(line):\n        results.append(\n            output_api.PresubmitError(\n                'Git conflict markers found in %s:%d %s' % (\n                    f.LocalPath(), line_num, line)))\n  return results\n\n\ndef _CheckIncludesFormatted(input_api, output_api):\n  \"\"\"Make sure #includes in files we're changing have been formatted.\"\"\"\n  files = [str(f) for f in input_api.AffectedFiles() if f.Action() != 'D']\n  cmd = ['python3',\n         'tools/rewrite_includes.py',\n         '--dry-run'] + files\n  if 0 != subprocess.call(cmd):\n    return [output_api.PresubmitError('`%s` failed' % ' '.join(cmd))]\n  return []\n\n\nclass _WarningsAsErrors():\n  def __init__(self, output_api):\n    self.output_api = output_api\n    self.old_warning = None\n  def __enter__(self):\n    self.old_warning = self.output_api.PresubmitPromptWarning\n    self.output_api.PresubmitPromptWarning = self.output_api.PresubmitError\n    return self.output_api\n  def __exit__(self, ex_type, ex_value, ex_traceback):\n    self.output_api.PresubmitPromptWarning = self.old_warning\n\n\ndef _RegenerateAllExamplesCPP(input_api, output_api):\n  \"\"\"Regenerates all_examples.cpp if an example was added or deleted.\"\"\"\n  if not any(f.LocalPath().startswith('docs/examples/')\n             for f in input_api.AffectedFiles()):\n    return []\n  command_str = 'tools/fiddle/make_all_examples_cpp.py'\n  cmd = ['python3', command_str, '--print-diff']\n  proc = subprocess.run(cmd, capture_output=True)\n  if proc.returncode != 0:\n    return [output_api.PresubmitError('`%s` failed' % ' '.join(cmd))]\n\n  results = []\n  diff_output = proc.stdout.decode('utf-8').strip()\n  if diff_output:\n    results += [output_api.PresubmitError(\n        'Diffs found after running \"%s\":\\n\\n%s\\n'\n        'Please commit or discard the above changes.' % (\n            command_str,\n            diff_output,\n        )\n    )]\n  return results\n\n\ndef _CheckIncludeForOutsideDeps(input_api, output_api):\n  \"\"\"The include directory should consist of only public APIs.\n\n     This check makes sure we don't have anything in the include directory\n     depend on outside folders. If we had include/core/SkDonut.h depend on\n     src/core/SkPastry.h, then clients would have transitive access to the\n     private SkPastry class and any symbols in there, even if they don't\n     directly include src/core/SkPastry.h (which can be detected/blocked\n     with build systems like GN or Bazel). By keeping include/ self-contained,\n     we keep a tighter grip on our public API and make Skia easier to distribute\n     (one can ship a .a/.so and a single directory of .h files).\n  \"\"\"\n  banned_includes = [\n    input_api.re.compile(r'#\\s*include\\s+(\"src/.*)'),\n    input_api.re.compile(r'#\\s*include\\s+(\"tools/.*)'),\n  ]\n  file_filter = lambda x: (x.LocalPath().startswith('include/'))\n  errors = []\n  for affected_file in input_api.AffectedSourceFiles(file_filter):\n    affected_filepath = affected_file.LocalPath()\n    for (line_num, line) in affected_file.ChangedContents():\n      for re in banned_includes:\n        match = re.search(line)\n        if match:\n          errors.append(('%s:%s: include/* should only depend on other things in include/*. ' +\n                        'Please remove #include of %s, perhaps making it a forward-declare.') % (\n                affected_filepath, line_num, match.group(1)))\n\n  if errors:\n    return [output_api.PresubmitError('\\n'.join(errors))]\n  return []\n\n\ndef _CheckExamplesForPrivateAPIs(input_api, output_api):\n  \"\"\"We only want our checked-in examples (aka fiddles) to show public API.\"\"\"\n  banned_includes = [\n    input_api.re.compile(r'#\\s*include\\s+(\"src/.*)'),\n    input_api.re.compile(r'#\\s*include\\s+(\"include/private/.*)'),\n  ]\n  file_filter = lambda x: (x.LocalPath().startswith('docs/examples/'))\n  errors = []\n  for affected_file in input_api.AffectedSourceFiles(file_filter):\n    affected_filepath = affected_file.LocalPath()\n    for (line_num, line) in affected_file.ChangedContents():\n      for re in banned_includes:\n        match = re.search(line)\n        if match:\n          errors.append('%s:%s: Fiddles should not use private/internal API like %s.' % (\n                affected_filepath, line_num, match.group(1)))\n\n  if errors:\n    return [output_api.PresubmitError('\\n'.join(errors))]\n  return []\n\n\ndef _CheckGeneratedBazelBUILDFiles(input_api, output_api):\n  if 'win32' in sys.platform:\n    # TODO(crbug.com/skia/12541): Remove when Bazel builds work on Windows.\n    # Note: `make` is not installed on Windows by default.\n    return []\n  if 'darwin' in sys.platform:\n    # This takes too long on Mac with default settings. Probably due to sandboxing.\n    return []\n  files = []\n  for affected_file in input_api.AffectedFiles(include_deletes=True):\n    affected_file_path = affected_file.LocalPath()\n    if (affected_file_path.endswith('.go') or\n          affected_file_path.endswith('BUILD.bazel')):\n      files.append(affected_file)\n  if not files:\n    return []\n  return _RunCommandAndCheckDiff(\n      output_api, ['make', '-C', 'bazel', 'generate_go'], files\n  )\n\n\ndef _CheckBazelBUILDFiles(input_api, output_api):\n  \"\"\"Makes sure our BUILD.bazel files are compatible with G3.\"\"\"\n  results = []\n  for affected_file in input_api.AffectedFiles(include_deletes=False):\n    affected_file_path = affected_file.LocalPath()\n    is_bazel = affected_file_path.endswith('BUILD.bazel')\n    # This list lines up with the one in autoroller_lib.py (see G3).\n    excluded_paths = [\"infra/\", \"bazel/rbe/\", \"bazel/external/\", \"bazel/common_config_settings/\",\n                      \"modules/canvaskit/go/\", \"experimental/\", \"bazel/platform\", \"third_party/\",\n                      \"tests/\", \"resources/\", \"bazel/deps_parser/\", \"bazel/exporter_tool/\",\n                      \"tools/gpu/gl/interface/\", \"bazel/utils/\", \"include/config/\",\n                      \"bench/\", \"example/external_client/\"]\n    is_excluded = any(affected_file_path.startswith(n) for n in excluded_paths)\n    if is_bazel and not is_excluded:\n      with open(affected_file_path, 'r') as file:\n        contents = file.read()\n        if 'licenses([\"notice\"])' not in contents:\n          results.append(output_api.PresubmitError(\n            ('%s needs to have\\nlicenses([\"notice\"])\\nimmediately after ' +\n             'the load() calls to comply with G3 policies.') % affected_file_path\n          ))\n        if 'cc_library(' in contents and '\"skia_cc_library\"' not in contents:\n          results.append(output_api.PresubmitError(\n            ('%s needs to load skia_cc_library from skia_rules.bzl instead of using the ' +\n             'native one. This allows us to build differently for G3.\\n' +\n             'Add \"skia_cc_library\" to load(\"//bazel:skia_rules.bzl\", ...)')\n            % affected_file_path\n          ))\n        if 'default_applicable_licenses' not in contents:\n          # See https://opensource.google/documentation/reference/thirdparty/new_license_rules\n          results.append(output_api.PresubmitError(\n            ('%s needs to have\\npackage(default_applicable_licenses = [\"//:license\"])\\n'+\n             'to comply with G3 policies') % affected_file_path\n          ))\n  return results\n\n\ndef _RunCommandAndCheckDiff(output_api, command, files_to_check):\n  \"\"\"Run an arbitrary command. Fail if it produces any diffs on the given files.\"\"\"\n  prev_contents = {}\n  for file in files_to_check:\n    # NewContents just reads the file.\n    prev_contents[file] = file.NewContents()\n\n  command_str = ' '.join(command)\n  results = []\n\n  try:\n    subprocess.check_output(\n        command,\n        stderr=subprocess.STDOUT, encoding='utf-8')\n  except subprocess.CalledProcessError as e:\n    results += [output_api.PresubmitError(\n        'Command \"%s\" returned non-zero exit code %d. Output: \\n\\n%s' % (\n            command_str,\n            e.returncode,\n            e.output,\n        )\n    )]\n\n  # Compare the new content to the previous content.\n  diffs = []\n  for file, prev_content in prev_contents.items():\n    new_content = file.NewContents(flush_cache=True)\n    if new_content != prev_content:\n      path = file.LocalPath()\n      diff = difflib.unified_diff(prev_content, new_content, path, path, lineterm='')\n      diffs.append('\\n'.join(diff))\n\n  if diffs:\n    results += [output_api.PresubmitError(\n        'Diffs found after running \"%s\":\\n\\n%s\\n\\n'\n        'Please commit or discard the above changes.' % (\n            command_str,\n            '\\n'.join(diffs),\n        )\n    )]\n\n  return results\n\n\ndef _CheckGNIGenerated(input_api, output_api):\n  \"\"\"Ensures that the generated *.gni files are current.\n\n  The Bazel project files are authoritative and some *.gni files are\n  generated from them using the exporter_tool. This check ensures they\n  are still current.\n  \"\"\"\n  if 'win32' in sys.platform:\n    # TODO(crbug.com/skia/12541): Remove when Bazel builds work on Windows.\n    # Note: `make` is not installed on Windows by default.\n    return [\n        output_api.PresubmitNotifyResult(\n            'Skipping Bazel=>GNI export check on Windows (unsupported platform).'\n        )\n    ]\n  if 'darwin' in sys.platform:\n    # This takes too long on Mac with default settings. Probably due to sandboxing.\n    return []\n  files = []\n  for affected_file in input_api.AffectedFiles(include_deletes=True):\n    affected_file_path = affected_file.LocalPath()\n    if affected_file_path.endswith('BUILD.bazel') or affected_file_path.endswith('.gni'):\n      files.append(affected_file)\n  # Generate GNI files and verify no changes.\n  if not files:\n    # No Bazel build files changed.\n    return []\n  return _RunCommandAndCheckDiff(\n      output_api, ['make', '-C', 'bazel', 'generate_gni'], files\n  )\n\n\ndef _CheckBuildifier(input_api, output_api):\n  \"\"\"Runs Buildifier and fails on linting errors, or if it produces any diffs.\n\n  This check only runs if the affected files include any WORKSPACE, BUILD,\n  BUILD.bazel or *.bzl files.\n  \"\"\"\n  files = []\n  # Please keep the below exclude patterns in sync with those in the //:buildifier rule definition.\n  for affected_file in input_api.AffectedFiles(include_deletes=False):\n    affected_file_path = affected_file.LocalPath()\n    if affected_file_path.endswith('BUILD.bazel') or affected_file_path.endswith('.bzl'):\n      if not affected_file_path.endswith('public.bzl') and \\\n        not affected_file_path.endswith('go_repositories.bzl') and \\\n        not \"bazel/rbe/gce_linux/\" in affected_file_path and \\\n        not affected_file_path.startswith(\"third_party/externals/\") and \\\n        not \"node_modules/\" in affected_file_path:  # Skip generated files.\n        files.append(affected_file)\n  if not files:\n    return []\n  try:\n    subprocess.check_output(\n        ['buildifier', '--version'],\n        stderr=subprocess.STDOUT)\n  except:\n    return [output_api.PresubmitNotifyResult(\n      'Skipping buildifier check because it is not on PATH. \\n' +\n      'You can download it from https://github.com/bazelbuild/buildtools/releases')]\n\n  return _RunCommandAndCheckDiff(\n    # Please keep the below arguments in sync with those in the //:buildifier rule definition.\n    output_api, [\n      'buildifier',\n      '--mode=fix',\n      '--lint=fix',\n      '--warnings',\n      ','.join([\n        '-native-android',\n        '-native-cc',\n        '-native-py',\n      ])\n    ] + [f.LocalPath() for f in files], files)\n\n\ndef _CheckBannedAPIs(input_api, output_api):\n  \"\"\"Check source code for functions, packages, and symbols that should not be used.\"\"\"\n\n  # A list of tuples of a regex to match an API and a suggested replacement for\n  # that API. There is an optional third parameter for files which *can* use this\n  # API without warning.\n  banned_replacements = [\n    (r'std::stof\\(', 'std::strtof(), which does not throw'),\n    (r'std::stod\\(', 'std::strtod(), which does not throw'),\n    (r'std::stold\\(', 'std::strtold(), which does not throw'),\n    # go/cstyle#Disallowed_Stdlib\n    (r'std::barrier', ''),\n    (r'std::condition_variable', ''),\n    (r'std::counting_semaphore', ''),\n    (r'std::future', ''),\n    (r'std::jthread', ''),\n    (r'std::latch', ''),\n    (r'std::mutex', 'SkMutex'),\n    (r'std::shared_mutex', 'SkSharedMutex'),\n    (r'std::stop_token', ''),\n    (r'std::thread', '', ['tests/*']),\n\n    # We used to have separate symbols for this, but coalesced them to make the\n    # Bazel build easier.\n    (r'GR_TEST_UTILS', 'GPU_TEST_UTILS'),\n    (r'GRAPHITE_TEST_UTILS', 'GPU_TEST_UTILS'),\n  ]\n\n  # Our Bazel rules have special copies of our cc_library rules with GPU_TEST_UTILS\n  # set. If GPU_TEST_UTILS is used outside of those files in Skia proper, the build\n  # will break/crash in mysterious ways (because files may get compiled in multiple\n  # conflicting ways as a result of the define being inconsistently set).\n  allowed_test_util_paths = [\n    'include/core/SkTypes.h',\n    'include/gpu/',\n    'include/private/gpu/',\n    'src/gpu/ganesh',\n    'src/gpu/graphite',\n    'tests/',\n    'tools/',\n  ]\n  gpu_test_utils_re = input_api.re.compile('GPU_TEST_UTILS')\n\n  # These defines are either there or not, and using them with just an #if is a\n  # subtle, frustrating bug.\n  existence_defines = ['SK_GANESH', 'SK_GRAPHITE', 'SK_GL', 'SK_VULKAN', 'SK_DAWN', 'SK_METAL',\n                       'SK_DIRECT3D', 'SK_DEBUG', 'GPU_TEST_UTILS']\n  for d in existence_defines:\n    banned_replacements.append(('#if {}'.format(d),\n                                '#if defined({})'.format(d)))\n  compiled_replacements = []\n  for rep in banned_replacements:\n    exceptions = []\n    if len(rep) == 3:\n      (re, replacement, exceptions) = rep\n    else:\n      (re, replacement) = rep\n\n    compiled_re = input_api.re.compile(re)\n    compiled_exceptions = [input_api.re.compile(exc) for exc in exceptions]\n    compiled_replacements.append(\n        (compiled_re, replacement, compiled_exceptions))\n\n  errors = []\n  file_filter = lambda x: (x.LocalPath().endswith('.h') or\n                           x.LocalPath().endswith('.cpp') or\n                           x.LocalPath().endswith('.cc') or\n                           x.LocalPath().endswith('.m') or\n                           x.LocalPath().endswith('.mm'))\n  for affected_file in input_api.AffectedSourceFiles(file_filter):\n    affected_filepath = affected_file.LocalPath()\n    for (line_num, line) in affected_file.ChangedContents():\n      for (re, replacement, exceptions) in compiled_replacements:\n        match = re.search(line)\n        if match:\n          for exc in exceptions:\n            if exc.search(affected_filepath):\n              break\n          else:\n            errors.append('%s:%s: Instead of %s, please use %s.' % (\n                affected_filepath, line_num, match.group(), replacement))\n      # Now to an explicit search for use of GPU_TEST_UTILS outside of\n      # files that our Bazel rules that define to be set.\n      match = gpu_test_utils_re.search(line)\n      if match:\n        for exc in allowed_test_util_paths:\n          if affected_filepath.startswith(exc):\n            break\n        else:\n          errors.append('%s:%s: Only GPU code should use GPU_TEST_UTILS.' % (\n              affected_filepath, line_num))\n\n  if errors:\n    return [output_api.PresubmitError('\\n'.join(errors))]\n\n  return []\n\n\ndef _CheckDEPS(input_api, output_api):\n  \"\"\"If DEPS was modified, run the deps_parser to update bazel/deps.bzl\"\"\"\n  files = []\n  for affected_file in input_api.AffectedFiles(include_deletes=False):\n    affected_file_path = affected_file.LocalPath()\n    if affected_file_path.endswith('DEPS') or affected_file_path.endswith('deps.bzl'):\n      files.append(affected_file)\n  if not files:\n    return []\n  try:\n    subprocess.check_output(\n        ['bazelisk', '--version'],\n        stderr=subprocess.STDOUT)\n  except:\n    return [output_api.PresubmitNotifyResult(\n      'Skipping DEPS check because bazelisk is not on PATH. \\n' +\n      'You can download it from https://github.com/bazelbuild/bazelisk/releases/tag/v1.14.0')]\n\n  return _RunCommandAndCheckDiff(\n      output_api, ['bazelisk', 'run', '//bazel/deps_parser'], files\n  )\n\n\ndef _CommonChecks(input_api, output_api):\n  \"\"\"Presubmit checks common to upload and commit.\"\"\"\n  results = []\n  sources = lambda x: (x.LocalPath().endswith('.h') or\n                       x.LocalPath().endswith('.py') or\n                       x.LocalPath().endswith('.sh') or\n                       x.LocalPath().endswith('.m') or\n                       x.LocalPath().endswith('.mm') or\n                       x.LocalPath().endswith('.go') or\n                       x.LocalPath().endswith('.c') or\n                       x.LocalPath().endswith('.cc') or\n                       x.LocalPath().endswith('.cpp'))\n  results.extend(_CheckChangeHasEol(\n      input_api, output_api, source_file_filter=sources))\n  with _WarningsAsErrors(output_api):\n    results.extend(input_api.canned_checks.CheckChangeHasNoCR(\n        input_api, output_api, source_file_filter=sources))\n    results.extend(input_api.canned_checks.CheckChangeHasNoStrayWhitespace(\n        input_api, output_api, source_file_filter=sources))\n  results.extend(_JsonChecks(input_api, output_api))\n  results.extend(_IfDefChecks(input_api, output_api))\n  results.extend(_CopyrightChecks(input_api, output_api,\n                                  source_file_filter=sources))\n  results.extend(_CheckIncludesFormatted(input_api, output_api))\n  results.extend(_CheckGNFormatted(input_api, output_api))\n  results.extend(_CheckGitConflictMarkers(input_api, output_api))\n  results.extend(_RegenerateAllExamplesCPP(input_api, output_api))\n  results.extend(_CheckExamplesForPrivateAPIs(input_api, output_api))\n  results.extend(_CheckIncludeForOutsideDeps(input_api, output_api))\n  results.extend(_CheckBazelBUILDFiles(input_api, output_api))\n  results.extend(_CheckBannedAPIs(input_api, output_api))\n  return results\n\n\ndef CheckChangeOnUpload(input_api, output_api):\n  \"\"\"Presubmit checks for the change on upload.\"\"\"\n  results = []\n  results.extend(_CommonChecks(input_api, output_api))\n  # Run on upload, not commit, since the presubmit bot apparently doesn't have\n  # coverage or Go installed.\n  results.extend(_InfraTests(input_api, output_api))\n  results.extend(_CheckTopReleaseNotesChanged(input_api, output_api))\n  results.extend(_CheckReleaseNotesForPublicAPI(input_api, output_api))\n  # Buildifier might not be on the CI machines.\n  results.extend(_CheckBuildifier(input_api, output_api))\n  # We don't want this to block the CQ (for now).\n  results.extend(_CheckDEPS(input_api, output_api))\n  # Bazelisk is not yet included in the Presubmit job.\n  results.extend(_CheckGeneratedBazelBUILDFiles(input_api, output_api))\n  results.extend(_CheckGNIGenerated(input_api, output_api))\n  return results\n\n\nclass CodeReview(object):\n  \"\"\"Abstracts which codereview tool is used for the specified issue.\"\"\"\n\n  def __init__(self, input_api):\n    self._issue = input_api.change.issue\n    self._gerrit = input_api.gerrit\n\n  def GetOwnerEmail(self):\n    return self._gerrit.GetChangeOwner(self._issue)\n\n  def GetSubject(self):\n    return self._gerrit.GetChangeInfo(self._issue)['subject']\n\n  def GetDescription(self):\n    return self._gerrit.GetChangeDescription(self._issue)\n\n  def GetReviewers(self):\n    code_review_label = (\n        self._gerrit.GetChangeInfo(self._issue)['labels']['Code-Review'])\n    return [r['email'] for r in code_review_label.get('all', [])]\n\n  def GetApprovers(self):\n    approvers = []\n    code_review_label = (\n        self._gerrit.GetChangeInfo(self._issue)['labels']['Code-Review'])\n    for m in code_review_label.get('all', []):\n      if m.get(\"value\") == 1:\n        approvers.append(m[\"email\"])\n    return approvers\n\n\ndef _CheckReleaseNotesForPublicAPI(input_api, output_api):\n  \"\"\"Checks to see if a release notes file is added or edited with public API changes.\"\"\"\n  results = []\n  public_api_changed = False\n  release_file_changed = False\n  for affected_file in input_api.AffectedFiles():\n    affected_file_path = affected_file.LocalPath()\n    file_path, file_ext = os.path.splitext(affected_file_path)\n    # We only care about files that end in .h and are under the top-level\n    # include dir, but not include/private.\n    if (file_ext == '.h' and\n        file_path.split(os.path.sep)[0] == 'include' and\n        'private' not in file_path):\n      public_api_changed = True\n    elif os.path.dirname(file_path) == RELEASE_NOTES_DIR:\n      release_file_changed = True\n\n  if public_api_changed and not release_file_changed:\n    results.append(output_api.PresubmitPromptWarning(\n        'If this change affects a client API, please add a new summary '\n        'file in the %s directory. More information can be found in '\n        '%s.' % (RELEASE_NOTES_DIR, RELEASE_NOTES_README)))\n  return results\n\n\ndef _CheckTopReleaseNotesChanged(input_api, output_api):\n  \"\"\"Warns if the top level release notes file was changed.\n\n  The top level file is now auto-edited, and new release notes should\n  be added to the RELEASE_NOTES_DIR directory\"\"\"\n  results = []\n  top_relnotes_changed = False\n  release_file_changed = False\n  for affected_file in input_api.AffectedFiles():\n    affected_file_path = affected_file.LocalPath()\n    file_path, file_ext = os.path.splitext(affected_file_path)\n    if affected_file_path == RELEASE_NOTES_FILE_NAME:\n      top_relnotes_changed = True\n    elif os.path.dirname(file_path) == RELEASE_NOTES_DIR:\n      release_file_changed = True\n  # When relnotes_util is run it will modify RELEASE_NOTES_FILE_NAME\n  # and delete the individual note files in RELEASE_NOTES_DIR.\n  # So, if both paths are modified do not emit a warning.\n  if top_relnotes_changed and not release_file_changed:\n    results.append(output_api.PresubmitPromptWarning(\n        'Do not edit %s directly. %s is automatically edited during the '\n        'release process. Release notes should be added as new files in '\n        'the %s directory. More information can be found in %s.' % (RELEASE_NOTES_FILE_NAME,\n                                                                    RELEASE_NOTES_FILE_NAME,\n                                                                    RELEASE_NOTES_DIR,\n                                                                    RELEASE_NOTES_README)))\n  return results\n\n\ndef PostUploadHook(gerrit, change, output_api):\n  \"\"\"git cl upload will call this hook after the issue is created/modified.\n\n  This hook does the following:\n  * Adds a link to preview docs changes if there are any docs changes in the CL.\n  * Adds 'No-Try: true' if the CL contains only docs changes.\n  \"\"\"\n  if not change.issue:\n    return []\n\n  # Skip PostUploadHooks for all auto-commit service account bots. New\n  # patchsets (caused due to PostUploadHooks) invalidates the CQ+2 vote from\n  # the \"--use-commit-queue\" flag to \"git cl upload\".\n  for suffix in SERVICE_ACCOUNT_SUFFIX:\n    if change.author_email.endswith(suffix):\n      return []\n\n  results = []\n  at_least_one_docs_change = False\n  all_docs_changes = True\n  for affected_file in change.AffectedFiles():\n    affected_file_path = affected_file.LocalPath()\n    file_path, _ = os.path.splitext(affected_file_path)\n    if 'site' == file_path.split(os.path.sep)[0]:\n      at_least_one_docs_change = True\n    else:\n      all_docs_changes = False\n    if at_least_one_docs_change and not all_docs_changes:\n      break\n\n  footers = change.GitFootersFromDescription()\n  description_changed = False\n\n  # If the change includes only doc changes then add No-Try: true in the\n  # CL's description if it does not exist yet.\n  if all_docs_changes and 'true' not in footers.get('No-Try', []):\n    description_changed = True\n    change.AddDescriptionFooter('No-Try', 'true')\n    results.append(\n        output_api.PresubmitNotifyResult(\n            'This change has only doc changes. Automatically added '\n            '\\'No-Try: true\\' to the CL\\'s description'))\n\n  # If the description has changed update it.\n  if description_changed:\n    gerrit.UpdateDescription(\n        change.FullDescriptionText(), change.issue)\n\n  return results\n\n\ndef CheckChangeOnCommit(input_api, output_api):\n  \"\"\"Presubmit checks for the change on commit.\"\"\"\n  results = []\n  results.extend(_CommonChecks(input_api, output_api))\n  # Checks for the presence of 'DO NOT''SUBMIT' in CL description and in\n  # content of files.\n  results.extend(\n      input_api.canned_checks.CheckDoNotSubmit(input_api, output_api))\n  return results\n"
        },
        {
          "name": "PRESUBMIT_test.py",
          "type": "blob",
          "size": 4.298828125,
          "content": "#!/usr/bin/env python3\n# Copyright 2023 Google Inc.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\nimport unittest\nfrom unittest import mock\n\nimport PRESUBMIT\n\nfrom PRESUBMIT_test_mocks import MockFile, MockAffectedFile\nfrom PRESUBMIT_test_mocks import MockInputApi, MockOutputApi\n\n\nclass ReleaseNotesTest(unittest.TestCase):\n    def testNoEditTopReleaseNotesNoWarning(self):\n        mock_input_api = MockInputApi()\n        mock_input_api.files = [\n            MockFile('README.chromium', ''),\n        ]\n\n        mock_output_api = MockOutputApi()\n        results = PRESUBMIT._CheckTopReleaseNotesChanged(\n            mock_input_api, mock_output_api)\n\n        self.assertEqual(0, len(results))\n\n    def testUpdateTopReleaseNotesIssuesWarning(self):\n        mock_input_api = MockInputApi()\n        mock_input_api.files = [\n            MockFile('RELEASE_NOTES.md', ''),\n        ]\n\n        mock_output_api = MockOutputApi()\n        results = PRESUBMIT._CheckTopReleaseNotesChanged(\n            mock_input_api, mock_output_api)\n\n        self.assertEqual(1, len(results))\n        self.assertIsInstance(\n            results[0], mock_output_api.PresubmitPromptWarning, 'Not a warning')\n        self.assertTrue(results[0].message.startswith(\n            'Do not edit RELEASE_NOTES.md'))\n\n    def testUpdateTopReleaseNotesNoWarning(self):\n        mock_input_api = MockInputApi()\n        mock_input_api.files = [\n            MockFile('RELEASE_NOTES.md', ''),\n            MockFile('relnotes/deleted_note.md', ''),\n        ]\n\n        mock_output_api = MockOutputApi()\n        results = PRESUBMIT._CheckTopReleaseNotesChanged(\n            mock_input_api, mock_output_api)\n\n        self.assertEqual(0, len(results))\n\n    def testUpdatePublicHeaderAndNoReleaseNoteGeneratesWarning(self):\n        mock_input_api = MockInputApi()\n        mock_input_api.files = [\n            MockFile('include/core/SkDrawable.h', ''),\n        ]\n\n        mock_output_api = MockOutputApi()\n        results = PRESUBMIT._CheckReleaseNotesForPublicAPI(\n            mock_input_api, mock_output_api)\n\n        self.assertEqual(1, len(results))\n        self.assertIsInstance(\n            results[0], mock_output_api.PresubmitPromptWarning, 'Not a warning')\n\n    def testUpdatePublicHeaderAndReleaseNoteGeneratesNoWarning(self):\n        mock_input_api = MockInputApi()\n        mock_input_api.files = [\n            MockFile('include/core/SkDrawable.h', ''),\n            MockFile('relnotes/new_note.md', ''),\n        ]\n\n        mock_output_api = MockOutputApi()\n        results = PRESUBMIT._CheckReleaseNotesForPublicAPI(\n            mock_input_api, mock_output_api)\n\n        self.assertEqual(0, len(results))\n\n\nclass RunCommandAndCheckDiffTest(unittest.TestCase):\n    def setUp(self):\n        self.foo_file = MockAffectedFile('foo.txt', new_contents=['foo'])\n        self.bar_file = MockAffectedFile('bar.txt', new_contents=['bar'])\n\n        self.mock_input_api = MockInputApi()\n        self.mock_input_api.files = [self.foo_file, self.bar_file]\n        self.mock_output_api = MockOutputApi()\n\n    def setContents(self, file, contents):\n        file._new_contents = contents\n\n    @mock.patch('subprocess.check_output')\n    def testNoChangesReturnsNoResults(self, mock_subprocess):\n        results = PRESUBMIT._RunCommandAndCheckDiff(self.mock_output_api, [], [])\n        self.assertEqual(results, [])\n\n    @mock.patch('subprocess.check_output')\n    def testChangingIrrelevantFilesReturnsNoResults(self, mock_subprocess):\n        mock_subprocess.side_effect = lambda *args, **kwargs: self.setContents(self.bar_file, ['foo'])\n        results = PRESUBMIT._RunCommandAndCheckDiff(\n            self.mock_output_api, ['cmd'], [self.foo_file],\n        )\n        self.assertEqual(results, [])\n\n    @mock.patch('subprocess.check_output')\n    def testChangingRelevantFilesReturnsDiff(self, mock_subprocess):\n        mock_subprocess.side_effect = lambda *args, **kwargs: self.setContents(self.foo_file, ['bar'])\n        results = PRESUBMIT._RunCommandAndCheckDiff(\n            self.mock_output_api, ['cmd'], [self.foo_file],\n        )\n        self.assertEqual(len(results), 1)\n        self.assertEqual(results[0].message,\n\"\"\"Diffs found after running \"cmd\":\n\n--- foo.txt\n+++ foo.txt\n@@ -1 +1 @@\n-foo\n+bar\n\nPlease commit or discard the above changes.\"\"\")\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
        },
        {
          "name": "PRESUBMIT_test_mocks.py",
          "type": "blob",
          "size": 9.740234375,
          "content": "# Copyright 2023 Google Inc.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# This is a copy of PRESUBMIT_test_mocks.py from the Chromium project.\n\nfrom collections import defaultdict\nimport fnmatch\nimport json\nimport os\nimport re\nimport subprocess\nimport sys\n\n\ndef _ReportErrorFileAndLine(filename, line_num, dummy_line):\n    \"\"\"Default error formatter for _FindNewViolationsOfRule.\"\"\"\n    return '%s:%s' % (filename, line_num)\n\n\nclass MockCannedChecks(object):\n    def _FindNewViolationsOfRule(self, callable_rule, input_api,\n                                 source_file_filter=None,\n                                 error_formatter=_ReportErrorFileAndLine):\n        \"\"\"Find all newly introduced violations of a per-line rule (a callable).\n\n        Arguments:\n          callable_rule: a callable taking a file extension and line of input and\n            returning True if the rule is satisfied and False if there was a\n            problem.\n          input_api: object to enumerate the affected files.\n          source_file_filter: a filter to be passed to the input api.\n          error_formatter: a callable taking (filename, line_number, line) and\n            returning a formatted error string.\n\n        Returns:\n          A list of the newly-introduced violations reported by the rule.\n        \"\"\"\n        errors = []\n        for f in input_api.AffectedFiles(include_deletes=False,\n                                         file_filter=source_file_filter):\n            # For speed, we do two passes, checking first the full file.  Shelling out\n            # to the SCM to determine the changed region can be quite expensive on\n            # Win32.  Assuming that most files will be kept problem-free, we can\n            # skip the SCM operations most of the time.\n            extension = str(f.LocalPath()).rsplit('.', 1)[-1]\n            if all(callable_rule(extension, line) for line in f.NewContents()):\n                # No violation found in full text: can skip considering diff.\n                continue\n\n            for line_num, line in f.ChangedContents():\n                if not callable_rule(extension, line):\n                    errors.append(error_formatter(\n                        f.LocalPath(), line_num, line))\n\n        return errors\n\n\nclass MockInputApi(object):\n    \"\"\"Mock class for the InputApi class.\n\n    This class can be used for unittests for presubmit by initializing the files\n    attribute as the list of changed files.\n    \"\"\"\n\n    DEFAULT_FILES_TO_SKIP = ()\n\n    def __init__(self):\n        self.canned_checks = MockCannedChecks()\n        self.fnmatch = fnmatch\n        self.json = json\n        self.re = re\n        self.os_path = os.path\n        self.platform = sys.platform\n        self.python_executable = sys.executable\n        self.python3_executable = sys.executable\n        self.platform = sys.platform\n        self.subprocess = subprocess\n        self.sys = sys\n        self.files = []\n        self.is_committing = False\n        self.change = MockChange([])\n        self.presubmit_local_path = os.path.dirname(__file__)\n        self.is_windows = sys.platform == 'win32'\n        self.no_diffs = False\n        # Although this makes assumptions about command line arguments used by test\n        # scripts that create mocks, it is a convenient way to set up the verbosity\n        # via the input api.\n        self.verbose = '--verbose' in sys.argv\n\n    def CreateMockFileInPath(self, f_list):\n        self.os_path.exists = lambda x: x in f_list\n\n    def AffectedFiles(self, file_filter=None, include_deletes=True):\n        for file in self.files:\n            if file_filter and not file_filter(file):\n                continue\n            if not include_deletes and file.Action() == 'D':\n                continue\n            yield file\n\n    def RightHandSideLines(self, source_file_filter=None):\n        affected_files = self.AffectedSourceFiles(source_file_filter)\n        for af in affected_files:\n            lines = af.ChangedContents()\n            for line in lines:\n                yield (af, line[0], line[1])\n\n    def AffectedSourceFiles(self, file_filter=None):\n        return self.AffectedFiles(file_filter=file_filter)\n\n    def FilterSourceFile(self, file,\n                         files_to_check=(), files_to_skip=()):\n        local_path = file.LocalPath()\n        found_in_files_to_check = not files_to_check\n        if files_to_check:\n            if type(files_to_check) is str:\n                raise TypeError(\n                    'files_to_check should be an iterable of strings')\n            for pattern in files_to_check:\n                compiled_pattern = re.compile(pattern)\n                if compiled_pattern.match(local_path):\n                    found_in_files_to_check = True\n                    break\n        if files_to_skip:\n            if type(files_to_skip) is str:\n                raise TypeError(\n                    'files_to_skip should be an iterable of strings')\n            for pattern in files_to_skip:\n                compiled_pattern = re.compile(pattern)\n                if compiled_pattern.match(local_path):\n                    return False\n        return found_in_files_to_check\n\n    def LocalPaths(self):\n        return [file.LocalPath() for file in self.files]\n\n    def PresubmitLocalPath(self):\n        return self.presubmit_local_path\n\n    def ReadFile(self, filename, mode='r'):\n        if hasattr(filename, 'AbsoluteLocalPath'):\n            filename = filename.AbsoluteLocalPath()\n        for file_ in self.files:\n            if file_.LocalPath() == filename:\n                return '\\n'.join(file_.NewContents())\n        # Otherwise, file is not in our mock API.\n        raise IOError(\"No such file or directory: '%s'\" % filename)\n\n\nclass MockOutputApi(object):\n    \"\"\"Mock class for the OutputApi class.\n\n    An instance of this class can be passed to presubmit unittests for outputting\n    various types of results.\n    \"\"\"\n\n    class PresubmitResult(object):\n        def __init__(self, message, items=None, long_text=''):\n            self.message = message\n            self.items = items\n            self.long_text = long_text\n\n        def __repr__(self):\n            return self.message\n\n    class PresubmitError(PresubmitResult):\n        def __init__(self, message, items=None, long_text=''):\n            MockOutputApi.PresubmitResult.__init__(\n                self, message, items, long_text)\n            self.type = 'error'\n\n    class PresubmitPromptWarning(PresubmitResult):\n        def __init__(self, message, items=None, long_text=''):\n            MockOutputApi.PresubmitResult.__init__(\n                self, message, items, long_text)\n            self.type = 'warning'\n\n    class PresubmitNotifyResult(PresubmitResult):\n        def __init__(self, message, items=None, long_text=''):\n            MockOutputApi.PresubmitResult.__init__(\n                self, message, items, long_text)\n            self.type = 'notify'\n\n    class PresubmitPromptOrNotify(PresubmitResult):\n        def __init__(self, message, items=None, long_text=''):\n            MockOutputApi.PresubmitResult.__init__(\n                self, message, items, long_text)\n            self.type = 'promptOrNotify'\n\n    def __init__(self):\n        self.more_cc = []\n\n    def AppendCC(self, more_cc):\n        self.more_cc.append(more_cc)\n\n\nclass MockFile(object):\n    \"\"\"Mock class for the File class.\n\n    This class can be used to form the mock list of changed files in\n    MockInputApi for presubmit unittests.\n    \"\"\"\n\n    def __init__(self, local_path, new_contents, old_contents=None, action='A',\n                 scm_diff=None):\n        self._local_path = local_path\n        self._new_contents = new_contents\n        self._changed_contents = [(i + 1, l)\n                                  for i, l in enumerate(new_contents)]\n        self._action = action\n        if scm_diff:\n            self._scm_diff = scm_diff\n        else:\n            self._scm_diff = (\n                \"--- /dev/null\\n+++ %s\\n@@ -0,0 +1,%d @@\\n\" %\n                (local_path, len(new_contents)))\n            for l in new_contents:\n                self._scm_diff += \"+%s\\n\" % l\n        self._old_contents = old_contents\n\n    def Action(self):\n        return self._action\n\n    def ChangedContents(self):\n        return self._changed_contents\n\n    def NewContents(self, flush_cache=False):\n        return self._new_contents\n\n    def LocalPath(self):\n        return self._local_path\n\n    def AbsoluteLocalPath(self):\n        return self._local_path\n\n    def GenerateScmDiff(self):\n        return self._scm_diff\n\n    def OldContents(self):\n        return self._old_contents\n\n    def rfind(self, p):\n        \"\"\"os.path.basename is called on MockFile so we need an rfind method.\"\"\"\n        return self._local_path.rfind(p)\n\n    def __getitem__(self, i):\n        \"\"\"os.path.basename is called on MockFile so we need a get method.\"\"\"\n        return self._local_path[i]\n\n    def __len__(self):\n        \"\"\"os.path.basename is called on MockFile so we need a len method.\"\"\"\n        return len(self._local_path)\n\n    def replace(self, altsep, sep):\n        \"\"\"os.path.basename is called on MockFile so we need a replace method.\"\"\"\n        return self._local_path.replace(altsep, sep)\n\n\nclass MockAffectedFile(MockFile):\n    def AbsoluteLocalPath(self):\n        return self._local_path\n\n\nclass MockChange(object):\n    \"\"\"Mock class for Change class.\n\n    This class can be used in presubmit unittests to mock the query of the\n    current change.\n    \"\"\"\n\n    def __init__(self, changed_files):\n        self._changed_files = changed_files\n        self.author_email = None\n        self.footers = defaultdict(list)\n\n    def LocalPaths(self):\n        return self._changed_files\n\n    def AffectedFiles(self, include_dirs=False, include_deletes=True,\n                      file_filter=None):\n        return self._changed_files\n\n    def GitFootersFromDescription(self):\n        return self.footers\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.140625,
          "content": "Skia is a complete 2D graphic library for drawing Text, Geometries, and Images.\n\nSee full details, and build instructions, at https://skia.org.\n"
        },
        {
          "name": "README.chromium",
          "type": "blob",
          "size": 0.1298828125,
          "content": "Name: Skia\nURL: https://skia.org/\nVersion: N/A\nRevision: DEPS\nSecurity Critical: yes\nShipped: yes\nLicense: BSD\nLicense File: LICENSE\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 101.4794921875,
          "content": "Skia Graphics Release Notes\n\nThis file includes a list of high level updates for each milestone release.\n\nMilestone 133\n-------------\n  * Graphite's `Context` now provides an interface to report the GPU time spent processing a recording. The client provides\n    a different finished proc of type `skgpu::graphite::GpuFinishedWithStatsProc` using\n    `skgpu::graphite::InsertRecordingInfo::fFinishedWithStatsProc` and sets the flag\n    `skgpu::graphite::InsertRecordingInfo::fGpuStatsFlag` to `skgpu::GpuStatsFlags::kElapsedTime`. The new callback takes a\n    new struct, `skgpu::GpuStats`, which has an `elapsedTime` field that will indicate the amount of GPU time used by the\n    recording. This is implemented for the Dawn backend only. In WASM on WebGPU the reported time excludes any GPU transfers\n    that occur before the first render/compute pass or after the last pass because of limitations in the WebGPU timestamp\n    query API.\n\n    `GrDirectContext` provides a similar interface to report the GPU time spent in a flush. The client uses a new callback\n    type, `GrGpuFinishedWithStatsProc` and sets the same flag on `GrFlushInfo`. This is implemented for GL\n    (including GLES and WebGL).\n  * Graphite's logging priority can now be adjusted by defining\n    `SKGPU_GRAPHITE_LOWEST_ACTIVE_LOG_PRIORITY` in `SkUserConfig.h` to a value specified by the\n    `skgpu::graphite::LogPriority` enum.\n\n    For example:\n    ```\n    #define SKGPU_GRAPHITE_LOWEST_ACTIVE_LOG_PRIORITY skgpu::graphite::LogPriority::kWarning\n    ```\n\n    Would cause Graphite to log warnings, non-fatal errors, and fatal errors. However, debug logs would\n    be omitted.\n\n    `SKGPU_GRAPHITE_LOWEST_ACTIVE_LOG_PRIORITY` will default to `kWarning` in debug builds, and `kError`\n    in release builds.\n  * Split MtlGraphiteTypes.h into two files. MtlGraphiteTypes.h defines MtlTextureInfo, which is only available in Objective-C++. MtlGraphiteTypesUtils.h declares the utility functions that are callable from C++.\n  * `SK_CANVAS_SAVE_RESTORE_PREALLOC_COUNT` has been added to SkUserConfig.h and SkCanvas.h to let clients control\n    how much space is allocated for calls to `SkCanvas::save()`. Clients that don't make many calls can reduce the RAM used by `SkCanvas` by setting this (defaults to about 3kb).\n  * New public API: `SkColorSpace::MakeCICP` to create an `SkColorSpace` from code\n    points specified in Rec. ITU-T H.273.\n  * The ability to dump a SkSL::DebugTrace to JSON has been removed from the public API.\n  * `approximateFilteredBounds` has been removed from SkMaskFilter.\n  * A new PrecompileContext object has been added to assist Precompilation. The old API of the form:\\\n        bool Precompile(Context*, ...);\\\n    has been deprecated and replaced with the API:\\\n        bool Precompile(PrecompileContext*, ...)\\\n    The new PrecompileContext object can be obtained via the Context::makePrecompileContext call.\n\n    As an example of a possible Compilation/Precompilation threading model, one could employ 4 threads:\n\n    2 for creating Recordings (\\<r1\\> and \\<r2\\>) \\\n    1 for precompiling (\\<p1\\>) \\\n    and the main thread - which owns the Context and submits Recordings.\n\n    Start up for this scenario would look like:\n\n      the main thread moves a PrecompileContext to <p1> and begins precompiling there\\\n      the main thread creates two Recorders and moves them to <r1> and <r2> to create Recordings\\\n      the main thread continues on - calling Context::insertRecording on the posted Recordings.\n\n    The PrecompileContext can safely outlive the Context that created it, but it will\n    effectively be shut down at that point.\n  * Graphite has a new `ContextOptions::fRequiredOrderedRecordings` flag that enables certain optimizations when the\n    client knows that recordings are played back in order. Otherwise Graphite will need to clear some caches at the\n    start of each recording to ensure proper playback, which can significantly affect performance.\n\n    This replaces the old `ContextOptions::fDisableCachedGlyphUploads` flag.\n\n* * *\n\nMilestone 132\n-------------\n  * A new `SkCodec` method has been added: `hasHighBitDepthEncodedData`.\n  * `GrGLInterface` completeness requirements are modified to support using timer queries when available in the GL context.\n    The interface must have relevant functions initialized on OpenGL 3.3 or with GL_EXT_timer_query or GL_ARB_timerquery, on OpenGL ES with\n    GL_EXT_disjoint_timer_query, and on WebGL with GL_EXT_disjoint_timer_query or GL_EXT_disjoint_timer_query_webgl2.\n  * `GrGLInterface` now expects functions that take two `GLuints` instead of one `GLuint64` for `glWaitSync` and `glClientWaitSync`\n    when building with Emscripten. `GrGLMakeAssembledWebGLInterface` binds directly to the `emscipten_gl*` functions declared in the `<webgl/*>` headers rather than the functions declared\n    in `GLES3/gl32.h` and `GLES3/gl2ext.h`.\n  * `SkPathEffect::DashType`, `SkPathEffect::DashInfo` and `SkPathEffect::asADash` have been removed from the public API.\n\n* * *\n\nMilestone 131\n-------------\n  * `SkCanvas::SaveLayerRec` can optionally specify a tilemode to apply to backdrop\n    content when the new layer's effects would sample outside of the previous\n    layer's image.\n  * GrContextOptions::fSharpenMipmappedTextures has been restored. It is now enabled\n    by default but allows clients to disable this feature if desired.\n\n* * *\n\nMilestone 130\n-------------\n  * Add version of `SkAndroidCodec::getGainmapAndroidCodec` which returns an `SkAndroidCodec` instead\n    of an `SkStream`. Mark as deprecated the version that returns an `SkStream`.\n  * `SkColorFilter::filterColor` has been removed. Please use `SkColorFilter::filterColor4f` instead.\n  * SkFourByteTag has been moved to its own file: `include/core/SkFourByteTag.h`\n  * Ganesh files have been moved out of include/gpu/ into include/gpu/ganesh/. Shims have been left in place, but clients should migrate to the new paths.\n  * GR_GL_CUSTOM_SETUP_HEADER will be removed. Configuration in a client provided\n    SkUserConfig.h file (or defines set during compilation) are sufficient to affect\n    settings in GrGLConfig.h\n  * `GR_MAKE_BITFIELD_CLASS_OPS` and `GR_DECL_BITFIELD_CLASS_OPS_FRIENDS` have been removed\n    from the public API\n  * `SkMSec` has been removed from the public API, including `SkParse::FindMSec`\n  * A noop change to our SkSL runtime effect builder APIs. Moved make functions from subclasses\n    SkRuntimeShaderBuilder, SkRuntimeColorFilterBuilder, and SkRuntimeBlendBuilder to the base class\n    SkRuntimeEffectBuilder.\n\n* * *\n\nMilestone 129\n-------------\n  * The Dawn-specific constructors and methods on `skgpu::graphite::TextureInfo`,\n    `skgpu::graphite::BackendTexture`, have been deprecated and\n    moved to be functions in `DawnTypes.h`\n  * `SkImageFilters::DropShadow` and `SkImageFilters::DropShadowOnly` now accept\n    `SkColor4f` and `SkColorSpace` for the shadow color.\n  * `SkScalerContext::MakeRecAndEffects` now converts `SkFont::isEmbolden` to the `kEmbolden_Flag`.\n    It no longer automatically converts embolden requests into (more) stroking.\n    This can now (optionally) be done in `SkTypeface::onFilterRec` by calling the new `SkScalerContextRec::useStrokeForFakeBold()`.\n  * Skia no longer tests building against iOS 11.\n    The minimum deployment target is now iOS 12 as this is the minimum deplyment target for Xcode 15.\n  * The Vulkan-specific constructors and methods on `skgpu::graphite::TextureInfo`,\n    `skgpu::graphite::BackendTexture`, `skgpu::graphite::BackendSemaphore` have been deprecated and\n    moved to be functions in `VulkanGraphiteTypes.h`\n\n* * *\n\nMilestone 128\n-------------\n  * SkSL now properly reports an error if user code includes various GLSL reserved keywords.\n    Previously, Skia would correctly reject keywords that were included in \"The OpenGL ES\n    Shading Language, Version 1.00,\" but did not detect reserved keywords added in more modern\n    GLSL versions. Instead, Skia would allow such code to compile during the construction of a\n    runtime effect, but actually rendering the effect using a modern version of OpenGL would\n    silently fail (or assert) due to the presence of the reserved name in the the code.\n\n    Examples of reserved names which SkSL will now reject include `dmat3x3`, `atomic_uint`,\n    `isampler2D`, or `imageCubeArray`.\n\n    For a more thorough list of reserved keywords, see the \"3.6 Keywords\" section of the\n    OpenGL Shading Language documentation.\n  * The following symbols (and their files) have been deleted in favor of their\n    GPU-backend-agnostic form:\n     - `GrVkBackendContext` -> `skgpu::VulkanBackendContext`\n     - `GrVkExtensions` -> `skgpu::VulkanExtensions`\n     - `GrVkMemoryAllocator` = `skgpu::VulkanMemoryAllocator`\n     - `GrVkBackendMemory` = `skgpu::VulkanBackendMemory`\n     - `GrVkAlloc` = `skgpu::VulkanAlloc`\n     - `GrVkYcbcrConversionInfo` = `skgpu::VulkanYcbcrConversionInfo`\n     - `GrVkGetProc` = `skgpu::VulkanGetProc`\n  * The Metal-specific constructors and methods on `skgpu::graphite::TextureInfo`,\n    `skgpu::graphite::BackendTexture`, `skgpu::graphite::BackendSemaphore` have been deprecated and\n    moved to be functions in `MtlGraphiteTypes.h`\n  * SkImage now has a method makeScaled(...) which returns a scaled version of\n    the image, retaining its original \"domain\"\n    - raster stays raster\n    - ganesh stays ganesh\n    - graphite stays graphite\n    - lazy images become raster (just like with makeSubset)\n\n* * *\n\nMilestone 127\n-------------\n  * SkSL now properly recognizes the types `uvec2`, `uvec3` or `uvec4`.\n\n    Unsigned types are not supported in Runtime Effects, as they did not exist in GLSL ES2; however,\n    SkSL should still recognize these typenames and reject them if they are used in a program.\n    That is, we should not allow `uvec3` to be used as a variable or function name. We will now properly\n    detect and reject this as an error.\n  * The following deprecated fields have been removed from `GrVkBackendContext`:\n     - `fMinAPIVersion`. Use `fMaxAPIVersion` instead.\n     - `fInstanceVersion`. Use `fMaxAPIVersion` instead.\n     - `fFeatures`. Use `fDeviceFeatures` or `fDeviceFeatures2` instead.\n     - `fOwnsInstanceAndDevice`. No replacement, as it had no effect.\n\n    `GrVkBackendContext` is now an alias for `skgpu::VulkanBackendContext`. Clients should use the latter, as the former will be eventually removed.\n  * SkShaderMaskFilters and SkTableMaskFilters have been deprecated. They will be removed entirely in an upcoming Skia release.\n\n* * *\n\nMilestone 126\n-------------\n  * Skia's internal array class (`skia_private::TArray<T>`) now protects its unused capacity when\n    [Address Sanitizer (ASAN)](https://clang.llvm.org/docs/AddressSanitizer.html) is enabled. Code which\n    inadvertently writes past the end of a Skia internal structure is now more likely to trigger an ASAN\n    error.\n  * `SkFloat2Bits` and `SkBits2Float` have been removed from the Skia public headers. These were always\n    private API (since they lived in `/include/private`) but they had leaked into some example code, and\n    tended to be available once a handful of Skia headers were #included.\n  * SkSL now allows the ++ and -- operators on vector and matrix variables.\n\n    Previously, attempting to use these operators on a vector or matrix would lead to an error. This was\n    a violation of the GLSL expression rules (5.9): \"The arithmetic unary operators negate (-), post-\n    and pre-increment and decrement (-- and ++) operate on integer or floating-point values (including\n    vectors and matrices).\"\n  * `SkScalarIsFinite`, `SkScalarsAreFinite`, and `SkScalarIsNaN` have been removed from the Skia API.\n    These calls can be replaced with the functionally-equivalent `std::isfinite` and `std::isnan`.\n  * Clients can explicitly make a Ganesh GL backend for iOS with\n    `GrGLInterfaces::MakeIOS` from `include/gpu/ganesh/gl/ios/GrGLMakeIOSInterface.h`\n  * Clients can explicitly make a Ganesh GL backend for Mac with\n    `GrGLInterfaces::MakeMac` from `include/gpu/ganesh/gl/mac/GrGLMakeMacInterface.h`\n  * The following headers have been relocated (notice \"ganesh\" in the filepath):\n     - include/gpu/gl/egl/GrGLMakeEGLInterface.h -> include/gpu/ganesh/gl/egl/GrGLMakeEGLInterface.h\n     - include/gpu/gl/glx/GrGLMakeGLXInterface.h -> include/gpu/ganesh/gl/glx/GrGLMakeGLXInterface.h\n     - include/gpu/gl/epoxy/GrGLMakeEpoxyEGLInterface.h -> include/gpu/ganesh/gl/epoxy/GrGLMakeEpoxyEGLInterface.h\n\n* * *\n\nMilestone 125\n-------------\n  * The size of the GPU memory cache budget can now be queried using member `maxBudgetedBytes` of `skgpu::graphite::Context` and `skgpu::graphite::Recorder`.\n  * Added `skgpu::graphite::Context::maxTextureSize()`, which exposes the maximum\n    texture dimension supported by the underlying backend.\n  * Using a MTLBinaryArchive to pre-load the MSL shader cache is no longer\n    supported in Ganesh, and the fBinaryArchive member of GrMtlBackendContext\n    has been removed.\n  * The `sksl-minify` tool can now eliminate unnecessary braces. For instance,\n    given the following SkSL code:\n\n    ```\n    if (condition) {\n        return 1;\n    } else {\n        return 2;\n    }\n    ```\n\n    The minifier will now emit:\n\n    ```\n    if(a)return 1;else return 2;\n    ```\n  * Added `SkBitmap::setColorSpace`. This API allows the colorspace of an existing\n    `SkBitmap` to be reinterpreted. The pixel data backing the bitmap will be left\n    as-is. The colorspace will be honored when the bitmap is accessed via APIs which\n    support colorspace conversion, like `readPixels`.\n  * `SkDrawLooper` has been removed completely from Skia. It was previously deprecated.\n  * Metal-specific constructors and methods have been removed from `GrBackendFormat`,\n    `GrBackendTexture`, and `GrBackendRenderTarget` and moved to\n    `include/gpu/ganesh/mtl/GrMtlBackendSurface.h`\n  * By default, //modules/skottie and //modules/svg will use primitive text shaping.\n    Clients that wish to use harfbuzz/icu for more correct shaping will need to\n    use one of the builders and call `setTextShapingFactory` with a newly-created\n    `SkShapers::Factory` implementation during construction.\n\n    For ease of configuration, `modules/skshaper/utils/FactoryHelpers.h` can be used\n    to provide this, but only if the client is depending on the correct skshaper\n    and skunicode modules (which should set defines such as `SK_SHAPER_HARFBUZZ_AVAILABLE`).\n\n    For example `builder.setTextShapingFactory(SkShapers::BestAvailable())` will use\n    Harfbuzz or CoreText for shaping if they were compiled in to the clients binary.\n\n* * *\n\nMilestone 124\n-------------\n  * `SkColorFilter::filterColor` is now deprecated and will eventually be removed in favor of `filterColor4f`.\n  * The Perlin noise shaders (`MakeFractalNoise` and `MakeTurbulence`) will now properly rotate when\n    transformed. On raster surfaces, the performance of Perlin noise has also been significantly\n    improved.\n  * Graphite's `SkImages::WrapTexture` now takes an additional parameter that indicates whether\n    a mipmapped texture should be used as is or whether Graphite should generate the upper level\n    contents from the base level contents.\n  * `GrBackendSemaphore::initMetal`, `GrBackendSemaphore::mtlSemaphore`, and\n    `GrBackendSemaphore::mtlValue` have been replaced with `GrBackendSemaphores::MakeMtl`,\n    `GrBackendSemaphores::GetMtlHandle`, and `GrBackendSemaphores::GetMtlValue`, defined in\n    `include/gpu/ganesh/mtl/GrMtlBackendSemaphore.h`\n  * `GrDirectContext::MakeMetal` has been moved to `GrDirectContexts::MakeMetal`, located in\n    `include/gpu/ganesh/mtl/GrMtlDirectContext.h`. The APIs that passed in void* have been removed\n    in that change, so clients who use those need to create a `GrMtlBackendContext` themselves.\n\n    `include/gpu/mtl/GrMtlTypes.h` and `include/gpu/mtl/GrMtlBackendContext.h` have been relocated to\n    `include/gpu/ganesh/mtl/GrMtlTypes.h` and `include/gpu/ganesh/mtl/GrMtlBackendContext.h`\n    respectively.\n  * Added `SkCodecs::DeferredImage` which is similar to `SkImages::DeferredFromEncodedData` except it\n    allows the caller to pass in a `SkCodec` directly instead of depending on compiled-in codecs.\n  * The following SkShaper functions have been moved or deleted:\n      - SkShaper::MakePrimitive() -> SkShapers::Primitive()\n      - SkShaper::MakeShaperDrivenWrapper() -> SkShapers::HB::ShaperDrivenWrapper()\n      - SkShaper::MakeShapeThenWrap() -> SkShapers::HB::ShapeThenWrap()\n      - SkShaper::MakeShapeDontWrapOrReorder() -> SkShapers::HB::ShapeDontWrapOrReorder()\n      - SkShaper::MakeCoreText() -> SkShapers::CT::CoreText()\n      - SkShaper::Make() -> deleted, use one of the above directly,\n      - SkShaper::MakeSkUnicodeBidiRunIterator() -> SkShapers::unicode::BidiRunIterator()\n      - SkShaper::MakeBiDiRunIterator() -> deleted, use SkShapers::unicode::BidiRunIterator() or SkShapers::TrivialBiDiRunIterator()\n      - SkShaper::MakeIcuBiDiRunIterator() -> deleted, use SkShapers::unicode::BidiRunIterator()\n      - SkShaper::MakeSkUnicodeHbScriptRunIterator() -> SkShapers::HB::ScriptRunIterator()\n      - SkShaper::MakeHbIcuScriptRunIterator() -> SkShapers::HB::ScriptRunIterator()\n      - SkShaper::MakeScriptRunIterator() -> deleted, use SkShapers::HB::ScriptRunIterator() or SkShapers::TrivialScriptRunIterator\n\n    Additionally, two `SkShaper::shape` method overloads have been removed - clients now need to\n    specify all 10 arguments (although it is common to pass in nullptr for features).\n  * `SkStream::getData()` has been added as a virtual. Subclasses can implement this if it is efficient\n    to turn the underlying contents into an SkData (e.g. SkStreamMemory). `SkStreamMemory::asData()`\n    has been renamed to `getData()` as a result of this change and will be removed in a future release.\n\n* * *\n\nMilestone 123\n-------------\n  * When `SkCodec::SelectionPolicy::kPreferStillImage` is passed to `SkWuffsCodec`/`SkGifDecoder`\n    creation, and the input stream cannot be rewound, the resulting `SkWuffsCodec` will no longer copy\n    the stream. Because it will now have a non-seekable stream, it no longer supports `getFrameCount`,\n    which will now simply report `1`, or `getFrameInfo`, which is useful only for animation anyway.\n    Chromium uses `kPreferStillImage`, simply because it is the default, but will not be affected by\n    this change because it always supplies a seekable stream.\n  * A `kDefault_Flag = 0` value has been added to the `SkSurfaceProps::Flags` enum. This is just a\n    self-documenting zero-value that aims to improve code readability, e.g.:\n\n    ```\n    // The two lines below are equivalent.\n\n    SkSurfaceProps(/* surfaceFlags= */ 0, kRGB_H_SkPixelGeometry);\n\n    SkSurfaceProps(SkSurfaceProps::kDefault_Flag, kRGB_H_SkPixelGeometry);\n    ```\n  * In native builds the default use of `wgpu::Device::Tick` to detect GPU progress has been updated\n    to use `wgpu::Instance::ProcessEvents` instead. To simulate the non-yielding behavior of `Context`\n    in native `DawnBackendContext::fTick` may still be explicitly set to `nullptr`.\n  * The Vulkan backend for both Ganesh and Graphite will now invoke an optional client-provided callback\n    function when a `VK_ERROR_DEVICE_LOST` error code is returned from the Vulkan driver. Additional\n    debugging information will be passed from the driver to this callback if the `VK_EXT_device_fault`\n    extension is supported and enabled.\n\n    This optional callback can be be provided via the `fDeviceLostContext` and `fDeviceLostProc` fields\n    on `GrVkBackendContext` (Ganesh) and `VulkanBackendContext` (Graphite).\n  * `SkAnimCodecPlayer` has been removed from the public API.\n  * `SkCodec::getImage()` will now respect the origin in the metadata (e.g. Exif metadata that\n    rotates the image). This may mean callers who provide an SkImageInfo may need to rotate it,\n    e.g. via `SkPixmapUtils::SwapWidthHeight`.\n\n* * *\n\nMilestone 122\n-------------\n  * `graphite::BackendTexture` can be created from a `WGPUTextureView`. This comes with a\n    perfomance cost when reading pixels to or writing pixels from the CPU. An intermediate\n    WGPUTexture is created to support these operations. However, this enables creating\n    `SkSurface` or `SkImage` from `wgpu::SwapChain::GetCurrentTextureView`.\n  * SkSL now properly reports an error if the body of a for-loop declares a variable which shadows the\n    for-loop induction variable.\n\n    In other words, SkSL code like this will now generate an error:\n\n    ```\n        for (int x = 0; x < 10; ++x) {\n            int x = 123;  // error: symbol 'x' was already defined\n        }\n    ```\n\n    Previously, the declaration of `x` would be allowed, in violation of the GLSL scoping rules (6.3):\n    \"For both for and while loops, the sub-statement does not introduce a new scope for variable names.\"\n  * The PDF code now directly depends on Skia's JPEG decoder and encoder. The build\n    time shims to avoid using a JPEG decoder and encoder have been removed. In the\n    future these may be made optional again by allowing the user to supply them at\n    runtime.\n  * SkSL variables declared inside of a switch statement will now properly fall out of scope after the\n    closing brace of the switch-block, as one would expect.\n\n    In other words, SkSL code like this will now generate an error:\n\n    ```\n        switch (n) {\n            case 1:\n                int x = 123;\n        }\n        return x; // error: unknown identifier 'x'\n    ```\n\n    Previously, `x` would remain accessible after the switch's closing brace.\n  * `skgpu::graphite::ContextOptions::fNeverYieldToWebGPU` is removed. Instead, yielding in an\n    Emscripten build is controlled by installing a client-provided function on\n    `skgpu::graphite::DawnBackendContext`. The client may install a function that uses Asyncify to\n    yield to the main thread loop. If no function is installed then the Context has the same\n    restrictions as with the old option.\n\n    In native builds the default is to use `wgpu::Device::Tick` to detect GPU progress. To simulate the\n    non-yielding behavior of `Context` in native `DawnBackendContext::fTick` may be explicitly set to\n    to `nullptr`.\n\n    By externalizing the use of Asyncify it is possible to build Skia without generated JS\n    code that relies on Asyncify.\n  * SkSL will now properly report an error if a function contains a top-level variable with the same\n    name as a function parameter. SkSL intends to match the scoping rules of GLSL, in particular: \"A\n    function’s parameter declarations and body together form a single scope nested in the global scope.\"\n\n    A program like this will now be rejected:\n\n    ```\n        void func(int var) {\n            int var;\n        }\n\n        error: 2: symbol 'var' was already defined\n            int var;\n            ^^^^^^^\n    ```\n  * `SkFont::getTypeface()` will no longer return a nullptr to indicate \"the default typeface\".\n    If left unspecified, SkFonts will use an empty typeface (e.g. no glyphs).\n  * `SkFontMgr::RefDefault()` has been deleted. Clients should instantiate and manage their own\n    `SkFontMgr`s and use them to explicitly create `SkTypeface`s\n  * `GrGLMakeNativeInterface` has been deprecated and will eventually be removed. Clients should\n    be calling the precise factory (e.g. `GrGLInterfaces::makeGLX`) they need. Some APIs that currently allow a nullptr GrGLInterface will be stop allowing this (e.g. `GrDirectContexts::MakeGL`).\n  * `SkFontArguments::Palette::Override`'s index member is changing from an `int`\n    type to `uint16_t` to make the size exact and remove an unneeded\n    signedness. This avoids platform/compiler-specific size ambiguiity and more\n    closely matches the OpenType CPAL table.\n\n* * *\n\nMilestone 121\n-------------\n  * `SkFontConfigInterface::makeTypeface` now has a required `sk_sp<SkFontMgr>` parameter to be used for\n    parsing the font data from the stream.\n  * `skgpu::graphite::ContextOptions` has a new field, `fNeverYieldToWebGPU`. This new option\n    is only valid with the Dawn backend. It indicates that `skgpu::graphite::Context` should never yield\n    to Dawn. In native this means `wgpu::Device::Tick()` is never called. In Emscripten it\n    means `Context` never yields to the main thread event loop.\n\n    When the option is enabled, `skgpu::SyncToCpu::kYes` is ignored when passed to\n    `Context::submit()`. Moreover, it is a fatal error to have submitted but unfinished\n    GPU work before deleting `Context`. A new method, `hasUnfinishedGpuWork()` is added\n    to `Context` that can be used to test this condition.\n\n    The intent of this option is to be able to use Graphite in WASM without requiring Asyncify.\n  * Deprecated `GrMipmapped` and `GrMipMapped` alias have been removed in favor of `skgpu::Mipmapped`.\n  * Harfbuzz-backed SkShaper instances will no longer treat a null SkFontMgr as meaning \"use the\n    default SkFontMgr for fallback\" and instead will *not* do fallback for glyphs missing from a font.\n  * `GrBackendSemaphore::initVk` and `GrBackendSemaphore::vkSemaphore` have been replaced with\n    `GrBackendSemaphores::MakeVk` and `GrBackendSemaphores::GetVkSemaphore`, defined in\n    `include/gpu/ganesh/vk/GrVkBackendSemaphore.h`\n  * The Vulkan-specific methods and constructor of `MutableTextureState` have been deprecated in favor\n    of those found in `include/gpu/vk/VulkanMutableTextureState.h`.\n\n* * *\n\nMilestone 120\n-------------\n  * `SkBase64.h` has been removed from the public API.\n  * `SkFont::refTypefaceOrDefault` and `SkFont::getTypefaceOrDefault()` have been removed from the\n    public API.\n  * `GrBackendSemaphore::initGL` and `GrBackendSemaphore::glSync` have been removed\n    from the public API.\n  * For Graphite, `SkImages::AdoptTextureFrom` has been renamed to `SkImages::WrapTexture` to\n    better reflect what is happening to the passed in texture.\n  * `GrSurfaceInfo.h` has been removed from the public API.\n  * SkMesh now allows shaders, color filters, and blenders to be used in the mesh-fragment program.\n    Pass in effects using the `children` parameter of `SkMesh::Make` or `SkMesh::MakeIndexed`.\n    For a working example, see `gm/mesh.cpp`.\n  * The behavior for SkPicture deserialization (via SkReadBuffer) to fallback to\n    `SkImages::DeferredFromEncodedData` when `SkDeserialImageProc` is not set or returns null is\n    deprecated and will be removed shortly.\n\n    `SkDeserialImageFromDataProc` has been added to SkDeserialProcs to allow clients to *safely*\n    avoid a copy when decoding image data in SkPictures.\n\n    `SkDeserialImageProc` now takes in an optional AlphaType which can be used to override the\n    AlphaType that an image was serialized with, if desired.\n  * skgpu::graphite::RecorderOptions::kDefaultRecorderBudget is now a static data member.\n  * `SkTypeface::MakeFromName`, `SkTypeface::MakeFromFile`, `SkTypeface::MakeFromStream`, and\n    `SkTypeface::MakeFromData` are deprecated and will be removed eventually. These should be replaced\n    with calls directly to the SkFontMgr that can provide the appropriate typefaces.\n\n    `SkTypeface::MakeDefault()` has been deprecated. Soon it will return an empty typeface and\n    eventually be removed.\n\n    `SkTypeface::UniqueID()` has been removed - clients should use the method instead of this static\n    function.\n  * `GrDirectContext::MakeVulkan...` has been moved to `GrDirectContexts::MakeVulkan...` which are defined\n    in `include/gpu/ganesh/vk/GrVkDirectContext.h`\n  * The various GPU wait calls on GrDirectContext, SkSurface, and GrVkSecondaryCBContext which take\n    a client supplied semaphore, now only guarantee to block the gpu transfer and fragment stages\n    instead of all gpu commands. This shouldn't affect any client since client provided gpu resources\n    (e.g. textures) are only ever used by Skia in the fragment stages.\n\n* * *\n\nMilestone 119\n-------------\n  * Added new `SkImageFilters::Crop(SkRect, SkTileMode, sk_sp<SkImageFilter>)` image filter effect that crops the output from the wrapped SkImageFilter and optionally applies the SkTileMode when sampling outside of the crop rect.\n  * `GrDirectContext::MakeGL...` has been moved to `GrDirectContexts::MakeGL...` which are defined\n    in `include/gpu/ganesh/gl/GrGLDirectContext.h`\n  * `GrDirectContext::submit` and `GrDirectContext::flushAndSubmit` calls now take a GrSyncCpu enum\n    instead of a error-prone boolean.\n\n    Similarly, calls to `GrDirectContext::performDeferredCleanup` and\n    `GrDirectContext::purgeUnlockedResources` take a GrPurgeResourceOptions enum.\n  * SkMeshSpecification no longer rejects fragment programs which include `uniform shader`, `uniform\n    colorFilter` or `uniform blender`. However, `SkMesh::Make` will not allow the mesh specification\n    to be used.\n  * `SkMesh::Make` and `SkMesh::MakeIndexed` now require a span of child effects as a new parameter.\n    This functionality is still a work in progress; for now, always pass an empty span.\n  * `sksl-minify` can now minify SkMesh programs. Pass `--meshvert` or `--meshfrag` to indicate\n    that the input program is an SkMesh vertex or fragment program. When minifying a mesh program,\n    you must supply `struct Varyings` and `struct Attributes` which correspond to the\n    SkMeshSpecification; these will be eliminated from the minified output.\n  * `SkMergePathEffect`, `SkMatrixPathEffect`, `SkStrokePathEffect`, and\n    `SkStrokeAndFillPathEffect` have been removed from the public API.\n    These effects can be implemented on the SkPath objects directly using other means and clients\n    will likely find performance boosts by doing so.\n  * `SkShadowFlags` are now visible in `include/utils/SkShadowUtils.h`\n  * `SkPicture`s no longer serialize `SkImage`s to PNG encoded data by default. Clients who wish to\n    preserve this should make use of `SkSerialProcs`, specifically the `fImageProc` field.\n\n* * *\n\nMilestone 118\n-------------\n  * `GrDirectContext::flush` variants now expect a SkSurface pointer only, not\n    an sk_sp<SkSurface>.\n  * `SkImage::makeWithFilter` has been deprecated. It has been replaced with three factory functions:\n\n    Ganesh:   `SkImages::MakeWithFilter(GrRecordingContext*, ...);`         -- declared in SkImageGanesh.h\n\n    Graphite: `SkImages::MakeWithFilter(skgpu::graphite::Recorder*, ...);`  -- declared in Image.h\n\n    Raster:   `SkImages::MakeWithFilter(...);`                              -- declared in SkImage.h\n\n    The new factories require the associated backend context object be valid. For example, the Graphite version will return nullptr if it isn't supplied with a `Recorder` object.\n  * SkSL and Runtime Effects are no longer optional features of Skia; they are always available.\n    The GN flag `skia_enable_sksl` has been removed.\n  * SkSL will now properly reject sequence-expressions containing arrays, or sequence-expressions\n    containing structures of arrays. Previously, the left-side expression of a sequence was checked,\n    but the right-side was not. In GLSL ES 1.0, and therefore in SkSL, the only operator which is\n    allowed to operate on arrays is the array subscript operator (`[]`).\n  * The Dawn backend for Ganesh has been removed. Dawn will continue to be supported in the\n    Graphite backend.\n  * We plan to remove SkTime.h from the public API. As of now, SkAutoTime has been\n    deleted as it was unused.\n  * Vulkan-specific calls are being removed from GrBackendSurface.h. Clients should use the\n    equivalents found in `include/gpu/ganesh/vk/GrVkBackendSurface.h\"`\n\n* * *\n\nMilestone 117\n-------------\n  * `SkGraphics::AllowJIT()` has been removed. It was previously deprecated (and did nothing).\n  * New methods are added to `SkImage`, `SkSurface`, and `skgpu::graphite::context` named\n    `asyncRescaleAndReadPixeksYUVA420`. These function identically to the existing\n    `asyncRescaleAndReadPixelsYUV420` methods but return a fourth plane containing alpha at full\n    resolution.\n  * `SkAutoGraphics` was removed. This was a helper struct that simply called `SkGraphics::Init`.\n    Any instance of `SkAutoGraphics` can be replaced with a call to `SkGraphics::Init`.\n  * `SkCanvas::flush()` has been removed. It can be replaced with:\n    ```\n        if (auto dContext = GrAsDirectContext(canvas->recordingContext())) {\n            dContext->flushAndSubmit();\n        }\n    ```\n\n    `SkCanvas::recordingContext()` and `SkCanvas::recorder()` are now const. They were implicitly const\n    but are now declared to be such.\n  * `SkCanvas::recordingContext()` and `SkCanvas::recorder()` are now const.\n    They were implicitly const but are now declared to be such.\n  * `SkMesh::MakeIndexBuffer`, `SkMesh::CopyIndexBuffer`, `SkMesh::MakeVertexBuffer`, and\n    `SkMesh::CopyVertexBuffer` have been moved to the `SkMeshes` namespace. Ganesh-specific versions\n    have been created in `include/gpu/ganesh/SkMeshGanesh.h`.\n  * SkPath now enforces an upper limit of 715 million path verbs.\n  * `SkRuntimeEffectBuilder::uniforms()`, `SkRuntimeEffectBuilder::children()`,\n    `SkRuntimeShaderBuilder::makeShader()`, `SkRuntimeColorFilterBuilder::makeColorFilter()`, and\n    `SkRuntimeBlendBuilder::makeBlender()` are now marked as const. No functional changes internally,\n    just making explicit what had been implicit.\n  * `SkRuntimeEffect::makeImage` and `SkRuntimeShaderBuilder::makeImage` have been removed.\n  * GL-specific calls have been removed from GrBackendSurface.h. Clients should use the\n    equivalents found in `include/gpu/ganesh/gl/GrGLBackendSurface.h`\n  * A new `SkTiledImageUtils` namespace (in `SkTiledImageUtils.h`) provides `DrawImage` and `DrawImageRect` methods that directly mirror `SkCanvas'` `drawImage` and `drawImageRect` calls.\n\n    The new entry points will breakup large `SkBitmap`-backed `SkImages` into tiles and draw them if they would be too large to upload to the gpu as one texture.\n\n    They will fall through to their `SkCanvas` correlates if tiling isn't needed or possible.\n\n* * *\n\nMilestone 116\n-------------\n  * `SkPromiseImageTexture` has been removed from the public API, as well as\n    `SkImages::PromiseTextureFrom` and `SkImages::PromiseTextureFromYUVA`, public consumers of that\n    data type.\n  * `SkDeferredDisplayList`, `SkDeferredDisplayListRecorder`, and `SkSurfaceCharacterization` have\n    been removed from the public API.\n  * The intermediate color computed by `SkBlenders::Arithmetic` is now always clamped to between 0 and 1 (inclusive), and then `enforcePremul` is applied when that parameter is true.\n  * Added a new public type, `SkColorTable`, to own the lookup tables passed into `SkColorFilters::Table`, which allows clients and the returned `SkColorFilter` to share the table memory instead of having to duplicate it in any wrapper types that lazily create Skia representations.\n  * The deprecated `SkImageFilters::Magnifier` factory that did *not* take a lens bounds parameter has been removed.\n  * `SkImageFilters::RuntimeShader` has variations that take a maximum sample radius, which is used to provide padded input images to the runtime effect so that boundary conditions are avoided.\n  * `SkImageFilters::AlphaThreshold` has been removed. Its only use was in ChromeOS and that usage has been replaced with a `Blend(kSrcIn, input, Picture(region))` filter graph to achieve the same effect.\n  * The single-argument `SkImageFilters::Image(sk_sp<SkImage>)` factory is removed. The `SkSamplingOptions` to use when rendering the image during filtering must be provided. `SkFilterMode::kLinear` is recommended over the previous bicubic default.\n  * `GrTextureGenerator` now has a subclass `GrExternalTextureGenerator` which can be subclassed by\n    clients and used with `SkImages::DeferredFromTextureGenerator` in order to create images from\n    textures that were created outside of skia. `GrTextureGenerator` has been removed from the public\n    API in favor of `GrExternalTextureGenerator`.\n  * SkPoint now uses float for its coordinates. This starts the process of removing SkScalar from Skia.\n    SkScalar was a typedef for float, so this has no practical impact on code that uses Skia.\n  * `SkSamplingOptions(SkFilterMode)` and `SkSamplingOptions(SkCubicResampler)` are no longer marked `explicit` so that samplings can be created inline more succinctly.\n  * `SkShaders` is now a namespace (was previously a non-constructable class with only static\n    functions). `SkPerlinNoiseShader::MakeFractalNoise` and `SkPerlinNoiseShader::MakeTurbulence` have\n    been moved to the `SkShaders` namespace and `SkPerlinNoiseShader` (the public non-constructable\n    class) has been slated for moving into private internals of Skia.\n    There are no functional differences in the moved functions, however the change of some #includes\n    in `include/core/SkShader.h`, `include/effects/SkGradientShader.h`, and\n    `include/effects/SkPerlinNoiseShader.h` may cause clients who were depending on the transitive\n    dependencies to now fail to compile.\n  * The following methods have been removed from SkSurface and relocated to other methods/functions:\n      - `SkSurface::asImage` -> `SkSurfaces::AsImage` (include/gpu/graphite/Surface.h)\n      - `SkSurface::flushAndSubmit` -> `GrDirectContext::flushAndSubmit`\n      - `SkSurface::flush` -> `GrDirectContext::flush`\n      - `SkSurface::makeImageCopy` -> `SkSurfaces::AsImageCopy` (include/gpu/graphite/Surface.h)\n      - `SkSurface::resolveMSAA` -> `SkSurfaces::ResolveMSAA()` (include/gpu/ganesh/SkSurfaceGanesh.h)\n\n    Additionally, `SkSurface::BackendSurfaceAccess` is now in the `SkSurfaces` namespace.\n  * The deprecated `SkTableColorFilter` class and its methods have been removed. Clients should use\n    `SkColorFilters::Table` and `SkColorFilters::TableARGB` (defined in include/core/SkColorFilter.h).\n  * The `SkYUVAPixmapInfo::SupportedDataTypes(const GrImageContext&)` constructor has been removed from\n    the public API.\n\n* * *\n\nMilestone 115\n-------------\n  * Clients now need to register codecs which Skia should use to decode raw bytes. For example:\n    `SkCodecs::Register(SkJpegDecoder::Decoder());`. Skia still provides many supported formats\n    (see `include/codec/*Decoder.h`). Clients are free to specify their own, either supplementing\n    the existing set or using a custom version instead of the one previously provided by default\n    by Skia. See `SkCodecs::Decoder` for the necessary data to provide when using a custom decoder\n    (in `include/codec/SkCodec.h`).\n\n    To ease the transition, Skia will continue (for a short while) to register codecs unless\n    `SK_DISABLE_LEGACY_INIT_DECODERS` is defined.\n  * `SkDrawable::newPictureSnapshot` is removed. Instead, call `SkDrawable::makePictureSnapshot`.\n    The old method returned a bare (but ref-counted) pointer, which was easy for clients to get wrong.\n    The new method returns an `sk_sp<SkPicture>`, which is easier to handle, and consistent with the\n    rest of skia.\n  * `SkGraphics::PurgePinnedFontCache()` has been added to allow clients to\n    explicitly trigger `SkStrikeCache` purge checks for `SkStrikes` with\n    pinners. Defining `SK_STRIKE_CACHE_DOESNT_AUTO_CHECK_PINNERS` in the\n    user configuration now disables automatic purge checking of strikes with\n    pinners.\n  * The following SkImage factories have been moved to `include/gpu/graphite/Image.h`:\n     - `SkImage::MakeGraphiteFromBackendTexture -> SkImages::AdoptTextureFrom`\n     - `SkImage::MakeGraphiteFromYUVABackendTextures -> SkImages::TextureFromYUVATextures`\n     - `SkImage::MakeGraphiteFromYUVAPixmaps -> SkImages::TextureFromYUVAPixmaps`\n     - `SkImage::MakeGraphitePromiseTexture -> SkImages::PromiseTextureFrom`\n\n    The SkImage method `makeTextureImage` has been moved to `SkImages::TextureFromImage`.\n\n    `SkImage::RequiredImageProperties` has been renamed to `SkImage::RequiredProperties`,\n    with fMipmapped turned into a boolean instead of the GPU enum.\n  * `SkImage::makeColorSpace` and `SkImage::makeColorTypeAndColorSpace` now take a `GrDirectContext`\n    as the first parameter. This should be supplied when dealing with texture-backed images and can\n    be `nullptr` otherwise.\n  * `SkImage::subset` now takes a `GrDirectContext*` as its first parameter (this can be `nullptr` for\n    non-gpu backed images. Images which are backed by a codec or picture will not be turned into a GPU\n    texture before being read. This should only impact picture-backed images, which may not be read\n    correctly if the picture contain nested texture-backed images itself. To force a conversion to\n    a texture, clients should call `SkImages::TextureFromImage`, passing in the image, and then call\n    subset on the result. Documentation has been clarified that `SkImage::subset` will return a raster-\n    backed image if the source is not backed by a texture, and texture-otherwise.\n\n    `SkImages::SubsetTextureFrom` has been added to subset an image and explicitly return a texture-\n    backed image. This allows some optimizations, especially for large images that exceed a maximum\n    texture size of a GPU.\n\n    `SkImage::makeRasterImage` and `SkImage::makeNonTextureImage` now take a `GrDirectContext*` which\n    clients should supply for reading-back pixels from texture-backed images.\n  * `SkImageFilters::Image` now returns a non-null image filter if the input `sk_sp<SkImage>` is\n    null or the src rectangle is empty or does not overlap the image. The returned filter evaluates to\n    transparent black, which is equivalent to a null or empty image. Previously, returning a null image\n    filter would mean that the dynamic source image could be surprisingly injected into the filter\n    evaluation where it might not have been intended.\n  * `SkImageFilters::Magnifier(srcRect, inset)` is deprecated. These parameters do not provide enough\n    information for the implementation to correctly respond to canvas transform or participate accurately\n    in layer bounds planning.\n\n    A new `SkImageFilters::Magnifier` function is added that takes additional parameters: the outer\n    lens bounds and the actual zoom amount (instead of inconsistently reconstructing the target zoom\n    amount, which was the prior behavior). Additionally, the new factory accepts an SkSamplingOptions\n    to control the sampling quality.\n  * `SkImageFilters::Picture` now returns a non-null image filter if the input `sk_sp<SkPicture>` is\n    null. The returned filter evaluates to transparent black, which is equivalent to a null or empty\n    picture. Previously, returning a null image filter would mean that the dynamic source image could\n    be surprisingly injected into the filter evaluation where it might not have been intended.\n  * `SkImageFilters::Shader` now returns a non-null image filter if the input `sk_sp<SkShader>` is\n    null. The returned filter evaluates to transparent black, which is equivalent to a null or empty\n    shader. Previously, returning a null image filter would mean that the dynamic source image could\n    be surprisingly injected into the filter evaluation where it might not have been intended.\n  * `SkImageGenerator::MakeFromEncoded` has been removed from the public API.\n    `SkImage::DeferredFromEncoded` or `SkCodec::MakeFromData` should be used instead.\n  * `SkSurface::getBackendTexture` and `SkSurface::getBackendRenderTarget` have been deprecated and\n    replaced with `SkSurfaces::GetBackendTexture` and `SkSurfaces::GetBackendRenderTarget` respectively.\n    These are found in `include/gpu/ganesh/SkSurfaceGanesh.h`. The supporting enum `BackendHandleAccess`\n    has also been moved to `SkSurfaces::BackendHandleAccess` as an enum class, with shorter member\n    names.\n  * SkSurface factory methods have been moved to the SkSurfaces namespace. Many have been renamed to\n    be more succinct or self-consistent. Factory methods specific to the Ganesh GPU backend are\n    defined publicly in include/gpu/ganesh/SkSurfaceGanesh.h. The Metal Ganesh backend has some\n    specific factories in include/gpu/ganesh/mtl/SkSurfaceMetal.h.\n      * SkSurface::MakeFromAHardwareBuffer -> SkSurfaces::WrapAndroidHardwareBuffer\n      * SkSurface::MakeFromBackendRenderTarget -> SkSurfaces::WrapBackendRenderTarget\n      * SkSurface::MakeFromBackendTexture -> SkSurfaces::WrapBackendTexture\n      * SkSurface::MakeFromCAMetalLayer -> SkSurfaces::WrapCAMetalLayer\n      * SkSurface::MakeFromMTKView -> SkSurfaces::WrapMTKView\n      * SkSurface::MakeGraphite -> SkSurfaces::RenderTarget\n      * SkSurface::MakeGraphiteFromBackendTexture -> SkSurfaces::WrapBackendTexture\n      * SkSurface::MakeNull -> SkSurfaces::Null\n      * SkSurface::MakeRaster -> SkSurfaces::Raster\n      * SkSurface::MakeRasterDirect -> SkSurfaces::WrapPixels\n      * SkSurface::MakeRasterDirectReleaseProc -> SkSurfaces::WrapPixels\n      * SkSurface::MakeRasterN32Premul -> SkSurfaces::Raster (clients should make SkImageInfo)\n      * SkSurface::MakeRenderTarget -> SkSurfaces::RenderTarget\n\n* * *\n\nMilestone 114\n-------------\n  * The CPU backend for Runtime Effects has been rewritten. This may cause slight differences in\n    performance and image quality when runtime effects are painted onto a raster surface.\n  * Gradient shaders support interpolation in several different color spaces, by passing a\n    `SkGradientShader::Interpolation` struct to the shader factory functions. The color space and\n    hue method options are based on the CSS Color Level 4 specfication:\n    * https://www.w3.org/TR/css-color-4/#interpolation-space\n    * https://www.w3.org/TR/css-color-4/#hue-interpolation\n  * `SkImages::GetBackendTextureFromImage` has been renamed `SkImages::MakeBackendTextureFromImage`.\n  * `SkImage::getBackendTexture()` has been moved to `SkImages::GetBackendTextureFromImage()` in\n    `SkImageGanesh.h`.\n  * `SkImage::makeTextureImage()` has been moved to `SkImages::TextureFromImage()` in\n    `SkImageGanesh.h`.\n  * `SkImage::flush()` and `SkImage::flushAndSubmit()` has been moved to\n    `GrDirectContext::flush()` and `GrDirectContext::flushAndSubmit()` in `SkImageGanesh.h`.\n  * `SkSurfaceProperties::kAlwaysDither_Flag` added to globally enable dithering for a specific\n    `SkSurface` target.\n  * `SkSerialImageProc` and `SkDeserialImageProc` are now also used to encode/decode the SkMipmap\n    layers of certain SkImages.\n  * The defines `SK_USE_WIC_ENCODER` and `SK_USE_CG_ENCODER` have been removed, as well as the code\n    to use the Windows Image Codecs and Core Graphics as a way to have Skia encode files in PNG,\n    JPEG, and WEBP format. Skia continues to support use of the NDK codecs on Android, as well\n    as using external C++ libraries (e.g. libpng, libjpeg-turbo) to *encode* images. WIC and CG\n    are still used to *decode* images on the appropriate platforms.\n  * `SkImage::encodeToData` has been deprecated. Clients should use `refEncodedData` if the image\n    was from an encoded bytestream or one of `SkPngEncoder::Encode`, `SkJpegEncoder::Encode`,\n    `SkWebpEncoder::Encode` directly.\n  * The following defines no longer do anything. GN clients should instead set the provided\n    arguments (from gn/skia.gni) as necessary:\n      - `SK_ENCODE_PNG` -> `skia_use_libjpeg_turbo_encode`\n      - `SK_ENCODE_JPEG` -> `skia_use_libpng_encode`\n      - `SK_ENCODE_WEBP` -> `skia_use_libwebp_encode`\n    Other clients should make sure the appropriate `*EncoderImpl.cpp` files from `src/encode` are\n    included in the build.\n  * `SkImageEncoder` has been removed. Clients should use one of `SkPngEncoder::Encode`,\n    `SkJpegEncoder::Encode` or `SkWebpEncoder::Encode` directly.\n  * `SkImageGenerator` has a new subclass `GrTextureGenerator` which can be used if clients want to\n    provide specialized ways of making Ganesh texture-backed Images.\n  * `SkImageGenerator::MakeFromPicture` has been removed from the public API. Clients should be\n    drawing the picture directly instead of turning it into an image first.\n\n\n* * *\n\nMilestone 113\n-------------\n  * The define SK_SUPPORT_GPU is now SK_GANESH. It is no longer detected as a 0 or 1, but\n    as the absence or presence of that define. As a result, it defaults to off (not defined) if\n    not defined (SK_SUPPORT_GPU would default to SK_SUPPORT_GPU=1 if not defined).\n  * SkStrSplit is no longer part of the public API.\n  * SkImage::encodeToData now takes a GrDirectContext. The versions which do not have that are\n    deprecated and will be removed at some point.\n  * SkMatrix::Scale, preScale, setScale, etc. with any scale factor of 0 correctly no longer\n    return true from rectStaysRect(), consistent with rectStaysRect() implying a non-zero scale.\n  * `SkImage::CompressionType` has been renamed to `SkTextureCompressionType` and moved to\n    `include/core/SkTextureCompressionType.h`\n  * `SkEncodedImageFormat.h` and `SkPngChunkReader.h` are now in include/codec\n  * `SkICC.h` is now in include/encode\n  * SkImage factory methods have been moved to the SkImages namespace. Many have been renamed to\n    be more succinct or self-consistent. Factory methods specific to the Ganesh GPU backend are\n    defined publicly in include/gpu/ganesh/SkImageGanesh.h.\n      * SkImage::MakeBackendTextureFromSkImage -> SkImages::GetBackendTextureFromImage\n      * SkImage::MakeCrossContextFromPixmap -> SkImages::CrossContextTextureFromPixmap\n      * SkImage::MakeFromAdoptedTexture -> SkImages::AdoptTextureFrom\n      * SkImage::MakeFromBitmap -> SkImages::RasterFromBitmap\n      * SkImage::MakeFromCompressedTexture -> SkImages::TextureFromCompressedTexture\n      * SkImage::MakeFromEncoded -> SkImages::DeferredFromEncodedData\n      * SkImage::MakeFromGenerator -> SkImages::DeferredFromGenerator\n      * SkImage::MakeFromPicture -> SkImages::DeferredFromPicture\n      * SkImage::MakeFromRaster -> SkImages::RasterFromPixmap\n      * SkImage::MakeFromTexture -> SkImages::BorrowTextureFrom\n      * SkImage::MakeFromYUVAPixmaps -> SkImages::TextureFromYUVAPixmaps\n      * SkImage::MakeFromYUVATextures -> SkImages::TextureFromYUVATextures\n      * SkImage::MakePromiseTexture -> SkImages::PromiseTextureFrom\n      * SkImage::MakePromiseYUVATexture -> SkImages::PromiseTextureFromYUVA\n      * SkImage::MakeRasterCopy -> SkImages::RasterFromPixmapCopy\n      * SkImage::MakeRasterData -> SkImages::RasterFromData\n      * SkImage::MakeRasterFromCompressed -> SkImages::RasterFromCompressedTextureData\n      * SkImage::MakeTextureFromCompressed -> SkImages::TextureFromCompressedTextureData\n    To help in the transition, there is some temporary bridge code (e.g. aliases) which will\n    eventually be removed.\n\n* * *\n\nMilestone 112\n-------------\n  * SkImage::CubicResampler has been removed. Clients should use SkCubicResampler from\n    include/core/SkSamplingOptions.h instead (the former was an alias for the latter).\n  * SkRuntimeColorFilterBuilder has been added. This is a helper class for setting up color filters,\n    analogous to SkRuntimeShaderBuilder.\n  * SkShaders::CoordClamp has been added. It clamps the coords passed used with another\n    shader to a rectangle.\n  * SkRandom is no longer part of the public API.\n  * SK_ARRAY_COUNT is no longer part of the public API. Clients should use std::size.\n  * SK_SCALAR_IS_FLOAT is not set anymore. SkScalar is always a float (and has been since 2017).\n  * sk_realloc_throw (an internal API) now frees up memory when 0 is passed in as the size.\n    This should have no user-facing impacts for clients which use the default allocator, but\n    requires custom allocators to also implement this change.\n  * The particles module has been deleted.\n  * SkJpegEncoder::Options includes a parameter for XMP metadata.\n  * SkJpegEncoder includes support for encoding SkYUVAPixmaps directly.\n\n* * *\n\nMilestone 111\n-------------\n  * SkToBool is no longer part of the public API.\n  * A float version of SkCanvas::saveLayerAlpha now exists as SkCanvas::saveLayerAlphaf.\n  * SkAbs32 and SkTAbs are no longer part of the public API.\n  * SkAlign2, SkAlign4, SkAlign8, SkIsAlign2, SkIsAlign4, SkIsAlign8, SkAlignPtr, SkIsAlignPtr,\n    and SkAlignTo are no longer part of the public API.\n  * GrContextOptions::fSkipGLErrorChecks no longer stops checking shader compilation and program\n    linking success.\n  * SkBackingFit is no longer part of the public API.\n  * SkBudgeted was moved from include/core/SkTypes.h to include/gpu/GpuTypes.h and moved into the\n    skgpu namespace.\n  * include/gpu/GrConfig.h has been removed; its contents were folded into other files.\n  * SkLeftShift is no longer part of the public API.\n  * SK_MaxS32 and related constants are no longer part of the public API.\n  * include/core/SkMath.h is no longer part of the public API.\n\n* * *\n\nMilestone 110\n-------------\n  * SkParsePath::ToSVGString now returns the string, rather than modifying a passed-in string.\n  * Removed previously deprecated SkImageFilters::Paint factory. Use SkImageFilters::Shader instead.\n  * SkMesh::Make and SkMesh::MakeIndexed now return a SkMesh and error message string.\n  * SkPaint::getFillPath has been replaced with skpathutils::FillPathWithPaint from\n    include/core/SkPathUtils.h. The functionality should be the same.\n\n* * *\n\nMilestone 109\n-------------\n  * SkMesh vertex and fragment main() signatures have changed. See docs on SkMeshSpecification.\n  * Added SkImage::RescaleMode::kLinear so that the async rescale/readback APIs can scale in a\n    single step no matter the total scale factor (faster but lower quality than kRepeatedLinear).\n  * SkMesh buffer factories added that make copies of CPU-backed buffers.\n  * A utility for minifying Runtime Effect code has been added to Skia. Add the gn argument\n    \"skia_compile_modules = true\" to your gn args, and a new utility called \"sksl-minify\" will be\n    compiled as part of your Skia build. Run the command:\n      `skia-minify output-file.sksl input-file.sksl`\n    to write a minified version of the runtime shader \"input-file.sksl\" into a file named\n    \"output-file.sksl\". By default, sksl-minify expects a shader, but you can also pass command\n    line options `--colorfilter` or `--blender` if your program is a color-filter or a blender.\n    A compile error will be printed to stdout if an error is found in the program.\n  * The order of SkShader local matrix concatenation has been reversed. See skbug.com/13749\n  * PromiseImages have been added to Graphite. This supports both volatile and non-volatile Promise Images.\n    See the comment for SkImage::MakeGraphitePromiseTexture for more details.\n  * Graphite has loosened the immutability requirements of SkImages - through a new SkSurface API and careful\n    synchronization, clients can now mutate the backend object backing an SkImage. The new API consists of\n    SkSurface::asImage and SkSurface::makeImageCopy. We have a document that covers the expected use cases and\n    the synchronization required for each one.\n\n* * *\n\nMilestone 108\n-------------\n  * SkShader::asAGradient() has been removed.\n  * SkMesh and SkMeshSpecification has separate sk_sp and bare ptr getters for ref counted types.\n  * Add support for specifying a custom ICC profile to SkJpegEncoder, SkPngEncoder, and\n    SkWebpEncoder.\n\n* * *\n\nMilestone 107\n-------------\n  * Exported SkColor4f::toBytes_RGBA() and SkColor4f::FromBytes_RGBA.\n  * SkWebpEncoder: Added support for animated WebP image encoding.\n  * SkRuntimeEffect shader effects were inadvertently allowing functions with the signature\n    `half4 main(float2 coords, half4 color)`. This was disallowed at Milestone 87, but the\n    restriction was inadvertently relaxed in later milestones. Going forward, we will only\n    accept a shader signature of `half4 main(float2 coords)`.\n\n* * *\n\nMilestone 106\n-------------\n  * sk_sp is marked with the [[clang::trivial_abi]] attribute where supported.\n  * SkMesh API: Allows a user to draw a vertex mesh with custom attributes and\n    varyings using SkSL. Mesh data (vertex and index) can be created on a\n    GrDirectContext to avoid re-uploading data per draw. Currently does not\n    work with SkPicture or any backend but GPU.\n  * Added SkColorFilters::Blend(const SkColor4f&, sk_sp<SkColorSpace>, SkBlendMode) to\n    complement the existing SkColorFilters::Blend(SkColor, SkBlendMode) factory.\n  * The experimental C API was removed.\n  * Added support for AVIF decoding using libavif.\n\n* * *\n\nMilestone 104\n-------------\n  * New functions SkBitmap::getColor4f and SkPixmap::getColor4f return float colors.\n  * SkRuntimeEffect takes and returns a const SkData.\n  * SkRasterHandleAllocator::MakeCanvas now takes optional SkSurfaceProps.\n  * SkImage::MakeFromPicture and SkImageGenerator::MakeFromPicture now take an optional\n    SkSurfaceProps to use when rasterizing the picture.\n  * SkRuntimeEffect::Uniform now stores the uniform name as a string_view, rather than a\n    SkString. Related methods SkRuntimeEffect::findUniform and SkRuntimeEffectBuilder::uniform\n    also take std::string_view instead of const char*.\n  * SkRuntimeEffect::Child now stores the child name as a string_view, rather than a SkString.\n    Related methods SkRuntimeEffect::findChild and SkRuntimeEffectBuilder::child also take\n    std::string_view instead of const char*. Also, SkImageFilters::RuntimeShader now takes the\n    child name(s) as std::string_view instead of const char*.\n  * skcms.h has been relocated to //modules/skcms/skcms.h (was //include/third_party/skcms/skcms.h)\n  * New functions SkCanvas::getBaseProps and SkCanvas::getTopProps; SkCanvas::getBaseProps is a\n    direct replacement for the (now deprecated) SkCanvas::getProps function, while getTopProps is\n    a variant that returns the SkSurfaceProps that are active in the current layer.\n  * New function SkEventTracer::newTracingSection(const char* name) enables splitting traces up\n    into different sections for a selection of backend tracing frameworks (Perfetto, SkDebugf).\n\n* * *\n\nMilestone 103\n-------------\n  * SkSamplingOptions now includes anisotropic filtering. Implemented on GPU only.\n  * SkBitmap::clear and SkBitmap::clearColor take in SkColor4fs\n\n* * *\n\nMilestone 102\n-------------\n  * Add glGetFloatv and glSamplerParameterf to GrGLInterface.\n  * GrGLCreateNativeInterface is removed. Use GrGLMakeNativeInterface.\n  * GrContextOptions::fSharpenMipmappedTextures is removed. MIP LOD is now always\n    biased on the GPU backend. The CPU backend implementation is modified to match\n    this behavior.\n  * Passing SkCanvas::kStrict_SrcRectConstraint disables mipmapping. The old behavior differed\n    between GPU and CPU. CPU always computed a new set of mipmap based on the subset. GPU restricted\n    the sampling coordinates to the subset in the base level but upper level pixels that map to\n    pixels outside the subset in the base level were still used. To get the previous CPU behavior\n    use SkImage::makeSubset() to make a subset image and draw that. The previous GPU behavior is\n    similar, though not exactly, equivalent to making a mipmapped image shader from the original\n    image and applying that to a rectangle.\n  * Fully disable experimental support for HW tessellation shaders.\n    GrContextOptions::fEnableExperimentalHardwareTessellation is ignored and behaves as if it is\n    false. The optimized path renderer no longer requires hardware tessellation at all, and\n    is automatically enabled when drawing to an SkSurface created with MSAA, or when\n    GrContextOptions::fInternalMultisampleCount is set to a non-zero value.\n\n* * *\n\nMilestone 101\n-------------\n  * Add maxSurfaceSampleCountForColorType(SkColorType ct) in GrContextThreadSafeProxy\n  * Enums SkAlphaType and SkColorType are broken out into their own header files in include/core/\n\n* * *\n\nMilestone 100\n-------------\n  * Skia now requires C++17 and the corresponding standard library (or newer).\n  * Skia on iOS now requires iOS 11 to build; earlier versions of iOS do not support C++17.\n  * The skstd::string_view and skstd::optional Skia classes have been replaced with the C++17 native\n    std::string_view and std::optional.\n  * Added SkSurface::resolveMSAA api to force Skia to resolve MSAA draws. Useful for when\n    Skia wraps a client's texture as the resolve target.\n  * All of the `makeShader` functions associated with `SkRuntimeEffect` no longer take an\n    `isOpaque` parameter. These functions will now make a best effort to determine if your\n    shader always produces opaque output, and optimize accordingly. If you definitely want your\n    shader to produce opaque output, do so in the shader's SkSL code. This can be done by adjusting\n    any `return` statement in your shader with a swizzle: `return color.rgb1;`.\n    https://review.skia.org/506462\n  * SkRSXform is now exported to DLL/.so files.\n* * *\n\nMilestone 99\n------------\n  * Added two new intrinsic functions to SkSL for use in runtime effects:\n      vec3 toLinearSrgb(vec3 color)\n      vec3 fromLinearSrgb(vec3 color)\n    These convert RGB color values between the working color space (the color space of the\n    destination surface) and a known, fixed color space. `toLinearSrgb` converts a color to the\n    sRGB color gamut, with a linear transfer function. `fromLinearSrgb` converts a color from that\n    same color space. These are helpful for effects that need to work in a specific color space, or\n    want to apply effects (like lighting) that work best in a linear color space.\n    Note that if the destination surface has no color space (color space is `nullptr`), these\n    intrinsics will do no conversion, and return the input color unchanged.\n    https://review.skia.org/481416\n  * Added a new variant of SkImageFilters::RuntimeShader that supports multiple child nodes.\n    https://review.skia.org/489536\n  * Add the ability to specify palette overrides in SkFontArguments. Implemented\n    for the FreeType-backed SkFontMgrs.\n\n* * *\n\nMilestone 98\n------------\n  * The following functions and methods are not defined in SkSurface when SK_SUPPORT_GPU is 0:\n    MakeFromBackendTexture, MakeFromBackendRenderTarget, MakeRenderTarget,\n    getBackendTexture, getBackendRenderTarget, replaceBackendTexture. flush() with parameters\n    was removed as well. These were all no-ops anyway when just the CPU backend was compiled in\n    (noting that flush() and flushAndSubmit() are still no-ops on the CPU backend).\n  * GrBackendSemaphore only includes methods that match the GPU backend that Skia was compiled for.\n    For example, initVulkan and vkSemaphore are not defined unless the Vulkan backend is compiled\n    into Skia.\n  * Surfaces and images are now limited to just under 2GB of total size. Previously, larger images\n    could be created, but the CPU backend would fail to index them correctly.\n  * SkCanvas::drawVertices and SkCanvas::drawPatch variants that did not take SkBlendMode are\n    removed.\n  * SkImageFilters::RuntimeShader is a new public API that enables adding RuntimeShaderEffects into\n    image filter graph.\n  * SkImage::makeRawShader is a new public API that creates \"raw\" image shaders. makeRawShader\n    functions like SkImage::makeShader, but for images that contain non-color data. This includes\n    images encoding things like normals, material properties (eg roughness), heightmaps, or any\n    other purely mathematical data that happens to be stored in an image. These types of images are\n    useful with some programmable shaders (ie SkRuntimeEffect).\n    Raw image shaders work like regular image shaders (including filtering and tiling), with a few\n    major differences:\n      - No color space transformation is ever applied (the color space of the image is ignored).\n      - Images with an alpha type of kUnpremul are not automatically premultiplied.\n      - Bicubic filtering is not supported. If SkSamplingOptions::useCubic is true, these factories\n        will return nullptr.\n  * Removed SkCanvas::markCTM and SkCanvas::findMarkedCTM. These were created to be used with other\n    features that have since been deleted, so they served no purpose.\n  * Added limited JPEGXL support.\n\n* * *\n\nMilestone 97\n------------\n  * Added basic support for vulkan DRM modifiers. All of these are treated as read only textures\n    internally (versus querying specific modifier support). Clients can either pass a flag to Vulkan\n    GrBackendFormat to say it uses modifiers or pass the VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT\n    to a GrBackendTexture via the GrVkImageInfo struct.\n  * The following functions and methods are not defined in SkImage when SK_SUPPORT_GPU is 0:\n    MakeTextureFromCompressed, MakeFromTexture, MakeFromCompressedTexture,\n    MakeCrossContextFromPixmap, MakeFromAdoptedTexture, MakeFromYUVATextures,\n    MakeFromYUVAPixmaps, MakePromiseTexture, MakePromiseYUVATexture, MakeBackendTextureFromSkImage,\n    flush, flushAndSubmit, getBackendTexture, makeTextureImage.\n    These were all no-ops anyway when just the CPU backend was compiled in.\n\n* * *\n\nMilestone 96\n------------\n  * SkRuntimeEffect no longer clamps the RGB values of an effect's output to the range 0..A.\n    This makes it easier to use a hierarchy of SkSL shaders where intermediate values do not\n    represent colors but are, for example, non-color inputs to a lighting model.\n    http://review.skia.org/452558\n\n* * *\n\nMilestone 95\n------------\n  * Minimum supported iOS raised from 8 to 11. Skia may build back to iOS 9 but versions older\n    than 11 are not tested. Community contributions to support versions 9 and 10 of iOS may be\n    considered, but they may not be complex as they cannot be tested.\n\n* * *\n\nMilestone 94\n------------\n  * Metal backend has been changed to track command buffer resources manually\n    rather than using retained resources.\n    https://review.skia.org/432878\n\n  * Added virtual onResetClip() to SkCanvas for Android Framework, to emulate the soon-to-be-removed\n    expanding clip ops guarded by SK_SUPPORT_DEPRECATED_CLIPOPS.\n    https://review.skia.org/430897\n\n  * Removed SK_SUPPORT_DEPRECATED_CLIPOPS build flag. Clips can only be intersect and difference.\n    https://review.skia.org/436565\n\n  * There is a new syntax for invoking (sampling) child effects in SkSL. Previously, children\n    (shaders, colorFilters, blenders) were invoked using different overloads of `sample`. That\n    syntax is deprecated (but still supported). Now, the child behaves like an object, with a method\n    name `eval`. The arguments to these `eval` methods are the same as the arguments in the old\n    `sample` intrinsics. For example:\n      // Old syntax:\n        sample(shader, xy)\n        sample(colorFilter, color)\n        sample(blender, srcColor, dstColor)\n      // New syntax:\n        shader.eval(xy)\n        colorFilter.eval(color)\n        blender.eval(srcColor, dstColor)\n    https://review.skia.org/444735\n\n* * *\n\nMilestone 93\n------------\n  * Removed SkPaint::getHash\n    https://review.skia.org/419336\n\n  * Removed SkShaders::Lerp. It was unused (and easy to replicate with SkRuntimeEffect).\n    https://review.skia.org/419796\n\n  * The default value of GrContextOptions::fReduceOpsTaskSplitting is now enabled.\n    https://review.skia.org/419836\n\n  * Removed SkMatrix44\n\n* * *\n\nMilestone 92\n------------\n  * Hides SkPathEffect::computeFastBounds() from public API; external subclasses of SkPathEffect\n    must implement onComputeFastBounds() but can return false to signal it's not computable.\n    https://review.skia.org/406140\n\n  * Add SkM44::RectToRect constructor (SkM44's equivalent to SkMatrix::RectToRect)\n    https://review.skia.org/402957\n\n  * Metal support has been removed for versions of iOS older than 10.0 and MacOS older than 10.14.\n    https://review.skia.org/401816\n\n  * Removed custom attributes from SkVertices and the corresponding `varying` feature from\n    SkRuntimeEffect.\n    https://review.skia.org/398222\n\n  * Dropped support for mixed samples. Mixed samples is no longer relevant for Ganesh. DMSAA and the\n    new Ganesh architecture both rely on full MSAA, and any platform where mixed samples is\n    supported will ultimately not use the old architecture.\n\n  * SkRuntimeEffect::Make has been removed. It is replaced by MakeForShader and MakeForColorFilter.\n    These functions do stricter error checking on the SkSL, to ensure it is valid for a particular\n    stage of the Skia pipeline.\n    https://review.skia.org/402156\n\n* * *\n\nMilestone 91\n------------\n  * The SkSL DSL API has been moved into public headers, although it is still under active\n    development and isn't quite ready for prime time yet.\n    https://review.skia.org/378496\n\n  * Skia's GPU backend no longer supports NVPR. Our more recent path renderers are more\n    performant and are not limited to nVidia hardware.\n\n  * SkRuntimeEffect now supports uniforms of type int, int2, int3, and int4. Per the OpenGL ES\n    Shading Language Version 1.00 specification, there are few guarantees about the representation\n    or range of integral types, and operations that assume integral representation (eg, bitwise),\n    are not supported.\n    https://review.skia.org/391856\n\n  * SkRuntimeEffect requires that 'shader' variables be declared as 'uniform'. The deprecated\n    syntax of 'in shader' is no longer supported.\n    https://review.skia.org/393081\n\n* * *\n\nMilestone 90\n------------\n  * Renamed use of sk_cf_obj in external Metal types to sk_cfp.\n    https://review.skia.org/372556\n\n  * GrDirectContext::ComputeImageSize() is removed. Use SkImage::textureSize() instead.\n    https://review.skia.org/368621\n    https://review.skia.org/369317\n    https://review.skia.org/371958\n\n  * Remove SkImageFilter::MakeMatrixFilter as it was unused and replaced with\n    SkImageFilters::MatrixTransform.\n    https://review.skia.org/366318\n\n  * Refactored particle system to use a single code string containing both Effect and Particle code.\n    Uniform APIs are now shared for all program entry points, and no longer prefixed with 'Effect'\n    or 'Particle'. For example, instead of `SkParticleEffect::effectUniformInfo` and\n    `SkParticleEffect::particleUniformInfo`, there is just `SkParticleEffect::uniformInfo`.\n\n  * Remove SkImageFilter::CropRect from the public API as it's no longer usable. All factories\n    work with 'SkRect', 'SkIRect', or nullable pointers to 'Sk[I]Rect'.\n    https://review.skia.org/361496\n\n  * Remove deprecated SkImageFilter factory functions and supporting types. All default-provided\n    SkImageFilters are now only constructed via 'include/effects/SkImageFilters.h'\n    https://review.skia.org/357285\n\n  * Added SkRuntimeEffect::makeImage() to capture the output of an SkRuntimeEffect in an SkImage.\n    https://review.skia.org/357284\n\n  * Updated SkRuntimeEffect::Make() to take an Options struct. It also now returns a Results struct\n    instead of a tuple.\n    https://review.skia.org/363785\n    https://review.skia.org/367060\n\n  * Changed SkRuntimeEffect::Varying to have lower-case member names, with no 'f' prefix.\n    https://review.skia.org/365656\n\n  * Changed SkRuntimeEffect::Uniform to have lower-case member names, with no 'f' prefix.\n    https://review.skia.org/365696\n\n  * Deprecate (and ignore) SkAndroidCodec::ExifOrientation\n    https://review.skia.org/344763\n\n  * Fix several minor issues in lighting image filters:\n    - The spotlight falloff exponent is no longer clamped to [1, 128]. SVG 1.1 requires the specular\n      lighting effect's exponent (shininess) to be clamped; not the spotlight's falloff. Any such\n      parameter clamping is the client's responsibility, which makes Skia's lighting effect easily\n      adaptable to SVG 1.1 (clamp exponent) or SVG 2 (no clamp).\n    - Fix spotlight incorrectly scaling light within the cone angle.\n    - Move saturation of RGBA to after multiplying lighting intensity with the lighting color, which\n      improves rendering when diffuse and specular constants are greater than 1.\n    https://review.skia.org/355496\n\n  * SkDeferredDisplayListRecorder::makePromiseTexture has moved to SkImage::MakePromiseTexture.\n    New code should use the new entry point – migration CLs will be coming soon.\n    https://review.skia.org/373716\n\n* * *\n\nMilestone 89\n------------\n\n  * Removed SkYUVAIndex and SkYUVASizeInfo. These were no longer used in any\n    public APIs.\n    https://review.skia.org/352497\n\n  * Numerous changes to SkRuntimeEffect, aligning the capabilities and restrictions with\n    The OpenGL ES Shading Language 1.00 (aka, the shading language of OpenGL ES2 and WebGL 1.0).\n    All built-in functions from sections 8.1 through 8.6 implemented & tested on all backends.\n    Removed types and features that require newer versions of GLSL:\n      https://review.skia.org/346657  [Non-square matrices]\n      https://review.skia.org/347046  [uint, short, ushort, byte, ubyte]\n      https://review.skia.org/349056  [while and do-while loops]\n      https://review.skia.org/350030  [Bitwise operators and integer remainder]\n\n  * Add SkShadowUtils::GetLocalBounds. Generates bounding box for shadows\n    relative to path.\n    https://review.skia.org/351922\n\n  * Removed SkPerlinNoiseShader::MakeImprovedNoise.\n    https://review.skia.org/352057\n\n  * Removed deprecated version of MakeFromYUVATextures. Use the version\n    that takes GrYUVABackendTextures instead.\n    https://review.skia.org/345174\n\n  * SkAnimatedImage: Always respect exif orientation\n    Replace SkPixmapPriv::ShouldSwapWidthHeight with\n    SkEncodedOriginSwapsWidthHeight.\n    https://review.skia.org/344762\n\n  * Add kDirectionalLight_ShadowFlag support. If enabled, light position represents\n    a vector pointing towards the light, and light radius is blur radius at elevation 1.\n    https://review.skia.org/321792\n\n  * Support GL_LUMINANCE8_ALPHA8 textures. These can be used with GrBackendTexture APIs\n    on GrDirectContext and as planes of YUVA images via GrYUVABackendTextures.\n    https://review.skia.org/344761\n\n  * Removed previously deprecated SkImage::MakeFromYUVATexturesCopyToExternal.\n    https://review.skia.org/342077\n\n  * Add versions of GrDirectContext::createBackendTexture and updateBackendTexture\n    that take a GrSurfaceOrigin. The previous versions are deprecated.\n    https://review.skia.org/341005\n\n  * Remove support for deprecated kDontClipToLayer_SaveLayerFlag in SkCanvas::SaveLayerRec\n    https://review.skia.org/339988\n\n  * Expose more info in SkCodec::FrameInfo\n    https://review.skia.org/339857\n\n  * Added dither control to the SkImageFilters::Shader factory.\n    https://review.skia.org/338156\n\n  * Add MTLBinaryArchive parameter to GrMtlBackendContext. This allows\n    Skia to cache PipelineStates in the given archive for faster\n    shader compiles on future runs. The client must handle loading and\n    saving of the archive.\n    https://review.skia.org/333758\n\n  * Deprecated enum SkYUVAInfo::PlanarConfig has been removed.\n    https://review.skia.org/334161\n\n  * Deprecated SkImage factories have been removed from\n    SkDeferredDisplayListRecorder.\n\n  * The following YUV image factories have been removed:\n    SkImage::MakeFromYUVTexturesCopyWithExternalBackend\n    SkImage::MakeFromNV12TexturesCopyWithExternalBackend\n    Replacement pattern outlined below.\n        1) Make image using MakeFromYUVATextures\n        2) Make a SkSurface around result texture using SkSurface::MakeFromBackendTexture\n        3) surface->getCanvas()->drawImage(image, 0, 0);\n        4) surface->flushAndSubmit()\n        5) Optional: SkImage::MakeFromBackendTexture() to use as SkImage.\n    https://review.skia.org/334596\n\n  * Added a new interface for GrDirectContext creation in Metal, using\n    a new struct called GrMtlBackendContext. The previous interface taking\n    a MTLDevice and MTLCommandQueue is deprecated.\n    https://review.skia.org/334426\n\n  * SkCanvas::flush has been deprecated.\n\n* * *\n\nMilestone 88\n------------\n\n  * SkYUVAInfo now has separate enums for division of channels among planes and\n    the subsampling. The previous combined enum, PlanarConfig, is deprecated.\n    https://review.skia.org/334102\n\n  * Simplified SkDeferredDisplayListRecorder promise image API. Removed \"release\"\n    callback and renamed \"done\" callback to \"release\". The new \"release\" proc can\n    be null. Added a new SkYUVAInfo-based factory for YUVA promise texture images\n    and deprecated the old SkYUVAIndex-based one.\n    https://review.skia.org/331836\n    https://review.skia.org/333519\n\n  * Limit the types and intrinsics supported in SkRuntimeEffect to GLSL ES 1.00\n    https://review.skia.org/332597\n\n  * Add AVIF support to SkHeifCodec.\n\n  * Add support for creating SkSurfaceCharacterizations directly for use by a\n    GrVkSecondaryCBDrawContext.\n    https://review.skia.org/331877\n\n  * Removed SkSurfaceProps::kLegacyFontHost_InitType, SkFontLCDConfig, and related code.\n    The default pixel geometry for SkSurfaceProps is now kUnknown instead of kRGB_H.\n    The removal was guarded by the SK_LEGACY_SURFACE_PROPS build flag which was later removed.\n    https://review.skia.org/322490\n    https://review.skia.org/329364\n\n  * Legacy 8-bit YUV interface removed from SkImageGenerator. Use more flexible SkYUVAPixmaps-\n    based interface instead.\n    https://review.skia.org/327917\n\n  * New variant of SkImage::MakeFromYUVATextures. Takes a new type GrYUVATextures\n    which wraps an SkYUVAInfo and compatible set of GrBackendTextures. The provides\n    a more complete and structured specification of the planar configuration. Previous\n    version is deprecated.\n    Already deprecated MakeFromYUVATexturesCopyToExternal added to replace other deprecated\n    APIs. It's not recommended that clients use this and instead use the pattern described\n    in the API comment.\n    https://review.skia.org/317762\n    https://review.skia.org/329956\n\n  * Add field to GrContextOptions to disable mipmap support even if the backend\n    supports it.\n\n  * SkTPin() removed from public API.\n\n  * Add new SkImageFilters::Blend factory function, in place of the now deprecated\n    SkImageFilters::Xfermode factory function. Behavior is identical, but name better matches\n    conventions in SkShader and SkColorFilter.\n    https://review.skia.org/324623\n\n  * SkImageFilters::Foo() factory functions now accept SkIRect, SkRect, and optional SkIRect* or\n    SkRect*, instead of previously just the optional SkIRect*. Internally, the crop rects are stored\n    as floats to allow for fractional crops to be defined in the local coordinate system (before\n    transformation by the canvas matrix).\n    https://review.skia.org/324622\n\n  * Add new SkImageFilters::Shader factory and deprecate SkImageFilters::Paint factory. All\n    supported/valid Paint() filters can be represented more cleanly as a Shader image filter.\n    https://review.skia.org/323680\n\n  * GrContext has been replaced by two separate classes: GrDirectContext which is\n    the traditional notion of GrContext, and GrRecordingContext which is a context\n    that is recording an SkDeferredDisplayList and therefore has reduced functionality.\n    Unless you are using SkDeferredDisplayList, migrate directly to GrDirectContext in\n    all cases.\n\n  * CPU sync bool added to SkSurface::flushAndSubmit() and GrContext::flushAndSubmit()\n\n  * Removed legacy variant of SkImage::MakeFromYUVAPixmaps. Use the version that\n    takes SkYUVAPixmaps instead. It has a more structured description of the\n    planar configuration.\n    https://review.skia.org/322480\n\n  * Some SkImage YUV image factories have been removed. Replacement patterns\n    outlined below.\n    SkImage::MakeFromYUVATexturesCopy\n        1) Make SkImage from YUVA planes using SkImage::MakeFromYUVATextures\n        2) Use Skia to allocate a surface using SkSurface::MakeRenderTarget\n        3) surface->getCanvas()->drawImage(image, 0, 0);\n        4) surface->makeImageSnapShot() produces RGBA image.\n    SkImage::MakeFromYUVATexturesCopyWithExternalBackend\n        1) Make image using MakeFromYUVATextures\n        2) Make a SkSurface around result texture using SkSurface::MakeFromBackendTexture\n        3) surface->getCanvas()->drawImage(image, 0, 0);\n        4) surface->flushAndSubmit()\n        5) Optional: SkImage::MakeFromBackendTexture() to use as SkImage.\n    SkImage::MakeFromNV12TexturesCopy\n        Same as SkImage::MakeFromYUVATexturesCopy\n    https://review.skia.org/321537\n\n  * GrBackendRenderTargets which are created with a stencilBits param, now require\n    the stencilBits to be 0, 8, or 16.\n    https://review.skia.org/321545\n\n* * *\n\nMilestone 87\n------------\n\n  * GrVkImageInfo now has a field for sample count. GrBackendRenderTarget constructor\n    that took both a GrVkImageInfo and separate sample count is deprecated. Use the\n    version without sample count instead. Similarly, GrD3DTextureResourceInfo now\n    has a sample count field and GrBackendRenderTarget no longer takes a separate\n    sample count for Direct3D. The sample count for GrBackendRenderTarget is now\n    directly queried from MtlTexture rather than passed separately. The version that\n    takes a separate sample count is deprecated and the parameter is ignored.\n    https://review.skia.org/320262\n    https://review.skia.org/320757\n    https://review.skia.org/320956\n\n  * Added deprecation warning for Metal support on MacOS 10.13, iOS 8.3, and older.\n    https://review.skia.org/320260\n\n  * GrVkImageInfo now has a field for sample count. GrBackendRenderTarget constructor\n    that took both a GrVkImageInfo and separate sample count is deprecated. Use the\n    version without sample count instead.\n\n  * Update SkClipOp::kMax_EnumValue to include only intersect and difference when\n    SK_SUPPORT_DEPRECATED_CLIPOPS is not defined.\n    https://review.skia.org/320064\n\n  * Add support for external allocator for Direct3D 12 backend.\n    Defines base classes for an allocation associated with a backend texture and a\n    a memory allocator to create such allocations.\n    Adds memory allocator to backend context.\n    https://review.skia.org/317243\n\n  * Add new optional parameter to GrContext::setBackend[Texture/RenderTarget]State which can\n    be used to return the previous GrBackendSurfaceMutableState before the requested change.\n    https://review.skia.org/318698\n\n  * New optimized clip stack for GPU backends. Enabled by default but old behavior based on\n    SkClipStack can be restored by defining SK_DISABLE_NEW_GR_CLIP_STACK when building. It is not\n    compatible with SK_SUPPORT_DEPRECATED_CLIPOPS and we are targeting the removal of support for\n    the deprecated, expanding clip ops.\n    https://review.skia.org/317209\n\n  * GPU backends now properly honor the SkFilterQuality when calling drawAtlas.\n    https://review.skia.org/313081\n\n  * The signature of 'main' used with SkRuntimeEffect SkSL has changed. There is no longer an\n    'inout half4 color' parameter, effects must return their color instead.\n    Valid signatures are now 'half4 main()' or 'half4 main(float2 coord)'.\n    https://review.skia.org/310756\n\n  * New YUVA planar specifications for SkCodec, SkImageGenerator, SkImage::MakeFromYUVAPixmaps.\n    Chroma subsampling is specified in more structured way. SkCodec and SkImageGenerator\n    don't assume 3 planes with 8bit planar values. Old APIs are deprecated.\n    https://review.skia.org/309658\n    https://review.skia.org/312886\n    https://review.skia.org/314276\n    https://review.skia.org/316837\n    https://review.skia.org/317097\n\n  * Added VkImageUsageFlags to GrVkImageInfo struct.\n\n* * *\n\nMilestone 86\n------------\n\n  * Remove support for 'in' variables from SkRuntimeEffect. API now exclusively refers to inputs\n    as 'uniforms'.\n    https://review.skia.org/309050\n\n  * Add SkImageGeneratorNDK and SkEncodeImageWithNDK for using Android's NDK APIs to decode and\n    encode.\n    https://review.skia.org/308185\n    https://review.skia.org/308800\n\n  * SkImage:remove DecodeToRaster, DecodeToTexture\n    https://review.skia.org/306331\n\n  * Add GrContext api to update compressed backend textures.\n    https://review.skia.org/302265\n\n  * Rename GrMipMapped to GrMipmapped for consistency with new APIs.\n    Also rename GrBackendTexture::hasMipMaps() to GrBackendTexture::hasMipmaps()\n    https://review.skia.org/304576\n    https://review.skia.org/304598\n\n  * Add option for clients to own semaphores after wait calls.\n    https://review.skia.org/301216\n\n  * Remove obsolete GrFlushFlags.\n    https://review.skia.org/298818\n\n  * Adds default flush() calls to SkSurface, SkImage, and GrContext. These calls do\n    a basic flush without a submit. If you haven't updated Skia in a couple releases\n    and still have flush() calls in your code that you expect to do a flush and\n    submit, you should update all those to the previously added flushAndSubmit() calls\n    instead.\n    https://review.skia.org/299141\n\n  * Enable BackendSemaphores for the Direct3D backend.\n    https://review.skia.org/298752\n\n  * Added SkImage:asyncRescaleAndReadPixels and SkImage::asyncRescaleAndReadPixelsYUV420\n    https://review.skia.org/299281\n\n  * Ganesh is moving towards replacing GrContext with the GrDirectContext/GrRecordingContext\n    pair. GrDirectContexts have _direct_ access to the GPU and are very similar to the old\n    GrContext. GrRecordingContexts are less powerful contexts that lack GPU access but provided\n    context-like utilities during DDL recording. SkSurfaces and SkCanvas will now only return\n    GrRecordingContexts. Clients requiring context features that need GPU access can then\n    check (via GrRecordingContext::asDirectContext) if the available recording context is actually\n    a direct context.\n\n  * Replace #defined values in SkString with equivalent constexprs.\n    http://review.skia.org/306160\n\n* * *\n\nMilestone 85\n------------\n\n  * Added GrContext::oomed() which reports whether Skia has seen a GL_OUT_OF_MEMORY\n    error from Open GL [ES] or VK_ERROR_OUT_OF_*_MEMORY from Vulkan.\n    https://review.skia.org/298216\n\n  * Add option on SkSurface::flush to pass in a GrBackendSurfaceMutableState which\n    we will set the gpu backend surface to be at the end of the flush.\n    https://review.skia.org/295567\n\n  * Add GrContext function to set mutable state on a backend surface. Currently this\n    is only used for setting vulkan VkImage layout and queue family.\n    https://review.skia.org/293844\n\n  * SkSurface factores that take GrBackendTexture or GrBackendRenderTarget now always\n    call the release proc (if provided) on failure. SkSurface::replaceBackendTexture\n    also calls the release proc on failure.\n    https://review.skia.org/293762\n\n  * SkSurface::asyncRescaleAndReadPixels and SkSurfaceasyncRescaleAndReadPixelsYUV420\n    now require explicit GrContext submit to guarantee finite time before callback\n    is invoked.\n    https://review.skia.org/292840\n\n  * Add VkSharingMode field to GrVkImageInfo.\n    https://review.skia.org/293559\n\n  * Move SkBitmapRegionDecoder into client_utils/android.\n\n  * SkCanvas.clear and SkCanvas.drawColor now accept SkColor4f in addition to SkColor.\n\n  * Remove SkSurface::MakeFromBackendTextureAsRenderTarget.\n    This factory existed to work around issues with GL_TEXTURE_RECTANGLE that existed\n    in Chrome's command buffer. Those issues have since been resolved. Use\n    SkSurface::MakeFromBackendTexutre or SkSurface::MakeFromBackendRenderTarget instead.\n    https://review.skia.org/292719\n\n  * Adds submittedProc callback to GrFlushInfo which will be called when the work\n    from the flush call is submitted to the GPU. This is specifically useful for knowing\n    when semahpores sent with the flush have been submitted and can be waiting on.\n    https://review.skia.org/291078\n\n  * GrContext submit is now required to be called in order to send GPU work to the\n    actual GPU. The flush calls simply produces 3D API specific objects that are ready\n    to be submitted (e.g. command buffers). For the GL backend, the flush will still\n    send commands to the driver. However, clients should still assume the must call\n    submit which is where any glFlush that is need for sync objects will be called. There,\n    are flushAndSubmit() functions of GrContext, SkSurface, and SkImage that will act\n    like the previous flush() functions. This will flush the work and immediately call\n    submit.\n    https://review.skia.org/289033\n\n  * Remove deprecated version of flush calls on GrContext and SkSurface.\n    https://review.skia.org/2290540\n\n  * SkCanvas::drawVertices and drawPatch now support mapping an SkShader without explicit\n    texture coordinates. If they're not supplied, the local positions (vertex position or\n    patch cubic positions) will be directly used to sample the SkShader.\n    https://review.skia.org/290130\n\n* * *\n\nMilestone 84\n------------\n\n  * Add api on GrContext, updateBackendTexture that will upload new data to a\n    GrBackendTexture.\n    https://review.skia.org/288909\n\n  * Add GrContext getter to SkSurface.\n    https://review.skia.org/289479\n\n  * Deprecate GrContext and SkSurface flush() call and replace ith with flushAndSubmit().\n    This only effects the default flush call that takes no parameters.\n    https://review.skia.org/289478\n\n  * GrContext::createBackendTexture functions that initialize the texture no longer\n    guarantee that all the data has been uploaded and the gpu is done with the texture.\n    Instead the client can assume the upload work has been submitted to the gpu and they\n    must wait for that work to finish before deleting the texture. This can be done via\n    their own synchronization or by passing in a finish proc into the create calls which\n    will be called when it is safe to delete the texture (at least in terms of work\n    done during the create).\n    https://review.skia.org/286517\n\n  * Remove unused SkMaskFilter helpers: compbine, compose\n    Note: shadermaskfilter will likely be removed next (clipShader should serve)\n\n  * Add back SkCanvas::kPreserveLCDText_SaveLayerFlag to indicate that saveLayer()\n    will preserve LCD-text. All text in the layer must be drawn on opaque background\n    to ensure correct rendering.\n\n  * Add the new directory client_utils/ for code that is specific to a single client and\n    should be considered separate from Skia proper. Move SkFrontBufferedStream into the\n    subdir android/.\n\n  * SkBitmap and SkPixmap's erase() methods now treat their color parameters\n    consistently with the rest of Skia, with all SkColors and any untagged\n    SkColor4fs interpreted as sRGB, not as a color in the bitmap's color space.\n    SkPixmap::erase(SkColor4f) now takes an SkColorSpace, so you can pass\n    pixmap.colorSpace() if you want the old behavior.\n\n  * SkCamera.h and SkMatrix44.h are DEPRECATED.\n    Use SkM44 if you want to have 3d transformations.\n\n  * Changed Dilate and Erode image filters to take SkScalar for radius instead of int. While\n    the image filters themselves are defined in terms of discrete pixels, the radii provided by\n    the user are mapped through the CTM so taking ints forced over discretization. After mapping\n    through the CTM the radii are now rounded to pixels.\n    https://review.skia.org/281731\n    https://review.skia.org/282636\n\n  * Updated the contract of GrContext and SkSurface flush calls in regards to semaphores. Made it\n    clear that the caller is responsible for deleting any initialized semaphores after the flush\n    call regardless if we were able to submit them or not. Also, allows skia to only submit a\n    subset of the requested semaphores if we failed to create some.\n    https://review.skia.org/282265\n\n\n  * SkCanvas::drawVertices will now always fill the triangles specified by the vertices. Previously,\n    vertices with no colors and no (texture coordinates or shader) would be drawn in wireframe.\n    https://review.skia.org/282043\n\n* * *\n\nMilestone 83\n------------\n\n  * Remove localmatrix option from SkShaders::[Blend, Lerp]\n\n  * Fill out Direct3D parameters for backend textures and backend rendertargets.\n\n  * SkImage::makeTextureImage() takes an optional SkBudgeted param\n\n  * Made non-GL builds of GPU backend more robust.\n    https://review.skia.org/277456\n\n  * MoltenVK support removed. Use Metal backend instead.\n    https://review.skia.org/277612\n\n* * *\n\nMilestone 82\n------------\n\n  * Removed drawBitmap and related functions from SkDevice; all public drawBitmap functions on\n    SkCanvas automatically wrap the bitmap in an SkImage and call the equivalent drawImage function.\n    Drawing mutable SkBitmaps will now incur a mandatory copy. Switch to using SkImage directly or\n    mark the bitmap as immutable before drawing.\n\n  * Removed \"volatile\" flag from SkVertices. All SkVertices objects are assumed to be\n    volatile (the previous default behavior).\n\n  * Removed exotic legacy bitmap functions from SkCanvas (drawBitmapLattic, drawBitmapNine); the\n    exotic SkImage functions still exist.\n\n  * Make it possible to selectively turn on/off individual encoders/decoders,\n    using skia_use_(libpng/libjpeg_turbo/libwebp)(decode/encode).\n\n  * Removed GrGpuResource, GrSurface, and GrTexture from public api. These were not\n    meant to be public, and we now can move them into src. Also removed getTexture\n    function from SkImage.h\n\n  * Removed Bones from SkVertices\n\n  * Added a field to GrContextOptions that controls whether GL errors are checked after\n    GL calls that allocate textures, etc. It also controls checking for shader compile\n    success, and program linking success.\n\n  * Made SkDeferredDisplayList.h officially part of the public API (i.e., moved it to\n    include/core). Also added a ProgramIterator to SkDeferredDisplayList which allows\n    clients to pre-compile some of the shaders the DDL requires.\n\n  * Added two new helper methods to SkSurfaceCharacterization: createBackendFormat and\n    createFBO0. These make it easier for clients to create new surface characterizations that\n    differ only a little from an existing surface characterization.\n\n  * Removed SkTMax and SkTMin.\n  * Removed SkTClamp and SkClampMax.\n  * Removed SkScalarClampMax and SkScalarPin.\n  * Removed SkMax32 and SkMin32.\n  * Removed SkMaxScalar and SkMinScalar.\n\n  * SkColorSetA now warns if the result is unused.\n\n  * An SkImageInfo with a null SkColorSpace passed to SkCodec::getPixels() and\n    related calls is treated as a request to do no color correction at decode\n    time.\n\n  * Add new APIs to add attributes to document structure node when\n    creating a tagged PDF.\n\n  * Remove CGFontRef parameter from SkCreateTypefaceFromCTFont.\n    Use CTFontManagerCreateFontDescriptorFromData instead of\n    CGFontCreateWithDataProvider to create CTFonts to avoid memory use issues.\n\n  * Added SkCodec:: and SkAndroidCodec::getICCProfile for reporting the native\n    ICC profile of an encoded image, even if it doesn't map to an SkColorSpace.\n\n  * SkSurface::ReplaceBackendTexture takes ContentChangeMode as a parameter,\n    which allow callers to specify whether retain a copy of the current content.\n\n  * Enforce the existing documentation in SkCanvas::saveLayer that it ignores\n    any mask filter on the restore SkPaint. The 'coverage' of a layer is\n    ill-defined, and masking should be handled by pre-clipping or using the\n    auxiliary clip mask image of the SaveLayerRec.\n\n* * *\n\nMilestone 81\n------------\n\n  * Added support for GL_NV_fence extension.\n\n  * Make SkImageInfo::validRowBytes require rowBytes to be pixel aligned. This\n    makes SkBitmap match the behavior of raster SkSurfaces in rejecting\n    non-aligned rowBytes.\n\n  * Added an SkImage::MakeRasterFromCompressed entry point. Also updated\n    SkImage::MakeFromCompressed to decompress the compressed image data if\n    the GPU doesn't support the specified compression type (i.e., macOS Metal\n    doesn't support BC1_RGB8_UNORM so such compressed images will always be\n    decompressed on that platform).\n\n  * Added support for BC1 RGBA compressed textures\n\n  * Added CachingHint to SkImage::makeRasterImage\n\n  * Added SkAnimatedImage::getCurrentFrame()\n\n  * Add support to create an SkSurface from an MTKView, with delayed acquisition of\n    the MTLDrawable.\n    Entry point: SkSurface::MakeFromMTKView\n\n  * Removed SkIRect::EmptyIRect(). Use SkIRect::MakeEmpty() instead.\n    https://review.skia.org/262382/\n\n  * Moved SkRuntimeEffect to public API. This is the new (experimental) interface to custom SkSL\n    shaders and color filters.\n\n  * Added BC1 compressed format support. Metal and Vulkan seem to only support the BC\n    formats on desktop machines.\n\n  * Added compressed format support for backend texture creation API.\n    This adds the following new entry points:\n    GrContext::compressedBackendFormat\n    GrContext::createCompressedBackendTexture\n    The latter method comes in variants that allow color-initialized and\n    compressed texture data initialized.\n\n  * Added SkMatrix::MakeTrans(SkIVector)\n    https://review.skia.org/259804\n\n* * *\n\nMilestone 80\n------------\n\n  * For Vulkan backend, we now require that the VkDevice, Queue, and Instance outlive\n    either the destruction or abandoning of the GrContext. Additionally, all\n    GrBackendTextures created via GrContext::createBackendTexture calls must be deleted\n    before destroying or abandoning the GrContext.\n    https://review.skia.org/257921\n\n  * Removed SkSize& SkSize::operator=(const SkISize&)\n    https://review.skia.org/257880\n\n  * SkISize width() and height() now constexpr\n    https://review.skia.org/257680\n\n  * Added SkMatrix::MakeTrans(SkVector) and SkRect::makeOffset(SkVector).\n    https://review.skia.org/255782\n\n  * Added SkImageInfo::MakeA8(SkISize) and added optional color space parameter to\n    SkImageInfo::MakeN32Premul(SkISize).\n\n  * Added dimensions() and getFrameCount() to SkAnimatedImage\n    https://review.skia.org/253542\n\n  * Removed SkMatrix44 version of toXYZD50 from SkColorSpace. Switched to skcms types in\n    transferFn, invTrasnferFn, and gamutTransformTo functions.\n    https://review.skia.org/252596\n\n  * Removed rotation and YUV support from SkColorMatrix\n    https://review.skia.org/252188\n\n  * Added kBT2020_SkYUVColorSpace. This is BT.2020's YCbCr conversion (non-constant-luminance).\n    https://review.skia.org/252160\n\n  * Remove old async read pixels APIs\n    https://review.skia.org/251198\n\n  * Expose SkBlendModeCoeff and SkBlendMode_AsCoeff for Porter-Duff blend modes.\n    https://review.skia.org/252600\n\n* * *\n\nMilestone 79\n------------\n\n  * SkTextBlob::Iter to discover the glyph indices and typefaces in each run\n    https://skia-review.googlesource.com/246296\n\n  * Added support for PQ and HLG transfer functions to SkColorSpace.\n    https://skia-review.googlesource.com/c/skia/+/249000\n\n  * Added new api on GrContext ComputeImageSize. This replaces the hold static helper\n    ComputeTextureSize.\n    https://skia-review.googlesource.com/c/skia/+/247337\n\n  * New versions of SkSurface async-rescale-and read APIs that allow client to extend\n    the lifetime of the result data. Old versions are deprecated.\n    https://review.skia.org/245457\n\n  * Add SkColorInfo. It's dimensionless SkImageInfo.\n    https://review.skia.org/245261\n\n  * Added SkPixmap-based createBackendTexture method to GrContext. This allows clients to create\n    backend resources (initialized with texture data) that Skia/Ganesh doesn't know about/track.\n    https://review.skia.org/244676\n\n  * Add explicit src and dst colorspace parameters to SkColorFilter::filterColor4f()\n    https://review.skia.org/244882\n\n  * Remove Vulkan/Metal float32 RGBA texture support\n    https://review.skia.org/244881\n\n  * Add SkSurface::MakeFromCAMetalLayer\n    https://review.skia.org/242563\n\n  * Added kAlpha_F16_SkColorType, kRG_F16_SkColorType and kRGBA_16161616_SkColorType.\n    This is intended to help support HDR YUV uses case (e.g., P010 and P016). As such,\n    the addition is focused on allowing creation of SkPixmaps and SkImages and not\n    SkSurfaces (i.e., who wants to render to render to these?)\n    https://review.skia.org/241357\n\n  * Start to move nested SkPath types (e.g. Direction, Verb) up to root level in SkPathTypes.h\n    https://review.skia.org/241079\n\n  * Remove isRectContour and ksNestedFillRects from public\n    https://review.skia.org/241078\n\n  * Added kRG_88_SkColorType. This is intended to help support YUV uses case (e.g., NV12).\n    As such, the addition is focused on allowing creation of SkPixmaps and SkImages and not\n    SkSurfaces (i.e., who wants to render to RG?)\n    https://review.skia.org/239930\n    https://review.skia.org/235797\n\n  * Make the size of program/pipeline caches configurable via\n    GrContextOptions::fRuntimeProgramCacheSize\n    https://review.skia.org/239756\n\n  * Added kAlpha_16_SkColorType and kRG_1616_SkColorType. This is intended to help support HDR YUV\n    uses case (e.g., P010 and P016). As such, the addition is focused on allowing creation of\n    SkPixmaps and SkImages and not SkSurfaces (i.e., who wants to render to render to these?)\n    https://review.skia.org/239930\n\n  * Add GrContext::precompileShader to allow up-front compilation of previously-cached shaders.\n    https://review.skia.org/239438\n\n* * *\n\nMilestone 78\n------------\n\n  * SkDrawLooper is no longer supported in SkPaint or SkCanvas.\n    https://review.skia.org/230579\n    https://review.skia.org/231736\n\n  * SkPath::Iter::next() now ignores its consumDegenerates bools. Those will so\n    go away entirely\n    https://review.skia.org/235104\n\n  * SkImage: new factories: DecodeToRaster, DecodeToTexture\n    https://review.skia.org/234476\n\n  * SkImageFilter API refactor started:\n    - Provide new factory API in include/effects/SkImageFilters\n    - Consolidated enum types to use SkTileMode and SkColorChannel\n    - Hide filter implementation classes\n    - Hide previously public functions on SkImageFilter that were intended for\n      internal use only\n    https://review.skia.org/230198\n    https://review.skia.org/230876\n    https://review.skia.org/231256\n\n  * SkColorFilters::HSLAMatrix - new matrix color filter operating in HSLA\n    space.\n    https://review.skia.org/231736\n\n  * Modify GrBackendFormat getters to not return internal pointers. Use an enum\n    class for GL formats.\n    https://review.skia.org/233160\n\n  * Expose GrContext::dump() when SK_ENABLE_DUMP_GPU is defined.\n    https://review.skia.org/233557\n\n  * Vulkan backend now supports YCbCr sampler for I420 Vulkan images that are\n    not backed by external images.\n    https://review.skia.org/233776\n\n  * Add SkCodec::SelectionPolicy for distinguishing between decoding a still\n    image or an image sequence for a container format that has both (e.g. HEIF).\n    https://review.skia.org/232839\n\n  * SkImage::makeTextureImage and SkImage::MakeCrossContextFromPixmap no longer\n    take an SkColorSpace parameter. It was unused.\n    https://review.skia.org/234579\n    https://review.skia.org/234912\n\n  * SkImage::reinterpretColorSpace - to reinterpret image contents in a new\n    color space.\n    https://review.skia.org/234328\n\n  * Removed SkImage::MakeCrossContextFromEncoded.\n    https://review.skia.org/234912\n\n  * Add Metal support for GrFence, GrSemaphore, and GrBackendSemaphore\n    https://review.skia.org/233416\n\n  * SkMallocPixelRef: remove MakeDirect and MakeWithProc from API.\n    https://review.skia.org/234660\n\n  * Remove 4-parameter variant of SkRect::join() and intersect(), and\n    noemptycheck variants of intersect().\n    https://review.skia.org/235832\n    https://review.skia.org/237142\n\n  * Remove unused sk_sp comparison operators.\n    https://review.skia.org/236942\n\n  * Add SkColor4f variant to experimental_DrawEdgeAAQuad for SkiaRenderer.\n    https://review.skia.org/237492\n\n  * Deprecated maxCount resource cache limit for Ganesh.\n    This hasn't been relevant for a long time.\n\n  * Changed GrContextOptions' fDisallowGLSLBinaryCaching to fShaderCacheStrategy,\n    and allow caching SkSL.\n    https://review.skia.org/238856\n\n  * Use GL_QCOM_TILED_RENDERING to explicitly discard stencil\n\n  * Added RELEASE_NOTES.txt file\n    https://review.skia.org/229760\n\n  * Implemented internal support for OpenGL tessellation.\n"
        },
        {
          "name": "WORKSPACE.bazel",
          "type": "blob",
          "size": 26.83203125,
          "content": "workspace(name = \"skia\")\n\nload(\"//bazel:deps.bzl\", \"bazel_deps\", \"c_plus_plus_deps\")\n\nbazel_deps()\n\nload(\"//toolchain:download_toolchains.bzl\", \"download_toolchains_for_skia\")\n\ndownload_toolchains_for_skia(\"clang_linux_amd64\", \"clang_mac\", \"clang_windows_amd64\", \"ndk_linux_amd64\", \"clang_ios\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\", \"http_file\")\nload(\"//bazel:gcs_mirror.bzl\", \"gcs_mirror_url\")\n\n# See https://github.com/emscripten-core/emsdk/tree/85d27a4a2a60d591613a305b14ae438c2bb3ce11/bazel#setup-instructions\nhttp_archive(\n    name = \"emsdk\",\n    sha256 = \"cb8cded78f6953283429d724556e89211e51ac4d871fcf38e0b32405ee248e91\",\n    strip_prefix = \"emsdk-3.1.44/bazel\",\n    urls = gcs_mirror_url(\n        sha256 = \"cb8cded78f6953283429d724556e89211e51ac4d871fcf38e0b32405ee248e91\",\n        url = \"https://github.com/emscripten-core/emsdk/archive/refs/tags/3.1.44.tar.gz\",\n    ),\n)\n\nload(\"@emsdk//:deps.bzl\", emsdk_deps = \"deps\")\n\n# One of the deps here is build_bazel_rules_nodejs, currently version 5.8.0\n# If we try to install it ourselves after this, it won't work.\nemsdk_deps()\n\nload(\"@emsdk//:emscripten_deps.bzl\", emsdk_emscripten_deps = \"emscripten_deps\")\n\nemsdk_emscripten_deps(emscripten_version = \"3.1.44\")\n\nload(\"@bazel_toolchains//repositories:repositories.bzl\", bazel_toolchains_repositories = \"repositories\")\n\nbazel_toolchains_repositories()\n\nhttp_archive(\n    name = \"rules_pkg\",\n    sha256 = \"8f9ee2dc10c1ae514ee599a8b42ed99fa262b757058f65ad3c384289ff70c4b8\",\n    urls = gcs_mirror_url(\n        sha256 = \"8f9ee2dc10c1ae514ee599a8b42ed99fa262b757058f65ad3c384289ff70c4b8\",\n        url = \"https://github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz\",\n    ),\n)\n\nload(\"@rules_pkg//:deps.bzl\", \"rules_pkg_dependencies\")\n\nrules_pkg_dependencies()\n\n#######################################################################################\n# Python\n#######################################################################################\n\n# https://github.com/bazelbuild/rules_python\nhttp_archive(\n    name = \"rules_python\",\n    sha256 = \"5fa3c738d33acca3b97622a13a741129f67ef43f5fdfcec63b29374cc0574c29\",\n    strip_prefix = \"rules_python-0.9.0\",\n    urls = gcs_mirror_url(\n        sha256 = \"5fa3c738d33acca3b97622a13a741129f67ef43f5fdfcec63b29374cc0574c29\",\n        url = \"https://github.com/bazelbuild/rules_python/archive/refs/tags/0.9.0.tar.gz\",\n    ),\n)\n\n# This sets up a hermetic python3, rather than depending on what is installed.\nload(\"@rules_python//python:repositories.bzl\", \"python_register_toolchains\")\n\npython_register_toolchains(\n    name = \"python3_9\",\n    # https://github.com/bazelbuild/rules_python/blob/main/python/versions.bzl\n    python_version = \"3.9\",\n)\n\nload(\"@python3_9//:defs.bzl\", \"interpreter\")\nload(\"@rules_python//python:pip.bzl\", \"pip_install\")\n\npip_install(\n    name = \"py_deps\",\n    python_interpreter_target = interpreter,\n    requirements = \"//:requirements.txt\",\n)\n\n#######################################################################################\n# Gazelle\n#######################################################################################\n\nhttp_archive(\n    name = \"io_bazel_rules_go\",\n    sha256 = \"91585017debb61982f7054c9688857a2ad1fd823fc3f9cb05048b0025c47d023\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip\",\n        \"https://github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip\",\n    ],\n)\n\nhttp_archive(\n    name = \"bazel_gazelle\",\n    sha256 = \"d3fa66a39028e97d76f9e2db8f1b0c11c099e8e01bf363a923074784e451f809\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.33.0/bazel-gazelle-v0.33.0.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.33.0/bazel-gazelle-v0.33.0.tar.gz\",\n    ],\n)\n\nload(\"@bazel_gazelle//:deps.bzl\", \"gazelle_dependencies\")\nload(\"@io_bazel_rules_go//go:deps.bzl\", \"go_download_sdk\", \"go_register_toolchains\", \"go_rules_dependencies\")\nload(\"//:go_repositories.bzl\", \"go_repositories\")\n\n# gazelle:repository_macro go_repositories.bzl%go_repositories\ngo_repositories()\n\ngo_rules_dependencies()\n\n# For our Linux RBE pool\ngo_download_sdk(\n    name = \"go_sdk_linux_amd64\",\n    goarch = \"amd64\",\n    goos = \"linux\",\n    version = \"1.21.4\",\n)\n\n# For the host machine\ngo_download_sdk(\n    name = \"go_sdk\",\n    version = \"1.21.4\",\n)\n\n# Do not specify a version here or it will be an error (because we\n# specified the version above when downloading SDKs)\ngo_register_toolchains()\n\ngazelle_dependencies(\n    go_repository_default_config = \"//:WORKSPACE.bazel\",\n    go_sdk = \"go_sdk\",\n)\n\n##########################\n# Other Go dependencies. #\n##########################\n\nload(\"//bazel:go_googleapis_compatibility_hack.bzl\", \"go_googleapis_compatibility_hack\")\n\n# Compatibility hack to make the github.com/bazelbuild/remote-apis Go module work with rules_go\n# v0.41.0 or newer. See the go_googleapis() rule's docstring for details.\ngo_googleapis_compatibility_hack(\n    name = \"go_googleapis\",\n)\n\n# Needed by @com_github_bazelbuild_remote_apis.\nhttp_archive(\n    name = \"com_google_protobuf\",\n    sha256 = \"b8ab9bbdf0c6968cf20060794bc61e231fae82aaf69d6e3577c154181991f576\",\n    strip_prefix = \"protobuf-3.18.1\",\n    urls = gcs_mirror_url(\n        sha256 = \"b8ab9bbdf0c6968cf20060794bc61e231fae82aaf69d6e3577c154181991f576\",\n        url = \"https://github.com/protocolbuffers/protobuf/releases/download/v3.18.1/protobuf-all-3.18.1.tar.gz\",\n    ),\n)\n\n# Originally, we pulled protobuf dependencies as follows:\n#\n#     load(\"@com_google_protobuf//:protobuf_deps.bzl\", \"protobuf_deps\")\n#     protobuf_deps()\n#\n# The protobuf_deps() macro brings in a bunch of dependencies, but by copying the macro body here\n# and removing dependencies one by one, \"rules_proto\" was identified as the only dependency that is\n# required to build this repository.\nhttp_archive(\n    name = \"rules_proto\",\n    sha256 = \"a4382f78723af788f0bc19fd4c8411f44ffe0a72723670a34692ffad56ada3ac\",\n    strip_prefix = \"rules_proto-f7a30f6f80006b591fa7c437fe5a951eb10bcbcf\",\n    urls = [\"https://github.com/bazelbuild/rules_proto/archive/f7a30f6f80006b591fa7c437fe5a951eb10bcbcf.zip\"],\n)\n\nhttp_archive(\n    name = \"com_google_googleapis\",\n    sha256 = \"38701e513aff81c89f0f727e925bf04ac4883913d03a60cdebb2c2a5f10beb40\",\n    strip_prefix = \"googleapis-86fa44cc5ee2136e87c312f153113d4dd8e9c4de\",\n    urls = [\n        \"https://github.com/googleapis/googleapis/archive/86fa44cc5ee2136e87c312f153113d4dd8e9c4de.tar.gz\",\n    ],\n)\n\n# Needed by @com_github_bazelbuild_remote_apis for the googleapis protos.\nhttp_archive(\n    name = \"googleapis\",\n    build_file = \"BUILD.googleapis\",\n    sha256 = \"7b6ea252f0b8fb5cd722f45feb83e115b689909bbb6a393a873b6cbad4ceae1d\",\n    strip_prefix = \"googleapis-143084a2624b6591ee1f9d23e7f5241856642f4d\",\n    urls = gcs_mirror_url(\n        sha256 = \"7b6ea252f0b8fb5cd722f45feb83e115b689909bbb6a393a873b6cbad4ceae1d\",\n        # b/267219467\n        url = \"https://github.com/googleapis/googleapis/archive/143084a2624b6591ee1f9d23e7f5241856642f4d.zip\",\n    ),\n)\n\nload(\"@com_google_googleapis//:repository_rules.bzl\", googleapis_imports_switched_rules_by_language = \"switched_rules_by_language\")\n\ngoogleapis_imports_switched_rules_by_language(\n    name = \"com_google_googleapis_imports\",\n    go = True,\n    grpc = True,\n)\n\n# Needed by @com_github_bazelbuild_remote_apis for gRPC.\nhttp_archive(\n    name = \"com_github_grpc_grpc\",\n    sha256 = \"b391a327429279f6f29b9ae7e5317cd80d5e9d49cc100e6d682221af73d984a6\",\n    strip_prefix = \"grpc-93e8830070e9afcbaa992c75817009ee3f4b63a0\",  # v1.24.3 with fixes\n    urls = gcs_mirror_url(\n        sha256 = \"b391a327429279f6f29b9ae7e5317cd80d5e9d49cc100e6d682221af73d984a6\",\n        # Fix after https://github.com/grpc/grpc/issues/32259 is resolved\n        url = \"https://github.com/grpc/grpc/archive/93e8830070e9afcbaa992c75817009ee3f4b63a0.zip\",\n    ),\n)\n\n# Originally, we pulled gRPC dependencies as follows:\n#\n#     load(\"@com_github_grpc_grpc//bazel:grpc_deps.bzl\", \"grpc_deps\")\n#     grpc_deps()\n#\n# The grpc_deps() macro brings in a bunch of dependencies, but by copying the macro body here\n# and removing dependencies one by one, \"zlib\" was identified as the only dependency that is\n# required to build this repository.\nhttp_archive(\n    name = \"zlib\",\n    build_file = \"@com_github_grpc_grpc//third_party:zlib.BUILD\",\n    sha256 = \"6d4d6640ca3121620995ee255945161821218752b551a1a180f4215f7d124d45\",\n    strip_prefix = \"zlib-cacf7f1d4e3d44d871b605da3b647f07d718623f\",\n    url = \"https://github.com/madler/zlib/archive/cacf7f1d4e3d44d871b605da3b647f07d718623f.tar.gz\",\n)\n\n###################################################\n# JavaScript / TypeScript rules and dependencies. #\n###################################################\n\n# The npm_install rule runs anytime the package.json or package-lock.json file changes. It also\n# extracts any Bazel rules distributed in an npm package.\nload(\"@build_bazel_rules_nodejs//:index.bzl\", \"npm_install\")\n\n# Manages the node_modules directory.\nnpm_install(\n    name = \"npm\",\n    package_json = \"//:package.json\",\n    package_lock_json = \"//:package-lock.json\",\n)\n\n# io_bazel_rules_webtesting allows us to download browsers in a hermetic, repeatable way. This\n# currently includes Chromium and Firefox. Note that the version on this does not necessarily\n# match the version below of the browsers-X.Y.Z below that is available.\nhttp_archive(\n    name = \"io_bazel_rules_webtesting\",\n    sha256 = \"e9abb7658b6a129740c0b3ef6f5a2370864e102a5ba5ffca2cea565829ed825a\",\n    urls = gcs_mirror_url(\n        sha256 = \"e9abb7658b6a129740c0b3ef6f5a2370864e102a5ba5ffca2cea565829ed825a\",\n        url = \"https://github.com/bazelbuild/rules_webtesting/releases/download/0.3.5/rules_webtesting.tar.gz\",\n    ),\n)\n\n# https://github.com/bazelbuild/rules_webtesting/blob/e9cf17123068b1123c68219edf9b274bf057b9cc/web/versioned/browsers-0.3.3.bzl\nload(\"@io_bazel_rules_webtesting//web/versioned:browsers-0.3.3.bzl\", \"browser_repositories\")\n\nbrowser_repositories(\n    chromium = True,\n    firefox = True,\n)\n\n###################################################\n# Rust rules and dependencies.                    #\n###################################################\n\nhttp_archive(\n    name = \"rules_rust\",\n    sha256 = \"671ddb3fe5ebcf9dd34d051eca7352fbaf33fa53bf61eed0b75a4c34829e5480\",\n    urls = gcs_mirror_url(\n        sha256 = \"671ddb3fe5ebcf9dd34d051eca7352fbaf33fa53bf61eed0b75a4c34829e5480\",\n        url = \"https://github.com/bazelbuild/rules_rust/releases/download/0.52.2/rules_rust-v0.52.2.tar.gz\",\n    ),\n)\n\nload(\"@rules_rust//rust:repositories.bzl\", \"rules_rust_dependencies\", \"rust_register_toolchains\")\n\n# https://github.com/bazelbuild/rules_rust/blob/5c715ec50602e2ba6ca2ebfdd870662a6e6d1eda/rust/repositories.bzl#L48\nrules_rust_dependencies()\n\nrust_register_toolchains(\n    edition = \"2021\",\n    extra_target_triples = [\n        \"aarch64-apple-darwin\",\n        \"aarch64-apple-ios\",\n    ],\n    versions = [\n        # supported versions from https://github.com/bazelbuild/rules_rust/blob/5c715ec50602e2ba6ca2ebfdd870662a6e6d1eda/util/fetch_shas_VERSIONS.txt\n        # The rust rules validate a toolchain by sha256 hash, as listed in https://github.com/bazelbuild/rules_rust/blob/5c715ec50602e2ba6ca2ebfdd870662a6e6d1eda/rust/known_shas.bzl\n        \"1.76.0\",\n    ],\n)\n\n# https://bazelbuild.github.io/rules_rust/crate_universe.html\nload(\"@rules_rust//crate_universe:repositories.bzl\", \"crate_universe_dependencies\")\n\ncrate_universe_dependencies()\n\n# cxxbridge-cmd is a binary only Rust crate, so we follow these instructions for it\n# http://bazelbuild.github.io/rules_rust/crate_universe.html#binary-dependencies\n# If we need to update this, replace the Cargo.lock files with empty (existing) files and then\n# CARGO_BAZEL_REPIN=1 bazel sync --only=crate_index\nhttp_archive(\n    name = \"cxxbridge_cmd\",\n    build_file = \"//bazel/external/cxxbridge_cmd:BUILD.bazel.skia\",\n    sha256 = \"4717c9c806a9e07fdcb34c84965a414ea40fafe57667187052cf1eb7f5e8a8a9\",\n    strip_prefix = \"cxxbridge-cmd-1.0.135\",\n    type = \"tar.gz\",\n    urls = gcs_mirror_url(\n        ext = \".tar.gz\",\n        sha256 = \"4717c9c806a9e07fdcb34c84965a414ea40fafe57667187052cf1eb7f5e8a8a9\",\n        url = \"https://crates.io/api/v1/crates/cxxbridge-cmd/1.0.135/download\",\n    ),\n)\n\nload(\"@rules_rust//crate_universe:defs.bzl\", \"crate\", \"crates_repository\")\n\n# This finds all the dependencies needed to build cxxbridge_cmd...\ncrates_repository(\n    name = \"cxxbridge_cmd_deps\",\n    cargo_lockfile = \"//bazel/external/cxxbridge_cmd:Cargo.lock\",\n    manifests = [\"@cxxbridge_cmd//:Cargo.toml\"],\n)\n\nload(\"@cxxbridge_cmd_deps//:defs.bzl\", cxxbridge_cmd_deps = \"crate_repositories\")\n\n# ... and adds them to the workspace.\ncxxbridge_cmd_deps()\n\n# The cxx crate needs a custom BUILD.bazel file because the one that would be autogenerated\n# by http://bazelbuild.github.io/rules_rust/crate_universe.html#direct-packages does not work.\n# Thus, we download it ourselves, as if it were a binary-only package.\nhttp_archive(\n    name = \"cxx\",\n    build_file = \"//bazel/external/cxx:BUILD.bazel.skia\",\n    sha256 = \"4d44ff199ff93242c3afe480ab588d544dd08d72e92885e152ffebc670f076ad\",\n    strip_prefix = \"cxx-1.0.135\",\n    type = \"tar.gz\",\n    urls = gcs_mirror_url(\n        ext = \".tar.gz\",\n        sha256 = \"4d44ff199ff93242c3afe480ab588d544dd08d72e92885e152ffebc670f076ad\",\n        url = \"https://crates.io/api/v1/crates/cxx/1.0.135/download\",\n    ),\n)\n\n# This finds all the dependencies needed to build cxx...\ncrates_repository(\n    name = \"cxx_deps\",\n    cargo_lockfile = \"//bazel/external/cxx:Cargo.lock\",\n    manifests = [\"@cxx//:Cargo.toml\"],\n)\n\nload(\"@cxx_deps//:defs.bzl\", cxx_deps = \"crate_repositories\")\n\n# ... and adds them to the workspace.\ncxx_deps()\n\n# The fontations repository consists of multiple crates. We download those\n# listed in the external/fontations/Cargo.* files.\n# Add this entry to have a root repository from which the individual\n# fontations crates can be fetched.\n# This allows them to be used as deps in other bazel targets.\ncrates_repository(\n    name = \"fontations\",\n    cargo_lockfile = \"//bazel/external/fontations:Cargo.lock\",\n    manifests = [\"//bazel/external/fontations:Cargo.toml\"],\n)\n\nload(\"@fontations//:defs.bzl\", fontations_crates = \"crate_repositories\")\n\nfontations_crates()\n\n# The icu4x repository consists of multiple crates. We download those\n# listed in the external/icu4x/Cargo.* files.\n# Add this entry to have a root repository from which the individual\n# icu4x crates can be fetched.\n# This allows them to be used as deps in other bazel targets.\ncrates_repository(\n    name = \"icu4x_deps\",\n    cargo_lockfile = \"//bazel/external/icu4x:Cargo.lock\",\n    manifests = [\"//bazel/external/icu4x:Cargo.toml\"],\n)\n\nload(\"@icu4x_deps//:defs.bzl\", icu4x_deps = \"crate_repositories\")\n\nicu4x_deps()\n\n# The repository of third-party crates (currently just the `png` crate)\n# to support `//experimental/rust_png` code.\ncrates_repository(\n    name = \"rust_png\",\n    cargo_lockfile = \"//experimental/rust_png/ffi:Cargo.lock\",\n    packages = {\n        \"png\": crate.spec(\n            # Note: for additional performance gains `features = [\"unstable\"]`\n            # can be enabled, but this requires the nightly, unstable `rustc`.\n            version = \"0.17.15\",\n        ),\n    },\n)\n\nload(\"@rust_png//:defs.bzl\", rust_png_crates = \"crate_repositories\")\n\nrust_png_crates()\n\n# Skia uses crates from the vello repository that are under development and have not been published\n# to crates.io. Normally we could fetch them directly from the git mirror in the Cargo.lock file as\n# Bazel supports compiling them without any custom build rules. However, since Bazel's repository\n# rules don't play well with the vello_shader crate's build script, we compile the vello\n# crates from source using the rules defined in bazel/external/vello/BUILD.bazel and the\n# new_git_repository rule.\n#\n# vello_deps contains the dependencies of the two crates we build out of the vello repo (namely\n# vello_shaders and vello_encoding).\n#\n# See comments in bazel/external/vello/BUILD.bazel for more information.\ncrates_repository(\n    name = \"vello_deps\",\n    cargo_lockfile = \"//bazel/external/vello:Cargo.lock\",\n    manifests = [\"//bazel/external/vello:Cargo.toml\"],\n)\n\nload(\"@vello_deps//:defs.bzl\", vello_deps = \"crate_repositories\")\n\nvello_deps()\n\n###############################################################\n\n# Bazel will look for env variables ANDROID_HOME and ANDROID_NDK_HOME.\n# This is NOT hermetic as it requires the user to handle downloading the SDK  and accepting the\n# license independently.\nandroid_sdk_repository(name = \"androidsdk\")\n# TODO: skbug.com/14128\n# Uncomment the following after setting ANDROID_NDK_HOME to build for Android:\n# android_ndk_repository(name = \"androidndk\")\n\n# Clients must specify their own version of skia_user_config to overwrite SkUserConfig.h\nlocal_repository(\n    name = \"skia_user_config\",\n    path = \"include/config\",\n)\n\n# This are two lists of Bazel repository names, which is brought in by the following macro.\n# It is here for easier grepping, i.e. someone trying to find where a label like @brotli//:brotlidec\n# was defined. If a dep has its own BUILD rules, then one will need to go to its git repository\n# to find the BUILD or BUILD.bazel file with the rule. If a dep does not have Bazel support, then\n# that means someone on the Skia team wrote a BUILD.bazel file and put it in\n# //bazel/external/<dep_name> and one can go find it there.\n#\n#### START GENERATED LIST OF THIRD_PARTY DEPS\n# @abseil_cpp - https://skia.googlesource.com/external/github.com/abseil/abseil-cpp.git\n# @brotli - https://skia.googlesource.com/external/github.com/google/brotli.git\n# @highway - https://chromium.googlesource.com/external/github.com/google/highway.git\n# @spirv_headers - https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Headers.git\n# @spirv_tools - https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Tools.git\n#\n# @dawn - //bazel/external/dawn:BUILD.bazel\n# @delaunator - //bazel/external/delaunator:BUILD.bazel\n# @dng_sdk - //bazel/external/dng_sdk:BUILD.bazel\n# @expat - //bazel/external/expat:BUILD.bazel\n# @freetype - //bazel/external/freetype:BUILD.bazel\n# @harfbuzz - //bazel/external/harfbuzz:BUILD.bazel\n# @icu - //bazel/external/icu:BUILD.bazel\n# @icu4x - //bazel/external/icu4x:BUILD.bazel\n# @imgui - //bazel/external/imgui:BUILD.bazel\n# @libavif - //bazel/external/libavif:BUILD.bazel\n# @libgav1 - //bazel/external/libgav1:BUILD.bazel\n# @libjpeg_turbo - //bazel/external/libjpeg_turbo:BUILD.bazel\n# @libjxl - //bazel/external/libjxl:BUILD.bazel\n# @libpng - //bazel/external/libpng:BUILD.bazel\n# @libwebp - //bazel/external/libwebp:BUILD.bazel\n# @libyuv - //bazel/external/libyuv:BUILD.bazel\n# @perfetto - //bazel/external/perfetto:BUILD.bazel\n# @piex - //bazel/external/piex:BUILD.bazel\n# @spirv_cross - //bazel/external/spirv_cross:BUILD.bazel\n# @vello - //bazel/external/vello:BUILD.bazel\n# @vulkan_headers - //bazel/external/vulkan_headers:BUILD.bazel\n# @vulkan_tools - //bazel/external/vulkan_tools:BUILD.bazel\n# @vulkan_utility_libraries - //bazel/external/vulkan_utility_libraries:BUILD.bazel\n# @vulkanmemoryallocator - //bazel/external/vulkanmemoryallocator:BUILD.bazel\n# @wuffs - //bazel/external/wuffs:BUILD.bazel\n# @zlib_skia - //bazel/external/zlib_skia:BUILD.bazel\n#### END GENERATED LIST OF THIRD_PARTY DEPS\nc_plus_plus_deps()\n\n# In order to copy the Freetype configurations into the checked out Freetype folder,\n# it is easiest to treat them as a third-party dependency from the perspective of Freetype.\n# To do that, we put them in their own Bazel workspace and then have our injected BUILD.bazel\n# for Freetype reference this workspace.\n# https://bazel.build/reference/be/workspace#new_local_repository\nlocal_repository(\n    name = \"freetype_config\",\n    path = \"third_party/freetype2/include\",\n)\n\nlocal_repository(\n    name = \"harfbuzz_config\",\n    path = \"third_party/harfbuzz\",\n)\n\nlocal_repository(\n    name = \"icu_utils\",\n    path = \"third_party/icu\",\n)\n\nlocal_repository(\n    name = \"expat_config\",\n    path = \"third_party/expat/include\",\n)\n\nload(\"//bazel:cipd_install.bzl\", \"cipd_install\")\n\ncipd_install(\n    name = \"git_linux_amd64\",\n    build_file_content = \"\"\"\nfilegroup(\n  name = \"all_files\",\n  # The exclude pattern prevents files with spaces in their names from tripping up Bazel.\n  srcs = glob(include=[\"**/*\"], exclude=[\"**/* *\"]),\n  visibility = [\"//visibility:public\"],\n)\n\"\"\",\n    cipd_package = \"infra/3pp/tools/git/linux-amd64\",\n    # Based on\n    # https://skia.googlesource.com/buildbot/+/f1d21dc58818cd6aba0a7822e59d37636aefe936/WORKSPACE#391.\n    #\n    # Note that the below \"git config\" commands do not affect the user's Git configuration. These\n    # settings are only visible to Bazel targets that depend on @git_linux_amd64//:all_files via\n    # the \"data\" attribute. The result of these commands can be examined as follows:\n    #\n    #     $ cat $(bazel info output_base)/external/git_linux_amd64/etc/gitconfig\n    #     [user]\n    #             name = Bazel Test User\n    #             email = bazel-test-user@example.com\n    postinstall_cmds_posix = [\n        \"mkdir etc\",\n        \"bin/git config --system user.name \\\"Bazel Test User\\\"\",\n        \"bin/git config --system user.email \\\"bazel-test-user@example.com\\\"\",\n    ],\n    # From https://chrome-infra-packages.appspot.com/p/infra/3pp/tools/git/linux-amd64/+/version:2.29.2.chromium.6\n    sha256 = \"36cb96051827d6a3f6f59c5461996fe9490d997bcd2b351687d87dcd4a9b40fa\",\n    tag = \"version:2.29.2.chromium.6\",\n)\n\ncipd_install(\n    name = \"gn_linux_amd64\",\n    build_file_content = \"\"\"\nexports_files(\n    [\"gn\"],\n    visibility = [\"//visibility:public\"]\n)\n\"\"\",\n    cipd_package = \"gn/gn/linux-amd64\",\n    # From https://chrome-infra-packages.appspot.com/p/gn/gn/linux-amd64/+/git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\n    sha256 = \"7195291488d08f3a10e85b85d8c4816e077015f1c5f196f770003a97aa42caf8\",\n    tag = \"git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\",\n)\n\ncipd_install(\n    name = \"gn_mac_arm64\",\n    build_file_content = \"\"\"\nexports_files(\n    [\"gn\"],\n    visibility = [\"//visibility:public\"]\n)\n\"\"\",\n    cipd_package = \"gn/gn/mac-arm64\",\n    # From https://chrome-infra-packages.appspot.com/p/gn/gn/mac-arm64/+/git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\n    sha256 = \"1123907ac3317530e9dd537d50cd83fd83e852aacc07d286f45753c8fc5287ed\",\n    tag = \"git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\",\n)\n\ncipd_install(\n    name = \"gn_mac_amd64\",\n    build_file_content = \"\"\"\nexports_files(\n    [\"gn\"],\n    visibility = [\"//visibility:public\"]\n)\n\"\"\",\n    cipd_package = \"gn/gn/mac-amd64\",\n    # From https://chrome-infra-packages.appspot.com/p/gn/gn/mac-amd64/+/git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\n    sha256 = \"ed96f7d2f49b83b016e4bdbed432e4734a5a133accb025d7c07685e01489ba93\",\n    tag = \"git_revision:1c4151ff5c1d6fbf7fa800b8d4bb34d3abc03a41\",\n)\n\ncipd_install(\n    name = \"skimage\",\n    build_file = \"//bazel/external/skimage:BUILD.bazel\",\n    cipd_package = \"skia/bots/skimage\",\n    # From https://chrome-infra-packages.appspot.com/p/skia/bots/skimage/+/sRladEfUAXeYIBD3Pt3ke0Fd08vtYVLrg4IASKk5F6YC\n    sha256 = \"b1195a7447d40177982010f73edde47b415dd3cbed6152eb83820048a93917a6\",\n    tag = \"version:47\",\n)\n\nhttp_file(\n    name = \"buildifier_linux_x64\",\n    downloaded_file_path = \"buildifier\",\n    executable = True,\n    sha256 = \"be63db12899f48600bad94051123b1fd7b5251e7661b9168582ce52396132e92\",\n    urls = gcs_mirror_url(\n        ext = \"\",\n        sha256 = \"be63db12899f48600bad94051123b1fd7b5251e7661b9168582ce52396132e92\",\n        url = \"https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-linux-amd64\",\n    ),\n)\n\nhttp_file(\n    name = \"buildifier_macos_arm64\",\n    downloaded_file_path = \"buildifier\",\n    executable = True,\n    sha256 = \"fa07ba0d20165917ca4cc7609f9b19a8a4392898148b7babdf6bb2a7dd963f05\",\n    urls = gcs_mirror_url(\n        ext = \"\",\n        sha256 = \"fa07ba0d20165917ca4cc7609f9b19a8a4392898148b7babdf6bb2a7dd963f05\",\n        url = \"https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-darwin-arm64\",\n    ),\n)\n\nhttp_file(\n    name = \"buildifier_macos_x64\",\n    downloaded_file_path = \"buildifier\",\n    executable = True,\n    sha256 = \"eeb47b2de27f60efe549348b183fac24eae80f1479e8b06cac0799c486df5bed\",\n    urls = gcs_mirror_url(\n        ext = \"\",\n        sha256 = \"eeb47b2de27f60efe549348b183fac24eae80f1479e8b06cac0799c486df5bed\",\n        url = \"https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-darwin-amd64\",\n    ),\n)\n\n##################################\n# Docker rules and dependencies. #\n##################################\n\nhttp_archive(\n    name = \"io_bazel_rules_docker\",\n    sha256 = \"b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf\",\n    urls = gcs_mirror_url(\n        sha256 = \"b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf\",\n        url = \"https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz\",\n    ),\n)\n\nload(\n    \"@io_bazel_rules_docker//repositories:repositories.bzl\",\n    container_repositories = \"repositories\",\n)\n\ncontainer_repositories()\n\n# This is required by the toolchain_container rule.\nload(\n    \"@io_bazel_rules_docker//repositories:go_repositories.bzl\",\n    container_go_deps = \"go_deps\",\n)\n\ncontainer_go_deps()\n\nload(\n    \"@io_bazel_rules_docker//container:container.bzl\",\n    \"container_pull\",\n)\n\n# Pulls the gcr.io/skia-public/debugger-app-base container.\ncontainer_pull(\n    name = \"debugger-app-base\",\n    digest = \"sha256:e9a6ea69ff3d616e5757891be54a232902b65f790d69655dab25048abacbd84d\",\n    registry = \"gcr.io\",\n    repository = \"skia-public/debugger-app-base\",\n)\n\n# Pulls the gcr.io/skia-public/jsfiddle-base container.\ncontainer_pull(\n    name = \"jsfiddle-base\",\n    digest = \"sha256:fb2d48f7af982ed974832b6eef330985af8f640f5168188bbea3986543d4af90\",\n    registry = \"gcr.io\",\n    repository = \"skia-public/jsfiddle-base\",\n)\n\n# Pulls the gcr.io/skia-public/shaders-base container.\ncontainer_pull(\n    name = \"shaders-base\",\n    digest = \"sha256:9481c3eb25d23889071ead9351254cc96b295c5290794cb4a13298134d1c5b57\",\n    registry = \"gcr.io\",\n    repository = \"skia-public/shaders-base\",\n)\n\n# Pulls the gcr.io/skia-public/skottie-base container.\ncontainer_pull(\n    name = \"skottie-base\",\n    digest = \"sha256:659bf938549fc0d201b5b91c34854c9e0441898394d43a6505e250f6d6f063dc\",\n    registry = \"gcr.io\",\n    repository = \"skia-public/skottie-base\",\n)\n\nhttp_archive(\n    name = \"build_bazel_rules_apple\",\n    sha256 = \"62847b3f444ce514ae386704a119ad7b29fa6dfb65a38bff4ae239f2389a0429\",\n    url = \"https://github.com/bazelbuild/rules_apple/releases/download/3.8.0/rules_apple.3.8.0.tar.gz\",\n)\n\nload(\n    \"@build_bazel_rules_apple//apple:repositories.bzl\",\n    \"apple_rules_dependencies\",\n)\n\napple_rules_dependencies()\n\nload(\n    \"@build_bazel_rules_swift//swift:repositories.bzl\",\n    \"swift_rules_dependencies\",\n)\n\nswift_rules_dependencies()\n\nload(\n    \"@build_bazel_rules_swift//swift:extras.bzl\",\n    \"swift_rules_extra_dependencies\",\n)\n\nswift_rules_extra_dependencies()\n\nload(\n    \"@build_bazel_apple_support//lib:repositories.bzl\",\n    \"apple_support_dependencies\",\n)\n\napple_support_dependencies()\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "client_utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "codereview.settings",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# This file is used by gcl to get repository specific information.\nCODE_REVIEW_SERVER: codereview.chromium.org\nVIEW_VC: https://skia.googlesource.com/skia/+/\nCC_LIST: reviews@skia.org\nBUG_PREFIX: b/\nTRYSERVER_SVN_URL: https://skia-try.googlecode.com/svn\nPROJECT: skia\nGERRIT_HOST: True\nRUN_POST_UPLOAD_HOOK: True\n"
        },
        {
          "name": "demos.skia.org",
          "type": "tree",
          "content": null
        },
        {
          "name": "dm",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "gm",
          "type": "tree",
          "content": null
        },
        {
          "name": "gn",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 5.18359375,
          "content": "module go.skia.org/skia\n\ngo 1.21\n\nrequire (\n\tcloud.google.com/go/pubsub v1.33.0\n\tcloud.google.com/go/storage v1.31.0\n\tgithub.com/flynn/json5 v0.0.0-20160717195620-7620272ed633\n\tgithub.com/golang/glog v1.1.2\n\tgithub.com/google/uuid v1.5.0\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/trietmn/go-wiki v1.0.1\n\tgo.chromium.org/luci v0.0.0-20240206071351-fb32c458db6e // indirect\n\tgo.skia.org/infra v0.0.0-20250109232601-c67b4fc704ca\n\tgoogle.golang.org/api v0.160.0\n\tgoogle.golang.org/protobuf v1.32.0\n)\n\nrequire (\n\tgithub.com/shirou/gopsutil v3.21.11+incompatible\n\tgolang.org/x/exp v0.0.0-20231127185646-65229373498e\n)\n\nrequire (\n\tcloud.google.com/go v0.111.0 // indirect\n\tcloud.google.com/go/compute v1.23.3 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tcloud.google.com/go/iam v1.1.5 // indirect\n\tcloud.google.com/go/logging v1.9.0 // indirect\n\tcloud.google.com/go/longrunning v0.5.4 // indirect\n\tcloud.google.com/go/secretmanager v1.11.4 // indirect\n\tgithub.com/aclements/go-moremath v0.0.0-20190830160640-d16893ddf098 // indirect\n\tgithub.com/anaskhan96/soup v1.2.5 // indirect\n\tgithub.com/bazelbuild/remote-apis v0.0.0-20230822133051-6c32c3b917cc // indirect\n\tgithub.com/bazelbuild/remote-apis-sdks v0.0.0-20231114220034-042d9851eb28 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff v2.2.1+incompatible // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.1.3 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/danjacques/gofslock v0.0.0-20240212154529-d899e02bfe22 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fiorix/go-web v1.0.1-0.20150221144011-5b593f1e8966 // indirect\n\tgithub.com/go-chi/chi/v5 v5.0.8 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-python/gpython v0.0.3 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/mock v1.6.0 // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.0 // indirect\n\tgithub.com/iancoleman/orderedmap v0.0.0-20190318233801-ac98e3ecb4b0 // indirect\n\tgithub.com/invopop/jsonschema v0.7.0 // indirect\n\tgithub.com/jcgregorio/logger v0.1.3 // indirect\n\tgithub.com/jcgregorio/slog v0.0.0-20190423190439-e6f2d537f900 // indirect\n\tgithub.com/julienschmidt/httprouter v1.3.0 // indirect\n\tgithub.com/klauspost/compress v1.16.7 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.2-0.20181231171920-c182affec369 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/mostynb/zstdpool-syncpool v0.0.12 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/pborman/uuid v1.2.1 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pkg/xattr v0.4.9 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_golang v1.11.1 // indirect\n\tgithub.com/prometheus/client_model v0.4.0 // indirect\n\tgithub.com/prometheus/common v0.26.0 // indirect\n\tgithub.com/prometheus/procfs v0.6.0 // indirect\n\tgithub.com/stretchr/objx v0.5.0 // indirect\n\tgithub.com/texttheater/golang-levenshtein v1.0.1 // indirect\n\tgithub.com/willf/bitset v1.1.11 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgithub.com/xeipuuv/gojsonschema v1.2.0 // indirect\n\tgithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.2 // indirect\n\tgithub.com/zeebo/bencode v1.0.0 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.47.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 // indirect\n\tgo.opentelemetry.io/otel v1.22.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.22.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.22.0 // indirect\n\tgolang.org/x/crypto v0.20.0 // indirect\n\tgolang.org/x/net v0.21.0 // indirect\n\tgolang.org/x/oauth2 v0.16.0 // indirect\n\tgolang.org/x/sync v0.6.0 // indirect\n\tgolang.org/x/sys v0.17.0 // indirect\n\tgolang.org/x/term v0.17.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgoogle.golang.org/appengine v1.6.8 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240116215550-a9fa1716bcac // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240125205218-1f4bbc51befe // indirect\n\tgoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240116215550-a9fa1716bcac // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240116215550-a9fa1716bcac // indirect\n\tgoogle.golang.org/grpc v1.61.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/fsnotify.v1 v1.4.7 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 44.4765625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.111.0 h1:YHLKNupSD1KqjDbQ3+LVdQ81h/UJbJyZG203cEfnQgM=\ncloud.google.com/go v0.111.0/go.mod h1:0mibmpKP1TyOOFYQY5izo0LnT+ecvOQ0Sg3OdmMiNRU=\ncloud.google.com/go/compute v1.23.3 h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=\ncloud.google.com/go/compute v1.23.3/go.mod h1:VCgBUoMnIVIR0CscqQiPJLAG25E3ZRZMzcFZeQ+h8CI=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/iam v1.1.5 h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=\ncloud.google.com/go/iam v1.1.5/go.mod h1:rB6P/Ic3mykPbFio+vo7403drjlgvoWfYpJhMXEbzv8=\ncloud.google.com/go/kms v1.15.5 h1:pj1sRfut2eRbD9pFRjNnPNg/CzJPuQAzUujMIM1vVeM=\ncloud.google.com/go/kms v1.15.5/go.mod h1:cU2H5jnp6G2TDpUGZyqTCoy1n16fbubHZjmVXSMtwDI=\ncloud.google.com/go/logging v1.9.0 h1:iEIOXFO9EmSiTjDmfpbRjOxECO7R8C7b8IXUGOj7xZw=\ncloud.google.com/go/logging v1.9.0/go.mod h1:1Io0vnZv4onoUnsVUQY3HZ3Igb1nBchky0A0y7BBBhE=\ncloud.google.com/go/longrunning v0.5.4 h1:w8xEcbZodnA2BbW6sVirkkoC+1gP8wS57EUUgGS0GVg=\ncloud.google.com/go/longrunning v0.5.4/go.mod h1:zqNVncI0BOP8ST6XQD1+VcvuShMmq7+xFSzOL++V0dI=\ncloud.google.com/go/pubsub v1.33.0 h1:6SPCPvWav64tj0sVX/+npCBKhUi/UjJehy9op/V3p2g=\ncloud.google.com/go/pubsub v1.33.0/go.mod h1:f+w71I33OMyxf9VpMVcZbnG5KSUkCOUHYpFd5U1GdRc=\ncloud.google.com/go/secretmanager v1.11.4 h1:krnX9qpG2kR2fJ+u+uNyNo+ACVhplIAS4Pu7u+4gd+k=\ncloud.google.com/go/secretmanager v1.11.4/go.mod h1:wreJlbS9Zdq21lMzWmJ0XhWW2ZxgPeahsqeV/vZoJ3w=\ncloud.google.com/go/storage v1.31.0 h1:+S3LjjEN2zZ+L5hOwj4+1OkGCsLVe0NzpXKQ1pSdTCI=\ncloud.google.com/go/storage v1.31.0/go.mod h1:81ams1PrhW16L4kF7qg+4mTq7SRs5HsbDTM0bWvrwJ0=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/aclements/go-moremath v0.0.0-20190830160640-d16893ddf098 h1:a7+Y8VlXRC2VX5ue6tpCutr4PsrkRkWWVZv4zqfaHuc=\ngithub.com/aclements/go-moremath v0.0.0-20190830160640-d16893ddf098/go.mod h1:idZL3yvz4kzx1dsBOAC+oYv6L92P1oFEhUXUB1A/lwQ=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/anaskhan96/soup v1.2.5 h1:V/FHiusdTrPrdF4iA1YkVxsOpdNcgvqT1hG+YtcZ5hM=\ngithub.com/anaskhan96/soup v1.2.5/go.mod h1:6YnEp9A2yywlYdM4EgDz9NEHclocMepEtku7wg6Cq3s=\ngithub.com/bazelbuild/remote-apis v0.0.0-20230822133051-6c32c3b917cc h1:TPwjNpCdoO7TcTPPMHEkrrlSwd8g2XVf3qflmnivvsU=\ngithub.com/bazelbuild/remote-apis v0.0.0-20230822133051-6c32c3b917cc/go.mod h1:ry8Y6CkQqCVcYsjPOlLXDX2iRVjOnjogdNwhvHmRcz8=\ngithub.com/bazelbuild/remote-apis-sdks v0.0.0-20231114220034-042d9851eb28 h1:/7itEMv7uUfXNXKUq9R8fGYF4Kb+ouOsVYsxSEsKmaw=\ngithub.com/bazelbuild/remote-apis-sdks v0.0.0-20231114220034-042d9851eb28/go.mod h1:E6OuuTP51pswhFFf0TwNQeYQjJ6+xt3nnx4QSzYpvbg=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cenkalti/backoff v2.2.1+incompatible h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=\ngithub.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=\ngithub.com/cenkalti/backoff/v4 v4.1.3 h1:cFAlzYUlVYDysBEH2T5hyJZMh3+5+WCBvSnK6Q8UtC4=\ngithub.com/cenkalti/backoff/v4 v4.1.3/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/xds/go v0.0.0-20231109132714-523115ebc101 h1:7To3pQ+pZo0i3dsWEbinPNFs5gPSBOsJtx3wTT94VBY=\ngithub.com/cncf/xds/go v0.0.0-20231109132714-523115ebc101/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/danjacques/gofslock v0.0.0-20240212154529-d899e02bfe22 h1:m+Fkk9QEMuV6Z1ithqqYogOHV7Pl6rMKe34NBTJTS/c=\ngithub.com/danjacques/gofslock v0.0.0-20240212154529-d899e02bfe22/go.mod h1:jXqs4TJbb7Xtl0FwUgBaOXty8edb/61H37U4D9E5EQE=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.2 h1:QkIBuU5k+x7/QXPvPPnWXWlCdaBFApVqftFV6k087DA=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.2/go.mod h1:GpiZQP3dDbg4JouG/NNS7QWXpgx6x8QiMKdmN72jogE=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fiorix/go-web v1.0.1-0.20150221144011-5b593f1e8966 h1:P/Czr+qFBdKELw4nys0x2e5nkT9niVq/2FS63ArJzm4=\ngithub.com/fiorix/go-web v1.0.1-0.20150221144011-5b593f1e8966/go.mod h1:5OPf/2cFhfql2NdV8pCcv9fZJ0e0LC//L+72iX1cqDM=\ngithub.com/flynn/json5 v0.0.0-20160717195620-7620272ed633 h1:xJMmr4GMYIbALX5edyoDIOQpc2bOQTeJiWMeCl9lX/8=\ngithub.com/flynn/json5 v0.0.0-20160717195620-7620272ed633/go.mod h1:NJDK3/o7abx6PP54EOe0G0n0RLmhCo9xv61gUYpI0EY=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/go-chi/chi/v5 v5.0.8 h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\ngithub.com/go-chi/chi/v5 v5.0.8/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-python/gpython v0.0.3 h1:QNFZ0h540Lajx7Pi/os06XzzdYUQG+2sV7IvPo/Mvmg=\ngithub.com/go-python/gpython v0.0.3/go.mod h1:bmk0l57W/7Cs67MMnz4U28SoYyvz5NTMYyJvUqytJhs=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.1.2 h1:DVjP2PbBOzHyzA+dn3WhHIq4NdVu3Q+pvivFICf/7fo=\ngithub.com/golang/glog v1.1.2/go.mod h1:zR+okUeTbrL6EL3xHUDxZuEtGv04p5shwip1+mL/rLQ=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.5.0 h1:1p67kYwdtXjb0gL0BPiP1Av9wiZPo5A8z2cWkTZ+eyU=\ngithub.com/google/uuid v1.5.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.0 h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=\ngithub.com/googleapis/gax-go/v2 v2.12.0/go.mod h1:y+aIqrI5eb1YGMVJfuV3185Ts/D7qKpsEkdD5+I6QGU=\ngithub.com/gopherjs/gopherjs v0.0.0-20180825215210-0210a2f0f73c/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v1.17.2 h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\ngithub.com/gopherjs/gopherjs v1.17.2/go.mod h1:pRRIvn/QzFLrKfvEz3qUuEhtE/zLCWfreZ6J5gM2i+k=\ngithub.com/gopherjs/gopherwasm v1.0.0/go.mod h1:SkZ8z7CWBz5VXbhJel8TxCmAcsQqzgWGR/8nMhyhZSI=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-multierror v1.1.0 h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/iancoleman/orderedmap v0.0.0-20190318233801-ac98e3ecb4b0 h1:i462o439ZjprVSFSZLZxcsoAe592sZB1rci2Z8j4wdk=\ngithub.com/iancoleman/orderedmap v0.0.0-20190318233801-ac98e3ecb4b0/go.mod h1:N0Wam8K1arqPXNWjMo21EXnBPOPp36vB07FNRdD2geA=\ngithub.com/invopop/jsonschema v0.7.0 h1:2vgQcBz1n256N+FpX3Jq7Y17AjYt46Ig3zIWyy770So=\ngithub.com/invopop/jsonschema v0.7.0/go.mod h1:O9uiLokuu0+MGFlyiaqtWxwqJm41/+8Nj0lD7A36YH0=\ngithub.com/jcgregorio/logger v0.1.3 h1:KKKWn4Q0bPpGtLFWEF3Pkv0VtX8Oru3cK0OH0ZozYik=\ngithub.com/jcgregorio/logger v0.1.3/go.mod h1:bluD21Aj6/H3hUey6bnsZsIUf/IzO880aQ5iwBWWEy4=\ngithub.com/jcgregorio/slog v0.0.0-20190423190439-e6f2d537f900 h1:H8hiPQr5PtkrB5z3Do/9iR5tEwuAFNim68cqcoAlHeY=\ngithub.com/jcgregorio/slog v0.0.0-20190423190439-e6f2d537f900/go.mod h1:YT3uVwwZ2P4vmZcM3xICUNJ6dqBwoiSgVAqxHu3rcoo=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0 h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/klauspost/compress v1.14.1/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\ngithub.com/klauspost/compress v1.16.7 h1:2mk3MPGNzKyxErAw8YaohYh69+pa4sIQSC0fPGCFR9I=\ngithub.com/klauspost/compress v1.16.7/go.mod h1:ntbaceVETuRiXiv4DpjP66DpAtAGkEQskQzEyD//IeE=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mattn/go-runewidth v0.0.3/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.2-0.20181231171920-c182affec369 h1:I0XW9+e1XWDxdcEniV4rQAIOPUGDq67JSCiRCgGCZLI=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.2-0.20181231171920-c182affec369/go.mod h1:BSXmuO+STAnVfrANrmjBb36TMTDstsz7MSK+HVaYKv4=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/mostynb/zstdpool-syncpool v0.0.12 h1:vE8zD0+YdQD9Rca0TAGNexUCOCt1IQbdqRUHJoxxERA=\ngithub.com/mostynb/zstdpool-syncpool v0.0.12/go.mod h1:0YkM6gUZnyeFvLbBRiUYI4PxSiCSI36YNDY/b5iAI04=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7 h1:lDH9UUVJtmYCjyT0CI4q8xvlXPxeZ0gYCVvWbmPlp88=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/pborman/uuid v1.2.1 h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=\ngithub.com/pborman/uuid v1.2.1/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/peterh/liner v1.1.0/go.mod h1:CRroGNssyjTd/qIG2FyxByd2S8JEAZXBl4qUrZf8GS0=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/xattr v0.4.9 h1:5883YPCtkSd8LFbs13nXplj9g9tlrwoJRjgpgMu1/fE=\ngithub.com/pkg/xattr v0.4.9/go.mod h1:di8WF84zAKk8jzR1UBTEWh9AUlIZZ7M/JNt8e9B6ktU=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.1 h1:+4eQaD7vAZ6DsfsxB15hbE0odUjGI5ARs9yskGu1v4s=\ngithub.com/prometheus/client_golang v1.11.1/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.4.0 h1:5lQXD3cAg1OXBf4Wq03gTrXHeaV0TQvGfUooCfx1yqY=\ngithub.com/prometheus/client_model v0.4.0/go.mod h1:oMQmHW1/JoDwqLtg57MGgP/Fb1CJEYF2imWWhWtMkYU=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0 h1:iMAkS2TDoNWnKM+Kopnx/8tnEStIfpYA0ur0xQzzhMQ=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0 h1:mxy4L2jP6qMonqmq+aTtOx1ifVWUgG/TAmntgbh3xv4=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/robertkrimen/otto v0.0.0-20200922221731-ef014fd054ac h1:kYPjbEN6YPYWWHI6ky1J813KzIq/8+Wg4TO4xU7A/KU=\ngithub.com/robertkrimen/otto v0.0.0-20200922221731-ef014fd054ac/go.mod h1:xvqspoSXJTIpemEonrMDFq6XzwHYYgToXWj5eRX1OtY=\ngithub.com/shirou/gopsutil v3.21.11+incompatible h1:+1+c1VGhc88SSonWP6foOcLhvnKlUeu/erjjvaPEYiI=\ngithub.com/shirou/gopsutil v3.21.11+incompatible/go.mod h1:5b4v6he4MtMOwMlS0TUMTu2PcXUg8+E1lC7eC3UO/RA=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/smarty/assertions v1.15.1 h1:812oFiXI+G55vxsFf+8bIZ1ux30qtkdqzKbEFwyX3Tk=\ngithub.com/smarty/assertions v1.15.1/go.mod h1:yABtdzeQs6l1brC900WlRNwj6ZR55d7B+E8C6HtKdec=\ngithub.com/smartystreets/goconvey v1.8.1 h1:qGjIddxOk4grTu9JPOU31tVfq3cNdBlNa5sSznIX1xY=\ngithub.com/smartystreets/goconvey v1.8.1/go.mod h1:+/u4qLyY6x1jReYOp7GOM2FSt8aP9CzCZL03bI28W60=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.3.1-0.20190311161405-34c6fa2dc709/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/texttheater/golang-levenshtein v1.0.1 h1:+cRNoVrfiwufQPhoMzB6N0Yf/Mqajr6t1lOv8GyGE2U=\ngithub.com/texttheater/golang-levenshtein v1.0.1/go.mod h1:PYAKrbF5sAiq9wd+H82hs7gNaen0CplQ9uvm6+enD/8=\ngithub.com/trietmn/go-wiki v1.0.1 h1:OnKPSfE/XtWH9ybRxD7UcNv4bLzv8WcTWxwMcIDsFyg=\ngithub.com/trietmn/go-wiki v1.0.1/go.mod h1:HxeEu4ttJvFkRXY+XQu+ATZEh1S7J75+HRUoiZauzk8=\ngithub.com/willf/bitset v1.1.11 h1:N7Z7E9UvjW+sGsEl7k/SJrvY2reP1A07MrGuCjIOjRE=\ngithub.com/willf/bitset v1.1.11/go.mod h1:83CECat5yLh5zVOf4P1ErAgKA5UDvKtgyUABdr3+MjI=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f h1:J9EGpcZtP0E/raorCMxlFGSTBrsSlaDGf3jU/qvAE2c=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e h1:JVG44RsyaB9T2KIHavMF/ppJZNG9ZpyihvCd0w101no=\ngithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e/go.mod h1:RbqR21r5mrJuqunuUZ/Dhy/avygyECGrLceyNeo4LiM=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yusufpapurcu/wmi v1.2.2 h1:KBNDSne4vP5mbSWnJbO+51IMOXJB67QiYCSBrubbPRg=\ngithub.com/yusufpapurcu/wmi v1.2.2/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngithub.com/zeebo/bencode v1.0.0 h1:zgop0Wu1nu4IexAZeCZ5qbsjU4O1vMrfCrVgUjbHVuA=\ngithub.com/zeebo/bencode v1.0.0/go.mod h1:Ct7CkrWIQuLWAy9M3atFHYq4kG9Ao/SsY5cdtCXmp9Y=\ngo.chromium.org/luci v0.0.0-20240206071351-fb32c458db6e h1:JJNTpSU1X9ClKbBtSk4dw6TH9w4hbDkQIpPhPEGp6lw=\ngo.chromium.org/luci v0.0.0-20240206071351-fb32c458db6e/go.mod h1:Pxji2l9vIPcilS+otwL6AZLNbNxGTzhuXSf1h53SX64=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.47.0 h1:UNQQKPfTDe1J81ViolILjTKPr9WetKW6uei2hFgJmFs=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.47.0/go.mod h1:r9vWsPS/3AQItv3OSlEJ/E4mbrhUbbw18meOjArPtKQ=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 h1:sv9kVfal0MK0wBMCOGr+HeJm9v803BkJxGrk2au7j08=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0/go.mod h1:SK2UL73Zy1quvRPonmOmRDiWk1KBV3LyIeeIxcEApWw=\ngo.opentelemetry.io/otel v1.22.0 h1:xS7Ku+7yTFvDfDraDIJVpw7XPyuHlB9MCiqqX5mcJ6Y=\ngo.opentelemetry.io/otel v1.22.0/go.mod h1:eoV4iAi3Ea8LkAEI9+GFT44O6T/D0GWAVFyZVCC6pMI=\ngo.opentelemetry.io/otel/metric v1.22.0 h1:lypMQnGyJYeuYPhOM/bgjbFM6WE44W1/T45er4d8Hhg=\ngo.opentelemetry.io/otel/metric v1.22.0/go.mod h1:evJGjVpZv0mQ5QBRJoBF64yMuOf4xCWdXjK8pzFvliY=\ngo.opentelemetry.io/otel/sdk v1.21.0 h1:FTt8qirL1EysG6sTQRZ5TokkU8d0ugCj8htOgThZXQ8=\ngo.opentelemetry.io/otel/sdk v1.21.0/go.mod h1:Nna6Yv7PWTdgJHVRD9hIYywQBRx7pbox6nwBnZIxl/E=\ngo.opentelemetry.io/otel/trace v1.22.0 h1:Hg6pPujv0XG9QaVbGOBVHunyuLcCC3jN7WEhPx83XD0=\ngo.opentelemetry.io/otel/trace v1.22.0/go.mod h1:RbbHXVqKES9QhzZq/fE5UnOSILqRt40a21sPw2He1xo=\ngo.skia.org/infra v0.0.0-20250109232601-c67b4fc704ca h1:8NM85RhBYdX/UrxSQaindQ1Cn4l3zs8RSr4JLrCi5PE=\ngo.skia.org/infra v0.0.0-20250109232601-c67b4fc704ca/go.mod h1:AIyC3mAtE7moB4ippEhflqgrOKPYmqIWJn0Y8APBGzM=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.20.0 h1:jmAMJJZXr5KiCw05dfYK9QnqaqKLYXijU23lsEdcQqg=\ngolang.org/x/crypto v0.20.0/go.mod h1:Xwo95rrVNIoSMx9wa1JroENMToLWn3RNVrTBpLHgZPQ=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20231127185646-65229373498e h1:Gvh4YaCaXNs6dKTlfgismwWZKyjVZXwOPfIyUaqU3No=\ngolang.org/x/exp v0.0.0-20231127185646-65229373498e/go.mod h1:iRJReGqOEeBhDZGkGbynYwcHlctCvnjTYIamk7uXpHI=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210505214959-0714010a04ed/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.16.0 h1:aDkGMBSYxElaoP81NpoUoz2oo2R2wHdZpGToUxfyQrQ=\ngolang.org/x/oauth2 v0.16.0/go.mod h1:hqZ+0LWXsiVoZpeld6jVt06P3adbS2Uu911W1SsJv2o=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210507014357-30e306a8bba5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220408201424-a24fb2fb8a0f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2 h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=\ngolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngoogle.golang.org/api v0.160.0 h1:SEspjXHVqE1m5a1fRy8JFB+5jSu+V0GEDKDghF3ttO4=\ngoogle.golang.org/api v0.160.0/go.mod h1:0mu0TpK33qnydLvWqbImq2b1eQ5FHRSDCBzAxX9ZHyw=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20210506142907-4a47615972c2/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=\ngoogle.golang.org/genproto v0.0.0-20240116215550-a9fa1716bcac h1:ZL/Teoy/ZGnzyrqK/Optxxp2pmVh+fmJ97slxSRyzUg=\ngoogle.golang.org/genproto v0.0.0-20240116215550-a9fa1716bcac/go.mod h1:+Rvu7ElI+aLzyDQhpHMFMMltsD6m7nqpuWDd2CwJw3k=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240125205218-1f4bbc51befe h1:0poefMBYvYbs7g5UkjS6HcxBPaTRAmznle9jnxYoAI8=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240125205218-1f4bbc51befe/go.mod h1:4jWUdICTdgc3Ibxmr8nAJiiLHwQBY0UI0XZcEMaFKaA=\ngoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240116215550-a9fa1716bcac h1:QXtV4qU5zS94SeHJhPqxJQF0XyxssnVrEZOUgp1+NuY=\ngoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240116215550-a9fa1716bcac/go.mod h1:ZSvZ8l+AWJwXw91DoTjWjaVLpWU6o0eZ4YLYpH8aLeQ=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240116215550-a9fa1716bcac h1:nUQEQmH/csSvFECKYRv6HWEyypysidKl2I6Qpsglq/0=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240116215550-a9fa1716bcac/go.mod h1:daQN87bsDqDoe316QbbvX60nMoJQa4r6Ds0ZuoAe5yA=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.61.0 h1:TOvOcuXn30kRao+gfcvsebNEa5iZIiLkisYEkf7R7o0=\ngoogle.golang.org/grpc v1.61.0/go.mod h1:VUbo7IFqmF1QtCAstipjG0GIoq49KvMe9+h1jFLBNJs=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=\ngoogle.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/sourcemap.v1 v1.0.5 h1:inv58fC9f9J3TK2Y2R1NPntXEn3/wjWHkonhIUODNTI=\ngopkg.in/sourcemap.v1 v1.0.5/go.mod h1:2RlvNNSMglmRrcvhfuzp4hQHwOtjxlbjX7UPY/GXb78=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "go_repositories.bzl",
          "type": "blob",
          "size": 93.2265625,
          "content": "\"\"\"This module contains a Gazelle-generated go_repositories macro that mirrors //go.mod.\n\nTo update this file, please un \"make -C bazel gazelle_update_repo\".\n\"\"\"\n\nload(\"@bazel_gazelle//:deps.bzl\", \"go_repository\")\n\ndef go_repositories():\n    \"\"\"This Gazelle-generated macro defines repositories for the Go modules in //go.mod.\"\"\"\n\n    go_repository(\n        name = \"co_honnef_go_tools\",\n        importpath = \"honnef.co/go/tools\",\n        sum = \"h1:/hemPrYIhOhy8zYrNj+069zDB68us2sMGsfkFJO0iZs=\",\n        version = \"v0.0.0-20190523083050-ea95bdfd59fc\",\n    )\n\n    go_repository(\n        name = \"com_github_a8m_envsubst\",\n        importpath = \"github.com/a8m/envsubst\",\n        sum = \"h1:yvzAhJD2QKdo35Ut03wIfXQmg+ta3wC/1bskfZynz+Q=\",\n        version = \"v1.2.0\",\n    )\n\n    go_repository(\n        name = \"com_github_aclements_go_moremath\",\n        importpath = \"github.com/aclements/go-moremath\",\n        sum = \"h1:a7+Y8VlXRC2VX5ue6tpCutr4PsrkRkWWVZv4zqfaHuc=\",\n        version = \"v0.0.0-20190830160640-d16893ddf098\",\n    )\n\n    go_repository(\n        name = \"com_github_alecthomas_participle_v2\",\n        importpath = \"github.com/alecthomas/participle/v2\",\n        sum = \"h1:cK4vjj0VSgb3lN1nuKA5F7dw+1s1pWBe5bx7nNCnN+c=\",\n        version = \"v2.0.0-alpha7\",\n    )\n\n    go_repository(\n        name = \"com_github_alecthomas_template\",\n        importpath = \"github.com/alecthomas/template\",\n        sum = \"h1:JYp7IbQjafoB+tBA3gMyHYHrpOtNuDiK/uB5uXxq5wM=\",\n        version = \"v0.0.0-20190718012654-fb15b899a751\",\n    )\n    go_repository(\n        name = \"com_github_alecthomas_units\",\n        importpath = \"github.com/alecthomas/units\",\n        sum = \"h1:UQZhZ2O0vMHr2cI+DC1Mbh0TJxzA3RcLoMsFw+aXw7E=\",\n        version = \"v0.0.0-20190924025748-f65c72e2690d\",\n    )\n    go_repository(\n        name = \"com_github_alicebob_gopher_json\",\n        importpath = \"github.com/alicebob/gopher-json\",\n        sum = \"h1:HbKu58rmZpUGpz5+4FfNmIU+FmZg2P3Xaj2v2bfNWmk=\",\n        version = \"v0.0.0-20200520072559-a9ecdc9d1d3a\",\n    )\n    go_repository(\n        name = \"com_github_alicebob_miniredis_v2\",\n        importpath = \"github.com/alicebob/miniredis/v2\",\n        sum = \"h1:3r6kTHdKnuP4fkS8k2IrvSfxpxUTcW1SOL0wN7b7Dt0=\",\n        version = \"v2.30.5\",\n    )\n\n    go_repository(\n        name = \"com_github_anaskhan96_soup\",\n        importpath = \"github.com/anaskhan96/soup\",\n        sum = \"h1:V/FHiusdTrPrdF4iA1YkVxsOpdNcgvqT1hG+YtcZ5hM=\",\n        version = \"v1.2.5\",\n    )\n    go_repository(\n        name = \"com_github_andybalholm_brotli\",\n        importpath = \"github.com/andybalholm/brotli\",\n        sum = \"h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=\",\n        version = \"v1.0.4\",\n    )\n\n    go_repository(\n        name = \"com_github_apache_arrow_go_v12\",\n        importpath = \"github.com/apache/arrow/go/v12\",\n        sum = \"h1:xtZE63VWl7qLdB0JObIXvvhGjoVNrQ9ciIHG2OK5cmc=\",\n        version = \"v12.0.0\",\n    )\n    go_repository(\n        name = \"com_github_apache_thrift\",\n        importpath = \"github.com/apache/thrift\",\n        sum = \"h1:qEy6UW60iVOlUy+b9ZR0d5WzUWYGOo4HfopoyBaNmoY=\",\n        version = \"v0.16.0\",\n    )\n    go_repository(\n        name = \"com_github_armon_go_radix\",\n        importpath = \"github.com/armon/go-radix\",\n        sum = \"h1:F4z6KzEeeQIMeLFa97iZU6vupzoecKdU5TX24SNppXI=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_aws_aws_sdk_go\",\n        importpath = \"github.com/aws/aws-sdk-go\",\n        sum = \"h1:Gka1bopihF2e9XFhuVZPrgafmOFpCsRtAPMYLp/0AfA=\",\n        version = \"v1.35.18\",\n    )\n\n    go_repository(\n        name = \"com_github_bazelbuild_bazel_gazelle\",\n        importpath = \"github.com/bazelbuild/bazel-gazelle\",\n        sum = \"h1:WnJGYk1bMIjw8FCYA/UxKBK/Y6hUnOItrtR+vjFIIKo=\",\n        version = \"v0.33.0\",\n    )\n    go_repository(\n        name = \"com_github_bazelbuild_buildtools\",\n        # The BUILD files included in this Go module use the go_default_library naming convention.\n        # See https://github.com/bazelbuild/bazel-gazelle/blob/master/repository.rst#go_repository.\n        build_naming_convention = \"go_default_library\",\n        importpath = \"github.com/bazelbuild/buildtools\",\n        sum = \"h1:VUHCI4QRifAGYsbVJYqJndLf7YqV12YthB+PLFsEKqo=\",\n        version = \"v0.0.0-20231017121127-23aa65d4e117\",\n    )\n    go_repository(\n        name = \"com_github_bazelbuild_remote_apis\",\n        # The BUILD files included in this Go module use the go_default_library naming convention.\n        # See https://github.com/bazelbuild/bazel-gazelle/blob/master/repository.rst#go_repository.\n        build_naming_convention = \"go_default_library\",\n        importpath = \"github.com/bazelbuild/remote-apis\",\n        sum = \"h1:TPwjNpCdoO7TcTPPMHEkrrlSwd8g2XVf3qflmnivvsU=\",\n        version = \"v0.0.0-20230822133051-6c32c3b917cc\",\n    )\n    go_repository(\n        name = \"com_github_bazelbuild_remote_apis_sdks\",\n        # Causes Gazelle to update references to the @go_googleapis external repository in\n        # https://github.com/bazelbuild/remote-apis-sdks/blob/e00bd323ce426cd1c55dec2f152ffcc20eb4f503/go/pkg/client/BUILD.bazel#L39C20-L39C20\n        # with references to @org_golang_google_genproto as required by rules_go starting v0.41.0.\n        # See https://github.com/bazelbuild/rules_go/releases/tag/v0.41.0.\n        build_file_generation = \"on\",\n        importpath = \"github.com/bazelbuild/remote-apis-sdks\",\n        sum = \"h1:/7itEMv7uUfXNXKUq9R8fGYF4Kb+ouOsVYsxSEsKmaw=\",\n        version = \"v0.0.0-20231114220034-042d9851eb28\",\n    )\n\n    go_repository(\n        name = \"com_github_beorn7_perks\",\n        importpath = \"github.com/beorn7/perks\",\n        sum = \"h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\",\n        version = \"v1.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_blakesmith_ar\",\n        importpath = \"github.com/blakesmith/ar\",\n        sum = \"h1:m935MPodAbYS46DG4pJSv7WO+VECIWUQ7OJYSoTrMh4=\",\n        version = \"v0.0.0-20190502131153-809d4375e1fb\",\n    )\n\n    go_repository(\n        name = \"com_github_bradfitz_gomemcache\",\n        importpath = \"github.com/bradfitz/gomemcache\",\n        sum = \"h1:L/QXpzIa3pOvUGt1D1lA5KjYhPBAN/3iWdP7xeFS9F0=\",\n        version = \"v0.0.0-20190913173617-a41fca850d0b\",\n    )\n    go_repository(\n        name = \"com_github_burntsushi_toml\",\n        importpath = \"github.com/BurntSushi/toml\",\n        sum = \"h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\",\n        version = \"v0.3.1\",\n    )\n\n    go_repository(\n        name = \"com_github_cenkalti_backoff\",\n        importpath = \"github.com/cenkalti/backoff\",\n        sum = \"h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=\",\n        version = \"v2.2.1+incompatible\",\n    )\n    go_repository(\n        name = \"com_github_cenkalti_backoff_v4\",\n        importpath = \"github.com/cenkalti/backoff/v4\",\n        sum = \"h1:cFAlzYUlVYDysBEH2T5hyJZMh3+5+WCBvSnK6Q8UtC4=\",\n        version = \"v4.1.3\",\n    )\n    go_repository(\n        name = \"com_github_census_instrumentation_opencensus_proto\",\n        importpath = \"github.com/census-instrumentation/opencensus-proto\",\n        sum = \"h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\",\n        version = \"v0.4.1\",\n    )\n    go_repository(\n        name = \"com_github_cespare_xxhash\",\n        importpath = \"github.com/cespare/xxhash\",\n        sum = \"h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\",\n        version = \"v1.1.0\",\n    )\n    go_repository(\n        name = \"com_github_cespare_xxhash_v2\",\n        importpath = \"github.com/cespare/xxhash/v2\",\n        sum = \"h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\",\n        version = \"v2.2.0\",\n    )\n    go_repository(\n        name = \"com_github_chigopher_pathlib\",\n        importpath = \"github.com/chigopher/pathlib\",\n        sum = \"h1:1pg96WL3iC1/YyWV4UJSl3E0GBf4B+h5amBtsbAAieY=\",\n        version = \"v0.15.0\",\n    )\n\n    go_repository(\n        name = \"com_github_client9_misspell\",\n        importpath = \"github.com/client9/misspell\",\n        sum = \"h1:ta993UF76GwbvJcIo3Y68y/M3WxlpEHPWIGDkJYwzJI=\",\n        version = \"v0.3.4\",\n    )\n\n    go_repository(\n        name = \"com_github_cncf_udpa_go\",\n        importpath = \"github.com/cncf/udpa/go\",\n        sum = \"h1:QQ3GSy+MqSHxm/d8nCtnAiZdYFd45cYZPs8vOOIYKfk=\",\n        version = \"v0.0.0-20220112060539-c52dc94e7fbe\",\n    )\n    go_repository(\n        name = \"com_github_cncf_xds_go\",\n        importpath = \"github.com/cncf/xds/go\",\n        sum = \"h1:7To3pQ+pZo0i3dsWEbinPNFs5gPSBOsJtx3wTT94VBY=\",\n        version = \"v0.0.0-20231109132714-523115ebc101\",\n    )\n\n    go_repository(\n        name = \"com_github_cockroachdb_cockroach_go_v2\",\n        importpath = \"github.com/cockroachdb/cockroach-go/v2\",\n        sum = \"h1:zicZlBhWZu6wfK7Ezg4Owdc3HamLpRdBllPTT9tb+2k=\",\n        version = \"v2.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_cpuguy83_go_md2man_v2\",\n        importpath = \"github.com/cpuguy83/go-md2man/v2\",\n        sum = \"h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\",\n        version = \"v2.0.2\",\n    )\n    go_repository(\n        name = \"com_github_creack_pty\",\n        importpath = \"github.com/creack/pty\",\n        sum = \"h1:uDmaGzcdjhF4i/plgjmEsriH11Y0o7RKapEf/LDaM3w=\",\n        version = \"v1.1.9\",\n    )\n\n    go_repository(\n        name = \"com_github_danjacques_gofslock\",\n        importpath = \"github.com/danjacques/gofslock\",\n        sum = \"h1:m+Fkk9QEMuV6Z1ithqqYogOHV7Pl6rMKe34NBTJTS/c=\",\n        version = \"v0.0.0-20240212154529-d899e02bfe22\",\n    )\n\n    go_repository(\n        name = \"com_github_davecgh_go_spew\",\n        importpath = \"github.com/davecgh/go-spew\",\n        sum = \"h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\",\n        version = \"v1.1.1\",\n    )\n    go_repository(\n        name = \"com_github_dgraph_io_badger_v3\",\n        importpath = \"github.com/dgraph-io/badger/v3\",\n        sum = \"h1:dpyM5eCJAtQCBcMCZcT4UBZchuTJgCywerHHgmxfxM8=\",\n        version = \"v3.2103.2\",\n    )\n    go_repository(\n        name = \"com_github_dgraph_io_ristretto\",\n        importpath = \"github.com/dgraph-io/ristretto\",\n        sum = \"h1:Jv3CGQHp9OjuMBSne1485aDpUkTKEcUqF+jm/LuerPI=\",\n        version = \"v0.1.0\",\n    )\n    go_repository(\n        name = \"com_github_dgryski_go_rendezvous\",\n        importpath = \"github.com/dgryski/go-rendezvous\",\n        sum = \"h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\",\n        version = \"v0.0.0-20200823014737-9f7001d12a5f\",\n    )\n\n    go_repository(\n        name = \"com_github_dustin_go_humanize\",\n        importpath = \"github.com/dustin/go-humanize\",\n        sum = \"h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\",\n        version = \"v1.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_emirpasic_gods\",\n        importpath = \"github.com/emirpasic/gods\",\n        sum = \"h1:QAUIPSaCu4G+POclxeqb3F+WPpdKqFGlw36+yOzGlrg=\",\n        version = \"v1.12.0\",\n    )\n    go_repository(\n        name = \"com_github_envoyproxy_go_control_plane\",\n        importpath = \"github.com/envoyproxy/go-control-plane\",\n        sum = \"h1:wSUXTlLfiAQRWs2F+p+EKOY9rUyis1MyGqJ2DIk5HpM=\",\n        version = \"v0.11.1\",\n    )\n    go_repository(\n        name = \"com_github_envoyproxy_protoc_gen_validate\",\n        importpath = \"github.com/envoyproxy/protoc-gen-validate\",\n        sum = \"h1:QkIBuU5k+x7/QXPvPPnWXWlCdaBFApVqftFV6k087DA=\",\n        version = \"v1.0.2\",\n    )\n    go_repository(\n        name = \"com_github_facebookgo_clock\",\n        importpath = \"github.com/facebookgo/clock\",\n        sum = \"h1:yDWHCSQ40h88yih2JAcL6Ls/kVkSE8GFACTGVnMPruw=\",\n        version = \"v0.0.0-20150410010913-600d898af40a\",\n    )\n\n    go_repository(\n        name = \"com_github_felixge_httpsnoop\",\n        importpath = \"github.com/felixge/httpsnoop\",\n        sum = \"h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\",\n        version = \"v1.0.4\",\n    )\n\n    go_repository(\n        name = \"com_github_fiorix_go_web\",\n        importpath = \"github.com/fiorix/go-web\",\n        sum = \"h1:P/Czr+qFBdKELw4nys0x2e5nkT9niVq/2FS63ArJzm4=\",\n        version = \"v1.0.1-0.20150221144011-5b593f1e8966\",\n    )\n\n    go_repository(\n        name = \"com_github_flynn_json5\",\n        importpath = \"github.com/flynn/json5\",\n        sum = \"h1:xJMmr4GMYIbALX5edyoDIOQpc2bOQTeJiWMeCl9lX/8=\",\n        version = \"v0.0.0-20160717195620-7620272ed633\",\n    )\n\n    go_repository(\n        name = \"com_github_fsnotify_fsnotify\",\n        importpath = \"github.com/fsnotify/fsnotify\",\n        sum = \"h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\",\n        version = \"v1.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_go_chi_chi_v5\",\n        importpath = \"github.com/go-chi/chi/v5\",\n        sum = \"h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\",\n        version = \"v5.0.8\",\n    )\n\n    go_repository(\n        name = \"com_github_go_kit_kit\",\n        importpath = \"github.com/go-kit/kit\",\n        sum = \"h1:wDJmvq38kDhkVxi50ni9ykkdUr1PKgqKOoi01fa0Mdk=\",\n        version = \"v0.9.0\",\n    )\n    go_repository(\n        name = \"com_github_go_kit_log\",\n        importpath = \"github.com/go-kit/log\",\n        sum = \"h1:DGJh0Sm43HbOeYDNnVZFl8BvcYVvjD5bqYJvp0REbwQ=\",\n        version = \"v0.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_go_logfmt_logfmt\",\n        importpath = \"github.com/go-logfmt/logfmt\",\n        sum = \"h1:TrB8swr/68K7m9CcGut2g3UOihhbcbiMAYiuTXdEih4=\",\n        version = \"v0.5.0\",\n    )\n    go_repository(\n        name = \"com_github_go_logr_logr\",\n        importpath = \"github.com/go-logr/logr\",\n        sum = \"h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\",\n        version = \"v1.4.1\",\n    )\n    go_repository(\n        name = \"com_github_go_logr_stdr\",\n        importpath = \"github.com/go-logr/stdr\",\n        sum = \"h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\",\n        version = \"v1.2.2\",\n    )\n\n    go_repository(\n        name = \"com_github_go_ole_go_ole\",\n        importpath = \"github.com/go-ole/go-ole\",\n        sum = \"h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\",\n        version = \"v1.2.6\",\n    )\n\n    go_repository(\n        name = \"com_github_go_python_gpython\",\n        importpath = \"github.com/go-python/gpython\",\n        sum = \"h1:QNFZ0h540Lajx7Pi/os06XzzdYUQG+2sV7IvPo/Mvmg=\",\n        version = \"v0.0.3\",\n    )\n\n    go_repository(\n        name = \"com_github_go_stack_stack\",\n        importpath = \"github.com/go-stack/stack\",\n        sum = \"h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\",\n        version = \"v1.8.0\",\n    )\n    go_repository(\n        name = \"com_github_goccy_go_json\",\n        importpath = \"github.com/goccy/go-json\",\n        sum = \"h1:/pAaQDLHEoCq/5FFmSKBswWmK6H0e8g4159Kc/X/nqk=\",\n        version = \"v0.9.11\",\n    )\n\n    go_repository(\n        name = \"com_github_gogo_protobuf\",\n        importpath = \"github.com/gogo/protobuf\",\n        sum = \"h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\",\n        version = \"v1.3.2\",\n    )\n\n    go_repository(\n        name = \"com_github_golang_glog\",\n        importpath = \"github.com/golang/glog\",\n        sum = \"h1:DVjP2PbBOzHyzA+dn3WhHIq4NdVu3Q+pvivFICf/7fo=\",\n        version = \"v1.1.2\",\n    )\n    go_repository(\n        name = \"com_github_golang_groupcache\",\n        importpath = \"github.com/golang/groupcache\",\n        sum = \"h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\",\n        version = \"v0.0.0-20210331224755-41bb18bfe9da\",\n    )\n\n    go_repository(\n        name = \"com_github_golang_mock\",\n        importpath = \"github.com/golang/mock\",\n        sum = \"h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\",\n        version = \"v1.6.0\",\n    )\n    go_repository(\n        name = \"com_github_golang_protobuf\",\n        importpath = \"github.com/golang/protobuf\",\n        sum = \"h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\",\n        version = \"v1.5.3\",\n    )\n    go_repository(\n        name = \"com_github_golang_snappy\",\n        importpath = \"github.com/golang/snappy\",\n        sum = \"h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\",\n        version = \"v0.0.4\",\n    )\n    go_repository(\n        name = \"com_github_gomodule_redigo\",\n        importpath = \"github.com/gomodule/redigo\",\n        sum = \"h1:Sl3u+2BI/kk+VEatbj0scLdrFhjPmbxOc1myhDP41ws=\",\n        version = \"v1.8.9\",\n    )\n\n    go_repository(\n        name = \"com_github_google_flatbuffers\",\n        importpath = \"github.com/google/flatbuffers\",\n        sum = \"h1:ivUb1cGomAB101ZM1T0nOiWz9pSrTMoa9+EiY7igmkM=\",\n        version = \"v2.0.8+incompatible\",\n    )\n\n    go_repository(\n        name = \"com_github_google_go_cmp\",\n        importpath = \"github.com/google/go-cmp\",\n        sum = \"h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\",\n        version = \"v0.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_google_go_github_v29\",\n        importpath = \"github.com/google/go-github/v29\",\n        sum = \"h1:IktKCTwU//aFHnpA+2SLIi7Oo9uhAzgsdZNbcAqhgdc=\",\n        version = \"v29.0.3\",\n    )\n    go_repository(\n        name = \"com_github_google_go_licenses\",\n        importpath = \"github.com/google/go-licenses\",\n        sum = \"h1:ZK63Yns/0Y8hE5y50WuSsfFWNPmpYDQ9tzh/J2vWV8c=\",\n        version = \"v0.0.0-20210816172045-3099c18c36e1\",\n    )\n    go_repository(\n        name = \"com_github_google_go_pkcs11\",\n        importpath = \"github.com/google/go-pkcs11\",\n        sum = \"h1:OF1IPgv+F4NmqmJ98KTjdN97Vs1JxDPB3vbmYzV2dpk=\",\n        version = \"v0.2.1-0.20230907215043-c6f79328ddf9\",\n    )\n\n    go_repository(\n        name = \"com_github_google_go_querystring\",\n        importpath = \"github.com/google/go-querystring\",\n        sum = \"h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_google_gofuzz\",\n        importpath = \"github.com/google/gofuzz\",\n        sum = \"h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\",\n        version = \"v1.2.0\",\n    )\n    go_repository(\n        name = \"com_github_google_licenseclassifier\",\n        importpath = \"github.com/google/licenseclassifier\",\n        sum = \"h1:TJsAqW6zLRMDTyGmc9TPosfn9OyVlHs8Hrn3pY6ONSY=\",\n        version = \"v0.0.0-20210722185704-3043a050f148\",\n    )\n\n    go_repository(\n        name = \"com_github_google_martian_v3\",\n        importpath = \"github.com/google/martian/v3\",\n        sum = \"h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\",\n        version = \"v3.3.3\",\n    )\n    go_repository(\n        name = \"com_github_google_pprof\",\n        importpath = \"github.com/google/pprof\",\n        sum = \"h1:lvddKcYTQ545ADhBujtIJmqQrZBDsGo7XIMbAQe/sNY=\",\n        version = \"v0.0.0-20221103000818-d260c55eee4c\",\n    )\n\n    go_repository(\n        name = \"com_github_google_s2a_go\",\n        importpath = \"github.com/google/s2a-go\",\n        sum = \"h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\",\n        version = \"v0.1.7\",\n    )\n    go_repository(\n        name = \"com_github_google_tink_go\",\n        importpath = \"github.com/google/tink/go\",\n        sum = \"h1:6Eox8zONGebBFcCBqkVmt60LaWZa6xg1cl/DwAh/J1w=\",\n        version = \"v1.7.0\",\n    )\n\n    go_repository(\n        name = \"com_github_google_uuid\",\n        importpath = \"github.com/google/uuid\",\n        sum = \"h1:1p67kYwdtXjb0gL0BPiP1Av9wiZPo5A8z2cWkTZ+eyU=\",\n        version = \"v1.5.0\",\n    )\n    go_repository(\n        name = \"com_github_googleapis_enterprise_certificate_proxy\",\n        importpath = \"github.com/googleapis/enterprise-certificate-proxy\",\n        sum = \"h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\",\n        version = \"v0.3.2\",\n    )\n\n    go_repository(\n        name = \"com_github_googleapis_gax_go_v2\",\n        # This module is distributed with pre-generated .pb.go files, so we disable generation of\n        # go_proto_library targets.\n        build_file_proto_mode = \"disable\",\n        importpath = \"github.com/googleapis/gax-go/v2\",\n        sum = \"h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=\",\n        version = \"v2.12.0\",\n    )\n    go_repository(\n        name = \"com_github_googleapis_gnostic\",\n        importpath = \"github.com/googleapis/gnostic\",\n        sum = \"h1:9fHAtK0uDfpveeqqo1hkEZJcFvYXAiCN3UutL8F9xHw=\",\n        version = \"v0.5.5\",\n    )\n\n    go_repository(\n        name = \"com_github_googlecloudplatform_opentelemetry_operations_go_detectors_gcp\",\n        importpath = \"github.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp\",\n        sum = \"h1:tk85AYGwOf6VNtoOQi8w/kVDi2vmPxp3/OU2FsUpdcA=\",\n        version = \"v1.20.0\",\n    )\n    go_repository(\n        name = \"com_github_googlecloudplatform_opentelemetry_operations_go_exporter_trace\",\n        importpath = \"github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/trace\",\n        sum = \"h1:lP8YpTi26Bei2OrXpQEUnNFPqKT6bTn3P8DvJC4i8WQ=\",\n        version = \"v1.19.1\",\n    )\n    go_repository(\n        name = \"com_github_googlecloudplatform_opentelemetry_operations_go_internal_resourcemapping\",\n        importpath = \"github.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping\",\n        sum = \"h1:ti4stlXHjDhGl+1h+EpqXv9+Wxv0XqCB3XTT4W6ZoQU=\",\n        version = \"v0.43.1\",\n    )\n    go_repository(\n        name = \"com_github_googlecloudplatform_opentelemetry_operations_go_propagator\",\n        importpath = \"github.com/GoogleCloudPlatform/opentelemetry-operations-go/propagator\",\n        sum = \"h1:Ej/1TqY9R59OOhRyukLgW97yy/xo3d2M7Lb2ao2O+Gs=\",\n        version = \"v0.43.1\",\n    )\n\n    go_repository(\n        name = \"com_github_gopherjs_gopherjs\",\n        importpath = \"github.com/gopherjs/gopherjs\",\n        sum = \"h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\",\n        version = \"v1.17.2\",\n    )\n    go_repository(\n        name = \"com_github_gopherjs_gopherwasm\",\n        importpath = \"github.com/gopherjs/gopherwasm\",\n        sum = \"h1:32nge/RlujS1Im4HNCJPp0NbBOAeBXFuT1KonUuLl+Y=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_gorhill_cronexpr\",\n        importpath = \"github.com/gorhill/cronexpr\",\n        sum = \"h1:f0n1xnMSmBLzVfsMMvriDyA75NB/oBgILX2GcHXIQzY=\",\n        version = \"v0.0.0-20180427100037-88b0669f7d75\",\n    )\n\n    go_repository(\n        name = \"com_github_gorilla_securecookie\",\n        importpath = \"github.com/gorilla/securecookie\",\n        sum = \"h1:miw7JPhV+b/lAHSXz4qd/nN9jRiAFV5FwjeKyCS8BvQ=\",\n        version = \"v1.1.1\",\n    )\n    go_repository(\n        name = \"com_github_grpc_ecosystem_go_grpc_middleware\",\n        importpath = \"github.com/grpc-ecosystem/go-grpc-middleware\",\n        sum = \"h1:+9834+KizmvFV7pXQGSXQTsaWhq2GjuNUt0aUU0YBYw=\",\n        version = \"v1.3.0\",\n    )\n    go_repository(\n        name = \"com_github_grpc_ecosystem_grpc_gateway_v2\",\n        importpath = \"github.com/grpc-ecosystem/grpc-gateway/v2\",\n        sum = \"h1:6UKoz5ujsI55KNpsJH3UwCq3T8kKbZwNZBNPuTTje8U=\",\n        version = \"v2.18.1\",\n    )\n\n    go_repository(\n        name = \"com_github_hako_durafmt\",\n        importpath = \"github.com/hako/durafmt\",\n        sum = \"h1:BpJ2o0OR5FV7vrkDYfXYVJQeMNWa8RhklZOpW2ITAIQ=\",\n        version = \"v0.0.0-20200710122514-c0fb7b4da026\",\n    )\n\n    go_repository(\n        name = \"com_github_hashicorp_errwrap\",\n        importpath = \"github.com/hashicorp/errwrap\",\n        sum = \"h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_hashicorp_go_multierror\",\n        importpath = \"github.com/hashicorp/go-multierror\",\n        sum = \"h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_hashicorp_golang_lru\",\n        importpath = \"github.com/hashicorp/golang-lru\",\n        sum = \"h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\",\n        version = \"v0.5.4\",\n    )\n    go_repository(\n        name = \"com_github_hashicorp_hcl\",\n        importpath = \"github.com/hashicorp/hcl\",\n        sum = \"h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_huandu_xstrings\",\n        importpath = \"github.com/huandu/xstrings\",\n        sum = \"h1:D17IlohoQq4UcpqD7fDk80P7l+lwAmlFaBHgOipl2FU=\",\n        version = \"v1.4.0\",\n    )\n\n    go_repository(\n        name = \"com_github_iancoleman_orderedmap\",\n        importpath = \"github.com/iancoleman/orderedmap\",\n        sum = \"h1:i462o439ZjprVSFSZLZxcsoAe592sZB1rci2Z8j4wdk=\",\n        version = \"v0.0.0-20190318233801-ac98e3ecb4b0\",\n    )\n    go_repository(\n        name = \"com_github_iancoleman_strcase\",\n        importpath = \"github.com/iancoleman/strcase\",\n        sum = \"h1:05I4QRnGpI0m37iZQRuskXh+w77mr6Z41lwQzuHLwW0=\",\n        version = \"v0.2.0\",\n    )\n\n    go_repository(\n        name = \"com_github_imdario_mergo\",\n        importpath = \"github.com/imdario/mergo\",\n        sum = \"h1:3tnifQM4i+fbajXKBHXWEH+KvNHqojZ778UH75j3bGA=\",\n        version = \"v0.3.11\",\n    )\n    go_repository(\n        name = \"com_github_inconshreveable_mousetrap\",\n        importpath = \"github.com/inconshreveable/mousetrap\",\n        sum = \"h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\",\n        version = \"v1.1.0\",\n    )\n    go_repository(\n        name = \"com_github_invopop_jsonschema\",\n        importpath = \"github.com/invopop/jsonschema\",\n        sum = \"h1:2vgQcBz1n256N+FpX3Jq7Y17AjYt46Ig3zIWyy770So=\",\n        version = \"v0.7.0\",\n    )\n\n    go_repository(\n        name = \"com_github_jackc_chunkreader_v2\",\n        importpath = \"github.com/jackc/chunkreader/v2\",\n        sum = \"h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=\",\n        version = \"v2.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_jackc_pgconn\",\n        importpath = \"github.com/jackc/pgconn\",\n        sum = \"h1:bVoTr12EGANZz66nZPkMInAV/KHD2TxH9npjXXgiB3w=\",\n        version = \"v1.14.3\",\n    )\n    go_repository(\n        name = \"com_github_jackc_pgio\",\n        importpath = \"github.com/jackc/pgio\",\n        sum = \"h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_jackc_pgpassfile\",\n        importpath = \"github.com/jackc/pgpassfile\",\n        sum = \"h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_jackc_pgproto3_v2\",\n        importpath = \"github.com/jackc/pgproto3/v2\",\n        sum = \"h1:1HLSx5H+tXR9pW3in3zaztoEwQYRC9SQaYUHjTSUOag=\",\n        version = \"v2.3.3\",\n    )\n    go_repository(\n        name = \"com_github_jackc_pgservicefile\",\n        importpath = \"github.com/jackc/pgservicefile\",\n        sum = \"h1:bbPeKD0xmW/Y25WS6cokEszi5g+S0QxI/d45PkRi7Nk=\",\n        version = \"v0.0.0-20221227161230-091c0ba34f0a\",\n    )\n    go_repository(\n        name = \"com_github_jackc_pgtype\",\n        importpath = \"github.com/jackc/pgtype\",\n        sum = \"h1:y+xUdabmyMkJLyApYuPj38mW+aAIqCe5uuBB51rH3Vw=\",\n        version = \"v1.14.0\",\n    )\n\n    go_repository(\n        name = \"com_github_jackc_pgx_v4\",\n        importpath = \"github.com/jackc/pgx/v4\",\n        sum = \"h1:xVpYkNR5pk5bMCZGfClbO962UIqVABcAGt7ha1s/FeU=\",\n        version = \"v4.18.2\",\n    )\n    go_repository(\n        name = \"com_github_jackc_puddle\",\n        importpath = \"github.com/jackc/puddle\",\n        sum = \"h1:eHK/5clGOatcjX3oWGBO/MpxpbHzSwud5EWTSCI+MX0=\",\n        version = \"v1.3.0\",\n    )\n    go_repository(\n        name = \"com_github_jbenet_go_context\",\n        importpath = \"github.com/jbenet/go-context\",\n        sum = \"h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=\",\n        version = \"v0.0.0-20150711004518-d14ea06fba99\",\n    )\n    go_repository(\n        name = \"com_github_jcgregorio_logger\",\n        importpath = \"github.com/jcgregorio/logger\",\n        sum = \"h1:KKKWn4Q0bPpGtLFWEF3Pkv0VtX8Oru3cK0OH0ZozYik=\",\n        version = \"v0.1.3\",\n    )\n    go_repository(\n        name = \"com_github_jcgregorio_slog\",\n        importpath = \"github.com/jcgregorio/slog\",\n        sum = \"h1:H8hiPQr5PtkrB5z3Do/9iR5tEwuAFNim68cqcoAlHeY=\",\n        version = \"v0.0.0-20190423190439-e6f2d537f900\",\n    )\n    go_repository(\n        name = \"com_github_jeffail_gabs_v2\",\n        importpath = \"github.com/Jeffail/gabs/v2\",\n        sum = \"h1:WdCnGaDhNa4LSRTMwhLZzJ7SRDXjABNP13SOKvCpL5w=\",\n        version = \"v2.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_jinzhu_copier\",\n        importpath = \"github.com/jinzhu/copier\",\n        sum = \"h1:GlvfUwHk62RokgqVNvYsku0TATCF7bAHVwEXoBh3iJg=\",\n        version = \"v0.3.5\",\n    )\n\n    go_repository(\n        name = \"com_github_jmespath_go_jmespath\",\n        importpath = \"github.com/jmespath/go-jmespath\",\n        sum = \"h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\",\n        version = \"v0.4.0\",\n    )\n    go_repository(\n        name = \"com_github_jordan_wright_email\",\n        importpath = \"github.com/jordan-wright/email\",\n        sum = \"h1:jdpOPRN1zP63Td1hDQbZW73xKmzDvZHzVdNYxhnTMDA=\",\n        version = \"v4.0.1-0.20210109023952-943e75fe5223+incompatible\",\n    )\n\n    go_repository(\n        name = \"com_github_jpillora_backoff\",\n        importpath = \"github.com/jpillora/backoff\",\n        sum = \"h1:uvFg412JmmHBHw7iwprIxkPMI+sGQ4kzOWsMeHnm2EA=\",\n        version = \"v1.0.0\",\n    )\n    go_repository(\n        name = \"com_github_json_iterator_go\",\n        importpath = \"github.com/json-iterator/go\",\n        sum = \"h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\",\n        version = \"v1.1.12\",\n    )\n\n    go_repository(\n        name = \"com_github_jtolds_gls\",\n        importpath = \"github.com/jtolds/gls\",\n        sum = \"h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\",\n        version = \"v4.20.0+incompatible\",\n    )\n    go_repository(\n        name = \"com_github_julienschmidt_httprouter\",\n        importpath = \"github.com/julienschmidt/httprouter\",\n        sum = \"h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\",\n        version = \"v1.3.0\",\n    )\n\n    go_repository(\n        name = \"com_github_kballard_go_shellquote\",\n        importpath = \"github.com/kballard/go-shellquote\",\n        sum = \"h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\",\n        version = \"v0.0.0-20180428030007-95032a82bc51\",\n    )\n\n    go_repository(\n        name = \"com_github_kevinburke_ssh_config\",\n        importpath = \"github.com/kevinburke/ssh_config\",\n        sum = \"h1:Coekwdh0v2wtGp9Gmz1Ze3eVRAWJMLokvN3QjdzCHLY=\",\n        version = \"v0.0.0-20190725054713-01f96b0aa0cd\",\n    )\n    go_repository(\n        name = \"com_github_kisielk_errcheck\",\n        importpath = \"github.com/kisielk/errcheck\",\n        sum = \"h1:e8esj/e4R+SAOwFwN+n3zr0nYeCyeweozKfO23MvHzY=\",\n        version = \"v1.5.0\",\n    )\n\n    go_repository(\n        name = \"com_github_klauspost_asmfmt\",\n        importpath = \"github.com/klauspost/asmfmt\",\n        sum = \"h1:4Ri7ox3EwapiOjCki+hw14RyKk201CN4rzyCJRFLpK4=\",\n        version = \"v1.3.2\",\n    )\n\n    go_repository(\n        name = \"com_github_klauspost_compress\",\n        importpath = \"github.com/klauspost/compress\",\n        sum = \"h1:2mk3MPGNzKyxErAw8YaohYh69+pa4sIQSC0fPGCFR9I=\",\n        version = \"v1.16.7\",\n    )\n    go_repository(\n        name = \"com_github_klauspost_cpuid_v2\",\n        importpath = \"github.com/klauspost/cpuid/v2\",\n        sum = \"h1:lgaqFMSdTdQYdZ04uHyN2d/eKdOMyi2YLSvlQIBFYa4=\",\n        version = \"v2.0.9\",\n    )\n\n    go_repository(\n        name = \"com_github_konsorten_go_windows_terminal_sequences\",\n        importpath = \"github.com/konsorten/go-windows-terminal-sequences\",\n        sum = \"h1:CE8S1cTafDpPvMhIxNJKvHsGVBgn1xWYf1NbHQhywc8=\",\n        version = \"v1.0.3\",\n    )\n\n    go_repository(\n        name = \"com_github_kr_logfmt\",\n        importpath = \"github.com/kr/logfmt\",\n        sum = \"h1:T+h1c/A9Gawja4Y9mFVWj2vyii2bbUNDw3kt9VxK2EY=\",\n        version = \"v0.0.0-20140226030751-b84e30acd515\",\n    )\n    go_repository(\n        name = \"com_github_kr_pretty\",\n        importpath = \"github.com/kr/pretty\",\n        sum = \"h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\",\n        version = \"v0.1.0\",\n    )\n    go_repository(\n        name = \"com_github_kr_pty\",\n        importpath = \"github.com/kr/pty\",\n        sum = \"h1:VkoXIwSboBpnk99O/KFauAEILuNHv5DVFKZMBN/gUgw=\",\n        version = \"v1.1.1\",\n    )\n    go_repository(\n        name = \"com_github_kr_text\",\n        importpath = \"github.com/kr/text\",\n        sum = \"h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\",\n        version = \"v0.2.0\",\n    )\n    go_repository(\n        name = \"com_github_kylelemons_godebug\",\n        importpath = \"github.com/kylelemons/godebug\",\n        sum = \"h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_lib_pq\",\n        importpath = \"github.com/lib/pq\",\n        sum = \"h1:AqzbZs4ZoCBp+GtejcpCpcxM3zlSMx29dXbUSeVtJb8=\",\n        version = \"v1.10.2\",\n    )\n\n    go_repository(\n        name = \"com_github_luci_gtreap\",\n        importpath = \"github.com/luci/gtreap\",\n        sum = \"h1:Kkxfmkf53vnIADWIhzvJ0GvwVR/gz9U7F7Wqofqd7dU=\",\n        version = \"v0.0.0-20161228054646-35df89791e8f\",\n    )\n    go_repository(\n        name = \"com_github_lyft_protoc_gen_star_v2\",\n        importpath = \"github.com/lyft/protoc-gen-star/v2\",\n        sum = \"h1:/3+/2sWyXeMLzKd1bX+ixWKgEMsULrIivpDsuaF441o=\",\n        version = \"v2.0.3\",\n    )\n\n    go_repository(\n        name = \"com_github_magiconair_properties\",\n        importpath = \"github.com/magiconair/properties\",\n        sum = \"h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\",\n        version = \"v1.8.7\",\n    )\n    go_repository(\n        name = \"com_github_maruel_subcommands\",\n        importpath = \"github.com/maruel/subcommands\",\n        sum = \"h1:+063/UDFVMvzZcyo8qlfpPhmjeLsT9yLUq+IKgqBWHI=\",\n        version = \"v1.1.1\",\n    )\n\n    go_repository(\n        name = \"com_github_masterminds_goutils\",\n        importpath = \"github.com/Masterminds/goutils\",\n        sum = \"h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\",\n        version = \"v1.1.1\",\n    )\n    go_repository(\n        name = \"com_github_masterminds_semver\",\n        importpath = \"github.com/Masterminds/semver\",\n        sum = \"h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\",\n        version = \"v1.5.0\",\n    )\n\n    go_repository(\n        name = \"com_github_masterminds_sprig\",\n        importpath = \"github.com/Masterminds/sprig\",\n        sum = \"h1:z4yfnGrZ7netVz+0EDJ0Wi+5VZCSYp4Z0m2dk6cEM60=\",\n        version = \"v2.22.0+incompatible\",\n    )\n    go_repository(\n        name = \"com_github_mattn_go_colorable\",\n        importpath = \"github.com/mattn/go-colorable\",\n        sum = \"h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\",\n        version = \"v0.1.13\",\n    )\n    go_repository(\n        name = \"com_github_mattn_go_isatty\",\n        importpath = \"github.com/mattn/go-isatty\",\n        sum = \"h1:BTarxUcIeDqL27Mc+vyvdWYSL28zpIhv3RoTdsLMPng=\",\n        version = \"v0.0.17\",\n    )\n\n    go_repository(\n        name = \"com_github_mattn_go_runewidth\",\n        importpath = \"github.com/mattn/go-runewidth\",\n        sum = \"h1:Ei8KR0497xHyKJPAv59M1dkC+rOZCMBJ+t3fZ+twI54=\",\n        version = \"v0.0.7\",\n    )\n    go_repository(\n        name = \"com_github_mattn_go_tty\",\n        importpath = \"github.com/mattn/go-tty\",\n        sum = \"h1:s09uXI7yDbXzzTTfw3zonKFzwGkyYlgU3OMjqA0ddz4=\",\n        version = \"v0.0.5\",\n    )\n\n    go_repository(\n        name = \"com_github_matttproud_golang_protobuf_extensions\",\n        importpath = \"github.com/matttproud/golang_protobuf_extensions\",\n        sum = \"h1:I0XW9+e1XWDxdcEniV4rQAIOPUGDq67JSCiRCgGCZLI=\",\n        version = \"v1.0.2-0.20181231171920-c182affec369\",\n    )\n    go_repository(\n        name = \"com_github_mgutz_ansi\",\n        importpath = \"github.com/mgutz/ansi\",\n        sum = \"h1:5PJl274Y63IEHC+7izoQE9x6ikvDFZS2mDVS3drnohI=\",\n        version = \"v0.0.0-20200706080929-d51e80ef957d\",\n    )\n    go_repository(\n        name = \"com_github_microsoft_go_winio\",\n        importpath = \"github.com/Microsoft/go-winio\",\n        sum = \"h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\",\n        version = \"v0.6.1\",\n    )\n\n    go_repository(\n        name = \"com_github_miekg_dns\",\n        importpath = \"github.com/miekg/dns\",\n        sum = \"h1:WMszZWJG0XmzbK9FEmzH2TVcqYzFesusSIB41b8KHxY=\",\n        version = \"v1.1.41\",\n    )\n    go_repository(\n        name = \"com_github_minio_asm2plan9s\",\n        importpath = \"github.com/minio/asm2plan9s\",\n        sum = \"h1:AMFGa4R4MiIpspGNG7Z948v4n35fFGB3RR3G/ry4FWs=\",\n        version = \"v0.0.0-20200509001527-cdd76441f9d8\",\n    )\n    go_repository(\n        name = \"com_github_minio_c2goasm\",\n        importpath = \"github.com/minio/c2goasm\",\n        sum = \"h1:+n/aFZefKZp7spd8DFdX7uMikMLXX4oubIzJF4kv/wI=\",\n        version = \"v0.0.0-20190812172519-36a3d3bbc4f3\",\n    )\n\n    go_repository(\n        name = \"com_github_mitchellh_copystructure\",\n        importpath = \"github.com/mitchellh/copystructure\",\n        sum = \"h1:Laisrj+bAB6b/yJwB5Bt3ITZhGJdqmxquMKeZ+mmkFQ=\",\n        version = \"v1.0.0\",\n    )\n    go_repository(\n        name = \"com_github_mitchellh_go_homedir\",\n        importpath = \"github.com/mitchellh/go-homedir\",\n        sum = \"h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_mitchellh_go_wordwrap\",\n        importpath = \"github.com/mitchellh/go-wordwrap\",\n        sum = \"h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\",\n        version = \"v1.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_mitchellh_mapstructure\",\n        importpath = \"github.com/mitchellh/mapstructure\",\n        sum = \"h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\",\n        version = \"v1.5.0\",\n    )\n    go_repository(\n        name = \"com_github_mitchellh_reflectwalk\",\n        importpath = \"github.com/mitchellh/reflectwalk\",\n        sum = \"h1:FVzMWA5RllMAKIdUSC8mdWo3XtwoecrH79BY70sEEpE=\",\n        version = \"v1.0.1\",\n    )\n    go_repository(\n        name = \"com_github_moby_spdystream\",\n        importpath = \"github.com/moby/spdystream\",\n        sum = \"h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=\",\n        version = \"v0.2.0\",\n    )\n\n    go_repository(\n        name = \"com_github_modern_go_concurrent\",\n        importpath = \"github.com/modern-go/concurrent\",\n        sum = \"h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\",\n        version = \"v0.0.0-20180306012644-bacd9c7ef1dd\",\n    )\n    go_repository(\n        name = \"com_github_modern_go_reflect2\",\n        importpath = \"github.com/modern-go/reflect2\",\n        sum = \"h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\",\n        version = \"v1.0.2\",\n    )\n\n    go_repository(\n        name = \"com_github_mostynb_zstdpool_syncpool\",\n        importpath = \"github.com/mostynb/zstdpool-syncpool\",\n        sum = \"h1:vE8zD0+YdQD9Rca0TAGNexUCOCt1IQbdqRUHJoxxERA=\",\n        version = \"v0.0.12\",\n    )\n\n    go_repository(\n        name = \"com_github_mwitkow_go_conntrack\",\n        importpath = \"github.com/mwitkow/go-conntrack\",\n        sum = \"h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=\",\n        version = \"v0.0.0-20190716064945-2f068394615f\",\n    )\n\n    go_repository(\n        name = \"com_github_nfnt_resize\",\n        importpath = \"github.com/nfnt/resize\",\n        sum = \"h1:zYyBkD/k9seD2A7fsi6Oo2LfFZAehjjQMERAvZLEDnQ=\",\n        version = \"v0.0.0-20180221191011-83c6a9932646\",\n    )\n    go_repository(\n        name = \"com_github_niemeyer_pretty\",\n        importpath = \"github.com/niemeyer/pretty\",\n        sum = \"h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\",\n        version = \"v0.0.0-20200227124842-a10e7caefd8e\",\n    )\n\n    go_repository(\n        name = \"com_github_nxadm_tail\",\n        importpath = \"github.com/nxadm/tail\",\n        sum = \"h1:obHEce3upls1IBn1gTw/o7bCv7OJb6Ib/o7wNO+4eKw=\",\n        version = \"v1.4.5\",\n    )\n\n    go_repository(\n        name = \"com_github_olekukonko_tablewriter\",\n        importpath = \"github.com/olekukonko/tablewriter\",\n        sum = \"h1:vHD/YYe1Wolo78koG299f7V/VAS08c6IpCLn+Ejf/w8=\",\n        version = \"v0.0.4\",\n    )\n\n    go_repository(\n        name = \"com_github_onsi_ginkgo\",\n        importpath = \"github.com/onsi/ginkgo\",\n        sum = \"h1:8mVmC9kjFFmA8H4pKMUhcblgifdkOIXPvbhN1T36q1M=\",\n        version = \"v1.14.2\",\n    )\n    go_repository(\n        name = \"com_github_onsi_gomega\",\n        importpath = \"github.com/onsi/gomega\",\n        sum = \"h1:gph6h/qe9GSUw1NhH1gp+qb+h8rXD8Cy60Z32Qw3ELA=\",\n        version = \"v1.10.3\",\n    )\n    go_repository(\n        name = \"com_github_op_go_logging\",\n        importpath = \"github.com/op/go-logging\",\n        sum = \"h1:lDH9UUVJtmYCjyT0CI4q8xvlXPxeZ0gYCVvWbmPlp88=\",\n        version = \"v0.0.0-20160315200505-970db520ece7\",\n    )\n\n    go_repository(\n        name = \"com_github_otiai10_copy\",\n        importpath = \"github.com/otiai10/copy\",\n        sum = \"h1:IinKAryFFuPONZ7cm6T6E2QX/vcJwSnlaA5lfoaXIiQ=\",\n        version = \"v1.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_patrickmn_go_cache\",\n        importpath = \"github.com/patrickmn/go-cache\",\n        sum = \"h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\",\n        version = \"v2.1.0+incompatible\",\n    )\n    go_repository(\n        name = \"com_github_pborman_uuid\",\n        importpath = \"github.com/pborman/uuid\",\n        sum = \"h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=\",\n        version = \"v1.2.1\",\n    )\n\n    go_repository(\n        name = \"com_github_pelletier_go_toml_v2\",\n        importpath = \"github.com/pelletier/go-toml/v2\",\n        sum = \"h1:nrzqCb7j9cDFj2coyLNLaZuJTLjWjlaz6nvTvIwycIU=\",\n        version = \"v2.0.6\",\n    )\n    go_repository(\n        name = \"com_github_peterh_liner\",\n        importpath = \"github.com/peterh/liner\",\n        sum = \"h1:f+aAedNJA6uk7+6rXsYBnhdo4Xux7ESLe+kcuVUF5os=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_pierrec_lz4_v4\",\n        importpath = \"github.com/pierrec/lz4/v4\",\n        sum = \"h1:MO0/ucJhngq7299dKLwIMtgTfbkoSPF6AoMYDd8Q4q0=\",\n        version = \"v4.1.15\",\n    )\n\n    go_repository(\n        name = \"com_github_pkg_errors\",\n        importpath = \"github.com/pkg/errors\",\n        sum = \"h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\",\n        version = \"v0.9.1\",\n    )\n\n    go_repository(\n        name = \"com_github_pkg_xattr\",\n        importpath = \"github.com/pkg/xattr\",\n        sum = \"h1:5883YPCtkSd8LFbs13nXplj9g9tlrwoJRjgpgMu1/fE=\",\n        version = \"v0.4.9\",\n    )\n\n    go_repository(\n        name = \"com_github_pmezard_go_difflib\",\n        importpath = \"github.com/pmezard/go-difflib\",\n        sum = \"h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\",\n        version = \"v1.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_prometheus_client_golang\",\n        importpath = \"github.com/prometheus/client_golang\",\n        sum = \"h1:+4eQaD7vAZ6DsfsxB15hbE0odUjGI5ARs9yskGu1v4s=\",\n        version = \"v1.11.1\",\n    )\n    go_repository(\n        name = \"com_github_prometheus_client_model\",\n        importpath = \"github.com/prometheus/client_model\",\n        sum = \"h1:5lQXD3cAg1OXBf4Wq03gTrXHeaV0TQvGfUooCfx1yqY=\",\n        version = \"v0.4.0\",\n    )\n    go_repository(\n        name = \"com_github_prometheus_common\",\n        importpath = \"github.com/prometheus/common\",\n        sum = \"h1:iMAkS2TDoNWnKM+Kopnx/8tnEStIfpYA0ur0xQzzhMQ=\",\n        version = \"v0.26.0\",\n    )\n    go_repository(\n        name = \"com_github_prometheus_procfs\",\n        importpath = \"github.com/prometheus/procfs\",\n        sum = \"h1:mxy4L2jP6qMonqmq+aTtOx1ifVWUgG/TAmntgbh3xv4=\",\n        version = \"v0.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_protocolbuffers_txtpbfmt\",\n        importpath = \"github.com/protocolbuffers/txtpbfmt\",\n        sum = \"h1:8SXWXWZNgCQbk7h0RWYK6BAWEQPQhFzLRvEoal4skDo=\",\n        version = \"v0.0.0-20230730201308-0c31dbd32b9f\",\n    )\n\n    go_repository(\n        name = \"com_github_r3labs_sse_v2\",\n        importpath = \"github.com/r3labs/sse/v2\",\n        sum = \"h1:lZH+W4XOLIq88U5MIHOsLec7+R62uhz3bIi2yn0Sg8o=\",\n        version = \"v2.8.1\",\n    )\n    go_repository(\n        name = \"com_github_redis_go_redis_v9\",\n        importpath = \"github.com/redis/go-redis/v9\",\n        sum = \"h1:fOAp1/uJG+ZtcITgZOfYFmTKPE7n4Vclj1wZFgRciUU=\",\n        version = \"v9.5.3\",\n    )\n\n    go_repository(\n        name = \"com_github_robertkrimen_otto\",\n        importpath = \"github.com/robertkrimen/otto\",\n        sum = \"h1:kYPjbEN6YPYWWHI6ky1J813KzIq/8+Wg4TO4xU7A/KU=\",\n        version = \"v0.0.0-20200922221731-ef014fd054ac\",\n    )\n    go_repository(\n        name = \"com_github_robfig_cron\",\n        importpath = \"github.com/robfig/cron\",\n        sum = \"h1:ZjScXvvxeQ63Dbyxy76Fj3AT3Ut0aKsyd2/tl3DTMuQ=\",\n        version = \"v1.2.0\",\n    )\n\n    go_repository(\n        name = \"com_github_rs_cors\",\n        importpath = \"github.com/rs/cors\",\n        sum = \"h1:G9tHG9lebljV9mfp9SNPDL36nCDxmo3zTlAf1YgvzmI=\",\n        version = \"v1.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_rs_zerolog\",\n        importpath = \"github.com/rs/zerolog\",\n        sum = \"h1:Zes4hju04hjbvkVkOhdl2HpZa+0PmVwigmo8XoORE5w=\",\n        version = \"v1.29.0\",\n    )\n\n    go_repository(\n        name = \"com_github_russross_blackfriday_v2\",\n        importpath = \"github.com/russross/blackfriday/v2\",\n        sum = \"h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\",\n        version = \"v2.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_santhosh_tekuri_jsonschema_v5\",\n        importpath = \"github.com/santhosh-tekuri/jsonschema/v5\",\n        sum = \"h1:lEOLY2vyGIqKWUI9nzsOJRV3mb3WC9dXYORsLEUcoeY=\",\n        version = \"v5.1.1\",\n    )\n\n    go_repository(\n        name = \"com_github_sendgrid_rest\",\n        importpath = \"github.com/sendgrid/rest\",\n        sum = \"h1:1EyIcsNdn9KIisLW50MKwmSRSK+ekueiEMJ7NEoxJo0=\",\n        version = \"v2.6.9+incompatible\",\n    )\n    go_repository(\n        name = \"com_github_sendgrid_sendgrid_go\",\n        importpath = \"github.com/sendgrid/sendgrid-go\",\n        sum = \"h1:ai0+woZ3r/+tKLQExznak5XerOFoD6S7ePO0lMV8WXo=\",\n        version = \"v3.11.1+incompatible\",\n    )\n\n    go_repository(\n        name = \"com_github_sergi_go_diff\",\n        importpath = \"github.com/sergi/go-diff\",\n        sum = \"h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\",\n        version = \"v1.3.1\",\n    )\n    go_repository(\n        name = \"com_github_shirou_gopsutil\",\n        importpath = \"github.com/shirou/gopsutil\",\n        sum = \"h1:+1+c1VGhc88SSonWP6foOcLhvnKlUeu/erjjvaPEYiI=\",\n        version = \"v3.21.11+incompatible\",\n    )\n\n    go_repository(\n        name = \"com_github_sirupsen_logrus\",\n        importpath = \"github.com/sirupsen/logrus\",\n        sum = \"h1:UBcNElsrwanuuMsnGSlYmtmgbb23qDR5dG+6X6Oo89I=\",\n        version = \"v1.6.0\",\n    )\n\n    go_repository(\n        name = \"com_github_skia_dev_google_api_go_client\",\n        importpath = \"github.com/skia-dev/google-api-go-client\",\n        sum = \"h1:Id5JdSD66PKQQiiVFG1VXDVCT5U3DcDzJSReXRxKRLk=\",\n        version = \"v0.10.1-0.20200109184256-16c3d6f408b2\",\n    )\n    go_repository(\n        name = \"com_github_skia_dev_protoc_gen_twirp_typescript\",\n        importpath = \"github.com/skia-dev/protoc-gen-twirp_typescript\",\n        sum = \"h1:NDEFg8RXMMmc3j5fE+M7fJ2vqoCRRBu1excmvrhmA6Y=\",\n        version = \"v0.0.0-20220429132620-ad26708b7787\",\n    )\n    go_repository(\n        name = \"com_github_smarty_assertions\",\n        importpath = \"github.com/smarty/assertions\",\n        sum = \"h1:812oFiXI+G55vxsFf+8bIZ1ux30qtkdqzKbEFwyX3Tk=\",\n        version = \"v1.15.1\",\n    )\n\n    go_repository(\n        name = \"com_github_smartystreets_goconvey\",\n        importpath = \"github.com/smartystreets/goconvey\",\n        sum = \"h1:qGjIddxOk4grTu9JPOU31tVfq3cNdBlNa5sSznIX1xY=\",\n        version = \"v1.8.1\",\n    )\n\n    go_repository(\n        name = \"com_github_spf13_afero\",\n        importpath = \"github.com/spf13/afero\",\n        sum = \"h1:41FoI0fD7OR7mGcKE/aOiLkGreyf8ifIOQmJANWogMk=\",\n        version = \"v1.9.3\",\n    )\n    go_repository(\n        name = \"com_github_spf13_cast\",\n        importpath = \"github.com/spf13/cast\",\n        sum = \"h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\",\n        version = \"v1.5.0\",\n    )\n    go_repository(\n        name = \"com_github_spf13_cobra\",\n        importpath = \"github.com/spf13/cobra\",\n        sum = \"h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=\",\n        version = \"v1.6.1\",\n    )\n    go_repository(\n        name = \"com_github_spf13_jwalterweatherman\",\n        importpath = \"github.com/spf13/jwalterweatherman\",\n        sum = \"h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\",\n        version = \"v1.1.0\",\n    )\n    go_repository(\n        name = \"com_github_spf13_pflag\",\n        importpath = \"github.com/spf13/pflag\",\n        sum = \"h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\",\n        version = \"v1.0.5\",\n    )\n    go_repository(\n        name = \"com_github_spf13_viper\",\n        importpath = \"github.com/spf13/viper\",\n        sum = \"h1:js3yy885G8xwJa6iOISGFwd+qlUo5AvyXb7CiihdtiU=\",\n        version = \"v1.15.0\",\n    )\n    go_repository(\n        name = \"com_github_src_d_gcfg\",\n        importpath = \"github.com/src-d/gcfg\",\n        sum = \"h1:xXbNR5AlLSA315x2UO+fTSSAXCDf+Ar38/6oyGbDKQ4=\",\n        version = \"v1.4.0\",\n    )\n\n    go_repository(\n        name = \"com_github_stretchr_objx\",\n        importpath = \"github.com/stretchr/objx\",\n        sum = \"h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\",\n        version = \"v0.5.0\",\n    )\n    go_repository(\n        name = \"com_github_stretchr_testify\",\n        importpath = \"github.com/stretchr/testify\",\n        sum = \"h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\",\n        version = \"v1.8.4\",\n    )\n    go_repository(\n        name = \"com_github_subosito_gotenv\",\n        importpath = \"github.com/subosito/gotenv\",\n        sum = \"h1:X1TuBLAMDFbaTAChgCBLu3DU3UPyELpnF2jjJ2cz/S8=\",\n        version = \"v1.4.2\",\n    )\n\n    go_repository(\n        name = \"com_github_syndtr_goleveldb\",\n        importpath = \"github.com/syndtr/goleveldb\",\n        sum = \"h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=\",\n        version = \"v1.0.0\",\n    )\n    go_repository(\n        name = \"com_github_tarm_serial\",\n        importpath = \"github.com/tarm/serial\",\n        sum = \"h1:UyzmZLoiDWMRywV4DUYb9Fbt8uiOSooupjTq10vpvnU=\",\n        version = \"v0.0.0-20180830185346-98f6abe2eb07\",\n    )\n    go_repository(\n        name = \"com_github_texttheater_golang_levenshtein\",\n        importpath = \"github.com/texttheater/golang-levenshtein\",\n        sum = \"h1:+cRNoVrfiwufQPhoMzB6N0Yf/Mqajr6t1lOv8GyGE2U=\",\n        version = \"v1.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_tklauser_go_sysconf\",\n        importpath = \"github.com/tklauser/go-sysconf\",\n        sum = \"h1:IJ1AZGZRWbY8T5Vfk04D9WOA5WSejdflXxP03OUqALw=\",\n        version = \"v0.3.10\",\n    )\n    go_repository(\n        name = \"com_github_tklauser_numcpus\",\n        importpath = \"github.com/tklauser/numcpus\",\n        sum = \"h1:E53Dm1HjH1/R2/aoCtXtPgzmElmn51aOkhCFSuZq//o=\",\n        version = \"v0.4.0\",\n    )\n\n    go_repository(\n        name = \"com_github_trietmn_go_wiki\",\n        importpath = \"github.com/trietmn/go-wiki\",\n        sum = \"h1:OnKPSfE/XtWH9ybRxD7UcNv4bLzv8WcTWxwMcIDsFyg=\",\n        version = \"v1.0.1\",\n    )\n\n    go_repository(\n        name = \"com_github_twitchtv_twirp\",\n        importpath = \"github.com/twitchtv/twirp\",\n        sum = \"h1:3fNSDoSPyq+fTrifIvGue9XM/tptzuhiGY83rxPVNUg=\",\n        version = \"v7.1.0+incompatible\",\n    )\n\n    go_repository(\n        name = \"com_github_unrolled_secure\",\n        importpath = \"github.com/unrolled/secure\",\n        sum = \"h1:JaMvKbe4CRt8oyxVXn+xY+6jlqd7pyJNSVkmsBxxQsM=\",\n        version = \"v1.0.8\",\n    )\n\n    go_repository(\n        name = \"com_github_urfave_cli_v2\",\n        importpath = \"github.com/urfave/cli/v2\",\n        sum = \"h1:rx3Pw+TY8QZ2ww93xgRSiSGySm2vDmhgC6brkS9E5ss=\",\n        version = \"v2.17.0\",\n    )\n\n    go_repository(\n        name = \"com_github_vektra_mockery_v2\",\n        importpath = \"github.com/vektra/mockery/v2\",\n        sum = \"h1:I0LBuUzZHqAU4d1DknW0DTFBPO6n8TaD38WL2KJf3yI=\",\n        version = \"v2.38.0\",\n    )\n    go_repository(\n        name = \"com_github_vmihailenco_msgpack_v5\",\n        importpath = \"github.com/vmihailenco/msgpack/v5\",\n        sum = \"h1:5gO0H1iULLWGhs2H5tbAHIZTV8/cYafcFOr9znI5mJU=\",\n        version = \"v5.3.5\",\n    )\n    go_repository(\n        name = \"com_github_vmihailenco_tagparser_v2\",\n        importpath = \"github.com/vmihailenco/tagparser/v2\",\n        sum = \"h1:y09buUbR+b5aycVFQs/g70pqKVZNBmxwAhO7/IwNM9g=\",\n        version = \"v2.0.0\",\n    )\n\n    go_repository(\n        name = \"com_github_willf_bitset\",\n        importpath = \"github.com/willf/bitset\",\n        sum = \"h1:N7Z7E9UvjW+sGsEl7k/SJrvY2reP1A07MrGuCjIOjRE=\",\n        version = \"v1.1.11\",\n    )\n\n    go_repository(\n        name = \"com_github_xanzy_ssh_agent\",\n        importpath = \"github.com/xanzy/ssh-agent\",\n        sum = \"h1:TCbipTQL2JiiCprBWx9frJ2eJlCYT00NmctrHxVAr70=\",\n        version = \"v0.2.1\",\n    )\n\n    go_repository(\n        name = \"com_github_xeipuuv_gojsonpointer\",\n        importpath = \"github.com/xeipuuv/gojsonpointer\",\n        sum = \"h1:J9EGpcZtP0E/raorCMxlFGSTBrsSlaDGf3jU/qvAE2c=\",\n        version = \"v0.0.0-20180127040702-4e3ac2762d5f\",\n    )\n    go_repository(\n        name = \"com_github_xeipuuv_gojsonreference\",\n        importpath = \"github.com/xeipuuv/gojsonreference\",\n        sum = \"h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\",\n        version = \"v0.0.0-20180127040603-bd5ef7bd5415\",\n    )\n    go_repository(\n        name = \"com_github_xeipuuv_gojsonschema\",\n        importpath = \"github.com/xeipuuv/gojsonschema\",\n        sum = \"h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\",\n        version = \"v1.2.0\",\n    )\n    go_repository(\n        name = \"com_github_xo_terminfo\",\n        importpath = \"github.com/xo/terminfo\",\n        sum = \"h1:JVG44RsyaB9T2KIHavMF/ppJZNG9ZpyihvCd0w101no=\",\n        version = \"v0.0.0-20220910002029-abceb7e1c41e\",\n    )\n\n    go_repository(\n        name = \"com_github_xrash_smetrics\",\n        importpath = \"github.com/xrash/smetrics\",\n        sum = \"h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=\",\n        version = \"v0.0.0-20201216005158-039620a65673\",\n    )\n    go_repository(\n        name = \"com_github_yannh_kubeconform\",\n        importpath = \"github.com/yannh/kubeconform\",\n        sum = \"h1:lNmb/kphyzitA+GBsOxjBsagCEpjLvt3+qo3XMiEOUA=\",\n        version = \"v0.6.3\",\n    )\n    go_repository(\n        name = \"com_github_yosuke_furukawa_json5\",\n        importpath = \"github.com/yosuke-furukawa/json5\",\n        sum = \"h1:0F9mNwTvOuDNH243hoPqvf+dxa5QsKnZzU20uNsh3ZI=\",\n        version = \"v0.1.1\",\n    )\n\n    go_repository(\n        name = \"com_github_yuin_goldmark\",\n        importpath = \"github.com/yuin/goldmark\",\n        sum = \"h1:fVcFKWvrslecOb/tg+Cc05dkeYx540o0FuFt3nUVDoE=\",\n        version = \"v1.4.13\",\n    )\n    go_repository(\n        name = \"com_github_yuin_gopher_lua\",\n        importpath = \"github.com/yuin/gopher-lua\",\n        sum = \"h1:BojcDhfyDWgU2f2TOzYK/g5p2gxMrku8oupLDqlnSqE=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"com_github_yusufpapurcu_wmi\",\n        importpath = \"github.com/yusufpapurcu/wmi\",\n        sum = \"h1:KBNDSne4vP5mbSWnJbO+51IMOXJB67QiYCSBrubbPRg=\",\n        version = \"v1.2.2\",\n    )\n\n    go_repository(\n        name = \"com_github_zeebo_bencode\",\n        importpath = \"github.com/zeebo/bencode\",\n        sum = \"h1:zgop0Wu1nu4IexAZeCZ5qbsjU4O1vMrfCrVgUjbHVuA=\",\n        version = \"v1.0.0\",\n    )\n    go_repository(\n        name = \"com_github_zeebo_xxh3\",\n        importpath = \"github.com/zeebo/xxh3\",\n        sum = \"h1:xZmwmqxHZA8AI603jOQ0tMqmBr9lPeFwGg6d+xy9DC0=\",\n        version = \"v1.0.2\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go\",\n        importpath = \"cloud.google.com/go\",\n        sum = \"h1:YHLKNupSD1KqjDbQ3+LVdQ81h/UJbJyZG203cEfnQgM=\",\n        version = \"v0.111.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_accessapproval\",\n        importpath = \"cloud.google.com/go/accessapproval\",\n        sum = \"h1:ZvLvJ952zK8pFHINjpMBY5k7LTAp/6pBf50RDMRgBUI=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_accesscontextmanager\",\n        importpath = \"cloud.google.com/go/accesscontextmanager\",\n        sum = \"h1:Yo4g2XrBETBCqyWIibN3NHNPQKUfQqti0lI+70rubeE=\",\n        version = \"v1.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_aiplatform\",\n        importpath = \"cloud.google.com/go/aiplatform\",\n        sum = \"h1:xyCAfpI4yUMOQ4VtHN/bdmxPQ8xoEkTwFM1nbVmuQhs=\",\n        version = \"v1.58.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_analytics\",\n        importpath = \"cloud.google.com/go/analytics\",\n        sum = \"h1:w8KIgW8NRUHFVKjpkwCpLaHsr685tJ+ckPStOaSCZz0=\",\n        version = \"v0.22.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_apigateway\",\n        importpath = \"cloud.google.com/go/apigateway\",\n        sum = \"h1:VVIxCtVerchHienSlaGzV6XJGtEM9828Erzyr3miUGs=\",\n        version = \"v1.6.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_apigeeconnect\",\n        importpath = \"cloud.google.com/go/apigeeconnect\",\n        sum = \"h1:jSoGITWKgAj/ssVogNE9SdsTqcXnryPzsulENSRlusI=\",\n        version = \"v1.6.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_apigeeregistry\",\n        importpath = \"cloud.google.com/go/apigeeregistry\",\n        sum = \"h1:DSaD1iiqvELag+lV4VnnqUUFd8GXELu01tKVdWZrviE=\",\n        version = \"v0.8.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_appengine\",\n        importpath = \"cloud.google.com/go/appengine\",\n        sum = \"h1:Qub3fqR7iA1daJWdzjp/Q0Jz0fUG0JbMc7Ui4E9IX/E=\",\n        version = \"v1.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_area120\",\n        importpath = \"cloud.google.com/go/area120\",\n        sum = \"h1:YnSO8m02pOIo6AEOgiOoUDVbw4pf+bg2KLHi4rky320=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_artifactregistry\",\n        importpath = \"cloud.google.com/go/artifactregistry\",\n        sum = \"h1:/hQaadYytMdA5zBh+RciIrXZQBWK4vN7EUsrQHG+/t8=\",\n        version = \"v1.14.6\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_asset\",\n        importpath = \"cloud.google.com/go/asset\",\n        sum = \"h1:dLWfTnbwyrq/Kt8Tr2JiAbre1MEvS2Bl5cAMiYAy5Pg=\",\n        version = \"v1.17.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_assuredworkloads\",\n        importpath = \"cloud.google.com/go/assuredworkloads\",\n        sum = \"h1:FsLSkmYYeNuzDm8L4YPfLWV+lQaUrJmH5OuD37t1k20=\",\n        version = \"v1.11.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_automl\",\n        importpath = \"cloud.google.com/go/automl\",\n        sum = \"h1:i9tOKXX+1gE7+rHpWKjiuPfGBVIYoWvLNIGpWgPtF58=\",\n        version = \"v1.13.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_baremetalsolution\",\n        importpath = \"cloud.google.com/go/baremetalsolution\",\n        sum = \"h1:oQiFYYCe0vwp7J8ZmF6siVKEumWtiPFJMJcGuyDVRUk=\",\n        version = \"v1.2.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_batch\",\n        importpath = \"cloud.google.com/go/batch\",\n        sum = \"h1:AxuSPoL2fWn/rUyvWeNCNd0V2WCr+iHRCU9QO1PUmpY=\",\n        version = \"v1.7.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_beyondcorp\",\n        importpath = \"cloud.google.com/go/beyondcorp\",\n        sum = \"h1:VXf9SnrnSmj2BF2cHkoTHvOUp8gjsz1KJFOMW7czdsY=\",\n        version = \"v1.0.3\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_bigquery\",\n        importpath = \"cloud.google.com/go/bigquery\",\n        sum = \"h1:FiULdbbzUxWD0Y4ZGPSVCDLvqRSyCIO6zKV7E2nf5uA=\",\n        version = \"v1.57.1\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_bigtable\",\n        importpath = \"cloud.google.com/go/bigtable\",\n        sum = \"h1:wiq9LT0kukfInzvy1joMDijCw/OD1UChpSbORXYn0LI=\",\n        version = \"v1.19.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_billing\",\n        importpath = \"cloud.google.com/go/billing\",\n        sum = \"h1:GvKy4xLy1zF1XPbwP5NJb2HjRxhnhxjjXxvyZ1S/IAo=\",\n        version = \"v1.18.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_binaryauthorization\",\n        importpath = \"cloud.google.com/go/binaryauthorization\",\n        sum = \"h1:PHS89lcFayWIEe0/s2jTBiEOtqghCxzc7y7bRNlifBs=\",\n        version = \"v1.8.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_certificatemanager\",\n        importpath = \"cloud.google.com/go/certificatemanager\",\n        sum = \"h1:5YMQ3Q+dqGpwUZ9X5sipsOQ1fLPsxod9HNq0+nrqc6I=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_channel\",\n        importpath = \"cloud.google.com/go/channel\",\n        sum = \"h1:yYHOORIM+wkBy3EdwArg/WL7Lg+SoGzlKH9o3Bw2/jE=\",\n        version = \"v1.17.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_cloudbuild\",\n        importpath = \"cloud.google.com/go/cloudbuild\",\n        sum = \"h1:9IHfEMWdCklJ1cwouoiQrnxmP0q3pH7JUt8Hqx4Qbck=\",\n        version = \"v1.15.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_clouddms\",\n        importpath = \"cloud.google.com/go/clouddms\",\n        sum = \"h1:xe/wJKz55VO1+L891a1EG9lVUgfHr9Ju/I3xh1nwF84=\",\n        version = \"v1.7.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_cloudtasks\",\n        importpath = \"cloud.google.com/go/cloudtasks\",\n        sum = \"h1:5xXuFfAjg0Z5Wb81j2GAbB3e0bwroCeSF+5jBn/L650=\",\n        version = \"v1.12.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_compute\",\n        importpath = \"cloud.google.com/go/compute\",\n        sum = \"h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=\",\n        version = \"v1.23.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_compute_metadata\",\n        importpath = \"cloud.google.com/go/compute/metadata\",\n        sum = \"h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\",\n        version = \"v0.2.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_contactcenterinsights\",\n        importpath = \"cloud.google.com/go/contactcenterinsights\",\n        sum = \"h1:EiGBeejtDDtr3JXt9W7xlhXyZ+REB5k2tBgVPVtmNb0=\",\n        version = \"v1.12.1\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_container\",\n        importpath = \"cloud.google.com/go/container\",\n        sum = \"h1:jIltU529R2zBFvP8rhiG1mgeTcnT27KhU0H/1d6SQRg=\",\n        version = \"v1.29.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_containeranalysis\",\n        importpath = \"cloud.google.com/go/containeranalysis\",\n        sum = \"h1:5rhYLX+3a01drpREqBZVXR9YmWH45RnML++8NsCtuD8=\",\n        version = \"v0.11.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_datacatalog\",\n        importpath = \"cloud.google.com/go/datacatalog\",\n        sum = \"h1:rbYNmHwvAOOwnW2FPXYkaK3Mf1MmGqRzK0mMiIEyLdo=\",\n        version = \"v1.19.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dataflow\",\n        importpath = \"cloud.google.com/go/dataflow\",\n        sum = \"h1:7VmCNWcPJBS/srN2QnStTB6nu4Eb5TMcpkmtaPVhRt4=\",\n        version = \"v0.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dataform\",\n        importpath = \"cloud.google.com/go/dataform\",\n        sum = \"h1:jV+EsDamGX6cE127+QAcCR/lergVeeZdEQ6DdrxW3sQ=\",\n        version = \"v0.9.1\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_datafusion\",\n        importpath = \"cloud.google.com/go/datafusion\",\n        sum = \"h1:Q90alBEYlMi66zL5gMSGQHfbZLB55mOAg03DhwTTfsk=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_datalabeling\",\n        importpath = \"cloud.google.com/go/datalabeling\",\n        sum = \"h1:zrq4uMmunf2KFDl/7dS6iCDBBAxBnKVDyw6+ajz3yu0=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dataplex\",\n        importpath = \"cloud.google.com/go/dataplex\",\n        sum = \"h1:/WhVTR4v/L6ACKjlz/9CqkxkrVh2z7C44CLMUf0f60A=\",\n        version = \"v1.14.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dataproc_v2\",\n        importpath = \"cloud.google.com/go/dataproc/v2\",\n        sum = \"h1:tTVP9tTxmc8fixxOd/8s6Q6Pz/+yzn7r7XdZHretQH0=\",\n        version = \"v2.3.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dataqna\",\n        importpath = \"cloud.google.com/go/dataqna\",\n        sum = \"h1:NJnu1kAPamZDs/if3bJ3+Wb6tjADHKL83NUWsaIp2zg=\",\n        version = \"v0.8.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_datastore\",\n        importpath = \"cloud.google.com/go/datastore\",\n        sum = \"h1:0P9WcsQeTWjuD1H14JIY7XQscIPQ4Laje8ti96IC5vg=\",\n        version = \"v1.15.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_datastream\",\n        importpath = \"cloud.google.com/go/datastream\",\n        sum = \"h1:Z2sKPIB7bT2kMW5Uhxy44ZgdJzxzE5uKjavoW+EuHEE=\",\n        version = \"v1.10.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_deploy\",\n        importpath = \"cloud.google.com/go/deploy\",\n        sum = \"h1:5OVjzm8MPC5kP+Ywbs0mdE0O7AXvAUXksSyHAyMFyMg=\",\n        version = \"v1.16.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dialogflow\",\n        importpath = \"cloud.google.com/go/dialogflow\",\n        sum = \"h1:I7UsYowDdNhFI7RCix1uoThDp+8ULHByOo4n1T96y1A=\",\n        version = \"v1.48.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_dlp\",\n        importpath = \"cloud.google.com/go/dlp\",\n        sum = \"h1:OFlXedmPP/5//X1hBEeq3D9kUVm9fb6ywYANlpv/EsQ=\",\n        version = \"v1.11.1\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_documentai\",\n        importpath = \"cloud.google.com/go/documentai\",\n        sum = \"h1:hlYieOXUwiJ7HpBR/vEPfr8nfSxveLVzbqbUkSK0c/4=\",\n        version = \"v1.23.7\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_domains\",\n        importpath = \"cloud.google.com/go/domains\",\n        sum = \"h1:ua4GvsDztZ5F3xqjeLKVRDeOvJshf5QFgWGg1CKti3A=\",\n        version = \"v0.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_edgecontainer\",\n        importpath = \"cloud.google.com/go/edgecontainer\",\n        sum = \"h1:Szy3Q/N6bqgQGyxqjI+6xJZbmvPvnFHp3UZr95DKcQ0=\",\n        version = \"v1.1.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_errorreporting\",\n        importpath = \"cloud.google.com/go/errorreporting\",\n        sum = \"h1:kj1XEWMu8P0qlLhm3FwcaFsUvXChV/OraZwA70trRR0=\",\n        version = \"v0.3.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_essentialcontacts\",\n        importpath = \"cloud.google.com/go/essentialcontacts\",\n        sum = \"h1:S2if6wkjR4JCEAfDtIiYtD+sTz/oXjh2NUG4cgT1y/Q=\",\n        version = \"v1.6.5\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_eventarc\",\n        importpath = \"cloud.google.com/go/eventarc\",\n        sum = \"h1:+pFmO4eu4dOVipSaFBLkmqrRYG94Xl/TQZFOeohkuqU=\",\n        version = \"v1.13.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_filestore\",\n        importpath = \"cloud.google.com/go/filestore\",\n        sum = \"h1:/+wUEGwk3x3Kxomi2cP5dsR8+SIXxo7M0THDjreFSYo=\",\n        version = \"v1.8.0\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_firestore\",\n        importpath = \"cloud.google.com/go/firestore\",\n        sum = \"h1:8aLcKnMPoldYU3YHgu4t2exrKhLQkqaXAGqT0ljrFVw=\",\n        version = \"v1.14.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_functions\",\n        importpath = \"cloud.google.com/go/functions\",\n        sum = \"h1:ZjdiV3MyumRM6++1Ixu6N0VV9LAGlCX4AhW6Yjr1t+U=\",\n        version = \"v1.15.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_gkebackup\",\n        importpath = \"cloud.google.com/go/gkebackup\",\n        sum = \"h1:KhnOrr9A1tXYIYeXKqCKbCI8TL2ZNGiD3dm+d7BDUBg=\",\n        version = \"v1.3.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_gkeconnect\",\n        importpath = \"cloud.google.com/go/gkeconnect\",\n        sum = \"h1:1JLpZl31YhQDQeJ98tK6QiwTpgHFYRJwpntggpQQWis=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_gkehub\",\n        importpath = \"cloud.google.com/go/gkehub\",\n        sum = \"h1:J5tYUtb3r0cl2mM7+YHvV32eL+uZQ7lONyUZnPikCEo=\",\n        version = \"v0.14.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_gkemulticloud\",\n        importpath = \"cloud.google.com/go/gkemulticloud\",\n        sum = \"h1:C2Suwn3uPz+Yy0bxVjTlsMrUCaDovkgvfdyIa+EnUOU=\",\n        version = \"v1.1.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_gsuiteaddons\",\n        importpath = \"cloud.google.com/go/gsuiteaddons\",\n        sum = \"h1:uuw2Xd37yHftViSI8J2hUcCS8S7SH3ZWH09sUDLW30Q=\",\n        version = \"v1.6.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_iam\",\n        importpath = \"cloud.google.com/go/iam\",\n        sum = \"h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=\",\n        version = \"v1.1.5\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_iap\",\n        importpath = \"cloud.google.com/go/iap\",\n        sum = \"h1:M4vDbQ4TLXdaljXVZSwW7XtxpwXUUarY2lIs66m0aCM=\",\n        version = \"v1.9.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_ids\",\n        importpath = \"cloud.google.com/go/ids\",\n        sum = \"h1:VuFqv2ctf/A7AyKlNxVvlHTzjrEvumWaZflUzBPz/M4=\",\n        version = \"v1.4.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_iot\",\n        importpath = \"cloud.google.com/go/iot\",\n        sum = \"h1:m1WljtkZnvLTIRYW1YTOv5A6H1yKgLHR6nU7O8yf27w=\",\n        version = \"v1.7.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_kms\",\n        importpath = \"cloud.google.com/go/kms\",\n        sum = \"h1:pj1sRfut2eRbD9pFRjNnPNg/CzJPuQAzUujMIM1vVeM=\",\n        version = \"v1.15.5\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_language\",\n        importpath = \"cloud.google.com/go/language\",\n        sum = \"h1:zg9uq2yS9PGIOdc0Kz/l+zMtOlxKWonZjjo5w5YPG2A=\",\n        version = \"v1.12.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_lifesciences\",\n        importpath = \"cloud.google.com/go/lifesciences\",\n        sum = \"h1:rZEI/UxcxVKEzyoRS/kdJ1VoolNItRWjNN0Uk9tfexg=\",\n        version = \"v0.9.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_logging\",\n        importpath = \"cloud.google.com/go/logging\",\n        sum = \"h1:iEIOXFO9EmSiTjDmfpbRjOxECO7R8C7b8IXUGOj7xZw=\",\n        version = \"v1.9.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_longrunning\",\n        importpath = \"cloud.google.com/go/longrunning\",\n        sum = \"h1:w8xEcbZodnA2BbW6sVirkkoC+1gP8wS57EUUgGS0GVg=\",\n        version = \"v0.5.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_managedidentities\",\n        importpath = \"cloud.google.com/go/managedidentities\",\n        sum = \"h1:SF/u1IJduMqQQdJA4MDyivlIQ4SrV5qAawkr/ZEREkY=\",\n        version = \"v1.6.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_maps\",\n        importpath = \"cloud.google.com/go/maps\",\n        sum = \"h1:WxxLo//b60nNFESefLgaBQevu8QGUmRV3+noOjCfIHs=\",\n        version = \"v1.6.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_mediatranslation\",\n        importpath = \"cloud.google.com/go/mediatranslation\",\n        sum = \"h1:VRCQfZB4s6jN0CSy7+cO3m4ewNwgVnaePanVCQh/9Z4=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_memcache\",\n        importpath = \"cloud.google.com/go/memcache\",\n        sum = \"h1:cdex/ayDd294XBj2cGeMe6Y+H1JvhN8y78B9UW7pxuQ=\",\n        version = \"v1.10.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_metastore\",\n        importpath = \"cloud.google.com/go/metastore\",\n        sum = \"h1:94l/Yxg9oBZjin2bzI79oK05feYefieDq0o5fjLSkC8=\",\n        version = \"v1.13.3\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_monitoring\",\n        importpath = \"cloud.google.com/go/monitoring\",\n        sum = \"h1:blrdvF0MkPPivSO041ihul7rFMhXdVp8Uq7F59DKXTU=\",\n        version = \"v1.17.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_networkconnectivity\",\n        importpath = \"cloud.google.com/go/networkconnectivity\",\n        sum = \"h1:e9lUkCe2BexsqsUc2bjV8+gFBpQa54J+/F3qKVtW+wA=\",\n        version = \"v1.14.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_networkmanagement\",\n        importpath = \"cloud.google.com/go/networkmanagement\",\n        sum = \"h1:HsQk4FNKJUX04k3OI6gUsoveiHMGvDRqlaFM2xGyvqU=\",\n        version = \"v1.9.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_networksecurity\",\n        importpath = \"cloud.google.com/go/networksecurity\",\n        sum = \"h1:947tNIPnj1bMGTIEBo3fc4QrrFKS5hh0bFVsHmFm4Vo=\",\n        version = \"v0.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_notebooks\",\n        importpath = \"cloud.google.com/go/notebooks\",\n        sum = \"h1:eTOTfNL1yM6L/PCtquJwjWg7ZZGR0URFaFgbs8kllbM=\",\n        version = \"v1.11.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_optimization\",\n        importpath = \"cloud.google.com/go/optimization\",\n        sum = \"h1:iFsoexcp13cGT3k/Hv8PA5aK+FP7FnbhwDO9llnruas=\",\n        version = \"v1.6.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_orchestration\",\n        importpath = \"cloud.google.com/go/orchestration\",\n        sum = \"h1:kgwZ2f6qMMYIVBtUGGoU8yjYWwMTHDanLwM/CQCFaoQ=\",\n        version = \"v1.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_orgpolicy\",\n        importpath = \"cloud.google.com/go/orgpolicy\",\n        sum = \"h1:sab7cDiyfdthpAL0JkSpyw1C3mNqkXToVOhalm79PJQ=\",\n        version = \"v1.12.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_osconfig\",\n        importpath = \"cloud.google.com/go/osconfig\",\n        sum = \"h1:OrRCIYEAbrbXdhm13/JINn9pQchvTTIzgmOCA7uJw8I=\",\n        version = \"v1.12.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_oslogin\",\n        importpath = \"cloud.google.com/go/oslogin\",\n        sum = \"h1:NP/KgsD9+0r9hmHC5wKye0vJXVwdciv219DtYKYjgqE=\",\n        version = \"v1.12.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_phishingprotection\",\n        importpath = \"cloud.google.com/go/phishingprotection\",\n        sum = \"h1:sPLUQkHq6b4AL0czSJZ0jd6vL55GSTHz2B3Md+TCZI0=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_policytroubleshooter\",\n        importpath = \"cloud.google.com/go/policytroubleshooter\",\n        sum = \"h1:sq+ScLP83d7GJy9+wpwYJVnY+q6xNTXwOdRIuYjvHT4=\",\n        version = \"v1.10.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_privatecatalog\",\n        importpath = \"cloud.google.com/go/privatecatalog\",\n        sum = \"h1:Vo10IpWKbNvc/z/QZPVXgCiwfjpWoZ/wbgful4Uh/4E=\",\n        version = \"v0.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_profiler\",\n        importpath = \"cloud.google.com/go/profiler\",\n        sum = \"h1:b5got9Be9Ia0HVvyt7PavWxXEht15B9lWnigdvHtxOc=\",\n        version = \"v0.3.1\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_pubsub\",\n        importpath = \"cloud.google.com/go/pubsub\",\n        sum = \"h1:6SPCPvWav64tj0sVX/+npCBKhUi/UjJehy9op/V3p2g=\",\n        version = \"v1.33.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_pubsublite\",\n        importpath = \"cloud.google.com/go/pubsublite\",\n        sum = \"h1:pX+idpWMIH30/K7c0epN6V703xpIcMXWRjKJsz0tYGY=\",\n        version = \"v1.8.1\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_recaptchaenterprise_v2\",\n        importpath = \"cloud.google.com/go/recaptchaenterprise/v2\",\n        sum = \"h1:Zrd4LvT9PaW91X/Z13H0i5RKEv9suCLuk8zp+bfOpN4=\",\n        version = \"v2.9.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_recommendationengine\",\n        importpath = \"cloud.google.com/go/recommendationengine\",\n        sum = \"h1:JRiwe4hvu3auuh2hujiTc2qNgPPfVp+Q8KOpsXlEzKQ=\",\n        version = \"v0.8.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_recommender\",\n        importpath = \"cloud.google.com/go/recommender\",\n        sum = \"h1:tC+ljmCCbuZ/ybt43odTFlay91n/HLIhflvaOeb0Dh4=\",\n        version = \"v1.12.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_redis\",\n        importpath = \"cloud.google.com/go/redis\",\n        sum = \"h1:QF0maEdVv0Fj/2roU8sX3NpiDBzP9ICYTO+5F32gQNo=\",\n        version = \"v1.14.2\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_resourcemanager\",\n        importpath = \"cloud.google.com/go/resourcemanager\",\n        sum = \"h1:JwZ7Ggle54XQ/FVYSBrMLOQIKoIT/uer8mmNvNLK51k=\",\n        version = \"v1.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_resourcesettings\",\n        importpath = \"cloud.google.com/go/resourcesettings\",\n        sum = \"h1:yTIL2CsZswmMfFyx2Ic77oLVzfBFoWBYgpkgiSPnC4Y=\",\n        version = \"v1.6.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_retail\",\n        importpath = \"cloud.google.com/go/retail\",\n        sum = \"h1:geqdX1FNqqL2p0ADXjPpw8lq986iv5GrVcieTYafuJQ=\",\n        version = \"v1.14.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_run\",\n        importpath = \"cloud.google.com/go/run\",\n        sum = \"h1:qdfZteAm+vgzN1iXzILo3nJFQbzziudkJrvd9wCf3FQ=\",\n        version = \"v1.3.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_scheduler\",\n        importpath = \"cloud.google.com/go/scheduler\",\n        sum = \"h1:eMEettHlFhG5pXsoHouIM5nRT+k+zU4+GUvRtnxhuVI=\",\n        version = \"v1.10.5\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_secretmanager\",\n        importpath = \"cloud.google.com/go/secretmanager\",\n        sum = \"h1:krnX9qpG2kR2fJ+u+uNyNo+ACVhplIAS4Pu7u+4gd+k=\",\n        version = \"v1.11.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_security\",\n        importpath = \"cloud.google.com/go/security\",\n        sum = \"h1:sdnh4Islb1ljaNhpIXlIPgb3eYj70QWgPVDKOUYvzJc=\",\n        version = \"v1.15.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_securitycenter\",\n        importpath = \"cloud.google.com/go/securitycenter\",\n        sum = \"h1:crdn2Z2rFIy8WffmmhdlX3CwZJusqCiShtnrGFRwpeE=\",\n        version = \"v1.24.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_servicedirectory\",\n        importpath = \"cloud.google.com/go/servicedirectory\",\n        sum = \"h1:5niCMfkw+jifmFtbBrtRedbXkJm3fubSR/KHbxSJZVM=\",\n        version = \"v1.11.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_shell\",\n        importpath = \"cloud.google.com/go/shell\",\n        sum = \"h1:nurhlJcSVFZneoRZgkBEHumTYf/kFJptCK2eBUq/88M=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_spanner\",\n        importpath = \"cloud.google.com/go/spanner\",\n        sum = \"h1:ttU+lhARPF/iZE3OkCpmfsemCz9mLaqBhGPd3Qub2sQ=\",\n        version = \"v1.54.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_speech\",\n        importpath = \"cloud.google.com/go/speech\",\n        sum = \"h1:qkxNao58oF8ghAHE1Eghen7XepawYEN5zuZXYWaUTA4=\",\n        version = \"v1.21.0\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_storage\",\n        importpath = \"cloud.google.com/go/storage\",\n        sum = \"h1:+S3LjjEN2zZ+L5hOwj4+1OkGCsLVe0NzpXKQ1pSdTCI=\",\n        version = \"v1.31.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_storagetransfer\",\n        importpath = \"cloud.google.com/go/storagetransfer\",\n        sum = \"h1:YM1dnj5gLjfL6aDldO2s4GeU8JoAvH1xyIwXre63KmI=\",\n        version = \"v1.10.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_talent\",\n        importpath = \"cloud.google.com/go/talent\",\n        sum = \"h1:LnRJhhYkODDBoTwf6BeYkiJHFw9k+1mAFNyArwZUZAs=\",\n        version = \"v1.6.5\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_texttospeech\",\n        importpath = \"cloud.google.com/go/texttospeech\",\n        sum = \"h1:ahrzTgr7uAbvebuhkBAAVU6kRwVD0HWsmDsvMhtad5Q=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_tpu\",\n        importpath = \"cloud.google.com/go/tpu\",\n        sum = \"h1:XIEH5c0WeYGaVy9H+UueiTaf3NI6XNdB4/v6TFQJxtE=\",\n        version = \"v1.6.4\",\n    )\n\n    go_repository(\n        name = \"com_google_cloud_go_trace\",\n        importpath = \"cloud.google.com/go/trace\",\n        sum = \"h1:2qOAuAzNezwW3QN+t41BtkDJOG42HywL73q8x/f6fnM=\",\n        version = \"v1.10.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_translate\",\n        importpath = \"cloud.google.com/go/translate\",\n        sum = \"h1:tncNaKmlZnayMMRX/mMM2d5AJftecznnxVBD4w070NI=\",\n        version = \"v1.10.0\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_video\",\n        importpath = \"cloud.google.com/go/video\",\n        sum = \"h1:Xrpbm2S9UFQ1pZEeJt9Vqm5t2T/z9y/M3rNXhFoo8Is=\",\n        version = \"v1.20.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_videointelligence\",\n        importpath = \"cloud.google.com/go/videointelligence\",\n        sum = \"h1:YS4j7lY0zxYyneTFXjBJUj2r4CFe/UoIi/PJG0Zt/Rg=\",\n        version = \"v1.11.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_vision_v2\",\n        importpath = \"cloud.google.com/go/vision/v2\",\n        sum = \"h1:T/ujUghvEaTb+YnFY/jiYwVAkMbIC8EieK0CJo6B4vg=\",\n        version = \"v2.7.5\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_vmmigration\",\n        importpath = \"cloud.google.com/go/vmmigration\",\n        sum = \"h1:qPNdab4aGgtaRX+51jCOtJxlJp6P26qua4o1xxUDjpc=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_vmwareengine\",\n        importpath = \"cloud.google.com/go/vmwareengine\",\n        sum = \"h1:WY526PqM6QNmFHSqe2sRfK6gRpzWjmL98UFkql2+JDM=\",\n        version = \"v1.0.3\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_vpcaccess\",\n        importpath = \"cloud.google.com/go/vpcaccess\",\n        sum = \"h1:zbs3V+9ux45KYq8lxxn/wgXole6SlBHHKKyZhNJoS+8=\",\n        version = \"v1.7.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_webrisk\",\n        importpath = \"cloud.google.com/go/webrisk\",\n        sum = \"h1:iceR3k0BCRZgf2D/NiKviVMFfuNC9LmeNLtxUFRB/wI=\",\n        version = \"v1.9.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_websecurityscanner\",\n        importpath = \"cloud.google.com/go/websecurityscanner\",\n        sum = \"h1:5Gp7h5j7jywxLUp6NTpjNPkgZb3ngl0tUSw6ICWvtJQ=\",\n        version = \"v1.6.4\",\n    )\n    go_repository(\n        name = \"com_google_cloud_go_workflows\",\n        importpath = \"cloud.google.com/go/workflows\",\n        sum = \"h1:qocsqETmLAl34mSa01hKZjcqAvt699gaoFbooGGMvaM=\",\n        version = \"v1.12.3\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_alecthomas_kingpin_v2\",\n        importpath = \"gopkg.in/alecthomas/kingpin.v2\",\n        sum = \"h1:jMFz6MfLP0/4fUyZle81rXUoxOBFi19VUFKVDOQfozc=\",\n        version = \"v2.2.6\",\n    )\n    go_repository(\n        name = \"in_gopkg_cenkalti_backoff_v1\",\n        importpath = \"gopkg.in/cenkalti/backoff.v1\",\n        sum = \"h1:Arh75ttbsvlpVA7WtVpH4u9h6Zl46xuptxqLxPiSo4Y=\",\n        version = \"v1.1.0\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_check_v1\",\n        importpath = \"gopkg.in/check.v1\",\n        sum = \"h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\",\n        version = \"v1.0.0-20200227125254-8fa46927fb4f\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_fsnotify_v1\",\n        importpath = \"gopkg.in/fsnotify.v1\",\n        sum = \"h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=\",\n        version = \"v1.4.7\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_inf_v0\",\n        importpath = \"gopkg.in/inf.v0\",\n        sum = \"h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\",\n        version = \"v0.9.1\",\n    )\n    go_repository(\n        name = \"in_gopkg_ini_v1\",\n        importpath = \"gopkg.in/ini.v1\",\n        sum = \"h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\",\n        version = \"v1.67.0\",\n    )\n    go_repository(\n        name = \"in_gopkg_olivere_elastic_v5\",\n        importpath = \"gopkg.in/olivere/elastic.v5\",\n        sum = \"h1:xFy6qRCGAmo5Wjx96srho9BitLhZl2fcnpuidPwduXM=\",\n        version = \"v5.0.86\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_sourcemap_v1\",\n        importpath = \"gopkg.in/sourcemap.v1\",\n        sum = \"h1:inv58fC9f9J3TK2Y2R1NPntXEn3/wjWHkonhIUODNTI=\",\n        version = \"v1.0.5\",\n    )\n    go_repository(\n        name = \"in_gopkg_src_d_go_billy_v4\",\n        importpath = \"gopkg.in/src-d/go-billy.v4\",\n        sum = \"h1:0SQA1pRztfTFx2miS8sA97XvooFeNOmvUenF4o0EcVg=\",\n        version = \"v4.3.2\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_src_d_go_git_v4\",\n        importpath = \"gopkg.in/src-d/go-git.v4\",\n        sum = \"h1:SRtFyV8Kxc0UP7aCHcijOMQGPxHSmMOPrzulQWolkYE=\",\n        version = \"v4.13.1\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_warnings_v0\",\n        importpath = \"gopkg.in/warnings.v0\",\n        sum = \"h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\",\n        version = \"v0.1.2\",\n    )\n\n    go_repository(\n        name = \"in_gopkg_yaml_v2\",\n        importpath = \"gopkg.in/yaml.v2\",\n        sum = \"h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\",\n        version = \"v2.4.0\",\n    )\n    go_repository(\n        name = \"in_gopkg_yaml_v3\",\n        importpath = \"gopkg.in/yaml.v3\",\n        sum = \"h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\",\n        version = \"v3.0.1\",\n    )\n\n    go_repository(\n        name = \"io_k8s_api\",\n        importpath = \"k8s.io/api\",\n        sum = \"h1:HV4VjUSd7dTbKpop+1klDpRrLnXwN67oB0B+8abaH1k=\",\n        version = \"v0.22.12\",\n    )\n    go_repository(\n        name = \"io_k8s_apimachinery\",\n        importpath = \"k8s.io/apimachinery\",\n        sum = \"h1:yTZH8GEKWVm1/zpcBzbPBSxJ/kVlP1GDL75IFEnjOqw=\",\n        version = \"v0.22.12\",\n    )\n\n    go_repository(\n        name = \"io_k8s_client_go\",\n        importpath = \"k8s.io/client-go\",\n        sum = \"h1:bzrRaanClLWgWSTH4rXFneXoiaXN4HepjIBlCZdfdqs=\",\n        version = \"v0.22.12\",\n    )\n\n    go_repository(\n        name = \"io_k8s_klog_v2\",\n        importpath = \"k8s.io/klog/v2\",\n        sum = \"h1:U/Af64HJf7FcwMcXyKm2RPM22WZzyR7OSpYj5tg3cL0=\",\n        version = \"v2.110.1\",\n    )\n\n    go_repository(\n        name = \"io_k8s_kubectl\",\n        importpath = \"k8s.io/kubectl\",\n        sum = \"h1:DGC1afNdCcL8hEuFguBjL+R1sqbByFc8nCXoPdSQo1I=\",\n        version = \"v0.22.12\",\n    )\n\n    go_repository(\n        name = \"io_k8s_sigs_structured_merge_diff_v4\",\n        importpath = \"sigs.k8s.io/structured-merge-diff/v4\",\n        sum = \"h1:bKCqE9GvQ5tiVHn5rfn1r+yao3aLQEaLzkkmAkf+A6Y=\",\n        version = \"v4.2.1\",\n    )\n    go_repository(\n        name = \"io_k8s_sigs_yaml\",\n        importpath = \"sigs.k8s.io/yaml\",\n        sum = \"h1:kr/MCeFWJWTwyaHoR9c8EjH9OumOmoF9YGiZd7lFm/Q=\",\n        version = \"v1.2.0\",\n    )\n    go_repository(\n        name = \"io_k8s_utils\",\n        importpath = \"k8s.io/utils\",\n        sum = \"h1:ck1fRPWPJWsMd8ZRFsWc6mh/zHp5fZ/shhbrgPUxDAE=\",\n        version = \"v0.0.0-20211116205334-6203023598ed\",\n    )\n\n    go_repository(\n        name = \"io_opencensus_go\",\n        importpath = \"go.opencensus.io\",\n        sum = \"h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\",\n        version = \"v0.24.0\",\n    )\n    go_repository(\n        name = \"io_opencensus_go_contrib_exporter_stackdriver\",\n        importpath = \"contrib.go.opencensus.io/exporter/stackdriver\",\n        sum = \"h1:ksUxwH3OD5sxkjzEqGxNTl+Xjsmu3BnC/300MhSVTSc=\",\n        version = \"v0.13.4\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_contrib_detectors_gcp\",\n        importpath = \"go.opentelemetry.io/contrib/detectors/gcp\",\n        sum = \"h1:VLAa8mb2eMu2Iq9pnVhece0Yla2mIq1yKYLUoZ/ifJs=\",\n        version = \"v1.21.1\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc\",\n        importpath = \"go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc\",\n        sum = \"h1:UNQQKPfTDe1J81ViolILjTKPr9WetKW6uei2hFgJmFs=\",\n        version = \"v0.47.0\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_contrib_instrumentation_net_http_httptrace_otelhttptrace\",\n        importpath = \"go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace\",\n        sum = \"h1:gbhw/u49SS3gkPWiYweQNJGm/uJN5GkI/FrosxSHT7A=\",\n        version = \"v0.46.1\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_contrib_instrumentation_net_http_otelhttp\",\n        importpath = \"go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp\",\n        sum = \"h1:sv9kVfal0MK0wBMCOGr+HeJm9v803BkJxGrk2au7j08=\",\n        version = \"v0.47.0\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_otel\",\n        importpath = \"go.opentelemetry.io/otel\",\n        sum = \"h1:xS7Ku+7yTFvDfDraDIJVpw7XPyuHlB9MCiqqX5mcJ6Y=\",\n        version = \"v1.22.0\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_otel_metric\",\n        importpath = \"go.opentelemetry.io/otel/metric\",\n        sum = \"h1:lypMQnGyJYeuYPhOM/bgjbFM6WE44W1/T45er4d8Hhg=\",\n        version = \"v1.22.0\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_otel_sdk\",\n        importpath = \"go.opentelemetry.io/otel/sdk\",\n        sum = \"h1:FTt8qirL1EysG6sTQRZ5TokkU8d0ugCj8htOgThZXQ8=\",\n        version = \"v1.21.0\",\n    )\n    go_repository(\n        name = \"io_opentelemetry_go_otel_trace\",\n        importpath = \"go.opentelemetry.io/otel/trace\",\n        sum = \"h1:Hg6pPujv0XG9QaVbGOBVHunyuLcCC3jN7WEhPx83XD0=\",\n        version = \"v1.22.0\",\n    )\n    go_repository(\n        name = \"io_temporal_go_api\",\n        importpath = \"go.temporal.io/api\",\n        sum = \"h1:X3KVICazpVq1CI+La+6MgeQpnQtyUUUtUBo9V4TPjcE=\",\n        version = \"v1.26.2\",\n    )\n    go_repository(\n        name = \"io_temporal_go_sdk\",\n        importpath = \"go.temporal.io/sdk\",\n        sum = \"h1:Cqyujbnt831agvkiFrJwZHVWT52kAUy4m2XyUsQpjZE=\",\n        version = \"v1.25.2-0.20240108215803-6244097c5aca\",\n    )\n\n    go_repository(\n        name = \"net_howett_plist\",\n        importpath = \"howett.net/plist\",\n        sum = \"h1:7CrbWYbPPO/PyNy38b2EB/+gYbjCe2DXBxgtOOZbSQM=\",\n        version = \"v1.0.0\",\n    )\n    go_repository(\n        name = \"net_starlark_go\",\n        importpath = \"go.starlark.net\",\n        sum = \"h1:FlKSIJl+UmVFgpyCr4Bdmj443NNBDW5ZSDP/HciJ96g=\",\n        version = \"v0.0.0-20230807144010-2aa75752d1da\",\n    )\n\n    go_repository(\n        name = \"org_chromium_go_luci\",\n        # This module is distributed with pre-generated .pb.go files, so we disable generation of\n        # go_proto_library targets.\n        build_file_proto_mode = \"disable\",\n        importpath = \"go.chromium.org/luci\",\n        sum = \"h1:JJNTpSU1X9ClKbBtSk4dw6TH9w4hbDkQIpPhPEGp6lw=\",\n        version = \"v0.0.0-20240206071351-fb32c458db6e\",\n    )\n\n    go_repository(\n        name = \"org_golang_google_api\",\n        importpath = \"google.golang.org/api\",\n        sum = \"h1:SEspjXHVqE1m5a1fRy8JFB+5jSu+V0GEDKDghF3ttO4=\",\n        version = \"v0.160.0\",\n    )\n    go_repository(\n        name = \"org_golang_google_appengine\",\n        importpath = \"google.golang.org/appengine\",\n        sum = \"h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\",\n        version = \"v1.6.8\",\n    )\n    go_repository(\n        name = \"org_golang_google_genproto\",\n        importpath = \"google.golang.org/genproto\",\n        sum = \"h1:ZL/Teoy/ZGnzyrqK/Optxxp2pmVh+fmJ97slxSRyzUg=\",\n        version = \"v0.0.0-20240116215550-a9fa1716bcac\",\n    )\n    go_repository(\n        name = \"org_golang_google_genproto_googleapis_api\",\n        importpath = \"google.golang.org/genproto/googleapis/api\",\n        sum = \"h1:0poefMBYvYbs7g5UkjS6HcxBPaTRAmznle9jnxYoAI8=\",\n        version = \"v0.0.0-20240125205218-1f4bbc51befe\",\n    )\n    go_repository(\n        name = \"org_golang_google_genproto_googleapis_bytestream\",\n        importpath = \"google.golang.org/genproto/googleapis/bytestream\",\n        sum = \"h1:QXtV4qU5zS94SeHJhPqxJQF0XyxssnVrEZOUgp1+NuY=\",\n        version = \"v0.0.0-20240116215550-a9fa1716bcac\",\n    )\n    go_repository(\n        name = \"org_golang_google_genproto_googleapis_rpc\",\n        importpath = \"google.golang.org/genproto/googleapis/rpc\",\n        sum = \"h1:nUQEQmH/csSvFECKYRv6HWEyypysidKl2I6Qpsglq/0=\",\n        version = \"v0.0.0-20240116215550-a9fa1716bcac\",\n    )\n\n    go_repository(\n        name = \"org_golang_google_grpc\",\n        importpath = \"google.golang.org/grpc\",\n        sum = \"h1:TOvOcuXn30kRao+gfcvsebNEa5iZIiLkisYEkf7R7o0=\",\n        version = \"v1.61.0\",\n    )\n    go_repository(\n        name = \"org_golang_google_grpc_cmd_protoc_gen_go_grpc\",\n        importpath = \"google.golang.org/grpc/cmd/protoc-gen-go-grpc\",\n        sum = \"h1:rNBFJjBCOgVr9pWD7rs/knKL4FRTKgpZmsRfV214zcA=\",\n        version = \"v1.3.0\",\n    )\n\n    go_repository(\n        name = \"org_golang_google_protobuf\",\n        importpath = \"google.golang.org/protobuf\",\n        sum = \"h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=\",\n        version = \"v1.32.0\",\n    )\n\n    go_repository(\n        name = \"org_golang_x_crypto\",\n        importpath = \"golang.org/x/crypto\",\n        sum = \"h1:jmAMJJZXr5KiCw05dfYK9QnqaqKLYXijU23lsEdcQqg=\",\n        version = \"v0.20.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_exp\",\n        importpath = \"golang.org/x/exp\",\n        sum = \"h1:Gvh4YaCaXNs6dKTlfgismwWZKyjVZXwOPfIyUaqU3No=\",\n        version = \"v0.0.0-20231127185646-65229373498e\",\n    )\n\n    go_repository(\n        name = \"org_golang_x_lint\",\n        importpath = \"golang.org/x/lint\",\n        sum = \"h1:VLliZ0d+/avPrXXH+OakdXhpJuEoBZuwh1m2j7U6Iug=\",\n        version = \"v0.0.0-20210508222113-6edffad5e616\",\n    )\n\n    go_repository(\n        name = \"org_golang_x_mod\",\n        importpath = \"golang.org/x/mod\",\n        sum = \"h1:dGoOF9QVLYng8IHTm7BAyWqCqSheQ5pYWGhzW00YJr0=\",\n        version = \"v0.14.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_net\",\n        importpath = \"golang.org/x/net\",\n        sum = \"h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=\",\n        version = \"v0.21.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_oauth2\",\n        importpath = \"golang.org/x/oauth2\",\n        sum = \"h1:aDkGMBSYxElaoP81NpoUoz2oo2R2wHdZpGToUxfyQrQ=\",\n        version = \"v0.16.0\",\n    )\n\n    go_repository(\n        name = \"org_golang_x_sync\",\n        importpath = \"golang.org/x/sync\",\n        sum = \"h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\",\n        version = \"v0.6.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_sys\",\n        importpath = \"golang.org/x/sys\",\n        sum = \"h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=\",\n        version = \"v0.17.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_term\",\n        importpath = \"golang.org/x/term\",\n        sum = \"h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=\",\n        version = \"v0.17.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_text\",\n        importpath = \"golang.org/x/text\",\n        sum = \"h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\",\n        version = \"v0.14.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_time\",\n        importpath = \"golang.org/x/time\",\n        sum = \"h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\",\n        version = \"v0.5.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_tools\",\n        importpath = \"golang.org/x/tools\",\n        sum = \"h1:GO788SKMRunPIBCXiQyo2AaexLstOrVhuAL5YwsckQM=\",\n        version = \"v0.16.0\",\n    )\n    go_repository(\n        name = \"org_golang_x_tools_go_vcs\",\n        importpath = \"golang.org/x/tools/go/vcs\",\n        sum = \"h1:cOIJqWBl99H1dH5LWizPa+0ImeeJq3t3cJjaeOWUAL4=\",\n        version = \"v0.1.0-deprecated\",\n    )\n\n    go_repository(\n        name = \"org_golang_x_xerrors\",\n        importpath = \"golang.org/x/xerrors\",\n        sum = \"h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=\",\n        version = \"v0.0.0-20220907171357-04be3eba64a2\",\n    )\n    go_repository(\n        name = \"org_gonum_v1_gonum\",\n        importpath = \"gonum.org/v1/gonum\",\n        sum = \"h1:xKuo6hzt+gMav00meVPUlXwSdoEJP46BR+wdxQEFK2o=\",\n        version = \"v0.12.0\",\n    )\n\n    go_repository(\n        name = \"org_skia_go_infra\",\n        importpath = \"go.skia.org/infra\",\n        sum = \"h1:8NM85RhBYdX/UrxSQaindQ1Cn4l3zs8RSr4JLrCi5PE=\",\n        version = \"v0.0.0-20250109232601-c67b4fc704ca\",\n    )\n    go_repository(\n        name = \"org_uber_go_atomic\",\n        importpath = \"go.uber.org/atomic\",\n        sum = \"h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=\",\n        version = \"v1.9.0\",\n    )\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 71.41796875,
          "content": "{\n  \"name\": \"skia\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"devDependencies\": {\n        \"jasmine-core\": \"3.10.1\",\n        \"karma\": \"6.3.15\",\n        \"karma-chrome-launcher\": \"3.1.0\",\n        \"karma-firefox-launcher\": \"2.1.2\",\n        \"karma-jasmine\": \"4.0.1\"\n      }\n    },\n    \"node_modules/@socket.io/base64-arraybuffer\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha512-dOlCBKnDw4iShaIsH/bxujKTM18+2TOAsYz+KSc11Am38H4q5Xw8Bbz97ZYdrVNM+um3p7w86Bvvmcn9q+5+eQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/@types/component-emitter\": {\n      \"version\": \"1.2.11\",\n      \"integrity\": \"sha512-SRXjM+tfsSlA9VuG8hGO2nft2p8zjXCK1VcC6N4NXbBbYbSia9kzCChYQajIjzIqOOOuh5Ock6MmV2oux4jDZQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/cookie\": {\n      \"version\": \"0.4.1\",\n      \"integrity\": \"sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/cors\": {\n      \"version\": \"2.8.12\",\n      \"integrity\": \"sha512-vt+kDhq/M2ayberEtJcIN/hxXy1Pk+59g2FV/ZQceeaTyCtCucjL2Q7FXlFjtWn4n15KCr1NE2lNNFhp0lEThw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"10.17.60\",\n      \"integrity\": \"sha512-F0KIgDJfy2nA3zMLmWGKxcH2ZVEtCZXHHdOQs2gSaQ27+lNeEfGxzkIw90aXswATX7AZ33tahPbzy6KAfUreVw==\",\n      \"dev\": true\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.2\",\n      \"integrity\": \"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/base64id\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^4.5.0 || >= 5.9\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.19.1\",\n      \"integrity\": \"sha512-8ljfQi5eBk8EJfECMrgqNGWPEY5jWP+1IzkzkGdFFEwFQZZyaZ21UqdaHktgiMlH0xLHqIFtE/u2OYE5dOtViA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bytes\": \"3.1.1\",\n        \"content-type\": \"~1.0.4\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"~1.1.2\",\n        \"http-errors\": \"1.8.1\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"~2.3.0\",\n        \"qs\": \"6.9.6\",\n        \"raw-body\": \"2.4.2\",\n        \"type-is\": \"~1.6.18\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.1\",\n      \"integrity\": \"sha512-dWe4nWO/ruEOY7HkUJ5gFt1DCFV9zPRoJr8pV0/ASQermOZjtq8jMjOprC0Kd10GLN+l7xaUPvxzJFWtxGu8Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/colors\": {\n      \"version\": \"1.4.0\",\n      \"integrity\": \"sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/component-emitter\": {\n      \"version\": \"1.3.0\",\n      \"integrity\": \"sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==\",\n      \"dev\": true\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\n      \"dev\": true\n    },\n    \"node_modules/connect\": {\n      \"version\": \"3.7.0\",\n      \"integrity\": \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"finalhandler\": \"1.1.2\",\n        \"parseurl\": \"~1.3.3\",\n        \"utils-merge\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.4\",\n      \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.4.2\",\n      \"integrity\": \"sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cors\": {\n      \"version\": \"2.8.5\",\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"object-assign\": \"^4\",\n        \"vary\": \"^1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/custom-event\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-XQKkaFCt8bSjF5RqOSj8y1v9BCU=\",\n      \"dev\": true\n    },\n    \"node_modules/date-format\": {\n      \"version\": \"4.0.3\",\n      \"integrity\": \"sha512-7P3FyqDcfeznLZp2b+OMitV9Sz2lUnsT87WaTat9nVwqsBkTzPG3lPLNwW3en6F4pHUiWzr6vb8CLhjdK9bcxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/di\": {\n      \"version\": \"0.0.1\",\n      \"integrity\": \"sha1-gGZJMmzqp8qjMG112YXqJ0i6kTw=\",\n      \"dev\": true\n    },\n    \"node_modules/dom-serialize\": {\n      \"version\": \"2.2.1\",\n      \"integrity\": \"sha1-ViromZ9Evl6jB29UGdzVnrQ6yVs=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"custom-event\": \"~1.0.0\",\n        \"ent\": \"~2.2.0\",\n        \"extend\": \"^3.0.0\",\n        \"void-elements\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",\n      \"dev\": true\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/engine.io\": {\n      \"version\": \"6.1.2\",\n      \"integrity\": \"sha512-v/7eGHxPvO2AWsksyx2PUsQvBafuvqs0jJJQ0FdmJG1b9qIvgSbqDRGwNhfk2XHaTTbTXiC4quRE8Q9nRjsrQQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/cookie\": \"^0.4.1\",\n        \"@types/cors\": \"^2.8.12\",\n        \"@types/node\": \">=10.0.0\",\n        \"accepts\": \"~1.3.4\",\n        \"base64id\": \"2.0.0\",\n        \"cookie\": \"~0.4.1\",\n        \"cors\": \"~2.8.5\",\n        \"debug\": \"~4.3.1\",\n        \"engine.io-parser\": \"~5.0.0\",\n        \"ws\": \"~8.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/engine.io-parser\": {\n      \"version\": \"5.0.3\",\n      \"integrity\": \"sha512-BtQxwF27XUNnSafQLvDi0dQ8s3i6VgzSoQMJacpIcGNrlUdfHSKbgm3jmjCVvQluGzqwujQMPAoMai3oYSTurg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@socket.io/base64-arraybuffer\": \"~1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/engine.io/node_modules/debug\": {\n      \"version\": \"4.3.3\",\n      \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/engine.io/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/ent\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha1-6WQhkyWiHQX0RGai9obtbOX13R0=\",\n      \"dev\": true\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\",\n      \"dev\": true\n    },\n    \"node_modules/eventemitter3\": {\n      \"version\": \"4.0.7\",\n      \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n      \"dev\": true\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"dev\": true\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"~2.3.0\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"~1.5.0\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.5\",\n      \"integrity\": \"sha512-WIWGi2L3DyTUvUrwRKgGi9TwxQMUEqPOPQBVi71R96jZXJdFskXEmf54BoZaS1kknGODoIGASGEzBUYdyMCBJg==\",\n      \"dev\": true\n    },\n    \"node_modules/follow-redirects\": {\n      \"version\": \"1.15.5\",\n      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.5.tgz\",\n      \"integrity\": \"sha512-vSFWUON1B+yAw1VN4xMfxgn5fTUiaOzAJCKBwIIgT/+7CuGy9+r+5gITvP62j3RmaD5Ph65UaERdOSRGUzZtgw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/RubenVerborgh\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=4.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"debug\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"10.0.0\",\n      \"integrity\": \"sha512-C5owb14u9eJwizKGdchcDUQeFtlSHHthBk8pbX9Vc1PFZrLombudjDnNns88aYslCyF6IY5SUw3Roz6xShcEIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n      \"dev\": true\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.0\",\n      \"integrity\": \"sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.9\",\n      \"integrity\": \"sha512-NtNxqUcXgpW2iMrfqSfR73Glt39K+BLwWsPs94yR63v45T0Wbej7eRmL5cWfwEgqXnmjQp3zaJTshdRW/qC2ZQ==\",\n      \"dev\": true\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"1.8.1\",\n      \"integrity\": \"sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"depd\": \"~1.1.2\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \">= 1.5.0 < 2\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/http-proxy\": {\n      \"version\": \"1.18.1\",\n      \"integrity\": \"sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eventemitter3\": \"^4.0.0\",\n        \"follow-redirects\": \"^1.0.0\",\n        \"requires-port\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-docker\": {\n      \"version\": \"2.2.1\",\n      \"integrity\": \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"is-docker\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"integrity\": \"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-wsl\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-docker\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/isbinaryfile\": {\n      \"version\": \"4.0.8\",\n      \"integrity\": \"sha512-53h6XFniq77YdW+spoRrebh0mnmTxRPTlcuIArO57lmMdq4uBKFKaeTjnb92oYWrSn/LVL+LT+Hap2tFQj8V+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/gjtorikian/\"\n      }\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n      \"dev\": true\n    },\n    \"node_modules/jasmine-core\": {\n      \"version\": \"3.10.1\",\n      \"integrity\": \"sha512-ooZWSDVAdh79Rrj4/nnfklL3NQVra0BcuhcuWoAwwi+znLDoUeH87AFfeX8s+YeYi6xlv5nveRyaA1v7CintfA==\",\n      \"dev\": true\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/karma\": {\n      \"version\": \"6.3.15\",\n      \"integrity\": \"sha512-4O5X6zVFdmwo/fgjRN84fPG3IvaiOxOjIeZBwBrQYz4nIyGqlF8Wm7C1Hr7idQ9NHgnvJM+LSjZwS1C+qALMGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"body-parser\": \"^1.19.0\",\n        \"braces\": \"^3.0.2\",\n        \"chokidar\": \"^3.5.1\",\n        \"colors\": \"1.4.0\",\n        \"connect\": \"^3.7.0\",\n        \"di\": \"^0.0.1\",\n        \"dom-serialize\": \"^2.2.1\",\n        \"glob\": \"^7.1.7\",\n        \"graceful-fs\": \"^4.2.6\",\n        \"http-proxy\": \"^1.18.1\",\n        \"isbinaryfile\": \"^4.0.8\",\n        \"lodash\": \"^4.17.21\",\n        \"log4js\": \"^6.4.1\",\n        \"mime\": \"^2.5.2\",\n        \"minimatch\": \"^3.0.4\",\n        \"mkdirp\": \"^0.5.5\",\n        \"qjobs\": \"^1.2.0\",\n        \"range-parser\": \"^1.2.1\",\n        \"rimraf\": \"^3.0.2\",\n        \"socket.io\": \"^4.2.0\",\n        \"source-map\": \"^0.6.1\",\n        \"tmp\": \"^0.2.1\",\n        \"ua-parser-js\": \"^0.7.30\",\n        \"yargs\": \"^16.1.1\"\n      },\n      \"bin\": {\n        \"karma\": \"bin/karma\"\n      },\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/karma-chrome-launcher\": {\n      \"version\": \"3.1.0\",\n      \"integrity\": \"sha512-3dPs/n7vgz1rxxtynpzZTvb9y/GIaW8xjAwcIGttLbycqoFtI7yo1NGnQi6oFTherRE+GIhCAHZC4vEqWGhNvg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"which\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/karma-firefox-launcher\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-VV9xDQU1QIboTrjtGVD4NCfzIH7n01ZXqy/qpBhnOeGVOkG5JYPEm8kuSd7psHE6WouZaQ9Ool92g8LFweSNMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-wsl\": \"^2.2.0\",\n        \"which\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/karma-firefox-launcher/node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/karma-jasmine\": {\n      \"version\": \"4.0.1\",\n      \"integrity\": \"sha512-h8XDAhTiZjJKzfkoO1laMH+zfNlra+dEQHUAjpn5JV1zCPtOIVWGQjLBrqhnzQa/hrU2XrZwSyBa6XjEBzfXzw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jasmine-core\": \"^3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10\"\n      },\n      \"peerDependencies\": {\n        \"karma\": \"*\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/log4js\": {\n      \"version\": \"6.4.1\",\n      \"integrity\": \"sha512-iUiYnXqAmNKiIZ1XSAitQ4TmNs8CdZYTAWINARF3LjnsLN8tY5m0vRwd6uuWj/yNY0YHxeZodnbmxKFUOM2rMg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"date-format\": \"^4.0.3\",\n        \"debug\": \"^4.3.3\",\n        \"flatted\": \"^3.2.4\",\n        \"rfdc\": \"^1.3.0\",\n        \"streamroller\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/log4js/node_modules/debug\": {\n      \"version\": \"4.3.3\",\n      \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/log4js/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"2.6.0\",\n      \"integrity\": \"sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.51.0\",\n      \"integrity\": \"sha512-5y8A56jg7XVQx2mbv1lu49NR4dokRnhZYTtL+KGfaa27uq4pSTXkwQkFJl4pkRMyNFz/EtYDSkiiEHx3F7UN6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.34\",\n      \"integrity\": \"sha512-6cP692WwGIs9XXdOO4++N+7qjqv0rqxxVvJ3VHPh/Sc9mVZcQP+ZGhkKiTvWMQRr2tbHkJP/Yn7Y0npb3ZBs4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \"1.51.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.0.5\",\n      \"integrity\": \"sha512-tUpxzX0VAzJHjLu0xUfFv1gwVp9ba3IOuRAVH2EGuRW8a5emA2FlACLqiT/lDVtS1W+TGNwqz3sWaNyLgDJWuw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.5\",\n      \"integrity\": \"sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\",\n      \"dev\": true\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.5\",\n      \"integrity\": \"sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.5\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",\n      \"dev\": true\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.3.0\",\n      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/qjobs\": {\n      \"version\": \"1.2.0\",\n      \"integrity\": \"sha512-8YOJEHtxpySA3fFDyCRxA+UUV+fA+rTWnuWvylOK/NCjhY+b4ocCtmu8TtsWb+mYeU+GCHf/S66KZF/AsteKHg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.9\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.9.6\",\n      \"integrity\": \"sha512-TIRk4aqYLNoJUbd+g2lEdz5kLWIuTMRagAXxl78Q0RiVjAOugHmeKNGdd3cwo/ktpf9aL9epCfFqWDEKysUlLQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.4.2\",\n      \"integrity\": \"sha512-RPMAFUJP19WIet/99ngh6Iv8fzAbqum4Li7AD6DtGaW2RpMB/11xDoalPiJMTbu6I3hkbMVkATvZrqb9EEqeeQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bytes\": \"3.1.1\",\n        \"http-errors\": \"1.8.1\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/requires-port\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=\",\n      \"dev\": true\n    },\n    \"node_modules/rfdc\": {\n      \"version\": \"1.3.0\",\n      \"integrity\": \"sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA==\",\n      \"dev\": true\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"dev\": true\n    },\n    \"node_modules/socket.io\": {\n      \"version\": \"4.4.1\",\n      \"integrity\": \"sha512-s04vrBswdQBUmuWJuuNTmXUVJhP0cVky8bBDhdkf8y0Ptsu7fKU2LuLbts9g+pdmAdyMMn8F/9Mf1/wbtUN0fg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"accepts\": \"~1.3.4\",\n        \"base64id\": \"~2.0.0\",\n        \"debug\": \"~4.3.2\",\n        \"engine.io\": \"~6.1.0\",\n        \"socket.io-adapter\": \"~2.3.3\",\n        \"socket.io-parser\": \"~4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/socket.io-adapter\": {\n      \"version\": \"2.3.3\",\n      \"integrity\": \"sha512-Qd/iwn3VskrpNO60BeRyCyr8ZWw9CPZyitW4AQwmRZ8zCiyDiL+znRnWX6tDHXnWn1sJrM1+b6Mn6wEDJJ4aYQ==\",\n      \"dev\": true\n    },\n    \"node_modules/socket.io-parser\": {\n      \"version\": \"4.0.4\",\n      \"integrity\": \"sha512-t+b0SS+IxG7Rxzda2EVvyBZbvFPBCjJoyHuE0P//7OAsN23GItzDRdWa6ALxZI/8R5ygK7jAR6t028/z+7295g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/component-emitter\": \"^1.2.10\",\n        \"component-emitter\": \"~1.3.0\",\n        \"debug\": \"~4.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/socket.io-parser/node_modules/debug\": {\n      \"version\": \"4.3.3\",\n      \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/socket.io-parser/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/socket.io/node_modules/debug\": {\n      \"version\": \"4.3.3\",\n      \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/socket.io/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"1.5.0\",\n      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/streamroller\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-ur6y5S5dopOaRXBuRIZ1u6GC5bcEXHRZKgfBjfCglMhmIf+roVCECjvkEYzNQOXIN2/JPnkMPW/8B3CZoKaEPA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"date-format\": \"^4.0.3\",\n        \"debug\": \"^4.1.1\",\n        \"fs-extra\": \"^10.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/streamroller/node_modules/debug\": {\n      \"version\": \"4.3.3\",\n      \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/streamroller/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.2.1\",\n      \"integrity\": \"sha512-76SUhtfqR2Ijn+xllcI5P1oyannHNHByD80W1q447gU3mp9G9PSpGdWmjUOHRDPiHYacIk66W7ubDTuPF3BEtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"rimraf\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.17.0\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/ua-parser-js\": {\n      \"version\": \"0.7.34\",\n      \"resolved\": \"https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.34.tgz\",\n      \"integrity\": \"sha512-cJMeh/eOILyGu0ejgTKB95yKT3zOenSe9UGE3vj6WfiOwgGYnmATUsnDixMFvdU+rNMvWih83hrUP8VwhF9yXQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/ua-parser-js\"\n        },\n        {\n          \"type\": \"paypal\",\n          \"url\": \"https://paypal.me/faisalman\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/void-elements\": {\n      \"version\": \"2.0.1\",\n      \"integrity\": \"sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"1.3.1\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"which\": \"bin/which\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",\n      \"dev\": true\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.2.3\",\n      \"integrity\": \"sha512-wBuoj1BDpC6ZQ1B7DWQBYVLphPWkm8i9Y0/3YdHjHKHiohOJ1ws+3OccDWtH+PoC9DZD5WOTrJvNbWvjS6JWaA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \"^5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"integrity\": \"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@socket.io/base64-arraybuffer\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha512-dOlCBKnDw4iShaIsH/bxujKTM18+2TOAsYz+KSc11Am38H4q5Xw8Bbz97ZYdrVNM+um3p7w86Bvvmcn9q+5+eQ==\",\n      \"dev\": true\n    },\n    \"@types/component-emitter\": {\n      \"version\": \"1.2.11\",\n      \"integrity\": \"sha512-SRXjM+tfsSlA9VuG8hGO2nft2p8zjXCK1VcC6N4NXbBbYbSia9kzCChYQajIjzIqOOOuh5Ock6MmV2oux4jDZQ==\",\n      \"dev\": true\n    },\n    \"@types/cookie\": {\n      \"version\": \"0.4.1\",\n      \"integrity\": \"sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q==\",\n      \"dev\": true\n    },\n    \"@types/cors\": {\n      \"version\": \"2.8.12\",\n      \"integrity\": \"sha512-vt+kDhq/M2ayberEtJcIN/hxXy1Pk+59g2FV/ZQceeaTyCtCucjL2Q7FXlFjtWn4n15KCr1NE2lNNFhp0lEThw==\",\n      \"dev\": true\n    },\n    \"@types/node\": {\n      \"version\": \"10.17.60\",\n      \"integrity\": \"sha512-F0KIgDJfy2nA3zMLmWGKxcH2ZVEtCZXHHdOQs2gSaQ27+lNeEfGxzkIw90aXswATX7AZ33tahPbzy6KAfUreVw==\",\n      \"dev\": true\n    },\n    \"accepts\": {\n      \"version\": \"1.3.8\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.2\",\n      \"integrity\": \"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"base64id\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true\n    },\n    \"body-parser\": {\n      \"version\": \"1.19.1\",\n      \"integrity\": \"sha512-8ljfQi5eBk8EJfECMrgqNGWPEY5jWP+1IzkzkGdFFEwFQZZyaZ21UqdaHktgiMlH0xLHqIFtE/u2OYE5dOtViA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bytes\": \"3.1.1\",\n        \"content-type\": \"~1.0.4\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"~1.1.2\",\n        \"http-errors\": \"1.8.1\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"~2.3.0\",\n        \"qs\": \"6.9.6\",\n        \"raw-body\": \"2.4.2\",\n        \"type-is\": \"~1.6.18\"\n      }\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.0.1\"\n      }\n    },\n    \"bytes\": {\n      \"version\": \"3.1.1\",\n      \"integrity\": \"sha512-dWe4nWO/ruEOY7HkUJ5gFt1DCFV9zPRoJr8pV0/ASQermOZjtq8jMjOprC0Kd10GLN+l7xaUPvxzJFWtxGu8Fg==\",\n      \"dev\": true\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"7.0.4\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"colors\": {\n      \"version\": \"1.4.0\",\n      \"integrity\": \"sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\",\n      \"dev\": true\n    },\n    \"component-emitter\": {\n      \"version\": \"1.3.0\",\n      \"integrity\": \"sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\n      \"dev\": true\n    },\n    \"connect\": {\n      \"version\": \"3.7.0\",\n      \"integrity\": \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debug\": \"2.6.9\",\n        \"finalhandler\": \"1.1.2\",\n        \"parseurl\": \"~1.3.3\",\n        \"utils-merge\": \"1.0.1\"\n      }\n    },\n    \"content-type\": {\n      \"version\": \"1.0.4\",\n      \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\",\n      \"dev\": true\n    },\n    \"cookie\": {\n      \"version\": \"0.4.2\",\n      \"integrity\": \"sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==\",\n      \"dev\": true\n    },\n    \"cors\": {\n      \"version\": \"2.8.5\",\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"object-assign\": \"^4\",\n        \"vary\": \"^1\"\n      }\n    },\n    \"custom-event\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-XQKkaFCt8bSjF5RqOSj8y1v9BCU=\",\n      \"dev\": true\n    },\n    \"date-format\": {\n      \"version\": \"4.0.3\",\n      \"integrity\": \"sha512-7P3FyqDcfeznLZp2b+OMitV9Sz2lUnsT87WaTat9nVwqsBkTzPG3lPLNwW3en6F4pHUiWzr6vb8CLhjdK9bcxQ==\",\n      \"dev\": true\n    },\n    \"debug\": {\n      \"version\": \"2.6.9\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"depd\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\n      \"dev\": true\n    },\n    \"di\": {\n      \"version\": \"0.0.1\",\n      \"integrity\": \"sha1-gGZJMmzqp8qjMG112YXqJ0i6kTw=\",\n      \"dev\": true\n    },\n    \"dom-serialize\": {\n      \"version\": \"2.2.1\",\n      \"integrity\": \"sha1-ViromZ9Evl6jB29UGdzVnrQ6yVs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"custom-event\": \"~1.0.0\",\n        \"ent\": \"~2.2.0\",\n        \"extend\": \"^3.0.0\",\n        \"void-elements\": \"^2.0.0\"\n      }\n    },\n    \"ee-first\": {\n      \"version\": \"1.1.1\",\n      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",\n      \"dev\": true\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\n      \"dev\": true\n    },\n    \"engine.io\": {\n      \"version\": \"6.1.2\",\n      \"integrity\": \"sha512-v/7eGHxPvO2AWsksyx2PUsQvBafuvqs0jJJQ0FdmJG1b9qIvgSbqDRGwNhfk2XHaTTbTXiC4quRE8Q9nRjsrQQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/cookie\": \"^0.4.1\",\n        \"@types/cors\": \"^2.8.12\",\n        \"@types/node\": \">=10.0.0\",\n        \"accepts\": \"~1.3.4\",\n        \"base64id\": \"2.0.0\",\n        \"cookie\": \"~0.4.1\",\n        \"cors\": \"~2.8.5\",\n        \"debug\": \"~4.3.1\",\n        \"engine.io-parser\": \"~5.0.0\",\n        \"ws\": \"~8.2.3\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"4.3.3\",\n          \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.1.2\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"engine.io-parser\": {\n      \"version\": \"5.0.3\",\n      \"integrity\": \"sha512-BtQxwF27XUNnSafQLvDi0dQ8s3i6VgzSoQMJacpIcGNrlUdfHSKbgm3jmjCVvQluGzqwujQMPAoMai3oYSTurg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@socket.io/base64-arraybuffer\": \"~1.0.2\"\n      }\n    },\n    \"ent\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha1-6WQhkyWiHQX0RGai9obtbOX13R0=\",\n      \"dev\": true\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true\n    },\n    \"escape-html\": {\n      \"version\": \"1.0.3\",\n      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\",\n      \"dev\": true\n    },\n    \"eventemitter3\": {\n      \"version\": \"4.0.7\",\n      \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n      \"dev\": true\n    },\n    \"extend\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"dev\": true\n    },\n    \"fill-range\": {\n      \"version\": \"7.0.1\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"finalhandler\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"~2.3.0\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"~1.5.0\",\n        \"unpipe\": \"~1.0.0\"\n      }\n    },\n    \"flatted\": {\n      \"version\": \"3.2.5\",\n      \"integrity\": \"sha512-WIWGi2L3DyTUvUrwRKgGi9TwxQMUEqPOPQBVi71R96jZXJdFskXEmf54BoZaS1kknGODoIGASGEzBUYdyMCBJg==\",\n      \"dev\": true\n    },\n    \"follow-redirects\": {\n      \"version\": \"1.15.5\",\n      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.5.tgz\",\n      \"integrity\": \"sha512-vSFWUON1B+yAw1VN4xMfxgn5fTUiaOzAJCKBwIIgT/+7CuGy9+r+5gITvP62j3RmaD5Ph65UaERdOSRGUzZtgw==\",\n      \"dev\": true\n    },\n    \"fs-extra\": {\n      \"version\": \"10.0.0\",\n      \"integrity\": \"sha512-C5owb14u9eJwizKGdchcDUQeFtlSHHthBk8pbX9Vc1PFZrLombudjDnNns88aYslCyF6IY5SUw3Roz6xShcEIQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      }\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n      \"dev\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"glob\": {\n      \"version\": \"7.2.0\",\n      \"integrity\": \"sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.2.9\",\n      \"integrity\": \"sha512-NtNxqUcXgpW2iMrfqSfR73Glt39K+BLwWsPs94yR63v45T0Wbej7eRmL5cWfwEgqXnmjQp3zaJTshdRW/qC2ZQ==\",\n      \"dev\": true\n    },\n    \"http-errors\": {\n      \"version\": \"1.8.1\",\n      \"integrity\": \"sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"depd\": \"~1.1.2\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \">= 1.5.0 < 2\",\n        \"toidentifier\": \"1.0.1\"\n      }\n    },\n    \"http-proxy\": {\n      \"version\": \"1.18.1\",\n      \"integrity\": \"sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"eventemitter3\": \"^4.0.0\",\n        \"follow-redirects\": \"^1.0.0\",\n        \"requires-port\": \"^1.0.0\"\n      }\n    },\n    \"iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      }\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-docker\": {\n      \"version\": \"2.2.1\",\n      \"integrity\": \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\",\n      \"dev\": true\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"integrity\": \"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true\n    },\n    \"is-wsl\": {\n      \"version\": \"2.2.0\",\n      \"integrity\": \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-docker\": \"^2.0.0\"\n      }\n    },\n    \"isbinaryfile\": {\n      \"version\": \"4.0.8\",\n      \"integrity\": \"sha512-53h6XFniq77YdW+spoRrebh0mnmTxRPTlcuIArO57lmMdq4uBKFKaeTjnb92oYWrSn/LVL+LT+Hap2tFQj8V+w==\",\n      \"dev\": true\n    },\n    \"isexe\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n      \"dev\": true\n    },\n    \"jasmine-core\": {\n      \"version\": \"3.10.1\",\n      \"integrity\": \"sha512-ooZWSDVAdh79Rrj4/nnfklL3NQVra0BcuhcuWoAwwi+znLDoUeH87AFfeX8s+YeYi6xlv5nveRyaA1v7CintfA==\",\n      \"dev\": true\n    },\n    \"jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.6\",\n        \"universalify\": \"^2.0.0\"\n      }\n    },\n    \"karma\": {\n      \"version\": \"6.3.15\",\n      \"integrity\": \"sha512-4O5X6zVFdmwo/fgjRN84fPG3IvaiOxOjIeZBwBrQYz4nIyGqlF8Wm7C1Hr7idQ9NHgnvJM+LSjZwS1C+qALMGw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"body-parser\": \"^1.19.0\",\n        \"braces\": \"^3.0.2\",\n        \"chokidar\": \"^3.5.1\",\n        \"colors\": \"1.4.0\",\n        \"connect\": \"^3.7.0\",\n        \"di\": \"^0.0.1\",\n        \"dom-serialize\": \"^2.2.1\",\n        \"glob\": \"^7.1.7\",\n        \"graceful-fs\": \"^4.2.6\",\n        \"http-proxy\": \"^1.18.1\",\n        \"isbinaryfile\": \"^4.0.8\",\n        \"lodash\": \"^4.17.21\",\n        \"log4js\": \"^6.4.1\",\n        \"mime\": \"^2.5.2\",\n        \"minimatch\": \"^3.0.4\",\n        \"mkdirp\": \"^0.5.5\",\n        \"qjobs\": \"^1.2.0\",\n        \"range-parser\": \"^1.2.1\",\n        \"rimraf\": \"^3.0.2\",\n        \"socket.io\": \"^4.2.0\",\n        \"source-map\": \"^0.6.1\",\n        \"tmp\": \"^0.2.1\",\n        \"ua-parser-js\": \"^0.7.30\",\n        \"yargs\": \"^16.1.1\"\n      }\n    },\n    \"karma-chrome-launcher\": {\n      \"version\": \"3.1.0\",\n      \"integrity\": \"sha512-3dPs/n7vgz1rxxtynpzZTvb9y/GIaW8xjAwcIGttLbycqoFtI7yo1NGnQi6oFTherRE+GIhCAHZC4vEqWGhNvg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"which\": \"^1.2.1\"\n      }\n    },\n    \"karma-firefox-launcher\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-VV9xDQU1QIboTrjtGVD4NCfzIH7n01ZXqy/qpBhnOeGVOkG5JYPEm8kuSd7psHE6WouZaQ9Ool92g8LFweSNMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-wsl\": \"^2.2.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"dependencies\": {\n        \"which\": {\n          \"version\": \"2.0.2\",\n          \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"isexe\": \"^2.0.0\"\n          }\n        }\n      }\n    },\n    \"karma-jasmine\": {\n      \"version\": \"4.0.1\",\n      \"integrity\": \"sha512-h8XDAhTiZjJKzfkoO1laMH+zfNlra+dEQHUAjpn5JV1zCPtOIVWGQjLBrqhnzQa/hrU2XrZwSyBa6XjEBzfXzw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"jasmine-core\": \"^3.6.0\"\n      }\n    },\n    \"lodash\": {\n      \"version\": \"4.17.21\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"log4js\": {\n      \"version\": \"6.4.1\",\n      \"integrity\": \"sha512-iUiYnXqAmNKiIZ1XSAitQ4TmNs8CdZYTAWINARF3LjnsLN8tY5m0vRwd6uuWj/yNY0YHxeZodnbmxKFUOM2rMg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"date-format\": \"^4.0.3\",\n        \"debug\": \"^4.3.3\",\n        \"flatted\": \"^3.2.4\",\n        \"rfdc\": \"^1.3.0\",\n        \"streamroller\": \"^3.0.2\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"4.3.3\",\n          \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.1.2\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"media-typer\": {\n      \"version\": \"0.3.0\",\n      \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\",\n      \"dev\": true\n    },\n    \"mime\": {\n      \"version\": \"2.6.0\",\n      \"integrity\": \"sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==\",\n      \"dev\": true\n    },\n    \"mime-db\": {\n      \"version\": \"1.51.0\",\n      \"integrity\": \"sha512-5y8A56jg7XVQx2mbv1lu49NR4dokRnhZYTtL+KGfaa27uq4pSTXkwQkFJl4pkRMyNFz/EtYDSkiiEHx3F7UN6g==\",\n      \"dev\": true\n    },\n    \"mime-types\": {\n      \"version\": \"2.1.34\",\n      \"integrity\": \"sha512-6cP692WwGIs9XXdOO4++N+7qjqv0rqxxVvJ3VHPh/Sc9mVZcQP+ZGhkKiTvWMQRr2tbHkJP/Yn7Y0npb3ZBs4A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"mime-db\": \"1.51.0\"\n      }\n    },\n    \"minimatch\": {\n      \"version\": \"3.0.5\",\n      \"integrity\": \"sha512-tUpxzX0VAzJHjLu0xUfFv1gwVp9ba3IOuRAVH2EGuRW8a5emA2FlACLqiT/lDVtS1W+TGNwqz3sWaNyLgDJWuw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"1.2.5\",\n      \"integrity\": \"sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\",\n      \"dev\": true\n    },\n    \"mkdirp\": {\n      \"version\": \"0.5.5\",\n      \"integrity\": \"sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"^1.2.5\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",\n      \"dev\": true\n    },\n    \"negotiator\": {\n      \"version\": \"0.6.3\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"dev\": true\n    },\n    \"normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true\n    },\n    \"object-assign\": {\n      \"version\": \"4.1.1\",\n      \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",\n      \"dev\": true\n    },\n    \"on-finished\": {\n      \"version\": \"2.3.0\",\n      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ee-first\": \"1.1.1\"\n      }\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"parseurl\": {\n      \"version\": \"1.3.3\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n      \"dev\": true\n    },\n    \"picomatch\": {\n      \"version\": \"2.3.1\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true\n    },\n    \"qjobs\": {\n      \"version\": \"1.2.0\",\n      \"integrity\": \"sha512-8YOJEHtxpySA3fFDyCRxA+UUV+fA+rTWnuWvylOK/NCjhY+b4ocCtmu8TtsWb+mYeU+GCHf/S66KZF/AsteKHg==\",\n      \"dev\": true\n    },\n    \"qs\": {\n      \"version\": \"6.9.6\",\n      \"integrity\": \"sha512-TIRk4aqYLNoJUbd+g2lEdz5kLWIuTMRagAXxl78Q0RiVjAOugHmeKNGdd3cwo/ktpf9aL9epCfFqWDEKysUlLQ==\",\n      \"dev\": true\n    },\n    \"range-parser\": {\n      \"version\": \"1.2.1\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"dev\": true\n    },\n    \"raw-body\": {\n      \"version\": \"2.4.2\",\n      \"integrity\": \"sha512-RPMAFUJP19WIet/99ngh6Iv8fzAbqum4Li7AD6DtGaW2RpMB/11xDoalPiJMTbu6I3hkbMVkATvZrqb9EEqeeQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bytes\": \"3.1.1\",\n        \"http-errors\": \"1.8.1\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      }\n    },\n    \"readdirp\": {\n      \"version\": \"3.6.0\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"picomatch\": \"^2.2.1\"\n      }\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n      \"dev\": true\n    },\n    \"requires-port\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=\",\n      \"dev\": true\n    },\n    \"rfdc\": {\n      \"version\": \"1.3.0\",\n      \"integrity\": \"sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA==\",\n      \"dev\": true\n    },\n    \"rimraf\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"glob\": \"^7.1.3\"\n      }\n    },\n    \"safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"dev\": true\n    },\n    \"socket.io\": {\n      \"version\": \"4.4.1\",\n      \"integrity\": \"sha512-s04vrBswdQBUmuWJuuNTmXUVJhP0cVky8bBDhdkf8y0Ptsu7fKU2LuLbts9g+pdmAdyMMn8F/9Mf1/wbtUN0fg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"accepts\": \"~1.3.4\",\n        \"base64id\": \"~2.0.0\",\n        \"debug\": \"~4.3.2\",\n        \"engine.io\": \"~6.1.0\",\n        \"socket.io-adapter\": \"~2.3.3\",\n        \"socket.io-parser\": \"~4.0.4\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"4.3.3\",\n          \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.1.2\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"socket.io-adapter\": {\n      \"version\": \"2.3.3\",\n      \"integrity\": \"sha512-Qd/iwn3VskrpNO60BeRyCyr8ZWw9CPZyitW4AQwmRZ8zCiyDiL+znRnWX6tDHXnWn1sJrM1+b6Mn6wEDJJ4aYQ==\",\n      \"dev\": true\n    },\n    \"socket.io-parser\": {\n      \"version\": \"4.0.4\",\n      \"integrity\": \"sha512-t+b0SS+IxG7Rxzda2EVvyBZbvFPBCjJoyHuE0P//7OAsN23GItzDRdWa6ALxZI/8R5ygK7jAR6t028/z+7295g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/component-emitter\": \"^1.2.10\",\n        \"component-emitter\": \"~1.3.0\",\n        \"debug\": \"~4.3.1\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"4.3.3\",\n          \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.1.2\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"source-map\": {\n      \"version\": \"0.6.1\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true\n    },\n    \"statuses\": {\n      \"version\": \"1.5.0\",\n      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\n      \"dev\": true\n    },\n    \"streamroller\": {\n      \"version\": \"3.0.2\",\n      \"integrity\": \"sha512-ur6y5S5dopOaRXBuRIZ1u6GC5bcEXHRZKgfBjfCglMhmIf+roVCECjvkEYzNQOXIN2/JPnkMPW/8B3CZoKaEPA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"date-format\": \"^4.0.3\",\n        \"debug\": \"^4.1.1\",\n        \"fs-extra\": \"^10.0.0\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"4.3.3\",\n          \"integrity\": \"sha512-/zxw5+vh1Tfv+4Qn7a5nsbcJKPaSvCDhojn6FEl9vupwK2VCSDtEiEtqr8DFtzYFOdz63LBkxec7DYuc2jon6Q==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.1.2\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"tmp\": {\n      \"version\": \"0.2.1\",\n      \"integrity\": \"sha512-76SUhtfqR2Ijn+xllcI5P1oyannHNHByD80W1q447gU3mp9G9PSpGdWmjUOHRDPiHYacIk66W7ubDTuPF3BEtQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"rimraf\": \"^3.0.0\"\n      }\n    },\n    \"to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^7.0.0\"\n      }\n    },\n    \"toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"dev\": true\n    },\n    \"type-is\": {\n      \"version\": \"1.6.18\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      }\n    },\n    \"ua-parser-js\": {\n      \"version\": \"0.7.34\",\n      \"resolved\": \"https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.34.tgz\",\n      \"integrity\": \"sha512-cJMeh/eOILyGu0ejgTKB95yKT3zOenSe9UGE3vj6WfiOwgGYnmATUsnDixMFvdU+rNMvWih83hrUP8VwhF9yXQ==\",\n      \"dev\": true\n    },\n    \"universalify\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==\",\n      \"dev\": true\n    },\n    \"unpipe\": {\n      \"version\": \"1.0.0\",\n      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",\n      \"dev\": true\n    },\n    \"utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\n      \"dev\": true\n    },\n    \"vary\": {\n      \"version\": \"1.1.2\",\n      \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\",\n      \"dev\": true\n    },\n    \"void-elements\": {\n      \"version\": \"2.0.1\",\n      \"integrity\": \"sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=\",\n      \"dev\": true\n    },\n    \"which\": {\n      \"version\": \"1.3.1\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"isexe\": \"^2.0.0\"\n      }\n    },\n    \"wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",\n      \"dev\": true\n    },\n    \"ws\": {\n      \"version\": \"8.2.3\",\n      \"integrity\": \"sha512-wBuoj1BDpC6ZQ1B7DWQBYVLphPWkm8i9Y0/3YdHjHKHiohOJ1ws+3OccDWtH+PoC9DZD5WOTrJvNbWvjS6JWaA==\",\n      \"dev\": true,\n      \"requires\": {}\n    },\n    \"y18n\": {\n      \"version\": \"5.0.8\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"16.2.0\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"integrity\": \"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3759765625,
          "content": "{\n  \"//\": [\n    \"These versions of these were the latest version avaiable at the time of writing\",\n    \"with the exception of jasmine, which was version 3 because our tests currently use v3.\"\n  ],\n  \"devDependencies\": {\n    \"jasmine-core\": \"3.10.1\",\n    \"karma\": \"6.3.15\",\n    \"karma-chrome-launcher\": \"3.1.0\",\n    \"karma-firefox-launcher\": \"2.1.2\",\n    \"karma-jasmine\": \"4.0.1\"\n  }\n}\n"
        },
        {
          "name": "platform_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "relnotes",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.9560546875,
          "content": "# Pip checks downloaded package archives against local hashes to protect against remote tampering\n# Read https://pip.pypa.io/en/stable/cli/pip_install/#hash-checking-mode for more information\n\njinja2==3.1.3 --hash=sha256:7d6d50dd97d52cbc355597bd845fabfbac3f551e1f99619e39a35ce8c370b5fa --hash=sha256:ac8bd6544d4bb2c9792bf3a159e80bba8fda7f07e81bc3aed565432d5925ba90\n# https://github.com/pallets/markupsafe/issues/286\n\n# Multiple hash entries are required for platform dependent distributions.\n# Currently supported hashes by platform in order are: Linux, Intel MacOS, M1 MacOS, Windows\nMarkupSafe==2.0.1 --hash=sha256:1f2ade76b9903f39aa442b4aadd2177decb66525062db244b35d71d0ee8599b6 \\\n                  --hash=sha256:3c112550557578c26af18a1ccc9e090bfe03832ae994343cfdacd287db6a6ae7 \\\n                  --hash=sha256:2ef54abee730b502252bcdf31b10dacb0a416229b72c18b19e24a4509f273d26 \\\n                  --hash=sha256:693ce3f9e70a6cf7d2fb9e6c9d8b204b6b39897a2c4a1aa65728d5ac97dcc1d8\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "serve-bazel-test-undeclared-outputs.sh",
          "type": "blob",
          "size": 1.4609375,
          "content": "#!/bin/bash\n\n# Copyright 2023 Google LLC\n#\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# Helper script to serve Bazel undeclared test outputs over HTTP.\n\nif [ $# -ne 1 ]\nthen\n  echo \"Usage: $0 <path to outputs.zip>\"\n  echo\n  echo \"This is a helper script to serve Bazel undeclared test outputs over HTTP. See the\"\n  echo \"TEST_UNDECLARED_OUTPUTS_DIR environment variable as described in\"\n  echo \"https://bazel.build/reference/test-encyclopedia#initial-conditions.\"\n  echo\n  echo \"A typical use case is to view the PNG files produced by a GM executed with \\\"bazel test\\\".\"\n  echo \"However, this script works with any Bazel target that produces undeclared outputs.\"\n  echo\n  echo \"Suppose //path/to:some_test is a Bazel target that produces undeclared test outputs. Its\"\n  echo \"undeclared test outputs are typically found inside a ZIP file named\"\n  echo \"bazel-testlogs/path/to/some_test/test.outputs/outputs.zip (relative to the repository's\"\n  echo \"root directory).\"\n  echo\n  echo \"Example session:\"\n  echo\n  echo \"    $ bazel test //path/to:some_test\"\n  echo \"    $ $0 bazel-testlogs/path/to/some_test/test.outputs/outputs.zip\"\n  echo \"    Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\"\n  echo\n  exit 1\nfi\n\n# Create a temporary directory where we will extract the ZIP file, and delete it on exit.\nTMP_DIR=\"$(mktemp -d)\"\ntrap \"rm -rf $TMP_DIR\" EXIT\n\nset -x -e\n\nunzip -d $TMP_DIR $1\ncd $TMP_DIR && python3 -m http.server\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "specs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolchain",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "whitespace.txt",
          "type": "blob",
          "size": 0.501953125,
          "content": "You can modify this file to create no-op changelists (like this one).\nI LOVE W\tH\tI\tT\tE\tS\tP\tA\tC\tE!\nPython also loves\\n\\twhitespace.¯\\_(ツ)_/¯\nLithp.\nUse the Forth.\nLife is a mistry. Everyone must WAKA WAKA WAKA\nThis file has gotten so boring.\nepoger added this line using a pure git checkout\nflorin was here\nmore   whitespace\nall the things!!!\nYet another line.\n\nBIOS update 20180917\nGerrit 10k!!!\nRetry Mac bots.\npush shaders.skia.org\nChanged this\n\nHello_world\n\nDaniel first commit\nSecond edit\n\nHello everyone!\n"
        }
      ]
    }
  ]
}