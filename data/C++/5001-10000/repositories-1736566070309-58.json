{
  "metadata": {
    "timestamp": 1736566070309,
    "page": 58,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LMMS/lmms",
      "stars": 8320,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.951171875,
          "content": "---\n# Language\nLanguage:        Cpp\nStandard:        c++20\n\n# Indentation\nTabWidth:        4\nUseTab:          Always\nIndentWidth:     4\nColumnLimit:     120\n\n# Indentation detail\nAlignAfterOpenBracket: DontAlign\nContinuationIndentWidth: 4\nBreakConstructorInitializers: BeforeComma\nConstructorInitializerIndentWidth: 4\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nBinPackParameters: true\nBinPackArguments: true\nAlignOperands: false\n\n# Alignment\nAlignEscapedNewlines: DontAlign\nAccessModifierOffset: -4\nAllowShortBlocksOnASingleLine: Always\nAllowShortIfStatementsOnASingleLine: Always\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: InlineOnly\nBreakBeforeBinaryOperators: All\n\n# Includes\nIncludeBlocks:   Regroup\nIncludeCategories:\n  # windows.h must go before everything else\n  # otherwise, you will get errors\n  - Regex:           '^<windows.h>$'\n    Priority:        -99\n  # the \"main header\" implicitly gets priority 0\n  # system headers\n  - Regex:           '^<[^>]+>$'\n    Priority:        1\n  # non-system headers\n  - Regex:           '.*'\n    Priority:        2\nSortIncludes:    true\n\n# Spaces\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpacesInAngles:  false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\n\n# Brace wrapping\n# Not directly mentioned in the coding conventions,\n# but required to avoid tons of auto reformatting\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterControlStatement: Always\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: false\n  AfterStruct: true\n  AfterUnion: true\n  AfterExternBlock: false\n  BeforeCatch: true\n  BeforeElse: true\n  IndentBraces: false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\n  BeforeWhile: false\n  BeforeLambdaBody: false\n\n# Do not break doxygen comments\nCommentPragmas:  '^[[:space:]]*\\\\.+'\n\n# Pointers\n# Use pointer close to type: `const char* const* function()`\nPointerAlignment: Left\n\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.76171875,
          "content": "---\nChecks: >\n  bugprone-macro-parentheses,\n  bugprone-macro-repeated-side-effects,\n  modernize-avoid-c-arrays,\n  modernize-loop-convert,\n  modernize-redundant-void-arg,\n  modernize-use-auto,\n  modernize-use-bool-literals,\n  modernize-use-emplace,\n  modernize-use-equals-default,\n  modernize-use-equals-delete,\n  modernize-use-override,\n  modernize-use-using,\n  performance-trivially-destructible,\n  readability-braces-around-statements,\n  readability-const-return-type,\n  readability-identifier-naming,\n  readability-misleading-indentation,\n  readability-simplify-boolean-expr\nWarningsAsErrors: ''\nHeaderFilterRegex: '' # don't show errors from headers\nFormatStyle:     none\nUser:            user\nCheckOptions:    \n  - key:             readability-identifier-naming.ClassCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.EnumCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.TypedefCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.UnionCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.StructCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.UnionCase\n    value:           CamelCase\n# not yet working, as it currently applies both for static and object members\n# - key:             readability-identifier-naming.MemberPrefix\n#   value:           'm_'\n  # currently only working for local static variables:\n  - key:             readability-identifier-naming.StaticVariablePrefix\n    value:           's_'\n# not yet working\n# - key:             readability-identifier-naming.VariableCase\n#   value:           camelBack\n  - key:             readability-identifier-naming.FunctionCase\n    value:           camelBack\n...\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.048828125,
          "content": "root = true\n\n[*]\nindent_style = tab\ntab_width = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1640625,
          "content": ".gitattributes export-ignore\n.gitignore export-ignore\ndata/locale/* linguist-documentation\n* text=auto eol=lf\n*.{bin,bmp,flac,icns,ico,mmpz,ogg,png,xiz,xmz,wav} binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3203125,
          "content": "/build/\n/target/\n.*.sw?\n.DS_Store\n*~\n/CMakeLists.txt.user\n/plugins/ZynAddSubFx/zynaddsubfx/ExternalPrograms/Controller/Makefile\n/plugins/ZynAddSubFx/zynaddsubfx/ExternalPrograms/Spliter/Makefile\n/plugins/ZynAddSubFx/zynaddsubfx/doc/Makefile\n/plugins/ZynAddSubFx/zynaddsubfx/doc/gen/Makefile\n/data/locale/*.qm\nBrewfile.lock.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.87109375,
          "content": "[submodule \"src/3rdparty/qt5-x11embed\"]\n\tpath = src/3rdparty/qt5-x11embed\n\turl = https://github.com/Lukas-W/qt5-x11embed.git\n[submodule \"plugins/ZynAddSubFx/zynaddsubfx\"]\n\tpath = plugins/ZynAddSubFx/zynaddsubfx\n\turl = https://github.com/lmms/zynaddsubfx.git\n[submodule \"plugins/FreeBoy/game-music-emu\"]\n\tpath = plugins/FreeBoy/game-music-emu\n\turl = https://github.com/libgme/game-music-emu.git\n[submodule \"plugins/OpulenZ/adplug\"]\n\tpath = plugins/OpulenZ/adplug\n\turl = https://github.com/adplug/adplug.git\n[submodule \"plugins/LadspaEffect/calf/veal\"]\n\tpath = plugins/LadspaEffect/calf/veal\n\turl = https://github.com/lmms/veal\n[submodule \"plugins/Xpressive/exprtk\"]\n\tpath = plugins/Xpressive/exprtk\n\turl = https://github.com/ArashPartow/exprtk\n\tbranch = release\n[submodule \"plugins/LadspaEffect/swh/ladspa\"]\n\tpath = plugins/LadspaEffect/swh/ladspa\n\turl = https://github.com/swh/ladspa\n[submodule \"plugins/LadspaEffect/tap/tap-plugins\"]\n\tpath = plugins/LadspaEffect/tap/tap-plugins\n\turl = https://github.com/lmms/tap-plugins\n[submodule \"src/3rdparty/weakjack/weakjack\"]\n\tpath = src/3rdparty/weakjack/weakjack\n\turl = https://github.com/x42/weakjack.git\n[submodule \"doc/wiki\"]\n\tpath = doc/wiki\n\turl = https://github.com/lmms/lmms.wiki.git\n[submodule \"src/3rdparty/ringbuffer\"]\n\tpath = src/3rdparty/ringbuffer\n\turl = https://github.com/JohannesLorenz/ringbuffer.git\n[submodule \"plugins/CarlaBase/carla\"]\n\tpath = plugins/CarlaBase/carla\n\turl = https://github.com/falktx/carla\n[submodule \"plugins/Sid/resid/resid\"]\n\tpath = plugins/Sid/resid/resid\n\turl = https://github.com/libsidplayfp/resid\n[submodule \"src/3rdparty/jack2\"]\n\tpath = src/3rdparty/jack2\n\turl = https://github.com/jackaudio/jack2\n[submodule \"plugins/LadspaEffect/cmt/cmt\"]\n\tpath = plugins/LadspaEffect/cmt/cmt\n\turl = https://github.com/lmms/cmt\n[submodule \"src/3rdparty/hiir/hiir\"]\n\tpath = src/3rdparty/hiir/hiir\n\turl = https://github.com/LostRobotMusic/hiir\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.82421875,
          "content": "Alexandre Almeida <wilsalx@gmail.com>\nTobias Junghans <tobias.doerffel@gmail.com>\nDave French <dave.french3@googlemail.com>\nPaul Giblock <drfaygo@gmail.com> <pgib@users.sf.net>\nPaul Giblock <drfaygo@gmail.com> <p@pgiblock.net>\nAndrew Kelley <superjoe30@gmail.com> <andrew.r.kelley@gmail.com>\nAndrew Kelley <superjoe30@gmail.com> <andy@debian.superjoesoftware>\nJanne Sinisalo <janne.m.sinisalo@gmail.com> <janne@janne-desktop.(none)>\nRaine M. Ekman <raine@iki.fi> <raine@raine.(none)>\nRaine M. Ekman <raine@iki.fi> <raine@raine.damex.fi>\nLukas W <lukaswhl@gmail.com> <lukaswhl@googlemail.com>\nVesa <contact.diizy@nbl.fi> <vesa@isokone.(none)>\nVesa <contact.diizy@nbl.fi> <diizy@users.noreply.github.com>\nTres Finocchiaro <tres.finocchiaro@gmail.com>\nTres Finocchiaro <tres.finocchiaro@gmail.com> <tres@ubuntu-1204.(none)>\nTres Finocchiaro <tres.finocchiaro@gmail.com> <ubuntu@ubuntu-1204.(none)>\nTres Finocchiaro <tres.finocchiaro@gmail.com> <tresf@github.com>\nRÃ¼diger Ranft <rudi@qzzq.de> <_rdi_@web.de>\nSpekular <Spekularr@gmail.com> <Spekular@users.noreply.github.com>\nunfa <unfa00@gmail.com> <unfa@unfa.(none)>\nmikobuntu <chrissy.mc.1@hotmail.co.uk> <mikobuntu@mikobuntu-Aspire-5332.(none)>\nJonathan Aquilina <eagles051387@gmail.com>\nmidi-pascal <midi-pascal@videotron.ca>\nmidi-pascal <midi-pascal@videotron.ca> <pascal@TDE.(none)>\nThomas Clark <the.thomas.j.clark@gmail.com>\nThomas Clark <the.thomas.j.clark@gmail.com> <tjclark@wpi.edu>\nanonymous <support@lmms.io> Locale updater <>\ngrejppi <grejppi@gmail.com>\nJohannes Lorenz <j.git@lorenz-ho.me> <johannes89@mailueberfall.de>\nJohannes Lorenz <j.git@lorenz-ho.me> <1042576+JohannesLorenz@users.noreply.github.com>\nNoah Brecht <noahb2713@gmail.com>\nOlivier Humbert <trebmuh@tuxfamily.org> <trebmuh@users.noreply.github.com>\nHussam al-Homsi <sawuare@gmail.com> Hussam Eddin Alhomsi <hussameddin.alhomsi@gmail.com>\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.0712890625,
          "content": "rules:\n  line-length:\n    max: 120  # be conforming to LMMS coding rules\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.279296875,
          "content": "brew \"carla\"\nbrew \"ccache\"\nbrew \"fftw\"\nbrew \"fltk\"\nbrew \"fluid-synth\"\nbrew \"jack\"\nbrew \"lame\"\nbrew \"libgig\"\nbrew \"libogg\"\nbrew \"libsamplerate\"\nbrew \"libsndfile\"\nbrew \"libsoundio\"\nbrew \"libvorbis\"\nbrew \"lilv\"\nbrew \"lv2\"\nbrew \"pkgconf\"\nbrew \"portaudio\"\nbrew \"qt@5\"\nbrew \"sdl2\"\nbrew \"stk\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 25.76953125,
          "content": "CMAKE_MINIMUM_REQUIRED(VERSION 3.13)\n\n# Set the given policy to NEW. If it does not exist, it will not be set. If it\n# is already set to NEW (most likely due to predating the minimum required CMake\n# version), a developer warning is emitted indicating that the policy need no\n# longer be explicitly set.\nfunction(enable_policy_if_exists id)\n\tif(POLICY \"${id}\")\n\t\tcmake_policy(GET \"${id}\" current_value)\n\t\tif(current_value STREQUAL \"NEW\")\n\t\t\tmessage(AUTHOR_WARNING \"${id} is now set to NEW by default, and no longer needs to be explicitly set.\")\n\t\telse()\n\t\t\tcmake_policy(SET \"${id}\" NEW)\n\t\tendif()\n\tendif()\nendfunction()\n\nenable_policy_if_exists(CMP0092) # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n# Needed for ccache support with MSVC\nenable_policy_if_exists(CMP0141) # MSVC debug information format flags are selected by an abstraction.\n\nPROJECT(lmms)\n\nSET(CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake/modules\" ${CMAKE_MODULE_PATH})\nSET(LMMS_BINARY_DIR ${CMAKE_BINARY_DIR})\nSET(LMMS_SOURCE_DIR ${CMAKE_SOURCE_DIR})\n\n# Import of windows.h breaks min()/max()\nADD_DEFINITIONS(-DNOMINMAX)\n\n# CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES is not set correctly for MinGW until\n# CMake 3.14.1, so avoid specifying system include directories on affected\n# versions. Normal include directories are safe, since GCC ignores them if they\n# are already in the built-in search path.\nif(MINGW AND CMAKE_VERSION VERSION_LESS \"3.14.1\")\n\tset(CMAKE_NO_SYSTEM_FROM_IMPORTED TRUE)\nendif()\n\nINCLUDE(PluginList)\nINCLUDE(CheckSubmodules)\nINCLUDE(AddFileDependencies)\nINCLUDE(CheckIncludeFiles)\nINCLUDE(FindPkgConfig)\nINCLUDE(GenerateExportHeader)\ninclude(StaticDependencies)\n\nSTRING(TOUPPER          \"${CMAKE_PROJECT_NAME}\" PROJECT_NAME_UCASE)\n\nSET(PROJECT_YEAR 2025)\n\nSET(PROJECT_AUTHOR      \"LMMS Developers\")\nSET(PROJECT_URL         \"https://lmms.io\")\nSET(PROJECT_EMAIL       \"lmms-devel@lists.sourceforge.net\")\nSET(PROJECT_DESCRIPTION \"${PROJECT_NAME_UCASE} - Free music production software\")\nSET(PROJECT_COPYRIGHT   \"2008-${PROJECT_YEAR} ${PROJECT_AUTHOR}\")\nSET(VERSION_MAJOR       \"1\")\nSET(VERSION_MINOR       \"3\")\nSET(VERSION_RELEASE     \"0\")\nSET(VERSION_STAGE       \"alpha\")\nSET(VERSION_BUILD       \"\")\nSET(VERSION             \"${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_RELEASE}\")\nIF(VERSION_STAGE)\n\tSET(VERSION     \"${VERSION}-${VERSION_STAGE}\")\nENDIF()\nIF(VERSION_BUILD)\n\tSET(VERSION     \"${VERSION}-${VERSION_BUILD}\")\nENDIF()\n\n# Override version information for non-base builds\nINCLUDE(VersionInfo)\nINCLUDE(DetectMachine)\n\nOPTION(WANT_ALSA\t\"Include ALSA (Advanced Linux Sound Architecture) support\" ON)\nOPTION(WANT_OSS \t\"Include Open Sound System support\" ON)\nOPTION(WANT_CALF\t\"Include CALF LADSPA plugins\" ON)\nOPTION(WANT_CAPS\t\"Include C* Audio Plugin Suite (LADSPA plugins)\" ON)\nOPTION(WANT_CARLA\t\"Include Carla plugin\" ON)\nOPTION(WANT_CMT\t\t\"Include Computer Music Toolkit LADSPA plugins\" ON)\nOPTION(WANT_JACK\t\"Include JACK (Jack Audio Connection Kit) support\" ON)\nOPTION(WANT_WEAKJACK\t\"Loosely link JACK libraries\" ON)\nOPTION(WANT_LV2\t\t\"Include Lv2 plugins\" ON)\nOPTION(WANT_SUIL\t\"Include SUIL for LV2 plugin UIs\" ON)\nOPTION(WANT_MP3LAME\t\"Include MP3/Lame support\" ON)\nOPTION(WANT_OGGVORBIS\t\"Include OGG/Vorbis support\" ON)\nOPTION(WANT_PULSEAUDIO\t\"Include PulseAudio support\" ON)\nOPTION(WANT_PORTAUDIO\t\"Include PortAudio support\" ON)\nOPTION(WANT_SNDIO\t\"Include sndio support\" ON)\nOPTION(WANT_SOUNDIO\t\"Include libsoundio support\" ON)\nOPTION(WANT_SDL\t\t\"Include SDL (Simple DirectMedia Layer) support\" ON)\nOPTION(WANT_SF2\t\t\"Include SoundFont2 player plugin\" ON)\nOPTION(WANT_GIG\t\t\"Include GIG player plugin\" ON)\noption(WANT_SID\t\t\"Include Sid instrument\" ON)\nOPTION(WANT_STK\t\t\"Include Stk (Synthesis Toolkit) support\" ON)\nOPTION(WANT_SWH\t\t\"Include Steve Harris's LADSPA plugins\" ON)\nOPTION(WANT_TAP\t\t\"Include Tom's Audio Processing LADSPA plugins\" ON)\nOPTION(WANT_VST\t\t\"Include VST support\" ON)\nOPTION(WANT_VST_32\t\"Include 32-bit Windows VST support\" ON)\nOPTION(WANT_VST_64\t\"Include 64-bit Windows VST support\" ON)\nOPTION(WANT_WINMM\t\"Include WinMM MIDI support\" OFF)\nOPTION(WANT_DEBUG_FPE\t\"Debug floating point exceptions\" OFF)\noption(WANT_DEBUG_ASAN\t\"Enable AddressSanitizer\" OFF)\noption(WANT_DEBUG_TSAN\t\"Enable ThreadSanitizer\" OFF)\noption(WANT_DEBUG_MSAN\t\"Enable MemorySanitizer\" OFF)\noption(WANT_DEBUG_UBSAN\t\"Enable UndefinedBehaviorSanitizer\" OFF)\nOPTION(BUNDLE_QT_TRANSLATIONS\t\"Install Qt translation files for LMMS\" OFF)\n\n\nIF(LMMS_BUILD_APPLE)\n\t# Fix linking on 10.14+. See issue #4762 on github\n\tLINK_DIRECTORIES(\"${APPLE_PREFIX}/lib\")\n\tSET(WANT_SOUNDIO OFF)\n\tSET(WANT_ALSA OFF)\n\tSET(WANT_OSS OFF)\n\tSET(WANT_PULSEAUDIO OFF)\n\tSET(WANT_VST OFF)\n\tSET(STATUS_ALSA \"<not supported on this platform>\")\n\tSET(STATUS_OSS \"<not supported on this platform>\")\n\tSET(STATUS_PULSEAUDIO \"<not supported on this platform>\")\n\tSET(STATUS_APPLEMIDI \"OK\")\nELSE(LMMS_BUILD_APPLE)\n\tSET(STATUS_APPLEMIDI \"<not supported on this platform>\")\nENDIF(LMMS_BUILD_APPLE)\n\n\nIF(LMMS_BUILD_WIN32)\n\tSET(WANT_ALSA OFF)\n\tSET(WANT_OSS OFF)\n\tSET(WANT_PULSEAUDIO OFF)\n\tSET(WANT_SNDIO OFF)\n\tSET(WANT_SOUNDIO OFF)\n\tSET(WANT_WINMM ON)\n\tSET(BUNDLE_QT_TRANSLATIONS ON)\n\tSET(LMMS_HAVE_WINMM TRUE)\n\tif(NOT LMMS_BUILD_WIN64)\n\t\tset(WANT_VST_64 OFF)\n\tendif()\n\tSET(STATUS_ALSA \"<not supported on this platform>\")\n\tSET(STATUS_OSS \"<not supported on this platform>\")\n\tSET(STATUS_PULSEAUDIO \"<not supported on this platform>\")\n\tSET(STATUS_SOUNDIO \"<disabled in this release>\")\n\tSET(STATUS_SNDIO \"<not supported on this platform>\")\n\tSET(STATUS_WINMM \"OK\")\n\tSET(STATUS_APPLEMIDI \"<not supported on this platform>\")\nELSE(LMMS_BUILD_WIN32)\n\tSET(STATUS_WINMM \"<not supported on this platform>\")\nENDIF(LMMS_BUILD_WIN32)\n\nSET(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nCHECK_INCLUDE_FILES(pthread.h LMMS_HAVE_PTHREAD_H)\nCHECK_INCLUDE_FILES(semaphore.h LMMS_HAVE_SEMAPHORE_H)\nCHECK_INCLUDE_FILES(unistd.h LMMS_HAVE_UNISTD_H)\nCHECK_INCLUDE_FILES(sys/types.h LMMS_HAVE_SYS_TYPES_H)\nCHECK_INCLUDE_FILES(sys/ipc.h LMMS_HAVE_SYS_IPC_H)\nCHECK_INCLUDE_FILES(sys/time.h LMMS_HAVE_SYS_TIME_H)\nCHECK_INCLUDE_FILES(sys/times.h LMMS_HAVE_SYS_TIMES_H)\nCHECK_INCLUDE_FILES(sys/prctl.h LMMS_HAVE_SYS_PRCTL_H)\nCHECK_INCLUDE_FILES(sched.h LMMS_HAVE_SCHED_H)\nCHECK_INCLUDE_FILES(sys/soundcard.h LMMS_HAVE_SYS_SOUNDCARD_H)\nCHECK_INCLUDE_FILES(soundcard.h LMMS_HAVE_SOUNDCARD_H)\nCHECK_INCLUDE_FILES(fcntl.h LMMS_HAVE_FCNTL_H)\nCHECK_INCLUDE_FILES(sys/ioctl.h LMMS_HAVE_SYS_IOCTL_H)\nCHECK_INCLUDE_FILES(ctype.h LMMS_HAVE_CTYPE_H)\nCHECK_INCLUDE_FILES(string.h LMMS_HAVE_STRING_H)\nCHECK_INCLUDE_FILES(process.h LMMS_HAVE_PROCESS_H)\nCHECK_INCLUDE_FILES(locale.h LMMS_HAVE_LOCALE_H)\n\ninclude(CheckLibraryExists)\ncheck_library_exists(rt shm_open \"\" LMMS_HAVE_LIBRT)\n\nLIST(APPEND CMAKE_PREFIX_PATH \"${CMAKE_INSTALL_PREFIX}\")\n\nFIND_PACKAGE(Qt5 5.9.0 COMPONENTS Core Gui Widgets Xml REQUIRED)\nFIND_PACKAGE(Qt5 COMPONENTS LinguistTools QUIET)\n\ninclude_directories(SYSTEM\n\t${Qt5Core_INCLUDE_DIRS}\n\t${Qt5Gui_INCLUDE_DIRS}\n\t${Qt5Widgets_INCLUDE_DIRS}\n\t${Qt5Xml_INCLUDE_DIRS}\n)\n\nSET(QT_LIBRARIES\n\tQt5::Core\n\tQt5::Gui\n\tQt5::Widgets\n\tQt5::Xml\n)\n\nIF(LMMS_BUILD_LINUX AND WANT_VST)\n    FIND_PACKAGE(Qt5 COMPONENTS X11Extras REQUIRED)\n    LIST(APPEND QT_LIBRARIES Qt5::X11Extras)\nENDIF()\n\n# Resolve Qt5::qmake to full path for use in packaging scripts\nGET_TARGET_PROPERTY(QT_QMAKE_EXECUTABLE \"${Qt5Core_QMAKE_EXECUTABLE}\" IMPORTED_LOCATION)\n\n# Find the location of Qt translation files\nexecute_process(COMMAND ${QT_QMAKE_EXECUTABLE} -query QT_INSTALL_TRANSLATIONS\n\tOUTPUT_VARIABLE QT_TRANSLATIONS_DIR\n\tOUTPUT_STRIP_TRAILING_WHITESPACE\n\tERROR_QUIET\n)\nIF(EXISTS \"${QT_TRANSLATIONS_DIR}\")\n\tMESSAGE(\"-- Found Qt translations in ${QT_TRANSLATIONS_DIR}\")\n\tADD_DEFINITIONS(\"-DQT_TRANSLATIONS_DIR=\\\"${QT_TRANSLATIONS_DIR}\\\"\")\nENDIF()\n\nFIND_PACKAGE(Qt5Test)\nSET(QT_QTTEST_LIBRARY Qt5::Test)\n\n# check for libsndfile\nFIND_PACKAGE(SndFile REQUIRED)\nIF(SNDFILE_FOUND)\n\tIF(SndFile_VERSION VERSION_GREATER_EQUAL \"1.1.0\")\n\t\tSET(LMMS_HAVE_SNDFILE_MP3 TRUE)\n\tELSE()\n\t\tMESSAGE(\"libsndfile version is < 1.1.0; MP3 import disabled\")\n\t\tSET(LMMS_HAVE_SNDFILE_MP3 FALSE)\n\tENDIF()\nELSE()\n\tMESSAGE(FATAL_ERROR \"LMMS requires libsndfile1 and libsndfile1-dev >= 1.0.18 - please install, remove CMakeCache.txt and try again!\")\nENDIF()\n# check if we can use SFC_SET_COMPRESSION_LEVEL\nINCLUDE(CheckCXXSourceCompiles)\nCHECK_CXX_SOURCE_COMPILES(\n\t\"#include <sndfile.h>\n\t\tint main() {SFC_SET_COMPRESSION_LEVEL;}\"\n\tLMMS_HAVE_SF_COMPLEVEL\n)\n\n# check for perl\nif(LMMS_BUILD_APPLE)\n\t# Prefer system perl over Homebrew, MacPorts, etc\n\tset(Perl_ROOT \"/usr/bin\")\nendif()\nfind_package(Perl)\n\nIF(WANT_LV2)\n\tIF(PKG_CONFIG_FOUND)\n\t\tPKG_CHECK_MODULES(LV2 lv2)\n\t\tPKG_CHECK_MODULES(LILV lilv-0)\n\tENDIF()\n\tIF(NOT LV2_FOUND AND NOT LILV_FOUND)\n\t\tUNSET(LV2_FOUND CACHE)\n\t\tUNSET(LILV_FOUND CACHE)\n\t\tFIND_PACKAGE(LV2 CONFIG)\n\t\tFIND_PACKAGE(LILV CONFIG)\n\t\tIF(LILV_FOUND)\n\t\t\tSET(LILV_LIBRARIES \"lilv::lilv\")\n\t\tENDIF()\n\tENDIF()\n\tIF(LV2_FOUND AND LILV_FOUND)\n\t\tSET(LMMS_HAVE_LV2 TRUE)\n\t\tSET(STATUS_LV2 \"OK\")\n\tELSE()\n\t\tSET(STATUS_LV2 \"not found, install it or set PKG_CONFIG_PATH appropriately\")\n\tENDIF()\nELSE(WANT_LV2)\n\tSET(STATUS_LV2 \"not built as requested\")\nENDIF(WANT_LV2)\n\nIF(WANT_SUIL)\n\tIF(PKG_CONFIG_FOUND)\n\t\tPKG_CHECK_MODULES(SUIL suil-0)\n\t\tIF(SUIL_FOUND)\n\t\t\tSET(LMMS_HAVE_SUIL TRUE)\n\t\t\tSET(STATUS_SUIL \"OK\")\n\t\tELSE()\n\t\t\tSET(STATUS_SUIL \"not found, install it or set PKG_CONFIG_PATH appropriately\")\n\t\tENDIF()\n\tELSE()\n\t\tSET(STATUS_SUIL \"not found, requires pkg-config\")\n\tENDIF()\nELSE(WANT_SUIL)\n\tSET(STATUS_SUIL \"not built as requested\")\nENDIF(WANT_SUIL)\n\nIF(WANT_CALF)\n\tSET(LMMS_HAVE_CALF TRUE)\n\tSET(STATUS_CALF \"OK\")\nELSE(WANT_CALF)\n\tSET(STATUS_CALF \"not built as requested\")\nENDIF(WANT_CALF)\n\nIF(WANT_CAPS)\n\tSET(LMMS_HAVE_CAPS TRUE)\n\tSET(STATUS_CAPS \"OK\")\nELSE(WANT_CAPS)\n\tSET(STATUS_CAPS \"not built as requested\")\nENDIF(WANT_CAPS)\n\nIF(WANT_CMT)\n\tSET(LMMS_HAVE_CMT TRUE)\n\tSET(STATUS_CMT \"OK\")\nELSE(WANT_CMT)\n\tSET(STATUS_CMT \"not built as requested\")\nENDIF(WANT_CMT)\n\nIF(WANT_SWH)\n\tIF(PERL_FOUND)\n\t\tSET(LMMS_HAVE_SWH TRUE)\n\t\tSET(STATUS_SWH \"OK\")\n\tELSE()\n\t\tSET(STATUS_SWH \"Skipping, perl is missing\")\n\tENDIF()\nELSE(WANT_SWH)\n\tSET(STATUS_SWH \"not built as requested\")\nENDIF(WANT_SWH)\n\nIF(WANT_TAP)\n\tSET(LMMS_HAVE_TAP TRUE)\n\tSET(STATUS_TAP \"OK\")\nELSE(WANT_TAP)\n\tSET(STATUS_TAP \"not built as requested\")\nENDIF(WANT_TAP)\n\n\n# check for CARLA\nIF(WANT_CARLA)\n\tPKG_CHECK_MODULES(CARLA carla-native-plugin)\n\t# look for carla under old name\n\tIF(NOT CARLA_FOUND)\n\t\tPKG_CHECK_MODULES(CARLA carla-standalone>=1.9.5)\n\tENDIF()\n\tIF(CARLA_FOUND)\n\t\tSET(LMMS_HAVE_CARLA TRUE)\n\t\tSET(STATUS_CARLA \"OK\")\n\tELSE(CARLA_FOUND)\n\t\tSET(LMMS_HAVE_WEAKCARLA TRUE)\n\t\tSET(STATUS_CARLA \"OK (weak linking enabled)\")\n\tENDIF(CARLA_FOUND)\nENDIF(WANT_CARLA)\n\n\n# check for SDL2\nIF(WANT_SDL)\n\tFIND_PACKAGE(SDL2)\n\tIF(SDL2_FOUND)\n\t\tSET(LMMS_HAVE_SDL TRUE)\n\t\tSET(STATUS_SDL \"OK\")\n\t\tSET(SDL2_LIBRARY \"SDL2::SDL2\")\n\tELSE()\n\t\tSET(STATUS_SDL \"not found, please install libsdl2-dev (or similar) if you require SDL support\")\n\t\tSET(SDL2_LIBRARY \"\")\n\tENDIF()\nENDIF()\n\n# check for Sid\nif(WANT_SID)\n\tif(PERL_FOUND)\n\t\tset(LMMS_HAVE_SID TRUE)\n\t\tset(STATUS_SID \"OK\")\n\telse()\n\t\tset(STATUS_SID \"not found, please install perl if you require the Sid instrument\")\n\tendif()\nendif()\n\n# check for Stk\nIF(WANT_STK)\n\tFIND_PACKAGE(STK)\n\tIF(STK_FOUND)\n\t\tSET(LMMS_HAVE_STK TRUE)\n\t\tSET(STATUS_STK \"OK\")\n\tELSE(STK_FOUND)\n\t\tSET(STK_INCLUDE_DIR \"\")\n\t\tSET(STATUS_STK \"not found, please install libstk0-dev (or similar) \"\n\t\t\t\"if you require the Mallets instrument\")\n\tENDIF(STK_FOUND)\nENDIF(WANT_STK)\n\n\n# check for PortAudio\nIF(WANT_PORTAUDIO)\n\tFIND_PACKAGE(Portaudio)\n\tIF(Portaudio_FOUND)\n\t\tSET(LMMS_HAVE_PORTAUDIO TRUE)\n\t\tSET(STATUS_PORTAUDIO \"OK\")\n\tELSE()\n\t\tSET(STATUS_PORTAUDIO \"not found, please install portaudio19-dev (or similar, version >= 1.9) \"\n\t\t\t\"if you require PortAudio support\")\n\tENDIF()\nENDIF(WANT_PORTAUDIO)\n\n# check for libsoundio\nIF(WANT_SOUNDIO)\n  FIND_PACKAGE(SoundIo)\n  IF(SOUNDIO_FOUND)\n\tSET(LMMS_HAVE_SOUNDIO TRUE)\n\tSET(STATUS_SOUNDIO \"OK\")\n\tinclude_directories(SYSTEM \"${SOUNDIO_INCLUDE_DIR}\")\n  ELSE(SOUNDIO_FOUND)\n\tSET(SOUNDIO_INCLUDE_DIR \"\")\n\tSET(STATUS_SOUNDIO \"not found, please install libsoundio if you require libsoundio support\")\n\tSET(SOUNDIO_LIBRARY \"\")\n  ENDIF(SOUNDIO_FOUND)\nENDIF(WANT_SOUNDIO)\n\n\n# check for PulseAudio\nIF(WANT_PULSEAUDIO)\n\tFIND_PACKAGE(PulseAudio)\n\tIF(PULSEAUDIO_FOUND)\n\t\tSET(LMMS_HAVE_PULSEAUDIO TRUE)\n\t\tSET(STATUS_PULSEAUDIO \"OK\")\n\tELSE(PULSEAUDIO_FOUND)\n\t\tSET(STATUS_PULSEAUDIO \"not found, please install libpulse-dev (or similar) \"\n\t\t\t\"if you require PulseAudio support\")\n\tENDIF(PULSEAUDIO_FOUND)\nENDIF(WANT_PULSEAUDIO)\nIF(NOT LMMS_HAVE_PULSEAUDIO)\n\tSET(PULSEAUDIO_INCLUDE_DIR \"\")\n\tSET(PULSEAUDIO_LIBRARIES \"\")\nENDIF(NOT LMMS_HAVE_PULSEAUDIO)\n\n\n# check for MP3/Lame-libraries\nIF(WANT_MP3LAME)\n\tFIND_PACKAGE(Lame)\n\tIF(LAME_FOUND)\n\t\tSET(LMMS_HAVE_MP3LAME TRUE)\n\t\tSET(STATUS_MP3LAME \"OK\")\n\tELSE(LAME_FOUND)\n\t\tSET(STATUS_MP3LAME \"not found, please install libmp3lame-dev (or similar)\")\n\tENDIF(LAME_FOUND)\nELSE(WANT_MP3LAME)\n\tSET(STATUS_MP3LAME \"Disabled for build\")\nENDIF(WANT_MP3LAME)\n\n# check for OGG/Vorbis-libraries\nIF(WANT_OGGVORBIS)\n\tFIND_PACKAGE(OggVorbis)\n\tIF(OGGVORBIS_FOUND)\n\t\tSET(LMMS_HAVE_OGGVORBIS TRUE)\n\t\tSET(STATUS_OGGVORBIS \"OK\")\n\tELSE(OGGVORBIS_FOUND)\n\t\tSET(STATUS_OGGVORBIS \"not found, libogg-dev and libvorbis-dev (or similar) \"\n\t\t\t\"is highly recommended\")\n\tENDIF(OGGVORBIS_FOUND)\nENDIF(WANT_OGGVORBIS)\n\n\n# check for OSS\nIF(WANT_OSS AND (LMMS_HAVE_SOUNDCARD_H OR LMMS_HAVE_SYS_SOUNDCARD_H))\n\tSET(LMMS_HAVE_OSS TRUE)\n\tSET(STATUS_OSS \"OK\")\nELSEIF(WANT_OSS)\n\tSET(STATUS_OSS \"<not found or not supported on this platform>\")\nENDIF()\n\n\n# check for ALSA\nIF(WANT_ALSA)\n\tFIND_PACKAGE(Alsa)\n\tIF(ALSA_FOUND)\n\t\tSET(LMMS_HAVE_ALSA TRUE)\n\t\tSET(STATUS_ALSA \"OK\")\n\tELSE(ALSA_FOUND)\n\t\tSET(STATUS_ALSA \"not found, please install libasound2-dev (or similar) \"\n\t\t\t\"if you require ALSA support\")\n\tENDIF(ALSA_FOUND)\nENDIF(WANT_ALSA)\nIF(NOT LMMS_HAVE_ALSA)\n\tSET(ASOUND_LIBRARY \"\")\nENDIF(NOT LMMS_HAVE_ALSA)\n\n\n# check for JACK\nIF(WANT_JACK)\n\tIF(WANT_WEAKJACK)\n\t\tSET(LMMS_HAVE_WEAKJACK TRUE)\n\t\tSET(STATUS_JACK \"OK (weak linking enabled)\")\n\t\tset(JACK_INCLUDE_DIRS \"\")\n\t\tset(JACK_LIBRARIES weakjack)\n\t\tSET(LMMS_HAVE_JACK TRUE)\n\t\tSET(LMMS_HAVE_JACK_PRENAME TRUE)\n\t\tSET(JACK_FOUND TRUE)\n\tELSE()\n\t\tPKG_CHECK_MODULES(JACK jack>=0.77)\n\t\tIF(JACK_FOUND)\n\t\t\tSET(LMMS_HAVE_JACK TRUE)\n\t\t\tSET(STATUS_JACK \"OK\")\n\t\t\tSET(CMAKE_REQUIRED_LIBRARIES_BACKUP \"${CMAKE_REQUIRED_LIBRARIES}\")\n\t\t\tSET(CMAKE_REQUIRED_LIBRARIES \"${JACK_LIBRARIES}\")\n\t\t\tCHECK_LIBRARY_EXISTS(jack jack_port_rename \"\" LMMS_HAVE_JACK_PRENAME)\n\t\t\tSET(CMAKE_REQUIRED_LIBRARIES \"${CMAKE_REQUIRED_LIBRARIES_BACKUP}\")\n\t\t\tUNSET(CMAKE_REQUIRED_LIBRARIES_BACKUP)\n\t\tENDIF()\n\tENDIF()\n\n\tIF(NOT JACK_FOUND)\n\t\tSET(JACK_INCLUDE_DIRS \"\")\n\t\tSET(STATUS_JACK \"not found\")\n\tENDIF()\nENDIF(WANT_JACK)\n\n# check for FFTW3F-library\nFIND_PACKAGE(FFTW COMPONENTS fftw3f REQUIRED)\n\n# check for FLTK\nset(FLTK_SKIP_OPENGL TRUE)\nset(FLTK_SKIP_FORMS TRUE)\nset(FLTK_SKIP_IMAGES TRUE)\nset(FLTK_SKIP_MATH TRUE)\nif(MINGW_PREFIX)\n\tset(FLTK_SKIP_FLUID TRUE)\nendif()\nFIND_PACKAGE(FLTK)\nIF(FLTK_FOUND)\n\tSET(STATUS_ZYN \"OK\")\nELSE()\n\tSET(STATUS_ZYN \"not found, please install fltk\")\nENDIF()\n\n# check for Fluidsynth\nIF(WANT_SF2)\n\tfind_package(FluidSynth 1.1.7)\n\tif(FluidSynth_FOUND)\n\t\tSET(LMMS_HAVE_FLUIDSYNTH TRUE)\n\t\tif(FluidSynth_VERSION_STRING VERSION_GREATER_EQUAL 2)\n\t\t\tset(STATUS_FLUIDSYNTH \"OK\")\n\t\telse()\n\t\t\tset(STATUS_FLUIDSYNTH \"OK (FluidSynth version < 2: per-note panning unsupported)\")\n\t\tendif()\n\telse()\n\t\tSET(STATUS_FLUIDSYNTH \"not found, libfluidsynth-dev (or similar)\"\n\t\t\t\"is highly recommended\")\n\tendif()\nENDIF(WANT_SF2)\n\n# check for libgig\nIf(WANT_GIG)\n\tPKG_CHECK_MODULES(GIG gig)\n\tIF(GIG_FOUND)\n\t\tSET(LMMS_HAVE_GIG TRUE)\n\t\tSET(STATUS_GIG \"OK\")\n\tELSE(GIG_FOUND)\n\t\tSET(STATUS_GIG \"not found, libgig needed for decoding .gig files\")\n\tENDIF(GIG_FOUND)\nENDIF(WANT_GIG)\n\n# check for pthreads\nIF(LMMS_BUILD_LINUX OR LMMS_BUILD_APPLE OR LMMS_BUILD_OPENBSD OR LMMS_BUILD_FREEBSD OR LMMS_BUILD_HAIKU)\n\tFIND_PACKAGE(Threads)\nENDIF(LMMS_BUILD_LINUX OR LMMS_BUILD_APPLE OR LMMS_BUILD_OPENBSD OR LMMS_BUILD_FREEBSD OR LMMS_BUILD_HAIKU)\n\n# check for sndio (roaraudio won't work yet)\nIF(WANT_SNDIO)\n\tFIND_PACKAGE(Sndio)\n\tIF(SNDIO_FOUND)\n\t\tSET(LMMS_HAVE_SNDIO TRUE)\n        \tSET(STATUS_SNDIO \"OK\")\n    \tELSE()\n        \tSET(STATUS_SNDIO \"<not found or not supported on this platform>\")\n\tENDIF(SNDIO_FOUND)\nENDIF(WANT_SNDIO)\n\n# check for WINE\nif(WANT_VST)\n\tif((WANT_VST_32 OR WANT_VST_64) AND NOT LMMS_BUILD_WIN32)\n\t\tfind_package(Wine)\n\t\tinclude(CheckWineGcc)\n\tendif()\n\tmacro(check_vst bits)\n\t\tif(NOT WANT_VST_${bits})\n\t\t\tset(STATUS_VST_${bits} \"Not built, as requested\")\n\t\telseif(LMMS_BUILD_WIN32)\n\t\t\tset(STATUS_VST_${bits} \"OK\")\n\t\t\tset(LMMS_HAVE_VST_${bits} TRUE)\n\t\telseif(NOT WINE_FOUND)\n\t\t\tset(STATUS_VST_${bits} \"not found, please install (lib)wine-dev (or similar) - 64 bit systems additionally need gcc-multilib and g++-multilib\")\n\t\telse()\n\t\t\tCheckWineGcc(\"${bits}\" \"${WINEGCC}\" WINEGCC_WORKING)\n\t\t\tif(WINEGCC_WORKING)\n\t\t\t\tset(LMMS_HAVE_VST_${bits} TRUE)\n\t\t\t\tif(WINE_LIBRARY_FIX)\n\t\t\t\t\tset(STATUS_VST_${bits} \"OK, with workaround linking ${WINE_LIBRARY_FIX}\")\n\t\t\t\telse()\n\t\t\t\t\tset(STATUS_VST_${bits} \"OK\")\n\t\t\t\tendif()\n\t\t\telse()\n\t\t\t\tset(STATUS_VST_${bits} \"winegcc fails to compile ${bits}-bit binaries, please make sure you have ${bits}-bit GCC libraries\")\n\t\t\tendif()\n\t\tendif()\n\tendmacro()\n\tcheck_vst(32)\n\tcheck_vst(64)\n\tif(LMMS_HAVE_VST_32 OR LMMS_HAVE_VST_64 OR LMMS_BUILD_LINUX)\n\t\tset(LMMS_HAVE_VST TRUE)\n\t\tset(STATUS_VST \"OK\")\n\telse()\n\t\tset(STATUS_VST \"No hosts selected and available\")\n\tendif()\nendif()\n\nIF(WANT_DEBUG_FPE)\n\tIF(LMMS_BUILD_LINUX OR LMMS_BUILD_APPLE)\n\t\tSET(LMMS_DEBUG_FPE TRUE)\n\t\tSET (STATUS_DEBUG_FPE \"Enabled\")\n\tELSE()\n\t\tSET (STATUS_DEBUG_FPE \"Wanted but disabled due to unsupported platform\")\n\tENDIF()\nELSE()\n\tSET (STATUS_DEBUG_FPE \"Disabled\")\nENDIF(WANT_DEBUG_FPE)\n\n# check for libsamplerate\nFIND_PACKAGE(Samplerate 0.1.8 MODULE REQUIRED)\n\nIF(NOT CMAKE_BUILD_TYPE)\n\tmessage(STATUS \"Setting build type to 'Release' as none was specified.\")\n\tset(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build.\" FORCE)\n\t# Set the possible values of build type for cmake-gui\n\tSET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\"\n\t\t\"MinSizeRel\" \"RelWithDebInfo\")\nENDIF()\n\nSET(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -DLMMS_DEBUG\")\nSET(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DLMMS_DEBUG\")\n\nif(CMAKE_VERSION VERSION_GREATER_EQUAL \"3.16\")\n\tset(NOOP_COMMAND \"${CMAKE_COMMAND}\" \"-E\" \"true\")\nelse()\n\tset(NOOP_COMMAND \"${CMAKE_COMMAND}\" \"-E\" \"echo\")\nendif()\nif(STRIP)\n\t# TODO CMake 3.19: Now that CONFIG generator expressions support testing for\n\t# multiple configurations, combine the OR into a single CONFIG expression.\n\tset(STRIP_COMMAND \"$<IF:$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>,${NOOP_COMMAND},${STRIP}>\")\nelse()\n\tset(STRIP_COMMAND \"${NOOP_COMMAND}\")\nendif()\n\n# people simply updating git will still have this and mess up build with it\nFILE(REMOVE include/lmmsconfig.h)\n\nFILE(GLOB LMMS_INCLUDES \"${CMAKE_SOURCE_DIR}/include/*.h\")\nLIST(SORT LMMS_INCLUDES)\n\n# Get list of all committers from git history, ordered by number of commits.\n# The CONTRIBUTORS file is used by AboutDialog. This information can be provided\n# with -DCONTRIBUTORS=/path/to/CONTRIBUTORS instead. For instance, to generate\n# this file for version 1.1.3, the command is:\n# \tgit shortlog -sne v1.1.3 | cut -c8-\nFIND_PACKAGE(Git)\nIF(GIT_FOUND AND NOT CONTRIBUTORS)\n\tSET(CONTRIBUTORS \"${CMAKE_BINARY_DIR}/CONTRIBUTORS\")\n\tEXECUTE_PROCESS(\n\t\tCOMMAND \"${GIT_EXECUTABLE}\" shortlog -sne\n\t\tCOMMAND cut -c8-\n\t\tOUTPUT_FILE \"${CONTRIBUTORS}\"\n\t\tWORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n\t\tTIMEOUT 1)\nENDIF()\n\n# we somehow have to make LMMS-binary depend on MOC-files\nADD_FILE_DEPENDENCIES(\"${CMAKE_BINARY_DIR}/lmmsconfig.h\")\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\" AND NOT WIN32)\n\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fPIC -DPIC\")\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIC -DPIC\")\nelseif(MSVC)\n\t# Use UTF-8 as the source and execution character set\n\tadd_compile_options(\"/utf-8\")\nENDIF()\n\n# add enabled sanitizers\nfunction(add_sanitizer sanitizer supported_compilers want_flag status_flag)\n\tif(${want_flag})\n\t\tif(CMAKE_CXX_COMPILER_ID MATCHES \"${supported_compilers}\")\n\t\t\tset(\"${status_flag}\" \"Enabled\" PARENT_SCOPE)\n\t\t\tstring(REPLACE \";\" \" \" additional_flags \"${ARGN}\")\n\t\t\t# todo CMake 3.13: use add_compile_options/add_link_options instead\n\t\t\tset(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -fsanitize=${sanitizer} ${additional_flags}\" PARENT_SCOPE)\n\t\t\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=${sanitizer} ${additional_flags}\" PARENT_SCOPE)\n\t\telse()\n\t\t\tset(\"${status_flag}\" \"Wanted but disabled due to unsupported compiler\" PARENT_SCOPE)\n\t\tendif()\n\telse()\n\t\tset(\"${status_flag}\" \"Disabled\" PARENT_SCOPE)\n\tendif()\nendfunction()\n\nadd_sanitizer(address \"GNU|Clang|MSVC\" WANT_DEBUG_ASAN STATUS_DEBUG_ASAN)\nadd_sanitizer(thread \"GNU|Clang\" WANT_DEBUG_TSAN STATUS_DEBUG_TSAN)\nadd_sanitizer(memory \"Clang\" WANT_DEBUG_MSAN STATUS_DEBUG_MSAN -fno-omit-frame-pointer)\n# UBSan does not link with vptr enabled due to a problem with references from PeakControllerEffect\n# not being found by PeakController\nadd_sanitizer(undefined \"GNU|Clang\" WANT_DEBUG_UBSAN STATUS_DEBUG_UBSAN -fno-sanitize=vptr)\n\n# Add warning and error flags\ninclude(ErrorFlags)\n\n# use ccache\ninclude(CompileCache)\n\n# make sub-directories\nADD_SUBDIRECTORY(cmake)\nADD_SUBDIRECTORY(src)\nADD_SUBDIRECTORY(plugins)\nADD_SUBDIRECTORY(tests)\nADD_SUBDIRECTORY(data)\nADD_SUBDIRECTORY(doc)\n\n# install tasks\nADD_SUBDIRECTORY(cmake/install)\n\nFIND_PACKAGE(UnixCommands)\nIF(GZIP)\n\tADD_CUSTOM_COMMAND(OUTPUT \"${CMAKE_BINARY_DIR}/lmms.1.gz\"\n\t\t\t\t\tCOMMAND ${GZIP} -c ${CMAKE_SOURCE_DIR}/doc/lmms.1 > ${CMAKE_BINARY_DIR}/lmms.1.gz\n\t\t\t\t\tDEPENDS \"${CMAKE_SOURCE_DIR}/doc/lmms.1\"\n\t\t\t\t\tCOMMENT \"Generating lmms.1.gz\"\n\t\t\t\t\tVERBATIM)\n\n\n\tADD_CUSTOM_TARGET(manpage ALL\n\t\t\t\t\tDEPENDS \"${CMAKE_BINARY_DIR}/lmms.1.gz\")\nELSEIF(UNIX)\n\tMESSAGE(FATAL_ERROR \"Can't find gzip required for generating lmms.1.gz\")\nENDIF()\n\n# install headers\n\nIF(LMMS_BUILD_LINUX)\n\tINSTALL(FILES ${LMMS_INCLUDES}\n\t\t\"${CMAKE_BINARY_DIR}/lmmsconfig.h\"\n\t\t\"${CMAKE_BINARY_DIR}/lmmsversion.h\"\n\t\t\"${CMAKE_SOURCE_DIR}/src/gui/embed.cpp\"\n\t\tDESTINATION \"${CMAKE_INSTALL_PREFIX}/include/lmms/\")\nENDIF(LMMS_BUILD_LINUX)\n\n#\n# add distclean-target\n#\nADD_CUSTOM_TARGET(distclean\n\t\t\tCOMMAND make clean\n\t\t\tCOMMAND rm -rf `find -name cmake_install.cmake` `find -name Makefile` `find -type d -name CMakeFiles` CMakeCache.txt lmmsconfig.h lmms.1.gz)\n\n#\n# add tarball-target\n#\nSET(TMP \"lmms-${VERSION}\")\nADD_CUSTOM_TARGET(dist\n\t\t\tCOMMAND make clean\n\t\t\tCOMMAND rm -rf \"${TMP}\"\n\t\t\tCOMMAND mkdir -p \"${TMP}\"\n\t\t\tCOMMAND cp CMakeLists.txt LICENSE.txt INSTALL.txt README.md \"${TMP}\"\n\t\t\tCOMMAND cp -r buildtools cmake data doc include plugins src \"${TMP}\"\n\t\t\tCOMMAND rm -rf `find \"${TMP}\" -name cmake_install.cmake` `find \"${TMP}\" -name Makefile` `find \"${TMP}\" -type d -name CMakeFiles` \"${TMP}/CMakeCache.txt\"\n\t\t\tCOMMAND tar cjf lmms-${VERSION}-src.tar.bz2 \"${TMP}\"\n\t\t\tCOMMAND rm -rf \"${TMP}\")\n\n\n#\n# add uninstall-target\n#\nADD_CUSTOM_TARGET(uninstall\n\tCOMMAND ${CMAKE_COMMAND} -DCMAKE_INSTALL_PREFIX=\"${CMAKE_INSTALL_PREFIX}\" -P \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/uninstall.cmake\"\n)\n\n#\n# display configuration information\n#\n\nMESSAGE(\"\\n\"\n\"Installation Summary\\n\"\n\"--------------------\\n\"\n\"* Install Directory           : ${CMAKE_INSTALL_PREFIX}\\n\"\n)\n\nMESSAGE(\n\"Supported audio interfaces\\n\"\n\"--------------------------\\n\"\n\"* ALSA                        : ${STATUS_ALSA}\\n\"\n\"* JACK                        : ${STATUS_JACK}\\n\"\n\"* OSS                         : ${STATUS_OSS}\\n\"\n\"* Sndio                       : ${STATUS_SNDIO}\\n\"\n\"* PortAudio                   : ${STATUS_PORTAUDIO}\\n\"\n\"* libsoundio                  : ${STATUS_SOUNDIO}\\n\"\n\"* PulseAudio                  : ${STATUS_PULSEAUDIO}\\n\"\n\"* SDL                         : ${STATUS_SDL}\\n\"\n)\n\nMESSAGE(\n\"Supported MIDI interfaces\\n\"\n\"-------------------------\\n\"\n\"* ALSA                        : ${STATUS_ALSA}\\n\"\n\"* OSS                         : ${STATUS_OSS}\\n\"\n\"* Sndio                       : ${STATUS_SNDIO}\\n\"\n\"* JACK                        : ${STATUS_JACK}\\n\"\n\"* WinMM                       : ${STATUS_WINMM}\\n\"\n\"* AppleMidi                   : ${STATUS_APPLEMIDI}\\n\"\n)\n\nMESSAGE(\n\"Supported file formats for project export\\n\"\n\"-----------------------------------------\\n\"\n\"* WAVE                        : OK\\n\"\n\"* FLAC                        : OK\\n\"\n\"* OGG/VORBIS                  : ${STATUS_OGGVORBIS}\\n\"\n\"* MP3/Lame                    : ${STATUS_MP3LAME}\\n\"\n)\n\nMESSAGE(\n\"Optional plugins\\n\"\n\"----------------\\n\"\n\"* Lv2 plugins                 : ${STATUS_LV2}\\n\"\n\"* SUIL for plugin UIs         : ${STATUS_SUIL}\\n\"\n\"* ZynAddSubFX instrument      : ${STATUS_ZYN}\\n\"\n\"* Carla Patchbay & Rack       : ${STATUS_CARLA}\\n\"\n\"* SoundFont2 player           : ${STATUS_FLUIDSYNTH}\\n\"\n\"* Sid instrument              : ${STATUS_SID}\\n\"\n\"* Stk Mallets                 : ${STATUS_STK}\\n\"\n\"* VST plugin host             : ${STATUS_VST}\\n\"\n\"  * 32-bit Windows host       : ${STATUS_VST_32}\\n\"\n\"  * 64-bit Windows host       : ${STATUS_VST_64}\\n\"\n\"* CALF LADSPA plugins         : ${STATUS_CALF}\\n\"\n\"* CAPS LADSPA plugins         : ${STATUS_CAPS}\\n\"\n\"* CMT LADSPA plugins          : ${STATUS_CMT}\\n\"\n\"* TAP LADSPA plugins          : ${STATUS_TAP}\\n\"\n\"* SWH LADSPA plugins          : ${STATUS_SWH}\\n\"\n\"* GIG player                  : ${STATUS_GIG}\\n\"\n)\n\nMESSAGE(\n\"Developer options\\n\"\n\"-----------------------------------------\\n\"\n\"* Debug FP exceptions               : ${STATUS_DEBUG_FPE}\\n\"\n\"* Debug using AddressSanitizer      : ${STATUS_DEBUG_ASAN}\\n\"\n\"* Debug using ThreadSanitizer       : ${STATUS_DEBUG_TSAN}\\n\"\n\"* Debug using MemorySanitizer       : ${STATUS_DEBUG_MSAN}\\n\"\n\"* Debug using UBSanitizer           : ${STATUS_DEBUG_UBSAN}\\n\"\n)\n\nMESSAGE(\n\"\\n\"\n\"-----------------------------------------------------------------\\n\"\n\"IMPORTANT:\\n\"\n\"after installing missing packages, remove CMakeCache.txt before\\n\"\n\"running cmake again!\\n\"\n\"-----------------------------------------------------------------\\n\"\n\"\\n\\n\")\n\nSET(CMAKE_INSTALL_SYSTEM_RUNTIME_DESTINATION \"${BIN_DIR}\")\nif(MSVC)\n\t# We can't set this on the install time according to the configuration\n\tSET(CMAKE_INSTALL_DEBUG_LIBRARIES TRUE)\n\tSET(CMAKE_INSTALL_UCRT_LIBRARIES TRUE)\nendif()\nINCLUDE(InstallRequiredSystemLibraries)\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 2.357421875,
          "content": "This project uses git submodules and several are required for a successful\nbuild.  If this tarball was NOT provided with submodules (default), some source\ndependencies will need to be manually added to src/3rdparty.\n\nIf this project WAS provided with submodules, there are detailed dependencies\n(e.g. supported compilers, cmake requirements, cross-compilation) at\ndoc/wiki/Compiling.md including platform-specific build instructions (e.g.\napt-get, dnf, pacman, etc).\n\nOnline documentation:\n\n   https://github.com/LMMS/lmms/wiki/\n\nLive online chat via Discord (similar to IRC):\n\n   https://lmms.io/chat, Channel #programming\n\nBasic build steps:\n\n   mkdir build\n   cd build\n   cmake ../\n   make\n   sudo make install\n   # or alternately: su -c 'make install'\n\nWith the above commands an out-of-tree build is performed. You can also run\n\"cmake .\" directly in the root of source tree although this is not recommended.\nWhen performing an out-of-tree build after there's already an in-tree build,\nmake sure to run \"make distclean\" before running cmake inside build-directory.\n\nIf you want to use custom compiler flags simply set the environment variables\nCFLAGS and CXXFLAGS.\n\nAfter running cmake (the 3rd command above) you can see a summary of things\nthat are going to be built into LMMS or built as plugins. Install the\naccording libraries and development files if a certain feature is not enabled.\nThen remove CMakeCache.txt and run cmake again.\n\nFor non-root installs, or to install to a non-standard location, provide an\ninstall prefix to cmake, using the flag:\n\n   -DCMAKE_INSTALL_PREFIX=<prefix>\n\nThe Compilation tutorial (see docs/wiki/Compilation.md)\nspecifically uses <prefix> as \"../target\" for all non-root installations.  This\nis strongly recommended if developing a patch or a feature.  For root\ninstallations, <prefix> can be /usr, /usr/local, /opt, etc. For most systems,\nthe default is /usr/local.\n\nIf your Qt5 installation does not reside in standard installation paths,\nadditionally pass:\n\n   -DCMAKE_PREFIX_PATH=<prefix>\n\nWhere <prefix> is the location to Qt5 installation, usually /opt/qt5/, etc.\n\nImportant wiki sections:\n\ndoc/wiki/Compiling.md:\n   Dependencies Detailed\n      - Build Toolchain (cmake)\n      - Compiler (gcc, clang)\n      - Libraries (required and optional dependencies)\n\ndoc/wiki/Dependencies-<platform>.md\n   Platform-specific dependencies (Windows, Ubuntu, Fedora, macOS, etc.)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0322265625,
          "content": "<div align=\"center\">\n\t<h1>\n\t<img src=\"https://raw.githubusercontent.com/LMMS/artwork/master/Icon%20%26%20Mimetypes/lmms-64x64.svg\" alt=\"LMMS Logo\"><br>LMMS\n\t</h1>\n\t<p>Cross-platform music production software</p>\n\t<p>\n\t\t<a href=\"https://lmms.io/\">Website</a>\n\t\tâ¦ï¸\n\t\t<a href=\"https://github.com/LMMS/lmms/releases\">Releases</a>\n\t\tâ¦ï¸\n\t\t<a href=\"https://github.com/LMMS/lmms/wiki\">Developer wiki</a>\n\t\tâ¦ï¸\n\t\t<a href=\"https://lmms.io/documentation\">User manual</a>\n\t\tâ¦ï¸\n\t\t<a href=\"https://lmms.io/showcase/\">Showcase</a>\n\t\tâ¦ï¸\n\t\t<a href=\"https://lmms.io/lsp/\">Sharing platform</a>\n\t</p>\n\t<p>\n\t\t<a href=\"https://github.com/LMMS/lmms/actions/workflows/build.yml\"><img src=\"https://github.com/LMMS/lmms/actions/workflows/build.yml/badge.svg\" alt=\"Build status\"></a>\n\t\t<a href=\"https://lmms.io/download\"><img src=\"https://img.shields.io/github/release/LMMS/lmms.svg?maxAge=3600\" \talt=\"Latest stable release\"></a>\n\t\t<a href=\"https://github.com/LMMS/lmms/releases\"><img src=\"https://img.shields.io/github/downloads/LMMS/lmms/total.svg?maxAge=3600\" alt=\"Overall downloads on Github\"></a>\n\t\t<a href=\"https://discord.gg/3sc5su7\"><img src=\"https://img.shields.io/badge/chat-on%20discord-7289DA.svg\" alt=\"Join the chat at Discord\"></a>\n\t\t<a href=\"https://www.transifex.com/lmms/lmms/\"><img src=\"https://img.shields.io/badge/localise-on_transifex-green.svg\"></a>\n\t</p>\n</div>\n\nWhat is LMMS?\n--------------\n\nLMMS is an open-source cross-platform digital audio workstation designed for music production. It includes an advanced Piano Roll, Beat Sequencer, Song Editor, and Mixer for composing, arranging, and mixing music. It comes with 15+ synthesizer plugins by default, along with VST(i) and SoundFont2 support.\n\nFeatures\n---------\n\n* Song-Editor for arranging melodies, samples, patterns, and automation\n* Pattern-Editor for creating beats and patterns\n* An easy-to-use Piano-Roll for editing patterns and melodies\n* A Mixer with unlimited mixer channels and arbitrary number of effects\n* Many powerful instrument and effect-plugins out of the box\n* Full user-defined track-based automation and computer-controlled automation sources\n* Compatible with many standards such as SoundFont2, VST(i), LADSPA, GUS Patches, and full MIDI support\n* MIDI file importing and exporting\n\nBuilding\n---------\n\nSee [Compiling LMMS](https://github.com/LMMS/lmms/wiki/Compiling)\n\nJoin LMMS-development\n----------------------\n\nIf you are interested in LMMS, its programming, artwork, testing, writing demo songs, (and improving this README...) or something like that, you're welcome to participate in the development of LMMS!\n\nInformation about what you can do and how can be found in the [wiki](https://github.com/LMMS/lmms/wiki).\n\nBefore coding a new big feature, please _always_ [file an issue](https://github.com/LMMS/lmms/issues/new) for your idea and suggestions about your feature and about the intended implementation on GitHub, or ask in one of the tech channels on Discord and wait for replies! Maybe there are different ideas, improvements, or hints, or maybe your feature is not welcome/needed at the moment.\n"
        },
        {
          "name": "buildtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 1.0869140625,
          "content": "{\n\t\"$schema\": \"https://raw.githubusercontent.com/microsoft/vcpkg-tool/main/docs/vcpkg.schema.json\",\n\t\"name\": \"lmms\",\n\t\"dependencies\": [\n\t\t{\n\t\t\t\"name\": \"fftw3\",\n\t\t\t\"default-features\": false,\n\t\t\t\"features\": [\n\t\t\t\t\"sse\",\n\t\t\t\t\"sse2\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"fltk\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"fluidsynth\",\n\t\t\t\"default-features\": false,\n\t\t\t\"features\": [\n\t\t\t\t\"sndfile\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"libogg\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"libsamplerate\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"libsndfile\",\n\t\t\t\"default-features\": false,\n\t\t\t\"features\": [\n\t\t\t\t\"external-libs\",\n\t\t\t\t\"mpeg\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"libstk\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"libvorbis\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lilv\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"lv2\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"mp3lame\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"portaudio\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sdl2\",\n\t\t\t\"default-features\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"zlib\",\n\t\t\t\"default-features\": false\n\t\t}\n\t]\n}\n"
        }
      ]
    }
  ]
}