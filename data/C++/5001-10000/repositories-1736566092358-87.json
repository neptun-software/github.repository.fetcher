{
  "metadata": {
    "timestamp": 1736566092358,
    "page": 87,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "draios/sysdig",
      "stars": 7827,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": "build*\n.*\ndocker/*/Dockerfile"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2314453125,
          "content": "*.o\n*.ko\n*.ko.unsigned\n*.cmd\n*.symvers\n*.order\n*.mod\n*.mod.c\n*.o.d\n*.o.rc\n*.o.ur-safe\n/build/\ndriver/Makefile\ndriver/driver_config.h\n*.pyc\n*.config\n*.creator\n*.creator.user*\n*.files\n*.includes\n*.pro.user\n*.ll\n.vscode\n.cache.mk\n/build-*\n\n"
        },
        {
          "name": "CMakeCPackOptions.cmake",
          "type": "blob",
          "size": 0.716796875,
          "content": "#\n# Copyright (C) 2013-2018 Draios Inc dba Sysdig.\n#\n# This file is part of sysdig .\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nif(CPACK_GENERATOR MATCHES \"TGZ\")\n\tset(CPACK_SET_DESTDIR \"ON\")\n\tset(CPACK_STRIP_FILES \"OFF\")\nendif()\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.8828125,
          "content": "#\n# Copyright (C) 2013-2018 Draios Inc dba Sysdig.\n#\n# This file is part of sysdig .\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Prior to doing anything, we make sure that we aren't trying to\n# run cmake in-tree. (see Issue 71: https://github.com/draios/sysdig/issues/71)\nif(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/CMakeLists.txt)\n\tmessage(FATAL_ERROR\n\t\t\"Looks like you are trying to run cmake from the base sysdig source directory.\\n\"\n\t\t\"** RUNNING CMAKE FROM THE BASE SYSDIG DIRECTORY WILL NOT WORK **\\n\"\n\t\t\"To Fix:\\n\"\n\t\t\" 1. Remove the CMakeCache.txt file in this directory. ex: rm CMakeCache.txt\\n\"\n\t\t\" 2. Create a build directory from here. ex: mkdir build\\n\"\n\t\t\" 3. cd into that directory. ex: cd build\\n\"\n\t\t\" 4. Run cmake from the build directory. ex: cmake ..\\n\"\n\t\t\" 5. Run make from the build directory. ex: make\\n\"\n\t\t\"Full paste-able example:\\n\"\n\t\t\"( rm -f CMakeCache.txt; mkdir build; cd build; cmake ..; make )\\n\"\n\t\t\"The following wiki page has more information on manually building sysdig: http://bit.ly/1oJ84UI\")\nendif()\n\ncmake_minimum_required(VERSION 3.5.1)\n\nproject(sysdig)\n\noption(MINIMAL_BUILD \"Produce a minimal sysdig binary with only the essential features (no eBPF probe driver, no kubernetes, no mesos, no marathon and no container metadata)\" OFF)\noption(MUSL_OPTIMIZED_BUILD \"Enable if you want a musl optimized build\" OFF)\noption(USE_BUNDLED_DEPS \"Enable bundled dependencies instead of using the system ones\" ON)\n\n# Add path for custom CMake modules.\nlist(APPEND CMAKE_MODULE_PATH\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules\")\n\nif(NOT DEFINED SYSDIG_VERSION)\n\tset(SYSDIG_VERSION \"0.0.0-dev\")\nendif()\n\nif(${SYSDIG_VERSION} STREQUAL \"dev\")\n\tset(SYSDIG_VERSION \"0.0.0-dev\")\nendif()\n\nif(NOT DEFINED DIR_ETC)\n\tset(DIR_ETC \"${CMAKE_INSTALL_PREFIX}/etc\")\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n\tSET(CMAKE_BUILD_TYPE Release)\nendif()\n\nset(PACKAGE_NAME \"sysdig\")\n\nadd_definitions(-DPLATFORM_NAME=\"${CMAKE_SYSTEM_NAME}\")\nif(NOT DEFINED CHISEL_TOOL_LIBRARY_NAME)\n\tset(CHISEL_TOOL_LIBRARY_NAME \"sysdig\")\nendif()\nadd_definitions(-DCHISEL_TOOL_LIBRARY_NAME=\"${CHISEL_TOOL_LIBRARY_NAME}\")\n\noption(BUILD_WARNINGS_AS_ERRORS \"Enable building with -Wextra -Werror flags\")\n\nif(APPLE)\n\tset(MINIMAL_BUILD ON)\nendif()\n\nif(MINIMAL_BUILD)\n  set(MINIMAL_BUILD_FLAGS \"-DMINIMAL_BUILD\")\nendif()\n\nif(MUSL_OPTIMIZED_BUILD)\n\tset(SYSDIG_MUSL_FLAGS \"-static -Os\")\nendif()\n\nif(NOT WIN32)\n\n\tset(SYSDIG_DEBUG_FLAGS \"-D_DEBUG\")\n\tset(CMAKE_COMMON_FLAGS \"-Wall -ggdb ${MINIMAL_BUILD_FLAGS} ${SYSDIG_MUSL_FLAGS}\")\n\n\tif(BUILD_WARNINGS_AS_ERRORS)\n\t\tset(CMAKE_SUPPRESSED_WARNINGS \"-Wno-unused-parameter -Wno-missing-field-initializers -Wno-sign-compare -Wno-type-limits -Wno-implicit-fallthrough -Wno-format-truncation\")\n\t\tset(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -Wextra -Werror ${CMAKE_SUPPRESSED_WARNINGS}\")\n\tendif()\n\n\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${CMAKE_COMMON_FLAGS}\")\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CMAKE_COMMON_FLAGS} -std=c++17\")\n\n\tset(CMAKE_C_FLAGS_DEBUG \"${SYSDIG_DEBUG_FLAGS}\")\n\tset(CMAKE_CXX_FLAGS_DEBUG \"${SYSDIG_DEBUG_FLAGS}\")\n\n\tset(CMAKE_C_FLAGS_RELEASE \"-O3 -fno-strict-aliasing -DNDEBUG\")\n\tset(CMAKE_CXX_FLAGS_RELEASE \"-O3 -fno-strict-aliasing -DNDEBUG\")\n\n\tif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n\t\t\tset(KBUILD_FLAGS \"${SYSDIG_DEBUG_FLAGS} ${SYSDIG_FEATURE_FLAGS}\")\n\t\telse()\n\t\t\tset(KBUILD_FLAGS \"${SYSDIG_FEATURE_FLAGS}\")\n\t\tendif()\n\n\t\tset(SCAP_HOST_ROOT_ENV_VAR_NAME \"HOST_ROOT\")\n\t\tset(DRIVER_PACKAGE_NAME \"scap\")\n\n\t\tadd_definitions(-DHAS_CAPTURE)\n\tendif()\n\n\tif(CMAKE_SYSTEM_NAME MATCHES \"SunOS\")\n\t\tset(CMD_MAKE gmake)\n\telse()\n\t\tset(CMD_MAKE make)\n\tendif()\n\nelse()\n\tset(MINIMAL_BUILD ON)\n\n\tset(SYSDIG_FLAGS_WIN \"-D_CRT_SECURE_NO_WARNINGS -DWIN32 -DMINIMAL_BUILD /EHsc /W3 /Zi\")\n\n\tif(CMAKE_VERSION VERSION_LESS 3.15.0)\n\t\tset(SYSDIG_FLAGS_WIN_DEBUG \"/MTd /Od\")\n\t\tset(SYSDIG_FLAGS_WIN_RELEASE \"/MT\")\n\telse()\n\t\tset(SYSDIG_FLAGS_WIN_DEBUG \"/Od\")\n\t\tset(SYSDIG_FLAGS_WIN_RELEASE \"\")\n\tendif()\n\n\tset(CMAKE_C_FLAGS \"${SYSDIG_FLAGS_WIN}\")\n\tset(CMAKE_CXX_FLAGS \"${SYSDIG_FLAGS_WIN}\")\n\n\tset(CMAKE_C_FLAGS_DEBUG \"${SYSDIG_FLAGS_WIN_DEBUG}\")\n\tset(CMAKE_CXX_FLAGS_DEBUG \"${SYSDIG_FLAGS_WIN_DEBUG}\")\n\n\tset(CMAKE_C_FLAGS_RELEASE \"${SYSDIG_FLAGS_WIN_RELEASE}\")\n\tset(CMAKE_CXX_FLAGS_RELEASE \"${SYSDIG_FLAGS_WIN_RELEASE}\")\nendif()\n\n# Modern BPF is not supported on not Linux systems and in MINIMAL_BUILD\nif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\toption(BUILD_SYSDIG_MODERN_BPF \"Build modern BPF support for Sysdig\" ON)\n\tif(BUILD_SYSDIG_MODERN_BPF)\n\t\tadd_definitions(-DHAS_MODERN_BPF)\n\tendif()\nendif()\n\nif(NOT DEFINED SYSDIG_COMPONENT_NAME)\n    set(SYSDIG_COMPONENT_NAME \"${CMAKE_PROJECT_NAME}\")\nendif()\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_EXTENSIONS OFF)\nif(MSVC OR WIN32)\n\tadd_compile_definitions(_HAS_STD_BYTE=0)\nendif()\n\ninclude(falcosecurity-libs)\ninclude(yaml-cpp)\ninclude(nlohmann-json)\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\tif(NOT DEFINED DRIVER_VERSION)\n\t\tset(DRIVER_VERSION \"${FALCOSECURITY_LIBS_VERSION}\")\n\tendif()\n\n\tif(NOT DEFINED DRIVER_NAME)\n\t\tset(DRIVER_NAME \"scap\")\n\tendif()\n\n\tset(DRIVERS_REPO \"https://download.sysdig.com/scap-drivers\")\n\t\n\t# If no path is provided, try to search the BPF probe in: `home/.falco/falco-bpf.o`\n\t# This is the same fallback that we had in the libraries: `SCAP_PROBE_BPF_FILEPATH`.\n\tset(SYSDIG_PROBE_BPF_FILEPATH \".${DRIVER_NAME}/${DRIVER_NAME}-bpf.o\")\n\tadd_definitions(-DSYSDIG_PROBE_BPF_FILEPATH=\"${SYSDIG_PROBE_BPF_FILEPATH}\")\n\n\tadd_subdirectory(scripts)\nendif()\n\nadd_subdirectory(userspace/sysdig)\n\nset(CPACK_PACKAGE_NAME \"${PACKAGE_NAME}\")\nset(CPACK_PACKAGE_VENDOR \"Sysdig Inc.\")\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"sysdig, a system-level exploration and troubleshooting tool\")\nset(CPACK_PACKAGE_DESCRIPTION_FILE \"${PROJECT_SOURCE_DIR}/scripts/description.txt\")\nset(CPACK_PACKAGE_VERSION \"${SYSDIG_VERSION}\")\nset(CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_SYSTEM_PROCESSOR}\")\nset(CPACK_PROJECT_CONFIG_FILE \"${PROJECT_SOURCE_DIR}/CMakeCPackOptions.cmake\")\nset(CPACK_STRIP_FILES \"ON\")\n\nif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL \"x86_64\")\n\tset(CPACK_DEBIAN_PACKAGE_ARCHITECTURE \"amd64\")\nendif()\nif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL \"aarch64\")\n\tset(CPACK_DEBIAN_PACKAGE_ARCHITECTURE \"arm64\")\nendif()\n\nif(WIN32)\n\tset(CPACK_GENERATOR \"NSIS\") # this needs NSIS installed, and available\nelseif (APPLE)\n\tset(CPACK_GENERATOR \"DragNDrop\")\nelse()\n\tset(CPACK_GENERATOR DEB RPM TGZ)\nendif()\n\n# Built packages will include only the following components\nset(CPACK_INSTALL_CMAKE_PROJECTS\n  \"${CMAKE_CURRENT_BINARY_DIR};${SYSDIG_COMPONENT_NAME};${SYSDIG_COMPONENT_NAME};/\"\n)\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\tlist(APPEND CPACK_INSTALL_CMAKE_PROJECTS \"${CMAKE_CURRENT_BINARY_DIR};${DRIVER_COMPONENT_NAME};${DRIVER_COMPONENT_NAME};/\")\n\tset(CPACK_DEBIAN_PACKAGE_MAINTAINER \"Sysdig <support@sysdig.com>\")\n\tset(CPACK_DEBIAN_PACKAGE_SECTION \"utils\")\n\tset(CPACK_DEBIAN_PACKAGE_HOMEPAGE \"http://www.sysdig.com\")\n\tset(CPACK_DEBIAN_PACKAGE_DEPENDS \"dkms (>= 2.1.0.0)\")\n\tset(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${CMAKE_BINARY_DIR}/scripts/debian/postinst;${CMAKE_BINARY_DIR}/scripts/debian/prerm\")\n\n\tset(CPACK_RPM_PACKAGE_LICENSE \"Apache v2.0\")\n\tset(CPACK_RPM_PACKAGE_URL \"http://www.sysdig.com\")\n\tset(CPACK_RPM_PACKAGE_REQUIRES \"dkms, gcc, make, kernel-devel, perl\")\n\tset(CPACK_RPM_POST_INSTALL_SCRIPT_FILE \"${CMAKE_BINARY_DIR}/scripts/rpm/postinstall\")\n\tset(CPACK_RPM_PRE_UNINSTALL_SCRIPT_FILE \"${CMAKE_BINARY_DIR}/scripts/rpm/preuninstall\")\n\tset(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION /usr/src /usr/share/man /usr/share/man/man8)\nendif()\n\ninclude(CPack)\n"
        },
        {
          "name": "CMakeListsGtestInclude.cmake",
          "type": "blob",
          "size": 1.03515625,
          "content": "#\n# Copyright (C) 2019 Sysdig Inc.\n#\n# This file is part of sysdig .\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ncmake_minimum_required(VERSION 2.8.2)\n\nproject(googletest-download NONE)\n\ninclude(ExternalProject)\nExternalProject_Add(googletest\n  GIT_REPOSITORY    https://github.com/google/googletest.git\n  GIT_TAG           main\n  SOURCE_DIR        \"${CMAKE_CURRENT_BINARY_DIR}/googletest-src\"\n  BINARY_DIR        \"${CMAKE_CURRENT_BINARY_DIR}/googletest-build\"\n  CONFIGURE_COMMAND \"\"\n  BUILD_COMMAND     \"\"\n  INSTALL_COMMAND   \"\"\n  TEST_COMMAND      \"\"\n)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.7802734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nWe as maintainers, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nProject maintainers are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nProject maintainers have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[opensource+coc@sysdig.com](mailto:opensource+coc@sysdig.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll project maintainers are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nProject maintainers will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 11.17578125,
          "content": "The contents of the driver/ subdirectory are licensed separately--see COPYING.driver.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICES",
          "type": "blob",
          "size": 1.00390625,
          "content": "Copyright (C) 2013-2018 Draios Inc. dba Sysdig\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSYSDIG SUBCOMPONENTS:\n\n-The following files are under Apache 2.0:\n\n          userspace/sysdig/chisels/fileslower.lua, Copyright (C) 2014 Brendan Gregg\n          userspace/sysdig/chisels/memcachelog.lua, Copyright (C) 2015 Donatas Abraitis\n          userspace/sysdig/chisels/subsecoffset.lua, Copyright (C) 2013-2014 Draios Inc. dba Sysdig, Copyright (C) 2015 Brendan Gregg\n          userspace/sysdig/chisels/v_backlog.lua, Copyright (C) Donatas Abraitis\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4951171875,
          "content": "sysdig\n======\n[![CI Build](https://github.com/draios/sysdig/actions/workflows/ci.yaml/badge.svg)](https://github.com/draios/sysdig/actions/workflows/ci.yaml) ![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/draios/sysdig)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/draios/sysdig/dev/img/logo_large.png\" width=\"360\"></p>\n<p align=\"center\"><b>Dig Deeper</b></p>\n\n<hr>\n\n**Sysdig** is a universal system visibility tool with native support for containers:  \n`~$ sysdig`\n\n**Csysdig** is a simple, intuitive, and fully customizable curses UI for sysdig:  \n`~$ csysdig`\n\nGetting Started\n---\n\nRun Sysdig in a container:\n\n```\nsudo docker run --rm -i -t --privileged --net=host \\\n    -v /var/run/docker.sock:/host/var/run/docker.sock \\\n    -v /dev:/host/dev \\\n    -v /proc:/host/proc:ro \\\n    -v /boot:/host/boot:ro \\\n    -v /src:/src \\\n    -v /lib/modules:/host/lib/modules:ro \\\n    -v /usr:/host/usr:ro \\\n    -v /etc:/host/etc:ro \\\n    docker.io/sysdig/sysdig\n```\n\nAnd then run the `sysdig` or `csysdig` tool from the container shell!\n\nOr install the [latest release](https://github.com/draios/sysdig/releases/latest) with a `deb` or `rpm` package for your distribution.\n\nWhat does sysdig do and why should I use it?\n---\n**Sysdig is a simple tool for deep system visibility, with native support for containers.**\n\nThe best way to understand sysdig is to [try it](https://github.com/draios/sysdig/wiki/How-to-Install-Sysdig-for-Linux) - its super easy! Or here's a quick video introduction to csysdig, the simple, intuitive, and fully customizable curses-based UI for sysdig: https://www.youtube.com/watch?v=UJ4wVrbP-Q8\n\nFar too often, system-level monitoring and troubleshooting still involves logging into a machine with SSH and using a plethora of dated tools with very inconsistent interfaces. And many of these classic Linux tools breakdown completely in containerized environments. Sysdig unites your Linux toolkit into a single, consistent, easy-to-use interface. And sysdig's unique architecture allows deep inspection into containers, right out of the box, without having to instrument the containers themselves in any way.\n\nSysdig instruments your physical and virtual machines at the OS level by installing into the Linux kernel and capturing system calls and other OS events. Sysdig also makes it possible to create trace files for system activity, similarly to what you can do for networks with tools like tcpdump and Wireshark. This way, problems can be analyzed at a later time, without losing important information. Rich system state is stored in the trace files, so that the captured activity can be put into full context.\n\nThink about sysdig as strace + tcpdump + htop + iftop + lsof + ...awesome sauce.\n\nDocumentation / Support\n---\n[Visit the wiki](https://github.com/draios/sysdig/wiki) for full documentation on sysdig and its APIs.  \n\nFor support using sysdig, please contact [the official mailing list](https://groups.google.com/forum/#!forum/sysdig).  \n\nJoin the Community\n---\n* Contact the [official mailing list](https://groups.google.com/forum/#!forum/sysdig) for support and to talk with other users\n* Follow us on [Twitter](https://twitter.com/sysdig)\n* This is our [blog](https://sysdig.com/blog/). There are many like it, but this one is ours.\n* Join our [Public Slack](https://slack.sysdig.com) channel for sysdig announcements and discussions.\n\nOur [code of conduct](CODE_OF_CONDUCT.md) applies across all our projects and community places.\n\nLicense Terms\n---\nThe sysdig userspace programs and supporting code are licensed to you under the [Apache 2.0](./COPYING) open source license.\n\nDeveloper Certification of Origin (DCO)\n---\nThe Apache 2.0 license tells you what rights you have that are provided by the copyright holder. It is important that the contributor fully understands what rights they are licensing and agrees to them. Sometimes the copyright holder isn't the contributor, such as when the contributor is doing work on behalf of a company.\n\nTo make a good faith effort to ensure these criteria are met, we require the Developer Certificate of Origin (DCO) process to be followed.\n\nThe DCO is an attestation attached to every contribution made by every developer. In the commit message of the contribution, the developer simply adds a Signed-off-by statement and thereby agrees to the DCO, which you can find at http://developercertificate.org.\n\n### DCO Sign-Off Methods\nThe DCO requires a sign-off message in the following format appear on each commit in the pull request:\n\n```\nSigned-off-by: John Doe <john.doe@sysdig.com>\n```\n\nYou have to use your real name (sorry, no pseudonyms or anonymous contributions).\n\nThe DCO text can either be manually added to your commit body, or you can add either `-s` or `--signoff` to your usual `git commit` commands. If you are using the GitHub UI to make a change, you can add the sign-off message directly to the commit message when creating the pull request. If you forget to add the sign-off you can also amend a previous commit with the sign-off by running `git commit --amend -s`. If you've pushed your changes to GitHub already you'll need to force push your branch after this with `git push -f`.\n\nCommercial Support\n---\nInterested in a fully supported, fully distributed version of sysdig? Check out [Sysdig Monitor](https://sysdig.com/products/monitor/)!\n\nOpen source sysdig is proudly supported by [Sysdig Inc](https://sysdig.com/company/).  \n\nInterested in what we're doing? [Sysdig is hiring](https://sysdig.com/jobs/).\n\nReporting a vulnerability\n---\nPlease refer to [SECURITY.md](SECURITY.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1494140625,
          "content": "# Security Policy\n\nIf you have a security issue to report, please contact us at [opensource+security@sysdig.com](mailto:opensource+security@sysdig.com).\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "coding_conventions.md",
          "type": "blob",
          "size": 6.1748046875,
          "content": "0 Introduction\n------\n\nSysdig strives for a consistent high quality code base and uses the conventions \nbelow.  If you are going to commit code that doesn't follow them, then you put the\nwork on us. :-(.\n\nIf you use vim or emacs, you can put a custom configuration file in the base\ndirectory of sysdig in order to follow the conventions.\n\nAlso, note that the conventions in this file apply **strictly to the userspace** part \nof sysdig. For the kernel code, you should refer to \nhttps://www.kernel.org/doc/html/latest/process/coding-style.html\nand always run checkpatch.pl from the kernel tree before submitting pull requests.\n\nThanks for your attention and time.\n\n1 Curly Braces\n------\n\nEvery curly brace (\"{\" and \"}\") should go on its own line.\n\nExample:\n\n    if(a == 0)\n    {\n      b = 1;\n    }\n\n2 If and for statements\n------\n\nEvery `if` and `for` statement should have the curly braces.\n\nExample:\n\n    if(a == 0)\n    {\n      b = 1;\n    }\n\nand not\n\n    if(a == 0) \n      b = 1;\n\n3 Whitespace usage\n------\n\nSpaces are used in the following way:\n\n    int32_t foo(int32_t a, int32_t b)\n    {\n      for(j = 0; j < 10; j++)\n      {\n        foo(a, b);\n      }\n    }\n\nNote that:\n\n * in a function declaration, there is no space between the function name and the \"(\".\n * in a function declaration, there is no space between the \"(\" and the first parameter.\n * in a statement (e.g `for`, `while`...), there is no space between the \"for\" and the \"(\".\n * in a statement (e.g `for`), there is no space between the \"(\" and the variable name.\n * in a function call, there is no space between the function name and the \"(\".\n * in a function call, there is no space between the \"(\" and the first parameter.\n * \",\" and \";\" work like in English: there should be a space after them.\n\n4 Primitive types\n------\n\nFor portability reasons, please use the standard C99 types instead of the native C types\nlike `int` and `long`. C99 types types will be available in all the user level sysdig \nsource files:\n\nExample:\n\n    int32_t foo;\n\n5 Commenting Style\n------\n\nComments should be in the C++ style so we can use `/* */` to quickly remove \nportions of code during development.\n\nExample:\n\n    // this is a comment\n\n6 Commenting Content\n------\n\nCode comments work in the following 2-level way:\n\n * A three-line comment should document what the code does and give higher level explanations.\n * A one line comment should detail single code lines or explain specific actions.\n\nExample:\n\n    //\n    // Swap two variables\n    //\n    int a = 1, b = 2, t;\n\n    // make a copy of a\n    t = a;\n\n    // perform the swap\n    a = b;\n    b = t;\n\n7 Class variables\n------\n\nIn order to know whether a variable belongs to a `class` or a `function` we start member variables with \"`m_`\".\n\nExample:\n\n    public int32_t m_counter;\n\n8 Global variables\n------\n\nSimilarly, in order to know whether the variable is global or not, we start\nglobals with \"`g_`\".\n\nExample:\n\n    int g_nplugins;\n\n9 Capitalization\n------\n\nThe naming convention is camel-cased \"Unix\" style, i.e. always lower case. Words are separated by underscores.\n\nExample:\n\n    int32_t g_global_bean_counter;\n\n    int32_t count_beans();\n\nand not,\n\n    int32_t GlobalBeanCounter;\n\n10 Packed Structures\n-------\nPacked structures should use the GCC and MSVC-style supported `pragma`:\n\n    #pragma pack(push,1)\n    struct frame_control\n    {\n        struct fields....\n    };\n    #pragma pack(pop)\n\n11 OS-specific macros\n-------\n\nThere's an online wiki which enumerates the different macros for compilers, operating systems, and architectures.\nIt's available at [http://sourceforge.net/p/predef/wiki/Home/](http://sourceforge.net/p/predef/wiki/Home/). Generally speaking we use the operating system page: [http://sourceforge.net/p/predef/wiki/OperatingSystems/](http://sourceforge.net/p/predef/wiki/OperatingSystems/).\n\t\n12 64-bit constants\n-------\n\nPut an \"LL\" at the end of your 64 bit constants. Without the LL, on some platforms the compiler tries to interpret the constant on the right hand side \nas a long integer instead of a long long and in some platform this generate an error at building time.\n\nExample:\n\n    x=0X00FF00000000000LL\n\n13 Class Declaration \n-------\n\nClass declarations follow the following sequence\n\n  1. constructors and destructor\n  1. public functions\n  1. public data\n  1. private functions\n  1. private data\n  1. friend declarations \n\nExample:\n\n    class foo\n    {\n    public:\n      foo();\n      ~foo();\n\n      int32_t lonli();\t\n      int32_t m_val;\n\n    private:\n      int32_t temustra();\t\n      int32_t m_val2;\n    };\n\n14 Struct guidelines\n-------\n\nWe think hiding the presence of a pointer makes the code unnecessarily\nambiguous and more difficult. \n\nSeeing a * in a variable declaration immediately identifies a pointer, which\nis easier to mentally keep track of!\n\nAlso we think that defining the struct as a typedef makes forward declarations\nclunky and find using the C++ style when declaring our structs makes our\nlives easier.\n\n    //\n    // Us human parsers find this confusing.\n    //\n    typedef struct _my_struct\n    {\n      u_int16\tm_field;\n    } my_struct, \n    *p_my_struct;\n\n    //\n    // This is easier!\n    //\n    struct my_struct {\n      u_int16\tm_field;\n    };\n\n\n15 Temporary variables \n-------\n\nSince \"j\" is used less frequently in english prose than \"a\" or \"i\", we find \nthat these variables (in hierarchical order) are great for counters: j, k, l, \nm, n.\n\nExample:\n\n    int32_t j,k;\n    for(j = 0; j < 10; j++)\n    {\n      for(k = 0; k < 10; k++)\n      {\n        int32_t foo = j + k;\n      }\n    }\n\nas opposed to:\n\n    int32_t i,counter;\n    for(i = 0; i < 10; i++)\n    {\n      for(counter = 0; counter < 10; counter++)\n      {\n        int32_t foo = i + counter;\n      }\n    }\n\n16 Error management \n-------\n\nError management inside libscap is done through return values, since the scap \nlibrary is written in C.\nError management in the rest of the sysdig user level code base is done through\nexceptions. We know there's a lot of debate between return values and \nexceptions. We decided to pick the latter, so please stick with that.\n\n## You Made It!\n\nPhew! That's it. Thanks!\n\nIf we've left anything in the open, feel free to contact us and we'll be happy\nto get back to you.  Also, you can look at the existing code and see how it's\ndone.\n\nHave a good one!\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "probe-builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "userspace",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}