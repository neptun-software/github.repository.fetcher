{
  "metadata": {
    "timestamp": 1736566214267,
    "page": 225,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "leela-zero/leela-zero",
      "stars": 5389,
      "defaultBranch": "next",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.185546875,
          "content": "leelaz\n*.o\n*.d\n.vscode/settings.json\ntraining/tf/leelalogs\ntraining/tf/checkpoint\ntraining/tf/venv\nleelaz-model*\n*.orig\nleelaz_opencl_tuning\n/build-autogtp-*\n/build-validation-*\n.vs/\nbuild/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1728515625,
          "content": "[submodule \"gtest\"]\n\tpath = gtest\n\turl = https://github.com/google/googletest.git\n[submodule \"src/Eigen\"]\n\tpath = src/Eigen\n\turl = https://github.com/eigenteam/eigen-git-mirror\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.65625,
          "content": "sudo: required\n\nlanguage: cpp\nservices:\n  - docker\n\nbefore_install:\n  - docker pull ubuntu:16.04\n  - docker build -f Dockerfiles/Dockerfile.base -t leela-zero:base .\n\njobs:\n  include:\n    - stage: test\n      script:\n      - docker build -f Dockerfiles/Dockerfile.gpu -t leela-zero:gpu .\n      - docker run leela-zero:gpu\n    - script:\n      - docker build -f Dockerfiles/Dockerfile.gpu-blas -t leela-zero:gpu-blas .\n      - docker run leela-zero:gpu-blas\n    - script:\n      - docker build -f Dockerfiles/Dockerfile.cpu -t leela-zero:cpu .\n      - docker run leela-zero:cpu\n    - script:\n      - docker build -f Dockerfiles/Dockerfile.cpu-blas -t leela-zero:cpu-blas .\n      - docker run leela-zero:cpu-blas\n    - script:\n      - docker build -f Dockerfiles/Dockerfile.tests -t leela-zero:tests .\n      - docker run leela-zero:tests\n    - script:\n      - docker build -f Dockerfiles/Dockerfile.tests-blas -t leela-zero:tests-blas .\n      - docker run leela-zero:tests-blas\n    - stage: style\n      before_install:\n      script: find . -regex \".*\\.\\(cpp\\|h\\|hpp\\)\" -not -regex \".*moc_.*.cpp\" -not -path \"./gtest/*\" -not -path \"./training/*\" -not -path \"./src/half/*\" -not -path \"./src/CL/*\" -not -path \"./src/Eigen/*\" | xargs python2 scripts/cpplint.py --filter=-build/c++11,-build/include,-build/include_order,-build/include_what_you_use,-build/namespaces,-readability/braces,-readability/casting,-readability/fn_size,-readability/namespace,-readability/todo,-runtime/explicit,-runtime/indentation_namespace,-runtime/int,-runtime/references,-whitespace/blank_line,-whitespace/braces,-whitespace/comma,-whitespace/comments,-whitespace/empty_loop_body,-whitespace/line_length,-whitespace/semicolon\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.732421875,
          "content": "Gian-Carlo Pascutto\nSeth Troisi\nHenrik Forstén\nTFiFiE\nJunhee Yoo\nMarco Calignano\nAndy Olsen\nHersmunch\nBood Qian\nPeter Wen\nywrt\nArseny Krasutsky\nearthengine\nJonathan Roy\nMankit Pong\nmichael\nBarry G Becker\nJunyan Xu\nMaks Kolman\nkuba97531\nAntti Korhonen\nChin-Chang Yang\nXingcan LAN\nbittsitt\ntux3\n5525345551\nAdrian Petrescu\nAkita Noek\nAlderi-Tokori\nAlexander Taylor\nAncalagon\nAshley Griffiths\nBarry Becker\nEd Lee\nEddh\nF. Huizinga\nFFLaguna\nJiannan Liu\nJoe Ren\nLL145\nMark Andrew Gerads\nNate\nOmnipotentEntity\nPrzemek Wesołek\nSebastian H\nShen-Ta Hsieh(BestSteve)\nVirgile Andreani\nXimin Luo\nZenStone\nZhenzhen Zhan\nafalturki\nbetterworld\ncheshirecats\ndbosst\nfohristiwhirl\ngaieepo\nncaq\ntterava\nwonderingabout\nzediir\nzliu1022\nПахотин Иван\nGoogle LLC\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.8515625,
          "content": "# This file is part of Leela Zero.\n# Copyright (C) 2017 Marco Calignano\n# Copyright (C) 2017-2019 Gian-Carlo Pascutto and contributors\n# Leela Zero is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n# Leela Zero is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# You should have received a copy of the GNU General Public License\n# along with Leela Zero.  If not, see <http://www.gnu.org/licenses/>.\n\ncmake_minimum_required(VERSION 3.1)\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules/\")\ninclude(GNUInstallDirs)\n\nproject(leelaz)\nadd_subdirectory(gtest EXCLUDE_FROM_ALL) # We don't want to install gtest, exclude it from `all`\n\n# Required Packages\nset(Boost_MIN_VERSION \"1.58.0\")\nset(Boost_USE_MULTITHREADED ON)\nfind_package(Boost 1.58.0 REQUIRED program_options filesystem)\nfind_package(Threads REQUIRED)\nfind_package(ZLIB REQUIRED)\nfind_package(OpenCL REQUIRED)\n# We need OpenBLAS for now, because we make some specific\n# calls. Ideally we'd use OpenBLAS is possible and fall back to\n# not doing those calls if it's not present.\nif(NOT APPLE)\n  set(BLA_VENDOR OpenBLAS)\nendif()\nif(USE_BLAS)\n  message(STATUS \"Looking for system BLAS/OpenBLAS library.\")\n  find_package(BLAS REQUIRED)\n  find_path(BLAS_INCLUDE_DIRS openblas_config.h\n    /usr/include\n    /usr/local/include\n    /usr/include/openblas\n    /opt/OpenBLAS/include\n    /usr/include/x86_64-linux-gnu\n    $ENV{BLAS_HOME}/include)\n    add_definitions(-DUSE_BLAS)\nelse()\nmessage(STATUS \"Using built-in matrix library.\")\nendif()\nfind_package(Qt5Core)\n\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED on)\n\n# See if we can set optimization flags as expected.\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n  set(GccSpecificFlags 1)\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n  set(GccSpecificFlags 1)\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n  set(GccSpecificFlags 1)\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Intel\")\n  set(GccSpecificFlags 0)\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"MSVC\")\n  set(GccSpecificFlags 0)\nendif()\n\nif(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE RELEASE)\nendif(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)\n\nif(GccSpecificFlags)\n  set(GCC_COMPILE_FLAGS \"-Wall -Wextra -ffast-math -flto -march=native\")\n  set(GCC_DISABLED_WARNING_COMPILE_FLAGS \"-Wno-ignored-attributes -Wno-maybe-uninitialized \\\n      -Wno-mismatched-tags\")\n  set(GCC_FLAGS \"${GCC_COMPILE_FLAGS} ${GCC_DISABLED_WARNING_COMPILE_FLAGS}\")\n  set(CMAKE_CXX_FLAGS_DEBUG \"${GCC_FLAGS} -g -Og\")\n  set(CMAKE_CXX_FLAGS_RELEASE \"${GCC_FLAGS} -g -O3 -DNDEBUG\")\n  set(CMAKE_EXE_LINKER_FLAGS \"-flto -g\")\nendif(GccSpecificFlags)\n\nif(USE_CPU_ONLY)\n  add_definitions(-DUSE_CPU_ONLY)\nendif()\nif(USE_HALF)\n  add_definitions(-DUSE_HALF)\nendif()\n\nset(IncludePath \"${CMAKE_CURRENT_SOURCE_DIR}/src\" \"${CMAKE_CURRENT_SOURCE_DIR}/src/Eigen\")\nset(SrcPath \"${CMAKE_CURRENT_SOURCE_DIR}/src\")\n\ninclude_directories(${IncludePath})\ninclude_directories(${Boost_INCLUDE_DIRS})\ninclude_directories(${OpenCL_INCLUDE_DIRS})\ninclude_directories(${ZLIB_INCLUDE_DIRS})\n\nif((UNIX AND NOT APPLE) OR WIN32)\n    include_directories(${BLAS_INCLUDE_DIRS})\nendif()\nif(APPLE)\n    include_directories(\"/System/Library/Frameworks/Accelerate.framework/Versions/Current/Headers\")\nendif()\n\nset(leelaz_MAIN \"${SrcPath}/Leela.cpp\")\nfile(GLOB leelaz_SRC \"${SrcPath}/*.cpp\")\nlist(REMOVE_ITEM leelaz_SRC ${leelaz_MAIN})\n\n# Reuse for leelaz and gtest\nadd_library(objs OBJECT ${leelaz_SRC})\n\nadd_executable(leelaz $<TARGET_OBJECTS:objs> ${leelaz_MAIN})\n\ntarget_link_libraries(leelaz ${Boost_LIBRARIES})\ntarget_link_libraries(leelaz ${BLAS_LIBRARIES})\ntarget_link_libraries(leelaz ${OpenCL_LIBRARIES})\ntarget_link_libraries(leelaz ${ZLIB_LIBRARIES})\ntarget_link_libraries(leelaz ${CMAKE_THREAD_LIBS_INIT})\ninstall(TARGETS leelaz DESTINATION ${CMAKE_INSTALL_BINDIR})\n\nif(Qt5Core_FOUND)\n    if(NOT Qt5Core_VERSION VERSION_LESS \"5.3.0\")\n        add_subdirectory(autogtp)\n        add_subdirectory(validation)\n    else()\n        message(WARNING \"Qt ${Qt5Core_VERSION} is found but does not met required version 5.3.0, \\\n        build target for `autogtp` and `validation` is disabled.\")\n    endif()\nelse()\n    message(WARNING \"Qt is not found, build for `autogtp` and `validation` is disabled\")\nendif()\n\n# Google Test below\nfile(GLOB tests_SRC \"${SrcPath}/tests/*.cpp\")\n\nadd_executable(tests ${tests_SRC} $<TARGET_OBJECTS:objs>)\nif(GccSpecificFlags)\n  target_compile_options(tests PRIVATE \"-Wno-unused-variable\")\nendif()\n\ntarget_link_libraries(tests ${Boost_LIBRARIES})\ntarget_link_libraries(tests ${BLAS_LIBRARIES})\ntarget_link_libraries(tests ${OpenCL_LIBRARIES})\ntarget_link_libraries(tests ${ZLIB_LIBRARIES})\ntarget_link_libraries(tests gtest_main ${CMAKE_THREAD_LIBS_INIT})\n\ninclude(GetGitRevisionDescription)\ngit_describe(VERSION --tags)\nstring(REGEX REPLACE \"^v([0-9]+)\\\\..*\" \"\\\\1\" MAJOR_VERSION \"${VERSION}\")\nstring(REGEX REPLACE \"^v[0-9]+\\\\.([0-9]+).*\" \"\\\\1\" MINOR_VERSION \"${VERSION}\")\n\nSET(CPACK_GENERATOR \"DEB\")\nSET(CPACK_DEBIAN_PACKAGE_NAME \"leelaz\")\nSET(CPACK_DEBIAN_PACKAGE_VERSION \"${MAJOR_VERSION}.${MINOR_VERSION}\")\nSET(CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})\nSET(CPACK_DEBIAN_PACKAGE_MAINTAINER \"Gian-Carlo Pascutto https://github.com/gcp/leela-zero\")\nSET(CPACK_DEBIAN_PACKAGE_DESCRIPTION \"Go engine with no human-provided knowledge, modeled after the AlphaGo Zero paper.\")\nSET(CPACK_DEBIAN_PACKAGE_PRIORITY \"optional\")\nSET(CPACK_DEBIAN_PACKAGE_SECTION \"games\")\nSET(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)\nSET(CPACK_PACKAGE_FILE_NAME \"${CMAKE_PROJECT_NAME}-${MAJOR_VERSION}.${MINOR_VERSION}\")\n\nINCLUDE(CPack)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.7568359375,
          "content": "# Contributing to Leela Zero\n\n## C++ Usage\n\nLeela Zero is written in C++14, and generally encourages writing in modern C++ style.\n\nThis means that:\n\n* The code overwhelmingly uses Almost Always Auto style, and so should you.\n* Prefer range based for and non-member (c)begin/(c)end.\n* You can rely on boost 1.58.0 or later being present.\n* Manipulation of raw pointers is to be avoided as much as possible.\n* Prefer constexpr over defines or constants.\n* Prefer \"using\" over typedefs.\n* Prefer uniform initialization.\n* Prefer default initializers for member variables.\n* Prefer emplace_back and making use of move assignment.\n* Aim for const-correctness. Prefer passing non-trivial parameters by const reference.\n* Use header include guards, not #pragma once (pragma once is non-standard, has issues with detecting identical files, and is slower https://gcc.gnu.org/bugzilla/show_bug.cgi?id=58770)\n* config.h is always the first file included.\n* Feel free to use templates, but remember that debugging obscure template metaprogramming bugs is not something people enjoy doing in their spare time.\n* Using exceptions is allowed.\n\n## Code Style\n\n* Look at the surrounding code and the rest of the project!\n* Indentation is 4 spaces. No tabs.\n* public/private/protected access modifiers are de-indented\n* Maximum line length is 80 characters. There are rare exceptions in the code, usually involving user-visible text strings.\n* Ifs are always braced, with very rare exceptions when everything fits on one line and doing it properly makes the code less readable.\n* The code generally avoids any pointer passing and allows non-const references for parameters. Still, for new code it should be preferred to a) put input parameters first b) use return values over output parameters.\n* Function arguments that wrap are aligned.\n* Member variables in a class have an m_ prefix and are private. Members of POD structs don't and aren't.\n* Constants and enum values are ALL_CAPS.\n* Variables are lowercase.\n* Function names are underscore_case.\n* Classes are CamelCase.\n* Comments are preferably full sentences with proper capitalization and a period.\n* Split the includes list into config.h, standard headers and our headers.\n\nIf something is not addressed here or there is no similar code, the Google C++ Style Guide is always a good reference.\n\nWe might move to enforce clang-format at some point.\n\n## Adding dependencies\n\nC++ does not quite have the package systems JavaScript and Rust have, so some restraint should be excercised when adding dependencies. Dependencies typically complicate the build for new contributors, especially on Windows, and reliance on specific, new versions can be a nuisance on Unix based systems.\n\nThe restraints on modern header-only libraries are significantly less because they avoid most of the above problems.\n\nIf a library is not mature and well-supported on Windows, Linux *and* macOS, you do not want it.\n\nThis is not an excuse to re-invent the wheel.\n\n## Upgrading dependencies\n\nThe code and dependencies should target the latest stable versions of Visual Studio/MSVC, and the latest stable/LTS releases of common Linux distros, with some additional delay as not everyone will be able to upgrade to a new stable/LTS right away.\n\nFor example, upgrading to C++17 or boost 1.62.0 (oldest version in a Debian stable or Ubuntu LTS release) can be considered if there's a compelling use case and/or we can confirm it is supported on all platforms we reasonably target.\n\n## Merging contributions\n\nContributions come in the form of pull requests against the \"next\" branch.\n\nThey are rebased or squashed on top of the next branch, so the history will stay linear, i.e. no merge commits.\n\nCommit messages follow Linux kernel style: a summary phrase that is no more than 70-75 characters (but preferably <50) and describes both what the patch changes, as well as why the patch might be necessary.\n\nIf the patch is to a specific subsystem (AutoGTP, Validation, ...) then prefix the summary by that subsystem (e.g. AutoGTP: ...).\n\nThis is followed by a blank line, and a description that is wrapped at 72 characters. Good patch descriptions can be large time savers when someone has to bugfix the code afterwards.\n\nThe end of the commit message should mention which (github) issue the patch fixes, if any, and the pull request it belongs to.\n\nPatches need to be reviewed before merging. Try to find the person who worked on the code last, or who has done work in nearby code (git blame is your friend, and this is why we write proper commit messages...). With some luck that is someone with write access to the repository. If not, you'll have to ping someone who does.\n\nExperience says that the majority of the pull requests won't live up to this ideal, which means that maintainers will have to squash patch series and clean up the commit message to be coherent before merging.\n\nIf you are a person with write access to the repo, and are about to merge a commit, ask yourself the following question: am I confident enough that I understand this code, so that I can and am willing to go in and fix it if it turns out to be necessary? If the answer to this question is no, then do not merge the code. Not merging a contribution (quickly) is annoying for the individual contributor. Merging a bad contribution is annoying for everyone who wants to contribute now and in the future.\n\nIf a contributor can't be bothered to fix up the trailing whitespace in their patch, odds are they aren't going to be willing to fix the threading bug it introduces either.\n\n## \"Improvements\" and Automagic\n\nImprovements to the engine that can affect strength should include supporting data. This means no-regression tests for functional changes, and a proof of strength improvement for things which are supposed to increase strength.\n\nThe tools in the validation directory are well-fit for this purpose, as\nis the python tool \"ringmaster\".\n\nThe number of configurable options should be limited where possible. If it is not possible for the author to make rules of thumb for suitable values for those options, then the majority of users have no hope of getting them right, and may mistakenly make the engine weaker. If you must introduce new ones, consider limiting their exposure to developers only via USE_TUNER and set a good default for them.\n\n## GTP Extensions\n\nGTP makes it possible to connect arbitrary engines to arbitrary interfaces.\n\nUnfortunately GTP 2 isn't extensive enough to realistically fit all needs of analysis GUIs, which means we have had to extend it. The lack of standardization here means that Go software is continously catching up to the chess world, especially after UCI was introduced. We should aim to make this situation better, not worse.\n\nThis means that extensions have the possibility of outliving Leela Zero (or any GUIs) provided they are well thought out.\n\nIt makes sense to be thoughtful here, consider the responsibilities of both GUI and engine, and try to come up with flexible building blocks rather than a plethora of commands for very specific use cases.\n\nExperience and previous discussions can help understanding:\n\n* lz-analyze \"avoid\" and \"allow\" were added in pull request [#1949](https://github.com/leela-zero/leela-zero/pull/1949).\n* lz-analyze got a side-to-move option in pull request [#1872](https://github.com/leela-zero/leela-zero/pull/1872) and [#1642](https://github.com/leela-zero/leela-zero/pull/1642).\n* lz-analyze got a \"prior\" tag in pull request [#1836](https://github.com/leela-zero/leela-zero/pull/1836).\n* lz-analyze was added in pull request [#1388](https://github.com/leela-zero/leela-zero/pull/1388).\n* lz-setoption was added in pull request [#1741](https://github.com/leela-zero/leela-zero/pull/1741).\n* Pull request [#2170](https://github.com/leela-zero/leela-zero/pull/2170) has some discussion regarding how to navigate SGF\n  files that were parsed by the engine via GTP.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "Dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 2.951171875,
          "content": "# Leela Zero常见问题解答 #\n# Frequently Asked Questions about Leela Zero #\n\n## 为什么网络不是每次都变强的 ##\n## Why doesn't the network get stronger every time ##\n\n从谷歌的论文中可以发现，AZ的网络强度也是有起伏的。而且现在只是在小规模测试阶段，发现问题也是很正常的。请保持耐心。\n\nAZ also had this behavior, besides we're testing our approach right now. Please be patient.\n\n## 为什么比较两个网络强弱时经常下十几盘就不下了 ##\n## Why only dozens of games are played when comparing two networks ##\n\n这里使用的是概率学意义上强弱，具体来说是SPRT在95%概率下任何一方有超过55%的胜率（ELO的35分），就认为有一方胜出了。谷歌的论文中是下满400盘的。唯一的区别是我们这里的Elo可能不是那么准确，网络的强弱还是可以确定的。\n\nWe use SPRT to decide if a newly trained network is better. A better network is only chosen if SPRT finds it's 95% confident that the new network has a 55% (boils down to 35 elo) win rate over the previous best network.\n\n## 自对弈时产生的棋谱为什么下得很糟 ##\n## Why the game generated during self-play contains quite a few bad moves ##\n\n生成自对弈棋谱时，使用的MCTS模拟次数只有3200，还加入了噪声，这是为了增加随机性，之后的训练才有进步的空间。如果用图形界面（如sabiki）加载Leela Zero，并设置好参数与之对弈，你会发现它其实表现得并不赖。\n\nThe MCTS playouts of self-play games is only 3200, and with noise added (For randomness of each move thus training has something to learn from). If you load Leela Zero with Sabaki, you'll probably find it is actually not that weak.\n\n## 有些自对弈对局非常短 ##\n## Very short self-play games ends with White win?! ##\n\n自对弈的增加了随机性，一旦黑棋在开始阶段选择pass，由于贴目的关系，白棋有很大概率也选择pass获胜。短对局由此产生。\n\nThis is expected. Due to randomness of self-play games, once Black choose to pass at the beginning, there is a big chance for White to pass too (7.5 komi advantage for White). See issue #198 for defailed explanation.\n\n## 对局结果错误 ##\n## Wrong score? ##\n\nLeela Zero使用Tromp-Taylor规则(详见<https://senseis.xmp.net/?TrompTaylorRules>)。虽然与中国规则一样贴7.5目，但为计算方便，并不去除死子。因此，结果与使用中国规则计算可能有所不同。不过，不去除死子并不影响模型的训练结果，因为双方会将死子自行提掉。\n\nLeela Zero uses Tromp-Taylor rules (see https://senseis.xmp.net/?TrompTaylorRules). Although its komi is 7.5 as in Chinese rule, for simplicity, Tromp-Taylor rules do not remove dead stones. Thus, the result may be different from that calcuated using Chinese rule. However, keeping dead stones does not affect training results because both players are expected to capture dead stones themselves.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.583984375,
          "content": "[![Linux Build Status](https://travis-ci.org/leela-zero/leela-zero.svg?branch=next)](https://travis-ci.org/leela-zero/leela-zero)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/dcvp31x1e0yavrtf/branch/next?svg=true)](https://ci.appveyor.com/project/gcp/leela-zero-8arv1/branch/next)\n\n# What\n\nA Go program with no human provided knowledge. Using MCTS (but without\nMonte Carlo playouts) and a deep residual convolutional neural network stack.\n\nThis is a fairly faithful reimplementation of the system described\nin the Alpha Go Zero paper \"[Mastering the Game of Go without Human Knowledge](https://www.nature.com/articles/nature24270.epdf?author_access_token=VJXbVjaSHxFoctQQ4p2k4tRgN0jAjWel9jnR3ZoTv0PVW4gB86EEpGqTRDtpIz-2rmo8-KG06gqVobU5NSCFeHILHcVFUeMsbvwS-lxjqQGg98faovwjxeTUgZAUMnRQ)\".\nFor all intents and purposes, it is an open source AlphaGo Zero.\n\n# Wait, what?\n\nIf you are wondering what the catch is: you still need the network weights.\nNo network weights are in this repository. If you manage to obtain the\nAlphaGo Zero weights, this program will be about as strong, provided you\nalso obtain a few Tensor Processing Units. Lacking those TPUs, I'd recommend\na top of the line GPU - it's not exactly the same, but the result would still\nbe an engine that is far stronger than the top humans.\n\n# Gimme the weights\n\nRecomputing the AlphaGo Zero weights will [take about 1700 years on commodity hardware](http://web.archive.org/web/20190205013627/http://computer-go.org/pipermail/computer-go/2017-October/010307.html).\n\nOne reason for publishing this program is that we are running a public,\ndistributed effort to repeat the work. Working together, and especially\nwhen starting on a smaller scale, it will take less than 1700 years to get\na good network (which you can feed into this program, suddenly making it strong).\n\n# I want to help\n\n## Using your own hardware\n\nYou need a PC with a GPU, i.e. a discrete graphics card made by NVIDIA or AMD,\npreferably not too old, and with the most recent drivers installed.\n\nIt is possible to run the program without a GPU, but performance will be much\nlower. If your CPU is not *very* recent (Haswell or newer, Ryzen or newer),\nperformance will be outright bad, and it's probably of no use trying to join\nthe distributed effort. But you can still play, especially if you are patient.\n\n### Windows\n\nHead to the Github releases page at https://github.com/leela-zero/leela-zero/releases,\ndownload the latest release, unzip, and launch autogtp.exe. It will connect to\nthe server automatically and do its work in the background, uploading results\nafter each game. You can just close the autogtp window to stop it.\n\n### macOS and Linux\n\nFollow the instructions below to compile the leelaz and autogtp binaries in\nthe build subdirectory. Then run autogtp as explained in the\n[contributing](#contributing) instructions below.\nContributing will start when you run autogtp.\n\n## Using a Cloud provider\n\nMany cloud companies offer free trials (or paid solutions, not discussed here)\nthat are usable for helping the leela-zero project.\n\nThere are community maintained instructions available here:\n* [Running Leela Zero client on a Tesla V100 GPU for free (Google Cloud Free Trial)](https://docs.google.com/document/d/1P_c-RbeLKjv1umc4rMEgvIVrUUZSeY0WAtYHjaxjD64/edit?usp=sharing)\n\n* [Running Leela Zero client on a Tesla V100 GPU for free (Microsoft Azure Cloud Free Trial)](https://docs.google.com/document/d/1DMpi16Aq9yXXvGj0OOw7jbd7k2A9LHDUDxxWPNHIRPQ/edit?usp=sharing)\n\n# I just want to play with Leela Zero right now\n\nDownload the best known network weights file from [here](https://zero.sjeng.org/best-network), or, if you prefer a more human style,\na (weaker) network trained from human games [here](https://sjeng.org/zero/best_v1.txt.zip).\n\nIf you are on Windows, download an official release from [here](https://github.com/leela-zero/leela-zero/releases) and head to the [Usage](#usage-for-playing-or-analyzing-games)\nsection of this README.\n\nIf you are on macOS, Leela Zero is available through [Homebrew](https://homebrew.sh), the de facto standard\npackage manager. You can install it with:\n```\nbrew install leela-zero\n```\n\nIf you are on Unix, you have to compile the program yourself. Follow\nthe compilation instructions below and then read the [Usage](#usage-for-playing-or-analyzing-games) section.\n\n# Compiling AutoGTP and/or Leela Zero\n\n## Requirements\n\n* GCC, Clang or MSVC, any C++14 compiler\n* Boost 1.58.x or later, headers and program_options, filesystem and system libraries (libboost-dev, libboost-program-options-dev and libboost-filesystem-dev on Debian/Ubuntu)\n* zlib library (zlib1g & zlib1g-dev on Debian/Ubuntu)\n* Standard OpenCL C headers (opencl-headers on Debian/Ubuntu, or at\nhttps://github.com/KhronosGroup/OpenCL-Headers/tree/master/CL)\n* OpenCL ICD loader (ocl-icd-libopencl1 on Debian/Ubuntu, or reference implementation at https://github.com/KhronosGroup/OpenCL-ICD-Loader)\n* An OpenCL capable device, preferably a very, very fast GPU, with recent\ndrivers is strongly recommended (OpenCL 1.1 support is enough). Don't\nforget to install the OpenCL driver if this part is packaged seperately\nby the Linux distribution (e.g. nvidia-opencl-icd).\nIf you do not have a GPU, add the define \"USE_CPU_ONLY\", for example\nby adding -DUSE_CPU_ONLY=1 to the cmake command line.\n* Optional: BLAS Library: OpenBLAS (libopenblas-dev) or Intel MKL\n* The program has been tested on Windows, Linux and macOS.\n\n## Example of compiling - Ubuntu & similar\n\n    # Test for OpenCL support & compatibility\n    sudo apt install clinfo && clinfo\n\n    # Clone github repo\n    git clone https://github.com/leela-zero/leela-zero\n    cd leela-zero\n    git submodule update --init --recursive\n\n    # Install build depedencies\n    sudo apt install cmake g++ libboost-dev libboost-program-options-dev libboost-filesystem-dev opencl-headers ocl-icd-libopencl1 ocl-icd-opencl-dev zlib1g-dev\n\n    # Use a stand alone build directory to keep source dir clean\n    mkdir build && cd build\n\n    # Compile leelaz and autogtp in build subdirectory with cmake\n    cmake ..\n    cmake --build .\n\n    # Optional: test if your build works correctly\n    ./tests\n\n## Example of compiling - macOS\n\n    # Clone github repo\n    git clone https://github.com/leela-zero/leela-zero\n    cd leela-zero\n    git submodule update --init --recursive\n\n    # Install build depedencies\n    brew install boost cmake zlib\n\n    # Use a stand alone build directory to keep source dir clean\n    mkdir build && cd build\n\n    # Compile leelaz and autogtp in build subdirectory with cmake\n    cmake ..\n    cmake --build .\n\n    # Optional: test if your build works correctly\n    ./tests\n\n## Example of compiling - Windows\n\n    # Clone github repo\n    git clone https://github.com/leela-zero/leela-zero\n    cd leela-zero\n    git submodule update --init --recursive\n\n    cd msvc\n    Double-click the leela-zero2015.sln or leela-zero2017.sln corresponding\n    to the Visual Studio version you have.\n    # Build from Visual Studio 2015 or 2017\n\n# Contributing\n\nFor Windows, you can use a release package, see [\"I want to help\"](#windows).\n\nUnix and macOS, after finishing the compile and while in the build directory:\n\n    # Copy leelaz binary to autogtp subdirectory\n    cp leelaz autogtp\n\n    # Run AutoGTP to start contributing\n    ./autogtp/autogtp\n\n\n# Usage for playing or analyzing games\n\nLeela Zero is not meant to be used directly. You need a graphical interface\nfor it, which will interface with Leela Zero through the GTP protocol.\n\nThe engine supports the [GTP protocol, version 2](https://www.lysator.liu.se/~gunnar/gtp/gtp2-spec-draft2/gtp2-spec.html).\n\n[Lizzie](https://github.com/featurecat/lizzie/releases) is a client specifically\nfor Leela Zero which shows live search probilities, a win rate graph, and has\nan automatic game analysis mode. Has binaries for Windows, Mac, and Linux.\n\n[Sabaki](http://sabaki.yichuanshen.de/) is a very nice looking GUI with GTP 2\ncapability.\n\n[LeelaSabaki](https://github.com/SabakiHQ/LeelaSabaki) is modified to\nshow variations and winning statistics in the game tree, as well as a heatmap\non the game board.\n\n[GoReviewPartner](https://github.com/pnprog/goreviewpartner) is a tool for\nautomated review and analysis of games using bots (saved as .rsgf files),\nLeela Zero is supported.\n\nA lot of go software can interface to an engine via GTP,\nso look around.\n\nAdd the --gtp commandline option on the engine command line to enable Leela\nZero's GTP support. You will need a weights file, specify that with the -w option.\n\nAll required commands are supported, as well as the tournament subset, and\n\"loadsgf\". The full set can be seen with \"list_commands\". The time control\ncan be specified over GTP via the time\\_settings command. The kgs-time\\_settings\nextension is also supported. These have to be supplied by the GTP 2 interface,\nnot via the command line!\n\n# Weights format\n\nThe weights file is a text file with each line containing a row of coefficients.\nThe layout of the network is as in the AlphaGo Zero paper, but any number of\nresidual blocks is allowed, and any number of outputs (filters) per layer,\nas long as the latter is the same for all layers. The program will autodetect\nthe amounts on startup. The first line contains a version number.\n\n* Convolutional layers have 2 weight rows:\n    1) convolution weights\n    2) channel biases\n* Batchnorm layers have 2 weight rows:\n    1) batchnorm means\n    2) batchnorm variances\n* Innerproduct (fully connected) layers have 2 weight rows:\n    1) layer weights\n    2) output biases\n\nThe convolution weights are in [output, input, filter\\_size, filter\\_size]\norder, the fully connected layer weights are in [output, input] order.\nThe residual tower is first, followed by the policy head, and then the value\nhead. All convolution filters are 3x3 except for the ones at the start of the policy and value head, which are 1x1 (as in the paper).\n\nThere are 18 inputs to the first layer, instead of 17 as in the paper. The\noriginal AlphaGo Zero design has a slight imbalance in that it is easier\nfor the black player to see the board edge (due to how padding works in\nneural networks). This has been fixed in Leela Zero. The inputs are:\n\n```\n1) Side to move stones at time T=0\n2) Side to move stones at time T=-1  (0 if T=0)\n...\n8) Side to move stones at time T=-7  (0 if T<=6)\n9) Other side stones at time T=0\n10) Other side stones at time T=-1   (0 if T=0)\n...\n16) Other side stones at time T=-7   (0 if T<=6)\n17) All 1 if black is to move, 0 otherwise\n18) All 1 if white is to move, 0 otherwise\n```\n\nEach of these forms a 19 x 19 bit plane.\n\nIn the training/caffe directory there is a zero.prototxt file which contains a\ndescription of the full 40 residual block design, in (NVIDIA)-Caffe protobuff\nformat. It can be used to set up nv-caffe for training a suitable network.\nThe zero\\_mini.prototxt file describes a smaller 12 residual block case. The\ntraining/tf directory contains the network construction in TensorFlow format,\nin the tfprocess.py file.\n\nExpert note: the channel biases seem redundant in the network topology\nbecause they are followed by a batchnorm layer, which is supposed to normalize\nthe mean. In reality, they encode \"beta\" parameters from a center/scale\noperation in the batchnorm layer, corrected for the effect of the batchnorm mean/variance adjustment. At inference time, Leela Zero will fuse the channel\nbias into the batchnorm mean, thereby offsetting it and performing the center operation. This roundabout construction exists solely for backwards\ncompatibility. If this paragraph does not make any sense to you, ignore its\nexistence and just add the channel bias layer as you normally would, output\nwill be correct.\n\n# Training\n\n## Getting the data\n\nAt the end of the game, you can send Leela Zero a \"dump\\_training\" command,\nfollowed by the winner of the game (either \"white\" or \"black\") and a filename,\ne.g:\n\n    dump_training white train.txt\n\nThis will save (append) the training data to disk, in the format described below,\nand compressed with gzip.\n\nTraining data is reset on a new game.\n\n## Supervised learning\n\nLeela can convert a database of concatenated SGF games into a datafile suitable\nfor learning:\n\n    dump_supervised sgffile.sgf train.txt\n\nThis will cause a sequence of gzip compressed files to be generated,\nstarting with the name train.txt and containing training data generated from\nthe specified SGF, suitable for use in a Deep Learning framework.\n\n## Training data format\n\nThe training data consists of files with the following data, all in text\nformat:\n\n* 16 lines of hexadecimal strings, each 361 bits longs, corresponding to the\nfirst 16 input planes from the previous section\n* 1 line with 1 number indicating who is to move, 0=black, 1=white, from which\nthe last 2 input planes can be reconstructed\n* 1 line with 362 (19x19 + 1) floating point numbers, indicating the search probabilities\n(visit counts) at the end of the search for the move in question. The last\nnumber is the probability of passing.\n* 1 line with either 1 or -1, corresponding to the outcome of the game for the\nplayer to move\n\n## Running the training\n\nFor training a new network, you can use an existing framework (Caffe,\nTensorFlow, PyTorch, Theano), with a set of training data as described above.\nYou still need to contruct a model description (2 examples are provided for\nCaffe), parse the input file format, and outputs weights in the proper format.\n\nThere is a complete implementation for TensorFlow in the training/tf directory.\n\n### Supervised learning with TensorFlow\n\nThis requires a working installation of TensorFlow 1.4 or later:\n\n    src/leelaz -w weights.txt\n    dump_supervised bigsgf.sgf train.out\n    exit\n    training/tf/parse.py 6 128 train.out\n\nThis will run and regularly dump Leela Zero weight files (of networks with 6\nblocks and 128 filters) to disk, as well as snapshots of the learning state\nnumbered by the batch number. If interrupted, training can be resumed with:\n\n    training/tf/parse.py 6 128 train.out leelaz-model-batchnumber\n\n# Todo\n\n- [ ] Further optimize Winograd transformations.\n- [ ] Improve GPU batching in the search.\n- [ ] Root filtering for handicap play.\n- More backends:\n- [ ] MKL-DNN based backend.\n- [ ] CUDA specific version using cuDNN or cuBLAS.\n- [ ] AMD specific version using MIOpen/ROCm.\n\n# Related links\n\n* Status page of the distributed effort:\nhttps://zero.sjeng.org\n* GUI and study tool for Leela Zero:\nhttps://github.com/featurecat/lizzie\n* Watch Leela Zero's training games live in a GUI:\nhttps://github.com/barrybecker4/LeelaWatcher\n* Original Alpha Go (Lee Sedol) paper:\nhttps://storage.googleapis.com/deepmind-media/alphago/AlphaGoNaturePaper.pdf\n* Alpha Go Zero paper:\nhttps://deepmind.com/documents/119/agz_unformatted_nature.pdf\n* Alpha Zero (Go, Chess, Shogi) paper:\nhttps://arxiv.org/pdf/1712.01815.pdf\n* AlphaGo Zero Explained In One Diagram:\nhttps://medium.com/applied-data-science/alphago-zero-explained-in-one-diagram-365f5abf67e0\n* Stockfish chess engine ported to Leela Zero framework:\nhttps://github.com/LeelaChessZero/lczero\n* Leela Chess Zero (chess optimized client)\nhttps://github.com/LeelaChessZero/lc0\n\n# License\n\nThe code is released under the GPLv3 or later, except for ThreadPool.h, cl2.hpp, half.hpp and the eigen and clblast_level3 subdirs, which have specific licenses (compatible with GPLv3) mentioned in those files.\n\nAdditional permission under GNU GPL version 3 section 7\n\nIf you modify this Program, or any covered work, by linking or\ncombining it with NVIDIA Corporation's libraries from the\nNVIDIA CUDA Toolkit and/or the NVIDIA CUDA Deep Neural\nNetwork library and/or the NVIDIA TensorRT inference library\n(or a modified version of those libraries), containing parts covered\nby the terms of the respective license agreement, the licensors of\nthis Program grant you additional permission to convey the resulting\nwork.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.1171875,
          "content": "version: '{build}'\nimage:\n- Visual Studio 2015\n- Visual Studio 2017\nconfiguration: Release\nplatform: x64\nmatrix:\n  fast_finish: true\nenvironment:\n  matrix:\n  - cmake_build: 1\n  - cmake_build: 1\n    features: USE_CPU_ONLY\n    run_tests: 1\n  - cmake_build: 1\n    features: USE_CPU_ONLY USE_BLAS\n    run_tests: 1\n  - msbuild: 1\nskip_commits:\n  files:\n    - '**/*.md'\n    - '**/.gitignore'\n    - scripts/\n    - training/\n    - AUTHORS\n    - COPYING\nfor:\n- matrix:\n    only:\n    - image: Visual Studio 2015\n  install:\n  - cmd: set MSVCDIR=msvc\\VS2015\n  - cmd: echo %MSVCDIR%\n  - cmd: nuget restore %MSVCDIR% -PackagesDirectory msvc\\packages\n- matrix:\n    only:\n    - image: Visual Studio 2017\n  install:\n  - cmd: set MSVCDIR=msvc\\VS2017\n  - cmd: echo %MSVCDIR%\n  - cmd: nuget restore %MSVCDIR% -PackagesDirectory msvc\\packages\nbuild_script:\n- cmd: if \"%cmake_build%\"==\"1\" %MSVCDIR%\\cmake_build.bat\n- cmd: if \"%msbuild%\"==\"1\" git submodule update --init --recursive\n- cmd: if \"%msbuild%\"==\"1\" msbuild /t:build %MSVCDIR%\\leela-zero.vcxproj\n\ntest_script:\n- cmd: if \"%run_tests%\"==\"1\" cd build && Release\\tests.exe\n\ncache: msvc\\packages -> appveyor.yml\n"
        },
        {
          "name": "autogtp",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "gtest",
          "type": "commit",
          "content": null
        },
        {
          "name": "msvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "training",
          "type": "tree",
          "content": null
        },
        {
          "name": "validation",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}