{
  "metadata": {
    "timestamp": 1736566063066,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "VowpalWabbit/vowpal_wabbit",
      "stars": 8514,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.078125,
          "content": "BasedOnStyle: Google\nAccessModifierOffset: -2\nAlignAfterOpenBracket: DontAlign\nAlignOperands: false\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nBreakBeforeBraces: Allman\nBreakConstructorInitializersBeforeComma: true\nColumnLimit: 120\nSortIncludes: true\nIndentPPDirectives: AfterHash\nPointerAlignment: Left\nDerivePointerAlignment: false\nIncludeCategories:\n  # vw_string_format.h has a template specialization for fmt.h\n  # and it must be included first to prevent compile errors\n  - Regex:           '\"vw\\/core\\/vw_string_view_fmt\\.h\"'\n    Priority:        0\n  # First block is local directory includes\n  - Regex:           '\"[[:alnum:]._\\/]+\"'\n    Priority:        1\n  # Second block is system includes with .h suffix. Usually dependencies.\n  - Regex:           '<[[:alnum:]._\\/]+\\.h>'\n    Priority:        2\n  # STL system deps\n  - Regex:           '<[[:alnum:]._\\/]+>'\n    Priority:        3\n  # Catch all\n  - Regex:           '.*'\n    Priority:        4\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.794921875,
          "content": "{\n  \"Checks\": \"-*,readability-*,modernize-*,performance-*,cppcoreguidelines-pro-type-member-init,cppcoreguidelines-init-variables,readability-identifier-naming,-modernize-use-trailing-return-type,-readability-magic-numbers,-readability-function-cognitive-complexity,-readability-identifier-length,-readability-uppercase-literal-suffix\",\n  \"FormatStyle\": \"file\",\n  \"WarningsAsErrors\": \"-*,performance-*,modernize-use-using,readability-braces-around-statements\",\n  \"CheckOptions\": [\n    {\n      \"key\": \"performance-move-const-arg.CheckTriviallyCopyableMove\",\n      \"value\": \"0\"\n    },\n    {\"key\": \"readability-identifier-naming.NamespaceCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.ClassCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.StructCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.MemberCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.PrivateMemberPrefix\", \"value\": \"_\"},\n    {\"key\": \"readability-identifier-naming.ProtectedMemberPrefix\", \"value\": \"_\"},\n    {\"key\": \"readability-identifier-naming.FunctionCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.MethodCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.VariableCase\", \"value\": \"lower_case\" },\n    {\"key\": \"readability-identifier-naming.MacroDefinitionCase\", \"value\": \"UPPER_CASE\"},\n    {\"key\": \"readability-identifier-naming.EnumCase\", \"value\": \"lower_case\"},\n    {\"key\": \"readability-identifier-naming.ScopedEnumConstantCase\", \"value\": \"UPPER_CASE\"},\n    {\"key\": \"readability-identifier-naming.EnumConstantCase\", \"value\": \"UPPER_CASE\"},\n    {\"key\": \"readability-identifier-naming.GlobalConstantCase\", \"value\": \"UPPER_CASE\"},\n    {\"key\": \"readability-identifier-naming.StaticConstantCase\", \"value\": \"UPPER_CASE\"}\n  ]\n}\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.0009765625,
          "content": "# See http://EditorConfig.org\n# Please, either use an editor supporting editorconfig\n# or set up your editor style according to this file manually\n# or use `astyle --lineend=linux --indent=spaces=2 *.cc *.h`\n# (see http://astyle.sourceforge.net/).\n\n# This is the top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n# C++ files\n[*.{cc,h}]\nindent_style = space\nindent_size = 2\nindent_brace_style = Allman\n\n# Makefiles need tab indentation\n[Makefile]\nindent_style = tab\n\n[*.md]\ntrim_trailing_whitespace = false\n\n# If not set this breaks class feature blocks\n[*.tt]\ninsert_final_newline = false\n\n[*.cs]\nend_of_line = crlf\nindent_style = space\nindent_size = 4\ninsert_final_newline = false\n\n# The following line results in warning/error:\n#\n# { /// <summary>\n#\n# Does reverting to Allman\n[vw_clr/*.{cpp,h}]\nend_of_line = crlf\nindent_style = space\nindent_size = 4\nindent_brace_style = Allman\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "*.rc binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.5947265625,
          "content": "build/\nMakefile.in\ncluster/Makefile.in\ncluster/Makefile\nacinclude.d/libtool.m4\nacinclude.d/ltoptions.m4\nacinclude.d/ltsugar.m4\nacinclude.d/ltversion.m4\nacinclude.d/lt~obsolete.m4\naclocal.m4\nconfig.guess\nconfig.sub\nconfigure\ndepcomp\ninstall-sh\nlibtool\nltmain.sh\nmissing\nvowpalwabbit/Makefile.in\nCMakeFiles\nCMakeCache.txt\nCTestCostData.txt\nCTestTestfile.cmake\ncmake_install.cmake\nCMakeUserPresets.json\nconfig.h\n*.la\n*.lo\nvowpalwabbit/stamp-*\nconfig.status\ntest/*.predict\ntest/*.cmp\n*.log\n*.o\n*.a\nt_*\nbin\n!.pipelines\nvw.1\n*.cache\n*.tgz\ntest/*.tmp\ntest/models\ntest/topk.model\n.libs\n.deps\nautom4te.cache/\nvowpalwabbit/vw\ncluster/spanning_tree\n*.d\n*.prev\nlibrary/ezexample_predict\nlibrary/ezexample_train\nlibrary/library_example\nlibrary/recommend\nlibrary/gd_mf_weights\nlibrary/test_search\nlibrary/search_generate\ntest/RunTests.last.times\n*.dSYM\n*~\n*.pc\n*.pyc\n.DS_Store\nlogs/**\nresults/**\n\n# build folders\n**/x64\n**/obj\n**/Debug\n**/Release\n**/dll\n**/ipch\n**/target\n\n# VS files\n*.opensdf\n*.suo\n*.sdf\n*.vcxproj.user\n*.csproj.user\n*.so\ndemo/mnist/infimnist\ndemo/ocr/letter.*\ndemo/ocr/run.*\n**/TestResults\n\n# IntelliJ\n*.idea\n*.iml\n# Ignore NuGet Packages\n*.nupkg\n# Ignore the packages folder\n**/packages\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n!**/packages/repositories.config\n\n# QT\nVW.config\nVW.creator\nVW.creator.user\nVW.files\nVW.includes\n\n# Python packaging\npython/.cache/**\npython/.eggs/**\npython/.tox/**\npython/build/**\npython/dist/**\npython/src/**\npython/vowpalwabbit.egg-info/**\npython/.coverage\npython/docs/build\nenv/**\n\n# Java\njava/pom.xml\n\n/COPYING\n/README\n/compile\n/cs/Serializer/Visitors/VowpalWabbitNativeVisitorExt.cs\n/cs/Serializer/VowpalWabbitDefaultMarshallerExt.cs\n/cs/unittest/RunTests.cs\n/cs/unittest/TestMarshalNumeric.cs\nvowpalwabbit/vw.VC.VC.opendb\nvowpalwabbit/vw.VC.db\n/cs/cs/Serializer/VowpalWabbitDefaultMarshallerExt.cs\n/python/pylibvw.pyd\n/python/pylibvw.cp35-win_amd64.pyd\nreinforcement_learning/ds.VC.VC.opendb\nreinforcement_learning/ds.VC.db\nreinforcement_learning/rl.VC.VC.opendb\nreinforcement_learning/rl.VC.db\nindex.html\npackages-microsoft-prod.deb\nreinforcement_learning/unit_test/rlclient-test.out\ncs/azure_service/azure_service.ccproj.user\n\nbuild\ndist/\n*.model\npython/examples/*.model\ndoc/html\n\nvowpalwabbit/parser/flatbuffer/generated/example_generated.h\n\n#Test stderr/predict files\ntest/flatbuffer/*.predict\ntest/flatbuffer/*.stderr\nnode_modules\nwasm/vw.js\nwasm/package-lock.json\n\n/.vs\nout/\nsdl/\n\n#VS Code\n.vscode/settings.json\n\ncmake-build-debug\ncmake-build-release\n\n# C# benchmark results\nBenchmarkDotNet.Artifacts\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.9892578125,
          "content": "[submodule \"rapidjson\"]\n\tpath = ext_libs/rapidjson\n\turl = https://github.com/Tencent/rapidjson.git\n[submodule \"ext_libs/spdlog\"]\n\tpath = ext_libs/spdlog\n\turl = https://github.com/gabime/spdlog.git\n[submodule \"ext_libs/fmt\"]\n\tpath = ext_libs/fmt\n\turl = https://github.com/fmtlib/fmt.git\n[submodule \"ext_libs/boost_math\"]\n\tpath = ext_libs/boost_math\n\turl = https://github.com/boostorg/math.git\n[submodule \"ext_libs/zlib\"]\n\tpath = ext_libs/zlib\n\turl = https://github.com/madler/zlib.git\n[submodule \"ext_libs/eigen\"]\n\tpath = ext_libs/eigen\n\turl = https://gitlab.com/libeigen/eigen.git\n[submodule \"ext_libs/vcpkg\"]\n\tpath = ext_libs/vcpkg\n\turl = ../../microsoft/vcpkg.git\n[submodule \"ext_libs/sse2neon\"]\n\tpath = ext_libs/sse2neon/sse2neon\n\turl = https://github.com/DLTcollab/sse2neon\n[submodule \"ext_libs/ensmallen\"]\n\tpath = ext_libs/ensmallen\n\turl = https://github.com/mlpack/ensmallen.git\n[submodule \"ext_libs/armadillo-code\"]\n\tpath = ext_libs/armadillo-code\n\turl = https://gitlab.com/conradsnicta/armadillo-code.git\n"
        },
        {
          "name": ".pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.3232421875,
          "content": "John Langford <jl@hunch.net>\n... and many others.  The git log includes at least:\n\n Alekh Agarwal\n Ales Tamchyna\n Alex Grubb\n Alexander K. Hudek\n Alexander Trufanov\n Alexey Rodriguez Yakushev\n Anna Choromanska\n Ariel Faigon\n B. Scott Michel\n Ben Gimpert\n Ben Wing\n Bharath Krishnan\n Brian Muller\n Chris Quirk\n Dan Melamed\n Daniel Erenrich\n Daniel Hsu\n Doug Shore\n Eric Whyne\n Francesco Orabona\n Gabriel Synnaeve\n Gordon Rios\n Hal Daume III\n Harry Robertson\n HaveF\n Hui Gao\n Ivan Dyedov\n Jacob Hofman\n Jaimyoung Kwon\n Jake Hofman\n Jan Szumiec\n Jarrod R Parker\n John Langford\n Jon Morra\n Kai-Wei Chang\n Kristian Holsheimer\n Lihong Li\n Luis Pedro Coelho\n Lukas Zilka\n Luong Hoang\n Marko Asplund\n Marcel Laverdet\n Martin Popel\n Martin Thomas\n Matthew Hoffman\n Michael Brundage\n Michelangelo D'Agostino\n Monami Sharma\n Nick Nussbaum\n Nikos Karampatziakis\n Nirupama Chandrasekaran\n Olek Zendel\n Olivier Chapelle\n Parag Agrawal\n Paul Mineiro\n Paulius Klyvis\n Priska Herger\n Qiao Mu\n Rob Zinkov\n Roy Frostig\n Rukshan Batuwitage\n Sam Lendle\n Sam Steingold\n Selim Raboudi\n Sergei Matusevich\n Scott Graham\n Sharat Chikkerur\n Shravan M Narayanamurthy\n Siddhartha Sen\n Stephane Ross\n Stephen Merity\n Tim Cowlishaw\n Tom De Coninck\n Vaclav Petricek\n Vladimir Vladimirov\n Werner Fenchel (not really)\n Xavier Daull\n Yaroslav Halchenko\n Zach Mayer\n Zeno Gantner\n Zhen Qin\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 12.7490234375,
          "content": "cmake_minimum_required(VERSION 3.10)\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_CURRENT_LIST_DIR}/cmake/\")\nif(POLICY CMP0076)\n  cmake_policy(SET CMP0076 NEW)\nendif()\n# Do not add /W3 to MSVC flags by default. We set this to /W4.\nif(POLICY CMP0092)\n  cmake_policy(SET CMP0092 NEW)\nendif()\nif(POLICY CMP0074)\n  cmake_policy(SET CMP0074 NEW)\nendif()\n\n# Allow vcpkg to use versions feature if it is enabled with a manifest.\n# Right now this is done for the Python CIs.\nlist(APPEND VCPKG_FEATURE_FLAGS \"versions\")\n\n# Read version into variable\nfile(READ version.txt PACKAGE_VERSION)\nstring(STRIP ${PACKAGE_VERSION} PACKAGE_VERSION)\nmessage(STATUS \"VowpalWabbit Version: ${PACKAGE_VERSION}\")\n\n# version.txt may contain a SemVer of the form 1.2.3-xxx+xxx\n# Extract the first 3 numbers into CMake variables\nstring(REGEX REPLACE \"[.+-]\" \";\" VW_VERSION_LIST ${PACKAGE_VERSION})\nlist(GET VW_VERSION_LIST 0 VW_VERSION_MAJOR)\nlist(GET VW_VERSION_LIST 1 VW_VERSION_MINOR)\nlist(GET VW_VERSION_LIST 2 VW_VERSION_PATCH)\n\n# Set this to on so that tooling can make use of the outputted compile commands (such as clang-tidy)\nset(CMAKE_EXPORT_COMPILE_COMMANDS On)\n\nif (NOT CMAKE_BUILD_TYPE AND NOT GENERATOR_IS_MULTI_CONFIG)\n  message(STATUS \"No build type selected, defaulting to Release\")\n  set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\n# This must stay near the top of the file so compile features are properly detected.\ninclude(VowpalWabbitFeatures)\n\nif(WIN32)\n  include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/platforms/win32.cmake)\n  message(STATUS \"WinSDK Version: ${CMAKE_SYSTEM_VERSION}\")\n  if (vw_BUILD_NET_FRAMEWORK)\n    string(REGEX MATCH \"[0-9.]+\" VW_NET_FRAMEWORK_VERSION ${CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION})\n    string(REPLACE \".\" \"\" VW_NET_FRAMEWORK_TFM ${VW_NET_FRAMEWORK_VERSION})\n    string(PREPEND VW_NET_FRAMEWORK_TFM \"net\")\n    message(STATUS \".NET Framework Version: ${VW_NET_FRAMEWORK_VERSION} (${VW_NET_FRAMEWORK_TFM})\")\n  endif()\nendif()\n\nif(VW_FEAT_FLATBUFFERS)\n  list(APPEND VCPKG_MANIFEST_FEATURES \"flatbuffers\")\nendif()\n\n# This is a hack around the fact the Python build does not seem to be capable of\n# dealing with manifest features.\nif(VW_FEAT_LDA AND NOT BUILD_PYTHON)\n  list(APPEND VCPKG_MANIFEST_FEATURES \"lda\")\nendif()\n\n#option(BUILD_TESTING \"Build tests\" ON)\n#if(BUILD_TESTING)\n#  list(APPEND VCPKG_MANIFEST_FEATURES \"tests\")\n#endif()\n\noption(BUILD_BENCHMARKS \"Build benchmarks\" OFF)\nif(BUILD_BENCHMARKS)\n  list(APPEND VCPKG_MANIFEST_FEATURES \"benchmarks\")\nendif()\n\n# CMake project() does not support semantic versioning\nproject(vowpal_wabbit VERSION \"${VW_VERSION_MAJOR}.${VW_VERSION_MINOR}.${VW_VERSION_PATCH}\" LANGUAGES C CXX)\nset(VW_PROJECT_DESCRIPTION \"Vowpal Wabbit Machine Learning System\")\nset(VW_PROJECT_URL \"https://vowpalwabbit.org\")\n\n# This must be checked after the project call since we need to check CMAKE_SYSTEM_PROCESSOR\n# It must be done before we include VowpalWabbitUtils\nif (VW_FEAT_LAS_SIMD AND NOT ((UNIX AND NOT APPLE) AND (${CMAKE_SYSTEM_PROCESSOR} STREQUAL \"x86_64\")))\n  message(STATUS \"LAS SIMD was requested but is only supported on x86_64 Linux and so was disabled.\")\n  # Set the cmake option to off\n  set(VW_FEAT_LAS_SIMD OFF CACHE BOOL \"\" FORCE)\nendif()\n\nvw_print_enabled_features()\n\noption(USE_LATEST_STD \"Override using C++11 with the latest standard the compiler offers. Default is C++11. \" OFF)\ninclude(DetectCXXStandard)\nif(NOT VW_CXX_STANDARD)\n  set(VW_CXX_STANDARD 11)\nendif()\nif(USE_LATEST_STD)\n  DetectCXXStandard(VW_CXX_STANDARD)\nendif()\nmessage(STATUS \"Using C++ standard: \" ${VW_CXX_STANDARD})\nset(CMAKE_CXX_STANDARD ${VW_CXX_STANDARD})\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\nset(CMAKE_CXX_VISIBILITY_PRESET \"hidden\")\n\noption(VW_USE_ASAN \"Compile with AddressSanitizer\" OFF)\noption(VW_USE_UBSAN \"Compile with UndefinedBehaviorSanitizer\" OFF)\n\nif(VW_USE_ASAN)\n  add_compile_definitions(VW_USE_ASAN)\n  if(MSVC)\n    add_compile_options(/fsanitize=address)\n    add_link_options(/InferASanLibs /incremental:no /debug)\n  else()\n    add_compile_options(-fsanitize=address -fno-omit-frame-pointer -g3)\n    add_link_options(-fsanitize=address -fno-omit-frame-pointer -g3)\n  endif()\nendif()\n\nif(VW_USE_UBSAN)\n  add_compile_definitions(VW_USE_UBSAN)\n  if(MSVC)\n    message(FATAL_ERROR \"UBSan not supported on MSVC\")\n  else()\n    add_compile_options(-fsanitize=undefined -fno-sanitize-recover -fno-omit-frame-pointer -g3)\n    add_link_options(-fsanitize=undefined -fno-sanitize-recover -fno-omit-frame-pointer -g3)\n  endif()\nendif()\n\n\ninclude(VowpalWabbitUtils)\n\nif(MSVC)\n  # Use C++ standard exception handling instead of MSVC default\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /EHsc\")\nelse()\n  # We want RelWithDebInfo and Release to be similar. But default RelWithDebInfo\n  # is O2 and Release is O3, override that here:\n  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"-O3 -g -DNDEBUG\")\nendif()\n\n# Grab git commitish into variable\nIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)\n  FIND_PACKAGE(Git)\n  IF(GIT_FOUND)\n    EXECUTE_PROCESS(\n      COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD\n      WORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n      OUTPUT_VARIABLE \"vw_GIT_COMMIT\"\n      ERROR_QUIET\n      OUTPUT_STRIP_TRAILING_WHITESPACE)\n    MESSAGE(STATUS \"Git Version: ${vw_GIT_COMMIT}\" )\n  ELSE(GIT_FOUND)\n    SET(vw_GIT_COMMIT \"\")\n  ENDIF(GIT_FOUND)\nELSE(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)\n  SET(vw_GIT_COMMIT \"\")\nENDIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)\n\noption(VW_GCOV \"Turn on flags required for gcov\" OFF)\noption(WARNINGS \"Turn on warning flags. ON by default.\" ON)\noption(WARNING_AS_ERROR \"Turn on warning as error. OFF by default.\" OFF)\noption(STATIC_LINK_VW \"Link VW executable statically. Off by default.\" OFF)\noption(STATIC_LINK_VW_JAVA \"Link VW-JNI shared library statically. Off by default.\" OFF)\noption(VW_INSTALL \"Add install targets.\" OFF)\noption(BUILD_ONLY_STANDALONE_BENCHMARKS \"Build only the benchmarks that can run standalone (and do not use vw internals)\" OFF)\noption(BUILD_JAVA \"Add Java targets.\" Off)\noption(BUILD_PYTHON \"Add Python targets.\" Off)\noption(BUILD_EXPERIMENTAL_BINDING \"Add targets for experimental bindings\" OFF)\noption(LTO \"Enable Link Time optimization (Requires Release build, only works with clang and linux/mac for now).\" Off)\noption(RAPIDJSON_SYS_DEP \"Override using the submodule for RapidJSON dependency. Instead will use find_package\" OFF)\noption(FMT_SYS_DEP \"Override using the submodule for FMT dependency. Instead will use find_package\" OFF)\noption(SPDLOG_SYS_DEP \"Override using the submodule for spdlog dependency. Instead will use find_package\" OFF)\noption(VW_BOOST_MATH_SYS_DEP \"Override using the submodule for boost math dependency. Instead will use find_package\" OFF)\noption(VW_ZLIB_SYS_DEP \"Override using the submodule for zlib dependency. Instead will use find_package\" ON)\noption(VW_GTEST_SYS_DEP \"Override using fetch package for gtest dependency. Instead will use find_package\" OFF)\noption(VW_EIGEN_SYS_DEP \"Override using the submodule for Eigen3 dependency. Instead will use find_package\" OFF)\noption(VW_STRING_VIEW_LITE_SYS_DEP \"Override using the submodule for string-view-lite dependency. Instead will use find_package\" OFF)\noption(VW_SSE2NEON_SYS_DEP \"Override using the submodule for SSE2Neon dependency. Instead will use find_package\" OFF)\noption(VW_BUILD_VW_C_WRAPPER \"Enable building the c_wrapper project\" ON)\noption(vw_BUILD_NET_CORE \"Build .NET Core targets\" OFF)\noption(vw_BUILD_NET_FRAMEWORK \"Build .NET Framework targets\" OFF)\noption(VW_BUILD_WASM \"Add WASM target\" OFF)\noption(STD_INV_SQRT \"Use standard library inverse square root\" OFF)\n\nif(VW_INSTALL AND NOT VW_ZLIB_SYS_DEP)\n  message(WARNING \"Installing with a vendored version of zlib is not recommended. Use VW_ZLIB_SYS_DEP to use a system dependency or specify VW_INSTALL=OFF to silence this warning.\")\nendif()\n\n# The only way to tell it was used is if it was turned off, since the default is true.\nif(DEFINED BUILD_TESTS)\n  message(WARNING \"Value of BUILD_TESTS option ignored. Please use the standard option BUILD_TESTING.\")\nendif()\n\nif(VW_INSTALL AND NOT FMT_SYS_DEP)\n  message(WARNING \"Installing with a vendored version of fmt is not recommended. Use FMT_SYS_DEP to use a system dependency or specify VW_INSTALL=OFF to silence this warning.\")\nendif()\n\nif(VW_INSTALL AND NOT SPDLOG_SYS_DEP)\n  message(WARNING \"Installing with a vendored version of spdlog is not recommended. Use SPDLOG_SYS_DEP to use a system dependency or specify VW_INSTALL=OFF to silence this warning.\")\nendif()\n\nif(VW_INSTALL AND NOT RAPIDJSON_SYS_DEP)\n  message(WARNING \"Installing with a vendored version of rapidjson is not recommended. Use RAPIDJSON_SYS_DEP to use a system dependency or specify VW_INSTALL=OFF to silence this warning.\")\nendif()\n\nif(VW_GCOV AND (NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"))\n  message(FATAL_ERROR \"VW_GCOV requires Debug build type.\")\nendif()\n\nif(WIN32 AND (STATIC_LINK_VW OR BUILD_JAVA OR VW_GOV))\n  message(FATAL_ERROR \"Unsupported option enabled on Windows build\")\nendif()\n\n# Use folders in VS solution\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\nif(WIN32)\n  set(STATIC_LIB_SUFFIXES \".lib\" \".a\")\nelse()\n  set(STATIC_LIB_SUFFIXES \".a\")\nendif()\n\nif(STATIC_LINK_VW_JAVA)\n  set(CMAKE_FIND_LIBRARY_SUFFIXES ${STATIC_LIB_SUFFIXES})\nelseif(STATIC_LINK_VW)\n  set(CMAKE_FIND_LIBRARY_SUFFIXES ${STATIC_LIB_SUFFIXES})\n  SET(BUILD_SHARED_LIBS OFF)\nendif()\n\nset(THREADS_PREFER_PTHREAD_FLAG ON)\nfind_package(Threads REQUIRED)\n\nset(LINK_THREADS Threads::Threads)\nif(STATIC_LINK_VW)\n  if(APPLE)\n    set(unix_static_flag \"\")\n  else()\n    set(LINK_THREADS -Wl,--whole-archive -lpthread -Wl,--no-whole-archive)\n    set(unix_static_flag -static)\n  endif()\nendif()\n\n# This provides the variables such as CMAKE_INSTALL_LIBDIR for installation paths.\ninclude(GNUInstallDirs)\n\nadd_subdirectory(library)\ninclude(ext_libs/ext_libs.cmake)\nadd_subdirectory(vowpalwabbit)\nadd_subdirectory(utl/dump_options)\n\nif (VW_FEAT_FLATBUFFERS)\n  add_subdirectory(utl/flatbuffer)\nendif()\n\nif(BUILD_JAVA)\n  add_subdirectory(java)\nendif()\n\nif(BUILD_PYTHON)\n  add_subdirectory(python)\nendif()\n\nif(BUILD_BENCHMARKS)\n  add_subdirectory(test/benchmarks)\nendif()\n\nif(VW_BUILD_WASM)\n  add_subdirectory(wasm)\nendif()\n\nif(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME AND BUILD_TESTING)\n  add_subdirectory(test)\n\n  # Don't offer these make dependent targets on Windows\n  if(NOT WIN32)\n    # make bigtests BIG_TEST_ARGS=\"<args here>\"\n    add_custom_target(bigtests\n      DEPENDS vw\n      COMMAND make \\${BIG_TEST_ARGS}\n      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/big_tests)\n  endif()\nendif()\n\n# Must be done after the test block so that enable_testing() has been called\nif(BUILD_EXPERIMENTAL_BINDING)\n  add_subdirectory(bindings)\nendif()\n\nif(vw_BUILD_NET_FRAMEWORK OR vw_BUILD_NET_CORE)\n  add_subdirectory(cs)\nendif()\n\n# Handle installation of targets, version, config and pkgconfig\nif(VW_INSTALL)\n  # only do this if the file exists. Some packages dont have this file and its only needed in a very specific use case\n  if(EXISTS nuget/native/vowpalwabbit.nuspec.in)\n    configure_file(nuget/native/vowpalwabbit.nuspec.in nuget/native/vowpalwabbit.nuspec @ONLY)\n  endif()\n\n  configure_file(libvw_c_wrapper.pc.in libvw_c_wrapper.pc @ONLY)\n  install(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/libvw_c_wrapper.pc\n    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\n\n  install(EXPORT VowpalWabbitConfig\n    FILE\n      VowpalWabbitTargets.cmake\n    NAMESPACE\n      VowpalWabbit::\n    DESTINATION\n      ${CMAKE_INSTALL_LIBDIR}/cmake/VowpalWabbit)\n\n  include(CMakePackageConfigHelpers)\n  write_basic_package_version_file(\n    ${CMAKE_CURRENT_BINARY_DIR}/VowpalWabbitConfigVersion.cmake\n    VERSION ${PACKAGE_VERSION}\n    COMPATIBILITY ExactVersion)\n\n  configure_package_config_file (\n    cmake/VowpalWabbitConfig.cmake.in\n    ${CMAKE_CURRENT_BINARY_DIR}/VowpalWabbitConfig.cmake\n    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/VowpalWabbit)\n\n  install(\n    FILES\n      ${CMAKE_CURRENT_BINARY_DIR}/VowpalWabbitConfigVersion.cmake\n      ${CMAKE_CURRENT_BINARY_DIR}/VowpalWabbitConfig.cmake\n    DESTINATION\n      ${CMAKE_INSTALL_LIBDIR}/cmake/VowpalWabbit)\n\nendif()\n\nset(CPACK_PACKAGE_VENDOR \"Vowpal Wabbit\")\nset(CPACK_PACKAGE_NAME \"vowpal-wabbit\")\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"Vowpal Wabbit is a machine learning system which pushes the frontier of machine learning with techniques such as online, hashing, allreduce, reductions, learning2search, active, and interactive learning.\")\nset(CPACK_PACKAGE_VERSION_MAJOR ${VW_VERSION_MAJOR})\nset(CPACK_PACKAGE_VERSION_MINOR ${VW_VERSION_MINOR})\nset(CPACK_PACKAGE_VERSION_PATCH ${VW_VERSION_PATCH})\nset(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/LICENSE\")\nset(CPACK_RESOURCE_FILE_README \"${CMAKE_CURRENT_SOURCE_DIR}/README.md\")\n# TODO Make this an email address or contact page\nset(CPACK_PACKAGE_CONTACT \"https://github.com/VowpalWabbit/vowpal_wabbit\")\n# Generates a package dependency list in the deb control file\nset(CPACK_DEBIAN_PACKAGE_SHLIBDEPS On)\n\ninclude(CPack)\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 6.8017578125,
          "content": "{\n  \"version\": 3,\n  \"cmakeMinimumRequired\": {\n    \"major\": 3,\n    \"minor\": 10,\n    \"patch\": 0\n  },\n  \"configurePresets\": [\n    {\n      \"name\": \"default\",\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"${sourceDir}/build\",\n      \"cacheVariables\": {\n        \"CMAKE_TOOLCHAIN_FILE\": {\n          \"type\": \"FILEPATH\",\n          \"value\": \"${sourceDir}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake\"\n        },\n        \"BUILD_TESTING\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"RAPIDJSON_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"FMT_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"SPDLOG_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"VW_BOOST_MATH_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"VW_ZLIB_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"VW_GTEST_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_EIGEN_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"VW_STRING_VIEW_LITE_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-debug\",\n      \"inherits\": \"default\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Debug\"\n        },\n        \"VW_FEAT_CB_GRAPH_FEEDBACK\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-release\",\n      \"inherits\": \"default\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Release\"\n        },\n        \"VW_FEAT_CB_GRAPH_FEEDBACK\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-sanitizer-base\",\n      \"inherits\": \"default\",\n      \"cacheVariables\": {\n        \"USE_LATEST_STD\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"VW_FEAT_FLATBUFFERS\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"VW_FEAT_CSV\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"VW_FEAT_CB_GRAPH_FEEDBACK\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"STD_INV_SQRT\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-asan-debug\",\n      \"inherits\": \"vcpkg-sanitizer-base\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Debug\"\n        },\n        \"VW_USE_ASAN\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-asan-release\",\n      \"inherits\": \"vcpkg-sanitizer-base\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Release\"\n        },\n        \"VW_USE_ASAN\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-ubsan-debug\",\n      \"inherits\": \"vcpkg-sanitizer-base\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Debug\"\n        },\n        \"VW_USE_UBSAN\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vcpkg-ubsan-release\",\n      \"inherits\": \"vcpkg-sanitizer-base\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": {\n          \"type\": \"STRING\",\n          \"value\": \"Release\"\n        },\n        \"VW_USE_UBSAN\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"wasm\",\n      \"description\": \"CMAKE_TOOLCHAIN_FILE has to be passed explicitly since emcmake overwrites it if we define it here.\",\n      \"inherits\": \"default\",\n      \"cacheVariables\": {\n        \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\":\n        {\n          \"type\": \"FILEPATH\",\n          \"value\": \"$env{EMSDK}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake\"\n        },\n        \"VW_BUILD_WASM\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"USE_LATEST_STD\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        },\n        \"VW_FEAT_FLATBUFFERS\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VW_FEAT_CSV\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VW_FEAT_LDA\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VW_FEAT_SEARCH\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VW_FEAT_NETWORKING\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"BUILD_TESTING\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VW_BUILD_VW_C_WRAPPER\": {\n          \"type\": \"BOOL\",\n          \"value\": \"Off\"\n        },\n        \"VCPKG_TARGET_TRIPLET\": {\n          \"type\": \"STRING\",\n          \"value\": \"wasm32-emscripten\"\n        },\n        \"STD_INV_SQRT\": {\n          \"type\": \"BOOL\",\n          \"value\": \"On\"\n        }\n      }\n    },\n    {\n      \"name\": \"vs2022-vcpkg-no-sys-deps\",\n      \"generator\": \"Visual Studio 17 2022\",\n      \"binaryDir\": \"${sourceDir}/build\",\n      \"cacheVariables\": {\n        \"CMAKE_TOOLCHAIN_FILE\": {\n          \"type\": \"FILEPATH\",\n          \"value\": \"${sourceDir}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake\"\n        },\n        \"BUILD_TESTING\": {\n          \"type\": \"BOOL\",\n          \"value\": \"ON\"\n        },\n        \"RAPIDJSON_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"FMT_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"SPDLOG_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_BOOST_MATH_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_ZLIB_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_GTEST_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_EIGEN_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        },\n        \"VW_STRING_VIEW_LITE_SYS_DEP\": {\n          \"type\": \"BOOL\",\n          \"value\": \"OFF\"\n        }\n      }\n    }\n  ],\n  \"buildPresets\": [\n    {\n      \"name\": \"vcpkg-debug\",\n      \"configurePreset\": \"vcpkg-debug\"\n    },\n    {\n      \"name\": \"vcpkg-release\",\n      \"configurePreset\": \"vcpkg-release\"\n    }\n  ],\n  \"testPresets\": [\n    {\n      \"name\": \"vcpkg-debug\",\n      \"configurePreset\": \"vcpkg-debug\",\n      \"output\": { \"outputOnFailure\": true },\n      \"execution\": { \"noTestsAction\": \"error\", \"stopOnFailure\": true },\n      \"filter\": { \"include\": { \"label\": \"VWTestList\" } }\n    },\n    {\n      \"name\": \"vcpkg-release\",\n      \"configurePreset\": \"vcpkg-release\",\n      \"output\": { \"outputOnFailure\": true },\n      \"execution\": { \"noTestsAction\": \"error\", \"stopOnFailure\": true },\n      \"filter\": { \"include\": { \"label\": \"VWTestList\" } }\n    }\n  ]\n}\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.802734375,
          "content": "# Contributing\n\nVowpal Wabbit thrives on its community. This document contains some guidelines\nto make contributing easier.\n\n## Process\n\n1. [Reach out if you want feedback](#reaching-out)\n1. [Implement the change and its tests](#implementation)\n1. [Start a pull request & address comments](#pull-request)\n1. [Merge](#merge)\n\n### Reaching out\n\nOpen an issue if you want feedback on your idea before you code. If it's\nsomething non trivial we suggest reaching out to make sure it aligns with the\nproject goals (performance implications, design requirements, interfaces, etc.).\nThis will let us have a brief discussion about the problem and, hopefully,\nidentify some potential pitfalls before too much time is spent on your part.\n\nIf you're just fixing typos or small bugs there's no need to reach out\nbeforehand.\n\n### Implementation\n\n* Fork the repository on GitHub\n* Start on a new topic branch off of master\n* Instructions for getting Vowpal Wabbit building and running the tests are in the\n  [Wiki](https://github.com/VowpalWabbit/vowpal_wabbit/wiki)\n* Aim for each pull request to have one goal. If the PR starts to get too large,\n  consider splitting it into multiple, independent pull requests\n    * Some changes are more naturally authored in the same pull request. This is\n      fine, though we find this to be a rare occurrence. These sort of changes\n      are harder to review\n* Aim to add tests that exercise the new behaviour and make sure that all the\n  tests continue to pass\n\n### Pull request\n\nStart a GitHub pull request to merge your topic branch into the [main repository's master branch](https://github.com/VowpalWabbit/vowpal_wabbit/tree/master).\n\nWhen you submit a pull request, a suite of builds and tests will be run\nautomatically, and the results will show up in the \"Checks\" section of the PR.\nGenerally, we'll wait for these to all pass before we review your PR. If you\nneed help resolving build or test issues feel free to reach out in the comments\nof your PR.\n\nWe suggest ticking \"Allow edits and access to secrets by maintainers\" so that we\ncan contribute to your PR if need be.\n\n### Merge\n\nOnce the comments in the pull request have been addressed, we will merge your\nchanges. Thank you for helping improve Vowpal Wabbit!\n\nBy default we'll perform a squash merge, so don't worry if the commit history is\nmessy.\n\n# Reporting Security Issues\n\nSecurity issues and bugs should be reported privately, via email, to `vowpalwabbit-security [a t] hunch.net`\n# Contact us\n\nWays to get in contact can be found [here](https://github.com/VowpalWabbit/vowpal_wabbit/issues/new/choose).\n\n# Code of Conduct\n\nAlthough VW is not a Microsoft project, we follow the \n[Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the\n[Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.546875,
          "content": "Copyright © Microsoft Corp 2012-2014, Yahoo! Inc. 2007-2012, and many\nindividual contributors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\n\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n\n      notice, this list of conditions and the following disclaimer in the\n\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of the Microsoft Corp nor the\n\n      names of its contributors may be used to endorse or promote products\n\n      derived from this software without specific prior written permission.\n\n \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.5498046875,
          "content": "include *.txt *.in CMakeSettings.json LICENSE\ninclude python/README.rst python/*.txt python/*.bat\nrecursive-include python *\nrecursive-include python/vowpalwabbit *\nrecursive-include cluster *\nrecursive-include cmake *\nrecursive-include library *\nrecursive-include utl *\nrecursive-include ext_libs *\nrecursive-include vowpalwabbit *\nrecursive-include explore *\nrecursive-include python/bin python/*.dll\nglobal-exclude *.o *.exe *.pyc\nrecursive-exclude vowpalwabbit/.nuget *\nrecursive-exclude ext_libs/boost_math/doc *\nrecursive-exclude ext_libs/boost_math/test *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.4140625,
          "content": "default: vw\nall: vw library_example java vw_spanning_tree_bin python\n\n# CMake configs\nensure_cmake:\n\tmkdir -p build\n\tcd build; cmake ..\n\n# for profiling -- note that it needs to be gcc\nensure_cmake_gcov:\n\tmkdir -p build\n\tcd build; cmake .. -DCMAKE_BUILD_TYPE=Debug -DVW_GCOV=On\n\nensure_cmake_profile:\n\tmkdir -p build\n\tcd build; cmake ..  -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-pg\"\n\n# for valgrind profiling: run 'valgrind --tool=callgrind PROGRAM' then 'callgrind_annotate --tree=both --inclusive=yes'\nensure_cmake_valgrind:\n\tmkdir -p build\n\tcd build; cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=\"-fomit-frame-pointer -fno-strict-aliasing\"\n\nensure_cmake_static:\n\tmkdir -p build\n\tcd build; cmake .. -DSTATIC_LINK_VW=On\n\n# Build targets\nspanning_tree_build:\n\tcd build; make -j$(nproc) vw_spanning_tree_bin\n\nvw_build:\n\tcd build; make -j$(nproc) vw_cli_bin\n\nactive_interactor_build:\n\tcd build; make -j$(nproc) active_interactor\n\nlibrary_example_build:\n\tcd build; make -j$(nproc) ezexample_predict ezexample_predict_threaded ezexample_train library_example test_search search_generate recommend gd_mf_weights\n\npython_build:\n\tcd build; make -j$(nproc) pylibvw\n\njava_build:\n\tcd build; make -j$(nproc) vw_jni\n\ntest_build:\n\t@echo \"vw running test-suite...\"\n\tcd build; make -j$(nproc) all; make test\n\nbigtests_build:\n\tcd build; make -j$(nproc) bigtests BIG_TEST_ARGS=\"$(MAKEFLAGS)\"\n\ninstall_build:\n\tcd build; make -j$(nproc) install\n\ndoc_build:\n\tcd build; make doc\n\n# These can be invoked with [gcov, valgrind, profile, static]\nspanning_tree_%: ensure_cmake_% spanning_tree_build ;\nvw_%: ensure_cmake_% vw_build ;\nactive_interactor_%: ensure_cmake_% active_interactor_build ;\nlibrary_example_%: ensure_cmake_% library_example_build ;\npython_%: ensure_cmake_% python_build ;\njava_%: ensure_cmake_% java_build ;\ntest_%: ensure_cmake_% test_build ;\nunit_test_%: ensure_cmake_% unit_test_build ;\nbigtests_%: ensure_cmake_% bigtests_build ;\ninstall_%: ensure_cmake_% install_build ;\n\n# Normal build commands that use default configuration\nspanning_tree: ensure_cmake spanning_tree_build ;\nvw: ensure_cmake vw_build ;\nactive_interactor: ensure_cmake active_interactor_build ;\nlibrary_example: ensure_cmake library_example_build ;\npython: ensure_cmake python_build ;\njava: ensure_cmake java_build ;\ntest: ensure_cmake test_build ;\nunit_test: ensure_cmake unit_test_build ;\nbigtests: ensure_cmake bigtests_build ;\ninstall: ensure_cmake install_build ;\n\nclean:\n\trm -rf build\n"
        },
        {
          "name": "R",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.2431640625,
          "content": "<img src=\"/logo_assets/vowpal-wabbits-github-logo@3x.png\" height=\"auto\" width=\"100%\" alt=\"Vowpal Wabbit\">\n\n[![Linux build status](https://img.shields.io/azure-devops/build/vowpalwabbit/3934113c-9e2b-4dbc-8972-72ab9b9b4342/23?label=Linux%20build&logo=Azure%20Devops)](https://dev.azure.com/vowpalwabbit/Vowpal%20Wabbit/_build/latest?definitionId=23&branchName=master)\n[![Windows build status](https://img.shields.io/azure-devops/build/vowpalwabbit/3934113c-9e2b-4dbc-8972-72ab9b9b4342/14?label=Windows%20build&logo=Azure%20Devops)](https://dev.azure.com/vowpalwabbit/Vowpal%20Wabbit/_build/latest?definitionId=14&branchName=master)\n\n[![codecov](https://codecov.io/gh/VowpalWabbit/vowpal_wabbit/branch/master/graph/badge.svg)](https://codecov.io/gh/VowpalWabbit/vowpal_wabbit)\n[![Total Alerts](https://img.shields.io/lgtm/alerts/g/JohnLangford/vowpal_wabbit.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/JohnLangford/vowpal_wabbit/alerts/)\n\nThis is the *Vowpal Wabbit* fast online learning code.\n\n## Why Vowpal Wabbit?\nVowpal Wabbit is a machine learning system which pushes the frontier of machine learning with techniques such as online, hashing, allreduce, reductions, learning2search, active, and interactive learning. There is a specific focus on reinforcement learning with several contextual bandit algorithms implemented and the online nature lending to the problem well. Vowpal Wabbit is a destination for implementing and maturing state of the art algorithms with performance in mind.\n\n- **Input Format.** The input format for the learning algorithm is substantially more flexible than might be expected. Examples can have features consisting of free form text, which is interpreted in a bag-of-words way. There can even be multiple sets of free form text in different namespaces.\n- **Speed.** The learning algorithm is fast -- similar to the few other online algorithm implementations out there. There are several optimization algorithms available with the baseline being sparse gradient descent (GD) on a loss function.\n- **Scalability.** This is not the same as fast. Instead, the important characteristic here is that the memory footprint of the program is bounded independent of data. This means the training set is not loaded into main memory before learning starts. In addition, the size of the set of features is bounded independent of the amount of training data using the hashing trick.\n- **Feature Interaction.** Subsets of features can be internally paired so that the algorithm is linear in the cross-product of the subsets. This is useful for ranking problems. The alternative of explicitly expanding the features before feeding them into the learning algorithm can be both computation and space intensive, depending on how it's handled.\n\n[Visit the wiki to learn more.](https://github.com/VowpalWabbit/vowpal_wabbit/wiki)\n\n## Getting Started\nFor the most up to date instructions for getting started on Windows, MacOS or Linux [please see the wiki](https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Getting-started). This includes:\n\n- [Installing with a package manager](https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Getting-started)\n- [Building](https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Building)\n- [Tutorial](https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Tutorial)\n"
        },
        {
          "name": "ThirdPartyNotices.txt",
          "type": "blob",
          "size": 16.947265625,
          "content": "THIRD-PARTY SOFTWARE NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis project incorporates components from the projects listed below. The original copyright notices and the licenses under which Vowpal Wabbit received such components are set forth below. Vowpal Wabbit reserves all rights not expressly granted herein, whether by implication, estoppel or otherwise.\n\n1.\tRapidJSON (https://github.com/tencent/rapidjson/)\n2.\tzlib (http://zlib.net/)\n3.\tflatbuffers (https://google.github.io/flatbuffers/)\n4.  string-view-lite (https://github.com/martinmoene/string-view-lite)\n5. Eigen (https://gitlab.com/libeigen/eigen)\n\nRapidJSON NOTICES AND INFORMATION BEGIN HERE\n=========================================\nCopyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip.  All rights reserved.\n\nIf you have downloaded a copy of the RapidJSON binary from Tencent, please note that the RapidJSON binary is licensed under the MIT License.\nIf you have downloaded a copy of the RapidJSON source code from Tencent, please note that RapidJSON source code is licensed under the MIT License, except for the third-party components listed below which are subject to different license terms.  Your integration of RapidJSON into your own projects may require compliance with the MIT License, as well as the other licenses applicable to the third-party components included within RapidJSON.\nA copy of the MIT License is included in this file.\n\nOther dependencies and licenses:\n\nOpen Source Software Licensed Under the BSD License:\n--------------------------------------------------------------------\n\nThe msinttypes r29\nCopyright (c) 2006-2013 Alexander Chemeris\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of  copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nOpen Source Software Licensed Under the JSON License:\n--------------------------------------------------------------------\n\njson.org\nCopyright (c) 2002 JSON.org\nAll Rights Reserved.\n\nJSON_checker\nCopyright (c) 2002 JSON.org\nAll Rights Reserved.\n\n\nTerms of the JSON License:\n---------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nTerms of the MIT License:\n--------------------------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\n=========================================\nEND OF RapidJSON NOTICES AND INFORMATION\n\nzlib NOTICES AND INFORMATION BEGIN HERE\n=========================================\n/* zlib.h -- interface of the 'zlib' general purpose compression library\n  version 1.2.11, January 15th, 2017\n\n  Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n\n\n  The data format used by the zlib library is described by RFCs (Request for\n  Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950\n  (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).\n*/\n=========================================\nEND OF zlib NOTICES AND INFORMATION\n\nflatbuffers NOTICES AND INFORMATION BEGIN HERE\n=========================================\n/*\n   Copyright 2020 Google\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n=========================================\nEND OF flatbuffers NOTICES AND INFORMATION\n\nstring-view-lite NOTICES AND INFORMATION BEGIN HERE\n=========================================\n// Copyright 2017-2020 by Martin Moene\n//\n// string-view lite, a C++17-like string_view for C++98 and later.\n// For more information see https://github.com/martinmoene/string-view-lite\n//\n// Distributed under the Boost Software License, Version 1.0.\n// (See accompanying file LICENSE.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n=========================================\nEND OF string-view-lite NOTICES AND INFORMATION\n\nEigen NOTICES AND INFORMATION BEGIN HERE\n=========================================\nEigen is primarily MPL2 licensed. See COPYING.MPL2 and these links:\n  http://www.mozilla.org/MPL/2.0/\n  http://www.mozilla.org/MPL/2.0/FAQ.html\n\nSome files contain third-party code under BSD or LGPL licenses, whence the other\nCOPYING.* files here.\n\nAll the LGPL code is either LGPL 2.1-only, or LGPL 2.1-or-later.\nFor this reason, the COPYING.LGPL file contains the LGPL 2.1 text.\n\nIf you want to guarantee that the Eigen code that you are #including is licensed\nunder the MPL2 and possibly more permissive licenses (like BSD), #define this\npreprocessor symbol:\n  EIGEN_MPL2_ONLY\nFor example, with most compilers, you could add this to your project CXXFLAGS:\n  -DEIGEN_MPL2_ONLY\nThis will cause a compilation error to be generated if you #include any code that is\nLGPL licensed.\n=========================================\nEND OF Eigen NOTICES AND INFORMATION\n\nredsvd-h NOTICES AND INFORMATION BEGIN HERE\n=========================================\nA header-only version of RedSVD\n\nCopyright (c) 2014 Nicolas Tessore\n\nbased on RedSVD\n\nCopyright (c) 2010 Daisuke Okanohara\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of {{{project}}} nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n=========================================\nredsvd-h OF Eigen NOTICES AND INFORMATION\n\nanthonywilliams/ccia_code_samples NOTICES AND INFORMATION BEGIN HERE\n=========================================\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n=========================================\nanthonywilliams/ccia_code_samples NOTICES AND INFORMATION\n\nArmadillo NOTICES AND INFORMATION BEGIN HERE\n=========================================\nArmadillo C++ Linear Algebra Library\nCopyright 2008-2023 Conrad Sanderson (https://conradsanderson.id.au)\nCopyright 2008-2016 National ICT Australia (NICTA)\nCopyright 2017-2023 Data61 / CSIRO\n\nThis product includes software developed by Conrad Sanderson (https://conradsanderson.id.au)\nThis product includes software developed at National ICT Australia (NICTA)\nThis product includes software developed at Data61 / CSIRO\n\n---\n\nAttribution Notice.\nAs per UN General Assembly Resolution A/RES/ES-11/1\nadopted on 2 March 2022 with 141 votes in favour and 5 votes against,\nwe attribute the violation of the sovereignty and territorial integrity of Ukraine,\nand subsequent destruction of many Ukrainian cities and civilian infrastructure,\nto large-scale military aggression by the Russian Federation (aided by Belarus).\nFurther details:\nhttps://undocs.org/A/RES/ES-11/1\nhttps://digitallibrary.un.org/record/3965290/files/A_RES_ES-11_1-EN.pdf\nhttps://digitallibrary.un.org/record/3965290/files/A_RES_ES-11_1-RU.pdf\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n=========================================\nArmadillo NOTICES AND INFORMATION\n\nEnsmallen NOTICES AND INFORMATION BEGIN HERE\n=========================================\nensmallen is provided without any warranty of fitness for any purpose.  You\ncan redistribute the library and/or modify it under the terms of the 3-clause\nBSD license.  The text of the 3-clause BSD license is contained below.\n\n----\nCopyright (c) 2011-2018, mlpack and ensmallen contributors (see COPYRIGHT.txt)\nAll rights reserved.\n\nRedistribution and use of ensmallen in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n=========================================\nEnsmallen NOTICES AND INFORMATION"
        },
        {
          "name": "big_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "binder",
          "type": "tree",
          "content": null
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.3984375,
          "content": "codecov:\n  token: dd972a6b-956e-4d07-acf4-2373926d8293\n\n# Don't add the PR comment\ncomment: false\n\ncoverage:\n  status:\n    project:\n      default:\n        target: auto\n        base: auto\n        # Coverage can drop by 0.5% before it is a failure.\n        threshold: 0.5%\n        paths:\n          - \"vowpalwabbit/\"\n\nignore:\n  - \"**/tests/\"\n  - \"**/test/\"\n  - \"test/\"\n  - \"library/\"\n  - \"utl/\"\n  - \"ext_libs/\"\n"
        },
        {
          "name": "cs",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext_libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.943359375,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"locked\": {\n        \"lastModified\": 1667395993,\n        \"narHash\": \"sha256-nuEHfE/LcWyuSWnS8t12N1wc105Qtau+/OdUAjtQ0rA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"5aed5285a952e0b949eb3ba02c12fa4fcfef535f\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1669597967,\n        \"narHash\": \"sha256-R+2NaDkXsYkOpFOhmVR8jBZ77Pq55Z6ilaqwFLLn000=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"be9e3762e719211368d186f547f847737baad720\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 4.732421875,
          "content": "{\n  # Currently, this flake only contains tools helpful for development.\n  # Over time, we may add a package definition and other things.\n  description = \"Development utils for Vowpal Wabbit.\";\n\n  inputs.flake-utils.url = \"github:numtide/flake-utils\";\n\n  outputs = { self, nixpkgs, flake-utils }:\n    flake-utils.lib.eachDefaultSystem (system:\n      let pkgs = nixpkgs.legacyPackages.${system}; in\n      let\n        # Note: this compile_commands.json does not work with clangd because it\n        # uses the nix clang-wrapper which abstracts enough away so that clangd\n        # can no longer find the right includes.\n        generate-compile-commands = ''\n          echo -n \"Generating compile_commands.json... \"\n          rm -rf $TMPDIR/compile_commands_build\n          mkdir -p $TMPDIR/compile_commands_build\n          cmake -S . -B \"$TMPDIR/compile_commands_build\" \\\n            -DCMAKE_EXPORT_COMPILE_COMMANDS=On \\\n            -DRAPIDJSON_SYS_DEP=On \\\n            -DFMT_SYS_DEP=On \\\n            -DSPDLOG_SYS_DEP=On \\\n            -DVW_BOOST_MATH_SYS_DEP=On \\\n            -DVW_ZLIB_SYS_DEP=On \\\n            -DVW_GTEST_SYS_DEP=On \\\n            -DVW_EIGEN_SYS_DEP=On \\\n            -DBUILD_TESTING=Off \\\n            -DVW_BUILD_VW_C_WRAPPER=Off > cmake_compile_commands_output.txt 2>&1\n          if [ $? -ne 0 ]; then\n            echo \"Failed\"\n            echo\n            cat cmake_compile_commands_output.txt >&2\n            exit 1\n          else\n            echo \"Done\"\n            rm cmake_compile_commands_output.txt\n          fi\n        '';\n      in\n      let\n        core-dependencies = [\n          pkgs.spdlog\n          pkgs.fmt\n          pkgs.zlib\n          pkgs.rapidjson\n          pkgs.eigen\n          pkgs.gtest\n          pkgs.boost\n          pkgs.cmake\n        ];\n      in\n      let\n        python-clang-tidy-package = pkgs.stdenv.mkDerivation {\n          name = \"python-clang-tidy\";\n          src = pkgs.fetchurl {\n            url = \"https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/clang-tools-extra-14.0.6.src.tar.xz\";\n            sha256 = \"sha256-fPO4/1bGXE0erjxWiD/EpsvD/586FTCnTWbkXScnGGY=\";\n          };\n          sourceRoot = \"clang-tools-extra-14.0.6.src\";\n          phases = [ \"unpackPhase\" \"installPhase\" \"fixupPhase\" ];\n          propagatedBuildInputs = [ pkgs.python3 pkgs.clang-tools_14 ];\n          installPhase = ''\n            mkdir -p $out/bin\n            cp clang-tidy/tool/run-clang-tidy.py $out/bin\n            cp clang-tidy/tool/run-clang-tidy.py $out/bin/run-clang-tidy\n            cp clang-tidy/tool/clang-tidy-diff.py $out/bin\n            cp clang-tidy/tool/clang-tidy-diff.py $out/bin/clang-tidy-diff\n          '';\n        };\n      in\n      let\n        python-clang-format-package = pkgs.stdenv.mkDerivation {\n          name = \"python-clang-format\";\n          src = pkgs.fetchurl {\n            url = \"https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/clang-14.0.6.src.tar.xz\";\n            sha256 = \"sha256-K1hHtqYxGLnv5chVSDY8gf/glrZsOzZ16VPiY0KuQDE=\";\n          };\n          sourceRoot = \"clang-14.0.6.src\";\n          phases = [ \"unpackPhase\" \"installPhase\" \"fixupPhase\" ];\n          propagatedBuildInputs = [ pkgs.python3 pkgs.clang-tools_14 ];\n          installPhase = ''\n            mkdir -p $out/bin\n            cp tools/clang-format/clang-format-diff.py $out/bin\n            cp tools/clang-format/clang-format-diff.py $out/bin/clang-format-diff\n          '';\n        };\n      in\n      let\n        clang-tidy-all-script = pkgs.writeShellScriptBin \"vw-clang-tidy\" ''\n          ${generate-compile-commands}\n          ${python-clang-tidy-package}/bin/run-clang-tidy -p $TMPDIR/compile_commands_build -quiet -header-filter=vw/* \"$@\"\n        '';\n      in\n      let\n        clang-tidy-diff-script = pkgs.writeShellScriptBin \"vw-clang-tidy-diff\" ''\n          ${generate-compile-commands}\n          ${python-clang-tidy-package}/bin/clang-tidy-diff -p1 -path $TMPDIR/compile_commands_build -quiet -use-color \"$@\" <&0\n        '';\n      in\n      let cpp-docs = pkgs.stdenv.mkDerivation {\n        name = \"cpp-docs\";\n        src = self;\n        buildInputs = [ pkgs.doxygen ];\n        phases = [ \"installPhase\" ];\n        installPhase = ''\n          cd $src/doc\n          mkdir -p $out\n          # This is required to override the output directory to the derivations output directory\n          ( cat Doxyfile ; echo \"OUTPUT_DIRECTORY=$out\" ) | ${pkgs.doxygen}/bin/doxygen -\n        '';\n      }; in\n      {\n        formatter = pkgs.nixpkgs-fmt;\n        packages = {\n          vw-cpp-docs = cpp-docs;\n        };\n        devShell = pkgs.mkShell {\n          packages = [\n            python-clang-tidy-package\n            python-clang-format-package\n            clang-tidy-all-script\n            clang-tidy-diff-script\n          ] ++ core-dependencies;\n        };\n      }\n    );\n}\n"
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "libvw_c_wrapper.pc.in",
          "type": "blob",
          "size": 0.3291015625,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=@CMAKE_INSTALL_FULL_BINDIR@\nlibdir=@CMAKE_INSTALL_FULL_LIBDIR@\nincludedir=@CMAKE_INSTALL_FULL_INCLUDEDIR@\n\nName: Vowpal Wabbit (C wrapper)\nDescription: @VW_PROJECT_DESCRIPTION@ (C wrapper)\nURL: @VW_PROJECT_URL@\nVersion: @PACKAGE_VERSION@\nLibs: -L${libdir} -lvw_c_wrapper\nCflags: -I${includedir}\n"
        },
        {
          "name": "logo_assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0556640625,
          "content": "numpy>=1.6.1\nscipy>=0.9\nscikit-learn>=0.17\npandas>=0.24.2"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.7060546875,
          "content": "# -*- coding: utf-8 -*-\n\"\"\" Vowpal Wabbit python setup module \"\"\"\n\nimport distutils.dir_util\nimport os\nimport platform\nimport sys\nfrom codecs import open\nfrom distutils.command.clean import clean as _clean\nfrom distutils.sysconfig import get_python_inc\nfrom setuptools import setup, Extension, find_packages, Distribution as _distribution\nfrom setuptools.command.build_ext import build_ext as _build_ext\nfrom setuptools.command.sdist import sdist as _sdist\nfrom setuptools.command.install_lib import install_lib as _install_lib\nfrom shutil import rmtree\nimport multiprocessing\n\nsystem = platform.system()\nversion_info = sys.version_info\nhere = os.path.abspath(os.path.dirname(__file__))\npkg_path = os.path.join(here, \"python\")\n\n\nclass Distribution(_distribution):\n    global_options = _distribution.global_options\n\n    global_options += [\n        (\"enable-boost-cmake\", None, \"Enable boost-cmake\"),\n        (\n            \"cmake-options=\",\n            None,\n            \"Additional semicolon-separated cmake setup options list\",\n        ),\n        (\"cmake-generator=\", None, \"CMake generator to use\"),\n        (\"debug\", None, \"Debug build\"),\n    ]\n\n    if system == \"Windows\":\n        global_options += [\n            (\"vcpkg-root=\", None, \"Path to vcpkg root. For Windows only\"),\n        ]\n\n    def __init__(self, attrs=None):\n        self.vcpkg_root = None\n        self.enable_boost_cmake = None\n        self.cmake_options = None\n        self.cmake_generator = None\n        self.debug = False\n        _distribution.__init__(self, attrs)\n\n\nclass CMakeExtension(Extension):\n    def __init__(self, name):\n        # don't invoke the original build_ext for this special extension\n        Extension.__init__(self, name, sources=[])\n\n\nclass BuildPyLibVWBindingsModule(_build_ext):\n    def run(self):\n        for ext in self.extensions:\n            self.build_cmake(ext)\n\n        _build_ext.run(self)\n\n    def build_cmake(self, ext):\n        # Make build directory\n        distutils.dir_util.mkpath(self.build_temp)\n\n        # Ensure lib output directory is made\n        lib_output_dir = os.path.join(\n            here, os.path.dirname(self.get_ext_fullpath(ext.name))\n        )\n        distutils.dir_util.mkpath(lib_output_dir)\n\n        # example of cmake args\n        config = \"Debug\" if self.distribution.debug else \"Release\"\n\n        cmake_args = [\n            \"-DCMAKE_BUILD_TYPE=\" + config,\n            \"-DPY_VERSION=\" + \"{v[0]}.{v[1]}\".format(v=version_info),\n            \"-DBUILD_PYTHON=On\",\n            \"-DBUILD_TESTING=Off\",\n            \"-DWARNINGS=Off\",\n            \"-DVW_FEAT_CB_GRAPH_FEEDBACK=On\",\n            \"-DSTD_INV_SQRT=On\",\n        ]\n\n        # This doesn't work as expected for Python3.6 and 3.7 on Windows.\n        # See bug: https://bugs.python.org/issue39825\n        if system == \"Windows\" and sys.version_info.minor < 8:\n            from distutils import sysconfig as distutils_sysconfig\n\n            required_shared_lib_suffix = distutils_sysconfig.get_config_var(\n                \"EXT_SUFFIX\"\n            )\n        else:\n            import sysconfig\n\n            required_shared_lib_suffix = sysconfig.get_config_var(\"EXT_SUFFIX\")\n\n        if required_shared_lib_suffix is not None:\n            cmake_args += [\n                \"-DVW_PYTHON_SHARED_LIB_SUFFIX={}\".format(required_shared_lib_suffix)\n            ]\n\n        if self.distribution.enable_boost_cmake is None:\n            # Add this flag as default since testing indicates its safe.\n            # But add a way to disable it in case it becomes a problem\n            cmake_args += [\"-DBoost_NO_BOOST_CMAKE=ON\"]\n\n        if self.distribution.cmake_options is not None:\n            argslist = self.distribution.cmake_options.split(\";\")\n            cmake_args += argslist\n\n        # If we are being installed in a conda environment then use the dependencies from there.\n        if \"CONDA_PREFIX\" in os.environ:\n            cmake_args.append(\n                \"-DCMAKE_PREFIX_PATH={}\".format(os.environ[\"CONDA_PREFIX\"])\n            )\n            cmake_args.append(\"-DPython_INCLUDE_DIR={}\".format(get_python_inc()))\n\n        # example of build args\n        build_args = [\"--config\", config]\n\n        cmake_generator = self.distribution.cmake_generator\n\n        if system == \"Windows\":\n            cmake_args += [\n                \"-DCMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG=\" + str(lib_output_dir),\n                \"-DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=\" + str(lib_output_dir),\n            ]\n\n            if cmake_generator is None:\n                cmake_generator = \"Visual Studio 15 2017 Win64\"\n\n            build_args += [\"--target\", \"pylibvw\"]\n\n            if self.distribution.vcpkg_root is not None:\n                # add the vcpkg toolchain if its provided\n                abs_vcpkg_path = os.path.abspath(self.distribution.vcpkg_root)\n                vcpkg_toolchain = os.path.join(\n                    abs_vcpkg_path, \"scripts\", \"buildsystems\", \"vcpkg.cmake\"\n                )\n                cmake_args += [\"-DCMAKE_TOOLCHAIN_FILE=\" + vcpkg_toolchain]\n\n        else:\n            cmake_args += [\n                \"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=\" + str(lib_output_dir),\n            ]\n            build_args += [\n                \"--\",\n                \"-j{}\".format(multiprocessing.cpu_count()),\n                # Build the pylibvw target\n                \"pylibvw\",\n            ]\n\n        if cmake_generator is not None:\n            cmake_args += [\"-G\", cmake_generator]\n\n            if cmake_generator == \"Visual Studio 16 2019\":\n                # The VS2019 generator now uses the -A option to select the toolchain's architecture\n                cmake_args += [\"-Ax64\"]\n\n        os.chdir(str(self.build_temp))\n        self.spawn([\"cmake\"] + cmake_args + [str(here)])\n        if not self.dry_run:\n            self.spawn([\"cmake\", \"--build\", \".\"] + build_args)\n        os.chdir(str(here))\n\n\nclass Clean(_clean):\n    \"\"\"Clean up after building python package directories\"\"\"\n\n    def run(self):\n        rmtree(os.path.join(here, \"dist\"), ignore_errors=True)\n        rmtree(os.path.join(here, \"build\"), ignore_errors=True)\n        rmtree(os.path.join(here, \"vowpalwabbit.egg-info\"), ignore_errors=True)\n        _clean.run(self)\n\n\nclass Sdist(_sdist):\n    def run(self):\n        _sdist.run(self)\n\n\nclass InstallLib(_install_lib):\n    def build(self):\n        _install_lib.build(self)\n\n\n# Get the long description from the README file\nwith open(os.path.join(pkg_path, \"README.rst\"), encoding=\"utf-8\") as f:\n    long_description = f.read()\n\n# Get the current version for the python package from the configure.ac file\nconfig_path = os.path.join(here, \"version.txt\")\nwith open(config_path, encoding=\"utf-8\") as f:\n    version = f.readline().strip()\n\nsetup(\n    name=\"vowpalwabbit\",\n    version=version,\n    python_requires=\">=3.6\",\n    description=\"Vowpal Wabbit Python package\",\n    long_description_content_type=\"text/x-rst\",\n    long_description=long_description,\n    url=\"https://github.com/VowpalWabbit/vowpal_wabbit\",\n    author=\"Scott Graham\",\n    author_email=\"scott.d.graham@gmail.com\",\n    license=\"BSD 3-Clause License\",\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Science/Research\",\n        \"Topic :: Scientific/Engineering\",\n        \"Topic :: Scientific/Engineering :: Information Analysis\",\n        \"License :: OSI Approved :: BSD License\",\n        \"Programming Language :: Python :: 3\",\n    ],\n    keywords=\"fast machine learning online classification regression\",\n    package_dir={\"\": os.path.relpath(pkg_path)},\n    packages=find_packages(where=pkg_path),\n    platforms=\"any\",\n    zip_safe=False,\n    include_package_data=True,\n    ext_modules=[CMakeExtension(\"pylibvw\")],\n    distclass=Distribution,\n    cmdclass={\n        \"build_ext\": BuildPyLibVWBindingsModule,\n        \"clean\": Clean,\n        \"sdist\": Sdist,\n        \"install_lib\": InstallLib,\n    },\n)\n"
        },
        {
          "name": "singularity",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utl",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.6845703125,
          "content": "{\n  \"$schema\": \"https://raw.githubusercontent.com/microsoft/vcpkg/master/scripts/vcpkg.schema.json\",\n  \"name\": \"vowpal-wabbit\",\n  \"version\": \"9.10.0\",\n  \"dependencies\": [\n    \"eigen3\",\n    \"fmt\",\n    \"rapidjson\",\n    \"spdlog\",\n    \"string-view-lite\",\n    \"zlib\"\n  ],\n  \"features\": {\n    \"tests\": {\n      \"description\": \"Build Tests\",\n      \"dependencies\": [\"gtest\"]\n    },\n    \"lda\": {\n      \"description\": \"Enable LDA reduction\",\n      \"dependencies\": [\"boost-math\"]\n    },\n    \"flatbuffers\": {\n      \"description\": \"Enable flatbuffers support\",\n      \"dependencies\": [\"flatbuffers\"]\n    },\n    \"benchmarks\": {\n      \"description\": \"Build Benchmarks\",\n      \"dependencies\": [\"benchmark\"]\n    }\n  }\n}\n"
        },
        {
          "name": "version.txt",
          "type": "blob",
          "size": 0.0068359375,
          "content": "9.10.0\n"
        },
        {
          "name": "vowpalwabbit",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}