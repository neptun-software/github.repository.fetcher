{
  "metadata": {
    "timestamp": 1736566099645,
    "page": 95,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ArthurSonzogni/FTXUI",
      "stars": 7589,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.150390625,
          "content": "# Defines the Chromium style for automatic reformatting.\n# http://clang.llvm.org/docs/ClangFormatStyleOptions.html\nBasedOnStyle: Chromium\nStandard: Cpp11\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.11328125,
          "content": "---\nChecks: \"*,\n        -*-macro-usage,\n        -*-magic-numbers,\n        -*-narrowing-conversions\n        -*-unnecessary-value-param,\n        -*-uppercase-literal-suffix,\n        -abseil-*,\n        -altera-*,\n        -android-*,\n        -bugprone-easily-swappable-parameters,\n        -cppcoreguidelines-non-private-member-variables-in-classes,\n        -cppcoreguidelines-pro-type-union-access,\n        -fuchsia-*,\n        -google-*,\n        -hicpp-signed-bitwise,\n        -llvm*,\n        -misc-no-recursion,\n        -misc-non-private-member-variables-in-classes,\n        -modernize-use-nodiscard,\n        -modernize-use-trailing-return-type,\n        -readability-avoid-const-params-in-decls,\n        -readability-else-after-return,\n        -readability-identifier-length,\n        -readability-implicit-bool-conversion,\n        -readability-non-const-parameter,\n        -readability-simplify-boolean-expr,\n        -readability-static-accessed-through-instance,\n        -readability-use-anyofallof,\n        -readability-avoid-nested-conditional-operator,\n        -zircon-*,\n\"\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nFormatStyle:     none\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0126953125,
          "content": "# Ignore all the files, except the ones we expect.\n# See https://jasonstitt.com/gitignore-whitelisting-patterns\n*\n!*/\n\n# Ignore build directories generated by default MSVC CMake integration\n# (otherwise causes terribly slow indexing)\nout/\n\n# Allowed top-level files:\n!.clang-format\n!.clang-tidy\n!.gitignore\n!CHANGELOG.md\n!CMakeLists.txt\n!LICENSE\n!README.md\n!codecov.yml\n!flake.lock\n!flake.nix\n!ftxui.pc.in\n!iwyu.imp\n\n# .github directory:\n!.github/**/*.yaml\n!.github/**/*.yml\n\n# cmake directory:\n!cmake/**/*.in\n!cmake/**/*.cmake\n\n# doc directory:\n!doc/**/Doxyfile.in\n!doc/**/*.txt\n!doc/**/*.css\n!doc/**/*.html\n!doc/**/*.xml\n!doc/**/*.md\n\n# examples directory:\n!examples/**/*.cpp\n!examples/**/*.css\n!examples/**/*.hpp\n!examples/**/*.html\n!examples/**/*.html.disabled\n!examples/**/*.ipp\n!examples/**/*.js\n!examples/**/*.mjs\n!examples/**/*.py\n!examples/**/*.txt\n\n# include directory:\n!include/ftxui/**/*.hpp\n!include/ftxui/**/*.cpp\n\n# src directory:\n!src/ftxui/**/*.hpp\n!src/ftxui/**/*.cpp\n\n# tools directory:\n!tools/**/*.sh\n!tools/**/*.cpp\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.0830078125,
          "content": "Changelog\n=========\n\ncurrent (development) \n---------------------\n\n### Component\n- Feature: Add support for raw input. Allowing more keys to be detected.\n- Feature: Add `ScreenInteractive::ForceHandleCtrlC(false)` to allow component\n  to fully override the default `Ctrl+C` handler.\n- Feature: Add `ScreenInteractive::ForceHandleCtrlZ(false)` to allow component\n  to fully override the default `Ctrl+Z` handler.\n- Feature: Add `Mouse::WeelLeft` and `Mouse::WeelRight` events on supported\n  terminals.\n- Feature: Add `Event::DebugString()`.\n- Feature: Add support for `Input`'s insert mode. Add `InputOption::insert`\n  option. Added by @mingsheng13.\n- Feature: Add `DropdownOption` to configure the dropdown. See #826.\n- Feature: Add support for Selection. Thanks @clement-roblot. See #926.\n  - See `ScreenInteractive::GetSelection()`.\n  - See `ScreenInteractive::SelectionChange(...)` listener.\n- Bugfix/Breaking change: `Mouse transition`:\n  - Detect when the mouse move, as opposed to being pressed.\n    The Mouse::Moved motion was added.\n  - Dragging the mouse with the left button pressed now avoids activating\n    multiple checkboxes.\n  - A couple of components are now activated when the mouse is pressed,\n  as opposed to being released.\n  This fixes: https://github.com/ArthurSonzogni/FTXUI/issues/773\n  This fixes: https://github.com/ArthurSonzogni/FTXUI/issues/792\n- Bugfix: mouse.control is now reported correctly.\n- Feature: Add `ScreenInteractive::FullscreenPrimaryScreen()`. This allows\n  displaying a fullscreen component on the primary screen, as opposed to the\n  alternate screen.\n- Bugfix: `Input` `onchange` was not called on backspace or delete key.\n  Fixed by @chrysante in chrysante in PR #776.\n- Bugfix: Propertly restore cursor shape on exit. See #792.\n- Bugfix: Fix cursor position in when in the last column. See #831.\n- Bugfix: Fix `ResizeableSplit` keyboard navigation. Fixed by #842.\n- Bugfix: Fix `Menu` focus. See #841\n- Feature: Add `ComponentBase::Index()`. This allows to get the index of a\n  component in its parent. See #932\n- Feature: Add `EntryState::index`. This allows to get the index of a menu entry.\n  See #932\n- Feature: Add `SliderOption::on_change`. This allows to set a callback when the\n  slider value changes. See #938.\n\n### Dom\n- Feature: Add `hscroll_indicator`. It display an horizontal indicator\n  reflecting the current scroll position. Proposed by @ibrahimnasson in\n  [issue 752](https://github.com/ArthurSonzogni/FTXUI/issues/752)\n- Feature: Add `extend_beyond_screen` option to `Dimension::Fit(..)`, allowing\n  the element to be larger than the screen. Proposed by @LordWhiro. See #572 and\n  #949.\n- Feature: Add support for Selection. Thanks @clement-roblot. See #926.\n  - See `selectionColor` decorator.\n  - See `selectionBackgroundColor` decorator.\n  - See `selectionForegroundColor` decorator.\n  - See `selectionStyle(style)` decorator.\n  - See `selectionStyleReset` decorator.\n\n### Screen\n- Feature: Add `Box::IsEmpty()`.\n- Feature: Color transparency\n    - Add `Color::RGBA(r,g,b,a)`.\n    - Add `Color::HSVA(r,g,b,a)`.\n    - Add `Color::Blend(Color)`.\n    - Add `Color::IsOpaque()`\n\n### Util\n- Feature: Support arbitrary `Adapter` for `ConstStringListRef`. See #843.\n\n### Build\n- Support for cmake's \"unity/jumbo\" builds. Fixed by @ClausKlein.\n\n5.0.0\n-----\n\n### Component\n- Breaking: MenuDirection enum is renamed Direction\n- Breaking: GaugeDirection enum is renamed Direction\n- Breaking: Direction enum is renamed WidthOrHeight\n- Breaking: Remove `ComponentBase` copy constructor/assignment.\n- Breaking: MenuOption::entries is renamed MenuOption::entries_option.\n- Breaking: `Ref<{Component}Option>` becomes `{Component}Option` in component constructors.\n- Feature: `ResizeableSplit` now support arbitrary element as a separator.\n- Feature: `input` is now supporting multiple lines.\n- Feature: `input` style is now customizeable.\n- Bugfix: Support F1-F5 from OS terminal.\n- Feature: Add struct based constructor:\n  ```cpp\n  Component Button(ButtonOption options);\n  Component Checkbox(CheckboxOption options);\n  Component Input(InputOption options);\n  Component Menu(MenuOption options);\n  Component MenuEntry(MenuEntryOption options);\n  Component Radiobox(RadioboxOption options);\n  Component Slider(SliderOption<T> options);\n  Component ResizableSplit(ResizableSplitOption options);\n  ```\n- Feature: Add `ScreenInteractive::TrackMouse(false)` disable mouse support.\n\n### Dom\n- Feature: Add `hyperlink` decorator. For instance:\n  ```cpp\n  auto link = text(\"Click here\") | hyperlink(\"https://github.com/FTXUI\")\n  ```\n  See the [OSC 8 page](https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda).\n  FTXUI support proposed by @aaleino in [#662](https://github.com/ArthurSonzogni/FTXUI/issues/662).\n\n### Screen\n- Breaking: `WordBreakProperty` becomes a uint8_t enum. This yields a 0.8%\n  performance improvement.\n- Breaking: Remove user defined Pixel constructor and equality operator.\n- Performance: 19% faster on benchmarks.\n\n\n### Build\n- Check version compatibility when using cmake find_package()\n- Add `FTXUI_DEV_WARNING` options to turn on warnings when building FTXUI\n- Turn OFF by default `FTXUI_BUILD_DOCS`\n- Turn OFF by default `FTXUI_BUILD_EXAMPLE`\n\n4.1.1\n-----\n\n### Component\n- Fix: Support arrow keys in application mode\n- Fix: Remove useless new line when using an alternative screen.\n\n### Dom\n- Feature: Add the dashed style for border and separator:\n  - See `DASHED` enum, and  `separatorDashed()`, `borderDashed()` functions.\n- Feature: Add colored borders.\n  - See functions: `borderStyled(BorderStyle, Color)` and `borderStyled(Color)`.\n- Feature: Add `LinearGradient`. It can be used in `color` and `bgColor`.\n- Improvement: Color::Interpolate() uses gamma correction.\n- Fix: Check the `graph` area is positive.\n\n### Build/Install\n- Use globally set CMAKE_CXX_STANDARD if it is set.\n- Expose the pkg-config file\n- Check version compatibility when using cmake find_package()\n\n4.1.0  (Abandonned)\n-----\nThis version is abandonned and must not be used. It introduced a breaking change in the API.\n\n4.0.0\n-----\n\n### DOM\n- Feature: more styles:\n  - `strikethrough`\n  - `underlinedDouble`\n- Feature: Customize the cursor. Add the following decorators:\n  - `focusCursorBlock`\n  - `focusCursorBlockBlinking`\n  - `focusCursorBar`\n  - `focusCursorBarBlinking`\n  - `focusCursorUnderline`\n  - `focusCursorUnderlineBlinking`\n- Bugfix: Fix `focus`/`select` when the `vbox`/`hbox`/`dbox` contains a\n  `flexbox`\n- Bugfix: Fix the selected/focused area. It used to be 1 cell larger/longer than\n  requested\n- Bugfix: Forward the selected/focused area from the child in gridbox.\n- Bugfix: Fix incorrect Canvas computed dimensions.\n- Bugfix: Support `vscroll_indicator` with a zero inner size.\n- Bugfix: Fix `vscroll_indicator` hidding the last column.\n\n### Component:\n- Feature: Add the `Modal` component.\n- Feature: `Slider` supports taking references for all its arguments.\n- Feature: `Slider` supports `SliderOption`. It supports:\n    - multiple directions.\n    - multiple colors.\n    - various values (value, min, max, increment).\n- Feature: Define `ScreenInteractive::Exit()`.\n- Feature: Add `Loop` to give developers a better control on the main loop. This\n  can be used to integrate FTXUI into another main loop, without taking the full\n  control.\n- Feature: `Input` supports CTRL+Left and CTRL+Right\n- Feature: Use a blinking bar in the `Input` component.\n- Improvement: The `Menu` keeps the focus when an entry is selected with the\n  mouse.\n- Bugfix: Add implementation of `ButtonOption::Border()`. It was missing.\n- Bugfix: Provide the correct key for F1-F4 and F11.\n- Feature: Add the `Hoverable` component decorators.\n\n### Screen\n- Feature: add `Box::Union(a,b) -> Box`\n- Bugfix: Fix resetting `dim` clashing with resetting of `bold`.\n- Feature: Add emscripten screen resize support.\n- Bugfix: Add unicode 13 support for full width characters.\n- Bugfix: Fix MSVC treating codecvt C++17 deprecated function as an error.\n\n### Build\n- Support using the google test version provided by the package manager.\n\n3.0.0\n-----\n\n### Build\n- **breaking**: The library prefix is now back to \"lib\" (the default). This\n    means non-cmake users should not link against \"libftxui-dom\" for instance.\n\n### Component\n- **Animations** module! Components can implement the `OnAnimation` method and\n  the animation::Animator to define some animated properties.\n  - `Menu` now support animations.\n  - `Button` now supports animations.\n- Support SIGTSTP. (ctrl+z).\n- Support task posting. `ScreenInteractive::Post(Task)`.\n- `Menu` can now be used in the 4 directions, using `MenuOption.direction`.\n- `Menu` can display an animated underline, using\n  `MenuOption.underline.enabled`.\n- `Button` is now taking the focus in frame.\n- **breaking** All the options are now using a transform function.\n- **breaking** The `Toggle` component is now implemented using `Menu`.\n- **bugfix** Container::Tab implements `Focusable()`.\n- **bugfix** Improved default implementations of ComponentBase `Focusable()` and\n  `ActiveChild()` methods.\n- **bugfix** Automatically convert '\\r' keys into '\\n' for Linux programs that\n  do not send the correct code for the return key, like the 'bind'.\n  https://github.com/ArthurSonzogni/FTXUI/issues/337\n- Add decorator for components:\n  - `operator|(Component, ComponentDecorator)`\n  - `operator|(Component, ElementDecorator)`\n  - `operator|=(Component, ComponentDecorator)`\n  - `operator|=(Component, ElementDecorator)`\n  - Add the `Maybe` decorator.\n  - Add the `CatchEvent` decorator.\n  - Add the `Renderer` decorator.\n- **breaking** remove the \"deprectated.hpp\" header and Input support for wide\n    string.\n\n### DOM:\n- **breaking**: The `inverted` decorator now toggle in the inverted attribute.\n- Add `gauge` for the 4 directions. Expose the following API:\n```cpp\nElement gauge(float ratio);\nElement gaugeLeft(float ratio);\nElement gaugeRight(float ratio);\nElement gaugeUp(float ratio);\nElement gaugeDown(float ratio);\nElement gaugeDirection(float ratio, GaugeDirection);\n```\n- Add `separatorHSelector` and `separatorVSelector` elements. This can be used\n  to highlight an area.\n- Add the `automerge` decorator. This makes separator characters to be merged\n  with others nearby.\n- Fix the `Table` rendering function, to allow automerging characters.\n- **Bugfix**: The `vscroll_indicator` now computes its offset and size\n  correctly.\n- Add the `operator|=(Element, Decorator)`\n\n### Screen:\n- Add: `Color::Interpolate(lambda, color_a, color_b)`.\n\n2.0.0\n-----\n\n### Features:\n\n#### Screen\n- Add the `automerge` to the Pixel bit field. This now controls which pixels are\n  automatically merged.\n\n#### DOM:\n- Add the `Canvas` class and `ElementFrom('canvas')` function. Together users of\n  the library can draw using braille and block characters.\n- Support `flexbox` dom elements. This is build symmetrically to the HTML one.\n  All the following attributes are supported: direction, wrap, justify-content,\n  align-items, align-content, gap\n- Add the dom elements helper based on `flexbox`:\n  - `paragraph`\n  - `paragraphAlignLeft`\n  - `paragraphAlignCenter`\n  - `paragraphAlignRight`\n  - `paragraphAlignJustify`\n- Add the helper elements based on `flexbox`: `hflow()`, `vflow()`.\n- Add: `focusPositionRelative` and `focusPosition`\n- Add `Table` constructor from 2D vector of Element, instead of string.\n\n#### Component \n- Add the `collapsible` component.\n- Add the `ScreenInteractive::WithRestoredIO`. This decorates a callback. This\n  runs it with the terminal hooks temporarilly uninstalled. This is useful if\n  you want to execute command using directly stdin/stdout/sterr.\n\n### Bug\n\n#### Table\n- The `table` horizontal and vertical separator are now correctly expanded.\n\n#### Component \n- `Input` shouldn't take focus when hovered by the mouse.\n- Modifying `Input`'s during on_enter/on_change event is now working correctly.\n\n### Breaking changes:\n- The behavior of `paragraph` has been modified. It now returns en Element,\n  instead of a list of elements.\n\n0.11.1\n------\n\n# Component\n- Feature: Support for PageUp/PageDown/Home/End buttons.\n- Bugfix: Check the selected element are within bounds for Dropdown.\n\n# Build\n- Bugfix: Package library using the \"Release config\". Not debug.\n\n0.11\n----\n\n## github workflow\n- Add Windows ad MacOS artefacts.\n- Merge all the workflows.\n\n## Bug\n- On Unix system, fallback to {80,25} screen dimension on failure.\n\n## CMake\n- Support for shared library, via `BUILD_SHARED_LIBS` option.\n- Add library version and symlinks.\n\n0.10 (2021-09-30)\n--------------------\n\n## Bug\n- Fix the automated merge of borders.\n\n### Dom\n- `Table()` class to build stylised table.\n   See https://github.com/ArthurSonzogni/FTXUI/discussions/228\n- `vscroll_indicator`. Show a scrollbar indicator on the right.\n- `separatorEmpty`. A separator drawing nothing.\n- `separatorFixed`. A separator drawing the provided character.\n\n### Component\n- `Maybe`: Display an component conditionnally based on a boolean.\n- `Dropdown`: A dropdown select list.\n\n0.9 (2021-09-26)\n----------------\n\nThe initial release where changelog where written.\n\nThis version includes:\n\n### screen\n- Style:\n  - Bold.\n  - Blink.\n  - Dim.\n  - Inverted.\n  - Underlined.\n  - Foreground color.\n  - Background color.\n- Support for UTF8 unicode.\n  - Full wide character: 测试.\n  - Combining characters: a⃒\n- A Stencil buffer.\n- Automatically merge box drawing characters.\n- Detect terminal dimension.\n\n### DOM\n\n- Element:\n  - `text` & `vtext`\n  - `separator` and 5 variations.\n  - `gauge`\n  - `border` and 6 variations.\n  - `window`\n  - `spinner`\n  - `paragraph` and `hflow`.\n\n- Layout:\n  - `hbox`\n  - `vbox`\n  - `dbox`\n  - `gridbox`\n  - `frame`: Drawing inside a virtual area, potentially larger than the real\n             one.\n  - `focus`, `select`: scroll the inner view of a frame, to be in view.\n  - `flex` & 8 variations. `filler`\n  \n- Decorators:\n  - `bold`\n  - `dim`\n  - `inverted`\n  - `blink`\n  - `color`\n  - `bgcolor`\n  - `clearunder`\n\n### Component\n\n- Container:\n  - `Container::Vertical`\n  - `Container::Horizontal`\n  - `Container::Tab`\n- `Button`\n- `Checkbox`\n- `Input`\n- `Menu`\n- `MenuEntry`\n- `Radiobox`\n- `Toggle`\n- `Slider`\n- `Renderer` & variations\n- `CatchEvent`\n\n### MISC\n\n- Fuzzer\n- Tests using gtest.\n- Doxygen documentation\n- IWYU\n- 52 examples.\n- Support for WebAssembly.\n- Support for Window and fallback for broken terminal.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.275390625,
          "content": "cmake_minimum_required(VERSION 3.12)\n\nproject(ftxui\n  LANGUAGES CXX\n  VERSION 5.0.0\n  DESCRIPTION \"C++ Functional Terminal User Interface.\"\n)\n\noption(FTXUI_QUIET \"Set to ON for FTXUI to be quiet\" OFF)\noption(FTXUI_BUILD_EXAMPLES \"Set to ON to build examples\" OFF)\noption(FTXUI_BUILD_DOCS \"Set to ON to build docs\" OFF)\noption(FTXUI_BUILD_TESTS \"Set to ON to build tests\" OFF)\noption(FTXUI_BUILD_TESTS_FUZZER \"Set to ON to enable fuzzing\" OFF)\noption(FTXUI_ENABLE_INSTALL \"Generate the install target\" ON)\noption(FTXUI_CLANG_TIDY \"Execute clang-tidy\" OFF)\noption(FTXUI_ENABLE_COVERAGE \"Execute code coverage\" OFF)\noption(FTXUI_DEV_WARNINGS \"Enable more compiler warnings and warnings as errors\" OFF)\n\nset(FTXUI_MICROSOFT_TERMINAL_FALLBACK_HELP_TEXT \"On windows, assume the \\\nterminal used will be one of Microsoft and use a set of reasonnable fallback \\\nto counteract its implementations problems.\")\nif (WIN32)\n  option(FTXUI_MICROSOFT_TERMINAL_FALLBACK\n    ${FTXUI_MICROSOFT_TERMINAL_FALLBACK_HELP_TEXT} ON)\nelse()\n  option(FTXUI_MICROSOFT_TERMINAL_FALLBACK\n    ${FTXUI_MICROSOFT_TERMINAL_FALLBACK_HELP_TEXT} OFF)\nendif()\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\ninclude(cmake/ftxui_message.cmake)\n\nadd_library(screen\n  include/ftxui/screen/box.hpp\n  include/ftxui/screen/color.hpp\n  include/ftxui/screen/color_info.hpp\n  include/ftxui/screen/image.hpp\n  include/ftxui/screen/pixel.hpp\n  include/ftxui/screen/screen.hpp\n  include/ftxui/screen/string.hpp\n  src/ftxui/screen/box.cpp\n  src/ftxui/screen/color.cpp\n  src/ftxui/screen/color_info.cpp\n  src/ftxui/screen/image.cpp\n  src/ftxui/screen/screen.cpp\n  src/ftxui/screen/string.cpp\n  src/ftxui/screen/terminal.cpp\n  src/ftxui/screen/util.hpp\n)\n\nadd_library(dom\n  include/ftxui/dom/canvas.hpp\n  include/ftxui/dom/direction.hpp\n  include/ftxui/dom/elements.hpp\n  include/ftxui/dom/flexbox_config.hpp\n  include/ftxui/dom/node.hpp\n  include/ftxui/dom/requirement.hpp\n  include/ftxui/dom/selection.hpp\n  include/ftxui/dom/take_any_args.hpp\n  src/ftxui/dom/automerge.cpp\n  src/ftxui/dom/selection_style.cpp\n  src/ftxui/dom/blink.cpp\n  src/ftxui/dom/bold.cpp\n  src/ftxui/dom/border.cpp\n  src/ftxui/dom/box_helper.cpp\n  src/ftxui/dom/box_helper.hpp\n  src/ftxui/dom/canvas.cpp\n  src/ftxui/dom/clear_under.cpp\n  src/ftxui/dom/color.cpp\n  src/ftxui/dom/composite_decorator.cpp\n  src/ftxui/dom/dbox.cpp\n  src/ftxui/dom/dim.cpp\n  src/ftxui/dom/flex.cpp\n  src/ftxui/dom/flexbox.cpp\n  src/ftxui/dom/flexbox_config.cpp\n  src/ftxui/dom/flexbox_helper.cpp\n  src/ftxui/dom/flexbox_helper.hpp\n  src/ftxui/dom/focus.cpp\n  src/ftxui/dom/frame.cpp\n  src/ftxui/dom/gauge.cpp\n  src/ftxui/dom/graph.cpp\n  src/ftxui/dom/gridbox.cpp\n  src/ftxui/dom/hbox.cpp\n  src/ftxui/dom/hyperlink.cpp\n  src/ftxui/dom/inverted.cpp\n  src/ftxui/dom/linear_gradient.cpp\n  src/ftxui/dom/node.cpp\n  src/ftxui/dom/node_decorator.cpp\n  src/ftxui/dom/paragraph.cpp\n  src/ftxui/dom/reflect.cpp\n  src/ftxui/dom/scroll_indicator.cpp\n  src/ftxui/dom/selection.cpp\n  src/ftxui/dom/separator.cpp\n  src/ftxui/dom/size.cpp\n  src/ftxui/dom/spinner.cpp\n  src/ftxui/dom/strikethrough.cpp\n  src/ftxui/dom/table.cpp\n  src/ftxui/dom/text.cpp\n  src/ftxui/dom/underlined.cpp\n  src/ftxui/dom/underlined_double.cpp\n  src/ftxui/dom/util.cpp\n  src/ftxui/dom/vbox.cpp\n)\n\nadd_library(component\n  include/ftxui/component/animation.hpp\n  include/ftxui/component/captured_mouse.hpp\n  include/ftxui/component/component.hpp\n  include/ftxui/component/component_base.hpp\n  include/ftxui/component/component_options.hpp\n  include/ftxui/component/event.hpp\n  include/ftxui/component/loop.hpp\n  include/ftxui/component/mouse.hpp\n  include/ftxui/component/receiver.hpp\n  include/ftxui/component/screen_interactive.hpp\n  include/ftxui/component/task.hpp\n  src/ftxui/component/animation.cpp\n  src/ftxui/component/button.cpp\n  src/ftxui/component/catch_event.cpp\n  src/ftxui/component/checkbox.cpp\n  src/ftxui/component/collapsible.cpp\n  src/ftxui/component/component.cpp\n  src/ftxui/component/component_options.cpp\n  src/ftxui/component/container.cpp\n  src/ftxui/component/dropdown.cpp\n  src/ftxui/component/event.cpp\n  src/ftxui/component/hoverable.cpp\n  src/ftxui/component/input.cpp\n  src/ftxui/component/loop.cpp\n  src/ftxui/component/maybe.cpp\n  src/ftxui/component/menu.cpp\n  src/ftxui/component/modal.cpp\n  src/ftxui/component/radiobox.cpp\n  src/ftxui/component/radiobox.cpp\n  src/ftxui/component/renderer.cpp\n  src/ftxui/component/resizable_split.cpp\n  src/ftxui/component/screen_interactive.cpp\n  src/ftxui/component/slider.cpp\n  src/ftxui/component/terminal_input_parser.cpp\n  src/ftxui/component/terminal_input_parser.hpp\n  src/ftxui/component/util.cpp\n  src/ftxui/component/window.cpp\n)\n\ntarget_link_libraries(dom\n  PUBLIC screen\n)\n\ntarget_link_libraries(component\n  PUBLIC dom\n)\n\nif (NOT EMSCRIPTEN)\n  find_package(Threads)\n  target_link_libraries(component\n    PUBLIC Threads::Threads\n  )\nendif()\n\ninclude(cmake/ftxui_set_options.cmake)\nftxui_set_options(screen)\nftxui_set_options(dom)\nftxui_set_options(component)\n\ninclude(cmake/ftxui_coverage.cmake)\nftxui_check_coverage(screen)\nftxui_check_coverage(dom)\nftxui_check_coverage(component)\n\ninclude(cmake/ftxui_test.cmake)\ninclude(cmake/ftxui_benchmark.cmake)\ninclude(cmake/ftxui_fuzzer.cmake)\ninclude(cmake/iwyu.cmake)\ninclude(cmake/ftxui_export.cmake)\ninclude(cmake/ftxui_install.cmake)\ninclude(cmake/ftxui_package.cmake)\n\nadd_subdirectory(examples)\nadd_subdirectory(doc)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License\n\nCopyright (c) 2019 Arthur Sonzogni.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.5869140625,
          "content": "<p align=\"center\">\n  <img src=\"https://github.com/ArthurSonzogni/FTXUI/assets/4759106/6925b6da-0a7e-49d9-883c-c890e1f36007\" alt=\"Demo image\"></img>\n  <br/>\n  <a href=\"#\"><img src=\"https://img.shields.io/badge/c++-%2300599C.svg?style=flat&logo=c%2B%2B&logoColor=white\"></img></a>\n  <a href=\"http://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/github/license/arthursonzogni/FTXUI?color=black\"></img></a>\n  <a href=\"#\"><img src=\"https://img.shields.io/github/stars/ArthurSonzogni/FTXUI\"></img></a>\n  <a href=\"#\"><img src=\"https://img.shields.io/github/forks/ArthurSonzogni/FTXUI\"></img></a>\n  <a href=\"#\"><img src=\"https://img.shields.io/github/repo-size/ArthurSonzogni/FTXUI\"></img></a>\n  <a href=\"https://github.com/ArthurSonzogni/FTXUI/graphs/contributors\"><img src=\"https://img.shields.io/github/contributors/arthursonzogni/FTXUI?color=blue\"></img></a>\n  <br/>\n  <a href=\"https://github.com/ArthurSonzogni/FTXUI/issues\"><img src=\"https://img.shields.io/github/issues/ArthurSonzogni/FTXUI\"></img></a>\n  <a href=\"https://repology.org/project/ftxui/versions\"><img src=\"https://repology.org/badge/latest-versions/ftxui.svg\" alt=\"latest packaged version(s)\"></a>\n  <a href=\"https://codecov.io/gh/ArthurSonzogni/FTXUI\">\n    <img src=\"https://codecov.io/gh/ArthurSonzogni/FTXUI/branch/master/graph/badge.svg?token=C41FdRpNVA\"/>\n  </a>\n\n  \n  <br/>\n  <a href=\"https://arthursonzogni.github.io/FTXUI/\">Documentation</a> ·\n  <a href=\"https://github.com/ArthurSonzogni/FTXUI/issues\">Report a Bug</a> ·\n  <a href=\"https://arthursonzogni.github.io/FTXUI/examples.html\">Examples</a> .\n  <a href=\"https://github.com/ArthurSonzogni/FTXUI/issues\">Request Feature</a> ·\n  <a href=\"https://github.com/ArthurSonzogni/FTXUI/pulls\">Send a Pull Request</a>\n\n</p>\n\n# FTXUI\n\n<i>Functional Terminal (X) User interface</i>\n\nA simple cross-platform C++ library for terminal based user interfaces!\n\n## Feature\n * Functional style. Inspired by\n   [1](https://hackernoon.com/building-reactive-terminal-interfaces-in-c-d392ce34e649?gi=d9fb9ce35901)\n   and [React](https://reactjs.org/)\n * Simple and elegant syntax (in my opinion)\n * Keyboard & mouse navigation.\n * Support for [UTF8](https://en.wikipedia.org/wiki/UTF-8) and [fullwidth chars](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) (→ 测试)\n * Support for animations. [Demo 1](https://arthursonzogni.github.io/FTXUI/examples/?file=component/menu_underline_animated_gallery), [Demo 2](https://arthursonzogni.github.io/FTXUI/examples/?file=component/button_style)\n * Support for drawing. [Demo](https://arthursonzogni.github.io/FTXUI/examples/?file=component/canvas_animated)\n * No dependencies\n * **Cross platform**: Linux/MacOS (main target), WebAssembly, Windows (Thanks to contributors!).\n * Learn by [examples](#documentation), and [tutorials](#documentation)\n * Multiple packages: CMake [FetchContent]([https://bewagner.net/programming/2020/05/02/cmake-fetchcontent/](https://cmake.org/cmake/help/latest/module/FetchContent.html)) (preferred), vcpkg, pkgbuild, conan.\n * Good practices: documentation, tests, fuzzers, performance tests, automated CI, automated packaging, etc...\n\n## Documentation\n\n- [Starter example project](https://github.com/ArthurSonzogni/ftxui-starter)\n- [Documentation](https://arthursonzogni.github.io/FTXUI/)\n- [Examples (WebAssembly)](https://arthursonzogni.github.io/FTXUI/examples/)\n- [Build using CMake](https://arthursonzogni.github.io/FTXUI/#build-cmake)\n\n## Example\n~~~cpp\n    vbox({\n      hbox({\n        text(\"one\") | border,\n        text(\"two\") | border | flex,\n        text(\"three\") | border | flex,\n      }),\n\n      gauge(0.25) | color(Color::Red),\n      gauge(0.50) | color(Color::White),\n      gauge(0.75) | color(Color::Blue),\n    });\n~~~\n\n![image](https://github.com/ArthurSonzogni/FTXUI/assets/4759106/569bf043-4e85-4245-aad5-2324572135c4)\n\n## Short gallery\n\n#### DOM\n\nThis module defines a hierarchical set of Element. An Element manages layout and can be responsive to the terminal dimensions.\n\nThey are declared in [<ftxui/dom/elements.hpp>](https://arthursonzogni.github.io/FTXUI/elements_8hpp_source.html\n)\n  \n<details><summary>Layout</summary>\n\nElement can be arranged together:\n  - horizontally with `hbox`\n  - vertically with `vbox`\n  - inside a grid with `gridbox`\n  - wrap along one direction using the `flexbox`.\n  \nElement can become flexible using the the `flex` decorator.\n  \n[Example](https://arthursonzogni.github.io/FTXUI/examples_2dom_2vbox_hbox_8cpp-example.html) using `hbox`, `vbox` and `filler`.\n\n![image](https://user-images.githubusercontent.com/4759106/147242524-7103b5d9-1a92-4e2d-ac70-b3d6740061e3.png)\n  \n  \n[Example](https://arthursonzogni.github.io/FTXUI/examples_2dom_2gridbox_8cpp-example.html) using gridbox:\n\n![image](https://user-images.githubusercontent.com/4759106/147242972-0db1f2e9-0790-496f-86e6-ed2c604f7a73.png)\n\n[Example](https://github.com/ArthurSonzogni/FTXUI/blob/master/examples/dom/hflow.cpp) using flexbox:\n\n![image](https://user-images.githubusercontent.com/4759106/147243064-780ac7cc-605b-475f-94b8-cf7c4aed03a5.png)\n\n[See](https://arthursonzogni.github.io/FTXUI/examples_2dom_2hflow_8cpp-example.html) also this [demo](https://arthursonzogni.github.io/FTXUI/examples/?file=component/flexbox).\n\n</details>\n\n<details><summary>Style</summary>\n\nAn element can be decorated using the functions:\n  - `bold`\n  - `dim`\n  - `inverted`\n  - `underlined`\n  - `underlinedDouble`\n  - `blink`\n  - `strikethrough`\n  - `color`\n  - `bgcolor`\n  - `hyperlink`\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2dom_2style_gallery_8cpp-example.html)\n\n![image](https://user-images.githubusercontent.com/4759106/147244118-380bf834-9e33-40df-9ff0-07c10f2598ef.png)\n  \nFTXUI supports the pipe operator. It means: `decorator1(decorator2(element))` and `element | decorator1 | decorator2` can be used.\n  \n</details>\n\n<details><summary>Colors</summary>\n\nFTXUI support every color palette:\n\nColor [gallery](https://arthursonzogni.github.io/FTXUI/examples_2dom_2color_gallery_8cpp-example.html):\n![image](https://user-images.githubusercontent.com/4759106/147248595-04c7245a-5b85-4544-809d-a5984fc6f9e7.png)\n\n</details>\n  \n<details><summary>Border and separator</summary>\n\nUse decorator border and element separator() to subdivide your UI:\n  \n```cpp\nauto document = vbox({\n    text(\"top\"),\n    separator(),\n    text(\"bottom\"),\n}) | border;\n\n```\n\n[Demo](https://arthursonzogni.github.io/FTXUI/examples_2dom_2separator_8cpp-example.html):\n  \n![image](https://user-images.githubusercontent.com/4759106/147244514-4135f24b-fb8e-4067-8896-bc53545583f7.png)\n  \n</details>\n\n<details><summary>Text and paragraph</summary>\n\nA simple piece of text is represented using `text(\"content\")`.\n\nTo support text wrapping following spaces the following functions are provided:\n```cpp\nElement paragraph(std::string text);\nElement paragraphAlignLeft(std::string text);\nElement paragraphAlignRight(std::string text);\nElement paragraphAlignCenter(std::string text);\nElement paragraphAlignJustify(std::string text);\n```\n  \n[Paragraph example](https://arthursonzogni.github.io/FTXUI/examples_2dom_2paragraph_8cpp-example.html)\n  \n![ezgif com-gif-maker (4)](https://user-images.githubusercontent.com/4759106/147251370-983a06e7-6f41-4113-92b8-942f43d34d06.gif)\n\n</details>\n\n<details><summary>Table</summary>\n\nA class to easily style a table of data.\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2dom_2table_8cpp-example.html):\n  \n![image](https://user-images.githubusercontent.com/4759106/147250766-77d8ec9e-cf2b-486d-9866-1fd9f1bd2e6b.png)\n\n</details>\n\n<details><summary>Canvas</summary>\n\nDrawing can be made on a Canvas, using braille, block, or simple characters:\n  \nSimple [example](https://github.com/ArthurSonzogni/FTXUI/blob/master/examples/dom/canvas.cpp):\n  \n![image](https://user-images.githubusercontent.com/4759106/147245843-76cc62fb-ccb4-421b-aacf-939f9afb42fe.png)\n\nComplex [examples](https://github.com/ArthurSonzogni/FTXUI/blob/master/examples/component/canvas_animated.cpp):\n  \n![ezgif com-gif-maker (3)](https://user-images.githubusercontent.com/4759106/147250538-783a8246-98e0-4a25-b032-3bd3710549d1.gif)  \n</details>\n\n#### Component\n\nftxui/component produces dynamic UI, reactive to the user's input. It defines a set of ftxui::Component. A component reacts to Events (keyboard, mouse, resize, ...) and Renders as an Element (see previous section).\n\nPrebuilt components are declared in [<ftxui/component/component.hpp>](https://arthursonzogni.github.io/FTXUI/component_8hpp_source.html)\n\n<details><summary>Gallery</summary>\n\n[Gallery](https://arthursonzogni.github.io/FTXUI/examples_2component_2gallery_8cpp-example.html) of multiple components. ([demo](https://arthursonzogni.github.io/FTXUI/examples/?file=component/gallery))\n\n![image](https://user-images.githubusercontent.com/4759106/147247330-b60beb9f-e665-48b4-81c0-4b01ee95bc66.png)\n\n</details>\n\n<details><summary>Radiobox</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2radiobox_8cpp-example.html):\n  \n![image](https://user-images.githubusercontent.com/4759106/147246401-809d14a5-6621-4e36-8dd9-a2d75ef2a94e.png)\n\n</details>\n\n<details><summary>Checkbox</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2checkbox_8cpp-example.html):\n\n![image](https://user-images.githubusercontent.com/4759106/147246646-b86926a9-1ef9-4efb-af98-48a9b62acd81.png)\n\n</details>\n\n<details><summary>Input</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2input_8cpp-example.html):\n\n![image](https://user-images.githubusercontent.com/4759106/147247671-f1d6f606-1845-4e94-a4a0-d4273e9ae6bd.png)\n\n</details>\n\n<details><summary>Toggle</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2toggle_8cpp-example.html):\n\n![image](https://user-images.githubusercontent.com/4759106/147249383-e2201cf1-b7b8-4a5a-916f-d761e3e7ae40.png)\n\n</details>\n\n\n<details><summary>Slider</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2slider_8cpp-example.html):\n\n![image](https://user-images.githubusercontent.com/4759106/147249265-7e2cad75-082c-436e-affe-44a550c480ab.png)\n\n</details>\n\n\n<details><summary>Menu</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2menu_8cpp-example.html):\n\n![image](https://user-images.githubusercontent.com/4759106/147247822-0035fd6f-bb13-4b3a-b057-77eb9291582f.png)\n\n</details>\n\n\n<details><summary>ResizableSplit</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2resizable_split_8cpp-example.html):\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/4759106/147248372-c55512fe-9b96-4b08-a1df-d05cf2cae431.gif)  \n</details>\n\n\n<details><summary>Dropdown</summary>\n\n[Example](https://arthursonzogni.github.io/FTXUI/examples_2component_2dropdown_8cpp-example.html):\n\n![youtube-video-gif (3)](https://user-images.githubusercontent.com/4759106/147246982-1e821751-531c-4e1f-bc37-2fa290e143cd.gif)\n\n</details>\n\n<details><summary>Tab</summary>\n\n[Vertical](https://arthursonzogni.github.io/FTXUI/examples_2component_2tab_vertical_8cpp-example.html):\n  \n![ezgif com-gif-maker (1)](https://user-images.githubusercontent.com/4759106/147250144-22ff044a-4773-4ff7-a49c-12ba4034acb4.gif)\n\n[Horizontal](https://arthursonzogni.github.io/FTXUI/examples_2component_2tab_horizontal_8cpp-example.html):\n  \n  ![ezgif com-gif-maker (2)](https://user-images.githubusercontent.com/4759106/147250217-fe447e0f-7a99-4e08-948a-995087d9b40e.gif)\n\n  \n\n</details>\n\n## Libraries for FTXUI\n- *Want to share a useful Component for FTXUI? Feel free to add yours here*\n- [ftxui-grid-container](https://github.com/mingsheng13/grid-container-ftxui)\n- [ftxui-ip-input](https://github.com/mingsheng13/ip-input-ftxui)\n- [ftxui-image-view](https://github.com/ljrrjl/ftxui-image-view.git): For Image Display.\n\n\n## Project using FTXUI\n\nFeel free to add your projects here:\n- [json-tui](https://github.com/ArthurSonzogni/json-tui)\n- [git-tui](https://github.com/ArthurSonzogni/git-tui)\n- [ostree-tui](https://github.com/AP-Sensing/ostree-tui)\n- [rgb-tui](https://github.com/ArthurSonzogni/rgb-tui)\n- [chrome-log-beautifier](https://github.com/ArthurSonzogni/chrome-log-beautifier)\n- [x86-64 CPU Architecture Simulation](https://github.com/AnisBdz/CPU)\n- [ltuiny](https://github.com/adrianoviana87/ltuiny)\n- [i3-termdialogs](https://github.com/mibli/i3-termdialogs)\n- [simpPRU](https://github.com/VedantParanjape/simpPRU)\n- [Pigeon ROS TUI](https://github.com/PigeonSensei/Pigeon_ros_tui)\n- [hastur](https://github.com/robinlinden/hastur)\n- [CryptoCalculator](https://github.com/brevis/CryptoCalculator)\n- [todoman](https://github.com/aaleino/todoman)\n- [TimeAccumulator](https://github.com/asari555/TimeAccumulator)\n- [vantage](https://github.com/gokulmaxi/vantage)\n- [tabdeeli](https://github.com/typon/tabdeeli)\n- [tiles](https://github.com/tusharpm/tiles)\n- [cachyos-cli-installer](https://github.com/cachyos/new-cli-installer)\n- [beagle-config](https://github.com/SAtacker/beagle-config)\n- [turing_cmd](https://github.com/DanArmor/turing_cmd)\n- [StartUp](https://github.com/StubbornVegeta/StartUp)\n- [eCAL monitor](https://github.com/eclipse-ecal/ecal)\n- [Path Finder](https://github.com/Ruebled/Path_Finder)\n- [rw-tui](https://github.com/LeeKyuHyuk/rw-tui)\n- [resource-monitor](https://github.com/catalincd/resource-monitor)\n- [ftxuiFileReader](https://github.com/J0sephDavis/ftxuiFileReader)\n- [ftxui_CPUMeter](https://github.com/tzzzzzzzx/ftxui_CPUMeter)\n- [Captain's log](https://github.com/nikoladucak/caps-log)\n- [FTowerX](https://github.com/MhmRhm/FTowerX)\n- [Caravan](https://github.com/r3w0p/caravan)\n- [Step-Writer](https://github.com/BrianAnakPintar/step-writer)\n- [XJ music](https://github.com/xjmusic/xjmusic)\n- [UDP chat](https://github.com/Sergeydigl3/udp-chat-tui)\n- [2048-cpp](https://github.com/Chessom/2048-cpp)\n- [Memory game](https://github.com/mikolajlubiak/memory)\n- [Terminal Animation](https://github.com/mikolajlubiak/terminal_animation)\n- [pciex](https://github.com/s0nx/pciex)\n- [Fallout terminal hacking](https://github.com/gshigin/yet-another-fallout-terminal-hacking-game)\n- [Lazylist](https://github.com/zhuyongqi9/lazylist)\n- [TUISIC](https://github.com/Dark-Kernel/tuisic)\n\n### [cpp-best-practices/game_jam](https://github.com/cpp-best-practices/game_jam)\n\nSeveral games using the FTXUI have been made during the Game Jam:\n- [TermBreaker](https://github.com/ArthurSonzogni/termBreaker) [**[Play web version]**](https://arthursonzogni.com/TermBreaker/)\n- [Minesweeper Marathon](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/minesweeper_marathon.md) [**[Play web version]**](https://barlasgarden.com/minesweeper/index.html)\n- [Grand Rounds](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/grandrounds.md)\n- [LightsRound](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/LightsRound.v.0.1.0.md)\n- [DanteO](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/danteo.md)\n- [Sumo](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/sumo.md)\n- [Drag Me aROUND](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/drag_me_around.md)\n- [DisarmSelfDestruct](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/DisarmSelfDestruct.md)\n- [TheWorld](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/TheWorld.md)\n- [smoothlife](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/smoothlife.md)\n- [Consu](https://github.com/cpp-best-practices/game_jam/blob/main/Jam1_April_2022/consu.md)\n\n## Utilization\n\nIt is **highly** recommended to use CMake FetchContent to depend on FTXUI so you may specify which commit you would like to depend on.\n```cmake\ninclude(FetchContent)\n\nFetchContent_Declare(ftxui\n  GIT_REPOSITORY https://github.com/ArthurSonzogni/ftxui\n  GIT_TAG v5.0.0\n)\n\nFetchContent_GetProperties(ftxui)\nif(NOT ftxui_POPULATED)\n  FetchContent_Populate(ftxui)\n  add_subdirectory(${ftxui_SOURCE_DIR} ${ftxui_BINARY_DIR} EXCLUDE_FROM_ALL)\nendif()\n```\n\nIf you don't, FTXUI may be used from the following packages:\n- [vcpkg](https://vcpkgx.com/details.html?package=ftxui)\n- [Arch Linux PKGBUILD](https://aur.archlinux.org/packages/ftxui-git/).\n- [conan.io](https://conan.io/center/ftxui)\n- [openSUSE](https://build.opensuse.org/package/show/devel:libraries:c_c++/ftxui)\n- \n[![Packaging status](https://repology.org/badge/vertical-allrepos/ftxui.svg)](https://repology.org/project/ftxui/versions)\n\nIf you choose to build and link FTXUI yourself, `ftxui-component` must be first in the linking order relative to the other FTXUI libraries, i.e.\n```bash\ng++ . . . -lftxui-component -lftxui-dom -lftxui-screen . . .\n```\n\n\n\n## Contributors\n\n<a href=\"https://github.com/ArthurSonzogni/FTXUI/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=ArthurSonzogni/FTXUI\" />\n</a>\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "codecov:\n  require_ci_to_pass: no\n  notify:\n    after_n_builds: 4\n    wait_for_ci: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"50...100\"\n\ncomment: false\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.4638671875,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1694529238,\n        \"narHash\": \"sha256-zsNZZGTGnMOf9YpHKJqMSsa0dXbfmxeoJ7xHlrt+xmY=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"ff7b65b44d01cf9ba6a71320833626af21126384\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1697915759,\n        \"narHash\": \"sha256-WyMj5jGcecD+KC8gEs+wFth1J1wjisZf8kVZH13f1Zo=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"51d906d2341c9e866e48c2efcaac0f2d70bfd43e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixpkgs-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 2.453125,
          "content": "{\n  description = \"C++ Functional Terminal User Interface library\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n  };\n\n  outputs = {self, nixpkgs, flake-utils}:\n    flake-utils.lib.eachDefaultSystem (system:\n    let pkgs = import nixpkgs { inherit system; }; in\n    let llvm = pkgs.llvmPackages_latest; in\n    {\n      packages = rec {\n        default = pkgs.stdenv.mkDerivation rec {\n          pname = \"ftxui\";\n          version = \"v4.0.0\";\n          src = pkgs.fetchFromGitHub {\n            owner = \"ArthurSonzogni\";\n            repo = \"FTXUI\";\n            rev = version;\n            sha256 = \"sha256-3kAhHDUwzwdvHc8JZAcA14tGqa6w69qrN1JXhSxNBQY=\";\n          };\n\n          nativeBuildInputs = [\n            pkgs.cmake\n          ];\n\n          cmakeFlags = [\n            \"-DFTXUI_ENABLE_INSTALL=ON\"\n            \"-DFTXUI_BUILD_EXAMPLES=OFF\"\n            \"-DFTXUI_BUILD_TESTS=OFF\"\n            \"-DFTXUI_BUILD_DOCS=OFF\"\n            \"-DCMAKE_BUILD_TYPE=Release\"\n          ];\n\n          meta = {\n            homepage = \"https://arthursonzogni.github.io/FTXUI/\";\n            description = \"C++ Functional Terminal User Interface.\";\n            longDescription = ''\n              Functional Terminal (X) User interface\n              \n              A simple C++ library for terminal based user interfaces!\n              Feature\n              - Functional style. Inspired by [1] and React\n              - Simple and elegant syntax (in my opinion)\n              - Keyboard & mouse navigation.\n              - Support for UTF8 and fullwidth chars (→ 测试)\n              - Support for animations. Demo 1, Demo 2\n              - Support for drawing. Demo\n              - No dependencies\n              - Cross platform: Linux/MacOS (main target), WebAssembly, Windows (Thanks to contributors!).\n              - Learn by examples, and tutorials\n              - Multiple packages: CMake FetchContent (preferred), vcpkg, pkgbuild, conan, nix, etc...\n              - Good practises: documentation, tests, fuzzers, performance tests, automated CI, automated packaging, etc...\n            '';\n            license = pkgs.lib.licenses.mit;\n            platforms = pkgs.lib.platforms.all;\n          };\n        };\n\n        ftxui = default;\n      };\n\n      devShells = {\n        default = pkgs.mkShell {\n          nativeBuildInputs = [\n            pkgs.cmake\n            pkgs.clang-tools\n            llvm.clang\n          ];\n        };\n      };\n    }\n  );\n}\n"
        },
        {
          "name": "ftxui.pc.in",
          "type": "blob",
          "size": 0.2841796875,
          "content": "prefix=\"@CMAKE_INSTALL_PREFIX@\"\nlibdir=\"@CMAKE_INSTALL_FULL_LIBDIR@\"\nincludedir=\"@CMAKE_INSTALL_FULL_INCLUDEDIR@\"\n\nName: @PROJECT_NAME@\nDescription: @CMAKE_PROJECT_DESCRIPTION@\nVersion: @PROJECT_VERSION@\nCflags: -I${includedir}\nLibs: -L${libdir} -lftxui-component -lftxui-dom -lftxui-screen\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "iwyu.imp",
          "type": "blob",
          "size": 3.5029296875,
          "content": "[\n  { include: [\"<bits/chrono.h>\", \"private\", \"<chrono>\", \"public\"]},\n  { include: [\"<bits/std_abs.h>\", \"private\", \"<cmath>\", \"public\"]},\n  { include: [\"<bits/termios-c_cc.h>\", \"private\", \"<termios.h>\", \"public\"]},\n  { include: [\"<bits/termios-c_lflag.h>\", \"private\", \"<termios.h>\", \"public\"]},\n  { include: [\"<bits/termios-struct.h>\", \"private\", \"<termios.h>\", \"public\"]},\n  { include: [\"<bits/termios-tcflow.h>\", \"private\", \"<termios.h>\", \"public\"]},\n  { include: [\"<ext/alloc_traits.h>\", \"private\", \"<vector>\", \"public\"] },\n  { include: [\"<gtest/internal/gtest-internal.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/internal/gtest-string.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-death-test.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-message.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-param-test.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-printers.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-test-part.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<gtest/gtest-typed-test.h>\", \"private\", \"<gtest/gtest.h>\", \"public\" ] },\n  { include: [\"<assert.h>\", \"private\", \"<cassert>\", \"public\" ] },\n  { include: [\"<complex.h>\", \"private\", \"<ccomplex>\", \"public\" ] },\n  { include: [\"<ctype.h>\", \"private\", \"<cctype>\", \"public\" ] },\n  { include: [\"<errno.h>\", \"private\", \"<cerrno>\", \"public\" ] },\n  { include: [\"<fenv.h>\", \"private\", \"<cfenv>\", \"public\" ] },\n  { include: [\"<float.h>\", \"private\", \"<cfloat>\", \"public\" ] },\n  { include: [\"<inttypes.h>\", \"private\", \"<cinttypes>\", \"public\" ] },\n  { include: [\"<iso646.h>\", \"private\", \"<ciso646>\", \"public\" ] },\n  { include: [\"<limits.h>\", \"private\", \"<climits>\", \"public\" ] },\n  { include: [\"<locale.h>\", \"private\", \"<clocale>\", \"public\" ] },\n  { include: [\"<math.h>\", \"private\", \"<cmath>\", \"public\" ] },\n  { include: [\"<setjmp.h>\", \"private\", \"<csetjmp>\", \"public\" ] },\n  { include: [\"<signal.h>\", \"private\", \"<csignal>\", \"public\" ] },\n  { include: [\"<stdalign.h>\", \"private\", \"<cstdalign>\", \"public\" ] },\n  { include: [\"<stdarg.h>\", \"private\", \"<cstdarg>\", \"public\" ] },\n  { include: [\"<stdbool.h>\", \"private\", \"<cstdbool>\", \"public\" ] },\n  { include: [\"<stddef.h>\", \"private\", \"<cstddef>\", \"public\" ] },\n  { include: [\"<stdint.h>\", \"private\", \"<cstdint>\", \"public\" ] },\n  { include: [\"<stdio.h>\", \"private\", \"<cstdio>\", \"public\" ] },\n  { include: [\"<stdlib.h>\", \"private\", \"<cstdlib>\", \"public\" ] },\n  { include: [\"<string.h>\", \"private\", \"<cstring>\", \"public\" ] },\n  { include: [\"<tgmath.h>\", \"private\", \"<ctgmath>\", \"public\" ] },\n  { include: [\"<time.h>\", \"private\", \"<ctime>\", \"public\" ] },\n  { include: [\"<uchar.h>\", \"private\", \"<cuchar>\", \"public\" ] },\n  { include: [\"<wchar.h>\", \"private\", \"<cwchar>\", \"public\" ] },\n  { include: [\"<wctype.h>\", \"private\", \"<cwctype>\", \"public\" ] },\n  { symbol: [\"ftxui\", \"private\", \"\", \"public\" ] },\n  { symbol: [\"char_traits\", \"private\", \"<string>\", \"public\" ] },\n  { symbol: [\"ECHO\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"ICANON\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"TCSANOW\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"VMIN\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"VTIME\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"__shared_ptr_access\", \"private\", \"<memory>\", \"public\" ] },\n  { symbol: [\"termios\", \"private\", \"<termios.h>\", \"public\" ] },\n  { symbol: [\"__alloc_traits<>:value_type\", \"private\", \"<vector>\", \"public\" ] }\n]\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}