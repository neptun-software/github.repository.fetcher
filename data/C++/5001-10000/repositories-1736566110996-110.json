{
  "metadata": {
    "timestamp": 1736566110996,
    "page": 110,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rhasspy/piper",
      "stars": 7323,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": "*\n!VERSION\n!src/cpp/\n!CMakeLists.txt\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": ".DS_Store\n.idea\n*.log\ntmp/\n\n*.py[cod]\n*.egg\n*.egg-info/\nbuild\nhtmlcov\n\n/data/\n/build/\n/local/\n/dist/\n/lib/\n/install/\n/download/\n*.so\n\n.venv/\nlightning_logs/\n"
        },
        {
          "name": ".projectile",
          "type": "blob",
          "size": 0.0400390625,
          "content": "- /build/\n- /src/python/.venv/\n- /local/\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.2001953125,
          "content": "cmake_minimum_required(VERSION 3.13)\n\nproject(piper C CXX)\n\nfile(READ \"${CMAKE_CURRENT_LIST_DIR}/VERSION\" piper_version)\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nif(MSVC)\n  # Force compiler to use UTF-8 for IPA constants\n  add_compile_options(\"$<$<C_COMPILER_ID:MSVC>:/utf-8>\")\n  add_compile_options(\"$<$<CXX_COMPILER_ID:MSVC>:/utf-8>\")\nelseif(NOT APPLE)\n  # Linux flags\n  string(APPEND CMAKE_CXX_FLAGS \" -Wall -Wextra -Wl,-rpath,'$ORIGIN'\")\n  string(APPEND CMAKE_C_FLAGS \" -Wall -Wextra\")\nendif()\n\nadd_executable(piper src/cpp/main.cpp src/cpp/piper.cpp)\nadd_executable(test_piper src/cpp/test.cpp src/cpp/piper.cpp)\n\n# NOTE: external project prefix are shortened because of path length restrictions on Windows\n# NOTE: onnxruntime is pulled from piper-phonemize\n\n# ---- fmt ---\n\nif(NOT DEFINED FMT_DIR)\n  set(FMT_VERSION \"10.0.0\")\n  set(FMT_DIR \"${CMAKE_CURRENT_BINARY_DIR}/fi\")\n\n  include(ExternalProject)\n  ExternalProject_Add(\n    fmt_external\n    PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/f\"\n    URL \"https://github.com/fmtlib/fmt/archive/refs/tags/${FMT_VERSION}.zip\"\n    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${FMT_DIR}\n    CMAKE_ARGS -DFMT_TEST:BOOL=OFF  # Don't build all the tests\n  )\n  add_dependencies(piper fmt_external)\n  add_dependencies(test_piper fmt_external)\nendif()\n\n# ---- spdlog ---\n\nif(NOT DEFINED SPDLOG_DIR)\n  set(SPDLOG_DIR \"${CMAKE_CURRENT_BINARY_DIR}/si\")\n  set(SPDLOG_VERSION \"1.12.0\")\n  ExternalProject_Add(\n    spdlog_external\n    PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/s\"\n    URL \"https://github.com/gabime/spdlog/archive/refs/tags/v${SPDLOG_VERSION}.zip\"\n    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${SPDLOG_DIR}\n  )\n  add_dependencies(piper spdlog_external)\n  add_dependencies(test_piper spdlog_external)\nendif()\n\n# ---- piper-phonemize ---\n\nif(NOT DEFINED PIPER_PHONEMIZE_DIR)\n  set(PIPER_PHONEMIZE_DIR \"${CMAKE_CURRENT_BINARY_DIR}/pi\")\n  ExternalProject_Add(\n    piper_phonemize_external\n    PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/p\"\n    URL \"https://github.com/rhasspy/piper-phonemize/archive/refs/heads/master.zip\"\n    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${PIPER_PHONEMIZE_DIR}\n  )\n  add_dependencies(piper piper_phonemize_external)\n  add_dependencies(test_piper piper_phonemize_external)\nendif()\n\n# ---- Declare executable ----\n\nif((NOT MSVC) AND (NOT APPLE))\n  # Linux flags\n  string(APPEND CMAKE_CXX_FLAGS \" -Wall -Wextra -Wl,-rpath,'$ORIGIN'\")\n  string(APPEND CMAKE_C_FLAGS \" -Wall -Wextra\")\n  target_link_libraries(piper -static-libgcc -static-libstdc++)\n\n  set(PIPER_EXTRA_LIBRARIES \"pthread\")\nendif()\n\ntarget_link_libraries(piper\n  fmt\n  spdlog\n  espeak-ng\n  piper_phonemize\n  onnxruntime\n  ${PIPER_EXTRA_LIBRARIES}\n)\n\ntarget_link_directories(piper PUBLIC\n  ${FMT_DIR}/lib\n  ${SPDLOG_DIR}/lib\n  ${PIPER_PHONEMIZE_DIR}/lib\n)\n\ntarget_include_directories(piper PUBLIC\n  ${FMT_DIR}/include\n  ${SPDLOG_DIR}/include\n  ${PIPER_PHONEMIZE_DIR}/include\n)\n\ntarget_compile_definitions(piper PUBLIC _PIPER_VERSION=${piper_version})\n\n# ---- Declare test ----\ninclude(CTest)\nenable_testing()\nadd_test(\n  NAME test_piper\n  COMMAND test_piper \"${CMAKE_SOURCE_DIR}/etc/test_voice.onnx\" \"${PIPER_PHONEMIZE_DIR}/share/espeak-ng-data\" \"${CMAKE_CURRENT_BINARY_DIR}/test.wav\"\n)\n\ntarget_compile_features(test_piper PUBLIC cxx_std_17)\n\ntarget_include_directories(\n  test_piper PUBLIC\n  ${FMT_DIR}/include\n  ${SPDLOG_DIR}/include\n  ${PIPER_PHONEMIZE_DIR}/include\n)\n\ntarget_link_directories(\n  test_piper PUBLIC\n  ${FMT_DIR}/lib\n  ${SPDLOG_DIR}/lib\n  ${PIPER_PHONEMIZE_DIR}/lib\n)\n\ntarget_link_libraries(test_piper PUBLIC\n  fmt\n  spdlog\n  espeak-ng\n  piper_phonemize\n  onnxruntime\n)\n\n# ---- Declare install targets ----\n\ninstall(\n  TARGETS piper\n  DESTINATION ${CMAKE_INSTALL_PREFIX})\n\n# Dependencies\ninstall(\n  DIRECTORY ${PIPER_PHONEMIZE_DIR}/bin/\n  DESTINATION ${CMAKE_INSTALL_PREFIX}\n  USE_SOURCE_PERMISSIONS  # keep +x\n  FILES_MATCHING\n  PATTERN \"piper_phonemize\"\n  PATTERN \"espeak-ng\"\n  PATTERN \"*.dll\"\n)\n\ninstall(\n  DIRECTORY ${PIPER_PHONEMIZE_DIR}/lib/\n  DESTINATION ${CMAKE_INSTALL_PREFIX}\n  FILES_MATCHING\n  PATTERN \"*.dll\"\n  PATTERN \"*.so*\"\n)\n\ninstall(\n  DIRECTORY ${PIPER_PHONEMIZE_DIR}/share/espeak-ng-data\n  DESTINATION ${CMAKE_INSTALL_PREFIX}\n)\n\ninstall(\n  FILES ${PIPER_PHONEMIZE_DIR}/share/libtashkeel_model.ort\n  DESTINATION ${CMAKE_INSTALL_PREFIX}\n)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.462890625,
          "content": "FROM debian:bullseye as build\nARG TARGETARCH\nARG TARGETVARIANT\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n        build-essential cmake ca-certificates curl pkg-config git\n\nWORKDIR /build\n\nCOPY ./ ./\nRUN cmake -Bbuild -DCMAKE_INSTALL_PREFIX=install\nRUN cmake --build build --config Release\nRUN cmake --install build\n\n# Do a test run\nRUN ./build/piper --help\n\n# Build .tar.gz to keep symlinks\nWORKDIR /dist\nRUN mkdir -p piper && \\\n    cp -dR /build/install/* ./piper/ && \\\n    tar -czf \"piper_${TARGETARCH}${TARGETVARIANT}.tar.gz\" piper/\n\n# -----------------------------------------------------------------------------\n\n# FROM debian:bullseye as test\n# ARG TARGETARCH\n# ARG TARGETVARIANT\n\n# WORKDIR /test\n\n# COPY local/en-us/lessac/low/en-us-lessac-low.onnx \\\n#      local/en-us/lessac/low/en-us-lessac-low.onnx.json ./\n\n# # Run Piper on a test sentence and verify that the WAV file isn't empty\n# COPY --from=build /dist/piper_*.tar.gz ./\n# RUN tar -xzf piper*.tar.gz\n# RUN echo 'This is a test.' | ./piper/piper -m en-us-lessac-low.onnx -f test.wav\n# RUN if [ ! -f test.wav ]; then exit 1; fi\n# RUN size=\"$(wc -c < test.wav)\"; \\\n#     if [ \"${size}\" -lt \"1000\" ]; then echo \"File size is ${size} bytes\"; exit 1; fi\n\n# -----------------------------------------------------------------------------\n\nFROM scratch\n\n# COPY --from=test /test/piper_*.tar.gz /test/test.wav ./\nCOPY --from=build /dist/piper_*.tar.gz ./\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2022 Michael Hansen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3095703125,
          "content": ".PHONY: clean docker\n\nall:\n\tcmake -Bbuild -DCMAKE_INSTALL_PREFIX=install\n\tcmake --build build --config Release\n\tcd build && ctest --config Release\n\tcmake --install build\n\ndocker:\n\tdocker buildx build . --platform linux/amd64,linux/arm64,linux/arm/v7 --output 'type=local,dest=dist'\n\nclean:\n\trm -rf build install dist\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.748046875,
          "content": "![Piper logo](etc/logo.png)\n\nA fast, local neural text to speech system that sounds great and is optimized for the Raspberry Pi 4.\nPiper is used in a [variety of projects](#people-using-piper).\n\n``` sh\necho 'Welcome to the world of speech synthesis!' | \\\n  ./piper --model en_US-lessac-medium.onnx --output_file welcome.wav\n```\n\n[Listen to voice samples](https://rhasspy.github.io/piper-samples) and check out a [video tutorial by Thorsten MÃ¼ller](https://youtu.be/rjq5eZoWWSo)\n\nVoices are trained with [VITS](https://github.com/jaywalnut310/vits/) and exported to the [onnxruntime](https://onnxruntime.ai/).\n\nThis is a project of the [Open Home Foundation](https://www.openhomefoundation.org/).\n\n## Voices\n\nOur goal is to support Home Assistant and the [Year of Voice](https://www.home-assistant.io/blog/2022/12/20/year-of-voice/).\n\n[Download voices](VOICES.md) for the supported languages:\n\n* Arabic (ar_JO)\n* Catalan (ca_ES)\n* Czech (cs_CZ)\n* Welsh (cy_GB)\n* Danish (da_DK)\n* German (de_DE)\n* Greek (el_GR)\n* English (en_GB, en_US)\n* Spanish (es_ES, es_MX)\n* Finnish (fi_FI)\n* French (fr_FR)\n* Hungarian (hu_HU)\n* Icelandic (is_IS)\n* Italian (it_IT)\n* Georgian (ka_GE)\n* Kazakh (kk_KZ)\n* Luxembourgish (lb_LU)\n* Nepali (ne_NP)\n* Dutch (nl_BE, nl_NL)\n* Norwegian (no_NO)\n* Polish (pl_PL)\n* Portuguese (pt_BR, pt_PT)\n* Romanian (ro_RO)\n* Russian (ru_RU)\n* Serbian (sr_RS)\n* Swedish (sv_SE)\n* Swahili (sw_CD)\n* Turkish (tr_TR)\n* Ukrainian (uk_UA)\n* Vietnamese (vi_VN)\n* Chinese (zh_CN)\n\nYou will need two files per voice:\n\n1. A `.onnx` model file, such as [`en_US-lessac-medium.onnx`](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/medium/en_US-lessac-medium.onnx)\n2. A `.onnx.json` config file, such as [`en_US-lessac-medium.onnx.json`](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/medium/en_US-lessac-medium.onnx.json)\n\nThe `MODEL_CARD` file for each voice contains important licensing information. Piper is intended for text to speech research, and does not impose any additional restrictions on voice models. Some voices may have restrictive licenses, however, so please review them carefully!\n\n\n## Installation\n\nYou can [run Piper with Python](#running-in-python) or download a binary release:\n\n* [amd64](https://github.com/rhasspy/piper/releases/download/v1.2.0/piper_amd64.tar.gz) (64-bit desktop Linux)\n* [arm64](https://github.com/rhasspy/piper/releases/download/v1.2.0/piper_arm64.tar.gz) (64-bit Raspberry Pi 4)\n* [armv7](https://github.com/rhasspy/piper/releases/download/v1.2.0/piper_armv7.tar.gz) (32-bit Raspberry Pi 3/4)\n\nIf you want to build from source, see the [Makefile](Makefile) and [C++ source](src/cpp).\nYou must download and extract [piper-phonemize](https://github.com/rhasspy/piper-phonemize) to `lib/Linux-$(uname -m)/piper_phonemize` before building.\nFor example, `lib/Linux-x86_64/piper_phonemize/lib/libpiper_phonemize.so` should exist for AMD/Intel machines (as well as everything else from `libpiper_phonemize-amd64.tar.gz`).\n\n\n## Usage\n\n1. [Download a voice](#voices) and extract the `.onnx` and `.onnx.json` files\n2. Run the `piper` binary with text on standard input, `--model /path/to/your-voice.onnx`, and `--output_file output.wav`\n\nFor example:\n\n``` sh\necho 'Welcome to the world of speech synthesis!' | \\\n  ./piper --model en_US-lessac-medium.onnx --output_file welcome.wav\n```\n\nFor multi-speaker models, use `--speaker <number>` to change speakers (default: 0).\n\nSee `piper --help` for more options.\n\n### Streaming Audio\n\nPiper can stream raw audio to stdout as its produced:\n\n``` sh\necho 'This sentence is spoken first. This sentence is synthesized while the first sentence is spoken.' | \\\n  ./piper --model en_US-lessac-medium.onnx --output-raw | \\\n  aplay -r 22050 -f S16_LE -t raw -\n```\n\nThis is **raw** audio and not a WAV file, so make sure your audio player is set to play 16-bit mono PCM samples at the correct sample rate for the voice.\n\n### JSON Input\n\nThe `piper` executable can accept JSON input when using the `--json-input` flag. Each line of input must be a JSON object with `text` field. For example:\n\n``` json\n{ \"text\": \"First sentence to speak.\" }\n{ \"text\": \"Second sentence to speak.\" }\n```\n\nOptional fields include:\n\n* `speaker` - string\n    * Name of the speaker to use from `speaker_id_map` in config (multi-speaker voices only)\n* `speaker_id` - number\n    * Id of speaker to use from 0 to number of speakers - 1 (multi-speaker voices only, overrides \"speaker\")\n* `output_file` - string\n    * Path to output WAV file\n    \nThe following example writes two sentences with different speakers to different files:\n\n``` json\n{ \"text\": \"First speaker.\", \"speaker_id\": 0, \"output_file\": \"/tmp/speaker_0.wav\" }\n{ \"text\": \"Second speaker.\", \"speaker_id\": 1, \"output_file\": \"/tmp/speaker_1.wav\" }\n```\n\n\n## People using Piper\n\nPiper has been used in the following projects/papers:\n\n* [Home Assistant](https://github.com/home-assistant/addons/blob/master/piper/README.md)\n* [Rhasspy 3](https://github.com/rhasspy/rhasspy3/)\n* [NVDA - NonVisual Desktop Access](https://www.nvaccess.org/post/in-process-8th-may-2023/#voices)\n* [Image Captioning for the Visually Impaired and Blind: A Recipe for Low-Resource Languages](https://www.techrxiv.org/articles/preprint/Image_Captioning_for_the_Visually_Impaired_and_Blind_A_Recipe_for_Low-Resource_Languages/22133894)\n* [Open Voice Operating System](https://github.com/OpenVoiceOS/ovos-tts-plugin-piper)\n* [JetsonGPT](https://github.com/shahizat/jetsonGPT)\n* [LocalAI](https://github.com/go-skynet/LocalAI)\n* [Lernstick EDU / EXAM: reading clipboard content aloud with language detection](https://lernstick.ch/)\n* [Natural Speech - A plugin for Runelite, an OSRS Client](https://github.com/phyce/rl-natural-speech)\n* [mintPiper](https://github.com/evuraan/mintPiper)\n* [Vim-Piper](https://github.com/wolandark/vim-piper)\n\n## Training\n\nSee the [training guide](TRAINING.md) and the [source code](src/python).\n\nPretrained checkpoints are available on [Hugging Face](https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main)\n\n\n## Running in Python\n\nSee [src/python_run](src/python_run)\n\nInstall with `pip`:\n\n``` sh\npip install piper-tts\n```\n\nand then run:\n\n``` sh\necho 'Welcome to the world of speech synthesis!' | piper \\\n  --model en_US-lessac-medium \\\n  --output_file welcome.wav\n```\n\nThis will automatically download [voice files](https://huggingface.co/rhasspy/piper-voices/tree/v1.0.0) the first time they're used. Use `--data-dir` and `--download-dir` to adjust where voices are found/downloaded.\n\nIf you'd like to use a GPU, install the `onnxruntime-gpu` package:\n\n\n``` sh\n.venv/bin/pip3 install onnxruntime-gpu\n```\n\nand then run `piper` with the `--cuda` argument. You will need to have a functioning CUDA environment, such as what's available in [NVIDIA's PyTorch containers](https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch).\n\n"
        },
        {
          "name": "TRAINING.md",
          "type": "blob",
          "size": 9.498046875,
          "content": "# Training Guide\n\nCheck out a [video training guide by Thorsten MÃ¼ller](https://www.youtube.com/watch?v=b_we_jma220)\n\nFor Windows, see [ssamjh's guide using WSL](https://ssamjh.nz/create-custom-piper-tts-voice/)\n\n---\n\nTraining a voice for Piper involves 3 main steps:\n\n1. Preparing the dataset\n2. Training the voice model\n3. Exporting the voice model\n\nChoices must be made at each step, including:\n\n* The model \"quality\"\n    * low = 16,000 Hz sample rate, [smaller voice model](https://github.com/rhasspy/piper/blob/master/src/python/piper_train/vits/config.py#L30)\n    * medium = 22,050 Hz sample rate, [smaller voice model](https://github.com/rhasspy/piper/blob/master/src/python/piper_train/vits/config.py#L30)\n    * high = 22,050 Hz sample rate, [larger voice model](https://github.com/rhasspy/piper/blob/master/src/python/piper_train/vits/config.py#L45)\n* Single or multiple speakers\n* Fine-tuning an [existing model](https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main) or training from scratch\n* Exporting to [onnx](https://github.com/microsoft/onnxruntime/) or PyTorch\n\n## Getting Started\n\nStart by installing system dependencies:\n\n``` sh\nsudo apt-get install python3-dev\n```\n\nThen create a Python virtual environment:\n\n``` sh\ncd piper/src/python\npython3 -m venv .venv\nsource .venv/bin/activate\npip3 install --upgrade pip\npip3 install --upgrade wheel setuptools\npip3 install -e .\n```\n\nRun the `build_monotonic_align.sh` script in the `src/python` directory to build the extension.\n\nEnsure you have [espeak-ng](https://github.com/espeak-ng/espeak-ng/) installed (`sudo apt-get install espeak-ng`).\n\n\n## Preparing a Dataset\n\nThe Piper training scripts expect two files that can be generated by `python3 -m piper_train.preprocess`:\n\n* A `config.json` file with the voice settings\n    * `audio` (required)\n        * `sample_rate` - audio rate in hertz\n    * `espeak` (required)\n        * `language` - espeak-ng voice or [alphabet](https://github.com/rhasspy/piper-phonemize/blob/master/src/phoneme_ids.cpp)\n    * `num_symbols` (required)\n        * Number of phonemes in the model (typically 256)\n    * `num_speakers` (required)\n        * Number of speakers in the dataset\n    * `phoneme_id_map` (required)\n        * Map from a phoneme (UTF-8 codepoint) to a list of ids\n        * Id 0 (\"_\") is padding (pad)\n        * Id 1 (\"^\") is the beginning of an utterance (bos)\n        * Id 2 (\"$\") is the end of an utterance (eos)\n        * Id 3 (\" \") is a word separator (whitespace)\n    * `phoneme_type`\n        * \"espeak\" or \"text\"\n        * \"espeak\" phonemes use [espeak-ng](https://github.com/rhasspy/espeak-ng)\n        * \"text\" phonemes use a pre-defined [alphabet](https://github.com/rhasspy/piper-phonemize/blob/master/src/phoneme_ids.cpp)\n    * `speaker_id_map`\n        * Map from a speaker name to id\n    * `phoneme_map`\n        * Map from a phoneme (UTF-8 codepoint) to a list of phonemes\n    * `inference`\n        * `noise_scale` - noise added to the generator (default: 0.667)\n        * `length_scale` - speaking speed (default: 1.0)\n        * `noise_w` - phoneme width variation (default: 0.8) \n* A `dataset.jsonl` file with one line per utterance (JSON objects)\n    * `phoneme_ids` (required)\n        * List of ids for each utterance phoneme (0 <= id < `num_symbols`)\n    * `audio_norm_path` (required)\n        * Absolute path to [normalized audio](https://github.com/rhasspy/piper/tree/master/src/python/piper_train/norm_audio) file (`.pt`)\n    * `audio_spec_path` (required)\n        * Absolute path to [audio spectrogram](https://github.com/rhasspy/piper/blob/fda64e7a5104810a24eb102b880fc5c2ac596a38/src/python/piper_train/vits/mel_processing.py#L40) file (`.pt`)\n    * `speaker_id` (required for multi-speaker)\n        * Id of the utterance's speaker (0 <= id < `num_speakers`)\n    * `audio_path`\n        * Absolute path to original audio file\n    * `text`\n        * Original text of utterance before phonemization\n    * `phonemes`\n        * Phonemes from utterance text before converting to ids\n    * `speaker`\n        * Name of utterance speaker (from `speaker_id_map`)\n\n\n### Dataset Format\n\nThe pre-processing script expects data to be a directory with:\n\n* `metadata.csv` - CSV file with text, audio filenames, and speaker names\n* `wav/` - directory with audio files\n\nThe `metadata.csv` file uses `|` as a delimiter, and has 2 or 3 columns depending on if the dataset has a single or multiple speakers.\nThere is no header row.\n\nFor single speaker datasets:\n\n```csv\nid|text\n```\n\nwhere `id` is the name of the WAV file in the `wav` directory. For example, an `id` of `1234` means that `wav/1234.wav` should exist. \n\nFor multi-speaker datasets:\n\n```csv\nid|speaker|text\n```\n\nwhere `speaker` is the name of the utterance's speaker. Speaker ids will automatically be assigned based on the number of utterances per speaker (speaker id 0 has the most utterances).\n\n\n### Pre-processing\n\nAn example of pre-processing a single speaker dataset:\n\n``` sh\npython3 -m piper_train.preprocess \\\n  --language en-us \\\n  --input-dir /path/to/dataset_dir/ \\\n  --output-dir /path/to/training_dir/ \\\n  --dataset-format ljspeech \\\n  --single-speaker \\\n  --sample-rate 22050\n```\n\nThe `--language` argument refers to an [espeak-ng voice](https://github.com/espeak-ng/espeak-ng/) by default, such as `de` for German.\n\nTo pre-process a multi-speaker dataset, remove the `--single-speaker` flag and ensure that your dataset has the 3 columns: `id|speaker|text`\nVerify the number of speakers in the generated `config.json` file before proceeding.\n\n\n## Training a Model\n\nOnce you have a `config.json`, `dataset.jsonl`, and audio files (`.pt`) from pre-processing, you can begin the training process with `python3 -m piper_train`\n\nFor most cases, you should fine-tune from [an existing model](https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main). The model must have the sample audio quality and sample rate, but does not necessarily need to be in the same language.\n\nIt is **highly recommended** to train with the following `Dockerfile`:\n\n``` dockerfile\nFROM nvcr.io/nvidia/pytorch:22.03-py3\n\nRUN pip3 install \\\n    'pytorch-lightning'\n\nENV NUMBA_CACHE_DIR=.numba_cache\n```\n\nAs an example, we will fine-tune the [medium quality lessac voice](https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main/en/en_US/lessac/medium). Download the `.ckpt` file and run the following command in your training environment:\n\n``` sh\npython3 -m piper_train \\\n    --dataset-dir /path/to/training_dir/ \\\n    --accelerator 'gpu' \\\n    --devices 1 \\\n    --batch-size 32 \\\n    --validation-split 0.0 \\\n    --num-test-examples 0 \\\n    --max_epochs 10000 \\\n    --resume_from_checkpoint /path/to/lessac/epoch=2164-step=1355540.ckpt \\\n    --checkpoint-epochs 1 \\\n    --precision 32\n```\n\nUse `--quality high` to train a [larger voice model](https://github.com/rhasspy/piper/blob/master/src/python/piper_train/vits/config.py#L45) (sounds better, but is much slower).\n\nYou can adjust the validation split (5% = 0.05) and number of test examples for your specific dataset. For fine-tuning, they are often set to 0 because the target dataset is very small.\n\nBatch size can be tricky to get right. It depends on the size of your GPU's vRAM, the model's quality/size, and the length of the longest sentence in your dataset. The `--max-phoneme-ids <N>` argument to `piper_train` will drop sentences that have more than `N` phoneme ids. In practice, using `--batch-size 32` and `--max-phoneme-ids 400` will work for 24 GB of vRAM (RTX 3090/4090).\n\n\n### Multi-Speaker Fine-Tuning\n\nIf you're training a multi-speaker model, use `--resume_from_single_speaker_checkpoint` instead of `--resume_from_checkpoint`. This will be *much* faster than training your multi-speaker model from scratch.\n\n\n### Testing\n\nTo test your voice during training, you can use [these test sentences](https://github.com/rhasspy/piper/tree/master/etc/test_sentences) or generate your own with [piper-phonemize](https://github.com/rhasspy/piper-phonemize/). Run the following command to generate audio files:\n\n```sh\ncat test_en-us.jsonl | \\\n    python3 -m piper_train.infer \\\n        --sample-rate 22050 \\\n        --checkpoint /path/to/training_dir/lightning_logs/version_0/checkpoints/*.ckpt \\\n        --output-dir /path/to/training_dir/output\"\n```\n\nThe input format to `piper_train.infer` is the same as `dataset.jsonl`: one line of JSON per utterance with `phoneme_ids` and `speaker_id` (multi-speaker only). Generate your own test file with [piper-phonemize](https://github.com/rhasspy/piper-phonemize/):\n\n```sh\nlib/piper_phonemize -l en-us --espeak-data lib/espeak-ng-data/ < my_test_sentences.txt > my_test_phonemes.jsonl\n```\n\n\n### Tensorboard\n\nCheck on your model's progress with tensorboard:\n\n```sh\ntensorboard --logdir /path/to/training_dir/lightning_logs\n```\n\nClick on the scalars tab and look at both `loss_disc_all` and `loss_gen_all`. In general, the model is \"done\" when `loss_disc_all` levels off. We've found that 2000 epochs is usually good for models trained from scratch, and an additional 1000 epochs when fine-tuning.\n\n\n## Exporting a Model\n\nWhen your model is finished training, export it to onnx with:\n\n```sh\npython3 -m piper_train.export_onnx \\\n    /path/to/model.ckpt \\\n    /path/to/model.onnx\n    \ncp /path/to/training_dir/config.json \\\n   /path/to/model.onnx.json\n```\n\nThe [export script](https://github.com/rhasspy/piper-samples/blob/master/_script/export.sh) does additional optimization of the model with [onnx-simplifier](https://github.com/daquexian/onnx-simplifier).\n\nIf the export is successful, you can now use your voice with Piper:\n\n```sh\necho 'This is a test.' | \\\n  piper -m /path/to/model.onnx --output_file test.wav\n```\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "1.2.0\n"
        },
        {
          "name": "VOICES.md",
          "type": "blob",
          "size": 37.9501953125,
          "content": "# Voices\n\n* Arabic (`ar_JO`, Ø§ÙØ¹Ø±Ø¨ÙØ©)\n    * kareem\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ar/ar_JO/kareem/low/ar_JO-kareem-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ar/ar_JO/kareem/low/ar_JO-kareem-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ar/ar_JO/kareem/medium/ar_JO-kareem-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ar/ar_JO/kareem/medium/ar_JO-kareem-medium.onnx.json?download=true.json)]\n* Catalan (`ca_ES`, CatalÃ )\n    * upc_ona\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_ona/x_low/ca_ES-upc_ona-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_ona/x_low/ca_ES-upc_ona-x_low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_ona/medium/ca_ES-upc_ona-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_ona/medium/ca_ES-upc_ona-medium.onnx.json?download=true.json)]\n    * upc_pau\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_pau/x_low/ca_ES-upc_pau-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ca/ca_ES/upc_pau/x_low/ca_ES-upc_pau-x_low.onnx.json?download=true.json)]\n* Czech (`cs_CZ`, ÄeÅ¡tina)\n    * jirka\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cs/cs_CZ/jirka/low/cs_CZ-jirka-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cs/cs_CZ/jirka/low/cs_CZ-jirka-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cs/cs_CZ/jirka/medium/cs_CZ-jirka-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cs/cs_CZ/jirka/medium/cs_CZ-jirka-medium.onnx.json?download=true.json)]\n* Welsh (`cy_GB`, Cymraeg)\n    * gwryw_gogleddol\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cy/cy_GB/gwryw_gogleddol/medium/cy_GB-gwryw_gogleddol-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/cy/cy_GB/gwryw_gogleddol/medium/cy_GB-gwryw_gogleddol-medium.onnx.json?download=true.json)]\n* Danish (`da_DK`, Dansk)\n    * talesyntese\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/da/da_DK/talesyntese/medium/da_DK-talesyntese-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/da/da_DK/talesyntese/medium/da_DK-talesyntese-medium.onnx.json?download=true.json)]\n* German (`de_DE`, Deutsch)\n    * eva_k\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/eva_k/x_low/de_DE-eva_k-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/eva_k/x_low/de_DE-eva_k-x_low.onnx.json?download=true.json)]\n    * karlsson\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/karlsson/low/de_DE-karlsson-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/karlsson/low/de_DE-karlsson-low.onnx.json?download=true.json)]\n    * kerstin\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/kerstin/low/de_DE-kerstin-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/kerstin/low/de_DE-kerstin-low.onnx.json?download=true.json)]\n    * mls\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/mls/medium/de_DE-mls-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/mls/medium/de_DE-mls-medium.onnx.json?download=true.json)]\n    * pavoque\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/pavoque/low/de_DE-pavoque-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/pavoque/low/de_DE-pavoque-low.onnx.json?download=true.json)]\n    * ramona\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/ramona/low/de_DE-ramona-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/ramona/low/de_DE-ramona-low.onnx.json?download=true.json)]\n    * thorsten\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/low/de_DE-thorsten-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/low/de_DE-thorsten-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/medium/de_DE-thorsten-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/medium/de_DE-thorsten-medium.onnx.json?download=true.json)]\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/high/de_DE-thorsten-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten/high/de_DE-thorsten-high.onnx.json?download=true.json)]\n    * thorsten_emotional\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten_emotional/medium/de_DE-thorsten_emotional-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/de/de_DE/thorsten_emotional/medium/de_DE-thorsten_emotional-medium.onnx.json?download=true.json)]\n* Greek (`el_GR`, ÎÎ»Î»Î·Î½Î¹ÎºÎ¬)\n    * rapunzelina\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/el/el_GR/rapunzelina/low/el_GR-rapunzelina-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/el/el_GR/rapunzelina/low/el_GR-rapunzelina-low.onnx.json?download=true.json)]\n* English (en_GB)\n    * alan\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/low/en_GB-alan-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/low/en_GB-alan-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/medium/en_GB-alan-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/medium/en_GB-alan-medium.onnx.json?download=true.json)]\n    * alba\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alba/medium/en_GB-alba-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alba/medium/en_GB-alba-medium.onnx.json?download=true.json)]\n    * aru\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/aru/medium/en_GB-aru-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/aru/medium/en_GB-aru-medium.onnx.json?download=true.json)]\n    * cori\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/cori/medium/en_GB-cori-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/cori/medium/en_GB-cori-medium.onnx.json?download=true.json)]\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/cori/high/en_GB-cori-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/cori/high/en_GB-cori-high.onnx.json?download=true.json)]\n    * jenny_dioco\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/jenny_dioco/medium/en_GB-jenny_dioco-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/jenny_dioco/medium/en_GB-jenny_dioco-medium.onnx.json?download=true.json)]\n    * northern_english_male\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/northern_english_male/medium/en_GB-northern_english_male-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/northern_english_male/medium/en_GB-northern_english_male-medium.onnx.json?download=true.json)]\n    * semaine\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/semaine/medium/en_GB-semaine-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/semaine/medium/en_GB-semaine-medium.onnx.json?download=true.json)]\n    * southern_english_female\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/southern_english_female/low/en_GB-southern_english_female-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/southern_english_female/low/en_GB-southern_english_female-low.onnx.json?download=true.json)]\n    * vctk\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/vctk/medium/en_GB-vctk-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/vctk/medium/en_GB-vctk-medium.onnx.json?download=true.json)]\n* English (en_US)\n    * amy\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/amy/low/en_US-amy-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/amy/low/en_US-amy-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/amy/medium/en_US-amy-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/amy/medium/en_US-amy-medium.onnx.json?download=true.json)]\n    * arctic\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/arctic/medium/en_US-arctic-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/arctic/medium/en_US-arctic-medium.onnx.json?download=true.json)]\n    * bryce\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/bryce/medium/en_US-bryce-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/bryce/medium/en_US-bryce-medium.onnx.json?download=true.json)]\n    * danny\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/danny/low/en_US-danny-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/danny/low/en_US-danny-low.onnx.json?download=true.json)]\n    * hfc_female\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/hfc_female/medium/en_US-hfc_female-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/hfc_female/medium/en_US-hfc_female-medium.onnx.json?download=true.json)]\n    * hfc_male\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/hfc_male/medium/en_US-hfc_male-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/hfc_male/medium/en_US-hfc_male-medium.onnx.json?download=true.json)]\n    * joe\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/joe/medium/en_US-joe-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/joe/medium/en_US-joe-medium.onnx.json?download=true.json)]\n    * john\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/john/medium/en_US-john-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/john/medium/en_US-john-medium.onnx.json?download=true.json)]\n    * kathleen\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kathleen/low/en_US-kathleen-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kathleen/low/en_US-kathleen-low.onnx.json?download=true.json)]\n    * kristin\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kristin/medium/en_US-kristin-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kristin/medium/en_US-kristin-medium.onnx.json?download=true.json)]\n    * kusal\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kusal/medium/en_US-kusal-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/kusal/medium/en_US-kusal-medium.onnx.json?download=true.json)]\n    * l2arctic\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/l2arctic/medium/en_US-l2arctic-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/l2arctic/medium/en_US-l2arctic-medium.onnx.json?download=true.json)]\n    * lessac\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/low/en_US-lessac-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/low/en_US-lessac-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/medium/en_US-lessac-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/medium/en_US-lessac-medium.onnx.json?download=true.json)]\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/high/en_US-lessac-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/lessac/high/en_US-lessac-high.onnx.json?download=true.json)]\n    * libritts\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/libritts/high/en_US-libritts-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/libritts/high/en_US-libritts-high.onnx.json?download=true.json)]\n    * libritts_r\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/libritts_r/medium/en_US-libritts_r-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/libritts_r/medium/en_US-libritts_r-medium.onnx.json?download=true.json)]\n    * ljspeech\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ljspeech/medium/en_US-ljspeech-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ljspeech/medium/en_US-ljspeech-medium.onnx.json?download=true.json)]\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ljspeech/high/en_US-ljspeech-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ljspeech/high/en_US-ljspeech-high.onnx.json?download=true.json)]\n    * norman\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/norman/medium/en_US-norman-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/norman/medium/en_US-norman-medium.onnx.json?download=true.json)]\n    * ryan\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/low/en_US-ryan-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/low/en_US-ryan-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/medium/en_US-ryan-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/medium/en_US-ryan-medium.onnx.json?download=true.json)]\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/high/en_US-ryan-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_US/ryan/high/en_US-ryan-high.onnx.json?download=true.json)]\n* Spanish (`es_ES`, EspaÃ±ol)\n    * carlfm\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/carlfm/x_low/es_ES-carlfm-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/carlfm/x_low/es_ES-carlfm-x_low.onnx.json?download=true.json)]\n    * davefx\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/davefx/medium/es_ES-davefx-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/davefx/medium/es_ES-davefx-medium.onnx.json?download=true.json)]\n    * mls_10246\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/mls_10246/low/es_ES-mls_10246-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/mls_10246/low/es_ES-mls_10246-low.onnx.json?download=true.json)]\n    * mls_9972\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/mls_9972/low/es_ES-mls_9972-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/mls_9972/low/es_ES-mls_9972-low.onnx.json?download=true.json)]\n    * sharvard\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/sharvard/medium/es_ES-sharvard-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_ES/sharvard/medium/es_ES-sharvard-medium.onnx.json?download=true.json)]\n* Spanish (`es_MX`, EspaÃ±ol)\n    * ald\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_MX/ald/medium/es_MX-ald-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_MX/ald/medium/es_MX-ald-medium.onnx.json?download=true.json)]\n    * claude\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_MX/claude/high/es_MX-claude-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/es/es_MX/claude/high/es_MX-claude-high.onnx.json?download=true.json)]\n* Farsi (`fa_IR`, ÙØ§Ø±Ø³Û)\n    * amir\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fa/fa_IR/amir/medium/fa_IR-amir-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fa/fa_IR/amir/medium/fa_IR-amir-medium.onnx.json?download=true.json)]\n    * gyro\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fa/fa_IR/gyro/medium/fa_IR-gyro-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fa/fa_IR/gyro/medium/fa_IR-gyro-medium.onnx.json?download=true.json)]\n* Finnish (`fi_FI`, Suomi)\n    * harri\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fi/fi_FI/harri/low/fi_FI-harri-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fi/fi_FI/harri/low/fi_FI-harri-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fi/fi_FI/harri/medium/fi_FI-harri-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fi/fi_FI/harri/medium/fi_FI-harri-medium.onnx.json?download=true.json)]\n* French (`fr_FR`, FranÃ§ais)\n    * gilles\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/gilles/low/fr_FR-gilles-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/gilles/low/fr_FR-gilles-low.onnx.json?download=true.json)]\n    * mls\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/mls/medium/fr_FR-mls-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/mls/medium/fr_FR-mls-medium.onnx.json?download=true.json)]\n    * mls_1840\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/mls_1840/low/fr_FR-mls_1840-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/mls_1840/low/fr_FR-mls_1840-low.onnx.json?download=true.json)]\n    * siwis\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/siwis/low/fr_FR-siwis-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/siwis/low/fr_FR-siwis-low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/siwis/medium/fr_FR-siwis-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/siwis/medium/fr_FR-siwis-medium.onnx.json?download=true.json)]\n    * tom\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/tom/medium/fr_FR-tom-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/tom/medium/fr_FR-tom-medium.onnx.json?download=true.json)]\n    * upmc\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/upmc/medium/fr_FR-upmc-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/fr/fr_FR/upmc/medium/fr_FR-upmc-medium.onnx.json?download=true.json)]\n* Hungarian (`hu_HU`, Magyar)\n    * anna\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/anna/medium/hu_HU-anna-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/anna/medium/hu_HU-anna-medium.onnx.json?download=true.json)]\n    * berta\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/berta/medium/hu_HU-berta-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/berta/medium/hu_HU-berta-medium.onnx.json?download=true.json)]\n    * imre\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/imre/medium/hu_HU-imre-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/hu/hu_HU/imre/medium/hu_HU-imre-medium.onnx.json?download=true.json)]\n* Icelandic (`is_IS`, Ã­slenska)\n    * bui\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/bui/medium/is_IS-bui-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/bui/medium/is_IS-bui-medium.onnx.json?download=true.json)]\n    * salka\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/salka/medium/is_IS-salka-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/salka/medium/is_IS-salka-medium.onnx.json?download=true.json)]\n    * steinn\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/steinn/medium/is_IS-steinn-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/steinn/medium/is_IS-steinn-medium.onnx.json?download=true.json)]\n    * ugla\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/ugla/medium/is_IS-ugla-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/is/is_IS/ugla/medium/is_IS-ugla-medium.onnx.json?download=true.json)]\n* Italian (`it_IT`, Italiano)\n    * paola\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/it/it_IT/paola/medium/it_IT-paola-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/it/it_IT/paola/medium/it_IT-paola-medium.onnx.json?download=true.json)]\n    * riccardo\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/it/it_IT/riccardo/x_low/it_IT-riccardo-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/it/it_IT/riccardo/x_low/it_IT-riccardo-x_low.onnx.json?download=true.json)]\n* Georgian (`ka_GE`, á¥áá áá£áá ááá)\n    * natia\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ka/ka_GE/natia/medium/ka_GE-natia-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ka/ka_GE/natia/medium/ka_GE-natia-medium.onnx.json?download=true.json)]\n* Kazakh (`kk_KZ`, ÒÐ°Ð·Ð°ÒÑÐ°)\n    * iseke\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/iseke/x_low/kk_KZ-iseke-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/iseke/x_low/kk_KZ-iseke-x_low.onnx.json?download=true.json)]\n    * issai\n        * high - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/issai/high/kk_KZ-issai-high.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/issai/high/kk_KZ-issai-high.onnx.json?download=true.json)]\n    * raya\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/raya/x_low/kk_KZ-raya-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/kk/kk_KZ/raya/x_low/kk_KZ-raya-x_low.onnx.json?download=true.json)]\n* Luxembourgish (`lb_LU`, LÃ«tzebuergesch)\n    * marylux\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/lb/lb_LU/marylux/medium/lb_LU-marylux-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/lb/lb_LU/marylux/medium/lb_LU-marylux-medium.onnx.json?download=true.json)]\n* Nepali (`ne_NP`, à¤¨à¥à¤ªà¤¾à¤²à¥)\n    * google\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ne/ne_NP/google/x_low/ne_NP-google-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ne/ne_NP/google/x_low/ne_NP-google-x_low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ne/ne_NP/google/medium/ne_NP-google-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ne/ne_NP/google/medium/ne_NP-google-medium.onnx.json?download=true.json)]\n* Dutch (`nl_BE`, Nederlands)\n    * nathalie\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/nathalie/x_low/nl_BE-nathalie-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/nathalie/x_low/nl_BE-nathalie-x_low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/nathalie/medium/nl_BE-nathalie-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/nathalie/medium/nl_BE-nathalie-medium.onnx.json?download=true.json)]\n    * rdh\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/rdh/x_low/nl_BE-rdh-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/rdh/x_low/nl_BE-rdh-x_low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/rdh/medium/nl_BE-rdh-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_BE/rdh/medium/nl_BE-rdh-medium.onnx.json?download=true.json)]\n* Dutch (`nl_NL`, Nederlands)\n    * mls\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls/medium/nl_NL-mls-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls/medium/nl_NL-mls-medium.onnx.json?download=true.json)]\n    * mls_5809\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls_5809/low/nl_NL-mls_5809-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls_5809/low/nl_NL-mls_5809-low.onnx.json?download=true.json)]\n    * mls_7432\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls_7432/low/nl_NL-mls_7432-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/nl/nl_NL/mls_7432/low/nl_NL-mls_7432-low.onnx.json?download=true.json)]\n* Norwegian (`no_NO`, Norsk)\n    * talesyntese\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/no/no_NO/talesyntese/medium/no_NO-talesyntese-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/no/no_NO/talesyntese/medium/no_NO-talesyntese-medium.onnx.json?download=true.json)]\n* Polish (`pl_PL`, Polski)\n    * darkman\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/darkman/medium/pl_PL-darkman-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/darkman/medium/pl_PL-darkman-medium.onnx.json?download=true.json)]\n    * gosia\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/gosia/medium/pl_PL-gosia-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/gosia/medium/pl_PL-gosia-medium.onnx.json?download=true.json)]\n    * mc_speech\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/mc_speech/medium/pl_PL-mc_speech-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/mc_speech/medium/pl_PL-mc_speech-medium.onnx.json?download=true.json)]\n    * mls_6892\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/mls_6892/low/pl_PL-mls_6892-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pl/pl_PL/mls_6892/low/pl_PL-mls_6892-low.onnx.json?download=true.json)]\n* Portuguese (`pt_BR`, PortuguÃªs)\n    * edresson\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_BR/edresson/low/pt_BR-edresson-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_BR/edresson/low/pt_BR-edresson-low.onnx.json?download=true.json)]\n    * faber\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_BR/faber/medium/pt_BR-faber-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_BR/faber/medium/pt_BR-faber-medium.onnx.json?download=true.json)]\n* Portuguese (`pt_PT`, PortuguÃªs)\n    * tugÃ£o\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_PT/tugÃ£o/medium/pt_PT-tugÃ£o-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/pt/pt_PT/tugÃ£o/medium/pt_PT-tugÃ£o-medium.onnx.json?download=true.json)]\n* Romanian (`ro_RO`, RomÃ¢nÄ)\n    * mihai\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ro/ro_RO/mihai/medium/ro_RO-mihai-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ro/ro_RO/mihai/medium/ro_RO-mihai-medium.onnx.json?download=true.json)]\n* Russian (`ru_RU`, Ð ÑÑÑÐºÐ¸Ð¹)\n    * denis\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/denis/medium/ru_RU-denis-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/denis/medium/ru_RU-denis-medium.onnx.json?download=true.json)]\n    * dmitri\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/dmitri/medium/ru_RU-dmitri-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/dmitri/medium/ru_RU-dmitri-medium.onnx.json?download=true.json)]\n    * irina\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/irina/medium/ru_RU-irina-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/irina/medium/ru_RU-irina-medium.onnx.json?download=true.json)]\n    * ruslan\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/ruslan/medium/ru_RU-ruslan-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/ru/ru_RU/ruslan/medium/ru_RU-ruslan-medium.onnx.json?download=true.json)]\n* Slovak (`sk_SK`, SlovenÄina)\n    * lili\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sk/sk_SK/lili/medium/sk_SK-lili-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sk/sk_SK/lili/medium/sk_SK-lili-medium.onnx.json?download=true.json)]\n* Slovenian (`sl_SI`, SlovenÅ¡Äina)\n    * artur\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sl/sl_SI/artur/medium/sl_SI-artur-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sl/sl_SI/artur/medium/sl_SI-artur-medium.onnx.json?download=true.json)]\n* Serbian (`sr_RS`, srpski)\n    * serbski_institut\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sr/sr_RS/serbski_institut/medium/sr_RS-serbski_institut-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sr/sr_RS/serbski_institut/medium/sr_RS-serbski_institut-medium.onnx.json?download=true.json)]\n* Swedish (`sv_SE`, Svenska)\n    * nst\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sv/sv_SE/nst/medium/sv_SE-nst-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sv/sv_SE/nst/medium/sv_SE-nst-medium.onnx.json?download=true.json)]\n* Swahili (`sw_CD`, Kiswahili)\n    * lanfrica\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sw/sw_CD/lanfrica/medium/sw_CD-lanfrica-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/sw/sw_CD/lanfrica/medium/sw_CD-lanfrica-medium.onnx.json?download=true.json)]\n* Turkish (`tr_TR`, TÃ¼rkÃ§e)\n    * dfki\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/dfki/medium/tr_TR-dfki-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/dfki/medium/tr_TR-dfki-medium.onnx.json?download=true.json)]\n    * fahrettin\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/fahrettin/medium/tr_TR-fahrettin-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/fahrettin/medium/tr_TR-fahrettin-medium.onnx.json?download=true.json)]\n    * fettah\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/fettah/medium/tr_TR-fettah-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/tr/tr_TR/fettah/medium/tr_TR-fettah-medium.onnx.json?download=true.json)]\n* Ukrainian (`uk_UA`, ÑÐºÑÐ°ÑÌÐ½ÑÑÐºÐ° Ð¼Ð¾ÌÐ²Ð°)\n    * lada\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/uk/uk_UA/lada/x_low/uk_UA-lada-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/uk/uk_UA/lada/x_low/uk_UA-lada-x_low.onnx.json?download=true.json)]\n    * ukrainian_tts\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/uk/uk_UA/ukrainian_tts/medium/uk_UA-ukrainian_tts-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/uk/uk_UA/ukrainian_tts/medium/uk_UA-ukrainian_tts-medium.onnx.json?download=true.json)]\n* Vietnamese (`vi_VN`, Tiáº¿ng Viá»t)\n    * 25hours_single\n        * low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/25hours_single/low/vi_VN-25hours_single-low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/25hours_single/low/vi_VN-25hours_single-low.onnx.json?download=true.json)]\n    * vais1000\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/vais1000/medium/vi_VN-vais1000-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/vais1000/medium/vi_VN-vais1000-medium.onnx.json?download=true.json)]\n    * vivos\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/vivos/x_low/vi_VN-vivos-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/vi/vi_VN/vivos/x_low/vi_VN-vivos-x_low.onnx.json?download=true.json)]\n* Chinese (`zh_CN`, ç®ä½ä¸­æ)\n    * huayan\n        * x_low - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/zh/zh_CN/huayan/x_low/zh_CN-huayan-x_low.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/zh/zh_CN/huayan/x_low/zh_CN-huayan-x_low.onnx.json?download=true.json)]\n        * medium - [[model](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/zh/zh_CN/huayan/medium/zh_CN-huayan-medium.onnx?download=true)] [[config](https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/zh/zh_CN/huayan/medium/zh_CN-huayan-medium.onnx.json?download=true.json)]\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}