{
  "metadata": {
    "timestamp": 1736566140849,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Oneflow-Inc/oneflow",
      "stars": 6573,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.736328125,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nBreakBeforeInheritanceComma: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories:\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    false\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.6484375,
          "content": "# `maybe-*` checks are only available on OneFlow custom clang-tidy and clangd\n# `-allow-enabling-analyzer-alpha-checkers` should be passed to clang-tidy for CSA checkers named `clang-analyzer-alpha.*` (or `-allow-enabling-alpha-checkers` for run-clang-tidy.py)\n# `aggressive-binary-operation-simplification` should be enabled (via `-Xclang -analyzer-config -Xclang aggressive-binary-operation-simplification=true` in clang)\n# there is some problem in `clang-analyzer-alpha.clone.*`, so do not enable it\n# `clang-analyzer-alpha.deadcode.*` is just too verbose to enable\nChecks: >-\n  -*,\n  clang-diagnostic-*,\n  maybe-*,\n  clang-analyzer-core.*,\n  clang-analyzer-cplusplus.*,\n  clang-analyzer-nullability.*,\n  clang-analyzer-deadcode.*,\n  clang-analyzer-security.*,\n  clang-analyzer-optin.cplusplus.*,\n  clang-analyzer-optin.performance.*,\n  clang-analyzer-alpha.core.*,\n  clang-analyzer-alpha.cplusplus.*,\n  clang-analyzer-alpha.security.*,\n  cppcoreguidelines-avoid-goto,\n  cppcoreguidelines-init-variables,\n  cppcoreguidelines-interfaces-global-init,\n  cppcoreguidelines-no-malloc,\n  cppcoreguidelines-prefer-member-initializer,\n  cppcoreguidelines-pro-type-member-init,\n  cppcoreguidelines-pro-type-static-cast-downcast,\n  cppcoreguidelines-slicing,\n  cppcoreguidelines-special-member-functions,\n  performance-unnecessary-value-param,\n  performance-unnecessary-copy-initialization,\n  performance-noexcept-move-constructor,\n  performance-no-automatic-move,\n  performance-move-const-arg,\n  performance-implicit-conversion-in-loop,\n  performance-for-range-copy,\n  google-default-arguments,\n  google-global-names-in-headers,\n  google-explicit-constructor,\n  modernize-use-emplace\n\n# TODO: treat all maybe warnings as errors when existing warnings are all fixed\n# `clang-analyzer-cplusplus.NewDelete` cannot model reference counting properly for ObjectMsg\nWarningsAsErrors: >-\n  maybe-unused,\n  clang-analyzer-nullability.*,\n  clang-analyzer-cplusplus.*,\n  performance-implicit-conversion-in-loop,\n  performance-move-const-arg,\n  performance-no-automatic-move,\n  performance-noexcept-move-constructor,\n  google-default-arguments,\n  google-global-names-in-headers,\n  -clang-analyzer-cplusplus.NewDelete,\n  modernize-use-emplace\n\nCheckOptions:\n  # `cppcoreguidelines-special-member-functions` is enabled, refer to https://en.cppreference.com/w/cpp/language/rule_of_three\n  - key:             cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor\n    value:           True\n  - key:             performance-move-const-arg.CheckTriviallyCopyableMove\n    value:           False\n  - key:             cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted\n    value:           True\n"
        },
        {
          "name": ".clangd",
          "type": "blob",
          "size": 0.533203125,
          "content": "# This .clangd configuration enables CUDA (nvcc) support.\n# NOTE: OneFlow's custom clangd NEED to be installed for \"CommandMatch\" and \"Replace\" to work.\n# or this configuration will not take any effect.\n# Download link: https://github.com/Oneflow-Inc/llvm-project/releases\nIf:\n  CommandMatch: ^[^ ]*/nvcc\nCompileFlags:\n  Remove: [--diag_suppress=*, --generate-code=*, -forward-unknown-to-host-compiler, -Xcompiler, -Xcudafe, --use_fast_math]\n  Replace: ['^([^ ]*)/bin/nvcc', 'clang++ --cuda-path=\\1', '-isystem=', '-isystem ', '-Xcompiler=', '']\n"
        },
        {
          "name": ".cmake-format.py",
          "type": "blob",
          "size": 13.4892578125,
          "content": "# ----------------------------------\n# Options affecting listfile parsing\n# ----------------------------------\nwith section(\"parse\"):\n\n    # Specify structure for custom cmake functions\n    additional_commands = {\n        \"cc_binary\": {\n            \"flags\": [\"ADD_RUNTARGET\"],\n            \"kwargs\": {\n                \"DEPS\": \"*\",\n                \"INC\": {\n                    \"kwargs\": {\"INTERFACE\": \"*\", \"PRIVATE\": \"*\", \"PUBLIC\": \"*\"},\n                    \"pargs\": 0,\n                },\n                \"LIBDIRS\": {\n                    \"kwargs\": {\"INTERFACE\": \"*\", \"PRIVATE\": \"*\", \"PUBLIC\": \"*\"},\n                    \"pargs\": \"*\",\n                },\n                \"PKGDEPS\": \"*\",\n                \"PROPERTIES\": {\"kwargs\": {\"EXPORT_NAME\": 1, \"OUTPUT_NAME\": 1}},\n                \"SRCS\": \"*\",\n            },\n            \"pargs\": \"1+\",\n        },\n        \"cc_library\": {\n            \"flags\": [\"STATIC\", \"SHARED\"],\n            \"kwargs\": {\n                \"DEPS\": {\n                    \"kwargs\": {\"INTERFACE\": \"*\", \"PRIVATE\": \"*\", \"PUBLIC\": \"*\"},\n                    \"pargs\": \"*\",\n                },\n                \"INC\": {\n                    \"kwargs\": {\"INTERFACE\": \"*\", \"PRIVATE\": \"*\", \"PUBLIC\": \"*\"},\n                    \"pargs\": 0,\n                },\n                \"LIBDIRS\": {\n                    \"kwargs\": {\"INTERFACE\": \"*\", \"PRIVATE\": \"*\", \"PUBLIC\": \"*\"},\n                    \"pargs\": \"*\",\n                },\n                \"PKGDEPS\": \"*\",\n                \"PROPERTIES\": {\n                    \"kwargs\": {\n                        \"ARCHIVE_OUTPUT_NAME\": 1,\n                        \"EXPORT_NAME\": 1,\n                        \"INTERFACE_INCLUDE_DIRECTORIES\": 1,\n                        \"LIBRARY_OUTPUT_NAME\": 1,\n                        \"OUTPUT_NAME\": 1,\n                        \"SOVERSION\": 1,\n                        \"SUFFIX\": 1,\n                        \"VERSION\": 1,\n                    }\n                },\n                \"SRCS\": \"*\",\n            },\n            \"pargs\": \"1+\",\n        },\n        \"cc_test\": {\n            \"kwargs\": {\n                \"ARGV\": \"*\",\n                \"DEPS\": \"*\",\n                \"LABELS\": \"*\",\n                \"PKGDEPS\": \"*\",\n                \"SRCS\": \"*\",\n                \"TEST_DEPS\": \"*\",\n                \"WORKING_DIRECTORY\": \"*\",\n            },\n            \"pargs\": 1,\n        },\n        \"check_call\": {\n            \"flags\": [\n                \"OUTPUT_QUIET\",\n                \"ERROR_QUIET\",\n                \"OUTPUT_STRIP_TRAILING_WHITESPACE\",\n                \"ERROR_STRIP_TRAILING_WHITESPACE\",\n            ],\n            \"kwargs\": {\n                \"COMMAND\": \"*\",\n                \"ENCODING\": \"1\",\n                \"ERROR_FILE\": \"1\",\n                \"ERROR_VARIABLE\": \"1\",\n                \"INPUT_FILE\": \"1\",\n                \"OUTPUT_FILE\": \"1\",\n                \"OUTPUT_VARIABLE\": \"1\",\n                \"RESULTS_VARIABLE\": \"1\",\n                \"RESULT_VARIABLE\": \"1\",\n                \"TIMEOUT\": \"1\",\n                \"WORKING_DIRECTORY\": \"1\",\n            },\n        },\n        \"check_pyoneline\": {\n            \"kwargs\": {\"ERROR_VARIABLE\": 1, \"OUTPUT_VARIABLE\": 1},\n            \"pargs\": \"+\",\n        },\n        \"create_debian_binary_packages\": {\n            \"kwargs\": {\"DEPS\": \"*\", \"OUTPUTS\": \"*\"},\n            \"pargs\": [3, \"+\"],\n        },\n        \"create_debian_depsrepo\": {\"pargs\": [3, \"+\"]},\n        \"create_debian_packages\": {\n            \"kwargs\": {\"DEPS\": \"*\", \"OUTPUTS\": \"*\"},\n            \"pargs\": [{\"flags\": [\"FORCE_PBUILDER\"], \"nargs\": \"+\"}],\n        },\n        \"debhelp\": {\"pargs\": [\"1+\"], \"spelling\": \"DEBHELP\"},\n        \"exportvars\": {\n            \"kwargs\": {\"VARS\": \"+\"},\n            \"pargs\": \"1+\",\n            \"spelling\": \"EXPORTVARS\",\n        },\n        \"format_and_lint\": {\n            \"kwargs\": {\"CC\": \"*\", \"CMAKE\": \"*\", \"JS\": \"*\", \"PY\": \"*\", \"SHELL\": \"*\"}\n        },\n        \"get_debs\": {\"pargs\": [3, \"*\"]},\n        \"gresource\": {\"kwargs\": {\"DEPENDS\": \"+\", \"SRCDIR\": 1}, \"pargs\": 2},\n        \"gtk_doc_add_module\": {\n            \"kwargs\": {\n                \"FIXREFOPTS\": \"*\",\n                \"IGNOREHEADERS\": \"*\",\n                \"LIBRARIES\": \"*\",\n                \"LIBRARY_DIRS\": \"*\",\n                \"SOURCE\": \"*\",\n                \"SUFFIXES\": \"*\",\n                \"XML\": 1,\n            },\n            \"pargs\": 1,\n        },\n        \"importvars\": {\n            \"kwargs\": {\"VARS\": \"+\"},\n            \"pargs\": \"1+\",\n            \"spelling\": \"IMPORTVARS\",\n        },\n        \"join\": {\"kwargs\": {\"GLUE\": 1}, \"pargs\": [1, \"+\"]},\n        \"pkg_find\": {\"kwargs\": {\"PKG\": \"*\"}},\n        \"stage_files\": {\n            \"kwargs\": {\"FILES\": \"*\", \"LIST\": 1, \"SOURCEDIR\": 1, \"STAGE\": 1}\n        },\n        \"tangent_addtest\": {\n            \"kwargs\": {\n                \"COMMAND\": \"+\",\n                \"CONFIGURATIONS\": \"+\",\n                \"DEPENDS\": \"+\",\n                \"LABELS\": \"+\",\n                \"NAME\": 1,\n                \"WORKING_DIRECTORY\": 1,\n            }\n        },\n        \"tangent_extract_svg\": {\"kwargs\": {\"EXPORT\": 1, \"OUTPUT\": 1, \"SRC\": 1}},\n        \"tangent_fetchobj\": {\"kwargs\": {\"OUTDIR\": 1}, \"pargs\": 2},\n        \"tangent_rmark_render\": {\n            \"kwargs\": {\"DEPENDS\": 1, \"FORMAT\": 1, \"OUTPUT\": 1, \"PAGENO\": 1, \"UUID\": 1},\n            \"pargs\": 1,\n        },\n        \"tangent_unzip\": {\n            \"kwargs\": {\"OUTPUT\": \"1+\", \"WORKING_DIRECTORY\": 1},\n            \"pargs\": \"1+\",\n        },\n        \"travis_decrypt\": {\"kwargs\": {}, \"pargs\": [3]},\n    }\n\n    # Override configurations per-command where available\n    override_spec = {}\n\n    # Specify variable tags.\n    vartags = []\n\n    # Specify property tags.\n    proptags = []\n\n# -----------------------------\n# Options affecting formatting.\n# -----------------------------\nwith section(\"format\"):\n\n    # Disable formatting entirely, making cmake-format a no-op\n    disable = False\n\n    # How wide to allow formatted cmake files\n    line_width = 100\n\n    # How many spaces to tab for indent\n    tab_size = 2\n\n    # If true, lines are indented using tab characters (utf-8 0x09) instead of\n    # <tab_size> space characters (utf-8 0x20). In cases where the layout would\n    # require a fractional tab character, the behavior of the  fractional\n    # indentation is governed by <fractional_tab_policy>\n    use_tabchars = False\n\n    # If <use_tabchars> is True, then the value of this variable indicates how\n    # fractional indentions are handled during whitespace replacement. If set to\n    # 'use-space', fractional indentation is left as spaces (utf-8 0x20). If set\n    # to `round-up` fractional indentation is replaced with a single tab character\n    # (utf-8 0x09) effectively shifting the column to the next tabstop\n    fractional_tab_policy = \"use-space\"\n\n    # If an argument group contains more than this many sub-groups (parg or kwarg\n    # groups) then force it to a vertical layout.\n    max_subgroups_hwrap = 3\n\n    # If a positional argument group contains more than this many arguments, then\n    # force it to a vertical layout.\n    max_pargs_hwrap = 6\n\n    # If a cmdline positional group consumes more than this many lines without\n    # nesting, then invalidate the layout (and nest)\n    max_rows_cmdline = 3\n\n    # If true, separate flow control names from their parentheses with a space\n    separate_ctrl_name_with_space = False\n\n    # If true, separate function names from parentheses with a space\n    separate_fn_name_with_space = False\n\n    # If a statement is wrapped to more than one line, than dangle the closing\n    # parenthesis on its own line.\n    dangle_parens = False\n\n    # If the trailing parenthesis must be 'dangled' on its on line, then align it\n    # to this reference: `prefix`: the start of the statement,  `prefix-indent`:\n    # the start of the statement, plus one indentation  level, `child`: align to\n    # the column of the arguments\n    dangle_align = \"prefix\"\n\n    # If the statement spelling length (including space and parenthesis) is\n    # smaller than this amount, then force reject nested layouts.\n    min_prefix_chars = 4\n\n    # If the statement spelling length (including space and parenthesis) is larger\n    # than the tab width by more than this amount, then force reject un-nested\n    # layouts.\n    max_prefix_chars = 10\n\n    # If a candidate layout is wrapped horizontally but it exceeds this many\n    # lines, then reject the layout.\n    max_lines_hwrap = 2\n\n    # What style line endings to use in the output.\n    line_ending = \"unix\"\n\n    # Format command names consistently as 'lower' or 'upper' case\n    command_case = \"canonical\"\n\n    # Format keywords consistently as 'lower' or 'upper' case\n    keyword_case = \"unchanged\"\n\n    # A list of command names which should always be wrapped\n    always_wrap = []\n\n    # If true, the argument lists which are known to be sortable will be sorted\n    # lexicographicall\n    enable_sort = True\n\n    # If true, the parsers may infer whether or not an argument list is sortable\n    # (without annotation).\n    autosort = False\n\n    # By default, if cmake-format cannot successfully fit everything into the\n    # desired linewidth it will apply the last, most agressive attempt that it\n    # made. If this flag is True, however, cmake-format will print error, exit\n    # with non-zero status code, and write-out nothing\n    require_valid_layout = False\n\n    # A dictionary mapping layout nodes to a list of wrap decisions. See the\n    # documentation for more information.\n    layout_passes = {}\n\n# ------------------------------------------------\n# Options affecting comment reflow and formatting.\n# ------------------------------------------------\nwith section(\"markup\"):\n\n    # What character to use for bulleted lists\n    bullet_char = \"*\"\n\n    # What character to use as punctuation after numerals in an enumerated list\n    enum_char = \".\"\n\n    # If comment markup is enabled, don't reflow the first comment block in each\n    # listfile. Use this to preserve formatting of your copyright/license\n    # statements.\n    first_comment_is_literal = False\n\n    # If comment markup is enabled, don't reflow any comment block which matches\n    # this (regex) pattern. Default is `None` (disabled).\n    literal_comment_pattern = None\n\n    # Regular expression to match preformat fences in comments default=\n    # ``r'^\\s*([`~]{3}[`~]*)(.*)$'``\n    fence_pattern = \"^\\\\s*([`~]{3}[`~]*)(.*)$\"\n\n    # Regular expression to match rulers in comments default=\n    # ``r'^\\s*[^\\w\\s]{3}.*[^\\w\\s]{3}$'``\n    ruler_pattern = \"^\\\\s*[^\\\\w\\\\s]{3}.*[^\\\\w\\\\s]{3}$\"\n\n    # If a comment line matches starts with this pattern then it is explicitly a\n    # trailing comment for the preceeding argument. Default is '#<'\n    explicit_trailing_pattern = \"#<\"\n\n    # If a comment line starts with at least this many consecutive hash\n    # characters, then don't lstrip() them off. This allows for lazy hash rulers\n    # where the first hash char is not separated by space\n    hashruler_min_length = 10\n\n    # If true, then insert a space between the first hash char and remaining hash\n    # chars in a hash ruler, and normalize its length to fill the column\n    canonicalize_hashrulers = True\n\n    # enable comment markup parsing and reflow\n    enable_markup = False\n\n# ----------------------------\n# Options affecting the linter\n# ----------------------------\nwith section(\"lint\"):\n\n    # a list of lint codes to disable\n    disabled_codes = [\"C0113\"]\n\n    # regular expression pattern describing valid function names\n    function_pattern = \"[0-9a-z_]+\"\n\n    # regular expression pattern describing valid macro names\n    macro_pattern = \"[0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with global\n    # (cache) scope\n    global_var_pattern = \"[A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with global\n    # scope (but internal semantic)\n    internal_var_pattern = \"_[A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for variables with local\n    # scope\n    local_var_pattern = \"[a-z][a-z0-9_]+\"\n\n    # regular expression pattern describing valid names for privatedirectory\n    # variables\n    private_var_pattern = \"_[0-9a-z_]+\"\n\n    # regular expression pattern describing valid names for public directory\n    # variables\n    public_var_pattern = \"[A-Z][0-9A-Z_]+\"\n\n    # regular expression pattern describing valid names for function/macro\n    # arguments and loop variables.\n    argument_var_pattern = \"[a-z][a-z0-9_]+\"\n\n    # regular expression pattern describing valid names for keywords used in\n    # functions or macros\n    keyword_pattern = \"[A-Z][0-9A-Z_]+\"\n\n    # In the heuristic for C0201, how many conditionals to match within a loop in\n    # before considering the loop a parser.\n    max_conditionals_custom_parser = 2\n\n    # Require at least this many newlines between statements\n    min_statement_spacing = 1\n\n    # Require no more than this many newlines between statements\n    max_statement_spacing = 2\n    max_returns = 6\n    max_branches = 12\n    max_arguments = 5\n    max_localvars = 15\n    max_statements = 50\n\n# -------------------------------\n# Options affecting file encoding\n# -------------------------------\nwith section(\"encode\"):\n\n    # If true, emit the unicode byte-order mark (BOM) at the start of the file\n    emit_byteorder_mark = False\n\n    # Specify the encoding of the input file. Defaults to utf-8\n    input_encoding = \"utf-8\"\n\n    # Specify the encoding of the output file. Defaults to utf-8. Note that cmake\n    # only claims to support utf-8 so be careful when using anything else\n    output_encoding = \"utf-8\"\n\n# -------------------------------------\n# Miscellaneous configurations options.\n# -------------------------------------\nwith section(\"misc\"):\n\n    # A dictionary containing any per-command configuration overrides. Currently\n    # only `command_case` is supported.\n    per_command = {}\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.39453125,
          "content": "**/.git\n/build\n/build-*\n/docs/build\n/cmake-build-*\n/third_party\n/examples/**/oneflow\n/benchmark/**/oneflow\n/.vscode\n/.idea\n/.clangd\n/dist\n/wheelhouse*\n/.DS_Store\n/tmp_wheel\n/manylinux*\n\n**/__pycache__\n**/*.pyc\n**/log\n**/.ipynb_checkpoints\n**/core.0*\n**/core.1*\n**/core.2*\n**/core.3*\n**/core.4*\n**/core.5*\n**/core.6*\n**/core.7*\n**/core.8*\n**/core.9*\n/.cache\n/oneflow-src.zip\n/distributed-tmp\n/serving-tmp\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.736328125,
          "content": "/build\n/build-*\n/docs/build/\n/docs/build-cn/\n/docs/source/generated\n/cmake-build-*\n/dist\n/third_party/\n/examples/**/oneflow\n/benchmark/**/oneflow\nlog/\n*plan\ncore.*\n*.pyc\n*.ipynb\n/.vscode\n/.idea\n/manylinux*\nwheelhouse/\nwheelhouse*\n.DS_Store\n/tmp_wheel\n/oneflow/python/__export_symbols__.py\n/oneflow/python/compatibility.py\n/oneflow/python/framework/sysconfig_gen.py\n/oneflow/python/test/ops/localhost_script_*.sh\n.clangd\ncompile_commands.json\n.cache\n/oneflow-src.zip\n/oneflow_temp\n/distributed-tmp\n/serving-tmp\ntest_tmp_dir\nunittest-log-*\n/oneflow/python\n/oneflow/compatible_single_client_python\n/benchmarks\n/oneflow/python/version.py\n/data-test\n/tmp\n/python/oneflow/test/dataloader/data-test/\n\n/target\nsaved_model\n/devcontainer-cache\n\nop_prof.csv\n*.lock\n"
        },
        {
          "name": ".lsan-suppressions",
          "type": "blob",
          "size": 0.013671875,
          "content": "leak:CommandT\n"
        },
        {
          "name": ".mergify.yml",
          "type": "blob",
          "size": 0.501953125,
          "content": "pull_request_rules:\n  - name: automatic update for PR with label “automerge“\n    conditions:\n      - \"#approved-reviews-by>=2\"\n      - -conflict # skip conflicts\n      - -draft # skip draft PRs\n      - label=\"automerge\"\n    actions:\n      update:\n  - name: automatic merge\n    conditions:\n      - \"#approved-reviews-by>=2\"\n      - -conflict # skip conflicts\n      - -draft # skip draft PRs\n      - label=\"automerge\"\n      - \"#commits-behind==0\"\n      - -closed\n    actions:\n      merge:\n        method: squash\n"
        },
        {
          "name": ".tsan-suppressions",
          "type": "blob",
          "size": 0.396484375,
          "content": "# These four group of functions are designed to be thread unsafe,\n# it's user's responsibility to use them correctly.\nrace:ThreadUnsafe\nrace:thread_unsafe\nrace:flying_instruction_cnt\nrace:total_erased_instruction_cnt\nrace:ToShape\n# glog\nrace:google::\n# ~basic_string() in DenseElementsAttrToTensor interferes with\n# ~~AccessBlobArgCbInstructionPolicy(). Perhaps it's a false\n# positive.\nrace:~basic_string\n"
        },
        {
          "name": ".ubsan-suppressions",
          "type": "blob",
          "size": 0.021484375,
          "content": "# llvm\nvptr:Class.cpp\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.5791015625,
          "content": "# Minimum CMake required\nset(CMAKE_POLICY_DEFAULT_CMP0135 NEW)\ncmake_minimum_required(VERSION 3.18.0)\n\nset(CMAKE_INSTALL_MESSAGE LAZY CACHE STRING \"\")\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE BOOL \"\")\n\noption(THIRD_PARTY \"Build third party\" ON)\noption(ONEFLOW \"Build oneflow\" ON)\n\nif(NOT THIRD_PARTY AND NOT ONEFLOW)\n  message(FATAL_ERROR \"at least one of flags THIRD_PARTY and ONEFLOW should be ON\")\nendif()\n\noption(USE_CLANG_FORMAT \"\" OFF)\noption(USE_CLANG_TIDY \"\" OFF)\noption(BUILD_PYTHON \"\" ON)\noption(BUILD_CPP_API \"Option to build OneFlow C++ API (beta)\" OFF)\noption(BUILD_RDMA \"\" OFF)\noption(BUILD_CUDA \"\" ON)\noption(BUILD_TESTING \"\" OFF)\noption(BUILD_GIT_VERSION \"\" ON)\noption(BUILD_PROFILER \"\" OFF)\noption(BUILD_FOR_CI \"\" OFF)\noption(WITH_COCOAPI \"Option to build with COCO API\" ON)\noption(WITH_ZLIB \"\" ON)\noption(WITH_ONEDNN \"\" ON)\noption(WITH_MLIR \"\" OFF)\noption(WITH_MLIR_CUDA_CODEGEN \"\" OFF)\noption(OF_SOFTMAX_USE_FAST_MATH \"\" ON)\noption(OF_LAYER_NORM_USE_FAST_MATH \"\" ON)\noption(TREAT_WARNINGS_AS_ERRORS \"\" ON)\noption(MAYBE_NEED_ERROR_MSG_CHECK \"\" OFF)\n\noption(LITE_USE_ASCEND_NPU \"\" OFF)\n\n# Reference:\n# https://medium.com/@alasher/colored-c-compiler-output-with-ninja-clang-gcc-10bfe7f2b949\noption(OF_FORCE_COLORED_DIAGNOSTICS \"Always produce ANSI-colored diagnostics (GNU/Clang only).\" ON)\n\nset(ONEFLOW_CURRENT_VERSION 0.8.1.dev CACHE STRING \"\")\n\nif(BUILD_FOR_CI)\n  set(ONEFLOW_CURRENT_VERSION ci)\nendif()\n\nset(LLVM_PROVIDER \"in-tree\" CACHE STRING \"in-tree, install\")\n\nif(NOT WITH_MLIR)\n  set(LLVM_PROVIDER \"install\"\n      CACHE STRING \"in-tree will build LLVM's ALL, not what we want when not building MLIR\" FORCE)\nendif(NOT WITH_MLIR)\n\nset(RPC_BACKEND \"GRPC,LOCAL\" CACHE STRING \"\")\nset(THIRD_PARTY_MIRROR \"\" CACHE STRING \"\")\nset(PIP_INDEX_MIRROR \"\" CACHE STRING \"\")\nset(CPU_THREADING_RUNTIMES \"TBB;OMP\" CACHE STRING \"\")\n\nif(APPLE)\n  set(RPC_BACKEND \"LOCAL\")\n  set(BUILD_CUDA OFF)\n  set(WITH_COCOAPI OFF)\n  set(WITH_ONEDNN OFF)\nendif()\n\nset(CUDNN_STATIC OFF CACHE BOOL \"\")\n\nproject(oneflow C CXX)\n\nif(NOT CMAKE_BUILD_TYPE)\n  message(STATUS \"No build type selected, default to Release\")\n  set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Build type (default Release)\" FORCE)\nendif()\n\nif(NOT CMAKE_BUILD_TYPE MATCHES \"^(Debug|Release|RelWithDebInfo|MinSizeRel)$\")\n  message(\n    FATAL_ERROR\n      \"Expected CMAKE_BUILD_TYPE is Debug, Release, RelWithDebInfo or MinSizeRel, got ${CMAKE_BUILD_TYPE}\"\n  )\nendif()\n\nmessage(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\n\nset(COMPILER_VERSION_ERROR_MSG\n    \"At least gcc 9, clang 5 or Apple clang 12 is supported. Current version ${CMAKE_CXX_COMPILER_VERSION}.\"\n)\n\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n  if(\"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS 9)\n    message(FATAL_ERROR ${COMPILER_VERSION_ERROR_MSG})\n  endif()\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n  if(\"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS 5)\n    message(FATAL_ERROR ${COMPILER_VERSION_ERROR_MSG})\n  endif()\nelseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n  if(\"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS 12)\n    message(FATAL_ERROR ${COMPILER_VERSION_ERROR_MSG})\n  endif()\nelse()\n  message(WARNING \"Unknown compiler \\\"${CMAKE_CXX_COMPILER_ID}\\\".\")\nendif()\n\nset(oneflow_cmake_dir ${PROJECT_SOURCE_DIR}/cmake)\n\nget_filename_component(real_src_dir \"${CMAKE_SOURCE_DIR}\" REALPATH)\nget_filename_component(real_bin_dir \"${CMAKE_BINARY_DIR}\" REALPATH)\n\nif(\"${real_src_dir}\" STREQUAL \"${real_bin_dir}\")\n  message(FATAL_ERROR \"In-source build not allowed\")\nendif()\n\n# Modules\nlist(APPEND CMAKE_MODULE_PATH ${oneflow_cmake_dir}/third_party)\nlist(APPEND CMAKE_MODULE_PATH ${oneflow_cmake_dir})\n\ninclude(threading)\ninclude(util)\ninclude(proto2cpp)\n\nif(NOT DEFINED USE_CXX11_ABI)\n  check_cxx11_abi(CXX11_ABI_AVAILABLE)\n  set(USE_CXX11_ABI ${CXX11_ABI_AVAILABLE})\nelseif(USE_CXX11_ABI)\n  check_cxx11_abi(CXX11_ABI_AVAILABLE)\n\n  if(NOT CXX11_ABI_AVAILABLE)\n    message(FATAL_ERROR \"cxx11 abi is not available for current compiler\")\n  endif()\nendif()\n\nmessage(STATUS \"USE_CXX11_ABI: ${USE_CXX11_ABI}\")\n\nif(WITH_MLIR)\n  add_definitions(-DWITH_MLIR)\n\n  if(WITH_MLIR_CUDA_CODEGEN)\n    add_definitions(-DWITH_MLIR_CUDA_CODEGEN)\n  endif()\nendif()\n\nif(WITH_COCOAPI)\n  add_definitions(-DWITH_COCOAPI)\nendif()\n\nif(USE_CXX11_ABI)\n  add_definitions(-D_GLIBCXX_USE_CXX11_ABI=1)\nelse()\n  add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)\nendif()\n\nif(BUILD_PROFILER)\n  add_definitions(-DOF_ENABLE_PROFILER)\nendif()\n\nif(OF_SOFTMAX_USE_FAST_MATH)\n  add_definitions(-DOF_SOFTMAX_USE_FAST_MATH)\nendif()\n\nif(OF_LAYER_NORM_USE_FAST_MATH)\n  add_definitions(-DOF_LAYER_NORM_USE_FAST_MATH)\nendif()\n\nif(OF_FORCE_COLORED_DIAGNOSTICS)\n  add_compile_options(\n    $<$<COMPILE_LANGUAGE:CXX>:$<$<CXX_COMPILER_ID:GNU>:-fdiagnostics-color=always>>\n    $<$<COMPILE_LANGUAGE:CXX>:$<$<CXX_COMPILER_ID:Clang>:-fcolor-diagnostics>>\n    $<$<COMPILE_LANGUAGE:CUDA>:$<$<CUDA_COMPILER_ID:Clang>:-fcolor-diagnostics>>)\nendif()\n\nif(RPC_BACKEND MATCHES \"GRPC\")\n  add_definitions(-DRPC_BACKEND_GRPC)\n  message(STATUS \"RPC backend enabled: gRPC\")\n  set(SUPPORTED_RPC_BACKEND_FOUND 1)\nendif()\n\nif(WITH_ONEDNN)\n  add_definitions(-DWITH_ONEDNN)\nendif()\n\nadd_definitions(-DRPC_BACKEND_LOCAL)\nmessage(STATUS \"RPC backend enabled: local\")\nenable_testing()\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\nset(THIRD_PARTY_DIR \"${PROJECT_BINARY_DIR}/third_party_install\"\n    CACHE PATH \"Where to install third party headers and libs\")\n\nset(ONEFLOW_PYTHON_DIR \"${PROJECT_SOURCE_DIR}/python\" CACHE PATH \"oneflow python src dir\")\n\ninclude(platform)\n\nif((ENABLE_ASAN OR ENABLE_UBSAN) AND ENABLE_TSAN)\n  message(FATAL_ERROR \"Only ASAN and UBSAN can be enabled at the same time.\")\nendif()\nif(ENABLE_ASAN)\n  add_compile_options(-fsanitize=address -fno-omit-frame-pointer)\n  add_link_options(-fsanitize=address -fno-omit-frame-pointer)\nendif()\nif(ENABLE_UBSAN)\n  add_compile_options(-fsanitize=undefined)\n  add_link_options(-fsanitize=undefined)\nendif()\nif(ENABLE_TSAN)\n  add_compile_options(-fsanitize=thread)\n  add_link_options(-fsanitize=thread)\nendif()\n\nif(BUILD_PYTHON)\n  set(ONEFLOW_INCLUDE_DIR \"${ONEFLOW_PYTHON_DIR}/oneflow/include\")\nendif(BUILD_PYTHON)\n\nset(CUTLASS_URL\n    https://github.com/Oneflow-Inc/cutlass/archive/e6f548d80bfdf1167d66adbbbcfc2ee3394f4777.zip)\nuse_mirror(VARIABLE CUTLASS_URL URL ${CUTLASS_URL})\nset(CUTLASS_MD5 425f8cf064ff47c81124e55490135f5c)\n\ninclude(cuda)\nadd_subdirectory(external)\ninclude(third_party)\n\nmessage(STATUS \"CMAKE_CXX_COMPILER_VERSION: \" ${CMAKE_CXX_COMPILER_VERSION})\n\nadd_custom_target(oneflow_deps ALL DEPENDS prepare_oneflow_third_party)\n\n# skip oneflow cmake to avoid errors caused by the absences of python-dev, proto src\nif(ONEFLOW)\n  include(oneflow)\nendif()\n\nadd_subdirectory(ci)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.146484375,
          "content": "Copyright 2020 The OneFlow Authors. All rights reserved.\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.21875,
          "content": "# OneFlow\n\nOneFlow is a deep learning framework designed to be **user-friendly, scalable and efficient**. With OneFlow, it is easy to:\n\n- program a model with [**PyTorch-like API**](https://oneflow.readthedocs.io/en/master/)\n- scale a model to n-dimensional-parallel execution with the [**Global Tensor**](https://docs.oneflow.org/en/master/cookies/global_tensor.html)\n- accelerate/deploy a model with the [**Graph Compiler**](https://oneflow.readthedocs.io/en/master/graph.html).\n\n[![Simple CI](https://github.com/Oneflow-Inc/oneflow/actions/workflows/simple.yml/badge.svg)](https://github.com/Oneflow-Inc/oneflow/actions/workflows/simple.yml)\n[![Nightly Docker Image](https://github.com/Oneflow-Inc/docker-images/actions/workflows/oneflow-nightly.yml/badge.svg)](https://github.com/Oneflow-Inc/docker-images/actions/workflows/oneflow-nightly.yml)\n[![Nightly Release](https://github.com/Oneflow-Inc/oneflow/actions/workflows/release.yml/badge.svg)](https://github.com/Oneflow-Inc/oneflow/actions/workflows/release.yml)\n[![Documentation](https://readthedocs.org/projects/oneflow/badge/?version=master)](https://oneflow.readthedocs.io/en/master/?badge=master)\n\n## Latest News\n\n- Version 1.0.0 is out!\n  - [Full changelog](https://github.com/Oneflow-Inc/oneflow/releases/tag/v1.0.0)\n\n## Publication\n\n- [OneFlow: Redesign the Distributed Deep Learning Framework from Scratch](https://arxiv.org/abs/2110.15032)\n\n## System Requirements\n\n### General\n- Linux\n- Python 3.7, 3.8, 3.9, 3.10, 3.11\n\n### CUDA\n- CUDA arch 60 or above\n- CUDA Toolkit version 10.0 or above\n- Nvidia driver version 440.33 or above\n\n  OneFlow will work on a minimum supported driver, and any driver beyond. For more information, please refer to [CUDA compatibility documentation](https://docs.nvidia.com/deploy/cuda-compatibility/index.html).\n\n## Install\n\n### Preinstall docker image\n\n```\ndocker pull oneflowinc/oneflow:nightly-cuda11.8\n```\n\n### Pip Install\n\n- (**Highly recommended**) Upgrade pip\n\n  ```\n  python3 -m pip install --upgrade pip #--user\n  ```\n\n- To install latest stable release of OneFlow with CUDA support:\n\n  ```bash\n  python3 -m pip install oneflow\n  ```\n\n- To install nightly release of OneFlow with CPU-only support:\n\n  ```bash\n  python3 -m pip install --pre oneflow -f https://oneflow-staging.oss-cn-beijing.aliyuncs.com/branch/master/cpu\n  ```\n\n- To install nightly release of OneFlow with CUDA support:\n\n  ```bash\n  python3 -m pip install --pre oneflow -f https://oneflow-staging.oss-cn-beijing.aliyuncs.com/branch/master/cu118\n  ```\n\n  If you are in China, you could run this to have pip download packages from domestic mirror of pypi:\n  ```\n  python3 -m pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n  ```\n  For more information on this, please refer to [pypi 镜像使用帮助](https://mirror.tuna.tsinghua.edu.cn/help/pypi/)\n\n### Install from Source\n\n<details>\n<summary>Clone Source Code</summary>\n\n- #### Option 1: Clone source code from GitHub\n\n  ```bash\n  git clone https://github.com/Oneflow-Inc/oneflow.git\n  ```\n\n- #### Option 2: Download from Aliyun(Only available in China)\n\n  ```bash\n  curl https://oneflow-public.oss-cn-beijing.aliyuncs.com/oneflow-src.zip -o oneflow-src.zip\n  unzip oneflow-src.zip\n  ```\n\n  </details>\n\n<details>\n<summary>Build OneFlow</summary>\n\n- Install dependencies\n  ```\n  apt install -y libopenblas-dev nasm g++ gcc python3-pip cmake autoconf libtool\n  ```\n  These dependencies are preinstalled in offical conda environment and docker image, you can use the offical conda environment [here](https://github.com/Oneflow-Inc/conda-env) or use the docker image by:\n  ```bash\n  docker pull oneflowinc/manylinux2014_x86_64_cuda11.2\n  ```\n- In the root directory of OneFlow source code, run:\n\n  ```\n  mkdir build\n  cd build\n  ```\n\n- Config the project, inside `build` directory:\n\n  - If you are in China\n\n    config for CPU-only like this:\n\n    ```\n    cmake .. -C ../cmake/caches/cn/cpu.cmake\n    ```\n\n    config for CUDA like this:\n\n    ```\n    cmake .. -C ../cmake/caches/cn/cuda.cmake -DCMAKE_CUDA_ARCHITECTURES=80 -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DCUDNN_ROOT_DIR=/usr/local/cudnn\n    ```\n\n  - If you are not in China\n\n    config for CPU-only like this:\n\n    ```\n    cmake .. -C ../cmake/caches/international/cpu.cmake\n    ```\n\n    config for CUDA like this:\n\n    ```\n    cmake .. -C ../cmake/caches/international/cuda.cmake -DCMAKE_CUDA_ARCHITECTURES=80 -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DCUDNN_ROOT_DIR=/usr/local/cudnn\n    ```\n    Here the DCMAKE\\_CUDA\\_ARCHITECTURES macro is used to specify the CUDA architecture, and the DCUDA\\_TOOLKIT\\_ROOT\\_DIR and DCUDNN\\_ROOT\\_DIR macros are used to specify the root path of the CUDA Toolkit and CUDNN.\n\n- Build the project, inside `build` directory, run:\n\n  ```\n  make -j$(nproc)\n  ```\n\n- Add oneflow to your PYTHONPATH, inside `build` directory, run:\n\n  ```\n  source source.sh\n  ```\n\n  Please note that this change is not permanent.\n\n- Simple validation\n\n  ```\n  python3 -m oneflow --doctor\n  ```\n\n  </details>\n\n### Troubleshooting\n\nPlease refer to [troubleshooting](docs/source/troubleshooting.md) for common issues you might encounter when compiling and running OneFlow.\n\n## Getting Started\n\n- Please refer to [QUICKSTART](https://docs.oneflow.org/en/master/basics/01_quickstart.html)\n- 中文版请参见 [快速上手](https://docs.oneflow.org/master/basics/01_quickstart.html)\n\n## Documentation\n\n- [API Reference](https://oneflow.readthedocs.io/en/master/)\n- [Usage & Design Docs](http://docs.oneflow.org/)\n- [System Design](https://docs.oneflow.org/en/v0.4.0/basics_topics/essentials_of_oneflow.html)\n\n## Model Zoo and Benchmark\n\n- [Libai(Toolbox for Parallel Training Large-Scale Transformer Models)](https://github.com/Oneflow-Inc/libai)\n  - [BERT-large](https://libai.readthedocs.io/en/latest/tutorials/get_started/quick_run.html)\n  - [GPT](https://libai.readthedocs.io/en/latest/modules/libai.models.html#id5)\n  - [T5](https://libai.readthedocs.io/en/latest/modules/libai.models.html#id4)\n  - [VisionTransformer](https://libai.readthedocs.io/en/latest/modules/libai.models.html#id1)\n  - [SwinTransformer](https://libai.readthedocs.io/en/latest/modules/libai.models.html#id2)\n- [FlowVision(Toolbox for Computer Vision Datasets, SOTA Models and Utils)](https://github.com/Oneflow-Inc/vision)\n- [OneFlow-Models(Outdated)](https://github.com/Oneflow-Inc/models)\n  - [ResNet-50](https://github.com/Oneflow-Inc/models/tree/main/Vision/classification/image/resnet50)\n  - [Wide&Deep](https://github.com/Oneflow-Inc/models/tree/main/RecommenderSystems/wide_and_deep)\n- [OneFlow-Benchmark(Outdated)](https://github.com/Oneflow-Inc/OneFlow-Benchmark)\n\n## Communication\n\n- [GitHub issues](https://github.com/Oneflow-Inc/oneflow/issues): any install, bug, feature issues.\n- [www.oneflow.org](http://www.oneflow.org): brand related information.\n\n- ### 中文\n\n  - QQ 群: 331883\n  - 微信号（加好友入交流群）: OneFlowXZS\n  - [知乎](https://www.zhihu.com/org/oneflow-17)\n\n- ### International\n  - [Discord](https://discord.gg/4kpjGA5bZY)\n  - [Twitter](https://twitter.com/OneFlowNews)\n  - [LinkedIn](https://www.linkedin.com/company/oneflow-inc)\n  - [Medium](https://oneflow2020.medium.com)\n\n## The Team\n\nOneFlow was originally developed by [OneFlow Inc](http://www.oneflow.org) and [Zhejiang Lab](http://www.zhejianglab.com/).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.5361328125,
          "content": "black==19.10b0; python_version >= \"3.6\"\nclick==8.0.0; python_version >= \"3.6\" # https://github.com/psf/black/issues/2964\nnumpy>=1.21.6, <2.0\nprotobuf>=3.9.2, <4.0\nwheel\ntqdm\nrequests\njinja2\nopencv-python; python_version >= \"3.9\" and sys_platform != 'darwin' and platform_machine != 'aarch64'\nopencv-python==4.2.0.34; python_version < '3.9' and sys_platform != 'darwin' and platform_machine != 'aarch64'\nPyYAML>=5.1\npillow\ndataclasses; python_version<\"3.7\"\ncmakelang==0.6.13\npytest-xdist\npytest-repeat\nrich\nportalocker\ntyping-extensions>=4.0.0, <5.0\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "oneflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}