{
  "metadata": {
    "timestamp": 1736566228682,
    "page": 242,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LibreSprite/LibreSprite",
      "stars": 5262,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.11328125,
          "content": "* text=auto\n\n*.c text eol=lf\n*.cpp text eol=lf\n*.h text eol=lf\n*.md text eol=lf\n*.txt text eol=lf\n*.xml text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1845703125,
          "content": "*.a\n*.o\n*.lib\n*.obj\n*.pdb\n*.dll\n*.ilk\n*.suo\n*.exe\n*.exe.manifest\n*.log\n*.res\n*.vs\n\n# CMake output\nbuild\n\n# Snap related\n/parts\n/prime\n/stage\n/*.snap\n/snap/.snapcraft/\n/.cache/\n*~\n/android/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.4677734375,
          "content": "[submodule \"third_party/simpleini\"]\n\tpath = third_party/simpleini\n\turl = https://github.com/aseprite/simpleini.git\n[submodule \"third_party/duktape\"]\n\tpath = third_party/duktape\n\turl = https://github.com/libresprite/duktape.git\n[submodule \"src/flic\"]\n\tpath = src/flic\n\turl = https://github.com/aseprite/flic.git\n[submodule \"src/clip\"]\n\tpath = src/clip\n\turl = https://github.com/aseprite/clip.git\n[submodule \"src/undo\"]\n\tpath = src/undo\n\turl = https://github.com/aseprite/undo.git\n"
        },
        {
          "name": ".snapcraft.yaml",
          "type": "blob",
          "size": 1.103515625,
          "content": "name: libresprite\nversion: '1.0+git' # just for humans, typically '1.2+git' or '1.3.2'\nsummary: Animated sprite editor & pixel art tool\ndescription: |\n  LibreSprite is a free and open source program to create animated sprites.\n  It is a fork of the last GPLv2 commit of Aseprite.\nicon: prime/share/aseprite/data/icons/ase48.png\n\ngrade: stable\nconfinement: strict\n\napps:\n  libresprite:\n    command: bin/aseprite\n    desktop: src/desktop/libresprite.desktop\n    plugs:\n      - home\n      - unity7\n      - x11\n\nparts:\n  libresprite:\n    source: https://github.com/LibreSprite/LibreSprite.git\n    plugin: cmake\n    build-packages:\n      - build-essential\n      - libx11-dev\n      - libxcursor-dev\n      - ninja-build\n    stage-packages:\n      - libx11-6\n      - libxrender1\n      - libxfixes3\n      - libxcursor1\n    override-stage: |\n      snapcraftctl stage\n      # Copy the .desktop over.\n      mkdir -p \"${SNAPCRAFT_PRIME}/src/desktop/\"\n      cp \"${SNAPCRAFT_PART_SRC}/desktop/libresprite.desktop\" \"${SNAPCRAFT_PRIME}/src/desktop/\"\n      sed -i 's|Icon=libresprite|Icon=icon|' \"${SNAPCRAFT_PRIME}/src/desktop/libresprite.desktop\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.4580078125,
          "content": "# Aseprite     | Copyright (C) 2001-2016  David Capello\n# LibreSprite  | Copyright (C)      2022  LibreSprite contributors\n\ncmake_minimum_required(VERSION 3.4)\n\nenable_testing()\n\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING\n      \"Choose the type of build, options are:\n        None Debug Release RelWithDebInfo Profile.\"\n      FORCE)\nendif()\n\n# Restrict configuration types to the selected build type.\n# Note: This needs to be done before the project command\nset(CMAKE_CONFIGURATION_TYPES \"${CMAKE_BUILD_TYPE}\" CACHE INTERNAL \"internal\")\n\n# LibreSprite project\nproject(libresprite C CXX)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\n# This required for KDE/Qt destop integration, which sets BUILD_SHARED_LIBS to\n# TRUE by default\nset(BUILD_SHARED_LIBS off)\n\n######################################################################\n# Options (these can be specified in cmake command line or modifying\n# CMakeCache.txt)\n\noption(WITH_WEBP_SUPPORT            \"Enable support to load/save .webp files\" off)\noption(WITH_GTK_FILE_DIALOG_SUPPORT \"Enable support for the experimental native GTK File Dialog\" off)\noption(WITH_DEPRECATED_GLIB_SUPPORT \"Enable support for older glib versions\" off)\noption(WITH_DESKTOP_INTEGRATION     \"Enable desktop integration modules\" off)\noption(WITH_QT_THUMBNAILER          \"Enable kde5/qt5 thumnailer\" off)\n\noption(ENABLE_MEMLEAK     \"Enable memory-leaks detector (only for developers)\" off)\noption(ENABLE_TESTS       \"Enable the unit tests\" off)\noption(FULLSCREEN_PLATFORM \"Enable fullscreen by default\" off)\n\noption(USE_SDL2_BACKEND \"Use SDL2 backend\" on)\noption(USE_V8_SANDBOX \"Use V8 Sandbox\" off)\n\n######################################################################\n# Profile build type\n\nlist(APPEND CMAKE_BUILD_TYPES Profile)\nmark_as_advanced(\n    CMAKE_C_FLAGS_PROFILE\n    CMAKE_CXX_FLAGS_PROFILE\n    CMAKE_EXE_LINKER_FLAGS_PROFILE)\n\nif(CMAKE_COMPILER_IS_GNUCC)\n    set(CMAKE_C_FLAGS_PROFILE \"-pg\"\n        CACHE STRING \"Profiling C flags\")\n    set(CMAKE_CXX_FLAGS_PROFILE \"${CMAKE_C_FLAGS_PROFILE}\"\n        CACHE STRING \"Profiling C++ flags\")\n    set(CMAKE_EXE_LINKER_FLAGS_PROFILE \"-pg\"\n        CACHE STRING \"Profiling linker flags\")\nendif()\n\nif(MSVC)\n    set(CMAKE_C_FLAGS_PROFILE \"/MD /Zi /Ox /Gd\"\n        CACHE STRING \"Profiling C flags\")\n    set(CMAKE_CXX_FLAGS_PROFILE \"${CMAKE_C_FLAGS_PROFILE}\"\n        CACHE STRING \"Profiling C++ flags\")\n    set(CMAKE_EXE_LINKER_FLAGS_PROFILE \"/PROFILE /DEBUG\"\n        CACHE STRING \"Profiling linker flags\")\nendif()\n\n######################################################################\n# Directories\n\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\")\n# We need to specify the output for each configuration to make it work\n# on Visual Studio solutions.\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}/bin\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}/bin\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}/bin\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_PROFILE \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_PROFILE \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_PROFILE \"${CMAKE_BINARY_DIR}/bin\")\n\nset(EASYTAB_DIR         ${CMAKE_SOURCE_DIR}/third_party/EasyTab)\nset(LOADPNG_DIR         ${CMAKE_SOURCE_DIR}/third_party/loadpng)\nset(SIMPLEINI_DIR       ${CMAKE_SOURCE_DIR}/third_party/simpleini)\nset(DUKTAPE_DIR         ${CMAKE_SOURCE_DIR}/third_party/duktape)\nset(MODP_B64_DIR        ${CMAKE_SOURCE_DIR}/third_party/modp_b64)\nset(QOI_DIR             ${CMAKE_SOURCE_DIR}/third_party/qoi)\n\n# Search in the \"cmake\" directory for additional CMake modules.\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n\n# Put libraries into \"lib\".\nset(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)\n\n######################################################################\n# Common definitions to compile all sources (app code and third party)\n\n# Debug C/C++ flags\nif(CMAKE_BUILD_TYPE STREQUAL Debug)\n  add_definitions(-DDEBUGMODE -D_DEBUG)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O0 -g\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O0 -g\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -O0 -g\")\nelse()\n  add_definitions(-DNDEBUG)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O3\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O3\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -O3\")\nendif()\n\n# Fix to compile gtest with VC11 (2012)\nif(MSVC_VERSION EQUAL 1700)\n  add_definitions(-D_VARIADIC_MAX=10)\nendif()\n\nif(NOT WIN32 AND NOT APPLE AND CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=gnu89\")\nendif()\n\nif(APPLE)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\nendif()\n\n# qoi\ninclude_directories(${QOI_DIR})\n\n# tinyxml2\nfind_library(TINYXML2_LIBRARY NAMES tinyxml2)\nfind_path(TINYXML2_INCLUDE_DIR NAMES tinyxml2.h)\ninclude_directories(${TINYXML2_INCLUDE_DIR})\n\nif(NOT GEN_ONLY)\n# zlib\nfind_package(ZLIB REQUIRED)\ninclude_directories(${ZLIB_INCLUDE_DIRS})\n\n# libArchive\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    # Homebrew ships libarchive keg only, include dirs have to be set manually\n    execute_process(\n        COMMAND brew --prefix libarchive\n        OUTPUT_VARIABLE LIBARCHIVE_PREFIX\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        COMMAND_ERROR_IS_FATAL ANY\n    )\n    set(LibArchive_INCLUDE_DIR \"${LIBARCHIVE_PREFIX}/include\")\nendif()\nfind_package(LibArchive REQUIRED)\ninclude_directories(${LibArchive_INCLUDE_DIR})\n\n# libpng\nfind_package(PNG REQUIRED)\ninclude_directories(${PNG_INCLUDE_DIRS})\n\n# libwebp\nfind_package(WEBP QUIET)\nif(WEBP_FOUND)\n  message(STATUS \"Enabling WEBP support\")\n  include_directories(${WEBP_INCLUDE_DIR})\nelse()\n  find_package(PkgConfig)\n  if (PkgConfig_FOUND)\n    pkg_search_module(WEBP libwebp)\n    if (WEBP_FOUND)\n      message(STATUS \"Enabling WEBP support\")\n      include_directories(${WEBP_INCLUDE_DIRS})\n      set(WEB_LIBRARIES ${WEBP_LDFLAGS})\n    endif()\n  endif()\nendif()\n\n# pixman\nfind_library(PIXMAN_LIBRARY NAMES pixman pixman-1)\nfind_path(PIXMAN_INCLUDE_DIR NAMES pixman.h PATH_SUFFIXES pixman-1)\ninclude_directories(${PIXMAN_INCLUDE_DIR})\n\n# freetype\nfind_package(Freetype REQUIRED)\ninclude_directories(${FREETYPE_INCLUDE_DIRS})\n\nfind_package(GIF REQUIRED)\ninclude_directories(${GIF_INCLUDE_DIRS})\n\nfind_package(JPEG REQUIRED)\ninclude_directories(${JPEG_INCLUDE_DIRS})\n\n# v8\nfind_package(V8 QUIET)\nif(V8_FOUND)\n  include_directories(${V8_INCLUDE_DIR})\n  add_definitions(-DSCRIPT_ENGINE_V8=1)\n\n  include(CheckCXXSourceRuns)\n  set(CMAKE_REQUIRED_LIBRARIES ${V8_LIBRARY} ${V8_LIBBASE_LIBRARY} ${V8_LIBPLATFORM_LIBRARY})\n  set(CMAKE_REQUIRED_INCLUDES ${V8_INCLUDE_DIR})\n  message(STATUS ${V8_POINTER_COMPRESSION_OUTPUT})\n  # Since V8_COMPRESS_POINTERS is not defined here, the resulting program would\n  # die if the system v8 library had enabled pointer compression.\n  check_cxx_source_runs(\"\n    #include <v8.h>\n    #include <libplatform/libplatform.h>\n    int main(void) {\n      v8::V8::InitializeICU();\n      static std::unique_ptr<v8::Platform> m_platform;\n      m_platform = v8::platform::NewDefaultPlatform();\n      v8::V8::InitializePlatform(m_platform.get());\n      v8::V8::Initialize();\n      return 0;\n    }\n\t\" DISABLE_POINTER_COMPRESSION)\n\n  # pointers compression doesn't work on 32bit machines\n  if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n    if(DISABLE_POINTER_COMPRESSION EQUAL 1)\n      message(STATUS \"Disabling V8 pointer compression\")\n    else()\n      message(STATUS \"Enabling V8 pointer compression\")\n      add_definitions(-DV8_COMPRESS_POINTERS)\n    endif()\n  endif()\n\n  if (USE_V8_SANDBOX)\n    add_definitions(-DV8_ENABLE_SANDBOX)\n  endif()\n\n  message(STATUS \"Optional V8 library found. Enabling V8 scripting engine.\")\nelse()\n  message(STATUS \"Optional V8 library NOT found. Disabling V8 scripting engine.\")\nendif()\n\n\nfind_package(CURL REQUIRED)\ninclude_directories(${CURL_INCLUDE_DIRS})\nendif()\n# simpleini\ninclude_directories(${SIMPLEINI_DIR})\n\n######################################################################\n# Platform specific stuff\n\nset(PLATFORM_LIBS)\n\n# SDL2 backend\nif(USE_SDL2_BACKEND)\n  add_definitions(-DUSE_SDL2_BACKEND)\n\n  find_package(SDL2 REQUIRED)\n  include_directories(${SDL2_INCLUDE_DIRS})\n  find_package(SDL2_IMAGE REQUIRED)\n  include_directories(${SDL2_IMAGE_INCLUDE_DIRS})\nendif()\n\n# -- Unix --\n\nif(UNIX AND NOT APPLE AND NOT BEOS AND NOT GEN_ONLY)\n  # Pthreads\n  find_package(Threads REQUIRED)\n  list(APPEND PLATFORM_LIBS m ${CMAKE_THREAD_LIBS_INIT})\n\n  # X11\n  find_package(X11 REQUIRED)\n  include_directories(SYSTEM ${X11_INCLUDE_DIR})\n  list(APPEND PLATFORM_LIBS ${X11_LIBRARIES})\n\n  if(X11_XShm_FOUND)\n    list(APPEND PLATFORM_LIBS ${X11_Xext_LIB})\n  endif()\n\n  if(X11_Xcursor_FOUND)\n    list(APPEND PLATFORM_LIBS ${X11_Xcursor_LIB})\n  endif()\n\n  if(X11_Xpm_FOUND)\n    list(APPEND PLATFORM_LIBS ${X11_Xpm_LIB})\n  endif()\n\n  find_library(X11_Xxf86vm_LIB Xxf86vm ${X11_LIB_SEARCH_PATH})\n  mark_as_advanced(X11_Xxf86vm_LIB)\n  if(X11_xf86vmode_FOUND)\n    list(APPEND PLATFORM_LIBS ${X11_Xxf86vm_LIB})\n  endif()\n\n  check_library_exists(X11 XOpenIM \"${X11_LIB_SEARCH_PATH}\" XIM_FOUND)\n  check_library_exists(Xxf86dga XDGAQueryExtension\n    \"${X11_LIB_SEARCH_PATH}\" XDGA_FOUND)\n\n  if(XDGA_FOUND)\n    list(APPEND PLATFORM_LIBS Xxf86dga ${X11_LIBRARIES})\n  endif()\n\n  if(X11_Xi_FOUND)\n    list(APPEND PLATFORM_LIBS ${X11_Xi_LIB})\n  endif()\n\n  if(WITH_GTK_FILE_DIALOG_SUPPORT)\n    find_package(PkgConfig REQUIRED)\n    pkg_check_modules(GTKMM gtkmm-3.0)\n    include_directories(${GTKMM_INCLUDE_DIRS})\n    link_directories(${GTKMM_LIBRARY_DIRS})\n  endif()\nendif()\n\n# -- Windows --\n\nif(WIN32)\n  list(APPEND PLATFORM_LIBS\n    kernel32 user32 gdi32 comdlg32 ole32 winmm\n    shlwapi psapi wininet comctl32 dbghelp)\n\n  # Windows XP is the minimum supported platform.\n  add_definitions(-D_WIN32_WINNT=0x0501 -DWINVER=0x0501)\n\n  # We need Unicode support\n  add_definitions(-DUNICODE -D_UNICODE)\nendif(WIN32)\n\n# -- Mac OS X --\n\nif(APPLE)\n  find_library(COCOA_LIBRARY Cocoa)\n  find_library(CARBON_LIBRARY Carbon)\n  find_library(IOKIT_LIBRARY IOKit)\n  mark_as_advanced(COCOA_LIBRARY CARBON_LIBRARY IOKIT_LIBRARY)\n\n  list(APPEND PLATFORM_LIBS\n    ${COCOA_LIBRARY}\n    ${CARBON_LIBRARY}\n    ${IOKIT_LIBRARY})\n\n    # Hack to deal with Mac OS X 10.6.  NSQuickDrawView is not defined by\n    # NSQuickDrawView.h when compiling in 64-bit mode, and 64-bit mode is the\n    # default when compiling on Snow Leopard.\n    if(${CMAKE_SYSTEM_PROCESSOR} STREQUAL i386)\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -arch i386\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -arch i386\")\n    endif()\n\n    # The Mac port simply uses too many deprecated things.\n    if(COMPILER_GCC)\n        set(WFLAGS \"${WFLAGS} -Wno-deprecated-declarations\")\n    endif(COMPILER_GCC)\nendif(APPLE)\n\nif(WITH_DESKTOP_INTEGRATION)\n  add_subdirectory(desktop)\nendif()\n\n######################################################################\n# Main ASE targets\n\nadd_subdirectory(src)\n\n######################################################################\n# Third party libraries\n\nadd_subdirectory(third_party)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.6943359375,
          "content": "# Contributing\n\n## Code\nContributing code is very easy to do once you get the hang of it. We use GitHub for our online repository and issue tracker, so you'll need an account first. After you've done that and are comfortable with how the platform and git itself works, read on.\n\n### Set Up Your Repository\n1. Fork [LibreSprite](https://github.com/LibreSprite/LibreSprite) so you have a personal repository to push to.\n2. Clone your personal repository with `git clone --recursive https://github.com/YOUR-USERNAME/LibreSprite`. Remember to change the URL to your repository's. The `--recursive` is used to download the third party libraries for building.\n3. Move into the directory, on Linux this is done with `cd LibreSprite`.\n4. Follow the [instructions](INSTALL.md) to create a build and make sure your local copy is working.\n5. Add an upstream remote so you can get other developer's updates with `git remote add upstream https://github.com/LibreSprite/LibreSprite`.\n\n### Updating Your Repository\nThese instructions will update both your local repository and online fork.\n1. `git fetch upstream` Will download any new changes from the official LibreSprite repository.\n2. `git checkout master` Will switch to your master branch.\n3. `git merge upstream/master` Will merge or fast-forward your local master branch so it contains all the updates.\n4. `git push origin master` Will update your online repository's master branch, it's a good idea to keep it up to date.\n\n### Making Changes\nTo make a contribution you will need to make a feature branch. This greatly simplifies adding your code to the official repository, and it ensures the master branch is always working. As a heads up, it's best to let us know what you're working on by commenting on or creating an [issue](https://github.com/LibreSprite/LibreSprite/issues), this way we all save time by working on different things.\n1. Call `git checkout master`, always make sure you are on master before making a feature branch.\n2. Call `git checkout -b name-of-your-feature` This will create a feature branch and switch to it. Try to be specific in your feature name, this helps track it down in the future if we need to.\n3. Make a meaningful change, you don't want to implement the whole feature in one shot generally. Try to break your task into meaningful (and revertible) chunks, though sometimes one chunk is all it takes like with small bug fixes.\n4. To create a commit, start by verifying with `git status` that only files you wanted to change are effected. If there are unexpected changes, please resolve them before continuing.\n5. Stage all of your changes with `git add -A`.\n6. Create your commit with `git commit -m \"Type a precise description of only the changes made with this commit.\"` Try to describe the changes like it's a change log (hint, it is). Messages like \"Convert 'bool' members in ui::Widget to flags\" are what we're after.\n7. Repeat steps 2-5 until the feature is complete.\n\n### Pushing Changes\nYou are ready for your contribution to be reviewed and merged. There are a few things you can do to make this easier for maintainers to review your code, so please follow all steps.\n1. Follow the instructions for Updating Your Repository.\n2. Switch back to your feature branch with `git checkout name-of-your-feature`.\n3. Rebase your branch with `git rebase master`, this will make sure there are no conflicts with other people's contributions.\n4. Rebuild your project to make sure everything still works. If things are now broken, resolve them, making commits along the way. Once resolved, return to step 1 as more changes could have been made in the meantime.\n5. Push your branch to your online fork with `git push origin name-of-your-feature`.\n6. On GitHub, create a pull request for your feature branch.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 1.6689453125,
          "content": "# Contributors to LibreSprite\n* Add your name here!\n\n## Shout-outs\nLibreSprite includes color palettes created by:\n* [Richard \"DawnBringer\" Fhager](http://pixeljoint.com/p/23821.htm) palettes, [16 colors](http://pixeljoint.com/forum/forum_posts.asp?TID=12795),  [32 colors](http://pixeljoint.com/forum/forum_posts.asp?TID=16247).\n* [Arne Niklas Jansson](http://androidarts.com/) palettes, [16 colors](http://androidarts.com/palette/16pal.htm), [32 colors](http://wayofthepixel.net/index.php?topic=15824.msg144494).\n\nIt tries to replicate some pixel-art algorithms:\n* [RotSprite](http://forums.sonicretro.org/index.php?showtopic=8848&st=15&p=159754&#entry159754) by Xenowhirl.\n* [Pixel perfect drawing algorithm](http://deepnight.net/pixel-perfect-drawing/) by [Sébastien Bénard](https://twitter.com/deepnightfr) and [Carduus](https://twitter.com/CarduusHimself/status/420554200737935361).\n\nAnd it uses the following third-party libraries:\n\n* [curl](http://curl.haxx.se/) (curl)\n* [duktape](https://duktape.org) (MIT)\n* [freetype](https://www.freetype.org) (FTL)\n* [giflib](http://giflib.sourceforge.net) (MIT)\n* [gtest](https://github.com/google/googletest) (BSD-3-Clause)\n* [libjpeg](http://libjpeg.sourceforge.net) (IJG)\n* [libpng](http://www.libpng.org) (Libpng)\n* [libwebp](https://developers.google.com/speed/webp) (BSD-3-Clause)\n* [libx11](https://xorg.freedesktop.org) (XFree86)\n* [libxcursor](https://xorg.freedesktop.org) (MIT)\n* loadpng (Zlib)\n* modp\\_b64 (BSD)\n* [pixman](http://www.pixman.org) (MIT)\n* [sdl2](https://www.libsdl.org) (Zlib)\n* [simpleini](https://github.com/aseprite/simpleini) (MIT)\n* [tinyxml](http://www.grinninglizard.com/tinyxml) (Zlib)\n* [zlib](https://www.zlib.net) (Zlib)\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 3.736328125,
          "content": "# Installation\n\n## Table of contents\n\n* [Platforms](#platforms)\n* [Get the source code](#get-the-source-code)\n* [Dependencies](#dependencies)\n  * [Linux dependencies](#linux-dependencies)\n  * [Windows dependencies](#windows-dependencies)\n  * [MacOS dependencies](#macos-dependencies)\n* [Compiling](#compiling)\n  * [Linux details](#linux-details)\n  * [Windows details](#windows-details)\n  * [MacOS details](#macos-details)\n* [Installing](#installing)\n\n## Platforms\n\nYou can download installers from the [website](https://libresprite.github.io/).\nIf you want to compile LibreSprite from source, continue reading.\n\nYou should be able to compile LibreSprite on the following platforms:\n\n* Windows 10 + VS2015 Community Edition + Windows 10 SDK\n* Mac OS X 11.0 Big Sur + Xcode 7.3 + OS X 11.0 SDK\n* Linux + GCC 8.5 or higher with C++14 support\n\nTo compile LibreSprite you will need:\n\n* [CMake](http://www.cmake.org/) (3.4 or greater)\n* [Ninja](https://ninja-build.org)\n* [Msys2](https://www.msys2.org/) (Windows only)\n\n## Get the source code\n\nClone the repository and its submodules using the following command:\n\n    git clone --recursive https://github.com/LibreSprite/LibreSprite\n\n(You can use [Git for Windows](https://git-for-windows.github.io/) to\nclone the repository on Windows.)\n\nTo update an existing clone, use the following commands:\n\n    cd LibreSprite\n    git pull\n    git submodule update --init --recursive\n\n## Dependencies\n\nYou'll need the following dependencies to compile LibreSprite:\n\n### Linux dependencies\n\nDebian/Ubuntu:\n\n    sudo apt-get install cmake g++ libcurl4-gnutls-dev libfreetype6-dev libgif-dev libgtest-dev libjpeg-dev libpixman-1-dev libpng-dev libsdl2-dev libsdl2-image-dev libtinyxml2-dev libnode-dev ninja-build zlib1g-dev libarchive-dev\n\nFedora:\n\n    sudo dnf install g++ cmake libcurl-devel freetype-devel giflib-devel gtest-devel libjpeg-devel pixman-devel libpng-devel SDL2-devel SDL2_image-devel tinyxml2-devel zlib-devel ninja-build nodejs-devel libarchive-devel\n\n### Windows dependencies\n\nTo install the required dependencies with msys2, run the following in mingw32:\n\n    pacman -S base-devel mingw-w64-i686-gcc mingw-w64-i686-cmake mingw-w64-i686-make mingw-w64-i686-curl mingw-w64-i686-freetype mingw-w64-i686-giflib mingw-w64-i686-libjpeg-turbo mingw-w64-i686-libpng mingw-w64-i686-libwebp mingw-w64-i686-pixman mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_image mingw-w64-i686-tinyxml2 mingw-w64-i686-v8 mingw-w64-i686-zlib mingw-w64-i686-libarchive\n\n### MacOS dependencies\n\nOn MacOS you will need Mac OS X 11.0 SDK and the corresponding Xcode.\nIn a terminal, install the dependencies using brew:\n\n    brew install gnutls freetype jpeg googletest pixman sdl2 sdl2_image tinyxml2 libarchive ninja zlib xmlto dylibbundler\n\n## Compiling\n\nFirst, create the `build` directory with the following commands:\n\n    cd LibreSprite\n    mkdir build\n    cd build\n\nThen following the platform-specific instructions for compiling below.\n\nThe `build` directory will contain the results of the compilation process.\nIf you want to build a fresh copy of LibreSprite, remove the `build` directory\nand recompile.\n\n### Linux details\n\nTo compile LibreSprite, run the following commands:\n\n    cmake -G Ninja ..\n    ninja libresprite\n\n### Windows details\n\nRun the following in mingw32.exe:\n\n    cmake -G Ninja ..\n\n### MacOS details\n\nTo compile LibreSprite, run the following commands:\n\n    cmake \\\n      -DCMAKE_OSX_ARCHITECTURES=x86_64 \\\n      -DCMAKE_OSX_DEPLOYMENT_TARGET=10.7 \\\n      -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk \\\n      -G Ninja \\\n      ..\n    ninja libresprite\n\n## Installing\n\nOnce you've finished compiling, you can install LibreSprite by running the\nfollowing command from the `build` directory:\n\n    ninja install\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1474609375,
          "content": "# LibreSprite [![Liberapay](https://i.imgur.com/UOLKpPA.png \"Support our work\")](https://liberapay.com/LibreSprite/)\n[![Linux](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeLinux.yml/badge.svg)](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeLinux.yml) [![Windows x64](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeWin64.yml/badge.svg?branch=master)](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeWin64.yml) [![MacOS](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeMacOs.yml/badge.svg)](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeMacOs.yml) [![Android](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeAndroid.yml/badge.svg)](https://github.com/LibreSprite/LibreSprite/actions/workflows/cmakeAndroid.yml)\n\n## Introduction\nLibreSprite is a free and open source program for creating and animating your sprites.\n* Real-time animation previews.\n* Onion skinning.\n* Multiple sprites can be edited at once.\n* Ready to use palettes, or make your own.\n* Sprites are composed of both layers & frames.\n* Tiled drawing mode, useful to draw patterns and textures.\n* Pixel precise tools like filled contour, polygon, shading mode, etc.\n* Several file types supported for your sprites and animations.\n\n## Download\nGet the [latest release](https://github.com/LibreSprite/LibreSprite/releases/latest) for Linux, MacOS, Windows or Android.\n\n## History\nLibreSprite originated as a fork of [Aseprite](https://www.aseprite.org), developed by [David Capello](https://github.com/dacap). Aseprite used to be distributed under the GNU General Public License version 2, but was moved to a proprietary license on [August 26th, 2016](https://github.com/aseprite/aseprite/commit/5ecc356a41c8e29977f8608d8826489d24f5fa6c).\n\nThis fork was made on the [last commit](https://github.com/aseprite/aseprite/commit/03be4aa23db465219962f4c62410f628e7392545) covered by the GPL version 2 license, and is now developed independently of Aseprite.\n\n## Contributing\nAs LibreSprite has a newly budding community, we need help building the infrastructure of our development, support, and news networks. If you would like to help, please make yourself known at our [Discord](https://discord.gg/95gbyU5) or [Matrix](https://matrix.to/#/%23libresprite:matrix.org), and checkout our guide on [contributing](CONTRIBUTING.md).\n\n## Compiling\nDon't worry, it isn't as hard as you might think! Just follow the instructions [here](INSTALL.md).\n\n## Theming\nDon't like the default look of Libresprite? Don't panic, you can download from the Libresprite [resources](https://libresprite.github.io/#!/resources) repo. \n\n## License\nThis program is distributed under the [GNU General Public License Version 2](LICENSE.txt).\n\n## Credits\nAn ***enormous*** thank you to the original developers of [Aseprite](https://www.aseprite.org), without them and their original licensing this project wouldn’t exist. Additional shout-outs are given in the [list of contributors](CONTRIBUTORS.md). If you have submitted work to LibreSprite and would like to have your name on the list, please create a pull request or get in touch and we’ll make it happen.\n"
        },
        {
          "name": "SCRIPTING.md",
          "type": "blob",
          "size": 35.587890625,
          "content": "# [class Sprite]\n## Properties:\n   - `palette`: read-only. Returns the sprite's palette.\n   - `selection`: Placeholder. Do not use.\n   - `height`: read+write. Returns and sets the height of the sprite.\n   - `width`: read+write. Returns and sets the width of the sprite.\n   - `filename`: read-only. Returns the file name of the sprite.\n   - `colorMode`: read-only. Returns the sprite's ColorMode.\n   - `layerCount`: read-only. Returns the amount of layers in the sprite.\n\n## Methods:\n   - `loadPalette(fileName)`:\n     - fileName: The name of the palette file to load\n      returns: Nothing\n      loads a palette file.\n\n   - `crop(x, y, width, height)`:\n     - x: The left-most edge of the crop.\n     - y: The top-most edge of the crop.\n     - width: The width of the cropped area.\n     - height: The height of the cropped area.\n      returns: Nothing\n      crops the sprite to the specified dimensions.\n\n   - `saveAs(fileName, asCopy)`:\n     - fileName: String. The new name of the file\n     - asCopy: If true, the file is saved as a copy. Requires fileName to be specified.\n      returns: Nothing\n      saves the sprite.\n\n   - `resize(width, height)`:\n     - width: The new width.\n     - height: The new height.\n      returns: Nothing\n      resizes the sprite.\n\n   - `save()`:\n      returns: Nothing\n      saves the sprite.\n\n   - `commit()`:\n      returns: Nothing\n      commits the current transaction.\n\n   - `layer(layerNumber)`:\n     - layerNumber: The number of they layer, starting with zero from the bottom.\n      returns: a Layer object or null if invalid.\n      allows you to access a given layer.\n\n\n\n# global storage [class Storage]\n## No Properties.\n\n## Methods:\n   - `decodeBase64()`:\n      returns: Nothing\n\n   - `get()`:\n      returns: Nothing\n\n   - `save()`:\n      returns: Nothing\n\n   - `set()`:\n      returns: Nothing\n\n   - `fetch()`:\n      returns: Nothing\n\n   - `load()`:\n      returns: Nothing\n\n   - `unload()`:\n      returns: Nothing\n\n\n\n# [class PalettelistboxWidget]\n## Properties:\n   - `selected`:\n   - `id`:\n\n## Methods:\n   - `addPalette()`:\n      returns: Nothing\n\n\n\n# [class pixelColor]\n## No Properties.\n\n## Methods:\n   - `grayaA(color)`:\n     - color: A 32-bit color in 888 RGBA format\n      returns: The alpha component of the color\n      Extracts the alpha (opacity) from a 32-bit color\n\n   - `grayaV(color)`:\n     - color: A 32-bit color in 888 RGBA format\n      returns: The luminance Value of the color\n      Extracts the luminance from a 32-bit color\n\n   - `rgbaA(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The alpha component of the color\n      Extracts the alpha channel from a 32-bit color\n\n   - `graya(gray, alpha)`:\n     - gray: The luminance of color\n     - alpha: The alpha (opacity) of the color)\n      returns: The color with the given luminance/opacity\n\n   - `rgba(r, g, b, a)`:\n     - r: red, 0-255.\n     - g: green, 0-255.\n     - b: blue, 0-255.\n     - a: alpha (opacity), 0-255.\n      returns: A 32-bit color in 8888 RGBA format.\n      Converts R, G, B, A values into a single 32-bit RGBA color.\n\n   - `rgbaG(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The green component of the color\n      Extracts the green channel from a 32-bit color\n\n   - `rgbaB(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The blue component of the color\n      Extracts the blue channel from a 32-bit color\n\n   - `rgbaR(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The red component of the color\n      Extracts the red channel from a 32-bit color\n\n\n\n# [class LabelWidget]\n## Properties:\n   - `text`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Layer]\n## Properties: \n   - `flags`: read-only. Returns all flags OR'd together as an int\n   - `isContinuous`: read-only. Prefer to link cels when the user copies them.\n   - `celCount`: read-only. Returns the number of cels.\n   - `isMovable`: read-only. Returns true if the layer is movable.\n   - `isVisible`: read+write. Gets/sets whether the layer is visible or not.\n   - `isTransparent`: read-only. Returns true if the layer is a non-background image layer.\n   - `isBackground`: read-only. Returns true if the layer is a background layer.\n   - `isImage`: read-only. Returns true if the layer is an image, false if it is a folder.\n   - `isEditable`: read+write. Gets/sets whether the layer is editable (unlocked) or not (locked).\n   - `name`: read+write. The name of the layer.\n\n## Methods:\n   - `cel(index)`:\n     - index: The number of the Cel\n      returns: A Cel object or null if an invalid index is passed\n      retrieves a Cel\n\n\n\n# [class IntentryWidget]\n## Properties:\n   - `value`:\n   - `min`:\n   - `max`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Image]\n## Properties:\n   - `format`: read-only. The PixelFormat of the image.\n   - `stride`: read-only. The number of bytes per image row.\n   - `height`: read-only. The height of the image.\n   - `width`: read-only. The width of the image.\n\n## Methods:\n   - `putPixel(x, y, color)`:\n     - x: integer\n     - y: integer\n     - color: a 32-bit color in 8888 RGBA format.\n      returns: Nothing\n      writes the color onto the image at the the given coordinate.\n\n   - `getImageData()`:\n      returns: All pixels in a Uint8Array\n      creates an array containing all of the image's pixels.\n\n   - `putImageData(data)`:\n     - data: All of the pixels in the image.\n      returns: Nothing\n      writes the given pixels onto the image. Must be the same size as the image.\n\n   - `getPNGData()`:\n      returns: The image as a Base64-encoded PNG string.\n      Encodes the image as a PNG.\n\n   - `clear(color)`:\n     - color: a 32-bit color in 8888 RGBA format.\n      returns: Nothing\n      clears the image with the specified color.\n\n   - `getPixel(x, y)`:\n     - x: integer\n     - y: integer\n      returns: a color value\n      reads a color from the given coordinate of the image.\n\n\n\n# [class PN2ui6DialogE]\n## Properties:\n   - `canClose`: write only. Determines if the user can close the dialog window.\n   - `title`: read+write. Sets the title of the dialog window.\n   - `id`:\n\n## Methods:\n   - `addBreak()`:\n      returns: Nothing\n\n   - `addPaletteListBox()`:\n      returns: Nothing\n\n   - `addEntry()`:\n      returns: Nothing\n\n   - `addButton()`:\n      returns: Nothing\n\n   - `add()`:\n      returns: Nothing\n\n   - `close()`:\n      returns: Nothing\n\n   - `addLabel()`:\n      returns: Nothing\n\n   - `addDropDown()`:\n      returns: Nothing\n\n   - `addIntEntry()`:\n      returns: Nothing\n\n   - `get()`:\n      returns: Nothing\n\n\n\n# global console [class Console]\n## No Properties.\n\n## Methods:\n   - `assert()`:\n      returns: Nothing\n\n   - `log()`:\n      returns: Nothing\n\n\n\n# [class ButtonWidget]\n## Properties:\n   - `text`:\n   - `id`:\n\n## No Methods.\n\n\n# [class command]\n## No Properties.\n\n## Methods:\n   - `Zoom()`:\n      returns: Nothing\n      Zoom in\n\n   - `ToggleFullscreen()`:\n      returns: Nothing\n      Toggle Fullscreen\n\n   - `Timeline()`:\n      returns: Nothing\n      Switch Timeline\n\n   - `TiledMode()`:\n      returns: Nothing\n      Tiled Mode\n\n   - `SymmetryMode()`:\n      returns: Nothing\n      Symmetry Mode\n\n   - `SpriteSize()`:\n      returns: Nothing\n      Sprite Size\n\n   - `SnapToGrid()`:\n      returns: Nothing\n      Snap to Grid\n\n   - `ShowLayerEdges()`:\n      returns: Nothing\n      Show Layer Edges\n\n   - `TogglePreview()`:\n      returns: Nothing\n      Toggle Preview\n\n   - `ShowGrid()`:\n      returns: Nothing\n      Show Grid\n\n   - `ShowExtras()`:\n      returns: Nothing\n      Show Extras\n\n   - `ShowBrushPreview()`:\n      returns: Nothing\n      Show Brush Preview\n\n   - `Share()`:\n      returns: Nothing\n      Share\n\n   - `SetSameInk()`:\n      returns: Nothing\n      Same Ink in All Tools\n\n   - `SetInkType()`:\n      returns: Nothing\n      Set Ink Type: Simple Ink\n\n   - `SetColorSelector()`:\n      returns: Nothing\n      Set Color Selector: Color Spectrum\n\n   - `SelectionAsGrid()`:\n      returns: Nothing\n      Selection as Grid\n\n   - `SelectTile()`:\n      returns: Nothing\n      Select Tile\n\n   - `Scroll()`:\n      returns: Nothing\n      Scroll 0 pixels left\n\n   - `SavePalette()`:\n      returns: Nothing\n      Save Palette\n\n   - `SaveFileCopyAs()`:\n      returns: Nothing\n      Save File Copy As\n\n   - `SaveFileAs()`:\n      returns: Nothing\n      Save File As\n\n   - `SaveFile()`:\n      returns: Nothing\n      Save File\n\n   - `SetLoopSection()`:\n      returns: Nothing\n      Set Loop Section\n\n   - `RunScript()`:\n      returns: Nothing\n      Run Script\n\n   - `ReverseFrames()`:\n      returns: Nothing\n      Reverse Frames\n\n   - `ReselectMask()`:\n      returns: Nothing\n      Reselect Mask\n\n   - `RescanScripts()`:\n      returns: Nothing\n      Rescan Scripts\n\n   - `ReplaceColor()`:\n      returns: Nothing\n      Replace Color\n\n   - `RepeatLastExport()`:\n      returns: Nothing\n      Repeat Last Export\n\n   - `PlayAnimation()`:\n      returns: Nothing\n      Play Animation\n\n   - `PixelPerfectMode()`:\n      returns: Nothing\n      Switch Pixel Perfect Mode\n\n   - `Options()`:\n      returns: Nothing\n      Options\n\n   - `OpenFile()`:\n      returns: Nothing\n      Open Sprite\n\n   - `NewSpriteFromSelection()`:\n      returns: Nothing\n      New Sprite From Selection\n\n   - `MaskByColor()`:\n      returns: Nothing\n      Mask By Color\n\n   - `NewFrameTag()`:\n      returns: Nothing\n      New Frame Tag\n\n   - `NewFile()`:\n      returns: Nothing\n      New File\n\n   - `UndoHistory()`:\n      returns: Nothing\n      Undo History\n\n   - `GotoNextLayer()`:\n      returns: Nothing\n      Go to Next Layer\n\n   - `NewBrush()`:\n      returns: Nothing\n      New Brush\n\n   - `OpenInFolder()`:\n      returns: Nothing\n      Open In Folder\n\n   - `ClearCel()`:\n      returns: Nothing\n      Clear Cel\n\n   - `MoveMask()`:\n      returns: Nothing\n      Move Selection Boundaries 0 pixels left\n\n   - `FrameTagProperties()`:\n      returns: Nothing\n      Frame Tag Properties\n\n   - `AddColor()`:\n      returns: Nothing\n      Add Foreground Color to Palette\n\n   - `MoveCel()`:\n      returns: Nothing\n      Move Cel\n\n   - `MergeDownLayer()`:\n      returns: Nothing\n      Merge Down Layer\n\n   - `MaskAll()`:\n      returns: Nothing\n      Mask All\n\n   - `SaveMask()`:\n      returns: Nothing\n      Save Mask\n\n   - `LoadMask()`:\n      returns: Nothing\n      LoadMask\n\n   - `LayerProperties()`:\n      returns: Nothing\n      Layer Properties\n\n   - `LayerFromBackground()`:\n      returns: Nothing\n      Layer From Background\n\n   - `SetPaletteEntrySize()`:\n      returns: Nothing\n      Set Palette Entry Size\n\n   - `Launch()`:\n      returns: Nothing\n      Launch\n\n   - `KeyboardShortcuts()`:\n      returns: Nothing\n      Keyboard Shortcuts\n\n   - `InvertMask()`:\n      returns: Nothing\n      Invert Mask\n\n   - `InvertColor()`:\n      returns: Nothing\n      Invert Color\n\n   - `GridSettings()`:\n      returns: Nothing\n      Grid Settings\n\n   - `GotoPreviousTab()`:\n      returns: Nothing\n      Go to Previous tab\n\n   - `ScrollCenter()`:\n      returns: Nothing\n      Scroll to center of canvas\n\n   - `GotoPreviousLayer()`:\n      returns: Nothing\n      Go to Previous Layer\n\n   - `GotoPreviousFrameWithSameTag()`:\n      returns: Nothing\n      Go to Previous Frame with same tag\n\n   - `GotoPreviousFrame()`:\n      returns: Nothing\n      Go to Previous Frame\n\n   - `GotoNextTab()`:\n      returns: Nothing\n      Go to Next Tab\n\n   - `AutocropSprite()`:\n      returns: Nothing\n      Trim Sprite\n\n   - `ImportSpriteSheet()`:\n      returns: Nothing\n      Import Sprite Sheet\n\n   - `ShowPixelGrid()`:\n      returns: Nothing\n      Show Pixel Grid\n\n   - `Home()`:\n      returns: Nothing\n      Home\n\n   - `UnlinkCel()`:\n      returns: Nothing\n      Unlink Cel\n\n   - `GotoNextFrameWithSameTag()`:\n      returns: Nothing\n      Go to Next Frame with same tag\n\n   - `CropSprite()`:\n      returns: Nothing\n      Crop Sprite\n\n   - `GotoLastFrame()`:\n      returns: Nothing\n      Go to Last Frame\n\n   - `OpenWithApp()`:\n      returns: Nothing\n      Open With Associated Application\n\n   - `GotoFirstFrame()`:\n      returns: Nothing\n      Go to First Frame\n\n   - `RemoveFrameTag()`:\n      returns: Nothing\n      Remove Frame Tag\n\n   - `NewFrame()`:\n      returns: Nothing\n      New Frame\n\n   - `FullscreenPreview()`:\n      returns: Nothing\n      Fullscreen Preview\n\n   - `SpriteProperties()`:\n      returns: Nothing\n      Sprite Properties\n\n   - `NewLayer()`:\n      returns: Nothing\n      New Layer\n\n   - `FrameProperties()`:\n      returns: Nothing\n      Frame Properties\n\n   - `DeselectMask()`:\n      returns: Nothing\n      Deselect Mask\n\n   - `AlternateTouchbar()`:\n      returns: Nothing\n      Alternate Touchbar\n\n   - `ExportSpriteSheet()`:\n      returns: Nothing\n      Export Sprite Sheet\n\n   - `NewLayerSet()`:\n      returns: Nothing\n      New Layer Set\n\n   - `ModifySelection()`:\n      returns: Nothing\n      Expand Selection\n\n   - `Paste()`:\n      returns: Nothing\n      Paste\n\n   - `DiscardBrush()`:\n      returns: Nothing\n      Discard Brush\n\n   - `BackgroundFromLayer()`:\n      returns: Nothing\n      BackgroundFromLayer\n\n   - `DuplicateView()`:\n      returns: Nothing\n      Duplicate View\n\n   - `About()`:\n      returns: Nothing\n      About\n\n   - `DeveloperConsole()`:\n      returns: Nothing\n      Developer Console\n\n   - `DuplicateSprite()`:\n      returns: Nothing\n      Duplicate Sprite\n\n   - `LinkCels()`:\n      returns: Nothing\n      Links Cels\n\n   - `CopyMerged()`:\n      returns: Nothing\n      Copy Merged\n\n   - `MaskContent()`:\n      returns: Nothing\n      Mask Content\n\n   - `DuplicateLayer()`:\n      returns: Nothing\n      Duplicate Layer\n\n   - `CopyCel()`:\n      returns: Nothing\n      Copy Cel\n\n   - `Refresh()`:\n      returns: Nothing\n      Refresh\n\n   - `Copy()`:\n      returns: Nothing\n      Copy\n\n   - `RemoveFrame()`:\n      returns: Nothing\n      Remove Frame\n\n   - `SetPalette()`:\n      returns: Nothing\n      Set Palette\n\n   - `OpenScriptsFolder()`:\n      returns: Nothing\n      Open Scripts Folder\n\n   - `FlattenLayers()`:\n      returns: Nothing\n      Flatten Layers\n\n   - `Eyedropper()`:\n      returns: Nothing\n      Eyedropper\n\n   - `PaletteSize()`:\n      returns: Nothing\n      Palette Size\n\n   - `ConvolutionMatrix()`:\n      returns: Nothing\n      Convolution Matrix\n\n   - `clearParameters()`:\n      returns: Nothing\n\n   - `Cut()`:\n      returns: Nothing\n      Cut\n\n   - `PaletteEditor()`:\n      returns: Nothing\n      Palette Editor\n\n   - `RemoveLayer()`:\n      returns: Nothing\n      Remove Layer\n\n   - `Clear()`:\n      returns: Nothing\n      Clear\n\n   - `Exit()`:\n      returns: Nothing\n      Exit\n\n   - `ColorQuantization()`:\n      returns: Nothing\n      Create Palette from Current Sprite (Color Quantization)\n\n   - `AlternateToolbar()`:\n      returns: Nothing\n      Alternate Toolbar\n\n   - `ChangeColor()`:\n      returns: Nothing\n      Color\n\n   - `ChangeBrush()`:\n      returns: Nothing\n      Brush\n\n   - `Cancel()`:\n      returns: Nothing\n      Cancel Current Operation\n\n   - `SwitchColors()`:\n      returns: Nothing\n      Switch Colors\n\n   - `ShowOnionSkin()`:\n      returns: Nothing\n      Show Onion Skin\n\n   - `ChangePixelFormat()`:\n      returns: Nothing\n      Change Pixel Format\n\n   - `ColorCurve()`:\n      returns: Nothing\n      Color Curve\n\n   - `PasteText()`:\n      returns: Nothing\n      Insert Text\n\n   - `CelProperties()`:\n      returns: Nothing\n      Cel Properties\n\n   - `Despeckle()`:\n      returns: Nothing\n      Despeckle\n\n   - `CloseAllFiles()`:\n      returns: Nothing\n      Close All Files\n\n   - `LoadPalette()`:\n      returns: Nothing\n      Load Palette\n\n   - `CanvasSize()`:\n      returns: Nothing\n      Canvas Size\n\n   - `Undo()`:\n      returns: Nothing\n      Undo\n\n   - `LayerVisibility()`:\n      returns: Nothing\n      Layer Visibility\n\n   - `Flip()`:\n      returns: Nothing\n      Flip Canvas Horizontal\n\n   - `Rotate()`:\n      returns: Nothing\n      Rotate Sprite 0°\n\n   - `Redo()`:\n      returns: Nothing\n      Redo\n\n   - `AlternateTimeline()`:\n      returns: Nothing\n      Alternate Timeline\n\n   - `ShowSelectionEdges()`:\n      returns: Nothing\n      Show Selection Edges\n\n   - `GotoFrame()`:\n      returns: Nothing\n      Go to Frame\n\n   - `CloseFile()`:\n      returns: Nothing\n      Close File\n\n   - `ToggleTouchbar()`:\n      returns: Nothing\n      Toggle Touchbar\n\n   - `GotoNextFrame()`:\n      returns: Nothing\n      Go to Next Frame\n\n   - `AdvancedMode()`:\n      returns: Nothing\n      Advanced Mode\n\n   - `setParameter()`:\n      returns: Nothing\n\n\n\n# [class EntryWidget]\n## Properties:\n   - `value`:\n   - `maxsize`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Palette]\n## Properties: \n   - `length`: \n\n## Methods: \n   - `set()`: \n      returns: Nothing\n\n   - `get()`: \n      returns: Nothing\n\n\n\n# [class Document]\n## Properties: \n   - `sprite`:\n\n## Methods:\n   - `close()`:\n      returns: Nothing\n\n\n\n# global ColorMode [class ColorMode]\n## Properties:\n   - `BITMAP`:\n   - `INDEXED`:\n   - `GRAYSCALE`:\n   - `RGB`:\n\n## No Methods.\n\n\n# [class Cel]\n## Properties:\n   - `frame`:\n   - `image`:\n   - `y`:\n   - `x`:\n\n## Methods:\n   - `setPosition()`:\n      returns: Nothing\n\n\n\n# global app [class App]\n## Properties:\n   - `platform`: read-only. Returns one of: emscripten, windows, macos, android, linux.\n   - `version`: read-only. Returns LibreSprite's current version as a string.\n   - `activeDocument`: read-only. Returns the currently active Document.\n   - `command`: read-only. Returns an object with functions for running commands.\n   - `activeSprite`: read-only. Returns the currently active Sprite.\n   - `activeLayerNumber`: read-only. Returns the number of the current layer.\n   - `activeImage`: read-only, can be null. Returns the current layer/frame's image.\n   - `pixelColor`: read-only. Returns an object with functions for color conversion.\n   - `activeFrameNumber`: read-only. Returns the number of the currently active animation frame.\n\n## Methods:\n   - `launch()`:\n      returns: Nothing\n\n   - `open()`:\n      returns: Nothing\n      Opens a document for editing\n\n   - `yield(event)`:\n     - event: Name of the event to be raised. The default is yield.\n      returns: Nothing\n      Schedules a yield event on the next frame\n\n   - `createDialog()`:\n      returns: Nothing\n      Creates a dialog window\n\n   - `documentation()`:\n      returns: Nothing\n      Prints this text.\n# [class Sprite]\n## Properties:\n   - `palette`: read-only. Returns the sprite's palette.\n   - `selection`: Placeholder. Do not use.\n   - `height`: read+write. Returns and sets the height of the sprite.\n   - `width`: read+write. Returns and sets the width of the sprite.\n   - `filename`: read-only. Returns the file name of the sprite.\n   - `colorMode`: read-only. Returns the sprite's ColorMode.\n   - `layerCount`: read-only. Returns the amount of layers in the sprite.\n\n## Methods:\n   - `loadPalette(fileName)`:\n     - fileName: The name of the palette file to load\n      returns: Nothing\n      loads a palette file.\n\n   - `crop(x, y, width, height)`:\n     - x: The left-most edge of the crop.\n     - y: The top-most edge of the crop.\n     - width: The width of the cropped area.\n     - height: The height of the cropped area.\n      returns: Nothing\n      crops the sprite to the specified dimensions.\n\n   - `saveAs(fileName, asCopy)`:\n     - fileName: String. The new name of the file\n     - asCopy: If true, the file is saved as a copy. Requires fileName to be specified.\n      returns: Nothing\n      saves the sprite.\n\n   - `resize(width, height)`:\n     - width: The new width.\n     - height: The new height.\n      returns: Nothing\n      resizes the sprite.\n\n   - `save()`:\n      returns: Nothing\n      saves the sprite.\n\n   - `commit()`:\n      returns: Nothing\n      commits the current transaction.\n\n   - `layer(layerNumber)`:\n     - layerNumber: The number of they layer, starting with zero from the bottom.\n      returns: a Layer object or null if invalid.\n      allows you to access a given layer.\n\n\n\n# global storage [class Storage]\n## No Properties.\n\n## Methods:\n   - `decodeBase64()`:\n      returns: Nothing\n\n   - `get()`:\n      returns: Nothing\n\n   - `save()`:\n      returns: Nothing\n\n   - `set()`:\n      returns: Nothing\n\n   - `fetch()`:\n      returns: Nothing\n\n   - `load()`:\n      returns: Nothing\n\n   - `unload()`:\n      returns: Nothing\n\n\n\n# [class PalettelistboxWidget]\n## Properties:\n   - `selected`:\n   - `id`:\n\n## Methods:\n   - `addPalette()`:\n      returns: Nothing\n\n\n\n# [class pixelColor]\n## No Properties.\n\n## Methods:\n   - `grayaA(color)`:\n     - color: A 32-bit color in 888 RGBA format\n      returns: The alpha component of the color\n      Extracts the alpha (opacity) from a 32-bit color\n\n   - `grayaV(color)`:\n     - color: A 32-bit color in 888 RGBA format\n      returns: The luminance Value of the color\n      Extracts the luminance from a 32-bit color\n\n   - `rgbaA(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The alpha component of the color\n      Extracts the alpha channel from a 32-bit color\n\n   - `graya(gray, alpha)`:\n     - gray: The luminance of color\n     - alpha: The alpha (opacity) of the color)\n      returns: The color with the given luminance/opacity\n\n   - `rgba(r, g, b, a)`:\n     - r: red, 0-255.\n     - g: green, 0-255.\n     - b: blue, 0-255.\n     - a: alpha (opacity), 0-255.\n      returns: A 32-bit color in 8888 RGBA format.\n      Converts R, G, B, A values into a single 32-bit RGBA color.\n\n   - `rgbaG(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The green component of the color\n      Extracts the green channel from a 32-bit color\n\n   - `rgbaB(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The blue component of the color\n      Extracts the blue channel from a 32-bit color\n\n   - `rgbaR(color)`:\n     - color: A 32-bit color in 8888 RGBA format\n      returns: The red component of the color\n      Extracts the red channel from a 32-bit color\n\n\n\n# [class LabelWidget]\n## Properties:\n   - `text`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Layer]\n## Properties: \n   - `flags`: read-only. Returns all flags OR'd together as an int\n   - `isContinuous`: read-only. Prefer to link cels when the user copies them.\n   - `celCount`: read-only. Returns the number of cels.\n   - `isMovable`: read-only. Returns true if the layer is movable.\n   - `isVisible`: read+write. Gets/sets whether the layer is visible or not.\n   - `isTransparent`: read-only. Returns true if the layer is a non-background image layer.\n   - `isBackground`: read-only. Returns true if the layer is a background layer.\n   - `isImage`: read-only. Returns true if the layer is an image, false if it is a folder.\n   - `isEditable`: read+write. Gets/sets whether the layer is editable (unlocked) or not (locked).\n   - `name`: read+write. The name of the layer.\n\n## Methods:\n   - `cel(index)`:\n     - index: The number of the Cel\n      returns: A Cel object or null if an invalid index is passed\n      retrieves a Cel\n\n\n\n# [class IntentryWidget]\n## Properties:\n   - `value`:\n   - `min`:\n   - `max`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Image]\n## Properties:\n   - `format`: read-only. The PixelFormat of the image.\n   - `stride`: read-only. The number of bytes per image row.\n   - `height`: read-only. The height of the image.\n   - `width`: read-only. The width of the image.\n\n## Methods:\n   - `putPixel(x, y, color)`:\n     - x: integer\n     - y: integer\n     - color: a 32-bit color in 8888 RGBA format.\n      returns: Nothing\n      writes the color onto the image at the the given coordinate.\n\n   - `getImageData()`:\n      returns: All pixels in a Uint8Array\n      creates an array containing all of the image's pixels.\n\n   - `putImageData(data)`:\n     - data: All of the pixels in the image.\n      returns: Nothing\n      writes the given pixels onto the image. Must be the same size as the image.\n\n   - `getPNGData()`:\n      returns: The image as a Base64-encoded PNG string.\n      Encodes the image as a PNG.\n\n   - `clear(color)`:\n     - color: a 32-bit color in 8888 RGBA format.\n      returns: Nothing\n      clears the image with the specified color.\n\n   - `getPixel(x, y)`:\n     - x: integer\n     - y: integer\n      returns: a color value\n      reads a color from the given coordinate of the image.\n\n\n\n# [class PN2ui6DialogE]\n## Properties:\n   - `canClose`: write only. Determines if the user can close the dialog window.\n   - `title`: read+write. Sets the title of the dialog window.\n   - `id`:\n\n## Methods:\n   - `addBreak()`:\n      returns: Nothing\n\n   - `addPaletteListBox()`:\n      returns: Nothing\n\n   - `addEntry()`:\n      returns: Nothing\n\n   - `addButton()`:\n      returns: Nothing\n\n   - `add()`:\n      returns: Nothing\n\n   - `close()`:\n      returns: Nothing\n\n   - `addLabel()`:\n      returns: Nothing\n\n   - `addDropDown()`:\n      returns: Nothing\n\n   - `addIntEntry()`:\n      returns: Nothing\n\n   - `get()`:\n      returns: Nothing\n\n\n\n# global console [class Console]\n## No Properties.\n\n## Methods:\n   - `assert()`:\n      returns: Nothing\n\n   - `log()`:\n      returns: Nothing\n\n\n\n# [class ButtonWidget]\n## Properties:\n   - `text`:\n   - `id`:\n\n## No Methods.\n\n\n# [class command]\n## No Properties.\n\n## Methods:\n   - `Zoom()`:\n      returns: Nothing\n      Zoom in\n\n   - `ToggleFullscreen()`:\n      returns: Nothing\n      Toggle Fullscreen\n\n   - `Timeline()`:\n      returns: Nothing\n      Switch Timeline\n\n   - `TiledMode()`:\n      returns: Nothing\n      Tiled Mode\n\n   - `SymmetryMode()`:\n      returns: Nothing\n      Symmetry Mode\n\n   - `SpriteSize()`:\n      returns: Nothing\n      Sprite Size\n\n   - `SnapToGrid()`:\n      returns: Nothing\n      Snap to Grid\n\n   - `ShowLayerEdges()`:\n      returns: Nothing\n      Show Layer Edges\n\n   - `TogglePreview()`:\n      returns: Nothing\n      Toggle Preview\n\n   - `ShowGrid()`:\n      returns: Nothing\n      Show Grid\n\n   - `ShowExtras()`:\n      returns: Nothing\n      Show Extras\n\n   - `ShowBrushPreview()`:\n      returns: Nothing\n      Show Brush Preview\n\n   - `Share()`:\n      returns: Nothing\n      Share\n\n   - `SetSameInk()`:\n      returns: Nothing\n      Same Ink in All Tools\n\n   - `SetInkType()`:\n      returns: Nothing\n      Set Ink Type: Simple Ink\n\n   - `SetColorSelector()`:\n      returns: Nothing\n      Set Color Selector: Color Spectrum\n\n   - `SelectionAsGrid()`:\n      returns: Nothing\n      Selection as Grid\n\n   - `SelectTile()`:\n      returns: Nothing\n      Select Tile\n\n   - `Scroll()`:\n      returns: Nothing\n      Scroll 0 pixels left\n\n   - `SavePalette()`:\n      returns: Nothing\n      Save Palette\n\n   - `SaveFileCopyAs()`:\n      returns: Nothing\n      Save File Copy As\n\n   - `SaveFileAs()`:\n      returns: Nothing\n      Save File As\n\n   - `SaveFile()`:\n      returns: Nothing\n      Save File\n\n   - `SetLoopSection()`:\n      returns: Nothing\n      Set Loop Section\n\n   - `RunScript()`:\n      returns: Nothing\n      Run Script\n\n   - `ReverseFrames()`:\n      returns: Nothing\n      Reverse Frames\n\n   - `ReselectMask()`:\n      returns: Nothing\n      Reselect Mask\n\n   - `RescanScripts()`:\n      returns: Nothing\n      Rescan Scripts\n\n   - `ReplaceColor()`:\n      returns: Nothing\n      Replace Color\n\n   - `RepeatLastExport()`:\n      returns: Nothing\n      Repeat Last Export\n\n   - `PlayAnimation()`:\n      returns: Nothing\n      Play Animation\n\n   - `PixelPerfectMode()`:\n      returns: Nothing\n      Switch Pixel Perfect Mode\n\n   - `Options()`:\n      returns: Nothing\n      Options\n\n   - `OpenFile()`:\n      returns: Nothing\n      Open Sprite\n\n   - `NewSpriteFromSelection()`:\n      returns: Nothing\n      New Sprite From Selection\n\n   - `MaskByColor()`:\n      returns: Nothing\n      Mask By Color\n\n   - `NewFrameTag()`:\n      returns: Nothing\n      New Frame Tag\n\n   - `NewFile()`:\n      returns: Nothing\n      New File\n\n   - `UndoHistory()`:\n      returns: Nothing\n      Undo History\n\n   - `GotoNextLayer()`:\n      returns: Nothing\n      Go to Next Layer\n\n   - `NewBrush()`:\n      returns: Nothing\n      New Brush\n\n   - `OpenInFolder()`:\n      returns: Nothing\n      Open In Folder\n\n   - `ClearCel()`:\n      returns: Nothing\n      Clear Cel\n\n   - `MoveMask()`:\n      returns: Nothing\n      Move Selection Boundaries 0 pixels left\n\n   - `FrameTagProperties()`:\n      returns: Nothing\n      Frame Tag Properties\n\n   - `AddColor()`:\n      returns: Nothing\n      Add Foreground Color to Palette\n\n   - `MoveCel()`:\n      returns: Nothing\n      Move Cel\n\n   - `MergeDownLayer()`:\n      returns: Nothing\n      Merge Down Layer\n\n   - `MaskAll()`:\n      returns: Nothing\n      Mask All\n\n   - `SaveMask()`:\n      returns: Nothing\n      Save Mask\n\n   - `LoadMask()`:\n      returns: Nothing\n      LoadMask\n\n   - `LayerProperties()`:\n      returns: Nothing\n      Layer Properties\n\n   - `LayerFromBackground()`:\n      returns: Nothing\n      Layer From Background\n\n   - `SetPaletteEntrySize()`:\n      returns: Nothing\n      Set Palette Entry Size\n\n   - `Launch()`:\n      returns: Nothing\n      Launch\n\n   - `KeyboardShortcuts()`:\n      returns: Nothing\n      Keyboard Shortcuts\n\n   - `InvertMask()`:\n      returns: Nothing\n      Invert Mask\n\n   - `InvertColor()`:\n      returns: Nothing\n      Invert Color\n\n   - `GridSettings()`:\n      returns: Nothing\n      Grid Settings\n\n   - `GotoPreviousTab()`:\n      returns: Nothing\n      Go to Previous tab\n\n   - `ScrollCenter()`:\n      returns: Nothing\n      Scroll to center of canvas\n\n   - `GotoPreviousLayer()`:\n      returns: Nothing\n      Go to Previous Layer\n\n   - `GotoPreviousFrameWithSameTag()`:\n      returns: Nothing\n      Go to Previous Frame with same tag\n\n   - `GotoPreviousFrame()`:\n      returns: Nothing\n      Go to Previous Frame\n\n   - `GotoNextTab()`:\n      returns: Nothing\n      Go to Next Tab\n\n   - `AutocropSprite()`:\n      returns: Nothing\n      Trim Sprite\n\n   - `ImportSpriteSheet()`:\n      returns: Nothing\n      Import Sprite Sheet\n\n   - `ShowPixelGrid()`:\n      returns: Nothing\n      Show Pixel Grid\n\n   - `Home()`:\n      returns: Nothing\n      Home\n\n   - `UnlinkCel()`:\n      returns: Nothing\n      Unlink Cel\n\n   - `GotoNextFrameWithSameTag()`:\n      returns: Nothing\n      Go to Next Frame with same tag\n\n   - `CropSprite()`:\n      returns: Nothing\n      Crop Sprite\n\n   - `GotoLastFrame()`:\n      returns: Nothing\n      Go to Last Frame\n\n   - `OpenWithApp()`:\n      returns: Nothing\n      Open With Associated Application\n\n   - `GotoFirstFrame()`:\n      returns: Nothing\n      Go to First Frame\n\n   - `RemoveFrameTag()`:\n      returns: Nothing\n      Remove Frame Tag\n\n   - `NewFrame()`:\n      returns: Nothing\n      New Frame\n\n   - `FullscreenPreview()`:\n      returns: Nothing\n      Fullscreen Preview\n\n   - `SpriteProperties()`:\n      returns: Nothing\n      Sprite Properties\n\n   - `NewLayer()`:\n      returns: Nothing\n      New Layer\n\n   - `FrameProperties()`:\n      returns: Nothing\n      Frame Properties\n\n   - `DeselectMask()`:\n      returns: Nothing\n      Deselect Mask\n\n   - `AlternateTouchbar()`:\n      returns: Nothing\n      Alternate Touchbar\n\n   - `ExportSpriteSheet()`:\n      returns: Nothing\n      Export Sprite Sheet\n\n   - `NewLayerSet()`:\n      returns: Nothing\n      New Layer Set\n\n   - `ModifySelection()`:\n      returns: Nothing\n      Expand Selection\n\n   - `Paste()`:\n      returns: Nothing\n      Paste\n\n   - `DiscardBrush()`:\n      returns: Nothing\n      Discard Brush\n\n   - `BackgroundFromLayer()`:\n      returns: Nothing\n      BackgroundFromLayer\n\n   - `DuplicateView()`:\n      returns: Nothing\n      Duplicate View\n\n   - `About()`:\n      returns: Nothing\n      About\n\n   - `DeveloperConsole()`:\n      returns: Nothing\n      Developer Console\n\n   - `DuplicateSprite()`:\n      returns: Nothing\n      Duplicate Sprite\n\n   - `LinkCels()`:\n      returns: Nothing\n      Links Cels\n\n   - `CopyMerged()`:\n      returns: Nothing\n      Copy Merged\n\n   - `MaskContent()`:\n      returns: Nothing\n      Mask Content\n\n   - `DuplicateLayer()`:\n      returns: Nothing\n      Duplicate Layer\n\n   - `CopyCel()`:\n      returns: Nothing\n      Copy Cel\n\n   - `Refresh()`:\n      returns: Nothing\n      Refresh\n\n   - `Copy()`:\n      returns: Nothing\n      Copy\n\n   - `RemoveFrame()`:\n      returns: Nothing\n      Remove Frame\n\n   - `SetPalette()`:\n      returns: Nothing\n      Set Palette\n\n   - `OpenScriptsFolder()`:\n      returns: Nothing\n      Open Scripts Folder\n\n   - `FlattenLayers()`:\n      returns: Nothing\n      Flatten Layers\n\n   - `Eyedropper()`:\n      returns: Nothing\n      Eyedropper\n\n   - `PaletteSize()`:\n      returns: Nothing\n      Palette Size\n\n   - `ConvolutionMatrix()`:\n      returns: Nothing\n      Convolution Matrix\n\n   - `clearParameters()`:\n      returns: Nothing\n\n   - `Cut()`:\n      returns: Nothing\n      Cut\n\n   - `PaletteEditor()`:\n      returns: Nothing\n      Palette Editor\n\n   - `RemoveLayer()`:\n      returns: Nothing\n      Remove Layer\n\n   - `Clear()`:\n      returns: Nothing\n      Clear\n\n   - `Exit()`:\n      returns: Nothing\n      Exit\n\n   - `ColorQuantization()`:\n      returns: Nothing\n      Create Palette from Current Sprite (Color Quantization)\n\n   - `AlternateToolbar()`:\n      returns: Nothing\n      Alternate Toolbar\n\n   - `ChangeColor()`:\n      returns: Nothing\n      Color\n\n   - `ChangeBrush()`:\n      returns: Nothing\n      Brush\n\n   - `Cancel()`:\n      returns: Nothing\n      Cancel Current Operation\n\n   - `SwitchColors()`:\n      returns: Nothing\n      Switch Colors\n\n   - `ShowOnionSkin()`:\n      returns: Nothing\n      Show Onion Skin\n\n   - `ChangePixelFormat()`:\n      returns: Nothing\n      Change Pixel Format\n\n   - `ColorCurve()`:\n      returns: Nothing\n      Color Curve\n\n   - `PasteText()`:\n      returns: Nothing\n      Insert Text\n\n   - `CelProperties()`:\n      returns: Nothing\n      Cel Properties\n\n   - `Despeckle()`:\n      returns: Nothing\n      Despeckle\n\n   - `CloseAllFiles()`:\n      returns: Nothing\n      Close All Files\n\n   - `LoadPalette()`:\n      returns: Nothing\n      Load Palette\n\n   - `CanvasSize()`:\n      returns: Nothing\n      Canvas Size\n\n   - `Undo()`:\n      returns: Nothing\n      Undo\n\n   - `LayerVisibility()`:\n      returns: Nothing\n      Layer Visibility\n\n   - `Flip()`:\n      returns: Nothing\n      Flip Canvas Horizontal\n\n   - `Rotate()`:\n      returns: Nothing\n      Rotate Sprite 0°\n\n   - `Redo()`:\n      returns: Nothing\n      Redo\n\n   - `AlternateTimeline()`:\n      returns: Nothing\n      Alternate Timeline\n\n   - `ShowSelectionEdges()`:\n      returns: Nothing\n      Show Selection Edges\n\n   - `GotoFrame()`:\n      returns: Nothing\n      Go to Frame\n\n   - `CloseFile()`:\n      returns: Nothing\n      Close File\n\n   - `ToggleTouchbar()`:\n      returns: Nothing\n      Toggle Touchbar\n\n   - `GotoNextFrame()`:\n      returns: Nothing\n      Go to Next Frame\n\n   - `AdvancedMode()`:\n      returns: Nothing\n      Advanced Mode\n\n   - `setParameter()`:\n      returns: Nothing\n\n\n\n# [class EntryWidget]\n## Properties:\n   - `value`:\n   - `maxsize`:\n   - `id`:\n\n## No Methods.\n\n\n# [class Palette]\n## Properties: \n   - `length`: \n\n## Methods: \n   - `set()`: \n      returns: Nothing\n\n   - `get()`: \n      returns: Nothing\n\n\n\n# [class Document]\n## Properties: \n   - `sprite`:\n\n## Methods:\n   - `close()`:\n      returns: Nothing\n\n\n\n# global ColorMode [class ColorMode]\n## Properties:\n   - `BITMAP`:\n   - `INDEXED`:\n   - `GRAYSCALE`:\n   - `RGB`:\n\n## No Methods.\n\n\n# [class Cel]\n## Properties:\n   - `frame`:\n   - `image`:\n   - `y`:\n   - `x`:\n\n## Methods:\n   - `setPosition()`:\n      returns: Nothing\n\n\n\n# global app [class App]\n## Properties:\n   - `platform`: read-only. Returns one of: emscripten, windows, macos, android, linux.\n   - `version`: read-only. Returns LibreSprite's current version as a string.\n   - `activeDocument`: read-only. Returns the currently active Document.\n   - `command`: read-only. Returns an object with functions for running commands.\n   - `activeSprite`: read-only. Returns the currently active Sprite.\n   - `activeLayerNumber`: read-only. Returns the number of the current layer.\n   - `activeImage`: read-only, can be null. Returns the current layer/frame's image.\n   - `pixelColor`: read-only. Returns an object with functions for color conversion.\n   - `activeFrameNumber`: read-only. Returns the number of the currently active animation frame.\n\n## Methods:\n   - `launch()`:\n      returns: Nothing\n\n   - `open()`:\n      returns: Nothing\n      Opens a document for editing\n\n   - `yield(event)`:\n     - event: Name of the event to be raised. The default is yield.\n      returns: Nothing\n      Schedules a yield event on the next frame\n\n   - `createDialog()`:\n      returns: Nothing\n      Creates a dialog window\n\n   - `documentation()`:\n      returns: Nothing\n      Prints this text.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5859375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 1.0   | :white_check_mark: |\n\n\n\n## Reporting a Vulnerability\n\nIf a vulnerability has been found:\n\n1. Go to the issues tab: https://github.com/LibreSprite/LibreSprite/issues\n2. Write a full description of the problem\n3. Add some screenshots and write your operating system version and device specifications\n\n\nIf there wasn't a response from the developers for a long period of time, you can go to the following links:\nhttps://discord.com/invite/95gbyU5\nhttps://www.reddit.com/r/LibreSprite/\n"
        },
        {
          "name": "Theming.md",
          "type": "blob",
          "size": 1.7626953125,
          "content": "# Theming\n\nIf you don't like the default look of LibreSprite, DON'T PANIC, there's plenty of community made themes that make the app looks awesome.\n\n\n\n## Where can I find them?\n\nWell, most of the available themes can be found [here](https://libresprite.github.io/#!/resources). These are all made by and for the community.\n\n##### Examples:\n\n[Neutral Dark](https://github.com/maujin111/than_dark_theme_libresprite/archive/refs/heads/master.zip) - by Blackraven\n\n![](https://libresprite.github.io/assets/neutralDarkPreview.png)\n\n[Purple Tint](https://github.com/maujin111/purpleTint-libreSprite-Theme/archive/refs/heads/main.zip) - by Maujin111\n\n![](https://libresprite.github.io/assets/purpleTintPreview.png)\n\n[Unofficial Dead Cells](https://github.com/maujin111/unofficialDeadCellsTheme/archive/refs/heads/main.zip) - by Maujin111\n\n![](https://libresprite.github.io/assets/unofficialDeadCellsPreview.png)\n\n\n## How to Install?\n\nSimple, download the .zip archive, extract and copy to the /data/skins part of the directory where libresprite.exe is.\n\nThen open LibreSprite up, go to Edit, Preferences and go to the Theme tab.\n\nSelect the theme that you just put into the /data/skins folder, and click Select in the bottom left.\n\n![](C:\\Users\\charl\\AppData\\Roaming\\marktext\\images\\2022-02-07-19-53-19-image.png)\n\nRestart LibreSprite to see the changes.\n\n\n\n\n\n## How to uninstall a theme?\n\nWell, just go back to the Themes tab in Preferences, and select a different theme and do the same process as before.\n\n\n\n\n\n**NOTE: DO NOT DELETE THE FILES BEFORE YOU CHANGE THE THEME** If this does happen, simply copy the original, call it the same as the deleted theme and launch LibreSprite again.\n\nIf this doesn't fix it, then, you'll need to reinstall the theme and try again the steps above, or reinstall LibreSprite.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "desktop",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "emscripten",
          "type": "tree",
          "content": null
        },
        {
          "name": "installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "package_linux.sh",
          "type": "blob",
          "size": 1.337890625,
          "content": "#!/bin/sh\n\nadd()\n{\n  echo \"adding $1\"\n\n  if [ -e \"/usr/lib/x86_64-linux-gnu/$1\" ]; then\n      src=\"/usr/lib/x86_64-linux-gnu\"\n  elif [ -e \"/usr/lib/x86_64-linux-gnu/pulseaudio/$1\" ]; then\n      src=\"/usr/lib/x86_64-linux-gnu/pulseaudio\"\n  elif [ -e \"/usr/lib64/$1\" ]; then\n      src=\"/usr/lib64\"\n  fi\n\n  if [ $src != $out ]; then\n      cp \"$src/$1\" \"$out/$1\"\n  fi\n\n  dependencies=$(readelf -d \"$src/$1\" | grep NEEDED | sed -En \"s/[^\\[]*\\[([^]]*)\\S*/\\1/gp\")\n\n  for dependency in $dependencies\n  do\n    if [ ! -f \"$out/$dependency\" ]; then\n        add $dependency\n    fi\n  done\n}\n\nout=$(pwd)\nsrc=$(pwd)\n\nadd \"libresprite\"\n\ncp /usr/lib/libpthread.so* ./\ncp /usr/lib/librt.so* ./\ncp /usr/lib/libstdc++.so* ./\n\nrm libc.so*\nrm libm.so*\n\nchmod +x libresprite\n\nmkdir LibreSprite\nmkdir LibreSprite/usr\nmkdir LibreSprite/usr/bin\nmkdir LibreSprite/usr/lib\n\nmv ../../desktop/libresprite.desktop LibreSprite/\ncp ../../desktop/icons/hicolor/256x256/apps/libresprite.png LibreSprite/libresprite.png\n\nmv libresprite LibreSprite/usr/bin\nmv data LibreSprite/usr/bin\nmv *.so* LibreSprite/usr/lib\n\nwget https://github.com/AppImage/AppImageKit/releases/download/13/AppRun-x86_64 -O LibreSprite/AppRun\nchmod +x LibreSprite/AppRun\n\nwget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage -O appimagetool\nchmod +x appimagetool\n\n./appimagetool LibreSprite\n"
        },
        {
          "name": "package_win.js",
          "type": "blob",
          "size": 3.2158203125,
          "content": "const path = require('path');\nconst fs = require('fs');\nconst {env} = require('process');\nconst searchDir = env.PATH.split(path.delimiter);\nconst blacklist = [\n\t\"advapi32.dll\", \"kernel32.dll\", \"msvcrt.dll\", \"ole32.dll\", \"user32.dll\",\n\t\"ws2_32.dll\", \"comdlg32.dll\", \"gdi32.dll\", \"imm32.dll\", \"oleaut32.dll\",\n\t\"shell32.dll\", \"winmm.dll\", \"winspool.drv\", \"wldap32.dll\",\n\t\"ntdll.dll\", \"d3d9.dll\", \"mpr.dll\", \"crypt32.dll\", \"dnsapi.dll\",\n\t\"shlwapi.dll\", \"version.dll\", \"iphlpapi.dll\", \"msimg32.dll\", \"setupapi.dll\",\n\t\"opengl32.dll\", \"dwmapi.dll\", \"uxtheme.dll\", \"secur32.dll\", \"gdiplus.dll\",\n\t\"usp10.dll\", \"comctl32.dll\", \"wsock32.dll\", \"netapi32.dll\", \"userenv.dll\",\n\t\"avicap32.dll\", \"avrt.dll\", \"psapi.dll\", \"mswsock.dll\", \"glu32.dll\",\n\t\"bcrypt.dll\", \"rpcrt4.dll\", \"hid.dll\", \"dbghelp.dll\",\n\t\"d3d11.dll\", \"dxgi.dll\", \"dwrite.dll\"\n];\n\nasync function call(file, {args, grep, callback}) {\n    const {spawn} = require('child_process');\n    return new Promise((resolve, fail) => {\n        const proc = spawn(file, args);\n        let aborted = false;\n        let stdout = '';\n        let stderr = '';\n        proc.stdout.on('data', data => {\n            try {\n                stdout = (stdout += data).replace(/^.*$/gm, line => {\n                    line.replace(grep, callback);\n                    return '';\n                })\n            } catch (abort) {\n                aborted = true;\n                try {\n                    proc.kill();\n                } catch(e){}\n            }\n        });\n        proc.stderr.on('data', (data) => stderr += data);\n        proc.on('close', (error) => {\n            if (aborted) {\n                resolve(stdout);\n            } else {\n                if (error) fail({file, args, error, stdout, stderr})\n                else resolve(stdout);\n            }\n        });\n    });\n}\n\nfunction copyDependencies(exe, target) {\n    call('objdump', {\n        args:['-p', exe],\n        grep:/DLL Name: (.*)|PE File Base Relocations/gi,\n        callback: (_, dll) => {\n            if (!dll)\n                throw 0;\n            if (!blacklist.includes(dll.toLowerCase())) {\n                blacklist.push(dll.toLowerCase());\n                addImport(dll, [...searchDir]);\n            }\n        }\n    });\n\n    function addImport(dll, searchQueue) {\n        if (!searchQueue || !searchQueue.length) {\n            if (dll.toLowerCase() != dll) addImport(dll.toLowerCase(), [...searchDir]);\n            else {\n                blacklist.push(dll);\n                console.log('could not find', dll);\n            }\n            return;\n        }\n        const src = path.join(searchQueue.pop(), dll);\n        fs.copyFile(src, path.join(target, dll), fs.constants.COPYFILE_FICLONE, (err) => {\n            if (err) addImport(dll, searchQueue);\n            else {\n                console.log('copied', src);\n                copyDependencies(src, target);\n            }\n        });\n    }\n}\n\nasync function main(exe) {\n    if (!exe) {\n        console.log('No exe given');\n    } else try {\n        await copyDependencies(exe, path.dirname(exe));\n    } catch (ex) {\n        if (ex && ex.stderr) {\n            console.error(`Running ${ex.file} ${ex.args.join(\" \")}:\\n${ex.error}`);\n        } else {\n            console.error(ex);\n        }\n    }\n}\n\nmain(require('process').argv[2]);\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}