{
  "metadata": {
    "timestamp": 1736566075130,
    "page": 63,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ideawu/ssdb",
      "stars": 8201,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.478515625,
          "content": "ssdb-server*\nios\n888*.conf\nvar888*\n*.exe\n*.o\n*.a\n*.out\n*.class\ntmp\n.DS_Store\n*.pyc\nvar/*\nvar_*\nvar_slave/*\ndev_ssdb.conf*\ndev_slave.conf\n*.swp\n*_cpy_*\n*.dSYM*\nssdb-server\ntools/ssdb-dump\ntools/ssdb-bench\ntools/ssdb-repair\ntools/ssdb-migrate\ntools/leveldb-import\n_pack\nbuild_config.mk\nlog.txt\nrepair.log\nlog_slave.txt\nsrc/client/demo\nsrc/client/hello-ssdb\napi/cpp/SSDB_client.h\napi/cpp/test\napi/cpp/html\napi/php/a.php\napi/php/b.php\napi/php/c.php\napi/java/Test.java\nsrc/util/test_sorted_set\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 7.740234375,
          "content": "* 1.9.9\n\t* Bug fixeds:\n\t\t- Fix binlog resource leak bug(2020-09-25)\n* 1.9.8\n\t* New features:\n\t\t- optimize hclear performance(2020-07-31)\n\t\t- ssdb-repair/ssdb-dump set leveldb.option.max_file_size to 32MB(2020-07-30)\n\t\t- Support multi auth password configs(2020-05-10)\n\t\t- Support IP v6(2020-02-15)\n\t\t- Add add_slave and del_slave command(2020-02-19)\n\t* Bug fixes:\n\t\t- Fix `hfix` bug(2020-08-10)\n* 1.9.7\n\t* New features:\n\t\t- Support slaveof command(2018-04-27)\n\t\t- Add hfix command(2018-11-21)\n\t* Bug fixes:\n\t\t- Fix queue/list replication bug(2019-01-02)\n\t\t- Fix logrotate issue when log to stdout/stderr(2018-06-05)\n\t\t- Fix coredump on exit(2018-07-18)\n\t\t- Fix startup blocked by BinlogQueue::find_last()(2018-08-08)\n* 1.9.6\n\t* New features:\n\t\t- ssdb-cli supports command history(2018-04-24)\n\t\t- Log slow query with WARN level(2017-11-08)\n\t\t- Upgrade leveldb to version 1.20, fix MANIFEST file too large issue(2017-09-25)\n\t* Incompatible changes:\n\t\t- The SSDB_KEY_LEN_MAX limit will be applied to KV, as described in docs(2017-11-08)\n\t* Bug fixes:\n\t\t- Fix Xcode 9, iOS SDK 11 compile issue(2017-11-20)\n\t\t- Fix Redis zrange, zrevrange, zremrangebyrank handle negative start/end bug(2017-12-05)\n* 1.9.5\n\t* New features:\n\t\t- C++ SDK add disconnected() method(2017-08-29)\n\t\t- ssdb-cli supports -a option to connect with password(2017-07-19)\n\t\t- Add slaveof.recv_timeout configuration(2017-05-03)\n\t* Incompatible changes:\n\t\t- setbit/getbit will be compatible with Redis, from LSB 0 to MSB 0(2017-05-16)\n\t* Bug fixes:\n\t\t- Fix ssdb-cli escape bug(2017-08-24)\n* 1.9.4\n\t* Incompatible changes:\n\t\t- Treat unsupported redis command's reply as REPLY_MULTI_BULK(2016-07-26)\n\t\t- Not writting pidfile when not running daemonized(2016-07-17)\n\t* New features:\n\t\t- Support readonly mode(2016-10-11)\n\t\t- Add OUT_OF_SYNC status, slave not flushdb when this status(2016-06-17)\n\t\t- Config default block_size as 32(2017-01-18)\n\t* Bug fixes:\n\t\t- Fix bug that busy expiration blocks setx request(2016-10-14)\n\t\t- Fix issues/1003, binlogs null pointer error caused by multi-threading during shutdown(2016-10-20)\n\t\t- Make RedisLink AUTH reply exactly as Redis(2017-01-17)\n* 1.9.3\n\t* New features:\n\t\t- Do not allow slave request binlogs with seq greater than max_seq(2016-03-18)\n\t\t- CLI comands with nagios output format(2016-03-06)\n\t\t- User can input binary data via ssdb-cli(2016-02-24)\n\t\t- Add ip_filter relative commands(2016-02-17)\n\t* Bug fixes:\n\t\t- Report error when setting ttl(expire) fail(2016-04-25)\n\t\t- Fix ttl not be deleted when deleting the only one key with ttl in the db, issue#885(2016-03-02)\n\t\t- Fix bug when connecting to multi masters, the slave saves only one master's status(2016-03-01)\n* 1.9.2\n\t* New features:\n\t\t- Binlog capacity can be set in config file(2016-01-14)\n\t\t- Provide zfix command to repair broken zset(2015-12-02)\n\t\t- Supports specifying slaveof.host in ssdb.conf(2015-11-23)\n\t\t- Do not allow flushdb when replication is in use(2015-11-16)\n\t\t- Provide server side flushdb(2015-09-17)\n\t\t- The slave will flush db when receive copy_begin(2015-07-28)\n\t* Incompatible changes:\n\t\t- Will not support db size for redis clients(2015-08-07)\n\t* Bug fixes:\n\t\t- Fix ttl not be deleted when deleting the only one key with ttl in the db, issue#885(2016-03-02)\n\t\t- Fix Logger bug on multi-threads, which halt the service for seconds(2016-01-25)\n\t\t- Fix bug when ssdb-cli is soft linked(2016-01-25)\n\t\t- Fix zclear infinite loop when data is broken(2015-12-02)\n\t\t- Fix setbit crash on very big offset(2015-11-17)\n\t\t- Fix Jedis zadd() score in scientific notation(2015-10-22)\n* 1.9.1\n\t* Incompatible changes:\n\t\t- zrank/zrrank return not_found(prev is error) if member not exists(2015-07-16)\n\t\t- PHP API zrank/zrrank return null(prev is false) if member not exists(2015-07-16)\n* 1.9.0\n\t* New features:\n\t\t- Update MAX_PACKET_SIZE to 128MB(2015-04-28)\n\t\t- Process most read commands in reader threads, not main thread(2015-04-28)\n\t\t- Add bitcount command, which is similar to Redis's bitcount(2015-04-15)\n\t\t- Add zpop_front, zpop_back command(2015-04-01)\n\t\t- Support static library build for iOS(2015-03-26)\n\t\t- Update options.max_open_files default value to 500(2015-03-15)\n\t\t- Add version command(2015-03-10)\n\t\t- Add rkeys command(2015-02-15)\n\t* Bug fixes:\n\t\t- Fix replication status display error(2015-04-09)\n* 1.8.1\n\t* Bug fixes:\n\t\t- Fix ttl bug(https://github.com/ideawu/ssdb/issues/628)(2015-03-14)\n* 1.8.0\n\t* New features:\n\t\t- Support SSDB style keys command through redis-cli(2014-12-08)\n\t\t- Replication supports AUTH(2014-12-01)\n\t\t- Sync qset operations(2014-11-05)\n\t\t- Add dbsize command(2014-11-02)\n\t\t- Include sync clients' stats in info(2014-11-02)\n\t\t- Refactor codes, separate into: libutil, libnet, libssdb(2014-11-02)\n\t* Bug fixes:\n\t\t- Fix bug when process dump and sync140 command with redis-cli(2015-01-27)\n* 1.7.0.1\n\t* New features:\n\t\t- Sync qset operations(2014-11-05)\n\t\t- *incr commands return error if value cannot be converted to integer(2014-10-24)\n\t\t- Include replication/sync stats in info(2014-10-23)\n\t\t- Add set_key_range, get_key_range(for KV) command(2014-10-22)\n\t\t- Add qset/lset command(sync won't work), rewrite Response(2014-10-19)\n* 1.7.0.0\n\t* New features:\n\t\t- export(ssdb-cli) command supports -i(interactive) option(2014-10-16)\n\t\t- ssdb-cli performance improved(2014-10-11)\n\t\t- Add export, import commands in ssdb-cli(2014-10-11)\n\t\t- Add qtrim_front, qtrim_back commands(2014-10-11)\n\t\t- ssdb-dump support auth(2014-10-10)\n\t\t- Add max_open_files config, default is 100(2014-10-08)\n\t\t- Add auth command(2014-09-20)\n\t\t- Enable qpop multi elements at a time(2014-09-16)\n\t* Incompatible changes:\n\t\t- Rewrite hexmem, this affects log messages(2014-10-10)\n* 1.6.8.8\n\t* New features:\n\t\t- Add hrlist, zrlist, qrlist commands(2014-07-27)\n\t\t- Add string/bit operations: getbit, setbit, bitcount, strlen, substr(getrange)(2014-06-07)\n\t\t- Put multi_*get commands to execute in worker thread(2014-06-17)\n\t* Incompatible changes:\n\t\t- Delete expireation info when deleting key(2014-06-28)\n\t\t- Inlucde links, total_calls in info cmd's reply(2014-06-17)\n\t\t- Rename redis_getrange command to getrange(2014-07-27)\n\t* Bug fixes:\n\t\t- Fix ssdb-bench bug on del bench(2014-08-21)\n\t\t- Return entrire string when substr's params are ommitted(2014-07-27)\n\t\t- Fix key expiration/ttl bug(2014-07-02)\n\t\t- Fix zRangeByScore(redis) bug(2014-06-28)\n\n* 1.6.8.7\n\t* New features:\n\t\t- Add string/bit operations: getbit, setbit, bitcount, strlen, substr(getrange)(2014-06-07)\n\t\t- Add expire command(2014-05-28)\n\t\t- Add ttl command(2014-05-26)\n\t\t- Add `flushdb list`(2014-05-22)\n\t\t- Support Android build\n\t\t- Add sync speed limit\n\n* 1.6.8.6 (2014-03-29)\n\t* New features:\n\t\t- Reduce round trip time for single request(2014-04-04)\n\t\t- Add zcount, zsum, zavg, zRemRangeByScore, zRemRangeByRank commands(2014-04-06)\n\t\t- Update redis-import.php to use Redis SCAN command if available(2014-04-07)\n\t\t- qpush/qpush_* accept multiple values(2014-04-13)\n\t\t- Don't push all expiration keys in memory, use less memory(2014-05-03)\n\t\t- Provide an option to disable binlog(2014-05-03)\n\t\t- Add hgetall command(2014-05-03)\n\t\t- Fix memory issue on cache_size larger than 2048(2014-05-12);\n\t* Incompatible changes:\n\t\t- qpush returns the length of the queue/list after the push operations(2014-04-10)\n\t\t- zrscan returns keys with score equal to score_start if key_start is ommit, previously it only returns keys with scores less than score_start(2014-04-23)\n\t* Bug fixes:\n\t\t- Redesign network flow, support very large batch commands\n\t\t- Fix bug on ssdb-dump that lose data, print out error message(2014-04-05)\n\n* 1.6.8.5 (2014-03-05)\n\t* New features:\n\t\t- Add qslice(lrange), qget(lindex, lget) commands.\n\t\t- Add getset, setnx commands.\n\t* Incompatible changes:\n\t\t- Queue/List data will be replicated(sync) to slaves.\n\t* Bug fixes:\n\t\t- Fix ssdb::Client::connect() possible memory leak\n\t\t- Fix ttl overflow bug\n\t\t- Fix nodejs api bug on binary data(2014-03-27)\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.001953125,
          "content": "FROM ubuntu\nMAINTAINER wendal \"wendal1985@gmail.com\"\n\n# Set the env variable DEBIAN_FRONTEND to noninteractive\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n  apt-get install -y python2.7 && \\\n  apt-get install -y --force-yes git make gcc g++ autoconf && apt-get clean && \\\n  git clone --depth 1 https://github.com/ideawu/ssdb.git ssdb && \\\n  cd ssdb && make && make install && cp ssdb-server /usr/bin && \\\n  apt-get remove -y --force-yes git make gcc g++ autoconf && \\\n  apt-get autoremove -y && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n  cp ssdb.conf /etc && cd .. && yes | rm -r ssdb\n\nRUN mkdir -p /var/lib/ssdb && \\\n  sed \\\n    -e 's@home.*@home /var/lib@' \\\n    -e 's/loglevel.*/loglevel info/' \\\n    -e 's@work_dir = .*@work_dir = /var/lib/ssdb@' \\\n    -e 's@pidfile = .*@pidfile = /run/ssdb.pid@' \\\n    -e 's@level:.*@level: info@' \\\n    -e 's@ip:.*@ip: 0.0.0.0@' \\\n    -i /etc/ssdb.conf\n\n\nENV TZ Asia/Shanghai\nEXPOSE 8888\nVOLUME /var/lib/ssdb\nENTRYPOINT /usr/bin/ssdb-server /etc/ssdb.conf\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.435546875,
          "content": "Copyright (c) 2013 SSDB Authors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the SSDB nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.5458984375,
          "content": "PREFIX=/usr/local/ssdb\n\n$(shell sh build.sh 1>&2)\ninclude build_config.mk\n\nall:\n\tmkdir -p var var_slave\n\tchmod u+x \"${LEVELDB_PATH}/build_detect_platform\"\n\tchmod u+x deps/cpy/cpy\n\tchmod u+x tools/ssdb-cli\n\tcd \"${LEVELDB_PATH}\"; ${MAKE}\n\tcd src/util; ${MAKE}\n\tcd src/net; ${MAKE}\n\tcd src/client; ${MAKE}\n\tcd src/ssdb; ${MAKE}\n\tcd src; ${MAKE}\n\tcd tools; ${MAKE}\n\n.PHONY: ios\n\t\nios:\n\tcd \"${LEVELDB_PATH}\"; make clean; CXXFLAGS=-stdlib=libc++ ${MAKE} PLATFORM=IOS\n\tcd \"${SNAPPY_PATH}\"; make clean; make -f Makefile-ios\n\tmkdir -p ios\n\tmv ${LEVELDB_PATH}/out-ios-universal/libleveldb.a ios/libleveldb-ios.a\n\tmv ${SNAPPY_PATH}/libsnappy-ios.a ios/\n\tcd src/util; make clean; ${MAKE} -f Makefile-ios\n\tcd src/ssdb; make clean; ${MAKE} -f Makefile-ios\n\ninstall:\n\tmkdir -p ${PREFIX}\n\tmkdir -p ${PREFIX}/_cpy_\n\tmkdir -p ${PREFIX}/deps\n\tmkdir -p ${PREFIX}/var\n\tmkdir -p ${PREFIX}/var_slave\n\tcp -f ssdb-server ssdb.conf ssdb_slave.conf ${PREFIX}\n\tcp -rf api ${PREFIX}\n\tcp -rf \\\n\t\ttools/ssdb-bench \\\n\t\ttools/ssdb-cli tools/ssdb_cli \\\n\t\ttools/ssdb-cli.cpy tools/ssdb-dump \\\n\t\ttools/ssdb-repair \\\n\t\t${PREFIX}\n\tcp -rf deps/cpy ${PREFIX}/deps\n\tchmod 755 ${PREFIX}\n\trm -f ${PREFIX}/Makefile\n\nclean:\n\trm -f *.exe.stackdump\n\trm -rf api/cpy/_cpy_\n\trm -f api/python/SSDB.pyc\n\trm -rf db_test\n\tcd deps/cpy; ${MAKE} clean\n\tcd src/util; ${MAKE} clean\n\tcd src/ssdb; ${MAKE} clean\n\tcd src/net; ${MAKE} clean\n\tcd src; ${MAKE} clean\n\tcd tools; ${MAKE} clean\n\nclean_all: clean\n\tcd \"${LEVELDB_PATH}\"; ${MAKE} clean\n\trm -f ${JEMALLOC_PATH}/Makefile\n\tcd \"${SNAPPY_PATH}\"; ${MAKE} clean\n\trm -f ${SNAPPY_PATH}/Makefile\n\t\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3046875,
          "content": "# SSDB - A Redis compatible NoSQL database stored on disk\n\n[![Author](https://img.shields.io/badge/author-@ideawu-blue.svg?style=flat)](http://www.ideawu.net/) [![Platform](https://img.shields.io/badge/platform-Linux,%20BSD,%20OS%20X,%20Windows-green.svg?style=flat)](https://github.com/ideawu/ssdb) [![NoSQL](https://img.shields.io/badge/db-NoSQL-pink.svg?tyle=flat)](https://github.com/ideawu/ssdb) [![License](https://img.shields.io/badge/license-New%20BSD-yellow.svg?style=flat)](LICENSE)\n\n\nSSDB is a high performace key-value(key-string, key-zset, key-hashmap) NoSQL database, __an alternative to Redis__.\n\nSSDB is stable, production-ready and is widely used by many Internet companies including QIHU 360.\n\n## Features\n\n* LevelDB client-server support, written in C/C++\n* Designed to store collection data\n* Persistent key-value, key-zset, key-map('hashmap'), key-list storage\n* Redis clients are supported\n* Client API supports including C++, PHP, Python, Cpy, Java, nodejs, Ruby, Go([see all](http://ssdb.io/docs/clients.html))\n* Persistent queue service\n* **Replication(master-slave), load balance**\n* GUI administration tool([phpssdbadmin](https://github.com/ssdb/phpssdbadmin))\n* Built-in CLI nagios self-checks\n\n## PHP client API example\n\n```php\n<?php\nrequire_once('SSDB.php');\n$ssdb = new SimpleSSDB('127.0.0.1', 8888);\n$resp = $ssdb->set('key', '123');\n$resp = $ssdb->get('key');\necho $resp; // output: 123\n```\n\n[More...](http://ssdb.io/docs/php/)\n\n\n## Who's using SSDB?\n\n[SSDB users...](http://ssdb.io/docs/users.html)\n\n\n## Documentation\n\n* [View online](http://ssdb.io/docs/)\n* [Contribute to SSDB documentation project](https://github.com/ideawu/ssdb-docs)\n\n## Compile and Install\n\n```sh\n$ wget --no-check-certificate https://github.com/ideawu/ssdb/archive/master.zip\n$ unzip master\n$ cd ssdb-master\n$ make\n$ #optional, install ssdb in /usr/local/ssdb\n$ sudo make install\n\n# start master\n$ ./ssdb-server ssdb.conf\n\n# or start as daemon\n$ ./ssdb-server -d ssdb.conf\n\n# ssdb command line\n$ ./tools/ssdb-cli -p 8888\n\n# stop ssdb-server\n$ ./ssdb-server ssdb.conf -s stop\n # for older version\n$ kill `cat ./var/ssdb.pid`\n```\n\nSee [Compile and Install wiki](http://ssdb.io/docs/install.html)\n\n## Performance\n\n### Typical performance\n\nTotal 1000 requests.\n\n```\nwriteseq  :    0.546 ms/op      178.7 MB/s\nwriterand :    0.519 ms/op      188.1 MB/s\nreadseq   :    0.304 ms/op      321.6 MB/s\nreadrand  :    0.310 ms/op      315.0 MB/s\n```\n\n### SSDB vs Redis\n\n![Benchmark vs Redis](http://ssdb.io/ssdb-vs-redis.png?github)\n\n[View full SSDB vs Redis benchmark charts...](http://ssdb.io/)\n\n### Concurrency benchmark\n\n```\n========== set ==========\nqps: 44251, time: 0.226 s\n========== get ==========\nqps: 55541, time: 0.180 s\n========== del ==========\nqps: 46080, time: 0.217 s\n========== hset ==========\nqps: 42338, time: 0.236 s\n========== hget ==========\nqps: 55601, time: 0.180 s\n========== hdel ==========\nqps: 46529, time: 0.215 s\n========== zset ==========\nqps: 37381, time: 0.268 s\n========== zget ==========\nqps: 41455, time: 0.241 s\n========== zdel ==========\nqps: 38792, time: 0.258 s\n```\n\nRun on a 2013 MacBook Pro 13 inch with Retina display.\n\n## Architecture\n\n![ssdb architecture](http://ssdb.io/ssdb.png)\n\n## Windows executable\n\nDownload ssdb-server.exe from here: https://github.com/ideawu/ssdb-bin\n\n\n## SSDB library for iOS\n\n\tmake ios\n\t# ls ios/\n\tinclude/ libleveldb-ios.a libsnappy-ios.a libssdb-ios.a libutil-ios.a\n\nDrag the static libraies files into your iOS project. Then add `ios/include` to your iOS project's __Header Search Paths__, which is set in __Build Settings__.\n\n## Links\n\n* [Author's homepage](http://www.ideawu.com/blog/)\n* [Cpy Scripting Language](https://github.com/ideawu/cpy)\n* [Google LevelDB](https://code.google.com/p/leveldb/)\n* [Lua ssdb client driver for the ngx_lua](https://github.com/LazyZhu/lua-resty-ssdb)\n* [Yet another ssdb client for Python](https://github.com/ifduyue/pyssdb)\n* [SSDB 中文文档](http://www.ideawu.net/blog/category/ssdb)\n\n## Changes made to LevelDB\n\nSee [Changes-Made-to-LevelDB wiki](https://github.com/ideawu/ssdb/wiki/Changes-Made-to-LevelDB)\n\n## LICENSE\n\nSSDB is licensed under [New BSD License](http://opensource.org/licenses/BSD-3-Clause), a very flexible license to use.\n\n## Authors\n\n@ideawu(wuzuyang1@gmail.com)\n\n## Thanks\n\n* 刘建辉, liujianhui@gongchang.com\n* wendal(陈镇铖), wendal1985@gmail.com, http://wendal.net \n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 3.5791015625,
          "content": "#!/bin/sh\nBASE_DIR=`pwd`\nJEMALLOC_PATH=\"$BASE_DIR/deps/jemalloc-4.1.0\"\nLEVELDB_PATH=\"$BASE_DIR/deps/leveldb-1.20\"\nSNAPPY_PATH=\"$BASE_DIR/deps/snappy-1.1.0\"\n\n# dependency check\nwhich autoconf > /dev/null 2>&1\nif [ \"$?\" -ne 0 ]; then\n\techo \"\"\n\techo \"ERROR! autoconf required! install autoconf first\"\n\techo \"\"\n\texit 1\nfi\n\nif test -z \"$TARGET_OS\"; then\n\tTARGET_OS=`uname -s`\nfi\nif test -z \"$MAKE\"; then\n\tMAKE=make\nfi\nif test -z \"$CC\"; then\n\tCC=gcc\nfi\nif test -z \"$CXX\"; then\n\tCXX=g++\nfi\n\ncase \"$TARGET_OS\" in\n    Darwin)\n        #PLATFORM_CLIBS=\"-pthread\"\n\t\t#PLATFORM_CFLAGS=\"\"\n        ;;\n    Linux)\n        PLATFORM_CLIBS=\"-pthread -lrt\"\n        ;;\n    OS_ANDROID_CROSSCOMPILE)\n        PLATFORM_CLIBS=\"-pthread\"\n        SNAPPY_HOST=\"--host=i386-linux\"\n        ;;\n    CYGWIN_*)\n        PLATFORM_CLIBS=\"-lpthread\"\n        ;;\n    SunOS)\n        PLATFORM_CLIBS=\"-lpthread -lrt\"\n        ;;\n    FreeBSD)\n        PLATFORM_CLIBS=\"-lpthread\"\n\t\tMAKE=gmake\n        ;;\n    NetBSD)\n        PLATFORM_CLIBS=\"-lpthread -lgcc_s\"\n        ;;\n    OpenBSD)\n        PLATFORM_CLIBS=\"-pthread\"\n        ;;\n    DragonFly)\n        PLATFORM_CLIBS=\"-lpthread\"\n        ;;\n    HP-UX)\n        PLATFORM_CLIBS=\"-pthread\"\n        ;;\n    *)\n        echo \"Unknown platform!\" >&2\n        exit 1\nesac\n\n\nDIR=`pwd`\ncd $SNAPPY_PATH\nif [ ! -f Makefile ]; then\n\techo \"\"\n\techo \"##### building snappy... #####\"\n\t./configure $SNAPPY_HOST\n\t# FUCK! snappy compilation doesn't work on some linux!\n\tfind . | xargs touch\n\tmake\n\techo \"##### building snappy finished #####\"\n\techo \"\"\nfi\ncd \"$DIR\"\n\n\ncase \"$TARGET_OS\" in\n\tCYGWIN*|FreeBSD|OS_ANDROID_CROSSCOMPILE)\n\t\techo \"not using jemalloc on $TARGET_OS\"\n\t;;\n\t*)\n\t\tDIR=`pwd`\n\t\tcd $JEMALLOC_PATH\n\t\tif [ ! -f Makefile ]; then\n\t\t\techo \"\"\n\t\t\techo \"##### building jemalloc... #####\"\n\t\t\tsh ./autogen.sh\n\t\t\t./configure\n\t\t\tmake\n\t\t\techo \"##### building jemalloc finished #####\"\n\t\t\techo \"\"\n\t\tfi\n\t\tcd \"$DIR\"\n\t;;\nesac\n\n\nrm -f src/version.h\necho \"#ifndef SSDB_DEPS_H\" >> src/version.h\necho \"#ifndef SSDB_VERSION\" >> src/version.h\necho \"#define SSDB_VERSION \\\"`cat version`\\\"\" >> src/version.h\necho \"#endif\" >> src/version.h\necho \"#endif\" >> src/version.h\ncase \"$TARGET_OS\" in\n\tCYGWIN*|FreeBSD)\n\t;;\n\tOS_ANDROID_CROSSCOMPILE)\n        echo \"#define OS_ANDROID 1\" >> src/version.h\n\t;;\n\t*)\n\t\techo \"#ifndef IOS\" >> src/version.h\n\t\techo \"#include <stdlib.h>\" >> src/version.h\n\t\techo \"#include <jemalloc/jemalloc.h>\" >> src/version.h\n\t\techo \"#endif\" >> src/version.h\n\t;;\nesac\n\nrm -f build_config.mk\necho CC=$CC >> build_config.mk\necho CXX=$CXX >> build_config.mk\necho \"MAKE=$MAKE\" >> build_config.mk\necho \"LEVELDB_PATH=$LEVELDB_PATH\" >> build_config.mk\necho \"JEMALLOC_PATH=$JEMALLOC_PATH\" >> build_config.mk\necho \"SNAPPY_PATH=$SNAPPY_PATH\" >> build_config.mk\n\necho \"CFLAGS=\" >> build_config.mk\necho \"CFLAGS = -DNDEBUG -D__STDC_FORMAT_MACROS -Wall -O2 -Wno-sign-compare\" >> build_config.mk\necho \"CFLAGS += ${PLATFORM_CFLAGS}\" >> build_config.mk\necho \"CFLAGS += -I \\\"$LEVELDB_PATH/include\\\"\" >> build_config.mk\n\necho \"CLIBS=\" >> build_config.mk\necho \"CLIBS += \\\"$LEVELDB_PATH/out-static/libleveldb.a\\\"\" >> build_config.mk\necho \"CLIBS += \\\"$SNAPPY_PATH/.libs/libsnappy.a\\\"\" >> build_config.mk\n\ncase \"$TARGET_OS\" in\n\tCYGWIN*|FreeBSD|OS_ANDROID_CROSSCOMPILE)\n\t;;\n\t*)\n\t\techo \"CLIBS += \\\"$JEMALLOC_PATH/lib/libjemalloc.a\\\"\" >> build_config.mk\n\t\techo \"CFLAGS += -I \\\"$JEMALLOC_PATH/include\\\"\" >> build_config.mk\n\t;;\nesac\n\necho \"CLIBS += ${PLATFORM_CLIBS}\" >> build_config.mk\n\n\nif test -z \"$TMPDIR\"; then\n    TMPDIR=/tmp\nfi\n\ng++ -x c++ - -o $TMPDIR/ssdb_build_test.$$ 2>/dev/null <<EOF\n\t#include <unordered_map>\n\tint main() {}\nEOF\nif [ \"$?\" = 0 ]; then\n\techo \"CFLAGS += -DNEW_MAC\" >> build_config.mk\nfi\n\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssdb.conf",
          "type": "blob",
          "size": 1.0546875,
          "content": "# ssdb-server config\n# MUST indent by TAB!\n\n# absolute path, or relative to path of this file, directory must exists\nwork_dir = ./var\npidfile = ./var/ssdb.pid\n\nserver:\n\t# specify an ipv6 address to enable ipv6 support\n\t# ip: ::1\n\tip: 127.0.0.1\n\tport: 8888\n\t# bind to public ip\n\t#ip: 0.0.0.0\n\t# format: allow|deny: all|ip_prefix\n\t# multiple allows or denys is supported\n\t#deny: all\n\t#allow: 127.0.0.1\n\t#allow: 192.168\n\t# auth password must be at least 32 characters\n\t#auth: very-strong-password\n\t#readonly: yes\n\t# in ms, to log slowlog with WARN level\n\t#slowlog_timeout: 5\n\nreplication:\n\tbinlog: yes\n\t# Limit sync speed to *MB/s, -1: no limit\n\tsync_speed: -1\n\tslaveof:\n\t\t# to identify a master even if it moved(ip, port changed)\n\t\t# if set to empty or not defined, ip:port will be used.\n\t\t#id: svc_2\n\t\t# sync|mirror, default is sync\n\t\t#type: sync\n\t\t#host: localhost\n\t\t#port: 8889\n\nlogger:\n\tlevel: debug\n\toutput: log.txt\n\trotate:\n\t\tsize: 1000000000\n\nleveldb:\n\t# in MB\n\tcache_size: 500\n\t# in MB\n\twrite_buffer_size: 64\n\t# in MB/s\n\tcompaction_speed: 1000\n\t# yes|no\n\tcompression: yes\n\n\n"
        },
        {
          "name": "ssdb_slave.conf",
          "type": "blob",
          "size": 0.75,
          "content": "# ssdb-server config for slave\n# MUST indent by TAB!\n\n# relative to path of this file, directory must exists\nwork_dir = ./var_slave\npidfile = ./var_slave/ssdb.pid\n\nserver:\n\tip: 127.0.0.1\n\tport: 8889\n\t#readonly: yes\n\nreplication:\n\tbinlog: yes\n\t# Limit sync speed to *MB/s, -1: no limit\n\tsync_speed: -1\n\tslaveof:\n\t\t# to identify a master even if it moved(ip, port changed)\n\t\t# if set to empty or not defined, \"ip|port\" will be used (e.g. \"10.0.0.1|8888\").\n\t\tid: svc_1\n\t\t# sync|mirror, default is sync\n\t\ttype: sync\n\t\thost: localhost\n\t\tport: 8888\n\t\t#auth: password\n\nlogger:\n\tlevel: debug\n\toutput: log_slave.txt\n\trotate:\n\t\tsize: 1000000000\n\nleveldb:\n\t# in MB\n\tcache_size: 500\n\t# in MB\n\twrite_buffer_size: 64\n\t# in MB/s\n\tcompaction_speed: 1000\n\t# yes|no\n\tcompression: yes\n\n\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "blob",
          "size": 0.005859375,
          "content": "1.9.8\n"
        }
      ]
    }
  ]
}