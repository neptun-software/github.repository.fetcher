{
  "metadata": {
    "timestamp": 1736566088249,
    "page": 80,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oatpp/oatpp",
      "stars": 8003,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.49609375,
          "content": "# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Mac\n\n**/.DS_Store\n\n# idea\n.idea/\ncmake-build-debug/\ncmake-build-debug-visual-studio/\ncmake-build-debug-wsl/\n\n# local build\nbuild*/\n_build*/\n\n# Docker\nDockerfile\ndocker-compose.yaml\ndocker-compose.yml\n\n# VS\n.vs/\nout/\nCMakeSettings.json\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.576171875,
          "content": "cmake_minimum_required(VERSION 3.20 FATAL_ERROR)\n\nfile(STRINGS \"${CMAKE_CURRENT_LIST_DIR}/src/oatpp/Environment.hpp\" OATPP_VERSION_MACRO REGEX \"#define OATPP_VERSION \\\"[0-9]+.[0-9]+.[0-9]+\\\"$\")\nstring(REGEX REPLACE \"#define OATPP_VERSION \\\"([0-9]+.[0-9]+.[0-9]+)\\\"$\" \"\\\\1\" oatpp_VERSION \"${OATPP_VERSION_MACRO}\")\n\n###################################################################################################\n## These variables are passed to oatpp-module-install.cmake script\n## use these variables to configure module installation\n\nset(OATPP_THIS_MODULE_NAME oatpp) ## name of the module (also name of folders in installation dirs)\nset(OATPP_THIS_MODULE_VERSION ${oatpp_VERSION}) ## version of the module (also sufix of folders in installation dirs)\n\n###################################################################################################\n\nproject(oatpp VERSION ${OATPP_THIS_MODULE_VERSION} LANGUAGES CXX)\n\noption(BUILD_SHARED_LIBS \"Build shared libraries\" OFF)\noption(OATPP_INSTALL \"Create installation target for oat++\" ON)\noption(OATPP_BUILD_TESTS \"Create test target for oat++\" ON)\noption(OATPP_LINK_TEST_LIBRARY \"Link oat++ test library\" ON)\noption(OATPP_LINK_ATOMIC \"Link atomic library for other platform than MSVC|MINGW|APPLE|FreeBSD\" ON)\noption(OATPP_MSVC_LINK_STATIC_RUNTIME \"MSVC: Link with static runtime (/MT and /MTd).\" OFF)\n\n###################################################################################################\n## COMPILATION CONFIG #############################################################################\n###################################################################################################\n\nif(OATPP_LINK_TEST_LIBRARY)\n\tset(OATPP_THIS_MODULE_LIBRARIES oatpp oatpp-test) ## list of libraries to find when find_package is called\n\tset(OATPP_THIS_MODULE_TARGETS oatpp oatpp-test) ## list of targets to install\n\tset(OATPP_THIS_MODULE_DIRECTORIES oatpp oatpp-test) ## list of directories to install\nelse()\n\tset(OATPP_THIS_MODULE_LIBRARIES oatpp) ## list of libraries to find when find_package is called\n\tset(OATPP_THIS_MODULE_TARGETS oatpp) ## list of targets to install\n\tset(OATPP_THIS_MODULE_DIRECTORIES oatpp) ## list of directories to install\nendif()\n\noption(OATPP_DISABLE_ENV_OBJECT_COUNTERS \"Disable object counting for Release builds for better performance\" OFF)\noption(OATPP_DISABLE_POOL_ALLOCATIONS \"This will make oatpp::base::memory::MemoryPool, method obtain and free call new and delete directly\" OFF)\n\nset(OATPP_THREAD_HARDWARE_CONCURRENCY \"AUTO\" CACHE STRING \"Predefined value for function oatpp::concurrency::Thread::getHardwareConcurrency()\")\n\noption(OATPP_COMPAT_BUILD_NO_THREAD_LOCAL \"Disable 'thread_local' feature\" OFF)\noption(OATPP_COMPAT_BUILD_NO_SET_AFFINITY \"No 'pthread_setaffinity_np' method\" OFF)\n\noption(OATPP_DISABLE_LOGV \"DISABLE logs priority V\" OFF)\noption(OATPP_DISABLE_LOGD \"DISABLE logs priority D\" OFF)\noption(OATPP_DISABLE_LOGI \"DISABLE logs priority I\" OFF)\noption(OATPP_DISABLE_LOGW \"DISABLE logs priority W\" OFF)\noption(OATPP_DISABLE_LOGE \"DISABLE logs priority E\" OFF)\n\n## Print config ##################################################################################\n\nmessage(\"\\n############################################################################\")\nmessage(\"## oatpp module compilation config:\\n\")\n\nmessage(\"OATPP_DISABLE_ENV_OBJECT_COUNTERS=${OATPP_DISABLE_ENV_OBJECT_COUNTERS}\")\nmessage(\"OATPP_THREAD_HARDWARE_CONCURRENCY=${OATPP_THREAD_HARDWARE_CONCURRENCY}\")\nmessage(\"OATPP_COMPAT_BUILD_NO_THREAD_LOCAL=${OATPP_COMPAT_BUILD_NO_THREAD_LOCAL}\")\n\n## Set definitions ###############################################################################\n\nif(OATPP_DISABLE_ENV_OBJECT_COUNTERS)\n    add_definitions(-DOATPP_DISABLE_ENV_OBJECT_COUNTERS)\nendif()\n\nif(OATPP_DISABLE_POOL_ALLOCATIONS)\n    add_definitions (-DOATPP_DISABLE_POOL_ALLOCATIONS)\n    message(\"WARNING: OATPP_DISABLE_POOL_ALLOCATIONS option is deprecated and has no effect.\")\nendif()\n\nset(AUTO_VALUE AUTO)\nif(NOT OATPP_THREAD_HARDWARE_CONCURRENCY STREQUAL AUTO_VALUE)\n    add_definitions (-DOATPP_THREAD_HARDWARE_CONCURRENCY=${OATPP_THREAD_HARDWARE_CONCURRENCY})\nendif()\n\nif(OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT)\n    add_definitions (-DOATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT=${OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT})\n    message(\"WARNING: OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT option is deprecated and has no effect.\")\nendif()\n\nif(OATPP_COMPAT_BUILD_NO_THREAD_LOCAL)\n    add_definitions(-DOATPP_COMPAT_BUILD_NO_THREAD_LOCAL)\nendif()\n\nif(OATPP_COMPAT_BUILD_NO_SET_AFFINITY)\n    add_definitions(-DOATPP_COMPAT_BUILD_NO_SET_AFFINITY)\nendif()\n\nif(OATPP_DISABLE_LOGV)\n    add_definitions(-DOATPP_DISABLE_LOGV)\nendif()\n\nif(OATPP_DISABLE_LOGD)\n    add_definitions(-DOATPP_DISABLE_LOGD)\nendif()\n\nif(OATPP_DISABLE_LOGI)\n    add_definitions(-DOATPP_DISABLE_LOGI)\nendif()\n\nif(OATPP_DISABLE_LOGW)\n    add_definitions(-DOATPP_DISABLE_LOGW)\nendif()\n\nif(OATPP_DISABLE_LOGE)\n    add_definitions(-DOATPP_DISABLE_LOGE)\nendif()\n\nif(CMAKE_COMPILER_IS_GNUCXX AND ${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS 5.0)\n    add_definitions(-DOATPP_DISABLE_STD_PUT_TIME)\nendif()\n\nmessage(\"\\n############################################################################\\n\")\n\n###################################################################################################\n\nmessage(\"oatpp version: '${OATPP_THIS_MODULE_VERSION}'\")\n\ninclude(cmake/compiler-flags.cmake)\n\ninclude(cmake/msvc-runtime.cmake)\nconfigure_msvc_runtime()\n\ninclude(cmake/project.cmake)\n\nadd_subdirectory(src)\n\nif(OATPP_BUILD_TESTS)\n    enable_testing()\n    add_subdirectory(test)\nendif()\n\n\ninclude(cpack.cmake)\n\n# This must always be last!\ninclude( CPack )\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.271484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at oatpp.io@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.591796875,
          "content": "# Contributing to Oat++\n\nThank you for your interest in the project, and for taking time to contribute.  \n\n## How to contribute\n\nAll kind of contributions are very welcome.\n\n### Join the community\n\n- Join discussion on **Gitter**. [oat++ framework/Lobby](https://gitter.im/oatpp-framework/Lobby)\n- Follow us on **Twitter** for latest news. [@oatpp_io](https://twitter.com/oatpp_io)\n- Join community on **Reddit**. [r/oatpp](https://www.reddit.com/r/oatpp/)\n\n### Try to use Oat++\n\n- Grab example project from the [list of examples](https://github.com/oatpp/oatpp-examples)\n- Take starter project and try to build something on top of it\n  - [Starter project with Simple API](https://github.com/oatpp/oatpp-starter)\n  - [Starter project with Async API](https://github.com/oatpp/oatpp-starter-async)\n- Try to reproduce benchmark results [2M WebSockets](https://github.com/oatpp/benchmark-websocket)\n\n### Open an issue\n\nAsk question or report a bug [here](https://github.com/oatpp/oatpp/issues)\n\n### Create a pull request\n\nAll kind of [pull requests](https://github.com/oatpp/oatpp/pulls) are very welcome.\nEven if it's just fixing typos, or adding documentation.\n\n*Please make sure your pull requests confirming to overall project code-style.*  \n*Please make sure to notify the community if you are working on an issue so we don't duplicate work!*\n\n### Create Oat++ extension module\n\nUse [oatpp-starter-module](https://github.com/oatpp/oatpp-starter-module) to create oatpp extensions.\n\n## Code of Conduct\n\nPlease follow [Code of Conduct](CODE_OF_CONDUCT.md) at all times.  \nPlease report unacceptable behavior to oatpp.io@gmail.com.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.2060546875,
          "content": "\n[![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine/)\n\n---\n\n<div align=\"center\">\n  <img alt=\"Oat++ Logo\" src=\"https://raw.githubusercontent.com/lganzzzo/oatpp-website-res/master/logo_x400.png\" width=\"200px\"/>\n</div>\n<p>&nbsp;</p>\n\n<p align=\"center\">\n  <a href=\"https://dev.azure.com/lganzzzo/lganzzzo/_build?definitionId=1\">\n    <img src=\"https://dev.azure.com/lganzzzo/lganzzzo/_apis/build/status/oatpp.oatpp\" alt=\"oatpp build status\" />\n  </a>\n  <a href=\"https://gitter.im/oatpp-framework/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\">\n    <img src=\"https://badges.gitter.im/oatpp-framework/Lobby.svg\" alt=\"Join the chat at https://gitter.im/oatpp-framework/Lobby\" />\n  </a>\n</p>\n\n# Oat++ \n\nOat++ is a modern Web Framework for C++. \nIt's fully loaded and contains all necessary components for effective production level development. \nIt's also light and has a small memory footprint.\n\n## News  \n\n- ⚠️ Attention! Oat++ main repo is bumping its version to 1.4.0. While 1.4.0 is **IN DEVELOPMENT** use `1.3.0-latest` tag.\n- Follow the [changelog](https://github.com/oatpp/oatpp/blob/master/changelog/1.4.0.md) for news and features in version `1.4.0`.\n- Consider supporting Oat++ via the [GitHub sponsors](https://github.com/sponsors/oatpp) page.\n\n### New ORM integrations:\n\n- [oatpp-mysql](https://github.com/Atarasin/oatpp-mysql) by [@Atarasin](https://github.com/Atarasin)\n- [oatpp-mariadb](https://github.com/lilltiger/oatpp-mariadb) by [@lilltiger](https://github.com/lilltiger)\n\n## Start\n\n- [Get Started](https://oatpp.io/docs/start/)\n- [Build For Unix/Linux](https://oatpp.io/docs/installation/unix-linux/)\n- [Build For Windows](https://oatpp.io/docs/installation/windows/)\n- [Examples](#examples)\n\n## Support the Project\nMaintaining and developing this project requires significant time and resources. If you enjoy using it and want to support its continued development, please consider supporting us through GitHub Sponsors.\n\n**[Become a Sponsor on GitHub](https://github.com/sponsors/oatpp)** \n\nEvery contribution, big or small, helps us keep improving and maintaining the project.\nThank you for your support!\n\n## About\n\n- [Website](https://oatpp.io/)\n- [Supported Platforms](https://oatpp.io/supported-platforms/)\n- Latest Benchmarks: [5 Million WebSockets](https://oatpp.io/benchmark/websocket/5-million/)\n- [Contributing to Oat++](CONTRIBUTING.md)\n\n\n\n\n## Quick Overview\n\n**Shortcuts:**\n\n- [Oat++ High Level Overview](https://oatpp.io/docs/start/high-level-overview/) - Get a quick overview of Oat++ features.\n- [Example Project](https://github.com/oatpp/example-crud) - A complete example of a \"CRUD\" service (UserService) built with Oat++. REST + Swagger-UI + SQLite.\n\n### Build Powerful API And Document It With Swagger-UI\n\nSee [ApiController](https://oatpp.io/docs/components/api-controller/) for more details.\n\n```cpp\nENDPOINT_INFO(getUserById) {\n  info->summary = \"Get one User by userId\";\n\n  info->addResponse<Object<UserDto>>(Status::CODE_200, \"application/json\");\n  info->addResponse<Object<StatusDto>>(Status::CODE_404, \"application/json\");\n  info->addResponse<Object<StatusDto>>(Status::CODE_500, \"application/json\");\n\n  info->pathParams[\"userId\"].description = \"User Identifier\";\n}\nENDPOINT(\"GET\", \"users/{userId}\", getUserById,\n         PATH(Int32, userId))\n{\n  return createDtoResponse(Status::CODE_200, m_userService.getUserById(userId));\n}\n``` \n\n### Access Databases And Keep Your Data Consistent\n\nSee [Oat++ ORM](https://oatpp.io/docs/components/orm/) for more details.\n\n```cpp\nQUERY(createUser,\n      \"INSERT INTO users (username, email, role) VALUES (:username, :email, :role);\",\n      PARAM(oatpp::String, username), \n      PARAM(oatpp::String, email), \n      PARAM(oatpp::Enum<UserRoles>::AsString, role))\n```\n\n## Join Our Community\n\n- [Gitter](https://gitter.im/oatpp-framework/Lobby) - Talk to Oat++ developers and to other Oat++ users.\n- [Twitter](https://twitter.com/oatpp_io) - Follow Oat++ on Twitter.\n- [Reddit](https://www.reddit.com/r/oatpp/) - Follow Oat++ subreddit.\n- [StackOverflow (new)](https://stackoverflow.com/questions/tagged/oat%2b%2b) - Post a Question.\n\n## Examples\n\n### REST-API\n\n- [REST Service](https://github.com/oatpp/example-crud) - A complete example of a \"CRUD\" service (UserService) built with Oat++. REST + Swagger-UI + SQLite.\n- [REST Client](https://github.com/oatpp/example-api-client) - Example project of how-to use Retrofit-like client wrapper (ApiClient) and how it works.\n\n### WebSocket\n\n- [Can Chat](https://github.com/lganzzzo/canchat) - Feature-complete rooms-based chat for tens of thousands users. Client plus Server.\n- [WebSocket](https://github.com/oatpp/example-websocket) - Collection of oatpp WebSocket examples.\n- [YUV Websocket Stream](https://github.com/oatpp/example-yuv-websocket-stream) - Example project how-to create a YUV image stream from a V4L device (i.E. Webcam) using websockets.\n\n### Databases\n\n- [SQLite](https://github.com/oatpp/example-crud) - A complete example of a \"CRUD\" service. REST + Swagger-UI + SQLite.\n- [PostgreSQL](https://github.com/oatpp/example-postgresql) - Example of a production-grade entity service storing information in PostgreSQL. With Swagger-UI and configuration profiles.\n- [MongoDB](https://github.com/oatpp/example-mongodb) - Example project how to work with MongoDB using **oatpp-mongo** mondule. Project is a web-service with basic CRUD and Swagger-UI.\n \n### IoT\n\n- [Example-IoT-Hue](https://github.com/oatpp/example-iot-hue-ssdp) - Example project how-to create an Philips Hue compatible REST-API that is discovered and controllable by Hue compatible Smart-Home devices like Amazon Alexa or Google Echo.\n\n### Streaming\n\n- [HTTP Live Streaming Server](https://github.com/oatpp/example-hls-media-stream) - Example project on how to build an HLS-streaming server using Oat++ asynchronous API.\n- [YUV Websocket Stream](https://github.com/oatpp/example-yuv-websocket-stream) - Example project how-to create a YUV image stream from a V4L device (i.E. Webcam) using websockets.\n\n### TLS\n\n- [TLS With Libressl](https://github.com/oatpp/example-libressl) - Example project how-to setup secure connection and serve via HTTPS.\n\n### Microservices\n\n- [Consul Integration](https://github.com/oatpp/example-consul) - Example project on how to use [oatpp::consul::Client](https://oatpp.io/api/latest/oatpp-consul/rest/Client/). Consul integration.\n- [Microservices](https://github.com/oatpp/example-microservices) - Example project on how to build microservices with Oat++, \nand example on how to consolidate those microservices using [monolithization](https://oatpp.io/docs/monolithization/) technique.\n\n### Asynchronous API\n\n- [Async Service](https://github.com/oatpp/example-async-api) - Example project on how to use asynchronous API to handle a large number of simultaneous connections.\n\n## Frequently Asked Questions\n\n### Q: \"Oat++\" name?\n\n- \"Oat\" is something light, organic, and green. It can be easily cooked and consumed with no effort. \n- \"++\" gives a hint that it is \"something\" for C++.\n\n### Q: What is the main area of Oat++ application?\n\nOat++ is used for many different purposes, from building REST APIs that run on embedded devices to \nbuilding microservices and highly-loaded cloud applications.\n\nBut the majority of use cases appears to be in **IoT** and **Robotics**.\n\n### Q: How portable is Oat++?\n\nTheoretically, Oat++ can be **easily** ported everywhere where you have **threads** and **network stack**.\nWith an additional comparably small effort, it can be ported almost everywhere depending on how\nmuch you strip it and what would be the final binary size.\n\nSee [supported platforms](https://oatpp.io/supported-platforms/) for additional info.\n\n### Q: What is the size of a minimal Oat++ application?\n\nAbout **1Mb**, depending on C/C++ std-lib and oatpp version.\n\n### Q: Which Oat++ API to choose, Simple or Async?\n\nAlways choose **Simple API** wherever possible. Simple API is more developed and makes the code cleaner.\n\nAsync API is designed for small, specific tasks that run at high concurrency levels ex.:\n- Serving file downloads to a large number of concurrent users (1K users and more).\n- Streaming to a large number of clients (1K or more).\n- Websocket Chat servers.\n\nFor all other purposes use simple API.\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 1.85546875,
          "content": "# Starter pipeline\n# Start with a minimal pipeline that you can customize to build and deploy your code.\n# Add steps that build, run tests, deploy, and more:\n# https://aka.ms/yaml\n\njobs:\n- job: ubuntu_20_04_mem_pool_on\n  displayName: 'Build - Ubuntu 20.04'\n  continueOnError: false\n  pool:\n    vmImage: 'ubuntu-20.04'\n  workspace:\n    clean: all\n  steps:\n    - script: |\n        mkdir build\n    - script: |\n        cmake -DCMAKE_BUILD_TYPE=Release ..\n        make\n      displayName: 'CMake'\n      workingDirectory: build\n\n    - script: |\n        make test ARGS=\"-V\"\n      displayName: 'Test'\n      workingDirectory: build\n\n- job: ubuntu_22_04_mem_pool_on\n  displayName: 'Build - Ubuntu 22.04'\n  continueOnError: false\n  pool:\n    vmImage: 'ubuntu-22.04'\n  workspace:\n    clean: all\n  steps:\n    - script: |\n        mkdir build\n    - script: |\n        cmake -DCMAKE_BUILD_TYPE=Release ..\n        make\n      displayName: 'CMake'\n      workingDirectory: build\n\n    - script: |\n        make test ARGS=\"-V\"\n      displayName: 'Test'\n      workingDirectory: build\n\n- job: macOS_mem_pool_on\n  displayName: 'Build - macOS'\n  continueOnError: false\n  pool:\n    vmImage: 'macOS-latest'\n  workspace:\n    clean: all\n  steps:\n    - script: |\n        mkdir build\n    - script: |\n        cmake -DCMAKE_BUILD_TYPE=Release ..\n        make\n      displayName: 'CMake'\n      workingDirectory: build\n\n    - script: |\n        make test ARGS=\"-V\"\n      displayName: 'Test'\n      workingDirectory: build\n\n- job: windows_mem_pool_off\n  displayName: 'Build - Windows'\n  continueOnError: false\n  pool:\n    vmImage: 'windows-latest'\n  workspace:\n    clean: all\n  steps:\n    - script: |\n        MD build\n    - script: |\n        cmake ..\n        cmake --build .\n      displayName: 'CMake'\n      workingDirectory: build\n\n    - script: |\n        oatppAllTests.exe\n      displayName: 'Test'\n      workingDirectory: build\\test\\Debug\\\n"
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpack.cmake",
          "type": "blob",
          "size": 4.369140625,
          "content": "#\n# Packaging\n# https://cmake.org/cmake/help/latest/module/CPack.html\n#\n\nset( CPACK_PACKAGE_NAME ${PROJECT_NAME} )\nset( CPACK_PACKAGE_VENDOR \"Balluff\" )\nset( CPACK_PACKAGE_DESCRIPTION_SUMMARY \"oatpp - Light and powerful C++ web framework\" )\nset( CPACK_PACKAGE_HOMEPAGE_URL \"https://github.com/oatpp/oatpp\" )\nset( CPACK_PACKAGE_CONTACT      \"https://github.com/oatpp/oatpp\" )\nset( CPACK_PACKAGE_VERSION ${OATPP_THIS_MODULE_VERSION} ) \nset( CPACK_PACKAGE_INSTALL_DIRECTORY ${PROJECT_NAME} )\nget_filename_component( oatpp_root_dir ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY )\nset( CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/LICENSE\" )\nset( CPACK_RESOURCE_FILE_README \"${CMAKE_CURRENT_SOURCE_DIR}/README.md\" )\n\nset( CPACK_COMPONENT_Library_DISPLAY_NAME \"oatpp Library\" )\nset( CPACK_COMPONENT_Library_DESCRIPTION \"The oatpp binary library.\" )\nset( CPACK_COMPONENT_Library_REQUIRED 1 )\nset( CPACK_COMPONENT_Devel_DISPLAY_NAME \"oatpp Development Files\" )\nset( CPACK_COMPONENT_Devel_DESCRIPTION \"Development files for compiling against oatpp.\" )\nset( CPACK_COMPONENT_Devel_REQUIRED 0 )\n\nif( ${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\" )\n\n    if ( \"${CPACK_PACKAGE_ARCHITECTURE}\" STREQUAL \"\" )\n        # Note: the architecture should default to the local architecture, but it\n        # in fact comes up empty.  We call `uname -m` to ask the kernel instead.\n        EXECUTE_PROCESS( COMMAND uname -m COMMAND tr -d '\\n' OUTPUT_VARIABLE CPACK_PACKAGE_ARCHITECTURE )\n    endif()\n\n    set( CPACK_INCLUDE_TOPLEVEL_DIRECTORY 1 )\n    set( CPACK_PACKAGE_RELEASE 1 )\n\n\n    # RPM - https://cmake.org/cmake/help/latest/cpack_gen/rpm.html\n    set( CPACK_RPM_PACKAGE_RELEASE ${CPACK_PACKAGE_RELEASE} )\n    set( CPACK_RPM_PACKAGE_ARCHITECTURE ${CPACK_PACKAGE_ARCHITECTURE} )\n    set( CPACK_RPM_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION_SUMMARY} )\n    set( CPACK_RPM_PACKAGE_URL ${CPACK_PACKAGE_HOMEPAGE_URL} )\n    set( CPACK_RPM_PACKAGE_LICENSE \"APACHE-2\" )\n    set( CPACK_RPM_COMPONENT_INSTALL 1 )\n    set( CPACK_RPM_MAIN_COMPONENT \"Library\" )\n    set( CPACK_RPM_COMPRESSION_TYPE \"xz\" )\n    set( CPACK_RPM_PACKAGE_AUTOPROV 1 )\n    set( CPACK_RPM_PACKAGE_NAME \"${CPACK_PACKAGE_NAME}\" )\n    set( CPACK_RPM_FILE_NAME \"RPM-DEFAULT\" )\n\n    set( CPACK_RPM_Library_PACKAGE_ARCHITECTURE ${CPACK_PACKAGE_ARCHITECTURE} )\n    set( CPACK_RPM_Library_PACKAGE_NAME ${CPACK_PACKAGE_NAME} )\n    set( CPACK_RPM_Library_FILE_NAME\n         \"${CPACK_RPM_Library_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}.${CPACK_RPM_Library_PACKAGE_ARCHITECTURE}.rpm\" )\n    set( CPACK_RPM_Library_PACKAGE_SUMMARY ${CPACK_COMPONENT_Library_DESCRIPTION} )\n\n    set( CPACK_RPM_Devel_PACKAGE_REQUIRES \"cmake >= ${CMAKE_MINIMUM_REQUIRED_VERSION},oatpp >= ${CPACK_PACKAGE_VERSION}\" )\n    set( CPACK_RPM_Devel_PACKAGE_SUMMARY ${CPACK_COMPONENT_Devel_DESCRIPTION} )\n    set( CPACK_RPM_Devel_PACKAGE_ARCHITECTURE \"noarch\" )  # only contains headers and cmake files\n    set( CPACK_RPM_Devel_PACKAGE_NAME \"${CPACK_PACKAGE_NAME}-devel\" )\n    set( CPACK_RPM_Devel_FILE_NAME\n         \"${CPACK_RPM_Devel_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}.${CPACK_RPM_Devel_PACKAGE_ARCHITECTURE}.rpm\" )\n\n    # DEB - https://cmake.org/cmake/help/latest/cpack_gen/deb.html\n    set( CPACK_DEBIAN_PACKAGE_NAME \"${CPACK_PACKAGE_NAME}-dev\" )\n    set( CPACK_DEBIAN_PACKAGE_RELEASE ${CPACK_PACKAGE_RELEASE} )\n    set( CPACK_DEBIAN_PACKAGE_HOMEPAGE ${CPACK_PACKAGE_HOMEPAGE_URL} )\n    set( CPACK_DEB_COMPONENT_INSTALL 1 )\n    set( CPACK_DEBIAN_COMPRESSION_TYPE \"xz\")\n\n    if ( ${CPACK_PACKAGE_ARCHITECTURE} STREQUAL \"x86_64\" )\n        set( CPACK_DEBIAN_PACKAGE_ARCHITECTURE \"amd64\" )  # DEB doesn't always use the kernel's arch name\n    else()\n        set( CPACK_DEBIAN_PACKAGE_ARCHITECTURE ${CPACK_PACKAGE_ARCHITECTURE} )\n    endif()\n\n    set( CPACK_DEBIAN_FILE_NAME \"DEB-DEFAULT\" ) # Use default naming scheme\n    \n    set( CPACK_DEBIAN_LIBRARY_PACKAGE_NAME ${CPACK_PACKAGE_NAME} )\n    set( CPACK_DEBIAN_LIBRARY_PACKAGE_SHLIBDEPS 1 )\n    \n    set( CPACK_DEBIAN_DEVEL_PACKAGE_DEPENDS \"cmake (>= ${CMAKE_MINIMUM_REQUIRED_VERSION}), oatpp (>= ${CPACK_PACKAGE_VERSION})\" )\n    set( CPACK_DEBIAN_DEVEL_PACKAGE_NAME \"${CPACK_PACKAGE_NAME}-dev\" )\n\nelseif( ${CMAKE_HOST_WIN32} )\n    set( CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL ON )\n    set( CPACK_NSIS_DISPLAY_NAME ${PROJECT_NAME} )\n    set( CPACK_NSIS_PACKAGE_NAME ${PROJECT_NAME} )\n    set( CPACK_NSIS_URL_INFO_ABOUT ${CPACK_PACKAGE_HOMEPAGE_URL} )\nendif()\n"
        },
        {
          "name": "fuzzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.4140625,
          "content": "path_classifiers:\n  generated:\n    - exclude: \"src/*\"  # don't tag oatpp sources as generated\n  library:\n    - exclude: \"src/*\"  # don't tag oatpp sources as library\n  template:\n    - exclude: \"src/*\"  # don't tag oatpp sources as template\n  test: \n    - exclude: \"src/*\"  # don't tag oatpp sources as test\n    - test              # tag test folder only as test\n  docs:\n    - README.md\n    - LICENSE.txt\nextraction:\n  cpp:\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utility",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}