{
  "metadata": {
    "timestamp": 1736565240968,
    "page": 41,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nghttp2/nghttp2",
      "stars": 4682,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 6.69140625,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveAssignments:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    true\nAlignConsecutiveBitFields:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    true\nAlignConsecutiveDeclarations:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    true\nAlignConsecutiveMacros:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    true\nAlignConsecutiveShortCaseStatements:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCaseColons: false\nAlignEscapedNewlines: Right\nAlignOperands:   Align\nAlignTrailingComments:\n  Kind:            Always\n  OverEmptyLines:  0\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowBreakBeforeNoexceptSpecifier: Never\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortCompoundRequirementOnASingleLine: true\nAllowShortEnumsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nAttributeMacros:\n  - __capability\nBinPackArguments: true\nBinPackParameters: true\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterExternBlock: false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakAdjacentStringLiterals: true\nBreakAfterAttributes: Leave\nBreakAfterJavaFieldAnnotations: false\nBreakArrays:     true\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: Always\nBreakBeforeBraces: Attach\nBreakBeforeInlineASMColon: OnlyMultiline\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\nBreakInheritanceList: BeforeColon\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 2\nContinuationIndentWidth: 2\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIfMacros:\n  - KJ_IF_MAYBE\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '.*'\n    Priority:        1\n    SortPriority:    0\n    CaseSensitive:   false\nIncludeIsMainRegex: '$'\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentCaseBlocks: false\nIndentCaseLabels: false\nIndentExternBlock: AfterExternBlock\nIndentGotoLabels: true\nIndentPPDirectives: AfterHash\nIndentRequiresClause: false\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nInsertBraces:    false\nInsertNewlineAtEOF: false\nInsertTrailingCommas: None\nIntegerLiteralSeparator:\n  Binary:          0\n  BinaryMinDigits: 0\n  Decimal:         0\n  DecimalMinDigits: 0\n  Hex:             0\n  HexMinDigits:    0\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nKeepEmptyLinesAtEOF: false\nLambdaBodyIndentation: Signature\nLineEnding:      DeriveLF\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPackConstructorInitializers: NextLine\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakScopeResolution: 500\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyIndentedWhitespace: 0\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nPPIndentWidth:   -1\nQualifierAlignment: Leave\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nRemoveParentheses: Leave\nRemoveSemicolon: false\nRequiresClausePosition: OwnLine\nRequiresExpressionIndentation: OuterScope\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSkipMacroDefinitionBody: false\nSortIncludes:    Never\nSortJavaStaticImport: Before\nSortUsingDeclarations: LexicographicNumeric\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeJsonColon: false\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   true\n  AfterOverloadedOperator: false\n  AfterPlacementOperator: true\n  AfterRequiresInClause: false\n  AfterRequiresInExpression: false\n  BeforeNonEmptyParentheses: false\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  Never\nSpacesInContainerLiterals: true\nSpacesInLineCommentPrefix:\n  Minimum:         1\n  Maximum:         -1\nSpacesInParens:  Never\nSpacesInParensOptions:\n  InCStyleCasts:   false\n  InConditionalStatements: false\n  InEmptyParentheses: false\n  Other:           false\nSpacesInSquareBrackets: false\nStandard:        Latest\nStatementAttributeLikeMacros:\n  - Q_EMIT\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\n  - munit_void_test_decl\n  - nghttp2_max_def\n  - nghttp2_min_def\nTabWidth:        8\nUseTab:          Never\nVerilogBreakBetweenInstancePorts: true\nWhitespaceSensitiveMacros:\n  - STRINGIZE\n  - PP_STRINGIZE\n  - BOOST_PP_STRINGIZE\n  - NS_SWIFT_NAME\n  - CF_SWIFT_NAME\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6337890625,
          "content": "# emacs backup file\n*~\n\n# autotools\n*.la\n*.lo\n*.m4\n*.o\n*.pyc\n.deps/\n.libs/\nINSTALL\nMakefile\nMakefile.in\nautom4te.cache/\ncompile\nconfig.guess\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfig.sub\nconfigure\ndepcomp\ninstall-sh\nlibtool\nltmain.sh\nmissing\nstamp-h1\ntest-driver\n\n# cmake\nCMakeCache.txt\nCMakeFiles/\ncmake_install.cmake\ninstall_manifest.txt\nCTestTestfile.cmake\nbuild.ninja\nrules.ninja\n.ninja_deps\n.ninja_log\nlib*.so\nlib*.so.*\nlib*.a\n\n# generated by \"make test\" with cmake\nTesting/\n\n# test logs generated by `make check`\n*.log\n*.trs\n\nlib/MSVC_obj/\n_VC_ROOT/\n.depend.MSVC\n*.pyd\n*.egg-info/\n\n# Build Directories\nbuild/\n\n# IDEs\ncmake-*\n.idea/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.416015625,
          "content": "[submodule \"third-party/mruby\"]\n\tpath = third-party/mruby\n\turl = https://github.com/mruby/mruby\n[submodule \"third-party/neverbleed\"]\n\tpath = third-party/neverbleed\n\turl = https://github.com/tatsuhiro-t/neverbleed.git\n\tbranch = nghttp2\n[submodule \"tests/munit\"]\n\tpath = tests/munit\n\turl = https://github.com/ngtcp2/munit\n[submodule \"third-party/urlparse\"]\n\tpath = third-party/urlparse\n\turl = https://github.com/ngtcp2/urlparse\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 2.603515625,
          "content": "nghttp2 project was started as a fork of spdylay project [1].  Both\nprojects were started by Tatsuhiro Tsujikawa, who is still the main\nauthor of these projects.  Meanwhile, we have many contributions, and\nwe are not here without them.  We sincerely thank you to all who made\na contribution.  Here is the all individuals/organizations who\ncontributed to nghttp2 and spdylay project at which we forked.  These\nnames are retrieved from git commit log.  If you have made a\ncontribution, but you are missing in the list, please let us know via\ngithub issues [2].\n\n[1] https://github.com/tatsuhiro-t/spdylay\n[2] https://github.com/nghttp2/nghttp2/issues\n\n--------\n\n187j3x1\nAdam Gołębiowski\nAlek Storm\nAlex Nalivko\nAlexandr Vlasov\nAlexandros Konstantinakis-Karmis\nAlexis La Goutte\nAlyssa Ross\nAmir Livneh\nAmir Pakdel\nAnders Bakken\nAndreas Pohl\nAndrew Penkrat\nAndy Davies\nAngus Gratton\nAnna Henningsen\nAnt Bryan\nAnthony Alayo\nAsra Ali\nBenedikt Christoph Wolters\nBenjamin Peterson\nBernard Spil\nBernhard Walle\nBrendan Heinonen\nBrian Card\nBrian Suh\nDaniel Bevenius\nDaniel Evers\nDaniel Stenberg\nDave Reisner\nDavid Beitey\nDavid Korczynski\nDavid Weekly\nDeel\nDimitris Apostolou\nDmitri Tikhonov\nDmitriy Vetutnev\nDon\nDylan Plecki\nEtienne Cimon\nFabian Möller\nFabian Wiesel\nFred Sundvik\nGabi Davar\nGaël PORTAY\nGeoff Hill\nGeorge Liu\nGitai\nGoogle Inc.\nHajime Fujita\nJacky Tian\nJacky_Yin\nJacob Champion\nJames M Snell\nJan Kundrát\nJan-E\nJanusz Dziemidowicz\nJay Satiro\nJeff 'Raid' Baitis\nJianqing Wang\nJim Morrison\nJiwoo Park\nJonas Kvinge\nJosh Braegger\nJosé F. Calcerrada\nKamil Dudka\nKazuho Oku\nKenny (kang-yen) Peng\nKenny Peng\nKit Chan\nKyle Schomp\nLazyHamster\nLeo Neat\nLorenz Nickel\nLucas Pardue\nMATSUMOTO Ryosuke\nMarc Bachmann\nMarcelo Trylesinski\nMark Boddington\nMatt Rudary\nMatt Way\nMichael Kaufmann\nMike Conlen\nMike Frysinger\nMike Lothian\nNicholas Hurley\nNora Shoemaker\nPaweł Wegner\nPedro Santos\nPeeyush Aggarwal\nPeter Wu\nPiotr Sikora\nPufferOverflow\nRaul Gutierrez Segales\nRemo E\nRenaud\nReza Tavakoli\nRichard Wolfert\nRick Lei\nRoss Smith II\nRudi Heitbaum\nRyan Carsten Schmidt\nRyo Ota\nScott Mitchell\nSebastiaan Deckers\nSergey Fedorov\nShelley Vohr\nSimon Frankenberger\nSimone Basso\nSoham Sinha\nStefan Eissing\nStephen Ludin\nSunpoet Po-Chuan Hsieh\nSvante Signell\nSyohei YOSHIDA\nTapanito\nTatsuhiko Kubo\nTatsuhiro Tsujikawa\nThomas Devoogdt\nTobias Geerinckx-Rice\nTom Harwood\nTomas Krizek\nTomasz Buchert\nTomasz Torcz\nVernon Tang\nViacheslav Biriukov\nViktor Szakats\nViktor Szépe\nWenfeng Liu\nWilliam A Rowe Jr\nXiaoguang Sun\nZhuoyun Wei\nacesso\nayanamist\nbxshi\nclemahieu\ndalf\ndawg\nes\nfangdingjun\nhrxi\njwchoi\nkumagi\nlhuang04\nlstefani\nmakovich\nmod-h2-dev\nmoparisthebest\nrobaho\nsnnn\nyuuki-kodama\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 18.427734375,
          "content": "# nghttp2 - HTTP/2 C Library\n#\n# Copyright (c) 2012, 2013, 2014, 2015 Tatsuhiro Tsujikawa\n# Copyright (c) 2016 Peter Wu <peter@lekensteyn.nl>\n#\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\ncmake_minimum_required(VERSION 3.14)\n# XXX using 1.8.90 instead of 1.9.0-DEV\nproject(nghttp2 VERSION 1.64.90 LANGUAGES C)\n\n# See versioning rule:\n#  https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\nset(LT_CURRENT  42)\nset(LT_REVISION 3)\nset(LT_AGE      28)\n\nset(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\" ${CMAKE_MODULE_PATH})\ninclude(Version)\n\nmath(EXPR LT_SOVERSION \"${LT_CURRENT} - ${LT_AGE}\")\nset(LT_VERSION \"${LT_SOVERSION}.${LT_AGE}.${LT_REVISION}\")\nset(PACKAGE_VERSION     \"${PROJECT_VERSION}\")\nHexVersion(PACKAGE_VERSION_NUM ${PROJECT_VERSION_MAJOR} ${PROJECT_VERSION_MINOR} ${PROJECT_VERSION_PATCH})\n\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n  set(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING \"Choose the build type\" FORCE)\n\n  # Include \"None\" as option to disable any additional (optimization) flags,\n  # relying on just CMAKE_C_FLAGS and CMAKE_CXX_FLAGS (which are empty by\n  # default). These strings are presented in cmake-gui.\n  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS\n    \"None\" \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n\ninclude(GNUInstallDirs)\ninclude(CMakeDependentOption)\n\n# For documentation\nfind_package(Python3 COMPONENTS Interpreter)\n\n# Auto-detection of features that can be toggled\nif(NOT ENABLE_LIB_ONLY)\n  enable_language(CXX)\n  find_package(Libev 4.11)\n  find_package(Libcares 1.7.5)\n  find_package(ZLIB 1.2.3)\n  find_package(Libbrotlienc 1.0.9)\n  find_package(Libbrotlidec 1.0.9)\nendif()\n\nif(WITH_WOLFSSL)\n  find_package(WolfSSL 5.7.0)\nelse()\n  find_package(OpenSSL 1.1.1)\nendif()\nfind_package(Libngtcp2 1.0.0)\nif(OPENSSL_FOUND)\n  find_package(Libngtcp2_crypto_quictls 1.0.0)\n  if(LIBNGTCP2_CRYPTO_QUICTLS_FOUND)\n    set(HAVE_LIBNGTCP2_CRYPTO_QUICTLS 1)\n  endif()\nendif()\nif(WOLFSSL_FOUND)\n  find_package(Libngtcp2_crypto_wolfssl 1.0.0)\n  if(LIBNGTCP2_CRYPTO_WOLFSSL_FOUND)\n    set(HAVE_LIBNGTCP2_CRYPTO_WOLFSSL 1)\n  endif()\nendif()\nfind_package(Libnghttp3 1.1.0)\nif(WITH_LIBBPF)\n  find_package(Libbpf 0.7.0)\n  if(NOT LIBBPF_FOUND)\n    message(FATAL_ERROR \"libbpf was requested (WITH_LIBBPF=1) but not found.\")\n  endif()\nendif()\nif((OPENSSL_FOUND OR WOLFSSL_FOUND) AND LIBEV_FOUND AND ZLIB_FOUND)\n  set(ENABLE_APP_DEFAULT ON)\nelse()\n  set(ENABLE_APP_DEFAULT OFF)\nendif()\nfind_package(Systemd 209)\nfind_package(Jansson  2.5)\nset(ENABLE_HPACK_TOOLS_DEFAULT ${JANSSON_FOUND})\n# 2.0.8 is required because we use evconnlistener_set_error_cb()\nfind_package(Libevent 2.0.8 COMPONENTS core extra openssl)\nset(ENABLE_EXAMPLES_DEFAULT ${LIBEVENT_OPENSSL_FOUND})\n\nfind_package(LibXml2 2.6.26)\nset(WITH_LIBXML2_DEFAULT    ${LIBXML2_FOUND})\nfind_package(Jemalloc)\nset(WITH_JEMALLOC_DEFAULT   ${JEMALLOC_FOUND})\n\ninclude(CMakeOptions.txt)\n\nif(ENABLE_LIB_ONLY AND (ENABLE_APP OR ENABLE_HPACK_TOOLS OR ENABLE_EXAMPLES))\n  # Remember when disabled options are disabled for later diagnostics.\n  set(ENABLE_LIB_ONLY_DISABLED_OTHERS 1)\nelse()\n  set(ENABLE_LIB_ONLY_DISABLED_OTHERS 0)\nendif()\nif(ENABLE_LIB_ONLY)\n  set(ENABLE_APP            OFF)\n  set(ENABLE_HPACK_TOOLS    OFF)\n  set(ENABLE_EXAMPLES       OFF)\nendif()\n\n# Do not disable assertions based on CMAKE_BUILD_TYPE.\nforeach(_build_type \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\n  foreach(_lang C CXX)\n    string(TOUPPER \"CMAKE_${_lang}_FLAGS_${_build_type}\" _var)\n    string(REGEX REPLACE \"(^| )[/-]D *NDEBUG($| )\" \" \" ${_var} \"${${_var}}\")\n  endforeach()\nendforeach()\n\nif(CMAKE_C_COMPILER_ID MATCHES \"GNU\" OR CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n  set(HINT_NORETURN       \"__attribute__((noreturn))\")\nelse()\n  set(HINT_NORETURN)\nendif()\n\nif(NOT ENABLE_LIB_ONLY)\n  include(ExtractValidFlags)\n  foreach(_cxx1x_flag -std=c++20)\n    extract_valid_cxx_flags(_cxx1x_flag_supported ${_cxx1x_flag})\n    if(_cxx1x_flag_supported)\n      set(CXX1XCXXFLAGS ${_cxx1x_flag})\n      break()\n    endif()\n  endforeach()\n\n  include(CMakePushCheckState)\n  include(CheckCXXSourceCompiles)\n  cmake_push_check_state()\n  set(CMAKE_REQUIRED_DEFINITIONS \"${CXX1XCXXFLAGS}\")\n  # Check that std::future is available.\n  check_cxx_source_compiles(\"\n  #include <vector>\n  #include <future>\n  int main() { std::vector<std::future<int>> v; }\" HAVE_STD_FUTURE)\n  # Check that std::map::emplace is available for g++-4.7.\n  check_cxx_source_compiles(\"\n  #include <map>\n  int main() { std::map<int, int>().emplace(1, 2); }\" HAVE_STD_MAP_EMPLACE)\n  cmake_pop_check_state()\nendif()\n\n# Checks for libraries.\n# Additional libraries required for programs under src directory.\nset(APP_LIBRARIES)\n\nset(CMAKE_THREAD_PREFER_PTHREAD 1)\nfind_package(Threads)\nif(CMAKE_USE_PTHREADS_INIT)\n  list(APPEND APP_LIBRARIES ${CMAKE_THREAD_LIBS_INIT})\nendif()\n# XXX android and C++, is this still needed in cmake?\n# case \"$host\" in\n#   *android*)\n#     android_build=yes\n#     # android does not need -pthread, but needs following 3 libs for C++\n#     APPLDFLAGS=\"$APPLDFLAGS -lstdc++ -latomic -lsupc++\"\n\n# dl: openssl requires libdl when it is statically linked.\n# XXX shouldn't ${CMAKE_DL_LIBS} be appended to OPENSSL_LIBRARIES instead of\n# APP_LIBRARIES if it is really specific to OpenSSL?\n\nenable_testing()\nadd_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND})\n\n# openssl (for src)\ninclude(CheckSymbolExists)\nset(HAVE_OPENSSL    ${OPENSSL_FOUND})\nif(NOT ENABLE_LIB_ONLY AND OPENSSL_FOUND)\n  set(OPENSSL_INCLUDE_DIRS  ${OPENSSL_INCLUDE_DIR})\n  cmake_push_check_state()\n  set(CMAKE_REQUIRED_INCLUDES   \"${OPENSSL_INCLUDE_DIR}\")\n  set(CMAKE_REQUIRED_LIBRARIES  \"${OPENSSL_LIBRARIES}\")\n  if(WIN32)\n    set(CMAKE_REQUIRED_LIBRARIES \"${CMAKE_REQUIRED_LIBRARIES}\" \"ws2_32\" \"bcrypt\")\n  endif()\n  if(ENABLE_HTTP3)\n    check_symbol_exists(SSL_provide_quic_data \"openssl/ssl.h\" HAVE_SSL_PROVIDE_QUIC_DATA)\n    if(NOT HAVE_SSL_PROVIDE_QUIC_DATA)\n        message(WARNING \"OpenSSL in ${OPENSSL_LIBRARIES} does not have SSL_provide_quic_data.  HTTP/3 support cannot be enabled\")\n    endif()\n  endif()\n  cmake_pop_check_state()\nelse()\n  set(OPENSSL_INCLUDE_DIRS  \"\")\n  set(OPENSSL_LIBRARIES     \"\")\nendif()\n# wolfSSL (for src)\nset(HAVE_WOLFSSL ${WOLFSSL_FOUND})\nif(WOLFSSL_FOUND)\n  set(WOLFSSL_INCLUDE_DIRS ${WOLFSSL_INCLUDE_DIR})\n  cmake_push_check_state()\n  set(CMAKE_REQUIRED_INCLUDES   \"${WOLFSSL_INCLUDE_DIR}\")\n  set(CMAKE_REQUIRED_LIBRARIES  \"${WOLFSSL_LIBRARIES}\")\n  check_symbol_exists(SSL_provide_quic_data \"wolfssl/options.h;wolfssl/ssl.h\" HAVE_WOLFSSL_SSL_PROVIDE_QUIC_DATA)\n  if(NOT HAVE_WOLFSSL_SSL_PROVIDE_QUIC_DATA)\n    message(WARNING \"wolfSSL in ${WOLFSSL_LIBRARIES} does not have SSL_provide_quic_data.  HTTP/3 support cannot be enabled\")\n  endif()\n  cmake_pop_check_state()\nelse()\n  set(WOLFSSL_INCLUDE_DIRS \"\")\n  set(WOLFSSL_LIBRARIES    \"\")\nendif()\n# libev (for src)\nset(HAVE_LIBEV      ${LIBEV_FOUND})\nset(HAVE_ZLIB       ${ZLIB_FOUND})\nset(HAVE_SYSTEMD    ${SYSTEMD_FOUND})\nset(HAVE_LIBEVENT_OPENSSL ${LIBEVENT_FOUND})\nif(LIBEVENT_FOUND)\n  # Must both link the core and openssl libraries.\n  set(LIBEVENT_OPENSSL_LIBRARIES ${LIBEVENT_LIBRARIES})\nendif()\n# libc-ares (for src)\nset(HAVE_LIBCARES   ${LIBCARES_FOUND})\nif(LIBCARES_FOUND)\n  set(LIBCARES_INCLUDE_DIRS ${LIBCARES_INCLUDE_DIR})\nelse()\n  set(LIBCARES_INCLUDE_DIRS \"\")\n  set(LIBCARES_LIBRARIES    \"\")\nendif()\n# jansson (for src/nghttp, src/deflatehd and src/inflatehd)\nset(HAVE_JANSSON    ${JANSSON_FOUND})\n# libxml2 (for src/nghttp)\nset(HAVE_LIBXML2    ${LIBXML2_FOUND})\nif(LIBXML2_FOUND)\n  set(LIBXML2_INCLUDE_DIRS  ${LIBXML2_INCLUDE_DIR})\nelse()\n  set(LIBXML2_INCLUDE_DIRS  \"\")\n  set(LIBXML2_LIBRARIES     \"\")\nendif()\n# jemalloc\nset(HAVE_JEMALLOC   ${JEMALLOC_FOUND})\n\n# libbrotli (for src)\nset(HAVE_LIBBROTLIENC ${LIBBROTLIENC_FOUND})\nset(HAVE_LIBBROTLIDEC ${LIBBROTLIDEC_FOUND})\nif(LIBBROTLIENC_FOUND AND LIBBROTLIDEC_FOUND)\n  set(HAVE_LIBBROTLI 1)\nendif()\n\n# libbpf (for bpf)\nset(HAVE_LIBBPF ${LIBBPF_FOUND})\nif(LIBBPF_FOUND)\n  set(BPFCFLAGS -Wall -O2 -g)\n  if(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    # For Debian/Ubuntu\n    set(EXTRABPFCFLAGS -I/usr/include/${CMAKE_SYSTEM_PROCESSOR}-linux-gnu)\n  endif()\n\n  check_c_source_compiles(\"\n#include <linux/bpf.h>\nint main() { enum bpf_stats_type foo; (void)foo; }\" HAVE_BPF_STATS_TYPE)\nendif()\n\n# The nghttp, nghttpd and nghttpx under src depend on zlib, OpenSSL and libev\nif(ENABLE_APP AND NOT (ZLIB_FOUND AND (OPENSSL_FOUND OR WOLFSSL_FOUND) AND LIBEV_FOUND))\n  message(FATAL_ERROR \"Applications were requested (ENABLE_APP=1) but dependencies are not met.\")\nendif()\n\n# HTTP/3 requires libngtcp2 + (quictls/openssl +\n# libngtcp2_crypto_quictls or wolfSSL + libngtcp2_crypto_wolfssl) and\n# libnghttp3.\nif(ENABLE_HTTP3 AND NOT (LIBNGTCP2_FOUND AND LIBNGHTTP3_FOUND AND\n      ((HAVE_SSL_PROVIDE_QUIC_DATA AND LIBNGTCP2_CRYPTO_QUICTLS_FOUND) OR\n\t(HAVE_WOLFSSL_SSL_PROVIDE_QUIC_DATA AND LIBNGTCP2_CRYPTO_WOLFSSL_FOUND))))\n  message(FATAL_ERROR \"HTTP/3 was requested (ENABLE_HTTP3=1) but dependencies are not met.\")\nendif()\n\n# HPACK tools requires jansson\nif(ENABLE_HPACK_TOOLS AND NOT HAVE_JANSSON)\n  message(FATAL_ERROR \"HPACK tools were requested (ENABLE_HPACK_TOOLS=1) but dependencies are not met.\")\nendif()\n\n# examples\nif(ENABLE_EXAMPLES AND NOT (OPENSSL_FOUND AND LIBEVENT_OPENSSL_FOUND))\n  message(FATAL_ERROR \"examples were requested (ENABLE_EXAMPLES=1) but dependencies are not met.\")\nendif()\n\n# third-party http-parser only be built when needed\nif(ENABLE_EXAMPLES OR ENABLE_APP OR ENABLE_HPACK_TOOLS)\n  set(ENABLE_THIRD_PARTY 1)\n  # mruby (for src/nghttpx)\n  set(HAVE_MRUBY      ${WITH_MRUBY})\n  set(HAVE_NEVERBLEED ${WITH_NEVERBLEED})\nelse()\n  set(HAVE_MRUBY 0)\n  set(HAVE_NEVERBLEED 0)\nendif()\n\n# Checks for header files.\ninclude(CheckIncludeFile)\ncheck_include_file(\"arpa/inet.h\"    HAVE_ARPA_INET_H)\ncheck_include_file(\"fcntl.h\"        HAVE_FCNTL_H)\ncheck_include_file(\"inttypes.h\"     HAVE_INTTYPES_H)\ncheck_include_file(\"limits.h\"       HAVE_LIMITS_H)\ncheck_include_file(\"netdb.h\"        HAVE_NETDB_H)\ncheck_include_file(\"netinet/in.h\"   HAVE_NETINET_IN_H)\ncheck_include_file(\"netinet/ip.h\"   HAVE_NETINET_IP_H)\ncheck_include_file(\"pwd.h\"          HAVE_PWD_H)\ncheck_include_file(\"sys/socket.h\"   HAVE_SYS_SOCKET_H)\ncheck_include_file(\"sys/time.h\"     HAVE_SYS_TIME_H)\ncheck_include_file(\"syslog.h\"       HAVE_SYSLOG_H)\ncheck_include_file(\"unistd.h\"       HAVE_UNISTD_H)\ncheck_include_file(\"windows.h\"      HAVE_WINDOWS_H)\n\ninclude(CheckTypeSize)\n# Checks for typedefs, structures, and compiler characteristics.\n# AC_TYPE_SIZE_T\ncheck_type_size(\"ssize_t\" SIZEOF_SSIZE_T)\nif(SIZEOF_SSIZE_T STREQUAL \"\")\n  # ssize_t is a signed type in POSIX storing at least -1.\n  # Set it to \"int\" to match the behavior of AC_TYPE_SSIZE_T (autotools).\n  set(ssize_t int)\nendif()\n# AC_TYPE_UINT8_T\n# AC_TYPE_UINT16_T\n# AC_TYPE_UINT32_T\n# AC_TYPE_UINT64_T\n# AC_TYPE_INT8_T\n# AC_TYPE_INT16_T\n# AC_TYPE_INT32_T\n# AC_TYPE_INT64_T\n# AC_TYPE_OFF_T\n# AC_TYPE_PID_T\n# AC_TYPE_UID_T\n# XXX To support inline for crappy compilers, see https://cmake.org/Wiki/CMakeTestInline\n# AC_C_INLINE\n# XXX is AC_SYS_LARGEFILE still needed for modern systems?\n# add_definitions(-D_FILE_OFFSET_BITS=64)\n\ninclude(CheckStructHasMember)\ncheck_struct_has_member(\"struct tm\" tm_gmtoff time.h HAVE_STRUCT_TM_TM_GMTOFF)\n\n# Checks for library functions.\ninclude(CheckFunctionExists)\ncheck_function_exists(_Exit     HAVE__EXIT)\ncheck_function_exists(accept4   HAVE_ACCEPT4)\ncheck_function_exists(clock_gettime HAVE_CLOCK_GETTIME)\ncheck_function_exists(mkostemp  HAVE_MKOSTEMP)\ncheck_function_exists(pipe2     HAVE_PIPE2)\n\ncheck_symbol_exists(GetTickCount64 sysinfoapi.h HAVE_GETTICKCOUNT64)\n\ninclude(CheckSymbolExists)\n# XXX does this correctly detect initgroups (un)availability on cygwin?\ncheck_symbol_exists(initgroups grp.h HAVE_DECL_INITGROUPS)\nif(NOT HAVE_DECL_INITGROUPS AND HAVE_UNISTD_H)\n  # FreeBSD declares initgroups() in unistd.h\n  check_symbol_exists(initgroups unistd.h HAVE_DECL_INITGROUPS2)\n  if(HAVE_DECL_INITGROUPS2)\n    set(HAVE_DECL_INITGROUPS 1)\n  endif()\nendif()\n\ncheck_symbol_exists(CLOCK_MONOTONIC \"time.h\" HAVE_DECL_CLOCK_MONOTONIC)\n\nset(WARNCFLAGS)\nset(WARNCXXFLAGS)\nif(CMAKE_C_COMPILER_ID MATCHES \"MSVC\")\n  if(ENABLE_WERROR)\n    set(WARNCFLAGS    /WX)\n    set(WARNCXXFLAGS  /WX)\n  endif()\nelse()\n  if(ENABLE_WERROR)\n    set(WARNCFLAGS   \"-Werror\")\n    set(WARNCXXFLAGS \"-Werror\")\n  endif()\n\n  include(PickyWarningsC)\n  include(PickyWarningsCXX)\nendif()\n\nif(ENABLE_STATIC_CRT)\n  foreach(lang C CXX)\n    foreach(suffix \"\" _DEBUG _MINSIZEREL _RELEASE _RELWITHDEBINFO)\n      set(var \"CMAKE_${lang}_FLAGS${suffix}\")\n      string(REPLACE \"/MD\" \"/MT\" ${var} \"${${var}}\")\n    endforeach()\n  endforeach()\nendif()\n\nif(ENABLE_DEBUG)\n  set(DEBUGBUILD 1)\nendif()\n\n# Some platform does not have working std::future.  We disable\n# threading for those platforms.\nif(NOT ENABLE_THREADS OR NOT HAVE_STD_FUTURE)\n  set(NOTHREADS 1)\nendif()\n\nadd_definitions(-DHAVE_CONFIG_H)\nconfigure_file(cmakeconfig.h.in config.h)\n# autotools-compatible names\n# Sphinx expects relative paths in the .rst files. Use the fact that the files\n# below are all one directory level deep.\nfile(RELATIVE_PATH top_srcdir   \"${CMAKE_CURRENT_BINARY_DIR}/dir\" \"${CMAKE_CURRENT_SOURCE_DIR}\")\nfile(RELATIVE_PATH top_builddir \"${CMAKE_CURRENT_BINARY_DIR}/dir\" \"${CMAKE_CURRENT_BINARY_DIR}\")\nset(abs_top_srcdir  \"${CMAKE_CURRENT_SOURCE_DIR}\")\nset(abs_top_builddir \"${CMAKE_CURRENT_BINARY_DIR}\")\n# libnghttp2.pc (pkg-config file)\nset(prefix          \"${CMAKE_INSTALL_PREFIX}\")\nset(exec_prefix     \"${CMAKE_INSTALL_PREFIX}\")\nset(libdir          \"${CMAKE_INSTALL_FULL_LIBDIR}\")\nset(includedir      \"${CMAKE_INSTALL_FULL_INCLUDEDIR}\")\nset(VERSION         \"${PACKAGE_VERSION}\")\n# For init scripts and systemd service file (in contrib/)\nset(bindir          \"${CMAKE_INSTALL_FULL_BINDIR}\")\nset(sbindir         \"${CMAKE_INSTALL_FULL_SBINDIR}\")\nforeach(name\n   lib/libnghttp2.pc\n   lib/includes/nghttp2/nghttp2ver.h\n   integration-tests/config.go\n   integration-tests/setenv\n   doc/conf.py\n   doc/index.rst\n   doc/package_README.rst\n   doc/tutorial-client.rst\n   doc/tutorial-server.rst\n   doc/tutorial-hpack.rst\n   doc/nghttpx-howto.rst\n   doc/h2load-howto.rst\n   doc/building-android-binary.rst\n   doc/nghttp2.h.rst\n   doc/nghttp2ver.h.rst\n   doc/contribute.rst\n)\n  configure_file(\"${name}.in\" \"${name}\" @ONLY)\nendforeach()\n\nif(APPLE)\n  add_definitions(-D__APPLE_USE_RFC_3542)\nendif()\n\ninclude_directories(\n  \"${CMAKE_CURRENT_BINARY_DIR}\" # for config.h\n)\n# For use in src/CMakeLists.txt\nset(PKGDATADIR \"${CMAKE_INSTALL_FULL_DATADIR}/${CMAKE_PROJECT_NAME}\")\nset(PKGLIBDIR \"${CMAKE_INSTALL_FULL_LIBDIR}/${CMAKE_PROJECT_NAME}\")\n\ninstall(FILES README.rst DESTINATION \"${CMAKE_INSTALL_DOCDIR}\")\n\nadd_subdirectory(lib)\n#add_subdirectory(lib/includes)\nadd_subdirectory(third-party)\nadd_subdirectory(src)\nadd_subdirectory(examples)\nif(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME AND BUILD_TESTING)\n  add_subdirectory(tests)\n  #add_subdirectory(tests/testdata)\n  add_subdirectory(integration-tests)\nendif()\nif(ENABLE_DOC)\n  add_subdirectory(doc)\nendif()\nadd_subdirectory(contrib)\nadd_subdirectory(script)\nadd_subdirectory(bpf)\n\n\nstring(TOUPPER \"${CMAKE_BUILD_TYPE}\" _build_type)\nmessage(STATUS \"summary of build options:\n\n    Package version: ${VERSION}\n    Library version: ${LT_CURRENT}:${LT_REVISION}:${LT_AGE}\n    Install prefix:  ${CMAKE_INSTALL_PREFIX}\n    Target system:   ${CMAKE_SYSTEM_NAME}\n    Compiler:\n      Build type:     ${CMAKE_BUILD_TYPE}\n      C compiler:     ${CMAKE_C_COMPILER}\n      CFLAGS:         ${CMAKE_C_FLAGS_${_build_type}} ${CMAKE_C_FLAGS}\n      C++ compiler:   ${CMAKE_CXX_COMPILER}\n      CXXFLAGS:       ${CMAKE_CXX_FLAGS_${_build_type}} ${CMAKE_CXX_FLAGS}\n      WARNCFLAGS:     ${WARNCFLAGS}\n      CXX1XCXXFLAGS:  ${CXX1XCXXFLAGS}\n      WARNCXXFLAGS:   ${WARNCXXFLAGS}\n    Python:\n      Python:          ${Python3_EXECUTABLE}\n      Python3_VERSION: ${Python3_VERSION}\n    Test:\n      Failmalloc:     ${ENABLE_FAILMALLOC}\n      Build Test:     ${BUILD_TESTING}\n    Libs:\n      OpenSSL:        ${HAVE_OPENSSL} (LIBS='${OPENSSL_LIBRARIES}')\n      wolfSSL:        ${HAVE_WOLFSSL} (LIBS='${WOLFSSL_LIBRARIES}')\n      Libxml2:        ${HAVE_LIBXML2} (LIBS='${LIBXML2_LIBRARIES}')\n      Libev:          ${HAVE_LIBEV} (LIBS='${LIBEV_LIBRARIES}')\n      Libc-ares:      ${HAVE_LIBCARES} (LIBS='${LIBCARES_LIBRARIES}')\n      Libngtcp2:      ${HAVE_LIBNGTCP2} (LIBS='${LIBNGTCP2_LIBRARIES}')\n      Libngtcp2_crypto_quictls: ${HAVE_LIBNGTCP2_CRYPTO_QUICTLS} (LIBS='${LIBNGTCP2_CRYPTO_QUICTLS_LIBRARIES}')\n      Libngtcp2_crypto_wolfssl: ${HAVE_LIBNGTCP2_CRYPTO_WOLFSSL} (LIBS='${LIBNGTCP2_CRYPTO_WOLFSSL_LIBRARIES}')\n      Libnghttp3:     ${HAVE_LIBNGHTTP3} (LIBS='${LIBNGHTTP3_LIBRARIES}')\n      Libbpf:         ${HAVE_LIBBPF} (LIBS='${LIBBPF_LIBRARIES}')\n      Libevent(SSL):  ${HAVE_LIBEVENT_OPENSSL} (LIBS='${LIBEVENT_OPENSSL_LIBRARIES}')\n      Jansson:        ${HAVE_JANSSON} (LIBS='${JANSSON_LIBRARIES}')\n      Jemalloc:       ${HAVE_JEMALLOC} (LIBS='${JEMALLOC_LIBRARIES}')\n      Zlib:           ${HAVE_ZLIB} (LIBS='${ZLIB_LIBRARIES}')\n      Systemd:        ${HAVE_SYSTEMD} (LIBS='${SYSTEMD_LIBRARIES}')\n      Libbrotlienc:   ${HAVE_LIBBROTLIENC} (LIBS='${LIBBROTLIENC_LIBRARIES}')\n      Libbrotlidec:   ${HAVE_LIBBROTLIDEC} (LIBS='${LIBBROTLIDEC_LIBRARIES}')\n    Third-party:\n      http-parser:    ${ENABLE_THIRD_PARTY}\n      MRuby:          ${HAVE_MRUBY}\n      Neverbleed:     ${HAVE_NEVERBLEED}\n    Features:\n      Applications:   ${ENABLE_APP}\n      HPACK tools:    ${ENABLE_HPACK_TOOLS}\n      Examples:       ${ENABLE_EXAMPLES}\n      Threading:      ${ENABLE_THREADS}\n      HTTP/3(EXPERIMENTAL): ${ENABLE_HTTP3}\n\")\nif(ENABLE_LIB_ONLY_DISABLED_OTHERS)\n  message(\"Only the library will be built. To build other components \"\n    \"(such as applications and examples), set ENABLE_LIB_ONLY=OFF.\")\nendif()\n"
        },
        {
          "name": "CMakeOptions.txt",
          "type": "blob",
          "size": 1.3369140625,
          "content": "# Features that can be enabled for cmake (see CMakeLists.txt)\n\noption(ENABLE_WERROR    \"Turn on compile time warnings\")\noption(ENABLE_DEBUG     \"Turn on debug output\")\noption(ENABLE_THREADS   \"Turn on threading in apps\" ON)\noption(ENABLE_APP       \"Build applications (nghttp, nghttpd, nghttpx and h2load)\"\n  ${ENABLE_APP_DEFAULT})\noption(ENABLE_HPACK_TOOLS \"Build HPACK tools\"\n  ${ENABLE_HPACK_TOOLS_DEFAULT})\noption(ENABLE_EXAMPLES  \"Build examples\"\n  ${ENABLE_EXAMPLES_DEFAULT})\noption(ENABLE_FAILMALLOC \"Build failmalloc test program\" ON)\noption(ENABLE_LIB_ONLY  \"Build libnghttp2 only.  This is a short hand for -DENABLE_APP=0 -DENABLE_EXAMPLES=0 -DENABLE_HPACK_TOOLS=0\")\noption(BUILD_SHARED_LIBS \"Build libnghttp2 as a shared library\" ON)\noption(BUILD_STATIC_LIBS \"Build libnghttp2 in static mode also\" OFF)\noption(ENABLE_STATIC_CRT \"Build libnghttp2 against the MS LIBCMT[d]\")\noption(ENABLE_HTTP3      \"Enable HTTP/3 support\" OFF)\noption(ENABLE_DOC \"Build documentation\" ON)\ncmake_dependent_option(BUILD_TESTING \"Enable tests\" ON \"BUILD_STATIC_LIBS\" OFF)\n\noption(WITH_LIBXML2     \"Use libxml2\"\n  ${WITH_LIBXML2_DEFAULT})\noption(WITH_JEMALLOC    \"Use jemalloc\"\n  ${WITH_JEMALLOC_DEFAULT})\noption(WITH_MRUBY       \"Use mruby\")\noption(WITH_NEVERBLEED  \"Use neverbleed\")\noption(WITH_LIBBPF      \"Use libbpf\")\noption(WITH_WOLFSSL     \"Use wolfSSL\")\n\n# vim: ft=cmake:\n"
        },
        {
          "name": "CONTRIBUTION",
          "type": "blob",
          "size": 0.8203125,
          "content": "[The text below was composed based on 1.2. License section of\ncurl/libcurl project.]\n\nWhen contributing with code, you agree to put your changes and new\ncode under the same license nghttp2 is already using unless stated and\nagreed otherwise.\n\nWhen changing existing source code, you do not alter the copyright of\nthe original file(s).  The copyright will still be owned by the\noriginal creator(s) or those who have been assigned copyright by the\noriginal author(s).\n\nBy submitting a patch to the nghttp2 project, you are assumed to have\nthe right to the code and to be allowed by your employer or whatever\nto hand over that patch/code to us.  We will credit you for your\nchanges as far as possible, to give credit but also to keep a trace\nback to who made what changes.  Please always provide us with your\nfull real name when contributing!\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.12890625,
          "content": "The MIT License\n\nCopyright (c) 2012, 2014, 2015, 2016 Tatsuhiro Tsujikawa\nCopyright (c) 2012, 2014, 2015, 2016 nghttp2 contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "Dockerfile.android",
          "type": "blob",
          "size": 3.837890625,
          "content": "# vim: ft=dockerfile:\n# Dockerfile to build nghttp2 android binary\n#\n# $ sudo docker build -t nghttp2-android - < Dockerfile.android\n#\n# After successful build, android binaries are located under\n# /root/build/nghttp2.  You can copy the binary using docker cp.  For\n# example, to copy nghttpx binary to host file system location\n# /path/to/dest, do this:\n#\n# $ sudo docker run -v /path/to/dest:/out nghttp2-android cp /root/build/nghttp2/src/nghttpx /out\n\n\n# Only use standalone-toolchain for reduce size\nFROM ubuntu:22.04\nMAINTAINER Tatsuhiro Tsujikawa\n\nENV NDK_VERSION r26d\nENV NDK /root/android-ndk-$NDK_VERSION\nENV TOOLCHAIN $NDK/toolchains/llvm/prebuilt/linux-x86_64\nENV TARGET aarch64-linux-android\nENV API 33\nENV AR $TOOLCHAIN/bin/llvm-ar\nENV CC $TOOLCHAIN/bin/$TARGET$API-clang\nENV CXX $TOOLCHAIN/bin/$TARGET$API-clang++\nENV LD $TOOLCHAIN/bin/ld\nENV RANDLIB $TOOLCHAIN/bin/llvm-ranlib\nENV STRIP $TOOLCHAIN/bin/llvm-strip\nENV PREFIX /root/usr/local\n\nWORKDIR /root\nRUN apt-get update && \\\n    apt-get install -y unzip make binutils autoconf \\\n      automake autotools-dev libtool pkg-config git \\\n      curl dpkg-dev libxml2-dev genisoimage libc6-i386 \\\n      lib32stdc++6 && \\\n    rm -rf /var/cache/apt/*\n\n# Download NDK\nRUN curl -L -O https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux.zip && \\\n   unzip -q android-ndk-$NDK_VERSION-linux.zip && \\\n   rm android-ndk-$NDK_VERSION-linux.zip\n\n# Setup version of libraries\nENV OPENSSL_VERSION 1.1.1w\nENV LIBEV_VERSION 4.33\nENV ZLIB_VERSION 1.3.1\nENV CARES_VERSION 1.18.1\nENV NGHTTP2_VERSION master\n\nWORKDIR /root/build\nRUN curl -L -O https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz && \\\n    tar xf openssl-$OPENSSL_VERSION.tar.gz && \\\n    rm openssl-$OPENSSL_VERSION.tar.gz\n\nWORKDIR /root/build/openssl-$OPENSSL_VERSION\nRUN export ANDROID_NDK_HOME=$NDK PATH=$TOOLCHAIN/bin:$PATH && \\\n    ./Configure no-shared --prefix=$PREFIX android-arm64 && \\\n    make && make install_sw\n\nWORKDIR /root/build\nRUN curl -L -O http://dist.schmorp.de/libev/Attic/libev-$LIBEV_VERSION.tar.gz && \\\n    tar xf libev-$LIBEV_VERSION.tar.gz && \\\n    rm libev-$LIBEV_VERSION.tar.gz\n\nWORKDIR /root/build/libev-$LIBEV_VERSION\nRUN ./configure \\\n    --disable-dependency-tracking \\\n    --host=$TARGET \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --prefix=$PREFIX \\\n    --disable-shared \\\n    --enable-static \\\n    CPPFLAGS=-I$PREFIX/include \\\n    LDFLAGS=-L$PREFIX/lib && \\\n    make install\n\nWORKDIR /root/build\nRUN curl -L -O https://github.com/madler/zlib/releases/download/v$ZLIB_VERSION/zlib-$ZLIB_VERSION.tar.gz && \\\n    tar xf zlib-$ZLIB_VERSION.tar.gz && \\\n    rm zlib-$ZLIB_VERSION.tar.gz\n\nWORKDIR /root/build/zlib-$ZLIB_VERSION\nRUN HOST=$TARGET \\\n    ./configure \\\n    --prefix=$PREFIX \\\n    --libdir=$PREFIX/lib \\\n    --includedir=$PREFIX/include \\\n    --static && \\\n    make install\n\n\nWORKDIR /root/build\nRUN curl -L -O https://github.com/c-ares/c-ares/releases/download/cares-1_18_1/c-ares-$CARES_VERSION.tar.gz && \\\n    tar xf c-ares-$CARES_VERSION.tar.gz && \\\n    rm c-ares-$CARES_VERSION.tar.gz\n\nWORKDIR /root/build/c-ares-$CARES_VERSION\nRUN ./configure \\\n      --disable-dependency-tracking \\\n      --host=$TARGET \\\n      --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n      --prefix=$PREFIX \\\n      --disable-shared && \\\n    make install\n\nWORKDIR /root/build\nRUN git clone https://github.com/nghttp2/nghttp2 -b $NGHTTP2_VERSION --depth 1\nWORKDIR /root/build/nghttp2\nRUN autoreconf -i && \\\n    ./configure \\\n    --disable-dependency-tracking \\\n    --enable-app \\\n    --disable-shared \\\n    --host=$TARGET \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --without-libxml2 \\\n    --disable-examples \\\n    --disable-threads \\\n      CPPFLAGS=\"-fPIE -I$PREFIX/include\" \\\n      PKG_CONFIG_LIBDIR=\"$PREFIX/lib/pkgconfig\" \\\n      LDFLAGS=\"-fPIE -pie -L$PREFIX/lib\" && \\\n    make && \\\n    $STRIP src/nghttpx src/nghttpd src/nghttp\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.01171875,
          "content": "See COPYING\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.341796875,
          "content": "# nghttp2 - HTTP/2 C Library\n\n# Copyright (c) 2012 Tatsuhiro Tsujikawa\n\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nSUBDIRS = lib third-party src bpf examples tests integration-tests \\\n\tdoc contrib script\n\nACLOCAL_AMFLAGS = -I m4\n\ndist_doc_DATA = README.rst\n\nEXTRA_DIST = nghttpx.conf.sample proxy.pac.sample android-config android-env \\\n\tDockerfile.android \\\n\tcmakeconfig.h.in \\\n\tCMakeLists.txt \\\n\tCMakeOptions.txt \\\n\tcmake/ExtractValidFlags.cmake \\\n\tcmake/FindJemalloc.cmake \\\n\tcmake/FindLibev.cmake \\\n\tcmake/Version.cmake \\\n\tcmake/FindLibevent.cmake \\\n\tcmake/FindJansson.cmake \\\n\tcmake/FindLibcares.cmake \\\n\tcmake/FindSystemd.cmake \\\n\tcmake/FindLibbpf.cmake \\\n\tcmake/FindLibnghttp3.cmake \\\n\tcmake/FindLibngtcp2.cmake \\\n\tcmake/FindLibngtcp2_crypto_quictls.cmake \\\n\tcmake/FindLibbrotlienc.cmake \\\n\tcmake/FindLibbrotlidec.cmake \\\n\tcmake/FindLibngtcp2_crypto_wolfssl.cmake \\\n\tcmake/FindWolfSSL.cmake \\\n\tcmake/PickyWarningsC.cmake \\\n\tcmake/PickyWarningsCXX.cmake\n\n.PHONY: clang-format\n\n# Format source files using clang-format.  Don't format source files\n# under third-party directory since we are not responsible for their\n# coding style.\nclang-format:\n\tCLANGFORMAT=`git config --get clangformat.binary`; \\\n\ttest -z $${CLANGFORMAT} && CLANGFORMAT=\"clang-format\"; \\\n\t$${CLANGFORMAT} -i lib/*.{c,h} lib/includes/nghttp2/*.h \\\n\tsrc/*.{c,cc,h} examples/*.c \\\n\ttests/*.{c,h} bpf/*.c fuzz/*.cc\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.0146484375,
          "content": "See README.rst\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 48.435546875,
          "content": "nghttp2 - HTTP/2 C Library\n==========================\n\nThis is an implementation of the Hypertext Transfer Protocol version 2\nin C.\n\nThe framing layer of HTTP/2 is implemented as a reusable C library.\nOn top of that, we have implemented an HTTP/2 client, server and\nproxy.  We have also developed load test and benchmarking tools for\nHTTP/2.\n\nAn HPACK encoder and decoder are available as a public API.\n\nDevelopment Status\n------------------\n\nnghttp2 was originally developed based on `RFC 7540\n<https://tools.ietf.org/html/rfc7540>`_ HTTP/2 and `RFC 7541\n<https://tools.ietf.org/html/rfc7541>`_ HPACK - Header Compression for\nHTTP/2.  Now we are updating our code to implement `RFC 9113\n<https://datatracker.ietf.org/doc/html/rfc9113>`_.\n\nThe nghttp2 code base was forked from the spdylay\n(https://github.com/tatsuhiro-t/spdylay) project.\n\nPublic Test Server\n------------------\n\nThe following endpoints are available to try out our nghttp2\nimplementation.\n\n* https://nghttp2.org/ (TLS + ALPN and HTTP/3)\n\n  This endpoint supports ``h2``, ``h2-16``, ``h2-14``, and\n  ``http/1.1`` via ALPN and requires TLSv1.2 for HTTP/2\n  connection.\n\n  It also supports HTTP/3.\n\n* http://nghttp2.org/ (HTTP Upgrade and HTTP/2 Direct)\n\n  ``h2c`` and ``http/1.1``.\n\nRequirements\n------------\n\nThe following package is required to build the libnghttp2 library:\n\n* pkg-config >= 0.20\n\nTo build the documentation, you need to install:\n\n* sphinx (http://sphinx-doc.org/)\n\nIf you need libnghttp2 (C library) only, then the above packages are\nall you need.  Use ``--enable-lib-only`` to ensure that only\nlibnghttp2 is built.  This avoids potential build error related to\nbuilding bundled applications.\n\nTo build and run the application programs (``nghttp``, ``nghttpd``,\n``nghttpx`` and ``h2load``) in the ``src`` directory, the following packages\nare required:\n\n* OpenSSL >= 1.1.1; or wolfSSL >= 5.7.0; or LibreSSL >= 3.8.1; or\n  aws-lc >= 1.19.0; or BoringSSL\n* libev >= 4.11\n* zlib >= 1.2.3\n* libc-ares >= 1.7.5\n\nTo enable ``-a`` option (getting linked assets from the downloaded\nresource) in ``nghttp``, the following package is required:\n\n* libxml2 >= 2.6.26\n\nTo enable systemd support in nghttpx, the following package is\nrequired:\n\n* libsystemd-dev >= 209\n\nThe HPACK tools require the following package:\n\n* jansson >= 2.5\n\nTo build sources under the examples directory, libevent is required:\n\n* libevent-openssl >= 2.0.8\n\nTo mitigate heap fragmentation in long running server programs\n(``nghttpd`` and ``nghttpx``), jemalloc is recommended:\n\n* jemalloc\n\n  .. note::\n\n     Alpine Linux currently does not support malloc replacement\n     due to musl limitations. See details in issue `#762 <https://github.com/nghttp2/nghttp2/issues/762>`_.\n\nFor BoringSSL or aws-lc build, to enable :rfc:`8879` TLS Certificate\nCompression in applications, the following library is required:\n\n* libbrotli-dev >= 1.0.9\n\nTo enable mruby support for nghttpx, `mruby\n<https://github.com/mruby/mruby>`_ is required.  We need to build\nmruby with C++ ABI explicitly turned on, and probably need other\nmrgems, mruby is managed by git submodule under third-party/mruby\ndirectory.  Currently, mruby support for nghttpx is disabled by\ndefault.  To enable mruby support, use ``--with-mruby`` configure\noption.  Note that at the time of this writing, libmruby-dev and mruby\npackages in Debian/Ubuntu are not usable for nghttp2, since they do\nnot enable C++ ABI.  To build mruby, the following packages are\nrequired:\n\n* ruby\n* bison\n\nnghttpx supports `neverbleed <https://github.com/h2o/neverbleed>`_,\nprivilege separation engine for OpenSSL.  In short, it minimizes the\nrisk of private key leakage when serious bug like Heartbleed is\nexploited.  The neverbleed is disabled by default.  To enable it, use\n``--with-neverbleed`` configure option.\n\nTo enable the experimental HTTP/3 support for h2load and nghttpx, the\nfollowing libraries are required:\n\n* `OpenSSL with QUIC support\n  <https://github.com/quictls/openssl/tree/OpenSSL_1_1_1w+quic>`_; or\n  wolfSSL; or LibreSSL (does not support 0RTT); or aws-lc; or\n  `BoringSSL <https://boringssl.googlesource.com/boringssl/>`_ (commit\n  c361e279402ec359834b7eaa7d737462d02675e1)\n* `ngtcp2 <https://github.com/ngtcp2/ngtcp2>`_ >= 1.4.0\n* `nghttp3 <https://github.com/ngtcp2/nghttp3>`_ >= 1.1.0\n\nUse ``--enable-http3`` configure option to enable HTTP/3 feature for\nh2load and nghttpx.\n\nIn order to build optional eBPF program to direct an incoming QUIC UDP\ndatagram to a correct socket for nghttpx, the following libraries are\nrequired:\n\n* libbpf-dev >= 0.7.0\n\nUse ``--with-libbpf`` configure option to build eBPF program.\nlibelf-dev is needed to build libbpf.\n\nFor Ubuntu 20.04, you can build libbpf from `the source code\n<https://github.com/libbpf/libbpf/releases>`_.  nghttpx requires eBPF\nprogram for reloading its configuration and hot swapping its\nexecutable.\n\nCompiling libnghttp2 C source code requires a C99 compiler.  gcc 4.8\nis known to be adequate.  In order to compile the C++ source code,\nC++20 compliant compiler is required.  At least g++ >= 12 and\nclang++ >= 15 are known to work.\n\n.. note::\n\n   To enable mruby support in nghttpx, and use ``--with-mruby``\n   configure option.\n\n.. note::\n\n   Mac OS X users may need the ``--disable-threads`` configure option to\n   disable multi-threading in nghttpd, nghttpx and h2load to prevent\n   them from crashing. A patch is welcome to make multi threading work\n   on Mac OS X platform.\n\n.. note::\n\n   To compile the associated applications (nghttp, nghttpd, nghttpx\n   and h2load), you must use the ``--enable-app`` configure option and\n   ensure that the specified requirements above are met.  Normally,\n   configure script checks required dependencies to build these\n   applications, and enable ``--enable-app`` automatically, so you\n   don't have to use it explicitly.  But if you found that\n   applications were not built, then using ``--enable-app`` may find\n   that cause, such as the missing dependency.\n\n.. note::\n\n   In order to detect third party libraries, pkg-config is used\n   (however we don't use pkg-config for some libraries (e.g., libev)).\n   By default, pkg-config searches ``*.pc`` file in the standard\n   locations (e.g., /usr/lib/pkgconfig).  If it is necessary to use\n   ``*.pc`` file in the custom location, specify paths to\n   ``PKG_CONFIG_PATH`` environment variable, and pass it to configure\n   script, like so:\n\n   .. code-block:: text\n\n       $ ./configure PKG_CONFIG_PATH=/path/to/pkgconfig\n\n   For pkg-config managed libraries, ``*_CFLAG`` and ``*_LIBS``\n   environment variables are defined (e.g., ``OPENSSL_CFLAGS``,\n   ``OPENSSL_LIBS``).  Specifying non-empty string to these variables\n   completely overrides pkg-config.  In other words, if they are\n   specified, pkg-config is not used for detection, and user is\n   responsible to specify the correct values to these variables.  For\n   complete list of these variables, run ``./configure -h``.\n\nIf you are using Ubuntu 22.04 LTS, run the following to install the\nrequired packages:\n\n.. code-block:: text\n\n    sudo apt-get install g++ clang make binutils autoconf automake \\\n      autotools-dev libtool pkg-config \\\n      zlib1g-dev libssl-dev libxml2-dev libev-dev \\\n      libevent-dev libjansson-dev \\\n      libc-ares-dev libjemalloc-dev libsystemd-dev \\\n      ruby-dev bison libelf-dev\n\nBuilding nghttp2 from release tar archive\n-----------------------------------------\n\nThe nghttp2 project regularly releases tar archives which includes\nnghttp2 source code, and generated build files.  They can be\ndownloaded from `Releases\n<https://github.com/nghttp2/nghttp2/releases>`_ page.\n\nBuilding nghttp2 from git requires autotools development packages.\nBuilding from tar archives does not require them, and thus it is much\neasier.  The usual build step is as follows:\n\n.. code-block:: text\n\n    $ tar xf nghttp2-X.Y.Z.tar.bz2\n    $ cd nghttp2-X.Y.Z\n    $ ./configure\n    $ make\n\nBuilding from git\n-----------------\n\nBuilding from git is easy, but please be sure that at least autoconf 2.68 is\nused:\n\n.. code-block:: text\n\n    $ git submodule update --init\n    $ autoreconf -i\n    $ automake\n    $ autoconf\n    $ ./configure\n    $ make\n\nNotes for building on Windows (MSVC)\n------------------------------------\n\nThe easiest way to build native Windows nghttp2 dll is use `cmake\n<https://cmake.org/>`_.  The free version of `Visual C++ Build Tools\n<http://landinghub.visualstudio.com/visual-cpp-build-tools>`_ works\nfine.\n\n1. Install cmake for windows\n2. Open \"Visual C++ ... Native Build Tool Command Prompt\", and inside\n   nghttp2 directly, run ``cmake``.\n3. Then run ``cmake --build`` to build library.\n4. nghttp2.dll, nghttp2.lib, nghttp2.exp are placed under lib directory.\n\nNote that the above steps most likely produce nghttp2 library only.\nNo bundled applications are compiled.\n\nNotes for building on Windows (Mingw/Cygwin)\n--------------------------------------------\n\nUnder Mingw environment, you can only compile the library, it's\n``libnghttp2-X.dll`` and ``libnghttp2.a``.\n\nIf you want to compile the applications(``h2load``, ``nghttp``,\n``nghttpx``, ``nghttpd``), you need to use the Cygwin environment.\n\nUnder Cygwin environment, to compile the applications you need to\ncompile and install the libev first.\n\nSecondly, you need to undefine the macro ``__STRICT_ANSI__``, if you\nnot, the functions ``fdopen``, ``fileno`` and ``strptime`` will not\navailable.\n\nthe sample command like this:\n\n.. code-block:: text\n\n    $ export CFLAGS=\"-U__STRICT_ANSI__ -I$libev_PREFIX/include -L$libev_PREFIX/lib\"\n    $ export CXXFLAGS=$CFLAGS\n    $ ./configure\n    $ make\n\nIf you want to compile the applications under ``examples/``, you need\nto remove or rename the ``event.h`` from libev's installation, because\nit conflicts with libevent's installation.\n\nNotes for installation on Linux systems\n--------------------------------------------\nAfter installing nghttp2 tool suite with ``make install`` one might experience a similar error:\n\n.. code-block:: text\n\n    nghttpx: error while loading shared libraries: libnghttp2.so.14: cannot open shared object file: No such file or directory\n\nThis means that the tool is unable to locate the ``libnghttp2.so`` shared library.\n\nTo update the shared library cache run ``sudo ldconfig``.\n\nBuilding the documentation\n--------------------------\n\n.. note::\n\n   Documentation is still incomplete.\n\nTo build the documentation, run:\n\n.. code-block:: text\n\n    $ make html\n\nThe documents will be generated under ``doc/manual/html/``.\n\nThe generated documents will not be installed with ``make install``.\n\nThe online documentation is available at\nhttps://nghttp2.org/documentation/\n\nBuild HTTP/3 enabled h2load and nghttpx\n---------------------------------------\n\nTo build h2load and nghttpx with HTTP/3 feature enabled, run the\nconfigure script with ``--enable-http3``.\n\nFor nghttpx to reload configurations and swapping its executable while\ngracefully terminating old worker processes, eBPF is required.  Run\nthe configure script with ``--enable-http3 --with-libbpf`` to build\neBPF program.  The QUIC keying material must be set with\n``--frontend-quic-secret-file`` in order to keep the existing\nconnections alive during reload.\n\nThe detailed steps to build HTTP/3 enabled h2load and nghttpx follow.\n\nBuild aws-lc:\n\n.. code-block:: text\n\n   $ git clone --depth 1 -b v1.41.1 https://github.com/aws/aws-lc\n   $ cd aws-lc\n   $ cmake -B build -DDISABLE_GO=ON --install-prefix=$PWD/opt\n   $ make -j$(nproc) -C build\n   $ cmake --install build\n   $ cd ..\n\nBuild nghttp3:\n\n.. code-block:: text\n\n   $ git clone --depth 1 -b v1.7.0 https://github.com/ngtcp2/nghttp3\n   $ cd nghttp3\n   $ git submodule update --init --depth 1\n   $ autoreconf -i\n   $ ./configure --prefix=$PWD/build --enable-lib-only\n   $ make -j$(nproc)\n   $ make install\n   $ cd ..\n\nBuild ngtcp2:\n\n.. code-block:: text\n\n   $ git clone --depth 1 -b v1.10.0 https://github.com/ngtcp2/ngtcp2\n   $ cd ngtcp2\n   $ git submodule update --init --depth 1\n   $ autoreconf -i\n   $ ./configure --prefix=$PWD/build --enable-lib-only --with-boringssl \\\n         BORINGSSL_CFLAGS=\"-I$PWD/../aws-lc/opt/include\" \\\n         BORINGSSL_LIBS=\"-L$PWD/../aws-lc/opt/lib -lssl -lcrypto\"\n   $ make -j$(nproc)\n   $ make install\n   $ cd ..\n\nIf your Linux distribution does not have libbpf-dev >= 0.7.0, build\nfrom source:\n\n.. code-block:: text\n\n   $ git clone --depth 1 -b v1.4.6 https://github.com/libbpf/libbpf\n   $ cd libbpf\n   $ PREFIX=$PWD/build make -C src install\n   $ cd ..\n\nBuild nghttp2:\n\n.. code-block:: text\n\n   $ git clone https://github.com/nghttp2/nghttp2\n   $ cd nghttp2\n   $ git submodule update --init\n   $ autoreconf -i\n   $ ./configure --with-mruby --enable-http3 --with-libbpf \\\n         CC=clang-15 CXX=clang++-15 \\\n         PKG_CONFIG_PATH=\"$PWD/../aws-lc/opt/lib/pkgconfig:$PWD/../nghttp3/build/lib/pkgconfig:$PWD/../ngtcp2/build/lib/pkgconfig:$PWD/../libbpf/build/lib64/pkgconfig\" \\\n         LDFLAGS=\"$LDFLAGS -Wl,-rpath,$PWD/../aws-lc/opt/lib -Wl,-rpath,$PWD/../libbpf/build/lib64\"\n   $ make -j$(nproc)\n\nThe eBPF program ``reuseport_kern.o`` should be found under bpf\ndirectory.  Pass ``--quic-bpf-program-file=bpf/reuseport_kern.o``\noption to nghttpx to load it.  See also `HTTP/3 section in nghttpx -\nHTTP/2 proxy - HOW-TO\n<https://nghttp2.org/documentation/nghttpx-howto.html#http-3>`_.\n\nUnit tests\n----------\n\nUnit tests are done by simply running ``make check``.\n\nIntegration tests\n-----------------\n\nWe have the integration tests for the nghttpx proxy server.  The tests are\nwritten in the `Go programming language <http://golang.org/>`_ and uses\nits testing framework.  We depend on the following libraries:\n\n* golang.org/x/net/http2\n* golang.org/x/net/websocket\n* https://github.com/tatsuhiro-t/go-nghttp2\n\nGo modules will download these dependencies automatically.\n\nTo run the tests, run the following command under\n``integration-tests`` directory:\n\n.. code-block:: text\n\n    $ make it\n\nInside the tests, we use port 3009 to run the test subject server.\n\nMigration from v0.7.15 or earlier\n---------------------------------\n\nnghttp2 v1.0.0 introduced several backward incompatible changes.  In\nthis section, we describe these changes and how to migrate to v1.0.0.\n\nALPN protocol ID is now ``h2`` and ``h2c``\n++++++++++++++++++++++++++++++++++++++++++\n\nPreviously we announced ``h2-14`` and ``h2c-14``.  v1.0.0 implements\nfinal protocol version, and we changed ALPN ID to ``h2`` and ``h2c``.\nThe macros ``NGHTTP2_PROTO_VERSION_ID``,\n``NGHTTP2_PROTO_VERSION_ID_LEN``,\n``NGHTTP2_CLEARTEXT_PROTO_VERSION_ID``, and\n``NGHTTP2_CLEARTEXT_PROTO_VERSION_ID_LEN`` have been updated to\nreflect this change.\n\nBasically, existing applications do not have to do anything, just\nrecompiling is enough for this change.\n\nUse word \"client magic\" where we use \"client connection preface\"\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nWe use \"client connection preface\" to mean first 24 bytes of client\nconnection preface.  This is technically not correct, since client\nconnection preface is composed of 24 bytes client magic byte string\nfollowed by SETTINGS frame.  For clarification, we call \"client magic\"\nfor this 24 bytes byte string and updated API.\n\n* ``NGHTTP2_CLIENT_CONNECTION_PREFACE`` was replaced with\n  ``NGHTTP2_CLIENT_MAGIC``.\n* ``NGHTTP2_CLIENT_CONNECTION_PREFACE_LEN`` was replaced with\n  ``NGHTTP2_CLIENT_MAGIC_LEN``.\n* ``NGHTTP2_BAD_PREFACE`` was renamed as ``NGHTTP2_BAD_CLIENT_MAGIC``\n\nThe already deprecated ``NGHTTP2_CLIENT_CONNECTION_HEADER`` and\n``NGHTTP2_CLIENT_CONNECTION_HEADER_LEN`` were removed.\n\nIf application uses these macros, just replace old ones with new ones.\nSince v1.0.0, client magic is sent by library (see next subsection),\nso client application may just remove these macro use.\n\nClient magic is sent by library\n+++++++++++++++++++++++++++++++\n\nPreviously nghttp2 library did not send client magic, which is first\n24 bytes byte string of client connection preface, and client\napplications have to send it by themselves.  Since v1.0.0, client\nmagic is sent by library via first call of ``nghttp2_session_send()``\nor ``nghttp2_session_mem_send2()``.\n\nThe client applications which send client magic must remove the\nrelevant code.\n\nRemove HTTP Alternative Services (Alt-Svc) related code\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nAlt-Svc specification is not finalized yet.  To make our API stable,\nwe have decided to remove all Alt-Svc related API from nghttp2.\n\n* ``NGHTTP2_EXT_ALTSVC`` was removed.\n* ``nghttp2_ext_altsvc`` was removed.\n\nWe have already removed the functionality of Alt-Svc in v0.7 series\nand they have been essentially noop.  The application using these\nmacro and struct, remove those lines.\n\nUse nghttp2_error in nghttp2_on_invalid_frame_recv_callback\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nPreviously ``nghttp2_on_invalid_frame_recv_cb_called`` took the\n``error_code``, defined in ``nghttp2_error_code``, as parameter.  But\nthey are not detailed enough to debug.  Therefore, we decided to use\nmore detailed ``nghttp2_error`` values instead.\n\nThe application using this callback should update the callback\nsignature.  If it treats ``error_code`` as HTTP/2 error code, update\nthe code so that it is treated as ``nghttp2_error``.\n\nReceive client magic by default\n+++++++++++++++++++++++++++++++\n\nPreviously nghttp2 did not process client magic (24 bytes byte\nstring).  To make it deal with it, we had to use\n``nghttp2_option_set_recv_client_preface()``.  Since v1.0.0, nghttp2\nprocesses client magic by default and\n``nghttp2_option_set_recv_client_preface()`` was removed.\n\nSome application may want to disable this behaviour, so we added\n``nghttp2_option_set_no_recv_client_magic()`` to achieve this.\n\nThe application using ``nghttp2_option_set_recv_client_preface()``\nwith nonzero value, just remove it.\n\nThe application using ``nghttp2_option_set_recv_client_preface()``\nwith zero value or not using it must use\n``nghttp2_option_set_no_recv_client_magic()`` with nonzero value.\n\nClient, Server and Proxy programs\n---------------------------------\n\nThe ``src`` directory contains the HTTP/2 client, server and proxy programs.\n\nnghttp - client\n+++++++++++++++\n\n``nghttp`` is a HTTP/2 client.  It can connect to the HTTP/2 server\nwith prior knowledge, HTTP Upgrade and ALPN TLS extension.\n\nIt has verbose output mode for framing information.  Here is sample\noutput from ``nghttp`` client:\n\n.. code-block:: text\n\n    $ nghttp -nv https://nghttp2.org\n    [  0.190] Connected\n    The negotiated protocol: h2\n    [  0.212] recv SETTINGS frame <length=12, flags=0x00, stream_id=0>\n\t      (niv=2)\n\t      [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n\t      [SETTINGS_INITIAL_WINDOW_SIZE(0x04):65535]\n    [  0.212] send SETTINGS frame <length=12, flags=0x00, stream_id=0>\n\t      (niv=2)\n\t      [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n\t      [SETTINGS_INITIAL_WINDOW_SIZE(0x04):65535]\n    [  0.212] send SETTINGS frame <length=0, flags=0x01, stream_id=0>\n\t      ; ACK\n\t      (niv=0)\n    [  0.212] send PRIORITY frame <length=5, flags=0x00, stream_id=3>\n\t      (dep_stream_id=0, weight=201, exclusive=0)\n    [  0.212] send PRIORITY frame <length=5, flags=0x00, stream_id=5>\n\t      (dep_stream_id=0, weight=101, exclusive=0)\n    [  0.212] send PRIORITY frame <length=5, flags=0x00, stream_id=7>\n\t      (dep_stream_id=0, weight=1, exclusive=0)\n    [  0.212] send PRIORITY frame <length=5, flags=0x00, stream_id=9>\n\t      (dep_stream_id=7, weight=1, exclusive=0)\n    [  0.212] send PRIORITY frame <length=5, flags=0x00, stream_id=11>\n\t      (dep_stream_id=3, weight=1, exclusive=0)\n    [  0.212] send HEADERS frame <length=39, flags=0x25, stream_id=13>\n\t      ; END_STREAM | END_HEADERS | PRIORITY\n\t      (padlen=0, dep_stream_id=11, weight=16, exclusive=0)\n\t      ; Open new stream\n\t      :method: GET\n\t      :path: /\n\t      :scheme: https\n\t      :authority: nghttp2.org\n\t      accept: */*\n\t      accept-encoding: gzip, deflate\n\t      user-agent: nghttp2/1.0.1-DEV\n    [  0.221] recv SETTINGS frame <length=0, flags=0x01, stream_id=0>\n\t      ; ACK\n\t      (niv=0)\n    [  0.221] recv (stream_id=13) :method: GET\n    [  0.221] recv (stream_id=13) :scheme: https\n    [  0.221] recv (stream_id=13) :path: /stylesheets/screen.css\n    [  0.221] recv (stream_id=13) :authority: nghttp2.org\n    [  0.221] recv (stream_id=13) accept-encoding: gzip, deflate\n    [  0.222] recv (stream_id=13) user-agent: nghttp2/1.0.1-DEV\n    [  0.222] recv PUSH_PROMISE frame <length=50, flags=0x04, stream_id=13>\n\t      ; END_HEADERS\n\t      (padlen=0, promised_stream_id=2)\n    [  0.222] recv (stream_id=13) :status: 200\n    [  0.222] recv (stream_id=13) date: Thu, 21 May 2015 16:38:14 GMT\n    [  0.222] recv (stream_id=13) content-type: text/html\n    [  0.222] recv (stream_id=13) last-modified: Fri, 15 May 2015 15:38:06 GMT\n    [  0.222] recv (stream_id=13) etag: W/\"555612de-19f6\"\n    [  0.222] recv (stream_id=13) link: </stylesheets/screen.css>; rel=preload; as=stylesheet\n    [  0.222] recv (stream_id=13) content-encoding: gzip\n    [  0.222] recv (stream_id=13) server: nghttpx nghttp2/1.0.1-DEV\n    [  0.222] recv (stream_id=13) via: 1.1 nghttpx\n    [  0.222] recv (stream_id=13) strict-transport-security: max-age=31536000\n    [  0.222] recv HEADERS frame <length=166, flags=0x04, stream_id=13>\n\t      ; END_HEADERS\n\t      (padlen=0)\n\t      ; First response header\n    [  0.222] recv DATA frame <length=2601, flags=0x01, stream_id=13>\n\t      ; END_STREAM\n    [  0.222] recv (stream_id=2) :status: 200\n    [  0.222] recv (stream_id=2) date: Thu, 21 May 2015 16:38:14 GMT\n    [  0.222] recv (stream_id=2) content-type: text/css\n    [  0.222] recv (stream_id=2) last-modified: Fri, 15 May 2015 15:38:06 GMT\n    [  0.222] recv (stream_id=2) etag: W/\"555612de-9845\"\n    [  0.222] recv (stream_id=2) content-encoding: gzip\n    [  0.222] recv (stream_id=2) server: nghttpx nghttp2/1.0.1-DEV\n    [  0.222] recv (stream_id=2) via: 1.1 nghttpx\n    [  0.222] recv (stream_id=2) strict-transport-security: max-age=31536000\n    [  0.222] recv HEADERS frame <length=32, flags=0x04, stream_id=2>\n\t      ; END_HEADERS\n\t      (padlen=0)\n\t      ; First push response header\n    [  0.228] recv DATA frame <length=8715, flags=0x01, stream_id=2>\n\t      ; END_STREAM\n    [  0.228] send GOAWAY frame <length=8, flags=0x00, stream_id=0>\n\t      (last_stream_id=2, error_code=NO_ERROR(0x00), opaque_data(0)=[])\n\nThe HTTP Upgrade is performed like so:\n\n.. code-block:: text\n\n    $ nghttp -nvu http://nghttp2.org\n    [  0.011] Connected\n    [  0.011] HTTP Upgrade request\n    GET / HTTP/1.1\n    Host: nghttp2.org\n    Connection: Upgrade, HTTP2-Settings\n    Upgrade: h2c\n    HTTP2-Settings: AAMAAABkAAQAAP__\n    Accept: */*\n    User-Agent: nghttp2/1.0.1-DEV\n\n\n    [  0.018] HTTP Upgrade response\n    HTTP/1.1 101 Switching Protocols\n    Connection: Upgrade\n    Upgrade: h2c\n\n\n    [  0.018] HTTP Upgrade success\n    [  0.018] recv SETTINGS frame <length=12, flags=0x00, stream_id=0>\n\t      (niv=2)\n\t      [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n\t      [SETTINGS_INITIAL_WINDOW_SIZE(0x04):65535]\n    [  0.018] send SETTINGS frame <length=12, flags=0x00, stream_id=0>\n\t      (niv=2)\n\t      [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n\t      [SETTINGS_INITIAL_WINDOW_SIZE(0x04):65535]\n    [  0.018] send SETTINGS frame <length=0, flags=0x01, stream_id=0>\n\t      ; ACK\n\t      (niv=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=3>\n\t      (dep_stream_id=0, weight=201, exclusive=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=5>\n\t      (dep_stream_id=0, weight=101, exclusive=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=7>\n\t      (dep_stream_id=0, weight=1, exclusive=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=9>\n\t      (dep_stream_id=7, weight=1, exclusive=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=11>\n\t      (dep_stream_id=3, weight=1, exclusive=0)\n    [  0.018] send PRIORITY frame <length=5, flags=0x00, stream_id=1>\n\t      (dep_stream_id=11, weight=16, exclusive=0)\n    [  0.019] recv (stream_id=1) :method: GET\n    [  0.019] recv (stream_id=1) :scheme: http\n    [  0.019] recv (stream_id=1) :path: /stylesheets/screen.css\n    [  0.019] recv (stream_id=1) host: nghttp2.org\n    [  0.019] recv (stream_id=1) user-agent: nghttp2/1.0.1-DEV\n    [  0.019] recv PUSH_PROMISE frame <length=49, flags=0x04, stream_id=1>\n\t      ; END_HEADERS\n\t      (padlen=0, promised_stream_id=2)\n    [  0.019] recv (stream_id=1) :status: 200\n    [  0.019] recv (stream_id=1) date: Thu, 21 May 2015 16:39:16 GMT\n    [  0.019] recv (stream_id=1) content-type: text/html\n    [  0.019] recv (stream_id=1) content-length: 6646\n    [  0.019] recv (stream_id=1) last-modified: Fri, 15 May 2015 15:38:06 GMT\n    [  0.019] recv (stream_id=1) etag: \"555612de-19f6\"\n    [  0.019] recv (stream_id=1) link: </stylesheets/screen.css>; rel=preload; as=stylesheet\n    [  0.019] recv (stream_id=1) accept-ranges: bytes\n    [  0.019] recv (stream_id=1) server: nghttpx nghttp2/1.0.1-DEV\n    [  0.019] recv (stream_id=1) via: 1.1 nghttpx\n    [  0.019] recv HEADERS frame <length=157, flags=0x04, stream_id=1>\n\t      ; END_HEADERS\n\t      (padlen=0)\n\t      ; First response header\n    [  0.019] recv DATA frame <length=6646, flags=0x01, stream_id=1>\n\t      ; END_STREAM\n    [  0.019] recv (stream_id=2) :status: 200\n    [  0.019] recv (stream_id=2) date: Thu, 21 May 2015 16:39:16 GMT\n    [  0.019] recv (stream_id=2) content-type: text/css\n    [  0.019] recv (stream_id=2) content-length: 38981\n    [  0.019] recv (stream_id=2) last-modified: Fri, 15 May 2015 15:38:06 GMT\n    [  0.019] recv (stream_id=2) etag: \"555612de-9845\"\n    [  0.019] recv (stream_id=2) accept-ranges: bytes\n    [  0.019] recv (stream_id=2) server: nghttpx nghttp2/1.0.1-DEV\n    [  0.019] recv (stream_id=2) via: 1.1 nghttpx\n    [  0.019] recv HEADERS frame <length=36, flags=0x04, stream_id=2>\n\t      ; END_HEADERS\n\t      (padlen=0)\n\t      ; First push response header\n    [  0.026] recv DATA frame <length=16384, flags=0x00, stream_id=2>\n    [  0.027] recv DATA frame <length=7952, flags=0x00, stream_id=2>\n    [  0.027] send WINDOW_UPDATE frame <length=4, flags=0x00, stream_id=0>\n\t      (window_size_increment=33343)\n    [  0.032] send WINDOW_UPDATE frame <length=4, flags=0x00, stream_id=2>\n\t      (window_size_increment=33707)\n    [  0.032] recv DATA frame <length=14645, flags=0x01, stream_id=2>\n\t      ; END_STREAM\n    [  0.032] recv SETTINGS frame <length=0, flags=0x01, stream_id=0>\n\t      ; ACK\n\t      (niv=0)\n    [  0.032] send GOAWAY frame <length=8, flags=0x00, stream_id=0>\n\t      (last_stream_id=2, error_code=NO_ERROR(0x00), opaque_data(0)=[])\n\nUsing the ``-s`` option, ``nghttp`` prints out some timing information for\nrequests, sorted by completion time:\n\n.. code-block:: text\n\n    $ nghttp -nas https://nghttp2.org/\n    ***** Statistics *****\n\n    Request timing:\n      responseEnd: the  time  when  last  byte of  response  was  received\n                   relative to connectEnd\n     requestStart: the time  just before  first byte  of request  was sent\n                   relative  to connectEnd.   If  '*' is  shown, this  was\n                   pushed by server.\n          process: responseEnd - requestStart\n             code: HTTP status code\n             size: number  of  bytes  received as  response  body  without\n                   inflation.\n              URI: request URI\n\n    see http://www.w3.org/TR/resource-timing/#processing-model\n\n    sorted by 'complete'\n\n    id  responseEnd requestStart  process code size request path\n     13    +37.19ms       +280us  36.91ms  200   2K /\n      2    +72.65ms *   +36.38ms  36.26ms  200   8K /stylesheets/screen.css\n     17    +77.43ms     +38.67ms  38.75ms  200   3K /javascripts/octopress.js\n     15    +78.12ms     +38.66ms  39.46ms  200   3K /javascripts/modernizr-2.0.js\n\nUsing the ``-r`` option, ``nghttp`` writes more detailed timing data to\nthe given file in HAR format.\n\nnghttpd - server\n++++++++++++++++\n\n``nghttpd`` is a multi-threaded static web server.\n\nBy default, it uses SSL/TLS connection.  Use ``--no-tls`` option to\ndisable it.\n\n``nghttpd`` only accepts HTTP/2 connections via ALPN or direct HTTP/2\nconnections.  No HTTP Upgrade is supported.\n\nThe ``-p`` option allows users to configure server push.\n\nJust like ``nghttp``, it has a verbose output mode for framing\ninformation.  Here is sample output from ``nghttpd``:\n\n.. code-block:: text\n\n    $ nghttpd --no-tls -v 8080\n    IPv4: listen 0.0.0.0:8080\n    IPv6: listen :::8080\n    [id=1] [  1.521] send SETTINGS frame <length=6, flags=0x00, stream_id=0>\n              (niv=1)\n              [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n    [id=1] [  1.521] recv SETTINGS frame <length=12, flags=0x00, stream_id=0>\n              (niv=2)\n              [SETTINGS_MAX_CONCURRENT_STREAMS(0x03):100]\n              [SETTINGS_INITIAL_WINDOW_SIZE(0x04):65535]\n    [id=1] [  1.521] recv SETTINGS frame <length=0, flags=0x01, stream_id=0>\n              ; ACK\n              (niv=0)\n    [id=1] [  1.521] recv PRIORITY frame <length=5, flags=0x00, stream_id=3>\n              (dep_stream_id=0, weight=201, exclusive=0)\n    [id=1] [  1.521] recv PRIORITY frame <length=5, flags=0x00, stream_id=5>\n              (dep_stream_id=0, weight=101, exclusive=0)\n    [id=1] [  1.521] recv PRIORITY frame <length=5, flags=0x00, stream_id=7>\n              (dep_stream_id=0, weight=1, exclusive=0)\n    [id=1] [  1.521] recv PRIORITY frame <length=5, flags=0x00, stream_id=9>\n              (dep_stream_id=7, weight=1, exclusive=0)\n    [id=1] [  1.521] recv PRIORITY frame <length=5, flags=0x00, stream_id=11>\n              (dep_stream_id=3, weight=1, exclusive=0)\n    [id=1] [  1.521] recv (stream_id=13) :method: GET\n    [id=1] [  1.521] recv (stream_id=13) :path: /\n    [id=1] [  1.521] recv (stream_id=13) :scheme: http\n    [id=1] [  1.521] recv (stream_id=13) :authority: localhost:8080\n    [id=1] [  1.521] recv (stream_id=13) accept: */*\n    [id=1] [  1.521] recv (stream_id=13) accept-encoding: gzip, deflate\n    [id=1] [  1.521] recv (stream_id=13) user-agent: nghttp2/1.0.0-DEV\n    [id=1] [  1.521] recv HEADERS frame <length=41, flags=0x25, stream_id=13>\n              ; END_STREAM | END_HEADERS | PRIORITY\n              (padlen=0, dep_stream_id=11, weight=16, exclusive=0)\n              ; Open new stream\n    [id=1] [  1.521] send SETTINGS frame <length=0, flags=0x01, stream_id=0>\n              ; ACK\n              (niv=0)\n    [id=1] [  1.521] send HEADERS frame <length=86, flags=0x04, stream_id=13>\n              ; END_HEADERS\n              (padlen=0)\n              ; First response header\n              :status: 200\n              server: nghttpd nghttp2/1.0.0-DEV\n              content-length: 10\n              cache-control: max-age=3600\n              date: Fri, 15 May 2015 14:49:04 GMT\n              last-modified: Tue, 30 Sep 2014 12:40:52 GMT\n    [id=1] [  1.522] send DATA frame <length=10, flags=0x01, stream_id=13>\n              ; END_STREAM\n    [id=1] [  1.522] stream_id=13 closed\n    [id=1] [  1.522] recv GOAWAY frame <length=8, flags=0x00, stream_id=0>\n              (last_stream_id=0, error_code=NO_ERROR(0x00), opaque_data(0)=[])\n    [id=1] [  1.522] closed\n\nnghttpx - proxy\n+++++++++++++++\n\n``nghttpx`` is a multi-threaded reverse proxy for HTTP/3, HTTP/2, and\nHTTP/1.1, and powers http://nghttp2.org and supports HTTP/2 server\npush.\n\nWe reworked ``nghttpx`` command-line interface, and as a result, there\nare several incompatibles from 1.8.0 or earlier.  This is necessary to\nextend its capability, and secure the further feature enhancements in\nthe future release.  Please read `Migration from nghttpx v1.8.0 or\nearlier\n<https://nghttp2.org/documentation/nghttpx-howto.html#migration-from-nghttpx-v1-8-0-or-earlier>`_\nto know how to migrate from earlier releases.\n\n``nghttpx`` implements `important performance-oriented features\n<https://istlsfastyet.com/#server-performance>`_ in TLS, such as\nsession IDs, session tickets (with automatic key rotation), OCSP\nstapling, dynamic record sizing, ALPN, forward secrecy and HTTP/2.\n``nghttpx`` also offers the functionality to share session cache and\nticket keys among multiple ``nghttpx`` instances via memcached.\n\n``nghttpx`` has 2 operation modes:\n\n================== ======================== ================ =============\nMode option        Frontend                 Backend          Note\n================== ======================== ================ =============\ndefault mode       HTTP/3, HTTP/2, HTTP/1.1 HTTP/1.1, HTTP/2 Reverse proxy\n``--http2-proxy``  HTTP/3, HTTP/2, HTTP/1.1 HTTP/1.1, HTTP/2 Forward proxy\n================== ======================== ================ =============\n\nThe interesting mode at the moment is the default mode.  It works like\na reverse proxy and listens for HTTP/3, HTTP/2, and HTTP/1.1 and can\nbe deployed as a SSL/TLS terminator for existing web server.\n\nIn all modes, the frontend connections are encrypted by SSL/TLS by\ndefault.  To disable encryption, use the ``no-tls`` keyword in\n``--frontend`` option.  If encryption is disabled, incoming HTTP/1.1\nconnections can be upgraded to HTTP/2 through HTTP Upgrade.  On the\nother hard, backend connections are not encrypted by default.  To\nencrypt backend connections, use ``tls`` keyword in ``--backend``\noption.\n\n``nghttpx`` supports a configuration file.  See the ``--conf`` option and\nsample configuration file ``nghttpx.conf.sample``.\n\nIn the default mode, ``nghttpx`` works as reverse proxy to the backend\nserver:\n\n.. code-block:: text\n\n    Client <-- (HTTP/3, HTTP/2, HTTP/1.1) --> nghttpx <-- (HTTP/1.1, HTTP/2) --> Web Server\n                                            [reverse proxy]\n\nWith the ``--http2-proxy`` option, it works as forward proxy, and it\nis so called secure HTTP/2 proxy:\n\n.. code-block:: text\n\n    Client <-- (HTTP/3, HTTP/2, HTTP/1.1) --> nghttpx <-- (HTTP/1.1) --> Proxy\n                                             [secure proxy]          (e.g., Squid, ATS)\n\nThe ``Client`` in the above example needs to be configured to use\n``nghttpx`` as secure proxy.\n\nAt the time of this writing, both Chrome and Firefox support secure\nHTTP/2 proxy.  One way to configure Chrome to use a secure proxy is to\ncreate a proxy.pac script like this:\n\n.. code-block:: javascript\n\n    function FindProxyForURL(url, host) {\n        return \"HTTPS SERVERADDR:PORT\";\n    }\n\n``SERVERADDR`` and ``PORT`` is the hostname/address and port of the\nmachine nghttpx is running on.  Please note that Chrome requires a valid\ncertificate for secure proxy.\n\nThen run Chrome with the following arguments:\n\n.. code-block:: text\n\n    $ google-chrome --proxy-pac-url=file:///path/to/proxy.pac --use-npn\n\nThe backend HTTP/2 connections can be tunneled through an HTTP proxy.\nThe proxy is specified using ``--backend-http-proxy-uri``.  The\nfollowing figure illustrates how nghttpx talks to the outside HTTP/2\nproxy through an HTTP proxy:\n\n.. code-block:: text\n\n    Client <-- (HTTP/3, HTTP/2, HTTP/1.1) --> nghttpx <-- (HTTP/2) --\n\n            --===================---> HTTP/2 Proxy\n              (HTTP proxy tunnel)     (e.g., nghttpx -s)\n\nBenchmarking tool\n-----------------\n\nThe ``h2load`` program is a benchmarking tool for HTTP/3, HTTP/2, and\nHTTP/1.1.  The UI of ``h2load`` is heavily inspired by ``weighttp``\n(https://github.com/lighttpd/weighttp).  The typical usage is as\nfollows:\n\n.. code-block:: text\n\n    $ h2load -n100000 -c100 -m100 https://localhost:8443/\n    starting benchmark...\n    spawning thread #0: 100 concurrent clients, 100000 total requests\n    Protocol: TLSv1.2\n    Cipher: ECDHE-RSA-AES128-GCM-SHA256\n    Server Temp Key: ECDH P-256 256 bits\n    progress: 10% done\n    progress: 20% done\n    progress: 30% done\n    progress: 40% done\n    progress: 50% done\n    progress: 60% done\n    progress: 70% done\n    progress: 80% done\n    progress: 90% done\n    progress: 100% done\n\n    finished in 771.26ms, 129658 req/s, 4.71MB/s\n    requests: 100000 total, 100000 started, 100000 done, 100000 succeeded, 0 failed, 0 errored\n    status codes: 100000 2xx, 0 3xx, 0 4xx, 0 5xx\n    traffic: 3812300 bytes total, 1009900 bytes headers, 1000000 bytes data\n                         min         max         mean         sd        +/- sd\n    time for request:    25.12ms    124.55ms     51.07ms     15.36ms    84.87%\n    time for connect:   208.94ms    254.67ms    241.38ms      7.95ms    63.00%\n    time to 1st byte:   209.11ms    254.80ms    241.51ms      7.94ms    63.00%\n\nThe above example issued total 100,000 requests, using 100 concurrent\nclients (in other words, 100 HTTP/2 sessions), and a maximum of 100 streams\nper client.  With the ``-t`` option, ``h2load`` will use multiple native\nthreads to avoid saturating a single core on client side.\n\n.. warning::\n\n   **Don't use this tool against publicly available servers.** That is\n   considered a DOS attack.  Please only use it against your private\n   servers.\n\nIf the experimental HTTP/3 is enabled, h2load can send requests to\nHTTP/3 server.  To do this, specify ``h3`` to ``--alpn-list`` option\nlike so:\n\n.. code-block:: text\n\n    $ h2load --alpn-list h3 https://127.0.0.1:4433\n\nFor nghttp2 v1.58 or earlier, use ``--npn-list`` instead of\n``--alpn-list``.\n\nHPACK tools\n-----------\n\nThe ``src`` directory contains the HPACK tools.  The ``deflatehd`` program is a\ncommand-line header compression tool.  The ``inflatehd`` program is a\ncommand-line header decompression tool.  Both tools read input from\nstdin and write output to stdout.  Errors are written to stderr.\nThey take JSON as input and output.  We  (mostly) use the same JSON data\nformat described at https://github.com/http2jp/hpack-test-case.\n\ndeflatehd - header compressor\n+++++++++++++++++++++++++++++\n\nThe ``deflatehd`` program reads JSON data or HTTP/1-style header fields from\nstdin and outputs compressed header block in JSON.\n\nFor the JSON input, the root JSON object must include a ``cases`` key.\nIts value has to include the sequence of input header set.  They share\nthe same compression context and are processed in the order they\nappear.  Each item in the sequence is a JSON object and it must\ninclude a ``headers`` key.  Its value is an array of JSON objects,\nwhich includes exactly one name/value pair.\n\nExample:\n\n.. code-block:: json\n\n    {\n      \"cases\":\n      [\n        {\n          \"headers\": [\n            { \":method\": \"GET\" },\n            { \":path\": \"/\" }\n          ]\n        },\n        {\n          \"headers\": [\n            { \":method\": \"POST\" },\n            { \":path\": \"/\" }\n          ]\n        }\n      ]\n    }\n\n\nWith the ``-t`` option, the program can accept more familiar HTTP/1 style\nheader field blocks.  Each header set is delimited by an empty line:\n\nExample:\n\n.. code-block:: text\n\n    :method: GET\n    :scheme: https\n    :path: /\n\n    :method: POST\n    user-agent: nghttp2\n\nThe output is in JSON object.  It should include a ``cases`` key and its\nvalue is an array of JSON objects, which has at least the following keys:\n\nseq\n    The index of header set in the input.\n\ninput_length\n    The sum of the length of the name/value pairs in the input.\n\noutput_length\n    The length of the compressed header block.\n\npercentage_of_original_size\n    ``output_length`` / ``input_length`` * 100\n\nwire\n    The compressed header block as a hex string.\n\nheaders\n    The input header set.\n\nheader_table_size\n    The header table size adjusted before deflating the header set.\n\nExamples:\n\n.. code-block:: json\n\n    {\n      \"cases\":\n      [\n        {\n          \"seq\": 0,\n          \"input_length\": 66,\n          \"output_length\": 20,\n          \"percentage_of_original_size\": 30.303030303030305,\n          \"wire\": \"01881f3468e5891afcbf83868a3d856659c62e3f\",\n          \"headers\": [\n            {\n              \":authority\": \"example.org\"\n            },\n            {\n              \":method\": \"GET\"\n            },\n            {\n              \":path\": \"/\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            }\n          ],\n          \"header_table_size\": 4096\n        }\n        ,\n        {\n          \"seq\": 1,\n          \"input_length\": 74,\n          \"output_length\": 10,\n          \"percentage_of_original_size\": 13.513513513513514,\n          \"wire\": \"88448504252dd5918485\",\n          \"headers\": [\n            {\n              \":authority\": \"example.org\"\n            },\n            {\n              \":method\": \"POST\"\n            },\n            {\n              \":path\": \"/account\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            }\n          ],\n          \"header_table_size\": 4096\n        }\n      ]\n    }\n\n\nThe output can be used as the input for ``inflatehd`` and\n``deflatehd``.\n\nWith the ``-d`` option, the extra ``header_table`` key is added and its\nassociated value includes the state of dynamic header table after the\ncorresponding header set was processed.  The value includes at least\nthe following keys:\n\nentries\n    The entry in the header table.  If ``referenced`` is ``true``, it\n    is in the reference set.  The ``size`` includes the overhead (32\n    bytes).  The ``index`` corresponds to the index of header table.\n    The ``name`` is the header field name and the ``value`` is the\n    header field value.\n\nsize\n    The sum of the spaces entries occupied, this includes the\n    entry overhead.\n\nmax_size\n    The maximum header table size.\n\ndeflate_size\n    The sum of the spaces entries occupied within\n    ``max_deflate_size``.\n\nmax_deflate_size\n    The maximum header table size the encoder uses.  This can be smaller\n    than ``max_size``.  In this case, the encoder only uses up to first\n    ``max_deflate_size`` buffer.  Since the header table size is still\n    ``max_size``, the encoder has to keep track of entries outside the\n    ``max_deflate_size`` but inside the ``max_size`` and make sure\n    that they are no longer referenced.\n\nExample:\n\n.. code-block:: json\n\n    {\n      \"cases\":\n      [\n        {\n          \"seq\": 0,\n          \"input_length\": 66,\n          \"output_length\": 20,\n          \"percentage_of_original_size\": 30.303030303030305,\n          \"wire\": \"01881f3468e5891afcbf83868a3d856659c62e3f\",\n          \"headers\": [\n            {\n              \":authority\": \"example.org\"\n            },\n            {\n              \":method\": \"GET\"\n            },\n            {\n              \":path\": \"/\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            }\n          ],\n          \"header_table_size\": 4096,\n          \"header_table\": {\n            \"entries\": [\n              {\n                \"index\": 1,\n                \"name\": \"user-agent\",\n                \"value\": \"nghttp2\",\n                \"referenced\": true,\n                \"size\": 49\n              },\n              {\n                \"index\": 2,\n                \"name\": \":scheme\",\n                \"value\": \"https\",\n                \"referenced\": true,\n                \"size\": 44\n              },\n              {\n                \"index\": 3,\n                \"name\": \":path\",\n                \"value\": \"/\",\n                \"referenced\": true,\n                \"size\": 38\n              },\n              {\n                \"index\": 4,\n                \"name\": \":method\",\n                \"value\": \"GET\",\n                \"referenced\": true,\n                \"size\": 42\n              },\n              {\n                \"index\": 5,\n                \"name\": \":authority\",\n                \"value\": \"example.org\",\n                \"referenced\": true,\n                \"size\": 53\n              }\n            ],\n            \"size\": 226,\n            \"max_size\": 4096,\n            \"deflate_size\": 226,\n            \"max_deflate_size\": 4096\n          }\n        }\n        ,\n        {\n          \"seq\": 1,\n          \"input_length\": 74,\n          \"output_length\": 10,\n          \"percentage_of_original_size\": 13.513513513513514,\n          \"wire\": \"88448504252dd5918485\",\n          \"headers\": [\n            {\n              \":authority\": \"example.org\"\n            },\n            {\n              \":method\": \"POST\"\n            },\n            {\n              \":path\": \"/account\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            }\n          ],\n          \"header_table_size\": 4096,\n          \"header_table\": {\n            \"entries\": [\n              {\n                \"index\": 1,\n                \"name\": \":method\",\n                \"value\": \"POST\",\n                \"referenced\": true,\n                \"size\": 43\n              },\n              {\n                \"index\": 2,\n                \"name\": \"user-agent\",\n                \"value\": \"nghttp2\",\n                \"referenced\": true,\n                \"size\": 49\n              },\n              {\n                \"index\": 3,\n                \"name\": \":scheme\",\n                \"value\": \"https\",\n                \"referenced\": true,\n                \"size\": 44\n              },\n              {\n                \"index\": 4,\n                \"name\": \":path\",\n                \"value\": \"/\",\n                \"referenced\": false,\n                \"size\": 38\n              },\n              {\n                \"index\": 5,\n                \"name\": \":method\",\n                \"value\": \"GET\",\n                \"referenced\": false,\n                \"size\": 42\n              },\n              {\n                \"index\": 6,\n                \"name\": \":authority\",\n                \"value\": \"example.org\",\n                \"referenced\": true,\n                \"size\": 53\n              }\n            ],\n            \"size\": 269,\n            \"max_size\": 4096,\n            \"deflate_size\": 269,\n            \"max_deflate_size\": 4096\n          }\n        }\n      ]\n    }\n\ninflatehd - header decompressor\n+++++++++++++++++++++++++++++++\n\nThe ``inflatehd`` program reads JSON data from stdin and outputs decompressed\nname/value pairs in JSON.\n\nThe root JSON object must include the ``cases`` key.  Its value has to\ninclude the sequence of compressed header blocks.  They share the same\ncompression context and are processed in the order they appear.  Each\nitem in the sequence is a JSON object and it must have at least a\n``wire`` key.  Its value is a compressed header block as a hex string.\n\nExample:\n\n.. code-block:: json\n\n    {\n      \"cases\":\n      [\n        { \"wire\": \"8285\" },\n        { \"wire\": \"8583\" }\n      ]\n    }\n\nThe output is a JSON object.  It should include a ``cases`` key and its\nvalue is an array of JSON objects, which has at least following keys:\n\nseq\n    The index of the header set in the input.\n\nheaders\n    A JSON array that includes decompressed name/value pairs.\n\nwire\n    The compressed header block as a hex string.\n\nheader_table_size\n    The header table size adjusted before inflating compressed header\n    block.\n\nExample:\n\n.. code-block:: json\n\n    {\n      \"cases\":\n      [\n        {\n          \"seq\": 0,\n          \"wire\": \"01881f3468e5891afcbf83868a3d856659c62e3f\",\n          \"headers\": [\n            {\n              \":authority\": \"example.org\"\n            },\n            {\n              \":method\": \"GET\"\n            },\n            {\n              \":path\": \"/\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            }\n          ],\n          \"header_table_size\": 4096\n        }\n        ,\n        {\n          \"seq\": 1,\n          \"wire\": \"88448504252dd5918485\",\n          \"headers\": [\n            {\n              \":method\": \"POST\"\n            },\n            {\n              \":path\": \"/account\"\n            },\n            {\n              \"user-agent\": \"nghttp2\"\n            },\n            {\n              \":scheme\": \"https\"\n            },\n            {\n              \":authority\": \"example.org\"\n            }\n          ],\n          \"header_table_size\": 4096\n        }\n      ]\n    }\n\nThe output can be used as the input for ``deflatehd`` and\n``inflatehd``.\n\nWith the ``-d`` option, the extra ``header_table`` key is added and its\nassociated value includes the state of the dynamic header table after the\ncorresponding header set was processed.  The format is the same as\n``deflatehd``.\n\nContribution\n------------\n\n[This text was composed based on 1.2. License section of curl/libcurl\nproject.]\n\nWhen contributing with code, you agree to put your changes and new\ncode under the same license nghttp2 is already using unless stated and\nagreed otherwise.\n\nWhen changing existing source code, do not alter the copyright of\nthe original file(s).  The copyright will still be owned by the\noriginal creator(s) or those who have been assigned copyright by the\noriginal author(s).\n\nBy submitting a patch to the nghttp2 project, you (or your employer, as\nthe case may be) agree to assign the copyright of your submission to us.\n.. the above really needs to be reworded to pass legal muster.\nWe will credit you for your\nchanges as far as possible, to give credit but also to keep a trace\nback to who made what changes.  Please always provide us with your\nfull real name when contributing!\n\nSee `Contribution Guidelines\n<https://nghttp2.org/documentation/contribute.html>`_ for more\ndetails.\n\nVersioning\n----------\n\nIn general, we follow `Semantic Versioning <http://semver.org/>`_.\n\nWe may release PATCH releases between the regular releases, mainly for\nsevere security bug fixes.\n\nWe have no plan to break API compatibility changes involving soname\nbump, so MAJOR version will stay 1 for the foreseeable future.\n\nLicense\n-------\n\nThe MIT License\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.41796875,
          "content": "# Security Process\n\nIf you find a vulnerability in our software, please report it via\nGitHub \"Private vulnerability reporting\" feature at\nhttps://github.com/nghttp2/nghttp2/security instead of submitting\nissues on github issue page.  It is a standard practice not to\ndisclose vulnerability information publicly until a fixed version is\nreleased, or mitigation is worked out.\n\nIf we identify that the reported issue is really a vulnerability, we\nopen a new security advisory draft using [GitHub security\nfeature](https://github.com/nghttp2/nghttp2/security) and discuss the\nmitigation and bug fixes there.  The fixes are committed to the\nprivate repository.\n\nWe write the security advisory and get CVE number from GitHub\nprivately.  We also discuss the disclosure date to the public.\n\nWe make a new release with the fix at the same time when the\nvulnerability is disclosed to public.\n\nAt least 7 days before the public disclosure date, we open a new issue\non [nghttp2 issue tracker](https://github.com/nghttp2/nghttp2/issues)\nwhich notifies that the upcoming release will have a security fix.\nThe `SECURITY` label is attached to this kind of issue.  The issue is\nnot opened if a vulnerability is already disclosed, and it is publicly\nknown that nghttp2 is affected by that.\n\nBefore few hours of new release, we merge the fixes to the master\nbranch (and/or a release branch if necessary) and make a new release.\nSecurity advisory is disclosed on GitHub.\n"
        },
        {
          "name": "android-config",
          "type": "blob",
          "size": 1.4404296875,
          "content": "#!/bin/sh\n#\n# nghttp2 - HTTP/2 C Library\n#\n# Copyright (c) 2013 Tatsuhiro Tsujikawa\n#\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n. ./android-env\n\n./configure \\\n    --disable-shared \\\n    --host=$TARGET \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --without-libxml2 \\\n    --disable-examples \\\n    --disable-threads \\\n    CPPFLAGS=\"-fPIE -I$PREFIX/include\" \\\n    PKG_CONFIG_LIBDIR=\"$PREFIX/lib/pkgconfig\" \\\n    LDFLAGS=\"-fPIE -pie -L$PREFIX/lib\"\n"
        },
        {
          "name": "android-env",
          "type": "blob",
          "size": 1.5458984375,
          "content": "#!/bin/sh\n#\n# nghttp2 - HTTP/2 C Library\n#\n# Copyright (c) 2022 nghttp2 contributors\n#\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nif [ -z \"$NDK\" ]; then\n    echo 'No $NDK specified.'\n    exit 1\nfi\n\nexport TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64\nexport TARGET=aarch64-linux-android\nexport API=33\nexport AR=$TOOLCHAIN/bin/llvm-ar\nexport CC=$TOOLCHAIN/bin/$TARGET$API-clang\nexport CXX=$TOOLCHAIN/bin/$TARGET$API-clang++\nexport LD=$TOOLCHAIN/bin/ld\nexport RANDLIB=$TOOLCHAIN/bin/llvm-ranlib\nexport STRIP=$TOOLCHAIN/bin/llvm-strip\nexport PREFIX=$NDK/usr/local\n"
        },
        {
          "name": "author.py",
          "type": "blob",
          "size": 1.4609375,
          "content": "#!/usr/bin/env python3\n\n# script to extract commit author's name from standard input.  The\n# input should be <AUTHOR>:<EMAIL>, one per line.\n# This script expects the input is created by git-log command:\n#\n#   git log --format=%aN:%aE\n#\n# This script removes duplicates based on email address, breaking a\n# tie with longer author name.  Among the all author names extract the\n# previous step, we remove duplicate by case-insensitive match.\n#\n# So we can do this in one line:\n#\n#   git log --format=%aN:%aE | sort | uniq | ./author.py > authors\n\nimport sys\n\nedict = {}\n\nfor line in sys.stdin:\n    author, email = line.strip().split(':', 1)\n    if email in edict:\n        an = edict[email]\n        if len(an) < len(author) or an > author:\n            sys.stderr.write(\n                'eliminated {} in favor of {}\\n'.format(an, author))\n            edict[email] = author\n        else:\n            sys.stderr.write(\n                'eliminated {} in favor of {}\\n'.format(author, an))\n    else:\n        edict[email] = author\n\nnames = list(sorted(edict.values()))\n\nndict = {}\n\nfor name in names:\n    lowname = name.lower()\n    if lowname in ndict:\n        an = ndict[lowname]\n        if an > name:\n            sys.stderr.write('eliminated {} in favor of {}\\n'.format(an, name))\n            ndict[lowname] = name\n        else:\n            sys.stderr.write('eliminated {} in favor of {}\\n'.format(name, an))\n    else:\n        ndict[lowname] = name\n\nfor name in sorted(ndict.values()):\n    print(name)\n"
        },
        {
          "name": "bpf",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmakeconfig.h.in",
          "type": "blob",
          "size": 3.27734375,
          "content": "/* Hint to the compiler that a function never returns */\n#define NGHTTP2_NORETURN @HINT_NORETURN@\n\n/* Define to `int' if <sys/types.h> does not define. */\n#cmakedefine ssize_t @ssize_t@\n\n/* Define to 1 if you have the `std::map::emplace`. */\n#cmakedefine HAVE_STD_MAP_EMPLACE 1\n\n/* Define to 1 if you have `libjansson` library. */\n#cmakedefine HAVE_JANSSON 1\n\n/* Define to 1 if you have `libxml2` library. */\n#cmakedefine HAVE_LIBXML2 1\n\n/* Define to 1 if you have `mruby` library. */\n#cmakedefine HAVE_MRUBY 1\n\n/* Define to 1 if you have `neverbleed` library. */\n#cmakedefine HAVE_NEVERBLEED 1\n\n/* Define to 1 if you have the `_Exit` function. */\n#cmakedefine HAVE__EXIT 1\n\n/* Define to 1 if you have the `accept4` function. */\n#cmakedefine HAVE_ACCEPT4 1\n\n/* Define to 1 if you have the `clock_gettime` function. */\n#cmakedefine HAVE_CLOCK_GETTIME 1\n\n/* Define to 1 if you have the `mkostemp` function. */\n#cmakedefine HAVE_MKOSTEMP 1\n\n/* Define to 1 if you have the `pipe2` function. */\n#cmakedefine HAVE_PIPE2 1\n\n/* Define to 1 if you have the `GetTickCount64` function. */\n#cmakedefine HAVE_GETTICKCOUNT64 1\n\n/* Define to 1 if you have the `initgroups` function. */\n#cmakedefine01 HAVE_DECL_INITGROUPS\n\n/* Define to 1 if you have the `CLOCK_MONOTONIC` defined. */\n#cmakedefine01 HAVE_DECL_CLOCK_MONOTONIC\n\n/* Define to 1 to enable debug output. */\n#cmakedefine DEBUGBUILD 1\n\n/* Define to 1 if you want to disable threads. */\n#cmakedefine NOTHREADS 1\n\n/* Define to 1 if you have the <arpa/inet.h> header file. */\n#cmakedefine HAVE_ARPA_INET_H 1\n\n/* Define to 1 if you have the <fcntl.h> header file. */\n#cmakedefine HAVE_FCNTL_H 1\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#cmakedefine HAVE_INTTYPES_H 1\n\n/* Define to 1 if you have the <limits.h> header file. */\n#cmakedefine HAVE_LIMITS_H 1\n\n/* Define to 1 if you have the <netdb.h> header file. */\n#cmakedefine HAVE_NETDB_H 1\n\n/* Define to 1 if you have the <netinet/in.h> header file. */\n#cmakedefine HAVE_NETINET_IN_H 1\n\n/* Define to 1 if you have the <netinet/ip.h> header file. */\n#cmakedefine HAVE_NETINET_IP_H 1\n\n/* Define to 1 if you have the <pwd.h> header file. */\n#cmakedefine HAVE_PWD_H 1\n\n/* Define to 1 if you have the <sys/socket.h> header file. */\n#cmakedefine HAVE_SYS_SOCKET_H 1\n\n/* Define to 1 if you have the <sys/time.h> header file. */\n#cmakedefine HAVE_SYS_TIME_H 1\n\n/* Define to 1 if you have the <syslog.h> header file. */\n#cmakedefine HAVE_SYSLOG_H 1\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine HAVE_UNISTD_H 1\n\n/* Define to 1 if you have the <windows.h> header file. */\n#cmakedefine HAVE_WINDOWS_H 1\n\n/* Define to 1 if HTTP/3 is enabled. */\n#cmakedefine ENABLE_HTTP3 1\n\n/* Define to 1 if you have `libbpf` library. */\n#cmakedefine HAVE_LIBBPF 1\n\n/* Define to 1 if you have enum bpf_stats_type in linux/bpf.h. */\n#cmakedefine HAVE_BPF_STATS_TYPE 1\n\n/* Define to 1 if you have `libngtcp2_crypto_quictls` library. */\n#cmakedefine HAVE_LIBNGTCP2_CRYPTO_QUICTLS\n\n/* Define to 1 if you have `libngtcp2_crypto_wolfssl` library. */\n#cmakedefine HAVE_LIBNGTCP2_CRYPTO_WOLFSSL 1\n\n/* Define to 1 if you have `libev` library. */\n#cmakedefine HAVE_LIBEV 1\n\n/* Define to 1 if you have `libbrotlienc` and `libbrotlidec` libraries. */\n#cmakedefine HAVE_LIBBROTLI 1\n\n/* Define to 1 if you have `wolfssl` library. */\n#cmakedefine HAVE_WOLFSSL 1\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 40.8671875,
          "content": "dnl nghttp2 - HTTP/2 C Library\n\ndnl Copyright (c) 2012, 2013, 2014, 2015 Tatsuhiro Tsujikawa\n\ndnl Permission is hereby granted, free of charge, to any person obtaining\ndnl a copy of this software and associated documentation files (the\ndnl \"Software\"), to deal in the Software without restriction, including\ndnl without limitation the rights to use, copy, modify, merge, publish,\ndnl distribute, sublicense, and/or sell copies of the Software, and to\ndnl permit persons to whom the Software is furnished to do so, subject to\ndnl the following conditions:\n\ndnl The above copyright notice and this permission notice shall be\ndnl included in all copies or substantial portions of the Software.\n\ndnl THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\ndnl EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\ndnl MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\ndnl NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\ndnl LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\ndnl OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\ndnl WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\ndnl Do not change user variables!\ndnl https://www.gnu.org/software/automake/manual/html_node/Flag-Variables-Ordering.html\n\nAC_PREREQ(2.61)\nAC_INIT([nghttp2], [1.65.0-DEV], [t-tujikawa@users.sourceforge.net])\nAC_CONFIG_AUX_DIR([.])\nAC_CONFIG_MACRO_DIR([m4])\nAC_CONFIG_HEADERS([config.h])\nAC_USE_SYSTEM_EXTENSIONS\n\nLT_PREREQ([2.2.6])\nLT_INIT()\n\nAC_CANONICAL_BUILD\nAC_CANONICAL_HOST\nAC_CANONICAL_TARGET\n\nAM_INIT_AUTOMAKE([subdir-objects tar-pax])\n\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\ndnl See versioning rule:\ndnl  https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\nAC_SUBST(LT_CURRENT, 42)\nAC_SUBST(LT_REVISION, 3)\nAC_SUBST(LT_AGE, 28)\n\nmajor=`echo $PACKAGE_VERSION |cut -d. -f1 | sed -e \"s/[^0-9]//g\"`\nminor=`echo $PACKAGE_VERSION |cut -d. -f2 | sed -e \"s/[^0-9]//g\"`\npatch=`echo $PACKAGE_VERSION |cut -d. -f3 | cut -d- -f1 | sed -e \"s/[^0-9]//g\"`\n\nPACKAGE_VERSION_NUM=`printf \"0x%02x%02x%02x\" \"$major\" \"$minor\" \"$patch\"`\n\nAC_SUBST(PACKAGE_VERSION_NUM)\n\ndnl Checks for command-line options\nAC_ARG_ENABLE([werror],\n    [AS_HELP_STRING([--enable-werror],\n                    [Turn on compile time warnings])],\n    [werror=$enableval], [werror=no])\n\nAC_ARG_ENABLE([debug],\n    [AS_HELP_STRING([--enable-debug],\n                    [Turn on debug output])],\n    [debug=$enableval], [debug=no])\n\nAC_ARG_ENABLE([threads],\n    [AS_HELP_STRING([--disable-threads],\n                    [Turn off threading in apps])],\n    [threads=$enableval], [threads=yes])\n\nAC_ARG_ENABLE([app],\n    [AS_HELP_STRING([--enable-app],\n                    [Build applications (nghttp, nghttpd, nghttpx and h2load) [default=check]])],\n    [request_app=$enableval], [request_app=check])\n\nAC_ARG_ENABLE([hpack-tools],\n    [AS_HELP_STRING([--enable-hpack-tools],\n                    [Build HPACK tools [default=check]])],\n    [request_hpack_tools=$enableval], [request_hpack_tools=check])\n\nAC_ARG_ENABLE([examples],\n    [AS_HELP_STRING([--enable-examples],\n                    [Build examples [default=check]])],\n    [request_examples=$enableval], [request_examples=check])\n\nAC_ARG_ENABLE([failmalloc],\n    [AS_HELP_STRING([--disable-failmalloc],\n                    [Do not build failmalloc test program])],\n    [request_failmalloc=$enableval], [request_failmalloc=yes])\n\nAC_ARG_ENABLE([lib-only],\n    [AS_HELP_STRING([--enable-lib-only],\n                    [Build libnghttp2 only.  This is a short hand for --disable-app --disable-examples --disable-hpack-tools])],\n    [request_lib_only=$enableval], [request_lib_only=no])\n\nAC_ARG_ENABLE([http3],\n    [AS_HELP_STRING([--enable-http3],\n                    [(EXPERIMENTAL) Enable HTTP/3.  This requires ngtcp2, nghttp3, and a custom OpenSSL.])],\n    [request_http3=$enableval], [request_http3=no])\n\nAC_ARG_WITH([libxml2],\n    [AS_HELP_STRING([--with-libxml2],\n                    [Use libxml2 [default=check]])],\n    [request_libxml2=$withval], [request_libxml2=check])\n\nAC_ARG_WITH([jansson],\n    [AS_HELP_STRING([--with-jansson],\n                    [Use jansson [default=check]])],\n    [request_jansson=$withval], [request_jansson=check])\n\nAC_ARG_WITH([zlib],\n    [AS_HELP_STRING([--with-zlib],\n                    [Use zlib [default=check]])],\n    [request_zlib=$withval], [request_zlib=check])\n\nAC_ARG_WITH([libevent-openssl],\n    [AS_HELP_STRING([--with-libevent-openssl],\n                    [Use libevent_openssl [default=check]])],\n    [request_libevent_openssl=$withval], [request_libevent_openssl=check])\n\nAC_ARG_WITH([libcares],\n    [AS_HELP_STRING([--with-libcares],\n                    [Use libc-ares [default=check]])],\n    [request_libcares=$withval], [request_libcares=check])\n\nAC_ARG_WITH([wolfssl],\n    [AS_HELP_STRING([--with-wolfssl],\n                    [Use wolfSSL [default=check]])],\n    [request_wolfssl=$withval], [request_wolfssl=check])\n\nAC_ARG_WITH([openssl],\n    [AS_HELP_STRING([--with-openssl],\n                    [Use openssl [default=check]])],\n    [request_openssl=$withval], [request_openssl=check])\n\nAC_ARG_WITH([libev],\n    [AS_HELP_STRING([--with-libev],\n                    [Use libev [default=check]])],\n    [request_libev=$withval], [request_libev=check])\n\nAC_ARG_WITH([jemalloc],\n    [AS_HELP_STRING([--with-jemalloc],\n                    [Use jemalloc [default=check]])],\n    [request_jemalloc=$withval], [request_jemalloc=check])\n\nAC_ARG_WITH([systemd],\n    [AS_HELP_STRING([--with-systemd],\n                    [Enable systemd support in nghttpx [default=check]])],\n    [request_systemd=$withval], [request_systemd=check])\n\nAC_ARG_WITH([mruby],\n    [AS_HELP_STRING([--with-mruby],\n                    [Use mruby [default=no]])],\n    [request_mruby=$withval], [request_mruby=no])\n\nAC_ARG_WITH([neverbleed],\n    [AS_HELP_STRING([--with-neverbleed],\n                    [Use neverbleed [default=no]])],\n    [request_neverbleed=$withval], [request_neverbleed=no])\n\nAC_ARG_WITH([libngtcp2],\n    [AS_HELP_STRING([--with-libngtcp2],\n                    [Use libngtcp2 [default=check]])],\n    [request_libngtcp2=$withval], [request_libngtcp2=check])\n\nAC_ARG_WITH([libnghttp3],\n    [AS_HELP_STRING([--with-libnghttp3],\n                    [Use libnghttp3 [default=check]])],\n    [request_libnghttp3=$withval], [request_libnghttp3=check])\n\nAC_ARG_WITH([libbpf],\n    [AS_HELP_STRING([--with-libbpf],\n                    [Use libbpf [default=no]])],\n    [request_libbpf=$withval], [request_libbpf=no])\n\nAC_ARG_WITH([libbrotlienc],\n    [AS_HELP_STRING([--with-libbrotlienc],\n                    [Use libbrotlienc [default=no]])],\n    [request_libbrotlienc=$withval], [request_libbrotlienc=no])\n\nAC_ARG_WITH([libbrotlidec],\n    [AS_HELP_STRING([--with-libbrotlidec],\n                    [Use libbrotlidec [default=no]])],\n    [request_libbrotlidec=$withval], [request_libbrotlidec=no])\n\ndnl Define variables\nAC_ARG_VAR([LIBEV_CFLAGS], [C compiler flags for libev, skipping any checks])\nAC_ARG_VAR([LIBEV_LIBS], [linker flags for libev, skipping any checks])\n\nAC_ARG_VAR([JEMALLOC_CFLAGS],\n           [C compiler flags for jemalloc, skipping any checks])\nAC_ARG_VAR([JEMALLOC_LIBS], [linker flags for jemalloc, skipping any checks])\n\nAC_ARG_VAR([LIBTOOL_LDFLAGS],\n           [libtool specific flags (e.g., -static-libtool-libs)])\n\nAC_ARG_VAR([BPFCFLAGS], [C compiler flags for bpf program])\n\ndnl Checks for programs\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_CPP\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\nAC_PROG_MKDIR_P\n\nPKG_PROG_PKG_CONFIG([0.20])\n\nAM_PATH_PYTHON([3.8],, [:])\n\nif [test \"x$request_lib_only\" = \"xyes\"]; then\n  request_app=no\n  request_hpack_tools=no\n  request_examples=no\n  request_http3=no\n  request_libxml2=no\n  request_jansson=no\n  request_zlib=no\n  request_libevent_openssl=no\n  request_libcares=no\n  request_openssl=no\n  request_libev=no\n  request_jemalloc=no\n  request_systemd=no\n  request_mruby=no\n  request_neverbleed=no\n  request_libngtcp2=no\n  request_libnghttp3=no\n  request_libbpf=no\nfi\n\nif test \"x$GCC\" = \"xyes\" -o \"x$CC\" = \"xclang\" ; then\n  AC_DEFINE([NGHTTP2_NORETURN], [__attribute__((noreturn))], [Hint to the compiler that a function never return])\nelse\n  AC_DEFINE([NGHTTP2_NORETURN], , [Hint to the compiler that a function never return])\nfi\n\nsave_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\n\nAX_CXX_COMPILE_STDCXX([20], [], [optional])\n\nCXX1XCXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$save_CXXFLAGS\"\nAC_SUBST([CXX1XCXXFLAGS])\n\nAC_LANG_PUSH(C++)\n\nsave_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $CXX1XCXXFLAGS\"\n\n# Check that std::future is available.\nAC_MSG_CHECKING([whether std::future is available])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n[[\n#include <vector>\n#include <future>\n]],\n[[\nstd::vector<std::future<int>> v;\n(void)v;\n]])],\n    [AC_DEFINE([HAVE_STD_FUTURE], [1],\n               [Define to 1 if you have the `std::future`.])\n     have_std_future=yes\n     AC_MSG_RESULT([yes])],\n    [have_std_future=no\n     AC_MSG_RESULT([no])])\n\n# Check that std::map::emplace is available for g++-4.7.\nAC_MSG_CHECKING([whether std::map::emplace is available])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n[[\n#include <map>\n]],\n[[\nstd::map<int, int>().emplace(1, 2);\n]])],\n    [AC_DEFINE([HAVE_STD_MAP_EMPLACE], [1],\n               [Define to 1 if you have the `std::map::emplace`.])\n     have_std_map_emplace=yes\n     AC_MSG_RESULT([yes])],\n    [have_std_map_emplace=no\n     AC_MSG_RESULT([no])])\n\n# Check that std::atomic<std::shared_ptr<T>> is supported.\nAC_MSG_CHECKING([whether std::atomic<std::shared_ptr<T>> is supported])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n[[\n#include <memory>\n]],\n[[\nauto a = std::atomic<std::shared_ptr<int>>(std::make_shared<int>(1000000007));\nauto p = a.load();\n++*p;\na.store(p);\n]])],\n    [AC_DEFINE([HAVE_ATOMIC_STD_SHARED_PTR], [1],\n               [Define to 1 if you have the std::atomic<std::shared_ptr<T>> is supported.])\n     have_atomic_std_shared_ptr=yes\n     AC_MSG_RESULT([yes])],\n    [have_atomic_std_shared_ptr=no\n     AC_MSG_RESULT([no])])\n\n# Check that thread_local storage specifier is available\nAC_MSG_CHECKING([whether thread_local storage class specifier is available.])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n,\n[[\nthread_local int a = 0;\n(void)a;\n]])],\n    [AC_DEFINE([HAVE_THREAD_LOCAL], [1],\n               [Define to 1 if you have thread_local storage specifier.])\n     have_thread_local=yes\n     AC_MSG_RESULT([yes])],\n    [have_Thread_local=no\n     AC_MSG_RESULT([no])])\n\nCXXFLAGS=$save_CXXFLAGS\n\nAC_LANG_POP()\n\n# Checks for libraries.\n\n# Additional libraries required for tests.\nTESTLDADD=\n\n# Additional libraries required for programs under src directory.\nAPPLDFLAGS=\n\ncase \"$host_os\" in\n  *android*)\n    android_build=yes\n    # android does not need -pthread, but needs following 2 libs for C++\n    APPLDFLAGS=\"$APPLDFLAGS -latomic\"\n    ;;\n  *)\n    PTHREAD_LDFLAGS=\"-pthread\"\n    APPLDFLAGS=\"$APPLDFLAGS $PTHREAD_LDFLAGS\"\n    ;;\nesac\n\ncase \"$host_os\" in\n  *solaris*)\n    APPLDFLAGS=\"$APPLDFLAGS -lsocket -lnsl\"\n    ;;\nesac\n\ncase \"${build}\" in\n  *-apple-darwin*)\n    EXTRA_DEFS=\"-D__APPLE_USE_RFC_3542\"\n    AC_SUBST([EXTRA_DEFS])\n    ;;\nesac\n\n# zlib\nhave_zlib=no\nif test \"x${request_zlib}\" != \"xno\"; then\n  PKG_CHECK_MODULES([ZLIB], [zlib >= 1.2.3], [have_zlib=yes], [have_zlib=no])\n\n  if test \"x${have_zlib}\" = \"xno\"; then\n    AC_MSG_NOTICE($ZLIB_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_zlib}\" = \"xyes\" &&\n   test \"x${have_zlib}\" != \"xyes\"; then\n  AC_MSG_ERROR([zlib was requested (--with-zlib) but not found])\nfi\n\n# dl: openssl requires libdl when it is statically linked.\ncase \"${host_os}\" in\n  *bsd*)\n    # dlopen is in libc on *BSD\n    ;;\n  *)\n    save_LIBS=$LIBS\n    AC_SEARCH_LIBS([dlopen], [dl], [APPLDFLAGS=\"-ldl $APPLDFLAGS\"], [], [])\n    LIBS=$save_LIBS\n    ;;\nesac\n\n# libev (for src)\nhave_libev=no\nif test \"x${request_libev}\" != \"xno\"; then\n  if test \"x${LIBEV_LIBS}\" = \"x\" && test \"x${LIBEV_CFLAGS}\" = \"x\"; then\n    # libev does not have pkg-config file.  Check it in an old way.\n    save_LIBS=$LIBS\n    # android requires -lm for floor\n   AC_CHECK_LIB([ev], [ev_time], [have_libev=yes], [have_libev=no], [-lm])\n   if test \"x${have_libev}\" = \"xyes\"; then\n      AC_CHECK_HEADER([ev.h], [have_libev=yes], [have_libev=no])\n      if test \"x${have_libev}\" = \"xyes\"; then\n        LIBEV_LIBS=-lev\n        LIBEV_CFLAGS=\n      fi\n    fi\n    LIBS=$save_LIBS\n  else\n    have_libev=yes\n  fi\n\n  if test \"x${have_libev}\" = \"xyes\"; then\n    AC_DEFINE([HAVE_LIBEV], [1], [Define to 1 if you have `libev` library.])\n  fi\nfi\n\nif test \"x${request_libev}\" = \"xyes\" &&\n   test \"x${have_libev}\" != \"xyes\"; then\n  AC_MSG_ERROR([libev was requested (--with-libev) but not found])\nfi\n\nif test \"x${request_openssl}\" = \"xyes\" &&\n   test \"x${request_wolfssl}\" = \"xyes\"; then\n  AC_MSG_ERROR([Requesting both OpenSSL and wolfSSL is not allowed])\nfi\n\n# openssl (for src)\nhave_openssl=no\nif test \"x${request_openssl}\" != \"xno\" &&\n   test \"x${request_wolfssl}\" != \"xyes\"; then\n  PKG_CHECK_MODULES([OPENSSL], [openssl >= 1.1.1],\n                    [have_openssl=yes], [have_openssl=no])\n  if test \"x${have_openssl}\" = \"xno\"; then\n    AC_MSG_NOTICE($OPENSSL_PKG_ERRORS)\n  else\n    # Use C++ compiler because boringssl needs C++ runtime.\n    AC_LANG_PUSH(C++)\n\n    save_CXXFLAGS=\"$CXXFLAGS\"\n    save_LIBS=\"$LIBS\"\n    CXXFLAGS=\"$OPENSSL_CFLAGS $CXXFLAGS\"\n    LIBS=\"$OPENSSL_LIBS $LIBS\"\n\n    # quictls/openssl has SSL_provide_quic_data.  boringssl also has\n    # it.  We will deal with it later.\n    have_ssl_provide_quic_data=no\n    AC_MSG_CHECKING([for SSL_provide_quic_data])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n      #include <openssl/ssl.h>\n    ]], [[\n      SSL_provide_quic_data(NULL, (ssl_encryption_level_t)0, NULL, 0);\n    ]])],\n    [AC_MSG_RESULT([yes]); have_ssl_provide_quic_data=yes],\n    [AC_MSG_RESULT([no]); have_ssl_provide_quic_data=no])\n\n    # boringssl has SSL_set_quic_early_data_context.\n    AC_MSG_CHECKING([for SSL_set_quic_early_data_context])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n      #include <openssl/ssl.h>\n    ]], [[\n      SSL *ssl = NULL;\n      SSL_set_quic_early_data_context(ssl, NULL, 0);\n    ]])],\n    [AC_MSG_RESULT([yes]); have_boringssl_quic=yes],\n    [AC_MSG_RESULT([no]); have_boringssl_quic=no])\n\n    CXXFLAGS=\"$save_CXXFLAGS\"\n    LIBS=\"$save_LIBS\"\n\n    AC_LANG_POP()\n  fi\nfi\n\nif test \"x${request_openssl}\" = \"xyes\" &&\n   test \"x${have_openssl}\" != \"xyes\"; then\n  AC_MSG_ERROR([openssl was requested (--with-openssl) but not found])\nfi\n\n# wolfSSL (for src)\nhave_wolfssl=no\nif test \"x${request_wolfssl}\" != \"xno\" &&\n   test \"x${request_openssl}\" != \"xyes\" &&\n   test \"x${have_openssl}\" != \"xyes\"; then\n  PKG_CHECK_MODULES([WOLFSSL], [wolfssl >= 5.7.0],\n                    [have_wolfssl=yes], [have_wolfssl=no])\n  if test \"x${have_wolfssl}\" = \"xno\"; then\n    AC_MSG_NOTICE($WOLFSSL_PKG_ERRORS)\n  else\n    AC_DEFINE([HAVE_WOLFSSL], [1],\n              [Define to 1 if you have 'wolfssl' library.])\n\n    save_CFLAGS=\"$CFLAGS\"\n    save_LIBS=\"$LIBS\"\n    CFLAGS=\"$WOLFSSL_CFLAGS $CFLAGS\"\n    LIBS=\"$WOLFSSL_LIBS $LIBS\"\n\n    have_wolfssl_quic=no\n    AC_MSG_CHECKING([for wolfSSL QUIC])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n      #include <wolfssl/options.h>\n      #include <wolfssl/openssl/ssl.h>\n    ]], [[\n      SSL_provide_quic_data(NULL, 0, NULL, 0);\n    ]])],\n    [AC_MSG_RESULT([yes]); have_wolfssl_quic=yes],\n    [AC_MSG_RESULT([no]); have_wolfssl_quic=no])\n\n    CFLAGS=\"$save_CFLAGS\"\n    LIBS=\"$save_LIBS\"\n  fi\nfi\n\nif test \"x${request_wolfssl}\" = \"xyes\" &&\n   test \"x${have_wolfssl}\" != \"xyes\"; then\n  AC_MSG_ERROR([wolfSSL was requested (--with-wolfssl) but not found])\nfi\n\n# c-ares (for src)\nhave_libcares=no\nif test \"x${request_libcares}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBCARES], [libcares >= 1.16.0], [have_libcares=yes],\n                    [have_libcares=no])\n  if test \"x${have_libcares}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBCARES_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libcares}\" = \"xyes\" &&\n   test \"x${have_libcares}\" != \"xyes\"; then\n  AC_MSG_ERROR([libcares was requested (--with-libcares) but not found])\nfi\n\n# ngtcp2 (for src)\nhave_libngtcp2=no\nif test \"x${request_libngtcp2}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBNGTCP2], [libngtcp2 >= 1.4.0], [have_libngtcp2=yes],\n                    [have_libngtcp2=no])\n  if test \"x${have_libngtcp2}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBNGTCP2_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libngtcp2}\" = \"xyes\" &&\n   test \"x${have_libngtcp2}\" != \"xyes\"; then\n  AC_MSG_ERROR([libngtcp2 was requested (--with-libngtcp2) but not found])\nfi\n\n# ngtcp2_crypto_wolfssl (for src)\nhave_libngtcp2_crypto_wolfssl=no\nif test \"x${have_wolfssl_quic}\" = \"xyes\" &&\n   test \"x${request_libngtcp2}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBNGTCP2_CRYPTO_WOLFSSL],\n                    [libngtcp2_crypto_wolfssl >= 1.0.0],\n                    [have_libngtcp2_crypto_wolfssl=yes],\n                    [have_libngtcp2_crypto_wolfssl=no])\n  if test \"x${have_libngtcp2_crypto_wolfssl}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBNGTCP2_CRYPTO_WOLFSSL_PKG_ERRORS)\n  else\n    AC_DEFINE([HAVE_LIBNGTCP2_CRYPTO_WOLFSSL], [1],\n              [Define to 1 if you have `libngtcp2_crypto_wolfssl` library.])\n  fi\nfi\n\nif test \"x${have_wolfssl_quic}\" = \"xyes\" &&\n   test \"x${request_libngtcp2}\" = \"xyes\" &&\n   test \"x${have_libngtcp2_crypto_wolfssl}\" != \"xyes\"; then\n  AC_MSG_ERROR([libngtcp2_crypto_wolfssl was requested (--with-libngtcp2) but not found])\nfi\n\n# ngtcp2_crypto_quictls (for src)\nhave_libngtcp2_crypto_quictls=no\nif test \"x${have_ssl_provide_quic_data}\" = \"xyes\" &&\n   test \"x${have_boringssl_quic}\" != \"xyes\" &&\n   test \"x${request_libngtcp2}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBNGTCP2_CRYPTO_QUICTLS],\n                    [libngtcp2_crypto_quictls >= 1.0.0],\n                    [have_libngtcp2_crypto_quictls=yes],\n                    [have_libngtcp2_crypto_quictls=no])\n  if test \"x${have_libngtcp2_crypto_quictls}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBNGTCP2_CRYPTO_QUICTLS_PKG_ERRORS)\n  else\n    AC_DEFINE([HAVE_LIBNGTCP2_CRYPTO_QUICTLS], [1],\n              [Define to 1 if you have `libngtcp2_crypto_quictls` library.])\n  fi\nfi\n\nif test \"x${have_ssl_provide_quic_data}\" = \"xyes\" &&\n   test \"x${have_boringssl_quic}\" != \"xyes\" &&\n   test \"x${request_libngtcp2}\" = \"xyes\" &&\n   test \"x${have_libngtcp2_crypto_quictls}\" != \"xyes\"; then\n  AC_MSG_ERROR([libngtcp2_crypto_quictls was requested (--with-libngtcp2) but not found])\nfi\n\n# ngtcp2_crypto_boringssl (for src)\nhave_libngtcp2_crypto_boringssl=no\nif test \"x${have_boringssl_quic}\" = \"xyes\" &&\n   test \"x${request_libngtcp2}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBNGTCP2_CRYPTO_BORINGSSL],\n                    [libngtcp2_crypto_boringssl >= 0.0.0],\n                    [have_libngtcp2_crypto_boringssl=yes],\n                    [have_libngtcp2_crypto_boringssl=no])\n  if test \"x${have_libngtcp2_crypto_boringssl}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBNGTCP2_CRYPTO_BORINGSSL_PKG_ERRORS)\n  else\n    AC_DEFINE([HAVE_LIBNGTCP2_CRYPTO_BORINGSSL], [1],\n              [Define to 1 if you have `libngtcp2_crypto_boringssl` library.])\n  fi\nfi\n\nif test \"x${have_boringssl_quic}\" = \"xyes\" &&\n   test \"x${request_libngtcp2}\" = \"xyes\" &&\n   test \"x${have_libngtcp2_crypto_boringssl}\" != \"xyes\"; then\n  AC_MSG_ERROR([libngtcp2_crypto_boringssl was requested (--with-libngtcp2) but not found])\nfi\n\n# nghttp3 (for src)\nhave_libnghttp3=no\nif test \"x${request_libnghttp3}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBNGHTTP3], [libnghttp3 >= 1.1.0], [have_libnghttp3=yes],\n                    [have_libnghttp3=no])\n  if test \"x${have_libnghttp3}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBNGHTTP3_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libnghttp3}\" = \"xyes\" &&\n   test \"x${have_libnghttp3}\" != \"xyes\"; then\n  AC_MSG_ERROR([libnghttp3 was requested (--with-libnghttp3) but not found])\nfi\n\n# libbpf (for src)\nhave_libbpf=no\nif test \"x${request_libbpf}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBBPF], [libbpf >= 0.7.0], [have_libbpf=yes],\n                    [have_libbpf=no])\n  if test \"x${have_libbpf}\" = \"xyes\"; then\n    AC_DEFINE([HAVE_LIBBPF], [1], [Define to 1 if you have `libbpf` library.])\n    if test \"x${BPFCFLAGS}\" = \"x\"; then\n      BPFCFLAGS=\"-Wall -O2 -g\"\n    fi\n    # Add the include path for Debian\n    EXTRABPFCFLAGS=\"-I/usr/include/$host_cpu-$host_os\"\n    AC_SUBST([EXTRABPFCFLAGS])\n\n    AC_MSG_CHECKING([whether enum bpf_stats_type is defined in linux/bpf.h])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n    [[\n    #include <linux/bpf.h>\n    ]],\n    [[\n    enum bpf_stats_type foo;\n    (void)foo;\n    ]])],\n    [have_bpf_stats_type=yes],\n    [have_bpf_stats_type=no])\n\n    if test \"x${have_bpf_stats_type}\" = \"xyes\"; then\n      AC_MSG_RESULT([yes])\n      AC_DEFINE([HAVE_BPF_STATS_TYPE], [1],\n                [Define to 1 if you have enum bpf_stats_type in linux/bpf.h.])\n    else\n      AC_MSG_RESULT([no])\n    fi\n  else\n    AC_MSG_NOTICE($LIBBPF_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libbpf}\" = \"xyes\" &&\n   test \"x${have_libbpf}\" != \"xyes\"; then\n  AC_MSG_ERROR([libbpf was requested (--with-libbpf) but not found])\nfi\n\nAM_CONDITIONAL([HAVE_LIBBPF], [ test \"x${have_libbpf}\" = \"xyes\" ])\n\n# libbrotlienc (for src)\nhave_libbrotlienc=no\nif test \"x${request_libbrotlienc}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBBROTLIENC], [libbrotlienc >= 1.0.9],\n                    [have_libbrotlienc=yes],\n                    [have_libbrotlienc=no])\n  if test \"x${have_libbrotlienc}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBBROTLIENC_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libbrotlienc}\" = \"xyes\" &&\n   test \"x${have_libbrotlienc}\" != \"xyes\"; then\n  AC_MSG_ERROR([libbrotlienc was requested (--with-libbrotlienc) but not found])\nfi\n\n# libbrotlidec (for src)\nhave_libbrotlidec=no\nif test \"x${request_libbrotlidec}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBBROTLIDEC], [libbrotlidec >= 1.0.9],\n                    [have_libbrotlidec=yes],\n                    [have_libbrotlidec=no])\n  if test \"x${have_libbrotlidec}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBBROTLIDEC_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libbrotlidec}\" = \"xyes\" &&\n   test \"x${have_libbrotlidec}\" != \"xyes\"; then\n  AC_MSG_ERROR([libbrotlidec was requested (--with-libbrotlidec) but not found])\nfi\n\nhave_libbrotli=no\nif test \"x${have_libbrotlienc}\" = \"xyes\" &&\n   test \"x${have_libbrotlidec}\" = \"xyes\"; then\n  have_libbrotli=yes\n\n  AC_DEFINE([HAVE_LIBBROTLI], [1],\n            [Define to 1 if you have `libbrotlienc` and `libbrotlidec` libraries.])\nfi\n\n# libevent_openssl (for examples)\n# 2.0.8 is required because we use evconnlistener_set_error_cb()\nhave_libevent_openssl=no\nif test \"x${request_libevent_openssl}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBEVENT_OPENSSL], [libevent_openssl >= 2.0.8],\n                    [have_libevent_openssl=yes], [have_libevent_openssl=no])\n  if test \"x${have_libevent_openssl}\" = \"xno\"; then\n    AC_MSG_NOTICE($LIBEVENT_OPENSSL_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libevent_openssl}\" = \"xyes\" &&\n   test \"x${have_libevent_openssl}\" != \"xyes\"; then\n  AC_MSG_ERROR([libevent_openssl was requested (--with-libevent) but not found])\nfi\n\n# jansson (for src/nghttp, src/deflatehd and src/inflatehd)\nhave_jansson=no\nif test \"x${request_jansson}\" != \"xno\"; then\n  PKG_CHECK_MODULES([JANSSON], [jansson >= 2.5],\n                    [have_jansson=yes], [have_jansson=no])\n  if test \"x${have_jansson}\" = \"xyes\"; then\n    AC_DEFINE([HAVE_JANSSON], [1],\n              [Define to 1 if you have `libjansson` library.])\n  else\n    AC_MSG_NOTICE($JANSSON_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_jansson}\" = \"xyes\" &&\n   test \"x${have_jansson}\" != \"xyes\"; then\n  AC_MSG_ERROR([jansson was requested (--with-jansson) but not found])\nfi\n\n#  libsystemd (for src/nghttpx)\nhave_libsystemd=no\nif test \"x${request_systemd}\" != \"xno\"; then\n  PKG_CHECK_MODULES([SYSTEMD], [libsystemd >= 209], [have_libsystemd=yes],\n                    [have_libsystemd=no])\n  if test \"x${have_libsystemd}\" = \"xyes\"; then\n    AC_DEFINE([HAVE_LIBSYSTEMD], [1],\n              [Define to 1 if you have `libsystemd` library.])\n  else\n    AC_MSG_NOTICE($SYSTEMD_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_systemd}\" = \"xyes\" &&\n   test \"x${have_libsystemd}\" != \"xyes\"; then\n  AC_MSG_ERROR([systemd was requested (--with-systemd) but not found])\nfi\n\n# libxml2 (for src/nghttp)\nhave_libxml2=no\nif test \"x${request_libxml2}\" != \"xno\"; then\n  PKG_CHECK_MODULES([LIBXML2], [libxml-2.0 >= 2.6.26],\n                    [have_libxml2=yes], [have_libxml2=no])\n  if test \"x${have_libxml2}\" = \"xyes\"; then\n    AC_DEFINE([HAVE_LIBXML2], [1], [Define to 1 if you have `libxml2` library.])\n  else\n    AC_MSG_NOTICE($LIBXML2_PKG_ERRORS)\n  fi\nfi\n\nif test \"x${request_libxml2}\" = \"xyes\" &&\n   test \"x${have_libxml2}\" != \"xyes\"; then\n  AC_MSG_ERROR([libxml2 was requested (--with-libxml2) but not found])\nfi\n\nAM_CONDITIONAL([HAVE_LIBXML2], [ test \"x${have_libxml2}\" = \"xyes\" ])\n\n# jemalloc\nhave_jemalloc=no\nif test \"x${request_jemalloc}\" != \"xno\"; then\n  if test \"x${JEMALLOC_LIBS}\" = \"x\" && test \"x${JEMALLOC_CFLAGS}\" = \"x\"; then\n    save_LIBS=$LIBS\n    AC_SEARCH_LIBS([malloc_stats_print], [jemalloc], [have_jemalloc=yes], [],\n                   [$PTHREAD_LDFLAGS])\n\n    if test \"x${have_jemalloc}\" = \"xyes\"; then\n      jemalloc_libs=${ac_cv_search_malloc_stats_print}\n    else\n      # On Darwin, malloc_stats_print is je_malloc_stats_print\n      AC_SEARCH_LIBS([je_malloc_stats_print], [jemalloc], [have_jemalloc=yes], [],\n                     [$PTHREAD_LDFLAGS])\n\n      if test \"x${have_jemalloc}\" = \"xyes\"; then\n        jemalloc_libs=${ac_cv_search_je_malloc_stats_print}\n      fi\n    fi\n\n    LIBS=$save_LIBS\n\n    if test \"x${have_jemalloc}\" = \"xyes\" &&\n       test \"x${jemalloc_libs}\" != \"xnone required\"; then\n      JEMALLOC_LIBS=${jemalloc_libs}\n    fi\n  else\n    have_jemalloc=yes\n  fi\nfi\n\nif test \"x${request_jemalloc}\" = \"xyes\" &&\n   test \"x${have_jemalloc}\" != \"xyes\"; then\n  AC_MSG_ERROR([jemalloc was requested (--with-jemalloc) but not found])\nfi\n\n# The nghttp, nghttpd and nghttpx under src depend on zlib, OpenSSL,\n# libev, and libc-ares.\nenable_app=no\nif test \"x${request_app}\" != \"xno\" &&\n   test \"x${have_zlib}\" = \"xyes\" &&\n   (test \"x${have_openssl}\" = \"xyes\" || test \"x${have_wolfssl}\" = \"xyes\") &&\n   test \"x${have_libev}\" = \"xyes\" &&\n   test \"x${have_libcares}\" = \"xyes\"; then\n  enable_app=yes\nfi\n\nif test \"x${request_app}\" = \"xyes\" &&\n   test \"x${enable_app}\" != \"xyes\"; then\n  AC_MSG_ERROR([applications were requested (--enable-app) but dependencies are not met.])\nfi\n\nAM_CONDITIONAL([ENABLE_APP], [ test \"x${enable_app}\" = \"xyes\" ])\n\n# Check HTTP/3 support\nenable_http3=no\nif test \"x${request_http3}\" != \"xno\" &&\n   test \"x${have_libngtcp2}\" = \"xyes\" &&\n   (test \"x${have_libngtcp2_crypto_wolfssl}\" = \"xyes\" ||\n    test \"x${have_libngtcp2_crypto_quictls}\" = \"xyes\" ||\n    test \"x${have_libngtcp2_crypto_boringssl}\" = \"xyes\") &&\n   test \"x${have_libnghttp3}\" = \"xyes\"; then\n  enable_http3=yes\n  AC_DEFINE([ENABLE_HTTP3], [1], [Define to 1 if HTTP/3 is enabled.])\nfi\n\nif test \"x${request_http3}\" = \"xyes\" &&\n   test \"x${enable_http3}\" != \"xyes\"; then\n  AC_MSG_ERROR([HTTP/3 was requested (--enable-http3) but dependencies are not met.])\nfi\n\nAM_CONDITIONAL([ENABLE_HTTP3], [ test \"x${enable_http3}\" = \"xyes\" ])\n\nenable_hpack_tools=no\n# HPACK tools requires jansson\nif test \"x${request_hpack_tools}\" != \"xno\" &&\n   test \"x${have_jansson}\" = \"xyes\"; then\n  enable_hpack_tools=yes\nfi\n\nif test \"x${request_hpack_tools}\" = \"xyes\" &&\n   test \"x${enable_hpack_tools}\" != \"xyes\"; then\n  AC_MSG_ERROR([HPACK tools were requested (--enable-hpack-tools) but dependencies are not met.])\nfi\n\nAM_CONDITIONAL([ENABLE_HPACK_TOOLS], [ test \"x${enable_hpack_tools}\" = \"xyes\" ])\n\n# The example programs depend on OpenSSL and libevent_openssl\nenable_examples=no\nif test \"x${request_examples}\" != \"xno\" &&\n   test \"x${have_openssl}\" = \"xyes\" &&\n   test \"x${have_libevent_openssl}\" = \"xyes\"; then\n  enable_examples=yes\nfi\n\nif test \"x${request_examples}\" = \"xyes\" &&\n   test \"x${enable_examples}\" != \"xyes\"; then\n  AC_MSG_ERROR([examples were requested (--enable-examples) but dependencies are not met.])\nfi\n\nAM_CONDITIONAL([ENABLE_EXAMPLES], [ test \"x${enable_examples}\" = \"xyes\" ])\n\n# third-party only be built when needed\n\nenable_third_party=no\nhave_mruby=no\nhave_neverbleed=no\nif test \"x${enable_examples}\" = \"xyes\" ||\n   test \"x${enable_app}\" = \"xyes\" ||\n   test \"x${enable_hpack_tools}\" = \"xyes\"; then\n  enable_third_party=yes\n\n  # mruby (for src/nghttpx)\n  if test \"x${request_mruby}\" = \"xyes\"; then\n    # We are going to build mruby\n    have_mruby=yes\n    AC_DEFINE([HAVE_MRUBY], [1], [Define to 1 if you have `mruby` library.])\n    LIBMRUBY_LIBS=\"-lmruby -lm\"\n    LIBMRUBY_CFLAGS=\n    AC_SUBST([LIBMRUBY_LIBS])\n    AC_SUBST([LIBMRUBY_CFLAGS])\n  fi\n\n  # neverbleed (for src/nghttpx)\n  if test \"x${request_neverbleed}\" = \"xyes\"; then\n    have_neverbleed=yes\n    AC_DEFINE([HAVE_NEVERBLEED], [1], [Define to 1 if you have `neverbleed` library.])\n  fi\nfi\n\nAM_CONDITIONAL([ENABLE_THIRD_PARTY], [ test \"x${enable_third_party}\" = \"xyes\" ])\nAM_CONDITIONAL([HAVE_MRUBY], [test \"x${have_mruby}\" = \"xyes\"])\nAM_CONDITIONAL([HAVE_NEVERBLEED], [test \"x${have_neverbleed}\" = \"xyes\"])\n\n# failmalloc tests\nenable_failmalloc=no\nif test \"x${request_failmalloc}\" = \"xyes\"; then\n  enable_failmalloc=yes\nfi\n\nAM_CONDITIONAL([ENABLE_FAILMALLOC], [ test \"x${enable_failmalloc}\" = \"xyes\" ])\n\n# Checks for header files.\nAC_HEADER_ASSERT\nAC_CHECK_HEADERS([ \\\n  arpa/inet.h \\\n  fcntl.h \\\n  inttypes.h \\\n  limits.h \\\n  netdb.h \\\n  netinet/in.h \\\n  netinet/ip.h \\\n  pwd.h \\\n  stddef.h \\\n  stdint.h \\\n  stdlib.h \\\n  string.h \\\n  sys/socket.h \\\n  sys/time.h \\\n  syslog.h \\\n  unistd.h \\\n  windows.h \\\n])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UINT8_T\nAC_TYPE_UINT16_T\nAC_TYPE_UINT32_T\nAC_TYPE_UINT64_T\nAC_TYPE_INT8_T\nAC_TYPE_INT16_T\nAC_TYPE_INT32_T\nAC_TYPE_INT64_T\nAC_TYPE_OFF_T\nAC_TYPE_PID_T\nAC_TYPE_UID_T\nAC_CHECK_TYPES([ptrdiff_t])\nAC_C_BIGENDIAN\nAC_C_INLINE\nAC_SYS_LARGEFILE\n\nAC_CHECK_MEMBER([struct tm.tm_gmtoff], [have_struct_tm_tm_gmtoff=yes],\n                [have_struct_tm_tm_gmtoff=no], [[#include <time.h>]])\n\nAC_CHECK_MEMBER([struct sockaddr_in.sin_len],\n                [AC_DEFINE([HAVE_SOCKADDR_IN_SIN_LEN],[1],\n                  [Define to 1 if struct sockaddr_in has sin_len member.])],\n                [],\n                [[\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n]])\n\nAC_CHECK_MEMBER([struct sockaddr_in6.sin6_len],\n                [AC_DEFINE([HAVE_SOCKADDR_IN6_SIN6_LEN],[1],\n                  [Define to 1 if struct sockaddr_in6 has sin6_len member.])],\n                [],\n                [[\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n]])\n\nif test \"x$have_struct_tm_tm_gmtoff\" = \"xyes\"; then\n  AC_DEFINE([HAVE_STRUCT_TM_TM_GMTOFF], [1],\n            [Define to 1 if you have `struct tm.tm_gmtoff` member.])\nfi\n\n# Checks for library functions.\n\n# Don't check malloc, since it does not play nicely with C++ stdlib\n# AC_FUNC_MALLOC\n\nAC_FUNC_CHOWN\nAC_FUNC_ERROR_AT_LINE\nAC_FUNC_FORK\n# Don't check realloc, since LeakSanitizer detects memory leak during check\n# AC_FUNC_REALLOC\nAC_FUNC_STRERROR_R\nAC_FUNC_STRNLEN\n\nAC_CHECK_FUNCS([ \\\n  _Exit \\\n  accept4 \\\n  clock_gettime \\\n  dup2 \\\n  getcwd \\\n  getpwnam \\\n  localtime_r \\\n  memchr \\\n  memmove \\\n  memset \\\n  mkostemp \\\n  pipe2 \\\n  socket \\\n  sqrt \\\n  strchr \\\n  strdup \\\n  strerror \\\n  strndup \\\n  strstr \\\n  strtol \\\n  strtoul \\\n  timegm \\\n])\n\n# timerfd_create was added in linux kernel 2.6.25\n\nAC_CHECK_FUNC([timerfd_create],\n              [have_timerfd_create=yes], [have_timerfd_create=no])\n\nAC_MSG_CHECKING([checking for GetTickCount64])\nAC_LINK_IFELSE([AC_LANG_PROGRAM(\n[[\n#include <windows.h>\n]],\n[[\nGetTickCount64();\n]])],\n[have_gettickcount64=yes],\n[have_gettickcount64=no])\n\nif test \"x${have_gettickcount64}\" = \"xyes\"; then\n  AC_MSG_RESULT([yes])\n  AC_DEFINE([HAVE_GETTICKCOUNT64], [1],\n            [Define to 1 if you have `GetTickCount64` function.])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n# For cygwin: we can link initgroups, so AC_CHECK_FUNCS succeeds, but\n# cygwin disables initgroups due to feature test macro magic with our\n# configuration.  FreeBSD declares initgroups() in unistd.h.\nAC_CHECK_DECLS([initgroups], [], [], [[\n  #ifdef HAVE_UNISTD_H\n  # include <unistd.h>\n  #endif\n  #include <grp.h>\n]])\n\nAC_CHECK_DECLS([CLOCK_MONOTONIC], [], [], [[\n#include <time.h>\n]])\n\nsave_CFLAGS=$CFLAGS\nsave_CXXFLAGS=$CXXFLAGS\n\nCFLAGS=\nCXXFLAGS=\n\nif test \"x$werror\" != \"xno\"; then\n    # For C compiler\n    AX_CHECK_COMPILE_FLAG([-Wall], [CFLAGS=\"$CFLAGS -Wall\"])\n    AX_CHECK_COMPILE_FLAG([-Wextra], [CFLAGS=\"$CFLAGS -Wextra\"])\n    AX_CHECK_COMPILE_FLAG([-Werror], [CFLAGS=\"$CFLAGS -Werror\"])\n    AX_CHECK_COMPILE_FLAG([-Wmissing-prototypes], [CFLAGS=\"$CFLAGS -Wmissing-prototypes\"])\n    AX_CHECK_COMPILE_FLAG([-Wstrict-prototypes], [CFLAGS=\"$CFLAGS -Wstrict-prototypes\"])\n    AX_CHECK_COMPILE_FLAG([-Wmissing-declarations], [CFLAGS=\"$CFLAGS -Wmissing-declarations\"])\n    AX_CHECK_COMPILE_FLAG([-Wpointer-arith], [CFLAGS=\"$CFLAGS -Wpointer-arith\"])\n    AX_CHECK_COMPILE_FLAG([-Wdeclaration-after-statement], [CFLAGS=\"$CFLAGS -Wdeclaration-after-statement\"])\n    AX_CHECK_COMPILE_FLAG([-Wformat-security], [CFLAGS=\"$CFLAGS -Wformat-security\"])\n    AX_CHECK_COMPILE_FLAG([-Wwrite-strings], [CFLAGS=\"$CFLAGS -Wwrite-strings\"])\n    AX_CHECK_COMPILE_FLAG([-Wshadow], [CFLAGS=\"$CFLAGS -Wshadow\"])\n    AX_CHECK_COMPILE_FLAG([-Winline], [CFLAGS=\"$CFLAGS -Winline\"])\n    AX_CHECK_COMPILE_FLAG([-Wnested-externs], [CFLAGS=\"$CFLAGS -Wnested-externs\"])\n    AX_CHECK_COMPILE_FLAG([-Wfloat-equal], [CFLAGS=\"$CFLAGS -Wfloat-equal\"])\n    AX_CHECK_COMPILE_FLAG([-Wundef], [CFLAGS=\"$CFLAGS -Wundef\"])\n    AX_CHECK_COMPILE_FLAG([-Wendif-labels], [CFLAGS=\"$CFLAGS -Wendif-labels\"])\n    AX_CHECK_COMPILE_FLAG([-Wempty-body], [CFLAGS=\"$CFLAGS -Wempty-body\"])\n    AX_CHECK_COMPILE_FLAG([-Wcast-align], [CFLAGS=\"$CFLAGS -Wcast-align\"])\n    AX_CHECK_COMPILE_FLAG([-Wclobbered], [CFLAGS=\"$CFLAGS -Wclobbered\"])\n    AX_CHECK_COMPILE_FLAG([-Wvla], [CFLAGS=\"$CFLAGS -Wvla\"])\n    AX_CHECK_COMPILE_FLAG([-Wpragmas], [CFLAGS=\"$CFLAGS -Wpragmas\"])\n    AX_CHECK_COMPILE_FLAG([-Wunreachable-code], [CFLAGS=\"$CFLAGS -Wunreachable-code\"])\n    AX_CHECK_COMPILE_FLAG([-Waddress], [CFLAGS=\"$CFLAGS -Waddress\"])\n    AX_CHECK_COMPILE_FLAG([-Wattributes], [CFLAGS=\"$CFLAGS -Wattributes\"])\n    AX_CHECK_COMPILE_FLAG([-Wdiv-by-zero], [CFLAGS=\"$CFLAGS -Wdiv-by-zero\"])\n    AX_CHECK_COMPILE_FLAG([-Wshorten-64-to-32], [CFLAGS=\"$CFLAGS -Wshorten-64-to-32\"])\n\n    AX_CHECK_COMPILE_FLAG([-Wconversion], [CFLAGS=\"$CFLAGS -Wconversion\"])\n    AX_CHECK_COMPILE_FLAG([-Wextended-offsetof], [CFLAGS=\"$CFLAGS -Wextended-offsetof\"])\n    AX_CHECK_COMPILE_FLAG([-Wformat-nonliteral], [CFLAGS=\"$CFLAGS -Wformat-nonliteral\"])\n    AX_CHECK_COMPILE_FLAG([-Wlanguage-extension-token], [CFLAGS=\"$CFLAGS -Wlanguage-extension-token\"])\n    AX_CHECK_COMPILE_FLAG([-Wmissing-field-initializers], [CFLAGS=\"$CFLAGS -Wmissing-field-initializers\"])\n    AX_CHECK_COMPILE_FLAG([-Wmissing-noreturn], [CFLAGS=\"$CFLAGS -Wmissing-noreturn\"])\n    AX_CHECK_COMPILE_FLAG([-Wmissing-variable-declarations], [CFLAGS=\"$CFLAGS -Wmissing-variable-declarations\"])\n    # Not used because we cannot change public structs\n    # AX_CHECK_COMPILE_FLAG([-Wpadded], [CFLAGS=\"$CFLAGS -Wpadded\"])\n    AX_CHECK_COMPILE_FLAG([-Wsign-conversion], [CFLAGS=\"$CFLAGS -Wsign-conversion\"])\n    # Not used because this basically disallows default case\n    # AX_CHECK_COMPILE_FLAG([-Wswitch-enum], [CFLAGS=\"$CFLAGS -Wswitch-enum\"])\n    AX_CHECK_COMPILE_FLAG([-Wunreachable-code-break], [CFLAGS=\"$CFLAGS -Wunreachable-code-break\"])\n    AX_CHECK_COMPILE_FLAG([-Wunused-macros], [CFLAGS=\"$CFLAGS -Wunused-macros\"])\n    AX_CHECK_COMPILE_FLAG([-Wunused-parameter], [CFLAGS=\"$CFLAGS -Wunused-parameter\"])\n    AX_CHECK_COMPILE_FLAG([-Wredundant-decls], [CFLAGS=\"$CFLAGS -Wredundant-decls\"])\n    # Only work with Clang for the moment\n    AX_CHECK_COMPILE_FLAG([-Wheader-guard], [CFLAGS=\"$CFLAGS -Wheader-guard\"])\n    AX_CHECK_COMPILE_FLAG([-Wsometimes-uninitialized], [CFLAGS=\"$CFLAGS -Wsometimes-uninitialized\"])\n    AX_CHECK_COMPILE_FLAG([-Wextra-semi], [CFLAGS=\"$CFLAGS -Wextra-semi\"])\n\n    # This is required because we pass format string as \"const char*.\n    AX_CHECK_COMPILE_FLAG([-Wno-format-nonliteral], [CFLAGS=\"$CFLAGS -Wno-format-nonliteral\"])\n\n    # For C++ compiler\n    AC_LANG_PUSH(C++)\n    AX_CHECK_COMPILE_FLAG([-Wall], [CXXFLAGS=\"$CXXFLAGS -Wall\"])\n    AX_CHECK_COMPILE_FLAG([-Werror], [CXXFLAGS=\"$CXXFLAGS -Werror\"])\n    AX_CHECK_COMPILE_FLAG([-Wformat-security], [CXXFLAGS=\"$CXXFLAGS -Wformat-security\"])\n    AX_CHECK_COMPILE_FLAG([-Wsometimes-uninitialized], [CXXFLAGS=\"$CXXFLAGS -Wsometimes-uninitialized\"])\n    AX_CHECK_COMPILE_FLAG([-Wextra-semi], [CXXFLAGS=\"$CXXFLAGS -Wextra-semi\"])\n    # Disable noexcept-type warning of g++-7.  This is not harmful as\n    # long as all source files are compiled with the same compiler.\n    AX_CHECK_COMPILE_FLAG([-Wno-noexcept-type], [CXXFLAGS=\"$CXXFLAGS -Wno-noexcept-type\"])\n    AC_LANG_POP()\nfi\n\nWARNCFLAGS=$CFLAGS\nWARNCXXFLAGS=$CXXFLAGS\n\nCFLAGS=$save_CFLAGS\nCXXFLAGS=$save_CXXFLAGS\n\nAC_SUBST([WARNCFLAGS])\nAC_SUBST([WARNCXXFLAGS])\n\nEXTRACFLAG=\nAX_CHECK_COMPILE_FLAG([-fvisibility=hidden], [EXTRACFLAG=\"-fvisibility=hidden\"])\n\nAC_SUBST([EXTRACFLAG])\n\nif test \"x$debug\" != \"xno\"; then\n    AC_DEFINE([DEBUGBUILD], [1], [Define to 1 to enable debug output.])\nfi\n\nenable_threads=yes\n# Some platform does not have working std::future.  We disable\n# threading for those platforms.\nif test \"x$threads\" != \"xyes\" ||\n   test \"x$have_std_future\" != \"xyes\"; then\n    enable_threads=no\n    AC_DEFINE([NOTHREADS], [1], [Define to 1 if you want to disable threads.])\nfi\n\n# propagate $enable_static to tests/Makefile.am\nAM_CONDITIONAL([ENABLE_STATIC], [test \"x$enable_static\" = \"xyes\"])\n\nAC_SUBST([TESTLDADD])\nAC_SUBST([APPLDFLAGS])\n\nAC_CONFIG_FILES([\n  Makefile\n  lib/Makefile\n  lib/libnghttp2.pc\n  lib/includes/Makefile\n  lib/includes/nghttp2/nghttp2ver.h\n  tests/Makefile\n  tests/testdata/Makefile\n  third-party/Makefile\n  src/Makefile\n  src/testdata/Makefile\n  bpf/Makefile\n  examples/Makefile\n  integration-tests/Makefile\n  integration-tests/config.go\n  integration-tests/setenv\n  doc/Makefile\n  doc/conf.py\n  doc/index.rst\n  doc/package_README.rst\n  doc/tutorial-client.rst\n  doc/tutorial-server.rst\n  doc/tutorial-hpack.rst\n  doc/nghttpx-howto.rst\n  doc/h2load-howto.rst\n  doc/building-android-binary.rst\n  doc/nghttp2.h.rst\n  doc/nghttp2ver.h.rst\n  doc/contribute.rst\n  contrib/Makefile\n  script/Makefile\n])\nAC_OUTPUT\n\nAC_MSG_NOTICE([summary of build options:\n\n    Package version: ${VERSION}\n    Library version: $LT_CURRENT:$LT_REVISION:$LT_AGE\n    Install prefix:  ${prefix}\n    System types:\n      Build:         ${build}\n      Host:          ${host}\n      Target:        ${target}\n    Compiler:\n      C compiler:     ${CC}\n      CFLAGS:         ${CFLAGS}\n      LDFLAGS:        ${LDFLAGS}\n      C++ compiler:   ${CXX}\n      CXXFLAGS:       ${CXXFLAGS}\n      CXXCPP:         ${CXXCPP}\n      C preprocessor: ${CPP}\n      CPPFLAGS:       ${CPPFLAGS}\n      WARNCFLAGS:     ${WARNCFLAGS}\n      WARNCXXFLAGS:   ${WARNCXXFLAGS}\n      CXX1XCXXFLAGS:  ${CXX1XCXXFLAGS}\n      EXTRACFLAG:     ${EXTRACFLAG}\n      BPFCFLAGS:      ${BPFCFLAGS}\n      EXTRABPFCFLAGS: ${EXTRABPFCFLAGS}\n      LIBS:           ${LIBS}\n      DEFS:           ${DEFS}\n      EXTRA_DEFS:     ${EXTRA_DEFS}\n    Library:\n      Shared:         ${enable_shared}\n      Static:         ${enable_static}\n    Libtool:\n      LIBTOOL_LDFLAGS: ${LIBTOOL_LDFLAGS}\n    Python:\n      Python:         ${PYTHON}\n      PYTHON_VERSION: ${PYTHON_VERSION}\n    Test:\n      Failmalloc:     ${enable_failmalloc}\n    Libs:\n      wolfSSL:        ${have_wolfssl} (CFLAGS='${WOLFSSL_CFLAGS}' LIBS='${WOLFSSL_LIBS}')\n      OpenSSL:        ${have_openssl} (CFLAGS='${OPENSSL_CFLAGS}' LIBS='${OPENSSL_LIBS}')\n      Libxml2:        ${have_libxml2} (CFLAGS='${LIBXML2_CFLAGS}' LIBS='${LIBXML2_LIBS}')\n      Libev:          ${have_libev} (CFLAGS='${LIBEV_CFLAGS}' LIBS='${LIBEV_LIBS}')\n      Libc-ares:      ${have_libcares} (CFLAGS='${LIBCARES_CFLAGS}' LIBS='${LIBCARES_LIBS}')\n      libngtcp2:      ${have_libngtcp2} (CFLAGS='${LIBNGTCP2_CFLAGS}' LIBS='${LIBNGTCP2_LIBS}')\n      libngtcp2_crypto_quictls: ${have_libngtcp2_crypto_quictls} (CFLAGS='${LIBNGTCP2_CRYPTO_QUICTLS_CFLAGS}' LIBS='${LIBNGTCP2_CRYPTO_QUICTLS_LIBS}')\n      libngtcp2_crypto_boringssl: ${have_libngtcp2_crypto_boringssl} (CFLAGS='${LIBNGTCP2_CRYPTO_BORINGSSL_CFLAGS}' LIBS='${LIBNGTCP2_CRYPTO_BORINGSSL_LIBS}')\n      libnghttp3:     ${have_libnghttp3} (CFLAGS='${LIBNGHTTP3_CFLAGS}' LIBS='${LIBNGHTTP3_LIBS}')\n      libbpf:         ${have_libbpf} (CFLAGS='${LIBBPF_CFLAGS}' LIBS='${LIBBPF_LIBS}')\n      Libevent(SSL):  ${have_libevent_openssl} (CFLAGS='${LIBEVENT_OPENSSL_CFLAGS}' LIBS='${LIBEVENT_OPENSSL_LIBS}')\n      Jansson:        ${have_jansson} (CFLAGS='${JANSSON_CFLAGS}' LIBS='${JANSSON_LIBS}')\n      Jemalloc:       ${have_jemalloc} (CFLAGS='${JEMALLOC_CFLAGS}' LIBS='${JEMALLOC_LIBS}')\n      Zlib:           ${have_zlib} (CFLAGS='${ZLIB_CFLAGS}' LIBS='${ZLIB_LIBS}')\n      Systemd:        ${have_libsystemd} (CFLAGS='${SYSTEMD_CFLAGS}' LIBS='${SYSTEMD_LIBS}')\n      Libbrotlienc:   ${have_libbrotlienc} (CFLAGS=\"${LIBBROTLIENC_CFLAGS}' LIBS='${LIBBROTLIENC_LIBS}')\n      Libbrotlidec:   ${have_libbrotlidec} (CFLAGS=\"${LIBBROTLIDEC_CFLAGS}' LIBS='${LIBBROTLIDEC_LIBS}')\n    Third-party:\n      http-parser:    ${enable_third_party}\n      MRuby:          ${have_mruby} (CFLAGS='${LIBMRUBY_CFLAGS}' LIBS='${LIBMRUBY_LIBS}')\n      Neverbleed:     ${have_neverbleed}\n    Features:\n      Applications:   ${enable_app}\n      HPACK tools:    ${enable_hpack_tools}\n      Examples:       ${enable_examples}\n      Threading:      ${enable_threads}\n      HTTP/3 (EXPERIMENTAL): ${enable_http3}\n])\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fedora",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "genauthoritychartbl.py",
          "type": "blob",
          "size": 1.09375,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x21:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  ',\n             'SPC '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if chr(i) in [\n        \"-\", \".\", \"_\", \"~\",\n        \"!\", \"$\", \"&\", \"'\", \"(\", \")\",\n        \"*\", \"+\", \",\", \";\", \"=\",\n        \"%\", \"@\", \":\", \"[\", \"]\"] or\\\n        ('0' <= chr(i) and chr(i) <= '9') or \\\n        ('A' <= chr(i) and chr(i) <= 'Z') or \\\n        ('a' <= chr(i) and chr(i) <= 'z'):\n        sys.stdout.write('1 /* {}    */, '.format(chr(i)))\n    elif (0x21 <= i and i < 0x7f):\n        sys.stdout.write('0 /* {}    */, '.format(chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('0 /* {} */, '.format(hex(i)))\n    else:\n        sys.stdout.write('0 /* {} */, '.format(name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "gendowncasetbl.py",
          "type": "blob",
          "size": 1.0869140625,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x20:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if chr(i) == ' ':\n        sys.stdout.write('{} /* SPC  */, '.format(i))\n    elif chr(i) == '\\t':\n        sys.stdout.write('{} /* HT   */, '.format(i))\n    elif 'A' <= chr(i) and chr(i) <= 'Z':\n        sys.stdout.write('{} /* {}    */, '.format(i - ord('A') + ord('a'), chr(i)))\n    elif (0x21 <= i and i < 0x7f):\n        sys.stdout.write('{} /* {}    */, '.format(i, chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('{} /* {} */, '.format(i, hex(i)))\n    elif 0 == i:\n        sys.stdout.write('{} /* NUL  */, '.format(i))\n    else:\n        sys.stdout.write('{} /* {} */, '.format(i, name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "genheaderfunc.py",
          "type": "blob",
          "size": 0.8388671875,
          "content": "#!/usr/bin/env python3\n\nfrom gentokenlookup import gentokenlookup\n\nHEADERS = [\n    ':authority',\n    ':method',\n    ':path',\n    ':scheme',\n    ':status',\n    ':host', # for spdy\n    ':protocol',\n    'expect',\n    'host',\n    'if-modified-since',\n    \"te\",\n    \"cookie\",\n    \"http2-settings\",\n    \"server\",\n    \"via\",\n    \"forwarded\",\n    \"x-forwarded-for\",\n    \"x-forwarded-proto\",\n    \"alt-svc\",\n    \"content-length\",\n    \"location\",\n    \"trailer\",\n    \"link\",\n    \"accept-encoding\",\n    \"accept-language\",\n    \"cache-control\",\n    \"user-agent\",\n    \"date\",\n    \"content-type\",\n    \"early-data\",\n    \"sec-websocket-accept\",\n    \"sec-websocket-key\",\n    \"priority\",\n    # disallowed h1 headers\n    'connection',\n    'keep-alive',\n    'proxy-connection',\n    'transfer-encoding',\n    'upgrade'\n]\n\nif __name__ == '__main__':\n    gentokenlookup(HEADERS, 'HD_')\n"
        },
        {
          "name": "genlibtokenlookup.py",
          "type": "blob",
          "size": 3.2294921875,
          "content": "#!/usr/bin/env python3\n\nHEADERS = [\n    (':authority', 0),\n    (':method', 1),\n    (':method', 2),\n    (':path', 3),\n    (':path', 4),\n    (':scheme', 5),\n    (':scheme', 6),\n    (':status', 7),\n    (':status', 8),\n    (':status', 9),\n    (':status', 10),\n    (':status', 11),\n    (':status', 12),\n    (':status', 13),\n    ('accept-charset', 14),\n    ('accept-encoding', 15),\n    ('accept-language', 16),\n    ('accept-ranges', 17),\n    ('accept', 18),\n    ('access-control-allow-origin', 19),\n    ('age', 20),\n    ('allow', 21),\n    ('authorization', 22),\n    ('cache-control', 23),\n    ('content-disposition', 24),\n    ('content-encoding', 25),\n    ('content-language', 26),\n    ('content-length', 27),\n    ('content-location', 28),\n    ('content-range', 29),\n    ('content-type', 30),\n    ('cookie', 31),\n    ('date', 32),\n    ('etag', 33),\n    ('expect', 34),\n    ('expires', 35),\n    ('from', 36),\n    ('host', 37),\n    ('if-match', 38),\n    ('if-modified-since', 39),\n    ('if-none-match', 40),\n    ('if-range', 41),\n    ('if-unmodified-since', 42),\n    ('last-modified', 43),\n    ('link', 44),\n    ('location', 45),\n    ('max-forwards', 46),\n    ('proxy-authenticate', 47),\n    ('proxy-authorization', 48),\n    ('range', 49),\n    ('referer', 50),\n    ('refresh', 51),\n    ('retry-after', 52),\n    ('server', 53),\n    ('set-cookie', 54),\n    ('strict-transport-security', 55),\n    ('transfer-encoding', 56),\n    ('user-agent', 57),\n    ('vary', 58),\n    ('via', 59),\n    ('www-authenticate', 60),\n    ('te', None),\n    ('connection', None),\n    ('keep-alive',None),\n    ('proxy-connection', None),\n    ('upgrade', None),\n    (':protocol', None),\n    ('priority', None),\n]\n\ndef to_enum_hd(k):\n    res = 'NGHTTP2_TOKEN_'\n    for c in k.upper():\n        if c == ':' or c == '-':\n            res += '_'\n            continue\n        res += c\n    return res\n\ndef build_header(headers):\n    res = {}\n    for k, _ in headers:\n        size = len(k)\n        if size not in res:\n            res[size] = {}\n        ent = res[size]\n        c = k[-1]\n        if c not in ent:\n            ent[c] = []\n        if k not in ent[c]:\n            ent[c].append(k)\n\n    return res\n\ndef gen_enum():\n    name = ''\n    print('typedef enum {')\n    for k, token in HEADERS:\n        if token is None:\n            print('  {},'.format(to_enum_hd(k)))\n        else:\n            if name != k:\n                name = k\n                print('  {} = {},'.format(to_enum_hd(k), token))\n    print('} nghttp2_token;')\n\ndef gen_index_header():\n    print('''\\\nstatic int32_t lookup_token(const uint8_t *name, size_t namelen) {\n  switch (namelen) {''')\n    b = build_header(HEADERS)\n    for size in sorted(b.keys()):\n        ents = b[size]\n        print('''\\\n  case {}:'''.format(size))\n        print('''\\\n    switch (name[{}]) {{'''.format(size - 1))\n        for c in sorted(ents.keys()):\n            headers = sorted(ents[c])\n            print('''\\\n    case '{}':'''.format(c))\n            for k in headers:\n                print('''\\\n      if (memeq(\"{}\", name, {})) {{\n        return {};\n      }}'''.format(k[:-1], size - 1, to_enum_hd(k)))\n            print('''\\\n      break;''')\n        print('''\\\n    }\n    break;''')\n    print('''\\\n  }\n  return -1;\n}''')\n\nif __name__ == '__main__':\n    gen_enum()\n    print()\n    gen_index_header()\n"
        },
        {
          "name": "genmethodchartbl.py",
          "type": "blob",
          "size": 1.0673828125,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x21:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  ',\n             'SPC '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if chr(i) in [\"!\" , \"#\" , \"$\" , \"%\" , \"&\" , \"'\" , \"*\",\n                  \"+\" , \"-\" , \".\" , \"^\" , \"_\" , \"`\" , \"|\" , \"~\"] or\\\n        ('0' <= chr(i) and chr(i) <= '9') or \\\n        ('A' <= chr(i) and chr(i) <= 'Z') or \\\n        ('a' <= chr(i) and chr(i) <= 'z'):\n        sys.stdout.write('1 /* {}    */, '.format(chr(i)))\n    elif (0x21 <= i and i < 0x7f):\n        sys.stdout.write('0 /* {}    */, '.format(chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('0 /* {} */, '.format(hex(i)))\n    else:\n        sys.stdout.write('0 /* {} */, '.format(name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "genmethodfunc.py",
          "type": "blob",
          "size": 1.2529296875,
          "content": "#!/usr/bin/env python3\nfrom io import StringIO\n\nfrom gentokenlookup import gentokenlookup\n\n# copied from llhttp.h, and stripped trailing spaces and backslashes.\nSRC = '''\n  XX(0, DELETE, DELETE)\n  XX(1, GET, GET)\n  XX(2, HEAD, HEAD)\n  XX(3, POST, POST)\n  XX(4, PUT, PUT)\n  XX(5, CONNECT, CONNECT)\n  XX(6, OPTIONS, OPTIONS)\n  XX(7, TRACE, TRACE)\n  XX(8, COPY, COPY)\n  XX(9, LOCK, LOCK)\n  XX(10, MKCOL, MKCOL)\n  XX(11, MOVE, MOVE)\n  XX(12, PROPFIND, PROPFIND)\n  XX(13, PROPPATCH, PROPPATCH)\n  XX(14, SEARCH, SEARCH)\n  XX(15, UNLOCK, UNLOCK)\n  XX(16, BIND, BIND)\n  XX(17, REBIND, REBIND)\n  XX(18, UNBIND, UNBIND)\n  XX(19, ACL, ACL)\n  XX(20, REPORT, REPORT)\n  XX(21, MKACTIVITY, MKACTIVITY)\n  XX(22, CHECKOUT, CHECKOUT)\n  XX(23, MERGE, MERGE)\n  XX(24, MSEARCH, M-SEARCH)\n  XX(25, NOTIFY, NOTIFY)\n  XX(26, SUBSCRIBE, SUBSCRIBE)\n  XX(27, UNSUBSCRIBE, UNSUBSCRIBE)\n  XX(28, PATCH, PATCH)\n  XX(29, PURGE, PURGE)\n  XX(30, MKCALENDAR, MKCALENDAR)\n  XX(31, LINK, LINK)\n  XX(32, UNLINK, UNLINK)\n  XX(33, SOURCE, SOURCE)\n'''\n\nif __name__ == '__main__':\n    methods = []\n    for line in StringIO(SRC):\n        line = line.strip()\n        if not line.startswith('XX'):\n            continue\n        _, m, _ = line.split(',', 2)\n        methods.append(m.strip())\n    gentokenlookup(methods, 'HTTP_')\n"
        },
        {
          "name": "gennghttpxfun.py",
          "type": "blob",
          "size": 6.677734375,
          "content": "#!/usr/bin/env python3\n\nfrom gentokenlookup import gentokenlookup\n\nOPTIONS = [\n    \"private-key-file\",\n    \"private-key-passwd-file\",\n    \"certificate-file\",\n    \"dh-param-file\",\n    \"subcert\",\n    \"backend\",\n    \"frontend\",\n    \"workers\",\n    \"http2-max-concurrent-streams\",\n    \"log-level\",\n    \"daemon\",\n    \"http2-proxy\",\n    \"http2-bridge\",\n    \"client-proxy\",\n    \"add-x-forwarded-for\",\n    \"strip-incoming-x-forwarded-for\",\n    \"no-via\",\n    \"frontend-http2-read-timeout\",\n    \"frontend-read-timeout\",\n    \"frontend-write-timeout\",\n    \"backend-read-timeout\",\n    \"backend-write-timeout\",\n    \"stream-read-timeout\",\n    \"stream-write-timeout\",\n    \"accesslog-file\",\n    \"accesslog-syslog\",\n    \"accesslog-format\",\n    \"errorlog-file\",\n    \"errorlog-syslog\",\n    \"backend-keep-alive-timeout\",\n    \"frontend-http2-window-bits\",\n    \"backend-http2-window-bits\",\n    \"frontend-http2-connection-window-bits\",\n    \"backend-http2-connection-window-bits\",\n    \"frontend-no-tls\",\n    \"backend-no-tls\",\n    \"backend-tls-sni-field\",\n    \"pid-file\",\n    \"user\",\n    \"syslog-facility\",\n    \"backlog\",\n    \"ciphers\",\n    \"client\",\n    \"insecure\",\n    \"cacert\",\n    \"backend-ipv4\",\n    \"backend-ipv6\",\n    \"backend-http-proxy-uri\",\n    \"read-rate\",\n    \"read-burst\",\n    \"write-rate\",\n    \"write-burst\",\n    \"worker-read-rate\",\n    \"worker-read-burst\",\n    \"worker-write-rate\",\n    \"worker-write-burst\",\n    \"npn-list\",\n    \"tls-proto-list\",\n    \"verify-client\",\n    \"verify-client-cacert\",\n    \"client-private-key-file\",\n    \"client-cert-file\",\n    \"frontend-http2-dump-request-header\",\n    \"frontend-http2-dump-response-header\",\n    \"http2-no-cookie-crumbling\",\n    \"frontend-frame-debug\",\n    \"padding\",\n    \"altsvc\",\n    \"add-request-header\",\n    \"add-response-header\",\n    \"worker-frontend-connections\",\n    \"no-location-rewrite\",\n    \"no-host-rewrite\",\n    \"backend-http1-connections-per-host\",\n    \"backend-http1-connections-per-frontend\",\n    \"listener-disable-timeout\",\n    \"tls-ticket-key-file\",\n    \"rlimit-nofile\",\n    \"backend-request-buffer\",\n    \"backend-response-buffer\",\n    \"no-server-push\",\n    \"backend-http2-connections-per-worker\",\n    \"fetch-ocsp-response-file\",\n    \"ocsp-update-interval\",\n    \"no-ocsp\",\n    \"include\",\n    \"tls-ticket-key-cipher\",\n    \"host-rewrite\",\n    \"tls-session-cache-memcached\",\n    \"tls-session-cache-memcached-tls\",\n    \"tls-ticket-key-memcached\",\n    \"tls-ticket-key-memcached-interval\",\n    \"tls-ticket-key-memcached-max-retry\",\n    \"tls-ticket-key-memcached-max-fail\",\n    \"mruby-file\",\n    \"accept-proxy-protocol\",\n    \"conf\",\n    \"fastopen\",\n    \"tls-dyn-rec-warmup-threshold\",\n    \"tls-dyn-rec-idle-timeout\",\n    \"add-forwarded\",\n    \"strip-incoming-forwarded\",\n    \"forwarded-by\",\n    \"forwarded-for\",\n    \"response-header-field-buffer\",\n    \"max-response-header-fields\",\n    \"request-header-field-buffer\",\n    \"max-request-header-fields\",\n    \"header-field-buffer\",\n    \"max-header-fields\",\n    \"no-http2-cipher-block-list\",\n    \"no-http2-cipher-black-list\",\n    \"backend-http1-tls\",\n    \"tls-session-cache-memcached-cert-file\",\n    \"tls-session-cache-memcached-private-key-file\",\n    \"tls-session-cache-memcached-address-family\",\n    \"tls-ticket-key-memcached-tls\",\n    \"tls-ticket-key-memcached-cert-file\",\n    \"tls-ticket-key-memcached-private-key-file\",\n    \"tls-ticket-key-memcached-address-family\",\n    \"backend-address-family\",\n    \"frontend-http2-max-concurrent-streams\",\n    \"backend-http2-max-concurrent-streams\",\n    \"backend-connections-per-frontend\",\n    \"backend-tls\",\n    \"backend-connections-per-host\",\n    \"error-page\",\n    \"no-kqueue\",\n    \"frontend-http2-settings-timeout\",\n    \"backend-http2-settings-timeout\",\n    \"api-max-request-body\",\n    \"backend-max-backoff\",\n    \"server-name\",\n    \"no-server-rewrite\",\n    \"frontend-http2-optimize-write-buffer-size\",\n    \"frontend-http2-optimize-window-size\",\n    \"frontend-http2-window-size\",\n    \"frontend-http2-connection-window-size\",\n    \"backend-http2-window-size\",\n    \"backend-http2-connection-window-size\",\n    \"frontend-http2-encoder-dynamic-table-size\",\n    \"frontend-http2-decoder-dynamic-table-size\",\n    \"backend-http2-encoder-dynamic-table-size\",\n    \"backend-http2-decoder-dynamic-table-size\",\n    \"ecdh-curves\",\n    \"tls-sct-dir\",\n    \"backend-connect-timeout\",\n    \"dns-cache-timeout\",\n    \"dns-lookup-timeout\",\n    \"dns-max-try\",\n    \"frontend-keep-alive-timeout\",\n    \"psk-secrets\",\n    \"client-psk-secrets\",\n    \"client-no-http2-cipher-block-list\",\n    \"client-no-http2-cipher-black-list\",\n    \"client-ciphers\",\n    \"accesslog-write-early\",\n    \"tls-min-proto-version\",\n    \"tls-max-proto-version\",\n    \"redirect-https-port\",\n    \"frontend-max-requests\",\n    \"single-thread\",\n    \"single-process\",\n    \"no-add-x-forwarded-proto\",\n    \"no-strip-incoming-x-forwarded-proto\",\n    \"ocsp-startup\",\n    \"no-verify-ocsp\",\n    \"verify-client-tolerate-expired\",\n    \"ignore-per-pattern-mruby-error\",\n    \"tls-no-postpone-early-data\",\n    \"tls-max-early-data\",\n    \"tls13-ciphers\",\n    \"tls13-client-ciphers\",\n    \"no-strip-incoming-early-data\",\n    \"quic-bpf-program-file\",\n    \"no-quic-bpf\",\n    \"http2-altsvc\",\n    \"frontend-http3-read-timeout\",\n    \"frontend-quic-idle-timeout\",\n    \"frontend-quic-debug-log\",\n    \"frontend-http3-window-size\",\n    \"frontend-http3-connection-window-size\",\n    \"frontend-http3-max-window-size\",\n    \"frontend-http3-max-connection-window-size\",\n    \"frontend-http3-max-concurrent-streams\",\n    \"frontend-quic-early-data\",\n    \"frontend-quic-qlog-dir\",\n    \"frontend-quic-require-token\",\n    \"frontend-quic-congestion-controller\",\n    \"quic-server-id\",\n    \"frontend-quic-secret-file\",\n    \"rlimit-memlock\",\n    \"max-worker-processes\",\n    \"worker-process-grace-shutdown-period\",\n    \"frontend-quic-initial-rtt\",\n    \"require-http-scheme\",\n    \"tls-ktls\",\n    \"alpn-list\",\n    \"frontend-header-timeout\",\n    \"frontend-http2-idle-timeout\",\n    \"frontend-http3-idle-timeout\",\n]\n\nLOGVARS = [\n    \"remote_addr\",\n    \"time_local\",\n    \"time_iso8601\",\n    \"request\",\n    \"status\",\n    \"body_bytes_sent\",\n    \"remote_port\",\n    \"server_port\",\n    \"request_time\",\n    \"pid\",\n    \"alpn\",\n    \"ssl_cipher\",\n    \"ssl_protocol\",\n    \"ssl_session_id\",\n    \"ssl_session_reused\",\n    \"tls_cipher\",\n    \"tls_protocol\",\n    \"tls_session_id\",\n    \"tls_session_reused\",\n    \"tls_sni\",\n    \"tls_client_fingerprint_sha256\",\n    \"tls_client_fingerprint_sha1\",\n    \"tls_client_subject_name\",\n    \"tls_client_issuer_name\",\n    \"tls_client_serial\",\n    \"backend_host\",\n    \"backend_port\",\n    \"method\",\n    \"path\",\n    \"path_without_query\",\n    \"protocol_version\",\n]\n\nif __name__ == '__main__':\n    gentokenlookup(OPTIONS, 'SHRPX_OPTID_', comp_fun='util::strieq')\n    gentokenlookup(LOGVARS, 'LogFragmentType::', comp_fun='util::strieq', return_type='LogFragmentType', fail_value='LogFragmentType::NONE')\n"
        },
        {
          "name": "gennmchartbl.py",
          "type": "blob",
          "size": 1.021484375,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x21:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  ',\n             'SPC '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if chr(i) in [\"!\" , \"#\" , \"$\" , \"%\" , \"&\" , \"'\" , \"*\",\n                  \"+\" , \"-\" , \".\" , \"^\" , \"_\" , \"`\" , \"|\" , \"~\"] or\\\n        ('0' <= chr(i) and chr(i) <= '9') or \\\n        ('a' <= chr(i) and chr(i) <= 'z'):\n        sys.stdout.write('1 /* {}    */, '.format(chr(i)))\n    elif (0x21 <= i and i < 0x7f):\n        sys.stdout.write('0 /* {}    */, '.format(chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('0 /* {} */, '.format(hex(i)))\n    else:\n        sys.stdout.write('0 /* {} */, '.format(name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "genpathchartbl.py",
          "type": "blob",
          "size": 0.7490234375,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x21:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  ',\n             'SPC '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if (0x21 <= i and i < 0x7f):\n        sys.stdout.write('1 /* {}    */, '.format(chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('1 /* {} */, '.format(hex(i)))\n    else:\n        sys.stdout.write('0 /* {} */, '.format(name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "gentokenlookup.py",
          "type": "blob",
          "size": 1.6669921875,
          "content": "#!/usr/bin/env python3\n\ndef to_enum_hd(k, prefix):\n    res = prefix\n    for c in k.upper():\n        if c == ':' or c == '-':\n            res += '_'\n            continue\n        res += c\n    return res\n\ndef build_header(headers):\n    res = {}\n    for k in headers:\n        size = len(k)\n        if size not in res:\n            res[size] = {}\n        ent = res[size]\n        c = k[-1]\n        if c not in ent:\n            ent[c] = []\n        ent[c].append(k)\n\n    return res\n\ndef gen_enum(tokens, prefix):\n    print('''\\\nenum {''')\n    for k in sorted(tokens):\n        print('''\\\n  {},'''.format(to_enum_hd(k, prefix)))\n    print('''\\\n  {}MAXIDX,\n}};'''.format(prefix))\n\ndef gen_index_header(tokens, prefix, comp_fun, return_type, fail_value):\n    print('''\\\n{} lookup_token(const StringRef &name) {{\n  switch (name.size()) {{'''.format(return_type))\n    b = build_header(tokens)\n    for size in sorted(b.keys()):\n        ents = b[size]\n        print('''\\\n  case {}:'''.format(size))\n        print('''\\\n    switch (name[{}]) {{'''.format(size - 1))\n        for c in sorted(ents.keys()):\n            headers = sorted(ents[c])\n            print('''\\\n    case '{}':'''.format(c))\n            for k in headers:\n                print('''\\\n      if ({}(\"{}\"_sr, name, {})) {{\n        return {};\n      }}'''.format(comp_fun, k[:-1], size - 1, to_enum_hd(k, prefix)))\n            print('''\\\n      break;''')\n        print('''\\\n    }\n    break;''')\n    print('''\\\n  }}\n  return {};\n}}'''.format(fail_value))\n\ndef gentokenlookup(tokens, prefix, comp_fun='util::streq', return_type='int', fail_value='-1'):\n    gen_enum(tokens, prefix)\n    print()\n    gen_index_header(tokens, prefix, comp_fun, return_type, fail_value)\n"
        },
        {
          "name": "genvchartbl.py",
          "type": "blob",
          "size": 0.8603515625,
          "content": "#!/usr/bin/env python3\nimport sys\n\ndef name(i):\n    if i < 0x20:\n        return \\\n            ['NUL ', 'SOH ', 'STX ', 'ETX ', 'EOT ', 'ENQ ', 'ACK ', 'BEL ',\n             'BS  ', 'HT  ', 'LF  ', 'VT  ', 'FF  ', 'CR  ', 'SO  ', 'SI  ',\n             'DLE ', 'DC1 ', 'DC2 ', 'DC3 ', 'DC4 ', 'NAK ', 'SYN ', 'ETB ',\n             'CAN ', 'EM  ', 'SUB ', 'ESC ', 'FS  ', 'GS  ', 'RS  ', 'US  '][i]\n    elif i == 0x7f:\n        return 'DEL '\n\nfor i in range(256):\n    if chr(i) == ' ':\n        sys.stdout.write('1 /* SPC  */, ')\n    elif chr(i) == '\\t':\n        sys.stdout.write('1 /* HT   */, ')\n    elif (0x21 <= i and i < 0x7f):\n        sys.stdout.write('1 /* {}    */, '.format(chr(i)))\n    elif 0x80 <= i:\n        sys.stdout.write('1 /* {} */, '.format(hex(i)))\n    else:\n        sys.stdout.write('0 /* {} */, '.format(name(i)))\n    if (i + 1)%4 == 0:\n        sys.stdout.write('\\n')\n"
        },
        {
          "name": "git-clang-format",
          "type": "blob",
          "size": 17.6494140625,
          "content": "#!/usr/bin/env python\n#\n#===- git-clang-format - ClangFormat Git Integration ---------*- python -*--===#\n#\n#                     The LLVM Compiler Infrastructure\n#\n# This file is distributed under the University of Illinois Open Source\n# License. See LICENSE.TXT for details.\n#\n#===------------------------------------------------------------------------===#\n\nr\"\"\"                                                                             \nclang-format git integration                                                     \n============================                                                     \n                                                                                 \nThis file provides a clang-format integration for git. Put it somewhere in your  \npath and ensure that it is executable. Then, \"git clang-format\" will invoke      \nclang-format on the changes in current files or a specific commit.               \n                                                                                 \nFor further details, run:                                                        \ngit clang-format -h                                                              \n                                                                                 \nRequires Python 2.7                                                              \n\"\"\"               \n\nimport argparse\nimport collections\nimport contextlib\nimport errno\nimport os\nimport re\nimport subprocess\nimport sys\n\nusage = 'git clang-format [OPTIONS] [<commit>] [--] [<file>...]'\n\ndesc = '''\nRun clang-format on all lines that differ between the working directory\nand <commit>, which defaults to HEAD.  Changes are only applied to the working\ndirectory.\n\nThe following git-config settings set the default of the corresponding option:\n  clangFormat.binary\n  clangFormat.commit\n  clangFormat.extension\n  clangFormat.style\n'''\n\n# Name of the temporary index file in which save the output of clang-format.\n# This file is created within the .git directory.\ntemp_index_basename = 'clang-format-index'\n\n\nRange = collections.namedtuple('Range', 'start, count')\n\n\ndef main():\n  config = load_git_config()\n\n  # In order to keep '--' yet allow options after positionals, we need to\n  # check for '--' ourselves.  (Setting nargs='*' throws away the '--', while\n  # nargs=argparse.REMAINDER disallows options after positionals.)\n  argv = sys.argv[1:]\n  try:\n    idx = argv.index('--')\n  except ValueError:\n    dash_dash = []\n  else:\n    dash_dash = argv[idx:]\n    argv = argv[:idx]\n\n  default_extensions = ','.join([\n      # From clang/lib/Frontend/FrontendOptions.cpp, all lower case\n      'c', 'h',  # C\n      'm',  # ObjC\n      'mm',  # ObjC++\n      'cc', 'cp', 'cpp', 'c++', 'cxx', 'hpp',  # C++\n      # Other languages that clang-format supports\n      'proto', 'protodevel',  # Protocol Buffers\n      'js',  # JavaScript\n      ])\n\n  p = argparse.ArgumentParser(\n    usage=usage, formatter_class=argparse.RawDescriptionHelpFormatter,\n    description=desc)\n  p.add_argument('--binary',\n                 default=config.get('clangformat.binary', 'clang-format'),\n                 help='path to clang-format'),\n  p.add_argument('--commit',\n                 default=config.get('clangformat.commit', 'HEAD'),\n                 help='default commit to use if none is specified'),\n  p.add_argument('--diff', action='store_true',\n                 help='print a diff instead of applying the changes')\n  p.add_argument('--extensions',\n                 default=config.get('clangformat.extensions',\n                                    default_extensions),\n                 help=('comma-separated list of file extensions to format, '\n                       'excluding the period and case-insensitive')),\n  p.add_argument('-f', '--force', action='store_true',\n                 help='allow changes to unstaged files')\n  p.add_argument('-p', '--patch', action='store_true',\n                 help='select hunks interactively')\n  p.add_argument('-q', '--quiet', action='count', default=0,\n                 help='print less information')\n  p.add_argument('--style',\n                 default=config.get('clangformat.style', None),\n                 help='passed to clang-format'),\n  p.add_argument('-v', '--verbose', action='count', default=0,\n                 help='print extra information')\n  # We gather all the remaining positional arguments into 'args' since we need\n  # to use some heuristics to determine whether or not <commit> was present.\n  # However, to print pretty messages, we make use of metavar and help.\n  p.add_argument('args', nargs='*', metavar='<commit>',\n                 help='revision from which to compute the diff')\n  p.add_argument('ignored', nargs='*', metavar='<file>...',\n                 help='if specified, only consider differences in these files')\n  opts = p.parse_args(argv)\n\n  opts.verbose -= opts.quiet\n  del opts.quiet\n\n  commit, files = interpret_args(opts.args, dash_dash, opts.commit)\n  changed_lines = compute_diff_and_extract_lines(commit, files)\n  if opts.verbose >= 1:\n    ignored_files = set(changed_lines)\n  filter_by_extension(changed_lines, opts.extensions.lower().split(','))\n  if opts.verbose >= 1:\n    ignored_files.difference_update(changed_lines)\n    if ignored_files:\n      print 'Ignoring changes in the following files (wrong extension):'\n      for filename in ignored_files:\n        print '   ', filename\n    if changed_lines:\n      print 'Running clang-format on the following files:'\n      for filename in changed_lines:\n        print '   ', filename\n  if not changed_lines:\n    print 'no modified files to format'\n    return\n  # The computed diff outputs absolute paths, so we must cd before accessing\n  # those files.\n  cd_to_toplevel()\n  old_tree = create_tree_from_workdir(changed_lines)\n  new_tree = run_clang_format_and_save_to_tree(changed_lines,\n                                               binary=opts.binary,\n                                               style=opts.style)\n  if opts.verbose >= 1:\n    print 'old tree:', old_tree\n    print 'new tree:', new_tree\n  if old_tree == new_tree:\n    if opts.verbose >= 0:\n      print 'clang-format did not modify any files'\n  elif opts.diff:\n    print_diff(old_tree, new_tree)\n  else:\n    changed_files = apply_changes(old_tree, new_tree, force=opts.force,\n                                  patch_mode=opts.patch)\n    if (opts.verbose >= 0 and not opts.patch) or opts.verbose >= 1:\n      print 'changed files:'\n      for filename in changed_files:\n        print '   ', filename\n\n\ndef load_git_config(non_string_options=None):\n  \"\"\"Return the git configuration as a dictionary.\n\n  All options are assumed to be strings unless in `non_string_options`, in which\n  is a dictionary mapping option name (in lower case) to either \"--bool\" or\n  \"--int\".\"\"\"\n  if non_string_options is None:\n    non_string_options = {}\n  out = {}\n  for entry in run('git', 'config', '--list', '--null').split('\\0'):\n    if entry:\n      name, value = entry.split('\\n', 1)\n      if name in non_string_options:\n        value = run('git', 'config', non_string_options[name], name)\n      out[name] = value\n  return out\n\n\ndef interpret_args(args, dash_dash, default_commit):\n  \"\"\"Interpret `args` as \"[commit] [--] [files...]\" and return (commit, files).\n\n  It is assumed that \"--\" and everything that follows has been removed from\n  args and placed in `dash_dash`.\n\n  If \"--\" is present (i.e., `dash_dash` is non-empty), the argument to its\n  left (if present) is taken as commit.  Otherwise, the first argument is\n  checked if it is a commit or a file.  If commit is not given,\n  `default_commit` is used.\"\"\"\n  if dash_dash:\n    if len(args) == 0:\n      commit = default_commit\n    elif len(args) > 1:\n      die('at most one commit allowed; %d given' % len(args))\n    else:\n      commit = args[0]\n    object_type = get_object_type(commit)\n    if object_type not in ('commit', 'tag'):\n      if object_type is None:\n        die(\"'%s' is not a commit\" % commit)\n      else:\n        die(\"'%s' is a %s, but a commit was expected\" % (commit, object_type))\n    files = dash_dash[1:]\n  elif args:\n    if disambiguate_revision(args[0]):\n      commit = args[0]\n      files = args[1:]\n    else:\n      commit = default_commit\n      files = args\n  else:\n    commit = default_commit\n    files = []\n  return commit, files\n\n\ndef disambiguate_revision(value):\n  \"\"\"Returns True if `value` is a revision, False if it is a file, or dies.\"\"\"\n  # If `value` is ambiguous (neither a commit nor a file), the following\n  # command will die with an appropriate error message.\n  run('git', 'rev-parse', value, verbose=False)\n  object_type = get_object_type(value)\n  if object_type is None:\n    return False\n  if object_type in ('commit', 'tag'):\n    return True\n  die('`%s` is a %s, but a commit or filename was expected' %\n      (value, object_type))\n\n\ndef get_object_type(value):\n  \"\"\"Returns a string description of an object's type, or None if it is not\n  a valid git object.\"\"\"\n  cmd = ['git', 'cat-file', '-t', value]\n  p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n  stdout, stderr = p.communicate()\n  if p.returncode != 0:\n    return None\n  return stdout.strip()\n\n\ndef compute_diff_and_extract_lines(commit, files):\n  \"\"\"Calls compute_diff() followed by extract_lines().\"\"\"\n  diff_process = compute_diff(commit, files)\n  changed_lines = extract_lines(diff_process.stdout)\n  diff_process.stdout.close()\n  diff_process.wait()\n  if diff_process.returncode != 0:\n    # Assume error was already printed to stderr.\n    sys.exit(2)\n  return changed_lines\n\n\ndef compute_diff(commit, files):\n  \"\"\"Return a subprocess object producing the diff from `commit`.\n\n  The return value's `stdin` file object will produce a patch with the\n  differences between the working directory and `commit`, filtered on `files`\n  (if non-empty).  Zero context lines are used in the patch.\"\"\"\n  cmd = ['git', 'diff-index', '-p', '-U0', commit, '--']\n  cmd.extend(files)\n  p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n  p.stdin.close()\n  return p\n\n\ndef extract_lines(patch_file):\n  \"\"\"Extract the changed lines in `patch_file`.\n\n  The return value is a dictionary mapping filename to a list of (start_line,\n  line_count) pairs.\n\n  The input must have been produced with ``-U0``, meaning unidiff format with\n  zero lines of context.  The return value is a dict mapping filename to a\n  list of line `Range`s.\"\"\"\n  matches = {}\n  for line in patch_file:\n    match = re.search(r'^\\+\\+\\+\\ [^/]+/(.*)', line)\n    if match:\n      filename = match.group(1).rstrip('\\r\\n')\n    match = re.search(r'^@@ -[0-9,]+ \\+(\\d+)(,(\\d+))?', line)\n    if match:\n      start_line = int(match.group(1))\n      line_count = 1\n      if match.group(3):\n        line_count = int(match.group(3))\n      if line_count > 0:\n        matches.setdefault(filename, []).append(Range(start_line, line_count))\n  return matches\n\n\ndef filter_by_extension(dictionary, allowed_extensions):\n  \"\"\"Delete every key in `dictionary` that doesn't have an allowed extension.\n\n  `allowed_extensions` must be a collection of lowercase file extensions,\n  excluding the period.\"\"\"\n  allowed_extensions = frozenset(allowed_extensions)\n  for filename in dictionary.keys():\n    base_ext = filename.rsplit('.', 1)\n    if len(base_ext) == 1 or base_ext[1].lower() not in allowed_extensions:\n      del dictionary[filename]\n\n\ndef cd_to_toplevel():\n  \"\"\"Change to the top level of the git repository.\"\"\"\n  toplevel = run('git', 'rev-parse', '--show-toplevel')\n  os.chdir(toplevel)\n\n\ndef create_tree_from_workdir(filenames):\n  \"\"\"Create a new git tree with the given files from the working directory.\n\n  Returns the object ID (SHA-1) of the created tree.\"\"\"\n  return create_tree(filenames, '--stdin')\n\n\ndef run_clang_format_and_save_to_tree(changed_lines, binary='clang-format',\n                                      style=None):\n  \"\"\"Run clang-format on each file and save the result to a git tree.\n\n  Returns the object ID (SHA-1) of the created tree.\"\"\"\n  def index_info_generator():\n    for filename, line_ranges in changed_lines.iteritems():\n      mode = oct(os.stat(filename).st_mode)\n      blob_id = clang_format_to_blob(filename, line_ranges, binary=binary,\n                                     style=style)\n      yield '%s %s\\t%s' % (mode, blob_id, filename)\n  return create_tree(index_info_generator(), '--index-info')\n\n\ndef create_tree(input_lines, mode):\n  \"\"\"Create a tree object from the given input.\n\n  If mode is '--stdin', it must be a list of filenames.  If mode is\n  '--index-info' is must be a list of values suitable for \"git update-index\n  --index-info\", such as \"<mode> <SP> <sha1> <TAB> <filename>\".  Any other mode\n  is invalid.\"\"\"\n  assert mode in ('--stdin', '--index-info')\n  cmd = ['git', 'update-index', '--add', '-z', mode]\n  with temporary_index_file():\n    p = subprocess.Popen(cmd, stdin=subprocess.PIPE)\n    for line in input_lines:\n      p.stdin.write('%s\\0' % line)\n    p.stdin.close()\n    if p.wait() != 0:\n      die('`%s` failed' % ' '.join(cmd))\n    tree_id = run('git', 'write-tree')\n    return tree_id\n\n\ndef clang_format_to_blob(filename, line_ranges, binary='clang-format',\n                         style=None):\n  \"\"\"Run clang-format on the given file and save the result to a git blob.\n\n  Returns the object ID (SHA-1) of the created blob.\"\"\"\n  clang_format_cmd = [binary, filename]\n  if style:\n    clang_format_cmd.extend(['-style='+style])\n  clang_format_cmd.extend([\n      '-lines=%s:%s' % (start_line, start_line+line_count-1)\n      for start_line, line_count in line_ranges])\n  try:\n    clang_format = subprocess.Popen(clang_format_cmd, stdin=subprocess.PIPE,\n                                    stdout=subprocess.PIPE)\n  except OSError as e:\n    if e.errno == errno.ENOENT:\n      die('cannot find executable \"%s\"' % binary)\n    else:\n      raise\n  clang_format.stdin.close()\n  hash_object_cmd = ['git', 'hash-object', '-w', '--path='+filename, '--stdin']\n  hash_object = subprocess.Popen(hash_object_cmd, stdin=clang_format.stdout,\n                                 stdout=subprocess.PIPE)\n  clang_format.stdout.close()\n  stdout = hash_object.communicate()[0]\n  if hash_object.returncode != 0:\n    die('`%s` failed' % ' '.join(hash_object_cmd))\n  if clang_format.wait() != 0:\n    die('`%s` failed' % ' '.join(clang_format_cmd))\n  return stdout.rstrip('\\r\\n')\n\n\n@contextlib.contextmanager\ndef temporary_index_file(tree=None):\n  \"\"\"Context manager for setting GIT_INDEX_FILE to a temporary file and deleting\n  the file afterward.\"\"\"\n  index_path = create_temporary_index(tree)\n  old_index_path = os.environ.get('GIT_INDEX_FILE')\n  os.environ['GIT_INDEX_FILE'] = index_path\n  try:\n    yield\n  finally:\n    if old_index_path is None:\n      del os.environ['GIT_INDEX_FILE']\n    else:\n      os.environ['GIT_INDEX_FILE'] = old_index_path\n    os.remove(index_path)\n\n\ndef create_temporary_index(tree=None):\n  \"\"\"Create a temporary index file and return the created file's path.\n\n  If `tree` is not None, use that as the tree to read in.  Otherwise, an\n  empty index is created.\"\"\"\n  gitdir = run('git', 'rev-parse', '--git-dir')\n  path = os.path.join(gitdir, temp_index_basename)\n  if tree is None:\n    tree = '--empty'\n  run('git', 'read-tree', '--index-output='+path, tree)\n  return path\n\n\ndef print_diff(old_tree, new_tree):\n  \"\"\"Print the diff between the two trees to stdout.\"\"\"\n  # We use the porcelain 'diff' and not plumbing 'diff-tree' because the output\n  # is expected to be viewed by the user, and only the former does nice things\n  # like color and pagination.\n  subprocess.check_call(['git', 'diff', old_tree, new_tree, '--'])\n\n\ndef apply_changes(old_tree, new_tree, force=False, patch_mode=False):\n  \"\"\"Apply the changes in `new_tree` to the working directory.\n\n  Bails if there are local changes in those files and not `force`.  If\n  `patch_mode`, runs `git checkout --patch` to select hunks interactively.\"\"\"\n  changed_files = run('git', 'diff-tree', '-r', '-z', '--name-only', old_tree,\n                      new_tree).rstrip('\\0').split('\\0')\n  if not force:\n    unstaged_files = run('git', 'diff-files', '--name-status', *changed_files)\n    if unstaged_files:\n      print >>sys.stderr, ('The following files would be modified but '\n                           'have unstaged changes:')\n      print >>sys.stderr, unstaged_files\n      print >>sys.stderr, 'Please commit, stage, or stash them first.'\n      sys.exit(2)\n  if patch_mode:\n    # In patch mode, we could just as well create an index from the new tree\n    # and checkout from that, but then the user will be presented with a\n    # message saying \"Discard ... from worktree\".  Instead, we use the old\n    # tree as the index and checkout from new_tree, which gives the slightly\n    # better message, \"Apply ... to index and worktree\".  This is not quite\n    # right, since it won't be applied to the user's index, but oh well.\n    with temporary_index_file(old_tree):\n      subprocess.check_call(['git', 'checkout', '--patch', new_tree])\n    index_tree = old_tree\n  else:\n    with temporary_index_file(new_tree):\n      run('git', 'checkout-index', '-a', '-f')\n  return changed_files\n\n\ndef run(*args, **kwargs):\n  stdin = kwargs.pop('stdin', '')\n  verbose = kwargs.pop('verbose', True)\n  strip = kwargs.pop('strip', True)\n  for name in kwargs:\n    raise TypeError(\"run() got an unexpected keyword argument '%s'\" % name)\n  p = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n                       stdin=subprocess.PIPE)\n  stdout, stderr = p.communicate(input=stdin)\n  if p.returncode == 0:\n    if stderr:\n      if verbose:\n        print >>sys.stderr, '`%s` printed to stderr:' % ' '.join(args)\n      print >>sys.stderr, stderr.rstrip()\n    if strip:\n      stdout = stdout.rstrip('\\r\\n')\n    return stdout\n  if verbose:\n    print >>sys.stderr, '`%s` returned %s' % (' '.join(args), p.returncode)\n  if stderr:\n    print >>sys.stderr, stderr.rstrip()\n  sys.exit(2)\n\n\ndef die(message):\n  print >>sys.stderr, 'error:', message\n  sys.exit(2)\n\n\nif __name__ == '__main__':\n  main()\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.8193359375,
          "content": "module github.com/nghttp2/nghttp2\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874\n\tgithub.com/quic-go/quic-go v0.48.2\n\tgithub.com/tatsuhiro-t/go-nghttp2 v0.0.0-20240121064059-46ccb0a462a8\n\tgolang.org/x/net v0.33.0\n)\n\nrequire (\n\tgithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 // indirect\n\tgithub.com/google/pprof v0.0.0-20210407192527-94a9f03dee38 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.9.5 // indirect\n\tgithub.com/quic-go/qpack v0.5.1 // indirect\n\tgo.uber.org/mock v0.4.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 5.505859375,
          "content": "github.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874 h1:N7oVaKyGp8bttX0bfZGmcGkjz7DLQXhAn3DNd3T0ous=\ngithub.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874/go.mod h1:r5xuitiExdLAJ09PR7vBVENGvp4ZuTBeWTGtxuX3K+c=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-logr/logr v1.2.4 h1:g01GSCwiDw2xSZfjJ2/T9M+S6pFdcNtFYsp+Y43HYDQ=\ngithub.com/go-logr/logr v1.2.4/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20210407192527-94a9f03dee38 h1:yAJXTCF9TqKcTiHJAE8dj7HMvPfh66eeA2JYW7eFpSE=\ngithub.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/onsi/ginkgo/v2 v2.9.5 h1:+6Hr4uxzP4XIUyAkg61dWBw8lb/gc4/X5luuxN/EC+Q=\ngithub.com/onsi/ginkgo/v2 v2.9.5/go.mod h1:tvAoo1QUJwNEU2ITftXTpR7R1RbCzoZUOs3RonqW57k=\ngithub.com/onsi/gomega v1.27.6 h1:ENqfyGeS5AX/rlXDd/ETokDz93u0YufY1Pgxuy/PvWE=\ngithub.com/onsi/gomega v1.27.6/go.mod h1:PIQNjfQwkP3aQAH7lf7j87O/5FiNr+ZR8+ipb+qQlhg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/quic-go/qpack v0.5.1 h1:giqksBPnT/HDtZ6VhtFKgoLOWmlyo9Ei6u9PqzIMbhI=\ngithub.com/quic-go/qpack v0.5.1/go.mod h1:+PC4XFrEskIVkcLzpEkbLqq1uCoxPhQuvK5rH1ZgaEg=\ngithub.com/quic-go/quic-go v0.48.2 h1:wsKXZPeGWpMpCGSWqOcqpW2wZYic/8T3aqiOID0/KWE=\ngithub.com/quic-go/quic-go v0.48.2/go.mod h1:yBgs3rWBOADpga7F+jJsb6Ybg1LSYiQvwWlLX+/6HMs=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tatsuhiro-t/go-nghttp2 v0.0.0-20240121064059-46ccb0a462a8 h1:zKJxuRe+a0O34V81GAZWOrotuU6mveT30QLjJ7OPMMg=\ngithub.com/tatsuhiro-t/go-nghttp2 v0.0.0-20240121064059-46ccb0a462a8/go.mod h1:gTqc3Q4boc+cKRlSFywTYdX9t6VGRcsThlNIWwaL3Dc=\ngo.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=\ngo.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 h1:vr/HnozRka3pE4EsMEg1lgkXJkTFJCVUX+S/ZT6wYzM=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842/go.mod h1:XtvwrStGgqGPLc4cjQfWqZHG1YFdYs6swckp8vpsjnc=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "help2rst.py",
          "type": "blob",
          "size": 5.6669921875,
          "content": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n# script to produce rst file from program's help output.\n\nimport sys\nimport re\nimport argparse\n\narg_indent = ' ' * 14\n\ndef help2man(infile):\n    # We assume that first line is usage line like this:\n    #\n    # Usage: nghttp [OPTIONS]... URI...\n    #\n    # The second line is description of the command.  Multiple lines\n    # are permitted.  The blank line signals the end of this section.\n    # After that, we parses positional and optional arguments.\n    #\n    # The positional argument is enclosed with < and >:\n    #\n    # <PRIVATE_KEY>\n    #\n    # We may describe default behavior without any options by encoding\n    # ( and ):\n    #\n    # (default mode)\n    #\n    # \"Options:\" is treated specially and produces \"OPTIONS\" section.\n    # We allow subsection under OPTIONS.  Lines not starting with (, <\n    # and Options: are treated as subsection name and produces section\n    # one level down:\n    #\n    # TLS/SSL:\n    #\n    # The above is an example of subsection.\n    #\n    # The description of arguments must be indented by len(arg_indent)\n    # characters.  The default value should be placed in separate line\n    # and should be start with \"Default: \" after indentation.\n\n    line = infile.readline().strip()\n    m = re.match(r'^Usage: (.*)', line)\n    if not m:\n        print('usage line is invalid.  Expected following lines:')\n        print('Usage: cmdname ...')\n        sys.exit(1)\n    synopsis = m.group(1).split(' ', 1)\n    if len(synopsis) == 2:\n        cmdname, args = synopsis\n    else:\n        cmdname, args = synopsis[0], ''\n\n    description = []\n    for line in infile:\n        line = line.strip()\n        if not line:\n            break\n        description.append(line)\n\n    print('''\n.. GENERATED by help2rst.py.  DO NOT EDIT DIRECTLY.\n\n.. program:: {cmdname}\n\n{cmdname}(1)\n{cmdnameunderline}\n\nSYNOPSIS\n--------\n\n**{cmdname}** {args}\n\nDESCRIPTION\n-----------\n\n{description}\n'''.format(cmdname=cmdname, args=args,\n           cmdnameunderline='=' * (len(cmdname) + 3),\n           synopsis=synopsis, description=format_text('\\n'.join(description))))\n\n    in_arg = False\n    in_footer = False\n\n    for line in infile:\n        line = line.rstrip()\n\n        if not line.strip() and in_arg:\n            print()\n            continue\n        if line.startswith('   ') and in_arg:\n            if not line.startswith(arg_indent):\n                sys.stderr.write('warning: argument description is not indented correctly.  We need {} spaces as indentation.\\n'.format(len(arg_indent)))\n            print('{}'.format(format_arg_text(line[len(arg_indent):])))\n            continue\n\n        if in_arg:\n            print()\n            in_arg = False\n\n        if line == '--':\n            in_footer = True\n            continue\n\n        if in_footer:\n            print(line.strip())\n            continue\n\n        if line == 'Options:':\n            print('OPTIONS')\n            print('-------')\n            print()\n            continue\n\n        if line.startswith('  <'):\n            # positional argument\n            m = re.match(r'^(?:\\s+)([a-zA-Z0-9-_<>]+)(.*)', line)\n            argname, rest = m.group(1), m.group(2)\n            print('.. describe:: {}'.format(argname))\n            print()\n            print('{}'.format(format_arg_text(rest.strip())))\n            in_arg = True\n            continue\n\n        if line.startswith('  ('):\n            # positional argument\n            m = re.match(r'^(?:\\s+)(\\([a-zA-Z0-9-_<> ]+\\))(.*)', line)\n            argname, rest = m.group(1), m.group(2)\n            print('.. describe:: {}'.format(argname))\n            print()\n            print('{}'.format(format_arg_text(rest.strip())))\n            in_arg = True\n            continue\n\n        if line.startswith('  -'):\n            # optional argument\n            m = re.match(\n                r'^(?:\\s+)(-\\S+?(?:, -\\S+?)*)($| .*)',\n                line)\n            argname, rest = m.group(1), m.group(2)\n            print('.. option:: {}'.format(argname))\n            print()\n            rest = rest.strip()\n            if len(rest):\n                print('{}'.format(format_arg_text(rest)))\n            in_arg = True\n            continue\n\n        if not line.startswith(' ') and line.endswith(':'):\n            # subsection\n            subsec = line.strip()[:-1]\n            print('{}'.format(subsec))\n            print('{}'.format('~' * len(subsec)))\n            print()\n            continue\n\n        print(line.strip())\n\ndef format_text(text):\n    # escape *, but don't escape * if it is used as bullet list.\n    m = re.match(r'^\\s*\\*\\s+', text)\n    if m:\n        text = text[:len(m.group(0))] + re.sub(r'\\*', r'\\*', text[len(m.group(0)):])\n    else:\n        text = re.sub(r'\\*', r'\\*', text)\n    # markup option reference\n    text = re.sub(r'(^|\\s)(-[a-zA-Z]|--[a-zA-Z0-9-]+)',\n                  r'\\1:option:`\\2`', text)\n    # sphinx does not like markup like ':option:`-f`='.  We need\n    # backslash between ` and =.\n    text = re.sub(r'(:option:`.*?`)(\\S)', r'\\1\\\\\\2', text)\n    # file path should be italic\n    text = re.sub(r'(^|\\s|\\'|\")(/[^\\s\\'\"]*)', r'\\1*\\2*', text)\n    return text\n\ndef format_arg_text(text):\n    if text.strip().startswith('Default: '):\n        return '\\n    ' + re.sub(r'^(\\s*Default: )(.*)$', r'\\1``\\2``', text)\n    return '    {}'.format(format_text(text))\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(\n        description='Produces rst document from help output.')\n    parser.add_argument('-i', '--include', metavar='FILE',\n                        help='include content of <FILE> as verbatim.  It should be ReST formatted text.')\n    args = parser.parse_args()\n    help2man(sys.stdin)\n    if args.include:\n        print()\n        with open(args.include) as f:\n            sys.stdout.write(f.read())\n"
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "makebashcompletion",
          "type": "blob",
          "size": 0.1513671875,
          "content": "#!/bin/sh -e\n\nBCPATH=doc/bash_completion\n\nfor prog in nghttp nghttpd nghttpx h2load; do\n    $BCPATH/make_bash_completion.py src/$prog > $BCPATH/$prog\ndone\n"
        },
        {
          "name": "makemanpages",
          "type": "blob",
          "size": 0.23046875,
          "content": "#!/bin/sh -e\n\nfor prog in nghttp nghttpd nghttpx h2load; do\n    src/$prog -h | ./help2rst.py -i doc/$prog.h2r > doc/$prog.1.rst\ndone\n\ncd doc\nmake man\n\nfor prog in nghttp nghttpd nghttpx h2load; do\n    cp manual/man/$prog.1 $prog.1\ndone\n"
        },
        {
          "name": "makerelease.sh",
          "type": "blob",
          "size": 0.556640625,
          "content": "#!/bin/sh -e\n\nTAG=$1\nPREV_TAG=$2\n\ngit checkout refs/tags/$TAG\ngit log --pretty=fuller --date=short refs/tags/$PREV_TAG..HEAD > ChangeLog\n\nautoreconf -i\n./configure\nmake dist-bzip2\nmake dist-gzip\nmake dist-xz\nmake distclean\n\nrm -f checksums.txt\n\nVERSION=`echo -n $TAG | sed -E 's|^v([0-9]+\\.[0-9]+\\.[0-9]+(-[^.]+(\\.[0-9]+)?)?)$|\\1|'`\nfor f in nghttp2-$VERSION.tar.bz2 nghttp2-$VERSION.tar.gz nghttp2-$VERSION.tar.xz; do\n    sha256sum $f >> checksums.txt\n    echo -n \"$GPG_PASSPHRASE\" | gpg --batch --passphrase-fd 0 --pinentry-mode loopback --armor --detach-sign $f\ndone\n"
        },
        {
          "name": "mkcipherlist.py",
          "type": "blob",
          "size": 12.197265625,
          "content": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n# This script read cipher suite list csv file [1] and prints out id\n# and name of black listed cipher suites.  The output is used by\n# src/ssl.cc.\n#\n# [1] http://www.iana.org/assignments/tls-parameters/tls-parameters-4.csv\n# [2] http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml\n\nimport re\nimport sys\nimport csv\n\n# From RFC 7540\nblacklist = [\n    'TLS_NULL_WITH_NULL_NULL',\n    'TLS_RSA_WITH_NULL_MD5',\n    'TLS_RSA_WITH_NULL_SHA',\n    'TLS_RSA_EXPORT_WITH_RC4_40_MD5',\n    'TLS_RSA_WITH_RC4_128_MD5',\n    'TLS_RSA_WITH_RC4_128_SHA',\n    'TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5',\n    'TLS_RSA_WITH_IDEA_CBC_SHA',\n    'TLS_RSA_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_RSA_WITH_DES_CBC_SHA',\n    'TLS_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_DH_DSS_WITH_DES_CBC_SHA',\n    'TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_DH_RSA_WITH_DES_CBC_SHA',\n    'TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_DHE_DSS_WITH_DES_CBC_SHA',\n    'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_DHE_RSA_WITH_DES_CBC_SHA',\n    'TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DH_anon_EXPORT_WITH_RC4_40_MD5',\n    'TLS_DH_anon_WITH_RC4_128_MD5',\n    'TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA',\n    'TLS_DH_anon_WITH_DES_CBC_SHA',\n    'TLS_DH_anon_WITH_3DES_EDE_CBC_SHA',\n    'TLS_KRB5_WITH_DES_CBC_SHA',\n    'TLS_KRB5_WITH_3DES_EDE_CBC_SHA',\n    'TLS_KRB5_WITH_RC4_128_SHA',\n    'TLS_KRB5_WITH_IDEA_CBC_SHA',\n    'TLS_KRB5_WITH_DES_CBC_MD5',\n    'TLS_KRB5_WITH_3DES_EDE_CBC_MD5',\n    'TLS_KRB5_WITH_RC4_128_MD5',\n    'TLS_KRB5_WITH_IDEA_CBC_MD5',\n    'TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA',\n    'TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA',\n    'TLS_KRB5_EXPORT_WITH_RC4_40_SHA',\n    'TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5',\n    'TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5',\n    'TLS_KRB5_EXPORT_WITH_RC4_40_MD5',\n    'TLS_PSK_WITH_NULL_SHA',\n    'TLS_DHE_PSK_WITH_NULL_SHA',\n    'TLS_RSA_PSK_WITH_NULL_SHA',\n    'TLS_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_DH_DSS_WITH_AES_128_CBC_SHA',\n    'TLS_DH_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_DHE_DSS_WITH_AES_128_CBC_SHA',\n    'TLS_DHE_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_DH_anon_WITH_AES_128_CBC_SHA',\n    'TLS_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_DH_DSS_WITH_AES_256_CBC_SHA',\n    'TLS_DH_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_DHE_DSS_WITH_AES_256_CBC_SHA',\n    'TLS_DHE_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_DH_anon_WITH_AES_256_CBC_SHA',\n    'TLS_RSA_WITH_NULL_SHA256',\n    'TLS_RSA_WITH_AES_128_CBC_SHA256',\n    'TLS_RSA_WITH_AES_256_CBC_SHA256',\n    'TLS_DH_DSS_WITH_AES_128_CBC_SHA256',\n    'TLS_DH_RSA_WITH_AES_128_CBC_SHA256',\n    'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256',\n    'TLS_RSA_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA',\n    'TLS_DHE_RSA_WITH_AES_128_CBC_SHA256',\n    'TLS_DH_DSS_WITH_AES_256_CBC_SHA256',\n    'TLS_DH_RSA_WITH_AES_256_CBC_SHA256',\n    'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256',\n    'TLS_DHE_RSA_WITH_AES_256_CBC_SHA256',\n    'TLS_DH_anon_WITH_AES_128_CBC_SHA256',\n    'TLS_DH_anon_WITH_AES_256_CBC_SHA256',\n    'TLS_RSA_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA',\n    'TLS_PSK_WITH_RC4_128_SHA',\n    'TLS_PSK_WITH_3DES_EDE_CBC_SHA',\n    'TLS_PSK_WITH_AES_128_CBC_SHA',\n    'TLS_PSK_WITH_AES_256_CBC_SHA',\n    'TLS_DHE_PSK_WITH_RC4_128_SHA',\n    'TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA',\n    'TLS_DHE_PSK_WITH_AES_128_CBC_SHA',\n    'TLS_DHE_PSK_WITH_AES_256_CBC_SHA',\n    'TLS_RSA_PSK_WITH_RC4_128_SHA',\n    'TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA',\n    'TLS_RSA_PSK_WITH_AES_128_CBC_SHA',\n    'TLS_RSA_PSK_WITH_AES_256_CBC_SHA',\n    'TLS_RSA_WITH_SEED_CBC_SHA',\n    'TLS_DH_DSS_WITH_SEED_CBC_SHA',\n    'TLS_DH_RSA_WITH_SEED_CBC_SHA',\n    'TLS_DHE_DSS_WITH_SEED_CBC_SHA',\n    'TLS_DHE_RSA_WITH_SEED_CBC_SHA',\n    'TLS_DH_anon_WITH_SEED_CBC_SHA',\n    'TLS_RSA_WITH_AES_128_GCM_SHA256',\n    'TLS_RSA_WITH_AES_256_GCM_SHA384',\n    'TLS_DH_RSA_WITH_AES_128_GCM_SHA256',\n    'TLS_DH_RSA_WITH_AES_256_GCM_SHA384',\n    'TLS_DH_DSS_WITH_AES_128_GCM_SHA256',\n    'TLS_DH_DSS_WITH_AES_256_GCM_SHA384',\n    'TLS_DH_anon_WITH_AES_128_GCM_SHA256',\n    'TLS_DH_anon_WITH_AES_256_GCM_SHA384',\n    'TLS_PSK_WITH_AES_128_GCM_SHA256',\n    'TLS_PSK_WITH_AES_256_GCM_SHA384',\n    'TLS_RSA_PSK_WITH_AES_128_GCM_SHA256',\n    'TLS_RSA_PSK_WITH_AES_256_GCM_SHA384',\n    'TLS_PSK_WITH_AES_128_CBC_SHA256',\n    'TLS_PSK_WITH_AES_256_CBC_SHA384',\n    'TLS_PSK_WITH_NULL_SHA256',\n    'TLS_PSK_WITH_NULL_SHA384',\n    'TLS_DHE_PSK_WITH_AES_128_CBC_SHA256',\n    'TLS_DHE_PSK_WITH_AES_256_CBC_SHA384',\n    'TLS_DHE_PSK_WITH_NULL_SHA256',\n    'TLS_DHE_PSK_WITH_NULL_SHA384',\n    'TLS_RSA_PSK_WITH_AES_128_CBC_SHA256',\n    'TLS_RSA_PSK_WITH_AES_256_CBC_SHA384',\n    'TLS_RSA_PSK_WITH_NULL_SHA256',\n    'TLS_RSA_PSK_WITH_NULL_SHA384',\n    'TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256',\n    'TLS_EMPTY_RENEGOTIATION_INFO_SCSV',\n    'TLS_ECDH_ECDSA_WITH_NULL_SHA',\n    'TLS_ECDH_ECDSA_WITH_RC4_128_SHA',\n    'TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA',\n    'TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA',\n    'TLS_ECDHE_ECDSA_WITH_NULL_SHA',\n    'TLS_ECDHE_ECDSA_WITH_RC4_128_SHA',\n    'TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA',\n    'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA',\n    'TLS_ECDH_RSA_WITH_NULL_SHA',\n    'TLS_ECDH_RSA_WITH_RC4_128_SHA',\n    'TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDH_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_ECDH_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_ECDHE_RSA_WITH_NULL_SHA',\n    'TLS_ECDHE_RSA_WITH_RC4_128_SHA',\n    'TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_ECDH_anon_WITH_NULL_SHA',\n    'TLS_ECDH_anon_WITH_RC4_128_SHA',\n    'TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDH_anon_WITH_AES_128_CBC_SHA',\n    'TLS_ECDH_anon_WITH_AES_256_CBC_SHA',\n    'TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA',\n    'TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA',\n    'TLS_SRP_SHA_WITH_AES_128_CBC_SHA',\n    'TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA',\n    'TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA',\n    'TLS_SRP_SHA_WITH_AES_256_CBC_SHA',\n    'TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA',\n    'TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA',\n    'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',\n    'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',\n    'TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256',\n    'TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384',\n    'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',\n    'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',\n    'TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256',\n    'TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384',\n    'TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256',\n    'TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384',\n    'TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256',\n    'TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384',\n    'TLS_ECDHE_PSK_WITH_RC4_128_SHA',\n    'TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA',\n    'TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA',\n    'TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA',\n    'TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256',\n    'TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384',\n    'TLS_ECDHE_PSK_WITH_NULL_SHA',\n    'TLS_ECDHE_PSK_WITH_NULL_SHA256',\n    'TLS_ECDHE_PSK_WITH_NULL_SHA384',\n    'TLS_RSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_RSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DH_anon_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DH_anon_WITH_ARIA_256_CBC_SHA384',\n    'TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256',\n    'TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384',\n    'TLS_RSA_WITH_ARIA_128_GCM_SHA256',\n    'TLS_RSA_WITH_ARIA_256_GCM_SHA384',\n    'TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256',\n    'TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384',\n    'TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256',\n    'TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384',\n    'TLS_DH_anon_WITH_ARIA_128_GCM_SHA256',\n    'TLS_DH_anon_WITH_ARIA_256_GCM_SHA384',\n    'TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256',\n    'TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384',\n    'TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256',\n    'TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384',\n    'TLS_PSK_WITH_ARIA_128_CBC_SHA256',\n    'TLS_PSK_WITH_ARIA_256_CBC_SHA384',\n    'TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256',\n    'TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384',\n    'TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256',\n    'TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384',\n    'TLS_PSK_WITH_ARIA_128_GCM_SHA256',\n    'TLS_PSK_WITH_ARIA_256_GCM_SHA384',\n    'TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256',\n    'TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384',\n    'TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256',\n    'TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384',\n    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256',\n    'TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384',\n    'TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256',\n    'TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384',\n    'TLS_RSA_WITH_AES_128_CCM',\n    'TLS_RSA_WITH_AES_256_CCM',\n    'TLS_RSA_WITH_AES_128_CCM_8',\n    'TLS_RSA_WITH_AES_256_CCM_8',\n    'TLS_PSK_WITH_AES_128_CCM',\n    'TLS_PSK_WITH_AES_256_CCM',\n    'TLS_PSK_WITH_AES_128_CCM_8',\n    'TLS_PSK_WITH_AES_256_CCM_8',\n]\n\nciphers = []\nfound = set()\nfor hl, name, _, _, _ in csv.reader(sys.stdin):\n    if name not in blacklist:\n        continue\n\n    found.add(name)\n\n    high, low = hl.split(',')\n\n    id = high + low[2:] + 'u'\n    ciphers.append((id, name))\n\nprint('''\\\nenum {''')\n\nfor id, name in ciphers:\n    print('{} = {},'.format(name, id))\n\nprint('''\\\n};\n''')\n\nfor id, name in ciphers:\n    print('''\\\ncase {}:'''.format(name))\n\nif len(found) != len(blacklist):\n    print('{} found out of {}; not all cipher was found: {}'.format(\n        len(found), len(blacklist),\n        found.symmetric_difference(blacklist)))\n"
        },
        {
          "name": "mkhufftbl.py",
          "type": "blob",
          "size": 21.724609375,
          "content": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n# This script reads Huffman Code table [1] and generates symbol table\n# and decoding tables in C language.  The resulting code is used in\n# lib/nghttp2_hd_huffman.h and lib/nghttp2_hd_huffman_data.c\n#\n# [1] https://httpwg.org/specs/rfc7541.html\n\nimport re\nimport sys\nfrom io import StringIO\n\n# From [1]\nHUFFMAN_CODE_TABLE = \"\"\"\\\n    (  0)  |11111111|11000                             1ff8  [13]\n    (  1)  |11111111|11111111|1011000                7fffd8  [23]\n    (  2)  |11111111|11111111|11111110|0010         fffffe2  [28]\n    (  3)  |11111111|11111111|11111110|0011         fffffe3  [28]\n    (  4)  |11111111|11111111|11111110|0100         fffffe4  [28]\n    (  5)  |11111111|11111111|11111110|0101         fffffe5  [28]\n    (  6)  |11111111|11111111|11111110|0110         fffffe6  [28]\n    (  7)  |11111111|11111111|11111110|0111         fffffe7  [28]\n    (  8)  |11111111|11111111|11111110|1000         fffffe8  [28]\n    (  9)  |11111111|11111111|11101010               ffffea  [24]\n    ( 10)  |11111111|11111111|11111111|111100      3ffffffc  [30]\n    ( 11)  |11111111|11111111|11111110|1001         fffffe9  [28]\n    ( 12)  |11111111|11111111|11111110|1010         fffffea  [28]\n    ( 13)  |11111111|11111111|11111111|111101      3ffffffd  [30]\n    ( 14)  |11111111|11111111|11111110|1011         fffffeb  [28]\n    ( 15)  |11111111|11111111|11111110|1100         fffffec  [28]\n    ( 16)  |11111111|11111111|11111110|1101         fffffed  [28]\n    ( 17)  |11111111|11111111|11111110|1110         fffffee  [28]\n    ( 18)  |11111111|11111111|11111110|1111         fffffef  [28]\n    ( 19)  |11111111|11111111|11111111|0000         ffffff0  [28]\n    ( 20)  |11111111|11111111|11111111|0001         ffffff1  [28]\n    ( 21)  |11111111|11111111|11111111|0010         ffffff2  [28]\n    ( 22)  |11111111|11111111|11111111|111110      3ffffffe  [30]\n    ( 23)  |11111111|11111111|11111111|0011         ffffff3  [28]\n    ( 24)  |11111111|11111111|11111111|0100         ffffff4  [28]\n    ( 25)  |11111111|11111111|11111111|0101         ffffff5  [28]\n    ( 26)  |11111111|11111111|11111111|0110         ffffff6  [28]\n    ( 27)  |11111111|11111111|11111111|0111         ffffff7  [28]\n    ( 28)  |11111111|11111111|11111111|1000         ffffff8  [28]\n    ( 29)  |11111111|11111111|11111111|1001         ffffff9  [28]\n    ( 30)  |11111111|11111111|11111111|1010         ffffffa  [28]\n    ( 31)  |11111111|11111111|11111111|1011         ffffffb  [28]\n' ' ( 32)  |010100                                       14  [ 6]\n'!' ( 33)  |11111110|00                                 3f8  [10]\n'\"' ( 34)  |11111110|01                                 3f9  [10]\n'#' ( 35)  |11111111|1010                               ffa  [12]\n'$' ( 36)  |11111111|11001                             1ff9  [13]\n'%' ( 37)  |010101                                       15  [ 6]\n'&' ( 38)  |11111000                                     f8  [ 8]\n''' ( 39)  |11111111|010                                7fa  [11]\n'(' ( 40)  |11111110|10                                 3fa  [10]\n')' ( 41)  |11111110|11                                 3fb  [10]\n'*' ( 42)  |11111001                                     f9  [ 8]\n'+' ( 43)  |11111111|011                                7fb  [11]\n',' ( 44)  |11111010                                     fa  [ 8]\n'-' ( 45)  |010110                                       16  [ 6]\n'.' ( 46)  |010111                                       17  [ 6]\n'/' ( 47)  |011000                                       18  [ 6]\n'0' ( 48)  |00000                                         0  [ 5]\n'1' ( 49)  |00001                                         1  [ 5]\n'2' ( 50)  |00010                                         2  [ 5]\n'3' ( 51)  |011001                                       19  [ 6]\n'4' ( 52)  |011010                                       1a  [ 6]\n'5' ( 53)  |011011                                       1b  [ 6]\n'6' ( 54)  |011100                                       1c  [ 6]\n'7' ( 55)  |011101                                       1d  [ 6]\n'8' ( 56)  |011110                                       1e  [ 6]\n'9' ( 57)  |011111                                       1f  [ 6]\n':' ( 58)  |1011100                                      5c  [ 7]\n';' ( 59)  |11111011                                     fb  [ 8]\n'<' ( 60)  |11111111|1111100                           7ffc  [15]\n'=' ( 61)  |100000                                       20  [ 6]\n'>' ( 62)  |11111111|1011                               ffb  [12]\n'?' ( 63)  |11111111|00                                 3fc  [10]\n'@' ( 64)  |11111111|11010                             1ffa  [13]\n'A' ( 65)  |100001                                       21  [ 6]\n'B' ( 66)  |1011101                                      5d  [ 7]\n'C' ( 67)  |1011110                                      5e  [ 7]\n'D' ( 68)  |1011111                                      5f  [ 7]\n'E' ( 69)  |1100000                                      60  [ 7]\n'F' ( 70)  |1100001                                      61  [ 7]\n'G' ( 71)  |1100010                                      62  [ 7]\n'H' ( 72)  |1100011                                      63  [ 7]\n'I' ( 73)  |1100100                                      64  [ 7]\n'J' ( 74)  |1100101                                      65  [ 7]\n'K' ( 75)  |1100110                                      66  [ 7]\n'L' ( 76)  |1100111                                      67  [ 7]\n'M' ( 77)  |1101000                                      68  [ 7]\n'N' ( 78)  |1101001                                      69  [ 7]\n'O' ( 79)  |1101010                                      6a  [ 7]\n'P' ( 80)  |1101011                                      6b  [ 7]\n'Q' ( 81)  |1101100                                      6c  [ 7]\n'R' ( 82)  |1101101                                      6d  [ 7]\n'S' ( 83)  |1101110                                      6e  [ 7]\n'T' ( 84)  |1101111                                      6f  [ 7]\n'U' ( 85)  |1110000                                      70  [ 7]\n'V' ( 86)  |1110001                                      71  [ 7]\n'W' ( 87)  |1110010                                      72  [ 7]\n'X' ( 88)  |11111100                                     fc  [ 8]\n'Y' ( 89)  |1110011                                      73  [ 7]\n'Z' ( 90)  |11111101                                     fd  [ 8]\n'[' ( 91)  |11111111|11011                             1ffb  [13]\n'\\' ( 92)  |11111111|11111110|000                     7fff0  [19]\n']' ( 93)  |11111111|11100                             1ffc  [13]\n'^' ( 94)  |11111111|111100                            3ffc  [14]\n'_' ( 95)  |100010                                       22  [ 6]\n'`' ( 96)  |11111111|1111101                           7ffd  [15]\n'a' ( 97)  |00011                                         3  [ 5]\n'b' ( 98)  |100011                                       23  [ 6]\n'c' ( 99)  |00100                                         4  [ 5]\n'd' (100)  |100100                                       24  [ 6]\n'e' (101)  |00101                                         5  [ 5]\n'f' (102)  |100101                                       25  [ 6]\n'g' (103)  |100110                                       26  [ 6]\n'h' (104)  |100111                                       27  [ 6]\n'i' (105)  |00110                                         6  [ 5]\n'j' (106)  |1110100                                      74  [ 7]\n'k' (107)  |1110101                                      75  [ 7]\n'l' (108)  |101000                                       28  [ 6]\n'm' (109)  |101001                                       29  [ 6]\n'n' (110)  |101010                                       2a  [ 6]\n'o' (111)  |00111                                         7  [ 5]\n'p' (112)  |101011                                       2b  [ 6]\n'q' (113)  |1110110                                      76  [ 7]\n'r' (114)  |101100                                       2c  [ 6]\n's' (115)  |01000                                         8  [ 5]\n't' (116)  |01001                                         9  [ 5]\n'u' (117)  |101101                                       2d  [ 6]\n'v' (118)  |1110111                                      77  [ 7]\n'w' (119)  |1111000                                      78  [ 7]\n'x' (120)  |1111001                                      79  [ 7]\n'y' (121)  |1111010                                      7a  [ 7]\n'z' (122)  |1111011                                      7b  [ 7]\n'{' (123)  |11111111|1111110                           7ffe  [15]\n'|' (124)  |11111111|100                                7fc  [11]\n'}' (125)  |11111111|111101                            3ffd  [14]\n'~' (126)  |11111111|11101                             1ffd  [13]\n    (127)  |11111111|11111111|11111111|1100         ffffffc  [28]\n    (128)  |11111111|11111110|0110                    fffe6  [20]\n    (129)  |11111111|11111111|010010                 3fffd2  [22]\n    (130)  |11111111|11111110|0111                    fffe7  [20]\n    (131)  |11111111|11111110|1000                    fffe8  [20]\n    (132)  |11111111|11111111|010011                 3fffd3  [22]\n    (133)  |11111111|11111111|010100                 3fffd4  [22]\n    (134)  |11111111|11111111|010101                 3fffd5  [22]\n    (135)  |11111111|11111111|1011001                7fffd9  [23]\n    (136)  |11111111|11111111|010110                 3fffd6  [22]\n    (137)  |11111111|11111111|1011010                7fffda  [23]\n    (138)  |11111111|11111111|1011011                7fffdb  [23]\n    (139)  |11111111|11111111|1011100                7fffdc  [23]\n    (140)  |11111111|11111111|1011101                7fffdd  [23]\n    (141)  |11111111|11111111|1011110                7fffde  [23]\n    (142)  |11111111|11111111|11101011               ffffeb  [24]\n    (143)  |11111111|11111111|1011111                7fffdf  [23]\n    (144)  |11111111|11111111|11101100               ffffec  [24]\n    (145)  |11111111|11111111|11101101               ffffed  [24]\n    (146)  |11111111|11111111|010111                 3fffd7  [22]\n    (147)  |11111111|11111111|1100000                7fffe0  [23]\n    (148)  |11111111|11111111|11101110               ffffee  [24]\n    (149)  |11111111|11111111|1100001                7fffe1  [23]\n    (150)  |11111111|11111111|1100010                7fffe2  [23]\n    (151)  |11111111|11111111|1100011                7fffe3  [23]\n    (152)  |11111111|11111111|1100100                7fffe4  [23]\n    (153)  |11111111|11111110|11100                  1fffdc  [21]\n    (154)  |11111111|11111111|011000                 3fffd8  [22]\n    (155)  |11111111|11111111|1100101                7fffe5  [23]\n    (156)  |11111111|11111111|011001                 3fffd9  [22]\n    (157)  |11111111|11111111|1100110                7fffe6  [23]\n    (158)  |11111111|11111111|1100111                7fffe7  [23]\n    (159)  |11111111|11111111|11101111               ffffef  [24]\n    (160)  |11111111|11111111|011010                 3fffda  [22]\n    (161)  |11111111|11111110|11101                  1fffdd  [21]\n    (162)  |11111111|11111110|1001                    fffe9  [20]\n    (163)  |11111111|11111111|011011                 3fffdb  [22]\n    (164)  |11111111|11111111|011100                 3fffdc  [22]\n    (165)  |11111111|11111111|1101000                7fffe8  [23]\n    (166)  |11111111|11111111|1101001                7fffe9  [23]\n    (167)  |11111111|11111110|11110                  1fffde  [21]\n    (168)  |11111111|11111111|1101010                7fffea  [23]\n    (169)  |11111111|11111111|011101                 3fffdd  [22]\n    (170)  |11111111|11111111|011110                 3fffde  [22]\n    (171)  |11111111|11111111|11110000               fffff0  [24]\n    (172)  |11111111|11111110|11111                  1fffdf  [21]\n    (173)  |11111111|11111111|011111                 3fffdf  [22]\n    (174)  |11111111|11111111|1101011                7fffeb  [23]\n    (175)  |11111111|11111111|1101100                7fffec  [23]\n    (176)  |11111111|11111111|00000                  1fffe0  [21]\n    (177)  |11111111|11111111|00001                  1fffe1  [21]\n    (178)  |11111111|11111111|100000                 3fffe0  [22]\n    (179)  |11111111|11111111|00010                  1fffe2  [21]\n    (180)  |11111111|11111111|1101101                7fffed  [23]\n    (181)  |11111111|11111111|100001                 3fffe1  [22]\n    (182)  |11111111|11111111|1101110                7fffee  [23]\n    (183)  |11111111|11111111|1101111                7fffef  [23]\n    (184)  |11111111|11111110|1010                    fffea  [20]\n    (185)  |11111111|11111111|100010                 3fffe2  [22]\n    (186)  |11111111|11111111|100011                 3fffe3  [22]\n    (187)  |11111111|11111111|100100                 3fffe4  [22]\n    (188)  |11111111|11111111|1110000                7ffff0  [23]\n    (189)  |11111111|11111111|100101                 3fffe5  [22]\n    (190)  |11111111|11111111|100110                 3fffe6  [22]\n    (191)  |11111111|11111111|1110001                7ffff1  [23]\n    (192)  |11111111|11111111|11111000|00           3ffffe0  [26]\n    (193)  |11111111|11111111|11111000|01           3ffffe1  [26]\n    (194)  |11111111|11111110|1011                    fffeb  [20]\n    (195)  |11111111|11111110|001                     7fff1  [19]\n    (196)  |11111111|11111111|100111                 3fffe7  [22]\n    (197)  |11111111|11111111|1110010                7ffff2  [23]\n    (198)  |11111111|11111111|101000                 3fffe8  [22]\n    (199)  |11111111|11111111|11110110|0            1ffffec  [25]\n    (200)  |11111111|11111111|11111000|10           3ffffe2  [26]\n    (201)  |11111111|11111111|11111000|11           3ffffe3  [26]\n    (202)  |11111111|11111111|11111001|00           3ffffe4  [26]\n    (203)  |11111111|11111111|11111011|110          7ffffde  [27]\n    (204)  |11111111|11111111|11111011|111          7ffffdf  [27]\n    (205)  |11111111|11111111|11111001|01           3ffffe5  [26]\n    (206)  |11111111|11111111|11110001               fffff1  [24]\n    (207)  |11111111|11111111|11110110|1            1ffffed  [25]\n    (208)  |11111111|11111110|010                     7fff2  [19]\n    (209)  |11111111|11111111|00011                  1fffe3  [21]\n    (210)  |11111111|11111111|11111001|10           3ffffe6  [26]\n    (211)  |11111111|11111111|11111100|000          7ffffe0  [27]\n    (212)  |11111111|11111111|11111100|001          7ffffe1  [27]\n    (213)  |11111111|11111111|11111001|11           3ffffe7  [26]\n    (214)  |11111111|11111111|11111100|010          7ffffe2  [27]\n    (215)  |11111111|11111111|11110010               fffff2  [24]\n    (216)  |11111111|11111111|00100                  1fffe4  [21]\n    (217)  |11111111|11111111|00101                  1fffe5  [21]\n    (218)  |11111111|11111111|11111010|00           3ffffe8  [26]\n    (219)  |11111111|11111111|11111010|01           3ffffe9  [26]\n    (220)  |11111111|11111111|11111111|1101         ffffffd  [28]\n    (221)  |11111111|11111111|11111100|011          7ffffe3  [27]\n    (222)  |11111111|11111111|11111100|100          7ffffe4  [27]\n    (223)  |11111111|11111111|11111100|101          7ffffe5  [27]\n    (224)  |11111111|11111110|1100                    fffec  [20]\n    (225)  |11111111|11111111|11110011               fffff3  [24]\n    (226)  |11111111|11111110|1101                    fffed  [20]\n    (227)  |11111111|11111111|00110                  1fffe6  [21]\n    (228)  |11111111|11111111|101001                 3fffe9  [22]\n    (229)  |11111111|11111111|00111                  1fffe7  [21]\n    (230)  |11111111|11111111|01000                  1fffe8  [21]\n    (231)  |11111111|11111111|1110011                7ffff3  [23]\n    (232)  |11111111|11111111|101010                 3fffea  [22]\n    (233)  |11111111|11111111|101011                 3fffeb  [22]\n    (234)  |11111111|11111111|11110111|0            1ffffee  [25]\n    (235)  |11111111|11111111|11110111|1            1ffffef  [25]\n    (236)  |11111111|11111111|11110100               fffff4  [24]\n    (237)  |11111111|11111111|11110101               fffff5  [24]\n    (238)  |11111111|11111111|11111010|10           3ffffea  [26]\n    (239)  |11111111|11111111|1110100                7ffff4  [23]\n    (240)  |11111111|11111111|11111010|11           3ffffeb  [26]\n    (241)  |11111111|11111111|11111100|110          7ffffe6  [27]\n    (242)  |11111111|11111111|11111011|00           3ffffec  [26]\n    (243)  |11111111|11111111|11111011|01           3ffffed  [26]\n    (244)  |11111111|11111111|11111100|111          7ffffe7  [27]\n    (245)  |11111111|11111111|11111101|000          7ffffe8  [27]\n    (246)  |11111111|11111111|11111101|001          7ffffe9  [27]\n    (247)  |11111111|11111111|11111101|010          7ffffea  [27]\n    (248)  |11111111|11111111|11111101|011          7ffffeb  [27]\n    (249)  |11111111|11111111|11111111|1110         ffffffe  [28]\n    (250)  |11111111|11111111|11111101|100          7ffffec  [27]\n    (251)  |11111111|11111111|11111101|101          7ffffed  [27]\n    (252)  |11111111|11111111|11111101|110          7ffffee  [27]\n    (253)  |11111111|11111111|11111101|111          7ffffef  [27]\n    (254)  |11111111|11111111|11111110|000          7fffff0  [27]\n    (255)  |11111111|11111111|11111011|10           3ffffee  [26]\nEOS (256)  |11111111|11111111|11111111|111111      3fffffff  [30]\n\"\"\"\n\nclass Node:\n\n    def __init__(self, term = None):\n        self.term = term\n        self.left = None\n        self.right = None\n        self.trans = []\n        self.id = None\n        self.accept = False\n\nclass Context:\n\n    def __init__(self):\n        self.next_id_ = 0\n        self.root = Node()\n\n    def next_id(self):\n        id = self.next_id_\n        self.next_id_ += 1\n        return id\n\ndef _add(node, sym, bits):\n    if len(bits) == 0:\n        node.term = sym\n        return\n    else:\n        if bits[0] == '0':\n            if node.left is None:\n                node.left = Node()\n            child = node.left\n        else:\n            if node.right is None:\n                node.right = Node()\n            child = node.right\n        _add(child, sym, bits[1:])\n\ndef huffman_tree_add(ctx, sym, bits):\n    _add(ctx.root, sym, bits)\n\ndef _set_node_id(ctx, node, prefix):\n    if node.term is not None:\n        return\n    if len(prefix) <= 7 and [1] * len(prefix) == prefix:\n        node.accept = True\n    node.id = ctx.next_id()\n    _set_node_id(ctx, node.left, prefix + [0])\n    _set_node_id(ctx, node.right, prefix + [1])\n\ndef huffman_tree_set_node_id(ctx):\n    _set_node_id(ctx, ctx.root, [])\n\ndef _traverse(node, sym, start_node, root, left):\n    if left == 0:\n        if sym == 256:\n            sym = None\n            node = None\n        start_node.trans.append((node, sym))\n        return\n\n    if node.term is not None:\n        node = root\n\n    def go(node):\n        if node.term is not None:\n            assert sym is None\n            nsym = node.term\n        else:\n            nsym = sym\n\n        _traverse(node, nsym, start_node, root, left - 1)\n\n    go(node.left)\n    go(node.right)\n\ndef _build_transition_table(ctx, node):\n    if node is None:\n        return\n    _traverse(node, None, node, ctx.root, 4)\n    _build_transition_table(ctx, node.left)\n    _build_transition_table(ctx, node.right)\n\ndef huffman_tree_build_transition_table(ctx):\n    _build_transition_table(ctx, ctx.root)\n\nNGHTTP2_HUFF_ACCEPTED = 1 << 14\nNGHTTP2_HUFF_SYM = 1 << 15\n\ndef _print_transition_table(node):\n    if node.term is not None:\n        return\n    print('/* {} */'.format(node.id))\n    print('{')\n    for nd, sym in node.trans:\n        flags = 0\n        if sym is None:\n            out = 0\n        else:\n            out = sym\n            flags |= NGHTTP2_HUFF_SYM\n        if nd is None:\n            id = 256\n        else:\n            id = nd.id\n            if id is None:\n                # if nd.id is None, it is a leaf node\n                id = 0\n                flags |= NGHTTP2_HUFF_ACCEPTED\n            elif nd.accept:\n                flags |= NGHTTP2_HUFF_ACCEPTED\n        print('  {{0x{:02x}, {}}},'.format(id | flags, out))\n    print('},')\n    _print_transition_table(node.left)\n    _print_transition_table(node.right)\n\ndef huffman_tree_print_transition_table(ctx):\n    _print_transition_table(ctx.root)\n    print('/* 256 */')\n    print('{')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('  {0x100, 0},')\n    print('},')\n\nif __name__ == '__main__':\n    ctx = Context()\n    symbol_tbl = [(None, 0) for i in range(257)]\n\n    for line in StringIO(HUFFMAN_CODE_TABLE):\n        m = re.match(\n            r'.*\\(\\s*(\\d+)\\)\\s+([|01]+)\\s+(\\S+)\\s+\\[\\s*(\\d+)\\].*', line)\n        if m:\n            sym = int(m.group(1))\n            bits = re.sub(r'\\|', '', m.group(2))\n            code = m.group(3)\n            nbits = int(m.group(4))\n            if len(code) > 8:\n                raise Error('Code is more than 4 bytes long')\n            assert(len(bits) == nbits)\n            symbol_tbl[sym] = (nbits, code)\n            huffman_tree_add(ctx, sym, bits)\n\n    huffman_tree_set_node_id(ctx)\n    huffman_tree_build_transition_table(ctx)\n\n    print('''\\\ntypedef struct {\n  uint32_t nbits;\n  uint32_t code;\n} nghttp2_huff_sym;\n''')\n\n    print('''\\\nconst nghttp2_huff_sym huff_sym_table[] = {''')\n    for i in range(257):\n        nbits = symbol_tbl[i][0]\n        k = int(symbol_tbl[i][1], 16)\n        k = k << (32 - nbits)\n        print('''\\\n  {{ {}, 0x{}u }}{}\\\n'''.format(symbol_tbl[i][0], hex(k)[2:], ',' if i < 256 else ''))\n    print('};')\n    print()\n\n    print('''\\\nenum {{\n  NGHTTP2_HUFF_ACCEPTED = {},\n  NGHTTP2_HUFF_SYM = {},\n}} nghttp2_huff_decode_flag;\n'''.format(NGHTTP2_HUFF_ACCEPTED, NGHTTP2_HUFF_SYM))\n\n    print('''\\\ntypedef struct {\n  uint16_t fstate;\n  uint8_t sym;\n} nghttp2_huff_decode;\n''')\n\n    print('''\\\nconst nghttp2_huff_decode huff_decode_table[][16] = {''')\n    huffman_tree_print_transition_table(ctx)\n    print('};')\n"
        },
        {
          "name": "mkstatichdtbl.py",
          "type": "blob",
          "size": 0.8876953125,
          "content": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n# This scripts reads static table entries [1] and generates\n# nghttp2_hd_static_entry table.  This table is used in\n# lib/nghttp2_hd.c.\n#\n# [1] https://httpwg.org/specs/rfc7541.html\n\nimport re, sys\n\ndef hd_map_hash(name):\n  h = 2166136261\n\n  # FNV hash variant: http://isthe.com/chongo/tech/comp/fnv/\n  for c in name:\n    h ^= ord(c)\n    h *= 16777619\n    h &= 0xffffffff\n\n  return h\n\nentries = []\nfor line in sys.stdin:\n    m = re.match(r'(\\d+)\\s+(\\S+)\\s+(\\S.*)?', line)\n    val = m.group(3).strip() if m.group(3) else ''\n    entries.append((int(m.group(1)), m.group(2), val))\n\nprint('static nghttp2_hd_entry static_table[] = {')\nidx = 0\nfor i, ent in enumerate(entries):\n    if entries[idx][1] != ent[1]:\n        idx = i\n    print('MAKE_STATIC_ENT(\"{}\", \"{}\", {}, {}u),'\\\n        .format(ent[1], ent[2], entries[idx][0] - 1, hd_map_hash(ent[1])))\nprint('};')\n"
        },
        {
          "name": "nghttpx.conf.sample",
          "type": "blob",
          "size": 0.8896484375,
          "content": "#\n# Sample configuration file for nghttpx.\n#\n# * Line staring '#' is treated as comment.\n#\n# * The option name in the configuration file is the long command-line\n#   option name with leading '--' stripped (e.g., frontend). Put '='\n#   between option name and value. Don't put extra leading or trailing\n#   spaces.\n#\n# * The options which do not take argument in the command-line *take*\n#   argument in the configuration file. Specify 'yes' as argument\n#   (e.g., http2-proxy=yes). If other string is given, it disables the\n#   option.\n#\n# * To specify private key and certificate file, use private-key-file\n#   and certificate-file. See the examples below.\n#\n# * conf option cannot be used in the configuration file. It will be\n#   ignored.\n#\n# Examples:\n#\n# frontend=0.0.0.0,3000\n# backend=127.0.0.1,80\n# private-key-file=/path/to/server.key\n# certificate-file=/path/to/server.crt\n# http2-proxy=no\n# workers=1\n"
        },
        {
          "name": "pre-commit",
          "type": "blob",
          "size": 0.8515625,
          "content": "#!/bin/sh -e\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n#\n\nCLANGFORMATDIFF=`git config --get clangformatdiff.binary`\n\nif [ -z \"$CLANGFORMATDIFF\" ]; then\n    CLANGFORMATDIFF=clang-format-diff.py\nfi\n\nerrors=`git diff-index --cached --diff-filter=ACMR -p HEAD lib src examples tests | $CLANGFORMATDIFF -p1`\n\nif [ -n \"$errors\" ]; then\n    echo \"$errors\"\n    echo \"--\"\n    echo \"[ERROR] We have detected the difference between the code to commit\"\n    echo \"and clang-format style rules.  Please fix this problem in either:\"\n    echo \"1) Apply patch above.\"\n    echo \"2) Use clang-format to format lines.\"\n    echo \"3) Reformat these lines manually.\"\n    echo \"Aborting commit.\"\n    exit 1\nfi\n"
        },
        {
          "name": "proxy.pac.sample",
          "type": "blob",
          "size": 0.158203125,
          "content": "function FindProxyForURL(url, host) {\n  // For SPDY proxy\n  return \"HTTPS localhost:3000\";\n  // For conventional HTTP proxy\n  // return \"PROXY localhost:3000\";\n}\n"
        },
        {
          "name": "releasechk",
          "type": "blob",
          "size": 0.1884765625,
          "content": "#!/bin/sh -e\n\nautoreconf -i\ngit submodule update --init\n./configure --with-mruby --with-neverbleed\nmake -j8 distcheck DISTCHECK_CONFIGURE_FLAGS=\"--with-mruby --with-neverbleed --enable-werror\"\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}