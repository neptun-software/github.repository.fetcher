{
  "metadata": {
    "timestamp": 1736565351439,
    "page": 178,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MaskRay/ccls",
      "stars": 3807,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.626953125,
          "content": "version: \"{build}\"\n\nos: Visual Studio 2017\n\nplatform:\n  - x64\n\nbuild:\n  parallel: true  # enable MSBuild parallel builds\n  verbosity: minimal\n\ninstall:\n  - if not exist llvm.tar.xz appveyor DownloadFile \"https://ziglang.org/deps/llvm+clang-7.0.0-win64-msvc-release.tar.xz\" -FileName llvm.tar.xz\n  - 7z e -txz llvm.tar.xz\n  - 7z x llvm.tar\n  - git submodule update --init --recursive\nbuild_script:\n  - cmake -G\"Visual Studio 15 2017 Win64\" -H. -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=C:\\projects\\ccls\\llvm+clang-7.0.0-win64-msvc-release\n  - cmake --build build --target ccls --config Release\n\nartifacts:\n  - path: build\\Release\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.03515625,
          "content": "BasedOnStyle: LLVM\nColumnLimit: 120\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.126953125,
          "content": "/*\n!/.github/\n!/index_tests/\n!/src/\n!/third_party/\n!/.appveyor.yml\n!/.clang-format\n!/CMakeLists.txt\n!/LICENSE\n!/README.md\n!/meow/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.107421875,
          "content": "[submodule \"third_party/rapidjson\"]\n\tpath = third_party/rapidjson\n\turl = https://github.com/Tencent/rapidjson\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.6064453125,
          "content": "cmake_minimum_required(VERSION 3.8)\nproject(ccls LANGUAGES CXX C)\n\noption(USE_SYSTEM_RAPIDJSON \"Use system RapidJSON instead of the git submodule if exists\" ON)\n\n# Sources for the executable are specified at end of CMakeLists.txt\nadd_executable(ccls \"\")\n\n### Default build type\n\nset(DEFAULT_CMAKE_BUILD_TYPE Release)\n\n# CMAKE_BUILD_TYPE is not available if a multi-configuration generator is used\n# (eg Visual Studio generators)\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n  message(STATUS \"Setting build type to '${DEFAULT_CMAKE_BUILD_TYPE}' as none \\\nwas specified.\")\n  set(CMAKE_BUILD_TYPE ${DEFAULT_CMAKE_BUILD_TYPE}\n      CACHE STRING \"Choose the type of build.\" FORCE)\n\n  # Set the possible values of build type for cmake-gui\n  set_property(CACHE CMAKE_BUILD_TYPE\n               PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\nendif()\n\n### Compile options\n\n# Enable C++17 (Required)\nset_property(TARGET ccls PROPERTY CXX_STANDARD 17)\nset_property(TARGET ccls PROPERTY CXX_STANDARD_REQUIRED ON)\nset_property(TARGET ccls PROPERTY CXX_EXTENSIONS OFF)\n\n# CMake sets MSVC for both MSVC and Clang(Windows)\nif(MSVC)\n  # Common MSVC/Clang(Windows) options\n  target_compile_options(ccls PRIVATE\n    /nologo\n    /EHsc\n    /D_CRT_SECURE_NO_WARNINGS # don't try to use MSVC std replacements\n    /W3 # roughly -Wall\n    /wd4996 # ignore deprecated declaration\n    /wd4267 # ignores warning C4267\n            # (conversion from 'size_t' to 'type'),\n            # roughly -Wno-sign-compare\n    /wd4800\n    /wd4068 # Disable unknown pragma warning\n    /std:c++17\n    /Zc:__cplusplus\n    $<$<CONFIG:Debug>:/FS>\n  )\n  # relink system libs\n  target_link_libraries(ccls PRIVATE Mincore.lib)\nelse()\n  # Common GCC/Clang(Linux) options\n  target_compile_options(ccls PRIVATE\n                         -Wall\n                         -Wno-sign-compare\n                         )\n\n  if(${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)\n    target_compile_options(ccls PRIVATE -Wno-return-type -Wno-unused-result)\n  endif()\n\n  if(${CMAKE_CXX_COMPILER_ID} STREQUAL Clang)\n    target_compile_options(ccls PRIVATE\n                           $<$<CONFIG:Debug>:-fno-limit-debug-info>)\n  endif()\nendif()\n\n### Libraries\n\nfind_package(Clang REQUIRED)\n\nif(CLANG_LINK_CLANG_DYLIB)\n  target_link_libraries(ccls PRIVATE clang-cpp)\nelse()\n  target_link_libraries(ccls PRIVATE\n    clangIndex\n    clangFormat\n    clangTooling\n    clangToolingInclusions\n    clangToolingCore\n    clangFrontend\n    clangParse\n    clangSerialization\n    clangSema\n    clangAST\n    clangLex\n    clangDriver\n    clangBasic\n  )\nendif()\n\nif(LLVM_LINK_LLVM_DYLIB)\n  target_link_libraries(ccls PRIVATE LLVM)\nelse()\n  target_link_libraries(ccls PRIVATE LLVMOption LLVMSupport)\n  if(LLVM_VERSION_MAJOR GREATER_EQUAL 16) # llvmorg-16-init-15123-gf09cf34d0062\n    target_link_libraries(ccls PRIVATE LLVMTargetParser)\n  endif()\nendif()\n\nif(NOT LLVM_ENABLE_RTTI)\n  # releases.llvm.org libraries are compiled with -fno-rtti\n  # The mismatch between lib{clang,LLVM}* and ccls can make libstdc++ std::make_shared return nullptr\n  # _Sp_counted_ptr_inplace::_M_get_deleter\n  if(MSVC)\n    target_compile_options(ccls PRIVATE /GR-)\n  else()\n    target_compile_options(ccls PRIVATE -fno-rtti)\n  endif()\nendif()\n\n# Enable threading support\nset(THREADS_PREFER_PTHREAD_FLAG ON)\nfind_package(Threads REQUIRED)\ntarget_link_libraries(ccls PRIVATE Threads::Threads)\n\nif(${CMAKE_SYSTEM_NAME} STREQUAL FreeBSD)\n  find_package(Backtrace REQUIRED)\n  target_link_libraries(ccls PRIVATE ${Backtrace_LIBRARIES})\n  # src/platform_posix.cc uses libthr\n  target_link_libraries(ccls PRIVATE thr)\nendif()\n\nif(LLVM_ENABLE_ZLIB)\n  find_package(ZLIB)\nendif()\n\n### Definitions\n\n# Find Clang resource directory with Clang executable.\n\nif(NOT CLANG_RESOURCE_DIR)\n  find_program(CLANG_EXECUTABLE clang)\n  if(NOT CLANG_EXECUTABLE)\n    message(FATAL_ERROR \"clang executable not found.\")\n  endif()\n\n  execute_process(\n    COMMAND ${CLANG_EXECUTABLE} -print-resource-dir\n    RESULT_VARIABLE CLANG_FIND_RESOURCE_DIR_RESULT\n    OUTPUT_VARIABLE CLANG_RESOURCE_DIR\n    ERROR_VARIABLE CLANG_FIND_RESOURCE_DIR_ERROR\n    OUTPUT_STRIP_TRAILING_WHITESPACE\n  )\n\n  if(CLANG_FIND_RESOURCE_DIR_RESULT)\n    message(FATAL_ERROR \"Error retrieving Clang resource directory with Clang \\\n            executable. Output:\\n ${CLANG_FIND_RESOURCE_DIR_ERROR}\")\n  endif()\nendif()\n\nset_property(SOURCE src/utils.cc APPEND PROPERTY COMPILE_DEFINITIONS\n             CLANG_RESOURCE_DIRECTORY=R\"\\(${CLANG_RESOURCE_DIR}\\)\")\n\n### Includes\n\nif(USE_SYSTEM_RAPIDJSON)\n  set(RapidJSON_MIN_VERSION \"1.1.0\")\n  find_package(RapidJSON ${RapidJSON_MIN_VERSION} QUIET)\n  if(NOT DEFINED RapidJSON_INCLUDE_DIRS AND DEFINED RAPIDJSON_INCLUDE_DIRS)\n    set(RapidJSON_INCLUDE_DIRS \"${RAPIDJSON_INCLUDE_DIRS}\")\n  endif()\nendif()\nif(NOT RapidJSON_FOUND)\n  if(EXISTS \"${CMAKE_SOURCE_DIR}/third_party/rapidjson/include\")\n    message(STATUS \"Using local RapidJSON\")\n    set(RapidJSON_INCLUDE_DIRS third_party/rapidjson/include)\n  else()\n    message(STATUS \"Plase initialize rapidJSON git submodule as currently installed version is to old:\")\n    message(STATUS \"git submodule init && git submodule update\")\n    message(FATAL_ERROR \"RapidJSON version is likely too old. See https://github.com/MaskRay/ccls/issues/455\")\n  endif()\nendif()\n\ntarget_include_directories(ccls PRIVATE src)\n\nforeach(include_dir third_party\n    ${LLVM_INCLUDE_DIRS} ${CLANG_INCLUDE_DIRS} ${RapidJSON_INCLUDE_DIRS})\n  get_filename_component(include_dir_realpath ${include_dir} REALPATH)\n  # Don't add as SYSTEM if they are in CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES.\n  # It would reorder the system search paths and cause issues with libstdc++'s\n  # use of #include_next. See https://github.com/MaskRay/ccls/pull/417\n  if(NOT \"${include_dir_realpath}\" IN_LIST CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES)\n    target_include_directories(ccls SYSTEM PRIVATE ${include_dir})\n  endif()\nendforeach()\n\n### Install\n\ninstall(TARGETS ccls RUNTIME DESTINATION bin)\n\n### Sources\n\ntarget_sources(ccls PRIVATE third_party/siphash.cc)\n\ntarget_sources(ccls PRIVATE\n  src/clang_tu.cc\n  src/config.cc\n  src/filesystem.cc\n  src/fuzzy_match.cc\n  src/main.cc\n  src/indexer.cc\n  src/log.cc\n  src/lsp.cc\n  src/message_handler.cc\n  src/pipeline.cc\n  src/platform_posix.cc\n  src/platform_win.cc\n  src/position.cc\n  src/project.cc\n  src/query.cc\n  src/sema_manager.cc\n  src/serializer.cc\n  src/test.cc\n  src/utils.cc\n  src/working_files.cc\n)\n\ntarget_sources(ccls PRIVATE\n  src/messages/ccls_call.cc\n  src/messages/ccls_info.cc\n  src/messages/ccls_inheritance.cc\n  src/messages/ccls_member.cc\n  src/messages/ccls_navigate.cc\n  src/messages/ccls_reload.cc\n  src/messages/ccls_vars.cc\n  src/messages/initialize.cc\n  src/messages/textDocument_code.cc\n  src/messages/textDocument_completion.cc\n  src/messages/textDocument_definition.cc\n  src/messages/textDocument_did.cc\n  src/messages/textDocument_foldingRange.cc\n  src/messages/textDocument_formatting.cc\n  src/messages/textDocument_document.cc\n  src/messages/textDocument_hover.cc\n  src/messages/textDocument_references.cc\n  src/messages/textDocument_rename.cc\n  src/messages/textDocument_signatureHelp.cc\n  src/messages/workspace.cc\n)\n\n### Obtain CCLS version information from Git\n### This only happens when cmake is re-run!\n\nif(NOT CCLS_VERSION)\n  execute_process(COMMAND git describe --tag --long HEAD\n    OUTPUT_VARIABLE CCLS_VERSION\n    OUTPUT_STRIP_TRAILING_WHITESPACE\n    WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\")\n\n  if(NOT CCLS_VERSION)\n    set(CCLS_VERSION \"<unknown>\")\n  endif()\nendif()\n\nset_property(SOURCE src/main.cc APPEND PROPERTY\n             COMPILE_DEFINITIONS CCLS_VERSION=\\\"${CCLS_VERSION}\\\")\nset_property(SOURCE src/messages/initialize.cc APPEND PROPERTY\n             COMPILE_DEFINITIONS CCLS_VERSION=\\\"${CCLS_VERSION}\\\")\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.91796875,
          "content": "# ccls\n\n[![Telegram](https://img.shields.io/badge/telegram-@cclsp-blue.svg)](https://telegram.me/ccls_lsp)\n[![Gitter](https://img.shields.io/badge/gitter-ccls--project-blue.svg?logo=gitter-white)](https://gitter.im/ccls-project/ccls)\n\nccls, which originates from [cquery](https://github.com/cquery-project/cquery), is a C/C++/Objective-C language server.\n\n  * code completion (with both signature help and snippets)\n  * [definition](src/messages/textDocument_definition.cc)/[references](src/messages/textDocument_references.cc), and other cross references\n  * cross reference extensions: `$ccls/call` `$ccls/inheritance` `$ccls/member` `$ccls/vars` ...\n  * formatting\n  * hierarchies: [call (caller/callee) hierarchy](src/messages/ccls_call.cc), [inheritance (base/derived) hierarchy](src/messages/ccls_inheritance.cc), [member hierarchy](src/messages/ccls_member.cc)\n  * [symbol rename](src/messages/textDocument_rename.cc)\n  * [document symbols](src/messages/textDocument_document.cc) and approximate search of [workspace symbol](src/messages/workspace.cc)\n  * [hover information](src/messages/textDocument_hover.cc)\n  * diagnostics and code actions (clang FixIts)\n  * semantic highlighting and preprocessor skipped regions\n  * semantic navigation: `$ccls/navigate`\n\nIt has a global view of the code base and support a lot of cross reference features, see [wiki/FAQ](../../wiki/FAQ).\nIt starts indexing the whole project (including subprojects if exist) parallelly when you open the first file, while the main thread can serve requests before the indexing is complete.\nSaving files will incrementally update the index.\n\n# >>> [Getting started](../../wiki/Home) (CLICK HERE) <<<\n\n* [Build](../../wiki/Build)\n* [FAQ](../../wiki/FAQ)\n\nccls can index itself (~180MiB RSS when idle, noted on 2018-09-01), FreeBSD, glibc, Linux, LLVM (~1800MiB RSS), musl (~60MiB RSS), ... with decent memory footprint. See [wiki/Project-Setup](../../wiki/Project-Setup) for examples.\n"
        },
        {
          "name": "index_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}