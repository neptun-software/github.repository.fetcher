{
  "metadata": {
    "timestamp": 1736565338362,
    "page": 162,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "opentrack/opentrack",
      "stars": 3854,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.3935546875,
          "content": "﻿BasedOnStyle: LLVM\nAccessModifierOffset: -4\nAlignEscapedNewlines: Right\nAlignOperands: Align\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Never\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackParameters: false\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Allman\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit: 150\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nIndentCaseLabels: false\nIndentWidth: 4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nLanguage: Cpp\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nPenaltyBreakBeforeFirstCallParameter: 45\nPenaltyBreakComment: 40\nPenaltyBreakFirstLessLess: 50\nPenaltyBreakString: 35\nPenaltyExcessCharacter: 1\nPenaltyReturnTypeOnItsOwnLine: 20\nPenaltyBreakAssignment: 15\nPointerAlignment: Left\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nStandard: Latest\nTabWidth: 4\nUseTab: Never\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 4.15625,
          "content": "Checks: '\n*,\n-altera-*,\n-android-*,\n-clang-analyzer-osx.*,\n-fuchsia-*,\n-google-*,\n-llvm-*,\n-llvmlibc-*,\n-objc-*,\n-bugprone-assignment-in-if-condition,\n-bugprone-easily-swappable-parameters,\nbugprone-exception-escape,\n-bugprone-implicit-widening-of-multiplication-result,\n-bugprone-narrowing-conversions,\n-cert-*,\nllvm-namespace-comment,\nclang-analyzer-core.CallAndMessage,\nclang-analyzer-deadcode.DeadStores,\n-clang-diagnostic-nonportable-include-path,\n-cppcoreguidelines-avoid-c-arrays,\n-cppcoreguidelines-avoid-capture-default-when-capturing-this,\n-cppcoreguidelines-avoid-do-while,\n-cppcoreguidelines-avoid-goto,\n-cppcoreguidelines-avoid-magic-numbers,\n-cppcoreguidelines-c-copy-assignment-signature,\n-cppcoreguidelines-init-variables,\n-cppcoreguidelines-macro-usage,\n-cppcoreguidelines-narrowing-conversions,\n-cppcoreguidelines-non-private-member-variables-in-classes,\n-cppcoreguidelines-owning-memory,\n-cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n-cppcoreguidelines-pro-bounds-constant-array-index,\n-cppcoreguidelines-pro-bounds-pointer-arithmetic,\n-cppcoreguidelines-pro-type-const-cast,\n-cppcoreguidelines-pro-type-cstyle-cast,\n-cppcoreguidelines-pro-type-reinterpret-cast,\n-cppcoreguidelines-pro-type-static-cast-downcast,\n-cppcoreguidelines-pro-type-union-access,\n-cppcoreguidelines-pro-type-vararg,\n-cppcoreguidelines-special-member-functions,\n-google-readability-braces-around-statements,\n-google-readability-casting,\n-hicpp-avoid-c-arrays,\n-hicpp-avoid-goto,\n-hicpp-braces-around-statements,\n-hicpp-exception-baseclass,\n-hicpp-explicit-conversions,\n-hicpp-function-size,\n-hicpp-invalid-access-moved,\n-hicpp-member-init,\n-hicpp-move-const-arg,\n-hicpp-named-parameter,\n-hicpp-new-delete-operators,\n-hicpp-no-array-decay,\n-hicpp-signed-bitwise,\n-hicpp-special-member-functions,\n-hicpp-uppercase-literal-suffix,\n-hicpp-use-auto,\n-hicpp-use-equals-default,\n-hicpp-use-equals-delete,\n-hicpp-use-override,\n-hicpp-vararg,\n-misc-non-private-member-variables-in-classes,\n-misc-use-anonymous-namespace,\n-modernize-avoid-c-arrays,\n-modernize-loop-convert,\n-modernize-pass-by-value,\n-modernize-raw-string-literal,\n-modernize-redundant-void-arg,\n-modernize-return-braced-init-list,\n-modernize-use-auto,\nmodernize-use-equals-default,\n-modernize-use-nodiscard,\n-modernize-use-trailing-return-type,\n-modernize-use-using,\n-performance-no-int-to-ptr,\n-readability-braces-around-statements,\n-readability-else-after-return,\nreadability-function-cognitive-complexity,\n-readability-function-size,\n-readability-identifier-length,\n-readability-implicit-bool-conversion,\n-readability-inconsistent-declaration-parameter-name,\n-readability-isolate-declaration,\n-readability-magic-numbers,\nreadability-make-member-function-const,\n-readability-named-parameter,\n-readability-redundant-access-specifiers,\n-readability-simplify-boolean-expr,\n-readability-static-accessed-through-instance,\n-readability-uppercase-literal-suffix,\n-readability-use-anyofallof,\n-*-avoid-unconditional-preprocessor-if,\n-*-braces-around-statements,\n-*-incorrect-roundings,\n-*-uppercase-literal-suffix,\n-*-use-emplace,\n-*-use-std-print,\n-*-use-trailing-return-type,\n-*-vararg,\n'\n\nAnalyzeTemporaryDtors: true\n\nCheckOptions:\n  - key:      cert-dcl59-cpp.HeaderFileExtensions\n    value:    ',h,hpp'\n  - key:      cppcoreguidelines-pro-type-member-init.IgnoreArrays\n    value:    '1'\n  - key:      readability-simplify-boolean-expr.ChainedConditionalAssignment\n    value:    '1'\n  - key:      readability-simplify-boolean-expr.ChainedConditionalReturn\n    value:    '1'\n  - key:      readability-function-size.BranchThreshold\n    value:    '15'\n  - key:      readability-function-size.LineThreshold\n    value:    '120'\n  - key:      readability-function-size.NestingThreshold\n    value:    '6'\n  - key:      readability-function-size.ParameterThreshold\n    value:    '8'\n  - key:      readability-function-size.StatementThreshold\n    value:    '90'\n  - key:      readability-function-size.VariableThreshold\n    value:    '10'\n  - key:      readability-function-cognitive-complexity.IgnoreMacros\n    value:    '1'\n  - key:      readability-function-cognitive-complexity.DescribeBasicIncrements\n    value:    '1'\n  - key:      misc-const-correctness.AnalyzeValues\n    value:    '0'\n\n# vim: ft=yaml\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntab_width = 4\n\n[Makefile]\nindent_style = tab\n\n[*.{bat,cmd}]\nend_of_line = crlf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3134765625,
          "content": "*.[ch]pp text eol=lf\n*.[ch] text eol=lf\n*.[ch]xx text eol=lf\n*.cc text eol=lf\n*.rc text eol=lf\n\n*.git?* text eol=lf\n\n*.txt text eol=lf\n*.cmake text eol=lf\n\n*.md text eol=lf\n*.csv text eol=lf\n*.json text eol=lf\n\n*.ui text eol=lf\n*.qrc text eol=lf\n*.ts text eol=lf\n*.in text eol=lf\n\n*.cmd text eol=crlf\n*.bat text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1083984375,
          "content": "/build*/\n/build\n/build-*\n.DS_Store\n/sdk-paths-*.cmake\n/.idea/\n/.vs/\n/CMakeSettings.json\n.gtm/\n.vscode\n.history\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1220703125,
          "content": "[submodule \"video-ps3eye/ps3eye-driver\"]\n\tpath = video-ps3eye/ps3eye-driver\n\turl = https://github.com/opentrack/PS3EYEDriver\n"
        },
        {
          "name": "3rdparty-notices",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.462890625,
          "content": "The following people contributed parts of the codebase to the project, in\nchronological order:\n\n- Stanislaw Halik <<sthalik@misaki.pl>>\n- Chris Thompson <<mm0zct@gmail.com>>\n- Donovan Baarda <<abo@minkirri.apana.org.au>>\n- Xavier Hallade <<xavier.hallade@intel.com>>\n- Michael Welter <<mw.pub@welter-4d.de>>\n- Attila Csipa <<git@csipa.net>>\n- Wei Shuai <<cpuwolf@gmail.com>>\n- Stéphane Lenclud <<github@lenclud.com>>\n\nSee OPENTRACK-LICENSING.txt for licensing information.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.166015625,
          "content": "# This is free and unencumbered software released into the public domain.\n#\n# Anyone is free to copy, modify, publish, use, compile, sell, or\n# distribute this software, either in source code form or as a compiled\n# binary, for any purpose, commercial or non-commercial, and by any\n# means.\n#\n# In jurisdictions that recognize copyright laws, the author or authors\n# of this software dedicate any and all copyright interest in the\n# software to the public domain. We make this dedication for the benefit\n# of the public at large and to the detriment of our heirs and\n# successors. We intend this dedication to be an overt act of\n# relinquishment in perpetuity of all present and future rights to this\n# software under copyright law.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n\nset(CMAKE_DISABLE_IN_SOURCE_BUILD ON)\n\nset(CMAKE_C_LINKER_PREFERENCE_PROPAGATES OFF)\nset(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES ON)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake/\")\ninclude(opentrack-policy NO_POLICY_SCOPE)\n\ncmake_minimum_required(VERSION 3.13 FATAL_ERROR)\nproject(opentrack)\n\n# must be prior to CMakeDetermineCXXCompiler due to rpath\nif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT OR NOT CMAKE_INSTALL_PREFIX)\n    set(CMAKE_INSTALL_PREFIX \"${CMAKE_BINARY_DIR}/install\" CACHE PATH \"\" FORCE)\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE \"RELEASE\" CACHE STRING \"\" FORCE)\nendif()\n\nif(POLICY CMP0083)\n    cmake_policy(SET CMP0083 NEW)\n    include(CheckPIESupported)\n    check_pie_supported()\nendif()\n\ninclude(CMakeDetermineCCompiler)\ninclude(CMakeDetermineCXXCompiler)\n\nif(CMAKE_COMPILER_IS_GNUCXX AND NOT __otr_compile_flags_set)\n    set(__otr_compile_flags_set TRUE CACHE INTERNAL \"\" FORCE)\n    foreach(i C CXX)\n        set(CMAKE_${i}_FLAGS_RELEASE \"-O3 -march=native\" CACHE STRING \"\" FORCE)\n        set(CMAKE_${i}_FLAGS \"-ggdb -Wall -Wextra -Wpedantic\" CACHE STRING \"\" FORCE)\n    endforeach()\nendif()\n\ninclude(CMakeParseArguments)\n\ninclude(opentrack-load-user-settings)\ninclude(opentrack-mrproper)\n\nset_property(GLOBAL PROPERTY opentrack-all-modules \"\")\nset_property(GLOBAL PROPERTY opentrack-all-source-dirs \"\")\n\nset(opentrack_all-translations \"de_DE;nl_NL;ru_RU;stub;zh_CN\")\n\ninclude(opentrack-hier)\ninclude(opentrack-platform)\ninclude(opentrack-i18n)\ninclude(opentrack-boilerplate)\n\ninclude(opentrack-qt)\ninclude(opentrack-version)\ninclude(opentrack-variant)\n\nif(WIN32)\n    enable_language(RC)\nendif()\n\nadd_custom_target(mrproper\n    COMMAND \"${CMAKE_COMMAND}\" -P\n        \"${CMAKE_SOURCE_DIR}/cmake/mrproper.cmake\"\n    WORKING_DIRECTORY \"${CMAKE_BINARY_DIR}\")\n\nfunction(otr_add_subdirs)\n    otr_init_variant()\n    get_property(_globs GLOBAL PROPERTY opentrack-subprojects)\n    otr_add_target_dirs(_globbed ${_globs})\n\n    foreach(k ${_globbed})\n        get_filename_component(k \"${k}\" DIRECTORY)\n        # we want to compile macosx last so we can run proper install scripts\n        if (k MATCHES \"macosx$\")\n            set(o ${k})\n        else()\n            add_subdirectory(\"${k}\")\n        endif()\n    endforeach()\n    # Add macosx last\n    add_subdirectory(\"${o}\")\nendfunction()\n\notr_add_subdirs()\notr_merge_translations()\n\ninclude(opentrack-install)\n\nmessage(\"Install directory:\")\nmessage(\"   ${CMAKE_INSTALL_PREFIX}\")\nstring(TOUPPER \"${CMAKE_BUILD_TYPE}\" CMAKE_BUILD_TYPE)\nmessage(\"Compile flags:\")\n#foreach(j C CXX)\nforeach(j CXX)\n    foreach(i \"\" \"_${CMAKE_BUILD_TYPE}\")\n        message(\"   ${j}${i}: ${CMAKE_${j}_FLAGS${i}}\")\n    endforeach()\nendforeach()\n\nmessage(\"Link flags:\")\nforeach(j \"\" \"_${CMAKE_BUILD_TYPE}\")\n    #foreach(i EXE SHARED)\n    foreach(i SHARED)\n        message(\"   LINK_${i}${j}: ${CMAKE_${i}_LINKER_FLAGS${j}}\")\n    endforeach()\nendforeach()\n\nmessage(\"Static archive flags:\")\nforeach(k \"\" \"_${CMAKE_BUILD_TYPE}\")\n    message(\"   STATIC${k}: ${CMAKE_STATIC_LINKER_FLAGS${k}}\")\nendforeach()\nmessage(\"--\")\n"
        },
        {
          "name": "OPENTRACK-LICENSING.txt",
          "type": "blob",
          "size": 4.0859375,
          "content": "# Code licensing\n\nThe following modules are  licensed as part of the opentrack project. See\n3rdparty-notices/ for third-party code.\n\n# Lack of warranty\n\nUnless warranty terms are specified in particular licensing terms, the\nfollowing warranty disclaimer terms apply:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n# core, various modules\n\nCopyright (c) 2012-2016 Stanislaw Halik\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\n# Rift modules, Sixense Hydra module\n\nCopyright (c) 2013 mm0zct\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n# EWMA filter\n\nCopyright (c) 2014 Donovan Baarda <abo@minkirri.apana.org.au>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\n# Kalman filter\n\nCopyright (c) 2016 Michael Welter <mw.pub@welter-4d.de>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\n# Intel RealSense tracker\n\nCopyright (c) 2015, Intel Corporation\nAuthor: Xavier Hallade <xavier.hallade@intel.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\n# S2Bot tracker\n\nCopyright (c) 2017, Attila Csipa\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\n# Kinect Face Tracker & Easy Tracker\n\nCopyright (c) 2018-2019 Stéphane Lenclud\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n# EOF\n\n# vim: noai:ts=4:sw=4:tw=79\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.68359375,
          "content": "[<img src=\"https://github.com/opentrack/opentrack/actions/workflows/cmake.yml/badge.svg\">](https://github.com/opentrack/opentrack/actions/workflows/cmake.yml)\n\n## Intro\n\nopentrack is a program for tracking user's head rotation and transmitting it to flight simulation software and military-themed video games. Project home is located at <<https://github.com/opentrack/opentrack>>.\n\nLooking for **railway planning software**? <<https://opentrack.ch>> had the name `opentrack` first. Apologies for the long-standing naming conflict.\n\nFor the latest **downloads** visit <<https://github.com/opentrack/opentrack/releases>> Download an `.exe` installer or a `.7z` archive. Currently installers and portable versions for Windows are available for each release. It supports [USB stick truly \"portable\" installations](https://github.com/opentrack/opentrack/wiki/portable-mode-for-USB-sticks)\n\nPlease first refer to <<https://github.com/opentrack/opentrack/wiki>>\nfor [new user guide](https://github.com/opentrack/opentrack/wiki/Quick-Start-Guide-(WIP)), [frequent answers](https://github.com/opentrack/opentrack/wiki/common-issues), specific tracker/filter\ndocumentation. See also the [gameplay video](https://www.youtube.com/watch?v=XI73ul_FnBI) with opentrack set up.\n\n## Usage\n\n`opentrack` is an application dedicated to tracking user's head\nmovements and relaying the information to games and flight simulation\nsoftware.\n\n`opentrack` allows for output shaping, filtering, and operating with many input and output devices and protocols; the codebase runs Microsoft Windows, Apple OSX (currently unmaintained), and GNU/Linux.\n\nDon't be afraid to submit an **issue/feature request** if you have any problems! We're a friendly bunch.\n\n## Tracking input\n\n- PointTracker by Patrick Ruoff, FreeTrack-like light points\n- Oculus Rift (Windows only)\n- Paper [marker](https://github.com/opentrack/opentrack/wiki/Aruco-tracker) via the Aruco<sup>[[1](https://github.com/opentrack/aruco)]</sup> library\n- Razer Hydra\n- Relaying via UDP from a different computer\n- Relaying UDP via the FreePIE<sup>[[1](https://andersmalmgren.github.io/FreePIE/)]</sup> Android [apps](https://github.com/opentrack/opentrack/tree/master/contrib/freepie-udp)\n- Joystick analog axes (Windows)\n- Windows Phone [tracker](https://github.com/ZanderAdam/OpenTrack.WindowsPhone/wiki) over opentrack UDP protocol\n- Arduino with custom Hatire firmware\n- Intel RealSense 3D camera (Windows)\n- BBC micro:bit, LEGO, sensortag support via Smalltalk<sup>[(1)](https://en.wikipedia.org/wiki/Smalltalk)[(2)](https://en.wikipedia.org/wiki/Alan_Kay)</sup>\n  [S2Bot](https://www.picaxe.com/Teaching/Other-Software/Scratch-Helper-Apps/)\n- Wiimote (Windows)\n- NeuralNet face tracker\n- Eyeware Beam<sup>[[1](https://beam.eyeware.tech/)]</sup>\n- Tobii eye tracker\n\n## Output protocols\n\n- SimConnect for newer Microsoft Flight Simulator (Windows)\n- freetrack implementation (Windows)\n- Relaying UDP to another computer\n- Virtual joystick output (Windows, Linux, OSX)\n- Wine freetrack glue protocol (Linux, OSX)\n- X-Plane plugin (Linux; uses the Wine output option)\n- Tablet-like mouse output (Windows)\n- FlightGear\n- FSUIPC for Microsoft Flight Simulator 2002/2004 (Windows)\n- SteamVR through a bridge (Windows; see <<https://github.com/r57zone/OpenVR-OpenTrack>> by @r57zone)\n\n## Credits, in chronological order\n\n- Stanisław Halik (maintainer)\n- Wim Vriend -- author of [FaceTrackNoIR](https://facetracknoir.sourceforge.net/) that served as the initial codebase for `opentrack`. While the  code was almost entirely rewritten, we still hold on to many of `FaceTrackNoIR`'s ideas.\n- Chris Thompson (aka mm0zct, Rift and Razer Hydra author and maintainer)\n- Patrick Ruoff (PT tracker author)\n- Xavier Hallade (Intel RealSense tracker author and maintainer)\n- furax49 (hatire tracker author)\n- Michael Welter (contributor)\n- Alexander Orokhovatskiy (Russian translation; profile repository maintenance; providing hardware; translating reports from the Russian community)\n- Attila Csipa (Micro:Bit author)\n- Eike \"e4z9\" (OSX joystick output driver)\n- Wei Shuai (Wiimote tracker)\n- Stéphane Lenclud (Kinect Face Tracker, Easy Tracker)\n- GO63-samara (Hamilton Filter, Pose-widget improvement)\n- Davide Mameli (Eyeware Beam tracker)\n- Khoa Nguyen (Tobii eye tracker)\n\n## Thanks\n\n- uglyDwarf (of [linuxtrack](https://github.com/uglyDwarf/linuxtrack/))\n- Andrzej Czarnowski (FreePIE tracker and\n  [Google Cardboard](https://github.com/opentrack/opentrack/wiki/VR-HMD-goggles-setup-----google-cardboard,-colorcross,-opendive)\n  assistance, testing)\n- Wim Vriend (original codebase author and maintainer)\n- Ryan Spicer (OSX tester, contributor)\n- Ries van Twisk (OSX tester, OSX Build Fixes, contributor)\n- Donovan Baarda (filtering/control theory expert)\n- Mathijs Groothuis (@MathijsG, dozens of bugs and other issues reported; NL translation)\n- The Russian community from the [IL-2 Sturmovik forums](https://forum.il2sturmovik.ru/) (reporting bugs, requesting important features)\n- OpenCV authors and maintainers <<https://github.com/opencv/opencv/>>.\n\n## Contributing\n\nSee guides for writing new modules\\[[1](https://github.com/opentrack/opentrack/blob/master/api/plugin-api.hpp)\\]\\[[2](https://github.com/opentrack/opentrack/blob/master/tracker-test/test.h)\\], and for [working with core code](https://github.com/opentrack/opentrack/wiki/Hacking-opentrack).\n\nTo edit the wiki, send pull requests to the [opentrack/wiki](https://github.com/opentrack/wiki) repository. The [user-facing wiki](https://github.com/opentrack/opentrack/wiki) will automatically update itself once the commit is merged.\n\n## License and warranty\n\nAlmost all code is licensed under the [ISC license](https://en.wikipedia.org/wiki/ISC_license). There are very few proprietary dependencies. There is no copyleft code. See individual files for licensing and authorship information.\n\nSee [WARRANTY.txt](WARRANTY.txt) for applying warranty terms (that is, disclaiming possible pre-existing warranty) that are in force unless the software author specifies their own warranty terms. In short, we disclaim all possible warranty and aren't responsible for any possible damage or losses.\n\nThe code is held to a high-quality standard and written with utmost care; consider this a promise without legal value. Despite doing the best we can not to injure users' equipment, software developers don't want to be dragged to courts for imagined or real issues. Disclaiming warranty is a standard practice in the field, even for expensive software like operating systems.\n\n## Building opentrack from source\n\nOn Windows, use either mingw-w64 or MS Visual Studio 2015 Update 3/newer. On other platforms use GNU or LLVM. Refer to [Visual C++ 2015 build instructions](https://github.com/opentrack/opentrack/wiki/Building-under-MS-Visual-C---2017-and-later).\n"
        },
        {
          "name": "WARRANTY.txt",
          "type": "blob",
          "size": 0.4501953125,
          "content": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib-noinst",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverity",
          "type": "tree",
          "content": null
        },
        {
          "name": "csv",
          "type": "tree",
          "content": null
        },
        {
          "name": "cv",
          "type": "tree",
          "content": null
        },
        {
          "name": "dinput",
          "type": "tree",
          "content": null
        },
        {
          "name": "filter-accela-hamilton",
          "type": "tree",
          "content": null
        },
        {
          "name": "filter-accela",
          "type": "tree",
          "content": null
        },
        {
          "name": "filter-ewma2",
          "type": "tree",
          "content": null
        },
        {
          "name": "filter-hamilton",
          "type": "tree",
          "content": null
        },
        {
          "name": "filter-nm",
          "type": "tree",
          "content": null
        },
        {
          "name": "freetrackclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "logic",
          "type": "tree",
          "content": null
        },
        {
          "name": "macosx",
          "type": "tree",
          "content": null
        },
        {
          "name": "migration",
          "type": "tree",
          "content": null
        },
        {
          "name": "opentrack",
          "type": "tree",
          "content": null
        },
        {
          "name": "options",
          "type": "tree",
          "content": null
        },
        {
          "name": "pose-widget",
          "type": "tree",
          "content": null
        },
        {
          "name": "presets",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-flightgear",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-fsuipc",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-ft",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-iokit-foohid",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-libevdev",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-mouse",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-osc",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-simconnect",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-udp",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-vjoystick",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto-wine",
          "type": "tree",
          "content": null
        },
        {
          "name": "qxt-mini",
          "type": "tree",
          "content": null
        },
        {
          "name": "redist",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk-paths-runner@GNU-Linux.cmake",
          "type": "blob",
          "size": 0.1279296875,
          "content": "set(SDK_WINE ON CACHE BOOL \"\" FORCE)\nset(OPENTRACK_WINE_ARCH -m64 CACHE STRING \"\" FORCE)\nset(ENV{PATH} \"/usr/lib/wine:$ENV{PATH}\")\n"
        },
        {
          "name": "sdk-paths-runneradmin@MSVC-windows.cmake",
          "type": "blob",
          "size": 1.138671875,
          "content": "#\n# qtbase configure line for safekeeping\n#\n\n# \"../configure\" -prefix d:\\dev\\qt-5.10.0 -no-ico -no-gif               \\\n# -opengl desktop -no-fontconfig -no-harfbuzz                           \\\n# -nomake tests -no-mp -release -opensource -shared -confirm-license    \\\n# -no-freetype -force-debug-info -separate-debug-info                   \\\n# -make-tool jom -platform win32-msvc -static-runtime\n\n# remember to change -MD to -MT in mkspecs/\n# also add CFLAGS -Zi and LFLAGS -DEBUG\n\nset(__depdir \"${CMAKE_CURRENT_LIST_DIR}/opentrack-depends\")\n\nfunction(setq name value)\n    set(\"${name}\" \"${__depdir}/${value}\" CACHE INTERNAL \"\" FORCE)\nendfunction()\n\nset(opentrack_install-debug-info FALSE CACHE INTERNAL \"\" FORCE)\n\n#setq(OpenCV_DIR \"../opencv\")\n#setq(SDK_ARUCO_LIBPATH \"../aruco\")\n#setq(SDK_FSUIPC \"fsuipc\")\n#setq(SDK_HYDRA \"SixenseSDK\")\n#setq(SDK_KINECT20 \"../Kinect-v2.0\")\n#setq(SDK_LIBUSB \"libusb-msvc-x86\")\n#setq(SDK_REALSENSE \"../RSSDK-R2\")\n#setq(SDK_RIFT_140 \"ovr_sdk_win_23.0.0/LibOVR\")\n#setq(SDK_VALVE_STEAMVR \"steamvr\")\n#setq(SDK_VJOYSTICK \"vjoystick\")\n#setq(ONNXRuntime_DIR \"../onnxruntime-1.12.1\")\n#setq(SDK_TRACKHAT_SENSOR \"../trackhat-c-library-driver\")\n"
        },
        {
          "name": "sdk-paths-sthalik@Clang-Linux.cmake",
          "type": "blob",
          "size": 1.81640625,
          "content": "set(opentrack_install-debug-info TRUE CACHE INTERNAL \"\" FORCE)\n\nadd_compile_options(\n    -ferror-limit=1\n    -Weverything -Werror=implicit-function-declaration\n    -Werror\n    -Wno-c++11-compat -Wno-c++14-compat -Wno-c++98-compat-pedantic\n    -Wno-shadow -Wno-old-style-cast\n    -Wno-return-std-move-in-c++11 -Wno-exit-time-destructors -Wno-switch-enum\n    -Wno-global-constructors -Wno-missing-prototypes\n    -Wno-covered-switch-default -Wno-zero-length-array\n    -Wno-weak-vtables -Wno-weak-template-vtables\n    -Wno-padded -Wno-shadow-field -Wno-shorten-64-to-32\n    -Wno-sign-conversion\n    -Wno-extra-semi-stmt # for qt moc\n    -Wno-implicit-int-float-conversion\n    -Wno-alloca)\n\nset(base-flags \"-Wall -Wextra -Wpedantic\")\n\nset(CMAKE_LINKER \"ld.lld\")\nset(CMAKE_CXX_COMPILER \"clang++\")\nset(CMAKE_C_COMPILER \"clang\")\n\nset(CMAKE_C_FLAGS \"-std=gnu11 ${base-flags} -ggdb ${CMAKE_C_FLAGS}\")\nset(CMAKE_CXX_FLAGS \"-std=c++17 ${base-flags} -ggdb ${CMAKE_CXX_FLAGS}\")\n\nset(opt-flags \"-O3 -ffast-math -march=native -flto=thin\")\n\nset(CMAKE_BUILD_TYPE \"RELEASE\")\nset(CMAKE_CXX_FLAGS_RELEASE \"${opt-flags} ${CMAKE_CXX_FLAGS_RELEASE}\")\nset(CMAKE_C_FLAGS_RELEASE \"${opt-flags} ${CMAKE_C_FLAGS_RELEASE}\")\n\nset(CMAKE_CXX_FLAGS_DEBUG \"-ggdb ${CMAKE_CXX_FLAGS_DEBUG}\")\nset(CMAKE_C_FLAGS_DEBUG \"-ggdb ${CMAKE_C_FLAGS_DEBUG}\")\n\nset(CMAKE_C_FLAGS \"-ggdb\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_C_FLAGS}\")\n\nadd_compile_options(\"-emit-llvm\")\nadd_link_options(\"-fuse-ld=lld\")\n\nforeach(x EXE MODULE SHARED)\n    set(CMAKE_${x}_LINKER_FLAGS \"${CMAKE_${x}_LINKER_FLAGS}\")\nendforeach()\n\nfunction(set_sdk var path)\n    set(${var} \"$ENV{HOME}/dev/opentrack-depends/${path}\" CACHE INTERNAL \"\" FORCE)\nendfunction()\n\nset_sdk(SDK_ARUCO_LIBPATH \"aruco/build/src/libaruco.a\")\nset_sdk(SDK_HYDRA \"SixenseSDK\")\nset_sdk(SDK_VALVE_STEAMVR \"steamvr\")\nset_sdk(SDK_WINE TRUE)\nset_sdk(SDK_XPLANE \"X-Plane-SDK\")\n"
        },
        {
          "name": "sdk-paths-sthalik@Clang-windows.cmake",
          "type": "blob",
          "size": 1.955078125,
          "content": "#\n# qtbase configure line for safekeeping\n#\n\n# \"../configure\" -prefix d:\\dev\\qt-5.10.0 -no-ico -no-gif -no-libjpeg   \\\n# -opengl desktop -no-angle -no-fontconfig -no-harfbuzz                 \\\n# -nomake tests -no-mp -release -opensource -shared -confirm-license    \\\n# -no-freetype -force-debug-fo -make-tool make.exe -platform win32-g++\n\nset(__depdir \"${CMAKE_CURRENT_LIST_DIR}/../opentrack-depends\")\n\nfunction(setq name value)\n    set(\"${name}\" \"${__depdir}/${value}\" CACHE PATH \"\" FORCE)\nendfunction()\n\nset(opentrack_install-debug-info TRUE CACHE INTERNAL \"\" FORCE)\n\n#setq(OpenCV_DIR \"opencv/build-mingw-64\")\nsetq(SDK_ARUCO_LIBPATH \"aruco/build-mingw-w64/src/libaruco.a\")\n\nsetq(SDK_FSUIPC \"fsuipc\")\nsetq(SDK_HYDRA \"SixenseSDK\")\n\nsetq(SDK_RIFT_140 \"LibOVR-140/build-mingw-w64\")\n\nsetq(SDK_VALVE_STEAMVR \"steamvr\")\nsetq(SDK_TOBII_EYEX \"Tobii-EyeX\")\nsetq(SDK_VJOYSTICK \"vjoystick\")\n\nsetq(SDK_REALSENSE \"RSSDK-R2\")\n\n# WARNING: this is utter experimental nonsense\nset(_cxxflags\n    -Weverything\n\n    -Wno-global-constructors\n    -Wno-exit-time-destructors\n    -Wno-deprecated\n    -Wno-self-assign-overloaded\n    -Wno-double-promotion\n    -Wno-c++98-compat-pedantic\n    -Wno-old-style-cast\n    -Wno-shadow\n    -Wno-sign-conversion\n    -Wno-used-but-marked-unused\n    -Wno-covered-switch-default\n    -Wno-missing-prototypes\n    -Wno-padded\n    -Wno-switch-enum\n\n    -Werror\n    -Werror=inconsistent-missing-destructor-override\n    #-Wno-error=padded\n    -fdiagnostics-color=always\n\n    -fno-exceptions -fno-rtti # get rid of evil\n)\nset(base-cxxflags \"\")\nforeach(k ${_cxxflags})\n    set(base-cxxflags \"${base-cxxflags} ${k}\")\nendforeach()\n\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${base-cxxflags}\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${base-cxxflags}\")\n\nset(CMAKE_CXX_FLAGS_RELEASE \"-ffast-math ${CMAKE_CXX_FLAGS_RELEASE}\")\nset(CMAKE_C_FLAGS_RELEASE \"-ffast-math ${CMAKE_C_FLAGS_RELEASE}\")\n\nset(CMAKE_CXX_FLAGS_DEBUG \"-ggdb ${CMAKE_CXX_FLAGS_DEBUG}\")\nset(CMAKE_C_FLAGS_DEBUG \"-ggdb ${CMAKE_C_FLAGS_DEBUG}\")\n"
        },
        {
          "name": "sdk-paths-sthalik@GNU-windows.cmake",
          "type": "blob",
          "size": 1.3271484375,
          "content": "#\n# qtbase configure line for safekeeping\n#\n\n# \"../configure\" -prefix d:\\dev\\qt-5.10.0 -no-ico -no-gif -no-libjpeg   \\\n# -opengl desktop -no-angle -no-fontconfig -no-harfbuzz                 \\\n# -nomake tests -no-mp -release -opensource -shared -confirm-license    \\\n# -no-freetype -force-debug-fo -make-tool make.exe -platform win32-g++\n\nset(__depdir \"${CMAKE_CURRENT_LIST_DIR}/../opentrack-depends\")\n\nfunction(setq name value)\n    set(\"${name}\" \"${__depdir}/${value}\" CACHE PATH \"\" FORCE)\nendfunction()\n\nset(opentrack_install-debug-info TRUE CACHE INTERNAL \"\" FORCE)\n\n#setq(OpenCV_DIR \"opencv/build-mingw-64\")\nsetq(SDK_ARUCO_LIBPATH \"aruco/build-mingw-w64/src/libaruco.a\")\n\nsetq(SDK_FSUIPC \"fsuipc\")\nsetq(SDK_HYDRA \"SixenseSDK\")\n\nsetq(SDK_RIFT_140 \"LibOVR-140/build-mingw-w64\")\n\nsetq(SDK_VALVE_STEAMVR \"steamvr\")\nsetq(SDK_TOBII_EYEX \"Tobii-EyeX\")\nsetq(SDK_VJOYSTICK \"vjoystick\")\n\nsetq(SDK_REALSENSE \"RSSDK-R2\")\n\nset(base-flags \"-Wall -Wextra -Wpedantic\")\nset(CMAKE_C_FLAGS \"-std=c11 ${base-flags} -ggdb ${CMAKE_C_FLAGS}\")\nset(CMAKE_CXX_FLAGS \"-std=c++17 ${base-flags} -ggdb ${CMAKE_CXX_FLAGS}\")\n\nset(CMAKE_CXX_FLAGS_RELEASE \"-O3 -ffast-math ${CMAKE_CXX_FLAGS_RELEASE}\")\nset(CMAKE_C_FLAGS_RELEASE \"-O3 -ffast-math ${CMAKE_C_FLAGS_RELEASE}\")\n\nset(CMAKE_CXX_FLAGS_DEBUG \"-ggdb ${CMAKE_CXX_FLAGS_DEBUG}\")\nset(CMAKE_C_FLAGS_DEBUG \"-ggdb ${CMAKE_C_FLAGS_DEBUG}\")\n"
        },
        {
          "name": "sdk-paths-sthalik@MSVC-windows.cmake",
          "type": "blob",
          "size": 2.17578125,
          "content": "#\n# qtbase configure line for safekeeping\n#\n\n# \"../configure\" -prefix d:\\dev\\qt-5.10.0 -no-ico -no-gif               \\\n# -opengl desktop -no-fontconfig -no-harfbuzz                           \\\n# -nomake tests -no-mp -release -opensource -shared -confirm-license    \\\n# -no-freetype -force-debug-info -separate-debug-info                   \\\n# -make-tool jom -platform win32-msvc -static-runtime\n\n# remember to change -MD to -MT in mkspecs/\n# also add CFLAGS -Zi and LFLAGS -DEBUG\n\nset(__depdir \"${CMAKE_CURRENT_LIST_DIR}/../opentrack-depends\")\n\nfunction(setq name value)\n    set(\"${name}\" \"${__depdir}/${value}\" CACHE INTERNAL \"\" FORCE)\nendfunction()\n\nset(opentrack_install-debug-info TRUE CACHE INTERNAL \"\" FORCE)\n\nsetq(SDK_RIFT_140 \"ovr_sdk_win_23.0.0/LibOVR\")\nsetq(SDK_KINECT20 \"nonfree/Kinect-v2.0\")\nsetq(SDK_VJOYSTICK \"vjoystick\")\nsetq(SDK_PS3EYEDRIVER \"PS3EYEDriver\")\nsetq(SDK_REALSENSE \"nonfree/RSSDK-R2\")\nsetq(SDK_VALVE_STEAMVR \"steamvr\")\nsetq(SDK_FSUIPC \"fsuipc\")\nsetq(SDK_HYDRA \"SixenseSDK\")\nsetq(SDK_EYEWARE_BEAM \"eyeware-beam-sdk\")\nsetq(SDK_TOBII \"nonfree/tobii.streamengine.native.2.2.2.363\")\nif(CMAKE_SIZEOF_VOID_P EQUAL 8)\nsetq(Qt5_DIR \"../qt-5.15-kde-amd64/lib/cmake/Qt5\")\nsetq(OpenCV_DIR \"opencv/build-amd64/install\")\nsetq(SDK_ARUCO_LIBPATH \"aruco/build-amd64/src/aruco.lib\")\nsetq(SDK_LIBUSB \"libusb-msvc-amd64\")\nsetq(ONNXRuntime_DIR \"onnxruntime-1.18.0-amd64\")\nsetq(SDK_TRACKHAT_SENSOR \"trackhat-c-library-driver/build-amd64/install\")\nsetq(SDK_OSCPACK \"oscpack/build-amd64\")\nelseif(CMAKE_SIZEOF_VOID_P EQUAL 4)\nsetq(Qt5_DIR \"../qt/qt-5.15-kde-msvc-32/lib/cmake/Qt5\")\nsetq(OpenCV_DIR \"opencv/build/install\")\nsetq(SDK_ARUCO_LIBPATH \"aruco/build/src/aruco.lib\")\nsetq(SDK_LIBUSB \"libusb-msvc-x86\")\nsetq(ONNXRuntime_DIR \"onnxruntime-1.18.0-noavx\")\nsetq(SDK_TRACKHAT_SENSOR \"trackhat-c-library-driver/build/install\")\nsetq(SDK_OSCPACK \"oscpack/build\")\nelse()\n    message(FATAL_ERROR \"unknown word size ${CMAKE_SIZEOF_VOID_P}\")\nendif()\n\nset(CMAKE_ASM_NASM_COMPILER nasm.exe CACHE FILEPATH \"\" FORCE)\n\nset(Qt5Core_DIR \"${Qt5_DIR}Core\" CACHE PATH \"\" FORCE)\nset(Qt5Gui_DIR \"${Qt5_DIR}Gui\" CACHE PATH \"\" FORCE)\n\nif(CMAKE_GENERATOR STREQUAL \"NMake Makefiles\")\n    set(CMAKE_MAKE_PROGRAM \"jom\" CACHE STRING \"\" FORCE)\nendif()\n"
        },
        {
          "name": "settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "spline",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-aruco",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-easy",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-eyeware-beam",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-freepie-udp",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-fusion",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-hatire",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-hydra",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-joystick",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-kinect-face",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-linux-joystick",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-neuralnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-pt",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-rift-140",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-rs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-s2bot",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-steamvr",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-tobii",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-trackhat",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-udp",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracker-wii",
          "type": "tree",
          "content": null
        },
        {
          "name": "variant",
          "type": "tree",
          "content": null
        },
        {
          "name": "video-opencv",
          "type": "tree",
          "content": null
        },
        {
          "name": "video-ps3eye",
          "type": "tree",
          "content": null
        },
        {
          "name": "video",
          "type": "tree",
          "content": null
        },
        {
          "name": "x-plane-plugin",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}