{
  "metadata": {
    "timestamp": 1736565634703,
    "page": 519,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "verilator/verilator",
      "stars": 2658,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.6455078125,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: DontAlign\nAlignOperands:   true\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     99\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - Q_FOREACH\n  - BOOST_FOREACH\n\n# Include grouping/sorting\nSortIncludes:    true\nIncludeBlocks:   Regroup\nIncludeCategories:\n  - Regex:           '\"V3Pch.*\\.h\"'\n    Priority:        -2 # Precompiled headers\n  - Regex:           '\"(config_build|verilated_config|verilatedos)\\.h\"'\n    Priority:        -1 # Sepecials before main header\n  - Regex:           '(<|\")verilated.*'\n    Priority:        1 # Runtime headers\n  - Regex:           '\"V3.*__gen.*\\.h\"'\n    Priority:        3 # Generated internal headers separately\n  - Regex:           '\"V3.*\"'\n    Priority:        2 # Internal header\n  - Regex:           '\".*\"'\n    Priority:        4 # Other non-system headers\n  - Regex:           '<[[:alnum:]_.]+>'\n    Priority:        5 # Simple system headers next\n  - Regex:           '<.*>'\n    Priority:        6 # Other system headers next\nIncludeIsMainRegex: '$'\n\nIndentCaseLabels: false\nIndentPPDirectives: None\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Left\nReflowComments:  true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInLineCommentPrefix:\n  Minimum: 0\n  Maximum: -1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.5322265625,
          "content": "Checks:          '*,-hicpp*,-android-cloexec-fopen,-cert-dcl50-cpp,-cert-env33-c,-cert-err34-c,-cert-err58-cpp,-clang-analyzer-core.UndefinedBinaryOperatorResult,-clang-analyzer-security*,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-no-malloc,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-const-cast,-cppcoreguidelines-pro-type-reinterpret-cast,-cppcoreguidelines-pro-type-static-cast-downcast,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-special-member-functions,-fuchsia-*,-google-default-arguments,-google-readability-todo,-google-runtime-references,-llvm-header-guard,-llvm-include-order,-misc-string-integer-assignment,-misc-string-literal-with-embedded-nul,-modernize-use-auto,-modernize-use-trailing-return-type,-readability-braces-around-statements,-readability-container-size-empty,-readability-delete-null-pointer,-readability-else-after-return,-readability-implicit-bool-conversion,-readability-named-parameter,-readability-static-accessed-through-instance,-llvmlibc-*,-altera-*'\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nFormatStyle:     none\nCheckOptions:\n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '2'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n"
        },
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.109375,
          "content": "---\nexclude_paths:\n  - \".github/**\"\n  - \"ci/build_verilator.sh\"\n  - \"include/vltstd/**\"\n  - \"nodist/fastcov.py\"\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.181640625,
          "content": "*.v linguist-language=SystemVerilog\n*.vh linguist-language=SystemVerilog\n*.sv linguist-language=SystemVerilog\nChanges linguist-language=reStructuredText\nnodist linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5703125,
          "content": "\\#*\n.#*\n.gdb_history\n.nfs*\n*~\n*.tidy\n*.old\n*.gz\n*.gz.uu\n*.html\n*.info\n*.log\n*.1\n.*.swp\n*.tmp\n*.tex\n*.pdf\n/Makefile\n/.ccache\n/artifact/\nREADME\nTAGS\nautom4te.cache\ncompile_commands.json\nconfig.cache\nconfig.status\nconfigure\ndddrun*\ndoxygen-doc\ngdbrun*\ngmon.out\ninternals.txt\nncverilog.history\nnohup.out\nverilator-config-version.cmake\nverilator-config.cmake\nverilator.pc\nverilator.txt\nverilator_bin*\nverilator_coverage_bin*\n**/__pycache__/*\n**/_build/*\n**/obj_dir/*\n/.vscode/\n/.idea/\n/cmake-build-*/\n/test_regress/snapshot/\nxmverilog.*\nxrun.history\n\n# Normal CMake build directory\n/build\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.234375,
          "content": "---\n- id: verilator\n  name: verilator-lint\n  description: Runs verilator Docker image to lint (System) Verilog designs\n  args: [--lint-only]\n  language: docker_image\n  entry: verilator/verilator:latest\n  types_or: [verilog, system-verilog]\n"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.0849609375,
          "content": "[style]\nbased_on_style = pep8\ncolumn_limit = 99\n#split_before_arithmetic_operator=True\n"
        },
        {
          "name": "Artistic",
          "type": "blob",
          "size": 8.8603515625,
          "content": "Artistic License 2.0\n\nCopyright (c) 2000-2006, The Perl Foundation.\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nPreamble\n********\n\nThis license establishes the terms under which a given free software\nPackage may be copied, modified, distributed, and/or redistributed.  The\nintent is that the Copyright Holder maintains some artistic control over\nthe development of that Package while still keeping the Package\navailable as open source and free software.\n\nYou are always permitted to make arrangements wholly outside of this\nlicense directly with the Copyright Holder of a given Package.  If the\nterms of this license do not permit the full use that you propose to\nmake of the Package, you should contact the Copyright Holder and seek a\ndifferent licensing arrangement.\n\nDefinitions\n***********\n\n\"Copyright Holder\" means the individual(s) or organization(s) named in\nthe copyright notice for the entire Package.\n\n\"Contributor\" means any party that has contributed code or other\nmaterial to the Package, in accordance with the Copyright Holder's\nprocedures.\n\n\"You\" and \"your\" means any person who would like to copy, distribute, or\nmodify the Package.\n\n\"Package\" means the collection of files distributed by the Copyright\nHolder, and derivatives of that collection and/or of those files.  A\ngiven Package may consist of either the Standard Version, or a Modified\nVersion.\n\n\"Distribute\" means providing a copy of the Package or making it\naccessible to anyone else, or in the case of a company or organization,\nto others outside of your company or organization.\n\n\"Distributor Fee\" means any fee that you charge for Distributing this\nPackage or providing support for this Package to another party.  It does\nnot mean licensing fees.\n\n\"Standard Version\" refers to the Package if it has not been modified, or\nhas been modified only in ways explicitly requested by the Copyright\nHolder.\n\n\"Modified Version\" means the Package, if it has been changed, and such\nchanges were not explicitly requested by the Copyright Holder.\n\n\"Original License\" means this Artistic License as Distributed with the\nStandard Version of the Package, in its current version or as it may be\nmodified by The Perl Foundation in the future.\n\n\"Source\" form means the source code, documentation source, and\nconfiguration files for the Package.\n\n\"Compiled\" form means the compiled bytecode, object code, binary, or any\nother form resulting from mechanical transformation or translation of\nthe Source form.\n\nPermission for Use and Modification Without Distribution\n********************************************************\n\n(1) You are permitted to use the Standard Version and create and use\nModified Versions for any purpose without restriction, provided that you\ndo not Distribute the Modified Version.\n\nPermissions for Redistribution of the Standard Version\n******************************************************\n\n(2) You may Distribute verbatim copies of the Source form of the\nStandard Version of this Package in any medium without restriction,\neither gratis or for a Distributor Fee, provided that you duplicate all\nof the original copyright notices and associated disclaimers.  At your\ndiscretion, such verbatim copies may or may not include a Compiled form\nof the Package.\n\n(3) You may apply any bug fixes, portability changes, and other\nmodifications made available from the Copyright Holder.  The resulting\nPackage will still be considered the Standard Version, and as such will\nbe subject to the Original License.\n\nDistribution of Modified Versions of the Package as Source\n**********************************************************\n\n(4) You may Distribute your Modified Version as Source (either gratis or\nfor a Distributor Fee, and with or without a Compiled form of the\nModified Version) provided that you clearly document how it differs from\nthe Standard Version, including, but not limited to, documenting any\nnon-standard features, executables, or modules, and provided that you do\nat least ONE of the following:\n\n(a) make the Modified Version available to the Copyright Holder of the\nStandard Version, under the Original License, so that the Copyright\nHolder may include your modifications in the Standard Version.\n\n(b) ensure that installation of your Modified Version does not prevent\nthe user installing or running the Standard Version.  In addition, the\nModified Version must bear a name that is different from the name of the\nStandard Version.\n\n(c) allow anyone who receives a copy of the Modified Version to make the\nSource form of the Modified Version available to others under\n\n(i) the Original License or\n\n(ii) a license that permits the licensee to freely copy, modify and\nredistribute the Modified Version using the same licensing terms that\napply to the copy that the licensee received, and requires that the\nSource form of the Modified Version, and of any works derived from it,\nbe made freely available in that license fees are prohibited but\nDistributor Fees are allowed.\n\nDistribution of Compiled Forms of the Standard Version or Modified\n******************************************************************\nVersions without the Source\n***************************\n\n(5) You may Distribute Compiled forms of the Standard Version without\nthe Source, provided that you include complete instructions on how to\nget the Source of the Standard Version.  Such instructions must be valid\nat the time of your distribution.  If these instructions, at any time\nwhile you are carrying out such distribution, become invalid, you must\nprovide new instructions on demand or cease further distribution.  If\nyou provide valid instructions or cease distribution within thirty days\nafter you become aware that the instructions are invalid, then you do\nnot forfeit any of your rights under this license.\n\n(6) You may Distribute a Modified Version in Compiled form without the\nSource, provided that you comply with Section 4 with respect to the\nSource of the Modified Version.\n\nAggregating or Linking the Package\n**********************************\n\n(7) You may aggregate the Package (either the Standard Version or\nModified Version) with other packages and Distribute the resulting\naggregation provided that you do not charge a licensing fee for the\nPackage.  Distributor Fees are permitted, and licensing fees for other\ncomponents in the aggregation are permitted.  The terms of this license\napply to the use and Distribution of the Standard or Modified Versions\nas included in the aggregation.\n\n(8) You are permitted to link Modified and Standard Versions with other\nworks, to embed the Package in a larger work of your own, or to build\nstand-alone binary or bytecode versions of applications that include the\nPackage, and Distribute the result without restriction, provided the\nresult does not expose a direct interface to the Package.\n\nItems That are Not Considered Part of a Modified Version\n********************************************************\n\n(9) Works (including, but not limited to, modules and scripts) that\nmerely extend or make use of the Package, do not, by themselves, cause\nthe Package to be a Modified Version.  In addition, such works are not\nconsidered parts of the Package itself, and are not subject to the terms\nof this license.\n\nGeneral Provisions\n******************\n\n(10) Any use, modification, and distribution of the Standard or Modified\nVersions is governed by this Artistic License.  By using, modifying or\ndistributing the Package, you accept this license.  Do not use, modify,\nor distribute the Package, if you do not accept this license.\n\n(11) If your Modified Version has been derived from a Modified Version\nmade by someone other than you, you are nevertheless required to ensure\nthat your Modified Version complies with the requirements of this\nlicense.\n\n(12) This license does not grant you the right to use any trademark,\nservice mark, tradename, or logo of the Copyright Holder.\n\n(13) This license includes the non-exclusive, worldwide, free-of-charge\npatent license to make, have made, use, offer to sell, sell, import and\notherwise transfer the Package with respect to any patent claims\nlicensable by the Copyright Holder that are necessarily infringed by the\nPackage.  If you institute patent litigation (including a cross-claim or\ncounterclaim) against any party alleging that the Package constitutes\ndirect or contributory patent infringement, then this Artistic License\nto you shall terminate on the date that such litigation is filed.\n\n(14) Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT\nHOLDER AND CONTRIBUTORS \"AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED\nWARRANTIES.  THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT\nPERMITTED BY YOUR LOCAL LAW.  UNLESS REQUIRED BY LAW, NO COPYRIGHT\nHOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE\nOF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.78125,
          "content": "# See https://citation-file-format.github.io/\ncff-version: 1.2.0\ntitle: Verilator\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Wilson\n    family-names: Snyder\n    email: wsnyder@wsnyder.org\n    affiliation: Veripool\n  - given-names: Paul\n    family-names: Wasson\n  - given-names: Duane\n    family-names: Galbi\n  - name: 'et al'\nrepository-code: 'https://github.com/verilator/verilator'\nurl: 'https://verilator.org'\nabstract: >-\n  The Verilator package converts Verilog and SystemVerilog hardware\n  description language (HDL) designs into a fast C++ or SystemC model\n  that, after compiling, can be executed.  Verilator is not a\n  traditional simulator but a compiler.\nlicense:\n  - LGPL-3.0-only\n  - Artistic-2.0\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.0732421875,
          "content": "#*****************************************************************************\n#\n# DESCRIPTION: Script for build tool cmake on both unix and windows\n#\n#*****************************************************************************\n#\n# Copyright 2003-2025 by Wilson Snyder. This program is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU\n# Lesser General Public License Version 3 or the Perl Artistic License\n# Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n#\n#****************************************************************************/\n\ncmake_minimum_required(VERSION 3.15)\ncmake_policy(SET CMP0091 NEW) # Use MSVC_RUNTIME_LIBRARY to select the runtime\nproject(\n    Verilator\n    VERSION 5.033\n    HOMEPAGE_URL https://verilator.org\n    LANGUAGES CXX\n)\n\n# Set default build type to Release if not specified\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Build type\" FORCE)\nendif()\n\noption(\n    DEBUG_AND_RELEASE_AND_COVERAGE\n    \"Builds both the debug and release binaries, overriding CMAKE_BUILD_TYPE. Not supported under MSBuild.\"\n)\n\nfind_package(Python3 COMPONENTS Interpreter)\nset(PYTHON3 ${Python3_EXECUTABLE})\n# See also CMake built-in; CMAKE_INSTALL_PREFIX is applied by the install command.\nset(CMAKE_INSTALL_DATADIR .)\ninclude(GNUInstallDirs)\ninclude(CMakePackageConfigHelpers)\ninclude(CheckStructHasMember)\ninclude(ExternalProject)\ninclude(FindThreads)\n\nif(NOT WIN32)\n    message(WARNING \"CMake support on Linux/OSX is experimental.\")\nendif()\n\nif(WIN32)\n    if(DEFINED ENV{WIN_FLEX_BISON})\n        set(WIN_FLEX_BISON \"$ENV{WIN_FLEX_BISON}\")\n    endif()\n    if(EXISTS ${WIN_FLEX_BISON})\n        list(APPEND CMAKE_PREFIX_PATH ${WIN_FLEX_BISON})\n    endif()\n    if(NOT WIN_FLEX_BISON)\n        message(\n            FATAL_ERROR\n            \"Please install https://github.com/lexxmark/winflexbison and set WIN_FLEX_BISON environment variable. Please use install cmake target after a successful build.\"\n        )\n    endif()\n    set(CMAKE_CXX_STANDARD 20)\nendif()\n\nset(OBJCACHE \"\" CACHE STRING \"Path for ccache, auto-detected if empty\")\noption(OBJCACHE_ENABLED \"Compile Verilator with ccache\" ON)\n\nif(OBJCACHE_ENABLED)\n    if(OBJCACHE STREQUAL \"\")\n        find_program(OBJCACHE_PATH ccache)\n        if(OBJCACHE_PATH STREQUAL \"OBJCACHE_PATH-NOTFOUND\")\n            set(OBJCACHE_PATH \"\")\n        endif()\n    else()\n        set(OBJCACHE_PATH \"${OBJCACHE}\")\n    endif()\n    if(NOT OBJCACHE_PATH STREQUAL \"\")\n        execute_process(\n            COMMAND \"${OBJCACHE_PATH}\" --version\n            OUTPUT_VARIABLE objcache_version\n        )\n        string(REGEX MATCH \"[^\\n\\r]+\" objcache_version \"${objcache_version}\")\n        message(\n            STATUS\n            \"Found ccache: ${OBJCACHE_PATH} (\\\"${objcache_version}\\\")\"\n        )\n        set(CMAKE_CXX_COMPILER_LAUNCHER \"${OBJCACHE_PATH}\")\n    endif()\nendif()\n\nfind_package(BISON)\nfind_package(FLEX)\n\n# Build\n#set_property(GLOBAL PROPERTY JOB_POOLS one_job=1)\n\nif(DEBUG_AND_RELEASE_AND_COVERAGE)\n    if(CMAKE_GENERATOR MATCHES \"^Visual Studio \")\n        error(\"%Error: The DEBUG_AND_RELEASE_AND_COVERAGE option is not supported in MSBuild-based builds.\")\n    endif()\n    set(saved_build_type ${CMAKE_BUILD_TYPE})\n    set(CMAKE_BUILD_TYPE Debug)\n    add_subdirectory(src build-Debug)\n    set(CMAKE_BUILD_TYPE Release)\n    add_subdirectory(src build-Release)\n    set(CMAKE_BUILD_TYPE Coverage)\n    add_subdirectory(src build-Coverage)\n    set(CMAKE_BUILD_TYPE ${saved_build_type})\nelse()\n    add_subdirectory(src)\nendif()\n\n# Configuration and Installation\n\nset(PACKAGE_NAME ${PROJECT_NAME})\nset(PACKAGE_VERSION ${PROJECT_VERSION})\nset(CXX ${CMAKE_CXX_COMPILER})\nset(AR ${CMAKE_AR})\n\nconfigure_file(include/verilated_config.h.in include/verilated_config.h @ONLY)\nconfigure_file(include/verilated.mk.in include/verilated.mk @ONLY)\n\ninstall(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/include/verilated_config.h\n    DESTINATION include\n)\ninstall(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/include/verilated.mk\n    DESTINATION include\n)\n\nconfigure_package_config_file(\n    verilator-config.cmake.in\n    verilator-config.cmake\n    INSTALL_DESTINATION .\n)\n\ninstall(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/verilator-config.cmake\n    DESTINATION .\n)\n\nconfigure_package_config_file(\n    verilator-config-version.cmake.in\n    verilator-config-version.cmake\n    INSTALL_DESTINATION .\n)\n\ninstall(\n    FILES ${CMAKE_CURRENT_BINARY_DIR}/verilator-config-version.cmake\n    DESTINATION .\n)\n\nforeach(\n    program\n    verilator\n    verilator_gantt\n    verilator_ccache_report\n    verilator_difftree\n    verilator_profcfunc\n    verilator_includer\n)\n    install(PROGRAMS bin/${program} TYPE BIN)\nendforeach()\n\ninstall(\n    DIRECTORY examples\n    TYPE DATA\n    FILES_MATCHING\n    PATTERN \"examples/*/*.[chv]*\"\n    PATTERN \"examples/*/Makefile*\"\n    PATTERN \"examples/*/CMakeLists.txt\"\n)\n\ninstall(\n    DIRECTORY include\n    TYPE DATA\n    FILES_MATCHING\n    PATTERN \"include/verilated_config.h\"\n    PATTERN \"include/*.[chv]\"\n    PATTERN \"include/*.cpp\"\n    PATTERN \"include/*.vlt\"\n    PATTERN \"include/*.sv\"\n    PATTERN \"include/gtkwave/*.[chv]*\"\n    PATTERN \"include/vltstd/*.[chv]*\"\n)\n"
        },
        {
          "name": "CPPLINT.cfg",
          "type": "blob",
          "size": 0.4248046875,
          "content": "set noparent\nlinelength=100\nfilter=-build/c++11\nfilter=-build/header_guard\nfilter=-build/include_order\nfilter=-build/include_subdir\nfilter=-readability/inheritance\nfilter=-readability/nolint\nfilter=-readability/todo\nfilter=-runtime/references\nfilter=-whitespace/blank_line\nfilter=-whitespace/empty_if_body\nfilter=-whitespace/indent\nfilter=-whitespace/newline\nfilter=-whitespace/braces\nfilter=-whitespace/parens\nfilter=-whitespace/todo\n"
        },
        {
          "name": "Changes",
          "type": "blob",
          "size": 203.607421875,
          "content": ".. for github, vim: syntax=reStructuredText\n\n===============================\nRevision History and Change Log\n===============================\n\nThe changes in each Verilator version are described below.  The\ncontributors that suggested a given feature are shown in []. Thanks!\n\n\nVerilator 5.033 devel\n==========================\n\n**Minor:**\n\n* Add COVERIGN warning, as a more specific UNSUPPORTED error.\n* Support generated classes (#5665). [Shou-Li Hsu]\n* Support `+incdir` with multiple directories.\n* Support side effects of form 'variable[index_function()]++'.\n* Fix error message when call task as a function (#3089). [Matthew Ballance]\n* Fix V3Simulate constant reuse (#5709). [Geza Lore]\n* Fix man pages what-is section (#5710). [Ahmed El-Mahmoudy]\n* Fix pattern assignment to real inside struct (#5713).\n* Fix %p format output for real inside struct (#5713).\n* Fix segfault when only enum value referenced in package (#5714). [Dan Katz]\n* Fix matching language extension options including dots.\n\n\nVerilator 5.032 2025-01-01\n==========================\n\n**Minor:**\n\n* Support queue's assignment `push_back/push_front('{})` (#5585) (#5586). [Yilou Wang]\n* Support basic constrained random for multi-dimensional dynamic array and queue (#5591). [Yilou Wang]\n* Support vpiDefName (#3906) (#5572). [Krzysztof Starecki]\n* Support parameter names in pattern initialization (#5593) (#5596). [Greg Davill]\n* Support randomize size constraints with restrictions (#5582 partial) (#5611). [Ryszard Rozak, Antmicro Ltd.]\n* Support associative array basic constrained randomization (#5658) (#5670). [Yilou Wang]\n* Support `default disable iff` and `$inferred_disable` (#4016). [Srinivasan Venkataramanan]\n* Support `extern constraint` and `pure constraint`.\n* Add `--no-std-waiver` and default reading of standard lint waivers file (#5607).\n* Add `--no-std-package` as subset-alias of `--no-std` (#5607).\n* Add `lint_off --contents` in configuration files (#5606).\n* Add `--waiver-multiline` for context-sensitive `--waiver-output` (#5608).\n* Add `--fno-inline-funcs` to disable function inlining.\n* Add `--fno-slice` to disable array assignment slicing (#5644).\n* Add error on illegal enum base type (#3010). [Iztok Jeras]\n* Add error on `wait` with missing `.triggered` (#4457).\n* Add error when improperly storing to parameter (#5147). [Gökçe Aydos]\n* Add error on illegal `--prefix` etc. values (#5507). [Fabian Keßler]\n* Add error on `--savable --timing` (#5690). [Narcis Rodas]\n* Add coverage point hierarchy to coverage reports (#5575) (#5576). [Andrew Nolte]\n* Add warning on global constraints (#5625). [Ryszard Rozak, Antmicro Ltd.]\n* Add default CMAKE_BUILD_TYPE (#5691) (#5692). [Anthony Moore]\n* Add error on `solve before` or soft constraints of `randc` variable.\n* Improve concatenation performance (#5598) (#5599) (#5602). [Geza Lore]\n* Improve optimization of duplicate wide expressions (#5637). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix dotted reference in delay value (#2410).\n* Fix `function fork...join_none` regression with unknown type (#4449).\n* Fix public_module requiring a wire to become public (#4916). [Andrew Nolte]\n* Fix --hierarchical on projects with dot-f dependency lists (#5199) (#5669). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix can't locate scope error in interface task delayed assignment (#5462) (#5568). [Zhou Shen]\n* Fix BLKANDNBLK for for VARXREFs (#5569). [Todd Strader]\n* Fix VPI error instead of fatal for vpi_get_value() on large signals (#5571). [Todd Strader]\n* Fix --output-groups leftover files issue (#5574). [Todd Strader]\n* Fix slow unsized number parsing (#5577). [Geza Lore]\n* Fix negative assignment pattern keys (#5580). [Iztok Jeras]\n* Fix duplicate scope identifiers decoding (#5584). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix `rand` dynamic arrays with null handles (#5594). [Ryszard Rozak, Antmicro Ltd.]\n* Fix NBAs to unpacked arrays of unpacked structs (#5603). [Geza Lore]\n* Fix array of struct member overwrites on member update (#5605) (#5618) (#5628). [sumpster]\n* Fix interface and struct pattern collision (#5639) (#5640). [Todd Strader]\n* Fix mis-aliasing of instances with mailbox parameter types (#5632 partial).\n* Fix error on duplicated declaration of gen block (#5663). [Ryszard Rozak, Antmicro Ltd.]\n* Fix wildcard equality and inside operators for non-fourstate expressions (#5673). [Ryszard Rozak, Antmicro Ltd.]\n* Fix `randomize..with` of parameterized classes (#5676). [Ryszard Rozak, Antmicro Ltd.]\n* Fix interface bracketed array parameter access (#5677) (#5678). [Todd Strader]\n* Fix width extension of operands of `inside` operator (#5685). [Ryszard Rozak, Antmicro Ltd.]\n* Fix VPI + SYMRSVDWORD intersection (#5686). [Todd Strader]\n* Fix verilator_gantt for hierarchically Verilated models (#5700). [Bartłomiej Chmiel, Antmicro Ltd.]\n\n\nVerilator 5.030 2024-10-27\n==========================\n\n**Major:**\n\n* Add `-output-groups` to build with concatenated .cpp files (#5257). [Mariusz Glebocki]\n* Self-tests have been converted to Python, run `{test_name}.py` instead of `{test_name}.pl`.\n\n**Minor:**\n\n* Change .vlt config files to be read before .v files (#5185). [David Moberg]\n* Change to use maximum for cover point aggregation (#5402). [Andrew Nolte]\n* Change `--main` and `--binary` to use a TOP hierarchy name of \"\" (#5482).\n* Change install of public executables into bindir instead of pkgdatadir (#5140) (#5544). [Geza Lore]\n* Support IEEE-compliant intra-assign delays (#3711) (#5441). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support `wor`, `trior`, `wand`, `triand` (#5386) (#5496). [Zhou Shen]\n* Support unconstrained randomization for unions (#5395) (#5396). [Yilou Wang]\n* Support basic constrained queue randomization (#5413). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support packed/unpacked and dynamic array unconstrained randomization (#5414) (#5415). [Yilou Wang]\n* Support appending to queue via `[]` (#5421). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support named event locals (#5422). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support basic `dist` constraints (#5431). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support unpacked array constrained randomization (#5437) (#5489). [Yilou Wang]\n* Support inside array constraints (#5448). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support DPI imports and exports with double underscores (#5481).\n* Support ccache when compiling Verilated files with cmake.\n* Support `local` and `protected` on `typedef` (#5460).\n* Support unconstrained randomization for associative array and queue (#5515). [Yilou Wang]\n* Support `rand` dynamic arrays of objects (#5557) (#5564). [Ryszard Rozak, Antmicro Ltd.]\n* Add error on misused genvar (#408). [Alex Solomatnikov]\n* Add error on instances without parenthesis.\n* Add Docker pre-commit hook (#5238) (#5452). [Chris Bachhuber]\n* Add partial coverage symbol and branch data in lcov info files (#5388). [Andrew Nolte]\n* Add method to check if there are VPI callbacks of the given type (#5399). [Kaleb Barrett]\n* Remove warning on unsized numbers exceeding 32-bits.\n* Improve Verilation thread pool (#5161). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Improve performance of V3VariableOrder with parallelism (#5406). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Improve parser error handling (#5493). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Improve process trigger performance (#5483). [Geza Lore]\n* Fix suppression of WIDTH* warnings when immediately under a size cast (#3417).\n* Fix `$fatal` to not be affected by `+verilator+error+limit` (#5135). [Gökçe Aydos]\n* Fix equivalence checking when replacing type parameters (#5213) (#5255). [Han Qi]\n* Fix display with multiple string formats (#5311). [Luiza de Melo]\n* Fix performance of V3Trace when many activity blocks (#5372). [Deniz Güzel]\n* Fix REALCVT warning on integral timescale conversions (#5378). [Liam Braun]\n* Fix multidimensional function return value selects (#5382). [Gökçe Aydos]\n* Fix internal error in out-of-range select (#5393) (#5443). [Geza Lore]\n* Fix dot fallback finding wrong symbols (#5394). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix infinite recursion due to recursive functions/tasks (#5398). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix V3Randomize compile error on old GCC (#5403) (#5417). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix extra events in traces (#5405).\n* Fix empty `foreach` in `if` in constraints (#5408). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix queue `[$-i]` select as reference argument (#5411). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix `pre`/`post_randomize` on `randomize() with` (#5412). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix capturing params in `randomize() with` (#5416) (#5418). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix `sformatf` internal error on initial automatics (#5423). [Todd Strader]\n* Fix clearing trigger of events with no sensitivity trees (#5426). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix driving clocking block in reactive region (#5430). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix associative array next/prev/first/last mis-propagating constants (#5435). [Ethan Sifferman]\n* Fix randomize treated as std::randomize in classes (#5436). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix `foreach` colliding index names (#5444). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix fault on defparam with UNSUPPORTED ignored (#5450). [Luiza de Melo]\n* Fix class reference with pin that is a class reference (#5454).\n* Fix not reporting class reference with extra parameters (#5467).\n* Fix user-type parameter overlap (#5469). [Todd Strader]\n* Fix tracing when name() is empty (#5470). [Sam Shahrestani]\n* Fix timing mode not exiting on empty events (#5472).\n* Fix coverage counts missing due to table optimization (#5473) (#5474). [Vito Gamberini]\n* Fix `--binary` with .cpp PLI filenames under relative directory paths.\n* Fix extra dot in coverage point hierarchy when using name()=''.\n* Fix short-circuiting with associative array access (#5484). [Ethan Sifferman]\n* Fix short-circuiting on method calls (#5486). [Ethan Sifferman]\n* Fix exponential concatenate performance (#5488). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix V3Table trying to generate 'x' bits in the lookup table. (#5491). [Geza Lore]\n* Fix randomize with foreach constraints (#5492). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix explicit CMAKE_INSTALL_PREFIX usages (#5500). [Fabian Keßler]\n* Fix configure inserting absolute paths for Python and Perl (#5504) (#5505). [Nathan Graybeal]\n* Fix pattern initialization with typedef key (#5512). [Eugene Feinberg]\n* Fix `-j` option without argument in hierarchical Verilation (#5514). [Ryszard Rozak, Antmicro Ltd.]\n* Fix `foreach` with 2-D queues and dynamic arrays (#5525) (#5529). [Yilou Wang]\n* Fix struct array assignment (#5455) (#5537). [Yilou Wang]\n* Fix copy constructor of classes that use std::process (#5528). [Ryszard Rozak, Antmicro Ltd.]\n* Fix foreach on associative array (#5530). [Yilou Wang]\n* Fix multi-range indices assignment (#5534) (#5547). [Yilou Wang]\n* Fix static function wrappers (#5536). [Ryszard Rozak, Antmicro Ltd.]\n* Fix assignments of concatenation to queues and dynamic arrays (#5540). [Ryszard Rozak, Antmicro Ltd.]\n* Fix container reduction methods (#5542). [Krzysztof Boroński]\n* Fix complex user type problem with `--x-assign` (#5543). [Todd Strader]\n* Fix long module names crashing string handling (#5546). [Filip Badáň]\n* Fix array trace splitting (#5549). [Todd Strader]\n* Fix queue element access (#5551). [Ryszard Rozak, Antmicro Ltd.]\n* Fix struct literal on pattern assignment (#5552) (#5559). [Todd Strader]\n* Fix build on gcc when using the Spack wrapper (#5555). [Eric Müller]\n* Fix enum name method (#5563). [Todd Strader]\n* Fix `$countbits` in assert with non-tristates (#5566). [Shou-Li Hsu]\n* Fix missing VlProcess handle in coroutines with splits (#5623) (#5650). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix imported array assignment literals (#5642) (#5648). [Todd Strader]\n* Fix foreach mixed array (#5655) (#5656). [Yilou Wang]\n\n\nVerilator 5.028 2024-08-21\n==========================\n\n**Minor:**\n\n* Support state-dependent constraints (#5217). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support cross-module clocking variable access (#5184). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support inline constraints for class randomization methods (#5234). [Krzysztof Boroński]\n* Support clocking blocks in virtual interfaces (#5235). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support `$assertcontrol` assertion_type (#5236). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Support conditional constraints (#5245). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support`--compiler-include` headers in user-supplied cpp files  (#5271). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Support `rand_mode` (#5273). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support `this.randomize with` (#5282). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support foreach constraints (#5302). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support `parameter type` in hierarchical blocks (#5309) (#5333). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Support assertcontrol directive type  (#5310). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Support inline random variable control (#5317). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support streaming operator on arrays and wide data (#5326). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support streams to/from arrays of wide data (#5334). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support `constraint_mode` (#5338). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support constraining AstSel (#5344). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support default value on module input (#5358) (#5373). [Drew Ranck]\n* Add `--compiler-include` for additional C++ includes (#5139) (#5202). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Add `--emit-accessors` (#5182) (#5227). [Ryan Ziegler]\n* Add suggestions on misspelled PLI functions.\n* Add warning on dist in constraints (#5264). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Add more `rand_mode` unsupported errors (#5329). [Krzysztof Bieganski, Antmicro Ltd.]\n* Add parsing but otherwise ignore std::randomize (#5354). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Add Verilated cc define when `--timing` used (#5383). [Kaleb Barrett]\n* Improve emitted code to use a reference for VlSelf (#5254). [Yangyu Chen]\n* Fix monitor block sensitivity items (#4400) (#5294). [Udaya Raj Subedi]\n* Fix fusing macro arguments to not ignore whitespace (#5061). [Tudor Timi]\n* Fix optimized-out sensitivity trees with `--timing` (#5080) (#5349). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix classes/modules of case-similar names (#5109). [Arkadiusz Kozdra]\n* Fix mis-removing $value$plusargs calls (#5127) (#5137). [Seth Pellegrino]\n* Fix incorrect result of width mismatch (#5186) (#5189). [Yutetsu TAKATSUKASA]\n* Fix compiler coroutine check (#5190) (#5300). [Ricardo Barbedo]\n* Fix shortened module names when searching for files (#5196) (#5246). [Tim Hutt]\n* Fix `--x-assign` to be independent from `+verilator+rand+reset` (#5214). [Andrew Nolte]\n* Fix splitting if statements with impure conditions (#5219). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix unknown conversion on queues (#5220). [Alex Solomatnikov]\n* Fix top-level unpacked structure resets (#5221).\n* Fix concurrency for mailbox and semaphores (#5222). [Liam Braun]\n* Fix forks capturing non-input ports in tasks (#5237) (#5343). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix toggle coverage aggregation on same line (#5248). [Krzysztof Obłonczek]\n* Fix error on empty generate with -O0 (#5250).\n* Fix unconstrained randomization of unpacked structs (#5252). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix inlining of variables driven from forced vars (#5259). [Geza Lore]\n* Fix tracing with `--main-top-name -` (#5261). [Ethan Sifferman]\n* Fix randomization when used with inheritance (#5268). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix inline constraints creating class random generator (#5280). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix WIDTHEXPAND on left shift of intuitive amount (#5284). [Greg Taylor]\n* Fix elaborating foreach loops (#5285). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix initializing static array in dynamic arrays and queues (#5287). [Baruch Sterin]\n* Fix static variable initializers in procedures (#5296). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix randomizing current object with `rand` class instance member (#5292). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix handling of rand fields not referenced in constraints (#5305). [Ryszard Rozak, Antmicro Ltd.]\n* Fix Python3 path discovery in make flows to avoid mixing system and user python interpreters (#5307) [Markus Krause]\n* Fix make flows to pass PYTHON3 (like PERL) (#5307) (#5308). [Markus Krause]\n* Fix assert on wide expression (#5319) (#5324). [Varun Koyyalagunta]\n* Fix output clock variable overwriting signal (#5320)  (#5347). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix stringify in nested preprocessor macros (#5323). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix $sformat with array arguments (#5330). [Abe Jordan]\n* Fix -Wunused-but-set-variable clang warning (#5331). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix purity of functions with AstJumpBlock or AstStmtExpr (#5332). [Ryszard Rozak, Antmicro Ltd.]\n* Fix compilation error on unreachable disable fork / wait fork (#5339). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix missing type coercion in 'inside {array}' (#5340). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix +: and -: unpacked array slicing when array has nonzero low index (#5345) (#5387). [James Bailey]\n* Fix tracing_{on,off} in the presence of non-inlined modules (#5346). [Geza Lore]\n* Fix NBAs in suspendables (#5348). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix lint_off on Errors (#5351) (#5363). [Ethan Sifferman]\n* Fix cache config file resolution performance (#5369). [Geza Lore]\n* Fix capturing fields from superclass in `randomize() with` (#5389). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix virtual interface null checks (#5391). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix ==? and !=? with X values.\n* Fix CPU time being zero.\n* Fix inline function ref port persistence.\n\n\nVerilator 5.026 2024-06-15\n==========================\n\n**Major:**\n\n* Support constrained randomization with external solvers (#4947). [Arkadiusz Kozdra, Antmicro Ltd.]\n\n**Minor:**\n\n* Support `$psprintf` system function (#4314) (#5169). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support 2D dynamic array initialization (#4700) (#5122). [Valentin Atepalikhin]\n* Support __en/__out signals on top level inout ports (#4812) (#4856). [Paul Wright]\n* Support empty queue as dynarray default value (#5055). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support vpiInertialDelay (#5087). [Todd Strader]\n* Support NBAs to arrays inside loops (#5092). [Geza Lore]\n* Support parsing and otherwise ignoring inline constraints (#5126). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support `inout` clocking items (#5160). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Support StructSel in unpacked array assignments (#5176). [Geza Lore]\n* Add error on zero width select (#5028).\n* Add CITATION.cff (#5057) (#5058). [Gijs Burghoorn]\n* Add VPI eval needed tracking (#5065). [Todd Strader]\n* Add `--localize-max-size` option and optimization (#5072).\n* Add parameterless assert control system tasks (#5010). [Bartłomiej Chmiel]\n* Add traceCapable indication to model header (#5053). [Vito Gamberini]\n* Add increasing of stack size when possible (#5071) (#5104). [Yinan Xu]\n* Add assertion on reusing VerilatedContext (#5167).\n* Add `--pins-sc-uint-bool` to force SystemC uint type (#5192). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Improve DFG regularization in cyclic graphs (#5142). [Geza Lore]\n* Improve VerilatedVpiPutHolder storage requirements (#5144). [Kaleb Barrett]\n* Fix coroutines without awaits to have a co_return (#4208) (#5175). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix missing flex include path variable (#4970) (#4971). [Christopher Taylor]\n* Fix missing parameters with comma to be errors (#4979) (#5012). [Paul Swirhun]\n* Fix 'experimental/coroutine' file not found on MacOS (#5030) (#5031) (#5151). [Paul Bowen-Huggett]\n* Fix bound queue printing (#5032). [Aleksander Kiryk, Antmicro Ltd.]\n* Fix consecutive zero-delays (#5038). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix attempted to destroy locked thread pool error (#5040). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix `$system` with string argument (#5042).\n* Fix width extension on delays (#5043).\n* Fix `$typename` on array.min and others (#5049). [Gökçe Aydos]\n* Fix `make $(info)` which cannot be silenced (#5059). [Gökçe Aydos]\n* Fix CMake builds to export VERILATOR_ROOT (#5063). [Michael Bikovitsky]\n* Fix false ASSIGNIN on functions with explicit port map (#5069).\n* Fix 4-state value support for $readmem (#5070) (#5078). [Ethan Sifferman]\n* Fix DFG assertion with SystemC (#5076). [Geza Lore]\n* Fix `$typename` string to be more standard (#5082) (#5083). [Andrew Nolte]\n* Fix missed optimization in V3Delayed (#5089). [Geza Lore]\n* Fix macro expansion in strings per 1800-2023 (#5094). [Geza Lore]\n* Fix width extension of unpacked array select (#5095). [Varun Koyyalagunta]\n* Fix MacOS missing <type_traits> header (#5096) (#5097). [Vito Gamberini]\n* Fix assertion failure in V3Gate (#5101). [Yutetsu TAKATSUKASA]\n* Fix aliases for forced port signals (#5105). [Geza Lore]\n* Fix tracing interface functions (#5108). [Alex Solomatnikov]\n* Fix method calls parsing in constraints (#5110). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix vpiInertialDelay for memories (#5113). [Todd Strader]\n* Fix hierarchical compilation with nested -F (#5114) (#5124). [Alex Solomatnikov]\n* Fix references to ports in forks (#5123). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix output C++ type error on change detect of I/O arrays (#5125) (#5131). [Pawel Jewstafjew]\n* Fix x-valued parameters with `--x-assign unique` (#5129). [Ethan Sifferman]\n* Fix overflow of string on VPI reads (#5145) (#5146). [Kaleb Barrett]\n* Fix VerilatedVpiPutHolder class (#5156). [Kaleb Barrett]\n* Fix extending out-of-range select (#5159) (#5164). [Geza Lore]\n* Fix radix in width warnings (#5166). [Geza Lore]\n* Fix SystemC BITS_PER_DIGIT in VL_ASSIGN_SBW (#5170). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix non-constant replication in concats (#5171). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Fix table optimization when applied on real data type (#5172) (#5173). [Arthur Rosa]\n* Fix signed types emitted in hierarchical Verilation (#5178). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Fix DPI import of null C-string (#5179).\n* Fix CMake installation missing verilated.mk (#5187) (#5188). [Philip Axer]\n* Fix linking with pthreads on CMake (#5194). [Tim Hutt]\n* Fix clang-17 coroutines configuration with -std=gnu++20 (#5200). [Gus Smith]\n\n\nVerilator 5.024 2024-04-05\n==========================\n\n**Major:**\n\n* Add printing summary reports, use `--quiet` or `+verilator+quiet` to suppress (#4909).\n* Support 1800-2023 keywords, and parsing with UNDEFINED warnings.\n* Support 1800-2023 preprocessor ifdef expressions.\n\n**Minor:**\n\n* Change 1800-2023 to be default language version.\n* Add DFG 'regularize' pass, and improve variable removal (#4937). [Geza Lore]\n* Add error when pass net to function argument (#4132) (#4966). [Fuad Ismail]\n* Add `UNUSEDLOOP` when unused loop is removed (#4926). [Bartłomiej Chmiel, Antmicro Ltd.]\n* Add custom version for verilator --version packaging (#4954). [Nolan Poe]\n* Add error on missing pure virtual functions (#4961).\n* Add error on calling static function without object (#4962).\n* Add JSON AST dumps (#5020). [Szymon Gizler]\n* Support 1800-2023 DPI headers, svGetTime/svgGetTimeUnit/svGetTimePrecision methods.\n* Support 1800-2023 class and function :initial, :extends, :final virtual overrides (#5025).\n* Support public packed struct / union (#860) (#4878). [Kefa Chen]\n* Support stream operation on unpacked array (#4714) (#5006). [Fuad Ismail]\n* Support implicitly-typed variable definitions in for-loop initializers (#4945) (#4986). [Kevin Nygaard]\n* Support inside range with implicit type conversion (#5026). [Arkadiusz Kozdra, Antmicro Ltd.]\n* Improve installation to be relocatable (#4927). [Geza Lore]\n* Improve internal ordering code (#4957) (#4990) (#4994) et al. [Geza Lore]\n* Fix generate blocks in vpi_iterate (#3609) (#4913). [Andrew Nolte]\n* Fix __Vlip undefined error in --freloop (#4824). [Justin Yao Du]\n* Fix missing VPI scopes (#4918). [Andrew Nolte]\n* Fix invalid cast on string structure creation (#4921).\n* Fix try-lock spuriously fails (#4931) (#4938). [Kamil Rakoczy]\n* Fix V3Unknown unpacked struct x-assign (#4934). [Yan Xu]\n* Fix DFG removing forceable signals (#4942). [Geza Lore]\n* Fix null characters in shortened identifiers (#4946). [Abdul Hameed]\n* Fix assignment of null into struct member (#4952).\n* Fix VPI missing scopes 2 (#4965). [Andrew Nolte]\n* Fix object assignment from conditionals (#4968).\n* Fix GCC14 warnings on template specialization syntax (#4974) (#4975). [Nolan Poe]\n* Fix unpacked structure upper bit cleaning (#4978).\n* Fix tests on MacOS (#4984) (#4985). [Kevin Nygaard]\n* Fix `--prof-exec` predicted time values (#4988). [Geza Lore]\n* Fix class type as an associative array parameter (#4997).\n* Fix inout ports of unpacked struct type (#5000). [Ryszard Rozak, Antmicro Ltd.]\n* Fix `unique {}` constraints missing semicolon (#5001).\n* Fix preprocessor to respect strings in joins (#5007).\n* Fix tracing class parameters (#5014).\n* Fix memory leaks (#5016). [Geza Lore]\n* Fix `$readmem` with missing newline (#5019). [Josse Van Delm]\n* Fix internal error on missing pattern key (#5023).\n* Fix tracing replicated hierarchical models (#5027).\n* Fix false LIFETIME warning on `repeat` in `fork-join` (#5456).\n\n\nVerilator 5.022 2024-02-24\n==========================\n\n**Minor:**\n\n* Add predicted stack overflow warning (#4799).\n* Add `+verilator+coverage+file` runtime option.\n* Add `--assert-case` option (#4919). [Yutetsu TAKATSUKASA]\n* Add `--decorations node` for inserting debug comments into emitted code.\n* Add `--json-only` and related JSON dumping (#4715) (#4831). [Szymon Gizler, Antmicro Ltd.]\n* Add `--[no]-stop-fail` option for continuing after assertions (#4904). [Yutetsu TAKATSUKASA]\n* Add `--runtime-debug` for Verilated executable runtime debugging.\n* Add `--valgrind` switch (#4828). [Szymon Gizler]\n* Add `unroll_disable` and `unroll_full` loop control metacomments (#3260). [Jiaxun Yang]\n* Remove deprecated 32-bit pointer mode (`gcc -m32`).\n* Deprecate --xml-only and XML dumping (#4715) (#4831).\n* Change zero replication width error to ZEROREPL warning (#4753) (#4762). [Pengcheng Xu]\n* Improve message for priority case assertion failure (#4905). [Yutetsu TAKATSUKASA]\n* Support dumping coverage with `--main`.\n* Support dumping DFG patterns with `--stats` (#4889). [Geza Lore]\n* Support `vpiConstType` in `vpi_get_str()` (#4797). [Marlon James]\n* Support SystemC 3.0.0 public review version (#4805) (#4807). [Anthony Donlon]\n* Support parsing anonymous primitive instantiations (#4809). [Anthony Donlon]\n* Fix to not emit already waived warnings in waiver output (#4574) (#4818). [Jonathan Schröter]\n* Fix `this` in member initialization (#4710). [eliasphanna]\n* Fix localparam elaboration (#3858) (#4794). [Andrew Nolte]\n* Fix lint_off disables on preprocessor warnings (#4703). [Srinivasan Venkataramanan]\n* Fix $time not rounding up (#4790) (#4792). [Paul Wright]\n* Fix `vpi_get()` and `vpi_get64()` to return vpiUndefined on errors (#4795). [Marlon James]\n* Fix VPI parameter iteration (#4798). [Marlon James]\n* Fix delays using wrong timeunit when modules inlined (#4806). [Paul Wright]\n* Fix warnings in verilated_sc_trace.h for Clang. (#4807) (#4827). [Anthony Donlon]\n* Fix null pointer dereference (#4810) (#4825). [Adrian Sampson]\n* Fix compilation error on multi-inherited interface class usage (#4819).\n* Fix maybe-uninitialized compiler warning (#4820) (#4822). [Larry Doolittle]\n* Fix mis-splitting of dump control functions (#4821). [Fan Shupei]\n* Fix wrong utimes() parameter (#4829). [Szymon Gizler]\n* Fix incorrect bit-op-tree NOT optimization (#4832) (#4847). [Yutetsu TAKATSUKASA]\n* Fix width calculation in replaceShiftOp (#4837) (#4841) (#4849). [Yutetsu TAKATSUKASA]\n* Fix unsafe write in wide array insertion (#4850) (#4855). [Paul Swirhun]\n* Fix NOT when checking EQ/NEQ under AND/OR tree (#4857) (#4863). [Yutetsu TAKATSUKASA]\n* Fix tracing chandles (#4860). [Nathan Graybeal]\n* Fix $fwrite of null (#4862). [Jose Tejada]\n* Fix -fno-const-bit-op-tree wrong runtime result (#4864) (#4867). [Yutetsu TAKATSUKASA]\n* Fix SystemC biguint sign desynchronization (#4870). [Bartłomiej Chmiel]\n* Fix incorrect temporary insertion in loop conditions with statements (#4873). [Geza Lore]\n* Fix timing with expr on assign LHS (#4880). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix assertion for unique case (#4892). [Yutetsu TAKATSUKASA]\n* Fix GCC tautological-compare warnings.\n* Fix compile error on structs with queues (and ignore toggle coverage on queues).\n* Fix toggle coverage error on multi-edge driven signals.\n* Fix whitespace in `pragma protect version` (#4902) (#4914). [Paul Swirhun]\n* Fix incorrect code generation for change expression on typedefed unpacked array (#4915). [Geza Lore]\n* Fix inconsistent driver resolution with typedefs (#4917). [Geza Lore]\n\n\nVerilator 5.020 2024-01-01\n==========================\n\n**Major:**\n\n* Support compilation with precompiled headers with Make, and GCC or CLang.\n* Change include to systemc instead of systemc.h (#4622) (#4623). [Chih-Mao Chen]\n  This may require that SystemC programs add 'using namespace sc_core', 'using namespace sc_dt'.\n\n**Minor:**\n\n* Add devcontainer support (#4748). [Stefan Wallentowitz]\n* Support `iff` in sensitivity list (#1482) (#4626). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support parameterized virtual interfaces (#4047) (#4743). [Ryszard Rozak, Antmicro Ltd.]\n* Support --timing triggers for virtual interfaces (#4673). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support ccache when compiling Verilator with CMake (#4678). [Anthony Donlon]\n* Support passing constraints to --xml-only output (still otherwise unsupported) (#4683). [Shahid Ikram]\n* Support node memory usage information in --stats (#4684). [Geza Lore]\n* Support vpiConstType in vpi_get() (#4761). [Todd Strader]\n* Support vpi_iterate on packages with vpiInstance (#4726). [Todd Strader]\n* Support multiple parameters in virtual interfaces (#4745). [Ryszard Rozak, Antmicro Ltd.]\n* Support user C/C++ code in final archive, and make a lib{model}.a (#4749) (#4754). [Fan Shupei]\n* Support inside operator on unpacked arrays and queues (#4751). [Ryszard Rozak, Antmicro Ltd.]\n* Support VPI parameter iteration (#4765). [Todd Strader]\n* Support packages in vpi_handle_by_name() (#4768). [Todd Strader]\n* Support invoking interface methods on virtual interface variables (#4774) (#4775). [Jordan McConnon]\n* Remove deprecated options (#4663). [Geza Lore]\n* Remove older compiler support; require C++14 or newer (#4784) (#4786).\n* Optimize timing-delayed queue (#4584). [qrqiuren]\n* Optimize substitute optimization memory usage (#4687). [Geza Lore]\n* Optimize wide primitive operations with -Oz (#4733). [Geza Lore]\n* Optimize V3Premit performance etc. (#4736). [Geza Lore]\n* Fix VPI TOP level variable iteration (#3919) (#4618). [Marlon James]\n* Fix display with no % printing assoc array (#4376). [Alex Solomatnikov]\n* Fix scheduling of external force signals (#4577) (#4668). [Geza Lore]\n* Fix a memory leak in V3Fork (#4628). [Krzysztof Boroński]\n* Fix linking parameterized hierarchical blocks and recursive hierarchical blocks (#4654). [Anthony Donlon]\n* Fix identifiers that end with '_' on Windows (#4655). [Anthony Donlon]\n* Fix 'for' loop with outside variable reference (#4660). [David Harris]\n* Fix tracing FST enums (#4661) (#4756). [Todd Strader]\n* Fix interface parameters used in loop generate constructs (#4664) (#4665). [Anthony Donlon]\n* Fix C++20 compilation errors (#4670).\n* Fix deadlocks in error handler (#4672). [Mariusz Glebocki, Antmicro Ltd.]\n* Fix MingW compilation (#4675). [David Ledger]\n* Fix trace when using SystemC with certain configurations (#4676). [Anthony Donlon]\n* Fix range access to classes depending on parameter resolution (#4681). [Krzysztof Boroński]\n* Fix select into constant And/Or/Xor pattern (#4689). [Geza Lore]\n* Fix access type of function arguments (#4692) (#4694). [Ryszard Rozak, Antmicro Ltd.]\n* Fix dynamic NBAs with automatic vars (#4696). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix # 0 delays for process resumption, etc. (#4697). [Krzysztof Boroński]\n* Fix conflicted namespace for coroutines (#4701) (#4707). [Jinyan Xu]\n* Fix compilers seeing empty input due to file system races (#4708). [Flavien Solt]\n* Fix shift of > 32-bit number (#4719). [Flavien Solt]\n* Fix Windows include gates in filesystem Flush implementation. (#4720). [William D. Jones]\n* Fix power operator with wide numbers and constants (#4721) (#4763). [Flavien Solt]\n* Fix parameter passing to ports (#4723). [Ryszard Rozak, Antmicro Ltd.]\n* Fix block names of nested do..while loops (#4728). [Ryszard Rozak, Antmicro Ltd.]\n* Fix class name in error on 'new' on virtual class (#4739). [Ryszard Rozak, Antmicro Ltd.]\n* Fix typedefs pointing to parameterized classes (#4747). [Ryszard Rozak, Antmicro Ltd.]\n* Fix $finish twice to no longer exit (#4757). [Tim Hutt]\n* Fix dynamic NBA conditions (#4773). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix `V3Fork` stage to run only if `--timing` is set (#4778). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix max multiply width and add runtime assertions if too small. (#4781)\n* Fix select value too wide (#5148) (#5153). [Dercury]\n\n\nVerilator 5.018 2023-10-30\n==========================\n\n**Major:**\n\n* Support compilation with precompiled headers with Make and GCC or CLang.\n* Change include of systemc instead of systemc.h (#4622) (#4623). [Chih-Mao Chen]\n  This may require that SystemC programs add 'using namespace sc_core', 'using namespace sc_dt'.\n\n**Minor:**\n\n* Add SIDEEFFECT warning on mishandled side effect cases.\n* Add trace() API even when Verilated without --trace (#4462). [phelter]\n* Add warning on interface instantiation without parens (#4094). [Gökçe Aydos]\n* Add sv_vpi_user.h from IEEE 1800-2017 Annex M (#4606). [Marlon James]\n* Support 'disable fork' (#4125) (#4569). [Aleksander Kiryk, Antmicro Ltd.]\n* Support 'wait fork' (#4586). [Aleksander Kiryk, Antmicro Ltd.]\n* Support 'randc' (#4349).\n* Support assigning events (#4403). [Krzysztof Boroński]\n* Support resizing function call inout arguments (#4467).\n* Support NBAs in non-inlined functions/tasks (#4496) (#4572). [Krzysztof Bieganski, Antmicro Ltd.]\n* Support converting parameters inside modules to localparams (#4511). [Anthony Donlon]\n* Support concatenation of unpacked arrays (#4558). [Yutetsu TAKATSUKASA]\n* Support Clang 16 (#4592). [Mariusz Glebocki]\n* Support VPI variables of real and string data types (#4594). [Marlon James]\n* Support making VL_LOCK_SPINS configurable (#4599). [Geza Lore]\n* Change code --stats output (#4597). [Geza Lore]\n* Change --prof-exec infrastructure and report (#4602). [Geza Lore]\n* Change lint_off to not propagate upwards to files including where the lint_off is.\n* Optimize empty expression statements (#4544).\n* Optimize trace internals (#4610) (#4612). [Geza Lore]\n* Optimize internal performance issues (#4638). [Geza Lore]\n* Fix conversion of impure logical expressions to bit expressions (#487 partial) (#4437). [Ryszard Rozak, Antmicro Ltd.]\n* Fix enum functions in localparams (#3999). [Andrew Nolte]\n* Fix passing arguments by reference (#3385 partial) (#4489). [Ryszard Rozak, Antmicro Ltd.]\n* Fix multithreading handling to separate by code units that use/never use it (#4228). [Mariusz Glebocki, Antmicro Ltd.]\n* Fix usage of annotation options (#4486) (#4504). [Michal Czyz]\n* Fix detecting local vars in nested forks (#4493) (#4506). [Kamil Rakoczy]\n* Fix handling input file path separator (#4515) (#4516). [Anthony Donlon]\n* Fix mis-support for parameterized UDPs (#4518). [Anthony Donlon]\n* Fix constant conversion of $realtobits, $bitstoreal (#4522).  [Andrew Nolte]\n* Fix conversion of integers in $display '%e' (#4528). [muzafferkal]\n* Fix non-inlined interface tracing (#3984) (#4530). [Todd Strader]\n* Fix stream operations with operands of struct type (#4531) (#4532). [Ryszard Rozak, Antmicro Ltd.]\n* Fix 'this' in a constructor (#4533). [Ryszard Rozak, Antmicro Ltd.]\n* Fix stream shift operator of 32 bits (#4536). [Julien Faucher]\n* Fix object destruction after a copy constructor (#4540) (#4541). [Ryszard Rozak, Antmicro Ltd.]\n* Fix inlining of real functions miscasting (#4543). [Andrew Nolte]\n* Fix broken link error for enum references (#4551). [Anthony Donlon]\n* Fix logical expressions with class objects - caching in v3Const (#4552). [Ryszard Rozak, Antmicro Ltd.]\n* Fix using functions/tasks following class definition inside module (#4553). [Anthony Donlon]\n* Fix large constant buffer overflow (#4556). [Varun Koyyalagunta]\n* Fix instance arrays connecting to array of structs (#4557). [raphmaster]\n* Fix error message for invalid parameter overrides (#4559). [Anthony Donlon]\n* Fix shift to remove operation side effects (#4563).\n* Fix compile warning on unused member function variable (#4567).\n* Fix method narrowing conversion compiler error (#4568).\n* Fix interface comparison (#4570). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix dynamic triggers for named events (#4571). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix dictionaries with keys of class types (#4576). [Ryszard Rozak, Antmicro Ltd.]\n* Fix to not remap local assign intervals in forks (#4583). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix display optimization ignoring side effects (#4585).\n* Fix PLI/DPI user defined system task/function grammar (#4587) (#4588). [Quentin Corradi]\n* Fix fault on empty clocking block (#4593). [Alex Mykyta]\n* Fix creating implicit nets for inputs of gate primitives (#4603). [Geza Lore]\n* Fix try_put method of unbounded mailbox (#4608). [Ryszard Rozak, Antmicro Ltd.]\n* Fix stable name generation in V3Fork (#4615) (#4624). [Krzysztof Boroński]\n* Fix virtual methods (#4616). [Ryszard Rozak, Antmicro Ltd.]\n* Fix insertion at queue end (#4619). [Krzysztof Boroński]\n* Fix rand fields of reference types (#4627). [Ryszard Rozak, Antmicro Ltd.]\n* Fix dynamic casts of null values (#4631). [Ryszard Rozak, Antmicro Ltd.]\n* Fix signals read via virtual interfaces being misoptimized (#4645). [Krzysztof Bieganski, Antmicro Ltd.]\n* Fix handling of static keyword in methods (#4649). [Ryszard Rozak, Antmicro Ltd.]\n* Fix preprocessor to show `line 2 on resumed file.\n\n\nVerilator 5.016 2023-09-16\n==========================\n\n**Minor:**\n\n* Add prepareClone and atClone APIs for Verilated models (#3503) (#4444). [Yinan Xu]\n* Add check for conflicting options e.g. binary and lint-only (#4409). [Ethan Sifferman]\n* Add --no-trace-top to not trace top signals (#4412) (#4422). [Frans Skarman]\n* Support recursive function calls (#3267).\n* Support assignments of packed values to stream expressions on queues (#4401). [Ryszard Rozak, Antmicro Ltd]\n* Support no-parentheses calls to static methods (#4432). [Krzysztof Boroński]\n* Support block_item_declaration in forks (#4455). [Krzysztof Boroński]\n* Support assignments of stream expressions on queues to packed values (#4458). [Ryszard Rozak, Antmicro Ltd]\n* Support function non-constant default arguments (#4470).\n* Support 'let'.\n* Optimize Verilator executable size by refactoring error reporting routines (#4446). [Anthony Donlon]\n* Optimize Verilation runtime pointers and graphs (#4396) (#4397) (#4398). [Krzysztof Bieganski, Antmicro Ltd]\n* Optimize preparations towards multithreaded Verilation (#4291) (#4463) (#4476) (#4477) (#4479).  [Kamil Rakoczy, Antmicro Ltd]\n* Fix Windows filename format, etc (#3873) (#4421). [Anthony Donlon].\n* Fix t_dist_cppstyle Perl performance issue (#4085). [Srinivasan Venkataramanan]\n* Fix using type in parameterized classes without #() (#4281) (#4440). [Anthony Donlon]\n* Fix false INFINITELOOP on forever..mailbox.get() (#4323). [Srinivasan Venkataramanan]\n* Fix data type of condition operation on class objects (#4345) (#4352). [Ryszard Rozak, Antmicro Ltd]\n* Fix variables mutated under fork..join_none/join_any blocks into anonymous objects (#4356). [Krzysztof Boroński]\n* Fix V3CUse, do not consider implementations (.cpp) at all (#4386). [Krzysztof Boroński]\n* Fix ++/-- under statements (#4399). [Aleksander Kiryk, Antmicro Ltd]\n* Fix detection of mixed blocking and nonblocking assignment in nested assignments (#4404). [Ryszard Rozak, Antmicro Ltd]\n* Fix jumping over object initialization (#4411). [Krzysztof Boroński]\n* Fix multiple issues towards short circuit support (#4413) (#4460). [Ryszard Rozak, Antmicro Ltd]\n* Fix variable lifetimes in extern methods (#4414). [Krzysztof Boroński]\n* Fix multiple function definitions in V3Sched (#4416). [Hennadii Chernyshchyk]\n* Fix false UNUSEDPARAM on generate localparam (#4427). [Bill Pringlemeir]\n* Fix checking for parameter and port connections in the wrong place (#4428). [Anthony Donlon]\n* Fix coroutine handle movement during queue manipulation (#4431). [Aleksander Kiryk, Antmicro Ltd]\n* Fix nested assignments on the LHS (#4435). [Ryszard Rozak, Antmicro Ltd]\n* Fix false MULTITOP on bound interfaces (#4438). [Alex Solomatnikov]\n* Fix internal error on real conversion (#4447). [vdhotre-ventana]\n* Fix lifetime unknown error on enum.name (#4448). [jwoutersymatra]\n* Fix unstable output of VHashSha256 (#4453). [Anthony Donlon]\n* Fix static cast from a stream type (#4469) (#4485). [Ryszard Rozak, Antmicro Ltd]\n* Fix error on enum with VARHIDDEN of cell (#4482). [Michail Rontionov]\n* Fix lint of case statements with enum and wildcard bits (#4464) (#4487). [Anthony Donlon]\n* Fix reference to extended class in parameterized class (#4466).\n* Fix recursive display causing segfault (#4480). [Kuoping Hsu]\n* Fix the error message when the type of ref argument is wrong (#4490). [Ryszard Rozak, Antmicro Ltd]\n* Fix display %x formatting of real.\n* Fix mis-warning on #() in classes' own functions.\n* Fix IGNOREDRETURN to not warn on void-cast static function calls.\n* Fix ZERODLY to not warn on 'wait(0)'.\n\n\nVerilator 5.014 2023-08-06\n==========================\n\n**Minor:**\n\n* Deprecation planned for 32-bit pointer -m32 mode (#4268).\n* Deprecate CMake config below version 3.13 (#4389) (#4390). [Vito Gamberini]\n* Support some stream operations on queues (#4292). [Ryszard Rozak, Antmicro Ltd]\n* Support property declaration with empty parentheses (#4313) (#4317). [Anthony Donlon]\n* Support locator methods with \"with\" on assoc arrays (#4335). [Ryszard Rozak, Antmicro Ltd]\n* Support string replication with variable (#4341). [Aleksander Kiryk, Antmicro Ltd]\n* Support more types in wait (#4374). [Aleksander Kiryk, Antmicro Ltd]\n* Support static method calls as default values of function arguments (#4378). [Ryszard Rozak, Antmicro Ltd]\n* Add GENUNNAMED lint warning. [Srinivasan Venkataramanan, Deepa Palaniappan]\n* Add MISINDENT lint warning for misleading indentation.\n* Fix 'VlForkSync' redeclaration (#4277). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix processes that can outlive their parents (#4253). [Krzysztof Boronski, Antmicro Ltd]\n* Fix duplicate fork names (#4295). [Ryszard Rozak, Antmicro Ltd]\n* Fix splitting coroutines (#4297) (#4307). [Jiamin Zhu]\n* Fix error when multiple duplicate DPI exports (#4301).\n* Fix class reference assignment checking (#4296). [Ryszard Rozak, Antmicro Ltd]\n* Fix handling of ref types in initial values of type parameters (#4304). [Ryszard Rozak, Antmicro Ltd]\n* Fix comparison of string parameters (#4308). [Ryszard Rozak, Antmicro Ltd]\n* Fix state update for always processes (#4311). [Aleksander Kiryk, Antmicro Ltd]\n* Fix multiple edge timing controls in class methods (#4318) (#4320) (#4344). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix implicit calls of base class constructors with optional arguments (#4319). [Ryszard Rozak, Antmicro Ltd]\n* Fix propagation of process requirement (#4321). [Krzysztof Boroński]\n* Fix unhandled overloads in V3InstrCount (#4324). [Krzysztof Boroński]\n* Fix selects of static members (#4326). [Ryszard Rozak, Antmicro Ltd]\n* Fix references to members of results of static methods (#4327). [Ryszard Rozak, Antmicro Ltd]\n* Fix unique..with method on queues of class objects (#4328). [Ryszard Rozak, Antmicro Ltd]\n* Fix queue slicing (#4329). [Aleksander Kiryk, Antmicro Ltd]\n* Fix wildcard referring types (#4336) (#4342). [Aleksander Kiryk, Antmicro Ltd]\n* Fix comparison of class objects (#4346). [Ryszard Rozak, Antmicro Ltd]\n* Fix unexpected RefDType on assoc arrays (#4337). [Aleksander Kiryk, Antmicro Ltd]\n* Fix cmake astgen for Rocky Linux 8.7 (#4343). [Julian Daube]\n* Fix class timescale in class packages (#4348). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix string concatenations (#4354). [Ryszard Rozak, Antmicro Ltd]\n* Fix unlinked task error from broken context (#4355) (#4402). [Aleksander Kiryk, Antmicro Ltd]\n* Fix selects on unpacked structs (#4359). [Ryszard Rozak, Antmicro Ltd]\n* Fix select operation on assoc array with wide keys (#4360). [Ryszard Rozak, Antmicro Ltd]\n* Fix non-public methods with wide output (#4364). [Ryszard Rozak, Antmicro Ltd]\n* Fix handling of super.new calls (#4366). [Ryszard Rozak, Antmicro Ltd]\n* Fix assign to input var in methods (#4367). [Aleksander Kiryk, Antmicro Ltd]\n* Fix VlProcess not found (#4368). [Aleksander Kiryk, Antmicro Ltd]\n* Fix order of evaluation of function calls in statements (#4375). [Ryszard Rozak, Antmicro Ltd]\n* Fix config_build.h issues (#4380) (#4381). [Andrew Miloradovsky]\n\n\nVerilator 5.012 2023-06-13\n==========================\n\n**Major:**\n\n* With -j or --build-jobs, multithread Verilator's emit phase of Verilation. [Kamil Rakoczy, Antmicro Ltd]\n  Additional Verilator-internal stages will become multithreaded over time.\n\n**Minor:**\n\n* Add --main-top-name option for C main TOP name (#4235) (#4249). [Don Williamson]\n* Add creating __inputs.vpp file with --debug (#4177). [Tudor Timi]\n* Add NEWERSTD warning when using feature in newer language standard (#4168) (#4172). [Ethan Sifferman]\n* Add warning that timing controls in DPI exports are unsupported (#4238). [Krzysztof Bieganski, Antmicro Ltd]\n* Support std::process class (#4212). [Aleksander Kiryk, Antmicro Ltd]\n* Support inside expressions with strings and doubles (#4138) (#4139). [Krzysztof Boroński]\n* Support get_randstate/set_randstate class method functions.\n* Support for condition operator on class objects (#4214). [Ryszard Rozak, Antmicro Ltd]\n* Support array max (#4275). [Aleksander Kiryk, Antmicro Ltd]\n* Optimize VPI callValueCbs (#4155). [Hennadii Chernyshchyk]\n* Configure for faster C++ linking using 'mold', if it is installed.\n* Fix crash on duplicate imported modules (#3231). [Robert Balas]\n* Fix false WIDTHEXPAND on array declarations (#3959). [Jose Tejada]\n* Fix marking overridden methods as coroutines (#4120) (#4169). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix SystemC signal copy macro use (#4135). [Josep Sans]\n* Fix duplicate static names in blocks in functions (#4144) (#4160). [Stefan Wallentowitz]\n* Fix initialization order of initial static after function/task (#4159). [Kamil Rakoczy, Antmicro Ltd]\n* Fix linking AstRefDType if it has parameterized class ref (#4164) (#4170). [Ryszard Rozak, Antmicro Ltd]\n* Fix crash caused by $display() optimization (#4165) (#4166). [Tudor Timi]\n* Fix arrays of unpacked structs (#4173). [Risto Pejašinović]\n* Fix $fscanf of decimals overflowing variables (#4174). [Ahmed El-Mahmoudy]\n* Fix super.new missing data type (#4147). [Tudor Timi]\n* Fix missing class forward declarations (#4151). [Krzysztof Boroński]\n* Fix hashes of instances of parameterized classes (#4182). [Ryszard Rozak, Antmicro Ltd]\n* Fix forced assignments that override non-continuous assignments (#4183) (#4192). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix wide structure VL_TOSTRING_W generation (#4188) (#4189). [Aylon Chaim Porat]\n* Fix references to members of parameterized base classes (#4196). [Ryszard Rozak, Antmicro Ltd]\n* Fix tracing undefined alignment (#4201) (#4288) [John Wehle]\n* Fix class-specific same methods for AstVarScope, AstVar, and AstScope (#4203) (#4250). [John Wehle]\n* Fix dotted references in parameterized classes (#4206). [Ryszard Rozak, Antmicro Ltd]\n* Fix bit selections under parameterized classes (#4210). [Ryszard Rozak, Antmicro Ltd]\n* Fix duplicate std:: declaration with -I (#4215). [Harald Pretl]\n* Fix deep traversal of class inheritance timing (#4216). [Krzysztof Boroński]\n* Fix class parameters of enum types (#4219). [Ryszard Rozak, Antmicro Ltd]\n* Fix static methods with prototypes (#4220). [Ryszard Rozak, Antmicro Ltd]\n* Fix LATCH warning on function local variables (#4221) (#4284) [Julien Margetts]\n* Fix VCD scope types (#4227) (#4282). [Àlex Torregrosa]\n* Fix incorrect multi-driven lint warning (#4231) (#4248). [Adrien Le Masle]\n* Fix missing assignment for wide unpacked structs (#4233). [Jiamin Zhu]\n* Fix unpacked struct == and != operators (#4234) (#4240). [Risto Pejašinović]\n* Fix AstStructSel clean when data type is structure (#4241) (#4244). [Risto Pejašinović]\n* Fix function calls in with statements (#4245). [Ryszard Rozak, Antmicro Ltd]\n* Fix operator == for unpacked struct, if elements are VlUnpacked arrays (#4247). [Risto Pejašinović]\n* Fix STATIC lifetime for variables created from clocking items (#4262). [Krzysztof Boroński]\n* Fix names of foreach blocks (#4264). [Ryszard Rozak, Antmicro Ltd]\n* Fix iterated variables in foreach loops to have VAUTOM lifetimes (#4265). [Krzysztof Boroński]\n* Fix missing assignment for wide class members (#4267). [Jiamin Zhu]\n* Fix the global uses timing flag when forks exist (#4274). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix struct redefinition (#4276). [Aleksander Kiryk, Antmicro Ltd]\n* Fix detection of wire/reg duplicates.\n* Fix false IMPLICITSTATIC on package functions.\n* Fix method calls on function return values.\n\n\nVerilator 5.010 2023-04-30\n==========================\n\n**Minor:**\n\n* Add --public-depth to force public to a certain instance depth (#3952). [Andrew Nolte]\n* Add --public-params flag (#3990). [Andrew Nolte]\n* Add CONSTRAINTIGN warning when constraint ignored.\n* Add STATICVAR warning and convert to automatic (#4018) (#4027) (#4030). [Ryszard Rozak, Antmicro Ltd]\n* Add error if class types don't match (#4064). [Ryszard Rozak, Antmicro Ltd]\n* Support class extends of package::class.\n* Support class srandom and class random stability.\n* Support class method calls without parenthesis (#3902) (#4082). [Srinivasan Venkataramanan]\n* Support method calls without parenthesis (#4034). [Ryszard Rozak, Antmicro Ltd]\n* Support parameterized return types of methods (#4122). [Ryszard Rozak, Antmicro Ltd]\n* Support parameterized class references in extends statement (#4146). [Ryszard Rozak, Antmicro Ltd]\n* Support complicated IEEE 'for' assignments.\n* Support $fopen as an expression.\n* Support ++/-- on dotted member variables.\n* Optimize static trigger evaluation (#4142). [Geza Lore, X-EPIC]\n* Optimize more xor trees (#4071). [Yutetsu TAKATSUKASA]\n* Change range order warning from LITENDIAN to ASCRANGE (#4010). [Iztok Jeras]\n* Change ZERODLY to a warning.\n* Fix random internal crashes (#666). [Dag Lem]\n* Fix install, standardization in cmake CMakeLists.txt (#3974). [Yu-Sheng Lin]\n* Fix UNDRIVEN warning seg fault (#3989). [Felix Neumärker]\n* Fix symbol entries when inheriting classes (#3995) (#3996). [Krzysztof Boroński]\n* Fix event controls reusing same variable (#4014). Kamil Rakoczy <krakoczy@antmicro.com>\n* Fix push to dynamic queue in struct (#4015). [ezchi]\n* Fix names for blocks in do..while loop (#4019). [Ryszard Rozak, Antmicro Ltd]\n* Fix randomize on null field (#4023). [Ryszard Rozak, Antmicro Ltd]\n* Fix rand fields in base classes (#4025). [Ryszard Rozak, Antmicro Ltd]\n* Fix large return blocks with --comp-limit-blocks (#4028). [tenghtt]\n* Fix clocking block scope internal error (#4032). [Srinivasan Venkataramanan]\n* Fix false LATCH warning on --assert 'unique else if' (#4033) ($4054). [Jesse Taube]\n* Fix characters from DEFENV literals for Conda (#4035) (#4044). [Tim Snyder]\n* Fix info message prints under --assert (#4036) (#4053). [Srinivasan Venkataramanan]\n* Fix C++ compile errors when passing class refs as task argument (#4063). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix NBAs inside fork-joins (#4050). [Aleksander Kiryk, Antmicro Ltd]\n* Fix task calls as fork statements (#4055). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix _Vilp used before declaration (#4057) (#4062). [Josep Sans]\n* Fix incorrect optimization of bit op tree (#4059) (#4070). [Yutetsu TAKATSUKASA]\n* Fix parameters in a class body to be localparam (#4061). [Ryszard Rozak, Antmicro Ltd]\n* Fix interface generate begin (#4065). [Srinivasan Venkataramanan]\n* Fix tracing with awaits at end of block (#4075) (#4076). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix sense expression variable naming (#4081). [Kamil Rakoczy]\n* Fix importing symbols from base class (#4084). [Ryszard Rozak, Antmicro Ltd]\n* Fix false error on new const assignment (#4098). [Tudor Timi]\n* Fix unpacked structs under classes (#4102). [Tudor Timi]\n* Fix variables in class methods to be automatic (#4111) (#4137). [Peter Monsson]\n* Fix to use parallel build for projects with a lot of files (#4116). [Krzysztof Boroński]\n* Fix including __Syms header in generated C++ files (#4123). [Krzysztof Boroński]\n* Fix systemc namespace issues (#4126) (#4127). [Eyck Jentzsch]\n* Fix class param extends A=B (#4128). [Ryszard Rozak, Antmicro Ltd]\n* Fix missing begin block hierarchy in --xml-only cells section (#4129) (#4133). [Risto Pejašinović]\n* Fix resolution of class lvalues after parameterization (#4131). [Krzysztof Boroński]\n* Fix DFG error on $countbits (#4101) (#4143). [Paul Donahue]\n* Fix duplicating parameter class types (#4115). [Ryszard Rozak, Antmicro Ltd]\n* Fix class extend param references (#4136).  [Ryszard Rozak, Antmicro Ltd]\n* Fix -CFLAGS to allow overriding optimization levels (#4140). [Peter Monsson]\n* Fix DPI function type alias (#4148) (#4149). [Toru Niina]\n* Fix deleting unused parameterized classes (#4150). [Ryszard Rozak, Antmicro Ltd]\n* Fix false ENUMVALUE on expressions and arrays.\n* Fix unnecessary verilated_std.sv waivers in --waiver-output.\n\n\nVerilator 5.008 2023-03-04\n==========================\n\n**Minor:**\n\n* Add --annotate-points option, change multipoint on line reporting (#3876). [Nassim Corteggiani]\n* Add --verilate-jobs option (#3889). [Kamil Rakoczy, Antmicro Ltd]\n* Add WIDTHEXPAND and WIDTHTRUNC warnings to replace WIDTH (#3900). [Andrew Nolte]\n* Add SOURCE_DATE_EPOCH for docs/guide/conf.py (#3918). [Larry Doolittle]\n* Add /*verilator public[flat|flat_rd|flat_rw| ]*/ metacomments (#3894). [Joseph Nwabueze]\n* Add lint warning on always_comb multidriven (#3888) (#3939). [Adam Bagley]\n* Add warning on ++/-- over expressions with potential side effects (#3976). [Krzysztof Boroński]\n* Add error on mixing .name and by-port instantiations.\n* Removed deprecated --cdc option.\n* Support unpacked unions.\n* Support interface classes and class implements.\n* Support global clocking and $global_clock.\n* Support class parameters without initial values.\n* Support cast to numbers from strings.\n* Support struct I/O in --lib-create (#3378) (#3892). [Varun Koyyalagunta]\n* Support function calls without parenthesis (#3903) (#3902). [Ryszard Rozak, Antmicro Ltd]\n* Support class extending its parameter (#3904). [Ryszard Rozak, Antmicro Ltd]\n* Support static function variables (#3830). [Ryszard Rozak, Antmicro Ltd]\n* Support recursive methods (#3987). [Ryszard Rozak, Antmicro Ltd]\n* Fix real parameters of infinity and NaN.\n* Fix pattern assignment to unpacked structs (#3510). [Mostafa Garnal]\n* Fix single-element replication to dynarray/unpacked/queue (#3548). [Gustav Svensk]\n* Fix constant enum methods (#3621). [Todd Strader]\n* Fix inconsistent naming of generate scope arrays (#3840). [Andrew Nolte]\n* Fix namespace fallback resolution (#3863) (#3942). [Aleksander Kiryk, Antmicro Ltd]\n* Fix std:: to be parsed first (#3864) (#3928). [Aleksander Kiryk, Antmicro Ltd]\n* Fix cmake warning if multiple SOURCES w/o PREFIX (#3916) (#3927). [Yoda Lee]\n* Fix parameterized class function linkage (#3917). [Ryszard Rozak]\n* Fix static members of type aliases of a parameterized class (#3922). [Ryszard Rozak, Antmicro Ltd]\n* Fix class extend parameter dot case (#3926). [Ryszard Rozak, Antmicro Ltd]\n* Fix MsWin missing directory exception, and ::std (#3928) (#3933) (#3935). [Kritik Bhimani]\n* Fix very long VPI signal names (#3929). [Marlon James]\n* Fix VPI upper interface scopes not found (#3937). [David Stanford]\n* Fix virus detection false positive (#3944). [Stuart Morris]\n* Fix constant string function assignment (#3945). [Todd Strader]\n* Fix constant format field widths (#3946). [Todd Strader]\n* Fix class field linking when a super classes is a param (#3949). [Ryszard Rozak, Antmicro Ltd]\n* Fix CMake bad C identifiers (#3948) (#3951). [Zixi Li]\n* Fix build on HP PA architecture (#3954). [John David Anglin]\n* Fix date on the front page of verilator.pdf (#3956) (#3957). [Larry Doolittle]\n* Fix associative arrays declared with ref type (#3960). [Ryszard Rozak, Antmicro Ltd]\n* Fix missing error on negative replicate (#3963). [Benjamin Menküc]\n* Fix self references to parameterized classes (#3962). [Ryszard Rozak, Antmicro Ltd]\n* Fix LITENDIAN warning is backwards (#3966) (#3967). [Cameron Kirk]\n* Fix subsequent parameter declarations (#3969). [Ryszard Rozak, Antmicro Ltd]\n* Fix timing delays to not truncate below 64 bits (#3973) (#3982). [Felix Neumärker]\n* Fix cmake on MacOS to mark weak symbols with -U linker flag (#3978) (#3979). [Peter Debacker]\n* Fix UNDRIVEN warning seg fault (#3989). [Felix Neumärker]\n* Fix coverage of class methods (#3998). [Tim Paine]\n* Fix packed array structure replication.\n* Fix enum.next(0) and enum.prev(0).\n\n\nVerilator 5.006 2023-01-22\n==========================\n\n**Minor:**\n\n* Support clocking blocks (#3674). [Krzysztof Bieganski, Antmicro Ltd]\n* Support unpacked structs (#3802). [Aleksander Kiryk, Antmicro Ltd]\n* Support Windows-native builds using cmake (#3814). [Kritik Bhimani]\n* Support p format for UnpackArray (#3877). [Aleksander Kiryk, Antmicro Ltd]\n* Support property calls without parenthesis (#3879) (#3893). [Ryszard Rozak, Antmicro Ltd]\n* Support import/export lists in modport (#3886). [Gökçe Aydos]\n* Support class queue equality (#3895). [Ilya Barkov]\n* Support type case and type equality comparisons.\n* Add IMPLICITSTATIC warning when a task/function is implicitly static (#3839). [Ryszard Rozak, Antmicro Ltd]\n* Add VL_VALUE_STRING_MAX_WORDS override (#3869). [Andrew Nolte]\n* Optimize expansion of extend operators.\n* Internal multithreading tests. [Mariusz Glebocki, et al, Antmicro Ltd]\n* Fix VPI one-time timed callbacks (#2778). [Marlon James, et al]\n* Fix initiation of function variables (#3815). [Dan Gisselquist]\n* Fix to zero possibly uninitialized bits in replications (#3815).\n* Fix crash in DFT due to width use after free (#3817) (#3820). [Jevin Sweval]\n* Fix signed/unsigned comparison compile warning (#3822). [Kamil Rakoczy]\n* Fix OS-X weak symbols with -U linker flag (#3823). [Jevin Sweval]\n* Fix wrong bit op tree optimization (#3824) (#3825). [Yutetsu TAKATSUKASA]\n* Fix self references when param class instantiated (#3833). [Ryszard Rozak, Antmicro Ltd]\n* Fix memory leak in V3Sched, etc. (#3834). [Geza Lore]\n* Fix compatibility with musl libc / Alpine Linux (#3845). [Sören Tempel]\n* Fix empty case items crash (#3851). [Rich Porter]\n* Fix VL_CPU_RELAX on MIPS/Armel/s390/sparc (#3843) (#3891). [Kamil Rakoczy]\n* Fix module parameter name collision (#3854) (#3855). [James Shi]\n* Fix unpacked array expansion (#3861). [Joey Liu]\n* Fix signed/unsigned parameter types (#3866). [James Shi]\n* Fix chain call of abstract class constructor (#3868) (#3883). [Ilya Barkov]\n* Fix to use same std in Verilator and Verilated compile (#3881). [Kamil Rakoczy, Antmicro Ltd]\n* Fix foreach unnamedblk duplicate error (#3885). [Ilya Barkov]\n* Fix elaboration of member selected classes (#3890). [Ilya Barkov]\n* Fix mismatched widths in DFG (#3872). [Geza Lore, Yike Zhou]\n* Fix lint for non-integral types in packed structs.\n* Fix generate case with empty body statements.\n\n\nVerilator 5.004 2022-12-14\n==========================\n\n**Major:**\n\n* Support named properties (#3667). [Ryszard Rozak, Antmicro Ltd]\n* Add ENUMVALUE warning when value misused for enum (#726) (#3777) (#3783).\n* Deprecate --no-threads; use --threads 1 for single threaded (#3703). [Kamil Rakoczy, Antmicro Ltd]\n\n**Minor:**\n\n* Support std::semaphore and typed std::mailbox (#3708). [Krzysztof Bieganski, Antmicro Ltd]\n* Support 'with' in unique, unique_index, min, max in queues (#3772). [Ryszard Rozak, Antmicro Ltd]\n* Support events in VCD/FST traces (#3759). [Yves Mathieu]\n* Support foreach loops on strings (#3760). [Ryszard Rozak, Antmicro Ltd]\n* Support member selects in with clauses (#3775). [Ryszard Rozak, Antmicro Ltd]\n* Support super.new calls (#3789). [Ryszard Rozak, Antmicro Ltd]\n* Support randcase.\n* Support pre_randomize and post_randomize.\n* Support $timeunit and $timeprecision.\n* Support assignment expressions.\n* Change ENDLABEL from warning into an error.\n* Internal AST improvements, also affect XML format (#3721). [Geza Lore]\n* Deprecate verilated_fst_sc.cpp and verilated_vcd_sc.cpp.\n* Disable stack size limit (#3706) (#3751). [Mariusz Glebocki]\n* Add error when use --exe with --lib-create (#3785). [Yinan Xu]\n* Fix jump handling in do while loops (#3731). [Ryszard Rozak, Antmicro Ltd]\n* Fix 'with' clause handling in functions (#3739). [Ryszard Rozak, Antmicro Ltd]\n* Fix CONTEXT compile error on MingW (#3741). [William D. Jones]\n* Fix MSVC compiler errors (#3742) (#3746). [Kritik Bhimani]\n* Fix CASEINCOMPLETE when covers all enum values (#3745) (#3782). [Guy-Armand Kamendje]\n* Fix return type of $countbits functions to int (#3725). [Ryszard Rozak, Antmicro Ltd]\n* Fix timing control in while-break loops (#3733) (#3769). [Ryszard Rozak, Antmicro Ltd]\n* Fix return in constructors (#3734). [Ryszard Rozak, Antmicro Ltd]\n* Fix missing UNUSED warnings with --coverage (#3736). [alejandro-castro-ortegon]\n* Fix tracing parameters overridden with -G (#3723). [Iztok Jeras]\n* Fix folding of LogAnd with non-bool operands (#3726). [Geza Lore]\n* Fix DFG optimization issues (#3740) (#3771). [Geza Lore]\n* Fix pre/postincrement operations (#3744) (#3756). [Ryszard Rozak, Antmicro Ltd]\n* Fix cross-compile for MingW, Arm and RISC-V (#3752). [Miodrag Milanović]\n* Fix $unit as base package for other packages (#3755). [Ryszard Rozak, Antmicro Ltd]\n* Fix make jobserver with submakes (#3758). [Gus Smith]\n* Fix to escape VERILATOR_ROOT file paths (#3764) (#3765). [Jiacheng Qian]\n* Fix empty string literals converting to string types (#3774). [miree]\n* Fix to remove $date from .vcd files (#3779). [Larry Doolittle]\n* Fix missing user objects in --lib-create mode (#3780) (#3784). [Yinan Xu]\n* Fix non-blocking assignments in forks (#3781) (#3800). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix forks without any delayed statements (#3792) (#3801). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix internal error in bit op tree optimization (#3793). [Yutetsu TAKATSUKASA]\n* Fix lint_off EOFNEWLINE in .vlt files (#3796). [Andrew Nolte]\n* Fix wait 0.\n* Fix comparing ranged slices of unpacked arrays.\n\n\nVerilator 5.002 2022-10-29\n==========================\n\n**Major:**\n\n* This is a major new release.\n* Require C++20 for the new --timing features. Upgrading to a C++20 or\n  newer compiler is strongly recommended.\n* Support the Active and NBA scheduling regions as defined by the\n  SystemVerilog standard (IEEE 1800-2017 chapter 4). This means all generated\n  clocks are now simulated correctly (#3278, #3384). [Geza Lore, Shunyao CAD]\n* Support timing controls (delays, event controls in any location, wait\n  statements) and forks. [Krzysztof Bieganski, Antmicro Ltd]\n  This may require adding --timing or --no-timing. See docs for details.\n* Introduce a new combinational logic optimizer (DFG), that can yield\n  significant performance improvements on some designs. [Geza Lore, Shunyao CAD]\n* Add --binary option as alias of --main --exe --build --timing (#3625).\n  For designs where C++ was only used to make a simple no-I/O testbench, we\n  recommend abandoning that C++, and instead letting Verilator build it\n  with --binary (or --main).\n\n**Minor:**\n\n* Split UNUSED warning into genvar, param, and signal warnings (#3607). [Topa Topino]\n* Support standalone 'this' in classes (#2594) (#3248) (#3675). [Arkadiusz Kozdra, Antmicro Ltd]\n* Support tristate select/extend (#3604). [Ryszard Rozak, Antmicro Ltd>\n* Support linting for top module interfaces (#3635). [Kanad Kanhere]\n* Support virtual interfaces (#3654). [Arkadiusz Kozdra, Antmicro Ltd]\n* Support class type params without defaults (#3693). [Krzysztof Bieganski, Antmicro Ltd]\n* Support empty generate_regions (#3695). [mpb27]\n* Support access to constructs inside type parameters (#3702). [Arkadiusz Kozdra, Antmicro Ltd]\n* Add --dump-tree-dot to enable dumping Ast Tree .dot files (#3636). [Marcel Chang]\n* Add --get-supported to determine what features are in Verilator.\n* Add error on real edge event control.\n* Fix false LATCH warning on 'unique if' (#3088). [Rachit Nigam]\n* Fix cell assigning integer array parameters (#3299). [Michael Platzer]\n* Fix LSB error on --hierarchical submodules (#3539). [danbone]\n* Fix $display of fixed-width numbers (#3565). [Iztok Jeras]\n* Fix foreach and pre/post increment in functions (#3613). [Nandu Raj]\n* Fix linker errors in user-facing timing functions (#3657). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix null access on optimized-out fork statements (#3658). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix VPI inline module naming mismatch (#3690) (#3694). [Jiuyang Liu]\n* Fix deadlock in timeprecision when using SystemC (#3707). [Kamil Rakoczy, Antmicro Ltd]\n* Fix width mismatch on inside operator (#3714). [Àlex Torregrosa]\n\n\nVerilator 4.228 2022-10-01\n==========================\n\n**Announcement:**\n\n* The next release is anticipated to premiere Verilator Version 5.  Please\n  consider beta-testing the github 'develop-v5' branch, which will soon\n  merge into the github 'master' branch (#3383).\n\n**Minor:**\n\n* Support some IEEE signal strengths (#3601) (#3629). [Ryszard Rozak, Antmicro Ltd]\n* Add --main to generate main() C++ (previously was experimental only).\n* Add --build-jobs, and rework arguments for -j (#3623). [Kamil Rakoczy]\n* Rename --bin to --build-dep-bin.\n* Rename debug flags --dumpi-tree, --dumpi-graph, etc. [Geza Lore]\n* Fix thread safety in SystemC VL_ASSIGN_SBW/WSB (#3494) (#3513). [Mladen Slijepcevic]\n* Fix crash in gate optimization of circular logic (#3543). [Bill Flynn]\n* Fix arguments in non-static method call (#3547) (#3582). [Gustav Svensk]\n* Fix default --mod-prefix when --prefix is repeated (#3603). [Geza Lore]\n* Fix calling trace() after open() segfault (#3610) (#3627). [Yu-Sheng Lin]\n* Fix typedef'ed class conversion to Boolean (#3616). [Aleksander Kiryk]\n* Fix Verilation speed when disabled warnings (#3632). [Kamil Rakoczy, Antmicro Ltd]\n\n\nVerilator 4.226 2022-08-31\n==========================\n\n**Minor:**\n\n* Add --future0 and --future1 options.\n* Support class parameters (#2231) (#3541). [Arkadiusz Kozdra, Antmicro Ltd]\n* Support wildcard index associative arrays (#3501). [Arkadiusz Kozdra, Antmicro Ltd]\n* Support negated properties (#3572). [Aleksander Kiryk]\n* Support $test$plusargs(expr) (#3489).\n* Rename trace rolloverSize() (#3570).\n* Improve Verilation speed with --threads on large designs. [Geza Lore]\n* Improve Verilation memory by reducing V3Number (#3521). [Mariusz Glebocki, Antmicro Ltd]\n* Fix struct pattern assignment (#2328) (#3517). [Mostafa Gamal]\n* Fix public combo propagation issues (#2905). [Todd Strader]\n* Fix incorrect tristate logic (#3399) [shareefj, Vighnesh Iyer]\n* Fix incorrect bit op tree optimization (#3470). [algrobman]\n* Fix bisonpre for MSYS2 (#3471).\n* Fix max memory usage (#3483). [Kamil Rakoczy, Antmicro Ltd]\n* Fix empty string arguments to display (#3484). [Grulfen]\n* Fix table optimizing away display (#3488). [Stefan Post]\n* Fix unique_ptr memory header for MinGW64 (#3493).\n* Fix $dump system task with --output-split-cfuncs (#3495) (#3497). [Varun Koyyalagunta]\n* Fix wrong bit op tree optimization (#3509). [Nathan Graybeal]\n* Fix nested default assignment for struct pattern (#3511) (#3524). [Mostafa Gamal]\n* Fix sformat string incorrectly cleared (#3515) (#3519). [Gustav Svensk]\n* Fix segfault exporting non-existent package (#3535).\n* Fix void-cast queue pop_front or pop_back (#3542) (#3364). [Drew Ranck]\n* Fix case statement comparing string literal (#3544). [Gustav Svensk]\n* Fix === with some tristate constants (#3551). [Ryszard Rozak, Antmicro Ltd]\n* Fix converting classes to string (#3552). [Arkadiusz Kozdra, Antmicro Ltd]\n* Fix --hierarchical with order-based pin connections (#3583) (#3585). [Kelin9298]\n\n\nVerilator 4.224 2022-06-19\n==========================\n\n**Major:**\n\n* VCD tracing is now parallelized with --threads (#3449). [Geza Lore, Shunyao CAD]\n\n**Minor:**\n\n* Add -f<optimization> options to replace -O<letter> options (#3436).\n* Changed --no-merge-const-pool to -fno-merge-const-pool (#3436).\n* Changed --no-decoration to remove output whitespace (#3460). [Kamil Rakoczy]\n* Support compile time trace signal selection with tracing_on/off (#3323). [Shunyao CAD]\n* Support non-ANSI interface port declarations (#3439). [Geza Lore, Shunyao CAD]\n* Support concat assignment to packed array (#3446).\n* Improve conditional merging optimization (#3125). [Geza Lore, Shunyao CAD]\n* Define VM_TRACE_VCD when tracing in VCD format. [Geza Lore, Shunyao CAD]\n* Add assert when VerilatedContext is mis-deleted (#3121). [Rupert Swarbrick]\n* Internal prep work towards timing control. [Krzysztof Bieganski, Antmicro Ltd]\n* Fix hang with large case statement optimization (#3405). [Mike Urbach]\n* Fix UNOPTFLAT warning from initial static var (#3406). [Kamil Rakoczy]\n* Fix compile error when enable VL_LEAK_CHECKS (#3411). [HungMingWu]\n* Fix cmake rules to support higher-level targets (#3377) (#3386). [Martin Stadler]\n* Fix BLKANDNBLK on $readmem/$writemem (#3379). [Alex Solomatnikov]\n* Fix 'with' operator with type casting (#3387). [xiak95]\n* Fix incorrect conditional merging (#3409). [Raynard Qiao]\n* Fix passing VL_TRACE_FST_WRITER_THREAD in CMake build. [Geza Lore, Shunyao CAD]\n* Fix compile error under strict C++11 mode (#3463). [Kevin Kiningham]\n* Fix public unpacked input ports (#3465). [Todd Strader]\n\n\nVerilator 4.222 2022-05-02\n==========================\n\n**Minor:**\n\n* Split --prof-threads into --prof-exec and --prof-pgo (#3365). [Geza Lore, Shunyao CAD]\n* Deprecate 'vluint64_t' and similar types (#3255).\n* Raise error on assignment to const in initial blocks. [Geza Lore, Shunyao CAD]\n* Issue INITIALDLY/COMBDLY/BLKSEQ warnings consistent with Verilator execution. [Geza Lore, Shunyao CAD]\n* Support LoongArch ISA multithreading (#3353) (#3354). [Xi Zhang]\n* Fix MSVC localtime_s (#3124).\n* Fix Bison 3.8.2 error (#3366). [elike-ypq]\n* Fix rare bug in -Oz (V3Localize) (#3286). [Geza Lore, Shunyao CAD]\n* Fix tracing interfaces inside interfaces (#3309). [Kevin Millis]\n* Fix filenames with dots overwriting debug .vpp files (#3373).\n* Fix including VK_USER_OBJS in make library (#3370) (#3382). [Julien Margetts]\n* Fix hang in generate symbol references (#3391) (#3398). [Yoda Lee]\n* Fix missing #include <memory> (#3392). [Aliaksei Chapyzhenka]\n* Fix crash in recursive module inlining (#3393). [david-sawatzke]\n* Fix --protect-ids mangling names of library methods. [Geza Lore, Shunyao CAD]\n* Fix foreach segmentation fault (#3400). [Kamil Rakoczy]\n\n\nVerilator 4.220 2022-03-12\n==========================\n\n**Minor:**\n\n* Removed the deprecated lint_off flag -msg; use -rule instead.\n* Removed the deprecated \"fl\" attribute in XML output; use \"loc\" attribute instead.\n* Suppress WIDTH warning on negate using carry bit (#3295). [Peter Monsson]\n* Add trace dumpvars() call for selective runtime tracing (#3322). [Shunyao CAD]\n* Add VERILATOR_VERSION_INTEGER for determining API (#3343). [Larry Doolittle]\n* Improve various V3Combine algorithm details (#3328). [Yutetsu TAKATSUKASA]\n* Improve various V3Order algorithm details. [Geza Lore]\n* Fix MacOS arm64 build (#3285) (#3291). [Guokai Chen]\n* Fix signed number operation (#3294) (#3308). [Raynard Qiao]\n* Fix FST traces to include vector range (#3296) (#3297). [Jamie Iles]\n* Fix skipping public enum values with four-state values (#3303).\n* Fix $readmem file not found to be warning not error (#3310). [Alexander Grobman]\n* Fix class stringification on wide arrays (#3312). [Iru Cai]\n* Fix $fscanf etc to return -1 on EOF (#3313). [Jose Tejada]\n* Fix public function arguments that are arrayed (#3316). [pawel256]\n* Fix unnamedblk error on foreach (#3321). [Aliaksei Chapyzhenka]\n* Fix crash in recursive module inlining (#3324). [Larry Doolittle]\n* Fix VL_RESTORER behavior on passing a lvalue reference (#3326). [HungMingWu]\n* Fix compile error with --trace-fst --sc (#3332). [leavinel]\n* Fix cast to array types (#3333). [Todd Strader]\n* Fix Vdeeptemp error with --threads and --compiler clang (#3338). [Per Karlsson]\n\n\nVerilator 4.218 2022-01-17\n==========================\n\n**Major:**\n\n* Primary inputs and outputs (VL_INW/VL_OUTW) now use VlWide type.\n  In general this should be backward compatible, but may lead to some\n  wrapper code needing changes.\n* Option --cdc is deprecated and is planned for removal,\n  file a bug if this is still being used.\n\n**Minor:**\n\n* Support class static members (#2233).\n* Support force/release (#2431) (#2593). [Shunyao CAD]\n* Add 'forceable' attribute to allow forcing from C++. (#3272). [Geza Lore, Shunyao CAD]\n* Support lower dimension looping in foreach loops (#3172). [Ehab Ibrahim]\n* Support up to 64 bit enums for .next/.prev/.name (#3244). [Alexander Grobman]\n* Reduce .rodata footprint of trace initialization (#3250). [Geza Lore, Shunyao CAD]\n* Support FST tracing in hierarchical Verilation (#3251). [Yutetsu TAKATSUKASA]\n* Use C++11 standard types for MacOS portability (#3254) (#3257). [Adrien Le Masle]\n* Fix make support for BSD ar (#2999) (#3256). [Julie Schwartz]\n* Fix bad ending address on $readmem (#3205). [Julie Schwartz]\n* Fix MSWIN compile error (#2681). [Unai Martinez-Corral]\n* Fix break under foreach loop (#3230).\n* Fix VL_STREAML_FAST_QQI with 64 bit left-hand-side (#3232) (#3235). [Adrien Le Masle]\n* Fix $sformat of inputs/outputs (#3236). [Adrien Le Masle]\n* Fix associative array first method as statement (#3228). [Adrien Le Masle]\n* Fix associative array foreach loop (#3229).\n* Fix $fclose not accepting expressions (#3237). [Julie Schwartz]\n* Fix $random not updating seed (#3238). [Julie Schwartz]\n* Fix top level param overwrite when package has same param (#3241) (#3247). [Adrien Le Masle]\n* Fix spurious UNUSED by ignoring inout pin connections (#3242). [Julie Schwartz]\n* Fix splitting of _eval and other top level functions. [Geza Lore, Shunyao CAD]\n* Fix internal error by inout port (#3258). [Yutetsu TAKATSUKASA]\n* Fix GCC 11 compile error (#3273). [HungMingWu]\n\n\nVerilator 4.216 2021-12-05\n==========================\n\n**Major:**\n\n* Add --lib-create, similar to --protect-lib but without protections.\n* Support tracing through --hierarchical/--lib-create libraries (#3200).\n\n**Minor:**\n\n* Internal code cleanups and improvements. [Geza Lore]\n* Improve --thread Verilation-time performance.\n* Support task name in $display %m (#3211). [Julie Schwartz]\n* Make 'bit', 'logic' and 'time' types unsigned by default. [Geza Lore]\n* Optimize $random concatenates/selects (#3114).\n* Fix array method names with parenthesis (#3181) (#3183). [Teng Huang]\n* Fix split_var assign merging (#3177) (#3179). [Yutetsu TAKATSUKASA]\n* Fix wrong bit op tree optimization (#3185). [Yutetsu TAKATSUKASA]\n* Fix some SliceSels not being constants (#3186) (#3218). [Michaël Lefebvre]\n* Fix nested generate if genblk naming (#3189). [yanx21]\n* Fix hang on recursive definition error (#3199). [Jonathan Kimmitt]\n* Fix display of signed without format (#3204). [Julie Schwartz]\n* Fix display of empty string constant (#3207) (#3215). [Julie Schwartz]\n* Fix incorrect width after and-or optimization (#3208). [Julie Schwartz]\n* Fix $fopen etc on integer arrays (#3214). [adrienlemasle]\n* Fix $size on dynamic strings (#3216).\n* Fix %0 format on $value$plusargs (#3217).\n* Fix timescale portability on Arm64 (#3222).\n\n\nVerilator 4.214 2021-10-17\n==========================\n\n**Major:**\n\n* Add profile-guided optimization of mtasks (#3150).\n\n**Minor:**\n\n* Verilator_gantt has removed the ASCII graphics, use the VCD output instead.\n* Verilator_gantt now shows the predicted mtask times, eval times, and additional statistics.\n* Verilator_gantt data files now include processor information, to allow later processing.\n* Support displaying x and z in $display task (#3107) (#3109). [Iru Cai]\n* Fix verilator_profcfunc profile accounting (#3115).\n* Fix display has no time units on class function (#3116). [Damien Pretet]\n* Fix removing if statement with side effect in condition (#3131). [Alexander Grobman]\n* Fix --waiver-output for multiline warnings (#2429) (#3141). [Keith Colbert]\n* Fix internal error on bad widths (#3140) (#3145). [Zhanglei Wang]\n* Fix crash on clang 12/13 (#3148). [Kuoping Hsu]\n* Fix cygwin compile error due to missing -std=gnu++14 (#3149). [Sun Kim]\n* Fix $urandom_range when the range is 0 ... UINT_MAX (#3161). [Iru Cai]\n* Fix constructor-parameter argument comma-separation in C++ (#3162). [Matthew Ballance]\n* Fix missing install of vl_file_copy/vl_hier_graph (#3165). [Popolon]\n* Fix calling new with arguments in same class (#3166). [Matthew Ballance]\n* Fix false EOFNEWLINE warning when DOS carriage returns present (#3171).\n\n\nVerilator 4.212 2021-09-01\n==========================\n\n**Minor:**\n\n* Fix re-evaluation of logic dependent on state set in DPI exports (#3091). [Geza Lore]\n* Support unpacked array localparams in tasks/functions (#3078). [Geza Lore]\n* Support timeunit/timeprecision in $unit.\n* Support assignment patterns as children of pins (#3041). [Krzysztof Bieganski, Antmicro Ltd]\n* Add --instr-count-dpi to tune assumed DPI import cost for multithreaded\n  model scheduling. Default value changed to 200 (#3068). [Yinan Xu]\n* Output files are split based on the set of headers required\n  in order to aid incremental compilation via ccache (#3071). [Geza Lore]\n* Parameter values are now emitted as 'static constexpr' instead of enum.\n  C++ direct references to parameters might require updating (#3077). [Geza Lore]\n* Refactored Verilated include files; include verilated.h not verilated_heavy.h.\n* Add header guards on Dpi.h generated files (#2979). [Tood Strader]\n* Add XML ccall, constpool, initarray, and if/while begins (#3080). [Steven Hugg]\n* Add error when constant function under a generate (#3103). [Don Owen]\n* Fix -G to treat simple integer literals as signed (#3060). [Anikin1610]\n* Fix emitted string array initializers (#2895). [Iztok Jeras]\n* Fix bitop tree optimization dropping necessary & operator (#3096). [Flavien Solt]\n* Fix internal error on wide -x-initial unique (#3106). [Alexandre Joannou]\n* Fix traces to show array instances with brackets (#3092) (#3095). [Pieter Kapsenberg]\n\n\nVerilator 4.210 2021-07-07\n==========================\n\n**Major:**\n\n* Generated code is now emitted as global functions rather than methods. '$c'\n  contents might need to be updated, see the docs (#3006). [Geza Lore]\n* The generated model class instantiated by the user is now an interface\n  object and no longer the TOP module instance.  User code with direct\n  C++ member access to model internals, including verilator public_flat\n  items will likely need to be updated. See the manual for instructions:\n  https://verilator.org/guide/latest/connecting.html#porting-from-pre-4-210\n  (#3036). [Geza Lore]\n\n**Minor:**\n\n* Add --prof-c to pass profiling to compiler (#3059). [Alexander Grobman]\n* Optimize a lot more model variables into function locals (#3027). [Geza Lore]\n* Support middle-of-design nested top modules (#3026). [Dan Petrisko]\n* Remove deprecated --no-relative-cfuncs option (#3024). [Geza Lore]\n* Remove deprecated --inhibit-sim option (#3035). [Geza Lore]\n* Merge const static data globally into a new constant pool (#3013). [Geza Lore]\n* Allow configure override of AR program (#2999). [ahouska]\n* In XML, show pinIndex information (#2877). [errae233]\n* Fix error on unsupported recursive functions (#2957). [Trefor Southwell]\n* Fix type parameter specialization when struct names are same (#3055). [7FM]\n* Improve speed of table optimization (-OA) pass. [Geza Lore]\n\n\nVerilator 4.204 2021-06-12\n==========================\n\n**Minor:**\n\n* Add 'make ccache-report' (#3011). [Geza Lore]\n* Add --reloop-limit argument (#2943) (#2960). [Geza Lore]\n* Add --expand-limit argument (#3005). [Julien Margetts]\n* Add TRACE_THREADS to CMake (#2934). [Jonathan Drolet]\n* Optimize large lookup tables to static data (#2925). [Geza Lore]\n* Optimize reloop to accept constant index offsets (#2939). [Geza Lore]\n* Split always blocks to better respect --output-split-cfuncs. [Geza Lore]\n* Support ignoring \"`pragma protect ...\" (#2886). [Udi Finkelstein]\n* Support --trace-fst for SystemC with CMake (#2927). [Jonathan Drolet]\n* Update cmake latest C++ Standard Compilation flag (#2951). [Ameya Vikram Singh]\n* Prep work towards better ccache hashing/performance. [Geza Lore]\n* Fix assertion failure in bitOpTree optimization (#2891) (#2899). [Raynard Qiao]\n* Fix DPI functions not seen as vpiModule (#2893). [Todd Strader]\n* Fix bounds check in VL_SEL_IWII (#2910). [Krzysztof Bieganski, Antmicro Ltd]\n* Fix slowdown in elaboration (#2911). [Nathan Graybeal]\n* Fix initialization of assoc in assoc array (#2914). [myftptoyman]\n* Fix make support for gmake 3.x (#2920) (#2921). [Philipp Wagner]\n* Fix VPI memory access for packed arrays (#2922). [Todd Strader]\n* Fix MCD close also closing stdout (#2931). [Alexander Grobman]\n* Fix split procedures to better respect --output-split-cfuncs (#2942). [Geza Lore]\n* Fix to emit 'else if' without nesting (#2944). [Geza Lore]\n* Fix part select issues in LATCH warning (#2948) (#2938). [Julien Margetts]\n* Fix to not emit empty files with low split limits (#2961). [Geza Lore]\n* Fix merging of assignments in C++ code (#2970). [Rupert Swarbrick]\n* Fix unused variable warnings (#2991). [Pieter Kapsenberg]\n* Fix --protect-ids when using SV classes (#2994). [Geza Lore]\n* Fix constant function calls with uninitialized value (#2995). [yanx21]\n* Fix Makefiles to support Windows EXEEXT usage (#3008). [Miodrag Milanovic]\n\n\nVerilator 4.202 2021-04-24\n==========================\n\n**Major:**\n\n* Documentation has been rewritten into a book format.\n* Verilated signals now use VlWide and VlPacked in place of C arrays.\n\n**Minor:**\n\n* Add an URL on warnings to point to the manual's description.\n* Add EOFNEWLINE warning when missing a newline at EOF.\n* Changed TIMESCALEMOD from error into a warning.\n* Mark --no-relative-cfuncs as scheduled for deprecation.\n* Add --coverage-max-width (#2853). [xuejiazidi]\n* Add VerilatedCovContext::forcePerInstance (#2793). [Kevin Laeufer]\n* Add FST SystemC tracing (#2806). [Àlex Torregrosa]\n* Add PINNOTFOUND warning in place of error (#2868). [Udi Finkelstein]\n* Support overlaps in priority case statements (#2864). [Rupert Swarbrick]\n* Support for null ports (#2875). [Udi Finkelstein]\n* Fix class unpacked-array compile error (#2774). [Iru Cai]\n* Fix scope types in FST and VCD traces (#2805). [Àlex Torregrosa]\n* Fix exceeding command-line ar limit (#2834). [Yinan Xu]\n* Fix false $dumpfile warning on model save (#2834). [Yinan Xu]\n* Fix --timescale-override not suppressing TIMESCALEMOD (#2838). [Kaleb Barrett]\n* Fix false TIMESCALEMOD on generate-ignored instances (#2838). [Kaleb Barrett]\n* Fix --output-split with class extends (#2839). [Iru Cai]\n* Fix false WIDTHCONCAT on casted constant (#2849). [Rupert Swarbrick]\n* Fix tracing of long hashed names (#2854). [Graham Rushton]\n* Fix --public-flat-rw / DPI issue (#2858). [Todd Strader]\n* Fix interface localparam access (#2859). [Todd Strader]\n* Fix Cygwin example compile issues (#2856). [Mark Shaw]\n* Fix select of with index variable (#2880). [Alexander Grobman]\n* Fix cmake version number to be numeric (#2881). [Yuri Victorovich]\n* Fix MinGW not supporting 'localtime_r' (#2882). [HyungKi Jeong]\n* Fix cast from packed, typedef'ed interface signal (#2884). [Todd Strader]\n* Fix VPI package reported as vpiModule (#2885). [Todd Strader]\n* Fix dumping waveforms to multiple FST files (#2889). [David Metz]\n* Fix assertion failure in bitOpTree (#2892). [Yutetsu TAKATSUKASA]\n* Fix V3Premit infinite loop on always read-and-write (#2898). [Raynard Qiao]\n* Fix VPI packed vectors (#2900). [Todd Strader]\n* Fix VPI public interface parameters (#2901). [Todd Strader]\n\n\nVerilator 4.200 2021-03-12\n==========================\n\n**Announcement:**\n\n* --inhibit-sim is planned for deprecation, file a bug if this is still being used.\n\n**Major:**\n\n* Add simulation context (VerilatedContext) to allow multiple fully independent\n  models to be in the same process. Please see the updated examples. (#2660)\n* Add context->time() and context->timeInc() API calls, to set simulation time.\n  These now are recommended in place of the legacy sc_time_stamp().\n\n**Minor:**\n\n* Converted Asciidoc documentation into reStructuredText (RST) format.\n* Fix range inheritance on port without data type (#2753). [Embedded Go]\n* Fix slice-assign overflow (#2803) (#2811). [David Turner]\n* Fix interface array connection ordering broken in v4.110 (#2827). [Don Owen]\n* Fix or-reduction on different scopes broken in 4.110 (#2828). [Yinan Xu]\n* Fix MSVC++ compile error. (#2831) (#2833) [Drew Taussig]\n\n\nVerilator 4.110 2021-02-25\n==========================\n\n**Major:**\n\n* Optimize bit operations and others (#2186) (#2632) (#2633) (#2751) (#2800) [Yutetsu TAKATSUKASA]\n\n**Minor:**\n\n* Support concat selection (#2721).\n* Support struct scopes when dumping structs to VCD (#2776) [Àlex Torregrosa]\n* Generate SELRANGE for potentially unreachable code (#2625) (#2754) [Pierre-Henri Horrein]\n* For --flatten, override inlining of public and no_inline modules (#2761) [James Hanlon]\n* Fix little endian interface pin swizzling (#2475). [Don Owen]\n* Fix range inheritance on port without data type (#2753). [Embedded Go]\n* Fix TIMESCALE warnings on primitives (#2763). [Xuanqi]\n* Fix to exclude strings from toggle coverage (#2766) (#2767) [Paul Wright]\n* Fix $fread extra semicolon inside statements. [Leendert van Doorn]\n* Fix class extends with VM_PARALLEL_BUILDS (#2775). [Iru Cai]\n* Fix shifts by > 32 bit values (#2785). [qrq992]\n* Fix examples not flushing vcd (#2787). [Richard E George]\n* Fix little endian packed array pattern assignment (#2795). [Àlex Torregrosa]\n\n\nVerilator 4.108 2021-01-10\n==========================\n\n**Major:**\n\n* Many VPI changes for IEEE compatibility, which may alter behavior from previous releases.\n* Support randomize() class method and rand (#2607). [Krzysztof Bieganski, Antmicro Ltd]\n\n**Minor:**\n\n* Support $cast and new CASTCONST warning.\n* Add --top option as alias of --top-module.\n* Add LATCH and NOLATCH warnings (#1609) (#2740). [Julien Margetts]\n* Remove Unix::Processors internal test dependency.\n* Report UNUSED on parameters, localparam and genvars (#2627). [Charles Eric LaForest]\n* Add error on real to non-real output pins (#2690). [Peter Monsson]\n* Support package imports before parameters in interfaces (#2714). [James Hanlon]\n* Support --sanitize in internal tests (#2705). [Yutetsu TAKATSUKASA]\n* Fix passing parameter type instantiations by position number.\n* Fix DPI open array handling issues.\n* Fix error when dotted refers to missing module (#2095). [Alexander Grobman]\n* Fix little endian packed array counting (#2499). [phantom-killua]\n* Fix showing reference locations for BLKANDNBLK (#2170). [Yuri Victorovich]\n* Fix genblk naming to match IEEE (#2686). [tinshark]\n* Fix VPI memory word indexing (#2695). [Marlon James]\n* Fix vpiLeftRange on little-endian memories (#2696). [Marlon James]\n* Fix VPI module tree (#2704). [Todd Strader]\n* Fix vpi_release_handle to be called implicitly per IEEE (#2706).\n* Fix to allow inheriting 'VerilatedVcdFile' class. (#2720) [HyungKi Jeong]\n* Fix $urandom_range maximum value (#2723). [Nandu Raj]\n* Fix tracing empty sc module (#2729).\n* Fix generate for unrolling to be signed (#2730). [yanx21]\n* Fix to emit timescale in hierarchical blocks (#2735). [Yutetsu TAKATSUKASA]\n* Fix to ignore coverage on real ports (#2741) (#2745). [Paul Wright]\n\n\n\nVerilator 4.106 2020-12-02\n==========================\n\n**Major:**\n\n* Change -sv option to select 1800-2017 instead of 1800-2005.\n\n**Minor:**\n\n* Check for proper 'local' and 'protected' (#2228).\n* Support $random and $urandom seeds.\n* Support $monitor and $strobe.\n* Support complex function arguments.\n* Support 'super'.\n* Support 'with item.index'.\n* Fix the default GNU Make executable name on FreeBSD (#2553). [Yuri Victorovich]\n* Fix trace signal names getting hashed (#2643).  [Barbara Gigerl]\n* Fix unpacked array parameters near functions (#2639). [Anderson Ignacio da Silva]\n* Fix access to non-overridden base class variable (#2654). [Tobias Rosenkranz]\n\n\nVerilator 4.104 2020-11-14\n==========================\n\n**Minor:**\n\n* Support queue and associative array 'with' statements (#2616).\n* Support queue slicing (#2326).\n* Support associative array pattern assignments and defaults.\n* Support static methods and typedefs in classes (#2615). [Krzysztof Bieganski, Antmicro Ltd]\n* Add error on typedef referencing self (#2539). [Cody Piersall]\n* With --debug, turn off address space layout randomization.\n* Fix iteration over mutating list bug in VPI (#2588). [Kaleb Barrett]\n* Fix cast width propagation (#2597). [flex-liu]\n* Fix return from callValueCbs (#2589) (#2605). [Marlon James]\n* Fix WIDTH warnings on comparisons with nullptr (#2602). [Rupert Swarbrick]\n* Fix fault when $fgets, $sscanf, etc used with string (#2604). [Yutetsu TAKATSUKASA]\n* Fix WIFEXITED missing from MinGW/MSYS2 (#2609). [Jean Berniolles]\n* Fix queue poping wrong value when otherwise unused (#2512). [nanduraj1]\n* Fix arrays of modport interfaces (#2614). [Thierry Tambe]\n* Fix split_var internal error (#2640) (#2641). [Yutetsu TAKATSUKASA]\n\n\nVerilator 4.102 2020-10-15\n==========================\n\n**Minor:**\n\n* Support const object new() assignments.\n* Support # as a comment in -f files (#2497). [phantom-killua]\n* Support 'this' (#2585). [Rafal Kapuscik]\n* Support defines for FST tracing (#2592). [Markus Krause]\n* Support non-overlapping implication inside properties (#1292). [Peter Monsson]\n* Fix timescale with --hierarchical (#2554). [Yutetsu TAKATSUKASA]\n* Fix cmake build with --hierarchical (#2560). [Yutetsu TAKATSUKASA]\n* Fix -G dropping public indication (#2561). [Andrew Goessling]\n* Fix $urandom_range passed variable (#2563). [nanduraj1]\n* Fix method calls to package class functions (#2565). [Peter Monsson]\n* Fix class wide member display (#2567). [Nandu Raj P]\n* Fix hierarchical references inside function (#2267) (#2572). [James Pallister]\n* Fix flushCall for backward compatibility (#2580). [chenguokai]\n* Fix preprocessor stringify of undefined macro. [Martin Whitaker]\n\n\nVerilator 4.100 2020-09-07\n==========================\n\n**Major:**\n\n* C++11 or newer compilers are now required.\n* SystemC 2.3.0 or newer (SYSTEMC_VERSION >= 20111121) is now required.\n* Support hierarchical Verilation (#2206). [Yutetsu TAKATSUKASA]\n\n**Minor:**\n\n* Support (with limitations) class extern, class extends, virtual class.\n* Support $urandom, $urandom_range without stability.\n* Support assume property. [Peter Monsson]\n* Support non-overlapping implication inside properties (#1292). [Peter Monsson]\n* Fix false DECLFILENAME on black-boxed modules (#2430). [Philipp Wagner]\n* Fix naming of \"id : begin\" blocks.\n* Fix class constructor error on assignments to const.\n* Fix splitting eval functions with --output-split-cfuncs (#2368). [Geza Lore]\n* Fix queues as class members (#2525). [nanduraj1]\n\n\nVerilator 4.040 2020-08-15\n==========================\n\n**Announcement:**\n\n* Version 4.040 is planned to be the final version that will support\n  pre-C++11 compilers. Please move to C++11 or newer compilers.\n\n**Minor:**\n\n* Fix arrayed interfaces, broke in 4.038 (#2468). [Josh Redford]\n* Support $stable, $rose and $fell.  (#2148) (#2501) [Peter Monsson]\n* Support simple function localparams (#2461). [James Hanlon]\n* Miscellaneous parsing error changes towards UVM support.\n* Fix arrayed interfaces (#2469).  [Josh Redford]\n* Fix protect lib VCS warning. (#2479) [Julien Margetts]\n* Fix combining different-width parameters (#2484). [abirkmanis]\n* Fix protect-lib without sequential logic (#2492). [Yutetsu TAKATSUKASA]\n* Fix V3Unknown from running with flat XML output (#2494). [James Hanlon]\n* Fix non-32 bit conversion to float (#2495). [dsvf]\n* Fix casting non-self-determined subexpressions (#2493). [phantom-killua]\n* Fix SystemC net names (#2500). [Edgar E. Iglesias]\n* Fix build with Bison 3.7 and newer (#2505). [Rupert Swarbrick]\n* Fix slice of unpacked array (#2506) (#2507). [Yutetsu TAKATSUKASA]\n\n\nVerilator 4.038 2020-07-11\n==========================\n\n**Announcement:**\n\n* Versions 4.038 and 4.040 are planned to be the final versions that will\n  support pre-C++11 compilers. Please move to C++11 or newer compilers.\n\n**Minor:**\n\n* Support VPI access to parameters and localparam. [Ludwig Rogiers]\n* Support parsing (not elaboration, yet) of UVM.\n* Add new UNSUPPORTED error code to replace most previous Unsupported: messages.\n* With --bbox-unsup continue parsing on many (not all) UVM constructs.\n* Support for-loop increments with commas.\n* Support $swrite with arbitrary arguments.\n* Support $writememb (#2450). [Fan Shupei]\n* Fix OS X, Free BSD, and -m32 portability issues. [Geza Lore]\n* Fix to flush FST trace on termination due to $stop or assertion failure.\n* Fix part select error when multipling by power-of-two (#2413). [Conor McCullough]\n* Fix division exception (#2460) [Kuoping Hsu]\n\n\nVerilator 4.036 2020-06-06\n==========================\n\n**Major:**\n\n* OPT_FAST is now -Os by default. See the BENCHMARKING & OPTIMIZATION part\n  of the manual if you experience issues with compilation speed.\n* --output-split is now on by default. VM_PARALLEL_BUILDS is set by default\n  iff the --output-split caused an actual file split to\n  occur.  --output-split-cfuncs and --output-split-ctrace now default to\n  the value of --output-split. These changes should improve build times of\n  medium and large designs with default options. User makefiles may require\n  changes.\n\n**Minor:**\n\n* Configure now enables SystemC if it is installed as a system headers,\n  e.g. with 'apt-get install systemc-dev'.\n* Add --waiver-output flag that writes a verilator config file (.vlt) with\n  waivers to the warnings emitted during a Verilator run.\n* Support verilator_coverage --write-info for lcov HTML reports.\n* Line Coverage now tracks all statement lines, not just branch lines.\n* The run-time library is now compiled with -Os by default. (#2369, #2373)\n* Support multi channel descriptor I/O (#2190) [Stephen Henry]\n* Support $countbits. (#2287) [Yossi Nivin]\n* Support $isunbounded and parameter $. (#2104)\n* Support unpacked array .sum and .product.\n* Support prefix/postfix increment/decrement. (#2223) [Maciej Sobkowski]\n* Fix FST tracing of little bit endian signals. [Geza Lore]\n* Fix +: and -: on unpacked arrays. (#2304) [engr248]\n* Fix $isunknown with constant Z's.\n* Fix queues and dynamic array wide ops. (#2352) [Vassilis Papaefstathiou]\n\n\nVerilator 4.034 2020-05-03\n==========================\n\n**Major:**\n\n* Support simplistic classes with many restrictions, see manual. (#377)\n* Support IEEE time units and time precisions. (#234)\n  Includes `timescale, $printtimescale, $timeformat.\n  VL_TIME_MULTIPLIER, VL_TIME_PRECISION, VL_TIME_UNIT have been removed\n  and the time precision must now match the SystemC time precision. To\n  get closer behavior to older versions, use e.g. --timescale-override\n  \"1ps/1ps\".\n* Add --build to call make automatically. (#2249) [Yutetsu TAKATSUKASA]\n* Configuring with ccache present now defaults to using it; see OBJCACHE.\n* Fix DPI import/export to be standard compliant. (#2236) [Geza Lore]\n* Add --trace-threads for general multithreaded tracing. (#2269) [Geza Lore]\n\n**Minor:**\n\n* Add --flatten for use with --xml-only. (#2270) [James Hanlon]\n* Greatly improve FST/VCD dump performance (#2244) (#2246) (#2250) (#2257) [Geza Lore]\n* Support $ferror, and $fflush without arguments. (#1638)\n* Support event data type (with some restrictions).\n* Support $root. (#2150) [Keyi Zhang]\n* Add error if use SystemC 2.2 and earlier (pre-2011) as is deprecated.\n* Add support of --trace-structs for CMake (#2986). [Martin Schmidt]\n* Fix arrayed instances connecting to slices. (#2263) [Don/engr248]\n* Fix error on unpacked connecting to packed. (#2288) [Joseph Shaker]\n* Fix logical not optimization with empty begin. (#2291) [Baltazar Ortiz]\n* Fix reduction OR on wide data, broke in v4.026. (#2300) [Jack Koenig]\n* Fix clock enables with bit-extends. (#2299) [Marco Widmer]\n* Fix MacOs Homebrew by removing default LIBS. (#2298) [Ryan Clarke]\n\n\nVerilator 4.032 2020-04-04\n==========================\n\n**Minor:**\n\n* Add column numbers to errors and warnings.\n* Add GCC 9-style line number prefix when showing source text for errors.\n* Add setting VM_PARALLEL_BUILDS=1 when using --output-split. (#2185)\n* Change --quiet-exit to also suppress 'Exiting due to N errors'.\n* Suppress REALCVT for whole real numbers.\n* Support split_var in vlt files. (#2219) [Marco Widmer]\n* Fix parameter type redeclaring a type. (#2195) [hdzhangdoc]\n* Fix VCD open with empty filename. (#2198) [Julius Baxter]\n* Fix packages as enum base types. (#2202) [Driss Hafdi]\n* Fix duplicate typedefs in generate for. (#2205) [hdzhangdoc]\n* Fix MinW portability. (#2114) [Sean Cross]\n* Fix assertions with unique case inside. (#2199) [hdzhangdoc]\n* Fix implicit conversion of floats to wide integers.\n\n\nVerilator 4.030 2020-03-08\n==========================\n\n**Major:**\n\n* Add split_var metacomment to assist UNOPTFLAT fixes. (#2066) [Yutetsu TAKATSUKASA]\n* Support $dumpfile and $dumpvars. (#2126) [Alexander Grobman]\n* Support dynamic arrays. (#379)\n\n**Minor:**\n\n* Add +verilator+noassert flag to disable assertion checking. [Tobias Wölfel]\n* Add check for assertOn for asserts. (#2162) [Tobias Wölfel]\n* Add --structs-packed for forward compatibility.\n* Support $displayb/o/h, $writeb/o/h, etc. (#1637)\n* Use gcc -Os in examples instead of -O2 for better average performance.\n* Fix genblk naming with directly nested generate blocks. (#2176) [Alexander Grobman]\n* Fix undeclared VL_SHIFTR_WWQ. (#2114) [Alex Solomatnikov]\n\n\nVerilator 4.028 2020-02-08\n==========================\n\n**Major:**\n\n* Support attributes (public, isolate_assignments, etc.) in configuration files.\n* Add -match to lint_off to waive warnings. [Philipp Wagner]\n\n**Minor:**\n\n* Link Verilator binary partially statically. (#2146) [Geza Lore]\n* Verilation speed improvements (#2133) (#2138) [Geza Lore]\n* Support libgoogle-perftools-dev's libtcmalloc if available. (#2137) [Geza Lore]\n* Support $readmem/$writemem with assoc arrarys. (#2100) [agrobman]\n* Support type(expression) operator and $typename. (#1650)\n* Support left justified $display. (#2101) [Pieter Kapsenberg]\n* Support string character access via indexing.\n* Support enum.next(k) with constant k > 1. (#2125) [Tobias Rosenkranz]\n* Support parameter access from arrays of interfaces. (#2155) [Todd Strader]\n* Add parameter values in XML. #2110. [Pieter Kapsenberg]\n* Add loc column location in XML (replaces fl). (#2122) [Pieter Kapsenberg]\n* Add error on misused define. [Topa Tota]\n* Add parameter to set maximum signal width. (#2082) [Øyvind Harboe]\n* Add warning on genvar in normal for loop. (#2143) [Yuri Victorovich]\n* Fix VPI scope naming for public modules. [Nandu Raj]\n* Fix FST tracing of enums inside structs. [fsiegle]\n* Fix WIDTH warning on </<= of narrower value. (#2141) [agrobman]\n* Fix OpenSolaris issues. (#2154) [brancoliticus]\n* Fix gated clocks under --protect-lib. (#2169) [Todd Strader]\n\n\nVerilator 4.026 2020-01-11\n==========================\n\n**Major:**\n\n* Docker images are now available for Verilator releases.\n\n**Minor:**\n\n* Support bounded queues.\n* Support non-overlapping implication operator in assertions. (#2069) [Peter Monsson]\n* Support string compare, ato*, etc methods. (#1606) [Yutetsu TAKATSUKASA]\n* Support immediate cover statements.\n* Ignore `uselib to end-of-line. (#1634) [Frederic Antonin]\n* Update FST trace API for better performance.\n* Add vpiTimeUnit and allow to specify time as string. (#1636) [Stefan Wallentowitz]\n* Add error when `resetall inside module (IEEE 2017-22.3).\n* Add cleaner error on version control conflicts in sources.\n* Fix little endian cell ranges. (#1631) [Julien Margetts]\n* Fix queue issues (#1641) (#1643) [Peter Monsson, Stefan Wallentowitz]\n* Fix strcasecmp for windows. (#1651) [Kuba Ober]\n* Fix disable iff in assertions. Closes #1404. [Peter Monsson]\n* Fix huge case statement performance. Closes #1644. [Julien Margetts]\n* Fix tracing -1 index arrays. Closes #2090. [Yutetsu Takatsukasa]\n* Fix expand optimization slowing --lint-only. Closes #2091. [Thomas Watts]\n* Fix %{number}s with strings. #2093. [agrobman]\n* Fix shebang breaking some shells. Closes #2067. [zdave]\n* Fix errors on using string in incorrect format (#5240). [John Demme]\n\n\nVerilator 4.024 2019-12-08\n==========================\n\n**Major:**\n\n* Support associative arrays (excluding [*] and pattern assignments). (#544)\n* Support queues (excluding {} notation and pattern assignments). (#545)\n\n**Minor:**\n\n* Add +verilator+error+limit to see more assertion errors. [Peter Monsson]\n* Support string.toupper and string.tolower.\n* Support $rewind and $ungetc.\n* Support shortreal as real, with a SHORTREAL warning.\n* Add -Wpedantic and -Wno-context for compliance testing.\n* Add error on redefining preprocessor directives. [Piotr Binkowski]\n* Support $value$plusargs float and shorts. (#1592) (#1619) [Garrett Smith]\n* Fix gate lvalue optimization error. (#831) [Jonathon Donaldson, Driss Hafdi]\n* Fix color assertion on empty if. (#1604) [Andrew Holme]\n* Fix for loop missing initializer. (#1605) [Andrew Holme]\n* Fix hang on concat error. (#1608) [Bogdan Vukobratovic]\n* Fix VPI timed callbacks to be one-shot, pull5. [Matthew Ballance]\n* Fix // in filenames. (#1610) [Peter Nelson]\n* Fix $display(\"%p\") to be closer to IEEE.\n* Fix labels on functions with returns. (#1614) [Mitch Hayenga]\n* Fix false unused message on __Vemumtab. (#2061) [Tobias Rosenkranz]\n* Fix assertion on dotted parameter arrayed function. (#1620) [Rich Porter]\n* Fix interface reference tracing. (#1595) [Todd Strader]\n* Fix error on unpacked concatenations. (#1627) [Driss Hafdi]\n\n\nVerilator 4.022 2019-11-10\n==========================\n\n**Major:**\n\n* Add --protect-lib. (#1490) [Todd Strader]\n* Add cmake support. (#1363) [Patrick Stewart]\n\n**Minor:**\n\n* Examples have been renamed.\n* Add --protect-ids to obscure information in objects. (#1521) [Todd Strader]\n* Add --trace-coverage.\n* Add --xml-output.\n* Support multithreading on Windows. [Patrick Stewart]\n* Suppress 'command failed' on normal errors.\n* Support some unpacked arrays in parameters. (#1315) [Marshal Qiao]\n* Add interface port visibility in traces. (#1594) [Todd Strader]\n* Increase case duplicate/incomplete to 16 bit tables. (#1545) [Yossi Nivin]\n* Support quoted arguments in -f files. (#1535) [Yves Mathieu]\n* Optimize modulus by power-of-two constants, and masked conditionals.\n* Fix detecting missing reg types. (#1570) [Jacko Dirks]\n* Fix multithreaded yield behavior when no work. [Patrick Stewart]\n* Fix bad-syntax crashes. (#1548, #1550-#1553, #1557-#1560, #1563,\n  #1573-#1577, #1579, #1582-#1591) [Eric Rippey]\n* Fix false CMPCONST/UNSIGNED warnings on \"inside\". (#1581) [Mitch Hayenga]\n\n\nVerilator 4.020 2019-10-06\n==========================\n\n**Minor:**\n\n* Add --public-flat-rw. (#1511) [Stefan Wallentowitz]\n* Support $fseek, $ftell, $frewind. (#1496) [Howard Su]\n* Support vpiModule. (#1469) [Stefan Wallentowitz]\n* Make Syms file honor --output-split-cfuncs. (#1499) [Todd Strader]\n* Fix make test with no VERILATOR_ROOT. (#1494) [Ahmed El-Mahmoudy]\n* Fix error on multidimensional cells. (#1505) [Anderson Ignacio Da Silva]\n* Fix config_rev revision detection on old versions.\n* Fix false warning on backward indexing. (#1507) [Hao Shi]\n* Fix vpiType accessor. (#1509) (#1510) [Stefan Wallentowitz]\n* Fix ugly error on interface misuse. (#1525) [Bogdan Vukobratovic]\n* Fix misc bad-syntax crashes. (#1529) (#1530) (#1531) (#1532) (#1533) [Eric Rippey]\n* Fix case statements with strings. (#1536) [Philipp Wagner]\n* Fix some coverage lost when multithreaded. (#2151)\n\n\nVerilator 4.018 2019-08-29\n==========================\n\n**Major:**\n\n* When showing an error, show source code and offer suggestions of replacements.\n* When showing an error, show the instance location. (#1305) [Todd Strader]\n\n**Minor:**\n\n* Add --rr. (#1481) [Todd Strader]\n* Change MULTITOP to warning to help linting, see manual.\n* Add XSim support to driver.pl. (#1493) [Todd Strader]\n* Add --dpi-hdr-only. (#1491) [Todd Strader]\n* Show included-from filenames in warnings. (#1439) [Todd Strader]\n* Fix elaboration time errors. (#1429) [Udi Finkelstein]\n* Fix not reporting some duplicate signals/ports. (#1462) [Peter Gerst]\n* Fix not in array context on non-power-of-two slices. (#2027) [Yu Sheng Lin]\n* Fix system compile flags injection. [Gianfranco Costamagna]\n* Fix enum values not being sized based on parent. (#1442) [Dan Petrisko]\n* Fix internal error on gate optimization of assign. (#1475) [Oyvind Harboe]\n\n\n\nVerilator 4.016 2019-06-16\n==========================\n\n**Minor:**\n\n* Add --quiet-exit. (#1436) [Todd Strader]\n* Error continuation lines no longer have %Error prefix.\n* Support logical equivalence operator <->.\n* Support VerilatedFstC set_time_unit. (#1433) [Pieter Kapsenberg]\n* Support deferred assertions. (#1449) [Charles Eddleston]\n* Mark infrequently called functions with GCC cold attribute.\n* Fix sign-compare warning in verilated.cpp. (#1437) [Sergey Kvachonok]\n* Fix fault on $realtime with %t. (#1443) [Julien Margetts]\n* Fix $display with string without %s. (#1441) [Denis Rystsov]\n* Fix parameter function string returns. (#1441) [Denis Rystsov]\n* Fix invalid XML output due to special chars. (#1444) [Kanad Kanhere]\n* Fix performance when mulithreaded on 1 CPU. (#1455) [Stefan Wallentowitz]\n* Fix type and real parameter issues (#1427) (#1456) (#1458) [Todd Strader]\n* Fix build error on MinGW. (#1460) [Richard Myers]\n* Fix not reporting some duplicate signals. (#1462) [Peter Gerst]\n* Fix --savable invalid C++ on packed arrays. (#1465) [Alex Chadwick]\n* Fix constant function return of function var. (#1467) [Roman Popov]\n\n\nVerilator 4.014 2019-05-08\n==========================\n\n**Minor:**\n\n* Add --trace-fst-thread.\n* Support '#' comments in $readmem. (#1411) [Frédéric Requin]\n* Support \"'dx\" constants. (#1423) [Udi Finkelstein]\n* For FST tracing use LZ4 compression. [Tony Bybell]\n* Add error when use parameters without value. (#1424) [Peter Gerst]\n* Auto-extend and WIDTH warn on unsized X/Zs. (#1423) [Udi Finkelstein]\n* Fix missing VL_SHIFTL errors. (#1412) (#1415) [Larry Lee]\n* Fix MinGW GCC 6 printf formats. (#1413) [Sergey Kvachonok]\n* Fix test problems when missing fst2vcd. (#1417) [Todd Strader]\n* Fix GTKWave register warning. (#1421) [Pieter Kapsenberg]\n* Fix FST enums not displaying. (#1426) [Danilo Ramos]\n* Fix table compile error with multiinterfaces. (#1431) [Bogdan Vukobratovic]\n\n\nVerilator 4.012 2019-03-23\n==========================\n\n**Minor:**\n\n* Add +verilator+seed. (#1396) [Stan Sokorac]\n* Support $fread. [Leendert van Doorn]\n* Support void' cast on functions called as tasks. (#1383) [Al Grant]\n* Add IGNOREDRETURN warning. (#1383)\n* Report PORTSHORT errors on concat constants. (#1400) [Will Korteland]\n* Fix VERILATOR_GDB being ignored. (#2017) [Yu Sheng Lin]\n* Fix $value$plus$args missing verilated_heavy.h. [Yi-Chung Chen]\n* Fix MSVC compile error. (#1406) [Benjamin Gartner]\n* Fix maintainer test when no Parallel::Forker. (#1977) [Enzo Chi]\n* Fix +1364-1995ext flags applying too late. (#1384) [Al Grant]\n\n\nVerilator 4.010 2019-01-27\n==========================\n\n**Minor:**\n\n* Removed --trace-lxt2, use --trace-fst instead.\n* For --xml, add additional information. (#1372) [Jonathan Kimmitt]\n* Add circular typedef error. (#1388)  [Al Grant]\n* Add unsupported for loops error. (#1986) [Yu Sheng Lin]\n* Fix FST tracing of wide arrays. (#1376) [Aleksander Osman]\n* Fix error when pattern assignment has too few elements. (#1378) [Viktor Tomov]\n* Fix error when no modules in $unit. (#1381) [Al Grant]\n* Fix missing too many digits warning. (#1380) [Jonathan Kimmitt]\n* Fix uninitialized data in verFiles and unroller. (#1385) (#1386) [Al Grant]\n* Fix internal error on xrefs into unrolled functions. (#1387) [Al Grant]\n* Fix DPI export void compiler error. (#1391) [Stan Sokorac]\n\n\nVerilator 4.008 2018-12-01\n==========================\n\n**Minor:**\n\n* Support \"ref\" and \"const ref\" pins and functions. (#1360) [Jake Longo]\n* In --xml-only show the original unmodified names, and add module_files\n  and cells similar to Verilog-Perl, msg2719. [Kanad Kanhere]\n* Add CONTASSREG error on continuous assignments to regs. (#1369) [Peter Gerst]\n* Add PROCASSWIRE error on behavioral assignments to wires, msg2737. [Neil Turton]\n* Add IMPORTSTAR warning on import::* inside $unit scope.\n* Fix --trace-lxt2 compile error on MinGW. (#1990) [HyungKi Jeong]\n* Fix hang on bad pattern keys. (#1364) [Matt Myers]\n* Fix crash due to cygwin bug in getline. (#1349) [Affe Mao]\n* Fix __Slow files getting compiled with OPT_FAST. (#1370) [Thomas Watts]\n\n\nVerilator 4.006 2018-10-27\n==========================\n\n**Minor:**\n\n* Add --pp-comments. (#1988) [Robert Henry]\n* Add --dump-defines.\n* For --trace-fst, save enum decoding information. (#1358) [Sergi Granell]\n  (To visualize enumeration data you must use GTKwave 3.3.95 or newer.)\n* For --trace-fst, combine hier information into FST. [Tony Bybell]\n* Fix --trace-lxt2 compile error on MinGW, msg2667. [HyungKi Jeong]\n* Fix Windows .exe not found. (#1361) [Patrick Stewart]\n\n\nVerilator 4.004 2018-10-06\n==========================\n\n**Major:**\n\n* Add GTKWave FST native tracing. (#1356) [Sergi Granell]\n  (Verilator developers need to pull the latest vcddiff.)\n\n**Minor:**\n\n* Support $past. [Dan Gisselquist]\n* Support restrict. (#1350) [Clifford Wolf]\n* Rename include/lxt2 to include/gtkwave.\n* Fix replication of 64-bit signal change detects.\n* Fix Mac OSX 10.13.6 / LLVM 9.1 compile issues. (#1348) [Kevin Kiningham]\n* Fix MinGW compile issues. (#1979) [HyungKi Jeong]\n\n\nVerilator 4.002 2018-09-16\n==========================\n\n**Major:**\n\n* This is a major release. Any patches may require major rework to apply.\n  [Thanks everyone]\n* Add multithreaded model generation.\n* Add runtime arguments.\n* Add GTKWave LXT2 native tracing. (#1333) [Yu Sheng Lin]\n* Note $random has new algorithm; results may vary vs. previous versions.\n\n**Minor:**\n\n* Better optimize large always block splitting. (#1244) [John Coiner]\n* Add new reloop optimization for repetitive assignment compression.\n* Support string.atoi and similar methods. (#1289) [Joel Holdsworth]\n* Fix internals to be C++ null-pointer-check clean.\n* Fix internals to avoid 'using namespace std'.\n* Fix Verilation performance issues. (#1316) [John Coiner]\n* Fix clocker attributes to not propagate on concats. [John Coiner]\n* Fix first clock edge and --x-initial-edge. (#1327) [Rupert Swarbrick]\n* Fix compile error on tracing of string arrays. (#1338) [Iztok Jeras]\n* Fix number parsing with newline after radix. (#1340) [George Cuan]\n* Fix string ?: conditional type resolution. (#1345) [Iztok Jeras]\n* Fix duplicate symbol error on generate tri. (#1347) [Tomas Dzetkulic]\n\n\nVerilator 3.926 2018-08-22\n==========================\n\n**Minor:**\n\n* Add OBJCACHE envvar support to examples and generated Makefiles.\n* Change MODDUP errors to warnings. (#1969) [Marshal Qiao]\n* Fix define argument stringification (`\"), broke since 3.914. [Joe DErrico]\n* Fix to ignore Unicode UTF-8 BOM sequences. (#1967) [HyungKi Jeong]\n* Fix std:: build error. (#1322)\n* Fix function inlining inside certain while loops. (#1330) [Julien Margetts]\n\n\nVerilator 3.924 2018-06-12\n==========================\n\n**Minor:**\n\n* Renamed --profile-cfuncs to --prof-cfuncs.\n* Report interface ports connected to wrong interface. (#1294) [Todd Strader]\n* When tracing, use scalars on single bit arrays to appease vcddiff.\n* Fix parsing \"output signed\" in V2K port list, msg2540. [James Jung]\n* Fix parsing error on bad missing #. (#1308) [Dan Kirkham]\n* Fix $clog2 to be in verilog 2005. (#1319) [James Hutchinson]\n\n\nVerilator 3.922 2018-03-17\n==========================\n\n**Major:**\n\n* Support IEEE 1800-2017 as default language.\n\n**Minor:**\n\n* Support trig functions ($sin() etc). (#1281) [Patrick Stewart]\n* Support calling system functions as tasks. (#1285) [Joel Holdsworth]\n* Support assert properties. (#785) (#1290) [John Coiner, et al]\n* Support $writememh. [John Coiner]\n* Add --no-debug-leak to reduce memory use under debug. [John Coiner]\n* Fix severe runtime performance bug in certain foreach loops. [John Coiner]\n* On convergence errors, show activity. [John Coiner]\n* Fix GCC 8.0 issues. (#1273)\n* Fix pullup/pulldowns on bit selects. (#1274) [Rob Stoddard]\n* Fix verilator_coverage --annotate-min. (#1284) [Tymoteusz Blazejczyk]\n* Fix quoting of quoted arguments. [John Coiner]\n\n\nVerilator 3.920 2018-02-01\n==========================\n\n**Announcement:**\n\n* Moving forward, use the git \"stable\" branch to track the latest release,\n  and git \"v#.###\" tags for specific releases.\n\n**Minor:**\n\n* Support 'assume' similar to 'assert'. (#1269) [Dan Gisselquist]\n* Remove c++filt. (#1265) [Stefan Wallentowitz]\n* Fix tracing example file output. (#1268) [Enzo Chi]\n* Fix gate optimization out of memory, add --gate-stmts. (#1260) [Alex Solomatnikov]\n* Fix compile error on public real parameters by suppressing. (#1261) [Alex Solomatnikov]\n* Fix input-only tristate comparisons. (#1267) [Alexis G]\n* Fix missing edge type in xml output. (#1955) [Alexis G]\n* Fix compile error with --public and interface bind. (#1264) [Alexis G]\n\n\nVerilator 3.918 2018-01-02\n==========================\n\n**Minor:**\n\n* Workaround GCC/clang bug with huge compile times. (#1248)\n* Support DPI open arrays. (#909) (#1245) [David Pierce, Victor Besyakov]\n* Add INFINITELOOP warning. (#1254) [Alex Solomatnikov]\n* Support > 64 bit decimal $display.\n* Support DPI time and svLogicVal. [Victor Besyakov]\n  Note older version incorrectly assumed svBitVal even for logicals.\n* Support string len() method. [Victor Besyakov]\n* Add error if always_comb has sensitivity list. [Arjen Roodselaar]\n* Fix SystemC 2.3.2 compile error. (#1251) [Tymoteusz Blazejczyk]\n* Fix modport outputs being treated as inputs. (#1246) [Jeff Bush]\n* Fix false ALWCOMBORDER on interface references. (#1247) [Josh Redford]\n* Fix constant propagation across DPI imports of inout strings. [Victor Besyakov]\n* Fix resolving inline nested interface names. (#1250) [Arjen Roodselaar]\n* Fix GCC false warning on array bounds. (#2386)\n\n\nVerilator 3.916 2017-11-25\n==========================\n\n**Minor:**\n\n* Support self-recursive modules. (#659) [Sean Moore, et al]\n* Support $error/$warning in elaboration time blocks.\n* Support $size/$bits/etc on type references.\n* Add error when driving input-only modport. (#1110) [Trevor Elbourne]\n* Add BSSPACE and COLONPLUS lint warnings.\n* Detect MSB overflow when under VL_DEBUG. (#1238) [Junyi Xi]\n* Add data types to --xml. [Rui Terra]\n* Fix partial slicing with pattern assignments. (#991) [Johan Bjork]\n* Fix false unused warning on interfaces. (#1241) [Laurens van Dam]\n* Fix error on \"unique case\" with no cases.\n* Fix MacOS portability. (#1232) [Jeff Bush]\n\n\nVerilator 3.914 2017-10-14\n==========================\n\n**Major:**\n\n* Add new examples/ directory with appropriate examples. This replaces the\n  old test_c and test_sc directories.\n\n**Minor:**\n\n* Add --getenv option for simplifying Makefiles.\n* Add --x-initial option for specifying initial value assignment behavior.\n* Add --no-relative-cfuncs and related default optimization. (#1224) [John Coiner]\n* Add /*verilator tag*/ for XML extraction applications. [Chris Randall]\n* The internal test_verilated test directory is moved to be part of test_regress.\n* The experimental VL_THREADED setting (only, not normal mode) now requires C++11.\n* Fix over-aggressive inlining. (#1223) [John Coiner]\n* Fix Ubuntu 17.10 issues. (#1223 partial). [John Coiner]\n* Fix compiler warning when WIDTH warning ignored on large compare.\n* Fix memory leak in VerilatedVcd dumps. (#1222 partial) [Shareef Jalloq]\n* Fix unnecessary Vdly variables. (#1224 partial) [John Coiner]\n* Fix conditional slices and add related optimizations.\n* Fix \\`\\` expansion of `defines. (#1225) (#1227) (#1228) [Odd Magne Reitan]\n* Fix -E duplicating output. (#1226) [Odd Magne Reitan]\n* Fix float-conversion warning. (#1229) [Robert Henry]\n* Fix MacOS portability. (#1230) (#1231) [Jeff Bush]\n\n\nVerilator 3.912 2017-09-23\n==========================\n\n**Major:**\n\n* Verilated headers no longer \"use namespace std;\"\n  User's code without \"std::\" prefixes may need \"use namespace std;\" to compile.\n\n**Minor:**\n\n* Support or/and/xor array intrinsic methods. (#1210) [Michael Popoloski]\n* Support package export. (#1217) [Usuario Eda]\n* Support module port parameters without defaults. (#1213) [Michael Popoloski]\n* Add performance information to --stats file.\n* Simplify VL_CONST_W macro generation for faster compiles.\n* Optimize improvements for Shift-And, and replication constructs.\n* Fix ordering of arrayed cell wide connections. (#1202 partial) [Michael Popoloski]\n* Fix LITENDIAN warning on arrayed cells. (#1202) [Michael Popoloski]\n* Fix enum ranges without colons. (#1204) [Michael Popoloski]\n* Fix GCC noreturn compile error. (#1209) [Michael Popoloski]\n* Fix constant function default parameters. (#1211) [Michael Popoloski]\n* Fix non-colon array of interface modports. (#1212) [Michael Popoloski]\n* Fix .name connections on interfaces. (#1214) [Michael Popoloski]\n* Fix wide array indices causing compile error.\n\n\nVerilator 3.910 2017-09-07\n==========================\n\n**Major:**\n\n* SystemPerl mode (-sp-deprecated) has been removed.\n\n**Minor:**\n\n* Update keyword warnings to include C++11 and others.\n\n\nVerilator 3.908 2017-08-28\n==========================\n\n**Minor:**\n\n* Support x in $readmem. (#1180) [Arthur Kahlich]\n* Support packed struct DPI imports. (#1190) [Rob Stoddard]\n* Fix GCC 6 warnings.\n* Fix compile error on unused VL_VALUEPLUSARGS_IW. (#1181) [Thomas J Whatson]\n* Fix undefined VL_POW_WWI. [Clifford Wolf]\n* Fix internal error on unconnected inouts. (#1187) [Rob Stoddard]\n\n\nVerilator 3.906 2017-06-22\n==========================\n\n**Minor:**\n\n* Support set_time_unit/set_time_precision in C traces. (#1937)\n* Fix extract of packed array with non-zero LSB. (#1172) [James Pallister]\n* Fix shifts by more than 32-bit numbers. (#1174) [Clifford Wolf]\n* Fix power operator on wide constants. (#761) [Clifford Wolf]\n* Fix .* on interface pins. (#1176) [Maciej Piechotka]\n\n\nVerilator 3.904 2017-05-30\n==========================\n\n**Minor:**\n\n* Fix non-cutable ordering loops on clock arrays. (#1009) [Todd Strader]\n* Support ports of array of reals. (#1154) [J Briquet]\n* Support arrayed parameter overrides. (#1153) [John Stevenson]\n* Support $value$plusargs with variables. (#1165) [Wesley Terpstra]\n* Support modport access to un-modport objects. (#1161) [Todd Strader]\n* Add stack trace when can't optimize function. (#1158) [Todd Strader]\n* Add warning on mis-sized literal. (#1156) [Todd Strader]\n* Fix interface functions returning wrong parameters. (#996) [Todd Strader]\n* Fix non-arrayed cells with interface arrays. (#1153) [John Stevenson]\n* Fix --assert with complex case statements. (#1164) [Enzo Chi]\n\n\nVerilator 3.902 2017-04-02\n==========================\n\n**Major:**\n\n* Add -FI option to force includes. (#1916) [Amir Gonnen]\n* Add --relative-includes. [Rob Stoddard]\n\n**Minor:**\n\n* Add error on duplicate pattern assignments. (#1145) [Johan Bjork]\n* Fix error on improperly widthed default function. (#984) [Todd Strader]\n* Fix 2009 localparam syntax, msg2139. [Galen Seitz]\n* Fix ugly interface-to-non-interface errors. (#1112) [Johan Bjork]\n* Fix LDFLAGS and CFLAGS not preserving order. (#1130) [Olof Kindgren]\n* Fix internal error on initializing parameter array. (#1131) [Jie Xu]\n* Fix internal error on interface arrays. (#1135) [John Stevenson]\n* Fix calling sformatf to display, and elab $displays. (#1139) [Johan Bjork]\n* Fix realpath compile issue on MSVC++. (#1141) [Miodrag Milanovic]\n* Fix missing error on interface size mismatch. (#1143)  [Johan Bjork]\n* Fix error on parameters with dotted references. (#1146) [Johan Bjork]\n* Fix wreal not handling continuous assign. (#1150) [J Briquet]\n* Fix nested structure parameter selects. (#1150) [J Briquet]\n\n\nVerilator 3.900 2017-01-15\n==========================\n\n**Major:**\n\n* Internal code changes for improved compatibility and performance.\n\n**Minor:**\n\n* Support old-style $display($time). (#467) [John Demme]\n* With --bbox-unsup, suppress desassign and mixed edges. (#1120) [Galen Seitz]\n* Fix parsing sensitivity with &&. (#934) [Luke Yang]\n* Fix internal error on double-for loop unrolling. (#1044) [Jan Egil Ruud]\n* Fix internal error on unique casez with --assert. (#1117) [Enzo Chi]\n* Fix bad code when tracing array of structs. (#1122) [Andrew Bardsley]\n\n\nVerilator 3.890 2016-11-25\n==========================\n\n**Minor:**\n\n* Honor --output-split on coverage constructors. (#1098) [Johan Bjork]\n* Fix various issues when making outside of the kit.\n* Fix flex 2.6.2 bug. (#1103) [Sergey Kvachonok]\n* Fix error on bad interface name. (#1097) [Todd Strader]\n* Fix error on referencing variable in parent. (#1099) [Ian Thompson]\n* Fix type parameters with low optimization. (#1101) [Stefan Wallentowitz]\n\n\nVerilator 3.888 2016-10-14\n==========================\n\n**Major:**\n\n* Support foreach. (#1078) [Xuan Guo]\n\n**Minor:**\n\n* Add --no-decoration to remove output comments, msg2015. [Frédéric Requin]\n* If VM_PARALLEL_BUILDS=1, use OPT_FAST and OPT_SLOW. [Frédéric Requin]\n  Set VM_DEFAULT_RULES=0 for old behavior.\n* Add error on DPI functions > 32 bits. (#1898) [Elliot Mednick]\n* Improve Verilation performance on internal strings. (#1896) [Johan Bjork]\n* Improve Verilation performance on trace duplicates. (#1090) [Johan Bjork]\n* Fix SystemC compiles with VPI. (#1081) [Arthur Kahlich]\n* Fix error on wide numbers that represent shifts, msg1991. (#1088) [Mandy Xu]\n\n\nVerilator 3.886 2016-07-30\n==========================\n\n**Minor:**\n\n* Fix enum values of 11-16 bits wide using .next/.prev. (#1062) [Brian Flachs]\n* Fix false warnings on non-power-2 enums using .next/.prev.\n* Fix comparison of unpacked arrays. (#1071) [Andrew Bardsley]\n* Fix compiler warning in GCC 6. [David Horton]\n\n\nVerilator 3.884 2016-05-18\n==========================\n\n**Major:**\n\n* Support parameter type. (#376) [Alan Hunter, et al]\n* Support command-line -G/+pvalue param overrides. (#1045) [Stefan Wallentowitz]\n* Add --l2-name option for controlling \"v\" naming.\n* The default l2 scope name is now the same as the top-level module. (#1050)\n  Use \"--l2-name v\" for the historical behavior.\n\n**Minor:**\n\n* Fix --output-split of constructors. (#1035) [Johan Bjork]\n* Fix removal of empty packages, modules and cells. (#1034) [Johan Bjork]\n* Fix core dump on Arch Linux/GCC 6.1.1. (#1058) [Jannis Harder]\n* Fix $value$plusargs to string. (#1880) [Frédéric Requin]\n\n\nVerilator 3.882 2016-03-01\n==========================\n\n**Minor:**\n\n* Internal Verilation-time performance enhancements. (#1021) [Johan Bjork]\n* Support inlining interfaces. (#1018) [Johan Bjork]\n* Support SV strings to readmemh. (#1040) [Stefan Wallentowitz]\n* Fix unrolling complicated for-loop bounds. (#677) [Johan Bjork]\n* Fix stats file containing multiple unroll entries. (#1020) [Johan Bjork]\n* Fix using short parameter names on negative params. (#1022) [Duraid Madina]\n* Fix read-after-free error. (#1031) [Johan Bjork]\n* Fix elaboration-time display warnings. (#1032) [Johan Bjork]\n* Fix crash on very deep function trees. (#1028) [Jonathan Kimmitt]\n* Fix slicing mix of big and little-endian. (#1033) [Geoff Barrett]\n* Fix pattern assignment width propagation. (#1037) [Johan Bjork]\n\n\nVerilator 3.880 2015-12-19\n==========================\n\n**Minor:**\n\n* Support display %u, %v, %p, %z. (#989) [Johan Bjork]\n* Fix real parameters causing bad module names. (#992) [Johan Bjork]\n* Fix size-changing cast on packed struct. (#993) [Johan Bjork]\n* Fix function calls on arrayed interface. (#994) [Johan Bjork]\n* Fix arrayed interfaces. (#879) (#1001) [Todd Strader]\n* Fix constant function assigned to packed structs. (#997) [Johan Bjork]\n* Fix interface inside generate. (#998) [Johan Bjork]\n* Fix $signed casts under generates. (#999) [Clifford Wolf]\n* Fix genvar constant propagation. (#1003) [Johan Bjork]\n* Fix parameter constant propagation from package. (#1004) [Johan Bjork]\n* Fix array slicing of non-const indexes. (#1006) [Johan Bjork]\n* Fix dotted generated array error. (#1005) [Jeff Bush, Johan Bjork]\n* Fix error instead of warning on large concat. (#1865) [Paul Rolfe]\n* Fix $bitstoreal constant propagation. (#1012) [Jonathan Kimmitt]\n* Fix model restore crash. (#1013) [Jason McMullan]\n* Fix arrayed instances to unpacked of same size. (#1015) [Varun Koyyalagunta]\n* Fix slices of unpacked arrays with non-zero LSBs.\n* Fix ternary operation with unpacked array. (#1017) [Varun Koyyalagunta].\n\n\nVerilator 3.878 2015-11-01\n==========================\n\n**Major:**\n\n* Add --vpi flag, and fix VPI linkage. (#969) [Arthur Kahlich]\n* Support genvar indexes into arrayed cells. (#517)  [Todd Strader]\n* Support $sformatf. (#977) [Johan Bjork]\n* Support elaboration assertions. (#973) [Johan Bjork]\n* Support $display with non-format arguments. (#467) [Jamey Hicks]\n\n**Minor:**\n\n* Add VerilatedScopeNameMap for introspection. (#966) [Todd Strader]\n* Ignore %l in $display. (#983) [Todd Strader]\n* Fix very long module names. (#937) [Todd Strader]\n* Fix internal error on dotted refs into generates. (#958) [Jie Xu]\n* Fix structure parameter constant propagation. (#968) [Todd Strader]\n* Fix enum constant propagation. (#970) [Todd Strader]\n* Fix mis-optimizing public DPI functions. (#963) [Wei Song]\n* Fix package:scope.scope variable references.\n* Fix $fwrite to constant stderr/stdout. (#961) [Wei Song]\n* Fix struct.enum.name method calls. (#855) [Jonathon Donaldson]\n* Fix dot indexing into arrayed inferfaces. (#978)  [Johan Bjork]\n* Fix crash in commandArgsPlusMatch. (#987) [Jamie Iles]\n* Fix error message on missing interface. (#985) [Todd Strader]\n\n\nVerilator 3.876 2015-08-12\n==========================\n\n**Minor:**\n\n* Add tracing_on, etc to vlt files. (#932) [Frédéric Requin]\n* Support extraction of enum bits. (#951) [Jonathon Donaldson]\n* Fix MinGW compiler error. (#927) (#929) [Hans Tichelaar]\n* Fix .c files to be treated as .cpp. (#930) [Jonathon Donaldson]\n* Fix string-to-int space conversion. (#931) [Fabrizio Ferrandi]\n* Fix dpi imports inside generates. [Michael Tresidder]\n* Fix rounding in trace $timescale. (#946) [Frédéric Requin]\n* Fix $fopen with SV string. (#947) [Sven Stucki]\n* Fix hashed error with typedef inside block. (#948) [Sven Stucki]\n* Fix makefile with --coverage. (#953) [Eivind Liland]\n* Fix coverage documentation. (#954) [Thomas J Whatson]\n* Fix parameters with function parameter arguments. (#952) [Jie Xu]\n* Fix size casts as second argument of cast item. (#950) [Jonathon Donaldson]\n\n\nVerilator 3.874 2015-06-06\n==========================\n\n**Minor:**\n\n* Add pkg-config .pc file. (#919) [Stefan Wallentowitz]\n* Fix installing missing manpages. (#908) [Ahmed El-Mahmoudy]\n* Fix sign extension in large localparams. (#910) [Mike Thyer]\n* Fix core dump in sync-async warnings. (#911) [Sebastian Dressler]\n* Fix truncation warning with -pins-bv. (#912) [Alfonso Martinez]\n* Fix Cygwin uint32 compile. (#914) [Matthew Barr]\n* Fix preprocessing stringified newline escapes. (#915) [Anton Rapp]\n* Fix part-select in constant function. (#916) [Andrew Bardsley]\n* Fix width extension on mis-width ports. (#918) [Patrick Maupin]\n* Fix width propagation on sized casts. (#925) [Jonathon Donaldson]\n* Fix MSVC++ compiler error. (#927) [Hans Tichelaar]\n\n\nVerilator 3.872 2015-04-05\n==========================\n\n**Minor:**\n\n* Add VerilatedVcdFile to allow real-time waveforms. (#890) [HyungKi Jeong]\n* Add --clk and related optimizations. (#1840) [Jie Xu]\n* Fix order of C style arrays. [Duraid Madina]\n* Add --dump-treei-<srcfile>. (#894) [Jie Xu]\n* Fix comma-instantiations with parameters. (#884) [Franck Jullien]\n* Fix SystemC arrayed bit vectors. (#886) [David Poole]\n* Fix compile error on MinGW. (#887) [HyungKi Jeong]\n\n\nVerilator 3.870 2015-02-12\n==========================\n\n**Minor:**\n\n* Suppress COMBDLY when inside always_latch. (#864) [Iztok Jeras]\n* Support cast operator with expression size. (#865) [Iztok Jeras]\n* Add warning on slice selection out of bounds. (#875) [Cong Van Nguyen].\n* Fix member select error broke in 3.868. (#867) [Iztok Jeras]\n* Fix $sccanf from string. (#866) [David Pierce]\n* Fix VM_PARALLEL_BUILDS broke in 3.868. (#870) [Hiroki Honda]\n* Fix non-ANSI modport instantiations. (#868) [Kevin Thompson]\n* Fix UNOPTFLAT change detect on multidim arrays. (#872) [Andrew Bardsley]\n* Fix slice connections of arrays to ports. (#880) [Varun Koyyalagunta]\n* Fix mis-optimizing gate assignments in unopt blocks. (#881) [Mike Thyer]\n* Fix sign extension of pattern members. (#882) [Iztok Jeras]\n* Fix clang compile warnings.\n\n\nVerilator 3.868 2014-12-20\n==========================\n\n**Major:**\n\n* New verilator_coverage program added to replace SystemPerl's vcoverage.\n* PSL support was removed, please use System Verilog assertions.\n* SystemPerl mode is deprecated and now untested.\n\n**Minor:**\n\n* Support enum.first/name and similar methods. (#460) (#848)\n* Add 'string' printing and comparisons. (#746) (#747) etc.\n* Inline C functions that are used only once. (#1838) [Jie Xu]\n* Fix tracing SystemC signals with structures. (#858) [Eivind Liland]\n  Note that SystemC traces will no longer show the signals\n  in the wrapper, they can be seen one level further down.\n* Add --stats-vars. (#851) [Jeremy Bennett]\n* Fix bare generates in interfaces. (#789) [Bob Newgard]\n* Fix underscores in real literals. (#863) [Jonathon Donaldson]\n\n\nVerilator 3.866 2014-11-15\n==========================\n\n**Minor:**\n\n* Fix +define+A+B to define A and B to match other simulators. (#847) [Adam Krolnik]\n* Add optimization of wires from arrayed cells. (#1831) [Jie Xu]\n* Add optimization of operators between concats. (#1831) [Jie Xu]\n* Add public enums. (#833) [Jonathon Donaldson]\n* Trace_off now operates on cells. (#826) [Lane Brooks]\n* Fix public parameters in unused packages. (#804) [Jonathon Donaldson]\n* Fix select when partially out-of-bound. (#823) [Clifford Wolf]\n* Fix generate unrolling with function call. (#830) [Steven Slatter]\n* Fix cast-to-size context-determined sizing. (#828) [Geoff Barrett]\n* Fix not tracing modules following primitives. (#837) [Jie Xu]\n* Fix trace overflow on huge arrays. (#834) [Geoff Barrett]\n* Fix quoted comment slashes in defines. (#845) [Adam Krolnik]\n\n\nVerilator 3.864 2014-09-21\n==========================\n\n**Minor:**\n\n* Support power operator with real. (#809) [Jonathon Donaldson]\n* Improve verilator_profcfunc time attributions. [Jonathon Donaldson]\n* Fix duplicate anonymous structures in $root. (#788) [Bob Newgard]\n* Fix mis-optimization of bit-swap in wide signal. (#800) [Jie Xu]\n* Fix error when tracing public parameters. (#722) [Jonathon Donaldson]\n* Fix dpiGetContext in dotted scopes. (#740) [Geoff Barrett]\n* Fix over-shift structure optimization error. (#803) [Jeff Bush]\n* Fix optional parameter keyword in module #(). (#810) [Iztok Jeras]\n* Fix $warning/$error multi-argument ordering. (#816) [Jonathon Donaldson]\n* Fix clang warnings. (#818) [Iztok Jeras]\n* Fix string formats under deep expressions. (#820) [Iztok Jeras]\n\n\nVerilator 3.862 2014-06-10\n==========================\n\n**Minor:**\n\n* Using command line -Wno-{WARNING} now overrides file-local lint_on.\n* Add -P to suppress `line and blanks with preprocessing. (#781) [Derek Lockhart]\n* Support SV 2012 package import before port list.\n* Change SYMRSVDWORD to print as warning rather than error.\n* Fix seg-fault with variable of parameterized interface. (#692) [Jie Xu]\n* Fix false name conflict on cells in generate blocks. (#749) [Igor Lesik]\n* Fix pattern assignment to basic types. (#767) [Jie Xu]\n* Fix pattern assignment to conditionals. (#769) [Jie Xu]\n* Fix shift corner-cases. (#765) (#766) (#768) (#772) (#774) (#776) [Clifford Wolf]\n* Fix C compiler interpreting signing. (#773) [Clifford Wolf]\n* Fix late constant division by zero giving X error. (#775) [Clifford Wolf]\n* Fix gate primitives with arrays and non-arrayed pins.\n* Fix DETECTARRAY error on packed arrays. (#770) [Jie Xu]\n* Fix ENDLABEL warnings on escaped identifiers.\n* Fix string corruption. (#780) [Derek Lockhart]\n\n\nVerilator 3.860 2014-05-11\n==========================\n\n**Major:**\n\n* PSL is no longer supported, please use System Verilog assertions.\n* Support '{} assignment pattern on arrays. (#355)\n* Support streaming operators. (#649) [Glen Gibb]\n* Fix expression problems with -Wno-WIDTH. (#729) (#736) (#737) (#759)\n  Where WIDTH warnings were ignored this might result in different\n  warning messages and results, though it should better match the spec.\n  [Clifford Wolf]\n\n**Minor:**\n\n* Add --no-trace-params.\n* Add assertions on 'unique if'. (#725) [Jeff Bush]\n* Add PINCONNECTEMPTY warning. [Holger Waechtler]\n* Support parameter arrays. (#683) [Jeremy Bennett]\n* Documentation fixes. (#723) [Glen Gibb]\n* Support {} in always sensitivity lists. (#745) [Igor Lesik]\n* Fix begin_keywords \"1800+VAMS\". (#1806)\n* Fix tracing of package variables and real arrays.\n* Fix tracing of packed arrays without --trace-structs. (#742) [Jie Xu]\n* Fix missing coverage line on else-if. (#727) [Sharad Bagri]\n* Fix modport function import not-found error.\n* Fix power operator calculation. (#730) (#735) [Clifford Wolf]\n* Fix reporting struct members as reserved words. (#741) [Chris Randall]\n* Fix change detection error on unions. (#758) [Jie Xu]\n* Fix -Wno-UNOPTFLAT change detection with 64-bits. (#762) [Clifford Wolf]\n* Fix shift-right optimization. (#763) [Clifford Wolf]\n* Fix Mac OS-X test issues. [Holger Waechtler]\n* Fix C++-2011 warnings.\n\n\nVerilator 3.856 2014-03-11\n==========================\n\n**Minor:**\n\n* Support case inside. (#708) [Jan Egil Ruud]\n* Add parameters into trace files. (#706) [Alex Solomatnikov]\n* Fix parsing \"#0 'b0\". (#256)\n* Fix array bound checks on real variables.\n* Fix --skip-identical mis-detecting on OS-X. (#707)\n* Fix missing VL_SHIFTRS_IQI with WIDTH warning. (#714) [Fabrizio Ferrandi]\n* Fix signed shift right optimization. (#715) [Fabrizio Ferrandi]\n* Fix internal error on \"input x =\" syntax error. (#716) [Lane Brooks]\n* Fix slice extraction from packed array. (#717) [Jan Egil Ruud]\n* Fix inside statement EQWILD error. (#718) [Jan Egil Ruud]\n\n\nVerilator 3.855 2014-01-18\n==========================\n\n**Minor:**\n\n* Support modport import. (#696) [Jeremy Bennett]\n* Add --trace-structs to show struct names. (#673) [Chris Randall]\n* Fix tracing of packed structs. (#705) [Jie Xu]\n* Fix --lint-only with MinGW. (#1813) [HyungKi Jeong]\n* Fix some delayed assignments of typedefed unpacked arrays.\n* Fix wire declarations with size and not range. (#466) [Alex Solomatnikov]\n* Fix parameter pin vs. normal pin error. (#704) [Alex Solomatnikov]\n\n\nVerilator 3.854 2013-11-26\n==========================\n\n**Minor:**\n\n* Add UNPACKED warning to convert unpacked structs. [Jeremy Bennett]\n* Add --compiler clang to work around compiler bug. (#694) [Stefan Ludwig]\n* Support vpi_get of vpiSuppressVal. (#687) [Varun Koyyalagunta]\n* Support vpi_get_time. (#688) [Varun Koyyalagunta]\n* Fix evaluation of chained parameter functions. (#684) [Ted Campbell]\n* Fix enum value extension of '1.\n* Fix multiple VPI variable callbacks. (#679) [Rich Porter]\n* Fix vpi_get of vpiSize. (#680) [Rich Porter]\n* Fix vpi_remove_cb inside callback. (#689) [Varun Koyyalagunta]\n* Fix crash with coverage of structures. (#691) [Eivind Liland]\n* Fix array assignment from const var. (#693) [Jie Xu]\n\n\nVerilator 3.853 2013-09-30\n==========================\n\n**Minor:**\n\n* Add --no-order-clock-delay to work around #613. [Charlie Brej]\n\n\nVerilator 3.852 2013-09-29\n==========================\n\n**Minor:**\n\n* Support named function and task arguments. [Chris Randall]\n* Report SELRANGE warning for non-generate if. (#675) [Roland Kruse]\n* Fix ordering of $fgetc. (#1808) [Frédéric Requin]\n* Fix --output-split-cfunc to count internal functions. [Chris Randall]\n* Fix crash on 32-bit Ubuntu. (#670) [Mark Jackson Pulver]\n\n\nVerilator 3.851 2013-08-15\n==========================\n\n**Minor:**\n\n* Fix ordering of clock enables with delayed assigns. (#613) [Jeremy Bennett]\n* Fix vpi_iterate on memory words. (#655) [Rich Porter]\n* Fix final duplicate declarations when non-inlined. (#661) [Charlie Brej]\n* Fix interface ports with comma lists. (#1779) [Ed Lander]\n* Fix parameter real conversion from integer.\n* Fix clang warnings. (#668)  [Yutetsu Takatsukasa]\n\n\nVerilator 3.850 2013-06-02\n==========================\n\n**Major:**\n\n* Support interfaces and modports. (#102)  [Byron Bradley, Jeremy Bennett]\n\n**Minor:**\n\n* Duplicate clock gate optimization on by default. (#621)\n* Fix arrayed input compile error. (#645) [Krzysztof Jankowski]\n* Fix GCC version runtime changes. (#651) [Jeremy Bennett]\n* Fix packed array select internal error. (#652) [Krzysztof Jankowski]\n\n\nVerilator 3.847 2013-05-11\n==========================\n\n**Minor:**\n\n* Add ALWCOMBORDER warning. [KC Buckenmaier]\n* Add --pins-sc-uint and --pins-sc-biguint. (#638) [Alex Hornung]\n* Support \"signal[vec]++\".\n* Fix simulation error when inputs and MULTIDRIVEN. (#634) [Ted Campbell]\n* Fix module resolution with __. (#631) [Jason McMullan]\n* Fix packed array non-zero right index select crash. (#642) [Krzysztof Jankowski]\n* Fix nested union crash. (#643) [Krzysztof Jankowski]\n\n\nVerilator 3.846 2013-03-09\n==========================\n\n**Major:**\n\n* IEEE 1800-2012 is now the default language. This adds 4 new keywords\n  and updates the svdpi.h and vpi_user.h header files.\n* Add --report-unoptflat. (#611) [Jeremy Bennett]\n\n**Minor:**\n\n* Add duplicate clock gate optimization. (#1772) [Varun Koyyalagunta]\n  Disabled unless -OD or -O3 used, please try it as may get some\n  significant speedups.\n* Support pattern assignment features. (#616) (#617) (#618) [Ed Lander]\n* Support bind in $unit. (#602) [Ed Lander]\n* Support <number>'() sized casts. (#628) [Ed Lander]\n* Fix wrong dot resolution under inlining. [Art Stamness]\n* Fix DETECTARRAY on packed structures. (#610) [Jeremy Bennett]\n* Fix LITENDIAN on unpacked structures. (#614) [Wai Sum Mong]\n* Fix 32-bit OS VPI scan issue. (#615)  [Jeremy Bennett, Rich Porter]\n* Fix opening a VerilatedVcdC file multiple times. (#1774) [Frédéric Requin]\n* Fix UNOPTFLAT circular array bounds crossing. (#630) [Jie Xu]\n\n\nVerilator 3.845 2013-02-04\n==========================\n\n**Minor:**\n\n* Fix nested packed arrays and struct. (#600) [Jeremy Bennett]\n  Packed arrays are now represented as a single linear vector in\n  Verilated models. This may affect packed arrays that are public or\n  accessed via the VPI.\n* Support wires with data types. (#608) [Ed Lander]\n* Support bind, to module names only. (#602) [Ed Lander]\n* Support VPI product info, warning calls, etc. (#588) [Rick Porter]\n* Support $left, $right and related functions. (#448) [Iztok Jeras]\n* Support inside expressions.\n* Define SYSTEMVERILOG, SV_COV_START and other IEEE mandated predefines.\n* Fix pin width mismatch error. (#595)  [Alex Solomatnikov]\n* Fix implicit one bit parameter selection. (#603)  [Jeremy Bennett]\n* Fix signed/unsigned parameter misconversion. (#606)  [Jeremy Bennett]\n* Fix segfault on multidimensional dotted arrays. (#607)  [Jie Xu]\n* Fix per-bit array output connection error. (#414)  [Jan Egil Ruud]\n* Fix package logic var compile error.\n* Fix enums with X values.\n\n\nVerilator 3.844 2013-01-09\n==========================\n\n**Minor:**\n\n* Support \"unsigned int\" DPI import functions. (#1770)  [Alex Lee]\n* Fix package resolution of parameters. (#586) [Jeremy Bennett]\n* Fix non-integer vpi_get_value. (#587)  [Rich Porter]\n* Fix task inlining under $display and case. (#589) (#598)  [Holger Waechtler]\n* Fix package import of non-localparam parameter. (#474) (#591)  [Jeremy Bennett]\n* Fix package import of package imports, partial #592. [Jeremy Bennett]\n* Fix package import preventing local var. (#599)  [Jeremy Bennett]\n* Fix array extraction of implicit vars. (#601)  [Joe Eiler]\n\n\nVerilator 3.843 2012-12-01\n==========================\n\n**Minor:**\n\n* Add +1364-1995ext and similar language options. (#532)  [Jeremy Bennett]\n* Fix mis-optimized identical submodule subtract. (#581)  [Charlie Brej]\n* Fix crash on dotted references into dead modules. (#583)  [Jeremy Bennett]\n* Fix compile issues on MSVCC. (#571) (#577)  [Amir Gonnen]\n* Fix --debug overriding preceding --dump-treei. (#580)  [Jeremy Bennett]\n\n\nVerilator 3.842 2012-11-03\n==========================\n\n**Minor:**\n\n* Add -x-initial-edge. (#570)  [Jeremy Bennett]\n* Fix parameter pins interspersed with cells broke in 3.840. [Bernard Deadman]\n* Fix large shift error on large shift constants. [David Welch]\n* Fix $display mangling on GCC 4.7 and speed up. (#1765) (#373) (#574) [R Diez]\n* Fix array of struct references giving false error. (#566) [Julius Baxter]\n* Fix missing var access functions when no DPI. (#572) [Amir Gonnen]\n* Fix name collision on unnamed blocks. (#567)  [Chandan Egbert]\n* Fix name collision on task inputs. (#569)  [Chandan Egbert]\n\n\nVerilator 3.841 2012-09-03\n==========================\n\n**Major:**\n\n* Add --savable to support model save/restore. [Jeremy Bennett]\n\n**Minor:**\n\n* Support '{} assignment pattern on structures, part of #355.\n* Fix double-deep parameter cell WIDTHs. (#541)  [Hiroki Honda]\n* Fix imports under multiple instantiated cells. (#542)  [Alex Solomatnikov]\n* Fix defparam in generate broke in 3.840. (#543)  [Alex Solomatnikov]\n* Fix duplicate begin error broke in 3.840. (#548)  [Alex Solomatnikov]\n* Fix triangle symbol resolution error broke in 3.840. (#550)  [Ted Campbell]\n\n\nVerilator 3.840 2012-07-31 Beta\n===============================\n\n**Major:**\n\n* Rewrote tristate handling; supports tri0, tri1, tristate bit selects,\n  concatenates and pullup/pulldowns. (#395) (#56) (#54) (#51)\n  [Alex Solomatnikov, Lane Brooks, et al]\n* Support packed structures and unions. (#181)\n  Note this was a major internal change that may lead to some instability.\n\n**Minor:**\n\n* Support tri0 and tri1. (#462)  [Alex Solomatnikov]\n* Support nmos and pmos. (#488)  [Alex Solomatnikov]\n* Add INITIALDLY warning on initial assignments. (#478)  [Alex Solomatnikov]\n* Add PINMISSING and PINNOCONNECT lint checks.\n* Add --converge-limit option.\n* Fix generate operators not short circuiting. (#413)  [by Jeremy Bennett]\n* Fix parameters not supported in constant functions. (#474) [Alex Solomatnikov]\n* Fix duplicate warnings/errors. (#516)  [Alex Solomatnikov]\n* Fix signed extending biops with WIDTH warning off. (#511) [Junji Hashimoto]\n* Fix ITOD internal error on real conversions. (#491)  [Alex Solomatnikov]\n* Fix input and real loosing real data type. (#501)  [Alex Solomatnikov]\n* Fix imports causing symbol table error. (#490)  [Alex Solomatnikov]\n* Fix newlines in radix values. (#507) [Walter Lavino]\n* Fix loop error message to report line. (#513)  [Jeremy Bennett]\n* Fix false UNUSED warning on file system calls.\n* Fix GCC 4.7.0 compile warnings. (#530)  [Jeremy Bennett]\n* Fix svdpi.h compile error on Apple OS.\n* Fix compile error under git submodules. (#534) [Aurelien Francillon]\n\n\nVerilator 3.833 2012-04-15\n==========================\n\n**Minor:**\n\n* Support += and -= in standard for loops. (#463) [Alex Solomatnikov]\n* Fix processing unused parameterized modules. (#469) (#470)  [Alex Solomatnikov]\n* Add SELRANGE as warning instead of error. (#477) [Alex Solomatnikov]\n* Add readme.pdf and internal.pdf and doxygen. (#483)  [by Jeremy Bennett]\n* Fix change detections on arrays. (#364)  [John Stevenson, Alex Solomatnikov]\n* Fix signed array warning. (#456) [Alex Solomatnikov]\n* Fix genvar and begin under generate. (#461)  [Alex Solomatnikov]\n* Fix real constant parameter functions. (#475)  [Alex Solomatnikov]\n* Fix and document --gdb option. (#454) [Jeremy Bennett]\n* Fix OpenSolaris compile error. [Sanjay Singh]\n\n\nVerilator 3.832 2012-03-07\n==========================\n\n**Minor:**\n\n* Fix memory delayed assignments from multiple clock domains. [Andrew Ling]\n* Support arrayed SystemC I/O pins. [Christophe Joly]\n* Report MULTIDRIVEN on memories set in multiple clock domains.\n* Report ENDLABEL on mismatching end labels. (#450) [Iztok Jeras]\n* Fix expansion of back-slashed escaped macros. (#441) [Alberto Del Rio]\n* Fix inheriting real and signed type across untyped parameters.\n* Fix core dump with over 100 deep UNOPTFLAT. (#432) [Joe Eiler]\n* Fix false command not found warning in makefiles. [Ruben Diez]\n* Fix hang when functions inside begin block. [David Welch]\n* Fix hang on recursive substitution `defines. (#443) [Alex Solomatnikov]\n\n\nVerilator 3.831 2012-01-20\n==========================\n\n**Major:**\n\n* Support SystemC 2.3.0 prerelease. This requires setting the new\n  SYSTEMC_INCLUDE and SYSTEMC_LIBDIR variables in place of now\n  deprecated SYSTEMC and SYSTEMC_ARCH. [Iztok Jeras]\n\n**Minor:**\n\n* Suppress VARHIDDEN on dpi import arguments. [Ruben Diez]\n* Support \"generate for (genvar i=0; ...\". [David Kravitz]\n* Fix dpi exports with > 32 bit but < 64 bit args. (#423) [Chandan Egbert]\n* Fix array of instantiations with sub-range output. (#414) [Jeremy Bennett]\n* Fix BLKSEQ warnings on variables declared inside always. [Ruben Diez]\n\n\nVerilator 3.830 2011-11-27\n==========================\n\n**Major:**\n\n* With \"--language VAMS\" support a touch of Verilog AMS. [Holger Waechtler]\n\n**Minor:**\n\n* Add sc_bv attribute to force bit vectors. (#402) [by Stefan Wallentowitz]\n* Search for user -y paths before default current directory. [Ruben Diez]\n* Support constants in sensitivity lists. (#412)  [Jeremy Bennett]\n* Support $system. [Ruben Diez]\n* Support $sscanf with %g. [Holger Waechtler]\n* Indicate 'exiting due to errors' if errors, not warnings. [Ruben Diez]\n* Fix bad result with if-else-return optimization. (#420) [Alex Solomatnikov]\n* Fix reporting not found modules if generate-off. (#403) [Jeremy Bennett]\n* Fix $display with %d following %g. [Holger Waechtler]\n\n\nVerilator 3.824 2011-10-25\n==========================\n\n**Minor:**\n\n* Fix \"always @ (* )\". (#403) (#404)  [Walter Lavino]\n* Add ASSIGNIN as suppressible error. [Jeremy Bennett]\n* Fix 3.823 constructor core dump on Debian. (#401)  [Ahmed El-Mahmoudy]\n\n\nVerilator 3.823 2011-10-20\n==========================\n\n**Minor:**\n\n* Support $ceil, $floor, etc. [Alex Solomatnikov]\n* Add configure options for cc warnings and extended tests. [Ruben Diez]\n* Add -Wall reporting ASSIGNDLY on assignment delays. [Ruben Diez]\n* Fix UNDRIVEN warnings inside DPI import functions. [Ruben Diez]\n* Fix --help output to go to stderr, not stdout. (#397)  [Ruben Diez]\n* Fix DPI import output of 64 bits. (#398) [Mike Denio]\n* Fix DPI import false BLKSEQ warnings. [Alex Solomatnikov]\n* Fix MSVC compile warning with trunc/round. (#394) [Amir Gonnen]\n* Fix autoconf and Makefile warnings. (#396)  [Ruben Diez]\n\n\nVerilator 3.821 2011-09-14\n==========================\n\n**Minor:**\n\n* Fix PowerPC runtime error. (#288) [Ahmed El-Mahmoudy]\n* Fix internal error on integer casts. (#374) [Chandan Egbert]\n\n\nVerilator 3.820 2011-07-28\n==========================\n\n**Minor:**\n\n* Support 'real' numbers and related functions.\n* Support 'const' variables in limited cases; similar to enums. [Alex Solomatnikov]\n* Support disable for loop escapes.\n* Support $fopen and I/O with integer instead of `verilator_file_descriptor.\n* Support coverage in -cc and -sc output modes. [John Li]\n  Note this requires SystemPerl 1.338 or newer.\n* Use 'vluint64_t' for SystemC instead of (same sized) 'uint64' for MSVC++.\n* Fix vpi_register_cb using bad s_cb_data. (#370)  [by Thomas Watts]\n* Fix $display missing leading zeros in %0d. (#367)  [Alex Solomatnikov]\n\n\nVerilator 3.813 2011-06-28\n==========================\n\n**Minor:**\n\n* Support bit vectors > 64 bits wide in DPI import and exports.\n* Fix out of memory on slice syntax error. (#354)  [Alex Solomatnikov]\n* Fix error on enum references to other packages. (#339) [Alex Solomatnikov]\n* Fix DPI undeclared svBitVecVal compile error. (#346) [Chandan Egbert]\n* Fix DPI bit vector compile errors. (#347) (#359) [Chandan Egbert]\n* Fix CDCRSTLOGIC report showing endpoint flops without resets.\n* Fix compiler warnings on SPARC. (#288) [Ahmed El-Mahmoudy]\n\n\nVerilator 3.812 2011-04-06\n==========================\n\n**Minor:**\n\n* Add --trace-max-width and --trace-max-array. (#319)  [Alex Solomatnikov]\n* Add --Wno-fatal to turn off abort on warnings. [by Stefan Wallentowitz]\n* Support ${...} and $(...) env vars in .vc files. [by Stefan Wallentowitz]\n* Support $bits(data_type). (#327)  [Alex Solomatnikov]\n* Support loop unrolling on width mismatches. (#333) [Joe Eiler]\n* Support simple cast operators. (#335)  [Alex Solomatnikov]\n* Accelerate bit-selected inversions.\n* Add error on circular parameter definitions. (#329) [Alex Solomatnikov]\n* Fix concatenates and vectored bufif1. (#326) [Iztok Jeras]\n\n\nVerilator 3.811 2011-02-14\n==========================\n\n**Minor:**\n\n* Report error on duplicated or empty pins. (#321)  [Christian Leber]\n* Report error on function call output tied to constant. [Bernard Deadman]\n* Throw UNUSED/UNDRIVEN only once per net in a parameterized module.\n* Fix internal error on functions called as SV tasks. [Bernard Deadman]\n* Fix internal error on non-inlined inout pins. [Jeff Winston]\n* Fix false BLKSEQ on non-unrolled for loop indexes. [Jeff Winston]\n* Fix block comment not separating identifiers. (#311) [Gene Sullivan]\n* Fix warnings to point to lowest net usage, not upper level ports.\n* Fix error on constants connected to outputs. (#323)  [Christian Leber]\n\n\nVerilator 3.810 2011-01-03\n==========================\n\n**Major:**\n\n* Add limited support for VPI access to public signals, see docs.\n* Add -F option to read relative option files. (#297) [Neil Hamilton]\n* Support ++,--,+= etc as standalone statements. [Alex Solomatnikov]\n* Add -Wall, -Wwarn-style, -Wno-style to enable code style warnings\n  that have been added to this release, and disabled by default:\n* With --Wall, add BLKSEQ warning on blocking assignments in seq blocks.\n* With --Wall, add DECLFILENAME warning on modules not matching filename.\n* With --Wall, add DEFPARAM warning on deprecated defparam statements.\n* With --Wall, add IFDEPTH warning on deep if statements.\n* With --Wall, add INCABSPATH warning on `include with absolute paths.\n* With --Wall, add SYNCASYNCNET warning on mixed sync/async reset nets.\n* With --Wall, add UNDRIVEN warning on undriven nets.\n* With --Wall, add UNUSED warning on unused nets.\n\n**Minor:**\n\n* When running with VERILATOR_ROOT, optionally find binaries under bin.\n* Suppress WIDTH warnings when adding/subtracting 1'b1.\n* The VARHIDDEN warning is now disabled by default, use -Wall to enable.\n\n\nVerilator 3.805 2010-11-02\n==========================\n\n**Minor:**\n\n* Add warning when directory contains spaces. (#1705)  [Salman Sheikh]\n* Fix wrong filename on include file errors. (#289) [Brad Parker]\n* Fix segfault on SystemVerilog \"output wire foo=0\". (#291)  [Joshua Wise]\n* Fix DPI export name not found. (#1703)  [Terry Chen]\n\n\nVerilator 3.804 2010-09-20\n==========================\n\n**Minor:**\n\n* Support tracing/coverage of underscore signals. (#280)  [by Jason McMullan]\n* Increase define recursions before error. [Paul Liu]\n* On core dump, print debug suggestions.\n* Fix preprocessor \\`\\` of existing base define. (#283)  [Usha Priyadharshini]\n\n\nVerilator 3.803 2010-07-10\n==========================\n\n**Minor:**\n\n* Fix preprocessor preservation of newlines across macro substitutions.\n* Fix preprocessor stringification of nested macros.\n* Fix some constant parameter functions causing crash. (#253) [Nick Bowler]\n* Fix do {...} while() not requiring final semicolon.\n\n\nVerilator 3.802 2010-05-01\n==========================\n\n**Minor:**\n\n* Support runtime access to public signal names.\n* Add /*verilator public_flat_rw*/ for timing-specific public access.\n* Fix word size to match uint64_t on -m64 systems. (#238) [Joe Eiler]\n* Improve error handling on slices of arrays. (#226) [by Byron Bradley]\n* Report errors when extra underscores used in meta-comments.\n* Fix bit reductions on multi-packed dimensions. (#227) [by Byron Bradley]\n* Fix removing $fscanf if assigned to unused var. (#248) [Ashutosh Das]\n* Fix \"make install\" with configure outside srcdir. [Stefan Wallentowitz]\n* Fix loop unroller out of memory; change --unroll-stmts. [Ashutosh Das]\n* Fix trace files with empty modules crashing some viewers.\n* Fix parsing single files > 2GB. [Jeffrey Short]\n* Fix installing data files as non-executable. (#168) [by Ahmed El-Mahmoudy]\n\n\nVerilator 3.801 2010-03-17\n==========================\n\n**Minor:**\n\n* Support \"break\", \"continue\", \"return\".\n* Support \"`default_nettype none|wire\". [Dominic Plunkett]\n* Skip SystemC tests if not installed. [Iztok Jeras]\n* Fix clock-gates with non-AND complex logic. (#220) [Ashutosh Das]\n* Fix flushing VCD buffers on $stop. [Ashutosh Das]\n* Fix Mac OS-X compile issues. (#217)  [Joshua Wise, Trevor Williams]\n* Fix make uninstall. (#216)  [Iztok Jeras]\n* Fix parameterized defines with empty arguments.\n\n\nVerilator 3.800 2010-02-07\n==========================\n\n**Major application visible changes:**\n\n* SystemPerl is no longer required for tracing.\n  Applications must use VerilatedVcdC class in place of SpTraceVcdC.\n* SystemVerilog 1800-2009 is now the default language.\n  Thus \"global\" etc are now keywords. See the --language option.\n\n**Major new features:**\n\n* Support SystemVerilog types \"byte\", \"chandle\", \"int\", \"longint\",\n  \"shortint\", \"time\", \"var\" and \"void\" in variables and functions.\n* Support \"program\", \"package\", \"import\" and $unit.\n* Support typedef and enum. [by Donal Casey]\n* Support direct programming interface (DPI) \"import\" and \"export\".\n  Includes an extension to map user $system PLI calls to the DPI.\n* Support assignments of multidimensional slices. (#170) [by Byron Bradley]\n* Support multidimensional inputs/outputs. (#171) [by Byron Bradley]\n* Support \"reg [1:0][1:0][1:0]\" and \"reg x [3][2]\". (#176)  [Byron Bradley]\n* Support declarations in loop initializers. (#172)  [by Byron Bradley]\n* Support $test$plusargs and $value$plusargs, but see the docs!\n* Support $sformat and $swrite.\n* Support 1800-2009 define defaults and `undefineall.\n* Add -CFLAGS, -LDFLAGS, <file>.a, <file>.o, and <file>.so options.\n* Speed compiles by avoiding including the STL iostream header.\n  Application programs may need to include it themselves to avoid errors.\n* Add experimental clock domain crossing checks.\n* Add experimental --pipe-filter to filter all Verilog input.\n* Add experimental config files to filter warnings outside of the source.\n* Add VARHIDDEN warning when signal name hides module name.\n* Support optional cell parenthesis. (#179) [by Byron Bradley]\n* Support for-loop i++, ++i, i--, --i. (#175) [by Byron Bradley]\n* Support 1800-2009 /*comments*/ in define values.\n* Add Makefile VM_GLOBAL_FAST, listing objects needed to link executables.\n* Add --bbox-unsup option to black-box unsupported UDP tables.\n* Add -Wno-MODDUP option to allow duplicate modules.\n\n**Bug fixes:**\n\n* Fix implicit variable issues. (#196) (#201) [Byron Bradley]\n* Fix 'for' variable typing. (#205)  [by Byron Bradley]\n* Fix tracing with --pins-bv 1. (#195)  [Michael S]\n* Fix MSVC++ 2008 compile issues. (#209)  [Amir Gonnen]\n* Fix MinGW compilation. (#184) (#214) [by Shankar Giri, Amir Gonnen]\n* Fix Cygwin 1.7.x compiler error with uint32_t. (#204)  [Ivan Djordjevic]\n* Fix `define argument mis-replacing system task of same name. (#191)\n* Fix Verilator core dump on wide integer divides. (#178) [Byron Bradley]\n* Fix lint_off/lint_on meta comments on same line as warning.\n\n\nVerilator 3.720 2009-10-26\n==========================\n\n**Major:**\n\n* Support little endian bit vectors (\"reg [0:2] x;\").\n* Support division and modulus of > 64 bit vectors. [Gary Thomas]\n\n**Minor:**\n\n* Fix writing to out-of-bounds arrays writing element 0.\n* Fix core dump with SystemVerilog var declarations under unnamed begins.\n* Fix VCD files showing internal flattened hierarchy, broke in 3.714.\n* Fix cell port connection to unsized integer causing false width warning.\n* Fix erroring on strings with backslashed newlines. (#168) [Pete Nixon]\n\n\nVerilator 3.714 2009-09-18\n==========================\n\n**Major:**\n\n* Add --bbox-sys option to blackbox $system calls.\n\n**Minor:**\n\n* Support generate for var++, var--, ++var, --var.\n* Improved warning when \"do\" used as identifier.\n* Don't require SYSTEMPERL_INCLUDE if SYSTEMPERL/src exists. [Gary Thomas]\n* Fix deep defines causing flex scanner overflows. [Brad Dobbie]\n* Fix preprocessing commas in deep parameterized macros. [Brad Dobbie]\n* Fix tracing escaped dotted identifiers. (#107)\n* Fix $display with uppercase %M.\n* Fix --error-limit option being ignored.\n\n\nVerilator 3.713 2009-08-04\n==========================\n\n**Minor:**\n\n* Support constant function calls for parameters. [many!]\n* Support SystemVerilog \"logic\". (#101)  [by Alex Duller]\n* Name SYMRSVDWORD error, and allow disabling it. (#103) [Gary Thomas]\n* Fix escaped preprocessor identifiers. (#106) [Nimrod Gileadi]\n\n\nVerilator 3.712 2009-07-14\n==========================\n\n**Major:**\n\n* Patching SystemC is no longer required to trace sc_bvs.\n\n**Minor:**\n\n* Add verilator --pins-uint8 option to use sc_in<uint8_t/uint16_t>.\n* Add verilator -V option, to show verbose version.\n* Add BLKLOOPINIT error code, and describe --unroll-count. [Jeff Winston]\n* Support zero-width constants in concatenations. [Jeff Winston]\n* On WIDTH warnings, show variable name causing error. [Jeff Winston]\n\n\nVerilator 3.711 2009-06-23\n==========================\n\n**Minor:**\n\n* Support decimal constants of arbitrary widths. [Mark Marshall]\n* Fix error on case statement with all duplicate items. (#99) [Gary Thomas]\n* Fix segfault on unrolling for's with bad inits. (#90) [Andreas Olofsson]\n* Fix tristates causing \"Assigned pin is neither...\". [by Lane Brooks]\n* Fix compiler errors under Fedora release candidate 11. [Chitlesh Goorah]\n\n\nVerilator 3.710 2009-05-19\n==========================\n\n**Major:**\n\n* Verilator is now licensed under LGPL v3 and/or Artistic v2.0.\n\n**Minor:**\n\n* `__FILE__ now expands to a string, per draft SystemVerilog 2010(ish).\n* The front end parser has been re-factored to enable more SV parsing.\n  Code should parse the same, but minor parsing bugs may pop up.\n* Verilator_includer is no longer installed twice. (#48)  [Lane Brooks]\n* Fix escaped identifiers with '.' causing conflicts. (#83)  [J Baxter]\n* Fix define formal arguments that contain newlines. (#84) [David A]\n\n\nVerilator 3.703 2009-05-02\n==========================\n\n**Minor:**\n\n* Fix $clog2 calculation error with powers-of-2. (#81) [Patricio Kaplan]\n* Fix error with tasks that have output first. (#78)  [Andrea Foletto]\n* Fix \"cloning\" error with -y/--top-module. (#76) [Dimitris Nalbantis]\n* Fix segfault with error on bad --top-module. (#79) [Dimitris Nalbantis]\n* Fix \"redefining I\" error with complex includes. [Duraid Madina]\n* Fix GCC 4.3.2 compile warnings.\n\n\nVerilator 3.702 2009-03-28\n==========================\n\n**Minor:**\n\n* Add --pins-bv option to use sc_bv for all ports. [Brian Small]\n* Add SYSTEMPERL_INCLUDE envvar to assist RPM builds. [Chitlesh Goorah]\n* Report errors when duplicate labels are used. (#72)  [Vasu Kandadi]\n* Fix the SC_MODULE name() to not include __PVT__. [Bob Fredieu]\n\n\nVerilator 3.701 2009-02-26\n==========================\n\n**Minor:**\n\n* Support repeat and forever statements. [Jeremy Bennett]\n* Add --debugi-<srcfile> option, for internal debugging. [Dennis Muhlestein]\n* Fix compile issues with GCC 4.3. (#47)  [Lane Brooks]\n* Fix VL_RANDom to better randomize bits. [Art Stamness]\n* Fix error messages to consistently go to stderr. [Jeremy Bennett]\n* Fix left associativity for ?: operators.\n\n\nVerilator 3.700 2009-01-08\n==========================\n\n**Major:**\n\n* Support limited tristate inouts. Written by Lane Brooks,\n  under support by Ubixum Inc. This allows common pad ring and\n  tristate-mux structures to be Verilated. See the documentation for\n  more information on supported constructs.\n* Add --coverage_toggle for toggle coverage analysis.\n  Running coverage now requires SystemPerl 1.301 or newer.\n* Add coverage_on/_off metacomments to bracket coverage regions.\n\n**Minor:**\n\n* Support posedge of bit-selected signals. (#45) [Rodney Sinclair]\n* Optimize two-level shift and and/or trees, +23% on one test.\n* Line coverage now aggregates by hierarchy automatically.\n  Previously this would be done inside SystemPerl, which was slower.\n* Minor performance improvements of Verilator compiler runtime.\n* Coverage of each parameterized module is counted separately. [Bob Fredieu]\n* Fix creating parameterized modules when no parameter values are changed.\n* Fix certain generate-if cells causing \"clone\" error. [Stephane Laurent]\n* Fix line coverage of public functions. [Soon Koh]\n* Fix SystemC 2.2 deprecated warnings about sensitive() and sc_start().\n* Fix arrayed variables under function not compiling. (#44) [Ralf Karge]\n* Fix --output-split-cfuncs to also split trace code. [Niranjan Prabhu]\n* Fix 'bad select range' warning missing some cases. (#43) [Lane Brooks]\n* Fix internal signal names containing control characters (broke in 3.680).\n* Fix compile error on Ubuntu 8.10. [Christopher Boumenot]\n* Fix internal error on \"output x; reg x = y;\".\n* Fix wrong result for read of delayed FSM signal. (#46) [Rodney Sinclair]\n\n\nVerilator 3.681 2008-11-12\n==========================\n\n**Minor:**\n\n* Support SystemVerilog unique and priority case.\n* Include Verilog file's directory name in coverage reports.\n* Fix 'for' under 'generate-for' causing error. (#38) [Rafael Shirakawa]\n* Fix coverage hierarchy being backwards with inlining. [Vasu Arasanipalai]\n* Fix GCC 4.3 compile error. (#35)  [Lane Brooks]\n* Fix MSVC compile error. (#42)  [John Stroebel]\n\n\nVerilator 3.680 2008-10-08\n==========================\n\n**Major:**\n\n* Support negative bit indexes. [Stephane Laurent]\n  Tracing negative indexes requires latest Verilog-Perl and SystemPerl.\n\n**Minor:**\n\n* Suppress width warnings between constant strings and wider vectors.\n  [Rodney Sinclair]\n* Ignore SystemVerilog timeunit and timeprecision.\n* Expand environment variables in -f input files. [Lawrence Butcher]\n* Report error if port declaration is missing. (#32) [Guy-Armand Kamendje]\n* Fix genvars causing link error when using --public. [Chris Candler]\n\n\nVerilator 3.671 2008-09-19\n==========================\n\n**Major:**\n\n* SystemC uint64_t pins are now the default instead of sc_bv<64>.\n  Use --no-pins64 for backward compatibility.\n* Support SystemVerilog \"cover property\" statements.\n\n**Minor:**\n\n* When warnings are disabled on signals that are flattened out, disable\n  the warnings on the signal(s) that replace it.\n* Add by-design and by-module subtotals to verilator_profcfunc.\n* Add IMPERFECTSCH warning, disabled by default.\n* Support coverage under SystemPerl 1.285 and newer.\n* Support arbitrary characters in identifiers. [Stephane Laurent]\n* Fix extra evaluation of pure combo blocks in SystemC output.\n* Fix stack overflow on large ? : trees. [John Sanguinetti]\n\n\nVerilator 3.670 2008-07-23\n==========================\n\n**Major:**\n\n* Add --x-assign=fast option, and make it the default.\n  This chooses performance over reset debugging. See the manual.\n* Add --autoflush, for flushing streams after $display. [Steve Tong]\n* Add CASEWITHX lint warning and if disabled fix handling of casez with Xs.\n\n**Minor:**\n\n* Add $feof, $fgetc, $fgets, $fflush, $fscanf, $sscanf. [Holger Waechtler]\n* Add $stime. [Holger Waechtler]\n* Add $random.\n* Add --Wfuture-, for improving forward compatibility.\n* Add WIDTH warning to $fopen etc file descriptors.\n* Fix verilator_includer not being installed properly. [Holger Waechtler]\n* Fix IMPURE errors due to X-assignment temporary variables. [Steve Tong]\n* Fix \"lvalue\" errors with public functions. (#25)  [CY Wang]\n\n\nVerilator 3.665 2008-06-25\n==========================\n\n**Minor:**\n\n* Ignore \"// verilator\" comments alone on endif lines. [Rodney Sinclair]\n* \"Make install\" now installs verilator_includer and verilator_profcfunc.\n* Fix tracing missing changes on undriven public wires. [Rodney Sinclair]\n* Fix syntax error when \"`include `defname\" is ifdefed. [John Dickol]\n* Fix error when macro call has commas in concatenate. [John Dickol]\n* Fix compile errors under Fedora 9, GCC 4.3.0. [by Jeremy Bennett]\n* Fix Makefile to find headers/libraries under prefix. [by Holger Waechtler]\n\n\nVerilator 3.664 2008-05-08\n==========================\n\n**Minor:**\n\n* Fix missing file in kit.\n\n\nVerilator 3.663 2008-05-07\n==========================\n\n**Minor:**\n\n* Add DESTDIR to Makefiles to assist RPM construction. [Gunter Dannoritzer]\n* Fix compiler warnings under GCC 4.2.1.\n* Fix preprocessor `else after series of `elsif. [Mark Nodine]\n* Fix parameterized defines calling define with comma. [Joshua Wise]\n* Fix comma separated list of primitives. [by Bryan Brady]\n\n\nVerilator 3.662 2008-04-25\n==========================\n\n**Minor:**\n\n* Add Verilog 2005 $clog2() function.\n  This is useful in calculating bus-widths from parameters.\n* Support C-style comments in -f option files. [Stefan Thiede]\n* Add error message when modules have duplicate names. [Stefan Thiede]\n* Support defines terminated in EOF, though against spec. [Stefan Thiede]\n* Support optional argument to $finish and $stop. [by Stefan Thiede]\n* Support ranges on gate primitive instantiations. [Stefan Thiede]\n* Ignore old standard(ish) Verilog-XL defines. [by Stefan Thiede]\n* Fix \"always @ ((a) or (b))\" syntax error. [by Niranjan Prabhu]\n* Fix \"output reg name=expr;\" syntax error. [Martin Scharrer]\n* Fix multiple .v files being read in random order. [Stefan Thiede]\n* Fix internal error when params get non-constants. [Johan Wouters]\n* Fix bug introduced in 3.661 with parameterized defines.\n\n\nVerilator 3.661 2008-04-04\n==========================\n\n**Major:**\n\n* The --enable-defenv configure option added in 3.660 is now the default.\n  This hard-codes a default for VERILATOR_ROOT etc in the executables.\n* Add --language option for supporting older code. [Stefan Thiede]\n* Add --top-module option to select between multiple tops. [Stefan Thiede]\n\n**Minor:**\n\n* Unsized concatenates now give WIDTHCONCAT warnings. [Jonathan Kimmitt]\n  Previously they threw fatal errors, which in most cases is correct\n  according to spec, but can be incorrect in presence of parameter values.\n* Support functions with \"input integer\". [Johan Wouters]\n* Ignore delays attached to gate UDPs. [Stefan Thiede]\n* Fix SystemVerilog parameterized defines with \\`\\` expansion,\n  and fix extra whitespace inserted on substitution. [Vladimir Matveyenko]\n* Fix no-module include files on command line. [Stefan Thiede]\n* Fix dropping of backslash quoted-quote at end of $display.\n* Fix task output pin connected to non-variables. [Jonathan Kimmitt]\n* Fix missing test_v in install datadir. [Holger Waechtler]\n* Fix internal error after MSB < LSB error reported to user. [Stefan Thiede]\n\n\nVerilator 3.660 2008-03-23\n==========================\n\n**Minor:**\n\n* Support hard-coding VERILATOR_ROOT etc in the executables,\n  to enable easier use of Verilator RPMs. [Gunter Dannoritzer]\n* Allow multiple .v files on command line. [Stefan Thiede]\n* Convert re-defining macro error to warning. [Stefan Thiede]\n* Add --error-limit option. [Stefan Thiede]\n* Allow __ in cell names by quoting them in C. [Stefan Thiede]\n* Fix genvar to be signed, so \"< 0\" works properly. [Niranjan Prabhu]\n* Fix assignments to inputs inside functions/tasks. [Patricio Kaplan]\n* Fix definitions in main file.v, referenced in library. [Stefan Thiede]\n* Fix undefined assigns to be implicit warnings. [Stefan Thiede]\n\n\nVerilator 3.658 2008-02-25\n==========================\n\n**Minor:**\n\n* Fix unistd compile error in 3.657. [Patricio Kaplan, Jonathan Kimmitt]\n\n\nVerilator 3.657 2008-02-20\n==========================\n\n**Minor:**\n\n* Fix assignments of {a,b,c} = {c,b,a}. [Jonathan Kimmitt]\n* Fix Perl warning with --lint-only. [by Ding Xiaoliang]\n* Fix to avoid creating obj_dir with --lint-only. [Ding Xiaoliang]\n* Fix parsing of always @(*). [Patricio Kaplan]\n\n\nVerilator 3.656 2008-01-18\n==========================\n\n**Minor:**\n\n* Wide VL_CONST_W_#X functions are now made automatically. [Bernard Deadman]\n  In such cases, a new {prefix}__Inlines.h file will be built and included.\n* Fix sign error when extracting from signed memory. [Peter Debacker]\n* Fix tracing of SystemC w/o SystemPerl. [Bernard Deadman, Johan Wouters]\n\n\nVerilator 3.655 2007-11-27\n==========================\n\n**Minor:**\n\n* Support \"#delay <statement>;\" with associated STMTDLY warning.\n* Fix generate for loops with constant zero conditions. [Rodney Sinclair]\n* Fix divide-by-zero errors in constant propagator. [Rodney Sinclair]\n* Fix wrong result with obscure signed-shift underneath a \"? :\".\n* Fix many internal memory leaks, and added leak detector.\n\n\nVerilator 3.654 2007-10-18\n==========================\n\n**Minor:**\n\n* Don't exit early if many warnings but no errors are found. [Stan Mayer]\n* Fix parsing module #(parameter x,y) declarations. [Oleg Rodionov]\n* Fix parsing system functions with empty parens. [Oleg Rodionov]\n\n\nVerilator 3.653 2007-08-01\n==========================\n\n**Minor:**\n\n* Support SystemVerilog ==? and !=? operators.\n* Fix SC_LIBS missing from generated makefiles. [Ding Xiaoliang]\n\n\nVerilator 3.652 2007-06-21\n==========================\n\n**Minor:**\n\n* Report as many warning types as possible before exiting.\n* Support V2K portlists with \"input a,b,...\". [Mark Nodine]\n* Support V2K function/task argument lists.\n* Optimize constant $display arguments.\n* Fix preprocessor dropping some `line directives. [Mark Nodine]\n\n\nVerilator 3.651 2007-05-22\n==========================\n\n**Major:**\n\n* Add verilator_profcfunc utility. [Gene Weber]\n\n**Minor:**\n\n* Treat modules within `celldefine and `endcelldefine as if in library.\n* Support functions which return integers. [Mark Nodine]\n* Warn if flex is not installed. [Ralf Karge]\n* Ignore `protect and `endprotect.\n* Fix empty case/endcase blocks.\n\n\nVerilator 3.650 2007-04-20\n==========================\n\n**Major:**\n\n* Add --compiler msvc option. This is now required when Verilated code\n  is to be run through MSVC++. This also enables fixing MSVC++ error\n  C1061, blocks nested too deeply. [Ralf Karge]\n* Add --lint-only option, to lint without creating other output.\n\n**Minor:**\n\n* Add /*verilator lint_save*/ and /*verilator lint_restore*/ to allow\n  friendly control over re-enabling lint messages. [Gerald Williams]\n* Support SystemVerilog .name and .* interconnect.\n* Support while and do-while loops.\n* Use $(LINK) instead of $(CXX) for Makefile link rules. [Gerald Williams]\n* Add USER_CPPFLAGS and USER_LDFLAGS to Makefiles. [Gerald Williams]\n* Fix compile errors under Windows MINGW compiler. [Gerald Williams]\n* Fix dotted bit reference to local memory. [Eugene Weber]\n* Fix 3.640 `verilog forcing IEEE 1364-1995 only. [David Hewson]\n\n\nVerilator 3.640 2007-03-12\n==========================\n\n**Minor:**\n\n* Support Verilog 2005 `begin_keywords and `end_keywords.\n* Updated list of SystemVerilog keywords to correspond to IEEE 1800-2005.\n* Add /*verilator public_flat*/. [Eugene Weber]\n* Try all +libext's in the exact order given. [Michael Shinkarovsky]\n* Fix elimination of public signals assigned to constants. [Eugene Weber]\n* Fix internal error when public for loop has empty body. [David Addison]\n* Fix \"Loops detected\" assertion when model exceeds 4GB. [David Hewson]\n* Fix display %m names inside named blocks.\n\n\nVerilator 3.633 2007-02-07\n==========================\n\n**Minor:**\n\n* Add --trace-depth option for minimizing VCD file size. [Emerson Suguimoto]\n* With VL_DEBUG, show wires causing convergence errors. [Mike Shinkarovsky]\n* Fix isolate_assignments when many signals per always. [Mike Shinkarovsky]\n* Fix isolate_assignments across task/func temporaries. [Mike Shinkarovsky]\n* Fix $display's with array select followed by wide AND. [David Hewson]\n\n\nVerilator 3.632 2007-01-17\n==========================\n\n**Minor:**\n\n* Add /*verilator isolate_assignments*/ attribute. [Mike Shinkarovsky]\n\n\nVerilator 3.631 2007-01-02\n==========================\n\n**Major:**\n\n* Support standard NAME[#] for cells created by arraying or generate for.\n  This replaces the non-standard name__# syntax used in earlier versions.\n\n**Minor:**\n\n* Fix again dotted references into generate cells. [David Hewson]\n  Verilator no longer accepts duplicated variables inside unique\n  generate blocks as this is illegal according to the specification.\n* Fix $readmem* with filenames < 8 characters. [Emerson Suguimoto]\n\n\nVerilator 3.630 2006-12-19\n==========================\n\n**Major:**\n\n* Support $readmemb and $readmemh. [Eugene Weber, Arthur Kahlich]\n\n**Minor:**\n\n* When dotted signal lookup fails, help the user by showing known scopes.\n* Fix to reduce depth of priority encoded case statements. [Eugene Weber]\n* Fix configure and compiling under Solaris. [Bob Farrell]\n* Fix dotted references inside generated cells. [David Hewson]\n* Fix missed split optimization points underneath other re-split blocks.\n\n\nVerilator 3.623 2006-12-05\n==========================\n\n**Major:**\n\n* Add --output-split-cfuncs for accelerating GCC compile. [Eugene Weber]\n\n**Minor:**\n\n* Add M32 make variable to support -m32 compiles. [Eugene Weber]\n* Fix $signed mis-extending when input has a WIDTH violation. [Eugene Weber]\n\n\nVerilator 3.622 2006-10-17 Stable\n=================================\n\n**Minor:**\n\n* Fix --skip-identical without --debug, broken in 3.621. [Andy Meier]\n\n\nVerilator 3.621 2006-10-11 Beta\n===============================\n\n**Major:**\n\n* Add /*verilator no_inline_task*/ to prevent over-expansion. [Eugene Weber]\n\n**Minor:**\n\n* Public functions now allow > 64 bit arguments.\n* Remove .vpp intermediate files when not under --debug.\n* Fix link error when using --exe with --trace. [Eugene Weber]\n* Fix mis-optimization of wide concats with constants.\n* Fix core dump on printing error when not under --debug. [Allan Cochrane]\n\n\nVerilator 3.620 2006-10-04 Stable\n=================================\n\n**Minor:**\n\n* Support simple inout task ports. [Eugene Weber]\n* Allow overriding Perl, Flex and Bison versions. [by Robert Farrell]\n* Optimize variables set to constants within basic blocks for ~3%.\n* Default make no longer makes the docs; if you edit the documentation.\n  sources, run \"make info\" to get them.\n* Optimize additional Boolean identities (a|a = a, etc.)\n* Fix coredump when dotted cross-ref inside task call. [Eugene Weber]\n* Fix dotted variables in always sensitivity lists. [Allan Cochrane]\n\n\nVerilator 3.610 2006-09-20 Stable\n=================================\n\n**Minor:**\n\n* Verilator now works under DJGPP (Pentium GCC). [John Stroebel]\n* Add default define for VL_PRINTF. [John Stroebel]\n* Removed coverage request variable; see Coverage limitations in docs.\n* Fix DOS carriage returns in multiline defines. [Ralf Karge]\n* Fix printf format warnings on 64-bit linux.\n\n\nVerilator 3.602 2006-09-11 Stable\n=================================\n\n**Minor:**\n\n* Fix function references under top inlined module. [David Hewson]\n\n\nVerilator 3.601 2006-09-06 Beta\n===============================\n\n**Major:**\n\n* Add --inhibit-sim flag for environments using old __Vm_inhibitSim.\n* Add `systemc_dtor for destructor extensions. [Allan Cochrane]\n* Add -MP to make phony dependencies, ala GCC's.\n\n**Minor:**\n\n* Changed how internal functions are invoked to reduce aliasing.\n  Useful when using GCC's -O2 or -fstrict-aliasing, to gain another ~4%.\n* Declare optimized lookup tables as 'static', to reduce D-Cache miss rate.\n* Fix memory leak when destroying modules. [John Stroebel]\n* Fix coredump when unused modules have unused cells. [David Hewson]\n* Fix 3.600 internal error with arrayed instances. [David Hewson]\n* Fix 3.600 internal error with non-unrolled function loops. [David Hewson]\n* Fix $display %m name not matching Verilog name inside SystemC modules.\n\n\nVerilator 3.600 2006-08-28 Beta\n===============================\n\n**Major:**\n\n* Support dotted cross-hierarchy variable and task references.\n\n**Minor:**\n\n* Lint for x's in generate case statements.\n* Fix line numbers being off by one when first file starts with newline.\n* Fix naming of generate for blocks to prevent non-inline name conflict.\n* Fix redundant statements remaining after table optimization.\n\n\nVerilator 3.542 2006-08-11 Stable\n=================================\n\n**Minor:**\n\n* vl_finish and vl_fatal now print via VL_PRINTF rather then cerr/cout.\n* Fix extraneous UNSIGNED warning when comparing genvars. [David Hewson]\n* Fix extra white space in $display %c. [by David Addison]\n* Fix missing VL_CONST_W_24X macro. [Bernard Deadman]\n\n\nVerilator 3.541 2006-07-05 Beta\n===============================\n\n**Minor:**\n\n* Add warning on changeDetect to arrayed structures. [David Hewson]\n* Fix \"// verilator lint_on\" not re-enabling warnings. [David Hewson]\n* Fix 3.540's multiple memory assignments to same block. [David Hewson]\n* Fix non-zero start number for arrayed instantiations. [Jae Hossell]\n* Fix GCC 4.0 header file warnings.\n\n\nVerilator 3.540 2006-06-27 Beta\n===============================\n\n**Minor:**\n\n* Optimize combo assignments that are used only once, ~5-25% faster.\n* Optimize delayed assignments to memories inside loops, ~0-5% faster.\n* Fix mis-width warning on bit selects of memories. [David Hewson]\n* Fix mis-width warning on dead generate-if branches. [Jae Hossell]\n\n\nVerilator 3.533 2006-06-05 Stable\n=================================\n\n**Minor:**\n\n* Add PDF user manual, verilator.pdf.\n* Fix delayed bit-selected arrayed assignments. [David Hewson]\n* Fix execution path to Perl. [Shanshan Xu]\n* Fix Bison compile errors in verilog.y. [by Ben Jackson]\n\n\nVerilator 3.531 2006-05-10 Stable\n=================================\n\n**Minor:**\n\n* Support $c routines which return 64 bit values.\n* Fix `include `DEFINE.\n* Fix Verilator core dump when have empty public function. [David.Hewson]\n\n\nVerilator 3.530 2006-04-24 Stable\n=================================\n\n**Major:**\n\n* $time is now 64 bits. The macro VL_TIME_I is now VL_TIME_Q, but calls\n  the same sc_time_stamp() function to get the current time.\n\n\nVerilator 3.523 2006-03-06 Stable\n=================================\n\n**Minor:**\n\n* Fix error line numbers being off due to multi-line defines. [Mat Zeno]\n* Fix GCC sign extending (uint64_t)(a<b). [David Hewson]\n* Fix `systemc_imp_header \"undefined macro\" error.\n\n\nVerilator 3.522 2006-02-23 Beta\n===============================\n\n**Minor:**\n\n* Add UNUSED error message, for forward compatibility.\n\n\nVerilator 3.521 2006-02-14 Beta\n===============================\n\n**Major:**\n\n* Create new --coverage-line and --coverage-user options. [Peter Holmes]\n\n**Minor:**\n\n* Add SystemVerilog 'x,'z,'0,'1, and new string literals.\n* Fix public module's parent still getting inlined.\n\n\nVerilator 3.520 2006-01-14 Stable\n=================================\n\n**Major:**\n\n* Support $fopen, $fclose, $fwrite, $fdisplay.\n  See documentation, as the file descriptors differ from the standard.\n\n\nVerilator 3.510 2005-12-17 Stable\n=================================\n\n**Major:**\n\n* Improve trace-on performance on large multi-clock designs by 2x or more.\n  This adds a small ~2% performance penalty if traces are compiled in,\n  but not turned on. For best non-tracing performance, do not use --trace.\n\n**Minor:**\n\n* Fix $'s in specify delays causing bad PLI errors. [Mat Zeno]\n* Fix public functions not setting up proper symbol table. [Mat Zeno]\n* Fix genvars generating trace compile errors. [Mat Zeno]\n* Fix VL_MULS_WWW compile error with MSVC++. [Wim Michiels]\n\n\nVerilator 3.502 2005-11-30 Stable\n=================================\n\n**Minor:**\n\n* Fix local non-IO variables in public functions and tasks.\n* Fix bad lifetime optimization when same signal is assigned multiple\n  times in both branch of an if. [Danny Ding]\n\n\nVerilator 3.501 2005-11-16 Stable\n=================================\n\n**Major:**\n\n* Add --prof-cfuncs for correlating profiles back to Verilog.\n\n**Minor:**\n\n* Fix functions where regs are declared before inputs. [Danny Ding]\n* Fix bad deep expressions with bit-selects and rotate. [Prabhat Gupta]\n\n\nVerilator 3.500 2005-10-30 Stable\n=================================\n\n**Major:**\n\n* Support signed numbers, >>>, $signed, $unsigned. [MANY!]\n* Support multi-dimensional arrays. [Eugen Fekete]\n* Support very limited Property Specification Language\n  (aka PSL or Sugar). The format and keywords are now very limited, but will\n  grow with future releases. The --assert switch enables this feature.\n* With --assert, generate assertions for synthesis parallel_case and full_case.\n\n**Minor:**\n\n* Fix generate if's with empty if/else blocks. [Mat Zeno]\n* Fix generate for cell instantiations with same name. [Mat Zeno]\n\n\nVerilator 3.481 2005-10-12 Stable\n=================================\n\n**Minor:**\n\n* Add /*verilator tracing_on/off*/ for waveform control.\n* Fix split optimization reordering $display statements.\n\n\nVerilator 3.480 2005-09-27 Beta\n===============================\n\n**Major:**\n\n* Allow coverage of flattened modules, and multiple points per line.\n  Coverage analysis requires SystemPerl 1.230 or newer.\n\n**Minor:**\n\n* Add preprocessor changes to support meta-comments.\n* Optimize sequential assignments of different bits of same bus; ~5% faster.\n* Optimize away duplicate lookup tables.\n* Optimize wide concatenates into individual words. [Ralf Karge]\n* Optimize local variables from delayed array assignments.\n\n\nVerilator 3.470 2005-09-06 Stable\n=================================\n\n**Minor:**\n\n* Optimize staging flops under reset blocks.\n* Add '-Werror-...' to upgrade specific warnings to errors.\n* Add GCC branch prediction hints on generated if statements.\n* Fix bad simulation when same function called twice in same expression.\n* Fix preprocessor substitution of quoted parameterized defines.\n\n\nVerilator 3.464 2005-08-24 Stable\n=================================\n\n**Major:**\n\n* Add `systemc_imp_header, for use when using --output-split.\n* Add --stats option to dump design statistics.\n\n**Minor:**\n\n* Fix core dump with clock inversion optimizations.\n\n\nVerilator 3.463 2005-08-05 Stable\n=================================\n\n**Minor:**\n\n* Fix case defaults when not last statement in case list. [Wim Michiels]\n\n\nVerilator 3.462 2005-08-03 Stable\n=================================\n\n**Minor:**\n\n* Fix reordering of delayed assignments to same memory index. [Wim Michiels]\n* Fix compile error with Flex 2.5.1. [Jens Arm]\n* Fix multiply-instantiated public tasks generating non-compilable code.\n\n\nVerilator 3.461 2005-07-28 Beta\n===============================\n\n**Minor:**\n\n* Fix compile error with older versions of bison. [Jeff Dutton]\n\n\nVerilator 3.460 2005-07-27 Beta\n===============================\n\n**Major:**\n\n* Add -output-split option to enable faster parallel GCC compiles.\n  To support --output-split, the makefiles now split VM_CLASSES\n  into VM_CLASSES_FAST and VM_CLASSES_SLOW. This may require a\n  change to local makefiles.\n* Support -v argument to read library files.\n\n**Minor:**\n\n* When issuing unoptimizable warning, show an example path.\n* Internal tree dumps now indicate edit number that changed the node.\n* Fix false warning when a clock is constant.\n* Fix X/Z in decimal numbers. [Wim Michiels]\n* Fix genvar statements in non-named generate blocks.\n* Fix core dump when missing newline in `define. [David van der Bokke]\n\n\nVerilator 3.450 2005-07-12\n==========================\n\n**Major:**\n\n* $finish will no longer exit, but set Verilated::gotFinish().\n  This enables support for final statements, and for other cleanup code.\n  If this is undesired, redefine the vl_user_finish routine. Top level\n  loops should use Verilated::gotFinish() as an exit condition for their\n  loop, and then call top->final(). To prevent an infinite loop, a double\n  $finish will still exit; this may be removed in future releases.\n* Support SystemVerilog keywords $bits, $countones, $isunknown,\n  $onehot, $onehot0, always_comb, always_ff, always_latch, finish.\n\n**Minor:**\n\n* Fix \"=== 1'bx\" to always be false, instead of random.\n\n\nVerilator 3.440 2005-06-28 Stable\n=================================\n\n**Major:**\n\n* Add Verilog 2001 generate for/if/case statements.\n\n\n\nVerilator 3.431 2005-06-24 Stable\n=================================\n\n**Minor:**\n\n* Fix selection bugs introduced in 3.430 beta.\n\n\nVerilator 3.430 2005-06-22 Beta\n===============================\n\n**Minor:**\n\n* Add Verilog 2001 variable part selects [n+:m] and [n-:m]. [Wim Michiels]\n\n\nVerilator 3.422 2005-06-10 Stable\n=================================\n\n**Minor:**\n\n* Add Verilog 2001 power (**) operator. [Danny Ding]\n* Fix crash and added error message when assigning to inputs. [Ralf Karge]\n* Fix tracing of modules with public functions.\n\n\nVerilator 3.421 2005-06-02 Beta\n===============================\n\n**Minor:**\n\n* Fix error about reserved word on non-public signals.\n* Fix missing initialization compile errors in 3.420 beta. [Ralf Karge]\n\n\nVerilator 3.420 2005-06-02 Beta\n===============================\n\n**Minor:**\n\n* Performance improvements worth ~20%\n* Add -x-assign options; ~5% faster if use -x-assign=0.\n* Add error message when multiple defaults in case statement.\n* Optimize shifts out of conditionals and if statements.\n* Optimize local 'short' wires.\n* Fix case defaults when not last statement in case list. [Ralf Karge]\n* Fix crash when wire self-assigns x=x.\n* Fix gate optimization with top-flattened modules. [Mahesh Kumashikar]\n\n\nVerilator 3.411 2005-05-30 Stable\n=================================\n\n**Minor:**\n\n* Fix compile error in GCC 2.96. [Jeff Dutton]\n\n\nVerilator 3.410 2005-05-25 Beta\n===============================\n\n**Major:**\n\n* Allow functions and tasks to be declared public.\n  They will become public C++ functions, with appropriate C++ types.\n  This allows users to make public accessor functions/tasks, instead\n  of having to use public variables and `systemc_header hacks.\n\n**Minor:**\n\n* Skip producing output files if all inputs are identical\n  This uses timestamps, similar to make. Disable with --no-skip-identical.\n* Improved compile performance with large case statements.\n* Fix internal error in V3Table. [Jeff Dutton]\n* Fix compile error in GCC 2.96, and with SystemC 1.2. [Jeff Dutton]\n\n\nVerilator 3.400 2005-04-29 Beta\n===============================\n\n**Major:**\n\n* Internal changes to support future clocking features.\n* Verilog-Perl and SystemPerl are no longer required for C++ or SystemC\n  output. If you want tracing or coverage analysis, they are still needed.\n* Add --sc to create pure SystemC output not requiring SystemPerl.\n* Add --pins64 to create 64 bit SystemC outputs instead of sc_bv<64>.\n* The --exe flag is now required to produce executables inside the makefile.\n  This was previously the case any time .cpp files were passed on the\n  command line.\n* Add -O3 and --inline-mult for performance tuning. [Ralf Karge]\n  One experiment regained 5% performance, at a cost of 300% in compile time.\n\n**Minor:**\n\n* Improved performance of large case/always statements with low fanin\n  by converting to internal lookup tables (ROMs).\n* Initialize SystemC port names. [S Shuba]\n* Add Doxygen comments to Verilated includes.\n* Fix -cc pins 8 bits wide and less to be uint8_t instead of uint16_t.\n* Fix crash when Mdir has same name as .v file. [Gernot Koch]\n* Fix crash with size mismatches on case items. [Gernot Koch]\n\n\nVerilator 3.340 2005-02-18 Stable\n=================================\n\n**Minor:**\n\n* Report misconnected pins across all modules, instead of just first error.\n* Improved large netlist compile times.\n* Fix over-active inlining, resulting in compile slowness.\n\n\nVerilator 3.332 2005-01-27\n==========================\n\n**Major:**\n\n* Add -E preprocess only flag, similar to GCC.\n* Add CMPCONSTLR when comparison is constant due to > or < with all ones.\n\n**Minor:**\n\n* Fix loss of first -f file argument, introduced in 3.331.\n\n\nVerilator 3.331 2005-01-18\n==========================\n\n**Major:**\n\n* The Verilog::Perl preprocessor is now C++ code inside of Verilator.\n  This improves performance, makes compilation easier, and enables\n  some future features.\n\n**Minor:**\n\n* Support arrays of instantiations (non-primitives only). [Wim Michiels]\n* Fix unlinked error with defparam. [Shawn Wang]\n\n\nVerilator 3.320 2004-12-10\n==========================\n\n**Major:**\n\n* NEWS is now renamed Changes, to support CPAN indexing.\n* If Verilator is passed a C file, create a makefile link rule.\n  This saves several user steps when compiling small projects.\n\n**Minor:**\n\n* Add new COMBDLY warning in place of fatal error. [Shawn Wang]\n* Fix mis-simulation with wide-arrays under bit selects. [Ralf Karge]\n* Add NC Verilog as alternative to VCS for reference tests.\n* Support implicit wire declarations on input-only signals.\n  (Dangerous, as leads to wires without drivers, but allowed by spec.)\n* Fix compile warnings on Suse 9.1\n\n\nVerilator 3.311 2004-11-29\n==========================\n\n**Major:**\n\n* Support implicit wire declarations (as a warning). [Shawn Wang]\n\n**Minor:**\n\n* Fix over-shift difference in Verilog vs C++. [Ralf Karge]\n\n\nVerilator 3.310 2004-11-15\n==========================\n\n**Major:**\n\n* Support defparam.\n* Support gate primitives: buf, not, and, nand, or, nor, xor, xnor.\n\n**Minor:**\n\n* Ignore all specify blocks.\n\n\nVerilator 3.302 2004-11-12\n==========================\n\n**Minor:**\n\n* Support NAND and NOR operators.\n* Better warnings when port widths don't match.\n* Fix internal error due to some port width mismatches. [Ralf Karge]\n* Fix WIDTH warnings on modules that are only used\n  parameterized, not in 'default' state.\n* Fix selection of SystemC library on cygwin systems. [Shawn Wang]\n* Fix runtime bit-selection of parameter constants.\n\n\nVerilator 3.301 2004-11-04\n==========================\n\n**Minor:**\n\n* Fix 64 bit [31:0] = {#{}} mis-simulation. [Ralf Karge]\n* Fix shifts greater then word width mis-simulation. [Ralf Karge]\n* Fix to work around GCC 2.96 negation bug.\n\n\nVerilator 3.300 2004-10-21\n==========================\n\n**Major:**\n\n* New backend that eliminates most VL macros.\n  Improves performance 20%-50%, depending on frequency of use of signals\n  over 64 bits. GCC compile times with -O2 shrink by a factor of 10.\n\n**Minor:**\n\n* Fix \"setting unsigned int from signed value\" warning.\n\n\nVerilator 3.271 2004-10-21\n==========================\n\n**Minor:**\n\n* Fix \"loops detected\" error with some negedge clocks.\n* Fix some output code spacing issues.\n\n\nVerilator 3.270 2004-10-15\n==========================\n\n**Minor:**\n\n* Support Verilog 2001 parameters in module headers. [Ralf Karge]\n* Faster code to support compilers not inlining all Verilated functions.\n* Fix numeric fault when dividing by zero.\n\n\n\nVerilator 3.260 2004-10-07\n==========================\n\n**Major:**\n\n* Support Verilog 2001 named parameter instantiation. [Ralf Karge]\n\n**Minor:**\n\n* Return 1's when one bit wide extract indexes outside array bounds.\n* Fix compile warnings on 64-bit operating systems.\n* Fix incorrect dependency in .d file when setting VERILATOR_BIN.\n\n\nVerilator 3.251 2004-09-09\n==========================\n\n**Minor:**\n\n* Fix parenthesis overflow in Microsoft Visual C++ [Renga Sundararajan]\n\n\nVerilator 3.250 2004-08-30\n==========================\n\n**Major:**\n\n* Support Microsoft Visual C++ [Renga Sundararajan]\n\n**Minor:**\n\n* SystemPerl 1.161+ is required.\n\n\nVerilator 3.241 2004-08-17\n==========================\n\n**Minor:**\n\n* Support ,'s to separate multiple assignments. [Paul Nitza]\n* Fix shift sign extension problem using non-GCC compilers.\n\n\nVerilator 3.240 2004-08-13\n==========================\n\n**Major:**\n\n* Verilator now uses 64 bit math where appropriate.\n  Inputs and outputs of 33-64 bits wide to the C++ Verilated model must\n  now be uint64_t's; SystemC has not changed, they will remain sc_bv's.\n  This increases performance by ~ 9% on x86 machines, varying with how\n  frequently 33-64 bit signals occur. Signals 9-16 bits wide are now\n  stored as 16 bit shorts instead of longs, this aids cache packing.\n\n**Minor:**\n\n* Fix SystemC compile error with feedthrus. [Paul Nitza]\n* Fix concat value error introduced in 3.230.\n\n\nVerilator 3.230 2004-08-10\n==========================\n\n**Minor:**\n\n* Add coverage output to test_sp example, SystemPerl 1.160+ is required.\n* Fix time 0 value of signals. [Hans Van Antwerpen]\n  Earlier versions would not evaluate some combinatorial signals\n  until posedge/negedge blocks had been activated.\n* Fix wide constant inputs to public submodules [Hans Van Antwerpen]\n* Fix wide signal width extension bug.\n  Only applies when width mismatch warnings were overridden.\n\n\nVerilator 3.220 2004-06-22\n==========================\n\n**Major:**\n\n* Many waveform tracing changes:\n* Tracing is now supported on C++ standalone simulations. [John Brownlee]\n\n**Minor:**\n\n* When tracing, SystemPerl 1.150 or newer is required.\n* When tracing, Verilator must be called with the --trace switch.\n* Add SystemPerl example to documentation. [John Brownlee]\n* Various Cygwin compilation fixes. [John Brownlee]\n\n\nVerilator 3.210 2004-04-01\n==========================\n\n**Major:**\n\n* Compiler optimization switches have changed\n  See the BENCHMARKING section of the documentation.\n* With Verilog-Perl 2.3 or newer, Verilator supports SystemVerilog\n  preprocessor extensions.\n\n**Minor:**\n\n* Add localparam. [Thomas Hawkins]\n* Add warnings for SystemVerilog reserved words.\n\n\nVerilator 3.203 2004-03-10\n==========================\n\n**Minor:**\n\n* Notes and repairs for Solaris. [Fred Ma]\n\n\nVerilator 3.202 2004-01-27\n==========================\n\n**Major:**\n\n* The beta version is now the primary release. See below for many changes.\n  If you have many problems, you may wish to try release 3.125.\n* Verilated::traceEverOn(true) must be called at time 0 if you will ever\n  turn on tracing (waveform dumping) of signals. Future versions will\n  need this switch to disable trace incompatible optimizations.\n\n**Minor:**\n\n* Optimize common replication operations.\n* Fix several tracing bugs\n\n\nVerilator 3.201-beta 2003-12-10\n===============================\n\n**Major:**\n\n* BETA VERSION, USE 3.124 for stable release!\n* Version 3.2XX includes an all new back-end.\n  This includes automatic inlining, flattening of signals between\n  hierarchy, and complete ordering of statements. This results in\n  60-300% execution speedups, though less pretty C++ output. Even\n  better results are possible using GCC 3.2.2 (part of Redhat 9.1), as\n  GCC has fixed some optimization problems which Verilator exposes.\n\n  If you are using `systemc_ctor, beware pointers to submodules are now\n  initialized after the constructor is called for a module, to avoid\n  segfaults, move statements that reference subcells into initial\n  statements.\n* C++ Constructor that creates a verilog module may take a char* name.\n  This name will be used to prefix any $display %m arguments, so users may\n  distinguish between multiple Verilated modules in a single executable.\n\n\nVerilator 3.125 2004-01-27\n==========================\n\n**Minor:**\n\n* Optimize bit replications\n\n\nVerilator 3.124 2003-12-05\n==========================\n\n**Major:**\n\n* An optimized executable will be made by default, in addition to a debug\n  executable. Invoking Verilator with --debug will pick the debug version.\n\n**Minor:**\n\n* Many minor invisible changes to support the next version.\n\n\nVerilator 3.123 2003-11-10\n==========================\n\n**Minor:**\n\n* Wide bus performance enhancements.\n* Fix function call bug when width warning suppressed. [Leon Wildman]\n* Fix __DOT__ compile problem with funcs in last revision. [Leon Wildman]\n\n\nVerilator 3.122 2003-10-29\n==========================\n\n**Major:**\n\n* Modules which are accessed from external code now must be marked with\n  /*verilator public_module*/ unless they already contain public signals.\n  To enforce this, private cell names now have a string prepended.\n\n**Minor:**\n\n* Fix replicated function calls in one statement. [Robert A. Clark]\n* Fix function call bug when width warning suppressed. [Leon Wildman]\n\n\nVerilator 3.121 2003-09-29\n==========================\n\n**Minor:**\n\n* Support multiplication over 32 bits. [Chris Boumenot]\n  Also improved speed of addition and subtraction over 32 bits.\n* Detect bit selection out of range errors.\n* Detect integer width errors.\n* Fix width problems on function arguments. [Robert A. Clark]\n\n\nVerilator 3.120 2003-09-24\n==========================\n\n**Minor:**\n\n* $finish now exits the model (via vl_finish function).\n* Support inputs/outputs in tasks.\n* Support V2K \"integer int = {INITIAL_VALUE};\"\n* Ignore floating point delay values. [Robert A. Clark]\n* Ignore `celldefine, `endcelldefine, etc. [Robert A. Clark]\n* Optimize reduction operators.\n* Fix converting \"\\ooo\" into octal values.\n* Fix $display(\"%x\");\n\n\nVerilator 3.112 2003-09-16\n==========================\n\n**Minor:**\n\n* Fix functions in continuous assignments. [Robert A. Clark]\n* Fix inlining of modules with 2-level deep outputs.\n\n\nVerilator 3.111 2003-09-15\n==========================\n\n**Minor:**\n\n* Fix declaration of functions before using that module. [Robert A. Clark]\n* Fix module inlining bug with outputs.\n\n\nVerilator 3.110 2003-09-12\n==========================\n\n**Major:**\n\n* Support Verilog 2001 style input/output declarations. [Robert A. Clark]\n* Support local vars in headers of function/tasks. [Leon Wildman]\n\n\nVerilator 3.109 2003-08-28\n==========================\n\n**Major:**\n\n* Support local variables in named begin blocks. [Leon Wildman]\n\n\nVerilator 3.108 2003-08-11\n==========================\n\n**Major:**\n\n* Support functions.\n\n**Minor:**\n\n* Signals 8 bits and shorter are now stored as chars\n  instead of uint32_t's. This improves Dcache packing and\n  improves performance by ~7%.\n* $display now usually results in a single VL_PRINT rather then many.\n* Optimize conditionals (?:)\n\n\nVerilator 3.107 2003-07-15\n==========================\n\n**Major:**\n\n* --private and --l2name are now the default,\n  as this enables additional optimizations.\n  Use --noprivate or --nol2name to get the older behavior.\n\n**Minor:**\n\n* Now support $display of binary and wide format data.\n* Add detection of incomplete case statements,\n  and added related optimizations worth ~4%.\n* Work around flex bug in Redhat 8.0. [Eugene Weber]\n* Add some additional C++ reserved words.\n* Additional constant optimizations, ~5% speed improvement.\n\n\nVerilator 3.106 2003-06-17\n==========================\n\n**Major:**\n\n* $c can now take multiple expressions as arguments.\n  For example $c(\"foo\",\"bar(\",32+1,\");\") will insert \"foobar(33);\"\n  This makes it easier to pass the values of signals.\n* Several changes to support future versions that may have\n  signal-eliminating optimizations. Users should try to use these switch\n  on designs, they will become the default in later versions.\n* Add --private switch and /*verilator public*/ metacomment.\n  This renames all signals so that compile errors will result if any\n  signals referenced by C++ code are missing a /*verilator public*/\n  metacomment.\n* With --l2name, the second level cell C++ cell is now named \"v\".\n  Previously it was named based on the name of the verilog code. This\n  means to get to signals, scope to \"{topcell} ->v ->{mysignal}\" instead\n  of \"{topcell} ->{verilogmod}. {mysignal}\". This allows different\n  modules to be substituted for the cell without requiring source\n  changes.\n\n**Minor:**\n\n* Several cleanups for Redhat 8.0.\n\n\nVerilator 3.105 2003-05-08\n==========================\n\n**Minor:**\n\n* Fix more GCC 3.2 errors. [David Black]\n\n\nVerilator 3.104 2003-04-30\n==========================\n\n**Major:**\n\n* Indicate direction of ports with VL_IN and VL_OUT.\n* Allow $c32, etc, to specify width of the $c statement for VCS.\n* Numerous performance improvements, worth about 25%\n\n**Minor:**\n\n* Fix false \"indent underflow\" error inside `systemc_ctor sections.\n* Fix missing ordering optimizations when outputs also used internally.\n* Assign constant cell pins in initial blocks rather then every cycle.\n* Promote subcell's combo logic to sequential evaluation when possible.\n* Fix GCC 3.2 compile errors. [Narayan Bhagavatula]\n\n\nVerilator 3.103 2003-01-28\n==========================\n\n**Minor:**\n\n* Fix missing model evaluation when clock generated several levels of\n  hierarchy across from where it is used as a clock. [Richard Myers]\n* Fix sign-extension bug introduced in 3.102.\n\n\nVerilator 3.102 2003-01-24\n==========================\n\n**Minor:**\n\n* Fix sign-extension of X/Z's (\"32'hx\")\n\n\nVerilator 3.101 2003-01-13\n==========================\n\n**Minor:**\n\n* Fix 'parameter FOO=#'bXXXX' [Richard Myers]\n* Allow spaces inside numbers (\"32'h 1234\") [Sam Gladstone]\n\n\nVerilator 3.100 2002-12-23\n==========================\n\n**Major:**\n\n* Support for simple tasks w/o vars or I/O. [Richard Myers]\n\n**Minor:**\n\n* Ignore DOS carriage returns in Linux files. [Richard Myers]\n\n\nVerilator 3.012 2002-12-18\n==========================\n\n**Minor:**\n\n* Fix parsing bug with casex statements containing case items\n  with bit extracts of parameters. [Richard Myers]\n* Fix bug which could cause writes of non-power-of-2 sized arrays to\n  corrupt memory beyond the size of the array. [Dan Lussier]\n* Fix bug which did not detect UNOPT problems caused by\n  submodules. See the description in the verilator man page. [John Deroo]\n* Fix compile with threaded Perl. [Ami Keren]\n\n\nVerilator 3.010 2002-11-03\n==========================\n\n**Major:**\n\n* Support SystemC 2.0.1. SystemPerl version 1.130 or newer is required.\n\n**Minor:**\n\n* Fix bug with inlined modules under other inlined modules. [Scott Bleiweiss]\n\n\nVerilator 3.005 2002-10-21\n==========================\n\n**Minor:**\n\n* Fix X's in case (not casex/z) to constant propagate correctly.\n* Fix missing include. [Kurachi]\n\n\nVerilator 3.004 2002-10-10\n==========================\n\n**Minor:**\n\n* Add module_inline metacomment and associated optimizations.\n* Allow coverage_block_off metacomment in place of `coverage_block_off.\n  This prevents problems with Emacs AUTORESET. [Ray Strouble]\n* Fix `coverage_block_off also disabling subsequent blocks.\n* Fix unrolling of loops with multiple simple statements.\n* Fix compile warnings on newer GCC. [Kurachi]\n* Additional concatenation optimizations.\n\n\nVerilator 3.003 2002-09-13\n==========================\n\n**Minor:**\n\n* Now compiles on Windows 2000 with Cygwin.\n* Fix bug with pin assignments to wide memories.\n* Optimize wire assignments to constants.\n\n\nVerilator 3.002 2002-08-19\n==========================\n\n**Major:**\n\n* First public release of version 3.\n\n\nVerilator 3.000 2002-08-03\n==========================\n\n**Major:**\n\n* All new code base. Many changes too numerous to mention.\n\n**Minor:**\n\n* Approximately 4 times faster then Verilator 2.\n* Support initial statements\n* Support correct blocking/nonblocking assignments\n* Support `defines across multiple modules\n* Optimize call ordering, constant propagation, and dead code elimination.\n\n\nVerilator 2.1.8 2002-04-03\n==========================\n\n**Major:**\n\n* All applications must now link against include/verilated.cpp\n\n**Minor:**\n\n* Paths specified to verilator_make should be absolute, or be formed\n  to allow for execution in the object directory (prepend ../ to each path.)\n  This allows relative filenames for makes which hash and cache dependencies.\n* Add warning when parameter constants are too large. [John Deroo]\n* Add warning when x/?'s used in non-casez statements.\n* Add warning when blocking assignments used in posedge blocks. [Dan Lussier]\n* Split evaluation function into clocked and non-clocked, 20% perf gain.\n\n\nVerilator 2.1.5 2001-12-01\n==========================\n\n**Major:**\n\n* Add coverage analysis. In conjunction with SystemC provide line\n  coverage reports, without SystemC, provide a hook to user written\n  accumulation function. See --coverage option of verilator_make.\n\n**Minor:**\n\n* Relaxed multiply range checking\n* Support for constants up to 128 bits\n* Randomize values used when assigning to X's.\n* Add -guard option of internal testing.\n* Changed indentation in emitted code to be automatically generated.\n* Fix corruption of assignments of signal over 32 bits with non-0 lsb.\n\n\nVerilator 2.1.4 2001-11-16\n==========================\n\n**Major:**\n\n* Add $c(\"c_commands();\");  for embedding arbitrary C code in Verilog.\n\n\nVerilator 2.1.3 2001-11-03\n==========================\n\n**Major:**\n\n* Support for parameters.\n\n\nVerilator 2.1.2 2001-10-25\n==========================\n\n**Major:**\n\n* Verilog Errors now reference the .v file rather then the .vpp file.\n\n**Minor:**\n\n* Support strings in assignments:  reg [31:0] foo = \"STRG\";\n* Support %m in format strings. Ripped out old $info support, use\n  Verilog-Perl's vpm program instead.\n* Convert $stop to call of v_stop() which user can define.\n* Fix bug where a==b==c would have wrong precedence rule.\n* Fix bug where XNOR on odd-bit-widths (~^ or ^~) had bad value.\n\n\nVerilator 2.1.1 2001-05-17\n==========================\n\n**Major:**\n\n* New test_sp directory for System-Perl (SystemC) top level instantiation\n  of the Verilated code, lower modules are still C++ code. (Experimental).\n* New test_spp directory for Pure System-Perl (SystemC) where every module\n  is true SystemC code. (Experimental)\n\n**Minor:**\n\n* Input ports are now loaded by pointer reference into the sub-cell.\n  This is faster on I-386 machines, as the stack must be used when there are\n  a large number of parameters. Also, this simplifies debugging as the value\n  of input ports exists for tracing.\n* Many code cleanups towards standard C++ style conventions.\n\n\nVerilator 2.1.0 2001-05-08\n==========================\n\n**Minor:**\n\n* Many code cleanups towards standard C++ style conventions.\n\n\nVersion history lost\n====================\n\n\nVerilator 1.8 1996-07-08\n========================\n\n[Versions 0 to 1.8 were by Paul Wasson]\n* Fix single bit in concat from instance output incorrect offset bug.\n\n\nVerilator 1.7 1996-05-20\n========================\n\n* Mask unused bits of DONTCAREs.\n\n\nVerilator 1.6 1996-05-13\n========================\n\n* Add fasttrace script\n\n\nVerilator 1.5 1996-01-09\n========================\n\n* Pass structure pointer into translated code, so multiple instances can use same functions.\n* Fix static value concat on casex items.\n\n\nVerilator 1.1 1995-03-30\n========================\n\n* Bug fixes, added verimake_partial script, performance improvements.\n\n\nVerilator 1.0c 1994-09-30\n=========================\n\n* Initial release of Verilator\n\n\nVerilator 0.0 1994-07-08\n========================\n\n* First code written.\n\n.. ----------------------------------------------------------------------\n\nCopyright\n=========\n\nCopyright 2001-2025 by Wilson Snyder. This program is free software; you\ncan redistribute it and/or modify it under the terms of either the GNU\nLesser General Public License Version 3 or the Perl Artistic License\nVersion 2.0.\n\nSPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 20.4560546875,
          "content": "#*****************************************************************************\n# DESCRIPTION: Verilator top level: Makefile pre-configure version\n#\n# This file is part of Verilator.\n#\n# Code available from: https://verilator.org\n#\n#*****************************************************************************\n#\n# Copyright 2003-2025 by Wilson Snyder. This program is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU\n# Lesser General Public License Version 3 or the Perl Artistic License\n# Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n#\n#****************************************************************************/\n#\n# make all      to compile and build Verilator.\n# make install  to install it.\n# make TAGS     to update tags tables.\n#\n# make clean  or  make mostlyclean\n#      Delete all files from the current directory that are normally\n#      created by building the program.  Don't delete the files that\n#      record the configuration.  Also preserve files that could be made\n#      by building, but normally aren't because the distribution comes\n#      with them.\n#\n# make distclean\n#      Delete all files from the current directory that are created by\n#      configuring or building the program.  If you have unpacked the\n#      source and built the program without creating any other files,\n#      `make distclean' should leave only the files that were in the\n#      distribution.\n#\n# make maintainer-clean\n#      Delete everything from the current directory that can be\n#      reconstructed with this Makefile.  This typically includes\n#      everything deleted by distclean, plus more: C source files\n#      produced by Bison, tags tables, info files, and so on.\n\n#### Start of system configuration section. ####\n\nsrcdir = @srcdir@\nVPATH = @srcdir@\nHOST = @HOST@\nEXEEXT = @EXEEXT@\n\nDOXYGEN = doxygen\nINSTALL = @INSTALL@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_DATA = @INSTALL_DATA@\nMAKEINFO = makeinfo\nPOD2TEXT = pod2text\nPYTHON3 = @PYTHON3@\nMKINSTALLDIRS = $(SHELL) $(srcdir)/src/mkinstalldirs\n\n# Version (for docs/guide/conf.py)\nPACKAGE_VERSION_NUMBER = @PACKAGE_VERSION_NUMBER@\n\n# Destination prefix for RPMs\nDESTDIR =\n\n#### Don't edit: You're much better using configure switches to set these\nprefix = @prefix@\nexec_prefix = @exec_prefix@\n\n# Directory in which to install scripts.\nbindir = @bindir@\n\n# Directory in which to install manpages.\nmandir = @mandir@\n\n# Directory in which to install library files.\ndatadir = @datadir@\n\n# Directory in which to install documentation info files.\ninfodir = @infodir@\n\n# Directory in which to install package-specific files\n# Generally ${prefix}/share/verilator\npkgdatadir = @pkgdatadir@\n\n# Directory in which to install pkgconfig file\n# Generally ${prefix}/share/pkgconfig\npkgconfigdir = @pkgconfigdir@\n\n# Directory in which to install data across multiple architectures\ndatarootdir = @datarootdir@\n\n# Compile options\nCFG_WITH_CCWARN = @CFG_WITH_CCWARN@\nCFG_WITH_DEFENV = @CFG_WITH_DEFENV@\nCFG_WITH_LONGTESTS = @CFG_WITH_LONGTESTS@\nCFG_WITH_SOLVER = @CFG_WITH_SOLVER@\nPACKAGE_VERSION = @PACKAGE_VERSION@\n\n#### End of system configuration section. ####\n######################################################################\n# Main build targets\n\n.SUFFIXES:\n\nSHELL = /bin/sh\n\nSUBDIRS = docs src test_regress \\\n\texamples/cmake_hello_c \\\n\texamples/cmake_hello_sc \\\n\texamples/cmake_tracing_c \\\n\texamples/cmake_tracing_sc \\\n\texamples/cmake_protect_lib \\\n\texamples/make_hello_binary \\\n\texamples/make_hello_c \\\n\texamples/make_hello_sc \\\n\texamples/make_tracing_c \\\n\texamples/make_tracing_sc \\\n\texamples/make_protect_lib \\\n\texamples/json_py \\\n\nINFOS = verilator.html verilator.pdf\n\nINFOS_OLD = README README.html README.pdf\n\nEXAMPLES_FIRST = \\\n\texamples/make_hello_c \\\n\texamples/make_hello_sc \\\n\nEXAMPLES = $(EXAMPLES_FIRST) $(filter-out $(EXAMPLES_FIRST), $(sort $(wildcard examples/*)))\n\n# See uninstall also - don't put wildcards in this variable, it might uninstall other stuff\n# No verilator_ccache_report.1, verilator_difftree.1 as those are not bin/ installed\nVL_INST_MAN_FILES = \\\n\tverilator.1 \\\n\tverilator_coverage.1 \\\n\tverilator_gantt.1 \\\n\tverilator_profcfunc.1 \\\n\ndefault: all\nall: all_nomsg msg_test\nall_nomsg: verilator_exe $(VL_INST_MAN_FILES)\n\n.PHONY:verilator_exe\n.PHONY:verilator_bin$(EXEEXT)\n.PHONY:verilator_bin_dbg$(EXEEXT)\n.PHONY:verilator_coverage_bin_dbg$(EXEEXT)\nverilator_exe verilator_bin$(EXEEXT) verilator_bin_dbg$(EXEEXT) verilator_coverage_bin_dbg$(EXEEXT):\n\t@echo ------------------------------------------------------------\n\t@echo \"making verilator in src\"\n\t$(MAKE) -C src $(OBJCACHE_JOBS)\n\n######################################################################\n# Tests\n\n.PHONY:msg_test\nmsg_test: all_nomsg\n\t@echo \"Build complete!\"\n\t@echo\n\t@echo \"Now type 'make test' to test.\"\n\t@echo\n\n.PHONY: test\nifeq ($(CFG_WITH_LONGTESTS),yes)  # Local... Else don't burden users\ntest: smoke-test test_regress\n# examples is part of test_regress's test_regress/t/t_a2_examples.py\n# (because that allows it to run in parallel with other test_regress's)\nelse\ntest: smoke-test examples\nendif\n\t@echo \"Tests passed!\"\n\t@echo\n\t@echo \"Now type 'make install' to install.\"\n\t@echo \"Or type 'make' inside an examples subdirectory.\"\n\t@echo\n\nsmoke-test: all_nomsg\n\ttest_regress/t/t_a1_first_cc.py\n\ttest_regress/t/t_a2_first_sc.py\n\ntest_regress: all_nomsg\n\t$(MAKE) -C test_regress\n\n.PHONY: test-snap test-diff\ntest-snap test-diff:\n\t$(MAKE) -C test_regress $@\n\nexamples: all_nomsg\n\tfor p in $(EXAMPLES) ; do \\\n\t  $(MAKE) -C $$p VERILATOR_ROOT=`pwd` || exit 10; \\\n\tdone\n\n######################################################################\n# Docs\n\n.PHONY: docs\ndocs: info $(VL_INST_MAN_FILES)\n\ninfo: $(INFOS)\n\nverilator.1: ${srcdir}/bin/verilator\n\tpod2man $< $@\nverilator_coverage.1: ${srcdir}/bin/verilator_coverage\n\tpod2man $< $@\n%.1: ${srcdir}/bin/%\n\thelp2man --no-info --no-discard-stderr --version-string=- \\\n\t\t-n \"$(shell $< --help | head -n 3 | tail -n 1)\" $< -o $@\n\n.PHONY: verilator.html\nverilator.html:\n\t$(MAKE) -C docs html\n\n# PDF needs DIST variables; but having configure.ac as dependency isn't detected\n.PHONY: verilator.pdf\nverilator.pdf: Makefile\n\t$(MAKE) -C docs verilator.pdf\n\nTAGFILES=${srcdir}/*/*.cpp ${srcdir}/*/*.h ${srcdir}/*/*.in \\\n\t${srcdir}/*.in ${srcdir}/*.pod\n\nTAGS: $(TAGFILES)\n\tetags $(TAGFILES)\n\n.PHONY: doxygen\n\ndoxygen:\n\t$(MAKE) -C docs doxygen\n\n######################################################################\n# Install\n\n# Public executables intended to be invoked directly by the user\n# Don't put wildcards in these variables, it might cause an uninstall of other stuff\nVL_INST_PUBLIC_SCRIPT_FILES = verilator \\\n                              verilator_coverage \\\n                              verilator_gantt \\\n                              verilator_profcfunc \\\n\nVL_INST_PUBLIC_BIN_FILES = verilator_bin$(EXEEXT) \\\n                           verilator_bin_dbg$(EXEEXT) \\\n                           verilator_coverage_bin_dbg$(EXEEXT) \\\n\n# Private executabels intended to be invoked by internals\n# Don't put wildcards in these variables, it might cause an uninstall of other stuff\nVL_INST_PRIVATE_SCRIPT_FILES = verilator_ccache_report \\\n                               verilator_includer \\\n\nVL_INST_INC_BLDDIR_FILES = \\\n\tinclude/verilated_config.h \\\n\tinclude/verilated.mk \\\n\n# Files under srcdir, instead of build time\nVL_INST_INC_SRCDIR_FILES = \\\n\tinclude/*.[chv]* \\\n\tinclude/*.vlt \\\n\tinclude/*.sv \\\n\tinclude/gtkwave/*.[chv]* \\\n\tinclude/vltstd/*.[chv]* \\\n\nVL_INST_DATA_SRCDIR_FILES = \\\n\texamples/*/*.[chv]* \\\n\texamples/*/CMakeLists.txt \\\n\texamples/*/Makefile* \\\n\texamples/*/vl_* \\\n\nmkbindirs:\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/bin\n\t$(MKINSTALLDIRS) $(DESTDIR)$(bindir)\n\ninstallbin: | mkbindirs\n\tcd $(srcdir)/bin; \\\n\tfor p in $(VL_INST_PUBLIC_SCRIPT_FILES) ; do \\\n\t  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$p; \\\n\tdone\n\tperl -p -i -e 'use File::Spec;' \\\n\t           -e' $$path = File::Spec->abs2rel(\"$(realpath $(DESTDIR)$(pkgdatadir))\", \"$(realpath $(DESTDIR)$(bindir))\");' \\\n\t           -e 's/my \\$$verilator_pkgdatadir_relpath = .*/my \\$$verilator_pkgdatadir_relpath = \"$$path\";/g' \\\n\t           -- \"$(DESTDIR)/$(bindir)/verilator\"\n\tcd bin; \\\n\tfor p in $(VL_INST_PUBLIC_BIN_FILES) ; do \\\n\t  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$p; \\\n\tdone\n\tcd $(srcdir)/bin; \\\n\tfor p in $(VL_INST_PRIVATE_SCRIPT_FILES) ; do \\\n\t  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(pkgdatadir)/bin/$$p; \\\n\tdone\n\ninstallredirect: installbin | mkbindirs\n\tcp ${srcdir}/bin/redirect ${srcdir}/bin/redirect.tmp\n\tperl -p -i -e 'use File::Spec;' \\\n\t           -e' $$path = File::Spec->abs2rel(\"$(realpath $(DESTDIR)$(bindir))\", \"$(realpath $(DESTDIR)$(pkgdatadir)/bin)\");' \\\n\t           -e 's/RELPATH.*/\"$$path\";/g' -- \"${srcdir}/bin/redirect.tmp\"\n\tcd $(srcdir)/bin; \\\n\tfor p in $(VL_INST_PUBLIC_SCRIPT_FILES) $(VL_INST_PUBLIC_BIN_FILES) ; do \\\n\t  $(INSTALL_PROGRAM) redirect.tmp $(DESTDIR)$(pkgdatadir)/bin/$$p; \\\n\tdone\n\trm ${srcdir}/bin/redirect.tmp\n\n# Man files can either be part of the original kit, or built in current directory\n# So important we use $^ so VPATH is searched\ninstallman: $(VL_INST_MAN_FILES)\n\t$(MKINSTALLDIRS) $(DESTDIR)$(mandir)/man1\n\tfor p in $^ ; do \\\n\t  $(INSTALL_DATA) $$p $(DESTDIR)$(mandir)/man1/$$p; \\\n\tdone\n\ninstalldata:\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/include/gtkwave\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/include/vltstd\n\tfor p in $(VL_INST_INC_BLDDIR_FILES) ; do \\\n\t  $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/$$p; \\\n\tdone\n\tcd $(srcdir) \\\n\t; for p in $(VL_INST_INC_SRCDIR_FILES) ; do \\\n\t  $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/$$p; \\\n\tdone\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_hello_binary\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_hello_c\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_hello_sc\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_tracing_c\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_tracing_sc\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/make_protect_lib\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/cmake_hello_c\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/cmake_hello_sc\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/cmake_tracing_c\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/cmake_tracing_sc\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/cmake_protect_lib\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgdatadir)/examples/json_py\n\tcd $(srcdir) \\\n\t; for p in $(VL_INST_DATA_SRCDIR_FILES) ; do \\\n\t  $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/$$p; \\\n\tdone\n\t$(MKINSTALLDIRS) $(DESTDIR)$(pkgconfigdir)\n\t$(INSTALL_DATA) verilator.pc $(DESTDIR)$(pkgconfigdir)\n\t$(INSTALL_DATA) verilator-config.cmake $(DESTDIR)$(pkgdatadir)\n\t$(INSTALL_DATA) verilator-config-version.cmake $(DESTDIR)$(pkgdatadir)\n\n# We don't trust rm -rf, so rmdir instead as it will fail if user put in other files\nuninstall:\n\t-cd $(DESTDIR)$(bindir) && rm -f $(VL_INST_PUBLIC_SCRIPT_FILES)\n\t-cd $(DESTDIR)$(bindir) && rm -f $(VL_INST_PUBLIC_BIN_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir)/bin && rm -f $(VL_INST_PUBLIC_SCRIPT_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir)/bin && rm -f $(VL_INST_PUBLIC_BIN_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir)/bin && rm -f $(VL_INST_PRIVATE_SCRIPT_FILES)\n\t-cd $(DESTDIR)$(mandir)/man1 && rm -f $(VL_INST_MAN_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir) && rm -f $(VL_INST_INC_BLDDIR_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir) && rm -f $(VL_INST_INC_SRCDIR_FILES)\n\t-cd $(DESTDIR)$(pkgdatadir) && rm -f $(VL_INST_DATA_SRCDIR_FILES)\n\t-rm $(DESTDIR)$(pkgconfigdir)/verilator.pc\n\t-rm $(DESTDIR)$(pkgdatadir)/verilator-config.cmake\n\t-rm $(DESTDIR)$(pkgdatadir)/verilator-config-version.cmake\n\t-rmdir $(DESTDIR)$(pkgdatadir)/bin\n\t-rmdir $(DESTDIR)$(pkgdatadir)/include/gtkwave\n\t-rmdir $(DESTDIR)$(pkgdatadir)/include/vltstd\n\t-rmdir $(DESTDIR)$(pkgdatadir)/include\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_hello_binary\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_hello_c\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_hello_sc\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_tracing_c\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_tracing_sc\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/make_protect_lib\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/cmake_hello_c\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/cmake_hello_sc\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/cmake_tracing_c\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/cmake_tracing_sc\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/cmake_protect_lib\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples/json_py\n\t-rmdir $(DESTDIR)$(pkgdatadir)/examples\n\t-rmdir $(DESTDIR)$(pkgdatadir)\n\t-rmdir $(DESTDIR)$(pkgconfigdir)\n\ninstall: all_nomsg install-all\ninstall-all: installbin installredirect installman installdata install-msg\n\ninstall-here: installman info\n\ninstall-msg:\n\t@echo\n\t@echo \"Installed binaries to $(DESTDIR)$(bindir)/verilator\"\n\t@echo \"Installed man to $(DESTDIR)$(mandir)/man1\"\n\t@echo \"Installed examples to $(DESTDIR)$(pkgdatadir)/examples\"\n\t@echo\n\t@echo \"For documentation see 'man verilator' or 'verilator --help'\"\n\t@echo \"For forums and to report bugs see https://verilator.org\"\n\t@echo\n\n######################################################################\n# Format/Lint\n\n# Use --xml flag to see the cppcheck code to use for suppression\nCPPCHECK1_CPP = $(wildcard $(srcdir)/include/*.cpp)\nCPPCHECK2_CPP = $(wildcard $(srcdir)/examples/*/*.cpp)\nCPPCHECK3_CPP = $(wildcard $(srcdir)/src/Vlc*.cpp)\nCPPCHECK4_CPP = $(wildcard $(srcdir)/src/V3[A-D]*.cpp $(srcdir)/src/Verilator*.cpp)\nCPPCHECK5_CPP = $(wildcard $(srcdir)/src/V3[E-I]*.cpp)\nCPPCHECK6_CPP = $(wildcard $(srcdir)/src/V3[P-Z]*.cpp)\nCPPCHECK7_CPP = $(wildcard $(srcdir)/src/V3[L-R]*.cpp)\nCPPCHECK8_CPP = $(wildcard $(srcdir)/src/V3[S-Z]*.cpp)\nCHECK_CPP = $(CPPCHECK1_CPP) $(CPPCHECK2_CPP) $(CPPCHECK3_CPP) $(CPPCHECK4_CPP) \\\n\t$(CPPCHECK5_CPP) $(CPPCHECK6_CPP) $(CPPCHECK7_CPP) $(CPPCHECK8_CPP)\nCHECK_H = $(wildcard \\\n\t$(srcdir)/include/*.h \\\n\t$(srcdir)/src/*.h )\nCHECK_YL = $(wildcard \\\n\t$(srcdir)/src/*.y \\\n\t$(srcdir)/src/*.l )\nCPPCHECK = src/cppcheck_filtered cppcheck\nCPPCHECK_FLAGS = --enable=all --inline-suppr \\\n\t--suppress=cstyleCast --suppress=useInitializationList \\\n\t--suppress=nullPointer --suppress=nullPointerRedundantCheck --suppress=ctunullpointer \\\n\t--suppress=unusedFunction --suppress=unusedScopedObject \\\n\t--suppress=useStlAlgorithm\nCPPCHECK_FLAGS += --xml\nCPPCHECK_DEP = $(subst .cpp,.cppcheck,$(CHECK_CPP))\nCPPCHECK_INC = -I$(srcdir)/include -I$(srcdir)/include/gtkwave -I$(srcdir)/include/vltstd -I$(srcdir)/src/obj_dbg -I$(srcdir)/src\n\ncppcheck: cppcheck-1 cppcheck-2 cppcheck-3 cppcheck-4 cppcheck-5 cppcheck-6 cppcheck-7 cppcheck-8\ncppcheck-1:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK1_CPP)\ncppcheck-2:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK2_CPP)\ncppcheck-3:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK3_CPP)\ncppcheck-4:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK4_CPP)\ncppcheck-5:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK5_CPP)\ncppcheck-6:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK6_CPP)\ncppcheck-7:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK7_CPP)\ncppcheck-8:\n\t$(CPPCHECK) $(CPPCHECK_FLAGS) -DVL_DEBUG=1 -DVL_CPPCHECK=1 $(CPPCHECK_INC) $(CPPCHECK8_CPP)\n\nCLANGTIDY = clang-tidy\nCLANGTIDY_FLAGS = -config='' \\\n\t-header-filter='.*' \\\n\t-checks='-fuchsia-*,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-init-variables,-cppcoreguidelines-avoid-goto,-modernize-avoid-c-arrays,-readability-magic-numbers,-readability-simplify-boolean-expr,-cppcoreguidelines-macro-usage' \\\n\nCLANGTIDY_DEP = $(subst .cpp,.cpp.tidy,$(CHECK_CPP))\nCLANGTIDY_DEFS = -DVL_DEBUG=1 -DVL_CPPCHECK=1\n\nclang-tidy: $(CLANGTIDY_DEP)\n%.cpp.tidy: %.cpp\n\t$(CLANGTIDY) $(CLANGTIDY_FLAGS) $< -- $(CLANGTIDY_DEFS) $(CPPCHECK_INC) | 2>&1 tee $@\n%.h.tidy: %.h\n\t$(CLANGTIDY) $(CLANGTIDY_FLAGS) $< -- $(CLANGTIDY_DEFS) $(CPPCHECK_INC) -x c++-header | 2>&1 tee $@\n\nanalyzer-src:\n\t-rm -rf src/obj_dbg\n\tscan-build $(MAKE) -k verilator_coverage_bin_dbg$(EXEEXT) verilator_bin_dbg$(EXEEXT)\n\nanalyzer-include:\n\t-rm -rf examples/*/obj*\n\tscan-build $(MAKE) -k examples\n\nformat:\n\t$(MAKE) -j 4 format-c format-py format-exec\n\nCLANGFORMAT = clang-format-14\nCLANGFORMAT_FLAGS = -i\nCLANGFORMAT_FILES = $(CHECK_CPP) $(CHECK_H) $(CHECK_YL) test_regress/t/*.c* test_regress/t/*.h\n\nformat-c clang-format:\n\t@$(CLANGFORMAT) --version | egrep 14.0 > /dev/null \\\n\t\t|| echo \"*** You are not using clang-format-14, indents may differ from master's ***\"\n\t$(CLANGFORMAT) $(CLANGFORMAT_FLAGS) $(CLANGFORMAT_FILES)\n\nYAMLFIX = YAMLFIX_WHITELINES=1 YAMLFIX_LINE_LENGTH=130 YAMLFIX_preserve_quotes=true yamlfix\n\nyamlfix:\n\t$(YAMLFIX) .\n\n# CMake files\nCMAKE_FILES = \\\n\tCMakeLists.txt \\\n\texamples/*/CMakeLists.txt \\\n\tsrc/CMakeLists.txt \\\n\ttest_regress/CMakeLists.txt \\\n\t*.cmake.in \\\n\n# Python programs, subject to format and lint\nPY_PROGRAMS = \\\n\tbin/verilator_ccache_report \\\n\tbin/verilator_difftree \\\n\tbin/verilator_gantt \\\n\tbin/verilator_includer \\\n\tbin/verilator_profcfunc \\\n\texamples/json_py/vl_file_copy \\\n\texamples/json_py/vl_hier_graph \\\n\tdocs/guide/conf.py \\\n\tdocs/bin/vl_sphinx_extract \\\n\tdocs/bin/vl_sphinx_fix \\\n\tsrc/astgen \\\n\tsrc/bisonpre \\\n\tsrc/config_rev \\\n\tsrc/cppcheck_filtered \\\n\tsrc/flexfix \\\n\tsrc/vlcovgen \\\n\tsrc/.gdbinit.py \\\n\ttest_regress/*.py \\\n\ttest_regress/t/*.pf \\\n\tnodist/clang_check_attributes \\\n\tnodist/code_coverage \\\n\tnodist/dot_importer \\\n\tnodist/fuzzer/actual_fail \\\n\tnodist/fuzzer/generate_dictionary \\\n\tnodist/install_test \\\n\tnodist/log_changes \\\n\n# Python files, subject to format but not lint\nPY_FILES = \\\n\t$(PY_PROGRAMS) \\\n\tnodist/code_coverage.dat \\\n\ttest_regress/t/*.py \\\n\n# Python files, test_regress tests\nPY_TEST_FILES = \\\n\ttest_regress/t/*.py \\\n\nYAPF = yapf3\nYAPF_FLAGS = -i --parallel\n\nformat-py yapf:\n\t$(YAPF) $(YAPF_FLAGS) $(PY_FILES)\n\nGERSEMI = gersemi\nGERSEMI_FLAGS = -i\n\nformat-cmake:\n\t$(GERSEMI) $(GERSEMI_FLAGS) $(CMAKE_FILES)\n\nPYLINT = pylint\nPYLINT_FLAGS = --recursive=n --score=n --disable=R0801\nPYLINT_TEST_FLAGS = $(PYLINT_FLAGS) --disable=C0103,C0114,C0116,C0209,C0411,C0413,C0301,R0801,R0912,R0915,R0916,R1702,W0511,W0621\n\nRUFF = ruff\nRUFF_FLAGS = check --ignore=E402,E501,E701\n\n# \"make -k\" so can see all tool result errors\nlint-py:\n\t$(MAKE) -k lint-py-pylint lint-py-pylint-tests lint-py-ruff\n\nlint-py-pylint:\n\t$(PYLINT) $(PYLINT_FLAGS) $(PY_PROGRAMS)\n\nlint-py-pylint-tests:\n\t$(PYLINT) $(PYLINT_TEST_FLAGS) $(PY_TEST_FILES) | $(PYTHON3) nodist/lint_py_test_filter\n\nlint-py-ruff:\n\t$(RUFF) $(RUFF_FLAGS) $(PY_PROGRAMS)\n\nformat-exec:\n\t-chmod a+x test_regress/t/*.py\n\n######################################################################\n# Configure\n\nIN_WILD := ${srcdir}/*.in ${srcdir}/*/*.in\n\n# autoheader might not change config_package.h.in, so touch it\n${srcdir}/config_package.h: ${srcdir}/config_package.h.in configure\n\tcd ${srcdir} && autoheader\n\ttouch $@\nMakefile: Makefile.in config.status $(IN_WILD)\n\t./config.status\nsrc/Makefile: src/Makefile.in Makefile\nconfig.status: configure\n\t./config.status --recheck\n\nconfigure: configure.ac\nifeq ($(CFG_WITH_CCWARN),yes)  # Local... Else don't burden users\n\tautoconf --warnings=all\nelse\n\tautoconf\nendif\n\n######################################################################\n# Clean\n\nmaintainer-clean::\n\t@echo \"This command is intended for maintainers to use;\"\n\t@echo \"rebuilding the deleted files requires autoconf.\"\n\trm -f configure\n\nclean mostlyclean distclean maintainer-clean maintainer-copy::\n\tfor dir in $(SUBDIRS); do \\\n\t  echo making $@ in $$dir ; \\\n\t  $(MAKE) -C $$dir $@ ; \\\n\tdone\n\nclean mostlyclean distclean maintainer-clean::\n\trm -f $(SCRIPTS) *.tmp\n\trm -f *.aux *.cp *.cps *.dvi *.fn *.fns *.ky *.kys *.log\n\trm -f *.pg *.pgs *.toc *.tp *.tps *.vr *.vrs *.idx\n\trm -f *.ev *.evs *.ov *.ovs *.cv *.cvs *.ma *.mas\n\trm -f *.tex\n\trm -rf examples/*/obj_dir* examples/*/logs\n\trm -rf test_*/obj_dir\n\trm -rf nodist/fuzzer/dictionary\n\trm -rf nodist/obj_dir\n\trm -rf verilator.txt\n\ndistclean maintainer-clean::\n\trm -f *.info* *.1 $(INFOS) $(INFOS_OLD) $(VL_INST_MAN_FILES)\n\trm -f Makefile config.status config.cache config.log TAGS\n\trm -f verilator_bin* verilator_coverage_bin*\n\trm -f bin/verilator_bin* bin/verilator_coverage_bin*\n\trm -f include/verilated.mk include/verilated_config.h\n\n######################################################################\n# Distributions\n\nDISTTITLE := Verilator $(word 1,$(PACKAGE_VERSION))\nDISTNAME := verilator-$(word 1,$(PACKAGE_VERSION))\nDISTDATEPRE := $(word 2,$(PACKAGE_VERSION))\nDISTDATE := $(subst /,-,$(DISTDATEPRE))\nDISTTAGNAME := $(subst .,_,$(subst -,_,$(DISTNAME)))\n\ntag:\n\tsvnorcvs tag $(DISTTAGNAME)\n\nmaintainer-diff:\n\tsvnorcvs diff $(DISTTAGNAME)\n\npreexist:\n\tsvnorcvs nexists $(DISTTAGNAME)\n\nmaintainer-dist: preexist tag\n\tsvnorcvs release $(DISTTAGNAME)\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.6240234375,
          "content": ".. Github doesn't render images unless absolute URL\n.. Do not know of a conditional tag, \"only: github\" nor \"github display\" works\n\n|badge1| |badge2| |badge3| |badge4| |badge5| |badge6| |badge7|\n\n.. |badge1| image:: https://img.shields.io/badge/Website-Verilator.org-181717.svg\n    :target: https://verilator.org\n.. |badge2| image:: https://img.shields.io/badge/License-LGPL%20v3-blue.svg\n    :target: https://www.gnu.org/licenses/lgpl-3.0\n.. |badge3| image:: https://img.shields.io/badge/License-Artistic%202.0-0298c3.svg\n    :target: https://opensource.org/licenses/Artistic-2.0\n.. |badge4| image:: https://repology.org/badge/tiny-repos/verilator.svg?header=distro%20packages\n    :target: https://repology.org/project/verilator/versions\n.. |badge5| image:: https://img.shields.io/docker/pulls/verilator/verilator\n    :target: https://hub.docker.com/r/verilator/verilator\n.. |badge6| image:: https://api.codacy.com/project/badge/Grade/fa78caa433c84a4ab9049c43e9debc6f\n    :target: https://www.codacy.com/gh/verilator/verilator\n.. |badge7| image:: https://github.com/verilator/verilator/workflows/build/badge.svg\n    :target: https://github.com/verilator/verilator/actions?query=workflow%3Abuild\n\n\nWelcome to Verilator\n====================\n\n.. list-table::\n\n   * - **Welcome to Verilator, the fastest Verilog/SystemVerilog simulator.**\n        * Accepts Verilog or SystemVerilog\n        * Performs lint code-quality checks\n        * Compiles into multithreaded C++, or SystemC\n        * Creates XML to front-end your own tools\n     - |Logo|\n   * - |verilator multithreaded performance|\n     - **Fast**\n        * Outperforms many closed-source commercial simulators\n        * Single- and multithreaded output models\n   * - **Widely Used**\n        * Wide industry and academic deployment\n        * Out-of-the-box support from Arm and RISC-V vendor IP\n     - |verilator usage|\n   * - |verilator community|\n     - **Community Driven & Openly Licensed**\n        * Guided by the `CHIPS Alliance`_ and `Linux Foundation`_\n        * Open, and free as in both speech and beer\n        * More simulation for your verification budget\n   * - **Commercial Support Available**\n        * Commercial support contracts\n        * Design support contracts\n        * Enhancement contracts\n     - |verilator support|\n\n\nWhat Verilator Does\n===================\n\nVerilator is invoked with parameters similar to GCC or Synopsys's VCS.  It\n\"Verilates\" the specified Verilog or SystemVerilog code by reading it,\nperforming lint checks, and optionally inserting assertion checks and\ncoverage-analysis points. It outputs single- or multithreaded .cpp and .h\nfiles, the \"Verilated\" code.\n\nThese Verilated C++/SystemC files are then compiled by a C++ compiler\n(gcc/clang/MSVC++), optionally along with a user's own C++/SystemC wrapper\nfile, to instantiate the Verilated model. Executing the resulting\nexecutable performs the design simulation. Verilator also supports linking\nVerilated generated libraries, optionally encrypted, into other simulators.\n\nVerilator may not be the best choice if you are expecting a full-featured\nreplacement for a closed-source Verilog simulator, need SDF annotation,\nmixed-signal simulation, or are doing a quick class project (we recommend\n`Icarus Verilog`_ for classwork).  However, if you are looking for a path\nto migrate SystemVerilog to C++/SystemC, or want high-speed simulation of\ndesigns, Verilator is the tool for you.\n\n\nPerformance\n===========\n\nVerilator does not directly translate Verilog HDL to C++ or SystemC. Rather,\nVerilator compiles your code into a much faster optimized and optionally\nthread-partitioned model, which is in turn wrapped inside a C++/SystemC\nmodule. The results are a compiled Verilog model that executes even on a\nsingle thread over 10x faster than standalone SystemC, and on a single\nthread is about 100 times faster than interpreted Verilog simulators such\nas `Icarus Verilog`_. Another 2-10x speedup might be gained from\nmultithreading (yielding 200-1000x total over interpreted simulators).\n\nVerilator has typically similar or better performance versus closed-source\nVerilog simulators (e.g., Aldec Riviera-Pro, Cadence Incisive/NC-Verilog,\nMentor ModelSim/Questa, Synopsys VCS, VTOC, and Pragmatic CVer/CVC). But,\nVerilator is open-sourced, so you can spend on computes rather than\nlicenses. Thus, Verilator gives you the best simulation cycles/dollar.\n\n\nInstallation & Documentation\n============================\n\nFor more information:\n\n- `Verilator installation and package directory structure\n  <https://verilator.org/install>`_\n\n- `Verilator manual (HTML) <https://verilator.org/verilator_doc.html>`_,\n  or `Verilator manual (PDF) <https://verilator.org/verilator_doc.pdf>`_\n\n- `Subscribe to Verilator announcements\n  <https://github.com/verilator/verilator-announce>`_\n\n- `Verilator forum <https://verilator.org/forum>`_\n\n- `Verilator issues <https://verilator.org/issues>`_\n\n\nSupport\n=======\n\nVerilator is a community project, guided by the `CHIPS Alliance`_ under the\n`Linux Foundation`_.\n\nWe appreciate and welcome your contributions in whatever form; please see\n`Contributing to Verilator\n<https://github.com/verilator/verilator/blob/master/docs/CONTRIBUTING.rst>`_.\nThanks to our `Contributors and Sponsors\n<https://verilator.org/guide/latest/contributors.html>`_.\n\nVerilator also supports and encourages commercial support models and\norganizations; please see `Verilator Commercial Support\n<https://verilator.org/verilator_commercial_support>`_.\n\n\nRelated Projects\n================\n\n- `GTKwave <http://gtkwave.sourceforge.net/>`_ - Waveform viewer for\n  Verilator traces.\n\n- `Icarus Verilog`_ - Icarus is a full-featured interpreted Verilog\n  simulator. If Verilator does not support your needs, perhaps Icarus may.\n\n\nOpen License\n============\n\nVerilator is Copyright 2003-2025 by Wilson Snyder. (Report bugs to\n`Verilator Issues <https://verilator.org/issues>`_.)\n\nVerilator is free software; you can redistribute it and/or modify it under\nthe terms of either the GNU Lesser General Public License Version 3 or the\nPerl Artistic License Version 2.0. See the documentation for more details.\n\n.. _CHIPS Alliance: https://chipsalliance.org\n.. _Icarus Verilog: https://steveicarus.github.io/iverilog\n.. _Linux Foundation: https://www.linuxfoundation.org\n.. |Logo| image:: https://www.veripool.org/img/verilator_256_200_min.png\n.. |verilator multithreaded performance| image:: https://www.veripool.org/img/verilator_multithreaded_performance_bg-min.png\n.. |verilator usage| image:: https://www.veripool.org/img/verilator_usage_400x200-min.png\n.. |verilator community| image:: https://www.veripool.org/img/verilator_community_400x125-min.png\n.. |verilator support| image:: https://www.veripool.org/img/verilator_support_400x125-min.png\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.8447265625,
          "content": "---\n# DESCRIPTION: codecov.io config\n#\n# Copyright 2020-2025 by Wilson Snyder. This program is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU\n# Lesser General Public License Version 3 or the Perl Artistic License\n# Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n####################\n# Validate:\n#  curl --data-binary @codecov.yml https://codecov.io/validate\n#\ncodecov:\n  require_ci_to_pass: false\ncoverage:\n  precision: 2\n  round: down\n  range: 50...100\n  ignore:\n    - \"ci\"  #\n    - \"docs\"  #\n    - \"examples\"  #\n    - \"include/gtkwave\"  #\n    - \"include/vltstd\"  #\n    - \"test_regress\"  #\nparsers:\n  gcov:\n    branch_detection:\n      conditional: true\n      loop: true\n      method: false\n      macro: false\ncomment:\n  layout: \"reach,diff,flags,tree\"\n  behavior: default\n  require_changes: true\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 24.0771484375,
          "content": "# DESCRIPTION: Process this file with autoconf to produce a configure script.\n#\n# Copyright 2003-2025 by Wilson Snyder. Verilator is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU Lesser\n# General Public License Version 3 or the Perl Artistic License Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n\n# When releasing, also update header of Changes file, and CMakeLists.txt,\n# and commit using \"devel release\" or \"Version bump\" message\n# Then 'make maintainer-dist'\n#AC_INIT([Verilator],[#.### YYYY-MM-DD])\n#AC_INIT([Verilator],[#.### devel])\nAC_INIT([Verilator],[5.033 devel],\n        [https://verilator.org],\n        [verilator],[https://verilator.org])\n\nAC_CONFIG_HEADERS(src/config_package.h)\nAC_CONFIG_FILES(Makefile src/Makefile src/Makefile_obj include/verilated.mk include/verilated_config.h verilator.pc verilator-config.cmake verilator-config-version.cmake)\n\n# Version\nAC_MSG_RESULT([configuring for $PACKAGE_STRING])\nPACKAGE_VERSION_NUMBER=`AS_ECHO(\"$PACKAGE_VERSION\") | sed 's/ .*//g'`\nAC_SUBST(PACKAGE_VERSION_NUMBER)\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_NUMBER_STRING],[\"$PACKAGE_VERSION_NUMBER\"],[Package version as a number])\nVERILATOR_VERSION_INTEGER=`AS_ECHO(\"$PACKAGE_VERSION\") | [sed 's/\\([0-9]\\)\\.\\([0-9][0-9][0-9]\\) .*/\\1\\2000/g']`\nAC_SUBST(VERILATOR_VERSION_INTEGER)\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_STRING_CHAR],\n        [static const char* const PACKAGE_STRING_UNUSED = \"$PACKAGE_STRING\";],\n        [Package version as a number])\nAC_SUBST(PACKAGE_VERSION_STRING_CHAR)\n\n######################################################################\n## Arguments/flag checking\n\n# Ignore automake flags passed by Ubuntu builds\nAC_ARG_ENABLE([dependency-tracking],\n              [AS_HELP_STRING([--disable-dependency-tracking], [ignored])])\nAC_ARG_ENABLE([maintainer-mode],\n              [AS_HELP_STRING([--enable-maintainer-mode], [ignored])])\nAC_ARG_ENABLE([silent-rules],\n              [AS_HELP_STRING([--disable-silent-rules], [ignored])])\n\n# Flag to enable linking specific libraries statically\nAC_MSG_CHECKING(whether to perform partial static linking of Verilator binary)\nAC_ARG_ENABLE([partial-static],\n              [AS_HELP_STRING([--disable-partial-static],\n                              [By default, for Verilation performance, Verilator\n                               is linked against some of its dependencies\n                               statically. Use this to link the Verilator binary\n                               fully dynamically.])],\n              [case \"${enableval}\" in\n                yes) CFG_ENABLE_PARTIAL_STATIC=yes ;;\n                no)  CFG_ENABLE_PARTIAL_STATIC=no ;;\n                *)   AC_MSG_ERROR([bad value '${enableval}' for --disable-partial-static]) ;;\n               esac],\n               CFG_ENABLE_PARTIAL_STATIC=yes)\nAC_MSG_RESULT($CFG_ENABLE_PARTIAL_STATIC)\n\n# Flag to enable linking Verilator with tcmalloc if available\nAC_MSG_CHECKING(whether to use tcmalloc)\nAC_ARG_ENABLE([tcmalloc],\n              [AS_HELP_STRING([--enable-tcmalloc],\n                              [Use libtcmalloc_minimal for faster dynamic memory\n                               management in Verilator binary @<:@default=check@:>@])],\n              [case \"${enableval}\" in\n                yes) CFG_WITH_TCMALLOC=yes ;;\n                no)  CFG_WITH_TCMALLOC=no ;;\n                *)   AC_MSG_ERROR([bad value '${enableval}' for --enable-tcmalloc]) ;;\n               esac],\n              [CFG_WITH_TCMALLOC=check;])\nAC_MSG_RESULT($CFG_WITH_TCMALLOC)\n\n# Flag to enable coverage build\nAC_MSG_CHECKING(whether to build for coverage collection)\nAC_ARG_ENABLE([coverage],\n              [AS_HELP_STRING([--enable-coverage],\n                              [Build Verilator for code coverage collection.\n                               For developers only.])],\n              [case \"${enableval}\" in\n                yes) CFG_ENABLE_COVERAGE=yes ;;\n                no)  CFG_ENABLE_COVERAGE=no ;;\n                *)   AC_MSG_ERROR([bad value '${enableval}' for --enable-coverage]) ;;\n               esac],\n               CFG_ENABLE_COVERAGE=no)\nAC_MSG_RESULT($CFG_ENABLE_COVERAGE)\n\n# Special Substitutions - CFG_WITH_DEFENV\nAC_MSG_CHECKING(whether to use hardcoded paths)\nAC_ARG_ENABLE([defenv],\n              [AS_HELP_STRING([--disable-defenv],\n                              [disable using some hardcoded data paths extracted\n                              from some default environment variables (the default\n                              is to use hardcoded paths) in Verilator binary])],\n              [case \"${enableval}\" in\n                yes) CFG_WITH_DEFENV=yes ;;\n                no)  CFG_WITH_DEFENV=no ;;\n                *)   AC_MSG_ERROR([bad value ${enableval} for --disable-defenv]) ;;\n               esac],\n              CFG_WITH_DEFENV=yes)\nAC_SUBST(CFG_WITH_DEFENV)\nAC_MSG_RESULT($CFG_WITH_DEFENV)\n\n# Special Substitutions - CFG_WITH_CCWARN\nAC_MSG_CHECKING(whether to show and stop on compilation warnings)\nAC_ARG_ENABLE([ccwarn],\n              [AS_HELP_STRING([--enable-ccwarn],\n                              [enable showing and stopping on compilation warnings\n                               in Verilator binary and Verilated makefiles])],\n              [case \"${enableval}\" in\n                yes) CFG_WITH_CCWARN=yes ;;\n                no)  CFG_WITH_CCWARN=no ;;\n                *)   AC_MSG_ERROR([bad value ${enableval} for --enable-ccwarn]) ;;\n               esac],\n              [case \"x${VERILATOR_AUTHOR_SITE}\" in\n                x)   CFG_WITH_CCWARN=no ;;\n                *)   CFG_WITH_CCWARN=yes ;;\n               esac]\n              )\nAC_SUBST(CFG_WITH_CCWARN)\nAC_MSG_RESULT($CFG_WITH_CCWARN)\n\n# Special Substitutions - CFG_WITH_LONGTESTS\nAC_MSG_CHECKING(whether to run long tests)\nAC_ARG_ENABLE([longtests],\n              [AS_HELP_STRING([--enable-longtests],\n                              [enable running long developer tests])],\n              [case \"${enableval}\" in\n                yes) CFG_WITH_LONGTESTS=yes ;;\n                no)  CFG_WITH_LONGTESTS=no ;;\n                *)   AC_MSG_ERROR([bad value ${enableval} for --enable-longtests]) ;;\n               esac],\n              [case \"x${VERILATOR_AUTHOR_SITE}\" in\n                x)   CFG_WITH_LONGTESTS=no ;;\n                *)   CFG_WITH_LONGTESTS=yes ;;\n               esac]\n              )\nAC_SUBST(CFG_WITH_LONGTESTS)\nAC_MSG_RESULT($CFG_WITH_LONGTESTS)\n\nAC_CHECK_PROG(HAVE_Z3,z3,yes)\nAC_CHECK_PROG(HAVE_CVC5,cvc5,yes)\nAC_CHECK_PROG(HAVE_CVC4,cvc4,yes)\n\n# Special Substitutions - CFG_WITH_SOLVER\nAC_MSG_CHECKING(for SMT solver)\nAC_ARG_WITH([solver],\n              [AS_HELP_STRING([--with-solver='z3 --in'],\n                              [set default SMT solver for constrained randomization])],\n              [CFG_WITH_SOLVER=\"${withval}\"],\n              [CFG_WITH_SOLVER=no\n               if test \"x$HAVE_Z3\" = \"xyes\"; then\n                CFG_WITH_SOLVER=\"z3 --in\"\n               elif test \"x$HAVE_CVC5\" = \"xyes\"; then\n                CFG_WITH_SOLVER=\"cvc5 --incremental\"\n               elif test \"x$HAVE_CVC4\" = \"xyes\"; then\n                CFG_WITH_SOLVER=\"cvc4 --lang=smt2 --incremental\"\n               fi]\n              )\nAC_SUBST(CFG_WITH_SOLVER)\nAC_MSG_RESULT($CFG_WITH_SOLVER)\n\n######################################################################\n## Compiler checks\n\nAC_MSG_RESULT([compiler CXX inbound is set to... $CXX])\n\n# Compiler flags (ensure they are not empty to avoid configure defaults)\nCFLAGS=\"$CFLAGS \"\nCPPFLAGS=\"$CPPFLAGS \"\nCXXFLAGS=\"$CXXFLAGS \"\nLDFLAGS=\"$LDFLAGS \"\n\n# Checks for programs.\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_INSTALL\n\nAC_LANG_PUSH(C++)\nCFG_CXX_VERSION=`$CXX --version | head -1`\nAC_MSG_RESULT([compiler $CXX --version = $CFG_CXX_VERSION])\nAC_SUBST(CFG_CXX_VERSION)\n\nAC_MSG_CHECKING([that C++ compiler can compile simple program])\nAC_RUN_IFELSE(\n   [AC_LANG_SOURCE([int main() { return 0; }])],\n    AC_MSG_RESULT(yes),\n    AC_MSG_RESULT(no);AC_MSG_ERROR([a working C++ compiler is required]),\n    AC_MSG_RESULT(yes))\n\nAC_CHECK_PROG(AR,ar,ar)\nif test \"x$AR\" = \"x\" ; then\n   AC_MSG_ERROR([Cannot find \"ar\" in your PATH, please install it])\nfi\n\nAC_CHECK_PROG(PERL,perl,perl)\nif test \"x$PERL\" = \"x\" ; then\n   AC_MSG_ERROR([Cannot find \"perl\" in your PATH, please install it])\nfi\n\nAC_CHECK_PROG(PYTHON3,python3,python3)\nif test \"x$PYTHON3\" = \"x\" ; then\n   AC_MSG_ERROR([Cannot find \"python3\" in your PATH, please install it])\nfi\npython3_version=$($PYTHON3 --version | head -1)\nAC_MSG_RESULT([$PYTHON3 --version = $python3_version])\n\nAC_CHECK_PROG(LEX,flex,flex)\nif test \"x$LEX\" = \"x\" ; then\n   AC_MSG_ERROR([Cannot find \"flex\" in your PATH, please install it])\nfi\nflex_version=$($LEX --version | head -1)\nAC_MSG_RESULT([$LEX --version = $flex_version])\n\nAC_CHECK_PROG(YACC,bison,bison)\nif test \"x$YACC\" = \"x\" ; then\n   AC_MSG_ERROR([Cannot find \"bison\" in your PATH, please install it])\nfi\nbison_version=$($YACC --version | head -1)\nAC_MSG_RESULT([$YACC --version = $bison_version])\n\nAC_CHECK_PROG(OBJCACHE,ccache,ccache)\nif test \"x$OBJCACHE\" != \"x\" ; then\n  objcache_version=$($OBJCACHE --version | head -1)\n  AC_MSG_RESULT([objcache is $OBJCACHE --version = $objcache_version])\nfi\n\n# Checks for libraries.\n\n# Checks for typedefs, structures\nAC_CHECK_TYPE(size_t,unsigned int)\nAC_TYPE_SIZE_T\n\n# Checks for compiler characteristics.\nAC_C_INLINE\n\nAC_LINK_IFELSE(\n     [AC_LANG_PROGRAM([#include <new>], [[int* a=new int; delete a; ]])],\n     [], [AC_MSG_ERROR([$CXX does not seem to successfully compile a simple C++ program])])\n\nAC_DEFUN([_MY_CXX_CHECK_FLAG],\n   [# _MY_CXX_CHECK_FLAG(flag) -- Check if compiler supports specific options\n    # Set $_my_result appropriately\n    ACO_SAVE_CXXFLAGS=\"$CXXFLAGS\"\n    # -Werror needed otherwise unknown -Wno-div-by-zero won't report problems\n    # new/delete is needed to find -faligned-new link problem on Darwin\n    CXXFLAGS=\"$CXXFLAGS $1 -Werror\"\n    AC_MSG_CHECKING([whether $CXX accepts $1])\n    AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM([#include <new>], [[int* a=new int; delete a; ]])],\n         [_my_result=yes\n          if test -s conftest.err; then\n            if grep -e \"$1\" conftest.err >/dev/null; then\n              _my_result=no\n            fi\n          fi],\n         [_my_result=no])\n    # GCC is annoying, trying to be helpful, it postpones unknown -Wno-\n    # options if there's no error We want to see them regardless, so try\n    # forcing an error and see if we get a gcc warning\n    AC_COMPILE_IFELSE(\n         [AC_LANG_PROGRAM([[an_error \"intentional-error-for-test.h\"\n                          ]],[])],\n         [], # Ignore ok exit\n         [if test -s conftest.err; then\n            if grep -e \"$1\" conftest.err >/dev/null; then\n              _my_result=no\n            fi\n          fi])\n    AC_MSG_RESULT($_my_result)\n    CXXFLAGS=\"$ACO_SAVE_CXXFLAGS\"\n   ])\n\nAC_DEFUN([_MY_CXX_CHECK_IFELSE],\n   [# _MY_CXX_CHECK_IFELSE(option,action-if-supported,action-if-not-supported)\n    # Check if compiler supports specific option. If it does,\n    # do action-if-supported, otherwise do action-if-not-supported\n    _MY_CXX_CHECK_FLAG($1)\n    if test \"$_my_result\" = \"yes\" ; then\n      true\n      $2\n    else\n      true\n      $3\n    fi\n   ])\n\nAC_DEFUN([_MY_CXX_CHECK_SET],\n   [# _MY_CXX_CHECK_SET(variable,option)\n    # Check if compiler supports specific option. If it does,\n    # set variable to option, only if not previously set.\n    if test \"$$1\" = \"\"; then\n       _MY_CXX_CHECK_IFELSE($2, $1=\"$2\")\n    fi\n   ])\n\nAC_DEFUN([_MY_CXX_CHECK_OPT],\n   [# _MY_CXX_CHECK_OPT(variable,option)\n    # Check if compiler supports specific option. If it does,\n    # append option to variable\n    _MY_CXX_CHECK_IFELSE($2, $1=\"$$1 $2\")\n   ])\n\nAC_DEFUN([_MY_CXX_CHECK_CORO_SET],\n   [# _MY_CXX_CHECK_CORO_SET(variable,option)\n    # Check if compiler supports coroutines with specific option. If it does,\n    # set variable to option, only if not previously set.\n    # Define HAVE_COROUTINES if supported.\n    if test \"$$1\" = \"\"; then\n      if test \"$2\" != \"\"; then\n        _my_msg_opt=\" with $2\"\n      else\n        _my_msg_opt=\"\"\n      fi\n      AC_MSG_CHECKING([whether coroutines are supported by $CXX$_my_msg_opt])\n      ACO_SAVE_CXXFLAGS=\"$CXXFLAGS\"\n      CXXFLAGS=\"$CXXFLAGS $2\"\n      AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM([\n            #if defined(__clang__) && !defined(__cpp_impl_coroutine)\n            #define __cpp_impl_coroutine 1\n            #endif\n            #include <coroutine>\n          ],[[std::coroutine_handle<> h;]])],\n         [_my_result=yes],\n         [AC_LINK_IFELSE(\n             [AC_LANG_PROGRAM(\n                [#include <experimental/coroutine>],\n                [[std::experimental::coroutine_handle<> h;]])],\n             [_my_result=yes],\n             [_my_result=no])])\n      AC_MSG_RESULT($_my_result)\n      CXXFLAGS=\"$ACO_SAVE_CXXFLAGS\"\n      if test \"$_my_result\" = \"yes\" ; then\n        $1=\"$2\"\n        AC_DEFINE([HAVE_COROUTINES],[1],[Defined if coroutines are supported by $CXX])\n      fi\n    fi\n  ])\n\nAC_DEFUN([_MY_LDLIBS_CHECK_FLAG],\n   [# _MY_LDLIBS_CHECK_FLAG(flag) -- Check if linker supports specific options\n    # Set $_my_result appropriately\n    ACO_SAVE_LIBS=\"$LIBS\"\n    LIBS=\"$LIBS $1\"\n    AC_MSG_CHECKING([whether $CXX linker accepts $1])\n    AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM([[]])],\n         [_my_result=yes\n          if test -s conftest.err; then\n            if grep -e \"$1\" conftest.err >/dev/null; then\n              _my_result=no\n            fi\n          fi],\n         [_my_result=no])\n    AC_MSG_RESULT($_my_result)\n    LIBS=\"$ACO_SAVE_LIBS\"\n   ])\n\nAC_DEFUN([_MY_LDLIBS_CHECK_IFELSE],\n   [# _MY_LDLIBS_CHECK_IFELSE(flag,action-if-supported,action-if-not-supported)\n    # Check if linker supports specific flag, if it does do action-if-supported\n    # otherwise do action-if-not-supported\n    _MY_LDLIBS_CHECK_FLAG($1)\n    if test \"$_my_result\" = \"yes\" ; then\n      true\n      $2\n    else\n      true\n      $3\n    fi\n   ])\n\nAC_DEFUN([_MY_LDLIBS_CHECK_OPT],\n   [# _MY_LDLIBS_CHECK_OPT(variable, flag) -- Check if linker supports specific\n    # options. If it does, append flag to variable.\n    _MY_LDLIBS_CHECK_IFELSE($2, $1=\"$$1 $2\")\n   ])\n\n# Add the coverage flags early as they influence later checks.\nif test \"$CFG_ENABLE_COVERAGE\" = \"yes\"; then\n  _MY_CXX_CHECK_OPT(CXX,--coverage)\n  # Otherwise inline may not show as uncovered\n  #  If we use this then e.g. verilated.h functions properly show up\n  #  if unused.\n  #  However, VerilatedSerialize::write then changes from covered\n  #  to uncovered (in G++ 9.3.0) even with all inlining turned off.\n  #  Having false negative coverage is more effort then missing negatives.\n  #  Also this seems to explode the runtime (since a lot more data).\n  #  _MY_CXX_CHECK_OPT(CXX,-fkeep-inline-functions)\n  # Otherwise static may not show as uncovered\n  _MY_CXX_CHECK_OPT(CXX,-fkeep-static-functions)\n  # Exceptions can pollute the branch coverage data\n  _MY_CXX_CHECK_OPT(CXX,-fno-exceptions)\n  # Define-out some impossible stuff\n  _MY_CXX_CHECK_OPT(CXX,-DVL_GCOV)\nfi\n\n# Compiler flags to enable profiling\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_PROFILE,-pg)\nAC_SUBST(CFG_CXXFLAGS_PROFILE)\n\n# Flag to select newest language standard supported\n# Macros work such that first option that passes is the one we take\n# Currently enable c++17/c++14 due to packaged SystemC dependency\n# c++17 is the newest that Verilator is regularly tested to support\n# c++14 is the oldest that Verilator supports\n# gnu is required for Cygwin to compile verilated.h successfully\n#_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=gnu++20)\n#_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=c++20)\n_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=gnu++17)\n_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=c++17)\n_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=gnu++14)\n_MY_CXX_CHECK_SET(CFG_CXXFLAGS_STD_NEWEST,-std=c++14)\nAC_SUBST(CFG_CXXFLAGS_STD_NEWEST)\n\n# Flags for compiling Verilator internals including parser, and Verilated files\n# These turn on extra warnings and are only used with 'configure --enable-ccwarn'\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_WEXTRA,-Wextra)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_WEXTRA,-Wfloat-conversion)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_WEXTRA,-Wlogical-op)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_WEXTRA,-Wthread-safety)\nAC_SUBST(CFG_CXXFLAGS_WEXTRA)\n\n# Flags for coroutine support for dynamic scheduling\n_MY_CXX_CHECK_CORO_SET(CFG_CXXFLAGS_COROUTINES, \"\")\n_MY_CXX_CHECK_CORO_SET(CFG_CXXFLAGS_COROUTINES,-fcoroutines-ts)\n_MY_CXX_CHECK_CORO_SET(CFG_CXXFLAGS_COROUTINES,-fcoroutines)\n_MY_CXX_CHECK_CORO_SET(CFG_CXXFLAGS_COROUTINES,-fcoroutines-ts -Wno-deprecated-experimental-coroutine)\n_MY_CXX_CHECK_CORO_SET(CFG_CXXFLAGS_COROUTINES,-std=gnu++20)\nAC_SUBST(CFG_CXXFLAGS_COROUTINES)\nAC_SUBST(HAVE_COROUTINES)\n\n# Flags for compiling Verilator internals including parser always\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-Qunused-arguments)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-faligned-new)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-Wno-unused-parameter)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-Wno-shadow)\nAC_SUBST(CFG_CXXFLAGS_SRC)\n\n# Flags for compiling Verilator parser always (in addition to above CFG_CXXFLAGS_SRC)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_PARSER,-Wno-char-subscripts)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_PARSER,-Wno-null-conversion)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_PARSER,-Wno-parentheses-equality)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_PARSER,-Wno-unused)\nAC_SUBST(CFG_CXXFLAGS_PARSER)\n\n# Flags for compiling the debug version of Verilator (in addition to above CFG_CXXFLAGS_SRC)\nif test \"$CFG_ENABLE_COVERAGE\" = \"no\"; then # Do not optimize for the coverage build\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_DEBUG,-Og)\nfi\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_DEBUG,-ggdb)\n_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_DEBUG,-gz)\nAC_SUBST(CFG_CXXFLAGS_DEBUG)\n\n# Flags for linking the debug version of Verilator (in addition to above CFG_LDFLAGS_SRC)\n_MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_DEBUG,-gz)\nAC_SUBST(CFG_LDFLAGS_DEBUG)\n\n# Flags for Verilated makefile\n# For example, -Wno-div-by-zero isn't in 4.1.2\n# Random code often does / 0.  Unfortunately VL_DIV_I(0,0) will warn\n# without this flag, even though there's a conditional to prevent the divide.\n# We still don't add no-div-by-zero as it throws message to stdout, though doesn't die.\n#_MY_CXX_CHECK_OPT(-Wno-div-by-zero)\n# For some reason -faligned-new does not work under Travis w/ clang but the\n# configure test doesn't catch this either\nAS_IF([test \"x$TRAVIS_COMPILER\" != xclang], [_MY_CXX_CHECK_OPT(CFG_CXXFLAGS_NO_UNUSED,-faligned-new)])\nCFG_CXX_FLAGS_CMAKE=\"-faligned-new\"\nm4_foreach([cflag],[\n        [-fbracket-depth=4096],\n        [-fcf-protection=none],\n        [-mno-cet],\n        [-Qunused-arguments],\n        [-Wno-bool-operation],\n        [-Wno-c++11-narrowing],\n        [-Wno-constant-logical-operand],\n        [-Wno-non-pod-varargs],\n        [-Wno-parentheses-equality],\n        [-Wno-shadow],\n        [-Wno-sign-compare],\n        [-Wno-tautological-bitwise-compare],\n        [-Wno-tautological-compare],\n        [-Wno-uninitialized],\n        [-Wno-unused-but-set-parameter],\n        [-Wno-unused-but-set-variable],\n        [-Wno-unused-parameter],\n        [-Wno-unused-variable]],[\n    _MY_CXX_CHECK_OPT(CFG_CXXFLAGS_NO_UNUSED,cflag)\n    # CMake will test what flags work itself, so pass all flags through to it\n    CFG_CXX_FLAGS_CMAKE=\"$CFG_CXX_FLAGS_CMAKE cflag\"\n    ])\nAC_SUBST(CFG_CXXFLAGS_NO_UNUSED)\nAC_SUBST(CFG_CXX_FLAGS_CMAKE)\n\n# Find multithread linker flags\nm4_foreach([ldflag], [\n        [-mt],\n        [-pthread],\n        [-lpthread],\n        [-latomic]],[\n    _MY_LDLIBS_CHECK_OPT(CFG_LDLIBS_THREADS,ldflag)\n    # CMake will test what flags work itself, so pass all flags through to it\n    CFG_LDFLAGS_THREADS_CMAKE=\"$CFG_LDFLAGS_THREADS_CMAKE ldflag\"\n    ])\nAC_SUBST(CFG_LDLIBS_THREADS)\nAC_SUBST(CFG_LDFLAGS_THREADS_CMAKE)\n\n# If 'mold' is installed, use it to link for faster buildtimes\n_MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_SRC, -fuse-ld=mold)\n_MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_VERILATED, -fuse-ld=mold)\n\n# When linking partially statically\nif test \"$CFG_ENABLE_PARTIAL_STATIC\" = \"yes\"; then\n  _MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_SRC, -static-libgcc)\n  _MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_SRC, -static-libstdc++)\n  _MY_LDLIBS_CHECK_OPT(CFG_LDFLAGS_SRC, -Xlinker -gc-sections)\n  LTCMALLOC=-l:libtcmalloc_minimal.a\nelse\n  LTCMALLOC=-ltcmalloc_minimal\nfi\nAC_SUBST(CFG_LDFLAGS_SRC)\nAC_SUBST(CFG_LDFLAGS_VERILATED)\n\n# The pthread library is required by tcmalloc, so add it if it exists. If it\n# does not, the tcmalloc check below will fail anyway, and linking against\n# pthreads is harmless otherwise.\nCFG_LIBS=\"$LIBS $CFG_LIBS\"\n_MY_LDLIBS_CHECK_OPT(CFG_LIBS, -lpthread)\n_MY_LDLIBS_CHECK_OPT(CFG_LIBS, -latomic)\n\n# Check libraries for MingW\n_MY_LDLIBS_CHECK_OPT(CFG_LIBS, -lbcrypt)\n_MY_LDLIBS_CHECK_OPT(CFG_LIBS, -lpsapi)\n\n# Check if tcmalloc is available based on --enable-tcmalloc\n_MY_LDLIBS_CHECK_IFELSE(\n  $LTCMALLOC,\n  [if test \"$CFG_WITH_TCMALLOC\" != \"no\"; then\n    CFG_LIBS=\"$LTCMALLOC $CFG_LIBS\";\n    # If using tcmalloc, add some extra options to make the compiler not assume\n    # it is using it's own versions of the standard library functions\n    _MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-fno-builtin-malloc)\n    _MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-fno-builtin-calloc)\n    _MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-fno-builtin-realloc)\n    _MY_CXX_CHECK_OPT(CFG_CXXFLAGS_SRC,-fno-builtin-free)\n   fi],\n  [if test \"$CFG_WITH_TCMALLOC\" = \"yes\"; then\n    AC_MSG_ERROR([--enable-tcmalloc was given but test for ${LTCMALLOC} failed])\n   fi])\nAC_SUBST(CFG_LIBS)\n\n# Need C++14 at least\n#Alternative: AX_CXX_COMPILE_STDCXX([14])\nAC_DEFUN([_MY_CXX_CHECK_CXX_VER],\n   [# _MY_CXX_CHECK_CXX_VER(flag) -- Check if compiler runs C++14\n    # Set $_my_result\n    AC_LINK_IFELSE(\n     [AC_LANG_PROGRAM([#include <thread>\n#if (__cplusplus < 201402L)\n# error \"Too old\"\n#endif\n    ], [[ ]])],\n     [_my_result=yes\n      if test -s conftest.err; then\n        if grep -e \"$1\" conftest.err >/dev/null; then\n          _my_result=no\n        fi\n      fi],\n     [_my_result=no])\n   ])\n\n# Add $CFG_CXXFLAGS_STD only if can't compile correctly otherwise,\n# as adding std= when not needed can cause errors with the C++ std library.\nCFG_CXXFLAGS_STD=$CFG_CXXFLAGS_STD_NEWEST\nAC_MSG_CHECKING(whether $CXX supports C++14)\n_MY_CXX_CHECK_CXX_VER()\nAC_MSG_RESULT($_my_result)\nif test \"$_my_result\" = \"no\" ; then\n   CXXFLAGS=\"$CXXFLAGS $CFG_CXXFLAGS_STD\"\n   CFG_CXX_FLAGS_CMAKE=\"$CFG_CXX_FLAGS_CMAKE $CFG_CXXFLAGS_STD\"\n   AC_MSG_CHECKING(whether $CXX supports C++14 with $CFG_CXXFLAGS_STD)\n   _MY_CXX_CHECK_CXX_VER()\n   AC_MSG_RESULT($_my_result)\nelse\n   # CFG_CXXFLAGS_STD is also propagated to include/verilated.mk.in\n   # make sure we use the same std flag while compiling verilator and verilated design\n   CFG_CXXFLAGS_STD=\"\"\nfi\nif test \"$_my_result\" = \"no\" ; then\n   AC_MSG_NOTICE([[]])\n   AC_MSG_ERROR([[the $CXX compiler appears to not support C++14.\n\nVerilator requires a C++14 or newer compiler.]])\n\nfi\nAC_SUBST(CFG_CXXFLAGS_STD)\n\n# Compiler precompiled header options (assumes either gcc or clang++)\nAC_MSG_CHECKING([for $CXX precompile header include option])\nif $CXX --help | grep include-pch >/dev/null 2>/dev/null ; then\n   # clang\n   CFG_CXXFLAGS_PCH_I=-include-pch\n   CFG_GCH_IF_CLANG=.gch\nelse\n   # GCC\n   CFG_CXXFLAGS_PCH_I=-include\n   CFG_GCH_IF_CLANG=\nfi\nAC_MSG_RESULT($CFG_CXXFLAGS_PCH_I)\nAC_SUBST(CFG_CXXFLAGS_PCH_I)\nAC_SUBST(CFG_GCH_IF_CLANG)\n\n# Checks for library functions.\nAC_CHECK_MEMBER([struct stat.st_mtim.tv_nsec],\n    [AC_DEFINE([HAVE_STAT_NSEC],[1],[Defined if struct stat has st_mtim.tv_nsec])],\n    [], [#include <sys/stat.h>])\n\n# HAVE_SYSTEMC\n# - If found the default search path has it, so support is always enabled.\n# - If not found or not system-wide, user can set SYSTEMC_INCLUDE.\n# AC_CHECK_HEADERS seems to not locate on Travis-CI but include does work.\nAC_MSG_CHECKING([whether SystemC is found (in system path)])\nACO_SAVE_LIBS=\"$LIBS\"\nLIBS=\"$LIBS -lsystemc\"\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM([[#include <systemc.h>\n                     extern \"C\" int sc_main(int argc, char* argv[]) { return 0; }\n                     ]],[[sc_version()]])],\n    [_my_result=yes\n     AC_DEFINE([HAVE_SYSTEMC],[1],[Defined if have SystemC library])],\n    [_my_result=no])\nAC_MSG_RESULT($_my_result)\nLIBS=\"$ACO_SAVE_LIBS\"\nAC_SUBST(HAVE_SYSTEMC)\n\n# Checks for system services\n\n######################################################################\n## Output\n\n# Other install directories\npkgdatadir=${datadir}/verilator\nAC_SUBST(pkgdatadir)\npkgconfigdir=${datadir}/pkgconfig\nAC_SUBST(pkgconfigdir)\n\nAC_OUTPUT\n\nAC_MSG_RESULT([])\nAC_MSG_RESULT([Now type 'make' (or sometimes 'gmake') to build Verilator.])\nAC_MSG_RESULT([])\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 5.4462890625,
          "content": "#! /bin/sh\n#\n# install - install a program, script, or datafile\n# This comes from X11R5 (mit/util/scripts/install.sh).\n#\n# Copyright 1991 by the Massachusetts Institute of Technology\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n# the above copyright notice appear in all copies and that both that\n# copyright notice and this permission notice appear in supporting\n# documentation, and that the name of M.I.T. not be used in advertising or\n# publicity pertaining to distribution of the software without specific,\n# written prior permission.  M.I.T. makes no representations about the\n# suitability of this software for any purpose.  It is provided \"as is\"\n# without express or implied warranty.\n#\n# Calling this script install-sh is preferred over install.sh, to prevent\n# `make' implicit rules from creating a file called install from it\n# when there is no Makefile.\n#\n# This script is compatible with the BSD install script, but was written\n# from scratch.  It can only install one file at a time, a restriction\n# shared with many OS's install programs.\n\n\n# set DOITPROG to echo to test this script\n\n# Don't use :- since 4.3BSD and earlier shells don't like it.\ndoit=\"${DOITPROG-}\"\n\n\n# put in absolute paths if you don't have them in your path; or use env. vars.\n\nmvprog=\"${MVPROG-mv}\"\ncpprog=\"${CPPROG-cp}\"\nchmodprog=\"${CHMODPROG-chmod}\"\nchownprog=\"${CHOWNPROG-chown}\"\nchgrpprog=\"${CHGRPPROG-chgrp}\"\nstripprog=\"${STRIPPROG-strip}\"\nrmprog=\"${RMPROG-rm}\"\nmkdirprog=\"${MKDIRPROG-mkdir}\"\n\ntransformbasename=\"\"\ntransform_arg=\"\"\ninstcmd=\"$mvprog\"\nchmodcmd=\"$chmodprog 0755\"\nchowncmd=\"\"\nchgrpcmd=\"\"\nstripcmd=\"\"\nrmcmd=\"$rmprog -f\"\nmvcmd=\"$mvprog\"\nsrc=\"\"\ndst=\"\"\ndir_arg=\"\"\n\nwhile [ x\"$1\" != x ]; do\n    case $1 in\n\t-c) instcmd=\"$cpprog\"\n\t    shift\n\t    continue;;\n\n\t-d) dir_arg=true\n\t    shift\n\t    continue;;\n\n\t-m) chmodcmd=\"$chmodprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-o) chowncmd=\"$chownprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-g) chgrpcmd=\"$chgrpprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-s) stripcmd=\"$stripprog\"\n\t    shift\n\t    continue;;\n\n\t-t=*) transformarg=`echo $1 | sed 's/-t=//'`\n\t    shift\n\t    continue;;\n\n\t-b=*) transformbasename=`echo $1 | sed 's/-b=//'`\n\t    shift\n\t    continue;;\n\n\t*)  if [ x\"$src\" = x ]\n\t    then\n\t\tsrc=$1\n\t    else\n\t\t# this colon is to work around a 386BSD /bin/sh bug\n\t\t:\n\t\tdst=$1\n\t    fi\n\t    shift\n\t    continue;;\n    esac\ndone\n\nif [ x\"$src\" = x ]\nthen\n\techo \"install: no input file specified\"\n\texit 1\nelse\n\ttrue\nfi\n\nif [ x\"$dir_arg\" != x ]; then\n\tdst=$src\n\tsrc=\"\"\n\n\tif [ -d $dst ]; then\n\t\tinstcmd=:\n\telse\n\t\tinstcmd=mkdir\n\tfi\nelse\n\n# Waiting for this to be detected by the \"$instcmd $src $dsttmp\" command\n# might cause directories to be created, which would be especially bad\n# if $src (and thus $dsttmp) contains '*'.\n\n\tif [ -f $src -o -d $src ]\n\tthen\n\t\ttrue\n\telse\n\t\techo \"install:  $src does not exist\"\n\t\texit 1\n\tfi\n\n\tif [ x\"$dst\" = x ]\n\tthen\n\t\techo \"install: no destination specified\"\n\t\texit 1\n\telse\n\t\ttrue\n\tfi\n\n# If destination is a directory, append the input filename; if your system\n# does not like double slashes in filenames, you may need to add some logic\n\n\tif [ -d $dst ]\n\tthen\n\t\tdst=\"$dst\"/`basename $src`\n\telse\n\t\ttrue\n\tfi\nfi\n\n## this sed command emulates the dirname command\ndstdir=`echo $dst | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`\n\n# Make sure that the destination directory exists.\n#  this part is taken from Noah Friedman's mkinstalldirs script\n\n# Skip lots of stat calls in the usual case.\nif [ ! -d \"$dstdir\" ]; then\ndefaultIFS='\n'\nIFS=\"${IFS-${defaultIFS}}\"\n\noIFS=\"${IFS}\"\n# Some sh's can't handle IFS=/ for some reason.\nIFS='%'\nset - `echo ${dstdir} | sed -e 's@/@%@g' -e 's@^%@/@'`\nIFS=\"${oIFS}\"\n\npathcomp=''\n\nwhile [ $# -ne 0 ] ; do\n\tpathcomp=\"${pathcomp}${1}\"\n\tshift\n\n\tif [ ! -d \"${pathcomp}\" ] ;\n        then\n\t\t$mkdirprog \"${pathcomp}\"\n\telse\n\t\ttrue\n\tfi\n\n\tpathcomp=\"${pathcomp}/\"\ndone\nfi\n\nif [ x\"$dir_arg\" != x ]\nthen\n\t$doit $instcmd $dst &&\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dst; else true ; fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dst; else true ; fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dst; else true ; fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dst; else true ; fi\nelse\n\n# If we're going to rename the final executable, determine the name now.\n\n\tif [ x\"$transformarg\" = x ]\n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\tdstfile=`basename $dst $transformbasename |\n\t\t\tsed $transformarg`$transformbasename\n\tfi\n\n# don't allow the sed command to completely eliminate the filename\n\n\tif [ x\"$dstfile\" = x ]\n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\ttrue\n\tfi\n\n# Make a temp file name in the proper directory.\n\n\tdsttmp=$dstdir/#inst.$$#\n\n# Move or copy the file name to the temp name\n\n\t$doit $instcmd $src $dsttmp &&\n\n\ttrap \"rm -f ${dsttmp}\" 0 &&\n\n# and set any options; do chmod last to preserve setuid bits\n\n# If any of these fail, we abort the whole thing.  If we want to\n# ignore errors from any of these, just make sure not to ignore\n# errors from the above \"$doit $instcmd $src $dsttmp\" command.\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dsttmp; else true;fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dsttmp; else true;fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dsttmp; else true;fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dsttmp; else true;fi &&\n\n# Now rename the file to the real destination.\n\n\t$doit $rmcmd -f $dstdir/$dstfile &&\n\t$doit $mvcmd $dsttmp $dstdir/$dstfile\n\nfi &&\n\n\nexit 0\n"
        },
        {
          "name": "nodist",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_regress",
          "type": "tree",
          "content": null
        },
        {
          "name": "verilator-config-version.cmake.in",
          "type": "blob",
          "size": 0.921875,
          "content": "######################################################################\n#\n# DESCRIPTION: CMake version configuration file for Verilator\n#\n# This allows specifying a minimum Verilator version.\n# Include it in your CMakeLists.txt using:\n#\n#     find_package(verilator 4.0)\n#\n# Copyright 2003-2025 by Wilson Snyder. This program is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU\n# Lesser General Public License Version 3 or the Perl Artistic License\n# Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n#\n######################################################################\n\nset(PACKAGE_VERSION \"@PACKAGE_VERSION_NUMBER@\")\n\nif(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION)\n    set(PACKAGE_VERSION_COMPATIBLE FALSE)\nelse()\n    set(PACKAGE_VERSION_COMPATIBLE TRUE)\n    if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION)\n        set(PACKAGE_VERSION_EXACT TRUE)\n    endif()\nendif()\n"
        },
        {
          "name": "verilator-config.cmake.in",
          "type": "blob",
          "size": 17.970703125,
          "content": "######################################################################\n#\n# DESCRIPTION: CMake configuration file for Verilator\n#\n# Include it in your CMakeLists.txt using:\n#\n#     find_package(verilator)\n#\n#  This script adds a verilate function.\n#\n#     add_executable(simulator <your-c-sources>)\n#     verilate(simulator SOURCES <your-hdl-sources>)\n#\n# Copyright 2003-2025 by Wilson Snyder. This program is free software; you\n# can redistribute it and/or modify it under the terms of either the GNU\n# Lesser General Public License Version 3 or the Perl Artistic License\n# Version 2.0.\n# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0\n#\n######################################################################\n\ncmake_minimum_required(VERSION 3.13)\n\n# Prefer VERILATOR_ROOT from environment\nif(DEFINED ENV{VERILATOR_ROOT})\n    set(VERILATOR_ROOT \"$ENV{VERILATOR_ROOT}\" CACHE PATH \"VERILATOR_ROOT\")\nendif()\n\nset(VERILATOR_ROOT \"${CMAKE_CURRENT_LIST_DIR}\" CACHE PATH \"VERILATOR_ROOT\")\n\nfind_program(\n    VERILATOR_BIN\n    NAMES verilator_bin verilator_bin.exe\n    HINTS ${VERILATOR_ROOT}/bin\n    ENV VERILATOR_ROOT\n    NO_CMAKE_PATH\n    NO_CMAKE_ENVIRONMENT_PATH\n    NO_CMAKE_SYSTEM_PATH\n)\n\nif(NOT VERILATOR_ROOT)\n    message(\n        FATAL_ERROR\n        \"VERILATOR_ROOT cannot be detected. Set it to the appropriate directory (e.g. /usr/share/verilator) as an environment variable or CMake define.\"\n    )\nendif()\n\nif(NOT VERILATOR_BIN)\n    message(FATAL_ERROR \"Cannot find verilator_bin excecutable.\")\nendif()\n\nset(verilator_FOUND 1)\n\ninclude(CheckCXXSourceCompiles)\nfunction(_verilator_check_cxx_libraries LIBRARIES RESVAR)\n    # Check whether a particular link option creates a valid executable\n    set(_VERILATOR_CHECK_CXX_LINK_OPTIONS_SRC \"int main() {return 0;}\\n\")\n    set(CMAKE_REQUIRED_FLAGS)\n    set(CMAKE_REQUIRED_DEFINITIONS)\n    set(CMAKE_REQUIRED_INCLUDES)\n    set(CMAKE_REQUIRED_LINK_OPTIONS)\n    set(CMAKE_REQUIRED_LIBRARIES ${LIBRARIES})\n    set(CMAKE_REQUIRED_QUIET)\n    check_cxx_source_compiles(\n        \"${_VERILATOR_CHECK_CXX_LINK_OPTIONS_SRC}\"\n        \"${RESVAR}\"\n    )\n    set(\"${RESVAR}\" \"${${RESVAR}}\" PARENT_SCOPE)\nendfunction()\n\n# Check compiler flag support. Skip on MSVC, these are all GCC flags.\nif(NOT CMAKE_CXX_COMPILER_ID MATCHES MSVC)\n    if(NOT DEFINED VERILATOR_CFLAGS OR NOT DEFINED VERILATOR_MT_CFLAGS)\n        include(CheckCXXCompilerFlag)\n        foreach(FLAG @CFG_CXX_FLAGS_CMAKE@)\n            string(MAKE_C_IDENTIFIER ${FLAG} FLAGNAME)\n            check_cxx_compiler_flag(${FLAG} ${FLAGNAME})\n            if(${FLAGNAME})\n                list(APPEND VERILATOR_CFLAGS ${FLAG})\n            endif()\n        endforeach()\n        foreach(FLAG @CFG_LDFLAGS_THREADS_CMAKE@)\n            string(MAKE_C_IDENTIFIER ${FLAG} FLAGNAME)\n            _verilator_check_cxx_libraries(\"${FLAG}\" ${FLAGNAME})\n            if(${FLAGNAME})\n                list(APPEND VERILATOR_MT_CFLAGS ${FLAG})\n            endif()\n        endforeach()\n    endif()\nendif()\n\nif(${CMAKE_CXX_COMPILER_ID} STREQUAL \"AppleClang\")\n    add_link_options(-Wl,-U,__Z15vl_time_stamp64v,-U,__Z13sc_time_stampv)\nendif()\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_THREADED\n    BRIEF_DOCS \"Deprecated and has no effect (ignored)\"\n    FULL_DOCS \"Deprecated and has no effect (ignored)\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TRACE_THREADED\n    BRIEF_DOCS \"Verilator multithread tracing enabled\"\n    FULL_DOCS \"Verilator multithread tracing enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TIMING\n    BRIEF_DOCS \"Verilator timing enabled\"\n    FULL_DOCS \"Verilator timing enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_COVERAGE\n    BRIEF_DOCS \"Verilator coverage enabled\"\n    FULL_DOCS \"Verilator coverage enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TRACE\n    BRIEF_DOCS \"Verilator trace enabled\"\n    FULL_DOCS \"Verilator trace enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TRACE_VCD\n    BRIEF_DOCS \"Verilator VCD trace enabled\"\n    FULL_DOCS \"Verilator VCD trace enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TRACE_FST\n    BRIEF_DOCS \"Verilator FST trace enabled\"\n    FULL_DOCS \"Verilator FST trace enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_SYSTEMC\n    BRIEF_DOCS \"Verilator SystemC enabled\"\n    FULL_DOCS \"Verilator SystemC enabled\"\n)\n\ndefine_property(\n    TARGET\n    PROPERTY VERILATOR_TRACE_STRUCTS\n    BRIEF_DOCS \"Verilator trace structs enabled\"\n    FULL_DOCS \"Verilator trace structs enabled\"\n)\n\nfunction(verilate TARGET)\n    cmake_parse_arguments(\n        VERILATE\n        \"COVERAGE;TRACE;TRACE_FST;SYSTEMC;TRACE_STRUCTS\"\n        \"PREFIX;TOP_MODULE;THREADS;TRACE_THREADS;DIRECTORY\"\n        \"SOURCES;VERILATOR_ARGS;INCLUDE_DIRS;OPT_SLOW;OPT_FAST;OPT_GLOBAL\"\n        ${ARGN}\n    )\n    if(NOT VERILATE_SOURCES)\n        message(FATAL_ERROR \"Need at least one source\")\n    endif()\n\n    if(NOT VERILATE_PREFIX)\n        list(LENGTH VERILATE_SOURCES NUM_SOURCES)\n        if(${NUM_SOURCES} GREATER 1)\n            message(WARNING \"Specify PREFIX if there are multiple SOURCES\")\n        endif()\n        list(GET VERILATE_SOURCES 0 TOPSRC)\n        get_filename_component(_SRC_NAME ${TOPSRC} NAME_WE)\n        string(MAKE_C_IDENTIFIER V${_SRC_NAME} VERILATE_PREFIX)\n    endif()\n\n    if(VERILATE_TOP_MODULE)\n        list(APPEND VERILATOR_ARGS --top ${VERILATE_TOP_MODULE})\n    endif()\n\n    if(VERILATE_THREADS)\n        list(APPEND VERILATOR_ARGS --threads ${VERILATE_THREADS})\n    endif()\n\n    if(VERILATE_TRACE_THREADS)\n        list(APPEND VERILATOR_ARGS --trace-threads ${VERILATE_TRACE_THREADS})\n    endif()\n\n    if(VERILATE_COVERAGE)\n        list(APPEND VERILATOR_ARGS --coverage)\n    endif()\n\n    if(VERILATE_TRACE AND VERILATE_TRACE_FST)\n        message(FATAL_ERROR \"Cannot have both TRACE and TRACE_FST\")\n    endif()\n\n    if(VERILATE_TRACE)\n        list(APPEND VERILATOR_ARGS --trace)\n    endif()\n\n    if(VERILATE_TRACE_FST)\n        list(APPEND VERILATOR_ARGS --trace-fst)\n    endif()\n\n    if(VERILATE_SYSTEMC)\n        list(APPEND VERILATOR_ARGS --sc)\n    else()\n        list(APPEND VERILATOR_ARGS --cc)\n    endif()\n\n    if(VERILATE_TRACE_STRUCTS)\n        list(APPEND VERILATOR_ARGS --trace-structs)\n    endif()\n\n    foreach(INC ${VERILATE_INCLUDE_DIRS})\n        list(APPEND VERILATOR_ARGS -y \"${INC}\")\n    endforeach()\n\n    string(TOLOWER ${CMAKE_CXX_COMPILER_ID} COMPILER)\n    if(COMPILER STREQUAL \"appleclang\")\n        set(COMPILER clang)\n    elseif(NOT COMPILER MATCHES \"^msvc$|^clang$\")\n        set(COMPILER gcc)\n    endif()\n\n    set(OBJCACHE \"\" CACHE STRING \"Path for ccache, auto-detected if empty\")\n    option(OBJCACHE_ENABLED \"Compile Verilator with ccache\" ON)\n\n    if(OBJCACHE_ENABLED)\n        if(OBJCACHE STREQUAL \"\")\n            find_program(OBJCACHE_PATH ccache)\n            if(OBJCACHE_PATH STREQUAL \"OBJCACHE_PATH-NOTFOUND\")\n                set(OBJCACHE_PATH \"\")\n            endif()\n        else()\n            set(OBJCACHE_PATH \"${OBJCACHE}\")\n        endif()\n        if(NOT OBJCACHE_PATH STREQUAL \"\")\n            execute_process(\n                COMMAND \"${OBJCACHE_PATH}\" --version\n                OUTPUT_VARIABLE objcache_version\n            )\n            string(\n                REGEX MATCH\n                \"[^\\n\\r]+\"\n                objcache_version\n                \"${objcache_version}\"\n            )\n            message(\n                STATUS\n                \"Found ccache: ${OBJCACHE_PATH} (\\\"${objcache_version}\\\")\"\n            )\n            set(CMAKE_CXX_COMPILER_LAUNCHER \"${OBJCACHE_PATH}\")\n        endif()\n    endif()\n\n    get_target_property(BINARY_DIR \"${TARGET}\" BINARY_DIR)\n    get_target_property(TARGET_NAME \"${TARGET}\" NAME)\n    set(VDIR\n        \"${BINARY_DIR}/CMakeFiles/${TARGET_NAME}.dir/${VERILATE_PREFIX}.dir\"\n    )\n\n    if(VERILATE_DIRECTORY)\n        set(VDIR \"${VERILATE_DIRECTORY}\")\n    endif()\n\n    file(MAKE_DIRECTORY ${VDIR})\n\n    set(VERILATOR_COMMAND\n        \"${CMAKE_COMMAND}\"\n        -E\n        env\n        \"VERILATOR_ROOT=${VERILATOR_ROOT}\"\n        \"${VERILATOR_BIN}\"\n        --compiler\n        ${COMPILER}\n        --prefix\n        ${VERILATE_PREFIX}\n        --Mdir\n        ${VDIR}\n        --make\n        cmake\n        ${VERILATOR_ARGS}\n        ${VERILATE_VERILATOR_ARGS}\n        ${VERILATE_SOURCES}\n    )\n\n    set(VARGS_FILE \"${VDIR}/verilator_args.txt\")\n    set(VCMAKE \"${VDIR}/${VERILATE_PREFIX}.cmake\")\n    set(VCMAKE_COPY \"${VDIR}/${VERILATE_PREFIX}_copy.cmake\")\n\n    if(NOT EXISTS \"${VARGS_FILE}\" OR NOT EXISTS \"${VCMAKE_COPY}\")\n        set(VERILATOR_OUTDATED ON)\n    else()\n        file(READ \"${VARGS_FILE}\" PREVIOUS_VERILATOR_COMMAND)\n        if(NOT VERILATOR_COMMAND STREQUAL PREVIOUS_VERILATOR_COMMAND)\n            set(VERILATOR_OUTDATED ON)\n        endif()\n    endif()\n\n    if(VERILATOR_OUTDATED)\n        message(STATUS \"Executing Verilator...\")\n        execute_process(\n            COMMAND ${VERILATOR_COMMAND}\n            WORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n            RESULT_VARIABLE _VERILATOR_RC\n            OUTPUT_VARIABLE _VERILATOR_OUTPUT\n            ERROR_VARIABLE _VERILATOR_OUTPUT\n        )\n        if(_VERILATOR_RC)\n            string(\n                REPLACE\n                \";\"\n                \" \"\n                VERILATOR_COMMAND_READABLE\n                \"${VERILATOR_COMMAND}\"\n            )\n            message(\"Verilator command: \\\"${VERILATOR_COMMAND_READABLE}\\\"\")\n            message(\"Output:\\n${_VERILATOR_OUTPUT}\")\n            message(\n                FATAL_ERROR\n                \"Verilator command failed (return code=${_VERILATOR_RC})\"\n            )\n        endif()\n        execute_process(\n            COMMAND \"${CMAKE_COMMAND}\" -E copy \"${VCMAKE}\" \"${VCMAKE_COPY}\"\n        )\n    endif()\n    file(WRITE \"${VARGS_FILE}\" \"${VERILATOR_COMMAND}\")\n\n    include(\"${VCMAKE_COPY}\")\n\n    set(GENERATED_C_SOURCES\n        ${${VERILATE_PREFIX}_CLASSES_FAST}\n        ${${VERILATE_PREFIX}_CLASSES_SLOW}\n        ${${VERILATE_PREFIX}_SUPPORT_FAST}\n        ${${VERILATE_PREFIX}_SUPPORT_SLOW}\n    )\n    # No need for .h's as the .cpp will get written same time\n    set(GENERATED_SOURCES ${GENERATED_C_SOURCES})\n\n    add_custom_command(\n        OUTPUT ${GENERATED_SOURCES} \"${VCMAKE}\"\n        COMMAND ${VERILATOR_COMMAND}\n        WORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n        DEPENDS \"${VERILATOR_BIN}\" ${${VERILATE_PREFIX}_DEPS}\n        VERBATIM\n    )\n    # Reconfigure if file list has changed\n    # (check contents rather than modified time to avoid unnecessary reconfiguration)\n    add_custom_command(\n        OUTPUT \"${VCMAKE_COPY}\"\n        COMMAND\n            \"${CMAKE_COMMAND}\" -E copy_if_different \"${VCMAKE}\" \"${VCMAKE_COPY}\"\n        DEPENDS \"${VCMAKE}\"\n        VERBATIM\n    )\n\n    if(${VERILATE_PREFIX}_COVERAGE)\n        # If any verilate() call specifies COVERAGE, define VM_COVERAGE in the final build\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_COVERAGE ON)\n    endif()\n\n    if(${VERILATE_PREFIX}_TRACE_VCD)\n        # If any verilate() call specifies TRACE, define VM_TRACE in the final build\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_TRACE ON)\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_TRACE_VCD ON)\n    endif()\n\n    if(${VERILATE_PREFIX}_TRACE_FST)\n        # If any verilate() call specifies TRACE_FST, define VM_TRACE_FST in the final build\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_TRACE ON)\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_TRACE_FST ON)\n    endif()\n\n    if(${VERILATE_PREFIX}_SC)\n        # If any verilate() call specifies SYSTEMC, define VM_SC in the final build\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_SYSTEMC ON)\n    endif()\n\n    if(${VERILATE_PREFIX}_TRACE_STRUCTS)\n        set_property(TARGET ${TARGET} PROPERTY VERILATOR_TRACE_STRUCTS ON)\n    endif()\n\n    # Add the compile flags only on Verilated sources\n    target_include_directories(${TARGET} PUBLIC ${VDIR})\n    target_sources(\n        ${TARGET}\n        PRIVATE\n            ${GENERATED_SOURCES}\n            \"${VCMAKE_COPY}\"\n            ${${VERILATE_PREFIX}_GLOBAL}\n            ${${VERILATE_PREFIX}_USER_CLASSES}\n    )\n    foreach(_VSOURCE ${VERILATE_SOURCES} ${${VERILATE_PREFIX}_DEPS})\n        get_filename_component(_VSOURCE \"${_VSOURCE}\" ABSOLUTE BASE_DIR)\n        list(APPEND VHD_SOURCES \"${_VSOURCE}\")\n    endforeach()\n    target_sources(${TARGET} PRIVATE ${VHD_SOURCES})\n\n    # Add the compile flags only on Verilated sources\n    foreach(\n        VSLOW\n        ${${VERILATE_PREFIX}_CLASSES_SLOW}\n        ${${VERILATE_PREFIX}_SUPPORT_SLOW}\n    )\n        foreach(OPT_SLOW ${VERILATE_OPT_SLOW} ${${VERILATE_PREFIX}_USER_CFLAGS})\n            set_property(\n                SOURCE \"${VSLOW}\"\n                APPEND_STRING\n                PROPERTY COMPILE_FLAGS \" ${OPT_SLOW}\"\n            )\n        endforeach()\n    endforeach()\n    foreach(\n        VFAST\n        ${${VERILATE_PREFIX}_CLASSES_FAST}\n        ${${VERILATE_PREFIX}_SUPPORT_FAST}\n    )\n        foreach(OPT_FAST ${VERILATE_OPT_FAST} ${${VERILATE_PREFIX}_USER_CFLAGS})\n            set_property(\n                SOURCE \"${VFAST}\"\n                APPEND_STRING\n                PROPERTY COMPILE_FLAGS \" ${OPT_FAST}\"\n            )\n        endforeach()\n    endforeach()\n    foreach(VGLOBAL ${${VERILATE_PREFIX}_GLOBAL})\n        foreach(\n            OPT_GLOBAL\n            ${VERILATE_OPT_GLOBAL}\n            ${${VERILATE_PREFIX}_USER_CFLAGS}\n        )\n            set_property(\n                SOURCE \"${VGLOBAL}\"\n                APPEND_STRING\n                PROPERTY COMPILE_FLAGS \" ${OPT_GLOBAL}\"\n            )\n        endforeach()\n    endforeach()\n\n    target_include_directories(\n        ${TARGET}\n        PUBLIC \"${VERILATOR_ROOT}/include\" \"${VERILATOR_ROOT}/include/vltstd\"\n    )\n    target_compile_definitions(\n        ${TARGET}\n        PRIVATE\n            VM_COVERAGE=$<BOOL:$<TARGET_PROPERTY:VERILATOR_COVERAGE>>\n            VM_SC=$<BOOL:$<TARGET_PROPERTY:VERILATOR_SYSTEMC>>\n            VM_TRACE=$<BOOL:$<TARGET_PROPERTY:VERILATOR_TRACE>>\n            VM_TRACE_VCD=$<BOOL:$<TARGET_PROPERTY:VERILATOR_TRACE_VCD>>\n            VM_TRACE_FST=$<BOOL:$<TARGET_PROPERTY:VERILATOR_TRACE_FST>>\n    )\n\n    target_link_libraries(${TARGET} PUBLIC ${${VERILATE_PREFIX}_USER_LDLIBS})\n\n    target_link_libraries(${TARGET} PUBLIC ${VERILATOR_MT_CFLAGS})\n\n    target_compile_features(${TARGET} PRIVATE cxx_std_11)\n\n    if(${VERILATE_PREFIX}_TIMING)\n        check_cxx_compiler_flag(-fcoroutines-ts COROUTINES_TS_FLAG)\n        target_compile_options(\n            ${TARGET}\n            PRIVATE\n                $<IF:$<BOOL:${COROUTINES_TS_FLAG}>,-fcoroutines-ts,-fcoroutines>\n        )\n    endif()\nendfunction()\n\nfunction(_verilator_find_systemc)\n    if(NOT TARGET Verilator::systemc)\n        # Find SystemC include file \"systemc.h\" in the following order:\n        # 1. SYSTEMC_INCLUDE (environment) variable\n        # 2. SYSTEMC_ROOT (environment) variable\n        # 3. SYSTEMC (environment) variable\n        # 4. Use CMake module provided by SystemC installation\n        #    (eventually requires CMAKE_PREFIX_PATH set)\n\n        find_path(\n            SYSTEMC_INCLUDEDIR\n            NAMES systemc.h\n            HINTS \"${SYSTEMC_INCLUDE}   \"\n            ENV SYSTEMC_INCLUDE\n        )\n        find_path(\n            SYSTEMC_INCLUDEDIR\n            NAMES systemc.h\n            HINTS \"${SYSTEMC_ROOT}\"\n            ENV SYSTEMC_ROOT\n            PATH_SUFFIXES include\n        )\n        find_path(\n            SYSTEMC_INCLUDEDIR\n            NAMES systemc.h\n            HINTS \"${SYSTEMC}\"\n            ENV SYSTEMC\n            PATH_SUFFIXES include\n        )\n\n        # Find SystemC library in the following order:\n        # 1. SYSTEMC_LIBDIR (environment) variable\n        # 2. SYSTEMC_ROOT (environment) variable\n        # 3. SYSTEMC (environment) variable\n        # 4. Use CMake module provided by SystemC installation\n        #    (eventually requires CMAKE_PREFIX_PATH set)\n\n        # Find SystemC using include and library paths\n        find_library(\n            SYSTEMC_LIBRARY\n            NAMES systemc\n            HINTS \"${SYSTEMC_LIBDIR}\"\n            ENV SYSTEMC_LIBDIR\n        )\n        find_library(\n            SYSTEMC_LIBRARY\n            NAMES systemc\n            HINTS \"${SYSTEMC_ROOT}\"\n            ENV SYSTEMC_ROOT\n            PATH_SUFFIXES lib\n        )\n        find_library(\n            SYSTEMC_LIBRARY\n            NAMES systemc\n            HINTS \"${SYSTEMC}\"\n            ENV SYSTEMC\n            PATH_SUFFIXES lib\n        )\n\n        if(SYSTEMC_INCLUDEDIR AND SYSTEMC_LIBRARY)\n            add_library(Verilator::systemc INTERFACE IMPORTED)\n            set_target_properties(\n                Verilator::systemc\n                PROPERTIES\n                    INTERFACE_INCLUDE_DIRECTORIES \"${SYSTEMC_INCLUDEDIR}\"\n                    INTERFACE_LINK_LIBRARIES \"${SYSTEMC_LIBRARY}\"\n            )\n            return()\n        endif()\n\n        find_package(SystemCLanguage QUIET)\n        if(SystemCLanguage_FOUND)\n            add_library(Verilator::systemc INTERFACE IMPORTED)\n            set_target_properties(\n                Verilator::systemc\n                PROPERTIES INTERFACE_LINK_LIBRARIES \"SystemC::systemc\"\n            )\n            return()\n        endif()\n\n        message(\n            \"SystemC not found. This can be fixed by doing either of the following steps:\"\n        )\n        message(\n            \"- set the SYSTEMC_INCLUDE and SYSTEMC_LIBDIR (environment) variables; or\"\n        )\n        message(\"- set SYSTEMC_ROOT (environment) variable; or\")\n        message(\"- set SYSTEMC (environment) variable; or\")\n        message(\n            \"- use the CMake module of your SystemC installation (may require CMAKE_PREFIX_PATH)\"\n        )\n        message(FATAL_ERROR \"SystemC not found\")\n    endif()\nendfunction()\n\nfunction(verilator_link_systemc TARGET)\n    _verilator_find_systemc()\n    target_link_libraries(\"${TARGET}\" PUBLIC Verilator::systemc)\n    target_compile_options(\n        ${TARGET}\n        PRIVATE $ENV{SYSTEMC_CXX_FLAGS} ${SYSTEMC_CXX_FLAGS}\n    )\nendfunction()\n\nfunction(verilator_generate_key OUTPUT_VARIABLE)\n    execute_process(\n        COMMAND ${VERILATOR_BIN} --generate-key\n        OUTPUT_VARIABLE KEY_VAL\n        RESULT_VARIABLE KEY_RET\n    )\n    if(KEY_RET)\n        message(FATAL_ERROR \"verilator --generate-key failed\")\n    endif()\n    string(STRIP ${KEY_VAL} KEY_VAL)\n    set(${OUTPUT_VARIABLE} ${KEY_VAL} PARENT_SCOPE)\nendfunction()\n"
        },
        {
          "name": "verilator.pc.in",
          "type": "blob",
          "size": 0.291015625,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\ndatarootdir=@datarootdir@\nincludedir=@pkgdatadir@/include\n\nName: verilator\nDescription: fast free Verilog simulator\nURL: https://verilator.org\nVersion: @PACKAGE_VERSION_NUMBER@\nRequires:\nLibs:\nCflags: -I${includedir} -I${includedir}/vltstd\n"
        }
      ]
    }
  ]
}