{
  "metadata": {
    "timestamp": 1736565795383,
    "page": 728,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nRF24/RF24",
      "stars": 2261,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.4814453125,
          "content": "# See options listed at https://releases.llvm.org/12.0.1/tools/clang/docs/ClangFormatStyleOptions.html\n---\nLanguage: Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: Consecutive\nAlignConsecutiveAssignments: None\nAlignConsecutiveBitFields: None\nAlignConsecutiveDeclarations: None\nAlignEscapedNewlines: Left\nAlignOperands: DontAlign\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortEnumsOnASingleLine: false\nAllowShortBlocksOnASingleLine: Empty\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nAttributeMacros: [\"__capability\", \"__output\", \"__ununsed\"]\nBinPackArguments: true\nBinPackParameters: true\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel: false\n  AfterClass: true\n  AfterControlStatement: MultiLine\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: false\n  AfterStruct: true\n  AfterUnion: true\n  AfterExternBlock: false\n  BeforeCatch: true\n  BeforeElse: true\n  BeforeLambdaBody: false\n  BeforeWhile: false\n  IndentBraces: false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeConceptDeclarations: true\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakStringLiterals: true\nColumnLimit: 0\n# CommentPragmas are a regex pattern indicating the comment is not be touched by the formatter\nCommentPragmas: \"^ Include gaurd .*\"\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDeriveLineEnding: false\nDerivePointerAlignment: false\nDisableFormat: false\nEmptyLineBeforeAccessModifier: Always\nEmptyLineAfterAccessModifier: Leave\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nIncludeBlocks: Preserve\nIncludeCategories:\n  - Regex: '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority: 2\n    SortPriority: 0\n    CaseSensitive: false\n  - Regex: '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority: 3\n    SortPriority: 0\n    CaseSensitive: false\n  - Regex: \".*\"\n    Priority: 1\n    SortPriority: 0\n    CaseSensitive: false\nIncludeIsMainRegex: \"(Test)?$\"\nIncludeIsMainSourceRegex: \"\"\nIndentAccessModifiers: false\nIndentCaseLabels: true\nIndentCaseBlocks: false\nIndentGotoLabels: false\nIndentPPDirectives: BeforeHash\nIndentExternBlock: AfterExternBlock\nIndentRequires: false\nIndentWidth: 4\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: None\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: \"\"\nMacroBlockEnd: \"\"\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: Inner\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPenaltyIndentedWhitespace: 0\nPointerAlignment: Left\nReferenceAlignment: Pointer\nReflowComments: true\nSpacesInLineCommentPrefix:\n  Maximum: -1\n  Minimum: 0\nShortNamespaceLines: 0\n# Sort**** is about sorting include/using statements alphabetically\nSortIncludes: false\nSortUsingDeclarations: false\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nStandard: c++11\nStatementAttributeLikeMacros: [emit]\nStatementMacros: [Q_UNUSED, QT_REQUIRE_VERSION]\nTabWidth: 4\nUseCRLF: false\nUseTab: Never\nWhitespaceSensitiveMacros:\n  - PRIPSTR\n  - STRINGIZE\n  - PP_STRINGIZE\n  - BOOST_PP_STRINGIZE\n  - NS_SWIFT_NAME\n  - CF_SWIFT_NAME\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 10.3974609375,
          "content": "---\nChecks:          'clang-diagnostic-*,clang-analyzer-*,bugprone-*,-bugprone-easily-swappable-parameters,clang-diagnostics-*,clang-analyzer-*'\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nFormatStyle:     file\nUser:            brendan\nCheckOptions:\n  - key:             bugprone-string-constructor.LargeLengthThreshold\n    value:           '8388608'\n  - key:             modernize-replace-auto-ptr.IncludeStyle\n    value:           llvm\n  - key:             bugprone-reserved-identifier.Invert\n    value:           'false'\n  - key:             bugprone-implicit-widening-of-multiplication-result.UseCXXStaticCastsInCppSources\n    value:           'true'\n  - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField\n    value:           'false'\n  - key:             bugprone-unused-return-value.CheckedFunctions\n    value:           '::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty;::std::back_inserter;::std::distance;::std::find;::std::find_if;::std::inserter;::std::lower_bound;::std::make_pair;::std::map::count;::std::map::find;::std::map::lower_bound;::std::multimap::equal_range;::std::multimap::upper_bound;::std::set::count;::std::set::find;::std::setfill;::std::setprecision;::std::setw;::std::upper_bound;::std::vector::at;::bsearch;::ferror;::feof;::isalnum;::isalpha;::isblank;::iscntrl;::isdigit;::isgraph;::islower;::isprint;::ispunct;::isspace;::isupper;::iswalnum;::iswprint;::iswspace;::isxdigit;::memchr;::memcmp;::strcmp;::strcoll;::strncmp;::strpbrk;::strrchr;::strspn;::strstr;::wcscmp;::access;::bind;::connect;::difftime;::dlsym;::fnmatch;::getaddrinfo;::getopt;::htonl;::htons;::iconv_open;::inet_addr;::isascii;::isatty;::mmap;::newlocale;::openat;::pathconf;::pthread_equal;::pthread_getspecific;::pthread_mutex_trylock;::readdir;::readlink;::recvmsg;::regexec;::scandir;::semget;::setjmp;::shm_open;::shmget;::sigismember;::strcasecmp;::strsignal;::ttyname'\n  - key:             cert-dcl16-c.NewSuffixes\n    value:           'L;LL;LU;LLU'\n  - key:             bugprone-exception-escape.FunctionsThatShouldNotThrow\n    value:           ''\n  - key:             modernize-loop-convert.MaxCopySize\n    value:           '16'\n  - key:             bugprone-narrowing-conversions.WarnOnFloatingPointNarrowingConversion\n    value:           'true'\n  - key:             bugprone-signed-char-misuse.CharTypdefsToIgnore\n    value:           ''\n  - key:             bugprone-argument-comment.CommentStringLiterals\n    value:           '0'\n  - key:             bugprone-narrowing-conversions.PedanticMode\n    value:           'false'\n  - key:             bugprone-sizeof-expression.WarnOnSizeOfConstant\n    value:           'true'\n  - key:             bugprone-assert-side-effect.IgnoredFunctions\n    value:           __builtin_expect\n  - key:             bugprone-argument-comment.CommentBoolLiterals\n    value:           '0'\n  - key:             bugprone-argument-comment.CommentUserDefinedLiterals\n    value:           '0'\n  - key:             cert-str34-c.DiagnoseSignedUnsignedCharComparisons\n    value:           'false'\n  - key:             bugprone-narrowing-conversions.WarnWithinTemplateInstantiation\n    value:           'false'\n  - key:             cert-err33-c.CheckedFunctions\n    value:           '::aligned_alloc;::asctime_s;::at_quick_exit;::atexit;::bsearch;::bsearch_s;::btowc;::c16rtomb;::c32rtomb;::calloc;::clock;::cnd_broadcast;::cnd_init;::cnd_signal;::cnd_timedwait;::cnd_wait;::ctime_s;::fclose;::fflush;::fgetc;::fgetpos;::fgets;::fgetwc;::fopen;::fopen_s;::fprintf;::fprintf_s;::fputc;::fputs;::fputwc;::fputws;::fread;::freopen;::freopen_s;::fscanf;::fscanf_s;::fseek;::fsetpos;::ftell;::fwprintf;::fwprintf_s;::fwrite;::fwscanf;::fwscanf_s;::getc;::getchar;::getenv;::getenv_s;::gets_s;::getwc;::getwchar;::gmtime;::gmtime_s;::localtime;::localtime_s;::malloc;::mbrtoc16;::mbrtoc32;::mbsrtowcs;::mbsrtowcs_s;::mbstowcs;::mbstowcs_s;::memchr;::mktime;::mtx_init;::mtx_lock;::mtx_timedlock;::mtx_trylock;::mtx_unlock;::printf_s;::putc;::putwc;::raise;::realloc;::remove;::rename;::scanf;::scanf_s;::setlocale;::setvbuf;::signal;::snprintf;::snprintf_s;::sprintf;::sprintf_s;::sscanf;::sscanf_s;::strchr;::strerror_s;::strftime;::strpbrk;::strrchr;::strstr;::strtod;::strtof;::strtoimax;::strtok;::strtok_s;::strtol;::strtold;::strtoll;::strtoul;::strtoull;::strtoumax;::strxfrm;::swprintf;::swprintf_s;::swscanf;::swscanf_s;::thrd_create;::thrd_detach;::thrd_join;::thrd_sleep;::time;::timespec_get;::tmpfile;::tmpfile_s;::tmpnam;::tmpnam_s;::tss_create;::tss_get;::tss_set;::ungetc;::ungetwc;::vfprintf;::vfprintf_s;::vfscanf;::vfscanf_s;::vfwprintf;::vfwprintf_s;::vfwscanf;::vfwscanf_s;::vprintf_s;::vscanf;::vscanf_s;::vsnprintf;::vsnprintf_s;::vsprintf;::vsprintf_s;::vsscanf;::vsscanf_s;::vswprintf;::vswprintf_s;::vswscanf;::vswscanf_s;::vwprintf_s;::vwscanf;::vwscanf_s;::wcrtomb;::wcschr;::wcsftime;::wcspbrk;::wcsrchr;::wcsrtombs;::wcsrtombs_s;::wcsstr;::wcstod;::wcstof;::wcstoimax;::wcstok;::wcstok_s;::wcstol;::wcstold;::wcstoll;::wcstombs;::wcstombs_s;::wcstoul;::wcstoull;::wcstoumax;::wcsxfrm;::wctob;::wctrans;::wctype;::wmemchr;::wprintf_s;::wscanf;::wscanf_s;'\n  - key:             bugprone-suspicious-string-compare.WarnOnLogicalNotComparison\n    value:           'false'\n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '1'\n  - key:             bugprone-reserved-identifier.AllowedIdentifiers\n    value:           ''\n  - key:             bugprone-signal-handler.AsyncSafeFunctionSet\n    value:           POSIX\n  - key:             bugprone-suspicious-string-compare.WarnOnImplicitComparison\n    value:           'true'\n  - key:             bugprone-argument-comment.CommentNullPtrs\n    value:           '0'\n  - key:             bugprone-narrowing-conversions.WarnOnIntegerToFloatingPointNarrowingConversion\n    value:           'true'\n  - key:             bugprone-argument-comment.StrictMode\n    value:           '0'\n  - key:             bugprone-misplaced-widening-cast.CheckImplicitCasts\n    value:           'false'\n  - key:             bugprone-suspicious-missing-comma.RatioThreshold\n    value:           '0.200000'\n  - key:             modernize-loop-convert.MinConfidence\n    value:           reasonable\n  - key:             bugprone-unhandled-self-assignment.WarnOnlyIfThisHasSuspiciousField\n    value:           'true'\n  - key:             google-readability-namespace-comments.ShortNamespaceLines\n    value:           '10'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n  - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value:           'true'\n  - key:             bugprone-argument-comment.IgnoreSingleArgument\n    value:           '0'\n  - key:             bugprone-suspicious-string-compare.StringCompareLikeFunctions\n    value:           ''\n  - key:             bugprone-narrowing-conversions.WarnOnEquivalentBitWidth\n    value:           'true'\n  - key:             bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression\n    value:           'false'\n  - key:             bugprone-assert-side-effect.CheckFunctionCalls\n    value:           'false'\n  - key:             bugprone-narrowing-conversions.IgnoreConversionFromTypes\n    value:           ''\n  - key:             bugprone-string-constructor.StringNames\n    value:           '::std::basic_string;::std::basic_string_view'\n  - key:             bugprone-assert-side-effect.AssertMacros\n    value:           assert,NSAssert,NSCAssert\n  - key:             bugprone-exception-escape.IgnoredExceptions\n    value:           ''\n  - key:             bugprone-signed-char-misuse.DiagnoseSignedUnsignedCharComparisons\n    value:           'true'\n  - key:             llvm-qualified-auto.AddConstToQualified\n    value:           'false'\n  - key:             bugprone-narrowing-conversions.WarnOnIntegerNarrowingConversion\n    value:           'true'\n  - key:             modernize-loop-convert.NamingStyle\n    value:           CamelCase\n  - key:             bugprone-suspicious-include.ImplementationFileExtensions\n    value:           'c;cc;cpp;cxx'\n  - key:             bugprone-suspicious-missing-comma.SizeThreshold\n    value:           '5'\n  - key:             bugprone-suspicious-include.HeaderFileExtensions\n    value:           ';h;hh;hpp;hxx'\n  - key:             google-readability-function-size.StatementThreshold\n    value:           '800'\n  - key:             llvm-else-after-return.WarnOnConditionVariables\n    value:           'false'\n  - key:             bugprone-argument-comment.CommentCharacterLiterals\n    value:           '0'\n  - key:             bugprone-argument-comment.CommentIntegerLiterals\n    value:           '0'\n  - key:             bugprone-stringview-nullptr.IncludeStyle\n    value:           llvm\n  - key:             bugprone-sizeof-expression.WarnOnSizeOfCompareToConstant\n    value:           'true'\n  - key:             modernize-pass-by-value.IncludeStyle\n    value:           llvm\n  - key:             bugprone-reserved-identifier.AggressiveDependentMemberLookup\n    value:           'false'\n  - key:             bugprone-sizeof-expression.WarnOnSizeOfThis\n    value:           'true'\n  - key:             bugprone-string-constructor.WarnOnLargeLength\n    value:           'true'\n  - key:             bugprone-too-small-loop-variable.MagnitudeBitsUpperLimit\n    value:           '16'\n  - key:             bugprone-argument-comment.CommentFloatLiterals\n    value:           '0'\n  - key:             modernize-use-nullptr.NullMacros\n    value:           'NULL'\n  - key:             bugprone-dangling-handle.HandleClasses\n    value:           'std::basic_string_view;std::experimental::basic_string_view'\n  - key:             bugprone-dynamic-static-initializers.HeaderFileExtensions\n    value:           ';h;hh;hpp;hxx'\n  - key:             bugprone-suspicious-enum-usage.StrictMode\n    value:           'false'\n  - key:             bugprone-implicit-widening-of-multiplication-result.IncludeStyle\n    value:           llvm\n  - key:             bugprone-suspicious-missing-comma.MaxConcatenatedTokens\n    value:           '5'\n  - key:             bugprone-implicit-widening-of-multiplication-result.UseCXXHeadersInCppSources\n    value:           'true'\n  - key:             llvm-else-after-return.WarnOnUnfixable\n    value:           'false'\n  - key:             bugprone-not-null-terminated-result.WantToUseSafeFunctions\n    value:           'true'\n...\n\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3193359375,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files you want to always be normalized and converted\n# to native line endings on checkout.\n*.py text eol=lf\n*.rst text eol=lf\n*.sh text eol=lf\n*.h text eol=lf\n*.cpp text eol=lf\n*.c text eol=lf\nconfigure text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7900390625,
          "content": "*.bak\n*.o\n.*.swp\n*.orig\n.swp\noutput/\nojam/\nout/\n16000000/\n8000000/\nout_native/\nversion.h\nSession.vim\n*.so\n*.so.*\n*.dylib\n*.dylib.*\n.DS_Store\nMakefile.inc\nutility/includes.h\n!examples_linux/\nexamples_linux/*\n!examples_linux/**/\n!examples_linux/*.cpp\n!examples_linux/*.py\n!examples_linux/**/*.cpp\n!examples_linux/Makefile\n!examples_linux/**/Makefile\n!examples_linux/CMakeLists.txt\n.directory\n.idea\ndocs/html/\ndocs/latex/\ndocs/*/xml/\ndocs/_build/\ndoxygenAction\n.vscode/\n__pycache__/\n*env\n*.pyc\n*.egg*\nbuild/\n*CMakeUserPresets*.json\n*.tar.gz\n\n# Cmake build-in-source generated stuff\nCMakeCache.txt\nCPackConfig.cmake\nCPackSourceConfig.cmake\nCMakeFiles\nDEBIAN\ncmake_install.cmake\ncompile_commands.json\nutility/Makefile\n# Makefile is modified when `cmake .` is run\n# Makefile # preserve old/traditional build system\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.126953125,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nbuild:\n  os: \"ubuntu-22.04\"\n  apt_packages:\n    - libclang1-12\n    - libclang-cpp12\n  tools:\n    python: \"3\"\n  commands:\n    # Install doxygen from source distributions (conda forge does not keep up-to-date doxygen releases)\n    - >\n      DOXYGEN_VERSION=\"1.12.0\" &&\n      mkdir .doxygen && cd .doxygen &&\n      echo $(pwd) &&\n      echo \"https://sourceforge.net/projects/doxygen/files/rel-$DOXYGEN_VERSION/doxygen-$DOXYGEN_VERSION.linux.bin.tar.gz\" &&\n      curl -L https://sourceforge.net/projects/doxygen/files/rel-$DOXYGEN_VERSION/doxygen-$DOXYGEN_VERSION.linux.bin.tar.gz > doxygen.tar.gz &&\n      gunzip doxygen.tar.gz &&\n      tar xf doxygen.tar &&\n      mv doxygen-$DOXYGEN_VERSION/bin/doxygen ./\n    # get lib version & overwrite Doxyfile values\n    - python3 .github/doxygen.py\n    # run doxygen\n    - cd docs && ../.doxygen/doxygen\n    # copy output to RTD output path for HTML files\n    - ls -R docs/html/\n    - mkdir -p ${READTHEDOCS_OUTPUT}\n    - mv docs/html/ \"${READTHEDOCS_OUTPUT}\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 140.8515625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n<!-- markdownlint-disable MD024 -->\n\n## [1.4.11] - 2025-01-10\n\n### <!-- 1 --> 🚀 Added\n\n- Use enum to return precise FIFO state by \\@2bndy5 in [#1009](https://github.com/nRF24/RF24/pull/1009)\n- Make `available(pipe)` depend on `available(void)` by \\@2bndy5 in [#1007](https://github.com/nRF24/RF24/pull/1007)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fixes for STM32 by \\@2bndy5 in [#1011](https://github.com/nRF24/RF24/pull/1011)\n- Init `failureDetected` by \\@2bndy5 in [#1016](https://github.com/nRF24/RF24/pull/1016)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Adjustments to CHANGELOG by \\@2bndy5 in [`8aa7103`](https://github.com/nRF24/RF24/commit/8aa71035ae3dd10de35865a894082f10a9c51027)\n- Change comment in example by \\@2bndy5 in [`80e7f13`](https://github.com/nRF24/RF24/commit/80e7f137ae4caf0df4889b5499c22857019a328a)\n\n[1.4.11]: https://github.com/nRF24/RF24/compare/v1.4.10...v1.4.11\n\nFull commit diff: [`v1.4.10...v1.4.11`][1.4.11]\n\n## [1.4.10] - 2024-10-06\n\n### <!-- 1 --> 🚀 Added\n\n- Add ebyte manual for ML01DP5 to datasheets by \\@2bndy5 in [#996](https://github.com/nRF24/RF24/pull/996)\n- Add pyproject.toml and update docs by \\@2bndy5 in [#1001](https://github.com/nRF24/RF24/pull/1001)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove useless `ce()` call by \\@2bndy5 in [#987](https://github.com/nRF24/RF24/pull/987)\n- Remove sphinx sources and update RTD config by \\@2bndy5 in [#1003](https://github.com/nRF24/RF24/pull/1003)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix doc typo by \\@2bndy5 in [`81348ad`](https://github.com/nRF24/RF24/commit/81348ad9b100abf252de6f287a5855c18c0c9cc8)\n- Fix spelling by \\@2bndy5 in [#998](https://github.com/nRF24/RF24/pull/998)\n- Fix some linting errors noted by clang-tidy by \\@2bndy5 in [#999](https://github.com/nRF24/RF24/pull/999)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Change SERIAL_DEBUG into RF24_DEBUG by \\@2bndy5 in [#981](https://github.com/nRF24/RF24/pull/981)\n- Update py examples' comment about pin numbers by \\@2bndy5 in [`2344282`](https://github.com/nRF24/RF24/commit/234428209ae9cc90d38a2288c2d5645a7ead4cef)\n- Update doxygen CSS by \\@2bndy5 in [#982](https://github.com/nRF24/RF24/pull/982)\n- Separate 2 problems' answers in COMMON_ISSUES.md by \\@2bndy5 in [#984](https://github.com/nRF24/RF24/pull/984)\n- Migrate issue templates into forms by \\@2bndy5 in [#985](https://github.com/nRF24/RF24/pull/985)\n- Refactor some SPI transactions by \\@2bndy5 in [#988](https://github.com/nRF24/RF24/pull/988)\n- Bump version to v1.4.10 by \\@2bndy5 in [`5bb22e2`](https://github.com/nRF24/RF24/commit/5bb22e2dbab31dedd677defc0007c2f0e7cd7f11)\n\n[1.4.10]: https://github.com/nRF24/RF24/compare/v1.4.9...v1.4.10\n\nFull commit diff: [`v1.4.9...v1.4.10`][1.4.10]\n\n## [1.4.9] - 2024-06-11\n\n### <!-- 1 --> 🚀 Added\n\n- Add delay to manualAcknowledgements example by \\@TMRh20 in [#953](https://github.com/nRF24/RF24/pull/953)\n- Separate ISR handling from IRQ processing by \\@2bndy5 in [#956](https://github.com/nRF24/RF24/pull/956)\n- Promiscuous scanners by \\@2bndy5 in [#955](https://github.com/nRF24/RF24/pull/955)\n- Update SPIDEV driver for Character Device v2 ABI; cache FDs by \\@2bndy5 in [#959](https://github.com/nRF24/RF24/pull/959)\n- IRQ support using Linux kernel Character Device + Posix threads by \\@2bndy5 in [#961](https://github.com/nRF24/RF24/pull/961)\n- Add link to RF24G library by \\@TMRh20 in [#964](https://github.com/nRF24/RF24/pull/964)\n- Revise MRAA's GPIO implementation by \\@2bndy5 in [#966](https://github.com/nRF24/RF24/pull/966)\n- Update python wrapper/examples/doc by \\@2bndy5 in [#967](https://github.com/nRF24/RF24/pull/967)\n\n### <!-- 2 --> 🚫 Deprecated\n\n- Update linux installer docs by \\@TMRh20 in [#957](https://github.com/nRF24/RF24/pull/957)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Wrap MRAA lib's `Gpio::isr()` for IRQ support by \\@2bndy5 in [#970](https://github.com/nRF24/RF24/pull/970)\n- Disable auto-detect driver and default to SPIDEV by \\@2bndy5 in [#973](https://github.com/nRF24/RF24/pull/973)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- GPIO changes (RPi5 support) by \\@TMRh20 in [#942](https://github.com/nRF24/RF24/pull/942)\n- Fix for SPIDEV & MRAA: delayMicroseconds() by \\@TMRh20 in [#952](https://github.com/nRF24/RF24/pull/952)\n- Fix for pigpio delayMicroseconds by \\@TMRh20 in [#954](https://github.com/nRF24/RF24/pull/954)\n- Fix scanner.py; draw 1 space (not 2) after channel label by \\@2bndy5 in [`9d0aa8d`](https://github.com/nRF24/RF24/commit/9d0aa8d3b0f46a99105d15e0ef7e3284d6b5bdf3)\n\n### <!-- 6 --> 📦 Dependency updates\n\n- Bump actions/checkout from 3 to 4 by \\@dependabot[bot] in [#941](https://github.com/nRF24/RF24/pull/941)\n\n### <!-- 8 --> 📝 Documentation\n\n- Modify Main docs page by \\@TMRh20 in [#951](https://github.com/nRF24/RF24/pull/951)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update clang format by \\@2bndy5 in [#940](https://github.com/nRF24/RF24/pull/940)\n- Byte alignment/packing mismatches by \\@TMRh20 in [#945](https://github.com/nRF24/RF24/pull/945)\n- Update COMMON_ISSUES re: write() function by \\@TMRh20 in [#947](https://github.com/nRF24/RF24/pull/947)\n- TestRPD by \\@TMRh20 in [#948](https://github.com/nRF24/RF24/pull/948)\n- Update MRAA timer functions by \\@TMRh20 in [#950](https://github.com/nRF24/RF24/pull/950)\n- Cache gpio chip detection when properly initialized by \\@2bndy5 in [#962](https://github.com/nRF24/RF24/pull/962)\n- Use quotes for linux/gpio.h include by \\@2bndy5 in [#963](https://github.com/nRF24/RF24/pull/963)\n- Use BCM2835 lib's Edge Detection Status for IRQ support by \\@2bndy5 in [#969](https://github.com/nRF24/RF24/pull/969)\n- Wrap wiringPiISRStop() in driver API by \\@2bndy5 in [#968](https://github.com/nRF24/RF24/pull/968)\n- Bump version to v1.4.9 by \\@2bndy5 in [`29231f2`](https://github.com/nRF24/RF24/commit/29231f22d5739b8fb4d3a4d43c9a8ae07a7f1ce4)\n\n[1.4.9]: https://github.com/nRF24/RF24/compare/v1.4.8...v1.4.9\n\nFull commit diff: [`v1.4.8...v1.4.9`][1.4.9]\n\n## New Contributors\n* \\@dependabot[bot] made their first contribution in [#941](https://github.com/nRF24/RF24/pull/941)\n## [1.4.8] - 2023-09-27\n\n### <!-- 8 --> 📝 Documentation\n\n- Mention RPi Pico board's 3v regulator in Pico SDK doc by \\@2bndy5 in [#915](https://github.com/nRF24/RF24/pull/915)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Revert available() algorithm by \\@2bndy5 in [#914](https://github.com/nRF24/RF24/pull/914)\n- Update COMMON_ISSUES.md by \\@TMRh20 in [#918](https://github.com/nRF24/RF24/pull/918)\n- Bump patch version by \\@2bndy5 in [`638095e`](https://github.com/nRF24/RF24/commit/638095e0d18b86726116cdf6e87425ebe8b232ec)\n\n[1.4.8]: https://github.com/nRF24/RF24/compare/v1.4.7...v1.4.8\n\nFull commit diff: [`v1.4.7...v1.4.8`][1.4.8]\n\n## [1.4.7] - 2023-06-06\n\n### <!-- 1 --> 🚀 Added\n\n- Add `deploy-release` arg to PIO reusable CI call by \\@2bndy5 in [`2ff3f2b`](https://github.com/nRF24/RF24/commit/2ff3f2b9d6c72dd274d8fa5bdbc92e404f6f80b0)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Reworked the utility/rp2 SPI class and removed static members by \\@TheGarkine in [#892](https://github.com/nRF24/RF24/pull/892)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- [OrangePi Zero] Linux chip enable conditional statement by \\@fertinator in [#904](https://github.com/nRF24/RF24/pull/904)\n- Fix for potential memory issue by \\@TMRh20 in [`457e036`](https://github.com/nRF24/RF24/commit/457e03694f6e3923b2425bb1e7be3feeed630996)\n\n### <!-- 8 --> 📝 Documentation\n\n- Doc tweaks and reusable CI by \\@2bndy5 in [#887](https://github.com/nRF24/RF24/pull/887)\n- Alias gpio pin datatype by \\@2bndy5 in [#898](https://github.com/nRF24/RF24/pull/898)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Solve \\#894 by \\@2bndy5 in [#895](https://github.com/nRF24/RF24/pull/895)\n- Resolves \\#899 by \\@2bndy5 in [`557d165`](https://github.com/nRF24/RF24/commit/557d165c12e72329b7573b380eb1e7f132cfbfe6)\n- Update pico_sdk.md to reflect changes to SPI by \\@matt-walker0 in [#900](https://github.com/nRF24/RF24/pull/900)\n- Update version for release by \\@TMRh20 in [`a028813`](https://github.com/nRF24/RF24/commit/a028813b285d6cec3090d2c96984bd67a399c52e)\n\n[1.4.7]: https://github.com/nRF24/RF24/compare/v1.4.6...v1.4.7\n\nFull commit diff: [`v1.4.6...v1.4.7`][1.4.7]\n\n## New Contributors\n* \\@fertinator made their first contribution in [#904](https://github.com/nRF24/RF24/pull/904)\n* \\@TheGarkine made their first contribution in [#892](https://github.com/nRF24/RF24/pull/892)\n## [1.4.6] - 2022-09-18\n\n### <!-- 1 --> 🚀 Added\n\n- Add manual trigger to docs CI by \\@2bndy5 in [#868](https://github.com/nRF24/RF24/pull/868)\n- Add printf support to ESP32/8266 and arduino-pico cores by \\@2bndy5 in [#873](https://github.com/nRF24/RF24/pull/873)\n\n### <!-- 2 --> 🚫 Deprecated\n\n- Fix `pgm_read_byte/word()` definitions by \\@2bndy5 in [#871](https://github.com/nRF24/RF24/pull/871)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix Raspberry Pi company name by \\@lurch in [#858](https://github.com/nRF24/RF24/pull/858)\n- Fix `pgm_read_ptr()` (fixes bblanchon/ArduinoJson\\#1790) by \\@bblanchon in [#864](https://github.com/nRF24/RF24/pull/864)\n\n### <!-- 8 --> 📝 Documentation\n\n- Adjust writeFast docs by \\@2bndy5 in [#866](https://github.com/nRF24/RF24/pull/866)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Make utilities/CMakeLists.txt respect RF24_NO_IRQ by \\@2bndy5 in [#859](https://github.com/nRF24/RF24/pull/859)\n- Do not set PA level on begin by \\@TMRh20 in [`8ad2886`](https://github.com/nRF24/RF24/commit/8ad2886b846375fca5cfcda74da784d3452d9148)\n- Bump version (patch) by \\@2bndy5 in [`d7c4041`](https://github.com/nRF24/RF24/commit/d7c4041f001a7fbc880535f5151f89a56a520072)\n\n[1.4.6]: https://github.com/nRF24/RF24/compare/v1.4.5...v1.4.6\n\nFull commit diff: [`v1.4.5...v1.4.6`][1.4.6]\n\n## New Contributors\n* \\@bblanchon made their first contribution in [#864](https://github.com/nRF24/RF24/pull/864)\n* \\@lurch made their first contribution in [#858](https://github.com/nRF24/RF24/pull/858)\n## [1.4.5] - 2022-07-19\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove trailing whitespace and add a blank line by \\@2bndy5 in [`3f786bf`](https://github.com/nRF24/RF24/commit/3f786bffd5e27bd67bbe518bcc3249885fde05ec)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- All single line loops and conditions use curly brackets by \\@2bndy5 in [#855](https://github.com/nRF24/RF24/pull/855)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Bump version by \\@2bndy5 in [`a04f32b`](https://github.com/nRF24/RF24/commit/a04f32b1fb0b2aa3070179d6abcde0aacaf60ebb)\n\n[1.4.5]: https://github.com/nRF24/RF24/compare/v1.4.4...v1.4.5\n\nFull commit diff: [`v1.4.4...v1.4.5`][1.4.5]\n\n## [1.4.4] - 2022-07-18\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix for data corruption issues by \\@TMRh20 in [`399d219`](https://github.com/nRF24/RF24/commit/399d219d6db589df449a56534d6327048915af87)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update version by \\@TMRh20 in [`d7ba9c2`](https://github.com/nRF24/RF24/commit/d7ba9c2fb83f7c2fbb6336f76b607c630f3ebfc2)\n\n[1.4.4]: https://github.com/nRF24/RF24/compare/v1.4.3...v1.4.4\n\nFull commit diff: [`v1.4.3...v1.4.4`][1.4.4]\n\n## [1.4.3] - 2022-07-09\n\n### <!-- 1 --> 🚀 Added\n\n- Add support for sprintf by \\@dstroy0 in [#821](https://github.com/nRF24/RF24/pull/821)\n- Add new feature encodeRadioDetails() and optimize sprintfPrettyDetails() by \\@dstroy0 in [#825](https://github.com/nRF24/RF24/pull/825)\n- Add isChipConnected() to py wrapper by \\@2bndy5 in [`6c5993f`](https://github.com/nRF24/RF24/commit/6c5993f1130d396677d63f7bd0623e491f833160)\n- Add isFifo() methods by \\@2bndy5 in [#849](https://github.com/nRF24/RF24/pull/849)\n- Add model variant info to printPrettyDetails() by \\@2bndy5 in [#850](https://github.com/nRF24/RF24/pull/850)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Various improvements to docs by \\@2bndy5 in [#844](https://github.com/nRF24/RF24/pull/844)\n- Clang format by \\@2bndy5 in [#824](https://github.com/nRF24/RF24/pull/824)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix logic in disableAckPayloads() by \\@2bndy5 in [`f9e5075`](https://github.com/nRF24/RF24/commit/f9e507544686af23bcfe9578a1558bbb08d382c9)\n- Fix \\#832 typo in printDetails() by \\@2bndy5 in [`d4c3c35`](https://github.com/nRF24/RF24/commit/d4c3c355af0ed5d326ec79b5bbe56ff0f2a3d146)\n- Patch for \\#834 by \\@2bndy5 in [#839](https://github.com/nRF24/RF24/pull/839)\n\n### <!-- 8 --> 📝 Documentation\n\n- Update docs README by \\@2bndy5 in [`e4e7156`](https://github.com/nRF24/RF24/commit/e4e7156f00418cb9e18d340fb7319d96145f2302)\n- [docs] fix recieved -> received  typos by \\@prawnpie in [#817](https://github.com/nRF24/RF24/pull/817)\n- Pigpio Testing by \\@TMRh20 in [#819](https://github.com/nRF24/RF24/pull/819)\n- Revert changes to install doc by \\@TMRh20 in [`8ccbb9d`](https://github.com/nRF24/RF24/commit/8ccbb9dc747cc6a65a5684d791fb118b54c31536)\n- Update sphinx doc config by \\@2bndy5 in [#848](https://github.com/nRF24/RF24/pull/848)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Only run linux CI on \"created release\" events by \\@2bndy5 in [`8d25675`](https://github.com/nRF24/RF24/commit/8d256751d6dbb2523bf3b3376071faef56d073cc)\n- Update actions/checkout to v2 by \\@2bndy5 in [`f584685`](https://github.com/nRF24/RF24/commit/f584685c34b6a948384c9512140ad90fd0661770)\n- Updated common issues added issues and fixes by \\@matt-walker0 in [#820](https://github.com/nRF24/RF24/pull/820)\n- Undo changes to CI triggers in \\#821 by \\@2bndy5 in [`b2cf576`](https://github.com/nRF24/RF24/commit/b2cf5769ffbc59c84b9b99a2933d74634f08efab)\n- Ran black on print_dets.py by \\@2bndy5 in [`aaf0f53`](https://github.com/nRF24/RF24/commit/aaf0f53cfa4484d9bc0d3f6c2d5be91d8cdfe931)\n- Don't create PDFs on RTD by \\@2bndy5 in [`7e69d7d`](https://github.com/nRF24/RF24/commit/7e69d7d1fa10c52a3bbfba1fecec89915995f90e)\n- Update printf.h to include megaAVR by \\@Cobalt6700 in [#843](https://github.com/nRF24/RF24/pull/843)\n- Update linux_install.md by \\@TMRh20 in [`c327568`](https://github.com/nRF24/RF24/commit/c3275683e62fcb184cfca225f5fb972faad01ad6)\n- Follow up \\#824 by \\@2bndy5 in [#846](https://github.com/nRF24/RF24/pull/846)\n- Update py examples by \\@2bndy5 in [#851](https://github.com/nRF24/RF24/pull/851)\n- Minor version bump by \\@2bndy5 in [`54ce53a`](https://github.com/nRF24/RF24/commit/54ce53a960a00d1f64dbd601dfa852936ba4be57)\n\n[1.4.3]: https://github.com/nRF24/RF24/compare/v1.4.2...v1.4.3\n\nFull commit diff: [`v1.4.2...v1.4.3`][1.4.3]\n\n## New Contributors\n* \\@Cobalt6700 made their first contribution in [#843](https://github.com/nRF24/RF24/pull/843)\n* \\@dstroy0 made their first contribution in [#825](https://github.com/nRF24/RF24/pull/825)\n* \\@matt-walker0 made their first contribution in [#820](https://github.com/nRF24/RF24/pull/820)\n* \\@prawnpie made their first contribution in [#817](https://github.com/nRF24/RF24/pull/817)\n## [1.4.2] - 2021-11-27\n\n### <!-- 1 --> 🚀 Added\n\n- Pico SDK support, Sphinx, documentation updates and CMake build system for Linux by \\@2bndy5 in [#772](https://github.com/nRF24/RF24/pull/772)\n- Add pico examples to sphinx docs by \\@2bndy5 in [`6741869`](https://github.com/nRF24/RF24/commit/67418691dadcfc11bbbd30c9bab7ef10205bce8c)\n\n### <!-- 2 --> 🚫 Deprecated\n\n- Document deprecated stuff in sphinx by \\@2bndy5 in [`6ec52c7`](https://github.com/nRF24/RF24/commit/6ec52c782fff5b5c88d8ab6778b276836d215772)\n\n### <!-- 8 --> 📝 Documentation\n\n- Sphinx docs updates by \\@2bndy5 in [#803](https://github.com/nRF24/RF24/pull/803)\n- Resolve \\#779 and augment docs by \\@2bndy5 in [`04b103e`](https://github.com/nRF24/RF24/commit/04b103e81a7d21437a3ec0958a9d39bbd87a6c98)\n- Small docs update by \\@2bndy5 in [`f9447d9`](https://github.com/nRF24/RF24/commit/f9447d9c81a11862a27eb6fdf34edbac2f6ee489)\n- [docs] fix API sig; add badge; fix dup heading by \\@2bndy5 in [`3befead`](https://github.com/nRF24/RF24/commit/3befead0495ac4d92228632e7d49a0c2d4f17ddc)\n- Reverse Engineering tricks by \\@2bndy5 in [#804](https://github.com/nRF24/RF24/pull/804)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update pyRF24.cpp by \\@razerraz in [#704](https://github.com/nRF24/RF24/pull/704)\n- Save tag file to doxygen html output by \\@2bndy5 in [`2a03328`](https://github.com/nRF24/RF24/commit/2a033285ed22a24dd391a209a49b976032801c93)\n- Revert \"save tag file to doxygen html output\" by \\@2bndy5 in [`741a508`](https://github.com/nRF24/RF24/commit/741a5085938008dc97136298d3e9f3cebd1e76cd)\n- Trigger rp2xxx CI (picoSDK v1.3.0) by \\@2bndy5 in [`496f5da`](https://github.com/nRF24/RF24/commit/496f5da29ba96cb40f1cb761d278211ee807f4b3)\n\n[1.4.2]: https://github.com/nRF24/RF24/compare/v1.4.1...v1.4.2\n\nFull commit diff: [`v1.4.1...v1.4.2`][1.4.2]\n\n## New Contributors\n* \\@razerraz made their first contribution in [#704](https://github.com/nRF24/RF24/pull/704)\n## [1.4.1] - 2021-06-02\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Undo latest changes to SoftSPI & add patches by \\@2bndy5 in [#771](https://github.com/nRF24/RF24/pull/771)\n\n### <!-- 8 --> 📝 Documentation\n\n- Use angle brackets in a docs code block by \\@2bndy5 in [`7c3d6ec`](https://github.com/nRF24/RF24/commit/7c3d6ecfc55e52ab1cd968ea71d5c86ab8c7ffd4)\n\n[1.4.1]: https://github.com/nRF24/RF24/compare/v1.4.0...v1.4.1\n\nFull commit diff: [`v1.4.0...v1.4.1`][1.4.1]\n\n## [1.4.0] - 2021-04-11\n\n### <!-- 1 --> 🚀 Added\n\n- Add printf.h fix from \\@TonioChingon in \\#739 by \\@2bndy5 in [`c0279c8`](https://github.com/nRF24/RF24/commit/c0279c881f36d5be556564c5750014f89667f235)\n- Add Due to ArduinoCLI action by \\@2bndy5 in [`41484dc`](https://github.com/nRF24/RF24/commit/41484dc781a002e4ec67b68fdae7799b92afca7c)\n- Add MRAA to Linux CI action by \\@2bndy5 in [`8e7d470`](https://github.com/nRF24/RF24/commit/8e7d4709371608222e582930462670fc951d5011)\n- Add example code snippets to Arduino support pg by \\@2bndy5 in [`4770050`](https://github.com/nRF24/RF24/commit/477005031ff0473d2f2999a82a07daf8aec56b16)\n- Add msg about COMMON_ISSUES to README by \\@2bndy5 in [`e26f202`](https://github.com/nRF24/RF24/commit/e26f202d74d57a3143df1c93a1964fe5f163ccdd)\n- Add estimated mbed example to arduino.md by \\@2bndy5 in [`2ea8cbf`](https://github.com/nRF24/RF24/commit/2ea8cbf80a0389847046b549569126df6b34d8a4)\n- Add pinout img from RF24Audio repo by \\@2bndy5 in [`d159954`](https://github.com/nRF24/RF24/commit/d159954b54add6e7318532aed6f0bdc9e009726d)\n- Docs review by \\@2bndy5 in [#750](https://github.com/nRF24/RF24/pull/750)\n\n### <!-- 2 --> 🚫 Deprecated\n\n- Doxygen v1.9.1 deprecated COLS_IN_ALPHA_INDEX tag by \\@2bndy5 in [`d4e1e0d`](https://github.com/nRF24/RF24/commit/d4e1e0dda8091041e0a988dfa98d76dedbac9152)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove useless Due config file \\#752 by \\@2bndy5 in [`25d5530`](https://github.com/nRF24/RF24/commit/25d5530a42a77e53a864c08a18d755e55bff6950)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fixed platforms list in library.json by \\@dagix5 in [#742](https://github.com/nRF24/RF24/pull/742)\n- Fix faulty \\#ifdef logic by \\@2bndy5 in [`416cc35`](https://github.com/nRF24/RF24/commit/416cc35d69dd7cbe5874cee5775c70081b73b319)\n- Fix teensy support; add PIO CI for teensy by \\@2bndy5 in [`6935766`](https://github.com/nRF24/RF24/commit/693576613efc503c4932910bbe533e1f0ebf7f73)\n- Fix \\#414; note need mbed example in arduino.md by \\@2bndy5 in [`5a28733`](https://github.com/nRF24/RF24/commit/5a28733542997d8295a6206cadc9f7c49ce1ae7b)\n- Fix printf() only for adafruit/ArduinoCore-SAMD by \\@2bndy5 in [`27710e2`](https://github.com/nRF24/RF24/commit/27710e2cc41146fbaca5af600f3e38ee9f416a49)\n- Fix indent by \\@2bndy5 in [`1e974ce`](https://github.com/nRF24/RF24/commit/1e974ce2f2550d756e6ca5af3da55f5077adb037)\n\n### <!-- 8 --> 📝 Documentation\n\n- Overload begin() and amended docs about begin() by \\@2bndy5 in [`fee50f6`](https://github.com/nRF24/RF24/commit/fee50f69196bb0f7a16e9097127ee6af99317104)\n- Doxygen action shouldn't create a docs folder by \\@2bndy5 in [`715ed75`](https://github.com/nRF24/RF24/commit/715ed754facdf0e59904c0cd15e9216110c27b59)\n- Doc typos by \\@2bndy5 in [`36449a5`](https://github.com/nRF24/RF24/commit/36449a5581429cecf51a00e8ad32b854c68829ae)\n- Due can't use SPI_PTR; delete ATXMEGA/readme.md by \\@2bndy5 in [`a54668e`](https://github.com/nRF24/RF24/commit/a54668ee0efb9607d7a8ea342f77ae54801b5785)\n- Boost.py docs suck by \\@2bndy5 in [`79ce0cd`](https://github.com/nRF24/RF24/commit/79ce0cd7098ec8b25d4bc2ec5745c507255eef87)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Endorse COMMON_ISSUES.md in issue templates by \\@2bndy5 in [#747](https://github.com/nRF24/RF24/pull/747)\n- Abstract related pages from header by \\@2bndy5 in [`e971e5b`](https://github.com/nRF24/RF24/commit/e971e5bc1fe650f571f87ece096bd9af46706581)\n- Convert _SPI calls to pointers where applicable by \\@2bndy5 in [`5b0b0f9`](https://github.com/nRF24/RF24/commit/5b0b0f9237fad9d41b02bacfe50e3fe880ce4aa2)\n- Typo made BCM driver fail by \\@2bndy5 in [`b0f81d3`](https://github.com/nRF24/RF24/commit/b0f81d30647bd4b297146594d1a83b593e23694f)\n- Bump version to v1.4.0 by \\@2bndy5 in [`9702367`](https://github.com/nRF24/RF24/commit/9702367f45c818ef5c249589a58f95fae7ec724f)\n- Exclude only RF24_LINUX by \\@2bndy5 in [`4e7a548`](https://github.com/nRF24/RF24/commit/4e7a5487e8a99897ba4bdf24174a68ce61848ee3)\n- Apply ptr treatment to Teensy, LittleWire, & Due by \\@2bndy5 in [`46f22f0`](https://github.com/nRF24/RF24/commit/46f22f0c29f17e01acd255bb9c4ddeac241610fe)\n- Trigger ArduinoCLI action by \\@2bndy5 in [`4d68464`](https://github.com/nRF24/RF24/commit/4d684648dcc3fd60f3d3b5f9cc1d3a7e67b43ac4)\n- No need to specify output dir in doxygen action by \\@2bndy5 in [`55a3312`](https://github.com/nRF24/RF24/commit/55a3312e4996c5c741b41f5951a2f185e8902834)\n- Make my life simpler: use new RF24_SPI_PTR macro by \\@2bndy5 in [`5bda5c9`](https://github.com/nRF24/RF24/commit/5bda5c96109c978c869eeb2c628d0d1c1601cf8e)\n- Forgot about c'tor; fix 2-space indent in begin() by \\@2bndy5 in [`f537882`](https://github.com/nRF24/RF24/commit/f537882b684237a59bb87f836b6c54110da1dc9b)\n- Abstract SPI::begin() from _init_pins() by \\@2bndy5 in [`19b9c32`](https://github.com/nRF24/RF24/commit/19b9c32e9ac90b1e14e9e77c3dbcfdc4f63c0054)\n- Adjust csn_pin before SPI.begin() on BCM driver by \\@2bndy5 in [`4b4bd71`](https://github.com/nRF24/RF24/commit/4b4bd7108f081107dc7160884abf18afbccfdf79)\n- Conforming whitespace by \\@2bndy5 in [`ff8f8fb`](https://github.com/nRF24/RF24/commit/ff8f8fb8b310e66613f8c86233123fe7581abd37)\n- Rename atxmega.md & add link to supported product by \\@2bndy5 in [`d0bdfd8`](https://github.com/nRF24/RF24/commit/d0bdfd8b816bcc41ae7cf56c59f2fe582eb44ab9)\n- [PIO CI] use quoted matrix entries by \\@2bndy5 in [`94d1441`](https://github.com/nRF24/RF24/commit/94d1441f20614dab1e1e0884ca05b76d8efc42e8)\n- [PIO CI] use single quotes? by \\@2bndy5 in [`1f65995`](https://github.com/nRF24/RF24/commit/1f659958592aaf1871c587cbbc9abc99b34d7930)\n- I hate YML by \\@2bndy5 in [`7826e86`](https://github.com/nRF24/RF24/commit/7826e86a7b26cfec45ecd0bd3ef3a4ba1388a32b)\n- Gimme that badge by \\@2bndy5 in [`101aa2a`](https://github.com/nRF24/RF24/commit/101aa2ac45eb5d6ee5cb49de61d5188ce1c14f15)\n- Typo by \\@2bndy5 in [`8fb76c8`](https://github.com/nRF24/RF24/commit/8fb76c8b216db7449f86e4e666679a3b44d1ff3e)\n- [Linux CI] MRAA install needs special permission by \\@2bndy5 in [`fb62fbd`](https://github.com/nRF24/RF24/commit/fb62fbd9d52189aa6b072360d7e6473b4fcc906b)\n- Try with \"sudo bash -c\" by \\@2bndy5 in [`ea855d7`](https://github.com/nRF24/RF24/commit/ea855d725d65d100f488dec2d5ded46283e33be7)\n- [Linux CI] MRAA not cross compiling (I think) by \\@2bndy5 in [`cc95a77`](https://github.com/nRF24/RF24/commit/cc95a77a508dc19bcd7f28a013e6fd3535282e94)\n- Avr/pgmspace.h was added to Due core in 2013 by \\@2bndy5 in [`22995fd`](https://github.com/nRF24/RF24/commit/22995fdc34a91f064a749821a570f3a25343ace3)\n- Oops, undo my testing change by \\@2bndy5 in [`54e4886`](https://github.com/nRF24/RF24/commit/54e4886aa0378ec9fceaf69b4ac8451a93cd19b9)\n- Ammend support for SPI_UART in csn() by \\@2bndy5 in [`9989c20`](https://github.com/nRF24/RF24/commit/9989c205b57d53ac0425dd683f013538ad2a23ac)\n- Confirm working 2nd SPI bus on esp8266 \\#648 by \\@2bndy5 in [`02ba92f`](https://github.com/nRF24/RF24/commit/02ba92f346f180898587b0c4beeaef94fef08ced)\n- C-n-p artifact; more indent inconcsistencies by \\@2bndy5 in [`0a6aae3`](https://github.com/nRF24/RF24/commit/0a6aae3bfc632bbe1568bca03d215f1023f5829e)\n- Comment out theroretical example snippets by \\@2bndy5 in [`4b6fb8d`](https://github.com/nRF24/RF24/commit/4b6fb8d4e99b95511df334f8a5a6e06f8f44ee1f)\n- Doxygen sux at reading imgs by \\@2bndy5 in [`55cc2dd`](https://github.com/nRF24/RF24/commit/55cc2ddf22acd03499103222a00b2a130bc19706)\n- Implement \\#539 by \\@2bndy5 in [`0c433f3`](https://github.com/nRF24/RF24/commit/0c433f3bc30e682eb5d3086609132465007e1d5c)\n- My CnP skills are lacking by \\@2bndy5 in [`befe021`](https://github.com/nRF24/RF24/commit/befe02112fe989ee082b271e26745a28898725e7)\n- Need to test py wrapper by \\@2bndy5 in [`1f0335b`](https://github.com/nRF24/RF24/commit/1f0335b4d56a1842dae043101d553213d94f7167)\n- [py_wrap] begin fails to compile by \\@2bndy5 in [`76f6048`](https://github.com/nRF24/RF24/commit/76f6048963df6252d05ef90cb9ae7fed896a74de)\n- [py wrap] oops left the old begin still in there by \\@2bndy5 in [`768be5b`](https://github.com/nRF24/RF24/commit/768be5b4405abcbcf07e845b3aaddac7111f416f)\n- [py wrap] use thin wrapper for begin_w/_pins by \\@2bndy5 in [`fffd6bc`](https://github.com/nRF24/RF24/commit/fffd6bc3d8d48b0a8ca4f1ca3f4d8037d6135006)\n- [pr wrap] try explicit begin(void) by \\@2bndy5 in [`458e638`](https://github.com/nRF24/RF24/commit/458e63838ca6fadb32fa26027160ef141d016506)\n- [py wrap] try using same name for begin(pin, pin) by \\@2bndy5 in [`fe87b19`](https://github.com/nRF24/RF24/commit/fe87b19113fd83b6f38df7776682010402cd7cb9)\n- [py wrap] c'tor overload is bad by \\@2bndy5 in [`bc64e6f`](https://github.com/nRF24/RF24/commit/bc64e6f764f4d0647ed06ba06178a4ce49e5c880)\n- [py wrap] \"optional<>\" template didn't take by \\@2bndy5 in [`bba718c`](https://github.com/nRF24/RF24/commit/bba718c46aecf3cab23d86d0db156addb3ae3c4e)\n- [py wrap] unmatched parenthesis by \\@2bndy5 in [`93817ca`](https://github.com/nRF24/RF24/commit/93817cacbcad82b3b6f45c420418d56b9e2be67f)\n- Advise that teensy doesn't need overloaded begin() by \\@2bndy5 in [`4e431a6`](https://github.com/nRF24/RF24/commit/4e431a6501c900b76341b38ed4b1cf3a786988e8)\n\n[1.4.0]: https://github.com/nRF24/RF24/compare/v1.3.12...v1.4.0\n\nFull commit diff: [`v1.3.12...v1.4.0`][1.4.0]\n\n## New Contributors\n* \\@dagix5 made their first contribution in [#742](https://github.com/nRF24/RF24/pull/742)\n## [1.3.12] - 2021-02-27\n\n### <!-- 1 --> 🚀 Added\n\n- Add STM32 to supported by \\@TMRh20 in [`02ff620`](https://github.com/nRF24/RF24/commit/02ff620a2fc8de3769442a74988efd0a30f1476e)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Clamp setRetries() args & doc main page fixes by \\@2bndy5 in [#709](https://github.com/nRF24/RF24/pull/709)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix links to datasheets by \\@2bndy5 in [#699](https://github.com/nRF24/RF24/pull/699)\n- Fix millis() functionality by \\@TMRh20 in [`61a3ffc`](https://github.com/nRF24/RF24/commit/61a3ffc16c6cbad580da79f48ab6c6511001d254)\n- Fix print pretty by \\@2bndy5 in [#707](https://github.com/nRF24/RF24/pull/707)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Wrapped setters/getters of channel & payloadSize by \\@2bndy5 in [#701](https://github.com/nRF24/RF24/pull/701)\n- Update version for release by \\@TMRh20 in [`11298d5`](https://github.com/nRF24/RF24/commit/11298d52113c3f109928b81043810456b0a809bf)\n- Update MulticeiverDemo.ino by \\@2bndy5 in [#733](https://github.com/nRF24/RF24/pull/733)\n- Community appreciation by \\@2bndy5 in [#735](https://github.com/nRF24/RF24/pull/735)\n- Conclude work on a small branch by \\@2bndy5 in [#737](https://github.com/nRF24/RF24/pull/737)\n- Update COMMON_ISSUES.md by \\@2bndy5 in [#738](https://github.com/nRF24/RF24/pull/738)\n- Merge branch 'master' of https://github.com/nRF24/RF24 by \\@TMRh20 in [`2af44fc`](https://github.com/nRF24/RF24/commit/2af44fcac5b0022780a18fddde593359194c634d)\n\n[1.3.12]: https://github.com/nRF24/RF24/compare/v1.3.11...v1.3.12\n\nFull commit diff: [`v1.3.11...v1.3.12`][1.3.12]\n\n## [1.3.11] - 2020-12-18\n\n### <!-- 2 --> 🚫 Deprecated\n\n- New examples and more by \\@2bndy5 in [#691](https://github.com/nRF24/RF24/pull/691)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Follow-up fixes from \\#691 by \\@2bndy5 in [#697](https://github.com/nRF24/RF24/pull/697)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update library.json by \\@TMRh20 in [`a965e6a`](https://github.com/nRF24/RF24/commit/a965e6ae68f0294fcd628700c9675cf8ea75a00c)\n- Update library.properties by \\@TMRh20 in [`045a689`](https://github.com/nRF24/RF24/commit/045a6898d666a820cd8b995c7fff94d5af268d72)\n\n[1.3.11]: https://github.com/nRF24/RF24/compare/v1.3.10...v1.3.11\n\nFull commit diff: [`v1.3.10...v1.3.11`][1.3.11]\n\n## [1.3.10] - 2020-12-14\n\n### <!-- 1 --> 🚀 Added\n\n- Addressed some Doxygen warnings and issues by \\@2bndy5 in [#639](https://github.com/nRF24/RF24/pull/639)\n- Added a link to doxygen documentation to CONTRIBUTING.md by \\@2bndy5 in [#637](https://github.com/nRF24/RF24/pull/637)\n- Add ARC to printDetails() by \\@jscrane in [#647](https://github.com/nRF24/RF24/pull/647)\n- Add changes to stopListening by \\@TMRh20 in [`a0cd707`](https://github.com/nRF24/RF24/commit/a0cd707137607842f0ef782f12f2e40409a12d38)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove SPI class for ATTiny: provided by ATTinyCore by \\@jscrane in [#646](https://github.com/nRF24/RF24/pull/646)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix for wiringPi by \\@TMRh20 in [`34b4892`](https://github.com/nRF24/RF24/commit/34b4892a7293287a2f36fee4e8f391314412a188)\n\n### <!-- 8 --> 📝 Documentation\n\n- Improved CONTRIBUTING.md and README.md by \\@2bndy5 in [#635](https://github.com/nRF24/RF24/pull/635)\n- Make RF24_POWERUP_DELAY configurable in RF24_config.h by \\@jscrane in [#690](https://github.com/nRF24/RF24/pull/690)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update python wrapper by \\@TMRh20 in [`4fd92d1`](https://github.com/nRF24/RF24/commit/4fd92d113359902b8e7b8ea00dd42ed65e676155)\n- Update CONTRIBUTING.md by \\@Avamander in [`d062771`](https://github.com/nRF24/RF24/commit/d0627715a2e9ff626e7bfbb4d89215f94c9bc8cd)\n- Available() could be slightly faster \\#631 by \\@jscrane in [#650](https://github.com/nRF24/RF24/pull/650)\n- Update library.properties by \\@TMRh20 in [`7debc6f`](https://github.com/nRF24/RF24/commit/7debc6f6202e6807401a135fd8c91a9ad4c594d5)\n- Update library.json by \\@TMRh20 in [`c7cfbea`](https://github.com/nRF24/RF24/commit/c7cfbea636dbb552fcf93829b3b397b62dc9814d)\n\n[1.3.10]: https://github.com/nRF24/RF24/compare/v1.3.9...v1.3.10\n\nFull commit diff: [`v1.3.9...v1.3.10`][1.3.10]\n\n## New Contributors\n* \\@jscrane made their first contribution in [#690](https://github.com/nRF24/RF24/pull/690)\n* \\@2bndy5 made their first contribution in [#637](https://github.com/nRF24/RF24/pull/637)\n## [1.3.9] - 2020-08-22\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix compilation errors by \\@TMRh20 in [`c0440e0`](https://github.com/nRF24/RF24/commit/c0440e0b7fc425d1c0b9819c9f9bfeac731ec069)\n\n[1.3.9]: https://github.com/nRF24/RF24/compare/v1.3.8...v1.3.9\n\nFull commit diff: [`v1.3.8...v1.3.9`][1.3.9]\n\n## [1.3.8] - 2020-08-17\n\n### <!-- 3 --> 🗑️ Removed\n\n- Improve switching from TX->RX by \\@TMRh20 in [`a779828`](https://github.com/nRF24/RF24/commit/a779828026b243585a3407d4895c6ca947d37b89)\n- Remove warning in configure by \\@TMRh20 in [`59123c6`](https://github.com/nRF24/RF24/commit/59123c6860b668a587aeaa338567129aa3923afa)\n\n### <!-- 8 --> 📝 Documentation\n\n- Adjustment for prev change, doc update by \\@TMRh20 in [`19c3357`](https://github.com/nRF24/RF24/commit/19c3357bee57afa006005616aa1d72d24a674874)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Clean up begin() function by \\@TMRh20 in [`3272fac`](https://github.com/nRF24/RF24/commit/3272facf4db3a02f7d2b3e8fd56dbf36e568aec6)\n- Update for relese by \\@TMRh20 in [`bb71b13`](https://github.com/nRF24/RF24/commit/bb71b13d600631f71df4de35df6f5ca5fe363377)\n\n[1.3.8]: https://github.com/nRF24/RF24/compare/v1.3.7...v1.3.8\n\nFull commit diff: [`v1.3.7...v1.3.8`][1.3.8]\n\n## [1.3.7] - 2020-08-01\n\n### <!-- 1 --> 🚀 Added\n\n- Added Constant Carrier Wave by \\@waltbar in [#609](https://github.com/nRF24/RF24/pull/609)\n- Add CCW to scanner example by \\@TMRh20 in [`92b15c7`](https://github.com/nRF24/RF24/commit/92b15c74f0790a89554229eae4a86e0d10578037)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Update printDetails() by \\@TMRh20 in [`ed35bd9`](https://github.com/nRF24/RF24/commit/ed35bd93cc981ca1e118556a2e530954cdb80125)\n- Cleanup examples by \\@TMRh20 in [`6ab44fc`](https://github.com/nRF24/RF24/commit/6ab44fccda97f3a81a664108d4a6432d2297594c)\n- Update RF24 docs by \\@TMRh20 in [`399f1a9`](https://github.com/nRF24/RF24/commit/399f1a91f50261f9c4ad0828fd8895cf8fd8040e)\n- Update python wrapper by \\@TMRh20 in [`7bd5f7f`](https://github.com/nRF24/RF24/commit/7bd5f7f99f07e0d3ad2bc5b0f28994c5624b6e02)\n- Removed ancient lefovers by \\@Avamander in [`4751968`](https://github.com/nRF24/RF24/commit/47519686ccf46545d2fa0b02e0c604fb1646d6d7)\n- Removed ancient leftovers by \\@Avamander in [`1f83dd7`](https://github.com/nRF24/RF24/commit/1f83dd7e4cb79326a6659311b760f60570170bc7)\n- Cleanup of warnings/errors by \\@TMRh20 in [`5d6a02a`](https://github.com/nRF24/RF24/commit/5d6a02af52d0bf4e9a9baabb8fe22a4db43b4030)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix bug with RPi timer code by \\@TMRh20 in [`13ea68e`](https://github.com/nRF24/RF24/commit/13ea68e06016cc8d164267cd199d4845b115325b)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Merge branch 'master' of https://github.com/nRF24/RF24 by \\@TMRh20 in [`e4b5377`](https://github.com/nRF24/RF24/commit/e4b53771c3da9585f1da253a9051c8dbb083d1b6)\n- Unify Aduino & Linux Constructor by \\@TMRh20 in [`914db31`](https://github.com/nRF24/RF24/commit/914db3115a2d0c06f2fbbe2fa81d7d408f65b003)\n- Update RF24.h by \\@TMRh20 in [`72f5316`](https://github.com/nRF24/RF24/commit/72f5316ea493f7167c11c7b9a8de4c960f127617)\n- Update BCM driver etc by \\@TMRh20 in [`1543ad6`](https://github.com/nRF24/RF24/commit/1543ad6e7ecd0d1112541031b0759b8691c0c997)\n- Get rid of compilation warning by \\@TMRh20 in [`9231656`](https://github.com/nRF24/RF24/commit/92316566c7e6a40343e659efe47f7c101ad346a6)\n- En/Disable LNA Gain by \\@TMRh20 in [`8c081b3`](https://github.com/nRF24/RF24/commit/8c081b3a934cde8eb3f3b5f68e670a195b39070d)\n- Bug Fix! Super Awesome Bug Fix!!!!! by \\@TMRh20 in [`3af80f8`](https://github.com/nRF24/RF24/commit/3af80f8fa4ddc741ef9d2f1b9793da0ab5047b1a)\n- Update version & supported architectures by \\@TMRh20 in [`64b5103`](https://github.com/nRF24/RF24/commit/64b510384b84cc7d13bb5403480db510451d6d0e)\n- Update version for release by \\@TMRh20 in [`4c6c106`](https://github.com/nRF24/RF24/commit/4c6c106f2dcf09e6a31830ccba32c57a8f749939)\n\n[1.3.7]: https://github.com/nRF24/RF24/compare/v1.3.6...v1.3.7\n\nFull commit diff: [`v1.3.6...v1.3.7`][1.3.7]\n\n## New Contributors\n* \\@waltbar made their first contribution in [#609](https://github.com/nRF24/RF24/pull/609)\n## [1.3.6] - 2020-07-14\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix issues with SPI Transactions detection by \\@TMRh20 in [`da16f57`](https://github.com/nRF24/RF24/commit/da16f57a1b3d2d1c15628ab1e935e09c6dd06d26)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Linux SPI speed cfg by \\@TMRh20 in [`a62aa4a`](https://github.com/nRF24/RF24/commit/a62aa4af0d90c9ca121fb9298b1594e10a936545)\n- RF24 Doc Update by \\@TMRh20 in [`b25413e`](https://github.com/nRF24/RF24/commit/b25413e40f66d1f0e5a29c05c10569d92f2f14ff)\n- Update version for release by \\@TMRh20 in [`8f214c1`](https://github.com/nRF24/RF24/commit/8f214c153a2cd8d921570cc14e407574e1a14cbe)\n\n[1.3.6]: https://github.com/nRF24/RF24/compare/v1.3.5...v1.3.6\n\nFull commit diff: [`v1.3.5...v1.3.6`][1.3.6]\n\n## [1.3.5] - 2020-07-08\n\n### <!-- 1 --> 🚀 Added\n\n- Added a few missing keywords for syntax highlighting by \\@Avamander in [`939ca40`](https://github.com/nRF24/RF24/commit/939ca409e55cdab14ad24162544c551b7e9acb46)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Revert digitalWrite compatibility changes by \\@TMRh20 in [`5e1ac02`](https://github.com/nRF24/RF24/commit/5e1ac023b0101cca3d7277d198d7b87ec8e1e241)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix for creating multiple instances with SPIDEV by \\@krzysztof9nowak in [#585](https://github.com/nRF24/RF24/pull/585)\n- Fix documentation for build on linux/RPi by \\@TMRh20 in [`b323f53`](https://github.com/nRF24/RF24/commit/b323f535aa9644d988370fc6989a2ef9f85aa469)\n- Fix for ESP32 program memory error/warning by \\@TMRh20 in [`3667a54`](https://github.com/nRF24/RF24/commit/3667a54ed75d6c0b38fc6037710ef2e095189bfe)\n- Fixed a compiler warning in Linux example by \\@gherlein in [#384](https://github.com/nRF24/RF24/pull/384)\n- Fixed undefined behavior in openReadingPipe by \\@azais-corentin in [#604](https://github.com/nRF24/RF24/pull/604)\n\n### <!-- 8 --> 📝 Documentation\n\n- Update constructor info to reference docs by \\@TMRh20 in [`2e75fc2`](https://github.com/nRF24/RF24/commit/2e75fc2a6b30060d4279a141a8348bd97e5090e9)\n- Cleaned up the formatting and improved documentation by \\@Avamander in [`e456503`](https://github.com/nRF24/RF24/commit/e456503554529011c4223286a6703fdf411b7733)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update Doxyfile by \\@Avamander in [`85ac82a`](https://github.com/nRF24/RF24/commit/85ac82ab1ffbfcb83a5a0ecf1a05059d3964aad8)\n- Documentation update, python & news by \\@TMRh20 in [`35c51ff`](https://github.com/nRF24/RF24/commit/35c51ff0ad4f105c3efe9902a2d5fb80457be9f5)\n- Cleaned up the style of of the pingpair_ack example by \\@Avamander in [`c49c7e9`](https://github.com/nRF24/RF24/commit/c49c7e984806bb00bfa7fc5d77d8a6f266bc7ddd)\n- Made sure that printf exists when printDetails is used by \\@Avamander in [`53b588f`](https://github.com/nRF24/RF24/commit/53b588f2226284f435db88e3557da6a3be19ee0c)\n- Made sure that printf is included when printDetails is used by \\@Avamander in [`fcbc804`](https://github.com/nRF24/RF24/commit/fcbc804d2af432848fe7d6a54b8b18e2b25ff5b9)\n- Update pingpair_irq_simple.ino by \\@Avamander in [`aa8511f`](https://github.com/nRF24/RF24/commit/aa8511f46995698174262c5f2b1f82f726aed3cc)\n- Clarified printf usage a bit by \\@Avamander in [`7bf5dce`](https://github.com/nRF24/RF24/commit/7bf5dceb21e00ce1b0ec0cbb6f95c9cc5c5fe4ce)\n- Increment version for release by \\@TMRh20 in [`43f55df`](https://github.com/nRF24/RF24/commit/43f55dfdef228f9455633e3403b386ac0f2ea1bc)\n\n[1.3.5]: https://github.com/nRF24/RF24/compare/v1.3.4...v1.3.5\n\nFull commit diff: [`v1.3.4...v1.3.5`][1.3.5]\n\n## New Contributors\n* \\@azais-corentin made their first contribution in [#604](https://github.com/nRF24/RF24/pull/604)\n* \\@gherlein made their first contribution in [#384](https://github.com/nRF24/RF24/pull/384)\n* \\@krzysztof9nowak made their first contribution in [#585](https://github.com/nRF24/RF24/pull/585)\n## [1.3.4] - 2020-02-15\n\n### <!-- 1 --> 🚀 Added\n\n- Added Dolphin files to gitignore just in case by \\@Avamander in [`4b5ba72`](https://github.com/nRF24/RF24/commit/4b5ba72751d8a5463cf0a32b95aef7af89186eb5)\n- Add function to get automatic retransmission count by \\@Avamander in [#558](https://github.com/nRF24/RF24/pull/558)\n- Added GitHub actions configuration by \\@CoRfr in [#566](https://github.com/nRF24/RF24/pull/566)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Forced braces also on while and for loops, removed unneccesary spaces by \\@Avamander in [`71ec8a1`](https://github.com/nRF24/RF24/commit/71ec8a1820f02a5b2b18981251bfb30aad4aeb03)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix in RF24::getDynamicPayloadSize by \\@jonnykl in [`ea5dee4`](https://github.com/nRF24/RF24/commit/ea5dee4624d6913708a51c71cf3ae082d2d470f7)\n- Fixes incorrect preprocessor statement being used by \\@Avamander in [`147ef4d`](https://github.com/nRF24/RF24/commit/147ef4d72fd7f1ddc457a23ee133a66a99b9fc4b)\n\n### <!-- 8 --> 📝 Documentation\n\n- Overloaded digitalWrite to accept boolean by \\@Avamander in [`9f55c0c`](https://github.com/nRF24/RF24/commit/9f55c0c577b229f553bca4c73e3045cc89bf73c1)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update .gitignore by \\@Avamander in [`bf25900`](https://github.com/nRF24/RF24/commit/bf259002b2eb0b44df812d7c2d332f70b50525b4)\n- Update to latest BCM 2835 driver for RPI4 support by \\@TMRh20 in [`e221acd`](https://github.com/nRF24/RF24/commit/e221acdc4315a39016b31c28143639b27421d75a)\n- Merge pull request \\#520 from jonnykl/fix-get-dyn-pld-size-spi by \\@TMRh20 in [#520](https://github.com/nRF24/RF24/pull/520)\n- Mod to run RF24 on Raspberry SPI1 by \\@Crkk in [`569639a`](https://github.com/nRF24/RF24/commit/569639a5cfedf37239619e29c888bf25395bc0eb)\n- Merge pull request \\#530 from Crkk/patch-1 by \\@TMRh20 in [#530](https://github.com/nRF24/RF24/pull/530)\n- Reformatted the entire project using a single code style by \\@Avamander in [`0d36fca`](https://github.com/nRF24/RF24/commit/0d36fca8406aaf46558c171b8d85d27da2d4d97e)\n- Update CONTRIBUTING.md by \\@Avamander in [`d1a5d5e`](https://github.com/nRF24/RF24/commit/d1a5d5e6c5db8f7d2c75289adaba13ec244ee8ad)\n- Improved Github templates by \\@olback in [#543](https://github.com/nRF24/RF24/pull/543)\n- Update -march definition on RPi (BCM2835) to fix compilation by \\@CoRfr in [#565](https://github.com/nRF24/RF24/pull/565)\n- Improved exception when not running as root by \\@CoRfr in [#564](https://github.com/nRF24/RF24/pull/564)\n- Improved indentation and formatting by \\@Avamander in [`42cf6dd`](https://github.com/nRF24/RF24/commit/42cf6dd201f961bf2b4891d25b16c400bce90198)\n- Marked MegaAVR as a supported arch by \\@Avamander in [`ddc8c62`](https://github.com/nRF24/RF24/commit/ddc8c62c530d0ba71866d38ba30eac8a8a25b203)\n- Marked megaavr as supported by \\@Avamander in [`80c456a`](https://github.com/nRF24/RF24/commit/80c456ae3a70c5405d8a5691910c2b3d6489a59b)\n\n[1.3.4]: https://github.com/nRF24/RF24/compare/v1.3.3...v1.3.4\n\nFull commit diff: [`v1.3.3...v1.3.4`][1.3.4]\n\n## New Contributors\n* \\@CoRfr made their first contribution in [#564](https://github.com/nRF24/RF24/pull/564)\n* \\@olback made their first contribution in [#543](https://github.com/nRF24/RF24/pull/543)\n* \\@Crkk made their first contribution\n* \\@jonnykl made their first contribution\n## [1.3.3] - 2019-06-18\n\n### <!-- 1 --> 🚀 Added\n\n- Addi delay to SPI intializer if device already up by \\@TMRh20 in [`db6a99b`](https://github.com/nRF24/RF24/commit/db6a99bc0ab98d240bd147c59ff3ff05f1ff5aa0)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix broken stuff after using pgm_read_ptr by \\@TMRh20 in [`4220bf5`](https://github.com/nRF24/RF24/commit/4220bf5ce6d804a7ea8a3056102636dda70203de)\n\n### <!-- 8 --> 📝 Documentation\n\n- Update docs for write() per \\#500 by \\@TMRh20 in [`bd88f9e`](https://github.com/nRF24/RF24/commit/bd88f9e48ba74119ebd9ebd8cdbe6a69ecc4b963)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Clean up printf.h by \\@TMRh20 in [`0fabd62`](https://github.com/nRF24/RF24/commit/0fabd62dda48ce621121199078f0ee6790809d30)\n- Modify printDetails to work with ESP8266 by \\@TMRh20 in [`c25d840`](https://github.com/nRF24/RF24/commit/c25d84089e91c7e206365fe04b80dcbebf48b640)\n- One more change for pgm_read_ptr by \\@TMRh20 in [`2fa6e8c`](https://github.com/nRF24/RF24/commit/2fa6e8cc6c434e3979c24f5149bd725cb8bffb55)\n- Protect against calling bcm_init() more than once by \\@TMRh20 in [`b19c3d8`](https://github.com/nRF24/RF24/commit/b19c3d88b99d0c111082d462c4ce203948939323)\n- Protect against initializing SPI more than once by \\@TMRh20 in [`304d2bb`](https://github.com/nRF24/RF24/commit/304d2bb4c11d0d9b94f7f08170184ee7f89a0863)\n- Revert to using initialization protection for SPI by \\@TMRh20 in [`9f19b40`](https://github.com/nRF24/RF24/commit/9f19b4054fb196d57259d7bb2524640af950e0f7)\n- Improve accuracy of millis() function in SPIDEV by \\@TMRh20 in [`3b6391a`](https://github.com/nRF24/RF24/commit/3b6391a06732ad114f5edb7ecc0527bee7811820)\n- Enable failure handling, add example by \\@TMRh20 in [`13cbad9`](https://github.com/nRF24/RF24/commit/13cbad91df8136b9ca92eb6e76f14432a8a33f19)\n- Edit example - forgot to add 'break;' by \\@TMRh20 in [`6821e42`](https://github.com/nRF24/RF24/commit/6821e42f2781e81c4b95a52ef0b27b1dd8b634c8)\n- Edit RF24_config.h for ESP32 by \\@TMRh20 in [`0b24667`](https://github.com/nRF24/RF24/commit/0b2466772ada73b9cb7843128c8aba3a62dafaf0)\n- Make attiny SPI code independent from different Arduino pins definitions by \\@troffmo5 in [`41866a3`](https://github.com/nRF24/RF24/commit/41866a3354e82cedaf451453a9f1d5225b30ba88)\n- Merge pull request \\#326 from troffmo5/attiny by \\@TMRh20 in [#326](https://github.com/nRF24/RF24/pull/326)\n- Update RF24_config.h by \\@IkpeohaGodson in [`0015498`](https://github.com/nRF24/RF24/commit/0015498c06b31d524e0471848f6b0891ea56b234)\n- Cleaned up formatting of RF24_config.h by \\@Avamander in [`279c67b`](https://github.com/nRF24/RF24/commit/279c67b76ed1fcaa3fd94571f8ab46ef0dfe514d)\n- Update RF24_config.h by \\@Avamander in [`df3f821`](https://github.com/nRF24/RF24/commit/df3f8211976c4c457128f7a2dab606c2bea76728)\n- Update RF24_config.h by \\@Avamander in [`f3b2fb0`](https://github.com/nRF24/RF24/commit/f3b2fb002386cf9f714b6dec04f959402995ca43)\n- Merge pull request \\#502 from IkpeohaGodson/patch-1 and clean up RF24_config.h by \\@Avamander in [#502](https://github.com/nRF24/RF24/pull/502)\n- Update library.json by \\@Avamander in [`5f9814f`](https://github.com/nRF24/RF24/commit/5f9814f19731595d39464695cc7d1524b8d1cdf4)\n- Update library.properties by \\@Avamander in [`fdb4366`](https://github.com/nRF24/RF24/commit/fdb43667485b155269923017668a7650238f075e)\n\n[1.3.3]: https://github.com/nRF24/RF24/compare/v1.3.2...v1.3.3\n\nFull commit diff: [`v1.3.2...v1.3.3`][1.3.3]\n\n## New Contributors\n* \\@IkpeohaGodson made their first contribution\n* \\@troffmo5 made their first contribution\n## [1.3.2] - 2019-03-22\n\n### <!-- 1 --> 🚀 Added\n\n- Merge pull request \\#413 from haseebehsan/pythonWrappers by \\@TMRh20 in [#413](https://github.com/nRF24/RF24/pull/413)\n- Added an exception if non-superuser uses the library by \\@akatran in [#428](https://github.com/nRF24/RF24/pull/428)\n- Fixed misleading indent warning in bcm2835.c in [#444](https://github.com/nRF24/RF24/pull/444)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Change perror/abort in SPIDEV driver c++ std exception by \\@ludiazv in [`6f74bad`](https://github.com/nRF24/RF24/commit/6f74badb05567bd83b957f5b879060efdcfc085c)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update pingpair_dyn.py by \\@TMRh20 in [`57d3eef`](https://github.com/nRF24/RF24/commit/57d3eef5909dbb15f00afec558514000f24951f3)\n- Merge remote-tracking branch 'upstream/master' by \\@ludiazv in [`5b09d19`](https://github.com/nRF24/RF24/commit/5b09d193369313946bd28d527f17ca93638d1cb6)\n- Merge pull request \\#411 from ludiazv/master by \\@TMRh20 in [#411](https://github.com/nRF24/RF24/pull/411)\n- PyRF24 moved to its specific folder by \\@haseebehsan in [`8eaa26d`](https://github.com/nRF24/RF24/commit/8eaa26de6066941a32c68fe0aa33b04ff271143f)\n- PyRF24Network python wrapper created by \\@haseebehsan in [`570bd1e`](https://github.com/nRF24/RF24/commit/570bd1eafcf545c69a373df3771f223c55a96564)\n- PyRF24Mesh python Wrapper created by \\@haseebehsan in [`ba335de`](https://github.com/nRF24/RF24/commit/ba335de7751084a68da8f85908b8c185424ea501)\n- Keeping previous RF24 boost wrapper as it is by \\@haseebehsan in [`2e29f9d`](https://github.com/nRF24/RF24/commit/2e29f9d0661218de6d159aef5645237b3e9af00e)\n- Revert \"keeping previous RF24 boost wrapper as it is\" by \\@haseebehsan in [`bbc6b1d`](https://github.com/nRF24/RF24/commit/bbc6b1d452884768bf480e481fb3756552ead2ff)\n- Revert \"Revert \"keeping previous RF24 boost wrapper as it is\"\" by \\@haseebehsan in [`a476c42`](https://github.com/nRF24/RF24/commit/a476c42a7a1b6394817413f8eab26a95cadda102)\n- Update RPi BCM driver to latest by \\@TMRh20 in [`20b9d77`](https://github.com/nRF24/RF24/commit/20b9d77716e9e75993dc7994e82ec3fb6ad40080)\n- SPIDEV compatibility layer improvement and patch for 64bits by \\@ludiazv in [#455](https://github.com/nRF24/RF24/pull/455)\n- Reorder libs in linker arguments. by \\@wamonite in [`4dcf86c`](https://github.com/nRF24/RF24/commit/4dcf86ca47461ac0793bd47acbddf4e36ddcf6d4)\n- Ensure pyRF24 constructors match C++ conditionals. by \\@wamonite in [`ae4c03b`](https://github.com/nRF24/RF24/commit/ae4c03bc49eef915cbd389fc5339396d7849bb90)\n- Merge pull request \\#402 from wamonite/dev_up2 by \\@TMRh20 in [#402](https://github.com/nRF24/RF24/pull/402)\n- Update Transfer.ino by \\@HannHank in [`ba5c39f`](https://github.com/nRF24/RF24/commit/ba5c39faeec42795ce65d4310a3b0ce41b031259)\n- Merge pull request \\#457 from HannHank/patch-1 by \\@TMRh20 in [#457](https://github.com/nRF24/RF24/pull/457)\n- Update Transfer.ino by \\@Avamander in [`a2b35d6`](https://github.com/nRF24/RF24/commit/a2b35d6594160263a5a8c460a9754dd71fba6d95)\n- Automatically choose correct SPI clock divider. by \\@herm in [`5b1be4e`](https://github.com/nRF24/RF24/commit/5b1be4ef63b26fea8cbbc88a2beffd7198bc47c1)\n- Merge pull request \\#472 from herm/spi_clock by \\@TMRh20 in [#472](https://github.com/nRF24/RF24/pull/472)\n- Update delay functions for SPIDEV by \\@TMRh20 in [`23d1ca9`](https://github.com/nRF24/RF24/commit/23d1ca92e27490da2b0e98f35dbb2479575cb40f)\n- Set delays by CPU speed by \\@TMRh20 in [`a3ab7dd`](https://github.com/nRF24/RF24/commit/a3ab7ddb075360deac54fe2c8e2fab286793d21c)\n- Update library.properties by \\@Avamander in [`bba722a`](https://github.com/nRF24/RF24/commit/bba722a01b7be4c9fbb7431c2af1a686fee753e4)\n- Update library.json by \\@Avamander in [`56f9bf4`](https://github.com/nRF24/RF24/commit/56f9bf41bd34721308aacf15df607ef7f1fb559c)\n\n[1.3.2]: https://github.com/nRF24/RF24/compare/v1.3.1...v1.3.2\n\nFull commit diff: [`v1.3.1...v1.3.2`][1.3.2]\n\n## New Contributors\n* \\@herm made their first contribution\n* \\@HannHank made their first contribution\n* \\@ludiazv made their first contribution in [#455](https://github.com/nRF24/RF24/pull/455)\n* \\@haseebehsan made their first contribution\n* \\@wamonite made their first contribution\n## [1.3.1] - 2018-01-28\n\n### <!-- 1 --> 🚀 Added\n\n- Added implementation for wiringPi driver by \\@aurelian17 in [#349](https://github.com/nRF24/RF24/pull/349)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove progmem macro overrides (ESP8266 Arduino now supports them) by \\@sidoh in [#375](https://github.com/nRF24/RF24/pull/375)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix configure for Raspberry PI 2 B+ Raspberian Jessie by \\@MathiasMoog in [#366](https://github.com/nRF24/RF24/pull/366)\n- Use correct separator in keywords.txt by \\@per1234 in [#381](https://github.com/nRF24/RF24/pull/381)\n- Fix build issues against ESP32 (ESP-WROOM-32). by \\@anders-liu in [#409](https://github.com/nRF24/RF24/pull/409)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Allow redefining SOFTSPI pins with preprocessor flags by \\@trojanc in [#372](https://github.com/nRF24/RF24/pull/372)\n- New library release and additional architectures by \\@Avamander in [#410](https://github.com/nRF24/RF24/pull/410)\n\n[1.3.1]: https://github.com/nRF24/RF24/compare/v1.3.0...v1.3.1\n\nFull commit diff: [`v1.3.0...v1.3.1`][1.3.1]\n\n## New Contributors\n* \\@anders-liu made their first contribution in [#409](https://github.com/nRF24/RF24/pull/409)\n* \\@trojanc made their first contribution in [#372](https://github.com/nRF24/RF24/pull/372)\n* \\@sidoh made their first contribution in [#375](https://github.com/nRF24/RF24/pull/375)\n* \\@per1234 made their first contribution in [#381](https://github.com/nRF24/RF24/pull/381)\n* \\@aurelian17 made their first contribution in [#349](https://github.com/nRF24/RF24/pull/349)\n* \\@MathiasMoog made their first contribution in [#366](https://github.com/nRF24/RF24/pull/366)\n## [1.3.0] - 2017-06-01\n\n### <!-- 1 --> 🚀 Added\n\n- Add static initialization for pthread mutexes in [`e204656`](https://github.com/nRF24/RF24/commit/e204656cbdb361a983ee76a7e343ecdb1d22bd54)\n- Add to RF24: Arduino Due supported in SPI_UART by \\@TMRh20 in [`3b5fc3e`](https://github.com/nRF24/RF24/commit/3b5fc3e85bd11f075f703b1cbe0709c3cada27dd)\n- Merge pull request \\#247 from corcrash/master in [#247](https://github.com/nRF24/RF24/pull/247)\n- Added disableDynamicPayloads() by \\@soligen2010 in [#318](https://github.com/nRF24/RF24/pull/318)\n- Added isChipConnected(). by \\@wmarkow in [#291](https://github.com/nRF24/RF24/pull/291)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fixed output and made it consistent with output from Ardunio version. by \\@campenr in [`efb8ed1`](https://github.com/nRF24/RF24/commit/efb8ed1f8964ca398184b5130c46819dcf2262c3)\n- Fix clamping to a single hex digit by \\@nickmooney in [`b37514b`](https://github.com/nRF24/RF24/commit/b37514b9b7199f4d8e8d8fbef11f599eca1e02fa)\n- Fix SPIDEV interface by \\@plasticassius in [#315](https://github.com/nRF24/RF24/pull/315)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update to match new RPi scanner example. by \\@campenr in [`b233ea1`](https://github.com/nRF24/RF24/commit/b233ea17316a8a37dab77880e8c779e722795b73)\n- Merge pull request \\#301 from campenr/master by \\@TMRh20 in [#301](https://github.com/nRF24/RF24/pull/301)\n- Per \\#242 change binary to hex by \\@TMRh20 in [`aaa09e1`](https://github.com/nRF24/RF24/commit/aaa09e1833dc5bb4705f642c9b003af05a27fd25)\n- Merge pull request \\#273 from marceloaqno/fix-mutex-init by \\@TMRh20 in [#273](https://github.com/nRF24/RF24/pull/273)\n- :begin: reset dynamic_payloads_enabled to false by \\@derf in [`17e29ea`](https://github.com/nRF24/RF24/commit/17e29ea1fc8480353305c4434a61788acc4e7c02)\n- Merge pull request \\#319 from derf/master by \\@derf in [#319](https://github.com/nRF24/RF24/pull/319)\n- Merge branch 'master' into master in [`3c4f842`](https://github.com/nRF24/RF24/commit/3c4f8420dc8c6399837abe937df1799c3ed47506)\n- Merge pull request \\#304 from nickmooney/patch-1 by \\@nickmooney in [#304](https://github.com/nRF24/RF24/pull/304)\n- Create CONTRIBUTING.md by \\@Avamander in [`ea3b7a6`](https://github.com/nRF24/RF24/commit/ea3b7a66918c86d18081736927f86fdda8c5693f)\n- Create LICENSE by \\@Avamander in [`706c1d6`](https://github.com/nRF24/RF24/commit/706c1d6eba9082c1221212f270feb4a365642122)\n- Simplified logic of disableDynamicPayloads() by \\@mattura in [#332](https://github.com/nRF24/RF24/pull/332)\n- Make flush_rx public by \\@soligen2010 in [#352](https://github.com/nRF24/RF24/pull/352)\n- Update library.properties by \\@Avamander in [`177bdc5`](https://github.com/nRF24/RF24/commit/177bdc5e3bbdd3a748f3eaca9d9587ca1125ca59)\n- Update library.json by \\@Avamander in [`4001548`](https://github.com/nRF24/RF24/commit/40015481ebe81cd8ddac33c05194cc41d1a6138a)\n- Update library.json by \\@Avamander in [`7f14e7f`](https://github.com/nRF24/RF24/commit/7f14e7f1fa0dadfe5a68d1234e51094d3eb6287c)\n\n[1.3.0]: https://github.com/nRF24/RF24/compare/RF24v1.2.0...v1.3.0\n\nFull commit diff: [`RF24v1.2.0...v1.3.0`][1.3.0]\n\n## New Contributors\n* \\@soligen2010 made their first contribution in [#352](https://github.com/nRF24/RF24/pull/352)\n* \\@mattura made their first contribution in [#332](https://github.com/nRF24/RF24/pull/332)\n* \\@plasticassius made their first contribution in [#315](https://github.com/nRF24/RF24/pull/315)\n* \\@nickmooney made their first contribution in [#304](https://github.com/nRF24/RF24/pull/304)\n* \\@derf made their first contribution in [#319](https://github.com/nRF24/RF24/pull/319)\n* \\@campenr made their first contribution\n## [RF24v1.2.0] - 2016-11-05\n\n### <!-- 1 --> 🚀 Added\n\n- Add link to RPi/Linux Blog Post in documentation by \\@TMRh20 in [`63c83d4`](https://github.com/nRF24/RF24/commit/63c83d4f4e913185e510d2ef291ca608605bfd20)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix bad documentation link from last commit by \\@TMRh20 in [`c94f877`](https://github.com/nRF24/RF24/commit/c94f87746552a3c662c35fd11e772b747f19d8ee)\n\n### <!-- 8 --> 📝 Documentation\n\n- Minor documentation correction - RF24_CRC_DISABLED by \\@pfeerick in [`3766eeb`](https://github.com/nRF24/RF24/commit/3766eebf139ed83fb5129ce06521c6168d2749c2)\n- Merge pull request \\#286 from pfeerick/patch-1 by \\@TMRh20 in [#286](https://github.com/nRF24/RF24/pull/286)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update PlatformIO library manifest by \\@valeros in [`aa54114`](https://github.com/nRF24/RF24/commit/aa54114b6c29e8dcae221d90c73288b07042033e)\n- Merge pull request \\#280 from valeros/patch-1 by \\@Avamander in [#280](https://github.com/nRF24/RF24/pull/280)\n- Let's PlatformIO decide how to build Arduino v1.0 library by \\@ivankravets in [`903fc55`](https://github.com/nRF24/RF24/commit/903fc55e364cfe9fe87c63e512bc8bb05152de85)\n- Merge pull request \\#284 from ivankravets/patch-2 by \\@TMRh20 in [#284](https://github.com/nRF24/RF24/pull/284)\n- Make internal delays configurable by \\@TMRh20 in [`195f5ac`](https://github.com/nRF24/RF24/commit/195f5ac1d7451d72f320de3c050c20a1ccd3ff0f)\n- Update Library Version 1.2 by \\@TMRh20 in [`8ea5127`](https://github.com/nRF24/RF24/commit/8ea5127078394591a0af5b409c38fa11cb0677d9)\n\n[RF24v1.2.0]: https://github.com/nRF24/RF24/compare/v1.1.7...RF24v1.2.0\n\nFull commit diff: [`v1.1.7...RF24v1.2.0`][RF24v1.2.0]\n\n## New Contributors\n* \\@pfeerick made their first contribution\n* \\@valeros made their first contribution\n## [1.1.7] - 2016-08-12\n\n### <!-- 1 --> 🚀 Added\n\n- Add interrupts to SPIDEV by \\@TMRh20 in [`d705abd`](https://github.com/nRF24/RF24/commit/d705abd4073defa0a5d338f6d58a604597f2aff7)\n- Add sudo when linking for old lib name via remote by \\@TMRh20 in [`87f3d11`](https://github.com/nRF24/RF24/commit/87f3d11033c70e9ca5032295ca5ffd5cdc665f7f)\n- Support for ATXMega256D3 by \\@akatran in [`990f3f7`](https://github.com/nRF24/RF24/commit/990f3f739ece5b5f6c25dc25779a9e2c7d7b014b)\n- Merge pull request \\#238 from akatran/master by \\@TMRh20 in [#238](https://github.com/nRF24/RF24/pull/238)\n- Merge pull request \\#267 from mz-fuzzy/doc_update by \\@TMRh20 in [#267](https://github.com/nRF24/RF24/pull/267)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Remove the custom PROGRAM SPACE definitions and use avr/pgmspace! by \\@akatran in [`a8f100b`](https://github.com/nRF24/RF24/commit/a8f100b27c902019c852c20c8999ee5195d0a2e4)\n- Documentation update: by \\@martin-mat in [`3f54a0a`](https://github.com/nRF24/RF24/commit/3f54a0aec951426cc66046ccd8f4dccaab657635)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix progmem inclusion \\#252 by \\@TMRh20 in [`372562a`](https://github.com/nRF24/RF24/commit/372562a2ffb81f43504ff35fdd17ec98fbca26e8)\n- Fix path to platform specific files in library.json for platformio by \\@rnovacek in [`13ce2bb`](https://github.com/nRF24/RF24/commit/13ce2bb58b1fdfa5e55d1b32d69ef8c31582e3b6)\n- Merge pull request \\#263 from rnovacek/master by \\@TMRh20 in [#263](https://github.com/nRF24/RF24/pull/263)\n\n### <!-- 9 --> 🗨️ Changed\n\n- \\#234 by \\@TMRh20 in [`2b558d0`](https://github.com/nRF24/RF24/commit/2b558d05c8656df26fa3d4aab87c54785e94b526)\n- Change CONFIG to NRF_CONFIG per \\#212 by \\@TMRh20 in [`b250082`](https://github.com/nRF24/RF24/commit/b250082605a8fafbc866f61e21a50c351698a819)\n- Duplicate read NRF_CONFIG per \\#203 in powerUp() by \\@TMRh20 in [`9708f72`](https://github.com/nRF24/RF24/commit/9708f720ebaf372f4d90104577be5ee481ab1cc0)\n- ATTiny 861 support per \\#180 by \\@TMRh20 in [`970309d`](https://github.com/nRF24/RF24/commit/970309d18ca0ebcb7d23cedc27dc398529476e34)\n- Makefile and project structure improvements by \\@martin-mat in [`3b13827`](https://github.com/nRF24/RF24/commit/3b138276e919c96d7d578273f5b113e21d30e985)\n- Configure - cli parameters by \\@martin-mat in [`891becd`](https://github.com/nRF24/RF24/commit/891becdf89cd660db865b9ae8f5acaddc713e891)\n- Python wrapper cross-compilation refinements by \\@martin-mat in [`2c6d28a`](https://github.com/nRF24/RF24/commit/2c6d28af43654736df9ebdccb3388c648406889b)\n- Configured compiler binary to be respected in setup.py by \\@martin-mat in [`4d94f59`](https://github.com/nRF24/RF24/commit/4d94f5931338f873c327692b77063ef4df12cf0c)\n- Makefile improvemets rebasing leftovers - BBB -> SPIDEV by \\@martin-mat in [`87b5545`](https://github.com/nRF24/RF24/commit/87b554518b04a2990566ae61c61c79c134eb09f5)\n- Makefile: 'configure' target added by \\@martin-mat in [`46824af`](https://github.com/nRF24/RF24/commit/46824af345f4c567348b31d0708b6fe7d5f0be7e)\n- Linux library name backward compatibilty using simlink by \\@martin-mat in [`ef1914b`](https://github.com/nRF24/RF24/commit/ef1914b47506750d26ddbd89110700b689fea1c2)\n- Pthread switch added to compile phase by \\@martin-mat in [`0f928c0`](https://github.com/nRF24/RF24/commit/0f928c043c6cb3b8f939723c301059ff41329938)\n- SPIDEV fix non-root user segfault after startup by \\@TMRh20 in [`874fee8`](https://github.com/nRF24/RF24/commit/874fee84452fa6ee09da99139a3746754d28c276)\n- RPi Bugfix: False Hardware Failure indication by \\@TMRh20 in [`5d49fd6`](https://github.com/nRF24/RF24/commit/5d49fd6bfeb8682415bfda23e97b9d1c12b9b5e3)\n- RPi Interrupts w/SPIDEV Bugfix: Enable mutex lock by \\@TMRh20 in [`540e10d`](https://github.com/nRF24/RF24/commit/540e10d588f630ca74bf715d3542d65dee72156d)\n- Revert NRF_CONFIG in printDetails to CONFIG by \\@TMRh20 in [`406265e`](https://github.com/nRF24/RF24/commit/406265e317716f7cd8aaf98b23f1f6f744199ac6)\n- Spidev fix: don't close spidev if not open before by \\@martin-mat in [`4c52feb`](https://github.com/nRF24/RF24/commit/4c52feb23cdbf12a5e6fc82c10156825255ff802)\n- Avoid memory corruption when calling RF24::read(0) on linux machines by \\@martin-mat in [`2f2cb2b`](https://github.com/nRF24/RF24/commit/2f2cb2bbbb404a26e4c21bd5b0a5e8b22128df68)\n- Merge branch 'makefile_improvements' of https://github.com/TMRh20/RF24 into master by \\@martin-mat in [`4507fd1`](https://github.com/nRF24/RF24/commit/4507fd15c67b277e18cb953112cf5c885e7f5dec)\n- Linux_examples makefile: move libs after source files by \\@martin-mat in [`061341e`](https://github.com/nRF24/RF24/commit/061341ed5945d7808fd82ab840c6d673bee12389)\n- Makefile/configure - fix of recursive 'make clean' call when using 'make -B' by \\@martin-mat in [`6c8e302`](https://github.com/nRF24/RF24/commit/6c8e302ad0abf1a90053246ce7434216fbd17696)\n- Changed ce_pin and csn_pin to uint16_t so the library supports GPIO identifiers higher than 255 (Minnowboard) in [`eb05670`](https://github.com/nRF24/RF24/commit/eb056706e9fba23fe8f2c97c8b46727f15ef8d8c)\n- Change back to default the user setting FAILURE_HANDLING by \\@akatran in [`f6e5ee7`](https://github.com/nRF24/RF24/commit/f6e5ee7a69ed5ae2cdd5e33a817e95995c30dc8b)\n- Merge remote-tracking branch 'refs/remotes/TMRh20/master' by \\@akatran in [`a9255c8`](https://github.com/nRF24/RF24/commit/a9255c808259138d3b53df5e7db71379e694c000)\n- Merge branch 'master' of https://github.com/TMRh20/RF24 by \\@akatran in [`9e71772`](https://github.com/nRF24/RF24/commit/9e717722d83dd74554ff424b7e817409f5df0efa)\n- Update from TMRh20/master and merge with local. by \\@akatran in [`ef70a4f`](https://github.com/nRF24/RF24/commit/ef70a4fe7fc1a2c8ebcfab4189a2187c7e891f3d)\n- Update README.md by \\@akatran in [`a466b36`](https://github.com/nRF24/RF24/commit/a466b36e6c8497a59f8a52a22f63cb1af415484b)\n- Update compatibility.c by \\@akatran in [`4d52e67`](https://github.com/nRF24/RF24/commit/4d52e67a1ffa6b386494ae27c6c8e26bc5ba6610)\n- Update RF24.h - Add comments for github.io by \\@akatran in [`22a719f`](https://github.com/nRF24/RF24/commit/22a719fee33e4f9aa0d9caa4150299b2c5d4ad4d)\n- Merge remote-tracking branch 'refs/remotes/TMRh20/master' by \\@akatran in [`c4dd23b`](https://github.com/nRF24/RF24/commit/c4dd23b38a14f094fa765368780561e8d0a5eb7f)\n- Revert back (correctly) the README.md by \\@akatran in [`db715ad`](https://github.com/nRF24/RF24/commit/db715ad34eb9d82bcf27992c7eb96ceeb0224ed7)\n- Change back the RF24_config.h to be in sync with TMRh20/master by \\@akatran in [`a2c7047`](https://github.com/nRF24/RF24/commit/a2c7047be4aa1a5b366ee1da092a17163b69a943)\n- Configure - fix of wrong soname to respect major library version by \\@martin-mat in [`a296ce6`](https://github.com/nRF24/RF24/commit/a296ce68af965152d91324f79256905aba0c887a)\n- Linux config: H3 detection and gcc switches. by \\@martin-mat in [`244dfb1`](https://github.com/nRF24/RF24/commit/244dfb128ba3ea5010f7d40cea03b8dfd7ccf77b)\n- Change examples_RPi to examples_linux by \\@gitgrimbo in [`a69535d`](https://github.com/nRF24/RF24/commit/a69535d9b310c93fde884e4385d17406c89af7d0)\n- Merge pull request \\#254 from gitgrimbo/fix-examples-folder-name by \\@martin-mat in [#254](https://github.com/nRF24/RF24/pull/254)\n- Change detection for ATXMega256D3 by \\@akatran in [`abf4f29`](https://github.com/nRF24/RF24/commit/abf4f29926a8f5461199148e820effad2b96bc5d)\n- Changes to include XMEGA D3 family. by \\@akatran in [`bdc7446`](https://github.com/nRF24/RF24/commit/bdc74464249313958c910f66ff9ca957580fb6b4)\n- Merge pull request \\#251 from akatran/master by \\@Avamander in [#251](https://github.com/nRF24/RF24/pull/251)\n- Update library.properties by \\@Avamander in [`4e9f1fb`](https://github.com/nRF24/RF24/commit/4e9f1fb992c73d720cbebdd3755cd64001ffe3e2)\n\n[1.1.7]: https://github.com/nRF24/RF24/compare/v1.1.6...v1.1.7\n\nFull commit diff: [`v1.1.6...v1.1.7`][1.1.7]\n\n## New Contributors\n* \\@rnovacek made their first contribution\n* \\@gitgrimbo made their first contribution\n* \\@akatran made their first contribution\n## [1.1.6] - 2016-02-20\n\n### <!-- 1 --> 🚀 Added\n\n- Added possibility/demonstration of IRQ pin usage for RPi/Python. by \\@martin-mat in [`031d388`](https://github.com/nRF24/RF24/commit/031d3888e837fa2ef23e92e3923ddc10defbcbf8)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix GettingStarted sample by \\@SaintGimp in [`81f1c0d`](https://github.com/nRF24/RF24/commit/81f1c0d50365e612fe96f32de573d43f69983584)\n- Fix warning: C++11 requires a space between literal and identifier by \\@flavio-fernandes in [`c3a0996`](https://github.com/nRF24/RF24/commit/c3a0996b20fa17aa7f4f58630c3e516b189a6aa9)\n- Fix for \\#217 GettingStarted enhancement. by \\@wmarkow in [`d0bbfaa`](https://github.com/nRF24/RF24/commit/d0bbfaa28fe8114a46e72d76475763cc20f7e10e)\n- Fix for \\#213. by \\@wmarkow in [`5a0ec58`](https://github.com/nRF24/RF24/commit/5a0ec58516a85d77163241a824623e96a4602d6a)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Changed serial baudrate by \\@Avamander in [`842d048`](https://github.com/nRF24/RF24/commit/842d0489a67d1f2692b731133df7555e49d521a7)\n- Updated serial baudrate by \\@Avamander in [`14b8fb0`](https://github.com/nRF24/RF24/commit/14b8fb0b5acdbd68da0e01e87970ca019adfde7b)\n- Merge branch 'master' of https://github.com/TMRh20/RF24 by \\@TMRh20 in [`c9feaf5`](https://github.com/nRF24/RF24/commit/c9feaf5161b5aa928a12a45f0314b81c880ec1cb)\n- Checking for wrong return value in detachInterrupt of pthread_cancel and close. by \\@Oitzu in [`72fe373`](https://github.com/nRF24/RF24/commit/72fe373e312e5f1a44f12476fd6648494ae7418f)\n- Python wrapper now respects RPI/SPIDEV/MRAA RF24 configuration. by \\@martin-mat in [`95926b2`](https://github.com/nRF24/RF24/commit/95926b2c9aeedd1cdae011a1bb0f54f40b9a7726)\n- Merge pull request \\#200 from SaintGimp/FixGettingStarted by \\@Avamander in [`58f6d8d`](https://github.com/nRF24/RF24/commit/58f6d8dbc5d6f0e8a25a5a6dd680aa62a520fab3)\n- Merge pull request \\#210 from flavio-fernandes/topic/fix_warning by \\@Avamander in [`47435fd`](https://github.com/nRF24/RF24/commit/47435fdd3489e5550aa31487f4556da832955bfc)\n- Fixed function to clear interrupt bits first. by \\@ab316 in [`0242486`](https://github.com/nRF24/RF24/commit/0242486985504f34c11a4fb945c641bc04878b96)\n- Merge pull request \\#206 from ab316/master by \\@Avamander in [`f043cb7`](https://github.com/nRF24/RF24/commit/f043cb780db1ea519b387dbbc7339836ec314497)\n- Update library.properties by \\@Avamander in [`50cf850`](https://github.com/nRF24/RF24/commit/50cf850a87ddbf422ce1f527e901601d4d15f5ec)\n- Merge pull request \\#218 from wmarkow/217_fix by \\@Avamander in [`8c7adbc`](https://github.com/nRF24/RF24/commit/8c7adbcc4cb0de89060325ac854b2e75cdfee2b3)\n- Merge pull request \\#216 from wmarkow/213_fix by \\@Avamander in [`99ada7b`](https://github.com/nRF24/RF24/commit/99ada7ba2dd8790080d3cdb319a240d80da93523)\n- Revert \"Fix for \\#217 GettingStarted enhancement.\" by \\@Avamander in [`df225d6`](https://github.com/nRF24/RF24/commit/df225d641b0fc563b3eae15af96dc741c42092a6)\n- Merge pull request \\#219 from TMRh20/revert-218-217_fix by \\@Avamander in [`fd89aae`](https://github.com/nRF24/RF24/commit/fd89aae4f0c65874453478d3d65deff70f384196)\n\n[1.1.6]: https://github.com/nRF24/RF24/compare/v1.1.5...v1.1.6\n\nFull commit diff: [`v1.1.5...v1.1.6`][1.1.6]\n\n## New Contributors\n* \\@wmarkow made their first contribution\n* \\@flavio-fernandes made their first contribution\n* \\@ab316 made their first contribution\n* \\@SaintGimp made their first contribution\n## [1.1.5] - 2016-01-07\n\n### <!-- 1 --> 🚀 Added\n\n- Add bcm2835 lib v1.48 by \\@TMRh20 in [`18daa4c`](https://github.com/nRF24/RF24/commit/18daa4c4ddaef1c5bb3048c0a891c45030955c46)\n- Added comments to RPi interrupt files. by \\@Oitzu in [`2bb6f32`](https://github.com/nRF24/RF24/commit/2bb6f325f00b3427a0dc850c8e23798c05a1ffe9)\n- Add mutex locking to SPI functions for RPi by \\@TMRh20 in [`715edc5`](https://github.com/nRF24/RF24/commit/715edc5e39ca04e352e8d6c26784972c13b9a1e8)\n- Add 'static' to void in spi.h by \\@TMRh20 in [`ed9ae08`](https://github.com/nRF24/RF24/commit/ed9ae08dbab6036fd42b1376462d74a94cf90bf4)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Update RPi call_response_int2 example by \\@TMRh20 in [`bf06db9`](https://github.com/nRF24/RF24/commit/bf06db96b94c582360cee454a1210f5e4851b5ad)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fix Warning. ‘void* interruptHandler(void*)’ declared ‘static’ but never defined. by \\@Oitzu in [`409cbf7`](https://github.com/nRF24/RF24/commit/409cbf78ee5e779f3abb2c2cc6a3f22abc809fba)\n- Fixes for last commit by \\@TMRh20 in [`a57fafe`](https://github.com/nRF24/RF24/commit/a57fafe017961b8cfdef2ccac3d764721c42e62d)\n- Fix per \\#183 by \\@TMRh20 in [`9e68f9e`](https://github.com/nRF24/RF24/commit/9e68f9e133f426322d9b512239fc952b2dd3b1b9)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Initial commit for interrupts based on wiringPi. by \\@Oitzu in [`67d0285`](https://github.com/nRF24/RF24/commit/67d0285fc5ceae2b6f50f453ee9926490e629bd4)\n- Merged TMRh20's changes. by \\@Oitzu in [`f4a6073`](https://github.com/nRF24/RF24/commit/f4a6073bc9a34717d7c09d07bbb466bf6d32c6c9)\n- Moving pthread to shared linker flags. by \\@Oitzu in [`e83bc9a`](https://github.com/nRF24/RF24/commit/e83bc9affb30c6a1c90bf63de72d19aabcd47162)\n- Merge pull request \\#173 from Oitzu/master by \\@TMRh20 in [`a381194`](https://github.com/nRF24/RF24/commit/a381194bf0a5e1e1ecb06a7f0c502791e049d77c)\n- Mutex handling for interrupts on RPi by \\@TMRh20 in [`243e25f`](https://github.com/nRF24/RF24/commit/243e25f23a6d3ff4f3d57ec2f89419ac84d36c16)\n- Deadlocks due to RPi SPI mutex code by \\@TMRh20 in [`9a5ea80`](https://github.com/nRF24/RF24/commit/9a5ea80cacf9f50cce0b1600da4b5a55596b1011)\n- Move interrupt examples, add new int examples by \\@TMRh20 in [`2c4d199`](https://github.com/nRF24/RF24/commit/2c4d1991b1a314e7f0ad5a3d808761e36002c2b5)\n- Initial commit RPI-SPI-Transactions. by \\@Oitzu in [`e1fe438`](https://github.com/nRF24/RF24/commit/e1fe43814cca7af57b7515f999f70356b51fd3b1)\n- Implement detachInterrupt method. See \\#173 by \\@Oitzu in [`b615951`](https://github.com/nRF24/RF24/commit/b615951a3d59ed258b61daa40f3a090b02cb6a00)\n- Minor chgs to mirror Arduino SPI transaction API by \\@TMRh20 in [`f285fde`](https://github.com/nRF24/RF24/commit/f285fde257438e7fe482ff4c6dc03f0de185b7e5)\n- One more per \\#183 by \\@TMRh20 in [`d37d030`](https://github.com/nRF24/RF24/commit/d37d030495483a2c6522b2f259b46974d3d0f623)\n- Merge remote-tracking branch 'refs/remotes/origin/Interrupts' by \\@TMRh20 in [`3e8147a`](https://github.com/nRF24/RF24/commit/3e8147a1a150f59908d3e2bb43719193d54a54fc)\n- RPI2 autodetection by \\@yozik04 in [`d7cacdc`](https://github.com/nRF24/RF24/commit/d7cacdc20bbb89632f8b9ee1a1bba439cf80de79)\n- RPI2 autodetection in examples by \\@yozik04 in [`b417d58`](https://github.com/nRF24/RF24/commit/b417d58ce10cf4f18bcffa8b6869c8b53d729e4f)\n- Merge pull request \\#179 from yozik04/master by \\@TMRh20 in [`1c78dd0`](https://github.com/nRF24/RF24/commit/1c78dd007220687f6c262b970c7b7e65819ddece)\n- Update library.properties by \\@Avamander in [`8115a34`](https://github.com/nRF24/RF24/commit/8115a3436f37685e83f4ddde1eb26ba1962829ea)\n\n[1.1.5]: https://github.com/nRF24/RF24/compare/v1.1.4...v1.1.5\n\nFull commit diff: [`v1.1.4...v1.1.5`][1.1.5]\n\n## New Contributors\n* \\@yozik04 made their first contribution\n* \\@Oitzu made their first contribution\n## [1.1.4] - 2015-12-14\n\n### <!-- 3 --> 🗑️ Removed\n\n- Doc Update: Add current info to news by \\@TMRh20 in [`f6fa0be`](https://github.com/nRF24/RF24/commit/f6fa0be4931149050d340695a15ddaa15afcf124)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fixed inconsistent documentation, added Tinyx313 pin map by \\@zador-blood-stained in [`b5228f3`](https://github.com/nRF24/RF24/commit/b5228f3775bb520e90fe40aff49b1f28b47cf7f7)\n- Fix broken transfer example by \\@TMRh20 in [`13c069c`](https://github.com/nRF24/RF24/commit/13c069caf1e74021da0517d349741d3cb2fb1e7d)\n\n### <!-- 8 --> 📝 Documentation\n\n- Merge pull request \\#155 from zador-blood-stained/master by \\@TMRh20 in [`4554f73`](https://github.com/nRF24/RF24/commit/4554f739e7087852a7375b29172df7e5df03838c)\n- Update .h file per doc changes by \\@TMRh20 in [`e192580`](https://github.com/nRF24/RF24/commit/e192580383d332bb7e2398a7ae057c41b1918d87)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Python3 support added by \\@martin-mat in [`cda3e18`](https://github.com/nRF24/RF24/commit/cda3e18b0d011fca4e65100918ab6bb3477655b1)\n- Merge pull request \\#164 from mz-fuzzy/python3 by \\@TMRh20 in [`90dd53e`](https://github.com/nRF24/RF24/commit/90dd53e1abb68c72bf5035a8c9497d83189fb680)\n- Update library.properties by \\@Avamander in [`e888f55`](https://github.com/nRF24/RF24/commit/e888f55864485f4d919f7753ddb479702264fb1f)\n\n[1.1.4]: https://github.com/nRF24/RF24/compare/v1.1.3...v1.1.4\n\nFull commit diff: [`v1.1.3...v1.1.4`][1.1.4]\n\n## [1.1.3] - 2015-10-31\n\n### <!-- 3 --> 🗑️ Removed\n\n- ESP8266 printDetails, Docs by \\@TMRh20 in [`aeb8b42`](https://github.com/nRF24/RF24/commit/aeb8b427304af7c5d45e03330a013ae98f895040)\n- Removed usage of hardcoded SS pins by \\@zador-blood-stained in [`1376fbd`](https://github.com/nRF24/RF24/commit/1376fbd8ce63c730068d2b6c7d160b990b497a3d)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Update gettingstarted.cpp by \\@cguzmanceti in [`f3cc137`](https://github.com/nRF24/RF24/commit/f3cc137cb669f5ae61ecd45c89d7e4946c87d5d8)\n- Merge pull request \\#153 from cguzmanceti/patch-1 by \\@TMRh20 in [`0bf4998`](https://github.com/nRF24/RF24/commit/0bf499884f6c1a2cd6e251b70c211cd596a478ea)\n- Update gettingstarted_call_response.cpp by \\@cguzmanceti in [`c5fdf1b`](https://github.com/nRF24/RF24/commit/c5fdf1be64606b11dd5f07ba05204d38c4768102)\n- Merge pull request \\#154 from cguzmanceti/patch-2 by \\@TMRh20 in [`dfb2395`](https://github.com/nRF24/RF24/commit/dfb2395557ad93d659018dea5efd91e0bfeb46e4)\n- ATTiny2313/4313 support by \\@zador-blood-stained in [`ac0ff44`](https://github.com/nRF24/RF24/commit/ac0ff44a90d80d632aad3fba983c5020b5773535)\n- Merge pull request \\#152 from zador-blood-stained/master by \\@TMRh20 in [`07e8362`](https://github.com/nRF24/RF24/commit/07e83623032c5aeb78b961cad4fe5491092860ef)\n- Change printf to cout in RPi examples by \\@TMRh20 in [`3652890`](https://github.com/nRF24/RF24/commit/365289022b60a951d99442f138daebfe330924bf)\n\n[1.1.3]: https://github.com/nRF24/RF24/compare/v1.1.2...v1.1.3\n\nFull commit diff: [`v1.1.2...v1.1.3`][1.1.3]\n\n## New Contributors\n* \\@cguzmanceti made their first contribution\n* \\@zador-blood-stained made their first contribution\n## [1.1.2] - 2015-10-20\n\n### <!-- 9 --> 🗨️ Changed\n\n- Delete FAQ by \\@Avamander in [`69c1f3c`](https://github.com/nRF24/RF24/commit/69c1f3cc402e51e632e456f592dfeb3351dd6c6c)\n- Update library.properties by \\@Avamander in [`a045c5a`](https://github.com/nRF24/RF24/commit/a045c5ac3c3f3304b793d8baeffa066d2a88e536)\n- Made possible many examples to run in 512 bytes ram chips, fixed few typos, missing F() macro calls and other minor improvements by \\@fab672000 in [`0483d36`](https://github.com/nRF24/RF24/commit/0483d3604116f0ae79cc17ba0d522f58b968333c)\n- Restored back multicast pingpair example from previous maniacbug  fork by \\@fab672000 in [`aab3a52`](https://github.com/nRF24/RF24/commit/aab3a529f898ec40e3d62510cd535d5e2d8a5ac4)\n- Merge pull request \\#141 from fab672000/master by \\@Avamander in [`46ccceb`](https://github.com/nRF24/RF24/commit/46ccceb65f98dd505b9eb34ce4d5f4fd56c84d5d)\n- Update library.properties by \\@Avamander in [`7a44681`](https://github.com/nRF24/RF24/commit/7a446813de8278117920aa8c0ef06da599a94280)\n\n[1.1.2]: https://github.com/nRF24/RF24/compare/v1.1.1...v1.1.2\n\nFull commit diff: [`v1.1.1...v1.1.2`][1.1.2]\n\n## New Contributors\n* \\@fab672000 made their first contribution\n## [1.1.1] - 2015-10-01\n\n### <!-- 9 --> 🗨️ Changed\n\n- Increment version - test by \\@TMRh20 in [`b305bb4`](https://github.com/nRF24/RF24/commit/b305bb4bba4c2a3db65f07f5c21d67923508d9df)\n\n[1.1.1]: https://github.com/nRF24/RF24/compare/v1.0.1...v1.1.1\n\nFull commit diff: [`v1.0.1...v1.1.1`][1.1.1]\n\n## [1.0.1] - 2015-10-01\n\n### <!-- 9 --> 🗨️ Changed\n\n- Increment library.properties by \\@TMRh20 in [`c98f396`](https://github.com/nRF24/RF24/commit/c98f39633070d02c3a1142094114390c93b6eb14)\n- Merge branch 'Updates' by \\@TMRh20 in [`a4f412c`](https://github.com/nRF24/RF24/commit/a4f412c37f9178f3bee449a92d985398c53ae492)\n\n[1.0.1]: https://github.com/nRF24/RF24/compare/v1.0...v1.0.1\n\nFull commit diff: [`v1.0...v1.0.1`][1.0.1]\n\n## [1.0] - 2015-10-01\n\n### <!-- 1 --> 🚀 Added\n\n- Added by \\@maniacbug in [`de083c9`](https://github.com/nRF24/RF24/commit/de083c964d9aeeb9fda7485c39fed27443cd617c)\n- Added a small documentation build system by \\@maniacbug in [`0b89d37`](https://github.com/nRF24/RF24/commit/0b89d37f19176f14fbbb8e35bced7c54b5452729)\n- Added new star-topology example by \\@maniacbug in [`37d8e8b`](https://github.com/nRF24/RF24/commit/37d8e8b17d4672d297f3ffe1d031008f862a2ef4)\n- Added an indication of which pipe a message came from.  Fixed a bug where pipes 2+ were not by \\@maniacbug in [`c8ed556`](https://github.com/nRF24/RF24/commit/c8ed556aba2259a2c658eecf9ef38494918647ce)\n- Added new sample, based on pingpair by \\@maniacbug in [`997140e`](https://github.com/nRF24/RF24/commit/997140e0d46b6ec98da293a6a280bfd413bdb050)\n- Added ack payload.  Added a sample using pingpair as a base with minimal changes. by \\@maniacbug in [`79628e7`](https://github.com/nRF24/RF24/commit/79628e7849cc3b9f92bc7203ed3d8fbe49d8e537)\n- Added powerDown(). by \\@maniacbug in [`b697fd4`](https://github.com/nRF24/RF24/commit/b697fd4e79453c2450b88a441e2e1a36e78442fc)\n- Added server time to printout.  Power disable/enable before/after sleeping.  Changed timer to 4s. by \\@maniacbug in [`ee4568e`](https://github.com/nRF24/RF24/commit/ee4568ede4108e19cfd5426841a7dd20c489e3c3)\n- Added a full constructor for payload_t by \\@maniacbug in [`4f6c4c9`](https://github.com/nRF24/RF24/commit/4f6c4c909e3534dcf63051d49fcee1a3237d13f8)\n- Added relay role, and tweaked base to work with it by \\@maniacbug in [`2e7ea67`](https://github.com/nRF24/RF24/commit/2e7ea6709325e7a517ff5dadbdf993e4aa7d302e)\n- Added self-healing ping offset to leaf node.  Made timeout more parallelized by \\@maniacbug in [`7b71380`](https://github.com/nRF24/RF24/commit/7b7138027893b1e31ba49398e314a64890a908ad)\n- Added more documentation by \\@maniacbug in [`6ec7640`](https://github.com/nRF24/RF24/commit/6ec7640a7a6f9cccacb313a44a6516fef6457148)\n- Added extra debugging readability by \\@maniacbug in [`badc86c`](https://github.com/nRF24/RF24/commit/badc86cfe0bc247fab6a0bec2874413b9dc7e443)\n- Added carrier detect and auto-ack disable, and an example to use it by \\@maniacbug in [`bee284f`](https://github.com/nRF24/RF24/commit/bee284f9c5478880a78c019dd1f565e4fc1ffd2c)\n- Added carrier detect and auto ack enable/disable by \\@maniacbug in [`a6e7444`](https://github.com/nRF24/RF24/commit/a6e7444059c516115a31f988e657be5672a1ed71)\n- Added setDataRate() by \\@maniacbug in [`4131420`](https://github.com/nRF24/RF24/commit/4131420de79456be80e218523bf1c3c0ab36b2a1)\n- Added 3rd FTDI port for my own use by \\@maniacbug in [`af9261c`](https://github.com/nRF24/RF24/commit/af9261cf930da1733c43466a2e88a34556ed281f)\n- Added setCRCLength by \\@maniacbug in [`34efd5a`](https://github.com/nRF24/RF24/commit/34efd5ac94a5c5fd173a26fd11d5ef9b50c25b65)\n- Added a new example by \\@maniacbug in [`ad99581`](https://github.com/nRF24/RF24/commit/ad99581285b9097fd90de288e73a97843a1091ee)\n- Added led_remote to docs by \\@maniacbug in [`a62338f`](https://github.com/nRF24/RF24/commit/a62338f3a7a855aca9f8af7cd7d3479faa7f149e)\n- Add RF_SETUP to printDetails by \\@maniacbug in [`748fde2`](https://github.com/nRF24/RF24/commit/748fde239b8b363bad0509bcf8a04ab2c7c53c81)\n- Added Jamfile for led_remote by \\@maniacbug in [`8d5f020`](https://github.com/nRF24/RF24/commit/8d5f020c78d61a118c3e00be2f1dea43a727d667)\n- Add dynpd/feature to printDetails by \\@maniacbug in [`04e7277`](https://github.com/nRF24/RF24/commit/04e72775bb4d92e39ea51bc63b0018dd6eaff5bb)\n- Added setRetries() by \\@maniacbug in [`a22906f`](https://github.com/nRF24/RF24/commit/a22906f9617215f0448daa3e9c6c871e0ab0c9b1)\n- Adding new example pingpair_dyn for dynamic payloads by \\@maniacbug in [`98fbd44`](https://github.com/nRF24/RF24/commit/98fbd44111f11063b4c4cfbcf642dbaac00159d0)\n- Added working test by \\@maniacbug in [`77411b4`](https://github.com/nRF24/RF24/commit/77411b4ec57839b55b0dfb25c0296e0a8c4b3f9f)\n- Added a test script to control the test, using python. by \\@maniacbug in [`22b4c55`](https://github.com/nRF24/RF24/commit/22b4c558cd9c5c922ca84d7781e058d53d47bc9c)\n- Added a second test configuration by \\@maniacbug in [`c13db8f`](https://github.com/nRF24/RF24/commit/c13db8f42db76a78ba79fa244271d6beba1c425c)\n- Added 3rd test case, static payload by \\@maniacbug in [`d436895`](https://github.com/nRF24/RF24/commit/d436895f7c97a4c862299431bbad29d5f939c6f2)\n- Adds constantness to method declarations and arguments where possible. by \\@gcopeland in [`b1a7dc7`](https://github.com/nRF24/RF24/commit/b1a7dc7d54d51d5ffa7291ecbd6d9dd0f2e53b64)\n- Added two default values to the RF24 constructor; speed and channel. by \\@gcopeland in [`aac2c3d`](https://github.com/nRF24/RF24/commit/aac2c3dba33b163521dc6a00bdb7d81761af1fbc)\n- Adds explicit CRC width and PA level. Changes hardware initialization by \\@gcopeland in [`1581647`](https://github.com/nRF24/RF24/commit/158164746b59d32eb10a8017e1ad03b1f858df86)\n- Added another test of a simpler calling pattern.  No IRQ, no dynamic payload or ack packet. by \\@maniacbug in [`89180f2`](https://github.com/nRF24/RF24/commit/89180f284404e0d598675b8c0ccc5edd301f89b7)\n- Add getDataRate, add DISABLED to data rate enum by \\@maniacbug in [`8f17e63`](https://github.com/nRF24/RF24/commit/8f17e63a22ac01f03a3923b139799baec8256443)\n- Added back in gcopeland's additional debugging info, with readable values. by \\@maniacbug in [`4c21ab6`](https://github.com/nRF24/RF24/commit/4c21ab6ad099c193f1d47822c4e13fc9c77be9d0)\n- Added FAQ page to docs by \\@maniacbug in [`7aeaf0d`](https://github.com/nRF24/RF24/commit/7aeaf0d37329db116e8e363098f61b0b27bbf132)\n- Added more information about whether the write was successful. by \\@maniacbug in [`dceef7b`](https://github.com/nRF24/RF24/commit/dceef7b45ec2ae29025089fea2fa9dcdf411aea0)\n- Added new example to go along with Getting Started tutorial blog post. by \\@maniacbug in [`3a2d94b`](https://github.com/nRF24/RF24/commit/3a2d94b698c463f0b3168d7080ea1398bc7a6303)\n- Added new example to documentation by \\@maniacbug in [`d437163`](https://github.com/nRF24/RF24/commit/d4371639e612e8c74a9dcfb3148118439a6a9dac)\n- Added example for Maple by \\@maniacbug in [`a6bf911`](https://github.com/nRF24/RF24/commit/a6bf911f5a99253c7b718d4c119f5a65d4f59d59)\n- Added new jamfile to this example by \\@maniacbug in [`19fa395`](https://github.com/nRF24/RF24/commit/19fa3954c0d452f43ef9b8e4b8afca47d8b98a41)\n- Added \\#error to printf for examples that require Arduino by \\@maniacbug in [`26ea458`](https://github.com/nRF24/RF24/commit/26ea4583cdebbc219b5f4460096044d911874e9d)\n- Add isValid by \\@maniacbug in [`ebcd0d1`](https://github.com/nRF24/RF24/commit/ebcd0d1d0b3061fcb57444e1dbe5829ef25705cd)\n- Added writeFast() cmd - fill FIFO or return 0 by \\@TMRh20 in [`281ace4`](https://github.com/nRF24/RF24/commit/281ace4ba24fb9c0cf814572c72752eebd3b8d95)\n- Add powerUp to begin(), increase powerUp delay by \\@TMRh20 in [`3455e48`](https://github.com/nRF24/RF24/commit/3455e489f4c88504bd65b6b5edf10282d5a47ab3)\n- Add optional write timeout/failure handling by \\@TMRh20 in [`327f060`](https://github.com/nRF24/RF24/commit/327f0609cf7b52b70accccc175b5809dd5074704)\n- Add ATTiny example, change Minimal define by \\@TMRh20 in [`d9c7df3`](https://github.com/nRF24/RF24/commit/d9c7df3ac9f4fb40376f6e299d833ae6add6802a)\n- Add rxFifoFull() function, Only flush tx w ack_plds by \\@TMRh20 in [`82629d4`](https://github.com/nRF24/RF24/commit/82629d4d3716f05be677323fd73c7a1df3308fd9)\n- Add RPi B+ info to main examples and readme by \\@TMRh20 in [`63b672c`](https://github.com/nRF24/RF24/commit/63b672c92963426377f722bfbc0e1c30038d6b62)\n- Add readme for python wrapper by \\@TMRh20 in [`cd59648`](https://github.com/nRF24/RF24/commit/cd596482156afff4f2f5e8a65d3ae0d897015a22)\n- Add new RPi installer info to readme by \\@TMRh20 in [`6bf37cd`](https://github.com/nRF24/RF24/commit/6bf37cdf5523c61d91a3ee09260f94ef26034b09)\n- Adding SPI enum to RPi python wrapper by \\@martin-mat in [`dcdc35d`](https://github.com/nRF24/RF24/commit/dcdc35d70deaeba951769492213636d15d9581ec)\n- Add changes from doc update by \\@TMRh20 in [`0b2d8dd`](https://github.com/nRF24/RF24/commit/0b2d8ddb2dbe996b60716482860a67407de6537b)\n- Adding LittleWire support to RF24 by \\@lnxbil in [`9b9a573`](https://github.com/nRF24/RF24/commit/9b9a57348d6fe3b9a1c238bc5598c5f283e524e7)\n- Address fix for attiny example sketch by \\@ax7884 in [`ba161a3`](https://github.com/nRF24/RF24/commit/ba161a3b25388988b178570cc859894df2d1d186)\n- Support RPi 2 w/bcm2835.c version 1.39 by \\@mannkind in [`25d379c`](https://github.com/nRF24/RF24/commit/25d379c187d673c775a7d68702f6f811405f1bdc)\n- Add updated makefile for latest changes by \\@TMRh20 in [`f420557`](https://github.com/nRF24/RF24/commit/f4205573b4c40907318e9ddbbabf094c55b3270d)\n- Add include for nanosleep \\#69 by \\@TMRh20 in [`30ef8dc`](https://github.com/nRF24/RF24/commit/30ef8dc58aa19b0d1ba0819b7e4e18bd8b5a3071)\n- Add a few links to RF24 docs for related projects by \\@TMRh20 in [`c83f0f2`](https://github.com/nRF24/RF24/commit/c83f0f26ff65c66754037ce959a3485c55404e02)\n- Added ```busNo``` passing to mraa::Spi() object creation call so that SPI bus number now can be defined by user when instatiating RF24 object by \\@prophet-roshak in [`dd4b86a`](https://github.com/nRF24/RF24/commit/dd4b86aaac26b3c59912ebd93e8912ce208aee88)\n- Add generic pin config for RPi, minor doc changes by \\@TMRh20 in [`4cb2c5c`](https://github.com/nRF24/RF24/commit/4cb2c5c5a737221ed8855c20c495143c0da0bddb)\n- Add RPi pin config to main page per \\#89 by \\@TMRh20 in [`7fdc708`](https://github.com/nRF24/RF24/commit/7fdc708b4ff912825b513210142c8b4bd387bd3f)\n- Add SPI transaction code from Ralph Doncaster by \\@TMRh20 in [`b1b8cad`](https://github.com/nRF24/RF24/commit/b1b8caddfe02b0876fc928fbadab2e6f20db4e2c)\n- Add transaction code to remaining functions by \\@TMRh20 in [`64da088`](https://github.com/nRF24/RF24/commit/64da08852c1537eab7e10314870e9943fe5172fa)\n- Added getChannel Method to allow for verification of the configured channel by \\@komby in [`c4d222c`](https://github.com/nRF24/RF24/commit/c4d222ce0db216b7e1c372c587e9b568c6af4f79)\n\n### <!-- 3 --> 🗑️ Removed\n\n- Removed the line that set the payload size to 8 in begin().  Reduced some ints to uint8_t.  Added some more debugging info. by \\@maniacbug in [`dfb2faa`](https://github.com/nRF24/RF24/commit/dfb2faa8412ac7c64abd4da8409301c622c64ed1)\n- Removed ping/pong.  Now tx just sends and rx just sends ack payload by \\@maniacbug in [`38392fa`](https://github.com/nRF24/RF24/commit/38392fa5f46e945afbfe7e7962a7d94702e9a727)\n- Removed 'ackpacket' example.  It was never working by \\@maniacbug in [`f9b664c`](https://github.com/nRF24/RF24/commit/f9b664cd34834885eb383fd166921239e39f065e)\n- Removed power_all/enable/disable, useless.  Added a multiples of the wakeup. by \\@maniacbug in [`4ef1f4b`](https://github.com/nRF24/RF24/commit/4ef1f4b8e656c1e7b8b98f455517879a56c6a9a2)\n- Removed unused file by \\@maniacbug in [`ce881ba`](https://github.com/nRF24/RF24/commit/ce881ba0dcd5f06fc302c55cd02e4bdc52b87051)\n- Removed method argument const qualifiers. by \\@gcopeland in [`85c0f57`](https://github.com/nRF24/RF24/commit/85c0f57e3fa180cf047704cd1ed34eecb82f8b51)\n- Merge branch 'p_enable' into constremove by \\@gcopeland in [`542c46c`](https://github.com/nRF24/RF24/commit/542c46c0c68eb67a5e9e1f3f970cc27f4e416ac1)\n- Merge gcopeland/constremove by \\@maniacbug in [`602d962`](https://github.com/nRF24/RF24/commit/602d96264adcf6bc003cd7a7902ce0ae200cffae)\n- SPI bus speed divider to 4, suggested by Greg Copeland.  Also removed duplicated spi setup out of begin(), as it's all in csn() by \\@maniacbug in [`a28e236`](https://github.com/nRF24/RF24/commit/a28e2361fc1bab48117cff68d07ab9ee9951948f)\n- Refactor pingpair_test to remove all serial io from within the irq handler, as necessitated by Arduino 1.0 by \\@maniacbug in [`dc48235`](https://github.com/nRF24/RF24/commit/dc48235343acae2e23a16278b24aa96665fea04b)\n- Remove prog_char, for compliance with gcc 4.6.1 by \\@maniacbug in [`f6e59b9`](https://github.com/nRF24/RF24/commit/f6e59b9de8d8424c3a1daecfbdafdcbfcd85ccac)\n- High Speed Data Transfers/Optimization by \\@TMRh20 in [`4cf0fb0`](https://github.com/nRF24/RF24/commit/4cf0fb0c5adc305d40547f42366161e809122b94)\n- - Slight modification to reUseTX cmd by \\@TMRh20 in [`77b1e2c`](https://github.com/nRF24/RF24/commit/77b1e2c1400e755d13bfd9345bd235075b056ad4)\n- Ext. timeout hang, examples, board support by \\@TMRh20 in [`2f7e448`](https://github.com/nRF24/RF24/commit/2f7e4489bad411ee79f068b593c83c59c1f8c515)\n- RPi SPI functionality and RPi fix for startWrite by \\@TMRh20 in [`6530f95`](https://github.com/nRF24/RF24/commit/6530f954a18731e213efeb967265b612b1087ac5)\n- Due & RPi bugfix - \\#9 - root cause resolved by \\@TMRh20 in [`2869663`](https://github.com/nRF24/RF24/commit/2869663f7fcdb5389a2c717b704a413944de1b8a)\n- Modify write,startWrite, remove rx buffer flushes by \\@TMRh20 in [`1d18015`](https://github.com/nRF24/RF24/commit/1d1801500dc6135eede3921008c4f3d381a80252)\n- Removed wrong flush() on RPi by \\@TMRh20 in [`589b2c7`](https://github.com/nRF24/RF24/commit/589b2c76fd7c2cc81f91780c776d996c269e9896)\n- Update the pin layout table and consolidate the RPi readme files. by \\@reixd in [`1e8de6e`](https://github.com/nRF24/RF24/commit/1e8de6e88f98a68868f23565ddc6cc524f5eca00)\n- Remove unnecessary delay by \\@TMRh20 in [`a12cdca`](https://github.com/nRF24/RF24/commit/a12cdca388a38066eca7cc92d7d4ea7c72fc6bf6)\n- Update readme for installer by \\@TMRh20 in [`91c6d21`](https://github.com/nRF24/RF24/commit/91c6d214b8030555efb326b555391a46eba30cab)\n- Fixes and Improvements from large round of testing by \\@TMRh20 in [`4d5f014`](https://github.com/nRF24/RF24/commit/4d5f014c0efabe2d638b928eb95b07894531b569)\n- Fix 'features'? per https://github.com/dsbaha \\#56 by \\@TMRh20 in [`39a6385`](https://github.com/nRF24/RF24/commit/39a63859b0f83b5128eb8377a1d6c9abfcbb20ce)\n- - reset config register to default by \\@dsbaha in [`8d5e869`](https://github.com/nRF24/RF24/commit/8d5e8695ceae08d742472c66eb04333cfb89295d)\n- Fix bugs in transfer example by \\@TMRh20 in [`0066eec`](https://github.com/nRF24/RF24/commit/0066eece027f84d4478b4d7aff40af439097eb22)\n- Remove trailing slash from docs/Prevent warning by \\@TMRh20 in [`e900a9c`](https://github.com/nRF24/RF24/commit/e900a9cc5b097f669e31159f6e964c4b2a9c37dd)\n- SPI/GPIO fixes/changes for MRAA and SPIDEV by \\@TMRh20 in [`c1bb29c`](https://github.com/nRF24/RF24/commit/c1bb29c74b4cb2c1f13658665160fb8f247bcef9)\n- Destructor for Linux only, replace bell with null by \\@TMRh20 in [`e3f4a6b`](https://github.com/nRF24/RF24/commit/e3f4a6ba1879b8bb30e9b54d57c353d0fa42a34d)\n- Fix/Changes for \\#111 & \\#112 by \\@TMRh20 in [`5acbcbd`](https://github.com/nRF24/RF24/commit/5acbcbd2d1d297804aecdf4f42e82ae2fde33526)\n\n### <!-- 4 --> 🛠️ Fixed\n\n- Fixed a bug where it was writing to the wrong pipe by \\@maniacbug in [`93f5cfa`](https://github.com/nRF24/RF24/commit/93f5cface0ebc0b82801ab7741b952578af37f7c)\n- Fixed relay writing pipe. Added id to payload. Made Ping timing a consistent gap by \\@maniacbug in [`52ab9e0`](https://github.com/nRF24/RF24/commit/52ab9e0081752725fa2c2aa6b8a823a76c59bc9e)\n- Fixed a bug in setDataRate by \\@maniacbug in [`731c472`](https://github.com/nRF24/RF24/commit/731c472abc08540a7cb85cd72819ed3930f1f95f)\n- Fixed led_remote in docs by \\@maniacbug in [`bec84a7`](https://github.com/nRF24/RF24/commit/bec84a79075b86c71695e668c5cc281c81d4ec96)\n- Fix bug in openReadingPipe which disallowed pipe 5 by \\@maniacbug in [`6e6264b`](https://github.com/nRF24/RF24/commit/6e6264be43e9e95c9b25838ea16377650e8fc215)\n- Fixed unused parameter warning by \\@maniacbug in [`14dcc34`](https://github.com/nRF24/RF24/commit/14dcc343dc457fa4b6752969f5b7505acab0b907)\n- Fixed bug of not including name.  Also added extra tab on short strings. by \\@maniacbug in [`91df6f6`](https://github.com/nRF24/RF24/commit/91df6f6df5d6d9b2b181e486b1a6141ed48e5033)\n- Fix bug in setDataRate by \\@maniacbug in [`8701d82`](https://github.com/nRF24/RF24/commit/8701d82615a4e4c138b4b6dcc0dbe9d50efc04a5)\n- Fixed missing includes, thanks to Spoiler for reporting the problem. by \\@maniacbug in [`a783ed3`](https://github.com/nRF24/RF24/commit/a783ed38da19d781a3863215d47a2e59a0b2754e)\n- Fixed bug in setcrclength and setdatarate which was mishandling the bits by \\@maniacbug in [`1517f12`](https://github.com/nRF24/RF24/commit/1517f1249de1713d0ec26c37476cbf2bf4291b58)\n- Fix up some doc bugs by \\@maniacbug in [`fcc3dfb`](https://github.com/nRF24/RF24/commit/fcc3dfbedb2e7047cd1f7f5931bea553c2ef1980)\n- Fix bugs.  Ack payload available was broken since interrupts went in.  stREtries was missing since the gcopeland merge. by \\@maniacbug in [`df32840`](https://github.com/nRF24/RF24/commit/df328408f79962adaed44194fef99e4c7426f41c)\n- Fix bug in which static payloads were broken by \\@maniacbug in [`af00a61`](https://github.com/nRF24/RF24/commit/af00a6155596b7728884a2759d11a02b9e54901e)\n- Fixed a bug when pipe 0 was NOT being used for writing. by \\@maniacbug in [`cc7e0a2`](https://github.com/nRF24/RF24/commit/cc7e0a2f19264852847edd42c4231584da8ec104)\n- Fixed bug in scanner display, thanks to David Bath.  Also upgraded to latest Jam toolchain and moved pins over to the new GettingStarted defaults. by \\@maniacbug in [`5726c16`](https://github.com/nRF24/RF24/commit/5726c1622a1dc4d12d9a71d90e3dce167dba5e27)\n- Fix bug in pingpair Jamfile by \\@maniacbug in [`76f79e6`](https://github.com/nRF24/RF24/commit/76f79e62ed1fa28887019aca9505196926bc9a3e)\n- Fix Jamfile for proper ordering of libraries by \\@maniacbug in [`33e59af`](https://github.com/nRF24/RF24/commit/33e59af725074afd19e0e70f08c0711779f38b4c)\n- Fix bug introduced in the move to PROGMEM.  Props to \\@basilrx for finding this.  Also added a test case to demonstrate the bug, and guard against more like it in the future. by \\@maniacbug in [`2c97186`](https://github.com/nRF24/RF24/commit/2c9718632983e4ca563f559558cdede2358ccb35)\n- Standby after regular write cmd by \\@TMRh20 in [`bcd48f2`](https://github.com/nRF24/RF24/commit/bcd48f2f471e0c9536b30b0be7ead0f62f163f5a)\n- Fixed link by \\@TMRh20 in [`4d8da2f`](https://github.com/nRF24/RF24/commit/4d8da2f01de1d5e4ed2354d28f46c0ffec2a49d7)\n- TxStandBy hang. Updated Transfer example by \\@TMRh20 in [`f3b3fb1`](https://github.com/nRF24/RF24/commit/f3b3fb1f444f0e0c6d32d4731860d966d8779272)\n- Missing byte with due RX by \\@TMRh20 in [`d28323a`](https://github.com/nRF24/RF24/commit/d28323aadca8fa626315a9748c370d7e5a05dc64)\n- Due write() issues. by \\@TMRh20 in [`afdb084`](https://github.com/nRF24/RF24/commit/afdb084daf9fce9c8792281c7fd17683ce2ce1e2)\n- Return value of write, writefast by \\@TMRh20 in [`5fabf26`](https://github.com/nRF24/RF24/commit/5fabf2608a64572876e5b7b94a0e7e66b392cd8c)\n- Fix typo in readme by \\@TMRh20 in [`cd8bb19`](https://github.com/nRF24/RF24/commit/cd8bb19dc3aa63d30b4e474ce95b8224f0fa71c2)\n- Fix for https://github.com/TMRh20/RF24/issues/8 by \\@TMRh20 in [`57521fb`](https://github.com/nRF24/RF24/commit/57521fbcc43e0a13cd40c2eff897cf5394441348)\n- Fix for \\#12 by \\@TMRh20 in [`ecda0fa`](https://github.com/nRF24/RF24/commit/ecda0fad53ba897089efb46c045505b2f0fa749c)\n- Static payload size bug prev introduced by \\@TMRh20 in [`e8a63c0`](https://github.com/nRF24/RF24/commit/e8a63c03712ae99b671718c6dfee62e7afd5c106)\n- RPi dynamic ACK issue by \\@TMRh20 in [`9e12c23`](https://github.com/nRF24/RF24/commit/9e12c23683b57a5979572d9bf8e8386f14d7f928)\n- Multicast pipe0 address handling issue by \\@TMRh20 in [`9da3eac`](https://github.com/nRF24/RF24/commit/9da3eac0941563d9e9828c8377c9a88a161cd855)\n- Fix display of pin info for ATTiny by \\@TMRh20 in [`23532cf`](https://github.com/nRF24/RF24/commit/23532cfe4a8b728f77d4e3eca624868a2b757dcb)\n- Fix \"warning: binary constants are a GCC extension\". by \\@reixd in [`6f70a3c`](https://github.com/nRF24/RF24/commit/6f70a3cc5a74dab00d834a31a3ad3b820056e8be)\n- Fix mistake in new code by \\@TMRh20 in [`d3e5c4e`](https://github.com/nRF24/RF24/commit/d3e5c4e54d74e675d617a010ae0c741e80d6a614)\n- Fix wrong pin layout by \\@reixd in [`51a71bc`](https://github.com/nRF24/RF24/commit/51a71bca0b1c1d9a025e58978bfc72981f3661f8)\n- Fix broken ATTiny support in updates branch by \\@TMRh20 in [`3e6ca45`](https://github.com/nRF24/RF24/commit/3e6ca45f9ebab5729862d93989f1b378c55f99f7)\n- Broke SPI for Due and Teensy last commit by \\@TMRh20 in [`c077f70`](https://github.com/nRF24/RF24/commit/c077f709de98fb174e98fa49b8db689981bc7377)\n- Fix for last commit (code merge) by \\@TMRh20 in [`8503804`](https://github.com/nRF24/RF24/commit/85038040a56ed242b726a029493ebba4ee8df433)\n- Fix include for RF24_config.h by \\@TMRh20 in [`bb88f4a`](https://github.com/nRF24/RF24/commit/bb88f4a78e702e83b3644e2fe01238281047bcd1)\n- Fix header file install for RPi in Makefile by \\@TMRh20 in [`603f4cc`](https://github.com/nRF24/RF24/commit/603f4cc81489dfb0f23a3ac3109e8309b6da133d)\n- Fix for last pull request by \\@TMRh20 in [`bfd62ea`](https://github.com/nRF24/RF24/commit/bfd62ead172060ac707ef3988d374e442ff77e30)\n- RPi memory corruption by \\@TMRh20 in [`73cf59c`](https://github.com/nRF24/RF24/commit/73cf59c10af95bd99b843c920cb4aae40a2b02b8)\n- Fix mistake in example update by \\@TMRh20 in [`a802136`](https://github.com/nRF24/RF24/commit/a802136a0487f7c5450c4d99b2caae93e67add9e)\n- Fix build for python wrapper by \\@TMRh20 in [`6354cac`](https://github.com/nRF24/RF24/commit/6354cacc6f5456a536ae1002c3bb033b5ed85d2b)\n- Dual SPI devices with RF24 by \\@TMRh20 in [`9b48595`](https://github.com/nRF24/RF24/commit/9b48595943a77ee78dba4b6e8d0d9c19c2144c94)\n- Fixed issue with ARDUINO not issuing CS for radio by \\@prophet-roshak in [`c0848cb`](https://github.com/nRF24/RF24/commit/c0848cb1fad0c3ab45bb31813e2a8ffb17d97d47)\n- Fix isAckPayloadAvailable() per \\@jorihardman by \\@TMRh20 in [`f57b383`](https://github.com/nRF24/RF24/commit/f57b383039c7085888eb026a8944443c3a842444)\n- Fix operator precedence for isAckPayloadAvailable. by \\@jorihardman in [`8bd5289`](https://github.com/nRF24/RF24/commit/8bd5289514f609c9a29353077217f2a251465576)\n- Fix IDE version detection for SPI transactions by \\@TMRh20 in [`f6e1f37`](https://github.com/nRF24/RF24/commit/f6e1f37b3b46ba7ae92c617106ce6b9f0796724e)\n- Fix issue \\#101 found by \\@mz-fuzzy by \\@TMRh20 in [`f691c45`](https://github.com/nRF24/RF24/commit/f691c45a69064c132dd11c52973e6fe011bded3a)\n- Fix the rest of issue \\#101 per mz-fuzzy by \\@TMRh20 in [`90d85be`](https://github.com/nRF24/RF24/commit/90d85bef4bf370f54404e00805431f77a49607e7)\n- Fix for SPI transaction code by \\@TMRh20 in [`c79ccc7`](https://github.com/nRF24/RF24/commit/c79ccc70bb744f91b9d325d5b21b028fead3bd48)\n- Fix example per \\#114 by \\@TMRh20 in [`357fcb9`](https://github.com/nRF24/RF24/commit/357fcb95a5bc89704846679fa667dbcafe68a5ea)\n- Fix the last fix by \\@TMRh20 in [`869a2c2`](https://github.com/nRF24/RF24/commit/869a2c2f7329967bc600e66d0b0422e959e22e2d)\n\n### <!-- 7 -->🚦 Tests\n\n- Prepare tests to run with configuration parameters by \\@maniacbug in [`7640852`](https://github.com/nRF24/RF24/commit/7640852edf6e3cf139608fe70505cffa93a8c650)\n- Treat warning as errors in tests by \\@maniacbug in [`18ebe7a`](https://github.com/nRF24/RF24/commit/18ebe7a0aac86bf90aa08e0fd8d48d6929651383)\n- Runtests now hups between each test instead of uploading by \\@maniacbug in [`94635e8`](https://github.com/nRF24/RF24/commit/94635e8cc50843db3603971d9c8978f1942a2d5e)\n- Tune timing and upload rate of tests by \\@maniacbug in [`205d4b5`](https://github.com/nRF24/RF24/commit/205d4b5cc12d119149e75e62e62b98fce0f38ac7)\n- Lib now passes all tests by \\@TMRh20 in [`4340d93`](https://github.com/nRF24/RF24/commit/4340d9339a333c28c416406ada828cd3a465018e)\n- Update examples, minimize code size by \\@TMRh20 in [`e83a107`](https://github.com/nRF24/RF24/commit/e83a107bdf8e7430457975b1d9251cc5c6ba7107)\n- Performance tweaks to address \\#9 by \\@TMRh20 in [`5ec5b06`](https://github.com/nRF24/RF24/commit/5ec5b06bdc4f3b58eac3f34b3c4355a51b659ae6)\n\n### <!-- 8 --> 📝 Documentation\n\n- Updated documentation by \\@maniacbug in [`0503017`](https://github.com/nRF24/RF24/commit/0503017d1a03dd5163d32db2b399e33fdfdf4caa)\n- Simplified example to use less calls. in [`e97e023`](https://github.com/nRF24/RF24/commit/e97e0239d7861c27b08bb7541a1966b9c89a2120)\n- Tweaked doc paramters by \\@maniacbug in [`117678c`](https://github.com/nRF24/RF24/commit/117678c46f0d0cf82377953a399bb9f6740fb705)\n- Cleaned up documentation. by \\@maniacbug in [`21057e4`](https://github.com/nRF24/RF24/commit/21057e4608e755ef606e33041df3f18290572638)\n- Revised documentation by \\@maniacbug in [`1c65c7f`](https://github.com/nRF24/RF24/commit/1c65c7f181f8e6040e3f37d4302574eb5ebea147)\n- Updating docs by \\@maniacbug in [`f3369a5`](https://github.com/nRF24/RF24/commit/f3369a552cd49d8e57cbc1e11a48a985082026ef)\n- Docupdate by \\@maniacbug in [`1c6cc96`](https://github.com/nRF24/RF24/commit/1c6cc96fb74a406786bab4f9841d82f65a65c861)\n- More doc tweaks by \\@maniacbug in [`c9d64fd`](https://github.com/nRF24/RF24/commit/c9d64fd0888d7f7610c8bded105a787086fda62e)\n- Update docs for 1.0 by \\@maniacbug in [`8ea84e7`](https://github.com/nRF24/RF24/commit/8ea84e7f77fc4122d77b1bd035d78d18eaab0bda)\n- Update docs and comments for new nordic fob blog post by \\@maniacbug in [`e31f8c8`](https://github.com/nRF24/RF24/commit/e31f8c8211c82a8984bc7a1e2dfa098d99108a71)\n- Update readme temporarily by \\@TMRh20 in [`dfc75db`](https://github.com/nRF24/RF24/commit/dfc75db8e61276e9920e1cbc6be59939966ca4d9)\n- Updated readme and h file for doxygen by \\@TMRh20 in [`14187cd`](https://github.com/nRF24/RF24/commit/14187cd1a1257ee889fc41b5986ce75324f5500d)\n- Corrected part of the documentation by \\@TMRh20 in [`63ee0ce`](https://github.com/nRF24/RF24/commit/63ee0ce2c077373e4d25cc4ef30fac1036df6854)\n- Update doxyfile & css to match tmrh20.github.io by \\@TMRh20 in [`04165e4`](https://github.com/nRF24/RF24/commit/04165e4dd1ce9aa5b46b4b0f7b2705a6c74e53b2)\n- Update RF24.h with documentation info by \\@TMRh20 in [`9ddbe8b`](https://github.com/nRF24/RF24/commit/9ddbe8b168c93c09e8b7d7eb42e3a3e4903bbd9b)\n- Documentation and File Structure Changes by \\@TMRh20 in [`8a0f5ab`](https://github.com/nRF24/RF24/commit/8a0f5ab57a778c468a90b3e6ed6164fe5daf6e54)\n- Replace readme with link to tmrh20.github.io/RF24 by \\@TMRh20 in [`5333b4e`](https://github.com/nRF24/RF24/commit/5333b4efa8cfe43ce1e4ad80e645865e6c624785)\n- Reorganize Optional and Advanced parameters in docs by \\@TMRh20 in [`7741224`](https://github.com/nRF24/RF24/commit/7741224e9678db941068d498c44a7bc0750b4c90)\n- More doc updates for coming changes by \\@TMRh20 in [`8e15310`](https://github.com/nRF24/RF24/commit/8e1531014fe34b13aab168bf9b03106ef2ddfbc5)\n- Update docs in 'updates' branch by \\@TMRh20 in [`b320f9e`](https://github.com/nRF24/RF24/commit/b320f9e69c130ebe5b75ef15bb6b350fe71a68ea)\n- Update *.cpp examples pin config by \\@TMRh20 in [`b342d97`](https://github.com/nRF24/RF24/commit/b342d97f3693f89f06739ccf351281a95ac21805)\n- \\@PlatformIO Library Registry manifest file by \\@ivankravets in [`ea960e0`](https://github.com/nRF24/RF24/commit/ea960e057b3360094a153ca1ab9c6fa984c3d68a)\n\n### <!-- 9 --> 🗨️ Changed\n\n- Type by \\@maniacbug in [`ea69f9d`](https://github.com/nRF24/RF24/commit/ea69f9d1a6e085ce4df7ff125ca3af30ea94e2b3)\n- Changed name of print_details to comply with the overall naming convention by \\@maniacbug in [`0dc43ab`](https://github.com/nRF24/RF24/commit/0dc43ab8722c74c8efd9a960014219805407ebcf)\n- Tuned the text a bit by \\@maniacbug in [`c5c4537`](https://github.com/nRF24/RF24/commit/c5c4537cdc94a2d50b4fec5bd61aa15b738da04e)\n- Flipped the logic on the role pin. by \\@maniacbug in [`c2dc356`](https://github.com/nRF24/RF24/commit/c2dc35652e500e58aa11b44e6f1344c5e8868a26)\n- Make the makefile be smart about which OS it's running, and make by \\@maniacbug in [`e1db440`](https://github.com/nRF24/RF24/commit/e1db4401ca01fd5a113e49acdbe8b0148c45c0e7)\n- Trying to get the formatting just right by \\@maniacbug in [`0668494`](https://github.com/nRF24/RF24/commit/0668494aee5536d43fb23806d9f0c9bdfb113dee)\n- Now sets spi data mode before interacting with the chip.  needed to interoperate with other spi devices by \\@maniacbug in [`1045cec`](https://github.com/nRF24/RF24/commit/1045cec9b13d079102c92488854c74b1aa0d66c9)\n- Updated vim modeline by \\@maniacbug in [`5b632f3`](https://github.com/nRF24/RF24/commit/5b632f374085b17d8614fb3c13fb3d79bae9a9ff)\n- Enabled warnings, and cleaned up warnings.  Updated pingpair makefile for recent makefile improvements by \\@maniacbug in [`e188242`](https://github.com/nRF24/RF24/commit/e188242a8687c2880dbb60b394308a6dd25c254e)\n- Merge branch 'master' of github.com:maniacbug/RF24 by \\@maniacbug in [`e005ec7`](https://github.com/nRF24/RF24/commit/e005ec75f140db665c889727c55d2c234f28e940)\n- Moved printf format strings to progmem. by \\@maniacbug in [`33b8973`](https://github.com/nRF24/RF24/commit/33b897318fd04f33c91fc5adf0aa67cb2461938e)\n- Split out upload target into two by \\@maniacbug in [`e7254a3`](https://github.com/nRF24/RF24/commit/e7254a3b3a0f85b5c168057cdf4336681dbe92bb)\n- Merge branch 'master' of 207.97.227.239:maniacbug/RF24 by \\@maniacbug in [`a88e78a`](https://github.com/nRF24/RF24/commit/a88e78a0da96fe2335c6249b1c5dfa7216f75c3c)\n- Stripped down extraneous pipe opens, and other un-needed things. by \\@maniacbug in [`39b15c8`](https://github.com/nRF24/RF24/commit/39b15c8b55f8e86ac0295cf430123818eb9db349)\n- Got ack payloads working.  Renamed from 'ackpacket' by \\@maniacbug in [`ffc7d09`](https://github.com/nRF24/RF24/commit/ffc7d099ed05e48724b6471b4d75ce98d8a05075)\n- Cleaned up comments, variables names, enums by \\@maniacbug in [`f3356f3`](https://github.com/nRF24/RF24/commit/f3356f31a281dc5895b16c7842440a32979738bf)\n- Created a new example to show sleeping in between sends.  This isn't done yet.  It's just a copy of pingpair for now. by \\@maniacbug in [`72dc774`](https://github.com/nRF24/RF24/commit/72dc77467e0d42a0e0ccc2c5d20e2506074330e0)\n- First complete compile/link with sleep functionality.  Haven't run it yet. by \\@maniacbug in [`3179382`](https://github.com/nRF24/RF24/commit/31793823eaefee67246638621e6cdc126e3bea5b)\n- Turned off serial debug by \\@maniacbug in [`0d20f83`](https://github.com/nRF24/RF24/commit/0d20f831d02958f78f1c759288adc71de4a6ae0f)\n- Created new example, copied from starping by \\@maniacbug in [`1fd8ee7`](https://github.com/nRF24/RF24/commit/1fd8ee72c0b9a32d754ece211b1790bea0265b4e)\n- Rewired everything, re-tested with ping/pong nodes only by \\@maniacbug in [`9868642`](https://github.com/nRF24/RF24/commit/986864236c51b70692e6ca143ddcf6a6a3bba79d)\n- Allow opening pipe 0 for reading.  Useful if it's on a different subnet from others by \\@maniacbug in [`d8b2512`](https://github.com/nRF24/RF24/commit/d8b2512e0c391ef218e941a52dd554d0f288a199)\n- Moved base node code, to make it more readable by \\@maniacbug in [`33edb1f`](https://github.com/nRF24/RF24/commit/33edb1f18acee3f45db56ce7785e70febccc6c57)\n- Leaf only starts hunting for a new slot after 3 timeouts.  Makes the system more stable. by \\@maniacbug in [`e86c6b0`](https://github.com/nRF24/RF24/commit/e86c6b0f15f7171adf57f6aaacdef72cf15a07c0)\n- Now caches the reading pipe 0 and re-sets it when starting to listen. by \\@maniacbug in [`1d28d28`](https://github.com/nRF24/RF24/commit/1d28d28a29d452d79b42dd94732e550721b727be)\n- Refactored common code from leaf/relay nodes into static functions.  Improved comments. by \\@maniacbug in [`7e65824`](https://github.com/nRF24/RF24/commit/7e658242e2e22c313ecbb06c55a49be93f50a507)\n- Comment bug by \\@maniacbug in [`77a4c95`](https://github.com/nRF24/RF24/commit/77a4c953193c8c18cce7fcd09ff53e12c46d5c41)\n- Renamed ping delay to ping interval and added some comments by \\@maniacbug in [`937805d`](https://github.com/nRF24/RF24/commit/937805d6a2acde22bf685e5fdbc0905c937004f1)\n- Do clock divider on chip select. Should improve SPI interop with other devices by \\@maniacbug in [`8f80038`](https://github.com/nRF24/RF24/commit/8f8003822760e76bf1e43cd6000031e804de1168)\n- Avoid spurious warnings by \\@maniacbug in [`40eea86`](https://github.com/nRF24/RF24/commit/40eea86ffe6993eecb3ef97652009821f5b316a7)\n- Environment-specific changes for me.  Testing out latest arduino from git, and added a 3rd upload option by \\@maniacbug in [`1062f9d`](https://github.com/nRF24/RF24/commit/1062f9d879c6c6a1ca77c315b7a9bc39a31cd9bd)\n- Made all CONFIG register changes incremental not absolute by \\@maniacbug in [`ec33f03`](https://github.com/nRF24/RF24/commit/ec33f0336880ac530623f4e94ba32234140e94b0)\n- Astyle -A1 by \\@maniacbug in [`26c45e8`](https://github.com/nRF24/RF24/commit/26c45e85a9dab5586d56fa649657c3a383bc9753)\n- Changed the logic.  Button press now toggles the LED. by \\@maniacbug in [`3cc856a`](https://github.com/nRF24/RF24/commit/3cc856aa952840e67f1d09290bde0635d570195a)\n- Cleaned up some reinterpret casts to use new-style casts by \\@maniacbug in [`aa7a7c6`](https://github.com/nRF24/RF24/commit/aa7a7c647ae5700d7a3e47f2fe713fd87e6f477b)\n- Refactor repeated parts of printDetails into own methods by \\@maniacbug in [`92373ba`](https://github.com/nRF24/RF24/commit/92373ba7f53f451f2e60bb557817982caa782463)\n- Move examples to 57600 baud by \\@maniacbug in [`fea8c0e`](https://github.com/nRF24/RF24/commit/fea8c0e82f831d0442c38e84b4ae2fea1614deae)\n- Moved completely over to jam.  bye bye make\\! by \\@maniacbug in [`e7c30f2`](https://github.com/nRF24/RF24/commit/e7c30f265fca9933710c99ef636a1faa948d6ba5)\n- Deleted starping relay.  Superseded by RF24Network. by \\@maniacbug in [`549d405`](https://github.com/nRF24/RF24/commit/549d4054fba01f1b3d63ea1761aa136ad86b218b)\n- Purge useless gitignores by \\@maniacbug in [`86798b6`](https://github.com/nRF24/RF24/commit/86798b65e4407764f2d69eac7168ca5331d9c7af)\n- Prettied up printDetails some more by \\@maniacbug in [`81f85bd`](https://github.com/nRF24/RF24/commit/81f85bd5215704269e11a31619d41ba20c58420c)\n- Tidied up EN_RXADDR setting by \\@maniacbug in [`c151ffb`](https://github.com/nRF24/RF24/commit/c151ffbf67c5b64baef1852ea9e7ec83ba7dc70f)\n- Documented some questionable behaviour as pointed out by mdenzien by \\@maniacbug in [`ca4820c`](https://github.com/nRF24/RF24/commit/ca4820cd27fb5466b73c96dfaf23d6c6d0899a65)\n- Made timeouts more explicit in write() by \\@maniacbug in [`c5823c2`](https://github.com/nRF24/RF24/commit/c5823c2605e80ffd73e31d6a5b6a76249be13228)\n- More comments, factored out powerdown from write() by \\@maniacbug in [`c62224f`](https://github.com/nRF24/RF24/commit/c62224ff8636f259dcbab79d544f3ea8b444ae0c)\n- Factored out status-checking from write() into a public method by \\@maniacbug in [`fbae441`](https://github.com/nRF24/RF24/commit/fbae441249f11a3f15b856881c71899182b42ca3)\n- Initial checking of new pingpair_irq example.  Right now this is just the pingpair example but renamed. by \\@maniacbug in [`bb37e88`](https://github.com/nRF24/RF24/commit/bb37e88094c6ed4193b1de45d56d6fece84518d3)\n- Created a non-blocking write and an example for how to use it. by \\@maniacbug in [`d3fff68`](https://github.com/nRF24/RF24/commit/d3fff68a7cd3aaddc75ec989b50ab79a2704fe5c)\n- Simplified printing, ok to do just from the irq handler by \\@maniacbug in [`8549566`](https://github.com/nRF24/RF24/commit/854956687f85bdb98ec2f50092bde885066eed81)\n- Now both roles use the IRQ.  Thanks to Mike Denzien for testing & troubleshooting. by \\@maniacbug in [`062d833`](https://github.com/nRF24/RF24/commit/062d83346b27c03bcc4789c6b94f12ee3ed6be9b)\n- Astyle -A1 -s2 by \\@maniacbug in [`d5a3e79`](https://github.com/nRF24/RF24/commit/d5a3e79c665f29bca7940b2889773f0165accc55)\n- Optimization of whatHappened, suggested by Mike Denzien by \\@maniacbug in [`b000a87`](https://github.com/nRF24/RF24/commit/b000a87aa1f9582a887569591fbd8edbfacf1f8f)\n- Implement dynamic payloads, with an example by \\@maniacbug in [`63eb62e`](https://github.com/nRF24/RF24/commit/63eb62ebc3a69f4f549532c493ce48cdfa0a8928)\n- Clean up read() to use new-style read_register, which reduces it to two lines of code by \\@maniacbug in [`9566c82`](https://github.com/nRF24/RF24/commit/9566c82367a735b1db7b603880dc657352a1793a)\n- Reduce example payload size. Does this help reliability? by \\@maniacbug in [`774f53d`](https://github.com/nRF24/RF24/commit/774f53d6c5ff7cc635b2a5740b8044c3d9132b68)\n- Comments by \\@maniacbug in [`ccf3289`](https://github.com/nRF24/RF24/commit/ccf32891f02f07564e7a4114cd5468572cd76103)\n- Purge 'boolean' type, use 'bool' instead by \\@maniacbug in [`42bf3e8`](https://github.com/nRF24/RF24/commit/42bf3e8cd2acb68ca346779b4479495563929568)\n- Created skeleton of new test by \\@maniacbug in [`0946538`](https://github.com/nRF24/RF24/commit/0946538f3a4df9000005ed470a1a53983bae8a4a)\n- Bugfix by \\@maniacbug in [`c624815`](https://github.com/nRF24/RF24/commit/c6248157046fca8ee8a358d71eba3eb6c8a98664)\n- Created an all-up script runner by \\@maniacbug in [`af37c34`](https://github.com/nRF24/RF24/commit/af37c345e87e7bbf67196bc667ee1156a0ae3af1)\n- Simplify specification of test configs slightly by \\@maniacbug in [`c408c5e`](https://github.com/nRF24/RF24/commit/c408c5ef90928c679e4533183dbe6f19008d39e1)\n- New P variant feature support with corresponding defines. RF_DR is now broken into two bits to support P variant and is now obsolete. RF_DR is now RF_DR_HIGH and RF_DR_LOW; with RF_DR_HIGH corresponding to the original RF_DR bit. Data rate can now select 250kbs mode on supporting hardware. by \\@gcopeland in [`1a37c1c`](https://github.com/nRF24/RF24/commit/1a37c1cd0ff12675ea983f921b445771b0e699da)\n- Moved the wide_band variable and initializer cleanup. by \\@gcopeland in [`634d0ef`](https://github.com/nRF24/RF24/commit/634d0efde5930e79d1bc2a51972f83e942394d62)\n- Re-organized nRF24L01.h file to place 'P' features in one by \\@gcopeland in [`059efa5`](https://github.com/nRF24/RF24/commit/059efa5ffa03d544c80d0101c6c6de14a1e5f582)\n- Reverted constructor changes. Changed SPI bus speed. Fixed setAutoAck by \\@gcopeland in [`b491480`](https://github.com/nRF24/RF24/commit/b491480dde5669590996f8b9db510d03ea57f3d6)\n- As a just in case I misunderstood some of the constant-ness changes, I by \\@gcopeland in [`0c2515d`](https://github.com/nRF24/RF24/commit/0c2515df19d180c82303bcda074f06a239f6ff2c)\n- Sed s/boolean/bool/g by \\@maniacbug in [`956b63a`](https://github.com/nRF24/RF24/commit/956b63a4dce35afb73bdd4847f20512fbbb38ea5)\n- Merge cleanups by \\@maniacbug in [`cd3b0b3`](https://github.com/nRF24/RF24/commit/cd3b0b3ccbb55c09d9b4b7beb8ca001b86cf6f41)\n- Changed test to use new 250kbps mode by \\@maniacbug in [`77a798b`](https://github.com/nRF24/RF24/commit/77a798b1a91d213b0fb65734afc5a89cda24ce70)\n- Improve pingpair timing.  Should lead to less timeouts. by \\@maniacbug in [`7b401d7`](https://github.com/nRF24/RF24/commit/7b401d7281d783b4a156ad4b9c4a41a18aec9fd0)\n- Experimental changes to help in debugging by \\@maniacbug in [`2f33bdb`](https://github.com/nRF24/RF24/commit/2f33bdbebd697919e936fcf825dd62e66afebdda)\n- Merge fix for static payloads by \\@maniacbug in [`4542464`](https://github.com/nRF24/RF24/commit/4542464e0b88946d74ac44cf3c9dfcaf48b82cee)\n- Static and dynamic payloads now fully fixed and interoperable by \\@maniacbug in [`a31cafc`](https://github.com/nRF24/RF24/commit/a31cafcc887f1809fb63ac23ea3881e1bcda3e17)\n- Ignore .swp files by \\@maniacbug in [`39ca6b9`](https://github.com/nRF24/RF24/commit/39ca6b95dd127340869445d3e746c8f01c7c623b)\n- Merge master with static payload fixes by \\@maniacbug in [`3aab74a`](https://github.com/nRF24/RF24/commit/3aab74ae8f0338c27dba97749a3386987e6460b6)\n- Comment cleanups by \\@maniacbug in [`a261710`](https://github.com/nRF24/RF24/commit/a261710761b885915c5b8c27af453bf3fef5bb57)\n- Test refinement.  IRQ test times out after not receiving anything, warning that you probably don't have interrupts hooked up. by \\@maniacbug in [`d967f77`](https://github.com/nRF24/RF24/commit/d967f7708f0cb2a560f17cb96a60e53608ea565b)\n- Reorganize header file to better group the now very large list of methods by \\@maniacbug in [`4833610`](https://github.com/nRF24/RF24/commit/483361029e812f22d8fd66e431d4720fe04a5928)\n- CHanged default data rate to 1MBps and default channel to 100 for better performance by \\@maniacbug in [`5344c5f`](https://github.com/nRF24/RF24/commit/5344c5fe8cefaafa1a267267e7edefec631603d9)\n- Small tweaks and new test for native target by \\@maniacbug in [`e1527af`](https://github.com/nRF24/RF24/commit/e1527afc31bb46fff3929df579aec5e81eb9d078)\n- Avert warnings on native platform by \\@maniacbug in [`19dd5c7`](https://github.com/nRF24/RF24/commit/19dd5c77265bd61d6c84df8bd9c4278f7c449c5e)\n- More debugging information. by \\@gcopeland in [`7ad1b40`](https://github.com/nRF24/RF24/commit/7ad1b409fe180b7c37aeecefb08bc4f93c503e5d)\n- Yet more merge cleanup. Changes default channel to be by \\@gcopeland in [`a4cabc6`](https://github.com/nRF24/RF24/commit/a4cabc66a2b15c45182718c9302385d7378b4447)\n- Flush all buffers on start and stop listening by \\@maniacbug in [`066d79f`](https://github.com/nRF24/RF24/commit/066d79f21e5570251f4b7e56e14a3248200c0f05)\n- Using Arduino 21 by \\@maniacbug in [`f5c0ba2`](https://github.com/nRF24/RF24/commit/f5c0ba25ee04dd4689f90261d533e5040ed888ce)\n- Compatibility with Arduino 1.0 by \\@maniacbug in [`d92ac14`](https://github.com/nRF24/RF24/commit/d92ac14f8685f01a3ea2a1d94083b0ca99851f60)\n- Move default pins over to Getting Started defaults by \\@maniacbug in [`9f806a5`](https://github.com/nRF24/RF24/commit/9f806a5b00ee2809a530b2695661431970267db9)\n- Changes to work on Maple by \\@maniacbug in [`f393408`](https://github.com/nRF24/RF24/commit/f3934084a1368a2e1683ce9b7739a4099edf8c69)\n- Moved environment-specific checking out to RF24_config.h by \\@maniacbug in [`53cb579`](https://github.com/nRF24/RF24/commit/53cb579400a76db6583ee973332c6c6d17a7f7d5)\n- Clean up pin assignments by \\@maniacbug in [`840ad1c`](https://github.com/nRF24/RF24/commit/840ad1cd3dc5ce1d23c0d070ef14343cd4ddaf40)\n- Handle SPI.h better in Maple by \\@maniacbug in [`5cb32c9`](https://github.com/nRF24/RF24/commit/5cb32c92cc709c2fc86508864fbdb014f5ab80c5)\n- Reduce delays in startWrite down to only required delays by \\@maniacbug in [`50b18a9`](https://github.com/nRF24/RF24/commit/50b18a9c7dc39bd27db7405567b7d27f338100ff)\n- Correct the comment for pin #'s by \\@maniacbug in [`8493b9a`](https://github.com/nRF24/RF24/commit/8493b9a60e694d9824bf3a91c30c5d9e9e2094f8)\n- Documentation update.  1.0 fully supported, Maple works, more examples, links and pictures for proejcts by \\@maniacbug in [`fc06760`](https://github.com/nRF24/RF24/commit/fc067607364c02b38474bb7a2f2ae778cd86fb1a)\n- Use latest copyright by \\@maniacbug in [`07a4bcf`](https://github.com/nRF24/RF24/commit/07a4bcf425d91c99105dbdbad0226296c7cd3a93)\n- New 'nordic_fob' example started, based on pingpair by \\@maniacbug in [`36167a9`](https://github.com/nRF24/RF24/commit/36167a9e02fecc3d45f863083b43a619953cb98e)\n- Nordic_fob example fully working. by \\@maniacbug in [`d1653e8`](https://github.com/nRF24/RF24/commit/d1653e8cad74daf6fa4fa60a5646804592ee8290)\n- Really...Pins 9 & 10 this time.  I mean it\\! by \\@maniacbug in [`cb6613d`](https://github.com/nRF24/RF24/commit/cb6613d62fdc7f68327811d5cb2e36821b55c695)\n- Reduce RAM footprint by moving static const data to progmem, and refactoring out switch statements. by \\@maniacbug in [`eb3b2d8`](https://github.com/nRF24/RF24/commit/eb3b2d800a240ce097e45423816dc0db9b423ef2)\n- Use latest Jamfile by \\@maniacbug in [`c2e9564`](https://github.com/nRF24/RF24/commit/c2e956467895ffe73d705afd1b84c5c68bf65775)\n- Pingpair_blocking test now uses expect and runs on linux by \\@maniacbug in [`dec61af`](https://github.com/nRF24/RF24/commit/dec61af85fa5316ade24168006797c547dc8bbc4)\n- FAQ- How much RAM?? by \\@maniacbug in [`c6262ed`](https://github.com/nRF24/RF24/commit/c6262edbce48bb839d5fed4412da0fad39e0250a)\n- Latest jamfiles by \\@maniacbug in [`84e464d`](https://github.com/nRF24/RF24/commit/84e464def4a52a3a697ee95d26eb66997db0ea76)\n- Update examples/led_remote/led_remote.pde in [`49f22ea`](https://github.com/nRF24/RF24/commit/49f22eae21c2b7a872897a6a627bd255369ff2b2)\n- Merge pull request \\#16 from RWSDev/master by \\@maniacbug in [`8eaad77`](https://github.com/nRF24/RF24/commit/8eaad77b2cb6d7491d5bc757d1bdfb78e6bebad1)\n- Changed writing modes by \\@TMRh20 in [`d0ec0c4`](https://github.com/nRF24/RF24/commit/d0ec0c461ce6c2e1f15b334344330cdf8f993417)\n- Inspired idea to change TX standby code by \\@TMRh20 in [`1e2f41c`](https://github.com/nRF24/RF24/commit/1e2f41c3f8143c9be0ae4aaa165cf98cb3052d84)\n- Updated some examples to show the new lib usage by \\@TMRh20 in [`99571d6`](https://github.com/nRF24/RF24/commit/99571d653001b143d8305425e2eab193136b38fe)\n- TxStandby() function modified completely by \\@TMRh20 in [`1cc7454`](https://github.com/nRF24/RF24/commit/1cc7454d97d0995e443745c788e37e1f9192d62e)\n- Forgot to move startFastWrite to public by \\@TMRh20 in [`0ddec52`](https://github.com/nRF24/RF24/commit/0ddec5256343186aafef9d4c653d12ace6a2e712)\n- Extended timeouts, txStandBy changes by \\@TMRh20 in [`6263bcc`](https://github.com/nRF24/RF24/commit/6263bccd0241aaf0c0e45106d514ea34516f39e9)\n- Full Due support, maskIRQ function by \\@TMRh20 in [`e1aaa57`](https://github.com/nRF24/RF24/commit/e1aaa571721d48584c43cfb287f55efc17ed97dd)\n- Revamped write_payload() and read_payload() by \\@zephyrr in [`84146a1`](https://github.com/nRF24/RF24/commit/84146a17f301d4e341f12db9613bff44cc285ae0)\n- Merge pull request \\#1 from zephyrr/master by \\@TMRh20 in [`8077f56`](https://github.com/nRF24/RF24/commit/8077f56a7f1d9ca0e0bd078b1077215d89e52c3d)\n- ATTiny support fr jscrane fork tested and working by \\@TMRh20 in [`07eb9f8`](https://github.com/nRF24/RF24/commit/07eb9f874999c2d862a99d452a29d08a0798760d)\n- EnableDynamicAck(), Single NOACK, default RT, by \\@TMRh20 in [`92a19af`](https://github.com/nRF24/RF24/commit/92a19af8f808967aa03cf4e18d8e4c9fd3cc27fc)\n- Revert powerUp() delay to 5ms delay by \\@TMRh20 in [`1858312`](https://github.com/nRF24/RF24/commit/185831233868b07310b69daefa63b169f1bf8ed4)\n- FIFO rd change (Thanks Zephyrr), Initial SI24R1 support by \\@TMRh20 in [`c965f73`](https://github.com/nRF24/RF24/commit/c965f73838383f7d11d15670ddc371f98b5be8b3)\n- Small fix before pushing last commit by \\@TMRh20 in [`8ff9fb6`](https://github.com/nRF24/RF24/commit/8ff9fb6f155d263adc5671e7b1c28f6265a73f15)\n- Raspberry Pi support by \\@TMRh20 in [`2406e06`](https://github.com/nRF24/RF24/commit/2406e06a777d1ff0e2feb4c0b62b42f27ee21a59)\n- Restore closeReadingPipe by \\@a-lurker in [`1289f85`](https://github.com/nRF24/RF24/commit/1289f85c4c25e1dbe4d85a7c2b7e09fba1063e75)\n- Merge pull request \\#4 from a-lurker/master by \\@TMRh20 in [`e682b7d`](https://github.com/nRF24/RF24/commit/e682b7dd0c9677b6e214353896fb68124f803575)\n- Install header files and separate install task by \\@cornet in [`9895101`](https://github.com/nRF24/RF24/commit/9895101a43015bb1352f86977106567c1a5bacf2)\n- Bring readme.md inline with new Makefile by \\@cornet in [`dc9ccbf`](https://github.com/nRF24/RF24/commit/dc9ccbff92b1229ff75fec3824595c461f03982d)\n- Cleanup readme syntax by \\@cornet in [`8e8c111`](https://github.com/nRF24/RF24/commit/8e8c1115eb110a722d623e2490e9caecc0dc9ffd)\n- Cleanup table in readme by \\@cornet in [`ddd6a0d`](https://github.com/nRF24/RF24/commit/ddd6a0dc1f1e3adda16f5691356e3062669d93bf)\n- Use spaces, not tabs, in readme.md by \\@cornet in [`ac3962c`](https://github.com/nRF24/RF24/commit/ac3962cca58567886be310af33c6aaae564d3d27)\n- Make install should build first by \\@cornet in [`c004c55`](https://github.com/nRF24/RF24/commit/c004c5545040d3df83cdce0a9aec1c5dc6278016)\n- Merge pull request \\#2 from cornet/fix-rpi-build-scripts by \\@TMRh20 in [`ee7f603`](https://github.com/nRF24/RF24/commit/ee7f6035cf6753864c14da739fa4c60ba7716ef1)\n- Update readme by \\@TMRh20 in [`01cac5c`](https://github.com/nRF24/RF24/commit/01cac5c3bfa29c9b0d67efab971c16135d1cb8d8)\n- De-Activate features by default with RPi by \\@TMRh20 in [`b7e4a09`](https://github.com/nRF24/RF24/commit/b7e4a09abee35c4284b3fa93abfb7617cd81eb42)\n- Updated address assignment by \\@TMRh20 in [`b7c24a8`](https://github.com/nRF24/RF24/commit/b7c24a81792d1c28aa30de1854c503a747f41bb6)\n- Updated examples per issue \\#6 by \\@TMRh20 in [`a009487`](https://github.com/nRF24/RF24/commit/a009487abdbf2d3d00cd60f1f8e0a979d749b3bb)\n- Update rpi readme by \\@TMRh20 in [`db1c051`](https://github.com/nRF24/RF24/commit/db1c0510798e8226373cbb303844ca336aed344d)\n- Initial Teensy3x support by \\@TMRh20 in [`5e63e3a`](https://github.com/nRF24/RF24/commit/5e63e3aeba3403290bd6b5fad5cef6e03f1e8537)\n- Updated defines, fixed missing due define by \\@TMRh20 in [`b8312b5`](https://github.com/nRF24/RF24/commit/b8312b5382c047d704565e157e10be5273c4c457)\n- Further tweaks per \\#9 by \\@TMRh20 in [`b62e179`](https://github.com/nRF24/RF24/commit/b62e179ab2866a05d14bd8e86db74fe652b5d917)\n- - Fixes and modifications for Due & Teensy3.x by \\@TMRh20 in [`aac1650`](https://github.com/nRF24/RF24/commit/aac1650646b2c440c8822deb2f99514f4e2e4ddd)\n- Final tweaks to address \\#9 by \\@TMRh20 in [`b8d97f5`](https://github.com/nRF24/RF24/commit/b8d97f53c138a23f6a0d262d508f3f29b5b5b659)\n- RPi - Example updates, minor bmc driver change by \\@TMRh20 in [`ea98781`](https://github.com/nRF24/RF24/commit/ea9878107267a4c7fa3cf3c2fed405c224e6b56a)\n- Adj delay to accomodate 250kbps rates better by \\@TMRh20 in [`cb60afe`](https://github.com/nRF24/RF24/commit/cb60afe1dfb1d2cdc6ddf5bc73646b93207a50d4)\n- Delay for dyn_Pld_length corruption by \\@TMRh20 in [`4e250cb`](https://github.com/nRF24/RF24/commit/4e250cbb07740dfa7e7358c4ab64c4eec44a4874)\n- Reduce error rate in call response scenarios by \\@TMRh20 in [`9e28a60`](https://github.com/nRF24/RF24/commit/9e28a60236cca121eb3d746ea53b9d362f06b381)\n- Merge pull request \\#19 from reixd/master by \\@TMRh20 in [`f5341bf`](https://github.com/nRF24/RF24/commit/f5341bfc5010f0c87c285510e01f2a7f53bec4b2)\n- Select a standard pin layout for the examples. by \\@reixd in [`e16c99e`](https://github.com/nRF24/RF24/commit/e16c99e1f0d1c3976a249f52221075cae97681e0)\n- Merge pull request \\#21 from reixd/examples by \\@TMRh20 in [`8c0e9f8`](https://github.com/nRF24/RF24/commit/8c0e9f80b70fbcd192728de4c0f9e89fee89e656)\n- RPi B+ Update to BCM2835 V1.37 by \\@TMRh20 in [`a2c3977`](https://github.com/nRF24/RF24/commit/a2c3977ac1d60f901887a2dfa2ee5ba28672630f)\n- RPi B+ Update to BCM2835 V1.37 by \\@TMRh20 in [`1732332`](https://github.com/nRF24/RF24/commit/173233231a12e502ed655544367fee7489772680)\n- Merge code per \\#17 by \\@TMRh20 in [`0153c71`](https://github.com/nRF24/RF24/commit/0153c713d991dc73d35684379f2fb8ef7eab56f2)\n- Merge remote-tracking branch 'origin/Updates' by \\@TMRh20 in [`1c89b94`](https://github.com/nRF24/RF24/commit/1c89b946cf050b1f13829a7d7f4051926dc1e296)\n- Teensy Support by \\@TMRh20 in [`5ff3088`](https://github.com/nRF24/RF24/commit/5ff3088ee39376ecb42192bb6366eba1e8aaf92a)\n- \\#24 Enable UART as 2ndary SPI BUS by \\@TMRh20 in [`3f4a1cb`](https://github.com/nRF24/RF24/commit/3f4a1cbcadf3bb2854810b1ef39e077102af94a5)\n- \\#24 Add softSPI supp, fix SPI_UART by \\@TMRh20 in [`56b7711`](https://github.com/nRF24/RF24/commit/56b7711ed09dac3264c96b2ed8a40a16eb599151)\n- \\#25 Fix CRC status, revert to default SPI lib by \\@TMRh20 in [`5238ca2`](https://github.com/nRF24/RF24/commit/5238ca2576562e20c8aca13302f8723b1f1364fe)\n- \\#24 Fix: SoftSPI or UartSPI working with std SPI by \\@TMRh20 in [`2d79e75`](https://github.com/nRF24/RF24/commit/2d79e75e3a468f9c2dfec4e475912c08d7502f83)\n- \\#24 lol Fix: Spelling and ; on std spi define by \\@TMRh20 in [`80e942c`](https://github.com/nRF24/RF24/commit/80e942ce6892e47727552241aa12f16522471690)\n- Merge branch 'Updates' of https://github.com/TMRh20/RF24 into Updates by \\@TMRh20 in [`ecc5135`](https://github.com/nRF24/RF24/commit/ecc51358c839341328cb5102d4cabe044c00108c)\n- Merge remote-tracking branch 'origin/master' into Updates by \\@TMRh20 in [`8be1be0`](https://github.com/nRF24/RF24/commit/8be1be0cfa3c88e5ec8e4eeb930946a4092a42ad)\n- Built-in support multiple radios on RPi by \\@TMRh20 in [`d6a9c3d`](https://github.com/nRF24/RF24/commit/d6a9c3d3cf8309b95b441cb29b39f2541354f55f)\n- Character fix by \\@lnxbil in [`422495a`](https://github.com/nRF24/RF24/commit/422495ade0b55a7bdd8d159c2735c727fb3ac0d5)\n- Merge pull request \\#28 from lnxbil/printDetails-fix by \\@TMRh20 in [`79eb410`](https://github.com/nRF24/RF24/commit/79eb4107a34578db20e90f58ba43cf9176a40cbc)\n- Merge RPi and Arduino code by \\@TMRh20 in [`435e4db`](https://github.com/nRF24/RF24/commit/435e4db883811700d4688b9d5c86bf93528d31fa)\n- Replace old examples with the current ones for RPi by \\@TMRh20 in [`c51049d`](https://github.com/nRF24/RF24/commit/c51049de7c3c3c65967d03f1e201c0b113db0b5d)\n- Moved RPi SPI driver to RPi folder from root by \\@TMRh20 in [`eabd46a`](https://github.com/nRF24/RF24/commit/eabd46aec6d1313bba1e38ddfd5f3b7db60912d2)\n- Incr delay in stopListening(); Fix transfer example by \\@TMRh20 in [`8814d39`](https://github.com/nRF24/RF24/commit/8814d39c4505e2ff7b0600f28eaa52735bcfc85f)\n- Slight fix for makefile and RF24.h define by \\@TMRh20 in [`1da112a`](https://github.com/nRF24/RF24/commit/1da112a6d574f72a142f9136f469505ff18f7f7c)\n- Minor change to readme by \\@TMRh20 in [`663f41b`](https://github.com/nRF24/RF24/commit/663f41bb02027846bc818a28d5adacc1814f9bc6)\n- Another correction RPi code merge (install info) by \\@TMRh20 in [`b007fb4`](https://github.com/nRF24/RF24/commit/b007fb4a123eed1e1434dd07bd67410964fe6143)\n- Reliability improvements for RPi by \\@TMRh20 in [`d41d47a`](https://github.com/nRF24/RF24/commit/d41d47ab20cb794b8250560154076b1b2b06feae)\n- Revert last commit, if defined... delay by \\@TMRh20 in [`deef592`](https://github.com/nRF24/RF24/commit/deef592bb04729aae5bbd61bce4b31629496b7cd)\n- Python wrapper for RPi added by \\@martin-mat in [`567ca69`](https://github.com/nRF24/RF24/commit/567ca69234c5c51bbe6ae7f68b3fc6e350c3a6bb)\n- Merge pull request \\#35 from mz-fuzzy/master by \\@TMRh20 in [`a2954f8`](https://github.com/nRF24/RF24/commit/a2954f8f42b97d84f64c5753201cc8a1b3b482fc)\n- Revert change to delay from last commit by \\@TMRh20 in [`58293d6`](https://github.com/nRF24/RF24/commit/58293d6fe48c13f3e4ddc35bd7ac2767fd0660ea)\n- Non-conflicting names by \\@jfktrey in [`1650b6b`](https://github.com/nRF24/RF24/commit/1650b6bd58baded2e53e0267bd9268e55a60b675)\n- Merge pull request \\#38 from jfktrey/master by \\@TMRh20 in [`50450a9`](https://github.com/nRF24/RF24/commit/50450a9fe363d7f549497137b1d9587d715e73a1)\n- Intel Gallileo support added in [`83dccd2`](https://github.com/nRF24/RF24/commit/83dccd282d75018a7970240b366db768035a1df5)\n- Optimization for Galileo Delay by \\@spaniakos in [`7574bf5`](https://github.com/nRF24/RF24/commit/7574bf51ca5330beecd83879eaeb35ee53049362)\n- Galileo Optimizations and FIFO Fix by \\@spaniakos in [`0969010`](https://github.com/nRF24/RF24/commit/0969010b6d3a2f2da956a352e60eef009dfe7515)\n- Galileo Optimizations by \\@spaniakos in [`e13b238`](https://github.com/nRF24/RF24/commit/e13b238be108fa0a5ed1a2bb829242ed0edd3203)\n- Merge pull request \\#40 from spaniakos/master by \\@TMRh20 in [`aace3b4`](https://github.com/nRF24/RF24/commit/aace3b4bd7ca157303fa964bbc9ade7ac20056a9)\n- Updated led_example.pde to work with newer version of library. by \\@k2OS in [`65d7fc1`](https://github.com/nRF24/RF24/commit/65d7fc1606dcb4cdd1ecbf0e4eef0f5dc6f9d983)\n- Merge pull request \\#45 from k2OS/master by \\@TMRh20 in [`a0c8087`](https://github.com/nRF24/RF24/commit/a0c808751c4239d5c692588b6730f5fbda7c6954)\n- Lower default SPI clock speed by \\@TMRh20 in [`3515538`](https://github.com/nRF24/RF24/commit/3515538781ea714a9f4bb5f7313cd2abe676b601)\n- Merge pull request \\#50 from mz-fuzzy/pyRF24fix by \\@TMRh20 in [`350e00a`](https://github.com/nRF24/RF24/commit/350e00a0d4ef8e47224c241f1167b3ce1c375581)\n- Update many of the example files by \\@TMRh20 in [`d05a356`](https://github.com/nRF24/RF24/commit/d05a356270650adc9d4e98f56362cd6deb373a0e)\n- Enable hardware warnings by default on linux by \\@TMRh20 in [`831a424`](https://github.com/nRF24/RF24/commit/831a424d3ba1e75dbb7bbcdc4f68b65165201601)\n- Update python readme and example by \\@TMRh20 in [`714999c`](https://github.com/nRF24/RF24/commit/714999c186466a97a74a151e3713b7e19caae015)\n- Attempt to correct markdown formatting in readme by \\@TMRh20 in [`3c28f13`](https://github.com/nRF24/RF24/commit/3c28f1307ce492e5110426146a4ebb9ccb34e860)\n- Attempt 2 to fix python readme formatting by \\@TMRh20 in [`54daf66`](https://github.com/nRF24/RF24/commit/54daf66fc129f38fd52a09ebc58047b21697f52c)\n- Updated for using LittleWire by \\@lnxbil in [`36fc1f1`](https://github.com/nRF24/RF24/commit/36fc1f10aeaa4d366e7efe4c533589b495453d3e)\n- Ignoring DS_Store files on MacOS by \\@lnxbil in [`6d6f185`](https://github.com/nRF24/RF24/commit/6d6f185365853822368e15213464b5922533fb5c)\n- Slight mods to LittleWire code changes by \\@TMRh20 in [`ba4b8a3`](https://github.com/nRF24/RF24/commit/ba4b8a34ea4112aca9f5d1c14536f0e3d6d79698)\n- Merge branch 'lnxbil-littlewire' by \\@TMRh20 in [`1e05097`](https://github.com/nRF24/RF24/commit/1e050979899096e7528e122595e37b99d87897e1)\n- Enable buffered writes/transmissions by \\@TMRh20 in [`08480a3`](https://github.com/nRF24/RF24/commit/08480a3b3750e2c44263631c2008682122b9b029)\n- Adapted python wrapper for RF24 interface changes in txStandBy and startFastWrite by \\@martin-mat in [`8d68102`](https://github.com/nRF24/RF24/commit/8d681027a8ffcf1318ec85c0df5cf920202a6965)\n- Merge remote-tracking branch 'TMRh20/master' into pyRF24fix by \\@martin-mat in [`b2e40bc`](https://github.com/nRF24/RF24/commit/b2e40bcceaa4250976e9ceab31091c89d10f8ad6)\n- Merge pull request \\#65 from mz-fuzzy/pyRF24fix by \\@TMRh20 in [`a46779f`](https://github.com/nRF24/RF24/commit/a46779fad0f52ffffd1e43a4fd1e3214aed17011)\n- Merge pull request \\#66 from ax7884/master by \\@TMRh20 in [`4b435c9`](https://github.com/nRF24/RF24/commit/4b435c99fdc39de0f31d3798aad667cbf5a48a4e)\n- Tweak CONFIG register on radio startup. by \\@dsbaha in [`a27b840`](https://github.com/nRF24/RF24/commit/a27b84063269385249f46958f85181ddf2894d69)\n- Merge pull request \\#67 from dsbaha/master by \\@TMRh20 in [`e3f9f9a`](https://github.com/nRF24/RF24/commit/e3f9f9aa395441bd42adf74c527cc9904b590d17)\n- Merge remote-tracking branch 'origin/master' into Updates by \\@TMRh20 in [`3c652ed`](https://github.com/nRF24/RF24/commit/3c652ed62b2007012b39d4c4bc4190a0b721371c)\n- Rough port for BBB \\#69 by \\@TMRh20 in [`09269a3`](https://github.com/nRF24/RF24/commit/09269a355759c49854ae844a903ac74143ac7fe8)\n- \\#69 - Forgot to include the main config changes by \\@TMRh20 in [`2254bbf`](https://github.com/nRF24/RF24/commit/2254bbf7d5e90b4fe2b619d621f0045b421fa83a)\n- Move Due and ATTiny to new template format by \\@TMRh20 in [`e7deb68`](https://github.com/nRF24/RF24/commit/e7deb6843828ea729e5fea121166bbb9f83ec4eb)\n- Merge pull request \\#72 from mannkind/Updates by \\@TMRh20 in [`f06ca7c`](https://github.com/nRF24/RF24/commit/f06ca7cb86ce7a0ec5e22174bf8c8b551e2b9ebe)\n- Transitioning to new hardware support template by \\@TMRh20 in [`e2abd64`](https://github.com/nRF24/RF24/commit/e2abd640a296e1be9b2abc0d27bbd5caa1affa78)\n- Restore bcm updates from \\#72 by \\@TMRh20 in [`2ca76c6`](https://github.com/nRF24/RF24/commit/2ca76c6b24c660a81e9cdbb279ca9576b83bbf39)\n- Update for generic spidev/Linux support by \\@TMRh20 in [`84f4590`](https://github.com/nRF24/RF24/commit/84f4590dff3c4e4ff0daf7af446d1f25fb21f6f9)\n- Update Makefile for LittleWire by \\@TMRh20 in [`02b9b16`](https://github.com/nRF24/RF24/commit/02b9b1630366bed83e267d806f0e382c2ebce0c5)\n- MRAA support tweaks by \\@TMRh20 in [`3d049ab`](https://github.com/nRF24/RF24/commit/3d049abfe890225bb8232f2a025e7415e731e6e2)\n- Merge pull request \\#75 from prophet-roshak/mraa by \\@TMRh20 in [`350cafb`](https://github.com/nRF24/RF24/commit/350cafbce914598917397473dec93ebe728a7284)\n- Memory handling with MRAA device contexts by \\@prophet-roshak in [`e78893b`](https://github.com/nRF24/RF24/commit/e78893bf7189d534323ecd6fd05bcdf446da9410)\n- Memory handling with MRAA device contexts, minor optimizations by \\@prophet-roshak in [`2eb660f`](https://github.com/nRF24/RF24/commit/2eb660f64a31b82ffc77f63733092900896e8b6a)\n- Merge pull request \\#76 from prophet-roshak/mraa by \\@TMRh20 in [`225052a`](https://github.com/nRF24/RF24/commit/225052a3c06af786e0085c22680bb4b610bd3a10)\n- Update note in gettingstarted example by \\@TMRh20 in [`18e6775`](https://github.com/nRF24/RF24/commit/18e67756e4b014d7828592eef5cb15c88cf48903)\n- BBB/SPIDEV changes by \\@TMRh20 in [`40b907c`](https://github.com/nRF24/RF24/commit/40b907c318b2046edcae761084242838bdfb0d96)\n- Cleanup RF24_config.h, add Teensy to arch/ support by \\@TMRh20 in [`30a01d7`](https://github.com/nRF24/RF24/commit/30a01d74190d726e3a1bed9da8dbb961e107f4a5)\n- Merge pull request \\#78 from prophet-roshak/mraa by \\@TMRh20 in [`71337bd`](https://github.com/nRF24/RF24/commit/71337bd48e69e77d75a6aeac7c54f4021a25071c)\n- Unify RF24 constructor API for all Linux platforms by \\@TMRh20 in [`bd5ad6b`](https://github.com/nRF24/RF24/commit/bd5ad6b90c325a1bde6b1be015611ea8e673aeb1)\n- Update Makefile with better RPi detection by \\@TMRh20 in [`4120b18`](https://github.com/nRF24/RF24/commit/4120b18361723607590be7b967df48ddaa76f38e)\n- Merge pull request \\#83 from jorihardman/master by \\@TMRh20 in [`d28cfcb`](https://github.com/nRF24/RF24/commit/d28cfcbf19b9d132d4135c0f311bff58184a8830)\n- Merge branch 'master' of https://github.com/TMRh20/RF24 by \\@TMRh20 in [`d577379`](https://github.com/nRF24/RF24/commit/d57737978da8456e28e765a9676bee91934cb510)\n- Transactions beta by \\@nerdralph in [`c02a51c`](https://github.com/nRF24/RF24/commit/c02a51c25b1a85f025f8174355412cdabf6e7c8c)\n- Merge branch 'Updates' of https://github.com/nerdralph/RF24 into Updates by \\@TMRh20 in [`3cc10bb`](https://github.com/nRF24/RF24/commit/3cc10bb6093d7c234d23cf0d80bb70a4a6247a4c)\n- Initialize setup variable by \\@TMRh20 in [`4445842`](https://github.com/nRF24/RF24/commit/444584238db1f76439cb184d8ed859f47ac946ed)\n- Change printf to serial.print in transfer example by \\@TMRh20 in [`da0c594`](https://github.com/nRF24/RF24/commit/da0c5943c040f29d3957947cc46a4f94dd35492c)\n- Use SPI_HAS_TRANSACTION to detect transaction API by \\@TMRh20 in [`28c363f`](https://github.com/nRF24/RF24/commit/28c363f4965ad4059e108a0a4921a64e4e737cac)\n- Adjust spi transaction detection again by \\@TMRh20 in [`dceeabb`](https://github.com/nRF24/RF24/commit/dceeabb3423044e008906ba4a95940271da983bc)\n- Update GettingStarted.ino by \\@Interneedus in [`6f5e954`](https://github.com/nRF24/RF24/commit/6f5e95494c34b827c803b29c5c342ee96c71c45a)\n- Merge pull request \\#103 from Interneedus/patch-1 by \\@TMRh20 in [`638b199`](https://github.com/nRF24/RF24/commit/638b199b173f771902020445f42bedfed3fdc6a8)\n- Update Transfer.ino by \\@Interneedus in [`51600d6`](https://github.com/nRF24/RF24/commit/51600d69034b5f74944adedcbb4fdce6d122e4b4)\n- Merge pull request \\#104 from Interneedus/patch-2 by \\@TMRh20 in [`5896d62`](https://github.com/nRF24/RF24/commit/5896d62c2859811fb42d38debf4ba7d7b3359258)\n- Update scanner.ino by \\@Interneedus in [`7ad1c2f`](https://github.com/nRF24/RF24/commit/7ad1c2f0c621c0cf1c87112459673dbbfdd7e883)\n- Merge pull request \\#105 from Interneedus/patch-3 by \\@TMRh20 in [`a75fd1f`](https://github.com/nRF24/RF24/commit/a75fd1f4cac3eb2b9c82288f8575735840deb649)\n- Merge pull request \\#122 from ivankravets/patch-1 by \\@TMRh20 in [`417e6e5`](https://github.com/nRF24/RF24/commit/417e6e523bd34b64b2e39d13d9d883488cd51f57)\n- Modify printDetails() per \\#121 by \\@TMRh20 in [`594a949`](https://github.com/nRF24/RF24/commit/594a949b4be911430ccdc91d0d2d8a60d288afbf)\n- ESP8266 Support per \\@crcastle by \\@TMRh20 in [`cd52d61`](https://github.com/nRF24/RF24/commit/cd52d61bc08c3c3e46b5164a056b29e61fdf2689)\n- Merge branch 'master' of https://github.com/TMRh20/RF24 by \\@komby in [`0a8b1d3`](https://github.com/nRF24/RF24/commit/0a8b1d3df28a50bb189b3939da78c20a9b8ed0da)\n- Merge pull request \\#129 from komby/master by \\@TMRh20 in [`16c49cb`](https://github.com/nRF24/RF24/commit/16c49cbbf33cc4ad31ffeb09e835768385880665)\n- Change %S to %s for ESP8266 by \\@TMRh20 in [`ded7e1b`](https://github.com/nRF24/RF24/commit/ded7e1bc7dbe83490452106bd2677ca4eafd37c1)\n- Merge branch 'master' into Updates by \\@TMRh20 in [`2db0f2e`](https://github.com/nRF24/RF24/commit/2db0f2e659894ba82f32fa7400639170d6c6b79d)\n- Redefine PROGMEM variables for ESP8266 by \\@TMRh20 in [`14ed863`](https://github.com/nRF24/RF24/commit/14ed8638de5815fb38e88fe5d4a8daeaacbf6f20)\n- Fix for SPIDEV on 4.1.7+ by \\@TMRh20 in [`ded2157`](https://github.com/nRF24/RF24/commit/ded2157c0ba68e74e304e2e968e72c406f008875)\n- Merge branch 'Updates' by \\@TMRh20 in [`5296c16`](https://github.com/nRF24/RF24/commit/5296c16664f1ac22218fdec741a8d67ee3e8b58c)\n- Create library.properties by \\@Avamander in [`f824302`](https://github.com/nRF24/RF24/commit/f8243024523a14b8216b3a3df97359302028ee94)\n- Merge pull request \\#140 from Avamander/patch-1 by \\@TMRh20 in [`45d085b`](https://github.com/nRF24/RF24/commit/45d085bdc2b9fc3794e59fc297fcf95ccf4936b5)\n- Update library.properties by \\@Avamander in [`b4e1fa7`](https://github.com/nRF24/RF24/commit/b4e1fa7b13c1c5cd92fc806bc070f2298f34b8ea)\n- Merge pull request \\#142 from Avamander/patch-1 by \\@TMRh20 in [`2e5b360`](https://github.com/nRF24/RF24/commit/2e5b36006a44df481dac64c8b6fb3ab540434734)\n- Rename arch folder to utility by \\@TMRh20 in [`55b034e`](https://github.com/nRF24/RF24/commit/55b034eeb20c5bc838b7dc5d433162b8180860b8)\n- Reverting library properties and releases by \\@TMRh20 in [`517326e`](https://github.com/nRF24/RF24/commit/517326e164feeb35e7e54440a8c4b71c042d3f14)\n\n[1.0]: https://github.com/nRF24/RF24/compare/de083c964d9aeeb9fda7485c39fed27443cd617c...v1.0\n\nFull commit diff: [`de083c9...v1.0`][1.0]\n\n## New Contributors\n* \\@TMRh20 made their first contribution\n* \\@Avamander made their first contribution\n* \\@komby made their first contribution\n* \\@ivankravets made their first contribution\n* \\@Interneedus made their first contribution\n* \\@nerdralph made their first contribution\n* \\@jorihardman made their first contribution\n* \\@prophet-roshak made their first contribution\n* \\@mannkind made their first contribution\n* \\@dsbaha made their first contribution\n* \\@ax7884 made their first contribution\n* \\@martin-mat made their first contribution\n* \\@lnxbil made their first contribution\n* \\@k2OS made their first contribution\n* \\@spaniakos made their first contribution\n* \\@ made their first contribution\n* \\@jfktrey made their first contribution\n* \\@reixd made their first contribution\n* \\@a-lurker made their first contribution\n* \\@cornet made their first contribution\n* \\@zephyrr made their first contribution\n* \\@maniacbug made their first contribution\n* \\@gcopeland made their first contribution\n<!-- generated by git-cliff -->\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.236328125,
          "content": "# Check if we are building a pico-sdk based project\n# (or more exactly: if we just got included in a pico-sdk based project)\nif (PICO_SDK_PATH)\n    # If so, load the relevant CMakeLists-file but don't do anything else\n    include(${CMAKE_CURRENT_LIST_DIR}/utility/rp2/CMakeLists.txt)\n    return()\nendif()\n\ncmake_minimum_required(VERSION 3.15)\n\n# generate a compilation database for static analysis by clang-tidy\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# Set the project name to your project name\nproject(RF24 C CXX)\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/StandardProjectSettings.cmake)\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/PreventInSourceBuilds.cmake)\n\n# get library info from Arduino IDE's required library.properties file\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/GetLibInfo.cmake)\n\n# allow CMake CLI options to configure RF24_config.h macros\noption(RF24_DEBUG \"enable/disable debugging output\" OFF)\noption(MINIMAL \"exclude optional source code to keep compile size compact\" OFF)\n\n# Link this 'library' to set the c++ standard / compile-time options requested\nadd_library(${LibTargetName}_project_options INTERFACE)\ntarget_compile_features(${LibTargetName}_project_options INTERFACE cxx_std_17)\nadd_compile_options(-Ofast -Wall -pthread)\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \".*Clang\")\n    option(ENABLE_BUILD_WITH_TIME_TRACE \"Enable -ftime-trace to generate time tracing .json files on clang\" OFF)\n    if(ENABLE_BUILD_WITH_TIME_TRACE)\n        add_compile_definitions(${LibTargetName}_project_options INTERFACE -ftime-trace)\n    endif()\nendif()\n\n# Link this 'library' to use the warnings specified in CompilerWarnings.cmake\nadd_library(${LibTargetName}_project_warnings INTERFACE)\n\n# enable cache system\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/Cache.cmake)\n\n# standard compiler warnings\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/CompilerWarnings.cmake)\nset_project_warnings(${LibTargetName}_project_warnings)\n\n# sanitizer options if supported by compiler\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/Sanitizers.cmake)\nenable_sanitizers(${LibTargetName}_project_options)\n\n# allow for static analysis options\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/StaticAnalyzers.cmake)\n\noption(BUILD_SHARED_LIBS \"Enable compilation of shared libraries\" OFF)\noption(ENABLE_TESTING \"Enable Test Builds\" OFF) # for end-user projects\noption(ENABLE_FUZZING \"Enable Fuzzing Builds\" OFF) # for end-user projects\n\nif(ENABLE_TESTING)\n    enable_testing()\n    message(\"Building Tests.\")\n    add_subdirectory(test) # directory doesn't exist, so this does nothing.\nendif()\n\nif(ENABLE_FUZZING)\n    message(\"Building Fuzz Tests, using fuzzing sanitizer https://www.llvm.org/docs/LibFuzzer.html\")\n    add_subdirectory(fuzz_test) # directory doesn't exist, so this does nothing.\nendif()\n\n#####################################\n### Now we actually build the library\n#####################################\n\n# detect the CPU make and type\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/detectCPU.cmake) # sets the variable SOC accordingly\n\n# auto-detect what driver to use\n# auto-detect can be overridden using `cmake .. -D RF24_DRIVER=<supported driver>`\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/AutoConfig_RF24_DRIVER.cmake)\n\n#[[ adding the utility sub-directory will\n    1. set variables RF24_DRIVER, RF24_LINKED_DRIVER, and RF24_DRIVER_SOURCES\n    2. copy the appropriate /utility/*/includes.h file to the /utility folder\n    3. set additional install rules according to the RF24_DRIVER specified\n]]\nadd_subdirectory(utility)\n\n# setup CPack options\n# package dependencies are resolved correctly only after utility subdirectory is added\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/CPackInfo.cmake)\n\nadd_library(${LibTargetName} SHARED\n    RF24.cpp\n    ${RF24_DRIVER_SOURCES}\n)\n\ntarget_include_directories(${LibTargetName} PUBLIC utility)\n\nset_target_properties(\n    ${LibTargetName}\n    PROPERTIES\n    SOVERSION ${${LibName}_VERSION_MAJOR}\n    VERSION ${${LibName}_VERSION_STRING}\n)\n\nif(NOT \"${RF24_LINKED_DRIVER}\" STREQUAL \"\") # linking to a pre-compiled utility driver\n    message(STATUS \"Using utility library: ${RF24_LINKED_DRIVER}\")\n    target_link_libraries(${LibTargetName} INTERFACE\n        ${LibTargetName}_project_options\n        ${LibTargetName}_project_warnings\n        STATIC RF24_LINKED_DRIVER\n    )\nelse() # utility driver is compiled with the library - not linking to a pre-compiled utility driver\n    target_link_libraries(${LibTargetName} INTERFACE\n        ${LibTargetName}_project_options\n        ${LibTargetName}_project_warnings\n    )\nendif()\n\n# assert the appropriate preprocessor macros for RF24_config.h\nif(RF24_DEBUG)\n    message(STATUS \"RF24_DEBUG asserted\")\n    target_compile_definitions(${LibTargetName} PUBLIC RF24_DEBUG)\nendif()\nif(MINIMAL)\n    message(STATUS \"MINIMAL asserted\")\n    target_compile_definitions(${LibTargetName} PUBLIC MINIMAL)\nendif()\n# for RF24_POWERUP_DELAY & RF24_SPI_SPEED, let the default be configured in source code\nif(DEFINED RF24_POWERUP_DELAY)\n    message(STATUS \"RF24_POWERUP_DELAY set to ${RF24_POWERUP_DELAY}\")\n    target_compile_definitions(${LibTargetName} PUBLIC\n        RF24_POWERUP_DELAY=${RF24_POWERUP_DELAY}\n    )\nendif()\nif(DEFINED RF24_SPI_SPEED)\n    message(STATUS \"RF24_SPI_SPEED set to ${RF24_SPI_SPEED}\")\n    target_compile_definitions(${LibTargetName} PUBLIC\n        RF24_SPI_SPEED=${RF24_SPI_SPEED}\n    )\nendif()\n# allow user customization of default GPIO chip used with the SPIDEV driver\nif(DEFINED RF24_LINUX_GPIO_CHIP)\n    message(STATUS \"RF24_LINUX_GPIO_CHIP set to ${RF24_LINUX_GPIO_CHIP}\")\n    target_compile_definitions(${LibTargetName} PUBLIC\n        RF24_LINUX_GPIO_CHIP=\"${RF24_LINUX_GPIO_CHIP}\"\n    )\nendif()\n\n\n#####################################\n### Install rules for root source dir\n### There are separate install rules defined for each utility driver\n### Installing the library requires sudo privileges\n#####################################\ninstall(TARGETS ${LibTargetName}\n    DESTINATION lib\n)\n\ninstall(FILES\n        RF24.h\n        nRF24L01.h\n        printf.h\n        RF24_config.h\n    DESTINATION include/RF24\n)\n\ninstall(FILES\n        utility/includes.h\n    DESTINATION include/RF24/utility\n)\n\n# CMAKE_CROSSCOMPILING is only TRUE when CMAKE_TOOLCHAIN_FILE is specified via CLI\nif(\"${CMAKE_CROSSCOMPILING}\" STREQUAL \"FALSE\")\n    install(CODE \"message(STATUS \\\"Updating ldconfig\\\")\")\n    install(CODE \"execute_process(COMMAND ldconfig)\")\nendif()\n"
        },
        {
          "name": "COMMON_ISSUES.md",
          "type": "blob",
          "size": 10.7578125,
          "content": "# Common Issues\n\n@tableofcontents\n\n<!-- markdownlint-disable MD031 -->\n\n## Simple Troubleshooting\n\nWhen troubleshooting, users can start with the included gettingStarted\nsketch as it contains all the info needed to troubleshoot an RF24 radio.\n\n1. If `radio.begin()` returns false, the MCU and radio are not \"talking\"\nsuccessfully with each other. Verify pin connections and wiring.\n2. If `radio.begin()` returns true, but the devices are not communicating,\nusers can  uncomment the lines `printf_begin()` & `radio.printDetails()` and\n   view the settings. They should appear as the following:\n   \n   ```\n   SPI Speedz\t    = 10 Mhz\n   STATUS\t\t    = 0x0e RX_DR=0 TX_DS=0 MAX_RT=0 RX_P_NO=7 TX_FULL=0\n   RX_ADDR_P0-1\t    = 0x65646f4e31 0x65646f4e32\n   RX_ADDR_P2-5\t    = 0x33 0xce 0x3e 0xe3\n   TX_ADDR\t\t    = 0x65646f4e31\n   RX_PW_P0-6\t    = 0x04 0x04 0x04 0x04 0x04 0x04\n   EN_AA\t\t    = 0x3f\n   EN_RXADDR\t    = 0x02\n   RF_CH\t\t    = 0x4c\n   RF_SETUP\t        = 0x03\n   CONFIG\t\t    = 0x0f\n   DYNPD/FEATURE\t= 0x00 0x00\n   Data Rate\t    = 1 MBPS\n   Model\t\t    = nRF24L01+\n   CRC Length\t    = 16 bits\n   PA Power\t        = PA_LOW\n   ARC\t\t        = 0\n   ```\n   If the settings do not appear as above, troubleshoot wiring, pin\n   connections, etc.\n   \n3. If both of the above check out, the problem is likely the CE pin is wired wrong, or \neven hardware issues (bad radios etc.) See the following.\n   \n\n## Settings that must match\n\nBefore you report undesirable behavior, please make sure that the\nfollowing RF24 configurations match on both receiving and transmitting\nnRF24L01 transceivers:\n\n1. `RF24::setAddressWidth()`\n2. `RF24::setChannel()`\n3. `RF24::setDataRate()`\n4. `RF24::setAutoAck()`\n5. `RF24::enableDynamicPayloads()` or `RF24::disableDynamicPayloads()`\n6. `RF24::enableAckPayload()` or `RF24::disableAckPayload()` (requires auto-ack and\n   dynamic payloads features)\n7. `RF24::setPayloadSize()` (only if the dynamic payloads feature is disabled -- it is disabled by default)\n8. `RF24::setCRCLength()` or `RF24::disableCRC()` (the auto-ack feature\n   automatically enables CRC because it is required)\n\nAlso, it helps to think of an address as a path (a commonly shared route)\ninstead of an identifying device destination. This means that addresses\nhave to match for a payload to travel from one transceiver to another.\nHowever, the pipe numbers assigned with the matching address do not have\nto match. You can think of pipes as parking spots for the packets, while\nall packets' payloads live in a TX or RX FIFO buffer. Remember that the\nTX FIFO buffers and the RX FIFO buffers both have a maximum occupancy of\n3 payloads (regardless of the maximum 32-byte payload size).\n\n## Prohibited usage of write*() in Interrupt Service Routine callbacks\n\nBecause the RF24 library uses `millis()` to implement a timeout and `delay()` for mandatory wait times, the following functions cannot be used within an ISR callback method:\n\n- `RF24::write()`\n- `RF24::writeBlocking()`\n- `RF24::writeFast()`\n- `RF24::startWrite()`\n- `RF24::txStandBy()` & `RF24::txStandBy(uint32_t, bool)`\n- `RF24::powerUp()`\n- `RF24::startListening()`\n- `RF24::stopListening()`\n\n@see The note in the documentation for `RF24::available()`.\n\nMore info about why you can't call `millis()` (or `delay()`) from an ISR callback function is available at [the Arduino docs](https://www.google.com/url?sa=t&source=web&rct=j&url=https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/&ved=2ahUKEwjMhtSRl5jzAhVUsp4KHWIPCrIQFnoECAoQAQ&usg=AOvVaw1X9H0058Nz7Hck91VIC3bD).\n\n## Which write*() function do I use?\n\n**Standard:**\n\n`RF24::write()`: The standard write function, this is the most commonly used way to send data over radio link. This function will block until data is sent successfully. This means that if Auto-Ack is enabled, the radio will write the packet and wait for a response from the receiving radio. If Auto-Ack is disabled, the function will return sooner, as it will not wait for a response from the receiving radio.\n\n`RF24::startWrite()`: Can be used similar to the standard `RF24::write()` function, but it will not block. Useful for writing data outside of an interrupt routine, triggering that interrupt. Contains a `delayMicroseconds()` call for faster MCUs/devices to ensure the CE pin is toggled for a full 10us.\n\n**Advanced: (requires calling txStandBy())**\n\n`RF24::writeFast()`: Used for high-speed streaming of data. This function can be used to transmit data by simply placing data in the 3-layer FIFO buffers if room is available, or blocking until available. The function will return after a packet is placed in the buffer, or when a packet fails to transmit, in which case the buffers are cleared.\n\n`RF24::writeBlocking()`: Not commonly used, this function will first check the 3-layer FIFO for available space, then block until a timeout period is met if packets are failing, or return once there is room in the FIFO buffer and a packet is placed there.\n\nInterrupt Safe Functions:\n\n`RF24::startFastWrite()`: Can be used to write data and return immediately, without going into standBy mode. Can be used to transmit data at high speeds using interrupts, but will easily overflow the FIFO buffer if attempting to send data faster than the radio will process it.\n\nAgain, some of the other functions can technically be placed inside interrupt routines, but rely on millis() for timeouts etc. and this functionality will not typically work within an interrupt routine. Advanced users can comment out `FAILURE_HANDLING` in `RF24_config.h` to disable some of this functionality on non-linux devices to make functions like `RF24::txStandBy()` interrupt-safe.\n\n## Here are the most common issues and their solutions\n\n### write() always returns true after setAutoAck(false)\n\nDon't disabled the auto-ack feature. RF24::write() has no reason to doubt\nthat the payload was delivered if the auto-ack feature is disabled. We\nrecommend you read the docs about RF24::setAutoAck() before disabling the\nauto-ack feature.\n\n### write() returns false when the payload was received\n\nIf the settings match on both endpoint transceivers, then this can only\nmean that the receiving nRF24L01 failed to send an acknowledgement (ACK)\npacket back to the transmitting nRF24L01. Usually this is due to\ninstability (electric noise) in the power lines (VCC and GND) going to\nthe receiving nRF24L01.\n\nIf you're not receiving ACK packets correctly/reliably on data rates\nlower than 2MBPS, try adding a big capacitor close to the module/chip.\nExample issues: [#264](https://github.com/nRF24/RF24/issues/264)\n[#211](https://github.com/nRF24/RF24/issues/211).\n\nFor reliability, please use Electrolytic or Tantalum capacitors. Ceramic\ncapacitors may not be good enough (depending on the manufacturing source).\n\n### printDetails() outputs the unexpected value(s)\n\nThis is likely due to the SPI speed being set up to 10MHz by default. We recommend:\n\n1. Make sure the wires are not loose, and try to avoid using long wires.\n2. If the previous point does not help, then try lowering the SPI speed like so\n   ```cpp\n   RF24 radio(7, 8, 4000000); // set SPI speed to 4MHz instead of default 10MHz\n   ```\n\nIn the RF24 library's beginnings, the default value was (prior to 2014) set to 4MHz.\n\n### Payloads received/sent are inaccurate\n\nIf lowering the SPI speed (as noted above) does not fix this problem, then it is likely data misalignment.\n\nInaccurate payloads can also happen because of differences in how certain systems store data in memory. The easiest way to ensure your data aligns between devices is to specify the size of variables in code. For example, use `uint32_t` instead of `unsigned long`, and use `__attribute__((__packed__))` for data structures if you don't align your data manually per the linked blog posts (see below).\n\nNewer users can use the `sizeof()` function to verify the size of different variables or data structures as well.\n\nSee [GNU libc doc about integers](https://www.gnu.org/software/libc/manual/html_node/Integers.html) and [TMRh20's Blog Post](https://tmrh20.blogspot.com/2020/09/transferring-data-between-systems-using.html) for more info.\n\n### My PA/LNA module fails to transmit\n\nYou may find variants of the nRF24L01 transceiver that are marketed as “nRF24L01+PA+LNA”. These modules are distinct in the fact that they come with a detachable (SMA-type) antenna. They employ separate RFX24C01 IC with the antenna for enhanced Power Amplification (PA) and Low Noise Amplification (LNA) features. While they boast greater range with the same functionality, they are subject to a couple lesser known (and lesser advertised) drawbacks:\n\n1. Stronger power source. Below is a chart of advertised current requirements that many MCU boards’ 3V regulators may not be able to provide (after supplying power to internal components).\n   | Specification | Value |\n   |:-------------:|:-----:|\n   | Emission mode current(peak) | 115 mA |\n   | Receive Mode current(peak)  | 45 mA  |\n   | Power-down mode current     | 4.2 µA |\n\n2. Needs shielding from electromagnetic interference. Shielding usually works best when it has a path to ground (GND pin), but this connection to the GND pin is not required. It is important that the shielding does not touch any current carrying parts.\n   - Professionals tend to use a faraday cage/mesh to implement electromagnetic shielding, but it can be pricey for this scenario.\n   - A quick do-it-yourself solution (as proof-of-concept) would be to wrap the PA/LNA module with electrical tape and then wrap foil around the electrical tape (for shielding) while being very careful to not let the foil touch any current carrying parts (like the GPIO pins, the antenna mount, and the soldier joints for the antenna mount). Observe\n   [![ghetto_shielding_1.png](https://github.com/nRF24/RF24/blob/master/images/ghetto_sheilding_1.png)](https://github.com/nRF24/RF24/blob/master/images/ghetto_sheilding_1.png)\n   [![ghetto_shielding_2.png](https://github.com/nRF24/RF24/blob/master/images/ghetto_sheilding_2.png)](https://github.com/nRF24/RF24/blob/master/images/ghetto_sheilding_2.png)\n\n### My PA/LNA module doesn't perform as well as I'd hoped or the NRF radio works better on touching it\n\nAs described above, the radio modules (notably the PA+LNA versions) are reliant on a stable power source. While these modules may work with a poor power supply, they often lose packets or fail to receive as many as a module with a better power source. Moreover, this can sometimes be seen in odd ways such as the radio module working better when touched. This again is likely a power stability issue because the radio module is missing a capacitor (a commonly neglected expense on behalf of the module's manufacturer).\n\nAdd capacitor(s) close to the VCC and GND pins of the radio. Typically, 10uF is enough. Depending upon your circuit's layout, differences in capacitors' electrolytic properties can be seen, such that a low ESR (Equivalent Series Resistance) rated capacitor is desirable.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4521484375,
          "content": "# Contributing guidelines\n\nThese are the current requirements for getting your code included in RF24:\n\n- Try your best to follow the rest of the code, if you're unsure then [the NASA C style guide](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19950022400.pdf) can help as it's closest to the current style.\n\n- Definitely follow [PEP-8](https://www.python.org/dev/peps/pep-0008/) if it's Python code.\n\n- Follow the [Arduino example formatting style](https://docs.arduino.cc/learn/contributions/arduino-writing-style-guide) for Arduino examples\n\n- Add [doxygen-compatible documentation](https://www.doxygen.nl/manual/docblocks.html) to any new functions you add, or update existing documentation if you change behavior\n\n- CMake modules and CMakeLists.txt files should also have a uniform syntax.\n  - Indentation is a mandatory 4 spaces (not a `\\t` character).\n  - Closing parenthesis for multi-line commands should have the same indentation as the line that opened the parenthesis.\n  - For other useful CMake syntax convention, please see [CMake docs for developers](https://cmake.org/cmake/help/v3.20/manual/cmake-developer.7.html) and [this useful best CMake practices article](https://gist.github.com/mbinna/c61dbb39bca0e4fb7d1f73b0d66a4fd1). The qiBuild project has some [well-reasoned \"Dos & Don'ts\" guideline](http://doc.aldebaran.com/qibuild/hacking/contrib/cmake/coding_guide.html), but beware that the nRF24 organization is not related to the qiBuild project in any way.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.626953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {full name}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    SomeProgram version 69, Copyright (C) year name of author\n    SomeProgram comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w` and `show c` should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w` and `show c`; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  SomeCompany, Inc., hereby disclaims all copyright interest in the program\n  'SomeProgram' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.0556640625,
          "content": "#############################################################################\n#\n# Makefile for librf24\n#\n# License: GPL (General Public License)\n# Author:  Charles-Henri Hallard\n# Date:    2013/03/13\n#\n# Description:\n# ------------\n# use make all and make install to install the library\n#\n\nCONFIG_FILE=Makefile.inc\nREMOTE_ERROR=\"[ERROR] Remote machine not configured. Run configure with respective arguments.\"\n\ninclude $(CONFIG_FILE)\n\n# Objects to compile\nOBJECTS=RF24.o\nifeq ($(DRIVER), MRAA)\nOBJECTS+=spi.o gpio.o compatibility.o interrupt.o\nelse ifeq ($(DRIVER), RPi)\nOBJECTS+=spi.o bcm2835.o compatibility.o interrupt.o\nelse ifeq ($(DRIVER), SPIDEV)\nOBJECTS+=spi.o gpio.o compatibility.o interrupt.o\nelse ifeq ($(DRIVER), wiringPi)\nOBJECTS+=spi.o\nelse ifeq ($(DRIVER), pigpio)\nOBJECTS+=spi.o gpio.o interrupt.o compatibility.o\nendif\n\n# make all\n# reinstall the library after each recompilation\nall: $(LIBNAME)\n\n# Make the library\n$(LIBNAME): $(OBJECTS)\n\t@echo \"[Linking]\"\n\t$(CC) $(SHARED_LINKER_FLAGS) $(CFLAGS) -o $(LIBNAME) $^ $(SHARED_LINKER_LIBS)\n\n# Library parts\nRF24.o: RF24.cpp\n\t$(CXX) -fPIC $(CFLAGS) -c $^\n\nbcm2835.o: $(DRIVER_DIR)/bcm2835.c\n\t$(CC) -fPIC $(CFLAGS) -c $^\n\nspi.o: $(DRIVER_DIR)/spi.cpp\n\t$(CXX) -fPIC $(CFLAGS) -c $^\n\ncompatibility.o: $(DRIVER_DIR)/compatibility.cpp\n\t$(CC) -fPIC  $(CFLAGS) -c $(DRIVER_DIR)/compatibility.cpp\n\ngpio.o: $(DRIVER_DIR)/gpio.cpp\n\t$(CXX) -fPIC $(CFLAGS) -c $(DRIVER_DIR)/gpio.cpp\n\ninterrupt.o: $(DRIVER_DIR)/interrupt.cpp\n\t$(CXX) -fPIC $(CFLAGS) -c $(DRIVER_DIR)/interrupt.cpp\n\n# clear configuration files\ncleanconfig:\n\t@echo \"[Cleaning configuration]\"\n\trm -rf $(CONFIG_FILE) utility/includes.h\n\n# clear build files\nclean:\n\t@echo \"[Cleaning]\"\n\trm -rf *.o $(LIBNAME)\n\n$(CONFIG_FILE):\n\t@echo \"[Running configure]\"\n\t@./configure --no-clean\n\ninstall: all install-libs install-headers\nupload: all upload-libs upload-headers\n\n# Install the library to LIBPATH\ninstall-libs:\n\t@echo \"[Installing Libs to $(LIB_DIR)]\"\n\t@if ( test ! -d $(LIB_DIR) ); then mkdir -p $(LIB_DIR); fi\n\t@install -m 0755 $(LIBNAME) $(LIB_DIR)\n\t@orig=$(LIBNAME) && \\\n\tfor sl in $(LIBSYMLINKS); do \\\n\t\tln -sf $(LIB_DIR)/$${orig} $(LIB_DIR)/$${sl}; \\\n\t\torig=$${sl}; \\\n\tdone && \\\n\tif [ \"$(LIBDEPRECATE)\" ]; then ln -sf $(LIB_DIR)/$${orig} $(LIB_DIR)/$(LIBDEPRECATE); fi\nifneq ($(LDCONFIG),)\n\t@$(LDCONFIG)\nendif\n\nupload-libs:\n\t@echo \"[Uploading Libs to $(REMOTE):$(REMOTE_LIB_DIR)]\"\nifeq ($(REMOTE),)\n\t@echo \"$(REMOTE_ERROR)\"\n\t@exit 1\nendif\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"mkdir -p $(REMOTE_LIB_DIR)\"\n\t@scp -q -P $(REMOTE_PORT) $(LIBNAME) $(REMOTE):/tmp\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo install -m 0755 /tmp/$(LIBNAME) $(REMOTE_LIB_DIR) &&\" \\\n\t\t\" orig=$(LIBNAME) && for sl in $(LIBSYMLINKS); do sudo ln -sf $(REMOTE_LIB_DIR)/\\$${orig} $(REMOTE_LIB_DIR)/\\$${sl}; orig=\\$${sl}; done &&\" \\\n\t\t\" if [ \"$(LIBDEPRECATE)\" ]; then sudo ln -sf $(REMOTE_LIB_DIR)/\\$${orig} $(REMOTE_LIB_DIR)/$(LIBDEPRECATE); fi &&\" \\\n\t\t\" rm /tmp/$(LIBNAME)\"\nifneq ($(REMOTE_LDCONFIG),)\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo $(REMOTE_LDCONFIG)\"\nendif\n\ninstall-headers:\n\t@echo \"[Installing Headers to $(HEADER_DIR)]\"\n\t@mkdir -p $(HEADER_DIR)/$(DRIVER_DIR)\n\t@install -m 0644 *.h $(HEADER_DIR)\n\t@install -m 0644 $(DRIVER_DIR)/*.h $(HEADER_DIR)/$(DRIVER_DIR)\n\t@install -m 0644 $(ARCH_DIR)/*.h $(HEADER_DIR)/$(ARCH_DIR)\n\nupload-headers:\n\t@echo \"[Uploading Headers to $(REMOTE):$(REMOTE_HEADER_DIR)]\"\nifeq ($(REMOTE),)\n\t@echo \"$(REMOTE_ERROR)\"\n\t@exit 1\nendif\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo mkdir -p $(REMOTE_HEADER_DIR)/$(DRIVER_DIR)\"\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"mkdir -p /tmp/RF24 && rm -rf /tmp/RF24/*\"\n\t@rsync -a --include=\"*.h\" --include=\"*/\" --exclude=\"*\" -e \"ssh -p $(REMOTE_PORT)\" . $(REMOTE):/tmp/RF24\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo install -m 0644 /tmp/RF24/*.h $(REMOTE_HEADER_DIR)\"\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo install -m 0644 /tmp/RF24/$(DRIVER_DIR)/*.h $(REMOTE_HEADER_DIR)/$(DRIVER_DIR)\"\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"sudo install -m 0644 /tmp/RF24/$(ARCH_DIR)/*.h $(REMOTE_HEADER_DIR)/$(ARCH_DIR)\"\n\t@ssh -q -t -p $(REMOTE_PORT) $(REMOTE) \"rm -rf /tmp/RF24\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.19921875,
          "content": "<!-- markdownlint-disable MD041 MD034 -->\n[![Arduino CLI build](https://github.com/nRF24/RF24/workflows/Arduino%20CLI%20build/badge.svg)](https://github.com/nRF24/RF24/actions?query=workflow%3A%22Arduino+CLI+build%22)\n[![Linux build](https://github.com/nRF24/RF24/workflows/Linux%20build/badge.svg)](https://github.com/nRF24/RF24/actions?query=workflow%3A%22Linux+build%22)\n[![PlatformIO build](https://github.com/nRF24/RF24/actions/workflows/build_platformIO.yml/badge.svg)](https://github.com/nRF24/RF24/actions/workflows/build_platformIO.yml)\n[![RP2xxx build](https://github.com/nRF24/RF24/actions/workflows/build_rp2xxx.yml/badge.svg)](https://github.com/nRF24/RF24/actions/workflows/build_rp2xxx.yml)\n[![Documentation Status](https://readthedocs.org/projects/rf24/badge/?version=latest)](https://rf24.readthedocs.io/en/latest/?badge=latest)\n\n# See http://nRF24.github.io/RF24 for all documentation\n\n## Having problems?\n\nPlease read our **[solutions to common problems](COMMON_ISSUES.md)**. If that doesn't help, then open an issue describing your problem with as much detail as possible.\n\n### Want to contribute?\n\nAwesome! However, please check our [contributing guidelines](CONTRIBUTING.md) before opening a pull request.\n"
        },
        {
          "name": "RF24.cpp",
          "type": "blob",
          "size": 65.77734375,
          "content": "/*\n Copyright (C) 2011 J. Coliz <maniacbug@ymail.com>\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n */\n\n#include \"nRF24L01.h\"\n#include \"RF24_config.h\"\n#include \"RF24.h\"\n\n/****************************************************************************/\n\nvoid RF24::csn(bool mode)\n{\n#if defined(RF24_TINY)\n    if (ce_pin != csn_pin) {\n        digitalWrite(csn_pin, mode);\n    }\n    else {\n        if (mode == HIGH) {\n            PORTB |= (1 << PINB2);                         // SCK->CSN HIGH\n            delayMicroseconds(RF24_CSN_SETTLE_HIGH_DELAY); // allow csn to settle.\n        }\n        else {\n            PORTB &= ~(1 << PINB2);                       // SCK->CSN LOW\n            delayMicroseconds(RF24_CSN_SETTLE_LOW_DELAY); // allow csn to settle\n        }\n    }\n    // Return, CSN toggle complete\n    return;\n\n#elif defined(ARDUINO) && !defined(RF24_SPI_TRANSACTIONS)\n    // Minimum ideal SPI bus speed is 2x data rate\n    // If we assume 2Mbs data rate and 16Mhz clock, a\n    // divider of 4 is the minimum we want.\n    // CLK:BUS 8Mhz:2Mhz, 16Mhz:4Mhz, or 20Mhz:5Mhz\n\n    #if !defined(SOFTSPI)\n        // applies to SPI_UART and inherent hardware SPI\n        #if defined(RF24_SPI_PTR)\n    _spi->setBitOrder(MSBFIRST);\n    _spi->setDataMode(SPI_MODE0);\n\n            #if !defined(F_CPU) || F_CPU < 20000000\n    _spi->setClockDivider(SPI_CLOCK_DIV2);\n            #elif F_CPU < 40000000\n    _spi->setClockDivider(SPI_CLOCK_DIV4);\n            #elif F_CPU < 80000000\n    _spi->setClockDivider(SPI_CLOCK_DIV8);\n            #elif F_CPU < 160000000\n    _spi->setClockDivider(SPI_CLOCK_DIV16);\n            #elif F_CPU < 320000000\n    _spi->setClockDivider(SPI_CLOCK_DIV32);\n            #elif F_CPU < 640000000\n    _spi->setClockDivider(SPI_CLOCK_DIV64);\n            #elif F_CPU < 1280000000\n    _spi->setClockDivider(SPI_CLOCK_DIV128);\n            #else // F_CPU >= 1280000000\n                #error \"Unsupported CPU frequency. Please set correct SPI divider.\"\n            #endif // F_CPU to SPI_CLOCK_DIV translation\n\n        #else // !defined(RF24_SPI_PTR)\n    _SPI.setBitOrder(MSBFIRST);\n    _SPI.setDataMode(SPI_MODE0);\n\n            #if !defined(F_CPU) || F_CPU < 20000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV2);\n            #elif F_CPU < 40000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV4);\n            #elif F_CPU < 80000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV8);\n            #elif F_CPU < 160000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV16);\n            #elif F_CPU < 320000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV32);\n            #elif F_CPU < 640000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV64);\n            #elif F_CPU < 1280000000\n    _SPI.setClockDivider(SPI_CLOCK_DIV128);\n            #else // F_CPU >= 1280000000\n                #error \"Unsupported CPU frequency. Please set correct SPI divider.\"\n            #endif // F_CPU to SPI_CLOCK_DIV translation\n        #endif     // !defined(RF24_SPI_PTR)\n    #endif         // !defined(SOFTSPI)\n\n#elif defined(RF24_RPi)\n    if (!mode)\n        _SPI.chipSelect(csn_pin);\n#endif // defined(RF24_RPi)\n\n#if !defined(RF24_LINUX)\n    digitalWrite(csn_pin, mode);\n    delayMicroseconds(csDelay);\n#else\n    static_cast<void>(mode); // ignore -Wunused-parameter\n#endif // !defined(RF24_LINUX)\n}\n\n/****************************************************************************/\n\nvoid RF24::ce(bool level)\n{\n#ifndef RF24_LINUX\n    //Allow for 3-pin use on ATTiny\n    if (ce_pin != csn_pin) {\n#endif\n        digitalWrite(ce_pin, level);\n#ifndef RF24_LINUX\n    }\n#endif\n}\n\n/****************************************************************************/\n\ninline void RF24::beginTransaction()\n{\n#if defined(RF24_SPI_TRANSACTIONS)\n    #if defined(RF24_SPI_PTR)\n        #if defined(RF24_RP2)\n    _spi->beginTransaction(spi_speed);\n        #else  // ! defined (RF24_RP2)\n    _spi->beginTransaction(SPISettings(spi_speed, MSBFIRST, SPI_MODE0));\n        #endif // ! defined (RF24_RP2)\n    #else      // !defined(RF24_SPI_PTR)\n    _SPI.beginTransaction(SPISettings(spi_speed, MSBFIRST, SPI_MODE0));\n    #endif     // !defined(RF24_SPI_PTR)\n#endif         // defined (RF24_SPI_TRANSACTIONS)\n    csn(LOW);\n}\n\n/****************************************************************************/\n\ninline void RF24::endTransaction()\n{\n    csn(HIGH);\n#if defined(RF24_SPI_TRANSACTIONS)\n    #if defined(RF24_SPI_PTR)\n    _spi->endTransaction();\n    #else  // !defined(RF24_SPI_PTR)\n    _SPI.endTransaction();\n    #endif // !defined(RF24_SPI_PTR)\n#endif     // defined (RF24_SPI_TRANSACTIONS)\n}\n\n/****************************************************************************/\n\nvoid RF24::read_register(uint8_t reg, uint8_t* buf, uint8_t len)\n{\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction(); //configures the spi settings for RPi, locks mutex and setting csn low\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    uint8_t size = static_cast<uint8_t>(len + 1); // Add register value to transmit buffer\n\n    *ptx++ = reg;\n\n    while (len--) {\n        *ptx++ = RF24_NOP; // Dummy operation, just for reading\n    }\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, size);\n    #else  // !defined (RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), size);\n    #endif // !defined (RF24_RP2)\n\n    status = *prx++; // status is 1st byte of receive buffer\n\n    // decrement before to skip status byte\n    while (--size) {\n        *buf++ = *prx++;\n    }\n\n    endTransaction(); // unlocks mutex and setting csn high\n\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(reg);\n    while (len--) {\n        *buf++ = _spi->transfer(0xFF);\n    }\n\n    #else // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(reg);\n    while (len--) {\n        *buf++ = _SPI.transfer(0xFF);\n    }\n\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n#endif     // !defined(RF24_LINUX) && !defined(RF24_RP2)\n}\n\n/****************************************************************************/\n\nuint8_t RF24::read_register(uint8_t reg)\n{\n    uint8_t result;\n\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction();\n\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    *ptx++ = reg;\n    *ptx++ = RF24_NOP; // Dummy operation, just for reading\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, 2);\n    #else  // !defined(RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), 2);\n    #endif // !defined(RF24_RP2)\n\n    status = *prx;   // status is 1st byte of receive buffer\n    result = *++prx; // result is 2nd byte of receive buffer\n\n    endTransaction();\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(reg);\n    result = _spi->transfer(0xff);\n\n    #else // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(reg);\n    result = _SPI.transfer(0xff);\n\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n#endif     // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    return result;\n}\n\n/****************************************************************************/\n\nvoid RF24::write_register(uint8_t reg, const uint8_t* buf, uint8_t len)\n{\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction();\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    uint8_t size = static_cast<uint8_t>(len + 1); // Add register value to transmit buffer\n\n    *ptx++ = (W_REGISTER | reg);\n    while (len--) {\n        *ptx++ = *buf++;\n    }\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, size);\n    #else  // !defined(RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), size);\n    #endif // !defined(RF24_RP2)\n\n    status = *prx; // status is 1st byte of receive buffer\n    endTransaction();\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(W_REGISTER | reg);\n    while (len--) {\n        _spi->transfer(*buf++);\n    }\n\n    #else // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(W_REGISTER | reg);\n    while (len--) {\n        _SPI.transfer(*buf++);\n    }\n\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n#endif     // !defined(RF24_LINUX) && !defined(RF24_RP2)\n}\n\n/****************************************************************************/\n\nvoid RF24::write_register(uint8_t reg, uint8_t value)\n{\n    IF_RF24_DEBUG(printf_P(PSTR(\"write_register(%02x,%02x)\\r\\n\"), reg, value));\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction();\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    *ptx++ = (W_REGISTER | reg);\n    *ptx = value;\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, 2);\n    #else  // !defined(RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), 2);\n    #endif // !defined(RF24_RP2)\n\n    status = *prx++; // status is 1st byte of receive buffer\n    endTransaction();\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(W_REGISTER | reg);\n    _spi->transfer(value);\n    #else  // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(W_REGISTER | reg);\n    _SPI.transfer(value);\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n#endif     // !defined(RF24_LINUX) && !defined(RF24_RP2)\n}\n\n/****************************************************************************/\n\nvoid RF24::write_payload(const void* buf, uint8_t data_len, const uint8_t writeType)\n{\n    const uint8_t* current = reinterpret_cast<const uint8_t*>(buf);\n\n    uint8_t blank_len = !data_len ? 1 : 0;\n    if (!dynamic_payloads_enabled) {\n        data_len = rf24_min(data_len, payload_size);\n        blank_len = static_cast<uint8_t>(payload_size - data_len);\n    }\n    else {\n        data_len = rf24_min(data_len, static_cast<uint8_t>(32));\n    }\n\n    //printf(\"[Writing %u bytes %u blanks]\",data_len,blank_len);\n    IF_RF24_DEBUG(printf_P(\"[Writing %u bytes %u blanks]\\n\", data_len, blank_len););\n\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction();\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    uint8_t size;\n    size = static_cast<uint8_t>(data_len + blank_len + 1); // Add register value to transmit buffer\n\n    *ptx++ = writeType;\n    while (data_len--) {\n        *ptx++ = *current++;\n    }\n\n    while (blank_len--) {\n        *ptx++ = 0;\n    }\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, size);\n    #else  // !defined(RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), size);\n    #endif // !defined(RF24_RP2)\n\n    status = *prx; // status is 1st byte of receive buffer\n    endTransaction();\n\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(writeType);\n    while (data_len--) {\n        _spi->transfer(*current++);\n    }\n\n    while (blank_len--) {\n        _spi->transfer(0);\n    }\n\n    #else // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(writeType);\n    while (data_len--) {\n        _SPI.transfer(*current++);\n    }\n\n    while (blank_len--) {\n        _SPI.transfer(0);\n    }\n\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n#endif     // !defined(RF24_LINUX) && !defined(RF24_RP2)\n}\n\n/****************************************************************************/\n\nvoid RF24::read_payload(void* buf, uint8_t data_len)\n{\n    uint8_t* current = reinterpret_cast<uint8_t*>(buf);\n\n    uint8_t blank_len = 0;\n    if (!dynamic_payloads_enabled) {\n        data_len = rf24_min(data_len, payload_size);\n        blank_len = static_cast<uint8_t>(payload_size - data_len);\n    }\n    else {\n        data_len = rf24_min(data_len, static_cast<uint8_t>(32));\n    }\n\n    //printf(\"[Reading %u bytes %u blanks]\",data_len,blank_len);\n\n    IF_RF24_DEBUG(printf_P(\"[Reading %u bytes %u blanks]\\n\", data_len, blank_len););\n\n#if defined(RF24_LINUX) || defined(RF24_RP2)\n    beginTransaction();\n    uint8_t* prx = spi_rxbuff;\n    uint8_t* ptx = spi_txbuff;\n    uint8_t size;\n    size = static_cast<uint8_t>(data_len + blank_len + 1); // Add register value to transmit buffer\n\n    *ptx++ = R_RX_PAYLOAD;\n    while (--size) {\n        *ptx++ = RF24_NOP;\n    }\n\n    size = static_cast<uint8_t>(data_len + blank_len + 1); // Size has been lost during while, re affect\n\n    #if defined(RF24_RP2)\n    _spi->transfernb((const uint8_t*)spi_txbuff, spi_rxbuff, size);\n    #else  // !defined(RF24_RP2)\n    _SPI.transfernb(reinterpret_cast<char*>(spi_txbuff), reinterpret_cast<char*>(spi_rxbuff), size);\n    #endif // !defined(RF24_RP2)\n\n    status = *prx++; // 1st byte is status\n\n    if (data_len > 0) {\n        // Decrement before to skip 1st status byte\n        while (--data_len) {\n            *current++ = *prx++;\n        }\n\n        *current = *prx;\n    }\n    endTransaction();\n#else // !defined(RF24_LINUX) && !defined(RF24_RP2)\n\n    beginTransaction();\n    #if defined(RF24_SPI_PTR)\n    status = _spi->transfer(R_RX_PAYLOAD);\n    while (data_len--) {\n        *current++ = _spi->transfer(0xFF);\n    }\n\n    while (blank_len--) {\n        _spi->transfer(0xFF);\n    }\n\n    #else // !defined(RF24_SPI_PTR)\n    status = _SPI.transfer(R_RX_PAYLOAD);\n    while (data_len--) {\n        *current++ = _SPI.transfer(0xFF);\n    }\n\n    while (blank_len--) {\n        _SPI.transfer(0xff);\n    }\n\n    #endif // !defined(RF24_SPI_PTR)\n    endTransaction();\n\n#endif // !defined(RF24_LINUX) && !defined(RF24_RP2)\n}\n\n/****************************************************************************/\n\nuint8_t RF24::flush_rx(void)\n{\n    read_register(FLUSH_RX, (uint8_t*)nullptr, 0);\n    IF_RF24_DEBUG(printf_P(\"[Flushing RX FIFO]\"););\n    return status;\n}\n\n/****************************************************************************/\n\nuint8_t RF24::flush_tx(void)\n{\n    read_register(FLUSH_TX, (uint8_t*)nullptr, 0);\n    IF_RF24_DEBUG(printf_P(\"[Flushing RX FIFO]\"););\n    return status;\n}\n\n/****************************************************************************/\n\nuint8_t RF24::get_status(void)\n{\n    read_register(RF24_NOP, (uint8_t*)nullptr, 0);\n    return status;\n}\n\n/****************************************************************************/\n#if !defined(MINIMAL)\n\nvoid RF24::print_status(uint8_t _status)\n{\n    printf_P(PSTR(\"STATUS\\t\\t= 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\\r\\n\"), _status, (_status & _BV(RX_DR)) ? 1 : 0,\n             (_status & _BV(TX_DS)) ? 1 : 0, (_status & _BV(MAX_RT)) ? 1 : 0, ((_status >> RX_P_NO) & 0x07), (_status & _BV(TX_FULL)) ? 1 : 0);\n}\n\n/****************************************************************************/\n\nvoid RF24::print_observe_tx(uint8_t value)\n{\n    printf_P(PSTR(\"OBSERVE_TX=%02x: PLOS_CNT=%x ARC_CNT=%x\\r\\n\"), value, (value >> PLOS_CNT) & 0x0F, (value >> ARC_CNT) & 0x0F);\n}\n\n/****************************************************************************/\n\nvoid RF24::print_byte_register(const char* name, uint8_t reg, uint8_t qty)\n{\n    printf_P(PSTR(PRIPSTR\n                  \"\\t=\"),\n             name);\n    while (qty--) {\n        printf_P(PSTR(\" 0x%02x\"), read_register(reg++));\n    }\n    printf_P(PSTR(\"\\r\\n\"));\n}\n\n/****************************************************************************/\n\nvoid RF24::print_address_register(const char* name, uint8_t reg, uint8_t qty)\n{\n\n    printf_P(PSTR(PRIPSTR\n                  \"\\t=\"),\n             name);\n    while (qty--) {\n        uint8_t* buffer = new uint8_t[addr_width];\n        read_register(reg++, buffer, addr_width);\n\n        printf_P(PSTR(\" 0x\"));\n        uint8_t* bufptr = buffer + addr_width;\n        while (--bufptr >= buffer) {\n            printf_P(PSTR(\"%02x\"), *bufptr); // NOLINT: clang-tidy seems to emit a false positive about zero-allocated memory here (*bufptr)\n        }\n        delete[] buffer;\n    }\n    printf_P(PSTR(\"\\r\\n\"));\n}\n\n/****************************************************************************/\n\nuint8_t RF24::sprintf_address_register(char* out_buffer, uint8_t reg, uint8_t qty)\n{\n    uint8_t offset = 0;\n    uint8_t* read_buffer = new uint8_t[addr_width];\n    while (qty--) {\n        read_register(reg++, read_buffer, addr_width);\n        uint8_t* bufptr = read_buffer + addr_width;\n        while (--bufptr >= read_buffer) {\n            offset += sprintf_P(out_buffer + offset, PSTR(\"%02X\"), *bufptr); // NOLINT(clang-analyzer-cplusplus.NewDelete)\n        }\n    }\n    delete[] read_buffer;\n    return offset;\n}\n#endif // !defined(MINIMAL)\n\n/****************************************************************************/\n\nRF24::RF24(rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin, uint32_t _spi_speed)\n    : ce_pin(_cepin),\n      csn_pin(_cspin),\n      spi_speed(_spi_speed),\n      payload_size(32),\n      _is_p_variant(false),\n      _is_p0_rx(false),\n      addr_width(5),\n      dynamic_payloads_enabled(true),\n#if defined FAILURE_HANDLING\n      failureDetected(0),\n#endif\n      csDelay(5)\n{\n    _init_obj();\n}\n\n/****************************************************************************/\n\nRF24::RF24(uint32_t _spi_speed)\n    : ce_pin(RF24_PIN_INVALID),\n      csn_pin(RF24_PIN_INVALID),\n      spi_speed(_spi_speed),\n      payload_size(32),\n      _is_p_variant(false),\n      _is_p0_rx(false),\n      addr_width(5),\n      dynamic_payloads_enabled(true),\n#if defined FAILURE_HANDLING\n      failureDetected(0),\n#endif\n      csDelay(5)\n{\n    _init_obj();\n}\n\n/****************************************************************************/\n\nvoid RF24::_init_obj()\n{\n    // Use a pointer on the Arduino platform\n\n#if defined(RF24_SPI_PTR) && !defined(RF24_RP2)\n    _spi = &SPI;\n#endif // defined (RF24_SPI_PTR)\n\n    pipe0_reading_address[0] = 0;\n    if (spi_speed <= 35000) { //Handle old BCM2835 speed constants, default to RF24_SPI_SPEED\n        spi_speed = RF24_SPI_SPEED;\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::setChannel(uint8_t channel)\n{\n    const uint8_t max_channel = 125;\n    write_register(RF_CH, rf24_min(channel, max_channel));\n}\n\nuint8_t RF24::getChannel()\n{\n    return read_register(RF_CH);\n}\n\n/****************************************************************************/\n\nvoid RF24::setPayloadSize(uint8_t size)\n{\n    // payload size must be in range [1, 32]\n    payload_size = static_cast<uint8_t>(rf24_max(1, rf24_min(32, size)));\n\n    // write static payload size setting for all pipes\n    for (uint8_t i = 0; i < 6; ++i) {\n        write_register(static_cast<uint8_t>(RX_PW_P0 + i), payload_size);\n    }\n}\n\n/****************************************************************************/\n\nuint8_t RF24::getPayloadSize(void)\n{\n    return payload_size;\n}\n\n/****************************************************************************/\n\n#if !defined(MINIMAL)\n\nstatic const PROGMEM char rf24_datarate_e_str_0[] = \"= 1 MBPS\";\nstatic const PROGMEM char rf24_datarate_e_str_1[] = \"= 2 MBPS\";\nstatic const PROGMEM char rf24_datarate_e_str_2[] = \"= 250 KBPS\";\nstatic const PROGMEM char* const rf24_datarate_e_str_P[] = {\n    rf24_datarate_e_str_0,\n    rf24_datarate_e_str_1,\n    rf24_datarate_e_str_2,\n};\nstatic const PROGMEM char rf24_model_e_str_0[] = \"nRF24L01\";\nstatic const PROGMEM char rf24_model_e_str_1[] = \"nRF24L01+\";\nstatic const PROGMEM char* const rf24_model_e_str_P[] = {\n    rf24_model_e_str_0,\n    rf24_model_e_str_1,\n};\nstatic const PROGMEM char rf24_crclength_e_str_0[] = \"= Disabled\";\nstatic const PROGMEM char rf24_crclength_e_str_1[] = \"= 8 bits\";\nstatic const PROGMEM char rf24_crclength_e_str_2[] = \"= 16 bits\";\nstatic const PROGMEM char* const rf24_crclength_e_str_P[] = {\n    rf24_crclength_e_str_0,\n    rf24_crclength_e_str_1,\n    rf24_crclength_e_str_2,\n};\nstatic const PROGMEM char rf24_pa_dbm_e_str_0[] = \"= PA_MIN\";\nstatic const PROGMEM char rf24_pa_dbm_e_str_1[] = \"= PA_LOW\";\nstatic const PROGMEM char rf24_pa_dbm_e_str_2[] = \"= PA_HIGH\";\nstatic const PROGMEM char rf24_pa_dbm_e_str_3[] = \"= PA_MAX\";\nstatic const PROGMEM char* const rf24_pa_dbm_e_str_P[] = {\n    rf24_pa_dbm_e_str_0,\n    rf24_pa_dbm_e_str_1,\n    rf24_pa_dbm_e_str_2,\n    rf24_pa_dbm_e_str_3,\n};\n\nstatic const PROGMEM char rf24_feature_e_str_on[] = \"= Enabled\";\nstatic const PROGMEM char rf24_feature_e_str_allowed[] = \"= Allowed\";\nstatic const PROGMEM char rf24_feature_e_str_open[] = \" open \";\nstatic const PROGMEM char rf24_feature_e_str_closed[] = \"closed\";\nstatic const PROGMEM char* const rf24_feature_e_str_P[] = {\n    rf24_crclength_e_str_0,\n    rf24_feature_e_str_on,\n    rf24_feature_e_str_allowed,\n    rf24_feature_e_str_closed,\n    rf24_feature_e_str_open,\n};\n\nvoid RF24::printDetails(void)\n{\n\n    #if defined(RF24_LINUX)\n    printf(\"================ SPI Configuration ================\\n\");\n    uint8_t bus_ce = static_cast<uint8_t>(csn_pin % 10);\n    uint8_t bus_numb = static_cast<uint8_t>((csn_pin - bus_ce) / 10);\n    printf(\"CSN Pin\\t\\t= /dev/spidev%d.%d\\n\", bus_numb, bus_ce);\n    printf(\"CE Pin\\t\\t= Custom GPIO%d\\n\", ce_pin);\n    #endif\n    printf_P(PSTR(\"SPI Speedz\\t= %d Mhz\\n\"), static_cast<uint8_t>(spi_speed / 1000000)); //Print the SPI speed on non-Linux devices\n    #if defined(RF24_LINUX)\n    printf(\"================ NRF Configuration ================\\n\");\n    #endif // defined(RF24_LINUX)\n\n    print_status(get_status());\n\n    print_address_register(PSTR(\"RX_ADDR_P0-1\"), RX_ADDR_P0, 2);\n    print_byte_register(PSTR(\"RX_ADDR_P2-5\"), RX_ADDR_P2, 4);\n    print_address_register(PSTR(\"TX_ADDR\\t\"), TX_ADDR);\n\n    print_byte_register(PSTR(\"RX_PW_P0-6\"), RX_PW_P0, 6);\n    print_byte_register(PSTR(\"EN_AA\\t\"), EN_AA);\n    print_byte_register(PSTR(\"EN_RXADDR\"), EN_RXADDR);\n    print_byte_register(PSTR(\"RF_CH\\t\"), RF_CH);\n    print_byte_register(PSTR(\"RF_SETUP\"), RF_SETUP);\n    print_byte_register(PSTR(\"CONFIG\\t\"), NRF_CONFIG);\n    print_byte_register(PSTR(\"DYNPD/FEATURE\"), DYNPD, 2);\n\n    printf_P(PSTR(\"Data Rate\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_datarate_e_str_P[getDataRate()])));\n    printf_P(PSTR(\"Model\\t\\t= \" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_model_e_str_P[isPVariant()])));\n    printf_P(PSTR(\"CRC Length\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_crclength_e_str_P[getCRCLength()])));\n    printf_P(PSTR(\"PA Power\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_pa_dbm_e_str_P[getPALevel()])));\n    printf_P(PSTR(\"ARC\\t\\t= %d\\r\\n\"), getARC());\n}\n\nvoid RF24::printPrettyDetails(void)\n{\n\n    #if defined(RF24_LINUX)\n    printf(\"================ SPI Configuration ================\\n\");\n    uint8_t bus_ce = static_cast<uint8_t>(csn_pin % 10);\n    uint8_t bus_numb = static_cast<uint8_t>((csn_pin - bus_ce) / 10);\n    printf(\"CSN Pin\\t\\t\\t= /dev/spidev%d.%d\\n\", bus_numb, bus_ce);\n    printf(\"CE Pin\\t\\t\\t= Custom GPIO%d\\n\", ce_pin);\n    #endif\n    printf_P(PSTR(\"SPI Frequency\\t\\t= %d Mhz\\n\"), static_cast<uint8_t>(spi_speed / 1000000)); //Print the SPI speed on non-Linux devices\n    #if defined(RF24_LINUX)\n    printf(\"================ NRF Configuration ================\\n\");\n    #endif // defined(RF24_LINUX)\n\n    uint8_t channel = getChannel();\n    uint16_t frequency = static_cast<uint16_t>(channel + 2400);\n    printf_P(PSTR(\"Channel\\t\\t\\t= %u (~ %u MHz)\\r\\n\"), channel, frequency);\n    printf_P(PSTR(\"Model\\t\\t\\t= \" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_model_e_str_P[isPVariant()])));\n\n    printf_P(PSTR(\"RF Data Rate\\t\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_datarate_e_str_P[getDataRate()])));\n    printf_P(PSTR(\"RF Power Amplifier\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_pa_dbm_e_str_P[getPALevel()])));\n    printf_P(PSTR(\"RF Low Noise Amplifier\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>((read_register(RF_SETUP) & 1) * 1)])));\n    printf_P(PSTR(\"CRC Length\\t\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_crclength_e_str_P[getCRCLength()])));\n    printf_P(PSTR(\"Address Length\\t\\t= %d bytes\\r\\n\"), (read_register(SETUP_AW) & 3) + 2);\n    printf_P(PSTR(\"Static Payload Length\\t= %d bytes\\r\\n\"), getPayloadSize());\n\n    uint8_t setupRetry = read_register(SETUP_RETR);\n    printf_P(PSTR(\"Auto Retry Delay\\t= %d microseconds\\r\\n\"), (setupRetry >> ARD) * 250 + 250);\n    printf_P(PSTR(\"Auto Retry Attempts\\t= %d maximum\\r\\n\"), setupRetry & 0x0F);\n\n    uint8_t observeTx = read_register(OBSERVE_TX);\n    printf_P(PSTR(\"Packets lost on\\n    current channel\\t= %d\\r\\n\"), observeTx >> 4);\n    printf_P(PSTR(\"Retry attempts made for\\n    last transmission\\t= %d\\r\\n\"), observeTx & 0x0F);\n\n    uint8_t features = read_register(FEATURE);\n    printf_P(PSTR(\"Multicast\\t\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(features & _BV(EN_DYN_ACK)) * 2)])));\n    printf_P(PSTR(\"Custom ACK Payload\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(features & _BV(EN_ACK_PAY)) * 1)])));\n\n    uint8_t dynPl = read_register(DYNPD);\n    printf_P(PSTR(\"Dynamic Payloads\\t\" PRIPSTR\n                  \"\\r\\n\"),\n             (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>((dynPl && (features & _BV(EN_DPL))) * 1)])));\n\n    uint8_t autoAck = read_register(EN_AA);\n    if (autoAck == 0x3F || autoAck == 0) {\n        // all pipes have the same configuration about auto-ack feature\n        printf_P(PSTR(\"Auto Acknowledgment\\t\" PRIPSTR\n                      \"\\r\\n\"),\n                 (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(autoAck) * 1)])));\n    }\n    else {\n        // representation per pipe\n        printf_P(PSTR(\"Auto Acknowledgment\\t= 0b%c%c%c%c%c%c\\r\\n\"),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P5)) + 48),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P4)) + 48),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P3)) + 48),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P2)) + 48),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P1)) + 48),\n                 static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P0)) + 48));\n    }\n\n    config_reg = read_register(NRF_CONFIG);\n    printf_P(PSTR(\"Primary Mode\\t\\t= %cX\\r\\n\"), config_reg & _BV(PRIM_RX) ? 'R' : 'T');\n    print_address_register(PSTR(\"TX address\\t\"), TX_ADDR);\n\n    uint8_t openPipes = read_register(EN_RXADDR);\n    for (uint8_t i = 0; i < 6; ++i) {\n        bool isOpen = openPipes & _BV(i);\n        printf_P(PSTR(\"pipe %u (\" PRIPSTR\n                      \") bound\"),\n                 i, (char*)(pgm_read_ptr(&rf24_feature_e_str_P[isOpen + 3])));\n        if (i < 2) {\n            print_address_register(PSTR(\"\"), static_cast<uint8_t>(RX_ADDR_P0 + i));\n        }\n        else {\n            print_byte_register(PSTR(\"\"), static_cast<uint8_t>(RX_ADDR_P0 + i));\n        }\n    }\n}\n\n/****************************************************************************/\n\nuint16_t RF24::sprintfPrettyDetails(char* debugging_information)\n{\n    const char* format_string = PSTR(\n        \"================ SPI Configuration ================\\n\"\n        \"CSN Pin\\t\\t\\t= %d\\n\"\n        \"CE Pin\\t\\t\\t= %d\\n\"\n        \"SPI Frequency\\t\\t= %d Mhz\\n\"\n        \"================ NRF Configuration ================\\n\"\n        \"Channel\\t\\t\\t= %u (~ %u MHz)\\n\"\n        \"RF Data Rate\\t\\t\" PRIPSTR \"\\n\"\n        \"RF Power Amplifier\\t\" PRIPSTR \"\\n\"\n        \"RF Low Noise Amplifier\\t\" PRIPSTR \"\\n\"\n        \"CRC Length\\t\\t\" PRIPSTR \"\\n\"\n        \"Address Length\\t\\t= %d bytes\\n\"\n        \"Static Payload Length\\t= %d bytes\\n\"\n        \"Auto Retry Delay\\t= %d microseconds\\n\"\n        \"Auto Retry Attempts\\t= %d maximum\\n\"\n        \"Packets lost on\\n    current channel\\t= %d\\r\\n\"\n        \"Retry attempts made for\\n    last transmission\\t= %d\\r\\n\"\n        \"Multicast\\t\\t\" PRIPSTR \"\\n\"\n        \"Custom ACK Payload\\t\" PRIPSTR \"\\n\"\n        \"Dynamic Payloads\\t\" PRIPSTR \"\\n\"\n        \"Auto Acknowledgment\\t\");\n    const char* format_str2 = PSTR(\"\\nPrimary Mode\\t\\t= %cX\\nTX address\\t\\t= 0x\");\n    const char* format_str3 = PSTR(\"\\nPipe %d (\" PRIPSTR \") bound\\t= 0x\");\n\n    uint16_t offset = sprintf_P(\n        debugging_information, format_string, csn_pin, ce_pin,\n        static_cast<uint8_t>(spi_speed / 1000000), getChannel(),\n        static_cast<uint16_t>(getChannel() + 2400),\n        (char*)(pgm_read_ptr(&rf24_datarate_e_str_P[getDataRate()])),\n        (char*)(pgm_read_ptr(&rf24_pa_dbm_e_str_P[getPALevel()])),\n        (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>((read_register(RF_SETUP) & 1) * 1)])),\n        (char*)(pgm_read_ptr(&rf24_crclength_e_str_P[getCRCLength()])),\n        ((read_register(SETUP_AW) & 3) + 2), getPayloadSize(),\n        ((read_register(SETUP_RETR) >> ARD) * 250 + 250),\n        (read_register(SETUP_RETR) & 0x0F), (read_register(OBSERVE_TX) >> 4),\n        (read_register(OBSERVE_TX) & 0x0F),\n        (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(read_register(FEATURE) & _BV(EN_DYN_ACK)) * 2)])),\n        (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(read_register(FEATURE) & _BV(EN_ACK_PAY)) * 1)])),\n        (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>((read_register(DYNPD) && (read_register(FEATURE) & _BV(EN_DPL))) * 1)])));\n    uint8_t autoAck = read_register(EN_AA);\n    if (autoAck == 0x3F || autoAck == 0) {\n        // all pipes have the same configuration about auto-ack feature\n        offset += sprintf_P(\n            debugging_information + offset, PSTR(\"\" PRIPSTR \"\"),\n            (char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<uint8_t>(static_cast<bool>(autoAck) * 1)])));\n    }\n    else {\n        // representation per pipe\n        offset += sprintf_P(\n            debugging_information + offset, PSTR(\"= 0b%c%c%c%c%c%c\"),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P5)) + 48),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P4)) + 48),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P3)) + 48),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P2)) + 48),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P1)) + 48),\n            static_cast<char>(static_cast<bool>(autoAck & _BV(ENAA_P0)) + 48));\n    }\n    offset += sprintf_P(\n        debugging_information + offset, format_str2,\n        (read_register(NRF_CONFIG) & _BV(PRIM_RX) ? 'R' : 'T'));\n    offset += sprintf_address_register(debugging_information + offset, TX_ADDR);\n    uint8_t openPipes = read_register(EN_RXADDR);\n    for (uint8_t i = 0; i < 6; ++i) {\n        offset += sprintf_P(\n            debugging_information + offset, format_str3,\n            i, ((char*)(pgm_read_ptr(&rf24_feature_e_str_P[static_cast<bool>(openPipes & _BV(i)) + 3]))));\n        if (i < 2) {\n            offset += sprintf_address_register(\n                debugging_information + offset, static_cast<uint8_t>(RX_ADDR_P0 + i));\n        }\n        else {\n            offset += sprintf_P(\n                debugging_information + offset, PSTR(\"%02X\"),\n                read_register(static_cast<uint8_t>(RX_ADDR_P0 + i)));\n        }\n    }\n    return offset;\n}\n\n/****************************************************************************/\n\nvoid RF24::encodeRadioDetails(uint8_t* encoded_details)\n{\n    uint8_t end = FEATURE + 1;\n    for (uint8_t i = NRF_CONFIG; i < end; ++i) {\n        if (i == RX_ADDR_P0 || i == RX_ADDR_P1 || i == TX_ADDR) {\n            // get 40-bit registers\n            read_register(i, encoded_details, 5);\n            encoded_details += 5;\n        }\n        else if (i != 0x18 && i != 0x19 && i != 0x1a && i != 0x1b) { // skip undocumented registers\n            // get single byte registers\n            *encoded_details++ = read_register(i);\n        }\n    }\n    *encoded_details++ = ce_pin >> 4;\n    *encoded_details++ = ce_pin & 0xFF;\n    *encoded_details++ = csn_pin >> 4;\n    *encoded_details++ = csn_pin & 0xFF;\n    *encoded_details = static_cast<uint8_t>((spi_speed / 1000000) | _BV(_is_p_variant * 4));\n}\n#endif // !defined(MINIMAL)\n\n/****************************************************************************/\n#if defined(RF24_SPI_PTR) || defined(DOXYGEN_FORCED)\n// does not apply to RF24_LINUX\n\nbool RF24::begin(_SPI* spiBus)\n{\n    _spi = spiBus;\n    return _init_pins() && _init_radio();\n}\n\n/****************************************************************************/\n\nbool RF24::begin(_SPI* spiBus, rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin)\n{\n    ce_pin = _cepin;\n    csn_pin = _cspin;\n    return begin(spiBus);\n}\n\n#endif // defined (RF24_SPI_PTR) || defined (DOXYGEN_FORCED)\n\n/****************************************************************************/\n\nbool RF24::begin(rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin)\n{\n    ce_pin = _cepin;\n    csn_pin = _cspin;\n    return begin();\n}\n\n/****************************************************************************/\n\nbool RF24::begin(void)\n{\n#if defined(RF24_LINUX)\n    #if defined(RF24_RPi)\n    switch (csn_pin) { // Ensure valid hardware CS pin\n        case 0: break;\n        case 1: break;\n        // Allow BCM2835 enums for RPi\n        case 8: csn_pin = 0; break;\n        case 7: csn_pin = 1; break;\n        case 18: csn_pin = 10; break; // to make it work on SPI1\n        case 17: csn_pin = 11; break;\n        case 16: csn_pin = 12; break;\n        default: csn_pin = 0; break;\n    }\n    #endif // RF24_RPi\n\n    _SPI.begin(csn_pin, spi_speed);\n\n#elif defined(XMEGA_D3)\n    _spi->begin(csn_pin);\n\n#elif defined(RF24_RP2)\n    _spi = new SPI();\n    _spi->begin(PICO_DEFAULT_SPI ? spi1 : spi0);\n\n#else // using an Arduino platform || defined (LITTLEWIRE)\n\n    #if defined(RF24_SPI_PTR)\n    _spi->begin();\n    #else  // !defined(RF24_SPI_PTR)\n    _SPI.begin();\n    #endif // !defined(RF24_SPI_PTR)\n\n#endif // !defined(XMEGA_D3) && !defined(RF24_LINUX)\n\n    return _init_pins() && _init_radio();\n}\n\n/****************************************************************************/\n\nbool RF24::_init_pins()\n{\n    if (!isValid()) {\n        // didn't specify the CSN & CE pins to c'tor nor begin()\n        return false;\n    }\n\n#if defined(RF24_LINUX)\n\n    pinMode(ce_pin, OUTPUT);\n    ce(LOW);\n    delay(100);\n\n#elif defined(LITTLEWIRE)\n    pinMode(csn_pin, OUTPUT);\n    csn(HIGH);\n\n#elif defined(XMEGA_D3)\n    if (ce_pin != csn_pin) {\n        pinMode(ce_pin, OUTPUT);\n    };\n    ce(LOW);\n    csn(HIGH);\n    delay(200);\n\n#else // using an Arduino platform\n\n    // Initialize pins\n    if (ce_pin != csn_pin) {\n        pinMode(ce_pin, OUTPUT);\n        pinMode(csn_pin, OUTPUT);\n    }\n\n    ce(LOW);\n    csn(HIGH);\n\n    #if defined(__ARDUINO_X86__)\n    delay(100);\n    #endif\n#endif // !defined(XMEGA_D3) && !defined(LITTLEWIRE) && !defined(RF24_LINUX)\n\n    return true; // assuming pins are connected properly\n}\n\n/****************************************************************************/\n\nbool RF24::_init_radio()\n{\n    // Must allow the radio time to settle else configuration bits will not necessarily stick.\n    // This is actually only required following power up but some settling time also appears to\n    // be required after resets too. For full coverage, we'll always assume the worst.\n    // Enabling 16b CRC is by far the most obvious case if the wrong timing is used - or skipped.\n    // Technically we require 4.5ms + 14us as a worst case. We'll just call it 5ms for good measure.\n    // WARNING: Delay is based on P-variant whereby non-P *may* require different timing.\n    delay(5);\n\n    // Set 1500uS (minimum for 32B payload in ESB@250KBPS) timeouts, to make testing a little easier\n    // WARNING: If this is ever lowered, either 250KBS mode with AA is broken or maximum packet\n    // sizes must never be used. See datasheet for a more complete explanation.\n    setRetries(5, 15);\n\n    // Then set the data rate to the slowest (and most reliable) speed supported by all hardware.\n    setDataRate(RF24_1MBPS);\n\n    // detect if is a plus variant & use old toggle features command accordingly\n    uint8_t before_toggle = read_register(FEATURE);\n    toggle_features();\n    uint8_t after_toggle = read_register(FEATURE);\n    _is_p_variant = before_toggle == after_toggle;\n    if (after_toggle) {\n        if (_is_p_variant) {\n            // module did not experience power-on-reset (#401)\n            toggle_features();\n        }\n        // allow use of multicast parameter and dynamic payloads by default\n        write_register(FEATURE, 0);\n    }\n    ack_payloads_enabled = false; // ack payloads disabled by default\n    write_register(DYNPD, 0);     // disable dynamic payloads by default (for all pipes)\n    dynamic_payloads_enabled = false;\n    write_register(EN_AA, 0x3F);  // enable auto-ack on all pipes\n    write_register(EN_RXADDR, 3); // only open RX pipes 0 & 1\n    setPayloadSize(32);           // set static payload size to 32 (max) bytes by default\n    setAddressWidth(5);           // set default address length to (max) 5 bytes\n\n    // Set up default configuration.  Callers can always change it later.\n    // This channel should be universally safe and not bleed over into adjacent\n    // spectrum.\n    setChannel(76);\n\n    // Reset current status\n    // Notice reset and flush is the last thing we do\n    write_register(NRF_STATUS, _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT));\n\n    // Flush buffers\n    flush_rx();\n    flush_tx();\n\n    // Clear CONFIG register:\n    //      Reflect all IRQ events on IRQ pin\n    //      Enable PTX\n    //      Power Up\n    //      16-bit CRC (CRC required by auto-ack)\n    // Do not write CE high so radio will remain in standby I mode\n    // PTX should use only 22uA of power\n    write_register(NRF_CONFIG, (_BV(EN_CRC) | _BV(CRCO)));\n    config_reg = read_register(NRF_CONFIG);\n\n    powerUp();\n\n    // if config is not set correctly then there was a bad response from module\n    return config_reg == (_BV(EN_CRC) | _BV(CRCO) | _BV(PWR_UP)) ? true : false;\n}\n\n/****************************************************************************/\n\nbool RF24::isChipConnected()\n{\n    return read_register(SETUP_AW) == (addr_width - static_cast<uint8_t>(2));\n}\n\n/****************************************************************************/\n\nbool RF24::isValid()\n{\n    return ce_pin != RF24_PIN_INVALID && csn_pin != RF24_PIN_INVALID;\n}\n\n/****************************************************************************/\n\nvoid RF24::startListening(void)\n{\n#if !defined(RF24_TINY) && !defined(LITTLEWIRE)\n    powerUp();\n#endif\n    config_reg |= _BV(PRIM_RX);\n    write_register(NRF_CONFIG, config_reg);\n    write_register(NRF_STATUS, _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT));\n    ce(HIGH);\n\n    // Restore the pipe0 address, if exists\n    if (_is_p0_rx) {\n        write_register(RX_ADDR_P0, pipe0_reading_address, addr_width);\n    }\n    else {\n        closeReadingPipe(0);\n    }\n}\n\n/****************************************************************************/\n\nstatic const PROGMEM uint8_t child_pipe_enable[] = {ERX_P0, ERX_P1, ERX_P2,\n                                                    ERX_P3, ERX_P4, ERX_P5};\n\nvoid RF24::stopListening(void)\n{\n    ce(LOW);\n\n    //delayMicroseconds(100);\n    delayMicroseconds(static_cast<int>(txDelay));\n    if (ack_payloads_enabled) {\n        flush_tx();\n    }\n\n    config_reg = static_cast<uint8_t>(config_reg & ~_BV(PRIM_RX));\n    write_register(NRF_CONFIG, config_reg);\n\n#if defined(RF24_TINY) || defined(LITTLEWIRE)\n    // for 3 pins solution TX mode is only left with additional powerDown/powerUp cycle\n    if (ce_pin == csn_pin) {\n        powerDown();\n        powerUp();\n    }\n#endif\n    write_register(EN_RXADDR, static_cast<uint8_t>(read_register(EN_RXADDR) | _BV(pgm_read_byte(&child_pipe_enable[0])))); // Enable RX on pipe0\n}\n\n/****************************************************************************/\n\nvoid RF24::powerDown(void)\n{\n    ce(LOW); // Guarantee CE is low on powerDown\n    config_reg = static_cast<uint8_t>(config_reg & ~_BV(PWR_UP));\n    write_register(NRF_CONFIG, config_reg);\n}\n\n/****************************************************************************/\n\n//Power up now. Radio will not power down unless instructed by MCU for config changes etc.\nvoid RF24::powerUp(void)\n{\n    // if not powered up then power up and wait for the radio to initialize\n    if (!(config_reg & _BV(PWR_UP))) {\n        config_reg |= _BV(PWR_UP);\n        write_register(NRF_CONFIG, config_reg);\n\n        // For nRF24L01+ to go from power down mode to TX or RX mode it must first pass through stand-by mode.\n        // There must be a delay of Tpd2stby (see Table 16.) after the nRF24L01+ leaves power down mode before\n        // the CEis set high. - Tpd2stby can be up to 5ms per the 1.0 datasheet\n        delayMicroseconds(RF24_POWERUP_DELAY);\n    }\n}\n\n/******************************************************************/\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n\nvoid RF24::errNotify()\n{\n    #if defined(RF24_DEBUG) || defined(RF24_LINUX)\n    printf_P(PSTR(\"RF24 HARDWARE FAIL: Radio not responding, verify pin connections, wiring, etc.\\r\\n\"));\n    #endif\n    #if defined(FAILURE_HANDLING)\n    failureDetected = 1;\n    #else\n    delay(5000);\n    #endif\n}\n\n#endif\n/******************************************************************/\n\n//Similar to the previous write, clears the interrupt flags\nbool RF24::write(const void* buf, uint8_t len, const bool multicast)\n{\n    //Start Writing\n    startFastWrite(buf, len, multicast);\n\n//Wait until complete or failed\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n    uint32_t timer = millis();\n#endif // defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n\n    while (!(get_status() & (_BV(TX_DS) | _BV(MAX_RT)))) {\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n        if (millis() - timer > 95) {\n            errNotify();\n    #if defined(FAILURE_HANDLING)\n            return 0;\n    #else\n            delay(100);\n    #endif\n        }\n#endif\n    }\n\n    ce(LOW);\n\n    write_register(NRF_STATUS, _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT));\n\n    //Max retries exceeded\n    if (status & _BV(MAX_RT)) {\n        flush_tx(); // Only going to be 1 packet in the FIFO at a time using this method, so just flush\n        return 0;\n    }\n    //TX OK 1 or 0\n    return 1;\n}\n\nbool RF24::write(const void* buf, uint8_t len)\n{\n    return write(buf, len, 0);\n}\n\n/****************************************************************************/\n\n//For general use, the interrupt flags are not important to clear\nbool RF24::writeBlocking(const void* buf, uint8_t len, uint32_t timeout)\n{\n    //Block until the FIFO is NOT full.\n    //Keep track of the MAX retries and set auto-retry if seeing failures\n    //This way the FIFO will fill up and allow blocking until packets go through\n    //The radio will auto-clear everything in the FIFO as long as CE remains high\n\n    uint32_t timer = millis(); // Get the time that the payload transmission started\n\n    while ((get_status() & (_BV(TX_FULL)))) { // Blocking only if FIFO is full. This will loop and block until TX is successful or timeout\n\n        if (status & _BV(MAX_RT)) { // If MAX Retries have been reached\n            reUseTX();              // Set re-transmit and clear the MAX_RT interrupt flag\n            if (millis() - timer > timeout) {\n                return 0; // If this payload has exceeded the user-defined timeout, exit and return 0\n            }\n        }\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n        if (millis() - timer > (timeout + 95)) {\n            errNotify();\n    #if defined(FAILURE_HANDLING)\n            return 0;\n    #endif\n        }\n#endif\n    }\n\n    //Start Writing\n    startFastWrite(buf, len, 0); // Write the payload if a buffer is clear\n\n    return 1; // Return 1 to indicate successful transmission\n}\n\n/****************************************************************************/\n\nvoid RF24::reUseTX()\n{\n    ce(LOW);\n    write_register(NRF_STATUS, _BV(MAX_RT)); //Clear max retry flag\n    read_register(REUSE_TX_PL, (uint8_t*)nullptr, 0);\n    IF_RF24_DEBUG(printf_P(\"[Reusing payload in TX FIFO]\"););\n    ce(HIGH); //Re-Transfer packet\n}\n\n/****************************************************************************/\n\nbool RF24::writeFast(const void* buf, uint8_t len, const bool multicast)\n{\n    //Block until the FIFO is NOT full.\n    //Keep track of the MAX retries and set auto-retry if seeing failures\n    //Return 0 so the user can control the retries and set a timer or failure counter if required\n    //The radio will auto-clear everything in the FIFO as long as CE remains high\n\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n    uint32_t timer = millis();\n#endif\n\n    //Blocking only if FIFO is full. This will loop and block until TX is successful or fail\n    while ((get_status() & (_BV(TX_FULL)))) {\n        if (status & _BV(MAX_RT)) {\n            return 0; //Return 0. The previous payload has not been retransmitted\n            // From the user perspective, if you get a 0, call txStandBy()\n        }\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n        if (millis() - timer > 95) {\n            errNotify();\n    #if defined(FAILURE_HANDLING)\n            return 0;\n    #endif // defined(FAILURE_HANDLING)\n        }\n#endif\n    }\n    startFastWrite(buf, len, multicast); // Start Writing\n\n    return 1;\n}\n\nbool RF24::writeFast(const void* buf, uint8_t len)\n{\n    return writeFast(buf, len, 0);\n}\n\n/****************************************************************************/\n\n//Per the documentation, we want to set PTX Mode when not listening. Then all we do is write data and set CE high\n//In this mode, if we can keep the FIFO buffers loaded, packets will transmit immediately (no 130us delay)\n//Otherwise we enter Standby-II mode, which is still faster than standby mode\n//Also, we remove the need to keep writing the config register over and over and delaying for 150 us each time if sending a stream of data\n\nvoid RF24::startFastWrite(const void* buf, uint8_t len, const bool multicast, bool startTx)\n{ //TMRh20\n\n    write_payload(buf, len, multicast ? W_TX_PAYLOAD_NO_ACK : W_TX_PAYLOAD);\n    if (startTx) {\n        ce(HIGH);\n    }\n}\n\n/****************************************************************************/\n\n//Added the original startWrite back in so users can still use interrupts, ack payloads, etc\n//Allows the library to pass all tests\nbool RF24::startWrite(const void* buf, uint8_t len, const bool multicast)\n{\n\n    // Send the payload\n    write_payload(buf, len, multicast ? W_TX_PAYLOAD_NO_ACK : W_TX_PAYLOAD);\n    ce(HIGH);\n#if !defined(F_CPU) || F_CPU > 20000000\n    delayMicroseconds(10);\n#endif\n#ifdef ARDUINO_ARCH_STM32\n    if (F_CPU > 20000000) {\n        delayMicroseconds(10);\n    }\n#endif\n    ce(LOW);\n    return !(status & _BV(TX_FULL));\n}\n\n/****************************************************************************/\n\nbool RF24::rxFifoFull()\n{\n    return read_register(FIFO_STATUS) & _BV(RX_FULL);\n}\n\n/****************************************************************************/\n\nrf24_fifo_state_e RF24::isFifo(bool about_tx)\n{\n    uint8_t state = (read_register(FIFO_STATUS) >> (4 * about_tx)) & 3;\n    return static_cast<rf24_fifo_state_e>(state);\n}\n\n/****************************************************************************/\n\nbool RF24::isFifo(bool about_tx, bool check_empty)\n{\n    return static_cast<bool>(static_cast<uint8_t>(isFifo(about_tx)) & _BV(!check_empty));\n}\n\n/****************************************************************************/\n\nbool RF24::txStandBy()\n{\n\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n    uint32_t timeout = millis();\n#endif\n    while (!(read_register(FIFO_STATUS) & _BV(TX_EMPTY))) {\n        if (status & _BV(MAX_RT)) {\n            write_register(NRF_STATUS, _BV(MAX_RT));\n            ce(LOW);\n            flush_tx(); //Non blocking, flush the data\n            return 0;\n        }\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n        if (millis() - timeout > 95) {\n            errNotify();\n    #if defined(FAILURE_HANDLING)\n            return 0;\n    #endif\n        }\n#endif\n    }\n\n    ce(LOW); //Set STANDBY-I mode\n    return 1;\n}\n\n/****************************************************************************/\n\nbool RF24::txStandBy(uint32_t timeout, bool startTx)\n{\n\n    if (startTx) {\n        stopListening();\n        ce(HIGH);\n    }\n    uint32_t start = millis();\n\n    while (!(read_register(FIFO_STATUS) & _BV(TX_EMPTY))) {\n        if (status & _BV(MAX_RT)) {\n            write_register(NRF_STATUS, _BV(MAX_RT));\n            ce(LOW); // Set re-transmit\n            ce(HIGH);\n            if (millis() - start >= timeout) {\n                ce(LOW);\n                flush_tx();\n                return 0;\n            }\n        }\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n        if (millis() - start > (timeout + 95)) {\n            errNotify();\n    #if defined(FAILURE_HANDLING)\n            return 0;\n    #endif\n        }\n#endif\n    }\n\n    ce(LOW); //Set STANDBY-I mode\n    return 1;\n}\n\n/****************************************************************************/\n\nvoid RF24::maskIRQ(bool tx, bool fail, bool rx)\n{\n    /* clear the interrupt flags */\n    config_reg = static_cast<uint8_t>(config_reg & ~(1 << MASK_MAX_RT | 1 << MASK_TX_DS | 1 << MASK_RX_DR));\n    /* set the specified interrupt flags */\n    config_reg = static_cast<uint8_t>(config_reg | fail << MASK_MAX_RT | tx << MASK_TX_DS | rx << MASK_RX_DR);\n    write_register(NRF_CONFIG, config_reg);\n}\n\n/****************************************************************************/\n\nuint8_t RF24::getDynamicPayloadSize(void)\n{\n    uint8_t result = read_register(R_RX_PL_WID);\n\n    if (result > 32) {\n        flush_rx();\n        delay(2);\n        return 0;\n    }\n    return result;\n}\n\n/****************************************************************************/\n\nbool RF24::available(void)\n{\n    return (read_register(FIFO_STATUS) & 1) == 0;\n}\n\n/****************************************************************************/\n\nbool RF24::available(uint8_t* pipe_num)\n{\n    if (available()) { // if RX FIFO is not empty\n        *pipe_num = (get_status() >> RX_P_NO) & 0x07;\n        return 1;\n    }\n    return 0;\n}\n\n/****************************************************************************/\n\nvoid RF24::read(void* buf, uint8_t len)\n{\n\n    // Fetch the payload\n    read_payload(buf, len);\n\n    //Clear the only applicable interrupt flags\n    write_register(NRF_STATUS, _BV(RX_DR));\n}\n\n/****************************************************************************/\n\nvoid RF24::whatHappened(bool& tx_ok, bool& tx_fail, bool& rx_ready)\n{\n    // Read the status & reset the status in one easy call\n    // Or is that such a good idea?\n    write_register(NRF_STATUS, _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT));\n\n    // Report to the user what happened\n    tx_ok = status & _BV(TX_DS);\n    tx_fail = status & _BV(MAX_RT);\n    rx_ready = status & _BV(RX_DR);\n}\n\n/****************************************************************************/\n\nvoid RF24::openWritingPipe(uint64_t value)\n{\n    // Note that AVR 8-bit uC's store this LSB first, and the NRF24L01(+)\n    // expects it LSB first too, so we're good.\n\n    write_register(RX_ADDR_P0, reinterpret_cast<uint8_t*>(&value), addr_width);\n    write_register(TX_ADDR, reinterpret_cast<uint8_t*>(&value), addr_width);\n}\n\n/****************************************************************************/\n\nvoid RF24::openWritingPipe(const uint8_t* address)\n{\n    // Note that AVR 8-bit uC's store this LSB first, and the NRF24L01(+)\n    // expects it LSB first too, so we're good.\n    write_register(RX_ADDR_P0, address, addr_width);\n    write_register(TX_ADDR, address, addr_width);\n}\n\n/****************************************************************************/\n\nstatic const PROGMEM uint8_t child_pipe[] = {RX_ADDR_P0, RX_ADDR_P1, RX_ADDR_P2,\n                                             RX_ADDR_P3, RX_ADDR_P4, RX_ADDR_P5};\n\nvoid RF24::openReadingPipe(uint8_t child, uint64_t address)\n{\n    // If this is pipe 0, cache the address.  This is needed because\n    // openWritingPipe() will overwrite the pipe 0 address, so\n    // startListening() will have to restore it.\n    if (child == 0) {\n        memcpy(pipe0_reading_address, &address, addr_width);\n        _is_p0_rx = true;\n    }\n\n    if (child <= 5) {\n        // For pipes 2-5, only write the LSB\n        if (child < 2) {\n            write_register(pgm_read_byte(&child_pipe[child]), reinterpret_cast<const uint8_t*>(&address), addr_width);\n        }\n        else {\n            write_register(pgm_read_byte(&child_pipe[child]), reinterpret_cast<const uint8_t*>(&address), 1);\n        }\n\n        // Note it would be more efficient to set all of the bits for all open\n        // pipes at once.  However, I thought it would make the calling code\n        // more simple to do it this way.\n        write_register(EN_RXADDR, static_cast<uint8_t>(read_register(EN_RXADDR) | _BV(pgm_read_byte(&child_pipe_enable[child]))));\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::setAddressWidth(uint8_t a_width)\n{\n    a_width = static_cast<uint8_t>(a_width - 2);\n    if (a_width) {\n        write_register(SETUP_AW, static_cast<uint8_t>(a_width % 4));\n        addr_width = static_cast<uint8_t>((a_width % 4) + 2);\n    }\n    else {\n        write_register(SETUP_AW, static_cast<uint8_t>(0));\n        addr_width = static_cast<uint8_t>(2);\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::openReadingPipe(uint8_t child, const uint8_t* address)\n{\n    // If this is pipe 0, cache the address.  This is needed because\n    // openWritingPipe() will overwrite the pipe 0 address, so\n    // startListening() will have to restore it.\n    if (child == 0) {\n        memcpy(pipe0_reading_address, address, addr_width);\n        _is_p0_rx = true;\n    }\n    if (child <= 5) {\n        // For pipes 2-5, only write the LSB\n        if (child < 2) {\n            write_register(pgm_read_byte(&child_pipe[child]), address, addr_width);\n        }\n        else {\n            write_register(pgm_read_byte(&child_pipe[child]), address, 1);\n        }\n\n        // Note it would be more efficient to set all of the bits for all open\n        // pipes at once.  However, I thought it would make the calling code\n        // more simple to do it this way.\n        write_register(EN_RXADDR, static_cast<uint8_t>(read_register(EN_RXADDR) | _BV(pgm_read_byte(&child_pipe_enable[child]))));\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::closeReadingPipe(uint8_t pipe)\n{\n    write_register(EN_RXADDR, static_cast<uint8_t>(read_register(EN_RXADDR) & ~_BV(pgm_read_byte(&child_pipe_enable[pipe]))));\n    if (!pipe) {\n        // keep track of pipe 0's RX state to avoid null vs 0 in addr cache\n        _is_p0_rx = false;\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::toggle_features(void)\n{\n    beginTransaction();\n#if defined(RF24_SPI_PTR)\n    status = _spi->transfer(ACTIVATE);\n    _spi->transfer(0x73);\n#else\n    status = _SPI.transfer(ACTIVATE);\n    _SPI.transfer(0x73);\n#endif\n    endTransaction();\n}\n\n/****************************************************************************/\n\nvoid RF24::enableDynamicPayloads(void)\n{\n    // Enable dynamic payload throughout the system\n\n    //toggle_features();\n    write_register(FEATURE, read_register(FEATURE) | _BV(EN_DPL));\n\n    IF_RF24_DEBUG(printf_P(\"FEATURE=%i\\r\\n\", read_register(FEATURE)));\n\n    // Enable dynamic payload on all pipes\n    //\n    // Not sure the use case of only having dynamic payload on certain\n    // pipes, so the library does not support it.\n    write_register(DYNPD, read_register(DYNPD) | _BV(DPL_P5) | _BV(DPL_P4) | _BV(DPL_P3) | _BV(DPL_P2) | _BV(DPL_P1) | _BV(DPL_P0));\n\n    dynamic_payloads_enabled = true;\n}\n\n/****************************************************************************/\n\nvoid RF24::disableDynamicPayloads(void)\n{\n    // Disables dynamic payload throughout the system.  Also disables Ack Payloads\n\n    //toggle_features();\n    write_register(FEATURE, 0);\n\n    IF_RF24_DEBUG(printf_P(\"FEATURE=%i\\r\\n\", read_register(FEATURE)));\n\n    // Disable dynamic payload on all pipes\n    //\n    // Not sure the use case of only having dynamic payload on certain\n    // pipes, so the library does not support it.\n    write_register(DYNPD, 0);\n\n    dynamic_payloads_enabled = false;\n    ack_payloads_enabled = false;\n}\n\n/****************************************************************************/\n\nvoid RF24::enableAckPayload(void)\n{\n    // enable ack payloads and dynamic payload features\n\n    if (!ack_payloads_enabled) {\n        write_register(FEATURE, read_register(FEATURE) | _BV(EN_ACK_PAY) | _BV(EN_DPL));\n\n        IF_RF24_DEBUG(printf_P(\"FEATURE=%i\\r\\n\", read_register(FEATURE)));\n\n        // Enable dynamic payload on pipes 0 & 1\n        write_register(DYNPD, read_register(DYNPD) | _BV(DPL_P1) | _BV(DPL_P0));\n        dynamic_payloads_enabled = true;\n        ack_payloads_enabled = true;\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::disableAckPayload(void)\n{\n    // disable ack payloads (leave dynamic payload features as is)\n    if (ack_payloads_enabled) {\n        write_register(FEATURE, static_cast<uint8_t>(read_register(FEATURE) & ~_BV(EN_ACK_PAY)));\n\n        IF_RF24_DEBUG(printf_P(\"FEATURE=%i\\r\\n\", read_register(FEATURE)));\n\n        ack_payloads_enabled = false;\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::enableDynamicAck(void)\n{\n    //\n    // enable dynamic ack features\n    //\n    //toggle_features();\n    write_register(FEATURE, read_register(FEATURE) | _BV(EN_DYN_ACK));\n\n    IF_RF24_DEBUG(printf_P(\"FEATURE=%i\\r\\n\", read_register(FEATURE)));\n}\n\n/****************************************************************************/\n\nbool RF24::writeAckPayload(uint8_t pipe, const void* buf, uint8_t len)\n{\n    if (ack_payloads_enabled) {\n        const uint8_t* current = reinterpret_cast<const uint8_t*>(buf);\n\n        write_register(W_ACK_PAYLOAD | (pipe & 0x07), current, rf24_min(len, static_cast<uint8_t>(32)));\n        return !(status & _BV(TX_FULL));\n    }\n    return 0;\n}\n\n/****************************************************************************/\n\nbool RF24::isAckPayloadAvailable(void)\n{\n    return available();\n}\n\n/****************************************************************************/\n\nbool RF24::isPVariant(void)\n{\n    return _is_p_variant;\n}\n\n/****************************************************************************/\n\nvoid RF24::setAutoAck(bool enable)\n{\n    if (enable) {\n        write_register(EN_AA, 0x3F);\n    }\n    else {\n        write_register(EN_AA, 0);\n        // accommodate ACK payloads feature\n        if (ack_payloads_enabled) {\n            disableAckPayload();\n        }\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::setAutoAck(uint8_t pipe, bool enable)\n{\n    if (pipe < 6) {\n        uint8_t en_aa = read_register(EN_AA);\n        if (enable) {\n            en_aa |= static_cast<uint8_t>(_BV(pipe));\n        }\n        else {\n            en_aa = static_cast<uint8_t>(en_aa & ~_BV(pipe));\n            if (ack_payloads_enabled && !pipe) {\n                disableAckPayload();\n            }\n        }\n        write_register(EN_AA, en_aa);\n    }\n}\n\n/****************************************************************************/\n\nbool RF24::testCarrier(void)\n{\n    return (read_register(CD) & 1);\n}\n\n/****************************************************************************/\n\nbool RF24::testRPD(void)\n{\n    return (read_register(RPD) & 1);\n}\n\n/****************************************************************************/\n\nvoid RF24::setPALevel(uint8_t level, bool lnaEnable)\n{\n    uint8_t setup = read_register(RF_SETUP) & static_cast<uint8_t>(0xF8);\n    setup |= _pa_level_reg_value(level, lnaEnable);\n    write_register(RF_SETUP, setup);\n}\n\n/****************************************************************************/\n\nuint8_t RF24::getPALevel(void)\n{\n    return (read_register(RF_SETUP) & (_BV(RF_PWR_LOW) | _BV(RF_PWR_HIGH))) >> 1;\n}\n\n/****************************************************************************/\n\nuint8_t RF24::getARC(void)\n{\n    return read_register(OBSERVE_TX) & 0x0F;\n}\n\n/****************************************************************************/\n\nbool RF24::setDataRate(rf24_datarate_e speed)\n{\n    bool result = false;\n    uint8_t setup = read_register(RF_SETUP);\n\n    // HIGH and LOW '00' is 1Mbs - our default\n    setup = static_cast<uint8_t>(setup & ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)));\n    setup |= _data_rate_reg_value(speed);\n\n    write_register(RF_SETUP, setup);\n\n    // Verify our result\n    if (read_register(RF_SETUP) == setup) {\n        result = true;\n    }\n    return result;\n}\n\n/****************************************************************************/\n\nrf24_datarate_e RF24::getDataRate(void)\n{\n    rf24_datarate_e result;\n    uint8_t dr = read_register(RF_SETUP) & (_BV(RF_DR_LOW) | _BV(RF_DR_HIGH));\n\n    // switch uses RAM (evil!)\n    // Order matters in our case below\n    if (dr == _BV(RF_DR_LOW)) {\n        // '10' = 250KBPS\n        result = RF24_250KBPS;\n    }\n    else if (dr == _BV(RF_DR_HIGH)) {\n        // '01' = 2MBPS\n        result = RF24_2MBPS;\n    }\n    else {\n        // '00' = 1MBPS\n        result = RF24_1MBPS;\n    }\n    return result;\n}\n\n/****************************************************************************/\n\nvoid RF24::setCRCLength(rf24_crclength_e length)\n{\n    config_reg = static_cast<uint8_t>(config_reg & ~(_BV(CRCO) | _BV(EN_CRC)));\n\n    // switch uses RAM (evil!)\n    if (length == RF24_CRC_DISABLED) {\n        // Do nothing, we turned it off above.\n    }\n    else if (length == RF24_CRC_8) {\n        config_reg |= _BV(EN_CRC);\n    }\n    else {\n        config_reg |= _BV(EN_CRC);\n        config_reg |= _BV(CRCO);\n    }\n    write_register(NRF_CONFIG, config_reg);\n}\n\n/****************************************************************************/\n\nrf24_crclength_e RF24::getCRCLength(void)\n{\n    rf24_crclength_e result = RF24_CRC_DISABLED;\n    uint8_t AA = read_register(EN_AA);\n    config_reg = read_register(NRF_CONFIG);\n\n    if (config_reg & _BV(EN_CRC) || AA) {\n        if (config_reg & _BV(CRCO)) {\n            result = RF24_CRC_16;\n        }\n        else {\n            result = RF24_CRC_8;\n        }\n    }\n\n    return result;\n}\n\n/****************************************************************************/\n\nvoid RF24::disableCRC(void)\n{\n    config_reg = static_cast<uint8_t>(config_reg & ~_BV(EN_CRC));\n    write_register(NRF_CONFIG, config_reg);\n}\n\n/****************************************************************************/\nvoid RF24::setRetries(uint8_t delay, uint8_t count)\n{\n    write_register(SETUP_RETR, static_cast<uint8_t>(rf24_min(15, delay) << ARD | rf24_min(15, count)));\n}\n\n/****************************************************************************/\nvoid RF24::startConstCarrier(rf24_pa_dbm_e level, uint8_t channel)\n{\n    stopListening();\n    write_register(RF_SETUP, read_register(RF_SETUP) | _BV(CONT_WAVE) | _BV(PLL_LOCK));\n    if (isPVariant()) {\n        setAutoAck(0);\n        setRetries(0, 0);\n        uint8_t dummy_buf[32];\n        for (uint8_t i = 0; i < 32; ++i)\n            dummy_buf[i] = 0xFF;\n\n        // use write_register() instead of openWritingPipe() to bypass\n        // truncation of the address with the current RF24::addr_width value\n        write_register(TX_ADDR, reinterpret_cast<uint8_t*>(&dummy_buf), 5);\n        flush_tx(); // so we can write to top level\n\n        // use write_register() instead of write_payload() to bypass\n        // truncation of the payload with the current RF24::payload_size value\n        write_register(W_TX_PAYLOAD, reinterpret_cast<const uint8_t*>(&dummy_buf), 32);\n\n        disableCRC();\n    }\n    setPALevel(level);\n    setChannel(channel);\n    IF_RF24_DEBUG(printf_P(PSTR(\"RF_SETUP=%02x\\r\\n\"), read_register(RF_SETUP)));\n    ce(HIGH);\n    if (isPVariant()) {\n        delay(1);  // datasheet says 1 ms is ok in this instance\n        reUseTX(); // CE gets toggled here\n    }\n}\n\n/****************************************************************************/\n\nvoid RF24::stopConstCarrier()\n{\n    /*\n     * A note from the datasheet:\n     * Do not use REUSE_TX_PL together with CONT_WAVE=1. When both these\n     * registers are set the chip does not react when setting CE low. If\n     * however, both registers are set PWR_UP = 0 will turn TX mode off.\n     */\n    powerDown(); // per datasheet recommendation (just to be safe)\n    write_register(RF_SETUP, static_cast<uint8_t>(read_register(RF_SETUP) & ~_BV(CONT_WAVE) & ~_BV(PLL_LOCK)));\n    ce(LOW);\n}\n\n/****************************************************************************/\n\nvoid RF24::toggleAllPipes(bool isEnabled)\n{\n    write_register(EN_RXADDR, static_cast<uint8_t>(isEnabled ? 0x3F : 0));\n}\n\n/****************************************************************************/\n\nuint8_t RF24::_data_rate_reg_value(rf24_datarate_e speed)\n{\n#if !defined(F_CPU) || F_CPU > 20000000\n    txDelay = 280;\n#else //16Mhz Arduino\n    txDelay = 85;\n#endif\n    if (speed == RF24_250KBPS) {\n#if !defined(F_CPU) || F_CPU > 20000000\n        txDelay = 505;\n#else //16Mhz Arduino\n        txDelay = 155;\n#endif\n        // Must set the RF_DR_LOW to 1; RF_DR_HIGH (used to be RF_DR) is already 0\n        // Making it '10'.\n        return static_cast<uint8_t>(_BV(RF_DR_LOW));\n    }\n    else if (speed == RF24_2MBPS) {\n#if !defined(F_CPU) || F_CPU > 20000000\n        txDelay = 240;\n#else // 16Mhz Arduino\n        txDelay = 65;\n#endif\n        // Set 2Mbs, RF_DR (RF_DR_HIGH) is set 1\n        // Making it '01'\n        return static_cast<uint8_t>(_BV(RF_DR_HIGH));\n    }\n    // HIGH and LOW '00' is 1Mbs - our default\n    return static_cast<uint8_t>(0);\n}\n\n/****************************************************************************/\n\nuint8_t RF24::_pa_level_reg_value(uint8_t level, bool lnaEnable)\n{\n    // If invalid level, go to max PA\n    // Else set level as requested\n    // + lnaEnable (1 or 0) to support the SI24R1 chip extra bit\n    return static_cast<uint8_t>(((level > RF24_PA_MAX ? static_cast<uint8_t>(RF24_PA_MAX) : level) << 1) + lnaEnable);\n}\n\n/****************************************************************************/\n\nvoid RF24::setRadiation(uint8_t level, rf24_datarate_e speed, bool lnaEnable)\n{\n    uint8_t setup = _data_rate_reg_value(speed);\n    setup |= _pa_level_reg_value(level, lnaEnable);\n    write_register(RF_SETUP, setup);\n}\n"
        },
        {
          "name": "RF24.h",
          "type": "blob",
          "size": 94.548828125,
          "content": "/*\n Copyright (C) 2011 J. Coliz <maniacbug@ymail.com>\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n */\n\n/**\n * @file RF24.h\n *\n * Class declaration for RF24 and helper enums\n */\n\n#ifndef RF24_H_\n#define RF24_H_\n\n#include \"RF24_config.h\"\n\n#if defined(RF24_LINUX) || defined(LITTLEWIRE)\n    #include \"utility/includes.h\"\n#elif defined SOFTSPI\n    #include <DigitalIO.h>\n#endif\n\n/**\n * @defgroup PALevel Power Amplifier level\n * Power Amplifier level. The units dBm (decibel-milliwatts or dB<sub>mW</sub>)\n * represents a logarithmic signal loss.\n * @see\n * - RF24::setPALevel()\n * - RF24::getPALevel()\n * @{\n */\ntypedef enum\n{\n    /**\n     * (0) represents:\n     * nRF24L01 | Si24R1 with<br>lnaEnabled = 1 | Si24R1 with<br>lnaEnabled = 0\n     * :-------:|:-----------------------------:|:----------------------------:\n     *  -18 dBm | -6 dBm | -12 dBm\n     */\n    RF24_PA_MIN = 0,\n    /**\n     * (1) represents:\n     * nRF24L01 | Si24R1 with<br>lnaEnabled = 1 | Si24R1 with<br>lnaEnabled = 0\n     * :-------:|:-----------------------------:|:----------------------------:\n     *  -12 dBm | 0 dBm | -4 dBm\n     */\n    RF24_PA_LOW,\n    /**\n     * (2) represents:\n     * nRF24L01 | Si24R1 with<br>lnaEnabled = 1 | Si24R1 with<br>lnaEnabled = 0\n     * :-------:|:-----------------------------:|:----------------------------:\n     *  -6 dBm | 3 dBm | 1 dBm\n     */\n    RF24_PA_HIGH,\n    /**\n     * (3) represents:\n     * nRF24L01 | Si24R1 with<br>lnaEnabled = 1 | Si24R1 with<br>lnaEnabled = 0\n     * :-------:|:-----------------------------:|:----------------------------:\n     *  0 dBm | 7 dBm | 4 dBm\n     */\n    RF24_PA_MAX,\n    /**\n     * (4) This should not be used and remains for backward compatibility.\n     */\n    RF24_PA_ERROR\n} rf24_pa_dbm_e;\n\n/**\n * @}\n * @defgroup Datarate datarate\n * How fast data moves through the air. Units are in bits per second (bps).\n * @see\n * - RF24::setDataRate()\n * - RF24::getDataRate()\n * @{\n */\ntypedef enum\n{\n    /** (0) represents 1 Mbps */\n    RF24_1MBPS = 0,\n    /** (1) represents 2 Mbps */\n    RF24_2MBPS,\n    /** (2) represents 250 kbps */\n    RF24_250KBPS\n} rf24_datarate_e;\n\n/**\n * @}\n * @defgroup CRCLength CRC length\n * The length of a CRC checksum that is used (if any). Cyclical Redundancy\n * Checking (CRC) is commonly used to ensure data integrity.\n * @see\n * - RF24::setCRCLength()\n * - RF24::getCRCLength()\n * - RF24::disableCRC()\n * @{\n */\ntypedef enum\n{\n    /** (0) represents no CRC checksum is used */\n    RF24_CRC_DISABLED = 0,\n    /** (1) represents CRC 8 bit checksum is used */\n    RF24_CRC_8,\n    /** (2) represents CRC 16 bit checksum is used */\n    RF24_CRC_16\n} rf24_crclength_e;\n\n/**\n * @}\n * @defgroup fifoState FIFO state\n * The state of a single FIFO (RX or TX).\n * Remember, each FIFO has a maximum occupancy of 3 payloads.\n * @see RF24::isFifo()\n * @{\n */\ntypedef enum\n{\n    /// @brief The FIFO is not full nor empty, but it is occupied with 1 or 2 payloads.\n    RF24_FIFO_OCCUPIED,\n    /// @brief The FIFO is empty.\n    RF24_FIFO_EMPTY,\n    /// @brief The FIFO is full.\n    RF24_FIFO_FULL,\n    /// @brief Represents corruption of data over SPI (when observed).\n    RF24_FIFO_INVALID,\n} rf24_fifo_state_e;\n\n/**\n * @}\n * @brief Driver class for nRF24L01(+) 2.4GHz Wireless Transceiver\n */\nclass RF24\n{\nprivate:\n#ifdef SOFTSPI\n    SoftSPI<SOFT_SPI_MISO_PIN, SOFT_SPI_MOSI_PIN, SOFT_SPI_SCK_PIN, SPI_MODE> spi;\n#elif defined(SPI_UART)\n    SPIUARTClass uspi;\n#endif\n\n#if defined(RF24_LINUX) || defined(XMEGA_D3) /* XMEGA can use SPI class */\n    SPI spi;\n#endif // defined (RF24_LINUX) || defined (XMEGA_D3)\n#if defined(RF24_SPI_PTR)\n    _SPI* _spi;\n#endif // defined (RF24_SPI_PTR)\n\n    rf24_gpio_pin_t ce_pin;  /* \"Chip Enable\" pin, activates the RX or TX role */\n    rf24_gpio_pin_t csn_pin; /* SPI Chip select */\n    uint32_t spi_speed;      /* SPI Bus Speed */\n#if defined(RF24_LINUX) || defined(XMEGA_D3) || defined(RF24_RP2)\n    uint8_t spi_rxbuff[32 + 1]; //SPI receive buffer (payload max 32 bytes)\n    uint8_t spi_txbuff[32 + 1]; //SPI transmit buffer (payload max 32 bytes + 1 byte for the command)\n#endif\n    uint8_t status;                   /* The status byte returned from every SPI transaction */\n    uint8_t payload_size;             /* Fixed size of payloads */\n    uint8_t pipe0_reading_address[5]; /* Last address set on pipe 0 for reading. */\n    uint8_t config_reg;               /* For storing the value of the NRF_CONFIG register */\n    bool _is_p_variant;               /* For storing the result of testing the toggleFeatures() affect */\n    bool _is_p0_rx;                   /* For keeping track of pipe 0's usage in user-triggered RX mode. */\n\nprotected:\n    /**\n     * SPI transactions\n     *\n     * Common code for SPI transactions including CSN toggle\n     *\n     */\n    inline void beginTransaction();\n\n    inline void endTransaction();\n\n    /** Whether ack payloads are enabled. */\n    bool ack_payloads_enabled;\n    /** The address width to use (3, 4 or 5 bytes). */\n    uint8_t addr_width;\n    /** Whether dynamic payloads are enabled. */\n    bool dynamic_payloads_enabled;\n\n    /**\n     * Read a chunk of data in from a register\n     *\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param[out] buf Where to put the data\n     * @param len How many bytes of data to transfer\n     * @note This returns nothing. Older versions of this function returned the status\n     * byte, but that it now saved to a private member on all SPI transactions.\n     */\n    void read_register(uint8_t reg, uint8_t* buf, uint8_t len);\n\n    /**\n     * Read single byte from a register\n     *\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @return Current value of register @p reg\n     */\n    uint8_t read_register(uint8_t reg);\n\npublic:\n    /**\n     * @name Primary public interface\n     *\n     *  These are the main methods you need to operate the chip\n     */\n    /**@{*/\n\n    /**\n     * RF24 Constructor\n     *\n     * Creates a new instance of this driver.  Before using, you create an instance\n     * and send in the unique pins that this chip is connected to.\n     *\n     * See [Related Pages](pages.html) for device specific information\n     *\n     * @param _cepin The pin attached to Chip Enable on the RF module\n     * @param _cspin The pin attached to Chip Select (often labeled CSN) on the radio module.\n     * - For the Arduino Due board, the [Arduino Due extended SPI feature](https://www.arduino.cc/en/Reference/DueExtendedSPI)\n     * is not supported. This means that the Due's pins 4, 10, or 52 are not mandated options (can use any digital output pin) for\n     * the radio's CSN pin.\n     * @param _spi_speed The SPI speed in Hz ie: 1000000 == 1Mhz\n     * - Users can specify default SPI speed by modifying @ref RF24_SPI_SPEED in @ref RF24_config.h\n     *     - For Arduino, the default SPI speed will only be properly configured this way on devices supporting SPI TRANSACTIONS\n     *     - Older/Unsupported Arduino devices will use a default clock divider & settings configuration\n     *     - For Linux: The old way of setting SPI speeds using BCM2835 driver enums has been removed as of v1.3.7\n     */\n    RF24(rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin, uint32_t _spi_speed = RF24_SPI_SPEED);\n\n    /**\n     * A constructor for initializing the radio's hardware dynamically\n     * @warning You MUST use begin(rf24_gpio_pin_t, rf24_gpio_pin_t) or begin(_SPI*, rf24_gpio_pin_t, rf24_gpio_pin_t) to pass both the\n     * digital output pin numbers connected to the radio's CE and CSN pins.\n     * @param _spi_speed The SPI speed in Hz ie: 1000000 == 1Mhz\n     * - Users can specify default SPI speed by modifying @ref RF24_SPI_SPEED in @ref RF24_config.h\n     *     - For Arduino, the default SPI speed will only be properly configured this way on devices supporting SPI TRANSACTIONS\n     *     - Older/Unsupported Arduino devices will use a default clock divider & settings configuration\n     *     - For Linux: The old way of setting SPI speeds using BCM2835 driver enums has been removed as of v1.3.7\n     */\n    RF24(uint32_t _spi_speed = RF24_SPI_SPEED);\n\n#if defined(RF24_LINUX)\n    virtual ~RF24() {};\n#endif\n\n    /**\n     * Begin operation of the chip\n     *\n     * Call this in setup(), before calling any other methods.\n     * @code\n     * if (!radio.begin()) {\n     *   Serial.println(F(\"radio hardware not responding!\"));\n     *   while (1) {} // hold program in infinite loop to prevent subsequent errors\n     * }\n     * @endcode\n     * @return\n     * - `true` if the radio was successfully initialized\n     * - `false` if the MCU failed to communicate with the radio hardware\n     */\n    bool begin(void);\n\n#if defined(RF24_SPI_PTR) || defined(DOXYGEN_FORCED)\n    /**\n     * Same as begin(), but allows specifying a non-default SPI bus to use.\n     *\n     * @note This function assumes the `SPI::begin()` method was called before to\n     * calling this function.\n     *\n     * @warning This function is for the Arduino platforms only\n     *\n     * @param spiBus A pointer or reference to an instantiated SPI bus object.\n     * The `_SPI` datatype is a \"wrapped\" definition that will represent\n     * various SPI implementations based on the specified platform.\n     * @see Review the [Arduino support page](arduino.md).\n     *\n     * @return same result as begin()\n     */\n    bool begin(_SPI* spiBus);\n\n    /**\n     * Same as begin(), but allows dynamically specifying a SPI bus, CE pin,\n     * and CSN pin to use.\n     *\n     * @note This function assumes the `SPI::begin()` method was called before to\n     * calling this function.\n     *\n     * @warning This function is for the Arduino platforms only\n     *\n     * @param spiBus A pointer or reference to an instantiated SPI bus object.\n     * The `_SPI` datatype is a \"wrapped\" definition that will represent\n     * various SPI implementations based on the specified platform.\n     * @param _cepin The pin attached to Chip Enable on the RF module\n     * @param _cspin The pin attached to Chip Select (often labeled CSN) on the radio module.\n     * - For the Arduino Due board, the [Arduino Due extended SPI feature](https://www.arduino.cc/en/Reference/DueExtendedSPI)\n     * is not supported. This means that the Due's pins 4, 10, or 52 are not mandated options (can use any digital output pin) for the radio's CSN pin.\n     *\n     * @see Review the [Arduino support page](arduino.md).\n     *\n     * @return same result as begin()\n     */\n    bool begin(_SPI* spiBus, rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin);\n#endif // defined (RF24_SPI_PTR) || defined (DOXYGEN_FORCED)\n\n    /**\n     * Same as begin(), but allows dynamically specifying a CE pin\n     * and CSN pin to use.\n     * @param _cepin The pin attached to Chip Enable on the RF module\n     * @param _cspin The pin attached to Chip Select (often labeled CSN) on the radio module.\n     * - For the Arduino Due board, the [Arduino Due extended SPI feature](https://www.arduino.cc/en/Reference/DueExtendedSPI)\n     * is not supported. This means that the Due's pins 4, 10, or 52 are not mandated options (can use any digital output pin) for the radio's CSN pin.\n     * @return same result as begin()\n     */\n    bool begin(rf24_gpio_pin_t _cepin, rf24_gpio_pin_t _cspin);\n\n    /**\n     * Checks if the chip is connected to the SPI bus\n     */\n    bool isChipConnected();\n\n    /**\n     * Start listening on the pipes opened for reading.\n     *\n     * 1. Be sure to call openReadingPipe() first.\n     * 2. Do not call write() while in this mode, without first calling stopListening().\n     * 3. Call available() to check for incoming traffic, and read() to get it.\n     *\n     * Open reading pipe 1 using address `0xCCCECCCECC`\n     * @code\n     * byte address[] = {0xCC, 0xCE, 0xCC, 0xCE, 0xCC};\n     * radio.openReadingPipe(1,address);\n     * radio.startListening();\n     * @endcode\n     *\n     * @note If there was a call to openReadingPipe() about pipe 0 prior to\n     * calling this function, then this function will re-write the address\n     * that was last set to reading pipe 0. This is because openWritingPipe()\n     * will overwrite the address to reading pipe 0 for proper auto-ack\n     * functionality.\n     */\n    void startListening(void);\n\n    /**\n     * Stop listening for incoming messages, and switch to transmit mode.\n     *\n     * Do this before calling write().\n     * @code\n     * radio.stopListening();\n     * radio.write(&data, sizeof(data));\n     * @endcode\n     *\n     * @note When the ACK payloads feature is enabled, the TX FIFO buffers are\n     * flushed when calling this function. This is meant to discard any ACK\n     * payloads that were not appended to acknowledgment packets.\n     */\n    void stopListening(void);\n\n    /**\n     * Check whether there are bytes available to be read\n     * @code\n     * if(radio.available()){\n     *   radio.read(&data,sizeof(data));\n     * }\n     * @endcode\n     *\n     * @see available(uint8_t*)\n     *\n     * @return True if there is a payload available, false if none is\n     *\n     * @warning This function relies on the information about the pipe number\n     * that received the next available payload. According to the datasheet,\n     * the data about the pipe number that received the next available payload\n     * is \"unreliable\" during a FALLING transition on the IRQ pin. This means\n     * you should call whatHappened() before calling this function\n     * during an ISR (Interrupt Service Routine). For example:\n     * @code\n     * void isrCallbackFunction() {\n     *   bool tx_ds, tx_df, rx_dr;\n     *   radio.whatHappened(tx_ds, tx_df, rx_dr); // resets the IRQ pin to HIGH\n     *   radio.available();                       // returned data should now be reliable\n     * }\n     *\n     * void setup() {\n     *   pinMode(IRQ_PIN, INPUT);\n     *   attachInterrupt(digitalPinToInterrupt(IRQ_PIN), isrCallbackFunction, FALLING);\n     * }\n     * @endcode\n     */\n    bool available(void);\n\n    /**\n     * Read payload data from the RX FIFO buffer(s).\n     *\n     * The length of data read is usually the next available payload's length\n     * @see\n     * - getPayloadSize()\n     * - getDynamicPayloadSize()\n     *\n     * @note I specifically chose `void*` as a data type to make it easier\n     * for beginners to use.  No casting needed.\n     *\n     * @param buf Pointer to a buffer where the data should be written\n     * @param len Maximum number of bytes to read into the buffer. This\n     * value should match the length of the object referenced using the\n     * `buf` parameter. The absolute maximum number of bytes that can be read\n     * in one call is 32 (for dynamic payload lengths) or whatever number was\n     * previously passed to setPayloadSize() (for static payload lengths).\n     * @remark\n     * @parblock\n     * Remember that each call to read() fetches data from the\n     * RX FIFO beginning with the first byte from the first available\n     * payload. A payload is not removed from the RX FIFO until it's\n     * entire length (or more) is fetched using read().\n     *\n     * - If `len` parameter's value is less than the available payload's\n     *   length, then the payload remains in the RX FIFO.\n     * - If `len` parameter's value is greater than the first of multiple\n     *   available payloads, then the data saved to the `buf`\n     *   parameter's object will be supplemented with data from the next\n     *   available payload.\n     * - If `len` parameter's value is greater than the last available\n     *   payload's length, then the last byte in the payload is used as\n     *   padding for the data saved to the `buf` parameter's object.\n     *   The nRF24L01 will repeatedly use the last byte from the last\n     *   payload even when read() is called with an empty RX FIFO.\n     * @endparblock\n     * @note To use this function in the python wrapper, remember that\n     * only the `len` parameter is required because this function (in the\n     * python wrapper) returns the payload data as a buffer protocol object\n     * (bytearray object).\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * if radio.available():\n     *     length = radio.getDynamicPayloadSize()  # or radio.getPayloadSize() for static payload sizes\n     *     received_payload = radio.read(length)\n     * @endcode\n     *\n     * @note This function no longer returns a boolean. Use available to\n     * determine if packets are available. The `RX_DR` Interrupt flag is now\n     * cleared with this function instead of when calling available().\n     * @code\n     * if(radio.available()) {\n     *   radio.read(&data, sizeof(data));\n     * }\n     * @endcode\n     */\n    void read(void* buf, uint8_t len);\n\n    /**\n     * Be sure to call openWritingPipe() first to set the destination\n     * of where to write to.\n     *\n     * This blocks until the message is successfully acknowledged by\n     * the receiver or the timeout/retransmit maxima are reached.  In\n     * the current configuration, the max delay here is 60-70ms.\n     *\n     * The maximum size of data written is the fixed payload size, see\n     * getPayloadSize().  However, you can write less, and the remainder\n     * will just be filled with zeroes.\n     *\n     * TX/RX/RT interrupt flags will be cleared every time write is called\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     *\n     * @code\n     * radio.stopListening();\n     * radio.write(&data,sizeof(data));\n     * @endcode\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.write(buffer)\n     * @endcode\n     *\n     * @return\n     * - `true` if the payload was delivered successfully and an acknowledgement\n     *   (ACK packet) was received. If auto-ack is disabled, then any attempt\n     *   to transmit will also return true (even if the payload was not\n     *   received).\n     * - `false` if the payload was sent but was not acknowledged with an ACK\n     *   packet. This condition can only be reported if the auto-ack feature\n     *   is on.\n     */\n    bool write(const void* buf, uint8_t len);\n\n    /**\n     * New: Open a pipe for writing via byte array. Old addressing format retained\n     * for compatibility.\n     *\n     * Only one writing pipe can be opened at once, but this function changes\n     * the address that is used to transmit (ACK payloads/packets do not apply\n     * here). Be sure to call stopListening() prior to calling this function.\n     *\n     * Addresses are assigned via a byte array, default is 5 byte address length\n     *\n     * @code\n     * uint8_t addresses[][6] = {\"1Node\", \"2Node\"};\n     * radio.openWritingPipe(addresses[0]);\n     * @endcode\n     * @code\n     * uint8_t address[] = { 0xCC, 0xCE, 0xCC, 0xCE, 0xCC };\n     * radio.openWritingPipe(address);\n     * address[0] = 0x33;\n     * radio.openReadingPipe(1, address);\n     * @endcode\n     *\n     * @warning This function will overwrite the address set to reading pipe 0\n     * as stipulated by the datasheet for proper auto-ack functionality in TX\n     * mode. Use this function to ensure proper transmission acknowledgement\n     * when the address set to reading pipe 0 (via openReadingPipe()) does not\n     * match the address passed to this function. If the auto-ack feature is\n     * disabled, then this function will still overwrite the address for\n     * reading pipe 0 regardless.\n     *\n     * @see\n     * - setAddressWidth()\n     * - startListening()\n     *\n     * @param address The address to be used for outgoing transmissions (uses\n     * pipe 0). Coordinate this address amongst other receiving nodes (the\n     * pipe numbers don't need to match).\n     *\n     * @remark There is no address length parameter because this function will\n     * always write the number of bytes that the radio addresses are configured\n     * to use (set with setAddressWidth()).\n     */\n\n    void openWritingPipe(const uint8_t* address);\n\n    /**\n     * Open a pipe for reading\n     *\n     * Up to 6 pipes can be open for reading at once.  Open all the required\n     * reading pipes, and then call startListening().\n     *\n     * @see\n     * - openWritingPipe()\n     * - setAddressWidth()\n     *\n     * @note Pipes 0 and 1 will store a full 5-byte address. Pipes 2-5 will technically\n     * only store a single byte, borrowing up to 4 additional bytes from pipe 1 per the\n     * assigned address width.\n     * Pipes 1-5 should share the same address, except the first byte.\n     * Only the first byte in the array should be unique, e.g.\n     * @code\n     * uint8_t addresses[][6] = {\"Prime\", \"2Node\", \"3xxxx\", \"4xxxx\"};\n     * openReadingPipe(0, addresses[0]); // address used is \"Prime\"\n     * openReadingPipe(1, addresses[1]); // address used is \"2Node\"\n     * openReadingPipe(2, addresses[2]); // address used is \"3Node\"\n     * openReadingPipe(3, addresses[3]); // address used is \"4Node\"\n     * @endcode\n     *\n     * @warning\n     * @parblock\n     * If the reading pipe 0 is opened by this function, the address\n     * passed to this function (for pipe 0) will be restored at every call to\n     * startListening().\n     *\n     * Read\n     * http://maniacalbits.blogspot.com/2013/04/rf24-addressing-nrf24l01-radios-require.html\n     * to understand how to avoid using malformed addresses. This address\n     * restoration is implemented because of the underlying necessary\n     * functionality of openWritingPipe().\n     * @endparblock\n     *\n     * @param number Which pipe to open. Only pipe numbers 0-5 are available,\n     * an address assigned to any pipe number not in that range will be ignored.\n     * @param address The 24, 32 or 40 bit address of the pipe to open.\n     *\n     * There is no address length parameter because this function will\n     * always write the number of bytes (for pipes 0 and 1) that the radio\n     * addresses are configured to use (set with setAddressWidth()).\n     */\n    void openReadingPipe(uint8_t number, const uint8_t* address);\n\n    /**@}*/\n    /**\n     * @name Advanced Operation\n     *\n     * Methods you can use to drive the chip in more advanced ways\n     */\n    /**@{*/\n\n    /**\n     * Print a giant block of debugging information to stdout\n     *\n     * @warning Does nothing if stdout is not defined.  See fdevopen in stdio.h\n     * The printf.h file is included with the library for Arduino.\n     * @code\n     * #include <printf.h>\n     * setup(){\n     *   Serial.begin(115200);\n     *   printf_begin();\n     *   ...\n     * }\n     * @endcode\n     */\n    void printDetails(void);\n\n    /**\n     * Print a giant block of debugging information to stdout. This function\n     * differs from printDetails() because it makes the information more\n     * understandable without having to look up the datasheet or convert\n     * hexadecimal to binary. Only use this function if your application can\n     * spare extra bytes of memory.\n     *\n     * @warning Does nothing if stdout is not defined.  See fdevopen in stdio.h\n     * The printf.h file is included with the library for Arduino.\n     * @code\n     * #include <printf.h>\n     * setup(){\n     *   Serial.begin(115200);\n     *   printf_begin();\n     *   // ...\n     * }\n     * @endcode\n     *\n     * @note If the automatic acknowledgements feature is configured differently\n     * for each pipe, then a binary representation is used in which bits 0-5\n     * represent pipes 0-5 respectively. A `0` means the feature is disabled, and\n     * a `1` means the feature is enabled.\n     */\n    void printPrettyDetails(void);\n\n    /**\n     * Put a giant block of debugging information in a char array. This function\n     * differs from printPrettyDetails() because it uses `sprintf()` and does not use\n     * a predefined output stream (like `Serial` or stdout). Only use this function if\n     * your application can spare extra bytes of memory. This can also be used for boards that\n     * do not support `printf()` (which is required for printDetails() and printPrettyDetails()).\n     *\n     * @remark\n     * The C standard function [sprintf()](http://www.cplusplus.com/reference/cstdio/sprintf)\n     * formats a C-string in the exact same way as `printf()` but outputs (by reference)\n     * into a char array. The formatted string literal for sprintf() is stored\n     * in nonvolatile program memory.\n     *\n     * @warning Use a buffer of sufficient size for the `debugging_information`. Start\n     * with a char array that has at least 870 elements. There is no overflow protection when using\n     * sprintf(), so the output buffer must be sized correctly or the resulting behavior will\n     * be undefined.\n     * @code\n     * char buffer[870] = {'\\0'};\n     * uint16_t used_chars = radio.sprintfPrettyDetails(buffer);\n     * Serial.println(buffer);\n     * Serial.print(F(\"strlen = \"));\n     * Serial.println(used_chars + 1); // +1 for c-strings' null terminating byte\n     * @endcode\n     *\n     * @param debugging_information The c-string buffer that the debugging\n     * information is stored to. This must be allocated to a minimum of 870 bytes of memory.\n     * @returns The number of characters altered in the given buffer. Remember that,\n     * like `sprintf()`, this returned number does not include the null terminating byte.\n     *\n     * This function is available in the python wrapper, but it accepts no parameters and\n     * returns a string. It does not return the number of characters in the string.\n     * @code{.py}\n     * debug_info = radio.sprintfPrettyDetails()\n     * print(debug_info)\n     * print(\"str_len =\", len(debug_info))\n     * @endcode\n     *\n     * @note If the automatic acknowledgements feature is configured differently\n     * for each pipe, then a binary representation is used in which bits 0-5\n     * represent pipes 0-5 respectively. A `0` means the feature is disabled, and\n     * a `1` means the feature is enabled.\n     */\n    uint16_t sprintfPrettyDetails(char* debugging_information);\n\n    /**\n     * Encode radio debugging information into an array of uint8_t. This function\n     * differs from other debug output methods because the debug information can\n     * be decoded by an external program.\n     *\n     * This function is not available in the python wrapper because it is intended for\n     * use on processors with very limited available resources.\n     *\n     * @remark\n     * This function uses much less ram than other `*print*Details()` methods.\n     *\n     * @code\n     * uint8_t encoded_details[43] = {0};\n     * radio.encodeRadioDetails(encoded_details);\n     * @endcode\n     *\n     * @param encoded_status The uint8_t array that RF24 radio details are\n     * encoded into. This array must be at least 43 bytes in length; any less would surely\n     * cause undefined behavior.\n     *\n     * Registers names and/or data corresponding to the index of the `encoded_details` array:\n     * | index | register/data |\n     * |------:|:--------------|\n     * | 0 |     NRF_CONFIG |\n     * | 1 |     EN_AA |\n     * | 2 |     EN_RXADDR |\n     * | 3 |     SETUP_AW |\n     * | 4 |     SETUP_RETR |\n     * | 5 |     RF_CH |\n     * | 6 |     RF_SETUP |\n     * | 7 |     NRF_STATUS |\n     * | 8 |     OBSERVE_TX |\n     * | 9 |     CD (aka RPD) |\n     * | 10-14 | RX_ADDR_P0 |\n     * | 15-19 | RX_ADDR_P1 |\n     * | 20 |    RX_ADDR_P2 |\n     * | 21 |    RX_ADDR_P3 |\n     * | 22 |    RX_ADDR_P4 |\n     * | 23 |    RX_ADDR_P5 |\n     * | 24-28 | TX_ADDR |\n     * | 29 |    RX_PW_P0 |\n     * | 30 |    RX_PW_P1 |\n     * | 31 |    RX_PW_P2 |\n     * | 32 |    RX_PW_P3 |\n     * | 33 |    RX_PW_P4 |\n     * | 34 |    RX_PW_P5 |\n     * | 35 |    FIFO_STATUS |\n     * | 36 |    DYNPD |\n     * | 37 |    FEATURE |\n     * | 38-39 | ce_pin |\n     * | 40-41 | csn_pin |\n     * | 42 |    SPI speed (in MHz) or'd with (isPlusVariant << 4) |\n     */\n    void encodeRadioDetails(uint8_t* encoded_status);\n\n    /**\n     * Test whether there are bytes available to be read from the\n     * FIFO buffers.\n     *\n     * @note This function is named `available_pipe()` in the python wrapper.\n     * @parblock\n     * Additionally, the `available_pipe()` function (which\n     * takes no arguments) returns a 2 item tuple containing (ordered by\n     * tuple's indices):\n     * - A boolean describing if there is a payload available to read from\n     *   the RX FIFO buffers.\n     * - The pipe number that received the next available payload in the RX\n     *   FIFO buffers. If the item at the tuple's index 0 is `False`, then\n     *   this pipe number is invalid.\n     *\n     * To use this function in python:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * has_payload, pipe_number = radio.available_pipe()  # expand the tuple to 2 variables\n     * if has_payload:\n     *     print(\"Received a payload with pipe\", pipe_number)\n     * @endcode\n     * @endparblock\n     *\n     * @param[out] pipe_num Which pipe has the payload available\n     * @code\n     * uint8_t pipeNum;\n     * if(radio.available(&pipeNum)){\n     *   radio.read(&data, sizeof(data));\n     *   Serial.print(\"Received data on pipe \");\n     *   Serial.println(pipeNum);\n     * }\n     * @endcode\n     *\n     * @warning According to the datasheet, the data saved to `pipe_num` is\n     * \"unreliable\" during a FALLING transition on the IRQ pin. This means you\n     * should call whatHappened() before calling this function during\n     * an ISR (Interrupt Service Routine). For example:\n     * @code\n     * void isrCallbackFunction() {\n     *   bool tx_ds, tx_df, rx_dr;\n     *   radio.whatHappened(tx_ds, tx_df, rx_dr); // resets the IRQ pin to HIGH\n     *   uint8_t pipe;                            // initialize pipe data\n     *   radio.available(&pipe);                  // pipe data should now be reliable\n     * }\n     *\n     * void setup() {\n     *   pinMode(IRQ_PIN, INPUT);\n     *   attachInterrupt(digitalPinToInterrupt(IRQ_PIN), isrCallbackFunction, FALLING);\n     * }\n     * @endcode\n     *\n     * @return\n     * - `true` if there is a payload available in the top (first out)\n     *   level RX FIFO.\n     * - `false` if there is nothing available in the RX FIFO because it is\n     *   empty.\n     */\n    bool available(uint8_t* pipe_num);\n\n    /**\n     * Use this function to check if the radio's RX FIFO levels are all\n     * occupied. This can be used to prevent data loss because any incoming\n     * transmissions are rejected if there is no unoccupied levels in the RX\n     * FIFO to store the incoming payload. Remember that each level can hold\n     * up to a maximum of 32 bytes.\n     * @return\n     * - `true` if all three 3 levels of the RX FIFO buffers are occupied.\n     * - `false` if there is one or more levels available in the RX FIFO\n     *   buffers. Remember that this does not always mean that the RX FIFO\n     *   buffers are empty; use available() to see if the RX FIFO buffers are\n     *   empty or not.\n     */\n    bool rxFifoFull();\n\n    /**\n     * @param about_tx `true` focuses on the TX FIFO, `false` focuses on the RX FIFO\n     * @return\n     * - @ref RF24_FIFO_OCCUPIED (`0`) if the specified FIFO is neither full nor empty.\n     * - @ref RF24_FIFO_EMPTY (`1`) if the specified FIFO is empty.\n     * - @ref RF24_FIFO_FULL (`2`) if the specified FIFO is full.\n     * - @ref RF24_FIFO_INVALID (`3`) if the data fetched over SPI was malformed.\n     */\n    rf24_fifo_state_e isFifo(bool about_tx);\n\n    /**\n     * @deprecated Use RF24::isFifo(bool about_tx) instead.\n     * @param about_tx `true` focuses on the TX FIFO, `false` focuses on the RX FIFO\n     * @param check_empty\n     * - `true` checks if the specified FIFO is empty\n     * - `false` checks is the specified FIFO is full.\n     * @return A boolean answer to the question \"is the [TX/RX] FIFO [empty/full]?\"\n     */\n    bool isFifo(bool about_tx, bool check_empty);\n\n    /**\n     * Enter low-power mode\n     *\n     * To return to normal power mode, call powerUp().\n     *\n     * @note After calling startListening(), a basic radio will consume about 13.5mA\n     * at max PA level.\n     * During active transmission, the radio will consume about 11.5mA, but this will\n     * be reduced to 26uA (.026mA) between sending.\n     * In full powerDown mode, the radio will consume approximately 900nA (.0009mA)\n     *\n     * @code\n     * radio.powerDown();\n     * avr_enter_sleep_mode(); // Custom function to sleep the device\n     * radio.powerUp();\n     * @endcode\n     */\n    void powerDown(void);\n\n    /**\n     * Leave low-power mode - required for normal radio operation after calling powerDown()\n     *\n     * To return to low power mode, call powerDown().\n     * @note This will take up to 5ms for maximum compatibility\n     */\n    void powerUp(void);\n\n    /**\n     * Write for single NOACK writes. Optionally disable\n     * acknowledgements/auto-retries for a single payload using the\n     * multicast parameter set to true.\n     *\n     * Can be used with enableAckPayload() to request a response\n     * @see\n     * - setAutoAck()\n     * - write()\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @param multicast Request ACK response (false), or no ACK response\n     * (true). Be sure to have called enableDynamicAck() at least once before\n     * setting this parameter.\n     * @return\n     * - `true` if the payload was delivered successfully and an acknowledgement\n     *   (ACK packet) was received. If auto-ack is disabled, then any attempt\n     *   to transmit will also return true (even if the payload was not\n     *   received).\n     * - `false` if the payload was sent but was not acknowledged with an ACK\n     *   packet. This condition can only be reported if the auto-ack feature\n     *   is on.\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.write(buffer, False)  # False = the multicast parameter\n     * @endcode\n     */\n    bool write(const void* buf, uint8_t len, const bool multicast);\n\n    /**\n     * This will not block until the 3 FIFO buffers are filled with data.\n     * Once the FIFOs are full, writeFast() will simply wait for a buffer to\n     * become available or a transmission failure (returning `true` or `false`\n     * respectively).\n     *\n     * @warning\n     * @parblock\n     * It is important to never keep the nRF24L01 in TX mode and FIFO full for more than 4ms at a time. If the auto\n     * retransmit is enabled, the nRF24L01 is never in TX mode long enough to disobey this rule. Allow the FIFO\n     * to clear by issuing txStandBy() or ensure appropriate time between transmissions.\n     *\n     * Use txStandBy() when this function returns `false`.\n     *\n     * Example (Partial blocking):\n     * @code\n     * radio.writeFast(&buf,32);  // Writes 1 payload to the buffers\n     * txStandBy();     \t\t   // Returns 0 if failed. 1 if success. Blocks only until MAX_RT timeout or success. Data flushed on fail.\n     *\n     * radio.writeFast(&buf,32);  // Writes 1 payload to the buffers\n     * txStandBy(1000);\t\t   // Using extended timeouts, returns 1 if success. Retries failed payloads for 1 seconds before returning 0.\n     * @endcode\n     * @endparblock\n     *\n     * @see\n     * - setAutoAck()\n     * - txStandBy()\n     * - write()\n     * - writeBlocking()\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @return\n     * - `true` if the payload passed to `buf` was loaded in the TX FIFO.\n     * - `false` if the payload passed to `buf` was not loaded in the TX FIFO\n     *   because a previous payload already in the TX FIFO failed to\n     *   transmit. This condition can only be reported if the auto-ack feature\n     *   is on.\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.writeFast(buffer)\n     * @endcode\n     */\n    bool writeFast(const void* buf, uint8_t len);\n\n    /**\n     * Similar to writeFast(const void*, uint8_t) but allows for single NOACK writes.\n     * Optionally disable acknowledgements/auto-retries for a single payload using the\n     * multicast parameter set to `true`.\n     *\n     * @warning If the auto-ack feature is enabled, then it is strongly encouraged to call\n     * txStandBy() when this function returns `false`.\n     *\n     * @see\n     * - setAutoAck()\n     * - txStandBy()\n     * - write()\n     * - writeBlocking()\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @param multicast Request ACK response (false), or no ACK response\n     * (true). Be sure to have called enableDynamicAck() at least once before\n     * setting this parameter.\n     * @return\n     * - `true` if the payload passed to `buf` was loaded in the TX FIFO.\n     * - `false` if the payload passed to `buf` was not loaded in the TX FIFO\n     *   because a previous payload already in the TX FIFO failed to\n     *   transmit. This condition can only be reported if the auto-ack feature\n     *   is on (and the multicast parameter is set to false).\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.writeFast(buffer, False)  # False = the multicast parameter\n     * @endcode\n     */\n    bool writeFast(const void* buf, uint8_t len, const bool multicast);\n\n    /**\n     * This function extends the auto-retry mechanism to any specified duration.\n     * It will not block until the 3 FIFO buffers are filled with data.\n     * If so the library will auto retry until a new payload is written\n     * or the user specified timeout period is reached.\n     * @warning It is important to never keep the nRF24L01 in TX mode and FIFO full for more than 4ms at a time. If the auto\n     * retransmit is enabled, the nRF24L01 is never in TX mode long enough to disobey this rule. Allow the FIFO\n     * to clear by issuing txStandBy() or ensure appropriate time between transmissions.\n     *\n     * Example (Full blocking):\n     * @code\n     * radio.writeBlocking(&buf, sizeof(buf), 1000); // Wait up to 1 second to write 1 payload to the buffers\n     * radio.txStandBy(1000);                        // Wait up to 1 second for the payload to send. Return 1 if ok, 0 if failed.\n     *                                               // Blocks only until user timeout or success. Data flushed on fail.\n     * @endcode\n     * @note If used from within an interrupt, the interrupt should be disabled until completion, and sei(); called to enable millis().\n     * @see\n     * - txStandBy()\n     * - write()\n     * - writeFast()\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @param timeout User defined timeout in milliseconds.\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.writeBlocking(buffer, 1000)  # 1000 means wait at most 1 second\n     * @endcode\n     *\n     * @return\n     * - `true` if the payload passed to `buf` was loaded in the TX FIFO.\n     * - `false` if the payload passed to `buf` was not loaded in the TX FIFO\n     *   because a previous payload already in the TX FIFO failed to\n     *   transmit. This condition can only be reported if the auto-ack feature\n     *   is on.\n     */\n    bool writeBlocking(const void* buf, uint8_t len, uint32_t timeout);\n\n    /**\n     * This function should be called as soon as transmission is finished to\n     * drop the radio back to STANDBY-I mode. If not issued, the radio will\n     * remain in STANDBY-II mode which, per the data sheet, is not a recommended\n     * operating mode.\n     *\n     * @note When transmitting data in rapid succession, it is still recommended by\n     * the manufacturer to drop the radio out of TX or STANDBY-II mode if there is\n     * time enough between sends for the FIFOs to empty. This is not required if auto-ack\n     * is enabled.\n     *\n     * Relies on built-in auto retry functionality.\n     *\n     * Example (Partial blocking):\n     * @code\n     * radio.writeFast(&buf, 32);\n     * radio.writeFast(&buf, 32);\n     * radio.writeFast(&buf, 32);   //Fills the FIFO buffers up\n     * bool ok = radio.txStandBy(); //Returns 0 if failed. 1 if success.\n     *                              //Blocks only until MAX_RT timeout or success. Data flushed on fail.\n     * @endcode\n     * @see txStandBy(uint32_t timeout, bool startTx)\n     * @return\n     * - `true` if all payloads in the TX FIFO were delivered successfully and\n     *   an acknowledgement (ACK packet) was received for each. If auto-ack is\n     *   disabled, then any attempt to transmit will also return true (even if\n     *   the payload was not received).\n     * - `false` if a payload was sent but was not acknowledged with an ACK\n     *   packet. This condition can only be reported if the auto-ack feature\n     *   is on.\n     */\n    bool txStandBy();\n\n    /**\n     * This function allows extended blocking and auto-retries per a user defined timeout\n     *\n     * Fully Blocking Example:\n     * @code\n     * radio.writeFast(&buf, 32);\n     * radio.writeFast(&buf, 32);\n     * radio.writeFast(&buf, 32);       //Fills the FIFO buffers up\n     * bool ok = radio.txStandBy(1000); //Returns 0 if failed after 1 second of retries. 1 if success.\n     *                                  //Blocks only until user defined timeout or success. Data flushed on fail.\n     * @endcode\n     * @note If used from within an interrupt, the interrupt should be disabled until completion, and sei(); called to enable millis().\n     * @param timeout Number of milliseconds to retry failed payloads\n     * @param startTx If this is set to `true`, then this function puts the nRF24L01\n     * in TX Mode. `false` leaves the primary mode (TX or RX) as it is, which can\n     * prevent the mandatory wait time to change modes.\n     * @return\n     * - `true` if all payloads in the TX FIFO were delivered successfully and\n     *   an acknowledgement (ACK packet) was received for each. If auto-ack is\n     *   disabled, then any attempt to transmit will also return true (even if\n     *   the payload was not received).\n     * - `false` if a payload was sent but was not acknowledged with an ACK\n     *   packet. This condition can only be reported if the auto-ack feature\n     *   is on.\n     */\n    bool txStandBy(uint32_t timeout, bool startTx = 0);\n\n    /**\n     * Write an acknowledgement (ACK) payload for the specified pipe\n     *\n     * The next time a message is received on a specified `pipe`, the data in\n     * `buf` will be sent back in the ACK payload.\n     *\n     * @see\n     * - enableAckPayload()\n     * - enableDynamicPayloads()\n     *\n     * @note ACK payloads are handled automatically by the radio chip when a\n     * regular payload is received. It is important to discard regular payloads\n     * in the TX FIFO (using flush_tx()) before loading the first ACK payload\n     * into the TX FIFO. This function can be called before and after calling\n     * startListening().\n     *\n     * @warning Only three of these can be pending at any time as there are\n     * only 3 FIFO buffers. Dynamic payloads must be enabled.\n     *\n     * @note ACK payloads are dynamic payloads. Calling enableAckPayload()\n     * will automatically enable dynamic payloads on pipe 0 (required for TX\n     * mode when expecting ACK payloads) & pipe 1. To use ACK payloads on any other\n     * pipe in RX mode, call enableDynamicPayloads().\n     *\n     * @param pipe Which pipe# (typically 1-5) will get this response.\n     * @param buf Pointer to data that is sent\n     * @param len Length of the data to send, up to 32 bytes max.  Not affected\n     * by the static payload size set by setPayloadSize().\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.writeAckPayload(1, buffer)  # load an ACK payload for response on pipe 1\n     * @endcode\n     *\n     * @return\n     * - `true` if the payload was loaded into the TX FIFO.\n     * - `false` if the payload wasn't loaded into the TX FIFO because it is\n     *   already full or the ACK payload feature is not enabled using\n     *   enableAckPayload().\n     */\n    bool writeAckPayload(uint8_t pipe, const void* buf, uint8_t len);\n\n    /**\n     * Call this when you get an Interrupt Request (IRQ) to find out why\n     *\n     * This function describes what event triggered the IRQ pin to go active\n     * LOW and clears the status of all events.\n     *\n     * @see maskIRQ()\n     *\n     * @param[out] tx_ok The transmission attempt completed (TX_DS). This does\n     * not imply that the transmitted data was received by another radio, rather\n     * this only reports if the attempt to send was completed. This will\n     * always be `true` when the auto-ack feature is disabled.\n     * @param[out] tx_fail The transmission failed to be acknowledged, meaning\n     * too many retries (MAX_RT) were made while expecting an ACK packet. This\n     * event is only triggered when auto-ack feature is enabled.\n     * @param[out] rx_ready There is a newly received payload (RX_DR) saved to\n     * RX FIFO buffers. Remember that the RX FIFO can only hold up to 3\n     * payloads. Once the RX FIFO is full, all further received transmissions\n     * are rejected until there is space to save new data in the RX FIFO\n     * buffers.\n     *\n     * @note This function expects no parameters in the python wrapper.\n     * Instead, this function returns a 3 item tuple describing the IRQ\n     * events' status. To use this function in the python wrapper:\n     * @code{.py}\n     * # let`radio` be the instantiated RF24 object\n     * tx_ds, tx_df, rx_dr = radio.whatHappened()  # get IRQ status flags\n     * print(\"tx_ds: {}, tx_df: {}, rx_dr: {}\".format(tx_ds, tx_df, rx_dr))\n     * @endcode\n     */\n    void whatHappened(bool& tx_ok, bool& tx_fail, bool& rx_ready);\n\n    /**\n     * Non-blocking write to the open writing pipe used for buffered writes\n     *\n     * @note Optimization: This function now leaves the CE pin high, so the radio\n     * will remain in TX or STANDBY-II Mode until a txStandBy() command is issued. Can be used as an alternative to startWrite()\n     * if writing multiple payloads at once.\n     * @warning It is important to never keep the nRF24L01 in TX mode with FIFO full for more than 4ms at a time. If the auto\n     * retransmit/autoAck is enabled, the nRF24L01 is never in TX mode long enough to disobey this rule. Allow the FIFO\n     * to clear by issuing txStandBy() or ensure appropriate time between transmissions.\n     *\n     * @see\n     * - write()\n     * - writeFast()\n     * - startWrite()\n     * - writeBlocking()\n     * - setAutoAck() (for single noAck writes)\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @param multicast Request ACK response (false), or no ACK response\n     * (true). Be sure to have called enableDynamicAck() at least once before\n     * setting this parameter.\n     * @param startTx If this is set to `true`, then this function sets the\n     * nRF24L01's CE pin to active (enabling TX transmissions). `false` has no\n     * effect on the nRF24L01's CE pin and simply loads the payload into the\n     * TX FIFO.\n     *\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.startFastWrite(buffer, False, True)  # 3rd parameter is optional\n     * #     False means expecting ACK response (multicast parameter)\n     * #     True means initiate transmission (startTx parameter)\n     * @endcode\n     */\n    void startFastWrite(const void* buf, uint8_t len, const bool multicast, bool startTx = 1);\n\n    /**\n     * Non-blocking write to the open writing pipe\n     *\n     * Just like write(), but it returns immediately. To find out what happened\n     * to the send, catch the IRQ and then call whatHappened().\n     *\n     * @see\n     * - write()\n     * - writeFast()\n     * - startFastWrite()\n     * - whatHappened()\n     * - setAutoAck() (for single noAck writes)\n     *\n     * @param buf Pointer to the data to be sent\n     * @param len Number of bytes to be sent\n     * @param multicast Request ACK response (false), or no ACK response\n     * (true). Be sure to have called enableDynamicAck() at least once before\n     * setting this parameter.\n     *\n     * @return\n     * - `true` if payload was written to the TX FIFO buffers and the\n     *   transmission was started.\n     * - `false` if the TX FIFO is full and the payload could not be written. In\n     *   this condition, the transmission process is restarted.\n     * @note The `len` parameter must be omitted when using the python\n     * wrapper because the length of the payload is determined automatically.\n     * To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * buffer = b\"Hello World\"  # a `bytes` object\n     * radio.startWrite(buffer, False)  # False = the multicast parameter\n     * @endcode\n     */\n    bool startWrite(const void* buf, uint8_t len, const bool multicast);\n\n    /**\n     * The function will instruct the radio to re-use the payload in the\n     * top level (first out) of the TX FIFO buffers. This is used internally\n     * by writeBlocking() to initiate retries when a TX failure\n     * occurs. Retries are automatically initiated except with the standard\n     * write(). This way, data is not flushed from the buffer until calling\n     * flush_tx(). If the TX FIFO has only the one payload (in the top level),\n     * the re-used payload can be overwritten by using write(), writeFast(),\n     * writeBlocking(), startWrite(), or startFastWrite(). If the TX FIFO has\n     * other payloads enqueued, then the aforementioned functions will attempt\n     * to enqueue the a new payload in the TX FIFO (does not overwrite the top\n     * level of the TX FIFO). Currently, stopListening() also calls flush_tx()\n     * when ACK payloads are enabled (via enableAckPayload()).\n     *\n     * Upon exiting, this function will set the CE pin HIGH to initiate the\n     * re-transmission process. If only 1 re-transmission is desired, then the\n     * CE pin should be set to LOW after the mandatory minumum pulse duration\n     * of 10 microseconds.\n     *\n     * @remark This function only applies when taking advantage of the\n     * auto-retry feature. See setAutoAck() and setRetries() to configure the\n     * auto-retry feature.\n     *\n     * @note This is to be used AFTER auto-retry fails if wanting to resend\n     * using the built-in payload reuse feature. After issuing reUseTX(), it\n     * will keep resending the same payload until a transmission failure\n     * occurs or the CE pin is set to LOW (whichever comes first). In the\n     * event of a re-transmission failure, simply call this function again to\n     * resume re-transmission of the same payload.\n     */\n    void reUseTX();\n\n    /**\n     * Empty all 3 of the TX (transmit) FIFO buffers. This is automatically\n     * called by stopListening() if ACK payloads are enabled. However,\n     * startListening() does not call this function.\n     *\n     * @return Current value of status register\n     */\n    uint8_t flush_tx(void);\n\n    /**\n     * Empty all 3 of the RX (receive) FIFO buffers.\n     *\n     * @return Current value of status register\n     */\n    uint8_t flush_rx(void);\n\n    /**\n     * Test whether there was a carrier on the line for the\n     * previous listening period.\n     *\n     * Useful to check for interference on the current channel.\n     *\n     * @return true if was carrier, false if not\n     */\n    bool testCarrier(void);\n\n    /**\n     * Test whether a signal (carrier or otherwise) greater than\n     * or equal to -64dBm is present on the channel. Valid only\n     * on nRF24L01P (+) hardware. On nRF24L01, use testCarrier().\n     *\n     * Useful to check for interference on the current channel and\n     * channel hopping strategies.\n     *\n     * @code\n     * bool goodSignal = radio.testRPD();\n     * if(radio.available()){\n     *    Serial.println(goodSignal ? \"Strong signal > -64dBm\" : \"Weak signal < -64dBm\" );\n     *    radio.read(&payload,sizeof(payload));\n     * }\n     * @endcode\n     * @return true if a signal greater than or equal to -64dBm was detected,\n     * false if not.\n     */\n    bool testRPD(void);\n\n    /**\n     * Test whether this is a real radio, or a mock shim for\n     * debugging.  Setting either pin to 0xff is the way to\n     * indicate that this is not a real radio.\n     *\n     * @return true if this is a legitimate radio\n     */\n    bool isValid();\n\n    /**\n     * Close a pipe after it has been previously opened.\n     * Can be safely called without having previously opened a pipe.\n     * @param pipe Which pipe number to close, any integer not in range [0, 5]\n     * is ignored.\n     */\n    void closeReadingPipe(uint8_t pipe);\n\n#if defined(FAILURE_HANDLING)\n    /**\n     *\n     * If a failure has been detected, it usually indicates a hardware issue. By default the library\n     * will cease operation when a failure is detected.\n     * This should allow advanced users to detect and resolve intermittent hardware issues.\n     *\n     * In most cases, the radio must be re-enabled via radio.begin(); and the appropriate settings\n     * applied after a failure occurs, if wanting to re-enable the device immediately.\n     *\n     * The three main failure modes of the radio include:\n     *\n     * 1. Writing to radio: Radio unresponsive\n     *     - Fixed internally by adding a timeout to the internal write functions in RF24 (failure handling)\n     * 2. Reading from radio: Available returns true always\n     *     - Fixed by adding a timeout to available functions by the user. This is implemented internally in  RF24Network.\n     * 3. Radio configuration settings are lost\n     *     - Fixed by monitoring a value that is different from the default, and re-configuring the radio if this setting reverts to the default.\n     *\n     * See the included example, GettingStarted_HandlingFailures\n     *\n     * @code\n     * if(radio.failureDetected) {\n     *   radio.begin();                          // Attempt to re-configure the radio with defaults\n     *   radio.failureDetected = 0;              // Reset the detection value\n     *   radio.openWritingPipe(addresses[1]);    // Re-configure pipe addresses\n     *   radio.openReadingPipe(1, addresses[0]);\n     *   report_failure();                       // Blink LEDs, send a message, etc. to indicate failure\n     * }\n     * @endcode\n     */\n    bool failureDetected;\n#endif // defined (FAILURE_HANDLING)\n\n    /**@}*/\n    /**\n     * @name Optional Configurators\n     *\n     *  Methods you can use to get or set the configuration of the chip.\n     *  None are required.  Calling begin() sets up a reasonable set of\n     *  defaults.\n     */\n    /**@{*/\n\n    /**\n     * Set the address width from 3 to 5 bytes (24, 32 or 40 bit)\n     *\n     * @param a_width The address width (in bytes) to use; this can be 3, 4 or\n     * 5.\n     */\n    void setAddressWidth(uint8_t a_width);\n\n    /**\n     * Set the number of retry attempts and delay between retry attempts when\n     * transmitting a payload. The radio is waiting for an acknowledgement\n     * (ACK) packet during the delay between retry attempts.\n     *\n     * @param delay How long to wait between each retry, in multiples of\n     * 250 us. The minimum of 0 means 250 us, and the maximum of 15 means\n     * 4000 us. The default value of 5 means 1500us (5 * 250 + 250).\n     * @param count How many retries before giving up. The default/maximum is 15. Use\n     * 0 to disable the auto-retry feature all together.\n     *\n     * @note Disable the auto-retry feature on a transmitter still uses the\n     * auto-ack feature (if enabled), except it will not retry to transmit if\n     * the payload was not acknowledged on the first attempt.\n     */\n    void setRetries(uint8_t delay, uint8_t count);\n\n    /**\n     * Set RF communication channel. The frequency used by a channel is\n     * calculated as:\n     * @verbatim 2400 MHz + <channel number> @endverbatim\n     * Meaning the default channel of 76 uses the approximate frequency of\n     * 2476 MHz.\n     *\n     * @note In the python wrapper, this function is the setter of the\n     * `channel` attribute.To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * radio.channel = 2  # set the channel to 2 (2402 MHz)\n     * @endcode\n     *\n     * @param channel Which RF channel to communicate on, 0-125\n     */\n    void setChannel(uint8_t channel);\n\n    /**\n     * Get RF communication channel\n     *\n     * @note In the python wrapper, this function is the getter of the\n     * `channel` attribute.To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * chn = radio.channel  # get the channel\n     * @endcode\n     *\n     * @return The currently configured RF Channel\n     */\n    uint8_t getChannel(void);\n\n    /**\n     * Set Static Payload Size\n     *\n     * This implementation uses a pre-established fixed payload size for all\n     * transmissions.  If this method is never called, the driver will always\n     * transmit the maximum payload size (32 bytes), no matter how much\n     * was sent to write().\n     *\n     * @note In the python wrapper, this function is the setter of the\n     * `payloadSize` attribute.To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * radio.payloadSize = 16  # set the static payload size to 16 bytes\n     * @endcode\n     *\n     * @param size The number of bytes in the payload\n     */\n    void setPayloadSize(uint8_t size);\n\n    /**\n     * Get Static Payload Size\n     *\n     * @note In the python wrapper, this function is the getter of the\n     * `payloadSize` attribute.To use this function in the python wrapper:\n     * @code{.py}\n     * # let `radio` be the instantiated RF24 object\n     * pl_size = radio.payloadSize  # get the static payload size\n     * @endcode\n     *\n     * @see setPayloadSize()\n     *\n     * @return The number of bytes in the payload\n     */\n    uint8_t getPayloadSize(void);\n\n    /**\n     * Get Dynamic Payload Size\n     *\n     * For dynamic payloads, this pulls the size of the payload off\n     * the chip\n     *\n     * @note Corrupt packets are now detected and flushed per the\n     * manufacturer.\n     * @code\n     * if(radio.available()){\n     *   if(radio.getDynamicPayloadSize() < 1){\n     *     // Corrupt payload has been flushed\n     *     return;\n     *   }\n     *   radio.read(&data,sizeof(data));\n     * }\n     * @endcode\n     *\n     * @return Payload length of last-received dynamic payload\n     */\n    uint8_t getDynamicPayloadSize(void);\n\n    /**\n     * Enable custom payloads in the acknowledge packets\n     *\n     * ACK payloads are a handy way to return data back to senders without\n     * manually changing the radio modes on both units.\n     *\n     * @remarks The ACK payload feature requires the auto-ack feature to be\n     * enabled for any pipe using ACK payloads. This function does not\n     * automatically enable the auto-ack feature on pipe 0 since the auto-ack\n     * feature is enabled for all pipes by default.\n     *\n     * @see setAutoAck()\n     *\n     * @note ACK payloads are dynamic payloads. This function automatically\n     * enables dynamic payloads on pipes 0 & 1 by default. Call\n     * enableDynamicPayloads() to enable on all pipes (especially for RX nodes\n     * that use pipes other than pipe 0 to receive transmissions expecting\n     * responses with ACK payloads).\n     */\n    void enableAckPayload(void);\n\n    /**\n     * Disable custom payloads on the acknowledge packets\n     *\n     * @see enableAckPayload()\n     */\n    void disableAckPayload(void);\n\n    /**\n     * Enable dynamically-sized payloads\n     *\n     * This way you don't always have to send large packets just to send them\n     * once in a while. This enables dynamic payloads on ALL pipes.\n     *\n     */\n    void enableDynamicPayloads(void);\n\n    /**\n     * Disable dynamically-sized payloads\n     *\n     * This disables dynamic payloads on ALL pipes. Since Ack Payloads\n     * requires Dynamic Payloads, Ack Payloads are also disabled.\n     * If dynamic payloads are later re-enabled and ack payloads are desired\n     * then enableAckPayload() must be called again as well.\n     *\n     */\n    void disableDynamicPayloads(void);\n\n    /**\n     * Enable dynamic ACKs (single write multicast or unicast) for chosen\n     * messages.\n     *\n     * @note This function must be called once before using the multicast\n     * parameter for any functions that offer it. To use multicast behavior\n     * about all outgoing payloads (using pipe 0) or incoming payloads\n     * (concerning all RX pipes), use setAutoAck()\n     *\n     * @see\n     * - setAutoAck() for all pipes\n     * - setAutoAck(uint8_t, bool) for individual pipes\n     *\n     * @code\n     * radio.write(&data, 32, 1); // Sends a payload with no acknowledgement requested\n     * radio.write(&data, 32, 0); // Sends a payload using auto-retry/autoACK\n     * @endcode\n     */\n    void enableDynamicAck();\n\n    /**\n     * Determine whether the hardware is an nRF24L01+ or not.\n     *\n     * @return true if the hardware is nRF24L01+ (or compatible) and false\n     * if its not.\n     */\n    bool isPVariant(void);\n\n    /**\n     * Enable or disable the auto-acknowledgement feature for all pipes. This\n     * feature is enabled by default. Auto-acknowledgement responds to every\n     * received payload with an empty ACK packet. These ACK packets get sent\n     * from the receiving radio back to the transmitting radio. To attach an\n     * ACK payload to a ACK packet, use writeAckPayload().\n     *\n     * If this feature is disabled on a transmitting radio, then the\n     * transmitting radio will always report that the payload was received\n     * (even if it was not). Please remember that this feature's configuration\n     * needs to match for transmitting and receiving radios.\n     *\n     * @warning When using the `multicast` parameter to write(), this feature\n     * can be disabled for an individual payload. However, if this feature is\n     * disabled, then the `multicast` parameter will have no effect.\n     *\n     * @note If disabling auto-acknowledgment packets, the ACK payloads\n     * feature is also disabled as this feature is required to send ACK\n     * payloads.\n     *\n     * @see\n     * - write()\n     * - writeFast()\n     * - startFastWrite()\n     * - startWrite()\n     * - writeAckPayload()\n     *\n     * @param enable Whether to enable (true) or disable (false) the\n     * auto-acknowledgment feature for all pipes\n     */\n    void setAutoAck(bool enable);\n\n    /**\n     * Enable or disable the auto-acknowledgement feature for a specific pipe.\n     * This feature is enabled by default for all pipes. Auto-acknowledgement\n     * responds to every received payload with an empty ACK packet. These ACK\n     * packets get sent from the receiving radio back to the transmitting\n     * radio. To attach an ACK payload to a ACK packet, use writeAckPayload().\n     *\n     * Pipe 0 is used for TX operations, which include sending ACK packets. If\n     * using this feature on both TX & RX nodes, then pipe 0 must have this\n     * feature enabled for the RX & TX operations. If this feature is disabled\n     * on a transmitting radio's pipe 0, then the transmitting radio will\n     * always report that the payload was received (even if it was not).\n     * Remember to also enable this feature for any pipe that is openly\n     * listening to a transmitting radio with this feature enabled.\n     *\n     * @warning If this feature is enabled for pipe 0, then the `multicast`\n     * parameter to write() can be used to disable this feature for an\n     * individual payload. However, if this feature is disabled for pipe 0,\n     * then the `multicast` parameter will have no effect.\n     *\n     * @note If disabling auto-acknowledgment packets on pipe 0, the ACK\n     * payloads feature is also disabled as this feature is required on pipe 0\n     * to send ACK payloads.\n     *\n     * @see\n     * - write()\n     * - writeFast()\n     * - startFastWrite()\n     * - startWrite()\n     * - writeAckPayload()\n     * - enableAckPayload()\n     * - disableAckPayload()\n     *\n     * @param pipe Which pipe to configure. This number should be in range\n     * [0, 5].\n     * @param enable Whether to enable (true) or disable (false) the\n     * auto-acknowledgment feature for the specified pipe\n     */\n    void setAutoAck(uint8_t pipe, bool enable);\n\n    /**\n     * Set Power Amplifier (PA) level and Low Noise Amplifier (LNA) state\n     *\n     * @param level The desired @ref PALevel as defined by @ref rf24_pa_dbm_e.\n     * @param lnaEnable Enable or Disable the LNA (Low Noise Amplifier) Gain.\n     * See table for Si24R1 modules below. @p lnaEnable only affects\n     * nRF24L01 modules with an LNA chip.\n     *\n     * | @p level (enum value) | nRF24L01<br>description | Si24R1<br>description when<br> @p lnaEnable = 1 | Si24R1<br>description when<br> @p lnaEnable = 0 |\n     * |:---------------------:|:-------:|:--------:|:-------:|\n     * | @ref RF24_PA_MIN (0)  | -18 dBm |  -6 dBm  | -12 dBm |\n     * | @ref RF24_PA_LOW (1)  | -12 dBm |  -0 dBm  | -4 dBm  |\n     * | @ref RF24_PA_HIGH (2) | -6 dBm  |  3 dBm   | 1 dBm   |\n     * | @ref RF24_PA_MAX (3)  |  0 dBm  |  7 dBm   | 4 dBm   |\n     *\n     * @note The getPALevel() function does not care what was passed @p lnaEnable parameter.\n     */\n    void setPALevel(uint8_t level, bool lnaEnable = 1);\n\n    /**\n     * Fetches the current @ref PALevel.\n     *\n     * @return One of the values defined by @ref rf24_pa_dbm_e.\n     * See tables in @ref rf24_pa_dbm_e or setPALevel()\n     */\n    uint8_t getPALevel(void);\n\n    /**\n     * Returns automatic retransmission count (ARC_CNT)\n     *\n     * Value resets with each new transmission. Allows roughly estimating signal strength.\n     *\n     * @return Returns values from 0 to 15.\n     */\n    uint8_t getARC(void);\n\n    /**\n     * Set the transmission @ref Datarate\n     *\n     * @warning setting @ref RF24_250KBPS will fail for non-plus modules (when\n     * isPVariant() returns false).\n     *\n     * @param speed Specify one of the following values (as defined by\n     * @ref rf24_datarate_e):\n     * | @p speed (enum value) | description  |\n     * |:---------------------:|:------------:|\n     * | @ref RF24_1MBPS (0)   | for 1 Mbps   |\n     * | @ref RF24_2MBPS (1)   | for 2 Mbps   |\n     * | @ref RF24_250KBPS (2) | for 250 kbps |\n     *\n     * @return true if the change was successful\n     */\n    bool setDataRate(rf24_datarate_e speed);\n\n    /**\n     * Fetches the currently configured transmission @ref Datarate\n     *\n     * @return One of the values defined by @ref rf24_datarate_e.\n     * See table in @ref rf24_datarate_e or setDataRate()\n     */\n    rf24_datarate_e getDataRate(void);\n\n    /**\n     * Set the @ref CRCLength (in bits)\n     *\n     * CRC cannot be disabled if auto-ack is enabled\n     * @param length Specify one of the values (as defined by @ref rf24_crclength_e)\n     * | @p length (enum value)     | description                    |\n     * |:--------------------------:|:------------------------------:|\n     * | @ref RF24_CRC_DISABLED (0) | to disable using CRC checksums |\n     * | @ref RF24_CRC_8 (1)        | to use 8-bit checksums         |\n     * | @ref RF24_CRC_16 (2)       | to use 16-bit checksums        |\n     */\n    void setCRCLength(rf24_crclength_e length);\n\n    /**\n     * Get the @ref CRCLength (in bits)\n     *\n     * CRC checking cannot be disabled if auto-ack is enabled\n     * @return One of the values defined by @ref rf24_crclength_e.\n     * See table in @ref rf24_crclength_e or setCRCLength()\n     */\n    rf24_crclength_e getCRCLength(void);\n\n    /**\n     * Disable CRC validation\n     *\n     * @warning CRC cannot be disabled if auto-ack/ESB is enabled.\n     */\n    void disableCRC(void);\n\n    /**\n     * This function is used to configure what events will trigger the Interrupt\n     * Request (IRQ) pin active LOW.\n     * The following events can be configured:\n     * 1. \"data sent\": This does not mean that the data transmitted was\n     * received, only that the attempt to send it was complete.\n     * 2. \"data failed\": This means the data being sent was not received. This\n     * event is only triggered when the auto-ack feature is enabled.\n     * 3. \"data received\": This means that data from a receiving payload has\n     * been loaded into the RX FIFO buffers. Remember that there are only 3\n     * levels available in the RX FIFO buffers.\n     *\n     * By default, all events are configured to trigger the IRQ pin active LOW.\n     * When the IRQ pin is active, use whatHappened() to determine what events\n     * triggered it. Remember that calling whatHappened() also clears these\n     * events' status, and the IRQ pin will then be reset to inactive HIGH.\n     *\n     * The following code configures the IRQ pin to only reflect the \"data received\"\n     * event:\n     * @code\n     * radio.maskIRQ(1, 1, 0);\n     * @endcode\n     *\n     * @param tx_ok  `true` ignores the \"data sent\" event, `false` reflects the\n     * \"data sent\" event on the IRQ pin.\n     * @param tx_fail  `true` ignores the \"data failed\" event, `false` reflects the\n     * \"data failed\" event on the IRQ pin.\n     * @param rx_ready `true` ignores the \"data received\" event, `false` reflects the\n     * \"data received\" event on the IRQ pin.\n     */\n    void maskIRQ(bool tx_ok, bool tx_fail, bool rx_ready);\n\n    /**\n     *\n     * The driver will delay for this duration when stopListening() is called\n     *\n     * When responding to payloads, faster devices like ARM(RPi) are much faster than Arduino:\n     * 1. Arduino sends data to RPi, switches to RX mode\n     * 2. The RPi receives the data, switches to TX mode and sends before the Arduino radio is in RX mode\n     * 3. If AutoACK is disabled, this can be set as low as 0. If AA/ESB enabled, set to 100uS minimum on RPi\n     *\n     * @warning If set to 0, ensure 130uS delay after stopListening() and before any sends\n     */\n    uint32_t txDelay;\n\n    /**\n     *\n     * On all devices but Linux and ATTiny, a small delay is added to the CSN toggling function\n     *\n     * This is intended to minimize the speed of SPI polling due to radio commands\n     *\n     * If using interrupts or timed requests, this can be set to 0 Default:5\n     */\n    uint32_t csDelay;\n\n    /**\n     * Transmission of constant carrier wave with defined frequency and output power\n     *\n     * @param level Output power to use\n     * @param channel The channel to use\n     *\n     * @warning If isPVariant() returns true, then this function takes extra\n     * measures that alter some settings. These settings alterations include:\n     * - setAutoAck() to false (for all pipes)\n     * - setRetries() to retry `0` times with a delay of 250 microseconds\n     * - set the TX address to 5 bytes of `0xFF`\n     * - flush_tx()\n     * - load a 32 byte payload of `0xFF` into the TX FIFO's top level\n     * - disableCRC()\n     */\n    void startConstCarrier(rf24_pa_dbm_e level, uint8_t channel);\n\n    /**\n     * Stop transmission of constant wave and reset PLL and CONT registers\n     *\n     * @warning this function will powerDown() the radio per recommendation of\n     * datasheet.\n     * @note If isPVariant() returns true, please remember to re-configure the radio's settings\n     * @code\n     * // re-establish default settings\n     * setCRCLength(RF24_CRC_16);\n     * setAutoAck(true);\n     * setRetries(5, 15);\n     * @endcode\n     * @see startConstCarrier()\n     */\n    void stopConstCarrier(void);\n\n    /**\n     * @brief Open or close all data pipes.\n     *\n     * This function does not alter the addresses assigned to pipes. It is simply a\n     * convenience function that allows controlling all pipes at once.\n     * @param isEnabled `true` opens all pipes; `false` closes all pipes.\n     */\n    void toggleAllPipes(bool isEnabled);\n\n    /**\n     * @brief configure the RF_SETUP register in 1 transaction\n     * @param level This parameter is the same input as setPALevel()'s `level` parameter.\n     * See @ref rf24_pa_dbm_e enum for accepted values.\n     * @param speed This parameter is the same input as setDataRate()'s `speed` parameter.\n     * See @ref rf24_datarate_e enum for accepted values.\n     * @param lnaEnable This optional parameter is the same as setPALevel()'s `lnaEnable`\n     * optional parameter. Defaults to `true` (meaning LNA feature is enabled) when not specified.\n     */\n    void setRadiation(uint8_t level, rf24_datarate_e speed, bool lnaEnable = true);\n\n    /**@}*/\n    /**\n     * @name Deprecated\n     *\n     *  Methods provided for backwards compatibility.\n     */\n    /**@{*/\n\n    /**\n     * Open a pipe for reading\n     * @deprecated For compatibility with old code only, see newer function\n     * openReadingPipe()\n     *\n     * @note Pipes 1-5 should share the first 32 bits.\n     * Only the least significant byte should be unique, e.g.\n     * @code\n     * openReadingPipe(1, 0xF0F0F0F0AA);\n     * openReadingPipe(2, 0xF0F0F0F066);\n     * @endcode\n     *\n     * @warning\n     * @parblock\n     * Pipe 0 is also used by the writing pipe so should typically be avoided as a reading pipe.\n     * If used, the reading pipe 0 address needs to be restored at every call to startListening().\n     *\n     * See http://maniacalbits.blogspot.com/2013/04/rf24-addressing-nrf24l01-radios-require.html\n     * @endparblock\n     *\n     * @param number Which pipe# to open, 0-5.\n     * @param address The 40-bit address of the pipe to open.\n     */\n    void openReadingPipe(uint8_t number, uint64_t address);\n\n    /**\n     * Open a pipe for writing\n     * @deprecated For compatibility with old code only, see newer function\n     * openWritingPipe()\n     *\n     * Addresses are 40-bit hex values, e.g.:\n     *\n     * @code\n     * openWritingPipe(0xF0F0F0F0F0);\n     * @endcode\n     *\n     * @param address The 40-bit address of the pipe to open.\n     */\n    void openWritingPipe(uint64_t address);\n\n    /**\n     * Determine if an ack payload was received in the most recent call to\n     * write(). The regular available() can also be used.\n     *\n     * @deprecated For compatibility with old code only, see synonymous function available().\n     * Use read() to retrieve the ack payload and getDynamicPayloadSize() to get the ACK payload size.\n     *\n     * @return True if an ack payload is available.\n     */\n    bool isAckPayloadAvailable(void);\n\nprivate:\n    /**@}*/\n    /**\n     * @name Low-level internal interface.\n     *\n     *  Protected methods that address the chip directly.  Regular users cannot\n     *  ever call these.  They are documented for completeness and for developers who\n     *  may want to extend this class.\n     */\n    /**@{*/\n\n    /**\n     * initializing function specific to all constructors\n     * (regardless of constructor parameters)\n     */\n    void _init_obj();\n\n    /**\n     * initialize radio by performing a soft reset.\n     * @warning This function assumes the SPI bus object's begin() method has been\n     * previously called.\n     */\n    bool _init_radio();\n\n    /**\n     * initialize the GPIO pins\n     */\n    bool _init_pins();\n\n    /**\n     * Set chip select pin\n     *\n     * Running SPI bus at PI_CLOCK_DIV2 so we don't waste time transferring data\n     * and best of all, we make use of the radio's FIFO buffers. A lower speed\n     * means we're less likely to effectively leverage our FIFOs and pay a higher\n     * AVR runtime cost as toll.\n     *\n     * @param mode HIGH to take this unit off the SPI bus, LOW to put it on\n     */\n    void csn(bool mode);\n\n    /**\n     * Set chip enable\n     *\n     * @param level HIGH to actively begin transmission or LOW to put in standby.  Please see data sheet\n     * for a much more detailed description of this pin.\n     */\n    void ce(bool level);\n\n    /**\n     * Write a chunk of data to a register\n     *\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param buf Where to get the data\n     * @param len How many bytes of data to transfer\n     * @return Nothing. Older versions of this function returned the status\n     * byte, but that it now saved to a private member on all SPI transactions.\n     */\n    void write_register(uint8_t reg, const uint8_t* buf, uint8_t len);\n\n    /**\n     * Write a single byte to a register\n     *\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param value The new value to write\n     * @return Nothing. Older versions of this function returned the status\n     * byte, but that it now saved to a private member on all SPI transactions.\n     */\n    void write_register(uint8_t reg, uint8_t value);\n\n    /**\n     * Write the transmit payload\n     *\n     * The size of data written is the fixed payload size, see getPayloadSize()\n     *\n     * @param buf Where to get the data\n     * @param len Number of bytes to be sent\n     * @param writeType Specify if individual payload should be acknowledged\n     * @return Nothing. Older versions of this function returned the status\n     * byte, but that it now saved to a private member on all SPI transactions.\n     */\n    void write_payload(const void* buf, uint8_t len, const uint8_t writeType);\n\n    /**\n     * Read the receive payload\n     *\n     * The size of data read is the fixed payload size, see getPayloadSize()\n     *\n     * @param buf Where to put the data\n     * @param len Maximum number of bytes to read\n     * @return Nothing. Older versions of this function returned the status\n     * byte, but that it now saved to a private member on all SPI transactions.\n     */\n    void read_payload(void* buf, uint8_t len);\n\n    /**\n     * Retrieve the current status of the chip\n     *\n     * @return Current value of status register\n     */\n    uint8_t get_status(void);\n\n#if !defined(MINIMAL)\n\n    /**\n     * Decode and print the given status to stdout\n     *\n     * @param status Status value to print\n     *\n     * @warning Does nothing if stdout is not defined.  See fdevopen in stdio.h\n     */\n    void print_status(uint8_t status);\n\n    /**\n     * Decode and print the given 'observe_tx' value to stdout\n     *\n     * @param value The observe_tx value to print\n     *\n     * @warning Does nothing if stdout is not defined.  See fdevopen in stdio.h\n     */\n    void print_observe_tx(uint8_t value);\n\n    /**\n     * Print the name and value of an 8-bit register to stdout\n     *\n     * Optionally it can print some quantity of successive\n     * registers on the same line.  This is useful for printing a group\n     * of related registers on one line.\n     *\n     * @param name Name of the register\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param qty How many successive registers to print\n     */\n    void print_byte_register(const char* name, uint8_t reg, uint8_t qty = 1);\n\n    /**\n     * Print the name and value of a 40-bit address register to stdout\n     *\n     * Optionally it can print some quantity of successive\n     * registers on the same line.  This is useful for printing a group\n     * of related registers on one line.\n     *\n     * @param name Name of the register\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param qty How many successive registers to print\n     */\n    void print_address_register(const char* name, uint8_t reg, uint8_t qty = 1);\n\n    /**\n     * Put the value of a 40-bit address register into a char array\n     *\n     * Optionally it can print some quantity of successive\n     * registers on the same line.  This is useful for printing a group\n     * of related registers on one line.\n     *\n     * @param out_buffer Output buffer, char array\n     * @param reg Which register. Use constants from nRF24L01.h\n     * @param qty How many successive registers to print\n     * @return The total number of characters written to the given buffer.\n     */\n    uint8_t sprintf_address_register(char* out_buffer, uint8_t reg, uint8_t qty = 1);\n#endif\n\n    /**\n     * Turn on or off the special features of the chip\n     *\n     * The chip has certain 'features' which are only available when the 'features'\n     * are enabled.  See the datasheet for details.\n     */\n    void toggle_features(void);\n\n#if defined(FAILURE_HANDLING) || defined(RF24_LINUX)\n\n    void errNotify(void);\n\n#endif\n\n    /**\n     * @brief Manipulate the @ref Datarate and txDelay\n     *\n     * This is a helper function to setRadiation() and setDataRate()\n     * @param speed The desired data rate.\n     */\n    inline uint8_t _data_rate_reg_value(rf24_datarate_e speed);\n\n    /**\n     * @brief Manipulate the @ref PALevel\n     *\n     * This is a helper function to setRadiation() and setPALevel()\n     * @param level The desired @ref PALevel.\n     * @param lnaEnable Toggle the LNA feature.\n     */\n    inline uint8_t _pa_level_reg_value(uint8_t level, bool lnaEnable);\n\n    /**@}*/\n};\n\n/**\n * @example{lineno} examples/GettingStarted/GettingStarted.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/AcknowledgementPayloads/AcknowledgementPayloads.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another\n * with Acknowledgement (ACK) payloads attached to ACK packets.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/ManualAcknowledgements/ManualAcknowledgements.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another\n * with manually transmitted (non-automatic) Acknowledgement (ACK) payloads.\n * This example still uses ACK packets, but they have no payloads. Instead the\n * acknowledging response is sent with `write()`. This tactic allows for more\n * updated acknowledgement payload data, where actual ACK payloads' data are\n * outdated by 1 transmission because they have to loaded before receiving a\n * transmission.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/StreamingData/StreamingData.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of streaming data from 1 nRF24L01 transceiver to another.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/MulticeiverDemo/MulticeiverDemo.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from as many as 6 nRF24L01 transceivers to\n * 1 receiving transceiver. This technique is trademarked by\n * Nordic Semiconductors as \"MultiCeiver\".\n *\n * This example was written to be used on up to 6 devices acting as TX nodes &\n * only 1 device acting as the RX node (that's a maximum of 7 devices).\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/InterruptConfigure/InterruptConfigure.ino\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This example uses Acknowledgement (ACK) payloads attached to ACK packets to\n * demonstrate how the nRF24L01's IRQ (Interrupt Request) pin can be\n * configured to detect when data is received, or when data has transmitted\n * successfully, or when data has failed to transmit.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use the Serial Monitor to change each node's behavior.\n */\n\n/**\n * @example{lineno} examples/old_backups/GettingStarted_HandlingFailures/GettingStarted_HandlingFailures.ino\n * Written by [TMRh20](http://github.com/TMRh20) in 2019\n *\n * This example demonstrates the basic getting started functionality, but with\n * failure handling for the radio chip. Addresses random radio failures etc,\n * potentially due to loose wiring on breadboards etc.\n */\n\n/**\n * @example{lineno} examples/old_backups/TransferTimeouts/TransferTimeouts.ino\n * Written by [TMRh20](https://github.com/TMRh20)\n *\n * This example demonstrates the use of and extended timeout period and\n * auto-retries/auto-reUse to increase reliability in noisy or low signal scenarios.\n *\n * Write this sketch to two different nodes.  Put one of the nodes into 'transmit'\n * mode by connecting with the serial monitor and sending a 'T'.  The data <br>\n * transfer will begin, with the receiver displaying the payload count and the\n * data transfer rate.\n */\n\n/**\n * @example{lineno} examples/old_backups/pingpair_irq/pingpair_irq.ino\n * Updated by [TMRh20](https://github.com/TMRh20)\n *\n * This is an example of how to user interrupts to interact with the radio, and a demonstration\n * of how to use them to sleep when receiving, and not miss any payloads.<br>\n * The pingpair_sleepy example expands on sleep functionality with a timed sleep option for the transmitter.\n * Sleep functionality is built directly into my fork of the RF24Network library<br>\n */\n\n/**\n * @example{lineno} examples/old_backups/pingpair_sleepy/pingpair_sleepy.ino\n * Updated by [TMRh20](https://github.com/TMRh20)\n *\n * This is an example of how to use the RF24 class to create a battery-\n * efficient system.  It is just like the GettingStarted_CallResponse example, but the<br>\n * ping node powers down the radio and sleeps the MCU after every\n * ping/pong cycle, and the receiver sleeps between payloads. <br>\n */\n\n/**\n * @example{lineno} examples/rf24_ATTiny/rf24ping85/rf24ping85.ino\n * <b>2014 Contribution by [tong67](https://github.com/tong67)</b><br>\n * Updated 2020 by [2bndy5](http://github.com/2bndy5) for the\n * [SpenceKonde ATTinyCore](https://github.com/SpenceKonde/ATTinyCore)<br>\n * The RF24 library uses the [ATTinyCore by\n * SpenceKonde](https://github.com/SpenceKonde/ATTinyCore)\n *\n * This sketch is a duplicate of the ManualAcknowledgements.ino example\n * (without all the Serial input/output code), and it demonstrates\n * a ATTiny25/45/85 or ATTiny24/44/84 driving the nRF24L01 transceiver using\n * the RF24 class to communicate with another node.\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another\n * with manually transmitted (non-automatic) Acknowledgement (ACK) payloads.\n * This example still uses ACK packets, but they have no payloads. Instead the\n * acknowledging response is sent with `write()`. This tactic allows for more\n * updated acknowledgement payload data, where actual ACK payloads' data are\n * outdated by 1 transmission because they have to loaded before receiving a\n * transmission.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n */\n\n/**\n * @example{lineno} examples/rf24_ATTiny/timingSearch3pin/timingSearch3pin.ino\n * <b>2014 Contribution by [tong67](https://github.com/tong67)</b><br>\n * Updated 2020 by [2bndy5](http://github.com/2bndy5) for the\n * [SpenceKonde ATTinyCore](https://github.com/SpenceKonde/ATTinyCore)<br>\n * The RF24 library uses the [ATTinyCore by\n * SpenceKonde](https://github.com/SpenceKonde/ATTinyCore)\n *\n * This sketch can be used to determine the best settle time values to use for\n * RF24::csDelay in RF24::csn() (private function).\n * @see RF24::csDelay\n *\n * The settle time values used here are 100/20. However, these values depend\n * on the actual used RC combination and voltage drop by LED. The\n * intermediate results are written to TX (PB3, pin 2 -- using Serial).\n *\n * For schematic details, see introductory comment block in the rf24ping85.ino sketch.\n */\n\n/**\n * @example{lineno} examples/old_backups/pingpair_dyn/pingpair_dyn.ino\n *\n * This is an example of how to use payloads of a varying (dynamic) size on Arduino.\n */\n\n/**\n * @example{lineno} examples_linux/getting_started.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 getting_started.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/acknowledgement_payloads.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi to\n * transmit and retrieve custom automatic acknowledgment payloads.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 acknowledgement_payloads.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/manual_acknowledgements.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi to\n * transmit and respond with acknowledgment (ACK) transmissions. Notice that\n * the auto-ack feature is enabled, but this example doesn't use automatic ACK\n * payloads because automatic ACK payloads' data will always be outdated by 1\n * transmission. Instead, this example uses a call and response paradigm.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 manual_acknowledgements.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/streaming_data.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi for\n * streaming multiple payloads.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 streaming_data.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/interrupt_configure.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi to\n * detecting (and verifying) the IRQ (interrupt) pin on the nRF24L01.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 interrupt_configure.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/multiceiver_demo.py\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * This is a simple example of using the RF24 class on a Raspberry Pi for\n * using 1 nRF24L01 to receive data from up to 6 other transceivers. This\n * technique is called \"multiceiver\" in the datasheet.\n *\n * Remember to install the [Python wrapper](python_wrapper.md), then\n * navigate to the \"RF24/examples_linux\" folder.\n * <br>To run this example, enter\n * @code{.sh}python3 multiceiver_demo.py @endcode and follow the prompts.\n *\n * @note this example requires python v3.7 or newer because it measures\n * transmission time with `time.monotonic_ns()`.\n */\n\n/**\n * @example{lineno} examples_linux/scanner.cpp\n *\n * Example to detect interference on the various channels available.\n * This is a good diagnostic tool to check whether you're picking a\n * good channel for your application.\n *\n * Inspired by cpixip.\n * See http://arduino.cc/forum/index.php/topic,54795.0.html\n *\n * Use ctrl+C to exit\n */\n\n/**\n * @example{lineno} examples/scanner/scanner.ino\n *\n * Example to detect interference on the various channels available.\n * This is a good diagnostic tool to check whether you're picking a\n * good channel for your application.\n *\n * Inspired by cpixip.\n * See http://arduino.cc/forum/index.php/topic,54795.0.html\n */\n\n/**\n * @example{lineno} examples_linux/gettingstarted.cpp\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another.\n *\n * This example was written  * This example was written to be used on up to 6 devices acting as TX nodes &\n * only 1 device acting as the RX node (that's a maximum of 7 devices).\n acting as \"nodes\".\n * Use `ctrl+c` to quit at any time.\n */\n\n/**\n * @example{lineno} examples_linux/acknowledgementPayloads.cpp\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another\n * with Acknowledgement (ACK) payloads attached to ACK packets.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use `ctrl+c` to quit at any time.\n */\n\n/**\n * @example{lineno} examples_linux/manualAcknowledgements.cpp\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another\n * with manually transmitted (non-automatic) Acknowledgement (ACK) payloads.\n * This example still uses ACK packets, but they have no payloads. Instead the\n * acknowledging response is sent with `write()`. This tactic allows for more\n * updated acknowledgement payload data, where actual ACK payloads' data are\n * outdated by 1 transmission because they have to loaded before receiving a\n * transmission.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use `ctrl+c` to quit at any time.\n */\n\n/**\n * @example{lineno} examples_linux/streamingData.cpp\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from 1 nRF24L01 transceiver to another.\n *\n * This example was written to be used on 2 devices acting as \"nodes\".\n * Use `ctrl+c` to quit at any time.\n */\n\n/**\n * @example{lineno} examples_linux/multiceiverDemo.cpp\n * Written by [2bndy5](http://github.com/2bndy5) in 2020\n *\n * A simple example of sending data from as many as 6 nRF24L01 transceivers to\n * 1 receiving transceiver. This technique is trademarked by\n * Nordic Semiconductors as \"MultiCeiver\".\n *\n * This example was written to be used on up to 6 devices acting as TX nodes &\n * only 1 device acting as the RX node (that's a maximum of 7 devices).\n * Use `ctrl+c` to quit at any time.\n */\n\n#endif // RF24_H_\n"
        },
        {
          "name": "RF24_config.h",
          "type": "blob",
          "size": 8.888671875,
          "content": "\n/*\n Copyright (C)\n    2011            J. Coliz <maniacbug@ymail.com>\n    2015-2019       TMRh20\n    2015            spaniakos <spaniakos@gmail.com>\n    2015            nerdralph\n    2015            zador-blood-stained\n    2016            akatran\n    2017-2019       Avamander <avamander@gmail.com>\n    2019            IkpeohaGodson\n    2021            2bndy5\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n*/\n\n#ifndef RF24_CONFIG_H_\n#define RF24_CONFIG_H_\n\n/*** USER DEFINES:    ***/\n#define FAILURE_HANDLING\n//#define RF24_DEBUG\n//#define MINIMAL\n//#define SPI_UART    // Requires library from https://github.com/TMRh20/Sketches/tree/master/SPI_UART\n//#define SOFTSPI     // Requires library from https://github.com/greiman/DigitalIO\n\n/**\n * User access to internally used delay time (in microseconds) during RF24::powerUp()\n * @warning This default value compensates for all supported hardware. Only adjust this if you\n * know your radio's hardware is, in fact, genuine and reliable.\n */\n#if !defined(RF24_POWERUP_DELAY)\n    #define RF24_POWERUP_DELAY 5000\n#endif\n\n/**********************/\n#define rf24_max(a, b) ((a) > (b) ? (a) : (b))\n#define rf24_min(a, b) ((a) < (b) ? (a) : (b))\n\n/** @brief The default SPI speed (in Hz) */\n#ifndef RF24_SPI_SPEED\n    #define RF24_SPI_SPEED 10000000\n#endif\n\n//ATXMega\n#if defined(__AVR_ATxmega64D3__) || defined(__AVR_ATxmega128D3__) || defined(__AVR_ATxmega192D3__) || defined(__AVR_ATxmega256D3__) || defined(__AVR_ATxmega384D3__)\n    // In order to be available both in Windows and Linux this should take presence here.\n    #define XMEGA\n    #define XMEGA_D3\n    #include \"utility/ATXMegaD3/RF24_arch_config.h\"\n\n// RaspberryPi rp2xxx-based devices (e.g. RPi Pico board)\n#elif defined(PICO_BUILD) && !defined(ARDUINO)\n    #include \"utility/rp2/RF24_arch_config.h\"\n    #define sprintf_P sprintf\n\n#elif (!defined(ARDUINO)) // Any non-arduino device is handled via configure/Makefile\n    // The configure script detects device and copies the correct includes.h file to /utility/includes.h\n    // This behavior can be overridden by calling configure with respective parameters\n    // The includes.h file defines either RF24_RPi, MRAA, LITTLEWIRE or RF24_SPIDEV and includes the correct RF24_arch_config.h file\n    #include \"utility/includes.h\"\n\n    #ifndef sprintf_P\n        #define sprintf_P sprintf\n    #endif // sprintf_P\n\n//ATTiny\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__) || defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__) || defined(__AVR_ATtiny2313__) || defined(__AVR_ATtiny4313__) || defined(__AVR_ATtiny861__) || defined(__AVR_ATtinyX5__) || defined(__AVR_ATtinyX4__) || defined(__AVR_ATtinyX313__) || defined(__AVR_ATtinyX61__)\n    #define RF24_TINY\n    #include \"utility/ATTiny/RF24_arch_config.h\"\n\n#elif defined(LITTLEWIRE) //LittleWire\n    #include \"utility/LittleWire/RF24_arch_config.h\"\n\n#elif defined(TEENSYDUINO) //Teensy\n    #include \"utility/Teensy/RF24_arch_config.h\"\n\n#else //Everything else\n    #include <Arduino.h>\n\n    #ifdef NUM_DIGITAL_PINS\n        #if NUM_DIGITAL_PINS < 255\ntypedef uint8_t rf24_gpio_pin_t;\n            #define RF24_PIN_INVALID 0xFF\n        #else\ntypedef uint16_t rf24_gpio_pin_t;\n            #define RF24_PIN_INVALID 0xFFFF\n        #endif\n    #else\ntypedef uint16_t rf24_gpio_pin_t;\n        #define RF24_PIN_INVALID 0xFFFF\n    #endif\n\n    #if defined(ARDUINO) && !defined(__arm__) && !defined(__ARDUINO_X86__)\n        #if defined SPI_UART\n            #include <SPI_UART.h>\n            #define _SPI uspi\n        #elif defined(SOFTSPI)\n            // change these pins to your liking\n            //\n            #ifndef SOFT_SPI_MISO_PIN\n                #define SOFT_SPI_MISO_PIN 9\n            #endif // SOFT_SPI_MISO_PIN\n\n            #ifndef SOFT_SPI_MOSI_PIN\n                #define SOFT_SPI_MOSI_PIN 8\n            #endif // SOFT_SPI_MOSI_PIN\n\n            #ifndef SOFT_SPI_SCK_PIN\n                #define SOFT_SPI_SCK_PIN 7\n            #endif // SOFT_SPI_SCK_PIN\n\nconst uint8_t SPI_MODE = 0;\n            #define _SPI spi\n\n        #elif defined(ARDUINO_SAM_DUE)\n            #include <SPI.h>\n            #define _SPI SPI\n\n        #else // !defined (SPI_UART) && !defined (SOFTSPI)\n            #include <SPI.h>\n            #define _SPI SPIClass\n            #define RF24_SPI_PTR\n        #endif // !defined (SPI_UART) && !defined (SOFTSPI)\n\n    #else // !defined(ARDUINO) || defined (__arm__) || defined (__ARDUINO_X86__)\n        // Define _BV for non-Arduino platforms and for Arduino DUE\n        #include <stdint.h>\n        #include <stdio.h>\n        #include <string.h>\n\n        #if defined(__arm__) || defined(__ARDUINO_X86__)\n            #if defined(__arm__) && defined(SPI_UART)\n                #include <SPI_UART.h>\n                #define _SPI uspi\n\n            #else // !defined (__arm__) || !defined (SPI_UART)\n                #include <SPI.h>\n                #define _SPI SPIClass\n                #define RF24_SPI_PTR\n\n            #endif // !defined (__arm__) || !defined (SPI_UART)\n        #elif !defined(__arm__) && !defined(__ARDUINO_X86__)\n// fallback to unofficially supported Hardware (courtesy of ManiacBug)\nextern HardwareSPI SPI;\n            #define _SPI HardwareSPI\n            #define RF24_SPI_PTR\n\n        #endif // !defined(__arm__) && !defined (__ARDUINO_X86__)\n\n        #ifndef _BV\n            #define _BV(x) (1 << (x))\n        #endif\n    #endif // defined (ARDUINO) && !defined (__arm__) && !defined (__ARDUINO_X86__)\n\n    #ifdef RF24_DEBUG\n        #define IF_RF24_DEBUG(x) ({ x; })\n    #else\n        #define IF_RF24_DEBUG(x)\n        #if defined(RF24_TINY)\n            #define printf_P(...)\n        #endif // defined(RF24_TINY)\n\n    #endif // RF24_DEBUG\n\n    #if defined(__ARDUINO_X86__)\n        #define printf_P printf\n        #define _BV(bit) (1 << (bit))\n\n    #endif // defined (__ARDUINO_X86__)\n\n    // Progmem is Arduino-specific\n    #if defined(ARDUINO_ARCH_ESP8266) || defined(ESP32) || (defined(ARDUINO_ARCH_RP2040) && !defined(ARDUINO_ARCH_MBED))\n        #include <pgmspace.h>\n        #define PRIPSTR \"%s\"\n        #ifndef pgm_read_ptr\n            #define pgm_read_ptr(p) (*(void* const*)(p))\n        #endif\n        // Serial.printf() is no longer defined in the unifying Arduino/ArduinoCore-API repo\n        // Serial.printf() is defined if using the arduino-pico/esp32/8266 repo\n        #if defined(ARDUINO_ARCH_ESP32) // do not `undef` when using the espressif SDK only\n            #undef printf_P             // needed for ESP32 core\n        #endif\n        #define printf_P Serial.printf\n    #elif defined(ARDUINO) && !defined(ESP_PLATFORM) && !defined(__arm__) && !defined(__ARDUINO_X86__) || defined(XMEGA)\n        #include <avr/pgmspace.h>\n        #define PRIPSTR \"%S\"\n\n    #else                     // !defined (ARDUINO) || defined (ESP_PLATFORM) || defined (__arm__) || defined (__ARDUINO_X86__) && !defined (XMEGA)\n        #if !defined(ARDUINO) // This doesn't work on Arduino DUE\ntypedef char const char;\n        #else                 // Fill in pgm_read_byte that is used\n            #if defined(ARDUINO_ARCH_AVR) || defined(ARDUINO_ARCH_SAMD) || defined(ARDUINO_SAM_DUE)\n                #include <avr/pgmspace.h> // added to ArduinoCore-sam (Due core) in 2013\n            #endif\n\n            // Since the official arduino/ArduinoCore-samd repo switched to a unified API in 2016,\n            // Serial.printf() is no longer defined in the unifying Arduino/ArduinoCore-API repo\n            #if defined(ARDUINO_ARCH_SAMD) && defined(ARDUINO_SAMD_ADAFRUIT)\n                // it is defined if using the adafruit/ArduinoCore-samd repo\n                #define printf_P Serial.printf\n            #endif // defined (ARDUINO_ARCH_SAMD)\n\n            #ifndef pgm_read_byte\n                #define pgm_read_byte(addr) (*(const unsigned char*)(addr))\n            #endif\n        #endif // !defined (ARDUINO)\n\n        #ifndef prog_uint16_t\ntypedef uint16_t prog_uint16_t;\n        #endif\n        #ifndef PSTR\n            #define PSTR(x) (x)\n        #endif\n        #ifndef printf_P\n            #define printf_P printf\n        #endif\n        #ifndef strlen_P\n            #define strlen_P strlen\n        #endif\n        #ifndef PROGMEM\n            #define PROGMEM\n        #endif\n        #ifndef pgm_read_word\n            #define pgm_read_word(p) (*(const unsigned short*)(p))\n        #endif\n        #if !defined pgm_read_ptr || defined ARDUINO_ARCH_MBED\n            #define pgm_read_ptr(p) (*(void* const*)(p))\n        #endif\n        #ifndef PRIPSTR\n            #define PRIPSTR \"%s\"\n        #endif\n\n    #endif // !defined (ARDUINO) || defined (ESP_PLATFORM) || defined (__arm__) || defined (__ARDUINO_X86__) && !defined (XMEGA)\n\n#endif //Everything else\n\n#if defined(SPI_HAS_TRANSACTION) && !defined(SPI_UART) && !defined(SOFTSPI)\n    #define RF24_SPI_TRANSACTIONS\n#endif // defined (SPI_HAS_TRANSACTION) && !defined (SPI_UART) && !defined (SOFTSPI)\n\n#endif // RF24_CONFIG_H_\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 13.2998046875,
          "content": "#!/bin/bash\n\nCROSS_CC=arm-linux-gnueabihf-gcc\nCROSS_CXX=arm-linux-gnueabihf-g++\n\nfunction help {\ncat <<EOF\nconfigure script for RF24 library.\nOptions:\n\nHelp:\n    -h, --help                  print this message\n\nDriver options:\n    --driver=[wiringPi|SPIDEV|MRAA|RPi|LittleWire]\n                                Driver for RF24 library. [configure autodetected]\n\nBuilding options:\n    --os=[LINUX|DARWIN]         Operating system. [configure autodetected]\n    --soc=[BCM2835|BCM2836|AM33XX|A10|A13|A20|H3]\n                                SoC type to be used. [configure autodetected]\n    --cpu-flags=<CFLAGS>        CPU defining/optimizing flags to be used. [configure autodetected]\n    --extra-cflags=<CFLAGS>     Extra C flags passed to C/C++ compilation. []\n    --extra-ldflags=<LDFLAGS>   Extra C flags passed to linking. []\n    --libname=<LIBNAME>         Library name. [rf24]\n    --c_compiler=<CC>           C compiler. [arm-linux-gnueabihf-gcc][gcc]\n    --cxx_compiler=<CXX>        C++ compiler [arm-linux-gnueabihf-g++][g++]\n    --no-clean                  Don't clean previous build artifacts\n\nInstallation options:\n    --prefix=<PREFIX>           Installation prefix path. [/usr/local]\n    --lib-dir=<DIR>             Library target installation directory. [PREFIX/lib]\n    --header-dir=<DIR>          Header files target installation directory. [PREFIX/include]\n    --examples-dir=<DIR>        Example files installation directory. [PREFIX/bin]\n    --ldconfig=<LDCONFIG>       Ldconfig binary. Can be set to '' to skip ldconfig step. [ldconfig]\n\nCross-compilation options:\n    --remote-host=<REMOTE_HOST> Remote hostname for installation.\n    --remote-user=<REMOTE_USER> Remote username for installation. [current user]\n    --remote-port=<REMOTE_PORT> Ssh port of remote machine. [22]\n    --remote=<USER@HOST>        Remote ssh host identification for installation [REMOTE_USER@REMOTE_HOST]\n    --remote-prefix=<RPREFIX>   Remote host installation prefix path. [/usr/local]\n    --remote-lib-dir=<DIR>      Remote library target installation directory [RPREFIX/lib]\n    --remote-header-dir=<DIR>   Remote header files target installation directory. [RPREFIX/include]\n    --remote-ldconfig=<RLDCON>  Remote ldconfig binary filename. Can be set to '' to skip ldconfig call. [ldconfig]\n    --remote-examples-dir=<DIR> Example files remote installation directory. Default: [REMOTE_PREFIX/bin]\n\nEOF\n}\n\nfunction execute_check {\n    if [ \"${REMOTE}\" ]; then\n        ssh -o 'PasswordAuthentication=no' -o 'PreferredAuthentications=publickey' -o 'ConnectTimeout=30' -o 'BatchMode=yes' -o 'StrictHostKeyChecking=no' -p ${REMOTE_PORT} ${REMOTE} $1\n    else\n        eval $1\n    fi\n}\n\nfunction die {\n    echo \"[ERROR] $1\"\n    exit $2\n}\n\nfunction detect_machine {\n    local cpu=$(execute_check \"uname -m 2>/dev/null\")\n    local machine=$(execute_check \"cat -v /sys/firmware/devicetree/base/model 2>/dev/null\")\n    local hardware=$(execute_check \"grep sunxi_platform /sys/class/sunxi_info/sys_info 2>/dev/null | sed 's/^.*: \\(.*\\)$/\\1/'\")\n    if [ -z \"$hardware\" ]; then\n        local hardware=$(execute_check \"grep Hardware /proc/cpuinfo 2>/dev/null | sed 's/^.*: \\(.*\\)$/\\1/'\")\n    fi\n    local soc=\"unknown\"\n    local tp=\"unknown\"\n\n    if [ -z \"$cpu\" ]; then\n        cpu=\"unknown\"\n    fi\n\n    case $hardware in\n    BCM2708|BCM2835)\n        soc=\"BCM2835\"\n        if [[ $machine == \"Raspberry\"* ]]; then\n            tp=\"RPi\"\n        fi\n        ;;\n    BCM2709)\n        soc=\"BCM2836\"\n        if [[ $machine == \"Raspberry\"* ]]; then\n            tp=\"RPi2\"\n        fi\n        ;;\n    sun4i|Sun4iw1p1)\n        soc=\"A10\"\n        ;;\n    sun5i|Sun4iw2p1)\n        soc=\"A13\"\n        ;;\n    Sun4iw2p2)\n        soc=\"A12\"\n        ;;\n    Sun4iw2p3)\n        soc=\"A10s\"\n        ;;\n    sun6i|Sun8iw1p1)\n        soc=\"A31\"\n        ;;\n    Sun8iw1p2)\n        soc=\"A31s\"\n        ;;\n    sun7i|Sun8iw2p1)\n        soc=\"A20\"\n        if [[ $machine == \"Banana Pi\"* ]]; then\n            tp=\"BananaPi\"\n        elif [[ $machine == \"Banana Pro\"* ]]; then\n            tp=\"BananaPro\"\n        fi\n        ;;\n    sun8i|Sun8iw7p1)\n        soc=\"H3\"\n        ;;\n    Sun8iw3p1)\n        soc=\"A23\"\n        ;;\n    Sun8iw5p1)\n        soc=\"A33\"\n        ;;\n    Sun8iw6p1)\n        soc=\"A83t\"\n        ;;\n    sun9i|Sun9iw1p1)\n        soc=\"A80\"\n        ;;\n    Sun9iw1p2)\n        soc=\"A80t\"\n        ;;\n    sun50i|Sun50iw1p1)\n        soc=\"A64\"\n        ;;\n    'Generic AM33XX'*)\n        soc=\"AM33XX\"\n        ;;\n    *)\n        soc=\"unknown\"\n    esac\n    echo \"${soc} ${tp} ${cpu}\"\n}\n\nfunction gcc_cpu_flags {\n    local soc=$1\n    case $soc in\n    BCM2835)\n        flags=\"-marm -march=armv6zk -mtune=arm1176jzf-s -mfpu=vfp -mfloat-abi=hard\"\n        ;;\n    BCM2836)\n        flags=\"-march=armv7-a -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard\"\n        ;;\n    AM33XX)\n        flags=\"-march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=hard\"\n        ;;\n    A10)\n        flags=\"-march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=hard\"\n        ;;\n    A13)\n        flags=\"-march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=hard\"\n        ;;\n    A20)\n        flags=\"-march=armv7-a -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard\"\n        ;;\n    H3)\n        flags=\"-march=armv8-a -mtune=cortex-a53 -mfpu=neon-vfpv4 -mfloat-abi=hard\"\n        ;;\n    *)\n        flags=\"\"\n    esac\n    echo ${flags}\n}\n\n# no longer used. This should be removed when resolving\n# https://github.com/nRF24/RF24/issues/971\nfunction detect_driver {\n    if [[ $(execute_check \"cat /proc/cpuinfo | grep Hardware | grep 'BCM2708\\|BCM2709\\|BCM2835'\") ]]; then\n        result=RPi\n    elif [[ $(execute_check 'ls /dev/spidev* 2>/dev/null') ]]; then\n        result=SPIDEV\n    elif [[ $(execute_check \"file /usr/lib/libwiringPi.so*\") ]]; then\n        result=wiringPi\n    elif [[ $(execute_check \"${REMOTE_LDCONFIG} -p | grep libmraa\") ]]; then\n        result=MRAA\n    elif [[ $(execute_check \"${REMOTE_LDCONFIG} -p | grep liblittlewire-spi\") ]]; then\n        result=LittleWire\n    elif [[ -f \"/usr/lib/libpigpio.so\" || -f \"/usr/local/lib/libpigpio.so\" || -f \"/usr/arm-linux-gnueabihf/lib/libpigpio.so\" ]]; then\n        result=pigpio\n    else\n        result=\"\"\n    fi\n    echo $result\n}\n\nfunction gen_symlink_names {\n    base_name=\"$1\"\n    version=\"$2\"\n\n    IFS='.' read -r -a ver <<< \"$version\"\n    versions=\"\"\n    for index in \"${!ver[@]}\" ; do\n        verstr=\"\"\n        for ind in `seq 0 $(expr $index - 1)` ; do\n            verstr=\"${verstr}.${ver[$ind]}\"\n        done\n        versions=\"${base_name}${verstr} $versions\"\n    done\n    echo ${versions}\n}\n\nparams=\"OS SOC DRIVER CPUFLAGS CFLAGS PREFIX REMOTE_PREFIX LIB LIBNAME LIB_VERSION LIBSYMLINKS LIBDEPRECATE CC CXX LIB_DIR REMOTE_LIB_DIR HEADER_DIR REMOTE_HEADER_DIR DRIVER_DIR ARCH_DIR REMOTE REMOTE_HOST REMOTE_USER REMOTE_PORT SHARED_LINKER_FLAGS SHARED_LINKER_LIBS LDCONFIG REMOTE_LDCONFIG EXAMPLES_DIR REMOTE_EXAMPLES_DIR\"\n\nfor opt do\n    if [ \"$opt\" = \"-h\" ] || [ \"$opt\" = \"--help\" ]; then\n        help\n        exit 0\n    fi\n    optarg=\"${opt#*=}\"\n    case \"$opt\" in\n    --os=*)\n        OS=\"$optarg\"\n        ;;\n    --soc=*)\n        SOC=\"$optarg\"\n        ;;\n    --cpu-flags=*)\n        CPUFLAGS=\"$optarg\"\n        ;;\n    --extra-cflags=*)\n        CFLAGS=\"$optarg\"\n        ;;\n    --extra-ldflags=*)\n        LDFLAGS=\"$optarg\"\n        ;;\n    --libname=*)\n        LIB=\"$optarg\"\n        ;;\n    --c_compiler=*)\n        CC=\"$optarg\"\n        ;;\n    --cxx_compiler=*)\n        CXX=\"$optarg\"\n        ;;\n    --no-clean*)\n        NO_CLEAN=\"1\"\n        ;;\n    --prefix=*)\n        PREFIX=\"$optarg\"\n        ;;\n    --lib-dir=*)\n        LIB_DIR=\"$optarg\"\n        ;;\n    --header-dir=*)\n        HEADER_DIR=\"$optarg\"\n        ;;\n    --examples-dir=*)\n        EXAMPLES_DIR=\"$optarg\"\n        ;;\n    --ldconfig=*)\n        LDCONFIG=\"$optarg\"\n        ;;\n    --driver=*)\n        DRIVER=\"$optarg\"\n        ;;\n    --remote-host=*)\n        REMOTE_HOST=\"$optarg\"\n        ;;\n    --remote-user=*)\n        REMOTE_USER=\"$optarg\"\n        ;;\n    --remote-port=*)\n        REMOTE_PORT=\"$optarg\"\n        ;;\n    --remote=*)\n        REMOTE=\"$optarg\"\n        ;;\n    --remote-prefix=*)\n        REMOTE_PREFIX=\"$optarg\"\n        ;;\n    --remote-lib-dir=*)\n        REMOTE_LIB_DIR=\"$optarg\"\n        ;;\n    --remote-header-dir=*)\n        REMOTE_HEADER_DIR=\"$optarg\"\n        ;;\n    --remote-ldconfig=*)\n        REMOTE_LDCONFIG=\"$optarg\"\n        ;;\n    --remote-examples-dir=*)\n        REMOTE_EXAMPLES_DIR=\"$optarg\"\n        ;;\n    *)\n        echo \"[WARNING] Unknown option detected:$opt, ignored\"\n        ;;\n    esac\ndone\n\n#*******************************************\n# remote machine verification\nif [ \"${REMOTE_HOST}\" ]; then\n    if [ \"${REMOTE_USER}\" ]; then\n        REMOTE=${REMOTE_USER}@${REMOTE_HOST}\n    else\n        REMOTE=${REMOTE_HOST}\n    fi\nfi\nif [ \"${REMOTE}\" ]; then\n    echo \"[SECTION] Checking remote host.\"\n    if [ -z \"${REMOTE_HOST}\" ]; then\n        REMOTE_HOST=${REMOTE/*@/}\n    fi\n    if [ -z \"${REMOTE_PORT}\" ]; then\n        REMOTE_PORT=22\n    fi\n    if [ \"$(nmap ${REMOTE_HOST} -Pn  --host-timeout 30s -p ${REMOTE_PORT} 2>/dev/null | grep open)\" ]; then\n        echo \"  [OK] ssh daemon on ${REMOTE_HOST} port ${REMOTE_PORT} seems to be listening.\"\n    else\n        echo \"  [WARNING] ssh on ${REMOTE_HOST} port ${REMOTE_PORT} seems not to be listening or nmap not installed.\"\n    fi\n    if [[ \"$(execute_check 'echo ok 2>/dev/null' 2>/dev/null)\" ]]; then\n        echo \"  [OK] Remote machine ssh passwordless login configured fine.\"\n    else\n        die \"Remote machine ssh and/or passwordless login check failed.\" 4\n    fi\n    if [[ $(execute_check \"sudo echo ok 2>/dev/null\") ]]; then\n        echo \"  [OK] Remote machine sudo configured fine.\"\n    else\n        die \"Remote machine sudo test failed.\" 5\n    fi\nfi\n\nif [ -z \"${CC}\" ]; then\n    echo \"[SECTION] Detecting arm compilation environment.\"\n    if [[ $(command -v ${CROSS_CC} 2>/dev/null) ]]; then\n        echo \"  [OK] ${CROSS_CC} detected.\"\n        CC=${CROSS_CC}\n        CROSS_SYSROOT=\"$(${CC} --print-sysroot)\"\n        if [ \"${CROSS_SYSROOT}\" = \"/\" ]; then\n            CROSS_SYSROOT=\"\"\n        fi\n    else\n        echo \"  [INFO] ${CROSS_CC} not found.\"\n    fi\n    if [[ $(command -v ${CROSS_CXX} 2>/dev/null) ]]; then\n        echo \"  [OK] ${CROSS_CXX} detected.\"\n        CXX=${CROSS_CXX}\n    else\n        echo \"  [INFO] ${CROSS_CXX} not found.\"\n    fi\nfi\n\nif [ \"${CROSS_SYSROOT}\" ]; then\n    PREFIX=\"${CROSS_SYSROOT}/usr/local\"\nfi\n\nPREFIX=${PREFIX:-/usr/local}\nREMOTE_PREFIX=${REMOTE_PREFIX:-/usr/local}\nLIB_DIR=${LIB_DIR:-${PREFIX}/lib}\nREMOTE_LIB_DIR=${REMOTE_LIB_DIR:-${REMOTE_PREFIX}/lib}\nHEADER_DIR=${HEADER_DIR:-${PREFIX}/include/RF24}\nREMOTE_HEADER_DIR=${REMOTE_HEADER_DIR:-${REMOTE_PREFIX}/include/RF24}\nEXAMPLES_DIR=${EXAMPLES_DIR:-${PREFIX}/bin}\nREMOTE_EXAMPLES_DIR=${REMOTE_EXAMPLES_DIR:-${REMOTE_PREFIX}/bin}\nLDCONFIG=${LDCONFIG-ldconfig}\nREMOTE_LDCONFIG=${REMOTE_LDCONFIG-/sbin/ldconfig}\nLIB=${LIB:-rf24}\nLIB_VERSION=${LIB_VERSION:-$(awk -F \"=\" '/version/ {print $2}' library.properties)}\nLIB_DEPRECATE_NAME=${LIB_DEPRECATE_NAME:-\"rf24-bcm\"}\nLIB_DEPRECATE_VERSION=${LIB_DEPRECATE_VERSION:-\"\"}\nCC=${CC:-gcc}\nCXX=${CXX:-g++}\nARCH_DIR=${ARCH_DIR:-utility}\n\n\nif [ -z \"${SOC}\" ]; then\n    echo \"[SECTION] Detecting target machine.\"\n    info=($(detect_machine))\n    SOC=${info[0]}\n    TYPE=${info[1]}\n    CPU=${info[2]}\n    echo \"[OK] machine detected: SoC=${SOC}, Type=${TYPE}, CPU=${CPU}.\"\nfi\n\nif [ -z \"${CPUFLAGS}\" ]; then\n    CPUFLAGS=$(gcc_cpu_flags $SOC)\nfi\n\n\n#*******************************************\n# DRIVER detection\nif [ -z \"${DRIVER}\" ]; then\n    echo \"[SECTION] Detecting DRIVER\"\n    # DRIVER=$(detect_driver)\n    DRIVER=SPIDEV\n    if [ -z \"${DRIVER}\" ]; then\n        die \"No supported driver detected. Run configure with --driver=<driver> to set a driver explicitly.\" 1\n    fi\n    echo \"  [OK] DRIVER detected:${DRIVER}.\"\nfi\n\ncase ${DRIVER} in\nwiringPi)\n    SHARED_LINKER_LIBS+=\" -lwiringPi\"\n    CFLAGS+=\" -lwiringPi\"\n    ;;\nSPIDEV)\n    ;;\nRPi)\n    ;;\nMRAA)\n    SHARED_LINKER_LIBS+=\" -lmraa\"\n    ;;\nLittleWire)\n    SHARED_LINKER_LIBS+=\" -llittlewire-spi\"\n    ;;\npigpio)\n    SHARED_LINKER_LIBS+=\" -lpigpio\"\n    ;;\n*)\n    die \"Unsupported DRIVER: ${DRIVER}.\" 2\n    ;;\nesac\n\n#*******************************************\n# OS detection\nif [ -z \"${OS}\" ]; then\n    echo \"[SECTION] Detecting OS.\"\n    OS=$(execute_check \"uname\")\n    OS=${OS^^}\n    echo \"  [INFO] OS detected:${OS}.\"\nfi\n\ncase ${OS} in\nLINUX)\n    DYN_SUFFIX=so\n    SHARED_LINKER_FLAGS+=\" -shared -Wl,-soname,lib${LIB}.${DYN_SUFFIX}.${LIB_VERSION%%.*}\"\n    ;;\nDARWIN)\n    DYN_SUFFIX=dylib\n    SHARED_LINKER_FLAGS+=\" -dynamiclib -install_name ${LIB_DIR}/lib${LIB}.${DYN_SUFFIX}.${LIB_VERSION%%.*}\"\n    ;;\n*)\n    die \"Unsupported OS: ${OS}.\" 3\n    ;;\nesac\n\n\nLIBNAME=${LIBNAME:-lib${LIB}.${DYN_SUFFIX}.${LIB_VERSION}}\nLIBSYMLINKS=\"${LIBSYMLINKS:-$(gen_symlink_names lib${LIB}.${DYN_SUFFIX} ${LIB_VERSION})}\"\nif [ \"${LIB_DEPRECATE_NAME}\" ]; then\n    LIBDEPRECATE=\"${LIBDEPRECATE:-lib${LIB_DEPRECATE_NAME}.${DYN_SUFFIX}}\"\n    if [ \"${LIB_DEPRECATE_VERSION}\" ]; then\n        LIBDEPRECATE=\"${LIBDEPRECATE}.${LIB_DEPRECATE_VERSION}\"\n    fi\nfi\nDRIVER_DIR=${DRIVER_DIR:-${ARCH_DIR}/${DRIVER}}\nCFLAGS=\"$CPUFLAGS -Ofast -Wall -pthread $CFLAGS\"\n\necho \"[SECTION] Preparing configuration.\"\ncp ${DRIVER_DIR}/includes.h ${ARCH_DIR}/includes.h\n\necho \"[SECTION] Saving configuration.\"\necho -n \"\" > Makefile.inc\nfor param in ${params}; do\n    if [[ ${!param} ]]; then\n        echo \"${param}=${!param}\" >> Makefile.inc\n    fi\ndone\n\nif [ -z \"${NO_CLEAN}\" ]; then\n    echo \"[SECTION] Cleaning previous builds.\"\n    make clean >/dev/null\nfi\n\n\necho \"[OK] Finished.\"\n"
        },
        {
          "name": "cspell.config.yaml",
          "type": "blob",
          "size": 3.78125,
          "content": "version: \"0.2\"\nlanguage: en\nwords:\n  - aarch\n  - abled\n  - Achstetter\n  - ADAFRUIT\n  - addch\n  - addstr\n  - afen\n  - akatran\n  - apidoc\n  - Arduipi\n  - AREF\n  - argparser\n  - armhf\n  - armv\n  - Atmel\n  - atmelavr\n  - atmelmegaavr\n  - atmelsam\n  - ATSAMD\n  - ATTINY\n  - attroff\n  - attron\n  - ATXMEGA\n  - ATXMEGAD\n  - autosectionlabel\n  - Avamander\n  - bdist\n  - berryfied\n  - blogspot\n  - bndy\n  - bootloader\n  - BPLUS\n  - bufptr\n  - bugprone\n  - bysource\n  - bytearray\n  - calcsize\n  - cbps\n  - cbreak\n  - ccache\n  - ccmake\n  - cepin\n  - CFLAGS\n  - CHIPINFO\n  - CLANGTIDY\n  - classname\n  - CLKSEL\n  - codecov\n  - Coliz\n  - cond\n  - Configurators\n  - cpack\n  - CPHA\n  - cpixip\n  - CPPCHECK\n  - cppreference\n  - CPUFLAGS\n  - crclength\n  - CRCO\n  - CROSSCOMPILING\n  - crossunix\n  - crossunixccompiler\n  - cspin\n  - cstdio\n  - CTRLA\n  - CTRLB\n  - datarate\n  - datasheet\n  - Datasheets\n  - DBUILDSWIGNODE\n  - DCMAKE\n  - DEFAULTPINS\n  - deinit\n  - DIRCLR\n  - DIRSET\n  - Disabl\n  - Doherty\n  - Doxyfile\n  - doxygen\n  - doxygenfile\n  - doxygenfunction\n  - doxygengroup\n  - doxygenpage\n  - doxygenvariable\n  - DPICO\n  - dpkg\n  - DSOFT\n  - DSOFTSPI\n  - dstroy\n  - DYNPD\n  - ENAA\n  - endforeach\n  - endfunction\n  - endparblock\n  - endverbatim\n  - endwin\n  - Engelke\n  - enumvalue\n  - espressif\n  - Fals\n  - farconada\n  - fdevopen\n  - FETCHCONTENT\n  - fsanitize\n  - fsel\n  - fstack\n  - ftime\n  - genindex\n  - gettingstarted\n  - gnueabihf\n  - gnux\n  - GPIO\n  - gpiochip\n  - gpiod\n  - Gunasekara\n  - Hallard\n  - HCURR\n  - HILVLEN\n  - HLINE\n  - HMISO\n  - HMOSI\n  - HSCLK\n  - hspi\n  - Ikpeoha\n  - imgui\n  - INPT\n  - INTCTRL\n  - INTCTRLA\n  - Interprocedural\n  - intersphinx\n  - iomanip\n  - ITSYBITSY\n  - Jannis\n  - jscrane\n  - KBPS\n  - Konde\n  - kripton\n  - ldconfig\n  - ldiaz\n  - libboost\n  - libc\n  - libmaple\n  - libncurses\n  - librf\n  - linaro\n  - linenos\n  - literalinclude\n  - LITTLEWIRE\n  - LOLVLEN\n  - lossiness\n  - LPSTR\n  - LPWSTR\n  - lsbmode\n  - lwiring\n  - Makefiles\n  - Maniacbug\n  - markdownlint\n  - marm\n  - MBED\n  - MBPS\n  - MCUSR\n  - MEDLVLEN\n  - MEGAAVR\n  - mfloat\n  - mfpu\n  - microcontroller\n  - milisec\n  - millis\n  - milliwatts\n  - MOSI\n  - MRAA\n  - MSBFIRST\n  - MSVC\n  - mtune\n  - Multiceiver\n  - mypy\n  - nerdralph\n  - newlib\n  - nocbreak\n  - noecho\n  - nullptr\n  - Ofast\n  - OLED\n  - OUTCLR\n  - OVFINTLVL\n  - parblock\n  - Pastore\n  - pgmspace\n  - PICO\n  - PIGPIO\n  - PIMORONI\n  - PINB\n  - pingpair\n  - pinout\n  - pkgs\n  - PLOS\n  - PMIC\n  - PORTA\n  - PORTB\n  - PORTC\n  - PORTD\n  - Portenta\n  - PORTF\n  - postargs\n  - postinst\n  - postrm\n  - POWERUP\n  - preargs\n  - premain\n  - prescalar\n  - Prescaler\n  - println\n  - PRIPSTR\n  - PROGMEM\n  - pthread\n  - purinda\n  - pypi\n  - pyproject\n  - QTPY\n  - Quigg\n  - raspi\n  - REALPATH\n  - rpmbuild\n  - RXADDR\n  - rxbuff\n  - SAMD\n  - sccache\n  - sclk\n  - seealso\n  - Seow\n  - SERCOM\n  - setuptools\n  - SOFTSPI\n  - SOVERSION\n  - spaniakos\n  - SPARFUN\n  - Sparkfun\n  - Speedz\n  - SPID\n  - spidev\n  - SPIUART\n  - sprintf\n  - stanleyseow\n  - stby\n  - stddef\n  - stdlib\n  - STREQUAL\n  - strresult\n  - ststm\n  - sunxi\n  - suppr\n  - SWITCHCAPVCC\n  - sysroot\n  - tableofcontents\n  - TEENSYDUINO\n  - THINGPLUS\n  - toctree\n  - TOLOWER\n  - transfern\n  - transfernb\n  - txbuff\n  - UART\n  - undoc\n  - unexport\n  - userspace\n  - uspi\n  - vect\n  - venv\n  - vfpv\n  - virtualenv\n  - vpfv\n  - VSPI\n  - Wcast\n  - Wconversion\n  - WDCE\n  - WDIE\n  - Wdouble\n  - WDRF\n  - wdtcsr\n  - Wduplicated\n  - Werror\n  - Wextra\n  - Wformat\n  - WGMODE\n  - WIRINGPI\n  - Wlogical\n  - Wmisleading\n  - Wnon\n  - Wnull\n  - Woverloaded\n  - Wpedantic\n  - Wshadow\n  - Wsign\n  - Wunused\n  - Wuseless\n  - XMEGA\n  - Yagarto\n  - zador\nignorePaths:\n  - .env/**\n  - .venv/**\n  - env/**\n  - venv/**\n  - \"**.clang-tidy\"\n  - \"**.clang-format\"\n  - .gitignore\n  - \"**/*.{yml,yaml}\"\n  - utility/RPi/bcm2835.*\n  - Makefile*\n  - make.bat\n  - Doxyfile\n  - configure\n  - CHANGELOG.md\n"
        },
        {
          "name": "datasheets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples_linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples_pico",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "keywords.txt",
          "type": "blob",
          "size": 1.9658203125,
          "content": "RF24                    KEYWORD1\nbegin                   KEYWORD2\nisChipConnected         KEYWORD2\nstartListening          KEYWORD2\nstopListening           KEYWORD2\navailable               KEYWORD2\nread                    KEYWORD2\nwrite                   KEYWORD2\nopenWritingPipe         KEYWORD2\nopenReadingPipe         KEYWORD2\nprintDetails            KEYWORD2\nprintPrettyDetails      KEYWORD2\nrxFifoFull              KEYWORD2\npowerDown               KEYWORD2\npowerUp                 KEYWORD2\nwriteFast               KEYWORD2\nwriteBlocking           KEYWORD2\ntxStandBy               KEYWORD2\nwriteAckPayload         KEYWORD2\nwhatHappened            KEYWORD2\nstartFastWrite          KEYWORD2\nstartWrite              KEYWORD2\nreUseTX                 KEYWORD2\nflush_tx                KEYWORD2\nflush_rx                KEYWORD2\ntestCarrier             KEYWORD2\ntestRPD                 KEYWORD2\nisValid                 KEYWORD2\ncloseReadingPipe        KEYWORD2\nfailureDetected         KEYWORD2\nsetAddressWidth         KEYWORD2\nsetRetries              KEYWORD2\nsetChannel              KEYWORD2\ngetChannel              KEYWORD2\nsetPayloadSize          KEYWORD2\ngetPayloadSize          KEYWORD2\ngetDynamicPayloadSize   KEYWORD2\nenableAckPayload        KEYWORD2\ndisableAckPayload       KEYWORD2\nenableDynamicPayloads   KEYWORD2\ndisableDynamicPayloads  KEYWORD2\nisPVariant              KEYWORD2\nsetAutoAck              KEYWORD2\nsetPALevel              KEYWORD2\ngetPALevel              KEYWORD2\ngetARC                  KEYWORD2\nsetDataRate             KEYWORD2\ngetDataRate             KEYWORD2\nsetCRCLength            KEYWORD2\ngetCRCLength            KEYWORD2\ndisableCRC              KEYWORD2\nmaskIRQ                 KEYWORD2\ntxDelay                 KEYWORD2\ncsDelay                 KEYWORD2\nstartConstCarrier       KEYWORD2\nstopConstCarrier        KEYWORD2\nenableDynamicAck        KEYWORD2\nisAckPayloadAvailable   KEYWORD2\nprintf_begin            KEYWORD2\nsprintfPrettyDetails    KEYWORD2\nencodeRadioDetails      KEYWORD2\n"
        },
        {
          "name": "library.json",
          "type": "blob",
          "size": 1.0771484375,
          "content": "{\n    \"name\": \"RF24\",\n    \"keywords\": \"rf, radio, wireless, spi\",\n    \"description\": \"Radio driver, OSI layer 2 library for nRF24L01(+) transceiver modules.\",\n    \"license\": \"GPL-2.0-only\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/nRF24/RF24.git\"\n    },\n    \"version\": \"1.4.11\",\n    \"export\": {\n        \"exclude\": [\n            \"datasheets\",\n            \".github/*\",\n            \"keywords.txt\",\n            \"configure\",\n            \"examples_pico/*\",\n            \"examples_linux/*\",\n            \"pyRF24/*\",\n            \"cmake/*\",\n            \"CMakeLists.txt\",\n            \"Makefile\",\n            \"utility/CMakeLists.txt\",\n            \"utility/wiringPi/*\",\n            \"utility/MRAA/*\",\n            \"utility/LittleWire/*\",\n            \"utility/RPi/*\",\n            \"utility/SPIDEV/*\",\n            \"utility/rp2/*\",\n            \"utility/ATXMegaD3/*\"\n        ]\n    },\n    \"frameworks\": \"arduino\",\n    \"platforms\": [\n        \"atmelavr\",\n        \"atmelsam\",\n        \"teensy\",\n        \"atmelmegaavr\",\n        \"espressif32\",\n        \"espressif8266\",\n        \"ststm32\"\n    ]\n}"
        },
        {
          "name": "library.properties",
          "type": "blob",
          "size": 0.3984375,
          "content": "name=RF24\nversion=1.4.11\nauthor=TMRh20\nmaintainer=TMRh20,Avamander\nsentence=Radio driver, OSI layer 2 library for nrf24L01(+) modules.\nparagraph=Core library for nRF24L01(+) communication. Simple to use for beginners, but offers advanced configuration options. Many examples are included to demonstrate various modes of communication.\ncategory=Communication\nurl=https://nRF24.github.io/RF24/\narchitectures=*\n"
        },
        {
          "name": "nRF24L01.h",
          "type": "blob",
          "size": 3.451171875,
          "content": "/*\n    Copyright (c) 2007 Stefan Engelke <mbox@stefanengelke.de>\n    Portions Copyright (C) 2011 Greg Copeland\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies\n    of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE.\n*/\n\n/* Memory Map */\n#define NRF_CONFIG  0x00\n#define EN_AA       0x01\n#define EN_RXADDR   0x02\n#define SETUP_AW    0x03\n#define SETUP_RETR  0x04\n#define RF_CH       0x05\n#define RF_SETUP    0x06\n#define NRF_STATUS  0x07\n#define OBSERVE_TX  0x08\n#define CD          0x09\n#define RX_ADDR_P0  0x0A\n#define RX_ADDR_P1  0x0B\n#define RX_ADDR_P2  0x0C\n#define RX_ADDR_P3  0x0D\n#define RX_ADDR_P4  0x0E\n#define RX_ADDR_P5  0x0F\n#define TX_ADDR     0x10\n#define RX_PW_P0    0x11\n#define RX_PW_P1    0x12\n#define RX_PW_P2    0x13\n#define RX_PW_P3    0x14\n#define RX_PW_P4    0x15\n#define RX_PW_P5    0x16\n#define FIFO_STATUS 0x17\n#define DYNPD       0x1C\n#define FEATURE     0x1D\n\n/* Bit Mnemonics */\n#define MASK_RX_DR  6\n#define MASK_TX_DS  5\n#define MASK_MAX_RT 4\n#define EN_CRC      3\n#define CRCO        2\n#define PWR_UP      1\n#define PRIM_RX     0\n#define ENAA_P5     5\n#define ENAA_P4     4\n#define ENAA_P3     3\n#define ENAA_P2     2\n#define ENAA_P1     1\n#define ENAA_P0     0\n#define ERX_P5      5\n#define ERX_P4      4\n#define ERX_P3      3\n#define ERX_P2      2\n#define ERX_P1      1\n#define ERX_P0      0\n#define AW          0\n#define ARD         4\n#define ARC         0\n#define PLL_LOCK    4\n#define CONT_WAVE   7\n#define RF_DR       3\n#define RF_PWR      6\n#define RX_DR       6\n#define TX_DS       5\n#define MAX_RT      4\n#define RX_P_NO     1\n#define TX_FULL     0\n#define PLOS_CNT    4\n#define ARC_CNT     0\n#define TX_REUSE    6\n#define FIFO_FULL   5\n#define TX_EMPTY    4\n#define RX_FULL     1\n#define RX_EMPTY    0\n#define DPL_P5      5\n#define DPL_P4      4\n#define DPL_P3      3\n#define DPL_P2      2\n#define DPL_P1      1\n#define DPL_P0      0\n#define EN_DPL      2\n#define EN_ACK_PAY  1\n#define EN_DYN_ACK  0\n\n/* Instruction Mnemonics */\n#define R_REGISTER    0x00\n#define W_REGISTER    0x20\n#define REGISTER_MASK 0x1F\n#define ACTIVATE      0x50\n#define R_RX_PL_WID   0x60\n#define R_RX_PAYLOAD  0x61\n#define W_TX_PAYLOAD  0xA0\n#define W_ACK_PAYLOAD 0xA8\n#define FLUSH_TX      0xE1\n#define FLUSH_RX      0xE2\n#define REUSE_TX_PL   0xE3\n#define RF24_NOP      0xFF\n\n/* Non-P omissions */\n#define LNA_HCURR 0\n\n/* P model memory Map */\n#define RPD                 0x09\n#define W_TX_PAYLOAD_NO_ACK 0xB0\n\n/* P model bit Mnemonics */\n#define RF_DR_LOW   5\n#define RF_DR_HIGH  3\n#define RF_PWR_LOW  1\n#define RF_PWR_HIGH 2\n"
        },
        {
          "name": "printf.h",
          "type": "blob",
          "size": 1.1845703125,
          "content": "/*\n Copyright (C) 2011 J. Coliz <maniacbug@ymail.com>\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n */\n/*  Galileo support from spaniakos <spaniakos@gmail.com> */\n\n/**\n * @file printf.h\n *\n * Setup necessary to direct stdout to the Arduino Serial library, which\n * enables 'printf'\n */\n\n#ifndef RF24_PRINTF_H_\n#define RF24_PRINTF_H_\n\n#if defined(ARDUINO_ARCH_AVR) || defined(__ARDUINO_X86__) || defined(ARDUINO_ARCH_MEGAAVR)\n\nint serial_putc(char c, FILE*)\n{\n    Serial.write(c);\n    return c;\n}\n\n#elif defined(ARDUINO_ARCH_MBED)\nREDIRECT_STDOUT_TO(Serial);\n\n#endif // defined (ARDUINO_ARCH_AVR) || defined (__ARDUINO_X86__) || defined (ARDUINO_ARCH_MBED) || defined (ARDUINO_ARCH_MEGAAVR)\n\nvoid printf_begin(void)\n{\n#if defined(ARDUINO_ARCH_AVR) || defined(ARDUINO_ARCH_MEGAAVR)\n    fdevopen(&serial_putc, 0);\n\n#elif defined(__ARDUINO_X86__)\n    // For redirect stdout to /dev/ttyGS0 (Serial Monitor port)\n    stdout = freopen(\"/dev/ttyGS0\", \"w\", stdout);\n    delay(500);\n    printf(\"Redirecting to Serial...\");\n#endif // defined(__ARDUINO_X86__)\n}\n\n#endif // RF24_PRINTF_H_\n"
        },
        {
          "name": "pyRF24",
          "type": "tree",
          "content": null
        },
        {
          "name": "utility",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}