{
  "metadata": {
    "timestamp": 1736565588824,
    "page": 468,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "breach/thrust",
      "stars": 2772,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.25390625,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n\n.*.swp\n*~\n \n*.mk\nMakefile\n*.Makefile\n*.pyc\nout\n\n*.xcodeproj\n.DS_Store\nnpm-debug.log\n\nsrc/common/chrome_version.h\ndummy_session\n\ndist\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.232421875,
          "content": "[submodule \"vendor/brightray\"]\n\tpath = vendor/brightray\n\turl = https://github.com/brightray/brightray.git\n[submodule \"vendor/depot_tools\"]\n\tpath = vendor/depot_tools\n\turl = https://chromium.googlesource.com/chromium/tools/depot_tools.git\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0771484375,
          "content": "Copyright (c) 2014 Stanislas Polu. All rights reserved.\n\nThe MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "LICENSE-BRIGHTRAY",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (c) 2014 GitHub Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "LICENSE-CHROMIUM",
          "type": "blob",
          "size": 1.5263671875,
          "content": "// Copyright (c) 2013 The Chromium Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "NOTES",
          "type": "blob",
          "size": 3.8837890625,
          "content": "/******************************************************************************/\n/* TODO */\n/******************************************************************************/\n\n>>v0.x<<\n:print #108\n  - Printing Support\n:cleanser #90\n  - Reintroduce ClearDataForOrigin\n  - Ability to list Data\n  - Ideally: Storage for LocalData\n:form_data #107\n  - Password, Form Data API\n:html_auth #106\n  - User authorization API\n\nDONE:\n>>v0.7.6<<\n- Fix string message (remote) #242\n- Proxy (Set proxy / session API) #155 #169\n- Remote (Internal IPC Mechanism)\n- Fix CloseDevTools #234\n\n>>v0.7.5<<\n- ThrustWindow and <webview> DevTools #205\n- Input support for file and color #208\n- Javascript Dialog Management for <webview> #210\n- Frameless window support #119\n- Fix updagint webview class #213\n- webview Title accessor and event #215\n- Fixes setting webview.src after navigation #217\n- Fixes webview.canGoForward #218\n\n>>v0.7.4<<\n- Upgrade to Chrome 38.0.x.x\n- Global application menu #201\n- Menu popup on specific window\n- <webview> support\n\n>>v0.7.3<<\n- Window events and accessors #190\n- Application menu cleanup OSX #180\n- Kiosk support #197\n\n>>v0.7.2<<\n- Fix Menu not working Ubuntu #193\n- Windows support\n- Distribution creation scripts\n\n>>v0.7.1<<\n- Drop Unix Domain Socket in favor of stdin/stout API\n\n>>v0.7.0<<\n- Remove NodeJS & JSON RPCish API\n- Upgrade to Chrome 36.0.x.x\n- Upgrade to Chrome 37.0.x.x\n- Native menus API\n\n>>v0.6<<\n- Cookies op_count\n- Upgrade to Node 0.11.14 (v8: 3.25.30.0)\n- Upgrade to Chrome 35.0.1916.114 (v8: 3.25.28.16)\n- Add domain_key (eTLD+1) to cookie object exposed thorugh API\n- Bugfixes [fix #136]\n- FLOATING control support\n\n\n>>v0.5<<\n- Context Menu API enhancement\n- Add the ability to run NodeJS only\n- Upgrade to Chrome 32.0.1700.68 (v8: 3.22.24.9)\n- Upgrade to Node 0.10.24 (v8: 3.22.24.9)\n- Fix DevTools I/F\n\n>>v0.4<<\n- Page Zoom API\n- Window Title & Context Menu API\n- DevTools API\n- File Upload/Download UI\n- Antialiasing\n- GTK Icon API\n\n>>v0.3<<:\n- Finish Cookie API: Load/LoadForKey/Flush\n- Check LoadForKey/Load merge is OK (null / '')\n- Cookie Deserialization\n- Expose VisitedLinks AddURL to JS (to add url from there)\n- Embed NeDB in Shell for Cookie Storage\n- Delete VisitedLinks / Cache / Local Storage JS API\n- Capture ExoFrame ScreenShot from API\n\n/******************************************************************************/\n/* BUILD NOTES */\n/******************************************************************************/\nGYP_GENERATORS=ninja gyp --depth . thrust_shell.gyp\nninja -C out/Debug thrust_shell -j 1\n\n# When receiving message: `The application cannot be opened because its executable is missing.`\n/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user\n\n\n/******************************************************************************/\n/* CHROMIUM URLS */\n/******************************************************************************/\nhttp://src.chromium.org/chrome/releases/\nhttp://omahaproxy.appspot.com/\n\n\n/******************************************************************************/\n/* NOTES ON CHROMIUM */\n/******************************************************************************/\n- Issue 159193: Move URLRequestContext getters from Profile into StoragePartition \nhttps://code.google.com/p/chromium/issues/detail?id=159193#c28\n\n- Issue 330264: Tracking bug: Migrate BrowserPlugin to use RenderFrame Architecture\nhttps://code.google.com/p/chromium/issues/detail?id=330264\n\n- Issue 304341: Move frame specific functionality from RenderView(Host) to RenderFrame(Host)\nhttps://code.google.com/p/chromium/issues/detail?id=304341#c60\n\n/******************************************************************************/\n/* NOTES ATOM_SHELL */\n/******************************************************************************/\nLinux High DPI Support: https://github.com/atom/atom-shell/issues/615#event-181505020\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.36328125,
          "content": "#### DEPRECATED - This package is no longer supporter or maintained.\n\n\n\n![Logo Thrust](http://i.imgur.com/IviZAGZ.png)\n\n**Chromium-based cross-platform / cross-language application framework**\n\n*Thrust is `require/import`-able, it lets you distribute NodeJS, Go or Python GUI apps directly \nthrough their native package managers.*\n\nThrust is based on Chromium's Content Module and is supported on Linux, MacOSX and Windows:\n\n![Cross-Platform Screenshots](http://i.imgur.com/7K98jyW.png)\n*Screenshot of Thrust Getting Started example running on each major platform.*\n\nTo better understand what Thrust can do, check out **[JankyBrowser](https://gist.github.com/morganrallen/f07f59802884bcdcad4a)** by \n@morganrallen, the cross-platform browser that fits in a gist:\n```\nnpm install -g \\\n  https://gist.github.com/morganrallen/f07f59802884bcdcad4a/download\n```\n\n#### Table of Contents\n- [Language bindings](#language-bindings)\n  - [NodeJS](#nodejs)\n  - [Go](#go)\n  - [Python](#python)\n  - [Scala](#scala)\n  - [Clojure](#clojure)\n  - [Perl](#perl)\n- [API Reference](#api-reference)\n- [Architecture](#architecture)\n- [Community](#community)\n  - [Request for API](#request-for-api)\n  - [List of Thrust Users](#list-of-thrust-users)\n  - [Thrust 7.5k Contest](#thrust75k-contest)\n  - [Getting Involved](#getting-involved)\n- [Features & Roadmap](#features--roadmap)\n- [Building Thrust from Sources](#building-thrust-from-sources)\n\n***\n## Language bindings\n\nThrust's binary distribution exposes its API on the standard IO and language\n specific library packages automatically download the binary distribution at \ninstallation. Thrust is based on Chromium's content module and uses web-pages \nas its GUI.\n\nAll these Getting Started example work as is on each major platform (MacOSX,\nWindows, Linux)\n\n### NodeJS\n##### Getting Started\n\nFirst install with `npm install node-thrust`\n\n```Javascript\nrequire('node-thrust')(function(err, api) { \n  api.window({ root_url: 'https://google.com' }).show();\n});\n```\n\n##### Library\n\n- **node-thrust** [breach/node-thrust](https://github.com/breach/node-thrust/)\n\n### Go\n\n##### Getting Started\n\nFirst download with `go get -u github.com/miketheprogrammer/go-thrust/`\n\n```Go\n```\npackage main\n\nimport (\n\t\"github.com/miketheprogrammer/go-thrust/lib/dispatcher\"\n\t\"github.com/miketheprogrammer/go-thrust/lib/spawn\"\n\t\"github.com/miketheprogrammer/go-thrust/lib/bindings/window\"\n\t\"github.com/miketheprogrammer/go-thrust/lib/commands\"\n)\n\nfunc main() {\n\tspawn.Run()\n\tsize := commands.SizeHW{}\n\topts := window.Options{\n\t\tRootUrl:  \"http://google.com\",\n\t\tSize:     size,\n\t\tTitle:    \"Demo window\",\n\t\tHasFrame: true,\n\t}\n\tthrustWindow := window.NewWindow(opts)\n\tthrustWindow.Show()\n\tthrustWindow.Maximize()\n\tthrustWindow.Focus()\n\tdispatcher.RunLoop()\n}\n\n##### Library\n\n- **go-thrust**: [miketheprogrammer/go-thrust](https://github.com/miketheprogrammer/go-thrust)\n\n### Python\n\n##### Getting Started\n\nFirst install with `pip3 install pythrust [--user]` (requires Python3)\n\n```Python\nimport asyncio, pythrust\n\nloop = asyncio.get_event_loop()\napi = pythrust.API(loop)\n\nasyncio.async(api.spawn())\nasyncio.async(api.window({ 'root_url': 'http://google.com' }).show())\n\nloop.run_forever()\n```\n\n##### Library\n\n- **pythrust** [breach/pythrust](https://github.com/breach/pythrust/)\n\n### Scala\n\n##### Getting Started\n\nInclude scala-thrust jar on your classpath. (Add to lib in your project.)\n\n```Scala\nimport scala.concurrent.ExecutionContext.Implicits.global\nimport com.github.eklavya.thrust._\n\nobject Main extends App {\n  Window.create(\"http://google.com\").foreach { w =>\n    w.show\n    w.maximize\n    w.openDevtools\n    w.focus(true)\n    w.onBlur(() => println(\"we were blurred\"))\n    w.onFocus(() => println(\"we were focused\"))\n    Menu.create(\"MyMenu\").foreach { m =>\n      val i = MenuItem(\"Item1\", _ => println(\"Item1 was clicked\"))\n      m.addItem(i)\n      m.popup(w)\n    }\n  }\n}\n```\n\n##### Library\n\n- **scala-thrust** [eklavya/scala-thrust](https://github.com/eklavya/scala-thrust/)\n\n### Clojure\n\n##### Getting Started\n\n- [Installation](https://github.com/solicode/clj-thrust#installation)\n- [Sample Project](https://github.com/solicode/clj-thrust#sample-project)\n\n```clojure\n(ns my-app.core\n  (:require [clj-thrust.core :refer [create-process destroy-process]]\n            [clj-thrust.window :as w]))\n\n(let [process (create-process) ; `create-process` also takes path to Thrust directory\n      window (w/create-window process\n               :root-url \"http://localhost:8080\" ; URL to your web app\n               :size {:width 400 :height 300})]\n  (w/listen-closed window\n    (fn [e]\n      (destroy-process process))) ; Optionally call `(System/exit 0)` here.\n  (w/show window)\n  (w/focus window true))\n```\n\n##### Library\n\n- **clj-thrust** [solicode/clj-thrust](https://github.com/solicode/clj-thrust)\n\n### Perl\n\n##### Getting Started\n\nInstall with `cpanm Thrust [--sudo]`\n\nSimple command line test:\n\n```\nperl -MThrust -e 'Thrust->window->show->maximize->open_devtools->run'\n```\n\nBasic program\n\n```Perl\nuse Thrust;\n\nmy $t = Thrust->new;\n\nmy $w = $t->window(\n          root_url => 'data:text/html,Hello World!',\n          title => 'My App',\n          size => { width => 800, height => 600 },\n        );\n\n$w->on(closed => sub { exit });\n\n$w->show;\n\n$t->run; ## enter event loop\n```\n\n##### Library\n\n- [metacpan](https://metacpan.org/pod/Thrust)\n- [github](https://github.com/hoytech/Thrust)\n\n\n***\n## API Reference\n\nThe API reference as well as links to specific language bindings documentations \nare availble in the [docs/](https://github.com/breach/thrust/tree/master/docs)\n directory.\n\n***\n## Architecture\n\n```\n[Thrust Architecture]\n\n          (Platform)           [stdio]      (Your Implementation)\n                                                                          \n                                  #\n               +--------------+   #       +-----------------------+  | \n               | Cocoa / Aura |   #   +---|    win3: (HTML/JS)    |  |\n               +-------+------+   #   |  +-----------------------++  |\n                       |          #   +--|    win2: (HTML/JS)    |   | cli\n+------------+ +-------+------+   #   | +-----------------------++   |\n|            +-+ thrust (C++) +-------+-+    win1: (HTML/JS)    |    |\n| ContentAPI | +-------+------+   #     +-----------------------+    |\n|            |         |          #                | (TCP/FS)      \n| (Blink/v8) | +-------+------+   #     +-----------------------+    |\n|            | + JSON RPC srv +---------+ Client App (any Lang) |    | srv\n+------------+ +--------------+   #     +-----------------------+    |\n                                  #\n```\n\n***\n## Community\n\n##### Request for API\n\n- List of API needed by various projects on Thrust: \n[Request for API](https://github.com/breach/thrust/wiki/Request-for-API)\n\n##### List of Thrust Users \n\n- List of people relying on Thrust: \n[List of Thrust Users](https://github.com/breach/thrust/wiki/List-of-Thrust-Users)\n\n##### Getting Involved\nNo longer maintained actively.\n\n***\n## Features & Roadmap\n\n- [x] **window creation** create, show, close resize, minimize, maximize, ...\n- [x] **node.js, go** node.js and go bindings libraries\n- [x] **window events** close, blur, focus, unresponsive, crashed\n- [x] **cross-platform** equivalent support on `MacOSX`, `Windows` and `Linux`\n- [x] **sessions** off the record, custom storage path, custom cookie store\n- [x] **kiosk** kiosk mode\n- [x] **application menu** global application menu (MacOSX, X11/Unity)\n- [x] **webview** webview tag (secure navigation, tabs management)\n- [x] **frameless** frameless window and draggable regions\n- [x] **python** python bindings library\n- [x] **remote** thrust specific IPC mechanism for client/server communication\n- [x] **proxy** enable traffic proxying (Tor, header injection, ...)\n- [ ] **tray icon** tray icon native integration\n- [ ] **protocol** specific protocol registration (`file://`, ...)\n\n***\n## Building Thrust from Sources\n\nYou will generally don't need to build thrust yourself. A binary version of \nthrust should be automatically fetched by the library you're reyling on at \ninstallation.\n\nTo build thrust, you'll need to have `python 2.7.x` and `git` installed. You can \nthen boostrap the project with:\n```\n./scripts/boostrap.py                                \n```\n\nBuild both the `Release` and `Debug` targets with the following commands:\n```\n./scripts/update.py\n./scripts/build.py\n```\n\nNote that `bootstrap.py` may take some time as it checks out `brightray` and\ndownloads `libchromiumcontent` for your platform.\n"
        },
        {
          "name": "common.gypi",
          "type": "blob",
          "size": 4.279296875,
          "content": "{\n  'variables': {\n    'clang': 0,\n    'openssl_no_asm': 1,\n    'conditions': [\n      ['OS==\"mac\" or OS==\"linux\"', {\n        'clang': 1,\n      }],\n      ['OS==\"win\" and (MSVS_VERSION==\"2013e\" or MSVS_VERSION==\"2012e\" or MSVS_VERSION==\"2010e\")', {\n        'msvs_express': 1,\n      },{\n        'msvs_express': 0,\n      }],\n    ],\n    # Required by Linux (empty for now, should support it in future).\n    'sysroot': '',\n  },\n  # Settings to compile node under Windows.\n  'target_defaults': {\n    'target_conditions': [\n      ['_target_name.startswith(\"breakpad\") or _target_name in [\"crash_report_sender\", \"dump_syms\"]', {\n        'conditions': [\n          ['OS==\"mac\"', {\n            'xcode_settings': {\n              'WARNING_CFLAGS': [\n                '-Wno-deprecated-declarations',\n                '-Wno-deprecated-register',\n                '-Wno-unused-private-field',\n                '-Wno-unused-function',\n              ],\n            },\n          }],  # OS==\"mac\"\n          ['OS==\"linux\"', {\n            'cflags': [\n              '-Wno-empty-body',\n            ],\n          }],  # OS==\"linux\"\n        ],\n      }],\n    ],\n    'msvs_cygwin_shell': 0, # Strangely setting it to 1 would make building under cygwin fail.\n    'msvs_disabled_warnings': [\n      4189,  # local variable is initialized but not referenced\n      4819,  # The file contains a character that cannot be represented in the current code page\n      4201,  # nameless struct/union\n      4996,  # (atlapp.h) 'GetVersionExW': was declared deprecated\n    ],\n    'msvs_settings': {\n      'VCCLCompilerTool': {\n        # Programs that use the Standard C++ library must be compiled with C++\n        # exception handling enabled.\n        # http://support.microsoft.com/kb/154419\n        'ExceptionHandling': 1,\n      },\n      'VCLinkerTool': {\n        'AdditionalOptions': [\n          # ATL 8.0 included in WDK 7.1 makes the linker to generate following\n          # warnings:\n          #   - warning LNK4254: section 'ATL' (50000040) merged into\n          #     '.rdata' (40000040) with different attributes\n          #   - warning LNK4078: multiple 'ATL' sections found with\n          #     different attributes\n          '/ignore:4254',\n          '/ignore:4078',\n          # views_chromiumcontent.lib generates this warning because it's\n          # symobls are defined as dllexport but used as static library:\n          #   - warning LNK4217: locally defined symbol imported in function\n          #   - warning LNK4049: locally defined symbol imported\n          '/ignore:4217',\n          '/ignore:4049',\n        ],\n      },\n    },\n    'xcode_settings': {\n      'DEBUG_INFORMATION_FORMAT': 'dwarf-with-dsym',\n    },\n  },\n  'conditions': [\n    # Settings to compile with clang under OS X.\n    ['clang==1', {\n      'target_defaults': {\n        'cflags_cc': [\n          # Use gnu++11 instead of c++11 here, see:\n          # https://code.google.com/p/chromium/issues/detail?id=224515\n          '-std=gnu++11',\n        ],\n        'xcode_settings': {\n          'CC': '/usr/bin/clang',\n          'LDPLUSPLUS': '/usr/bin/clang++',\n          'OTHER_CPLUSPLUSFLAGS': [\n            '$(inherited)', '-std=gnu++11'\n          ],\n          'OTHER_CFLAGS': [\n            '-fcolor-diagnostics',\n          ],\n\n          'GCC_C_LANGUAGE_STANDARD': 'c99',  # -std=c99\n        },\n      },\n    }],  # clang==1\n    # The breakdpad on Windows assumes Debug_x64 and Release_x64 configurations.\n    ['OS==\"win\"', {\n      'target_defaults': {\n        'configurations': {\n          'Debug_x64': {\n          },\n          'Release_x64': {\n          },\n        },\n      },\n    }],  # OS==\"win\"\n    # The breakdpad on Mac assumes Release_Base configuration.\n    ['OS==\"mac\"', {\n      'target_defaults': {\n        'configurations': {\n          'Release_Base': {\n          },\n        },\n      },\n    }],  # OS==\"mac\"\n    # The breakpad on Linux needs the binary to be built with -g to generate\n    # unmangled symbols.\n    ['OS==\"linux\"', {\n      'target_defaults': {\n        'cflags': [ '-g' ],\n        'conditions': [\n          ['target_arch==\"ia32\"', {\n            'target_conditions': [\n              ['_toolset==\"target\"', {\n                'ldflags': [\n                  # Workaround for linker OOM.\n                  '-Wl,--no-keep-memory',\n                ],\n              }],\n            ],\n          }],\n        ],\n      },\n    }],\n  ],\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "filename_rules.gypi",
          "type": "blob",
          "size": 2.5615234375,
          "content": "# Copyright (c) 2012 The Chromium Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# This gypi file defines the patterns used for determining whether a\n# file is excluded from the build on a given platform.  It is\n# included by common.gypi for chromium_code.\n\n{\n  'target_conditions': [\n    ['OS!=\"win\"', {\n      'sources/': [ ['exclude', '_win(_unittest)?\\\\.(h|cc)$'],\n                    ['exclude', '(^|/)win/'],\n                    ['exclude', '(^|/)win_[^/]*\\\\.(h|cc)$'] ],\n    }],\n    ['OS!=\"mac\"', {\n      'sources/': [ ['exclude', '_(cocoa|mac)(_unittest)?\\\\.(h|cc|mm?)$'],\n                    ['exclude', '(^|/)(cocoa|mac)/'] ],\n    }],\n    ['OS!=\"ios\"', {\n      'sources/': [ ['exclude', '_ios(_unittest)?\\\\.(h|cc|mm?)$'],\n                    ['exclude', '(^|/)ios/'] ],\n    }],\n    ['OS!=\"mac\" and OS!=\"ios\"', {\n      'sources/': [ ['exclude', '\\\\.mm?$' ] ],\n    }],\n    # Do not exclude the linux files on *BSD since most of them can be\n    # shared at this point.\n    # In case a file is not needed, it is going to be excluded later on.\n    # TODO(evan): the above is not correct; we shouldn't build _linux\n    # files on non-linux.\n    ['OS!=\"linux\" and OS!=\"openbsd\" and OS!=\"freebsd\"', {\n      'sources/': [\n        ['exclude', '_linux(_unittest)?\\\\.(h|cc)$'],\n        ['exclude', '(^|/)linux_[^/]*\\\\.(h|cc)$'],\n        ['exclude', '(^|/)linux/'],\n        ['exclude', '_x11(_unittest)?\\\\.(h|cc)$'],\n        ['exclude', '(^|/)x11_[^/]*\\\\.(h|cc)$'],\n        ['exclude', '(^|/)x11/'],\n      ],\n    }],\n    ['OS!=\"android\"', {\n      'sources/': [\n        ['exclude', '_android(_unittest)?\\\\.cc$'],\n        ['exclude', '(^|/)android/'],\n      ],\n    }],\n    ['OS==\"win\"', {\n      'sources/': [\n        ['exclude', '_posix(_unittest)?\\\\.(h|cc)$'],\n        ['exclude', '(^|/)posix/'],\n      ],\n    }],\n    ['OS!=\"linux\" and OS!=\"openbsd\" and OS!=\"freebsd\"', {\n      'sources/': [\n        ['exclude', '_xdg(_unittest)?\\\\.(h|cc)$'],\n      ],\n    }],\n    ['OS!=\"linux\" and OS!=\"openbsd\" and OS!=\"freebsd\"', {\n      'sources/': [\n        ['exclude', '_gtk(_browsertest|_unittest)?\\\\.(h|cc)$'],\n        ['exclude', '(^|/)gtk/'],\n        ['exclude', '(^|/)gtk_[^/]*\\\\.(h|cc)$'],\n        ['exclude', '(^|/)libgtk2ui/'],\n        ['exclude', '(^|/)x/'],\n      ],\n    }],\n    ['OS==\"mac\"', {\n      'sources/': [ ['exclude', '_aura(_browsertest|_unittest)?\\\\.(h|cc)$'],\n                    ['exclude', '(^|/)aura/'],\n                    ['exclude', '_views\\\\.(h|cc)$'],\n                    ['exclude', '(^|/)views/'],\n      ],\n    }],\n  ]\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "thrust_shell.gyp",
          "type": "blob",
          "size": 20.1875,
          "content": "# Copyright (c) 2014 Stanislas Polu. All rights reserved.\n# see LICENSE file\n\n{\n  'variables': {\n    'project_name': 'thrust_shell',\n    'product_name': 'ThrustShell',\n    'framework_name': 'ThrustShell Framework',\n    'app_sources': [\n      'src/browser/resources/win/thrust_shell.rc',\n      'src/browser/resources/win/resource.h',\n      'src/app/main.cc',\n      'src/app/main.h',\n    ],\n    'bundle_sources': [\n      'src/browser/resources/mac/thrust_shell.icns',\n    ],\n    'js_sources': [\n      'src/renderer/extensions/resources/web_view.js',\n      'src/renderer/extensions/resources/remote.js',\n    ],\n    'lib_sources': [\n      'src/app/main_delegate.cc',\n      'src/app/main_delegate.h',\n      'src/app/main_delegate_mac.mm',\n      'src/app/content_client.h',\n      'src/app/content_client.cc',\n\n      'src/common/messages.cc',\n      'src/common/messages.h',\n      'src/common/switches.cc',\n      'src/common/switches.h',\n      'src/common/draggable_region.h',\n      'src/common/draggable_region.cc',\n\n      'src/browser/resources/linux/application_info_linux.cc',\n      'src/browser/browser_client.cc',\n      'src/browser/browser_client.h',\n      'src/browser/browser_main_parts.cc',\n      'src/browser/browser_main_parts.h',\n      'src/browser/browser_main_parts_mac.mm',\n      'src/browser/util/platform_util.h',\n      'src/browser/util/platform_util_aura.cc',\n      'src/browser/util/platform_util_linux.cc',\n      'src/browser/util/platform_util_mac.mm',\n      'src/browser/mac/application_mac.h',\n      'src/browser/mac/application_mac.mm',\n      'src/browser/resource_dispatcher_host_delegate.cc',\n      'src/browser/resource_dispatcher_host_delegate.h',\n      'src/browser/session/thrust_session.h',\n      'src/browser/session/thrust_session.cc',\n      'src/browser/session/thrust_session_cookie_store.h',\n      'src/browser/session/thrust_session_cookie_store.cc',\n      'src/browser/session/thrust_session_visitedlink_store.h',\n      'src/browser/session/thrust_session_visitedlink_store.cc',\n      'src/browser/session/thrust_session_proxy_config_service.h',\n      'src/browser/session/thrust_session_proxy_config_service.cc',\n      'src/browser/thrust_window.h',\n      'src/browser/thrust_window.cc',\n      'src/browser/thrust_window_views.cc',\n      'src/browser/thrust_window_mac.mm',\n      'src/browser/thrust_menu.h',\n      'src/browser/thrust_menu.cc',\n      'src/browser/thrust_menu_views.cc',\n      'src/browser/thrust_menu_mac.mm',\n      'src/browser/dialog/javascript_dialog_manager.cc',\n      'src/browser/dialog/javascript_dialog_manager.h',\n      'src/browser/dialog/file_dialog.h',\n      'src/browser/dialog/file_dialog_mac.mm',\n      'src/browser/dialog/file_dialog_win.cc',\n      'src/browser/dialog/file_dialog_gtk.cc',\n      'src/browser/dialog/web_dialog_helper.h',\n      'src/browser/dialog/web_dialog_helper.cc',\n      'src/browser/dialog/download_manager_delegate.h',\n      'src/browser/dialog/download_manager_delegate.cc',\n      'src/browser/dialog/download_manager_delegate_gtk.cc',\n      'src/browser/dialog/download_manager_delegate_win.cc',\n      'src/browser/dialog/download_manager_delegate_mac.mm',\n      'src/browser/dialog/browser_dialogs.h',\n      'src/browser/dialog/color_chooser_aura.cc',\n      'src/browser/dialog/color_chooser_aura.h',\n      'src/browser/dialog/color_chooser_mac.mm',\n\n      'src/browser/ui/accelerator_util.h',\n      'src/browser/ui/accelerator_util.cc',\n      'src/browser/ui/accelerator_util_mac.mm',\n      'src/browser/ui/accelerator_util_views.cc',\n      'src/browser/ui/views/frameless_view.h',\n      'src/browser/ui/views/frameless_view.cc',\n      'src/browser/ui/views/win_frame_view.h',\n      'src/browser/ui/views/win_frame_view.cc',\n\n      'src/browser/ui/views/global_menu_bar_x11.h',\n      'src/browser/ui/views/global_menu_bar_x11.cc',\n      'src/browser/ui/views/global_menu_bar_registrar_x11.h',\n      'src/browser/ui/views/global_menu_bar_registrar_x11.cc',\n      'src/browser/ui/views/menu_bar.h',\n      'src/browser/ui/views/menu_bar.cc',\n      'src/browser/ui/views/menu_layout.h',\n      'src/browser/ui/views/menu_layout.cc',\n      'src/browser/ui/views/menu_delegate.h',\n      'src/browser/ui/views/menu_delegate.cc',\n      'src/browser/ui/views/submenu_button.h',\n      'src/browser/ui/views/submenu_button.cc',\n\n      'src/browser/ui/cocoa/menu_controller.h',\n      'src/browser/ui/cocoa/menu_controller.mm',\n      'src/browser/ui/cocoa/event_processing_window.h',\n      'src/browser/ui/cocoa/event_processing_window.mm',\n\n      'src/browser/web_view/web_view_guest.h',\n      'src/browser/web_view/web_view_guest.cc',\n      'src/browser/web_view/web_view_javascript_dialog_manager.h',\n      'src/browser/web_view/web_view_javascript_dialog_manager.cc',\n      'src/browser/web_view/web_view_constants.h',\n      'src/browser/web_view/web_view_constants.cc',\n\n      'src/renderer/renderer_client.h',\n      'src/renderer/renderer_client.cc',\n      'src/renderer/render_process_observer.h',\n      'src/renderer/render_process_observer.cc',\n      'src/renderer/render_view_observer.h',\n      'src/renderer/render_view_observer.cc',\n      'src/renderer/render_frame_observer.h',\n      'src/renderer/render_frame_observer.cc',\n\n      'src/renderer/extensions/scoped_persistent.h',\n      'src/renderer/extensions/unsafe_persistent.h',\n      'src/renderer/extensions/static_v8_external_string_resource.h',\n      'src/renderer/extensions/static_v8_external_string_resource.cc',\n      'src/renderer/extensions/local_source_map.h',\n      'src/renderer/extensions/local_source_map.cc',\n      'src/renderer/extensions/native_handler.h',\n      'src/renderer/extensions/native_handler.cc',\n      'src/renderer/extensions/object_backed_native_handler.cc',\n      'src/renderer/extensions/object_backed_native_handler.h',\n      'src/renderer/extensions/safe_builtins.h',\n      'src/renderer/extensions/safe_builtins.cc',\n      'src/renderer/extensions/console.h',\n      'src/renderer/extensions/console.cc',\n      'src/renderer/extensions/module_system.h',\n      'src/renderer/extensions/module_system.cc',\n      'src/renderer/extensions/script_context.h',\n      'src/renderer/extensions/script_context.cc',\n\n      'src/renderer/extensions/document_bindings.h',\n      'src/renderer/extensions/document_bindings.cc',\n      'src/renderer/extensions/web_view_bindings.h',\n      'src/renderer/extensions/web_view_bindings.cc',\n      'src/renderer/extensions/remote_bindings.h',\n      'src/renderer/extensions/remote_bindings.cc',\n\n      'src/geolocation/access_token_store.cc',\n      'src/geolocation/access_token_store.h',\n\n      'src/net/net_log.cc',\n      'src/net/net_log.h',\n      'src/net/network_delegate.cc',\n      'src/net/network_delegate.h',\n      'src/net/url_request_context_getter.cc',\n      'src/net/url_request_context_getter.h',\n\n      'src/common/visitedlink/visitedlink_common.cc',\n      'src/common/visitedlink/visitedlink_common.h',\n      'src/common/visitedlink/visitedlink_message_generator.cc',\n      'src/common/visitedlink/visitedlink_message_generator.h',\n      'src/common/visitedlink/visitedlink_messages.h',\n      'src/browser/visitedlink/visitedlink_delegate.h',\n      'src/browser/visitedlink/visitedlink_event_listener.cc',\n      'src/browser/visitedlink/visitedlink_event_listener.h',\n      'src/browser/visitedlink/visitedlink_master.cc',\n      'src/browser/visitedlink/visitedlink_master.h',\n      'src/renderer/visitedlink/visitedlink_slave.cc',\n      'src/renderer/visitedlink/visitedlink_slave.h',\n\n      'src/api/api.h',\n      'src/api/api.cc',\n      'src/api/api_server.h',\n      'src/api/api_server.cc',\n      'src/api/api_binding.h',\n      'src/api/api_binding.cc',\n      'src/api/thrust_window_binding.h',\n      'src/api/thrust_window_binding.cc',\n      'src/api/thrust_session_binding.h',\n      'src/api/thrust_session_binding.cc',\n      'src/api/thrust_menu_binding.h',\n      'src/api/thrust_menu_binding.cc',\n    ],\n    'lib_sources_win': [\n      'src/browser/dialog/color_chooser_win.cc',\n      'src/browser/dialog/color_chooser_dialog.cc',\n      'src/browser/dialog/color_chooser_dialog.h',\n    ],\n    'framework_sources': [\n      'src/app/library_main.cc',\n      'src/app/library_main.h',\n    ],\n    'locales': [\n      'am', 'ar', 'bg', 'bn', 'ca', 'cs', 'da', 'de', 'el', 'en-GB',\n      'en-US', 'es-419', 'es', 'et', 'fa', 'fi', 'fil', 'fr', 'gu', 'he',\n      'hi', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lt', 'lv',\n      'ml', 'mr', 'ms', 'nb', 'nl', 'pl', 'pt-BR', 'pt-PT', 'ro', 'ru',\n      'sk', 'sl', 'sr', 'sv', 'sw', 'ta', 'te', 'th', 'tr', 'uk',\n      'vi', 'zh-CN', 'zh-TW',\n    ],\n    'thrust_shell_source_root': '<!(python tools/source_root.py)',\n    'conditions': [\n      ['OS==\"win\"', {\n        'app_sources': [\n          'src/browser/resources/win/resource.h',\n          'src/browser/resources/win/thrust_shell.ico',\n          'src/browser/resources/win/thrust_shell.rc',\n          '<(libchromiumcontent_src_dir)/content/app/startup_helper_win.cc',\n        ],\n      }],  # OS==\"win\"\n      ['OS==\"mac\"', {\n        'apply_locales_cmd': ['python', 'tools/mac/apply_locales.py'],\n      }],  # OS==\"mac\"\n    ],\n  },\n  'includes': [\n    'common.gypi',\n    'vendor/brightray/brightray.gypi',\n  ],\n  'target_defaults': {\n    'includes': [\n       # Rules for excluding e.g. foo_win.cc from the build on non-Windows.\n      'filename_rules.gypi',\n    ],\n    'configurations': {\n      'Debug': {\n        'defines': [ 'DEBUG' ],\n        'cflags': [ '-g', '-O0' ],\n      },\n    },\n  },\n  'targets': [\n    {\n      'target_name': '<(project_name)',\n      'type': 'executable',\n      'dependencies': [\n        '<(project_name)_lib',\n      ],\n      'sources': [\n        '<@(app_sources)',\n      ],\n      'include_dirs': [\n        '.',\n      ],\n      'conditions': [\n        ['OS==\"mac\"', {\n          'product_name': '<(product_name)',\n          'mac_bundle': 1,\n          'dependencies!': [\n            '<(project_name)_lib',\n          ],\n          'dependencies': [\n            '<(project_name)_framework',\n            '<(project_name)_helper',\n          ],\n          'xcode_settings': {\n            'INFOPLIST_FILE': 'src/browser/resources/mac/Info.plist',\n            'LD_RUNPATH_SEARCH_PATHS': [\n              '@executable_path/../Frameworks',\n            ],\n          },\n          'mac_bundle_resources': [\n            '<@(bundle_sources)',\n            '<(libchromiumcontent_resources_dir)/icudtl.dat',\n          ],\n          'copies': [\n            {\n              'destination': '<(PRODUCT_DIR)/<(product_name).app/Contents/Frameworks',\n              'files': [\n                '<(PRODUCT_DIR)/<(product_name) Helper.app',\n                '<(PRODUCT_DIR)/<(framework_name).framework',\n              ],\n            },\n          ],\n          'postbuilds': [\n            {\n              # This postbuid step is responsible for creating the following\n              # helpers:\n              #\n              # <(product_name) EH.app and <(product_name) NP.app are created\n              # from <(product_name).app.\n              #\n              # The EH helper is marked for an executable heap. The NP helper\n              # is marked for no PIE (ASLR).\n              'postbuild_name': 'Make More Helpers',\n              'action': [\n                'vendor/brightray/tools/mac/make_more_helpers.sh',\n                'Frameworks',\n                '<(product_name)',\n              ],\n            },\n            {\n              # The application doesn't have real localizations, it just has\n              # empty .lproj directories, which is enough to convince Cocoa\n              # thrust supports those languages.\n              'postbuild_name': 'Make Empty Localizations',\n              'variables': {\n                'locale_dirs': [\n                  '>!@(<(apply_locales_cmd) -d ZZLOCALE.lproj <(locales))',\n                ],\n              },\n              'action': [\n                'tools/mac/make_locale_dirs.sh',\n                '<@(locale_dirs)',\n              ],\n            },\n          ]\n        }, {  # OS==\"mac\"\n          'dependencies': [\n            'make_locale_paks',\n          ],\n        }],  # OS!=\"mac\"\n        ['OS==\"win\"', {\n          'copies': [\n            {\n              'destination': '<(PRODUCT_DIR)',\n              'files': [\n                '<(libchromiumcontent_library_dir)/chromiumcontent.dll',\n                '<(libchromiumcontent_library_dir)/ffmpegsumo.dll',\n                '<(libchromiumcontent_library_dir)/libEGL.dll',\n                '<(libchromiumcontent_library_dir)/libGLESv2.dll',\n                '<(libchromiumcontent_resources_dir)/icudtl.dat',\n                '<(libchromiumcontent_resources_dir)/content_shell.pak',\n                '<(libchromiumcontent_resources_dir)/ui_resources_200_percent.pak',\n                '<(libchromiumcontent_resources_dir)/webkit_resources_200_percent.pak',\n              ],\n            },\n          ],\n        }],\n        ['OS==\"linux\"', {\n          'link_settings': {\n            'libraries': [\n              '-lpthread -ldl -lm -lX11 -lXrandr -lXext -lgconf-2',\n            ],\n          },\n          'copies': [\n            {\n              'destination': '<(PRODUCT_DIR)',\n              'files': [\n                '<(libchromiumcontent_library_dir)/libchromiumcontent.so',\n                '<(libchromiumcontent_library_dir)/libffmpegsumo.so',\n                '<(libchromiumcontent_resources_dir)/icudtl.dat',\n                '<(libchromiumcontent_resources_dir)/content_shell.pak',\n              ],\n            },\n          ],\n        }],\n      ],\n    },  # target <(project_name)\n    {\n      'target_name': '<(project_name)_lib',\n      'type': 'static_library',\n      'dependencies': [\n        '<(project_name)_js',\n        'vendor/brightray/brightray.gyp:brightray',\n      ],\n      'defines': [\n        # This is defined in skia/skia_common.gypi.\n        'SK_SUPPORT_LEGACY_GETTOPDEVICE',\n      ],\n      'sources': [\n        '<@(lib_sources)',\n      ],\n      'include_dirs': [\n        '.',\n        'chromium_src',\n        'vendor/brightray',\n      ],\n      'direct_dependent_settings': {\n        'include_dirs': [\n          '.',\n        ],\n      },\n      'export_dependent_settings': [\n        'vendor/brightray/brightray.gyp:brightray',\n      ],\n      'conditions': [\n        ['OS==\"win\"', {\n          'sources': [\n            '<@(lib_sources_win)',\n          ],\n          'link_settings': {\n            'libraries': [\n              '-limm32.lib',\n              '-loleacc.lib',\n              '-lComdlg32.lib',\n              '-lWininet.lib',\n            ],\n          },\n        }],  # OS==\"win\"\n        ['OS==\"mac\"', {\n          'dependencies': [\n          ],\n        }],  # OS==\"mac\"\n         ['OS==\"linux\"', {\n           'link_settings': {\n             'ldflags': [\n              # Make binary search for libraries under current directory, so we\n              # don't have to manually set $LD_LIBRARY_PATH:\n              # http://serverfault.com/questions/279068/cant-find-so-in-the-same-directory-as-the-executable\n               '-rpath \\$$ORIGIN',\n              # Make native module dynamic loading work.\n               '-rdynamic',\n             ],\n           },\n          'cflags': [\n            '-Wno-deprecated-register',\n            '-Wno-empty-body',\n          ],\n        }],  # OS==\"linux\"\n      ],\n    },  # target <(product_name)_lib\n    {\n      'target_name': '<(project_name)_js',\n      'type': 'none',\n      'actions': [\n        {\n          'inputs': [\n            'src/renderer/extensions/resources/web_view.js',\n          ],\n          'outputs': [\n            'src/renderer/extensions/resources/web_view.js.bin',\n          ],\n          'action_name': 'xxd web_view.js',\n          'action': ['xxd', '-i', \n          'src/renderer/extensions/resources/web_view.js',\n          'src/renderer/extensions/resources/web_view.js.bin'],\n        },\n        {\n          'inputs': [\n            'src/renderer/extensions/resources/remote.js',\n          ],\n          'outputs': [\n            'src/renderer/extensions/resources/remote.js.bin',\n          ],\n          'action_name': 'xxd remote.js',\n          'action': ['xxd', '-i', \n          'src/renderer/extensions/resources/remote.js',\n          'src/renderer/extensions/resources/remote.js.bin'],\n        },\n      ],\n    },  # target <(product_name)_js\n    {\n      'target_name': '<(project_name)_strip',\n      'type': 'none',\n      'dependencies': [\n        '<(project_name)',\n      ],\n      'conditions': [\n        ['OS==\"linux\"', {\n          'actions': [\n            {\n              'action_name': 'Strip Binary',\n              'inputs': [\n                '<(PRODUCT_DIR)/libchromiumcontent.so',\n                '<(PRODUCT_DIR)/libffmpegsumo.so',\n                '<(PRODUCT_DIR)/<(project_name)',\n              ],\n              'outputs': [\n                # Gyp action requires a output file, add a fake one here.\n                '<(PRODUCT_DIR)/dummy_file',\n              ],\n              'action': [\n                'tools/posix/strip.sh',\n                '<@(_inputs)',\n              ],\n            },\n          ],\n        }],  # OS==\"linux\"\n      ],\n    },  # target <(project_name>_strip\n  ],\n  'conditions': [\n    ['OS==\"mac\"', {\n      'targets': [\n        {\n          'target_name': '<(project_name)_framework',\n          'product_name': '<(framework_name)',\n          'type': 'shared_library',\n          'dependencies': [\n            '<(project_name)_lib',\n          ],\n          'sources': [\n            '<@(framework_sources)',\n          ],\n          'include_dirs': [\n            '.',\n            'vendor',\n            '<(libchromiumcontent_include_dir)',\n          ],\n          'export_dependent_settings': [\n            '<(project_name)_lib',\n          ],\n          'link_settings': {\n            'libraries': [\n              '$(SDKROOT)/System/Library/Frameworks/Carbon.framework',\n              '$(SDKROOT)/System/Library/Frameworks/QuartzCore.framework',\n            ],\n          },\n          'mac_bundle': 1,\n          'mac_bundle_resources': [\n            '<(libchromiumcontent_resources_dir)/content_shell.pak',\n            '<(libchromiumcontent_resources_dir)/icudtl.dat',\n          ],\n          'xcode_settings': {\n            'INFOPLIST_FILE': 'src/common/resources/mac/Info.plist',\n            'LIBRARY_SEARCH_PATHS': [\n              '<(libchromiumcontent_library_dir)',\n            ],\n            'LD_DYLIB_INSTALL_NAME': '@rpath/<(framework_name).framework/<(framework_name)',\n            'LD_RUNPATH_SEARCH_PATHS': [\n              '@loader_path/Libraries',\n            ],\n            'OTHER_LDFLAGS': [\n              '-ObjC',\n            ],\n          },\n          'copies': [\n            {\n              'destination': '<(PRODUCT_DIR)/<(framework_name).framework/Versions/A/Libraries',\n              'files': [\n                '<(libchromiumcontent_library_dir)/ffmpegsumo.so',\n                '<(libchromiumcontent_library_dir)/libchromiumcontent.dylib',\n              ],\n            },\n          ],\n          'postbuilds': [\n            {\n              'postbuild_name': 'Add symlinks for framework subdirectories',\n              'action': [\n                'tools/mac/create-framework-subdir-symlinks.sh',\n                '<(framework_name)',\n                'Libraries',\n                'Frameworks',\n              ],\n            },\n          ],\n        },  # target framework\n        {\n          'target_name': '<(project_name)_helper',\n          'product_name': '<(product_name) Helper',\n          'type': 'executable',\n          'dependencies': [\n            '<(project_name)_framework',\n          ],\n          'sources': [\n            '<@(app_sources)',\n          ],\n          'include_dirs': [\n            '.',\n          ],\n          'mac_bundle': 1,\n          'xcode_settings': {\n            'INFOPLIST_FILE': 'src/renderer/resources/mac/Info.plist',\n            'LD_RUNPATH_SEARCH_PATHS': [\n              '@executable_path/../../..',\n            ],\n          },\n        },  # target helper\n      ],\n    }, {  # OS==\"mac\"\n      'targets': [\n        {\n          'target_name': 'make_locale_paks',\n          'type': 'none',\n          'actions': [\n            {\n              'action_name': 'Make Empty Paks',\n              'inputs': [\n                'tools/posix/make_locale_paks.sh',\n              ],\n              'outputs': [\n                '<(PRODUCT_DIR)/locales'\n              ],\n              'action': [\n                'tools/posix/make_locale_paks.sh',\n                '<(PRODUCT_DIR)',\n                '<@(locales)',\n              ],\n              'msvs_cygwin_shell': 0,\n            },\n          ],\n        },\n      ],\n    }],  # OS!=\"mac\"\n  ],\n}\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}