{
  "metadata": {
    "timestamp": 1736565221360,
    "page": 21,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/SPTAG",
      "stars": 4854,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.041015625,
          "content": "*.bin filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 7.2041015625,
          "content": "# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Log files\n*.tlog\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\n*.cmd\n*.user\n*.db\n*.opendb\nmodules.order\nModule.symvers\ndkms.conf\n/Wrappers/inc/*wrap.*\n/Wrappers/inc/*.py\n/Wrappers/inc/*.java\n/.vs\n/obj\n/x64\n/build\n/ipch\n/packages\n/out/build/x64-Debug\n/sgKey.snk\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n*.ncb\n*.aps\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.109375,
          "content": "[submodule \"ThirdParty/zstd\"]\n\tpath = ThirdParty/zstd\n\turl = https://github.com/facebook/zstd\n\tbranch = release\n"
        },
        {
          "name": "AnnService.users.props",
          "type": "blob",
          "size": 0.70703125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"$(SolutionDir)AnnService.users.props.user\" Condition=\"Exists('$(SolutionDir)AnnService.users.props.user')\" />\n\n  <ItemDefinitionGroup>\n    <ClCompile>\n      <AdditionalOptions>$(SystemVersionDef) %(AdditionalOptions)</AdditionalOptions>\n    </ClCompile>\n  </ItemDefinitionGroup>\n\n  <PropertyGroup Label=\"UserMacros\">\n\t<OutAppDir>$(SolutionDir)\\$(Platform)\\$(Configuration)\\</OutAppDir>\n\t<OutLibDir>$(SolutionDir)\\$(Platform)\\$(Configuration)\\</OutLibDir>\n\t<JavaIncDir></JavaIncDir>\n\t<JavaLib></JavaLib>\n  <PYTHON_VERSION>3.9</PYTHON_VERSION>\n  </PropertyGroup>\n</Project>\n\n"
        },
        {
          "name": "AnnService",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.4775390625,
          "content": "# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n\ncmake_minimum_required (VERSION 3.12)\n\nproject (SPTAGLib)\n\nfunction(CXX_COMPILER_DUMPVERSION _OUTPUT_VERSION)\n  exec_program(${CMAKE_CXX_COMPILER}\n    ARGS ${CMAKE_CXX_COMPILER_ARG1} -dumpversion\n    OUTPUT_VARIABLE COMPILER_VERSION\n  )\n\n  set(${_OUTPUT_VERSION} ${COMPILER_VERSION} PARENT_SCOPE)\nendfunction()\n\nif(NOT WIN32)\n    CXX_COMPILER_DUMPVERSION(CXX_COMPILER_VERSION)\nendif()\n\nif(${CMAKE_CXX_COMPILER_ID} STREQUAL \"GNU\")\n    # require at least gcc 5.0\n    if (CXX_COMPILER_VERSION VERSION_LESS 5.0)\n        message(FATAL_ERROR \"GCC version must be at least 5.0!\")\n    endif()\n    set (CMAKE_CXX_FLAGS \"-Wall -Wunreachable-code -Wno-reorder -Wno-delete-non-virtual-dtor -Wno-sign-compare -Wno-unknown-pragmas -Wcast-align -lm -lrt -std=c++14 -fopenmp\")\n    set (CMAKE_CXX_FLAGS_RELEASE \"-DNDEBUG -O3 -march=native\")\n    set (CMAKE_CXX_FLAGS_DEBUG   \"-g -DDEBUG\")\n\n\n    find_path(NUMA_INCLUDE_DIR NAME numa.h\n      HINTS $ENV{HOME}/local/include /opt/local/include /usr/local/include /usr/include)\n  \n    find_library(NUMA_LIBRARY NAME libnuma.so\n      HINTS $ENV{HOME}/local/lib64 $ENV{HOME}/local/lib /usr/local/lib64 /usr/local/lib /opt/local/lib64 /opt/local/lib /usr/lib64 /usr/lib)\n\n    find_library(NUMA_LIBRARY_STATIC NAME libnuma.a\n      HINTS $ENV{HOME}/local/lib64 $ENV{HOME}/local/lib /usr/local/lib64 /usr/local/lib /opt/local/lib64 /opt/local/lib /usr/lib64 /usr/lib)\n  \n    if (NUMA_INCLUDE_DIR AND NUMA_LIBRARY AND NUMA_LIBRARY_STATIC)\n        set (CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -lnuma\")\n        set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -lnuma\")\n\n        include_directories (${NUMA_INCLUDE_DIR})\n        message (STATUS \"Found numa library: inc=${NUMA_INCLUDE_DIR}, lib=${NUMA_LIBRARY}, staticlib=${NUMA_LIBRARY_STATIC}\")\n        add_definitions(-DNUMA)\n    else ()\n        set (NUMA_LIBRARY \"\")\n        set (NUMA_LIBRARY_STATIC \"\")\n        message (STATUS \"WARNING: Numa library not found.\")\n        message (STATUS \"Try: 'sudo yum install numactl numactl-devel' (or sudo apt-get install libnuma libnuma-dev)\")\n    endif ()\n\nelseif(WIN32)\n    if(NOT MSVC14)\n         message(FATAL_ERROR \"On Windows, only MSVC version 14 are supported!\") \n    endif()\n    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /std:c++14\")\n\n    message(STATUS \"CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}\")\nelse ()\n    message(FATAL_ERROR \"Unrecognized compiler (use GCC or MSVC)!\")\nendif()\n\nif (NOT CMAKE_BUILD_TYPE)\n    set (CMAKE_BUILD_TYPE Release CACHE STRING \"Build types: Release Debug\" FORCE)\nendif()\nmessage (STATUS \"Build type: ${CMAKE_BUILD_TYPE}\")\n\nif (${CMAKE_SIZEOF_VOID_P} EQUAL \"8\")\n    set (PROJECTNAME_ARCHITECTURE \"x64\")\nelse ()\n    set (PROJECTNAME_ARCHITECTURE \"x86\")\nendif ()\nmessage (STATUS \"Platform type: ${PROJECTNAME_ARCHITECTURE}\")\n\nset(Boost_USE_MULTITHREADED ON)\n\nif (WIN32)\n    set(Boost_USE_STATIC_LIBS ON)\n\n    set(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE})\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})\n    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})\n    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})\n\n    set (LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})\n    set (EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR})\nelse()\n    set (LIBRARY_OUTPUT_PATH \"${PROJECT_SOURCE_DIR}/${CMAKE_BUILD_TYPE}/\")\n    set (EXECUTABLE_OUTPUT_PATH \"${PROJECT_SOURCE_DIR}/${CMAKE_BUILD_TYPE}/\")\nendif()\n\nset (CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\nfind_package(OpenMP)\nif (OpenMP_FOUND)\n    set (CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\")\n    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n    set (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}\")\n    message (STATUS \"Found openmp.\")\nelse()\n    message (FATAL_ERROR \"Could no find openmp!\")\nendif()\n\nfind_package(Boost 1.66 COMPONENTS system thread serialization wserialization regex filesystem)\nif (Boost_FOUND)\n    include_directories (${Boost_INCLUDE_DIR})\n    link_directories (${Boost_LIBRARY_DIR})\n    message (STATUS \"Found Boost.\")\n    message (STATUS \"Include Path: ${Boost_INCLUDE_DIRS}\")\n    message (STATUS \"Library Path: ${Boost_LIBRARY_DIRS}\")\n    message (STATUS \"Library: ${Boost_LIBRARIES}\")\nelse()\n    message (FATAL_ERROR \"Could not find Boost >= 1.67!\")\nendif()\n\noption(GPU \"GPU\" ON)\noption(LIBRARYONLY \"LIBRARYONLY\" OFF)\n\nadd_subdirectory (ThirdParty/zstd/build/cmake)\n\nadd_subdirectory (AnnService)\nadd_subdirectory (Test)\nadd_subdirectory (GPUSupport)\nadd_subdirectory (Wrappers)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.818359375,
          "content": "FROM mcr.microsoft.com/oss/mirror/docker.io/library/ubuntu:20.04\nWORKDIR /app\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get -y install wget build-essential swig cmake git libnuma-dev python3.8-dev python3-distutils gcc-8 g++-8 \\\n    libboost-filesystem-dev libboost-test-dev libboost-serialization-dev libboost-regex-dev libboost-serialization-dev libboost-regex-dev libboost-thread-dev libboost-system-dev\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && python3.8 get-pip.py && python3.8 -m pip install numpy\n\nENV PYTHONPATH=/app/Release\n\nCOPY CMakeLists.txt ./\nCOPY AnnService ./AnnService/\nCOPY Test ./Test/\nCOPY Wrappers ./Wrappers/\nCOPY GPUSupport ./GPUSupport/\nCOPY ThirdParty ./ThirdParty/\n\nRUN export CC=/usr/bin/gcc-8 && export CXX=/usr/bin/g++-8 && mkdir build && cd build && cmake .. && make -j && cd ..\n"
        },
        {
          "name": "Dockerfile.cuda",
          "type": "blob",
          "size": 1.9375,
          "content": "FROM mcr.microsoft.com/mirror/nvcr/nvidia/cuda:11.8.0-base-ubuntu20.04\nWORKDIR /app\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub\n\nRUN apt-get -y install wget build-essential swig cmake git libnuma-dev python3.8-dev python3-distutils gcc-8 g++-8 \\\n    libboost-filesystem-dev libboost-test-dev libboost-serialization-dev libboost-regex-dev libboost-serialization-dev libboost-regex-dev libboost-thread-dev libboost-system-dev\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && python3.8 get-pip.py && python3.8 -m pip install numpy\n\nRUN git clone https://github.com/NVIDIA/cub && cd cub && git checkout c3cceac && cp -r cub /usr/include/ && cd ..\n\nRUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin && mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 \\\n    && wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-ubuntu2004-11-8-local_11.8.0-520.61.05-1_amd64.deb \\\n    && dpkg -i cuda-repo-ubuntu2004-11-8-local_11.8.0-520.61.05-1_amd64.deb && cp /var/cuda-repo-ubuntu2004-11-8-local/cuda-*-keyring.gpg /usr/share/keyrings/ \\\n    && apt-get update && apt-get install -y cuda-toolkit-11-8\n\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"11.8.0\"\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV NVIDIA_REQUIRE_CUDA \"cuda>=11.0\"\n\n\nENV PYTHONPATH=/app/Release\n\nCOPY CMakeLists.txt ./\nCOPY AnnService ./AnnService/\nCOPY Test ./Test/\nCOPY Wrappers ./Wrappers/\nCOPY GPUSupport ./GPUSupport/\nCOPY ThirdParty ./ThirdParty/\n\nRUN export CC=/usr/bin/gcc-8 && export CXX=/usr/bin/g++-8 && mkdir build && cd build && cmake .. && make -j && cd ..\n"
        },
        {
          "name": "GPUSupport",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1337890625,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0634765625,
          "content": "recursive-include sptag *.py _SPTAG* *.so *.dll Server.exe server"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.98046875,
          "content": "# SPTAG: A library for fast approximate nearest neighbor search\n\n[![MIT licensed](https://img.shields.io/badge/license-MIT-yellow.svg)](https://github.com/Microsoft/SPTAG/blob/master/LICENSE)\n[![Build status](https://sysdnn.visualstudio.com/SPTAG/_apis/build/status/SPTAG-GITHUB)](https://sysdnn.visualstudio.com/SPTAG/_build/latest?definitionId=2)\n\n## **SPTAG**\n SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by [Microsoft Research (MSR)](https://www.msra.cn/) and [Microsoft Bing](http://bing.com). \n\n <p align=\"center\">\n <img src=\"docs/img/sptag.png\" alt=\"architecture\" width=\"500\"/>\n </p>\n\n## What's NEW\n* Result Iterator with Relaxed Monotonicity Signal Support\n* New Research Paper [SPFresh: Incremental In-Place Update for Billion-Scale Vector Search](https://dl.acm.org/doi/10.1145/3600006.3613166) - _published in SOSP 2023_\n* New Research Paper [VBASE: Unifying Online Vector Similarity Search and Relational Queries via Relaxed Monotonicity](https://www.usenix.org/system/files/osdi23-zhang-qianxi_1.pdf) - _published in OSDI 2023_\n\n## **Introduction**\n \nThis library assumes that the samples are represented as vectors and that the vectors can be compared by L2 distances or cosine distances. \nVectors returned for a query vector are the vectors that have smallest L2 distance or cosine distances with the query vector. \n\nSPTAG provides two methods: kd-tree and relative neighborhood graph (SPTAG-KDT) \nand balanced k-means tree and relative neighborhood graph (SPTAG-BKT).\nSPTAG-KDT is advantageous in index building cost, and SPTAG-BKT is advantageous in search accuracy in very high-dimensional data.\n\n\n\n## **How it works**\n\nSPTAG is inspired by the NGS approach [[WangL12](#References)]. It contains two basic modules: index builder and searcher. \nThe RNG is built on the k-nearest neighborhood graph [[WangWZTG12](#References), [WangWJLZZH14](#References)] \nfor boosting the connectivity. Balanced k-means trees are used to replace kd-trees to avoid the inaccurate distance bound estimation in kd-trees for very high-dimensional vectors.\nThe search begins with the search in the space partition trees for \nfinding several seeds to start the search in the RNG. \nThe searches in the trees and the graph are iteratively conducted. \n\n ## **Highlights**\n  * Fresh update: Support online vector deletion and insertion\n  * Distributed serving: Search over multiple machines\n\n ## **Build**\n\n### **Requirements**\n\n* swig >= 4.0.2\n* cmake >= 3.12.0\n* boost >= 1.67.0\n\n### **Fast clone**\n\n```\nset GIT_LFS_SKIP_SMUDGE=1\ngit clone --recurse-submodules https://github.com/microsoft/SPTAG\n\nOR\n\ngit config --global filter.lfs.smudge \"git-lfs smudge --skip -- %f\"\ngit config --global filter.lfs.process \"git-lfs filter-process --skip\"\n```\n\n### **Install**\n\n> For Linux:\n```bash\nmkdir build\ncd build && cmake .. && make\n```\nIt will generate a Release folder in the code directory which contains all the build targets.\n\n> For Windows:\n```bash\nmkdir build\ncd build && cmake -A x64 ..\n```\nIt will generate a SPTAGLib.sln in the build directory. \nCompiling the ALL_BUILD project in the Visual Studio (at least 2019) will generate a Release directory which contains all the build targets.\n\nFor detailed instructions on installing Windows binaries, please see [here](docs/WindowsInstallation.md)\n\n> Using Docker:\n```bash\ndocker build -t sptag .\n```\nWill build a docker container with binaries in `/app/Release/`.\n\n### **Verify** \n\nRun the SPTAGTest (or Test.exe) in the Release folder to verify all the tests have passed.\n\n### **Usage**\n\nThe detailed usage can be found in [Get started](docs/GettingStart.md). There is also an end-to-end tutorial for building vector search online service using Python Wrapper in [Python Tutorial](docs/Tutorial.ipynb).\nThe detailed parameters tunning can be found in [Parameters](docs/Parameters.md).\n\n## **References**\nPlease cite SPTAG in your publications if it helps your research:\n```\n@inproceedings{xu2023spfresh,\n  title={SPFresh: Incremental In-Place Update for Billion-Scale Vector Search},\n  author={Xu, Yuming and Liang, Hengyu and Li, Jin and Xu, Shuotao and Chen, Qi and Zhang, Qianxi and Li, Cheng and Yang, Ziyue and Yang, Fan and Yang, Yuqing and others},\n  booktitle={Proceedings of the 29th Symposium on Operating Systems Principles},\n  pages={545--561},\n  year={2023}\n}\n\n@inproceedings{zhang2023vbase,\n  title={$\\{$VBASE$\\}$: Unifying Online Vector Similarity Search and Relational Queries via Relaxed Monotonicity},\n  author={Zhang, Qianxi and Xu, Shuotao and Chen, Qi and Sui, Guoxin and Xie, Jiadong and Cai, Zhizhen and Chen, Yaoqi and He, Yinxuan and Yang, Yuqing and Yang, Fan and others},\n  booktitle={17th USENIX Symposium on Operating Systems Design and Implementation (OSDI 23)},\n  year={2023}\n}\n\n@inproceedings{ChenW21,\n  author = {Qi Chen and \n            Bing Zhao and \n            Haidong Wang and \n            Mingqin Li and \n            Chuanjie Liu and \n            Zengzhong Li and \n            Mao Yang and \n            Jingdong Wang},\n  title = {SPANN: Highly-efficient Billion-scale Approximate Nearest Neighbor Search},\n  booktitle = {35th Conference on Neural Information Processing Systems (NeurIPS 2021)},\n  year = {2021}\n}\n\n@manual{ChenW18,\n  author    = {Qi Chen and\n               Haidong Wang and\n               Mingqin Li and \n               Gang Ren and\n               Scarlett Li and\n               Jeffery Zhu and\n               Jason Li and\n               Chuanjie Liu and\n               Lintao Zhang and\n               Jingdong Wang},\n  title     = {SPTAG: A library for fast approximate nearest neighbor search},\n  url       = {https://github.com/Microsoft/SPTAG},\n  year      = {2018}\n}\n\n@inproceedings{WangL12,\n  author    = {Jingdong Wang and\n               Shipeng Li},\n  title     = {Query-driven iterated neighborhood graph search for large scale indexing},\n  booktitle = {ACM Multimedia 2012},\n  pages     = {179--188},\n  year      = {2012}\n}\n\n@inproceedings{WangWZTGL12,\n  author    = {Jing Wang and\n               Jingdong Wang and\n               Gang Zeng and\n               Zhuowen Tu and\n               Rui Gan and\n               Shipeng Li},\n  title     = {Scalable k-NN graph construction for visual descriptors},\n  booktitle = {CVPR 2012},\n  pages     = {1106--1113},\n  year      = {2012}\n}\n\n@article{WangWJLZZH14,\n  author    = {Jingdong Wang and\n               Naiyan Wang and\n               You Jia and\n               Jian Li and\n               Gang Zeng and\n               Hongbin Zha and\n               Xian{-}Sheng Hua},\n  title     = {Trinary-Projection Trees for Approximate Nearest Neighbor Search},\n  journal   = {{IEEE} Trans. Pattern Anal. Mach. Intell.},\n  volume    = {36},\n  number    = {2},\n  pages     = {388--403},\n  year      = {2014\n}\n```\n\n## **Contribute**\n\nThis project welcomes contributions and suggestions from all the users.\n\nWe use [GitHub issues](https://github.com/Microsoft/SPTAG/issues) for tracking suggestions and bugs.\n\n## **License**\nThe entire codebase is under [MIT license](https://github.com/Microsoft/SPTAG/blob/master/LICENSE)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.8 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "SPTAG.WinRT.nuspec",
          "type": "blob",
          "size": 1.447265625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>SPTAG.WinRT</id>\r\n    <version>1.2.13-mainOPQ-CoreLib-SPANN-withsource-a6b7604</version>\r\n    <title>SPTAG.WinRT</title>\r\n    <authors>cheqi,haidwa,mingqli</authors>\r\n    <owners>cheqi,haidwa,mingqli,zhah</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <licenseUrl>https://github.com/microsoft/SPTAG</licenseUrl>\r\n    <projectUrl>https://github.com/microsoft/SPTAG</projectUrl>\r\n    <description>SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by Microsoft Research (MSR) and Microsoft Bing.</description>\r\n    <releaseNotes>publish with commit microsoft/add python version in wheel package/a6b7604</releaseNotes>\r\n    <copyright>Copyright © Microsoft</copyright>\r\n    <dependencies>\r\n      <group targetFramework=\"uap10.0\">\r\n        <dependency id=\"Zstandard.dyn.x64\" version=\"1.4.0\" />\t\r\n      </group>\r\n      <group targetFramework=\"native\">\r\n        <dependency id=\"Zstandard.dyn.x64\" version=\"1.4.0\" />\t\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"Wrappers\\WinRT\\SPTAG.WinRT.targets\" target=\"build\\native\" />\r\n    <file src=\"x64\\Release\\SPTAG.WinRT\\SPTAG.winmd\" target=\"lib\\uap10.0\" />\r\n    <file src=\"x64\\Release\\SPTAG.WinRT\\SPTAG.dll\" target=\"runtimes\\win10-x64\\native\" />\r\n    <file src=\"readme.md\" />\r\n    <file src=\"LICENSE\" />\r\n  </files>\r\n</package>"
        },
        {
          "name": "SPTAG.nuspec",
          "type": "blob",
          "size": 11.6123046875,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/10/nuspec.xsd\">\n  <metadata>\n    <id>SPTAG.Library</id>\n    <version>1.2.13-mainOPQ-CoreLib-SPANN-withsource-a6b7604</version>\n    <title>SPTAG.Library</title>\n    <authors>cheqi,haidwa,mingqli</authors>\n    <owners>cheqi,haidwa,mingqli,zhah</owners>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <licenseUrl>https://github.com/microsoft/SPTAG</licenseUrl>\n    <projectUrl>https://github.com/microsoft/SPTAG</projectUrl>\n    <description>SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by Microsoft Research (MSR) and Microsoft Bing.</description>\n    <releaseNotes>publish with commit microsoft/add python version in wheel package/a6b7604</releaseNotes>\n    <copyright>Copyright © Microsoft</copyright>\n  </metadata>\n  <files>\n    <file src=\"AnnService\\inc\\Core\\BKT\\Index.h\" target=\"build\\native\\inc\\Core\\BKT\\Index.h\" />\n    <file src=\"AnnService\\inc\\Core\\BKT\\ParameterDefinitionList.h\" target=\"build\\native\\inc\\Core\\BKT\\ParameterDefinitionList.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\Distance.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\Distance.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\Kmeans.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\Kmeans.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\KNN.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\KNN.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\params.h\" target=\"build\\native\\inc\\Core\\Common\\cuda\\params.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\Refine.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\Refine.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\TailNeighbors.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\TailNeighbors.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\ThreadHeap.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\ThreadHeap.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\cuda\\TPtree.hxx\" target=\"build\\native\\inc\\Core\\Common\\cuda\\TPtree.hxx\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\BKTree.h\" target=\"build\\native\\inc\\Core\\Common\\BKTree.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\CommonUtils.h\" target=\"build\\native\\inc\\Core\\Common\\CommonUtils.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\Dataset.h\" target=\"build\\native\\inc\\Core\\Common\\Dataset.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\DistanceUtils.h\" target=\"build\\native\\inc\\Core\\Common\\DistanceUtils.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\SIMDUtils.h\" target=\"build\\native\\inc\\Core\\Common\\SIMDUtils.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\FineGrainedLock.h\" target=\"build\\native\\inc\\Core\\Common\\FineGrainedLock.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\Heap.h\" target=\"build\\native\\inc\\Core\\Common\\Heap.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\InstructionUtils.h\" target=\"build\\native\\inc\\Core\\Common\\InstructionUtils.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\IQuantizer.h\" target=\"build\\native\\inc\\Core\\Common\\IQuantizer.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\KDTree.h\" target=\"build\\native\\inc\\Core\\Common\\KDTree.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\KNearestNeighborhoodGraph.h\" target=\"build\\native\\inc\\Core\\Common\\KNearestNeighborhoodGraph.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\Labelset.h\" target=\"build\\native\\inc\\Core\\Common\\Labelset.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\NeighborhoodGraph.h\" target=\"build\\native\\inc\\Core\\Common\\NeighborhoodGraph.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\OPQQuantizer.h\" target=\"build\\native\\inc\\Core\\Common\\OPQQuantizer.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\PQQuantizer.h\" target=\"build\\native\\inc\\Core\\Common\\PQQuantizer.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\QueryResultSet.h\" target=\"build\\native\\inc\\Core\\Common\\QueryResultSet.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\RelativeNeighborhoodGraph.h\" target=\"build\\native\\inc\\Core\\Common\\RelativeNeighborhoodGraph.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\TruthSet.h\" target=\"build\\native\\inc\\Core\\Common\\TruthSet.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\WorkSpace.h\" target=\"build\\native\\inc\\Core\\Common\\WorkSpace.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common\\WorkSpacePool.h\" target=\"build\\native\\inc\\Core\\Common\\WorkSpacePool.h\" />\n    <file src=\"AnnService\\inc\\Core\\KDT\\Index.h\" target=\"build\\native\\inc\\Core\\KDT\\Index.h\" />\n    <file src=\"AnnService\\inc\\Core\\KDT\\ParameterDefinitionList.h\" target=\"build\\native\\inc\\Core\\KDT\\ParameterDefinitionList.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\ExtraFullGraphSearcher.h\" target=\"build\\native\\inc\\Core\\SPANN\\ExtraFullGraphSearcher.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\IExtraSearcher.h\" target=\"build\\native\\inc\\Core\\SPANN\\IExtraSearcher.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\Index.h\" target=\"build\\native\\inc\\Core\\SPANN\\Index.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\Compressor.h\" target=\"build\\native\\inc\\Core\\SPANN\\Compressor.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\Options.h\" target=\"build\\native\\inc\\Core\\SPANN\\Options.h\" />\n    <file src=\"AnnService\\inc\\Core\\SPANN\\ParameterDefinitionList.h\" target=\"build\\native\\inc\\Core\\SPANN\\ParameterDefinitionList.h\" />\n    <file src=\"AnnService\\inc\\Core\\Common.h\" target=\"build\\native\\inc\\Core\\Common.h\" />\n    <file src=\"AnnService\\inc\\Core\\CommonDataStructure.h\" target=\"build\\native\\inc\\Core\\CommonDataStructure.h\" />\n    <file src=\"AnnService\\inc\\Core\\DefinitionList.h\" target=\"build\\native\\inc\\Core\\DefinitionList.h\" />\n    <file src=\"AnnService\\inc\\Core\\MetadataSet.h\" target=\"build\\native\\inc\\Core\\MetadataSet.h\" />\n    <file src=\"AnnService\\inc\\Core\\SearchQuery.h\" target=\"build\\native\\inc\\Core\\SearchQuery.h\" />\n    <file src=\"AnnService\\inc\\Core\\SearchResult.h\" target=\"build\\native\\inc\\Core\\SearchResult.h\" />\n    <file src=\"AnnService\\inc\\Core\\VectorIndex.h\" target=\"build\\native\\inc\\Core\\VectorIndex.h\" />\n    <file src=\"AnnService\\inc\\Core\\VectorSet.h\" target=\"build\\native\\inc\\Core\\VectorSet.h\" />\n    <file src=\"AnnService\\inc\\Helper\\VectorSetReaders\\DefaultReader.h\" target=\"build\\native\\inc\\Helper\\VectorSetReaders\\DefaultReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\VectorSetReaders\\MemoryReader.h\" target=\"build\\native\\inc\\Helper\\VectorSetReaders\\MemoryReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\VectorSetReaders\\TxtReader.h\" target=\"build\\native\\inc\\Helper\\VectorSetReaders\\TxtReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\VectorSetReaders\\XvecReader.h\" target=\"build\\native\\inc\\Helper\\VectorSetReaders\\XvecReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\ArgumentsParser.h\" target=\"build\\native\\inc\\Helper\\ArgumentsParser.h\" />\n    <file src=\"AnnService\\inc\\Helper\\AsyncFileReader.h\" target=\"build\\native\\inc\\Helper\\AsyncFileReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\Base64Encode.h\" target=\"build\\native\\inc\\Helper\\Base64Encode.h\" />\n    <file src=\"AnnService\\inc\\Helper\\CommonHelper.h\" target=\"build\\native\\inc\\Helper\\CommonHelper.h\" />\n    <file src=\"AnnService\\inc\\Helper\\Concurrent.h\" target=\"build\\native\\inc\\Helper\\Concurrent.h\" />\n    <file src=\"AnnService\\inc\\Helper\\ConcurrentSet.h\" target=\"build\\native\\inc\\Helper\\ConcurrentSet.h\" />\n    <file src=\"AnnService\\inc\\Helper\\DiskIO.h\" target=\"build\\native\\inc\\Helper\\DiskIO.h\" />\n    <file src=\"AnnService\\inc\\Helper\\DynamicNeighbors.h\" target=\"build\\native\\inc\\Helper\\DynamicNeighbors.h\" />\n    <file src=\"AnnService\\inc\\Helper\\LockFree.h\" target=\"build\\native\\inc\\Helper\\LockFree.h\" />\n    <file src=\"AnnService\\inc\\Helper\\Logging.h\" target=\"build\\native\\inc\\Helper\\Logging.h\" />\n    <file src=\"AnnService\\inc\\Helper\\SimpleIniReader.h\" target=\"build\\native\\inc\\Helper\\SimpleIniReader.h\" />\n    <file src=\"AnnService\\inc\\Helper\\StringConvert.h\" target=\"build\\native\\inc\\Helper\\StringConvert.h\" />\n    <file src=\"AnnService\\inc\\Helper\\ThreadPool.h\" target=\"build\\native\\inc\\Helper\\ThreadPool.h\" />\n    <file src=\"AnnService\\inc\\Helper\\VectorSetReader.h\" target=\"build\\native\\inc\\Helper\\VectorSetReader.h\" />\n    <file src=\"AnnService\\src\\Core\\BKT\\BKTIndex.cpp\" target=\"build\\native\\src\\Core\\BKT\\BKTIndex.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\CommonUtils.cpp\" target=\"build\\native\\src\\Core\\Common\\CommonUtils.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\DistanceUtils.cpp\" target=\"build\\native\\src\\Core\\Common\\DistanceUtils.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\InstructionUtils.cpp\" target=\"build\\native\\src\\Core\\Common\\InstructionUtils.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\IQuantizer.cpp\" target=\"build\\native\\src\\Core\\Common\\IQuantizer.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\NeighborhoodGraph.cpp\" target=\"build\\native\\src\\Core\\Common\\NeighborhoodGraph.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\SIMDUtils.cpp\" target=\"build\\native\\src\\Core\\Common\\SIMDUtils.cpp\" />\n    <file src=\"AnnService\\src\\Core\\Common\\TruthSet.cpp\" target=\"build\\native\\src\\Core\\Common\\TruthSet.cpp\" />\n    <file src=\"AnnService\\src\\Core\\KDT\\KDTIndex.cpp\" target=\"build\\native\\src\\Core\\KDT\\KDTIndex.cpp\" />\n    <file src=\"AnnService\\src\\Core\\SPANN\\SPANNIndex.cpp\" target=\"build\\native\\src\\Core\\SPANN\\SPANNIndex.cpp\" />\n    <file src=\"AnnService\\src\\Core\\MetadataSet.cpp\" target=\"build\\native\\src\\Core\\MetadataSet.cpp\" />\n    <file src=\"AnnService\\src\\Core\\VectorIndex.cpp\" target=\"build\\native\\src\\Core\\VectorIndex.cpp\" />\n    <file src=\"AnnService\\src\\Core\\VectorSet.cpp\" target=\"build\\native\\src\\Core\\VectorSet.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\VectorSetReader.cpp\" target=\"build\\native\\src\\Helper\\VectorSetReader.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\SimpleIniReader.cpp\" target=\"build\\native\\src\\Helper\\SimpleIniReader.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\DynamicNeighbors.cpp\" target=\"build\\native\\src\\Helper\\DynamicNeighbors.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\Concurrent.cpp\" target=\"build\\native\\src\\Helper\\Concurrent.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\CommonHelper.cpp\" target=\"build\\native\\src\\Helper\\CommonHelper.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\Base64Encode.cpp\" target=\"build\\native\\src\\Helper\\Base64Encode.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\AsyncFileReader.cpp\" target=\"build\\native\\src\\Helper\\AsyncFileReader.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\ArgumentsParser.cpp\" target=\"build\\native\\src\\Helper\\ArgumentsParser.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\VectorSetReaders\\DefaultReader.cpp\" target=\"build\\native\\src\\Helper\\VectorSetReaders\\DefaultReader.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\VectorSetReaders\\TxtReader.cpp\" target=\"build\\native\\src\\Helper\\VectorSetReaders\\TxtReader.cpp\" />\n    <file src=\"AnnService\\src\\Helper\\VectorSetReaders\\XvecReader.cpp\" target=\"build\\native\\src\\Helper\\VectorSetReaders\\XvecReader.cpp\" />\n    <file src=\"ThirdParty\\zstd\\lib\\zdict.h\" target=\"build\\native\\zdict.h\" />\n    <file src=\"ThirdParty\\zstd\\lib\\zstd.h\" target=\"build\\native\\zstd.h\" />\n    <file src=\"ThirdParty\\zstd\\lib\\zstd_errors.h\" target=\"build\\native\\zstd_errors.h\" />\n    <file src=\"x64\\Debug\\CoreLibrary.lib\" target=\"lib\\native\\debug\\x64\\CoreLibrary.lib\" />\n    <file src=\"x64\\Debug\\CoreLibrary.pdb\" target=\"lib\\native\\debug\\x64\\CoreLibrary.pdb\" />\n    <file src=\"x64\\Debug\\libzstd.dll\" target=\"lib\\native\\debug\\x64\\libzstd.dll\" />\n    <file src=\"x64\\Release\\CoreLibrary.lib\" target=\"lib\\native\\retail\\x64\\CoreLibrary.lib\" />\n    <file src=\"x64\\Release\\CoreLibrary.pdb\" target=\"lib\\native\\retail\\x64\\CoreLibrary.pdb\" />\n    <file src=\"x64\\Release\\libzstd.dll\" target=\"lib\\native\\retail\\x64\\libzstd.dll\" />\n    <file src=\"packages\\Zstandard.dyn.x64.1.4.0\\build\\native\\x64\\libzstd.lib\" target=\"lib\\native\\debug\\x64\\libzstd.lib\" />\n    <file src=\"packages\\Zstandard.dyn.x64.1.4.0\\build\\native\\x64\\libzstd.lib\" target=\"lib\\native\\retail\\x64\\libzstd.lib\" />\n  </files>\n</package>"
        },
        {
          "name": "SPTAG.sdf",
          "type": "blob",
          "size": 64,
          "content": null
        },
        {
          "name": "SPTAG.sln",
          "type": "blob",
          "size": 19.44921875,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 17\r\nVisualStudioVersion = 17.4.33403.182\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"CoreLibrary\", \"AnnService\\CoreLibrary.vcxproj\", \"{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Server\", \"AnnService\\Server.vcxproj\", \"{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"PythonCore\", \"Wrappers\\PythonCore.vcxproj\", \"{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"SocketLib\", \"AnnService\\SocketLib.vcxproj\", \"{F9A72303-6381-4C80-86FF-606A2F6F7B96}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Client\", \"AnnService\\Client.vcxproj\", \"{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Aggregator\", \"AnnService\\Aggregator.vcxproj\", \"{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"PythonClient\", \"Wrappers\\PythonClient.vcxproj\", \"{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"IndexBuilder\", \"AnnService\\IndexBuilder.vcxproj\", \"{F492F794-E78B-4B1F-A556-5E045B9163D5}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"IndexSearcher\", \"AnnService\\IndexSearcher.vcxproj\", \"{97615D3B-9FA0-469E-B229-95A91A5087E0}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Test\", \"Test\\Test.vcxproj\", \"{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E} = {217B42B7-8F2B-4323-804C-08992CA2F65E}\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"JavaCore\", \"Wrappers\\JavaCore.vcxproj\", \"{93FEB26B-965E-4157-8BE5-052F5CA112BB}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"JavaClient\", \"Wrappers\\JavaClient.vcxproj\", \"{8866BF98-AA2E-450F-9F33-083E007CCA74}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"CsharpCore\", \"Wrappers\\CsharpCore.vcxproj\", \"{1896C009-AD46-4A70-B83C-4652A7F37503}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"CsharpClient\", \"Wrappers\\CsharpClient.vcxproj\", \"{363BA3BB-75C4-4CC7-AECB-28C7534B3710}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96} = {F9A72303-6381-4C80-86FF-606A2F6F7B96}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"CLRCore\", \"Wrappers\\CLRCore.vcxproj\", \"{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GPUCoreLibrary\", \"AnnService\\GPUCoreLibrary.vcxproj\", \"{84A84DBE-D46B-4EC9-8948-FF150DE5D386}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GPUIndexBuilder\", \"AnnService\\GPUIndexBuilder.vcxproj\", \"{85106062-3D9F-4B52-AFF3-97D0F9575888}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{84A84DBE-D46B-4EC9-8948-FF150DE5D386} = {84A84DBE-D46B-4EC9-8948-FF150DE5D386}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"SSDServing\", \"AnnService\\SSDServing.vcxproj\", \"{217B42B7-8F2B-4323-804C-08992CA2F65E}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"BalancedDataPartition\", \"AnnService\\BalancedDataPartition.vcxproj\", \"{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GPUSSDServing\", \"AnnService\\GPUSSDServing.vcxproj\", \"{0CA39557-067E-4EBD-8264-9D09B00275A2}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Quantizer\", \"AnnService\\Quantizer.vcxproj\", \"{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"SPTAG\", \"Wrappers\\WinRT\\SPTAG.WinRT.vcxproj\", \"{8DC74C33-6E15-43ED-9300-2A140589E3DA}\"\r\n\tProjectSection(ProjectDependencies) = postProject\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9} = {C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"WinRTTest\", \"Test\\WinRTTest\\WinRTTest.vcxproj\", \"{C9DF3099-A142-4AA7-B936-1541816A1F21}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Release|x64.Build.0 = Release|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{C2BC5FDE-C853-4F3D-B7E4-2C9B5524DDF9}.Release|x86.Build.0 = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Release|x64.Build.0 = Release|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{E28B1222-8BEA-4A92-8FE0-088EBDAA7FE0}.Release|x86.Build.0 = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Release|x64.Build.0 = Release|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{AF31947C-0495-42FE-A1AD-8F0DA2A679C7}.Release|x86.Build.0 = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Release|x64.Build.0 = Release|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{F9A72303-6381-4C80-86FF-606A2F6F7B96}.Release|x86.Build.0 = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Release|x64.Build.0 = Release|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{A89D70C3-C53B-42DE-A5CE-9A472540F5CB}.Release|x86.Build.0 = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Debug|x86.Build.0 = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Release|x64.Build.0 = Release|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Release|x86.ActiveCfg = Debug|x64\r\n\t\t{D7F09A63-BDCA-4F6C-A864-8551D1FE447A}.Release|x86.Build.0 = Debug|x64\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Release|x64.Build.0 = Release|x64\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{9B014CF6-E3FB-4BD4-B3B1-D26297BB31AA}.Release|x86.Build.0 = Release|Win32\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Release|x64.Build.0 = Release|x64\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{F492F794-E78B-4B1F-A556-5E045B9163D5}.Release|x86.Build.0 = Release|Win32\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Release|x64.Build.0 = Release|x64\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{97615D3B-9FA0-469E-B229-95A91A5087E0}.Release|x86.Build.0 = Release|Win32\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Release|x64.Build.0 = Release|x64\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{29A25655-CCF2-47F8-8BC8-DFE1B5CF993C}.Release|x86.Build.0 = Release|Win32\r\n\t\t{93FEB26B-965E-4157-8BE5-052F5CA112BB}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{93FEB26B-965E-4157-8BE5-052F5CA112BB}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{93FEB26B-965E-4157-8BE5-052F5CA112BB}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{93FEB26B-965E-4157-8BE5-052F5CA112BB}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{8866BF98-AA2E-450F-9F33-083E007CCA74}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{8866BF98-AA2E-450F-9F33-083E007CCA74}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{8866BF98-AA2E-450F-9F33-083E007CCA74}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{8866BF98-AA2E-450F-9F33-083E007CCA74}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Release|x64.Build.0 = Release|x64\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{1896C009-AD46-4A70-B83C-4652A7F37503}.Release|x86.Build.0 = Release|Win32\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Release|x64.Build.0 = Release|x64\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{363BA3BB-75C4-4CC7-AECB-28C7534B3710}.Release|x86.Build.0 = Release|Win32\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Release|x64.Build.0 = Release|x64\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{38ACBA6C-2E50-44D4-9A6D-DC735B56E38F}.Release|x86.Build.0 = Release|Win32\r\n\t\t{84A84DBE-D46B-4EC9-8948-FF150DE5D386}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{84A84DBE-D46B-4EC9-8948-FF150DE5D386}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{84A84DBE-D46B-4EC9-8948-FF150DE5D386}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{84A84DBE-D46B-4EC9-8948-FF150DE5D386}.Release|x86.ActiveCfg = Release|x64\r\n\t\t{85106062-3D9F-4B52-AFF3-97D0F9575888}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{85106062-3D9F-4B52-AFF3-97D0F9575888}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{85106062-3D9F-4B52-AFF3-97D0F9575888}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{85106062-3D9F-4B52-AFF3-97D0F9575888}.Release|x86.ActiveCfg = Release|x64\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Release|x64.Build.0 = Release|x64\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{217B42B7-8F2B-4323-804C-08992CA2F65E}.Release|x86.Build.0 = Release|Win32\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{EB9D699A-16CB-4D51-AB39-0B170BE72FC8}.Release|x86.Build.0 = Release|Win32\r\n\t\t{0CA39557-067E-4EBD-8264-9D09B00275A2}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{0CA39557-067E-4EBD-8264-9D09B00275A2}.Debug|x86.ActiveCfg = Debug|x64\r\n\t\t{0CA39557-067E-4EBD-8264-9D09B00275A2}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{0CA39557-067E-4EBD-8264-9D09B00275A2}.Release|x86.ActiveCfg = Release|x64\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Release|x64.Build.0 = Release|x64\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{94D8008A-3AD8-4CA6-BA02-FE1458804E1D}.Release|x86.Build.0 = Release|Win32\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Release|x64.Build.0 = Release|x64\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{8DC74C33-6E15-43ED-9300-2A140589E3DA}.Release|x86.Build.0 = Release|Win32\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Release|x64.Build.0 = Release|x64\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{C9DF3099-A142-4AA7-B936-1541816A1F21}.Release|x86.Build.0 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {38BDFF12-6FEC-4B67-A7BD-436D9E2544FD}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "SPTAG.targets",
          "type": "blob",
          "size": 0.5791015625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n\n  <PropertyGroup>\n    <Native-Platform>x64</Native-Platform>\n    <_nugetNativeFolder>$(MSBuildThisFileDirectory)..\\runtimes\\win-$(Native-Platform)\\native\\</_nugetNativeFolder>\n  </PropertyGroup>\n  <ItemGroup>\n    <SPTAGRedistFiles Include=\"$(_nugetNativeFolder)*.dll\" />\n    <None Include=\"@(SPTAGRedistFiles)\">\n      <Link>%(FileName)%(Extension)</Link>\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n    </None>\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "ThirdParty",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "Wrappers",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 2.609375,
          "content": "resources:\n\n- repo: self\n\nphases:\n\n- phase: Phase_1\n\n  displayName: Agent job\n\n\n\n  condition: succeeded()\n\n  queue:\n\n    name: SPTAGBuild\n\n  steps:\n\n  - script: |  \n       mkdir build\n       cd build\n       cmake ..\n       make\n       cd ../Release\n       ./SPTAGTest \n\n    displayName: 'Command Line Script'\n\n\n\n\n\n- phase: Phase_2\n\n  displayName: Agent job\n\n\n\n  condition: succeeded()\n\n  queue:\n\n    name: Hosted\n\n    demands: \n\n   - msbuild\n\n   - visualstudio\n\n\n\n  steps:\n\n  - task: NuGetToolInstaller@0\n\n    displayName: 'Use NuGet 4.3.0'\n\n\n\n\n\n  - task: NuGetCommand@2\n\n    displayName: 'NuGet restore'\n\n    inputs:\n\n      restoreSolution: SPTAG.sln\n\n\n\n      vstsFeed: 'bae5097f-8d64-4f8f-913e-24a4eb8302c3'\n\n\n\n\n\n  - task: VSBuild@1\n\n    displayName: 'Build solution SPTAG.sln'\n\n    inputs:\n\n      solution: SPTAG.sln\n\n\n\n      vsVersion: 14.0\n\n\n\n      platform: x64\n\n\n\n      configuration: debug\n\n\n\n      msbuildArchitecture: x64\n\n\n\n      createLogFile: true\n\n\n\n\n\n  - script: '.\\x64\\Debug\\Test.exe' \n\n    displayName: 'Command Line Script'\n\n\n\n  - task: CopyFiles@2\n\n    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'\n\n    inputs:\n\n      SourceFolder: x64/Debug/\n\n\n\n      Contents: '*'\n\n\n\n      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n\n\n\n\n\n  - task: PublishBuildArtifacts@1\n\n    displayName: 'Publish Artifact: drop'\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-binskim.BinSkim@3\n\n    displayName: 'Run BinSkim '\n\n    inputs:\n\n      InputType: Basic\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2\n\n    displayName: 'Run CredScan'\n\n    inputs:\n\n      scanFolder: AnnService\n\n\n\n      suppressAsError: true\n\n\n\n      verboseOutput: true\n\n\n\n      debugMode: false\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-autoapplicability.AutoApplicability@1\n\n    displayName: 'Run AutoApplicability'\n\n    inputs:\n\n      IsSoftware: true\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@2\n\n    displayName: 'Publish Security Analysis Logs'\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@1\n\n    displayName: 'Create Security Analysis Report'\n\n    inputs:\n\n      AllTools: true\n\n\n\n\n\n  - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1\n\n    displayName: 'Post Analysis'\n\n    inputs:\n\n      AllTools: true\n\n\n\n\n\n  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0\n\n    displayName: 'Component Detection'\n\n"
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.1552734375,
          "content": "# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT license.\n\n\"\"\"\nScript for installation and distribution.\nYou can use environment variable `SPTAG_RELEASE` to set release version.\nIf release version is not set, default to a development build whose version string will be `0.0.0.dev`.\n## Prepare Environment ##\nInstall dependencies:\n  $ pip install -U -r setup.txt\n## Development ##\nBuild and install for development:\n  $ python setup.py develop\nUninstall:\n  $ pip uninstall sptag\nRemove generated files: (use \"--all\" to remove toolchain and built wheel)\n  $ python setup.py clean [--all]\n## Release ##\nBuild wheel package:\n  $ SPTAG_RELEASE=1.0 python setup.py bdist_wheel -p win_amd64\nWhere \"1.0\" is version string and \"win_amd64\" is platform.\nThe platform may also be \"manylinux1_x86_64\".\n\"\"\"\n\nfrom distutils.cmd import Command\nfrom distutils.command.build import build\nfrom distutils.command.clean import clean\nimport glob\nimport os\nimport shutil\nimport sys\n\nimport setuptools\nfrom setuptools.command.develop import develop\n\nrelease = os.environ.get('SPTAG_RELEASE')\nnuget_release = os.environ.get('NUGET_RELEASE')\npython_version = \"%d.%d\" % (sys.version_info.major, sys.version_info.minor)\nprint (\"Python version:%s\" % python_version)\n\nif 'bdist_wheel' in sys.argv:\n  if not any(arg.startswith('--python-tag') for arg in sys.argv):\n      sys.argv.extend(['--python-tag', 'py%d%d'%(sys.version_info.major, sys.version_info.minor)])\nprint (sys.argv)\n\ndef _setup():\n    setuptools.setup(\n        name = 'sptag',\n        version = release or '0.0.0.dev',\n        description = 'SPTAG: A library for fast approximate nearest neighbor search',\n        long_description = open('README.md', encoding='utf-8').read(),\n        long_description_content_type = 'text/markdown',\n        url = 'https://github.com/Microsoft/SPTAG',\n        author = 'Microsoft SPTAG Team',\n        author_email = 'cheqi@microsoft.com',\n        license = 'MIT',\n        include_package_data=True,\n        classifiers = [\n            'License :: OSI Approved :: MIT License',\n            'Operating System :: Microsoft :: Windows :: Windows 10',\n            'Operating System :: POSIX :: Linux',\n            'Programming Language :: Python :: 3',\n            'Intended Audience :: Science/Research',\n        ],\n\n        packages = _find_python_packages(),\n        python_requires = '>=3.6',\n        install_requires = ['numpy'],\n\n        cmdclass = {\n            'build': Build,\n            'clean': Clean,\n            'develop': Develop,\n        }\n    )\n\ndef _find_python_packages():\n    if os.path.exists('sptag'): shutil.rmtree('sptag')\n\n    if os.path.exists('Release'):\n        shutil.copytree('Release', 'sptag')\n    elif os.path.exists(os.path.join('x64', 'Release')):\n        shutil.copytree(os.path.join('x64', 'Release'), 'sptag')\n\n        if not os.path.exists('lib'): os.mkdir('lib')\n        if not os.path.exists('lib\\\\net472'): os.mkdir('lib\\\\net472')\n        for file in glob.glob(r'x64\\\\Release\\\\Microsoft.ANN.SPTAGManaged.*'):\n            print (file)\n            shutil.copy(file, \"lib\\\\net472\\\\\")\n        sfiles = ''\n        for framework in ['net5.0', 'net472']:\n            if os.path.exists(\"lib\\\\%s\\\\Microsoft.ANN.SPTAGManaged.dll\" % framework):\n                sfiles += '<file src=\"lib\\\\%s\\\\Microsoft.ANN.SPTAGManaged.dll\" target=\"lib\\\\%s\\\\Microsoft.ANN.SPTAGManaged.dll\" />' % (framework, framework)\n                sfiles += '<file src=\"lib\\\\%s\\\\Microsoft.ANN.SPTAGManaged.pdb\" target=\"lib\\\\%s\\\\Microsoft.ANN.SPTAGManaged.pdb\" />' % (framework, framework)\n        if os.path.exists('x64\\\\Release\\\\libzstd.dll'):\n            sfiles += '<file src=\"x64\\\\Release\\\\libzstd.dll\" target=\"runtimes\\\\win-x64\\\\native\\\\libzstd.dll\" />'\n        if os.path.exists('x64\\\\Release\\\\Ijwhost.dll'):\n            sfiles += '<file src=\"x64\\\\Release\\\\Ijwhost.dll\" target=\"runtimes\\\\win-x64\\\\native\\\\Ijwhost.dll\" />'\n        sfiles += '<file src=\"SPTAG.targets\" target=\"build\\\\MSSPTAG.Managed.Library.targets\" />'\n        f = open('sptag.nuspec', 'w')\n        spec = '''<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\n  <metadata>\n    <id>MSSPTAG.Managed.Library</id>\n    <version>%s</version>\n    <title>MSSPTAG.Managed.Library</title>\n    <authors>cheqi,haidwa,mingqli</authors>\n    <owners>cheqi,haidwa,mingqli</owners>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <licenseUrl>https://github.com/microsoft/SPTAG</licenseUrl>\n    <projectUrl>https://github.com/microsoft/SPTAG</projectUrl>\n    <description>SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by Microsoft Research (MSR) and Microsoft Bing.</description>\n    <copyright>Copyright @ Microsoft</copyright>\n  </metadata>\n  <files>\n%s\n  </files>\n</package>\n''' % (nuget_release, sfiles)\n        f.write(spec)\n        f.close()\n\n        fwinrt = open('sptag.winrt.nuspec', 'w')\n        spec = '''<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\n  <metadata>\n    <id>MSSPTAG.WinRT</id>\n    <version>%s</version>\n    <title>MSSPTAG.WinRT</title>\n    <authors>cheqi,haidwa,mingqli</authors>\n    <owners>cheqi,haidwa,mingqli</owners>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <licenseUrl>https://github.com/microsoft/SPTAG</licenseUrl>\n    <projectUrl>https://github.com/microsoft/SPTAG</projectUrl>\n    <description>SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by Microsoft Research (MSR) and Microsoft Bing.</description>\n    <copyright>Copyright @ Microsoft</copyright>\n    <dependencies>\n      <group targetFramework=\"uap10.0\">\n        <dependency id=\"Zstandard.dyn.x64\" version=\"1.4.0\" />\n      </group>\n      <group targetFramework=\"native\">\n        <dependency id=\"Zstandard.dyn.x64\" version=\"1.4.0\" />\n      </group>\n    </dependencies>\n  </metadata>\n  <files>\n    <file src=\"Wrappers\\\\WinRT\\\\SPTAG.WinRT.targets\" target=\"build\\\\native\" />\n    <file src=\"x64\\Release\\\\SPTAG.WinRT\\\\SPTAG.winmd\" target=\"lib\\\\uap10.0\" />\n    <file src=\"x64\\Release\\\\SPTAG.WinRT\\\\SPTAG.dll\" target=\"runtimes\\\\win10-x64\\\\native\" />\n    <file src=\"readme.md\" />\n    <file src=\"LICENSE\" />\n  </files>\n</package>\n''' % (nuget_release)\n        fwinrt.write(spec)\n        fwinrt.close()\n\n    f = open(os.path.join('sptag', '__init__.py'), 'w')\n    f.close()\n    return ['sptag']\n\nclass Build(build):\n    def run(self):\n        if not release:\n            sys.exit('Please set environment variable \"SPTAG_RELEASE=<release_version>\"')\n\n        open('sptag/version.py', 'w').write(f\"__version__ = '{release}'\")\n        super().run()\n\nclass Develop(develop):\n    def run(self):\n        open('sptag/version.py', 'w').write(\"__version__ = '0.0.0.dev'\")\n        super().run()\n\nclass Clean(clean):\n    def finalize_options(self):\n        self._all = self.all\n        self.all = True  # always use `clean --all`\n        super().finalize_options()\n\n    def run(self):\n        super().run()\n        shutil.rmtree('sptag.egg-info', ignore_errors=True)\n        if self._all:\n            shutil.rmtree('dist', ignore_errors=True)\n\nif __name__ == '__main__':\n    _setup()\n"
        },
        {
          "name": "setup.txt",
          "type": "blob",
          "size": 0.0380859375,
          "content": "pip < 21.4\nsetuptools < 61\nwheel < 0.38"
        }
      ]
    }
  ]
}