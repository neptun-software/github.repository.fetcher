{
  "metadata": {
    "timestamp": 1736565542633,
    "page": 418,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mit-nlp/MITIE",
      "stars": 2927,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2685546875,
          "content": "tags\nbuild\n*.swp\n*.swo\n*.exe\n*.class\n*.jar\n*.pyc\n*.o\n*.so\n*.a\n*.dll\n*.lib\n*.dylib\na.out\nmakefile.bak\ntools/ner_stream/ner_stream\nMITIE-models/\nexample-models.zip\nMITIE-models-v*.tar.bz2\n\n#Example binaries\n/ner_example\n/relation_extraction_example\n/ner_stream\nexamples/C/ner/ner_example\nexamples/cpp/ner/ner_example\nexamples/cpp/relation_extraction/relation_extraction_example\nexamples/cpp/train_ner/new_ner_model.dat\nexamples/cpp/train_ner/train_ner_example\nexamples/cpp/train_relation_extraction/rel_classifier.svm\nexamples/cpp/train_relation_extraction/train_relation_extraction_example\nexamples/C/relation_extraction/relation_extraction_example\nexamples/python/new_ner_model.dat\nexamples/python/new_text_categorizer_1_pure_model.dat\nexamples/python/new_text_categorizer_2_pure_model.dat\nexamples/python/new_text_categorizer_pure_model.dat\nexamples/python/rel_classifier.svm\nexamples/cpp/text_categorizer/text_categorizer_example\nexamples/cpp/train_text_categorizer/train_text_categorizer_example\nexamples/cpp/train_text_categorizer_BoW/train_text_categorizer_BoW_example\n/new_text_categorizer_BoW_model.dat\n/train_text_categorizer_BoW_example\n\n# R package\ntools/R-binding/MITIE_*.tar.gz\ntools/R-binding/MITIE/src/dlib/\ntools/R-binding/MITIE/src/mitielib/\n\n# Eclipse\n.cproject\n.project\n.settings/\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 2.01953125,
          "content": "If you are reporting a bug or problem with MITIE then fill out the entire template below.  Issues asking questions about why something doesn't work that fail to fill out the entire template will be closed.\n\nAlso, **the issue tracker is not a code writing service, do not ask for someone to write code for you.**  In particular, do not submit issues asking for feature improvements to the example programs.  The examples are documentation, their purpose is to teach, not to be useful programs.  **If there is some feature improvement you want in an example program then it's up to you to write it**.  \n\nIf you aren't reporting a bug or problem with MITIE then delete this template and write whatever you want here.\n \n\n<!-- ================================================================ -->\n<!-- =====================  BUG REPORT TEMPLATE ===================== -->\n<!-- ================================================================ -->\n\n\n<!-- Delete the above instructions and then provide a general summary of the issue in the Title above.  Then fill out the template below. -->\n\n## Expected Behavior\n<!--- Tell us what should happen.  What were you doing?  What part of MITIE are you using?  What do you think should happen? -->\n\n## Current Behavior\n<!--- Tell us what happens instead of the expected behavior.  If you get an error, include the entire error message in the bug report.  DO NOT POST SCREEN SHOTS.  Paste in the text instead.   If the issue is some kind of build problem, include the entire CMake output along with the error message. -->\n\n## Steps to Reproduce\n<!--- Provide an unambiguous set of steps to reproduce this problem. Include code to reproduce, if relevant -->\n\n\n\n* **Version**: <!-- What version of MITIE? -->\n* **Where did you get MITIE**: <!-- Did you get it from an official source like this github repo, or somewhere else? -->\n* **Platform**: <!-- include something like `lsb_release -a` output, or if Windows, version and 32-bit or\n  64-bit -->\n* **Compiler**: <!-- What compiler are you using?  What version of that compiler? -->\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.16796875,
          "content": "include makefile\ninclude mitielib/makefile\nrecursive-include mitielib/src *\nrecursive-include mitielib/include *\nrecursive-include dlib/dlib *\nrecursive-exclude * *.py[co]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.126953125,
          "content": "MITIE: MIT Information Extraction\n=====\n\nThis project provides free (even for commercial use)\n[state-of-the-art](../../wiki/Evaluation) information extraction\ntools. The current release includes tools for performing [named entity\nextraction](http://blog.dlib.net/2014/04/mitie-completely-free-and-state-of-art.html) \nand [binary relation detection](http://blog.dlib.net/2014/07/mitie-v02-released-now-includes-python.html) \nas well as tools for training custom extractors and relation detectors.  \n\nMITIE is built on top of [dlib](http://dlib.net), a high-performance machine-learning library[1], MITIE makes use of several state-of-the-art techniques including the use of distributional word embeddings[2] and Structural Support Vector Machines[3].  MITIE offers several pre-trained models providing varying levels of support for both English, Spanish, and German trained using a variety of linguistic resources (e.g., CoNLL 2003, ACE, [Wikipedia, Freebase](https://github.com/mit-nlp/MITIE/releases/download/v0.4/freebase_wikipedia_binary_relation_training_data_v1.0.tar.bz2), and Gigaword). The core MITIE software is written in C++, but bindings for several other software languages including Python, R, Java, C, and MATLAB allow a user to quickly integrate MITIE into his/her own applications.\n\nOutside projects have created API bindings for [OCaml](https://github.com/travisbrady/omitie), \n[.NET](https://github.com/BayardRock/MITIE-Dot-Net), [.NET Core](https://github.com/slamj1/MitieNetCore), [PHP](https://github.com/ankane/mitie-php), and\n[Ruby](https://github.com/ankane/mitie).  There is also an [interactive tool](https://github.com/Sotera/mitie-trainer) for labeling data and training MITIE.\n\n# Using MITIE\n\nMITIE's primary API is a C API which is documented in the\n[mitie.h](mitielib/include/mitie.h) header file.  Beyond this, there are many\n[example programs](examples/) showing how to use MITIE from C, C++, Java, R, or Python 2.7.\n\n### Initial Setup\n\nBefore you can run the provided examples you will need to download the trained\nmodel files which you can do by running:\n```\nmake MITIE-models\n```\nor by simply downloading the [MITIE-models-v0.2.tar.bz2](https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2.tar.bz2)\nfile and extracting it in your MITIE folder.  Note that the Spanish and German models are supplied in \nseparate downloads.  So if you want to use the Spanish NER model then download [MITIE-models-v0.2-Spanish.zip](https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2-Spanish.zip) and\nextract it into your MITIE folder.  Similarly for the German model: [MITIE-models-v0.2-German.tar.bz2](https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2-German.tar.bz2)\n\n### Using MITIE from the command line\n\nMITIE comes with a basic streaming NER tool.  So you can tell MITIE to\nprocess each line of a text file independently and output marked up text with the command:\n\n```\ncat sample_text.txt | ./ner_stream MITIE-models/english/ner_model.dat  \n```\n\nThe ner_stream executable can be compiled by running `make` in the top level MITIE folder or\nby navigating to the [tools/ner_stream](tools/ner_stream) folder and running `make` or using \nCMake to build it which can be done with the following commands:\n```\ncd tools/ner_stream\nmkdir build\ncd build\ncmake ..\ncmake --build . --config Release\n```\n\n### Compiling MITIE as a shared library\n\nOn a UNIX like system, this can be accomplished by running `make` in the top level MITIE folder or\nby running:\n```\ncd mitielib\nmake\n```\nThis produces shared and static library files in the mitielib folder.  Or you can use\nCMake to compile a shared library by typing:\n```\ncd mitielib\nmkdir build\ncd build\ncmake ..\ncmake --build . --config Release --target install\n```\n\nEither of these methods will create a MITIE shared library in the mitielib folder. \n\n### Compiling MITIE using OpenBLAS\n\nIf you compile MITIE using cmake then it will automatically find and use any optimized BLAS\nlibraries on your machine.  However, if you compile using regular make then you have\nto manually locate your BLAS libaries or DLIB will default to its built in, but slower, BLAS\nimplementation.   Therefore, to use OpenBLAS when compiling without cmake, locate `libopenblas.a` and `libgfortran.a`, then\nrun `make` as follows:\n```\ncd mitielib \nmake BLAS_PATH=/path/to/openblas.a LIBGFORTRAN_PATH=/path/to/libfortran.a\n```\nNote that if your BLAS libraries are not in standard locations cmake will fail to find them.  However,\nyou can tell it what folder to look in by replacing `cmake ..` with a statement such as:\n```\ncmake -DCMAKE_LIBRARY_PATH=/home/me/place/i/put/blas/lib ..\n```\n\n### Using MITIE from a Python 2.7 program\n\nOnce you have built the MITIE shared library, you can go to the [examples/python](examples/python) folder\nand simply run any of the Python scripts.  Each script is a tutorial explaining some aspect of\nMITIE: [named entity recognition and relation extraction](examples/python/ner.py), \n[training a custom NER tool](examples/python/train_ner.py), or \n[training a custom relation extractor](examples/python/train_relation_extraction.py).\n\nYou can also install ``mitie`` direcly from github with this command:\n``pip install git+https://github.com/mit-nlp/MITIE.git``.\n\n\n### Using MITIE from R\n\nMITIE can be installed as an R package. See the [README](tools/R-binding) for more details.\n\n### Using MITIE from a C program\n\nThere are example C programs in the [examples/C](examples/C) folder.  To compile of them you simply\ngo into those folders and run `make`.  Or use CMake like so:\n```\ncd examples/C/ner\nmkdir build\ncd build\ncmake ..\ncmake --build . --config Release\n```\n\n### Using MITIE from a C++ program\n\nThere are example C++ programs in the [examples/cpp](examples/cpp) folder.  To compile any of them you simply\ngo into those folders and run `make`.  Or use CMake like so:\n```\ncd examples/cpp/ner\nmkdir build\ncd build\ncmake ..\ncmake --build . --config Release\n```\n\n### Using MITIE from a Java program\n\nThere is an example Java program in the [examples/java](examples/java) folder.  Before you can run it you\nmust compile MITIE's java interface which you can do like so:\n```\ncd mitielib/java\nmkdir build\ncd build\ncmake ..\ncmake --build . --config Release --target install\n```\nThat will place a javamitie shared library and jar file into the mitielib folder.  Once you have those\ntwo files you can run the example program in examples/java by running run_ner.bat if you are on Windows or\nrun_ner.sh if you are on a POSIX system like Linux or OS X.\n\nAlso note that you must have Swig 1.3.40 or newer, CMake 2.8.4 or newer, and the Java JDK installed to compile the MITIE interface.  Finally, note that if you are using 64bit Java on Windows then you will need to use a command like:\n```\ncmake -G \"Visual Studio 10 Win64\" ..\n```\ninstead of  `cmake ..` so that Visual Studio knows to make a 64bit library.\n\n### Running MITIE's unit tests\n\nYou can run a simple regression test to validate your build.  Do this by running\nthe following command from the top level MITIE folder:\n\n```\nmake test\n```\n\n`make test` builds both the example programs and downloads required\nexample models.  If you require a non-standard C++ compiler, change\n`CC` in `examples/C/makefile` and in `tools/ner_stream/makefile`.\n\n\n# Precompiled Python 2.7 binaries\n\nWe have built Python 2.7 binaries packaged with sample models for 64bit Linux and Windows (both 32 and 64 bit version of Python).  You can download the precompiled package here: [Precompiled MITIE 0.2](https://github.com/mit-nlp/MITIE/releases/download/v0.4/mitie-v0.2-python-2.7-windows-or-linux64.zip)\n\n\n# Precompiled Java 64bit binaries\n\nWe have built Java binaries for the 64bit JVM which work on Linux and Windows.  You can download the precompiled package here: [Precompiled Java MITIE 0.3](https://github.com/mit-nlp/MITIE/releases/download/v0.4/mitie-java-v0.3-windows64-or-linux64.zip).  In the file is an examples/java folder.  You can run the example by executing the provided .bat or .sh file.\n\n# Citing MITIE\n\nThere isn't any paper specifically about MITIE. However, since MITIE is\nbasically just a thin wrapper around dlib please cite dlib's JMLR paper if you\nuse MITIE in your research:\n\n```\nDavis E. King. Dlib-ml: A Machine Learning Toolkit. Journal of Machine Learning Research 10, pp. 1755-1758, 2009\n\n@Article{dlib09,\n  author = {Davis E. King},\n  title = {Dlib-ml: A Machine Learning Toolkit},\n  journal = {Journal of Machine Learning Research},\n  year = {2009},\n  volume = {10},\n  pages = {1755-1758},\n}\n```\n\n# License\n\nMITIE is licensed under the Boost Software License - Version 1.0 - August 17th, 2003.  \n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n# References\n\n[1] Davis E. King. Dlib-ml: A Machine Learning Toolkit. Journal of Machine Learning Research 10, pp. 1755-1758, 2009.\n\n[2] Paramveer Dhillon, Dean Foster and Lyle Ungar, Eigenwords: Spectral Word Embeddings, Journal of Machine Learning Research (JMLR), 16, 2015.\n\n[3] T. Joachims, T. Finley, Chun-Nam Yu, Cutting-Plane Training of Structural SVMs, Machine Learning, 77(1):27-59, 2009.\n"
        },
        {
          "name": "dlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 1.728515625,
          "content": "\n# A list of all the folders that have makefiles in them.  Running make all builds all these things\nSUBDIRS = tools/ner_stream examples/C/ner examples/C/relation_extraction examples/cpp/ner examples/cpp/train_ner \\\n\t  examples/cpp/train_relation_extraction examples/cpp/relation_extraction examples/cpp/text_categorizer \\\n\t  examples/cpp/train_text_categorizer examples/cpp/train_text_categorizer_BoW\n\nexamples: tools/ner_stream examples/C/ner examples/C/relation_extraction examples/cpp/train_text_categorizer_BoW\n\tcp examples/C/ner/ner_example .\n\tcp examples/C/relation_extraction/relation_extraction_example .\n\tcp tools/ner_stream/ner_stream .\n\tcp examples/cpp/train_text_categorizer_BoW/train_text_categorizer_BoW_example .\n\nMITIE-models-v0.2.tar.bz2:\n\tcurl -LO https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2.tar.bz2\n\nMITIE-models: MITIE-models-v0.2.tar.bz2\n\ttar -xjf MITIE-models-v0.2.tar.bz2\n\t\ntest: all examples MITIE-models\n\t./ner_stream MITIE-models/english/ner_model.dat < sample_text.txt > /tmp/MITIE_test.out\n\tdiff /tmp/MITIE_test.out sample_text.reference-output\n\t./relation_extraction_example MITIE-models/english/ner_model.dat MITIE-models/english/binary_relations/rel_classifier_location.location.contains.svm sample_text.txt > /tmp/MITIE_test_rel.out\n\tdiff /tmp/MITIE_test_rel.out sample_text.reference-output-relations\n\t./train_text_categorizer_BoW_example > /tmp/MITIE_test_bow.out\n\t@echo Testing completed successfully\n\n\n\n.PHONY: mitie mitielib $(SUBDIRS)\nall: $(SUBDIRS)\nmitie: mitielib\n$(SUBDIRS): mitie \n\t$(MAKE) -C $@\nmitielib: dlib/dlib\n\t$(MAKE) -C $@\nclean:\n\t@for dir in $(SUBDIRS); do \\\n\t\t$(MAKE) -C $$dir clean; \\\n\tdone\n\t@rm -rf ner_stream ner_example relation_extraction_example train_text_categorizer_BoW_example\n"
        },
        {
          "name": "merge_changes_from_dlib",
          "type": "blob",
          "size": 0.0830078125,
          "content": "git subtree pull --prefix dlib https://github.com/davisking/dlib.git master --squash\n"
        },
        {
          "name": "mitielib",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_text.reference-output",
          "type": "blob",
          "size": 1.302734375,
          "content": "A [ORGANIZATION Pegasus Airlines] plane landed at an [LOCATION Istanbul] airport Friday after a passenger \" said that there was a bomb on board \" and wanted the plane to land in [LOCATION Sochi] , [LOCATION Russia] , the site of the Winter Olympics , said officials with [LOCATION Turkey] 's [ORGANIZATION Transportation Ministry] . \n\n\n[PERSON Meredith Vieira] will become the first woman to host [MISC Olympics] primetime coverage on her own when she fills on Friday night for the ailing [PERSON Bob Costas] , who is battling a continuing eye infection . \" It 's an honor to fill in for him , \" [PERSON Vieira] said on TODAY Friday . \" You think about the [MISC Olympics] , and you think the athletes and then [PERSON Bob Costas] . \" \" [PERSON Bob] 's eye issue has improved but he 's not quite ready to do the show , \" [ORGANIZATION NBC Olympics] Executive Producer [PERSON Jim Bell] told TODAY . com from [LOCATION Sochi] on Thursday . \n\n\n\nFrom wikipedia we learn that [PERSON Josiah Franklin] 's son , [PERSON Benjamin Franklin] was born in [LOCATION Boston] . Since wikipedia allows anyone to edit it , you could change the entry to say that [LOCATION Philadelphia] is the birthplace of [PERSON Benjamin Franklin] . However , that would be a bad edit since [PERSON Benjamin Franklin] was definitely born in [LOCATION Boston] . \n\n"
        },
        {
          "name": "sample_text.reference-output-relations",
          "type": "blob",
          "size": 0.130859375,
          "content": "\nNumber of named entities detected: 23\n\nNow look for binary relations.\nrelation type: location.location.contains\nRussia    #   Sochi \n"
        },
        {
          "name": "sample_text.txt",
          "type": "blob",
          "size": 1.0390625,
          "content": "A Pegasus Airlines plane landed at an Istanbul airport Friday after a passenger \"said that there was a bomb on board\" and wanted the plane to land in Sochi, Russia, the site of the Winter Olympics, said officials with Turkey's Transportation Ministry.\n\n\nMeredith Vieira will become the first woman to host Olympics primetime coverage on her own when she fills on Friday night for the ailing Bob Costas, who is battling a continuing eye infection.  \"It's an honor to fill in for him,\" Vieira said on TODAY Friday. \"You think about the Olympics, and you think the athletes and then Bob Costas.\" \"Bob's eye issue has improved but he's not quite ready to do the show,\" NBC Olympics Executive Producer Jim Bell told TODAY.com from Sochi on Thursday.\n\n\n\nFrom wikipedia we learn that Josiah Franklin's son, Benjamin Franklin was born in Boston.  Since wikipedia allows anyone to edit it, you could change the entry to say that Philadelphia is the birthplace of Benjamin Franklin.  However, that would be a bad edit since Benjamin Franklin was definitely born in Boston.\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.2431640625,
          "content": "import os.path\nfrom distutils.core import setup\nfrom distutils.command.build import build\nimport os\nimport platform\nimport sys\nimport re\n\nimport subprocess\nfrom distutils.version import LooseVersion\n\n\nclass BuildMITIE(build):\n    def run(self):\n        if platform.system() == \"Windows\":\n            if LooseVersion(self.get_cmake_version()) < '3.1.0':\n                raise RuntimeError(\"CMake >= 3.1.0 is required on Windows\")\n\n            if not os.path.exists('mitielib/build'):\n                os.makedirs('mitielib/build')\n            os.chdir('mitielib/build')\n            if sys.maxsize > 2**32:\n                subprocess.check_call(['cmake', '..', '-A', 'x64'])\n            else:\n                subprocess.check_call(['cmake', '..'])\n\n            subprocess.check_call(['cmake', '--build', '.', '--config', 'Release', '--target', 'install'])\n            os.chdir('../..')\n\n            build.run(self)\n        \n            self.copy_file(\n                'mitielib/mitie.dll',\n                os.path.join(self.build_lib, 'mitie/mitie.dll'))\n        else:\n            subprocess.check_call(['make', 'mitielib'])\n            build.run(self)\n            self.copy_file(\n                'mitielib/libmitie.so',\n                os.path.join(self.build_lib, 'mitie/libmitie.so'))\n\n    def get_cmake_version(self):\n        try:\n            out = subprocess.check_output(['cmake', '--version'])\n        except OSError:\n            raise RuntimeError(\"CMake must be installed to build the following extensions: \" +\n                               \", \".join(e.name for e in self.extensions))\n        return re.search(r'version\\s*([\\d.]+)', out.decode()).group(1)\n\n\nsetup(\n    version='0.7.0',\n    name='mitie',\n    packages=['mitie'],\n    package_dir={'mitie': 'mitielib'},\n    cmdclass={'build': BuildMITIE},\n    classifiers=[\n        'Operating System :: MacOS :: MacOS X',\n        'Operating System :: POSIX',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'License :: Boost License',\n        ]\n    )\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}