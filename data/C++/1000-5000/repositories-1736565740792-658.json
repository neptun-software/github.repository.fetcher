{
  "metadata": {
    "timestamp": 1736565740792,
    "page": 658,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "goodtft/LCD-show",
      "stars": 2366,
      "defaultBranch": "master",
      "files": [
        {
          "name": "DPI5_7_800_480-show",
          "type": "blob",
          "size": 1.193359375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\nsource ./system_config.sh\nsudo echo \"dtoverlay=qddpi18\" >> ./boot/config.txt.bak\nsudo echo \"enable_dpi_lcd=1\" >> ./boot/config.txt.bak\nsudo echo \"display_default_lcd=1\" >> ./boot/config.txt.bak\nsudo echo \"dpi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"dpi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"dpi_output_format=0x6f016\" >> ./boot/config.txt.bak\nsudo echo \"dpi_timings=800 0 210 1 46 480 0 22 1 23 0 0 0 60 0 33000000 6\" >> ./boot/config.txt.bak\nsudo echo \"disable_overscan=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=i2c5,pins_10_11\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=goodix_dpi,interrupt=26,reset=18\" >> ./boot/config.txt.bak\n#sudo echo \"gpio=19=op,dh\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp ./usr/qddpi18.dtb /boot/overlays/qddpi18.dtbo\nsudo cp ./usr/goodix_dpi.dtb /boot/overlays/goodix_dpi.dtbo\n\nsudo touch ./.have_installed\n#echo \"hdmi:capacity:7C-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n\n\n\n"
        },
        {
          "name": "DPI7_1024_600-show",
          "type": "blob",
          "size": 1.193359375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\nsource ./system_config.sh\nsudo echo \"dtoverlay=qddpi18\" >> ./boot/config.txt.bak\nsudo echo \"enable_dpi_lcd=1\" >> ./boot/config.txt.bak\nsudo echo \"display_default_lcd=1\" >> ./boot/config.txt.bak\nsudo echo \"dpi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"dpi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"dpi_output_format=0x6f016\" >> ./boot/config.txt.bak\nsudo echo \"dpi_timings=1024 0 160 20 140 600 0 12 3 20 0 0 0 60 0 45000000 3\" >> ./boot/config.txt.bak\nsudo echo \"disable_overscan=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=i2c5,pins_10_11\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=goodix_dpi,interrupt=26,reset=18\" >> ./boot/config.txt.bak\n#sudo echo \"gpio=19=op,dh\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp ./usr/qddpi18.dtb /boot/overlays/qddpi18.dtbo\nsudo cp ./usr/goodix_dpi.dtb /boot/overlays/goodix_dpi.dtbo\n\nsudo touch ./.have_installed\n#echo \"hdmi:capacity:7C-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD-hdmi",
          "type": "blob",
          "size": 0.8349609375,
          "content": "#!/bin/bash\n\n#dev=`grep -rn \"Option\" /usr/share/X11/xorg.conf.d/99-fbturbo.conf | grep \"fbdev\" |awk -F\\\" '{printf $4}'`\n#if test \"$dev\" = \"/dev/fb0\";then\n#echo \"The system is already output for HDMI and does not need to be set up any more\"\n#exit\n#fi\nsudo ./system_backup.sh\nsource ./system_config.sh\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo sync\nsudo sync\n#sudo cp -rf ./usr/modules-HDMI  /etc/modules\n#sudo cp -rf ./usr/99-fbturbo.conf-HDMI  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\n#sudo cp ./boot/config-nomal.txt /boot/config.txt\n#if [ -b /dev/mmcblk0p7 ]; then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\n#sudo cp ./usr/inittab /etc/\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD101H-show",
          "type": "blob",
          "size": 1.833984375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_timings=1024 1 200 18 200 600 1 50 3 50 0 0 0 60 0 51200000 3\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:101H-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD101S-show",
          "type": "blob",
          "size": 1.751953125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/#dtoverlay=vc4-fkms-v3d/dtoverlay=vc4-fkms-v3d/' ./boot/config.txt.bak\n#sudo sed -i -e 's/#dtoverlay=vc4-kms-v3d/dtoverlay=vc4-fkms-v3d/' ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1280 800 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:101H-1280x800:0:1280:800\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD101TMP-show",
          "type": "blob",
          "size": 1.83984375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\n#sudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\n#sudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\n#sudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=3\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_timings=800 1 50 10 50 1280 1 10 3 9 0 0 0 60 0 70000000 3\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-270 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:101TMP-1280x800:270:1280:800\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD101Y-show",
          "type": "blob",
          "size": 1.7373046875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1280 800 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:101Y-1280x800:0:1280:800\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD154-show",
          "type": "blob",
          "size": 4.7421875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\n#if [ ! -d /etc/X11/xorg.conf.d ]; then\n#sudo mkdir -p /etc/X11/xorg.conf.d\n#fi\n#sudo cp ./usr/mhs35-overlay.dtb /boot/overlays/\n#sudo cp ./usr/mhs35-overlay.dtb /boot/overlays/mhs35.dtbo\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 300 300 60 1 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"gpio=6,19,5,26,13,21,20,16=pu\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\n#sudo cp -rf ./usr/99-calibration.conf-mhs35-90  /etc/X11/xorg.conf.d/99-calibration.conf\n#sudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\n#sudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs35.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:LCD154:90:300:300\" > ./.have_installed\n\n#FBCP install\nif [ -d ./fbcp-ili9341 ]; then\nsudo rm -rf ./fbcp-ili9341\nfi\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\n#sudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nsudo apt-get install cmake 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt && exit\n#sudo rm -rf rpi-fbcp\nsudo git clone https://github.com/juj/fbcp-ili9341.git\nsudo mkdir ./fbcp-ili9341/build\ncd ./fbcp-ili9341/build/\nsudo cmake -DSPI_BUS_CLOCK_DIVISOR=10 -DWAVESHARE_ST7789VW_HAT=ON -DBACKLIGHT_CONTROL=OFF -DSTATISTICS=0 -DUSE_DMA_TRANSFERS=OFF ..\nsudo make -j\nsudo install fbcp-ili9341 /usr/local/bin/fbcp\ncd - > /dev/null\nsudo cp -rf ./etc/rc.local /etc/rc.local\nelse\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 1 ]; then\nsudo cp -rf ./usr/fbcp-ili9341 ./\nsudo mkdir ./fbcp-ili9341/build\ncd ./fbcp-ili9341/build/\nsudo cmake -DSPI_BUS_CLOCK_DIVISOR=10 -DWAVESHARE_ST7789VW_HAT=ON -DBACKLIGHT_CONTROL=OFF -DSTATISTICS=0 -DUSE_DMA_TRANSFERS=OFF ..\nsudo make -j\nsudo install fbcp-ili9341 /usr/local/bin/fbcp\ncd - > /dev/null\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nfi\n\n#KEY install\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn\nif [ $? -eq 0 ]; then\nsudo apt-get install python-xlib 2> error_output.txt\nelse\ndpkg -l | grep python-xlib\nif [ $? -eq 1 ]; then\nsudo dpkg -i -B ./python-xlib_0.23-2_all.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt && exit\ngrep -q \"error:\" ./error_output.txt && exit\n\nwget --spider -q -o /dev/null --tries=1 -T 10 https://pypi.org\nif [ $? -eq 0 ]; then\nsudo pip install PyMouse 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt && exit\ngrep -q \"error:\" ./error_output.txt && exit\nelse\npip list | grep PyMouse\nif [ $? -eq 1 ]; then\nsudo tar xvzf ./PyMouse-1.0.tar.gz\nsudo python PyMouse-1.0/setup.py install\nfi\nfi\n\nif [ ! -d ~/.config/autostart ]; then\nsudo mkdir -p ~/.config/autostart\nfi\n\nif [ ! -f ~/.config/autostart/local.desktop ]; then\nsudo cp -rf ./usr/local.desktop ~/.config/autostart\nfi\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\n#version=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\n#version=${version##* }\n#version=${version#*#}\n#echo $version\n#if test $version -lt 2017;then\n#echo \"reboot\"\n#else\n#echo \"need to update touch configuration\"\n#sudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\n#sudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\n#grep -q \"error:\" ./error_output.txt && exit\n#sudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\n#fi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD24-3A+-show",
          "type": "blob",
          "size": 4.28515625,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/tft9341.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft9341:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 360 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-32-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-32.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:32:90:480:360\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD24-show",
          "type": "blob",
          "size": 4.2880859375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/tft9341.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft9341:rotate=270\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 360 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-32-270  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-32.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:32:270:480:360\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD28-show",
          "type": "blob",
          "size": 4.2880859375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/tft9341.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft9341:rotate=270\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 360 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-32-270  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-32.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:32:270:480:360\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD32-show",
          "type": "blob",
          "size": 4.2880859375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft9341-overlay.dtb /boot/overlays/tft9341.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft9341:rotate=270\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 360 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-32-270  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-32.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:32:270:480:360\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD35-show",
          "type": "blob",
          "size": 4.2822265625,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft35a-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft35a-overlay.dtb /boot/overlays/tft35a.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft35a:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp -rf ./usr/99-calibration.conf-35-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-35.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:35:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD5-show",
          "type": "blob",
          "size": 3.65234375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsudo cp ./usr/ads7846-overlay.dtb /boot/overlays/ads7846.dtbo\n\nsource ./system_config.sh\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nrow=`grep -nr \"#dtoverlay=vc4-fkms-v3d\" ./boot/config.txt.bak | awk -F ':' '{if(NR==1)printf $1}'`\nsudo sed -i -e ''\"$row\"'s/#dtoverlay=vc4-fkms-v3d/dtoverlay=vc4-fkms-v3d/' ./boot/config.txt.bak\nsudo sed -i -e 's/#max_framebuffers=2/max_framebuffers=2/' ./boot/config.txt.bak\nfi\nif [ $hardware_model -eq 5 ]; then\nsudo sed -i -e 's/#dtoverlay=vc4-kms-v3d/dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nfi\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 800 480 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ads7846,cs=1,penirq=25,penirq_pull=2,speed=50000,keep_vref_on=0,swapxy=0,pmax=255,xohms=150,xmin=200,xmax=3900,ymin=200,ymax=3900\" >> ./boot/config.txt.bak\n\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\n#sudo cp -rf ./boot/config-5.txt /boot/config.txt \n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d \nfi\nsudo cp -rf ./usr/99-calibration.conf-5-0 /etc/X11/xorg.conf.d/99-calibration.conf \nsudo touch ./.have_installed\necho \"hdmi:resistance:5:0:800:480\" > ./.have_installed\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017; then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get update\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD55-show",
          "type": "blob",
          "size": 1.8056640625,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_framebuffer_height=1920\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1920 1080 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-90 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:55-1920x1080:90:1920:1080\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD7B-show",
          "type": "blob",
          "size": 1.7314453125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 800 480 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7B-800x480.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:7B-800x480:0:800:480\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD7C-show",
          "type": "blob",
          "size": 1.7353515625,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1024 600 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:7C-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD7H-show",
          "type": "blob",
          "size": 1.794921875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1024 600 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:7H-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "LCD7S-show",
          "type": "blob",
          "size": 1.794921875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 1024 600 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-7C-1024x600.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:7S-1024x600:0:1024:600\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS24-show",
          "type": "blob",
          "size": 1.3759765625,
          "content": "#!/bin/bash\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nsudo mkdir -p /etc/X11/xorg.conf.d\nsudo cp ./usr/mhs24-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs24-overlay.dtb /boot/overlays/mhs24.dtbo\nsudo cp -rf ./usr/99-calibration.conf-mhs24  /etc/X11/xorg.conf.d/99-calibration.conf\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nif [ -b /dev/mmcblk0p7 ]; then\nsudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\nelse\nsudo cp ./usr/cmdline.txt /boot/\nfi\nsudo cp ./usr/inittab /etc/\nsudo cp ./boot/config-mhs24.txt /boot/config.txt\n#FBCP install\nsudo cp -rf ./etc/rc.local /etc/rc.local\nsudo apt-get install git cmake -y\nsudo rm -rf rpi-fbcp\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\n#evdev install\nnodeplatform=`uname -n`\nkernel=`uname -r`\nversion=`uname -v`\nif test \"$nodeplatform\" = \"raspberrypi\";then\necho \"this is raspberrypi kernel\"\nversion=${version%% *}\nversion=${version#*#}\necho $version\nif test $version -lt 970;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nsudo apt-get install xserver-xorg-input-evdev\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\necho \"reboot\"\nfi\nelse\necho \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\nfi\nsudo reboot\n"
        },
        {
          "name": "MHS32-show",
          "type": "blob",
          "size": 4.2900390625,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mhs32-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs32-overlay.dtb /boot/overlays/mhs32.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mhs32:rotate=270\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 360 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp -rf ./usr/99-calibration.conf-mhs32-270  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs32.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:mhs32:270:480:360\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS35-show",
          "type": "blob",
          "size": 4.263671875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mhs35-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs35-overlay.dtb /boot/overlays/mhs35.dtbo\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mhs35:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp -rf ./usr/99-calibration.conf-mhs35-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs35.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:mhs35:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\nfi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS35B-show",
          "type": "blob",
          "size": 4.4501953125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mhs35b-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs35b-overlay.dtb /boot/overlays/mhs35b.dtbo\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mhs35b:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=goodix\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nif [ -f /boot/overlays/goodix.dtbo ]; then\nsudo mv /boot/overlays/goodix.dtbo /boot/overlays/goodix.dtbo.bak\nsudo cp ./usr/goodix.dtbo /boot/overlays/ \nfi\n\nsudo cp -rf ./usr/99-calibration.conf-mhs35b-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nsudo touch ./.have_installed\necho \"gpio:resistance:mhs35b:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS35IPS-show",
          "type": "blob",
          "size": 4.28125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mhs35ips-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs35ips-overlay.dtb /boot/overlays/mhs35ips.dtbo\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mhs35ips:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp -rf ./usr/99-calibration.conf-mhs35ips-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs35.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:mhs35ips:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\nfi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS40-show",
          "type": "blob",
          "size": 4.29296875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mhs395-overlay.dtb /boot/overlays/\nsudo cp ./usr/mhs395-overlay.dtb /boot/overlays/mhs395.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mhs395:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-mhs395-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs395.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:mhs395:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MHS40C-show",
          "type": "blob",
          "size": 4.595703125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 800 480 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ads7846,cs=1,penirq=17,penirq_pull=2,speed=1000000,keep_vref_on=1,swapxy=1,pmax=255,xohms=60,xmin=200,xmax=3900,ymin=200,ymax=3900\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\nsudo cp -rf ./usr/99-calibration.conf-mhs397-0  /etc/X11/xorg.conf.d/99-calibration.conf\n#sudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\n#sudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs397.txt /boot/config.txt\nsudo cp -rf ./etc/modules  /etc/modules\nsudo chmod 644 /etc/modules\nsudo cp -rf ./etc/modprobe.d/fbtft.conf /etc/modprobe.d/\n\nsudo touch ./.have_installed\necho \"hdmi:resistance:mhs397:0:800:480\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MIS35-show",
          "type": "blob",
          "size": 4.2880859375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/mis35-overlay.dtb /boot/overlays/\nsudo cp ./usr/mis35-overlay.dtb /boot/overlays/mis35.dtbo\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=mis35:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp -rf ./usr/99-calibration.conf-mis35-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\n#sudo cp ./boot/config-mhs35.txt /boot/config.txt\nsudo touch ./.have_installed\necho \"gpio:resistance:mis35:90:480:320\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\n#sudo apt-get update\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MPI3508-show",
          "type": "blob",
          "size": 3.396484375,
          "content": "#!/bin/bash\nsudo ./system_backup.sh\n\nhw_version=`tr -d '\\0' < /proc/device-tree/model`\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 320 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ads7846,cs=1,penirq=25,penirq_pull=2,speed=50000,keep_vref_on=0,swapxy=0,pmax=255,xohms=150,xmin=200,xmax=3900,ymin=200,ymax=3900\" >> ./boot/config.txt.bak\n[[ $hw_version =~ \"Raspberry Pi 4\" ]] && sudo echo \"hdmi_timings=600 0 20 28 48 400 0 13 3 32 0 0 0 30 0 25000000 5\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\n#sudo cp -rf ./boot/config-35-480X320.txt /boot/config.txt \n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d \nfi\nsudo cp -rf ./usr/99-calibration.conf-3508-0 /etc/X11/xorg.conf.d/99-calibration.conf\nsudo touch ./.have_installed\necho \"hdmi:resistance:3508:0:480:320\" > ./.have_installed\n\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MPI3508_480_320-show",
          "type": "blob",
          "size": 0.998046875,
          "content": "#!/bin/bash\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nsudo cp -rf ./boot/config-35-480X320.txt /boot/config.txt \nif [ -b /dev/mmcblk0p7 ]; then\nsudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\nelse\nsudo cp ./usr/cmdline.txt /boot/\nfi\nsudo cp ./usr/inittab /etc/\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nsudo mkdir -p /etc/X11/xorg.conf.d \nsudo cp -rf ./usr/99-calibration.conf-3508 /etc/X11/xorg.conf.d/99-calibration.conf\nnodeplatform=`uname -n`\nkernel=`uname -r`\nversion=`uname -v`\nif test \"$nodeplatform\" = \"raspberrypi\";then\necho \"this is raspberrypi kernel\"\nversion=${version%% *}\nversion=${version#*#}\necho $version\nif test $version -lt 970;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nsudo apt-get install xserver-xorg-input-evdev\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\necho \"reboot\"\nfi\nelse\necho \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\nfi\nsudo reboot\n"
        },
        {
          "name": "MPI3510-show",
          "type": "blob",
          "size": 1.0390625,
          "content": "#!/bin/bash\nsudo cp -rf ./boot/config-35DPI.txt /boot/config.txt\n#sudo cp ./usr/bcm2709-rpi-2-b.dtb /boot/\n#sudo cp ./usr/bcm2710-rpi-3-b.dtb /boot/ \n#sudo cp ./usr/cmdline.txt /boot/\n#sudo cp ./usr/qddpi24.dtb /boot/overlays/\n#sudo cp ./usr/qddpi24.dtb /boot/overlays/qddpi24.dtbo\n#sudo cp ./usr/inittab /etc/\n#sudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nsudo mkdir -p /etc/X11/xorg.conf.d \nsudo cp -rf ./usr/99-calibration.conf-3508 /etc/X11/xorg.conf.d/99-calibration.conf \nnodeplatform=`uname -n`\nkernel=`uname -r`\nversion=`uname -v`\nif test \"$nodeplatform\" = \"raspberrypi\";then\necho \"this is raspberrypi kernel\"\nversion=${version%% *}\nversion=${version#*#}\necho $version\nif test $version -lt 970;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nsudo apt-get install xserver-xorg-input-evdev\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\necho \"reboot\"\nfi\nelse\necho \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\nfi\nsudo reboot\n"
        },
        {
          "name": "MPI4008-show",
          "type": "blob",
          "size": 3.4921875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nif [ $hardware_model -eq 5 ]; then\nsudo sed -i -e 's/#dtoverlay=vc4-kms-v3d/dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nfi\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=3\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 800 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ads7846,cs=1,penirq=25,penirq_pull=2,speed=50000,keep_vref_on=0,swapxy=0,pmax=255,xohms=150,xmin=200,xmax=3900,ymin=200,ymax=3900\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nif [ $hardware_model -eq 5 ]; then\nsudo sed -i \"/xrandr -o/d\" /etc/xdg/lxsession/LXDE-pi/autostart\nsudo echo \"xrandr -o 1\" >> /etc/xdg/lxsession/LXDE-pi/autostart \nfi\n#sudo cp -rf ./boot/config-397.txt /boot/config.txt \n\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d \nfi\nsudo cp -rf ./usr/99-calibration.conf-397-270 /etc/X11/xorg.conf.d/99-calibration.conf \nsudo touch ./.have_installed\necho \"hdmi:resistance:397:270:480:800\" > ./.have_installed\n\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MPI4009-show",
          "type": "blob",
          "size": 3.208984375,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=3\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 480 800 65 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ads7846,cs=1,penirq=25,penirq_pull=2,speed=50000,keep_vref_on=0,swapxy=0,pmax=255,xohms=150,xmin=200,xmax=3900,ymin=200,ymax=3900\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\n#sudo cp -rf ./boot/config-397.txt /boot/config.txt \n\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf \nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d \nfi\nsudo cp -rf ./usr/99-calibration.conf-3971-270 /etc/X11/xorg.conf.d/99-calibration.conf \nsudo touch ./.have_installed\necho \"hdmi:resistance:3971:270:480:800\" > ./.have_installed\n\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MPI5001-show",
          "type": "blob",
          "size": 1.8330078125,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_force_edid_audio=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"display_rotate=0\" >> ./boot/config.txt.bak\nsudo echo \"max_usb_current=1\" >> ./boot/config.txt.bak\nsudo echo \"config_hdmi_boost=7\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 800 480 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n#sudo cp -rf ./boot/config-MPI5001.txt /boot/config.txt\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-HDMI /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\nsudo touch ./.have_installed\necho \"hdmi:capacity:MPI5001:0:800:480\" > ./.have_installed\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "MPI5094-show",
          "type": "blob",
          "size": 0.732421875,
          "content": "#!/bin/bash\n\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\nsource ./system_config.sh\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 800 480 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=goodix\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nif [ -f /boot/overlays/goodix.dtbo ]; then\nsudo mv /boot/overlays/goodix.dtbo /boot/overlays/goodix.dtbo.bak\nsudo cp ./usr/goodix.dtbo /boot/overlays/ \nfi\n\nsudo sync\nsudo sync\nsleep 1\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "Mouse_Key.py",
          "type": "blob",
          "size": 1.7099609375,
          "content": "from pymouse import PyMouse\r\nimport time\r\nimport RPi.GPIO as GPIO\r\n \r\nGPIO.setmode(GPIO.BCM)\r\n\r\nbtn_up = 5\r\nbtn_down = 26\r\nbtn_left = 19\r\nbtn_right = 6\r\nbtn_key1 = 21                  \r\nbtn_key2 = 20\r\n\r\n# Up, Down, left, right, Button\r\nGPIO.setup(btn_up, GPIO.IN,GPIO.PUD_UP)\r\nGPIO.setup(btn_down, GPIO.IN,GPIO.PUD_UP)\r\nGPIO.setup(btn_left, GPIO.IN,GPIO.PUD_UP)\r\nGPIO.setup(btn_right, GPIO.IN,GPIO.PUD_UP)\r\nGPIO.setup(btn_key1, GPIO.IN,GPIO.PUD_UP)\r\nGPIO.setup(btn_key2, GPIO.IN,GPIO.PUD_UP)\r\n\r\ndef main():\r\n    m = PyMouse()\r\n    KEY1_flag = False\r\n    KEY2_flag = False\r\n    KEY3_flag = False\r\n    while True:  \r\n        nowxy = m.position() \r\n        if (not GPIO.input(btn_key1)): # button pressed\r\n            KEY1_flag = True\r\n            print(\"KEY1\")\r\n            m.click(nowxy[0], nowxy[1], 1)\r\n            \r\n        if KEY1_flag and GPIO.input(btn_key1): # button released\r\n            KEY1_flag = False\r\n            \r\n        if (not GPIO.input(btn_key2)): # button pressed\r\n            KEY2_flag = True\r\n            print(\"KEY1\")\r\n            m.click(nowxy[0], nowxy[1], 2)\r\n            \r\n        if KEY2_flag and GPIO.input(btn_key2): # button released\r\n            KEY2_flag = False\r\n\r\n        if (not GPIO.input(btn_up)): # button pressed\r\n            m.move(nowxy[0] - 5, nowxy[1]) \r\n\r\n        if (not GPIO.input(btn_down)): # button pressed\r\n            m.move(nowxy[0] + 5, nowxy[1]) \r\n\r\n        if (not GPIO.input(btn_left)): # button pressed\r\n            m.move(nowxy[0], nowxy[1] + 5) \r\n\r\n        if (not GPIO.input(btn_right)): # button pressed\r\n            m.move(nowxy[0], nowxy[1] - 5)\r\n        \r\n        time.sleep(0.02) # Poll every 20ms (otherwise CPU load gets too high)\r\n        \r\nif __name__ == \"__main__\":\r\n    main()\r\n"
        },
        {
          "name": "NANO24-show",
          "type": "blob",
          "size": 4.451171875,
          "content": "#!/bin/bash\n\nsudo ./system_backup.sh\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\nif [ ! -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p /etc/X11/xorg.conf.d\nfi\nsudo cp ./usr/tft7789-overlay.dtb /boot/overlays/\nsudo cp ./usr/tft7789-overlay.dtb /boot/overlays/tft7789.dtbo\n#root_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp -rf ./boot/config-noobs-nomal.txt ./boot/config.txt.bak\n#else\n#sudo cp -rf ./boot/config-nomal.txt ./boot/config.txt.bak\n#sudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\n#fi\n\nsource ./system_config.sh\n#sudo sed -i -e 's/dtoverlay=vc4-kms-v3d/#dtoverlay=vc4-kms-v3d/' ./boot/config.txt.bak\nsudo echo \"hdmi_force_hotplug=1\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=i2c_arm=on\" >> ./boot/config.txt.bak\nsudo echo \"dtparam=spi=on\" >> ./boot/config.txt.bak\nsudo echo \"enable_uart=1\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=tft7789:rotate=90\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=ft6236\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_group=2\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=1\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_mode=87\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_cvt 320 240 60 6 0 0 0\" >> ./boot/config.txt.bak\nsudo echo \"hdmi_drive=2\" >> ./boot/config.txt.bak\nsudo echo \"dtoverlay=spi0-2cs,cs1_pin=4,0x01\" >> ./boot/config.txt.bak\nsudo echo \"gpio=18=op,dh\" >> ./boot/config.txt.bak\nsudo cp -rf ./boot/config.txt.bak /boot/config.txt\n\nsudo cp ./usr/ft6236.dtb /boot/overlays/ft6236.dtbo\n\nsudo cp -rf ./usr/99-calibration.conf-nano24-90  /etc/X11/xorg.conf.d/99-calibration.conf\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\n#if test \"$root_dev\" = \"/dev/mmcblk0p7\";then\n#sudo cp ./usr/cmdline.txt-noobs /boot/cmdline.txt\n#else\n#sudo cp ./usr/cmdline.txt /boot/\n#fi\nsudo cp ./usr/inittab /etc/\nsudo touch ./.have_installed\necho \"gpio:resistance:nano24:90:320:240\" > ./.have_installed\n\nsudo apt-get update\n#FBCP install\nwget --spider -q -o /dev/null --tries=1 -T 10 https://cmake.org/\nif [ $? -eq 0 ]; then\nsudo apt-get install cmake libraspberrypi-dev -y 2> error_output.txt\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"^E:\" ./error_output.txt\ntype cmake > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf rpi-fbcp\nwget --spider -q -o /dev/null --tries=1 -T 10 https://github.com\nif [ $? -eq 0 ]; then\nsudo git clone https://github.com/tasanakorn/rpi-fbcp\nif [ $? -ne 0 ]; then\necho \"download fbcp failed, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nelse\necho \"bad network, copy native fbcp!!!\"\nsudo cp -r ./usr/rpi-fbcp .\nfi\nsudo mkdir ./rpi-fbcp/build\ncd ./rpi-fbcp/build/\nsudo cmake ..\nsudo make\nsudo install fbcp /usr/local/bin/fbcp\ncd - > /dev/null\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo-fbcp.conf  /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf ./etc/rc.local /etc/rc.local\nfi\nelse\necho \"install cmake error!!!!\"\nfi\nelse\necho \"bad network, can't install cmake!!!\"\nfi\n\n#evdev install\n#nodeplatform=`uname -n`\n#kernel=`uname -r`\nversion=`uname -v`\n#if test \"$nodeplatform\" = \"raspberrypi\";then\n#echo \"this is raspberrypi kernel\"\ninput_result=0\nversion=${version##* }\n#version=${version#*#}\necho $version\nif test $version -lt 2017;then\necho \"reboot\"\nelse\necho \"need to update touch configuration\"\nwget --spider -q -o /dev/null --tries=1 -T 10 http://mirrors.zju.edu.cn/raspbian/raspbian\nif [ $? -ne 0 ]; then\ninput_result=1\nelse\nsudo apt-get install xserver-xorg-input-evdev  2> error_output.txt\ndpkg -l | grep xserver-xorg-input-evdev > /dev/null 2>&1\nif [ $? -ne 0 ]; then\ninput_result=1\nfi\nfi\nif [ $input_result -eq 1 ]; then \nif [ $hardware_arch -eq 32 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb 2> error_output.txt\nelif [ $hardware_arch -eq 64 ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb 2> error_output.txt\nfi\nfi\nresult=`cat ./error_output.txt`\necho -e \"\\033[31m$result\\033[0m\"\ngrep -q \"error:\" ./error_output.txt && exit\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf /usr/share/X11/xorg.conf.d/45-evdev.conf\n#echo \"reboot\"\nfi\n#else\n#echo \"this is not raspberrypi kernel, no need to update touch configure, reboot\"\n#fi\n\nsudo sync\nsudo sync\nsleep 1\nif [ $# -eq 1 ]; then\nsudo ./rotate.sh $1\nelif [ $# -gt 1 ]; then\necho \"Too many parameters\"\nfi\n\necho \"reboot now\"\nsudo reboot\n"
        },
        {
          "name": "PyMouse-1.0.tar.gz",
          "type": "blob",
          "size": 3.9248046875,
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3671875,
          "content": "### Install drivers in the Ubuntu system\nhttps://github.com/lcdwiki/LCD-show-ubuntu\n\n### Install drivers in the Kali system\nhttps://github.com/lcdwiki/LCD-show-kali\n\n### Install drivers in the RetroPie system\nhttps://github.com/lcdwiki/LCD-show-retropie\n\n\n\nInstall drivers in the Raspbian system<br>\n====================================================\nUpdate: <br>\n  v2.1-20191106<br>\n  Update to support MHS35B<br>\nUpdate: <br>\n  v2.0-20190704<br>\n  Update to support rotate the display direction<br>\nUpdate: <br>\n  v1.9-20181204<br>\n  Update to support MHS40 & MHS32<br>\nUpdate: <br>\n  v1.8-20180907<br>\n  Update to support MHS35<br>\nUpdate: <br>\n  v1.7-20180320<br>\n  Update to support Raspbian Version: March 2018(Release date:2018-03-13)<br>\nUpdate: <br>\n  v1.6-20170824<br>\n  Update xserver to support Raspbian-2017-08-16<br>\nUpdate: <br>\n  v1.5-20170706<br>\n  Update to support Raspbian-2017-07-05, Raspbian-2017-06-21<br>\nUpdate: <br>\n  v1.3-20170612<br>\n  fixed to support Raspbian-2017-03-02, Raspbian-2017-04-10<br>\nUpdate: <br>\n  v1.2-20170302<br>\n  Add xserver-xorg-input-evdev_1%3a2.10.3-1_armhf.deb to support Raspbian-2017-03-02<br>\nUpdate: <br>\n  v1.1-20160815<br><br>\n\n\n# How to install the LCD driver of Raspberry Pi\n  \n1.)Step1, Install Raspbian official mirror <br>\n====================================================\n  a)Download Raspbian official mirror:<br>\n  https://www.raspberrypi.org/downloads/<br>\n  b)Use“SDFormatter.exe”to Format your TF Card<br>\n  c)Use“Win32DiskImager.exe” Burning mirror to TF Card<br>\n     \n2.) Step2, Clone my repo onto your pi<br>\n====================================================\nUse SSH to connect the Raspberry Pi, <br>\nAnd Ensure that the Raspberry Pi is connected to the Internet before executing the following commands:\n-----------------------------------------------------------------------------------------------------\n\n```sudo rm -rf LCD-show```<br>\n```git clone https://github.com/goodtft/LCD-show.git```<br>\n```chmod -R 755 LCD-show```<br>\n```cd LCD-show/```<br>\n  \n3.)Step3, According to your LCD's type, excute the corresponding driver:\n====================================================\n\n# 2.4” RPi Display (MPI2401):\n### Driver install:\nsudo ./LCD24-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/2.4inch_RPi_Display  <br>\nEN: http://www.lcdwiki.com/2.4inch_RPi_Display\n \n\n# 2.4” RPi Display For RPi 3A+ (MPI2411):\n### Driver install:\nsudo ./LCD24-3A+-show  \n### WIKI:\nCN: http://www.lcdwiki.com/zh/2.4inch_RPi_Display_For_RPi_3A+   <br>\nEN: http://www.lcdwiki.com/2.4inch_RPi_Display_For_RPi_3A+\n\n# 2.8” RPi Display (MPI2801):\n### Driver install:\nsudo ./LCD28-show \n### WIKI:\nCN: http://www.lcdwiki.com/zh/2.8inch_RPi_Display  <br>\nEN: http://www.lcdwiki.com/2.8inch_RPi_Display\n  \n# 3.2” RPi Display (MPI3201):\n### Driver install:\nsudo ./LCD32-show   \n### WIKI:\nCN: http://www.lcdwiki.com/zh/3.2inch_RPi_Display  <br>\nEN: http://www.lcdwiki.com/3.2inch_RPi_Display\n\n# MHS-3.2” RPi Display (MHS3232):\n### Driver install:\nsudo ./MHS32-show   \n### WIKI:\nCN: http://www.lcdwiki.com/zh/MHS-3.2inch_Display  <br>\nEN: http://www.lcdwiki.com/MHS-3.2inch_Display\n\n# 3.5” RPi Display(MPI3501):\n### Driver install:\nsudo ./LCD35-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/3.5inch_RPi_Display  <br>\nEN: http://www.lcdwiki.com/3.5inch_RPi_Display\n   \n# 3.5” HDMI Display-B(MPI3508):\n### Driver install:\nsudo ./MPI3508-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/3.5inch_HDMI_Display-B  <br>\nEN: http://www.lcdwiki.com/3.5inch_HDMI_Display-B\n    \n# MHS-3.5” RPi Display(MHS3528):\n### Driver install:\nsudo ./MHS35-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/MHS-3.5inch_RPi_Display  <br>\nEN:http://www.lcdwiki.com/MHS-3.5inch_RPi_Display\n\n# MHS-3.5” RPi Display-B(MHS35XX):\n### Driver install:\nsudo ./MHS35B-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/MHS-3.5inch_RPi_Display-B  <br>\nEN:http://www.lcdwiki.com/MHS-3.5inch_RPi_Display-B\n\n# 4.0\" HDMI Display(MPI4008):\n### Driver install:\nsudo ./MPI4008-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/4inch_HDMI_Display-C  <br>\nEN: http://www.lcdwiki.com/4inch_HDMI_Display-C\n   \n# MHS-4.0\" HDMI Display-B(MHS4001):\n### Driver install:\nsudo ./MHS40-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/MHS-4.0inch_Display-B  <br>\nEN: http://www.lcdwiki.com/MHS-4.0inch_Display-B\n  \n# 5.0” HDMI Display(Resistance touch)(MPI5008):\n### Driver install:\nsudo ./LCD5-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/5inch_HDMI_Display  <br>\nEN: http://www.lcdwiki.com/5inch_HDMI_Display\n    \n# 5inch HDMI Display-B(Capacitor touch)(MPI5001):\n### Driver install:\nsudo ./MPI5001-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/5inch_HDMI_Display-B  <br>\nEN: http://www.lcdwiki.com/5inch_HDMI_Display-B\n    \n# 7inch HDMI Display-B-800X480(MPI7001):\n### Driver install:\nsudo ./LCD7B-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/7inch_HDMI_Display-B  <br>\nEN: http://www.lcdwiki.com/7inch_HDMI_Display-B\n   \n# 7inch HDMI Display-C-1024X600(MPI7002):\n### Driver install:\nsudo ./LCD7C-show\n### WIKI:\nCN: http://www.lcdwiki.com/zh/7inch_HDMI_Display-C  <br>\nEN: http://www.lcdwiki.com/7inch_HDMI_Display-C\n   \nWait for a moment after executing the above command, then you can use the corresponding raspberry LCD.\n\n\n\n\n# How to rotate the display direction\n\nThis method only applies to the Raspberry Pi series of display screens, other display screens do not apply.\n\n### Method 1, If the driver is not installed, execute the following command (Raspberry Pi needs to connected to the Internet):\n\nsudo rm -rf LCD-show<br>\ngit clone https://github.com/goodtft/LCD-show.git<br>\nchmod -R 755 LCD-show<br>\ncd LCD-show/<br>\nsudo ./XXX-show 90<br>\n\nAfter execution, the driver will be installed. The system will automatically restart, and the display screen will rotate 90 degrees to display and touch normally.<br>\n( ' XXX-show ' can be changed to the corresponding driver, and ' 90 ' can be changed to 0, 90, 180 and 270, respectively representing rotation angles of 0 degrees, 90 degrees, 180 degrees, 270 degrees)<br>\n\n### Method 2, If the driver is already installed, execute the following command:\n\ncd LCD-show/<br>\nsudo ./rotate.sh 90<br>\n\nAfter execution, the system will automatically restart, and the display screen will rotate 90 degrees to display and touch normally.<br>\n( ' 90 ' can be changed to 0, 90, 180 and 270, respectively representing rotation angles of 0 degrees, 90 degrees, 180 degrees, 270 degrees)<br>\n(If the rotate.sh prompt cannot be found, use Method 1 to install the latest drivers)\n\n\n\n"
        },
        {
          "name": "boot",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "python-xlib_0.23-2_all.deb",
          "type": "blob",
          "size": 116.6484375,
          "content": null
        },
        {
          "name": "rotate.sh",
          "type": "blob",
          "size": 6.330078125,
          "content": "#!/bin/bash\ncur_dir=`pwd`\nif [ ! -f $cur_dir/.have_installed ]; then\necho \"Please install the LCD driver first\"\necho \"Usage: sudo ./xxx-show. xxx: MHS35,LCD35,MPI3508 etc.\"\nexit\nfi\n\nprint_info()\n{\necho \"Usage:sudo ./rotate.sh [0] [90] [180] [270] [360] [450]\"\necho \"0-Screen rotation 0 degrees\"\necho \"90-Screen rotation 90 degrees\"\necho \"180-Screen rotation 180 degrees\"\necho \"270-Screen rotation 270 degrees\"\necho \"360-Screen flip horizontal(Valid only for HDMI screens)\"\necho \"450-Screen flip vertical(Valid only for HDMI screens)\"\n}\n\nif [ $# -eq 0 ]; then\necho \"Please input parameter:0,90,180,270,360,450\"\nprint_info\nexit\nelif [ $# -eq 1 ]; then\nif [ ! -n \"$(echo $1| sed -n \"/^[0-9]\\+$/p\")\" ]; then\necho \"Invalid parameter\"\nprint_info\nexit\nelse\nif [ $1 -ne 0 ] && [ $1 -ne 90 ] && [ $1 -ne 180 ] && [ $1 -ne 270 ] && [ $1 -ne 360 ] && [ $1 -ne 450 ]; then\necho \"Invalid parameter\"\nprint_info\nexit\nfi\nfi\nelse\necho \"Too many parameters, only one parameter allowed\"\nexit\nfi\n\n#get screen parameter\ntmp=`cat $cur_dir/.have_installed`\noutput_type=`cat $cur_dir/.have_installed | awk -F ':' '{printf $1}'`\ntouch_type=`cat $cur_dir/.have_installed | awk -F ':' '{printf $2}'`\ndevice_id=`cat $cur_dir/.have_installed | awk -F ':' '{printf $3}'`\ndefault_value=`cat $cur_dir/.have_installed | awk -F ':' '{printf $4}'`\nwidth=`cat $cur_dir/.have_installed | awk -F ':' '{printf $5}'`\nheight=`cat $cur_dir/.have_installed | awk -F ':' '{printf $6}'`\n\nif [ $output_type = \"hdmi\" ]; then\nresult=`grep -rn \"^display_rotate=\" /boot/config.txt | tail -n 1`\nline=`echo -n $result | awk -F: '{printf $1}'`\nstr=`echo -n $result | awk -F: '{printf $NF}'`\nold_rotate_value=`echo -n $result | awk -F= '{printf $NF}'`\nif [ $old_rotate_value = \"0x10000\" ]; then\nold_rotate_value=4\nelif  [ $old_rotate_value = \"0x20000\" ]; then\nold_rotate_value=5\nfi\nif [ $1 -eq 0 ] || [ $1 -eq 90 ] || [ $1 -eq 180 ] || [ $1 -eq 270 ]; then\nnew_rotate_value=$[(($default_value+$1)%360)/90]\nelse\nnew_rotate_value=$[$1/90]\nfi\nelif [ $output_type = \"gpio\" ]; then\nresult=`grep -rn \"^dtoverlay=\" /boot/config.txt | grep \":rotate=\" | tail -n 1`\nline=`echo -n $result | awk -F: '{printf $1}'`\nstr=`echo -n $result | awk -F: '{printf $NF}'`\nold_rotate_value=`echo -n $result | awk -F= '{printf $NF}'`\nif [ $1 -eq 0 ] || [ $1 -eq 90 ] || [ $1 -eq 180 ] || [ $1 -eq 270 ]; then\nnew_rotate_value=$[($default_value+$1)%360]\nelse\necho \"Invalid parameter: only for HDMI screens\"\nexit\nfi\nelse\necho \"Invalid output type\"\nexit\nfi\n\nif [ $old_rotate_value -eq $new_rotate_value ]; then\nif [ $output_type = \"hdmi\" ]; then\nif [ $1 -eq 0 ] || [ $1 -eq 90 ] || [ $1 -eq 180 ] || [ $1 -eq 270 ]; then\nold_rotate_value=$[($old_rotate_value*90+360-$default_value)%360]\nelse\nold_rotate_value=$[$old_rotate_value*90]\nfi\nelif [ $output_type = \"gpio\" ]; then\nold_rotate_value=$[($old_rotate_value+360-$default_value)%360]\nfi\necho \"Current rotate value is $old_rotate_value\"\nexit\nfi\n\n#setting LCD rotate\nif [ $output_type = \"hdmi\" ]; then\nif [ $new_rotate_value -eq 4 ]; then\nsudo sed -i --follow-symlinks -e ''\"$line\"'s/'\"$str\"'/display_rotate=0x10000/' /boot/config.txt\nelif  [ $new_rotate_value -eq 5 ]; then\nsudo sed -i --follow-symlinks -e ''\"$line\"'s/'\"$str\"'/display_rotate=0x20000/' /boot/config.txt\nelse\nsudo sed -i --follow-symlinks -e ''\"$line\"'s/'\"$str\"'/display_rotate='\"$new_rotate_value\"'/' /boot/config.txt\nfi\nnew_rotate_value=$[$new_rotate_value*90]\nelif [ $output_type = \"gpio\" ]; then\nsudo sed -i --follow-symlinks -e ''\"$line\"'s/'\"$str\"'/rotate='\"$new_rotate_value\"'/' /boot/config.txt\nresultr=`grep -rn \"^hdmi_cvt\" /boot/config.txt | tail -n 1 | awk -F' ' '{print $1,$2,$3}'`\nif [ -n \"$resultr\" ]; then\nliner=`echo -n $resultr | awk -F: '{printf $1}'`\nstrr=`echo -n $resultr | awk -F: '{printf $2}'`\nif [ $new_rotate_value -eq $default_value ] || [ $new_rotate_value -eq $[($default_value+180+360)%360] ]; then\nsudo sed -i --follow-symlinks -e ''\"$liner\"'s/'\"$strr\"'/hdmi_cvt '\"$width\"' '\"$height\"'/' /boot/config.txt\nelif [ $new_rotate_value -eq $[($default_value-90+360)%360] ] || [ $new_rotate_value -eq $[($default_value+90+360)%360] ]; then\nsudo sed -i --follow-symlinks -e ''\"$liner\"'s/'\"$strr\"'/hdmi_cvt '\"$height\"' '\"$width\"'/' /boot/config.txt\nfi\nfi\nfi\n\n#setting touch screen rotate\nif [ $touch_type = \"resistance\" ]; then \nif [ $new_rotate_value -eq 0 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-0 /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 90 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-90 /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 180 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-180 /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 270 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-270 /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 360 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-FLIP-H /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to flip horizontally\"\nelif [ $new_rotate_value -eq 450 ]; then\nsudo cp $cur_dir/usr/99-calibration.conf-$device_id-FLIP-V /etc/X11/xorg.conf.d/99-calibration.conf\necho \"LCD rotate value is set to flip vertically\"\nfi\nelif [ $touch_type = \"capacity\" ]; then\nif [ $new_rotate_value -eq 0 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-0 /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 90 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-90 /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 180 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-180 /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 270 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-270 /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to $1\"\nelif [ $new_rotate_value -eq 360 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-FLIP-H /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to flip horizontally\"\nelif [ $new_rotate_value -eq 450 ]; then\nsudo cp $cur_dir/usr/40-libinput.conf-FLIP-V /etc/X11/xorg.conf.d/40-libinput.conf\necho \"LCD rotate value is set to flip vertically\"\nfi\nelse\necho \"Invalid touch type\"\nexit\nfi\n\nsudo sync\nsudo sync\n\necho \"reboot now\"\nsleep 1\nsudo reboot\n\n"
        },
        {
          "name": "system_backup.sh",
          "type": "blob",
          "size": 3.1142578125,
          "content": "#!/bin/bash\ndeb_ver=`cat /etc/debian_version | tr -d '\\n'`\n\nif [ ! -d \"./.system_backup\" ]; then\nsudo mkdir ./.system_backup\nfi\n\nsudo rm -rf ./.system_backup/*\n\nif [ -f /etc/X11/xorg.conf.d/99-calibration.conf ]; then\nsudo cp -rf /etc/X11/xorg.conf.d/99-calibration.conf ./.system_backup\nsudo rm -rf /etc/X11/xorg.conf.d/99-calibration.conf\nfi\n\nif [ -f /etc/X11/xorg.conf.d/40-libinput.conf ]; then\nsudo cp -rf /etc/X11/xorg.conf.d/40-libinput.conf ./.system_backup\nsudo rm -rf /etc/X11/xorg.conf.d/40-libinput.conf\nfi\n\nif [ -d /etc/X11/xorg.conf.d ]; then\nsudo mkdir -p ./.system_backup/xorg.conf.d\nsudo rm -rf /etc/X11/xorg.conf.d\nfi\n\nresult=`grep -rn \"^dtoverlay=\" /boot/config.txt | grep \":rotate=\" | tail -n 1`\nif [ $? -eq 0 ]; then\nstr=`echo -n $result | awk -F: '{printf $2}' | awk -F= '{printf $NF}'`\nif [ -f /boot/overlays/$str-overlay.dtb ]; then\nsudo cp -rf /boot/overlays/$str-overlay.dtb ./.system_backup\nsudo rm -rf /boot/overlays/$str-overlay.dtb\nfi\nif [ -f /boot/overlays/$str.dtbo ]; then\nsudo cp -rf /boot/overlays/$str.dtbo ./.system_backup\nsudo rm -rf /boot/overlays/$str.dtbo\nfi\nfi\n\nroot_dev=`grep -oPr \"root=[^\\s]*\" /boot/cmdline.txt | awk -F= '{printf $NF}'`\nsudo cp -rf /boot/config.txt ./.system_backup\nsudo cp -rf /boot/cmdline.txt ./.system_backup/\nif test \"$root_dev\" = \"/dev/mmcblk0p7\";then\nsudo cp -rf ./boot/config-noobs-nomal.txt /boot/config.txt\n#sudo cp -rf ./usr/cmdline.txt-noobs-original /boot/cmdline.txt\nelse\nsudo cp -rf ./boot/config-nomal.txt /boot/config.txt\n#sudo cp -rf ./usr/cmdline.txt-original /boot/cmdline.txt\nfi\nif [ -f /usr/share/X11/xorg.conf.d/99-fbturbo.conf ]; then\nsudo cp -rf /usr/share/X11/xorg.conf.d/99-fbturbo.conf ./.system_backup/\nfi\nif [[ \"$deb_ver\" < \"12.1\" ]]; then\nsudo cp -rf ./usr/99-fbturbo.conf-original /usr/share/X11/xorg.conf.d/99-fbturbo.conf\nfi\nsudo cp -rf /etc/rc.local ./.system_backup/\nsudo cp -rf ./etc/rc.local-original /etc/rc.local\n\nsudo cp -rf /etc/modules ./.system_backup/\nsudo cp -rf ./etc/modules-original /etc/modules\n\nif [ -f /etc/modprobe.d/fbtft.conf ]; then\nsudo cp -rf /etc/modprobe.d/fbtft.conf ./.system_backup\nsudo rm -rf /etc/modprobe.d/fbtft.conf\nfi\n\nif [ -f /etc/inittab ]; then\nsudo cp -rf /etc/inittab ./.system_backup\nsudo rm -rf /etc/inittab\nfi\n\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo touch ./.system_backup/have_fbcp\nsudo rm -rf /usr/local/bin/fbcp\nfi\n\n#type cmake > /dev/null 2>&1\n#if [ $? -eq 0 ]; then\n#sudo touch ./.system_backup/have_cmake\n#sudo apt-get purge cmake -y 2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\n#fi\n\nif [ -f /usr/share/X11/xorg.conf.d/10-evdev.conf ]; then\nsudo cp -rf /usr/share/X11/xorg.conf.d/10-evdev.conf ./.system_backup\nsudo dpkg -P xserver-xorg-input-evdev\n#sudo apt-get purge xserver-xorg-input-evdev -y  2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\nfi\n\nif [ -f /usr/share/X11/xorg.conf.d/45-evdev.conf ]; then\nsudo cp -rf /usr/share/X11/xorg.conf.d/45-evdev.conf ./.system_backup\nsudo rm -rf /usr/share/X11/xorg.conf.d/45-evdev.conf\nfi\n\nif [ -f ./.have_installed ]; then\nsudo cp -rf ./.have_installed ./.system_backup\nsudo rm -rf ./.have_installed\nfi\n"
        },
        {
          "name": "system_config.sh",
          "type": "blob",
          "size": 1.0712890625,
          "content": "#!/bin/bash\n\nbig_version=`lsb_release -r | awk -F ' '  '{printf $NF}'`\ndeb_version=`cat /etc/debian_version | tr -d '\\n'`\nhw_result=`tr -d '\\0' < /proc/device-tree/model`\n\nif [ $(getconf WORD_BIT) = '32' ] && [ $(getconf LONG_BIT) = '64' ] ; then\nhardware_arch=64\nelse\nhardware_arch=32\nfi\n\nif [[ $hw_result == *\"Raspberry Pi 5\"* ]]; then\nhardware_model=5\nelse\nhardware_model=255\nfi\n\nsudo raspi-config nonint do_wayland W1\nif [ -f /boot/firmware/config.txt ]; then\nsudo ln -sf /boot/firmware/config.txt /boot/config.txt\nfi\n\nif [ $hardware_arch -eq 32 ]; then\nif [ $(($big_version)) -lt 10 ]; then\nsudo cp -rf ./boot/config-nomal-10.9-32.txt ./boot/config.txt.bak\nelse\nif [[ \"$deb_version\" < \"10.9\" ]] || [[ \"$deb_version\" = \"10.9\" ]]; then\nsudo cp -rf ./boot/config-nomal-10.9-32.txt ./boot/config.txt.bak\nelif [[ \"$deb_version\" < \"12.1\" ]]; then\nsudo cp -rf ./boot/config-nomal-11.4-32.txt ./boot/config.txt.bak\nelse\nsudo cp -rf ./boot/config-nomal-12.1-32.txt ./boot/config.txt.bak\nfi\nfi\nelif [ $hardware_arch -eq 64 ]; then\nsudo cp -rf ./boot/config-nomal-11.4-64.txt ./boot/config.txt.bak\nfi\n\n\n"
        },
        {
          "name": "system_restore.sh",
          "type": "blob",
          "size": 3.1396484375,
          "content": "#!/bin/bash\n#Just finished the system, no need to restore\nif [ ! -d \"./.system_backup\" ]; then\necho \"The system is the original version and does not need to be restored\"\nexit\nfi\n\nif [ -d /etc/X11/xorg.conf.d ]; then\nsudo rm -rf /etc/X11/xorg.conf.d\nfi\nif [ -d ./.system_backup/xorg.conf.d ]; then\nsudo cp -rf ./.system_backup/xorg.conf.d /etc/X11\nif [ -f ./.system_backup/99-calibration.conf ]; then\nsudo cp -rf ./.system_backup/99-calibration.conf /etc/X11/xorg.conf.d\nfi\nif [ -f ./.system_backup/40-libinput.conf ]; then\nsudo cp -rf ./.system_backup/40-libinput.conf /etc/X11/xorg.conf.d\nfi\nfi\n\nresult=`grep -rn \"^dtoverlay=\" /boot/config.txt | grep \":rotate=\" | tail -n 1`\nif [ $? -eq 0 ]; then\nstr=`echo -n $result | awk -F: '{printf $2}' | awk -F= '{printf $NF}'`\nsudo rm -rf /boot/overlays/$str-overlay.dtb\nsudo rm -rf /boot/overlays/$str.dtbo\nfi\nls -al ./.system_backup/*.dtb > /dev/null 2>&1 && sudo cp -rf ./.system_backup/*.dtb  /boot/overlays/\nls -al ./.system_backup/*.dtbo > /dev/null 2>&1 && sudo cp -rf ./.system_backup/*.dtbo  /boot/overlays/\n\nif [ -f ./.system_backup/99-fbturbo.conf ];then\nsudo cp -rf ./.system_backup/99-fbturbo.conf /usr/share/X11/xorg.conf.d\nfi\nsudo cp -rf ./.system_backup/cmdline.txt /boot/\nsudo cp -rf ./.system_backup/config.txt /boot/\nsudo cp -rf ./.system_backup/rc.local /etc/\nsudo cp -rf ./.system_backup/modules /etc/\n\nif [ -f /etc/inittab ]; then\nsudo rm -rf /etc/inittab\nfi\nif [ -f ./.system_backup/inittab ]; then\nsudo cp -rf ./.system_backup/inittab  /etc\nfi\n\nif [ -f /etc/modprobe.d/fbtft.conf ]; then\nsudo rm -rf /etc/modprobe.d/fbtft.conf\nfi\nif [ -f ./.system_backup/fbtft.conf ]; then\nsudo cp -rf ./.system_backup/fbtft.conf  /etc/modprobe.d\nfi\n\ntype fbcp > /dev/null 2>&1\nif [ $? -eq 0 ]; then\nsudo rm -rf /usr/local/bin/fbcp\nfi\nif [ -f ./.system_backup/have_fbcp ]; then\nsudo install ./rpi-fbcp/build/fbcp /usr/local/bin/fbcp\nfi\n\n#type cmake > /dev/null 2>&1\n#if [ $? -eq 0 ]; then\n#sudo apt-get purge cmake -y 2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\n#fi\n#if [ -f ./.system_backup/have_cmake ]; then\n#sudo apt-get install cmake -y 2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\n#fi\n\nif [ -f /usr/share/X11/xorg.conf.d/10-evdev.conf ]; then\nsudo dpkg -P xserver-xorg-input-evdev\n#sudo apt-get purge xserver-xorg-input-evdev -y 2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\nfi\nif [ -f ./.system_backup/10-evdev.conf ]; then\nsudo dpkg -i -B ./xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb\n#sudo apt-get install xserver-xorg-input-evdev -y 2> error_output.txt\n#result=`cat ./error_output.txt`\n#echo -e \"\\033[31m$result\\033[0m\"\nfi\n\nif [ -f /usr/share/X11/xorg.conf.d/45-evdev.conf ]; then\nsudo rm -rf /usr/share/X11/xorg.conf.d/45-evdev.conf\nfi\nif [ -f ./.system_backup/45-evdev.conf ]; then\nsudo cp -rf ./.system_backup/45-evdev.conf /usr/share/X11/xorg.conf.d\nfi\n\nif [ -f ./.have_installed ]; then\nsudo rm -rf ./.have_installed\nfi\nif [ -f ./.system_backup/.have_installed ]; then\nsudo cp -rf ./.system_backup/.have_installed ./\nfi\n\nsudo sync\nsudo sync\n\necho \"The system has been restored\"\necho \"now reboot\"\nsleep 1\n\nsudo reboot\n"
        },
        {
          "name": "usr",
          "type": "tree",
          "content": null
        },
        {
          "name": "xinput-calibrator_0.7.5+git20140201-1+b2_arm64.deb",
          "type": "blob",
          "size": 42.890625,
          "content": null
        },
        {
          "name": "xinput-calibrator_0.7.5-1_armhf.deb",
          "type": "blob",
          "size": 40.568359375,
          "content": null
        },
        {
          "name": "xserver-xorg-input-evdev_1%3a2.10.6-1+b1_armhf.deb",
          "type": "blob",
          "size": 114.4375,
          "content": null
        },
        {
          "name": "xserver-xorg-input-evdev_1%3a2.10.6-2_arm64.deb",
          "type": "blob",
          "size": 116.59375,
          "content": null
        }
      ]
    }
  ]
}