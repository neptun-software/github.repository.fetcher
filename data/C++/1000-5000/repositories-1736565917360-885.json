{
  "metadata": {
    "timestamp": 1736565917360,
    "page": 885,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vshymanskyy/TinyGSM",
      "stars": 1995,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.1923828125,
          "content": "---\nLanguage: Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: false\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nAlignEscapedNewlines: Left\nAlignOperands: false\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: WithoutElse\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit: 80\nCommentPragmas: \"^ IWYU pragma:\"\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks: Preserve\nIncludeCategories:\n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\n  - Regex:           '.*.tpp'\n    Priority:        4\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth: 2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: \"\"\nMacroBlockEnd: \"\"\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\n# ObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 25\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 600\nPenaltyReturnTypeOnItsOwnLine: 50\nPointerAlignment: Left\nPointerBindsToType: true\nReflowComments: true\nSortIncludes: false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp11\nTabWidth: 2\nUseTab: Never\n---\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1357421875,
          "content": "/extras export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n\n*.ino filter=updateUsersAndPasses"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.689453125,
          "content": "# Compiled files, executables\n*.o\n*.a\n*.exe\n*.out\n*.app\n\n# Junk\n*.orig\n*.log\n*.bak\n\n# IDE project files\n.cproject\n.project\n.settings\n.pioenvs\n.piolibdeps\n.pio/*\n.clang_complete\n.gcc-flags.json\nplatformio.ini\nextra_envs.ini\nlib/readme.txt\ninclude/readme.txt\n.atomrc.cson\n.history\n\n# VSCode\n.vscode/*\n.vscode/.browse.c_cpp.db*\n.vscode/c_cpp_properties.json\n.vscode/launch.json\n\n# Markers\n.development\n\n# Extras\nextras/docs/*\nextras/Module Datasheets/*\nextras/Older Command Manuals/*\nextras/Older Command Manuals/*\nextras/At Command Manuals - Unsupported/*\n\n# Filters\n.gitconfig\nfilters/*\nplatformio_extra_envs.ini\n*.tar.gz\npioScripts/generate_compile_commands.py\ncompile_commands.json\nsrc/TinyGsmATDefines.h\n"
        },
        {
          "name": ".travis_archive.yml_archive",
          "type": "blob",
          "size": 6.9736328125,
          "content": "language: python\npython:\n    - \"2.7\"\n\n# Cache PlatformIO packages using Travis CI container-based infrastructure\n#sudo: false\ncache:\n    directories:\n        - \"~/.platformio\"\n\nenv:\n    - PLATFORMIO_CI_SRC=examples/BlynkClient\n    - PLATFORMIO_CI_SRC=examples/FileDownload\n    - PLATFORMIO_CI_SRC=examples/MqttClient\n    - PLATFORMIO_CI_SRC=examples/WebClient\n    - PLATFORMIO_CI_SRC=tools/AT_Debug\n    - PLATFORMIO_CI_SRC=tools/Diagnostics\n    - PLATFORMIO_CI_SRC=tools/FactoryReset\n\n    # Arduino test\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_A6'      --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_BG96'    --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_ESP8266' --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_M95'     --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_M590'    --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_MC60'    --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SIM800'  --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SIM808'  --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SIM5360' --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SIM7600' --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SIM7000' --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_UBLOX'   --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SARAR4'  --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_XBEE'    --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n    - PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_SEQUANS_MONARCH'    --project-option='framework=arduino' --board=uno --board=leonardo --board=yun --board=megaatmega2560 --board=genuino101 --board=mkr1000USB --board=zero --board=teensy31 --board=bluepill_f103c8 --board=uno_pic32 --board=esp01 --board=nodemcuv2 --board=esp32dev\"\n\n    # Disabled due to a bug in Energia readBytes implementation\n    #- PLATFORMIO_CI_SRC=tools/test_build PLATFORMIO_CI_ARGS=\"--project-option='build_flags=-D TINY_GSM_MODEM_XBEE'    --project-option='framework=energia' --board=lplm4f120h5qr\"\n\ninstall:\n    # ChipKIT issue: install 32-bit support for GCC PIC32\n    - sudo apt-get install libc6-i386\n\n    - pip install -U https://github.com/platformio/platformio/archive/develop.zip\n    - platformio upgrade\n    - platformio update\n\n    #\n    # Libraries from PlatformIO Library Registry:\n    #\n    # http://platformio.org/lib/show/89/PubSubClient\n    # http://platformio.org/lib/show/415/Blynk\n    # http://platformio.org/lib/show/1202/CRC32\n    # http://platformio.org/lib/show/1286/StreamDebugger\n\n    - platformio lib -g install 89 415 1202 1286\n    - platformio lib -g update\n    - platformio lib update\n    - platformio lib list\n    - platformio lib -g list\n\nscript: make travis-build\n"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 2.26171875,
          "content": "# ChangeLog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand its stricter, better defined, brother [Common Changelog](https://common-changelog.org/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n***\n\n\n## [Unreleased]\n****\n### Changed\n\n### Added\n\n### Removed\n\n### Fixed\n\n***\n\n\n## [v0.12.0]\n\n### Changed\n- Moved bulk of waitResponse function to modem template and gave modems handleURCs fxn\n- Moved option in waitResponse for verbose outputs.\n- setBaud now returns a bool\n- Replace new line consts with defines and renamed to AT_NL\n- Renamed all RegStatus enums to be unique\n- Replaced `NULL` with `nullptr` and replaced c-style casts.\n- Moved setCertificates function and the certificate name matrix to the SSL template.\n- Changed inputs for (unimplemented) SSL certificate functions.\n- All modems will now return the pre-defined manufacturer and model in the name if the function to get the internal name fails.\n- Cleaned up code for getting modem names.\n- Made battery return types signed.\n\n### Added\n- Added support for SSL for the Quentcel BG95 and BG96 from [Aurelien BOUIN](https://github.com/aurelihein) and [George O'Connor](https://github.com/georgeman93)\n- Added support for UBLOX SARA-R5 from [Sebastian Bergner](https://github.com/sebastianbergner)\n- Added support for SIMCOM A7672X from [Giovanni de Rosso Unruh](https://github.com/giovannirosso)\n- Added SIM5320 GPS location from [Bengarman](https://github.com/Bengarman)\n- Added functions `getModemSerialNumber`, `getModemModel`, and `getModemRevision`.\n- Added deep debugging option\n- Added documentation to the FIFO class\n\n### Removed\n- Removed non-functional factory reset from SIM70xx series\n\n### Fixed\n- Removed extra wait on SIM7000 from [Mikael Fredriksson](https://github.com/Gelemikke)\n- Fix status returns on ESP8266/ESP32 AT commands\n- Fix length of HEX for Sequans Monarch\n- Fix SIM7600 password then user when cid is set from [github0013](https://github.com/github0013)\n- Fix cardinal points in location by gps for SIM7600 from [Juxn3](https://github.com/Juxn3)\n- Fix NTP server sync for SIM70xx models from [Gonzalo Brusco](https://github.com/gonzabrusco)\n- Fixed SIM70xx inheritance\n\n***\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.158203125,
          "content": ".PHONY: travis-build\n\ntravis-build:\nifdef PLATFORMIO_CI_ARGS\n\tplatformio ci --lib=\".\" $(PLATFORMIO_CI_ARGS)\nelse\n\tplatformio ci --lib=\".\" --board=leonardo\nendif\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.462890625,
          "content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)\n\n![TinyGSM logo](https://cdn.rawgit.com/vshymanskyy/TinyGSM/d18e93dc51fe988a0b175aac647185457ef640b5/extras/logo.svg)\n\nA small Arduino library for GSM modules, that just works.\n<!---\n[![GitHub download](https://img.shields.io/github/downloads/vshymanskyy/TinyGSM/total.svg)](https://github.com/vshymanskyy/TinyGSM/releases/latest)--->\n[![GitHub version](https://img.shields.io/github/release/vshymanskyy/TinyGSM.svg)](https://github.com/vshymanskyy/TinyGSM/releases/latest)\n[![Build status](https://img.shields.io/travis/vshymanskyy/TinyGSM.svg)](https://travis-ci.org/vshymanskyy/TinyGSM)\n[![GitHub issues](https://img.shields.io/github/issues/vshymanskyy/TinyGSM.svg)](https://github.com/vshymanskyy/TinyGSM/issues)\n[![GitHub wiki](https://img.shields.io/badge/Wiki-available-brightgreen.svg)](https://github.com/vshymanskyy/TinyGSM/wiki)\n[![GitHub stars](https://img.shields.io/github/stars/vshymanskyy/TinyGSM.svg)](https://github.com/vshymanskyy/TinyGSM/stargazers)\n[![License](https://img.shields.io/badge/license-LGPL3-blue.svg)](https://github.com/vshymanskyy/TinyGSM/blob/master/LICENSE)\n\nIf you like **TinyGSM** - give it a star, or fork it and contribute!\n[![GitHub stars](https://img.shields.io/github/stars/vshymanskyy/TinyGSM.svg?style=social&label=Star)](https://github.com/vshymanskyy/TinyGSM/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/vshymanskyy/TinyGSM.svg?style=social&label=Fork)](https://github.com/vshymanskyy/TinyGSM/network)\n\nYou can also join our chat:\n[![Gitter](https://img.shields.io/gitter/room/vshymanskyy/TinyGSM.svg)](https://app.gitter.im/#/room/#tinygsm_Lobby:gitter.im)\n\n- [Supported modems](#supported-modems)\n  - [Supported boards/modules](#supported-boardsmodules)\n- [Features](#features)\n- [Getting Started](#getting-started)\n    - [First Steps](#first-steps)\n    - [Writing your own code](#writing-your-own-code)\n    - [If you have any issues](#if-you-have-any-issues)\n- [How does it work?](#how-does-it-work)\n- [API Reference](#api-reference)\n- [Troubleshooting](#troubleshooting)\n  - [Ensure stable data \\& power connection](#ensure-stable-data--power-connection)\n  - [Baud rates](#baud-rates)\n  - [Broken initial configuration](#broken-initial-configuration)\n  - [Failed connection or no data received](#failed-connection-or-no-data-received)\n  - [Diagnostics sketch](#diagnostics-sketch)\n  - [Web request formatting problems - \"but it works with PostMan\"](#web-request-formatting-problems---but-it-works-with-postman)\n  - [SoftwareSerial problems](#softwareserial-problems)\n  - [ESP32 Notes](#esp32-notes)\n    - [HardwareSerial](#hardwareserial)\n    - [HttpClient](#httpclient)\n  - [SAMD21](#samd21)\n  - [Goouuu Tech IOT-GA6 vs AI-Thinker A6 confusion](#goouuu-tech-iot-ga6-vs-ai-thinker-a6-confusion)\n  - [SIM800 and SSL](#sim800-and-ssl)\n  - [Which version of the SIM7000 code to use](#which-version-of-the-sim7000-code-to-use)\n- [License](#license)\n\n### Arduino Client interface support\nThis library is easy to integrate with lots of sketches which use Ethernet or WiFi.\n**PubSubClient ([MQTT](http://mqtt.org/))**, **[Blynk](http://blynk.cc)**, **HTTP Client** and **File Download** examples are provided.\n\n![examples](/extras/examples.png)\n\n### TinyGSM is tiny\nThe complete WebClient example for Arduino Uno (via Software Serial) takes little resources:\n```\nSketch uses 15022 bytes (46%) of program storage space. Maximum is 32256 bytes.\nGlobal variables use 574 bytes (28%) of dynamic memory, leaving 1474 bytes for local variables. Maximum is 2048 bytes.\n```\nArduino GSM library uses 15868 bytes (49%) of Flash and 1113 bytes (54%) of RAM in a similar scenario.\nTinyGSM also pulls data gently from the modem (whenever possible), so it can operate on very little RAM.\n**Now, you have more space for your experiments.**\n\n\n## Supported modems\n\n- SIMCom SIM800 series (SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868)\n- SIMCom SIM900 series (SIM900A, SIM900D, SIM908, SIM968)\n- SIMCom WCDMA/HSPA/HSPA+ Modules (SIM5360, SIM5320, SIM5300E, SIM5300E/A)\n- SIMCom LTE Modules (SIM7100E, SIM7500E, SIM7500A, SIM7600C, SIM7600E)\n- SIMCom SIM7000E/A/G CAT-M1/NB-IoT Module\n- SIMCom SIM7070/SIM7080/SIM7090 CAT-M1/NB-IoT Module\n- SIMCom A7672X CAT-M1 Module\n- AI-Thinker A6, A6C, A7, A20\n- ESP8266/ESP32 (AT commands interface, similar to GSM modems)\n- Digi XBee WiFi and Cellular (using XBee command mode)\n- Neoway M590\n- u-blox 2G, 3G, 4G, and LTE Cat1 Cellular Modems (many modules including LEON-G100, LISA-U2xx, SARA-G3xx, SARA-U2xx, TOBY-L2xx, LARA-R2xx, MPCI-L2xx)\n- u-blox LTE-M/NB-IoT Modems (SARA-R4xx, SARA-N4xx, SARA-R5xx, _but NOT SARA-N2xx_)\n- Sequans Monarch LTE Cat M1/NB1 (VZM20Q)\n- Quectel BG96\n- Quectel BG95\n- Quectel M95\n- Quectel MC60 ***(alpha)***\n\n### Supported boards/modules\n- EnviroDIY LTE Bee, WiFi Bee\n- Arduino MKR GSM 1400\n- Sodaq GPRSbee, uBee\n- Microduino GSM\n- Adafruit FONA Mini Cellular GSM Breakout, 800/808 Shield, FONA 3G\n- Industruino GSM\n- Dragino NB-IoT Bee\n- Digi XBee S6B, XBee LTE Cat 1, XBee3 LTE Cat 1, XBee3 CatM\n- Nimbelink Skywire/Airgain NL-SW-LTE-QBG96, NL-SW-LTE-QBG95\n- RAK WisLTE ***(alpha)***\n- ... other modules, based on supported modems. Some boards require [**special configuration**](https://github.com/vshymanskyy/TinyGSM/wiki/Board-configuration).\n\nWatch this repo for new updates! And of course, contributions are welcome ;)\n\n## Features\n\n**Data connections**\n- TCP (HTTP, MQTT, Blynk, ...)\n    - ALL modules support TCP connections\n    - Most modules support multiple simultaneous connections:\n        - A6/A7 - 8\n        - ESP8266 - 5\n        - Neoway M590 - 2\n        - Quectel BG96 - 12\n        - Quectel BG95 - 12\n        - Quectel M95 - 6\n        - Quectel MC60/MC60E - 6\n        - Sequans Monarch - 6\n        - SIM 800/900 - 5\n        - SIM 5360/5320/5300/7100 - 10\n        - SIM7000 - 8 possible without SSL, only 2 with\n        - SIM 7070/7080/7090 - 12\n        - SIM 7500/7600/7800 - 10\n        - SIM A7672X - 10\n        - u-blox 2G/3G - 7\n        - u-blox SARA R4/N4 - 7\n        - Digi XBee - _only 1 connection supported!_\n- UDP\n    - Not yet supported on any module, though it may be some day\n- SSL/TLS (HTTPS)\n    - Supported on:\n        - SIM800, SIM7000, A7672X, u-Blox, XBee _cellular_, ESP8266, Sequans Monarch and Quectel BG95 and BG96\n        - Note:  **only some device models or firmware revisions have this feature** (SIM8xx R14.18, A7, etc.)\n    - Not yet supported on:\n        - SIM 5360/5320/7100, SIM 7500/7600/7800\n    - Not possible on:\n        - SIM900, A6/A7, Neoway M590, XBee _WiFi_\n    - Like TCP, most modules support simultaneous connections\n    - TCP and SSL connections can usually be mixed up to the total number of possible connections\n\n**USSD**\n- Sending USSD requests and decoding 7,8,16-bit responses\n    - Supported on:\n        - All SIMCom modems, Quectel modems, most u-blox\n    - Not possible on:\n        - XBee, u-blox SARA R4/N4, ESP8266 (obviously)\n\n**SMS**\n- Only _sending_ SMS is supported, not receiving\n    - Supported on all cellular modules\n\n**Voice Calls**\n- Supported on:\n    - SIM800/SIM900, SIM7600, A6/A7, Quectel modems, u-blox\n- Not yet supported on:\n    - SIM7000, SIM5360/5320/7100, SIM7500/7800, VZM20Q (Monarch)\n- Not possible on:\n    -  XBee (any type), u-blox SARA R4/R5/N4, Neoway M590, ESP8266 (obviously)\n- Functions:\n    - Dial, hangup\n    - DTMF sending\n\n**Location**\n- GPS/GNSS\n    - SIM808, SIM7000, SIM7500/7600/7800, BG96, BG95, u-blox\n    - NOTE:  u-blox chips do _NOT_ have embedded GPS - this functionality only works if a secondary GPS is connected to primary cellular chip over I2C\n- GSM location service\n    - SIM800, SIM7000, Quectel, u-blox\n\n**Credits**\n- Primary Authors/Contributors:\n    - [vshymanskyy](https://github.com/vshymanskyy)\n    - [SRGDamia1](https://github.com/SRGDamia1/)\n- SIM7000:\n    - [captFuture](https://github.com/captFuture/)\n    - [FStefanni](https://github.com/FStefanni/)\n- Sequans Monarch:\n    - [nootropicdesign](https://github.com/nootropicdesign/)\n- Quectel M9C60\n    - [V1pr](https://github.com/V1pr)\n- Quectel M95\n    - [replicadeltd](https://github.com/replicadeltd)\n- UBLOX SARA-R5\n  - [Sebastian Bergner](https://github.com/sebastianbergner)\n- SIMCOM A7672X\n  - [Giovanni de Rosso Unruh](https://github.com/giovannirosso)\n- Other Contributors:\n    - https://github.com/vshymanskyy/TinyGSM/graphs/contributors\n\n## Getting Started\n\n#### First Steps\n\n  1. Using your phone:\n    - Disable PIN code on the SIM card\n    - Check your balance\n    - Check that APN, User, Pass are correct and you have internet\n  2. Ensure the SIM card is correctly inserted into the module\n  3. Ensure that GSM antenna is firmly attached\n  4. Ensure that you have a stable power supply to the module of at least **2A**.\n  5. Check if serial connection is working (Hardware Serial is recommended)\n     Send an ```AT``` command using [this sketch](tools/AT_Debug/AT_Debug.ino)\n  6. Try out the [WebClient](https://github.com/vshymanskyy/TinyGSM/blob/master/examples/WebClient/WebClient.ino) example\n\n#### Writing your own code\n\nThe general flow of your code should be:\n- Define the module that you are using (choose one and only one)\n    - ie, ```#define TINY_GSM_MODEM_SIM800```\n- Included TinyGSM\n    - ```#include <TinyGsmClient.h>```\n- Create a TinyGSM modem instance\n    - ```TinyGsm modem(SerialAT);```\n- Create one or more TinyGSM client instances\n    - For a single connection, use\n        - ```TinyGsmClient client(modem);```\n        or\n        ```TinyGsmClientSecure client(modem);``` (on supported modules)\n    - For multiple connections (on supported modules) use:\n        - ```TinyGsmClient clientX(modem, 0);```, ```TinyGsmClient clientY(modem, 1);```, etc\n          or\n        - ```TinyGsmClientSecure clientX(modem, 0);```, ```TinyGsmClientSecure clientY(modem, 1);```, etc\n    - Secure and insecure clients can usually be mixed when using multiple connections.\n    - The total number of connections possible varies by module\n- Begin your serial communication and set all your pins as required to power your module and bring it to full functionality.\n    - The examples attempt to guess the module's baud rate.  In working code, you should use a set baud.\n- Wait for the module to be ready (could be as much as 6s, depending on the module)\n- Initialize the modem\n    - ```modem.init()``` or ```modem.restart()```\n    - restart generally takes longer than init but ensures the module doesn't have lingering connections\n- Unlock your SIM, if necessary:\n    - ```modem.simUnlock(GSM_PIN)```\n- If using **WiFi**, specify your SSID information:\n    - ```modem.networkConnect(wifiSSID, wifiPass)```\n    - Network registration should be automatic on cellular modules\n- Wait for network registration to be successful\n    - ```modem.waitForNetwork(600000L)```\n- If using cellular, establish the GPRS or EPS data connection _after_ your are successfully registered on the network\n    - ```modem.gprsConnect(apn, gprsUser, gprsPass)``` (or simply ```modem.gprsConnect(apn)```)\n    - The same command is used for both GPRS or EPS connection\n    - If using a **Digi** brand cellular XBee, you must specify your GPRS/EPS connection information _before_ waiting for the network.  This is true ONLY for _Digi cellular XBees_!  _For all other cellular modules, use the GPRS connect function after network registration._\n- Connect the TCP or SSL client\n    ```client.connect(server, port)```\n- Send out your data.\n\n\n#### If you have any issues\n\n  1. Read the whole README (you're looking at it!), particularly the troubleshooting section below.\n  2. Some boards require [**special configuration**](https://github.com/vshymanskyy/TinyGSM/wiki/Board-configuration).\n  3. Try running the Diagnostics sketch\n  4. Check for [**highlighted topics here**](https://github.com/vshymanskyy/TinyGSM/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22for+reference%22+)\n  5. If you have a question, please post it in our [Gitter chat](https://gitter.im/tinygsm)\n\n## How does it work?\n\nMany GSM modems, WiFi and radio modules can be controlled by sending AT commands over Serial.\nTinyGSM knows which commands to send, and how to handle AT responses, and wraps that into standard Arduino Client interface.\n\nThis library is \"blocking\" in all of its communication.\nDepending on the function, your code may be blocked for a long time waiting for the module responses.\nApart from the obvious (ie, `waitForNetwork()`) several other functions may block your code for up to several *minutes*.\nThe `gprsConnect()` and `client.connect()` functions commonly block the longest, especially in poorer service regions.\nThe module shutdown and restart may also be quite slow.\n\nThis libary *does not* support any sort of \"hardware\" or pin level controls for the modules.\nIf you need to turn your module on or reset it using some sort of High/Low/High pin sequence, you must write those functions yourself.\n\n## API Reference\n\nFor GPRS data streams, this library provides the standard [Arduino Client](https://www.arduino.cc/en/Reference/ClientConstructor) interface.\nFor additional functions, please refer to [this example sketch](examples/AllFunctions/AllFunctions.ino)\n\n## Troubleshooting\n\n### Ensure stable data & power connection\n\nMost modules require _**as much as 2A**_ to properly connect to the network.\nThis is 4x what a \"standard\" USB will supply!\nImproving the power supply actually solves stability problems in **many** cases!\n- Read about [**powering your module**](https://github.com/vshymanskyy/TinyGSM/wiki/Powering-GSM-module).\n- Keep your wires as short as possible\n- Consider soldering them for a stable connection\n- Do not put your wires next to noisy signal sources (buck converters, antennas, oscillators etc.)\n- If everything else seems to be working but you are unable to connect to the network, check your power supply!\n\n### Baud rates\n\nMost modules support some sort of \"auto-bauding\" feature where the module will attempt to adjust it's baud rate to match what it is receiving.\nTinyGSM also implements its own auto bauding function (`TinyGsmAutoBaud(SerialAT, GSM_AUTOBAUD_MIN, GSM_AUTOBAUD_MAX);`).\nWhile very useful when initially connecting to a module and doing tests, these should **NOT** be used in any sort of production code.\nOnce you've established communication with the module, set the baud rate using the `setBaud(#)` function and stick with that rate.\n\n### Broken initial configuration\n\nSometimes (especially if you played with AT commands), your module configuration may become invalid.\nThis may result in problems such as:\n\n * Can't connect to the GPRS network\n * Can't connect to the server\n * Sent/received data contains invalid bytes\n * etc.\n\nTo return module to **Factory Defaults**, use this sketch:\n  File -> Examples -> TinyGSM -> tools -> [FactoryReset](https://github.com/vshymanskyy/TinyGSM/blob/master/tools/FactoryReset/FactoryReset.ino)\n\nIn some cases, you may need to set an initial APN to connect to the cellular network.\nTry using the ```gprsConnect(APN)``` function to set an initial APN if you are unable to register on the network.\nYou may need set the APN again after registering.\n(In most cases, you should set the APN after registration.)\n\n### Failed connection or no data received\n\nThe first connection with a new SIM card, a new module, or at a new location/tower may take a *LONG* time - up to 15 minutes or even more, especially if the signal quality isn't excellent.\nIf it is your first connection, you may need to adjust your wait times and possibly go to lunch while you're waiting.\n\nIf you are able to open a TCP connection but have the connection close before receiving data, try adding a keep-alive header to your request.\nSome modules (ie, the SIM7000 in SSL mode) will immediately throw away any un-read data when the remote server closes the connection - sometimes without even giving a notification that data arrived in the first place.\nWhen using MQTT, to keep a continuous connection you may need to reduce your keep-alive interval (PINGREQ/PINGRESP).\n\n### Diagnostics sketch\n\nUse this sketch to help diagnose SIM card and GPRS connection issues:\n  File -> Examples -> TinyGSM -> tools -> [Diagnostics](https://github.com/vshymanskyy/TinyGSM/blob/master/tools/Diagnostics/Diagnostics.ino)\n\nIf the diagnostics fail, uncomment this line to output some debugging comments from the library:\n```cpp\n#define TINY_GSM_DEBUG SerialMon\n```\nIn any custom code, ```TINY_GSM_DEBUG``` must be defined before including the TinyGSM library.\n\nIf you are unable to see any obvious errors in the library debugging, use [StreamDebugger](https://github.com/vshymanskyy/StreamDebugger) to copy the entire AT command sequence to the main serial port.\nIn the diagnostics example, simply uncomment the line:\n```cpp\n#define DUMP_AT_COMMANDS\n```\nIn custom code, you can add this snippit:\n```cpp\n#ifdef DUMP_AT_COMMANDS\n  #include <StreamDebugger.h>\n  StreamDebugger debugger(SerialAT, SerialMon);\n  TinyGsm modem(debugger);\n#else\n  TinyGsm modem(SerialAT);\n#endif\n```\n\n### Web request formatting problems - \"but it works with PostMan\"\n\nThis library opens a TCP (or SSL) connection to a server.\nIn the [OSI model](https://en.wikipedia.org/wiki/OSI_model), that's [layer 4](http://www.tcpipguide.com/free/t_TransportLayerLayer4.htm) (or 5 for SSL).\nHTTP (GET/POST), MQTT, and most of the other functions you probably want to use live up at [layer 7](http://www.tcpipguide.com/free/t_ApplicationLayerLayer7.htm).\nThis means that you need to either manually code the top layer or use another library (like [HTTPClient](https://github.com/arduino-libraries/ArduinoHttpClient) or [PubSubClient](https://pubsubclient.knolleary.net/)) to do it for you.\nTools like [PostMan](https://www.postman.com/) also show layer 7, not layer 4/5 like TinyGSM.\nIf you are successfully connecting to a server, but getting responses of \"bad request\" (or no response), the issue is probably your formatting.\nHere are some tips for writing layer 7 (particularly HTTP request) manually:\n- Look at the \"WebClient\" example\n- Make sure you are including all required headers.\n    - If you are testing with PostMan, make sure you un-hide and look at the \"auto-generated\" headers; you'll probably be surprised by how many of them there are.\n- Use ```client.print(\"...\")```, or ```client.write(buf, #)```, or even ```client.write(String(\"...\"))```, not ```client.write(\"...\")``` to help prevent text being sent out one character at a time (typewriter style)\n- Enclose the entirety of each header or line within a single string or print statement\n    - use\n    ```cpp\n    client.print(String(\"GET \") + resource + \" HTTP/1.1\\r\\n\");\n    ```\n    instead of\n    ```cpp\n    client.print(\"GET \");\n    client.print(resource);\n    client.println(\" HTTP/1.1\")\n    ```\n- Make sure there is one entirely blank line between the last header and the content of any POST request.\n    - Add two lines to the last header ```client.print(\"....\\r\\n\\r\\n\")``` or put in an extra ```client.println()```\n    - This is an HTTP requirement and is really easy to miss.\n\n### SoftwareSerial problems\n\nWhen using ```SoftwareSerial``` (on Uno, Nano, etc), the speed **115200** may not work.\nTry selecting **57600**, **38400**, or even lower - the one that works best for you.\nIn some cases **9600** is unstable, but using **38400** helps, etc.\nBe sure to set correct TX/RX pins in the sketch. Please note that not every Arduino pin can serve as TX or RX pin.\n**Read more about SoftSerial options and configuration [here](https://www.pjrc.com/teensy/td_libs_AltSoftSerial.html) and [here](https://www.arduino.cc/en/Reference/SoftwareSerial).**\n\n### ESP32 Notes\n\n#### HardwareSerial\n\nWhen using ESP32 `HardwareSerial`, you may need to specify additional parameters to the `.begin()` call.\nPlease [refer to this comment](https://github.com/vshymanskyy/TinyGSM/issues/91#issuecomment-356024747).\n\n#### HttpClient\nYou will not be able to compile the HttpClient or HttpsClient examples with ESP32 core 1.0.2.  Upgrade to 1.0.3, downgrade to version 1.0.1 or use the WebClient example.\n\n### SAMD21\n\nWhen using SAMD21-based boards, you may need to use a sercom uart port instead of `Serial1`.\nPlease [refer to this comment](https://github.com/vshymanskyy/TinyGSM/issues/102#issuecomment-345548941).\n\n### Goouuu Tech IOT-GA6 vs AI-Thinker A6 confusion\n\nIt turns out that **Goouuu Tech IOT-GA6** is not the same as **AI-Thinker A6**. Unfortunately IOT-GA6 is not supported out of the box yet. There are some hints that IOT-GA6 firmware may be updated to match A6... See [this topic](https://github.com/vshymanskyy/TinyGSM/issues/164).\n\n### SIM800 and SSL\n\nSome, but not all, versions of the SIM800 support SSL.\nHaving SSL support depends on the firmware version and the individual module.\nUsers have had varying levels of success in using SSL on the SIM800 even with apparently identical firmware.\nIf you need SSL and it does not appear to be working on your SIM800, try a different module or try using a secondary SSL library.\n\n### Which version of the SIM7000 code to use\n\nThere are two versions of the SIM7000 code, one using `TINY_GSM_MODEM_SIM7000` and another with `TINY_GSM_MODEM_SIM7000SSL`.\nThe `TINY_GSM_MODEM_SIM7000` version *does not support SSL* but supports up to 8 simultaneous connections.\nThe `TINY_GSM_MODEM_SIM7000SSL` version supports both SSL *and unsecured connections* with up to 2 simultaneous connections.\nSo why are there two versions?\nThe \"SSL\" version uses the SIM7000's \"application\" commands while the other uses the \"TCP-IP toolkit\".\nDepending on your region/firmware, one or the other may not work for you.\nTry both and use whichever is more stable.\nIf you do not need SSL, I recommend starting with `TINY_GSM_MODEM_SIM7000`.\n\n__________\n\n## License\nThis project is released under\nThe GNU Lesser General Public License (LGPL-3.0)\n"
        },
        {
          "name": "cpplint.cfg",
          "type": "blob",
          "size": 0.0966796875,
          "content": "# Allow references to be used to change values\nfilter=-runtime/references\nfilter=-build/namespaces\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "keywords.txt",
          "type": "blob",
          "size": 0.6689453125,
          "content": "#######################################\n# Data types (KEYWORD1)\n#######################################\nTinyGsm\tKEYWORD1\nTinyGsmClient\tKEYWORD1\nTinyGsmClientSecure\tKEYWORD1\n\nSerialAT\tKEYWORD1\nSerialMon\tKEYWORD1\n\n#######################################\n# Methods and Functions (KEYWORD2)\n#######################################\nbegin\tKEYWORD2\nrestart\tKEYWORD2\nwaitForNetwork\tKEYWORD2\ngetSimStatus\tKEYWORD2\ngprsConnect\tKEYWORD2\ngprsDisconnect\tKEYWORD2\nisGprsConnected\tKEYWORD2\nisNetworkConnected\tKEYWORD2\nfactoryReset\tKEYWORD2\n\n#######################################\n# Literals (LITERAL1)\n#######################################\nDATE_FULL\tLITERAL1\nDATE_TIME\tLITERAL1\nDATE_DATE\tLITERAL1\n"
        },
        {
          "name": "library.json",
          "type": "blob",
          "size": 1.0693359375,
          "content": "{\n  \"name\": \"TinyGSM\",\n  \"version\": \"0.12.0\",\n  \"description\": \"A small Arduino library for GPRS modules, that just works. Includes examples for Blynk, MQTT, File Download, and Web Client. Supports many GSM, LTE, and WiFi modules with AT command interfaces.\",\n  \"keywords\": \"GSM, AT commands, AT, SIM800, SIM900, A6, A7, M590, ESP8266, SIM7000, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900A, SIM900D, SIM908, SIM968, M95, MC60, MC60E, BG96, BG95, ublox, Quectel, SIMCOM, AI Thinker, LTE, LTE-M\",\n  \"authors\": [\n    {\n      \"name\": \"Volodymyr Shymanskyy\",\n      \"url\": \"https://github.com/vshymanskyy\",\n      \"maintainer\": true\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/vshymanskyy/TinyGSM.git\"\n  },\n  \"homepage\": \"https://github.com/vshymanskyy/TinyGSM\",\n  \"export\": {\n    \"include\": [\n      \"LICENSE\",\n      \"library.json\",\n      \"library.properties\",\n      \"README.md\",\n      \"keywords.txt\",\n      \"src/*\",\n      \"examples/*\"\n    ]\n  },\n  \"frameworks\": [\"arduino\", \"energia\", \"wiringpi\"],\n  \"platforms\": \"*\",\n  \"headers\": \"TinyGsmClient.h\"\n}\n"
        },
        {
          "name": "library.properties",
          "type": "blob",
          "size": 0.3984375,
          "content": "name=TinyGSM\nversion=0.12.0\nauthor=Volodymyr Shymanskyy\nmaintainer=Volodymyr Shymanskyy\nsentence=A small Arduino library for GPRS modules, that just works.\nparagraph=Includes examples for Blynk, MQTT, File Download, and Web Client. Supports many GSM, LTE, and WiFi modules with AT command interfaces.\ncategory=Communication\nurl=https://github.com/vshymanskyy/TinyGSM\narchitectures=*\nincludes=TinyGsmClient.h\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}