{
  "metadata": {
    "timestamp": 1736565386584,
    "page": 225,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "k4zmu2a/SpaceCadetPinball",
      "stars": 3573,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.681640625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\nARM/\nARM64/\nwin32/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n#*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n/Ida\n/Export\n/DrMem\n/Doc private\n# Windows and macOS local libraries\n/Libs\n\n#CMake generated\nout/\n/cmake-build-debug\n\n# Windows XP stuff\nDebugWinXp/\nReleaseWinXp/\n\n### CMake ###\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\n\n### CMake Patch ###\n# External projects\n*-prefix/\n\n### Ninja ###\n.ninja_deps\n.ninja_log\nbuild.ninja\n# Build directory\n/build\n"
        },
        {
          "name": "BuildForWindows.ps1",
          "type": "blob",
          "size": 0.953125,
          "content": "#Run this script from Developer Command Prompt for VS *\n$artefacts = \".\\bin\\Release\\SpaceCadetPinball.exe\", \".\\bin\\Release\\SDL2.dll\", \".\\bin\\Release\\SDL2_mixer.dll\"\n\n#X86 build\nRemove-Item -Path .\\build\\CMakeCache.txt -ErrorAction SilentlyContinue\ncmake -S . -B build -A Win32 -DCMAKE_WIN32_EXECUTABLE:BOOL=1\ncmake --build build --config Release\nCompress-Archive -Path $artefacts -DestinationPath \".\\bin\\SpaceCadetPinballx86Win.zip\" -Force\n\n#X64 build\nRemove-Item -Path .\\build\\CMakeCache.txt\ncmake -S . -B build -A x64 -DCMAKE_WIN32_EXECUTABLE:BOOL=1\ncmake --build build --config Release\nCompress-Archive -Path $artefacts -DestinationPath \".\\bin\\SpaceCadetPinballx64Win.zip\" -Force\n\n#86 XP build, requires special XP MSVC toolset\nRemove-Item -Path .\\build\\CMakeCache.txt\ncmake -S . -B build -A Win32 -DCMAKE_WIN32_EXECUTABLE:BOOL=1 -T v141_xp\ncmake --build build --config Release\nCompress-Archive -Path $artefacts -DestinationPath \".\\bin\\SpaceCadetPinballx86WinXP.zip\" -Force"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.0537109375,
          "content": "cmake_minimum_required(VERSION 3.0...3.5)\nproject(SpaceCadetPinball)\n\nset(CMAKE_CXX_STANDARD 11)\n\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/bin)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/CMakeModules\")\n\n# On Windows, set paths to SDL-devel packages here\nif(WIN32)\n   list(APPEND SDL2_PATH \"${CMAKE_CURRENT_LIST_DIR}/Libs/SDL2\")\n   list(APPEND SDL2_MIXER_PATH \"${CMAKE_CURRENT_LIST_DIR}/Libs/SDL2_mixer\")\nendif()\n\n# Link mingw libs static\nif(MINGW)\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -static\")\nendif()\n\nif(APPLE)\n    set(MACOSX_RPATH)\n    set(CMAKE_BUILD_WITH_INSTALL_RPATH true)\n    set(CMAKE_INSTALL_RPATH \"@executable_path/../Frameworks\")\n    set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.11\")\n    set(CMAKE_OSX_ARCHITECTURES \"arm64;x86_64\")\n    list(APPEND SDL2_PATH \"${CMAKE_CURRENT_LIST_DIR}/Libs\")\n    list(APPEND SDL2_MIXER_PATH \"${CMAKE_CURRENT_LIST_DIR}/Libs\")\nendif()\n\n# SDL2main is not needed\nset(SDL2_BUILDING_LIBRARY ON)\n\nfind_package(SDL2 REQUIRED)\nFIND_PACKAGE(SDL2_mixer REQUIRED)\n\ninclude_directories(${SDL2_INCLUDE_DIR} ${SDL2_MIXER_INCLUDE_DIR})\nget_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)\nforeach(dir ${dirs})\n  message(STATUS \"Include dir='${dir}'\")\nendforeach()\n\n\n\nset(SOURCE_FILES\n        SpaceCadetPinball/control.cpp\n        SpaceCadetPinball/control.h\n        SpaceCadetPinball/EmbeddedData.cpp\n        SpaceCadetPinball/EmbeddedData.h\n        SpaceCadetPinball/font_selection.cpp\n        SpaceCadetPinball/font_selection.h\n        SpaceCadetPinball/fullscrn.cpp\n        SpaceCadetPinball/fullscrn.h\n        SpaceCadetPinball/gdrv.cpp\n        SpaceCadetPinball/gdrv.h\n        SpaceCadetPinball/GroupData.cpp\n        SpaceCadetPinball/GroupData.h\n        SpaceCadetPinball/high_score.cpp\n        SpaceCadetPinball/high_score.h\n        SpaceCadetPinball/loader.cpp\n        SpaceCadetPinball/loader.h\n        SpaceCadetPinball/maths.cpp\n        SpaceCadetPinball/maths.h\n        SpaceCadetPinball/midi.cpp\n        SpaceCadetPinball/midi.h\n        SpaceCadetPinball/nudge.cpp\n        SpaceCadetPinball/nudge.h\n        SpaceCadetPinball/options.cpp\n        SpaceCadetPinball/options.h\n        SpaceCadetPinball/partman.cpp\n        SpaceCadetPinball/partman.h\n        SpaceCadetPinball/pb.cpp\n        SpaceCadetPinball/pb.h\n        SpaceCadetPinball/pch.h\n        SpaceCadetPinball/proj.cpp\n        SpaceCadetPinball/proj.h\n        SpaceCadetPinball/render.cpp\n        SpaceCadetPinball/render.h\n        SpaceCadetPinball/score.cpp\n        SpaceCadetPinball/score.h\n        SpaceCadetPinball/Sound.cpp\n        SpaceCadetPinball/Sound.h\n        SpaceCadetPinball/SpaceCadetPinball.cpp\n        SpaceCadetPinball/TBall.cpp\n        SpaceCadetPinball/TBall.h\n        SpaceCadetPinball/TBlocker.cpp\n        SpaceCadetPinball/TBlocker.h\n        SpaceCadetPinball/TBumper.cpp\n        SpaceCadetPinball/TBumper.h\n        SpaceCadetPinball/TCircle.cpp\n        SpaceCadetPinball/TCircle.h\n        SpaceCadetPinball/TCollisionComponent.cpp\n        SpaceCadetPinball/TCollisionComponent.h\n        SpaceCadetPinball/TComponentGroup.cpp\n        SpaceCadetPinball/TComponentGroup.h\n        SpaceCadetPinball/TDemo.cpp\n        SpaceCadetPinball/TDemo.h\n        SpaceCadetPinball/TDrain.cpp\n        SpaceCadetPinball/TDrain.h\n        SpaceCadetPinball/TEdgeBox.h\n        SpaceCadetPinball/TEdgeManager.cpp\n        SpaceCadetPinball/TEdgeManager.h\n        SpaceCadetPinball/TEdgeSegment.cpp\n        SpaceCadetPinball/TEdgeSegment.h\n        SpaceCadetPinball/TFlagSpinner.cpp\n        SpaceCadetPinball/TFlagSpinner.h\n        SpaceCadetPinball/TFlipper.cpp\n        SpaceCadetPinball/TFlipper.h\n        SpaceCadetPinball/TFlipperEdge.cpp\n        SpaceCadetPinball/TFlipperEdge.h\n        SpaceCadetPinball/TGate.cpp\n        SpaceCadetPinball/TGate.h\n        SpaceCadetPinball/THole.cpp\n        SpaceCadetPinball/THole.h\n        SpaceCadetPinball/timer.cpp\n        SpaceCadetPinball/timer.h\n        SpaceCadetPinball/TKickback.cpp\n        SpaceCadetPinball/TKickback.h\n        SpaceCadetPinball/TKickout.cpp\n        SpaceCadetPinball/TKickout.h\n        SpaceCadetPinball/TLight.cpp\n        SpaceCadetPinball/TLight.h\n        SpaceCadetPinball/TLightBargraph.cpp\n        SpaceCadetPinball/TLightBargraph.h\n        SpaceCadetPinball/TLightGroup.cpp\n        SpaceCadetPinball/TLightGroup.h\n        SpaceCadetPinball/TLightRollover.cpp\n        SpaceCadetPinball/TLightRollover.h\n        SpaceCadetPinball/TLine.cpp\n        SpaceCadetPinball/TLine.h\n        SpaceCadetPinball/TOneway.cpp\n        SpaceCadetPinball/TOneway.h\n        SpaceCadetPinball/TPinballComponent.cpp\n        SpaceCadetPinball/TPinballComponent.h\n        SpaceCadetPinball/TPinballTable.cpp\n        SpaceCadetPinball/TPinballTable.h\n        SpaceCadetPinball/TPlunger.cpp\n        SpaceCadetPinball/TPlunger.h\n        SpaceCadetPinball/TPopupTarget.cpp\n        SpaceCadetPinball/TPopupTarget.h\n        SpaceCadetPinball/TRamp.cpp\n        SpaceCadetPinball/TRamp.h\n        SpaceCadetPinball/translations.cpp\n        SpaceCadetPinball/translations.h\n        SpaceCadetPinball/TRollover.cpp\n        SpaceCadetPinball/TRollover.h\n        SpaceCadetPinball/TSink.cpp\n        SpaceCadetPinball/TSink.h\n        SpaceCadetPinball/TSoloTarget.cpp\n        SpaceCadetPinball/TSoloTarget.h\n        SpaceCadetPinball/TSound.cpp\n        SpaceCadetPinball/TSound.h\n        SpaceCadetPinball/TTableLayer.cpp\n        SpaceCadetPinball/TTableLayer.h\n        SpaceCadetPinball/TTextBox.cpp\n        SpaceCadetPinball/TTextBox.h\n        SpaceCadetPinball/TTextBoxMessage.cpp\n        SpaceCadetPinball/TTextBoxMessage.h\n        SpaceCadetPinball/TTimer.cpp\n        SpaceCadetPinball/TTimer.h\n        SpaceCadetPinball/TTripwire.cpp\n        SpaceCadetPinball/TTripwire.h\n        SpaceCadetPinball/TWall.cpp\n        SpaceCadetPinball/TWall.h\n        SpaceCadetPinball/winmain.cpp\n        SpaceCadetPinball/winmain.h\n        SpaceCadetPinball/zdrv.cpp\n        SpaceCadetPinball/zdrv.h\n        SpaceCadetPinball/imconfig.h\n        SpaceCadetPinball/imgui_internal.h\n        SpaceCadetPinball/imgui.cpp\n        SpaceCadetPinball/imgui.h\n        SpaceCadetPinball/imgui_sdl.cpp\n        SpaceCadetPinball/imgui_sdl.h\n        SpaceCadetPinball/imgui_draw.cpp\n        SpaceCadetPinball/imgui_widgets.cpp\n        SpaceCadetPinball/imgui_tables.cpp\n        SpaceCadetPinball/imgui_demo.cpp\n        SpaceCadetPinball/imgui_impl_sdl.cpp\n        SpaceCadetPinball/imgui_impl_sdl.h\n        SpaceCadetPinball/imgui_impl_sdlrenderer.h\n        SpaceCadetPinball/imgui_impl_sdlrenderer.cpp\n        SpaceCadetPinball/imstb_textedit.h\n        SpaceCadetPinball/imstb_rectpack.h\n        SpaceCadetPinball/imstb_truetype.h\n        SpaceCadetPinball/DebugOverlay.cpp\n        SpaceCadetPinball/DebugOverlay.h\n        )\n\n# On Windows, include resource file with the icon\nif(WIN32)\n    set_source_files_properties(SpaceCadetPinball/SpaceCadetPinball.rc LANGUAGE RC)\n    list(APPEND SOURCE_FILES SpaceCadetPinball/SpaceCadetPinball.rc)\nendif(WIN32)\n\nadd_executable(SpaceCadetPinball ${SOURCE_FILES})\n\n# Skip pch on foreign code\nset_source_files_properties(\n        SpaceCadetPinball/imgui.cpp\n        SpaceCadetPinball/imgui_sdl.cpp\n        SpaceCadetPinball/imgui_draw.cpp\n        SpaceCadetPinball/imgui_widgets.cpp\n        SpaceCadetPinball/imgui_tables.cpp\n        SpaceCadetPinball/imgui_demo.cpp\n        SpaceCadetPinball/imgui_impl_sdl.cpp\n        SpaceCadetPinball/imgui_impl_sdlrenderer.cpp\n        PROPERTIES SKIP_PRECOMPILE_HEADERS 1\n)\n\nif(${CMAKE_VERSION} VERSION_GREATER \"3.16.0\" OR ${CMAKE_VERSION} VERSION_EQUAL \"3.16.0\")\n    target_precompile_headers(SpaceCadetPinball\n            PUBLIC\n            SpaceCadetPinball/pch.h\n            )\nendif()\n\ntarget_link_libraries(SpaceCadetPinball ${SDL2_LIBRARY} ${SDL2_MIXER_LIBRARY})\n\n# On Windows, copy DLL to output\nif(WIN32)\n    list(GET SDL2_LIBRARY -1 SDL2_DLL_PATH)\n    list(GET SDL2_MIXER_LIBRARY -1 SDL2_MIXER_DLL_PATH)\n    get_filename_component(SDL2_DLL_PATH ${SDL2_DLL_PATH} DIRECTORY)\n    get_filename_component(SDL2_MIXER_DLL_PATH ${SDL2_MIXER_DLL_PATH} DIRECTORY)\n    if(MINGW)\n        string(REGEX REPLACE \"lib$\" \"bin\" SDL2_DLL_PATH ${SDL2_DLL_PATH})\n        string(REGEX REPLACE \"lib$\" \"bin\" SDL2_MIXER_DLL_PATH ${SDL2_MIXER_DLL_PATH})\n    endif()\n    message(STATUS \"copy paths='${SDL2_DLL_PATH}' '${SDL2_MIXER_DLL_PATH}'\") \n    add_custom_command(TARGET SpaceCadetPinball POST_BUILD\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${SDL2_DLL_PATH}/SDL2.dll\" $<TARGET_FILE_DIR:SpaceCadetPinball>\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${SDL2_MIXER_DLL_PATH}/SDL2_mixer.dll\" $<TARGET_FILE_DIR:SpaceCadetPinball>\n        )\nendif()\n\nif(UNIX AND NOT APPLE)\n\tinclude(GNUInstallDirs)\n\tinstall(TARGETS \"${PROJECT_NAME}\" RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n\tinstall(FILES \"${CMAKE_SOURCE_DIR}/Platform/Linux/${PROJECT_NAME}.desktop\" DESTINATION \"share/applications\")\n\tinstall(FILES \"${CMAKE_SOURCE_DIR}/Platform/Linux/${PROJECT_NAME}.metainfo.xml\" DESTINATION \"share/metainfo\")\n\tforeach(S 16 32 48 128 192)\n\t\tinstall(FILES \"${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/Icon_${S}x${S}.png\" DESTINATION\n\t\t\t\"share/icons/hicolor/${S}x${S}/apps\" RENAME \"${PROJECT_NAME}.png\")\n\tendforeach(S)\nendif()\n"
        },
        {
          "name": "CMakeModules",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 2.419921875,
          "content": "﻿{\n  \"configurations\": [\n    {\n      \"name\": \"x64-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ],\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"addressSanitizerEnabled\": false\n    },\n    {\n      \"name\": \"x86-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"msvc_x86\" ],\n      \"addressSanitizerEnabled\": false\n    },\n    {\n      \"name\": \"x86-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DCMAKE_WIN32_EXECUTABLE:BOOL=1\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"msvc_x86\" ]\n    },\n    {\n      \"name\": \"x64-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DCMAKE_WIN32_EXECUTABLE:BOOL=1\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ]\n    },\n    {\n      \"name\": \"x86-Release-WinXP\",\n      \"generator\": \"Visual Studio 16 2019\",\n      \"configurationType\": \"Release\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DCMAKE_WIN32_EXECUTABLE:BOOL=1 -T v141_xp\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"msvc_x86\" ]\n    },\n    {\n      \"name\": \"WSL-Clang-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeExecutable\": \"cmake\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"linux_clang_x64\" ],\n      \"wslPath\": \"${defaultWSLPath}\"\n    }\n  ]\n}"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3935546875,
          "content": "# Issues\nDon’t forget to mention game version, which release or branch it came from.\\\nSource port issues are handled in their respective repositories.\n\n# Pull request\nNo source ports in main repository.\\\nI have no way to test and maintain most of them.\\\nThe best I can do is to add a link.\n\nThere is no guarantee that any particular PR will be accepted.\\\nIf you are unsure, ask first, make PR second.\n"
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "MIT License\n\nCopyright (c) 2020-2021 Andrey Muzychenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.8525390625,
          "content": "<!-- markdownlint-disable-file MD033 -->\n\n# SpaceCadetPinball\n\n## Summary\n\nReverse engineering of `3D Pinball for Windows - Space Cadet`, a game bundled with Windows.\n\n## How to play\n\nPlace compiled executable into a folder containing original game resources (not included).\\\nSupports data files from Windows and Full Tilt versions of the game.\n\n## Known source ports\n\n| Platform           | Author          | URL                                                                                                        |\n| ------------------ | --------------- | ---------------------------------------------------------------------------------------------------------- |\n| PS Vita            | Axiom           | <https://github.com/suicvne/SpaceCadetPinball_Vita>                                                        |\n| Emscripten         | alula           | <https://github.com/alula/SpaceCadetPinball> <br> Play online: <https://alula.github.io/SpaceCadetPinball> |\n| Nintendo Switch    | averne          | <https://github.com/averne/SpaceCadetPinball-NX>                                                           |\n| webOS TV           | mariotaku       | <https://github.com/webosbrew/SpaceCadetPinball>                                                           |\n| Android (WIP)      | Iscle           | https://github.com/Iscle/SpaceCadetPinball                                                                 |\n| Nintendo Wii       | MaikelChan      | https://github.com/MaikelChan/SpaceCadetPinball                                                            |\n| Nintendo 3DS       | MaikelChan      | https://github.com/MaikelChan/SpaceCadetPinball/tree/3ds                                                   |\n| Nintendo DS        | Headshotnoby    | https://github.com/headshot2017/3dpinball-nds                                                              |\n| Nintendo Wii U     | IntriguingTiles | https://github.com/IntriguingTiles/SpaceCadetPinball-WiiU                                                  |\n| PlayStation 2      | Headshotnoby    | https://github.com/headshot2017/3dpinball-ps2                                                              |\n| Sega Dreamcast     | Headshotnoby    | https://github.com/headshot2017/3dpinball-dc                                                               |\n| MorphOS            | BeWorld         | https://www.morphos-storage.net/?id=1688897                                                                |\n| AmigaOS 4          | rjd324          | http://aminet.net/package/game/actio/spacecadetpinball-aos4                                                |\n| Android (WIP)      | fexed           | https://github.com/fexed/Pinball-on-Android                                                                |\n\nPlatforms covered by this project: desktop Windows, Linux and macOS.\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## Source\n\n* `pinball.exe` from `Windows XP` (SHA-1 `2A5B525E0F631BB6107639E2A69DF15986FB0D05`) and its public PDB\n* `CADET.EXE` 32bit version from `Full Tilt! Pinball` (SHA-1 `3F7B5699074B83FD713657CD94671F2156DBEDC4`)\n\n## Tools used\n\n`Ghidra`, `Ida`, `Visual Studio`\n\n## What was done\n\n* All structures were populated, globals and locals named.\n* All subs were decompiled, C pseudo code was converted to compilable C++. Loose (namespace?) subs were assigned to classes.\n\n## Compiling\n\nProject uses `C++11` and depends on `SDL2` libs.\n\n### On Windows\n\nDownload and unpack devel packages for `SDL2` and `SDL2_mixer`.\\\nSet paths to them in `CMakeLists.txt`, see suggested placement in `/Libs`.\\\nCompile with Visual Studio; tested with 2019.\n\n### On Linux\n\nInstall devel packages for `SDL2` and `SDL2_mixer`.\\\nCompile with CMake; tested with GCC 10, Clang 11.\\\nTo cross-compile for Windows, install a 64-bit version of mingw and its `SDL2` and `SDL2_mixer` distributions, then use the `mingwcc.cmake` toolchain.\n\n[![Packaging status](https://repology.org/badge/tiny-repos/spacecadetpinball.svg)](https://repology.org/project/spacecadetpinball/versions) \n\nSome distributions provide a package in their repository. You can use those for easier dependency management and updates.\n\nThis project is available as Flatpak on [Flathub](https://flathub.org/apps/details/com.github.k4zmu2a.spacecadetpinball).\n\n### On macOS\n\nInstall XCode (or at least Xcode Command Line Tools with `xcode-select --install`) and CMake.\n\n**HomeBrew**\n\nYou can easily install the build artifact by using `brew`.\n\n```sh\nbrew tap draftbrew/tap\nbrew install --no-quarantine space-cadet-pinball\n```\n\nBe aware that the flag `--no-quarantime` will disable macOS's Gatekeeper during installation.\n\n**Manual compilation:**\n\n* **Homebrew**: Install the `SDL2`, `SDL2_mixer` homebrew packages.\n* **MacPorts**: Install the `libSDL2`, `libSDL2_mixer` macports packages.\n\nCompile with CMake. Ensure that `CMAKE_OSX_ARCHITECTURES` variable is set for either `x86_64` Apple Intel or `arm64` for Apple Silicon.\n\nTested with: macOS Big Sur (Intel) with Xcode 13 & macOS Montery Beta (Apple Silicon) with Xcode 13.\n\n**Automated compilation:**\n\nRun the `build-mac-app.sh` script from the root of the repository. The app will be available in a DMG file named `SpaceCadetPinball-<version>-mac.dmg`.\n\nTested with: macOS Ventura (Apple Silicon) with Xcode Command Line Tools 14 & macOS Big Sur on GitHub Runner (Intel) with XCode 13.\n\n## Plans\n\n* ~~Decompile original game~~\n* ~~Resizable window, scaled graphics~~\n* ~~Loader for high-res sprites from CADET.DAT~~\n* ~~Cross-platform port using SDL2, SDL2_mixer, ImGui~~\n* Full Tilt Cadet features\n* Localization support\n* Maybe: Support for the other two tables - Dragon and Pirate\n* Maybe: Game data editor\n\n## On 64-bit bug that killed the game\n\nI did not find it, decompiled game worked in x64 mode on the first try.\\\nIt was either lost in decompilation or introduced in x64 port/not present in x86 build.\\\nBased on public description of the bug (no ball collision), I guess that the bug was in `TEdgeManager::TestGridBox`\n"
        },
        {
          "name": "Screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "SpaceCadetPinball",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-mac-app.sh",
          "type": "blob",
          "size": 1.916015625,
          "content": "#!/usr/bin/env bash\n\nset -xe\n\nmkdir -p Libs\n\ncd Libs\n\nsdl_version='2.30.4'\nsdl_filename=\"SDL2-$sdl_version.dmg\"\nsdl_url=\"https://github.com/libsdl-org/SDL/releases/download/release-$sdl_version/$sdl_filename\"\n\nsdl_mixer_version='2.8.0'\nsdl_mixer_filename=\"SDL2_mixer-$sdl_mixer_version.dmg\"\nsdl_mixer_url=\"https://github.com/libsdl-org/SDL_mixer/releases/download/release-$sdl_mixer_version/$sdl_mixer_filename\"\n\nmount_point=\"$(mktemp -d)\"\n\nif [ ! -f \"$sdl_filename\" ]; then\n\tcurl -sSf -L -O \"$sdl_url\"\nfi\n\necho \"2bf2cb8f6b44d584b14e8d4ca7437080d1d968fe3962303be27217b336b82249  $sdl_filename\" | shasum -a 256 -c\nhdiutil attach \"$sdl_filename\" -mountpoint \"$mount_point\" -quiet\ncp -a \"$mount_point/SDL2.framework\" .\nhdiutil detach \"$mount_point\"\n\nif [ ! -f \"$sdl_mixer_filename\" ]; then\n\tcurl -sSf -L -O \"$sdl_mixer_url\"\nfi\n\necho \"aea973d78f2949b0b2404379dfe775ac367c69485c1d25a5c59f109797f18adf  $sdl_mixer_filename\" | shasum -a 256 -c\nhdiutil attach \"$sdl_mixer_filename\" -mountpoint \"$mount_point\" -quiet\ncp -a \"$mount_point/SDL2_mixer.framework\" .\nhdiutil detach \"$mount_point\"\n\ncd ..\n\ncmake .\ncmake --build .\n\nsw_version='2.1.1'\n\nmkdir -p SpaceCadetPinball.app/Contents/MacOS\nmkdir -p SpaceCadetPinball.app/Contents/Resources\nmkdir -p SpaceCadetPinball.app/Contents/Frameworks\n\ncp -a Platform/macOS/Info.plist SpaceCadetPinball.app/Contents/\ncp -a Platform/macOS/SpaceCadetPinball.icns SpaceCadetPinball.app/Contents/Resources/\ncp -a Libs/SDL2.framework SpaceCadetPinball.app/Contents/Frameworks/\ncp -a Libs/SDL2_mixer.framework SpaceCadetPinball.app/Contents/Frameworks/\ncp -a bin/SpaceCadetPinball SpaceCadetPinball.app/Contents/MacOS/\n\nsed -i '' \"s/CHANGEME_SW_VERSION/$sw_version/\" SpaceCadetPinball.app/Contents/Info.plist\n\necho -n \"APPL????\" > SpaceCadetPinball.app/Contents/PkgInfo\n\nhdiutil create -fs HFS+ -srcfolder SpaceCadetPinball.app -volname \"SpaceCadetPinball $sw_version\" \"SpaceCadetPinball-$sw_version-mac.dmg\"\n\nrm -r SpaceCadetPinball.app\n"
        },
        {
          "name": "mingwcc.cmake",
          "type": "blob",
          "size": 0.91015625,
          "content": "set(TOOLCHAIN_PREFIX \"x86_64-w64-mingw32\")\n\nset(CMAKE_SYSTEM_NAME Windows)\n\n#posix for std::this_thread, might work with just g++\nset(CMAKE_CXX_COMPILER \"${TOOLCHAIN_PREFIX}-g++-posix\")\nset(CMAKE_C_COMPILER \"${TOOLCHAIN_PREFIX}-gcc\")\nset(CMAKE_OBJCOPY \"${TOOLCHAIN_PREFIX}-objcopy\")\nset(CMAKE_STRIP \"${TOOLCHAIN_PREFIX}-strip\")\nset(CMAKE_SIZE \"${TOOLCHAIN_PREFIX}-size\")\nset(CMAKE_AR \"${TOOLCHAIN_PREFIX}-ar\")\nset(ASSEMBLER \"${TOOLCHAIN_PREFIX}-as\")\nset(CMAKE_RC_COMPILER \"${TOOLCHAIN_PREFIX}-windres\")\n\n\nset(CMAKE_FIND_ROOT_PATH /usr/${TOOLCHAIN_PREFIX})\n\n# adjust the default behavior of the find commands:\n# search headers and libraries in the target environment\nset(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\nset(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY) \n\n# search programs in the host environment\nset(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n# Add the path to your toolchain version of SDL2\nset(SDL2_PATH /usr/${TOOLCHAIN_PREFIX})"
        }
      ]
    }
  ]
}