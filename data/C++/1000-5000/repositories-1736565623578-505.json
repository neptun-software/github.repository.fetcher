{
  "metadata": {
    "timestamp": 1736565623578,
    "page": 505,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aardappel/treesheets",
      "stars": 2682,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.642578125,
          "content": "---\nBasedOnStyle: Google\n---\nLanguage: Cpp\nIndentWidth: 4\nColumnLimit: 100\nUseTab: Never\nAccessModifierOffset: 0\nAlignTrailingComments: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine : All\nAllowShortLoopsOnASingleLine: true\nBinPackParameters: true\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nIndentCaseLabels: true\nNamespaceIndentation: None\nPointerAlignment: Right\nSpaceBeforeParens: ControlStatements\nSpaceAfterTemplateKeyword: false\nStandard: Cpp11\nCpp11BracedListStyle: true\nSpaceBeforeCpp11BracedList: true\nIndentPPDirectives: BeforeHash\nAlwaysBreakTemplateDeclarations: false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5380859375,
          "content": "/treesheets/Release/\n/treesheets/Debug/\n/wxwidgets/\nosx/TreeSheetsBeta/\nosx/TreeSheets/TreeSheets.xcodeproj/project.xcworkspace/xcuserdata/\n*.exe\n*.zip\n*.tar.gz\n*.suo\n*.ilk\n*.pdb\n*.bak\n**/*.o\n\nTreeSheets/\\.vs/treesheets/v15/\n\nbuild/treesheets/language/\n\nTS/scripts/\\.con\\.log\n# In-tree build\nTS/treesheets\nTS/2\n\n# In-tree build CMake files\nCMakeCache.txt\nCMakeFiles/**\nMakefile\ncmake_install.cmake\nCMakeLists.txt.user\n# Build directory for out-of-tree builds\n_build/\n\nTreeSheets/.vs\n\ntreesheets.cbp\nTreeSheets/x64\n*.ipdb\n*.iobj\nTreeSheets/gettext_bin\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1103515625,
          "content": "[submodule \"lib/wxWidgets\"]\n\tpath = lib/wxWidgets\n\turl = https://github.com/wxWidgets/wxWidgets\n\tbranch = master\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.6650390625,
          "content": "# Sample build with makefile generator\n#\n#     cd <into-treesheets-source>\n#     cmake . -B _build -DCMAKE_BUILD_TYPE=Release \\\n#         -DCMAKE_INSTALL_PREFIX=installed \\\n#         -DCMAKE_PROGRAM_PATH=<path-to-wx-config> # not always needed\n#     cmake --build _build --target install\n#\n# Sample build with IDE generator, like Xcode\n#\n#     cd <into-treesheets-source>\n#     cmake -B _build -GXcode \\\n#         -DCMAKE_PROGRAM_PATH=<path-to-wx-config> # not always needed\n#     cmake --build _build --config Release --target install\n#\n# Run program:\n#\n#     ./i/treesheets\n#\n# Should work on Windows, too. About helping FindwxWidgets to find wxWidgets\n# consult: https://cmake.org/cmake/help/latest/module/FindwxWidgets.html\n\ncmake_minimum_required(VERSION 3.25)\n\nproject(treesheets)\n\n########## GLOBAL SETTINGS ################################\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_EXPORT_COMPILE_COMMANDS 1)\n\nOPTION(WITH_CLANG_TIDY \"Run clang-tidy linter\" OFF)\nif (WITH_CLANG_TIDY)\n    set(CMAKE_CXX_CLANG_TIDY clang-tidy -checks=cppcoreguidelines-*,clang-analyzer-*,readability-*,performance-*,portability-*,concurrency-*,modernize-*)\nendif()\n\n########## LOBSTER COMPILE AND LINK SETTINGS ##############\n\nfile(\n    GLOB lobster_sources\n        lobster/external/flatbuffers/src/*.cpp\n        lobster/src/builtins.cpp\n        lobster/src/compiler.cpp\n        lobster/src/disasm.cpp\n        lobster/src/file.cpp\n        lobster/src/lobsterreader.cpp\n        lobster/src/platform.cpp\n        lobster/src/vm.cpp\n        lobster/src/vmdata.cpp\n        lobster/src/vmlog.cpp\n        lobster/src/tocpp.cpp\n        lobster/src/tccbind.cpp\n        lobster/external/libtcc/libtcc.c\n)\nadd_library(lobster STATIC ${lobster_sources})\ntarget_include_directories(lobster PUBLIC lobster/include lobster/src lobster/external/libtcc)\n\nadd_library(lobster-impl STATIC src/lobster_impl.cpp)\ntarget_link_libraries(lobster-impl PRIVATE lobster)\n\n########## TREESHEETS COMPILE AND LINK SETTINGS ###########\n\nOPTION(TREESHEETS_WITH_STATIC_WXWIDGETS \"Build wxWidgets along with TreeSheets and link TreeSheets against static wxWidgets library\" OFF)\n\n######### GIT SUBMODULES AUTOMATIC HANDLING ########\n# Taken from https://cliutils.gitlab.io/modern-cmake/chapters/projects/submodule.html\n\nfind_package(Git QUIET)\nif(GIT_FOUND AND EXISTS \"${PROJECT_SOURCE_DIR}/.git\")\n# Update submodules as needed\n    OPTION(GIT_WXWIDGETS_SUBMODULES \"Check wxWidgets git submodules during build\" ON)\n    if(GIT_WXWIDGETS_SUBMODULES)\n        message(STATUS \"The Git wxWidgets submodules are currently being updated...\")\n        execute_process(COMMAND ${GIT_EXECUTABLE} submodule update --init --remote --recursive\n                        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n                        RESULT_VARIABLE GIT_SUBMOD_RESULT)\n        if(NOT GIT_SUBMOD_RESULT EQUAL \"0\")\n            message(FATAL_ERROR \"git submodule update --init --recursive failed with ${GIT_SUBMOD_RESULT}, please checkout submodules\")\n        endif()\n        if(NOT EXISTS \"${PROJECT_SOURCE_DIR}/lib/wxWidgets/CMakeLists.txt\")\n            message(FATAL_ERROR \"The submodules were not downloaded! GIT_WXWIDGETS_SUBMODULES failed.\")\n        endif()\n        set(TREESHEETS_WITH_STATIC_WXWIDGETS ON)\n    endif()\nendif()\n\n######## TREESHEETS WITH STATIC WXWIDGETS ########\n\n# If TREESHEETS_WITH_STATIC_WXWIDGETS is set, then it expects the wxWidgets source code \n# to be placed in lib/wxWidgets (see below, it can be changed to your liking).\n\nif (TREESHEETS_WITH_STATIC_WXWIDGETS)\n    set(wxBUILD_SHARED OFF)\n    set(wxBUILD_INSTALL OFF CACHE BOOL \"Avoid install/uninstall target for wxWidgets in static build\" FORCE)\n    add_subdirectory(lib/wxWidgets)\nelse()\n    find_package(wxWidgets REQUIRED aui adv core xml net)\n    include(${wxWidgets_USE_FILE})\nendif()\n\nif(APPLE)\n    add_executable(\n        TreeSheets\n        MACOSX_BUNDLE\n        src/main.cpp\n        osx/App.icns\n    )\n    set_source_files_properties(osx/App.icns PROPERTIES\n        MACOSX_PACKAGE_LOCATION \"Resources\")\n    set_target_properties(TreeSheets PROPERTIES\n        MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_SOURCE_DIR}/osx/Info.plist\"\n    )\nelse()\n    add_executable(\n        TreeSheets\n        src/main.cpp\n    )\nendif()\n\ntarget_include_directories(TreeSheets PUBLIC lobster/src)\ntarget_precompile_headers(TreeSheets PUBLIC src/stdafx.h)\n\ntarget_link_libraries(\n    TreeSheets\n    PRIVATE\n    $<IF:$<BOOL:${TREESHEETS_WITH_STATIC_WXWIDGETS}>,\n        wx::aui\n        wx::adv\n        wx::core\n        wx::xml\n        wx::net,\n        ${wxWidgets_LIBRARIES}\n    >\n    lobster-impl\n)\n\n########## TREESHEETS INSTALLATION SETTINGS ###############\n\nif(LINUX)\n    OPTION(TREESHEETS_RELOCATABLE_INSTALLATION \"Install data relative to the TreeSheets binary, instead of respecting the Filesystem Hierarchy Standard\" OFF)\nendif()\n\nif(LINUX AND NOT TREESHEETS_RELOCATABLE_INSTALLATION)\n    include(GNUInstallDirs)\n\n    set(TREESHEETS_BINDIR ${CMAKE_INSTALL_BINDIR})\n    set(TREESHEETS_DOCDIR ${CMAKE_INSTALL_DOCDIR})\n    set(TREESHEETS_FULL_DOCDIR ${CMAKE_INSTALL_FULL_DOCDIR})\n    set(TREESHEETS_PKGDATADIR ${CMAKE_INSTALL_DATADIR}/${CMAKE_PROJECT_NAME})\n    set(TREESHEETS_FULL_PKGDATADIR ${CMAKE_INSTALL_FULL_DATADIR}/${CMAKE_PROJECT_NAME})\n\n    # Convert relative to absolute paths because only absolute paths are looked up on Linux\n    target_compile_definitions(TreeSheets PRIVATE \"LOCALEDIR=L\\\"${CMAKE_INSTALL_FULL_LOCALEDIR}\\\"\")\n    target_compile_definitions(TreeSheets PRIVATE \"TREESHEETS_DOCDIR=\\\"${TREESHEETS_FULL_DOCDIR}\\\"\")\n    target_compile_definitions(TreeSheets PRIVATE \"TREESHEETS_DATADIR=\\\"${TREESHEETS_FULL_PKGDATADIR}\\\"\")\n\n    install(FILES linux/com.strlen.TreeSheets.svg DESTINATION ${CMAKE_INSTALL_DATADIR}/icons/hicolor/scalable/apps)\n    install(FILES linux/com.strlen.TreeSheets.desktop DESTINATION ${CMAKE_INSTALL_DATADIR}/applications)\n    install(FILES linux/com.strlen.TreeSheets.xml DESTINATION ${CMAKE_INSTALL_DATADIR}/mime/packages)\nelseif(APPLE)\n    set(TREESHEETS_BINDIR ${CMAKE_INSTALL_PREFIX})\n    set(TREESHEETS_DOCDIR ${CMAKE_INSTALL_PREFIX}/TreeSheets.app/Contents/Resources)\n    set(TREESHEETS_PKGDATADIR ${CMAKE_INSTALL_PREFIX}/TreeSheets.app/Contents/Resources)\nelse()\n    set(TREESHEETS_BINDIR ${CMAKE_INSTALL_PREFIX})\n    set(TREESHEETS_DOCDIR ${CMAKE_INSTALL_PREFIX})\n    set(TREESHEETS_PKGDATADIR ${CMAKE_INSTALL_PREFIX})\nendif()\n\ninstall(TARGETS TreeSheets DESTINATION ${TREESHEETS_BINDIR})\ninstall(DIRECTORY TS/docs DESTINATION ${TREESHEETS_DOCDIR})\ninstall(FILES TS/readme.html DESTINATION ${TREESHEETS_DOCDIR})\ninstall(DIRECTORY TS/examples DESTINATION ${TREESHEETS_DOCDIR})\n\ninstall(DIRECTORY TS/images DESTINATION ${TREESHEETS_PKGDATADIR})\ninstall(DIRECTORY TS/scripts DESTINATION ${TREESHEETS_PKGDATADIR})\n\n# Install translations to correct platform-specific path.\n# See: https://docs.wxwidgets.org/trunk/overview_i18n.html#overview_i18n_mofiles\nfile(\n    GLOB locales\n    LIST_DIRECTORIES true\n    RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/TS/translations\n    TS/translations/*/ts.mo\n)\nlist(\n    TRANSFORM locales\n    REPLACE \"/ts\\\\.mo$\" \"\"\n)\nif(WIN32 OR TREESHEETS_RELOCATABLE_INSTALLATION)\n    foreach(locale ${locales})\n        install(\n            FILES \"TS/translations/${locale}/ts.mo\"\n            DESTINATION \"${CMAKE_INSTALL_PREFIX}/translations/${locale}\"\n        )\n    endforeach()\nelseif(APPLE)\n    foreach(locale ${locales})\n        install(\n            FILES \"TS/translations/${locale}/ts.mo\"\n            DESTINATION \"${CMAKE_INSTALL_PREFIX}/TreeSheets.app/Contents/Resources/translations/${locale}.lproj\"\n        )\n    endforeach()\nelse()\n    # Falling back to GNU scheme\n    foreach(locale ${locales})\n        install(\n            FILES \"TS/translations/${locale}/ts.mo\"\n            DESTINATION \"${CMAKE_INSTALL_LOCALEDIR}/${locale}/LC_MESSAGES\"\n        )\n    endforeach()\nendif()\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.49609375,
          "content": "<p align=\"center\">\r\n  <img src=\"https://github.com/user-attachments/assets/1d6dc57a-5db2-48ce-82b9-5e7675bf0e7d\">\r\n</p>\r\n\r\nTreeSheets is a \"hierarchical spreadsheet\" that is a great replacement for spreadsheets, mind mappers, outliners, PIMs, text editors and small databases.\r\n\r\nSuitable for any kind of data organization, such as todo lists, calendars, project management, brainstorming, organizing ideas, planning, requirements gathering, presentation of information, etc.\r\n\r\nIt's like a spreadsheet, immediately familiar, but much more suitable for complex data because it's hierarchical.\r\nIt's like a mind mapper, but more organized and compact.\r\nIt's like an outliner, but in more than one dimension.\r\nIt's like a text editor, but with structure.\r\n\r\nCommunity:\r\n----------\r\nIf you like, you are kindly invited to join the [Discord channel](https://discord.gg/HAfKkJz) and \r\nthe [Google group](https://groups.google.com/group/treesheets) for discussion.\r\n\r\nInstallation:\r\n-------------\r\n\r\n### Windows/Ubuntu LTS/MacOS users\r\n\r\nPre-built binaries are available at the\r\n[Release section](https://github.com/aardappel/treesheets/releases). \r\n\r\nPlease note that the Linux builds provided are built and only compatible with `ubuntu-latest` used by [GitHub Actions Runner](https://github.com/actions/runner-images). \r\n\r\n### Flatpak (Linux) users\r\n\r\nIf you use Flatpak, you can install [TreeSheets from Flathub](https://flathub.org/apps/com.strlen.TreeSheets).\r\n\r\nSource Code:\r\n------------\r\nThis repository contains all the files needed to build TreeSheets for various platforms.\r\n\r\n### License\r\n\r\nTreeSheets has been licensed under the ZLIB license (see ZLIB_LICENSE.txt).\r\n\r\n![Workflow status](https://github.com/aardappel/treesheets/actions/workflows/build.yml/badge.svg)\r\n\r\n### Structure\r\n\r\n`src` contains all source code. The code is dense, terse, and with few comments, typical for a codebase that was never\r\nintended to be used by more than one person (me). On the positive side, you'll find the code very small and simple,\r\nwith all functionality easy to find and only in one place (no copy pasting or over-engineering). Enjoy.\r\n\r\n`TS` is the folder that contains all user-facing files, typically the build process results in an executable to be put\r\nin the root of this folder, and distributing to users is then a matter of giving them this folder.\r\n\r\n`TODO.txt` is the random notes I kept on ideas of myself and others on what future features could be added.\r\n\r\n\r\nBuilding:\r\n---------\r\nNote that YOU are responsible to know how to use compilers and C++, the hints below are all the help I will give you:\r\n\r\n### Windows\r\n  \r\n1. TreeSheets requires the latest development wxWidgets from their repo:\r\n  `git clone --recurse-submodules https://github.com/wxWidgets/wxWidgets.git`.\r\n2. Make sure your `wxWidgets` folder sits parallel to the `src` folder, that way the TreeSheets project will pick it up without further modifications\r\n3. Inside `wxWidgets/build/msw`, open `wx_vc17.sln` with Visual Studio 2022.\r\n4. Select all projects (except the project `_custom_build`) in the solution explorer, and go to properties:\r\n    - Set configuration to debug, and C/C++ -> Code Generation -> Runtime library\r\n      to Multithreaded Debug\r\n    - Set configuration to release, and C/C++ -> Code Generation -> Runtime library\r\n      to Multithreaded\r\n5. Build solution in both x64 Debug and Release\r\n6. Close the wxWidgets solution\r\n7. `win` contains the Visual Studio 2022 files for treesheets, open the .sln.\r\n    If you've done the above correctly, TreeSheets will now compile and pick up\r\n    the wxWidgets libraries.\r\n8. To distribute, build an installer with `win\\TS_installer.nsi` (requires nsis.sourceforge.net)\r\n\r\n### Mac OS\r\n  \r\n1. Clone this repository\r\n```sh\r\ngit clone https://github.com/aardappel/treesheets\r\n```\r\n2. Change to working tree\r\n```sh\r\ncd treesheets\r\n```\r\n3. Configure the build system\r\n```sh\r\ncmake -S . -B _build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/Applications\r\n```\r\n4. Build\r\n```sh\r\ncmake --build _build -j\r\n```\r\n5. Install\r\n```sh\r\ncmake --install _build\r\n```\r\n\r\n### Linux\r\n  \r\n1. Clone this repository\r\n```sh\r\ngit clone https://github.com/aardappel/treesheets\r\n```\r\n2. Change to working tree\r\n```sh\r\ncd treesheets\r\n```\r\n3. Configure the build system\r\n```sh\r\ncmake -S . -B _build -DCMAKE_BUILD_TYPE=Release\r\n```\r\n4. Build\r\n```sh\r\ncmake --build _build -j\r\n```\r\n5. Install\r\n```sh\r\nsudo cmake --install _build\r\n```\r\n\r\n### Further information for Mac OS / Linux\r\n  \r\n- If you have `git` installed, the submodules for wxWidgets will be automatically updated and wxWidgets will be compiled as a CMake subproject. TreeSheets will be then statically linked against this wxWidgets build.\r\n- If you do like to link dynamically against an existing wxWidgets installation instead, you can switch off the option `GIT_WXWIDGETS_SUBMODULES` in the CMake project. In this case:\r\n    - You can use the version of wxWidgets from https://github.com/wxWidgets/wxWidgets.git.\r\n    - Follow the instructions to build there, but add `--enable-unicode` and `--disable-shared` to the `configure` step.\r\n    - Alternatively you can build against the wxWidgets package of your distribution.\r\n- You can change the default installation prefix (`/usr/local`) by passing something like `-DCMAKE_INSTALL_PREFIX=/usr`.\r\n- If you are MacOS X user, a bundle will be installed to the installation prefix.\r\n</details>\r\n\r\nContributing:\r\n-------------\r\nI welcome contributions, especially in the form of neatly prepared pull requests. The main thing to keep in mind when\r\ncontributing is to keep as close as you can to both the format and the spirit of the existing code, even if it goes\r\nagainst the grain of how you program normally. That means not only using the same formatting and naming conventions\r\n(which should be easy), but the same non-redundant style of code (no under-engineering, e.g. copy pasting,\r\nand no over engineering, e.g. needless abstractions).\r\n\r\nAlso be economic in terms of features: treesheets tries to accomplish a lot with few features, additional user\r\ninterface elements (even menu items) have a cost, and features that are only useful for very few people should\r\nprobably not be in the master branch. Needless to say, performance is important too. When in doubt, ask me :)\r\n\r\nTry to keep your pull requests small (don't bundle unrelated changes) and make sure you've done extensive testing\r\nbefore you submit, preferrably on multiple platforms.\r\n\r\nStars over time:\r\n----------------\r\n[![Stargazers over time](https://starchart.cc/aardappel/treesheets.svg?variant=adaptive)](https://starchart.cc/aardappel/treesheets)\r\n"
        },
        {
          "name": "TODO.txt",
          "type": "blob",
          "size": 19.2353515625,
          "content": "[ check google moderator for new feature requests ]\r\n\r\n- make script functions like ts_goto_child etc give an error if wrong index given rather than fail silently.\r\n\r\n- when pasting/typing in new cell, don't use average size or size above, prefer size to right or\r\n  below.\r\n\r\n- A way to set vertical spacing on fonts\r\n\r\n- an auto-import/merge of an external file (e.g. a text file)\r\n  The contents of a grid would automatically be replaced by whatever is in that text file,\r\n  and maybe auto-exported when modified?\r\n  This allows TreeSheets to be a \"dashboard\" for external files, generated/edited by external\r\n  programs.\r\n\r\n- A preview (particularly for images) of external (http & file) links, either on hover over, or\r\n  even in-line. Makes for a nice alternative to inline images if there's a lot of them.\r\n\r\n- bug: if you paste a size 0 cell into, say, a size -5 new parent, the cell that is being pasted\r\n  is set to -5 but all its children stay at 0, making for weird rendering.\r\n\r\n- bug: if you press \"run\", it can affect text size, and doesn't undo.\r\n  - maybe should remove \"run\" from the toolbar.\r\n\r\n- OSX: figure out how to do retina text rendering.\r\n  https://forums.wxwidgets.org/viewtopic.php?f=23&t=42806&p=173880#p173880\r\n\r\n- bug: reordering the tabs can disable editing (no selection)\r\n  - similarly, closing a sheet can make others uneditable.\r\n\r\n- bug: insert text in cell, then INS, then Ctrl-Z: undoes also text\r\n\r\n- bug: F6 does not find all occurrences (see Evelien's example).\r\n\r\n- Have a version of F6 that goes backwards?\r\n\r\n- fix lack of change detection on OS X / Linux, since more people use it with DropBox now.\r\n  - Check if wxWidgets file system monitoring works now, or emulate by polling.\r\n\r\n- allow dropdowns to set their current value also on single click.\r\n\r\n- allow key binding thru CTRL+menu item click? There's no way to test for ctrl in the event.\r\n\r\n- wordcount feature, for all, and also shown for current cell\r\n\r\n- make LEFT on the top dotted line go to parent (and maybe UP and leftmost dotted line).\r\n\r\n- should save custom color to the cfg\r\n\r\n- OSX: [github, Yang Xiaowei]: IME input doesn't work\r\n  No events arrive at either OnChar or OnKeyDown with e.g. Japanese IME selected, and no idea why\r\n\r\n- Test multi-monitor off-screen detection on Windows & mac.\r\n\r\n- Windows: [Derell Licht]: unnecessary debug messages, especially in non-admin mode.\r\n\r\n- \"Wrap in Parent\" doesn't respect the border color much like INS used to not do.\r\n\r\n- Alt+scrollwheel doesn't seem to get recorded as undoable\r\n\r\n- CTRL+g same as INS on other platforms\r\n\r\n- promote/demote keys? Ctrl-Shift left and right?\r\n\r\n- if it fails to load its icon files, it should check in the current directory - would simplify command line usage.\r\n\r\n- non-windows platforms: wxIsalnum not returning true for certain unicode chars? xxxxxx xxxxxxxx xxxxxx F�retro xxxxx\r\n- some people have locale settings that makes it break words in the middle.\r\n  maybe do word splits based on ispunct etc instead?\r\n\r\n- a fold/unfold all op.\r\n\r\n- easy way to split a cell at the current cursor position, e.g. shift + enter?\r\n\r\n- should be easy to add a simplistic drawing tool inside TreeSheets, since we already support bitmaps in cells\r\n\r\n- it be very good to make the XML import/export closer to the native format, plenty of people would want to interoperate with TS that way\r\n\r\n- we now skip PNGs that fail to load, but would be even better if they didn't fail at all.\r\n  - could switch to using sbimage for PNG loading, probably more robust.\r\n\r\n- spellchecker\r\n\r\n- print options: scale/position control, and some form of pagination\r\n\r\n- add a way to copy only the image from a cell\r\n\r\n- when importing from text, make sure tab is also seen as indentation\r\n\r\n- make g_cell_margin configurable?\r\n\r\n- if we support OPML read/write, then we can edit on iOS using e.g. http://carbonfin.com/\r\n\r\n- CI with Travis\r\n\r\n- LINUX: undo log fix in local git\r\n\r\n- LINUX: (64bit) typing faster loses characters?\r\n\r\n- LINUX: Ctrl+I advances to next tab instead of italics\r\n\r\n- LINUX: window resizing sometimes leads to a red blinking border and the program becoming unresponsive???\r\n  -> also a problem since 2.9.4 according to http://trac.wxwidgets.org/ticket/14871\r\n\r\n- LINUX? recent files list not updated after Save As?\r\n\r\n- the bitmaps used for rounded lines show up using black for the alpha on some printers.\r\n  draw them using actual lines when in printing mode.\r\n\r\n- the fact that you can't just copy a X*Y selection and paste that into a similar selection is a bit weird, e.g. if you wanted to duplicate a spreadsheet row.\r\n\r\n- shift+down/up while selecting text should also extend selection.\r\n\r\n- ctrl+shift+tab for changing tabs backwards\r\n\r\n- modifier+enter for going left rather than down upon exiting a cell? Hmm TAB does that, but doesn't go to the line in-between.\r\n\r\n- a way to navigate to previous selections (like alt+arrow in browsers)\r\n\r\n- when zooming out, for any parent(s) of the selected item that also fit on screen, make sure they are shown on screen\r\n\r\n- When a subgrid has multiple columns \"Flatten\" should iterate over rows (and copy rowns in their entirety) rather than iterating over each cell.\r\n\r\n- file system watch should really just poll on currently open doc filestamps, which would probably be more efficient than the currently broken implementation and work on all platforms.\r\n\r\n- LINUX: apparently on some systems only every second keystroke arrives at the treesheets view? how to reproduce this?\r\n- LINUX: check 12.04 for libgtk error\r\n\r\n- VIDEO! on the site, showing how the basics work\r\n\r\n- if you open a .cts file from explorer it gives a weird error about not being able to make a connection (on Iara's computer fresh install)\r\n\r\n- export images in html\r\n  see also html_rendering_bugs.png\r\n\r\n- if we continue or change the internal programming language, one important thing would be to give it more database functionality, i.e. do something like a SQL query on a treesheet to get a sub-view.\r\n\r\n- JSON export\r\n\r\n- should retain image when folding.\r\n\r\n- improve drag and drop with CTRL to use current selection\r\n\r\n- text alignment per cell?\r\n\r\n- what's wrong with font rendering when running from within visual studio?\r\n\r\n- better fold icon, clicking on it should unfold?\r\n  - make the folding icon more basic like notepad++\r\n  - When I fold or unfold the cell, the embedded image disappears or is replaced with a 'plus' symbol. I'd like to the image remained in the cell.\r\n\r\n- insert a date stamp / time stamp\r\n\r\n- stephan: way to mark a grid as numbered, and have sub grids have sub-numbering etc. (2.3)\r\n\r\n- bullet pointed list / numbered list instead of grid drawing?\r\n\r\n- auto-save whenever window de-focused\r\n\r\n- people would really like excel style formulas\r\n\r\n- easy way to have external images, such that file/loading saveing doesn't take forever. preferably loaded on demand.\r\n\r\n- option for auto export\r\n\r\n- export should auto suggest a filename\r\n\r\n- if your top level grid has just a single cell in it, changing formatting of that grid (i.e. layout mode) is unintuitive, as you first have to do ctrl+A...\r\n  either make that more obvious in the docs, or provide a better operation for that\r\n  This is generally a problem as some operations operate on a grid by means of its parent cell, and others by having the whole grid selected.\r\n  May well be too hard to change this now.\r\n\r\n- should \"auto reload documents\" be default on now that a lot more people use DropBox etc?\r\n\r\n- keep track if an image was originally a JPG, and then save it as JPG?\r\n\r\n- date & time functionality:\r\n  - allow a range of consecutive cells be filled with dates from a picker\r\n  - allow a cell to be set to a time, with an alarm attached if needed\r\n    only works if it can find a date cell nearby, which is found by:\r\n    - cells to the left\r\n    - cells above\r\n    - same for the parent\r\n\r\n- load all files relative to exe path instead of cwd?\r\n\r\n- the new sheet dialog confuses people into thinking that the initial size matters, e.g. http://treesheets.findmysoft.com/\r\n  however, starting with a 1x1 would be confusing also\r\n\r\n- calculation language sample use cases:\r\n  - tag cells with a progress complete, and then have overal average progress complete figures in a hierarchical fashion\r\n\r\n- treesheets suitable for code editing!\r\n  - export + run + showing console output + jump to line\r\n  - syntax highlighting.. might be fun even for non-programming languages\r\n\r\n- could have a feature to upload to google docs\r\n  http://code.google.com/apis/documents/docs/3.0/developers_guide_protocol.html#UploadingDocs\r\n  http://code.google.com/p/gdata-cpp-util/\r\n  wxHTTP\r\n\r\n- the future for synced treesheets is to backup to an existing sharing service like google docs or simplenote\r\n  you could simply:\r\n  * convert current TS to an indented text file\r\n  * upload to google docs\r\n  * mark upload time in TS doc\r\n  * when downloading:\r\n    * any cells with newer dates than the last upload overwrite the google doc\r\n    * any older cells may be overwritten by anything that is different in the google doc\r\n    * keeps the formatting of the TS doc\r\n  * should work even when the doc is shared!\r\n  * can do this over google docs api, or even easier, by putting a separate file in gdrive\r\n    except google docs doesn't let you edit text files online, and it doesn't sync its own files (just url)\r\n    and the only way to access google docs thru c++ seems to be thru a huge library (includes libcurl and libxml)\r\n    http://code.google.com/p/gdata-cpp-util/\r\n    unless I parsed it myself using the wxwidgets html req etc. but there appear to be no docs on how to do it yourself?\r\n    even if this works, the docs talk about uploading new docs.. what about overwriting existing *shared* docs?\r\n    actually theres ways to overwrite, using a PUT request..\r\n    http://www.codeproject.com/Articles/319435/Michael-Haephrati-A-Google-Docs-based-Backup-Appli\r\n  * simplenote requires one http request per \"note\", so you'd have to put your entire todo in one note\r\n    really need a sharing service that has text documents you can edit on the web / your phone\r\n  * actually, there's text editors for dropbox. so we can do the above idea for dropbox.\r\n    * would have to keep track of the last file time the file was imported or saved over\r\n    * gets tricky with the real file, since if the text file gets modified, now all treesheets instances have\r\n      a modified file they want to save\r\n      and auto saving after an import could get you into a loop\r\n      hmmm... with the text syncing the whole file syncing should really be turned off, since it complicates matters\r\n      and text syncing is safer, because it merges changes, so can be done even if one user has unsaved changes (!)\r\n      the merging algorithm needs to be somewhat smart, besides using dates, it needs to detect inserted and moved items\r\n      hmm, should start with changing the existing changes detected algo such that it does a merge instead of asks the user\r\n      this should make that process much more reliable.\r\n      must also set an undo ONLY if there are any changes during a merge\r\n      file then gets autosaved\r\n      problem with dropbox is the .cts and .txt may be updated in an unreliable order.. ideally want to do the .cts first\r\n  * a simpler idea for now: just allow a .txt file to be opened directly, and when saved also as .txt\r\n    just shame about the lack of formatting, though who knows we can introduce more of that, like markdown\r\n\r\n- 2 pane system: a left pane with a windows explorer style tree, and a right one that displays the regular TreeSheets workspace, zoomed in to whatever is selected on the left.\r\n  That is simpler from a UI perspective, and familiar to many users. It would also allow a neat extra: for the left tree to show all open documents in tree form, not just the current one,\r\n  for even quicker switching. The TreeSheets document would remember what nodes on the left are expanded or not.\r\n\r\n\r\n\r\n- make a free-form opengl based representation?\r\n- plugin programming: lua/squirrel/cubescript/lobster..\r\n    - the current visual formulas\r\n    - excel style formulas\r\n    - formulas where the cell text is the formula, and the subgrid the result of evaluation\r\n    - a macro system\r\n    - a scripting language plugin (e.g. Lua)\r\n    - generic plugins: export cell as XML, run external tool, load back in the result\r\n- [james,Iara] spell checker\r\n- figure out some kind of \"template\" feature for common structures, so people who don't know how to design their own treesheet can use it?\r\n  - the 10x10 grid can be a confusing start for new users, because they don't realize they can shrink/grow, should do templates instead\r\n- encryption? (truecrypt)\r\n- [superboyac] custom keyboard assignments\r\n- outliner/todo/powerpoint style hierarchy\r\n  - [superboyac] easy moving up and down in hierarchy of items (like pp or outliners), not sure if these make sense:\r\n    * indent means merge into the grid of sibling above\r\n    * outdent means becoming a cell after current parent, and taking all following siblings with you as children\r\n  - a way to linearly go to the next cell instead of hierarchically?\r\n    * currently, pressing up or down for furthest selection in grid simply doesn't do anything, could make that mean go to parent... but ESC already does this\r\n- BUG: the fix for seeing selection boxes at the wrong location after a forced resize now doesn't allow selections at all\r\n- [james] is there a better way to choose the relative size when zoomed in such that resizing a sub grid does not have weird consequences?\r\n- an additional way to exit fullscreen mode for people that forget F11. Maybe esc should deselect at top level, and then be able to esc fs?\r\n- a way to hop from one view to the next for presentation mode?\r\n- \"Save Selection As\" or \"Save View As\" - not frequently needed, and easy to do with copy/paste already\r\n- ALT+mousewheel causes the menu to be selected, disabling further mousewheel actions\r\n- [james] import for text delineated by double lf for paragraphs\r\n- \"filter on tag\" -> can just type tag into search field and use filter on search, more flexible\r\n- [karl] keyboard shortcut key for minimize to and maximize from tray\r\n- [karl] portable version (for Windows)\r\n- [karl] interface translation via external (text) file\r\n- [d.lynch] the auto-refocussing in horizontal mode (or maybe any) should only care for the Text, not the sub grid\r\n  no: seems to already do the correct thing : get as much as the cell showing, focussing on the top left\r\n  he wanted to still see the parent if possible, but that is not something that can be done in general\r\n- put grid color & width in XML/HTML export?\r\n- tags, search, and code need to have configurable colors (as well as default colors for border/text/bg? gridlines?)\r\n  Must be on a per sheet basis, because otherwise colors will clash with cell coloring from other people\r\n- paste without style?\r\n- replace treesheets toolbar optionally by custom panel on mac?\r\n- directory browser inside treesheets?\r\n- can add GC of images now easily\r\n- \"mental stack\" feature for treesheets: some way to really quickly jot down what you need to do?\r\n- ideas for features or presentation: http://www.omnigroup.com/applications/omnioutliner/\r\n- convert examples from http://www.biggerplate.com/\r\n- some way to allow to print on multiple pages. Maybe allow each cell of a grid to be on its own page? Figuring out how to split up a large treesheet automatically is not easy.\r\n- do search with something other than red text, same with programming language -> maybe configurable? \"set style of current cell as\": \"search result\", \"operator\"\r\n- mac: set a minimum for text size / note in docs that ctrl==cmd / mac specific shortcuts for new grid (Cmd-Option-I), merge (Cmd+Option+R)\r\n  / enter on cell says not implemented / CMD+scroll may clash with zoom\r\n  if we'd convert to doc/view, this may help the mac version, but that would mean losing tabs\r\n- adam: add text size, bold and other features to the xml/html export\r\n- wxIsAlnum returns true for chinese characters... so they can't get line-split\r\n- add more formats supported by file drag & drop (treesheets merge, text/xml etc).\r\n- figure out different way to do\r\n  * hover drawing\r\n  * unicode events\r\n- wxOverlay based rendering (does it support blending??)\r\n- alf: copy to all selected cells\r\n- fix icon in installer?\r\n- vic: bug: I have the mouse setting Smart Move set on (\"causes the cursor to jump to the highlighted button of a new dialog box\").  With all my other software, if there's a default button set, the cursor jumps to it.  But with TreeSheets, it jumps to Discard changes.\r\n- selection extend with the mouse on current selection corners?\r\n- leib: RTF export\r\n- borders still not working properly when toolbar and statusbar turned off?\r\n- Can we do better than the 1 size less printing hack?\r\n- tim: unicode example is slow... must add partial refresh\r\n- more icons in the toolbar | icons in the menu\r\n- work on VPL - errors inside cells - a \"comment\" cell that gets skipped entirely\r\n- ISSUE: arial unicode ms has rasterization bugs?\r\n- BUG: rotates characters needlessly in unicode fonts?\r\n- optimize typing speed when no re-layout is required\r\n- shrink to selection using Paste()/CloneSel() - Grid inline/merge in parent?\r\n- allow text size change independent of contained grid\r\n- make ios/android versions?\r\n- make undo bounded\r\n- FIXMEs\r\n- paste file\r\n- cycle selection ctrl+alt+arrow?\r\n- export using wxPdfDocument\r\n- strategical zoom vs context rendering - overview vs treesheets - directory browser based on treesheets?\r\n\r\nHARD TO DO / NOT WORTH THE EFFORT:\r\n- remove tabs if there's only 1 -> appears difficult to do, swap out notebook for a single scrollerwindow\r\n\r\nREQUIRES SPECIAL TEST:\r\n- scrollbar issue in ubuntu\r\n- aliased text problem only occurs in release mode?\r\n- linux bug: Error: can't open file './examples/tutorial.tmp' (error 2: No such file or directory)\r\n- outputs in debug: ..\\..\\src\\msw\\window.cpp(665): 'SetFocus' failed with error 0x00000057 (the parameter is incorrect.)\r\n- test: left/right mousewheel doesn't work\r\n- (not reproducable?) toolbar becomes white sometimes?\r\n\r\nUNREPRODUCABLE:\r\n- seems to do corrupt toolbar rendering on windows 7 -> maybe related to my use of dgipp / mactype?\r\n- BUG: sometimes it can dimension a column much narrower than the text, resulting in overdraw\r\n  it seemed to be related to a column width identical to a single URL (20), and text in a cell beneath\r\n  * http://bsonspec.org/\r\n  * none: messages constructed in code\r\n- BUG: UNREPRODUCABLE: wide column layout? -> there really is a gigantic string there, no idea how it got created\r\n- changing font from farago to arial unicode screwed up rendering\r\n- F8 (Hierarchy Swap). This crashes on the swap of the top cell in  hierarchy or the swapped cell is dissapeared.\r\n- clancy: files not loading on other computer?? -> likely a transfer problem\r\n\r\nUNTESTABLE:\r\n- BUG: untestable: crash with file updates when multiple file system watch events cause multiple popups\r\n\r\nUNFIXABLE:\r\n- improve scaled rendering: increase VIEWPORT_EXTENT in dc.cpp to get more accuracy? -> not fixed in 2.9.1\r\n  -> tried changing this value to higher numbers with no difference\r\n\r\nFIXED??\r\n- wxStaticText hack not necessary anymore\r\n    - the toolbar text rendering hack doesn't work if you shrink the window to make less of them visible.\r\n\r\n===============================\r\n\r\nFAQ: older versions of logitech mouseware may interfere with treesheets operation, make sure to have the latest installed\r\n\r\n===============================\r\n"
        },
        {
          "name": "TS",
          "type": "tree",
          "content": null
        },
        {
          "name": "ZLIB_LICENSE.txt",
          "type": "blob",
          "size": 0.8740234375,
          "content": "Copyright (c) 2008 Wouter van Oortmerssen\r\n\r\nThis software is provided 'as-is', without any express or implied\r\nwarranty. In no event will the authors be held liable for any damages\r\narising from the use of this software.\r\n\r\nPermission is granted to anyone to use this software for any purpose,\r\nincluding commercial applications, and to alter it and redistribute it\r\nfreely, subject to the following restrictions:\r\n\r\n   1. The origin of this software must not be misrepresented; you must not\r\n   claim that you wrote the original software. If you use this software\r\n   in a product, an acknowledgment in the product documentation would be\r\n   appreciated but is not required.\r\n\r\n   2. Altered source versions must be plainly marked as such, and must not be\r\n   misrepresented as being the original software.\r\n\r\n   3. This notice may not be removed or altered from any source\r\n   distribution.\r\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "lobster",
          "type": "tree",
          "content": null
        },
        {
          "name": "osx",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "win",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}