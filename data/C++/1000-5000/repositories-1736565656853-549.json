{
  "metadata": {
    "timestamp": 1736565656853,
    "page": 549,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MaartenBaert/ssr",
      "stars": 2609,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.23828125,
          "content": "*~\n*.so\n*.o\n*.lo\n*.la\n*.tar.gz\n*.user\n*.orig\n*.autosave\n*.qm\nqrc_*\nmoc_*\nMakefile\nautom4te.cache\nconfig.h\nconfig.log\nconfig.status\nlibtool\n.deps\n.libs\n.dirstamp\nstamp-h1\n.cache\ncompile_commands.json\n\nbuild-*\nsrc/simplescreenrecorder\n\nprivate-*\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 1.1328125,
          "content": "SimpleScreenRecorder contributors\n=================================\n\nProgramming\n-----------\n\n- Maarten Baert\n- Boran Car (GLInject hotkey workaround)\n- Dubslow (profiles)\n- Dmitry Kostenko ('simpleui' patches)\n\nGraphics\n--------\n\n- David Revoy (icon)\n- Mrallowski (original camera lens from openclipart.org)\n- Maarten Baert (header)\n\nBuild system\n------------\n\n- Maarten Baert\n- Michał Walenciak (switch to cmake)\n\nTranslations\n------------\n\n- Arabic: Abdulla\n- Bulgarian: Svetoslav Sashkov\n- Czech: Radek Steiger\n- German: Manuel Schömburg, AlexMI\n- Greek: Nick Thom\n- Spanish: Dani Rodríguez\n- French: Mario Roger, Olivier Humbert\n- Hebrew: GreenLunar\n- Hungarian: ViBE, Balázs Úr\n- Indonesian: Arif Budiman\n- Italian: Bersil\n- Japanese: Tou Omiya, Utuhiro78\n- Lithuanian: welaq\n- Dutch: Maarten Baert\n- Polish: Szamanx0, Vetyt Yhonay, Michał Walenciak\n- Brazilian Portuguese: Paulo Milliet Roque, Rafael Ferreira\n- Russian: Dima Koshel, Vladi105, Olesya Gerasimenko\n- Serbian: Zvicko\n- Slovakian: Jose Riha\n- Swedish: Åke Engelbrektson\n- Ukrainian: Rom Gyrfalco\n- Simplified Chinese: Weitian Leung\n- Traditional Chinese: Estea Chen, Hsiu-Ming Chang\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.9521484375,
          "content": "SimpleScreenRecorder changes\n============================\n\nGit master\n----------\n\n- ?\n\nVersion 0.4.4\n-------------\n\n- Some minor improvements.\n- Updated translations.\n- Bugfixes.\n\nVersion 0.4.3\n-------------\n\n- Added V4L2 support (most webcams and capture cards).\n- Added option to mark recorded area on screen during recording.\n- Added JACK metadata.\n- Optionally support XDG config directory (`~/.config/simplescreenrecorder`) instead of home directory (`~/.ssr`).\n- Bugfixes.\n\nVersion 0.4.2\n-------------\n\n- Improved X11/Wayland detection.\n- Changed ALSA input to use non-blocking API. This seems to reduce the latency in some cases.\n- Added support for s24, s32 and f32 sample formats for ALSA input.\n- Added 'open folder' button after saving the recording.\n- Several minor improvements.\n\nVersion 0.4.1\n-------------\n\n- Added warning for Wayland users.\n- Internal error messages from FFmpeg and other libraries are now shown in the log window.\n- Fixed blocked continue button after selecting a window.\n\nVersion 0.4.0\n-------------\n\n- Added high-DPI monitor support.\n- Added option to skip the welcome screen.\n- Increased maximum video size to 20000x20000.\n- Added more command-line options.\n- Added recording schedule.\n- Add command-line control over stdin.\n- Many bugfixes.\n\nVersion 0.3.11\n--------------\n\n- Fixed FFmpeg 4.0 compatibility.\n- Fixed AAC codec (missing channel layout).\n- Improved build system.\n- Minor bugfixes.\n\nVersion 0.3.10\n--------------\n\n- Custom recording frame to replace QRubberBand (important for Qt5).\n- Improved build system.\n\nVersion 0.3.9\n-------------\n\n- Switched to CMake build system.\n- Added RGB24 support.\n- Automatically add scroll bars when the screen resolution is too low to display the complete window.\n- Improved PulseAudio latency handling of monitors.\n- Added a separate checkbox to enable timestamps.\n- Provide a default file name, so now all options are set to a sensible default value.\n- Use base-10 units for bitrate for consistency with FFmpeg (1 kbit/s = 1000 bit/s).\n- Minor bugfixes.\n\nVersion 0.3.8\n-------------\n\n- Revert sample rate to 44.1 kHz for FLV container, since it does not support 48 kHz.\n\nVersion 0.3.7\n-------------\n\n- Added support for latest FFmpeg/libav.\n- Make relaxed GLInject permissions actually work.\n- The backend now supports fragmented recording, but there is no GUI for this yet.\n- The default audio sample rate is now 48 kHz. This makes SSR compatible with Opus.\n- System tray icon now indicates errors during recording.\n\nVersion 0.3.6\n-------------\n\n- Fixed another bug in YUV420 converter related to the previous one.\n\nVersion 0.3.5\n-------------\n\n- Fixed bug in YUV420 fallback converter introduced by refactoring.\n\nVersion 0.3.4\n-------------\n\n- Allowed user to start recording with hotkey or systray even when not on the recording page.\n- Fixed JACK input bug that could cause deadlocks in rare cases.\n- Added full support for NV12. If FFmpeg is compiled with NVENC support, this will allow you to use it.\n\nVersion 0.3.3\n-------------\n\n- Fixed mistake in configure.ac that was causing libssr-glinject.so to be linked with unwanted libraries.\n\nVersion 0.3.2\n-------------\n\n- Added Qt5 support (optional, Qt4 is still the default)\n- Added YUV422, YUV444 and RGB support (YUV420 is still the default)\n- Added pixelformat and sampleformat codec options.\n- Added benchmark.\n- Improved RTL support.\n- Bugfixes\n\nVersion 0.3.1\n-------------\n\n- Small change to ssr-glinject script for improved compatibility with Steam.\n- Added qscale option.\n- Disabled PulseAudio latency estimation (apparently it made things worse).\n- New muxing code for improved compatibility with the latest ffmpeg/libav.\n- Switched to the BT.709 color space.\n\nVersion 0.3.0\n-------------\n\n- Added profile support.\n- New, more flexible OpenGL recording system (glinject-next branch merged).\n- More robust sound notifications.\n- Show progress dialog while flushing the encoders.\n- Improved hotkey support using XInput2.\n- Improved synchronizer.\n- Native support for mono microphones (plughw no longer needed).\n- Added source detection for ALSA.\n- Partially rewritten output backend.\n- Improved mouse following algorithm.\n- New icon.\n- Bugfixes.\n\nVersion 0.2.2\n-------------\n\n- Bugfixes.\n\nVersion 0.2.1\n-------------\n\n- Bugfixes.\n\nVersion 0.2.0\n-------------\n\n- Added JACK support.\n- Added fast audio resampler with drift correction support.\n- Added translation support.\n- Added sound notifications.\n- Added much faster scaler.\n- Added keyint custom codec option.\n- Improved NVIDIA flipping dialog.\n- Bugfixes.\n\nVersion 0.1.2\n-------------\n\n- Added minrate, maxrate and bufsize custom codec options.\n- Bugfixes.\n\nVersion 0.1.1\n-------------\n\n- Bugfixes.\n\nVersion 0.1.0\n-------------\n\n- Native PulseAudio input.\n- Show recording frame while entering x/y/width/height.\n- Improved some GUI elements.\n- Added system tray icon.\n- Added custom video/audio codec options.\n- Added workaround for PulseAudio-related glitches.\n- Previewer works even when not recording.\n- Don't show RTMP urls on the recording page.\n- Added 'separate file per segment' option.\n- Hotkey workaround for misbehaving applications in GLInject.\n- Improved statistics and added external statistics file.\n- Improved synchronizer.\n- Added synchronization diagram for debugging.\n- Optimizations.\n- Bugfixes.\n\nVersion 0.0.7\n-------------\n\n- Improved streaming support.\n\nVersion 0.0.6\n-------------\n\n- Added link to Steam recording instructions for GLInject.\n\nVersion 0.0.5\n-------------\n\n- Detect and fix NVIDIA flipping issue.\n\nVersion 0.0.4\n-------------\n\n- Audio previewer is hidden if there is no audio.\n- Bugfixes.\n\nVersion 0.0.3\n-------------\n\n- Added desktop entry.\n- Switch from qmake to autotools.\n- Bugfixes.\n\nVersion 0.0.2\n-------------\n\n- Added icon and welcome image.\n- Bugfixes.\n\nVersion 0.0.1\n-------------\n\n- Native ALSA input to replace libavdevice.\n- Improved synchronizer.\n- Better audio codec support.\n- GLInject can record the cursor.\n- Added video and audio previewer.\n- Added 'about' dialog.\n- Many bugfixes.\n\nVersion 0.0.0\n-------------\n\n- First public version.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.7294921875,
          "content": "cmake_minimum_required(VERSION 3.1)\ncmake_policy(VERSION 3.1)\n\nif(POLICY CMP0072)\n\tcmake_policy(SET CMP0072 NEW)\nendif(POLICY CMP0072)\n\nset(CMAKE_CXX_STANDARD 11)\n\nproject(simplescreenrecorder VERSION 0.4.4)\n\nif(CMAKE_SYSTEM_PROCESSOR MATCHES \"x86_64|amd64|i386|i686\")\n\tset(PROCESSOR_IS_X86 TRUE)\nelse()\n\tset(PROCESSOR_IS_X86 FALSE)\nendif()\n\noption(ENABLE_32BIT_GLINJECT \"Build the 32-bit version of 'libssr-glinject' on 64-bit systems (in addition to the 64-bit version). Required for OpenGL recording of 32-bit applications on 64-bit systems.\" FALSE)\noption(ENABLE_X86_ASM \"Allow x86/x64 assembly or intrinsics.\" ${PROCESSOR_IS_X86})\noption(ENABLE_FFMPEG_VERSIONS \"Use FFmpeg version numbers for feature support tests. Enable when using FFmpeg, disable when using Libav.\" TRUE)\noption(ENABLE_JACK_METADATA \"Use the JACK metadata API. May not work with very old JACK versions.\" TRUE)\noption(WITH_OPENGL_RECORDING \"Build with OpenGL recording support.\" TRUE)\noption(WITH_V4L2 \"Build with V4L2 support.\" TRUE)\noption(WITH_PIPEWIRE \"Build with PipeWire support.\" TRUE)\noption(WITH_ALSA \"Build with ALSA support.\" TRUE)\noption(WITH_PULSEAUDIO \"Build with PulseAudio support.\" TRUE)\noption(WITH_JACK \"Build with JACK support.\" TRUE)\noption(WITH_QT5 \"Build with Qt5 (instead of Qt4).\" FALSE)\noption(WITH_SIMPLESCREENRECORDER \"Build the 'simplescreenrecorder' executable.\" TRUE)\noption(WITH_GLINJECT \"Build the 'libssr-glinject' library. Required for OpenGL recording.\" TRUE)\n\nset(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)\n\ninclude(FeatureSummary)\ninclude(GNUInstallDirs)\n\n# try to guess the correct 32-bit library path on 64-bit systems\nif(ENABLE_32BIT_GLINJECT)\n\n\tif(NOT DEFINED CMAKE_INSTALL_LIB32DIR)\n\t\tset(_LIB32DIR_DEFAULT \"lib32\")\n\t\tif(EXISTS \"/etc/debian_version\")\n\t\t\tif(EXISTS \"/usr/lib/i386-linux-gnu\")\n\t\t\t\tset(_LIB32DIR_DEFAULT \"lib/i386-linux-gnu\")\n\t\t\telseif(EXISTS \"/usr/lib/i686-linux-gnu\")\n\t\t\t\tset(_LIB32DIR_DEFAULT \"lib/i686-linux-gnu\")\n\t\t\telse()\n\t\t\t\tmessage(WARNING \"Could not find correct multiarch 32-bit library path, falling back to 'lib32'.\")\n\t\t\tendif()\n\t\tendif()\n\t\tset(CMAKE_INSTALL_LIB32DIR \"${_LIB32DIR_DEFAULT}\" CACHE PATH \"object code libraries, 32-bit (${_LIB32DIR_DEFAULT})\")\n\tendif()\n\t\n\tmark_as_advanced(CMAKE_INSTALL_LIB32DIR)\n\n\tif(NOT IS_ABSOLUTE ${CMAKE_INSTALL_LIB32DIR})\n\t\tset(CMAKE_INSTALL_FULL_LIB32DIR \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIB32DIR}\")\n\telse()\n\t\tset(CMAKE_INSTALL_FULL_LIB32DIR \"${CMAKE_INSTALL_LIB32DIR}\")\n\tendif()\n\nendif()\n\nif(WITH_GLINJECT)\n\n\tadd_subdirectory(glinject)\n\nendif()\n\nif(WITH_SIMPLESCREENRECORDER)\n\n\tadd_subdirectory(src)\n\tadd_subdirectory(src/translations)\n\n\tif(WITH_OPENGL_RECORDING)\n\t\t# the 'ssr-glinject' script is installed together with the main SSR executable to avoid problems with multiarch packages\n\t\tinstall(\n\t\t\tFILES scripts/ssr-glinject\n\t\t\tDESTINATION ${CMAKE_INSTALL_FULL_BINDIR}\n\t\t\tPERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE\n\t\t)\n\tendif()\n\tinstall(\n\t\tDIRECTORY data/output-profiles\n\t\tDESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/simplescreenrecorder\n\t)\n\tinstall(\n\t\tDIRECTORY data/man/\n\t\tDESTINATION ${CMAKE_INSTALL_FULL_MANDIR}/man1\n\t)\n\tinstall(\n\t\tFILES data/simplescreenrecorder.desktop\n\t\tDESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/applications\n\t)\n\tinstall(\n\t\tFILES data/simplescreenrecorder.metainfo.xml\n\t\tDESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/metainfo\n\t)\n\n\t# icons\n\tset(icons_res 16 22 24 32 48 64 96 128 192 256)\n\n\tforeach(res IN LISTS icons_res)\n\t\tinstall(\n\t\t\tDIRECTORY data/icons/${res}/\n\t\t\tDESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/icons/hicolor/${res}x${res}/apps\n\t\t)\n\tendforeach()\n\n\tinstall(\n\t\tDIRECTORY data/icons/scalable/\n\t\tDESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/icons/hicolor/scalable/apps\n\t)\n\nendif()\n\nfeature_summary(WHAT ALL FATAL_ON_MISSING_REQUIRED_PACKAGES)\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.580078125,
          "content": "SimpleScreenRecorder\n====================\n\nSimpleScreenRecorder is a screen recorder for Linux. Despite the name, this program is actually quite complex. It's 'simple' in the sense that it's easier to use than ffmpeg/avconv or VLC :).\n\nThere is a separate repository for SimpleScreenRecorder packages:\nhttps://github.com/MaartenBaert/ssr-packages\n\n![Screenshot](data/screenshots/screenshot01.png)\n\nLicense\n-------\n\nGNU GPL v3 - read 'COPYING' for more info.\n\nCompiling\n---------\n\nImportant: If you have already installed SSR using the package manager of your distribution, you should uninstall it first before continuing!\n\nFirst install the required dependencies (see below). After you have done that, you can compile and install SSR by running:\n\n    ./simple-build-and-install\n\nIn order to use OpenGL recording for 32-bit applications on a 64-bit system, you need to compile a 32-bit version of `libssr-glinject.so`. The script will do this automatically if your system is 64-bit. Unfortunately some distributions (older versions of Debian, Ubuntu, Linux Mint, ...) don't properly support compiling 32-bit libraries on a 64-bit system, which results in errors related to missing libraries (usually libGL, libGLU) even when those libraries have in fact been installed. The problem is caused by the fact that the required symlinks are included in the `-dev` packages, but the 32-bit `-dev` packages can't be installed. The simplest solution is to skip compilation of the 32-bit GLInject library, which can be done by running:\n\n    ENABLE_32BIT_GLINJECT=FALSE ./simple-build-and-install\n\nYou can then use SSR without the 32-bit library, or you can use the precompiled 32-bit library provided by your distribution.\n\nIf you actually want to compile the 32-bit library, you have to manually create the missing symlinks in the 32-bit library directory:\n\n    cd /usr/lib/i386-linux-gnu\n    sudo ln -s libGLU.so.1 libGLU.so\n    sudo ldconfig\n\nThe OpenGL library `libGL.so` is a special case, because on some distributions (Ubuntu, Linux Mint, ...) it is installed in a different location depending on which driver you are using. If your distribution has installed the file `libGL.so.1` in the regular 32-bit library directory `/usr/lib/i386-linux-gnu` (e.g. Debian), then run this:\n\n    cd /usr/lib/i386-linux-gnu\n    sudo ln -s libGL.so.1 libGL.so\n    sudo ldconfig\n\nOtherwise you need to figure out where the library is installed first, and then manually create symlinks from the regular 32-bit library folder to this file. Note that doing this may interfere with OpenGL functionality if you ever switch to a different driver, or even just update the driver (in the case of NVIDIA). In that case you will need to manually remove the symlinks and (optionally) recreate them.\n\nIf you are using a combination of open-source and proprietary drivers (e.g. for laptops with Intel + NVIDIA GPUs a.k.a. 'Optimus'), follow only the steps for the open-source drivers.\n\nIf you are using one of the open-source drivers (i915, radeon, nouveau), then run this:\n\n    cd /usr/lib/i386-linux-gnu\n    sudo ln -s libGL.so.1 mesa/libGL.so\n    sudo ln -s mesa/libGL.so libGL.so\n    sudo ln -s mesa/libGL.so.1 libGL.so.1\n\nIf you are using the proprietary AMD driver, first figure out where the fglrx directory is located, this can be `/usr/lib32` or `/usr/lib/i386-linux-gnu`. Then go to the relevant folder and create the symlinks:\n\n    cd /usr/lib/i386-linux-gnu\n    sudo ln -s libGL.so.1 fglrx/libGL.so\n    sudo ln -s fglrx/libGL.so libGL.so\n    sudo ln -s fglrx/libGL.so.1 libGL.so.1\n\nIf you are using the proprietary NVIDIA driver, first figure out where the fglrx directory is located, this can be `/usr/lib32` or `/usr/lib/i386-linux-gnu`. Then go to the relevant folder and create the symlinks:\n\n    cd /usr/lib/i386-linux-gnu\n    sudo ln -s libGL.so.1 nvidia*/libGL.so\n    sudo ln -s nvidia*/libGL.so libGL.so\n    sudo ln -s nvidia*/libGL.so.1 libGL.so.1\n\nNote that the full name of the 'nvidia' subdirectory includes the driver version number, so you will need to fix these symlinks whenever the driver has been updated.\n\nIf you want to compile step-by-step (without `simple-build-and-install`), you can use the following steps:\n\n    mkdir build-release\n    cd build-release\n    cmake -DCMAKE_INSTALL_PREFIX=\"/usr\" -DCMAKE_BUILD_TYPE=Release ..\n    make\n    sudo make install\n\nNote that you may need to specify additional options depending on which Linux distribution and CPU architecture you have. The `simple-build-and-install` script detects the correct options automatically, you can run it to see which options you need.\n\nYou don't need to install the program to use it, but installing will give you a desktop entry and an icon. Also, if you don't install the program, you will need to specify where the GLInject libraries are located with `LD_LIBRARY_PATH` when using OpenGL recording.\n\nCompilation issues\n------------------\n\nMost of these issues are avoided when using `simple-build-and-install`, but you may run into them if you run `cmake` directly.\n\n### FFmpeg vs Libav confusion\n\nLibav is a fork of FFmpeg that was created in 2011 as a result of a conflict between the developers. Some Linux distributions (including Debian and Ubuntu) switched to Libav because the package maintainers were among the Libav developers, while others stuck to FFmpeg. In order to deal with this situation, SSR supports both FFmpeg and Libav. In 2015 Debian and Ubuntu decided to switch back to FFmpeg for technical reasons, which means that these days very few SSR users are still using Libav. Although Libav is theoretically still supported by SSR, I am no longer doing any testing with it. As of 2020 Libav is effectively no longer being developed, so Libav support may be dropped entirely at some point in the future.\n\nSince the FFmpeg and Libav APIs have changed significantly over time, SSR checks which version of the libraries is being used to determine which features are safe to use. Although the FFmpeg and Libav API are almost identical, there are some minor differences, mostly related to the version numbering scheme. Unfortunately SSR can not determine automatically whether you are using FFmpeg or Libav, so you have to specify this manually when running `cmake`, using the `ENABLE_FFMPEG_VERSIONS` option, which defaults to `TRUE` (i.e. FFmpeg). If you are using Libav, you should add the option `ENABLE_FFMPEG_VERSIONS=FALSE`. If you forget this, you will likely get various error messages during compilation related to missing functions, structures or fields.\n\nYou can check whether you are using FFmpeg or Libav by running the following command:\n\n    grep \"This file is part of\" `pkg-config --variable=includedir libavcodec`/libavcodec/avcodec.h\n\nThis command should print either `This file is part of FFmpeg` or `This file is part of Libav`.\n\n### Qt 4 MOC bug\n\nWhen compiling with Qt 4 on some newer distributions, you may get the following error message from AutoMoc:\n\n    [...]/ssr/src/Global.h:52: Parse error at \"defined\"\n\nThis is caused by a [Qt bug](https://bugreports.qt.io/browse/QTBUG-22829) which has been fixed in Qt 5, but has not been backported. The file path reported in the error message is wrong, the actual problem is triggered by line 52 in `/usr/include/sys/sysmacros.h`. To work around the bug, add the following option when running `cmake`:\n\n    cmake [...] -DCMAKE_AUTOMOC_MOC_OPTIONS=\"-D_SYS_SYSMACROS_H_OUTER\"\n\nAlternatively, if your distribution provides Qt 5 packages, you can also use these instead. For Debian and Ubuntu, you would do this by installing `qt5-qmake`, `qtbase5-dev` and `libqt5x11extras5-dev`. The `simple-build-and-install` script will detect and use these automatically. If you run `cmake` yourself, you should add the option `-DWITH_QT5=TRUE` to use Qt 5 instead of Qt 4.\n\nBuild dependencies\n------------------\n\nYou will need the following packages to compile SimpleScreenRecorder:\n\n- GCC (>= 4.6)\n- cmake\n- pkg-config\n- Qt4 (4.8 or newer) or Qt5 (5.7 or newer)\n- ffmpeg or libav (libavformat, libavcodec, libavutil, libswscale)\n- ALSA library\n- PulseAudio library (optional, disable with -DWITH_PULSEAUDIO=FALSE)\n- JACK library (optional, disable with -DWITH_JACK=FALSE)\n- libGL (32 and 64 bit)\n- libGLU (32 and 64 bit)\n- libX11 (32 and 64 bit)\n- libXfixes (32 and 64 bit)\n- libXext\n- libXi\n- libxinerama\n- video4linux2 (V4L2) library\n\nIf you have a 64-bit system and you want to compile the 32-bit GLInject library, you have to install some 32-bit libraries as well. Otherwise the regular packages are sufficient.\n\n### Debian / Ubuntu\n\nFor newer versions (with Qt5):\n\n    sudo apt-get install build-essential cmake pkg-config desktop-file-utils libgl1-mesa-dev libglu1-mesa-dev \\\n    qt5-qmake qttools5-dev qtbase5-dev libqt5x11extras5-dev libavformat-dev libavcodec-dev libavutil-dev \\\n    libswscale-dev libasound2-dev libpulse-dev libjack-dev libx11-dev libxext-dev libxfixes-dev libxi-dev \\\n    libxinerama-dev libv4l-dev\n\nFor older versions (with Qt4):\n\n    sudo apt-get install build-essential cmake3 pkg-config desktop-file-utils libgl1-mesa-dev libglu1-mesa-dev \\\n    qt4-qmake libqt4-dev libavformat-dev libavcodec-dev libavutil-dev libswscale-dev libasound2-dev libpulse-dev \\\n    libjack-dev libx11-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libv4l-dev\n\nExtra dependencies for 32-bit GLInject on 64-bit systems:\n\n    sudo dpkg --add-architecture i386\n    sudo apt-get update\n    sudo apt-get install g++-multilib libgl1-mesa-dev:i386 libglu1-mesa-dev:i386 libx11-dev:i386 libxfixes-dev:i386\n\nNote: Debian <= 7 and Ubuntu <= 14.04 are affected by Debian bug #689088 (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=689088), which makes it impossible to install the 32-bit and 64-bit libGL/libGLU development packages at the same time. You should use the following command instead:\n\n    sudo apt-get install g++-multilib libglu1-mesa:i386 libx11-dev:i386 libxfixes-dev:i386\n\nNext you should apply the workarounds described in the 'compiling' section.\n\n### OpenSUSE\n\nThis list is incomplete but usually sufficient:\n\n    sudo zypper install gcc libffmpeg-devel libqt4-devel libpulse-devel libjack-devel \\\n    glu-devel libX11-devel libXext-devel libXfixes-devel libXi-devel\n\nSome packages (e.g. ffmpeg) are not in the official repository, but can be installed from the [Packman repository](http://packman.links2linux.org/). You can add the Packman repository with this command:\n\n    zypper addrepo -f http://ftp.gwdg.de/pub/linux/packman/suse/12.3/ packman\n\nExtra dependencies for 32-bit GLInject on 64-bit systems:\n\n    sudo zypper install gcc-32bit libstdc++47-devel-32bit glu-devel-32bit libX11-devel-32bit libXext-devel-32bit libXfixes-devel-32bit\n\n### Fedora\n\n    sudo yum install qt4 qt4-devel ffmpeg-devel alsa-lib-devel pulseaudio-libs-devel jack-audio-connection-kit-devel \\\n    make gcc gcc-c++ mesa-libGL-devel mesa-libGLU-devel libX11-devel libXext-devel libXfixes-devel\n\nSome packages (e.g. ffmpeg) are not in the official repository, but can be installed from the [RPM Fusion](http://rpmfusion.org/) repository.  You can add the RPM Fusion repository with this command:\n\n    rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm \\\n    http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n\nExtra dependencies for 32-bit GLInject on 64-bit systems:\n\n    sudo yum install glibc-devel.i686 libgcc.i686 mesa-libGL-devel.i686 mesa-libGLU-devel.i686 \\\n    libX11-devel.i686 libXext-devel.i686 libXfixes-devel.i686\n\nOther files you may want to read\n--------------------------------\n\nnotes.txt contains notes about the design of the program. It's a good idea read this first if you want to make changes to the code.\n\ntodo.txt contains a list of things that I still need to do. This file changes a lot of course.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "glinject",
          "type": "tree",
          "content": null
        },
        {
          "name": "notes.txt",
          "type": "blob",
          "size": 10.6181640625,
          "content": "In this text file I keep notes about design decisions and issues I came across while writing this program, so I don't make the same mistakes twice. This should also make it easier to understand the code later.\n\n#### Keep the front-end and back-end completely separated ####\n\nThe front-end (GUI) calls the back-end, not the other way around. This way the front-end can easily be replaced with something else (e.g. command-line). The back-end can use Qt Core classes like QString and QThread, but not GUI classes.\n\nLogging is done with the 'Logger' class. This should become an abstract class, in order to make it easier to show log results in different places (e.g. stderr for the command-line interface, and a text area for the GUI).\n\n#### Back-end design ####\n\nThe back-end uses a 'push' pipeline design. Classes push their results to the next stage, and the next stage doesn't need to know where these results came from (only where they are supposed to go). This makes it very easy to use the same output class with different input classes. It should also be possible to use the same input class with different output classes by making the output class abstract, but I haven't done this yet because it wasn't needed so far. A push design is a better idea than a pull design in this case, because it makes switching inputs while recording trivial.\n\nThe pipeline:\n\n+---------------+                            +--------------+\n|   X11Input    |      +--------------+      |              |      +-------+\n|      or       | ---> |              | ===> | VideoEncoder | ===> |       |\n| GLInjectInput |      |              |      |              |      |       |\n+---------------+      | Synchronizer |      +--------------+      | Muxer |\n|               |      |              |      |              |      |       |\n|   ALSAInput   | ---> |              | ===> | AudioEncoder | ===> |       |\n|               |      +--------------+      |              |      +-------+\n+---------------+                            +--------------+\n\n\"--->\" means the result is sent to the next stage and processed immediately.\n\"===>\" means the result is stored in a queue, and will be processed by the next stage later.\n\n- X11Input: Captures the screen, or a part of it. Originally I used the 'x11grab' device from libav/ffmpeg, but this added overhead and was less flexible.\n\n- GLInjectInput: Captures frames from an OpenGL program (which was launched with GLInjectLauncher).\n\n- ALSAInput: Records audio using ALSA. Real PulseAudio support would be nice too (not a priority though).\n\n- Synchronizer: Synchronizes audio and video based on the timestamps of the frames. This class is needed even if there is no audio, because it still has to translate the timestamps to 'pts' values (which are not the same). I've hijacked the AVFrame::pkt_dts field to store the timestamps because it wasn't used (and because I want to avoid confusion with AVFrame::pts which has a very different meaning). The synchronizer drops or inserts frames of video/audio to make sure both have the same length. The synchronizer also stitches together separate segments (when the recording is paused and resumed later). This is more complex than it sounds, trust me :). The synchronizer will also do sample format conversions if needed.\n\n- VideoEncoder/AudioEncoder: Encodes the video/audio frames and generates packets. Inherits BaseEncoder. All the hard work is done by libav/ffmpeg, this is basically a wrapper.\n\n- Muxer: Combines video and audio packets with the required metadata and writes it to a file. Again, all the hard work is done by libav/ffmpeg.\n\n#### How to use libav/ffmpeg ####\n\nLibav/ffmpeg is very confusing and the documentation doesn't really help either. It took a long time to figure out how it all works. The list below describes how I *think* libav/ffmpeg should be used. Note that the order of the function calls is very important. For example, calling avcodec_close before av_write_trailer appears to cause segfaults inside libav/ffmpeg.\n\nCreate muxer:\n- av_guess_format: get AVOutputFormat pointer\n- avformat_alloc_context: get format context\n- avio_open: open output file\n\nCreate encoders:\n- avcodec_find_encoder_by_name: get AVCodec pointer\n- avformat_new_stream: create stream for codec\n- avcodec_open2: open codec\n\nStart muxer:\n- avformat_write_header: write the header\n\nActual encoding (flushing is optional):\n- avcodec_encode_video2/avcodec_encode_audio2: encode a frame\n- av_interleaved_write_frame: write a packet (i.e. a frame)\n\nStop muxer:\n- av_write_trailer: write the trailer and free internal data\n\nDestroy encoders:\n- avcodec_close: close codec\n\nDestroy muxer:\n- avio_close: close output file\n- av_freep(formatcontext->stream[i]->codec): free codec context\n- av_freep(formatcontext->stream[i]): free stream\n- av_free(formatcontext): free format context\n\n#### Multithreading ####\n\nWhen you write a multithreaded application, you have to think about deadlocks. A simple and reliable way to avoid deadlocks is to give all mutexes a strict (partial) order, and only ever lock them in that order (the order of unlocking is irrelevant but is usually the reverse of the order of locking). This is automatically accomplished by using a 'push' pipeline design where each class only has pointers to successive stages, because this makes it impossible to lock mutexes in the wrong order, as long as all mutexes are private and locks are never held after a function call returns.\n\nThere's one exception in my pipeline: Muxer has a pointer to VideoEncoder/AudioEncoder which it uses to tell them to stop, and to delete them. This seems to be unavoidable because of the design of libav/ffmpeg. Special care has to be taken here to avoid deadlocks: BaseEncoder::Stop and 'delete BaseEncoder' are called while no locks in Muxer are held by the thread.\n\nThere's also an issue that's not very well documented: just using volatile is not enough to guarantee correct behaviour. The 'volatile' keyword is meant to stop some compiler optimisations, not to ensure correct multithreaded behaviour. Some of the problems with 'volatile':\n- It only synchronizes access between two volatile variables, not between a volatile and a normal one. So in order to synchronize multiple variables correctly, you would have to make them ALL volatile, which makes things slow and is simply impossible for STL containers. The solution is to use mutexes instead. Apparently volatile is not even needed here because compilers should be smart enough to understand what mutexes do.\n- For lock-free variables (i.e. flags like 'should_finish', 'should_stop', 'error_occurred', ...), volatile will indeed stop compiler optimisations, and even if synchronization with other variables isn't a problem, it is still possible that the CPU itself will reorder memory accesses, or that memory operations won't be visible to other CPU cores because of memory caching issues. This can only be fixed by inserting memory fences (which is also done by mutexes). C++11 provides these in the <atomic> header.\n\n#### OpenGL recording ####\n\nOpenGL recording is usually called 'GLInject' in the code. It consists of three parts:\n\n- A small library that is injected into the program that will be recorded. The library overrides some system functions (most importantly glXSwapBuffers) so it can capture the frames before they are displayed on the screen. It should be relatively easy to draw extra things using OpenGL (such as the frame rate), but the program doesn't do that right now. Frames are sent to the main program using shared memory.\n\n- The GLInjectLauncher class, which creates the shared memory circular buffer that is used for communication with the injected library. It can also launch the program that will be recorded, or alternatively just print the command to do so.\n\n- The GLInjectInput class, which reads frames from the shared memory circular buffer, scales them to the correct output size, flips them vertically (because OpenGL returns images upside-down), and sends them to the synchronizer. The timestamp is also read from shared memory, which is more accurate than using the time the frame was received.\n\n#### Video corruption ####\n\nIf the video is corrupted after some change to the back-end, check the timestamps. In most of the cases I've seen, the muxer was simply messing up the interleaving of the video and audio frames. The typical result is video that starts fine, then gets corrupted, and then freezes after a few seconds.\n\nVideo can also get corrupted if the frame rate is too low (like 1 fps). This may be a problem with the player though, I'm not sure.\n\n#### Dealing with old versions of libav/ffmpeg ####\n\nThis is very annoying. Libav/ffmpeg likes to change its API a lot. The API is usually backwards compatible, but the old functions often have some disadvantages. So for now I'm supporting both old and new versions of the API, based on the preprocessor definitions from the libav/ffmpeg headers.\n\nLibav/ffmpeg has a very useful document that keeps track of all API changes, it's located in 'doc/APIchanges'. The best way to find out how the old API actually worked is to search for the commit that removed the function (just search for the function name), go back one commit, go to the corresponding tree, and look at the example code (e.g. output-example.c for libavformat).\n\n#### GUI ####\n\nThe GUI uses a wizard-like layout to show all the settings, rather than separate settings windows. This makes all settings immediately visible, so you're less likely to waste an hour of time because you forgot to turn on the microphone, for example. It also means all settings are easily discoverable. Yes, it means the user has to press 'continue' a few times. But I assume that many of these settings will be changed very often, if not every time. Opening separate windows to change settings, or just to check if they are still correct, would take a far more time.\n\n#### Capturing hotkeys ####\n\nCapturing key presses system-wide is a lot more annoying than I expected. I'm using XGrabKey because this appears to be the right way to do it. But with this function you can't capture all keys, apparently. Function keys are blocked. Ubuntu 12.04 only blocked function keys with no modifiers (and since X considers Num Lock a modifier, it wasn't really blocking anything), but Xubuntu 12.10 appears to block them completely. So for now I'm just relying on the letter keys.\n\nAn unexpected but useful side-effect of XGrabKey is that will capture key presses *without* sending the actual key press to the program that you are recording (or any other program actually). This means conflicts are less likely - instead of choosing a hotkey that isn't used by anything, the user can now simply choose any hotkey that he doesn't currently need. And how often do you really *need* something like Ctrl+R to use a program?\n"
        },
        {
          "name": "postinstall",
          "type": "blob",
          "size": 0.3818359375,
          "content": "#!/bin/bash\n# You should run this (as root) after installation/uninstallation to make sure the libraries, desktop entry and icon will be found.\n\nset -e\ncd \"$( dirname \"${BASH_SOURCE[0]}\" )\"\n\nif [ x\"$( whoami )\" != x\"root\" ]; then\n\techo \"Error: postinstall should be run as root\"\n\texit 1\nfi\n\nldconfig\nupdate-desktop-database -q\ngtk-update-icon-cache -q -t -f /usr/share/icons/hicolor || true\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple-build-and-install",
          "type": "blob",
          "size": 4.068359375,
          "content": "#!/bin/bash\n# Run this if you just want to build and install the program and you don't care about all the details.\n# Any additional arguments will be passed on to 'cmake'.\n# The following environment variables can be set to TRUE or FALSE to override the auto-detected values:\n#  - ENABLE_32BIT_GLINJECT\n#  - ENABLE_X86_ASM\n#  - ENABLE_FFMPEG_VERSIONS\n#  - WITH_QT5\n#  - WITH_GLINJECT\n\nset -e\ncd \"$( dirname \"${BASH_SOURCE[0]}\" )\"\n\nif [ x\"$( whoami )\" = x\"root\" ]; then\n\techo \"Error: don't run this script as root, this will mess up file permissions\"\n\texit 1\nfi\n\nexport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/local/lib64/pkgconfig:/usr/local/lib/pkgconfig\"\n\nif [ -z \"$ENABLE_32BIT_GLINJECT\" ] || [ -z \"$ENABLE_X86_ASM\" ] || [ -z \"$WITH_GLINJECT\" ]; then\n\techo \"Detecting architecture ...\"\n\tcase \"$( uname -m )\" in\n\t\t\"i386\"|\"i486\"|\"i586\"|\"i686\")\n\t\t\t: ${ENABLE_32BIT_GLINJECT:=\"FALSE\"}\n\t\t\t: ${ENABLE_X86_ASM:=\"TRUE\"}\n\t\t\t: ${WITH_GLINJECT:=\"TRUE\"}\n\t\t\t;;\n\t\t\"x86_64\")\n\t\t\t: ${ENABLE_32BIT_GLINJECT:=\"TRUE\"}\n\t\t\t: ${ENABLE_X86_ASM:=\"TRUE\"}\n\t\t\t: ${WITH_GLINJECT:=\"TRUE\"}\n\t\t\t;;\n\t\t*)\n\t\t\t: ${ENABLE_32BIT_GLINJECT:=\"FALSE\"}\n\t\t\t: ${ENABLE_X86_ASM:=\"FALSE\"}\n\t\t\t: ${WITH_GLINJECT:=\"FALSE\"}\n\t\t\t;;\n\tesac\nfi\n\nif [ -z \"$ENABLE_FFMPEG_VERSIONS\" ]; then\n\techo \"Detecting ffmpeg/libav ...\"\n\tif ! pkg-config --exists libavcodec; then\n\t\techo \"  Error: libavcodec development package not found, make sure ffmpeg or libav development packages are installed.\"\n\t\texit 1\n\tfi\n\tLIBAVCODEC_INCLUDE_DIR=\"$( pkg-config --variable=includedir libavcodec )\"\n\tHAS_FFMPEG=$( grep -c \"This file is part of FFmpeg.\" $LIBAVCODEC_INCLUDE_DIR/libavcodec/avcodec.h || true )\n\tHAS_LIBAV=$( grep -c \"This file is part of Libav.\" $LIBAVCODEC_INCLUDE_DIR/libavcodec/avcodec.h || true )\n\tif [ $HAS_FFMPEG -gt 0 ]; then\n\t\tif [ $HAS_LIBAV -gt 0 ]; then\n\t\t\techo \"  Error: Detected ffmpeg AND libav, this should not happen!\"\n\t\t\texit 1\n\t\telse\n\t\t\techo \"  Detected ffmpeg.\"\n\t\t\tENABLE_FFMPEG_VERSIONS=\"TRUE\"\n\t\tfi\n\telse\n\t\tif [ $HAS_LIBAV -gt 0 ]; then\n\t\t\techo \"  Detected libav.\"\n\t\t\tENABLE_FFMPEG_VERSIONS=\"FALSE\"\n\t\telse\n\t\t\techo \"  Error: Detection failed.\"\n\t\t\texit 1\n\t\tfi\n\tfi\nfi\n\nif [ -z \"$WITH_QT5\" ]; then\n\techo \"Detecting Qt version ...\"\n\tif pkg-config --exists \"Qt5Gui >= 5.7\"; then\n\t\techo \"  Detected Qt5 (version $( pkg-config --modversion Qt5Gui )).\"\n\t\tWITH_QT5=\"TRUE\"\n\telif pkg-config --exists \"QtGui >= 4.8\"; then\n\t\techo \"  Detected Qt4 (version $( pkg-config --modversion QtGui )).\"\n\t\tWITH_QT5=\"FALSE\"\n\telse\n\t\techo \"  Error: Qt development package not found, make sure that either Qt4 (4.8 or newer) or Qt5 (5.7 or newer) is installed.\"\n\t\texit 1\n\tfi\nfi\n\necho \"Auto-detected options:\"\necho \"  ENABLE_32BIT_GLINJECT = $ENABLE_32BIT_GLINJECT\"\necho \"  ENABLE_X86_ASM = $ENABLE_X86_ASM\"\necho \"  ENABLE_FFMPEG_VERSIONS = $ENABLE_FFMPEG_VERSIONS\"\necho \"  WITH_QT5 = $WITH_QT5\"\necho \"  WITH_GLINJECT = $WITH_GLINJECT\"\n\nPREFIX=\"/usr\"\n\nOPTIONS=()\nOPTIONS+=(\"-DENABLE_32BIT_GLINJECT=$ENABLE_32BIT_GLINJECT\")\nOPTIONS+=(\"-DENABLE_X86_ASM=$ENABLE_X86_ASM\")\nOPTIONS+=(\"-DENABLE_FFMPEG_VERSIONS=$ENABLE_FFMPEG_VERSIONS\")\nOPTIONS+=(\"-DWITH_QT5=$WITH_QT5\")\nOPTIONS+=(\"-DWITH_GLINJECT=$WITH_GLINJECT\")\n\nif [ x\"$WITH_QT5\" == x\"TRUE\" ]; then\n\texport QT_SELECT=\"qt5\"\nelse\n\texport QT_SELECT=\"qt4\"\n\tOPTIONS+=(\"-DCMAKE_AUTOMOC_MOC_OPTIONS=-D_SYS_SYSMACROS_H_OUTER\")\nfi\n\necho \"Entering build-release directory ...\"\nrm -rf build-release\nmkdir build-release\ncd build-release\n\necho \"Running cmake ...\"\ncmake -DCMAKE_INSTALL_PREFIX=\"$PREFIX\" -DCMAKE_BUILD_TYPE=Release \"${OPTIONS[@]}\" \"$@\" ..\n\necho \"Compiling ...\"\nmake -j \"$( nproc )\"\n\nif [ x\"$WITH_GLINJECT\" == x\"TRUE\" ]; then\n\techo \"Removing old GLInject libraries ...\"\n\tsudo rm -f \"/usr/lib/libssr-glinject.\"*\n\tsudo rm -f \"/usr/lib64/libssr-glinject.\"*\n\tsudo rm -f \"/usr/lib/x86_64-linux-gnu/libssr-glinject.\"*\n\tif [ x\"$ENABLE_32BIT_GLINJECT\" == x\"TRUE\" ]; then\n\t\tsudo rm -f \"/usr/lib32/libssr-glinject.\"*\n\t\tsudo rm -f \"/usr/lib/i386-linux-gnu/libssr-glinject.\"*\n\t\tsudo rm -f \"/usr/lib/i686-linux-gnu/libssr-glinject.\"*\n\tfi\nfi\n\necho \"Installing ...\"\nsudo make install\n\necho \"Leaving build-release directory ...\"\ncd ..\n\necho \"Running post-install script ...\"\nsudo ./postinstall\n\necho \"Done.\"\n"
        },
        {
          "name": "simple-uninstall",
          "type": "blob",
          "size": 0.5185546875,
          "content": "#!/bin/bash\n# Run this if you used 'simple-build-and-install' and you want to uninstall the program again.\n\nset -e\ncd \"$( dirname \"${BASH_SOURCE[0]}\" )\"\n\nif [ x\"$( whoami )\" = x\"root\" ]; then\n\techo \"Error: don't run this script as root, this will mess up file permissions\"\n\texit 1\nfi\n\necho \"Entering build-release directory ...\"\ncd build-release\n\necho \"Uninstalling ...\"\nsudo xargs rm < install_manifest.txt\n\necho \"Leaving build-release directory ...\"\ncd ..\n\necho \"Running post-install script ...\"\nsudo ./postinstall\n\necho \"Done.\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "todo.txt",
          "type": "blob",
          "size": 1.220703125,
          "content": "Testing:\n- New GLInject implementation.\n- Refactored output backend.\n- Input + output profiles.\n\nIn progress:\n\nTodo:\n- Highlight mouse clicks (optional) [https://github.com/MaartenBaert/ssr/issues/10]\n- Command-line options for recording + skipping pages + systray.\n- Multiple audio inputs/outputs.\n- X11Input should track resolution changes.\n- Show recorded area while recording.\n- Check disk space (Muxer).\n- Record active monitor [https://github.com/MaartenBaert/ssr/issues/337]\n- Add shadowplay-like functionality\n\nWishlist:\n- Improve interface for small screens.\n- FPS counter of GLInject. (overlay + option to record?)\n- Built-in re-encoding after recording.\n- clean up Global.h\n- Easier GLInject application selection (as an alternative to entering the command).\n- Timelapse recording, i.e. recording at a slow speed but playing it back faster (without sound obviously).\n- Cursor highlighting.\n- Webcam support (V4L2 input)\n\nNot sure yet:\n- Fixed cursor position when using 'follow cursor'?\n- redesigned interface? (https://github.com/swick/glc2/issues/1)\n- audio effects (equalizer, noise gate, duck)?\n- if possible, force fixed size on OpenGL applications? (optional of course)\n- Planar sample/pixel formats for inputs (source/sink). (why?)\n"
        }
      ]
    }
  ]
}