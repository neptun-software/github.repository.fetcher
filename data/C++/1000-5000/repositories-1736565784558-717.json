{
  "metadata": {
    "timestamp": 1736565784558,
    "page": 717,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PanosK92/SpartanEngine",
      "stars": 2276,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2275390625,
          "content": "# top-most EditorConfig file\nroot = true\n\n# use 4 spaces as indentation\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nforce_editorconfig_settings = true\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.9755859375,
          "content": "# Ensure LF line endings in the repository and proper handling on checkouts\n* text=auto\n\n# C++ source and header files\n*.cpp text diff=cpp\n*.h text diff=cpp\n*.hpp text diff=cpp\n*.cxx text diff=cpp\n*.cc text diff=cpp\n\n# Treat project files that are often not merge-friendly as binary to avoid merge conflicts\n*.sln binary\n*.vcxproj binary\n*.vcproj binary\n*.proj binary\n*.projitems binary\n*.filters binary\n\n# Treat build scripts and cmake configs as text\n*.bat text eol=crlf\n*.sh text eol=lf\nCMakeLists.txt text\n*.cmake text\n\n# Image files are treated as binary to prevent corruption\n*.png binary\n*.jpg binary\n*.jpeg binary\n*.gif binary\n*.ico binary\n\n# Documentation and other text formats should have normalized line endings\n*.md text\n*.txt text\n*.rtf text\n\n# Lock binary files to avoid line ending modifications\n*.exe binary\n*.dll binary\n*.so binary\n*.lib binary\n*.obj binary\n*.o binary\n\n# Ensure that diffs for certain types of files are handled correctly\n*.json text diff=json\n*.xml text diff=xml\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.0048828125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.sln\n*.vcxproj\n*.vcxproj.filters\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.VC.opendb\n*.VC.db\n/Binaries\n/third_party/libraries/*.lib\n/third_party/libraries/*.dll\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin \n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n\n.vscode/\n\n# Rider IDE config dir\n.idea/\n/third_party/libraries/libraries.7z\n/assets\n/assets\n/build_scripts/__pycache__/file_utilities.cpython-312.pyc\n"
        },
        {
          "name": "build_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "code_of_conduct.md",
          "type": "blob",
          "size": 1.697265625,
          "content": "# Code of Conduct\n\n## Purpose\n\nThis Code of Conduct outlines our expectations for participation within the **Spartan Engine** community, as well as steps for addressing unacceptable behavior.\n\n## Expected Behavior:\n\n1. **Be Respectful.** Treat everyone with respect. Avoid demeaning, discriminatory, or harassing behavior and speech.\n2. **Be Considerate.** Your work will be used by other people. In turn, you'll depend on the work of others. Any decision you take will affect users and colleagues, so take those consequences into account.\n3. **Offer Constructive Feedback.** Give helpful and constructive criticism. Avoid destructive and negative feedback.\n\n## Unacceptable Behavior:\n\n1. **Harassment.** Including, but not limited to: harmful or prejudicial verbal or written comments related to gender, sexual orientation, race, religion, disability; inappropriate use of nudity, sexual images, and unwarranted sexual attention or advances; cyberstalking or following; sustained disruption of discussions.\n2. **Trolling or Insults.** Comments intended to belittle, insult, or troll others.\n3. **Personal or Political Attacks.** Respect that people have differences of opinion and avoid personal or political attacks.\n4. **Public or Private Harassment.** Harassment is not tolerated in any form.\n\n## Reporting and Enforcement:\n\n1. **If you are the subject of or witness any violations of this Code of Conduct**, please contact the project maintainer at [panosconroe@hotmail.com](mailto:panosconroe@hotmail.com).\n2. **If a community member engages in unacceptable behavior**, the project maintainers may take any action they deem appropriate, up to and including a temporary ban or permanent expulsion from the community without warning.\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 4.1904296875,
          "content": "# Why do it\nThe goal is to see you evolve beyond the version of yourself who initially started contributing here.\nBy engaging with this project, you can gain knowledge, forge connections, or even secure job opportunities (Discord).\nThis platform offers you the freedom to explore, experiment, and excel. Make the most of it and see how far you can go.\n\n# How to do it\n- Starting small: If it's your first time contributing, pick a small task and go through the process of cloning, working, and submitting. This will give you an idea of the workflow, the scale of the project, and maybe even how to have fun while doing it.\n- Task complexity: The bigger the task you choose, the higher the probability that you'll end up dropping it due to complexity, scale, or boredom. You might even feel stressed, which is the wrong way to go about it. If you are in this place, remember that I have zero expectations.\n- Your priorities: Your first priority should be to have fun. Secondly, prioritize practical action over extensive theorizing. For instance, spending four hours discussing a task that could be completed in 30 minutes is inefficient.\n- Workflow overview: The workflow is: clone/fork, work, submit a pull request.\n\n# Pull Request (PR) Guidelines\n- Functionality: Ensure your PR is functional. While it can be incomplete, the code it introduces should be operational.\n- Collaboration restrictions: Other contributors generally can't modify your PR directly. Hence, non-functional PRs can obstruct the project's progress.\n- Iterative improvements: It's okay for your PR to be a part of a larger task. Incremental, functional changes are encouraged.\n- Communication: If you're looking for collaboration on your PR, communicate this in your PR description or through our Discord community.\n\n# What to do\n- Check out the [issues](https://github.com/PanosK92/SpartanEngine/issues) section. I regularly open issues myself to keep track of them and also for others to tackle them.\n- You can also [join our Discord server](https://discord.gg/TG5r2BS), a growing community of 300+ members, where you can ask for ideas on what to contribute.\n- Another great approach is to simply run the engine, see what doesn't work or could be improved.\n\n# Coding style\n\n## General advice\n- Try to adhere to the [KISS](https://en.wikipedia.org/wiki/KISS_principle) principle whenever possible. A term coined by the lead engineer of the SR-71 Blackbird.\n- Avoid [defensive programming](https://en.wikipedia.org/wiki/Defensive_programming). Instead, use asserts everywhere (offensive). If an assert pops up, it should be fixed ASAP.\n- If **auto** is used, the type must be deducible at a glance. Long iterator types can also be replaced with auto.\n- Choose the right tool for the job. Refrain from dogmas like \"Only use orthodox C++\" or \"Only use modern C++\".\n- You can use tabs or spaces. The project will replace all tabs with 4 spaces to maintain a consistent look across IDEs.\n- Use comments, but if you can name your code well enough that it doesn't need comments, that's ideal.\n- If a class doesn't need multiple instances, make it static. Don't invite unnecessary complexity.\n- With massive and complex projects like this, simplicity is your friend, observe the image below.\n\n<img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/simplicity.jpg\"/>\n\n## Naming\nVariables should be named using the snake_case naming convention.\n```\nbool name_like_this;\n```\nIt's closer to natural language and easier for our brains to read.\n\n## Alignment\nWhen you are initializing a lot of variables, try to align them in a symmetrical manner, like so:\n```\nm_matrix       = Matrix::Identity;\nm_matrix_local = Matrix::Identity;\nm_parent       = nullptr;\n```\nA Visual Studio extension that automatically aligns like this can be found [here](https://marketplace.visualstudio.com/items?itemName=cpmcgrath.Codealignment).\n\n## If statements\nIf statements should have their brackets in their own individual lines.\n```\nif (condition)\n{\n    // code\n}\n```\nThe only exception is the early exit if statements, which can have no brackets, like so:\n```\nif (condition)\n    return\n```\n## Const correctness\nTry to use const for function parameters, if needed. But don't worry too much about const correctness.\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "funding.yml",
          "type": "blob",
          "size": 0.341796875,
          "content": "# These are supported funding model platforms\ngithub: [PanosK92]\npatreon: # Replace with a single Patreon username\nopen_collective: # Replace with a single Open Collective username\nko_fi: # Replace with a single Ko-fi username\ntidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel\ncustom: # Replace with a custom link\n"
        },
        {
          "name": "generate_gmake2_vulkan.py",
          "type": "blob",
          "size": 0.26171875,
          "content": "import os\nimport subprocess\nimport sys\n# change working directory to script directory\nos.chdir(os.path.dirname(__file__))\n# run script\nsubprocess.Popen(\"python3 build_scripts/generate_project_files.py gmake2 vulkan_linux\", shell=True).communicate()\n# exit\nsys.exit(0)\n"
        },
        {
          "name": "generate_vs2022_d3d12.py",
          "type": "blob",
          "size": 0.3466796875,
          "content": "import os\nimport subprocess\nimport sys\nfrom pathlib import Path\n\ndef main():\n    script_dir = Path(__file__).parent\n    os.chdir(script_dir)\n\n    script = script_dir / \"build_scripts\" / \"generate_project_files.py\"\n    subprocess.Popen([sys.executable, str(script), \"vs2022\", \"d3d12\"]).communicate()\n\n    sys.exit(0)\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "generate_vs2022_vulkan.py",
          "type": "blob",
          "size": 0.3544921875,
          "content": "import os\nimport subprocess\nimport sys\nfrom pathlib import Path\n\ndef main():\n    script_dir = Path(__file__).parent\n    os.chdir(script_dir)\n\n    script = script_dir / \"build_scripts\" / \"generate_project_files.py\"\n    subprocess.Popen([sys.executable, str(script), \"vs2022\", \"vulkan_windows\"]).communicate()\n    sys.exit(0)\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License\n\nCopyright(c) 2016-2025 Panos Karabelas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and / or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions :\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 7.4833984375,
          "content": "\n<img align=\"center\" padding=\"2\" src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/data/textures/banner.bmp\"/>\n\n<p>Spartan Engine is one of the most advanced one-man game engines out there, pushing the limits of real-time approaches. What started as a portfolio project has evolved into a cutting-edge project for developers to explore, learn, and contribute. This isn't an engine for the average user, it's designed for advanced research and experimentation, ideal for industry veterans looking to experiment, not to build a game (yet). With a thriving Discord community of over 440 members, including industry veterans, and contribution perks that you won't believe when you see, it's one of the most unique projects you'll come across.</p>\n\n- <img align=\"left\" width=\"32\" src=\"https://i.pinimg.com/736x/99/65/5e/99655e9fe24eb0a7ea38de683cedb735.jpg\"/>For occasional updates regarding the project's development, you can follow me on <a href=\"https://twitter.com/panoskarabelas1?ref_src=twsrc%5Etfw\">X</a>.\n  \n- <img align=\"left\" width=\"32\" height=\"32\" src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/discord.png\">For a community like no other, join our group of 400+ members on [discord](https://discord.gg/TG5r2BS).\n  \n- <img align=\"left\" width=\"32\" height=\"32\" src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/github.png\">For issues and anything directly related to the project, feel free to open an issue.\n  \n- <img align=\"left\" width=\"32\" height=\"32\" src=\"https://i0.wp.com/opensource.org/wp-content/uploads/2023/01/cropped-cropped-OSI_Horizontal_Logo_0-e1674081292667.png\">Please adhere to the <a href=\"https://en.wikipedia.org/wiki/MIT_License\">MIT license</a>. You're free to copy the code, provided you include the original license.\n  \n#### Status\n\n![build_status](https://github.com/PanosK92/SpartanEngine/actions/workflows/workflow.yml/badge.svg)\n[![Discord](https://img.shields.io/discord/677302405263785986?logo=discord&label=Discord&color=5865F2&logoColor=white)](https://discord.gg/TG5r2BS)\n\n# Media\n\n| Video: Livestream of FSR 2 integration | Video: The engine and the community |\n|:-:|:-:|\n|[![Image1](https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/readme_1.4.jpg)](https://www.youtube.com/watch?v=QhyMal6RY7M) | [![Image2](https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/video_promo.png)](https://www.youtube.com/watch?v=TMZ0epSVwCk)\n\n# Worlds\n\n<img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_forest.png\"/>\n<img align=\"left\" width=\"450\" src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_selection_4.png\"/>\n\nUpon launching the engine, you'll be greeted with a selection of default worlds to load. Each world is physics-enabled, allowing you to walk around, pick objects using your mouse, and even drive a car. These worlds are designed to offer a diverse and enjoyable experience  \n<br clear=\"left\"/>\n\n| Sponza | Forest |\n|:-:|:-:|\n| <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_sponza.png\"/><br>The Sponza building, found in Dubrovnik, is showcased here with a true-to-life scale. | <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_forest.png\"/><br>A height map-generated forest featuring water bodies amidst tens of thousands of trees and plants, all set in a walkable terrain. |\n| Car | Doom |\n| <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_car.png\"/><br>A drivable car implemented with a highly realistic tire friction formula, simulation of gearbox, anti-roll bar, and more | <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_doom.png\"/><br>This is a simple scene with the soundtrack from E1M1 |\n| Bistro | Minecraft |\n| <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_bistro.jpg\"/><br>Amazon Lumberyard Bistro | <img src=\"https://raw.githubusercontent.com/PanosK92/SpartanEngine/master/.github/images/world_minecraft.jpg\"/><br>A good old minecraft world |\n\n# Features\n\n#### Rendering\n\n- Cutting edge Vulkan renderer.\n- 128-byte push constant buffer for lightning fast CPU to GPU data transfer.\n- On the fly single dispatch GPU-based mip generation for render targets (FidelityFX SPD).\n- On the fly compression and mip generation for material textures (FidelityFX Compressonator).\n- Fully bindless design (materials, lights, even the samplers).\n- Fast dual paraboloid point lights.\n- Vulkan (main) and DirectX 12 (wip) backends with universal HLSL shaders.\n- Unified deferred rendering with transparency (BSDF with same render path).\n- Atmospheric scattering, real-time filtering and image-based lighting.\n- Real-time global illumination (FidelityFX Brixelizer GI).\n- Screen space shadows (Bend Studio's Days Gone).\n- Screen space ambient occlusion.\n- Screen space reflections (FidelityFX SSSR).\n- Variable rate shading.\n- Dynamic resolution scaling.\n- Upscaling (FidelityFX FSR 3.1).\n- Temporal anti-aliasing.\n- Breadcrumbs for tracing GPU crashes on AMD (FidelityFX Breadcrumbs).\n- Advanced shadow features with penumbra and colored translucency.\n- Physical light units (intensity from lumens and color from kelvin).\n- Frustum & occlusion culling (software and hardware hybrid).\n- Physically based camera.\n- Volumetric fog.\n- HDR10 output.\n- Post-process effects like fxaa, bloom, motion-blur, depth of field, chromatic aberration etc.\n\n#### General\n\n- One-click project generation for easy setup.\n- Universal input support, keyboard & mouse, controllers (tested a PS5 controller) and steering wheels.\n- Comprehensive physics features.\n- CPU & GPU profiling.\n- XML support for data handling.\n- Thread pool that can consume any workload.\n- Entity-component, event systems and most things you'll expect to find in a modern engine.\n- Wide file format support: 10+ for fonts, 20+ for audio, 30+ for images, and 40+ for models.\n\n# Wiki\n\nThe [wiki](https://github.com/PanosK92/SpartanEngine/wiki/Wiki) can answer most of your questions, here are some of it's contents:\n\n- [Compiling](https://github.com/PanosK92/SpartanEngine/wiki/Compiling)\n- [Contributing](https://github.com/PanosK92/SpartanEngine/blob/master/contributing.md)\n- [Perks of a contributor](https://github.com/PanosK92/SpartanEngine/wiki/Perks-of-a-contributor)\n\n# Interesting facts\n\n- This engine started as a way to learn and enrich my portfolio while I was a university student, circa 2014, represeting over a decade of non-stop development.\n- It's one of the most rewarding projects in terms of the perks you receive should you become a contributor, more [here](https://github.com/PanosK92/SpartanEngine/wiki/Perks-of-a-contributor).\n\n# Use cases\n\nAre you utilizing any components from the Spartan Engine, or has it inspired aspects of your work? If yes, then reach out to me, I'd love to showcase your project.\n\n- Godot uses Spartan's TAA, see [here](https://github.com/godotengine/godot/blob/37d51d2cb7f6e47bef8329887e9e1740a914dc4e/servers/rendering/renderer_rd/shaders/effects/taa_resolve.glsl#L2)\n- Stalker Anomaly has an addon which enchances rendering based on Spartan's source [here](https://www.moddb.com/mods/stalker-anomaly/addons/screen-space-shaders)\n- Jesse Guerrero, a contributor, wrote a [book](https://www.amazon.com/dp/B0CXG1CMNK?ref_=cm_sw_r_cp_ud_dp_A14WVAH86VH407JE95MG_1) on beginning programming, showcasing Spartan's code, Discord community and the leadership within it.\n"
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}