{
  "metadata": {
    "timestamp": 1736565661361,
    "page": 556,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "baidu/AnyQ",
      "stars": 2590,
      "defaultBranch": "master",
      "files": [
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.5458984375,
          "content": "# Contributors should be added to this file in the following format:\n# Name or Organization <email address>\n\nBaidu.com, Inc.\n\n# Initial version authors:\nPang Chao <pangchao04@baidu.com>\nSun Yu <sunyu02@baidu.com>\nTang Jiji <tangjiji@baidu.com>\nWu Yuchuan <wuyuchuan@baidu.com>\nYin Weichong <yinweichong@baidu.com>\nZeng Gang <zenggang@baidu.com>\nZhang Han <zhanghan17@baidu.com>\nZhang Xiyuan <zhangxiyuan01@baidu.com>\n\n# Partial list of contributors:\nDing Xinzhe <dingxinzhe@baidu.com>\nHuang Wenzhi <huangwenzhi@baidu.com>\nZhu Pengfei <zhupengfei01@baidu.com>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.478515625,
          "content": "cmake_minimum_required(VERSION 3.0)\nproject(ANYQ C CXX)\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    # require at least gcc 4.8\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)\n        message(FATAL_ERROR \"GCC is too old, please install a newer version supporting C++11\")\n    endif()\nelse()\n    message(WARNING \"You are using an unsupported compiler! Compilation has only been tested with GCC.\")\nendif()\n\nSET(THIRD_PARTY_PATH \"${CMAKE_BINARY_DIR}/third_party\" CACHE STRING\n  \"A path setting third party libraries download & build directories.\")\nSET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n\noption(USE_TENSORFLOW \"use tensorflow rather than paddle\" OFF)\n\nif(USE_TENSORFLOW)\n    set(TENSORFLOW_TAG \"-DUSE_TENSORFLOW\")\n    set(TENSORFLOW_INC ${THIRD_PARTY_PATH}/include/tf)\n    LIST(APPEND TENSORFLOW_LIB \"${THIRD_PARTY_PATH}/lib/libtensorflow_cc.so\" \"${THIRD_PARTY_PATH}/lib/libtensorflow_framework.so\")\nelse()\n    set(TENSORFLOW_TAG \"\")\n    set(TENSORFLOW_INC \"\")\n    set(TENSORFLOW_LIB \"\")\nendif()\n\nSET(PROTOC_BIN \"${THIRD_PARTY_PATH}/bin/protoc\")\nSET(PROTO_SRC ${CMAKE_SOURCE_DIR}/src/config)\nSET(PROTO_INC ${CMAKE_SOURCE_DIR}/include/config)\nSET(PROTO_PATH ${CMAKE_SOURCE_DIR}/proto)\nexecute_process(COMMAND mkdir -p ${PROTO_SRC})\nexecute_process(COMMAND mkdir -p ${PROTO_INC})\n\ninclude(external/zlib)\ninclude(external/curl)\ninclude(external/protobuf)\ninclude(external/glog)\ninclude(external/gflags)\ninclude(external/gtest)\ninclude(external/boost)\ninclude(external/jsoncpp)\ninclude(external/leveldb)\ninclude(external/openssl)\ninclude(external/brpc)\ninclude(external/xgboost)\ninclude(external/eigen)\ninclude(external/paddle)\ninclude(external/lac)\ninclude(proto_build)\n\nif(USE_TENSORFLOW)\n    include(external/jdk)\n    include(external/bazel)\n    include(external/tensorflow)\nendif()\n\ninclude_directories(\n    ${CMAKE_SOURCE_DIR}/include/\n    ${CMAKE_SOURCE_DIR}/include/config\n    ${THIRD_PARTY_PATH}/include/\n    ${THIRD_PARTY_PATH}/include/eigen\n    ${TENSORFLOW_INC}\n)\n\nlink_directories(\n    ${THIRD_PARTY_PATH}/lib\n)\n\nset(CMAKE_CXX_FLAGS \"-g -pipe -W -Wall -fPIC -std=c++11 -mfpmath=sse -msse -msse2 -msse3 -fopenmp\") \nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wl,-Bsymbolic -rdynamic -zmuldefs\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${TENSORFLOW_TAG}\")\n\nfile(GLOB SRCS \"src/*/*.cpp\" \"src/*/*.cc\" \"src/*/*/*.cpp\" \"src/*/*/*.cc\")\n\nfile(GLOB PROTOS \"${PROTO_PATH}/*.proto\")\nforeach(PROTO_FILE ${PROTOS})\n    GET_FILENAME_COMPONENT(FILE_NAME ${PROTO_FILE} NAME_WE)\n    SET(PROTO_CPP ${PROTO_SRC}/${FILE_NAME}.pb.cc)\n    LIST(APPEND SRCS ${PROTO_CPP})\nendforeach()\n\nSET_SOURCE_FILES_PROPERTIES(${SRCS} PROPERTIES GENERATED TRUE)\n\nadd_library(anyq STATIC ${SRCS})\n\nadd_dependencies(anyq \n    extern_curl\n    extern_boost \n    extern_eigen \n    extern_gtest \n    extern_brpc\n    extern_jsoncpp\n    extern_xgboost\n    extern_paddle\n    extern_lac\n    proto_build)\n\nif(USE_TENSORFLOW)\n    add_dependencies(anyq extern_tensorflow)\nendif()\n\nLIST(APPEND LIBS_LIST anyq\n    ${THIRD_PARTY_PATH}/lib/liblac.a\n    ${THIRD_PARTY_PATH}/lib/libpaddle_fluid.so\n    ${TENSORFLOW_LIB}\n    ${THIRD_PARTY_PATH}/lib/libmklml_intel.so\n    ${THIRD_PARTY_PATH}/lib/libiomp5.so\n    ${THIRD_PARTY_PATH}/lib/libbrpc.a\n    ${THIRD_PARTY_PATH}/lib/libgtest.a\n    ${THIRD_PARTY_PATH}/lib/libgtest_main.a\n    ${THIRD_PARTY_PATH}/lib/libcrypto.a\n    ${THIRD_PARTY_PATH}/lib/libleveldb.a\n    ${THIRD_PARTY_PATH}/lib/libssl.a\n    ${THIRD_PARTY_PATH}/lib/libxgboost.a\n    ${THIRD_PARTY_PATH}/lib/libdmlc.a\n    ${THIRD_PARTY_PATH}/lib/librabit.a\n    ${THIRD_PARTY_PATH}/lib/libjsoncpp.a\n    ${THIRD_PARTY_PATH}/lib/libprotobuf-lite.a\n    ${THIRD_PARTY_PATH}/lib/libprotobuf.a\n    ${THIRD_PARTY_PATH}/lib/libprotoc.a\n    ${THIRD_PARTY_PATH}/lib/libgmock.a\n    ${THIRD_PARTY_PATH}/lib/libgmock_main.a\n    ${THIRD_PARTY_PATH}/lib/libglog.so\n    ${THIRD_PARTY_PATH}/lib/libgflags.a\n    ${THIRD_PARTY_PATH}/lib/libcurl.so\n    dl\n    rt\n    ssl\n    crypt\n    crypto\n    z\n    m)\n    \nadd_executable(demo_anyq_multi ${CMAKE_SOURCE_DIR}/demo/demo_anyq_multi.cpp)\nadd_executable(demo_anyq ${CMAKE_SOURCE_DIR}/demo/demo_anyq.cpp)\nadd_executable(run_server ${CMAKE_SOURCE_DIR}/demo/run_server.cpp)\nadd_executable(annoy_index_build_tool ${CMAKE_SOURCE_DIR}/demo/annoy_index_build.cpp)\nadd_executable(feature_dump_tool ${CMAKE_SOURCE_DIR}/demo/feature_dump.cpp)\n\ntarget_link_libraries(demo_anyq_multi ${LIBS_LIST})\ntarget_link_libraries(demo_anyq ${LIBS_LIST})\ntarget_link_libraries(run_server ${LIBS_LIST})\ntarget_link_libraries(annoy_index_build_tool ${LIBS_LIST})\ntarget_link_libraries(feature_dump_tool ${LIBS_LIST})\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0615234375,
          "content": "    Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.EN.md",
          "type": "blob",
          "size": 1.2294921875,
          "content": "# AnyQ\n\nAnyQ(ANswer Your Questions) is a configurable & plugable FAQ-based Question Answering framework. SimNet, a Semantic Matching Framework developed by Baidu-NLP, is also conveyed with AnyQ. \n\nIn our FAQ-based QA framework, which is designed to be configurable and plugable, all the processes or functions are plugins. Developers can easily designed their own processes and add to our framework, so they can quickly build QA system for their own application.  \n\nSimNet, first designed in 2013 by Baidu-NLP, is a flexiable semantic matching framework which is widely used in many applications in Baidu. SimNet consists of the neural network structure BOW、CNN、RNN and MM-DNN. Meanwhile, we have implemented more state-of-the-art structures such as MatchPyramid、MV-LSTM、K-NRM. SimNet has a unified interface, implemented with PaddleFluid and Tensorflow. Models trained using SimNet can be easily added into our AnyQ framework, through which we can augment our semantic matching ability.\n\nThe overall framework of AnyQ is as follows:\n<center>\n<img src=\"./docs/images/AnyQ-Framework.png\" width=\"80%\" height=\"80%\" />\n</center>\n\n## Acknowledgments & Statements\n\nThis work is supported by the National Key R&D Program of China (No.  **2018YFB1004300** ).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.787109375,
          "content": "# AnyQ\n\n**AnyQ(ANswer Your Questions)** 开源项目主要包含面向FAQ集合的问答系统框架、文本语义匹配工具SimNet。</br>\n<br>问答系统框架采用了配置化、插件化的设计，各功能均通过插件形式加入，当前共开放了20+种插件。开发者可以使用AnyQ系统快速构建和定制适用于特定业务场景的FAQ问答系统，并加速迭代和升级。</br>\n<br>SimNet是百度自然语言处理部于2013年自主研发的语义匹配框架，该框架在百度各产品上广泛应用，主要包括BOW、CNN、RNN、MM-DNN等核心网络结构形式，同时基于该框架也集成了学术界主流的语义匹配模型，如MatchPyramid、MV-LSTM、K-NRM等模型。SimNet使用PaddleFluid和Tensorflow实现，可方便实现模型扩展。使用SimNet构建出的模型可以便捷的加入AnyQ系统中，增强AnyQ系统的语义匹配能力</br> ([**English**][10])\n\n\n## 详细介绍\n### **FAQ问答系统框架**\n\nAnyQ系统框架主要由Question Analysis、Retrieval、Matching、Re-Rank等部分组成，框架中包含的功能均通过插件形式加入，如Analysis中的中文切词，Retrieval中的倒排索引、语义索引，Matching中的Jaccard特征、SimNet语义匹配特征，当前共开放了20+种插件。AnyQ系统的配置化、插件化设计有助于开发者快速构建、快速定制适用于特定业务场景的FAQ问答系统，加速迭代和升级。\nAnyQ的框架结构如下图：\n\n<center>\n<img src=\"./docs/images/AnyQ-Framework.png\" width=\"80%\" height=\"80%\" />\n</center>\n\n#### 配置化\nAnyQ系统集成了检索和匹配的众多插件，通过配置的方式生效；以检索方式和文本匹配相似度计算中的插件为例：\n\n* 检索方式(Retrieval)\n    * 倒排索引：基于开源倒排索引Solr，加入百度开源分词\n    * 语义检索：基于SimNet语义表示，使用ANNOY进行ANN检索\n    * 人工干预：通过提供精准答案，控制输出\n* 匹配计算(Matching)\n    *  字面匹配相似度：在对中文问题进行切词等处理之后，计算字面匹配特征\n        * Cosine相似度\n        * Jaccard相似度\n        * BM25\n    *  语义匹配相似度\n        * SimNet语义匹配：使用语义匹配SimNet架构训练的模型，构建问题在语义层面的相似度\n\n#### 插件化\n\n除框架外，AnyQ的所有功能都是通过插件形式加入，用户自定义的插件很容易加到AnyQ系统中，只需实现对应的接口即可，如自定义词典加载、Question分析方法、检索方式、匹配相似度、排序方式等，真正实现可定制和插件化。\n\n\n\n### **文本语义匹配框架SimNet**\n\nSimNet是百度自然语言处理部于2013年自主研发的语义匹配框架，该框架在百度各产品上广泛应用，主要包括BOW、CNN、RNN、MM-DNN等核心网络结构形式，同时基于该框架也集成了学术界主流的语义匹配模型，如MatchPyramid、MV-LSTM、K-NRM等模型。SimNet使用PaddleFluid和Tensorflow实现，可方便实现模型扩展。使用SimNet构建出的模型可以便捷的加入AnyQ系统中，增强AnyQ系统的语义匹配能力。\n\n按照文本语义匹配网络结构, 可将SimNet中实现的网络模型主要分为如下两类：\n\n* Representation-based Models </br>\n  如：BOW, CNN, RNN(LSTM, GRNN) </br>\n  特点：文本匹配任务的两端输入，分别进行表示，之后将表示进行融合计算相似度；\n  \n* Interaction-based Models </br>\n  如：MatchPyramid, MV-LSTM, K-NRM, MM-DNN </br>\n  特点：在得到文本word级别的序列表示之后，根据两个序列表示计算相似度匹配矩阵，融合每个位置上的匹配信息给出最终相似度打分；\n\nSimNet使用PaddleFluid和Tensorflow实现，更多文档请参考：\n\n* [SimNet PaddleFluid](https://github.com/baidu/AnyQ/blob/master/tools/simnet/train/paddle/README.md)\n\n* [SimNet TensorFlow](https://github.com/baidu/AnyQ/blob/master/tools/simnet/train/tf/README.md)\n\n#### **基于海量搜索数据的语义模型**\n\n基于百度海量搜索数据，我们训练了一个SimNet-BOW语义匹配模型，在一些真实的FAQ问答场景中，该模型效果比基于字面的相似度方法AUC提升5%以上，模型使用和获取方法参考[Demo](#demo)。\n\n\n## 代码编译\n\n### Linux\ncmake 3.0以上(推荐3.2.2版本)，g++ >=4.8.2，bison >=3.0\n```\nmkdir build && cd build && cmake .. && make\n```\n### Others\n针对MacOS、Windows等环境，推荐使用docker方式\n```\n# paddle官方镜像\ndocker pull paddlepaddle/paddle:latest-dev\n# paddle国内镜像\ndocker pull hub.baidubce.com/paddlepaddle/paddle:latest-dev\n```\n\n## Demo\n\n构建索引、配置\n```\n# 获取anyq定制solr，anyq示例配置\ncp ../tools/anyq_deps.sh .\nsh anyq_deps.sh\n\n# 启动solr, 依赖python-json, jdk>=1.8\ncp ../tools/solr -rp solr_script\nsh solr_script/anyq_solr.sh solr_script/sample_docs\n\n```\n\n-  **HTTP-Server**\n\n```\n./run_server\n\n# 请求示例：\nhttp:${host}:${port}/anyq?question=XXX\n\n```\n\n- **lib**\n\n```\n./demo_anyq sample_input_json\n```\n\n## 更多文档\n\n* [AnyQ配置详解](https://github.com/baidu/AnyQ/blob/master/docs/config_tutorial.md)\n* [AnyQ如何添加插件](https://github.com/baidu/AnyQ/blob/master/docs/plugin_tutorial.md)\n* [AnyQ使用语义索引](https://github.com/baidu/AnyQ/blob/master/docs/semantic_retrieval_tutorial.md)\n\n## 如何贡献\n* 可以在AnyQ框架下定制特定功能的插件，教程参考[AnyQ如何添加插件](https://github.com/baidu/AnyQ/blob/master/docs/plugin_tutorial.md)\n* 如果觉得自己定制的插件功能足够通用&漂亮，欢迎给我们提交PR\n\n## 致谢和声明\n\n本开源项目受国家重点研发计划“云计算和大数据”专项支持（项目号  2018YFB1004300 ）。\n\n## Copyright and License\n\nAnyQ is provided under the [Apache-2.0 license](https://github.com/baidu/AnyQ/blob/master/LICENSE).\n\n[10]:\tREADME.EN.md\n\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}