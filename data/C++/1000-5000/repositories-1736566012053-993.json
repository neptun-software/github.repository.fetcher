{
  "metadata": {
    "timestamp": 1736566012053,
    "page": 993,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/DirectXTex",
      "stars": 1862,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 2.7919921875,
          "content": "root = true\n\n[*.{fx,fxh,hlsl,hlsli}]\nindent_size = 4\nindent_style = space\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nend_of_line = crlf\ncharset = latin1\ncpp_space_before_function_open_parenthesis = remove\ncpp_space_around_binary_operator = ignore\ncpp_space_pointer_reference_alignment = ignore\n\n[*.{cpp,h,hpp,inl}]\nindent_size = 4\nindent_style = space\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nend_of_line = crlf\ncharset = latin1\ncpp_indent_braces = false\ncpp_indent_multi_line_relative_to = innermost_parenthesis\ncpp_indent_within_parentheses = indent\ncpp_indent_preserve_within_parentheses = false\ncpp_indent_case_contents = true\ncpp_indent_case_labels = false\ncpp_indent_case_contents_when_block = true\ncpp_indent_lambda_braces_when_parameter = true\ncpp_indent_preprocessor = one_left\ncpp_indent_access_specifiers = false\ncpp_indent_namespace_contents = true\ncpp_indent_preserve_comments = true\ncpp_new_line_before_open_brace_namespace = new_line\ncpp_new_line_before_open_brace_type = new_line\ncpp_new_line_before_open_brace_function = new_line\ncpp_new_line_before_open_brace_block = new_line\ncpp_new_line_before_open_brace_lambda = new_line\ncpp_new_line_scope_braces_on_separate_lines = true\ncpp_new_line_close_brace_same_line_empty_type = true\ncpp_new_line_close_brace_same_line_empty_function = true\ncpp_new_line_before_catch = true\ncpp_new_line_before_else = true\ncpp_new_line_before_while_in_do_while = true\ncpp_space_before_function_open_parenthesis = remove\ncpp_space_within_parameter_list_parentheses = false\ncpp_space_between_empty_parameter_list_parentheses = false\ncpp_space_after_keywords_in_control_flow_statements = true\ncpp_space_within_control_flow_statement_parentheses = false\ncpp_space_before_lambda_open_parenthesis = false\ncpp_space_within_cast_parentheses = false\ncpp_space_after_cast_close_parenthesis = false\ncpp_space_within_expression_parentheses = false\ncpp_space_before_initializer_list_open_brace = false\ncpp_space_within_initializer_list_braces = true\ncpp_space_before_open_square_bracket = false\ncpp_space_within_square_brackets = false\ncpp_space_before_empty_square_brackets = false\ncpp_space_between_empty_square_brackets = false\ncpp_space_group_square_brackets = true\ncpp_space_within_lambda_brackets = false\ncpp_space_between_empty_lambda_brackets = false\ncpp_space_before_comma = false\ncpp_space_after_comma = true\ncpp_space_remove_around_member_operators = true\ncpp_space_before_inheritance_colon = true\ncpp_space_before_constructor_colon = true\ncpp_space_remove_before_semicolon = true\ncpp_space_after_semicolon = false\ncpp_space_remove_around_unary_operator = false\ncpp_space_around_binary_operator = ignore\ncpp_space_around_assignment_operator = insert\ncpp_space_pointer_reference_alignment = ignore\ncpp_space_around_ternary_operator = insert\ncpp_wrap_preserve_blocks = one_liners\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.349609375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Explicitly declare code/VS files as CRLF\n*.cpp eol=crlf\n*.cmd eol=crlf\n*.h eol=crlf\n*.hlsl eol=crlf\n*.hlsli eol=crlf\n*.fx eol=crlf\n*.fxh eol=crlf\n*.inc eol=crlf\n*.inl eol=crlf\n*.vcxproj eol=crlf\n*.filters eol=crlf\n*.sln eol=crlf\n\n# Explicitly declare resource files as binary\n*.pdb binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4501953125,
          "content": "*.psess\n*.vsp\n*.log\n*.err\n*.wrn\n*.suo\n*.sdf\n*.user\n*.i\n*.vspscc\n*.opensdf\n*.opendb\n*.ipch\n*.cache\n*.tlog\n*.lastbuildstate\n*.ilk\n*.VC.db\n*.nupkg\n.vs\n[Bb]in\npackages\n/DDSView/Shaders/*.inc\n/DDSView/Shaders/*.pdb\n/DirectXTex/Shaders/Compiled/*.inc\n/DirectXTex/Shaders/Compiled/*.pdb\n/ipch\nDebug\nDurango\nGaming.Xbox.XboxOne.x64\nGaming.Xbox.Scarlett.x64\nGaming.Desktop.x64\nProfile\nRelease\nx64\n/Tests\n/Testing\n/wiki\n/out\n/CMakeUserPresets.json\n/build/vcpkg_installed\n"
        },
        {
          "name": ".nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": ".onefuzz",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "Auxiliary",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 30.4404296875,
          "content": "# DirectXTex texture processing library\n\nhttp://go.microsoft.com/fwlink/?LinkId=248926\n\nRelease available for download on [GitHub](https://github.com/microsoft/DirectXTex/releases)\n\n## Release History\n\n### October 28, 2024\n* All enums now use ``uint32_t`` as the underlying type rather than ``unsigned long`` or ``int``.\n* Added ``BytesPerBlock`` utility helper\n* Fixed bug in DirectX 12 `CaptureTexture` for MSAA resolve state handling\n* texassemble, texconv, texdiag:\n  * Add \"GNU-style\" *--long-options* to the command-line tools (all existing switches are still supported)\n  * Fixed bug in texdiag's ``dumpdds`` command output filename extension handling\n  * Refactored code to use shared header\n* CMake and MSBuild project updates\n\n### September 4, 2024\n* DDS reader now accepts a variant of the \"DX10\" extended header\n  * arraySize of 0 is treated as 1\n* DDS reader will now load legacy 'mixed' channel formats as UNORM\n  * Uses x2bias for the signed channels\n  * `DDSPF_L6V5U5`, `DDSPF_X8L8V8U8`, `DDSPF_A2W10V10U10`\n* texconv: Added `-ignoremips` option to handle some invalid/truncated DDS files\n* EXR auxiliary reader returns 6 images for files with 'envmap' metadata\n* PNG auxiliary reader/writer fixed for single channel images (`DXGI_FORMAT_R8_UNORM`)\n* Xbox auxiliary now has `EncodeDDSHeader` function\n* ScreenGrab9 minor DDS header fix when writing A2W10V10U10 legacy mixed formats\n* CMake project updates including support for ARM64EC\n* Added GitHub Actions YAML files\n\n### June 4, 2024\n* Fix for HDR codec to avoid buffer overread for some malformed files\n* Updated D3DX12 internal copy with latest changes from DirectX-Headers GitHub\n* CMake project updates\n* Retired VS 2019 projects for the UWP platform\n\n### March 6, 2024\n* Xbox Auxiliary tiling/detiling code optimization\n\n### February 21, 2024\n* TGA reader now limited to 4 GB for maximum image size for security hardening\n* Project updates for improved logging of shader compilation errors and GDK validation\n* CMake project updates and refactor\n* Minor code review for Clang, MinGW, and Intel compilers\n* Auxiliary updated with LIBJPEG and LIBPNG implementations for use on WSL which lacks WIC\n* texassemble: new ``from-mips`` command\n* texconv: Updated to support Xbox extension functionality\n\n### December 31, 2023\n* TGA reader bug fix for offset boundary check\n* PPM/PFM reader bug fixes for bounds checking\n* Xbox-specific functionality added to Auxiliary folder\n* CMake project updates including pkg-config file generation\n* Code review\n\n### October 28, 2023\n* New ``DDS_PERMISSIVE_FLAG`` to allow reading of various DDS DX9 file variants\n  * *breaking change* required to accept reading *Unreal Tournament 2004* DDS files\n  * Allows cases where DDS_HEADER size is incorrectly set to 24\n  * Allows cases where DDPIXELFORMAT size is incorrectly set to 24\n  * Allows cases where DDS_HEADER.MipMapCount is set to the wrong value\n* texassemble/texconv/texdiag: ``-flist`` option updated to support filenames with spaces\n* texconv: ``-permissive`` switch added to opt-in use of new flag when reading DDS files\n\n### September 1, 2023\n* ``CompressEx`` and ``ConvertEx`` functions added with status callback and options structs\n* Added optional ``DDSMetaData`` return for Ex versions of DDS loader functions\n* Added ``TEX_ALPHA_WEIGHT_DEFAULT`` constant (set to 1.0)\n* DDS reader updated to support variant used by *Unreal Tournament 2004*\n* Fixed overvalidation bug with BC7 GPU compressor with SRGB formats\n* Retired ARM (32-bit) support for the UWP platform\n* CMake project updates\n\n### June 13, 2023\n* Added ``TEX_FILTER_RGB_COPY_ALPHA`` flag and support for ``DXGI_FORMAT_A4B4G4R4_UNORM``\n* DDS loader now supports 'swizzled' DXT5 variant FourCCs\n* CMake project updates\n* texconv: Added ``-f BC3n``,  ``-f DXT5nm``, and ``-f RXBG`` support; ``.ddx`` file extension; and ``-tgazeroalpha`` switch\n* texassemble/texconv/texdiag: Fix minor display issue with error messages\n* texassemble/texconv/texdiag: Supports Long Paths on Windows 10, Version 1607 or later\n\n### April 28, 2023\n* Updated D3DX12 internal copy with latest changes from DirectX-Headers GitHub\n* CMake project updates and fixes for clang/LLVM v16 warnings\n* texassemble/texconv/texdiag: Windows on ARM64 version\n\n### March 30, 2023\n* Fix for `SRGB_IN` / `SRGB_OUT` flag handling for GPU BC7 compressor\n* Fix to clamp negative values when encoding with the GPU BC6H compressor\n* GPU BC6H/BC7 encoder updated to make optional use of DirectCompute 5.0\n* CMake project updates\n* Code review\n* Retired VS 2017 legacy Xbox One XDK projects\n* texassemble/texconv/texdiag: Updated to support Windows or UNIX-style path separators\n\n### January 31, 2023\n* Fixed memory overwrite bug in **ConvertToSinglePlane** that can lead to a potential security issue for untrusted planar video format DDS files\n* Make sure ScratchImage zero-fills image memory\n* Fix DirectX12 GPU-validation warnings for texture loaders\n* Minor fix for non-Win32 builds\n* ddsview: Updated sample app with a ``-forcesrgb`` command-line switch\n\n### December 15, 2022\n* ARM/ARM64 platform fix for 16bpp pixel conversion\n* Updated D3DX12 internal copy with latest changes from DirectX-Headers GitHub\n* CMake project updated to require 3.20 or later\n* CMake and MSBuild project updates\n* Added Azure Dev Ops Pipeline YAML files\n* ``Auxiliary`` folder added with DirectXEXR.h/.cpp optional module\n* Test suite updated with CTest support\n* Spectre-mitigated libraries added to NuGet packages\n* texassemble: added commands *v-cross-fnz*, *h-tee*, and *cube-from-\\**\n* texconv: Fixed minor printf output issue\n\n### October 17, 2022\n* Minor fix for ``CompileShaders.cmd`` to address additional 'paths with spaces' issues\n* Minor CMake and CMakePresets updates\n* Code review\n\n### July 29, 2022\n* Added ``MakeLinear`` DXGI_FORMAT utility function.\n* *breaking change* ``CreateTextureEx`` and ``CreateShaderResourceViewEx`` functions now use ``CREATETEX_FLAGS`` instead of a ``bool forceSRGB`` parameter.\n* Updates for MinGW ABI fixes for DirectX12 in the latest DirectX-Headers.\n* CMake and MSBuild project updates\n* Code review\n* `DDSTextureLoader11` and ``DDSTextureLoader12`` sync'd up with *DirectX Tool Kit* July 2022 changes.\n\n### May 9, 2022\n* TGA reader updated to support 24-bit paletted uncompressed color-mapped images (used by a DCC application)\n* Added `IsBGR` utility method\n* Workaround for driver issue on some systems using DirectX 11 `Capture` method\n* Fix for problem with resizing/mipmaps generation for HDR content using box/fant filter which should avoid going through WIC code paths\n* Minor updates for VS 2022 (17.2)\n* CMake project updates (now supports MSVC, clang/LLVM, and MinGW)\n* Updated D3DX12 internal copy with latest changes from DirectX-Headers GitHub\n* Retired VS 2017 projects\n* Code cleanup\n* Reformat source using updated .editorconfig settings\n* texconv: Improve `-nmap` handling for 16-bit sources going to BC formats\n\n### March 24, 2022\n* Fixed end-point bounds issue with BC6H CPU compressor if none of the pixels are in 0-1 range\n* Fixed bug in alpha-to-coverage computation\n* Add support for installable WIC codecs for HEIF and WEBP (if present)\n* Update build switches for SDL recommendations\n* CMake project updates and UWP platform CMakePresets\n* Code cleaup for tools\n* Optional C++17 usage in a few places\n\n### February 28, 2022\n* Updated D3DX12 internal copy with latest changes from GitHub\n* Code and project review including fixing clang v13 warnings\n* Added CMakePresets.json\n\n### November 8, 2021\n* VS 2022 support\n* Updated D3DX12 internal copy with latest change from GitHubf\n* Minor code and project review\n* VS 2017 projects updated to require the Windows 10 SDK (19401)\n* texassemble/texconv: Updated with 12.2 for ``-fl`` switch\n* texassemble/texconv/texdiag: Fixed potential locale issue with ``-flist``\n\n### September 28, 2021\n* Minor code and project cleanup\n\n### August 1, 2021\n* Fixed weighting bug in custom linear filtering for wrap/mirroring\n* Added VS 2022 Preview projects\n* texconv: Made default output extension to be lower-case like most Windows applications\n* texconv: updated colorspace rotation names for -rotatecolor switch\n* texassemble, texconv: Order of operations fix for -swizzle using 0, 1\n* Minor code review\n\n### June 9, 2021\n* Minor bug fix for metadata behavior when using ``DDS_FLAGS_NO_16BPP`` flag for B5G6R5 content\n* texdiag: added ``-c`` and ``-t`` switches for diff command\n* texconv: Fixed bug in ``-m`` switch handling when resizing changes the max mipmap count\n* texconv et al: improved ``-flist`` switch to support wildcards and file exclusions\n* texconv et al: Added 'BGR' alias to ``-f`` switch for the B8G8R8X8_UNORM format\n* WICTextureLoader / DDSTextureLoader12 updated to use typed enum bitmask flags for loadFlags parameter\n* Minor code review\n\n### April 6, 2021\n* DDS reader updated to accept nVidia Texture Tool v1 single-channel and dual-channel files marked as RGB instead of LUMINANCE\n* Fixed TGA reader regression with files smaller than 26 bytes total\n* Removed use of ``CreateStreamOnHGlobal``, ``CreateStreamOverRandomAccessStream``, and ``SHCreateMemStream`` for WICToMemory functions\n* Fix for the DirectX 12 ``CaptureTexture`` for reserved and MSAA resources\n* Minor code and project cleanup\n* texassemble: added ``-stripmips`` switch\n* texassemble, texconv: the ``swizzle`` switch now accepts ``0`` and ``1`` values in swizzle masks\n* texconv: added \"709toDisplayP3\" and \"DisplayP3to709\" to ``-rotatecolor`` switch\n* texconv: Fixed ``-reconstructz`` for UNORM formats\n* texassemble, texconv, texdiag: Updated with  descriptions for HRESULT failure codes, and always uses exit code 1 on failure\n\n### January 9, 2021\n* Windows Subsystem for Linux support\n* Code review for improved conformance\n* CMake updated to support package install\n* texassemble: Merge command now supports ``-swizzle`` option\n* texconv: Updated with ``-r:keep`` and ``-swizzle`` options\n\n### November 11, 2020\n* Use ``SHCreateMemStream`` instead of ``CreateStreamOnHGlobal`` for Win32 on Windows 8.x or Windows 10\n* Updated D3DX12 internal copy with latest change from GitHub\n* Minor code and project cleanup\n\n### September 30, 2020\n* Added ``TGA_FLAGS`` [flags](https://github.com/microsoft/DirectXTex/wiki/TGA-I-O-Functions#related-flags) to TGA reader/writer to control RGB vs. BGR, handling for all zero alpha channels, and TGA 2.0 colorspace metadata\n  * TGA reader will now return a ``DXGI_FORMAT_*_SRGB`` format if TGA 2.0 colorspace metadata contains 2.2 or 2.4 gamma\n  * Added forwarders for existing non-flags TGA functions, so there are no breaking changes\n* ``R16_SNORM`` and ``R8_SNORM`` pixel write code updated to round instead of truncate to better match DirectXMath behavior\n* Fixed bug in standalone WICTextureLoader for DX11/DX12 that resulted in ``WINCODEC_ERR_INSUFFICIENTBUFFER`` for some resize requests\n* Added ``Ex`` variants for DDSTextureLoader/WICTextureLoader for DX9 to support loading resources for non-DEFAULT pools\n* Minor code and project cleanup\n\n### August 15, 2020\n* Added ``DDS_FLAGS_ALLOW_LARGE_FILES`` flag for DDS loader to allow textures with dimensions that are too big for Direct3D\n* Added ``FormatDataType`` function\n* Fixed bug with DX12 ``Capture`` with 'small alignment' textures\n* Code review and project updates\n* Added GDK projects\n* texassemble: updated with ``-fl`` switch for feature level based warning\n* texconv: updated with ``-reconstructz`` switch for BC5 compressed normal map view conversion\n\n### July 2, 2020\n* Minor warning fixes for VS 2019 (16.7)\n* CMake updates\n* texassemble: Fixed animated gif handling with transparency\n\n### June 15, 2020\n* Code cleanup for some new VC++ 16.7 warnings and static code analysis\n* texconv: Updated with support for Portable Pix Map (ppm) & Portable Float Map (pfm) file formats\n\n### June 1, 2020\n* Converted to typed enum bitmask flags (see release notes for details on this potential *breaking change*)\n  + **ComputePitch**, **xxxDDSxxx**, **xxxWICxxx**, **FlipRotate**, **Resize**, **Convert**, **GenerateMipMaps**, **GenerateMipMaps3D**, **PremultiplyAlpha**, **Compress**, **ComputeNormalMap**, **CopyRectangle**, **ComputeMSE**\n* ``WIC_FLAGS_DEFAULT_SRGB`` / ``WIC_LOADER_SRGB_DEFAULT`` flag added when loading image via WIC without explicit colorspace metadata\n*  WIC loader for  ``PNG`` codec now checks ``gAMA`` chunk to determine colorspace if the ``sRGB`` chunk is not found for legacy sRGB detection.\n* Fixed conformance issues when using ``/Zc:preprocessor``\n* CMake project updates\n\n### May 10, 2020\n* HDR (RGBE Radiance) file format writer updated to accept half16 input\n* Code cleanup\n* Updated D3DX12 internal copy to Windows 10 SDK (19041) version\n* texassemble, texconv, texdiag: Updated with ``-l`` switch for case-sensitive file systems\n* texconv: Added ``-dx9`` switch to force legacy compatible DDS files\n* texconv: Collapsed ``-bcuniform``, ``-bcdither``, ``-bcquick``, and ``-bcmax`` into one ``-bc`` switch\n* Updates to **DDSTextureLoader**, **ScreenGrab**, and **WICTextureLoader** including new DX9 version\n\n### April 3, 2020\n* Updated D3DX12 internal copy to latest version\n* DDS loader updated for another BC7 FourCC variant\n* Code review (``constexpr`` / ``noexcept`` usage)\n* CMake updated for PCH usage with 3.16 or later\n\n### February 14, 2020\n* Fixed quality bug in BC4S/BC5S compressor\n* Guard for divide-by-zero case in **PremultiplyAlpha**\n* texconv: added ``-at`` switch for alpha threshold value with BC1 compression\n* texconv: Fixed ``-nmap`` when outputting compressed UNORM formats\n* Code and project cleaup\n* Retired VS 2015 projects\n\n### December 17, 2019\n* Added ARM64 platform to VS 2019 Win32 desktop Win10 project\n* Updated CMake project\n* Code cleaup\n\n### October 17, 2019\n* Codec readers updated to return ``TEX_ALPHA_MODE_OPAQUE`` if reader returned an alpha channel due to conversion\n* Added DDS reader support for 'non-standard' BC6H/BC7 FourCC codes used by nVidia texture tools\n* TGA codec updated for TGA 2.0\n* Minor code review\n* Updated ScreenGrab module\n* texconv: Added ``-fixbc4x4switch``\n\n### August 21, 2019\n* Updated D3DX12 internal copy to latest version\n* Added texassemble, texconv, and texdiag to CMake project\n* Code cleanup\n\n### June 30, 2019\n* Additional validation for Direct3D 11 texture loaders\n* Clang/LLVM warning cleanup\n* Renamed ``DirectXTex_Windows10.vcxproj`` to ``_Windows10_2017.vcxproj``\n* Added VS 2019 UWP project\n\n### May 30, 2019\n* Regenerated shaders using Windows 10 April 2019 Update SDK (18362)\n* Added CMake project files\n* Code cleanup\n\n### April 26, 2019\n* Added VS 2019 desktop projects\n* Code cleanup for texture loaders\n* Officially dropped Windows Vista support\n* Minor code cleanup\n\n### February 7, 2019\n* Added **ScaleMipMapsAlphaForCoverage** function to the library\n* WIC Writer now has two new flags: ``WIC_FLAGS_FORCE_SRGB`` and ``WIC_FLAGS_FORCE_LINEAR``\n* texassemble: added ``array-strip`` command\n* texconv: added ``-inverty``, ``-keepcoverage`` switches\n\n### November 16, 2018\n* VS 2017 updated for Windows 10 October 2018 Update SDK (17763)\n* ARM64 platform configurations added to UWP projects\n\n### October 25, 2018\n* Use UTF-8 instead of ANSI for narrow strings\n* Updated D3DX12 internal copy to latest version\n* Minor code cleanup\n\n### August 17, 2018\n* Fixed problem loading legacy DDS files containing FOURCC pixel formats with ``ALPHAPIXELS`` also set\n* Fixed ``FlipRotate`` bug when doing 180 degree rotation\n* Updated for VS 2017 15.8\n\n### August 5, 2018\n* Improved support and validation for 16k textures (requires x64 native)\n* ``ComputePitch`` now returns an HRESULT\n* Fix BC7 GPU shaders on WARP device\n\n### July 3, 2018\n* BC7 CPU codec fix for 3subsets/``-bcmax`` and minor optimization\n* BC7 GPU codec quantize fix and pbit optimization\n* BC6H CPU codec bounds checking fix\n* Code and project cleanup\n\n### May 31, 2018\n* Fix for **IsAlphaAllOpaque** for 'near opaque' values\n* VS 2017 updated for Windows 10 April 2018 Update SDK (17134)\n\n### May 11, 2018\n* Workaround for WIC issue doing FP32->FP16 conversions\n* Updated for VS 2017 15.7 update warnings\n* Code and project cleanup\n* Retired VS 2013 projects\n\n### April 23, 2018\n* Code cleanup\n* texconv: Updated with support reading \"Extended BMP\" files using DXTn\n* texconv: Updated to handle non-power-of-2 volume textures with mipmaps\n* texassemble, texconv, texdiag: support format name aliases like DXT3, RGBA, BGRA, FP16, etc. in addition to truncated ``DXGI_FORMAT_`` values\n\n### February 9, 2018\n* HDR (RGBE Radiance) file format reader updated to support ``#?RGBE`` signature\n* texconv: Added ``-rotatecolor`` and ``-nits`` switches\n* texassemble: Added merge and gif commands\n* texdiag: added dumpdds command\n\n### February 7, 2018\n* Fixed bug with GPU BC7 encoding (mode 1, fixup 6)\n* Updated for a few more VS 2017 warnings\n* Code cleanup\n\n### December 13, 2017\n* Updated for VS 2017 15.5 update warnings\n* Support building library with ``_XM_NO_XMVECTOR_OVERLOADS_``\n* Code cleanup\n\n### November 1, 2017\n* VS 2017 updated for Windows 10 Fall Creators Update SDK (16299)\n\n### September 22, 2017\n* Updated for VS 2017 15.3 update ``/permissive-`` changes\n* WIC writer and ScreenGrab updated to use non-sRGB metadata for PNG\n* texassemble, texconv, texdiag: added ``-flist`` option\n\n### July 26, 2017\n* Support for reading non-standard DDS files written by nVidia Texture Tools (NVTT)\n* Fix for **ComputeMSE** when using ``CMSE_IMAGE2_X2_BIAS``\n* Fix for WIC writer then codec target format requires a palette\n* Code cleanup\n\n### April 24, 2017\n* VS 2017 project updates\n* Regenerated shaders using Windows 10 Creators Update SDK (15063)\n* Updated D3DX12 internal copy to latest version\n\n### April 7, 2017\n* VS 2017 updated for Windows Creators Update SDK (15063)\n* texassemble: ``-tonemap`` switch\n* texconv: ``-wicmulti`` switch\n\n### January 31, 2017\n* DirectX 12 versions of **IsSupported**, **CreateTexture** (PrepareUpload), and **CaptureTexture**\n* Update to DirectX 11 version of **IsSupported**\n* WIC format 40bppCMYKAlpha should be converted to RGBA8 rather than RGBA16\n* DDS support for L8A8 with bit-count 8 rather than 16\n* ``DXGI_FORMAT_R32G8X24_TYPELESS`` and ``DXGI_FORMAT_R24G8_TYPELESS`` should be IsDepthStencil formats\n* Updates to DDSTextureLoader, ScreenGrab, and WICTextureLoader\n* Minor code cleanup\n\n### December 5, 2016\n* Fixed over-validation in DDS header parsing\n* VS 2017 RC projects added\n* Minor code cleanup\n\n### October 5, 2016\n* *breaking change* Renamed Evaluate to **EvaluateImage**, Transform to **TransformImage**\n* texdiag: new command-line tool for texture debugging\n* texconv: ``-bcmax``, ``-bcquick``, ``-tonemap``, and ``-x2bias`` switches\n* texconv: overwrite writing and ``-y`` switch\n* texconv/texassemble: optional OpenEXR support\n* texassemble: command syntax with support for generating strip and cross images from cubemap\n* Updates to DDSTextureLoader, WICTextureLoader, and ScreenGrab\n* Minor code cleanup\n\n### September 14, 2016\n* [HDR (RGBE Radiance)](https://en.wikipedia.org/wiki/RGBE_image_format) file format reader and writer\n* **Evaluate** and **Transform** functions for computing user-defined functions on images\n* Fix BC6H GPU shaders on WARP device\n* Fix for alignment issues on ARM devices in software compression codec\n* Added ``TEX_THRESHOLD_DEFAULT`` (0.5f) constant default alpha threshold value for Convert & Compress\n* Minor **CaptureTexture** optimization\n* texconv/texassemble: Support for .hdr file format\n* texconv: added ``-gpu`` switch to specify adapter to use for GPU-based compression codecs\n* texconv: added ``-badtails`` switch to enable loading of legacy DXTn DDS files with incomplete mipchain tails\n* texconv: added ``-c`` switch for old-school colorkey/chromakey transparency to alpha conversion\n* texconv: added ``-alpha`` switch for reverse premultiply along with ``TEX_PMALPHA_REVERSE`` flag\n* texconv: added wildcard support for input filename and optional ``-r`` switch for recursive search\n\n### August 4, 2016\n* ``CompileShader`` script updated to build external pdbs\n* Regenerated shaders using Windows 10 Anniversary Update SDK (14393)\n\n### August 2, 2016\n* Updated for VS 2015 Update 3 and Windows 10 SDK (14393)\n\n### August 1, 2016\n* Workaround for bug in XMStoreFloat3SE (impacts conversions to ``DXGI_FORMAT_R9G9B9E5_SHAREDEXP``)\n* **DDSTextureLoader12**, **WICTextureLoader12**, and **ScreenGrab12** for Direct3D 12 support\n* Minor code cleanup\n\n### June 27, 2016\n* texconv command-line tool ``-wicq`` and ``-wiclossless`` switches\n* Code cleanup\n\n### April 26, 2016\n* Optional callback from WIC reader functions to query additional metadata\n* Retired obsolete adapter code\n* Minor code cleanup\n\n### February 23, 2016\n* Fix to clean up partial or zero-length image files on failed write\n* Retired VS 2012 projects\n\n### November 30, 2015\n* texconv command-line tool ``-fl`` switch now supports 12.0 and 12.1 feature levels\n* Updated for VS 2015 Update 1 and Windows 10 SDK (10586)\n\n### October 30, 2015\n* DDS support for legacy bumpmap formats (V8U8, Q8W8V8U8, V16U16)\n* Fix for buffer overread in BC CPU compressor\n* Minor code cleanup\n\n### August 18, 2015\n* Added **GetWICFactory** and **SetWICFactory**\n* Updates for new DXGI 1.3 types\n* Xbox One platform updates\n\n### July 29, 2015\n* Fixed rounding problem with 32-bit RGBA/BGRA format conversions\n* texconv: use CPU parallel compression for BC1-BC5 (``-singleproc`` disables)\n* Updated for VS 2015 and Windows 10 SDK RTM\n* Retired VS 2010 and Windows 8.0 Store projects\n\n### June 18, 2015\n* New ``BC_FLAGS_USE_3SUBSETS`` option for BC7 compressors; now defaults to skipping 3 subset blocks\n* Fixed bug with **MakeTypeless** and ``A8_UNORM``\n* Fixed file length validation problem in **LoadDDSFromFile**\n\n### March 27, 2015\n* Added projects for Windows apps Technical Preview\n* Fixed bug with WIC-based mipmap generation for non-WIC supported formats\n* Fixed bug with WIC multiframe loader when resizing required\n* texconv: Added ``-nmap``/``-nmapamp`` for generating normal maps from height maps\n* texconv/texassemble: Updated to load multiframe WIC files (tiff, gif)\n* Minor code cleanup\n\n### November 24, 2014\n* Updates for Visual Studio 2015 Technical Preview\n* Minor code cleanup\n\n### September 22, 2014\n* Format conversion improvements and bug fixes (depth/stencil, alpha-only, float16, RGB -> 1 channel)\n* Fixed issue when BC decompressing non-standard compressed rowPitch images\n* Explicit calling-convention annotation for all 'public' functions\n* Code cleanup\n* Xbox One platform updates\n\n### July 15, 2014\n* texconv command-line tool fixes\n* Fixed problem with 'wide' images with CPU **Compress**\n* Updates to Xbox One platform support\n\n### April 3, 2014\n* Windows phone 8.1 platform support\n\n### February 24, 2014\n* Direct3D 11 video and Xbox One extended format support\n* New APIs: **IsPlanar**, **IsPalettized**, **IsDepthStencil**, **ConvertToSinglePlane**\n* Added 'alphaWeight' parameter to GPU **Compress** *breaking change*\n* texconv ``-aw`` switch to control the alpha weighting for the BC7 GPU compressor\n* Fixed bug with ordered dithering in non-WIC conversion codepaths\n* Fixed **SaveToDDSxxx** functions when using arbitrary row pitch values\n\n### January 24, 2014\n* Added sRGB flags for **Compress** (``TEX_COMPRESS_SRGB*``)\n* Added 'compress' flag parameter to GPU versions of **Compress** *breaking change*\n* Minor fix for potential rounding problem in GPU **Compress**\n* Code cleanup (removed ``DXGI_1_2_FORMATS`` control define; ``ScopedObject`` typedef removed)\n* Dropped VS 2010 support without the Windows 8.1 SDK (removed ``USE_XNAMATH`` control define)\n\n### December 24, 2013\n* texconv updated with ``-fl`` and ``-pow2`` command-line switches\n* Fixed bug in **Resize** when doing custom filtering which occurred when exactly doubling the image size\n* Added move operators to **ScratchImage** and **Blob** classes\n* Xbox One platform support\n\n### October 21, 2013\n* Updated for Visual Studio 2013 and Windows 8.1 SDK RTM\n* **PremultiplyAlpha** updated with new 'flags' parameter and to use sRGB correct blending\n* Fixed colorspace conversion issue with DirectCompute compressor when compressing for BC7 SRGB\n\n### August 13, 2013\n* DirectCompute 4.0 BC6H/BC7 compressor integration\n* texconv utility uses DirectCompute compression by default for BC6H/BC7, ``-nogpu`` disables use of DirectCompute\n\n### August 1, 2013\n* Support for BC compression/decompression of non-power-of-2 mipmapped textures\n* Fixes for BC6H / BC7 codecs to better match published standard\n* Fix for BC4 / BC5 codecs when compressing RGB images\n* Minor fix for the BC1-3 codec\n* New optional flags for **ComputeMSE** to compare UNORM vs. SNORM images\n* New WIC loading flag added to control use of WIC metadata to return sRGB vs. non-sRGB formats\n* Code cleanup and /analyze fixes\n* Project file cleanup\n* texconv utility uses parallel BC compression by default for BC6H/BC7, ``-singleproc`` disables multithreaded behavior\n\n### July 1, 2013\n* VS 2013 Preview projects added\n* SaveToWIC functions updated with new optional ``setCustomProps`` parameter\n\n### June 15, 2013\n* Custom filtering implementation for **Resize** & **GenerateMipMaps(3D)** - Point, Box, Linear, Cubic, and Triangle\n  + ``TEX_FILTER_TRIANGLE`` finite low-pass triangle filter\n  + ``TEX_FILTER_WRAP``, ``TEX_FILTER_MIRROR`` texture semantics for custom filtering\n  + ``TEX_FILTER_BOX`` alias for ``TEX_FILTER_FANT WIC``\n* Ordered and error diffusion dithering for non-WIC conversion\n* sRGB gamma correct custom filtering and conversion\n* ``DDS_FLAGS_EXPAND_LUMINANCE`` - Reader conversion option for L8, L16, and A8L8 legacy DDS files\n* Added use of WIC metadata for sRGB pixel formats\n* Added **BitsPerColor** utility function\n* Fixed **Convert** threshold parameter usage\n* Non-power-of-2 volume map support, fixed bug with non-square volume maps\n* texconv utility update with ``-xlum``, ``-wrap``, and ``-mirror`` options; reworked ``-if`` options for improved dithering\n* texassemble utility for creating cubemaps, volume maps, and texture arrays\n* DDSTextureLoader and WICTextureLoader sync'd with DirectXTK versions\n\n### April 16, 2013\n* Updated alpha-mode metadata details in .DDS files\n* Added new control flags for **Convert**\n* Added new optional flags for **ComputeMSE**\n* Fixed conversion handling for sRGB formats\n* Fixed internal routines for handling ``R10G10B10_XR_BIAS_A2_UNORM``, ``R9G9B9E5_SHAREDEXP``, and ``FORMAT_R1_UNORM``\n* Fixed WIC I/O for ``GUID_WICPixelFormat32bppRGBE``4 pixel format files (HD Photo)\n* Fixed non-square image handling in **GenerateMipMaps3D**\n* Fixed some error handling in the DDS load code\n\n### March 22, 2013\n* Supports reading and writing alpha-mode (straight, premultiplied, etc.) metadata in .DDS files\n* Added build option to use WICCreateImagingFactory_Proxy instead of ``CoCreateInstance`` to obtain WIC factory\n\n### January 29, 2013\n* Added **PremultiplyAlpha** to DirectXTex; ``-pmalpha`` switch for texconv command-line tool\n* Fixed problem with forceSRGB implementation for Ex versions of CreateTexture, CreateShaderResourceView, DDSTextureLoader and WICTextureLoader\n\n### December 11, 2012\n* Ex versions of **CreateTexture**, **CreateShaderResourceView**, **DDSTextureLoader** and **WICTextureLoader**\n* Fixed BC2 and BC3 decompression issue for unusual color encoding case\n* Converted annotation to SAL2 for improved VS 2012 /analyze experience\n* Updated DirectXTex, DDSView, and Texconv with VS 2010 + Windows 8.0 SDK project using official 'property sheets'\n\n### November 15, 2012\n* Added support for WIC2 when available on Windows 8 and Windows 7 with KB 2670838\n* Added optional ``targetGUID`` parameter to SaveWIC* APIs to influence final container pixel format choice\n* Fixed bug in **SaveDDSxxx** which was generating invalid DDS files for 1D dimension textures\n* Improved robustness of **CaptureTexture** when resolving MSAA source textures\n* Sync'd DDSTextureLoader, ScreenGrab, and WICTextureLoader standalone versions with latest DirectXTK release\n\n### September 28, 2012\n* Added **ScreenGrab** module for creating runtime screenshots\n* Renamed project files for better naming consistency\n* New Typeless utilities for DirectXTex\n* Some minor code cleanup for DirectXTex's WIC writer function\n* Bug fixes and new ``-tu``/``-tf`` options for texconv\n\n### June 22, 2012\n* Moved to using XNA Math 2.05 instead of XNA Math 2.04 for ``USE_XNAMATH`` builds\n* Fixed BGR vs. RGB color channel swizzle problem with 24bpp legacy .DDS files in DirectXTex\n* Update to DirectXTex WIC and WICTextureLoader for additional 96bpp float format handling on Windows 8\n\n### May 31, 2012\n* Minor fix for DDSTextureLoader's retry fallback that can happen with 10level9 feature levels\n* Switched to use ``_DEBUG`` instead of ``DEBUG`` and cleaned up debug warnings\n* added Windows Store style application project files for DirectXTex\n\n### April 20, 2012\n* DirectTex's WIC-based writer opts-in for the Windows 8 BMP encoder option for writing 32 bpp RGBA files with the ``BITMAPV5HEADER``\n\n### March 30, 2012\n* WICTextureLoader updated with Windows 8 WIC pixel formats\n* DirectXTex updated with limited non-power-of-2 texture support and ``TEX_FILTER_SEPARATE_ALPHA`` option\n* Texconv updated with ``-sepalpha`` command-line option\n* Added ``USE_XNAMATH`` control define to build DirectXTex using either XNAMath or DirectXMath\n* Added VS 2012 project files (which use DirectXMath instead of XNAMath and define ``DXGI_1_2_FORMATS``)\n\n### March 15, 2012\n* Fix for resource leak in **CreateShaderResourceView** Direct3D 11 helper function in DirectXTex\n\n### March 5, 2012\n* Fix for too much temp memory allocated by WICTextureLoader; cleaned up legacy 'min/max' macro usage in DirectXTex\n\n### February 21, 2012\n* WICTextureLoader updated to handle systems and device drivers without BGRA or 16bpp format support\n\n### February 20, 2012\n* Some code cleanup for DirectXTex and DDSTextureLoader\n* Fixed bug in 10:10:10:2 format fixup in the **LoadDDSFromMemory** function\n* Fixed bugs in \"non-zero alpha\" special-case handling in **LoadTGAFromFile**\n* Fixed bug in ``_SwizzleScanline`` when copying alpha channel for BGRA<->RGBA swizzling\n\n### February 11, 2012\n* Update of DDSTextureLoader to also build in Windows Store style apps; added **WICTextureLoader**\n* Added CMYK WIC pixel formats to the DirectXTex conversion table\n\n### January 30, 2012\n* Minor code-cleanup for DirectXTex to enable use of PCH through 'directxtexp.h' header\n\n### January 24, 2012\n* Some code-cleanup for DirectXTex\n* Added DXGI 1.2 implementation for DDSTextureLoader and DirectXTex guarded with ``DXGI_1_2_FORMATS`` compilation define\n\n### December 16, 2011\n* Fixed x64 compilation warnings in DDSTextureLoader\n\n### November 30, 2011\n* Fixed some of the constants used in **IsSupportedTexture**\n* added ability to strip off top levels of mips in DDSTextureLoader\n* changed DirectXTex to use CoCreateInstance rather than LoadLibrary to obtain the WIC factory\n* a few minor ``/analyze`` related annotations for DirectXTex\n\n### October 27, 2011\n* Original release\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 24.2802734375,
          "content": "# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\ncmake_minimum_required (VERSION 3.20)\n\nset(DIRECTXTEX_VERSION 2.0.6)\n\nif(WINDOWS_STORE OR (DEFINED XBOX_CONSOLE_TARGET))\n  set(CMAKE_TRY_COMPILE_TARGET_TYPE \"STATIC_LIBRARY\")\nendif()\n\nproject (DirectXTex\n  VERSION ${DIRECTXTEX_VERSION}\n  DESCRIPTION \"DirectX Texture Library\"\n  HOMEPAGE_URL \"https://go.microsoft.com/fwlink/?LinkId=248926\"\n  LANGUAGES CXX)\n\noption(BUILD_TOOLS \"Build tex command-line tools\" ON)\n\noption(BUILD_SAMPLE \"Build DDSView sample (requires fxc.exe)\" ON)\n\n# Includes the functions for Direct3D 11 resources and DirectCompute compression\noption(BUILD_DX11 \"Build with DirectX11 Runtime support (requires fxc.exe)\" ON)\n\n# Includes the functions for creating Direct3D 12 resources at runtime\noption(BUILD_DX12 \"Build with DirectX12 Runtime support\" ON)\n\n# Enable the use of OpenMP for software BC6H/BC7 compression\noption(BC_USE_OPENMP \"Build with OpenMP support\" ON)\n\n# Builds Xbox extensions for Host PC\noption(BUILD_XBOX_EXTS_XBOXONE \"Build Xbox library extensions for Xbox One\" OFF)\noption(BUILD_XBOX_EXTS_SCARLETT \"Build Xbox library extensions for Xbox Series X|S\" OFF)\n\n# https://devblogs.microsoft.com/cppblog/spectre-mitigations-in-msvc/\noption(ENABLE_SPECTRE_MITIGATION \"Build using /Qspectre for MSVC\" OFF)\n\noption(DISABLE_MSVC_ITERATOR_DEBUGGING \"Disable iterator debugging in Debug configurations with the MSVC CRT\" OFF)\n\noption(ENABLE_CODE_ANALYSIS \"Use Static Code Analysis on build\" OFF)\n\noption(ENABLE_CODE_COVERAGE \"Build with code-coverage\" OFF)\n\noption(USE_PREBUILT_SHADERS \"Use externally built HLSL shaders\" OFF)\n\noption(NO_WCHAR_T \"Use legacy wide-character as unsigned short\" OFF)\n\noption(BUILD_FUZZING \"Build for fuzz testing\" OFF)\n\n# Includes the functions for loading/saving OpenEXR files at runtime\noption(ENABLE_OPENEXR_SUPPORT \"Build with OpenEXR support\" OFF)\n\n# See https://www.ijg.org/\noption(ENABLE_LIBJPEG_SUPPORT \"Build with libjpeg support\" OFF)\n\n# See http://www.libpng.org/pub/png/libpng.html\noption(ENABLE_LIBPNG_SUPPORT \"Build with libpng support\" OFF)\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\")\n\nif(WINDOWS_STORE OR (DEFINED XBOX_CONSOLE_TARGET))\n   set(BUILD_DX12 ON)\n   set(BUILD_TOOLS OFF)\n   set(BUILD_SAMPLE OFF)\nendif()\n\nif((DEFINED XBOX_CONSOLE_TARGET) AND (NOT (XBOX_CONSOLE_TARGET STREQUAL \"durango\")))\n  set(BUILD_DX11 OFF)\nendif()\n\ninclude(GNUInstallDirs)\ninclude(build/CompilerAndLinker.cmake)\n\nif((DEFINED DIRECTX_ARCH) AND (${DIRECTX_ARCH} STREQUAL \"arm64ec\"))\n  # OpenEXR doesn't support ARM64EC\n  set(ENABLE_OPENEXR_SUPPORT OFF)\nendif()\n\n#--- Library\nset(LIBRARY_HEADERS\n    DirectXTex/DirectXTex.h\n    DirectXTex/DirectXTex.inl)\n\nset(LIBRARY_SOURCES\n    DirectXTex/BC.h\n    DirectXTex/DDS.h\n    DirectXTex/DirectXTexP.h\n    DirectXTex/filters.h\n    DirectXTex/scoped.h\n    DirectXTex/BC.cpp\n    DirectXTex/BC4BC5.cpp\n    DirectXTex/BC6HBC7.cpp\n    DirectXTex/DirectXTexCompress.cpp\n    DirectXTex/DirectXTexConvert.cpp\n    DirectXTex/DirectXTexDDS.cpp\n    DirectXTex/DirectXTexHDR.cpp\n    DirectXTex/DirectXTexImage.cpp\n    DirectXTex/DirectXTexMipmaps.cpp\n    DirectXTex/DirectXTexMisc.cpp\n    DirectXTex/DirectXTexNormalMaps.cpp\n    DirectXTex/DirectXTexPMAlpha.cpp\n    DirectXTex/DirectXTexResize.cpp\n    DirectXTex/DirectXTexTGA.cpp\n    DirectXTex/DirectXTexUtil.cpp)\n\nif(WIN32)\n   list(APPEND LIBRARY_SOURCES\n       DirectXTex/DirectXTexFlipRotate.cpp\n       DirectXTex/DirectXTexWIC.cpp)\nendif()\n\nif(DEFINED XBOX_CONSOLE_TARGET)\n\n    list(APPEND LIBRARY_HEADERS Auxiliary/DirectXTexXbox.h)\n\n    list(APPEND LIBRARY_SOURCES\n       Auxiliary/DirectXTexXboxDDS.cpp\n       Auxiliary/DirectXTexXboxDetile.cpp\n       Auxiliary/DirectXTexXboxImage.cpp\n       Auxiliary/DirectXTexXboxTile.cpp)\n\n    if((XBOX_CONSOLE_TARGET STREQUAL \"durango\") AND BUILD_DX11)\n       list(APPEND LIBRARY_SOURCES Auxiliary/DirectXTexXboxD3D11X.cpp)\n    endif()\n\n    if(BUILD_DX12)\n       list(APPEND LIBRARY_SOURCES Auxiliary/DirectXTexXboxD3D12X.cpp)\n    endif()\n\nelseif((BUILD_XBOX_EXTS_XBOXONE OR BUILD_XBOX_EXTS_SCARLETT) AND WIN32)\n    if(DEFINED ENV{GameDKLatest})\n        cmake_path(SET GameDK_DIR \"$ENV{GameDKLatest}\")\n    endif()\n    if(DEFINED ENV{XboxOneXDKLatest})\n        cmake_path(SET XboxOneXDK_DIR \"$ENV{XboxOneXDKLatest}\")\n    endif()\n\n    list(APPEND LIBRARY_HEADERS Auxiliary/DirectXTexXbox.h)\n\n    list(APPEND LIBRARY_SOURCES\n       Auxiliary/DirectXTexXboxDDS.cpp\n       Auxiliary/DirectXTexXboxDetile.cpp\n       Auxiliary/DirectXTexXboxImage.cpp\n       Auxiliary/DirectXTexXboxTile.cpp)\nendif()\n\nif(BUILD_DX11 AND WIN32 AND (NOT (XBOX_CONSOLE_TARGET STREQUAL \"durango\")))\n    set(SHADER_SOURCES\n        DirectXTex/Shaders/BC6HEncode.hlsl\n        DirectXTex/Shaders/BC7Encode.hlsl)\n\n    list(APPEND LIBRARY_SOURCES\n        DirectXTex/BCDirectCompute.h\n        DirectXTex/BCDirectCompute.cpp\n        DirectXTex/DirectXTexCompressGPU.cpp\n        DirectXTex/DirectXTexD3D11.cpp)\nendif()\n\nif(BUILD_DX12)\n   list(APPEND LIBRARY_SOURCES DirectXTex/DirectXTexD3D12.cpp)\n\n   if(NOT (DEFINED XBOX_CONSOLE_TARGET))\n       list(APPEND LIBRARY_SOURCES Common/d3dx12.h)\n   endif()\nendif()\n\nif(ENABLE_OPENEXR_SUPPORT)\n   list(APPEND LIBRARY_HEADERS Auxiliary/DirectXTexEXR.h)\n   list(APPEND LIBRARY_SOURCES Auxiliary/DirectXTexEXR.cpp)\nendif()\n\nif(ENABLE_LIBJPEG_SUPPORT)\n    if(WIN32)\n        message(STATUS \"Use of the Windows Imaging Component (WIC) instead of libjpeg is recommended.\")\n    endif()\n    list(APPEND LIBRARY_HEADERS Auxiliary/DirectXTexJPEG.h)\n    list(APPEND LIBRARY_SOURCES Auxiliary/DirectXTexJPEG.cpp)\nendif()\n\nif(ENABLE_LIBPNG_SUPPORT)\n    if(WIN32)\n        message(STATUS \"Use of the Windows Imaging Component (WIC) instead of libpng is recommended.\")\n    endif()\n    list(APPEND LIBRARY_HEADERS Auxiliary/DirectXTexPNG.h)\n    list(APPEND LIBRARY_SOURCES Auxiliary/DirectXTexPNG.cpp)\nendif()\n\nif(BUILD_DX11 AND WIN32 AND (NOT (XBOX_CONSOLE_TARGET STREQUAL \"durango\")))\n    if(NOT COMPILED_SHADERS)\n        if(USE_PREBUILT_SHADERS)\n            message(FATAL_ERROR \"ERROR: Using prebuilt shaders requires the COMPILED_SHADERS variable is set\")\n        endif()\n        set(COMPILED_SHADERS ${CMAKE_CURRENT_BINARY_DIR}/Shaders/Compiled)\n        file(MAKE_DIRECTORY ${COMPILED_SHADERS})\n    else()\n        file(TO_CMAKE_PATH ${COMPILED_SHADERS} COMPILED_SHADERS)\n    endif()\n\n    list(APPEND LIBRARY_SOURCES ${COMPILED_SHADERS}/BC6HEncode_EncodeBlockCS.inc)\n\n    if(NOT USE_PREBUILT_SHADERS)\n        find_program(DIRECTX_FXC_TOOL FXC.EXE\n          HINTS \"C:/Program Files (x86)/Windows Kits/10/bin/${CMAKE_SYSTEM_VERSION}/${DIRECTX_HOST_ARCH}\"\n                \"C:/Program Files (x86)/Windows Kits/10/bin/${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}/${DIRECTX_HOST_ARCH}\")\n        message(STATUS \"Using LegacyShaderCompiler found in ${DIRECTX_FXC_TOOL}\")\n        add_custom_command(\n            OUTPUT \"${COMPILED_SHADERS}/BC6HEncode_EncodeBlockCS.inc\"\n            MAIN_DEPENDENCY \"${PROJECT_SOURCE_DIR}/DirectXTex/Shaders/CompileShaders.cmd\"\n            DEPENDS ${SHADER_SOURCES}\n            COMMENT \"Generating HLSL shaders...\"\n            COMMAND ${CMAKE_COMMAND} -E env CompileShadersOutput=\"${COMPILED_SHADERS}\" $<$<BOOL:${DIRECTX_FXC_TOOL}>:LegacyShaderCompiler=${DIRECTX_FXC_TOOL}> CompileShaders.cmd > \"${COMPILED_SHADERS}/compileshaders.log\"\n            WORKING_DIRECTORY \"${PROJECT_SOURCE_DIR}/DirectXTex/Shaders\"\n            USES_TERMINAL)\n    endif()\nendif()\n\nadd_library(${PROJECT_NAME} STATIC ${LIBRARY_SOURCES} ${LIBRARY_HEADERS})\n\nif(BUILD_DX11 AND WIN32)\n   target_include_directories(${PROJECT_NAME} PRIVATE ${COMPILED_SHADERS})\nendif()\n\nsource_group(${PROJECT_NAME} REGULAR_EXPRESSION DirectXTex/*.*)\n\ntarget_include_directories(${PROJECT_NAME} PUBLIC\n  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex>\n  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)\n\ntarget_compile_features(${PROJECT_NAME} PUBLIC cxx_std_11)\n\nif(BC_USE_OPENMP)\n  find_package(OpenMP)\n  if(OpenMP_CXX_FOUND)\n    target_link_libraries(${PROJECT_NAME} PUBLIC OpenMP::OpenMP_CXX)\n  else()\n    set(BC_USE_OPENMP OFF)\n  endif()\nendif()\n\nif(ENABLE_OPENEXR_SUPPORT)\n  find_package(OpenEXR REQUIRED)\n  target_link_libraries(${PROJECT_NAME} PUBLIC OpenEXR::OpenEXR)\nendif()\n\nif(BUILD_XBOX_EXTS_SCARLETT AND WIN32)\n    if(EXISTS \"${GameDK_DIR}/GXDK/toolKit/include/gxdk.h\")\n        message(STATUS \"Building Xbox extensions for Xbox Series X|S\")\n\n        add_library(Xbox::GDKX SHARED IMPORTED)\n        set_target_properties(Xbox::GDKX PROPERTIES\n            IMPORTED_LOCATION \"${GameDK_DIR}/GXDK/bin/Scarlett/xg_xs.dll\"\n            IMPORTED_IMPLIB \"${GameDK_DIR}/GXDK/toolKit/lib/amd64/Scarlett/xg_xs.lib\"\n            MAP_IMPORTED_CONFIG_MINSIZEREL \"\"\n            MAP_IMPORTED_CONFIG_RELWITHDEBINFO \"\"\n            INTERFACE_COMPILE_DEFINITIONS \"_USE_GXDK;_USE_SCARLETT\"\n            INTERFACE_INCLUDE_DIRECTORIES \"${GameDK_DIR}/GXDK/toolKit/include;${GameDK_DIR}/GXDK/toolKit/include/Scarlett\")\n\n        target_compile_definitions(${PROJECT_NAME} PRIVATE USE_XBOX_EXTS)\n        target_link_libraries(${PROJECT_NAME} PUBLIC Xbox::GDKX)\n    else()\n        message(FATAL_ERROR \"Building Xbox extensions requires GameDKLatest\")\n    endif()\nelseif(BUILD_XBOX_EXTS_XBOXONE AND WIN32)\n    if(EXISTS \"${GameDK_DIR}/GXDK/toolKit/include/gxdk.h\")\n        message(STATUS \"Building Xbox extensions for XboxOne using the Microsoft GDK\")\n\n        add_library(Xbox::GDKX SHARED IMPORTED)\n        set_target_properties(Xbox::GDKX PROPERTIES\n            IMPORTED_LOCATION \"${GameDK_DIR}/GXDK/bin/XboxOne/xg.dll\"\n            IMPORTED_IMPLIB \"${GameDK_DIR}/GXDK/toolKit/lib/amd64/XboxOne/xg.lib\"\n            MAP_IMPORTED_CONFIG_MINSIZEREL \"\"\n            MAP_IMPORTED_CONFIG_RELWITHDEBINFO \"\"\n            INTERFACE_COMPILE_DEFINITIONS \"_USE_GXDK\"\n            INTERFACE_INCLUDE_DIRECTORIES \"${GameDK_DIR}/GXDK/toolKit/include;${GameDK_DIR}/GXDK/toolKit/include/XboxOne\")\n\n        target_compile_definitions(${PROJECT_NAME} PRIVATE USE_XBOX_EXTS)\n        target_link_libraries(${PROJECT_NAME} PUBLIC Xbox::GDKX)\n\n    elseif(EXISTS \"${XboxOneXDK_DIR}/PC/include/xdk.h\")\n        message(STATUS \"Building Xbox extensions for XboxOne using the Xbox One XDK\")\n\n        add_library(Xbox::XDK SHARED IMPORTED)\n        set_target_properties(Xbox::XDK PROPERTIES\n            IMPORTED_LOCATION \"${XboxOneXDK_DIR}/bin/xg.dll\"\n            IMPORTED_IMPLIB \"${XboxOneXDK_DIR}/PC/lib/amd64/xg.lib\"\n            MAP_IMPORTED_CONFIG_MINSIZEREL \"\"\n            MAP_IMPORTED_CONFIG_RELWITHDEBINFO \"\"\n            INTERFACE_INCLUDE_DIRECTORIES \"${XboxOneXDK_DIR}/PC/include\")\n\n        target_compile_definitions(${PROJECT_NAME} PRIVATE USE_XBOX_EXTS)\n        target_link_libraries(${PROJECT_NAME} PUBLIC Xbox::XDK)\n    else()\n        message(FATAL_ERROR \"Building Xbox extensions requires GameDKLatest or XboxOneXDKLatest\")\n    endif()\nendif()\n\nif(ENABLE_LIBJPEG_SUPPORT)\n  find_package(JPEG REQUIRED)\n  target_link_libraries(${PROJECT_NAME} PUBLIC JPEG::JPEG)\nendif()\n\nif(ENABLE_LIBPNG_SUPPORT)\n  find_package(PNG REQUIRED)\n  target_link_libraries(${PROJECT_NAME} PUBLIC PNG::PNG)\nendif()\n\nif(NOT MINGW)\n    target_precompile_headers(${PROJECT_NAME} PRIVATE DirectXTex/DirectXTexP.h)\nendif()\n\nif(MINGW OR (NOT WIN32))\n    find_package(directxmath CONFIG REQUIRED)\n    target_link_libraries(${PROJECT_NAME} PUBLIC Microsoft::DirectXMath)\n\n    find_package(directx-headers CONFIG REQUIRED)\n    target_link_libraries(${PROJECT_NAME} PUBLIC Microsoft::DirectX-Headers)\n    target_compile_definitions(${PROJECT_NAME} PUBLIC USING_DIRECTX_HEADERS)\nelse()\n    find_package(directxmath CONFIG QUIET)\n    find_package(directx-headers CONFIG QUIET)\nendif()\n\nif(directxmath_FOUND)\n    message(STATUS \"Using DirectXMath package\")\n    target_link_libraries(${PROJECT_NAME} PRIVATE Microsoft::DirectXMath)\nendif()\n\nif(directx-headers_FOUND)\n    message(STATUS \"Using DirectX-Headers package\")\n    target_link_libraries(${PROJECT_NAME} PRIVATE Microsoft::DirectX-Headers)\n    target_compile_definitions(${PROJECT_NAME} PRIVATE USING_DIRECTX_HEADERS)\n    target_compile_options(${PROJECT_NAME} PRIVATE $<$<CXX_COMPILER_ID:MSVC,Intel>:/wd4062> $<$<CXX_COMPILER_ID:Clang,IntelLLVM>:-Wno-switch-enum>)\nendif()\n\n#--- Package\ninclude(CMakePackageConfigHelpers)\n\nstring(TOLOWER ${PROJECT_NAME} PACKAGE_NAME)\n\nwrite_basic_package_version_file(\n  ${PACKAGE_NAME}-config-version.cmake\n  VERSION ${DIRECTXTEX_VERSION}\n  COMPATIBILITY AnyNewerVersion)\n\ninstall(TARGETS ${PROJECT_NAME}\n  EXPORT ${PROJECT_NAME}-targets\n  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n\nconfigure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/build/${PROJECT_NAME}-config.cmake.in\n  ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}-config.cmake\n  INSTALL_DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PACKAGE_NAME})\n\ninstall(EXPORT ${PROJECT_NAME}-targets\n  FILE ${PROJECT_NAME}-targets.cmake\n  NAMESPACE Microsoft::\n  DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PACKAGE_NAME})\n\ninstall(FILES ${LIBRARY_HEADERS}\n  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\ninstall(FILES\n    ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}-config.cmake\n    ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}-config-version.cmake\n  DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PACKAGE_NAME})\n\n# Create pkg-config file\ninclude(build/JoinPaths.cmake)\n# from: https://github.com/jtojnar/cmake-snips#concatenating-paths-when-building-pkg-config-files\njoin_paths(DIRECTXTEX_INCLUDEDIR_FOR_PKG_CONFIG \"\\${prefix}\" \"${CMAKE_INSTALL_INCLUDEDIR}\")\njoin_paths(DIRECTXTEX_LIBDIR_FOR_PKG_CONFIG \"\\${prefix}\"     \"${CMAKE_INSTALL_LIBDIR}\")\n\nset(DIRECTXTEX_DEP_L \"\")\nif(ENABLE_OPENEXR_SUPPORT)\n  list(APPEND DIRECTXTEX_DEP_L \"OpenEXR\")\nendif()\nif(directxmath_FOUND)\n  list(APPEND DIRECTXTEX_DEP_L \"DirectXMath\")\nendif()\nif(directx-headers_FOUND)\n  list(APPEND DIRECTXTEX_DEP_L \"DirectX-Headers\")\nendif()\nif(ENABLE_LIBJPEG_SUPPORT AND JPEG_FOUND)\n  list(APPEND DIRECTXTEX_DEP_L \"libjpeg\")\nendif()\nif(ENABLE_LIBPNG_SUPPORT AND PNG_FOUND)\n  list(APPEND DIRECTXTEX_DEP_L \"libpng\")\nendif()\n\nlist(LENGTH DIRECTXTEX_DEP_L DEP_L)\nif(DEP_L)\n  STRING(REPLACE \";\" \", \" DIRECTXTEX_DEP \" ${DIRECTXTEX_DEP_L}\")\nendif()\n\nconfigure_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/build/DirectXTex.pc.in\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/DirectXTex.pc\" @ONLY)\n\n# Install the pkg-config file\ninstall(FILES \"${CMAKE_CURRENT_BINARY_DIR}/DirectXTex.pc\"\n        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\n\n#--- Command-line tools\nset(TOOL_EXES \"\")\n\nif(BUILD_TOOLS AND WIN32)\n  add_executable(texassemble\n    Texassemble/texassemble.cpp\n    Texassemble/texassemble.rc\n    Common/CmdLineHelpers.h\n    Common/settings.manifest\n    Texassemble/AnimatedGif.cpp)\n  target_compile_features(texassemble PRIVATE cxx_std_17)\n  target_link_libraries(texassemble PRIVATE ${PROJECT_NAME} ole32.lib version.lib)\n  source_group(texassemble REGULAR_EXPRESSION Texassemble/*.*)\n  list(APPEND TOOL_EXES texassemble)\nendif()\n\nif(BUILD_TOOLS AND BUILD_DX11 AND WIN32)\n  add_executable(texconv\n    Texconv/texconv.cpp\n    Texconv/texconv.rc\n    Common/CmdLineHelpers.h\n    Common/settings.manifest\n    Texconv/ExtendedBMP.cpp\n    Texconv/PortablePixMap.cpp)\n  target_compile_features(texconv PRIVATE cxx_std_17)\n  target_link_libraries(texconv PRIVATE ${PROJECT_NAME} ole32.lib shell32.lib version.lib)\n  source_group(texconv REGULAR_EXPRESSION Texconv/*.*)\n  list(APPEND TOOL_EXES texconv)\nendif()\n\nif(BUILD_TOOLS AND WIN32)\n  add_executable(texdiag\n    Texdiag/texdiag.cpp\n    Texdiag/texdiag.rc\n    Common/CmdLineHelpers.h\n    Common/settings.manifest)\n  target_compile_features(texdiag PRIVATE cxx_std_17)\n  target_link_libraries(texdiag PRIVATE ${PROJECT_NAME} ole32.lib version.lib)\n  source_group(texdiag REGULAR_EXPRESSION Texdiag/*.*)\n  list(APPEND TOOL_EXES texdiag)\nendif()\n\nforeach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n  target_include_directories(${t} PRIVATE Common)\nendforeach()\n\nif(BUILD_TOOLS AND WIN32)\n  if(ENABLE_OPENEXR_SUPPORT)\n    foreach(t IN LISTS TOOL_EXES)\n      target_include_directories(${t} PRIVATE Auxiliary)\n      target_link_libraries(${t} PRIVATE ${OPENEXR_ILMIMF_LIBRARY})\n      target_compile_definitions(${t} PRIVATE USE_OPENEXR)\n    endforeach()\n  endif()\n  if(ENABLE_LIBJPEG_SUPPORT)\n    foreach(t IN LISTS TOOL_EXES)\n      target_include_directories(${t} PRIVATE Auxiliary)\n      target_link_libraries(${t} PRIVATE JPEG::JPEG)\n      target_compile_definitions(${t} PRIVATE USE_LIBJPEG)\n    endforeach()\n  endif()\n  if(ENABLE_LIBPNG_SUPPORT)\n    foreach(t IN LISTS TOOL_EXES)\n      target_include_directories(${t} PRIVATE Auxiliary)\n      target_link_libraries(${t} PRIVATE PNG::PNG)\n      target_compile_definitions(${t} PRIVATE USE_LIBPNG)\n    endforeach()\n  endif()\n  if(BUILD_XBOX_EXTS_SCARLETT OR BUILD_XBOX_EXTS_XBOXONE)\n    target_include_directories(texconv PRIVATE Auxiliary)\n    target_compile_definitions(texconv PRIVATE USE_XBOX_EXTS)\n    target_link_libraries(texconv PUBLIC $<TARGET_NAME_IF_EXISTS:Xbox::GDKX> $<TARGET_NAME_IF_EXISTS:Xbox::XDK>)\n\n    if(${CMAKE_VERSION} VERSION_GREATER_EQUAL \"3.21\")\n      add_custom_command(TARGET texconv POST_BUILD\n          COMMAND ${CMAKE_COMMAND} -E copy\n          $<TARGET_RUNTIME_DLLS:texconv> $<TARGET_FILE_DIR:texconv>\n          COMMAND_EXPAND_LISTS\n          )\n    endif()\n  endif()\nendif()\n\n#--- DDSView sample\nif(BUILD_SAMPLE AND BUILD_DX11 AND WIN32)\n  list(APPEND TOOL_EXES ddsview)\n\n  add_executable(ddsview WIN32\n    DDSView/ddsview.cpp\n    DDSView/ddsview.rc\n    ${COMPILED_SHADERS}/ddsview_ps1D.inc)\n  target_link_libraries(ddsview PRIVATE ${PROJECT_NAME} d3d11.lib ole32.lib)\n  source_group(ddsview REGULAR_EXPRESSION DDSView/*.*)\n\n  target_include_directories(ddsview PRIVATE ${COMPILED_SHADERS})\n\n  if(NOT USE_PREBUILT_SHADERS)\n      add_custom_command(\n            OUTPUT \"${COMPILED_SHADERS}/ddsview_ps1D.inc\"\n            MAIN_DEPENDENCY \"${PROJECT_SOURCE_DIR}/DDSView/hlsl.cmd\"\n            DEPENDS \"DDSView/ddsview.hlsl\"\n            COMMENT \"Generating HLSL shaders for DDSView...\"\n            COMMAND ${CMAKE_COMMAND} -E env CompileShadersOutput=\"${COMPILED_SHADERS}\" $<$<BOOL:${DIRECTX_FXC_TOOL}>:LegacyShaderCompiler=${DIRECTX_FXC_TOOL}> hlsl.cmd > \"${COMPILED_SHADERS}/hlsl_ddsview.log\"\n            WORKING_DIRECTORY \"${PROJECT_SOURCE_DIR}/DDSView\"\n            USES_TERMINAL)\n  endif()\nendif()\n\nif(directxmath_FOUND)\n  foreach(t IN LISTS TOOL_EXES)\n    target_link_libraries(${t} PRIVATE Microsoft::DirectXMath)\n  endforeach()\nendif()\n\nif(TOOL_EXES)\n  message(STATUS \"Building tools: ${TOOL_EXES}\")\nendif()\n\nif(MSVC)\n    foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n      target_compile_options(${t} PRIVATE /Wall /GR-)\n    endforeach()\n\n    if(NO_WCHAR_T)\n      message(STATUS \"Using non-native wchar_t as unsigned short\")\n      foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n        target_compile_options(${t} PRIVATE \"/Zc:wchar_t-\")\n      endforeach()\n    endif()\nendif()\n\nforeach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n  target_compile_definitions(${t} PRIVATE ${COMPILER_DEFINES})\n  target_compile_options(${t} PRIVATE ${COMPILER_SWITCHES})\n  target_link_options(${t} PRIVATE ${LINKER_SWITCHES})\nendforeach()\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang|IntelLLVM\")\n    set(WarningsLib -Wall -Wpedantic -Wextra)\n\n    if((BUILD_XBOX_EXTS_XBOXONE OR BUILD_XBOX_EXTS_SCARLETT) AND WIN32)\n        list(APPEND WarningsLib \"-Wno-microsoft-enum-value\" \"-Wno-non-virtual-dtor\" \"-Wno-ignored-pragmas\" \"-Wno-deprecated-dynamic-exception-spec\")\n        if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 13.0)\n            list(APPEND WarningsLib \"-Wno-reserved-identifier\")\n        endif()\n    endif()\n\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 16.0)\n        list(APPEND WarningsLib \"-Wno-unsafe-buffer-usage\")\n    endif()\n    target_compile_options(${PROJECT_NAME} PRIVATE ${WarningsLib})\n\n    set(WarningsEXE ${WarningsLib} \"-Wno-c++98-compat\" \"-Wno-c++98-compat-pedantic\" \"-Wno-switch\" \"-Wno-switch-enum\" \"-Wno-switch-default\" \"-Wno-covered-switch-default\" \"-Wno-language-extension-token\" \"-Wno-missing-prototypes\" \"-Wno-global-constructors\" \"-Wno-double-promotion\")\n    foreach(t IN LISTS TOOL_EXES)\n      target_compile_options(${t} PRIVATE ${WarningsEXE})\n    endforeach()\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU\")\n    foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n      target_compile_options(${t} PRIVATE \"-Wno-ignored-attributes\" \"-Walloc-size-larger-than=4GB\")\n    endforeach()\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"Intel\")\n    set_target_properties(${PROJECT_NAME} PROPERTIES CXX_STANDARD 14)\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"MSVC\")\n\n    if((CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.37)\n       AND (NOT (${DIRECTX_ARCH} MATCHES \"^arm\"))\n       AND ((${DIRECTX_ARCH} STREQUAL \"x64\") OR (CMAKE_SIZEOF_VOID_P EQUAL 8)))\n       # Enable since DirectXTex library has a lot of large switch statements\n      target_compile_options(${PROJECT_NAME} PRIVATE /jumptablerdata)\n    endif()\n\n    if(ENABLE_CODE_ANALYSIS)\n      message(STATUS \"Building with Code Analysis (PREFIX)\")\n      foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n        target_compile_options(${t} PRIVATE /analyze /WX)\n      endforeach()\n    endif()\n\n    if(ENABLE_SPECTRE_MITIGATION\n       AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.13)\n       AND (NOT ENABLE_OPENEXR_SUPPORT)\n       AND (NOT WINDOWS_STORE))\n        message(STATUS \"Building Spectre-mitigated libraries\")\n        foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n          target_compile_options(${t} PRIVATE \"/Qspectre\")\n        endforeach()\n    endif()\n\n   if((CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.26)\n      AND BUILD_XBOX_EXTS_XBOXONE)\n        foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n          target_compile_options(${t} PRIVATE /wd5104 /wd5204)\n        endforeach()\n    endif()\n\n    set(WarningsEXE \"/wd4061\" \"/wd4062\" \"/wd4365\" \"/wd4514\" \"/wd4571\" \"/wd4625\" \"/wd4626\" \"/wd4627\" \"/wd4668\" \"/wd4710\" \"/wd4711\" \"/wd4751\" \"/wd4774\" \"/wd4820\" \"/wd5026\" \"/wd5027\" \"/wd5039\" \"/wd5045\" \"/wd5219\")\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.34)\n      list(APPEND WarningsEXE \"/wd5262\" \"/wd5264\")\n    endif()\n    foreach(t IN LISTS TOOL_EXES)\n      target_compile_options(${t} PRIVATE ${WarningsEXE})\n    endforeach()\n\n    if(BUILD_FUZZING AND (NOT WINDOWS_STORE))\n      string(REPLACE \"/DNDEBUG\" \"\" CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})\n      string(REPLACE \"/DNDEBUG\" \"\" CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})\n\n      if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.32)\n        foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n          target_compile_options(${t} PRIVATE ${ASAN_SWITCHES})\n          target_link_libraries(${t} PRIVATE ${ASAN_LIBS})\n        endforeach()\n      endif()\n    endif()\nendif()\n\nif(WIN32)\n    if(XBOX_CONSOLE_TARGET STREQUAL \"durango\")\n        set(WINVER 0x0602)\n    elseif(BUILD_DX12 OR (${DIRECTX_ARCH} MATCHES \"^arm64\"))\n        message(STATUS \"Building with DirectX 12 Runtime support\")\n        set(WINVER 0x0A00)\n    elseif(${DIRECTX_ARCH} MATCHES \"^arm\")\n        set(WINVER 0x0602)\n    else()\n        message(STATUS \"Building with Windows 8.1 compatibility\")\n        set(WINVER 0x0603)\n    endif()\n\n    foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n      target_compile_definitions(${t} PRIVATE _WIN32_WINNT=${WINVER})\n    endforeach()\n\n    if(DISABLE_MSVC_ITERATOR_DEBUGGING)\n      foreach(t IN LISTS TOOL_EXES ITEMS ${PROJECT_NAME})\n        target_compile_definitions(${t} PRIVATE _ITERATOR_DEBUG_LEVEL=0)\n      endforeach()\n    endif()\nendif()\n\nif(BUILD_TOOLS AND BUILD_DX11 AND WIN32)\n    set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT texconv)\nendif()\n\nif(BUILD_TOOLS AND (NOT VCPKG_TOOLCHAIN))\n    foreach(t IN LISTS TOOL_EXES)\n      install(TARGETS ${t} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n    endforeach()\nendif()\n\n#--- Test suite\nif(WIN32 AND (NOT WINDOWS_STORE) AND (NOT (DEFINED XBOX_CONSOLE_TARGET)))\n    include(CTest)\n    if(BUILD_TESTING AND (EXISTS \"${CMAKE_CURRENT_LIST_DIR}/Tests/CMakeLists.txt\"))\n        enable_testing()\n        add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/Tests)\n\n        if(ENABLE_CODE_COVERAGE AND (DEFINED COV_COMPILER_SWITCHES))\n          target_compile_options(${PROJECT_NAME} PRIVATE ${COV_COMPILER_SWITCHES})\n        endif()\n    elseif(BUILD_FUZZING AND (EXISTS \"${CMAKE_CURRENT_LIST_DIR}/Tests/fuzzloaders/CMakeLists.txt\"))\n        message(STATUS \"Building for fuzzing\")\n        add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/Tests/fuzzloaders)\n    endif()\nendif()\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 22.2177734375,
          "content": "﻿{\n  \"version\": 2,\n  \"configurePresets\": [\n    {\n      \"name\": \"base\",\n      \"displayName\": \"Basic Config\",\n      \"description\": \"Basic build using Ninja generator\",\n      \"generator\": \"Ninja\",\n      \"hidden\": true,\n      \"binaryDir\": \"${sourceDir}/out/build/${presetName}\",\n      \"cacheVariables\": { \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\" }\n    },\n\n    {\n      \"name\": \"x64\",\n      \"architecture\": {\n        \"value\": \"x64\",\n        \"strategy\": \"external\"\n      },\n      \"cacheVariables\": { \"DIRECTX_ARCH\": \"x64\" },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"x86\",\n      \"architecture\": {\n        \"value\": \"x86\",\n        \"strategy\": \"external\"\n      },\n      \"cacheVariables\": { \"DIRECTX_ARCH\": \"x86\" },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"ARM64\",\n      \"architecture\": {\n        \"value\": \"arm64\",\n        \"strategy\": \"external\"\n      },\n      \"cacheVariables\": { \"DIRECTX_ARCH\": \"arm64\" },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"ARM64EC\",\n      \"architecture\": {\n        \"value\": \"arm64ec\",\n        \"strategy\": \"external\"\n      },\n      \"cacheVariables\": { \"DIRECTX_ARCH\": \"arm64ec\" },\n      \"environment\": {\n        \"CFLAGS\": \"/arm64EC\",\n        \"CXXFLAGS\": \"/arm64EC\"\n      },\n      \"hidden\": true\n    },\n\n    {\n      \"name\": \"Debug\",\n      \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\" },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Release\",\n      \"cacheVariables\":\n      {\n          \"CMAKE_BUILD_TYPE\": \"RelWithDebInfo\",\n          \"CMAKE_INTERPROCEDURAL_OPTIMIZATION\": true\n      },\n      \"hidden\": true\n    },\n\n    {\n      \"name\": \"MSVC\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"CMAKE_CXX_COMPILER\": \"cl.exe\"\n      },\n      \"toolset\": {\n        \"value\": \"host=x64\",\n        \"strategy\": \"external\"\n      }\n    },\n    {\n      \"name\": \"Clang\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"CMAKE_CXX_COMPILER\": \"clang-cl.exe\"\n      },\n      \"toolset\": {\n        \"value\": \"host=x64\",\n        \"strategy\": \"external\"\n      }\n    },\n    {\n      \"name\": \"Clang-X86\",\n      \"environment\": {\n        \"CFLAGS\": \"-m32\",\n        \"CXXFLAGS\": \"-m32\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Clang-AArch64\",\n      \"environment\": {\n        \"CFLAGS\": \"--target=arm64-pc-windows-msvc\",\n        \"CXXFLAGS\": \"--target=arm64-pc-windows-msvc\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"GNUC\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"CMAKE_CXX_COMPILER\": \"g++.exe\"\n      },\n      \"toolset\": {\n        \"value\": \"host=x64\",\n        \"strategy\": \"external\"\n      }\n    },\n\n    {\n      \"name\": \"Win8\",\n      \"cacheVariables\": {\n        \"BUILD_DX12\": false\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"GDKX\",\n      \"cacheVariables\": {\n        \"BUILD_XBOX_EXTS_XBOXONE\": true\n      },\n      \"environment\": {\n        \"XboxOneXDKLatest\": \"\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"GDKXS\",\n      \"cacheVariables\": {\n        \"BUILD_XBOX_EXTS_SCARLETT\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"XDK\",\n      \"cacheVariables\": {\n        \"BUILD_XBOX_EXTS_XBOXONE\": true\n      },\n      \"environment\": {\n        \"GameDKLatest\": \"\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"UWP\",\n      \"cacheVariables\": {\n        \"CMAKE_SYSTEM_NAME\": \"WindowsStore\",\n        \"CMAKE_SYSTEM_VERSION\": \"10.0\",\n        \"BUILD_DX12\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Scarlett\",\n      \"cacheVariables\": {\n        \"XBOX_CONSOLE_TARGET\": \"scarlett\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"XboxOne\",\n      \"cacheVariables\": {\n        \"XBOX_CONSOLE_TARGET\": \"xboxone\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Durango\",\n      \"cacheVariables\": {\n        \"XBOX_CONSOLE_TARGET\": \"durango\"\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"VCPKG\",\n      \"cacheVariables\": {\n        \"CMAKE_TOOLCHAIN_FILE\": {\n          \"value\": \"$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake\",\n          \"type\": \"FILEPATH\"\n        }\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"EXR\",\n      \"cacheVariables\": {\n        \"ENABLE_OPENEXR_SUPPORT\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"JPEG_PNG\",\n      \"cacheVariables\": {\n        \"ENABLE_LIBJPEG_SUPPORT\": true,\n        \"ENABLE_LIBPNG_SUPPORT\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"MinGW32\",\n      \"hidden\": true,\n      \"environment\": {\n        \"PATH\": \"$penv{PATH};c:/mingw32/bin;c:/mingw32/libexec/gcc/i686-w64-mingw32/12.2.0\"\n      },\n      \"cacheVariables\": {\n        \"VCPKG_TARGET_TRIPLET\": \"x86-mingw-static\",\n        \"VCPKG_HOST_TRIPLET\": \"x64-windows\"\n      }\n    },\n    {\n      \"name\": \"MinGW64\",\n      \"hidden\": true,\n      \"environment\": {\n        \"PATH\": \"$penv{PATH};c:/mingw64/bin;c:/mingw64/libexec/gcc/x86_64-w64-mingw32/12.2.0\"\n      },\n      \"cacheVariables\": {\n        \"VCPKG_TARGET_TRIPLET\": \"x64-mingw-static\",\n        \"VCPKG_HOST_TRIPLET\": \"x64-windows\"\n      }\n    },\n    {\n      \"name\": \"Intel\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"CMAKE_CXX_COMPILER\": \"icl.exe\",\n        \"BUILD_TOOLS\": false\n      },\n      \"toolset\": {\n        \"value\": \"host=x64\",\n        \"strategy\": \"external\"\n      }\n    },\n    {\n      \"name\": \"IntelLLVM\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"CMAKE_CXX_COMPILER\": \"icx.exe\"\n      },\n      \"toolset\": {\n        \"value\": \"host=x64\",\n        \"strategy\": \"external\"\n      }\n    },\n\n    {\n      \"name\": \"Analyze\",\n      \"cacheVariables\":\n      {\n        \"ENABLE_CODE_ANALYSIS\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Coverage\",\n      \"cacheVariables\":\n      {\n        \"BUILD_TOOLS\": false,\n        \"ENABLE_CODE_COVERAGE\": true\n      },\n      \"hidden\": true\n    },\n    {\n      \"name\": \"Fuzzing\",\n      \"cacheVariables\": {\n        \"BUILD_FUZZING\": true,\n        \"BUILD_TESTING\": false\n      },\n      \"hidden\": true\n    },\n\n    { \"name\": \"x64-Debug\"      , \"description\": \"MSVC for x64 (Debug) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\" ] },\n    { \"name\": \"x64-Release\"    , \"description\": \"MSVC for x64 (Release) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\" ] },\n    { \"name\": \"x86-Debug\"      , \"description\": \"MSVC for x86 (Debug) with DX12\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"MSVC\" ] },\n    { \"name\": \"x86-Release\"    , \"description\": \"MSVC for x86 (Release) with DX12\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"MSVC\" ] },\n    { \"name\": \"arm64-Debug\"    , \"description\": \"MSVC for ARM64 (Debug) with DX12\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"MSVC\" ] },\n    { \"name\": \"arm64-Release\"  , \"description\": \"MSVC for ARM64 (Release) with DX12\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"MSVC\" ] },\n    { \"name\": \"arm64ec-Debug\"  , \"description\": \"MSVC for ARM64EC (Debug) with DX12\", \"inherits\": [ \"base\", \"ARM64EC\", \"Debug\", \"MSVC\" ] },\n    { \"name\": \"arm64ec-Release\", \"description\": \"MSVC for ARM64EC (Release) with DX12\", \"inherits\": [ \"base\", \"ARM64EC\", \"Release\", \"MSVC\" ] },\n\n    { \"name\": \"x64-Debug-UWP\"    , \"description\": \"MSVC for x64 (Debug) for UWP\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"UWP\" ] },\n    { \"name\": \"x64-Release-UWP\"  , \"description\": \"MSVC for x64 (Release) for UWP\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"UWP\" ] },\n    { \"name\": \"x86-Debug-UWP\"    , \"description\": \"MSVC for x86 (Debug) for UWP\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"MSVC\", \"UWP\" ] },\n    { \"name\": \"x86-Release-UWP\"  , \"description\": \"MSVC for x86 (Release) for UWP\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"MSVC\", \"UWP\" ] },\n    { \"name\": \"arm64-Debug-UWP\"  , \"description\": \"MSVC for ARM64 (Debug) for UWP\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"MSVC\", \"UWP\" ] },\n    { \"name\": \"arm64-Release-UWP\", \"description\": \"MSVC for ARM64 (Release) for UWP\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"MSVC\", \"UWP\" ] },\n\n    { \"name\": \"x64-Debug-Win8\"    , \"description\": \"MSVC for x64 (Debug) for Windows 8.1\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"Win8\" ] },\n    { \"name\": \"x64-Release-Win8\"  , \"description\": \"MSVC for x64 (Release) for Windows 8.1\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"Win8\" ] },\n    { \"name\": \"x86-Debug-Win8\"    , \"description\": \"MSVC for x86 (Debug) for Windows 8.1\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"MSVC\", \"Win8\" ] },\n    { \"name\": \"x86-Release-Win8\"  , \"description\": \"MSVC for x86 (Release) for Windows 8.1\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"MSVC\", \"Win8\" ] },\n\n    { \"name\": \"x64-Debug-Scarlett\"    , \"description\": \"MSVC for x64 (Debug) for Xbox Series X|S\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"Scarlett\" ] },\n    { \"name\": \"x64-Release-Scarlett\"  , \"description\": \"MSVC for x64 (Release) for Xbox Series X|S\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"Scarlett\" ] },\n\n    { \"name\": \"x64-Debug-XboxOne\"    , \"description\": \"MSVC for x64 (Debug) for Xbox One\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"XboxOne\" ] },\n    { \"name\": \"x64-Release-XboxOne\"  , \"description\": \"MSVC for x64 (Release) for Xbox One\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"XboxOne\" ] },\n\n    { \"name\": \"x64-Debug-Durango\"    , \"description\": \"MSVC for x64 (Debug) for legacy Xbox One XDK\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"Durango\" ] },\n    { \"name\": \"x64-Release-Durango\"  , \"description\": \"MSVC for x64 (Release) for legacy Xbox One XDK\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"Durango\" ] },\n\n    { \"name\": \"x64-Debug-VCPKG\"      , \"description\": \"MSVC for x64 (Debug) using VCPKG\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"x64-Release-VCPKG\"    , \"description\": \"MSVC for x64 (Release) using VCPKG\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"x86-Debug-VCPKG\"      , \"description\": \"MSVC for x86 (Debug) using VCPKG\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"x86-Release-VCPKG\"    , \"description\": \"MSVC for x86 (Release) using VCPKG\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"arm64-Debug-VCPKG\"    , \"description\": \"MSVC for ARM64 (Debug) using VCPKG\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"arm64-Release-VCPKG\"  , \"description\": \"MSVC for ARM64 (Release) using VCPKG\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"MSVC\", \"VCPKG\" ] },\n    { \"name\": \"arm64ec-Debug-VCPKG\"  , \"description\": \"MSVC for ARM64EC (Debug) using VCPKG\", \"inherits\": [ \"base\", \"ARM64EC\", \"Debug\", \"MSVC\", \"VCPKG\" ], \"cacheVariables\": { \"VCPKG_TARGET_TRIPLET\": \"arm64ec-windows\" } },\n    { \"name\": \"arm64ec-Release-VCPKG\", \"description\": \"MSVC for ARM64EC (Release) using VCPKG\", \"inherits\": [ \"base\", \"ARM64EC\", \"Release\", \"MSVC\", \"VCPKG\" ], \"cacheVariables\": { \"VCPKG_TARGET_TRIPLET\": \"arm64ec-windows\" } },\n\n    { \"name\": \"x64-Debug-EXR\"      , \"description\": \"MSVC for x64 (Debug) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"VCPKG\", \"EXR\" ] },\n    { \"name\": \"x64-Release-EXR\"    , \"description\": \"MSVC for x64 (Release) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"VCPKG\", \"EXR\" ] },\n\n    { \"name\": \"x64-Debug-JPEG-PNG\"  , \"description\": \"MSVC for x64 (Debug) using VCPKG/PNG/JPEG\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"VCPKG\", \"JPEG_PNG\" ] },\n    { \"name\": \"x64-Release-JPEG-PNG\", \"description\": \"MSVC for x64 (Release) using VCPKG/PNG/JPEG\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"VCPKG\", \"JPEG_PNG\" ] },\n\n    { \"name\": \"x64-Debug-Clang\"    , \"description\": \"Clang/LLVM for x64 (Debug) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\" ] },\n    { \"name\": \"x64-Release-Clang\"  , \"description\": \"Clang/LLVM for x64 (Release) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\" ] },\n    { \"name\": \"x86-Debug-Clang\"    , \"description\": \"Clang/LLVM for x86 (Debug) with DX12\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"Clang\", \"Clang-X86\" ] },\n    { \"name\": \"x86-Release-Clang\"  , \"description\": \"Clang/LLVM for x86 (Release) with DX12\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"Clang\", \"Clang-X86\" ] },\n    { \"name\": \"arm64-Debug-Clang\"  , \"description\": \"Clang/LLVM for AArch64 (Debug) with DX12\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"Clang\", \"Clang-AArch64\" ] },\n    { \"name\": \"arm64-Release-Clang\", \"description\": \"Clang/LLVM for AArch64 (Release) with DX12\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"Clang\", \"Clang-AArch64\" ] },\n\n    { \"name\": \"x64-Debug-UWP-Clang\"    , \"description\": \"Clang/LLVM for x64 (Debug) for UWP\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"UWP\" ] },\n    { \"name\": \"x64-Release-UWP-Clang\"  , \"description\": \"Clang/LLVM for x64 (Release) for UWP\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"UWP\" ] },\n    { \"name\": \"x86-Debug-UWP-Clang\"    , \"description\": \"Clang/LLVM for x86 (Debug) for UWP\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"Clang\", \"Clang-X86\", \"UWP\" ] },\n    { \"name\": \"x86-Release-UWP-Clang\"  , \"description\": \"Clang/LLVM for x86 (Release) for UWP\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"Clang\", \"Clang-X86\", \"UWP\" ] },\n    { \"name\": \"arm64-Debug-UWP-Clang\"  , \"description\": \"Clang/LLVM for AArch64 (Debug) for UWP\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"Clang\", \"Clang-AArch64\", \"UWP\" ] },\n    { \"name\": \"arm64-Release-UWP-Clang\", \"description\": \"Clang/LLVM for AArch64 (Release) for UWP\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"Clang\", \"Clang-AArch64\", \"UWP\" ] },\n\n    { \"name\": \"x64-Debug-Win8-Clang\"  , \"description\": \"Clang/LLVM for x64 (Debug) for Windows 8.1\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"Win8\" ] },\n    { \"name\": \"x64-Release-Win8-Clang\", \"description\": \"Clang/LLVM for x64 (Release) for Windows 8.1\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"Win8\" ] },\n    { \"name\": \"x86-Debug-Win8-Clang\"  , \"description\": \"Clang/LLVM for x86 (Debug) for Windows 8.1\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"Clang\", \"Clang-X86\", \"Win8\" ] },\n    { \"name\": \"x86-Release-Win8-Clang\", \"description\": \"Clang/LLVM for x86 (Release) for Windows 8.1\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"Clang\", \"Clang-X86\", \"Win8\" ] },\n\n    { \"name\": \"x64-Debug-Clang-VCPKG\"    , \"description\": \"Clang/LLVM for x64 (Debug) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"VCPKG\" ] },\n    { \"name\": \"x64-Release-Clang-VCPKG\"  , \"description\": \"Clang/LLVM for x64 (Release) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"VCPKG\" ] },\n    { \"name\": \"x86-Debug-Clang-VCPKG\"    , \"description\": \"Clang/LLVM for x86 (Debug) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"Clang\", \"Clang-X86\", \"VCPKG\" ] },\n    { \"name\": \"x86-Release-Clang-VCPKG\"  , \"description\": \"Clang/LLVM for x86 (Release) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"Clang\", \"Clang-X86\", \"VCPKG\" ] },\n    { \"name\": \"arm64-Debug-Clang-VCPKG\"  , \"description\": \"Clang/LLVM for AArch64 (Debug) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"Clang\", \"Clang-AArch64\", \"VCPKG\" ] },\n    { \"name\": \"arm64-Release-Clang-VCPKG\", \"description\": \"Clang/LLVM for AArch64 (Release) using VCPKG/OpenEXR\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"Clang\", \"Clang-AArch64\", \"VCPKG\" ] },\n\n    { \"name\": \"x64-Debug-Clang-JPEG-PNG\"   , \"description\": \"Clang/LLVM for x64 (Debug) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"VCPKG\", \"JPEG_PNG\" ] },\n    { \"name\": \"x64-Release-Clang-JPEG-PNG\" , \"description\": \"Clang/LLVM for x64 (Release) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"VCPKG\", \"JPEG_PNG\" ] },\n\n    { \"name\": \"x64-Debug-GDKX\"     , \"description\": \"MSVC for x64 (Debug) Xbox One Extensions\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GDKX\", \"MSVC\" ] },\n    { \"name\": \"x64-Release-GDKX\"   , \"description\": \"MSVC for x64 (Release) Xbox One Extensions\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GDKX\", \"MSVC\" ] },\n    { \"name\": \"x64-Debug-GDKX-S\"   , \"description\": \"MSVC for x64 (Debug) Xbox Series X|S Extensions\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GDKXS\", \"MSVC\" ] },\n    { \"name\": \"x64-Release-GDKX-S\" , \"description\": \"MSVC for x64 (Release) Xbox Series X|S Extensions\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GDKXS\", \"MSVC\" ] },\n    { \"name\": \"x64-Debug-XDK\"      , \"description\": \"MSVC for x64 (Debug) Xbox One Extensions (legacy)\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"XDK\", \"MSVC\" ] },\n    { \"name\": \"x64-Release-XDK\"    , \"description\": \"MSVC for x64 (Release) Xbox One Extensions (legacy)\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"XDK\", \"MSVC\" ] },\n\n    { \"name\": \"x64-Debug-GDKX-Clang\"     , \"description\": \"MSVC for x64 (Debug) Xbox One Extensions\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GDKX\", \"Clang\" ] },\n    { \"name\": \"x64-Release-GDKX-Clang\"   , \"description\": \"MSVC for x64 (Release) Xbox One Extensions\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GDKX\", \"Clang\" ] },\n    { \"name\": \"x64-Debug-GDKX-S-Clang\"   , \"description\": \"MSVC for x64 (Debug) Xbox Series X|S Extensions\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GDKXS\", \"Clang\" ] },\n    { \"name\": \"x64-Release-GDKX-S-Clang\" , \"description\": \"MSVC for x64 (Release) Xbox Series X|S Extensions\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GDKXS\", \"Clang\" ] },\n\n    { \"name\": \"x64-Debug-Scarlett-Clang\"  , \"description\": \"Clang/LLVM for x64 (Debug) for Xbox Series X|S\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"Scarlett\" ] },\n    { \"name\": \"x64-Release-Scarlett-Clang\", \"description\": \"Clang/LLVM for x64 (Release) for Xbox Series X|S\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"Scarlett\" ] },\n\n    { \"name\": \"x64-Debug-XboxOne-Clang\"   , \"description\": \"Clang/LLVM for x64 (Debug) for Xbox One\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"XboxOne\" ] },\n    { \"name\": \"x64-Release-XboxOne-Clang\" , \"description\": \"Clang/LLVM for x64 (Release) for Xbox One\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Clang\", \"XboxOne\" ] },\n\n    { \"name\": \"x64-Debug-MinGW\"  , \"description\": \"MinG-W64 (Debug)\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GNUC\", \"VCPKG\", \"MinGW64\" ] },\n    { \"name\": \"x64-Release-MinGW\", \"description\": \"MinG-W64 (Release)\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GNUC\", \"VCPKG\", \"MinGW64\" ] },\n    { \"name\": \"x86-Debug-MinGW\"  , \"description\": \"MinG-W32 (Debug)\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"GNUC\", \"VCPKG\", \"MinGW32\" ] },\n    { \"name\": \"x86-Release-MinGW\", \"description\": \"MinG-W32 (Release)\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"GNUC\", \"VCPKG\", \"MinGW32\" ] },\n\n    { \"name\": \"x64-Debug-MinGW-JPEG-PNG\"  , \"description\": \"MinG-W64 (Debug)\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"GNUC\", \"VCPKG\", \"MinGW64\", \"JPEG_PNG\" ] },\n    { \"name\": \"x64-Release-MinGW-JPEG-PNG\", \"description\": \"MinG-W64 (Release)\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"GNUC\", \"VCPKG\", \"MinGW64\", \"JPEG_PNG\" ] },\n    { \"name\": \"x86-Debug-MinGW-JPEG-PNG\"  , \"description\": \"MinG-W32 (Debug)\", \"inherits\": [ \"base\", \"x86\", \"Debug\", \"GNUC\", \"VCPKG\", \"MinGW32\", \"JPEG_PNG\" ] },\n    { \"name\": \"x86-Release-MinGW-JPEG-PNG\", \"description\": \"MinG-W32 (Release)\", \"inherits\": [ \"base\", \"x86\", \"Release\", \"GNUC\", \"VCPKG\", \"MinGW32\", \"JPEG_PNG\" ] },\n\n    { \"name\": \"x64-Debug-Linux\",     \"description\": \"WSL Linux x64 (Debug)\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"VCPKG\", \"JPEG_PNG\" ] },\n    { \"name\": \"x64-Release-Linux\",   \"description\": \"WSL Linux x64 (Release)\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"VCPKG\", \"JPEG_PNG\" ] },\n    { \"name\": \"arm64-Debug-Linux\",   \"description\": \"WSL Linux ARM64 (Debug)\", \"inherits\": [ \"base\", \"ARM64\", \"Debug\", \"VCPKG\", \"JPEG_PNG\" ] },\n    { \"name\": \"arm64-Release-Linux\", \"description\": \"WSL Linux ARM64 (Release)\", \"inherits\": [ \"base\", \"ARM64\", \"Release\", \"VCPKG\", \"JPEG_PNG\" ] },\n\n    { \"name\": \"x64-Debug-ICC\"     , \"description\": \"Intel Classic Compiler (Debug) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Intel\" ] },\n    { \"name\": \"x64-Release-ICC\"   , \"description\": \"Intel Classic Compiler (Release) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"Intel\" ] },\n\n    { \"name\": \"x64-Debug-ICX\"    , \"description\": \"Intel oneAPI Compiler (Debug) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"IntelLLVM\" ] },\n    { \"name\": \"x64-Release-ICX\"  , \"description\": \"Intel oneAPI Compiler (Release) with DX12\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"IntelLLVM\" ] },\n\n    { \"name\": \"x64-Analyze\"       , \"description\": \"MSVC for x64 (Debug) with DX12 using /analyze\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"Analyze\" ] },\n    { \"name\": \"x64-Coverage\"      , \"description\": \"MSVC for x64 (Debug) with DX12 w/ Code Coverage\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"MSVC\", \"Coverage\" ] },\n    { \"name\": \"x64-Coverage-Clang\", \"description\": \"Clang/LLVM for x64 (Debug) with DX12 w/ Code Coverage\", \"inherits\": [ \"base\", \"x64\", \"Debug\", \"Clang\", \"Coverage\" ] },\n    { \"name\": \"x64-Fuzzing\"       , \"description\": \"MSVC for x64 (Release) with ASan\", \"inherits\": [ \"base\", \"x64\", \"Release\", \"MSVC\", \"Fuzzing\" ] }\n  ],\n  \"testPresets\": [\n    { \"name\": \"x64-Debug\"      , \"configurePreset\": \"x64-Debug\" },\n    { \"name\": \"x64-Release\"    , \"configurePreset\": \"x64-Release\" },\n    { \"name\": \"x86-Debug\"      , \"configurePreset\": \"x86-Debug\" },\n    { \"name\": \"x86-Release\"    , \"configurePreset\": \"x86-Release\" },\n    { \"name\": \"arm64-Debug\"    , \"configurePreset\": \"arm64-Debug\" },\n    { \"name\": \"arm64-Release\"  , \"configurePreset\": \"arm64-Release\" },\n    { \"name\": \"arm64ec-Debug\"  , \"configurePreset\": \"arm64ec-Debug\" },\n    { \"name\": \"arm64ec-Release\", \"configurePreset\": \"arm64ec-Release\" },\n\n    { \"name\": \"x64-Debug-Clang\"    , \"configurePreset\": \"x64-Debug-Clang\" },\n    { \"name\": \"x64-Release-Clang\"  , \"configurePreset\": \"x64-Release-Clang\" },\n    { \"name\": \"x86-Debug-Clang\"    , \"configurePreset\": \"x86-Debug-Clang\" },\n    { \"name\": \"x86-Release-Clang\"  , \"configurePreset\": \"x86-Release-Clang\" },\n    { \"name\": \"arm64-Debug-Clang\"  , \"configurePreset\": \"arm64-Debug-Clang\" },\n    { \"name\": \"arm64-Release-Clang\", \"configurePreset\": \"arm64-Release-Clang\" },\n\n    { \"name\": \"x64-Debug-MinGW\"    , \"configurePreset\": \"x64-Debug-MinGW\" },\n    { \"name\": \"x64-Release-MinGW\"  , \"configurePreset\": \"x64-Release-MinGW\" },\n    { \"name\": \"x86-Debug-MinGW\"    , \"configurePreset\": \"x86-Debug-MinGW\" },\n    { \"name\": \"x86-Release-MinGW\"  , \"configurePreset\": \"x86-Release-MinGW\" },\n\n    { \"name\": \"x64-Debug-ICC\"    , \"configurePreset\": \"x64-Debug-ICC\" },\n    { \"name\": \"x64-Release-ICC\"  , \"configurePreset\": \"x64-Release-ICC\"},\n\n    { \"name\": \"x64-Debug-ICX\"    , \"configurePreset\": \"x64-Debug-ICX\" },\n    { \"name\": \"x64-Release-ICX\"  , \"configurePreset\": \"x64-Release-ICX\"},\n\n    { \"name\": \"x64-Debug-JPEG-PNG\"  , \"configurePreset\": \"x64-Debug-JPEG-PNG\" },\n    { \"name\": \"x64-Release-JPEG-PNG\", \"configurePreset\": \"x64-Release-JPEG-PNG\"}\n  ]\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.544921875,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n- Employees can reach out at [aka.ms/opensource/moderation-support](https://aka.ms/opensource/moderation-support)\n"
        },
        {
          "name": "Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "DDSTextureLoader",
          "type": "tree",
          "content": null
        },
        {
          "name": "DDSView",
          "type": "tree",
          "content": null
        },
        {
          "name": "DirectXTex",
          "type": "tree",
          "content": null
        },
        {
          "name": "DirectXTex_Desktop_2019.sln",
          "type": "blob",
          "size": 6.765625,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.28729.10\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_Desktop_2019.vcxproj\", \"{371B9FA9-4C90-4AC6-A123-ACED756D6C77}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texassemble\", \"Texassemble\\Texassemble_Desktop_2019.vcxproj\", \"{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texconv\", \"Texconv\\Texconv_Desktop_2019.vcxproj\", \"{C3A65381-8FD3-4F69-B29E-654B4B0ED136}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DDSView\", \"DDSView\\DDSView_Desktop_2019.vcxproj\", \"{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tools\", \"Tools\", \"{AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Sample\", \"Sample\", \"{E14090F7-2FE9-47EE-A331-14ED71801FDE}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texdiag\", \"Texdiag\\texdiag_Desktop_2019.vcxproj\", \"{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{A40FB626-EA42-48D5-AE40-EE5A6FD3742E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|x86 = Debug|x86\n\t\tDebug|x64 = Debug|x64\n\t\tProfile|x86 = Profile|x86\n\t\tProfile|x64 = Profile|x64\n\t\tRelease|x86 = Release|x86\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.Build.0 = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.Build.0 = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.Build.0 = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.Build.0 = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.ActiveCfg = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.Build.0 = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.ActiveCfg = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.Build.0 = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.Build.0 = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.Build.0 = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.Build.0 = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.ActiveCfg = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.Build.0 = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.Build.0 = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.Build.0 = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.Build.0 = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.Build.0 = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.ActiveCfg = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.Build.0 = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.ActiveCfg = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.Build.0 = Release|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x86.Build.0 = Debug|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x64.Build.0 = Debug|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x86.Build.0 = Profile|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x64.Build.0 = Profile|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x86.ActiveCfg = Release|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x86.Build.0 = Release|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x64.ActiveCfg = Release|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x64.Build.0 = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.Build.0 = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.Build.0 = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.Build.0 = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.ActiveCfg = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84} = {E14090F7-2FE9-47EE-A331-14ED71801FDE}\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {CFB3C228-4C26-4746-8E0C-71C310403E8C}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_Desktop_2019_Win10.sln",
          "type": "blob",
          "size": 7.4833984375,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.28729.10\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_Desktop_2019_Win10.vcxproj\", \"{371B9FA9-4C90-4AC6-A123-ACED756D6C77}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{5200A2F8-5215-421E-BCE6-E8DCDAB7779D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texassemble\", \"Texassemble\\Texassemble_Desktop_2019_Win10.vcxproj\", \"{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texconv\", \"Texconv\\Texconv_Desktop_2019_Win10.vcxproj\", \"{C3A65381-8FD3-4F69-B29E-654B4B0ED136}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texdiag\", \"Texdiag\\texdiag_Desktop_2019_Win10.vcxproj\", \"{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tools\", \"Tools\", \"{D5A15D28-50AF-4CFA-81F5-3968975BB78C}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|ARM64 = Debug|ARM64\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tProfile|ARM64 = Profile|ARM64\n\t\tProfile|x64 = Profile|x64\n\t\tProfile|x86 = Profile|x86\n\t\tRelease|ARM64 = Release|ARM64\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.Build.0 = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.Build.0 = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.Build.0 = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.Build.0 = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.ActiveCfg = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.Build.0 = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.ActiveCfg = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.Build.0 = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.Build.0 = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.Build.0 = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.ActiveCfg = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.Build.0 = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.Build.0 = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.Build.0 = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.Build.0 = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.Build.0 = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.Build.0 = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.ActiveCfg = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.Build.0 = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.ActiveCfg = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.Build.0 = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.Build.0 = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.Build.0 = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.ActiveCfg = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.Build.0 = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.Build.0 = Release|Win32\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1} = {D5A15D28-50AF-4CFA-81F5-3968975BB78C}\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136} = {D5A15D28-50AF-4CFA-81F5-3968975BB78C}\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D} = {D5A15D28-50AF-4CFA-81F5-3968975BB78C}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {22D52797-6BAE-4409-AE3B-513587E92758}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_Desktop_2022.sln",
          "type": "blob",
          "size": 6.765625,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 16.0.28729.10\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_Desktop_2022.vcxproj\", \"{371B9FA9-4C90-4AC6-A123-ACED756D6C77}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texassemble\", \"Texassemble\\Texassemble_Desktop_2022.vcxproj\", \"{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texconv\", \"Texconv\\Texconv_Desktop_2022.vcxproj\", \"{C3A65381-8FD3-4F69-B29E-654B4B0ED136}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DDSView\", \"DDSView\\DDSView_Desktop_2022.vcxproj\", \"{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tools\", \"Tools\", \"{AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Sample\", \"Sample\", \"{E14090F7-2FE9-47EE-A331-14ED71801FDE}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texdiag\", \"Texdiag\\texdiag_Desktop_2022.vcxproj\", \"{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{A40FB626-EA42-48D5-AE40-EE5A6FD3742E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|x86 = Debug|x86\n\t\tDebug|x64 = Debug|x64\n\t\tProfile|x86 = Profile|x86\n\t\tProfile|x64 = Profile|x64\n\t\tRelease|x86 = Release|x86\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.Build.0 = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.Build.0 = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.Build.0 = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.Build.0 = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.ActiveCfg = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.Build.0 = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.ActiveCfg = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.Build.0 = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.Build.0 = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.Build.0 = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.Build.0 = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.ActiveCfg = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.Build.0 = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.Build.0 = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.Build.0 = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.Build.0 = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.Build.0 = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.ActiveCfg = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.Build.0 = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.ActiveCfg = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.Build.0 = Release|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x86.Build.0 = Debug|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Debug|x64.Build.0 = Debug|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x86.Build.0 = Profile|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Profile|x64.Build.0 = Profile|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x86.ActiveCfg = Release|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x86.Build.0 = Release|Win32\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x64.ActiveCfg = Release|x64\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84}.Release|x64.Build.0 = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.Build.0 = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.Build.0 = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.Build.0 = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.ActiveCfg = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\t\t{9D3EDCAD-A800-43F0-B77F-FE6E4DFA3D84} = {E14090F7-2FE9-47EE-A331-14ED71801FDE}\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D} = {AEA1D9F7-EA95-4BF7-8E6D-0EA068077943}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {CFB3C228-4C26-4746-8E0C-71C310403E8C}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_Desktop_2022_Win10.sln",
          "type": "blob",
          "size": 7.484375,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.5.33516.290\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_Desktop_2022_Win10.vcxproj\", \"{371B9FA9-4C90-4AC6-A123-ACED756D6C77}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{5200A2F8-5215-421E-BCE6-E8DCDAB7779D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texassemble\", \"Texassemble\\Texassemble_Desktop_2022_Win10.vcxproj\", \"{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texconv\", \"Texconv\\Texconv_Desktop_2022_Win10.vcxproj\", \"{C3A65381-8FD3-4F69-B29E-654B4B0ED136}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"texdiag\", \"Texdiag\\texdiag_Desktop_2022_Win10.vcxproj\", \"{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Tools\", \"Tools\", \"{1D8F4A7D-3102-44C6-B9B7-617F263675F2}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|ARM64 = Debug|ARM64\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tProfile|ARM64 = Profile|ARM64\n\t\tProfile|x64 = Profile|x64\n\t\tProfile|x86 = Profile|x86\n\t\tRelease|ARM64 = Release|ARM64\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x64.Build.0 = Debug|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Debug|x86.Build.0 = Debug|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x64.Build.0 = Profile|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Profile|x86.Build.0 = Profile|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.ActiveCfg = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x64.Build.0 = Release|x64\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.ActiveCfg = Release|Win32\n\t\t{371B9FA9-4C90-4AC6-A123-ACED756D6C77}.Release|x86.Build.0 = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x64.Build.0 = Debug|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x64.Build.0 = Profile|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.ActiveCfg = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x64.Build.0 = Release|x64\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1}.Release|x86.Build.0 = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x64.Build.0 = Debug|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Debug|x86.Build.0 = Debug|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x64.Build.0 = Profile|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Profile|x86.Build.0 = Profile|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.ActiveCfg = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x64.Build.0 = Release|x64\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.ActiveCfg = Release|Win32\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136}.Release|x86.Build.0 = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x64.Build.0 = Debug|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Debug|x86.Build.0 = Debug|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|ARM64.ActiveCfg = Profile|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|ARM64.Build.0 = Profile|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.ActiveCfg = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x64.Build.0 = Profile|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.ActiveCfg = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Profile|x86.Build.0 = Profile|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.ActiveCfg = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x64.Build.0 = Release|x64\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.ActiveCfg = Release|Win32\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D}.Release|x86.Build.0 = Release|Win32\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8F18CBD7-4116-4956-BCD8-20D688A4CBD1} = {1D8F4A7D-3102-44C6-B9B7-617F263675F2}\n\t\t{C3A65381-8FD3-4F69-B29E-654B4B0ED136} = {1D8F4A7D-3102-44C6-B9B7-617F263675F2}\n\t\t{8E31A619-F4F8-413F-A973-4EE37B1AAA5D} = {1D8F4A7D-3102-44C6-B9B7-617F263675F2}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {22D52797-6BAE-4409-AE3B-513587E92758}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_GDK_2019.sln",
          "type": "blob",
          "size": 3.4765625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.30404.54\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex_GDK_2019\", \"DirectXTex\\DirectXTex_GDK_2019.vcxproj\", \"{E66DD892-857B-4E89-B135-5E2A971A9933}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{AB602393-CA4A-4D64-913E-E37D85A6CC6D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Gaming.Desktop.x64 = Debug|Gaming.Desktop.x64\n\t\tDebug|Gaming.Xbox.Scarlett.x64 = Debug|Gaming.Xbox.Scarlett.x64\n\t\tDebug|Gaming.Xbox.XboxOne.x64 = Debug|Gaming.Xbox.XboxOne.x64\n\t\tProfile|Gaming.Desktop.x64 = Profile|Gaming.Desktop.x64\n\t\tProfile|Gaming.Xbox.Scarlett.x64 = Profile|Gaming.Xbox.Scarlett.x64\n\t\tProfile|Gaming.Xbox.XboxOne.x64 = Profile|Gaming.Xbox.XboxOne.x64\n\t\tRelease|Gaming.Desktop.x64 = Release|Gaming.Desktop.x64\n\t\tRelease|Gaming.Xbox.Scarlett.x64 = Release|Gaming.Xbox.Scarlett.x64\n\t\tRelease|Gaming.Xbox.XboxOne.x64 = Release|Gaming.Xbox.XboxOne.x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Desktop.x64.ActiveCfg = Debug|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Desktop.x64.Build.0 = Debug|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.Scarlett.x64.ActiveCfg = Debug|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.Scarlett.x64.Build.0 = Debug|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.XboxOne.x64.ActiveCfg = Debug|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.XboxOne.x64.Build.0 = Debug|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Desktop.x64.ActiveCfg = Profile|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Desktop.x64.Build.0 = Profile|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.Scarlett.x64.ActiveCfg = Profile|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.Scarlett.x64.Build.0 = Profile|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.XboxOne.x64.ActiveCfg = Profile|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.XboxOne.x64.Build.0 = Profile|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Desktop.x64.ActiveCfg = Release|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Desktop.x64.Build.0 = Release|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.Scarlett.x64.ActiveCfg = Release|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.Scarlett.x64.Build.0 = Release|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.XboxOne.x64.ActiveCfg = Release|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.XboxOne.x64.Build.0 = Release|Gaming.Xbox.XboxOne.x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {40D61785-B6CB-4A60-89E6-544E89B61BE0}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_GDK_2022.sln",
          "type": "blob",
          "size": 3.4765625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 16.0.30404.54\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex_GDK_2022\", \"DirectXTex\\DirectXTex_GDK_2022.vcxproj\", \"{E66DD892-857B-4E89-B135-5E2A971A9933}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{AB602393-CA4A-4D64-913E-E37D85A6CC6D}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Gaming.Desktop.x64 = Debug|Gaming.Desktop.x64\n\t\tDebug|Gaming.Xbox.Scarlett.x64 = Debug|Gaming.Xbox.Scarlett.x64\n\t\tDebug|Gaming.Xbox.XboxOne.x64 = Debug|Gaming.Xbox.XboxOne.x64\n\t\tProfile|Gaming.Desktop.x64 = Profile|Gaming.Desktop.x64\n\t\tProfile|Gaming.Xbox.Scarlett.x64 = Profile|Gaming.Xbox.Scarlett.x64\n\t\tProfile|Gaming.Xbox.XboxOne.x64 = Profile|Gaming.Xbox.XboxOne.x64\n\t\tRelease|Gaming.Desktop.x64 = Release|Gaming.Desktop.x64\n\t\tRelease|Gaming.Xbox.Scarlett.x64 = Release|Gaming.Xbox.Scarlett.x64\n\t\tRelease|Gaming.Xbox.XboxOne.x64 = Release|Gaming.Xbox.XboxOne.x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Desktop.x64.ActiveCfg = Debug|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Desktop.x64.Build.0 = Debug|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.Scarlett.x64.ActiveCfg = Debug|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.Scarlett.x64.Build.0 = Debug|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.XboxOne.x64.ActiveCfg = Debug|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Debug|Gaming.Xbox.XboxOne.x64.Build.0 = Debug|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Desktop.x64.ActiveCfg = Profile|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Desktop.x64.Build.0 = Profile|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.Scarlett.x64.ActiveCfg = Profile|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.Scarlett.x64.Build.0 = Profile|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.XboxOne.x64.ActiveCfg = Profile|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Profile|Gaming.Xbox.XboxOne.x64.Build.0 = Profile|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Desktop.x64.ActiveCfg = Release|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Desktop.x64.Build.0 = Release|Gaming.Desktop.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.Scarlett.x64.ActiveCfg = Release|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.Scarlett.x64.Build.0 = Release|Gaming.Xbox.Scarlett.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.XboxOne.x64.ActiveCfg = Release|Gaming.Xbox.XboxOne.x64\n\t\t{E66DD892-857B-4E89-B135-5E2A971A9933}.Release|Gaming.Xbox.XboxOne.x64.Build.0 = Release|Gaming.Xbox.XboxOne.x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {40D61785-B6CB-4A60-89E6-544E89B61BE0}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_GXDK_PC_2019.sln",
          "type": "blob",
          "size": 1.7275390625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 15.0.28307.1259\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_GXDK_PC_2019.vcxproj\", \"{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{06070D23-4542-4B1C-9DC2-846B1694E365}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug_Scarlett|x64 = Debug_Scarlett|x64\n\t\tDebug|x64 = Debug|x64\n\t\tRelease_Scarlett|x64 = Release_Scarlett|x64\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug_Scarlett|x64.ActiveCfg = Debug_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug_Scarlett|x64.Build.0 = Debug_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug|x64.Build.0 = Debug|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release_Scarlett|x64.ActiveCfg = Release_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release_Scarlett|x64.Build.0 = Release_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release|x64.ActiveCfg = Release|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {8EC36707-6F26-43CF-8458-C3E4E1113C22}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_GXDK_PC_2022.sln",
          "type": "blob",
          "size": 1.7275390625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 15.0.28307.1259\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_GXDK_PC_2022.vcxproj\", \"{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{06070D23-4542-4B1C-9DC2-846B1694E365}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug_Scarlett|x64 = Debug_Scarlett|x64\n\t\tDebug|x64 = Debug|x64\n\t\tRelease_Scarlett|x64 = Release_Scarlett|x64\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug_Scarlett|x64.ActiveCfg = Debug_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug_Scarlett|x64.Build.0 = Debug_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Debug|x64.Build.0 = Debug|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release_Scarlett|x64.ActiveCfg = Release_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release_Scarlett|x64.Build.0 = Release_Scarlett|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release|x64.ActiveCfg = Release|x64\n\t\t{9E4D1C18-9E5E-4B35-83BE-74830B9B3C34}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {8EC36707-6F26-43CF-8458-C3E4E1113C22}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DirectXTex_Windows10_2022.sln",
          "type": "blob",
          "size": 1.990234375,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.7.34009.444\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"DirectXTex\", \"DirectXTex\\DirectXTex_Windows10_2022.vcxproj\", \"{FB3F52B5-BFE8-43FD-836F-363735DAB738}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{8D3EE191-AC2D-4DA6-97EB-058D8A28B933}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|ARM64 = Debug|ARM64\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|ARM64 = Release|ARM64\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|ARM64.ActiveCfg = Debug|ARM64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|ARM64.Build.0 = Debug|ARM64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|x64.Build.0 = Debug|x64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Debug|x86.Build.0 = Debug|Win32\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|ARM64.ActiveCfg = Release|ARM64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|ARM64.Build.0 = Release|ARM64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|x64.ActiveCfg = Release|x64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|x64.Build.0 = Release|x64\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|x86.ActiveCfg = Release|Win32\n\t\t{FB3F52B5-BFE8-43FD-836F-363735DAB738}.Release|x86.Build.0 = Release|Win32\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {E507EBC0-EBB7-4519-A886-15B7E0917E2F}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8564453125,
          "content": "![DirectX Logo](https://raw.githubusercontent.com/wiki/Microsoft/DirectXTex/X_jpg.jpg)\n\n# DirectXTex texture processing library\n\nhttp://go.microsoft.com/fwlink/?LinkId=248926\n\nCopyright (c) Microsoft Corporation.\n\n**October 28, 2024**\n\nThis package contains DirectXTex, a shared source library for reading and writing ``.DDS`` files, and performing various texture content processing operations including resizing, format conversion, mip-map generation, block compression for Direct3D runtime texture resources, and height-map to normal-map conversion. This library makes use of the Windows Image Component (WIC) APIs. It also includes ``.TGA`` and ``.HDR`` readers and writers since these image file formats are commonly used for texture content processing pipelines, but are not currently supported by a built-in WIC codec.\n\nThis code is designed to build with Visual Studio 2019 (16.11), Visual Studio 2022, clang for Windows v12 or later, or MinGW 12.2. Use of the Windows 10 May 2020 Update SDK ([19041](https://walbourn.github.io/windows-10-may-2020-update-sdk/)) or later is required for Visual Studio. It can also be built for Windows Subsystem for Linux using GCC 11 or later.\n\nThese components are designed to work without requiring any content from the legacy DirectX SDK. For details, see [Where is the DirectX SDK?](https://aka.ms/dxsdk).\n\n## Directory Layout\n\n* ``DirectXTex\\``\n\n  + This contains the DirectXTex library. This includes a full-featured DDS reader and writer including legacy format conversions, a TGA reader and writer, a HDR reader and writer, a WIC-based bitmap reader and writer (BMP, JPEG, PNG, TIFF, and HD Photo), and various texture processing functions. This is intended primarily for tool usage.\n\n> The majority of the header files here are intended for internal implementation of the library only (``BC.h``, ``BCDirectCompute.h``, ``DDS.h``, ``DirectXTexP.h``, etc.). Only ``DirectXTex.h`` and ``DirectXTex.inl`` are meant as the 'public' header for the library.\n\n* ``Auxiliary\\``\n\n  + Contains optional source files for the DirectXTex library, such as adapter loading functions using the OpenEXR library, Xbox texture tiling extensions, etc.\n\n* ``Common\\``\n\n  + Contains shared source headers used by the DirectXTex library and tools.\n\n* ``Texconv\\``\n\n  + This DirectXTex sample is an implementation of the [texconv](https://github.com/Microsoft/DirectXTex/wiki/Texconv) command-line texture utility from the DirectX SDK utilizing DirectXTex rather than D3DX.\n\n    It supports the same arguments as the *Texture Conversion Tool Extended* (``texconvex.exe``) legacy DirectX SDK utility. The primary differences are the ``-10`` and ``-11`` arguments are not applicable and the filter names (``POINT``, ``LINEAR``, ``CUBIC``, ``FANT`` or ``BOX``, ``TRIANGLE``, ``*_DITHER``, ``*_DITHER_DIFFUSION``). This also includes support for the JPEG XR (HD Photo) bitmap format.\n\n* ``Texassemble\\``\n\n  + This DirectXTex sample is a [command-line utility](https://github.com/Microsoft/DirectXTex/wiki/Texassemble) for creating cubemaps, volume maps, or texture arrays from a set of individual input image files.\n\n* ``Texdiag\\``\n\n  + This DirectXTex sample is a [command-line utility](https://github.com/Microsoft/DirectXTex/wiki/Texdiag) for analyzing image contents, primarily for debugging purposes.\n\n* ``DDSView\\``\n\n  + This DirectXTex sample is a simple Direct3D 11-based viewer for DDS files. For array textures or volume maps, the \"<\" and \">\" keyboard keys will show different images contained in the DDS. The \"1\" through \"0\" keys can also be used to jump to a specific image index.\n\n* ``DDSTextureLoader\\``\n\n  + This contains a streamlined version of the legacy DirectX SDK sample *DDSWithoutD3DX11* texture loading code for a simple light-weight runtime DDS loader. There are versions for Direct3D 9, Direct3D 11, and Direct3D 12. This performs no runtime pixel data conversions. This is ideal for runtime usage, and supports the full complement of Direct3D texture  resources (1D, 2D, volume maps, cubemaps, mipmap levels, texture arrays, BC formats, etc.).\n\n* ``ScreenGrab\\``\n\n  + This contains texture writing modules for Direct3D 9, Direct3D 11, and Direct3D 12 primarily intended for creating screenshots. The images are written as a DDS or as an image file format using WIC.\n\n* ``WICTextureLoader\\``\n\n  + This contains a Direct3D 9, Direct3D 11 and Direct3D 12 2D texture loader that uses WIC to load a bitmap (BMP, JPEG, PNG, HD Photo, or other WIC supported file container), resize if needed based on the current feature level (or by explicit parameter), format convert to a DXGI_FORMAT if required, and then create a 2D texture. Note this does not support 1D textures, volume textures, cubemaps, or texture arrays. DDSTextureLoader is recommended for fully \"precooked\" textures for maximum performance and image quality, but this loader can be useful for creating simple 2D texture from standard image files at runtime.\n\n> DDSTextureLoader11, ScreenGrab11, and WICTextureLoader11 are 'stand-alone' versions of the same modules provided in the [DirectX Tool Kit for DX11](https://github.com/Microsoft/DirectXTK)\n\n> DDSTextureLoader12, ScreenGrab12, and WICTextureLoader12 are 'stand-alone' versions of the same modules provided in the [DirectX Tool Kit for DX12](https://github.com/Microsoft/DirectXTK12).\n\n* ``build\\``\n\n  + Contains YAML files for the build pipelines along with some miscellaneous build files and scripts.\n\n## Documentation\n\nDocumentation is available on the [GitHub wiki](https://github.com/Microsoft/DirectXTex/wiki).\n\n## Notices\n\nAll content and source code for this package are subject to the terms of the [MIT License](https://github.com/microsoft/DirectXTex/blob/main/LICENSE).\n\nFor the latest version of DirectXTex, bug reports, etc. please visit the project site on [GitHub](https://github.com/microsoft/DirectXTex).\n\n## Release Notes\n\nFOR SECURITY ADVISORIES, see [GitHub](https://github.com/microsoft/DirectXTex/security/advisories).\n\nFor a full change history, see [CHANGELOG.md](https://github.com/microsoft/DirectXTex/blob/main/CHANGELOG.md).\n\n* Starting with the July 2022 release, the ``bool forceSRGB`` parameter for the CreateTextureEx and CreateShaderResourceViewEx functions is now a ``CREATETEX_FLAGS`` typed enum bitmask flag parameter. This may have a *breaking change* impact to client code. Replace ``true`` with ``CREATETEX_FORCE_SRGB`` and ``false`` with ``CREATETEX_DEFAULT``.\n\n* Starting with the June 2020 release, this library makes use of typed enum bitmask flags per the recommendation of the _C++ Standard_ section *17.5.2.1.3 Bitmask types*. This is consistent with Direct3D 12's use of the ``DEFINE_ENUM_FLAG_OPERATORS`` macro. This may have *breaking change* impacts to client code:\n\n  * You cannot pass the ``0`` literal as your flags value. Instead you must make use of the appropriate default enum value: ``CP_FLAGS_NONE``, ``DDS_FLAGS_NONE``, ``WIC_FLAGS_NONE``, ``TEX_FR_ROTATE0``, ``TEX_FILTER_DEFAULT``, ``TEX_FILTER_DEFAULT``, ``TEX_FILTER_DEFAULT``, ``CNMAP_DEFAULT``, or ``CNMAP_DEFAULT``.\n\n  * Use the enum type instead of ``DWORD`` if building up flags values locally with bitmask operations. For example, ```DDS_FLAGS flags = DDS_FLAGS_NONE; if (...) flags |= DDS_FLAGS_EXPAND_LUMINANCE;```\n\n  * In cases where some of the flags overlap, you can use the ``|`` to combine the relevant types: ``TEX_FILTER_FLAGS`` filter modes combine with ``WIC_FLAGS``, ``TEX_FILTER_FLAGS`` sRGB flags combine with ``TEX_PMALPHA_FLAGS`` or ``TEX_COMPRESS_FLAGS``. No other bitwise operators are defined. For example, ```WIC_FLAGS wicFlags = WIC_FLAGS_NONE | TEX_FILTER_CUBIC;```\n\n* WICTextureLoader cannot load ``.TGA`` or ``.HDR`` files unless the system has a 3rd party WIC codec installed. You must use the DirectXTex library for TGA/HDR file format support without relying on an add-on WIC codec.\n\n* The UWP projects and the Win10 classic desktop project include configurations for the ARM64 platform. Building these requires installing the ARM64 toolset.\n\n* For ARM64/AArch64 development, the VS 2022 compiler is strongly recommended over the VS 2019 toolset. The Windows SDK (26100 or later) is not compatible with VS 2019 for Win32 on ARM64 development. *Note that the ARM32/AArch32 platform is [deprecated](https://learn.microsoft.com/windows/arm/arm32-to-arm64)*.\n\n* When using clang/LLVM for the ARM64/AArch64 platform, the Windows 11 SDK ([22000](https://walbourn.github.io/windows-sdk-for-windows-11/)) or later is required.\n\n* The ``CompileShaders.cmd`` script must have Windows-style (CRLF) line-endings. If it is changed to Linux-style (LF) line-endings, it can fail to build all the required shaders.\n\n* As of the October 2024 release, the command-line tools also support GNU-style long options using ``--``. All existing switches continue to function, but some of the `-` options are now deprecated per this table:\n\n|texassemble||texconv||texdiag||\n|---|---|---|---|---|---|\n|-tonemap|--tonemap|-badtails|--bad-tails|-badtails|--bad-tails|\n|-bgcolor|--gif-bg-color|-fixbc4x4|--fix-bc-4x4|-ignoremips|--ignore-mips|\n|-swizzle|--swizzle|-ignoremips|--ignore-mips|-permissive|--permissive|\n|-stripmips|--strip-mips|-inverty|--invert-y|-targetx|--target-x||-targety|--target-y|\n|||-keepcoverage|--keep-coverage|||\n|||-permissive|--permissive|||\n|||-reconstructz|--reconstruct-z|||\n|||-rotatecolor|--rotate-color|||\n|||-singleproc|--single-proc|||\n|||-swizzle|--swizzle|||\n|||-tgazeroalpha|--tga-zero-alpha|||\n|||-timing|--timing|||\n|||-tonemap|--tonemap|||\n|||-wiclossless|--wic-lossless|||\n|||-wicmulti|--wic-multiframe|||\n|||-x2bias|--x2-bias|||\n\n## Support\n\nFor questions, consider using [Stack Overflow](https://stackoverflow.com/questions/tagged/directxtk) with the *directxtk* tag, or the [DirectX Discord Server](https://discord.gg/directx) in the *dx12-developers* or *dx9-dx11-developers* channel.\n\nFor bug reports and feature requests, please use GitHub [issues](https://github.com/microsoft/DirectXTex/issues) for this project.\n\n## Contributing\n\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nTests for new features should also be submitted as a PR to the [Test Suite](https://github.com/walbourn/directxtextest/wiki) repository.\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Trademarks\n\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow [Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general). Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.\n\n## Credits\n\nThe DirectXTex library is the work of Chuck Walbourn, with contributions from Matt Lee, Xin Huang, Craig Peeper, and the numerous other Microsoft engineers who developed the D3DX utility library over the years.\n\nThanks to Paul Penson for his help with the implementation of ``MemoryStreamOnBlob``.\n\nThanks to Andrew Farrier and Scott Matloff for their on-going help with code reviews.\n\nThanks to Park DongHa for their contribution of the JPEG/PNG auxiliary functions.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.59375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.9 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet) and [Xamarin](https://github.com/xamarin).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/security.md/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/security.md/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/security.md/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "ScreenGrab",
          "type": "tree",
          "content": null
        },
        {
          "name": "Texassemble",
          "type": "tree",
          "content": null
        },
        {
          "name": "Texconv",
          "type": "tree",
          "content": null
        },
        {
          "name": "Texdiag",
          "type": "tree",
          "content": null
        },
        {
          "name": "WICTextureLoader",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}