{
  "metadata": {
    "timestamp": 1736565469042,
    "page": 324,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rttrorg/rttr",
      "stars": 3222,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 7.73828125,
          "content": "####################################################################################\n#                                                                                  #\n#  Copyright (c) 2014 - 2018 Axel Menzel <info@rttr.org>                           #\n#                                                                                  #\n#  This file is part of RTTR (Run Time Type Reflection)                            #\n#  License: MIT License                                                            #\n#                                                                                  #\n#  Permission is hereby granted, free of charge, to any person obtaining           #\n#  a copy of this software and associated documentation files (the \"Software\"),    #\n#  to deal in the Software without restriction, including without limitation       #\n#  the rights to use, copy, modify, merge, publish, distribute, sublicense,        #\n#  and/or sell copies of the Software, and to permit persons to whom the           #\n#  Software is furnished to do so, subject to the following conditions:            #\n#                                                                                  #\n#  The above copyright notice and this permission notice shall be included in      #\n#  all copies or substantial portions of the Software.                             #\n#                                                                                  #\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      #\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        #\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     #\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          #\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   #\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   #\n#  SOFTWARE.                                                                       #\n#                                                                                  #\n####################################################################################\n\nshallow_clone: true\n\nenvironment:\n  FTP_USER:\n    secure: NkQyMysYo/FDWRbnKqLMsg==\n  FTP_PASSWORD:\n    secure: sXMB2ufJJ3rxpSjo71XidGje9XPCg0oQIpNRGpH4Gv0=\n  matrix:\n  - COMPILER: MSVC_15\n    ARCHITECTURE: x86\n    TESTS_ONLY: true\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n  - COMPILER: MSVC_15\n    ARCHITECTURE: x64\n    TESTS_ONLY: true\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n  - COMPILER: MSVC_14\n    ARCHITECTURE: x86\n    TESTS_ONLY: true\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n  - COMPILER: MSVC_14\n    ARCHITECTURE: x64\n    TESTS_ONLY: true\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n  - COMPILER: MINGW_492\n    ARCHITECTURE: x86\n    TESTS_ONLY: true\n  - COMPILER: MINGW_W64\n    ARCHITECTURE: x64\n    TESTS_ONLY: true\n  - COMPILER: MSVC_14\n    ARCHITECTURE: x64\n    BUILD_EXAMPLES: true\n    BUILD_BENCHMARKS: true\n    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n # uncheck this in order to build and upload the documentation   \n #- COMPILER: MSVC_14\n  # ARCHITECTURE: x64\n  # BUILD_DOCU: true\n  # APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n\nbuild:\n  verbosity: detailed\n  parallel: true\n\ninstall:\n  #######################################################################################\n  # All external dependencies are installed in C:\\projects\\deps\n  #######################################################################################\n  - mkdir C:\\projects\\deps\n  - cd C:\\projects\\deps\n\n  #######################################################################################\n  # Install Ninja\n  #######################################################################################\n  - set NINJA_URL=\"https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip\"\n  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip\n  - 7z x ninja.zip -oC:\\projects\\deps\\ninja > nul\n  - set PATH=C:\\projects\\deps\\ninja;%PATH%\n  - ninja --version\n  \n  #######################################################################################\n  # Install doxygen\n  #######################################################################################\n  - ps: >-\n      If ($env:BUILD_DOCU -Match \"true\") {\n        $env:DOXYGEN_URL=\"http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.10.windows.bin.zip\"\n        appveyor DownloadFile $env:DOXYGEN_URL -FileName doxygen.zip\n        7z x doxygen.zip -oC:/projects/deps/doxygen-1.8.10 > $null\n        $env:PATH=\"C:/projects/deps/doxygen-1.8.10;$env:PATH\"\n        doxygen --version\n      }\n\n  #######################################################################################\n  # CMake\n  #######################################################################################\n  - cmake --version\n  \n  #######################################################################################\n  # setup boost\n  #######################################################################################\n  - set BOOST_ROOT=C:\\Libraries\\boost_1_63_0\n  - set BOOST_LIBRARYDIR=C:\\Libraries\\boost_1_63_0\\lib64-msvc-14.0\n\nbefore_build:\n  - cmd: cd C:\\projects\\rttr\n  - IF \"%ARCHITECTURE%\" == \"x86\" IF \"%COMPILER%\" == \"MSVC_15\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\vsdevcmd.bat\" -arch=x86 -host_arch=x64\n  - IF \"%ARCHITECTURE%\" == \"x64\" IF \"%COMPILER%\" == \"MSVC_15\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\vsdevcmd.bat\" -arch=x64 -host_arch=x64\n  - IF \"%ARCHITECTURE%\" == \"x86\" IF \"%COMPILER%\" == \"MSVC_14\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\vsvars32.bat\"\n  - IF \"%ARCHITECTURE%\" == \"x64\" IF \"%COMPILER%\" == \"MSVC_14\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_amd64\\vcvarsx86_amd64.bat\"\n  - IF \"%ARCHITECTURE%\" == \"x86\" IF \"%COMPILER%\" == \"MSVC_12\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\vsvars32.bat\"\n  - IF \"%ARCHITECTURE%\" == \"x64\" IF \"%COMPILER%\" == \"MSVC_12\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\\x86_amd64\\vcvarsx86_amd64.bat\"\n  - IF \"%ARCHITECTURE%\" == \"x86\" IF \"%COMPILER%\" == \"MINGW_482\" set PATH=C:\\Qt\\Tools\\mingw482_32\\bin;%PATH%\n  - IF \"%ARCHITECTURE%\" == \"x86\" IF \"%COMPILER%\" == \"MINGW_492\" set PATH=C:\\Qt\\Tools\\mingw492_32\\bin;%PATH%\n  - IF \"%ARCHITECTURE%\" == \"x64\" IF \"%COMPILER%\" == \"MINGW_W64\" set PATH=C:\\mingw-w64\\x86_64-6.3.0-posix-seh-rt_v5-rev1\\mingw64\\bin;%PATH%\n  - IF \"%BUILD_DOCU%\" == \"true\" choco install lftp --version 4.7.5\n  \n#######################################################################################\n# we can use Ninja for all configurations\n#######################################################################################\nbuild_script:\n  - mkdir build\n  - cd build\n  - cmake .. -G \"Ninja\" -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=%BUILD_EXAMPLES% -DBUILD_BENCHMARKS=%BUILD_BENCHMARKS% -DBUILD_WEBSITE_DOCU=%BUILD_DOCU%\n  - if \"%TESTS_ONLY%\" == \"true\" (ninja run_tests)\n  - if \"%BUILD_EXAMPLES%\" == \"true\" (ninja examples)\n  - if \"%BUILD_BENCHMARKS%\" == \"true\" (ninja bench_method && ninja bench_rttr_cast && ninja bench_variant)\n# when APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH is empty, we knew, we are on master branch\n  - if \"%BUILD_DOCU%\" == \"true\" ( if \"%APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH%\" == \"\" (ninja doc_website && echo \"Upload documentation...\" && lftp -c \"set ssl:verify-certificate no; open -u %FTP_USER%,%FTP_PASSWORD% ftp://server3.febas.net:21/; mirror -R doc_website/master doc_tmp\" && lftp -c \"set ssl:verify-certificate no; open -u %FTP_USER%,%FTP_PASSWORD% ftp://server3.febas.net:21/; rm -r doc\" && lftp -c \"set ssl:verify-certificate no; open -u %FTP_USER%,%FTP_PASSWORD% ftp://server3.febas.net:21/; mv doc_tmp doc\") )\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.013671875,
          "content": ".vscode\nbuild\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 14.1220703125,
          "content": "####################################################################################\n#                                                                                  #\n#  Copyright (c) 2014 - 2018 Axel Menzel <info@rttr.org>                           #\n#                                                                                  #\n#  This file is part of RTTR (Run Time Type Reflection)                            #\n#  License: MIT License                                                            #\n#                                                                                  #\n#  Permission is hereby granted, free of charge, to any person obtaining           #\n#  a copy of this software and associated documentation files (the \"Software\"),    #\n#  to deal in the Software without restriction, including without limitation       #\n#  the rights to use, copy, modify, merge, publish, distribute, sublicense,        #\n#  and/or sell copies of the Software, and to permit persons to whom the           #\n#  Software is furnished to do so, subject to the following conditions:            #\n#                                                                                  #\n#  The above copyright notice and this permission notice shall be included in      #\n#  all copies or substantial portions of the Software.                             #\n#                                                                                  #\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      #\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        #\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     #\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          #\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   #\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   #\n#  SOFTWARE.                                                                       #\n#                                                                                  #\n####################################################################################\n\nlanguage: cpp\ndist: trusty\nsudo: false\n\nenv:\n  global:\n    - ARCH_FLAGS_x86='-m32'\n    - ARCH_FLAGS_x86_64=''\n    - BUILD_DOCU=false\n    - secure: \"k1o939GwFc0AJY8cCprAeF9OYUs00Ad+ggrhzxtw4GLdjn0CYGnqrftHtkJ5WySDXj7rnEL4qur1oO19OeVGufhLQTV0+yian8meYppk7rlPIOOl6ygltTxMxNgvmkqCsHC1J1l+7vMEJUm1MunWedCnORWySoK2pZ89nAiMmzY/fjpsOKR8vpXQw5BTZPR775lYZyzbm8/ZY8eATd4EJGH+4YH/sTzYFa9SL2J/ieWR+SvALNLos7x6Civ0Nl6LXx5hXMenpSUpAbu7wBm6KDoL6vGHYa7oKrnJ5BAqOP4poNXF000riy3TENSO1sf+dGQJO8O2IQwe352VKw+paQ4s0SGe5lWAmn2hexU+dZ7rNO0LwA+bdt8XGIXZo2lvdHgsO2Ymj/wPLrqYHGwBgGceBilyD7ZAcKQ/OvHmvkHCytMSVhftcllsOZFwDen/5FliNTRI+Cs68pZUiT2PgT44t/8i5X3F1o8FlV9T+wDsPdH909g/pOFt4U3N8aGxst9bmrQvYAhVmPKtuxjz7ycBfsOTxON9HfTQFEGv3KCREdN8lzi/J9FBCFTtIwHbBKvEeaXrZ3oHSa9UoVG5VQtw14aBdzs7K2MrEYMxg4LCfSHe8ecYbRg1LM9uSdK5dcn/A9wLKEdFmU/pvbl3ryaF4KpL7w0fvNMC/k6o5tc=\"\n    - secure: \"1ogFHnhUroT3nA1HxyXN5/Hoek6LcTazRPTGpYjKAge8To/x614D6R9j2yu0EDOZalolq0VeOONnHLnss6aPGeMvvHH1rvoKTDQsFjsm1fB6qLRr/qpZXs+G4mxStarxrXr5487hEkPP10fEi/PSOx8Gme6Kny+tXHxDzP04ljcZYVvxWfkb+cQBCnYupbHk4hzfKRmPYcUn6lCPyOGIzwsHQQI/LubmkiU+wQ0zcLLsTZSThk+zt6FlxYWykZGL24yrqmoXRszx8dR14cWPzvkxVeEOe3OY9mNix1Z7ki2eVeEk8m7d70yPmV5p8F2/nPGC7kUXTvPrAL62CcE5moHubijJwKXJM6nBQJYCPGygnvRnWxnoqO/9JpDuds4Cv+tbJMgo2ViLPsYk3BgMnYo4z+p4JViN9P4/jzbhsVtWd4rnXmPt9j4FkED+Eyt8BUzXFdTAPpuzwZSvmYzzR8MdZE/telCAcWUoiS35IQcWJ0UmPpNZfR1Lll0cWQ+dTmjNETJvwognuaTAexL7m0uMhX6KQIZfap2H0w+CIua7+jl6eb9iyvXv9vZZEUCH2kTWnYXqBmDGRHG3tEp97o5+yWQm1qjweLvKAMRirdkSaZEL0lrsJ8mBS6Y+PQwAQxlu+P3pFEJ6uU3fJrKyciuWnVDZKyddIrJEZorXjOA=\"\n\nmatrix:\n  include:\n    \n     # check code formatting\n    - os: linux\n      compiler: gcc\n      env: NAME=\"check code formatting\" CHECK_FORMATTING=true\n      addons:\n        apt:\n          packages: ['vera++']\n      \n    # valgrind memory check\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.9', 'valgrind', 'ninja-build']\n      env: NAME=\"valgrind\" COMPILER=g++-4.9 ARCH=x64 CONF=Debug VALGRIND=true UNIT_TESTS=true\n\n    # check code coverage x86 => result https://coveralls.io/github/rttrorg/rttr\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.8-multilib', 'linux-libc-dev:i386']\n      after_success:\n        - pip install --user urllib3[secure] cpp-coveralls\n        - coveralls -e 3rd_party -e src/benchmarks -e src/unit_tests -i src/rttr --gcov-options '\\-lp' --gcov 'gcov-4.8'\n      env: NAME=\"code coverage x86\" COMPILER=g++-4.8 ARCH=x86 CONF=Debug GCOV_FLAGS='--coverage' UNIT_TESTS=true\n    \n    # check code coverage x64 => result https://coveralls.io/github/rttrorg/rttr\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.8-multilib']\n      after_success:\n        - pip install --user urllib3[secure] cpp-coveralls\n        - coveralls -e 3rd_party -e src/benchmarks -e src/unit_tests -i src/rttr --gcov-options '\\-lp' --gcov 'gcov-4.8'\n      env: NAME=\"code coverage x64\" COMPILER=g++-4.8 ARCH=x86_64 CONF=Debug GCOV_FLAGS='--coverage' UNIT_TESTS=true\n    \n    # build docu and upload to server\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.8-multilib', 'linux-libc-dev:i386', 'lftp']\n      after_success:\n        - |\n          echo \"current branch: ${TRAVIS_BRANCH}\"\n          if [[ \"${TRAVIS_BRANCH}\" == \"master\" ]]; then\n            echo \"Upload documentation...\"\n            lftp -c \"set ssl:verify-certificate no; open -u ${FTP_USER},${FTP_PASSWORD} ftp://server3.febas.net:21/; mirror -R ${TRAVIS_BUILD_DIR}/build/doc_website/master doc_tmp\"\n            lftp -c \"set ssl:verify-certificate no; open -u ${FTP_USER},${FTP_PASSWORD} ftp://server3.febas.net:21/; rm -r doc\"\n            lftp -c \"set ssl:verify-certificate no; open -u ${FTP_USER},${FTP_PASSWORD} ftp://server3.febas.net:21/; mv doc_tmp doc\"\n          fi\n      env: NAME=\"documentation build\" BUILD_DOCU=true COMPILER=g++-4.8 ARCH=x86 CONF=Release UNIT_TESTS=false\n\n    # Linux / GCC\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.9-multilib', 'linux-libc-dev:i386', 'ninja-build']\n      env: NAME=\"g++-4.9 x86\" COMPILER=g++-4.9 ARCH=x86 CONF=Release UNIT_TESTS=true\n\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-4.9', 'ninja-build']\n      env: NAME=\"g++-4.9 x64\" COMPILER=g++-4.9 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n\n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-5', 'ninja-build']\n      env: NAME=\"g++-5\" COMPILER=g++-5 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n      \n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-5', 'libboost-all-dev', 'ninja-build']\n      env: NAME=\"g++-5 - Build benchmarks & examples\" COMPILER=g++-5 ARCH=x86_64 CONF=Release UNIT_TESTS=true BUILD_EXAMPLES=true BUILD_BENCHMARKS=true\n      \n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-6', 'ninja-build']\n      env: NAME=\"g++-6\" COMPILER=g++-6 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n       \n    - os: linux\n      compiler: gcc\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['g++-7', 'libboost-all-dev', 'ninja-build']\n      env: NAME=\"g++-7\" COMPILER=g++-7 ARCH=x86_64 CONF=Release UNIT_TESTS=true BUILD_BENCHMARKS=true\n    \n    # Linux / CLang\n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']\n          packages: ['libstdc++-5-dev', 'clang-3.7', 'ninja-build']\n      env: COMPILER=clang++-3.7 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n      \n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']\n          packages: ['libstdc++-6-dev', 'clang-4.0', 'libboost-all-dev', 'ninja-build']\n      env: NAME=\"clang++-4.0 - build benchmarks & examples\" COMPILER=clang++-4.0 ARCH=x86_64 CONF=Release UNIT_TESTS=false BUILD_EXAMPLES=true BUILD_BENCHMARKS=true\n      \n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['libstdc++-5-dev', 'clang-3.8', 'ninja-build']\n      env: COMPILER=clang++-3.8 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n      \n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test']\n          packages: ['libstdc++-6-dev', 'clang-3.9', 'ninja-build']\n      env: COMPILER=clang++-3.9 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n      \n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']\n          packages: ['libstdc++-6-dev', 'clang-4.0', 'ninja-build']\n      env: COMPILER=clang++-4.0 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n     \n    - os: linux\n      compiler: clang\n      addons:\n        apt:\n          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']\n          packages: ['libstdc++-7-dev', 'clang-5.0',]\n      env: COMPILER=clang++-5.0 ARCH=x86_64 CONF=Release UNIT_TESTS=true\n\n    # OSX/Clang\n    - os: osx\n      osx_image: xcode9.2\n      compiler: clang\n      env: COMPILER=clang++ ARCH=x86 CONF=Release UNIT_TESTS=true BUILD_BENCHMARKS=true BUILD_EXAMPLES=true\n      \n    - os: osx\n      osx_image: xcode9.2\n      compiler: clang\n      env: COMPILER=clang++ ARCH=x86_64 CONF=Release UNIT_TESTS=true\n\n    - os: osx\n      osx_image: xcode9\n      compiler: clang\n      env: COMPILER=clang++ ARCH=x86_64 CONF=Release UNIT_TESTS=true\n\n    - os: osx\n      osx_image: xcode8.3\n      compiler: clang\n      env: COMPILER=clang++ ARCH=x86 CONF=Release UNIT_TESTS=true\n      \n    - os: osx\n      osx_image: xcode8.3\n      compiler: clang\n      env: COMPILER=clang++ ARCH=x86_64 CONF=Release UNIT_TESTS=true\n\n  allow_failures:\n    - env: NAME=\"documentation build\" BUILD_DOCU=true COMPILER=g++-4.8 ARCH=x86 CONF=Release UNIT_TESTS=false\n   \nbefore_install:\n  - export CIT_ROOT=`pwd`\n  - cd $CIT_ROOT\n\ninstall:\n  - DEPS_DIR=\"${TRAVIS_BUILD_DIR}/3rd_party\"\n  - cd ${DEPS_DIR}\n  #######################################################################################\n  # Setup default versions\n  #######################################################################################\n  - if [[ \"${LLVM_VERSION}\" == \"default\" ]]; then LLVM_VERSION=3.7.0; fi\n  - if [[ \"${COMPILER}\" != \"\" ]]; then export CXX=${COMPILER}; fi\n  - if [[ \"${COMPILER}\" == \"g++-4.8\" ]]; then export CC=gcc-4.8; fi\n  - if [[ \"${ARCH}\" == \"x86\" ]]; then export CMAKE_ARCH_FLAGS=-m32; fi\n  #######################################################################################\n  # Install a recent CMake (unless already installed on OS X)\n  #######################################################################################\n  - |\n    if [[ \"${TRAVIS_OS_NAME}\" == \"linux\" ]]; then\n      CMAKE_URL=\"http://www.cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz\"\n      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake\n      export PATH=${DEPS_DIR}/cmake/bin:${PATH}\n    else\n      brew upgrade cmake || brew install cmake ninja || brew link --overwrite cmake\n    fi\n  - cmake --version\n  #######################################################################################\n  # Install recent Doxygen\n  #######################################################################################\n  - |\n    if [[ \"${BUILD_DOCU}\" == \"true\" ]]; then\n      DOXYGEN_URL=\"http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.10.linux.bin.tar.gz\"\n      mkdir doxygen && travis_retry wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen\n      export PATH=${DEPS_DIR}/doxygen/bin:${PATH}\n    fi\n    \nbefore_script:\n  - cd ${TRAVIS_BUILD_DIR}\n  - mkdir build\n  - >\n      eval \"ARCH_FLAGS=\\${ARCH_FLAGS_${ARCH}}\" ;\n      (cd build && cmake\n      -DCMAKE_CXX_COMPILER=${COMPILER}\n      -DCMAKE_BUILD_TYPE=${CONF}\n      -DCMAKE_CXX_FLAGS=\"$ARCH_FLAGS $CMAKE_ADDITIONAL_FLAGS $GCOV_FLAGS\"\n      -DBUILD_WEBSITE_DOCU=$BUILD_DOCU\n      -DBUILD_EXAMPLES=$BUILD_EXAMPLES\n      -DBUILD_BENCHMARKS=$BUILD_BENCHMARKS\n      ..)\n\nscript:\n  # show OS/compiler version\n  - uname -a\n  - $CXX --version\n  - |\n    if [[ \"${CHECK_FORMATTING}\" == \"true\" ]]; then\n      # F001: Source files should not use the '\\r' (CR) character\n      # L001: No trailing whitespace at the end of lines\n      # L002: Don't use tab characters\n      # T001: One-line comments should not have forced continuation\n      # T002: Reserved names should not be used for preprocessor macros\n      # T009: Comma should not be preceded by whitespace, but should be followed by one\n      # T013: Source files should contain the copyright notice\n      find src/rttr src/unit_tests -name \\*\\.h -print -o -name \\*\\.cpp -print | vera++ --rule F001 --rule L001 --rule L002 --rule T001 --rule T002 --rule T009 --rule T013 --error\n    fi\n  - |\n    if [[ \"${UNIT_TESTS}\" == \"true\" ]]; then\n      # Run unit tests on two cores\n      (cd build && make run_tests -j2)\n    fi\n  - |\n    if [[ \"${BUILD_DOCU}\" == \"true\" ]]; then\n      # Run unit tests on two cores\n      (cd build && make doc_website -j2)\n    fi\n  - |\n    if [[ \"${BUILD_BENCHMARKS}\" == \"true\" ]]; then\n      # Run unit tests on two cores\n      (cd build && make bench_method -j2 && make bench_rttr_cast -j2 && make bench_variant -j2)\n    fi\n  - |\n    if [[ \"${BUILD_EXAMPLES}\" == \"true\" ]]; then\n      # Run unit tests on two cores\n      (cd build && make examples)\n    fi\n  - |\n    if [[ \"${VALGRIND}\" == \"true\" ]]; then\n      # Run unit tests on two cores\n      (valgrind --leak-check=full --error-exitcode=1 ${TRAVIS_BUILD_DIR}/build/bin/unit_tests_d)\n    fi\n\nnotifications:\n  email:\n    - info@rttr.org\n"
        },
        {
          "name": "3rd_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMake",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.76171875,
          "content": "####################################################################################\n#                                                                                  #\n#  Copyright (c) 2014 - 2018 Axel Menzel <info@rttr.org>                           #\n#                                                                                  #\n#  This file is part of RTTR (Run Time Type Reflection)                            #\n#  License: MIT License                                                            #\n#                                                                                  #\n#  Permission is hereby granted, free of charge, to any person obtaining           #\n#  a copy of this software and associated documentation files (the \"Software\"),    #\n#  to deal in the Software without restriction, including without limitation       #\n#  the rights to use, copy, modify, merge, publish, distribute, sublicense,        #\n#  and/or sell copies of the Software, and to permit persons to whom the           #\n#  Software is furnished to do so, subject to the following conditions:            #\n#                                                                                  #\n#  The above copyright notice and this permission notice shall be included in      #\n#  all copies or substantial portions of the Software.                             #\n#                                                                                  #\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      #\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        #\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     #\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          #\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   #\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   #\n#  SOFTWARE.                                                                       #\n#                                                                                  #\n####################################################################################\n\n####################################################################################\n# Welcome to the CMake build system for RTTR( Run Time Type Reflection).           #\n# This is the main file where the general build environment is set-up and the      #\n# the build configuration options are initialized.                                 #\n####################################################################################\n\ncmake_minimum_required (VERSION 3.0)\n\nproject (\"rttr\" LANGUAGES CXX)\n\nset(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/CMake\")\n\nif (CMAKE_BUILD_TYPE STREQUAL \"\")\n  # CMake defaults to leaving CMAKE_BUILD_TYPE empty. This screws up\n  # differentiation between debug and release builds.\n  set(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING \"Choose the type of build, options are: None (CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.\" FORCE)\nendif ()\n\n# our little cmake helper functions\ninclude(utility)\n\n# set up option variable for cmake\noption(BUILD_RTTR_DYNAMIC \"Build the dynamic/shared version of RTTR library\" ON)\noption(BUILD_UNIT_TESTS \"Build the unit tests of RTTR\" ON)\noption(BUILD_STATIC \"Build RTTR as static library\" OFF)\noption(BUILD_WITH_STATIC_RUNTIME_LIBS \"Link against the static runtime libraries\" OFF)\noption(BUILD_WITH_RTTI \"Enable build with C++ runtime type information for compilation\" ON)\noption(BUILD_BENCHMARKS \"Enable this to build the benchmarks\" OFF)\noption(BUILD_EXAMPLES \"Enable this to build the examples\" On)\noption(BUILD_DOCUMENTATION \"Enable this to build the documentation\" ON)\noption(BUILD_INSTALLER \"Enable this to build the installer\" ON)\noption(BUILD_PACKAGE \"Enable this to build the installer\" ON)\noption(USE_PCH \"Use precompiled header files for compilation\" ON)\noption(CUSTOM_DOXYGEN_STYLE \"Enable this option to use a custom doxygen style for HTML documentation; Otherwise the default will be used\" ON)\noption(BUILD_WEBSITE_DOCU \"Enable this option to create the special docu for the website\" OFF)\n\n# one precompiled headers cannot be used for multiple ninja targets\n# thats why we have to disable this option, when BUILD_STATIC or\n# BUILD_WITH_STATIC_RUNTIME_LIBS is ON (every target will create the same PCH.pch file)\n# to get it working, we need the feature to enable different source properties\n# for different targets\nif (USE_PCH)\n  if (BUILD_STATIC OR BUILD_WITH_STATIC_RUNTIME_LIBS)\n    set(USE_PCH FALSE)\n  endif()\nendif()\n\ninclude(config)\ninclude(3rd_party_libs)\n\nif (BUILD_PACKAGE)\n    include(installer)\nendif()\n\n# here we add our source code\nadd_subdirectory(src)\n# and the documentation\nif (BUILD_DOCUMENTATION)\n    add_subdirectory(doc)\nendif()\n"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 6.8388671875,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file. This project adheres to [Semantic Versioning](http://semver.org/).\n\n## [v0.9.6](https://github.com/rttrorg/rttr/releases/tag/v0.9.6) (2018-03-15)\n[Full Changelog](https://github.com/rttrorg/rttr/compare/v0.9.5...v0.9.6)\n\nBlog Entry: www.rttr.org/news/major-release-0-9-6\n\n[![Generic badge](https://img.shields.io/badge/►-Features-98B808.svg?colorA=98B808)](https://github.com/acki-m/rttr/blob/feature-adjust-readme/ChangeLog.md)\n\n- Added `variant_associative_view` class [\\#57](https://github.com/rttrorg/rttr/issues/57)\n- Added `variant_sequential_view` [\\#46](https://github.com/rttrorg/rttr/issues/46)\n- Added `string_view` class\n- Added `library` class in order to load plugins at runtime [\\#116](https://github.com/rttrorg/rttr/issues/116)\n- Added `variant_cast` function in order to support move data from `variant` [\\#108](https://github.com/rttrorg/rttr/issues/108) \n- Added possibility to convert raw nullptr pointers in variant class to base types [\\#59](https://github.com/rttrorg/rttr/issues/59) \n- Return the template parameters of a type [\\#58](https://github.com/rttrorg/rttr/issues/58)\n- Added support for register base class properties [\\#29](https://github.com/rttrorg/rttr/issues/29)\n- Add implicit conversion from a wrapped value inside a variant [\\#48](https://github.com/rttrorg/rttr/issues/48)\n- Support for VS2017 [\\#45](https://github.com/rttrorg/rttr/issues/#45)\n- Added support for C++17 compilers [\\#100, #105](https://github.com/rttrorg/rttr/issues/100)\n- Custom registered type name should be used in class templates as well [\\#40](https://github.com/rttrorg/rttr/issues/40)\n- Added new comparators(>, <=, >=) for `variant` class [\\#61](https://github.com/rttrorg/rttr/issues/61)\n- Add support for new property policy: 'as_reference_wrapper' [\\#20](https://github.com/rttrorg/rttr/issues/#20) \n- Add possibility to filter to class items, while retrieving, \n  e.g: retrieve private properties: `get_properties(filter_item::instance_item | filter_item::non_public_access)`\n- Added JSON serialization example\n- Added loading plugins example [\\#116](https://github.com/rttrorg/rttr/issues/116)\n- Added CI systems: Travis and Appveyor\n- Added static code analysis tool Codacy (cppcheck underlying)\n- Added code coverage tool: \"CoverAlls\"\n- Added `variant::get_wrapped_value()` & `variant::extract_wrapped_value()` functions\n- Donation button added: [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=JQ65KGGCSUZMS)\n\n[![Generic badge](https://img.shields.io/badge/►-Improvements-84E61B.svg?colorA=84E61B)](https://github.com/acki-m/rttr/blob/feature-adjust-readme/ChangeLog.md)\n\n- Return ranges instead of vectors [\\#6](https://github.com/rttrorg/rttr/issues/6)\n- Remove branching when calling a wrapper method [\\#19](https://github.com/rttrorg/rttr/issues/19)\n- Add 'noexcept' everywhere where reasonable [\\#17](https://github.com/rttrorg/rttr/issues/17)\n- Add 'constexpr' everywhere where reasonable [\\#16](https://github.com/rttrorg/rttr/issues/16)\n- Added own make_unique impl, not supported in C++11\n- Upgraded catch to version: 1.12.0 [\\#120](https://github.com/rttrorg/rttr/issues/120)\n- Increased test coverage: 92%\n- Several docu improvements\n\n[![Generic badge](https://img.shields.io/badge/►-Bugfixes-F70202.svg?colorA=F70202)](https://github.com/acki-m/rttr/blob/feature-adjust-readme/ChangeLog.md)\n\n- class items inheritance of items, was not working when derived class had no items at all [\\#89](https://github.com/rttrorg/rttr/issues/89)\n- Raw arrays by value, were not recognized by `variant_sequential_view` [\\#125](https://github.com/rttrorg/rttr/issues/125)\n- Explicit unloading of libraries which contain registered RTTR types, lead to crash [\\#113](https://github.com/rttrorg/rttr/issues/113)\n- Fix install handling for Mac/Linux #101, [\\#102](https://github.com/rttrorg/rttr/issues/102)\n- Added support for variant properties [\\#47](https://github.com/rttrorg/rttr/issues/47)\n- Typo in method name: rttr::constructor::get_instanciated_type() [\\#83](https://github.com/rttrorg/rttr/issues/83)\n- Polymorphic assignment of raw pointer properties does not work  [\\#56](https://github.com/rttrorg/rttr/issues/56)\n- Comparison of raw pointer properties does not work [\\#55](https://github.com/rttrorg/rttr/issues/55)\n- fix wrong enum conversion in variant function `convert(bool* ok)` [\\#53](https://github.com/rttrorg/rttr/issues/53)\n- Fixed not correct handling of std::ref(int*) type in variant [\\#37](https://github.com/rttrorg/rttr/issues/37)\n- Custom installation directory via CMAKE_INSTALL_PREFIX [\\#34](https://github.com/rttrorg/rttr/issues/34)\n- Replaced default constructor binding from `as_object` to `as_std_shared_ptr` [\\#14](https://github.com/rttrorg/rttr/issues/14)\n- Fixed missing invoke of dtor when type is pointer type [\\#14](https://github.com/rttrorg/rttr/issues/14)\n- Do not search for boost, when not needed [\\#93](https://github.com/rttrorg/rttr/issues/93)\n- `type::is_array()` now returns only `true` for C-style arrays, \nbefore that it also `true` for specialization of array_mapper types [\\#144](https://github.com/rttrorg/rttr/pull/144)\n\n[![Generic badge](https://img.shields.io/badge/►-Removed-613F09.svg?colorA=613F09)](https://github.com/acki-m/rttr/blob/feature-adjust-readme/ChangeLog.md)\n\n- `variant_array_view` class [\\#144](https://github.com/rttrorg/rttr/pull/144)\n- `property::is_array()` method [\\#144](https://github.com/rttrorg/rttr/pull/144)\n\n## [v0.9.5](https://github.com/rttrorg/rttr/releases/tag/v0.9.5) (2015-12-23)\n[Full Changelog](https://github.com/rttrorg/rttr/compare/init_commit...v0.9.5)\n\nBlog Entry: http://www.rttr.org/news/new-stable-release-0-9-5\n\n- the macro RTTR_DECLARE_TYPE was removed, so it is not necessary anymore to declare \n  a type before using it (RTTR does still not require a compiler with rtti)\n- completely adjusted the registration API to be more future proof\n- added the possibility to register the access specifier of your class member\n- added the possibility to register free functions for constructors\n- the `variant` class has get comparison operators `==` and `<`\n- the `variannt_array` class is replaced by `variant_array_view` class\n- added the possibility to register default values to methods and constructors\n- added the possibilities to register names of method parameters\n- new policies for constructors were added\n- it's now possible to invoke methods while the instance is in a wrapped type, like std::shared_ptr<T>\n- a lot of refactoring internally, almost every class was internally refactored\n- added several benchmarks to measure the performance impact from certain \n  API calls of the library\n- adjusted documentation style to use cleaner and modern HTML5 style\n- rewritten the tutorial\n- switched from mercurial to git and uploaded the source code to github\n- made own website: www.rttr.org\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0654296875,
          "content": "MIT License\n\nCopyright (c) 2014 - 2018 Axel Menzel <info@rttr.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3037109375,
          "content": "[![Version](https://badge.fury.io/gh/rttrorg%2Frttr.svg)](https://github.com/rttrorg/rttr/releases/latest)\n[![Travis status](https://travis-ci.org/rttrorg/rttr.svg?branch=master)](https://travis-ci.org/rttrorg/rttr)\n[![Appveyor status](https://ci.appveyor.com/api/projects/status/github/rttrorg/rttr?svg=true&branch=master)](https://ci.appveyor.com/project/acki-m/rttr)\n[![Coverage Status](https://coveralls.io/repos/rttrorg/rttr/badge.svg?branch=master&service=github)](https://coveralls.io/github/rttrorg/rttr)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/783/badge)](https://bestpractices.coreinfrastructure.org/projects/783)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/9821799170644782ac8d7885d393e686)](https://www.codacy.com/app/acki-m/rttr?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=rttrorg/rttr&amp;utm_campaign=Badge_Grade)\n[![Documentation](https://img.shields.io/badge/docs-latest-blue.svg)](http://www.rttr.org/doc/master/classes.html)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/rttrorg/rttr/master/LICENSE.txt)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=JQ65KGGCSUZMS)\n\n<a target=\"_blank\" href=\"http://www.rttr.org/news/major-release-0-9-6\">!New Release - 0.9.6!</a>\n==\n\nRTTR\n====\n> C++ Reflection Library\n\nRTTR stands for Run Time Type Reflection.\nIt describes the ability of a computer program to introspect and modify an object at runtime. It is also the name of the library itself, which is written in C++ and released as open source library.\nYou can find more information on: <a target=\"_blank\" href=\"http://www.rttr.org\">www.rttr.org</a>\n\n----------\n\nHow to Use\n----------\n\n### Manual registration\n```cpp\n#include <rttr/registration>\nusing namespace rttr;\n\nstruct MyStruct { MyStruct() {}; void func(double) {}; int data; };\n\nRTTR_REGISTRATION\n{\n    registration::class_<MyStruct>(\"MyStruct\")\n         .constructor<>()\n         .property(\"data\", &MyStruct::data)\n         .method(\"func\", &MyStruct::func);\n}\n```\n### Iterate over members\n```cpp\ntype t = type::get<MyStruct>();\nfor (auto& prop : t.get_properties())\n    std::cout << \"name: \" << prop.get_name();\n\nfor (auto& meth : t.get_methods())\n    std::cout << \"name: \" << meth.get_name();\n```\n\n### Constructing types\n```cpp\ntype t = type::get_by_name(\"MyStruct\");\nvariant var = t.create();    // will invoke the previously registered ctor\n\nconstructor ctor = t.get_constructor();  // 2nd way with the constructor class\nvar = ctor.invoke();\nstd::cout << var.get_type().get_name(); // prints 'MyStruct'\n```\n\n### Set/get properties\n```cpp\nMyStruct obj;\n\nproperty prop = type::get(obj).get_property(\"data\");\nprop.set_value(obj, 23);\n\nvariant var_prop = prop.get_value(obj);\nstd::cout << var_prop.to_int(); // prints '23'\n```\n\n### Invoke Methods:\n```cpp\nMyStruct obj;\n\nmethod meth = type::get(obj).get_method(\"func\");\nmeth.invoke(obj, 42.0);\n\nvariant var = type::get(obj).create();\nmeth.invoke(var, 42.0);\n```\n\nFeatures\n---------\n- reflect constructors, methods, data member or enums\n- classes; with *single*-, *multiple*- and *virtual*-inheritance\n- constructors (arbitrary argument count)\n- methods (*virtual*, *abstract*, *overloaded*, arbitrary argument count)\n- arrays (incl. raw-arrays; arbitrary dimension count)\n- ability to invoke properties and methods of classes from any arbitrary class level\n- no header pollution; the reflection information is created in the cpp file to minimize compile time when modifying the data\n- working with custom types without the need of having the declaration of the type available at compile time (useful for plugins)\n- possibility to add additional *metadata* to all reflection objects\n- possibility to add *default arguments* to methods or constructors\n- adjust registration behaviour through *policies*\n- minimal macro usage\n- **no** additional 3rd party dependencies are needed\n- **no** rtti required; contains a faster and across shared libraries working replacement\n- **no** exceptions (this feature come with cost and is also regularly disabled on consoles)\n- **no** external compiler or tool needed, only standard ISO C++11\n\nPortability\n-----------\nTested and compiled with:\n- Microsoft Visual Studio 2015 & 2017 (2013 support till version 0.9.6)\n- GCC 4.8.1\n- Clang 3.7\n- MinGW 4.8.2\n\nLicense\n-------\n\n<img align=\"right\" src=\"http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png\">\n\nRTTR is released under the terms of the [MIT](LICENSE.txt) license,\nso it is free to use in your free or commercial projects.\n\nCopyright (c) 2014 - 2018 Axel Menzel <info@rttr.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nInstallation\n------------\nThe installation guide can be found [here][rttr.install].\n\n\nGet Started:\n------------\nTake a look at the [documentation][rttr.docs] or start with the [tutorial][rttr.tutorial].\n\nDonation:\n---------\nWhen you use RTTR and you would like to say thank you for its development,\nI am happy to receive any donation.\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=JQ65KGGCSUZMS)\n\n<!-- Links -->\n[rttr.docs]: http://www.rttr.org/doc/master/classes.html\n[rttr.install]: http://www.rttr.org/doc/master/building_install_page.html\n[rttr.tutorial]: http://www.rttr.org/doc/master/tutorial_page.html\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}