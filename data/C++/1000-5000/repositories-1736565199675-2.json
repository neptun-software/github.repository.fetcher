{
  "metadata": {
    "timestamp": 1736565199675,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Serial-Studio/Serial-Studio",
      "stars": 4990,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.23046875,
          "content": "BasedOnStyle:                       LLVM\nStandard:                           Cpp11\nCommentPragmas:                     \"^!|^:\"\nPointerBindsToType:                 false\nSpaceAfterTemplateKeyword:          false\nBreakBeforeBinaryOperators:         All\nBreakBeforeBraces:                  Custom\nBreakBeforeTernaryOperators:        true\nBreakConstructorInitializers:       BeforeComma\nConstructorInitializerIndentWidth:  2\nNamespaceIndentation:               None\nAlignAfterOpenBracket:              true\nAlwaysBreakTemplateDeclarations:    true\nAllowShortFunctionsOnASingleLine:   Inline\nSortIncludes:                       false\nIndentCaseLabels:                   true\nIndentPPDirectives:                 AfterHash\nAccessModifierOffset:               -2\nIndentWidth:                        2\nColumnLimit:                        80\n\nBraceWrapping:\n    AfterClass: true\n    AfterControlStatement: true\n    AfterEnum: true\n    AfterFunction: true\n    AfterNamespace: true\n    AfterObjCDeclaration: true\n    AfterStruct: true\n    AfterUnion: true\n    BeforeCatch: true\n    BeforeElse: true\n    IndentBraces: false\n\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH, forever, Q_FOREVER, QBENCHMARK, QBENCHMARK_ONCE ]\n#StatementMacros ['Q_OBJECT', 'Q_UNUSED']\n\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.6025390625,
          "content": "---\nChecks: '*,-fuchsia-*,-google-*,-zircon-*,-abseil-*,-modernize-use-trailing-return-type,-llvm-*,-llvmlibc-*'\nCheckOptions: [{ key: misc-non-private-member-variables-in-classes, value: IgnoreClassesWithAllMemberVariablesBeingPublic }]\nWarningsAsErrors: '*'\nHeaderFilterRegex: ''\nFormatStyle: none\n\nCheckOptions:\n  - key:             readability-identifier-naming.ClassCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.ClassMemberCase\n    value:           lower_case\n  - key:             readability-identifier-naming.ConstexprVariableCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.ConstexprVariablePrefix\n    value:           k\n  - key:             readability-identifier-naming.EnumCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.EnumConstantCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.EnumConstantPrefix\n    value:           k\n  - key:             readability-identifier-naming.FunctionCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.GlobalConstantCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.GlobalConstantPrefix\n    value:           k\n  - key:             readability-identifier-naming.StaticConstantCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.StaticConstantPrefix\n    value:           k\n  - key:             readability-identifier-naming.StaticVariableCase\n    value:           lower_case\n  - key:             readability-identifier-naming.MacroDefinitionCase\n    value:           UPPER_CASE\n  - key:             readability-identifier-naming.MacroDefinitionIgnoredRegexp\n    value:           '^[A-Z]+(_[A-Z]+)*_$'\n  - key:             readability-identifier-naming.MemberCase\n    value:           lower_case\n  - key:             readability-identifier-naming.PrivateMemberSuffix\n    value:           _\n  - key:             readability-identifier-naming.PublicMemberSuffix\n    value:           ''\n  - key:             readability-identifier-naming.NamespaceCase\n    value:           lower_case\n  - key:             readability-identifier-naming.ParameterCase\n    value:           lower_case\n  - key:             readability-identifier-naming.TypeAliasCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.TypedefCase\n    value:           CamelCase\n  - key:             readability-identifier-naming.VariableCase\n    value:           lower_case\n  - key:             readability-identifier-naming.IgnoreMainLikeFunctions\n    value:           1"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05078125,
          "content": "deploy/* linguist-vendored\nlibs/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5908203125,
          "content": "\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n.cache\n\n# Binary builds\nudp_function_generator\nudp_function_generator.exe\n\n# Build & IDEs\n*.kdev*\nbuild/*\n*.vscode\n*.layout\n*.qmlls.ini\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Qt project file\n*.pro.user\n*.user\n\n# Clion\n.idea/*\ncmake-build-*\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.22265625,
          "content": "#\n# Serial Studio - https://github.com/alex-spataru/serial-studio\n#\n# Copyright (C) 2020-2025 Alex Spataru <https://aspatru.com>\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <https://www.gnu.org/licenses/>.\n#\n# SPDX-License-Identifier: GPL-3.0-or-later OR Commercial\n#\n\ncmake_minimum_required(VERSION 3.20)\n\n#-------------------------------------------------------------------------------\n# Define project name & find Qt packages for correct CPack calls\n#-------------------------------------------------------------------------------\n\nproject(Serial-Studio LANGUAGES CXX)\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nfind_package(\n Qt6 REQUIRED\n COMPONENTS\n Core\n Qml\n)\n\n#-------------------------------------------------------------------------------\n# Options for build types\n#-------------------------------------------------------------------------------\n\noption(DEBUG_SANITIZER \"Enable sanitizers for debug builds\" OFF)\noption(PRODUCTION_OPTIMIZATION \"Enable production optimization flags\" OFF)\n\n#-------------------------------------------------------------------------------\n# Project information\n#-------------------------------------------------------------------------------\n\nset(PROJECT_DISPNAME            \"Serial Studio\")\nset(PROJECT_EXECUTABLE          \"Serial-Studio\")\nset(PROJECT_VENDOR              \"Alex Spataru\")\nset(PROJECT_CONTACT             \"serial-studio.github.io\")\nset(PROJECT_DESCRIPTION_SUMMARY \"Flexible data visualization software for embedded devices and projects\")\nset(PROJECT_VERSION_MAJOR       \"3\")\nset(PROJECT_VERSION_MINOR       \"0\")\nset(PROJECT_VERSION_PATCH       \"6\")\nset(PROJECT_VERSION             \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}\")\nset(PROJECT_APPCAST             \"https://raw.githubusercontent.com/Serial-Studio/Serial-Studio/master/updates.json\")\n\nset(PROJECT_ROOT_DIR            ${CMAKE_CURRENT_LIST_DIR})\nset(PROJECT_DESCRIPTION_FILE    \"${PROJECT_ROOT_DIR}/README.md\")\nset(PROJECT_FILE_NAME           \"${PROJECT_EXECUTABLE}-v${PROJECT_VERSION}\")\nset(PROJECT_FILE_LICENSE        \"${PROJECT_ROOT_DIR}/LICENSE.md\")\n\n#-------------------------------------------------------------------------------\n# Allow source code to access project information\n#-------------------------------------------------------------------------------\n\nadd_definitions(-DPROJECT_VENDOR=\"${PROJECT_VENDOR}\")\nadd_definitions(-DPROJECT_CONTACT=\"${PROJECT_CONTACT}\")\nadd_definitions(-DPROJECT_VERSION=\"${PROJECT_VERSION}\")\nadd_definitions(-DPROJECT_APPCAST=\"${PROJECT_APPCAST}\")\nadd_definitions(-DPROJECT_DISPNAME=\"${PROJECT_DISPNAME}\")\n\n#-------------------------------------------------------------------------------\n# Set UNIX friendly name for app & fix OpenSUSE builds\n#-------------------------------------------------------------------------------\n\nif (UNIX AND NOT APPLE)\n set(PROJECT_EXECUTABLE \"serial-studio\")\n set(CMAKE_C_COMPILER_AR \"/usr/bin/ar\")\n set(CMAKE_CXX_COMPILER_AR \"/usr/bin/ar\")\n set(CMAKE_C_COMPILER_RANLIB \"/usr/bin/ranlib\")\n set(CMAKE_CXX_COMPILER_RANLIB \"/usr/bin/ranlib\")\nendif()\n\n#-------------------------------------------------------------------------------\n# Production optimization flags\n#-------------------------------------------------------------------------------\n\nif(PRODUCTION_OPTIMIZATION)\n # MinGW-specific settings\n if(WIN32 AND MINGW)\n  add_compile_options(\n   -O3                            # Optimize for speed\n   -Wall                          # Enable most warning messages\n   -Wextra                        # Enable additional warning messages\n   -fuse-linker-plugin            # Use LTO plugin\n   -ftree-vectorize               # Enable loop vectorization\n   -fno-fast-math                 # Standard-compliant floating point math\n   -fno-unsafe-math-optimizations # Use safe math only\n  )\n  add_link_options(\n   -Wl,--gc-sections              # Remove unused sections during linking\n   -fuse-linker-plugin            # Enable LTO during linking\n  )\n\n # MSVC-specific settings\n elseif(WIN32 AND MSVC)\n  add_compile_options(\n   /openmp:experimental           # Add support for OpenMP\n   /permissive-                   # Enable strict ISO compliance\n   /Zc:__cplusplus                # Correct __cplusplus value\n   /Zc:preprocessor               # Enable standards-conforming preprocessor\n   /MP                            # Multi-processor compilation\n   /vmg                           # Use general pointer-to-member representation\n   /O2                            # Optimize for speed\n   /W3                            # Warning level 3 messages\n   /GL                            # Enable whole program optimization\n   /MT                            # Link compiler runtime statically\n   /fp:strict                     # Standard-compliant floating point math\n  )\n  add_link_options(\n   /OPT:REF                       # Remove unreferenced functions/data\n   /OPT:ICF                       # Remove identical COMDATs\n   /LTCG                          # Enable LTO during linkingn\n   /NODEFAULTLIB:msvcrt.lib       # Exclude dynamic runtime\n   /IGNORE:4286                   # Ignore Qt libucrt warning\n  )\n\n # macOS-specific settings\n elseif(APPLE)\n  add_compile_options(\n   -O3                            # Optimize for speed\n   -Wall                          # Enable most warning messages\n   -Wextra                        # Enable additional warning messages\n   -fvectorize                    # Enable loop vectorization\n   -fslp-vectorize                # Enable SLP vectorization\n   -fno-fast-math                 # Standard-compliant floating point math\n   -fno-unsafe-math-optimizations # Use safe math only\n  )\n  add_link_options(\n   -Wl,-dead_strip                # Remove unused code and data during linking\n   -flto=full                     # Link-time optimization\n  )\n\n # Intel LLVM-based C++ Compiler\n elseif(CMAKE_CXX_COMPILER_ID MATCHES \"IntelLLVM\")\n  add_compile_options(\n   -O3                            # Optimize for speed\n   -Wall                          # Enable most warning messages\n   -Wextra                        # Enable additional warning messages\n   -qopenmp-simd                  # Add support for OpenMP\n   -static                        # Static link compiler dependencies\n   -fvectorize                    # Enable loop vectorization\n   -fslp-vectorize                # Enable SLP vectorization\n   -msse2                         # Enable SSE2 targeting\n   -fp-model=precise              # Standard-compliant floating point math\n  )\n  add_link_options(\n   -Wl,--gc-sections              # Remove unused sections during linking\n   -flto=full                     # Link-time optimization\n  )\n\n # Generic UNIX/Linux settings\n elseif(UNIX)\n  add_compile_options(\n   -O3                            # Optimize for speed\n   -Wall                          # Enable most warning messages\n   -Wextra                        # Enable additional warning messages\n   -fopenmp                       # Add support for OpenMP\n   -ftree-vectorize               # Enable loop vectorization\n   -fno-fast-math                 # Standard-compliant floating point math\n   -msse2                         # Enable SSE2 targeting\n   -fno-unsafe-math-optimizations # Use safe math only\n  )\n  add_link_options(\n   -Wl,--gc-sections              # Remove unused sections during linking\n   -flto                          # Link-time optimization\n  )\n endif()\nendif()\n\n#-------------------------------------------------------------------------------\n# Sanitizer flags\n#-------------------------------------------------------------------------------\n\nif(DEBUG_SANITIZER)\n add_compile_options(\n  -fsanitize=address              # Enable AddressSanitizer\n  -fsanitize=undefined            # Enable UndefinedBehaviorSanitizer\n  -fsanitize=leak                 # Enable LeakSanitizer\n  -g                              # Generate debug symbols\n  -fno-omit-frame-pointer         # Preserve frame pointers\n )\n\n add_link_options(\n  -fsanitize=address              # Link AddressSanitizer\n  -fsanitize=undefined            # Link UndefinedBehaviorSanitizer\n  -fsanitize=leak                 # Link LeakSanitizer\n )\nendif()\n\n#-------------------------------------------------------------------------------\n# Add subdirectories\n#-------------------------------------------------------------------------------\n\nadd_subdirectory(lib)\nadd_subdirectory(app)\n\n#-------------------------------------------------------------------------------\n# Log compiler and linker flags\n#-------------------------------------------------------------------------------\n\nget_directory_property(SUBDIRECTORY_COMPILE_OPTIONS DIRECTORY lib COMPILE_OPTIONS)\nmessage(STATUS \"LIB Compile Options: ${SUBDIRECTORY_COMPILE_OPTIONS}\")\n\nget_directory_property(SUBDIRECTORY_COMPILE_OPTIONS DIRECTORY app COMPILE_OPTIONS)\nmessage(STATUS \"APP Compile Options: ${SUBDIRECTORY_COMPILE_OPTIONS}\")\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at alex_spataru@outlook.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 4.21875,
          "content": "Serial Studio License\n=====================  \n\nThis software is dual-licensed under the GNU General Public License v3 (GPLv3) \nfor open-source users and a Commercial License for business and professional \nusers. See below for details.  \n\nGNU General Public License v3 (GPLv3)  \n===================================== \nThis program is free software: you can redistribute it and/or modify it under \nthe terms of the GNU General Public License as published by the Free Software \nFoundation, either version 3 of the License, or (at your option) any later \nversion.  \n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \nPARTICULAR PURPOSE. See the GNU General Public License for more details.  \n\nYou should have received a copy of the GNU General Public License along with \nthis program. If not, see <https://www.gnu.org/licenses/>.  \n\n### GPLv3 Features  \nUnder the GPLv3 license, you may:\n- Use the software for personal, educational, or open-source projects, in \n  compliance with the GPLv3 terms.\n- Access the core functionality of Serial Studio without feature restrictions.  \n\n#### Additional Notice for GPLv3 Users:  \n- **Session Continuity Beyond 30 Minutes:** Once the dashboard is displayed, the\n  software will prompt the user every 30 minutes to restart the application to \n  continue using it. This is a user notification to encourage consideration of \n  the Commercial License and does not impose technical restrictions. \n  Users are free to modify the source code to remove this prompt in compliance \n  with the GPLv3.  \n- **MQTT Functionality:** MQTT integration is available exclusively under the \n  Commercial License and is not included in the GPLv3 version.  \n\n**Value-Added Services**: These optional features are enhancements that go \nbeyond the core functionality of Serial Studio. They are offered as part of the \nCommercial License to provide additional integrations, better user experience, \nor specialized support.  \n\nCommercial License  \n==================  \nFor business or professional use, purchasing a Commercial License is required.  \n\n#### Benefits for Commercial Users:  \n- Full access to **MQTT functionality**.  \n- Unlimited session continuity (no 30-minute restart reminders).  \n- Priority support via email, GitHub, and video calls.  \n\n#### Scope of Use:  \nCommercial users may use the software in business, enterprise, or proprietary \napplications while complying with the restrictions outlined below.\n\n#### Commercial License Limitations:  \n- Commercial users may not repackage, modify, rebrand, or redistribute the \n  software under a different name or identity without explicit, written \n  permission from the original author.  \n- Modifications and redistributions under the Commercial License must respect \n  the original author's intellectual property and trademarks.  \n\nAdditional Notes\n================\n\n- **Trademark Notice:** The name \"Serial Studio\" and its logo are trademarks of \n  the author. Use of these trademarks in modified versions or derivative works \n  requires explicit permission.  \n- **Technical Support:** Support is exclusively available for Commercial License \n  users. Open-source users are encouraged to consult the documentation, \n  and the community forums (issues & discussions) available in the GitHub \n  repository.  \n- **Modifications under GPLv3:** Users modifying the software under the GPLv3 \n  license are responsible for ensuring compatibility with future updates or \n  feature stability.  \n\nExamples of Permitted and Prohibited Use \n========================================\n\n**Permitted under GPLv3:**  \n- Running Serial Studio for an university research project.  \n- Including it in an open-source IoT platform.  \n- Using it for personal and non-commercial projects.\n\n**Prohibited without a Commercial License:**  \n- Using Serial Studio as part of a commercial product offered to customers.  \n- Deploying Serial Studio in an enterprise environment without purchasing the \n  Commercial License.  \n\n### For More Information  \n\nTo learn more about the Commercial License or purchase a license, visit the \nofficial website: <https://serial-studio.com>.  \n\nFor questions, licensing inquiries, or support, email: <alex@serial-studio.com> \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.587890625,
          "content": "# Serial Studio\n\n<a href=\"https://github.com/Serial-Studio/Serial-Studio/tree/master/doc/assets\">\n    <img width=\"192px\" height=\"192px\" src=\"doc/icon.svg\" align=\"right\" />\n</a>\n\n[![Github commits](https://img.shields.io/github/last-commit/Serial-Studio/Serial-Studio?style=for-the-badge&logo=github)](https://github.com/Serial-Studio/Serial-Studio/commits/master)\n[![GitHub contributors](https://img.shields.io/github/contributors/Serial-Studio/Serial-Studio?style=for-the-badge&logo=github)](https://github.com/Serial-Studio/Serial-Studio/graphs/contributors)\n[![PR's Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen?style=for-the-badge)](https://github.com/Serial-Studio/Serial-Studio/pull/new)\n[![Github All Releases](https://img.shields.io/github/downloads/Serial-Studio/Serial-Studio/total.svg?style=for-the-badge&logo=github)](https://github.com/Serial-Studio/Serial-Studio/releases/)\n[![Instagram](https://img.shields.io/badge/Instagram-E4405F?style=for-the-badge&logo=instagram&logoColor=white)](https://instagram.com/serialstudio.app)\n[![Donate](https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&logo=paypal&logoColor=white)](https://www.paypal.com/donate?hosted_button_id=XN68J47QJKYDE)\n\nSerial Studio is a multi-platform, versatile data visualization tool designed for embedded engineers, students, hackers, and teachers. It allows users to visualize, analyze, and represent data from their projects and devices without needing custom, project-specific visualization software. Serial Studio offers a flexible solution that adapts to a wide range of use cases, making it ideal for both educational and professional environments.\n\nThe tool was born out of my experience in multiple CanSat-based competitions, where I often found myself developing new Ground Station Software for each project. Over time, I realized it would be more efficient and sustainable to maintain a single, flexible Ground Station Software that allows users to define how incoming data is processed and displayed.\n\nToday, Serial Studio is a powerful and adaptable tool, suitable not only for CanSat competitions but for any data acquisition and visualization project. It supports data retrieval from a wide range of sources, including hardware and software serial ports, MQTT, Bluetooth Low Energy (BLE), and network sockets (TCP/UDP).\n\n![Software usage](doc/screenshot.png)\n\n## Features\n\n- **Cross-platform:** Compatible with Windows, macOS, and Linux.\n- **CSV Export:** Easily saves received data in CSV files for further analysis or processing.\n- **Support for multiple data sources:** Handles a wide variety of sources, including serial ports, MQTT, Bluetooth Low Energy (BLE), and network sockets (TCP/UDP).\n- **Customizable visualization:** Allows users to define and display data using various widgets, configurable via the project editor to meet specific needs.\n- **Customizable frame analysis:** Provides the option to modify a JavaScript function to interpret incoming data frames, enabling the preprocessing of raw sensor data and handling of complex binary formats.\n- **MQTT publishing and receiving:** Sends and receives data over the internet, enabling real-time data visualization from anywhere in the world.\n\nVisit the **[Wiki](https://github.com/Serial-Studio/Serial-Studio/wiki)** for comprehensive guides, including:\n\n- **Installation Instructions:** Set up Serial Studio on Windows, macOS, or Linux.  \n- **Quick Start Guide:** Learn how to connect your device and visualize data in minutes.  \n- **Advanced Topics:** Explore data flow, frame parsing, and building custom dashboards.\n- **Examples:** Examples with code, projects, and explanations to help you learn Serial Studio.\n\n## Development\n\n### Requirements\n\nTo compile Serial Studio, the only required dependency is [Qt](http://www.qt.io/download-open-source/), preferrably with all plugins & modules installed. The desktop application compiles with **Qt 6.8.1**.\n\nIf you're compiling on GNU/Linux, you’ll also need to install `libgl1-mesa-dev`:\n\n```bash\nsudo apt install libgl1-mesa-dev\n```\n\nOnce Qt is installed, you can compile the project by opening the **CMakeLists.txt** file in your preferred IDE or by using the command line:\n\n```bash\nmkdir build\ncd build \ncmake ../ -DPRODUCTION_OPTIMIZATION=ON -DCMAKE_BUILD_TYPE=Release\ncmake --build . -j 16 \n```\n\n## Support & Licensing\n\nOpen source software thrives on the collaboration and support of its users. By contributing to Serial Studio, you help ensure its growth, sustainability, and positive impact on developers, educators, and makers worldwide.\n\nIf Serial Studio has helped you, consider supporting its development in one of the following ways:\n\n- 👉 [**Make a Donation:**](https://www.paypal.com/donate?hosted_button_id=XN68J47QJKYDE) Even small contributions help keep this tool evolving. \n- 👉 [**Get a Commercial License:**](https://serial-studio.com/) For businesses and professional users, unlock priority support and unrestricted features.  \n\nYour support makes a difference! Thank you for being part of the Serial Studio journey!\n\n## License\n\nSerial Studio is dual-licensed under the [GNU General Public License v3 (GPLv3)](https://www.gnu.org/licenses/gpl-3.0.html) for open-source users and a Commercial License for business and professional use.\n\n- **Open Source Use:** Free under the GPLv3 license. Limitations apply, such as 30-minute session restrictions and limited dashboard widgets.\n- **Commercial Use:** Requires a Commercial License for businesses or professional users, offering unlimited usage, MQTT streaming, and priority support.\n\nFor more details, see the [LICENSE](LICENSE.md) file or visit [https://serial-studio.com](https://serial-studio.com).\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "updates.json",
          "type": "blob",
          "size": 1.2119140625,
          "content": "{\n   \"updates\":{\n      \"windows\":{\n         \"open-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"latest-version\":\"3.0.6\",\n         \"download-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/download/v3.0.6/Serial-Studio-3.0.6-Windows-x86_64.exe\",\n         \"changelog\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"mandatory\":false\n      },\n      \"osx\":{\n         \"open-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"latest-version\":\"3.0.6\",\n         \"download-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/download/v3.0.6/Serial-Studio-3.0.6-macOS-arm64.dmg\",\n         \"changelog\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"mandatory\":false\n      },\n      \"linux\":{\n         \"open-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"latest-version\":\"3.0.6\",\n         \"download-url\":\"https://github.com/Serial-Studio/Serial-Studio/releases/download/v3.0.5/Serial-Studio-3.0.6-Linux-x86_64.AppImage\",\n         \"changelog\":\"https://github.com/Serial-Studio/Serial-Studio/releases/tag/v3.0.6\",\n         \"mandatory\":false\n      }\n   }\n}\n"
        }
      ]
    }
  ]
}