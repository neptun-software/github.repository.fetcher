{
  "metadata": {
    "timestamp": 1736565863633,
    "page": 815,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "weserv/images",
      "stars": 2105,
      "defaultBranch": "5.x",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.484375,
          "content": "---\n# We'll use defaults from the LLVM style, but with 4 columns indentation\nBasedOnStyle: LLVM\nIndentWidth: 4\n---\nLanguage: Cpp\n# At least two spaces is best between code and comments (cpplint)\nSpacesBeforeTrailingComments: 2\n# Indent case labels\nIndentCaseLabels: true\n# Always break after template declaration\nAlwaysBreakTemplateDeclarations: Yes\n# Only merge empty functions\nAllowShortFunctionsOnASingleLine: Empty\n# Override the access modifier offset (cpplint)\nAccessModifierOffset: -3\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.404296875,
          "content": "---\n# Configure clang-tidy for this project\nChecks: >-\n  -*,\n  bugprone-*,\n  google-*,\n  misc-*,\n  modernize-*,\n  performance-*,\n  portability-*,\n  readability-*\nWarningsAsErrors: '*'\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nCheckOptions:\n  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }\n  - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }\n  - { key: readability-identifier-naming.EnumConstantCase,       value: CamelCase  }\n  - { key: readability-identifier-naming.StructCase,             value: CamelCase  }\n  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }\n  - { key: readability-identifier-naming.FunctionCase,           value: lower_case }\n  - { key: readability-identifier-naming.VariableCase,           value: lower_case }\n  - { key: readability-identifier-naming.PrivateMemberSuffix,    value: _          }\n  - { key: readability-identifier-naming.ProtectedMemberSuffix,  value: _          }\n  - { key: readability-identifier-naming.MacroDefinitionCase,    value: UPPER_CASE }\n  - { key: readability-identifier-naming.ConstexprVariableCase,  value: UPPER_CASE }\n  - { key: readability-identifier-naming.GlobalConstantCase,     value: UPPER_CASE }\n  - { key: readability-identifier-naming.MemberConstantCase,     value: UPPER_CASE }\n  - { key: readability-identifier-naming.StaticConstantCase,     value: UPPER_CASE }"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2216796875,
          "content": "# Ignore everything\n*\n\n# Allow necessary source files\n# Note: test suite is intentionally skipped\n!include/**\n!ngx_conf/**\n!public/**\n!src/**\n!third_party/**\n\n# Allow build files in top-level directory\n!CMakeLists.txt\n!config*\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.515625,
          "content": "# This file is for unifying the coding style for different editors and IDEs\n# editorconfig.org\n\n# This file is the top-most EditorConfig file\nroot = true\n\n# All files\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Markdown files\n[*.md]\nmax_line_length = off\ntrim_trailing_whitespace = false\n\n# Bash files\n[*.sh]\nindent_size = 2\n\n# JSON/YAML files\n[*.{json,yml}]\nindent_size = 2\ninsert_final_newline = false\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0654296875,
          "content": "public/* linguist-vendored\nngx_conf/*.conf linguist-language=Nginx\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5888671875,
          "content": "### C++ ###\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# GCC coverage testing tool files\n*.gcno\n*.gcda\n*.gcov\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n### CLion ###\n.idea/\n\n### CMake ###\n*.cbp\nbin/*\nlib/\nbuild/\ncmake-build-debug/\ncmake-build-release/\nCMakeFiles/\nCMakeCache.txt\nMakefile\ncmake_install.cmake\nCTestTestfile.cmake\n\n# Test::Nginx\nservroot/\n\n# User-specific stuff\ntest/api/generate_expected_fixtures.cpp\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0908203125,
          "content": "[submodule \"docs\"]\n\tpath = public\n\turl = https://github.com/weserv/docs.git\n\tbranch = deploy\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.2236328125,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Current trunk] - started 2019-09-01\n\nRequires libvips 8.12+.\n\n### Added\n- Support for true streaming ([#225](https://github.com/weserv/images/pull/225)).\n- Support for upstream TLSv1.3 connections.\n- Install target for the library and CLI tool.\n- Support for changing the nginx version during building.\n- Debug mode within the weserv module (`&debug=`). Requires nginx to be compiled with `--with-debug`.\n- `pagePrimary` to metadata output (`&output=json`).\n- Support for brightness, saturation and hue modulation (`&mod=`) ([#226](https://github.com/weserv/images/pull/226)).\n- nginx directives for configuring API limits ([#227](https://github.com/weserv/images/issues/227)).\n- Support for nginx's `proxy_pass` directive ([#251](https://github.com/weserv/images/issues/251)).\n- AVIF encoding support (`&output=avif`) ([#238](https://github.com/weserv/images/issues/238)).\n- Support for enabling or disabling image savers (`weserv_savers` directive).\n- Prebuilt Docker image to GitHub's Container Registry ([#204](https://github.com/weserv/images/issues/204)).\n- Support for specifying the default quality per format (`weserv_*_quality` directives).\n- Support for controlling the CPU effort spent on improving compression (`weserv_*_effort` directives).\n- The `rel=\"canonical\"` response header to proxied images ([#309](https://github.com/weserv/images/issues/309)).\n- The `Timing-Allow-Origin` response header ([#311](https://github.com/weserv/images/issues/311)).\n- Alpine based Docker image ([#317](https://github.com/weserv/images/pull/317)).\n- A pkg-config file of the API library (`weserv.pc`).\n- Variants of nginx configurations (`imagesweserv-no-cache.conf` and `imagesweserv-secure-link.conf`).\n- Support for configuring the number of worker threads of libvips (via the `VIPS_CONCURRENCY` env).\n- `/clear-cache` API endpoint ([#272](https://github.com/weserv/images/issues/272)).\n- `$weserv_response_length` embedded nginx variable.\n- Additional response headers ([#325](https://github.com/weserv/images/issues/325)).\n- Support multi-frame images for various operations (embed, crop, mask and orient).\n- The `weserv_canonical_header` nginx directive ([#309](https://github.com/weserv/images/issues/309)).\n- Client-side DNS failover mechanism ([#331](https://github.com/weserv/images/issues/331)).\n- The `weserv_deny_ip` nginx directive.\n- Support for `&default=1` ([#371](https://github.com/weserv/images/issues/371)).\n- Support for percentage-based values for some parameters ([#384](https://github.com/weserv/images/issues/384)).\n- Support for lossless encoding of WebP images (`&ll`) ([#386](https://github.com/weserv/images/issues/386)).\n\n### Changed\n- Migrate Docker base image to Rocky Linux 9.\n- Attempt to decode corrupted or invalid images ([#194](https://github.com/weserv/images/issues/194)).\n- Docker image improvements ([#215](https://github.com/weserv/images/pull/215), [#216](https://github.com/weserv/images/pull/216), [#230](https://github.com/weserv/images/pull/230) and [#283](https://github.com/weserv/images/pull/283)).\n- Return an error when the maximum number of pages is exceeded ([#243](https://github.com/weserv/images/issues/243)).\n- Bump minimum required libvips version to 8.12.\n- Allow arbitrary values for the max-age parameter ([#292](https://github.com/weserv/images/issues/292)).\n- Increase rate limit quota to 2500 requests per 10 minutes ([#196](https://github.com/weserv/images/issues/196)).\n- The name of the project, CLI and shared library name (`imagesweserv` -> `weserv`).\n- Warn if nginx was configured without `--with-http_ssl_module`.\n- Build nginx with `--with-http_secure_link_module` by default.\n- Migrate from PCRE to PCRE2.\n- Modernize code to C++17.\n- Use jemalloc in the glibc-based Dockerfile.\n- Improve ICC profile conversion.\n- Speed-up thumbnailing of RGBA images.\n\n### Fixed\n- Compatibility with CMake < 3.12.\n- Compatibility with legacy websites by using lowest OpenSSL security level ([#208](https://github.com/weserv/images/issues/208)).\n- Thread safety with copy-on-write for metadata ([lovell/sharp#1986](https://github.com/lovell/sharp/issues/1986)).\n- A small memory leak in thumbnail.\n- Comply URI parser with the RFC-3986 standard ([#237](https://github.com/weserv/images/issues/237)).\n- Page height logic for non-animated images ([#242](https://github.com/weserv/images/issues/242)).\n- Premultiplication bug during masking ([#245](https://github.com/weserv/images/issues/245)).\n- Message for HTTP 500 response status codes ([#264](https://github.com/weserv/images/issues/264)).\n- Focal point calculations ([#270](https://github.com/weserv/images/issues/270)).\n- Parsing of key-value pairs ([#279](https://github.com/weserv/images/issues/279) and [#358](https://github.com/weserv/images/issues/358)).\n- Reduce the size of the Docker image ([#316](https://github.com/weserv/images/issues/316)).\n- Only set permanent URLs as canonical ([#309](https://github.com/weserv/images/issues/309)).\n- Using the `&page` parameter in combination with `&n=-1`.\n- Skip shrink-on-load for known libjpeg rounding errors.\n- Compatibility with mixed C++ ABIs ([#338](https://github.com/weserv/images/issues/338)).\n- Prevent upsizing via libwebp.\n- Honor the `VIPS_MIN_STACK_SIZE` and `VIPS_BLOCK_UNTRUSTED` env variables.\n- Ensure use of flip forces random access read.\n- The maximum values of the sharpen operation ([#357](https://github.com/weserv/images/issues/357)).\n- Bump buffer size for HTTP response headers ([#378](https://github.com/weserv/images/issues/378)).\n- Ensure correct dimensions for 90/270 rotate.\n\n### Deprecated\n| Before               | Use instead                             |\n| :------------------- | :-------------------------------------- |\n| `&bri=[-100/+100]`   | `&mod=[brightness multiplier]`          |\n| `&a=focal-[x%]-[y%]` | `&fpx=[x offset]` and `&fpy=[y offset]` |\n\n### Removed\nThe `weserv_mode proxy|file;` directive is removed in favour of the `weserv proxy|filter;` directive. This means that\nall occurrences of `weserv on|off;` and `weserv_mode proxy|file;` should be removed from existing nginx configurations.\n\nTo enable the Weserv module, it is now mandatory to include the `weserv proxy|filter;` directive in the location block.\nFor example:\n```diff\n@@ -1,12 +1,10 @@\n server {\n-    weserv on;\n-\n     location / {\n-        weserv_mode proxy;\n+        weserv proxy;\n     }\n \n     location /static {\n-        weserv_mode file;\n+        weserv filter;\n \n         alias /var/www/imagesweserv/public;\n     }\n```\n\n## [5.0.0] - started 2019-02-07\n\nRequires libvips 8.8+.\n\nSee [this blog post](https://wsrv.nl/news/2019/09/01/introducing-api-5/) for a summary of the new features in API 5.\n\n### Added\n- Support for animated WebP and GIF images.\n- Support for loading HEIC-images.\n- Without enlargement (`&we`, can be used in combination with all `&fit=` parameters) ([#173](https://github.com/weserv/images/issues/173)).\n- Background color when using `&fit=contain` (`&cbg=`).\n- Image tinting (`&tint=`).\n- Arbitrary rotation angles (`&ro=`).\n- Background color when rotating by arbitrary angles (`&rbg=`).\n- Adaptive row filtering (`&af`, PNG only).\n- zlib compression level (`&l=`, PNG only).\n- Metadata output (`&output=json`).\n- Flipping an image horizontally (`&flop`) and/or vertically (`&flip`).\n- Pre-resize crop behaviour (`&precrop`) ([#176](https://github.com/weserv/images/issues/176)).\n- Retrieve the largest/smallest page from a multi-resolution image (`&page=-1` / `&page=-2`) ([#170](https://github.com/weserv/images/issues/170)).\n- Duotone filter effect (`&filt=duotone`). The two contrasting colours can be specified with `&start=` and `&stop=`.\n- Fit option to ensure that the dimensions are greater than or equal to both those specified (`&fit=outside`).\n- Support for changing the `max-age` of the `Cache-Control` HTTP-header (`&maxage=`) ([#186](https://github.com/weserv/images/issues/186)).\n\n### Changed\n- Rewrote the entire code base to C++.\n- Improved rate limiter. See the [weserv/rate-limit-nginx-module](https://github.com/weserv/rate-limit-nginx-module) repository.\n- Align the confusing transformation (`&t=`) parameters with the CSS terminology (`&fit=`).\n- A JSON-formatted response with the appropriate `application/json` MIME-type, if an error occurs.\n- Docker image and deployment improvements ([#180](https://github.com/weserv/images/issues/180)).\n\n### Deprecated\n| Before                  | Use instead                                   |\n| :---------------------- | :-------------------------------------------- |\n| `&t=fit`                | `&fit=inside&we`                              |\n| `&t=fitup`              | `&fit=inside`                                 |\n| `&t=square`             | `&fit=cover`                                  |\n| `&t=squaredown`         | `&fit=cover&we`                               |\n| `&t=absolute`           | `&fit=fill`                                   |\n| `&t=letterbox`          | `&fit=contain`                                |\n| `&a=crop-[x%]-[y%]`     | `&a=focal-[x%]-[y%]`                          |\n| `&errorredirect`        | `&default`                                    |\n| `&sharp=[f],[j],[s]`    | `&sharp=[s]`, `&sharpf=[f]` and `&sharpj=[j]` |\n| `&crop=[w],[h],[x],[y]` | `&cw=[w]`, `&ch=[h]`, `&cx=[x]` and `&cy=[y]` |\n\n## [4.0.0] - started 2018-07-17\n\nRequires libvips 8.7+ and OpenResty 1.13.6.2+.\n\nSee [this blog post](https://wsrv.nl/news/2018/07/29/introducing-api-4/) for a summary of the new features in API 4.\n\n### Added\n- Mask background (`&mbg=`).\n\n### Changed\n- Rewrote the complete code base to Lua and switched to [OpenResty](https://openresty.org/en/).\n    - Switch from libvips' [PHP binding](https://github.com/libvips/php-vips) to the [LuaJIT binding](https://github.com/libvips/lua-vips).\n- The `&shape` and `&strim` parameters were renamed to `&mask` and `&mtrim`.\n- Support for URI's starting with `http://` and `https://`.\n\n### Deprecated\n| Before    | Use instead |\n| :-------- | :---------- |\n| `&shape=` | `&mask=`    |\n| `&strim=` | `&mtrim=`   |\n\n## [3.0.0] - started 2017-01-01\n\nRequires libvips 8.7+ and PHP 7.1+.\n\n### Note\nWith the magical help of [libvips](https://github.com/libvips/libvips) and the PHP binding [php-vips](https://github.com/libvips/php-vips), we \"officially\" support `PNG`, `JPG`, `WEBP`, `GIF` (not animated), `SVG`, `PDF` and `TIFF` as image input. \"Unofficially\" we're supporting all [libMagick image file types](https://www.imagemagick.org/script/formats.php#supported).\n\n### Added\n- `&output=webp` and `&output=tiff` in an effort to support more image formats as output ([#68](https://github.com/weserv/images/issues/68)).\n- Device pixel ratio (`&dpr=`) ([#115](https://github.com/weserv/images/issues/115)).\n- Letterboxing (`&t=letterbox`) ([#80](https://github.com/weserv/images/issues/80)).\n- Rotation by any multiple of 90 (`&or=`).\n- Smart crop `&a=entropy` or `&a=attention` (only works when `&t=square`).\n- Focal point cropping (`&a=crop-x%-y%`, only works when `&t=square`).\n- Shape cropping (`&shape=`).\n- Brightness adjustment (`&bri=`).\n- Contrast adjustment (`&con=`).\n- Gamma adjustment (`&gam=`).\n- Sharpen an image (`&sharp=`).\n- Background color of an image (`&bg=`) ([#81](https://github.com/weserv/images/issues/81)).\n- Blur effect (`&blur=`) ([#69](https://github.com/weserv/images/issues/69)).\n- Filter effect (`&filt=`).\n- The filename returned in the `Content-Disposition` header (`&filename=`) ([#122](https://github.com/weserv/images/issues/122) and [#78](https://github.com/weserv/images/issues/78)).\n- Support for Cyrillic and Arabic characters ([#13](https://github.com/weserv/images/issues/13)).\n- Redirect to a default image if the image URL is not found (`&errorredirect=`) ([#37](https://github.com/weserv/images/issues/37)).\n- Load a given page (`&page=`, for PDF, TIFF and multi-size ICO files).\n- Support for non-standard ports ([#10](https://github.com/weserv/images/issues/10)).\n- A privacy policy. See [Privacy-Policy.md](Privacy-Policy.md).\n- A Docker image for easier deployment. See the [Docker installation instructions](docker/README.md).\n\n### Changed\n- Dropped [Intervention Image](https://image.intervention.io/) in favor of [php-vips](https://github.com/libvips/php-vips) because resizing an image with [libvips](https://github.com/libvips/libvips) is typically 4x-5x faster than using the quickest ImageMagick.\n- We're now using the [uri package](https://github.com/thephpleague/uri) in order to parse URIs correctly. This is a drop-in replacement to PHP’s `parse_url` function.\n\n### Deprecated\n| Before    | Use instead     |\n| :-------- | :-------------- |\n| `&a=t`    | `&a=top`        |\n| `&a=b`    | `&a=bottom`     |\n| `&a=l`    | `&a=left`       |\n| `&a=r`    | `&a=right`      |\n| `&circle` | `&shape=circle` |\n\n## [2.0.0] - started 2015-12-27\n\n### Note\nThis version was never used in production, it's only used for testing purposes, and it was a beginning to re-write the entire image proxy (which is in production since 2007).\n\n### Added\n- Add CHANGELOG.md based on [’Keep a CHANGELOG’](https://github.com/olivierlacan/keep-a-changelog).\n- Composer ready and [PSR-2](https://www.php-fig.org/psr/psr-2/) compliant.\n- Used the [Intervention Image](https://image.intervention.io/) library for image handling and manipulation.\n- Used the [Guzzle](https://github.com/guzzle/guzzle) library for sending HTTP requests.\n\n## [1.0.0] - started 2007-09-10\n\n### Note\nThe start of our image proxy. See for more details [here](https://github.com/weserv/images/wiki).\n\n### Added / Changed / Fixed\nWe never kept a changelog from 2007 to 2015.\nFor a quick overview what we've added, changed or fixed in the past see our [completed label](https://github.com/weserv/images/issues?utf8=%E2%9C%93&q=label%3Acompleted%20no%3Amilestone) on our issue tracker. Or take a look at our [1.x branch](https://github.com/weserv/images/tree/1.x).\n\n[Current trunk]: https://github.com/weserv/images/compare/v5.0.0...HEAD\n[5.0.0]: https://github.com/weserv/images/compare/4.x...v5.0.0\n[4.0.0]: https://github.com/weserv/images/compare/3.x...4.x\n[3.0.0]: https://github.com/weserv/images/compare/78d8b32...3.x\n[2.0.0]: https://github.com/weserv/images/compare/6524ee1...78d8b32\n[1.0.0]: https://github.com/weserv/images/compare/1.x...6524ee1\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.259765625,
          "content": "# Note: FetchContent_MakeAvailable was added in CMake 3.14\ncmake_minimum_required(VERSION 3.14)\n\nproject(weserv\n        VERSION 5.0.0\n        DESCRIPTION \"Image cache and resize service\"\n        LANGUAGES\n            C\n            CXX\n        )\n\n# Set output directories in which to build the target files\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)\n\n# Options\noption(ENABLE_COVERAGE \"Compile in coverage mode\" OFF)\noption(ENABLE_SANITIZER \"Build with clang sanitizer\" OFF)\noption(ENABLE_CLANG_TIDY \"Enable source code checking using clang-tidy\" OFF)\noption(BUILD_TOOLS \"Whether or not to build the tools\" OFF)\noption(BUILD_TESTS \"Whether or not to build the tests\" OFF)\noption(INSTALL_NGX_MODULE \"Build and install nginx along with the weserv module\" ON)\n\n# Set a default build type if none was specified\nif (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    message(STATUS \"Setting build type to 'Release' as none was specified.\")\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build.\" FORCE)\nendif()\n\n# Let's enable C++17\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\n# Coverage flags\nif (ENABLE_COVERAGE)\n    set(CMAKE_CXX_FLAGS_DEBUG \"-O0 -g --coverage\")\n    set(CMAKE_EXE_LINKER_FLAGS \"--coverage\")\nelseif (CMAKE_COMPILER_IS_GNUCXX)\n    # Compiler flags\n    set(CMAKE_CXX_FLAGS_RELEASE \"-O3 -ffast-math\") # Optimize for performance\n    set(CMAKE_EXE_LINKER_FLAGS \"-s\")   # Strip binary\nendif()\n\n# AddressSanitizer flags\nif (ENABLE_SANITIZER)\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address -fno-omit-frame-pointer -g -O1\")\n    set(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=address -fno-omit-frame-pointer -g -O1\")\nendif()\n\nif (ENABLE_CLANG_TIDY)\n    find_program(\n            CLANG_TIDY_EXE\n            NAMES \"clang-tidy\"\n            DOC \"Path to clang-tidy executable\"\n    )\n    if (NOT CLANG_TIDY_EXE)\n        message(STATUS \"clang-tidy not found\")\n        set(ENABLE_CLANG_TIDY OFF CACHE BOOL \"\" FORCE)\n    else()\n        set(CMAKE_CXX_CLANG_TIDY \"${CLANG_TIDY_EXE}\" \"-format-style=file\")\n    endif()\nendif()\n\ninclude(ExternalProject)\ninclude(FetchContent)\n\n# Use GNUInstallDirs to install libraries into correct locations on all platforms\ninclude(GNUInstallDirs)\n\n# Find Catch2 (optional)\nfind_package(Catch2 3.0.1 QUIET)\n\n# Find libvips (required)\nfind_package(PkgConfig)\npkg_check_modules(VIPS vips-cpp>=8.12 REQUIRED)\n\n# Create the shared API library\nadd_subdirectory(src/api)\n\nif (BUILD_TOOLS)\n    add_subdirectory(src/tools)\nendif()\n\nif (BUILD_TESTS)\n    enable_testing()\n\n    # Build Catch2 (a modern test framework), if necessary\n    if (NOT Catch2_FOUND)\n        add_subdirectory(third_party/catch2)\n    endif()\n\n    add_subdirectory(test/api)\nendif()\n\n# Install nginx along with the nginx weserv module, if necessary\nif (INSTALL_NGX_MODULE)\n    add_subdirectory(third_party/rate-limit-nginx-module)\n\n    # Install the echo module only in debug builds\n    # (needed by the integration tests)\n    if (CMAKE_BUILD_TYPE MATCHES \"Debug\")\n        add_subdirectory(third_party/echo-nginx-module)\n    endif()\n\n    add_subdirectory(third_party/nginx)\nendif()\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 1.3359375,
          "content": "# Install instructions (for RHEL 9, and its derivatives)\n\n## Build dependencies\n\n * `cmake` >= 3.11 (for `FetchContent` module)\n * `g++` >= 5.0 (for `-std=c++17` support)\n * `pcre2` (for nginx rewrite module)\n * `zlib` (for nginx gzip module)\n * `openssl` (for SSL support)\n * `libvips` >= 8.12\n\n## Install instructions\n\n```bash\n# Install the EPEL repository configuration package\ndnf install epel-release\n\n# Enable the CodeReady Builder repository since EPEL packages may depend on packages from it\ncrb enable\n\n# Install the Remi repository configuration package\ndnf install https://rpms.remirepo.net/enterprise/remi-release-9.rpm\n\n# Install the RPM Fusion repository configuration package (for libheif)\ndnf install --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-9.noarch.rpm\n\n# Enable Remi's RPM repository\ndnf config-manager --set-enabled remi\n\n# Install libvips 8.15 (full-fat version)\ndnf install vips-devel vips-heif vips-magick-im6\n\n# Install build requirements\ndnf install \\\n  autoconf \\\n  automake \\\n  cmake \\\n  make \\\n  gcc \\\n  gcc-c++ \\\n  git \\\n  glibc-devel \\\n  glibc-headers \\\n  openssl-devel \\\n  pcre2-devel \\\n  zlib-devel\n```\n\n## Build\n\n```bash\ngit clone --recurse-submodules https://github.com/weserv/images.git\ncd images\nmkdir build && cd build\ncmake .. \\\n  -DCMAKE_BUILD_TYPE=Release\nsudo cmake --build . -- -j$(nproc)\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.529296875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2007-present, Andries Louw Wolthuizen and Kleis Auke Wolthuizen.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of wsrv.nl and images.weserv.nl nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Privacy-Policy.md",
          "type": "blob",
          "size": 3.3994140625,
          "content": "# Privacy Policy\nLast updated: November 15, 2022\n\nwsrv.nl (\"us\", \"we\", or \"our\") operates the https://wsrv.nl/ (formerly https://images.weserv.nl/) website (hereinafter referred to as the \"Service\").\n\nThis page informs you of our policies regarding the collection, use and disclosure of Personal Data when you use our Service.\n\nWe will not use or share your data with anyone except as described in this Privacy Policy. By using the Service, you agree to the collection and use of information in accordance with this Privacy Policy.\n\n## Data collection and use\nIn order to provide and improve our Service to you, we collect statistics on an ongoing basis. We do not knowingly collect personally identifiable information that can be used to contact or identify you.\n\n### Types of data collected\n\n#### Log Data\nWhile using our Service, we collect information that your browser sends whenever you visit our Service (\"Log Data\").\n\nThis Log Data includes the following information: your device's Internet Protocol address (IP address), browser type, browser version, the pages of our Service that you visit and the time and date of your visit.\n\nLog Data is retained for 7 days, after which it is automatically deleted. Anonymised statistics may be shared to improve our service.\n\n## Use of data\nWe may use the collected data for the following purposes:\n\n- To provide and maintain our Service.\n- To provide customer support.\n- To provide analysis or valuable information so that we can improve the Service.\n- To monitor the usage of our Service.\n- To detect, prevent and address technical issues.\n\n## Service providers\nWe may employ third party companies and individuals to facilitate our Service (\"Service Providers\"), provide the Service on our behalf, perform Service-related services or assist us in analysing how our Service is used.\n\nThese third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.\n\n## Children's privacy\nOur Service does not address anyone under the age of 13 (\"Children\").\n\nWe do not knowingly collect personally identifiable information from anyone under the age of 13. If you are a parent or guardian and you are aware that your Child has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from anyone under the age of 13 without verification of parental consent, we will delete such information from our servers.\n\n## Links to other sites\nOur Service may contain links to other websites that are not operated by us. If you click on a third party link, you will be directed to that third party's site. We strongly advise you to review the Privacy Policy of every site you visit.\n\nWe have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.\n\n## Changes to this Privacy Policy\nWe may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page. [The history of changes can be viewed here](https://github.com/weserv/images/commits/5.x/Privacy-Policy.md).\n\nYou are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.\n\n## Contacting us\nIf you have any questions about this Privacy Policy, you can contact us by [creating an issue](https://github.com/weserv/images/issues).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8232421875,
          "content": "# weserv/images\n\n[<img src=\"https://raw.githubusercontent.com/weserv/docs/deploy/logo.svg?sanitize=true\" width=\"160\" align=\"right\" alt=\"wsrv.nl logo\">][website]\n\n[![Author](https://img.shields.io/badge/author-andrieslouw-blue.svg)][author1]\n[![Author](https://img.shields.io/badge/author-kleisauke-blue.svg)][author2]\n[![Source code](https://img.shields.io/badge/source-weserv/images-blue.svg)](https://github.com/weserv/images)\n[![Software license](https://img.shields.io/github/license/weserv/images.svg)](https://opensource.org/licenses/BSD-3-Clause)\n[![CI status](https://github.com/weserv/images/workflows/CI/badge.svg?branch=5.x)](https://github.com/weserv/images/actions)\n[![Coverage status](https://codecov.io/gh/weserv/images/branch/5.x/graph/badge.svg)](https://codecov.io/gh/weserv/images)\n\nSource code of wsrv.nl (formerly images.weserv.nl), to be used on your own server(s). weserv/images leverages\npowerful libraries like [libvips](https://github.com/libvips/libvips) (for image handling and manipulation)\nand [nginx](https://github.com/nginx/nginx) (used as web server, forward proxy and HTTP cache).\n\n## Technologies used\n\n- Linux, [nginx](https://github.com/nginx/nginx) and [libvips](https://github.com/libvips/libvips)\n (without these technologies, this project would never have been possible)\n- [Cloudflare](https://www.cloudflare.com/) (for CDN caching and IP-blocking)\n- [Redis](https://github.com/antirez/redis) (for rate limiting)\n- [OpenDNS](https://www.opendns.com/) (for DNS-filtering)\n\n## Documentation\n\nSee our [wiki documentation](https://github.com/weserv/images/wiki) or\n[API reference][website] for information on using wsrv.nl.\n\n## Docker deployment\n\nFor information on Docker deployment, please read the\n[Docker installation instructions](docker/README.md).\n\n## Submitting Bugs and Suggestions\n\nWe track support tickets, issues and feature requests using\nthe [GitHub issue tracker](https://github.com/weserv/images/issues).\n\n## Credits\n\n| [![Andries Louw Wolthuizen][avatar-author1]][author1] | [![Kleis Auke Wolthuizen][avatar-author2]][author2] |\n| --- | --- |\n| [Andries Louw Wolthuizen][author1] | [Kleis Auke Wolthuizen][author2] |\n\n## License\n\nThe source code is licensed under the BSD 3-Clause License, see the [LICENSE](LICENSE) file for details.\n\n## Privacy Policy\n\nPlease see [Privacy-Policy.md](Privacy-Policy.md) for more information.\n\n## Last but not least\n\nThis is made in Sneek with love and passion.\n\n[<img src=\"https://raw.githubusercontent.com/weserv/docs/deploy/made-in-sneek.svg?sanitize=true\" height=\"200\" alt=\"Made in Sneek logo\">](https://en.wikipedia.org/wiki/Sneek)\n\n[website]: https://wsrv.nl/\n[author1]: https://github.com/andrieslouw\n[author2]: https://github.com/kleisauke\n[avatar-author1]: https://avatars.githubusercontent.com/u/11487455?v=4&s=120\n[avatar-author2]: https://avatars.githubusercontent.com/u/12746591?v=4&s=120\n"
        },
        {
          "name": "config",
          "type": "blob",
          "size": 1.5068359375,
          "content": "if [ -z \"$ngx_module_link\" ]; then\ncat << END\n\n$0: error: Weserv module requires recent version of NGINX (1.9.11+).\n\nEND\n    exit 1\nfi\n\nif [ $HTTP_SSL != YES ]; then\ncat << END\n\n$0: warning: NGINX configured without --with-http_ssl_module, SSL support is disabled within the Weserv module.\n\nEND\nfi\n\nngx_addon_name=ngx_weserv_module\nngx_module_type=HTTP_AUX_FILTER\nngx_module_name=$ngx_addon_name\nngx_module_incs=\"$ngx_addon_dir/include\"\nngx_module_deps=\" \\\n  $ngx_addon_dir/src/nginx/alloc.h \\\n  $ngx_addon_dir/src/nginx/environment.h \\\n  $ngx_addon_dir/src/nginx/error.h \\\n  $ngx_addon_dir/src/nginx/handler.h \\\n  $ngx_addon_dir/src/nginx/header.h \\\n  $ngx_addon_dir/src/nginx/http.h \\\n  $ngx_addon_dir/src/nginx/http_filter.h \\\n  $ngx_addon_dir/src/nginx/http_request.h \\\n  $ngx_addon_dir/src/nginx/module.h \\\n  $ngx_addon_dir/src/nginx/stream.h \\\n  $ngx_addon_dir/src/nginx/uri_parser.h \\\n  $ngx_addon_dir/src/nginx/util.h \\\n\"\nngx_module_srcs=\" \\\n  $ngx_addon_dir/src/nginx/environment.cpp \\\n  $ngx_addon_dir/src/nginx/error.cpp \\\n  $ngx_addon_dir/src/nginx/handler.cpp \\\n  $ngx_addon_dir/src/nginx/header.cpp \\\n  $ngx_addon_dir/src/nginx/http.cpp \\\n  $ngx_addon_dir/src/nginx/http_filter.cpp \\\n  $ngx_addon_dir/src/nginx/module.cpp \\\n  $ngx_addon_dir/src/nginx/stream.cpp \\\n  $ngx_addon_dir/src/nginx/uri_parser.cpp \\\n  $ngx_addon_dir/src/nginx/util.cpp \\\n\"\nngx_module_libs=\"-lstdc++ -L$ngx_addon_dir/lib -lweserv\"\n\n. auto/module\n\n# Save our sources in a separate var since we may need it in config.make\nWESERV_NGX_SRCS=\"$ngx_module_srcs\"\n"
        },
        {
          "name": "config.make",
          "type": "blob",
          "size": 0.3798828125,
          "content": "# Since nginx build system doesn't normally do C++, there is no CXXFLAGS for us\n# to touch, and compilers are understandably unhappy with --std=c++17 on C\n# files. Hence, we hack the makefile to add it for just our sources.\nfor src_file in $WESERV_NGX_SRCS; do\n  obj_file=\"$NGX_OBJS/addon/nginx/`basename $src_file .cpp`.o\"\n  echo \"$obj_file : CFLAGS += --std=c++17\" >> $NGX_MAKEFILE\ndone\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "ngx_conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "commit",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}