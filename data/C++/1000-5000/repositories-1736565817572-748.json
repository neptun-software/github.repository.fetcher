{
  "metadata": {
    "timestamp": 1736565817572,
    "page": 748,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Cxbx-Reloaded/Cxbx-Reloaded",
      "stars": 2216,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 1.302734375,
          "content": "# Documentation is here: https://www.appveyor.com/docs/appveyor-yml/\n# You can validate ymls here: https://ci.appveyor.com/tools/validate-yaml\n\nskip_commits:\n  files:\n    - doc/*\n    - doc/*/*\n    - .github/*\n    - .github/*/*\n    - .azure-pipelines.yml\n    - CONTRIBUTORS\n    - COPYING\n    - README.md\n    - gen-msvc-project.bat\n    - setup.bat\n\ninit:\n  - ps: |-\n      echo \"This CI isn't tested against master, and therefore, isn't guaranteed to work. Pull requests are welcome.\"\n      echo \"If it doesn't work and you'd rather not fix it, it's recommended to use GitHub Actions CI instead.\"\n      Update-AppveyorBuild -Version \"$env:appveyor_repo_commit\"\n\nimage: # If this is modified, please also update the build script\n  - Visual Studio 2019\n\nconfiguration: # The builds will be run in this order\n  - Release\n  - Debug\n\nbefore_build:\n  - |-\n      git submodule update --init --recursive\n      mkdir build\n      cd build\n      cmake .. -G \"Visual Studio 16 2019\" -A Win32\n\nbuild_script:\n  - cmake --build . --config %configuration%\n\non_success:\n  - ps: |-\n      If ($env:configuration -eq 'Release') {\n        cmake --install . --config $env:configuration --prefix artifacts\n        7z a \"$env:configuration.zip\" ./artifacts/bin/*\n        Get-ChildItem .\\*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }\n      }\n"
        },
        {
          "name": ".azure-pipelines.yml",
          "type": "blob",
          "size": 1.4921875,
          "content": "trigger:\n  branches:\n    include:\n    - '*'\n  paths:\n    exclude:      # Azure Pipelines doesn't support recursive wildcards, see\n    - '.github/*' # https://developercommunity.visualstudio.com/t/support-wildcards-in-trigger-path-filters-1/366363\n    - '.github/*/*'\n    - '*.bat'\n    - '.appveyor.yml'\n    - 'doc/*/*'\n    - 'doc/*'\n\npr:\n  branches:\n    include:\n    - '*'\n  paths:\n    exclude:\n    - '.github/*'\n    - '.github/*/*'\n    - '*.bat'\n    - '.appveyor.yml'\n    - 'doc/*/*'\n    - 'doc/*'\n\npool:\n  vmImage: windows-latest\nstrategy:\n  matrix:\n    Release:\n      configuration: Release\n    Debug:\n      configuration: Debug\n\nsteps:\n- pwsh: |\n    echo \"This CI isn't tested against master, and therefore, isn't guaranteed to work. Pull requests are welcome.\"\n    echo \"If it doesn't work and you'd rather not fix it, it's recommended to use GitHub Actions CI instead.\"\n  displayName: Third-Party CI Warning\n\n- checkout: self\n  submodules: recursive\n\n- pwsh: cmake -B build -A Win32\n  displayName: Before build\n\n- pwsh: cmake --build . --config $env:configuration\n  workingDirectory: build\n  displayName: Build\n\n- pwsh: cmake --install . --config $env:configuration --prefix $(Build.ArtifactStagingDirectory)\n  workingDirectory: build\n  condition: and(succeeded(), eq(variables['configuration'], 'Release'))\n  displayName: Prepare artifacts\n\n- publish: $(Build.ArtifactStagingDirectory)\n  artifact: $(configuration)\n  condition: and(succeeded(), eq(variables['configuration'], 'Release'))\n  displayName: Publish artifacts\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5498046875,
          "content": "# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n\n* text=auto\n\n[Cc][Mm]ake[Ll]ists.txt text eol=lf\n*.bat text eol=lf\n*.c text eol=lf\n*.h text eol=lf\n*.cpp text eol=lf\n*.hpp text eol=lf\n*.unused-patches text eol=lf\n*.rc text eol=lf\n\n# All module imports are vendor, remove them from linguist stats chart for accurate stats.\nimport/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2236328125,
          "content": "# Build folders\n[Bb]uild/\n[Bb]uild-*/\n\n# CLion\n.idea/\ncmake-build-*/\n\n# Visual Studio Cache\n.vs/\n\n# Generated files\n*.aps\n\n#Test files\nsrc/[Vv]ersion.h\n*.xbe\n\n# Last known git hash\nLAST_GIT_VERSION\n\n# git mergetool backup\n*.orig\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.408203125,
          "content": "[submodule \"import/subhook\"]\n\tpath = import/subhook\n\turl = https://github.com/Cxbx-Reloaded/subhook.git\n\tshallow = true\n[submodule \"import/cs_x86\"]\n\tpath = import/cs_x86\n\turl = https://github.com/x1nixmzeng/cs_x86.git\n[submodule \"import/XbSymbolDatabase\"]\n\tpath = import/XbSymbolDatabase\n\turl = https://github.com/Cxbx-Reloaded/XbSymbolDatabase.git\n[submodule \"import/simpleini\"]\n\tpath = import/simpleini\n\turl = https://github.com/brofield/simpleini.git\n\tshallow = true\n[submodule \"import/libtommath\"]\n\tpath = import/libtommath\n\turl = https://github.com/libtom/libtommath.git\n\tbranch = master\n\tshallow = true\n[submodule \"import/libtomcrypt\"]\n\tpath = import/libtomcrypt\n\turl = https://github.com/libtom/libtomcrypt.git\n\tbranch = master\n\tshallow = true\n[submodule \"import/xxHash\"]\n\tpath = import/xxHash\n\turl = https://github.com/Cyan4973/xxHash.git\n\tbranch = release\n\tshallow = true\n[submodule \"import/imgui\"]\n\tpath = import/imgui\n\turl = https://github.com/ocornut/imgui.git\n\tshadow = true\n[submodule \"import/SDL2\"]\n\tpath = import/SDL2\n\turl = https://github.com/libsdl-org/SDL\n\tshallow = true\n[submodule \"import/libusb\"]\n\tpath = import/libusb\n\turl = https://github.com/Cxbx-Reloaded/libusb\n\tbranch = deadlock_fix\n\tshallow = true\n[submodule \"import/nv2a_vsh_cpu\"]\n\tpath = import/nv2a_vsh_cpu\n\turl = https://github.com/abaire/nv2a_vsh_cpu.git\n[submodule \"import/mio\"]\n\tpath = import/mio\n\turl = https://github.com/mandreyel/mio.git\n\tshadow = true\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 23.416015625,
          "content": "cmake_minimum_required (VERSION 3.8)\n\nproject(Cxbx-Reloaded)\n\n# Allow devs to disable regeneration option.\n# Suppress extra stuff from generated solution\n#set(CMAKE_SUPPRESS_REGENERATION true)\n\n# Output all binary files into one folder\nif(NOT DEFINED CMAKE_RUNTIME_OUTPUT_DIRECTORY)\n set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${Cxbx-Reloaded_BINARY_DIR}/bin\")\nendif()\n\nset(SUBHOOK_TESTS OFF)\nset(SUBHOOK_INSTALL OFF)\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/subhook\" EXCLUDE_FROM_ALL)\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/XbSymbolDatabase\")\n\n# Not require since only include a header file\n#add_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/simpleini\")\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/SDL2\" EXCLUDE_FROM_ALL)\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/mio\" EXCLUDE_FROM_ALL)\n\n# Cxbx-Reloaded projects\nset(CXBXR_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR})\n\nadd_custom_target(misc-batch\n  ${CMAKE_COMMAND} -DTargetRunTimeDir=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>\n  -P ${CXBXR_ROOT_DIR}/projects/misc/batch.cmake\n  WORKING_DIRECTORY ${CXBXR_ROOT_DIR}\n)\n\n# Custom CMake projects since some import libraries doesn't have it.\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/libtom\")\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/imgui\")\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/libusb\")\n\nset(nv2a_vsh_cpu_UNIT_TEST OFF)\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/import/nv2a_vsh_cpu\" EXCLUDE_FROM_ALL)\n\n# Split the files into group for which project is likely\n# going to be used for both header and source files.\n# Then move only specific project files into their\n# cmakelist file in finalize stage.\n# Any of files being shared between two projects need to\n# leave in parent cmakelist (here) for better sync across\n# child projects.\n\n# Common (GUI and Emulator)\nfile (GLOB CXBXR_HEADER_COMMON\n \"${CXBXR_ROOT_DIR}/src/common/AddressRanges.h\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuDes.h\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuRsa.h\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuSha.h\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/LibRc4.h\"\n \"${CXBXR_ROOT_DIR}/src/common/CxbxDebugger.h\"\n \"${CXBXR_ROOT_DIR}/src/common/cxbxr.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/EmuEEPROM.h\"\n \"${CXBXR_ROOT_DIR}/src/common/Error.h\"\n \"${CXBXR_ROOT_DIR}/src/common/FilePaths.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/DInputKeyboardCodes.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/DInputKeyboardMouse.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/layout_xbox_device.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/LibusbDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputManager.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/SdlJoystick.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/XInputPad.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/RawDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/common/IPCHybrid.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/Logging.h\"\n \"${CXBXR_ROOT_DIR}/src/common/Settings.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/cliConfig.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/cliConverter.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/CPUID.h\"\n \"${CXBXR_ROOT_DIR}/src/common/util/CxbxUtil.h\"\n \"${CXBXR_ROOT_DIR}/src/common/util/std_extend.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/strConverter.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/AlignPosfix1.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/AlignPrefix1.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/EmuShared.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Mutex.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Util.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/WineEnv.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xbdm/CxbxXbdm.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xbe/Xbe.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xbe/XbePrinter.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xbox/Logging.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbox/Types.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbox_types.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xdvdfs-tools/buffered_io.h\"\n \"${CXBXR_ROOT_DIR}/src/common/xdvdfs-tools/xdvdfs.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbConvert.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbD3D8Types.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XAPI/Xapi.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlLogging.h\"\n \"${CXBXR_ROOT_DIR}/src/Cxbx.h\"\n \"${CXBXR_ROOT_DIR}/src/CxbxVersion.h\"\n \"${CXBXR_ROOT_DIR}/src/version.h\"\n)\n\n# GUI v1\nfile (GLOB CXBXR_HEADER_GUIv1\n \"${CXBXR_ROOT_DIR}/src/common/input/Button.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/EmuDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputWindow.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgDukeControllerConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgLibusbControllerConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgLightgunConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgSBControllerConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgAbout.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgAudioConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgInputConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgEepromConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgLoggingConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgNetworkConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgVideoConfig.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/Wnd.h\"\n \"${CXBXR_ROOT_DIR}/src/gui/WndMain.h\"\n)\n\n# Emulator (module)\nfile (GLOB CXBXR_HEADER_EMU_IMPORT\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_dx9.h\"\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_opengl3.h\"\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_win32.h\"\n)\nfile (GLOB CXBXR_HEADER_EMU\n \"${CXBXR_ROOT_DIR}/src/common/audio/converter.hpp\"\n \"${CXBXR_ROOT_DIR}/src/common/audio/XADPCM.h\"\n \"${CXBXR_ROOT_DIR}/src/common/Timer.h\"\n \"${CXBXR_ROOT_DIR}/src/common/util/gloffscreen/glextensions.h\"\n \"${CXBXR_ROOT_DIR}/src/common/util/gloffscreen/gloffscreen.h\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Threads.h\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/audio.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/ui.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/settings.h\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/video.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/video/RenderBase.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/CxbxPixelShaderTemplate.hlsl\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/CxbxVertexShaderTemplate.hlsl\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/CxbxVertexShaderPassthrough.hlsl\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/Direct3D9.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/FixedFunctionPixelShader.hlsl\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/FixedFunctionPixelShader.hlsli\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/FixedFunctionVertexShader.hlsl\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/FixedFunctionVertexShaderState.hlsli\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/PixelShader.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/Shader.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/VertexShader.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/VertexShaderCache.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/WalkIndexBuffer.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/FixedFunctionState.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/ResourceTracker.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbD3D8Logging.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbPixelShader.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbPushBuffer.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbState.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbVertexBuffer.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbVertexShader.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/common/windows/WFXformat.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSound.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundGlobal.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundInline.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundLogging.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DSStream_PacketManager.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/XbDSoundFuncs.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/XbDSoundLogging.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/XbDSoundTypes.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/common/XbInternalStruct.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/Intercept.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/Patches.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XACTENG/XactEng.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XGRAPHIC/XGraphic.h\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XONLINE/XOnline.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/common/strings.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlAvModes.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlKe.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlKi.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlPs.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/init/CxbxKrnl.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/init/KrnlPatches.hpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/PhysicalMemory.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/PoolManager.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/VMManager.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/Emu.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuFile.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuFS.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuNtDll.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/NativeHandle.h\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/PatchRdtsc.hpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/ADM1032Device.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/EEPROMDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/network/NVNetDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/LED.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/MCPXDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/PCIBus.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/PCIDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMBus.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMCDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/Hub.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/OHCI.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/UsbCommon.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/USBDevice.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/XidGamepad.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_debug.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_int.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_psh.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_regs.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_shaders.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_shaders_common.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_vsh.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/qemu-thread.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/queue.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/swizzle.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/vga.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/x86/EmuX86.h\"\n \"${CXBXR_ROOT_DIR}/src/devices/Xbox.h\"\n)\n\n# filter hlsl files into its own list\n# excluding hlsli file(s)\nset(CXBXR_HEADER_HLSL ${CXBXR_HEADER_EMU})\nlist(FILTER CXBXR_HEADER_HLSL INCLUDE REGEX \".*\\\\.hlsl$\")\n\n# Common (GUI and Emulator)\nfile (GLOB CXBXR_SOURCE_COMMON\n \"${CXBXR_ROOT_DIR}/src/common/AddressRanges.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuDes.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuRsa.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/EmuSha.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/crypto/LibRc4.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/CxbxDebugger.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/cxbxr.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/EmuEEPROM.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/Error.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/FilePaths.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/DInputKeyboardMouse.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputManager.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/LibusbDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/SdlJoystick.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/XInputPad.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/RawDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/Logging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/Settings.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/cliConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/cliConverter.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/CxbxUtil.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/EmuShared.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/InlineFunc.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/IPCWindows.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Mutex.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Util.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/WineEnv.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbdm/CxbxXbdm.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbe/Xbe.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbe/XbePrinter.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbox/Logging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xbox/Types.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xdvdfs-tools/buffered_io.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/xdvdfs-tools/xdvdfs.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbConvert.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XAPI/Xapi.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlLogging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlXbox.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlXc.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlXe.cpp\"\n \"${CXBXR_ROOT_DIR}/src/CxbxVersion.cpp\"\n \"${CXBXR_ROOT_DIR}/src/HighPerformanceGraphicsEnabler.c\"\n)\n\n# GUI v1\nfile (GLOB CXBXR_SOURCE_GUIv1\n \"${CXBXR_ROOT_DIR}/src/common/input/Button.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/EmuDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/input/InputWindow.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgDukeControllerConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgLibusbControllerConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgLightgunConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/input/DlgSBControllerConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgAbout.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgAudioConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgInputConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgEepromConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgLoggingConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgNetworkConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/DlgVideoConfig.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/WinMain.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/Wnd.cpp\"\n \"${CXBXR_ROOT_DIR}/src/gui/WndMain.cpp\"\n)\n\n# Emulator (module)\n# TODO: Merge CXBXR_KRNL_CPP into CXBXR_SOURCE_EMU once cxbx project is removed.\nfile (GLOB CXBXR_KRNL_CPP\n \"${CXBXR_ROOT_DIR}/src/core/kernel/init/CxbxKrnl.cpp\"\n)\nfile (GLOB CXBXR_SOURCE_EMU_IMPORT\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_dx9.cpp\"\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_opengl3.cpp\"\n \"${CXBXR_ROOT_DIR}/import/imgui/backends/imgui_impl_win32.cpp\"\n)\nfile (GLOB CXBXR_SOURCE_EMU\n \"${CXBXR_KRNL_CPP}\"\n \"${CXBXR_ROOT_DIR}/src/common/Timer.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/gloffscreen/glextensions.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/gloffscreen/gloffscreen_common.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/util/gloffscreen/gloffscreen_wgl.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/VerifyAddressRanges.cpp\"\n \"${CXBXR_ROOT_DIR}/src/common/win32/Threads.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/audio.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/ui.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/imgui/video.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/common/video/RenderBase.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/Direct3D9.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/PixelShader.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/RenderStates.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/Shader.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/TextureStates.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/VertexShader.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/VertexShaderCache.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/Direct3D9/WalkIndexBuffer.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/FixedFunctionState.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/ResourceTracker.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbD3D8Logging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbPixelShader.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbPushBuffer.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbVertexBuffer.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/D3D8/XbVertexShader.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSound.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSound3DCalculator.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundBuffer.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundGlobal.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundLogging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DirectSoundStream.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/DSStream_PacketManager.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/DirectSound/XFileMediaObject.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/XbDSoundLogging.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/common/XbInternalDSVoice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/DSOUND/common/XbInternalStruct.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/Intercept.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/JVS/JVS.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/Patches.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XACTENG/XactEng.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/hle/XGRAPHIC/XGraphic.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnl.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlAv.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlDbg.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlEx.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlFs.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlHal.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlIo.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlKd.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlKe.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlKi.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlMm.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlNt.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlOb.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlPhy.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlPs.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/EmuKrnlRtl.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/exports/KernelThunk.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/PhysicalMemory.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/PoolManager.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/memory-manager/VMManager.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/Emu.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuFile.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuFS.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/EmuNtDll.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/NativeHandle.cpp\"\n \"${CXBXR_ROOT_DIR}/src/core/kernel/support/PatchRdtsc.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/ADM1032Device.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/Chihiro/JvsIO.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/Chihiro/MediaBoard.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/EEPROMDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/network/NVNetDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/MCPXDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/PCIBus.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/PCIDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMBus.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMCDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/SMDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/Hub.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/OHCI.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/USBDevice.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/usb/XidGamepad.cpp\"\n\n #NOTE: These files are direct includes inside nv2a.cpp file. If we comment them out, we will have compile errors.\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_DEBUG.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PBUS.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PCOUNTER.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PCRTC.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PFB.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PFIFO.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PGRAPH.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PMC.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRAMDAC.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRAMIN.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRMA.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRMCIO.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRMDIO.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRMFB.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PRMVIO.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PSTRAPS.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PTIMER.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PTV.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PVIDEO.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_PVPE.cpp\"\n #\"${CXBXR_ROOT_DIR}/src/devices/video/EmuNV2A_USER.cpp\"\n\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_debug.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_psh.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_shaders.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/nv2a_vsh.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/qemu-thread-win32.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/video/swizzle.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/x86/EmuX86.cpp\"\n \"${CXBXR_ROOT_DIR}/src/devices/Xbox.cpp\"\n # Temporary usage for need ReserveAddressRanges func with cxbx.exe's emulation.\n \"${CXBXR_ROOT_DIR}/src/common/ReserveAddressRanges.cpp\"\n)\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/cxbx\")\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/cxbxr-ldr\")\n\nadd_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/projects/cxbxr-emu\")\n\nset(cxbxr_INSTALL_files \"COPYING\" \"README.md\")\n\n# Cxbx-Reloaded project with third-party libraries\nset_target_properties(cxbx cxbxr-ldr cxbxr-emu misc-batch SDL2 subhook libXbSymbolDatabase libtommath libtomcrypt imgui libusb\n PROPERTIES FOLDER Cxbx-Reloaded\n)\n\nset_target_properties(nv2a_vsh_emulator nv2a_vsh_disassembler nv2a_vsh_cpu\n PROPERTIES FOLDER Cxbx-Reloaded/nv2a_vsh\n)\n\nif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"MSVC\")\n # Configure startup project\n set_property(DIRECTORY \"${CMAKE_CURRENT_LIST_DIR}\" PROPERTY VS_STARTUP_PROJECT cxbx)\nendif()\n\n# Check if generator is Visual Studio then enable Cxbxr-Debugger project.\n# Since C# is currently supported with Visual Studio for now.\nif(${CMAKE_GENERATOR} MATCHES \"Visual Studio ([^9]|[9][0-9])\")\n # Issues with compile (the same with develop branch) and\n # for some reason did not put the files into virtual folder?\n # Might need to put the list in the source folder for workaround fix.\n add_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/src/CxbxDebugger\")\n\n set_target_properties(Tests_cs_x86\n  PROPERTIES EXCLUDE_FROM_ALL TRUE\n )\n\n # Cxbx-Debugger project with third-party libraries\n set_target_properties(cxbxr-debugger cs_x86 Tests_cs_x86 capstone-shared\n  PROPERTIES FOLDER Cxbx-Reloaded/debugger\n )\nendif()\n\ninstall(FILES ${cxbxr_INSTALL_files}\n  DESTINATION bin\n)\n\n# Copy HLSL files to the output directory, which are loaded at runtime\nset(CXBXR_HLSL_FILES ${CXBXR_HEADER_EMU})\nlist(FILTER CXBXR_HLSL_FILES INCLUDE REGEX \".*/src/core/hle/D3D8/Direct3D9/[^/]+\\.hlsli?\")\nadd_custom_command(\n\tTARGET misc-batch POST_BUILD\n\tCOMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>/hlsl\n\tCOMMAND ${CMAKE_COMMAND} -E copy_if_different ${CXBXR_HLSL_FILES} \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>/hlsl\"\n\t# These files can be edited.\n\t# Create backup copies for convenience of restoring original shader behaviour.\n\tCOMMAND ${CMAKE_COMMAND} -E make_directory  ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>/hlsl/backup\n\tCOMMAND ${CMAKE_COMMAND} -E copy_if_different ${CXBXR_HLSL_FILES} \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>/hlsl/backup\"\n)\ninstall(DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIG>/hlsl DESTINATION bin)\n\nset(cxbxr_GLEW_DLL \"${CMAKE_SOURCE_DIR}/import/glew-2.0.0/bin/Release/Win32/glew32.dll\")\n\ninstall(PROGRAMS ${cxbxr_GLEW_DLL}\n  DESTINATION bin\n)\n\ninstall(PROGRAMS $<TARGET_FILE_DIR:cxbx>/${CMAKE_SHARED_LIBRARY_PREFIX}subhook${CMAKE_SHARED_LIBRARY_SUFFIX}\n  DESTINATION bin\n)\n\ninstall(PROGRAMS $<TARGET_FILE_DIR:cxbx>/${CMAKE_SHARED_LIBRARY_PREFIX}SDL2${CMAKE_SHARED_LIBRARY_SUFFIX}\n  DESTINATION bin\n)\n"
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 0.693359375,
          "content": "﻿{\n  \"configurations\": [\n    {\n      \"name\": \"x86-Release\",\n      \"configurationType\": \"Release\",\n      \"inheritEnvironments\": [\n        \"msvc_x86\"\n      ],\n      \"buildRoot\": \"${workspaceRoot}\\\\build\\\\${name}\",\n      \"installRoot\": \"${workspaceRoot}\\\\bin\\\\Release\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"/v:m\",\n      \"ctestCommandArgs\": \"\"\n    },\n    {\n      \"name\": \"x86-Debug\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [\n        \"msvc_x86\"\n      ],\n      \"buildRoot\": \"${workspaceRoot}\\\\build\\\\${name}\",\n      \"installRoot\": \"${workspaceRoot}\\\\bin\\\\Debug\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"/v:m\",\n      \"ctestCommandArgs\": \"\"\n    }\n  ]\n}\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 2.0986328125,
          "content": "Contributors\n------------\n\nCxbx-Reloaded has a rich history, with lots of contributors in it's various stages of life.\nCxbx-Reloaded was initiated by Luke Usher, as a fork of the then-dormant Cxbx, and inspired by Dxbx.\nCxbx was initiated by Caustik. Dxbx was initiated by shadowtj.\n\nThe following contributors are grouped per project and listed in alphabetical order,\nbased on sources like https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/graphs/contributors ,\nhttp://www.caustik.com/cxbx/about.htm , https://emulation.gametechwiki.com/index.php/Cxbx ,\nand https://github.com/PatrickvL/Dxbx/graphs/contributors .\n\n\nCxbx-Reloaded Current Development Team:\n\nergo720\nLukeUsher (Luke Usher) [SoullessSentinel]\nNZJenkins\nPatrickvL (Patrick van Logchem)\nRadWolfie\n\n\nCxbx-Reloaded All-Time Contributors:\n\naav7fl (Kyle Niewiada)\nanita999\nBenNottelling (Benjamin Aerni)\nblueshogun96\nCakeLancelot\ndarrena092 (Darren Anderson)\nDiscoStarslayer (Darren Thompson)\ndonwayo (Wayo)\nErnegien (Mike Davis)\nergo720\nfaha223 (Fred Hallock)\nFisherman166\ngandalfthewhite19890404\ngellis713\nggKismet\nGXTX (wutno)\nhrydgard (Henrik Hydgard)\njackchentwkh\njagotu (JaGoTu)\njarupxx\nJayFoxRox (Jannik Vogel)\nliteralmente-game \nLuca1991 (Luca D'Amico) [Luca91]\nLukeUsher (Luke Usher) [SoullessSentinel]\nMargen67\nNZJenkins\nPatrickvL (Patrick van Logchem)\nphire (Scott Mansell)\nRadWolfie\nrevel8n\nSilent (CookiePLMonster)\nStrikerX3 (Ivan Roberto de Oliveira)\nTotalCaesar659\nVoxel9 (Voxel)\nx1nixmzeng\n\n\nCxbx-Reloaded Supporters:\n\nCedric Wilson\nCisco Martinez\nCody Dale Barton\nElijah Chondropoulos\nJacob Kelly\nJohn Fowler\nJQ\nKarl Saunders\nKenneth Edmonds\nKyle Lenhardt\nManny Calavera\nMark Knasiak\nMarko V.\nMatt Coady\nRoman Guivan\nTaylor Stock\nYldri\nYuri Kunde Schlesner\n\n\nCxbx-Reloaded Special Thanks:\n\nAll contributors to the original Cxbx and Dxbx projects, without which Cxbx-Reloaded would not exist.\n\n\nCxbx contributors:\n\n_SF_\nblueshogun96\nCaustic (Aaron Robinson)\ndonwayo (Wayo)\ndstien (Daniel Stien)\nEchelon9 (Rhys Kidd)\nKingofc\nKoitsu\nmartin_sw (Martin)\nsopskrutt (Sop Skrutt)\nZomby\n\n\nDxbx contributors:\n\ndonwayo (Wayo)\nPatrickvL (Patrick van Logchem)\nrevel8n\nshadowtj (Shadow_tj)\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 14.7900390625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5888671875,
          "content": "# Cxbx-Reloaded - Original Xbox Emulator\n[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/blob/master/COPYING)\n[![GitHub Actions](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/workflows/GitHub%20CI/badge.svg?event=push)](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/actions?query=event%3Apush+workflow%3A%22GitHub+CI%22)\n[![Discord](https://img.shields.io/badge/chat-on%20discord-7289da.svg?logo=discord)](https://discord.gg/26Xjx23)\n\nCxbx-Reloaded is an emulator for running Microsoft Xbox (and eventually, Chihiro) games on Microsoft Windows and Wine.\n\n## System Requirements\n### Minimum\n  * OS: Windows 7+ x64, or x86-64 Linux with Wine. 32-bit is not supported.\n    * MacOS with Wine is known not to work, and BSD-based systems are untested.\n    * Also note that Wine is relatively unstable, and it might break compatibility with Cxbx-Reloaded at any time without warning.\n  * GPU: Direct3D 9.0c with Pixel Shader Model 2.x, and Vertex Shader Model 3.0.\n\n## Prerequisites\n### Windows\n  * [32-bit (x86) Visual C++ 2022 Redistributable](https://aka.ms/vs/17/release/vc_redist.x86.exe)\n  * [Npcap *(used for network emulation)*](https://nmap.org/npcap/#download)\n    * Make sure to enable winpcap compatibility mode.\n  * [WinUSB compliant driver](https://github.com/libusb/libusb/wiki/Windows#Driver_Installation)\n    * *Optional, only needed for USB pass-through of original Xbox and Steel Battalion controllers.*\n\n### Wine\n**Please use the latest stable release version of Wine. If it does not work for you, then roll back to Wine 7.0 which is the last known working version.**<br/>\n**There also exists this known [issue](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/issues/2314) which currently prevents savings in some games with the most recent Wine 6.8 and later versions.**\n  * Winetricks\n    * `vcrun2019`\n      * Requires the latest winetricks script.\n    * `d3dcompiler_47`\n      * This may be subject to change.\n  * Winpcap is built-in, no installation is required.\n\n## Automated Builds\nCxbx-Reloaded doesn't currently have stable builds, but you can obtain pre-release builds from our official website's download page, or the links below:\n\n  * **[Release Builds](https://cxbx-reloaded.co.uk/download)**\n  * *[Full build history](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/actions?query=workflow%3A%22GitHub+CI%22)*\n\n## Compatibility\nCxbx-Reloaded has a [compatibility list](https://cxbx-reloaded.co.uk/compatibility).\n\nIf you would like to submit compatibility reports, please request permission in our Discord server.\n\n## Bug Reports\nGame or software specific issues can be reported in the [compatibility website](https://cxbx-reloaded.co.uk/compatibility).\n\nFor emulation issues that are not specific to any single piece of software, a bug report can be submitted at [the Cxbx-Reloaded issue tracker](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/issues).\n<!--Make sure to follow the issue template and that it contains:\n  * The build tested with, error message displayed (if any)\n    * **You can copy and paste any popup messages. However, please keep it clean by pasting and trimming down to only the message itself.**\n  * Screenshots\n    * Optional unless there are graphic bugs for reference.\n\n**Failure to follow the template will auto close your ticket.**-->\n\n## Additional information\nCxbx-Reloaded has a [wiki](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/wiki) containing various subjects and background information.\n\nChat on [Discord](https://discord.gg/26Xjx23).\n\n## Contributing\nWe welcome contributions, large and small.\n\nIf you want to do some coding, be sure to read the [Developer notes](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/wiki/Developer-notes).\n\n**IMPORTANT: Pull-Requests containing code derived from XQEMU will _not_ be approved until an agreement is reached to make work mutually beneficial. This includes updates to existing XQEMU derived code. We should not/will not become a hostile fork.**\n\nPlease contact us before you start working on something, so we can make sure your work is going to be accepted once finished.\n\n### Main Prerequisites\n1. [Git for Windows](https://git-scm.com)\n2. [CMake](https://cmake.org)\n    * Some IDEs already have CMake support, this is optional.\n\n### Fetching the code\n1. Run the following command in the command line:\n<br>`git clone --recurse-submodules https://github.com/Cxbx-Reloaded/Cxbx-Reloaded.git`\n    * Please note the `--recurse-submodules` parameter. This is required to fetch submodules.\n      * If Cxbx-Reloaded was checked out without submodules, they can be updated/fetched with the following command:\n\n        `git submodule update --init --recursive`\n\n### Compiling\n\n#### Windows\nDon't open `CMakeLists.txt` from Visual Studio, as it won't generate files in the `build` directory.\n\n##### Prerequisites\n1. [Visual Studio](https://visualstudio.microsoft.com/downloads/) 2022\n    * C++ and C# desktop development\n    * Windows Universal CRT SDK\n    * C++ CMake tools for Windows\n      * *Optional if CMake is installed*\n    * [Microsoft Child Process Debugging Power Tool](https://marketplace.visualstudio.com/items?itemName=vsdbgplat.MicrosoftChildProcessDebuggingPowerTool)\n\n##### Generate Visual Studio files\n1. If you don't have CMake installed, open `___ Native Tools Command Prompt for VS 20##`.\n2. `cd` to the Cxbx-Reloaded directory.\n3. Run these commands.\n    1. `mkdir build & cd build`\n    2. `cmake .. -G \"Visual Studio 17 2022\" -A Win32`\n        * VS2022 17.0 or later is required.\n4. Open `Cxbx-Reloaded.sln` from the `build` directory.\n5. Select the Release configuration, then click Build.\n    * Debug builds are **significantly slower, and only for developers**.\n\n#### Linux / macOS\nCurrently not supported.\n\n## Support\nYou can support [Luke Usher](https://github.com/LukeUsher), initiator of Cxbx-Reloaded, on [Patreon](https://www.patreon.com/LukeUsher).\n\n## Special Thanks\n* All contributors to the original Cxbx and [Dxbx](https://github.com/PatrickvL/Dxbx) projects. Without them Cxbx-Reloaded would not exist at all.\n* [XQEMU](https://github.com/xqemu/xqemu) - While the majority of Cxbx-R is our own work (Kernel, HLE, etc), the NV2A LLE and NVNet implementation are primarily the work of the XQEMU developers.\n* [XboxDev](https://github.com/xboxdev) - Providing Xbox hardware research & useful tooling.\n* [XbSymbolDatabase](https://github.com/Cxbx-Reloaded/XbSymbolDatabase) - Providing support to detect symbols across XDK builds from reverse engineered retail titles.\n* [Xbox Kernel Test Suite](https://github.com/Cxbx-Reloaded/xbox_kernel_test_suite) - Making accurate tests on hardware to compare against cxbxr's kernel implementation.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen-msvc-project.bat",
          "type": "blob",
          "size": 1.6591796875,
          "content": "@ECHO off\n\n:: LICENSE: Public Domain\n:: MADE BY: RadWolfie (2019)\n\nSETLOCAL\n\n:: Check if arg is none/help\nIF \"%1\"==\"\" (\nSET x86=1\nSET cpu_arch=1\n)\nIF /I \"%1\"==\"-h\" (\nGOTO :helpInfo\n)\nIF /I \"%1\"==\"-help\" (\nGOTO :helpInfo\n)\n\n:: Check first arg (CPU cpu_architecture)\nIF /I \"%1\"==\"all\" (\nSET x86=1\nSET x64=1\nSET ARM=1\nSET ARM64=1\nSET cpu_arch=1\nECHO Generating all available projects...\n)\nIF /I \"%1\"==\"x86\" (\nSET x86=1\nSET cpu_arch=1\n)\nIF /I \"%1\"==\"x64\" (\nSET x64=1\nSET cpu_arch=1\n)\nIF /I \"%1\"==\"ARM\" (\nSET ARM=1\nSET cpu_arch=1\n)\nIF /I \"%1\"==\"ARM64\" (\nSET ARM64=1\nSET cpu_arch=1\n)\nIF NOT DEFINED cpu_arch (\nGOTO :helpInfo\n)\n\n:: Check second arg (Visual Studio version)\nIF \"%2\"==\"2022\" (\nSET msvc_compiler=Visual Studio 17 2022\n)\nIF \"%2\"==\"2019\" (\nSET msvc_compiler=Visual Studio 16 2019\n)\nIF \"%2\"==\"2017\" (\nSET msvc_compiler=Visual Studio 15 2017\n)\nIF \"%2\"==\"\" (\nSET msvc_compiler=Visual Studio 16 2019\n)\nIF NOT DEFINED msvc_compiler (\nGOTO :helpInfo\n)\n\nIF DEFINED x86 (\nECHO Generating x86 project...\nmkdir build-x86 & pushd build-x86\ncmake .. -G \"%msvc_compiler%\" -A Win32\npopd\n)\n\nIF DEFINED x64 (\nECHO Generating x64 project...\nmkdir build-x64 & pushd build-x64\ncmake .. -G \"%msvc_compiler%\" -A x64\npopd\n)\n\nIF DEFINED ARM (\nECHO Generating ARM project...\nmkdir build-arm & pushd build-arm\ncmake .. -G \"%msvc_compiler%\" -A ARM\npopd\n)\n\nIF DEFINED ARM64 (\nECHO Generating ARM64 project...\nmkdir build-arm64 & pushd build-arm64\ncmake .. -G \"%msvc_compiler%\" -A ARM64\npopd\n)\n\nGOTO :end\n\n:helpInfo\nECHO Available options are:\nECHO arg1\nECHO - all\nECHO - x86\nECHO - x64\nECHO - ARM\nECHO - ARM64\nECHO ---\nECHO arg2\nECHO - 2022\nECHO - 2019\nECHO - 2017\nPAUSE\nGOTO :end\n\n:end\n:: Clear local variables.\nENDLOCAL\n"
        },
        {
          "name": "import",
          "type": "tree",
          "content": null
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.bat",
          "type": "blob",
          "size": 0.6552734375,
          "content": "@echo off\n\nREM Cxbx-Reloaded setup script\nREM\nREM Depends on git, cmake and Visual Studio being installed.\n\necho Pulling latest version from git...\nREM git clone --recurse-submodules https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/\ngit pull --recurse-submodules\n\nREM echo Synchronizing submodules...\nREM git submodule update --init --recursive\n\necho Initializing most recent Visual Studio build environment...\n@call \"%VS140COMNTOOLS%vsvars32.bat\"\n\necho Generating solution...\nmkdir build\ncd build\nREM cmake .. -G \"Visual Studio 16 2019\" -A Win32\ncmake .. -A Win32\n\necho Building solution...\ncmake --build . -j %NUMBER_OF_PROCESSORS%\n\necho Done! Enjoy using Cxbx-Reloaded!\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}