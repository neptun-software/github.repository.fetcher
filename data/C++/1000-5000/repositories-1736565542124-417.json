{
  "metadata": {
    "timestamp": 1736565542124,
    "page": 417,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "introlab/rtabmap",
      "stars": 2931,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 6.53515625,
          "content": "\nbranches:\n  only:\n    - master\n    - devel\n\nos: Visual Studio 2015\n\nclone_folder: c:\\projects\\rtabmap\n\nplatform: x64\nconfiguration: Release\n\ninit:\n  - cmake --version\n  - call \"C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Bin\\SetEnv.cmd\" /x64\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x86_amd64\n\ninstall:\n  # To download from google drive\n  - set PATH=C:\\Python38-x64;C:\\Python38-x64\\Scripts;%PATH%\n  - ps: py -m pip --disable-pip-version-check install gdown>=5.1.0 \n  # Qt\n  - set QTDIR=C:\\Qt\\5.10.1\\msvc2015_64\n  # make sure Qt bin path is before cmake bin path to avoid copying qt5 dlls from cmake before qt installation\n  - set PATH=%QTDIR%\\bin;%PATH%\n  # Boost\n  - set PATH=%PATH%;C:\\Libraries\\boost_1_62_0\\lib64-msvc-14.0\n  # Openni2\n  - ps: wget 'https://dl.dropboxusercontent.com/s/d98jv79l6oy9fxz/OpenNI2.exe?dl=0' -outfile OpenNI2.exe\n  - cmd: OpenNI2.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed OpenNI2:\"\n  - ps: \"ls \\\"C:/Program Files/OpenNI2\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\OpenNI2\\Redist\n  - set OPENNI2_INCLUDE64=C:\\Program Files\\OpenNI2\\Include\n  - set OPENNI2_LIB64=C:\\Program Files\\OpenNI2\\Lib\n  - set OPENNI2_REDIST64=C:\\Program Files\\OpenNI2\\Redist\n  # OpenCV\n  #- appveyor-retry appveyor DownloadFile http://downloads.sourceforge.net/project/opencvlibrary/4.5.2/opencv-4.5.2-vc14_vc15.exe\n  #- cmd: opencv-4.5.2-vc14_vc15.exe -o\"C:\\Program Files\" -y\n  #- ECHO \"Installed OpenCV:\"\n  #- ps: \"ls \\\"C:/Program Files/opencv/build\\\"\"\n  #- set PATH=%PATH%;C:\\Program Files\\opencv\\build\\x64\\vc14\\bin\n  - ps: wget 'https://dl.dropboxusercontent.com/s/o6ofn491bc0jso1/opencv450_vc14.exe?dl=0' -outfile opencv.exe\n  - cmd: opencv.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed OpenCV:\"\n  - ps: \"ls \\\"C:/Program Files/opencv\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\opencv\\x64\\vc14\\bin\n  # VTK (including QVTK)\n  - ps: wget 'https://dl.dropboxusercontent.com/s/1l33b5l3f3y52gf/VTK-6_3-msvc140.exe?dl=0' -outfile VTK-6_3.exe\n  - cmd: VTK-6_3.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed VTK:\"\n  - ps: \"ls \\\"C:/Program Files/VTK\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\VTK\\bin\n  # QHull \n  - ps: wget 'https://dl.dropboxusercontent.com/s/9widnk9msdsh2b8/Qhull-msvc140.exe?dl=0' -outfile Qhull.exe\n  - cmd: Qhull.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed QHull:\"\n  - ps: \"ls \\\"C:/Program Files/Qhull\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\Qhull\\bin\n  # FLANN \n  - ps: wget 'https://dl.dropboxusercontent.com/s/7k58jbmqa51sxmh/FLANN-msvc140.exe?dl=0' -outfile FLANN.exe\n  - cmd: FLANN.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed FLANN:\"\n  - ps: \"ls \\\"C:/Program Files/FLANN\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\FLANN\\bin\n  # Eigen \n  - ps: wget 'https://dl.dropboxusercontent.com/s/3v6i9i8dxj4o8ji/Eigen.exe?dl=0' -outfile Eigen.exe\n  - cmd: Eigen.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed Eigen:\"\n  - ps: \"ls \\\"C:/Program Files/Eigen\\\"\"\n  # PCL\n  - ps: wget 'https://dl.dropboxusercontent.com/s/2iayr4lyqa50i9j/PCL_181_August2018_x64_vc14.exe?dl=0' -outfile PCL_1.8.1.exe\n  - cmd: PCL_1.8.1.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed PCL:\"\n  - ps: \"ls \\\"C:/Program Files/PCL\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\PCL\\bin\n  # zlib\n  - ps: gdown -q 0B46akLGdg-uaYm9MTTI4MUtUcmc\n  - ps: Expand-Archive zlib-1.2.8-vc2010-x64.zip -DestinationPath 'C:\\Program Files'\n  - ECHO \"Installed zlib:\"\n  - ps: \"ls \\\"C:/Program Files/zlib\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\zlib\\bin\n  # g2o\n  - ps: wget 'https://dl.dropboxusercontent.com/s/ht74s5pa21wokzw/g2o.exe?dl=0' -outfile g2o.exe\n  - cmd: g2o.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed g2o:\"\n  - ps: \"ls \\\"C:/Program Files/g2o\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\g2o\\bin\n  # GTSAM\n  - ps: wget 'https://dl.dropboxusercontent.com/s/0fpr6r4cgsqmvhf/GTSAM-4_0_0_alpha2-msvc140.exe?dl=0' -outfile GTSAM.exe\n  - cmd: GTSAM.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed GTSAM:\"\n  - ps: \"ls \\\"C:/Program Files/GTSAM\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\GTSAM\\bin\n  # OctoMap\n  - ps: wget 'https://dl.dropboxusercontent.com/s/6jpxu0nm8ne6e54/octomap_x64_vc14.exe?dl=0' -outfile octomap.exe\n  - cmd: octomap.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed OctoMap:\"\n  - ps: \"ls \\\"C:/Program Files/octomap-distribution\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\octomap-distribution\\bin\n  # CPU-TSDF\n  - ps: wget 'https://dl.dropboxusercontent.com/s/mgges9va1uzxr0q/cpu_tsdf_sept2015_x64_vc14.exe?dl=0' -outfile cpu_tsdf.exe\n  - cmd: cpu_tsdf.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed CPU-TSDF:\"\n  - ps: \"ls \\\"C:/Program Files/cpu_tsdf\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\cpu_tsdf\\bin\n  # Open Chisel\n  - ps: wget 'https://dl.dropboxusercontent.com/s/0aaphcde4acrinm/open_chisel_x64_vc14.exe?dl=0' -outfile open_chisel.exe\n  - cmd: open_chisel.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed Open Chisel:\"\n  - ps: \"ls \\\"C:/Program Files/open_chisel\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\open_chisel\\bin\n  # yaml-cpp\n  - ps: wget 'https://dl.dropboxusercontent.com/s/22qfvftwj6zq8tj/yaml-cpp_x64_vc14.exe?dl=0' -outfile yaml-cpp.exe\n  - cmd: yaml-cpp.exe -o\"C:\\Program Files\" -y\n  - ECHO \"Installed yaml-cpp:\"\n  - ps: \"ls \\\"C:/Program Files/yaml-cpp\\\"\"\n  # RealSense2\n  - ps: wget 'https://github.com/IntelRealSense/librealsense/releases/download/v2.40.0/Intel.RealSense.SDK-WIN10-2.40.0.2482.exe' -outfile realsense2.exe\n  - cmd: realsense2.exe /VERYSILENT\n  - ECHO \"Installed RealSense2:\"\n  - ps: \"ls \\\"C:/Program Files (x86)/Intel RealSense SDK 2.0\\\"\"\n  - set PATH=%PATH%;C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\bin\\x64\n  - set RealSense2_ROOT_DIR=C:\\Program Files (x86)\\Intel RealSense SDK 2.0\n  # Kinect 4 Azure\n  - ps: wget 'https://download.microsoft.com/download/3/d/6/3d6d9e99-a251-4cf3-8c6a-8e108e960b4b/Azure%20Kinect%20SDK%201.4.1.exe' -outfile azure.exe\n  - cmd: azure.exe /quiet\n  - ECHO \"Installed Kinect For Azure:\"\n  - ps: \"ls \\\"C:/Program Files/Azure Kinect SDK v1.4.1\\\"\"\n  - set PATH=%PATH%;C:\\Program Files\\Azure Kinect SDK v1.4.1\\tools\n  - set K4A_ROOT_DIR=C:\\Program Files\\Azure Kinect SDK v1.4.1\n  \nbefore_build:\n  - cd c:\\projects\\rtabmap\\build\n  - ECHO %PROGRAMFILES%\n  - ECHO %PATH%\n  - cmake -G \"Visual Studio 14 2015 Win64\" -DOpenCV_DIR=\"C:\\Program Files\\opencv\\build\" -DPCL_DIR=\"C:\\Program Files\\PCL\\cmake\" -DCPUTSDF_DIR=\"C:\\Program Files\\cpu_tsdf\\share\\cpu_tsdf\" -Dyaml-cpp_DIR=\"C:\\Program Files\\yaml-cpp\\CMake\" -DBUILD_AS_BUNDLE=ON ..\n  \nafter_build :\n  - cmake --build . --config Release --target package\n\nartifacts:\n  - path: build\\RTABMap-*\n  \nnotifications:\n  - provider: Email\n    to:\n      - matlabbe@gmail.com\n    on_build_success: false\n    on_build_failure: false\n    on_build_status_changed: true\n"
        },
        {
          "name": ".cproject",
          "type": "blob",
          "size": 48.5732421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?fileVersion 4.0.0?>\n\n<cproject storage_type_id=\"org.eclipse.cdt.core.XmlProjectDescriptionStorage\">\n\t<storageModule moduleId=\"org.eclipse.cdt.core.settings\">\n\t\t<cconfiguration id=\"0.1790260204\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"0.1790260204\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"Unix\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.PE\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.SOM\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO64\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.VCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"RTAB-Map\" buildProperties=\"\" description=\"Ubuntu/Mac OS X\" id=\"0.1790260204\" name=\"Unix\" parent=\"org.eclipse.cdt.build.core.prefbase.cfg\">\n\t\t\t\t\t<folderInfo id=\"0.1790260204.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"org.eclipse.cdt.build.core.prefbase.toolchain.379189688\" name=\"No ToolChain\" resourceTypeBasedDiscovery=\"false\" superClass=\"org.eclipse.cdt.build.core.prefbase.toolchain\">\n\t\t\t\t\t\t\t<targetPlatform binaryParser=\"org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.MachO;org.eclipse.cdt.core.SOM;org.eclipse.cdt.core.PE;org.eclipse.cdt.core.MachO64\" id=\"org.eclipse.cdt.build.core.prefbase.toolchain.379189688.899900990\" name=\"\"/>\n\t\t\t\t\t\t\t<builder arguments=\"-j4 -C ${ProjDirPath}/build VERBOSE=true\" buildPath=\"${workspace_loc:/RTAB-Map}\" command=\"make\" id=\"org.eclipse.cdt.build.core.settings.default.builder.1868197384\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" superClass=\"org.eclipse.cdt.build.core.settings.default.builder\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.libs.45793018\" name=\"holder for library settings\" superClass=\"org.eclipse.cdt.build.core.settings.holder.libs\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.894008781\" name=\"Assembly\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.584706788\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\" valueType=\"undefIncludePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ts/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/photo/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/stitching/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/nonfree/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/videostab/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1694566822\" languageId=\"org.eclipse.cdt.core.assembly\" languageName=\"Assembly\" sourceContentType=\"org.eclipse.cdt.core.asmSource\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1789919121\" name=\"GNU C++\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.449413398\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\" valueType=\"undefIncludePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ts/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/photo/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/stitching/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/nonfree/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/videostab/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1666253491\" languageId=\"org.eclipse.cdt.core.g++\" languageName=\"GNU C++\" sourceContentType=\"org.eclipse.cdt.core.cxxSource,org.eclipse.cdt.core.cxxHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1172725717\" name=\"GNU C\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.508497091\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\" valueType=\"undefIncludePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ts/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/imgproc/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/photo/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include/opencv\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/build\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/stitching/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/core/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/calib3d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/highgui/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/features2d/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/ml/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/nonfree/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/flann/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/gpu/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/videostab/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/video/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/legacy/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.4.0-beta2/modules/contrib/include\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/Users/MatLab/workspace/OpenCV-2.3.1/modules/objdetect/include\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.230409752\" languageId=\"org.eclipse.cdt.core.gcc\" languageName=\"GNU C\" sourceContentType=\"org.eclipse.cdt.core.cSource,org.eclipse.cdt.core.cHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"build\" flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.language.mapping\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"0.1790260204.1906025362\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"0.1790260204.1906025362\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"MinGW\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.PE\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.SOM\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO64\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.VCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"RTAB-Map\" buildProperties=\"\" description=\"Windows GCC\" id=\"0.1790260204.1906025362\" name=\"MinGW\" parent=\"org.eclipse.cdt.build.core.prefbase.cfg\">\n\t\t\t\t\t<folderInfo id=\"0.1790260204.1906025362.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"org.eclipse.cdt.build.core.prefbase.toolchain.1655844623\" name=\"No ToolChain\" resourceTypeBasedDiscovery=\"false\" superClass=\"org.eclipse.cdt.build.core.prefbase.toolchain\">\n\t\t\t\t\t\t\t<targetPlatform binaryParser=\"org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.MachO;org.eclipse.cdt.core.SOM;org.eclipse.cdt.core.PE;org.eclipse.cdt.core.MachO64\" id=\"org.eclipse.cdt.build.core.prefbase.toolchain.1655844623.223670391\" name=\"\"/>\n\t\t\t\t\t\t\t<builder arguments=\"-C ${ProjDirPath}/build VERBOSE=true\" buildPath=\"${workspace_loc:/RTAB-Map}\" command=\"nmake\" id=\"org.eclipse.cdt.build.core.settings.default.builder.1893174344\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" superClass=\"org.eclipse.cdt.build.core.settings.default.builder\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.libs.359841287\" name=\"holder for library settings\" superClass=\"org.eclipse.cdt.build.core.settings.holder.libs\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.2036478542\" name=\"Assembly\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.562568401\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\"/>\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.1681573069\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\utilite\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;M:\\opencv-svn\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1080087738\" languageId=\"org.eclipse.cdt.core.assembly\" languageName=\"Assembly\" sourceContentType=\"org.eclipse.cdt.core.asmSource\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.2076089335\" name=\"GNU C++\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.1846481663\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\utilite\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;M:\\opencv-svn\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.865357815\" languageId=\"org.eclipse.cdt.core.g++\" languageName=\"GNU C++\" sourceContentType=\"org.eclipse.cdt.core.cxxSource,org.eclipse.cdt.core.cxxHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.469283430\" name=\"GNU C\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.1029977695\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\utilite\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;M:\\opencv-svn\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1452552582\" languageId=\"org.eclipse.cdt.core.gcc\" languageName=\"GNU C\" sourceContentType=\"org.eclipse.cdt.core.cSource,org.eclipse.cdt.core.cHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"build\" flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.language.mapping\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"0.1790260204.1906025362.1064002412\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"0.1790260204.1906025362.1064002412\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"NMake\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.PE\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.SOM\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO64\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.VCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"RTAB-Map\" buildProperties=\"\" description=\"Windows Visual Studio\" id=\"0.1790260204.1906025362.1064002412\" name=\"NMake\" parent=\"org.eclipse.cdt.build.core.prefbase.cfg\">\n\t\t\t\t\t<folderInfo id=\"0.1790260204.1906025362.1064002412.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"org.eclipse.cdt.build.core.prefbase.toolchain.2087892413\" name=\"No ToolChain\" resourceTypeBasedDiscovery=\"false\" superClass=\"org.eclipse.cdt.build.core.prefbase.toolchain\">\n\t\t\t\t\t\t\t<targetPlatform binaryParser=\"org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.MachO;org.eclipse.cdt.core.SOM;org.eclipse.cdt.core.PE;org.eclipse.cdt.core.MachO64\" id=\"org.eclipse.cdt.build.core.prefbase.toolchain.2087892413.1761856661\" name=\"\"/>\n\t\t\t\t\t\t\t<builder arguments=\"\" autoBuildTarget=\"all\" buildPath=\"${ProjDirPath}/build\" cleanBuildTarget=\"clean\" command=\"nmake\" enableAutoBuild=\"false\" enableCleanBuild=\"true\" enabledIncrementalBuild=\"true\" id=\"org.eclipse.cdt.build.core.settings.default.builder.826759435\" incrementalBuildTarget=\"all\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"false\" superClass=\"org.eclipse.cdt.build.core.settings.default.builder\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.libs.1653679154\" name=\"holder for library settings\" superClass=\"org.eclipse.cdt.build.core.settings.holder.libs\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1610311642\" name=\"Assembly\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.1896517824\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\"/>\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.700166558\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv\\build\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\include\\pcl-1.6&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Eigen\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\VTK\\include\\vtk-5.8&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.112516982\" languageId=\"org.eclipse.cdt.core.assembly\" languageName=\"Assembly\" sourceContentType=\"org.eclipse.cdt.core.asmSource\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1962594580\" name=\"GNU C++\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.2029836145\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv\\build\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\include\\pcl-1.6&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Eigen\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\VTK\\include\\vtk-5.8&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.2132965672\" languageId=\"org.eclipse.cdt.core.g++\" languageName=\"GNU C++\" sourceContentType=\"org.eclipse.cdt.core.cxxSource,org.eclipse.cdt.core.cxxHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.463224635\" name=\"GNU C\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.119135709\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv\\build\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\include\\pcl-1.6&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\Eigen\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\PCL 1.6.0\\3rdParty\\VTK\\include\\vtk-5.8&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1193489184\" languageId=\"org.eclipse.cdt.core.gcc\" languageName=\"GNU C\" sourceContentType=\"org.eclipse.cdt.core.cSource,org.eclipse.cdt.core.cHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"build\" flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.language.mapping\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"0.1790260204.1906025362.1064002412.862027363\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"0.1790260204.1906025362.1064002412.862027363\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"NMake JOM\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.PE\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.SOM\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.MachO64\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.VCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"RTAB-Map\" buildProperties=\"\" description=\"Windows Visual Studio\" id=\"0.1790260204.1906025362.1064002412.862027363\" name=\"NMake JOM\" parent=\"org.eclipse.cdt.build.core.prefbase.cfg\">\n\t\t\t\t\t<folderInfo id=\"0.1790260204.1906025362.1064002412.862027363.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"org.eclipse.cdt.build.core.prefbase.toolchain.650919836\" name=\"No ToolChain\" resourceTypeBasedDiscovery=\"false\" superClass=\"org.eclipse.cdt.build.core.prefbase.toolchain\">\n\t\t\t\t\t\t\t<targetPlatform binaryParser=\"org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.MachO;org.eclipse.cdt.core.SOM;org.eclipse.cdt.core.PE;org.eclipse.cdt.core.MachO64\" id=\"org.eclipse.cdt.build.core.prefbase.toolchain.650919836.781470244\" name=\"\"/>\n\t\t\t\t\t\t\t<builder arguments=\"-j4\" buildPath=\"${ProjDirPath}/build\" command=\"jom\" id=\"org.eclipse.cdt.build.core.settings.default.builder.241450996\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" superClass=\"org.eclipse.cdt.build.core.settings.default.builder\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.libs.1417678663\" name=\"holder for library settings\" superClass=\"org.eclipse.cdt.build.core.settings.holder.libs\"/>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1222553174\" name=\"Assembly\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths.745694290\" name=\"Undefined Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.undef.incpaths\"/>\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.1773576415\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv-2.4.9\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\OpenNI2\\Include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\pcl-1.7.1\\build\\install\\include\\pcl-1.7&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.1835279712\" languageId=\"org.eclipse.cdt.core.assembly\" languageName=\"Assembly\" sourceContentType=\"org.eclipse.cdt.core.asmSource\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1771312621\" name=\"GNU C++\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.555639917\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv-2.4.9\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\OpenNI2\\Include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\pcl-1.7.1\\build\\install\\include\\pcl-1.7&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.469730673\" languageId=\"org.eclipse.cdt.core.g++\" languageName=\"GNU C++\" sourceContentType=\"org.eclipse.cdt.core.cxxSource,org.eclipse.cdt.core.cxxHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"org.eclipse.cdt.build.core.settings.holder.1010336558\" name=\"GNU C\" superClass=\"org.eclipse.cdt.build.core.settings.holder\">\n\t\t\t\t\t\t\t\t<option id=\"org.eclipse.cdt.build.core.settings.holder.incpaths.227176509\" name=\"Include Paths\" superClass=\"org.eclipse.cdt.build.core.settings.holder.incpaths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\opencv-2.4.9\\build\\install\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\OpenNI2\\Include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Qt\\4.8.0\\include&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\pcl-1.7.1\\build\\install\\include\\pcl-1.7&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;C:\\Program Files\\Boost\\include&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"org.eclipse.cdt.build.core.settings.holder.inType.867578216\" languageId=\"org.eclipse.cdt.core.gcc\" languageName=\"GNU C\" sourceContentType=\"org.eclipse.cdt.core.cSource,org.eclipse.cdt.core.cHeader\" superClass=\"org.eclipse.cdt.build.core.settings.holder.inType\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"build\" flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.language.mapping\"/>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t\t</cconfiguration>\n\t</storageModule>\n\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t<project id=\"CTAB-Map.null.2089313587\" name=\"CTAB-Map\"/>\n\t</storageModule>\n\t<storageModule moduleId=\"refreshScope\" versionNumber=\"1\">\n\t\t<resource resourceType=\"PROJECT\" workspacePath=\"/rtabmap\"/>\n\t</storageModule>\n\t<storageModule moduleId=\"org.eclipse.cdt.core.LanguageSettingsProviders\"/>\n\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t<storageModule moduleId=\"org.eclipse.cdt.make.core.buildtargets\">\n\t\t<buildTargets>\n\t\t\t<target name=\"CMake-MinGW-Debug\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-E chdir build/ cmake -G \"MinGW Makefiles\" -D CMAKE_BUILD_TYPE=Debug -D BUILD_TESTS=ON ../</buildArguments>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t\t<target name=\"CMake-MinGW-Release\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-E chdir build/ cmake -G \"MinGW Makefiles\" -D CMAKE_BUILD_TYPE=Release -D BUILD_TESTS=ON ../</buildArguments>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t\t<target name=\"CMake-Unix-Debug\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-E chdir build/ cmake -G \"Unix Makefiles\" -D CMAKE_BUILD_TYPE=Debug -D BUILD_TESTS=OFF ../</buildArguments>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t\t<target name=\"CMake-Unix-Release\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-E chdir build/ cmake -G \"Unix Makefiles\" -D CMAKE_BUILD_TYPE=Release  -D BUILD_TESTS=OFF ../</buildArguments>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t\t<target name=\"CMake-NMake-Debug\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-E chdir build/ cmake -G \"NMake Makefiles\" -D CMAKE_BUILD_TYPE=Debug -D BUILD_TESTS=ON ../</buildArguments>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t\t<target name=\"CMake-NMake-Release\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n\t\t\t\t<buildCommand>cmake</buildCommand>\n\t\t\t\t<buildArguments>-G \"NMake Makefiles\" -D CMAKE_BUILD_TYPE=Release ../</buildArguments>\n\t\t\t\t<buildTarget/>\n\t\t\t\t<stopOnError>true</stopOnError>\n\t\t\t\t<useDefaultCommand>false</useDefaultCommand>\n\t\t\t\t<runAllBuilders>true</runAllBuilders>\n\t\t\t</target>\n\t\t</buildTargets>\n\t</storageModule>\n\t<storageModule moduleId=\"scannerConfiguration\">\n\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t<buildOutputProvider>\n\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</buildOutputProvider>\n\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</scannerInfoProvider>\n\t\t</profile>\n\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\">\n\t\t\t<buildOutputProvider>\n\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</buildOutputProvider>\n\t\t\t<scannerInfoProvider id=\"makefileGenerator\">\n\t\t\t\t<runAction arguments=\"-f ${project_name}_scd.mk\" command=\"make\" useDefault=\"true\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</scannerInfoProvider>\n\t\t</profile>\n\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t<buildOutputProvider>\n\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</buildOutputProvider>\n\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</scannerInfoProvider>\n\t\t</profile>\n\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t<buildOutputProvider>\n\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</buildOutputProvider>\n\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</scannerInfoProvider>\n\t\t</profile>\n\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t<buildOutputProvider>\n\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</buildOutputProvider>\n\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t</scannerInfoProvider>\n\t\t</profile>\n\t\t<scannerConfigBuildInfo instanceId=\"0.1790260204.1906025362.1064002412.862027363\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"0.1790260204\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"makefileGenerator\">\n\t\t\t\t\t<runAction arguments=\"-f ${project_name}_scd.mk\" command=\"make\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"0.1790260204.1906025362.1064002412\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"0.1790260204.1906025362\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"makefileGenerator\">\n\t\t\t\t\t<runAction arguments=\"-f ${project_name}_scd.mk\" command=\"make\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCWinManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCWinManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCWinManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t</storageModule>\n</cproject>\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.015625,
          "content": "build/*\nbuild_*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2099609375,
          "content": "/lib\n.DS_Store\n.settings/language.settings.xml\n.idea/\n.vscode\ncmake-build-debug/\napp/android/.classpath\napp/android/.project\napp/android/AndroidManifest.xml\napp/android/res/raw/\ncompile_flags.txt\ntags\nbuild_*\n*.bak\n"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 2.4130859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>rtabmap</name>\n\t<comment></comment>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>\n\t\t\t<triggers>clean,full,incremental,</triggers>\n\t\t\t<arguments>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>?name?</key>\n\t\t\t\t\t<value></value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.append_environment</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.autoBuildTarget</key>\n\t\t\t\t\t<value>all</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.buildArguments</key>\n\t\t\t\t\t<value>-j4 -C ${ProjDirPath}/build VERBOSE=true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.buildCommand</key>\n\t\t\t\t\t<value>make</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.buildLocation</key>\n\t\t\t\t\t<value>${workspace_loc:/RTAB-Map}</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.cleanBuildTarget</key>\n\t\t\t\t\t<value>clean</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.contents</key>\n\t\t\t\t\t<value>org.eclipse.cdt.make.core.activeConfigSettings</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableAutoBuild</key>\n\t\t\t\t\t<value>false</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableCleanBuild</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableFullBuild</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.fullBuildTarget</key>\n\t\t\t\t\t<value>all</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.stopOnError</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.useDefaultBuildCmd</key>\n\t\t\t\t\t<value>false</value>\n\t\t\t\t</dictionary>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>org.eclipse.cdt.core.cnature</nature>\n\t\t<nature>org.eclipse.cdt.core.ccnature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>\n\t</natures>\n</projectDescription>\n"
        },
        {
          "name": ".settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 63.728515625,
          "content": "# Top-Level CmakeLists.txt\ncmake_minimum_required(VERSION 3.14)\nPROJECT( RTABMap )\nSET(PROJECT_PREFIX rtabmap)\n\n# Catkin doesn't support multiarch library path, \n# fix to \"lib\" if not set by user.\nOPTION(MULTI_ARCH \"Activate multi-arch lib directory (debian)\" OFF)\nIF(NOT MULTI_ARCH AND NOT DEFINED CMAKE_INSTALL_LIBDIR)\n   set(CMAKE_INSTALL_LIBDIR \"lib\")\nENDIF(NOT MULTI_ARCH AND NOT DEFINED CMAKE_INSTALL_LIBDIR)\n\nINCLUDE(GNUInstallDirs)\n\n####### local cmake modules #######\nSET(CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake_modules\")\n\n#######################\n# VERSION\n#######################\nSET(RTABMAP_MAJOR_VERSION 0)\nSET(RTABMAP_MINOR_VERSION 21)\nSET(RTABMAP_PATCH_VERSION 9)\nSET(RTABMAP_VERSION\n  ${RTABMAP_MAJOR_VERSION}.${RTABMAP_MINOR_VERSION}.${RTABMAP_PATCH_VERSION})\n  \nSET(PROJECT_VERSION \"${RTABMAP_VERSION}\")\n\nSET(PROJECT_VERSION_MAJOR ${RTABMAP_MAJOR_VERSION})\nSET(PROJECT_VERSION_MINOR ${RTABMAP_MINOR_VERSION})\nSET(PROJECT_VERSION_PATCH ${RTABMAP_PATCH_VERSION})\n\nSET(PROJECT_SOVERSION \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}\")\n\n####### COMPILATION PARAMS #######\n# In case of Makefiles if the user does not setup CMAKE_BUILD_TYPE, assume it's Release:\nIF(${CMAKE_GENERATOR} MATCHES \".*Makefiles\")\n    IF(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n        set(CMAKE_BUILD_TYPE Release)\n    ENDIF(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\nENDIF(${CMAKE_GENERATOR} MATCHES \".*Makefiles\")\n\nSET(MOBILE_BUILD OFF)\nIF(ANDROID OR CMAKE_SYSTEM_NAME STREQUAL \"iOS\")\n    SET(MOBILE_BUILD ON)\nENDIF(ANDROID OR CMAKE_SYSTEM_NAME STREQUAL \"iOS\")\nMESSAGE(STATUS \"MOBILE_BUILD=${MOBILE_BUILD}\")\n\nIF(NOT MOBILE_BUILD)\n    SET(CMAKE_DEBUG_POSTFIX \"d\")\n    option(FLANN_KDTREE_MEM_OPT  \"Disable multi-threaded FLANN kd-tree to minimize memory allocations\"   OFF)\nELSE()\n    option(FLANN_KDTREE_MEM_OPT  \"Disable multi-threaded FLANN kd-tree to minimize memory allocations\"   ON)\nENDIF()\n\nIF(FLANN_KDTREE_MEM_OPT)\n    ADD_DEFINITIONS(\"-DFLANN_KDTREE_MEM_OPT\")\nENDIF(FLANN_KDTREE_MEM_OPT)\n\nIF(WIN32 AND NOT MINGW)\n    ADD_DEFINITIONS(\"-DNOMINMAX\")\n    ADD_DEFINITIONS(\"-wd4100 -wd4127 -wd4150 -wd4191 -wd4242 -wd4244 -wd4251 -wd4305 -wd4365 -wd4512 -wd4514 -wd4548 -wd4571 -wd4619 -wd4625 -wd4626 -wd4628 -wd4668 -wd4710 -wd4711 -wd4738 -wd4820 -wd4946 -wd4986\")\nELSE ()\n    ADD_DEFINITIONS( \"-Wall -Wtype-limits\" )\n    ADD_DEFINITIONS(\"-Wno-unknown-pragmas\")\nENDIF()\n\nif(POLICY CMP0020)\n    cmake_policy(SET CMP0020 NEW)\nendif()\nif(POLICY CMP0043)\n    cmake_policy(SET CMP0043 NEW)\nendif()\n# To suppress g2o related opengl warning\nif(POLICY CMP0072)\n    cmake_policy(SET CMP0072 NEW)\nendif()\n\nIF(MINGW)\n    # Hide the --enable-auto-import warning\n    SET(CMAKE_EXE_LINKER_FLAGS \"-Wl,--enable-auto-import\")\n    SET(CMAKE_MODULE_LINKER_FLAGS \"-Wl,--enable-auto-import\")\n    SET(CMAKE_SHARED_LINKER_FLAGS \"-Wl,--enable-auto-import\")\nENDIF(MINGW)\n\n# GCC 4 required\nIF(UNIX OR MINGW)\n    EXEC_PROGRAM( gcc ARGS \"-dumpversion\" OUTPUT_VARIABLE GCC_VERSION )\n    IF(GCC_VERSION VERSION_LESS \"4.0.0\")\n        MESSAGE(FATAL_ERROR \"GCC ${GCC_VERSION} found, but version 4.x.x minimum is required\")\n    ENDIF(GCC_VERSION VERSION_LESS \"4.0.0\")\nENDIF(UNIX OR MINGW)\n\n#The CDT Error Parser cannot handle error messages that span \n#more than one line, which is the default gcc behavior. \n#In order to force gcc to generate single line error messages with no line wrapping\nIF(CMAKE_COMPILER_IS_GNUCC)\n  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fmessage-length=0\")\nENDIF(CMAKE_COMPILER_IS_GNUCC)\nIF(CMAKE_COMPILER_IS_GNUCXX)\n  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fmessage-length=0\")\nENDIF(CMAKE_COMPILER_IS_GNUCXX)\n\nif(MSVC)\n  if(MSVC_VERSION GREATER 1500 AND ${CMAKE_VERSION} VERSION_GREATER \"2.8.6\")\n    include(ProcessorCount)\n    ProcessorCount(N)\n    if(NOT N EQUAL 0)\n      SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /MP${N}\")\n      SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP${N}\")\n    endif()\n  endif()\n  add_compile_options(\"/bigobj\")\nendif()\n\n# [Eclipse] Automatic Discovery of Include directories (Optional, but handy) \n#SET(CMAKE_VERBOSE_MAKEFILE ON)\n\n#Other paths...\nIF(APPLE)\n   # For Mac ports\n   SET(CMAKE_INCLUDE_PATH \"/opt/local/include;${CMAKE_INCLUDE_PATH}\")\n   SET(CMAKE_LIBRARY_PATH \"/opt/local/lib;${CMAKE_LIBRARY_PATH}\")\nENDIF()\n\n####### Build libraries as shared or static #######\nOPTION( BUILD_SHARED_LIBS \"Set to OFF to build static libraries\" ON )\n\n\n####### OUTPUT DIR #######\nSET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)\nSET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)\nSET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)\n\n# Avoid Visual Studio bin/Release and bin/Debug sub directories\nSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\")\nSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\")\nSET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\")\nSET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\")\nSET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}\")\nSET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}\")\n\n####### INSTALL DIR #######\nset(INSTALL_INCLUDE_DIR include/${PROJECT_PREFIX}-${RTABMAP_MAJOR_VERSION}.${RTABMAP_MINOR_VERSION})\nif(WIN32 AND NOT CYGWIN)\n  set(DEF_INSTALL_CMAKE_DIR CMake)\nelse()\n  set(DEF_INSTALL_CMAKE_DIR ${CMAKE_INSTALL_LIBDIR}/${PROJECT_PREFIX}-${RTABMAP_MAJOR_VERSION}.${RTABMAP_MINOR_VERSION})\nendif()\nset(INSTALL_CMAKE_DIR ${DEF_INSTALL_CMAKE_DIR})\n  \n####### BUILD OPTIONS #######\ninclude (GenerateExportHeader)\n# ANDROID_PREBUILD (early exit if true)\nOPTION( ANDROID_PREBUILD \"Set to ON to build rtabmap resource build tool (required for android build)\" OFF )\nIF(ANDROID_PREBUILD)\n   MESSAGE(\"Option ANDROID_PREBUILD is set, only rtabmap resource tool will be built. You can use android toolchain after that.\")\n   ADD_SUBDIRECTORY( utilite )\n   return()\nENDIF(ANDROID_PREBUILD)\n\nIF(APPLE OR WIN32)\n    OPTION(BUILD_AS_BUNDLE \"Set to ON to build as bundle with all embedded dependencies (DragNDrop for Mac, installer for Windows)\" OFF)\nENDIF(APPLE OR WIN32)\nOPTION(BUILD_APP \"Build main application\" ON)\nOPTION(BUILD_TOOLS \"Build tools\" ON)\nOPTION(BUILD_EXAMPLES \"Build examples\" ON)\n\n####### DEPENDENCIES #######\nIF(MOBILE_BUILD)\noption(WITH_QT            \"Include Qt support\"                   OFF)\nELSE()\noption(WITH_QT            \"Include Qt support\"                   ON)\nENDIF()\noption(WITH_ORB_OCTREE    \"Include ORB Octree feature support\"   ON)\noption(WITH_TORCH         \"Include Torch support (SuperPoint)\"   OFF)\noption(WITH_PYTHON        \"Include Python3 support (PyMatcher, PyDetector)\"  OFF)\noption(WITH_PYTHON_THREADING  \"Use more than one Python interpreter.\"  OFF)\noption(WITH_PDAL          \"Include PDAL support\"                 ON)\noption(WITH_LIBLAS        \"Include libLAS support\"               OFF)\noption(WITH_CUDASIFT      \"Include CudaSift support (this fork https://github.com/matlabbe/CudaSift)\" OFF) \noption(WITH_FREENECT      \"Include Freenect support\"             ON)\noption(WITH_FREENECT2     \"Include Freenect2 support\"            ON)\noption(WITH_K4W2          \"Include Kinect for Windows v2 support\" ON)\noption(WITH_K4A           \"Include Kinect for Azure support\"     ON)\noption(WITH_OPENNI        \"Include OpenNI support\"               ON)\noption(WITH_OPENNI2       \"Include OpenNI2 support\"              ON)\noption(WITH_DC1394        \"Include dc1394 support\"               ON)\noption(WITH_G2O           \"Include g2o support\"                  ON)\noption(WITH_GTSAM         \"Include GTSAM support\"                ON)\noption(WITH_TORO          \"Include TORO support\"                 ON)\noption(WITH_CERES         \"Include Ceres support\"                OFF)\noption(WITH_MRPT          \"Include MRPT support\"                 ON)\noption(WITH_VERTIGO       \"Include Vertigo support\"              ON)\noption(WITH_CVSBA         \"Include cvsba support\"                OFF)\noption(WITH_POINTMATCHER  \"Include libpointmatcher support\"      ON)\noption(WITH_CCCORELIB     \"Include CCCoreLib support\"            OFF)\noption(WITH_OPEN3D        \"Include Open3D support\"               OFF)\noption(WITH_LOAM          \"Include LOAM support\"                 OFF)\noption(WITH_FLOAM         \"Include FLOAM support\"                OFF)\noption(WITH_FLYCAPTURE2   \"Include FlyCapture2/Triclops support\" ON)\noption(WITH_ZED           \"Include ZED sdk support\"              ON)\noption(WITH_ZEDOC         \"Include ZED Open Capture support\"     ON)\noption(WITH_REALSENSE     \"Include RealSense support\"            ON)\noption(WITH_REALSENSE_SLAM \"Include RealSenseSlam support\"       ON)\noption(WITH_REALSENSE2    \"Include RealSense support\"            ON)\noption(WITH_MYNTEYE       \"Include mynteye-s support\"            ON)\noption(WITH_DEPTHAI       \"Include depthai-core support\"         OFF)\noption(WITH_XVSDK         \"Include XVisio SDK support\"           OFF)\noption(WITH_OCTOMAP       \"Include OctoMap support\"              ON)\noption(WITH_GRIDMAP       \"Include GridMap support\"              ON)\noption(WITH_CPUTSDF       \"Include CPUTSDF support\"              OFF)\noption(WITH_OPENCHISEL    \"Include open_chisel support\"          OFF)\noption(WITH_ALICE_VISION  \"Include AliceVision support\"          OFF)\noption(WITH_FOVIS         \"Include FOVIS supp++ort\"                OFF)\noption(WITH_VISO2         \"Include VISO2 support\"                OFF)\noption(WITH_DVO           \"Include DVO support\"                  OFF)\noption(WITH_ORB_SLAM      \"Include ORB_SLAM2 or ORB_SLAM3  support\" OFF)\noption(WITH_OKVIS         \"Include OKVIS support\"                OFF)\noption(WITH_MSCKF_VIO     \"Include MSCKF_VIO support\"            OFF)\noption(WITH_VINS          \"Include VINS-Fusion support\"          OFF)\noption(WITH_OPENVINS      \"Include OpenVINS support\"             OFF)\noption(WITH_MADGWICK      \"Include Madgwick IMU filtering support\" ON)\noption(WITH_FASTCV        \"Include FastCV support\"               ON)\noption(WITH_OPENMP        \"Include OpenMP support\"               ON)\noption(WITH_OPENGV        \"Include OpenGV support\"               ON)\nIF(MOBILE_BUILD)\noption(PCL_OMP            \"With PCL OMP implementations\"         OFF)\nELSE()\noption(PCL_OMP            \"With PCL OMP implementations\"         ON)\nENDIF()\noption(BUILD_WITH_RPATH_NOT_RUNPATH \"Explicitly disable usage of RUNPATH for the build tree on linux systems by adding --disable-new-dtags to linker (using old RPATH behavior instead)\"    OFF)\n\nset(RTABMAP_QT_VERSION AUTO CACHE STRING \"Force a specific Qt version.\")\nset_property(CACHE RTABMAP_QT_VERSION PROPERTY STRINGS AUTO 4 5 6)\n\nFIND_PACKAGE(OpenCV REQUIRED QUIET COMPONENTS core calib3d imgproc highgui stitching photo video videoio OPTIONAL_COMPONENTS aruco objdetect xfeatures2d nonfree gpu cudafeatures2d cudaoptflow cudaimgproc)\n\nIF(WITH_QT)\nFIND_PACKAGE(PCL 1.7 REQUIRED QUIET COMPONENTS common io kdtree search surface filters registration sample_consensus segmentation visualization)\nELSE()\nFIND_PACKAGE(PCL 1.7 REQUIRED QUIET COMPONENTS common io kdtree search surface filters registration sample_consensus segmentation )\nENDIF()\nif(PCL_COMPILE_OPTIONS)\n  if(\"${PCL_COMPILE_OPTIONS}\" MATCHES \"-march=native\")\n    MESSAGE(WARNING \"PCL compile options contain \\\"-march=native\\\", make sure all libraries using Eigen are also compiled with that flag to avoid some segmentation faults (with gdb referring to some Eigen functions).\")\n  else()\n    MESSAGE(STATUS \"PCL compile options don't contain \\\"-march=native\\\", make sure all libraries using Eigen are also compiled without that flag to avoid some segmentation faults (with gdb referring to some Eigen functions).\")\n  endif()\nelse()\n  if(\"${PCL_DEFINITIONS}\" MATCHES \"-march=native\")\n    MESSAGE(WARNING \"PCL definitions contain \\\"-march=native\\\", make sure all libraries using Eigen are also compiled with that flag to avoid some segmentation faults (with gdb referring to some Eigen functions).\")\n  else()\n    MESSAGE(STATUS \"PCL definitions don't contain \\\"-march=native\\\", make sure all libraries using Eigen are also compiled without that flag to avoid some segmentation faults (with gdb referring to some Eigen functions).\")\n  endif()\nendif()\n\nFIND_PACKAGE(ZLIB REQUIRED QUIET)\n\nFIND_PACKAGE(SQLite3 QUIET)\nIF(SQLite3_FOUND)\n   MESSAGE(STATUS \"Found SQLite3: ${SQLite3_INCLUDE_DIRS} ${SQLite3_LIBRARIES}\")\nENDIF(SQLite3_FOUND)\n\nif(NOT \"${PCL_LIBRARIES}\" STREQUAL \"\")\n   # fix libproj.so not found on Xenial\n   list(REMOVE_ITEM PCL_LIBRARIES \"vtkproj4\")\nendif()\n\n# OpenMP (\"-fopenmp\" should be added for flann included in PCL)\n# the gcc-4.2.1 coming with MacOS X is not compatible with the OpenMP pragmas we use, so disabling OpenMP for it\nif(((NOT APPLE) OR (NOT CMAKE_COMPILER_IS_GNUCXX) OR (GCC_VERSION VERSION_GREATER 4.2.1) OR (CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")) AND WITH_OPENMP)\n  find_package(OpenMP COMPONENTS C CXX)\nendif()\nif(OPENMP_FOUND)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n  set(CMAKE_INSTALL_OPENMP_LIBRARIES TRUE)\n  message (STATUS \"Found OpenMP: ${OpenMP_CXX_LIBRARIES}\")\n  if(PCL_OMP)\n    message (STATUS \"Add PCL_OMP to definitions\")\n    add_definitions(-DPCL_OMP)\n  endif(PCL_OMP)\nelseif(WITH_OPENMP)\n  message (STATUS \"Not found OpenMP\")\nendif()\n\nIF(OpenCV_FOUND)\n   MESSAGE(STATUS \"Found OpenCV: ${OpenCV_INCLUDE_DIRS}\")\nENDIF(OpenCV_FOUND)\nIF(PCL_FOUND)\n   MESSAGE(STATUS \"Found PCL: ${PCL_INCLUDE_DIRS}\")\nENDIF(PCL_FOUND)\nIF(ZLIB_FOUND)\n   MESSAGE(STATUS \"Found ZLIB: ${ZLIB_INCLUDE_DIRS}\")\nENDIF(ZLIB_FOUND)\n\nSET(ADD_VTK_GUI_SUPPORT_QT_TO_CONF FALSE)\nIF(WITH_QT)\n    FIND_PACKAGE(VTK)\n    IF(NOT VTK_FOUND)\n      MESSAGE(FATAL_ERROR \"VTK is required when using Qt. Set -DWITH_QT=OFF if you don't want gui tools.\")\n    ENDIF(NOT VTK_FOUND)\n\n    # If Qt is here, the GUI will be built\n    IF(NOT(${VTK_MAJOR_VERSION} LESS 9))\n      IF(NOT VTK_QT_VERSION)\n        MESSAGE(FATAL_ERROR \"WITH_QT option is ON, but VTK ${VTK_MAJOR_VERSION} has not been built with Qt support, disabling Qt.\")\n      ENDIF()\n\n      option(VTK_GLOBAL_WARNING_DISPLAY  \"Show VTK warning display on runtime\" OFF)\n      IF(NOT VTK_GLOBAL_WARNING_DISPLAY)\n        ADD_DEFINITIONS(-DVTK_GLOBAL_WARNING_DISPLAY_OFF)\n      ENDIF()\n\n      MESSAGE(STATUS \"VTK>=9 detected, will use VTK_QT_VERSION=${VTK_QT_VERSION} for Qt version.\")\n      IF(${VTK_QT_VERSION} EQUAL 6)\n        FIND_PACKAGE(Qt6 COMPONENTS Widgets Core Gui OpenGL PrintSupport QUIET OPTIONAL_COMPONENTS Svg)\n      ELSEIF(${VTK_QT_VERSION} EQUAL 5)\n        FIND_PACKAGE(Qt5 COMPONENTS Widgets Core Gui OpenGL PrintSupport QUIET OPTIONAL_COMPONENTS Svg)\n      ELSE()\n        FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui OPTIONAL_COMPONENTS QtSvg)\n      ENDIF()\n    ELSE()\n      # look for Qt5 (if vtk>5 is installed) before Qt4\n      IF(\"${VTK_MAJOR_VERSION}\" GREATER 5)\n        IF(RTABMAP_QT_VERSION STREQUAL \"AUTO\" OR RTABMAP_QT_VERSION STREQUAL \"5\")\n          FIND_PACKAGE(Qt5 COMPONENTS Widgets Core Gui OpenGL PrintSupport QUIET OPTIONAL_COMPONENTS Svg)\n        ENDIF(RTABMAP_QT_VERSION STREQUAL \"AUTO\" OR RTABMAP_QT_VERSION STREQUAL \"5\")\n      ENDIF(\"${VTK_MAJOR_VERSION}\" GREATER 5)\n\n      IF(NOT Qt5_FOUND)\n        IF(RTABMAP_QT_VERSION STREQUAL \"AUTO\" OR RTABMAP_QT_VERSION STREQUAL \"4\")\n          FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui OPTIONAL_COMPONENTS QtSvg)\n        ENDIF(RTABMAP_QT_VERSION STREQUAL \"AUTO\" OR RTABMAP_QT_VERSION STREQUAL \"4\")\n      ENDIF(NOT Qt5_FOUND)\n    ENDIF()\n        \n    IF(QT4_FOUND OR Qt5_FOUND OR Qt6_FOUND)\n        # For VCPKG build, set those global variables to off, \n        # we will enable them for jsut specific targets\n        set(CMAKE_AUTOMOC OFF)\n        set(CMAKE_AUTORCC OFF)\n        set(CMAKE_AUTOUIC OFF)\n        IF(\"${VTK_MAJOR_VERSION}\" EQUAL 5)\n            FIND_PACKAGE(QVTK REQUIRED) # only for VTK 5\n        ELSE()\n            list(FIND PCL_LIBRARIES VTK::GUISupportQt value)\n            IF(value EQUAL -1)\n                list(FIND PCL_LIBRARIES vtkGUISupportQt value)\n                IF(value EQUAL -1)\n                    IF(NOT(${VTK_MAJOR_VERSION} LESS 9))\n                        SET(PCL_LIBRARIES \"${PCL_LIBRARIES};VTK::GUISupportQt\")\n                    ELSE()\n                        SET(PCL_LIBRARIES \"${PCL_LIBRARIES};vtkGUISupportQt\")\n                    ENDIF()\n                    SET(ADD_VTK_GUI_SUPPORT_QT_TO_CONF TRUE)\n                ENDIF(value EQUAL -1)\n            ENDIF(value EQUAL -1)\n\n            MESSAGE(STATUS \"VTK_RENDERING_BACKEND=${VTK_RENDERING_BACKEND}\")\n\n            IF(VTK_RENDERING_BACKEND STREQUAL \"OpenGL2\")\n                ADD_DEFINITIONS(\"-DVTK_OPENGL2\")\n                # see issue #525\n                list(FIND PCL_LIBRARIES vtkRenderingVolumeOpenGL2 value)\n                IF(value EQUAL -1)\n                    SET(PCL_LIBRARIES \"${PCL_LIBRARIES};vtkRenderingVolumeOpenGL2\")\n                ENDIF(value EQUAL -1)\n            ELSEIF(VTK_RENDERING_BACKEND STREQUAL \"OpenGL\")\n                # PCL 1.9 not adding vtkRenderingVolumeOpenGL as dependency anymore, so add it for us\n                list(FIND PCL_LIBRARIES vtkRenderingVolumeOpenGL value)\n                IF(value EQUAL -1)\n                    SET(PCL_LIBRARIES \"${PCL_LIBRARIES};vtkRenderingVolumeOpenGL\")\n                ENDIF(value EQUAL -1)\n            ELSEIF(\"${VTK_MAJOR_VERSION}\" EQUAL 9)\n                list(FIND PCL_LIBRARIES VTK::RenderingOpenGL2 value)\n                IF(NOT value EQUAL -1)\n                    list(FIND PCL_LIBRARIES VTK::RenderingVolumeOpenGL2 value)\n                    IF(value EQUAL -1)\n                        SET(PCL_LIBRARIES \"${PCL_LIBRARIES};VTK::RenderingVolumeOpenGL2\")\n                    ENDIF(value EQUAL -1)\n                ENDIF(NOT value EQUAL -1)\n            ENDIF()\n\n        ENDIF()\n        ADD_DEFINITIONS(-DQT_NO_KEYWORDS) # To avoid conflicts with boost signals/foreach and Qt macros\n    ENDIF(QT4_FOUND OR Qt5_FOUND OR Qt6_FOUND)\nENDIF(WITH_QT)\n\nIF(NOT VTK_FOUND)\n    # Newest PCL versions won't set -DDISABLE_VTK\n    IF(NOT \"${PCL_DEFINITIONS}\" MATCHES \"-DDISABLE_VTK\")\n        SET(PCL_DEFINITIONS \"${PCL_DEFINITIONS};-DDISABLE_VTK\")\n    ENDIF()\nENDIF(NOT VTK_FOUND)\n\nIF(WITH_TORCH)\n    FIND_PACKAGE(Torch QUIET)\n    IF(TORCH_FOUND)\n        MESSAGE(STATUS \"Found Torch: ${TORCH_INCLUDE_DIRS}\")\n    ENDIF(TORCH_FOUND)\nENDIF(WITH_TORCH)\n\nIF(WITH_PYTHON)\n    FIND_PACKAGE(Python3 COMPONENTS Interpreter Development NumPy)\n    IF(Python3_FOUND)\n        MESSAGE(STATUS \"Found Python3\")\n        FIND_PACKAGE(pybind11 REQUIRED)\n    ENDIF(Python3_FOUND)\nENDIF(WITH_PYTHON)\n\nIF(WITH_PDAL)\n    FIND_PACKAGE(PDAL QUIET)\n    IF(PDAL_FOUND)\n       MESSAGE(STATUS \"Found PDAL ${PDAL_VERSION}: ${PDAL_INCLUDE_DIRS}\")\n    ENDIF(PDAL_FOUND)\nENDIF(WITH_PDAL)\n\nIF(WITH_LIBLAS)\n    FIND_PACKAGE(libLAS QUIET)\n    IF(libLAS_FOUND)\n       MESSAGE(STATUS \"Found libLAS ${libLAS_VERSION}: ${libLAS_INCLUDE_DIRS}\")\n    ENDIF(libLAS_FOUND)\nENDIF(WITH_LIBLAS)\n\nIF(WITH_CUDASIFT)\n    FIND_PACKAGE(CudaSift 3 QUIET)\n    IF(CudaSift_FOUND)\n       MESSAGE(STATUS \"Found CudaSift\")\n    ENDIF(CudaSift_FOUND)\nENDIF(WITH_CUDASIFT)\n\nIF(WITH_FREENECT)\n    FIND_PACKAGE(Freenect QUIET)\n    IF(Freenect_FOUND)\n       MESSAGE(STATUS \"Found Freenect: ${Freenect_INCLUDE_DIRS}\")\n    ENDIF(Freenect_FOUND)\nENDIF(WITH_FREENECT)\n\nIF(WITH_FREENECT2)\n    FIND_PACKAGE(freenect2 QUIET)\n    IF(freenect2_FOUND)\n       IF(NOT freenect2_INCLUDE_DIRS)\n          SET(freenect2_INCLUDE_DIRS ${freenect2_INCLUDE_DIR})\n       ENDIF(NOT freenect2_INCLUDE_DIRS)\n       MESSAGE(STATUS \"Found freenect2: ${freenect2_INCLUDE_DIRS}\")\n       # Explicitly link to OpenCL (in case of CUDA installed)\n       FIND_PACKAGE(OpenCL QUIET)\n       IF(OpenCL_FOUND)\n          SET(freenect2_LIBRARIES\n            ${OpenCL_LIBRARIES}\n            ${freenect2_LIBRARIES}\n          )\n       ENDIF(OpenCL_FOUND)\n    ENDIF(freenect2_FOUND)\nENDIF(WITH_FREENECT2)\n\nIF(WITH_K4W2 AND WIN32)\n    FIND_PACKAGE(KinectSDK2 QUIET)\n    IF(KinectSDK2_FOUND)\n       MESSAGE(STATUS \"Found Kinect for Windows 2: ${KinectSDK2_INCLUDE_DIRS}\")\n    ENDIF(KinectSDK2_FOUND)\nENDIF(WITH_K4W2 AND WIN32)\n\nIF(WITH_K4A)\n    IF(WIN32)\n        FIND_PACKAGE(K4A QUIET)\n    ELSE()\n        FIND_PACKAGE(k4a QUIET)\n        FIND_PACKAGE(k4arecord QUIET)\n        IF(NOT (k4a_FOUND AND k4arecord_FOUND))\n            SET(k4a_FOUND FALSE)\n        ENDIF(NOT (k4a_FOUND AND k4arecord_FOUND))\n    ENDIF()\n    IF(k4a_FOUND)\n       MESSAGE(STATUS \"Found Kinect for Azure: ${k4a_INCLUDE_DIRS}\")\n    ENDIF(k4a_FOUND)\nENDIF(WITH_K4A)\n\n# IF PCL depends on OpenNI2 (already found), ignore WITH_OPENNI2\nIF(WITH_OPENNI2 OR OpenNI2_FOUND)\n    FIND_PACKAGE(OpenNI2 QUIET)\n    IF(OpenNI2_FOUND)\n       MESSAGE(STATUS \"Found OpenNI2: ${OpenNI2_INCLUDE_DIRS}\")\n    ENDIF(OpenNI2_FOUND)\nENDIF(WITH_OPENNI2 OR OpenNI2_FOUND)\n\nIF(WITH_DC1394)\n    FIND_PACKAGE(DC1394 QUIET)\n    IF(DC1394_FOUND)\n       MESSAGE(STATUS \"Found DC1394: ${DC1394_INCLUDE_DIRS}\")\n    ENDIF(DC1394_FOUND)\nENDIF(WITH_DC1394)\n\nIF(WITH_G2O)\n    FIND_PACKAGE(g2o NO_MODULE)\n    IF(g2o_FOUND)\n       MESSAGE(STATUS \"Found g2o (targets)\")\n         SET(G2O_FOUND ${g2o_FOUND})\n         get_target_property(G2O_INCLUDES g2o::core INTERFACE_INCLUDE_DIRECTORIES)\n         MESSAGE(STATUS \"g2o include dir: ${G2O_INCLUDES}\")\n         FIND_FILE(G2O_FACTORY_FILE g2o/core/factory.h \n         PATHS ${G2O_INCLUDES}\n         NO_DEFAULT_PATH)\n       FILE(READ ${G2O_FACTORY_FILE} TMPTXT)\n       STRING(FIND \"${TMPTXT}\" \"shared_ptr\" matchres)\n       IF(${matchres} EQUAL -1)\n           MESSAGE(STATUS \"Old g2o factory version detected without shared ptr (factory file: ${G2O_FACTORY_FILE}).\")\n           SET(G2O_CPP11 2)\n       ELSE()\n           MESSAGE(STATUS \"Latest g2o factory version detected with shared ptr (factory file: ${G2O_FACTORY_FILE}).\")\n           SET(G2O_CPP11 1)\n       ENDIF()\n    ELSE()\n        FIND_PACKAGE(G2O QUIET)\n        IF(G2O_FOUND)\n            MESSAGE(STATUS \"Found g2o: ${G2O_INCLUDE_DIRS}\")\n        ENDIF(G2O_FOUND)\n    ENDIF()\nENDIF(WITH_G2O)\n\nIF(WITH_GTSAM)\n    # Force config mode to ignore PCL's findGTSAM.cmake file\n    FIND_PACKAGE(GTSAM CONFIG QUIET)\nENDIF(WITH_GTSAM)\n\nIF(WITH_MRPT)\n    FIND_PACKAGE(MRPT COMPONENTS poses QUIET)\n    IF(MRPT_FOUND)\n        message(STATUS \"MRPT_VERSION: ${MRPT_VERSION}\")\n        message(STATUS \"MRPT_LIBRARIES: ${MRPT_LIBRARIES}\")\n    ENDIF(MRPT_FOUND)\nENDIF(WITH_MRPT)\n\nIF(WITH_FLYCAPTURE2)\n    FIND_PACKAGE(FlyCapture2 QUIET)\n    IF(FlyCapture2_FOUND)\n       MESSAGE(STATUS \"Found FlyCapture2: ${FlyCapture2_INCLUDE_DIRS}\")\n    ENDIF(FlyCapture2_FOUND)\nENDIF(WITH_FLYCAPTURE2)\n\nIF(WITH_CVSBA)\n    FIND_PACKAGE(cvsba QUIET)\n    IF(cvsba_FOUND)\n       MESSAGE(STATUS \"Found cvsba: ${cvsba_INCLUDE_DIRS}\")\n    ENDIF(cvsba_FOUND)\nENDIF(WITH_CVSBA)\n\nIF(WITH_POINTMATCHER)\n    find_package(libpointmatcher QUIET)\n    IF(libpointmatcher_FOUND)\n        MESSAGE(STATUS \"Found libpointmatcher: ${libpointmatcher_INCLUDE_DIRS}\")\n        string(FIND \"${libpointmatcher_LIBRARIES}\" \"libnabo\" value)\n        IF(value EQUAL -1)\n            # Find libnabo (Issue #1117):\n            find_package(libnabo REQUIRED PATHS ${LIBNABO_INSTALL_DIR})\n            message(STATUS \"libnabo found, version ${libnabo_VERSION} (Config mode)\")\n            SET(libpointmatcher_LIBRARIES \"${libpointmatcher_LIBRARIES};libnabo::nabo\")\n        ENDIF(value EQUAL -1)\n        string(FIND \"${libpointmatcher_LIBRARIES}\" \"yaml-cpp::yaml-cpp\" value)\n        IF(NOT value EQUAL -1)\n            # Find yaml-cpp (Issue #1268):\n            find_package(yaml-cpp QUIET)\n        ENDIF(NOT value EQUAL -1)\n    ENDIF(libpointmatcher_FOUND)\nENDIF(WITH_POINTMATCHER)\n\nIF(libpointmatcher_FOUND OR GTSAM_FOUND)\n    find_package(Boost COMPONENTS thread filesystem system program_options date_time REQUIRED)\n    IF(Boost_MINOR_VERSION GREATER 47)\n        find_package(Boost COMPONENTS thread filesystem system program_options date_time chrono timer serialization REQUIRED)\n    ENDIF(Boost_MINOR_VERSION GREATER 47)\n    IF(WIN32)\n        MESSAGE(STATUS \"Boost_LIBRARY_DIRS=${Boost_LIBRARY_DIRS}\")\n        link_directories(${Boost_LIBRARY_DIRS})\n    ENDIF(WIN32)\nENDIF(libpointmatcher_FOUND OR GTSAM_FOUND)\n\nIF(WITH_CCCORELIB)\n    find_package(CCCoreLib QUIET)\n    IF(CCCoreLib_FOUND)\n       MESSAGE(STATUS \"Found CCCoreLib: ${CCCoreLib_INCLUDE_DIRS}\")\n    ENDIF(CCCoreLib_FOUND)\nENDIF(WITH_CCCORELIB)\n\nIF(WITH_OPEN3D)\n    IF(${CMAKE_VERSION} VERSION_LESS \"3.19.0\") \n       MESSAGE(WARNING \"Open3D requires CMake version >=3.19 (current is ${CMAKE_VERSION})\")\n    ELSE()\n       # Build Open3D like this to avoid linker errors in rtabmap:\n       # cmake -DBUILD_SHARED_LIBS=ON -DGLIBCXX_USE_CXX11_ABI=ON -DCMAKE_BUILD_TYPE=Release ..\n       find_package(Open3D QUIET)\n       IF(Open3D_FOUND)\n          MESSAGE(STATUS \"Found Open3D: ${Open3DINCLUDE_DIRS}\")\n       ENDIF(Open3D_FOUND)\n    ENDIF()\nENDIF(WITH_OPEN3D)\n\nIF(WITH_LOAM)\n    find_package(loam_velodyne QUIET)\n    IF(loam_velodyne_FOUND)\n       MESSAGE(STATUS \"Found loam_velodyne: ${loam_velodyne_INCLUDE_DIRS}\")\n    ENDIF(loam_velodyne_FOUND)\nENDIF(WITH_LOAM)\n\nIF(WITH_FLOAM)\n    find_package(floam QUIET)\n    IF(floam_FOUND)\n       MESSAGE(STATUS \"Found floam: ${floam_INCLUDE_DIRS}\")\n       FIND_PACKAGE(Ceres QUIET REQUIRED)\n    ENDIF(floam_FOUND)\nENDIF(WITH_FLOAM)\n\nSET(ZED_FOUND FALSE)\nIF(WITH_ZED)\n    find_package(ZED 2 QUIET)\n    \n    IF(ZED_FOUND)\n       MESSAGE(STATUS \"Found ZED sdk: ${ZED_INCLUDE_DIRS}\")\n       ## look for CUDA\n       find_package(CUDA)\n       IF(CUDA_FOUND)\n        MESSAGE(STATUS \"Found CUDA: ${CUDA_INCLUDE_DIRS}\")\n       ELSE()\n        MESSAGE(FATAL_ERROR \"CUDA is required to build with Zed sdk! Set -DWITH_ZED=OFF if you don't have CUDA.\")\n       ENDIF()\n    ENDIF(ZED_FOUND)\nENDIF(WITH_ZED)\n\nIF(WITH_ZEDOC)\n    find_package(ZEDOC QUIET)\n    IF(ZEDOC_FOUND)\n       MESSAGE(STATUS \"Found ZED Open Capture: ${ZEDOC_INCLUDE_DIRS}\")\n       ## look for HIDAPI\n       find_package(HIDAPI)\n       IF(HIDAPI_FOUND)\n          MESSAGE(STATUS \"Found HIDAPI: ${HIDAPI_INCLUDE_DIRS}\")\n       ELSE()\n          MESSAGE(FATAL_ERROR \"HIDAPI is required to build with Zed Open Capture! Set -DWITH_ZEDOC=OFF if you don't have HIDAPI.\")\n       ENDIF()\n    ENDIF(ZEDOC_FOUND)\nENDIF(WITH_ZEDOC)\n\nIF(WITH_REALSENSE)\n    IF(WITH_REALSENSE_SLAM)\n       FIND_PACKAGE(RealSense QUIET COMPONENTS slam)\n    ELSE()\n       FIND_PACKAGE(RealSense QUIET)\n    ENDIF()\n    IF(RealSense_FOUND)\n       MESSAGE(STATUS \"Found RealSense: ${RealSense_INCLUDE_DIRS}\")\n    ENDIF(RealSense_FOUND)\n    IF(RealSenseSlam_FOUND)\n       MESSAGE(STATUS \"Found RealSenseSlam: ${RealSense_INCLUDE_DIRS}\")\n    ENDIF(RealSenseSlam_FOUND)\nENDIF(WITH_REALSENSE)\n\nIF(WITH_REALSENSE2)\n    IF(WIN32)\n        FIND_PACKAGE(RealSense2 QUIET)\n    ELSE()\n        FIND_PACKAGE(realsense2 QUIET)\n    ENDIF()\n    IF(realsense2_FOUND)\n       MESSAGE(STATUS \"Found RealSense2: ${realsense2_INCLUDE_DIRS}\")\n    ENDIF(realsense2_FOUND)\nENDIF(WITH_REALSENSE2)\n\nIF(WITH_MYNTEYE)\n    FIND_PACKAGE(mynteye QUIET)\n    IF(mynteye_FOUND)\n       MESSAGE(STATUS \"Found mynteye-s: ${mynteye_INCLUDE_DIRS}\")\n    ENDIF(mynteye_FOUND)\nENDIF(WITH_MYNTEYE)\n\nIF(WITH_DEPTHAI)\n    FIND_PACKAGE(depthai 2.24 QUIET)\n    IF(depthai_FOUND)\n       MESSAGE(STATUS \"Found depthai-core (targets)\")\n    ENDIF(depthai_FOUND)\nENDIF(WITH_DEPTHAI)\n\nIF(WITH_XVSDK)\n    FIND_PACKAGE(xvsdk QUIET)\n    IF(xvsdk_FOUND)\n       MESSAGE(STATUS \"Found xvsdk (targets)\")\n    ENDIF(xvsdk_FOUND)\nENDIF(WITH_XVSDK)\n\nIF(WITH_OCTOMAP)\n    FIND_PACKAGE(octomap QUIET)\n    IF(octomap_FOUND)\n       MESSAGE(STATUS \"Found octomap ${octomap_VERSION}: ${OCTOMAP_INCLUDE_DIRS}\")\n       IF(octomap_VERSION VERSION_LESS 1.8)\n          ADD_DEFINITIONS(\"-DOCTOMAP_PRE_18\")\n       ENDIF(octomap_VERSION VERSION_LESS 1.8)\n    ENDIF(octomap_FOUND)\nENDIF(WITH_OCTOMAP)\n\nIF(WITH_GRIDMAP)\n    FIND_PACKAGE(grid_map_core QUIET)\n    IF(grid_map_core_FOUND)\n       MESSAGE(STATUS \"Found grid_map_core ${grid_map_core_VERSION}: ${grid_map_core_INCLUDE_DIRS}\")\n    ENDIF(grid_map_core_FOUND)\nENDIF(WITH_GRIDMAP)\n\nIF(WITH_CPUTSDF)\n    FIND_PACKAGE(CPUTSDF QUIET)\n    IF(CPUTSDF_FOUND)\n       MESSAGE(STATUS \"Found CPUTSDF: ${CPUTSDF_INCLUDE_DIRS}\")\n    ENDIF(CPUTSDF_FOUND)\nENDIF(WITH_CPUTSDF)\n\nIF(WITH_OPENCHISEL)\n    find_package(open_chisel QUIET)\n    if(open_chisel_FOUND)\n        MESSAGE(STATUS \"Found open_chisel: ${open_chisel_INCLUDE_DIRS}\")\n    endif(open_chisel_FOUND)\nENDIF(WITH_OPENCHISEL)\n\nIF(WITH_ALICE_VISION)\n    find_package(AliceVision CONFIG QUIET)\n    IF(AliceVision_FOUND)\n        IF(${AliceVision_VERSION} VERSION_LESS_EQUAL \"2.2\")\n           find_package(Boost COMPONENTS log log_setup container REQUIRED)\n        ENDIF(${AliceVision_VERSION} VERSION_LESS_EQUAL \"2.2\")\n        SET(CMAKE_MODULE_PATH \"${CMAKE_MODULE_PATH};/usr/local/lib/cmake/modules\")\n        find_package(Geogram REQUIRED QUIET)\n        find_package(assimp QUIET)\n        add_definitions(\"-DRTABMAP_ALICE_VISION_MAJOR=${AliceVision_VERSION_MAJOR}\")\n        add_definitions(\"-DRTABMAP_ALICE_VISION_MINOR=${AliceVision_VERSION_MINOR}\")\n        add_definitions(\"-DRTABMAP_ALICE_VISION_PATCH=${AliceVision_VERSION_PATCH}\")\n    ENDIF(AliceVision_FOUND)\nENDIF(WITH_ALICE_VISION)\n\nIF(WITH_FOVIS)\n    FIND_PACKAGE(libfovis QUIET)\n    IF(libfovis_FOUND)\n       MESSAGE(STATUS \"Found libfovis: ${libfovis_INCLUDE_DIRS}\")\n    ENDIF(libfovis_FOUND)\nENDIF(WITH_FOVIS)\n\nIF(WITH_VISO2)\n    FIND_PACKAGE(libviso2 QUIET)\n    IF(libviso2_FOUND)\n       MESSAGE(STATUS \"Found libviso2: ${libviso2_INCLUDE_DIRS}\")\n    ENDIF(libviso2_FOUND)\nENDIF(WITH_VISO2)\n\nIF(WITH_DVO)\n    FIND_PACKAGE(dvo_core QUIET)\n    IF(dvo_core_FOUND)\n       MESSAGE(STATUS \"Found dvo_core: ${dvo_core_INCLUDE_DIRS}\")\n    ENDIF(dvo_core_FOUND)\nENDIF(WITH_DVO)\n\nIF(WITH_OKVIS)\n    FIND_PACKAGE(okvis 1.1 QUIET)\n    IF(okvis_FOUND)\n       MESSAGE(STATUS \"Found okvis: ${OKVIS_INCLUDE_DIRS}\")\n       find_package(brisk 2 REQUIRED)\n       MESSAGE(STATUS \"Found brisk: ${BRISK_INCLUDE_DIRS}\")\n       find_package(opengv REQUIRED)\n       MESSAGE(STATUS \"Found opengv: ${OPENGV_INCLUDE_DIRS}\")\n       find_package(Ceres 1.9.0 REQUIRED EXACT) # OKVIS requires this specific version\n       MESSAGE(STATUS \"Found ceres ${Ceres_VERSION}: ${CERES_INCLUDE_DIRS}\")\n    ENDIF(okvis_FOUND)\nENDIF(WITH_OKVIS)\n\n# If built with okvis, we found already ceres above\nIF(WITH_CERES)\n  IF(NOT okvis_FOUND AND NOT floam_FOUND)\n    FIND_PACKAGE(Ceres QUIET)\n    MESSAGE(STATUS \"Found ceres ${Ceres_VERSION}: ${CERES_INCLUDE_DIRS}\")\n  ENDIF(NOT okvis_FOUND AND NOT floam_FOUND)\nELSEIF(Ceres_FOUND)\n  MESSAGE(WARNING \"WITH_CERES is OFF, but it still included by dependencies Okvis or FLOAM\")\nENDIF()\n\nIF(WITH_MSCKF_VIO)\n    FIND_PACKAGE(msckf_vio QUIET)\n    IF(msckf_vio_FOUND)\n       MESSAGE(STATUS \"Found msckf_vio: ${msckf_vio_INCLUDE_DIRS}\")\n    ENDIF(msckf_vio_FOUND)\nENDIF(WITH_MSCKF_VIO)\n\nIF(WITH_VINS)\n    FIND_PACKAGE(vins QUIET)\n    IF(vins_FOUND)\n       MESSAGE(STATUS \"Found vins: ${vins_INCLUDE_DIRS}\")\n       IF(okvis_FOUND)\n           MESSAGE(WARNING \"VINS and OKVIS will be both linked to project, make sure VINS has been built with against same Ceres version than OKVIS to avoid some crashes.\")\n       ENDIF(okvis_FOUND)\n    ENDIF(vins_FOUND)\nENDIF(WITH_VINS)\n\nIF(WITH_OPENVINS)\n    FIND_PACKAGE(ov_msckf QUIET)\n    # On ROS2, the indirect includes and libraries\n    # are not forwarded by ov_msckf target, append them manually\n    FIND_PACKAGE(ov_core QUIET)\n    FIND_PACKAGE(ov_init QUIET)\n    IF(ov_msckf_FOUND AND ov_core_FOUND AND ov_init_FOUND)\n      SET(ov_msckf_INCLUDE_DIRS\n         ${ov_msckf_INCLUDE_DIRS}\n         ${ov_core_INCLUDE_DIRS}\n         ${ov_init_INCLUDE_DIRS})\n      SET(ov_msckf_LIBRARIES\n         ${ov_msckf_LIBRARIES}\n         ${ov_core_LIBRARIES}\n         ${ov_init_LIBRARIES})\n      MESSAGE(STATUS \"Found OpenVINS: ${ov_msckf_INCLUDE_DIRS}\")\n    ENDIF()\nENDIF(WITH_OPENVINS)\n\nIF(WITH_FASTCV)\n    FIND_PACKAGE(FastCV QUIET)\n    IF(FastCV_FOUND)\n       MESSAGE(STATUS \"Found FastCV: ${FastCV_INCLUDE_DIRS}\")\n    ENDIF(FastCV_FOUND)\nENDIF(WITH_FASTCV)\n\nIF(WITH_OPENGV)\n    FIND_PACKAGE(opengv QUIET)\n    IF(opengv_FOUND)\n       MESSAGE(STATUS \"Found OpenGV: ${opengv_INCLUDE_DIRS}\")\n    ENDIF(opengv_FOUND)\nENDIF(WITH_OPENGV)\n\nIF(WITH_ORB_SLAM AND NOT G2O_FOUND)\n    FIND_PACKAGE(ORB_SLAM QUIET)\n    IF(ORB_SLAM_FOUND)\n       MESSAGE(STATUS \"Found ORB_SLAM${ORB_SLAM_VERSION}: ${ORB_SLAM_INCLUDE_DIRS}\")\n    ENDIF(ORB_SLAM_FOUND)\nENDIF(WITH_ORB_SLAM AND NOT G2O_FOUND)\n\nSET(DISABLE_NEW_DTAGS_FLAG \"--disable-new-dtags\")\nIF(NOT (APPLE OR WIN32) AND BUILD_WITH_RPATH_NOT_RUNPATH)\n    ADD_LINK_OPTIONS(LINKER:${DISABLE_NEW_DTAGS_FLAG})\nENDIF()\n\nIF(NOT MSVC)\n    IF(Qt6_FOUND OR (G2O_FOUND AND G2O_CPP11 EQUAL 1) OR TORCH_FOUND OR MRPT_FOUND)\n      # Qt6 requires c++17\n      include(CheckCXXCompilerFlag)\n      CHECK_CXX_COMPILER_FLAG(\"-std=c++17\" COMPILER_SUPPORTS_CXX17)\n      IF(COMPILER_SUPPORTS_CXX17)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++17\")\n        set(CMAKE_CXX_STANDARD 17)\n      ELSE()\n        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++17 support. Please use a different C++ compiler if you want to use Qt6.\")\n      ENDIF()\n    ENDIF()\n    IF((NOT (${CMAKE_CXX_STANDARD} STREQUAL \"17\")) AND (msckf_vio_FOUND OR loam_velodyne_FOUND OR floam_FOUND OR PCL_VERSION VERSION_GREATER \"1.9.1\" OR G2O_FOUND OR CCCoreLib_FOUND OR Open3D_FOUND))\n     #MSCKF_VIO, LOAM, PCL>=1.10, latest g2o and CCCoreLib require c++14\n     include(CheckCXXCompilerFlag)\n      CHECK_CXX_COMPILER_FLAG(\"-std=c++14\" COMPILER_SUPPORTS_CXX14)\n      IF(COMPILER_SUPPORTS_CXX14)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++14\")\n        set(CMAKE_CXX_STANDARD 14)\n      ELSE()\n        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++14 support. Please use a different C++ compiler if you want to use LOAM, latest PCL or g2o.\")\n      ENDIF()\n    ENDIF()\n\n    IF(NOT (\"${CMAKE_CXX_STANDARD}\" STREQUAL \"17\") AND NOT (\"${CMAKE_CXX_STANDARD}\" STREQUAL \"14\"))\n     #Newest versions require std11\n     include(CheckCXXCompilerFlag)\n      CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n      CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n      IF(COMPILER_SUPPORTS_CXX11)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n      ELSEIF(COMPILER_SUPPORTS_CXX0X)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n      ELSE()\n        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n      ENDIF()\n    ENDIF()\nENDIF()\n\n\n####### OSX BUNDLE CMAKE_INSTALL_PREFIX #######\nIF(APPLE AND BUILD_AS_BUNDLE)\n  IF(Qt6_FOUND OR Qt5_FOUND OR (QT4_FOUND AND QT_QTCORE_FOUND AND QT_QTGUI_FOUND))\n       \n    # Required when packaging, and set CMAKE_INSTALL_PREFIX to \"/\".\n    SET(CMAKE_INSTALL_PREFIX \"/\")\n    SET(CPACK_SET_DESTDIR TRUE) \n    \n    SET(CMAKE_BUNDLE_NAME \"${PROJECT_NAME}\")\n    SET(CMAKE_BUNDLE_LOCATION \"${CMAKE_INSTALL_PREFIX}\")\n    \n    # make sure CMAKE_INSTALL_PREFIX ends in /\n    STRING(LENGTH \"${CMAKE_INSTALL_PREFIX}\" LEN)\n    MATH(EXPR LEN \"${LEN} -1\" )\n    STRING(SUBSTRING \"${CMAKE_INSTALL_PREFIX}\" ${LEN} 1 ENDCH)\n    IF(NOT \"${ENDCH}\" STREQUAL \"/\")\n      SET(CMAKE_INSTALL_PREFIX \"${CMAKE_INSTALL_PREFIX}/\")\n    ENDIF(NOT \"${ENDCH}\" STREQUAL \"/\")\n    SET(CMAKE_INSTALL_PREFIX \n      \"${CMAKE_INSTALL_PREFIX}${CMAKE_BUNDLE_NAME}.app/Contents\")\n  ELSE()\n    \n    #If Qt is not here, no need to build a bundle\n    SET(BUILD_AS_BUNDLE OFF)\n  ENDIF()\nENDIF(APPLE AND BUILD_AS_BUNDLE)\n\n\n####### SOURCES (Projects) #######\n\n# OpenCV2 has nonfree if OPENCV_NONFREE_FOUND\n# OpenCV<=3.4.2 has nonfree if OPENCV_XFEATURES2D_FOUND\n# OpenCV>3.4.2 has nonfree if OPENCV_XFEATURES2D_FOUND and OPENCV_ENABLE_NONFREE is defined\nIF(NOT (OPENCV_NONFREE_FOUND OR OPENCV_XFEATURES2D_FOUND))\n   SET(NONFREE \"//\")\nELSEIF(OpenCV_VERSION VERSION_GREATER \"3.4.2\")\n  FIND_FILE(OpenCV_MODULES_HPP opencv2/opencv_modules.hpp \n    PATHS ${OpenCV_INCLUDE_DIRS}\n    NO_DEFAULT_PATH)\n  FILE(READ ${OpenCV_MODULES_HPP} TMPTXT)\n  STRING(FIND \"${TMPTXT}\" \"#define OPENCV_ENABLE_NONFREE\" matchres)\n  IF(${matchres} EQUAL -1)\n    SET(NONFREE \"//\")\n  ENDIF(${matchres} EQUAL -1)\nENDIF()\n\nIF(NOT G2O_FOUND)\n   SET(G2O \"//\")\n   SET(G2O_CPP_CONF \"//\")\nELSE()\n   IF(NOT G2O_CPP11)\n     SET(G2O_CPP_CONF \"//\")\n   ENDIF(NOT G2O_CPP11)\nENDIF()\nIF(NOT GTSAM_FOUND)\n   SET(GTSAM \"//\")\nENDIF()\nIF(NOT MRPT_FOUND)\n   SET(MRPT \"//\")\nENDIF(NOT MRPT_FOUND)\nIF(NOT WITH_CERES OR NOT CERES_FOUND)\n   SET(CERES \"//\")\nENDIF(NOT WITH_CERES OR NOT CERES_FOUND)\nIF(NOT WITH_TORO)\n   SET(TORO \"//\")\nENDIF(NOT WITH_TORO)\nIF(NOT WITH_VERTIGO)\n   SET(VERTIGO \"//\")\nENDIF(NOT WITH_VERTIGO)\nIF(NOT cvsba_FOUND)\n   SET(CVSBA \"//\")\nENDIF()\nIF(NOT libpointmatcher_FOUND)\n   SET(POINTMATCHER \"//\")\nENDIF(NOT libpointmatcher_FOUND)\nIF(NOT CCCoreLib_FOUND)\n   SET(CCCORELIB \"//\")\nENDIF(NOT CCCoreLib_FOUND)\nIF(NOT Open3D_FOUND)\n   SET(OPEN3D \"//\")\nENDIF(NOT Open3D_FOUND)\nIF(NOT FastCV_FOUND)\n   SET(FASTCV \"//\")\nENDIF(NOT FastCV_FOUND)\nIF(NOT opengv_FOUND OR NOT WITH_OPENGV)\n   SET(OPENGV \"//\")\nENDIF(NOT opengv_FOUND OR NOT WITH_OPENGV)\nIF(NOT PDAL_FOUND)\n   SET(PDAL \"//\")\nENDIF(NOT PDAL_FOUND)\nIF(NOT libLAS_FOUND)\n   SET(LIBLAS \"//\")\nENDIF(NOT libLAS_FOUND)\nIF(NOT CudaSift_FOUND)\n   SET(CUDASIFT \"//\")\nENDIF(NOT CudaSift_FOUND)\nIF(NOT loam_velodyne_FOUND)\n   SET(LOAM \"//\")\nENDIF(NOT loam_velodyne_FOUND)\nIF(NOT floam_FOUND)\n   SET(FLOAM \"//\")\nENDIF(NOT floam_FOUND)\nIF(NOT Freenect_FOUND)\n   SET(FREENECT \"//\")\nENDIF()\nIF(NOT freenect2_FOUND)\n   SET(FREENECT2 \"//\")\nENDIF()\nIF(NOT KinectSDK2_FOUND)\n   SET(K4W2 \"//\")\nENDIF()\nIF(NOT k4a_FOUND)\n   SET(K4A \"//\")\n   SET(CONF_WITH_K4A 0)\nELSE()\n   SET(CONF_WITH_K4A 1)\n   IF(WIN32)\n      install(\n         FILES\n         \"${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules/FindK4A.cmake\"\n         DESTINATION ${INSTALL_CMAKE_DIR}/Modules/.\n         COMPONENT devel\n      )\n   ENDIF(WIN32)\nENDIF()\nIF(NOT (OpenNI_FOUND AND WITH_OPENNI))\n   SET(OPENNI \"//\")\nENDIF()\nIF(NOT OpenNI2_FOUND)\n   SET(OPENNI2 \"//\")\nENDIF()\nIF(NOT DC1394_FOUND)\n   SET(DC1394 \"//\")\nENDIF()\nIF(NOT FlyCapture2_FOUND)\n   SET(FLYCAPTURE2 \"//\")\nENDIF()\nIF(NOT ZED_FOUND)\n   SET(ZED \"//\")\nENDIF()\nIF(NOT ZEDOC_FOUND)\n   SET(ZEDOC \"//\")\nENDIF()\nIF(NOT RealSense_FOUND)\n   SET(REALSENSE \"//\")\nENDIF()\nIF(NOT RealSenseSlam_FOUND)\n   SET(REALSENSESLAM \"//\")\nENDIF(NOT RealSenseSlam_FOUND)\nIF(NOT realsense2_FOUND)\n   SET(REALSENSE2 \"//\")\n   SET(CONF_WITH_REALSENSE2 0)\nELSE()\n   SET(CONF_WITH_REALSENSE2 1)\n   IF(WIN32)\n      install(\n         FILES\n         \"${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules/FindRealSense2.cmake\"\n         DESTINATION ${INSTALL_CMAKE_DIR}/Modules/.\n         COMPONENT devel\n      )\n   ENDIF(WIN32)\nENDIF()\nIF(NOT mynteye_FOUND)\n   SET(MYNTEYE \"//\")\nENDIF(NOT mynteye_FOUND)\nIF(NOT depthai_FOUND)\n   SET(CONF_WITH_DEPTH_AI 0)\n   SET(DEPTHAI \"//\")\nELSE()\n   SET(CONF_WITH_DEPTH_AI 1)\nENDIF()\nIF(NOT xvsdk_FOUND)\n   SET(XVSDK \"//\")\n   SET(CONF_WITH_XVSDK 0)\nELSE()\n   SET(CONF_WITH_XVSDK 1)\nENDIF()\nIF(NOT octomap_FOUND)\n   SET(OCTOMAP \"//\")\n   SET(CONF_WITH_OCTOMAP 0)\nELSE()\n   SET(CONF_WITH_OCTOMAP 1)\nENDIF()\nIF(NOT grid_map_core_FOUND)\n   SET(GRIDMAP \"//\")\nENDIF()\nIF(NOT CPUTSDF_FOUND)\n   SET(CPUTSDF \"//\")\nENDIF()\nIF(NOT open_chisel_FOUND)\n   SET(OPENCHISEL \"//\")\nENDIF()\nIF(NOT AliceVision_FOUND)\n   SET(ALICE_VISION \"//\")\nENDIF(NOT AliceVision_FOUND)\nIF(NOT libfovis_FOUND)\n   SET(FOVIS \"//\")\nENDIF()\nIF(NOT libviso2_FOUND)\n   SET(VISO2 \"//\")\nENDIF()\nIF(NOT dvo_core_FOUND)\n   SET(DVO \"//\")\nENDIF()\nIF(NOT okvis_FOUND)\n   SET(OKVIS \"//\")\nENDIF()\nIF(NOT msckf_vio_FOUND)\n   SET(MSCKF_VIO \"//\")\nENDIF()\nIF(NOT vins_FOUND)\n   SET(VINS \"//\")\nENDIF()\nIF(NOT ov_msckf_FOUND)\n   SET(OPENVINS \"//\")\nENDIF()\nIF(NOT ORB_SLAM_FOUND)\n   SET(ORB_SLAM \"//\")\nENDIF()\nIF(NOT WITH_ORB_OCTREE)\n   SET(ORB_OCTREE \"//\")\nENDIF()\nIF(NOT TORCH_FOUND)\n   SET(TORCH \"//\")\nENDIF()\nIF(NOT WITH_PYTHON OR NOT Python3_FOUND)\n   SET(PYTHON \"//\")\n   SET(CONF_WITH_PYTHON 0)\nELSE()\n   SET(CONF_WITH_PYTHON 1)\nENDIF()\nIF(ADD_VTK_GUI_SUPPORT_QT_TO_CONF)\n   SET(CONF_VTK_QT true)\nELSE()\n   SET(CONF_VTK_QT false)\nENDIF()\nIF(NOT WITH_MADGWICK)\n   SET(MADGWICK \"//\")\nENDIF()\n\nCONFIGURE_FILE(Version.h.in ${CMAKE_CURRENT_BINARY_DIR}/corelib/src/include/${PROJECT_PREFIX}/core/Version.h)\n\nADD_SUBDIRECTORY( utilite )\nADD_SUBDIRECTORY( corelib )\n\nIF(ANDROID)\n   IF(BUILD_APP)\n      ADD_SUBDIRECTORY( app )\n   ENDIF(BUILD_APP)\nELSEIF(WITH_QT)\n   IF(Qt6_FOUND OR Qt5_FOUND OR (QT4_FOUND AND QT_QTCORE_FOUND AND QT_QTGUI_FOUND))\n      ADD_SUBDIRECTORY( guilib )\n      IF(BUILD_APP)\n         ADD_SUBDIRECTORY( app )\n      ENDIF(BUILD_APP)\n   ELSE()\n      MESSAGE(WARNING \"Qt not found, the GUI lib and the stand-alone application will not be compiled...\")\n   ENDIF()\nENDIF()\n\nIF(BUILD_TOOLS)\n   ADD_SUBDIRECTORY( tools )\nENDIF(BUILD_TOOLS)\nIF(BUILD_EXAMPLES)\n   ADD_SUBDIRECTORY( examples )\nENDIF(BUILD_EXAMPLES)\n\n#######################\n# Uninstall target, for \"make uninstall\"\n#######################\nIF (NOT TARGET uninstall)\nCONFIGURE_FILE(\n  \"${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in\"\n  \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n  IMMEDIATE @ONLY)\n\nADD_CUSTOM_TARGET(uninstall\n  \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\")\nENDIF()\n\n####\n# Global Export Target\n####\nadd_library(rtabmap INTERFACE)\nadd_library(rtabmap::rtabmap ALIAS rtabmap)\nIF(WITH_QT AND (QT4_FOUND OR Qt5_FOUND OR Qt6_FOUND))\n   set(CONF_WITH_GUI ON)\n   IF(QT4_FOUND)\n      set(CONF_QT_VERSION 4)\n   ELSEIF(Qt5_FOUND)\n      set(CONF_QT_VERSION 5)\n   ELSE()\n      set(CONF_QT_VERSION 6)\n   ENDIF()\n   target_link_libraries(rtabmap INTERFACE rtabmap_utilite rtabmap_core rtabmap_gui)\nELSE()\n   set(CONF_WITH_GUI OFF)\n   target_link_libraries(rtabmap INTERFACE rtabmap_utilite rtabmap_core)\nENDIF()\ninstall(TARGETS rtabmap EXPORT rtabmapTargets)\nexport(EXPORT rtabmapTargets\n  FILE \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake\"\n  NAMESPACE rtabmap::\n)\ninstall(EXPORT rtabmapTargets\n  FILE\n    ${PROJECT_NAME}Targets.cmake\n  DESTINATION\n    ${INSTALL_CMAKE_DIR}\n  NAMESPACE rtabmap::\n  COMPONENT\n    devel\n)\n\n####\n# Setup RTABMapConfig.cmake\n####\ninclude(CMakePackageConfigHelpers)\nwrite_basic_package_version_file(\n  \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\"\n  VERSION ${PROJECT_VERSION}\n  COMPATIBILITY AnyNewerVersion\n)\n\n# Build tree:\nSET(CONF_MODULES_DIR \"../cmake_modules\")\nconfigure_file(\n  ${PROJECT_NAME}Config.cmake.in\n  \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake\"\n  @ONLY\n)\n\n# Install tree:\nSET(CONF_MODULES_DIR \"Modules\")\nconfigure_file(\n  ${PROJECT_NAME}Config.cmake.in\n  \"${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${PROJECT_NAME}Config.cmake\"\n  @ONLY\n)\ninstall(\n  FILES\n    \"${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${PROJECT_NAME}Config.cmake\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\"\n  DESTINATION\n    ${INSTALL_CMAKE_DIR}\n  COMPONENT\n    devel\n)\n  \n####\n\n### Install package.xml for catkin\ninstall(FILES package.xml DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_PREFIX}\" COMPONENT devel)\n\n#######################\n# CPACK (Packaging)\n#######################\nIF(BUILD_AS_BUNDLE)\n  SET(CMAKE_INSTALL_SYSTEM_RUNTIME_COMPONENT runtime)\n  INCLUDE(InstallRequiredSystemLibraries)\nENDIF(BUILD_AS_BUNDLE)\n\nSET(CPACK_PACKAGE_NAME \"${PROJECT_NAME}\")\nSET(CPACK_PACKAGE_VENDOR \"${PROJECT_NAME} project\")\nSET(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"RTAB-MAP is a Real-Time Appearance-Based Mapping approach.\")\n#SET(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_SOURCE_DIR}/Description.txt\")\n#SET(CPACK_RESOURCE_FILE_README \"${CMAKE_SOURCE_DIR}/README.txt\")\nSET(CPACK_PACKAGE_VERSION_MAJOR \"${PROJECT_VERSION_MAJOR}\")\nSET(CPACK_PACKAGE_VERSION_MINOR \"${PROJECT_VERSION_MINOR}\")\nSET(CPACK_PACKAGE_VERSION_PATCH \"${PROJECT_VERSION_PATCH}\")\n#SET(CPACK_PACKAGE_INSTALL_DIRECTORY \"${PROJECT_NAME}${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}\")\n#SET(CPACK_PACKAGE_EXECUTABLES \"\")\n#SET(CPACK_SOURCE_PACKAGE_FILE_NAME \"${PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}\")\nSET(CPACK_PACKAGE_CONTACT \"matlabbe@gmail.com\")\n\n\nset(CPACK_SOURCE_IGNORE_FILES \n  \"\\\\\\\\.svn/\" \n  \"\\\\\\\\.settings/\" \n  \"${PROJECT_SOURCE_DIR}/build/[a-zA-Z0-9_]+\" \n  \"~$\" \n  \"${PROJECT_SOURCE_DIR}/bin/.*${PROJECT_PREFIX}\"\n  \"${PROJECT_SOURCE_DIR}/bin/.*${PROJECT_NAME}\"\n  \"${PROJECT_SOURCE_DIR}/bin/.*[tT]est\"\n  \"${PROJECT_SOURCE_DIR}/bin/.*[eE]xample\"\n  \"${PROJECT_SOURCE_DIR}/bin/.*uresourcegenerator\"\n  \"\\\\\\\\.DS_Store\"\n)\n\nIF(WIN32)\n  SET(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_SOURCE_DIR}/LICENSE\")\n  IF(CMAKE_CL_64) \n    SET(CPACK_NSIS_INSTALL_ROOT \"$PROGRAMFILES64\") \n  ELSE() \n    SET(CPACK_NSIS_INSTALL_ROOT \"$PROGRAMFILES\") \n  ENDIF()\n  IF(BUILD_AS_BUNDLE)\n    SET(CPACK_GENERATOR \"ZIP;NSIS\")\n  ELSE()\n    SET(CPACK_GENERATOR \"ZIP\")\n  ENDIF()\n  SET(CPACK_SOURCE_GENERATOR \"ZIP\")\n  SET(CPACK_NSIS_PACKAGE_NAME \"${PROJECT_NAME}\")\n  SET(ICON_PATH \"${PROJECT_SOURCE_DIR}/app/src/${PROJECT_NAME}.ico\")\n  SET(CPACK_NSIS_MUI_ICON ${ICON_PATH})\n  SET(CPACK_NSIS_MUI_UNIICON ${ICON_PATH})\n  SET(CPACK_PACKAGE_INSTALL_DIRECTORY \"${PROJECT_NAME}\")\n  #SET(CPACK_PACKAGE_ICON ${ICON_PATH})\n  #SET(CPACK_NSIS_INSTALLED_ICON_NAME ${ICON_PATH})\n  #SET(CPACK_NSIS_HELP_LINK \"http:\\\\\\\\\\\\\\\\www.${PROJECT_PREFIX}.googlecode.com\")\n  #SET(CPACK_NSIS_URL_INFO_ABOUT \"http:\\\\\\\\\\\\\\\\www.${PROJECT_PREFIX}.googlecode.com\")\n  SET(CPACK_NSIS_DISPLAY_NAME \"${PROJECT_NAME}\")\n  SET(CPACK_NSIS_CONTACT ${CPACK_PACKAGE_CONTACT})\n  # Set the icon used for the Windows \"Add or Remove Programs\" tool.\n  SET(CPACK_NSIS_INSTALLED_ICON_NAME bin\\\\\\\\${PROJECT_NAME}.exe)\n  # Desktop link (\"executableName\" \"linkName\")\n  SET(CPACK_PACKAGE_EXECUTABLES \"${PROJECT_NAME}\" \"${PROJECT_NAME}\" ${CPACK_PACKAGE_EXECUTABLES}) \n  SET(CPACK_CREATE_DESKTOP_LINKS \"${PROJECT_NAME}\" ${CPACK_CREATE_DESKTOP_LINKS}) \n  SET(CPACK_NSIS_MODIFY_PATH ON)\n  \nELSEIF(APPLE)\n  # The project is created as a bundle over the main app (see ./app/src).\n  # Here we package only this bundle. Note that we set \n  # CMAKE_INSTALL_PREFIX to \"/\" when packaging...\n  IF(BUILD_AS_BUNDLE)\n    SET(CPACK_GENERATOR \"DragNDrop\")\n  ELSE()\n    SET(CPACK_GENERATOR \"PackageMaker;TBZ2\")\n  ENDIF()\n  \n  SET(CPACK_SOURCE_GENERATOR \"ZIP\")\n\n  SET(CPACK_PACKAGE_ICON \"${PROJECT_SOURCE_DIR}/app/src/${PROJECT_NAME}.icns\")\n\nELSE()\n  SET(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_SOURCE_DIR}/LICENSE\")\n  SET(CPACK_GENERATOR \"TBZ2\")\n  SET(CPACK_SOURCE_GENERATOR \"ZIP\")\nENDIF()\n\nINCLUDE(CPack)\n\nMESSAGE(STATUS \"--------------------------------------------\")\nMESSAGE(STATUS \"Info :\")\nMESSAGE(STATUS \"  RTAB-Map Version =     ${RTABMAP_VERSION}\")\nMESSAGE(STATUS \"  CMAKE_VERSION =        ${CMAKE_VERSION}\")\nMESSAGE(STATUS \"  CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}\")\nMESSAGE(STATUS \"  CMAKE_BUILD_TYPE =     ${CMAKE_BUILD_TYPE}\")\nMESSAGE(STATUS \"  CMAKE_INSTALL_LIBDIR = ${CMAKE_INSTALL_LIBDIR}\")\nMESSAGE(STATUS \"  BUILD_APP =            ${BUILD_APP}\")\nMESSAGE(STATUS \"  BUILD_TOOLS =          ${BUILD_TOOLS}\")\nMESSAGE(STATUS \"  BUILD_EXAMPLES =       ${BUILD_EXAMPLES}\")\nIF(NOT WIN32)\n    # see comment above for the BUILD_SHARED_LIBS option on Windows\n    MESSAGE(STATUS \"  BUILD_SHARED_LIBS =    ${BUILD_SHARED_LIBS}\")\nENDIF(NOT WIN32)\nIF(APPLE OR WIN32)\nMESSAGE(STATUS \"  BUILD_AS_BUNDLE =      ${BUILD_AS_BUNDLE}\")\nENDIF(APPLE OR WIN32)\nMESSAGE(STATUS \"  CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}\")\nIF(NOT (APPLE OR WIN32) AND BUILD_WITH_RPATH_NOT_RUNPATH)\nMESSAGE(STATUS \"  LINKER FLAGS =    ${DISABLE_NEW_DTAGS_FLAG}\")\nENDIF()\nMESSAGE(STATUS \"  FLANN_KDTREE_MEM_OPT = ${FLANN_KDTREE_MEM_OPT}\")\nMESSAGE(STATUS \"  PCL_DEFINITIONS = ${PCL_DEFINITIONS}\")\nMESSAGE(STATUS \"  PCL_VERSION = ${PCL_VERSION}\")\nIF(PCL_COMPILE_OPTIONS)\nMESSAGE(STATUS \"  PCL_COMPILE_OPTIONS = ${PCL_COMPILE_OPTIONS}\")\nENDIF(PCL_COMPILE_OPTIONS)\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"Optional dependencies ('*' affects some default parameters) :\")\nIF(OpenCV_FOUND)\n  IF(OpenCV_VERSION_MAJOR EQUAL 2)\n    IF(OPENCV_NONFREE_FOUND)\n      MESSAGE(STATUS \" *With OpenCV 2 nonfree module (SIFT/SURF) = YES (License: Non commercial)\")\n    ELSE()\n      MESSAGE(STATUS \" *With OpenCV 2 nonfree module (SIFT/SURF) = NO (not found, License: BSD)\")\n    ENDIF()\n  ELSE()\n    IF(OPENCV_XFEATURES2D_FOUND)\n      IF(NONFREE STREQUAL \"//\")\n        IF((OpenCV_VERSION_MAJOR LESS 4) OR ((OpenCV_VERSION_MAJOR EQUAL 4) AND (OpenCV_VERSION_MINOR LESS 5)))\n          MESSAGE(STATUS \" *With OpenCV ${OpenCV_VERSION} xfeatures2d = YES, nonfree = NO (License: BSD)\")\n        ELSE()\n          MESSAGE(STATUS \" *With OpenCV ${OpenCV_VERSION} xfeatures2d = YES, nonfree = NO (License: Apache 2)\")\n        ENDIF()\n      ELSE()\n        MESSAGE(STATUS \" *With OpenCV ${OpenCV_VERSION} xfeatures2d = YES, nonfree = YES (License: Non commercial)\")\n      ENDIF()\n    ELSE()\n      IF((OpenCV_VERSION_MAJOR LESS 4) OR ((OpenCV_VERSION_MAJOR EQUAL 4) AND (OpenCV_VERSION_MINOR LESS 5)))\n        MESSAGE(STATUS \" *With OpenCV ${OpenCV_VERSION} xfeatures2d = NO, nonfree = NO (License: BSD)\")\n      ELSE()\n        MESSAGE(STATUS \" *With OpenCV ${OpenCV_VERSION} xfeatures2d = NO, nonfree = NO (License: Apache 2)\")\n      ENDIF()\n    ENDIF()\n  ENDIF()\nENDIF(OpenCV_FOUND)\n\nIF(WITH_QT AND QT4_FOUND)\nMESSAGE(STATUS \"  With Qt4                  = YES (License: Open Source or Commercial)\")\nMESSAGE(STATUS \"  With VTK ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}              = YES (License: BSD)\")\nELSEIF(WITH_QT AND Qt5_FOUND)\nMESSAGE(STATUS \"  With Qt ${Qt5_VERSION}            = YES (License: Open Source or Commercial)\")\nMESSAGE(STATUS \"  With VTK ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}              = YES (License: BSD)\")\nELSEIF(WITH_QT AND Qt6_FOUND)\nMESSAGE(STATUS \"  With Qt ${Qt6_VERSION}            = YES (License: Open Source or Commercial)\")\nMESSAGE(STATUS \"  With VTK ${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}              = YES (License: BSD)\")\n\nELSEIF(NOT WITH_QT)\nMESSAGE(STATUS \"  With Qt                   = NO (WITH_QT=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Qt                   = NO (Qt not found)\")\nENDIF()\n\nIF(SQLite3_FOUND)\nMESSAGE(STATUS \"  With external SQLite3     = YES (License: Public Domain)\")\nELSE()\nMESSAGE(STATUS \"  With external SQLite3     = NO (SQLite3 not found, internal version is used for convenience)\")\nENDIF()\n\nIF(WITH_ORB_OCTREE)\nMESSAGE(STATUS \"  With ORB OcTree           = YES (License: GPLv3)\")\nELSE()\nMESSAGE(STATUS \"  With ORB OcTree           = NO (WITH_ORB_OCTREE=OFF)\")\nENDIF()\n\nIF(TORCH_FOUND)\nMESSAGE(STATUS \"  With SupertPoint          = YES (License: GPLv3) libtorch=${Torch_VERSION}\")\nELSEIF(NOT WITH_TORCH)\nMESSAGE(STATUS \"  With SupertPoint          = NO (WITH_TORCH=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With SupertPoint          = NO (libtorch not found)\")\nENDIF()\n\nIF(WITH_PYTHON AND Python3_FOUND)\nMESSAGE(STATUS \"  With Python${Python3_VERSION_MAJOR}.${Python3_VERSION_MINOR}            = YES (License: PSF)\")\nELSEIF(NOT WITH_PYTHON)\nMESSAGE(STATUS \"  With Python3              = NO (WITH_PYTHON=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Python3              = NO (python not found)\")\nENDIF()\n\nIF(WITH_MADGWICK)\nMESSAGE(STATUS \"  With Madgwick             = YES (License: GPL)\")\nELSE()\nMESSAGE(STATUS \"  With Madgwick             = NO (WITH_MADGWICK=OFF)\")\nENDIF()\n\nIF(FastCV_FOUND)\nMESSAGE(STATUS \"  With FastCV               = YES (License: Apache v2)\")\nELSEIF(NOT WITH_FASTCV)\nMESSAGE(STATUS \"  With FastCV               = NO (WITH_FASTCV=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With FastCV               = NO (FastCV not found)\")\nENDIF()\n\nIF(PDAL_FOUND)\nMESSAGE(STATUS \"  With PDAL ${PDAL_VERSION}           = YES (License: BSD)\")\nELSEIF(NOT WITH_PDAL)\nMESSAGE(STATUS \"  With PDAL                 = NO (WITH_PDAL=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With PDAL                 = NO (PDAL not found)\")\nENDIF()\n\nIF(libLAS_FOUND)\nMESSAGE(STATUS \"  With libLAS ${libLAS_VERSION}         = YES (License: BSD)\")\nELSEIF(NOT WITH_LIBLAS)\nMESSAGE(STATUS \"  With libLAS               = NO (WITH_LIBLAS=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With libLAS               = NO (libLAS not found)\")\nENDIF()\n\nIF(CudaSift_FOUND)\nMESSAGE(STATUS \"  With CudaSift             = YES (License: MIT)\")\nELSEIF(NOT WITH_CUDASIFT)\nMESSAGE(STATUS \"  With CudaSift             = NO (WITH_CUDASIFT=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With CudaSift             = NO (CudaSift not found, use https://github.com/matlabbe/CudaSift fork)\")\nENDIF()\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \" Solvers:\")\nIF(WITH_TORO)\nMESSAGE(STATUS \"  With TORO                 = YES (License: Creative Commons [Attribution-NonCommercial-ShareAlike])\")\nELSE()\nMESSAGE(STATUS \"  With TORO                 = NO (WITH_TORO=OFF)\")\nENDIF()\n\nIF(G2O_FOUND)\nMESSAGE(STATUS \" *With g2o ${g2o_VERSION}            = YES (License: BSD)\")\nELSEIF(NOT WITH_G2O)\nMESSAGE(STATUS \" *With g2o                  = NO (WITH_G2O=OFF)\")\nELSE()\nMESSAGE(STATUS \" *With g2o                  = NO (g2o not found)\")\nENDIF()\n\nIF(GTSAM_FOUND)\nMESSAGE(STATUS \" *With GTSAM ${GTSAM_VERSION}          = YES (License: BSD)\")\nELSEIF(NOT WITH_GTSAM)\nMESSAGE(STATUS \" *With GTSAM                = NO (WITH_GTSAM=OFF)\")\nELSE()\nMESSAGE(STATUS \" *With GTSAM                = NO (GTSAM not found)\")\nENDIF()\n\nIF(WITH_CERES AND CERES_FOUND)\nMESSAGE(STATUS \" *With Ceres ${Ceres_VERSION}         = YES (License: BSD)\")\nELSEIF(NOT WITH_CERES)\nMESSAGE(STATUS \" *With Ceres                = NO (WITH_CERES=OFF)\")\nELSE()\nMESSAGE(STATUS \" *With Ceres                = NO (Ceres not found)\")\nENDIF()\n\nIF(MRPT_FOUND)\nMESSAGE(STATUS \"  With MRPT ${MRPT_VERSION}           = YES (License: BSD)\")\nELSEIF(NOT WITH_MRPT)\nMESSAGE(STATUS \"  With MRPT                 = NO (WITH_MRPT=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With MRPT                 = NO (MRPT not found)\")\nENDIF()\n\nIF(G2O_FOUND OR GTSAM_FOUND)\nIF(WITH_VERTIGO)\nMESSAGE(STATUS \"  With VERTIGO              = YES (License: GPLv3)\")\nELSE()\nMESSAGE(STATUS \"  With VERTIGO              = NO (WITH_VERTIGO=OFF)\")\nENDIF()\nELSE()\nMESSAGE(STATUS \"  With VERTIGO              = NO (GTSAM or g2o required)\")\nENDIF()\n\nIF(cvsba_FOUND)\nMESSAGE(STATUS \"  With cvsba                = YES (License: GPLv2)\")\nELSEIF(NOT WITH_CVSBA)\nMESSAGE(STATUS \"  With cvsba                = NO (WITH_CVSBA=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With cvsba                = NO (cvsba not found)\")\nENDIF()\n\nIF(libpointmatcher_FOUND)\nMESSAGE(STATUS \" *With libpointmatcher ${libpointmatcher_VERSION} = YES (License: BSD)\")\nELSEIF(NOT WITH_POINTMATCHER)\nMESSAGE(STATUS \" *With libpointmatcher      = NO (WITH_POINTMATCHER=OFF)\")\nELSE()\nMESSAGE(STATUS \" *With libpointmatcher      = NO (libpointmatcher not found)\")\nENDIF()\n\nIF(CCCoreLib_FOUND)\nMESSAGE(STATUS \"  With CCCoreLib            = YES (License: GPLv2)\")\nELSEIF(NOT WITH_CCCORELIB)\nMESSAGE(STATUS \"  With CCCoreLib            = NO (WITH_CCCORELIB=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With CCCoreLib            = NO (CCCoreLib not found)\")\nENDIF()\n\nIF(Open3D_FOUND)\nMESSAGE(STATUS \"  With Open3D               = YES (License: MIT)\")\nELSEIF(NOT WITH_OPEN3D)\nMESSAGE(STATUS \"  With Open3D               = NO (WITH_OPEN3D=OFF)\")\nELSEIF(${CMAKE_VERSION} VERSION_LESS \"3.19.0\")\nMESSAGE(STATUS \"  With Open3D               = NO (Open3D requires CMake>=3.19)\")\nELSE()\nMESSAGE(STATUS \"  With Open3D               = NO (Open3D not found)\")\nENDIF()\n\nIF(opengv_FOUND AND WITH_OPENGV)\nMESSAGE(STATUS \"  With OpenGV ${opengv_VERSION}           = YES (License: BSD)\")\nELSEIF(NOT WITH_OPENGV)\nMESSAGE(STATUS \"  With OpenGV               = NO (WITH_OPENGV=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OpenGV               = NO (OpenGV not found)\")\nENDIF()\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \" Reconstruction Approaches:\")\nIF(octomap_FOUND)\nMESSAGE(STATUS \"  With OctoMap ${octomap_VERSION}        = YES (License: BSD)\")\nELSEIF(NOT WITH_OCTOMAP)\nMESSAGE(STATUS \"  With OctoMap              = NO (WITH_OCTOMAP=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OctoMap              = NO (octomap not found)\")\nENDIF()\n\nIF(grid_map_core_FOUND)\nMESSAGE(STATUS \"  With GridMap ${grid_map_core_VERSION}        = YES (License: BSD)\")\nELSEIF(NOT WITH_OCTOMAP)\nMESSAGE(STATUS \"  With GridMap              = NO (WITH_GRIDMAP=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With GridMap              = NO (grid_map_core not found)\")\nENDIF()\n\nIF(CPUTSDF_FOUND)\nMESSAGE(STATUS \"  With CPUTSDF              = YES (License: BSD)\")\nELSEIF(NOT WITH_CPUTSDF)\nMESSAGE(STATUS \"  With CPUTSDF              = NO (WITH_CPUTSDF=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With CPUTSDF              = NO (CPUTSDF not found)\")\nENDIF()\n\nIF(open_chisel_FOUND)\nMESSAGE(STATUS \"  With OpenChisel           = YES (License: ???)\")\nELSEIF(NOT WITH_OPENCHISEL)\nMESSAGE(STATUS \"  With OpenChisel           = NO (WITH_OPENCHISEL=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OpenChisel           = NO (open_chisel not found)\")\nENDIF()\n\nIF(AliceVision_FOUND)\nMESSAGE(STATUS \"  With AliceVision ${AliceVision_VERSION}    = YES (License: MPLv2)\")\nELSEIF(NOT WITH_ALICE_VISION)\nMESSAGE(STATUS \"  With AliceVision          = NO (WITH_ALICE_VISION=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With AliceVision          = NO (AliceVision not found)\")\nENDIF()\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \" Camera Drivers:\")\nIF(Freenect_FOUND)\nMESSAGE(STATUS \"  With Freenect             = YES (License: Apache v2 and/or GPLv2)\")\nELSEIF(NOT WITH_FREENECT)\nMESSAGE(STATUS \"  With Freenect             = NO (WITH_FREENECT=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Freenect             = NO (libfreenect not found)\")\nENDIF()\n\nIF(WITH_OPENNI AND OpenNI_FOUND)\nMESSAGE(STATUS \"  With OpenNI               = YES (License: Apache v2)\")\nELSEIF(NOT WITH_OPENNI)\nMESSAGE(STATUS \"  With OpenNI               = NO (WITH_OPENNI=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OpenNI               = NO (OpenNI not found)\")\nENDIF()\n\nIF(OpenNI2_FOUND)\nMESSAGE(STATUS \"  With OpenNI2              = YES (License: Apache v2)\")\nELSEIF(NOT WITH_OPENNI2)\nMESSAGE(STATUS \"  With OpenNI2              = NO (WITH_OPENNI2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OpenNI2              = NO (OpenNI2 not found)\")\nENDIF()\n\nIF(freenect2_FOUND)\nMESSAGE(STATUS \"  With Freenect2            = YES (License: Apache v2 and/or GPLv2)\")\nELSEIF(NOT WITH_FREENECT2)\nMESSAGE(STATUS \"  With Freenect2            = NO (WITH_FREENECT2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Freenect2            = NO (libfreenect2 not found)\")\nENDIF()\n\nIF(KinectSDK2_FOUND)\nMESSAGE(STATUS \"  With Kinect for Windows 2 = YES (License: Apache v2 and/or GPLv2)\")\nELSEIF(NOT WITH_K4W2)\nMESSAGE(STATUS \"  With Kinect for Windows 2 = NO (WITH_K4W2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Kinect for Windows 2 = NO (Kinect for Windows 2 SDK not found)\")\nENDIF()\n\nIF(k4a_FOUND)\nMESSAGE(STATUS \"  With Kinect for Azure     = YES (License: MIT)\")\nELSEIF(NOT WITH_K4A)\nMESSAGE(STATUS \"  With Kinect for Azure     = NO (WITH_K4A=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With Kinect for Azure     = NO (Kinect for Azure SDK not found)\")\nENDIF()\n\nIF(DC1394_FOUND)\nMESSAGE(STATUS \"  With dc1394               = YES (License: LGPL)\")\nELSEIF(NOT WITH_DC1394)\nMESSAGE(STATUS \"  With dc1394               = NO (WITH_DC1394=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With dc1394               = NO (dc1394 not found)\")\nENDIF()\n\nIF(FlyCapture2_FOUND)\nMESSAGE(STATUS \"  With FlyCapture2/Triclops = YES\")\nELSEIF(NOT WITH_FLYCAPTURE2)\nMESSAGE(STATUS \"  With FlyCapture2/Triclops = NO (WITH_FLYCAPTURE2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With FlyCapture2/Triclops = NO (Point Grey SDK not found)\")\nENDIF()\n\nIF(ZED_FOUND AND CUDA_FOUND)\nMESSAGE(STATUS \"  With ZED                  = YES\")\nELSEIF(NOT WITH_ZED)\nMESSAGE(STATUS \"  With ZED                  = NO (WITH_ZED=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With ZED                  = NO (ZED sdk and/or cuda not found)\")\nENDIF()\n\nIF(ZEDOC_FOUND)\nMESSAGE(STATUS \"  With ZEDOC                = YES\")\nELSEIF(NOT WITH_ZEDOC)\nMESSAGE(STATUS \"  With ZEDOC                = NO (WITH_ZEDOC=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With ZEDOC                = NO (ZED Open Capture not found)\")\nENDIF()\n\nIF(RealSense_FOUND)\nMESSAGE(STATUS \"  With RealSense            = YES (License: Apache-2)\")\nIF(RealSenseSlam_FOUND)\nMESSAGE(STATUS \"  With RealSenseSlam        = YES\")\nELSEIF(NOT WITH_REALSENSE)\nMESSAGE(STATUS \"  With RealSenseSlam        = NO (librealsense_slam not found)\")\nELSE()\nMESSAGE(STATUS \"  With RealSenseSlam        = NO (WITH_REALSENSE_SLAM=OFF)\")\nENDIF()\nELSEIF(NOT WITH_REALSENSE)\nMESSAGE(STATUS \"  With RealSense            = NO (WITH_REALSENSE=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With RealSense            = NO (librealsense not found)\")\nENDIF()\n\nIF(realsense2_FOUND)\nIF(WIN32)\nMESSAGE(STATUS \"  With RealSense2           = YES (License: Apache-2)\")\nELSE()\nMESSAGE(STATUS \"  With RealSense2 ${realsense2_VERSION}    = YES (License: Apache-2)\")\nENDIF()\nELSEIF(NOT WITH_REALSENSE2)\nMESSAGE(STATUS \"  With RealSense2           = NO (WITH_REALSENSE2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With RealSense2           = NO (librealsense2 not found)\")\nENDIF()\n\nIF(mynteye_FOUND)\nMESSAGE(STATUS \"  With MyntEyeS             = YES (License: Apache-2)\")\nELSEIF(NOT WITH_MYNTEYE)\nMESSAGE(STATUS \"  With MyntEyeS             = NO (WITH_MYNTEYE=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With MyntEyeS             = NO (mynteye s sdk not found)\")\nENDIF()\n\nIF(depthai_FOUND)\nMESSAGE(STATUS \"  With DepthAI ${depthai_VERSION}       = YES (License: MIT)\")\nELSEIF(NOT WITH_DEPTHAI)\nMESSAGE(STATUS \"  With DepthAI              = NO (WITH_DEPTHAI=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With DepthAI              = NO (depthai-core not found)\")\nENDIF()\n\nIF(xvsdk_FOUND)\nMESSAGE(STATUS \"  With XVisio SDK ${xvsdk_VERSION}     = YES\")\nELSEIF(NOT WITH_XVSDK)\nMESSAGE(STATUS \"  With XVisio SDK           = NO (WITH_XVSDK=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With XVisio SDK           = NO (xvsdk not found)\")\nENDIF()\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \" Odometry Approaches:\")\nIF(loam_velodyne_FOUND)\nMESSAGE(STATUS \"  With loam_velodyne        = YES (License: BSD)\")\nELSEIF(NOT WITH_LOAM)\nMESSAGE(STATUS \"  With loam_velodyne        = NO (WITH_LOAM=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With loam_velodyne        = NO (loam_velodyne not found)\")\nENDIF()\n\nIF(floam_FOUND)\nMESSAGE(STATUS \"  With floam                = YES (License: BSD)\")\nELSEIF(NOT WITH_FLOAM)\nMESSAGE(STATUS \"  With floam                = NO (WITH_FLOAM=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With floam                = NO (floam not found)\")\nENDIF()\n\nIF(libfovis_FOUND)\nMESSAGE(STATUS \"  With libfovis             = YES (License: GPLv2)\")\nELSEIF(NOT WITH_FOVIS)\nMESSAGE(STATUS \"  With libfovis             = NO (WITH_FOVIS=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With libfovis             = NO (libfovis not found)\")\nENDIF()\n\nIF(libviso2_FOUND)\nMESSAGE(STATUS \"  With libviso2             = YES (License: GPLv3)\")\nELSEIF(NOT WITH_VISO2)\nMESSAGE(STATUS \"  With libviso2             = NO (WITH_VISO2=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With libviso2             = NO (libviso2 not found)\")\nENDIF()\n\nIF(dvo_core_FOUND)\nMESSAGE(STATUS \"  With dvo_core             = YES (License: GPLv3)\")\nELSEIF(NOT WITH_DVO)\nMESSAGE(STATUS \"  With dvo_core             = NO (WITH_DVO=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With dvo_core             = NO (dvo_core not found)\")\nENDIF()\n\nIF(okvis_FOUND)\nMESSAGE(STATUS \"  With okvis                = YES (License: BSD)\")\nELSEIF(NOT WITH_OKVIS)\nMESSAGE(STATUS \"  With okvis                = NO (WITH_OKVIS=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With okvis                = NO (okvis not found)\")\nENDIF()\n\nIF(msckf_vio_FOUND)\nMESSAGE(STATUS \"  With msckf_vio            = YES (License: Penn Software License)\")\nELSEIF(NOT WITH_MSCKF_VIO)\nMESSAGE(STATUS \"  With msckf_vio            = NO (WITH_MSCKF_VIO=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With msckf_vio            = NO (msckf_vio not found)\")\nENDIF()\n\nIF(vins_FOUND)\nMESSAGE(STATUS \"  With VINS-Fusion          = YES (License: GPLv3)\")\nELSEIF(NOT WITH_VINS)\nMESSAGE(STATUS \"  With VINS-Fusion          = NO (WITH_VINS=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With VINS-Fusion          = NO (VINS-Fusion not found)\")\nENDIF()\n\nIF(ov_msckf_FOUND)\nMESSAGE(STATUS \"  With OpenVINS             = YES (License: GPLv3)\")\nELSEIF(NOT WITH_OPENVINS)\nMESSAGE(STATUS \"  With OpenVINS             = NO (WITH_OPENVINS=OFF)\")\nELSE()\nMESSAGE(STATUS \"  With OpenVINS             = NO (ov_msckf not found)\")\nENDIF()\n\nIF(ORB_SLAM_FOUND)\nMESSAGE(STATUS \"  With ORB_SLAM${ORB_SLAM_VERSION}            = YES (License: GPLv3)\")\nELSEIF(NOT WITH_ORB_SLAM)\nMESSAGE(STATUS \"  With ORB_SLAM             = NO (WITH_ORB_SLAM=OFF)\")\nELSEIF(G2O_FOUND)\nMESSAGE(STATUS \"  With ORB_SLAM             = NO (WITH_G2O should be OFF as ORB_SLAM uses its own g2o version)\")\nELSE()\nMESSAGE(STATUS \"  With ORB_SLAM             = NO (ORB_SLAM2 and ORB_SLAM3 not found, make sure environment variable ORB_SLAM_ROOT_DIR is set)\")\nENDIF()\n\nMESSAGE(STATUS \"Show all options with: cmake -LA | grep WITH_\")\nMESSAGE(STATUS \"--------------------------------------------\")\n\nIF(NOT GTSAM_FOUND AND NOT G2O_FOUND AND NOT WITH_TORO AND NOT WITH_CERES AND NOT CERES_FOUND)\nMESSAGE(SEND_ERROR \"No graph optimizer found! You should have at least one of these options:\n       g2o (https://github.com/RainerKuemmerle/g2o)\n       GTSAM (https://collab.cc.gatech.edu/borg/gtsam)\n       Ceres (http://ceres-solver.org)\n       set -DWITH_TORO=ON\")\nENDIF(NOT GTSAM_FOUND AND NOT G2O_FOUND AND NOT WITH_TORO AND NOT WITH_CERES AND NOT CERES_FOUND)\n\n# vim: set et ft=cmake fenc=utf-8 ff=unix sts=0 sw=2 ts=2 :\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.599609375,
          "content": "RTAB-Map - https://github.com/introlab/rtabmap\nCopyright (c) 2010-2021, Mathieu Labbe - IntRoLab - Universite de Sherbrooke, all rights reserved.\nCopyright (c) XXX, contributors, all rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holders nor the names of the \n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9619140625,
          "content": "rtabmap\n=======\n\n[![RTAB-Map Logo](https://raw.githubusercontent.com/introlab/rtabmap/master/guilib/src/images/RTAB-Map100.png)](http://introlab.github.io/rtabmap)\n\n[![Release][release-image]][releases]\n[![Downloads][downloads-image]][downloads]\n[![License][license-image]][license]\n\n[release-image]: https://img.shields.io/badge/release-0.21.4-green.svg?style=flat\n[releases]: https://github.com/introlab/rtabmap/releases\n\n[downloads-image]: https://img.shields.io/github/downloads/introlab/rtabmap/total?label=downloads\n[downloads]: https://github.com/introlab/rtabmap/releases\n\n[license-image]: https://img.shields.io/badge/license-BSD-green.svg?style=flat\n[license]: https://github.com/introlab/rtabmap/blob/master/LICENSE\n\nRTAB-Map library and standalone application.\n\n * For more information (e.g., papers, major updates), visit [RTAB-Map's home page](http://introlab.github.io/rtabmap).\n * For installation instructions and examples, visit [RTAB-Map's wiki](https://github.com/introlab/rtabmap/wiki).\n\nTo use RTAB-Map under ROS, visit the [rtabmap](http://wiki.ros.org/rtabmap) page on the ROS wiki.\n\n### Acknowledgements\nThis project is supported by [IntRoLab - Intelligent / Interactive / Integrated / Interdisciplinary Robot Lab](https://introlab.3it.usherbrooke.ca/), Sherbrooke, Québec, Canada.\n\n<a href=\"https://introlab.3it.usherbrooke.ca/\">\n<img src=\"https://github.com/introlab/16SoundsUSB/blob/master/images/IntRoLab.png\" alt=\"IntRoLab\" height=\"100\">\n</a>\n\n#### CI Latest\n\n  <table>\n    <tbody>\n        <tr>\n           <td>Linux</td>\n           <td><a href=\"https://github.com/introlab/rtabmap/actions/workflows/cmake.yml\"><img src=\"https://github.com/introlab/rtabmap/actions/workflows/cmake.yml/badge.svg\" alt=\"Build Status\"/> <br> <a href=\"https://github.com/introlab/rtabmap/actions/workflows/cmake-ros.yml\"><img src=\"https://github.com/introlab/rtabmap/actions/workflows/cmake-ros.yml/badge.svg\" alt=\"Build Status\"/> <br> <a href=\"https://github.com/introlab/rtabmap/actions/workflows/docker.yml\"><img src=\"https://github.com/introlab/rtabmap/actions/workflows/docker.yml/badge.svg\" alt=\"Build Status\"/>\n           </td>\n        </tr>\n        <tr>\n           <td>Windows</td>\n           <td><a href=\"https://ci.appveyor.com/project/matlabbe/rtabmap/branch/master\"><img src=\"https://ci.appveyor.com/api/projects/status/hr73xspix9oqa26h/branch/master?svg=true\" alt=\"Build Status\"/>\n           </td>\n        </tr>\n     </tbody>\n  </table>\n \n #### ROS Binaries\n \n `ros-$ROS_DISTRO-rtabmap`\n \n <table>\n    <tbody>\n        <tr>\n           <td rowspan=\"1\">ROS 1</td>\n            <td>Noetic</td>\n            <td><a href=\"http://build.ros.org/job/Nbin_ufv8_uFv8__rtabmap__ubuntu_focal_arm64__binary/\"><img src=\"http://build.ros.org/buildStatus/icon?job=Nbin_ufv8_uFv8__rtabmap__ubuntu_focal_arm64__binary\" alt=\"Build Status\"/></td>\n        </tr>\n        <tr>\n            <td rowspan=\"3\">ROS 2</td>\n            <td>Humble</td>\n            <td><a href=\"http://build.ros2.org/job/Hbin_uJ64__rtabmap__ubuntu_jammy_amd64__binary/\"><img src=\"http://build.ros2.org/buildStatus/icon?job=Hbin_uJ64__rtabmap__ubuntu_jammy_amd64__binary\" alt=\"Build Status\"/></td>\n        </tr>\n        <tr>\n            <td>Iron</td>\n            <td><a href=\"http://build.ros2.org/job/Ibin_uJ64__rtabmap__ubuntu_jammy_amd64__binary/\"><img src=\"http://build.ros2.org/buildStatus/icon?job=Ibin_uJ64__rtabmap__ubuntu_jammy_amd64__binary\" alt=\"Build Status\"/></td>\n        </tr>\n        <tr>\n            <td>Rolling</td>\n            <td><a href=\"http://build.ros2.org/job/Rbin_uJ64__rtabmap__ubuntu_jammy_amd64__binary/\"><img src=\"http://build.ros2.org/buildStatus/icon?job=Rbin_uJ64__rtabmap__ubuntu_jammy_amd64__binary\" alt=\"Build Status\"/></td>\n        </tr>\n        <tr>\n           <td>Docker</td>\n           <td>\n             <a href=\"https://hub.docker.com/r/introlab3it/rtabmap\">rtabmap</a>\n           </td>\n           <td><img src=\"https://img.shields.io/docker/pulls/introlab3it/rtabmap.svg?label=pulls\" alt=\"Docker Pulls\"/></td>\n        </tr>\n    </tbody>\n</table>\n"
        },
        {
          "name": "RTABMapConfig.cmake.in",
          "type": "blob",
          "size": 3.158203125,
          "content": "include(CMakeFindDependencyMacro)\n\n# Mandatory dependencies\nfind_dependency(OpenCV COMPONENTS core calib3d imgproc highgui stitching photo video OPTIONAL_COMPONENTS aruco objdetect xfeatures2d nonfree gpu cudafeatures2d)\n\nif(EXISTS \"${CMAKE_CURRENT_LIST_DIR}/RTABMap_guiTargets.cmake\")\n    find_dependency(PCL 1.7 COMPONENTS common io kdtree search surface filters registration sample_consensus segmentation visualization)\n    \n    if(@CONF_QT_VERSION@ EQUAL 6)\n        find_dependency(Qt6 COMPONENTS Widgets Core Gui OpenGL)\n    elseif(@CONF_QT_VERSION@ EQUAL 5)\n        find_dependency(Qt5 COMPONENTS Widgets Core Gui OpenGL)\n    else() # Qt4\n        find_dependency(Qt4 COMPONENTS QtCore QtGui)\n    endif()\n    set(RTABMap_QT_VERSION @CONF_QT_VERSION@)\nELSE()\n    find_dependency(PCL 1.7 COMPONENTS common io kdtree search surface filters registration sample_consensus segmentation)\nENDIF()\nset(RTABMap_DEFINITIONS ${PCL_DEFINITIONS})\nadd_definitions(${RTABMap_DEFINITIONS}) # To include -march=native if set\n\n# Optional dependencies\nIF(EXISTS \"${CMAKE_CURRENT_LIST_DIR}/@CONF_MODULES_DIR@\")\n    list(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/@CONF_MODULES_DIR@\")\nENDIF()\n\nIF(@CONF_WITH_REALSENSE2@)\n    IF(WIN32)\n        find_dependency(RealSense2)\n    ELSE()\n        find_dependency(realsense2)\n    ENDIF()\nENDIF()\n\nIF(@CONF_WITH_K4A@)\n    IF(WIN32)\n        find_dependency(K4A)\n    ELSE()\n        find_dependency(k4a)\n        find_dependency(k4arecord)\n    ENDIF()\nENDIF()\n\nIF(@CONF_WITH_DEPTH_AI@)\n  find_dependency(depthai 2.24)\nENDIF()\n\nIF(@CONF_WITH_XVSDK@)\n  find_dependency(xvsdk)\nENDIF()\n\nIF(@CONF_WITH_OCTOMAP@)\n  find_dependency(octomap)\nENDIF()\n\nIF(@CONF_WITH_PYTHON@)\n  find_dependency(Python3 COMPONENTS Interpreter Development NumPy)\nENDIF()\n\n# Provide those for backward compatibilities (e.g., catkin requires them to propagate dependencies)\nset(RTABMap_INCLUDE_DIRS \"\")\nset(RTABMap_LIBRARIES \"\")\nset(RTABMap_TARGETS \"\")\n\nset(_RTABMap_supported_components utilite core gui)\n\nforeach(_comp ${_RTABMap_supported_components})\n  if(EXISTS \"${CMAKE_CURRENT_LIST_DIR}/RTABMap_${_comp}Targets.cmake\")\n    include(\"${CMAKE_CURRENT_LIST_DIR}/RTABMap_${_comp}Targets.cmake\")\n    set(RTABMap_${_comp}_FOUND True)\n    set(RTABMap_TARGETS\n      ${RTABMap_TARGETS}\n      rtabmap::${_comp})\n    get_target_property(RTABMap_${_comp}_INCLUDE_DIRS rtabmap::${_comp} INTERFACE_INCLUDE_DIRECTORIES)\n    get_target_property(RTABMap_${_comp}_LIBRARIES rtabmap::${_comp} INTERFACE_LINK_LIBRARIES)\n    set(RTABMap_INCLUDE_DIRS \n      ${RTABMap_INCLUDE_DIRS}\n      ${RTABMap_${_comp}_INCLUDE_DIRS})\n    set(RTABMap_LIBRARIES \n      ${RTABMap_LIBRARIES}\n      rtabmap::${_comp})\n    if(RTABMap_${_comp}_LIBRARIES)\n      set(RTABMap_LIBRARIES \n        ${RTABMap_LIBRARIES}\n        ${RTABMap_${_comp}_LIBRARIES})\n    endif()\n  else()\n    set(RTABMap_${_comp}_FOUND False)\n  endif()\nendforeach()\n\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/RTABMapTargets.cmake\")\n\nforeach(_comp ${RTABMap_FIND_COMPONENTS})\n  if (NOT RTABMap_${_comp}_FOUND)\n    if(${RTABMap_FIND_REQUIRED_${_comp}})\n      set(RTABMap_FOUND False)\n      set(RTABMap_NOT_FOUND_MESSAGE \"Unsupported or not found required component: ${_comp}\")\n    endif()\n  endif()\nendforeach()\n"
        },
        {
          "name": "Version.h.in",
          "type": "blob",
          "size": 4.0380859375,
          "content": "/*\nCopyright (c) 2010-2014, Mathieu Labbe - IntRoLab - Universite de Sherbrooke\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the Universite de Sherbrooke nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL UNIVERTY DE SHERBROOKE BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n \n#ifndef VERSION_H_\n#define VERSION_H_\n\n// This is auto-generated!\n#define RTABMAP_VERSION \"@PROJECT_VERSION@\"\n\n#define RTABMAP_VERSION_MAJOR @PROJECT_VERSION_MAJOR@\n#define RTABMAP_VERSION_MINOR @PROJECT_VERSION_MINOR@\n#define RTABMAP_VERSION_PATCH @PROJECT_VERSION_PATCH@\n\n#define RTABMAP_VERSION_COMPARE(major, minor, patch)  (major>=@PROJECT_VERSION_MAJOR@ || (major==@PROJECT_VERSION_MAJOR@ && minor>=@PROJECT_VERSION_MINOR@) || (major==@PROJECT_VERSION_MAJOR@ && minor==@PROJECT_VERSION_MINOR@ && patch >=@PROJECT_VERSION_PATCH@))\n\n@NONFREE@#define RTABMAP_NONFREE\n@TORO@#define RTABMAP_TORO\n@G2O@#define RTABMAP_G2O\n@G2O_CPP_CONF@#define RTABMAP_G2O_CPP11 @G2O_CPP11@\n@GTSAM@#define RTABMAP_GTSAM\n@CERES@#define RTABMAP_CERES\n@MRPT@#define RTABMAP_MRPT\n@VERTIGO@#define RTABMAP_VERTIGO\n@OPENNI@#define RTABMAP_OPENNI\n@OPENNI2@#define RTABMAP_OPENNI2\n@FREENECT@#define RTABMAP_FREENECT\n@FREENECT2@#define RTABMAP_FREENECT2\n@K4W2@#define RTABMAP_K4W2\n@K4A@#define RTABMAP_K4A\n@CVSBA@#define RTABMAP_CVSBA\n@POINTMATCHER@#define RTABMAP_POINTMATCHER\n@CCCORELIB@#define RTABMAP_CCCORELIB\n@OPEN3D@#define RTABMAP_OPEN3D\n@FASTCV@#define RTABMAP_FASTCV\n@OPENGV@#define RTABMAP_OPENGV\n@PDAL@#define RTABMAP_PDAL\n@LIBLAS@#define RTABMAP_LIBLAS\n@CUDASIFT@#define RTABMAP_CUDASIFT\n@LOAM@#define RTABMAP_LOAM\n@FLOAM@#define RTABMAP_FLOAM\n@DC1394@#define RTABMAP_DC1394\n@FLYCAPTURE2@#define RTABMAP_FLYCAPTURE2\n@ZED@#define RTABMAP_ZED\n@ZEDOC@#define RTABMAP_ZEDOC\n@REALSENSE@#define RTABMAP_REALSENSE\n@REALSENSESLAM@#define RTABMAP_REALSENSE_SLAM\n@REALSENSE2@#define RTABMAP_REALSENSE2\n@MYNTEYE@#define RTABMAP_MYNTEYE\n@DEPTHAI@#define RTABMAP_DEPTHAI\n@XVSDK@#define RTABMAP_XVSDK\n@OCTOMAP@#define RTABMAP_OCTOMAP\n@GRIDMAP@#define RTABMAP_GRIDMAP\n@CPUTSDF@#define RTABMAP_CPUTSDF\n@ALICE_VISION@#define RTABMAP_ALICE_VISION\n@OPENCHISEL@#define RTABMAP_OPENCHISEL\n@FOVIS@#define RTABMAP_FOVIS\n@VISO2@#define RTABMAP_VISO2\n@DVO@#define RTABMAP_DVO\n@OKVIS@#define RTABMAP_OKVIS\n@MSCKF_VIO@#define RTABMAP_MSCKF_VIO\n@VINS@#define RTABMAP_VINS\n@OPENVINS@#define RTABMAP_OPENVINS\n@ORB_SLAM@#define RTABMAP_ORB_SLAM @ORB_SLAM_VERSION@\n@ORB_OCTREE@#define RTABMAP_ORB_OCTREE\n@TORCH@#define RTABMAP_TORCH\n@PYTHON@#define RTABMAP_PYTHON\n@MADGWICK@#define RTABMAP_MADGWICK\n\n#include <pcl/pcl_config.h>\n\n#if PCL_VERSION_COMPARE(>, 1, 11, 1)\n#include <pcl/types.h>\n#define RTABMAP_PCL_INDEX pcl::index_t\n#elif PCL_VERSION_COMPARE(>=, 1, 10, 0)\n#define RTABMAP_PCL_INDEX std::uint32_t\n#else\n#include <pcl/pcl_macros.h>\n#define RTABMAP_PCL_INDEX pcl::uint32_t\n#endif\n\n#endif /* VERSION_H_ */\n\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "archive",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake_modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake_uninstall.cmake.in",
          "type": "blob",
          "size": 1.1025390625,
          "content": "# -----------------------------------------------\n# File that provides \"make uninstall\" target\n#  We use the file 'install_manifest.txt'\n# -----------------------------------------------\nIF(NOT EXISTS \"@CMAKE_CURRENT_BINARY_DIR@/install_manifest.txt\")\n  MESSAGE(FATAL_ERROR \"Cannot find install manifest: \\\"@CMAKE_CURRENT_BINARY_DIR@/install_manifest.txt\\\"\")\nENDIF(NOT EXISTS \"@CMAKE_CURRENT_BINARY_DIR@/install_manifest.txt\")\n\nFILE(READ \"@CMAKE_CURRENT_BINARY_DIR@/install_manifest.txt\" files)\nSTRING(REGEX REPLACE \"\\n\" \";\" files \"${files}\")\nFOREACH(file ${files})\n  MESSAGE(STATUS \"Uninstalling \\\"$ENV{DESTDIR}${file}\\\"\")\n  IF(EXISTS \"$ENV{DESTDIR}${file}\")\n    EXEC_PROGRAM(\n      \"@CMAKE_COMMAND@\" ARGS \"-E remove \\\"$ENV{DESTDIR}${file}\\\"\"\n      OUTPUT_VARIABLE rm_out\n      RETURN_VALUE rm_retval\n      )\n    IF(NOT \"${rm_retval}\" STREQUAL 0)\n      MESSAGE(FATAL_ERROR \"Problem when removing \\\"$ENV{DESTDIR}${file}\\\"\")\n    ENDIF(NOT \"${rm_retval}\" STREQUAL 0)\n  ELSE(EXISTS \"$ENV{DESTDIR}${file}\")\n    MESSAGE(STATUS \"File \\\"$ENV{DESTDIR}${file}\\\" does not exist.\")\n  ENDIF(EXISTS \"$ENV{DESTDIR}${file}\")\nENDFOREACH(file)\n\n\n"
        },
        {
          "name": "corelib",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "guilib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mainpage.dox",
          "type": "blob",
          "size": 0.212890625,
          "content": "/**\n\n@mainpage\n\n@htmlinclude manifest.html\n\n@b rtabmap contains RTAB-Map libraries and standalone application.\nSee http://www.ros.org/wiki/rtabmap for documentation.\n\nCurrently this package has no public code API.\n\n*/\n"
        },
        {
          "name": "package.xml",
          "type": "blob",
          "size": 1.310546875,
          "content": "<?xml version=\"1.0\"?>\n<package format=\"2\">\n  <name>rtabmap</name>\n  <version>0.21.9</version>\n  <description>RTAB-Map's standalone library. RTAB-Map is a RGB-D SLAM approach with real-time constraints.</description>\n  <maintainer email=\"matlabbe@gmail.com\">Mathieu Labbe</maintainer>\n  <author>Mathieu Labbe</author>\n  <license>BSD</license>\n  <url type=\"website\">http://introlab.github.io/rtabmap</url>\n  <url type=\"bugtracker\">https://github.com/introlab/rtabmap/issues</url>\n  <url type=\"repository\">https://github.com/introlab/rtabmap</url>\n\n  <buildtool_depend>cmake</buildtool_depend>\n\n  <build_depend>proj</build_depend>\n  <depend>cv_bridge</depend>\n  <depend>libg2o</depend>\n  <depend>gtsam</depend>\n  <!-- <depend>libopenni2-dev</depend> --> <!-- not available on Jessie -->\n  <depend>libpcl-all-dev</depend> <!--  include libvtk-qt -->\n  <depend>libpointmatcher</depend> <!-- optional but recommended if lidar is used, also not available on 32 bits system, but rtabmap can be built without it -->\n  <!-- <depend>libproj-dev</depend> needed due to error in vtk6 (kinetic)-->\n  <depend>libsqlite3-dev</depend>\n  <depend>liboctomap-dev</depend>\n  <depend>grid_map_core</depend>\n  <depend>qt_gui_cpp</depend> <!-- libqt4-dev or libqt5-dev -->\n  <depend>zlib</depend>\n\n  <export>\n\t  <build_type>cmake</build_type>\n  </export>\n</package>\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utilite",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}