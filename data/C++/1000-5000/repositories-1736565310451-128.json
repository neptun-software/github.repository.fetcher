{
  "metadata": {
    "timestamp": 1736565310451,
    "page": 128,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OGRECave/ogre",
      "stars": 4074,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codedocs",
          "type": "blob",
          "size": 66.9052734375,
          "content": "# Doxyfile 1.8.3\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a hash (#) is considered a comment and will be ignored.\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all\n# text before the first occurrence of this tag. Doxygen uses libiconv (or the\n# iconv built into libc) for the transcoding. See\n# http://www.gnu.org/software/libiconv for the list of possible encodings.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or sequence of words) that should\n# identify the project. Note that if you do not use Doxywizard you need\n# to put quotes around the project name if it contains spaces.\n\nPROJECT_NAME           = OGRE\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         = master\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer\n# a quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"Object-Oriented Graphics Rendering Engine\"\n\n# With the PROJECT_LOGO tag one can specify an logo or icon that is\n# included in the documentation. The maximum height of the logo should not\n# exceed 55 pixels and the maximum width should not exceed 200 pixels.\n# Doxygen will copy the logo to the output directory.\n\nPROJECT_LOGO           = \"Docs/ogre-logo.png\"\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = \"build/api/\"\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create\n# 4096 sub-directories (in 2 levels) under the output directory of each output\n# format and will distribute the generated files over these directories.\n# Enabling this option can be useful when feeding doxygen a huge amount of\n# source files, where putting all generated files in the same directory would\n# otherwise cause performance problems for the file system.\n\nCREATE_SUBDIRS         = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,\n# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German,\n# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English\n# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian,\n# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak,\n# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend\n# the brief description of a member or function before the detailed description.\n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator\n# that is used to form the text in various listings. Each string\n# in this list, if found as the leading text of the brief description, will be\n# stripped from the text and the result after processing the whole list, is\n# used as the annotated text. Otherwise, the brief description is used as-is.\n# If left blank, the following values are used (\"$name\" is automatically\n# replaced with the name of the entity): \"The $name class\" \"The $name widget\"\n# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\"\n# \"represents\" \"a\" \"an\" \"the\"\n\nABBREVIATE_BRIEF       = \"The $name class     \" \\\n                         \"The $name widget     \" \\\n                         \"The $name file     \" \\\n                         is \\\n                         provides \\\n                         specifies \\\n                         contains \\\n                         represents \\\n                         a \\\n                         an \\\n                         the\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = YES\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag\n# can be used to strip a user-defined part of the path. Stripping is\n# only done if one of the specified strings matches the left-hand part of\n# the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the\n# path to strip. Note that you specify absolute paths here, but also\n# relative paths, which will be relative from the directory where doxygen is\n# started.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of\n# the path mentioned in the documentation of a class, which tells\n# the reader which header file to include in order to use a class.\n# If left blank only the name of the header file containing the class\n# definition is used. Otherwise one should specify the include paths that\n# are normally passed to the compiler using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful if your file system\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like regular Qt-style comments\n# (thus requiring an explicit @brief command for a brief description.)\n\nJAVADOC_AUTOBRIEF      = YES\n\n# If the QT_AUTOBRIEF tag is set to YES then Doxygen will\n# interpret the first line (until the first dot) of a Qt-style\n# comment as the brief description. If set to NO, the comments\n# will behave just like regular Qt-style comments (thus requiring\n# an explicit \\brief command for a brief description.)\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behaviour.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behaviour instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# re-implements.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce\n# a new page for each member. If set to NO, the documentation of a member will\n# be part of the file/class/namespace that contains it.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =  ffp_rtss_only=\"@note Only has an effect with the fixed-function pipeline or the @ref rtss\"\nALIASES               +=  shaderparam=\"@note When using shader programs, you have to explicitely forward this property in the @ref Program-Parameter-Specification\"\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding\n# \"class=itcl::class\" will allow you to use the command class in the\n# itcl::class meaning.\n\nTCL_SUBST              =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C\n# sources only. Doxygen will then generate output that is more tailored for C.\n# For instance, some of the names that are used will be different. The list\n# of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java\n# sources only. Doxygen will then generate output that is more tailored for\n# Java. For instance, namespaces will be presented as packages, qualified\n# scopes will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources only. Doxygen will then generate output that is more tailored for\n# Fortran.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for\n# VHDL.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension,\n# and language is one of the parsers supported by doxygen: IDL, Java,\n# Javascript, CSharp, C, C++, D, PHP, Objective-C, Python, Fortran, VHDL, C,\n# C++. For instance to make doxygen treat .inc files as Fortran files (default\n# is PHP), and .f files as C (default is Fortran), use: inc=Fortran f=C. Note\n# that for custom extensions you also need to set FILE_PATTERNS otherwise the\n# files are not read by doxygen.\n\nEXTENSION_MAPPING      = material=C++ compositor=C++ particle=C++ txt=Python glsl=C++\n\n# If MARKDOWN_SUPPORT is enabled (the default) then doxygen pre-processes all\n# comments according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you\n# can mix doxygen, HTML, and XML commands with Markdown formatting.\n# Disable only in case of backward compatibilities issues.\n\nMARKDOWN_SUPPORT       = YES\n\n# When enabled doxygen tries to link words that correspond to documented classes,\n# or namespaces to their corresponding documentation. Such a link can be\n# prevented in individual cases by by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should\n# set this tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.\n# func(std::string) {}). This also makes the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.\n# Doxygen will parse them like normal C++ but will assume all classes use public\n# instead of private inheritance when no explicit protection keyword is present.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES (the\n# default) will make doxygen replace the get and set methods by a property in\n# the documentation. This will only work if the methods are indeed getting or\n# setting a simple type. If this is not the case, or you want to show the\n# methods anyway, you should set this option to NO.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and\n# unions are shown inside the group in which they are included (e.g. using\n# @ingroup) instead of on a separate page (for HTML and Man pages) or\n# section (for LaTeX and RTF).\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and\n# unions with only public data fields will be shown inline in the documentation\n# of the scope in which they are defined (i.e. file, namespace, or group\n# documentation), provided this scope is documented. If set to NO (the default),\n# structs, classes, and unions are shown on a separate page (for HTML and Man\n# pages) or section (for LaTeX and RTF).\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum\n# is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically\n# be useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 1\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class\n# will be included in the documentation.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal\n# scope will be included in the documentation.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local\n# methods, which are defined in the implementation section but not in\n# the interface are included in the documentation.\n# If set to NO (the default) only methods in the interface are included.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base\n# name of the file that contains the anonymous namespace. By default\n# anonymous namespaces are hidden.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = YES\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = NO\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen\n# will list include files with double quotes in the documentation\n# rather than with sharp brackets.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = NO\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the\n# brief documentation of file, namespace and class members alphabetically\n# by member name. If set to NO (the default) the members will appear in\n# declaration order.\n\nSORT_BRIEF_DOCS        = YES\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen\n# will sort the (brief and detailed) documentation of class members so that\n# constructors and destructors are listed first. If set to NO (the default)\n# the constructors will appear in the respective orders defined by\n# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS.\n# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO\n# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.\n\nSORT_MEMBERS_CTORS_1ST = YES\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the\n# hierarchy of group names into alphabetical order. If set to NO (the default)\n# the group names will appear in their defined order.\n\nSORT_GROUP_NAMES       = YES\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be\n# sorted by fully-qualified names, including namespaces. If set to\n# NO (the default), the class list will be sorted only by class name,\n# not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the\n# alphabetical list.\n\nSORT_BY_SCOPE_NAME     = YES\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to\n# do proper type resolution of all parameters of a function it will reject a\n# match between the prototype and the implementation of a member function even\n# if there is only one candidate or it is obvious which candidate to choose\n# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen\n# will still accept a match between prototype and implementation in such cases.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = NO\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if section-label ... \\endif\n# and \\cond section-label ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or macro consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and macros in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page.\n# This will remove the Files entry from the Quick Index and from the\n# Folder Tree View (if specified). The default is YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the\n# Namespaces page.\n# This will remove the Namespaces entry from the Quick Index\n# and from the Folder Tree View (if specified). The default is YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command <command> <input-file>, where <command> is the value of\n# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file\n# provided by doxygen. Whatever the program writes to standard output\n# is used as the file version. See the manual for examples.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option.\n# You can optionally specify a file name after the option, if omitted\n# DoxygenLayout.xml will be used as the name of the layout file.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files\n# containing the references data. This must be a list of .bib files. The\n# .bib extension is automatically appended if omitted. Using this command\n# requires the bibtex tool to be installed. See also\n# http://en.wikipedia.org/wiki/BibTeX for more info. For LaTeX the style\n# of the bibliography can be controlled using LATEX_BIB_STYLE. To use this\n# feature you need bibtex and perl available in the search path. Do not use\n# file names with spaces, bibtex cannot handle them.\n\nCITE_BIB_FILES         = \"Docs/src/bibliography.bib\"\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. The default style is \"plain\". See\n# http://en.wikipedia.org/wiki/BibTeX for more info.\n\nLATEX_BIB_STYLE        = plain\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# The WARN_NO_PARAMDOC option can be enabled to get warnings for\n# functions that are documented, but have no documentation for their parameters\n# or return value. If set to NO (the default) doxygen will only warn about\n# wrong or incomplete parameter documentation, but not about the absence of\n# documentation.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text. Optionally the format may contain\n# $version, which will be replaced by the version of the file (if it could\n# be obtained via FILE_VERSION_FILTER)\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           = \"build/doxygen_warnings.log\"\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = OgreMain/include \\\n                            Components/Bites/include \\\n                            Components/MeshLodGenerator/include \\\n                            Components/Overlay/include \\\n                            Components/Paging/include \\\n                            Components/Property/include \\\n                            Components/RTShaderSystem/include \\\n                            Components/Terrain/include \\\n                            Components/Volume/include \\\n                            Components/Python/Numpy.py \\\n                            Components/Python/HighPy.py \\\n                            PlugIns \\\n                            PlugIns/PCZSceneManager/docs/readme.md \\\n                            PlugIns/DotScene/README.md \\\n                            RenderSystems \\\n                            Docs/src/apimainpage.md \\\n                            Docs/src/manual.md \\\n                            Docs/src/ogre-shadows.md \\\n                            Docs/src/scripts.md \\\n                            Docs/src/material-scripts.md \\\n                            Docs/src/high-level-programs.md \\\n                            Docs/src/particle-scripts.md \\\n                            Docs/src/hardware-buffers.md \\\n                            Docs/src/rtss.md \\\n                            Docs/src/resourcemanagement.md \\\n                            BuildingOgre.md \\\n                            Docs/src/tutorials/deferred.md \\\n                            Docs/src/tutorials/external_texture.md \\\n                            Docs/src/tutorials/manualmesh.md \\\n                            Docs/src/tutorials/meshlod.md \\\n                            Docs/src/tutorials/numpy.md \\\n                            Docs/src/tutorials/profiler.md \\\n                            Docs/src/tutorials/background-resource.md \\\n                            Docs/src/tutorials/reversed-depth.md \\\n                            Docs/src/tutorials/static-geometry.md \\\n                            Docs/src/tutorials/setup.md \\\n                            Docs/src/tutorials/trays.md \\\n                            Docs/src/tutorials/tutorials.md \\\n                            Docs/src/tutorials/volume.md \\\n                            Docs/src/tutorials/basictutorials/basictutorial1.md \\\n                            Docs/src/tutorials/basictutorials/basictutorial2.md \\\n                            Docs/src/tutorials/basictutorials/basictutorial3.md\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is\n# also the default input encoding. Doxygen uses libiconv (or the iconv built\n# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for\n# the list of possible encodings.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh\n# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py\n# *.f90 *.f *.for *.vhd *.vhdl\n\nFILE_PATTERNS          = Ogre*.h\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories. Note that the wildcards are matched\n# against the file with absolute path, so to exclude all test directories\n# for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = *UTF* \\\n                         */GLSupport/include/EGL/* \\\n                         */GLSupport/include/GLX/* \\\n                         */GLSupport/include/OSX/* \\\n                         */GLSupport/include/win32/* \\\n                         */include/Threading/* \\\n                         */OgreMemoryAllocatorConfig.h \\\n                         *EAGL* \\\n                         */RenderSystems/GLES/*\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n\nEXCLUDE_SYMBOLS        = Ogre::AllocatedObject Ogre::ParamCommand\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           = \".\"\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             = \"Docs/src/tutorials/\" \\\n                         \"Docs/src/images/\"\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output.\n# If FILTER_PATTERNS is specified, this tag will be\n# ignored.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis.\n# Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match.\n# The filters are a list of the form:\n# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further\n# info on how filters are used. If FILTER_PATTERNS is empty or if\n# non of the patterns match the file name, INPUT_FILTER is applied.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any)\n# and it is also possible to disable source filtering for a specific pattern\n# using *.ext= (so without naming a filter). This option only has effect when\n# FILTER_SOURCE_FILES is enabled.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MD_FILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page (index.html).\n# This can be useful if you have a project on for instance GitHub and want reuse\n# the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE =\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n# Note: To get rid of all source code in the generated output, make sure also\n# VERBATIM_HEADERS is set to NO.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C, C++ and Fortran comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES\n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES\n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n# link to the source code.\n# Otherwise they will link to the documentation.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n# If the USE_HTAGS tag is set to YES then the references to source code\n# will point to the HTML generated by the htags(1) tool instead of doxygen\n# built-in source browser. The htags tool is part of GNU's global source\n# tagging system (see http://www.gnu.org/software/global/global.html). You\n# will need version 4.8.6 or higher.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = YES\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then\n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns\n# in which this list will be split (can be a number in the range [1..20])\n\nCOLS_IN_ALPHA_INDEX    = 3\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header. Note that when using a custom header you are responsible\n#  for the proper inclusion of any scripts and style sheets that doxygen\n# needs, which is dependent on the configuration options used.\n# It is advised to generate a default header using \"doxygen -w html\n# header.html footer.html stylesheet.css YourConfigFile\" and then modify\n# that header. Note that the header is subject to change so you typically\n# have to redo this when upgrading to a newer version of doxygen or when\n# changing the value of configuration settings such as GENERATE_TREEVIEW!\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If left blank doxygen will\n# generate a default style sheet. Note that it is recommended to use\n# HTML_EXTRA_STYLESHEET instead of this one, as it is more robust and this\n# tag will in the future become obsolete.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify an additional\n# user-defined cascading style sheet that is included after the standard\n# style sheets created by doxygen. Using this option one can overrule\n# certain style aspects. This is preferred over using HTML_STYLESHEET\n# since it does not replace the standard style sheet and is therefor more\n# robust against future updates. Doxygen will copy the style sheet file to\n# the output directory.\n\nHTML_EXTRA_STYLESHEET  = \"Docs/doxygen-awesome.css\" \"Docs/ogre_style.css\"\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that\n# the files will be copied as-is; there are no commands or markers available.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output.\n# Doxygen will adjust the colors in the style sheet and background images\n# according to this color. Hue is specified as an angle on a colorwheel,\n# see http://en.wikipedia.org/wiki/Hue for more information.\n# For instance the value 0 represents red, 60 is yellow, 120 is green,\n# 180 is cyan, 240 is blue, 300 purple, and 360 is red again.\n# The allowed range is 0 to 359.\n\nHTML_COLORSTYLE_HUE    = 130\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of\n# the colors in the HTML output. For a value of 0 the output will use\n# grayscales only. A value of 255 will produce the most vivid colors.\n\nHTML_COLORSTYLE_SAT    = 40\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to\n# the luminance component of the colors in the HTML output. Values below\n# 100 gradually make the output lighter, whereas values above 100 make\n# the output darker. The value divided by 100 is the actual gamma applied,\n# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2,\n# and 100 does not change the gamma.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting\n# this to NO can help when comparing the output of multiple runs.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n\nHTML_DYNAMIC_SECTIONS  = YES\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of\n# entries shown in the various tree structured indices initially; the user\n# can expand and collapse entries dynamically later on. Doxygen will expand\n# the tree to such a level that at most the specified number of entries are\n# visible (unless a fully collapsed tree already exceeds this amount).\n# So setting the number of entries 1 will produce a full collapsed tree by\n# default. 0 is a special value representing an infinite number of entries\n# and will result in a full expanded tree by default.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs)\n# at top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it. Since the tabs have the same information as the\n# navigation tree you can set this option to NO if you already set\n# GENERATE_TREEVIEW to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information.\n# If the tag value is set to YES, a side panel will be generated\n# containing a tree-like index structure (just like the one that\n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser).\n# Windows users are probably better off using the HTML help feature.\n# Since the tree basically has the same information as the tab index you\n# could consider to set DISABLE_INDEX to NO when enabling this option.\n\nGENERATE_TREEVIEW      = YES\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values\n# (range [0,1..20]) that doxygen will group on one line in the generated HTML\n# documentation. Note that a value of 0 will completely suppress the enum\n# values from appearing in the overview section.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open\n# links to external symbols imported via tag files in a separate window.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of Latex formulas included\n# as images in the HTML documentation. The default is 10. Note that\n# when you change the font size after a successful doxygen run you need\n# to manually remove any form_*.png images from the HTML output directory\n# to force them to be regenerated.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are\n# not supported properly for IE 6.0, but are supported on all modern browsers.\n# Note that when changing this option you need to delete any form_*.png files\n# in the HTML output before the changes have effect.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax\n# (see http://www.mathjax.org) which uses client side Javascript for the\n# rendering instead of using prerendered bitmaps. Use this if you do not\n# have LaTeX installed or if you want to formulas look prettier in the HTML\n# output. When enabled you may also need to install MathJax separately and\n# configure the path to it using the MATHJAX_RELPATH option.\n\nUSE_MATHJAX            = YES\n\n# When MathJax is enabled you can set the default output format to be used for\n# thA MathJax output. Supported types are HTML-CSS, NativeMML (i.e. MathML) and\n# SVG. The default value is HTML-CSS, which is slower, but has the best\n# compatibility.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the\n# HTML output directory using the MATHJAX_RELPATH option. The destination\n# directory should contain the MathJax.js script. For instance, if the mathjax\n# directory is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to\n# the MathJax Content Delivery Network so you can quickly see the result without\n# installing MathJax.\n# However, it is strongly recommended to install a local\n# copy of MathJax from http://www.mathjax.org before deployment.\n\nMATHJAX_RELPATH        = https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or MathJax extension\n# names that should be enabled during MathJax rendering.\n\nMATHJAX_EXTENSIONS     =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box\n# for the HTML output. The underlying search engine uses javascript\n# and DHTML and should work on any modern browser. Note that when using\n# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets\n# (GENERATE_DOCSET) there is already a search function so this one should\n# typically be disabled. For large projects the javascript based search engine\n# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript.\n# There are two flavours of web server based search depending on the\n# EXTERNAL_SEARCH setting. When disabled, doxygen will generate a PHP script for\n# searching and an index file used by the script. When EXTERNAL_SEARCH is\n# enabled the indexing and searching needs to be provided by external tools.\n# See the manual for details.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain\n# the search results. Doxygen ships with an example indexer (doxyindexer) and\n# search engine (doxysearch.cgi) which are based on the open source search engine\n# library Xapian. See the manual for configuration details.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will returned the search results when EXTERNAL_SEARCH is enabled.\n# Doxygen ships with an example search engine (doxysearch) which is based on\n# the open source search engine library Xapian. See the manual for configuration\n# details.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through other\n# doxygen projects that are not otherwise connected via tags files, but are\n# all added to the same search index. Each project needs to have a tag file set\n# via GENERATE_TAGFILE. The search mapping then maps the name of the tag file\n# to a relative location where the documentation can be found,\n# similar to the\n# TAGFILES option but without actually processing the tag file.\n# The format is: EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_DEFINED tags.\n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# pointed to by INCLUDE_PATH will be searched when a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed. To prevent a macro definition from being\n# undefined via #undef or recursively expanded use the := operator\n# instead of the = operator.\n\nPREDEFINED             = OGRE_MEMORY_ALLOCATOR=1 \\\n                         RTSHADER_SYSTEM_BUILD_CORE_SHADERS \\\n                         RTSHADER_SYSTEM_BUILD_EXT_SHADERS \\\n                         OGRE_PLATFORM=10 \\\n                         OGRE_DEPRECATED= \\\n                         OGRE_NODISCARD= \\\n                         OGRE_NORETURN= \\\n                         DECL_MALLOC= \\\n                         OGRE_FORCE_INLINE=inline \\\n                         OGRE_NODELESS_POSITIONING= \\\n                         MANAGED_RESOURCE= \\\n                         OGRE_AUTO_MUTEX= \\\n                         OGRE_FORMAT_PRINTF=;// \\\n                         OGRE_RESOURCE_GROUP_INIT==RGN_DEFAULT \\\n                         protected=private\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition that\n# overrules the definition found in the source code.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all references to function-like macros\n# that are alone on a line, have an all uppercase name, and do not end with a\n# semicolon, because these will confuse the parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles. For each\n# tag file the location of the external documentation should be added. The\n# format of a tag file without this location is as follows:\n#\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths\n# or URLs. Note that each tag file must have a unique name (where the name does\n# NOT include the path). If a tag file is not located in the directory in which\n# doxygen is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       = \"build/api/Ogre.tag\"\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will\n# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base\n# or super classes. Setting the tag to NO turns the diagrams off. Note that\n# this option also works with HAVE_DOT disabled, but it is recommended to\n# install and use dot, since it yields more powerful graphs.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see\n# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = YES\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is\n# allowed to run in parallel. When set to 0 (the default) doxygen will\n# base this on the number of processors available in the system. You can set it\n# explicitly to a value larger than 0 to get control over the balance\n# between CPU load and processing speed.\n\nDOT_NUM_THREADS        = 0\n\n# By default doxygen will use the Helvetica font for all dot files that\n# doxygen generates. When you want a differently looking font you can specify\n# the font name using DOT_FONTNAME. You need to make sure dot is able to find\n# the font, which can be done by putting it in a standard location or by setting\n# the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the\n# directory containing the font.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.\n# The default size is 10pt.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the Helvetica font.\n# If you specify a different font using DOT_FONTNAME you can use DOT_FONTPATH to\n# set the path where dot can find it.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = NO\n\n# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for groups, showing the direct groups dependencies\n\nGROUP_GRAPHS           = NO\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside\n# the class node. If there are many fields or methods and many nodes the\n# graph may become too big to be useful. The UML_LIMIT_NUM_FIELDS\n# threshold limits the number of items for each type to make the size more\n# managable. Set this to 0 for no limit. Note that the threshold may be\n# exceeded by 50% before the limit is enforced.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = NO\n\n# If the CALL_GRAPH and HAVE_DOT options are set to YES then\n# doxygen will generate a call dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable call graphs\n# for selected functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then\n# doxygen will generate a caller dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable caller\n# graphs for selected functions only using the \\callergraph command.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will generate a graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH and HAVE_DOT tags are set to YES\n# then doxygen will show the dependencies a directory has on other directories\n# in a graphical way. The dependency relations are determined by the #include\n# relations between the files in the directories.\n\nDIRECTORY_GRAPH        = NO\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are svg, png, jpg, or gif.\n# If left blank png will be used. If you choose svg you need to set\n# HTML_FILE_EXTENSION to xhtml in order to make the SVG files\n# visible in IE 9+ (other browsers do not have this requirement).\n\nDOT_IMAGE_FORMAT       = svg\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n# Note that this requires a modern browser other than Internet Explorer.\n# Tested and working are Firefox, Chrome, Safari, and Opera. For IE 9+ you\n# need to set HTML_FILE_EXTENSION to xhtml in order to make the SVG files\n# visible. Older versions of IE do not have SVG support.\n\nINTERACTIVE_SVG        = NO\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n\nDOT_PATH               = /usr/bin\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the\n# \\mscfile command).\n\nMSCFILE_DIRS           =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of\n# nodes that will be shown in the graph. If the number of nodes in a graph\n# becomes larger than this value, doxygen will truncate the graph, which is\n# visualized by representing a node as a red box. Note that doxygen if the\n# number of direct children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note\n# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes\n# that lay further from the root node will be omitted. Note that setting this\n# option to 1 or 2 may greatly reduce the computation time needed for large\n# code bases. Also note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n\nMAX_DOT_GRAPH_DEPTH    = 4\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not\n# seem to support this out of the box. Warning: Depending on the platform used,\n# enabling this option may lead to badly anti-aliased labels on the edges of\n# a graph (i.e. they become hard to read).\n\nDOT_TRANSPARENT        = YES\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10)\n# support this, this feature is disabled by default.\n\nDOT_MULTI_TARGETS      = YES\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# Ignore CLion project directory and iml files\n.idea/\n*.iml\n*.obj\n*.ipch\n*.pch\n# Ignore build directories\ncmake-build-*/\n/build/\n/installed/\n/android-build/\n/embuild/\n/eminstall/\n/mingw/\n/.cache/\n/_skbuild/\n\n# Meta data of macOS's Finder.app\n.DS_Store\n\n/Samples/Media/RTShaderLib/cache/\n\n# Ignore vim files\n*.swp\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 8.6943359375,
          "content": "AUTHORS\n=======\nOGRE was originally created by Steve Streeting (sinbad), but many other developers have contributed to the project over the years.\n\nIf you feel your name was forgotten in this list, please submit a pull request.\n\nThe full list of contributors is:\n\nJames O'Sullivan ( _mental_ )\nJoilnen Batista Leite ( Joilnen )\nHarald Achitz ( a4z )\nChris Kohnert ( aeyr )\nAhmed Ismaiel Zakaria ( ahmedismaiel )\nAllan Jaenicke\nLaboureur Frederic ( alphasnd )\nAmit Mathew ( amitmathew )\nAndrew Patzwald ( amp44x )\nAndrew Fenn ( Zeaus )\nAndy Miller ( andy_miller )\nAndrew Zabolotny ( andyz )\nFerdinand Joseph Fernandez ( anomalous underdog )\nAntony Suter ( Bontakun / sutera7606 )\nArtem Baguinski ( artm )\nZdeno Miklas ( ashid )\nAssaf Raman\nJason Assalita ( avengre )\nManuel Alvarez ( bananiafr )\nWilliam V. Baxter III  ( baxissimo )\nBruno Crivelari Sanches ( bcsanchez )\nArgiris Kirtzidis ( Bekas )\nBrian Johnstone ( bjj1478 / Praetor )\nAvery Fay ( btmorex )\nIvica Aracic ( bytelord )\nTim Kelsey ( c4llidus )\nHolger Frydrych ( cabalistic )\nAdrian Cearnau ( cearny )\nAndres Mejia ( ceros )\nChetan Deshpande ( ChetanDeshpande )\nChristian Southgate ( chrid )\nChristian Boutin ( christianboutin )\nChristian Lindequist Larsen ( dword )\nLuc Claustres ( claustre )\nHeikki Törmälä ( cmayhem )\nMark Thomas ( Codetick / TMT )\nGreg Junker ( Xavier / cos_xavier )\nFrançois Bruneau ( cottonbelly )\nJean-Baptiste Griffo ( crashy )\nPaul Turner ( Crayzed / crazyeddie )\nPaolo Gavocanov ( cthno1 )\nPhilippe Culet ( cuinl )\nDaniel Andersson ( d_mon )\nDamien Gerhardy ( gerds )\nDaniel Horn  ( danielrh )\nDavid Batzle (davidcb)\nDavid Durant ( ddurant )\nDennis Verbeek ( dennis / https://github.com/dennizzzz )\nDoraisamy Ganeshkumar ( dganesh )\nDavid Guy ( dguy )\nDmitry Yunchik ( DimA )\nDoug Wolanick\nFred Guignot ( dropfred )\nEtienne Mallard ( earthquakeproof )\nEthan Tira-Thompson ( ejtttje )\nErik Karulf ( ekarulf )\nEric Tulla ( Emtulla / ChocoboInbreeder )\nEric Cha ( Xenopi / Chaster )\nErik Hjortsberg ( erikhjortsberg )\nErik Schack Andersen ( eschack )\nEvgeni Popov ( evpopov )\nEvgeny A. Marchenko ( mentor / evgeni_m )\nAlexander Folomeyv ( falek_sf )\nWael El Oraiby  ( farakon )\nChris Robinson ( fatpwnage )\nFelix Bellaby ( felix_bellaby )\nFrancesco Giordana ( fgiordana )\nMatthew Reid ( foxbat )\nJiang Anxiong Jeffrey ( gamedboy )\nJianHua Xie ( genva )\nGaylord Foureau ( gforeau )\nGabriel Gambetta ( ggambett )\nRobert Noll ( ghoulsblade )\nAndrzej Giniewicz ( giniu )\nGuillaume Laforte ( glaforte )\nGonen Beneish ( gonenb )\nJohn Van Vliet ( granite )\nGraham Scott Rhodes ( grhodes )\nMatthias Fink ( gs2x )\nGuillaume Buisson ( gustav )\nAndrzej Haczewski ( guyver6 )\nDaniel Wickert ( haffax )\nDaniel Horn ( hellcatv )\nDavid Longacre ( hexidave )\nHidehiro Kuroda ( jagoon )\nBrian Hudson ( hudson_b )\nQu shiwei ( iloseall )\nSean Lindskog ( Jabberwocky )\nJames D. Trotter ( jamesdt )\nJose Antonio Milan Perez ( jamilan / spoke )\nJonathan Anderson ( janders )\nJason K. O'Brien\nJames Covington ( jaymzjc )\nJay Sprenkle\nJesse Rusak ( jder )\nJames Le Cuirot ( jerseychewi / Chewi )\nJohn Bartholomew ( johnb213 )\nJorrit de Vries ( jorrit5477 )\nJosh Flowers\nJules Robichaud Gagnon ( jules_robichaud )\nJuozas Gaigalas ( juozasg )\nJustin Walsh ( JustinWalsh )\nJon Watte ( jwatte )\nKai-Peter Bäckman ( kai-peter )\nKai Blin\nAndreas Olov Stenius ( kaos_explosive )\nMatt Williams ( kardoon )\nKevin J Bluck ( kbluck )\nJesús Alonso Abad ( kencho )\nUrs Hanselmann ( kickin_bear / noisydev )\nJoël Lamotte ( Klaim )\nKoen Kooi\nPaul Cheyrou-lagrèze ( tuan kuranes )\nLakin Wecker\nChris McGuirk ( leedgitar )\nLee Sandberg ( leesandberg )\nPang Lih-Hern ( Lf3T-Hn4D )\nLeon Glass ( lglass )\nAndres Carrera ( lioric )\nStefan Josua Walter ( Llarlen )\nLois Desplat ( Lodes )\nChristopher Bowen ( lostera )\nMathieu Le Ber ( m_leber )\nMartin Correll ( mac99 )\nKonrad Koch ( mad366 )\nManuel García Rodríguez ( manuel_gr )\nMattan Furst ( mattan_f )\nAlex Man ( mcspy0312 )\nMika Halttunen ( mh )\nMichaël Broutin ( mikachu59 )\nMichael Dilger ( mikedilger )\nNikita Buida ( mj / mj_sf )\nJacobus Izak Van Aarde Krynauw ( nanocell )\nNathan M. Hanish\nNathan Walker\nDerek Nedelman ( nedelman )\nJeff Doyle ( nfz )\nJason Wagner ( nialscorva )\nNicholas Molton ( nick_molton )\nNils Schneider\nNir Hasson\nNoam Gat ( Noman )\nVincent Vivanloc ( nop / nopnopzero )\nPau Novau Lebrato ( novaumas )\nAmit Bleiweiss ( omekinteractive )\nMichael Williamson ( ozwally )\nPaul Fenwick ( paulwf )\nPavel Vorobealov ( pavor )\nHamilton Chong ( peridexion )\nPeter Newman ( PeterNewman / wizarth )\nPierre Morcello ( pierre_m / madmarx )\nPhillip J. Castaneda ( pjcast )\nPhil McLachlan\nPeter Miller ( pmiller )\nCiaran Gultnieks ( poisoned )\nSascha Bosecker ( poldi-49152 )\nPoojan Prabhu ( poojan_prabhu / jimmemalone / psquare)\nQuentin Froemke ( qfroemke / qtf )\nHenry Goffin ( qsilver )\nStéphane Bessette ( rackle )\nMatt Rice ( ratmice )\nBora Utku ( Red5_StandingBy )\nMichael Reimpell ( reimpell )\nRenato Araujo Oliveira Filho ( renatofilho )\nRune Myrland ( rmy )\nRobin Bourianes ( robin_onesia / bamboo2 )\nRoyce Eugene Mitchell III ( royce3 )\nJohn K. Grant ( rufeo / cryfer )\nSamuel Toulouse ( samlepirate )\nSylvain Cunzi ( scunzi )\nSebastien Frippiat ( sebarnolds )\nSean Kennedy ( serrux )\nAntoine Diamant-Berger ( shadow007 )\nIngo Heßling ( shadowcode1980 )\nJon L. Griffeth ( silent3 )\nSteve Streeting ( sinbad )\nShane Parker ( sirshane )\nMartin Schmitz ( skiri-ki )\nSteven S. Klug ( sklug )\nRonald Hall ( Sobek47 )\nDaniel Svensson ( soldans )\nMartin Sherburn ( spacedude )\nChris Hunt ( spacejim / Captain_Deathbeard )\nDave Cunningham ( sparksparkspark )\nHenry van Merode ( spookyboo )\nMadhu Srinivasan ( srinivma )\nSatyajit Sarangi ( ssarangi )\nStefan Geiger\nStewart Heckenberg ( youdaman )\nWolfgang Steiner ( stoneCold )\nBenjamin Kinsey ( stormsong_lead )\nAndreas Podgurski ( SunSailor / SunSailor75 )\nPeter 'piet' Loest ( superpiet )\nMats Leksell ( sxw )\nThomas Muldowney ( temas )\nTimothy A. Graupmann ( tgraupmann )\nBeau Hardy ( theotherguy )\nThorsten Lange ( Injector )\nTibor Tihon\nThomas Hill ( tomlikestorock )\nFilip Volejnik ( volca )\nVan Stokes, Jr. ( Van )\nVille Heiskanen ( vzheiska )\nAneurin Price ( waywocket )\nWesley Howe ( weshowe )\nLucas Westine ( westine )\nWill Thimbleby\nLeon Williams / EFI\nBalázs Hajdics ( wolverine___ )\nWladimir J. van der Laan ( wumpus )\nDaniel Jungmann ( xaphier )\nEric Shorkey ( zeroskill )\nZaid Abdulla ( zkam83 )\nMark Ivey ( zovirl )\nFabrizio Nunnari (fnunnari)\nJonathon Bijl (jonim8tor)\nZi Ye (omniter)\nThomas Fischer (tdev / rorthomas)\nTill Eisele (till)\nCrestez Dan Leonard (cdleonard)\nDavid Rogers (davidrogers4 / sweetjimmy / masterfalcon)\nTommaso Checchi (tommo89 / _tommo_)\nYevgen Golushkov (eugene_gff)\nShanti Gaudreault (sgaudreault)\nZebedee Mason (zmason)\nRemo Hertig (nairboon)\nRoman Senuta (tony-bit)\nOliver Iking (oiking)\nStephan Starke (knox31085)\nEnrico Zschemisch (enricozz)\nMike Jurka (mikejurka)\nJoost van Dongen (Oogst)\nBenjamin Rauscher (realmforge)\nMurat Sari (wolfmanfx)\nK.L. X (k_l_) (contributor has no latin character name)\nGoran Sterjov (gozza/gozza11)\nMatias N. Goldberg (dark_sylinc)\nDavid Mitchell (moohasha)\nThomas Maniero (tmaniero/gersen)\nTang Yu (ershu)\nDirk Arnholt (darnholt / Jabarsa)\nPawel Stopinski (stoper)\nPaul Tanganeli (tango3237)\nJean-Dominique Gascuel (gascuel)\nRobrecht Noens (derobbe)\nFelix Kerger (mirlix)\nMorris Samuel (booleanlogic)\nMateusz Kotiuk (kotek)\nMoamen El-Tahwagi (moagames)\nIvan Efimov (betauser)\nYashin \tEvgeny (johny5)\nChristophe Nenning (kex/kex347)\nFeiyun Wang (feiyunw)\nDavid Cunningham (sparkprime)\nTam Bellini (skaiware)\nJames R. Evans (jrevans/fugalumpto)\nMichael Kapelko (kornerr)\nAshley McConnell (ashmcconnell)\nJonathan Liu (net147)\nSam Hocevar (sammy/samhocevar)\nFabian Landau (x3n/xen-fl)\nWei Xu Kai (yesbaba)\nEddie D Bartley (bellyfish/fish)\nAnssi Kullervo Kivinen (reptor/tone-gun)\nJosh Faust (jfaust/jfaust-wg)\nZhang Heng (ZHing)\nGlenn Ramsey (glennr)\nDario Ahdoot (diarrhio)\nStephane Kyles (cose)\nJim Buck (jbuck, jimbuck)\nEttore Pancini (ekt)\nMicheal Larkin (micheallarkin)\nAaron J Gardner (nmodprime)\nFlorian George (floriangeorge)\nArnaud Moura (AMoura)\nPhilip Allgaier (spacegaier)\nJean-Franois Verdon (Nodrev)\nBastian Kcher (zerokompex/zero)\nRiley Adams (Praetorian, RileyA)\nJohn Soklaski (mysterycoder)\nEvandro Millian Paulino\nNick Anderson (Arkiruthis/CaptainFlaps)\nFathi Boudra (fboudra)\nDaniel Brunton (dbrunton)\nSimon Wallner (simonw)\nVadim Sergeev (m2codegen)\nAndrew Mann (Rhad)\nAntti Salonen (ajsalonen)\nEdoardo Molinatti (edomoli/edoardo)\nJeremy Altavilla (fedyakin)\nPeter Krattze (vouti / douvitoui)\nMartin Dub (arcanemartz)\nJan Drabner (TheSHEEEP)\nPavel Rojtberg (paroj)\nJannik Heller (scrawl)\nPeter Szücs (sajty)\nOwen Shepherd (oshepherd)\nPhilip Lehmann-Böhm (philiplb)\nNikolay Kasyanov (corristo)\nJesse Johnson (holocronweaver)\nTimothee Besset (ttimo)\nHarald Reingruber (harald_reingruber_)\n\nMicrosoft Open Technologies, Inc.\n\n"
        },
        {
          "name": "BuildingOgre.md",
          "type": "blob",
          "size": 12.73046875,
          "content": "# Guide to building OGRE {#building-ogre}\n\n@tableofcontents\n\nOgre uses [CMake](https://cmake.org/) as its build system on all supported platforms.\nThis guide will explain to you how to use CMake to build Ogre from source. You need a CMake version >= 3.10.\n\nWhat is CMake?\n-------------------\n\nCMake is a cross-platform build system - or perhaps more accurately a\nbuild configurator. It is a program which, from a set of CMake scripts,\ncreates a native build system for your platform that allows you to\nbuild Ogre.\nThe build process is configurable via CMake. Ogre provides several\noptions which you can use to customise your build.\n\nPreparing the build environment\n------------------------------------\n\nYou should now create a build directory for Ogre somewhere outside\nOgre's sources. This is the directory where CMake will create the\nbuild system for your chosen platform and compiler, and this is also\nwhere the Ogre libraries will be compiled. This way, the Ogre source\ndir stays clean, and you can have multiple build directories (e.g. for Android and for Linux) all\nworking from the same Ogre source.\n\nGetting dependencies\n--------------------\n\nBy default ogre will build the recommended dependencies automatically when you run cmake configure the first time.\nOgre will install the dependencies into the subfolder `Dependencies` in the build dir by default. You can configure it by setting `OGRE_DEPENDENCIES_DIR` in cmake.\n\n@note As the dependencies are built during the *configure* stage of CMake, you must specify the desired `CMAKE_BUILD_TYPE` via command-line. Changing the value in the CMake GUI will have no effect.\n\nIf you would rather use system wide libraries set `OGRE_BUILD_DEPENDENCIES=OFF`.\nOn windows, you would then point `OGRE_DEPENDENCIES_DIR` to a common dependencies folder for all of your middleware projects. Inside this directory you must have the subdirectories bin, lib and include\nwhere you place .dll, .lib and header files of the dependencies, respectively.\n\nFor manually building the dependencies, please refer to the list below and get a source package from the website, then build it according to its documentation.\n\n### Linux\n\nOn linux you additionally need the following system headers to build the GL, GL3+, GLES2 & Vulkan RenderSystems:\n\n@par Ubuntu\n\n```py\nsudo apt-get install libgles2-mesa-dev libvulkan-dev glslang-dev\n# with OGRE_USE_WAYLAND=OFF\nsudo apt-get install libxrandr-dev\n# with OGRE_USE_WAYLAND=ON\nsudo apt-get install libwayland-dev libwayland-egl1 libegl-dev\n\n# Optional dependencies\nsudo apt-get install libsdl2-dev doxygen\n```\n\n@par Fedora\n\n```py\nsudo dnf install mesa-libGL-devel mesa-libEGL-devel mesa-vulkan-devel glslang-devel\n# with OGRE_USE_WAYLAND=OFF\nsudo dnf install libXrandr-devel\n# with OGRE_USE_WAYLAND=ON\nsudo dnf install pkgconfig wayland-devel egl-wayland\n\n# Optional dependencies\nsudo dnf install SDL2-devel doxygen\n```\n\nThe optional dependencies will enable input handling and allow building the documentation.\n\n### Recommended dependencies\n\n* pugixml: https://github.com/zeux/pugixml\n* SDL: https://www.libsdl.org/\n* zlib: http://www.zlib.net\n* freetype: http://www.freetype.org\n* googletest: https://github.com/google/googletest\n\n### Optional dependencies\n\n* DirectX SDK: http://msdn.microsoft.com/en-us/directx/\n* Vulkan SDK: https://vulkan.lunarg.com/\n* Doxygen: http://doxygen.org\n* Remotery: https://github.com/Celtoys/Remotery\n* SWIG: http://www.swig.org/\n* %Assimp: https://www.assimp.org/\n* Wayland: https://wayland.freedesktop.org/\n* Rust: https://www.rust-lang.org/\n* Bullet: https://pybullet.org/wordpress/\n\n### Deprecated dependencies\n\n* FreeImage: http://freeimage.sourceforge.net\n* Cg: http://developer.nvidia.com/object/cg_toolkit.html\n* OpenEXR: http://www.openexr.com\n\nRunning CMake {#running-cmake}\n-------------\n\nNow start the program cmake-gui by either typing the name in a console\nor selecting it from the start menu. In the field *Where is the source\ncode* enter the path to the Ogre source directory (the directory which\ncontains this file). In the field *Where to build the binaries* enter\nthe path to the build directory you created.\nHit *Configure*. A dialogue will appear asking you to select a generator.\n\nCheck the [CMake documentation](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html) for details on which one is appropriate for your platform and compiler.\n@note on OSX, you must to use the Xcode generator to get a proper SampleBrowser .app bundle.\n\nClick *Finish*. CMake will now gather some information about your\nbuild environment and try to locate the dependencies. It will then show\na list of build options. You can adjust the settings to your liking;\n- unchecking any of the `OGRE_BUILD_XXX` options will disable that\nparticular component/ plugin from being built\n- `OGRE_CONFIG_XXX` on the other hand allows you to configure Core features e.g. threading or zip file support.\n- `OGRE_CONFIG_NODE_INHERIT_TRANSFORM` enables shearing and non-uniform scaling for Ogre::SceneNode. This requires slightly more storage and computation time.\n- `OGRE_CONFIG_ENABLE_MESHLOD` If enabled, LOD levels from *.mesh files are used to reduce triangle count. If disabled, they are skipped at loading. Reducing submesh size and entity size.\n- `OGRE_PROFILING` add profiling instrumentation the ogre library.\n- `OGRE_PROFILING_REMOTERY_PATH` if set, Remotery is used for profiling instead of the Ogre internal profiler.\n- `OGRE_ASSERT_MODE` allows you to to disable all runtime assertion exceptions or turn them into calls to `std::abort`.\n- `OGRE_RESOURCEMANGER_STRICT` allows you to turn on resource lookup related quirks for pre ogre 1.10 compatibility.\n- `OGRE_NODELESS_POSITIONING` allows to use Lights and Cameras without attaching them to nodes (only for legacy code).\n- `OGRE_GLSUPPORT_USE_EGL` use EGL instead of GLX/ WGL for GL RenderSystems. This is required for Wayland support.\n- `OGRE_USE_WAYLAND` will use Wayland window system instead of X11 on Linux.\n\nOnce you are satisfied, hit\n*Configure* again and then click on *Generate*. CMake will then create\nthe build system for you.\n\nBuilding\n--------\n\nGo to your chosen build directory. CMake has generated a build system for\nyou which you will now use to build Ogre. If you are using Visual Studio,\nyou should find the file OGRE.sln. Open it and compile the target\n*BUILD_ALL*. Similarly you will find an Xcode project to build Ogre\non MacOS.\n\nIf you rather want to trigger the build form a console, then cd to your build directory and call the appropriate make program as\n\n    cmake --build . --config Release\n\nto start the build process.\n\n@note on multi-config generators, notably Xcode and MSVC, `--config` must match the `CMAKE_BUILD_TYPE` specified when building the dependencies. This does not apply if you manually provide the dependencies as release *and* debug.\n\nIf you have doxygen installed and CMake picked it up, then there will\nbe an additional build target called *OgreDoc* which you can optionally build.\nThis will freshly generate the API documentation for Ogre's classes from the header files. In Visual Studio, just select and build the target *OgreDoc*, on Linux type:\n\n     make OgreDoc\n\n\nInstalling {#installing-sdk}\n----------\n\nOnce the build is complete, the libraries and headers must be copied to a clean location.\nThis is required if you want to reference %Ogre in your own projects with CMake.\nIn Visual Studio, just select and build the target *INSTALL*. When using the command line, type:\n\n    cmake --build . --config Release --target install\n\nFor Makefile based generators, type:\n\n    make install  # (or sudo make install, if root privileges are required)\n\nOn Linux Ogre will be installed to `/usr/local` by default. On Windows this will create the folder `sdk` inside your build directory and copy all the\nrequired libraries there. You can change the install location by changing the variable `CMAKE_INSTALL_PREFIX` in CMake.\n\nInstalling and building via vcpkg\n---------------------------------\nYou can download and install ogre using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n```\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\nvcpkg install ogre\n```\nThe ogre port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n# Cross-Compiling\n\nAndroid\n-------\n\nTo build Ogre for Android, you need to specify the android cross toolchain to cmake as\n\n    cmake -DCMAKE_TOOLCHAIN_FILE=path/to/android-ndk/build/cmake/android.toolchain.cmake -DANDROID_NDK=path/to/android-ndk .\n\nthis will build the core Ogre libraries. Additionally it will create gradle projects `OgreJNI` for using Java bindings and `SampleBrowserNDK` for the C++ only Sample Browser.\n\nYou can now import these projects in Android Studio or manually trigger the APK creation by changing into the project folders and running\n\n    gradle assembleRelease\n\nWebAssembly / Emscripten\n------------------------\nInstall the Emscripten SDK (see full documentation on [www.emscripten.org](https://emscripten.org/docs/getting_started/downloads.html)), and make sure\nthat the environment variables are correctly set (eg. run `source <emsdk_path>/emsdk_env.sh` before attempting to build)\n\nRun cmake in cross compile mode using emscripten as following:\n\n    mkdir build-wasm\n    emcmake cmake .. -DCMAKE_BUILD_TYPE=Release\n    emmake make\n\nNB: to simplify the process, 'emcmake' and 'emmake' wrappers are used. These tools are provided by Emscripten to correctly setup the cross compilation environment\n\nThis will not build the full SampleBrowser, but just a minimal Sample. The resulting `EmscriptenSample.html` will be placed in `${CMAKE_BINARY_DIR}/bin/`.\n\nTo prevent any cross-origin issues, start a local webserver as `python3 -m http.server 8000` and visit http://localhost:8000.\n\niOS OS\n------\n\nTo build Ogre for iOS, you need to specify the ios cross toolchain to cmake as\n\n    cmake -DCMAKE_TOOLCHAIN_FILE=CMake/toolchain/ios.toolchain.xcode.cmake -DIOS_PLATFORM=SIMULATOR -G Xcode .\n\n\nUnfortunately, you will now have to do a few manual steps to\nmake the generated build system work properly.\n\nA Xcode project has now been generated in the build directory, so\nto start the Ogre build, open OGRE.xcodeproj and build as usual.\nTo run samples on your device you will need to have a valid iOS Developer\ncertificate installed.  For each sample, double click on target in the Groups &\nFiles list.  Ensure that a valid identity is selected in the Code Signing Identity\ndrop menu.\nAlso, because we can't tell CMake what Xcode project format you want, you will\nhave to change it yourself.  Open the Project Menu, choose Edit Project Settings.\nClick on the General tab in the settings window.  Change Project Format to\nXcode 3.1-compatible.\nAnd another thing.  You will need to manually set the Bundle Identifier property of\nthe Info.plist file to match the App ID of the chosen code signing identity.\nThis can be done from the Target Properties panel.  It must match the bundle\nidentifier of a valid developer certificate if you are building for devices.\n\nWinRT / UWP\n------------------------------\n\nYou need Windows 8.0 or later, Windows 10 is recommended.\n\nVisual Studio 2015 is recommended as it is bundled with Universal 10.0.240.0, WinStore 8.0/8.1 and WinPhone 8.0/8.1 SDKs.\n\nDependencies for Win32 and for WinRT must be located in\nseparate folders. Cg is not supported.\n\n    cmake.exe -G \"Visual Studio 15 2017\" -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION=10.0 ..\n\nSelect SampleBrowser as the start up project and run.\n\n@par Notes\n\n1. The code and generated CMake solution should be on local NTFS drive,\nand can't be on a network drive, including VMWare shared folders - or\nyou will get a errors when you will try to compile/link/run resulting exe.\n\n2. Ogre uses d3dcompiler_xx.dll to compile shaders, and WinStore and\nWinPhone 8.1 projects can use it without restriction as it is part of OS.\nBut WinStore and WinPhone 8.0 applications should load already compiled\nshaders from cache, as d3dcompiler_xx.dll is available to them only during\ndevelopment. Therefore to avoid necessity to deploy d3dcompiler_xx.dll\nduring development (additional configurations with d3dcompiler_xx.dll)\nand generation of such cache - use version 8.1 of these platforms.\n\n3. Running WinPhone emulator in OS running under VMware:\nWe were able to run the emulation and debug without an issue by using two\nsteps: (a) Under the settings of the VM > CPU, make sure you have the\noption to pass-through the Intel VT-x/EPT feature, (b) Edit the config\nfile .vmx and add the parameter: hypervisor.cpuid.v0 = \"FALSE\"\nAll versions of Visual Studio 2012 have a window refresh issue when running\nin VMware and the window is maximized, the solution is just to change the\nsize of the Visual Studio window to be less the the screen width and height.\n"
        },
        {
          "name": "CMake",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 21.9873046875,
          "content": "#-------------------------------------------------------------------\n# This file is part of the CMake build system for OGRE\n#     (Object-oriented Graphics Rendering Engine)\n# For the latest info, see http://www.ogre3d.org/\n#\n# The contents of this file are placed in the public domain. Feel\n# free to make use of it in any way you like.\n#-------------------------------------------------------------------\n\n######################################################################\n# OGRE BUILD SYSTEM\n# Welcome to the CMake build system for OGRE.\n# This is the main file where we prepare the general build environment\n# and provide build configuration options.\n######################################################################\n\ncmake_minimum_required(VERSION 3.13.0)\n\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nif(CMAKE_VS_PLATFORM_NAME STREQUAL \"Tegra-Android\")\n\tset(CMAKE_LINK_LIBRARY_FLAG \"\")\nendif()\n\n# Use relative paths\n# This is mostly to reduce path size for command-line limits on windows\nif(WIN32)\n  # This seems to break Xcode projects so definitely don't enable on Apple builds\n  set(CMAKE_USE_RELATIVE_PATHS true)\n  set(CMAKE_SUPPRESS_REGENERATION true)\nendif()\n\n# prefer GLVND\nif(POLICY CMP0072)\n  cmake_policy(SET CMP0072 NEW)\nendif()\nif(POLICY CMP0078)\n  cmake_policy(SET CMP0078 NEW)\nendif()\nif(POLICY CMP0086)\n  cmake_policy(SET CMP0086 NEW)\nendif()\n\nif (APPLE AND NOT ANDROID AND NOT EMSCRIPTEN AND NOT ANDROID_PLATFORM)\n  SET(CMAKE_SIZEOF_VOID_P 4)\n\n  if(${CMAKE_VERSION} VERSION_GREATER_EQUAL \"3.16.0\")\n    enable_language(OBJC)\n    enable_language(OBJCXX)\n  endif()\n\n  if(POLICY CMP0068)\n    cmake_policy(SET CMP0068 NEW)  # CMake 3.9+: `RPATH` settings on macOS do not affect `install_name`.\n  endif()\n\n  if (NOT CMAKE_OSX_ARCHITECTURES)\n    set(CMAKE_OSX_ARCHITECTURES \"x86_64\" CACHE STRING \"\") # target the common case\n  endif()\n\n  # otherwise apple defines a macro named check that conflicts with boost\n  add_definitions(-D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0)\nendif ()\n\nproject(OGRE VERSION 14.3.2)\n\n# extra version info\nset(OGRE_VERSION_SUFFIX \"\")\nset(OGRE_VERSION_NAME \"Tsathoggua\")\n\n# legacy defines\nset(OGRE_SOVERSION ${OGRE_VERSION_MAJOR}.${OGRE_VERSION_MINOR})\nset(OGRE_VERSION_DASH_SEPARATED \"${OGRE_VERSION_MAJOR}-${OGRE_VERSION_MINOR}-${OGRE_VERSION_PATCH}\")\n\n\n# Include necessary submodules\nlist(APPEND CMAKE_MODULE_PATH\n  \"${PROJECT_SOURCE_DIR}/CMake\"\n  \"${PROJECT_SOURCE_DIR}/CMake/Utils\"\n  \"${PROJECT_SOURCE_DIR}/CMake/Packages\"\n)\n\ninclude(CMakeDependentOption)\ninclude(MacroLogFeature)\ninclude(OgreConfigTargets)\nset(OGRE_TEMPLATES_DIR \"${PROJECT_SOURCE_DIR}/CMake/Templates\")\nset(OGRE_WORK_DIR ${PROJECT_BINARY_DIR})\n\n\n#####################################################################\n# Set up the basic build environment\n#####################################################################\n\nif (NOT CMAKE_BUILD_TYPE)\n  # CMake defaults to leaving CMAKE_BUILD_TYPE empty. This screws up\n  # differentiation between debug and release builds.\n  set(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING \"Choose the type of build, options are: None (CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.\" FORCE)\nendif ()\n\n# determine Ogre version numbers\nmessage(STATUS \"Configuring OGRE ${OGRE_VERSION}\")\n# Configure version file for use by scripts\nconfigure_file(\"${OGRE_TEMPLATES_DIR}/version.txt.in\" \"${PROJECT_BINARY_DIR}/version.txt\" @ONLY)\n\n# determine if we are compiling for a 32bit or 64bit system\ninclude(CheckTypeSize)\nCHECK_TYPE_SIZE(\"void*\" OGRE_PTR_SIZE BUILTIN_TYPES_ONLY)\nif (OGRE_PTR_SIZE EQUAL 8)\n  set(OGRE_PLATFORM_X64 TRUE)\nelse ()\n  set(OGRE_PLATFORM_X64 FALSE)\nendif ()\n\nif (WIN32)\n  # Create debug libraries with _d postfix\n  set(CMAKE_DEBUG_POSTFIX \"_d\")\nendif ()\n\n# Set compiler specific build flags\nif (NOT ANDROID AND NOT EMSCRIPTEN AND UNIX OR MINGW)\n  if (CMAKE_SYSTEM_PROCESSOR MATCHES \"x86|X86|amd64|AMD64\")\n    include(CheckCXXCompilerFlag)\n    check_cxx_compiler_flag(-msse OGRE_GCC_HAS_SSE)\n    if (OGRE_GCC_HAS_SSE)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -msse\")\n    endif ()\n  endif()\nendif()\n\nif(UNIX)\n  # This is a set of sensible warnings that provide meaningful output\n  set(OGRE_WARNING_FLAGS \"-Wall -Winit-self -Wcast-qual -Wwrite-strings -Wextra -Wundef -Wmissing-declarations -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-long-long\")\n  if (EMSCRIPTEN)\n      set(OGRE_WARNING_FLAGS \"${OGRE_WARNING_FLAGS} -Wno-warn-absolute-paths\")\n  endif ()\n  if (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n    set(OGRE_WARNING_FLAGS \"${OGRE_WARNING_FLAGS} -Wno-missing-braces\")\n  else()\n    set(OGRE_WARNING_FLAGS \"${OGRE_WARNING_FLAGS} -Wsuggest-override\")\n  endif()\n  set(CMAKE_CXX_FLAGS \"${OGRE_WARNING_FLAGS} ${CMAKE_CXX_FLAGS}\")\nendif ()\nif (MSVC)\n  add_definitions(-D_MT -D_USRDLL)\n  # MSVC does not like Ogre::Singleton (header pragma is enough for MSVC2015+ though)\n  add_definitions(/wd4661)\n  if (CMAKE_BUILD_TOOL STREQUAL \"nmake\")\n    # set variable to state that we are using nmake makefiles\n\tset(NMAKE TRUE)\n  endif ()\n\n  # Enable intrinsics on MSVC in debug mode\n  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /Oi\")\n  if (MSVC AND CMAKE_SIZEOF_VOID_P EQUAL 8)\n    # Visual Studio bails out on debug builds in 64bit mode unless\n\t# this flag is set...\n\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /bigobj\")\n\tset(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /bigobj\")\n  endif ()\n\n  if (OGRE_PROJECT_FOLDERS)  \n    # Turn on the ability to create folders to organize projects (.vcproj)\n    # It creates \"CMakePredefinedTargets\" folder by default and adds CMake\n    # defined projects like INSTALL.vcproj and ZERO_CHECK.vcproj\n    set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n  endif()\n\n  option(OGRE_BUILD_MSVC_MP \"Enable build with multiple processes in Visual Studio\" TRUE)\n  if(OGRE_BUILD_MSVC_MP)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP\")\n  endif ()\n  option(OGRE_BUILD_MSVC_ZM \"Add /Zm256 compiler option to fix PCH errors on Visual Studio 2013\" TRUE)\n  if(OGRE_BUILD_MSVC_ZM)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Zm256\")\n  endif ()\nendif ()\nif (MINGW)\n  add_definitions(-D_WIN32_WINNT=0x0501)\n  if( CMAKE_SIZEOF_VOID_P EQUAL 4 )\n    # set architecture to i686, since otherwise some versions of MinGW can't link\n    # the atomic primitives\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=i686\")\n  endif ()\nendif ()\n\ninclude(GenerateExportHeader)\nset(CMAKE_CXX_VISIBILITY_PRESET hidden)\nset(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n\nif((CMAKE_CXX_COMPILER_ID MATCHES \"Clang|GNU\") AND NOT OGRE_STATIC)\n  set(OGRE_VISIBILITY_FLAGS \"-DOGRE_GCC_VISIBILITY\") # for legacy headers\nendif()\n\n# determine system endianness\nif (MSVC OR ANDROID OR EMSCRIPTEN OR APPLE_IOS)\n  # This doesn't work on VS 2010\n  # MSVC only builds for intel anyway\n  # all IOS devices are little endian\n  set(OGRE_TEST_BIG_ENDIAN FALSE)\nelse()\n  include(TestBigEndian)\n  test_big_endian(OGRE_TEST_BIG_ENDIAN)\nendif()\n\n# definitions for samples\nset(OGRE_LIBRARIES OgreMain)\n\n# Specify build paths\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/lib\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/bin\")\nif (WIN32 OR APPLE)\n  if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n    # We don't want to install in default system location, install is really for the SDK, so call it that\n    set(CMAKE_INSTALL_PREFIX\n\t  \"${PROJECT_BINARY_DIR}/sdk\" CACHE PATH \"OGRE install prefix\" FORCE\n    )\n  endif (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\nendif(WIN32 OR APPLE)\n\n# Set up iOS overrides.\nif (APPLE_IOS)\n  set(CMAKE_EXE_LINKER_FLAGS \"-framework OpenGLES -framework Foundation -framework CoreGraphics -framework QuartzCore -framework UIKit\")\n  set(XCODE_ATTRIBUTE_GCC_UNROLL_LOOPS \"YES\")\n  set(XCODE_ATTRIBUTE_LLVM_VECTORIZE_LOOPS \"YES\")\n  set(XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY \"iPhone Developer\")\n  set(XCODE_ATTRIBUTE_GCC_PRECOMPILE_PREFIX_HEADER \"YES\")\n  set(OGRE_BUILD_RENDERSYSTEM_GLES2 TRUE CACHE BOOL \"Forcing OpenGL ES 2 RenderSystem for iOS\" FORCE)\n  set(OGRE_STATIC TRUE CACHE BOOL \"Forcing static build for iOS\" FORCE)\n  set(MACOSX_BUNDLE_GUI_IDENTIFIER \"com.yourcompany.\\${PRODUCT_NAME:rfc1034identifier}\")\nelseif (ANDROID)\n  set(TargetPlatform \"Android\")\n  set(OGRE_PLATFORM OGRE_PLATFORM_ANDROID)\n  option(OGRE_BUILD_ANDROID_JNI_SAMPLE \"Enable JNI Sample\" FALSE)\n\n  set(OGRE_BUILD_RENDERSYSTEM_GLES2 TRUE CACHE BOOL \"Forcing OpenGL ES 2 RenderSystem for Android\" FORCE)\n\n  set(OGRE_BUILD_PLUGIN_PCZ FALSE CACHE BOOL \"Disable pcz on Android\" FORCE)\n  set(OGRE_BUILD_TOOLS FALSE CACHE BOOL \"Disable tools on Android\" FORCE)\n  set(OGRE_STATIC TRUE CACHE BOOL \"Forcing static build for Android\" FORCE)\n\n  # workaround for the legacy android toolchain\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\nelseif(EMSCRIPTEN)\n  add_definitions(-DEMSCRIPTEN=1 -D__EMSCRIPTEN__=1)\n  set(TargetPlatform \"Emscripten\")\n  set(OGRE_PLATFORM OGRE_PLATFORM_EMSCRIPTEN)\n\n  set(OGRE_BUILD_RENDERSYSTEM_GLES2 TRUE CACHE BOOL \"Forcing OpenGL ES 2 RenderSystem for Emscripten\" FORCE)\n  set(OGRE_BUILD_RENDERSYSTEM_GL FALSE CACHE BOOL \"Disable OpenGL RenderSystem for Emscripten\" FORCE)\n\n  set(OGRE_BUILD_PLUGIN_STBI TRUE CACHE BOOL \"Enable STBIImageCodec on Emscripten (Smaller Footprint)\" FORCE)\n  set(OGRE_BUILD_PLUGIN_FREEIMAGE FALSE CACHE BOOL \"Disable Freeimage on Emscripten (Smaller Footprint)\" FORCE)\n  set(OGRE_BUILD_PLUGIN_PCZ FALSE CACHE BOOL \"Disable pcz on Emscripten\" FORCE)\n  set(OGRE_BUILD_PLUGIN_BSP FALSE CACHE BOOL \"Disable pcz on Emscripten\" FORCE)\n  set(OGRE_BUILD_TOOLS FALSE CACHE BOOL \"Disable tools on Emscripten\" FORCE)\n  set(OGRE_BUILD_TESTS FALSE CACHE BOOL \"Disable tests on Emscripten\" FORCE)\n  set(OGRE_BUILD_COMPONENT_VOLUME FALSE CACHE BOOL \"Disable volume component on Emscripten\" FORCE)\n  set(OGRE_BUILD_COMPONENT_PAGING FALSE CACHE BOOL \"Disable paging component on Emscripten\" FORCE)\n  set(OGRE_BUILD_COMPONENT_TERRAIN FALSE CACHE BOOL \"Disable terrain component on Emscripten\" FORCE)\n  set(OGRE_STATIC TRUE CACHE BOOL \"Forcing static build for Emscripten\" FORCE)\n\n  set(OGRE_CONFIG_THREADS \"0\" CACHE STRING \"Threading is unstable on Emscripten\" FORCE)\nelseif (APPLE AND NOT APPLE_IOS)\n  # Make sure that the GLES2 render system is disabled for non-iOS Apple builds\n  set(OGRE_BUILD_RENDERSYSTEM_GLES2 FALSE CACHE BOOL \"\" FORCE)\nendif ()\n\nif(OGRE_BUILD_COMPONENT_MESHLODGENERATOR)\n  set(OGRE_CONFIG_ENABLE_MESHLOD TRUE CACHE BOOL \"Forcing Mesh Lod\" FORCE)\nendif()\n\n# Find dependencies\ninclude(Dependencies)\n\n######################################################################\n# Provide user options to customise the build process\n######################################################################\n\n# Customise what to build\noption(OGRE_STATIC \"Static build\" FALSE)\ncmake_dependent_option(OGRE_ENABLE_PRECOMPILED_HEADERS \"Use precompiled headers to speed up build\" TRUE \"NOT MINGW; NOT EMSCRIPTEN\" FALSE)\nset(OGRE_RESOURCEMANAGER_STRICT \"2\" CACHE STRING \n  \"Make ResourceManager strict for faster operation. Possible values:\n  0 - OFF search in all groups twice - for case sensitive and insensitive lookup [DEPRECATED]\n  1 - PEDANTIC require an explicit resource group. Case sensitive lookup.\n  2 - STRICT search in default group if not specified otherwise. Case sensitive lookup.\n  \")\nset_property(CACHE OGRE_RESOURCEMANAGER_STRICT PROPERTY STRINGS 0 1 2)\n\noption(OGRE_NODELESS_POSITIONING \"use Lights and Cameras without attaching them to nodes [DEPRECATED]\" FALSE)\n\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_D3D9 \"Build Direct3D9 RenderSystem\" TRUE \"WIN32;DirectX9_FOUND;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_D3D11 \"Build Direct3D11 RenderSystem\" TRUE \"WIN32;DirectX11_FOUND OR WINDOWS_STORE OR WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_GL3PLUS \"Build OpenGL 3+ RenderSystem\" TRUE \"OPENGL_FOUND;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_GL \"Build OpenGL RenderSystem\" TRUE \"OPENGL_FOUND;NOT APPLE_IOS;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_GLES2 \"Build OpenGL ES 2.x RenderSystem\" TRUE \"OPENGLES2_FOUND;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_METAL \"Build Metal RenderSystem\" FALSE \"APPLE\" FALSE)\noption(OGRE_BUILD_RENDERSYSTEM_VULKAN \"Build Vulkan RenderSystem\" FALSE)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_ASSIMP \"Build Open Asset Import plugin\" TRUE \"assimp_FOUND\" FALSE)\ncmake_dependent_option(OGRE_BUILD_RENDERSYSTEM_TINY \"Build Tiny RenderSystem (software-rendering)\" FALSE \"NOT ANDROID\" FALSE)\noption(OGRE_BUILD_PLUGIN_BSP \"Build BSP SceneManager plugin\" TRUE)\noption(OGRE_BUILD_PLUGIN_OCTREE \"Build Octree SceneManager plugin\" TRUE)\noption(OGRE_BUILD_PLUGIN_PFX \"Build ParticleFX plugin\" TRUE)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_DOT_SCENE \"Build .scene plugin\" TRUE \"pugixml_FOUND\" FALSE)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_PCZ \"Build PCZ SceneManager plugin\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_PAGING \"Build Paging component\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_MESHLODGENERATOR \"Build MeshLodGenerator component\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_TERRAIN \"Build Terrain component\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_VOLUME \"Build Volume component\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_PROPERTY \"Build Property component\" TRUE \"\" FALSE)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_CG \"Build Cg plugin\" TRUE \"Cg_FOUND;NOT APPLE_IOS;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\noption(OGRE_BUILD_PLUGIN_GLSLANG \"Build glslang plugin\" ${OGRE_BUILD_RENDERSYSTEM_VULKAN}) # no way to determine whether glslang is present\noption(OGRE_BUILD_COMPONENT_OVERLAY \"Build Overlay component\" TRUE)\n\ncmake_dependent_option(OGRE_BUILD_COMPONENT_OVERLAY_IMGUI \"Include dear imgui in Overlays\" TRUE \"OGRE_BUILD_COMPONENT_OVERLAY\" FALSE)\n\ncmake_dependent_option(OGRE_BUILD_COMPONENT_BITES \"Build OgreBites component\" TRUE \"OGRE_BUILD_COMPONENT_OVERLAY\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_BULLET \"Build Bullet physics component\" TRUE \"BULLET_FOUND\" FALSE)\ncmake_dependent_option(OGRE_BITES_STATIC_PLUGINS \"Skip plugins.cfg and statically load plugins via OgreBites\" FALSE \"NOT OGRE_STATIC;OGRE_BUILD_COMPONENT_BITES\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_PYTHON \"Build Python bindings\" TRUE \"NOT OGRE_STATIC\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_JAVA \"Build Java (JNI) bindings\" TRUE \"NOT OGRE_STATIC OR ANDROID\" FALSE)\ncmake_dependent_option(OGRE_BUILD_COMPONENT_CSHARP \"Build Csharp bindings\" TRUE \"NOT OGRE_STATIC\" FALSE)\noption(OGRE_BUILD_COMPONENT_RTSHADERSYSTEM \"Build RTShader System component\" TRUE)\ncmake_dependent_option(OGRE_BUILD_RTSHADERSYSTEM_SHADERS \"Build RTShader System FFP shaders\" TRUE \"OGRE_BUILD_COMPONENT_RTSHADERSYSTEM\" FALSE)\n\ncmake_dependent_option(OGRE_BUILD_SAMPLES \"Build Ogre demos\" TRUE \"OGRE_BUILD_COMPONENT_OVERLAY;OGRE_BUILD_COMPONENT_BITES\" FALSE)\ncmake_dependent_option(OGRE_BUILD_TOOLS \"Build the command-line tools\" TRUE \"pugixml_FOUND;NOT APPLE_IOS;NOT WINDOWS_STORE;NOT WINDOWS_PHONE\" FALSE)\ncmake_dependent_option(OGRE_BUILD_XSIEXPORTER \"Build the Softimage exporter\" FALSE \"Softimage_FOUND\" FALSE)\ncmake_dependent_option(OGRE_BUILD_LIBS_AS_FRAMEWORKS \"Build frameworks for libraries on OS X.\" TRUE \"APPLE;NOT OGRE_BUILD_PLATFORM_APPLE_IOS\" FALSE)\ncmake_dependent_option(OGRE_BUILD_TESTS \"Build the unit tests & PlayPen\" FALSE \"OGRE_BUILD_COMPONENT_BITES\" FALSE)\noption(OGRE_CONFIG_DOUBLE \"Use doubles instead of floats in Ogre\" FALSE)\noption(OGRE_CONFIG_NODE_INHERIT_TRANSFORM \"Tells the node whether it should inherit full transform from it's parent node or derived position, orientation and scale\" FALSE)\nset(OGRE_CONFIG_THREADS \"3\" CACHE STRING \n\t\"Enable Ogre thread safety support for multithreading. Possible values:\n\t0 - no thread safety. DefaultWorkQueue is not threaded.\n\t1 - background resource preparation and loading is thread safe. Threaded DefaultWorkQueue. [DEPRECATED]\n\t2 - only background resource preparation is thread safe. Threaded DefaultWorkQueue. [DEPRECATED]\n\t3 - no thread safety. Threaded DefaultWorkQueue.\"\n)\nset_property(CACHE OGRE_CONFIG_THREADS PROPERTY STRINGS 0 1 2 3)\nset(OGRE_CONFIG_THREAD_PROVIDER \"std\" CACHE STRING\n\t\"Select the library to use for thread support. Possible values:\n\tboost - Boost thread library. [DEPRECATED]\n\tpoco  - Poco thread library. [DEPRECATED]\n\ttbb   - ThreadingBuildingBlocks library. [DEPRECATED]\n\tstd   - STL thread library (requires compiler support).\"\n)\nset_property(CACHE OGRE_CONFIG_THREAD_PROVIDER PROPERTY STRINGS boost poco tbb std)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_FREEIMAGE \"Build FreeImage codec.\" TRUE \"FreeImage_FOUND\" FALSE)\ncmake_dependent_option(OGRE_BUILD_PLUGIN_EXRCODEC \"Build EXR Codec plugin\" TRUE \"OPENEXR_FOUND;\" FALSE)\noption(OGRE_BUILD_PLUGIN_STBI \"Enable STBI image codec.\" TRUE)\noption(OGRE_BUILD_PLUGIN_RSIMAGE \"Enable image-rs codec.\" FALSE)\noption(OGRE_CONFIG_ENABLE_MESHLOD \"Enable Mesh Lod.\" TRUE)\noption(OGRE_CONFIG_ENABLE_DDS \"Build DDS codec.\" TRUE)\noption(OGRE_CONFIG_ENABLE_PVRTC \"Build PVRTC codec.\" ${APPLE_IOS})\noption(OGRE_CONFIG_ENABLE_ETC \"Build ETC codec.\" TRUE)\noption(OGRE_CONFIG_ENABLE_ASTC \"Build ASTC codec.\" TRUE)\noption(OGRE_CONFIG_ENABLE_QUAD_BUFFER_STEREO \"Enable stereoscopic 3D support\" FALSE)\noption(OGRE_CONFIG_ENABLE_ZIP \"Build ZIP archive support. If you disable this option, you cannot use ZIP archives resource locations. The samples won't work.\" TRUE)\ncmake_dependent_option(OGRE_CONFIG_ENABLE_GLES2_CG_SUPPORT \"Enable Cg support to ES 2 render system\" FALSE \"OGRE_BUILD_RENDERSYSTEM_GLES2\" FALSE)\ncmake_dependent_option(OGRE_CONFIG_ENABLE_GLES2_GLSL_OPTIMISER \"Enable GLSL optimiser use in GLES 2 render system\" FALSE \"OGRE_BUILD_RENDERSYSTEM_GLES2\" FALSE)\ncmake_dependent_option(OGRE_CONFIG_ENABLE_GL_STATE_CACHE_SUPPORT \"Enable OpenGL state cache management\" FALSE \"OGRE_BUILD_RENDERSYSTEM_GL OR OGRE_BUILD_RENDERSYSTEM_GLES2 OR OGRE_BUILD_RENDERSYSTEM_GL3PLUS\" FALSE)\noption(OGRE_CONFIG_ENABLE_TBB_SCHEDULER \"Enable TBB's scheduler initialisation/shutdown.\" TRUE)\ncmake_dependent_option(OGRE_CONFIG_FILESYSTEM_UNICODE \"paths expected to be in UTF-8 and wchar_t file IO routines are used\" TRUE \"MSVC\" FALSE)\n# Customise what to install\ncmake_dependent_option(OGRE_INSTALL_SAMPLES \"Install Ogre demos.\" TRUE \"OGRE_BUILD_SAMPLES\" FALSE)\noption(OGRE_INSTALL_TOOLS \"Install Ogre tools.\" TRUE)\noption(OGRE_INSTALL_DOCS \"Install documentation.\" TRUE)\ncmake_dependent_option(OGRE_INSTALL_PDB \"Install debug pdb files\" TRUE \"MSVC\" FALSE)\noption(OGRE_PROFILING \"Enable internal instrumentation.\" FALSE)\nset(OGRE_PROFILING_REMOTERY_PATH \"\" CACHE PATH \"set this to Remotery/lib to use Remotery instead of the buildin profiler\")\ncmake_dependent_option(OGRE_CONFIG_STATIC_LINK_CRT \"Statically link the MS CRT dlls (msvcrt)\" FALSE \"MSVC\" FALSE)\nset(OGRE_LIB_DIRECTORY \"lib${LIB_SUFFIX}\" CACHE STRING \"Install path for libraries, e.g. 'lib64' on some 64-bit Linux distros.\")\nset(OGRE_BIN_DIRECTORY \"bin\" CACHE STRING \"Install path for binaries\")\n\ncmake_dependent_option(OGRE_INSTALL_VSPROPS \"Install Visual Studio Property Page.\" FALSE \"MSVC\" FALSE)\nif (OGRE_INSTALL_VSPROPS)\n  configure_file(${OGRE_TEMPLATES_DIR}/OGRE.props.in ${PROJECT_BINARY_DIR}/OGRE.props)\n  install(FILES ${PROJECT_BINARY_DIR}/OGRE.props DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\nendif ()\n\n# provide option to install dependencies\ninclude(InstallDependencies)\n\n# determine threading options\ninclude(PrepareThreadingOptions)\n\n# Enable project folders by default if the IDE supportes them\n# Hide option from other compilers.\nif (MSVC OR CMAKE_GENERATOR MATCHES Xcode)\n\toption(OGRE_PROJECT_FOLDERS \"Organize project into project folders.\" TRUE)\nendif ()\n\n# hide advanced options\nmark_as_advanced(\n  OGRE_BUILD_RTSHADERSYSTEM_CORE_SHADERS\n  OGRE_BUILD_RTSHADERSYSTEM_EXT_SHADERS\n  OGRE_CONFIG_DOUBLE\n  OGRE_CONFIG_NODE_INHERIT_TRANSFORM\n  OGRE_CONFIG_ENABLE_MESHLOD\n  OGRE_CONFIG_ENABLE_DDS\n  OGRE_CONFIG_ENABLE_PVRTC\n  OGRE_CONFIG_ENABLE_ETC\n  OGRE_CONFIG_ENABLE_ASTC\n  OGRE_CONFIG_ENABLE_ZIP\n  OGRE_CONFIG_ENABLE_GL_STATE_CACHE_SUPPORT\n  OGRE_CONFIG_ENABLE_GLES2_CG_SUPPORT\n  OGRE_CONFIG_ENABLE_GLES2_GLSL_OPTIMISER\n  OGRE_CONFIG_ENABLE_TBB_SCHEDULER\n  OGRE_PROFILING\n  OGRE_CONFIG_STATIC_LINK_CRT\n  OGRE_LIB_DIRECTORY\n  OGRE_BIN_DIRECTORY\n)\n\n###################################################################\n# configure global build settings based on selected build options\n###################################################################\ninclude(ConfigureBuild)\n\nset(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_RPATH};${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}\")\nset(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n\n###################################################################\n# disable way too common compiler warnings on project level\n###################################################################\nif(MSVC)\n\tadd_definitions( /wd4251 /wd4275 )\nendif()\n\n##################################################################\n# Now setup targets\n##################################################################\n\n# install resource files\ninclude(InstallResources)\n\n# enable PCH support\ninclude(PrecompiledHeader)\n\n# Setup OgreMain project\nadd_subdirectory(OgreMain)\n\n# Setup RenderSystems\nadd_subdirectory(RenderSystems)\n\n# Setup Plugins\nadd_subdirectory(PlugIns)\n\n# Setup Components\nadd_subdirectory(Components)\n\n# Setup tests (before samples so that PlayPen is included in browser)\nif (OGRE_BUILD_TESTS)\n  # enable CTest\n  ENABLE_TESTING()\n  INCLUDE(CTest)\n  add_subdirectory(Tests)\nendif ()\n\n# Setup samples\nadd_subdirectory(Samples)\n\n# Setup command-line tools\nif (OGRE_BUILD_TOOLS)\n  add_subdirectory(Tools)\nendif ()\n\n# Setup XSIExporter\nif (OGRE_BUILD_XSIEXPORTER)\n  add_subdirectory(Tools/XSIExport)\nendif ()\n\n# Install documentation\nadd_subdirectory(Docs)\n\n# Install sample media files\ninstall(DIRECTORY Media/Main DESTINATION \"${OGRE_MEDIA_PATH}/\")\ninstall(DIRECTORY Media/RTShaderLib DESTINATION \"${OGRE_MEDIA_PATH}/\")\nif (OGRE_INSTALL_SAMPLES)\n  install(DIRECTORY Samples/Media/ DESTINATION ${OGRE_MEDIA_PATH})\nendif ()\n\n# Provide CPack packaging target\ninclude(Packaging)\n\n\n# Show feature summary\ninclude(OgreFeatureSummary)\n"
        },
        {
          "name": "Components",
          "type": "tree",
          "content": null
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "MIT License\n\nCopyright (c) 2000-2013 Torus Knot Software Ltd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "Media",
          "type": "tree",
          "content": null
        },
        {
          "name": "OgreMain",
          "type": "tree",
          "content": null
        },
        {
          "name": "Other",
          "type": "tree",
          "content": null
        },
        {
          "name": "PlugIns",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.44140625,
          "content": "[![GitHub release](https://img.shields.io/github/release/ogrecave/ogre.svg)](https://github.com/OGRECave/ogre/releases/latest)\n[![Downloads](https://static.pepy.tech/badge/ogre-python)](https://pepy.tech/project/ogre-python)\n[![Join the chat at https://gitter.im/OGRECave/ogre](https://badges.gitter.im/OGRECave/ogre.svg)](https://gitter.im/OGRECave/ogre?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Patreon](https://img.shields.io/badge/patreon-donate-blue.svg)](https://www.patreon.com/ogre1)\n\n![](Other/ogre_header.svg)\n\n## OGRE - scene-oriented, flexible 3D engine\n\n**OGRE** (Object-Oriented Graphics Rendering Engine) is a\nscene-oriented, flexible 3D engine written in C++ designed to make it\neasier and more intuitive for developers to produce games and demos\nutilising 3D hardware. The class library abstracts all the details of\nusing the underlying system libraries like Direct3D and OpenGL and\nprovides an interface based on world objects and other intuitive\nclasses.\n\n[Try it](#try-it) -\n[Building](https://ogrecave.github.io/ogre/api/latest/building-ogre.html) -\n[Tutorials](https://ogrecave.github.io/ogre/api/latest/tutorials.html) -\n[Manual](https://ogrecave.github.io/ogre/api/latest/manual.html) -\n[What's New?](Docs/14-Notes.md) -\n[Who is using it?](#who-is-using-it) -\n[Community Support](http://forums.ogre3d.org/)\n\n\n## Features\n\nFor an exhaustive list, see the [features page](http://www.ogre3d.org/about/features) and try our Sample Browser. For a quick overview see below\n\n| Integrated Bump and Offset Mapping | Integrated shadows |\n|----|----|\n| ![](Other/screenshots/bumpmap.webp) | ![](Other/screenshots/shadows.jpg) |\n\n| Physically Based Shading | Particle Effects |\n|----|----|\n| ![](Other/screenshots/pbr.webp) | ![](Other/screenshots/particle.jpg) |\n\n| HW & SW skeletal animation | Multi-layer Terrain |\n|----|----|\n| ![](Other/screenshots/skeletal.jpg) | ![](Other/screenshots/terrain.jpg) |\n\n| Automatic Rendertarget pipelining (Compositors) | Volume Rendering with CSG & Triplanar Texturing |\n|----|----|\n| ![](Other/screenshots/compositor.jpg) | ![](Other/screenshots/volume.jpg) |\n\n| [Dear ImGui](https://github.com/ocornut/imgui) | [Bullet Physics](https://pybullet.org/) Integration |\n|----|----|\n| ![](Other/screenshots/imgui.jpg) | ![](Other/screenshots/bullet.webp) |\n\n## Try it\n* [Online Emscripten Demo](https://ogrecave.github.io/ogre/emscripten/)\n* [Windows Demos Distribution](https://dl.cloudsmith.io/public/ogrecave/ogre/raw/versions/master/ogre-sdk-master-msvc142-x64.zip)\n* [Linux Snap Package](https://snapcraft.io/ogre)\n* [Android App on F-Droid](https://f-droid.org/packages/org.ogre.browser/)\n\n## Who is using it?\n\n**Open Source**\n- [Stunt Rally 2.x - 3D Racing Game with Track Editor](https://github.com/stuntrally/stuntrally/)\n- [Rigs of Rods - Soft Body Physics Simulator](https://rigsofrods.org/)\n- [Gazebo - Robot simulation](http://gazebosim.org/)\n- [OpenCV OVIS visualization module](https://docs.opencv.org/master/d2/d17/group__ovis.html)\n- [ROS 3D visualization tool](http://wiki.ros.org/rviz)\n- [Surgical Image Toolkit](https://github.com/IRCAD/sight#applications)\n\n**Closed Source**\n- [Hob](http://store.steampowered.com/app/404680/Hob/)\n- [Torchlight II](http://store.steampowered.com/app/200710/Torchlight_II/)\n- [Battlezone 98 Redux](http://store.steampowered.com/app/301650/Battlezone_98_Redux/)\n\n## Citing\nIf you use Ogre in your research, please cite it like this:\n\n```bibtex\n  @misc{rojtberg2024ogre,\n    author = \"{Rojtberg, Pavel and Rogers, David and Streeting, Steve and others}\",\n    title = \"OGRE scene-oriented, flexible 3D engine\",\n    year = \"2001 -- 2024\",\n    howpublished = \"\\url{https://www.ogre3d.org/}\",\n  }\n```\n\n## Contributing\nWe welcome all contributions to OGRE, be that new\nplugins, bugfixes, extensions, tutorials, documentation, example\napplications, artwork or pretty much anything else! If you would like\nto contribute to the development of OGRE, please create a [pull request](https://github.com/OGRECave/ogre/pulls).\n\n| Build | Status |\n|-------|-----------------|\n| Linux, OSX, Android, iOS | [![CI Build](https://github.com/OGRECave/ogre/workflows/CI%20Build/badge.svg?branch=master)](https://github.com/OGRECave/ogre/actions?query=branch%3Amaster) |\n| MSVC | [![Build status](https://ci.appveyor.com/api/projects/status/kcki7y0n1ahrggdw/branch/master?svg=true)](https://ci.appveyor.com/project/paroj/ogre-bsrh7/branch/master) |\n\n## Licensing\nPlease see the [full license documentation](Docs/License.md) for details.\n"
        },
        {
          "name": "RenderSystems",
          "type": "tree",
          "content": null
        },
        {
          "name": "SDK",
          "type": "tree",
          "content": null
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "_clang-format",
          "type": "blob",
          "size": 0.189453125,
          "content": "{UseTab: Never, ColumnLimit: 120, IndentWidth: 4, AccessModifierOffset: -4, PointerAlignment: Left,\n  Standard: Cpp11, Cpp11BracedListStyle: true, BasedOnStyle: LLVM, BreakBeforeBraces: Allman}\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.623046875,
          "content": "platform: x64\nconfiguration: Release\nenvironment:\n  CS_APIKEY:\n    secure: XiSyqXBlbnIqawfinZqXimatuEdpYsI38+HK2TgvuUGHQEoeFHA62700/EhFJ4M1\nimage:\n - Visual Studio 2019\ninstall:\n - cmd: SET PATH=C:\\Python310-x64;C:\\Python310-x64\\Scripts;%PATH%\n - cmd: pip install swig\n - cmd: curl -sSf -o rustup-init.exe https://win.rustup.rs/\n - cmd: rustup-init.exe -y\n - cmd: curl -LO https://sdk.lunarg.com/sdk/download/1.3.275.0/windows/VulkanSDK-1.3.275.0-Installer.exe\n - cmd: VulkanSDK-1.3.275.0-Installer.exe --accept-licenses --default-answer --confirm-command install\n - cmd: cd %APPVEYOR_BUILD_FOLDER%\n - cmd: git submodule update --init --recursive\nbuild_script:\n - set PATH=C:\\Qt\\6.2\\msvc2019_64\\bin;C:\\Users\\appveyor\\.cargo\\bin;%PATH%\n - set VULKAN_SDK=C:\\VulkanSDK\\1.3.275.0\n - cmake -P ci-build.cmake\n - cmake --build build --config RelWithDebInfo --target INSTALL\ntest_script:\n - set PATH=%PATH%;build\\gtest\\lib\n - build\\bin\\RelWithDebInfo\\Test_Ogre.exe --gtest_filter=-MeshWithoutIndexDataTests*\ncache:\n- ogredeps -> CMake/Dependencies.cmake\nbranches:\n  only:\n    - master\n    - stable\n    - /v\\d+\\.\\d+\\.\\d+/\nafter_build:\n  - IF NOT \"%APPVEYOR_REPO_TAG%\" == \"true\" set APPVEYOR_REPO_TAG_NAME=master\n  - 7z a ogre-sdk-%APPVEYOR_REPO_TAG_NAME%-msvc142-x64.zip ./build/sdk/*\n  - SET PATH=C:\\Python310-x64;C:\\Python310-x64\\Scripts;%PATH%\n  - pip install --upgrade cloudsmith-cli\n  - IF \"%APPVEYOR_PULL_REQUEST_NUMBER%\" == \"\" cloudsmith push raw ogrecave/ogre ogre-sdk-%APPVEYOR_REPO_TAG_NAME%-msvc142-x64.zip --republish --version %APPVEYOR_REPO_TAG_NAME% -k %CS_APIKEY%\nartifacts:\n  - path: ogre-sdk-master-msvc142-x64.zip\n    name: ogre-sdk-master-msvc142-x64\n"
        },
        {
          "name": "ci-build.cmake",
          "type": "blob",
          "size": 4.1064453125,
          "content": "set(GENERATOR)\nset(OTHER -DCMAKE_CXX_FLAGS=-Werror -DCMAKE_SHARED_LINKER_FLAGS=-Wl,--no-undefined -DOGRE_CONFIG_ENABLE_PVRTC=ON)\nset(CROSS)\n\nset(CMAKE_BUILD_TYPE Debug)\nset(BUILD_DEPS FALSE)\nset(SWIG_EXECUTABLE /usr/bin/swig4.0)\n\nset(RENDERSYSTEMS\n    -DOGRE_BUILD_PLUGIN_GLSLANG=TRUE # only builds on Linux, this is the Linux specific config\n    -DOGRE_BUILD_PLUGIN_RSIMAGE=TRUE\n    -DOGRE_BUILD_RENDERSYSTEM_VULKAN=TRUE\n    -DOGRE_BUILD_RENDERSYSTEM_GL=TRUE\n    -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=TRUE\n    -DOGRE_BUILD_RENDERSYSTEM_GLES2=TRUE\n    -DOGRE_BUILD_RENDERSYSTEM_TINY=TRUE)\n\nif(DEFINED ENV{IOS})\n    set(GENERATOR -G Xcode)\n    set(RENDERSYSTEMS\n        -DOGRE_BUILD_RENDERSYSTEM_METAL=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GLES2=TRUE)\n    set(CROSS\n        -DIOS_PLATFORM=SIMULATOR\n        -DCMAKE_TOOLCHAIN_FILE=${CMAKE_CURRENT_SOURCE_DIR}/CMake/toolchain/ios.toolchain.xcode.cmake)\n\n    set(OTHER\n        -DOGRE_DEPENDENCIES_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ogredeps\n        ${CROSS})\n    set(BUILD_DEPS TRUE)\nelseif(\"$ENV{TRAVIS_OS_NAME}\" STREQUAL \"osx\")\n    set(GENERATOR -G Xcode)\n    set(RENDERSYSTEMS\n        -DOGRE_BUILD_RENDERSYSTEM_METAL=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GL=FALSE\n        -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=TRUE)\n\n    set(OTHER\n        -DOGRE_DEPENDENCIES_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ogredeps\n        ${CROSS})\nendif()\n\nif(DEFINED ENV{APPVEYOR})\n    set(CMAKE_BUILD_TYPE Release)\n    set(RENDERSYSTEMS\n        -DOGRE_BUILD_RENDERSYSTEM_D3D9=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_TINY=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_VULKAN=TRUE\n        -DOGRE_BUILD_PLUGIN_RSIMAGE=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GL=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GLES2=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=TRUE)\n\n    set(OTHER\n        \"-DCMAKE_CXX_FLAGS=-WX -EHsc\"\n        -DCMAKE_GENERATOR_PLATFORM=x64\n        -DCMAKE_GENERATOR_TOOLSET=v142\n        -DOGRE_BUILD_DEPENDENCIES=TRUE\n        \"-DPYTHON_EXECUTABLE=C:\\\\Python310-x64\\\\python.exe\"\n        \"-DPYTHON_LIBRARY=C:\\\\Python310-x64\\\\libs\\\\python310.lib\"\n        -DOGRE_DEPENDENCIES_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ogredeps)\n\n    set(GENERATOR -G \"Visual Studio 16 2019\")\n    set(OTHER ${OTHER}\n        -DCMAKE_PREFIX_PATH=\"C:\\\\Qt\\\\6.2\\\\msvc2019_64\"\n        -DQt6_DIR=\"C:\\\\Qt\\\\6.2\\\\msvc2019_64\\\\lib\\\\cmake\\\\Qt6\")\n\n    set(BUILD_DEPS TRUE)\n    set(SWIG_EXECUTABLE \"C:\\\\Python310-x64\\\\Scripts\\\\swig.exe\")\nendif()\n\nif(DEFINED ENV{ANDROID})\n    set(CMAKE_BUILD_TYPE RelWithDebInfo)\n    set(CROSS\n        -DANDROID_PLATFORM=android-19\n        -DANDROID_NDK=${CMAKE_CURRENT_SOURCE_DIR}/android-ndk-r25c\n        -DCMAKE_TOOLCHAIN_FILE=${CMAKE_CURRENT_SOURCE_DIR}/android-ndk-r25c/build/cmake/android.toolchain.cmake\n        -DANDROID_ARM_NEON=TRUE\n        -DANDROID_ABI=arm64-v8a)\n\n    set(RENDERSYSTEMS\n        -DOGRE_BUILD_RENDERSYSTEM_VULKAN=TRUE\n        -DOGRE_BUILD_RENDERSYSTEM_GLES2=TRUE)\n\n    set(OTHER\n        ${CROSS}\n        -DCMAKE_CXX_FLAGS=\"-Werror\"\n        -DOGRE_BUILD_ANDROID_JNI_SAMPLE=TRUE\n        -DOGRE_DEPENDENCIES_DIR=${CMAKE_CURRENT_SOURCE_DIR}/ogredeps)\n    set(BUILD_DEPS TRUE)\n\n    if(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/android-ndk-r25c)\n        message(STATUS \"Downloading Android NDK\")\n        file(DOWNLOAD\n            https://dl.google.com/android/repository/android-ndk-r25c-linux.zip\n            ./android-ndk-r25c-linux.zip)\n        message(STATUS \"Extracting Android NDK\")\n        execute_process(COMMAND unzip android-ndk-r25c-linux.zip OUTPUT_QUIET)\n        message(STATUS \"Building Shaderc\")\n        execute_process(COMMAND\n            ../../../ndk-build -j2 NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk APP_STL=c++_static APP_ABI=arm64-v8a libshaderc_combined\n            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/android-ndk-r25c/sources/third_party/shaderc/)\n    endif()\nendif()\n\nfile(MAKE_DIRECTORY build)\nexecute_process(COMMAND ${CMAKE_COMMAND}\n    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}\n    -DOGRE_BUILD_TESTS=ON\n    -DOGRE_RESOURCEMANAGER_STRICT=2\n    -DOGRE_NODELESS_POSITIONING=OFF\n    -DOGRE_BUILD_DEPENDENCIES=${BUILD_DEPS}\n    -DSWIG_EXECUTABLE=${SWIG_EXECUTABLE}\n    ${RENDERSYSTEMS}\n    ${OTHER}\n    ${GENERATOR}\n    ..\n    WORKING_DIRECTORY build)\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.087890625,
          "content": "[build-system]\nrequires = [\"setuptools\", \"wheel\", \"scikit-build\", \"cmake\", \"pip\", \"swig\"]\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 5.2392578125,
          "content": "import os\nimport sys\nimport os.path\nimport re\nimport skbuild\nfrom skbuild import cmaker\n\n# This creates a list which is empty but returns a length of 1.\n# Should make the wheel a binary distribution and platlib compliant.\nclass EmptyListWithLength(list):\n    def __len__(self):\n        return 1\n\ndef cmake_process_manifest_hook(cmake_manifest):\n    return [name for name in cmake_manifest\n            if os.path.splitext(name)[1] not in (\".a\", \".h\", \".i\", \".pc\", \".cmake\", \".lib\")\n            or \"media/\" in name.replace(\"\\\\\", \"/\").lower()]\n\ndef main():\n    os.chdir(os.path.dirname(os.path.abspath(__file__)))\n\n    os.makedirs(\"Ogre\", exist_ok=True)\n\n    cmaker.CMaker.check_for_bad_installs = lambda: None # barks at our self-built deps\n\n    long_description = open(\"README.md\", encoding=\"utf-8\").read()\n    long_description = long_description.replace(\"![](Other\", \"![](https://raw.githubusercontent.com/OGRECave/ogre/master/Other\")\n    long_description = long_description.replace(\"](Docs\", \"](https://github.com/OGRECave/ogre/blob/master/Docs\")\n\n    cmake_source_dir = \".\"\n    cmake_args = [\n        \"-DOGRE_LIB_DIRECTORY=Ogre\",  # install into Python package\n        \"-DOGRE_BITES_STATIC_PLUGINS=ON\",\n        \"-DOGRE_NODELESS_POSITIONING=OFF\",\n        \"-DOGRE_BUILD_DEPENDENCIES=ON\",\n        \"-DOGRE_INSTALL_DEPENDENCIES=ON\",\n        \"-DOGRE_BUILD_SAMPLES=OFF\",\n        \"-DOGRE_BUILD_TOOLS=OFF\",\n        \"-DOGRE_BUILD_COMPONENT_CSHARP=OFF\",\n        \"-DOGRE_BUILD_COMPONENT_JAVA=OFF\",\n        \"-DOGRE_BUILD_COMPONENT_PROPERTY=OFF\",\n        \"-DOGRE_BUILD_RENDERSYSTEM_GL=ON\",\n        \"-DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=ON\",\n        \"-DOGRE_BUILD_RENDERSYSTEM_GLES2=ON\",\n        \"-DOGRE_BUILD_RENDERSYSTEM_TINY=ON\",\n        \"-DOGRE_BUILD_PLUGIN_ASSIMP=ON\",\n        \"-DOGRE_BUILD_PLUGIN_FREEIMAGE=OFF\",\n        \"-DOGRE_BUILD_PLUGIN_EXRCODEC=OFF\",\n        \"-DOGRE_BUILD_PLUGIN_CG=OFF\",\n        \"-DOGRE_BUILD_PLUGIN_BSP=OFF\",\n        \"-DOGRE_BUILD_PLUGIN_PCZ=OFF\",\n        # not yet wrapped components\n        \"-DOGRE_BUILD_COMPONENT_MESHLODGENERATOR=OFF\",\n        \"-DOGRE_BUILD_COMPONENT_VOLUME=OFF\"\n    ]\n\n    if sys.platform == \"win32\":\n        cmake_args += [\"-DOGRE_BIN_DIRECTORY=Ogre\", # direct dlls into python package\n                       \"-DOGRE_CFG_INSTALL_PATH=bin\", # but keep config files in bin, relative to Media\n                       \"-DOGRE_BUILD_RENDERSYSTEM_D3D9=OFF\", # do not require old runtime\n                       \"-DOGRE_BUILD_RENDERSYSTEM_VULKAN=ON\",\n                       \"-DOGRE_BUILD_PLUGIN_GLSLANG=ON\"\n                       ]\n    elif sys.platform == \"linux\":\n        cmake_args += [\"-DOGRE_GLSUPPORT_USE_EGL=ON\",\n                       \"-DOGRE_BUILD_RENDERSYSTEM_VULKAN=ON\",\n                       \"-DOGRE_BUILD_PLUGIN_GLSLANG=ON\",\n                       \"-DPYTHON_LIBRARY=dontcare\", # workaround issue with cmake & manylinux\n                       \"-DCMAKE_CXX_FLAGS=-s\", # strip assimp\n                       \"-DCMAKE_INSTALL_RPATH=$ORIGIN;$ORIGIN/OGRE\"]\n    elif sys.platform == \"darwin\":\n        cmake_args += [\"-DOGRE_BUILD_LIBS_AS_FRAMEWORKS=OFF\",\n                       \"-DCMAKE_OSX_ARCHITECTURES=arm64\",\n                       \"-DCMAKE_INSTALL_RPATH=@loader_path;@loader_path/OGRE\"]\n\n    version = re.search(\"project\\(OGRE VERSION (\\S+)\\)\", open(\"CMakeLists.txt\").read()).group(1)\n    # version += \".dev0\"\n\n    skbuild.setup(\n        name=\"ogre-python\",\n        version=version,\n        url=\"https://www.ogre3d.org\",\n        project_urls={\n            'Documentation': 'https://ogrecave.github.io/ogre/api/latest/manual.html',\n            'Source code': 'https://github.com/OGRECave/ogre',\n            'Issues': 'https://github.com/OGRECave/ogre/issues',\n            \"Funding\": \"https://www.patreon.com/ogre1\"\n        },\n        license=\"MIT\",\n        description=\"Object-Oriented Graphics Rendering Engine - python package\",\n        long_description=long_description,\n        long_description_content_type=\"text/markdown\",\n        packages=[\"Ogre\"],\n        package_data={},\n        maintainer=\"Pavel Rojtberg\",\n        ext_modules=EmptyListWithLength(),\n        python_requires=\">=3.6\",\n        classifiers=[\n            \"Development Status :: 5 - Production/Stable\",\n            \"Environment :: Console\",\n            \"Intended Audience :: Developers\",\n            \"Intended Audience :: Education\",\n            \"Intended Audience :: Information Technology\",\n            \"Intended Audience :: Science/Research\",\n            \"License :: OSI Approved :: MIT License\",\n            \"Operating System :: MacOS\",\n            \"Operating System :: Microsoft :: Windows\",\n            \"Operating System :: POSIX\",\n            \"Operating System :: Unix\",\n            \"Programming Language :: Python\",\n            \"Programming Language :: Python :: 3\",\n            \"Programming Language :: Python :: 3 :: Only\",\n            \"Programming Language :: Python :: 3.8\",\n            \"Programming Language :: C++\",\n            \"Programming Language :: Python :: Implementation :: CPython\",\n            \"Topic :: Scientific/Engineering\",\n            \"Topic :: Multimedia :: Graphics :: 3D Rendering\",\n            \"Topic :: Software Development\",\n        ],\n        cmake_args=cmake_args,\n        cmake_source_dir=cmake_source_dir,\n        cmake_process_manifest_hook=cmake_process_manifest_hook\n    )\n\nif __name__ == \"__main__\":\n    main()\n"
        }
      ]
    }
  ]
}