{
  "metadata": {
    "timestamp": 1736565939315,
    "page": 916,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tw1ddle/geometrize",
      "stars": 1959,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 4.08984375,
          "content": "stack: python 3.9\n\nbranches:\n  only:\n    - master\n\n# Note that builds run in the order the images are declared\nimage:\n  - Ubuntu2004\n  - macos-bigsur\n  - Visual Studio 2019\n\n# Define the build configurations\nenvironment:\n  GITHUB_API_KEY:\n    secure: w1zaTUARBAuhkAKUke5sBvSkVtlDGL8YfQxROzv5oGIynVJImn+KWGFVDxyjQore\n\n  matrix:\n    - BUILD_NAME: gcc_linux\n    - BUILD_NAME: clang_osx\n    #- BUILD_NAME: mingw_windows\n    #  QTDIR: C:\\Qt\\6.2\\mingw_64\n    #  MINGW: C:\\Qt\\Tools\\mingw810_64\n    - BUILD_NAME: msvc_windows\n      QTDIR: C:\\Qt\\6.2\\msvc2019_64\n\n# Exclude invalid build configurations\nmatrix:\n  exclude:\n    - image: Ubuntu2004\n      BUILD_NAME: mingw_windows\n    - image: Ubuntu2004\n      BUILD_NAME: msvc_windows\n    - image: Ubuntu2004\n      BUILD_NAME: clang_osx\n\n    - image: macos-bigsur\n      BUILD_NAME: mingw_windows\n    - image: macos-bigsur\n      BUILD_NAME: msvc_windows\n    - image: macos-bigsur\n      BUILD_NAME: gcc_linux\n\n    - image: Visual Studio 2019\n      BUILD_NAME: clang_osx\n    - image: Visual Studio 2019\n      BUILD_NAME: gcc_linux\n\nconfiguration:\n  - debug\n  - release\n\n# Do configuration-specific build steps\nfor:\n\n  # Linux GCC\n  - matrix:\n      only:\n        - image: Ubuntu2004\n          BUILD_NAME: gcc_linux\n\n    install:\n      # Configure CI bot git email/username\n      - git config --global user.name \"AppVeyor CI Bot\"\n      - git config --global user.email \"appveyor@appveyor.org\"\n\n      - git submodule update --init --recursive\n      - git submodule update --remote --merge\n\n      # Push the latest versions of the submodules to the repository - note that these Linux builds run first, so other build platforms don't do this step\n      - |\n        if [[ `git status --porcelain` ]]; then\n          git checkout master\n          git add lib/cereal\n          git add lib/dataslinger\n          git add lib/geometrize\n          git add resources/scripts\n          git add resources/templates\n          git add resources/web_export\n          git commit --message \"Build bot updating submodule\"\n          git remote rm origin\n          git remote add origin https://${GITHUB_API_KEY}@github.com/Tw1ddle/geometrize.git > /dev/null 2>&1\n          git push origin master\n        fi\n\n      - sudo apt update -qq --yes --force-yes\n      - sudo apt install libgl1-mesa-dev --yes --force-yes # Needed to avoid -lGL linker error\n\n      - export PATH=$HOME/Qt/6.1/gcc_64/bin:$PATH\n\n\n    before_build:\n      # Debug prints\n      - cd $HOME/Qt\n      - ls -a\n\n      - cd $APPVEYOR_BUILD_FOLDER\n      - qmake geometrize.pro\n\n    build_script:\n      - cd $APPVEYOR_BUILD_FOLDER\n      - make\n\n\n\n  # Clang OSX\n  - matrix:\n      only:\n        - image: macos-bigsur\n          BUILD_NAME: clang_osx\n\n    install:\n      - git submodule update --init --recursive\n      - export PATH=$HOME/Qt/6.1/macos/bin:$PATH\n\n    before_build:\n      # Debug prints\n      - cd $HOME/Qt\n      - ls -a\n\n      - cd $APPVEYOR_BUILD_FOLDER     \n      - qmake geometrize.pro\n\n    build_script:\n      - cd $APPVEYOR_BUILD_FOLDER\n      - make\n\n\n\n  # Windows MSVC\n  - matrix:\n      only:\n        - image: Visual Studio 2019\n          BUILD_NAME: msvc_windows\n\n    install:\n      - git submodule update --init --recursive\n      - set PATH=%PATH%;%QTDIR%\\bin\n      - call \"%QTDIR%\\bin\\qtenv2.bat\"\n      - call \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64\n      - set make=nmake.exe\n\n    before_build:\n      # Debug prints\n      - cd %QTDIR%\n      - ls -a\n\n      - cd %APPVEYOR_BUILD_FOLDER%\n      - qmake geometrize.pro\n\n    build_script:\n      - cd %APPVEYOR_BUILD_FOLDER%\n      - '%make%'\n\n\n\n  # # Windows Mingw\n  # - matrix:\n      # only:\n        # - image: Visual Studio 2019\n          # BUILD_NAME: mingw_windows\n\n    # install:\n      # - git submodule update --init --recursive\n      # - set PATH=%PATH%;%QTDIR%\\bin;%MINGW%\\bin\n      # - call \"%QTDIR%\\bin\\qtenv2.bat\"\n      # - set make=mingw32-make.exe\n\n    # before_build:\n      # # Debug prints\n      # - cd %QTDIR%\n      # - ls -a\n    \n      # - cd %APPVEYOR_BUILD_FOLDER%\n      # - qmake geometrize.pro\n\n    # build_script:\n      # - cd %APPVEYOR_BUILD_FOLDER%\n      # - '%make%'"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3486328125,
          "content": "# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Build Folders\n/build*\n\n# Per-use project config\n*.pro.user\n\n# Python bytecode\n*.pyc\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.943359375,
          "content": "[submodule \"lib/cereal\"]\n\tpath = lib/cereal\n\turl = https://github.com/USCiLab/cereal\n[submodule \"lib/chaiscript\"]\n\tpath = lib/chaiscript\n\turl = https://github.com/ChaiScript/ChaiScript\n[submodule \"lib/geometrize\"]\n\tpath = lib/geometrize\n\turl=https://github.com/Tw1ddle/geometrize-lib\n[submodule \"resources/templates\"]\n\tpath = resources/templates\n\turl = https://github.com/Tw1ddle/geometrize-templates\n[submodule \"resources/web_export\"]\n\tpath = resources/web_export\n\turl = https://github.com/Tw1ddle/geometrize-web-export\n[submodule \"resources/scripts\"]\n\tpath = resources/scripts\n\turl = https://github.com/Tw1ddle/geometrize-scripts\n[submodule \"translations\"]\n\tpath = translations\n\turl = https://github.com/Tw1ddle/geometrize-translations\n[submodule \"lib/burstlinker/burstlinker\"]\n\tpath = lib/burstlinker/burstlinker\n\turl = https://github.com/Tw1ddle/BurstLinker\n[submodule \"lib/dataslinger\"]\n\tpath = lib/dataslinger\n\turl = https://github.com/Tw1ddle/dataslinger-lib\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.6044921875,
          "content": "Geometrize is an app for geometrizing images into geometric primitives.\n\nGeometrize is copyright (c) 2021 Sam Twidale (https://samcodes.co.uk/)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.453125,
          "content": "[![Geometrize Logo](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/logo.png?raw=true \"Geometrize logo\")](https://www.geometrize.co.uk/)\n\n[![License](https://img.shields.io/badge/License-GPL%20v3-blue.svg?style=flat-square)](https://github.com/Tw1ddle/geometrize/blob/master/LICENSE)\n[![Geometrize AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/Tw1ddle/geometrize)](https://ci.appveyor.com/project/Tw1ddle/geometrize)\n\n[Geometrize](https://www.geometrize.co.uk/) is a desktop app that geometrizes images into geometric primitives.\n\nDownload Geometrize [here](https://www.geometrize.co.uk/), or run the [web demo](https://www.samcodes.co.uk/project/geometrize-haxe-web/) in your browser.\n\n[![Geometrize Shape Animation](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/windflowers_geometrized.gif?raw=true)](https://www.geometrize.co.uk/)\n\n## Features\n\n * Recreate images as geometric primitives.\n * Start with hundreds of images with preset settings.\n * Export geometrized images to SVG, PNG, JPG, GIF and more.\n * Export shape data as JSON for use in custom projects and creations.\n * Control the algorithm at the core of Geometrize with ChaiScript scripts.\n\n## Usage\n\nOpen the app, select an image, pick your desired shape types, and hit start.\n\n[![Geometrize Getting Started Animation](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/startup_geometrized.gif?raw=true)](https://www.geometrize.co.uk/)\n\nVideo tutorials for Geometrize are posted [here](https://www.youtube.com/playlist?list=PLe9ogi_J4cFgcqLdpmPC7GdFV5ohJPEzN):\n\n<a href=\"https://www.youtube.com/watch?v=qdp_D3k59Y4&list=PLe9ogi_J4cFgcqLdpmPC7GdFV5ohJPEzN&index=1\" target=\"_blank\" rel=\"noopener\"><img width=\"300\" alt=\"Geometrize Video Tutorials\" src=\"https://github.com/Tw1ddle/geometrize/blob/master/screenshots/geometrize_video_tutorials.png?raw=true\"></a>\n\n## Shape Comparison\n\nThe matrix shows results for circles, triangles, rotated rectangles, rotated ellipses and all supported shapes at 50, 200 and 500 total shapes:\n\n| -                  | 50 Shapes     | 200 Shapes    | 500 Shapes   |\n| ------------------ | ------------- | ------------- | ------------ |\n| Circles            | [![50 Circles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_50_circles.png?raw=true)](https://www.geometrize.co.uk/) | [![200 Circles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_200_circles.png?raw=true)](https://www.geometrize.co.uk/) | [![500 Circles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_500_circles.png?raw=true)](https://www.geometrize.co.uk/) |\n| Triangles          | [![50 Triangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_50_triangles.png?raw=true)](https://www.geometrize.co.uk/) | [![200 Triangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_200_triangles.png?raw=true)](https://www.geometrize.co.uk/) | [![500 Triangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_500_triangles.png?raw=true)](https://www.geometrize.co.uk/) |\n| Rotated Rectangles | [![50 Rotated Rectangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_50_rotated_rectangles.png?raw=true)](https://www.geometrize.co.uk/) | [![200 Rotated Rectangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_200_rotated_rectangles.png?raw=true)](https://www.geometrize.co.uk/) | [![500 Rotated Rectangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_500_rotated_rectangles.png?raw=true)](https://www.geometrize.co.uk/) |\n| Rotated Ellipses   | [![50 Rotated Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_50_rotated_ellipses.png?raw=true)](https://www.geometrize.co.uk/) | [![200 Rotated Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_200_rotated_ellipses.png?raw=true)](https://www.geometrize.co.uk/) | [![500 Rotated Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_500_rotated_ellipses.png?raw=true)](https://www.geometrize.co.uk/) |\n| All Shapes         | [![50 All Shapes](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_50_all_shapes.png?raw=true)](https://www.geometrize.co.uk/) | [![200 All Shapes](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_200_all_shapes.png?raw=true)](https://www.geometrize.co.uk/) | [![500 All Shapes](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/seagull_500_all_shapes.png?raw=true)](https://www.geometrize.co.uk/) |\n\n## Animations\n\nBy batch editing and exporting images, and then combining the results using a tool such as [ScreenToGif](https://github.com/NickeManarin/ScreenToGif), you can produce animations using Geometrize:\n\n[![Geometrized Horse Animation Rectangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/muybridge_horse_rectangles.gif?raw=true)](https://www.geometrize.co.uk/)\n\n[![Geometrized Horse Animation Triangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/muybridge_horse_triangles.gif?raw=true)](https://www.geometrize.co.uk/)\n\n[![Geometrized Horse Animation Circles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/muybridge_horse_circles.gif?raw=true)](https://www.geometrize.co.uk/)\n\n## Screenshots\n\nFor more examples of geometrized images, see the [gallery](https://gallery.geometrize.co.uk/).\n\n[![Geometrized Flower 330 Rotated Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/flower.png?raw=true \"Flower - 330 Rotated Ellipses\")](https://www.geometrize.co.uk/)\n\n[![Geometrized Train 230 Rotated Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/train.png?raw=true \"Train - 230 Rotated Ellipses\")](https://www.geometrize.co.uk/)\n\n[![Geometrized Trees 210 Ellipses](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/tree_under_clouds.png?raw=true \"Tree Under Clouds - 210 Ellipses\")](https://www.geometrize.co.uk/)\n\n[![Geometrized Woodland Cemetery 600 Rotated Rectangles](https://github.com/Tw1ddle/geometrize/blob/master/screenshots/woodland_cemetery.png?raw=true \"Woodland Cemetery - 600 Rotated Rectangles\")](https://www.geometrize.co.uk/)\n\n## Resources\n\n * See the Geometrize [resources](https://resources.geometrize.co.uk/) page.\n\n## Building\n\nGeometrize is a Qt app written in C++.\n\n * Download and install Qt 5.10 or above.\n * Install Python 3.x and add it to your path. The build process includes a few Python scripts for creating resource files.\n * Checkout this repository and all submodules, and build and run [geometrize.pro](https://github.com/Tw1ddle/geometrize/blob/master/geometrize.pro) within Qt Creator.\n \nIf you want to develop or extend Geometrize, look at the [top level repo](https://github.com/Tw1ddle/geometrize-top-level-repo) for a high-level overview of the repositories in the Geometrize project.\n\n## Notes\n * Got an idea or suggestion? Open an issue on GitHub, or send Sam a message on [Twitter](https://twitter.com/Sam_Twidale).\n * Geometrize is inspired by [primitive](https://github.com/fogleman/primitive), a Go library and tool created by [Michael Fogleman](https://github.com/fogleman).\n * There is up to date Doxygen documentation for [Geometrize](https://appdocs.geometrize.co.uk/index.html) and the underlying Geometrize [library](https://docs.geometrize.co.uk/).\n * Also see the Geometrize [gallery](https://gallery.geometrize.co.uk/), [bot](https://twitter.com/Geometrizer) and [tweening demo](https://tweens.geometrize.co.uk/).\n"
        },
        {
          "name": "geometrize.pro",
          "type": "blob",
          "size": 2.025390625,
          "content": "QT += core gui network svg\n\ngreaterThan(QT_MAJOR_VERSION, 5) {\n    QT += svgwidgets\n}\n\nTARGET = Geometrize\nTEMPLATE = app\n\n# Put intermediate files in separate folders to keep the build directory tidy\nOBJECTS_DIR = obj\nMOC_DIR = qt_gen\nRCC_DIR = qt_gen\nUI_DIR = qt_gen\n\n# Enable C++17 features\nCONFIG += c++17\n\n# Disable assertions in release builds (for gcc, clang etc builds)\nCONFIG(release, debug|release): DEFINES += NDEBUG\n\n# Flag for ChaiScript linking\n# Note that mingw32 builds may not work with the compiled-in stdlib because of a \"too many sections error\" with Chaiscript\nmsvc:QMAKE_CXXFLAGS += -bigobj\n\n# Options for the Mac AppStore version of Geometrize\nmacx {\n    include($$PWD/osx/geometrize_osx.pri)\n}\n\n# Some versions of gcc have linker issues like:\n# //lib/x86_64-linux-gnu/libdl.so.2: error adding symbols: DSO missing from command line\nlinux {\n    *-g++* {\n        LIBS += -ldl\n    }\n}\n\n# Include library dependencies\nINCLUDEPATH += $$PWD/lib/cereal/include \\\n    $$PWD/lib/chaiscript/include\n\ninclude($$PWD/lib/geometrize/geometrize/geometrize.pri)\ninclude($$PWD/lib/burstlinker/burstlinker.pri)\n\n# Optional support for WebSocket connections for sending and receiving\n# images/data. Uses Boost, see https://github.com/Tw1ddle/dataslinger-lib\n\n#CONFIG += DATASLINGER_INCLUDED\n#DEFINES += DATASLINGER_INCLUDED\n\nDATASLINGER_INCLUDED {\n    # Include Boost - you will need to set your own path\n    INCLUDEPATH += C:/Development/boost_1_68_0/\n    DEPENDPATH += C:/Development/boost_1_68_0/\n\n    # Include Boost libs\n    LIBS += \"-LC:/Development/boost_1_68_0/stage/x64/lib/\"\n\n    include($$PWD/lib/dataslinger/dataslinger.pri)\n}\n\n# Include the Geometrize headers, sources, UI forms\ninclude($$PWD/geometrize/sources.pri)\n\n# Generate localization TS files and then binary QM files, which it puts into the resources folder\ninclude($$PWD/translations/translations.pri)\n\n# Include resources that Geometrize requires, such as icons, images and scripts\n# Note this must come last, as resource files are automatically generated\ninclude($$PWD/resources/resources.pri)\n"
        },
        {
          "name": "geometrize",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "osx",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}