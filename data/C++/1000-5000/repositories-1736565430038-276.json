{
  "metadata": {
    "timestamp": 1736565430038,
    "page": 276,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jellyfin/jellyfin-media-player",
      "stars": 3390,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.36328125,
          "content": "---\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nConstructorInitializerIndentWidth: 2\nAlignEscapedNewlinesLeft: false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: false\nAlwaysBreakBeforeMultilineStrings: false\nBreakBeforeBinaryOperators: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBinPackParameters: true\nColumnLimit:     100\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nDerivePointerBinding: false\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: All\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 60\nPenaltyBreakString: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 1000\nPointerBindsToType: true\nSpacesBeforeTrailingComments: 1\nCpp11BracedListStyle: false\nStandard:        Cpp03\nIndentWidth:     2\nTabWidth:        2\nUseTab:          Never\nBreakBeforeBraces: Allman\nIndentFunctionDeclarationAfterType: false\nSpacesInParentheses: false\nSpacesInAngles:  false\nSpaceInEmptyParentheses: false\nSpacesInCStyleCastParentheses: false\nSpaceAfterControlStatementKeyword: true\nSpaceBeforeAssignmentOperators: true\nContinuationIndentWidth: 0\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.501953125,
          "content": "# Don't use the C++ new,delete check since it doesn't work with Qt.\n# Enable a bunch of modernization checks\nChecks:          'clang-analyzer-alpha.*,-clang-analyzer-alpha.deadcode.UnreachableCode,-clang-analyzer-core.CallAndMessage,-clang-analyzer-cplusplus.NewDeleteLeaks,misc-forward-declaration-namespace,modernize-use-auto,modernize-use-nullptr,modernize-redudant-void-arg,readability-inconsistent-declaration-parameter-name,readability-simplify-boolean-expr,readability-container-size-empty,performance-for-range-copy,readability-identifier-naming,modernize-use-override,google-explicit-constructor'\nCheckOptions:\n    - key: readability-identifier-naming.ClassCase\n      value: CamelCase\n    - key: readability-identifier-naming.EnumCase\n      value: CamelCase\n    - key: readability-identifier-naming.FunctionCase\n      value: lowerCase\n    - key: readability-identifier-naming.GlobalFunction\n      value: CamelCase\n    - key: readability-identifier-naming.GlobalVarableCase\n      value: camelBack\n    - key: readability-identifier-naming.GlobalVariablePrefix\n      value: g_\n    - key: readability-identifier-naming.VariableCase\n      value: camelBack\n    - key: readability-identifier-naming.PrivateMemberPrefix\n      value: m_\n    - key: readability-identifier-naming.ProtectedMemberPrefix\n      value: m_\n    - key: readability-identifier-naming.MemberCase\n      value: camelBack\n    - key: readability-identifier-naming.Method\n      value: camelBack\n    - key: readability-identifier-naming.ClassMethod\n      value: CamelCase\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.53125,
          "content": "*.pro.user*\ndependencies/*\nCMakeLists.txt.user\nCMakeLists.txt.user.*\nbuild/*\n.idea\n.install_pkg\n.openelec-unpack\nQtCreatorDeployment.txt\nvagrant/ubuntu-x86_64/.vagrant\nvagrant/windows-x86_64/.vagrant\nbuild-*\ncmake-build-*\n*.pyc\nconaninfo.txt\nconanbuildinfo.*\nweb-client\n.DS_Store\n.*libreelec*\ntoolchain.cmake\n.sublime-settings\n.last_wc_version\ndebian/*.debhelper.log\ndebian/.debhelper/\ndebian/jellyfin-media-player/\ndebian/files\ndebian/jellyfin-media-player.substvars\ndebian/debhelper-build-stamp\ndist.zip\nobj-x86_64-linux-gnu/\ndeployment/dist\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BuildAndInstall.sh",
          "type": "blob",
          "size": 0.1474609375,
          "content": "#!/bin/bash\n./download_webclient.sh\ncd build\ncmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/usr/local/ ..\nmake -j4\nsudo make \nsudo make install"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.013671875,
          "content": "cmake_minimum_required(VERSION 3.5.0 FATAL_ERROR)\n\n# use a toolchain file if any for Embedded\nif (EXISTS \"${CMAKE_SOURCE_DIR}/toolchain.cmake\")\n  set(CMAKE_TOOLCHAIN_FILE \"${CMAKE_SOURCE_DIR}/toolchain.cmake\")\nendif()\n\nproject(JellyfinMediaPlayer CXX C)\n\n# we want this to be able to run clang-tidy\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE BOOL \"\" FORCE)\n\noption(OPENELEC \"Make an OpenELEC build\" OFF)\noption(LINUX_X11POWER \"Enable non D-Bus screensaver management\" OFF)\n\nif((NOT LINUX_X11POWER) AND (UNIX AND (NOT APPLE)))\n  set(LINUX_DBUS ON)\nendif()\n\nif(OPENELEC)\n  add_definitions(-DKONVERGO_OPENELEC=1)\n  Message(STATUS \"Making an OpenELEC build\")\nendif(OPENELEC)\n\nif(BUILD_TARGET STREQUAL \"RPI\")\n  add_definitions(-DTARGET_RPI=1)\n  set(RPI_LIBS bcm_host)\n  Message(STATUS \"Build for Raspberry PI target\")\nendif(BUILD_TARGET STREQUAL \"RPI\")\n\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/CMakeModules/\")\nset(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Core)\n\nmacro(set_policy _POLICY _VALUE)\n  if(POLICY ${_POLICY})\n    cmake_policy(SET ${_POLICY} ${_VALUE})\n  endif()\nendmacro()\n\nset_policy(CMP0020 NEW)\nset_policy(CMP0017 NEW)\nset_policy(CMP0058 NEW)\nset_policy(CMP0026 OLD)\nset_policy(CMP0071 NEW)\nset_policy(CMP0072 NEW)\nset_policy(CMP0148 OLD)\n\ninclude(utils)\ninclude(CompilerFlags)\ninclude(DependencyConfiguration)\ninclude(QtConfiguration)\ninclude(VersionConfiguration)\ninclude(NameConfiguration)\ninclude(PlayerConfiguration)\ninclude(InputConfiguration)\ninclude(ClangTidy)\n\nadd_definitions(-DQS_LOG_LINE_NUMBERS -DQS_LOG_SEPARATE_THREAD)\n\nif(APPLE)\n  include(AppleConfiguration)\nelseif(WIN32)\n  include(Win32Configuration)\nelseif(UNIX AND (NOT APPLE))\n  include(LinuxConfiguration)\nendif(APPLE)\n\nif (Qt5_POSITION_INDEPENDENT_CODE)\n  SET(CMAKE_POSITION_INDEPENDENT_CODE ON)\nendif(Qt5_POSITION_INDEPENDENT_CODE)\n\nadd_subdirectory(external)\nadd_subdirectory(src)\n\ninclude(CPackConfiguration)\n\nadd_custom_target(install_app_bundle COMMAND ${CMAKE_COMMAND} -P cmake_install.cmake DEPENDS JellyfinMediaPlayer)\n"
        },
        {
          "name": "CMakeModules",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.6728515625,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n        51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.0517578125,
          "content": "# Jellyfin Media Player\n\nDesktop client using jellyfin-web with embedded MPV player. Supports Windows, Mac OS,\nand Linux. Media plays within the same window using the jellyfin-web interface unlike\nJellyfin Desktop. Supports audio passthrough.\n\n![Screenshot of Jellyfin Media Player](https://raw.githubusercontent.com/iwalton3/mpv-shim-misc-docs/master/images/jmp-player-win.png)\n\nDownloads:\n - [Windows, Mac, and Linux Releases](https://github.com/jellyfin/jellyfin-media-player/releases)\n   - Note for Mac users: builds for Intel require macOS 12+ and Apple Silicon builds requires macOS 14+\n - [Flathub (Linux)](https://flathub.org/apps/details/com.github.iwalton3.jellyfin-media-player)\n\nRelated Documents:\n - Web client: Application uses server-provided web client.\n - Web client integration documentation: [for-web-developers.md](https://github.com/jellyfin/jellyfin-media-player/blob/master/for-web-developers.md)\n - API Docs in [client-api.md](https://github.com/jellyfin/jellyfin-media-player/blob/master/client-api.md)\n - Tip: For help building, look at the GitHub Actions file!\n\n## Building at a glance (Linux)\n\nTo download the latest stable release, get the lattest version tag from the [latest releases page](https://github.com/jellyfin/jellyfin-media-player/releases/latest) and append the following to your pull command during the build phase for JMP \"--branch $VERSIONTAG --single-branch\"\n\nExample:\n```bash\ngit clone https://github.com/jellyfin/jellyfin-media-player.git --branch v1.9.1 --single-branch\n```\n\n\n### Ubuntu based systems\n\nInstall dependencies:\n```bash\nsudo apt install build-essential autoconf automake libtool libharfbuzz-dev libfreetype6-dev libfontconfig1-dev libx11-dev libxrandr-dev libvdpau-dev libva-dev mesa-common-dev libegl1-mesa-dev yasm libasound2-dev libpulse-dev libuchardet-dev zlib1g-dev libfribidi-dev git libgnutls28-dev libgl1-mesa-dev libsdl2-dev cmake wget meson nasm ninja-build python3 g++ qtwebengine5-dev qtquickcontrols2-5-dev libqt5x11extras5-dev libcec-dev qml-module-qtquick-controls qml-module-qtwebengine qml-module-qtwebchannel qtbase5-private-dev curl unzip\n```\n\nBuild commands for Ubuntu:\n```bash\nmkdir ~/jmp; cd ~/jmp\ngit clone https://github.com/mpv-player/mpv-build.git\ncd mpv-build\n./use-mpv-release\n./update\necho -Dlibmpv=true > mpv_options\n./rebuild -j`nproc`\nsudo ./install\nsudo ln -s /usr/local/lib/x86_64-linux-gnu/libmpv.so /usr/local/lib/x86_64-linux-gnu/libmpv.so.1\nsudo ln -sf /usr/local/lib/x86_64-linux-gnu/libmpv.so /usr/local/lib/libmpv.so.2\nsudo ldconfig\ncd ~/jmp/\ngit clone https://github.com/jellyfin/jellyfin-media-player.git\ncd jellyfin-media-player\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/usr/local/ -G Ninja ..\nninja\nsudo ninja install\nrm -rf ~/jmp/\n```\n\n### Fedora based systems\n\nInstall dependencies:\n```bash\nsudo dnf install autoconf automake libtool freetype-devel libXrandr-devel libvdpau-devel libva-devel  mesa-libGL-devel libdrm-devel libX11-devel  mesa-libEGL-devel yasm  alsa-lib pulseaudio-libs-devel zlib-devel fribidi-devel git gnutls-devel mesa-libGLU-devel  SDL2-devel cmake wget python g++  qt-devel libcec-devel qt5-qtbase-devel curl unzip qt5-qtwebchannel-devel qt5-qtwebengine-devel qt5-qtx11extras-devel mpv.x86_64 qwt-qt5-devel.x86_64 qt5-qtbase.x86_64 meson.noarch ninja-build.x86_64 qt5-qtbase-private-devel mpv-libs.x86_64\n```\n\nBuild commands for Fedora:\n\nNote, the only real differences here is that libraries are in diffrent directories on Fedora systems.\n```bash\nmkdir ~/jmp; cd ~/jmp\ngit clone https://github.com/mpv-player/mpv-build.git\ncd mpv-build/\necho -Dlibmpv=true > mpv_options\necho -Dpipewire=disabled >> mpv_options # hopefully temporary\n./rebuild -j`nproc`\nsudo ./install\nsudo mkdir /usr/local/lib/x86_64-linux-gnu\nsudo ln -s /usr/local/lib64/libmpv.so /usr/local/lib/x86_64-linux-gnu/libmpv.so.1\nsudo ln -s /usr/local/lib64/libmpv.so /usr/local/lib/x86_64-linux-gnu/libmpv.so\nsudo ldconfig\ncd ~/jmp/\ngit clone https://github.com/jellyfin/jellyfin-media-player.git\ncd jellyfin-media-player/\nmkdir build\ncd build/\ncmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/usr/local/ ..\nmake -j`nproc`\nsudo make install\n```\n\n## Building for Windows\n\nPlease install:\n - [cmake](https://cmake.org/download/) - cmake-3.20.0-windows-x86_64.msi\n   - Add cmake to the path.\n - [ninja](https://github.com/ninja-build/ninja/releases)\n   - Place this in the build directory.\n - [QT](https://www.qt.io/download-thank-you?hsLang=en)\n   - This package is huge. You also need to make a QT account...\n   - Check \"MSVC 2019 64-bit\" and \"Qt WebEngine\" under QT 5.15.2.\n - [VS2019 Build Tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019)\n   - Again this will use a lot of disk space. The installer is small though.\n - [libmpv1](https://sourceforge.net/projects/mpv-player-windows/files/libmpv/)\n   - Place the contents in the build directory, in a subfolder called `mpv`.\n   - Move the contents of the `include` folder to an `mpv` folder inside the `include` folder.\n   - Move the `mpv-1.dll` to `mpv.dll`.\n - [WIX](https://wixtoolset.org/releases/v3.11.2/stable)\n\nYou need to run these commands in git bash.\n\n```bash\ngit clone https://github.com/jellyfin/jellyfin-media-player\ncd jellyfin-media-player\nmkdir build\ncd build\n```\n\nOpen the \"x86_x64 Cross Tools Command Prompt for VS 2019\". `cd` to the `build` directory. Run:\n\n```\nset PATH=%PATH%;C:\\Program Files (x86)\\WiX Toolset v3.11\\bin\ncmake -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=output -DCMAKE_MAKE_PROGRAM=ninja.exe -DQTROOT=C:/Qt/5.15.2/msvc2019_64 -DMPV_INCLUDE_DIR=mpv/include -DMPV_LIBRARY=mpv/libmpv-2.dll -DCMAKE_INSTALL_PREFIX=output ..\nlib /def:mpv\\mpv.def /out:mpv\\mpv.dll.lib /MACHINE:X64\nninja\nninja windows_package\n```\n\n## Building for MacOS\n\nInstall [QT 5.15.2](https://www.qt.io/download-thank-you?hsLang=en), remember to check `Qt WebEngine`.\n\nThen run the following commands (replace <QT_DIR> with your QT installation location):\n\n```bash\nbrew install mpv ninja\nmkdir build\ncd build\ncmake -GNinja -DQTROOT=<QT_DIR> -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=output ..\nninja install\n```\n\nTo create redistributable bundle, some library paths need to be fixed. At the project root directory, run:\n\n```bash\npython3 ./scripts/fix-install-names.py ./build/output/Jellyfin\\ Media\\ Player.app\n```\n\n## Log File Location\n\n - Windows: `%LOCALAPPDATA%\\JellyfinMediaPlayer\\logs`\n - Linux: `~/.local/share/jellyfinmediaplayer/logs/`\n - Linux (Flatpak): `~/.var/app/com.github.iwalton3.jellyfin-media-player/data/jellyfinmediaplayer/logs/`\n - macOS: `~/Library/Logs/Jellyfin Media Player/`\n\n## Config File Location\n\nThe main configuration file is called `jellyfinmediaplayer.conf`. You can also add a `mpv.conf` to configure MPV directly.\n\n - Windows: `%LOCALAPPDATA%\\JellyfinMediaPlayer\\`\n - Linux: `~/.local/share/jellyfinmediaplayer/`\n - Linux (Flatpak): `~/.var/app/com.github.iwalton3.jellyfin-media-player/data/jellyfinmediaplayer/`\n - macOS: `~/Library/Application Support/Jellyfin Media Player/`\n\n## Web Debugger\n\nTo get browser devtools, use remote debugging.\n\n - Run the application with the command argument `--remote-debugging-port=9222`.\n - Open Chromium or Google Chrome.\n - Navigate to `chrome://inspect/#devices`.\n - You can now access the developer tools.\n\nIf you have problems:\n\n - Make sure \"Discover Network Targets\" is checked.\n - Make sure `localhost:9222` is in the list under \"Configure...\".\n - Make sure `--remote-debugging-port=9222` is specified correctly.\n\n## License\n\nJellyfin Media Player is licensed under GPL v2. See the ``LICENSE`` file.\nLicenses of dependencies are summarized under ``resources/misc/licenses.txt``.\nThis file can also be printed at runtime when using the ``--licenses`` option.\n\n## Unofficial Plugin Support\n\nYou can enable experimental support for [Skip Intro](https://github.com/jumoog/intro-skipper/) in client settings. These are included for convenience only and is not an endorsement or long-term commitment to ensure functionality. See `src/native` for details on what the plugins modify code-wise.\n\n## Known Issues\n\nIf you build MPV from source, you currently need to disable pipewire or else the client will segfault.\n"
        },
        {
          "name": "bundle",
          "type": "tree",
          "content": null
        },
        {
          "name": "client-api.md",
          "type": "blob",
          "size": 6.4931640625,
          "content": "To connect to the API:\n\n```html\n  <script src=\"qrc:///qtwebchannel/qwebchannel.js\"></script>\n  <script>\n      new QWebChannel(window.qt.webChannelTransport, function(channel) {\n          // Called when API is ready\n          window.channel = channel;\n      });\n  </script>\n```\n\nThe API endpoints will be present on `window.channel.objects`. To call them, include a function in the call to recieve the callback data. (The calls are async.)\n\nTo connect to an event, call the `.connect` method on the event and pass a callback. To disconnect the callback, call the `.disconnect` method and pass the same callback.\n\nAn example call to play a video URL:\n\n```js\nwindow.channel.objects.player.load(\"your_video_file\", {}, {type: \"video\", headers: {\"User-Agent\": \"TestPlayer\"}, startMilliseconds: 0, frameRate: 0, media: {}}, \"\", \"\", function(){window.channel.objects.player.play()});\n```\n\n# display\ndisplay/DisplayComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/display/DisplayComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/display/DisplayComponent.cpp)\n## funcs:\n- void monitorChange()\n- bool initializeDisplayManager()\n- bool restorePreviousVideoMode()\n- void switchCommand(str command) - uses string command to set display modes\n## events:\n- refreshRateChanged(float rate)\n# input\ninput/InputComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/input/InputComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/input/InputComponent.cpp)\n## funcs:\n- void executeActions(list[str] actions)\n## events:\n- receivedInput(str source, str keycode, keystate keystate)\n- hostInput(list[str] actions)\n## types:\n- keystate: enum { KeyDown, KeyUp, KeyPressed }\n# player\nplayer/PlayerComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/player/PlayerComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/player/PlayerComponent.cpp)\n## funcs:\n- void setAudioConfiguration()\n- void updateAudioDeviceList()\n- void updateSubtitleSettings()\n- void updateVideoSettings()\n- bool load(str url, dict options, dict metadata, str audioStream=\"\", str subtitleStream=\"\")\n    - options: dict { int startMilliseconds, bool autoplay }\n    - metadata: dict { bool interlaced, float frameRate, str type }\n        - type can be \"video\" or \"music\"\n    - audioStream: \"#\" + index from mkv, or pass external url\n    - subtitleStream: \"#\" + index from mkv, or pass external url\n- void queueMedia(str url, dict options, dict metadata, str audioStream, str subtitleStream)\n- void clearQueue()\n- void seekTo(int ms)\n- void stop()\n- void streamSwitch()\n- void pause()\n- void play()\n- void setVolume(int volume) - 0-100\n- int volume()\n- void setMuted(bool muted)\n- bool muted()\n- list[dict{str name, str description}] getAudioDeviceList()\n- void setAudioDevice(str name)\n- void setAudioStream(str audioStream)\n- void setSubtitleStream(str subtitleStream)\n    - subtitleStream: \"#\" + index from mkv, or pass external url\n- void setAudioDelay(int ms)\n- void setSubtitleDelay(int ms)\n- void setPlaybackRate(int rate) - 1000 = normal speed\n- int getPosition()\n- void setVideoOnlyMode(bool enable) - hides webview\n- bool checkCodecSupport(str codec) - can check for vc1 and mpeg2video\n- list[codecdriver] installedCodecDrivers()\n- list[str] installedDecoderCodecs() - returns names of supported codecs (eg h264)\n- void userCommand(str command)\n- void setVideoRectangle(int x, int y, int w, int h) - use all -1 to revert to default\n## events:\n- playing()\n- buffering(float percent)\n- paused()\n- finished()\n- canceled()\n- error(str msg)\n- stopped() - deprecated, listen for finished and canceled\n- stateChanged(state newState, state oldState)\n- videoPlaybackActive(bool active) - true if the video (or music) is actually playing\n- windowVisible(bool visible)\n- updateDuration(int ms) - duration of the file\n- positionUpdate(int ms) - emitted twice a second\n- onVideoRecangleChanged()\n- onMpvEvents()\n## types:\n- codecdriver: see src/player/CodecsComponent.h > struct CodecDriver\n- state: enum { finished, canceled, error, paused, playing, buffering }\n# power\npower/PowerComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/power/PowerComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/power/PowerComponent.cpp)\n## funcs:\n- bool checkCap(powercapabilities capability)\n- bool canPowerOff()\n- bool canReboot()\n- bool canSuspend()\n- bool canRelaunch() - true for OPENELEC only...\n- int getPowerCapabilities() - always returns 0...\n- bool PowerOff()\n- bool Reboot()\n- bool Suspend()\n- void setScreensaverEnabled(bool enabled)\n## events:\n- screenSaverEnabled()\n- screenSaverDisabled()\n## types:\n- powercapabilities - enum { PowerOff = 1, Reboot = 2, Suspend = 4, Relaunch = 8 }\n# settings \nsettings/SettingsComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/settings/SettingsComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/settings/SettingsComponent.cpp)\n## funcs:\n- void cycleSettingCommand(str args)\n- void setSettingCommand(str args)\n- void setValue(str section, str key, str value)\n- void setValues(dict options)\n- any value(str section, str key)\n- any allValues(str section)\n- void removeValue(str sectionOrKey)\n- void resetToDefaultAll()\n- coid resetToDefault(str sectionId)\n- list settingDescriptions()\n- str getWebClientUrl(bool desktop)\n## events:\n- groupUpdate(str section, any description) - Fired when a section's description is updated.\n- sectionValueUpdate(str section, dict values) - Sends dictionary of updated mpv key:value pairs.\n# system\nsystem/SystemComponent - [header](https://github.com/plexinc/plex-media-player/blob/master/src/system/SystemComponent.h), [implementation](https://github.com/plexinc/plex-media-player/blob/master/src/system/SystemComponent.cpp)\n## funcs:\n- dict systemInformation()\n- void exit()\n- void restart()\n- void info(str text)\n- void setCursorVisibility(bool visible)\n- str getUserAgent()\n- str debugInformation()\n- list[str] networkAddresses()\n- void openExternalUrl(str url) - Opens in external browser.\n- void runUserScript(str script) - Starts processes in the datadir + scripts/\n- void hello(str version) - called by web client when loading done\n- str getCapabilitiesString()\n- void crashApp() - Dereferences a null pointer.......\n## events:\n- capabilitiesChanged(str capabilities)\n- userInfoChanged()\n- hostMessage(str message)\n- settingsMessage(str setting, str value)\n- scaleChanged(float scale)\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "for-web-developers.md",
          "type": "blob",
          "size": 16.6376953125,
          "content": "# Jellyfin Media Player Implementation\n\n## Detection\n\nYou can detect JMP by looking for the object `window.jmpInfo`, which is defined immediately.\n\n## Device Profile\n\nYou can query a device profile for Jellyfin Media Player with:\n\n```js\nwindow.NativeShell.AppHost.getDeviceProfile()\n```\n\nThis is not async. It can be queried immediately.\n\n## Other NativeShell Functions\n\nThe following functions are available immediately:\n\n - `window.NativeShell.AppHost.getDefaultLayout()` - Returns `tv` or `desktop`.\n - `window.NativeShell.AppHost.appVersion()` - Returns version number in `x.y.z` format.\n - `window.NativeShell.AppHost.deviceName()` - Returns computer hostname.\n\nThe following functions are available after less than a second:\n\n - `window.NativeShell.openUrl(url)` - Opens a URL in the user's browser.\n - `window.NativeShell.openClientSettings()` - Opens prebuilt settings modal.\n     - This uses vanilla JS and can be styled with classes.\n     - You may want to use the settings API directly though.\n - `window.NativeShell.AppHost.exit()` - Closes the application.\n\n## Media Playback\n\nSee [mpvVideoPlayer.js](https://github.com/jellyfin/jellyfin-media-player/blob/master/native/mpvVideoPlayer.js) for a complete example of how to connect and control the player.\n\nNotable API methods:\n\n - `api.power.setScreensaverEnabled(enabled: boolean)` - Enable or disable screensaver.\n - `api.player.load(url, positiondata, streamdata, audioStream, subtitleStream)` - Play media. See below.\n - `api.player.setSubtitleStream(subtitleStream)` - Set subtitle stream. See below.\n - `api.player.setSubtitleDelay(msDelay: int)` - Set subtitle delay.\n - `api.player.setAudioStream(audioStream)` - Set audio stream. See below.\n - `api.player.stop()` - Stop playback.\n - `api.player.seekTo(positionMs: int)` - Seek to absolute position in milliseconds.\n - `api.player.getPosition((positionMs: int) => void)` - Get current position in milliseconds.\n - `api.player.pause()` - Pause playback.\n - `api.player.play()` - Resume playback.\n - `api.player.setPlaybackRate(playbackRate: int)` - Set playback rate. 1000 is normal speed.\n - `api.player.setVolume(volume: int)` - Set volume. 100 is full volume.\n - `api.player.setMuted(muted: boolean)` - Set if player should be muted.\n\nNotable events (see API info below for how to connect/disconnect):\n\n - `api.player.playing: void` - Fires when playback starts.\n - `api.player.positionUpdate: int` - Fires periodically to update current position in milliseconds.\n - `api.player.finished: void` - Fires when playback finishes.\n - `api.player.updateDuration: int` - Fires to provide duration in milliseconds when available.\n - `api.player.error: string` - Fires if media playback fails.\n - `api.player.paused: void` - Fires when playback is paused.\n\nLoading media:\n\n```js\napi.player.load(\n    url,\n    {\n        startMilliseconds: ms,\n        autoplay: true\n    },\n    streamdata,\n    audioStream,\n    subtitleStream,\n    callback\n)\n```\n\nNote: The callback does NOT mean the video actually finished loading. You need to wait for events to determine this.\n\n`streamdata`:\n```js\n{\n    type: 'video',  // use 'music' to disable video rendering\n    headers: {\n        'User-Agent': 'JellyfinMediaPlayer'\n    },\n    metadata: {\n        // Only used for system UI integration, eg. taskbar/windows media.\n        // Optional. Comes from Jellyfin metadata item.\n        // Known used items are documented below.\n        Id: 'media uuid',\n        MediaType: 'video',\n        ImageTags: {\n            Primary: 'uuid' // only if photo is available\n        },\n        AlbumId: 'uuid', // music only\n        AlbumPrimaryImageTag: 'uuid', // music only\n        Name: 'media title',\n        Type: 'Episode', // or other type\n        SeriesName: 'tv show name', // only if episode\n        Artists: ['artist1', 'artist2...'], // music only\n        AlbumArtist: 'artist' // music only\n    },\n    media: {}\n}\n```\n\n`audioStream` is `#{index}` (It starts at 1, for instance `#1`. The index is relative and only includes audio tracks.)\n\n`subtitleStream` is:\n\n - empty string - disables subtitles\n - `#{index}` - subtitles embedded in file (It starts at 1, for instance `#1`. The index is relative and only includes subtitles tracks.)\n - `#,{url}` - external subtitle to load from remote url (for instance `#,https://example.com/file.srt`)\n\n## Remote Control\n\nYou can recieve input from remote controls and gamepads via the input component. There is also an unused\n\"TV\" mode which can be set in the config. It disables keyboard into the webapp and redirects it through\nthis as well.\n\nSee [jmpInputPlugin.js](https://github.com/jellyfin/jellyfin-media-player/blob/master/native/jmpInputPlugin.js) for an example which picks up events and translates them to ones that `jellyfin-web` understands.\n\n```js\napi.input.hostInput.connect((actions) => {\n    actions.forEach(action => {\n        // action is a string which represents the action\n    });\n});\n\napi.system.hello(\"jmpInputPlugin\"); // signals to start sending user input\n```\n\nThe inputs which are actually processed by `jellyfin-web` are fairly limited, but there are many more possible events.\nSee the [inputmaps](https://github.com/jellyfin/jellyfin-media-player/tree/master/resources/inputmaps) folder for event names for various input devices.\n\n## Settings\n\nThe application retains some user settings that control advanced functions, such as audio passthrough.\nThere is already [a modal](https://github.com/jellyfin/jellyfin-media-player/blob/7d5943becc1ca672d599887cac9107836c38d337/native/nativeshell.js#L189-L308) you can invoke display of which allows basic configuration changes.\n\nThe configuration options are defined here: [settings_description.json](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json)\n\nCurrent Settings:\n\n - Main Section (`main`):\n     - `fullscreen: boolean`: Forces the application into fullscreen mode.\n         - Note: Regular HTML5 fullscreen does still work.\n     - `alwaysOnTop: boolean`: Keeps JMP on top of other windows.\n     - `useOpenGL: boolean`: Windows only. Controls display method.\n     - `forceFSScreen: string`: Forces fullscreen to use a specific display.\n         - The options for this are automatically generated.\n     - `checkForUpdates: boolean`: Allows user to disable update check plugin script.\n         - This has no effect if you don't use the update script.\n     - `enableInputRepeat: boolean`: Allows disabling repeating of control inputs.\n     - `userWebClient: string`: Hidden option. Set it back to an empty string to allow the user to select a different webclient path.\n - Plugins Section (`plugins`):\n     - `skipintro: boolean`: Enables or disabled the plugin. You likely won't use this.\n - Audio Section (`audio`):\n     - `devicetype: string enum`: Sets the device type. Can be `basic`, `spdif`, or `hdmi`.\n         - `basic` disables passthrough\n         - `spdif` transcodes surround sound to specific formats\n         - `hdmi` supports additional passthrough options\n     - `channels: string enum`: Sets how many channels are allowed. The default is `stereo` except on MacOS where it is `auto`.\n         - `auto` - Automatically set.\n         - `2.0` - Stereo\n         - `5.1,2.0` - Up to 5.1 surround\n         - `7.1,5.1,2.0` - Up to 7.1 surround\n     - `device: string`: Allows forcing media output to a specific device. The default is `auto`.\n         - The options for this are automatically generated.\n     - `normalize: boolean`: Enable audio volume normalization.\n     - `exclusive: boolean`: Takes exclusive control of audio device. The default is `false`.\n         - This is only available on MacOS and Windows.\n     - `passthrough.ac3: boolean`: Enable ac3 passthrough. Requires `spdif` or `hdmi` device type. Default: `false`\n     - `passthrough.dts: boolean`: Enable dts passthrough. Requires `spdif` or `hdmi` device type. Default: `false`\n     - `passthrough.eac3: boolean`: Enable ac3 passthrough. Requires `hdmi` device type. Default: `false`\n     - `passthrough.dts-hd\": boolean`: Enable ac3 passthrough. Requires `hdmi` device type. Default: `false`\n     - `passthrough.truehd: boolean`: Enable ac3 passthrough. Requires `hdmi` device type. Default: `false`\n - Video Section (`video`):\n     - `refreshrate.auto_switch: boolean`: Sets the display refresh rate to the media refresh rate. Default: `false`\n         - This is only enabled while the player is fullscreen.\n     - `hardwareDecoding: string enum`: Sets the hardware decoding method. Default: `copy`\n         - `enabled` - Full hardware acceleration. Removes MPV shader pipelines. Can cause issues more often.\n         - `osx_compat` - Probably not useful given we only support GitHub Actions MacOS versions.\n         - `copy` - Uses hardware decoding but copies the video through MPV's shader pipelines.\n         - `disabled` - Completely disable hardware decoding. Use this if video is glitchy.\n     - `deinterlace: boolean`: Enables deinterlacing. Default: `false`\n     - `allow_transcode_to_hevc: boolean`: If set, it allows transcoding to `hevc` in the video profile. Default: `false`\n         - This is mostly added as a workaround for Dolby Vision content direct playing when it shouldn't.\n     - `force_transcode_hdr: boolean`: If set, HDR media support is dropped from the video profile. Default: `false`\n     - `sync_mode: string enum`: Options are `audio`, `display-resample`, `display-adrop`. Not sure what this does.\n     - `cache: int`: Controls cache size in MB for video streaming. The default is `75`.\n         - Provided options are `10`, `75`, `150`, and `500`.\n     - `aspect: string enum`: Allows control of aspect ratio. The default is `normal`.\n         - Options: `normal`, `zoom`, `force_4_3`, `force_16_9`, `force_16_9_if_4_3`, `stretch`, `noscaling`, `custom`\n - Subtitle Section (`subtitles`):\n     - `ass_scale_border_and_shadow`: Controls whether or not ASS subtitles scale their border and shadow with the video resolution. Default `true`\n     - `ass_style_override: string enum`: Controls whether user style override should be applied to ASS subtitles. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/7d5943becc1ca672d599887cac9107836c38d337/resources/settings/settings_description.json#L412-L419)\n     - `placement: string enum`: Controls where subtitles are displayed on the screen. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/7d5943becc1ca672d599887cac9107836c38d337/resources/settings/settings_description.json#L424-L432)\n     - `color: string enum`: Controls colors of subtitles. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json#L437-L446)\n     - `border_color: string enum`: Controls font border colors of subtitles. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json#L451-L460)\n     - `border_size: int`: Controls subtitle border size. Default is `-1`.\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/7d5943becc1ca672d599887cac9107836c38d337/resources/settings/settings_description.json#L465-L473)\n     - `background_color: string enum`: Controls backgroud colors of subtitles. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json#L478-L487)\n     - `background_transparency: string enum`: Controls backgroud transparency (in hex) of subtitles. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json#L492-L499)\n     - `size: int`: Controls subtitle size. Default is `-1`.\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/7d5943becc1ca672d599887cac9107836c38d337/resources/settings/settings_description.json#L504-L511)\n     - `font: string enum`: Specify font to use for subtitles that do not themselves specify a particular font. Default: ``\n         - Provided options: [see enum](https://github.com/jellyfin/jellyfin-media-player/blob/master/resources/settings/settings_description.json#L515-L525)\n\nThe global `window.jmpInfo` object contains settings for the application in the form of `window.jmpInfo.settings.[section][key] = value`.\nSettings descriptions are stored in the form `window.jmpInfo.settingsDescriptions.[section] = [{ key, options }]`\n\n - These are kept up-to-date in response to user changes.\n - If you want to change any settings, `await window.initCompleted` first.\n - To change a setting, simply set the setting to a new value. Don't overwrite an entire section.\n - You can subscribe to settings changes by adding a `callback(section, changes)` to `window.jmpInfo.settingsUpdate`.\n - Similarly, you can subscribe to settings description updates by adding a `callback(section, changes)` to `window.jmpInfo.settingsDescriptionsUpdate`.\n     - This is useful for reactive settings, for instance when you change the audio device type.\n\nYou can also use the API to set and query settings. This is largely not needed unless you want to be sure a setting change is complete before you do something:\n\n - `api.settings.settingDescriptions(callback)`: Get list of all setting descriptions and options.\n     - You may need to re-query this if you update certain settings.\n - `api.settings.allValues(section, callback)`: Get all settings for a specific section.\n - `api.settings.value(section, key, callback)`: Get a specific setting.\n - `api.settings.setValue(section, key, value, callback)`: Set a specific setting.\n\n## Checking for Updates\n\n```js\nconst updatePlugin = await window.jmpUpdatePlugin();\nupdatePlugin({\n  toast: () => new Promise((resolve, reject) => {\n    // called if an update is available\n    // resolve - opens URL for update\n    // reject - ignores update\n  })\n})\n```\n\n## Client API\n\nTo establish a connection to the Client API from scratch, use:\n\n```js\nfunction loadScript(src) {\n    return new Promise((resolve, reject) => {\n        const s = document.createElement('script');\n        s.src = src;\n        s.onload = resolve;\n        s.onerror = reject;\n        document.head.appendChild(s);\n    });\n}\n\nasync function createApi() {\n    await loadScript('qrc:///qtwebchannel/qwebchannel.js');\n    const channel = await new Promise((resolve) => {\n        new QWebChannel(window.qt.webChannelTransport, resolve);\n    });\n    return channel.objects;\n}\n```\n\nThe injected utilities script makes `window.apiPromise` available immediately and `window.api` available\nafter less than a second.\n\n### Client API Usage\n\nThe API is a [QWebChannel](https://doc.qt.io/qt-5/qtwebchannel-javascript.html) API which is async and callback-driven.\n\nTo invoke a function:\n\n```js\nawait new Promise(resolve => {\n    window.api.settings.setValue('main', 'userWebClient', '', resolve);\n});\n```\n\nYou can also fire and forget the functions by calling them directly and not passing a callback.\n\nTo listen and unlisten for an event:\n\n```js\napi.system.updateInfoEmitted.connect(myEventListener);\napi.system.updateInfoEmitted.disconnect(myEventListener);\n```\n\n### Client API Overview\n\nThe client API corresponds to the methods in the application with `Q_INVOKABLE`.\n\n - `api.display` - [DisplayComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/display/DisplayComponent.h) [DisplayComponent.cpp](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/display/DisplayComponent.cpp)\n - `api.input` - [InputComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/input/InputComponent.h) [InputComponent.cpp](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/input/InputComponent.cpp)\n - `api.player` - [PlayerComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/player/PlayerComponent.h) [PlayerComponent.cpp](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/player/PlayerComponent.cpp)\n - `api.power` - [PowerComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/power/PowerComponent.h) [PowerComponent.cpp](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/power/PowerComponent.cpp)\n - `api.settings` - [SettingsComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/settings/SettingsComponent.h)\n - `api.system` - [SystemComponent.h](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/system/SystemComponent.h) [SystemComponent.cpp](https://github.com/jellyfin/jellyfin-media-player/blob/master/src/system/SystemComponent.cpp)\n - `api.taskbar` - (this is empty)\n\nFor a (slightly outdated) list of functions, you can look here: https://github.com/jellyfin/jellyfin-media-player/blob/master/client-api.md"
        },
        {
          "name": "native",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}