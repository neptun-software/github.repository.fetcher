{
  "metadata": {
    "timestamp": 1736565756795,
    "page": 680,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "codebutler/firesheep",
      "stars": 2340,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.310546875,
          "content": ".DS_Store\n*.m4\nlibtool\nltmain.sh\ndepcomp\nautom4te.cache/*\nconfig.guess\nconfig.log\nconfig.status\nconfig.sub\nconfigure\ninstall-sh\nMakefile\nMakefile.in\nmissing\n\nbackend/backend\nbackend/.libs\nbackend/.deps\nbackend/*.o\nbackend/*.lo\nbackend/*.la\n\nxpi/components\nxpi/backend\nxpi/platform\n\nbuild/\n\n*.suo\n*.ncb\n*.user\n*.swp\n*~\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1142578125,
          "content": "[submodule \"backend/deps/http-parser\"]\n\tpath = backend/deps/http-parser\n\turl = https://github.com/joyent/http-parser\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.326171875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n\n\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.7939453125,
          "content": "ACLOCAL_AMFLAGS = -I .\n\nSUBDIRS = backend\n\nXPI_OUT_DIR = $(top_builddir)/build\nXPI = $(XPI_OUT_DIR)/Firesheep-$(FIRESHEEP_PLATFORM).xpi\n\nPLATFORM_DEST = $(top_builddir)/xpi/platform/$(FIRESHEEP_PLATFORM)\nFIRESHEEP_BACKEND = $(PLATFORM_DEST)/firesheep-backend\nLIBFIRESHEEP = $(PLATFORM_DEST)/libfiresheep.$(DLL_EXT)\n\nall: platform zip\n\nplatform:\n\tmkdir -p $(PLATFORM_DEST)\n\tcp $(top_builddir)/backend/backend $(FIRESHEEP_BACKEND)\n\tcp $(top_builddir)/backend/.libs/libfiresheep.$(DLL_EXT) $(LIBFIRESHEEP)\n\n#if PLATFORM_WIN32\n#\tcp -f `which cygwin1.dll` $(PLATFORM_DEST)\n#\tcp -f `which cygstdc++-6.dll` $(PLATFORM_DEST)\n#\tcp -f `which cyggcc_s-1.dll` $(PLATFORM_DEST)\n#endif\n\nzip:\n\tmkdir -p $(XPI_OUT_DIR)\n\trm -f $(XPI)\n\tcd xpi && zip -r ../$(XPI) * \n\nclean-local:\n\trm -f $(FIRESHEEP_BACKEND) $(LIBFIRESHEEP) $(XPI)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.9658203125,
          "content": "# Firesheep\n\n### **THIS BRANCH IS A WORK-IN-PROGRESS! Use the 'stable' branch (requires Firefox 3.x) instead!**\n\nA Firefox extension that demonstrates HTTP session hijacking attacks.\n\nCreated by: \n\n  * Eric Butler <eric@codebutler.com>\n\nContributors:\n\n  * Ian Gallagher <crash@neg9.org>\n  * Michajlo Matijkiw <michajlo.matijkiw@gmail.com>\n  * Nick Kossifidis <mickflemm@gmail.com>\n\n## Building\n\nStart by grabbing the code using Git. If you're planning to contribute, fork the project on GitHub.\n\n    $ git clone https://github.com/codebutler/firesheep.git\n    $ cd firesheep\n    $ git submodule update --init\n\nSee instructions for your platform below. When done, an xpi will be created inside the `build` directory. Load the extension into Firefox by dragging it into the Addons page.\n\n### Mac OS X\n\n1. Install build dependencies using [Homebrew][1] (`brew install autoconf automake libtool boost`).\n2. Run `./autogen.sh`\n3. Run `make`!\n\n### Ubuntu Linux\n\n1. Install build dependencies (`sudo apt-get install autoconf libtool libpcap-dev libboost-all-dev libudev-dev`).\n2. Run `./autogen.sh` then `make`.\n\n### Windows\n\nThis has so far only been tested on Windows XP (32-bit), however the binaries work fine on Windows 7 too. If you can help simplify this process please let me know.\n\n1. You'll need Microsoft Visual Studio 2005. The express edition should work too, but this hasn't been tested. Newer versions of Visual Studio should also work, but the Makefiles might need a bit of tweaking. Patches in this area greatly appreciated.\n2. Install [Cygwin][3], selecting the following packages: `automake-1.11`, `gcc-g++`.\n3. Install [BoostPro][4]. Choose *Visual C++ 8.0* and *Multithreaded debug, static runtime*.\n4. Install [WinPcap][6].\n5. From a Cygwin command prompt: Run `./autogen.sh` then run `make`!\n\n[1]: http://mxcl.github.com/homebrew/\n[3]: http://www.cygwin.com/\n[4]: http://www.boostpro.com/download/\n[5]: http://en.wikipedia.org/wiki/Promiscuous_mode\n[6]: http://www.winpcap.org/install/default.htm\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.18359375,
          "content": "#!/bin/sh -e\n\ntest -n \"$srcdir\" || srcdir=`dirname \"$0\"`\ntest -n \"$srcdir\" || srcdir=.\nautoreconf --force --install --verbose \"$srcdir\"\ntest -n \"$NOCONFIGURE\" || \"$srcdir/configure\" \"$@\"\n\n"
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "boost.m4",
          "type": "blob",
          "size": 38.767578125,
          "content": "# boost.m4: Locate Boost headers and libraries for autoconf-based projects.\n# Copyright (C) 2007, 2008, 2009, 2010  Benoit Sigoure <tsuna@lrde.epita.fr>\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Additional permission under section 7 of the GNU General Public\n# License, version 3 (\"GPLv3\"):\n#\n# If you convey this file as part of a work that contains a\n# configuration script generated by Autoconf, you may do so under\n# terms of your choice.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nm4_define([_BOOST_SERIAL], [m4_translit([\n# serial 13\n], [#\n], [])])\n\n# Original sources can be found at http://github.com/tsuna/boost.m4\n# You can fetch the latest version of the script by doing:\n#   wget http://github.com/tsuna/boost.m4/raw/master/build-aux/boost.m4\n\n# ------ #\n# README #\n# ------ #\n\n# This file provides several macros to use the various Boost libraries.\n# The first macro is BOOST_REQUIRE.  It will simply check if it's possible to\n# find the Boost headers of a given (optional) minimum version and it will\n# define BOOST_CPPFLAGS accordingly.  It will add an option --with-boost to\n# your configure so that users can specify non standard locations.\n# If the user's environment contains BOOST_ROOT and --with-boost was not\n# specified, --with-boost=$BOOST_ROOT is implicitly used.\n# For more README and documentation, go to http://github.com/tsuna/boost.m4\n# Note: THESE MACROS ASSUME THAT YOU USE LIBTOOL.  If you don't, don't worry,\n# simply read the README, it will show you what to do step by step.\n\nm4_pattern_forbid([^_?BOOST_])\n\n\n# _BOOST_SED_CPP(SED-PROGRAM, PROGRAM,\n#                [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n# --------------------------------------------------------\n# Same as AC_EGREP_CPP, but leave the result in conftest.i.\n# PATTERN is *not* overquoted, as in AC_EGREP_CPP.  It could be useful\n# to turn this into a macro which extracts the value of any macro.\nm4_define([_BOOST_SED_CPP],\n[AC_LANG_PREPROC_REQUIRE()dnl\nAC_REQUIRE([AC_PROG_SED])dnl\nAC_LANG_CONFTEST([AC_LANG_SOURCE([[$2]])])\nAS_IF([dnl eval is necessary to expand ac_cpp.\ndnl Ultrix and Pyramid sh refuse to redirect output of eval, so use subshell.\ndnl Beware of Windows end-of-lines, for instance if we are running\ndnl some Windows programs under Wine.  In that case, boost/version.hpp\ndnl is certainly using \"\\r\\n\", but the regular Unix shell will only\ndnl strip `\\n' with backquotes, not the `\\r'.  This results in\ndnl boost_cv_lib_version='1_37\\r' for instance, which breaks\ndnl everything else.\ndnl Cannot use 'dnl' after [$4] because a trailing dnl may break AC_CACHE_CHECK\n(eval \"$ac_cpp conftest.$ac_ext\") 2>&AS_MESSAGE_LOG_FD |\n  tr -d '\\r' |\n  $SED -n -e \"$1\" >conftest.i 2>&1],\n  [$3],\n  [$4])\nrm -rf conftest*\n])# AC_EGREP_CPP\n\n\n\n# BOOST_REQUIRE([VERSION], [ACTION-IF-NOT-FOUND])\n# -----------------------------------------------\n# Look for Boost.  If version is given, it must either be a literal of the form\n# \"X.Y.Z\" where X, Y and Z are integers (the \".Z\" part being optional) or a\n# variable \"$var\".\n# Defines the value BOOST_CPPFLAGS.  This macro only checks for headers with\n# the required version, it does not check for any of the Boost libraries.\n# On # success, defines HAVE_BOOST.  On failure, calls the optional\n# ACTION-IF-NOT-FOUND action if one was supplied.\n# Otherwise aborts with an error message.\nAC_DEFUN([BOOST_REQUIRE],\n[AC_REQUIRE([AC_PROG_CXX])dnl\nAC_REQUIRE([AC_PROG_GREP])dnl\necho \"$as_me: this is boost.m4[]_BOOST_SERIAL\" >&AS_MESSAGE_LOG_FD\nboost_save_IFS=$IFS\nboost_version_req=$1\nIFS=.\nset x $boost_version_req 0 0 0\nIFS=$boost_save_IFS\nshift\nboost_version_req=`expr \"$[1]\" '*' 100000 + \"$[2]\" '*' 100 + \"$[3]\"`\nboost_version_req_string=$[1].$[2].$[3]\nAC_ARG_WITH([boost],\n   [AS_HELP_STRING([--with-boost=DIR],\n                   [prefix of Boost $1 @<:@guess@:>@])])dnl\nAC_ARG_VAR([BOOST_ROOT],[Location of Boost installation])dnl\n# If BOOST_ROOT is set and the user has not provided a value to\n# --with-boost, then treat BOOST_ROOT as if it the user supplied it.\nif test x\"$BOOST_ROOT\" != x; then\n  if test x\"$with_boost\" = x; then\n    AC_MSG_NOTICE([Detected BOOST_ROOT; continuing with --with-boost=$BOOST_ROOT])\n    with_boost=$BOOST_ROOT\n  else\n    AC_MSG_NOTICE([Detected BOOST_ROOT=$BOOST_ROOT, but overridden by --with-boost=$with_boost])\n  fi\nfi\nAC_SUBST([DISTCHECK_CONFIGURE_FLAGS],\n         [\"$DISTCHECK_CONFIGURE_FLAGS '--with-boost=$with_boost'\"])\nboost_save_CPPFLAGS=$CPPFLAGS\n  AC_CACHE_CHECK([for Boost headers version >= $boost_version_req_string],\n    [boost_cv_inc_path],\n    [boost_cv_inc_path=no\nAC_LANG_PUSH([C++])dnl\nm4_pattern_allow([^BOOST_VERSION$])dnl\n    AC_LANG_CONFTEST([AC_LANG_PROGRAM([[#include <boost/version.hpp>\n#if !defined BOOST_VERSION\n# error BOOST_VERSION is not defined\n#elif BOOST_VERSION < $boost_version_req\n# error Boost headers version < $boost_version_req\n#endif\n]])])\n    # If the user provided a value to --with-boost, use it and only it.\n    case $with_boost in #(\n      ''|yes) set x '' /opt/local/include /usr/local/include /opt/include \\\n                 /usr/include C:/Boost/include;; #(\n      *)      set x \"$with_boost/include\" \"$with_boost\";;\n    esac\n    shift\n    for boost_dir\n    do\n    # Without --layout=system, Boost (or at least some versions) installs\n    # itself in <prefix>/include/boost-<version>.  This inner loop helps to\n    # find headers in such directories.\n    #\n    # Any ${boost_dir}/boost-x_xx directories are searched in reverse version\n    # order followed by ${boost_dir}.  The final '.' is a sentinel for\n    # searching $boost_dir\" itself.  Entries are whitespace separated.\n    #\n    # I didn't indent this loop on purpose (to avoid over-indented code)\n    boost_layout_system_search_list=`cd \"$boost_dir\" 2>/dev/null \\\n        && ls -1 | \"${GREP}\" '^boost-' | sort -rn -t- -k2 \\\n        && echo .`\n    for boost_inc in $boost_layout_system_search_list\n    do\n      if test x\"$boost_inc\" != x.; then\n        boost_inc=\"$boost_dir/$boost_inc\"\n      else\n        boost_inc=\"$boost_dir\" # Uses sentinel in boost_layout_system_search_list\n      fi\n      if test x\"$boost_inc\" != x; then\n        # We are going to check whether the version of Boost installed\n        # in $boost_inc is usable by running a compilation that\n        # #includes it.  But if we pass a -I/some/path in which Boost\n        # is not installed, the compiler will just skip this -I and\n        # use other locations (either from CPPFLAGS, or from its list\n        # of system include directories).  As a result we would use\n        # header installed on the machine instead of the /some/path\n        # specified by the user.  So in that precise case (trying\n        # $boost_inc), make sure the version.hpp exists.\n        #\n        # Use test -e as there can be symlinks.\n        test -e \"$boost_inc/boost/version.hpp\" || continue\n        CPPFLAGS=\"$CPPFLAGS -I$boost_inc\"\n      fi\n      AC_COMPILE_IFELSE([], [boost_cv_inc_path=yes], [boost_cv_version=no])\n      if test x\"$boost_cv_inc_path\" = xyes; then\n        if test x\"$boost_inc\" != x; then\n          boost_cv_inc_path=$boost_inc\n        fi\n        break 2\n      fi\n    done\n    done\nAC_LANG_POP([C++])dnl\n    ])\n    case $boost_cv_inc_path in #(\n      no)\n        boost_errmsg=\"cannot find Boost headers version >= $boost_version_req_string\"\n        m4_if([$2], [],  [AC_MSG_ERROR([$boost_errmsg])],\n                        [AC_MSG_NOTICE([$boost_errmsg])])\n        $2\n        ;;#(\n      yes)\n        BOOST_CPPFLAGS=\n        ;;#(\n      *)\n        AC_SUBST([BOOST_CPPFLAGS], [\"-I$boost_cv_inc_path\"])\n        ;;\n    esac\n  if test x\"$boost_cv_inc_path\" != xno; then\n  AC_DEFINE([HAVE_BOOST], [1],\n            [Defined if the requested minimum BOOST version is satisfied])\n  AC_CACHE_CHECK([for Boost's header version],\n    [boost_cv_lib_version],\n    [m4_pattern_allow([^BOOST_LIB_VERSION$])dnl\n     _BOOST_SED_CPP([/^boost-lib-version = /{s///;s/\\\"//g;p;g;}],\n                    [#include <boost/version.hpp>\nboost-lib-version = BOOST_LIB_VERSION],\n    [boost_cv_lib_version=`cat conftest.i`])])\n    # e.g. \"134\" for 1_34_1 or \"135\" for 1_35\n    boost_major_version=`echo \"$boost_cv_lib_version\" | sed 's/_//;s/_.*//'`\n    case $boost_major_version in #(\n      '' | *[[!0-9]]*)\n        AC_MSG_ERROR([invalid value: boost_major_version=$boost_major_version])\n        ;;\n    esac\nfi\nCPPFLAGS=$boost_save_CPPFLAGS\n])# BOOST_REQUIRE\n\n# BOOST_STATIC()\n# --------------\n# Add the \"--enable-static-boost\" configure argument. If this argument is given\n# on the command line, static versions of the libraries will be looked up.\nAC_DEFUN([BOOST_STATIC],\n  [AC_ARG_ENABLE([static-boost],\n     [AC_HELP_STRING([--enable-static-boost],\n               [Prefer the static boost libraries over the shared ones [no]])],\n     [enable_static_boost=yes],\n     [enable_static_boost=no])])# BOOST_STATIC\n\n# BOOST_FIND_HEADER([HEADER-NAME], [ACTION-IF-NOT-FOUND], [ACTION-IF-FOUND])\n# --------------------------------------------------------------------------\n# Wrapper around AC_CHECK_HEADER for Boost headers.  Useful to check for\n# some parts of the Boost library which are only made of headers and don't\n# require linking (such as Boost.Foreach).\n#\n# Default ACTION-IF-NOT-FOUND: Fail with a fatal error unless Boost couldn't be\n# found in the first place, in which case by default a notice is issued to the\n# user.  Presumably if we haven't died already it's because it's OK to not have\n# Boost, which is why only a notice is issued instead of a hard error.\n#\n# Default ACTION-IF-FOUND: define the preprocessor symbol HAVE_<HEADER-NAME> in\n# case of success # (where HEADER-NAME is written LIKE_THIS, e.g.,\n# HAVE_BOOST_FOREACH_HPP).\nAC_DEFUN([BOOST_FIND_HEADER],\n[AC_REQUIRE([BOOST_REQUIRE])dnl\nif test x\"$boost_cv_inc_path\" = xno; then\n  m4_default([$2], [AC_MSG_NOTICE([Boost not available, not searching for $1])])\nelse\nAC_LANG_PUSH([C++])dnl\nboost_save_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\nAC_CHECK_HEADER([$1],\n  [m4_default([$3], [AC_DEFINE(AS_TR_CPP([HAVE_$1]), [1],\n                               [Define to 1 if you have <$1>])])],\n  [m4_default([$2], [AC_MSG_ERROR([cannot find $1])])])\nCPPFLAGS=$boost_save_CPPFLAGS\nAC_LANG_POP([C++])dnl\nfi\n])# BOOST_FIND_HEADER\n\n\n# BOOST_FIND_LIB([LIB-NAME], [PREFERRED-RT-OPT], [HEADER-NAME], [CXX-TEST],\n#                [CXX-PROLOGUE])\n# -------------------------------------------------------------------------\n# Look for the Boost library LIB-NAME (e.g., LIB-NAME = `thread', for\n# libboost_thread).  Check that HEADER-NAME works and check that\n# libboost_LIB-NAME can link with the code CXX-TEST.  The optional argument\n# CXX-PROLOGUE can be used to include some C++ code before the `main'\n# function.\n#\n# Invokes BOOST_FIND_HEADER([HEADER-NAME]) (see above).\n#\n# Boost libraries typically come compiled with several flavors (with different\n# runtime options) so PREFERRED-RT-OPT is the preferred suffix.  A suffix is one\n# or more of the following letters: sgdpn (in that order).  s = static\n# runtime, d = debug build, g = debug/diagnostic runtime, p = STLPort build,\n# n = (unsure) STLPort build without iostreams from STLPort (it looks like `n'\n# must always be used along with `p').  Additionally, PREFERRED-RT-OPT can\n# start with `mt-' to indicate that there is a preference for multi-thread\n# builds.  Some sample values for PREFERRED-RT-OPT: (nothing), mt, d, mt-d, gdp\n# ...  If you want to make sure you have a specific version of Boost\n# (eg, >= 1.33) you *must* invoke BOOST_REQUIRE before this macro.\nAC_DEFUN([BOOST_FIND_LIB],\n[AC_REQUIRE([BOOST_REQUIRE])dnl\nAC_REQUIRE([_BOOST_FIND_COMPILER_TAG])dnl\nAC_REQUIRE([BOOST_STATIC])dnl\nAC_REQUIRE([_BOOST_GUESS_WHETHER_TO_USE_MT])dnl\nif test x\"$boost_cv_inc_path\" = xno; then\n  AC_MSG_NOTICE([Boost not available, not searching for the Boost $1 library])\nelse\ndnl The else branch is huge and wasn't intended on purpose.\nAC_LANG_PUSH([C++])dnl\nAS_VAR_PUSHDEF([Boost_lib], [boost_cv_lib_$1])dnl\nAS_VAR_PUSHDEF([Boost_lib_LDFLAGS], [boost_cv_lib_$1_LDFLAGS])dnl\nAS_VAR_PUSHDEF([Boost_lib_LDPATH], [boost_cv_lib_$1_LDPATH])dnl\nAS_VAR_PUSHDEF([Boost_lib_LIBS], [boost_cv_lib_$1_LIBS])dnl\nBOOST_FIND_HEADER([$3])\nboost_save_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n# Now let's try to find the library.  The algorithm is as follows: first look\n# for a given library name according to the user's PREFERRED-RT-OPT.  For each\n# library name, we prefer to use the ones that carry the tag (toolset name).\n# Each library is searched through the various standard paths were Boost is\n# usually installed.  If we can't find the standard variants, we try to\n# enforce -mt (for instance on MacOSX, libboost_threads.dylib doesn't exist\n# but there's -obviously- libboost_threads-mt.dylib).\nAC_CACHE_CHECK([for the Boost $1 library], [Boost_lib],\n  [Boost_lib=no\n  case \"$2\" in #(\n    mt | mt-) boost_mt=-mt; boost_rtopt=;; #(\n    mt* | mt-*) boost_mt=-mt; boost_rtopt=`expr \"X$2\" : 'Xmt-*\\(.*\\)'`;; #(\n    *) boost_mt=; boost_rtopt=$2;;\n  esac\n  if test $enable_static_boost = yes; then\n    boost_rtopt=\"s$boost_rtopt\"\n  fi\n  # Find the proper debug variant depending on what we've been asked to find.\n  case $boost_rtopt in #(\n    *d*) boost_rt_d=$boost_rtopt;; #(\n    *[[sgpn]]*) # Insert the `d' at the right place (in between `sg' and `pn')\n      boost_rt_d=`echo \"$boost_rtopt\" | sed 's/\\(s*g*\\)\\(p*n*\\)/\\1\\2/'`;; #(\n    *) boost_rt_d='-d';;\n  esac\n  # If the PREFERRED-RT-OPT are not empty, prepend a `-'.\n  test -n \"$boost_rtopt\" && boost_rtopt=\"-$boost_rtopt\"\n  $boost_guess_use_mt && boost_mt=-mt\n  # Look for the abs path the static archive.\n  # $libext is computed by Libtool but let's make sure it's non empty.\n  test -z \"$libext\" &&\n    AC_MSG_ERROR([the libext variable is empty, did you invoke Libtool?])\n  boost_save_ac_objext=$ac_objext\n  # Generate the test file.\n  AC_LANG_CONFTEST([AC_LANG_PROGRAM([#include <$3>\n$5], [$4])])\ndnl Optimization hacks: compiling C++ is slow, especially with Boost.  What\ndnl we're trying to do here is guess the right combination of link flags\ndnl (LIBS / LDFLAGS) to use a given library.  This can take several\ndnl iterations before it succeeds and is thus *very* slow.  So what we do\ndnl instead is that we compile the code first (and thus get an object file,\ndnl typically conftest.o).  Then we try various combinations of link flags\ndnl until we succeed to link conftest.o in an executable.  The problem is\ndnl that the various TRY_LINK / COMPILE_IFELSE macros of Autoconf always\ndnl remove all the temporary files including conftest.o.  So the trick here\ndnl is to temporarily change the value of ac_objext so that conftest.o is\ndnl preserved accross tests.  This is obviously fragile and I will burn in\ndnl hell for not respecting Autoconf's documented interfaces, but in the\ndnl mean time, it optimizes the macro by a factor of 5 to 30.\ndnl Another small optimization: the first argument of AC_COMPILE_IFELSE left\ndnl empty because the test file is generated only once above (before we\ndnl start the for loops).\n  AC_COMPILE_IFELSE([],\n    [ac_objext=do_not_rm_me_plz],\n    [AC_MSG_ERROR([cannot compile a test that uses Boost $1])])\n  ac_objext=$boost_save_ac_objext\n  boost_failed_libs=\n# Don't bother to ident the 6 nested for loops, only the 2 innermost ones\n# matter.\nfor boost_tag_ in -$boost_cv_lib_tag ''; do\nfor boost_ver_ in -$boost_cv_lib_version ''; do\nfor boost_mt_ in $boost_mt -mt ''; do\nfor boost_rtopt_ in $boost_rtopt '' -d; do\n  for boost_lib in \\\n    boost_$1$boost_tag_$boost_mt_$boost_rtopt_$boost_ver_ \\\n    boost_$1$boost_tag_$boost_rtopt_$boost_ver_ \\\n    boost_$1$boost_tag_$boost_mt_$boost_ver_ \\\n    boost_$1$boost_tag_$boost_ver_\n  do\n    # Avoid testing twice the same lib\n    case $boost_failed_libs in #(\n      *@$boost_lib@*) continue;;\n    esac\n    # If with_boost is empty, we'll search in /lib first, which is not quite\n    # right so instead we'll try to a location based on where the headers are.\n    boost_tmp_lib=$with_boost\n    test x\"$with_boost\" = x && boost_tmp_lib=${boost_cv_inc_path%/include}\n    for boost_ldpath in \"$boost_tmp_lib/lib\" '' \\\n             /opt/local/lib /usr/local/lib /opt/lib /usr/lib \\\n             \"$with_boost\" C:/Boost/lib /lib /usr/lib64 /lib64\n    do\n      test -e \"$boost_ldpath\" || continue\n      boost_save_LDFLAGS=$LDFLAGS\n      # Are we looking for a static library?\n      case $boost_ldpath:$boost_rtopt_ in #(\n        *?*:*s*) # Yes (Non empty boost_ldpath + s in rt opt)\n          Boost_lib_LIBS=\"$boost_ldpath/lib$boost_lib.$libext\"\n          test -e \"$Boost_lib_LIBS\" || continue;; #(\n        *) # No: use -lboost_foo to find the shared library.\n          Boost_lib_LIBS=\"-l$boost_lib\";;\n      esac\n      boost_save_LIBS=$LIBS\n      LIBS=\"$Boost_lib_LIBS $LIBS\"\n      test x\"$boost_ldpath\" != x && LDFLAGS=\"$LDFLAGS -L$boost_ldpath\"\ndnl First argument of AC_LINK_IFELSE left empty because the test file is\ndnl generated only once above (before we start the for loops).\n      _BOOST_AC_LINK_IFELSE([],\n                            [Boost_lib=yes], [Boost_lib=no])\n      ac_objext=$boost_save_ac_objext\n      LDFLAGS=$boost_save_LDFLAGS\n      LIBS=$boost_save_LIBS\n      if test x\"$Boost_lib\" = xyes; then\n        Boost_lib_LDFLAGS=\"-L$boost_ldpath -R$boost_ldpath\"\n        Boost_lib_LDPATH=\"$boost_ldpath\"\n        break 6\n      else\n        boost_failed_libs=\"$boost_failed_libs@$boost_lib@\"\n      fi\n    done\n  done\ndone\ndone\ndone\ndone\nrm -f conftest.$ac_objext\n])\ncase $Boost_lib in #(\n  no) _AC_MSG_LOG_CONFTEST\n    AC_MSG_ERROR([cannot not find the flags to link with Boost $1])\n    ;;\nesac\nAC_SUBST(AS_TR_CPP([BOOST_$1_LDFLAGS]), [$Boost_lib_LDFLAGS])\nAC_SUBST(AS_TR_CPP([BOOST_$1_LDPATH]), [$Boost_lib_LDPATH])\nAC_SUBST([BOOST_LDPATH], [$Boost_lib_LDPATH])\nAC_SUBST(AS_TR_CPP([BOOST_$1_LIBS]), [$Boost_lib_LIBS])\nCPPFLAGS=$boost_save_CPPFLAGS\nAS_VAR_POPDEF([Boost_lib])dnl\nAS_VAR_POPDEF([Boost_lib_LDFLAGS])dnl\nAS_VAR_POPDEF([Boost_lib_LDPATH])dnl\nAS_VAR_POPDEF([Boost_lib_LIBS])dnl\nAC_LANG_POP([C++])dnl\nfi\n])# BOOST_FIND_LIB\n\n\n# --------------------------------------- #\n# Checks for the various Boost libraries. #\n# --------------------------------------- #\n\n# List of boost libraries: http://www.boost.org/libs/libraries.htm\n# The page http://beta.boost.org/doc/libs is useful: it gives the first release\n# version of each library (among other things).\n\n# BOOST_ARRAY()\n# -------------\n# Look for Boost.Array\nAC_DEFUN([BOOST_ARRAY],\n[BOOST_FIND_HEADER([boost/array.hpp])])\n\n\n# BOOST_ASIO()\n# ------------\n# Look for Boost.Asio (new in Boost 1.35).\nAC_DEFUN([BOOST_ASIO],\n[AC_REQUIRE([BOOST_SYSTEM])dnl\nBOOST_FIND_HEADER([boost/asio.hpp])])\n\n\n# BOOST_BIND()\n# ------------\n# Look for Boost.Bind\nAC_DEFUN([BOOST_BIND],\n[BOOST_FIND_HEADER([boost/bind.hpp])])\n\n\n# BOOST_CONVERSION()\n# ------------------\n# Look for Boost.Conversion (cast / lexical_cast)\nAC_DEFUN([BOOST_CONVERSION],\n[BOOST_FIND_HEADER([boost/cast.hpp])\nBOOST_FIND_HEADER([boost/lexical_cast.hpp])\n])# BOOST_CONVERSION\n\n\n# BOOST_DATE_TIME([PREFERRED-RT-OPT])\n# -----------------------------------\n# Look for Boost.Date_Time.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_DATE_TIME],\n[BOOST_FIND_LIB([date_time], [$1],\n                [boost/date_time/posix_time/posix_time.hpp],\n                [boost::posix_time::ptime t;])\n])# BOOST_DATE_TIME\n\n\n# BOOST_FILESYSTEM([PREFERRED-RT-OPT])\n# ------------------------------------\n# Look for Boost.Filesystem.  For the documentation of PREFERRED-RT-OPT, see\n# the documentation of BOOST_FIND_LIB above.\n# Do not check for boost/filesystem.hpp because this file was introduced in\n# 1.34.\nAC_DEFUN([BOOST_FILESYSTEM],\n[# Do we have to check for Boost.System?  This link-time dependency was\n# added as of 1.35.0.  If we have a version <1.35, we must not attempt to\n# find Boost.System as it didn't exist by then.\nif test $boost_major_version -ge 135; then\nBOOST_SYSTEM([$1])\nfi # end of the Boost.System check.\nboost_filesystem_save_LIBS=$LIBS\nboost_filesystem_save_LDFLAGS=$LDFLAGS\nm4_pattern_allow([^BOOST_SYSTEM_(LIBS|LDFLAGS)$])dnl\nLIBS=\"$LIBS $BOOST_SYSTEM_LIBS\"\nLDFLAGS=\"$LDFLAGS $BOOST_SYSTEM_LDFLAGS\"\nBOOST_FIND_LIB([filesystem], [$1],\n                [boost/filesystem/path.hpp], [boost::filesystem::path p;])\nLIBS=$boost_filesystem_save_LIBS\nLDFLAGS=$boost_filesystem_save_LDFLAGS\n])# BOOST_FILESYSTEM\n\n\n# BOOST_FOREACH()\n# ---------------\n# Look for Boost.Foreach\nAC_DEFUN([BOOST_FOREACH],\n[BOOST_FIND_HEADER([boost/foreach.hpp])])\n\n\n# BOOST_FORMAT()\n# --------------\n# Look for Boost.Format\n# Note: we can't check for boost/format/format_fwd.hpp because the header isn't\n# standalone.  It can't be compiled because it triggers the following error:\n# boost/format/detail/config_macros.hpp:88: error: 'locale' in namespace 'std'\n#                                                  does not name a type\nAC_DEFUN([BOOST_FORMAT],\n[BOOST_FIND_HEADER([boost/format.hpp])])\n\n\n# BOOST_FUNCTION()\n# ----------------\n# Look for Boost.Function\nAC_DEFUN([BOOST_FUNCTION],\n[BOOST_FIND_HEADER([boost/function.hpp])])\n\n\n# BOOST_GRAPH([PREFERRED-RT-OPT])\n# -------------------------------\n# Look for Boost.Graphs.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_GRAPH],\n[BOOST_FIND_LIB([graph], [$1],\n                [boost/graph/adjacency_list.hpp], [boost::adjacency_list<> g;])\n])# BOOST_GRAPH\n\n\n# BOOST_IOSTREAMS([PREFERRED-RT-OPT])\n# -------------------------------\n# Look for Boost.IOStreams.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_IOSTREAMS],\n[BOOST_FIND_LIB([iostreams], [$1],\n                [boost/iostreams/device/file_descriptor.hpp],\n                [boost::iostreams::file_descriptor fd; fd.close();])\n])# BOOST_IOSTREAMS\n\n\n# BOOST_HASH()\n# ------------\n# Look for Boost.Functional/Hash\nAC_DEFUN([BOOST_HASH],\n[BOOST_FIND_HEADER([boost/functional/hash.hpp])])\n\n\n# BOOST_LAMBDA()\n# --------------\n# Look for Boost.Lambda\nAC_DEFUN([BOOST_LAMBDA],\n[BOOST_FIND_HEADER([boost/lambda/lambda.hpp])])\n\n\n# BOOST_MATH()\n# ------------\n# Look for Boost.Math\n# TODO: This library isn't header-only but it comes in multiple different\n# flavors that don't play well with BOOST_FIND_LIB (e.g, libboost_math_c99,\n# libboost_math_c99f, libboost_math_c99l, libboost_math_tr1,\n# libboost_math_tr1f, libboost_math_tr1l).  This macro must be fixed to do the\n# right thing anyway.\nAC_DEFUN([BOOST_MATH],\n[BOOST_FIND_HEADER([boost/math/special_functions.hpp])])\n\n\n# BOOST_MULTIARRAY()\n# ------------------\n# Look for Boost.MultiArray\nAC_DEFUN([BOOST_MULTIARRAY],\n[BOOST_FIND_HEADER([boost/multi_array.hpp])])\n\n\n# BOOST_NUMERIC_CONVERSION()\n# --------------------------\n# Look for Boost.NumericConversion (policy-based numeric conversion)\nAC_DEFUN([BOOST_NUMERIC_CONVERSION],\n[BOOST_FIND_HEADER([boost/numeric/conversion/converter.hpp])\n])# BOOST_NUMERIC_CONVERSION\n\n\n# BOOST_OPTIONAL()\n# ----------------\n# Look for Boost.Optional\nAC_DEFUN([BOOST_OPTIONAL],\n[BOOST_FIND_HEADER([boost/optional.hpp])])\n\n\n# BOOST_PREPROCESSOR()\n# --------------------\n# Look for Boost.Preprocessor\nAC_DEFUN([BOOST_PREPROCESSOR],\n[BOOST_FIND_HEADER([boost/preprocessor/repeat.hpp])])\n\n\n# BOOST_PROGRAM_OPTIONS([PREFERRED-RT-OPT])\n# -----------------------------------------\n# Look for Boost.Program_options.  For the documentation of PREFERRED-RT-OPT, see\n# the documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_PROGRAM_OPTIONS],\n[BOOST_FIND_LIB([program_options], [$1],\n                [boost/program_options.hpp],\n                [boost::program_options::options_description d(\"test\");])\n])# BOOST_PROGRAM_OPTIONS\n\n\n# BOOST_REF()\n# -----------\n# Look for Boost.Ref\nAC_DEFUN([BOOST_REF],\n[BOOST_FIND_HEADER([boost/ref.hpp])])\n\n\n# BOOST_REGEX([PREFERRED-RT-OPT])\n# -------------------------------\n# Look for Boost.Regex.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_REGEX],\n[BOOST_FIND_LIB([regex], [$1],\n                [boost/regex.hpp],\n                [boost::regex exp(\"*\"); boost::regex_match(\"foo\", exp);])\n])# BOOST_REGEX\n\n\n# BOOST_SERIALIZATION([PREFERRED-RT-OPT])\n# ---------------------------------------\n# Look for Boost.Serialization.  For the documentation of PREFERRED-RT-OPT, see\n# the documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_SERIALIZATION],\n[BOOST_FIND_LIB([serialization], [$1],\n                [boost/archive/text_oarchive.hpp],\n                [std::ostream* o = 0; // Cheap way to get an ostream...\n                boost::archive::text_oarchive t(*o);])\n])# BOOST_SIGNALS\n\n\n# BOOST_SIGNALS([PREFERRED-RT-OPT])\n# ---------------------------------\n# Look for Boost.Signals.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_SIGNALS],\n[BOOST_FIND_LIB([signals], [$1],\n                [boost/signal.hpp],\n                [boost::signal<void ()> s;])\n])# BOOST_SIGNALS\n\n\n# BOOST_SMART_PTR()\n# -----------------\n# Look for Boost.SmartPtr\nAC_DEFUN([BOOST_SMART_PTR],\n[BOOST_FIND_HEADER([boost/scoped_ptr.hpp])\nBOOST_FIND_HEADER([boost/shared_ptr.hpp])\n])\n\n\n# BOOST_STATICASSERT()\n# --------------------\n# Look for Boost.StaticAssert\nAC_DEFUN([BOOST_STATICASSERT],\n[BOOST_FIND_HEADER([boost/static_assert.hpp])])\n\n\n# BOOST_STRING_ALGO()\n# -------------------\n# Look for Boost.StringAlgo\nAC_DEFUN([BOOST_STRING_ALGO],\n[BOOST_FIND_HEADER([boost/algorithm/string.hpp])\n])\n\n\n# BOOST_SYSTEM([PREFERRED-RT-OPT])\n# --------------------------------\n# Look for Boost.System.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.  This library was introduced in Boost\n# 1.35.0.\nAC_DEFUN([BOOST_SYSTEM],\n[BOOST_FIND_LIB([system], [$1],\n                [boost/system/error_code.hpp],\n                [boost::system::error_code e; e.clear();])\n])# BOOST_SYSTEM\n\n\n# BOOST_TEST([PREFERRED-RT-OPT])\n# ------------------------------\n# Look for Boost.Test.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_TEST],\n[m4_pattern_allow([^BOOST_CHECK$])dnl\nBOOST_FIND_LIB([unit_test_framework], [$1],\n               [boost/test/unit_test.hpp], [BOOST_CHECK(2 == 2);],\n               [using boost::unit_test::test_suite;\n               test_suite* init_unit_test_suite(int argc, char ** argv)\n               { return NULL; }])\n])# BOOST_TEST\n\n\n# BOOST_THREADS([PREFERRED-RT-OPT])\n# ---------------------------------\n# Look for Boost.Thread.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\n# FIXME: Provide an alias \"BOOST_THREAD\".\nAC_DEFUN([BOOST_THREADS],\n[dnl Having the pthread flag is required at least on GCC3 where\ndnl boost/thread.hpp would complain if we try to compile without\ndnl -pthread on GNU/Linux.\nAC_REQUIRE([_BOOST_PTHREAD_FLAG])dnl\nboost_threads_save_LIBS=$LIBS\nboost_threads_save_CPPFLAGS=$CPPFLAGS\nLIBS=\"$LIBS $boost_cv_pthread_flag\"\n# Yes, we *need* to put the -pthread thing in CPPFLAGS because with GCC3,\n# boost/thread.hpp will trigger a #error if -pthread isn't used:\n#   boost/config/requires_threads.hpp:47:5: #error \"Compiler threading support\n#   is not turned on. Please set the correct command line options for\n#   threading: -pthread (Linux), -pthreads (Solaris) or -mthreads (Mingw32)\"\nCPPFLAGS=\"$CPPFLAGS $boost_cv_pthread_flag\"\nBOOST_FIND_LIB([thread], [$1],\n                [boost/thread.hpp], [boost::thread t; boost::mutex m;])\nBOOST_THREAD_LIBS=\"$BOOST_THREAD_LIBS $boost_cv_pthread_flag\"\nBOOST_CPPFLAGS=\"$BOOST_CPPFLAGS $boost_cv_pthread_flag\"\nLIBS=$boost_threads_save_LIBS\nCPPFLAGS=$boost_threads_save_CPPFLAGS\n])# BOOST_THREADS\n\n\n# BOOST_TOKENIZER()\n# -----------------\n# Look for Boost.Tokenizer\nAC_DEFUN([BOOST_TOKENIZER],\n[BOOST_FIND_HEADER([boost/tokenizer.hpp])])\n\n\n# BOOST_TRIBOOL()\n# ---------------\n# Look for Boost.Tribool\nAC_DEFUN([BOOST_TRIBOOL],\n[BOOST_FIND_HEADER([boost/logic/tribool_fwd.hpp])\nBOOST_FIND_HEADER([boost/logic/tribool.hpp])\n])\n\n\n# BOOST_TUPLE()\n# -------------\n# Look for Boost.Tuple\nAC_DEFUN([BOOST_TUPLE],\n[BOOST_FIND_HEADER([boost/tuple/tuple.hpp])])\n\n\n# BOOST_TYPETRAITS()\n# --------------------\n# Look for Boost.TypeTraits\nAC_DEFUN([BOOST_TYPETRAITS],\n[BOOST_FIND_HEADER([boost/type_traits.hpp])])\n\n\n# BOOST_UTILITY()\n# ---------------\n# Look for Boost.Utility (noncopyable, result_of, base-from-member idiom,\n# etc.)\nAC_DEFUN([BOOST_UTILITY],\n[BOOST_FIND_HEADER([boost/utility.hpp])])\n\n\n# BOOST_VARIANT()\n# ---------------\n# Look for Boost.Variant.\nAC_DEFUN([BOOST_VARIANT],\n[BOOST_FIND_HEADER([boost/variant/variant_fwd.hpp])\nBOOST_FIND_HEADER([boost/variant.hpp])])\n\n\n# BOOST_WAVE([PREFERRED-RT-OPT])\n# ------------------------------\n# NOTE: If you intend to use Wave/Spirit with thread support, make sure you\n# call BOOST_THREADS first.\n# Look for Boost.Wave.  For the documentation of PREFERRED-RT-OPT, see the\n# documentation of BOOST_FIND_LIB above.\nAC_DEFUN([BOOST_WAVE],\n[AC_REQUIRE([BOOST_FILESYSTEM])dnl\nAC_REQUIRE([BOOST_DATE_TIME])dnl\nboost_wave_save_LIBS=$LIBS\nboost_wave_save_LDFLAGS=$LDFLAGS\nm4_pattern_allow([^BOOST_((FILE)?SYSTEM|DATE_TIME|THREAD)_(LIBS|LDFLAGS)$])dnl\nLIBS=\"$LIBS $BOOST_SYSTEM_LIBS $BOOST_FILESYSTEM_LIBS $BOOST_DATE_TIME_LIBS\\\n$BOOST_THREAD_LIBS\"\nLDFLAGS=\"$LDFLAGS $BOOST_SYSTEM_LDFLAGS $BOOST_FILESYSTEM_LDFLAGS\\\n$BOOST_DATE_TIME_LDFLAGS $BOOST_THREAD_LDFLAGS\"\nBOOST_FIND_LIB([wave], [$1],\n                [boost/wave.hpp],\n                [boost::wave::token_id id; get_token_name(id);])\nLIBS=$boost_wave_save_LIBS\nLDFLAGS=$boost_wave_save_LDFLAGS\n])# BOOST_WAVE\n\n\n# BOOST_XPRESSIVE()\n# -----------------\n# Look for Boost.Xpressive (new since 1.36.0).\nAC_DEFUN([BOOST_XPRESSIVE],\n[BOOST_FIND_HEADER([boost/xpressive/xpressive.hpp])])\n\n\n# ----------------- #\n# Internal helpers. #\n# ----------------- #\n\n\n# _BOOST_PTHREAD_FLAG()\n# ---------------------\n# Internal helper for BOOST_THREADS.  Based on ACX_PTHREAD:\n# http://autoconf-archive.cryp.to/acx_pthread.html\nAC_DEFUN([_BOOST_PTHREAD_FLAG],\n[AC_REQUIRE([AC_PROG_CXX])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_LANG_PUSH([C++])dnl\nAC_CACHE_CHECK([for the flags needed to use pthreads], [boost_cv_pthread_flag],\n[ boost_cv_pthread_flag=\n  # The ordering *is* (sometimes) important.  Some notes on the\n  # individual items follow:\n  # (none): in case threads are in libc; should be tried before -Kthread and\n  #       other compiler flags to prevent continual compiler warnings\n  # -lpthreads: AIX (must check this before -lpthread)\n  # -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n  # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n  # -llthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n  # -pthread: GNU Linux/GCC (kernel threads), BSD/GCC (userland threads)\n  # -pthreads: Solaris/GCC\n  # -mthreads: MinGW32/GCC, Lynx/GCC\n  # -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n  #      doesn't hurt to check since this sometimes defines pthreads too;\n  #      also defines -D_REENTRANT)\n  #      ... -mt is also the pthreads flag for HP/aCC\n  # -lpthread: GNU Linux, etc.\n  # --thread-safe: KAI C++\n  case $host_os in #(\n    *solaris*)\n      # On Solaris (at least, for some versions), libc contains stubbed\n      # (non-functional) versions of the pthreads routines, so link-based\n      # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n      # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n      # a function called by this macro, so we could check for that, but\n      # who knows whether they'll stub that too in a future libc.)  So,\n      # we'll just look for -pthreads and -lpthread first:\n      boost_pthread_flags=\"-pthreads -lpthread -mt -pthread\";; #(\n    *)\n      boost_pthread_flags=\"-lpthreads -Kthread -kthread -llthread -pthread \\\n                           -pthreads -mthreads -lpthread --thread-safe -mt\";;\n  esac\n  # Generate the test file.\n  AC_LANG_CONFTEST([AC_LANG_PROGRAM([#include <pthread.h>],\n    [pthread_t th; pthread_join(th, 0);\n    pthread_attr_init(0); pthread_cleanup_push(0, 0);\n    pthread_create(0,0,0,0); pthread_cleanup_pop(0);])])\n  for boost_pthread_flag in '' $boost_pthread_flags; do\n    boost_pthread_ok=false\ndnl Re-use the test file already generated.\n    boost_pthreads__save_LIBS=$LIBS\n    LIBS=\"$LIBS $boost_pthread_flag\"\n    AC_LINK_IFELSE([],\n      [if grep \".*$boost_pthread_flag\" conftest.err; then\n         echo \"This flag seems to have triggered warnings\" >&AS_MESSAGE_LOG_FD\n       else\n         boost_pthread_ok=:; boost_cv_pthread_flag=$boost_pthread_flag\n       fi])\n    LIBS=$boost_pthreads__save_LIBS\n    $boost_pthread_ok && break\n  done\n])\nAC_LANG_POP([C++])dnl\n])# _BOOST_PTHREAD_FLAG\n\n\n# _BOOST_gcc_test(MAJOR, MINOR)\n# -----------------------------\n# Internal helper for _BOOST_FIND_COMPILER_TAG.\nm4_define([_BOOST_gcc_test],\n[\"defined __GNUC__ && __GNUC__ == $1 && __GNUC_MINOR__ == $2 && !defined __ICC @ gcc$1$2\"])dnl\n\n\n# _BOOST_FIND_COMPILER_TAG()\n# --------------------------\n# Internal.  When Boost is installed without --layout=system, each library\n# filename will hold a suffix that encodes the compiler used during the\n# build.  The Boost build system seems to call this a `tag'.\nAC_DEFUN([_BOOST_FIND_COMPILER_TAG],\n[AC_REQUIRE([AC_PROG_CXX])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_CACHE_CHECK([for the toolset name used by Boost for $CXX], [boost_cv_lib_tag],\n[boost_cv_lib_tag=unknown\nif test x$boost_cv_inc_path != xno; then\n  AC_LANG_PUSH([C++])dnl\n  # The following tests are mostly inspired by boost/config/auto_link.hpp\n  # The list is sorted to most recent/common to oldest compiler (in order\n  # to increase the likelihood of finding the right compiler with the\n  # least number of compilation attempt).\n  # Beware that some tests are sensible to the order (for instance, we must\n  # look for MinGW before looking for GCC3).\n  # I used one compilation test per compiler with a #error to recognize\n  # each compiler so that it works even when cross-compiling (let me know\n  # if you know a better approach).\n  # Known missing tags (known from Boost's tools/build/v2/tools/common.jam):\n  #   como, edg, kcc, bck, mp, sw, tru, xlc\n  # I'm not sure about my test for `il' (be careful: Intel's ICC pre-defines\n  # the same defines as GCC's).\n  for i in \\\n    _BOOST_gcc_test(4, 5) \\\n    _BOOST_gcc_test(4, 4) \\\n    _BOOST_gcc_test(4, 3) \\\n    _BOOST_gcc_test(4, 2) \\\n    _BOOST_gcc_test(4, 1) \\\n    _BOOST_gcc_test(4, 0) \\\n    \"defined __GNUC__ && __GNUC__ == 3 && !defined __ICC \\\n     && (defined WIN32 || defined WINNT || defined _WIN32 || defined __WIN32 \\\n         || defined __WIN32__ || defined __WINNT || defined __WINNT__) @ mgw\" \\\n    _BOOST_gcc_test(3, 4) \\\n    _BOOST_gcc_test(3, 3) \\\n    \"defined _MSC_VER && _MSC_VER >= 1500 @ vc90\" \\\n    \"defined _MSC_VER && _MSC_VER == 1400 @ vc80\" \\\n    _BOOST_gcc_test(3, 2) \\\n    \"defined _MSC_VER && _MSC_VER == 1310 @ vc71\" \\\n    _BOOST_gcc_test(3, 1) \\\n    _BOOST_gcc_test(3, 0) \\\n    \"defined __BORLANDC__ @ bcb\" \\\n    \"defined __ICC && (defined __unix || defined __unix__) @ il\" \\\n    \"defined __ICL @ iw\" \\\n    \"defined _MSC_VER && _MSC_VER == 1300 @ vc7\" \\\n    _BOOST_gcc_test(2, 95) \\\n    \"defined __MWERKS__ && __MWERKS__ <= 0x32FF @ cw9\" \\\n    \"defined _MSC_VER && _MSC_VER < 1300 && !defined UNDER_CE @ vc6\" \\\n    \"defined _MSC_VER && _MSC_VER < 1300 && defined UNDER_CE @ evc4\" \\\n    \"defined __MWERKS__ && __MWERKS__ <= 0x31FF @ cw8\"\n  do\n    boost_tag_test=`expr \"X$i\" : 'X\\([[^@]]*\\) @ '`\n    boost_tag=`expr \"X$i\" : 'X[[^@]]* @ \\(.*\\)'`\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#if $boost_tag_test\n/* OK */\n#else\n# error $boost_tag_test\n#endif\n]])], [boost_cv_lib_tag=$boost_tag; break], [])\n  done\nAC_LANG_POP([C++])dnl\n  case $boost_cv_lib_tag in #(\n    # Some newer (>= 1.35?) versions of Boost seem to only use \"gcc\" as opposed\n    # to \"gcc41\" for instance.\n    *-gcc | *'-gcc ') :;; #(  Don't re-add -gcc: it's already in there.\n    gcc*)\n      boost_tag_x=\n      case $host_os in #(\n        darwin*)\n          if test $boost_major_version -ge 136; then\n            # The `x' added in r46793 of Boost.\n            boost_tag_x=x\n          fi;;\n      esac\n      # We can specify multiple tags in this variable because it's used by\n      # BOOST_FIND_LIB that does a `for tag in -$boost_cv_lib_tag' ...\n      boost_cv_lib_tag=\"$boost_tag_x$boost_cv_lib_tag -${boost_tag_x}gcc\"\n      ;; #(\n    unknown)\n      AC_MSG_WARN([[could not figure out which toolset name to use for $CXX]])\n      boost_cv_lib_tag=\n      ;;\n  esac\nfi])dnl end of AC_CACHE_CHECK\n])# _BOOST_FIND_COMPILER_TAG\n\n\n# _BOOST_GUESS_WHETHER_TO_USE_MT()\n# --------------------------------\n# Compile a small test to try to guess whether we should favor MT (Multi\n# Thread) flavors of Boost.  Sets boost_guess_use_mt accordingly.\nAC_DEFUN([_BOOST_GUESS_WHETHER_TO_USE_MT],\n[# Check whether we do better use `mt' even though we weren't ask to.\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#if defined _REENTRANT || defined _MT || defined __MT__\n/* use -mt */\n#else\n# error MT not needed\n#endif\n]])], [boost_guess_use_mt=:], [boost_guess_use_mt=false])\n])\n\n# _BOOST_AC_LINK_IFELSE(PROGRAM, [ACTION-IF-TRUE], [ACTION-IF-FALSE])\n# -------------------------------------------------------------------\n# Fork of _AC_LINK_IFELSE that preserves conftest.o across calls.  Fragile,\n# will break when Autoconf changes its internals.  Requires that you manually\n# rm -f conftest.$ac_objext in between to really different tests, otherwise\n# you will try to link a conftest.o left behind by a previous test.\n# Used to aggressively optimize BOOST_FIND_LIB (see the big comment in this\n# macro).\n#\n# Don't use \"break\" in the actions, as it would short-circuit some code\n# this macro runs after the actions.\nm4_define([_BOOST_AC_LINK_IFELSE],\n[m4_ifvaln([$1], [AC_LANG_CONFTEST([$1])])dnl\nrm -f conftest$ac_exeext\nboost_save_ac_ext=$ac_ext\nboost_use_source=:\n# If we already have a .o, re-use it.  We change $ac_ext so that $ac_link\n# tries to link the existing object file instead of compiling from source.\ntest -f conftest.$ac_objext && ac_ext=$ac_objext && boost_use_source=false &&\n  _AS_ECHO_LOG([re-using the existing conftest.$ac_objext])\nAS_IF([_AC_DO_STDERR($ac_link) && {\n\t test -z \"$ac_[]_AC_LANG_ABBREV[]_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t $as_executable_p conftest$ac_exeext\ndnl FIXME: use AS_TEST_X instead when 2.61 is widespread enough.\n       }],\n      [$2],\n      [if $boost_use_source; then\n         _AC_MSG_LOG_CONFTEST\n       fi\n       $3])\nac_objext=$boost_save_ac_objext\nac_ext=$boost_save_ac_ext\ndnl Delete also the IPA/IPO (Inter Procedural Analysis/Optimization)\ndnl information created by the PGI compiler (conftest_ipa8_conftest.oo),\ndnl as it would interfere with the next link command.\nrm -f core conftest.err conftest_ipa8_conftest.oo \\\n      conftest$ac_exeext m4_ifval([$1], [conftest.$ac_ext])[]dnl\n])# _BOOST_AC_LINK_IFELSE\n\n# Local Variables:\n# mode: autoconf\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 3.0166015625,
          "content": "#\n# configure.ac\n#\n# Authors:\n#   Eric Butler <eric@codebutler.com>\n#   Nick Kossifidis <mickflemm@gmail.com>\n#\n#  This file is part of Firesheep.\n#\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAC_INIT([Firesheep], [0.1], [eric@codebutler.com],\n        [firesheep], [http://codebutler.github.com/firesheep])\nAC_PROG_CC([clang gcc])\nAC_PREREQ([2.61])\nAM_INIT_AUTOMAKE([foreign])\n\nAC_PROG_LIBTOOL\nAC_PROG_CXX([clang++ g++])\n\n# A common source of problems.\nif test ! -d backend/deps/http-parser; then\n\tAC_MSG_ERROR([http-parser missing, did you read the README?])\nfi\n\n# OSX doesn't come with pkg-config, but PKG_CHECK_MODULES has to be defined to something to avoid errors.\nm4_define_default([PKG_CHECK_MODULES], [AC_MSG_FAILURE([pkg-config was not found])])\n\nAC_CANONICAL_HOST\nAC_CANONICAL_TARGET\n\ncase \"$build_cpu\" in\n\ti[[3456]]86*)\n\t\tbuild_arch=\"x86\"\n\t\t;;\n\tamd64*|x86_64*)\n\t\tbuild_arch=\"x86_64\"\n\t\t;;\nesac\n\ncase \"$host_os\" in\n\tcygwin)\n\t\tDLL_EXT=\"dll\"\n\t\tFIRESHEEP_PLATFORM_NAME=WIN32\n\t\tFIRESHEEP_PLATFORM=\"WINNT_x86-msvc\"\n\t;;\n\tdarwin*)\n\t\tDLL_EXT=\"dylib\"\n\t\tFIRESHEEP_PLATFORM_NAME=OSX\n\t\tFIRESHEEP_PLATFORM=\"osx\"\n\t\tCFLAGS=\"-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk -mmacosx-version-min=10.6\"\n\t;;\n\tlinux*)\n\t\tDLL_EXT=\"so\"\n\t\tFIRESHEEP_PLATFORM_NAME=LINUX\n\t\tFIRESHEEP_PLATFORM=\"Linux_${build_arch}-gcc3\"\n\t;;\nesac\n\nAC_SUBST(DLL_EXT)\nAC_SUBST(FIRESHEEP_PLATFORM)\nAC_SUBST(FIRESHEEP_PLATFORM_NAME)\n\nAM_CONDITIONAL(PLATFORM_WIN32, test x$FIRESHEEP_PLATFORM_NAME = xWIN32)\nAM_CONDITIONAL(PLATFORM_OSX, test x$FIRESHEEP_PLATFORM_NAME = xOSX)\nAM_CONDITIONAL(PLATFORM_LINUX, test x$FIRESHEEP_PLATFORM_NAME = xLINUX)\n\n# BEGIN PCAP LIBS\nAC_PATH_PROG([PCAP_CONFIG], [pcap-config], [no], [$PATH])\nif test \"x$PCAP_CONFIG\" = \"xno\"; then\n\tAC_MSG_ERROR([pcap-config not found (libpcap not installed ?)])\nfi\n\nPCAP_LIBS=`pcap-config --libs`\nAC_SUBST(PCAP_LIBS)\nPCAP_CFLAGS=`pcap-config --cflags`\nAC_SUBST(PCAP_FLAGS)\n# END PCAP LIBS\n\n# BEGIN BOOST LIBS\n# Specific version ?\n#BOOST_REQUIRE([1.40])\nBOOST_REQUIRE\nAC_SUBST(BOOST_CPPFLAGS)\nBOOST_FORMAT\nAC_SUBST(BOOST_FORMAT_LIBS)\nBOOST_STRING_ALGO\nAC_SUBST(BOOST_STRING_ALGO_LIBS)\n# END BOOST LIBS\n\nif test x$FIRESHEEP_PLATFORM_NAME = xLINUX; then\n\tPKG_CHECK_MODULES(UDEV, [libudev])\n\tAC_SUBST(UDEV_CFLAGS)\n\tAC_SUBST(UDEV_LIBS)\nfi\n\nCXXFLAGS=\"-Wall -g -O0\"\nAC_SUBST(CXXFLAGS)\n\nAC_CONFIG_FILES([\nMakefile\nbackend/Makefile\n])\n\nAC_OUTPUT\n\necho \"\nFiresheep-$VERSION\n\n    Platform:  ${FIRESHEEP_PLATFORM}\n\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "xpi",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}