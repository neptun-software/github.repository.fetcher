{
  "metadata": {
    "timestamp": 1736565899500,
    "page": 862,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gosu/gosu",
      "stars": 2023,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.8564453125,
          "content": "BasedOnStyle: WebKit\n\nAlignAfterOpenBracket: Align\nAllowShortFunctionsOnASingleLine: InlineOnly\nBreakBeforeBraces: Custom\nBreakConstructorInitializers: BeforeColon\nBraceWrapping:\n  AfterClass: true\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterStruct: true\n  AfterUnion: true\n  BeforeElse: true\nColumnLimit: 100\nIncludeBlocks: Regroup\nIncludeCategories:\n  # Make sure that Google Test comes first, so that the FRIEND_TEST macro works reliably.\n  - Regex: '^<gtest/gtest.h>$'\n    Priority: -1\n  - Regex: '^<Gosu/Fwd.hpp>$'\n    Priority: 0\n    SortPriority: 2\n  - Regex: '^<Gosu/'\n    Priority: 0\n    SortPriority: 3\n  - Regex: '^\"'\n    Priority: 0\n    SortPriority: 4\n  - Regex: '\\.h$'\n    Priority: 0\n    SortPriority: 5\n  - Regex: '.*'\n    Priority: 0\n    SortPriority: 6\nInsertBraces: true\nNamespaceIndentation: All\nPackConstructorInitializers: Never\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.220703125,
          "content": "Checks: >-\n  *,\n  -*-avoid-c-arrays,\n  -altera-*,\n  -bugprone-easily-swappable-parameters,\n  -bugprone-exception-escape,\n  -cert-err58-cpp,\n  -cppcoreguidelines-avoid-c-arrays,\n  -cppcoreguidelines-avoid-const-or-ref-data-members,\n  -cppcoreguidelines-avoid-magic-numbers,\n  -cppcoreguidelines-init-variables,\n  -cppcoreguidelines-macro-usage,\n  -cppcoreguidelines-owning-memory,\n  -cppcoreguidelines-prefer-member-initializer,\n  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n  -cppcoreguidelines-pro-bounds-constant-array-index,\n  -cppcoreguidelines-pro-bounds-pointer-arithmetic,\n  -cppcoreguidelines-pro-type-reinterpret-cast,\n  -cppcoreguidelines-pro-type-vararg,\n  -cppcoreguidelines-special-member-functions,\n  -fuchsia-*,\n  -google-*,\n  -hicpp-avoid-c-arrays,\n  -hicpp-braces-around-statements,\n  -hicpp-named-parameter,\n  -hicpp-no-array-decay,\n  -hicpp-signed-bitwise,\n  -hicpp-special-member-functions,\n  -hicpp-use-auto,\n  -hicpp-use-equals-default,\n  -hicpp-vararg,\n  -llvm-*,\n  -llvmlibc-*,\n  -misc-const-correctness,\n  -misc-no-recursion,\n  -misc-non-private-member-variables-in-classes,\n  -modernize-avoid-c-arrays,\n  -modernize-make-unique,\n  -modernize-return-braced-init-list,\n  -modernize-use-auto,\n  -modernize-use-default-member-init,\n  -modernize-use-equals-default,\n  -modernize-use-nodiscard,\n  -modernize-use-trailing-return-type,\n  -modernize-use-using,\n  -readability-braces-around-statements,\n  -readability-else-after-return,\n  -readability-identifier-length,\n  -readability-implicit-bool-conversion,\n  -readability-isolate-declaration,\n  -readability-magic-numbers,\n  -readability-make-member-function-const,\n  -readability-named-parameter,\n\nCheckOptions:\n  readability-identifier-naming.ClassCase: CamelCase\n  readability-identifier-naming.FunctionCase: lower_case\n  readability-identifier-naming.GlobalConstantCase: UPPER_CASE\n  readability-identifier-naming.MemberFunctionCase: lower_case\n  readability-identifier-naming.NamespaceCase: CamelCase\n  readability-identifier-naming.ParameterCase: lower_case\n  readability-identifier-naming.PrivateMemberCase: lower_case\n  readability-identifier-naming.PrivateMemberPrefix: m_\n  readability-identifier-naming.StructCase: CamelCase\n  readability-identifier-naming.VariableCase: lower_case\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.494140625,
          "content": "/lib*/Gosu*.lib\n/lib*/gosu-ffi.*\n/pkg\n/tmp\n\n# CMake files\n/build\n/examples/build\n/examples/*Example\n/test/GosuTests\n\n# CLion files\n/.idea\n/cmake-build-debug\n/cmake-build-debug-coverage\n/cmake-build-release\n*.profraw\n\n# Files from Mac builds & CocoaPod installs\n/**/xcuserdata\n/**/Pods\n/**/*.app\n\n# MSVC clutter\n/windows/ipch\n/windows/Win32\n/windows/x64\n/windows/*.ncb\n/windows/*.sdf\n/windows/*.suo\n/windows/*.user\n/windows/*.vs\n/windows/*.opendb\n/windows/*.opensdf\n/windows/Gosu.VC.db\n/examples/Tutorial.*\n"
        },
        {
          "name": ".yardopts",
          "type": "blob",
          "size": 0.0322265625,
          "content": "rdoc/gosu.rb - README.md COPYING\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.759765625,
          "content": "# Changelog\n\n## [2.0.0] - tbd\n* This version drops support for streaming I/O and other details from Gosu. The version number has been bumped to 2.0.0 to reflect this. Ruby/Gosu games should not be affected, and work as before. (#653)   \n* Slightly improve rendering artifacts in scaled images when not using \"retro\" mode. (#646, #653)\n* Remove support for writing TGA files, but add support for writing JPEG files. (#646)  \n* Fix a bug where invalid UTF-8 strings could trigger deadlocks or memory errors. (#652)  \n* Gosu now uses and requires C++20. Unfortunately, that means Ubuntu 20.04 has been dropped earlier than expected. (#647)\n* Make `Gosu::Window.sdl_window` available in Ruby. (#637)\n* `Gosu.clip_to` now works within `Gosu.render`. (#673) \n\n## [1.4.6] - 2023-05-20\n* When using SDL 2.0.12 or later, the LED indicators on gamepads will now be set to match the gamepad index that Gosu has allocated for them. (#639)\n* Added some missing `#include` statements, thanks to @LittleLightLittleFire for the PRs. (#641, #642)\n* Update all bundled dependencies. (#643)\n\n## [1.4.5] - 2022-12-24\n* Finish the fix for the Windows main loop from #634, a key part was missing. (#636)\n* Update all bundled dependencies, thanks to @cyberarm for the automation. (#635)\n\n## [1.4.4] - 2022-12-12\n* Add clipboard support in the form of `Gosu.clipboard`/`Gosu.clipboard=`. (Thanks @cyberarm! #630)\n* Fix a regression in the `Window.show` main loop on Windows that was introduced in 1.4.3. (#634)\n* Fix a potential build/linker error on ARM macOS. (Thanks @jimtng! #627)\n\n## [1.4.3] - 2022-03-27\n* Update bundled dependencies: stb_image, stb_image_write, stb_truetype, stb_vorbis, utf8proc, mojoAL, SDL_sound.\n* These updates fix MP3 playback and Gosu::Sample pitch changes. (#592, #623).\n* Introduce optional `retro: true` option in `Font#initialize`, thanks to @cyberarm. (#479, #624)\n\n## [1.4.1] - 2022-01-30\n* Fix an audio bug when repeatedly playing a Gosu::Song. (#618 / #619)\n* Fixed Window::tick never waiting for update_interval. (#620 / #621)\n\nBoth fixes once again contributed by @cyberarm.\n\n## [1.4.0] - 2022-01-21\n* Windows: Support for Ruby 3.1. (#611/#612)\n* Windows: Update SDL to 2.0.20 (#610), also update SDL_sound on all platforms (#606).\n* Replace OpenAL (usually oal-soft) with mojoAL. (#608)\n\nAll three improvements contributed by @cyberarm.\n\n## [1.3.0] - 2022-01-02\n* Add `Window#gain_focus` callback to mirror `Window#lose_focus`, which was previously undocumented and only implemented on iOS. (#600) Thanks @cyberarm!\n* Fix Gosu::Window#tick not raising errors from callbacks. (#594) Thanks again, @cyberarm!\n* C++: Refactor the Gosu::Color interface to be less verbose.\n\n## [1.2.0] - 2021-03-18\n* `Gosu.language()` is deprecated, please use `Gosu.user_languages()` instead. \n* macOS: Fixed loading of bold/italic system TTF fonts.\n\n## [1.1.1] - 2021-02-13\n\n* Improved accuracy of `Gosu.available_width` / `Gosu.available_height`. Thanks @cyberarm!\n* Fixed a bug where macros (images returned by `Gosu.record`) were deformed when rendered with specific coordinates. Thanks @jsb!\n* macOS: Improved support for ARM-based Macs.\n\n## [1.1.0] - 2021-01-20\n\n* `Gosu::Window` can now be created with `borderless: true` (`WF_BORDERLESS` in C++) to hide all window chrome. Thanks to @cyberarm for this contribution.\n* `Gosu::Window#resizable=` and `Gosu::Window#borderless=` allow changing these properties later.\n* Windows: Pin the main thread to the first processor core during `Window::show` to avoid timing glitches.\n\n## [1.0.0] â€“ 2020-12-29\n\n* Breaking change: `Image.from_text`, `Font.draw_text` and `Font.text_width` have stopped parsing pseudo-HTML markup. Replace \"text\" with \"markup\" in each method name to get this functionality back.\n* Breaking change: The alternative `gosu/zen` interface has been removed.\n* Breaking change: `Gosu::Window::needs_cursor?` now returns true by default, not false.\n* Support for Ruby 3.0. Gosu now requires Ruby 2.5 or later, and can only be used on Windows when the RubyInstaller DevKit has been installed.\n* Support for analog gamepad sticks. Previously, all sticks and D-pads of gamepad 1 were merged into the same constants such as `GP_0_LEFT`. Now there is a `GP_0_DPAD_LEFT` button ID for the D-pad, and `GP_LEFT_STICK_X_AXIS` / `GP_RIGHT_STICK_X_AXIS` axis IDs that which can be used with `Gosu.axis()` to query a value between -1 and 1. Thanks to @cyberarm for this contribution. (#524, #540, #542, #543. #546)\n* Replace all audio libraries by a statically bundled copy of SDL_sound. (#539) \n* Added button IDs: `KB_PRINT_SCREEN`, `KB_SCROLL_LOCK`, `KB_PAUSE`, `KB_CAPS_LOCK`. Thanks to @edwinacunav for this contribution. (#545)\n* Some method arguments have been made optional again, for compatibility with very early Ruby/Gosu projects.\n* C++: Rewrite CMake files for Linux and macOS (#535), clean up MSVC 2019 project.\n* Adds a C API to use Gosu from other languages (using FFI or other mechanisms); this is a work in progress, but there are proof of concept bindings for Crystal and MRuby. Join the Discord server to learn more. Thanks to @cyberarm for this contribution.\n* Update all stb libraries.\n* Windows: Update the bundled versions of SDL 2 (2.0.14) and OpenAL soft (1.21.0).\n\n## [0.15.2] â€“ 2020-06-02\n\n* Fix compilation errors with gcc 10.\n\n## [0.15.1] â€“ 2020-01-21\n\n* Update utf8proc and all used stb libraries. (#520)\n* Windows: Support for Ruby 2.7. (#520)\n* Windows: Update bundled SDL version to 2.0.10 (#520)\n\n## [0.15.0] â€“ 2020-01-21\n\n* Introduce the `resizable: true` argument in Window#initialize  to create resizable windows (thanks @cyberarm). (#437)\n* Introduce `Image.from_blob(w, h, rgba)`, which makes it much easier to create images from binary data than having to emulate the `RMagick::Image` interface.\n* Fix a crash in debug mode when passing certain strings to `Image.from_text`. (#509)\n* Fix bugs in `Image#insert`. (#515)\n* Introduce `Color#argb`/`Color#to_i`. (#476)\n* Deprecate `Color#bgr`/`Color#abgr`.\n\n## [0.14.5] â€“ 2019-01-09\n\n* Add KB_NUMPAD_DELETE constant, thanks @PeterCamilleri!\n* Windows: Compatibility with Ruby 2.6.\n* Windows: Update bundled SDL version to 2.0.9.\n\n## [0.14.4] â€“ 2018-10-09\n\n* Add diagnostic logging when the `GOSU_DEBUG` environment variable is set.\n* Linux: Improve font fallback logic, which used to be severely broken on Fedora-based distributions.\n\n## [0.14.3] â€“ 2018-10-04\n\n* F11 can now also be used by default to toggle fullscreen mode (many browsers and video players support this shortcut).\n* `Gosu.render` now supports the `retro: true` argument in an option hash.\n* Update all stb libraries.\n* Windows, Linux: MP3 files now work both in Songs and Samples.\n* Linux: Improve both the default and fallback font logic; this should fix bold/italic text with the default font, and exceptions on some distributions.\n\n## [0.14.0] â€“ 2018-09-17\n\n* `Gosu.render(width, height) { ... }` can render arbitrary Gosu code to a new texture and return it as a `Gosu::Image`. This method may not be supported on computers with outdated OpenGL implementations. Thanks for @Kjarrigan for getting this method off the ground.\n* Text rendering has been completely rewritten to use stb_truetype for font rendering on *all* platforms. Gosu now renders text the same on all platforms (as long as the fonts are the same).\n* Ruby: `Gosu::Font#initialize` now accepts style parameters: `bold: true, italic: false`. Unlike in earlier versions of Gosu, `Font` is not bold by default.\n* Ruby: `Font#draw_markup`/`Font#draw_text`, `Font#draw_markup_rel`/`Font#draw_text_rel`, and `Font#markup_width`/`Font#text_width`, all parse markup for compatibility with older versions of Gosu. The existing methods will stop parsing markup in Gosu 1.0. If you want to keep using the markup feature, you should use the `markup` methods from now on.\n* Ruby: `Image.from_markup` (new) and `Image.from_text` both parse markup for compatibility with older versions of Gosu. `Image.from_text` will stop parsing markup in Gosu 1.0.\n* Ruby: `Image.from_markup`/`Image.from_text` now supports `alignment: :center`, `alignment: :right`, and the `spacing:` parameter even when there is no `width:` parameter.\n* Ruby: Remove support for Ruby 1.8-2.2 on Windows. Ruby 1.9 through 2.2 are still supported on macOS and Linux.\n* macOS: Compatibility with macOS 10.14 Mojave. (#458)\n* macOS: Fix mouse position in multi-monitor setups. (SDL bug 4255)\n* iOS: Support for `Gosu::TextInput` on iOS.\n\n## [0.13.3] â€“ 2018-03-08\n\n* Updated all stb dependencies. (#428)\n* Windows: Support for Ruby 2.5. (#427)\n* Windows: Update bundled SDL to 2.0.8.\n\n## [0.13.2] â€“ 2018-01-16\n\n* Fix `Gosu::KB_SLASH` constant, thanks to @mblumtritt for reporting this issue. (#426)\n* macOS: Fix compilation on macOS High Sierra with Apple's built-in Ruby 2.3, thanks to @jiazhh0325 for reporting this issue.\n\n## [0.13.1] â€“ 2017-11-25\n\n* Brings `draw_rect` in line with other `draw_` methods (available in C++, available on `Gosu::Window` in Ruby).\n* `SampleInstance` is now called `Channel`, but the old name still works in Ruby.\n* Update the stb_image dependency to fix crashes when loading 1-bit PNG files.\n* Windows: Update bundled SDL to 2.0.7.\n* macOS: Work around a compiler bug in Xcode 9+.\n* C++: Image and Sample have a default constructor now that creates an \"empty\" object; minor interface changes.\n\n## [0.12.1] â€“ 2016-06-17\n\n* Windows: Support for Ruby 2.4. (#407)\n* Windows: Fix MP3 playback on 32-bit systems. (#405)\n\n## [0.12.0] â€“ 2017-04-23\n\n* `Image#subimage` works for images larger than 1022x1022px. (#398, #400)\n* Windows, Linux: Support for MP3 files; requires `libmpg123-dev` on Linux. (#397)\n* C++: Use `std::function` parameters instead of begin/end function pairs (#399).\n* Raspberry Pi: Use correct OpenGL version on Pi 2 & 3.\n* Add `Window#drop(filename)` callback for when the user drops a file onto the window (#378/#382). Thanks @Kjarrigan!\n* Fix an inconsistency in `Color#from_hsv`. (#359)"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.40625,
          "content": "# Structure inspired by https://github.com/pabloariasal/modern-cmake-sample\n# Assumptions:\n# - We cannot go higher than CMake 3.22.1 while we support Ubuntu 22.04.\n# - Prefer static libraries. Users should link Gosu into their games.\n# - This is not (yet?) going to be used for building Ruby/Gosu.\n# - This is not (yet?) going to replace the Visual Studio project for Windows.\ncmake_minimum_required(VERSION 3.22.1...3.26.4 FATAL_ERROR)\n\nproject(Gosu VERSION 2.0.0)\n\n\n##############################################\n# Global options\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n\n##############################################\n# Declare dependencies\n\nfind_package(SDL2 REQUIRED)\nfind_package(OpenGL REQUIRED)\n\nif (APPLE)\n    find_library(COCOA_LIBRARY Cocoa)\n    find_library(AUDIO_TOOLBOX_LIBRARY AudioToolbox)\n    find_library(CORE_TEXT_LIBRARY CoreText)\n    find_library(ICONV_LIBRARY iconv)\nelse ()\n    find_package(PkgConfig REQUIRED)\n    pkg_check_modules(FONTCONFIG REQUIRED fontconfig)\nendif ()\n\n\n##############################################\n# Create target and set properties\n\nfile(GLOB_RECURSE C_FILES ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/*.c)\nfile(GLOB HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/include/Gosu/*.hpp)\nfile(GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)\n\nadd_library(gosu ${C_FILES} ${HEADER_FILES} ${SOURCE_FILES})\n\n# Gosu uses C++20 in its public interface, so CMake projects using Gosu must support it too.\ntarget_compile_features(gosu PUBLIC cxx_std_20)\n\n# This is necessary so that a static libgosu.a can be used in e.g. a dynamic libgosu-ffi.so.\nset_property(TARGET gosu PROPERTY POSITION_INDEPENDENT_CODE ON)\n\n# Ignore deprecation warnings from within Gosu while compiling Gosu itself.\ntarget_compile_definitions(gosu PRIVATE -DGOSU_DEPRECATED=)\n\n# Compile all C++ files as Objective-C++ on macOS so that we can use ObjC APIs.\nif (APPLE)\n    set_source_files_properties(${SOURCE_FILES} PROPERTIES\n            COMPILE_FLAGS \"-x objective-c++\")\nendif ()\n\ntarget_include_directories(gosu PUBLIC\n        $<INSTALL_INTERFACE:include>\n        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>)\n\n# Use target_include_directories(... SYSTEM ...) to suppress warnings in these headers.\ntarget_include_directories(gosu SYSTEM PRIVATE\n        ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/mojoAL/AL\n        ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/SDL_sound\n        ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/stb\n        ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/utf8proc)\n\ntarget_link_libraries(gosu PRIVATE\n        SDL2::SDL2\n        OpenGL::GL\n        # Only defined on macOS\n        ${COCOA_LIBRARY}\n        ${AUDIO_TOOLBOX_LIBRARY}\n        ${CORE_TEXT_LIBRARY}\n        ${ICONV_LIBRARY}\n        # Only defined on Linux\n        ${FONTCONFIG_LIBRARIES})\n\n\n##############################################\n# Installation instructions\n\ninclude(GNUInstallDirs)\nset(INSTALL_CONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/Gosu)\n\ninstall(TARGETS gosu\n        EXPORT gosu-targets\n        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\nset_target_properties(gosu PROPERTIES EXPORT_NAME Gosu)\n\ninstall(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n# Export the targets to a script\ninstall(EXPORT gosu-targets\n        FILE GosuTargets.cmake\n        NAMESPACE Gosu::\n        DESTINATION ${INSTALL_CONFIGDIR})\n\ninclude(CMakePackageConfigHelpers)\nconfigure_package_config_file(${CMAKE_CURRENT_LIST_DIR}/cmake/GosuConfig.cmake.in\n        ${CMAKE_CURRENT_BINARY_DIR}/GosuConfig.cmake\n        INSTALL_DESTINATION ${INSTALL_CONFIGDIR})\n\ninstall(FILES\n        ${CMAKE_CURRENT_BINARY_DIR}/GosuConfig.cmake\n        DESTINATION ${INSTALL_CONFIGDIR})\n\nexport(EXPORT gosu-targets\n        FILE ${CMAKE_CURRENT_BINARY_DIR}/GosuTargets.cmake\n        NAMESPACE Gosu::)\n\n\n##############################################\n# FFI interface, examples, and tests\n\n# Alias our library as Gosu::Gosu so that examples and submodules can depend\n# on it by its normal name.\nadd_library(Gosu::Gosu ALIAS gosu)\n\n# Only build the FFI interface, examples, and tests if this is the top-level CMake module.\nif (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)\n    add_subdirectory(ffi)\n\n    add_subdirectory(examples)\n\n    # If GoogleTest is not available as a CMake module, this is a no-op.\n    # (enable_testing() MUST come before add_subdirectory: https://stackoverflow.com/a/30264765)\n    enable_testing()\n    add_subdirectory(test)\nendif ()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.037109375,
          "content": "# Code Style\n\nThis file describes the C++ and Ruby code styles in this repository.\nIf you are looking for instructions on how to customize and compile Gosu, see the [Hacking Gosu wiki page](https://github.com/gosu/gosu/wiki/Hacking-Gosu).\n\n## Whitespace and Line Lengths\n\nDo not use lines longer than 100 characters, except in Markdown files, where each line should be one sentence.  \n**Rationale:** Shorter lines introduce distracting line breaks.\nLonger lines require horizontal scrolling in editors (depending on screen size) and on GitHub.\n\n## C++: Use clang-format with hints\n\nGosu provides a .clang-format file that yields acceptable results for most C++ code.\nSometimes, code will look a bit more consistent if you add a `//` at the end of a line to force a line break.\n\n## Ruby: Use rufo\n\n* Use [the `rufo` gem](https://github.com/ruby-formatter/rufo) with the default settings. \n  [Visual Studio Code has a plugin](https://marketplace.visualstudio.com/items?itemName=mbessey.vscode-rufo) to format code on save.\n* Use simple (dumb, boring) Ruby code where possible.  \n  **Rationale:** Ruby/Gosu is often used by novices.\n* Use `\"` for strings, only use `'` when absolutely necessary.\n  **Rationale:** Consistency.\n* Do not replace all uses of `if not` by `unless`.\n  There is a time and place for both.  \n  **Rationale:** The English word \"unless\" is [used to describe exceptional conditions](https://dictionary.cambridge.org/us/dictionary/english/unless).  \n  See also [this discussion on GitHub](https://github.com/bbatsov/ruby-style-guide/issues/329).\n* Use `and`, `or` and `not` in conditions.\n  **Example:** `if admin? and not undeletable?`  \n  **Example:** `while object = stack.pop and object.valid?`  \n  **Rationale:** Easy to read, consistency with other control flow operators.\n* Use `&&`, `||` and `!` in Boolean algebra.  \n  **Example:** `should_delete = is_admin && !is_undeletable`  \n  **Example:** `puts(description || \"no description\")`  \n  **Rationale:** Consistency with other binary operators (`|`/`&` and `||=`/`&&=`), no problems with operator precedence.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.2685546875,
          "content": "Copyright (C) 2001-2023 Julian Raschke, Jan LÃ¼cker, cyberarm, and all\r\nother contributors: https://github.com/gosu/gosu/graphs/contributors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a\r\ncopy of this software and associated documentation files (the \"Software\"),\r\nto deal in the Software without restriction, including without limitation\r\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\r\nand/or sell copies of the Software, and to permit persons to whom the\r\nSoftware is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\nDEALINGS IN THE SOFTWARE.\r\n\r\n            Julian Raschke <julian@raschke.de> & contributors\r\n                        https://www.libgosu.org/\r\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.1923828125,
          "content": "source \"https://rubygems.org\"\n\ngem \"ffi\"\n\ngroup :test do\n  gem \"minitest\"\n  gem \"minitest-reporters\"\nend\n\ngroup :development do\n  gem \"excon\"\n  gem \"rake-compiler\"\n  gem \"rubyzip\"\n  gem \"yard\"\nend\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 0.55078125,
          "content": "GEM\n  remote: https://rubygems.org/\n  specs:\n    ansi (1.5.0)\n    builder (3.2.4)\n    excon (0.100.0)\n    ffi (1.15.5)\n    minitest (5.19.0)\n    minitest-reporters (1.6.1)\n      ansi\n      builder\n      minitest (>= 5.0)\n      ruby-progressbar\n    rake (13.0.6)\n    rake-compiler (1.2.5)\n      rake\n    ruby-progressbar (1.13.0)\n    rubyzip (2.3.2)\n    yard (0.9.36)\n\nPLATFORMS\n  arm64-darwin-21\n  arm64-darwin-22\n  arm64-darwin-23\n  x86_64-linux\n\nDEPENDENCIES\n  excon\n  ffi\n  minitest\n  minitest-reporters\n  rake-compiler\n  rubyzip\n  yard\n\nBUNDLED WITH\n   2.3.11\n"
        },
        {
          "name": "Gosu.podspec",
          "type": "blob",
          "size": 2.8408203125,
          "content": "SDL2_PREFIX = `sdl2-config --prefix`.chomp\n\nPod::Spec.new do |s|\n  s.name = \"Gosu\"\n  s.version = \"2.0.0\"\n  s.summary = \"2D game development library.\"\n  s.homepage = \"https://www.libgosu.org/\"\n  s.license = { type: \"MIT\", file: \"COPYING\" }\n  s.author = { \"Julian Raschke\" => \"julian@raschke.de\" }\n  s.documentation_url = \"https://www.libgosu.org/cpp/\"\n\n  s.source = { git: \"https://github.com/gosu/gosu.git\", tag: \"v#{s.version}\" }\n\n  # Bundle our dependencies into one subspec so that we can silence warnings for them.\n  s.subspec \"Dependencies\" do |ss|\n    ss.compiler_flags = \"-Wno-everything\"\n    # Be careful not to include SDL_sound or mojoAL on iOS, where Gosu still uses AudioToolbox and OpenAL instead.\n    ss.source_files = \"dependencies/{stb,utf8proc}/**/*.{h,c}\"\n    ss.osx.source_files = \"dependencies/{SDL_sound,mojoAL}/**/*.{h,c}\"\n    ss.osx.compiler_flags = \"-I#{SDL2_PREFIX}/include/SDL2 -Idependencies/mojoAL/AL\"\n  end\n\n  s.subspec \"Gosu\" do |ss|\n    ss.dependency \"Gosu/Dependencies\"\n    ss.osx.deployment_target = \"10.15\"\n    ss.ios.deployment_target = \"13.0\"\n\n    # Ignore Gosu using deprecated Gosu APIs internally.\n    # Compile all source files as Objective-C++ so we can use ObjC frameworks where necessary.\n    # Also silence warnings about invalid doxygen markup in SDL headers, and make deps available.\n    ss.compiler_flags = \"-DGOSU_DEPRECATED= -DGLES_SILENCE_DEPRECATION -Wno-documentation -x objective-c++ -Idependencies/stb -Idependencies/utf8proc\"\n\n    ss.osx.libraries = \"iconv\"\n    # Include all frameworks necessary for SDL 2, because we link to it statically.\n    ss.osx.frameworks = \"ApplicationServices\", \"AudioUnit\", \"Carbon\", \"Cocoa\", \"CoreAudio\",\n                        \"ForceFeedback\", \"IOKit\", \"OpenGL\"\n    ss.osx.weak_frameworks = \"CoreHaptics\", \"GameController\", \"QuartzCore\", \"Metal\"\n    # Frameworks used directly by Gosu for iOS.\n    ss.ios.frameworks = \"AVFoundation\", \"CoreGraphics\", \"OpenGLES\", \"QuartzCore\", \"AudioToolbox\", \"OpenAL\"\n\n    ss.osx.compiler_flags = \"-I#{SDL2_PREFIX}/include/SDL2 -Idependencies/mojoAL\"\n    # Statically link SDL 2, so that compiled games will be self-contained.\n    ss.osx.xcconfig = { \"OTHER_LDFLAGS\" => \"#{SDL2_PREFIX}/lib/libSDL2.a\" }\n\n    ss.public_header_files = \"include/Gosu/*.hpp\"\n    ss.source_files = [\"include/Gosu/*.hpp\", \"src/*.{hpp,cpp}\"]\n    # Do not include FFI wrappers in the Pod project - this spec is for the C++ interface.\n    ss.exclude_files = \"src/Constants.cpp\", \"src/*Wrapper.cpp\"\n\n    # Gosu requires C++20 features and GNU extensions, but Xcode only uses gnu++14 by default.\n    ss.pod_target_xcconfig = {\n      \"CLANG_CXX_LANGUAGE_STANDARD\" => \"gnu++20\",\n      \"CLANG_CXX_LIBRARY\" => \"libc++\",\n    }\n  end\n\n  s.subspec \"GosuAppDelegateMain\" do |ss|\n    ss.dependency \"Gosu/Gosu\"\n    ss.source_files = \"src/GosuAppDelegate.mm\"\n    ss.platform = :ios, \"8.0\"\n  end\n\n  s.default_subspec = \"Gosu\"\nend\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.9541015625,
          "content": "Welcome to Gosu!\n================\n\nGosu is a 2D game development library for Ruby and C++.\n\nThe main website is [www.libgosu.org](https://www.libgosu.org/).\nThe source code, wiki, issue tracker and change log are all hosted on [GitHub](https://github.com/gosu/gosu).\n\nGosu is released under the MIT license.\n\nGetting Started\n---------------\n\nThe best entry point into Gosu's documentation is the [wiki home page](https://github.com/gosu/gosu/wiki).\nTry doing the tutorials there if you don't know how to get started,\nor look at existing projects in the [Gosu Showcase](https://www.libgosu.org/cgi-bin/mwf/board_show.pl?bid=2).\n\nCommunity\n---------\n\n- There is a lively [Discord community](https://discord.gg/5nEBXDc).\n- If you want to discuss or announce something in a more permanent place than a chat room, we also have a [message board](https://www.libgosu.org/cgi-bin/mwf/forum.pl).\n- Please file bugs and feature requests [on GitHub](https://github.com/gosu/gosu/issues).\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 0.73828125,
          "content": "require \"rubygems\"\nrequire \"fileutils\"\nrequire \"date\"\nrequire \"rake/extensiontask\"\nrequire \"rake/testtask\"\n\nGOSU_VERSION = ENV[\"GOSU_RELEASE_VERSION\"] || \"0.0.0\"\n\nDir.glob(\"./rake/*.rb\").sort.each { |task| require task }\n\ndesc \"Update the C++ reference on libgosu.org (needs SSH access)\"\ntask :update_doxygen do\n  sh \"ssh #{ENV[\"PROJECTS_HOST\"]} 'cd #{ENV[\"PROJECTS_ROOT\"]}/libgosu.org/ && \" +\n       \"svn checkout https://github.com/gosu/gosu/trunk/include/Gosu && PATH=../doxygen/bin:$PATH doxygen'\"\nend\n\nRake::TestTask.new do |t|\n  t.verbose = true\n  t.warning = true\nend\n\ntask :test => :compile\n\ndesc \"Run all tests, even those that require human input\"\ntask :test_interactive do\n  ENV[\"GOSU_TEST_INTERACTIVE\"] = \"true\"\n  Rake::Task[\"test\"].invoke\nend\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "ffi",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib64",
          "type": "tree",
          "content": null
        },
        {
          "name": "rake",
          "type": "tree",
          "content": null
        },
        {
          "name": "rdoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}