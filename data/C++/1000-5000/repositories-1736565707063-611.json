{
  "metadata": {
    "timestamp": 1736565707063,
    "page": 611,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/phxsql",
      "stars": 2467,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.6923828125,
          "content": "[submodule \"third_party/colib\"]\n\tpath = third_party/colib\n\turl = https://github.com/Tencent/libco\n[submodule \"third_party/gflags\"]\n\tpath = third_party/gflags\n\turl = https://github.com/gflags/gflags\n[submodule \"third_party/glog\"]\n\tpath = third_party/glog\n\turl = https://github.com/google/glog\n[submodule \"third_party/protobuf\"]\n\tpath = third_party/protobuf\n\turl = https://github.com/google/protobuf\n[submodule \"third_party/leveldb\"]\n\tpath = third_party/leveldb\n\turl = https://github.com/google/leveldb\n[submodule \"third_party/phxpaxos\"]\n\tpath = third_party/phxpaxos\n\turl = https://github.com/Tencent/phxpaxos\n[submodule \"third_party/phxrpc\"]\n\tpath = third_party/phxrpc\n\turl = https://github.com/Tencent/phxrpc\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.267578125,
          "content": "# Ubuntu 14.04 Trusty support\nsudo: required\ndist: trusty\nservices:\n    - docker\n\nlanguage: cpp\ncompiler: g++\ngit:\n    submodules: false\nscript:\n    - docker build -t phxsql/phxsql:latest . && ./test-with-docker.sh\nnotifications:\n    email: true\nbranches:\n  only:\n  - /.*/\n\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.30078125,
          "content": "# Names should be added to this file like so:\r\n# Name or Organization <email address>\r\n\r\nTencent Inc.\r\n\r\nDuokai Huang <mariohuang AT tencent.com>\r\nJunchao Chen <junechen AT tencent.com>\r\nHaochuan Cui <lynncui AT tencent.com>\r\nMing Chen <mingchen AT tencent.com>\r\nSifan Liu <stephenliu AT tencent.com>\r\n\r\n\r\n\r\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5009765625,
          "content": "FROM buildpack-deps:jessie\n\nCOPY . /build\n\nRUN groupadd -r mysql && useradd -r -g mysql mysql \\\n\t&& apt-get update \\\n\t&& apt-get install -y cmake --no-install-recommends \\\n\t&& cd /build \\\n\t&& ./build.sh \\\n\t&& mv /build/install_package /phxsql \\\n\t&& rm -rf /build \\\n\t&& apt-get purge -y --auto-remove cmake\n\nWORKDIR /phxsql/tools\n\nENV PATH=\"/phxsql/sbin:/phxsql/percona.src/bin:$PATH\"\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 54321 6000 11111 17000 8001\n\nVOLUME /data\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 1.8857421875,
          "content": "Installation Instructions\n*************************\n\nCopyright (C) 2016 Tencent.\n\nPhxSql-Specific Installation Notes\n====================================\n\n*** NOTE FOR 64-BIT LINUX SYSTEMS\n\nThe PhxSql library has to be built on 64-bit systems or you may\nexperience some problems.\n\nBasic Installation\n==================\n\nBriefly, the shell commands `./autoinstall.sh; make;make install' should \nconfigure and build this package. The following more-detailed instructions \nare generic. \n   The `autoinstall.sh' shell script attempts to guess correct values \nfor various system-dependent variables used during compilation. It \nuses those values and Makefile.define in each directory which describes \nthe source files infomation to create a `Makefile' in each directory of \nthe package. \n\n   The file `makefile.mk' is used to set options of the compilation \nenvironment. You need modify it if you want to change the options including\nthe paths of the third party libraries, like glog, leveldb, and protobuf.\n\nThe simplest way to compile this package is:\n  1. Make sure the third party libraries, such as protobuf (3.0 or above) \n  leveldb and glog, have been installed in the system. \n  Please make sure the CXXFLAGS '-fPIC' has been added while compiling thrid \n  party libraries.\n\n  2. `cd' to the directory containing the package's source code and type\n     `./autoinstall.sh' to configure the package for your system.\n\n  3. Type `make' to compile the package.\n\n  4. Type `make install' to install the programs to the destination directory.\n\n  5. You can remove the program binaries and object files from the source \n  code directory by typing `make clean'.  \n\nCompilers and Options\n=====================\n\nGlibc 2.12 or above, as well as 64bit option and C++ 11 support in compiler,\nis required to build the library.\n\nIf you want to include more options, modifying the makefile.mk file in \nthe source code directory is a good idea.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 20.890625,
          "content": "Tencent is pleased to support the open source community by making PhxSQL available.  \nCopyright (C) 2016 THL A29 Limited, a Tencent company.  All rights reserved.\nIf you have downloaded a copy of the PhxSQL binary from Tencent, please note that the PhxSQL binary is licensed under the GNU General Public License, Version 2.0.\nIf you have downloaded a copy of the PhxSQL source code from Tencent, please note that PhxSQL source code is licensed under the GNU General Public License, Version 2.0, except for the third-party components listed below which are subject to different license terms.  Your integration of PhxSQL into your own projects may require compliance with the GNU General Public License, Version 2.0, as well as the other licenses applicable to the third-party components included within PhxSQL.\nA copy of the GNU General Public License, Version 2.0 is included in this file.\nOther dependencies and licenses:\n\nOpen Source Software Licensed under the BSD 3-Clause License:\n--------------------------------------------------------------------\n1. glog  0.3.3\nCopyright (c) 2008, Google Inc.\nAll rights reserved.\nCopyright (c) 2003-2008, Jouni Malinen <j@w1.fi> and contributors\nAll Rights Reserved.\n\n2. leveldb  1.1\nCopyright (c) 2011 The LevelDB Authors.\nAll rights reserved.\n\n3. protobuf  3.0.0-beta-1\nCopyright 2014, Google Inc.  \nAll rights reserved.\n\n4. googletest  1.6.0\nCopyright 2008, Google Inc.\nAll rights reserved.\n\n\nTerms of the BSD 3-Clause License:\n--------------------------------------------------------------------\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of [copyright holder] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\nOR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\nOpen Source Software Licensed under the GNU General Public License, Version 2.0:\nThe below software in this distribution may have been modified by THL A29 Limited (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n--------------------------------------------------------------------\n1. percona-server  5.6.26-74.0\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.\nCopyright (c) 2010, Eric Bergen. \nAll rights reserved.\nCopyright (c) 2010, Venu Anuganti, http://venublog.com/ \nAll rights reserved.\nCopyright (c) 2004 - 2016 Oracle and/or its affiliates. \nAll rights reserved.\nCopyright (c) 2006-2016, Percona LLC. \nAll rights reserved.\n\n\n\nTerms of the GNU General Public License, Version 2.0:\n--------------------------------------------------------------------\nGNU GENERAL PUBLIC LICENSE\n\nVersion 2, June 1991\n\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.  \n51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nPreamble\n\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public\nLicense instead.) You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and modification follow.\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language.\n(Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n\n1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n\na) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. \nb) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. \nc) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program\nitself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) \n\nThese requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License,\nwhose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n\na) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, \nb) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, \nc) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) \n\nThe source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form)\nwith the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n\n4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n\n5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n\n7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a\nconsequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it\nis up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n\n8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n\n9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n\n10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of\nsoftware generally.\n\nNO WARRANTY\n\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nPROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE\nOF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\nEND OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n\none line to give the program's name and an idea of what it does.\nCopyright (C) yyyy  name of author\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n\nGnomovision version 69, Copyright (C) year name of author\nGnomovision comes with ABSOLUTELY NO WARRANTY; for details\ntype `show w'.  This is free software, and you are welcome\nto redistribute it under certain conditions; type `show c' \nfor details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n\nYoyodyne, Inc., hereby disclaims all copyright\ninterest in the program `Gnomovision'\n(which makes passes at compilers) written \nby James Hacker.\n\nsignature of Ty Coon, 1 April 1989\nTy Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.0244140625,
          "content": "[简体中文README](https://github.com/Tencent/phxsql/blob/master/README.zh_cn.md)\r\n\r\n**PhxSQL is a high-availability and strong-consistency MySQL cluster built on Paxos and Percona.**\r\n\r\nAuthors: Junchao Chen, Haochuan Cui, Duokai Huang, Ming Chen and Sifan Liu \r\n\r\nContact us: phxteam@tencent.com\r\n\r\n[![Build Status](https://travis-ci.org/Tencent/phxsql.svg?branch=master)](https://travis-ci.org/Tencent/phxsql)\r\n\r\n#PhxSQL features:\r\n  - high availability by automatic failovers: the cluster works well when more than half of cluster nodes work and are interconnected.\r\n  - guarantee of data consistency among cluster nodes: replacing loss-less semi-sync between MySQL master and MySQL slaves with Paxos, PhxSQL ensures zero-loss binlogs between master and slaves and supports linearizable consistency, which is as strong as that of Zookeeper.\r\n  - complete compliance with MySQL and MySQL client: PhxSQL supports up to serializable isolation level of transaction.\r\n  - easy deployment and easy maintenance: PhxSQL, powered by in-house implementation of Paxos, has only 4 components including MySQL and doesn't depend on zookeeper or etcd for anything. PhxSql supports automated cluster membership hot reconfiguration.\r\n  \r\n\r\n\r\nThis project includes \r\n* Source codes\r\n* Third party submodules\r\n* Pre-compiled binaries for Ubuntu 64bit system.\r\n    \r\nProjects on which this project depends are also published by Tencent( phxpaxos, phxrpc, libco ).\r\nYou can download or clone them with --recurse-submodule.\r\n\r\n**phxpaxos：** [http://github.com/Tencent/phxpaxos](http://github.com/Tencent/phxpaxos \"http://github.com/Tencent/phxpaxos\")\r\n\r\n**phxrpc：** [http://github.com/Tencent/phxrpc](http://github.com/Tencent/phxrpc \"http://github.com/Tencent/phxrpc\")\r\n\r\n**libco：** [http://github.com/Tencent/libco](http://github.com/Tencent/libco \"http://github.com/Tencent/libco\")\r\n\r\n# Compilation of PhxSQL\r\n\r\n>If you prefer pre-compiled binaries, just skip this part.\r\n\r\n### Structure of PhxSQL Directories\r\n* PhxSQL\r\n    * phxsqlproxy\r\n    * phxbinlogsvr\r\n    * percona\r\n    * phx_percona\r\n        * plugin\r\n        * phxsync_phxrpc\r\n        * semisync\r\n    * third_party\r\n        * glog\r\n        * leveldb\r\n        * protobuf\r\n        * phxpaxos\r\n        * colib\r\n        * phxrpc\r\n    * tools\r\n    * phxrpc_package_config\r\n\r\n### Introduction of Directories.\r\n\r\n| Name | Introduction |\r\n| ------| ------ |\r\n| phxsqlproxy | surrogate between MySQL client and PhxSql |\r\n| phxbinlogsvr | server for global binlog synchronization and storage, as well as management of mastership and membership |\r\n| percona | Source code of percona5.6.31-77.0 |\r\n| phx_percona/plugin/phxsync_phxrpc | A plugin running in MySql that intercepts MySQL binlogs and forwards them to phxbinlogsvr |\r\n| phx_percona/plugin/semisync | A semisync compatible with our modified plugin APIs of MySQL |\r\n| third_party/glog | GLOG library\r\n| third_party/leveldb | LevelDB library\r\n| third_party/protobuf | Google Protobuf 3.0+ library\r\n| third_party/phxpaxos| PhxPaxos library\r\n| third_party/colib| Libco library\r\n| third_party/phxrpc | Phxrpc library\r\n\r\n\r\n### Preparation\r\n\r\n##### Installation of third party libs\r\n\r\nPhxSQL needs 6 third party libs(glog, leveldb, protobuf, phxpaxos, colib, phxrpc). Please install them in phxsql/third_party directory or just link to third_party.\r\n\r\n**NOTE: Please make sure -fPIC is added while executing configure in GLOG and Protobuf as well as specifying --prefix=/the/current/absolute/path.**\r\n\r\nFor example: `./configure CXXFLAGS=-fPIC --prefix=/home/root/phxsql/third_party/glog`.\r\n\r\n**Then download**  [percona-server-5.6.31-77.0.tar.gz](https://www.percona.com/downloads/Percona-Server-5.6/Percona-Server-5.6.31-77.0/source/tarball/percona-server-5.6.31-77.0.tar.gz)\r\n\r\nMove `percona-server-5.6\\_5.6.31-77.0` to PhxSQL directory, rename or link as 'percona'\r\n**(NOTE: Only percona-server-5.6\\_5.6.31-77.0 is available)**\r\n\r\n\r\n##### Preparation of installation enviroment\r\n1. Execute `./autoinstall.sh && make && make install`\r\n2. Execute 'make package' to generate a tar.gz package so you can transfer to your target hosts.\r\n\r\n**(NOTE: We put the binaries in install_package/sbin, configuration files in install_package/tools/etc_template, install scripts in install_package/tools. The 'make package' command will pack 'install_package' into 'phxsql-$version.tar.gz'. Please specify -prefix=/the/path/you/want/to/install while executing ./autoinstall.sh)**\r\n\r\n\r\n# Deployment of PhxSQL\r\n\r\n### Host requirements.\r\n\r\n>PhxSQL needs to run on more than 2 hosts. We suggest N >= 3 and N is an odd number, where N means the number of hosts.\r\n\r\n### Initialization of PhxSQL\r\n\r\n1. Transfer phxsql.tar.gz to all of the hosts you want to install. Then do as the following steps:\r\n    1. Execute `tar -xvf phxsq.tar.gz .`\r\n    2. Enter phxsql/tools, Execute `python install.py --help` to get the help of installation.\r\n    \r\n        (For example:`python2.7 install.py -i\"your_inner_ip\" -p 54321 -g 6000 -y 11111 -P 17000 -a 8001 -f/tmp/data/`)\r\n\r\n2.  After executing 'install.py' on all the hosts, Execute './phxbinlogsvr_tools_phxrpc -f InitBinlogSvrMaster -h\"ip1,ip2,ip3\" -p 17000' in any one hosts. 17000 should be replaced with the port on which phxbinlogsvr is listening.\r\n3.  The cluster is active while a message shows master initialization is finished.\r\n4.  You can execute some SQLs to check the status of cluster through `mysql -uroot -h\"your_inner_ip\" -P$phxsqlproxy_port` \r\n\r\n### Simple tests.\r\n\r\n1. Enter phxsql/tools/\r\n2. Execute `test_phxsql.sh phxsqlproxy_port ip1 ip2 ip3`\r\n\r\n### Description of Configuration Files\r\n\r\n> PhxSQL have 3 configuration files in total.\r\n\r\n###### 1. my.cnf： The configuration of MySQL. Please modify it accroding to your own needs.\r\n**NOTE:Modify `tools/etc_temlate/my.cnf` before installation, Modify `etc/my.cnf` after installation**\r\n\r\n###### 2. phxbinlogsvr.conf \r\n\r\n|Section name |Key name |comment|\r\n|------------ | ---------| ------|\r\n|AgentOption | AgentPort | Port for the connection of binlogsvr and MySQL |\r\n| | EventDataDir　|　Directory where to store the binlogsvr data |\r\n| | MaxFileSize　| File size per data of phxbinlogsvr, the unit is B |\r\n| | MasterLease | Lease length of master, the unit is second |\r\n| | CheckPointTime | The data before CheckPointTime will be deleted by phxbinlogsvr, but it will not be deleted if some other PhxSQL nodes have not learned yet, the unit is minute |\r\n| | MaxDeleteCheckPointFileNum　| The maximum number of files deleted each time by phxbinlogsvr |\r\n| | FollowIP | Enabled if it is a follower node and will learn binlog from this `FollowIP`, this node will not vote |\r\n| PaxosOption| PaxosLogPath| Directory where to store paxos data |\r\n| | PaxosPort| Port for paxos to connect each other |\r\n| | PacketMode | The maximum size of paxos log for PhxPaxos,1 means 100M, but the network timeout will be 1 minute, 0 means 50M and network timeout is 2s(changed in dynamic).| \r\n| | UDPMaxSize | Our default network use udp and tcp combination, a message we use udp or tcp to send decide by a threshold. Message size under UDPMaxSize we use udp to send. |\r\n| Server | IP | IP for phxbinlogsvr to listen |\r\n| | Port | Port for phxbinlogsvr to listen |\r\n| |  LogFilePath | Directory to store log |\r\n| | LogLevel | Log level of phxbinlogsvr |\r\n\r\n###### 3. phxsqlproxy.conf \r\n\r\n| Section name | Key name | comment |\r\n| ------| ------| ------|\r\n|Server | IP | IP for phxsqlproxy to listen |\r\n| | Port | Port for phxsqlproxy to listen |\r\n| | LogFilePath  | Directory to store log |\r\n| | LogLevel | Log level of phxbinlogsvr |\r\n| | MasterEnableReadPort | Enable readonly-port in master node. If set to 0, master will forwarding readonly-port requests to one of slaves. |\r\n| | TryBestIfBinlogsvrDead | After the local phxbinlogsvr is dead, phxsqlproxy will try to get master information from phxbinlogsvr on other machine, if this option set to 1. |\r\n\r\n# PhxSQL Usasge\r\n\r\n> phxsqlproxy is the surrogate of PhxSQL, all requests will be sent to phxsqlproxy and then be forwarded to MySQL.\r\n>\r\n### phxsqlproxy provides 2 different types of port for user. \r\n\r\n##### Master Port( also called Read-Write Port )\r\n\r\nIt is the port configured in `phxsqlproxy.conf`.\r\nEvery requests sent to this port will be forwarded to the master node to excute.\r\n\r\n##### Slave Port( also called Read-Only Port )\r\n\r\nIt is (MasterPort + 1). You can also specify it by setting `SlavePort = xxxxx` in `phxsqlproxy.conf`.  \r\nEvery requests will be executed on the local MySQL. A master node will make a redirection to another slave nodes if  `MasterEnableReadPort = 0` (this will save the CPU/IO resource for write requests)\r\n\r\n\r\n### SQL Command Execution\r\n\r\n1. Using `mysql -u$user -h$phxsqlproxyip -P$phxsqlproxyport -p$pwd` to connect to phxsqlproxy\r\n2. Execute SQL command.\r\n\r\n>`$phxsqlproxyip` can be any one IP of hosts in a clusters and `$phxsqlproxyport` can be `MasterPort` or `SlavePort`.\r\n\r\n# PhxSQL Management\r\n\r\nPhxSQL provides a tool `phxbinlogsvr_tools_phxrpc` to help the mangerment of PhxSQL.\r\n\r\nPhxSQL cluster needs 1 MySQL admin accounts and 1 synchronization account. The default admin account is (`root`, `\"\"` ),  the default synchronization account is ( `replica`, `replica123` ), They can be modified( and only be modifyed ) via `phxbinlogsvr_tools_phxrpc`. **DON'T DO THIS MANUALLY.**\r\n\r\n**Following is some commands you may used frequently.**\r\n\r\n### `phxbinlogsvr_tools -f GetMasterInfoFromGlobal -h <host> -p <port>`\r\n\r\n**Function:**Get the current master info from quorum nodes( IP and timeout ).\r\n\r\n**Arguments:**\r\n \r\n  - **Host:** Any one IP of clusters nodes\r\n  - **Port:** Port which phxbinlogsvr is listening. like `17000` \r\n \r\n### `phxbinlogsvr_tools -f SetMySqlAdminInfo -h <host> -p <port> -u <admin username> -d <admin pwd> -U <new admin username> -D <new admin pwd>`\r\n\r\n**Function:** Set the user and password of admin account.\r\n\r\n**Arguments:**\r\n\r\n  - **Host:** Any one IP of clusters nodes\r\n  - **Port:** Port which phxbinlogsvr is listening. like `17000`\r\n  - **Admin username:** Current account user( default is `root` )\r\n  - **Admin pwd:** Current account password( default is `\"\"` )\r\n  - **New admin username:** New user\r\n  - **New admin pwd:** New password\r\n\r\n### `phxbinlogsvr_tools -f SetMySqlReplicaInfo -h <host> -p <port> -u <admin username> -d <admin pwd> -U <new replica username> -D <new replica pwd>`\r\n\r\n**Function:** Set the user and password of synchronization account.\r\n\r\n**Arguments：**\r\n\r\n  - **Host:** Any one IP of clusters nodes\r\n  - **Port:** Port which phxbinlogsvr is listening. like `17000`\r\n  - **Admin username:** Current account user( default is `root` )\r\n  - **Admin pwd:** Current account password( default is `\"\"` )\r\n  - **New replica username:**  New user\r\n  - **New replica pwd:** New password\r\n \r\n### `phxbinlogsvr_tools_phxrpc -f GetMemberList -h <host> -p <port>`\r\n\r\n**Function:** Membership of this cluster, all IPs and Ports included.\r\n\r\n**Arguments:**\r\n \r\n  - **Host:** Any one IP of clusters nodes\r\n  - **Port:** Port which phxbinlogsvr is listening. like `17000`\r\n\r\n# Phxbinlogsvr Membership Managerment\r\n\r\n### Member Deletion\r\nExecute `phxbinlogsvr_tools_phxrpc -f RemoveMember -h<host> -p<port> -m <ip_of_nodeA>` to delete node A.\r\nOnce it is succesfully executed, A will not learn binlog after a small period.\r\n\r\n### Member Involvement\r\n1. Execute `phxbinlogsvr_tools -f AddMember -h<host> -p<port> -m <ip_of_nodeA>` to add node A into the membership.\r\n2. Install PhxSQL on A.\r\n3. A will begin to learn data after installation is finished.\r\n4. Copy a snapshot of MySQL from any other nodes to A.\r\n5. Kill phxbinlogsvr and access MySQL through the local port( or socket ). then execute `set global super_read_only = 0; set global read_only = 0`;\r\n6. Dump the snapshot into MySQL.\r\n7. A will begin to work after a while.\r\n\r\n# Phxbinlogsvr fault Handling.\r\n\r\n###### You can choose to reinstall PhxSQL if PhxSQL meets an unrecovery failure.\r\n\r\n`Phxbinlogsvr` will pull the checkpoint in another node to reboot during reinstallation. It will self-kill after pulling is over(to make sure the consistency). You can reboot `phxbinlogsvr` after a message like `\"All sm load state ok, start to exit\"` appears. \r\n\r\n###### `phxbinlogsvr` will stop working if a data problem arise in MySQL. We suggest you to check the status of MySQL. \r\n###### You can observe logs with red `\"err\"` to check the abnormaly. \r\n\r\n# Performance Testing\r\n\r\n### Hosts Infomation\t\r\nCPU :\tIntel(R) Xeon(R) CPU E5-2420 0 @ 1.90GHz * 24\r\n\r\nMemory : 32G\r\n\r\nDisk : SSD Raid10 \r\n\r\n\r\n### Ping Costs\r\nMaster -> Slave : 3 ~ 4ms\r\n\r\nClient -> Master : 4ms\r\n\r\n\r\n### Tools and Arguments\r\nsysbench  --oltp-tables-count=10 --oltp-table-size=1000000 --num-threads=500 --max-requests=100000 --report-interval=1 --max-time=200\r\n\r\n### Results\r\n\r\n\r\n| Client Threads                                         | Clusters    |                    |             |     Test sets   |           |                 |               |\r\n|------------------------------------------------------|-------------|------------------------|-------------|----------------------|-----------|---------------------|---------------|\r\n|                                                      |             | insert.lua (100% write)     |             | select.lua (0% write)     |           | OLTP.lua (20% write)     |               |\r\n|                                                      |             | QPS                | Response time(MS)        | QPS              | Response time(MS)      | QPS             | Response time(MS)          |\r\n| 200                                                  | PhxSQL      | 5076               | 39.34/56.93 | 46334            | 4.21/5.12 | 25657           | 140.16/186.39 |\r\n| 200                                                  | MySQL semi-sync | 4055               | 49.27/66.64 | 47528            | 4.10/5.00 | 20391           | 176.39/226.76 |\r\n| 500                                                  | PhxSQL      | 8260               | 60.41/83.14 | 105928           | 4.58/5.81 | 46543           | 192.93/242.85 |\r\n| 500                                                  | MySQL semi-sync | 7072               | 70.60/91.72 | 121535           | 4.17/5.08 | 33229           | 270.38/345.84 |\r\n\r\n**NOTE:The 2 Response times means average and 95% percentile**\r\n"
        },
        {
          "name": "README.zh_cn.md",
          "type": "blob",
          "size": 14.90625,
          "content": "<img align=\"right\" src=\"http://mmbiz.qpic.cn/mmbiz/UqFrHRLeCAkOcYOjaX3oxIxWicXVJY0ODsbAyPybxk4DkPAaibgdm7trm1MNiatqJYRpF034J7PlfwCz33mbNUkew/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1\" hspace=\"15\" width=\"200px\" style=\"float: right\">\n\n**PhxSQL是由微信后台团队自主研发的一款数据强一致、服务高可用的分布式数据库服务。PhxSQL提供Zookeeper级别的强一致和高可用，完全兼容MySQL。**\n\n作者：Junchao Chen, Haochuan Cui, Duokai Huang, Ming Chen 和 Sifan Liu \n\n联系我们：phxteam@tencent.com\n\n想了解更多, 以及更详细的编译手册，请进入[中文WIKI](https://github.com/Tencent/phxsql/wiki)，和扫描右侧二维码关注我们的公众号\n\n方案说明：[微信开源PhxSQL：高可用、强一致的MySQL集群](http://mp.weixin.qq.com/s?__biz=MzI4NDMyNTU2Mw==&mid=2247483783&idx=1&sn=a2d6e589f1f591ded7703eb74aefccbe&scene=0#wechat_redirect)\n\nPhxSQL设计和实现哲学：[上篇](https://zhuanlan.zhihu.com/p/22345242)，[下篇](https://zhuanlan.zhihu.com/p/22361242)\n\n# 总览\n  - PhxSQL具有服务高可用、数据强一致、高性能、运维简单、和MySQL完全兼容的特点。\n  - 服务高可用：PhxSQL集群内只要多数派节点存活就能正常提供服务；出于性能的考虑，集群会选举出一个Master节点负责写入操作；当Master失效，会自动重新选举新的Master。\n  - 数据强一致：PhxSQL采用多节点冗余部署，在多个节点之间采用paxos协议同步流水，保证了集群内各节点数据的强一致。\n  - 高性能：PhxSQL比MySQL SemiSync的写性能更好，得益于Paxos协议比SemiSync协议更加高效；\n  - 运维简单：PhxSQL集群内机器出现短时间故障，能自动恢复数据，无需复杂的运维操作；PhxSQL更提供一键更换（新增/删除）集群内的机器，简化运维的工作。\n  - MySQL完全兼容：PhxSQL是基于Percona的研发，完全兼容MySQL的操作命令。 可通过MySQL提供的mysqlclient/perconaserverclient直接操作PhxSQL。\n\n项目中包含PhxSQL源代码，源代码编译时所需要的一些第三方库，及可直接在Linux环境下运行的二进制包。其中代码使用到了微信团队自研的另外三个开源项目（phxpaxos,phxrpc,colib)。若需编译源代码，需额外下载，也可以在clone时通过--recurse-submodule获得代码。\n\n**phxpaxos项目地址：** [http://github.com/Tencent/phxpaxos](http://github.com/Tencent/phxpaxos \"http://github.com/Tencent/phxpaxos\")\n\n**phxrpc项目地址：** [http://github.com/Tencent/phxrpc](http://github.com/Tencent/phxrpc \"http://github.com/Tencent/phxrpc\")\n\n**colib项目地址：** [http://github.com/Tencent/libco](http://github.com/Tencent/libco \"http://github.com/Tencent/libco\")\n\n\n# PhxSQL编译\n\n>如果是直接使用二进制包，请跳过这节。\n\n### PhxSQL主要目录结构\n* PhxSQL\n    * phxsqlproxy\n    * phxbinlogsvr\n    * percona\n    * phx_percona\n        * plugin\n        * phxsync_phxrpc\n        * semisync\n    * third_party\n        * glog\n        * leveldb\n        * protobuf\n        * phxpaxos\n        * colib\n        * phxrpc\n    * tools\n    * phxrpc_package_config\n\n### 主要目录介绍\n\n| 目录名 |  |\n| ------| ------ |\n| phxsqlproxy | phxsqlproxy模块，负责接入请求。 |\n| phxbinlogsvr | 负责MySQL binlog数据同步，master管理等。 |\n| percona | percona5.6.31-77.0的官方源代码 |\n| phx_percona/plugin/phxsync_phxrpc | percona用于跟phxbinlogsvr同步binlog的插件。|\n|phx_percona/plugin/semisync | 因兼容问题，修改了semisync的部分代码，目录内为修改过的文件。\n| third_party/glog | Google Glog 第三方库\n| third_party/leveldb | Google Leveldb 第三方库\n| third_party/protobuf | Google Protobuf 3.0+ 第三方库\n| third_party/phxpaxos| paxos协议库。用于phxbinlogsvr之间同步binlog\n| third_party/colib| 协程基础库。phxsqlproxy使用\n| third_party/phxrpc | rpc框架。phxbinlogsvr使用\n\n\n### 事前准备\n\n##### 安装第三方库\n\nPhxSQL需要用到一些第三方库（glog, leveldb, protobuf, phxpaxos, colib, phxrpc）,下载后安装到PhxSQL的third_party目录下或者把安装目录链接到PhxSQL的third_party目录下。\n\n**需保证第三方库glog, protobuf在configure时带上-fPIC选项(configure CXXFLAGS=-fPIC)，并指定--prefix=当前目录绝对路径**。\n比如`configure CXXFLAGS=-fPIC --prefix=/home/root/phxsql/third_party/glog`.\n\n**下载**  [percona-server-5.6.31-77.0.tar.gz](https://www.percona.com/downloads/Percona-Server-5.6/Percona-Server-5.6.31-77.0/source/tarball/percona-server-5.6.31-77.0.tar.gz)\n\n将`percona-server-5.6\\_5.6.31-77.0`源代码放到PhxSQL目录下，更名或链接为percona**（请注意只能使用percona-server-5.6_5.6.31-77.0版本）**\n\n##### 生成安装环境\n\n1. 在PhxSQL目录下执行`sh autoinstall.sh && make && make install`\n2. 若想打包二进制运行包（集群运行时所需要的所有文件和配置）`make package`\n3. `install`完成后，二进制会生成到`PhxSQL`目录下的`sbin`目录，运行所需要的相关文件和配置会安装到PhxSQL目录下的`install_package`目录。打包二进制运行包会把`install_package`进行tar格式的打包，并生成`phxsql.tar.gz`。若想更改`install`的安装目录，可在`sh autoinstall.sh` 后加入`-prefix=`路径\n\n> 详细的编译步骤请参阅WIKI [中文编译手册](https://github.com/Tencent/phxsql/wiki/%E4%B8%AD%E6%96%87%E8%AF%A6%E7%BB%86%E7%BC%96%E8%AF%91%E6%89%8B%E5%86%8C)\n\n# PhxSQL部署和运行\n\n### 准备机器\n\n>PhxSQL需要在2台或以上的机器集群上运行（建议集群内机器数目n>=3 且 n为奇数）\n\n### 初始化PhxSQL\n\n1.  把`phxsql.tar.gz`传到集群内的所有机器,对集群内每台机器按以下步骤进行安装\n    1.  解压`phxsql.tar.gz`\n    2.  进入`phxsql/tools`, 并使用`python install.py --help`查看安装参数。(例子:`python2.7 install.py -i\"your_inner_ip\" -p 54321 -g 6000 -y 11111 -P 17000 -a 8001 -f/tmp/data/`）\n2.  任意找一台机器，`cd phxsql/sbin`, 执行\n    `./phxbinlogsvr_tools_phxrpc -f InitBinlogSvrMaster -h\"ip1,ip2,ip3\" -p 17000` (17000为phxbinlogsvr监听的端口）\n3.  看到master初始化完成的消息后，集群即可使用。\n4.  可通过`mysql -uroot -h\"your_inner_ip\" -P$phxsqlproxy_port`进入PhxSQL执行读写操作确认PhxSQL已正常运行\n\n### 简单测试\n\n1. 在PhxSQL目录下进入tools目录\n2. 执行`test_phxsql.sh port ip1 ip2 ip3`,  `port`为`phxsqlproxy_port`, `ip`为集群机器`ip`\n\n### 配置文件说明\n\n> PhxSQL一共有3个配置文件 \n\n###### 1. my.cnf： MySQL的配置,请根据你的业务需求进行修改（安装前请修改`tools/etc_template/my.cnf`，安装后请修改`etc/my.cnf`）\n\n###### 2. phxbinlogsvr.conf \n\n|Section name |Key name |comment|\n|------------ | ---------| ------|\n|AgentOption | AgentPort | Phxbinlogsvr监听MySQL访问的端口，用于MySQL和binlogsvr之间的通信|\n| | EventDataDir　|　Phxbinlogsvr数据存放目录|\n| | MaxFileSize　|Phxbinlogsvr每个数据文件的大小，数据文件过大会导致启动过慢，数据文件过小会导致文件数过多，单位为B|\n| | MasterLease | Phxbinlogsv的master租约时间，单位为s |\n| | CheckPointTime | Phxbinlogsvr会删除CheckPointTime时间前的数据，但如果被删数据中存在其他MySQL还没学到的，则不会删除该部分数据，单位为分钟 |\n| | MaxDeleteCheckPointFileNum　| Phxbinlogsvr删数据时，每次删除的最大文件数 |\n| | FollowIP | 机器为folloer机器，只负责拉取FollowIP机器上的数据，不参与集群的投票|\n| PaxosOption| PaxosLogPath| Phxbinlogsvr中paxos库的数据目录|\n| | PaxosPort|Phxbinlogsvr中paxos库的通信端口|\n| | PacketMode | Phxbinlogsvr在paxos协议中是否增大包的大小限制， 1为每个包的大小为100m，但超时限制变为1分钟，0 为每个包的大小为50m，超时限制2s起（动态变化）|\n| | UDPMaxSize | Phxpaxos默认使用udp和tcp混合的通讯方式，根据这个阈值觉得使用udp还是tcp。大小小于UDPMaxSize的消息会使用udp发送。 |\n| Server | IP | Phxbinlogsvr的监听ip |\n| | Port | Phxbinlogsvr的监听端口 |\n| |  LogFilePath | Phxbinlogsvr的日志目录 |\n| | LogLevel | Phxbinlogsvr的日志级别 |\n\n###### 3. phxsqlproxy.conf \n\n| Section name | Key name | comment |\n| ------| ------| ------|\n|Server | IP | phxsqlproxy的监听ip |\n| | Port | phxsqlproxy的监听端口 |\n| | QSLogFilePath  | phxsqlproxy的日志目录 |\n| | QSLogLevel | phxsqlproxy的日志级别 |\n| | MasterEnableReadPort | 是否打开master的只读端口。如果设为0，master会将只读端口的请求转发到一台slave上。 |\n| | TryBestIfBinlogsvrDead | 如果这个选项设为1，在本地phxbinlogsvr挂掉后，phxsqlproxy会重试从别的机器上的phxbinlogsvr获取master信息。 |\n\n# PhxSQL使用\n\n>phxsqlproxy为PhxSQL的接入层，所有的请求均经过phxsqlproxy,再透传给MySQL。\n>\n### phxsqlproxy提供两个端口进行读写 \n\n##### 读写端口\n\n该端口号为phxsqlproxy.conf配置中的端口号, 用户连接上proxyA的此端口，proxyA会自动把请求路由到Master机器，然后再对Master机器上的MySQL进行操作。\n\n##### 只读端口\n\n该端口号为读写端口号+1, 用户连接上此端口时，会对本机的MySQL进行操作(但若本机为master且phxsqlproxy.conf中设置了MasterEnableReadPort=0，则phxsqlproxy会把请求转发到其他phxsqlproxy的只读端口）。\n\n### PhxSQL的使用\n\n1. 通过执行命令`mysql -uroot -h$phxsqlproxyip -P$phxsqlproxyport -ppwd` 连接`phxsqlproxy`，\n2. 进行sql命令操作\n\n>phxsqlproxyip为集群内的任意一台phxsqlproxy的ip\n>\n>phxsqlproxyport为phxsqlproxy端口(读写/只读)\n\n# PhxSQL管理\n\nPhxSQL提供一个工具`phxbinlogsvr_tools_phxrpc`来方便管理者对PhxSQL的运营管理。\n\nPhxSQL集群中对MySQL的管理使用两个账号管理员帐号和数据同步账号。管理员账号默认账号密码为（\"`root`\"，\"\"），数据同步账号默认账号密码为（\"`replica`\",\"`replica123`\"）。账号密码的更改通过工具才执行（工具会直接操作MySQL数据，不需要人工进行MySQL操作）。\n\n### `phxbinlogsvr_tools -f GetMasterInfoFromGlobal -h <host> -p <port>`\n\n**功能：**集群的master机器ip和超时时间\n\n**参数：**\n \n  - **Host:** 集群中的其中一台机器ip\n  - **Port:** phxbinlogsvr的监听port\n \n### `phxbinlogsvr_tools -f SetMySqlAdminInfo -h <host> -p <port> -u <admin username> -d <admin pwd> -U <new admin username> -D <new admin pwd>`\n\n**功能：** 设置 PhxSQL管理员账号密码\n\n**参数：**\n\n  - **Host:** 集群中的其中一台机器ip\n  - **Port:** phxbinlogsvr的监听port\n  - **Admin username:** 当前的管理员账号（默认为root）\n  - **Admin pwd:** 当前的管理员密码（默认为空）\n  - **New admin username:** 新的管理员账号\n  - **New admin pwd:** 新的管理员密码\n\n### `phxbinlogsvr_tools -f SetMySqlReplicaInfo -h <host> -p <port> -u <admin username> -d <admin pwd> -U <new replica username> -D <new replica pwd>`\n\n**功能：** 设置PhxSQL同步数据账号密码\n\n**参数：**\n\n  - **Host:** 集群中的其中一台机器ip\n  - **Port:** phxbinlogsvr的监听port\n  - **Admin username:** 当前的管理员账号（默认为root）\n  - **Admin pwd:** 当前的管理员密码（默认为空）\n  - **New replica username:** 新的同步数据账号\n  - **New replica pwd:** 新的同步数据密码\n \n### `phxbinlogsvr_tools_phxrpc -f GetMemberList -h <host> -p <port>`\n\n**功能：**集群的所有机器信息\n\n**参数：**\n \n  - **Host:** 集群中的其中一台机器ip\n  - **Port:** phxbinlogsvr的监听port\n\n# phxbinlogsvr成员管理\n\n### 移除成员\n执行工具命令将机器A移除集群`phxbinlogsvr_tools_phxrpc -f RemoveMember -h<host> -p<port> -m <机器A的ip>`\n\n执行成功后，机器A将会在一段时间后不在接收数据\n\n### 添加成员\n1. 执行工具将机器A加入到集群`phxbinlogsvr_tools -f AddMember -h<host> -p<port> -m <机器A的ip>`\n2. 在新机器A上安装好PhxSQL\n\n   >根据 \"`初始化PhxSQL`\" 步骤安装PhxSQL\n3. 执行成功后，机器A的phxbinlogsvr将会在一段时间后开始接收数据\n4. 从集群内任意一台机器的percona导出一份镜像数据\n5. kill掉机器A上的phxbinlogsvr, 并通过本地的MySQL端口进入MySQL，执行`set global super_read_only = 0; set global read_only = 0`;\n5. 将镜像数据导入到机器A上的percona，并kill掉机器A上的phxbinlogsvr\n6. 一段时间（~1分钟）后，机器A开始正常工作\n\n# phxbinlogsvr故障处理\n\n###### 当机器出现问题，PhxSQL无法正常启动时，可以选择在该机器上重装PhxSQL，重装过程可参考4.2\n\n在重装过程中，`phxbinlogsvr`可能会拉取集群内其他机器`checkpoint`来启动，待`checkpoint`拉取结束后，`phxbinlogsvr`会自杀（为了确保数据安全），日志中会出现`\"All sm load state ok, start to exit process\"`，此时须重新启动`phxbinlogsvr`，启动后会正常运行。\n\n###### 当MySQL数据出现问题时，phxbinlogsvr会停止工作，此时需要检查MySQL的binlog数据是否正常。\n###### 当出现问题时，可观察日志中带有err标志的红色字体的日志，来确认是否有异常。\n\n# 性能测试\n\n### 机型信息\t\nCPU :\tIntel(R) Xeon(R) CPU E5-2420 0 @ 1.90GHz * 24\n\n内存 : 32G\n\n磁盘 : SSD Raid10 \n\n\n### 网络互Ping耗时\nMaster -> Slave : 3 ~ 4ms\n\nClient -> Master : 4ms\n\n\n### 压测工具和参数\nsysbench  --oltp-tables-count=10 --oltp-table-size=1000000 --num-threads=500 --max-requests=100000 --report-interval=1 --max-time=200\n\n### 压测结果\n\n\n| Client线程数                                         | 测试集群    |                    |             |     测试集合    |           |                 |               |\n|------------------------------------------------------|-------------|------------------------|-------------|----------------------|-----------|---------------------|---------------|\n|                                                      |             | insert.lua (100%写)     |             | select.lua (0%写)     |           | OLTP.lua (20%写)     |               |\n|                                                      |             | QPS                | 耗时        | QPS              | 耗时      | QPS             | 耗时          |\n| 200                                                  | PhxSQL      | 5076               | 39.34/56.93 | 46334            | 4.21/5.12 | 25657           | 140.16/186.39 |\n| 200                                                  | MySQL半同步 | 4055               | 49.27/66.64 | 47528            | 4.10/5.00 | 20391           | 176.39/226.76 |\n| 500                                                  | PhxSQL      | 8260               | 60.41/83.14 | 105928           | 4.58/5.81 | 46543           | 192.93/242.85 |\n| 500                                                  | MySQL半同步 | 7072               | 70.60/91.72 | 121535           | 4.17/5.08 | 33229           | 270.38/345.84 |\n注：耗时分别为测试结果的平均耗时/95%分线耗时，单位ms\n"
        },
        {
          "name": "autoinstall.sh",
          "type": "blob",
          "size": 2.0478515625,
          "content": "#!/bin/bash\n\nbase_dir=`pwd`\nmake_file_tools=$base_dir/tools/create_makefile.py\ncheck_env_tools=$base_dir/tools/check_install.py\nsrc_dir=$base_dir/src_list\n\nfunction check_env(){\n\techo \"[check environment status]...\"\n\tpython $check_env_tools $base_dir\n\tif [ $? -gt 0 ];\n\tthen\n\t\texit 1\n\tfi\n\techo \"[check environment status ok]\"\n}\n\nfunction create_makefile(){\n\tpython $make_file_tools $base_dir $1 \n}\n\nfunction scandir(){\n\tif [ $1 ];then\n\t\techo \"[creating makefile] $1\"\n\t\tcreate_makefile $1\n\t\tfor file in `ls $1`\n\t\tdo\n\t\t\tif ([ -d $1\"/\"$file ] && [ \"$file\" != \"glog\" ])\n\t\t\t\tthen\n\t\t\t\t\tscandir $1\"/\"$file\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\nfunction install_mysql(){\n\tcd percona\n\trm plugin/phxsync_phxrpc -rf\n\tcmake . -DCMAKE_INSTALL_PREFIX=$base_dir/percona -DCMAKE_BUILD_TYPE=Release -DWITH_EMBEDDED_SERVER=OFF\n\tmake perconaserverclient\n\tcd -\n\tcp phx_percona/percona/plugin/phxsync_phxrpc percona/plugin -r\n\tcp phx_percona/percona/sql/* percona/sql/ -r\n\tcp phx_percona/percona/plugin/semisync/semisync_master_plugin.cc  percona/plugin/semisync/semisync_master_plugin.cc\n\tcd percona\n\tcmake . -DCMAKE_INSTALL_PREFIX=$base_dir/percona -DCMAKE_BUILD_TYPE=Release -DWITH_EMBEDDED_SERVER=OFF -DWITH_PHXSYNC_MASTER_PHXRPC=1\n\tcd -\n\techo \"[install mysql] done\"\n}\n\nfunction process(){\n\tcreate_makefile $base_dir\n\tres=`cat $src_dir`\n\techo $res\n\tfor file in $res\n\tdo\n\t\tif ([ -d $base_dir\"/\"$file ] && [ \"$file\" != \"glog\" ])\n\t\t\tthen\n\t\t\t\tscandir $base_dir\"/\"$file\n\t\tfi\n\tdone\n\n\tinstall_mysql\n}\n\nfunction showusage(){\n\techo \"Configuration:\"\n\techo \"  -h, --help              display this help and exit\"\n\techo \"Installation directories:\"\n\techo \"  --prefix=PREFIX         install architecture-independent files in PREFIX\"\n\techo \"                          [.]\"\n\texit\n}\n\nprefix=\n\nARGS=`getopt -o h -l prefix:,help -- \"$@\"`  \neval set -- \"${ARGS}\" \n\nwhile true  \ndo  \n\tcase \"$1\" in \n\t\t--prefix)  \n\t\t\tif [ $2 ]; then\n\t\t\t\tsed -i -r \"s#PREFIX=.*#PREFIX=$2#\" makefile.mk\n\t\t\tfi\n\t\t\tshift  \n\t\t\t;;  \n\t\t-h|--help)\n\t\t\tshowusage\n\t\t\tbreak\n\t\t\t;;\n\t\t--)  \n\t\t\tshift  \n\t\t\tbreak \n\t\t\t;;  \n\tesac  \nshift  \ndone \n\ncheck_env\n\nif [ $? -eq 0 ]; then \nprocess \nfi\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.4775390625,
          "content": "#!/bin/bash\n\nset -e  # exit immediately on error\nset -x  # display all commands\n\ngit submodule update --init --recursive\n\n(cd third_party && ./autoinstall.sh)\n\nif [ ! -f percona/sql/binlog.cc ]; then\n    wget https://www.percona.com/downloads/Percona-Server-5.6/Percona-Server-5.6.31-77.0/source/tarball/percona-server-5.6.31-77.0.tar.gz\n\n    rm percona -rf\n\n    tar -xvf percona-server-5.6.31-77.0.tar.gz\n    mv percona-server-5.6.31-77.0 percona\nfi\n\n./autoinstall.sh\n\nmake\n\nmake install\n"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 0.154296875,
          "content": "#!/bin/bash\n\nset -x\ncd /phxsql/tools\npython2.7 install.py -i \"$(hostname -I)\" -p 54321 -g 6000 -y 11111 -P 17000 -a 8001 -f /data \"$@\"\nexec tail -f /dev/null\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile.mk",
          "type": "blob",
          "size": 3.6982421875,
          "content": "\nversion = 0.8.5\n\nSRC_BASE_PATH ?= .\nPREFIX?=$(SRC_BASE_PATH)\nPHXSQL_LIB_PATH = $(SRC_BASE_PATH)/.lib\nPHXSQL_SBIN_PATH = $(SRC_BASE_PATH)/.sbin\nPHXSQL_EXTLIB_PATH = $(PHXSQL_LIB_PATH)/extlib\n\nNANOPBPATH=$(SRC_BASE_PATH)/third_party/nanopb/\n\nPROTOBUF_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/protobuf/include\nLEVELDB_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/leveldb/include\nGFLAGS_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/gflags/include\nGLOG_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/glog/include\nPHXPAXOS_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/phxpaxos/include\nPHXPAXOS_PLUGIN_PATH=$(SRC_BASE_PATH)/third_party/phxpaxos/plugin/include\nMYSQL_INCLUDE_PATH=$(SRC_BASE_PATH)/percona/include\nCOLIB_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/colib\nPHXRPC_INCLUDE_PATH=$(SRC_BASE_PATH)/third_party/phxrpc\n\nPROTOBUF_LIB_PATH=$(SRC_BASE_PATH)/third_party/protobuf/lib\nLEVELDB_LIB_PATH=$(SRC_BASE_PATH)/third_party/leveldb/lib/\nGFLAGS_LIB_PATH=$(SRC_BASE_PATH)/third_party/gflags/lib\nGLOG_LIB_PATH=$(SRC_BASE_PATH)/third_party/glog/lib\nMYSQL_LIB_PATH=$(SRC_BASE_PATH)/percona/libmysql\nPHXPAXOS_LIB_PATH=$(SRC_BASE_PATH)/third_party/phxpaxos/lib\nCOLIB_LIB_PATH=$(SRC_BASE_PATH)/third_party/colib/lib\nPHXRPC_LIB_PATH=$(SRC_BASE_PATH)/third_party/phxrpc/lib\n\n\nCXX=g++\nCXXFLAGS+=-std=c++11\nCPPFLAGS+=-I$(SRC_BASE_PATH) -I$(PROTOBUF_INCLUDE_PATH)  -I$(LEVELDB_INCLUDE_PATH)\nCPPFLAGS+=-I$(GFLAGS_INCLUDE_PATH) -I$(GLOG_INCLUDE_PATH)\nCPPFLAGS+=-Wall -g -fPIC -m64\n\nLDFLAGS += -L$(PHXPAXOS_LIB_PATH) -L$(PHXSQL_LIB_PATH) -L$(PROTOBUF_LIB_PATH) -L$(LEVELDB_LIB_PATH)\nLDFLAGS += -L$(GFLAGS_LIB_PATH) -L$(GLOG_LIB_PATH) -L$(GRPC_LIBE_PATH) -L$(OPEN_SSL_LIB_PATH) -L$(MYSQL_LIB_PATH)\nLDFLAGS += -L$(COLIB_LIB_PATH)\nLDFLAGS += -static-libgcc -static-libstdc++\nLDFLAGS += -Wl,--no-as-needed\n\n\n#=====================================================================================================\n\nPROTOC = $(SRC_BASE_PATH)/third_party/protobuf/bin/protoc\nPROTOS_PATH = .\nGRPC_CPP_PLUGIN = grpc_cpp_plugin\nGRPC_CPP_PLUGIN_PATH ?= `which $(GRPC_CPP_PLUGIN)`\nNANOPB_PLUGIN_PATH=$(NANOPBPATH)/generator/protoc-gen-nanopb\n\nvpath %.proto $(PROTOS_PATH)\n\n.PRECIOUS: %.nano.pb.cc\n%.nano.pb.cc: %.proto\n\t$(PROTOC) --plugin=protoc-gen-nanopb=$(NANOPB_PLUGIN_PATH) --nanopb_out=nanoproto/ $<\n\n.PRECIOUS: %.pb.cc\n%.pb.cc: %.proto\n\t$(PROTOC) -I$(PROTOBUF_INCLUDE_PATH) -I $(PROTOS_PATH) --cpp_out=. $<\n\n.PHONY: install\ninstall:\n\tmake install -C percona\n\t@mkdir $(PREFIX)/lib -p;\\\n\trm $(PREFIX)/install_package -rf; \\\n\tmkdir $(PREFIX)/install_package -p;\\\n\tmkdir $(PREFIX)/install_package/lib -p;\\\n\tmkdir $(PREFIX)/install_package/sbin -p; \\\n\tmkdir $(PREFIX)/install_package/percona.src -p;\n\t@echo create install_package directory to $(PREFIX)/install_package;\n\t@echo install install_package in $(PREFIX)/install_package;\n\t@echo install mysql in $(PREFIX)/install_package/sbin;\n\t@echo install mysql plugin in $(PREFIX)/install_package/lib;\n\t@cp $(SRC_BASE_PATH)/LICENSE $(PREFIX)/install_package/;\n\t@cp $(SRC_BASE_PATH)/README.md $(PREFIX)/install_package/;\n\t@cp $(SRC_BASE_PATH)/phxrpc_package_config/* $(PREFIX)/install_package/ -rf;\n\t@cp $(SRC_BASE_PATH)/.sbin/* $(PREFIX)/install_package/sbin/ -rf;\n\t@cp $(SRC_BASE_PATH)/percona/bin/mysqld $(PREFIX)/install_package/sbin/ -rf;\n\t@cp $(SRC_BASE_PATH)/percona/bin $(PREFIX)/install_package/percona.src/ -r;\n\t@cp $(SRC_BASE_PATH)/percona/lib $(PREFIX)/install_package/percona.src/ -r;\n\t@cp $(SRC_BASE_PATH)/percona/share $(PREFIX)/install_package/percona.src/ -r;\n\t@cp $(SRC_BASE_PATH)/percona/scripts $(PREFIX)/install_package/percona.src/ -r;\n\n\n.PHONY:package\npackage:\n\t@echo creating package phxsql-$(version).tar.gz...\n\t@rm phxsql phxsql-$(version).tar.gz -rf;\\\n\tcp $(PREFIX)/install_package phxsql -r;\\\n\ttar -zcf phxsql-$(version).tar.gz phxsql;\\\n\trm  phxsql -rf;\\\n"
        },
        {
          "name": "phx_percona",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxbinlogsvr",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxcomm",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxrpc_package_config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxsqlclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxsqlproxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_list",
          "type": "blob",
          "size": 0.0537109375,
          "content": "phxbinlogsvr phxcomm phxsqlproxy include phxsqlclient \n"
        },
        {
          "name": "test-with-docker.sh",
          "type": "blob",
          "size": 1.662109375,
          "content": "#!/bin/bash\n\nset -e\n\ncreate_containers() {\n    cid=$(docker run -d phxsql/phxsql:latest)\n    ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $cid)\n    echo \"created container $cid $ip\"\n    read $1 $2 <<< \"$cid $ip\"\n}\n\ncheck_processes() {\n    cid=$1\n    proc=$(docker top $cid)\n    for binary in phxbinlogsvr phxsqlproxy mysqld_safe; do\n        if [[ ! $proc =~ $binary ]]; then\n            echo \"$binary in $cid hasn't started\"\n            return 1\n        fi\n    done\n    return 0\n}\n\necho \"creating containers...\"\n\ncreate_containers cid1 ip1\ncreate_containers cid2 ip2\ncreate_containers cid3 ip3\n\necho \"waiting processes start...\"\n\nwhile true; do\n    sleep 10\n    if check_processes $cid1 && \\\n       check_processes $cid2 && \\\n       check_processes $cid3; then\n        break\n    fi\ndone\n\ndocker exec -it $cid1 phxbinlogsvr_tools_phxrpc -f InitBinlogSvrMaster -h \"$ip1,$ip2,$ip3\" -p 17000\n\nsleep 10\n\ntime=$(date +%Y%m%d%H%M%S)\n\necho \"create database and insert $time...\"\n\ndocker exec $cid1 mysql -u root -h $ip1 -P 54321 -e \"create database if not exists test_phxsql\"\ndocker exec $cid1 mysql -u root -h $ip1 -P 54321 test_phxsql -e \"create table if not exists test_phxsql(name varchar(80))\"\ndocker exec $cid1 mysql -u root -h $ip1 -P 54321 test_phxsql -e \"insert into test_phxsql values($time)\"\n\nfor port in 54321 54322; do\n    for ip in $ip1 $ip2 $ip3; do\n        result=$(docker exec $cid1 mysql -N -u root -h $ip -P $port test_phxsql -e \"select name from test_phxsql\")\n        echo \"select from $ip $port : $result\"\n        test \"$result\" = \"$time\"\n    done\n    sleep 3\ndone\n\necho \"clean up...\"\n\ndocker stop $cid1 $cid2 $cid3\ndocker rm -v $cid1 $cid2 $cid3\n"
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}