{
  "metadata": {
    "timestamp": 1736565788636,
    "page": 723,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eProsima/Fast-DDS",
      "stars": 2269,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.671875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.c text\n*.cpp text\n*.cxx text\n*.h text\n*.java text\n*.stg text eol=lf\n*.idl text\n\n# Declare files that will always have CRLF line endings on checkout.\n*.sln text eol=crlf\n*.vcxproj text eol=crlf\n*.vcxproj.filters text eol=crlf\n*.bat text eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n\n# To diff LibreOffice documents.\n# It is needed next configuration value: diff.odf.textconv=odt2txt\n*.ods diff=odf\n*.odt diff=odf\n*.odp diff=odf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.08203125,
          "content": "\n# Created by https://www.gitignore.io/api/c++,java,gradle,vim,visualstudio,windows,linux,cmake,tags,python\n\n### C++ ###\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n\n### Java ###\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n\n### Gradle ###\n.gradle\nbuild/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n# Cache of project\n.gradletasknamecache\n\n\n### Vim ###\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n### VisualStudio Code ###\n*.vscode\n\n### VisualStudio ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbuild64/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n\n\n### Windows ###\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n\n### CMake ###\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\ncmake_install.cmake\ninstall_manifest.txt\n\n\n### Tags ###\n# Ignore tags created by etags, ctags, gtags (GNU global) and cscope\nTAGS\n.TAGS\n!TAGS/\ntags\n.tags\n!tags/\ngtags.files\nGTAGS\nGRTAGS\nGPATH\ncscope.files\ncscope.out\ncscope.in.out\ncscope.po.out\n\n\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Eclipse\n.cproject\n.project\n.settings\n\n.pydevproject\n\ncompile_commands.json\n\n# Visual Studio Code\n.vscode\n\n# Uncrustify\nuncrustify.cfg"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.56640625,
          "content": "[submodule \"thirdparty/android-ifaddrs\"]\n\tpath = thirdparty/android-ifaddrs\n\turl = https://github.com/michalsrb/android-ifaddrs.git\n[submodule \"thirdparty/asio\"]\n\tpath = thirdparty/asio\n\turl = https://github.com/chriskohlhoff/asio.git\n[submodule \"thirdparty/fastcdr\"]\n\tpath = thirdparty/fastcdr\n\turl = https://github.com/eProsima/Fast-CDR.git\n[submodule \"thirdparty/tinyxml2\"]\n\tpath = thirdparty/tinyxml2\n\turl = https://github.com/leethomason/tinyxml2.git\n[submodule \"thirdparty/dds-types-test\"]\n\tpath = thirdparty/dds-types-test\n\turl = https://github.com/eProsima/dds-types-test\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 23.17578125,
          "content": "# Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n###############################################################################\n# CMake build rules for Fast DDS\n###############################################################################\ncmake_minimum_required(VERSION 3.20)\n\n# Set CMAKE_BUILD_TYPE to Release by default.\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    message(STATUS \"Setting build type to 'Release' as none was specified.\")\n    set(CMAKE_BUILD_TYPE Release CACHE STRING\n        \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.\"\n        FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n\n###############################################################################\n# Project                                                                     #\n###############################################################################\nproject(fastdds VERSION \"3.1.0\" LANGUAGES C CXX)\n\nset(PROJECT_NAME_LARGE \"Fast DDS\")\nstring(TOUPPER \"${PROJECT_NAME}\" PROJECT_NAME_UPPER)\n\nmessage(STATUS \"Version: ${PROJECT_VERSION}\")\n\n###############################################################################\n# eProsima build options\n###############################################################################\noption(EPROSIMA_BUILD \"Activate internal building\" OFF)\n\n###############################################################################\n# Warning level\n###############################################################################\nif(MSVC OR MSVC_IDE)\n    if(CMAKE_CXX_FLAGS MATCHES \"/W[0-4]\")\n        string(REGEX REPLACE \"/W[0-4]\" \"/W4\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n    else()\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n    endif()\n\n    if(EPROSIMA_EXTRA_CMAKE_CXX_FLAGS)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${EPROSIMA_EXTRA_CMAKE_CXX_FLAGS}\")\n    endif()\n\n    # make visual studio more gcc and clang like.\n    # C4101 'identifier' : unreferenced local variable\n    # C4189 'identifier' : local variable is initialized but not referenced\n    # C4555  expression has no effect; expected expression with side-effect\n    # C4715: 'Test': not all control paths return a value\n    # C5038 data member 'member1' will be initialized after data member 'member2'\n    # C4100 'identifier' : unreferenced formal parameter (matches clang -Wunused-lambda-capture)\n    add_compile_options(/w34101 /w34189 /w34555 /w34715 /w35038 /w44100 /bigobj)\n\n    if(EPROSIMA_BUILD)\n        string(REPLACE \"/DNDEBUG\" \"\" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n    endif()\nelse()\n    # Add some generic warnings common to all compilers\n    set(CMAKE_CXX_FLAGS\n        \"${CMAKE_CXX_FLAGS} -Wall -Wpedantic -Wextra -Wno-unknown-pragmas -Wno-error=deprecated-declarations -Wno-switch-bool\")\n    # Add compiler specific options\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-psabi\")\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-undefined\")\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n        if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 15,0)\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-deprecated-builtins\")\n        endif()\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl\")\n    endif()\n\n    if(EPROSIMA_EXTRA_CMAKE_CXX_FLAGS)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${EPROSIMA_EXTRA_CMAKE_CXX_FLAGS}\")\n    endif()\n\n    if(EPROSIMA_BUILD)\n        string(REPLACE \"-DNDEBUG\" \"\" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n    endif()\nendif()\n\n###############################################################################\n# CCache on Windows on CI\n###############################################################################\nif (MSVC AND CMAKE_CXX_COMPILER_LAUNCHER STREQUAL \"ccache\")\n    foreach(config DEBUG RELWITHDEBINFO)\n        foreach(lang C CXX)\n            set(flags_var \"CMAKE_${lang}_FLAGS_${config}\")\n            string(REPLACE \"/Zi\" \"/Z7\" ${flags_var} \"${${flags_var}}\")\n            set(${flags_var} \"${${flags_var}}\")\n        endforeach()\n    endforeach()\nendif()\n\n###############################################################################\n# GCC colors if using CCache\n###############################################################################\nif(\"${CMAKE_CXX_COMPILER_LAUNCHER}\" STREQUAL \"ccache\" AND\n        CMAKE_COMPILER_IS_GNUCXX AND\n        CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 4,8)\n    add_compile_options(-fdiagnostics-color=always)\nendif()\n\n###############################################################################\n# Test system configuration\n###############################################################################\n\ninclude(${PROJECT_SOURCE_DIR}/cmake/common/check_configuration.cmake)\n\nset(FORCE_CXX \"11\" CACHE STRING \"C++ standard fulfillment selection\")\ncheck_stdcxx(${FORCE_CXX})\n\ncheck_endianness()\n\n###############################################################################\n# Activate Sanitizers\n###############################################################################\noption(SANITIZER \"Enable Thread or Address sanitizers\" OFF)\nstring(TOUPPER ${SANITIZER} SANITIZER)\n\nif (SANITIZER)\n    if(${SANITIZER} STREQUAL \"ADDRESS\")\n        message(STATUS \"Enabling address sanitizer...\")\n        # Warning/Error messages\n        if(NOT (CMAKE_BUILD_TYPE STREQUAL \"Debug\"))\n            message(WARNING \"Address sanitizer results with an optimized (non-Debug) build may be misleading\")\n        endif()\n\n        if(\"${CMAKE_C_COMPILER_ID}\" MATCHES \"(Apple)?[Cc]lang\" OR \"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"(Apple)?[Cc]lang\")\n            message(STATUS \"Building with llvm Address sanitizer Tools\")\n\n            set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address\")\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\n\n        elseif(CMAKE_COMPILER_IS_GNUCXX)\n            message(STATUS \"Building with Address sanitizer Tools\")\n\n            set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\n\n        else()\n            message(FATAL_ERROR \"Address sanitizer requires Clang or GCC. Aborting.\")\n        endif()\n\n    elseif(${SANITIZER} STREQUAL \"THREAD\")\n        message(STATUS \"Enabling thread sanitizer...\")\n        # Warning/Error messages\n        if(NOT (CMAKE_BUILD_TYPE STREQUAL \"Debug\"))\n            message(WARNING \"Thread sanitizer results with an optimized (non-Debug) build may be misleading\")\n        endif()\n\n        if(\"${CMAKE_C_COMPILER_ID}\" MATCHES \"(Apple)?[Cc]lang\" OR \"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"(Apple)?[Cc]lang\")\n            message(STATUS \"Building with llvm Thread sanitizer Tools\")\n\n            set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread\")\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread\")\n\n        elseif(CMAKE_COMPILER_IS_GNUCXX)\n            message(STATUS \"Building with Thread sanitizer Tools\")\n\n            set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread -fno-omit-frame-pointer\")\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread -fno-omit-frame-pointer\")\n\n        else()\n            message(FATAL_ERROR \"Thread sanitizer requires Clang or GCC. Aborting.\")\n        endif()\n\n    else()\n        message(WARNING \"Sanitizer option not supported. Continuing without any code instrumentation... \")\n\n    endif()\nendif()\n\n###############################################################################\n# Set warnings as errors if the thread sanitizer is not being used\n###############################################################################\nstring(FIND ${CMAKE_CXX_FLAGS} \"-fsanitize=thread\" SANITIZER_THREAD)\nif (${SANITIZER_THREAD} EQUAL -1)\n    message(STATUS \"Setting warnings as errors...\")\n    if(MSVC OR MSVC_IDE)\n        add_compile_options(/WX)\n    else()\n        set(CMAKE_CXX_FLAGS\n            \"${CMAKE_CXX_FLAGS} -Werror\")\n    endif()\nendif()\n\n###############################################################################\n# Installation paths\n###############################################################################\noption(APPEND_PROJECT_NAME_TO_INCLUDEDIR\n  \"When ON headers are installed to a path ending with a folder called \\\n  ${PROJECT_NAME}. This avoids include directory search order issues when \\\n  overriding this package from a merged catkin, ament, or colcon workspace.\"\n  OFF)\n\nset(BIN_INSTALL_DIR bin/ CACHE PATH \"Installation directory for binaries\")\nset(_include_dir \"include/\")\nif(APPEND_PROJECT_NAME_TO_INCLUDEDIR)\n  string(APPEND _include_dir \"${PROJECT_NAME}/\")\nendif()\nset(INCLUDE_INSTALL_DIR \"${_include_dir}\" CACHE PATH \"Installation directory for C++ headers\")\nunset(_include_dir)\nset(LIB_INSTALL_DIR lib${LIB_SUFFIX}/ CACHE PATH \"Installation directory for libraries\")\nset(DATA_INSTALL_DIR share/ CACHE PATH \"Installation directory for data\")\nif(WIN32)\n    set(DOC_DIR \"doc\")\nelse()\n    set(DOC_DIR \"${DATA_INSTALL_DIR}/doc\")\nendif()\nset(DOC_INSTALL_DIR ${DOC_DIR} CACHE PATH \"Installation directory for documentation\")\nset(LICENSE_INSTALL_DIR ${DATA_INSTALL_DIR}/${PROJECT_NAME} CACHE PATH \"Installation directory for licenses\")\n\n###############################################################################\n# Internal debug messages\n###############################################################################\n\nif(EPROSIMA_BUILD)\n    set(INTERNAL_DEBUG ON)\nendif()\n\n###############################################################################\n# Load CMake modules\n###############################################################################\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake/modules)\n\n###############################################################################\n# Default shared libraries\n###############################################################################\n# Global flag to cause add_library() to create shared libraries if on.\n# If set to true, this will cause all libraries to be built shared\n# unless the library was explicitly added as a static library.\noption(BUILD_SHARED_LIBS \"Create shared libraries by default\" ON)\n\n###############################################################################\n# Load external projects.\n###############################################################################\ninclude(${PROJECT_SOURCE_DIR}/cmake/common/eprosima_libraries.cmake)\n\n# if we are building Fast DDS as a static library we must load Fast-CDR as one\nif(NOT BUILD_SHARED_LIBS)\n    set(FASTDDS_STATIC ON)\nendif()\n\neprosima_find_package(fastcdr 2 REQUIRED)\neprosima_find_thirdparty(Asio asio VERSION 1.10.8)\neprosima_find_thirdparty(TinyXML2 tinyxml2)\n\nfind_package(foonathan_memory REQUIRED)\nmessage(STATUS \"Found foonathan_memory: ${foonathan_memory_DIR}\")\nfind_package(ThirdpartyBoost REQUIRED)\n\nif(ANDROID)\n    if((ANDROID_PLATFORM LESS_EQUAL 23) OR (ANDROID_NATIVE_API_LEVEL LESS_EQUAL 23))\n        eprosima_find_thirdparty(android-ifaddrs android-ifaddrs)\n    endif()\nendif()\n\ninclude_directories(thirdparty/nlohmann-json)\ninclude_directories(thirdparty/filewatch)\n\n###############################################################################\n# Options\n###############################################################################\noption(SECURITY \"Activate security\" OFF)\n\nif(QNX)\n    set(OPENSSL_FOUND 1)\nelse()\n    if(SECURITY)\n        find_package(OpenSSL REQUIRED)\n    else()\n        find_package(OpenSSL)\n    endif()\nendif()\n\nif(OPENSSL_FOUND)\n    message(STATUS \"OpenSSL library ${OPENSSL_VERSION} found...\")\nendif()\n\noption(NO_TLS \"Disables TLS Support\" OFF)\nif(OPENSSL_FOUND AND NOT NO_TLS)\n    set(TLS_FOUND 1)\nelse()\n    set(TLS_FOUND 0)\nendif()\n\nif(SECURITY OR TLS_FOUND)\n    set(LINK_SSL 1)\nelse()\n    set(LINK_SSL 0)\nendif()\n\nif(SECURITY AND QNX)\n    add_library(OpenSSL::SSL INTERFACE IMPORTED)\n    add_library(OpenSSL::Crypto INTERFACE IMPORTED)\n\n    set_target_properties(OpenSSL::SSL PROPERTIES\n        INTERFACE_LINK_LIBRARIES ssl\n    )\n    set_target_properties(OpenSSL::Crypto PROPERTIES\n        INTERFACE_LINK_LIBRARIES crypto\n    )\n\n    set(OPENSSL_LIBRARIES ssl crypto)\nendif()\n\noption(SQLITE3_SUPPORT \"Activate SQLITE3 support\" ON)\n\n###############################################################################\n# SHM as Default transport\n###############################################################################\noption(SHM_TRANSPORT_DEFAULT \"Add SHM transport to the default transports\" ON)\n\n###############################################################################\n# LogConsumer default setup\n###############################################################################\nset(LOG_CONSUMER_DEFAULT AUTO CACHE STRING \"Selects default LogConsumer\")\nset_property(CACHE LOG_CONSUMER_DEFAULT PROPERTY STRINGS AUTO STDOUT STDOUTERR)\n\nif(LOG_CONSUMER_DEFAULT STREQUAL \"STDOUT\")\n    set(STDOUTERR_LOG_CONSUMER OFF)\nelse()\n    set(STDOUTERR_LOG_CONSUMER ON)\nendif()\n\n###############################################################################\n# Log Info default setup\n###############################################################################\n\ninclude(CMakeDependentOption)\n\nset(LOG_NO_INFO_HELP \"\\\nDo not compile Info Log level. For the sake of efficiency non-debug \\\nconfigs do not log info messages unless the option FASTDDS_ENFORCE_LOG_INFO \\\nis set to on.\")\nif(CMAKE_BUILD_TYPE MATCHES \"^([Dd][Ee][Bb][Uu][Gg])$\"  # single config generator\n   OR (\"Debug\" IN_LIST CMAKE_CONFIGURATION_TYPES))      # multi config generator\n    option(LOG_NO_INFO ${LOG_NO_INFO_HELP} OFF)\nelse()\n    option(LOG_NO_INFO ${LOG_NO_INFO_HELP} ON)\nendif()\nunset(LOG_NO_INFO_HELP)\n\noption(LOG_NO_WARNING \"Do not compile Warning Log level\" OFF)\n\noption(LOG_NO_ERROR \"Do not compile Error Log level\" OFF)\n\noption(ENABLE_OLD_LOG_MACROS \"Compile logInfo, logWarning and logError macros\" ON)\n\ncmake_dependent_option(\n    FASTDDS_ENFORCE_LOG_INFO\n    \"The LOG_NO_INFO option must be enforced regardless of selected configuration\"\n    OFF\n    \"NOT LOG_NO_INFO\"\n    OFF)\n\n# This name changes are required because ON is not considered as a C++ option, instead 1 is required\nif(ENABLE_OLD_LOG_MACROS)\n    set(ENABLE_OLD_LOG_MACROS_ 1)\nelse()\n    set(ENABLE_OLD_LOG_MACROS_ 0)\nendif()\n\nif(LOG_NO_INFO)\n    set(HAVE_LOG_NO_INFO 1)\nelse()\n    set(HAVE_LOG_NO_INFO 0)\nendif()\n\nif(LOG_NO_WARNING)\n    set(HAVE_LOG_NO_WARNING 1)\nelse()\n    set(HAVE_LOG_NO_WARNING 0)\nendif()\n\nif(LOG_NO_ERROR)\n    set(HAVE_LOG_NO_ERROR 1)\nelse()\n    set(HAVE_LOG_NO_ERROR 0)\nendif()\n\n###############################################################################\n# Tools default setup\n###############################################################################\noption(COMPILE_TOOLS \"Build tools\" ON)\n\nif(EPROSIMA_BUILD)\n    set(COMPILE_TOOLS ON)\nendif()\n\n###############################################################################\n# Fast DDS statistics tool default setup\n###############################################################################\noption(FASTDDS_STATISTICS \"Enable Fast DDS Statistics Module\" ON)\n\n###############################################################################\n# Compile library.\n###############################################################################\nadd_subdirectory(src/cpp)\n\n###############################################################################\n# Add http://optionparser.sourceforge.net/ as unified cli parser\n###############################################################################\nadd_subdirectory(thirdparty/optionparser)\n\n###############################################################################\n# Testing options\n###############################################################################\nenable_testing()\ninclude(CTest)\nadd_subdirectory(test)\n\n###############################################################################\n# Examples\n###############################################################################\noption(COMPILE_EXAMPLES \"Build example\" OFF)\n\nif(EPROSIMA_BUILD)\n    set(COMPILE_EXAMPLES ON)\nendif()\n\nif(COMPILE_EXAMPLES)\n    add_subdirectory(examples)\nendif()\n\n###############################################################################\n# Fuzzers\n###############################################################################\nif(DEFINED ENV{LIB_FUZZING_ENGINE})\n    add_subdirectory(fuzz)\nendif()\n\n###############################################################################\n# Tools\n###############################################################################\n\nif(COMPILE_TOOLS)\n    add_subdirectory(tools)\nendif()\n\n###############################################################################\n# Documentation\n###############################################################################\n# Add an option to toggle the generation of the API documentation.\noption(BUILD_DOCUMENTATION \"Use doxygen to create product documentation\" OFF)\noption(CHECK_DOCUMENTATION \"Use doxygen to check code documentation\" OFF)\n\nif(CHECK_DOCUMENTATION)\n    set(BUILD_DOCUMENTATION ON)\nendif()\n\nif(BUILD_DOCUMENTATION)\n    find_package(Doxygen)\n    if(NOT DOXYGEN_FOUND)\n        message(FATAL_ERROR \"doxygen is needed to build the documentation. Please install it correctly\")\n    endif()\n    if(UNIX)\n        find_program(DOXYFILE_MAKE make)\n        if(DOXYFILE_MAKE)\n            message(STATUS \"Found Make: ${DOXYFILE_MAKE}\")\n        else()\n            message(FATAL_ERROR \"make is needed to build the documentation. Please install it correctly\")\n        endif()\n    elseif(WIN32)\n        set(DOXYFILE_MAKE make.bat)\n    endif()\n\n    if(NOT CHECK_DOCUMENTATION)\n        find_program(UNZIP_EXE unzip)\n        if(UNZIP_EXE)\n            message(STATUS \"Found Unzip: ${UNZIP_EXE}\")\n        else()\n            message(FATAL_ERROR \"unzip is needed to build the documentation. Please install it correctly\")\n        endif()\n    endif()\n\n    # Target to create documentation directories\n    add_custom_target(fastdds_docdirs\n        COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/doc\n        COMMENT \"Creating documentation directory\" VERBATIM)\n\n    ### Doxygen ########################3\n    if(CHECK_DOCUMENTATION)\n        set(USE_DOT NO)\n    else()\n        set(USE_DOT YES)\n    endif()\n    # Configure the template doxyfile for or specific project\n    configure_file(utils/doxygen/doxyfile.in ${PROJECT_BINARY_DIR}/doxyfile @ONLY IMMEDIATE)\n    # Add custom target to run doxygen when ever the project is build\n    add_custom_target(fastdds_doxygen\n        COMMAND \"${DOXYGEN_EXECUTABLE}\" \"${PROJECT_BINARY_DIR}/doxyfile\"\n        SOURCES \"${PROJECT_BINARY_DIR}/doxyfile\"\n        COMMENT \"Generating API documentation with doxygen\" VERBATIM)\n\n    add_dependencies(fastdds_doxygen fastdds_docdirs)\n\n    ### README html ########################\n\n    if(WIN32)\n        set(README_LOCATION \"${PROJECT_BINARY_DIR}/\")\n        set(README_LOCATION_PREFFIX \"doc/\")\n        set(README_INSTALL_LOCATION \".\")\n    else()\n        set(README_LOCATION \"${PROJECT_BINARY_DIR}/doc/\")\n        set(README_INSTALL_LOCATION \"${DOC_INSTALL_DIR}\")\n    endif()\n\n\n    ### ReadTheDocs ########################\n    if(NOT CHECK_DOCUMENTATION)\n\n        file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/readthedocs_custom_template.cmake [=[\n\n            file(DOWNLOAD \"https://fast-dds.docs.eprosima.com/_/downloads/en/v${PROJECT_VERSION}/htmlzip/\" \"./eprosima-fast-rtps.zip\"\n                 STATUS DOWNLOAD_STATUS)\n\n            # As stated in CMake's documentation: https://cmake.org/cmake/help/latest/command/file.html#transfer\n            # STATUS will return a list with two elements: the numeric status and the message returned.\n            # A 0 numeric error means no error in the operation\n            list(GET DOWNLOAD_STATUS 0 DOWNLOAD_RC)\n\n            if (DOWNLOAD_RC)\n                message(STATUS \"Unable to download documentation for version ${PROJECT_VERSION}. Falling back to latest.\")\n                file(DOWNLOAD \"https://fast-dds.docs.eprosima.com/_/downloads/en/latest/htmlzip/\" \"./eprosima-fast-rtps.zip\")\n            endif()\n            # TODO: when windows ci CMake version surpasses 17 favor file() instead of UNZIP as in the next line\n            # file(ARCHIVE_EXTRACT INPUT \"./eprosima-fast-rtps.zip\" DESTINATION  \"${PROJECT_BINARY_DIR}/doc/\")\n            execute_process(COMMAND \"${UNZIP_EXE}\" \"./eprosima-fast-rtps.zip\" -d \"${PROJECT_BINARY_DIR}/doc/\")\n            file(REMOVE_RECURSE \"${PROJECT_BINARY_DIR}/doc/manual\")\n            if (DOWNLOAD_RC)\n                file(RENAME \"${PROJECT_BINARY_DIR}/doc/eprosima-fast-rtps-latest\" \"${PROJECT_BINARY_DIR}/doc/manual\")\n            else()\n                file(RENAME \"${PROJECT_BINARY_DIR}/doc/eprosima-fast-rtps-v${PROJECT_VERSION}\" \"${PROJECT_BINARY_DIR}/doc/manual\")\n            endif()\n            file(REMOVE  \"./eprosima-fast-rtps.zip\")\n\n            ]=])\n\n        configure_file(${CMAKE_CURRENT_BINARY_DIR}/readthedocs_custom_template.cmake  ${CMAKE_CURRENT_BINARY_DIR}/readthedocs_custom.cmake)\n\n        add_custom_target(readthedocs\n            COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/readthedocs_custom.cmake\n            )\n\n        add_dependencies(readthedocs fastdds_docdirs)\n    endif()\n\n    add_custom_target(fastdds_doc ALL\n        COMMENT \"Generated project documentation\" VERBATIM)\n\n    add_dependencies(fastdds_doc fastdds_doxygen)\n    if(NOT CHECK_DOCUMENTATION)\n        add_dependencies(fastdds_doc readthedocs)\n    endif()\nendif()\n\n###############################################################################\n# Packaging\n###############################################################################\n# Install licenses\ninstall(FILES ${PROJECT_SOURCE_DIR}/LICENSE\n    DESTINATION ${LICENSE_INSTALL_DIR}\n    COMPONENT licenses\n    )\n\n# Install xml validators\ninstall(FILES ${PROJECT_SOURCE_DIR}/resources/xsd/fastdds_profiles.xsd\n    DESTINATION ${DATA_INSTALL_DIR}/fastdds\n    COMPONENT xsd\n    )\n\ninstall(FILES ${PROJECT_SOURCE_DIR}/resources/xsd/fastdds_static_discovery.xsd\n    DESTINATION ${DATA_INSTALL_DIR}/fastdds\n    COMPONENT xsd\n    )\n\noption(INSTALL_EXAMPLES \"Install example\" OFF)\n\nif(INSTALL_EXAMPLES)\n  # Install examples\n  install(DIRECTORY ${PROJECT_SOURCE_DIR}/examples/cpp\n      DESTINATION ${DATA_INSTALL_DIR}/fastdds/examples\n      COMPONENT ${DATA_INSTALL_DIR}/fastdds/examples\n      PATTERN \"examples/CMakeLists.txt\" EXCLUDE\n      )\nendif()\n\noption(INSTALL_TOOLS \"Install tools\" OFF)\n\nif(INSTALL_TOOLS)\n  # Install tools\n  install(DIRECTORY ${PROJECT_SOURCE_DIR}/tools\n      DESTINATION tools\n      COMPONENT tools\n      PATTERN \"tools/CMakeLists.txt\" EXCLUDE\n      )\nendif()\n\nif(BUILD_DOCUMENTATION)\n\n    # Instalation of doxygen files\n    install(DIRECTORY ${PROJECT_BINARY_DIR}/doc/api_reference\n        DESTINATION ${DOC_INSTALL_DIR}\n        COMPONENT documentation\n        )\n\n    if(NOT CHECK_DOCUMENTATION)\n        install(DIRECTORY ${PROJECT_BINARY_DIR}/doc/manual\n            DESTINATION ${DOC_INSTALL_DIR}\n            COMPONENT documentation\n            )\n    endif()\nendif()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.76953125,
          "content": "# Contribution Guidelines\n\nThe following documents constitutes a set of guidelines to which contributors must adhere.\n\n* [Contributions Licensing](#contributions-licensing)\n* [Developer Certificate of Origin](#developer-certificate-of-origin)\n* [Code Coverage](#code-coverage)\n* [Issues and Support](#issues-and-support)\n\n## Contributions Licensing\n\nAny contribution that you make to this repository will\nbe under the Apache 2 License, as dictated by that\n[license](http://www.apache.org/licenses/LICENSE-2.0.html):\n\n~~~\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n~~~\n\n## Developer Certificate of Origin\n\nContributors must sign-off each commit by adding a `Signed-off-by: ...`\nline to commit messages to certify that they have the right to submit\nthe code they are contributing to the project according to the\n[Developer Certificate of Origin (DCO)](https://developercertificate.org/).\n\n## Code Coverage\n\nAs stated in [QUALITY.md](QUALITY.md), all contributions to the project must increase line code coverage.\nBecause of this, contributors are asked to locally run a coverage assessment that ensures that code coverage has increased when compared to the latest execution of the [nightly coverage CI job](http://jenkins.eprosima.com:8080/job/nightly_fastdds_coverage_linux/).\n\n## Issues and Support\n\n*eProsima Fast DDS* developers welcome all contributions, and we will be grateful if you follow the guidelines below while contributing to this project.\nFirs of all, there are several products related with Fast DDS.\nPlease, open the issue in the corresponding repository:\n\n- [Fast DDS documentation](https://github.com/eProsima/Fast-DDS-docs/issues/new)\n- [Fast DDS-Gen](https://github.com/eProsima/Fast-DDS-Gen/issues/new)\n- [Foonathan memory vendor](https://github.com/eProsima/foonathan_memory_vendor/issues/new)\n- [Fast CDR](https://github.com/eProsima/Fast-CDR/issues/new)\n- [Shapes Demo](https://github.com/eProsima/ShapesDemo/issues/new)\n- [ROS 2 Fast DDS RMW](https://github.com/ros2/rmw_fastrtps/issues/new)\n- [Fast DDS Statistics Backend](https://github.com/eProsima/Fast-DDS-statistics-backend/issues/new)\n- [Fast DDS Monitor](https://github.com/eProsima/Fast-DDS-monitor/issues/new)\n- [DDS Router](https://github.com/eProsima/DDS-Router/issues/new)\n\nAlso, this project classifies user issues in the following categories.\nPlease, help us giving you a better support by opening your issue in the corresponding category.\n\n### Issues\n\nFast DDS issues are understood as bug reports and may be opened by anyone [here](https://github.com/eProsima/Fast-DDS/issues/new/choose).\nConsequently, this section handles malfunctions in the current documented behavior of the library or non-compliances to the DDS specification.\nIf you are unsure on whether your experienced behavior falls into this category, please open a ticket in the [Support](#support) discussion forum and, if it is a malfunction, an issue will be opened on your behalf with the provided report.\n\nAn issue template is provided and it is really appreciated if all related information is provided so the issue may be reproduced.\nOtherwise, more information could be required in order to reproduce and solve the issue.\nIf this is the case, the issue will be labeled with `need more info`.\nPlease, be advised that in case that no response is received within a month, the issue would be closed due to inactivity.\nThe issue may be reopened if the required information is provided.\n\n### Feature request\n\nFeature requests and improvements suggestions should be opened in the Ideas [discussion forum](https://github.com/eProsima/Fast-DDS/discussions/new).\nPlease, remember to select the corresponding category while opening the discussion.\nIt is also encouraged to contact directly with [eProsima support team](https://github.com/eProsima/Fast-DDS#getting-help) for a feature evaluation.\n\n### Q&A\n\nQuestions about *eProsima Fast DDS* behavior and features should be opened in the Q&A (Questions & Answers) [discussion forum](https://github.com/eProsima/Fast-DDS/discussions/new).\nPlease, remember to select the correct category while opening the discussion.\nIt is strongly advised to first consult [eProsima Fast DDS documentation](https://fast-dds.docs.eprosima.com/en/latest/) and previous Q&A in the forum.\n\n### Support\n\nMost user issues would fall in this category.\n*eProsima Fast DDS* provides a lot of features and tuning the library for optimal behavior for each use case is not an easy task.\nThese issues should be opened in the Support [discussion forum](https://github.com/eProsima/Fast-DDS/discussions/new).\nPlease, remember to select the corresponding category while opening the discussion.\nPlease, take into account that *eProsima Fast DDS* provides official support for the Tier 1 platforms, architectures and compilers defined [here](https://github.com/eProsima/Fast-DDS/blob/master/PLATFORM_SUPPORT.md).\nAny other support should be opened in the next section: [Unofficial support](#unofficial-support)\n\n### Unofficial support\n\nAny issue related with a non-officially supported platform, architecture and/or compiler should be opened in the Unofficial support [discussion forum](https://github.com/eProsima/Fast-DDS/discussions/new).\nPlease, remember to select the corresponding category while opening the discussion.\nIf official support is wanted for any platform, architecture and/or compiler, please contact directly with [eProsima support team](https://github.com/eProsima/Fast-DDS#getting-help) for an evaluation.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "PLATFORM_SUPPORT.md",
          "type": "blob",
          "size": 3.1650390625,
          "content": "# Platform Support\n\nThis document reflects the level of support offered by *eprosima Fast DDS* on different platforms as per the following\ndefinitions:\n\n## Tier 1\n\nTier 1 platforms are subjected to our unit test suite and other testing tools on a frequent basis including continuous\nintegration jobs, nightly jobs, packaging jobs, and performance testing.\nErrors or bugs discovered in these platforms are prioritized for correction by the development team.\nSignificant errors discovered in Tier 1 platforms can impact release dates and we strive to resolve all known high\npriority errors in Tier 1 platforms prior to new version releases.\n\n## Tier 2\n\nTier 2 platforms are subject to periodic CI testing which runs both builds and tests with publicly accessible results.\nThe CI is expected to be run at least within a week of relevant changes for the current release of *Fast DDS*.\nInstallation instructions should be available and up-to-date in order for a platform to be listed in this category.\nPackage-level binary packages may not be provided but providing a downloadable archive of the built workspace is\nencouraged.\nErrors may be present in released product versions for Tier 2 platforms.\nKnown errors in Tier 2 platforms will be addressed subject to resource availability on a best effort basis and may or\nmay not be corrected prior to new version releases.\nOne or more entities should be committed to continuing support of the platform.\n\n## Tier 3\n\nTier 3 platforms are those for which community reports indicate that the release is functional.\nThe development team does not run the unit test suite or perform any other tests on platforms in Tier 3.\nCommunity members may provide assistance with these platforms.\n\n## Platforms\n\n|Architecture|Ubuntu Noble (24.04)|Ubuntu Jammy (22.04)|MacOS Mojave (10.14)|Windows 10 (VS2019)|Windows 11 (VS2022)|Debian Buster (10)|Android 12 |Android 13 | QNX 7.1   |\n|------------|--------------------|--------------------|--------------------|-------------------|-------------------|------------------|-----------|-----------|-----------|\n|amd64       |Tier 3 [^a][^s]     |Tier 1 [^a][^s]     |Tier 1 [^s]         |Tier 1 [^a][^s]    |Tier 3 [^a][^s]    |Tier 3 [^s]       |Tier 3 [^s]|Tier 3 [^s]|Tier 3 [^s]|\n|amd32       |                    |                    |Tier 3 [^a][^s]    |Tier 3 [^a][^s]    |                  |           |           |           |\n|arm64       |Tier 3 [^a][^s]     |Tier 1 [^a][^s]     |                    |                   |                   |Tier 3 [^s]       |Tier 3 [^s]|Tier 3 [^s]|Tier 3 [^s]|\n|arm32       |                    |Tier 3 [^s]         |                    |                   |                   |Tier 3 [^s]       |Tier 3 [^s]|Tier 3 [^s]|           |\n\n[^a]: Binary releases are provided as a single archive per platform.\n[^s]: Compilation from source.\n\n## Compilers\n\nTier 1 compilers and minimum supported versions:\n\n* GCC 11.4 [^d]\n* Clang 15\n* MSVC v142 (Visual Studio 2019)\n\n[^d]: Using GCC's Thread Sanitizer flags in conjunction with GCC 11 to analyze Fast DDS threaded behavior produces\nfalse positives on some uninstrumented synchronization calls.\nFast DDS's Thread Sanitizer Github Action uses GCC 12 for threading issues testing.\n"
        },
        {
          "name": "Public_API_foonathan_memory.md",
          "type": "blob",
          "size": 1.7841796875,
          "content": "# **External Dependency Public API** `foonathan_memory`\n\nThis document lists the `foonathan_memory` API that *eprosima Fast DDS* uses.\nThis document will be updated if new features are included and used in *eprosima Fast DDS*.\n\n## Allocators\n\n1. Typedef [foonathan::memory::default_allocator](https://foonathan.net/memory/group__allocator.html#ga10acce2d854fc42fea7306e511d9cd10)\n1. Typedef [foonathan::memory::heap_allocator](https://foonathan.net/memory/group__allocator.html#ga22bca7a15392be2aa9be773d838ec4f4)\n1. Typedef [foonathan::memory::new_allocator](https://foonathan.net/memory/group__allocator.html#ga0203ba3d8ef46a65c504a6c98e3f7bb5)\n\n## Allocator implementations\n\n1. Class [foonathan::memory::memory_pool](https://foonathan.net/memory/classfoonathan_1_1memory_1_1memory__pool.html)\n1. Struct [foonathan::memory::node_pool](https://foonathan.net/memory/structfoonathan_1_1memory_1_1node__pool.html)\n\n## Adapters and Wrappers\n\n1. Class [foonathan::memory::binary_segregator](https://foonathan.net/memory/classfoonathan_1_1memory_1_1binary__segregator.html)\n\n\n## Alias Templates\n\n1. Class [foonathan::memory::unordered_map](https://foonathan.net/memory/classfoonathan_1_1memory_1_1unordered__map.html)\n1. Class [foonathan::memory::map](https://foonathan.net/memory/classfoonathan_1_1memory_1_1map.html)\n1. Class [foonathan::memory::set](https://foonathan.net/memory/classfoonathan_1_1memory_1_1set.html)\n\n## Node sizes\n\n1. Struct [foonathan::memory::map_node_size](https://foonathan.net/memory/structfoonathan_1_1memory_1_1map__node__size.html)\n1. Struct [foonathan::memory::set_node_size](https://foonathan.net/memory/structfoonathan_1_1memory_1_1set__node__size.html)\n1. Struct [foonathan::memory::unordered_map_node_size](https://foonathan.net/memory/structfoonathan_1_1memory_1_1unordered__map__node__size.html)\n"
        },
        {
          "name": "QUALITY.md",
          "type": "blob",
          "size": 14.2001953125,
          "content": "This document is a declaration of software quality for *eprosima Fast DDS* inspired on the guidelines provided in the [ROS 2 REP-2004 document](https://www.ros.org/reps/rep-2004.html).\n\n# Quality Declaration\n\n*eprosima Fast DDS* is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group).\neProsima Fast DDS implements the RTPS (Real Time Publish Subscribe) protocol, which provides publisher-subscriber communications over unreliable transports such as UDP,\nas defined and maintained by the Object Management Group (OMG) consortium.\n\n*eprosima Fast DDS* claims to be in the **Quality Level 1** category.\n\nBelow are the rationales, notes and caveats for this claim, organized by the requirements listed in the [Package Requirements for Quality Level 1 in REP-2004](https://www.ros.org/reps/rep-2004.html#package-requirements).\n\n## Version Policy [1]\n\n### Version Scheme [1.i]\n\nThe **Versioning Policy Declaration** for *eprosima Fast DDS* can be found [here](VERSIONING.md) and it adheres to [`semver`](https://semver.org/).\n\n### Version Stability [1.ii]\n\n*eprosima Fast DDS* is at a stable version, i.e. `>=1.0.0`.\nThe latest version can be found [here](https://github.com/eProsima/Fast-DDS/releases) and its change history can be found [here](versions.md).\n\n### Public API Declaration [1.iii]\n\n*eprosima Fast DDS* documentation is hosted on [Read the Docs](https://fast-dds.docs.eprosima.com). The documentation includes the [API Reference](https://fast-dds.docs.eprosima.com/en/latest/fastdds/api_reference/api_reference.html).\n\n### API Stability Policy [1.iv]\n\n*eprosima Fast DDS* will only break public API between major releases.\n\n### ABI Stability Policy [1.v]\n\nAny ABI break in *eprosima Fast DDS* will be done between minor versions and it should be clearly stated on the release notes.\n\n## Change Control Process [2]\n\nThe stability of *eprosima Fast DDS* is ensured through review, CI and tests.\nThe change control process can be found in [CONTRIBUTING](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md).\n\nAll changes to *eprosima Fast DDS* occur through pull requests that are required to pass all CI tests.\nIn case of failure, only maintainers can merge the pull request, and only when there is enough evidence that the failure is unrelated to the change.\nAdditionally, all pull requests must have a positive review from one other contributor that did not author the pull request.\n\n### Change Requests [2.i]\n\nAll changes will occur through a pull request.\n\n### Contributor Origin [2.ii]\n\n*eprosima Fast DDS* uses the [Developer Certificate of Origin (DCO)](https://developercertificate.org/) as its confirmation of contributor origin policy.\nMore information can be found in [CONTRIBUTING](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md)\n\n### Peer Review Policy [2.iii]\n\nAll pull requests will be peer-reviewed by at least one other contributor who did not author the pull request. Approval is required before merging.\n\n### Continuous Integration [2.iv]\n\nAll pull requests must pass CI to be considered for merging, unless maintainers consider that there is enough evidence that the failure is unrelated to the changes.\nCI testing is automatically triggered by incoming pull requests.\nCurrent nightly results can be seen here for all supported platforms:\n\n* Linux [![Linux amd64 ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux/badge/icon?subject=%20%20%20Linux%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux)\n* Linux-aarch64 [![Linux arm64 ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux_aarch64/badge/icon?subject=%20%20%20Linux-aarch64%20CI%20)](http://jenkins.eprosima.com:8080/view/Nightly/job/nightly_fastdds_sec_master_linux_aarch64/)\n* Windows [![Windows ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141/badge/icon?subject=%20%20%20%20Windows%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141)\n* Mac [![Mac ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac/badge/icon?subject=%20%20%20%20%20%20%20Mac%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac)\n\n### Documentation Policy [2.v]\n\nAll pull requests must resolve related documentation changes before merging as stated in [CONTRIBUTING](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md).\n\n## Documentation [3]\n\n### Feature Documentation [3.i]\n\n*eprosima Fast DDS* has a documented feature list hosted in [Read the Docs](https://fast-dds.docs.eprosima.com/en/latest/fastdds/dds_layer/dds_layer.html#dds-layer).\n\n### Public API Documentation [3.ii]\n\n*eprosima Fast DDS* includes a complete API Reference which is hosted in [Read the Docs](https://fast-dds.docs.eprosima.com/en/latest/fastdds/api_reference/api_reference.html).\n\n### License [3.iii]\n\nThe license for *eprosima Fast DDS* is Apache 2.0, and a summary can be found in each source file.\nA full copy of the license can be found [here](LICENSE).\n\nThere is some third-party content included with *eprosima Fast DDS* which is distributed under the [Boost Software License version 1.0](http://www.boost.org/LICENSE_1_0.txt) and [Zlib license](https://github.com/leethomason/tinyxml2/blob/8c8293ba8969a46947606a93ff0cb5a083aab47a/readme.md#license).\n\n### Copyright Statements [3.iv]\n\n*eprosima Fast DDS* copyright holder provide a statement of copyright in each source file.\n\n## Testing [4]\n\n### Feature Testing [4.i]\n\nEach feature in *eprosima Fast DDS* has corresponding tests which simulate typical usage, and they are located in the [`test` directory](test).\nNew features are required to have tests before being added as stated in [CONTRIBUTING](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md).\nCurrent nightly results can be found here:\n\n* Linux [![Linux ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux/badge/icon?subject=%20%20%20Linux%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux)\n* Linux-aarch64 [![Linux arm64 ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux_aarch64/badge/icon?subject=%20%20%20Linux-aarch64%20CI%20)](http://jenkins.eprosima.com:8080/view/Nightly/job/nightly_fastdds_sec_master_linux_aarch64/)\n* Windows [![Windows ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141/badge/icon?subject=%20%20%20%20Windows%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141)\n* Mac [![Mac ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac/badge/icon?subject=%20%20%20%20%20%20%20Mac%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac)\n\n### Public API Testing [4.ii]\n\nEach part of the public API has tests, and new additions or changes to the public API require tests before being added.\nThe tests aim to cover typical usage. Currently, efforts are being made to improve our code coverage statistics in order to test corner cases.\n\n### Coverage [4.iii]\n\n[![Coverage](https://img.shields.io/jenkins/coverage/cobertura.svg?jobUrl=http%3A%2F%2Fjenkins.eprosima.com%3A8080%2Fjob%2Fnightly_fastdds_coverage_linux)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_coverage_linux)\n*eProsima Fast DDS* aims to provide a line coverage **above 95%**.\n*Fast DDS* code coverage policy comprises:\n1. All contributions to *Fast DDS* must increase (or at least keep) current line coverage.\n   This is done to ensure that the **95%** line coverage goal is eventually met.\n1. Line coverage regressions are only permitted if properly justified and accepted by maintainers.\n1. If the CI system reports a coverage regression after a pull request has been merged, the maintainers must study the case and decide how to proceed, mostly reverting the changes and asking for a more thorough testing of the committed changes.\n1. External dependencies are excluded from the coverage report.\n1. *Fast DDS* examples are excluded from the coverage report.\n1. This policy is enforced through the [nightly Fast DDS coverage CI job](http://jenkins.eprosima.com:8080/job/nightly_fastdds_coverage_linux/).\n\nAs stated in [CONTRIBUTING.md](CONTRIBUTING.md), developers and contributors are asked to run a line coverage assessment locally before submitting a PR.\n\n### Performance [4.iv]\n\n*eprosima Fast DDS* provides a test directory specifically dedicated to performance that can be found [here](test/performance).\nPerformace tests are automatically run after merging to the master branch of the project.\nIf there has been any performance regression a notification is issued to maintainers that will study and decide how to proceed.\n\nLatest latency performance test results can be accesed [here](http://jenkins.eprosima.com:8080/job/FastRTPS_latency_performance/lastBuild/) and latest throughput performance test results can be seen [here](http://jenkins.eprosima.com:8080/job/fastrtps_throughput_performance/lastBuild/).\n\nFurthermore, [*eprosima benchmarking* project](https://github.com/eProsima/benchmarking) provides tools to run performance tests and a methodology to analyze and present the results:\n\n* [Latency Performance Test Specification](https://github.com/eProsima/benchmarking/blob/master/fastrtps_automated_benchmark/latency/README.md)\n* [Throughput Performance Test Specification](https://github.com/eProsima/benchmarking/blob/master/fastrtps_automated_benchmark/throughput/README.md)\n\n### Linters and Static Analysis [4.v]\n\n*eprosima Fast DDS* has a [code style](https://github.com/eProsima/cpp-style) that is enforced using [*uncrustify*](https://github.com/uncrustify/uncrustify).\nAmong the CI tests there are tests that ensures that every pull request is compliant with the code style.\nThe latest pull request results can be seen [here](http://jenkins.eprosima.com:8080/job/fastdds_github_uncrustify/lastBuild).\nThe tests only check files where changes have been made.\nTherefore, the code style is only enforced in some files.\nHowever, the tendency will be to homogenize the older source files to the code style.\n\n*eprosima Fast DDS* uses Synopsis Coverity static code analysis and the latest results can be found [here](https://scan.coverity.com/projects/eprosima-fast-dds).\n\n## Dependencies [5]\n\n### Direct Runtime Dependencies [5.iii]\n\n*eprosima Fast DDS* depends on the following packages:\n\n- `libasio-dev`\n- `libtinyxml2-dev`\n- `fast-cdr`\n- `foonathan_memory`\n\nThe first two dependencies are suggested to be installed for Linux using apt package manager, which would pull them from the Debian upstream.\nTherefore, these dependencies can be considered Quality Level 1 following the [advantages of being packaged for Debian](https://wiki.debian.org/AdvantagesForUpstream).\n\n**eProsima Fast CDR** Quality Declaration can be found [here](https://github.com/eProsima/Fast-CDR/blob/master/QUALITY.md). Currently, **eProsima Fast CDR** claims to be in the **Quality Level 1** category.\n\n`foonathan_memory` Quality Declaration can be found [here](Quality_Declaration_foonathan_memory.md).\nThis declaration claims that, even though `foonathan_memory` does not meet several quality requirements, it is considered to fulfill the **Quality Level 1** requirements for its use within *eprosima Fast DDS* with the caveats explained in the declaration.\n\n## Platform Support [6]\n\n*eprosima Fast DDS* supports the following platforms and tests each change against all of them as can be seen in the current nightly results:\n\n* Linux [![Linux ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux/badge/icon?subject=%20%20%20Linux%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux)\n* Linux-aarch64 [![Linux arm64 ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_linux_aarch64/badge/icon?subject=%20%20%20Linux-aarch64%20CI%20)](http://jenkins.eprosima.com:8080/view/Nightly/job/nightly_fastdds_sec_master_linux_aarch64/)\n* Windows [![Windows ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141/badge/icon?subject=%20%20%20%20Windows%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_windows/label=windows-secure,platform=x64,toolset=v141)\n* Mac [![Mac ci](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac/badge/icon?subject=%20%20%20%20%20%20%20Mac%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_fastdds_sec_master_mac)\n\nMore information about the supported platforms can be found in [PLATFORM_SUPPORT](PLATFORM_SUPPORT.md)\n\n## Vulnerability Disclosure Policy [7.i]\n\n*eprosima Fast DDS* vulnerability Disclosure Policy can be found [here](https://github.com/eProsima/policies/blob/main/VULNERABILITY.md)\n\n# Current Status Summary\n\nThe chart below compares the requirements in the [REP-2004](https://www.ros.org/reps/rep-2004.html#quality-level-comparison-chart) with the current state of *eprosima Fast DDS*\n|Number| Requirement| Current State |\n|--|--|--|\n|1| **Version policy** |---|\n|1.i|Version Policy available |✓|\n|1.ii|Stable version |✓|\n|1.iii|Declared public API|✓|\n|1.iv|API stability policy|✓|\n|1.v|ABI stability policy|✓|\n|2| **Change control process** |---|\n|2.i| All changes occur on change request |✓|\n|2.ii| Contributor origin (DCO, CLA, etc) |✓|\n|2.iii| Peer review policy |✓|\n|2.iv| CI policy for change requests |✓|\n|2.v| Documentation policy for change requests |✓|\n|3| **Documentation** | --- |\n|3.i| Per feature documentation |✓|\n|3.ii| Per public API item documentation |✓|\n|3.iii| Declared License(s) |✓|\n|3.iv| Copyright in source files|✓|\n|3.v.a| Quality declaration linked to README |✓|\n|3.v.b| Centralized declaration available for peer review |✓|\n|4| **Testing** | --- |\n|4.i| Feature items tests |✓|\n|4.ii| Public API tests |✓|\n|4.iii.a| Using coverage |✓|\n|4.iii.b| Coverage policy |✓|\n|4.iv.a| Performance tests (if applicable) |✓|\n|4.iv.b| Performance tests policy|✓|\n|4.v.a| Code style enforcement (linters)|✓|\n|4.v.b| Use of static analysis tools |✓|\n|5| **Dependencies** | --- |\n|5.iii| Justifies quality use of dependencies |✓|\n|6| **Platform support** | --- |\n|6.i| Support targets Tier1 ROS platforms|✓|\n|7| **Security** | --- |\n|7.i| Vulnerability Disclosure Policy |✓|\n"
        },
        {
          "name": "Quality_Declaration_foonathan_memory.md",
          "type": "blob",
          "size": 12.083984375,
          "content": "# **External Dependency Quality Declaration** `foonathan_memory`\n\nThis document is a declaration of software quality for the `foonathan_memory` external dependency, inspired on the\nguidelines provided in the [ROS 2 REP-2004 document](https://ros.org/reps/rep-2004.html).\n\nFoonathan's [`memory`](https://github.com/foonathan/memory) is a C++ library to manage memory allocations that improves upon the STL.\n*eprosima Fast DDS* started using this library following the advice of ROS's and eProsima's partner, Apex.AI.\n\nThis Quality Declaration claims that the external dependency `foonathan_memory` qualifies to Quality Level 1 category for its use within *eprosima Fast DDS*.\nThis document assesses the quality risks that can be introduced by the use of this library in *eprosima Fast DDS*.\n\nBelow are the rationales, notes and caveats for this claim, organized by the requirements listed in the [Package Requirements for Quality Level 1 in REP-2004](https://www.ros.org/reps/rep-2004.html#package-requirements).\n\n##  Version Policy [1]\n\n### Version Scheme [1.i]\n\n`foonathan_memory` does not have a declared versioning scheme.\n\nThe latest release can be found [here](https://github.com/foonathan/memory/releases) and the release notes can be found in the [CHANGELOG](https://github.com/foonathan/memory/blob/main/CHANGELOG.md).\nEven though the current version is `< 1.0.0`, `foonathan_memory` is in [maintenance mode](https://www.jonathanmueller.dev/project/).\n\n*eprosima Fast DDS* ensures `foonathan_memory` version stability by pinning to a specific [release](https://github.com/foonathan/memory/releases/tag/v0.7-3).\nBoth *eprosima* `foonathan_memory_vendor` utility and *eprosima Fast DDS* CI tests use this specific release.\nThe specific tag was released January 11th, 2023.\n\n*eprosima Fast DDS* maintainers will keep a continuous watch over new releases in order to assess the impact they could have over *eprosima Fast DDS*.\nAny `bugfix` or security vulnerability corrected that affects the API used by *eprosima Fast DDS* will be analyzed by the maintainers.\nDecision about updating the used commit/release rests in *eprosima Fast DDS* maintainers.\n\n### Version Stability [1.ii]\n\n`foonathan_memory` is stable and in [maintenance mode](https://www.jonathanmueller.dev/project/).\n\n### Public API Declaration [1.iii]\n\n`foonathan_memory` public API is defined in its [documentation](https://memory.foonathan.net/).\nAdditionally, *eprosima Fast DDS* has clearly stated the API used by the project [here](Public_API_foonathan_memory.md).\n\n### API and ABI Stability Policy [1.iv]/[1.v]\n\n`foonathan_memory` does not provide any versioning policy.\nHowever, by pinning *eprosima Fast DDS* CI tests and `foonathan_memory_vendor` utility to a particular release ensures API and ABI stability within *eprosima Fast DDS* project.\n\n## Change Control Process [2]\n\n`foonathan_memory` does not have a stated change control process.\nNevertheless, only when the pinned commit/release is updated is *eprosima Fast DDS* affected.\nThe change control process for the  update of the `foonathan_memory_vendor` utility follows [eProsima Contributing guidelines](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md).\n\n### Change Requests [2.i]\n\n`foonathan_memory` does not require that changes occur through a pull request.\nMany changes are committed directly by its maintainer.\n\n`foonathan_memory_vendor` requires that all changes occur through a pull request.\n\n### Contributor Origin [2.ii]\n\n`foonathan_memory` does not have a confirmation of contributor origin policy.\n\n`foonathan_memory_vendor` uses DCO as its confirmation of contributor origin policy. More information can be found [here](https://github.com/eProsima/policies/blob/main/CONTRIBUTING.md).\n\n### Peer Review Policy [2.iii]\n\n`foonathan_memory` does not state its peer review policy, but each pull request is at least reviewed by the maintainer.\n\nAll `foonathan_memory_vendor` pull requests will be peer reviewed and need at least one approved review to be merged.\n\n### Continuous Integration [2.iv]\n\n`foonathan_memory` changes run CI tests and the latest results can be seen [here](https://github.com/foonathan/memory/actions/workflows/main_ci.yml)\n\nAdditionally, eProsima CI runs `foonathan_memory` tests nightly in all *eprosima Fast DDS* [Tier 1 platforms](PLATFORM_SUPPORT.md).\nLatest results can be found here:\n\n* Linux [![Linux ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux/badge/icon?subject=%20%20%20Linux%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux)\n* Linux-aarch64 [![Linux arm64 ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux_aarch64/badge/icon?subject=%20%20%20Linux-aarch64%20CI%20)](http://jenkins.eprosima.com:8080/view/Nightly/job/nightly_foonathan_memory_master_linux_aarch64/)\n* Windows [![Windows ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_windows/label=windows-secure,platform=x64,toolset=v142/badge/icon?subject=%20%20%20%20Windows%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_windows/label=windows-secure,platform=x64,toolset=v142)\n* Mac [![Mac ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_mac/badge/icon?subject=%20%20%20%20%20%20%20Mac%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_mac)\n\n`foonathan_memory_vendor` does not provide CI tests being only an utility providing CMake files that configure `foonathan_memory`.\nIf ROS 2 dependencies are found, `foonathan_memory_vendor` could run ROS 2 linters and copyright tests as can be seen in the [nightly CI results](https://ci.ros2.org/view/nightly/job/nightly_linux_release/lastBuild/testReport/foonathan_memory_vendor/).\n\n### Documentation Policy [2.v]\n\n`foonathan_memory` does not have a stated documentation policy.\n\n## Documentation [3]\n\n### Feature Documentation [3.i]\n\n`foonathan_memory` provides a [feature list](https://memory.foonathan.net/index.html) with descriptions of its main features.\n\n### Public API Documentation [3.ii]\n\n`foonathan_memory` has embedded API documentation that is generated using [Doxygen](https://www.doxygen.nl/index.html) and is [hosted](https://memory.foonathan.net/namespacefoonathan_1_1memory.html) alongside the feature documentation.\n\nAdditionally, *eprosima Fast DDS* provides a [document](Public_API_foonathan_memory.md) stating the API used within the project.\n\n### License [3.iii]\n\nThe license for `foonathan_memory` is Zlib.\nA summary statement is provided in each source file and a full copy can be found in the [LICENSE](https://raw.githubusercontent.com/foonathan/memory/main/LICENSE) file.\n\n### Copyright Statements [3.iv]\n\nThe copyright holders each provide a statement of copyright in each source file in `foonathan_memory`.\n\n## Testing [4]\n\n### Feature and Public API Testing [4.i]/[4.ii]\n\n`foonathan_memory` provides tests which simulate typical usage located in the [`test`](https://github.com/foonathan/memory/tree/main/test) directory.\n\nSpecifically, the API used by *eprosima Fast DDS* is tested in the following tests:\n\n* Allocators: [test/default_allocator.cpp](https://github.com/foonathan/memory/blob/v0.7-3/test/default_allocator.cpp)\n* Allocator implementations: [test/memory_pool.cpp](https://github.com/foonathan/memory/blob/v0.7-3/test/memory_pool.cpp)\n* Adapters and Wrappers: [test/segregator.cpp](https://github.com/foonathan/memory/blob/v0.7-3/test/segregator.cpp)\n* Alias templates: `foonathan_memory` does not provide any tests to check this functionality.\nRegardless, *eprosima Fast DDS* tests these features in the [PersistenceTests](https://github.com/eProsima/Fast-DDS/tree/master/test/unittest/rtps/persistence) and the [WriterProxyTests](https://github.com/eProsima/Fast-DDS/tree/master/test/unittest/rtps/reader).\n\n### Coverage [4.iii]\n\n`foonathan_memory` tracks testing coverage on [codecov](https://codecov.io/github/foonathan/memory).\n\nApart from this, *eprosima Fast DDS* ensures that every feature and API used within the library has been tested by running its own [coverage analysis](http://jenkins.eprosima.com:8080/job/nightly_fastdds_coverage_linux/), which completely covers all API used by Fast DDS.\nIn order to change the `foonathan_memory` commit/release used in Fast DDS, maintainers must ensure that all new API is tested accordingly.\n\n### Performance [4.iv]\n\n`foonathan_memory` does not conduct performance tests.\n\n*eprosima Fast DDS* will run its [performance tests](test/performance) and analyze their results before deciding to change the pinned commit/release to prevent performance regression.\nBeing pinned to a specific release, any performance regression in *eprosima Fast DDS* could not be blamed on `foonathan_memory`.\n\n### Linters and Static Analysis [4.v]\n\n`foonathan_memory` does not conduct tests with linters or any static analysis tool.\nAs `foonathan_memory` is not maintained by eProsima, these requirements should be waved.\n\n## Dependencies [5]\n\n`foonathan_memory` does not have any dependencies outside of the C++ standard library.\n\n## Platform Support [6.i]\n\n*eprosima Fast DDS* ensures `foonathan_memory` support for the same platforms defined in [PLATFORM_SUPPORT](PLATFORM_SUPPORT.md).\nCurrent nightly results can be found here:\n\n* Linux [![Linux ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux/badge/icon?subject=%20%20%20Linux%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux)\n* Linux-aarch64 [![Linux arm64 ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_linux_aarch64/badge/icon?subject=%20%20%20Linux-aarch64%20CI%20)](http://jenkins.eprosima.com:8080/view/Nightly/job/nightly_foonathan_memory_master_linux_aarch64/)\n* Windows [![Windows ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_windows/label=windows-secure,platform=x64,toolset=v142/badge/icon?subject=%20%20%20%20Windows%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_windows/label=windows-secure,platform=x64,toolset=v142)\n* Mac [![Mac ci](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_mac/badge/icon?subject=%20%20%20%20%20%20%20Mac%20CI%20)](http://jenkins.eprosima.com:8080/job/nightly_foonathan_memory_master_mac)\n\n## Vulnerability Disclosure Policy [7.i]\n\nEven though `foonathan_memory` does not provide a Vulnerability Disclosure Policy, eProsima will apply its [Vulnerability Disclosure Policy](https://github.com/eProsima/policies/blob/main/VULNERABILITY.md) for any security issue within the scope of *eprosima Fast DDS* project.\n\n# Current Status Summary\n\nThe chart below compares the requirements in the [REP-2004](https://www.ros.org/reps/rep-2004.html#quality-level-comparison-chart) with the current state of `foonathan_memory` with the specifics dealt in this document to guarantee its quality level.\n\n■ = requirement not properly fulfilled but dealt with.\n\n● = requirement waved\n\n|Number| Requirement| Current State |\n|--|--|--|\n|1| **Version policy** |---|\n|1.i|Version Policy available |■|\n|1.ii|Stable version |✓|\n|1.iii|Declared public API|✓|\n|1.iv|API stability policy|■|\n|1.v|ABI stability policy|■|\n|2| **Change control process** |---|\n|2.i| All changes occur on change request |■|\n|2.ii| Contributor origin (DCO, CLA, etc) |■|\n|2.iii| Peer review policy |■|\n|2.iv| CI policy for change requests |■|\n|2.v| Documentation policy for change requests |■|\n|3| **Documentation** | --- |\n|3.i| Per feature documentation |✓|\n|3.ii| Per public API item documentation |✓|\n|3.iii| Declared License(s) |✓|\n|3.iv| Copyright in source files|✓|\n|3.v.a| Quality declaration linked to README |✓|\n|3.v.b| Centralized declaration available for peer review |✓|\n|4| **Testing** | --- |\n|4.i| Feature items tests |✓|\n|4.ii| Public API tests |✓|\n|4.iii.a| Using coverage |■|\n|4.iii.b| Coverage policy |✓|\n|4.iv.a| Performance tests (if applicable) |■|\n|4.iv.b| Performance tests policy|✓|\n|4.v.a| Code style enforcement (linters)|●|\n|4.v.b| Use of static analysis tools |●|\n|5| **Dependencies** | --- |\n|5.iii| Justifies quality use of dependencies |✓|\n|6| **Platform support** | --- |\n|6.i| Support targets Tier1 ROS platforms|✓|\n|7| **Security** | --- |\n|7.i| Vulnerability Disclosure Policy |✓|\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.90625,
          "content": "[![Fast DDS](resources/images/fastdds_github_banner.png)](https://eprosima.com/index.php/products-all/eprosima-fast-dds)\n\n<br>\n\n<div class=\"menu\" align=\"center\">\n    <strong>\n        <a href=\"https://eprosima.com/index.php/downloads-all\">Download</a>\n        <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n        <a href=\"https://eprosima.com/index.php/products-all/eprosima-fast-dds#Available_Documentation\">Docs</a>\n        <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n        <a href=\"https://eprosima.com/index.php/company-all/news\">News</a>\n        <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n        <a href=\"https://twitter.com/EProsima\">Twitter</a>\n        <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n        <a href=\"mailto:info@eprosima.com\">Contact Us</a>\n    </strong>\n</div>\n\n<br><br>\n\n<div class=\"badges\" align=\"center\">\n    <a href=\"https://www.fiware.org/developers/catalogue/\"><img alt=\"FIWARE Robotics\" src=\"https://nexus.lab.fiware.org/static/badges/chapters/robotics.svg\"/></a>\n    <a href=\"https://opensource.org/licenses/Apache-2.0\"><img alt=\"License\" src=\"https://img.shields.io/github/license/eProsima/Fast-DDS.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/releases\"><img alt=\"Releases\" src=\"https://img.shields.io/github/v/release/eProsima/Fast-DDS?sort=semver\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/issues\"><img alt=\"Issues\" src=\"https://img.shields.io/github/issues/eProsima/Fast-DDS.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/network/members\"><img alt=\"Forks\" src=\"https://img.shields.io/github/forks/eProsima/Fast-DDS.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/stargazers\"><img alt=\"Stars\" src=\"https://img.shields.io/github/stars/eProsima/Fast-DDS.svg\"/></a>\n    <a href=\"https://eprosima-fast-rtps.readthedocs.io\"><img alt=\"Documentation badge\" src=\"https://img.shields.io/readthedocs/eprosima-fast-rtps.svg\"/></a>\n    <br>\n    <a href=\"\"><img alt=\"Status\" src=\"https://nexus.lab.fiware.org/static/badges/statuses/incubating.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-ubuntu-master.yml\"><img alt=\"Fast DDS Ubuntu CI (nightly)\" src=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-ubuntu-master.yml/badge.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-windows-master.yml\"><img alt=\"Fast DDS Windows CI (nightly)\" src=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-windows-master.yml/badge.svg\"/></a>\n    <a href=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-mac-master.yml\"><img alt=\"Fast DDS MacOS CI (nightly)\" src=\"https://github.com/eProsima/Fast-DDS/actions/workflows/nightly-mac-master.yml/badge.svg\"/></a>\n    <a href=\"http://jenkins.eprosima.com:8080/job/nightly_fastdds_coverage_linux\"><img alt=\"Coverage\" src=\"https://img.shields.io/jenkins/coverage/cobertura.svg?jobUrl=http%3A%2F%2Fjenkins.eprosima.com%3A8080%2Fjob%2Fnightly_fastdds_coverage_linux\"/></a>\n</div>\n\n<br><br>\n\n*eprosima Fast DDS* is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group).\neProsima Fast DDS implements the RTPS (Real Time Publish Subscribe) protocol, which provides publisher-subscriber communications over unreliable transports such as UDP, as defined and maintained by the Object Management Group (OMG) consortium.\nRTPS is also the wire interoperability protocol defined for the Data Distribution Service (DDS) standard.\n*eProsima Fast DDS* expose an API to access directly the RTPS protocol, giving the user full access to the protocol internals.\n\nSome of the main features of this library are:\n\n* Configurable best-effort and reliable publish-subscribe communication policies for real-time applications.\n* Plug and play connectivity so that any new applications are automatically discovered by any other members of the network.\n* Modularity and scalability to allow continuous growth with complex and simple devices in the network.\n* Configurable network behavior and interchangeable transport layer: Choose the best protocol and system input/output channel combination for each deployment.\n* Two API Layers: a high-level Publisher-Subscriber one focused on usability (DDS) and a lower-level Writer-Reader one that provides finer access to the inner workings of the RTPS protocol.\n\n*eProsima Fast DDS* has been adopted by multiple organizations in many sectors including these important cases:\n\n* Robotics: ROS (Robotic Operating System) as their default middleware for every ROS 2 long term (LTS) releases and most of the non-LTS releases.\n* EU R&D: FIWARE Incubated GE.\n\nThis project is part of [FIWARE](https://www.fiware.org/).\nFor more information check the FIWARE Catalogue entry for [Robotics](https://github.com/Fiware/catalogue/tree/master/robotics).\n\n## <a id=\"getting-help\"></a>Commercial support\n\nLooking for commercial support? Write us to info@eprosima.com\n\nFind more about us at [eProsima’s webpage](https://eprosima.com/).\n\n## Want us to share your project with the community?\n\nWrite to evaluation.support@eprosima.com or mention @EProsima on Twitter.\nWe are curious to get to know your use case!\n\n## Supported platforms\n\nMore information about the official support can be found [here](https://github.com/eProsima/Fast-DDS/blob/master/PLATFORM_SUPPORT.md#platform-support)\n\n## Installation Guide\nYou can get either a binary distribution of *eprosima Fast DDS* or compile the library yourself from source.\nPlease, refer to [Fast DDS documentation](https://fast-dds.docs.eprosima.com/en/latest/installation/binaries/binaries_linux.html) for the complete installation guide.\n\n### Installation from binaries\nThe latest, up to date binary release of *eprosima Fast DDS* can be obtained from the <a href='http://www.eprosima.com'>company website</a>.\n\n## Documentation\n\nYou can access the documentation online, which is hosted on [Read the Docs](https://fast-dds.docs.eprosima.com).\n\n* [Start Page](https://fast-dds.docs.eprosima.com)\n* [Installation manual](https://fast-dds.docs.eprosima.com/en/latest/installation/binaries/binaries_linux.html)\n* [User manual](https://fast-dds.docs.eprosima.com/en/latest/fastdds/getting_started/getting_started.html)\n* [Fast DDS-Gen manual](https://fast-dds.docs.eprosima.com/en/latest/fastddsgen/introduction/introduction.html)\n* [Fast DDS CLI manual](https://fast-dds.docs.eprosima.com/en/latest/fastddscli/cli/cli.html)\n* [eProsima Docker image manual](https://fast-dds.docs.eprosima.com/en/latest/docker/docker.html)\n* [Release notes](https://fast-dds.docs.eprosima.com/en/latest/notes/notes.html)\n\n## Quality Declaration\n\n*eprosima Fast DDS* claims to be in the **Quality Level 1** category based on the guidelines provided by [ROS 2](https://ros.org/reps/rep-2004.html).\nSee the [Quality Declaration](https://github.com/eProsima/Fast-DDS/blob/master/QUALITY.md) for more details.\n\n## Quick Demo\n\neProsima provides the eProsima Fast DDS Suite Docker image for those who want a quick demonstration of Fast DDS running on an Ubuntu platform.\nIt can be downloaded from [eProsima's downloads page](https://eprosima.com/index.php/downloads-all).\n\nThis Docker image was built for Ubuntu 20.04 (Focal Fossa).\n\nTo run this container you need **Docker installed**. From a terminal run the following command\n\n    $ sudo apt-get install docker.io\n\nLoad the docker image:\n\n    $ docker load -i ubuntu-fastdds-suite:<FastDDS-Version>.tar\n    $ docker tag ubuntu-fastdds-suite:<FastDDS-Version> ubuntu-fastdds-suite:latest\n\nRun the eProsima Fast DDS Suite Docker container:\n\n    $ xhost local:root\n    $ docker run -it --privileged -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix \\\n    ubuntu-fastdds-suite:<FastDDS-Version>\n\nThis Docker Image comes bundled with the following:\n\n### Shapes Demo\n\neProsima Shapes Demo is an application in which Publishers and Subscribers are shapes of different colors and sizes moving on a board.\nEach shape refers to its own topic: Square, Triangle or Circle.\nA single instance of the eProsima Shapes Demo can publish on or subscribe to several topics at a time.\n\nYou can read more about this application on the [Shapes Demo documentation page](https://eprosima-shapes-demo.readthedocs.io/).\n\nTo run this application once inside the Docker container run:\n\n    $ ShapesDemo\n\neProsima Shapes Demo usage information can be found on the [Shapes Demo First Steps page](https://eprosima-shapes-demo.readthedocs.io/en/latest/first_steps/first_steps.html).\n\n### Fast DDS Monitor\n\neProsima Fast DDS Monitor is a graphical desktop application aimed at monitoring DDS environments deployed using the *eProsima Fast DDS* library.\nThus, the user can monitor in real time the status of publication/subscription communications between DDS entities.\nThey can also choose from a wide variety of communication parameters to be measured (latency, throughput,packet loss, etc.), as well as record and compute in real time statistical measurements on these parameters (mean, variance, standard deviation, etc.).\n\nYou can read more about this application on the [Fast DDS Monitor documentation page](https://fast-dds-monitor.readthedocs.io/).\n\nTo run this application once inside the Docker container run:\n\n    $ fastdds_monitor\n\neProsima Fast DDS Monitor usage information can be found on the [Fast DDS Monitor User Manual](https://fast-dds-monitor.readthedocs.io/en/latest/rst/user_manual/initialize_monitoring.html).\n\n\n### Fast DDS libraries and Examples\n\nIncluded in this Docker container is a set of binary examples that showcase several functionalities of the Fast DDS libraries.\nThese examples' path can be accessed from a terminal by typing\n\n    $ goToExamples\n\nFrom this folder you can access all examples.\nWe detail the steps to launch one of these examples below.\n\nTo launch the Hello World example (a minimal example that will perform a Publisher/Subscriber match and start sending samples) you could run:\n\n    $ goToExamples\n    $ cd hello_world/bin\n    $ tmux new-session \"./hello_world publisher\" \\; \\\n    split-window \"./hello_world subscriber\" \\; \\\n    select-layout even-vertical\n\nThis example is not constrained to the current instance.\nIt is possible to run several instances of this container to check the communication between them by running the following from each container.\n\n    $ goToExamples\n    $ cd hello_world/bin\n    $ ./hello_world publisher\n\nor\n\n    $ goToExamples\n    $ cd hello_world/bin\n    $ ./hello_world subscriber\n\n---\n\n<!--\n    ROSIN acknowledgement from the ROSIN press kit\n    @ https://github.com/rosin-project/press_kit\n-->\n\n<a href=\"http://rosin-project.eu\">\n  <img src=\"http://rosin-project.eu/wp-content/uploads/rosin_ack_logo_wide.png\"\n       alt=\"rosin_logo\" height=\"60\" >\n</a>\n\nSupported by ROSIN - ROS-Industrial Quality-Assured Robot Software Components.\nMore information: <a href=\"http://rosin-project.eu\">rosin-project.eu</a>\n\n<img src=\"http://rosin-project.eu/wp-content/uploads/rosin_eu_flag.jpg\"\n     alt=\"eu_flag\" height=\"45\" align=\"left\" >\n\nThis project has received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement no. 732287.\n"
        },
        {
          "name": "RELEASE_SUPPORT.md",
          "type": "blob",
          "size": 5.3671875,
          "content": "# Release support\n\nPlease, refer to the [master branch](https://github.com/eProsima/Fast-DDS/blob/master/RELEASE_SUPPORT.md) for the latest version of this document.\n\n*eProsima Fast DDS* maintains several releases with different support cycles.\nMajor releases are scarce and they are made when public API is broken (more information about *eProsima Fast DDS* versioning can be found [here](https://github.com/eProsima/Fast-DDS/blob/master/VERSIONING.md)).\nLatest major release is v3.0.0 (August 2024), which introduced the DDS-XTypes 1.3.\nRefer to the [migration guide](https://github.com/eProsima/Fast-DDS/blob/master/UPGRADING.md) if looking for hints moving from Fast DDS 2.x to v3.0.0.\n\nEach quarter, a new Fast DDS minor version with new features is released.\nBy default, *eProsima Fast DDS* minor releases have a lifecycle of **6 months**.\nHowever, the life of certain branches can be extended depending on costumer and user needs.\nWithin the support period of any minor version, there may be several patch releases that either add new functionalities in an ABI compatible way or fix possible issues.\nBefore the minor release end of life (EOL) date, a final patch release including the latest fixes will be made available if there are any changes not included in any previous patch release of the same minor version.\nLong Term Supported (LTS) versions may have an extended supported period for only critical issues and security fixes, where no other ABI compatible neither bug fixes will be backported.\nThis period applies since the end of standard support date to the end of life (EOL) date.\n\n## *eProsima Fast DDS* currently supported versions and their support cycles\n\n|Version|Version branch|Latest Release|Release Date|End of Standard Support Date|EOL Date|\n|-------|--------------|--------------|------------|----------------------------|--------|\n|3.2|3.2.x (LTS)|-|March 2025|March 2026 [^*]|March 2026 [^*]|\n|3.1|[3.1.x](https://github.com/eProsima/Fast-DDS/tree/3.1.x)|[v3.1.0](https://github.com/eProsima/Fast-DDS/releases/tag/v3.1.0)|October 2024|April 2025|April 2025|\n|3.0|[3.0.x](https://github.com/eProsima/Fast-DDS/tree/3.0.x)|[v3.0.1](https://github.com/eProsima/Fast-DDS/releases/tag/v3.0.1)|August 2024|February 2025|February 2025|\n|2.14|[2.14.x](https://github.com/eProsima/Fast-DDS/tree/2.14.x) (LTS)|[v2.14.4](https://github.com/eProsima/Fast-DDS/releases/tag/v2.14.4)|March 2024|March 2025 [^*]|March 2025 [^*]|\n|2.10|[2.10.x](https://github.com/eProsima/Fast-DDS/tree/2.10.x) (LTS)|[v2.10.6](https://github.com/eProsima/Fast-DDS/releases/tag/v2.10.6)|March 2023|May 2025 [^*]|May 2025|\n|2.6|[2.6.x](https://github.com/eProsima/Fast-DDS/tree/2.6.x) (LTS)|[v2.6.9](https://github.com/eProsima/Fast-DDS/releases/tag/v2.6.9)|March 2022|July 2024|May 2025[^*]|\n\n[^*]: Support may be extended.\n\n## *eProsima Fast DDS* previously supported versions.\n\n|Version|Version branch|Latest Release|Release Date|EOL Date|\n|-------|--------------|--------------|------------|--------|\n|2.13|[2.13.x](https://github.com/eProsima/Fast-DDS/tree/2.13.x)|[v2.13.6](https://github.com/eProsima/Fast-DDS/releases/tag/v2.13.6)|December 2023|July 2024|\n|2.12|[2.12.x](https://github.com/eProsima/Fast-DDS/tree/2.12.x)|[v2.12.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.12.2)|September 2023|March 2024|\n|2.11|[2.11.x](https://github.com/eProsima/Fast-DDS/tree/2.11.x)|[v2.11.3](https://github.com/eProsima/Fast-DDS/releases/tag/v2.11.3)|July 2023|January 2024|\n|2.9|[2.9.x](https://github.com/eProsima/Fast-DDS/tree/2.9.x)|[v2.9.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.9.2)|December 2022|July 2023|\n|2.8|[2.8.x](https://github.com/eProsima/Fast-DDS/tree/2.8.x)|[v2.8.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.8.2)|September 2022|March 2023|\n|2.7|[2.7.x](https://github.com/eProsima/Fast-DDS/tree/2.7.x)|[v2.7.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.7.2)|July 2022|January 2023|\n|2.5|[2.5.x](https://github.com/eProsima/Fast-DDS/tree/2.5.x)|[v2.5.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.5.2)|December 2021|June 2022|\n|2.4|[2.4.x](https://github.com/eProsima/Fast-DDS/tree/2.4.x)|[v2.4.2](https://github.com/eProsima/Fast-DDS/releases/tag/v2.4.2)|September 2021|March 2022|\n|2.3|[2.3.x](https://github.com/eProsima/Fast-DDS/tree/2.3.x)|[v2.3.6](https://github.com/eProsima/Fast-DDS/releases/tag/v2.3.6)|March 2021|November 2022|\n|2.2|[2.2.x](https://github.com/eProsima/Fast-DDS/tree/2.2.x)|[v2.2.1](https://github.com/eProsima/Fast-DDS/releases/tag/v2.2.1)|January 2021|February 2022|\n|2.1|[2.1.x](https://github.com/eProsima/Fast-DDS/tree/2.1.x)|[v2.1.4](https://github.com/eProsima/Fast-DDS/releases/tag/v2.1.4)|November 2020|May 2023|\n|2.0|[2.0.x](https://github.com/eProsima/Fast-DDS/tree/2.0.x)|[v2.0.3](https://github.com/eProsima/Fast-DDS/releases/tag/v2.0.3)|June 2020|February 2022|\n|1.10|[1.10.x](https://github.com/eProsima/Fast-DDS/tree/1.10.x)|[v1.10.1](https://github.com/eProsima/Fast-DDS/releases/tag/v1.10.1)|April 2020|February 2022|\n|1.9|[1.9.x](https://github.com/eProsima/Fast-DDS/tree/1.9.x)|[v1.9.5](https://github.com/eProsima/Fast-DDS/releases/tag/v1.9.5)|August 2019|February 2022|\n|1.8|[1.8.x](https://github.com/eProsima/Fast-DDS/tree/1.8.x)|[v1.8.5](https://github.com/eProsima/Fast-DDS/releases/tag/v1.8.5)|May 2019|February 2022|\n|1.7|[1.7.x](https://github.com/eProsima/Fast-DDS/tree/1.7.x)|[v1.7.3](https://github.com/eProsima/Fast-DDS/releases/tag/v1.7.3)|December 2018|February 2022|\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 21.859375,
          "content": "# Migration Guide from Fast DDS v2 to Fast DDS v3\n\nThis document aims to help during the migration process from eProsima *Fast DDS version* 2 to *Fast DDS version* 3.\nFor more information about all the updates, please refer to the [release notes](https://fast-dds.docs.eprosima.com/en/latest/notes/notes.html).\n\n## Migration Steps\n\nThe following steps describe the possible changes that your project may require to migrate to *Fast DDS v3.0.0*:\n\n- [Step 1: Update the Package Name and CMake Configuration](#step-1-update-the-package-name-and-cmake-configuration)\n- [Step 2: Update Dependencies](#step-2-update-dependencies)\n- [Step 3: Ensure Compability with Related Products](#step-3-ensure-compability-with-related-products)\n- [Step 4: Apply Namespace Changes](#step-4-apply-namespace-changes)\n- [Step 5: Migrate Public Headers](#step-5-migrate-public-headers)\n- [Step 6: Handle Removed or Private Headers](#step-6-handle-removed-or-private-headers)\n- [Step 7: Update API Methods](#step-7-update-api-methods)\n- [Step 8: Update Structs, Enums, and Variables](#step-8-update-structs-enums-and-variables)\n- [Step 9: Refactor Examples](#step-9-refactor-examples)\n\n### Step 1: Update the Package Name and CMake Configuration\n\n1. CMake Project Name: Rename the CMake project from `fastrtps` to `fastdds`.\n2. Environment Variables:\n\n    * Rename `FASTRTPS_DEFAULT_PROFILES_FILE` to `FASTDDS_DEFAULT_PROFILES_FILE`.\n    * The configuration file for loading profiles is now `DEFAULT_FASTDDS_PROFILES.xml`.\n3. Update CMake File Names on Windows:\n\n    * Rename fastrtps.manifest.in to fastdds.manifest.in\n    * Rename fastrtps-config.cmake to fastdds-config.cmake\n    * Rename fastrtps.rc to fastdds.rc\n\n\n### Step 2: Update Dependencies\n\nFast DDS v3 is only compatible with Fast CDR v2.\nIf you are not using Fast CDR as [third-party](https://fast-dds.docs.eprosima.com/en/latest/installation/configuration/cmake_options.html#third-party-libraries-options), please ensure that your local dependencies are up-to-date.\nRefer to the [library deprendencies table](https://fast-dds.docs.eprosima.com/en/latest/notes/versions.html#library-dependencies) to verify version compatibility for all Fast DDS library dependencies.\n\n### Step 3: Ensure Compability with Related Products\n\nFast DDS v3 requires Fast DDS Gen v4 for code generation. Make sure to regenerate types using this compatible version.\n\nFor other compatibility requirements with related products (e.g., Shapes Demo, Discovery Server), refer to the table of [products compatibility](https://fast-dds.docs.eprosima.com/en/latest/notes/versions.html#eprosima-products-compatibility), which outlines version compatibility across the Fast DDS ecosystem.\nVerify these versions and update accordingly to avoid any integration issues.\n\n### Step 4: Apply Namespace Changes\n\n1. Namespace Migration:\n\n    * Update all `eprosima::fastrtps::` namespace references to `eprosima::fastdds::`.\n    * Move built-in topics `SubscriptionBuiltinTopicData`, `PublicationBuiltinTopicData` and `ParticipantBuiltinTopicData` from `fastdds::dds::builtin::` to `fastdds::dds::`.\n    * Move `Duration_t` and `c_TimeInfinite` references to `dds::`.\n    * Move `Time_t.hpp` references from `eprosima::fastdds::` to `eprosima::fastdds::dds`.\n\nEnsure you update these namespace references across your code to avoid compilation errors.\n\n2. Renamed Types:\n\n    * Change `EventKindBits::` references to`EventKind::`.\n    * Change `EventKindEntityId::` references to`EntityId::`.\n    * Change `StatisticsEventKind::` references to `statistics::EventKind::`.\n\nRefactor the type references as outlined above to maintain compatibility with the new version.\n\n### Step 5: Migrate Public Headers\n\n1. File Location headers:\n\n    All the headers in `include/fastrtps` were migrated to `include/fastdds`.\n    In particular, the following list includes headers that have been relocated to different paths or whose implementations have been incorporated into other headers:\n\n    | Fast DDS 2.x file *include* path | Fast DDS v3.0.0 file *include* path |\n    |----------------------------------|-------------------------------------|\n    | fastdds/rtps/resources/ResourceManagement.hpp | fastdds/rtps/attributes/ResourceManagement.hpp |\n    | fastrtps/eProsima_auto_link.h | fastdds/fastdds_auto_link.hpp |\n    | fastrtps/attributes/ParticipantAttributes.h | fastdds/rtps/DomainParticipantQos.hpp |\n    | fastrtps/Domain.h | fastdds/dds/domain/DomainParticipantFactory.hpp |\n    | fastrtps/log/Log.h | fastdds/dds/log/Log.hpp |\n    | fastrtps/qos/DeadlineMissedStatus.h\t| fastdds/dds/core/status/DeadlineMissedStatus.hpp |\n    | fastrtps/qos/IncompatibleQosStatus.hpp | fastdds/dds/core/status/IncompatibleQosStatus.hpp |\n    | fastrtps/qos/LivelinessChangedStatus.h | fastdds/dds/core/status/LivelinessChangedStatus.hpp |\n    | fastrtps/qos/QosPolicies.h | fastdds/dds/core/policy/QosPolicies.hpp |\n    | fastrtps/qos/ReaderQos.h | fastdds/dds/subscriber/qos/ReaderQos.hpp |\n    | fastrtps/qos/WriterQos.h | fastdds/dds/publisher/qos/WriterQos.hpp |\n    | fastrtps/qos/SampleRejectedStatus.hpp | fastdds/dds/core/status/SampleRejectedStatus.hpp |\n    | fastrtps/participant/Participant.h | fastdds/rtps/participant/RTPSParticipant.hpp |\n    | fastrtps/transport/TCPv4TransportDescriptor.h | fastdds/rtps/transport/TCPv4TransportDescriptor.hpp |\n    | fastrtps/transport/TCPv6TransportDescriptor.h| \tfastdds/rtps/transport/ TCPv6TransportDescriptor.hpp |\n    | fastrtps/transport/UDPv4TransportDescriptor.h | fastdds/rtps/transport/ UDPv4TransportDescriptor.hpp |\n    | fastrtps/transport/UDPv6TransportDescriptor.h | fastdds/rtps/transport/ UDPv6TransportDescriptor.hpp |\n    | fastrtps/transport/UDPTransportDescritpor.h | fastdds/rtps/transport/UDPTransportDescritpor.hpp |\n    | fastrtps/transport/TCPTransportDescritpor.h | fastdds/rtps/transport/TCPTransportDescritpor.hpp |\n    | fastdds/rtps/common/Time_t.hpp in namespace{fastdds} | fastdds/dds/core/Time_t.hpp in namespace{fastdds::dds} |\n\n    Also, the `fixed_size_string.hpp` implementation has been migrated from Fast DDS package to Fast CDR.\n\n2. File Extentions:\n\n    Rename file extensions from `.h` to `.hpp`.\n\n### Step 6: Handle Removed or Private Headers\n\nThe following list contains headers that were previously in the `include` folder and have been relocated to the `src/cpp` folder.\nSince they are no longer public, it is not possible to include them in external projects:\n\n* ParticipantAttributes.hpp\n* ReplierAttributes.hpp\n* RequesterAttributes.hpp\n* PublisherAttributes.hpp\n* SubscriberAttributes.hpp\n* ProxyPool.hpp\n* Semaphore.hpp\n* MessageReceiver.hpp\n* BuiltinProtocols.hpp\n* shared_mutex.hpp\n* StringMatching.hpp\n* TimeConversion.hpp\n* DBQueue.hpp\n* ResourceEvent.hpp\n* TimedEvent.hpp\n* WriterProxyData.hpp\n* ReaderProxyData.hpp\n* ParticipantProxyData.hpp\n* XML Parser API\n* UnitsParser.hpp\n* RTPSMessageGroup.hpp\n* RTPSMessageCreator.hpp\n* CDRMessage.hpp\n* StatefulPersistentReader.hpp\n* StatefulReader.hpp\n* StatelessPersistentReader.hpp\n* StatelessReader.hpp\n* PersistentWriter.hpp\n* StatefulPersistentWriter.hpp\n* StatefulWriter.hpp\n* StatelessPersistentWriter.hpp\n* StatelessWriter.hpp\n* logging.h\n* Exception.h\n* Cryptography.h\n* Authentication.h\n* AccessControl.h\n* SecurityException.h\n* ChangeForReader.hpp\n* ReaderLocator.hpp\n* ReaderProxy.hpp\n* ServerAttributes.hpp\n* TopicAttributes.hpp\n* TypeLookupService.hpp\n\nIf your project previously included any of these headers, you will need to modify your implementation.\nSince these headers are now private, you should replace their usage with public alternatives or refactor the related code to ensure it does not depend on private headers.\n\n### Step 7: Update API Methods\n\nThe table below contains the list of API changes, showing the previous methods and the corresponding new ones introduced in Fast DDS v3.\nThe new API methods achieve the same functionality, even though the signature of the method is different from the deprecated one.\n\n|        Deprecated methods           |             New methods                |\n|----------------------------------|-------------------------------------|\n| xmlparser::XMLProfileManager::library_settings(`LibrarySettingsAttributes`&) | DomainParticipantFactory::get_instance()->set_library_settings(const `LibrarySettings`&) |\n| fill_discovery_data_from_cdr_message(`ReaderProxyData`&, `MonitorServiceStatusData`&) |fill_discovery_data_from_cdr_message(`SubscriptionBuiltinTopicData`&, `MonitorServiceStatusData`&) |\n| fill_discovery_data_from_cdr_message(`WriterProxyData`&, `MonitorServiceStatusData`&) | fill_discovery_data_from_cdr_message(`PublicationBuiltinTopicData`&,`MonitorServiceStatusData`&) |\n| fill_discovery_data_from_cdr_message(`ParticipantProxyData`&, `MonitorServiceStatusData`&) | fill_discovery_data_from_cdr_message(`ParticipantBuiltinTopicData`&,`MonitorServiceStatusData`&) |\n| on_participant_discovery(`DomainParticipant`*, `ParticipantDiscoveryInfo`&&, bool) |on_participant_discovery(`DomainParticipant`*, `ParticipantDiscoveryStatus`, `ParticipantBuiltinTopicData`&, bool&) |\n| on_subscriber_discovery(`DomainParticipant`*, `ReaderDiscoveryInfo`&&, bool) | on_data_reader_discovery(`DomainParticipant`*, `ReaderDiscoveryStatus`, `SubscriptionBuiltinTopicData`&, bool&) |\n| on_publisher_discovery(`DomainParticipant`*, `WriterDiscoveryInfo`&&, bool) | on_data_writer_discovery(`DomainParticipant`*, `WriterDiscoveryStatus`, `PublicationBuiltinTopicData`&, bool&) |\n| onReaderDiscovery(`RTPSParticipant`*, `ReaderDiscoveryInfo`&&, bool) | on_reader_discovery(`RTPSParticipant`*,  `ReaderDiscoveryStatus`, `SubscriptionBuiltinTopicData`&, bool&) |\n| onWriterDiscovery(`RTPSParticipant`*, `WriterDiscoveryInfo`&&, bool) | on_writer_discovery(`RTPSParticipant`*, `WriterDiscoveryStatus`, `PublicationBuiltinTopicData`&, bool&) |\n| onParticipantDiscovery(`RTPSParticipant`*, `ParticipantDiscoveryInfo`&&, bool) | on_participant_discovery(`RTPSParticipant`*, `ParticipantDiscoveryStatus`, `ParticipantBuiltinTopicData`&, bool&) |\n| XMLProfileManager::loadXMLFile(string&) | DomainParticipantFactory::get_instance()->load_XML_profiles_file(string) |\n| XMLProfileManager::loadDefaultXMLFile() | load_profiles() |\n| XMLProfileManager::loadXMLFile(string) | load_XML_profiles_file(string&) |\n| XMLProfileManager::loadXMLString(const char*, size_t) | load_XML_profiles_string(const char*, size_t) |\n| XMLProfileManager::fillParticipantAttributes(const string&, `ParticipantAttributes`&, bool) | get_participant_qos_from_profile(string&, `DomainParticipantQos`&) |\n|DynamicTypeBuilder XMLProfileManager::getDynamicTypeByName(string&) | get_dynamic_type_builder_from_xml_by_name(string&, `DynamicTypeBuilder::_ref_type`&) |\n| XMLProfileManager::fillRequesterAttributes(string&, RequesterAttributes&) | get_requester_qos_from_profile(string&, RequesterQos&) |\n| XMLParser::getXMLThroughputController(`tinyxml2::XMLElement`*, `ThroughputControllerDescriptor`&, uint8_t) | XMLParser::getXMLFlowControllerDescriptorList(`tinyxml2::XMLElement`*, `FlowControllerDescriptorList`&, uint8_t) |\n| add_throughput_controller_descriptor_to_pparams(`FlowControllerSchedulerPolicy`, uint32_t, uint32_t) | add_flow_controller_descriptor_to_pparams(`FlowControllerSchedulerPolicy`, uint32_t, uint32_t) |\n| get_payload(uint32_t, `CacheChange_t`&) | get_payload(uint32_t, `SerializedPayload_t`&) |\n| release_payload(`CacheChange_t`&) | release_payload(`SerializedPayload_t`&) |\n| registerWriter(`RTPSWriter`*, const `TopicAttributes`&, const `WriterQos`&) |  register_writer(`RTPSWriter`*, cosnt `PublicationBuiltinTopicData`&) |\n| registerReader(`RTPSReader`*, `TopicAttributes`&, `ReaderQos`&) |  register_reader(`RTPSReader`*, const `SubscriptionBuiltinTopicData`&, const `ContentFilterProperty`*) |\n| updateWriter(`RTPSWriter`*, const `TopicAttributes`&, const `WriterQos`&) | update_writer(`RTPSWriter`*, const `WriterQos`&) |\n| updateReader(`RTPSReader`*, const `TopicAttributes`&, const `ReaderQos`&, const `ContentFilterProperty`*) | update_reader(`RTPSReader`*, const `ReaderQos`, const ContentFilterProperty*) |\n| getRTPSParticipantAttributes() | get_attributes() |\n| bool write(void*) | ReturnCode_t write(void*) |\n| bool write(void*, `WriteParams`&) | ReturnCode_t write(void*, `WriteParams`&) |\n| SenderResource::send(const octet*, uint32_t, `LocatorsIterator`*, `LocatorsIterator`*, const chrono::steady_clock::time_point&) | SenderResource::send(`vector<NetworkBuffer>`, uint32_t, `LocatorsIterator`*, `LocatorsIterator`*, const chrono::steady_clock::time_point&) |\n| RTPSMessageSenderInterface::send(`CDRMessage_t`*, chrono::steady_clock::time_point) | RTPSMessageSenderInterface::send(`vector<NetworkBuffer>`&, uint32_t&, chrono::steady_clock::time_point) |\n| createRTPSWriter(`RTPSParticipant`*, `EntityId_t`&, `WriterAttributes`&, `shared_ptr<IPayloadPool>`&, `shared_ptr<IChangePool>`&, `WriterHistory`*, `WriterListener`*) | createRTPSWriter(`RTPSParticipant`*, `WriterAttributes`&, `WriterHistory`*, `WriterListener`*) |\n| RTPSWriter::new_change(const `function<uint32_t()>& dataCdrSerializedSize`, `ChangeKind_t`, `InstanceHandle_t`) | WriterHistory::create_change(uint32_t, `ChangeKind_t`, `InstanceHandle_t`) |\n| RTPSWriter::new_change(`ChangeKind_t`, `InstanceHandle_t`) | WriterHistory::create_change(`ChangeKind_t`, `InstanceHandle_t`) |\n| RTPSWriter::release_change(`CacheChange_t`*) | WriterHistory::release_change(`CacheChange_t`*) |\n| RTPSWriter::remove_older_changes(unsigned int) | WriterHistory::remove_min_change() |\n| RTPSWriter::is_acked_by_all(const `CacheChange_t`*) | RTPSWriter::is_acked_by_all(const `SequenceNumber_t`&) |\n| RTPSWriter::updateAttributes(const `WriterAttributes`&) | RTPSWriter::update_attributes(const `WriterAttributes`&)|\n| RTPSWriter::getListener() | RTPSWriter::get_listener() |\n| RTPSWriter::isAsync() | RTPSWriter::is_async() |\n| WriterListener::onWriterMatched(`RTPSWriter`*,  `MatchingInfo`&) | WriterListener::on_writer_matched(`RTPSWriter`*, const `MatchingInfo`&) |\n| WriterListener::onWriterChangeReceivedByAll(`RTPSWriter`*,  `CacheChange_t`*) | WriterListener::on_writer_change_received_by_all(`RTPSWriter`*,`CacheChange_t`*) |\n| TypeLookupReplyListener::onWriterChangeReceivedByAll(`RTPSWriter`*, `CacheChange_t`*) | TypeLookupReplyListener::on_writer_change_received_by_all(`RTPSWriter`*, `CacheChange_t`*) |\n| RTPSReader::getListener() | RTPSReader::get_listener() |\n| RTPSReader::setListener() | RTPSReader::set_listener() |\n| RTPSReader::expectsInlineQos() | RTPSReader::expects_inline_qos() |\n| RTPSReader::isInCleanState() | RTPSReader::is_in_clean_state() |\n| RTPSReader::getHistory() | RTPSReader::get_history() |\n| RTPSReader::nextUnreadCache(`CacheChange_t`**, `WriterProxy` **) | RTPSReader::next_unread_cache() |\n| RTPSReader::nextUntakenCache(`CacheChange_t`**, `WriterProxy` **) | RTPSReader::next_untaken_cache() |\n| ReaderListener::onReaderMatched(`RTPSReader`*, `MatchingInfo`&) | ReaderListener::on_reader_matched(`RTPSReader`*, `MatchingInfo`&) |\n| ReaderListener::onNewCacheChangeAdded(`RTPSReader`*, const `CacheChange_t`* const) | ReaderListener::on_new_cache_change_added(`RTPSReader`*, cont `CacheChange_t`* const) |\n| TopicDataType::getSerializedSizeProvider(const void* const, `DataRepresentationId_t`) | TopicDataType::calculate_serialized_size(const void* const, `DataRepresentationId_t`) |\n| TopicDataType::createData() | TopicDataType::create_data() |\n| TopicDataType::deleteData(void*) | TopicDataType::delete_data(void*) |\n| TopicDataType::getKey(const void* const, `InstanceHand`*, bool) | TopicDataType::compute_key(const void* const, `InstanceHand`&, bool) |\n| TopicDataType::setName(const char*) | TopicDataType::set_name(const string&) |\n| char* TopicDataType::getName() | string& TopicDataType::get_name() |\n| TypeSupport::calculate_serialized_size_provider(const void* const, `DataRepresentationId_t`) | TypeSupport::calculate_serialized_size(const void* const, `DataRepresentationId_t`) |\n|   get_key(void, `InstanceHandle_t`*, bool) | compute_key(`SerializedPayload_t`&, `InstanceHandle_t`&, bool) |\n| DynamicPubSubType::createData() | DynamicPubSubType::create_data() |\n| DynamicPubSubType::deleteData(void*) | DynamicPubSubType::delete_data(void*) |\n| DynamicPubSubType::getKey(const void* const, `InstanceHand`*, bool) | DynamicPubSubType::compute_key(const void* const, `InstanceHand`&, bool) |\n| DynamicPubSubType::getSerializedSizeProvider(const void* const, `DataRepresentationId_t`) | DynamicPubSubType::calculate_serialized_size(const void* const, `DataRepresentationId_t`) |\n\nReview your code for any APIs marked with the `FASTDDS_DEPRECATED` and `FASTDDS_TODO_BEFORE` macros.\nNote that these deprecated APIs have been removed in Fast DDS v3.\nMake the necessary updates to your implementation to ensure compatibility with the new version.\n\n### Step 8: Update Structs, Enums, and Variables\n\nAs part of the Fast DDS migration, several structs, enums, and variables have been updated. You will need to modify your code to reflect these changes:\n\n1. Enum and Variable Changes:\n\n    * `DiscoveryProtocol_t` is now `DiscoveryProtocol`.\n    * Rename `initialHeartbeatDelay` to `initial_heartbeat_delay`.\n    * Rename `heartbeatPeriod` to `heartbeat_period`.\n    * Rename `nackResponseDelay` to `nack_response_delay`.\n    * Rename `nackSupressionDuration` to `nack_supression_duration`.\n    * Rename `heartbeatResponseDelay` to `heartbeat_response_delay`.\n    * Rename `initialAcknackDelay` to `initial_acknack_delay`.\n    * Rename `expectsInlineQos` to `expects_inline_qos`.\n    * Rename `m_typeSize` to `max_serialized_type_size`.\n    * Rename `m_isGetKeyDefined` to `is_compute_key_provided`.\n    * Rename `m_topicDataTypeName` to `topic_data_typename`.\n\n2. Extend Built-in Topics:\n\n    * `SubscriptionBuiltinTopicData` has been extended with additional fields to mimic those of `ReaderProxyData`.\n    * `PublicationBuiltinTopicData` has been extended with additional fields to mimic those of `WriterProxyData`.\n    * `ParticipantBuiltinTopicData` has been extended to include the product version and fields from `ParticipantProxyData`.\n\n3. Other Struct Changes:\n\n    * `SendBuffersAllocationAttributes` has a new attribute to define the allocation configuration of the `NetworkBuffers`.\n    * `TypeConsistencyQos` has been removed from `DataReader`, and the `TypeConsistencyEnforcementQosPolicy` and `DataRepresentationQosPolicy` have been added.\n\n### Step 9: Refactor Examples\n\nAll examples have been refactored to follow a consistent structure across the Fast DDS project.\nThis includes renaming files, restructuring classes, and updating the overall format.\nAdditionally, it is important to note that some examples have been removed, renamed, or had significant changes to their options and configurations.\nIf you have integrated any of these examples into your own implementation, carefully review the updated examples to ensure compatibility with your project.\n\nAll the examples have been refactored to follow the same structure:\n* File names, guards, and classes follow new format.\n* Detailed and well-formed README.md with example explanation.\n* Example structured in applications, stopped by `SIGTERM` signal.\n\n#### Hello World\nRefactor the HelloWorld example with the current new example format.\nIn this hello world example, the key changes are:\n* The XML profile is loaded from the environment (if defined), and the `--env` CLI option has been removed.\n* Add a subscriber implementing the waitsets mechanism.\n* Provide XML profiles examples targeting several scenarios (e.g., SampleConfig_Controller, Events, Multimedia).\n\n#### X-Types Examples\nIn this X-Types example, a type is defined at runtime on the publisher side using the Dynamic Types API.\nThe subscriber discovers the type, creates a reader for it, and prints the received data.\nThis example is type compatible with the Hello World example.\n\n#### Configuration\nIn the configuration example, the key changes are:\n* Included LargeData as an option (builtin transport argument).\n* Included all previous QoS examples:\n    * Deadline\n    * Disable positive ACKs\n    * Lifespan\n    * Liveliness\n    * Ownership (strength)\n    * Partitions\n\n#### Content Filter\nRefactor the ContentFilteresTopicExample example with the current new example format.\nIn this content filter example, the main changes are:\n* Added\toption to select filter type: Default, Custom, or None.\n* Customizable lower-bound and upper-bound options of the filter as arguments.\n    * For the Custom filter, they represent the maximum and minimum values of the message indexes that are filtered out through the filter.\n    * For the Default filter, they represent the maximum and minimum value message indexes that are read.\n\n#### Custom Payload Pool\nRefactor the CustomPayloadPoolExample example with the current new example format.\n\n#### Delivery Mechanisms\nIn this delivery mechanisms example, the key changes are:\n* Loans and data-sharing compatible: bounded types, final extensibility.\n* Loans mechanism for data management.\n* Option to select all delivery mechanisms.\n\n#### Discovery Server\nRefactor the DiscoveryServerExample example with the current new example format.\n\n#### Flow Controller\nRefactor the FlowControlExample example with the current new example format.\nIn this Flow Controller example, the key changes are:\n* Publishers continuously send samples. The user can set the number of samples to send.\n* User can set the following QoS and properties for the Flow Controller:\n    * Scheduler policy used by the flow controller.\n    * Maximum number of bytes to be sent to the network per period.\n    * Period of time in milliseconds during which the flow controller is allowed to send the maximum number of bytes per period.\n    * Property fastdds.sfc.priority.\n    * Property fastdds.sfc.bandwidth_reservation.\n\n#### Request-Reply\nRefactor the Request-Reply example with the current new example format.\n\n#### Static EDP Discovery\nRefactor the Static EDP Discovery example with the new example format.\n\n#### Security\nRefactor the SecureHelloWorld example with the current new example format.\n\n#### RTPS Entities\nRefactor the rtps/Registered example with the current new example format.\nThis RTPS example demonstrates a basic RTPS deployment.\nThe main change is that serialization and deserialization are done with overload methods from fastcdr.\n"
        },
        {
          "name": "VERSIONING.md",
          "type": "blob",
          "size": 0.486328125,
          "content": "Versioning policy declaration\n=============================\n\nStarting on v2.0.0, the version numbers for this library will adhere to the versioning policies defined by [Semantic Versioning](https://semver.org/).\n\nThis means that API breaks should only happen between major version changes.\nIf an ABI break is required, it should be done between minor versions, and it should be clearly stated on the release notes.\n\nA file with the changes included on each version can be found [here](versions.md)\n"
        },
        {
          "name": "build_qnx",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0283203125,
          "content": "fixes:\n  - \"src/Fast-DDS/::\"\n"
        },
        {
          "name": "colcon.pkg",
          "type": "blob",
          "size": 0.1513671875,
          "content": "{\n    \"name\": \"fastdds\",\n    \"type\": \"cmake\",\n    \"dependencies\" : [\"fastcdr\", \"FOONATHAN_MEMORY\", \"foonathan_memory_vendor\", \"googletest-distribution\"]\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastdds.repos",
          "type": "blob",
          "size": 0.4765625,
          "content": "repositories:\n    foonathan_memory_vendor:\n        type: git\n        url: https://github.com/eProsima/foonathan_memory_vendor.git\n        version: master\n    fastcdr:\n        type: git\n        url: https://github.com/eProsima/Fast-CDR.git\n        version: master\n    fastdds:\n        type: git\n        url: https://github.com/eProsima/Fast-DDS.git\n        version: master\n    fastddsgen:\n        type: git\n        url: https://github.com/eProsima/Fast-DDS-Gen.git\n        version: master\n"
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.xml",
          "type": "blob",
          "size": 1.56640625,
          "content": "<?xml version=\"1.0\"?>\n<?xml-model href=\"http://download.ros.org/schema/package_format3.xsd\" schematypens=\"http://www.w3.org/2001/XMLSchema\"?>\n<package format=\"3\">\n  <name>fastdds</name>\n  <version>3.1.0</version>\n  <description>\n  eProsima Fast DDS is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group). eProsima Fast DDS implements the RTPS (Real Time Publish Subscribe) protocol, which provides publisher-subscriber communications over unreliable transports such as UDP, as defined and maintained by the Object Management Group (OMG) consortium. RTPS is also the wire interoperability protocol defined for the Data Distribution Service (DDS) standard. eProsima Fast DDS expose an API to access directly the RTPS protocol, giving the user full access to the protocol internals.\n  </description>\n  <maintainer email=\"raulsanchezmateos@eprosima.com\">Raul Sanchez Mateos</maintainer>\n  <maintainer email=\"miguelcompany@eprosima.com\">Miguel Company</maintainer>\n  <license file=\"LICENSE\">Apache 2.0</license>\n\n  <url type=\"website\">https://www.eprosima.com/</url>\n  <url type=\"bugtracker\">https://github.com/eProsima/Fast-DDS/issues</url>\n  <url type=\"repository\">https://github.com/eProsima/Fast-DDS</url>\n\n  <build_depend>asio</build_depend>\n\n  <depend>fastcdr</depend>\n  <depend>foonathan_memory_vendor</depend>\n  <depend>libssl-dev</depend>\n  <depend>tinyxml2</depend>\n  <depend>python3</depend>\n\n  <buildtool_depend>cmake</buildtool_depend>\n\n  <doc_depend>doxygen</doc_depend>\n\n  <export>\n    <build_type>cmake</build_type>\n  </export>\n</package>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "roadmap.md",
          "type": "blob",
          "size": 2.82421875,
          "content": "# Fast DDS Roadmap\n\nThis section elaborates on proposed new features or tasks which are expected to be added to the product in the foreseeable future.\nThere should be no assumption of a commitment to deliver these features on specific dates or in the order given.\nThe development team will be doing their best to follow the proposed dates and priorities, but please bear in mind that plans to work on a given feature or task may be revised.\nAll information is provided as a general guidelines only, and this section may be revised to provide newer information at any time.\n\nDisclaimer:\n\n* This section has been last updated in November 2024.\n  Please take into account its content could be obsolete.\n\n## Short term\n\nThe following list of features are planned to be addressed in the short term, and incorporated into the following release of the product (v3.2.0):\n\n* Support creating a `DynamicTypeBuilder` from an IDL string\n* Consolidation of some [properties](https://fast-dds.docs.eprosima.com/en/latest/fastdds/property_policies/property_policies.html) into QoS policies\n* Transmission on discovery of all QoS policies\n* SHM permissions override\n* Ignore local endpoints configured at endpoint level\n\n## Medium term\n\nThe following list of features are planned to be addressed in the medium term, typically within the subsequent release(s) generated in the next **9 months** after next planned release:\n\n* Support for custom interface selection for statistics traffic\n* Full support for DDS X-TYPES assignability checks\n* ChainingTransport configuration through XML\n* Tier 1 support for QNX platforms\n* Tier 1 support for Android platforms\n* Full support for DESTINATION_ORDER QoS\n* Support DURABILITY_SERVICE QoS\n* Set default log level through XML\n\n## Long term\n\nThe following list of features are proposals regarding the longer-term evolution of the product even though development of these features has not yet been scheduled for a release in the near future.\nPlease feel free to contact us if you wish to get involved in the implementation or influence the roadmap.\n\n* Full DDS QOS compliance\n    * Support for TIME_BASED_FILTER QoS\n\t* Support for TRANSPORT_PRIORITY QoS\n\t* Support for READER_DATA_LIFECYCLE QoS\n\t* Support for LATENCY_BUDGET QoS\n\t* Support for PRESENTATION QoS\n* Full DDS API compliance\n* Batching (allow small samples to be grouped in a single datagram)\n* Allow user to inject system dependencies:\n    * Getting current timestamp\n    * Getting Host ID / process info / etc\n    * Query network interfaces\n    * Thread factory\n    * Security plugin factory\n* Allow user to configure when samples are acknowledged:\n    * When available on reader\n    * When processed (return_loan / take without loan)\n    * On demand (new API on DataReader)\n* New DEBUG log level\n* Compliance with DDS-TSN\n* Service aware DataWriter\n* Compliance with DDS-XML\n* Low bandwidth transports\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "valgrind.supp",
          "type": "blob",
          "size": 0.5458984375,
          "content": "{\n    <Ignore LD leak>\n    Memcheck:Leak\n    match-leak-kinds: reachable\n    fun:*alloc\n    ...\n    obj:*ld-*\n    ...\n}\n{\n    <Ignore temporally (Fedora 27) OpenSSL malloc>\n    Memcheck:Leak\n    fun:malloc\n    fun:CRYPTO_zalloc\n    ...\n    obj:*libcrypto*\n}\n{\n    <AtomicLoad>\n    Helgrind:Race\n    fun:load\n    fun:*atomic*load*memory_order\n}\n{\n    <AtomicLoad>\n    Helgrind:Race\n    fun:store\n    fun:*atomic*store*memory_order\n}\n{\n    <sem_open false positive depending of libc version>\n    Memcheck:Param\n    write(buf)\n    ...\n    fun:sem_open\n    ...\n}\n"
        },
        {
          "name": "versions.md",
          "type": "blob",
          "size": 34.56640625,
          "content": "Forthcoming\n-----------\n\n* Added implementation for:\n  * `DataWriter::get_matched_subscription_data()`\n  * `DataWriter::get_matched_subscriptions()`\n  * `DataReader::get_matched_publication_data()`\n  * `DataReader::get_matched_publications()`\n  * `DynamicTypeBuilderFactory::create_type_w_uri`\n* Added ``Extended Incompatible QoS`` feature for monitor service.\n* Machine UUID added to the Data(p) to check Participants in same host, instead of using GUIDs.\n* Windows ci example testing infrastructure and `hello world` example.\n* New property to configure the preferred key agreement algorithm.\n* Refactor benchmark example.\n\nVersion v3.1.0\n--------------\n\n* Allow `PERSISTENT_DURABILITY` behaving as `TRANSIENT_DURABILITY`. Fallback to `TRANSIENT_LOCAL_DURABILITY` if no persistence guid is set.\n* Fix DomainParticipantQos equality operator by using the new `DomainParticipantQos::compare_flow_controllers`.\n* Add new XML QoS overloads for ``DomainParticipant``, ``DataWriter`` and ``DataReader``:\n  * ``get_X_qos_from_xml`` (without profile name)\n  * ``get_X_qos_from_xml`` (profile name given)\n  * ``get_default_X_qos_from_xml``\n* Add complete support for dynamic network interfaces.\n\nVersion v3.0.0\n--------------\n\n* Rename project to `fastdds`.\n* Rename environment variable to `FASTDDS_DEFAULT_PROFILES_FILE` and rename default XML profiles file to `FASTDDS_DEFAULT_PROFILES`.\n* Remove API marked as deprecated.\n* Removed deprecated FastRTPS API tests.\n* Removed no longer supported `FASTRTPS_API_TESTS` CMake options.\n* RTPS layer APIs refactor:\n  * RTPSReader, ReaderListener, ReaderAttributes:\n    * Several methods that were meant for internal use have been removed from public API\n    * All public methods now have `snake_case` names\n    * All public attributes now have `snake_case` names\n  * RTPSWriter, WriterListener, WriterAttributes, WriterHistory:\n    * The responsibility of managing both the `CacheChange` and `Payload` pools has been moved to the `WriterHistory`.\n    * Several methods that were meant for internal use have been removed from public API\n    * All public methods now have `snake_case` names\n    * All public attributes now have `snake_case` names\n  * RTPSParticipant:\n    * Some methods changed to `snake_case`: `register_reader`, `register_writer`, `update_reader`, `update_writer`.\n\t* Register methods take a `TopicDescription` instead of `TopicAttributes`.\n\t* Update methods no longer take `TopicAttributes`.\n  * Endpoint creation fails if the `EntityId` is inconsistent with the topic kind.\n* Discovery callbacks refactor:\n  * on_participant_discovery now receives a `ParticipantDiscoveryStatus` and a `ParticipantBuiltinTopicData` instead of a `ParticipantDiscoveryInfo`\n  * on_data_reader_discovery now receives a `ReaderDiscoveryStatus` and a `SubscriptionBuiltinTopicData` instead of a `ReaderDiscoveryInfo`\n  * on_data_writer_discovery now receives a `WriterDiscoveryStatus` and a `PublicationBuiltinTopicData` instead of a `WriterDiscoveryInfo`\n* New methods to get local discovery information:\n  * `DataWriter::get_publication_builtin_topic_data`\n  * `DataReader::get_subscription_builtin_topic_data`\n* Public API that is no longer public:\n  * XML Parser API no longer public.\n  * ReaderProxyData\n  * ReaderDiscoveryInfo\n  * WriterProxyData\n  * WriterDiscoveryInfo\n  * ParticiantProxyData\n  * ParticiantDiscoveryInfo\n  * ParticipantAttributes\n  * ReplierAttributes\n  * RequesterAttributes\n  * PublisherAttributes\n  * SubscriberAttributes\n  * TopicAttributes\n  * All discovery implementation related API\n  * ProxyPool\n  * Semaphore\n  * MessageReceiver\n  * BuiltinProtocols\n  * Liveliness implementation related API\n  * shared_mutex\n  * StringMatching\n  * TimeConversion\n  * TypeLookupService\n  * DBQueue\n  * UnitsParser\n  * ReaderLocator\n  * ReaderProxy\n  * ChangeForReader\n  * ServerAttributes\n* Public API headers .h have been renamed to .hpp\n* Added create participant methods that use environment XML profile for participant configuration.\n* New TypeObjectRegistry class to register/query TypeObjects/TypeIdentifiers.\n* New TypeObjectUtils class providing API to build and register TypeObjects/TypeIdentifiers.\n* Refactor Dynamic Language Binding API according to OMG XTypes v1.3 specification.\n* Refactor ReturnCode complying with OMG DDS specification.\n* Calling `DataReader::return_loan` returns `ReturnCode_t::RETCODE_OK` both for empty sequences and for sequences that were not loaned.\n* Refactor examples:\n  * Hello world example with wait-sets and environment XML profiles.\n  * X-Types example with dynamic type discovery and Hello world example compatibility.\n  * Configuration example that condenses multiple QoS examples. Multiple configurations allowed through argument parsing.\n  * Custom content filter example with lower and upper bounds for data based on the index.\n  * Custom payload pool example that uses a user-defined payload pool instead of the default\n  * Delivery mechanisms example with SHM, UDP, TCP, data-sharing and intra-process mechanisms.\n  * Discovery server example.\n  * Flow Controller example with `FlowControllersQos` and property settings.\n  * Request-reply example to showcase RPC paradigms over Fast DDS.\n  * Security example with environment XML profiles.\n  * Static EDP discovery example to avoid EDP meta-traffic.\n  * Topic instances example, compatible with _ShapesDemo_ app.\n  * RTPS example to show the creation of entities in the RTPS layer.\n* Removed `TypeConsistencyQos` from DataReader, and included `TypeConsistencyEnforcementQosPolicy` and `DataRepresentationQosPolicy`\n* Added new `flow_controller_descriptor_list` XML configuration, remove `ThroughtputController`.\n* Migrate `#define`s within `BuiltinEndpoints.hpp` to namespaced `constexpr` variables.\n* Make `StdoutErrConsumer` the default log consumer.\n* IPayloadPool refactor:\n  * `payload_owner` moved from `CacheChange_t` to `SerializedPayload_t`.\n  * `SerializedPayload_t` copies are now forbidden.\n  * Refactor of `get_payload` methods.\n* Use `PID_DOMAIN_ID` during PDP.\n* Creation of RTPS messages refactor:\n  * New Gather-send method is now used by default, avoiding an extra copy during the creation of the RTPS message.\n  * New attribute in `SendBuffersAllocationAttributes` to configure allocation of `NetworkBuffer` vector.\n  * `SenderResource` and Transport APIs now receive a collection of `NetworkBuffer` on their `send` method.\n* Migrate fastrtps namespace to fastdds\n* Migrate fastrtps `ResourceManagement` API from `rtps/resources` to `rtps/attributes`.\n* `const` qualify all data related inputs in DataWriter APIs\n* New `DomainParticipantExtendedQos` that includes both `DomainId` and `DomainParticipantQos` (extends `DomainParticipantFactory` API).\n* Make Blackbox tests not include any private API.\n* Remove all the private API include from Blackbox tests.\n* Discovery Server refactor:\n  * Clients and Servers no longer need a known GUID to connect between them.\n  * Servers are now configured specifying a LocatorList, instead of a RemoteServerAttributes list.\n  * Servers connect through a mesh topology. For a new server to join the topology, it must be connected to any server in it.\n  * Servers only redirect discovery information of their direct clients.\n  * Remote Discovery servers connection list can now be updated and modified at runtime without restrictions.\n  * Fast DDS CLI has been updated to allow the creation of servers without GUID.\n  * Servers are responsible of answering TypeLookupRequests of others servers when working with X-Types.\n  * Backup server is not compatible with X-Types.\n* Refactor in XML Parser to return DynamicTypeBuilder instead of DynamicType\n* Setting vendor_id in the received CacheChange_t for Data and DataFrag.\n* Added new DynamicData to JSON serializer (`json_serialize`).\n* Added new DynamicType to IDL serializer (`idl_serialize`).\n* DDS implementation of `eprosima::fastdds::Time_t` moved to `eprosima::fastdds::dds::Time_t`.\n* `TopicDataType::auto_fill_type_information` has been removed in favor of `fastdds.type_propagation` participant property.\n* Add new custom pid PID_PRODUCT_VERSION.\n* SHM locator kind is now linked to Fast DDS' major version.\n\nVersion 2.14.0\n--------------\n\n* Added authentication handshake properties.\n* Added methods OpenOutputChannels and CloseOutputChannels to TransportInterface with LocatorSelectorEntry argument.\n* Added `netmask_filter`, `allowlist` and `blocklist` transport configuration options.\n* Added extra configuration options for the builitin transports.\n* Limit the amount of listening ports for TCP servers to 1.\n\nVersion 2.13.0\n--------------\n\n* Added monitor service feature.\n* Enable configuration of thread setting for all threads.\n* Added the possibility to define a listening port equal to 0 in TCP Transport\n* Added support for TCP to Fast DDS CLI and environment variable\n* Enable Discovery Server example through TCP.\n* Define a discovery server' super client by environment variable.\n* Added the possibility to define interfaces in the whitelist by interface name.\n* Added configuration of builtin transports through DomainParticipantQos, environment variable and XML.\n* Enable support for DataRepresentationQos to select the CDR encoding.\n\nVersion 2.12.0\n--------------\n\n* Added participant property to configure SHM transport metatraffic behavior.\n  No metatraffic over SHM transport by default.\n* Exposed custom payload pool on DDS endpoints declaration\n* Processing environment variables on XML text\n* Upgrade to support Fast CDR v2.0.0.\n  Default encoding is XCDRv1 to maintain interoperability with previous Fast DDS versions.\n  Some concerns:\n    - Data type source code generated with Fast DDS-Gen v2 should be regenerated using Fast DDS-Gen v3.\n    - **API break**. Changed a `MEMBER_INVALID` identifier from a `#define` to a `constexpr`.\n      Although this is not a new major version, using a `#define` is a bad conduct which was decided to be changed.\n      Note that new `constexpr` is inside namespace `eprosima::fastdds::types`.\n\nVersion 2.11.0\n--------------\n\n* Added Participant ignore local endpoints feature.\n* Remove `FASTDDS_STATIC` CMake option.\n  Please, use `BUILD_SHARED_LIBS=OFF` instead.\n* Fixed exported symbols on ContentFilteredTopic (ABI break)\n* Deprecated the DDS:Crypto:AES-GCM-GMAC plugin configuration through the DomainParticipant PropertyPolicyQos (security vulnerability).\n* `DomainParticipantListener::on_participant_discovery` changed behavior (fix API break in 2.10.0).\n* Included XML schema for static discovery profile configuration.\n* Extend DynamicDataHelper API providing `print` overload with `std::ostream` parameter (API extension in Dynamic Types).\n* TypeLookup Service configuration through XML.\n\nVersion 2.10.1\n--------------\n\n* Added `ignore_participant` implementation.\n\nVersion 2.10.0\n--------------\n\n* Enabled secure communications on Discovery Server (ABI break on RTPS layer)\n* Added non-standard DataWriterListener callback `on_unacknowledged_sample_removed` (API extension on DDS layer).\n* Added `RTPSWriter::has_been_delivered` virtual method (ABI break on RTPS layer).\n* Refactor `StatefulWriter::get_disable_positive_acks` as virtual method of `RTPSWriter` (ABI break on RTPS layer).\n* Network headers made private (ABI break on RTPS layer).\n* Added ignore RTPS entity API in RTPSParticipant (ABI break on RTPS layer).\n* Overload `PDP::removeWriterProxyData` and `PDP::removeReaderProxyData` (ABI break on RTPS layer).\n* Overload RTPS discovery callbacks in RTPSParticipantListener (ABI break on RTPS layer).\n* Overload DDS discovery callbacks in DomainParticipantListener (ABI break on DDS layer).\n* Added on_incompatible_type to RTPS listeners (ABI break on RTPS layer).\n* Added support for QNX 7.1 build.\n\nVersion 2.9.0\n-------------\n\n* Default memory management policy set to `PREALLOCATED_WITH_REALLOC_MEMORY_MODE` (behaviour change)\n* Statistics metrics are only calculated/accumulated when their corresponding DataWriter is enabled (behaviour change)\n* Added new log macros `EPROSIMA_LOG_INFO`, `EPROSIMA_LOG_WARNING` and `EPROSIMA_LOG_ERROR`, and change all old macros `logInfo`, `logWarning`, and `logError` in the project.\n* Added `ENABLE_OLD_LOG_MACROS` CMake option to support disabling the compilation of old log macros `logInfo`, `logWarning`, and `logError`.\n* FASTDDS_STATISTICS build option set to ON by default\n* Added XML profile validation option as a CLI new verb task: `\"fastdds xml validate <xml_file(s)_path>\"`. Added tests due to this new feature.\n\nVersion 2.8.0\n-------------\n\n* Added API get the WAN address of TCPv4 transport descriptors (API extension)\n* Support `propagate` attribute for Properties in PropertyQoSPolicies so they could be\n  set by user and sent in PDP\n* Added possibility to configure Ownership and Ownership Strength QoS Policies from XML profiles file\n* Added Server Name Indication (SNI) support for TLS-TCP communication\n* Changes to allow running tests on Android emulator or device\n* Added configuration settings for announcing locators on external LANs (ABI break)\n\nVersion 2.7.1\n-------------\n\n* ReadCondition implementation according to DDS version 1.4 standard document\n* Added a new CMake option to allow users to force the use of our third party shared_mutex\n\nVersion 2.7.0\n-------------\n\n* Implementation of DataWriter methods write_w_timestamp, register_instance_w_timestamp,\n  unregister_instance_w_timestamp, and dispose_w_timestamp (ABI break)\n* Support of `SampleRejectedStatus` in DDS API (API extensions on RTPS layer)\n* Implementation of DomainParticipant method find_topic\n* Include Server Name Indication (SNI) empty API (ABI break on transport layer)\n* CacheChange_t destructor made virtual (ABI break on RTPS layer)\n* Added DDS APIs for ReadCondition (API extension)\n* Added bulk notification interface to RTPS reader listener (API extension)\n* Refactor of auxiliary utils class DBQueue (ABI break)\n* Added configuration data for external locators feature (ABI break)\n\nVersion 2.6.1\n-------------\n\n* Writer side content filter.\n* Implementation for DataWriter::get_key_value.\n* Implementation for DataReader::lookup_instance.\n* Support of `SampleLostStatus` in DDS API.\n\nVersion 2.6.0\n-------------\n\n* New TransportInterface and NetworkFactory API to allow updating the network interfaces at runtime (ABI breaks on RTPS\n  and transport layers)\n* Removed dll export for constructors and destructors of factory created entities (breaks ABI)\n* Allow modifying the remote server locator in runtime.\n* Add physical information in DATA[p] using properties\n* Extension of `DISCOVERY_TOPIC` to include physical information about the discovered entity (ABI break)\n* Added methods getting `fastdds::Time_t` as parameters instead of `fastdds::rtps::Time_t` (API extension, API\n  deprecations).\n* Changed signature of eprosima::fastdds::dds::DataWriter::dispose_w_timestamp (ABI break).\n* Added method getting `std::vector<InstanceHandle_t>&` instead of `std::vector<InstanceHandle_t*>&` (API extension, API\n  deprecations).\n* Added RTPS APIs for content filter discovery information (API extension)\n* Added RTPS APIs for endpoint discovery (API extension)\n* Added RTPS APIs for on_sample_lost feature (API extension)\n\nVersion 2.5.0\n-------------\n\n* Allow zero-valued InstanceHandle_t (ABI break)\n* Allow concatenation of transports (new exported symbols + ABI breaks on transport layer)\n* New DomainParticipantFactory API for loading XML profiles from a string data buffer (extends DomainParticipantFactory\n  API, implies ABI break)\n* New DataWriter API allowing to wait for acknowledgements for a specific instance (extends DataWriter API, implies ABI\n  break)\n* Generation of GUID on entity creation (ABI break on RTPS layer)\n* New DataReader history with correct implementation of instance_state and view_state (ABI break on RTPS layer)\n* Support for PKCS#11 format URIs for private keys\n\nVersion 2.4.0\n-------------\n\n* Implementation of WaitSet, GuardCondition and StatusCondition.\n* Flow controllers (ABI breaks on RTPS layer).\n* Resolve DNS names on locators.\n* Allow addition of discovery servers in runtime (ABI breaks on RTPS layer).\n* Allow setting custom folder for data sharing files.\n* Allow setting persistence guid with static discovery.\n\nVersion 2.3.0\n-------------\n\n* New Fast DDS Statistics module\n* New discovery \"super-client\" kind\n* Added methods to get sending locators for writers and listening locators for readers (ABI break)\n* Added support for unique network flows\n* Added reception_timestamp to `eprosima::fastdds::dds::SampleInfo` (ABI break)\n* Added `eprosima::fastdds::dds::DataReader::get_unread_count` (ABI break)\n* Refactor `eprosima::fastdds::type::ReturnCode_t`. Now the constant global objects are no longer available (ABI break)\n* Performance tests refactored to use DDS-PIM high-level API\n\nVersion 2.2.0\n-------------\n\n* TopicDataType interface extended (ABI break)\n* Upgrade to Quality Level 1\n* New DataWriter API for loaning samples (extends DataWriter API, implies ABI break)\n* New template classes for loanable sequences\n* Added DataReader read and take APIs (implies ABI break)\n* Complete DDS traditional C++ API (implies ABI breaks)\n* Data sharing delivery (ABI breaks)\n\nVersion 2.1.0\n-------------\n\nThis minor release is API compatible with the previous minor release, but introduces **ABI breaks** on\ntwo of the three public APIs:\n* Methods and attributes have been added on several classes of the DDS-PIM high-level API, so indexes of\n  symbols on dynamic libraries may have changed\n* Methods and attributes have been added on several classes of the RTPS low-level API, so indexes of\n  symbols on dynamic libraries may have changed\n* Old Fast-RTPS high-level API remains ABI compatible.\n\nUsers of the RTPS low-level API should also be aware of the following **API deprecations**:\n* History::reserve_Cache has been deprecated\n  * Methods RTPSWriter::new_change or RTPSReader::reserveCache should be used instead\n* History::release_Cache has been deprecated\n  * Methods RTPSWriter::release_change or RTPSReader::releaseCache should be used instead\n\nThis release adds the follwing **features**:\n* Support persistence for large data\n* Added support for `on_requested_incompatible_qos` and `on_offered_incompatible_qos`\n* SKIP_DEFAULT_XML environment variable\n* Added FORCE value to THIRDPARTY cmake options\n* New log consumer (StdOutErrConsumer)\n* Added methods to get qos defined in XML Profile\n* Support for persistence on TRANSIENT_LOCAL\n\nIt also includes the following **improvements**:\n* Internal refactor for intra-process performance boost\n* Allow usage of foonathan/memory library built without debug tool\n* Large data support on performance tests\n* Reduced flakiness of several tests\n\nSome important **bugfixes** are also included:\n* Fixed behavior of several DDS API methods\n* Fixed interoperability issues with RTI connext\n* Fixed DLL export of some methods\n* Avoid redefinition of compiler defined macros\n* Fixed some intra-process related segmentation faults and deadlocks\n* Fixed large data payload protection issues on intra-process\n* Fixed C++17 and VS 2019 warnings\n* Fixed linker problems on some platforms\n* Fixed transient local retransmission after participant drop\n* Fixed assertion failure on persistent writers\n\nVersion 2.0.2\n-------------\n\nThis release includes the following **improvements**:\n\n* Improve QNX support\n* Security improvements\n* Fast DDS Quality Declaration (QL 2)\n* Large traffic reduction when using Discovery Server (up to 85-90% for large deployments)\n* Configuration of Clients of Discovery Server using an environment variable\n* A CLI for Fast DDS:\n  * This can be used to launch a discovery server\n  * Clean SHM directories with one command\n* Shared memory transport enabled by default\n* Solved edge-case interoperability issue with CycloneDDS\n\nVersion 2.0.1\n-------------\n\nThis release includes the following bug fixes:\n\n* Fixed sending GAPs to late joiners\n* Fixed asserting liveliness on data reception\n* Avoid calling OpenSSL_add_all_algorithms when not required\n\nOther improvements:\n\n* Fixing warnings\n\nVersion 2.0.0\n-------------\n\nThis release has the following **API breaks**:\n\n* eClock API, which was deprecated on v1.9.1, has been removed\n* `eprosima::fastdds::rtps::RTPSDomain::createParticipant` methods now have an additional first argument `domain_id`\n* Data member `domainId` has been removed from `eprosima::fastdds::rtps::RTPSParticipantAttributes` and added to\n  `eprosima::fastdds::ParticipantAttributes`\n\nUsers should also be aware of the following **deprecation announcement**:\n\n* All classes inside the namespace `eprosima::fastdds` should be considered deprecated.\n  Equivalent functionality is offered through namespace `eprosima::fastdds`.\n* Namespaces beneath `eprosima::fastdds` are not included in this deprecation, i.e.\n  `eprosima::fastdds::rtps` can still be used)\n\nThis release adds the following **features**:\n\n* Added support for register/unregister/dispose instance\n* Added DDS compliant API. This new API exposes all the functionality of the Publisher-Subscriber Fast RTPS API\n  adhering to the `Data Distribution Service (DDS) version 1.4 specification <https://www.omg.org/spec/DDS/1.4>`_\n* Added Security Logging Plugin (contributed by Cannonical Ltd.)\n* Bump to FastCDR v1.0.14\n\nIt also includes the following bug fixes and improvements:\n\n* Support for OpenSSL 1.1.1d and higher\n* Support for latest versions of gtest\n* Support for FreeBSD\n* Fault tolerance improvements to Shared Memory transport\n* Fixed segfault when no network interfaces are detected\n* Correctly ignoring length of `PID_SENTINEL` on parameter list\n* Improved traffic on PDP simple mode\n* Reduced CPU and memory usage\n\nVersion 1.10.0\n--------------\n\nThis release adds the following features:\n\n* New built-in :ref:`comm-transports-shm`\n* Transport API refactored to support locator iterators\n* Added subscriber API to retrieve info of first non-taken sample\n* Added parameters to fully avoid dynamic allocations\n* History of built-in endpoints can be configured\n* Bump to FastCDR v1.0.13.\n* Bump to Fast-RTPS-Gen v1.0.4.\n* Require CMake 3.5 but use policies from 3.13\n\nIt also includes the following bug fixes and improvements:\n\n* Fixed alignment on parameter lists\n* Fixed error sending more than 256 fragments.\n* Fix handling of STRICT_REALTIME.\n* Fixed submessage_size calculation on last data_frag.\n* Solved an issue when recreating a publishing participant with the same GUID.\n* Solved an issue where a publisher could block on write for a long time when a new\n  subscriber (late joiner) is matched, if the publisher had already sent a large number\n  of messages.\n* Correctly handling the case where lifespan expires at the same time on several samples.\n* Solved some issues regarding liveliness on writers with no readers.\n* Correctly removing changes from histories on keyed topics.\n* Not reusing cache change when sample does not fit.\n* Fixed custom wait_until methods when time is in the past.\n* Several data races and ABBA locks fixed.\n* Reduced CPU and memory usage.\n* Reduced flakiness of liveliness tests.\n* Allow for more use cases on performance tests.\n\nSeveral bug fixes on discovery server:\n\n* Fixed local host communications.\n* Correctly trimming server history.\n* Fixed backup server operation.\n* Fixed timing issues.\n\nVersion 1.9.4\n-------------\n\nThis release adds the following features:\n\n* Intra-process delivery mechanism is now active by default.\n* Synchronous writers are now allowed to send fragments.\n* New memory mode DYNAMIC_RESERVE on history pool.\n* Performance tests can now be run on Windows and Mac.\n* XML profiles for requester and replier.\n\nIt also includes the following bug fixes and improvements:\n\n* Bump to FastCDR v1.0.12.\n* Bump to Fast-RTPS-Gen v1.0.3.\n* Fixed deadlock between PDP and StatefulReader.\n* Improved CPU usage and allocations on timed events management.\n* Performance improvements on reliable writers.\n* Fixing bugs when Intra-process delivery is activated.\n* Reducing dynamic allocations and memory footprint.\n* Improvements and fixes on performance tests.\n* Other minor bug fixes and improvements.\n\nVersion 1.9.3\n-------------\n\nThis release adds the following features:\n\n* Participant discovery filtering flags.\n* Intra-process delivery mechanism opt-in.\n\nIt also includes the following bug fixes and improvements:\n\n* Bump to Fast-RTPS-Gen v1.0.2.\n* Bring back compatibility with XTypes 1.1 on PID_TYPE_CONSISTENCY.\n* Ensure correct alignment when reading a parameter list.\n* Add CHECK_DOCUMENTATION *cmake* option.\n* EntityId_t and GuidPrefix_t have now their own header files.\n* Fix potential race conditions and deadlocks.\n* Improve the case where *check_acked_status* is called between reader matching process and its acknack reception.\n* RTPSMessageGroup_t instances now use the thread-local storage.\n* FragmentedChangePitStop manager removed.\n* Remove the data fragments vector on CacheChange_t.\n* Only call find_package for TinyXML2 if third-party options are off\n* Allow XMLProfileManager methods to not show error log messages if a profile is not found.\n\n\nVersion 1.9.2\n-------------\n\nThis release includes the following feature:\n\n* Multiple initial PDP announcements.\n* Flag to avoid builtin multicast.\n\nIt also adds the following bug fixes and improvements:\n\n* Bump to Fast-RTPS-Gen v1.0.1.\n* Bump to IDL-Parser v1.0.1.\n\nVersion 1.9.1\n-------------\n\nThis release includes the following features:\n\n* Fast-RTPS-Gen is now an independent project.\n* Header **eClock.h** is now marked as deprecated.\n\nIt also adds the following bug fixes and improvements:\n\n* Bump to FastCDR v1.0.11.\n* Installation from sources documentation fixed.\n* Fixed assertion on WriterProxy.\n* Fixed potential fall through while parsing Parameters.\n* Removed deprecated guards causing compilation errors in some 32 bits platforms.\n* *addTOCDRMessage* method is now exported in the DLL, fixing issues related with Parameters' constructors.\n* Improve windows performance by avoiding usage of *_Cnd_timedwait* method.\n* Fixed reported communication issues by sending multicast through *localhost* too.\n* Fixed potential race conditions and deadlocks.\n* Eliminating use of *acceptMsgDirectTo*.\n* Discovery Server framework reconnect/recreate strategy.\n* Removed unused folders.\n* Restored subscriber API.\n* SequenceNumber_t improvements.\n* Added STRICT_REALTIME *cmake* option.\n* SubscriberHistory improvements.\n* Assertion of participant liveliness by receiving RTPS messages from the remote participant.\n* Fixed error while setting next deadline event in *create_new_change_with_params*.\n\nVersion 1.9.0\n-------------\n\nThis release includes the following features:\n\n* Partial implementation of allocation QoS.\n* Implementation of Discovery Server.\n* Implementation of non-blocking calls.\n\nIt also adds the following bug fixes and improvements:\n\n* Added sliding window to BitmapRange.\n* Modified default behavior for unknown writers.\n* A `Flush()` method was added to the logger to ensure all info is logged.\n* A test for loading `Duration_t` from XML was added.\n* Optimized WLP when removing local writers.\n* Some liveliness tests were updated so that they are more stable on Windows.\n* A fix was added to `CMakeLists.txt` for installing static libraries.\n* A fix was added to performance tests so that they can run on the RT kernel.\n* Fix for race condition on built-in protocols creation.\n* Fix for setting *nullptr* in a *fixed_string*.\n* Fix for v1.8.1 not building with -DBUILD_JAVA=ON.\n* Fix for GAP messages not being sent in some cases.\n* Fix for coverity report.\n* Several memory issues fixes.\n* `fastrtps.repos` file was updated.\n* Documentation for building with Colcon was added.\n* Change CMake configuration directory if INSTALLER_PLATFORM is set.\n* IDL sub-module updated to current version.\n\nVersion 1.8.4\n-------------\n\nThis release adds the following **feature**:\n\n* XML profiles for `requester` and `replier`\n\nIt also has the following **important bug fixes**:\n\n* Solved an issue when recreating a publishing participant with the same GUID (either on purpose or by chance)\n* Solved an issue where a publisher could block on `write` for a long time when, after a large number of samples\n  have been sent, a new subscriber is matched.\n\nVersion 1.8.3\n-------------\n\nThis release adds the following bug fixes and improvements:\n\n* Fix serialization of TypeConsistencyEnforcementQosPolicy.\n* Bump to Fast-RTPS-Gen v1.0.2.\n* Bump to IDL-Parser v1.0.1.\n\nVersion 1.8.2\n-------------\n\nThis release includes the following features:\n\n* Modified unknown writers default behavior.\n* Multiple initial PDP announcements.\n* Flag to avoid builtin multicast.\n* *STRICT_REALTIME* compilation flag.\n\nIt also adds the following bug fixes and improvements:\n\n* Fix for setting `nullptr` in a fixed string.\n* Fix for not sending GAP in several cases.\n* Solve *Coverity* report issues.\n* Fix issue of *fastrtpsgen* failing to open *IDL.g4* file.\n* Fix unnamed lock in *AESGCMGMAC_KeyFactory.cpp*.\n* Improve *XMLProfiles* example.\n* Multicast is now sent through *localhost* too.\n* *BitmapRange* now implements sliding window.\n* Improve *SequenceNumber_t* struct.\n* Participant's liveliness is now asserted when receiving any RTPS message.\n* Fix leak on RemoteParticipantLeaseDuration.\n* Modified default values to improve behavior in *Wi-Fi* scenarios.\n* *SubscriberHistory* improvements.\n* Removed use of *acceptMsgDirectTo*.\n* *WLP* improvements.\n\nVersion 1.8.1\n-------------\n\nThis release includes the following features:\n\n* Implementation of :ref:`livelinessqospolicy` QoS.\n\nIt also adds the following bug fixes and improvements:\n\n* Fix for get_change on history, which was causing issues during discovery.\n* Fix for announcement of participant state, which was sending ParticipantBuiltinData twice.\n* Fix for closing multicast UDP channel.\n* Fix for race conditions in SubscriberHistory, UDPTransportInterface and StatefulReader.\n* Fix for lroundl error on Windows in Time_t.\n* CDR & IDL submodules update.\n* Use of java 1.8 or greater for fastrtpsgen.jar generation.\n\nVersion 1.8.0\n-------------\n\nThis release included the following features:\n\n* Implementation of IDL 4.2.\n* Implementation of :ref:`deadlineqospolicy` QoS.\n* Implementation of :ref:`lifespanqospolicy` QoS.\n* Implementation of :ref:`disablepositiveacksqospolicy` QoS.\n* Secure sockets on TCP transport (:ref:`TLS`).\n\nIt also adds the following improvements and bug fixes:\n\n* Real-time improvements: non-blocking write calls for best-effort writers, addition of fixed size strings,\n  fixed size bitmaps, resource limited vectors, etc.\n* Duration parameters now use nanoseconds.\n* Configuration of participant mutation tries.\n* Automatic calculation of the port when a value of 0 is received on the endpoint custom locators.\n* Non-local addresses are now filtered from whitelists.\n* Optimization of check for acked status for stateful writers.\n* Linked libs are now not exposed when the target is a shared lib.\n* Limitation on the domain ID has been added.\n* UDP non-blocking send is now optional and configurable via XML.\n* Fix for non-deterministic tests.\n* Fix for ReaderProxy history being reloaded incorrectly in some cases.\n* Fix for RTPS domain hostid being potentially not unique.\n* Fix for participants with different lease expiration times failing to reconnect.\n\n**Known issues**\n\n* When using TPC transport, sometimes callbacks are not invoked when removing a participant due to a bug in ASIO.\n\nVersion 1.7.2\n-------------\n\nThis release fixes an important bug:\n\n* Allocation limits on subscribers with a KEEP_LAST QoS was taken from resource limits configuration\n  and didn't take history depth into account.\n\nIt also has the following improvements:\n\n* Vendor FindThreads.cmake from CMake 3.14 release candidate to help with sanitizers.\n* Fixed format of gradle file.\n\nSome other minor bugs and performance improvements.\n\nVersion 1.7.1\n-------------\n\nThis release included the following features:\n\n* LogFileConsumer added to the logging system.\n* Handle FASTRTPS_DEFAULT_PROFILES_FILE environment variable indicating the default profiles XML file.\n* XML parser made more restrictive and with better error messages.\n\nIt also fixes some important bugs:\n* Fixed discovery issues related to the selected network interfaces on Windows.\n* Improved discovery times.\n* Workaround ASIO issue with multicast on QNX systems.\n* Improved TCP transport performance.\n* Improved handling of key-only data submessages.\n\nSome other minor bugs and performance improvements.\n\n**KNOWN ISSUES**\n\n* Allocation limits on subscribers with a KEEP_LAST QoS is taken from resource limits configuration\n  and doesn't take history depth into account.\n\nVersion 1.7.0\n-------------\n\nThis release included the following features:\n\n* :ref:`comm-transports-tcp`.\n* :ref:`dynamic-types`.\n* Security 1.1 compliance.\n\nAlso bug fixing, allocation and performance improvements.\n\nVersion 1.6.0\n-------------\n\nThis release included the following features:\n\n* :ref:`persistence`.\n* Security access control plugin API and builtin :ref:`access-permissions` plugin.\n\nAlso bug fixing.\n\nVersion 1.5.0\n-------------\n\nThis release included the following features:\n\n* Configuration of Fast RTPS entities through XML profiles.\n* Added heartbeat piggyback support.\n\nAlso bug fixing.\n\nVersion 1.4.0\n-------------\n\nThis release included the following:\n\n* Added secure communications.\n* Removed all Boost dependencies. Fast RTPS is not using Boost libraries anymore.\n* Added compatibility with Android.\n* Bug fixing.\n\nVersion 1.3.1\n-------------\n\nThis release included the following:\n\n* New examples that illustrate how to tweak Fast RTPS towards different applications.\n* Improved support for embedded Linux.\n* Bug fixing.\n\nVersion 1.3.0\n-------------\n\nThis release introduced several new features:\n\n* Unbound Arrays support: Now you can send variable size data arrays.\n* Extended Fragmentation Configuration: It allows you to setup a Message/Fragment max size different to the standard\n  64Kb limit.\n* Improved logging system: Get even more introspection about the status of your communications system.\n* Static Discovery: Use XML to map your network and keep discovery traffic to a minimum.\n* Stability and performance improvements: A new iteration of our built-in performance tests will make benchmarking\n  easier for you.\n* ReadTheDocs Support: We improved our documentation format and now our installation and user manuals are available\n  online on ReadTheDocs.\n\nVersion 1.2.0\n-------------\n\nThis release introduced two important new features:\n\n* Flow Controllers: A mechanism to control how you use the available bandwidth avoiding data bursts.\n  The controllers allow you to specify the maximum amount of data to be sent in a specific period of time.\n  This is very useful when you are sending large messages requiring fragmentation.\n* Discovery Listeners: Now the user can subscribe to the discovery information to know the entities present in the\n  network (Topics, Publishers & Subscribers) dynamically without prior knowledge of the system.\n  This enables the creation of generic tools to inspect your system.\n\nBut there is more:\n\n* Full ROS2 Support: Fast RTPS is used by ROS2, the upcoming release of the Robot Operating System (ROS).\n* Better documentation: More content and examples.\n* Improved performance.\n* Bug fixing.\n"
        }
      ]
    }
  ]
}