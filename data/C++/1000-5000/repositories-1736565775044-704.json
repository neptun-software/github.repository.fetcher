{
  "metadata": {
    "timestamp": 1736565775044,
    "page": 704,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NVIDIA/libcudacxx",
      "stars": 2294,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.666015625,
          "content": "samples/trie\nsamples/trie.exe\n.vscode/*\nsamples/pg996.txt\nsamples/1342-0.txt\nsamples/2600-0.txt\nsamples/2701-0.txt\nsamples/35-0.txt\nsamples/84-0.txt\nsamples/8800.txt\nsamples/pg1727.txt\nsamples/pg55.txt\nsamples/pg6130.txt\nsamples/log.txt\nsamples/trie.exp\nsamples/trie.lib\nsamples/trie.txt\nsamples/out.txt\nsamples/temp.txt\nsamples/trie.cu.txt\nsamples/trie_mt.exe\nsamples/trie.obj\nsamples/trie_mt.obj\nsamples/trie_st.exe\nsamples/trie_st.obj\nsamples/trial\nsamples/trie_st\nsamples/trie_mt\nsamples/rtc\nsamples/benchmark\n*.pyc\nbuild-*/\nbuild/\n.p4config\ncompare_git_to_perforce.bash\n*.log\n.clangd/\n.cache\nOutput/\ncompile_commands.json\n*~\n*lit_test_times.txt\nllvm-project/\ncompile_flags.txt\n"
        },
        {
          "name": ".upstream-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.025390625,
          "content": "docs/releases/changelog.md"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.5810546875,
          "content": "# 3.15 is the minimum.\n# 3.17 for NVC++.\n# 3.18 for C++17 + CUDA.\ncmake_minimum_required(VERSION 3.15)\n\n# Determine whether libcudacxx is the top-level project or included into\n# another project via add_subdirectory().\nif (\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_LIST_DIR}\")\n  set(LIBCUDACXX_TOPLEVEL_PROJECT ON)\nelse()\n  set(LIBCUDACXX_TOPLEVEL_PROJECT OFF)\nendif()\n\nset(PACKAGE_NAME libcudacxx)\nset(PACKAGE_VERSION 11.0)\nset(PACKAGE_STRING \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\nproject(libcudacxx NONE)\n\ninclude(cmake/libcudacxxInstallRules.cmake)\n\nif (NOT LIBCUDACXX_TOPLEVEL_PROJECT)\n  include(cmake/libcudacxxAddSubdir.cmake)\n  return()\nendif()\n\n# Note that this currently returns and skips the rest of the build\n# system.\noption(libcudacxx_ENABLE_CMAKE_TESTS \"Enable ctest-based testing.\" OFF)\nif (libcudacxx_ENABLE_CMAKE_TESTS)\n  # Might be able to lower this, but would need to do some testing:\n  cmake_minimum_required(VERSION 3.20.1)\n  include(CTest)\n  enable_testing() # Must be called in root CMakeLists.txt\n  add_subdirectory(cmake/test/)\n  return()\nendif()\n\nset(CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\")\nset(LLVM_PATH \"${CMAKE_SOURCE_DIR}\" CACHE STRING \"\" FORCE)\n\n# Configuration options.\noption(LIBCUDACXX_ENABLE_CUDA \"Enable the CUDA language support.\" ON)\nset(_libcudacxx_enable_static_library OFF)\nif (\"${CMAKE_CUDA_COMPILER_ID}\" STREQUAL \"NVCXX\")\n  set(_libcudacxx_enable_static_library ON)\nendif ()\noption(LIBCUDACXX_ENABLE_STATIC_LIBRARY \"Enable building the full C++ stdlib static library build.\"\n    ${_libcudacxx_enable_static_library})\noption(LIBCUDACXX_ENABLE_LIBCUDACXX_TESTS \"Enable libcu++ tests.\" ON)\noption(LIBCUDACXX_ENABLE_LIBCXX_TESTS \"Enable upstream libc++ tests.\" OFF)\noption(LIBCUDACXX_ENABLE_LIBCXXABI_TESTS \"Enable upstream libc++abi tests.\" OFF)\noption(LIBCUDACXX_ENABLE_LIBUNWIND_TESTS \"Enable upstream libunwind tests.\" OFF)\n\n# This must be done before any languages are enabled:\nif (LIBCUDACXX_TOPLEVEL_PROJECT)\n  include(cmake/libcudacxxCompilerHacks.cmake)\nendif()\n\n# This must appear after our Compiler Hacks or else CMake will delete the cache\n# and reconfigure from scratch.\n# This must also appear before the installation rules, as it is required by the\n# GNUInstallDirs CMake module.\nenable_language(CXX)\n\nif (LIBCUDACXX_ENABLE_CUDA)\n  enable_language(CUDA)\nendif ()\n\nset(_libcudacxx_enable_upstream_tests OFF)\nif (LIBCUDACXX_ENABLE_LIBCXX_TESTS\n    OR LIBCUDACXX_ENABLE_LIBCXXABI_TESTS\n    OR LIBCUDACXX_ENABLE_LIBUNWIND_TESTS)\n  set(_libcudacxx_enable_upstream_tests ON)\nendif ()\n\nset(_libcudacxx_enable_tests OFF)\nif (_libcudacxx_enable_upstream_tests OR LIBCUDACXX_ENABLE_LIBCUDACXX_TESTS)\n  set(_libcudacxx_enable_tests ON)\nendif ()\n\nif (LIBCUDACXX_ENABLE_STATIC_LIBRARY OR _libcudacxx_enable_upstream_tests)\n  enable_language(C ASM)\nendif ()\n\nif (_libcudacxx_enable_tests OR LIBCUDACXX_ENABLE_STATIC_LIBRARY)\n  include(FindPythonInterp)\n  if (NOT PYTHONINTERP_FOUND)\n    message(FATAL_ERROR\n      \"Failed to find python interpreter, which is required for running tests and \"\n      \"building a libcu++ static library.\")\n  endif ()\nendif ()\n\n# Determine the host triple to avoid invoking `${CXX} -dumpmachine`.\ninclude(GetHostTriple)\nget_host_triple(LLVM_INFERRED_HOST_TRIPLE)\n\nset(LLVM_HOST_TRIPLE \"${LLVM_INFERRED_HOST_TRIPLE}\" CACHE STRING\n    \"Host on which LLVM binaries will run\")\n\n# By default, we target the host, but this can be overridden at CMake\n# invocation time.\nset(LLVM_DEFAULT_TARGET_TRIPLE \"${LLVM_HOST_TRIPLE}\" CACHE STRING\n  \"Default target for which LLVM will generate code.\" )\nset(TARGET_TRIPLE \"${LLVM_DEFAULT_TARGET_TRIPLE}\")\nmessage(STATUS \"LLVM host triple: ${LLVM_HOST_TRIPLE}\")\nmessage(STATUS \"LLVM default target triple: ${LLVM_DEFAULT_TARGET_TRIPLE}\")\n\n# Determine which of the components we need to add to the build.\n# By default, none.\n# These variables are overriden later on if they are determined to be needed.\nset(_libcudacxx_add_libcxx OFF)\nset(_libcudacxx_add_libcxxabi OFF)\nset(_libcudacxx_add_libunwind OFF)\n\n# Configure options needed to build the standalone static library.\nif (LIBCUDACXX_ENABLE_STATIC_LIBRARY)\n  if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"NVHPC\")\n    option(LIBUNWIND_ENABLE_PEDANTIC OFF)\n    add_definitions(-D__USER_LABEL_PREFIX__=)\n  endif()\n\n  option(LIBUNWIND_ENABLE_STATIC \"\" ON)\n  option(LIBUNWIND_ENABLE_SHARED \"\" OFF)\n\n  #set(HAVE_LIBUNWIND ON CACHE BOOL \"\")\n  option(LIBCXXABI_USE_LLVM_UNWINDER \"\" ON)\n  option(LIBCXXABI_ENABLE_STATIC \"\" ON)\n  option(LIBCXXABI_ENABLE_SHARED \"\" OFF)\n  option(LIBCXXABI_ENABLE_STATIC_UNWINDER \"\" ON)\n  option(LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY \"\" ON)\n\n  option(LIBCXX_ENABLE_STATIC \"\" ON)\n  option(LIBCXX_ENABLE_STATIC_ABI_LIBRARY \"\" ON)\n  option(LIBCXX_ENABLE_SHARED \"\" OFF)\n  option(LIBCXX_ENABLE_SHARED_ABI_LIBRARY \"\" OFF)\n  option(LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY \"\" ON)\n\n  if (NOT \"${LIBCXX_CXX_ABI}\" STREQUAL \"\" AND NOT \"${LIBCXX_CXX_ABI}\" STREQUAL \"libcxxabi\")\n    unset(LIBCXX_CXX_ABI CACHE)\n    message(FATAL_ERROR\n      \"When building a standalone libcu++ static library, manually setting the \"\n      \"C++ ABI library is not supported. Please unset the LIBCXX_CXX_ABI variable.\")\n  endif ()\n\n  set(LIBCXX_CXX_ABI \"libcxxabi\" CACHE STRING \"\")\n  set(LIBCXX_CXX_ABI_INCLUDE_PATHS \"${CMAKE_CURRENT_SOURCE_DIR}/libcxxabi/include\" CACHE STRING \"\")\n  set(LIBCXX_CXX_ABI_INTREE 1)\n\n  set(_libcudacxx_add_libcxx ON)\n  set(_libcudacxx_add_libcxxabi ON)\n  set(_libcudacxx_add_libunwind ON)\nendif ()\n\nif (\"${LIBCXX_CXX_ABI}\" STREQUAL \"\")\n  set(LIBCXX_CXX_ABI \"libstdc++\" CACHE STRING \"\")\nendif ()\n\n\n# Configure options needed to run tests.\nif (_libcudacxx_enable_tests)\n  enable_testing()\n\n  set(LIT_EXTRA_ARGS \"\" CACHE STRING \"Use for additional options (e.g. -j12)\")\n\n  find_program(LLVM_DEFAULT_EXTERNAL_LIT lit)\n  set(LLVM_LIT_ARGS \"-sv ${LIT_EXTRA_ARGS}\")\n\n  if (LIBCUDACXX_ENABLE_LIBCUDACXX_TESTS)\n    set(LIBCUDACXX_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})\n\n    add_subdirectory(test)\n  endif ()\n\n  if (LIBCUDACXX_ENABLE_LIBCXX_TESTS)\n    option(LIBCXX_INCLUDE_TESTS \"\" ON)\n\n    set(_libcudacxx_add_libcxx ON)\n  endif ()\n\n  if (LIBCUDACXX_ENABLE_LIBCXXABI_TESTS)\n    message(FATAL_ERROR \"Running libc++abi tests is not supported yet.\")\n\n    set(_libcudacxx_add_libcxxabi ON)\n  endif ()\n\n  if (LIBCUDACXX_ENABLE_LIBUNWIND_TESTS)\n    message(FATAL_ERROR \"Running libunwind tests is not supported yet.\")\n\n    set(_libcudacxx_add_libunwind ON)\n  endif ()\nendif ()\n\n# Configure the common options for the subdirections and add them.\nif (_libcudacxx_add_libunwind)\n  add_subdirectory(libunwind)\nendif ()\n\nif (_libcudacxx_add_libcxxabi)\n  add_subdirectory(libcxxabi)\nendif ()\n\nif (_libcudacxx_add_libcxx)\n  option(LIBCXX_INCLUDE_BENCHMARKS \"\" OFF)\n  option(LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY \"\" OFF)\n\n  set(LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB ON)\n\n  add_subdirectory(libcxx)\nendif ()\n\n# Add a global check rule now that all subdirectories have been traversed\n# and we know the total set of lit testsuites.\nif (_libcudacxx_enable_tests)\n  include(AddLLVM)\n\n  get_property(LLVM_LIT_TESTSUITES GLOBAL PROPERTY LLVM_LIT_TESTSUITES)\n  get_property(LLVM_LIT_PARAMS GLOBAL PROPERTY LLVM_LIT_PARAMS)\n  get_property(LLVM_LIT_DEPENDS GLOBAL PROPERTY LLVM_LIT_DEPENDS)\n  get_property(LLVM_LIT_EXTRA_ARGS GLOBAL PROPERTY LLVM_LIT_EXTRA_ARGS)\n  get_property(LLVM_ADDITIONAL_TEST_TARGETS\n               GLOBAL PROPERTY LLVM_ADDITIONAL_TEST_TARGETS)\n  get_property(LLVM_ADDITIONAL_TEST_DEPENDS\n               GLOBAL PROPERTY LLVM_ADDITIONAL_TEST_DEPENDS)\n  add_lit_target(check-all\n    \"Running all regression tests\"\n    ${LLVM_LIT_TESTSUITES}\n    PARAMS ${LLVM_LIT_PARAMS}\n    DEPENDS ${LLVM_LIT_DEPENDS} ${LLVM_ADDITIONAL_TEST_TARGETS}\n    ARGS ${LLVM_LIT_EXTRA_ARGS}\n  )\nendif ()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.03515625,
          "content": "docs/contributing/code_of_conduct.md"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 27.4228515625,
          "content": "==============================================================================\nlibcu++ is under the Apache License v2.0 with LLVM Exceptions:\n==============================================================================\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n    1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n    2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n    3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n    4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n    5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n    6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n    7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n    8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n    9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n    END OF TERMS AND CONDITIONS\n\n    APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n---- LLVM Exceptions to the Apache 2.0 License ----\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into an Object form of such source code, you\nmay redistribute such embedded portions in such Object form without complying\nwith the conditions of Sections 4(a), 4(b) and 4(d) of the License.\n\nIn addition, if you combine or link compiled forms of this Software with\nsoftware that is licensed under the GPLv2 (\"Combined Software\") and if a\ncourt of competent jurisdiction determines that the patent provision (Section\n3), the indemnity provision (Section 9) or other Section of the License\nconflicts with the conditions of the GPLv2, you may retroactively and\nprospectively choose to deem waived or otherwise exclude such Section(s) of\nthe License, but only in their entirety and only with respect to the Combined\nSoftware.\n\n==============================================================================\nSoftware from third parties included in the LLVM Project:\n==============================================================================\nThe LLVM Project contains third party software which is under different license\nterms. All such code will be identified clearly using at least one of two\nmechanisms:\n1) It will be in a separate directory tree with its own `LICENSE.txt` or\n   `LICENSE` file at the top containing the specific license and restrictions\n   which apply to that software, or\n2) It will contain specific license and restriction terms at the top of every\n   file.\n\n==============================================================================\nLegacy LLVM License (https://llvm.org/docs/DeveloperPolicy.html#legacy):\n==============================================================================\n\nThe libc++ library is dual licensed under both the University of Illinois\n\"BSD-Like\" license and the MIT license.  As a user of this code you may choose\nto use it under either license.  As a contributor, you agree to allow your code\nto be used under both.\n\nFull text of the relevant licenses is included below.\n\n==============================================================================\n\nUniversity of Illinois/NCSA\nOpen Source License\n\nCopyright (c) 2009-2019 by the contributors listed in CREDITS.TXT\n\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n==============================================================================\n\nCopyright (c) 2009-2014 by the contributors listed in CREDITS.TXT\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n==============================================================================\n\nSome libcudacxx components are covered by the below license. Each source file\nindicates which license it is under.\n\n==============================================================================\n\nNVIDIA SOFTWARE LICENSE\n\nThis license is a legal agreement between you and NVIDIA Corporation (\"NVIDIA\") and governs your use of the NVIDIA/CUDA C++ Library software and materials provided hereunder (“SOFTWARE”).\n\nThis license can be accepted only by an adult of legal age of majority in the country in which the SOFTWARE is used. If you are under the legal age of majority, you must ask your parent or legal guardian to consent to this license. By taking delivery of the SOFTWARE, you affirm that you have reached the legal age of majority, you accept the terms of this license, and you take legal and financial responsibility for the actions of your permitted users.\n\nYou agree to use the SOFTWARE only for purposes that are permitted by (a) this license, and (b) any applicable law, regulation or generally accepted practices or guidelines in the relevant jurisdictions.\n\n1. LICENSE. Subject to the terms of this license, NVIDIA grants you a non-exclusive limited license to: (a) install and use the SOFTWARE, and (b) distribute the SOFTWARE subject to the distribution requirements described in this license. NVIDIA reserves all rights, title and interest in and to the SOFTWARE not expressly granted to you under this license.\n\n2. DISTRIBUTION REQUIREMENTS. These are the distribution requirements for you to exercise the distribution grant:\na.\tThe terms under which you distribute the SOFTWARE must be consistent with the terms of this license, including (without limitation) terms relating to the license grant and license restrictions and protection of NVIDIA’s intellectual property rights.\nb.\tYou agree to notify NVIDIA in writing of any known or suspected distribution or use of the SOFTWARE not in compliance with the requirements of this license, and to enforce the terms of your agreements with respect to distributed SOFTWARE.\n\n3. LIMITATIONS. Your license to use the SOFTWARE is restricted as follows:\na.\tThe SOFTWARE is licensed for you to develop applications only for use in systems with NVIDIA GPUs.\nb.\tYou may not reverse engineer, decompile or disassemble, or remove copyright or other proprietary notices from any portion of the SOFTWARE or copies of the SOFTWARE.\nc.\tYou may not modify or create derivative works of any portion of the SOFTWARE.\nd.\tYou may not bypass, disable, or circumvent any technical measure, encryption, security, digital rights management or authentication mechanism in the SOFTWARE.\ne.\tYou may not use the SOFTWARE in any manner that would cause it to become subject to an open source software license. As examples, licenses that require as a condition of use, modification, and/or distribution that the SOFTWARE be (i) disclosed or distributed in source code form; (ii) licensed for the purpose of making derivative works; or (iii) redistributable at no charge.\nf.\tUnless you have an agreement with NVIDIA for this purpose, you may not use the SOFTWARE with any system or application where the use or failure of the system or application can reasonably be expected to threaten or result in personal injury, death, or catastrophic loss. Examples include use in avionics, navigation, military, medical, life support or other life critical applications. NVIDIA does not design, test or manufacture the SOFTWARE for these critical uses and NVIDIA shall not be liable to you or any third party, in whole or in part, for any claims or damages arising from such uses.\ng.\tYou agree to defend, indemnify and hold harmless NVIDIA and its affiliates, and their respective employees, contractors, agents, officers and directors, from and against any and all claims, damages, obligations, losses, liabilities, costs or debt, fines, restitutions and expenses (including but not limited to attorney’s fees and costs incident to establishing the right of indemnification) arising out of or related to use of the SOFTWARE outside of the scope of this Agreement, or not in compliance with its terms.\n\n4. PRE-RELEASE. SOFTWARE versions identified as alpha, beta, preview, early access or otherwise as pre-release may not be fully functional, may contain errors or design flaws, and may have reduced or different security, privacy, availability, and reliability standards relative to commercial versions of NVIDIA software and materials. You may use a pre-release SOFTWARE version at your own risk, understanding that these versions are not intended for use in production or business-critical systems.\n\n5. OWNERSHIP. The SOFTWARE and the related intellectual property rights therein are and will remain the sole and exclusive property of NVIDIA or its licensors. The SOFTWARE is copyrighted and protected by the laws of the United States and other countries, and international treaty provisions. NVIDIA may make changes to the SOFTWARE, at any time without notice, but is not obligated to support or update the SOFTWARE.\n\n6. COMPONENTS UNDER OTHER LICENSES. The SOFTWARE may include NVIDIA or third-party components with separate legal notices or terms as may be described in proprietary notices accompanying the SOFTWARE. If and to the extent there is a conflict between the terms in this license and the license terms associated with a component, the license terms associated with the components control only to the extent necessary to resolve the conflict.\n\n7. FEEDBACK. You may, but don’t have to, provide to NVIDIA any Feedback. “Feedback” means any suggestions, bug fixes, enhancements, modifications, feature requests or other feedback regarding the SOFTWARE. For any Feedback that you voluntarily provide, you hereby grant NVIDIA and its affiliates a perpetual, non-exclusive, worldwide, irrevocable license to use, reproduce, modify, license, sublicense (through multiple tiers of sublicensees), and distribute (through multiple tiers of distributors) the Feedback without the payment of any royalties or fees to you. NVIDIA will use Feedback at its choice.\n\n8. NO WARRANTIES. THE SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY EXPRESS OR IMPLIED WARRANTY OF ANY KIND INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. NVIDIA DOES NOT WARRANT THAT THE SOFTWARE WILL MEET YOUR REQUIREMENTS OR THAT THE OPERATION THEREOF WILL BE UNINTERRUPTED OR ERROR-FREE, OR THAT ALL ERRORS WILL BE CORRECTED.\n\n9. LIMITATIONS OF LIABILITY. TO THE MAXIMUM EXTENT PERMITTED BY LAW, NVIDIA AND ITS AFFILIATES SHALL NOT BE LIABLE FOR ANY SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, OR ANY LOST PROFITS, PROJECT DELAYS, LOSS OF USE, LOSS OF DATA OR LOSS OF GOODWILL, OR THE COSTS OF PROCURING SUBSTITUTE PRODUCTS, ARISING OUT OF OR IN CONNECTION WITH THIS LICENSE OR THE USE OR PERFORMANCE OF THE SOFTWARE, WHETHER SUCH LIABILITY ARISES FROM ANY CLAIM BASED UPON BREACH OF CONTRACT, BREACH OF WARRANTY, TORT (INCLUDING NEGLIGENCE), PRODUCT LIABILITY OR ANY OTHER CAUSE OF ACTION OR THEORY OF LIABILITY, EVEN IF NVIDIA HAS PREVIOUSLY BEEN ADVISED OF, OR COULD REASONABLY HAVE FORESEEN, THE POSSIBILITY OF SUCH DAMAGES. IN NO EVENT WILL NVIDIA’S AND ITS AFFILIATES TOTAL CUMULATIVE LIABILITY UNDER OR ARISING OUT OF THIS LICENSE EXCEED US$10.00. THE NATURE OF THE LIABILITY OR THE NUMBER OF CLAIMS OR SUITS SHALL NOT ENLARGE OR EXTEND THIS LIMIT.\n\n10. TERMINATION. Your rights under this license will terminate automatically without notice from NVIDIA if you fail to comply with any term and condition of this license or if you commence or participate in any legal proceeding against NVIDIA with respect to the SOFTWARE. NVIDIA may terminate this license with advance written notice to you if NVIDIA decides to no longer provide the SOFTWARE in a country or, in NVIDIA’s sole discretion, the continued use of it is no longer commercially viable. Upon any termination of this license, you agree to promptly discontinue use of the SOFTWARE and destroy all copies in your possession or control. Your prior distributions in accordance with this license are not affected by the termination of this license. All provisions of this license will survive termination, except for the license granted to you.\n\n11. APPLICABLE LAW. This license will be governed in all respects by the laws of the United States and of the State of Delaware as those laws are applied to contracts entered into and performed entirely within Delaware by Delaware residents, without regard to the conflicts of laws principles. The United Nations Convention on Contracts for the International Sale of Goods is specifically disclaimed. You agree to all terms of this Agreement in the English language. The state or federal courts residing in Santa Clara County, California shall have exclusive jurisdiction over any dispute or claim arising out of this license. Notwithstanding this, you agree that NVIDIA shall still be allowed to apply for injunctive remedies or an equivalent type of urgent legal relief in any jurisdiction.\n\n12. NO ASSIGNMENT. This license and your rights and obligations thereunder may not be assigned by you by any means or operation of law without NVIDIA’s permission. Any attempted assignment not approved by NVIDIA in writing shall be void and of no effect.\n\n13. EXPORT. The SOFTWARE is subject to United States export laws and regulations. You agree that you will not ship, transfer or export the SOFTWARE into any country, or use the SOFTWARE in any manner, prohibited by the United States Bureau of Industry and Security or economic sanctions regulations administered by the U.S. Department of Treasury’s Office of Foreign Assets Control (OFAC), or any applicable export laws, restrictions or regulations. These laws include restrictions on destinations, end users and end use. By accepting this license, you confirm that you are not a resident or citizen of any country currently embargoed by the U.S. and that you are not otherwise prohibited from receiving the SOFTWARE.\n\n14. GOVERNMENT USE. The SOFTWARE has been developed entirely at private expense and is “commercial items” consisting of “commercial computer software” and “commercial computer software documentation” provided with RESTRICTED RIGHTS. Use, duplication or disclosure by the U.S. Government or a U.S. Government subcontractor is subject to the restrictions in this license pursuant to DFARS 227.7202-3(a) or as set forth in subparagraphs (b)(1) and (2) of the Commercial Computer Software - Restricted Rights clause at FAR 52.227-19, as applicable. Contractor/manufacturer is NVIDIA, 2788 San Tomas Expressway, Santa Clara, CA 95051.\n\n15. ENTIRE AGREEMENT. This license is the final, complete and exclusive agreement between the parties relating to the subject matter of this license and supersedes all prior or contemporaneous understandings and agreements relating to this subject matter, whether oral or written. If any court of competent jurisdiction determines that any provision of this license is illegal, invalid or unenforceable, the remaining provisions will remain in full force and effect. This license may only be modified in a writing signed by an authorized representative of each party.\n\n(v. August 20, 2021)\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.0166015625,
          "content": "docs/overview.md\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "environments",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcxx",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcxxabi",
          "type": "tree",
          "content": null
        },
        {
          "name": "libunwind",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "blob",
          "size": 0.01953125,
          "content": ".upstream-tests/test"
        },
        {
          "name": "utils",
          "type": "blob",
          "size": 0.0205078125,
          "content": ".upstream-tests/utils"
        }
      ]
    }
  ]
}