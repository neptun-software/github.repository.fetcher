{
  "metadata": {
    "timestamp": 1736565907101,
    "page": 872,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AcademySoftwareFoundation/OpenImageIO",
      "stars": 2008,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.73046875,
          "content": "Language:        Cpp\nBasedOnStyle:  WebKit\n\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: true\n#AlignConsecutiveAssignments: Consecutive\n#AlignConsecutiveBitFields: Consecutive\nAlignConsecutiveDeclarations: false\n#AlignConsecutiveDeclarations: None\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: TopLevel\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: WebKit\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:   \n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentExternBlock: NoIndent\nIndentPPDirectives: AfterHash\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 3\nNamespaceIndentation: Inner\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 40\nPenaltyBreakBeforeFirstCallParameter: 100\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 75\nPenaltyReturnTypeOnItsOwnLine: 50\nPointerAlignment: Left\nReflowComments:  false\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        c++17\nStatementMacros: \n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseTab:          Never\n#...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.388671875,
          "content": "Checks:          '-*,clang-analyzer-security*'\nWarningsAsErrors: ''\nHeaderFilterRegex: '(OpenImageIO/[a-zA-Z0-9_]+\\.h)|(imageio)|(oiio)|(iv/)|(_pvt\\.h)'\nAnalyzeTemporaryDtors: false\nUser:            lg\nCheckOptions:\n  - key:            modernize-use-nullptr.NullMacros\n    value:          'NULL'\n  - key:            modernize-use-emplace.SmartPointers\n    value:          'OIIO::intrusive_ptr'\n...\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 1.4375,
          "content": "# Reformatting via clang-format (part 1) (#2059)\n5e76177f6850a8d04c544dc98128bcdfe55ca40a\n\n# clang-format stage 2: src/libutil (#2064)\n1a5b7aa00dd34883a8829875ee05c55b2a1f6736\n\n# clang-format stage 3 -- src/*.imageio/* (#2065)\n22e1af2ff0caa2c9aa31c0d7a69eb7762c04302d\n\n# clang-format of src/libtexture and src/libOpenImageIO (#2067)\n400e2340cf12ae84792f9a0146426b6022474dc9\n\n# clang-format, final-ish update (#2069)\n5af338158ad47fc84e7b0d03086fece04e0e2d24\n\n# Adjustments from clang-format update\n3e106c35845715875c3b3ce7b1621cb62ea41f0d\n\n# clang-format fixes (#2137)\ne536411711367ed7309ca884ebc9de4cea4d0da0\nc31816192691562e96b4ebc10dd7e5fd2e9c801b\n\n# Minor formatting changes in ustring with new clang-format (#2574)\n9e911bddf275206867643d0009f0bd7b9a20e463\n9fa2a5d42465870ae370afe5e3298433b2ecb56c\n\n# Fix broken clang-format test (#2627)\n7e5b841a80ed63b38f6d343889de615ef8cc4316\n\n# Adjustments from clang-format update with clang 8\ne83809b77e4d895dbf48fb6c2b5fb914a5f8eb06\n\n# Touch up formatting with clang-format\nf701a76b745b6ddba41c77b24a1ea7e1f48ae0b4\n\n# clang-format: Adjust alignment of line continuation backslashes (#2664)\n742173e39588e07cf43cbe7b49dd22d624a48388\nd8810c5365ea88e2b1bce6155b7b495c18f2f9bc\n\n# style: update our formatting standard to clang-format 17.0 and C++17 (#4096)\nc618d45e13dcc382fb07a948be84b8074d1ed481\nb88b82ffe9b3c4fcf04bf17bacc4ee77b2d1ed92\n\n# style: Turn on clang-format for ivmain.cpp (#4382)\n55872131ada91e0fa3b8bc4519e335b352d284df\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2958984375,
          "content": "*~\n*.bak\nbranches/\nbuild/\ndist/\next/\n.idea\n.vscode\n.cproject\n.project\n.DS_Store\n*.pyc\n_coverage/\n\n# Exclude test files I tend to leave around at the top level. The leading\n# slash ensures that files with these extensions within subdirectories are not\n# ignored.\n/*.exr\n/*.tif\n/*.jpg\n/*.jxl\n/*.tx\n/*.log\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 4.78125,
          "content": "# This file establishes email equivalences so we can resolve what look like\n# multiple authors, but actually are the same author who has used multiple\n# emails over the course of their involvement with the project.\n#\n# The format is any of the following:\n#     <CANONICAL-EMAIL> <alternate-email>\n#     CANONICAL-NAME <CANONICAL-EMAIL> <alternate-email>\n#     CANONICAL-NAME <CANONICAL-EMAIL> alternate-name <alternate-email>\n#\n# You can check for duplicates with this command:\n#     git shortlog -sne --all\n# That command (and others) will use this file to collapse the duplicates.\n#\n# If you see any duplicates we don't account for here, or if you look at your\n# own entry here and want a different name or email to be your canonical one\n# (we may not have guessed correctly and matched your preferences), please\n# file a PR with the edits to this file.\n\nAlejandro Conty <aconty@imageworks.com> aconty <aconty@gmail.com>\nAlejandro Conty <aconty@imageworks.com> Alejandro Conty <aconty@gmail.com>\nAnton Dukhovnikov <antond@wetafx.co.nz> Anton Dukhovnikov <131838425+antond-weta@users.noreply.github.com>\nBrecht Van Lommel <brecht@blender.org> <brecht@solidangle.com>\nBrecht Van Lommel <brecht@blender.org> Brecht Van Lommel <brechtvanlommel@gmail.com>\nBrecht Van Lommel <brecht@blender.org> brechtvanlommel@gmail.com <brechtvanlommel@gmail.com>\nChris Kulla <ckulla@gmail.com> <ckulla@imageworks.com>\nChris Kulla <ckulla@gmail.com> <fpsunflower@users.noreply.github.com>\nChris Kulla <ckulla@gmail.com> Christopher Kulla <ckulla@gmail.com>\nChris Kulla <ckulla@gmail.com> fpsunflower <ckulla@gmail.com>\nClaire Foster <aka.c42f@gmail.com> <chris42f@gmail.com>\nClément Champetier <cl.champetier@gmail.com> Clement Champetier <cnt@mikrosimage.eu>\nClifford Stein <cstein@imageworks.com> Cliff Stein <clifford.stein@gmail.com> \nClifford Stein <cstein@imageworks.com> cmstein <cstein@imageworks.com> \nDan Wexler <danwexler@gmail.com> Dan Wexler <wex@flarg.com>\nDan Wexler <danwexler@gmail.com> Dan Wexler <wex@the11ers.com>\nEdgar Velazquez-Armendariz <eva5@cs.cornell.edu> Edgar Velázquez-Armendáriz <edgarv@users.noreply.github.com>\nFabien Castan <fabcastan@gmail.com> Fabien Castan <fabien.castan@free.fr>\nFabien Servant <55734626+servantf@users.noreply.github.com> Fabien Servant @ TCS <100348063+servantftechnicolor@users.noreply.github.com>\nFrédéric Devernay <frederic.devernay@m4x.org> Frédéric Devernay <devernay@users.noreply.github.com>\nHarry Mallon <harry.mallon@codex.online> Harry Mallon <1816667+hjmallon@users.noreply.github.com>\nHenri Fousse <henri.fousse@free.fr> darkhorse64 <henri.fousse@free.fr>\nJesse Yurkovich <jesse.y@gmail.com> Jesse Y <jesse.y@gmail.com>\nLarry Gritz <lg@larrygritz.com> <larrygritz@gmail.com>\nLarry Gritz <lg@larrygritz.com> lgritz <lg@larrygritz.com>\nLeszek Godlewski <ineqvation@gmail.com> Leszek Godlewski <lg@inequation.org>\nlmarz <main@lmarz.org> lmarz <37630820+lmarz@users.noreply.github.com>\nMark Boorer <markboo99@gmail.com> Mark Boorer <mkj@dneg.com>\nMark Boorer <markboo99@gmail.com> Shootfast <markboo99@gmail.com>\nMark Visser <mjmvisser@gmail.com> Mark Visser <mvisser@mokkostudio.com>\nMatteo F. Vescovi <mfvescovi@gmail.com> Matteo F. Vescovi <mfv.debian@gmail.com>\nMatteo F. Vescovi <mfvescovi@gmail.com> Matteo F. Vescovi <mfvescovi@users.noreply.github.com>\nMikael Sundell <mikael.sundell@gmail.com> Mikael Sundell <mikaelsundell@Mikaels-MacBook-Pro.local>\nNathan Rusch <nathanrusch@gmail.com> Nathan Rusch <nrusch@users.noreply.github.com>\nNick Black <dank@qemfd.net> nick black <dankamongmen@gmail.com>\nNick Black <dank@qemfd.net> Nick Black <dankamongmen@gmail.com>\nPascal Lecocq <plecocq@imageworks.com> Pascal Lecocq <pascal.lecocq@gmail.com>\nRamon Montoya <ramon.montoya@gmail.com> Ramon Montoya Vozmediano <ramon.montoya@gmail.com>\nRamon Montoya <ramon.montoya@gmail.com> rmv <ramon.montoya@gmail.com>\nRay Molenkamp <ray@lazydodo.com> Ray Molenkamp <github@lazydodo.com>\nRichard M. Shaw <hobbes1069@gmail.com> Richard <hobbes1069@gmail.com>\nRichard M. Shaw <hobbes1069@gmail.com> Richard Shaw <hobbes1069@gmail.com>\nRobert Matusewicz <matekm@gmail.com> matekm <matekm@gmail.com> \nRobert Matusewicz <matekm@gmail.com> Robert <matekm@gmail.com>\nRoman Zulak <marsupial@users.noreply.github.com> marsupial <marsupial@users.noreply.github.com>\nSam Richards <sam_junk@taurich.org> Sam Richards <sam@imageworks.com>\nShane Ambler <FreeBSD@ShaneWare.Biz> sambler <Develop@Shaneware.Biz>\nShane Ambler <FreeBSD@ShaneWare.Biz> SAmbler <Develop@Shaneware.Biz>\nSimon Boorer <simonboo99@gmail.com> Simon Boorer <sboorer@localhost.localdomain>\nThiago Ize <thiago@solidangle.com> Thiago Ize <ThiagoIze@users.noreply.github.com>\nVlad (Kuzmin) Erium <shaamaan@gmail.com> Vlad (Kuzmin) Erium <libalias@gmail.com>\nWill Rosecrans <wrosecrans@gmail.com> Will <wrosecrans@gmail.com>\nYang Yang <yang.yang@topazlabs.com> YangYangTL <yang.yang@topazlabs.com>\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.751953125,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Copyright Contributors to the OpenImageIO project.\n# SPDX-License-Identifier: Apache-2.0\n# https://github.com/AcademySoftwareFoundation/OpenImageIO\n\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: src/doc/conf.py\n\n# Optionally build your docs in additional formats such as PDF and ePub\nformats:\n  - pdf\n  - htmlzip\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n    - requirements: src/doc/requirements.txt\n"
        },
        {
          "name": "ASWF",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 73.0888671875,
          "content": "Release 3.1 (target: Sept 2025?) -- compared to 3.0\n---------------------------------------------------\n### New minimum dependencies and compatibility changes:\n\n### ⛰️  New features and public API changes:\n* *New image file format support:*\n* *oiiotool new features and major improvements*:\n* *Command line utilities*:\n* *ImageBuf/ImageBufAlgo*:\n    - *IBA*: IBA::scale() [#4541](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4541) (by Anton Dukhovnikov) (3.1.0.0/3.0.1.0)\n* *ImageInput / ImageOutput*:\n* *ImageCache/TextureSystem*:\n* New global attribute queries via OIIO::getattribute():\n    - Added queries for available font families and styles [#4523](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4523) (by peterhorvath111) (3.1.0.0/3.0.1.0)\n    - *api*: Add global attribute `imageinput:strict` [#4560](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4560) (3.1.0.0)\n\n### 🚀  Performance improvements:\n  - *perf*: IBA::unsharp_mask() speed and memory optimization [#4513](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4513) (by Vlad (Kuzmin) Erium) (3.1.0.0/3.0.1.0)\n  - *perf*: Oiiotool --line --text --point --box speedups [#4518](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4518) (3.1.0.0/3.0.1.0)\n  - *perf*: Jpeg2000 valid_file implementation, much faster than trying to open [#4548](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4548) (by Aras Pranckevičius) (3.1.0.0/3.0.1.0)\n  - *perf*: Faster utf8<->utf16 conversion on Windows [#4549](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4549) (by Aras Pranckevičius) (3.1.0.0/3.0.1.0)\n\n### 🐛  Fixes and feature enhancements:\n  - *IBA*: IBA:demosaic add white balancing [#4499](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4499) (by Anton Dukhovnikov) (3.1.0.0/3.0.1.0)\n  - *IBA*: IBA:demosaic add white balancing [#4499](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4499) (by Anton Dukhovnikov) (3.1.0.0/3.0.1.0)\n  - *jpeg*: Support reading Ultra HDR images [#4484](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4484) (by Loïc Vital) (3.1.0.0/3.0.1.0)\n  - *exr*: Allow an empty \"name\" metadata to be read [#4528](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4528) [#4536](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4536) (3.1.0.0/3.0.1.0)\n  - *exr*: Avoid integer overflow for large deep exr slice strides [#4542](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4542) (3.1.0.0/3.0.1.0)\n  - *jpeg*: Support encoding/decoding arbitrary metadata as comments [#4430](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4430) (by Lukas Stockner) (3.1.0.0/3.0.1.0)\n  - *pnm*: Broken pgm having memory access error [#4559](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4559) (3.1.0.0)\n  - *raw*: Fix channel layout [#4516](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4516) (by Anton Dukhovnikov) (3.1.0.0/3.0.1.0)\n  - *various formats*: Detect invalid ICC profile tags [#4557](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4557) [#4561](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4561) (3.1.0.0)\n  - *various formats*: IPTC fields have length limits [#4568](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4568) (3.1.0.0)\n\n### 🔧  Internals and developer goodies\n  - *int*: Some LoggedTimer instances lacked a variable name [#4571](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4571) (3.1.0.0)\n  - *int*: Various internal fixes to address Sonar and other warnings [#4577](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4577) (3.1.0.0)\n\n### 🏗  Build/test/CI and platform ports:\n* CMake build system and scripts:\n    - *build*: Add hardening options [#4538](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4538) (3.1.0.0/3.0.1.0)\n    - *build*: Use target_compile_options (fixes a LibRaw build issue) [#4556](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4556) (by Don Olmstead) (3.1.0.0)\n* Dependency support:\n    - *deps*: Support static OCIO self-builds [#4517](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4517) (by zachlewis) (3.1.0.0/3.0.1.0)\n    - *deps*: Add new ref output for libheif updates [#4525](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4525) (3.1.0.0/3.0.1.0)\n    - *build*: Add build recipe for PNG [#4423](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4423) (by zachlewis) (3.1.0.0/3.0.1.0)\n* Testing and Continuous integration (CI) systems:\n    - *ci*: Increased the macos timeout slightly to fix spurious failures [#4526](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4526) (3.1.0.0/3.0.1.0)\n    - *ci*: Don't rebuild docs in CI when only CMakeLists.txt changes [#4539](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4539) (3.1.0.0/3.0.1.0)\n    - *ci*: Fix broken CI for ASWF 2021 and 2022 containers [#4543](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4543) (3.1.0.0/3.0.1.0)\n    - *ci*: Refactor using a single steps workflow [#4545](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4545) (3.1.0.0)\n    - *ci*: Fixups of analysis workflow [#4572](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4572) (3.1.0.0)\n* Platform support:\n\n### 📚  Notable documentation changes:\n  - *docs*: Clarify 'copy_image' example [#4522](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4522) (3.1.0.0/3.0.1.0)\n  - *docs*: Update some old links to our new vanity URLs [#4533](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4533) (3.1.0.0/3.0.1.0)\n  - *docs*: Quickstart guide [#4531](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4531) (3.1.0.0/3.0.1.0)\n  - *docs*: First stab at an archiecture overview [#4530](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4530) (3.1.0.0/3.0.1.0)\n\n### 🏢  Project Administration\n  - *admin*: Code review guidelines and tips [#4532](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4532) (3.1.0.0/3.0.1.0)\n  - *admin*: Document how to make signed release tags [#4529](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4529) (3.1.0.0/3.0.1.0)\n  - *admin*: Sign release artifacts [#4580](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4580) (3.1.0.0)\n\n\n\n---\n---\n\n\nRelease 3.0.2.0 (Jan 1, 2025) -- compared to 3.0.1.0\n-----------------------------------------------------\n- *api*: Add global attribute `imageinput:strict` [#4560](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4560)\n- *various formats*: Detect invalid ICC profile tags [#4557](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4557) [#4565](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4565)\n- *various formats*: IPTC fields have length limits, protect against attributes passed that are too long to fit in them. [#4568](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4568)\n- *pnm*: Handle broken pnm files with invalid resolution [#4561](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4561)\n- *pnm*: Handle broken pgm having memory access error [#4559](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4559)\n- *int*: Some LoggedTimer instances lacked a variable name [#4571](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4571)\n- *build*: Use target_compile_options (fixes a LibRaw build issue) [#4556](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4556) (by Don Olmstead)\n- *ci*: Refactor using a single steps workflow [#4545](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4545)\n- *ci*: Fixups of analysis workflow [#4572](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4572)\n- *docs*: Minor fixes and typos [#4564](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4564)\n- *admin*: Sign release artifacts [#4580](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4580)\n\n\nRelease 3.0.1.0 (Dec 1, 2024) -- compared to 3.0.0.3\n-----------------------------------------------------\n- *IBA*: New IBA::scale() [#4541](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4541) (by Anton Dukhovnikov) (3.0.1.0)\n- *IBA*: `IBA:demosaic()` add white balancing [#4499](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4499) (by Anton Dukhovnikov) (3.0.1.0)\n- *jpeg*: Support reading Ultra HDR images [#4484](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4484) (by Loïc Vital) (3.0.1.0)\n- *jpeg*: Support encoding/decoding arbitrary metadata as comments [#4430](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4430) (by Lukas Stockner) (3.0.1.0)\n- *api*: `OIIO::getattribute()` queries for available font families and styles [#4523](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4523) (by peterhorvath111) (3.0.1.0)\n- *perf*: `IBA::unsharp_mask()` speed and memory optimization [#4513](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4513) (by Vlad (Kuzmin) Erium) (3.0.1.0)\n- *perf*: oiiotool `--line`, `--text`, `--point`, and `--box` speedups [#4518](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4518) (3.0.1.0)\n- *perf*: Jpeg2000 valid_file implementation, much faster than trying to open [#4548](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4548) (by Aras Pranckevičius) (3.0.1.0)\n- *perf*: Faster utf8<->utf16 conversion on Windows [#4549](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4549) (by Aras Pranckevičius) (3.0.1.0)\n- *fix(exr)*: Allow an empty \"name\" metadata to be read [#4528](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4528) [#4536](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4536) (3.0.1.0)\n- *fix(exr)*: Avoid integer overflow for large deep exr slice strides [#4542](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4542) (3.0.1.0)\n- *fix(raw)*: Fix channel layout [#4516](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4516) (by Anton Dukhovnikov) (3.0.1.0)\n- *build*: Support static OCIO self-builds [#4517](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4517) (by zachlewis) (3.0.1.0)\n- *build*: Add build recipe for PNG [#4423](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4423) (by zachlewis) (3.0.1.0)\n- *build*: Add hardening options [#4538](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4538) (3.0.1.0)\n- *ci*: Increased the macos timeout slightly to fix spurious failures [#4526](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4526) (3.0.1.0)\n- *ci*: Don't rebuild docs in CI when only CMakeLists.txt changes [#4539](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4539) (3.0.1.0)\n- *ci*: Fix broken CI for ASWF 2021 and 2022 containers [#4543](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4543) (3.0.1.0)\n- *docs*: Update some old links to our new vanity URLs [#4533](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4533) (3.0.1.0)\n- *docs*: Quickstart guide [#4531](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4531) (3.0.1.0)\n- *docs*: First stab at an architecture overview [#4530](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4530) (3.0.1.0)\n- *docs/admin*: Code review guidelines and tips [#4532](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4532) (3.0.1.0)\n- *docs/admin*: Document how to make signed release tags [#4529](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4529) (3.0.1.0)\n\n\n\nRelease 3.0 (v3.0.0.3 - Nov 8, 2024) -- compared to 2.5.16.0\n-------------------------------------------------------------\n- v3.0.0.0-beta1 - Oct 15, 2024\n- v3.0.0.1-beta2 - Oct 29, 2024\n- v3.0.0.2-RC1  - Nov 4, 2024 (no code changes vs beta2)\n- v3.0.0.3 / official release - Nov 8, 2024 (no code changes vs RC1)\n\n**Executive Summary / Highlights:**\n\n- Updated minimum toolchain: C++17/gcc9.3, Python 3.7, CMake 3.18.2, and\n  raised min versions of most library dependencies.\n- New image format support: JPEG XL, R3D.\n- oiiotool new commands: `--cryptomatte-colors`, `--demosaic`, `--buildinfo`,\n  `--ocionamedtransform`, `--popbottom`, `--stackreverse`, `--stackclear`,\n  `--stackextract`; improved `--for` behavior for reverse direction.\n- Lots of long-deprecated API calls have been removed entirely.\n  Please see [the detailed deprecation list](docs/Deprecations-3.0.md).\n- New ImageBufAlgo: `perpixel_op()`, `demosaic()`, `ocionamedtransform()`.\n- ImageBuf now by default does not use ImageCache to mediate file images,\n  unless you explicitly ask for it.\n- ImageCache & TextureSystem now use shared_ptr for creation, not raw\n  pointers. And they have been de-virtualized, for easier future expansion\n  flexibility without breaking ABI for any small change.\n- Improved and more consistent color space name nomenclature.\n- Build system now is capable of auto-downloading and building several\n  of the most important dependencies if they are missing at build time.\n- Please note that the development branch in the GitHub repo is now named\n  `main` instead of `master`.\n\nFull details of all changes follow.\n\n### New minimum dependencies and compatibility changes:\n* *C++*: Move to C++17 standard minimum (from 14), which also implies a\n  minimum gcc 9.3 (raised from 6.3), clang 5 (though we don't test or support\n  older than clang10), Intel icc 19+, Intel OneAPI C++ compiler 2022+. [#4199](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4199) (2.6.2.0)\n* *Python*: 3.7 minimum (from 2.7). [#4200](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4200) (2.6.2.0)\n* *CMake*: 3.18.2 minimum (from 3.15) [#4472](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4472) (3.0.0)\n* *Boost*: Is no longer a dependency! [#4191](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4191) (by Christopher Kulla) [#4221](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4221) (by Christopher Kulla) [#4222](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4222) [#4233](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4233) (2.6.2.0)\n* *ffmpeg*: 4.0 minimum (from 3.0) [#4352](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4352) (2.6.3.0)\n* *Freetype*: 2.10 minimum (from no previously stated minimum, but we had been testing as far back as 2.8) [#4283](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4283) (2.6.2.0)\n* *GIF*: 5.0 minimum for giflib (from 4.0) [#4349](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4349) (2.6.3.0)\n* *libheif*: 1.11 minimum (from 1.3) [#4380](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4380) (2.6.3.0)\n* *LibRaw*: Raise minimum LibRaw to 0.20 (from 0.18) [#4217](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4217) (2.6.2.0)\n* *libtiff*: 4.0 minimum (from 3.9) [#4296](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4296) (2.6.2.0)\n* *OpenColorIO*: Make OpenColorIO a required dependency and raise the minimum to 2.2 (from 1.1). [#4367](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4367) (2.6.3.0)\n* *OpenEXR/Imath*: minimum raised to 3.1 (from 2.4) [#4223](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4223) (2.6.2.0)\n* *OpenCV*: 4.0 minimum (from 3.x) [#4353](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4353) (2.6.3.0)\n* *OpenVDB*: Raise OpenVDB minimum to 9.0 [#4218](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4218) (2.6.2.0)\n* *PNG*: 1.6.0 minimum for libPNG (from 1.5.13) [#4355](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4355) (2.6.3.0)\n* *Pybind11*: 2.7 minimum [#4297](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4297) (2.6.2.0)\n* *Robin-map*: 1.2.0 minimum [#4287](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4287) (2.6.2.0)\n* *WebP*: 1.1 minimum (from 0.6.1) [#4354](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4354) (2.6.3.0)\n\n### ⛰️  New features and public API changes:\n\n* *New image file format support:*\n    - *JPEG XL*: Initial JPEG XL support for image input/output [#4055](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4055) (by Peter Kovář) [#4252](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4252) (by Vlad (Kuzmin) Erium) (2.6.2.0) [#4310](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4310) (by Vlad (Kuzmin) Erium) (2.6.3.0) \n    - *R3D*: Add initial support to read R3D files. Note that this capability will only be enabled if OIIO is built with the R3D SDK installed and available to be found by the build system. [#4216](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4216) (by Peter Kovář) (2.6.2.0)\n* *oiiotool new features and major improvements*:\n    - `--cryptomatte-colors` takes the name of a cryptomatte set of channels, and produces a color-coded matte in which each ID gets a distinct color in the image. This can be useful for visualizing the matte, among other things. [#4093](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4093) (2.6.0.2)\n    - `--demosaic` takes 1-channel Bayer patterns and turn them into\n      demosaiced 3-channel images [#4366](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4366) (by Anton Dukhovnikov) (2.6.3.0) [#4419](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4419) (by Anton Dukhovnikov) (2.6.6.0)\n    - `--buildinfo` command prints build information, including\n      version, compiler, and all library dependencies. [#4124](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4124) (2.6.0.3) [#4150](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4150) (2.6.0.3)\n    - `--ocionamedtransform`: Implement support for OCIO NamedTransforms [#4393](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4393) (by zachlewis) (2.6.3.0)\n    - Several new stack manipulation commands: `--popbottom` discards the bottom\n      element of the stack, `--stackreverse` reverses the order of the whole stack,\n     `--stackclear` fully empties the stack, `--stackextract <index>` moves the\n     indexed item from the stack (index 0 means the top) to the top. [#4348](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4348) (2.6.3.0)\n    - `--for` improvements: correct reverse iteration behavior if the step value\n      is negative, or if there is no step value but the start value is greater than\n      the end value. (https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4348) (2.6.3.0)\n    - Expression evaluation improvements: `BOTTOM` refers to the image on the bottom of the stack, `IMG[expression]` is now supported (previously only numeric literals were accepted as the index), check that label/variable names [#4334](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4334) (2.6.3.0)\n    - oiiotool now by default does immediate reads without relying on an\n      ImageCache, unless the `--cache` option is used, which now both enables\n      the use of an underlying IC as well as setting its size. This tends to\n      improve performance.\n      [#3986](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3986) (2.6.0.1, 2.5.3.1)\n    - Change command line embedding for oiiotool & maketx output, by default hiding the command line for security reasons. It can be re-enabled with `--history`. [#4237](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4237) (2.6.2.0)\n* *Command line utilities*:\n    - *idiff*: Allow users to specify a directory as the 2nd argument [#4015](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4015) (by David Aguilar) (2.6.0.1)\n    - *iv*: Implement Directory Argument Loading for iv [#4010](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4010) (by Chaitanya Sharma) (2.6.0.1)\n    - *iv*: Split off the current image in iv into a separate window [#4017](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4017) (by Anton Dukhovnikov) (2.6.0.1)\n    - *iv*: OCIO color managed display [#4031](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4031) (by Anton Dukhovnikov) (2.6.0.2)\n    - *iv*: Iv shows constant brown and GL error messages on start-up. [#4451](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4451) (by David Adler) (2.6.6.0)\n    - *iv*: Initialize variables before we use them. [#4457](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4457) (by Bram Stolk) (2.6.6.0)\n    - *iv*: Add iv data and display windows overlay feature [#4443](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4443) (by Andy Chan) (2.6.6.0)\n* New global attribute queries via OIIO::getattribute():\n    - \"build:platform\", \"build:compiler\", \"build:dependencies\" [#4124](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4124) (2.6.0.3)\n    - \"build:simd\" is the new preferred synonym for the old name \"oiio:simd\" [#4124](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4124) (2.6.0.3)\n* *ImageBuf/ImageBufAlgo*:\n    - ImageBuf now has span-based constructors for the variety where it\n      \"wraps\" a user buffer. This is preferred over the constructor that\n      takes a raw pointer (which is considered deprecated). [#4401](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4401) (2.6.6.0)\n    - New span-based versions of get_pixels, set_pixels, setpixel, getpixel,\n      interppixel, interppixel_NDC, interppixel_bicubic,\n      interppixel_bicubic_NDC. These are preferred over the old versions that\n      took raw pointers. [#4426](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4426) (2.6.6.0)\n    - Start using optional keyword/value params for some ImageBufAlgo functions. [#4149](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4149)\n    - Only back ImageBuf with ImageCache when passed an IC\n      [#3986](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3986) (2.6.0.1, 2.5.3.1)\n    - Make ImageBuf::Iterator lazy in its making the image writable [#4033](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4033) (2.6.0.2)\n    - `IBA::perpixel_op()` is a new way to write IBA-like functions very\n      simply, only supplying the very inner part of the loop that operates on\n      one pixel. [#4299](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4299) (2.6.3.0) [#4409](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4409) (2.6.6.0)\n    - `IBA::demosaic()` takes 1-channel Bayer patterns and turn them into\n       demosaiced 3-channel images [#4366](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4366) (by Anton Dukhovnikov) (2.6.3.0)\n    - `IBA::ocionamedtransform()`: Implement support for OCIO NamedTransforms [#4393](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4393) (by zachlewis) (2.6.3.0)\n* *ImageInput / ImageOutput*:\n    - Add virtual `heapsize()` and `footprint()` to ImageInput and ImageOutput [#4323](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4323) (by Basile Fraboni) (2.6.3.0)\n* *ImageCache/TextureSystem*:\n    - Use `shared_ptr` for ImageCache and TextureSystem creation [#4377](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4377) (2.6.3.0)\n    - Overload decode_wrapmode to support ustringhash [#4207](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4207) (by Chris Hellmuth) (2.6.1.0)\n    - Add pvt::heapsize() and pvt::footprint() methods and image cache memory tracking [#4322](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4322) (by Basile Fraboni) (2.6.3.0)\n    - De-virtualize ImageCache and TextureSystem [#4384](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4384) (2.6.3.0)\n    - IC/TS have new `get_imagespec()`, `imagespec()`, and `get_cache_dimensions()`\n      methods. [#4442](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4442) (by Basile Fraboni) (2.6.6.0)\n    - *python*: Implement ImageCache.get_imagespec() [#3982](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3982) (2.6.0.0, 2.5.3.1-beta2)\n    - `TextureOpt` has been refactored a bit: some fields have been reordered;\n      it's actually called TextureOpt_v2 (TextureOpt is an alias) to allow\n      better compatibility-preserving improvements in the future, and\n      similarly, TextureOptBatched is an alias for TextureOptBatch_v1. The\n      type names of some enums have been changed, but aliases should preserve\n      compatibility in the vast majority of cases. [#4485](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4485) [#4490](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4490)\n      (3.0.0.0)\n* *API Deprecations*: (please see [the detailed deprecation list](docs/Deprecations-3.0.md))\n    - Various other minor deprecations of things that had been marked as\n      deprecated for a while in fmath.h [#4309](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4309) (2.6.2.0), typedesc.h [#4311](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4311) (2.6.2.0), simd.h [#4308](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4308) (2.6.2.0), assorted [#4234](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4234) (2.6.2.0), texture.h [#4339](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4339) (2.6.3.0), imageio.h [#4312](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4312) (2.6.3.0), benchmark.h, bit.h, color.h, errorhandler.h [#4335](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4335), parmalist.h, parallel.h, strutil.h, sysutil.h, thread.h, tiffutils.h, ustring.h, type_traits.h [#4338](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4338) (2.6.3.0), imagebuf.h [#4341](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4341) (2.6.3.0), imagebufalgo.h [#4344](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4344) (2.6.3.0),\n      dassert.h imagebufalgo.h imagecache.h imageio.h simd.h strutil.h ustring.h [#4480](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4480) [#4488](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4488) (3.0.0.0)\n    - The deprecated headers array_view.h and missing_math.h have been removed. [#4335](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4335) [#4338](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4338) (2.6.3.0)\n    - Make span::size() return size_t, not a signed type [#4332](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4332) (2.6.3.0)\n* *Build system dependency self-builders*: <br>\n  The cmake-based build system has\n  been enhanced to give a report of what dependencies it found, what was\n  missing, what was found but was a version too old for our requirement.\n  If the `OpenImageIO_BUILD_MISSING_DEPS` cmake variable is set to \"all\"\n  (or a list of specific packages), the build system will attempt to\n  build certain missing dependencies locally. Currently, this works for\n  fmt, freetype, Imath, jpeg-turbo, libtiff, OpenColorIO, OpenEXR, pybind11, Robinmap, WebP, Zlib.\n  Additional dependencies will learn to self-build over time.\n  [#4242](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4242)\n  [#4294](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4294) by Larry Gritz,\n  [#4392](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4392) by zachlewis (2.6.3.0)\n  [#4420](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4420) (by zachlewis) (2.6.6.0)\n  [#4422](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4422) (by zachlewis) (3.0.0.1)\n  [#4493](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4493) (by kaarrot) (3.0.0.1)\n* *Environment variables*\n    - The environment variable `OIIO_LIBRARY_PATH` that contains the search\n      paths for finding image file format plugins has been changed to be\n      called `OPENIMAGEIO_PLUGIN_PATH`. This is more consistent: all the\n      \"public API\" documented environment variables that are meant for\n      users/sites to adjust are named starting with `OPENIMAGEIO_`, whereas\n      the prefix `OIIO_` is only used for environment variables that are\n      \"unofficial\" (undocumented, temporary, or meant only for developers to\n      use for debugging). [#4330](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4330) (2.6.3.0)\n    - Rename env variable `OIIOTOOL_METADATA_HISTORY` to\n      `OPENIMAGEIO_METADATA_HISTORY` [#4368](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4368) (2.6.3.0)\n\n### 🚀  Performance improvements:\n  - *oiiotool*: `--mosaic` improvements to type conversion avoid unnecessary\n  copies and format conversions. [#3979](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3979) (2.6.0.0, 2.5.3.1-beta2)\n  - *oiiotool*: Use pointer, not static, for internal color config, slightly reducing oiiotool startup overhead when color configs are not needed. [#4433](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4433) (2.6.6.0)\n  - *simd*: Faster vint4 load/store with unsigned char conversion [#4071](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4071) (by Aras Pranckevičius) (2.6.0.2)\n  - *perf/IBA*: Improve perf of IBA::channels in-place operation [#4088](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4088) (2.6.0.2)\n  - *perf*: Overhaul of ColorConfig internals to solve perf issues [#3995](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3995) (2.6.0.1)\n  - *perf/TS*: Reduce TextureSystem memory by slimming down internal LevelInfo size [#4337](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4337) (by Curtis Black) (2.6.3.0)\n  - *TS*: Have maketx/IBA::make_texture only write full metadata to the first mip level. We presume that other than resolution and encoding-related information, other metadata should not be expected to differ between MIP levels of the same image. This saves file size and memory in the IC/TS. [#4320](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4320) (2.6.3.0)\n  - *IC/TS*: Store full metadata only at subimage 0, miplevel 0 for ptex files. [#4376](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4376) (2.6.3.0)\n  - *perf*: Additional timing logging for performance investigations [#4506](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4506) (3.0.0.1)\n  - *ImageBuf*: ImageBuf file read performance -- double reads, extra copies [#4507](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4507) (3.0.0.1)\n\n### 🐛  Fixes and feature enhancements:\n  - *errors*: Print unretrieved global error messages upon application exit.\n    This should help beginning developers see important error messages they\n    have failed to retrieve. [#4005](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4005) (2.6.0.1)\n  - *font rendering*: Improvements to text rendering by\n    `ImageBufAlgo::render_text()` and `oiiotool --text`:\n      - Look up font in text render based on family and style name, in\n        addition to font filename. [#4509](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4509) (by peterhorvath111) (3.0.0.1)\n      - Fix incorrect vertical alignment in render_text [#4500](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4500) (by peterhorvath111) (3.0.0.1)\n      - Windows newline shows invalid character in text render [#4501](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4501) (by peterhorvath111) (3.0.0.1)\n      - Improve internals of font search enumeration [#4508](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4508) (by peterhorvath111) (3.0.0.1)\n  - *oiiotool*: Overhaul and fix bugs in mixed-channel propagation [#4127](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4127)\n  - *oiiotool*: Expression substitution now understands pseudo-metadata `NONFINITE_COUNT` that returns the number of nonfinite values in the image, thus allowing decision making about fixnan [#4171](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4171)\n  - *oiiotool*: --autocc bugfix and color config inventory cleanup [#4060](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4060) (2.6.0.1)\n  - *oiiotool*: Improve over-blurring of certain oiiotool --fit situations [#4108](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4108) (2.6.0.3)\n  - *oiiotool*: `-i:ch=...` didn't fix up alpha and z channels [#4373](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4373) (2.6.3.0)\n  - *iinfo*: iinfo was not reading MIP levels correctly [#4498](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4498) (3.0.0.1)\n  - *iv*: Assume iv display gamma 2.2 [#4118](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4118) (2.6.0.3)\n  - *dds*: Always seek to the beginning of the ioproxy during open for DDS and PSD files [#4048](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4048) (by Jesse Yurkovich) (2.6.0.1)\n  - *dds*: DDS support more DXGI formats [#4220](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4220) (by alexguirre) (2.6.2.0)\n  - *heic*: Don't auto-transform camera-rotated images [#4142](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4142) (2.6.0.3) [#4184](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4184) (2.6.1.0)\n  - *heic*: Correctly set imagespec size for heif images (by Gerrard Tai) (2.6.3.0)\n  - *iff*: Refactor iffoutput.cpp for memory safety [#4144](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4144) (2.6.0.3)\n  - *jpeg*: New output hint \"jpeg:iptc\" can be used to instruct JPEG output to not output the IPTC data to the file's header. [#4346](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4346) (2.6.3.0)\n  - *jpeg2000*: Include the headers we need to discern version [#4073](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4073) (2.6.0.2)\n  - *jxl*: JPEG-XL improvements [#4252](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4252) (by Vlad (Kuzmin) Erium) (2.6.2.0)\n  - *openexr*: Handle edge case of exr attribute that interferes with our hints [#4008](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4008) (2.6.0.1)\n  - *openexr*: Add support for luminance-chroma OpenEXR images. [#4070](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4070) (by jreichel-nvidia) (2.6.0.3)\n  - *openexr*: Implement copy_image for OpenEXR [#4004](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4004) (by Andy Chan) (2.6.1.0)\n  - *openexr*: Fix out-of-bounds reads when using OpenEXR decreasingY lineOrder. [#4215](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4215) (by Aaron Colwell) (2.6.2.0)\n  - *openexr*: Add proxy support for EXR multipart output [#4263](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4263) [#4264](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4264) (by jreichel-nvidia) (2.6.2.0)\n  - *openexr*: Modernize dwa compression level setting [#4434](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4434) (3.0.0)\n  - *ffmpeg*: Add proper detection of new FFmpeg versions [#4394](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4394) (by Darby Johnston) (2.6.3.0)\n  - *ffmpeg*: FFmpeg additional metadata [#4396](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4396) (by Darby Johnston) (2.6.3.0)\n  - *png*: New output compression mode names recognized: \"none\", \"pngfast\".\n    Also some minor speedups to PNG writes.\n    [#3980](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3980) (2.6.0.0)\n  - *png*: Write out proper tiff header version in png EXIF blobs [#3984](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3984) (by Jesse Yurkovich) (2.6.0.0, 2.5.3.1)\n  - *png*: A variety of minor optimizations to the PNG writer [#3980](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3980)\n  - *png*: Improve png write with alpha is low [#3985](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3985) (2.6.0.1)\n  - *png*: Fix crash for writing large PNGs with alpha [#4074](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4074) (2.6.0.2)\n  - *png*: Correctly read PNGs with partial alpha [#4315](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4315) (2.6.2.0)\n  - *png*: Round dpi resolution to nearest 0.1 [#4347](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4347) (2.6.3.0)\n  - *png*: Bug in associateAlpha botched alpha=0 pixels [#4386](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4386) (2.6.3.0)\n  - *pnm*: Improvements to pnm plugin [#4253](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4253) (by Vlad (Kuzmin) Erium) (2.6.2.0)\n  - *pnm*: Initialize m_pfm_flip before use to avoid UB. [#4446](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4446) (by Bram Stolk) (2.6.6.0)\n  - *psd*: Always seek to the beginning of the ioproxy during open for DDS and PSD files [#4048](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4048) (by Jesse Yurkovich) (2.6.0.1)\n  - *psd*: Add support for 16- and 32-bit Photoshop file reads [#4208](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4208) (by EmilDohne) (2.6.2.0)\n  - *psd*: Various PSD files fail to load correctly [#4302](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4302) (by Jesse Yurkovich) (2.6.2.0)\n  - *raw*: LibRaw wavelet denoise options [#4028](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4028) (by Vlad (Kuzmin) Erium) (2.6.0.1)\n  - *raw*: Avoid buffer overrun for flip direction cases [#4100](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4100) (2.6.0.3)\n  - *raw*: Expose additional white balancing hints: \"raw:user_black\", \"raw:use_auto_wb\", \"raw:grey_box\", \"dng:version\", \"dng:baseline_exposure\", \"dng:calibration_illuminant#\", \"dng:color_matrix#\", \"dng:camera_calibrationX\". [#4360](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4360) (by Anton Dukhovnikov) (2.6.3.0)\n  - *raw*: Make the crop match in-camera JPEG [#4397](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4397) (by Anton Dukhovnikov) (2.6.3.0)\n  - *raw*: Check for nullptr in raw input plugin [#4448](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4448) (by Anton Dukhovnikov) (2.6.6.0)\n  - *raw*: Raw reader - exposing max_raw_memory_mb [#4454](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4454) (by Ankit Sinha) (2.6.6.0)\n  - *tiff*: Fix TIFF export with EXIF data and I/O proxy [#4300](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4300) (by jreichel-nvidia) (2.6.3.0)\n  - *ImageBuf*: Fix crash when mutable Iterator used with read-IB [#3997](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3997) (2.6.0.1)\n  - *ImageBuf*: Improve IB::nsubimages and other related fixes [#4228](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4228) (2.6.2.0)\n  - *ImageBuf*: Copy/paste error in the ImageBuf iterator copy constructor [#4365](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4365) (by Anton Dukhovnikov) (2.6.3.0)\n  - *ImageBufAlgo*: IBA::to_OpenCV fails for ImageCache-backed images [#4013](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4013) (2.6.0.1)\n  - *ImageBufAlgo*: Add missing version of warp [#4390](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4390) (2.6.3.0)\n  - *ImageBufAlgo*: IBA::transpose() didn't set output image's format to input [#4391](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4391) (2.6.3.0)\n  - *ImageBufAlgo*: Fix issue when computing perceptual diff [#4061](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4061) (by Aura Munoz) (2.6.0.1)\n  - *ImageInput*: Only check REST arguments if the file does not exist, avoiding problems for filenames that legitimately contain a `?` character. [#4085](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4085) (by AdamMainsTL) (2.6.0.2)\n  - *fix*: Certain int->float type conversions in TypeDesc/ParamValueList [#4132](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4132) (2.6.0.3)\n  - *color management*: Automatically recognize some additional color space name synonyms: \"srgb_texture\", \"lin_rec709\" and \"lin_ap1\". Also add common permutation \"srgb_tx\" and \"srgb texture\" as additional aliases for \"srgb\". [#4166](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4166)\n  - *color management*: Color management nomenclature improvements: \"linear\"\n    is now just a legacy synonym for the preferred \"lin_rec709\", which is\n    used widely where applicable. [#4479](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4479) (3.0.0.0)\n  - *security*: Don't use (DY)LD_LIBRARY_PATH as plugin search paths [#4245](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4245) (by Brecht Van Lommel) (2.6.2.0)\n  - *fix*: Fix crash when no default fonts are found [#4249](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4249) (2.6.2.0)\n  - *TextureSystem*: Fix missing initialization in TextureOptBatch [#4226](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4226) (2.6.2.0)\n  - *iv*: Avoid crash with OpenGL + multi-channel images [#4087](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4087) (2.6.0.2)\n  - *iv*: If OCIO env is not set or doesn't exist, have iv use built-in config [#4285](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4285) (2.6.2.0)\n  - *iv*: Iv should enable the ImageCache [#4326](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4326) (by Jesse Yurkovich) (2.6.3.0)\n  - *ImageCache*: Simplify tile cache clearing. [#4292](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4292) (by Curtis Black) (2.6.2.0)\n\n### 🔧  Internals and developer goodies\n  - *int*: Prevent infinite loop in bit_range_convert [#3996](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3996) (by Jesse Yurkovich) (2.6.0.1)\n  - *int*: More switching fprintf/etc to new style print [#4056](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4056) (2.6.0.1)\n  - *int*: Various fixes for memory safety and reduce static analysis complaints [#4128](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4128) (2.6.0.3)\n  - *int*: Use OIIO functions for byte swapping to make Sonar happy [#4174](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4174) (2.6.1.0)\n  - *int*: More conversion to new string formatting [#4189](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4189) (2.6.1.0) [#4231](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4231) (2.6.2.0) [#4247](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4247) (2.6.2.0) [#4258](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4258) (2.6.2.0)\n  - *int*: Added validity checks to PNG, JPEG, and EXR readers to try to catch implausible resolutions or channels that are likely to be corrupted or malicious images. [#4452](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4452) (by Dharshan Vishwanatha) (2.6.6.0)\n  - *int*: ImageInput: Initialize pixels of partial tile conversion buffer,\n    avoiding possible floating point errors. [#4462](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4462) (by Bram Stolk) (2.6.6.0)\n  - *bit.h*: Move bitcast, byteswap, and rotl/rotr to new bit.h [#4106](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4106) (2.6.0.3)\n  - *bit.h*: OIIO::bitcast adjustments [#4101](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4101) (2.6.0.3)\n  - *filesystem.h*: Filesystem::unique_path wasn't using the unicode rectified string [#4203](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4203) (2.6.1.0)\n  - *filesystem.h*: IOProxy const method adjustments [#4415](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4415) (2.6.6.0)\n  - *fmath.h*: One more fast_exp fix [#4275](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4275) (2.6.2.0)\n  - *fmt.h*: Fix build break from recent fmt change [#4227](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4227) (2.6.2.0)\n  - *hash.h*: Mismatched pragma push/pop in hash.h [#4182](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4182) (2.6.1.0)\n  - *imagebuf.h*: Add `ImageBuf::wrapmode_name()`, inverse of wrapmode_from_string [#4340](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4340) (2.6.3.0)\n  - *oiioversion.h*: Coalesce redundant STRINGIZE macros -> OIIO_STRINGIZE [#4121](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4121) (2.6.0.3)\n  - *platform.h*: Belatedly change OIIO_CONSTEXPR14 to constexpr [#4153](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4153) (2.6.0.3)\n  - *paramlist.h*: Add ParamValueSpan::get_bool() [#4303](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4303) (2.6.2.0)\n  - *platform.h*: In platform.h, define OIIO_DEVICE macro [#4290](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4290) (2.6.2.0)\n  - *simd.h*: Fix leaking of Imath.h into public headers [#4062](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4062) (2.6.0.2)\n  - *simd.h*: Make all-architecture matrix44::inverse() [#4076](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4076) (2.6.0.2)\n  - *simd.h*: AVX-512 round function [#4119](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4119) (by AngryLoki) (2.6.0.3)\n  - *simd.h*: Simplify vbool16 casting [#4105](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4105) (2.6.0.3)\n  - *simd.h*: Address NEON issues [#4143](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4143) (2.6.0.3)\n  - *simd.h*: Gather_mask was wrong for no-simd fallback [#4183](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4183) (2.6.1.0)\n  - *simd.h*: For simd types, use default for ctrs and assignment where applicable [#4187](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4187) (2.6.1.0)\n  - *simd.h*: Fix longstanding probem with 16-wide bitcast for 8-wide HW [#4268](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4268) (2.6.2.0)\n  - *span.h*: Span and range checking enhancements [#4125](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4125) (2.6.0.3)\n  - *span.h*: Make span default ctr and assignment be `= default` [#4198](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4198) (2.6.1.0)\n  - *span.h*: Span utility improvements [#4398](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4398) (2.6.3.0)\n  - *span.h*: Fold span_util.h contents into span.h [#4402](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4402) (2.6.6.0)\n  - *span.h*: New utility functions `span_within()`, `check_span()`, and\n    macro `OIIO_ALLOCA_SPAN`. [#4426](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4426) (2.6.6.0)\n  - *string_view.h*: Deprecate OIIO::string_view::c_str() [#4511](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4511) (3.0.0.1)\n  - *strutil.h*: Add `Strutil::eval_as_bool()` [#4250](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4250) (2.6.2.0)\n  - *strutil.h*: Add `Strutil::string_is_identifier()` [#4333](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4333) (2.6.3.0)\n  - *strutil.h*: Change Strutil::format to default to std::format conventions [#4480](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4480) (3.0.0.0)\n  - *sysutil.h*: Deprecate Sysutil::physical_concurrency() [#4034](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4034) (2.6.0.1)\n  - *texture.h*: Overload decode_wrapmode to support ustringhash [#4207](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4207) (by Chris Hellmuth) (2.6.1.0)\n  - *typedesc.h*: Allow TypeDesc to have all the right POD attributes [#4162](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4162) (by Scott Wilson) (2.6.0.3)\n  - *typedesc.h*: Add TypeDesc::Vector3i [#4316](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4316) (2.6.2.0)\n  - *ustring.h*: Make sure C++ knows ustring & ustringhash are trivially copyable [#4110](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4110) (2.6.0.3)\n  - *ustring.h*: Address ignored annotation nvcc warnings on explicitly-defaulted functions [#4291](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4291) (by Chris Hellmuth) (2.6.2.0)\n  - *style*: Update our formatting standard to clang-format 17.0 and C++17 [#4096](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4096) (2.6.0.3)\n  - *int*: Use spans to solve a number of memory safety issues [#4148](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4148) (2.6.1.0)\n  - *cleanup*: Convert more old errorf() to errorfmt() [#4231](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4231) (2.6.2.0)\n  - *fix*: Error retrieval safeguards for recycled objects [#4239](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4239) (2.6.2.0)\n  - *fix*: Improve error messages when a font is not found [#4284](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4284) (2.6.2.0)\n  - *refactor*: Oiiotool break out expression eval methods into separate file [#4256](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4256) (2.6.2.0)\n  - *refactor*: Move most of imageio_pvt.h.in to just a regular .h [#4277](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4277) (2.6.2.0)\n  - *refactor*: Simplify openexr includes [#4304](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4304) (2.6.3.0)\n  - *fix*: Catch potential OCIO exception that we were missing [#4379](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4379) (2.6.3.0)\n  - *fix*: Don't let fmtlib exceptions crash the app [#4400](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4400) (2.6.3.0)\n  - *fix*: Beef up some error messages [#4369](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4369) (2.6.3.0)\n  - *cleanup*: Remove code disabled as of 3.0 [#4487](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4487) (3.0.0.0)\n  - *fix*: Address fmt exceptions for left justification [#4510](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4510) (3.0.0.1)\n\n### 🏗  Build/test/CI and platform ports:\n* CMake build system and scripts:\n  - Fix Cuda ustring.h warnings [#3978](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3978) (2.6.0.0, 2.5.3.1)\n  - Remove unnecessary headers from strutil.cpp causing build trouble [#3976](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3976) (by Jesse Yurkovich) (2.6.0.0, 2.5.3.1)\n  - Print build-time warnings for LGPL gotchas [#3958](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3958) (by Danny Greenstein) (2.6.0.0, 2.5.3.1-beta2)\n  - *build*: Make C++17 be the default C++ standard for building (C++14 is\n    still the minimum for now and can be selected via CMAKE_CXX_STANDARD)\n    [#4022](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4022) (2.6.0.1)\n  - *build*: Provide compile_commands.json for use by tools [#4014](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4014) (by David Aguilar) (2.6.0.1)\n  - *build*: Don't fail for 32 bit builds because of static_assert check [#4006](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4006) (2.6.0.1)\n  - *build*: Provide compile_commands.json for use by tools [#4014](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4014) (by David Aguilar) (2.6.0.1)\n  - *build*: Don't fail for 32 bit builds because of static_assert check [#4006](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4006) (2.6.0.1)\n  - *build*: Better cmake verbose behavior [#4037](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4037) (2.6.0.1)\n  - *build*: Fix include guard [#4066](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4066) (2.6.0.2)\n  - *build*: Add a way to cram in a custom extra library for iv [#4086](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4086) (2.6.0.2)\n  - *build*: Don't fail pybind11 search if python is disabled [#4136](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4136) (2.6.0.3)\n  - *build*: Cleanup - get rid of \"site\" files [#4176](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4176) (2.6.1.0)\n  - *build*: Fix buld_ninja.bash to make directories and download correctly [#4192](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4192) (by Sergio Rojas) (2.6.1.0)\n  - *build*: Need additional include [#4194](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4194) (2.6.1.0)\n  - *build*: Make an OpenImageIO_Util_static library and target [#4190](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4190) (2.6.1.0)\n  - *build*: Switch to target-based definitions [#4193](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4193) (2.6.1.0) then mostly revert it [#4273](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4273) (2.6.2.0).\n  - *build*: iv build issues with glTexImage3D [#4202](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4202) (by Vlad (Kuzmin) Erium) (2.6.1.0)\n  - *build*: Restore internals of strhash to compile correctly on 32 bit architectures [#4213](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4213) (2.6.1.0)\n  - *build*: LibOpenImageIO_Util does need DL libs, we removed it incorrectly [#4230](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4230) (2.6.2.0)\n  - *build*: Fix missing target_link_options for libraries (by kaarrot) (2.6.2.0)\n  - *build*: Disable clang18 warnings about deprecated unicode conversion [#4246](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4246) (2.6.2.0)\n  - *build*: More warning elimination for clang18 [#4257](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4257) (2.6.2.0)\n  - *build*: Add CMath target for the sake of static libtiff [#4261](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4261) (2.6.2.0)\n  - *build*: Add appropriate compiler defines and flags for SIMD with MSVC [#4266](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4266) (by Jesse Yurkovich) (2.6.2.0)\n  - *build/windows*: Fix warning on windows [#4272](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4272) (2.6.2.0)\n  - *build/windows*: Fix for setenv() on Windows [#4381](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4381) (by Vlad (Kuzmin) Erium) (2.6.3.0)\n  - *build*: Gcc-14 support, testing, CI [#4270](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4270) (2.6.2.0)\n  - *build*: New set_utils.cmake for various handy \"set()\" wrappers [#4274](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4274) (2.6.2.0) [#4281](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4281) (2.6.2.0)\n  - *build*: Upgrade to more modern python3 finding [#4288](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4288) (2.6.2.0)\n  - *build*: Add missing includes to libutil CMake target. [#4306](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4306) (by kaarrot) (2.6.2.0)\n  - *build*: Avoid rebuilds due to processing of fmt headers [#4313](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4313) (by Jesse Yurkovich) (2.6.2.0)\n  - *build*: Rudimentary CUDA support infrastructure (experimental) [#4293](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4293) (2.6.2.0)\n  - *build*: A few cmake cleanups and minor code rearrangements [#4359](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4359) (2.6.3.0)\n  - *build*: Don't link libOpenImageIO against OpenCV [#4363](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4363) (2.6.3.0)\n  - *build*: Fixed the sign compare causing build failure [#4240](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4240) (by Peter Kovář) (2.6.2.0)\n  - *build*: Add a build option for profiling [#4432](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4432) (2.6.6.0)\n  - *build*: Don't change CMAKE_XXX_OUTPUT_DIRECTORY when built as subdir [#4417](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4417) (by Luc Touraille) (3.0.0)\n  - *build*: Add option for build profiling with clang -ftime-trace [#4475](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4475) (3.0.0)\n  - *build*: Reduce compile time by trimming template expansion in IBA. [#4476](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4476) (3.0.0.0)\n* Dependency support:\n  - *deps/OpenVDB*: Protect against mismatch of OpenVDB vs C++ [#4023](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4023) (2.6.0.1)\n  - *deps/OpenVDB*: Adjust OpenVDB version requirements vs C++17 [#4030](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4030) (2.6.0.1)\n  - *deps*: Ptex support for static library [#4072](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4072) (by Dominik Wójt) (2.6.0.2)\n  - *deps*: Account for header changes in fmt project trunk [#4109](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4109) (2.6.0.3)\n  - *deps*: Deal with changes in fmt's trunk [#4114](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4114) (2.6.0.3)\n  - *deps*: Remove Findfmt.cmake [#4069](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4069) [#4103](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4103) (by Dominik Wójt) (2.6.0.3)\n  - *deps*: Correctly disable OpenVDB when it's incompatible [#4120](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4120) (2.6.0.3)\n  - *deps*: Fixes for DCMTK [#4147](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4147) (2.6.0.3)\n  - *deps*: Fix warning when Freetype is disabled [#4177](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4177) (2.6.1.0)\n  - *deps*: Remove boost from strutil.cpp [#4181](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4181) (by Jesse Yurkovich) (2.6.1.0)\n  - *deps*: FindOpenColorIO failed to properly set OpenColorIO_VERSION [#4196](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4196) (2.6.1.0)\n  - Use exported targets for libjpeg-turbo and bump min to 2.1\n    [#3987](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3987) (2.6.0.1, 2.5.3.1-beta2)\n  - *deps*: Support fmt 11.0 [#4441](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4441) (2.6.6.0)\n  - *deps*: Support and test against OCIO 2.4 [#4459](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4459) [#4467](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4467)  (2.6.6.0)\n  - *deps*: No need for OCIO search to use PREFER_CONFIG [#4425](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4425) (2.6.6.0)\n  - *deps*: Raise CMake minimum to 3.18.2 [#4472](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4472) (3.0.0)\n  - *deps*: Remove the enforced upper version limit for fmt [#4497](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4497) (3.0.0.1)\n  - *deps*: Search for libbz2 only if FFmpeg or FreeType is enabled. [#4505](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4505) (by jreichel-nvidia) (3.0.0.1)\n* Testing and Continuous integration (CI) systems:\n  - Tests for ABI compliance [#3983](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3983), [#3988](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3988) (2.6.0.0, 2.5.3.1)\n  - *tests*: Imagebuf_test add benchmarks for iterator traversal [#4007](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4007) (2.6.0.1)\n  - *tests*: Add opencv regression test [#4024](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4024) (2.6.0.1)\n  - *tests*: Improve color management test in imagebufalgo_test [#4063](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4063) (2.6.0.2)\n  - *tests*: Add one more ref output for python-colorconfig test [#4065](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4065) (2.6.0.2)\n  - *tests*: Shuffle some tests between directories [#4091](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4091) (2.6.0.2)\n  - *tests*: Fix docs test, used wrong namespace [#4090](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4090) (2.6.0.2)\n  - *tests/fixes*: Fixes to reduce problems identified by static analysis [#4113](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4113) (2.6.0.3)\n  - *tests*: Add test for filter values and 'filter_list' query [#4140](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4140) (2.6.0.3)\n  - *tests*: Add new heif test output [#4262](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4262) (2.6.2.0)\n  - *tests*: Fix windows quoting for test [#4271](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4271) (2.6.2.0)\n  - *tests*: Remove unused test output ref from old dependency versions [#4370](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4370) (2.6.3.0)\n  - *tests*: Add switch to imageinout_test for enabling floating point exceptions. [#4463](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4463) (by Bram Stolk) (3.0.0)\n  - *tests*: Fixup after directory refactor of OpenImageIO-images [#4473](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4473) (3.0.0)\n  - *ci*: Some straggler repo renames in the workflows [#4025](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4025) (2.6.0.1)\n  - *ci*: CI tests on MacOS ARM, and fixes found consequently [#4026](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4026) (2.6.0.1)\n  - *ci*: Nomenclature change 'os' to 'runner' for clarity [#4036](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4036) (2.6.0.1)\n  - *ci*: Add tiff-misc reference for slightly changed error messages [#4052](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4052) (2.6.0.1)\n  - *ci*: Remove MacOS-11 test [#4053](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4053) (2.6.0.1)\n  - *ci*: Test against gcc-13 [#4059](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4059) (2.6.0.1)\n  - *ci*: Restrict Mac ARM running [#4077](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4077) (2.6.0.2)\n  - *ci*: Rename macro to avoid conflict during CI unity builds [#4092](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4092) (2.6.0.2)\n  - *ci*: Repair Sonar scanner analysis [#4097](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4097) [#4099](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4099) (2.6.0.2)\n  - *ci*: Improve parallel builds by basing on number of cores [#4115](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4115) (2.6.0.3)\n  - *ci*: Update all github actions to their latest versions that's compatible [#4129](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4129) (2.6.0.3)\n  - *ci*: Bump 'latest' test to newer dep versions, document [#4130](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4130) (2.6.0.3)\n  - *ci*: Revert to fix scorecard analysis, try version 2.0.6 (2.6.0.3)\n  - *ci*: Start using macos-14 ARM runners, bump latest OCIO [#4134](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4134) (2.6.0.3)\n  - *ci*: Switch away from deprecated GHA idiom set-output [#4141](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4141) (2.6.0.3)\n  - *ci*: Add vfx platform 2024 [#4163](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4163) (2.6.0.3)\n  - *ci*: Fix Windows CI, need to build newer openexr and adjust boost search [#4167](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4167) (2.6.0.3)\n  - *ci*: Adjust GHA upload-artifact action version [#4179](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4179) (2.6.1.0)\n  - *ci*: Allow triggering CI workflow from web [#4178](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4178) (2.6.1.0)\n  - *ci*: Make one of the Mac tests build for avx2 [#4188](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4188) (2.6.1.0)\n  - *ci*: Enable Windows 2022 CI tests [#4195](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4195) (2.6.1.0)\n  - *ci*: Update scrorecard workflow to fix breakage [#4201](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4201) (2.6.1.0)\n  - *ci*: Fix broken Windows CI by building our own libtiff [#4214](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4214) (2.6.2.0)\n  - *ci*: Typo in build_libtiff.bash [#4280](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4280) (2.6.2.0)\n  - *ci*: For Windows CI, build only release of vcpkg packages [#4282](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4282) (2.6.2.0)\n  - *ci*: New tets: oldest, hobbled, localbuilds [#4295](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4295) (2.6.2.0)\n  - *ci*: Fix GHA CI after they upgraded nodejs [#4324](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4324) (2.6.3.0)\n  - *ci*: Sanitizer new warnings about signed/unsigned offsets in openexr [#4351](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4351) (2.6.3.0)\n  - *ci*: Deal with CentOS 7 EOL and disappearance of yum mirrors [#4325](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4325) (2.6.3.0)\n  - *ci*: CI sanitizer test improvements [#4374](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4374) (2.6.3.0)\n  - *ci*: Add a workflow that builds docs [#4413](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4413) (2.6.6.0)\n  - *ci*: Streamline the old MacOS-12 CI test [#4465](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4465) (2.6.6.0)\n  - *ci*: Test against OpenEXR 3.3 and deal with its 4.0 bump [#4466](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4466) (2.6.6.0)\n  - *ci*: Make scrorecards workflow not fail constantly [#4471](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4471)\n  - *ci*: Limit when automatic docs building ci happens [#4496](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4496) (3.0.0.1)\n  - *ci*: Retire deprecated macos12 runner, try beta macos15 [#4514](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4514) (3.0.0.1)\n* Platform support:\n  - *win*: Fix building failed from source on Windows [#4235](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4235) (by Vic P) (2.6.2.0)\n\n### 📚  Notable documentation changes:\n  - *docs*: Convert code examples within the docs to tests that are built\n    executed as part of the testsuite. [#3977](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3977) [#3994](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3994) (2.6.0.0, 2.5.3.1)\n    [#4039](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4039) (by Jeremy Retailleau) [#4444](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4444) (by Ziad Khouri) [#4456](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4456) (by pfranz) [#4455](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4455) (by Ziad Khouri)  [#4460](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4460) (by Lydia Zheng) [#4458](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4458) (by Danny Greenstein) (2.6.6.0) (3.0.0.0) [#4468](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4468) (by pfranz) (3.0.0.1)\n  - Spruce up the main README and add \"Building_the_docs\"\n    [#3991](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3991) (2.6.0.1, 2.5.3.1)\n  - *docs*: Make an example of doc-to-test in the imagebufalgo chapter [#4012](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4012) (2.6.0.1)\n  - *docs*: Convert examples within the imagebufalgo chapter. [#4016](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4016) (by Jeremy Retailleau) (2.6.0.1)\n  - *docs*: Added tests for Simple Image input and updated rst [#4019](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4019) (by Calvin) (2.6.0.1)\n  - *docs*: Convert make_texture doc examples to tests [#4027](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4027) (by Danny Greenstein) (2.6.0.1)\n  - *docs*: Fix RTD configuration for v2 [#4032](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4032) (2.6.0.1)\n  - *docs*: Update INSTALL.md to reflect the latest versions we've tested against [#4058](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4058) (2.6.0.1)\n  - *docs*: Fix typo [#4089](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4089) (2.6.0.1)\n  - *docs*: Minor change to formatting and naming [#4098](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4098) (2.6.0.2)\n  - *docs*: Fix link to openexr test images [#4080](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4080) (by Jesse Yurkovich) (2.6.0.2)\n  - *security*: Document CVE-2023-42295 (2.6.0.1)\n  - *docs*: Fix broken IBA color management documentation [#4104](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4104) (2.6.0.3)\n  - *docs*: Update SECURITY and RELEASING documentation [#4138](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4138) (2.6.0.3)\n  - *docs*: Fix tab that was missing from the rendering on rtd [#4137](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4137) (2.6.0.3)\n  - *docs*: Fix python example [#4139](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4139) (2.6.0.3)\n  - *docs*: Fix some typos and add missing oiiotool expression explanations [#4169](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4169) (2.6.1.0)\n  - *docs*: Update INSTALL.md for windows [#4279](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4279) (by Mel Massadian) (2.6.2.0)\n  - *doc*: Add missing documentation of ImageBuf locking methods [#4267](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4267) (2.6.2.0)\n  - *doc*: Fixes to formatting and sphinx warnings [#4301](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4301) (2.6.2.0)\n  - *docs*: Clarify that IBA::rotate params are pixel coordinates [#4358](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4358) (2.6.3.0)\n  - *docs*: Clarify TextureSystem::create use of imagecache when shared=true [#4399](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4399) (2.6.3.0)\n  - *docs*: Fix typo where apostrophe was used for possessive of 'it' [#4383](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4383) (by Joseph Goldstone) (2.6.3.0)\n  - *docs/security*: Document CVE-2024-40630 resolution (2.6.3.0)\n  - *docs*: IBA::st_warp was missing from the documentation [#4431](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4431) (2.6.6.0)\n   - *docs*: Move some docs files around [#4470](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4470) (2.6.6.0)\n  - *docs*: Various minor fixes [#4477](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4477) (3.0.0)\n  - *docs*: Add documenting comments where missing in string_view and span [#4478](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4478) (3.0.0)\n  - *docs*: Fix typo in description of Strutil::parse_values [#4512](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4512) (3.0.0.1)\n\n### 🏢  Project Administration\n  - *admin*: Repo rename -- fix all URL references [#3998](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3998) [#3999](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3999)\n  - *admin*: Alert slack \"release-announcements\" channel upon OIIO release [#4002](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4002) [#4046](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4046) [#4047](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4047) [#4079](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4079) (2.6.0.3)\n  - *admin*: Relicense more code under Apache 2.0 [#4038](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4038) [#3905](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3905)\n  - *admin*: Account for duplicate emails in the .mailmap [#4075](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4075) (2.6.0.2)\n  - *admin*: Add a ROADMAP document [#4161](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4161) (2.6.1.0)\n  - *docs*: Better documentation of past CVE fixes in SECURITY.md [#4238](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4238) (2.6.2.0)\n  - *admin*: More CLA explanation and how-to links [#4318](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4318) (2.6.2.0)\n  - *admin*: Add deprecation updates to the RELEASING checklist [#4345](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4345) (2.6.3.0)\n  - *admin*: Document my git-cliff workflow for release notes [#4319](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4319) (2.6.3.0)\n  - *admin*: Change docs and comments references master -> main [#4435](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4435) (2.6.6.0)\n  - *admin*: Update OpenImageIO Roadmap [#4469](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4469) (by Todica Ionut) (2.6.6.0)\n  - *admin*: Update SECURITY.md for 3.0 beta [#4486](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/4486) (3.0.0.0)\n\n\n\n--------------\n\nFor older release notes, see:\n* [CHANGES-2.x](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/docs/CHANGES-2.x.md).\n* [CHANGES-1.x](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/docs/CHANGES-1.x.md).\n* [CHANGES-0.x](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/docs/CHANGES-0.x.md).\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 12.1123046875,
          "content": "# Copyright Contributors to the OpenImageIO project.\n# SPDX-License-Identifier: Apache-2.0\n# https://github.com/AcademySoftwareFoundation/OpenImageIO\n\ncmake_minimum_required (VERSION 3.18.2)\n\nset (OpenImageIO_VERSION \"3.1.0.0\")\nset (OpenImageIO_VERSION_OVERRIDE \"\" CACHE STRING\n     \"Version override (use with caution)!\")\nmark_as_advanced (OpenImageIO_VERSION_OVERRIDE)\nif (OpenImageIO_VERSION_OVERRIDE)\n    set (OpenImageIO_VERSION ${OpenImageIO_VERSION_OVERRIDE})\nendif ()\n\nproject (OpenImageIO VERSION ${OpenImageIO_VERSION}\n         HOMEPAGE_URL \"https://openimageio.org\"\n         LANGUAGES CXX C)\n\nset (PROJ_NAME OIIO)    # short name, caps\nstring (TOLOWER ${PROJ_NAME} PROJ_NAME_LOWER)  # short name lower case\nstring (TOUPPER ${PROJ_NAME} PROJ_NAME_UPPER)  # short name upper case\nset (PROJECT_VERSION_RELEASE_TYPE \"dev\" CACHE STRING\n    \"Build type, for example: dev, beta2, RC1 (empty string for normal release)\")\nset (${PROJECT_NAME}_VERSION_RELEASE_TYPE ${PROJECT_VERSION_RELEASE_TYPE})\nset (PROJECT_AUTHORS \"Contributors to the OpenImageIO project\")\noption (${PROJECT_NAME}_SUPPORTED_RELEASE\n        \"Set ON for supported release branches, OFF for 'main'\" OFF)\nif (${PROJECT_NAME}_SUPPORTED_RELEASE)\n    set (${PROJECT_NAME}_DEV_RELEASE OFF)\nelse ()\n    set (${PROJECT_NAME}_DEV_RELEASE ON)\nendif ()\n\n# Set PROJECT_IS_TOP_LEVEL to ON if if this is the top level project (not\n# if this is included as a subproject of something else). Note that this is\n# handled automatically for CMake >= 3.21.\nif (CMAKE_VERSION VERSION_LESS 3.21)\n    if (\"${CMAKE_PROJECT_NAME}\" STREQUAL \"${PROJECT_NAME}\")\n        set (PROJECT_IS_TOP_LEVEL ON)\n    endif ()\nendif ()\n\n# Set up module path for our own cmake modules and add some esential ones\nlist (APPEND CMAKE_MODULE_PATH\n      \"${PROJECT_SOURCE_DIR}/src/cmake/modules\"\n      \"${PROJECT_SOURCE_DIR}/src/cmake\")\n\n# Utilities\ninclude (colors)\ninclude (set_utils)\ninclude (check_is_enabled)\ninclude (fancy_add_executable)\n\n# If the user wants to use Conan to build dependencies, they will have done\n# this prior to the cmake config:\n#   cd <build area>\n#   conan install <source area>\n# and that will leave a conanbuildinfo.cmake in the build area for us.\nif (EXISTS ${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)\n    include (${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)\n    message (STATUS \"Using Conan for dependencies\")\n    conan_basic_setup()\nendif()\n\nif (NOT CMAKE_BUILD_TYPE)\n    set (CMAKE_BUILD_TYPE \"Release\")\nendif ()\n\n# If the user hasn't configured cmake with an explicit\n# -DCMAKE_INSTALL_PREFIX=..., then set it to safely install into ./dist, to\n# help prevent the user from accidentally writing over /usr/local or whatever.\nif (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT\n      AND PROJECT_IS_TOP_LEVEL)\n    set (CMAKE_INSTALL_PREFIX \"${PROJECT_SOURCE_DIR}/dist\" CACHE PATH\n         \"Installation location\" FORCE)\nendif()\n\nmessage (STATUS \"Configuring ${PROJECT_NAME} ${PROJECT_VERSION}\")\nmessage (STATUS \"CMake ${CMAKE_VERSION}\")\nmessage (STATUS \"CMake system           = ${CMAKE_SYSTEM}\")\nmessage (STATUS \"CMake system name      = ${CMAKE_SYSTEM_NAME}\")\nmessage (STATUS \"Project source dir     = ${PROJECT_SOURCE_DIR}\")\nmessage (STATUS \"Project build dir      = ${CMAKE_BINARY_DIR}\")\nmessage (STATUS \"Project install prefix = ${CMAKE_INSTALL_PREFIX}\")\nmessage (STATUS \"Configuration types    = ${CMAKE_CONFIGURATION_TYPES}\")\nmessage (STATUS \"Build type             = ${CMAKE_BUILD_TYPE}\")\nmessage (STATUS \"Supported release      = ${${PROJECT_NAME}_SUPPORTED_RELEASE}\")\n\n# Make the build area layout look a bit more like the final dist layout\nif (PROJECT_IS_TOP_LEVEL)\n    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\n    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\n    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\nendif()\n\nif (\"${PROJECT_SOURCE_DIR}\" STREQUAL \"${CMAKE_BINARY_DIR}\")\n    message (FATAL_ERROR \"Not allowed to run in-source build!\")\nendif ()\n\noption (CMAKE_USE_FOLDERS \"Use the FOLDER target property to organize targets into folders.\" ON)\nmark_as_advanced (CMAKE_USE_FOLDERS)\nif (CMAKE_USE_FOLDERS)\n    set_property (GLOBAL PROPERTY USE_FOLDERS ON)\nendif ()\n\n\noption (VERBOSE \"Print lots of messages while compiling\" OFF)\nif (VERBOSE)\n    set (CMAKE_MESSAGE_LOG_LEVEL \"VERBOSE\" CACHE STRING \"CMake log level to display\")\nelse ()\n    set (CMAKE_MESSAGE_LOG_LEVEL \"STATUS\" CACHE STRING \"CMake log level to display\")\nendif ()\noption (${PROJ_NAME}_BUILD_TOOLS \"Build the command-line tools\" ON)\noption (${PROJ_NAME}_BUILD_TESTS \"Build the unit tests\" ON)\nset (OIIO_LIBNAME_SUFFIX \"\" CACHE STRING\n     \"Optional name appended to ${PROJECT_NAME} libraries that are built\")\noption (BUILD_OIIOUTIL_ONLY \"If ON, will build *only* libOpenImageIO_Util\" OFF)\noption (BUILD_DOCS \"If ON, build documentation and man pages.\" ON)\noption (INSTALL_DOCS \"If ON, install documentation and man pages.\" ON)\noption (INSTALL_FONTS \"If ON, install default fonts\" ON)\noption (EMBEDPLUGINS \"Embed format plugins in libOpenImageIO\" ON)\nset (PLUGIN_SEARCH_PATH \"\" CACHE STRING \"Default plugin search path\")\nfile (TO_NATIVE_PATH \"${PLUGIN_SEARCH_PATH}\" PLUGIN_SEARCH_PATH_NATIVE)\nset (CMAKE_DEBUG_POSTFIX \"_d\" CACHE STRING \"Library naming postfix for Debug builds\")\n\nif (CMAKE_UNITY_BUILD_BATCH_SIZE)\n    set (UNITY_SMALL_BATCH_SIZE \"${CMAKE_UNITY_BUILD_BATCH_SIZE}\" CACHE STRING \"Unity batch mode size for expensive files\")\nelse ()\n    set (UNITY_SMALL_BATCH_SIZE 8 CACHE STRING \"Unity batch mode size for expensive files\")\nendif ()\nmessage(STATUS \"CMAKE_UNITY_BUILD_MODE = ${CMAKE_UNITY_BUILD_MODE}\")\nmessage(STATUS \"CMAKE_UNITY_BUILD_BATCH_SIZE = ${CMAKE_UNITY_BUILD_BATCH_SIZE}\")\n\noption (OIIO_THREAD_ALLOW_DCLP \"OIIO threads may use DCLP for speed\" ON)\nif (NOT OIIO_THREAD_ALLOW_DCLP)\n    add_compile_definitions (OIIO_THREAD_ALLOW_DCLP=0)\nendif ()\n\nset (TEX_BATCH_SIZE \"\" CACHE STRING \"Force TextureSystem SIMD batch size (e.g. 16)\")\nif (TEX_BATCH_SIZE)\n    add_compile_definitions (OIIO_TEXTURE_SIMD_BATCH_WIDTH=${TEX_BATCH_SIZE})\nendif ()\n\n# Set the default namespace\nset (${PROJ_NAME}_NAMESPACE ${PROJECT_NAME} CACHE STRING\n     \"Customized outer namespace base name (version will be added)\")\noption (${PROJ_NAME}_NAMESPACE_INCLUDE_PATCH\n        \"Should the inner namespace include the patch number\" ${${PROJECT_NAME}_DEV_RELEASE})\nset (PROJ_NAMESPACE \"${${PROJ_NAME}_NAMESPACE}\")\nset (PROJ_NAMESPACE_V \"${PROJ_NAMESPACE}_v${PROJECT_VERSION_MAJOR}_${PROJECT_VERSION_MINOR}\")\nif (${PROJ_NAME}_NAMESPACE_INCLUDE_PATCH)\n    set (PROJ_NAMESPACE_V \"${PROJ_NAMESPACE_V}_${PROJECT_VERSION_PATCH}\")\nendif ()\nmessage(STATUS \"Setting Namespace to: ${PROJ_NAMESPACE_V}\")\n\n\n# Define OIIO_INTERNAL symbol only when building OIIO itself, will not be\n# defined for downstream projects using OIIO.\nadd_compile_definitions (OIIO_INTERNAL=1)\n\ninclude (GNUInstallDirs)\n\n# Utilities for build instructions of the format-reading plugins\ninclude (add_oiio_plugin)\n\n# All the C++ and compiler related options and adjustments\ninclude (compiler)\n\n# Dependency finding utilities and all dependency-related options\ninclude (dependency_utils)\n\n# Utilities and options related to finding python and making python bindings\ninclude (pythonutils)\n\n# Dependency finding utilities and all dependency-related options\ninclude (externalpackages)\n\ninclude (cuda_macros)\n\n# Include all our testing apparatus and utils, but not if it's a subproject\nif (PROJECT_IS_TOP_LEVEL)\n    include (testing)\nelse ()\n    macro (oiio_add_tests)\n    endmacro ()\n    macro (oiio_add_all_tests)\n    endmacro ()\nendif ()\n\n\ninclude_directories (\n    BEFORE\n    \"${CMAKE_SOURCE_DIR}/src/include\"\n    \"${CMAKE_BINARY_DIR}/src/include\"\n    \"${CMAKE_BINARY_DIR}/include\"\n    \"${CMAKE_BINARY_DIR}/include/OpenImageIO\"\n  )\n\n# Tell CMake to process the sub-directories\nadd_subdirectory (src/libutil)\n\n# Add IO plugin directories -- if we are embedding plugins, we need to visit\n# these directories BEFORE the OpenImageIO target is established (in\n# src/libOpenImageIO). For each plugin, we append to the lists of source\n# files, format libs, include directories, and definitions, all of which\n# will be used by src/libOpenImageIO.\nset (libOpenImageIO_srcs \"\")\nset (format_plugin_libs \"\")\nset (format_plugin_include_dirs \"\")\nset (format_plugin_definitions \"\")\nfile (GLOB all_format_plugin_dirs src/*.imageio)\nif (\"${OIIO_SITE}\" STREQUAL \"SPI\")\n    # SPI only -- because of a workaround for a very weird linkage issue\n    # specific to our system, we need to be sure libtiff is referenced first.\n    file (GLOB tiff_format_plugin_dir src/tiff.imageio)\n    list (REMOVE_ITEM all_format_plugin_dirs ${tiff_format_plugin_dir})\n    list (INSERT all_format_plugin_dirs 0 ${tiff_format_plugin_dir})\nendif ()\nif (EMBEDPLUGINS AND NOT BUILD_OIIOUTIL_ONLY)\n    foreach (plugin_dir ${all_format_plugin_dirs})\n        add_subdirectory (${plugin_dir})\n    endforeach ()\nendif ()\n\nif (NOT BUILD_OIIOUTIL_ONLY)\n    add_subdirectory (src/libOpenImageIO)\nendif ()\n\nif (OIIO_BUILD_TOOLS AND NOT BUILD_OIIOUTIL_ONLY)\n    add_subdirectory (src/iconvert)\n    add_subdirectory (src/idiff)\n    add_subdirectory (src/igrep)\n    add_subdirectory (src/iinfo)\n    add_subdirectory (src/maketx)\n    add_subdirectory (src/oiiotool)\n    add_subdirectory (src/testtex)\n    add_subdirectory (src/iv)\nendif ()\n\n# Add IO plugin directories -- if we are not embedding plugins, we need to\n# do it AFTER the OpenImageIO target is established (in src/libOpenImageIO),\n# since each plugin needs libOpenImageIO to be a dependency.\nif (NOT EMBEDPLUGINS AND NOT BUILD_OIIOUTIL_ONLY)\n    foreach (plugin_dir ${all_format_plugin_dirs})\n        add_subdirectory (${plugin_dir})\n    endforeach ()\nendif ()\n\nif (USE_PYTHON AND Python3_Development_FOUND AND NOT BUILD_OIIOUTIL_ONLY)\n    add_subdirectory (src/python)\nelse ()\n    message (STATUS \"Not building Python bindings: USE_PYTHON=${USE_PYTHON}, Python3_Development_FOUND=${Python3_Development_FOUND}\")\nendif ()\n\nadd_subdirectory (src/include)\nif (BUILD_DOCS)\n    add_subdirectory (src/doc)\nendif ()\nadd_subdirectory (src/fonts)\n\nif (NUKE_FOUND)\n    add_subdirectory (src/nuke/txReader)\n    add_subdirectory (src/nuke/txWriter)\nendif ()\n\n# install pkgconfig file\nif (NOT MSVC)\n   configure_file(src/build-scripts/OpenImageIO.pc.in \"${CMAKE_BINARY_DIR}/OpenImageIO.pc\" @ONLY)\n   install (FILES \"${CMAKE_BINARY_DIR}/OpenImageIO.pc\"\n            DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig\n            COMPONENT developer)\nendif()\n\n# Export the configuration files. There are also library-specific config\n# exports in the CMakeLists.txt of libOpenImageIO.\ninclude (CMakePackageConfigHelpers)\n\n# the file containing the exported targets\nset (OIIO_TARGETS_EXPORT_NAME \"${PROJECT_NAME}Targets.cmake\")\n# the version file\nset (OIIO_VERSION_CONFIG \"${CMAKE_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake\")\n# the config file that is actually looked for by find_package\nset (OIIO_PROJECT_CONFIG \"${CMAKE_BINARY_DIR}/${PROJECT_NAME}Config.cmake\")\n# where all these files will be installed\nset (OIIO_CONFIG_INSTALL_DIR \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\n\n# first generate the version file in the binary dir\nwrite_basic_package_version_file (\n        ${OIIO_VERSION_CONFIG}\n        VERSION ${PROJECT_VERSION}\n        COMPATIBILITY SameMajorVersion)\n\n# generate the Targets file in the binary dir using the targets collected in\n# OIIO_EXPORTED_TARGETS each target is added to OIIO_EXPORTED_TARGETS\n# through the macro install_target().\nexport (EXPORT OIIO_EXPORTED_TARGETS FILE \"${CMAKE_BINARY_DIR}/${OIIO_TARGETS_EXPORT_NAME}\")\n\n# generate the config file from the template in the binary dir\nconfigure_package_config_file (\"${PROJECT_SOURCE_DIR}/src/cmake/Config.cmake.in\"\n        \"${OIIO_PROJECT_CONFIG}\"\n        INSTALL_DESTINATION \"${OIIO_CONFIG_INSTALL_DIR}\")\n\n# generate the config file from the template in the binary dir\ninstall (FILES \"${OIIO_PROJECT_CONFIG}\" \"${OIIO_VERSION_CONFIG}\"\n        DESTINATION \"${OIIO_CONFIG_INSTALL_DIR}\")\n\n# install targets files\ninstall (EXPORT OIIO_EXPORTED_TARGETS\n        DESTINATION ${OIIO_CONFIG_INSTALL_DIR}\n        FILE ${OIIO_TARGETS_EXPORT_NAME}\n        NAMESPACE ${PROJECT_NAME}::)\n\n\nif (PROJECT_IS_TOP_LEVEL AND BUILD_TESTING AND ${PROJ_NAME}_BUILD_TESTS)\n    oiio_setup_test_data()\n    oiio_add_all_tests()\nendif ()\n\nif (PROJECT_IS_TOP_LEVEL)\n    include (packaging)\nendif ()\n\nprint_package_notfound_report ()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2900390625,
          "content": "# Code of Conduct\n\nThe OpenImageIO project abides by Linux Foundation's code of conduct, which\nyou can read in full [here](https://lfprojects.org/policies/code-of-conduct).\n\nTo report incidents or to appeal reports of incidents, send email to\nthe Manager of LF Projects at manager@lfprojects.org.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 17.91015625,
          "content": "Contributing to OpenImageIO\n===========================\n\n> NOTE: This is the proposed post-ASWF-move version of CONTRIBUTING. After the\n> project is legally transferred and moved to the new repo, this file will\n> replace the one at the project root.\n>\n> TO DO:\n>\n> - [X] Update the mail list sign-up page after the mail list moves.\n> - [ ] Update the repo URL\n> - [ ] Double check the security and info email addresses.\n>\n\nCode contributions to OpenImageIO are always welcome, and [nearly 200\npeople](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/CREDITS.md) have done\nso over the years.  Please review this document to get a briefing on our\nprocess.\n\n\nMail List and Slack\n-------------------\n\nContributors should be reading the oiio-dev mail list:\n\n* [oiio-dev](https://lists.aswf.io/g/oiio-dev)\nFor developers of the OpenImageIO code itself, or users who are really\ninterested in the OIIO internals. This is where we mostly discuss the code\n(including bug reports), but are also happy to answer user questions about\nuse or working of OIIO.\n\nYou can sign up for the mail list on your own using the link above.\n\nThe [ASWF Slack](https://slack.aswf.io/) has an `openimageio` channel. Sign up\nfor the Slack on your own, then under \"channels\", select \"browse channels\" and\nyou should see the openimageio channel (among those of the other projects and\nworking groups).\n\n\nHow to Ask for Help\n-------------------\n\nIf you have trouble installing, building, or using OpenImageIO, but there's\nnot yet a solid reason to suspect you've encountered a genuine bug, start by\nposting a question to the [oiio-dev mailing\nlist](https://lists.aswf.io/g/oiio-dev).\nThis is the place for questions such has \"How do I...\".\n\n\nBug Reports and Issue Tracking\n------------------------------\n\nWe use GitHub's issue tracking system for reporting bugs and requesting\nenhancements: https://github.com/AcademySoftwareFoundation/OpenImageIO/issues\n\n**If you are merely asking a question (\"how do I...\")**, please do not file an\nissue, but instead ask the question on the [oiio-dev mailing\nlist](https://lists.aswf.io/g/oiio-dev).\n\nIf you are submitting a bug report, please be sure to note which version of\nOIIO you are using, on what platform (OS/version, which compiler you used,\nand any special build flags or other unusual environmental issues). Please\ngive a specific, as-detailed-as-possible account of\n\n* what you tried (command line, source code example)\n* what you expected to happen\n* what actually happened (crash? error message? ran but didn't give the\n  correct result?)\n\nwith enough detail that others can easily reproduce the problem just by\nfollowing your instructions. Please quote the exact error message you\nreceived. If you are having trouble building, please post the full cmake\noutput of a fresh VERBOSE=1 build.\n\nSuspected security vulnerabilities should be reported by the same process.\n\nIf confidentiality precludes a public question or issue for any reason, you\nmay contact us privately at [security@openimageio.org](security@openimageio.org).\n\n\nContributor License Agreement (CLA) and Intellectual Property\n-------------------------------------------------------------\n\nTo protect the project -- and the contributors! -- we do require a Contributor\nLicense Agreement (CLA) for anybody submitting changes. This is for your own\nsafety, as it prevents any possible future disputes between code authors and\ntheir employers or anyone else who might think they might own the IP output of\nthe author.\n\n* [Corporate CLA](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/ASWF/CLA-corporate.md) :\n  If you are writing the code as part of your job, or if there is any\n  possibility that your employers might think they own any intellectual\n  property you create. This needs to be executed by someone who has\n  signatory power for the company.\n\n* [Individual CLA](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/ASWF/CLA-individual.md) :\n  If you are an individual writing the code on your own time, using your own\n  equipment, and you're SURE you are the sole owner of any intellectual\n  property you contribute.\n\nPlease note that it is extremely common (nearly ubiquitous in the US and\nCanada, and maybe other places) for full-time employees of technology and\nentertainment companies to have IP clauses in their employment agreement (in\nthat pile of paperwork you sign on your first day of work and then promptly\nforget about) that give the company rights to any code you write, even on your\nown time. The OpenImageIO project expects you to know and follow the rules of\nyour employer and to have them sign a corporate CLA if necessary.\n\nThe easiest way to sign CLAs is digitally [using\nEasyCLA](https://corporate.v1.easycla.lfx.linuxfoundation.org). There are\ndetailed step-by-step instructions about using the EasyCLA system for\n[corporate CLAs](https://docs.linuxfoundation.org/lfx/easycla/v2-current/contributors/corporate-contributor)\nand [individual CLAs](https://docs.linuxfoundation.org/lfx/easycla/v2-current/contributors/individual-contributor#github).\n\nCompanies who prefer not to use the online tools may sign, scan, and email\nthe executed copy to manager@lfprojects.org.\n\nThe corporate CLA allows a company to name a \"CLA Manager\" (who does not need\nsignatory power) who has the ability to use the online system to add or delete\nindividual employees of the company who are authorized to submit pull\nrequests, without needing to get an executive to amend and sign the agreement\neach time.\n\nPlease note that these CLAs are based on the Apache 2.0 CLAs, and differ\nminimally, only as much as was required to correctly describe the EasyCLA\nprocess and our use of a CLA manager.\n\n**Contribution sign off**\n\nThis project requires the use of the [Developer’s Certificate of Origin 1.1\n(DCO)](https://developercertificate.org/), which is the same mechanism that\nthe [Linux®\nKernel](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/process/submitting-patches.rst#n416)\nand many other communities use to manage code contributions. The DCO is\nconsidered one of the simplest tools for sign offs from contributors as the\nrepresentations are meant to be easy to read and indicating signoff is done\nas a part of the commit message.\n\nHere is an example Signed-off-by line, which indicates that the submitter\naccepts the DCO:\n\n    Signed-off-by: John Doe <john.doe@example.com>\n\nYou can include this automatically when you commit a change to your local\ngit repository using `git commit -s`. You might also want to\nleverage this [command line tool](https://github.com/coderanger/dco) for\nautomatically adding the signoff message on commits.\n\n\nCommit messages\n---------------\n\n### Summary heuristic\n\nLook at the commit history of the project to get a sense of the style and\nlevel of detail that is expected in commit messages.\n\n### General guidelines and expectations\n\nThe first line of the commit message should be a short (less than 80\ncharacters) summary of the change, prefixed with the general nature of the\nchange (see below).\n\nThe rest of the commit message should be a more detailed explanation of the\nchanges. Some commits are self-explanatory and don't need more than the\nsummary line. Others may need a more detailed explanation. Hallmarks of\na good commit message include:\n\n* An explanation of why the change is necessary and what you hope to\n  accomplish with it.\n* A description of any major user- or developer-facing changes that people\n  should be aware of: changes in APIs or behaviors, new features, etc.\n* An explanation of any tricky implementation details or design decisions that\n  might not be immediately obvious to someone reading the code.\n* Guideposts for somebody reviewing the code to understand the rationale and\n  have any supporting background information to fully understanding the code\n  changes.\n\nRemember that at some point in the future, a developer unfamiliar with your\nchange (maybe you, long after you've forgotten the details) might need to\nunderstand or fix your patch. Keep that person in mind as your audience and\nstrive to write a commit message that explains the context in a way that saves\nthem time and effort. Be the hero in the story of their future debugging\neffort!\n\n### Using \"conventional commits\" prefixes\n\nWe strive to follow the recommendations known as [conventional\ncommits](https://www.conventionalcommits.org/), which means that we would like\nmerged commit messages to have their first line start with one of the\nfollowing prefixes:\n\n- `feat:`  new features\n- `fix:`  bug fixes\n- `perf:`  performance improvements\n- `api:`  changes to the public APIs\n- `int:`  changes to code internals that don't affect the public API\n- `build:`  changes to the build system\n- `test:`  changes to the test suite or unit tests\n- `ci:`  changes to the CI system\n- `docs:`  changes to the documentation\n- `refactor:`  code refactoring\n- `style:`  formatting or other stylistic non-functional changes to the code\n- `admin:`  project administration or policy changes\n- `revert:`  reverting a previous commit\n\nObviously, some (if not most) PRs may qualify for more than one of these\ncategories (for example, a new feature may also introduce a new API call, add\ntests, and include new documentation). If that is the case, use your best\njudgment to pick the category that best captures the essence or most important\naspect of the change. When ambiguous, consider the list above to be a priority\nranking (e.g., a change that fixes a bug and adds a new test should be listed\nunder `fix:`, because that appears first in the list).\n\nIt is also encouraged, when it makes sense to do so, to put a subcategory in\nparenthesis after the prefix, like `fix(exr):` or `feat(IBA):`. It's ok to use\nobvious abbreviations for major classes or subsections: IB=ImageBuf,\nIBA=ImageBufAlgo, IC=ImageCace, TS=TextureSystem, etc. If there is no clear\nsingle format or class that is the man focus of the patch, then you can omit\nthe subcategory.\n\nAPI or ABI-breaking changes should additionally be marked with an exclamation\npoint at the end of the prefix, like `feat!:` or `api!:` to make it easily\nidentifiable as a breaking change from the first line of the commit message.\n\n\n\nPull Requests and Code Review\n-----------------------------\n\nThe best way to submit changes is via GitHub Pull Request. GitHub has a\n[Pull Request Howto](https://help.github.com/articles/using-pull-requests/).\n\nAll code must be formally reviewed before being merged into the official\nrepository. The protocol is like this:\n\n1. Get a GitHub account, fork AcademySoftwareFoundation/OpenImageIO to create\nyour own repository on GitHub, and then clone it to get a repository on your\nlocal machine.\n\n1. Edit, compile, and test your changes. Run clang-format (see the\ninstructions on coding style below).\n\n1. Push your changes to your fork (each unrelated pull request to a separate\n\"topic branch\", please).\n\n1. Make a \"pull request\" on GitHub for your patch.\n\n2. If your patch will induce a major compatibility break, or has a design\ncomponent that deserves extended discussion or debate among the wider OIIO\ncommunity, then it may be prudent to email oiio-dev pointing everybody to\nthe pull request URL and discussing any issues you think are important.\n\n1. All pull requests automatically launch CI jobs on GitHub Actions to\nensure that the build completes and that the tests suite runs correctly, for\na variety of platform, compiler, library, and flag combinations. The status\nof the CI tests for your PR will be displayed on the GitHub PR page. We will\nnot accept PRs that don't build cleanly or pass the existing testsuite.\n\n1. The reviewer will look over the code and critique on the \"comments\" area.\nReviewers may ask for changes, explain problems they found, congratulate the\nauthor on a clever solution, etc. But until somebody says \"LGTM\" (looks good\nto me), the code should not be committed. Sometimes this takes a few rounds\nof give and take. Please don't take it hard if your first try is not\naccepted. It happens to all of us.\n\n1. After approval, one of the senior developers (with commit approval to the\nofficial main repository) will merge your fixes into the main branch.\n\nPlease see the [Code Review](docs/dev/CodeReview.md) document for more\nexplanaton of the code review process.\n\nCoding Style\n------------\n\n### File conventions\n\nC++ implementation should be named `*.cpp`. Headers should be named `.h`.\nAll headers should contain\n\n    #pragma once\n\nAll source files should begin with these three lines:\n\n    // Copyright Contributors to the OpenImageIO project.\n    // SPDX-License-Identifier: Apache-2.0\n    // https://github.com/AcademySoftwareFoundation/OpenImageIO\n\nas a comment in the syntax of whatever source code is used in that file.\n\nOccasionally a file may contain substantial code from another project and will\nalso list its original copyright and license information. Do NOT alter that\nnotice or copy it to any new files, it really only applies to the particular\nfile in which it appears.\n\n\n### Formatting\n\nWe use [clang-format](https://clang.llvm.org/docs/ClangFormat.html)\nto uniformly format our source code prior to PR submission. Make sure that\nclang-format is installed on your local machine, and just run\n\n    make clang-format\n\nand it will automatically reformat your code according to the configuration\nfile found in the `.clang-format` file at the root directory of the OIIO\nsource code checkout.\n\nOne of the CI test matrix entries runs clang-format and fails if any\ndiffs were generated (that is, if any of your code did not 100% conform to\nthe `.clang-format` formatting configuration). If it fails, clicking on that\ntest log will show you the diffs generated, so that you can easily correct\nit on your end and update the PR with the formatting fixes.\n\nIf you don't have clang-format set up on your machine, and your patch is not\nvery long, you may find that it's more convenient to just submit it and hope\nfor the best, and if it doesn't pass the CI test, look at the diffs in the log\nfor the \"clang-format\" CI run and make the corrections by hand and then submit\nan update to the patch (i.e. relying on CI to run clang-format for you).\n\nBecause the basic formatting is automated by clang-format, we won't\nenumerate the rules here.\n\nFor the occasional non-clang-format regions of code, NEVER alter somebody\nelse's code to reformat just because you found something that violates the\nrules. Let the group/author/leader know, and resist the temptation to change\nit yourself.\n\nEach line of text in your code, including comments, should be at most 80\ncharacters long. Exceptions are allowed for those rare cases where letting a\nline be longer (and wrapping on an 80-character window) is actually a better\nand clearer alternative than trying to split it into two lines. Sometimes this\nhappens, but it's extremely rare.\n\nWe prefer three (3) consecutive empty lines between freestanding functions or\nclass definitions, one blank line between method declarations within a class\ndefinition. Put a single blank line within a function if it helps to visually\nseparate different sequential tasks, but don't put multiple blank lines in a\nrow within a function, or blank lines right after an opening brace or right\nbefore a closing brace. The goal is to use just enough white space to help\ndevelopers visually parse the code (for example, spotting at a glance where\nnew functions begin), but not so much as to spread it out or be confusing.\n\n\n### Identifiers\n\nIn general, classes and templates should start with upper case and\ncapitalize new words: `class CustomerList;` In general, local variables\nshould start with lower case. Macros should be `ALL_CAPS`, if used at all.\n\nIf your class is extremely similar to, or modeled after, something in the\nstandard library, or something else we interoperate with, it's ok to\nuse their naming conventions. For example, very general utility classes and\ntemplates (the kind of thing you would normally find in std) should\nbe lower case with underscores separating words, as they would be if they\nwere standards.\n\n    template <class T> shared_ptr;\n    class scoped_mutex;\n\nNames of data should generally be nouns. Functions/methods are trickier: a\nthe name of a function that returns a value but has no side effects should\nbe a noun, but a procedure that performs an action should be a verb.\n\n### Class structure\n\nTry to avoid public data members, although there are some classes that serve\na role similar to a simple C struct -- a very straightforward collection of\ndata members. In these, it's fine to make the data members public and have\nclients set and get them directly.\n\nPrivate member data should be named m_foo (alternately, it's ok to use the\ncommon practice of member data foo_, but don't mix the conventions within a\nclass).\n\nPrivate member data that needs public accessors should use the convention:\n\n    void foo (const T& newfoo) { m_foo = newfoo; }\n    const T& foo () const { return m_foo; }\n\nAvoid multiple inheritance.\n\nNamespaces: yes, use them!\n\n### Third-party libraries\n\nPrefer C++17 `std` rather than other libraries, where both can do the same\ntask.\n\nPlease do use Imath vector, matrix, and utility classes where applicable.\nDon't write your own vector or matrix code!\n\nUse these libraries for OIIO internals, but please DO NOT require them in\nany of our main external APIs unless it's been thoroughly discussed and\napproved by the group.\n\n### Comments and Doxygen\n\nComment philosophy: try to be clear, try to help teach the reader what's\ngoing on in your code.\n\nPrefer C++ comments (starting line with `//`) rather than C comments (`/* ... */`).\n\nFor public APIs we tend to use Doxygen-style comments (start with `///`).\nThey looks like this:\n\n    /// Explanation of a class.  Note THREE slashes!\n    class myclass {\n        ....\n        float foo;  ///< Doxygen comments on same line look like this\n    }\n\n### Miscellaneous\n\nMacros should be used only rarely -- prefer inline functions, templates,\nenums, or \"const\" values wherever possible.\n\nPrefer `std::unique_ptr` over raw new/delete.\n\n#### Bottom Line\n\nWhen in doubt, look elsewhere in the code base for examples of similar\nstructures and try to format your code in the same manner, or ask on the\noiio-dev mail list.\n\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 3.927734375,
          "content": "This is a list of all the contributors to OpenImageIO, sorted alphabetically\nby first name.\n\nIf you know of somebody that I missed or have corrections, please email:\nlg@openimageio.org\n\n* Aaron Colwell\n* Adam Mains\n* Akihiro Yamasaki\n* Alan Jones\n* Alejandro Conty\n* Alejandro Aguirre\n* Alex Guirre\n* Alex Hughes\n* Alex Schworer\n* Alexander Kuleshov\n* Alexander Murashko\n* Alexandre Gauthier\n* Alexis Oblet\n* Alexy Pawlow\n* Alister Chowdhury\n* Aman Shah\n* Ananth Garre\n* Anders Langlands\n* Andy Chan\n* AngryLoki\n* Angus Davis\n* Ankit Sinha\n* Anton Dukhovnikov\n* Anthony Nemoff\n* Aras Pranckevičius\n* Arkady Shapkin\n* Basile Fraboni\n* Basileios Anastasatos\n* Bastien Montagne\n* Ben De Luca\n* Bernhard Rosenkraenzer\n* Biswapriyo Nath\n* Blair Tennessy\n* Blazej Floch\n* Brad Smith\n* Bram Stolk\n* Brecht Van Lommel\n* Brent Davis\n* Brian Hall\n* Brice Gros\n* Carl Rand\n* Cassian Andrei\n* Chad Dombrova\n* Changlin Hsieh\n* Chaitanya Sharma\n* Chris Crosetto\n* Chris Foster\n* Chris Hellmuth\n* Chris Kulla\n* Chris Whalen\n* Christoph Willing\n* Clément Champetier\n* Cliff Stein\n* Curtis Black\n* D-Spirits\n* Dalai Felinto\n* Dan Wexler\n* Daniel Dresser\n* Daniel Flehner Heen\n* Daniel Wyatt\n* Danny Greenstein\n* Darby Johnston\n* Dharshan Vishwanatha\n* David Adler\n* David Aguilar\n* David Gordon\n* Deepak Gopinath\n* Dennis Schridde\n* Dieter De Baets\n* Dinko Galetik\n* Dominik Bartkiewicz\n* Dominik Wójt\n* Duncan Chan\n* Dustin Rodrigues\n* Edgar Velazquez-Armendariz\n* Eloi Du Bois\n* Elvic Liang\n* Emil Dohne\n* Fabien Castan\n* Fabien Servant\n* Fredrik Averpil\n* Frédéric Devernay\n* Gaurav Bansal\n* Gerrard Tai\n* Gerdya\n* Ghislain Antony Vaillant\n* Gonzalo Garramuño\n* Gregor Mueckl\n* Grégoire De Lillo\n* Guillaume Chatelet\n* Hanspeter Niederstrasser\n* Harry Mallon\n* Heiko Becker\n* Henri Fousse\n* Hugh Macdonald\n* Imarz\n* Irena Damsky\n* Ismael Cortes\n* Jan Hettenkofer\n* Jan Honsbrok\n* Jens Lindgren\n* Jep Hill\n* Jeph Alapat\n* Jeremy Retailleau\n* Jeremy Rose\n* Jeremy Selan\n* Jesse Yurkovich\n* Jim Hourihan\n* Joachim Reichel\n* Johannes Unterguggenberger\n* John Burnett\n* John Fea\n* John Haddon\n* Jonathan Hearn\n* Jonathan Scruggs\n* Joris Nijs\n* Joseph Goldstone\n* Julien Enche\n* Justin Israel\n* Justina Mikonyte\n* Kaarrot\n* Kazuki Takahashi\n* Kevin Brightwell\n* Kimball Thurston\n* Konrad Kleine\n* Krzysztof Blicharski\n* Larry Gritz (project leader)\n* LazyDodo\n* Leonid Onokhov\n* Leszek Godlewski\n* Lucas Panian\n* Lucille Caillaud\n* Lukas Schrangl\n* Lukasz Maliszewski\n* Luke Emrose\n* Lydia Zheng\n* M Joonas Pihlaja\n* Malcolm Humphreys\n* Manuel Gamito\n* Manuel Leonhardt\n* Marcos Fajardo\n* Marie Fetiveau\n* Mariusz Szczepanczyk\n* Mark Boorer\n* Mark Visser\n* Massimo Paladin\n* Matteo F. Vescovi\n* Matthew E. Levine\n* Max Liani\n* Mel Massadian\n* Merwan Achibet\n* Michael Cho\n* Michael Oliver\n* Michel Lerenard\n* Michel Normand\n* Mikael Sundell\n* Mike Root\n* Morteza Ramezanali\n* Nandan Dubey\n* Nathan Rusch\n* Nicholas Yue\n* Nick Black\n* Nicolas Burtnyk\n* Nixon Kwok\n* Noah Rahm (designer of our logo!)\n* Northon Patrick\n* Nuno Cardoso\n* Ole Gulbrandsen\n* Ott Tinn\n* Pascal Lecocq\n* Patrick Hodoul\n* Patrick Piché\n* Paul Franz\n* Paul Melis\n* Paul Molodowitch\n* Pavel Karneliuk\n* Pete Larabell\n* Peter Horvath\n* Peter Kovář\n* Philip Nemec\n* Pino Toscano\n* Povilas Kanapickas\n* Puneet Jain\n* Radu Arjocu\n* Ramon Montoya\n* Ray Molenkamp\n* Rémi Achard\n* Richard Shaw\n* Robert Matusewicz\n* Roeland Schoukens\n* Roman Zulak\n* Rui Li\n* Russell Greene\n* Ryen\n* Saket Jalan\n* Sam Richards\n* Samuel Nicholas\n* Scott Wilson\n* Sebastian Elsner\n* SebTV\n* Seifeddine Dridi\n* Sergey Sharybin\n* Sergio Rojas\n* Shane Ambler\n* Simon Boorer\n* Solomon Boulos\n* SRHMorris\n* Stefan Bruens\n* Stefan Stavrev\n* Thiago Ize\n* Thomas Dinges\n* Thomas Mansencal\n* Till Dechent\n* Tim D. Smith\n* Tim Grant\n* Todica Ionut\n* Tom Knowles\n* Troy James Sobotka\n* Vic P\n* Vinod Khare\n* Vishal Agrawal\n* Vitor Franchi\n* Vlad (Kuzmin) Erium\n* Wayne Arnold\n* Will Rosecrans\n* William Krick\n* Wormszer\n* Xo Wang\n* Yang Yang\n* Yann Lanthony\n* Zach Lewis\n* Ziad Khouri\n* zomgrolf\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 8.9951171875,
          "content": "<!-- SPDX-License-Identifier: CC-BY-4.0 -->\n<!-- Copyright Contributors to the OpenImageIO Project. -->\n\n# OpenImageIO Project Governance\n\nOpenImageIO is a project of the Academy Software Foundation and relies on the\nASWF governance policies, supported by the Linux Foundation.\n\nThere are three primary project roles: Contributors submit code to the\nproject; Committers approve code to be included into the project; and the\nTechnical Steering Committee (TSC) provides overall high-level project\nguidance.\n\n* [Contributors](#Contributors)\n* [Committers](#Committers)\n* [Technical Steering Committee](#Technical-Steering-Committee)\n\n## Contributors\n\nThe OpenImageIO project grows and thrives from assistance from Contributors.\nContributors include anyone in the community who contributes code,\ndocumentation, or other technical artifacts that have been incorporated into\nthe project repository.\n\nAnyone can be a Contributor. You need no formal approval from the project,\nbeyond the legal forms.\n\n### How to Become a Contributor\n\n* Review the coding standards and [contributing\n  guidelines](../CONTRIBUTING.md) to ensure your contribution is in line with\n  the project's coding and styling guidelines.\n\n* Sign the Individual CLA, or if you are employed by an organization that\n  might have any claim to IP you create, have your organization sign the\n  Corporate CLA.\n\n* Submit your code as a PR with the appropriate DCO sign-off on each commit.\n  The easiest way to do this is to ensure that you commit your code with `git\n  commit -s`.\n\n## Committers\n\nProject Committers have merge access on the OpenImageIO GitHub repository\nand are responsible for approving submissions by Contributors.\n\n### Committer Responsibilities\n\nTypical activities of a Committer include:\n\n* Helping users and novice contributors.\n\n* Ensuring a response to questions posted to the\n  [Oiio-dev developer mail list](https://lists.aswf.io/g/oiio-dev)\n\n* Contributing code and documentation changes that improve the project.\n\n* Reviewing and commenting on issues and pull requests.\n\n* Ensuring that changes and new code meet acceptable standards and are in\n  the long-term interest of the project.\n\n* Participation in working groups.\n\n* Merging pull requests.\n\n### How to Become a Committer\n\nAny member of the OpenImageIO community (though typically an existing\nCommitter or TSC member) may nominate an individual making significant and\nvaluable contributions to the OpenImageIO project to become a new Committer.\nTo nominate a new Committer, open an issue in the OpenImageIO repository, send\nmail to the TSC mail list, or raise the issue at a TSC meeting.\n\nThe TSC may periodically review the Committer list to identify inactive\nCommitters. Past Committers are typically given Emeritus status. Emeriti may\nrequest that the TSC restore them to active Committer status.\n\n## Technical Steering Committee\n\nThe Technical Steering Committee (TSC) has final authority over this project.\nAs defined in the project charter, in addition to committer activities, TSC\nresponsibilities also include, but are not limited to:\n\n* Coordinating technical direction of the Project.\n\n* Project governance and contribution policy.\n\n* GitHub repository administration.\n\n* Maintaining the list of additional Committers\n\n* Appointing representatives to work with other open source or open\n  standards communities.\n\n* Discussions, seeking consensus, and where necessary, voting on technical\n  matters relating to the code base that affect multiple projects.\n\n* Coordinating any marketing, events, or communications regarding the\n  project.\n\nWithin the TSC are two elected leadership roles to be held by its members\nand voted on annually. Any TSC member can express interest in serving in a\nrole, or nominate another member to serve. There are no term limits, and one\nperson may hold multiple roles simultaneously. Should a TSC member resign\nfrom a leadership role before their term is complete, a successor shall be\nelected through the standard nomination and voting process to complete the\nremainder of the term. The leadership roles are:\n\n* **Chair**: This position acts as the project manager, organizing meetings\n  and providing oversight to project administration.\n\n* **Chief Architect**: This position makes all the final calls on design and\n  technical decisions, and is responsible for avoiding \"design by committee\"\n  pitfalls.\n\nThe chair role is assumed to rotate annually (though there are no term\nlimits, so the TSC may reelect an existing chair). The chief architect\nposition should be a source of stability and coherent design vision, so the\nTSC is encouraged to choose an architect who can serve for many years and\nonly change architects when it is necessary for the health of the project\nand its community.\n\nAt the time of election, the TSC will also agree upon which of these two\nleaders will serve as the OpenImageIO ASWF (Academy Software Foundation) TAC\n(Technical Advisory Council) representative for the term. This member\nrepresents the project at all ASWF TAC meetings.\n\n### TSC Members\n\nCurrent voting members of the TSC are:\n\n* **Chair and TAC representative**: Daniel Greenstein - Sony Pictures Imageworks (possibly interim?)\n* **Chief Architect**: Larry Gritz - Sony Pictures Imageworks\n* Anton Dukhovnikov - Wētā Digital / Unity\n* Jesse Yurkovich - Blender\n* Joseph Goldstone - ARRI\n* Lewis Wakeland - Disney TV Animation\n* Luke Emrose - Animal Logic (interim?)\n* Martin Davies - LAIKA\n* Robin Rowe - Heroic Robots\n* Thiago Ize - Autodesk\n\n\n### TSC Nomination and Succession\n\nAny proposal for additional members of the TSC may be submitted by Committers,\nTSC members, or other major stakeholders of the OpenImageIO community by\nopening an issue outlining their case or raising the issue at a TSC meeting.\nNew TSC members are accepted or rejected by majority vote of the TSC.\n\nIf a TSC member is for an extended period not regularly participating or\nperforming the responsibilities expected of TSC members, the TSC may by\nmajority vote request an alternate TSC member be submitted by that\norganization, or remove the inactive member from the TSC.\n\nA voting member of the TSC may nominate a successor in the event that such\nvoting member decides to leave the TSC, and the TSC, including the departing\nmember, shall confirm or reject such nomination by a vote. In the event that\nthe departing member's nomination for successor is rejected by vote of the\nTSC, the departing member shall be entitled to continue nominating successors\nuntil one such successor is confirmed by vote of the TSC. If the departing\nmember fails or is unable to nominate a successor, the TSC may nominate one on\nthe departing member's behalf.\n\nTSC membership is presumed to be retained by the individual even if they\nchange employers, provided they remain active in the project. The TSC may take\naction to ensure that organizational stakeholder representation not become\nseverely disproportionate, for example by urging an organization that loses\nits sole TSC representative to nominate a new member, or by limiting the total\nnumber of voting members from any one organization if too many members all\nmove to the same organization.\n\n### TSC Meetings\n\nAny meetings of the TSC are intended to be open to the public, except where\nthere is a reasonable need for privacy. The TSC meets regularly in a voice\nconference call, at a cadence deemed appropriate by the TSC. The TSC Chair\nmoderates the meeting, or appoints another TSC member to moderate in his or\nher absence. Meetings may also be streamed online where appropriate;\nconnection details will be posted to the oiio-dev mail list in advance of the\nscheduled meeting.\n\nThe biweekly TSC meetings can be found on the [ASWF Calendar](https://calendar.openimageio.org),\njust click on the OpenImageIO TSC meeting entries to get the Zoom link.\n\nItems are added to the TSC agenda which are considered contentious or are\nmodifications of governance, contribution policy, TSC membership, or release\nprocess, in addition to topics involving the high-level technical direction\nof the project.\n\nThe intention of the agenda is not to approve or review all patches. That\nshould happen continuously on GitHub and be handled by the larger group of\nCommitters.\n\nAny community member or Contributor can ask that something be reviewed by\nthe TSC at the meeting by logging a GitHub issue. Any Committer, TSC member,\nor the meeting chair can bring the issue to the TSC's attention by applying\nthe `TSC` label.\n\nPrior to each TSC meeting, the meeting chair will share the agenda with\nmembers of the TSC. TSC members can also add items to the agenda at the\nbeginning of each meeting. The meeting chair and the TSC cannot veto or\nremove items.\n\nThe TSC may invite additional persons to participate in a non-voting\ncapacity.\n\nThe meeting chair is responsible for ensuring that minutes are taken and\narchived in the project repository or other designated accessible location.\n\nDue to the challenges of scheduling a global meeting with participants in\nseveral time zones, the TSC will seek to resolve as many agenda items as\npossible outside of meetings on the public mailing list or through GitHub\nissues, discussions, and pull requests.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 17.0263671875,
          "content": "Installation instructions for OpenImageIO\n=========================================\n\n# Table of Contents\n1. [OpenImageIO's Dependencies](#dependencies)\n2. [Installing binaries from package managers](#installing-from-package-managers)\n3. [Building OIIO from source](#building-from-source)\n\n\nDependencies\n------------\n\nNEW or CHANGED MINIMUM dependencies since the last major release are **bold**.\n\n### Required dependencies -- OIIO will not build at all without these\n\n * **C++17 or higher** (also builds with C++20)\n     * The default build mode is C++17. This can be controlled by via the\n       CMake configuration flag: `-DCMAKE_CXX_STANDARD=20`, etc.\n * Compilers: **gcc 9.3** - 14.2, **clang 5** - 19, MSVS 2017 - 2019 (**v19.14\n   and up**), **Intel icc 19+**, Intel OneAPI C++ compiler 2022+.\n * **CMake >= 3.18.2** (tested through 3.31)\n * **Imath >= 3.1** (tested through 3.1.x and main)\n * **OpenEXR >= 3.1** (tested through 3.3 and main)\n * **libTIFF >= 4.0** (tested through 4.7)\n * **OpenColorIO >= 2.2** (tested through 2.4 and main)\n * libjpeg >= 8 (tested through jpeg9e), or **libjpeg-turbo >= 2.1** (tested\n   through 3.0)\n * **[fmtlib](https://github.com/fmtlib/fmt) >= 7.0** (tested through 11.1).\n   If not found at build time, this will be automatically downloaded unless\n   the build sets `-DBUILD_MISSING_FMT=OFF`.\n\n### Optional dependencies -- features may be disabled if not found\n * If you are building the `iv` viewer (which will be disabled if any of\n   these are not found):\n     * Qt5 >= 5.6 (tested through 5.15) or Qt6 (tested through 6.7)\n     * OpenGL\n * If you are building the Python bindings or running the testsuite:\n     * **Python >= 3.7** (tested through 3.13)\n     * **pybind11 >= 2.7** (tested through 2.12)\n     * NumPy\n * If you want support for PNG files:\n     * **libPNG >= 1.6.0** (tested though 1.6.43)\n * If you want support for camera \"RAW\" formats:\n     * **LibRaw >= 0.20** (tested though 0.21.3 and master)\n * If you want support for a wide variety of video formats:\n     * **ffmpeg >= 4.0** (tested through 7.0)\n * If you want support for jpeg 2000 images:\n     * OpenJpeg >= 2.0 (tested through 2.5; we recommend 2.4 or higher\n       for multithreading support)\n * If you want support for OpenVDB files:\n     * OpenVDB >= 9.0 (tested through 11.0). Note that using OpenVDB >= 10.0\n       requires that you compile OIIO with C++17 or higher.\n * If you want to use TBB as the thread pool:\n     * TBB >= 2018 (tested through 2021 and OneTBB)\n * If you want support for converting to and from OpenCV data structures,\n   or for capturing images from a camera:\n     * **OpenCV 4.x** (tested through 4.10)\n * If you want support for GIF images:\n     * **giflib >= 5.0** (tested through 5.2)\n * If you want support for HEIF/HEIC or AVIF images:\n     * **libheif >= 1.11** (1.16 required for correct orientation support,\n       tested through 1.18.2)\n     * libheif must be built with an AV1 encoder/decoder for AVIF support.\n * If you want support for DICOM medical image files:\n     * DCMTK >= 3.6.1 (tested through 3.6.8)\n * If you want support for WebP images:\n     * **WebP >= 1.1** (tested through 1.5)\n * If you want support for Ptex:\n     * Ptex >= 2.3.1 (probably works for older; tested through 2.4.2)\n * If you want to be able to do font rendering into images:\n     * **Freetype >= 2.10.0** (tested through 2.13)\n * We use PugiXML for XML parsing. There is a version embedded in the OIIO\n   tree, but if you want to use an external, system-installed version (as\n   may be required by some software distributions with policies against\n   embedding other projects), then just build with `-DUSE_EXTERNAL_PUGIXML=1`.\n   Any PugiXML >= 1.8 should be fine (we have tested through 1.14).\n\n\n\nSupported platforms at present include Linux (32 and 64 bit),\nMac OS X, and Windows.\n\nOur build system is based upon 'CMake'.  If you don't already have it\ninstalled on your system, you can get it from http://www.cmake.org\n\nIf certain dependencies (robin-map and fmtlib) are not found, their sources\nwill be retrieved and built into libraries, as part of the build process. The \nsources of those dependencies are cloned from their Git repo, hence `git` must \nbe available as a command.\n\nAfter you build OpenImageIO, if you compiled with the `EMBEDPLUGINS=0` flag\nyou will need to set the environment variable `OIIO_LIBRARY_PATH` to point\nto the 'lib' directory where OpenImageIO is installed, or else it will\nnot be able to find the plugins.\n\n\nInstalling from package managers\n================================\n\nIf all you want to do is install the OIIO libraries, headers, and command\nline tools as quickly as possible (don't need OIIO source or any custom\nbuild options), maybe one of these packages managers will do it for you:\n\n* vcpkg (https://github.com/Microsoft/vcpkg)\n    * https://github.com/Microsoft/vcpkg/tree/master/ports/openimageio\n    * `vcpkg install openimageio [tools]`\n    * For a full list of supported build features: `vcpkg search openimageio`\n    * Instructions for building a Python wheel on Windows: \n      https://github.com/Correct-Syntax/py-oiio\n* homebrew (https://github.com/Homebrew/brew)\n    * https://formulae.brew.sh/formula/openimageio\n    * `brew install openimageio`\n* macports (https://github.com/macports/macports-ports)\n    * https://www.macports.org/ports.php?by=name&substr=openimageio\n    * `port install openimageio`\n* fink (https://github.com/fink/fink)\n    * http://pdb.finkproject.org/pdb/package.php/libopenimageio2.1-shlibs\n    * `fink install openimageio`\n* conan (https://github.com/conan-io/conan)\n\nIf these work for you and it's all you need, bingo! You are done.\n\nYou may find this guide to versions carried by distributions helpful:\n\n[![OpenImageIO packaging status](https://repology.org/badge/vertical-allrepos/openimageio.svg?exclude_unsupported=1&columns=3&exclude_sources=modules,site&header=OpenImageIO%20packaging%20status)](https://repology.org/project/openimageio/versions)\n\n\nBuilding from source\n====================\n\n\nDependency control and disabling components\n-------------------------------------------\n\n**Hints for finding dependencies**\n\nFor each external dependency PkgName, our CMake build system will recognize\nthe following optional variable:\n\n    PkgName_ROOT=...\n\nto specify a hint about where the package is installed. It can either be\na CMake variable (set by `-DPkgName_ROOT=...` on the CMake command line),\nor an environment variable of the same name, or a variable setting on the\nMake wrapper (`make PkgName_ROOT=...`).\n\n**Disabling optional dependencies and individual components**\n\n`USE_PYTHON=0` : Omits building the Python bindings.\n\n`OIIO_BUILD_TESTS=0` : Omits building tests (you probably don't need them\nunless you are a developer of OIIO or want to verify that your build\npasses all tests).\n\n`OIIO_BUILD_TOOLS=0` : Disables building all the command line tools (such\nas iinfo, oiiotool, maketx, etc.).\n\n`ENABLE_toolname=0` : Disables building the named command line tool (iinfo,\noiiotool, etc.). This works both as a CMake variable and also as an\nenvironment variable.\n\n`ENABLE_formatname=0` : Disables building support for the particular named\nfile format (jpeg, fits, png, etc.). This works both as a CMake variable and\nalso as an environment variable.\n\n`ENABLE_PkgName=0` : Disables use of an *optional* dependency (such as\nFFmpeg, OpenVDB, Webp, etc.) -- even if the dependency is found on the\nsystem. This will obviously disable any functionality that requires the\ndependency. This works both as a CMake variable and\nalso as an environment variable.\n\n\n\nBuilding OpenImageIO on Linux or OS X\n-------------------------------------\n\nThe following dependencies must be installed to build the core of\nOpenImageIO:\n* libjpeg\n* libtiff\n* libpng\n* Imath\n* OpenEXR\n\nThese can be installed using the standard package managers on your system.\nOptionally, to build the image viewing tools, you will need Qt and OpenGL.\n\nOn OS X, these dependencies can be installed using Fink, MacPorts or\nHomebrew.  After installation of any of these package installers, use\nthe \"fink\", \"port\" or \"brew\" commands (respectively) to install the\ndependencies (e.g. \"fink install libpng16\", \"port install qt4-mac\" or \"brew\nupdate; brew doctor; brew install qt\") before invoking make as described\nbelow.\n\nOn OS X, Fink can also be used to directly compile and install the OpenImageIO\ntools directly with the command \"fink install openimageio-tools\".  On OS X\nreleases where Fink has a binary distribution (10.8, 10.9, and 10.10 as\nof 2015), the command \"apt-get install openimageio-tools\" will fetch\nprebuilt binaries.\n\nDependent libraries can be installed in either the system default\nlocations or in custom directories.  Libraries installed in custom\ndirectories must notify the CMake system using environment variables.\nFor example, set QTDIR to point at the root of the Qt library location\nso that CMake can find it (see CMake configuration output).\n\n**On Linux and OS X, you can build from source from the top-level\ndirectory by just typing 'make'.  (Yes, we have a 'make' wrapper around\nour CMake build, it simplifies things.)**\n\nDuring the make, various temporary files (object files, etc.) will\nbe put in build/PLATFORM, where 'PLATFORM' will be the name of the\nplatform you are building for (e.g., linux, linux64, macosx).\n\nThe result of the make will be a full binary distribution in\ndist/PLATFORM.\n\nMake targets you should know about:\n\n|  Target           |  Command                                           |\n| ----------------- | -------------------------------------------------- |\n|  make             |  Build an optimized distro in dist/PLATFORM, with temp files created while building in build/PLATFORM. |\n|  make debug       |  Build a debugging (symbols, not stripped) distro, will end up in dist/PLATFORM.debug |\n|  make clean       |  Get rid of all the temporary files in build/PLATFORM |\n|  make realclean   |  Get rid of both build/PLATFORM and dist/PLATFORM     |\n|  make nuke        |  Get rid of all build/ and dist/, for all platforms   |\n|  make profile     |  Build a profilable version dist/PLATFORM.profile     |\n|  make help        |  Print all the make options                           |\n\nAdditionally, a few helpful modifiers alter some build-time options:\n\n|  Target                   |  Command                                       |\n| ------------------------- | ---------------------------------------------- |\n| make VERBOSE=1 ...        |  Show all compilation commands                 |\n| make STOP_ON_WARNING=0    |  Do not stop building if compiler warns        |\n| make EMBEDPLUGINS=0 ...   |  Don't compile the plugins into libOpenImageIO |\n| make USE_OPENGL=0 ...     |  Skip anything that needs OpenGL               |\n| make USE_QT=0 ...         |  Skip anything that needs Qt                   |\n| make MYCC=xx MYCXX=yy ... |  Use custom compilers                          |\n| make USE_PYTHON=0 ...     |  Don't build the Python binding                |\n| make BUILD_SHARED_LIBS=0  |  Build static library instead of shared        |\n| make LINKSTATIC=1 ...     |  Link with static external libraries when possible |\n| make SOVERSION=nn ...     |  Include the specified major version number in the shared object metadata |\n| make NAMESPACE=name       |   Wrap everything in another namespace         |\n\nThe command 'make help' will list all possible options.\n\nYou can also ignore the top level Makefile wrapper, and instead use\nCMake directly:\n\n    cmake -B build -S .\n    cmake --build build --target install\n\nIf the compile stops because of warnings, try again with\n\n    make nuke\n    make STOP_ON_WARNING=0\n\nor, if you are using CMake directly,\n\n    rm -rf build\n    cmake -B build -S . -DSTOP_ON_WARNING=0\n    cmake --build build --target install\n\n\n\n\nBuilding on Windows\n-------------------\n\n**Method 1 - from source**\n\nYou will need to have Git, CMake and Visual Studio installed.\n\nThe minimal set of dependencies for OIIO is: zlib, libTIFF, Imath, OpenEXR, and libjpeg or libjpeg-turbo. If you have them built somewhere then you skip\nthe section below, and will only have to point OIIO build process so their locations.\n\n* zlib: this will build it, and then delete the non-static library, so they don't get picked up:\n  ```\n  cd {ZLIB_ROOT}\n  git clone https://github.com/madler/zlib .\n  cmake -S . -B build -DCMAKE_INSTALL_PREFIX=.\n  cmake --build build --config Release --target install\n  del build\\Release\\zlib.lib\n  ```\n* libTIFF:\n  ```\n  cd {TIFF_ROOT}\n  git clone https://gitlab.com/libtiff/libtiff.git .\n  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=.\n  cmake --build build --config Release --target install\n  ```\n* libjpeg-turbo:\n  ```\n  cd {JPEG_ROOT}\n  git clone https://github.com/libjpeg-turbo/libjpeg-turbo .\n  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_SHARED=OFF -DCMAKE_INSTALL_PREFIX=.\n  cmake --build build --config Release --target install\n  ```\n* OpenEXR: you'll have to point it to your `{ZLIB_ROOT}` location from the above. If copy-pasting the multi-line command (with lines ending in `^`) into\n  cmd.exe prompt, make sure to copy all the lines at once.\n  ```\n  cd {EXR_ROOT}\n  git clone https://github.com/AcademySoftwareFoundation/openexr .\n  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=dist ^\n    -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DOPENEXR_BUILD_TOOLS=OFF ^\n    -DOPENEXR_INSTALL_TOOLS=OFF -DOPENEXR_INSTALL_EXAMPLES=OFF ^\n    -DZLIB_ROOT={ZLIB_ROOT}\\build\n  cmake --build build --target install --config Release\n  ```\n\nNow get the OIIO source and do one-time CMake configuration step. Replace `{*_ROOT}` below with folders where you have put the 3rd party\ndependencies.\n\nNote: For the `Imath_LIBRARY`, you might need to correct the `Imath-*.lib` file name that was built on your machine.\n```\ncd {OIIO_ROOT}\ngit clone https://github.com/AcademySoftwareFoundation/OpenImageIO .\ncmake -S . -B build -DVERBOSE=ON -DCMAKE_BUILD_TYPE=Release ^\n  -DZLIB_ROOT={ZLIB_ROOT}\\build ^\n  -DTIFF_ROOT={TIFF_ROOT} ^\n  -DOpenEXR_ROOT={EXR_ROOT}\\dist ^\n  -DImath_DIR={EXR_ROOT}\\dist\\lib\\cmake\\Imath ^\n  -DImath_INCLUDE_DIR={EXR_ROOT}\\dist\\include\\Imath ^\n  -DImath_LIBRARY={EXR_ROOT}\\dist\\lib\\Imath-3_2.lib ^\n  -DJPEG_ROOT={JPEG_ROOT} ^\n  -Dlibjpeg-turbo_ROOT={JPEG_ROOT} ^\n  -DUSE_PYTHON=0 -DUSE_QT=0 -DBUILD_SHARED_LIBS=0 -DLINKSTATIC=1\n```\n\nThis will produce `{OIIO_ROOT}/build/OpenImageIO.sln` that can be opened in Visual Studio IDE. Note that the solution will be\nonly for the Intel x64 architecture only; and will only target \"min-spec\" (SSE2) SIMD instruction set.\n\nOptional packages that OIIO can use (e.g. libpng, Qt) can be build and pointed to OIIO build process in a similar way.\n\nIn Visual Studio, open `{OIIO_ROOT}/build/OpenImageIO.sln` and pick Release build configuration. If you pick Debug, you\nmight need to re-run the CMake command above with `-DCMAKE_BUILD_TYPE=Debug` and also have all the dependencies above built\nwith `Debug` config too.\n\nThe main project that builds the library is `OpenImageIO`. The library is built into `{OIIO_ROOT}/build/lib/{CONFIG}` folder.\nThe various OIIO command line tools (`oiiotool`, `iconvert` etc.) are projects under Tools subfolder in VS IDE solution explorer.\nThey all build into `{OIIO_ROOT}/build/bin/{CONFIG}` folder.\n\nThere's a `CMakePredefinedTargets/INSTALL` project that you can build to produce a `{OIIO_ROOT}/dist` folder with `bin`, `include`,\n`lib`, `share` folders as an OIIO distribution.\n\nThe instructions above use options for building statically-linked OIIO library and tools. Adjust options passed to CMake to\nproduce a dynamic-linked version.\n\n\n**Method 2 - Using vcpkg**\n\n1. Visit Microsoft's vcpkg GitHub page: https://github.com/Microsoft/vcpkg. Also note that the openimageio package is located here: https://github.com/Microsoft/vcpkg/tree/master/ports/openimageio\n\n2. Follow vcpkg installation instructions and complete the install. Please note vcpkg has its own list of prerequisites listed on their page.\n\n3. Execute the PowerShell command from where vcpkg is located in directory. ``vcpkg install openimageio``\n\nTest Images\n-----------\n\nThere are several projects containing sets of sample images for testing\nOpenImageIO.\n\nThey are kept separate in order to make the main source code\ntree smaller and simpler for people who don't need the test suite.\nAdditionally, some of these packages are maintained outside the OpenImageIO\nproject by their respective organizations.\n\n| Download | Directory Placement | Notes |\n| --- | --- | --- |\n| git clone https://github.com/AcademySoftwareFoundation/OpenImageIO-images.git | `<path>/../oiio-images` | CMake will download if not present |\n| git clone https://github.com/AcademySoftwareFoundation/openexr-images.git | `<path>/../openexr-images` | CMake will download if not present |\n| http://www.cv.nrao.edu/fits/data/tests/ | `<path>/../fits-images` | Manual download required |\n| https://www.itu.int/net/ITU-T/sigdb/speimage/ImageForm-s.aspx?val=10100803 | `<path>/../j2kp4files_v1_5` | Manual download required |\nWhere `<path>` is the location of the main `OpenImageIO` repository.\n\nYou do not need any of these packages in order to build or use\nOpenImageIO. But if you are going to contribute to OpenImageIO\ndevelopment, you probably want them, since it is required for executing\nOpenImageIO's test suite (when you run \"make test\").\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 13.5712890625,
          "content": "#########################################################################\n#\n# This is the master makefile.\n# Here we put all the top-level make targets, platform-independent\n# rules, etc. This is just a fancy wrapper around cmake, but for many\n# people, it's a lot simpler to just type \"make\" and have everything\n# happen automatically.\n#\n# Run 'make help' to list helpful targets.\n#\n# Copyright Contributors to the OpenImageIO project.\n# SPDX-License-Identifier: Apache-2.0\n# https://github.com/AcademySoftwareFoundation/OpenImageIO\n#########################################################################\n\n\n.PHONY: all debug profile clean realclean nuke doxygen\n\nworking_dir\t:= ${shell pwd}\n\nMY_MAKE_FLAGS ?=\nMY_NINJA_FLAGS ?=\nMY_CMAKE_FLAGS ?=\nBUILDSENTINEL ?= Makefile\nNINJA ?= ninja\nCMAKE ?= cmake\nCMAKE_BUILD_TYPE ?= Release\n\nbuild_dir ?= build\ndist_dir  ?= dist\n\nINSTALL_PREFIX ?= ${working_dir}/${dist_dir}\n\nVERBOSE ?= ${SHOWCOMMANDS}\nifneq (${VERBOSE},)\nMY_MAKE_FLAGS += VERBOSE=${VERBOSE}\nMY_CMAKE_FLAGS += -DVERBOSE:BOOL=${VERBOSE} --log-level=VERBOSE\nifneq (${VERBOSE},0)\n\tMY_NINJA_FLAGS += -v\n\tTEST_FLAGS += -V\nendif\n$(info dist_dir = ${dist_dir})\n$(info INSTALL_PREFIX = ${INSTALL_PREFIX})\nendif\n\nifneq (${EMBEDPLUGINS},)\nMY_CMAKE_FLAGS += -DEMBEDPLUGINS:BOOL=${EMBEDPLUGINS}\nendif\n\nifneq (${OIIO_THREAD_ALLOW_DCLP},)\nMY_CMAKE_FLAGS += -DOIIO_THREAD_ALLOW_DCLP:BOOL=${OIIO_THREAD_ALLOW_DCLP}\nendif\n\nifneq (${NAMESPACE},)\nMY_CMAKE_FLAGS += -DOIIO_NAMESPACE:STRING=${NAMESPACE}\nendif\n\nifneq (${USE_PYTHON},)\nMY_CMAKE_FLAGS += -DUSE_PYTHON:BOOL=${USE_PYTHON}\nendif\n\nifneq (${PYTHON_VERSION},)\nMY_CMAKE_FLAGS += -DPYTHON_VERSION:STRING=${PYTHON_VERSION}\nendif\n\nifneq (${PYLIB_LIB_PREFIX},)\nMY_CMAKE_FLAGS += -DPYLIB_LIB_PREFIX:BOOL=${PYLIB_LIB_PREFIX}\nendif\n\nifneq (${PYLIB_INCLUDE_SONAME},)\nMY_CMAKE_FLAGS += -DPYLIB_INCLUDE_SONAME:BOOL=${PYLIB_INCLUDE_SONAME}\nendif\n\nifneq (${USE_EXTERNAL_PUGIXML},)\nMY_CMAKE_FLAGS += -DUSE_EXTERNAL_PUGIXML:BOOL=${USE_EXTERNAL_PUGIXML}\nendif\n\nifneq (${OPENEXR_ROOT},)\nMY_CMAKE_FLAGS += -DOPENEXR_ROOT:STRING=${OPENEXR_ROOT}\nendif\n\nifneq (${NUKE_VERSION},)\nMY_CMAKE_FLAGS += -DNUKE_VERSION:STRING=${NUKE_VERSION}\nendif\n\nifneq (${STOP_ON_WARNING},)\nMY_CMAKE_FLAGS += -DSTOP_ON_WARNING:BOOL=${STOP_ON_WARNING}\nendif\n\nifneq (${BUILD_SHARED_LIBS},)\nMY_CMAKE_FLAGS += -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}\nendif\n\nifneq (${LINKSTATIC},)\nMY_CMAKE_FLAGS += -DLINKSTATIC:BOOL=${LINKSTATIC}\nendif\n\nifneq (${OIIO_BUILD_TOOLS},)\nMY_CMAKE_FLAGS += -DOIIO_BUILD_TOOLS:BOOL=${OIIO_BUILD_TOOLS}\nendif\n\nifneq (${OIIO_BUILD_TESTS},)\nMY_CMAKE_FLAGS += -DOIIO_BUILD_TESTS:BOOL=${OIIO_BUILD_TESTS}\nendif\n\nifneq (${SOVERSION},)\nMY_CMAKE_FLAGS += -DSOVERSION:STRING=${SOVERSION}\nendif\n\nifneq (${OIIO_LIBNAME_SUFFIX},)\nMY_CMAKE_FLAGS += -DOIIO_LIBNAME_SUFFIX:STRING=${OIIO_LIBNAME_SUFFIX}\nendif\n\nifneq (${BUILD_OIIOUTIL_ONLY},)\nMY_CMAKE_FLAGS += -DBUILD_OIIOUTIL_ONLY:BOOL=${BUILD_OIIOUTIL_ONLY}\nendif\n\nifdef DEBUG\nCMAKE_BUILD_TYPE=Debug\nendif\n\nifdef PROFILE\nCMAKE_BUILD_TYPE=RelWithDebInfo\nendif\n\nifneq (${MYCC},)\nMY_CMAKE_FLAGS += -DCMAKE_C_COMPILER:STRING=\"${MYCC}\"\nendif\nifneq (${MYCXX},)\nMY_CMAKE_FLAGS += -DCMAKE_CXX_COMPILER:STRING=\"${MYCXX}\"\nendif\n\nifneq (${USE_CPP},)\nMY_CMAKE_FLAGS += -DCMAKE_CXX_STANDARD=${USE_CPP}\nendif\n\nifneq (${CMAKE_CXX_STANDARD},)\nMY_CMAKE_FLAGS += -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}\nendif\n\nifneq (${USE_LIBCPLUSPLUS},)\nMY_CMAKE_FLAGS += -DUSE_LIBCPLUSPLUS:BOOL=${USE_LIBCPLUSPLUS}\nendif\n\nifneq (${GLIBCXX_USE_CXX11_ABI},)\nMY_CMAKE_FLAGS += -DGLIBCXX_USE_CXX11_ABI=${GLIBCXX_USE_CXX11_ABI}\nendif\n\nifneq (${EXTRA_CPP_ARGS},)\nMY_CMAKE_FLAGS += -DEXTRA_CPP_ARGS:STRING=\"${EXTRA_CPP_ARGS}\"\nendif\n\nifneq (${USE_SIMD},)\nMY_CMAKE_FLAGS += -DUSE_SIMD:STRING=\"${USE_SIMD}\"\nendif\n\nifneq (${TEX_BATCH_SIZE},)\nMY_CMAKE_FLAGS += -DTEX_BATCH_SIZE:STRING=\"${TEX_BATCH_SIZE}\"\nendif\n\nifneq (${TEST},)\nTEST_FLAGS += -R ${TEST}\nendif\n\nifneq (${USE_CCACHE},)\nMY_CMAKE_FLAGS += -DUSE_CCACHE:BOOL=${USE_CCACHE}\nendif\n\nifeq (${USE_NINJA},1)\nMY_CMAKE_FLAGS += -G Ninja\nBUILDSENTINEL := build.ninja\nendif\n\nifneq (${UNITY},)\n  MY_CMAKE_FLAGS += -DCMAKE_UNITY_BUILD=ON -DCMAKE_UNITY_BUILD_MODE=${UNITY}\nendif\n\nifeq (${CODECOV},1)\n  CMAKE_BUILD_TYPE=Debug\n  MY_CMAKE_FLAGS += -DCODECOV:BOOL=${CODECOV}\nendif\n\nifneq (${CLANG_TIDY},)\n  MY_CMAKE_FLAGS += -DCLANG_TIDY:BOOL=1\nendif\nifneq (${CLANG_TIDY_CHECKS},)\n  MY_CMAKE_FLAGS += -DCLANG_TIDY_CHECKS:STRING=${CLANG_TIDY_CHECKS}\nendif\nifneq (${CLANG_TIDY_ARGS},)\n  MY_CMAKE_FLAGS += -DCLANG_TIDY_ARGS:STRING=${CLANG_TIDY_ARGS}\nendif\nifneq (${CLANG_TIDY_FIX},)\n  MY_CMAKE_FLAGS += -DCLANG_TIDY_FIX:BOOL=${CLANG_TIDY_FIX}\n  MY_NINJA_FLAGS += -j 1\n  # N.B. when fixing, you don't want parallel jobs!\nendif\n\nifneq (${CLANG_FORMAT_INCLUDES},)\n  MY_CMAKE_FLAGS += -DCLANG_FORMAT_INCLUDES:STRING=${CLANG_FORMAT_INCLUDES}\nendif\nifneq (${CLANG_FORMAT_EXCLUDES},)\n  MY_CMAKE_FLAGS += -DCLANG_FORMAT_EXCLUDES:STRING=${CLANG_FORMAT_EXCLUDES}\nendif\n\n#$(info MY_CMAKE_FLAGS = ${MY_CMAKE_FLAGS})\n#$(info MY_MAKE_FLAGS = ${MY_MAKE_FLAGS})\n\n#########################################################################\n\n\n\n\n#########################################################################\n# Top-level documented targets\n\nall: install\n\n# 'make debug' is implemented via recursive make setting DEBUG\ndebug:\n\t${MAKE} DEBUG=1 --no-print-directory\n\n# 'make profile' is implemented via recursive make setting PROFILE\nprofile:\n\t${MAKE} PROFILE=1 --no-print-directory\n\n# 'make config' constructs the build directory and runs 'cmake' there,\n# generating makefiles to build the project.  For speed, it only does this when\n# ${build_dir}/Makefile doesn't already exist, in which case we rely on the\n# cmake generated makefiles to regenerate themselves when necessary.\nconfig:\n\t@ (if [ ! -e ${build_dir}/${BUILDSENTINEL} ] ; then \\\n\t\t${CMAKE} -E make_directory ${build_dir} ; \\\n\t\tcd ${build_dir} ; \\\n\t\t${CMAKE} -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} \\\n\t\t\t -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \\\n\t\t\t ${MY_CMAKE_FLAGS} ${working_dir} ; \\\n\t fi)\n\n\n# 'make build' does a basic build (after first setting it up)\nbuild: config\n\t@ ( cd ${build_dir} ; \\\n\t    ${CMAKE} --build . --config ${CMAKE_BUILD_TYPE} \\\n\t  )\n\n# 'make install' builds everthing and installs it in 'dist'.\n# Suppress pointless output from docs installation.\ninstall: build\n\t@ ( cd ${build_dir} ; \\\n\t    ${CMAKE} --build . --target install --config ${CMAKE_BUILD_TYPE} | grep -v '^-- \\(Installing\\|Up-to-date\\|Set runtime path\\)' \\\n\t  )\n\n# 'make package' builds everything and then makes an installable package\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\npackage: install\n\t@ ( cd ${build_dir} ; \\\n\t    ${CMAKE} --build . --target package --config ${CMAKE_BUILD_TYPE} \\\n\t  )\n\n# 'make package_source' makes an installable source package\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\npackage_source: install\n\t@ ( cd ${build_dir} ; \\\n\t    ${CMAKE} --build . --target package_source --config ${CMAKE_BUILD_TYPE} \\\n\t  )\n\n# 'make clang-format' runs clang-format on all source files (if it's installed)\nclang-format: config\n\t@ ( cd ${build_dir} ; \\\n\t    ${CMAKE} --build . --target clang-format --config ${CMAKE_BUILD_TYPE} \\\n\t  )\n\n\n# DEPRECATED: 'make dist' is just a synonym for 'make install'\ndist : install\n\nTEST_FLAGS += --force-new-ctest-process --output-on-failure\n\n# 'make test' does a full build and then runs all tests\ntest: build\n\t@ ${CMAKE} -E cmake_echo_color --switch=$(COLOR) --cyan \"Running tests ${TEST_FLAGS}...\"\n\t@ ( cd ${build_dir} ; \\\n\t    PYTHONPATH=${PWD}/${build_dir}/lib/python/site-packages \\\n\t    ctest -E broken ${TEST_FLAGS} \\\n\t  )\n\t@ ( if [[ \"${CODECOV}\" == \"1\" ]] ; then \\\n\t      cd ${build_dir} ; \\\n\t      lcov -b . -d . -c -o cov.info ; \\\n\t      lcov --remove cov.info \"/usr*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/usr/incude\" -o cov.info ; \\\n\t      lcov --remove cov.info \"/Library/Developer/*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/detail/pugixml/*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/detail/fmt/*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/detail/farmhash.h\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/v1/*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/ext/robin-map/*\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/kissfft.hh\" -o cov.info ; \\\n\t      lcov --remove cov.info \"*/stb_sprintf.h\" -o cov.info ; \\\n\t      genhtml -o ../_coverage -t \"Test coverage\" --num-spaces 4 cov.info ; \\\n\t  fi )\n\n# 'make testall' does a full build and then runs all tests (even the ones\n# that are expected to fail on some platforms)\ntestall: build\n\t${CMAKE} -E cmake_echo_color --switch=$(COLOR) --cyan \"Running all tests ${TEST_FLAGS}...\"\n\t( cd ${build_dir} ; PYTHONPATH=${PWD}/${build_dir}/lib/python/site-packages ctest ${TEST_FLAGS} )\n\n# 'make clean' clears out the build directory for this platform\nclean:\n\t${CMAKE} -E remove_directory ${build_dir}\n\n# 'make realclean' clears out both build and dist directories for this platform\nrealclean: clean\n\t${CMAKE} -E remove_directory ${dist_dir}\n\n# DEPRECATED: 'make nuke' blows away the build and dist areas for all platforms\nnuke: realclean\n\ndoxygen:\n\tdoxygen src/doc/Doxyfile\n\n#########################################################################\n\n\n\n# 'make help' prints important make targets\nhelp:\n\t@echo \"Targets:\"\n\t@echo \"  make              Build and install optimized binaries and libraries\"\n\t@echo \"  make install      Build and install optimized binaries and libraries\"\n\t@echo \"  make build        Build only (no install) optimized binaries and libraries\"\n\t@echo \"  make config       Just configure cmake, don't build\"\n\t@echo \"  make debug        Build and install unoptimized with symbols\"\n\t@echo \"  make profile      Build and install for profiling\"\n\t@echo \"  make clean        Remove the temporary files in ${build_dir}\"\n\t@echo \"  make realclean    Remove both ${build_dir} AND ${dist_dir}\"\n\t@echo \"  make test         Run tests\"\n\t@echo \"  make testall      Run all tests, even broken ones\"\n\t@echo \"  make clang-format Run clang-format on all the source files\"\n\t@echo \"\"\n\t@echo \"Helpful modifiers:\"\n\t@echo \"  C++ compiler and build process:\"\n\t@echo \"      VERBOSE=1                Show all compilation commands\"\n\t@echo \"      STOP_ON_WARNING=0        Do not stop building if compiler warns\"\n\t@echo \"      MYCC=xx MYCXX=yy         Use custom compilers\"\n\t@echo \"      CMAKE_CXX_STANDARD=20    C++ standard to build with (default is 17)\"\n\t@echo \"      USE_LIBCPLUSPLUS=1       For clang, use libc++\"\n\t@echo \"      GLIBCXX_USE_CXX11_ABI=1  For gcc, use the new string ABI\"\n\t@echo \"      EXTRA_CPP_ARGS=          Additional args to the C++ command\"\n\t@echo \"      USE_NINJA=1              Set up Ninja build (instead of make)\"\n\t@echo \"      USE_CCACHE=0             Disable ccache (even if available)\"\n\t@echo \"      UNITY=BATCH              Do a 'Unity' build (BATCH or GROUP or nothing)\"\n\t@echo \"      CODECOV=1                Enable code coverage tests\"\n\t@echo \"      SANITIZE=name1,...       Enable sanitizers (address, leak, thread, undefined)\"\n\t@echo \"      CLANG_TIDY=1             Run clang-tidy on all source (can be modified\"\n\t@echo \"                                  by CLANG_TIDY_ARGS=... and CLANG_TIDY_FIX=1\"\n\t@echo \"      CLANG_FORMAT_INCLUDES=... CLANG_FORMAT_EXCLUDES=...\"\n\t@echo \"                               Customize files for 'make clang-format'\"\n\t@echo \"  Linking and libraries:\"\n\t@echo \"      SOVERSION=nn             Include the specified major version number \"\n\t@echo \"                                  in the shared object metadata\"\n\t@echo \"      OIIO_LIBNAME_SUFFIX=name Optional name appended to library names\"\n\t@echo \"      BUILD_SHARED_LIBS=0      Build static library instead of shared\"\n\t@echo \"      LINKSTATIC=1             Link with static external libs when possible\"\n\t@echo \"  Dependency hints:\"\n\t@echo \"      For each dependeny Foo, defining ENABLE_Foo=0 disables it, even\"\n\t@echo \"      if found. And you can hint where to find it with Foo_ROOT=path\"\n\t@echo \"      Note that it is case sensitive! The list of package names is:\"\n\t@echo \"          DCMTK  FFmpeg  Freetype  GIF  JPEGTurbo\"\n\t@echo \"          LibRaw  OpenColorIO  OpenCV  OpenGL  OpenJpeg  OpenVDB\"\n\t@echo \"          PTex  R3DSDK  TBB  TIFF  Webp\"\n\t@echo \"  Finding and Using Dependencies:\"\n\t@echo \"      OPENEXR_ROOT=path        Custom OpenEXR installation\"\n\t@echo \"      USE_EXTERNAL_PUGIXML=1   Use the system PugiXML, not the one in OIIO\"\n\t@echo \"      USE_QT=0                 Skip anything that needs Qt\"\n\t@echo \"      USE_PYTHON=0             Don't build the Python binding\"\n\t@echo \"      PYTHON_VERSION=3.9       Specify the Python version\"\n\t@echo \"      USE_NUKE=0               Don't build Nuke plugins\"\n\t@echo \"      Nuke_ROOT=path           Custom Nuke installation\"\n\t@echo \"      NUKE_VERSION=ver         Custom Nuke version\"\n\t@echo \"  OIIO build-time options:\"\n\t@echo \"      INSTALL_PREFIX=path      Set installation prefix (default: ./${INSTALL_PREFIX})\"\n\t@echo \"      NAMESPACE=name           Override namespace base name (default: OpenImageIO)\"\n\t@echo \"      EMBEDPLUGINS=0           Don't compile the plugins into libOpenImageIO\"\n\t@echo \"      OIIO_THREAD_ALLOW_DCLP=0 Don't allow threads.h to use DCLP\"\n\t@echo \"      OIIO_BUILD_TOOLS=0       Skip building the command-line tools\"\n\t@echo \"      OIIO_BUILD_TESTS=0       Skip building the unit tests\"\n\t@echo \"      BUILD_OIIOUTIL_ONLY=1    Build *only* libOpenImageIO_Util\"\n\t@echo \"      USE_SIMD=arch            Build with SIMD support (comma-separated choices:\"\n\t@echo \"                                  0, sse2, sse3, ssse3, sse4.1, sse4.2, f16c,\"\n\t@echo \"                                  avx, avx2, avx512f)\"\n\t@echo \"      TEX_BATCH_SIZE=16        Override TextureSystem SIMD batch size\"\n\t@echo \"  make test, extra options:\"\n\t@echo \"      TEST=regex               Run only tests matching the regex\"\n\t@echo \"\"\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.1044921875,
          "content": "<!-- SPDX-License-Identifier: CC-BY-4.0 -->\n<!-- Copyright Contributors to the OpenImageIO Project. -->\n<p align=\"center\">\n  <img src=\"ASWF/logos/openimageio-horizontal-gradient.png\">\n</p>\n\n[![License](https://img.shields.io/badge/license-Apache2.0-blue.svg?style=flat-square)](https://github.com/AcademySoftwareFoundation/OpenImageIO/blob/main/LICENSE.md)\n[![CI](https://github.com/AcademySoftwareFoundation/OpenImageIO/actions/workflows/ci.yml/badge.svg)](https://github.com/AcademySoftwareFoundation/OpenImageIO/actions/workflows/ci.yml)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2694/badge)](https://bestpractices.coreinfrastructure.org/projects/2694)\n[![latest packaged version(s)](https://repology.org/badge/latest-versions/openimageio.svg)](https://repology.org/project/openimageio/versions)\n\n\nIntroduction\n------------\n\n**Mission statement**: OpenImageIO is a toolset for reading, writing, and\nmanipulating image files of any image file format relevant to VFX / animation\nvia a format-agnostic API with a feature set, scalability, and robustness\nneeded for feature film production.\n\nThe primary target audience for OIIO is VFX studios and developers of\ntools such as renderers, compositors, viewers, and other image-related\nsoftware you'd find in a production pipeline.\n\nOpenImageIO consists of:\n\n* Simple but powerful ImageInput and ImageOutput APIs that provide\n  an abstraction for reading and writing image files of nearly any\n  format, without the calling application needing to know any of the\n  details of these file formats, and indeed without the calling\n  application needing to be aware of which formats are available.\n\n* A library that manages subclasses of ImageInput and ImageOutput that\n  implement I/O from specific file formats, with each file format's\n  implementation stored as a plug-in.  Therefore, an application using\n  OpenImageIO's APIs can read and write any image file for which a\n  plugin can be found at runtime.\n\n* Plugins implementing I/O for several popular image file formats,\n  including TIFF, JPEG/JFIF, JPEG XL, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa,\n  JPEG-2000, RMan Zfile, FITS, DDS, Softimage PIC, PNM, DPX, Cineon,\n  IFF, OpenVDB, Ptex, Photoshop PSD, Wavefront RLA, SGI, WebP,\n  GIF, DICOM, HEIF/HEIC/AVIF, many \"RAW\" digital camera formats, and a variety\n  of movie formats (readable as individual frames).  More are being developed\n  all the time.\n\n* Several command line image tools based on these classes, including\n  oiiotool (command-line format conversion and image processing), iinfo\n  (print detailed info about images), iconvert (convert among formats,\n  data types, or modify metadata), idiff (compare images), igrep (search\n  images for matching metadata), and iv (an image viewer). Because these\n  tools are based on ImageInput/ImageOutput, they work with any image\n  formats for which ImageIO plugins are available.\n\n* An ImageCache class that transparently manages a cache so that it\n  can access truly vast amounts of image data (tens of thousands of\n  image files totaling multiple TB) very efficiently using only a tiny\n  amount (tens of megabytes at most) of runtime memory.\n\n* A TextureSystem class that provides filtered MIP-map texture\n  lookups, atop the nice caching behavior of ImageCache.  This is used\n  in commercial renderers and has been used on many large VFX and\n  animated films.\n\n* ImageBuf and ImageBufAlgo functions -- a simple class for storing\n  and manipulating whole images in memory, and a collection of the\n  most useful computations you might want to do involving those images,\n  including many image processing operations.\n\n* Python bindings for all of the major APIs.\n\n\n\n🏢 Project administration and Licensing\n---------------------------------------\n\nOpenImageIO is (c) Copyright Contributors to the OpenImageIO project.\n\nFor original code, we use the [Apache-2.0 license](LICENSE.md), and for\ndocumentation, the [Creative Commons Attribution 4.0 Unported\nLicense](http://creativecommons.org/licenses/by/4.0/). In 2023 we asked\nhistorical users to [relicense](RELICENSING.md) from the original BSD-3-clause\nlicense to Apache-2.0, and over 99.86% of lines of code have been relicensed\nto Apache-2.0. A small amount of code incorporated into this repository from\nother projects are covered by compatible [third-party open source\nlicenses](THIRD-PARTY.md).\n\nThe OpenImageIO project is part of the [Academy Software\nFoundation](https://www.aswf.io/), a part of the Linux Foundation formed in\ncollaboration with the Academy of Motion Picture Arts and Sciences. The\n[Technical Charter](aswf/Technical-Charter.md) and [Project\nGovernance](GOVERNANCE.md) explain how the project is run, who makes\ndecisions, etc. Please be aware of our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n\n💁 User Documentation\n---------------------\n\n[OpenImageIO Documentation](https://docs.openimageio.org)\nis the best place to start if you are interested in how to use OpenImageIO,\nits APIs, its component programs (once they are built). There is also a [PDF\nversion](https://readthedocs.org/projects/openimageio/downloads/pdf/latest/).\n\nAdditional resources:\n\n- [User quick start](docs/QuickStart.md) is a quick example of using\n  OpenImageIO in Python, C++, and the command line.\n\n\n👷 Building and installing OpenImageIO\n--------------------------------------\n- [Build and installation instructions](INSTALL.md) for OpenImageIO. Such\n  as it is. This could use some work, particularly for Windows.\n\n\n🚑 Contact & reporting problems\n-------------------------------\n\nSimple \"how do I...\", \"I'm having trouble\", or \"is this a bug\" questions are\nbest asked on the [oiio-dev developer mail\nlist](https://lists.aswf.io/g/oiio-dev). That's where the most people will see\nit and potentially be able to answer your question quickly (more so than a GH\n\"issue\"). For quick questions, you could also try the [ASWF\nSlack](https://slack.aswf.io) `#openimageio` channel.\n\nBugs, build problems, and discovered vulnerabilities that you are relatively\ncertain is a legit problem in the code, and **for which you can give clear\ninstructions for how to reproduce**, should be [reported as\nissues](https://github.com/AcademySoftwareFoundation/OpenImageIO/issues).\n\nIf confidentiality precludes a public question or issue, you may contact us\nprivately at [info@openimageio.org](info@openimageio.org), or for\nsecurity-related issues [security@openimageio.org](security@openimageio.org).\n\n\n🔧 Contributing and developer documentation\n-------------------------------------------\n\nOpenImageIO welcomes code contributions, and [nearly 200 people](CREDITS.md)\nhave done so over the years. We take code contributions via the usual GitHub\npull request (PR) mechanism.\n\n* [Architecture overview](docs/dev/Architecture.md) is a high-level\n  description of the major classes and their relationships.\n* [CONTRIBUTING](CONTRIBUTING.md) has detailed instructions about the\n  development process.\n* [ROADMAP](docs/ROADMAP.md) is a high-level overview of the current\n  development priorities for the next annual release, expected in September,\n  2024.\n* [RELEASING](docs/dev/RELEASING.md) explains our policies and procedures for\n  making releases. We have a major, possibly-compatibility-breaking, release\n  annually in September/October, and minor bug fix and safe feature addition\n  release at the beginning of every month.\n* [Building the docs](src/doc/Building_the_docs.md) has instructions for\n  building the documentation locally, which may be helpful if you are editing\n  the documentation in nontrivial ways and want to preview the appearance.\n* Other developer documentation is in the [docs/dev](docs/dev) directory.\n\n\n☎️ Communications channels and additional resources\n--------------------------------------------------\n\n* [Main web page](http://www.openimageio.org)\n* [GitHub project page](http://github.com/AcademySoftwareFoundation/OpenImageIO)\n* [Developer mail list](https://lists.aswf.io/g/oiio-dev)\n* [ASWF Slack](https://slack.aswf.io) (look for the `#openimageio` channel)\n* Biweekly Technical Steering Committee (TSC) Zoom meetings are on the [ASWF\n  Calendar](https://calendar.openimageio.org) (click on the OpenImageIO\n  meeting entries, every second Monday, to get the Zoom link, anyone may join)\n"
        },
        {
          "name": "RELICENSING.md",
          "type": "blob",
          "size": 5.5400390625,
          "content": "New code entering the OpenImageIO repository from July 1 2023 onward is\nsubject to the [Apache 2.0 license](LICENSE.md).\n\nCode dating from earlier than July 1 2023 was contributed under the [BSD\n3-clause license](https://opensource.org/license/bsd-3-clause), unless\nrelicensed below.\n\nStragglers who haven't relicensed yet, it's never too late, just sign onto the\nPR: https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3905\n\nThe following copyright holders agree that all of their contributions\noriginally submitted to this project under the 3-Clause BSD License are hereby\nrelicensed to the Apache License, Version 2.0, and are submitted pursuant to\nthe Developer Certificate of Origin, version 1.1:\n\n- Larry Gritz (@lgritz)\n- Chris Kulla (fpsunflower)\n- Brecht Van Lommel (brechtvl)\n- Daniel Flehner Heen (apetrynet)\n- Daniel Wyatt (dewyatt)\n- Aras Pranckevičius (aras-p)\n- Leszek Godlewski (inequation)\n- Dalai Felinto (dfelinto)\n- Jesse Yurkovich (jessey-git)\n- Sergey Sharybin (sergeyvfx)\n- Ray Molenkamp (LazyDodo)\n- Nathan Rusch (nrusch)\n- Ismael Cortes (leamsi)\n- AdamMainsTL\n- Sony Pictures Imageworks (cmstein, olegul, fpsunflower, brianhall77, jeremyselan, drg, richardssam, lecocqp)\n- Richard Shaw (hobbes1069)\n- Robert Matusewicz\n- Mariusz Szczepańczyk (mszczepanczyk)\n- Scott Wilson\n- Kevin Brightwell (Nava2)\n- Simon Boorer\n- Alex Hughes (Ahuge)\n- Alister Chowdhury\n- Manuel Leonhardt (skycaptain)\n- Alexandre Gauthier (MrKepzie)\n- Mark Boorer (shootfast)\n- Povilas Kanapickas (p12tic)\n- Mikael Sundell\n- Roman Zulak (marsupial)\n- Autodesk (includes Thiago Ize, Elvic Liang, Wayne Arnold, William Krick, Brecht Van Lommel, Marcos Fajardo)\n- Thiago Ize\n- Nick Black (dankamongmen)\n- Michel Lerenard (micler)\n- Stefan Bruens (StefanBruens)\n- David Gordon\n- Claire Foster (c42f)\n- Konrad Kleine (kwk)\n- Simone Gasparini (simogasp)\n- Radu Arjocu (ra-mt)\n- Dominik Bartkiewicz (fafik23)\n- 360highdynamicrangehdr (?)\n- Leonid Onokhov (sopvop)\n- Nuno Cardoso (npcardoso)\n- Todica Ionut (360highdynamicrangehdr)\n- Till Dechent (ttddee)\n- Tom Knowles (knowlsie)\n- SRHMorris\n- Biswapriyo Nath (Biswa96)\n- Edoardo Dominici (dedoardo)\n- Frédéric Devernay (devernay)\n- Simone Gasparini (simogasp)\n- roelandschoukens\n- Nayden Dochev (nayyden)\n- Yann Lanthony (yann-lty)\n- Benjamin Buch (bebuch)\n- Joris Nijs (joris-nijs)\n- Jan Honsbrok (Latios96)\n- Matteo F. Vescovi (mfvescovi)\n- Patrick Northon (patlefort)\n- Eric Mehl (ericmehl)\n- Xo Wang (GHF)\n- etiam\n- Fabien Servant (servantftechnicolor)\n- Loïc Vital (mugulmd)\n- Thomas Mansencal (Wētā FX)\n- Brent Davis (btdavis)\n- pwm1234-sri\n- toxieainc\n- demoulinv\n- Julien Enche (jenche)\n- Justin Israel\n- xiaoxiaoafeifei\n- Brad Smith (brad0)\n- lmarz\n- Seifeddine Dridi (seifeddinedridi)\n- Daniel Dresser (danieldresser)\n- Luc Bournaud (DevilishSpirits)\n- Dennis Schridde (devurandom)\n- Dieter De Baets (debaetsd)\n- Gonzalo Garramuño (ggarra13)\n- Alan Jones (@skyphyr)\n- pumkinpal\n- Christopher Crosetto (ccrosetto)\n- Russell Greene (russelltg)\n- Sam Richards (richardssam)\n- Guillaume Chatelet (gchatelet)\n- extrowerk\n- Heiko Becker (heirecka)\n- Mark Visser (mjmvisser)\n- Harry Mallon (hjmallon)\n- Henri Fousse (darkhorse64)\n- Krzysztof Blicharski (blicharski)\n- Hugh Macdonald (HughMacdonald)\n- Pascal Lecocq (lecocqp)\n- Ramon Montoya Vozmediano (rmv)\n- Dan Wexler (danwexler)\n- Jérôme Duval (korli)\n- Tim Grant (timgrant)\n- Shane Ambler (sambler)\n- Wētā\n- Kimball Thurston (kdt3rd)\n- Anders Langlands (anderslanglands)\n- Алексей (Alexpux)\n- Fabien Castan (fabiencastan)\n- Grégoire De Lillo (gregoire-dl)\n- Edgar Velázquez-Armendáriz (edgarv)\n- Malcolm Humphreys (malcolmhumphreys)\n- johnfea\n- Max Liani (maxliani)\n- Michael Görner (v4hn)\n- Philip Nemec (p-nemec)\n- Google\n- Nandan Dubey (ndubey)\n- NVIDIA\n- Jonathan Hearn (splidje)\n- Michael Root\n- Ott Tinn\n- Lukas Shrangl (luhk)\n- Manuel Gamito (mgamito)\n- Rémi Achard (remia)\n- Joseph Goldstone (JGoldstone)\n- Matthew Levine (melevine)\n- Yang Yang (yangyangl, but now cometyang)\n- Merwan Achibet (merwaaan)\n- Anthony Nemoff (ix-anemoff)\n- Damien Courtois (ix-dcourtois)\n- Carl Rand (crand)\n- Gregor Mückl (gmueckl)\n- Jep Hill (jephill)\n- John Haddon (johnhaddon)\n...\n\n**Prior authors, please follow the directions for adding your name to\n[this PR](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3905).\nIf, at the time of your prior contributions, you were employed by a\ncompany who would have owned your IP output, then please have someone from\nthat company who is authorized to do so submit a PR to add their company’s\nname to the list under the statement in this file.**\n\n\n---\n\nHere are the instructions we have been given by the Linux Foundation for how\nto document the contents of each file:\n\na. Files that consist of only contributions made entirely by companies that\n   have submitted PRs as described above can have, once those PRs are merged,\n   the BSD-3-Clause license information replaced with Apache-2.0 license\n   information.\n\nb. Files that contain contributions made after the change to the Apache-2.0\n   license as the license for the project should include only the Apache-2.0\n   license information.\n\nc. Files that contain contributions made both before the Apache-2.0 license\n   change and after the Apache-2.0 license change should include both\n   BSD-3-Clause and Apache-2.0 license information. The SPDX identifier for\n   these files is “BSD-3-Clause and Apache-2.0”.\n\nd. Files that contain only contributions made prior to the Apache-2.0 license\n   change should continue to include BSD-3-Clause license information (e.g.,\n   no changes to BSD-3-Clause information included in those files).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 5.2880859375,
          "content": "# Security Policy\n\n## Supported Versions\n\nThis gives guidance about which branches are supported with patches to\nsecurity vulnerabilities.\n\n| Version / branch  | Supported                                            |\n| ----------------- | ---------------------------------------------------- |\n| main              | :white_check_mark: :construction: ALL fixes immediately, but this is a branch under development with a frequently unstable ABI and occasionally unstable API. |\n| 3.0.x             | :white_check_mark: All fixes that can be backported without breaking ABI compatibility. New tagged releases monthly. |\n| 2.5.x             | :white_check_mark: All fixes that can be backported without breaking ABI compatibility. New tagged releases monthly. But be warned that probably by mid-2025, the 2.5.x family will move to a state of only receiving critical fixes, upon request, only if they can be easily backported. |\n| <= 2.4.x          | :x: No longer receiving patches of any kind.        |\n\n\n## Reporting a Vulnerability\n\nIf you think you've found a potential vulnerability in OpenImageIO, please\nreport it by emailing security@openimageio.org. Only the project administrators\nhave access to these messages. Include detailed steps to reproduce the issue,\nand any other information that could aid an investigation. Our policy is to\nrespond to vulnerability reports within 14 days.\n\nOur policy is to address critical security vulnerabilities rapidly and post\npatches as quickly as possible.\n\n\n## Other security features\n\n### Signed tags\nStarting with OpenImageIO 3.0, we cryptographically sign release tags.\nTo verify a tag, you can use the `git tag -v` command, which will check\nthe signature against the public key that is included in the repository.\nFor example,\n\n```bash\ngit tag -v v3.0.0.3\n```\n\n## Outstanding Security Issues\n\nNone known\n\n\n## History of CVE Fixes\n\nMost recent fixes listed first, more or less\n\n- CVE-2024-40630: Fixed incorrect image size for certain HEIC files.\n  [advisory](https://github.com/AcademySoftwareFoundation/OpenImageIO/security/advisories/GHSA-jjm9-9m4m-c8p2) (Fixed in 2.5.13.1)\n- CVE-2023-42295: Fix signed integer overflow when computing total number of pixels while reading BMP files. [#3948](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3948) (by xiaoxiaoafeifei) (Fixed in 2.5.3.0/2.6.0.1)\n- CVE-2023-36183: Heap-buffer-overflow while reading ICO files [#3872](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3872)  (by xiaoxiaoafeifei)\n- TALOS-2023-1709 / CVE-2023-24472: Race condition in TIFF reader. [#3772](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3772) (2.5.1.0/2.4.8.1)\n- TALOS-2023-1707 / CVE-2023-24473, TALOS-2023-1708 / CVE-2023-22845: Guard against corrupted Targa. [#3768](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3768) (2.5.1.0/2.4.8.1)\n- TALOS-2022-1654 / CVE-2022-43596, TALOS-2022-1655 / CVE-2022-43597 CVE-2022-43598, TALOS-2022-1656 / CVE-2022-43599 CVE-2022-43600 CVE-2022-43601 CVE-2022-43602: Fix possible IFF write errors [#6876](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3676) (2.4.6/2.5.0.0)\n- TALOS-2022-1653 / CVE-2022-43594: Fix possible errors when writing BMP files. [#3673](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3673) (by lgritz) (2.4.6/2.5.0.0)\n- TALOS-2022-1651 / CVE-2022-43592, TALOS-2022-1652 / CVE-2022-4359: Fix possible DPX write errors. [#3672](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3672) (2.4.6/2.5.0.0)\n- TALOS-2022-1657 / CVE-2022-43603: Zfile write safety. [#3670](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3670) (2.4.6/2.5.0.0)\n- TALOS-2022-1633 / CVE-2022-41639, TALOS-2022-1643 / CVE-2022-41988: Guard TIFF against buffer overflow for certain CMYK files. [#3632](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3632) (2.4.5/2.5.0.0)\n- TALOS-2022-1626, CVE-2022-41794: PSD files protect against corrupted embedded thumbnails. [#3629](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3629) (2.4.5/2.5.0.0)\n- TALOS-2022-1627, CVE-2022-41977: Guard TIFF reads against corrupt files with buffer overflows. [#3628](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3628) (2.4.5/2.5.0.0)\n- TALOS-2022-1626 / CVE-2022-41794, TALOS-2022-1632 / CVE-2022-41684, TALOS-2022-1636 / CVE-2022-41837: Exif (all formats that support it, TIFF/JPEG/PSD) fix bugs where corrupted Exif blocks could overrun memory. [#3627](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3627) (2.4.5/2.5.0.0)\n- TALOS-2022-1634 / CVE-2022-41838, TALOS-2022-1635 / CVE-2022-41999: Fix DDS reading crashes for cubemap files when a cube face was not present, and check for invalid bits per pixel. [#3625](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3625) (2.4.5/2.5.0.0) #3625 (2.4.5/2.5.0.0)\n- TALOS-2022-1629, CVE-2022-36354: RLA potential buffer overrun. [#3624](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3624) (2.4.5/2.5.0.0)\n- TALOS-2022-1628, CVE-2022-41981: Targa file string overflow safety. [#3622](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3622) (2.4.5/2.5.0.0)\n- TALOS-2022-1630, CVE-2022-38143: Protect against corrupt pixel coordinates while reading BMP files. [#3620](https://github.com/AcademySoftwareFoundation/OpenImageIO/pull/3620) (by lgritz) (Fixed in 2.4.5/2.5.0.0)\n"
        },
        {
          "name": "THIRD-PARTY.md",
          "type": "blob",
          "size": 13.103515625,
          "content": "See [LICENSE.md](LICENSE.md) for the main open source license of original\ncode written for the OpenImageIO project, which is the Apache-2.0 license.\n\nThe remainder of this file reproduces the open source licensing details\nof other projects that have been imported, incorporated into, or derived\ninto parts of OIIO.\n\nIn no particular order:\n\n-------------------------------------------------------------------------\n\nBSD 3-Clause License (https://opensource.org/license/bsd-3-clause)\nSPDX-License-Identifier: BSD-3-Clause\n\n* OpenImageIO prior to July 1, 2023\n\n  Code that was contributed to OpenImageIO prior to July 1 2023, and has not\n  yet been [relicensed](RELICENSING.md), was contributed under the BSD\n  3-clause license. Currently, less than 0.15% of the codebase (by lines of\n  code) remains under this license.\n\n* Gelato, Copyright (c) 2004 by NVIDIA Corp.\n\n  The initial (version 0.1) code found in imageio.h, fmath.h, filter.h,\n  argparse, and the JPEG reader/writer had elements derived from\n  BSD-licensed example code and headers from NVIDIA's Gelato Renderer. It's\n  not clear that any of that original code still survives in the modern\n  OIIO, but since some elements are derived from that, we still acknowledge\n  the original copyright here.\n\n* Open Shading Language. Copyright contributors to the OSL project.\n  https://github.com/AcademySoftwareFoundation/OpenShadingLanguage\n\n  A few parts here and there, notably parts of fmath.h and many of the CMake\n  files, contain code that was originally developed for Open Shading\n  Language but subsequently moved to OIIO.\n\n* OpenColorIO (c) Copyright contributors to the OpenColorIO Project.\n  https://github.com/AcademySoftwareFoundation/OpenColorIO\n\n  The sample OpenColorIO configurations in our testsuite are borrowed from\n  this ASWF project, also BSD-3-Clause licensed.\n\n* OpenEXR/Imath (c) Copyright contributors to the OpenEXR Project.\n  https://github.com/AcademySoftwareFoundation/Imath\n\n  Some templates in vecparam.h were first developed for Imath.\n\n* DPX reader/writer (c) Copyright 2009 Patrick A. Palmer.\n  https://github.com/patrickpalmer/dpx\n\n* KissFFT (c) Copyright 2003-2010 Mark Borgerding\n  https://github.com/mborgerding/kissfft\n\n* FindOpenVDB.cmake (c) Copyright 2015 Blender Foundation, BSD license.\n\n* Cryptomatte project, Copyright (c) 2014, 2015, 2016 Psyop Media Company,\n  LLC. https://github.com/Psyop/Cryptomatte\n\n  The test image in testsuite/cryptomatte/src/cryptoasset.exr is a small crop\n  of a sample image from the Cryptomatte project.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n   - Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n\n   - Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n\n   - Neither the name of the copyright holder nor the names of its\n     contributors may be used to endorse or promote products derived from\n     this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n-------------------------------------------------------------------------\n\nBSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)\nSPDX-License-Identifier: BSD-2-Clause\n\n* xxHash - Fast Hash algorithm\n  Copyright (C) 2012-2014, Yann Collet.\n  You can contact the author at :\n    - xxHash source repository : https://github.com/Cyan4973/xxHash\n    - public discussion board : https://groups.google.com/forum/#!forum/lz4c\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following disclaimer\n  in the documentation and/or other materials provided with the\n  distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n-------------------------------------------------------------------------\n\nMIT License\nSPDX-License-Identifier: MIT\n\n* PugiXML http://pugixml.org/ https://github.com/zeux/pugixml\n  Copyright (c) 2006-2018 Arseny Kapoulkine\n\n* FarmHash, by Geoff Pike https://github.com/google/farmhash\n  (c) Copyright 2014 Google, Inc., MIT license.\n\n* FindTBB.cmake. Copyright (c) 2015 Justus Calvin\n\n* {fmt} library - https://github.com/fmtlib/fmt\n  Copyright (c) 2012 - present, Victor Zverovich\n\n* UTF-8 decoder function from http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\n  Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n\n* fasthash\n  Copyright (C) 2012 Zilong Tan (eric.zltan@gmail.com)\n\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n-------------------------------------------------------------------------\n\nApache 2.0 License.\nSPDX-License-Identifier: Apache-2.0\n\n* CTPL thread pool https://github.com/vit-vit/CTPL\n  Copyright 2014 Vitaliy Vitsentiy.\n\n* Droid fonts from the Android SDK. http://www.droidfonts.com\n  Copyright Google, Inc.\n\n* function_view.h contains code derived from LLVM. https://llvm.org\n  Copyright (c) 2003-2018 University of Illinois at Urbana-Champaign.\n  This is licensed under the Apache 2.0 license with LLVM Exceptions.\n  https://llvm.org/docs/DeveloperPolicy.html#open-source-licensing-terms\n\n* ninjatracing.py utility for build profiling is Apache-2.0 licensed\n  and comes from https://github.com/nico/ninjatracing.\n  Copyright 2018 Nico Weber.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-------------------------------------------------------------------------\n\nBoost Software License - Version 1.0\nSPDX-License-Identifier: BSL-1.0\n\n* Some math functions in fmath.h are derived from the\n  [Sleef library](https://sleef.org)\n\n  Copyright Naoki Shibata and contributors 2010 - 2017.\n  https://github.com/shibatch/sleef/blob/master/LICENSE.txt\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n-------------------------------------------------------------------------\n\nZlib license\nSPDX-License-Identifier: Zlib\n\n* Base-64 encoder from http://www.adp-gmbh.ch/cpp/common/base64.html\n  Copyright (C) 2004-2008 René Nyffenegger\n\n\nThis source code is provided 'as-is', without any express or implied\nwarranty. In no event will the author be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this source code must not be misrepresented; you must not\n   claim that you wrote the original source code. If you use this source code\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original source code.\n3. This notice may not be removed or altered from any source distribution.\n\nRené Nyffenegger rene.nyffenegger@adp-gmbh.ch\n\n-------------------------------------------------------------------------\n\nUnlicense\nSPDX-License-Identifier: Unlicense\n\n* gif.h by Charlie Tangora. Public domain / Unlicense.\n  https://github.com/ginsweater/gif-h\n\n* bcdec.h by Sergii \"iOrange\" Kudlai. MIT or Unlicense.\n  https://github.com/iOrange/bcdec\n\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n\n-------------------------------------------------------------------------\n\nPublic domain\n\n* lookup3 code by Bob Jenkins, Public Domain.\n  http://burtleburtle.net/bob/c/lookup3.c\n\n* The SHA-1 implementation we use is public domain by Dominik Reichl.\n  http://www.dominik-reichl.de\n\n-------------------------------------------------------------------------\n\nIf we have left anything out, it is unintentional. Please let us know.\n\n"
        },
        {
          "name": "conanfile.txt",
          "type": "blob",
          "size": 0.4248046875,
          "content": "[requires]\nzlib/1.2.11\nlibtiff/4.0.9\nlibpng/1.6.37\nopenexr/2.4.0\nlibjpeg/9c\nlibjpeg-turbo/2.0.2\ngiflib/5.1.4\nfreetype/2.10.0\n#opencv/4.1.1@conan/stable\nopenjpeg/2.3.1\nlibwebp/1.0.3\ntsl-robin-map/0.6.1@tessil/stable\ntbb/2020.0\n# To do:\n# opencolorio? not on conan?\n# pybind11/2.4.3 - conan doesn't have this minimum version\n# dcmtk\n# ffmpeg\n# libheif\n# libraw\n# openvdb\n# ptex\n# qt5\n\n\n[generators]\ncmake\n\n[options]\n#libpng:shared=False\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 1.1904296875,
          "content": "# SPDX-License-Identifier: Apache-2.0\n# Copyright Contributors to the OpenImageIO Project.\n\nsonar.host.url=https://sonarcloud.io\n\n# Required metadata\nsonar.organization=academysoftwarefoundation\nsonar.projectName=OpenImageIO\nsonar.projectVersion=3.1\nsonar.projectKey=AcademySoftwareFoundation_OpenImageIO\n\n# Project links\nsonar.links.homepage=https://github.com/AcademySoftwareFoundation/OpenImageIO\nsonar.links.ci=https://github.com/AcademySoftwareFoundation/OpenImageIO/actions\nsonar.links.scm=https://github.com/AcademySoftwareFoundation/OpenImageIO\nsonar.links.issue=https://github.com/AcademySoftwareFoundation/OpenImageIO/issues\n\n# Source properties\nsonar.sources=src\nsonar.exclusions=src/doc/**,src/build-scripts/**,src/include/OpenImageIO/detail/pugixml/**,src/libutil/stb_sprintf.h,src/libutil/xxhash.cpp,src/include/OpenImageIO/detail/farmhash.h,src/libutil/farmhash.cpp\nsonar.sourceEncoding=UTF-8\n\n# C/C++ analyzer properties\nsonar.cfamily.build-wrapper-output=/__w/OpenImageIO/OpenImageIO/bw_output\nsonar.cfamily.gcov.reportsPath=_coverage\nsonar.coverage.exclusions=src/iv/**,src/include/OpenImageIO/detail/pugixml/**,src/include/OpenImageIO/detail/fmt/**,src/libOpenImageIO/kissfft.hh\n\nsonar.verbose=false\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}