{
  "metadata": {
    "timestamp": 1736565891593,
    "page": 854,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aws/lumberyard",
      "stars": 2045,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0283203125,
          "content": "# Ignore every file.\n*\n\n# Except for all other directories & subdirectories\n!**/\n\n# In every subdirectory, avoid ignoring files with the following extensions.\n!**/*.[cC][pP][pP]\n!**/*.[hH]\n!**/*.args\n!**/*.asp\n!**/*.attribute_layout\n!**/*.bat\n!**/*.c\n!**/*.cbc\n!**/*.cfg\n!**/*.chrparams\n!**/*.cmake\n!**/*.cmd\n!**/*.conf\n!**/*.coffee\n!**/*.cpp\n!**/*.cs\n!**/*.csproj\n!**/*.decTest\n!**/*.def\n!**/*.ent\n!**/*.ent_template\n!**/*.env\n!**/*.exportsettings\n!**/*.filters\n!**/*.h\n!**/*.hpp\n!**/*.html\n!**/*.hxx\n!**/*.ico\n!**/*.ignore\n!**/*.ini\n!**/*.inl\n!**/*.java\n!**/*.js\n!**/*.json\n!**/*.lua\n!**/*.lua_template\n!**/*.lyr\n!**/*.m\n!**/*.manifest\n!**/*.md\n!**/*.mel\n!**/*.mm\n!**/*.mk\n!**/*.ms\n!**/*.mtl\n!**/*.npmignore\n!**/*.p4ignore\n!**/*.plist\n!**/*.prefab\n!**/*.pro\n!**/*.props\n!**/*.py\n!**/*.pyproj\n!**/*.pys\n!**/*.pyw\n!**/*.qml\n!**/*.qmldir\n!**/*.qmltypes\n!**/*.qrc\n!**/*.qss\n!**/*.rc\n!**/*.sct\n!**/*.sh\n!**/*.slice\n!**/*.sln\n!**/*.spec\n!**/*.sql\n!**/*.targets\n!**/*.tcl\n!**/*.tip\n!**/*.[tT][xX][tT]\n!**/*.ui\n!**/*.uicanvas\n!**/*.vbs\n!**/*.vcproj\n!**/*.vcxproj\n!**/*.vssscc\n!**/*.waf_files\n!**/*.xbm\n!**/*.xml\n!**/ChangeLog\n!**/configure\n!**/DEVEL\n!**/lmbr_waf\n!**/[mM]akefile\n!**/makefile.appletv\n!**/wscript\n!**/README\n!**/TODO\n!**/waf\n\n# Make an exception to ignore specific directories\n# Most of these directories are brought in by executing git_bootstrap.\n/3rdParty\n/dev/AssetProcessorTemp\n/dev/BinTemp\n/dev/Bin64\n/dev/Bin64vc141\n/dev/Bin64vc141.Debug\n/dev/Bin64vc142\n/dev/Bin64vc142.Debug\n/dev/Cache\n/dev/SamplesProject\n/dev/Code/SDKs\n/dev/Code/Sandbox/SDKs\n/dev/Solutions\n/dev/Code/Tools/SDKs\n/dev/MultiplayerSample\n/dev/MultiplayerProject\n/dev/Gems/GameEffectSystem\n/dev/Gems/Oculus\n/dev/Gems/OpenVR\n/dev/Gems/PBSreferenceMaterials\n/dev/Gems/Substance\n/dev/Tools/CrySCompileServer/x64\n/dev/Tools/LmbrSetup/Win\n\n# Ignore ico files from Lumberyard folders but preserve ico files in project folders\n/dev/Code/**/*.ico\n/dev/CloudGemSamples/**/*.ico\n/dev/Tools/**/*.ico\n\n# Misc ignore files\n/dev/SetupAssistantUserPreferences.ini\n/dev/_WAF_/environment.json\n/SetupAssistant.bat\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.376953125,
          "content": "# Contribution Guidelines\nThank you for visiting our contribution guidelines! An active and healthy development community is what makes a good game engine an exceptional game engine. As we focus on developing new features and resolving bugs with every version of Lumberyard, we want to hear from you. We are interested in seeing how you're using the engine and what improvements you're making while you work on your own game projects. This is why, in addition to our [GameDev Forums](https://gamedev.amazon.com/forums/index.html), [Tutorials](https://www.youtube.com/amazongamedev) and [Documentation](https://aws.amazon.com/documentation/lumberyard/), we provide you with the opportunity to share your features and improvements with your fellow developers. After you modify the core engine code, simply submit a pull request.\n\nTo make it easy for you to contribute to our game engine, the Lumberyard development team adheres to the following coding conventions. We believe that these guidelines keep the engine code consistent and easy to understand so that you can spend less time interpreting code and more time coding. We look forward to your contributions!\n\n## Compiler Compatibility:\n-\tUse the C++11 standard whenever possible.\n-\tStick to the C++11 features that are commonly supported by Microsoft Visual Studio 2013/2015 (refer to https://msdn.microsoft.com/en-us/library/hh567368.aspx).\n\n## Formatting:\n-\tLumberyard recommends using the Uncrustify code beautifier to keep C++ code consistent with the engine code. Refer to http://uncrustify.sourceforge.net/.\n-\tApply indentation in a consistent manner:\n\t-\tFiles should start without any indentation.\n\t-\tUse a single additional level of indentation for each nested block of code.\n\t-\tIndent all lines of a block by the same amount.\n\t-\tMake lines a reasonable length.\n-\tIndent preprocessor statements in a similar way to regular code.\n-\tWhen positioning curly braces, open braces on a new line and keep them flush with the outer block's indentation.\n-\tAlways use curly braces for flow control statements.\n-\tEach line of code should only include a single statement.\n-\tNaming conventions for classes, functions, types and files should adhere to CamelCase and specify what the function does. \n-\tAll header files must include the directive, \"#pragma once\".\n-\tUse forward declarations to minimize header file dependencies. Compile times are a concern so please put in the effort to minimize include chains.\n-\tThe following syntax should be used when including header files: #include <Package/SubdirectoryChain/Header.h>\nThis rule helps disambiguate files from different packages that have the same name. <Object.h> might appear relatively often, but <AZRender/Object.h> is far less likely to.\n\n## Classes:\n-\tYou should define a default constructor if your class defines member variables and has no other constructors. Unless you have a very specifically targeted optimization, you should initialize all variables to a known state even if the variable state is invalid.\n-\tDo not assume any specific properties based on the choice of struct vs class; always use <type_traits> to check the actual properties\n-\tPublic declarations come before private declarations. Methods should be declared before data members.\n-\tAll methods that do not modify internal state should be const. All function parameters passed by pointer or reference should be marked const unless they are output parameters.\n-\tUse the override keyword wherever possible and omit the keyword virtual when using override.\n-\tUse the final keyword where its use can be justified.\n\n## Scoping:\n-\tAll of your code should be in at least a namespace named after the package and conform to the naming convention specified earlier in this document.\n-\tPlace a function's variable declarations in the narrowest possible scope and always initialize variables in their declaration.\n-\tStatic member or global variables that are concrete class objects are completely forbidden. If you must have a global object it should be a pointer, and it must be constructed and destroyed via appropriate functions.\n\n## Commenting Code:\nClear and concise communication is essential in keeping the code readable for everyone. Since comments are the main method for communication, please follow these guidelines for commenting the code:\n-\tUse /// for comments.\n-\tUse /**..*/ for block comments.\n-\tUse @param, etc. for commands.\n-\tFull sentences with good grammar are preferable to abbreviated notes.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 14.771484375,
          "content": "Amazon Lumberyard Archive\n\nCopyright (c) 2016-2021 Amazon Web Services, Inc., its affiliates or licensors.  All Rights Reserved.  This product includes software developed by Amazon Technologies, Inc.\n\n\n************************************* \nDISCLAIMER; LIMITATION OF LIABILITY\n\nPLEASE NOTE: Amazon Lumberyard is no longer offered. We recommend Open 3D Engine (O3DE), the Apache-licensed successor to Amazon Lumberyard, available at https://github.com/o3de/.  Visit https://o3de.org to learn more.\n\nBy accessing or using the materials in this repository, you agree to the following.  Amazon Web Services, Inc. and/or its affiliates (\"AWS\") provide all materials in this repository (including but not limited to the Lumberyard Materials) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing materials in this repository and assume any risks associated with your exercise of rights to materials in this repository.  In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts), shall AWS be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of the use or inability to use the materials in this repository (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if AWS has been advised of the possibility of such damages.\n\n\n************************************* \nAMAZON LUMBERYARD\n\nThe Amazon Lumberyard engine, integrated development environment, and related assets and tools included in this repository are licensed as \"Lumberyard Materials\" under the Lumberyard Terms, appended below.  By using or accessing these materials, you agree to such terms and conditions.  The term \"Lumberyard Materials\" does not include software and assets distributed with the Lumberyard Materials under separate license terms (such as code licensed under an open source license).  \n\n\n************************************* \nTWITCH API\n\nBy using the Twitch API you agree to the Twitch Developer Terms of Service posted at https://www.twitch.tv/p/en/legal/developer-agreement/ and the Twitch Terms of Service posted at http://www.twitch.tv/p/terms-of-service.\n\n\n************************************* \nTHIRD PARTY COMPONENTS\n\nAmazon Lumberyard requires the use of and makes available to you software and assets that have been developed by third parties and are subject to separate license terms (such as code licensed under an open source license), including the materials provided in \\3rdParty. It is your responsibility to obtain and comply with the applicable licenses, along with any platform policies that may apply to you. Information on third party materials, and the applicable license terms, are referenced in or included with the materials, such as in separate LICENSE.txt files accompanying the materials. \n\nPlease note that certain materials are subject to \"copyleft\" licenses, which require distribution of source code, including:\n - Qt Toolkit https://github.com/qtproject/, which is subject to the GNU Lesser General Public License version 3 (with certain exceptions, see \\3rdParty\\Qt\\).  A copy of the source code for Qt Toolkit may be found at https://s3-us-west-2.amazonaws.com/ly-legal/LicenseConformance/Qt/Src.zip\n - Chardet https://chardet.github.io/, which is subject to the GNU Lesser General Public License version 2.1. A copy of the source code may be found in \\3rdParty\\AWS\\AWSPythonSDK\\1.2.1\\botocore\\vendored\\requests\\packages\\.\n\nThis software contains Autodesk(R) FBX(R) code developed by Autodesk, Inc. Copyright 2013 Autodesk, Inc. All rights, reserved. Such code is provided \"as is\" and Autodesk, Inc. disclaims any and all warranties, whether express or implied, including without limitation the implied warranties of merchantability, fitness for a particular purpose or non-infringement of third party rights. In no event shall Autodesk, Inc. be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of such code.\n\nThis product includes components of the PowerVR Tools Software from Imagination Technologies Limited.\n\n\n************************************* \nLUMBERYARD TERMS\n\n0. AWS Agreement.  Lumberyard is for use by AWS customers.  By using the Lumberyard Materials, you agree to the terms of the AWS Customer Agreement, posted at https://aws.amazon.com/agreement (the \"Agreement\").  Capitalized terms used but not defined in these Lumberyard Terms have the meanings given in the Agreement. \n\n1. Lumberyard Materials. Amazon Lumberyard consists of an engine, integrated development environment, related assets, and tools we make available in this repository (collectively, \"Lumberyard Materials\"). The Lumberyard Materials include the \"Lumberyard Redistributables\", listed at https://github.com/awsdocs/amazon-lumberyard-user-guide/blob/master/doc_source/lumberyard-redistributables.md. The term \"Lumberyard Materials\" does not include materials distributed with the Lumberyard Materials under separate license terms (such as code licensed under an open source license).\n\n2. License. AWS grants you a limited, non-exclusive, non-sublicensable (except to End Users as provided below), non-transferrable license to do the following during the Term:\n\n(a) Development: You may use, reproduce, modify, and create derivative works of the Lumberyard Materials to develop and support video games, software, audio-visual works, and other content (each work created through use of the Lumberyard Materials is a \"Lumberyard Project\"). Lumberyard Projects, excluding any AWS Content and Third Party Content included therein, are Your Content.\n\n(b) Distribution to End Users: You may use, reproduce, modify, create derivative works of, publicly display, publicly perform, and distribute (including via third party distributors) to End Users the Lumberyard Redistributables (including any permitted modifications and derivatives) as part of a Lumberyard Project. However, you may do so only if (i) the Lumberyard Project provides material content or functionality beyond that provided by the Lumberyard Redistributables themselves, (ii) the Lumberyard Redistributables are integrated into the Lumberyard Project so they are not separately usable by End Users, (iii) you do not distribute in source code form Lumberyard Redistributables that we make available in file formats that are commonly compiled (e.g., C, C++) or for which we make a compiler available, and (iv) you ensure End Users are subject to terms no less protective of the Lumberyard Materials than these Terms, including this Section and Sections 4 and 5 below. You may sublicense these rights, subject to the restrictions in these terms, to your End Users to allow them to use, modify, create new content for, and redistribute your Lumberyard Project (e.g., create new items or levels for a game).\n\n(c) Collaboration with other AWS customers. You may reproduce and distribute (but not sublicense) the Lumberyard Materials (including any permitted modifications and derivatives): (i) to other AWS customers that are contractors of yours solely for the purpose of allowing those AWS customers to perform work on your behalf, (ii) to other AWS customers in connection with work you perform for them as a contractor, and (iii) to up to 5 other AWS customers who you authorize to distribute a Lumberyard Project in connection with your sale or licensing of that Lumberyard Project (e.g., publishers of a game you develop). Those other AWS customers' rights to the Lumberyard Materials are governed by their agreement(s) with us.\n\n(d) Lumberyard Git Repository. We may make available certain Lumberyard Materials in this repository (the \"Lumberyard Git Repository\"). You may reproduce and distribute to other AWS customers, via the Lumberyard Git Repository, your modified version(s) of those Lumberyard Materials (your \"LM Fork(s)\"), subject to any policies we may establish for the Lumberyard Git Repository. Your LM Fork must comply with the Agreement, the Intellectual Property License and these Terms; for example, it may not enable Lumberyard Projects to use, or read or write data to or from, Alternate Web Services. You must include a notice stating that the LM Fork is subject to these Terms (such as a copy of the License.txt file from the root directory of the Lumberyard Materials). If you obtain an LM Fork from the Lumberyard Git Repository, you are responsible for ensuring that any Lumberyard Project you create with it complies with these Terms. If your LM Fork violates the Agreement or the Intellectual Property License, then it infringes our copyright in the Lumberyard Materials and we may remove it from the Lumberyard Git Repository and take other actions, including terminating your license to the Lumberyard Materials. \"Alternate Web Service\" means any non-AWS web service that is similar to or can act as a replacement for the services listed at https://github.com/awsdocs/amazon-lumberyard-user-guide/blob/master/doc_source/lumberyard-alternate-web-services.md.\n\n3. No License Fee. There is no fee for the licenses granted in Section 2. AWS Services, AWS Content and Third Party Content made available in connection with the Lumberyard Materials may be subject to separate charges and governed by additional terms.\n\n4. Operating Restrictions. Without our prior written consent, (a) the Lumberyard Materials (including any permitted modifications and derivatives) may only be run on computer equipment owned and operated by you or your End Users, or on AWS Services, and may not be run on any Alternate Web Service and (b) your Lumberyard Project may not read data from or write data to any Alternate Web Service.\n\n5. Other Restrictions. Without limiting the restrictions set out in the Agreement and Intellectual Property License respectively, you may not (a) distribute the Lumberyard Materials in source code form, except as expressly permitted by Section 42.2(b) and (c), (b) use or exploit the Lumberyard Materials or any portion thereof to develop, maintain, participate in the development of, or support any competing engine, development tool, or software framework, (c) use the Lumberyard Materials or any portion thereof as part of a logo or trademark, (d) remove, obscure, or alter any proprietary rights notices (including copyright and trademark notices) contained in the Lumberyard Materials, (e) take any action that would require AWS, Inc. or you to license, distribute, or otherwise make available to anyone the Lumberyard Materials under different terms (e.g., combining Lumberyard Materials with software subject to \"copyleft\" open source licenses), or (f) use or exploit the Lumberyard Materials or any portion thereof in any manner or for any purpose other than as expressly permitted by these Terms.\n\n6. Registration; Release. Before distributing your Lumberyard Project to End Users, you must register here. You must obtain our prior written consent if the initial public or commercial release of your Lumberyard Project is based on a version of the Lumberyard Materials more than 5 years old.\n\n7. Credit. You must credit us in Lumberyard Projects in accordance with these guidelines. The AWS Trademark Guidelines apply to the use of AWS Marks included in the Lumberyard Materials. We may use excerpts of publicly released promotional material from your Lumberyard Projects and related trademarks, service marks, trade names, and logos in connection with our marketing, advertisement, and promotion of Lumberyard.\n\n8. Forums; Submissions. In addition to your rights to distribute LM Forks on the Lumberyard Git Repository set out above, when discussing Lumberyard Materials in our forums or elsewhere, you may include up to 50 lines of source code from the Lumberyard Materials for the sole purpose of discussing that code. You must identify AWS as the source of the code. \"Lumberyard Submissions\" are content relating to Lumberyard Materials (including LM Forks) that you post or otherwise submit to developer discussion sites, sample code repositories, or other AWS or public forums. You grant (i) us a non-exclusive, worldwide, perpetual, irrevocable, transferrable, sublicensable, royalty-free, and fully paid up license under all intellectual property rights to your Lumberyard Submissions, and (ii) other AWS customers the same rights to your Lumberyard Submissions as these Lumberyard Terms provide to the Lumberyard Materials. You represent and warrant that you have all necessary rights to grant the license above, and that your Lumberyard Submissions do not infringe the intellectual property rights of any third party or violate this Agreement.\n\n9. Data Collection. The Lumberyard Materials may provide us with information about the use of the Lumberyard Materials, including information about system and server resources, features used in the integrated development environment, frequency and duration of use, geographic and network locations, and error and information messages.\n\n10. Acceptable Use; Safety-Critical Systems. Your use of the Lumberyard Materials must comply with the AWS Acceptable Use Policy posted at https://aws.amazon.com/aup. The Lumberyard Materials are not intended for use with life-critical or safety-critical systems, such as use in operation of medical equipment, automated transportation systems, autonomous vehicles, aircraft or air traffic control, nuclear facilities, manned spacecraft, or military use in connection with live combat. However, this restriction will not apply in the event of the occurrence (certified by the United States Centers for Disease Control or successor body) of a widespread viral infection transmitted via bites or contact with bodily fluids that causes human corpses to reanimate and seek to consume living human flesh, blood, brain or nerve tissue and is likely to result in the fall of organized civilization.\n\n11. Termination. Your rights in the Lumberyard Materials automatically terminate if the Agreement terminates or you breach the Agreement or these Terms. However, if we terminate the Agreement for convenience, your rights in Lumberyard Materials then in your possession survive termination with respect to any previously registered Lumberyard Project. Otherwise, upon termination, you must cease all use, distribution, and other exploitation of the Lumberyard Materials (and any modifications and derivatives).\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.037109375,
          "content": "![lmbr](http://d2tinsms4add52.cloudfront.net/github/readme_header.jpg)   \n\n------------\n\n**Amazon Lumberyard is no longer offered. This archive provides source for convenience only; you can also view the For continued support, visit our [documentation archive on GitHub](https://github.com/awsdocs/amazon-lumberyard-user-guide/) or [contact Lumberyard customer support ](https://pages.awscloud.com/Amazon-Game-Tech-Contact-Us.html). We recommend Open 3D Engine, Lumberyard’s Apache-licensed successor. O3DE is maintained by the open-source community, including developers from Adobe, AWS, Epic, Microsoft, Intel, Lightspeed Studios, Niantic, and others. Visit O3DE's [website](https://www.o3de.org/ \"website\"), [Discord](https://discord.gg/o3de), and [Github](https://github.com/o3de/o3de).**\n\n------------\n \n# Amazon Lumberyard\nAmazon Lumberyard is a free, AAA game engine that gives you the tools you need to create high quality games.\n\n## Acquiring Lumberyard source \nEach release of Lumberyard exists as a separate branch in GitHub. You can get Lumberyard from GitHub using the following steps:\n\n### Fork the repository\nForking creates a copy of the Lumberyard repository in your GitHub account. Your fork becomes the remote repository into which you can push changes.\n\n### Create a branch\nThe GitHub workflow assumes your master branch is always deployable. Create a branch for your local project or fixes.\n\nFor more information about branching, see the [GitHub documentation](https://guides.github.com/introduction/flow/).\n\n### Clone the repository\nCloning the repository copies your fork onto your computer. To clone the repository, click the \"Clone or download\" button on the GitHub website, and copy the resultant URL to the clipboard. In a command line window, type ```git clone [URL]```, where ```[URL]``` is the URL that you copied in the previous step.\n\nFor more information about cloning a repository, see the [GitHub documentation](https:// help.github.com/articles/cloning-a-repository/).\n\n\n### Downloading additive  files\nOnce the repository exists locally on your machine, manually execute ```git_bootstrap.exe``` found at the root of the repository. This application will perform a download operation for __Lumberyard binaries that are required prior to using or building the engine__. This program uses AWS services to download the binaries. Monitor the health of AWS services on the [AWS Service Health Dashboard](https://status.aws.amazon.com/).\n\n### Running the Setup Assistant\n```git_bootstrap.exe``` will launch the Setup Assistant when it completes. Setup Assistant lets you configure your environment and launch the Lumberyard Editor.\n\n## Lumberyard Documentation\nFull Lumberyard documentation can be found here:\nhttps://github.com/awsdocs/amazon-lumberyard-user-guide/ \n<br>We also have tutorials available at https://www.youtube.com/c/AmazonLumberyardTutorials/\n\n## License\nYour use of Lumberyard is governed by the AWS Customer Agreement at https://aws.amazon.com/agreement/ and Lumberyard Service Terms at https://aws.amazon.com/serviceterms/#57._Amazon_Lumberyard_Engine.\n\nFor complete copyright and license terms please see the LICENSE.txt file at the root of this distribution (the \"License\").  As a reminder, here are some key pieces to keep in mind when submitting changes/fixes and creating your own forks:\n-\tIf you submit a change/fix, we can use it without restriction, and other Lumberyard users can use it under the License.\n-\tOnly share forks in this GitHub repo (i.e., forks must be parented to https://github.com/aws/lumberyard).\n-\tYour forks are governed by the License, and you must include the License.txt file with your fork.  Please also add a note at the top explaining your modifications.\n-\tIf you use someone else’s fork from this repo, your use is subject to the License.    \n-\tYour fork may not enable the use of third-party compute, storage or database services.  \n-\tIt's fine to connect to third-party platform services like Steamworks, Apple GameCenter, console platform services, etc.  \nTo learn more, please see our FAQs https://aws.amazon.com/lumberyard/faq/#licensing.\n"
        },
        {
          "name": "bootstrap_config.json",
          "type": "blob",
          "size": 0.296875,
          "content": "{\n    \"Checksum\": \"a100962757a183f3b7b861f2bdc3d61ef2517d860ef600886a8812f8a5bdf989ffbd8ba3a337a3bc240ee3f1f996e1681b321a5e95fa4aa7e822f98cb8ffbd19\",\n    \"URL\": \"https://d3dn1rjl3s1m7l.cloudfront.net/1.28.0.0/lumberyard-1.28-1103598a-pc_051821_224226-binaries.zip\",\n    \"Uncompressed Size\": 26415075855\n}"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "git_bootstrap.exe",
          "type": "blob",
          "size": 12830.359375,
          "content": ""
        }
      ]
    }
  ]
}