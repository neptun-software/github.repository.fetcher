{
  "metadata": {
    "timestamp": 1736565274595,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mapbox/mapbox-gl-native",
      "stars": 4385,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.216796875,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Google\nAccessModifierOffset: -4\nAllowShortFunctionsOnASingleLine: Inline\nBinPackArguments: false\nBinPackParameters: false\nColumnLimit: 120\nIndentWidth: 4\nSpacesBeforeTrailingComments: 1\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.11328125,
          "content": "Checks: >\n    -*,\n    android-*,\n    boost-*,\n    bugprone-*,\n    clang-analyzer-core*\n    clang-analyzer-cplusplus*,\n    clang-analyzer-deadcode*,\n    clang-analyzer-optin.cplusplus*,\n    clang-analyzer-optin.performance.Padding,\n    clang-analyzer-security*,\n    clang-diagnostic-*,\n    google-*,\n    misc-*,\n    modernize-*,\n    performance-*,\n    portability-*,\n    readability-*,\n    -bugprone-macro-parentheses,\n    -bugprone-narrowing-conversions,\n    -google-build-using-namespace,\n    -google-explicit-constructor,\n    -google-readability-braces-around-statements,\n    -google-readability-todo,\n    -google-runtime-int,\n    -google-runtime-references,\n    -misc-non-private-member-variables-in-classes,\n    -modernize-avoid-c-arrays,\n    -readability-braces-around-statements,\n    -readability-else-after-return,\n    -readability-implicit-bool-conversion,\n    -readability-magic-numbers,\n    -readability-named-parameter,\n    -readability-uppercase-literal-suffix\n\nWarningsAsErrors: '*'\nHeaderFilterRegex: '.*'\nFormatStyle: file\n\nCheckOptions:\n  - key:   performance-unnecessary-value-param.AllowedTypes\n    value: 'exception_ptr'\n"
        },
        {
          "name": ".cmake-format",
          "type": "blob",
          "size": 2.6650390625,
          "content": "\n# --------------------------\n# General Formatting Options\n# --------------------------\n# How wide to allow formatted cmake files\nline_width = 140\n\n# How many spaces to tab for indent\ntab_size = 4\n\n# If arglists are longer than this, break them always\nmax_subargs_per_line = 3\n\n# If true, separate flow control names from their parentheses with a space\nseparate_ctrl_name_with_space = False\n\n# If true, separate function names from parentheses with a space\nseparate_fn_name_with_space = False\n\n# If a statement is wrapped to more than one line, than dangle the closing\n# parenthesis on it's own line\ndangle_parens = True\n\n# If the statement spelling length (including space and parenthesis is larger\n# than the tab width by more than this amoung, then force reject un-nested\n# layouts.\nmax_prefix_chars = 2\n\n# If a candidate layout is wrapped horizontally but it exceeds this many lines,\n# then reject the layout.\nmax_lines_hwrap = 8\n\n# What style line endings to use in the output.\nline_ending = u'unix'\n\n# Format command names consistently as 'lower' or 'upper' case\ncommand_case = u'canonical'\n\n# Format keywords consistently as 'lower' or 'upper' case\nkeyword_case = u'unchanged'\n\n# Specify structure for custom cmake functions\nadditional_commands = {\n  \"add_node_module\": {\n    \"kwargs\": {\n      \"INSTALL_PATH\": \"*\",\n      \"NAN_VERSION\": \"*\",\n      \"EXCLUDE_NODE_ABIS\": \"*\"\n    }\n  },\n  \"target_compile_definitions\": {\n    \"kwargs\": {\n      \"PRIVATE\": \"*\",\n      \"PUBLIC\": \"*\"\n    }\n  },\n  \"set_target_properties\": {\n    \"kwargs\": {\n      \"PROPERTIES\": {\n        \"kwargs\": {\n          \"INTERFACE_MAPBOX_NAME\": \"*\",\n          \"INTERFACE_MAPBOX_URL\": \"*\",\n          \"INTERFACE_MAPBOX_AUTHOR\": \"*\",\n          \"INTERFACE_MAPBOX_LICENSE\": \"*\"\n        }\n      }\n    }\n  },\n  \"target_sources\": {\n    \"kwargs\": {\n      \"INTERFACE\": \"*\",\n      \"PRIVATE\": \"*\",\n      \"PUBLIC\": \"*\"\n    }\n  }\n}\n\n# A list of command names which should always be wrapped\nalways_wrap = [\n    \"add_executable\",\n    \"add_library\",\n    \"set_source_files_properties\",\n    \"target_compile_definitions\",\n    \"target_include_directories\",\n    \"target_link_libraries\",\n    \"target_sources\"\n]\n\n# Specify the order of wrapping algorithms during successive reflow attempts\nalgorithm_order = [0, 1, 2, 3, 4]\n\n# If true, the argument lists which are known to be sortable will be sorted\n# lexicographicall\nenable_sort = True\n\n# If true, the parsers may infer whether or not an argument list is sortable\n# (without annotation).\nautosort = True\n\n# If a comment line starts with at least this many consecutive hash characters,\n# then don't lstrip() them off. This allows for lazy hash rulers where the first\n# hash char is not separated by space\nhashruler_min_length = 10\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4931640625,
          "content": ".DS_Store\n.transifexrc\n*.pyc\n*.gcno\n*.gcda\n*~\n**/actual.png\n**/diff.png\noffline.db\nnew_offline.db\nxcuserdata\n/platform/node/test/actual\n/platform/node/test/diff\n/mason_packages\n/build\n/next/build\n/lib\n/test/node_modules\n/test/fixtures/*/*_actual.*\n/test/fixtures/api/1.png\n/test/fixtures/api/2.png\n/test/fixtures/offline_database/offline.db\n/test/fixtures/offline_database/offline.db-*\n/test/output\n/node_modules\n/platform/ios/benchmark/assets/glyphs/DIN*\n/platform/ios/benchmark/assets/tiles/mapbox.mapbox-terrain-v2,mapbox.mapbox-streets-v6\n/platform/darwin/developer.xcconfig\n/platform/macos/macos.xcworkspace/xcshareddata/macos.xcscmblueprint\n/platform/ios/ios.xcworkspace/xcshareddata/ios.xcscmblueprint\n/documentation\ntest/fixtures/api/assets.zip\ntest/fixtures/storage/assets.zip\n/.circle-week\n/vendor/.cache\nbuck-out\n.buckd\n\n# Generated metrics results\nmetrics/*.html\n\n# Android RenderTestRunner\nrender-test/android/.*\nrender-test/android/app/build/\nrender-test/android/app/src/main/assets/data.zip\nrender-test/android/local.properties\nrender-test/android/app/.*\nrender-test/android/package.json\nrender-test/android/app/app.iml\nrender-test/android/android.iml\n\n# IOS RenderTestRunner\nrender-test/ios/codesigning/*.xcent\nrender-test/ios/fastlane/README.md\ntest-data/\n\n# Generated file from npm/yarn\npackage-lock.json\n\n# Visual Studio Code\n.vscode\nmapbox-gl-native.code-workspace\n\n# Generated list files from code generation\n/scripts/generate-file-lists.list\n/scripts/generate-shaders.list\n/scripts/generate-style-code.list\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.7685546875,
          "content": "[submodule \"mapbox-gl-js\"]\n\tpath = mapbox-gl-js\n\turl = https://github.com/mapbox/mapbox-gl-js.git\n[submodule \"vendor/nunicode\"]\n\tpath = vendor/nunicode\n\turl = https://bitbucket.org/alekseyt/nunicode.git\n[submodule \"vendor/earcut.hpp\"]\n\tpath = vendor/earcut.hpp\n\turl = https://github.com/mapbox/earcut.hpp.git\n[submodule \"vendor/polylabel\"]\n\tpath = vendor/polylabel\n\turl = https://github.com/mapbox/polylabel.git\n[submodule \"vendor/protozero\"]\n\tpath = vendor/protozero\n\turl = https://github.com/mapbox/protozero.git\n[submodule \"vendor/vector-tile\"]\n\tpath = vendor/vector-tile\n\turl = https://github.com/mapbox/vector-tile.git\n[submodule \"vendor/wagyu\"]\n\tpath = vendor/wagyu\n\turl = https://github.com/mapbox/wagyu.git\n[submodule \"vendor/unique_resource\"]\n\tpath = vendor/unique_resource\n\turl = https://github.com/okdshin/unique_resource.git\n[submodule \"vendor/icu\"]\n\tpath = vendor/icu\n\turl = https://github.com/unicode-org/icu.git\n[submodule \"vendor/boost\"]\n\tpath = vendor/boost\n\turl = https://github.com/mapbox/mapbox-gl-native-boost.git\n[submodule \"vendor/benchmark\"]\n\tpath = vendor/benchmark\n\turl = https://github.com/google/benchmark.git\n[submodule \"vendor/eternal\"]\n\tpath = vendor/eternal\n\turl = https://github.com/mapbox/eternal.git\n[submodule \"vendor/mapbox-base\"]\n\tpath = vendor/mapbox-base\n\turl = https://github.com/mapbox/mapbox-base.git\n[submodule \"vendor/googletest\"]\n\tpath = vendor/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"vendor/zip-archive\"]\n\tpath = vendor/zip-archive\n\turl = https://github.com/ZipArchive/ZipArchive.git\n[submodule \"vendor/cpp-httplib\"]\n\tpath = vendor/cpp-httplib\n\turl = https://github.com/yhirose/cpp-httplib.git\n[submodule \"vendor/mapbox-gl-native-curl\"]\n\tpath = vendor/mapbox-gl-native-curl\n\turl = https://github.com/mapbox/mapbox-gl-native-curl.git\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.3447265625,
          "content": "Makefile\nCmakeLists.txt\n*yml\nbuild\ncmake\nmisc\n.*\n*tgz\nbenchmark\nexpression-test\ncloudformation\nbin\nvendor\ninclude\nmason_packages\nmapbox-gl-js\ntest\nlib\nnext\nsrc\nscripts\nrender-test\nplatform/android\nplatform/darwin\nplatform/default\nplatform/glfw\nplatform/ios\nplatform/linux\nplatform/macos\nplatform/qt\nplatform/node/symbol-list\nplatform/node/version-script"
        },
        {
          "name": ".topissuesrc",
          "type": "blob",
          "size": 0.279296875,
          "content": "{\n    \"labels\": {\n        \"release blocker\": 25,\n        \"beta blocker\": 20,\n        \"crash\": 5,\n        \"build\": 5,\n        \"bug\": 2\n    },\n    \"reactions\": {\n        \"+1\": 1,\n        \"-1\": -1,\n        \"laugh\": 1,\n        \"hooray\": 1,\n        \"confused\": 1,\n        \"heart\": 1\n    }\n}\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ycm_extra_conf.py",
          "type": "blob",
          "size": 4.109375,
          "content": "# Version of .ycm_extra_conf.py sample file adapted\n# for the Mapbox GL Native project.\n#\n# This file is NOT licensed under the GPLv3, which is the license for the rest\n# of YouCompleteMe.\n#\n# Here's the license text for this file:\n#\n# This is free and unencumbered software released into the public domain.\n#\n# Anyone is free to copy, modify, publish, use, compile, sell, or\n# distribute this software, either in source code form or as a compiled\n# binary, for any purpose, commercial or non-commercial, and by any\n# means.\n#\n# In jurisdictions that recognize copyright laws, the author or authors\n# of this software dedicate any and all copyright interest in the\n# software to the public domain. We make this dedication for the benefit\n# of the public at large and to the detriment of our heirs and\n# successors. We intend this dedication to be an overt act of\n# relinquishment in perpetuity of all present and future rights to this\n# software under copyright law.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n#\n# For more information, please refer to <http://unlicense.org/>\n\nimport os\nimport subprocess\nimport string\nimport ycm_core\n\ncompilation_database_folders = [\n  'build/linux-x86_64/Debug',\n  'build/qt-linux-x86_64/Debug',\n  'build/qt4-linux-x86_64/Debug',\n  'build/macos/compdb/Debug',\n]\n\nsubprocess.call(['make compdb'], shell=True)\n\nfor folder in compilation_database_folders:\n  if os.path.exists( folder ):\n     database = ycm_core.CompilationDatabase( folder )\n\nSOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]\n\n\ndef DirectoryOfThisScript():\n  return os.path.dirname( os.path.abspath( __file__ ) )\n\n\ndef MakeRelativePathsInFlagsAbsolute( flags, working_directory ):\n  if not working_directory:\n    return list( flags )\n  new_flags = []\n  make_next_absolute = False\n  path_flags = [ '-isystem', '-I', '-iquote', '--sysroot=' ]\n  for flag in flags:\n    new_flag = flag\n\n    if make_next_absolute:\n      make_next_absolute = False\n      if not flag.startswith( '/' ):\n        new_flag = os.path.join( working_directory, flag )\n\n    for path_flag in path_flags:\n      if flag == path_flag:\n        make_next_absolute = True\n        break\n\n      if flag.startswith( path_flag ):\n        path = flag[ len( path_flag ): ]\n        new_flag = path_flag + os.path.join( working_directory, path )\n        break\n\n    if new_flag:\n      new_flags.append( new_flag )\n  return new_flags\n\n\ndef IsHeaderFile( filename ):\n  extension = os.path.splitext( filename )[ 1 ]\n  return extension in [ '.h', '.hxx', '.hpp', '.hh' ]\n\n\ndef GetCompilationInfoForFile( filename ):\n  # The compilation_commands.json file generated by CMake does not have entries\n  # for header files. So we do our best by asking the db for flags for a\n  # corresponding source file, if any. If one exists, the flags for that file\n  # should be good enough.\n  if IsHeaderFile( filename ):\n    basename = os.path.splitext( filename )[ 0 ]\n    for extension in SOURCE_EXTENSIONS:\n      replacement_file = basename + extension\n      if os.path.exists( replacement_file ):\n        compilation_info = database.GetCompilationInfoForFile(\n          replacement_file )\n        if compilation_info.compiler_flags_:\n          return compilation_info\n    return None\n  return database.GetCompilationInfoForFile( filename )\n\n\ndef FlagsForFile( filename, **kwargs ):\n  if not database:\n    return None\n\n  # Bear in mind that compilation_info.compiler_flags_ does NOT return a\n  # python list, but a \"list-like\" StringVec object\n  compilation_info = GetCompilationInfoForFile( filename )\n  if not compilation_info:\n    return None\n\n  final_flags = MakeRelativePathsInFlagsAbsolute(\n    compilation_info.compiler_flags_,\n    compilation_info.compiler_working_dir_ )\n\n  return {\n    'flags': final_flags,\n    'do_cache': True\n  }\n"
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 13.5615234375,
          "content": "This document aims to outline at a high level the various parts that make up mapbox-gl-native and how they work together.\n\n# Repository structure\n\nmapbox-gl-native uses a monolithic that houses both core C++ code and code that wraps the C++ core with SDKs for Android, iOS, macOS, Node.js, and Qt. A \"monorepo\" allows us to:\n\n * Make changes to the core API and SDKs simultaneously, ensuring no platform falls behind.\n * Ensure that core changes do not inadvertently break SDK tests.\n * Centralize discussions about features and defects that affect multiple platforms.\n\nIn the repository, core C++ code is contained in the `include` and `src` directories. The former includes headers that are considered to make up the \"public\" core C++ API, while the latter includes `.cpp` implementation files and headers that are private to the implementation. Within both directories, files are nested under an `mbgl` directory, which has various subdirectories based on areas of functionality. Both public and private headers therefore can (and should) always be included with the form `#include <mbgl/___/___.hpp>`.\n\nCode and build scripts belonging to platform SDKs are contained in the `platform` directory, which has subdirectories for each platform. The `platform/darwin` and `platform/default` directories contain code shared by multiple platform SDKs.\n\n# Build system\n\nThe mapbox-gl-native build system uses a variety of tools.\n\n## Make\n\nGNU Make and a master `Makefile` serves as the coordinating tool for all other build system tools. Most of your interaction with the build system will be via `make` commands. We aim to have a consistent pattern for make targets across platforms: for a given platform, e.g. `ios`, `make ios` builds a reasonable set of end products (though perhaps not all permutations of build options, which can be prohibitively expensive), and `make ios-test` runs a complete test suite for the platform.\n\n## Git submodules\n\nGit submodules are used to pull in several dependencies: mason (see below) and several iOS dependencies (though we have plans to phase these out). Initializing these submodules is handled automatically by the necessary `make` targets.\n\n## npm\n\nnpm is a package manager for Node.js. mapbox-gl-native uses it to pull in several development dependencies that happen to be packaged as node modules -- mainly for testing needs.\n\n## Mason\n\n[Mason](https://github.com/mapbox/mason) is Mapbox's own cross platform C/C++ package manager. mapbox-gl-native uses mason packages as a source of precompiled binaries for third-party dependencies such as Boost, RapidJSON, and SQLite, and Mapbox's own C++ modules such as [earcut.hpp](https://github.com/mapbox/earcut.hpp) and [geojson-vt-cpp](https://github.com/mapbox/geojson-vt-cpp). It is also used to obtain a toolchain for Android platform cross-compiliation.\n\nWe track mason dependencies for a given platform in the file `platform/<platform>/scripts/configure.sh`. The `configure` script at the root handles sourcing this file during the build, running the appropriate mason commands, and writing configuration settings for the subsequent build to a `config.gypi` in the build output directory.\n\n## gyp\n\n[gyp](https://gyp.gsrc.io/) is a build system originally created for Chromium and since adopted by Node.js. In mapbox-gl-native it's used to build the core C++ static library, the Node.js platform module, and the shared JNI module for Android.\n\n## Platform-specific subsystems\n\nOutside of the core C++ static library, platform SDKs typically rely on platform-native build tooling to complete the job.\n\n* For iOS and macOS this means Xcode and the xcodebuild command line tool.\n* For Android, Gradle and Android Studio.\n* For Qt, `qmake`.\n\nSee the relevant platform-specific `README.md` / `INSTALL.md` for details.\n\n# Major functional components\n\n## Map\n## Style\n\nThe \"Style\" component of mapbox-gl-native contains an implementation of the [Mapbox Style Specification](https://www.mapbox.com/mapbox-gl-style-spec/), defining what data to draw, the order to draw it in, and how to style the data when drawing it.\n\nIn addition to supporting styles loaded from a URL, mapbox-gl-native includes a runtime styling API, which allows users to dynamically modify the current style: add and remove layers, modify layer properties, and so on. As appropriate for a C++ API, the runtime styling API API is _strongly typed_: there are subclasses for each layer type, with correctly-typed accessors for each style property. This results in a large API surface area. Fortunately, this is automated, by generating the API – and the regular portion of the implementation – from the style specification.\n\nThe layers API makes a distinction between public API and internal implementation using [the `Impl` idiom](https://github.com/mapbox/mapbox-gl-native/issues/3254) seen elsewhere in the codebase. Here, it takes the form of parallel class hierarchies:\n\n* `Layer`, `Source`, and their subclasses form the public API. This is the API consumed by SDK bindings.\n* `Layer::Impl`, `Source::Impl`, and their subclasses form the internal API. This API is used only by other parts of the core C++ implementation.\n\nFor each subclass of `Layer` or source, there's a corresponding `Impl` subclass. For example, `CircleLayer` and `CircleLayer::Impl`. The base `Layer` class holds a reference to the base `Layer::Impl`, and `CircleLayer` and other subclasses have an `impl()` accessor method that casts this reference to the appropriate subtype.\n\n## Immutability\n\nThe `Layer::Impl` and `Source::Impl` reference held by `Layer` and `Source` base classes is _immutable_: it's a shared reference to a `const` (read only) pointer. Immutability permits the `Impl` objects to be shared safely between threads when needed -- for example, between the main thread and worker thread that performs computation in the background, or between the main thread and a dedicated renderer thread. See the \"Threading\" section below for further details on the threading model.\n\nImmutability is an alternative to several other strategies for safe intra-thread communication. One alternative strategy is to insert locks whenever data is shared between threads and at least one thread may be modifying the data. This strategy is prone to problems such as race conditions (if you forget to use a lock), deadlocks (if locks are acquired in conflicting orders), and poor performance due to lock contention. Another strategy is to copy data whenever it's needed by another thread. For complex structures such as a Mapbox Style, copying can be an expensive operation. With immutability, the approach is to share data without copying, but ensure that any data so shared cannot be modified by any thread, and that the data is not destroyed until the last thread using it relinquishes its reference.\n\nImmutability is implemented by the `Immutable<T>` template, which acts as a non-nullable shared reference to a `const T`. It has behavior similar to `std::shared_ptr<const T>`, but indicates its intent as an immutable reference that is safe to share between threads.\n\nImmutability is core to the implementation, and yet one of the defining features of Mapbox GL is the ability to manipulate and mutate the style freely at runtime. How can this be possible if everything is immutable? The answer turns on the distinction mentioned in the previous section between public classes such as `Layer` and private implementations such as `Layer::Impl`. In Mapbox GL, the latter is immutable, but the former is not:\n\n* **Mutable objects**: `Layer`, `Source`, `Image`, `Light`\n* **Immutable objects**: `Layer::Impl`, `Source::Impl`, `Image::Impl`, `Light::Impl`\n\nAn instance of a `Layer` subclass such as `CircleLayer` has a reference to an `Immutable<Layer::Impl>`, but is itself mutable -- it has mutating methods such as `setCircleRadius`. Such methods follow a common pattern:\n\n* Create a new instance of the Impl, copied from the existing Impl. This new instance is temporarily mutable.\n* Modify this new instance as needed; e.g. set the radius to a new value.\n* \"Freeze\" the new instance by making it immutable, and then assign that immutable reference to be the new Impl for the `Layer`.\n\nTwo things to note about this process:\n\n* No existing Impls are modified -- only the newly created copy.\n* Only one existing reference to an Impl is modified -- the one held by the `Layer` instance being mutated. Any references to the previous Impl held by other threads remain unchanged. They go on using the previous value for radius until notified by some other means that there has been a change.\n\nSo how do things that are holding references to the previous Impl get notified? The answer is **style diffing**. This is the process by which we determine, from one frame to the next, what parts of the style have changed and therefore what needs to be recalculated in response to those changes in order to draw an updated frame. In parallel to style objects such as `Style`, `Layer`, `Source` and so on, Mapbox GL maintains render objects such as `RenderStyle`, `RenderLayer`, `RenderSource` and so on. These render objects:\n\n* are mutable\n* may live on either the main thread or an independent rendering thread, depending on the SDK\n* contain any and all values calculated from the style objects plus state such as the current zoom level and location -- for example, the set of loaded tiles and the buckets calculated from them\n\nFrom one frame to the next, these render objects are updated based on the current state of the style objects. In order to permit the render objects to live on a different thread, this state is communicated as immutable Impl references -- in effect, a snapshot of the style state at the time the frame was requested. And it really is a just snapshot -- we don't communicate things like \"the radius of this circle layer was changed\", \"this layer was removed\", etc. Instead, that information is reconstructed by `RenderStyle` by comparing the new snapshot to the old snapshot. Immutability allows us to perform this comparison very efficiently:\n\n* If the \"before\" and \"after\" of two immutable references refer to the same object, we know that it hasn't changed. If they're different, we know it has changed in some way.\n* We can calculate changes in collections of immutable references (a list of layers or sources) using an efficient [diff algorithm](http://www.xmailserver.org/diff2.pdf). We can further improve this efficiency by making the collections themselves immutable, so that we can avoid running the diff algorithm altogether in the common case where the \"before\" and \"after\" collections refer to the same immutable object.\n\nOne final benefit of this approach of diffing immutable objects: we get \"smart\" updates between two completely independent styles essentially for free. For example, `RenderStyle` doesn't care if the \"before\" snapshot is from the Mapbox Light style and the \"after\" snapshot is from the Mapbox Dark style. It will just calculate the difference between the two snapshots, update render data where necessary, and render the next frame. Since those two styles use the same source data and layer IDs, the result will be a fully automatic, seamless transition between light and dark.\n\n## FileSource\n## Layout\n## Rendering\n## Annotations\n\n# Threading\n\nAt runtime, mapbox-gl-native uses the following threads:\n\n* The \"main thread\" (or other thread on which a `Map` object is created) handles direct `Map` API requests, owns the active `Style` and its associated objects, and renders the map. Since this thread is usually dispatching events triggered by user input, it's important that these duties not require significant computation or perform blocking I/O that would cause UI jank or hangs.\n* Many of the tasks that require significant computation are associated with layout and styling of map features: parsing vector tiles, computing text layout, and generating data buffers to be consumed by OpenGL. This work happens on \"worker threads\" that are spawned by the main thread, four per `Style` object. The `Style` and its associated objects handle dispatching tasks to the workers, typically on a tile-by-tile basis.\n* A \"FileSource\" thread handles network requests for styles, tiles, and other resources, and I/O on the SQLite database used for offline maps and caching. Requests originate from the main thread, are dispatched by a FileSource internally to its thread, and results are returned to the main thread via an asynchronous callback function. (This is implemented with platform-specific hooks into the native message pump for the requesting thread.)\n\nTo minimize data races and invalid memory access, we aim for zero shared memory state between any two threads. Cross-thread communication occurs via one thread requesting the \"invocation\" of a task on another thread. The parameters for this task should be passed as value objects, so that they are copied, or as ownership-transferring values such as `std::unique_ptr`. (We're [not entirely there yet](https://github.com/mapbox/mapbox-gl-native/issues/667), but that's the goal.) The result (if any) is likewise passed as a value or ownership-transferring parameter to the callback function.\n\nInvoking a task on another thread itself creates an ownership obligation: the responsibility for the work happening on the other thread. This ownership is represented by the invocation method returning `std::unique_ptr<AsyncTask>`. Destroying this object indicates that the result of the task is no longer required: the callback is guaranteed not to be called, and the work on the other thread may be aborted (if doing so is convenient).\n\nAll this is implemented by [Thread](https://github.com/mapbox/mapbox-gl-native/blob/master/src/mbgl/util/thread.hpp) and [RunLoop](https://github.com/mapbox/mapbox-gl-native/blob/master/include/mbgl/util/run_loop.hpp).\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 30.080078125,
          "content": "# Changelog\n\n## master\n\n## maps-v1.6.0\n\n### ✨ New features\n\n- [core] Add support for `Polygon`, `MultiPolygon` geometry types in `distance` expression. ([#16446](https://github.com/mapbox/mapbox-gl-native/pull/16446))\n\n- [core] Introduce a new API for controlling the camera ([#16419]https://github.com/mapbox/mapbox-gl-native/pull/16419)\n\n  Functions `Map::getFreeCameraOptions()` and `Map::setFreeCameraOptions(options)` provides an alternative way of accessing and modifying properties of the underlying camera entity. The API allows the user to treat the camera as a more traditional 3D object by modifying its position and orientation directly as opposed to setting the state implicitly by using `CameraOptions`. Both APIs are fully compatible with each other.\n\n### 🐞 Bug fixes\n\n- [core][tile mode] Labels priority fixes ([#16432](https://github.com/mapbox/mapbox-gl-native/pull/16432))\n\n  This change does the following:\n\n  - strictly arranges all the intersecting labels accordingly to the style-defined priorities\n  - fixes placement order of the variable labels.\n    Before this change, all variable labels that could potentially intersect tile borders were placed first, breaking the style label placement priority order. Now, all the variable labels, which do not actually intersect the tile borders, are placed accordingly to the style-defined priorities\n\n## maps-v1.6.0-rc.2\n\n### ✨ New features\n\n- [core] Introduce Source::setMinimumTileUpdateInterval API ([#16416](https://github.com/mapbox/mapbox-gl-native/pull/16416))\n\n  The `Source::setMinimumTileUpdateInterval(Duration)` method sets the minimum tile update interval, which is used to throttle the tile update network requests.\n\n  The corresponding `Source::getMinimumTileUpdateInterval()` getter is added too.\n\n  Default minimum tile update interval value is `Duration::zero()`.\n\n- [core] Indroduce `distance` expression. ([#16397](https://github.com/mapbox/mapbox-gl-native/pull/16397))\n   \n  The `distance` expression returns the shortest distance between two geometries. The returned value can be consumed as an input into another expression for changing a paint or layout property or filtering features by distance.\n\n  Currently, the `distance` expression supports `Point`, `MultiPoint`, `LineString`, `MultiLineString` geometry types.\n\n- [core] Introduce style::Source::setVolatile()/isVolatile() API ([#16422](https://github.com/mapbox/mapbox-gl-native/pull/16422))\n\n  The `Source::setVolatile(bool)` method sets a flag defining whether or not the fetched tiles for the given source should be stored in the local cache.\n\n  The corresponding `Source::isVolatile()` getter is added too.\n\n  By default, the source is not volatile.\n\n- [ios, macos] Allow specifying multiple fonts or font families for local font rendering ([#16253](https://github.com/mapbox/mapbox-gl-native/pull/16253))\n\n  By default, CJK characters are now set in the font specified by the `text-font` layout property. If the named font is not installed on the device or bundled with the application, the characters are set in one of the fallback fonts passed into the `localFontFamily` parameter of `mbgl::Renderer::Renderer()` and `mbgl::MapSnapshotter::MapSnapshotter()`. This parameter can now contain a list of font family names, font display names, and font PostScript names, each name separated by a newline.\n\n### 🐞 Bug fixes\n\n- [ios, macos] Fixed error receiving local file URL response ([#16428](https://github.com/mapbox/mapbox-gl-native/pull/16428))\n\n- [ios, macos] Corrected metrics of locally rendered fonts ([#16253](https://github.com/mapbox/mapbox-gl-native/pull/16253))\n\n  CJK characters are now laid out according to the font, so fonts with nonsquare glyphs have the correct kerning. This also fixes an issue where the baseline for CJK characters was too low compared to non-CJK characters.\n\n## maps-v1.6.0-rc.1\n\n### ✨ New features\n\n- [core] Move logging off the main thread ([#16325](https://github.com/mapbox/mapbox-gl-native/pull/16325))\n\n- Add source property to limit parent's tile overscale factor ([#16347](https://github.com/mapbox/mapbox-gl-native/pull/16347))\n\n  The new property sets a limit for how much parent tile can be overscaled.\n\n- [core][tile mode] Introduce API to collect placed symbols data ([#16339](https://github.com/mapbox/mapbox-gl-native/pull/16339))\n\n  The following methods are added to the `Renderer` class in implemented in the Tile map mode:\n  - `collectPlacedSymbolData()`\n    enables or disables collecting of the placed symbols data\n\n  - `getPlacedSymbolsData()`\n    if collecting of the placed symbols data is enabled, returns the reference to the `PlacedSymbolData` vector holding the collected data.\n\n- [core] Enable circle-sort-key property ([#15875](https://github.com/mapbox/mapbox-gl-native/pull/15875/))\n\n  Adds support for `circle-sort-key` property, consistent with `symbol-sort-key`.\n\n  Sorts drawing order by sort key both within-tile and cross-tile.\n\n- [core] Add LocationIndicator layer ([#16340](https://github.com/mapbox/mapbox-gl-native/pull/16340))\n\n  Adds a new layer type, `location-indicator`, that can be used to add a source-less indicator to the map, comprising raster images and a precision radius in meters.\n\n- Add generic setter for Layer's 'source' property ([#16406](https://github.com/mapbox/mapbox-gl-native/pull/16406))\n\n### 🐞 Bug fixes\n\n- [core][tile mode] Reduce cut-off labels (part 2) ([#16369](https://github.com/mapbox/mapbox-gl-native/pull/16369))\n\n  Now, the intersecting symbols are placed across all layers _symbol by symbol_ according to the following rules:\n\n  1. First we look, which of the tile border(s) the symbol intersects and prioritize the the symbol placement accordingly (high priority -> low priority): `vertical & horizontal -> vertical -> horizontal`\n  2. For the symbols that intersect the same tile border(s), assuming the tile border split symbol into several sections, we look at the minimal section length. The symbol with a larger minimal section length is placed first.\n  3. For the symbols that intersect the same tile border(s), and have equal minimal section length, we look at the anchor coordinates.\n  4. Finally, if all the previous criteria are the same, we look at the symbol key hashes.\n\n- [core][tile mode] Fix variable placement for labels with the `icon-text-fit` property set ([#16382](https://github.com/mapbox/mapbox-gl-native/pull/16382))\n\n  The `symbolIntersectsTileEdges()` util in `mbgl::TilePlacement` now considers icon shift for the variable symbols with enabled icon-text-fit setting, thus providing more accurate results.\n\n- [core] Correctly log a warning instead of crashing when a non-existent image is attempted to be removed. ([#16391](https://github.com/mapbox/mapbox-gl-native/pull/16391))\n\n- [core] Fix segfault resulting from an invalid geometry ([#16409](https://github.com/mapbox/mapbox-gl-native/pull/16409))\n\n- [macos] Restored support for macOS 10.11–10.14 ([#16412](https://github.com/mapbox/mapbox-gl-native/pull/16412))\n\n## maps-v1.5.1\n\n### 🐞 Bug fixes\n\n- [core] Fix assert in gfx resources cleanup ([#16349](https://github.com/mapbox/mapbox-gl-native/pull/16349))\n\n  Fix a resource leak assertion in `gl::Context::~Context()` that is evaluating false in scenarios where graphics context has been marked as lost.\n\n- Hillshade bucket fix for mapbox-gl-native-ios #240 ([#16362](https://github.com/mapbox/mapbox-gl-native/pull/16362))\n\n  When dem tiles are loaded, border in neighboring tiles is updated, too leading to bucket re-upload. if std::move moved indices / vertices previously, they are empty and we get crash. Re-upload requires that only DEM texture is re-uploaded, not the quad vertices and indices.\n\n## maps-v1.5.0\n\n### ✨ New features\n\n- [core] Add Renderer::clearData() ([#16323](https://github.com/mapbox/mapbox-gl-native/pull/16323))\n\n  The newly added `Renderer::clearData()` method allows to clear render data and thus save memory and make sure outdated tiles are not shown. It clears data more agressively than `Renderer::reduceMemoryUse()` does, as it clears not only the cache but all orchestration data, including the data used by the currently rendered frame.\n\n- [android] Add jni binding for styleable snapshotter ([#16286](https://github.com/mapbox/mapbox-gl-native/pull/16286))\n\n- [core] Ability to set generic layer properties using setProperty method ([#16324](https://github.com/mapbox/mapbox-gl-native/pull/16324))\n  This change enables the following new keys for the `mbgl::Layer::setProperty()` API:\n  - \"filter\" invokes `setFilter()`\n  - \"minzoom\" invokes `setMinZoom()`\n  - \"maxzoom\" invokes `setMaxZoom()`\n  - \"source-layer\" invokes `setSourceLayer()`\n\n  The newly-added API is used in the style-conversion code, which made this code much simpler.\n\n- [android] Expose getLayer, getSource and Observer interface for snapshotter ([#16338](https://github.com/mapbox/mapbox-gl-native/pull/16338))\n\n### 🐞 Bug fixes\n\n- [core] Use `TileCoordinates` instead of `LngLat` for `within` expression calculation ([#16319](https://github.com/mapbox/mapbox-gl-native/pull/16319))\n\n  Fix the issue that `within` expression evaluates point features inconsistently across zoom levels if the point lies near the boundary of a GeoJSON object ([#16301](https://github.com/mapbox/mapbox-gl-native/issues/16301))\n\n- [core][tile mode] Reduce cut-off labels ([#16336](https://github.com/mapbox/mapbox-gl-native/pull/16336))\n\n  Place tile intersecting labels first, across all the layers. Thus we reduce the amount of label cut-offs in Tile mode.\n\n  Before, labels were arranged within one symbol layer (one bucket),which was not enough for several symbol layers being placed at the same time.\n\n- [core] Fix issue that `within` expression returns incorrect results for geometries crossing the anti-meridian ([#16330](https://github.com/mapbox/mapbox-gl-native/pull/16330))\n\n## maps-v1.4.1\n\n### 🐞 Bug fixes\n\n- [android] Fix wrong method call in map_snapshotter ([#16308](https://github.com/mapbox/mapbox-gl-native/pull/16308))\n\n  In map_snapshotter, a wrong method call will cause Sanpshotter not works with a style url in Android. This change makes it call the right method to let Snapshotter works.\n\n## maps-v1.4.0\n\n### ✨ New features\n\n- [android] Add jni binding for line-sort-key and fill-sort-key ([#16256](https://github.com/mapbox/mapbox-gl-native/pull/16256))\n\n  With this change, android sdk will be able to get sort key for LineLayer and FillLayer.\n\n- Styleable MapSnapshotter ([#16268](https://github.com/mapbox/mapbox-gl-native/pull/16268))\n\n  New feature provides means of modifying style of a MapSnapshotter. The new API enables several use-cases, such as: adding route overlays, removing extra information (layers) from a base style, adding custom images that are missing from a style.\n\n- [core] Improve stability of symbol placement when the map is tilted ([#16287](https://github.com/mapbox/mapbox-gl-native/pull/16287))\n\n  These changes improve performance and bring more stability to the symbol placement for the tilted view, which is mainly used for navigation scenarios.\n\n### 🐞 Bug fixes\n\n- [core] Fix iterators in addRegularDash() ([#16249](https://github.com/mapbox/mapbox-gl-native/pull/16249))\n\n  Fixes possible crashes when using styles with line patterns.\n\n- [default] Fix possible crash at RunLoop::wake() ([#16255](https://github.com/mapbox/mapbox-gl-native/pull/16255))\n\n- [android] Update toGeoJSON in android_conversion.hpp ([#16243](https://github.com/mapbox/mapbox-gl-native/pull/16243))\n\n  Before this chage, `toGeoJSON` method in `android_conversion.hpp` could not convert an Object (Map in android) to GeoJSON object.\n\n  But `within` expression needs to accept an Object and then convert it to the GeoJSON object, now `toGeoJSON` method can convert both string and Object to GeoJSON.\n\n- [core] Fix `within` expression algorithm so that `false` value will be returned when point is on the boundary.  Allow using different GeoJSON formats as arguments of `within` expression.([#16232](https://github.com/mapbox/mapbox-gl-native/pull/16232))\n\n  A valid GeoJSON argument should contain one of the following types:  `\"Feature\"`, `\"FeatureCollection\"`,`\"Polygon\"` or `\"MultiPolygon\"`.\n\n- [core] [tile mode] placement algorithm must consider icons bounding boxes ([#16277](https://github.com/mapbox/mapbox-gl-native/pull/16277))\n\n  Tile mode placement algorithm now checks if bounding boxes for both label text and icon are intersecting the edges of the tiles.\n\n  Before, it checked only text bounding boxes and thus label icons might have got cut off.\n\n- [core] Calculate size of an ambient cache without offline region's resources ([#15622](https://github.com/mapbox/mapbox-gl-native/pull/15622))\n\n  Resources that belong to an offline region, should not contribute to the amount of space available in the ambient cache.\n\n - [core][tile mode] Fix assertion at `line-center` placement handling ([#16293](https://github.com/mapbox/mapbox-gl-native/pull/16293))\n\n  The `Symbol Intersects Tile Edges` placement algorithm should not be applied to the symbols with `line-center` placement.\n\n - Fixed using of the `in` expression as a layer filter ([#16272](https://github.com/mapbox/mapbox-gl-native/pull/16272))\n\n  The bug was caused by `mbgl::style::conversion::isExpression()` always returning `false` for the `in` expression.\n\n### 🧩  Architectural changes\n\n- Changes to `MapSnapshotter` threading model ([#16268](https://github.com/mapbox/mapbox-gl-native/pull/16268))\n\n  Snapshotter's threading model has been changed. Previously, `Map` and `HeadlessFrontend` that is responsible for rendering snapshot, were running on a dedicated thread. After [#16268](https://github.com/mapbox/mapbox-gl-native/pull/16268), `Map` object lives on client thread, so that the client can access `Style` object, while `HeadlessFrontend` lives on a dedicated `Snapshotter` thread.\n\n##### ⚠️  Breaking changes\n\n- Signature of a `MapSnapshotter`'s constructor has been changed\n- Signature for a `MapSnapshotter::snapshot` method has been changed\n- Size of an offline regions do not affect ambient cache size ([#15622](https://github.com/mapbox/mapbox-gl-native/pull/15622))\n\n##### 📌 Known issues\n\n- When feature is exactly on the geometry boundary, `within` expression returns inconsistent values for different zoom levels  ([#16301](https://github.com/mapbox/mapbox-gl-native/issues/16301))\n\n## maps-v1.3.0 (2020.02-relvanillashake)\n\n### 🐞 Bug fixes\n\n- [core] Fix offline region download freezing ([#16230](https://github.com/mapbox/mapbox-gl-native/pull/16230))\n\n  Downloaded resources are put in the buffer and inserted in the database in batches.\n\n  Before this change, the buffer was flushed only at the network response callback and thus it never got flushed if the last required resources were present locally and did not initiate network requests - it caused freezing.\n\n  Now the buffer is flushed every time the remaining resources container gets empty.\n\n### ✨ New features\n\n- [core] Add Layer::serialize() method ([#16231](https://github.com/mapbox/mapbox-gl-native/pull/16231))\n\n  New method allows serialization of a layer into a Value type, including all modifications done via runtime style API. New method is also an enabler for Style object serialization (sources, layers, etc).\n\n- [android] Add jni binding for min and max pitch ([#16236](https://github.com/mapbox/mapbox-gl-native/pull/16236))\n\n- [offline] Offline tool does not hang on 404 error ([#16240](https://github.com/mapbox/mapbox-gl-native/pull/16240))\n\n  The missing resource gets skipped and teh offline region download continues.\n\n##### ⚠️  Breaking changes\n\n- Changes to `mbgl::FileSourceManager::getFileSource()` ([#16238](https://github.com/mapbox/mapbox-gl-native/pull/16238))\n\n  It returns now `mbgl::PassRefPtr<FileSource>` (previously was `std::shared_ptr<FileSource>`) in order to enforce keeping the strong reference to the returned object.\n\n  Breaking code example:\n  `auto fs = FileSourceManager::getFileSource(); fs->..`\n\n  Posible fix:\n  `std::shared_ptr<FileSource> fs = `;\n\n- The `mbgl::OnlineFileSource` class cannot be used directly ([#16238](https://github.com/mapbox/mapbox-gl-native/pull/16238))\n\n  Clients must use the parent `mbgl::FileSource` interface instead.\n\n  Breaking code example:\n  `std::shared_ptr<OnlineFileSource> onlineSource = std::static_pointer_cast<OnlineFileSource>(FileSourceManager::get()->getFileSource(..));`\n\n  Possible fix:\n  `std::shared_ptr<FileSource> onlineSource = FileSourceManager::get()->getFileSource(..);`\n\n## maps-v1.2.1 (2020.02-release-vanillashake)\n\n### 🐞 Bug fixes\n\n- [core] Revert shader changes from [#16189](https://github.com/mapbox/mapbox-gl-native/pull/16189), which will cause incorrect label positioning ([#16235](https://github.com/mapbox/mapbox-gl-native/pull/16235))\n\n  This is a back porting from GL JS [#9333](https://github.com/mapbox/mapbox-gl-js/pull/9333)\n\n- [ios] Restored support for iOS 9–11 by default ([#16241](https://github.com/mapbox/mapbox-gl-native/pull/16242))\n\n## maps-v1.2.0 (2020.02-release-vanillashake)\n\n### ✨ New features\n\n- [core] Global settings API ([#16174](https://github.com/mapbox/mapbox-gl-native/pull/16174))\n\n  Global settings API provides means of managing non-persistent in-process settings. Initial implementation contains support for experimental option for setting thread priorities.\n\n- Expose READ_ONLY_MODE_KEY property for DatabaseFileSource ([#16183](https://github.com/mapbox/mapbox-gl-native/pull/16183))\n\n  The `READ_ONLY_MODE_KEY` property is exposed for `DatabaseFileSource`.\n\n  This property allows to re-open the offline database in read-only mode and thus improves the performance for the set-ups that do not require the offline database modifications.\n\n- [core] Add runtime API for setting tile prefetch delta for a Source ([#16179](https://github.com/mapbox/mapbox-gl-native/pull/16179))\n\n  The new `Source::setPrefetchZoomDelta(optional<uint8_t>)` method allows overriding default tile prefetch setting that is defined by the Map instance.\n\n- [core] Add support for `within expression`. Implement the use of `within expression` with paint propery and filter expression. ([#16157](https://github.com/mapbox/mapbox-gl-native/pull/16157))\n\n  The `within expression` enables checking whether a feature is inside a pre-defined geometry set/boundary or not. This `within expression` returns a boolean value, `true` indicates that the feature being evaluated is inside the geometry set. The returned value can be then consumed as input by another expression or used directly by a paint/layer property.\n\n  Support for using `within expression` with layout property will be implemented separately.\n\n- [core] Add support for using `within expression` with layout property. ([#16194](https://github.com/mapbox/mapbox-gl-native/pull/16194))\n\n- [core] Add support for `in expression`. ([#16162](https://github.com/mapbox/mapbox-gl-native/pull/16162))\n\n  The `in expression` enables checking whether a Number/String/Boolean type item is in a String/Array and returns a boolean value.\n\n- [core] Add support for using `within expression` with features having `'LineString'` geometry type. ([#16220](https://github.com/mapbox/mapbox-gl-native/pull/16220))\n\n  `within expression` now supports features with geometry types: `'Point'` or `'LineString'`.\n\n### 🐞 Bug fixes\n\n- [core] Don't provide multiple responses with the same data for 304 replies ([#16200](https://github.com/mapbox/mapbox-gl-native/pull/16200))\n\n  In cases when cached resource is useable, yet don't have an expiration timestamp, we provided data to the requester from the cache and the same data was returned once 304 response was received from the network.\n\n- [core] Fix potential visual artifact for line-dasharray ([#16202](https://github.com/mapbox/mapbox-gl-native/pull/16202))\n\n- Store gfx::DrawScope objects with associated render objects. ([#15395](https://github.com/mapbox/mapbox-gl-native/pull/15395))\n\n  We used some shared SegmentVectors, e.g. for drawing raster or background tiles. In longer running maps, this lead to resource accumulation. By storing the SegmentVectors and the contained gfx::DrawScope objects, we ensure that resources get released when the associated render objects vanish.\n\n- [core] Fix sprite sheet merging in Style::Impl::onSpriteLoaded ([#16211](https://github.com/mapbox/mapbox-gl-native/pull/16211))\n\n  If we get a new sprite sheet from the server, we need to merge current sprite sheet with a new one, while overwriting duplicates and keeping old unique images in a style.\n\n### 🏁 Performance improvements\n\n - [core] Loading images to style optimization ([#16187](https://github.com/mapbox/mapbox-gl-native/pull/16187))\n\n   This change enables attaching images to the style with batches and avoids massive re-allocations. Thus, it improves UI performance especially at start-up time.\n\n### 🧩  Architectural changes\n\n##### ⚠️  Breaking changes\n\n - [core] Loading images to style optimization ([#16187](https://github.com/mapbox/mapbox-gl-native/pull/16187))\n\n   The `style::Style::getImage()` semantics changed - it now returns `optional<style::Image>`.\n\n## maps-v1.0.1 (2020.01-release-unicorn)\n\n### 🐞 Bug fixes\n\n- [core] Use std::list instead of std::map for factory instance ([#16161](https://github.com/mapbox/mapbox-gl-native/pull/16161))\n\n  Factory 'get' method can be invoked recursively and stable iterators are required to guarantee safety.\n\n- [tile mode] Improvements in symbol placement on tile borders ([#16159](https://github.com/mapbox/mapbox-gl-native/pull/16159))\n\n  In tile mode, the placement order of two symbols crossing a tile border is defined by their anchor Y values.\n\n  Symbols crossing the borders between two neighboring tiles are placed with priority.\n\n  It improves symbol placement stability in the tile map mode.\n\n## maps-v1.0.0 (2020.01-release-unicorn)\n\n### ✨ New features\n\n- [core] Implement stretchable icons ([#16030](https://github.com/mapbox/mapbox-gl-native/pull/16030))\n\n  [Stretchable icons](https://github.com/mapbox/mapbox-gl-js/issues/8917) allow defining certain areas of an icon that may be stretched, leaving the remaining areas of an icon at a fixed size.\n\n- [core] Port line-sort-key and fill-sort-key ([#15839](https://github.com/mapbox/mapbox-gl-native/pull/15839))\n\n  The new feature allows to sort line and fill layer features. Similar to `symbol-sort-key`.\n\n- [core] Add image sections to format expression ([#15937](https://github.com/mapbox/mapbox-gl-native/pull/15937))\n\n  The new feature allows to embed images into labels.\n\n- [core] Introduce OfflineDatabase::runPackDatabaseAutomatically() API ([#15967](https://github.com/mapbox/mapbox-gl-native/pull/15967))\n\n  The new API allows to enable / disable automatic packing of a database.\n\n- [core] Decouple offline storage vacuum and the deleteRegion API ([#15899](https://github.com/mapbox/mapbox-gl-native/pull/15899))\n  - introduce `OfflineDatabase::pack()` standing for incremental vacuum\n  - make packing optional at offline region deletion\n\n- [core] Implement image expression (#15877)\n\n  The [image expression](https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-types-image) allows determining an image's availability.\n\n- [core] Add batch conversion of latLngs to/from screenCoords ([#15891](https://github.com/mapbox/mapbox-gl-native/pull/15891))\n\n  This patch introduces batch conversion between LatLng and ScreenCoordinate in Gl-Native core, so for multiple conversions with single point/latLng previously now it can be done with invoking one function call by passing vector of points/latLngs.\n\n### 🐞 Bug fixes\n- [tile mode] Fix variable symbols placement ([#16141](https://github.com/mapbox/mapbox-gl-native/pull/16141)\n\n  This change allows the variable symbols to cross the tile border only if their anchor is the first anchor from the `text-variable-anchor` list.\n\n- [core] Use weak scheduler inside mailbox ([#16136](https://github.com/mapbox/mapbox-gl-native/pull/16136))\n\n  If there are pending requests that are completed after main scheduler is destructed, worker threads may try to push messages to destructed scheduler's queue.\n\n- [core] Fix a crash in GeoJSON source parsing, caused by `GeoJSONVTData` ownership error ([#16106](https://github.com/mapbox/mapbox-gl-native/pull/16106))\n\n- [core] Stable position of labels at tile borders in tile mode ([#16040](https://github.com/mapbox/mapbox-gl-native/pull/16040))\n\n  These changes allow to avoid cutting-off labels on tile borders if the variable text placement is enabled.\n\n- [core] Fix really overscaled lines ([#16045](https://github.com/mapbox/mapbox-gl-native/pull/16045))\n\n  We resample lines after sharp corners in some situations. When tiles were really overscaled, sometimes we didn't have enough precision to represent the resampled vertex because it was too close. Disabling this after a certain point prevents this ([#16018](https://github.com/mapbox/mapbox-gl-native/issues/16018)).\n\n- [core] Don't use signed int type for anchor segment ([#16008](https://github.com/mapbox/mapbox-gl-native/pull/16008))\n\n  Erroneous signed to unsigned implicit conversion was used when PlacedSymbol(s) were created in SymbolLayout and signed values were used as indexes in a few other places.\n\n- [core] Increase padding in CollisionIndex for MapMode::Tile ([#15880](https://github.com/mapbox/mapbox-gl-native/pull/15880))\n\n  This increases the padding to 1024 for MapMode::Tile which should be enough to completely include all the data two zoom levels past the data source's max zoom level. Beyond that, 1024 should be enough of a padding to make clipped labels unlikely.\n\n- [core] Blacklist VAO extension for Adreno (TM) 4xx GPUs ([#15978](https://github.com/mapbox/mapbox-gl-native/pull/15978))\n\n  Blacklist in order to avoid crashes in a driver (Android 5.1.1)\n\n- [core] Retain thread pool in GeoJSONSource ([#15992](https://github.com/mapbox/mapbox-gl-native/pull/15992))\n\n  Otherwise, the construction of the `Immutable<Source::Impl>` in background thread might never yeld.\n\n- [core] Fix supercluster lambdas capturing ([#15989](https://github.com/mapbox/mapbox-gl-native/pull/15989))\n\n  Fix wrapping of the parameters in supercluster map/reduce lambdas (Previously, local variables were wrapped by reference).\n\n- [core] fix rendering of dashed lines with round caps ([#15947](https://github.com/mapbox/mapbox-gl-native/pull/15947))\n\n  In [#15862](https://github.com/mapbox/mapbox-gl-native/pull/15862), we introduced individual textures for line dash patterns to eliminate atlas overflows. Unfortunately, this broke dashed lines that had round caps (dashed lines with straight caps still rendered correctly). Line pattern textures for round caps were now using 256×15 pixel textures.\n\n- [core] Fix incorrect resizing of TileCache ([#15943](https://github.com/mapbox/mapbox-gl-native/pull/15943))\n\n- [core] Avoid GeoJSON source flickering on style transitions ([#15907](https://github.com/mapbox/mapbox-gl-native/pull/15907))\n\n  Before this change, all GeoJSON source cleared tile pyramid at the style transition and it caused flickering.\n\n- [core] Use individual textures for line dash patterns ([#15862](https://github.com/mapbox/mapbox-gl-native/pull/15862))\n\n  This moves the LineAtlas from a shared texture that contained SDF dash patterns to use individual textures.\n\n- [core] Fix collisions with icon-text-fit and variable placement ([#15828](https://github.com/mapbox/mapbox-gl-native/pull/15828))\n\n  When deciding the placement position it was only checking whether there were text collisions. Now, if icon-text-fit is used it now checks whether the icon fits before accepting a placement position.\n\n- [core] Fix icon-text-fit ([#15634](https://github.com/mapbox/mapbox-gl-native/pull/15634))\n\n  This fixes rendering by account for the 1px texture padding around icons that were stretched with icon-text-fit.\n\n### 🏁 Performance improvements\n\n- [core] Cross tile index performance ([#16127](https://github.com/mapbox/mapbox-gl-native/pull/16127))\n\n  For overscaled tiles, index only the symbols inside the viewport.\n\n  Find matches only among the buckets that have the same leader Id.\n\n- [core] Calculate GeoJSON tile geometries in a background thread ([#15953](https://github.com/mapbox/mapbox-gl-native/pull/15953))\n\n  Call `mapbox::geojsonvt::GeoJSONVT::getTile()` in a background thread, so that the rendering thread is not blocked.\n\n- [core] Make requests for expired resources lower priority than requests for new resources ([#15950](https://github.com/mapbox/mapbox-gl-native/pull/15950))\n\n- [core] Add Scheduler::scheduleAndReplyValue() API ([#15885](https://github.com/mapbox/mapbox-gl-native/pull/15885))\n\n  This change converts GeoJSON features to tiles for the loaded source description in a background thread and thus unblock the UI thread.\n\n- [core] Enable incremental vacuum for Offline DB ([#15837](https://github.com/mapbox/mapbox-gl-native/pull/15837))\n\n  Thus we avoid re-creating the whole database and keeping the backup file as it happens on calling VACUUM.\n\n- [core] Fix image requests for already obtained images ([#15825](https://github.com/mapbox/mapbox-gl-native/pull/15825))\n\n  Before this fix, repeated request for an already obtained image was erroneously treated as pending, and it prevented from the tiles load completion.\n\n### 🧩  Architectural changes\n\n- [core] Merge style::Layer::set{Layout,Paint}Property ([#15997](https://github.com/mapbox/mapbox-gl-native/pull/15997))\n\n- [core] Use expected.hpp from mapbox-base ([#15898](https://github.com/mapbox/mapbox-gl-native/pull/15898))\n\n##### ⚠️  Breaking changes\n\n- [core] Cross tile index performance (#16127)\n\n  Introduces public [mblg::Renderer::render](https://github.com/mapbox/mapbox-gl-native/pull/16127/files#diff-5a977e0401792825d7fcf522d48df11fR34) API break.\n\n- [core] Refactor DefaultFileSource codebase ([#15768](https://github.com/mapbox/mapbox-gl-native/pull/15768))\n  - Adds `FileSourceManager` interface that provides access to `FileSource` instances and means of registering / unregistering `FileSource` factories\n  - Splits `DefaultFileSource` into smaller parts\n  - Adds `DatabaseFileSource` interface and it's default implementation\n  - Removes inter-dependencies between concrete `FileSource` classes\n  - All sources operate on dedicated thread, except `MainResourceLoader` that acts as a dispatcher and works on thread that requested it.\n  - Removes `ResourceOptions::withCacheOnlyRequestsSupport` method\n\n- [core] Remove Map::cycleDebugOptions ([#16005](https://github.com/mapbox/mapbox-gl-native/pull/16005))\n\n  This function was mostly used by the Android API, which is no longer necessary.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 59.5341796875,
          "content": "cmake_minimum_required(VERSION 3.10 FATAL_ERROR)\nproject(\"Mapbox GL Native\" LANGUAGES CXX C)\n\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\nset_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER Core)\n\nset(\n    MEMORYCHECK_COMMAND_OPTIONS\n    \"--leak-check=full --gen-suppressions=all --error-exitcode=1 --suppressions=${PROJECT_SOURCE_DIR}/scripts/valgrind.sup\"\n)\n\ninclude(CTest)\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release)\nendif()\n\noption(MBGL_WITH_CORE_ONLY \"Build only the core bits, no platform code\" OFF)\noption(MBGL_WITH_COVERAGE \"Enable code coverage collection\" OFF)\noption(MBGL_WITH_QT \"Build Mapbox GL Qt bindings\" OFF)\noption(MBGL_WITH_SANITIZER \"Use [address|thread|undefined] here\" OFF)\noption(MBGL_WITH_RTTI \"Compile with runtime type information\" OFF)\noption(MBGL_WITH_OPENGL \"Build with OpenGL renderer\" ON)\noption(MBGL_WITH_WERROR \"Make all compilation warnings errors\" ON)\n\nadd_library(\n    mbgl-compiler-options INTERFACE\n)\n\nset(UBSAN_BLACKLIST ${PROJECT_SOURCE_DIR}/scripts/ubsan.blacklist)\n\ntarget_compile_options(\n    mbgl-compiler-options\n    INTERFACE\n        $<$<BOOL:${MBGL_WITH_COVERAGE}>:--coverage>\n        $<$<BOOL:${MBGL_WITH_SANITIZER}>:-DSANITIZE>\n        $<$<BOOL:${MBGL_WITH_SANITIZER}>:-fno-omit-frame-pointer>\n        $<$<BOOL:${MBGL_WITH_SANITIZER}>:-fno-optimize-sibling-calls>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},address>:-fsanitize=address>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},thread>:-fsanitize=thread>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=implicit-conversion,\n        -fsanitize-blacklist=${UBSAN_BLACKLIST}>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=undefined,\n        -fsanitize-blacklist=${UBSAN_BLACKLIST}>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=unsigned-integer-overflow,\n        -fsanitize-blacklist=${UBSAN_BLACKLIST}>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=nullability,\n        -fsanitize-blacklist=${UBSAN_BLACKLIST}>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=float-divide-by-zero,\n        -fsanitize-blacklist=${UBSAN_BLACKLIST}>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<NOT:$<BOOL:${MBGL_WITH_RTTI}>>>:-fno-rtti>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<NOT:$<PLATFORM_ID:Windows>>>:-Wall>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<NOT:$<PLATFORM_ID:Windows>>>:-Wshadow>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<NOT:$<PLATFORM_ID:Windows>>>:-Wextra>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<NOT:$<PLATFORM_ID:Windows>>,$<BOOL:${MBGL_WITH_WERROR}>>:-Werror>\n        $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<PLATFORM_ID:Android>>:-Wno-error=tautological-constant-compare>\n        $<$<CXX_COMPILER_ID:GNU>:-Wno-error=maybe-uninitialized>\n        $<$<CXX_COMPILER_ID:GNU>:-Wno-error=return-type>\n        $<$<CXX_COMPILER_ID:GNU>:-Wno-error=unknown-pragmas>\n        $<$<CXX_COMPILER_ID:AppleClang>:-Wno-error=deprecated-declarations>\n        $<$<CXX_COMPILER_ID:AppleClang>:-Wno-error=unused-parameter>\n        $<$<CXX_COMPILER_ID:AppleClang>:-Wno-error=unused-property-ivar>\n)\n\ntarget_link_libraries(\n    mbgl-compiler-options\n    INTERFACE\n        $<$<BOOL:${MBGL_WITH_COVERAGE}>:--coverage>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},address>:-fsanitize=address>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},thread>:-fsanitize=thread>\n        $<$<STREQUAL:${MBGL_WITH_SANITIZER},undefined>:-fsanitize=undefined>\n)\n\ncmake_policy(SET CMP0063 NEW)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_VISIBILITY_PRESET hidden)\nset(CMAKE_C_EXTENSIONS OFF)\nset(CMAKE_C_STANDARD 99)\nset(CMAKE_C_STANDARD_REQUIRED ON)\nset(CMAKE_C_VISIBILITY_PRESET hidden)\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\nset(CMAKE_INTERPROCEDURAL_OPTIMIZATION_MINSIZEREL ON)\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\nset(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n\nif(MBGL_WITH_QT)\n    find_package(Qt5Core REQUIRED)\n    set(CMAKE_AUTOMOC ON)\n    set(CMAKE_AUTORCC ON)\nendif()\n\nadd_library(\n    mbgl-core STATIC\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/actor.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/actor_ref.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/aspiring_actor.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/established_actor.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/mailbox.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/message.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/actor/scheduler.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/annotation/annotation.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/gfx/backend_scope.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/gfx/renderable.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/gfx/renderer_backend.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/gfx/rendering_stats.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/background_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/circle_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/fill_extrusion_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/fill_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/heatmap_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/hillshade_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/layer_manager.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/line_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/raster_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/symbol_layer_factory.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/bound_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/camera.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/change.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/map.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/map_observer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/map_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/mode.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/map/projection_mode.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/math/clamp.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/math/log2.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/math/minmax.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/math/wrap.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/platform/settings.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/platform/thread.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/renderer/query.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/renderer/renderer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/renderer/renderer_frontend.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/renderer/renderer_observer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/renderer/renderer_state.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/database_file_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/file_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/file_source_manager.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/network_status.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/offline.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/online_file_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/resource.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/resource_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/resource_transform.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/storage/response.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/color_ramp_property_value.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/color_ramp_property_value.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/constant.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/coordinate.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/custom_geometry_source_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/filter.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/function.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/geojson.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/geojson_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/get_json_type.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/light.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/position.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/property_value.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/rotation.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/tileset.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion/transition_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/conversion_impl.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/assertion.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/at.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/boolean_operator.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/case.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/check_subtype.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/coalesce.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/coercion.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/collator.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/collator_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/comparison.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/compound_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/dsl.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/distance.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/error.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/find_zoom_curve.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/format_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/format_section_override.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/formatted.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/get_covering_stops.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/image.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/image_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/in.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/interpolate.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/interpolator.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/is_constant.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/is_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/length.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/let.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/literal.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/match.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/number_format.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/parsing_context.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/step.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/type.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/value.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/expression/within.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/filter.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/image.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/background_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/circle_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/fill_extrusion_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/fill_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/heatmap_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/hillshade_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/line_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/raster_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/symbol_layer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/light.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/position.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/property_expression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/property_value.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/rotation.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/custom_geometry_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/geojson_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/image_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/raster_dem_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/raster_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/sources/vector_source.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/style.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/style_property.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/transition_options.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/types.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/style/undefined.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/tile/tile_id.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/tile/tile_necessity.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/async_request.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/async_task.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/char_array_buffer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/chrono.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/color.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/compression.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/constants.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/convert.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/enum.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/event.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/exception.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/expected.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/feature.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/font_stack.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/geo.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/geojson.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/geometry.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/ignore.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/image.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/immutable.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/indexed_tuple.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/interpolate.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/logging.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/noncopyable.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/optional.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/pass_types.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/platform.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/premultiply.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/projection.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/range.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/run_loop.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/size.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/string.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/thread.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/tileset.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/timer.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/traits.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/type_list.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/unitbezier.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/util.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/variant.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/vectors.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/work_request.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/work_task.hpp\n    ${PROJECT_SOURCE_DIR}/include/mbgl/util/work_task_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/actor/mailbox.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/actor/scheduler.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/algorithm/update_renderables.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/algorithm/update_tile_masks.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_manager.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_manager.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/annotation_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/fill_annotation_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/fill_annotation_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/line_annotation_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/line_annotation_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/render_annotation_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/render_annotation_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/shape_annotation_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/shape_annotation_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/symbol_annotation_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/annotation/symbol_annotation_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/anchor.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/debug_font_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/dem_data.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/dem_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/feature_index.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/feature_index.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/line_atlas.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/geometry/line_atlas.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/attribute.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/attribute.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/color_mode.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/command_encoder.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/context.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/cull_face_mode.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/debug_group.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/depth_mode.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/draw_mode.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/draw_scope.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/index_buffer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/index_vector.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/offscreen_texture.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/render_pass.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/renderbuffer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/renderer_backend.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/rendering_stats.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/stencil_mode.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/texture.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/types.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/uniform.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/upload_pass.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/vertex_buffer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/gfx/vertex_vector.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/background_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/circle_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/fill_extrusion_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/fill_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/heatmap_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/hillshade_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/layer_manager.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/line_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/raster_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/symbol_layer_factory.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/circle_layout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/clip_lines.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/clip_lines.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/layout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/merge_lines.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/merge_lines.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/pattern_layout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_feature.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_instance.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_instance.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_layout.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_layout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_projection.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/layout/symbol_projection.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/map.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/map_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/map_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/map_options.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/transform.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/transform.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/transform_state.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/transform_state.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/map/zoom_history.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/math/log2.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/platform/settings.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/attributes.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/background_pattern_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/background_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/background_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/circle_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/circle_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/clipping_mask_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/clipping_mask_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/collision_box_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/collision_box_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/collision_circle_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/debug_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/debug_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_extrusion_pattern_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_extrusion_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_extrusion_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_outline_pattern_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_outline_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_pattern_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/fill_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/heatmap_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/heatmap_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/heatmap_texture_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/heatmap_texture_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/hillshade_prepare_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/hillshade_prepare_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/hillshade_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/hillshade_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/line_gradient_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/line_pattern_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/line_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/line_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/line_sdf_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/program_parameters.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/program_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/programs.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/programs.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/raster_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/raster_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/segment.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_icon_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_program.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_sdf_icon_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_sdf_text_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/symbol_text_and_icon_program.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/textures.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/programs/uniforms.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/backend_scope.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/bucket_parameters.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/bucket_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/circle_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/circle_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/debug_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/debug_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/fill_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/fill_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/fill_extrusion_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/fill_extrusion_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/heatmap_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/heatmap_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/hillshade_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/hillshade_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/line_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/line_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/raster_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/raster_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/symbol_bucket.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/buckets/symbol_bucket.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/cross_faded_property_evaluator.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/cross_faded_property_evaluator.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/data_driven_property_evaluator.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/group_by_layout.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/group_by_layout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/image_atlas.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/image_atlas.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/image_manager.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/image_manager.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/image_manager_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_background_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_background_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_circle_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_circle_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_fill_extrusion_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_fill_extrusion_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_fill_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_fill_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_heatmap_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_heatmap_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_hillshade_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_hillshade_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_line_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_line_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_raster_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_raster_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_symbol_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_symbol_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/paint_parameters.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/paint_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/paint_property_binder.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/paint_property_statistics.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/pattern_atlas.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/pattern_atlas.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/possibly_evaluated_property_value.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/property_evaluation_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/property_evaluator.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_layer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_light.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_light.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_orchestrator.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_orchestrator.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_pass.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_source_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_static_data.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_static_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/render_tree.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/renderer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/renderer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/renderer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/renderer_state.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_custom_geometry_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_custom_geometry_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_geojson_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_geojson_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_image_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_image_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_raster_dem_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_raster_dem_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_raster_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_raster_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_tile_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_tile_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_vector_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/sources/render_vector_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/source_state.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/source_state.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/style_diff.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/style_diff.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_mask.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_pyramid.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_pyramid.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_render_data.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/tile_render_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/transition_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/update_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/upload_parameters.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/sprite/sprite_loader.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/sprite/sprite_loader.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/sprite/sprite_loader_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/sprite/sprite_parser.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/sprite/sprite_parser.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/asset_file_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/file_source_manager.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/http_file_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/local_file_source.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/main_resource_loader.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/network_status.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/resource.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/resource_options.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/resource_transform.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/storage/response.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/collection.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/color_ramp_property_value.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/constant.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/coordinate.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/custom_geometry_source_options.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/filter.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/function.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/geojson.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/geojson_options.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/get_json_type.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/json.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/light.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/position.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/property_value.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/rotation.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/stringify.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/tileset.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/conversion/transition_options.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/custom_tile_loader.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/custom_tile_loader.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/assertion.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/at.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/boolean_operator.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/case.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/check_subtype.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/coalesce.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/coercion.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/collator.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/collator_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/comparison.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/compound_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/distance.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/dsl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/dsl_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/find_zoom_curve.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/format_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/formatted.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/get_covering_stops.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/image.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/image_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/in.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/interpolate.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/is_constant.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/is_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/length.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/let.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/literal.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/match.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/number_format.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/parsing_context.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/step.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/util.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/util.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/value.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/expression/within.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/filter.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/image.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/image_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/image_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layer_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/background_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/background_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/background_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/background_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/background_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/circle_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/circle_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/circle_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/circle_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/circle_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_extrusion_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_extrusion_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_extrusion_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_extrusion_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_extrusion_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/fill_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/heatmap_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/heatmap_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/heatmap_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/heatmap_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/heatmap_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/hillshade_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/hillshade_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/hillshade_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/hillshade_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/hillshade_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/line_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/line_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/line_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/line_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/line_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/raster_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/raster_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/raster_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/raster_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/raster_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/symbol_layer.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/symbol_layer_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/symbol_layer_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/symbol_layer_properties.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/symbol_layer_properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/layout_property.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/light.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/light_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/light_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/light_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/paint_property.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/parser.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/parser.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/properties.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/property_expression.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/rapidjson_conversion.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/source_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/custom_geometry_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/custom_geometry_source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/custom_geometry_source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/geojson_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/geojson_source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/geojson_source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/image_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/image_source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/image_source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/raster_dem_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/raster_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/raster_source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/raster_source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/vector_source.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/vector_source_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/sources/vector_source_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/style.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/style_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/style_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/style/types.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/bidi.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/check_max_angle.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/check_max_angle.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/collision_feature.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/collision_feature.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/collision_index.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/collision_index.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/cross_tile_symbol_index.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/cross_tile_symbol_index.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/get_anchors.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/get_anchors.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_atlas.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_atlas.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_manager.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_manager.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_manager_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_pbf.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_pbf.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/glyph_range.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/language_tag.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/language_tag.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/local_glyph_rasterizer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/placement.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/placement.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/quads.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/quads.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/shaping.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/shaping.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/tagged_string.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/text/tagged_string.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/custom_geometry_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/custom_geometry_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geojson_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geojson_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geojson_tile_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile_data.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile_worker.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/geometry_tile_worker.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_dem_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_dem_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_dem_tile_worker.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_dem_tile_worker.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_tile_worker.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/raster_tile_worker.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_cache.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_cache.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_id_hash.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_id_io.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_loader.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_loader_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/tile_observer.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/vector_tile.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/vector_tile.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/vector_tile_data.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/tile/vector_tile_data.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/camera.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/bounding_volumes.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/bounding_volumes.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/chrono.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/color.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/constants.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/convert.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/dtoa.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/dtoa.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/event.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/font_stack.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/geo.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/geojson_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/geometry_util.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/geometry_util.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/grid_index.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/grid_index.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/hash.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/http_header.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/http_header.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/http_timeout.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/http_timeout.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/i18n.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/i18n.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/interpolate.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/intersection_tests.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/intersection_tests.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/io.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/io.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/literal.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/logging.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/longest_common_subsequence.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mapbox.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mapbox.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat2.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat2.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat3.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat3.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat4.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/mat4.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/math.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/premultiply.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/quaternion.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/rapidjson.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/rapidjson.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/rect.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/std.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/stopwatch.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/stopwatch.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/string.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/thread.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/thread_local.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/thread_pool.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/thread_pool.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_coordinate.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_cover.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_cover.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_cover_impl.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_cover_impl.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tile_range.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tiny_sdf.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/tiny_sdf.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/token.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/url.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/url.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/utf.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/version.cpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/version.hpp\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/work_request.cpp\n)\n\nif(MBGL_WITH_OPENGL)\n    message(\"-- Configuring GL-Native with OpenGL renderer backend\")\n    target_compile_definitions(\n        mbgl-core\n        PRIVATE MBGL_RENDER_BACKEND_OPENGL=1\n    )\n    target_sources(\n        mbgl-core\n        PRIVATE\n            ${PROJECT_SOURCE_DIR}/include/mbgl/gfx/backend.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/gl/custom_layer.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/gl/custom_layer_factory.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/gl/renderable_resource.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/gl/renderer_backend.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/layermanager/location_indicator_layer_factory.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/platform/gl_functions.hpp\n            ${PROJECT_SOURCE_DIR}/include/mbgl/style/layers/location_indicator_layer.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/attribute.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/attribute.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/command_encoder.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/command_encoder.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/context.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/context.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/custom_layer.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/custom_layer_factory.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/custom_layer_impl.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/custom_layer_impl.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/debugging_extension.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/debugging_extension.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/defines.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/draw_scope_resource.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/enum.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/enum.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/extension.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/framebuffer.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/index_buffer_resource.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/index_buffer_resource.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/object.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/object.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/offscreen_texture.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/offscreen_texture.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/program.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/render_custom_layer.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/render_custom_layer.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/render_pass.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/render_pass.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/renderbuffer_resource.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/renderer_backend.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/state.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/texture.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/texture.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/texture_resource.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/texture_resource.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/types.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/uniform.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/uniform.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/upload_pass.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/upload_pass.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/value.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/value.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/vertex_array.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/vertex_array.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/vertex_array_extension.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/vertex_buffer_resource.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/gl/vertex_buffer_resource.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/layermanager/location_indicator_layer_factory.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/platform/gl_functions.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/background.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/background_pattern.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/circle.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/clipping_mask.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/collision_box.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/collision_circle.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/debug.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill_extrusion.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill_extrusion_pattern.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill_outline.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill_outline_pattern.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/fill_pattern.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/heatmap.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/heatmap_texture.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/hillshade.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/hillshade_prepare.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/line.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/line_gradient.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/line_pattern.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/line_sdf.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/preludes.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/raster.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/shader_source.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/shader_source.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/shaders.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/shaders.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/symbol_icon.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/symbol_sdf_icon.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/symbol_sdf_text.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/programs/gl/symbol_text_and_icon.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_location_indicator_layer.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/renderer/layers/render_location_indicator_layer.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/location_indicator_layer.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/location_indicator_layer_impl.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/location_indicator_layer_impl.hpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/location_indicator_layer_properties.cpp\n            ${PROJECT_SOURCE_DIR}/src/mbgl/style/layers/location_indicator_layer_properties.hpp\n    )\nendif()\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/.git/HEAD)\n    execute_process(\n        COMMAND\n            git\n            rev-parse\n            --short=8\n            HEAD\n        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}\n        OUTPUT_VARIABLE MBGL_VERSION_REV\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\nelse()\n    set(MBGL_VERSION_REV 00000000)\nendif()\n\nset_source_files_properties(\n    ${PROJECT_SOURCE_DIR}/src/mbgl/util/version.cpp\n    PROPERTIES\n    COMPILE_DEFINITIONS\n    MBGL_VERSION_REV=\"${MBGL_VERSION_REV}\"\n)\n\ntarget_include_directories(\n    mbgl-core\n    PRIVATE ${PROJECT_SOURCE_DIR}/src\n)\n\ntarget_include_directories(\n    mbgl-core\n    PUBLIC ${PROJECT_SOURCE_DIR}/include\n)\n\ninclude(${PROJECT_SOURCE_DIR}/vendor/boost.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/csscolorparser.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/earcut.hpp.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/eternal.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/mapbox-base.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/parsedate.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/polylabel.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/protozero.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/unique_resource.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/vector-tile.cmake)\ninclude(${PROJECT_SOURCE_DIR}/vendor/wagyu.cmake)\n\ntarget_link_libraries(\n    mbgl-core\n    PRIVATE\n        Mapbox::Base::Extras::kdbush.hpp\n        Mapbox::Base::supercluster.hpp\n        Mapbox::Base::shelf-pack-cpp\n        Mapbox::Base::geojson-vt-cpp\n        Mapbox::Base::cheap-ruler-cpp\n        mbgl-compiler-options\n        mbgl-vendor-boost\n        mbgl-vendor-csscolorparser\n        mbgl-vendor-earcut.hpp\n        mbgl-vendor-eternal\n        mbgl-vendor-parsedate\n        mbgl-vendor-polylabel\n        mbgl-vendor-protozero\n        mbgl-vendor-unique_resource\n        mbgl-vendor-vector-tile\n        mbgl-vendor-wagyu\n    PUBLIC\n        Mapbox::Base\n        Mapbox::Base::Extras::expected-lite\n        Mapbox::Base::Extras::rapidjson\n        Mapbox::Base::geojson.hpp\n        Mapbox::Base::geometry.hpp\n        Mapbox::Base::optional\n        Mapbox::Base::variant\n)\n\nset_target_properties(\n    mbgl-core\n    PROPERTIES\n        INTERFACE_MAPBOX_NAME \"Mapbox GL Native\"\n        INTERFACE_MAPBOX_URL \"https://github.com/mapbox/mapbox-gl-native\"\n        INTERFACE_MAPBOX_AUTHOR \"Mapbox\"\n        INTERFACE_MAPBOX_LICENSE ${PROJECT_SOURCE_DIR}/LICENSE.md\n)\n\nset_property(TARGET mbgl-core PROPERTY FOLDER Core)\n\nadd_library(\n    Mapbox::Map ALIAS mbgl-core\n)\n\nif(MBGL_WITH_PLATFORM_EXTRAS)\n    include(${MBGL_WITH_PLATFORM_EXTRAS})\nendif()\n\nif(MBGL_WITH_CORE_ONLY)\n    return()\nendif()\n\ninclude(${PROJECT_SOURCE_DIR}/scripts/license.cmake)\n\nif(NOT EXISTS ${PROJECT_SOURCE_DIR}/internal/internal.cmake)\n    set(MBGL_PUBLIC_BUILD TRUE)\nendif()\n\nif(MBGL_WITH_QT)\n    include(${PROJECT_SOURCE_DIR}/platform/qt/qt.cmake)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Android)\n    include(${PROJECT_SOURCE_DIR}/platform/android/android.cmake)\nelseif(CMAKE_SYSTEM_NAME STREQUAL iOS)\n    include(${PROJECT_SOURCE_DIR}/platform/ios/ios.cmake)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Linux)\n    include(${PROJECT_SOURCE_DIR}/platform/linux/linux.cmake)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n    include(${PROJECT_SOURCE_DIR}/platform/macos/macos.cmake)\nelse()\n    message(FATAL_ERROR \"Unsupported target platform: \" ${CMAKE_SYSTEM_NAME})\nendif()\n\nadd_subdirectory(${PROJECT_SOURCE_DIR}/test)\nadd_subdirectory(${PROJECT_SOURCE_DIR}/benchmark)\nadd_subdirectory(${PROJECT_SOURCE_DIR}/render-test)\n\nif(EXISTS ${PROJECT_SOURCE_DIR}/internal/internal.cmake)\n    include(${PROJECT_SOURCE_DIR}/internal/internal.cmake)\nendif()\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.5830078125,
          "content": "# Code of conduct\n\nEveryone is invited to participate in Mapbox’s open source projects and public discussions: we want to create a welcoming and friendly environment. Harassment of participants or other unethical and unprofessional behavior will not be tolerated in our spaces. The [Contributor Covenant](http://contributor-covenant.org) applies to all projects under the Mapbox organization and we ask that you please read [the full text](http://contributor-covenant.org/version/1/2/0/).\n\nYou can learn more about our open source philosophy on [mapbox.com](https://www.mapbox.com/about/open/).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.818359375,
          "content": "# Contributing\n\nIf you have a usage question for a product built on Mapbox GL (such as our iOS or Android SDKs), please visit https://www.mapbox.com/help/.\n\nIf you want to contribute code:\n\n1. Please familiarize yourself with the [install process](INSTALL.md).\n\n1. Ensure that existing [pull requests](https://github.com/mapbox/mapbox-gl-native/pulls) and [issues](https://github.com/mapbox/mapbox-gl-native/issues) don’t already cover your contribution or question.\n\n1. Pull requests are gladly accepted. If there are any changes that developers using one of the GL SDKs should be aware of, please update the **master** section of the relevant changelog(s):\n  * [Mapbox Maps SDK for Android](platform/android/CHANGELOG.md)\n  * [Mapbox Maps SDK for iOS](platform/ios/CHANGELOG.md)\n  * [Mapbox Maps SDK for macOS](platform/macos/CHANGELOG.md)\n  * [node-mapbox-gl-native](platform/node/CHANGELOG.md)\n\n1. Prefix your commit messages with the platform(s) your changes affect: `[core]`, `[android]`, `[ios]`, `[macos]`, `[node]`, or `[qt]`.\n\nPlease note the special instructions for contributing new source code files, asset files, or user-facing strings to the [iOS SDK](platform/ios/DEVELOPING.md#contributing) or [macOS SDK](platform/macos/DEVELOPING.md#contributing).\n\n### Github issue labels\n\nOur labeling system is:\n\n * **minimalistic:** Labels’ usefulness are inversely proportional to how many we have.\n * **objective:** Labels should be objective enough that any two people would agree on a labeling decision.\n * **useful:** Labels should track state or capture semantic meaning that would otherwise be hard to search for.\n\nWe’ve color-coded our labels by facet to make them easier to use:\n\n * type (blue)\n * platform (black)\n * actionable status (red)\n * non-actionable status (grey)\n * importance / urgency (green)\n * topic / project / misc (yellow)\n"
        },
        {
          "name": "DEVELOPING.md",
          "type": "blob",
          "size": 0.3466796875,
          "content": "# Developing\n\nThis is been rewritten to include:\n\n- How to build for the platforms we support.\n- Acceptance criteria for code contributions (style, static asserts)\n- How to run the unit tests.\n- How to run the benchmarks.\n- How to run the render tests.\n- How to rebaseline baselines metrics.\n- How to use GL Native as a 3rd party library in your project.\n"
        },
        {
          "name": "LICENSE.mbgl-core.md",
          "type": "blob",
          "size": 29.458984375,
          "content": "### [Mapbox GL Native](https://github.com/mapbox/mapbox-gl-native) by Mapbox\n\n```\nmapbox-gl-native Copyright (c) 2014-2020 Mapbox.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in\n  the documentation and/or other materials provided with the\n  distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE, DATA, OR\nPROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n```\n\n---\n\n### [kdbush.hpp](https://github.com/mourner/kdbush.hpp) by Vladimir Agafonkin\n\n```\nCopyright (c) 2016, Vladimir Agafonkin\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n```\n\n---\n\n### [supercluster.hpp](https://github.com/mapbox/supercluster.hpp) by Mapbox\n\n```\nCopyright (c) 2016, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n```\n\n---\n\n### [shelf-pack-cpp](https://github.com/mapbox/shelf-pack-cpp) by Mapbox\n\n```\nISC License\n\nCopyright (c) 2017, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n```\n\n---\n\n### [geojson-vt-cpp](https://github.com/mapbox/geojson-vt-cpp) by Mapbox\n\n```\nISC License\n\nCopyright (c) 2015, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n```\n\n---\n\n### [cheap-ruler-cpp](https://github.com/mapbox/cheap-ruler-cpp) by Mapbox\n\n```\nISC License\n\nCopyright (c) 2017, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n```\n\n---\n\n### [Boost C++ Libraries](https://www.boost.org) by Boost authors\n\n```\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [csscolorparser](https://github.com/mapbox/css-color-parser-cpp) by Dean McNamee and Konstantin Käfer\n\n```\n(c) Dean McNamee <dean@gmail.com>, 2012.\n(c) Konstantin Käfer <mail@kkaefer.com>, 2014.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\n```\n\n---\n\n### [earcut.hpp](https://github.com/mapbox/earcut.hpp) by Mapbox\n\n```\nISC License\n\nCopyright (c) 2015, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n```\n\n---\n\n### [eternal](https://github.com/mapbox/eternal) by Mapbox\n\n```\nISC License\n\nCopyright (c) 2018, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n```\n\n---\n\n### [parsedate](https://curl.haxx.se) by Daniel Stenberg and others\n\n```\nCOPYRIGHT AND PERMISSION NOTICE\n\nCopyright (c) 1996 - 2020, Daniel Stenberg, <daniel@haxx.se>, and many\ncontributors, see the THANKS file.\n\nAll rights reserved.\n\nPermission to use, copy, modify, and distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright\nnotice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the name of a copyright holder shall not\nbe used in advertising or otherwise to promote the sale, use or other dealings\nin this Software without prior written authorization of the copyright holder.\n\n```\n\n---\n\n### [polylabel](https://github.com/mapbox/polylabel) by Mapbox\n\n```\nISC License\nCopyright (c) 2016 Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND ISC DISCLAIMS ALL WARRANTIES WITH REGARD TO\nTHIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.\nIN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA\nOR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS\nACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\nSOFTWARE.\n\n```\n\n---\n\n### [protozero](https://github.com/mapbox/protozero) by Mapbox\n\n```\nprotozero copyright (c) Mapbox.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the\n      distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE, DATA, OR\nPROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n```\n\n---\n\n### [unique_resource](https://github.com/okdshin/unique_resource) by Shintarou Okada\n\n```\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [vector-tile](https://github.com/mapbox/vector-tile) by Mapbox\n\n```\nCopyright (c) 2016, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n```\n\n---\n\n### [wagyu](https://github.com/mapbox/wagyu.git) by Angus Johnson and Mapbox\n\n```\nParts of the code in the Wagyu Library are derived from the version of the \nClipper Library by Angus Johnson listed below.\n\nAuthor    :  Angus Johnson\nVersion   :  6.4.0\nDate      :  2 July 2015\nWebsite   :  http://www.angusj.com\n\nCopyright for portions of the derived code in the Wagyu library are held \nby Angus Johnson, 2010-2015. All other copyright for the Wagyu Library are held by \nMapbox, 2016. This code is published in accordance with, and retains the same license\nas the Clipper Library by Angus Johnson.\n\nCopyright (c) 2010-2015, Angus Johnson\nCopyright (c) 2016, Mapbox\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [mapbox-base](https://github.com/mapbox/mapbox-base) by Mapbox\n\n```\nCopyright (c) MapBox\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n- Neither the name \"MapBox\" nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\nLOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n---\n\n### [expected-lite](https://github.com/martinmoene/expected-lite) by Martin Moene\n\n```\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [RapidJSON](https://rapidjson.org) by THL A29 Limited, a Tencent company, and Milo Yip\n\n```\nTencent is pleased to support the open source community by making RapidJSON available. \n \nCopyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip.  All rights reserved.\n\nIf you have downloaded a copy of the RapidJSON binary from Tencent, please note that the RapidJSON binary is licensed under the MIT License.\nIf you have downloaded a copy of the RapidJSON source code from Tencent, please note that RapidJSON source code is licensed under the MIT License, except for the third-party components listed below which are subject to different license terms.  Your integration of RapidJSON into your own projects may require compliance with the MIT License, as well as the other licenses applicable to the third-party components included within RapidJSON. To avoid the problematic JSON license in your own projects, it's sufficient to exclude the bin/jsonchecker/ directory, as it's the only code under the JSON license.\nA copy of the MIT License is included in this file.\n\nOther dependencies and licenses:\n\nOpen Source Software Licensed Under the BSD License:\n--------------------------------------------------------------------\n\nThe msinttypes r29 \nCopyright (c) 2006-2013 Alexander Chemeris \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. \n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of  copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nOpen Source Software Licensed Under the JSON License:\n--------------------------------------------------------------------\n\njson.org \nCopyright (c) 2002 JSON.org\nAll Rights Reserved.\n\nJSON_checker\nCopyright (c) 2002 JSON.org\nAll Rights Reserved.\n\n\t\nTerms of the JSON License:\n---------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nTerms of the MIT License:\n--------------------------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [geojson.hpp](https://github.com/mapbox/geojson-cpp) by Mapbox\n\n```\nCopyright (c) 2016, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n```\n\n---\n\n### [geometry.hpp](https://github.com/mapbox/geometry.hpp) by Mapbox\n\n```\nCopyright (c) 2016, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n```\n\n---\n\n### [Optional](https://github.com/akrzemi1/Optional) by Andrzej Krzemienski\n\n```\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n```\n\n---\n\n### [variant](https://github.com/mapbox/variant) by Mapbox\n\n```\nCopyright (c) MapBox\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n- Neither the name \"MapBox\" nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\nLOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n---\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.259765625,
          "content": "mapbox-gl-native Copyright (c) 2014-2020 Mapbox.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in\n  the documentation and/or other materials provided with the\n  distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.34375,
          "content": "# Mapbox GL Native\n\n[![Circle CI build status](https://circleci.com/gh/mapbox/mapbox-gl-native.svg?style=shield)](https://circleci.com/gh/mapbox/workflows/mapbox-gl-native/tree/master) [![Coverage Status](https://codecov.io/gh/mapbox/mapbox-gl-native/branch/master/graph/badge.svg)](https://codecov.io/gh/mapbox/mapbox-gl-native)\n\nA C++ library that powers customizable vector maps in native applications on multiple platforms by taking stylesheets that conform to the [Mapbox Style Specification](https://docs.mapbox.com/mapbox-gl-js/style-spec/), applying them to vector tiles that conform to the [Mapbox Vector Tile Specification](https://github.com/mapbox/vector-tile-spec/), and rendering them using OpenGL or Metal.\n\nTo embed interactive maps into a native application using a platform-specific language, install the Mapbox Maps SDK:\n\n* [Mapbox Maps SDK for Android](https://github.com/mapbox/mapbox-gl-native-android/) (Java, Kotlin)\n* [Mapbox Maps SDK for iOS](https://github.com/mapbox/mapbox-gl-native-ios/blob/master/platform/ios/) (Objective-C, Swift, Interface Builder)\n* [Mapbox Maps SDK for macOS](https://github.com/mapbox/mapbox-gl-native-ios/tree/master/platform/macos/) (Objective-C, Swift, Interface Builder, AppleScript)\n\n[Mapbox GL JS](https://github.com/mapbox/mapbox-gl-js) is the WebGL-based counterpart to Mapbox GL Native that is designed for use on the Web.\n\n## [Developing](DEVELOPING.md)\n\nWe use [CMake](https://cmake.org/cmake/help/latest/) to build Mapbox GL Native\nfor various platforms, including Linux, Android, iOS, macOS and Windows. The\nfollowing command, executed from the root of this repository tree, will build\nMapbox GL Native targeting your host architecture given that you have all the\ndependencies installed and run the example app.\n\n```\n$ git submodule update --init --recursive\n$ cmake . -B build\n$ cmake --build build\n$ MAPBOX_ACCESS_TOKEN=my_access_token_here ./build/platform/glfw/mbgl-glfw\n```\n\n## License\n\nMapbox GL Native is licensed under the [2-Clause BSD license](LICENSE.md). The licenses of its dependencies are tracked via [FOSSA](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native):\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmapbox%2Fmapbox-gl-native)\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.6455078125,
          "content": "platform: x64\n\nimage:\n- Visual Studio 2015\n- Visual Studio 2017\n\nenvironment:\n  PYTHON: C:\\python37\n\n  matrix:\n  - configuration: Release\n  - configuration: Debug\n\ntest: off\n\nclone_depth: 1\n\nfor:\n-\n  matrix:\n    only:\n      - image: Visual Studio 2015\n\n  environment:\n    LLVM_VERSION: 5.0.1\n    LLVM_HASH: 981543611D719624ACB29A2CFFD6A479CFF36E8AB5EE8A57D8ECA4F9C4C6956F\n    VCVARSALL: 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat'\n    QT_PREFIX: 'C:\\Qt\\latest\\msvc2015_64\\lib\\cmake'\n\n-\n  matrix:\n    only:\n      - image: Visual Studio 2017\n\n  environment:\n    LLVM_VERSION: 7.0.0\n    LLVM_HASH: 74b197a3959b0408adf0824be01db8dddfa2f9a967f4085af3fad900ed5fdbf6\n    VCVARSALL: 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat'\n    QT_PREFIX: 'C:\\Qt\\latest\\msvc2017_64\\lib\\cmake'\n\ncache:\n  - '%APPVEYOR_BUILD_FOLDER%\\.git\\modules'\n  - '%APPVEYOR_BUILD_FOLDER%\\LLVM-%LLVM_VERSION%-win64.exe'\n  - '%APPVEYOR_BUILD_FOLDER%\\cmake-3.10.1-win64-x64.zip'\n  - C:\\clcache\n\ninstall:\n  - set PATH=%PYTHON%\\Scripts;%PYTHON%;%PATH%\n  - pip install clcache\n  - git config --system core.longpaths true\n  - git submodule sync\n  - git submodule update --init\n  - git submodule foreach git submodule update --init\n  - ps: |\n      if (!(Test-Path \"LLVM-$env:LLVM_VERSION-win64.exe\")) {\n          appveyor DownloadFile \"https://releases.llvm.org/$env:LLVM_VERSION/LLVM-$env:LLVM_VERSION-win64.exe\"\n      }\n      scripts\\check-sha256.ps1 LLVM-$env:LLVM_VERSION-win64.exe \"$env:LLVM_HASH\"\n      Start-Process -FilePath \"LLVM-$env:LLVM_VERSION-win64.exe\" -ArgumentList '/S',\"/D=C:\\LLVM-$env:LLVM_VERSION\" -Wait\n  - ps: |\n      if (!(Test-Path cmake-3.10.1-win64-x64.zip)) {\n          appveyor DownloadFile https://cmake.org/files/v3.10/cmake-3.10.1-win64-x64.zip\n      }\n      scripts\\check-sha256.ps1 cmake-3.10.1-win64-x64.zip 8251F70C85B58F3CA1F24E4A3B0637E2D609B5E4A341D00B70E02E89244D5029\n      Start-Process -FilePath '7z' -ArgumentList 'x','cmake-3.10.1-win64-x64.zip','-oC:\\' -Wait\n\nbefore_build:\n  - set PATH=C:\\LLVM-%LLVM_VERSION%\\bin;%PATH%\n  - set PATH=C:\\cmake-3.10.1-win64-x64\\bin;%PATH%\n  - set CLCACHE_DIR=c:\\clcache\n  - set CLCACHE_CL=clang-cl\n  - clcache -z\n  - set CC=clcache\n  - set CXX=clcache\n  - set CTEST_OUTPUT_ON_FAILURE=1\n  - mkdir %APPVEYOR_BUILD_FOLDER%\\build\n  - cd %APPVEYOR_BUILD_FOLDER%\\build\n\nbuild_script:\n  - call \"%VCVARSALL%\" amd64\n  - cmake -G \"Ninja\"\n      -DCMAKE_BUILD_TYPE=%CONFIGURATION%\n      -DCMAKE_MAKE_PROGRAM=\"%APPVEYOR_BUILD_FOLDER%\\platform\\qt\\ninja.exe\"\n      -DCMAKE_PREFIX_PATH=%QT_PREFIX%\n      -DMBGL_WITH_QT=ON\n      ..\n  - cmake --build . --target qmapboxgl -- -j %NUMBER_OF_PROCESSORS%\n  - clcache -s\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 18.6865234375,
          "content": "version: 2.1\n\n#\n# This CI configuration heavily relies on templates and CMake. Most of the\n# jobs will have the following steps (usually configurable via parameters):\n# prepare, build and test.\n#\n# 'sanity-checks' and 'baselines' are special. The former will run a series\n# of checks to see if the patch has the minimum requirements for landing in\n# our repository and the latter will generate new baselines for the tests\n# in case the PR changes the baselines.\n#\nworkflows:\n  version: 2\n  development:\n    jobs:\n      - sanity-checks\n      - build-template:\n          name: android-armeabi-v7a-release\n          executor_name: ubuntu-eoan\n          target_is_android: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_TOOLCHAIN_FILE=/opt/android/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_CCACHE=/usr/bin/ccache -DANDROID_ABI=armeabi-v7a'\n          install: true\n      - build-template:\n          name: android-arm64-v8a-release\n          executor_name: ubuntu-eoan\n          target_is_android: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_TOOLCHAIN_FILE=/opt/android/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_CCACHE=/usr/bin/ccache -DANDROID_ABI=arm64-v8a'\n          build_params: '--target libmbgl-render-test-runner.so'\n          install: true\n      - build-template:\n          name: android-x86-release\n          executor_name: ubuntu-eoan\n          target_is_android: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_TOOLCHAIN_FILE=/opt/android/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_CCACHE=/usr/bin/ccache -DANDROID_ABI=x86'\n          build_params: '--target libmbgl-render-test-runner.so'\n          install: true\n      - build-template:\n          name: android-x86_64-release\n          executor_name: ubuntu-eoan\n          target_is_android: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_TOOLCHAIN_FILE=/opt/android/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_CCACHE=/usr/bin/ccache -DANDROID_ABI=x86_64'\n          build_params: '--target libmbgl-render-test-runner.so'\n          install: true\n      - build-template:\n          name: linux-gcc8-release\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8'\n          install: true\n          metrics: true\n          style_tests: true\n      - build-template:\n          name: linux-gcc5-release\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - linux-gcc8-release\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5'\n          build_params: '--target mbgl-glfw'\n          test_params: '-N -Q'\n      - build-template:\n          name: linux-gcc8-debug-coverage\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - linux-gcc8-release\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_BUILD_TYPE=Debug -DMBGL_WITH_COVERAGE=ON'\n          style_tests: true\n          upload_coverage: true\n      - build-template:\n          name: linux-clang8-release\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8'\n          install: true\n          metrics: true\n          style_tests: true\n      - build-template:\n          name: FIXME-linux-asan\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8 -DMBGL_WITH_SANITIZER=address'\n          test_params: '|| true'\n          style_tests: true\n      - build-template:\n          name: linux-tsan\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8 -DMBGL_WITH_SANITIZER=thread'\n          style_tests: true\n      - build-template:\n          name: FIXME-linux-valgrind\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8 -DCMAKE_CXX_FLAGS=-DSANITIZE'\n          test_params: '-j 4 -E \"mbgl-node|gl-benchmark\" -D ExperimentalMemCheck || true'\n      - build-template:\n          name: linux-ubsan\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8 -DMBGL_WITH_SANITIZER=undefined'\n          style_tests: true\n      - build-template:\n          name: qt5-linux-gcc5-release\n          executor_name: ubuntu-eoan\n          target_is_linux: true\n          requires:\n            - sanity-checks\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5 -DMBGL_WITH_QT=ON'\n      - build-template:\n          name: qt5-macos-gcc5-release\n          executor_name: macos-11_1_0\n          target_is_macos: true\n          requires:\n            - linux-gcc8-release\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DMBGL_WITH_QT=ON -DCMAKE_PREFIX_PATH=$(echo /usr/local/Cellar/qt/5.*/lib/cmake)'\n      - build-template:\n          name: macos-xcode11-release\n          executor_name: macos-11_1_0\n          target_is_macos: true\n          requires:\n            - linux-gcc8-release\n          config_params: '-G Ninja -DCMAKE_INSTALL_PREFIX=/tmp/workspace/install/$CIRCLE_JOB -DCMAKE_CXX_COMPILER_LAUNCHER=ccache'\n          install: true\n          metrics: true\n          style_tests: true\n      - build-template:\n          name: macos-xcode11-debug\n          executor_name: macos-11_1_0\n          target_is_macos: true\n          requires:\n            - macos-xcode11-release\n          config_params: '-G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=Debug -DMBGL_WITH_COVERAGE=ON'\n          style_tests: true\n          upload_coverage: true\n      - build-template:\n          name: ios-xcode11-release\n          executor_name: macos-11_3_1\n          target_is_macos: true\n          requires:\n            - linux-gcc8-release\n          config_params: '-G Xcode -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_ARCHITECTURES=arm64e -DCMAKE_OSX_SYSROOT=iphoneos -DMBGL_WITH_IOS_CCACHE=ON'\n          build_params: '--config Release'\n      - baselines:\n          requires:\n            - android-arm64-v8a-release\n            - android-armeabi-v7a-release\n            - android-x86-release\n            - android-x86_64-release\n            - linux-clang8-release\n            - linux-gcc8-release\n            - macos-xcode11-release\n      - trigger-pipeline:\n          requires:\n            - baselines\n          name: mapboxci\n          slug: mapbox/mapbox-gl-native-internal\n      - android-api-breakage:\n          requires:\n            - baselines\n\n#\n# Executors: we currently support two executors, one based on Ubuntu 19.04 aka Disco\n# and another based on macOS + Xcode 11.1.0. The Ubuntu executor is a lot more stable\n# and will produce reproduceable builds completely offline because it uses a docker\n# image with all the build dependencies preinstalled, whereas the macOS is managed\n# by CircleCI and will install dependencies on build time. Build results from the macOS\n# bots might differ if in meantime the macOS image gets updated. :-(\n#\nexecutors:\n  ubuntu-eoan:\n    docker:\n      # FIXME: Move the image to mbgl/\n      - image: tmpsantos/mbgl_ci:1.9\n    resource_class: xlarge\n    working_directory: /src\n    environment:\n      DISPLAY: :99\n      UBSAN_OPTIONS: print_stacktrace=1:halt_on_error=1:report_error_type=1\n      ASAN_OPTIONS: strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1:halt_on_error=0\n      QT_INSTALL_DOCS: /usr/share/qt5/doc\n      QT_VERSION: 5\n      TSAN_OPTIONS: suppressions=/src/platform/linux/tsan_suppress.txt\n  macos-11_1_0:\n    macos:\n      xcode: '11.1.0'\n    environment:\n      HOMEBREW_NO_AUTO_UPDATE: 1\n      HOMEBREW_NO_INSTALL_CLEANUP: 1\n  macos-11_3_1:\n    macos:\n      xcode: '11.3.1'\n    environment:\n      HOMEBREW_NO_AUTO_UPDATE: 1\n      HOMEBREW_NO_INSTALL_CLEANUP: 1\n\ncommands:\n  prepare:\n    steps:\n      - restore_cache:\n          keys:\n            - 'ccache-v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}'\n            - 'ccache-v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-'\n            - 'ccache-v1-{{ .Environment.CIRCLE_JOB }}-master'\n      - run:\n          name: Prepare\n          command: |\n            git submodule sync\n            git submodule update --init --recursive\n            git gc\n            npm install --ignore-scripts\n            ulimit -c unlimited\n  prepare-linux:\n    steps:\n      - run:\n          name: Prepare Linux\n          background: true\n          command: |\n            Xvfb :99 -noreset -screen 0 1280x1024x24\n  prepare-macos:\n    steps:\n      - run:\n          name: Prepare macOS\n          command: |\n            brew install cmake ccache glfw ninja pkgconfig qt chargepoint/xcparse/xcparse\n            brew cask install google-cloud-sdk\n            pip install ansi2html scipy\n  config:\n    parameters:\n      config_params:\n        type: string\n    steps:\n      - run:\n          name: Configure\n          command: |\n            cmake . -B build << parameters.config_params >>\n  build:\n    parameters:\n      build_params:\n        type: string\n    steps:\n      - run:\n          name: Build\n          command: |\n            ccache --zero-stats --max-size=2G\n            cmake --build build -j $(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null) << parameters.build_params >>\n            ccache --show-stats\n  install:\n    steps:\n      - run:\n          name: Install\n          command: |\n            cmake --build build --target install/strip\n  test:\n    parameters:\n      test_params:\n        type: string\n    steps:\n      - run:\n          name: Test\n          command: |\n            cd build\n            ctest -V << parameters.test_params >>\n  metrics:\n    parameters:\n      step_name:\n        type: string\n      metrics_params:\n        type: string\n    steps:\n      - run:\n          name: << parameters.step_name >>\n          command: |\n            build/mbgl-render-test-runner << parameters.metrics_params >>\n  save:\n    steps:\n      - save_cache:\n          key: 'ccache-v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}'\n          paths:\n            - .git/modules\n            - /Users/distiller/Library/Caches/Homebrew\n            - node_modules\n            - ~/.ccache\n            - ~/.gradle\n      - run:\n          name: Collecting results\n          when: always\n          command: |\n            mkdir -p /tmp/workspace/metrics && touch /tmp/workspace/.$CIRCLE_JOB\n            if [ -d metrics/$CIRCLE_JOB ]; then cp -r metrics/$CIRCLE_JOB /tmp/workspace/metrics; fi\n            mkdir -p /tmp/tests/baselines\n            if [ -f baselines.patch ]; then cp baselines.patch /tmp/tests/baselines; fi\n            mkdir -p /tmp/tests/nitpick\n            if [ -f nitpick.patch ]; then cp nitpick.patch /tmp/tests/nitpick; fi\n            mkdir -p /tmp/tests/render\n            if [ -f clang-tidy.log ]; then cp clang-tidy.log /tmp/tests/clang-tidy; fi\n            mkdir -p /tmp/tests/render\n            if ls render-test/*.html 1> /dev/null 2>&1; then cp render-test/*.html /tmp/tests/render; fi\n            mkdir -p /tmp/tests/metrics\n            if ls metrics/*.html 1> /dev/null 2>&1; then cp metrics/*.html /tmp/tests/metrics; fi\n            mkdir -p /tmp/tests/coredumps\n            if ls core* 1> /dev/null 2>&1; then cp core* /tmp/tests/coredumps; fi\n            mkdir -p /tmp/tests/valgrind\n            if ls build/Testing/Temporary/MemoryChecker.*.log 1> /dev/null 2>&1; then cp build/Testing/Temporary/MemoryChecker.*.log /tmp/tests/valgrind; fi\n      - persist_to_workspace:\n          root: /tmp/workspace\n          paths:\n            - '*'\n      - store_artifacts:\n          path: /tmp/tests\n          destination: tests\n  upload-coverage-results:\n    steps:\n    - run:\n        name: Get coverage results\n        command: |\n          cd build\n          find . -type f -iname *.gcda -exec gcov -p -b {} \\;\n  publish-coverage-metrics:\n    steps:\n    - run:\n        name: Upload coverage metrics to s3\n        command: |\n          if [[ $CIRCLE_BRANCH == master ]]; then\n              scripts/publish_core_codecoverage.js -p Linux -s Core\n          fi\n\njobs:\n  android-api-breakage:\n    executor: ubuntu-eoan\n    steps:\n      - run:\n          name: Clone mapbox-gl-native-android in working directory\n          command: git clone https://github.com/mapbox/mapbox-gl-native-android.git .\n      - prepare\n      - run:\n          name: Update mapbox-gl-native to match PR\n          command: cd vendor/mapbox-gl-native && git fetch origin $CIRCLE_SHA1 && git checkout $CIRCLE_SHA1 && git submodule update --init --recursive\n      - run:\n          name: Build SDK\n          command: BUILDTYPE=Release make android-arm-v8\n      - save\n  trigger-pipeline:\n    executor: ubuntu-eoan\n    parameters:\n      slug:\n        type: string\n    steps:\n      - checkout\n      - run:\n          name: Trigger Pipeline\n          command: |\n              scripts/ci-circleci-start-pipeline.py --target-slug << parameters.slug >>\n  sanity-checks:\n    executor: ubuntu-eoan\n    steps:\n      - checkout\n      - prepare\n      - config:\n          config_params: '-G Ninja -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8'\n      - run:\n          name: Code Generators\n          command: |\n            cp build/mbgl-core.license LICENSE.mbgl-core.md\n            platform/default/include/mbgl/storage/offline_schema.js\n            scripts/generate-shaders.js\n            scripts/generate-style-code.js\n            git add -A && git diff --staged --exit-code | tee nitpick.patch\n      - run:\n          name: Validation Scripts\n          command: |\n            scripts/nitpick/submodule-pin.js\n      - run:\n          name: CMake Format\n          command: |\n            cmake-format -i $(find -name '*.cmake'      -and -not -path './vendor/*/*' -and -not -path './build/*')\n            cmake-format -i $(find -name CMakeLists.txt -and -not -path './vendor/*/*' -and -not -path './build/*')\n            git diff --exit-code | tee nitpick.patch\n      - run:\n          name: Clang Format\n          command: |\n            git diff -U0 --ignore-submodules=all --no-color origin/master... *.cpp *.hpp | clang-format-diff-8 -p1 -i\n            git diff --exit-code | tee nitpick.patch\n      - run:\n          name: Clang Tidy\n          command: |\n            run-clang-tidy-8 -quiet -j $(nproc) -header-filter='.*' -p build $PWD/src/.*cpp $PWD/platform/.*cpp\n      - save\n  baselines:\n    executor: ubuntu-eoan\n    steps:\n      - checkout\n      - prepare\n      - prepare-linux\n      - attach_workspace:\n          at: /tmp/attach\n      - run:\n          name: 'Binary Size'\n          command: |\n            /tmp/attach/install/linux-gcc8-release/bin/mbgl-render-test-runner -u rebaseline -p metrics/binary-size.json\n      - run:\n          name: 'Metrics Baselines'\n          command: |\n            cp -r /tmp/attach/metrics .\n            git add -A && git diff --staged --exit-code | tee baselines.patch\n      - save\n  build-template:\n    parameters:\n      config_params:\n        type: string\n        default: ''\n      build_params:\n        type: string\n        default: ''\n      test_params:\n        type: string\n        default: ''\n      executor_name:\n        type: string\n      target_is_android:\n        type: boolean\n        default: false\n      target_is_linux:\n        type: boolean\n        default: false\n      target_is_macos:\n        type: boolean\n        default: false\n      install:\n        type: boolean\n        default: false\n      metrics:\n        type: boolean\n        default: false\n      style_tests:\n        type: boolean\n        default: false\n      upload_coverage:\n        type: boolean\n        default: false\n      publish_coverage:\n        type: boolean\n        default: false\n    executor: << parameters.executor_name >>\n    steps:\n      - checkout\n      - when:\n          condition: << parameters.target_is_android >>\n          steps:\n            - prepare\n            - config:\n                config_params: << parameters.config_params >>\n            - build:\n                build_params: << parameters.build_params >>\n      - when:\n          condition: << parameters.target_is_linux >>\n          steps:\n            - prepare\n            - prepare-linux\n            - config:\n                config_params: << parameters.config_params >>\n            - build:\n                build_params: << parameters.build_params >>\n            - test:\n                test_params: << parameters.test_params >>\n      - when:\n          condition: << parameters.target_is_macos >>\n          steps:\n            - prepare\n            - prepare-macos\n            - config:\n                config_params: << parameters.config_params >>\n            - build:\n                build_params: << parameters.build_params >>\n            - test:\n                test_params: << parameters.test_params >>\n      - when:\n          condition: << parameters.install >>\n          steps:\n            - install\n      - when:\n          condition: << parameters.style_tests >>\n          steps:\n            - metrics:\n                step_name: 'Style Tests'\n                metrics_params: '-u rebaseline -p metrics/$CIRCLE_JOB-style.json'\n      - when:\n          condition: << parameters.metrics >>\n          steps:\n            - metrics:\n                step_name: 'Metrics'\n                metrics_params: '-u rebaseline -p metrics/$CIRCLE_JOB-metrics.json'\n      - when:\n          condition: << parameters.upload_coverage >>\n          steps:\n            - upload-coverage-results\n      - when:\n          condition: << parameters.publish_coverage >>\n          steps:\n            - publish-coverage-metrics\n      - save\n"
        },
        {
          "name": "cloudformation",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.16015625,
          "content": "ignore:\n  - \"benchmark/\"\n  - \"expression-test/\"\n  - \"render-test/\"\n  - \"test/\"\n  - \"vendor/\"\n\ncoverage:\n  status:\n    project:\n      default:\n        threshold: 1%\n"
        },
        {
          "name": "expression-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "mapbox-gl-js",
          "type": "commit",
          "content": null
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9326171875,
          "content": "{\n  \"name\": \"@mapbox/mapbox-gl-native\",\n  \"version\": \"5.0.0\",\n  \"description\": \"Renders map tiles with Mapbox GL\",\n  \"keywords\": [\n    \"mapbox\",\n    \"gl\"\n  ],\n  \"main\": \"platform/node/index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/mapbox/mapbox-gl-native.git\"\n  },\n  \"license\": \"BSD-2-Clause\",\n  \"dependencies\": {\n    \"@mapbox/cmake-node-module\": \"^1.2.0\",\n    \"minimatch\": \"^3.0.4\",\n    \"node-pre-gyp\": \"^0.10.2\",\n    \"npm-run-all\": \"^4.0.2\"\n  },\n  \"devDependencies\": {\n    \"@mapbox/flow-remove-types\": \"^1.3.0-await.upstream.2\",\n    \"@mapbox/mvt-fixtures\": \"3.5.1\",\n    \"@octokit/plugin-retry\": \"^2.2.0\",\n    \"@octokit/rest\": \"^16.0.0\",\n    \"aws-sdk\": \"^2.285.1\",\n    \"csscolorparser\": \"~1.0.2\",\n    \"d3-queue\": \"3.0.7\",\n    \"diff\": \"4.0.1\",\n    \"ejs\": \"^3.1.7\",\n    \"esm\": \"~3.0.84\",\n    \"express\": \"^4.11.1\",\n    \"json-stringify-pretty-compact\": \"^2.0.0\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"lodash\": \"^4.16.4\",\n    \"lodash.template\": \"4.5.0\",\n    \"mapbox-gl-styles\": \"2.0.2\",\n    \"pixelmatch\": \"^4.0.2\",\n    \"pngjs\": \"^3.4.0\",\n    \"pretty-bytes\": \"^5.1.0\",\n    \"request\": \"^2.88.0\",\n    \"semver\": \"^5.5.0\",\n    \"shuffle-seed\": \"1.1.6\",\n    \"st\": \"1.2.2\",\n    \"tape\": \"^4.5.1\",\n    \"xcode\": \"^1.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=6\"\n  },\n  \"scripts\": {\n    \"install\": \"node-pre-gyp install --fallback-to-build=false\",\n    \"test\": \"tape platform/node/test/js/**/*.test.js\",\n    \"test-memory\": \"node --expose-gc platform/node/test/memory.test.js\",\n    \"test-expressions\": \"node -r esm platform/node/test/expression.test.js\",\n    \"test-render\": \"node -r esm platform/node/test/render.test.js\",\n    \"test-query\": \"node -r esm platform/node/test/query.test.js\"\n  },\n  \"gypfile\": true,\n  \"binary\": {\n    \"module_name\": \"mbgl\",\n    \"module_path\": \"./lib/{node_abi}\",\n    \"host\": \"https://mapbox-node-binary.s3.amazonaws.com\",\n    \"remote_path\": \"./{name}/v{version}\",\n    \"package_name\": \"{node_abi}-{platform}-{arch}-{configuration}.tar.gz\"\n  }\n}\n"
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "render-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}