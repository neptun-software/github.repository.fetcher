{
  "metadata": {
    "timestamp": 1736565883824,
    "page": 842,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bytedance/terarkdb",
      "stars": 2053,
      "defaultBranch": "dev.1.4",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.134765625,
          "content": "# Complete list of style options can be found at: \n# http://clang.llvm.org/docs/ClangFormatStyleOptions.html\n---\nBasedOnStyle: Google\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0224609375,
          "content": "make_config.mk\n\n*.a\n*.arc\n*.d\n*.dylib*\n*.gcda\n*.gcno\n*.o\n*.so\n*.so.*\n*_test\n*_bench\n*_stress\n*.out\n*.class\n*.*jnilib*\n*.d-e\n*.o-*\n*.swp\n*~\n*.vcxproj\n*.vcxproj.filters\n*.sln\n*.cmake\nCMakeCache.txt\nCMakeFiles/\nbuild/\n\nldb\nmanifest_dump\nzenfs\nsst_dump\nblob_dump\ncolumn_aware_encoding_exp\nutil/build_version.cc\nbuild_tools/VALGRIND_LOGS/\ncoverage/COVERAGE_REPORT\n.gdbhistory\n.gdb_history\npackage/\nunity.a\ntags\netags\nrocksdb_dump\nrocksdb_undump\ndb_test2\ntrace_analyzer\ntrace_analyzer_test\n\njava/out\njava/target\njava/*.log\njava/include/org_rocksdb_*.h\n\n.idea/\n*.iml\n\nrocksdb.cc\nrocksdb.h\nunity.cc\njava/crossbuild/.vagrant\n.vagrant/\njava/**/*.asc\njava/javadoc\n\nscan_build_report/\nt\nLOG\n\ndb_logs/\ntp2/\nfbcode/\nfbcode\nbuckifier/*.pyc\n.vs\nvs2017\n/msvc14/build_version.dir\n/msvc14\n/terark-core\nterark-core.got\n\ncmake-build-debug\npkg\n.DS_Store\n.clangd/\ncompile_commands.json\n\nlz4-1.8.0/\nsnappy-1.1.4/\nzstd-1.3.3\nlz4-1.8.0.tar.gz\noutput/\noutput2/\nsnappy-1.1.4.tar.gz\nzlib-1.2.11.tar.gz\nzlib-1.2.11/\nzstd-1.3.3.tar.gz\n.vscode\ninclude/rocksdb/terark_namespace.h\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.8291015625,
          "content": "[submodule \"third-party/terark-zip\"]\n\tpath = third-party/terark-zip\n\turl = https://github.com/bytedance/terark-zip.git\n[submodule \"third-party/zstd\"]\n\tpath = third-party/zstd\n\turl = https://github.com/facebook/zstd.git\n[submodule \"third-party/zlib\"]\n\tpath = third-party/zlib\n\turl = https://github.com/madler/zlib.git\n[submodule \"third-party/snappy\"]\n\tpath = third-party/snappy\n\turl = https://github.com/google/snappy.git\n[submodule \"third-party/lz4\"]\n\tpath = third-party/lz4\n\turl = https://github.com/lz4/lz4.git\n[submodule \"third-party/jemalloc\"]\n\tpath = third-party/jemalloc\n\turl = https://github.com/jemalloc/jemalloc.git\n[submodule \"third-party/gflags\"]\n\tpath = third-party/gflags\n\turl = https://github.com/gflags/gflags.git\n[submodule \"third-party/zenfs\"]\n\tpath = third-party/zenfs\n\turl = https://github.com/westerndigitalcorporation/zenfs.git\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.0654296875,
          "content": "extraction:\n  cpp:\n    index:\n      build_command: make static_lib\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.365234375,
          "content": "sudo: false\ndist: trusty\nlanguage: cpp\nos:\n  - linux\n  - osx\ncompiler:\n  - clang\n  - gcc\nosx_image: xcode8.3\njdk:\n  - oraclejdk7\ncache:\n  - ccache\n  - apt\n\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - curl\n      - g++-8\n      - libbz2-dev\n      - libgflags-dev\n      - libsnappy-dev\n      - mingw-w64\n      - zlib1g-dev\nenv:\n  - TEST_GROUP=platform_dependent # 16-18 minutes\n  - TEST_GROUP=1 # 33-35 minutes\n  - TEST_GROUP=2 # 18-20 minutes\n  - TEST_GROUP=3 # 20-22 minutes\n  - TEST_GROUP=4 # 12-14 minutes\n  # Run java tests\n  - JOB_NAME=java_test # 4-11 minutes\n  # Build ROCKSDB_LITE\n  - JOB_NAME=lite_build # 3-4 minutes\n  # Build examples\n  - JOB_NAME=examples # 5-7 minutes\n  - JOB_NAME=cmake # 3-5 minutes\n  - JOB_NAME=cmake-gcc8 # 3-5 minutes\n  - JOB_NAME=cmake-mingw # 3 minutes\n\nmatrix:\n  exclude:\n  - os: osx\n    env: TEST_GROUP=1\n  - os: osx\n    env: TEST_GROUP=2\n  - os: osx\n    env: TEST_GROUP=3\n  - os: osx\n    env: TEST_GROUP=4\n  - os: osx\n    env: JOB_NAME=cmake-gcc8\n  - os : osx\n    env: JOB_NAME=cmake-mingw\n  - os : linux\n    compiler: clang\n  - os : osx\n    compiler: gcc\n\n# https://docs.travis-ci.com/user/caching/#ccache-cache\ninstall:\n  - if [ \"${TRAVIS_OS_NAME}\" == osx ]; then\n      brew install ccache zstd lz4 snappy xz;\n      PATH=$PATH:/usr/local/opt/ccache/libexec;\n    fi\n  - if [ \"${JOB_NAME}\" == cmake-gcc8 ]; then\n      CC=gcc-8 && CXX=g++-8;\n    fi\n  - if [[ \"${JOB_NAME}\" == cmake* ]] && [ \"${TRAVIS_OS_NAME}\" == linux ]; then\n      mkdir cmake-dist && curl -sfSL https://cmake.org/files/v3.8/cmake-3.8.1-Linux-x86_64.tar.gz | tar --strip-components=1 -C cmake-dist -xz && export PATH=$PWD/cmake-dist/bin:$PATH;\n    fi\n\nbefore_script:\n  # Increase the maximum number of open file descriptors, since some tests use\n  # more FDs than the default limit.\n  - ulimit -n 8192\n\nscript:\n  - ${CXX} --version\n  - if [ `command -v ccache` ]; then ccache -C; fi\n  - case $TEST_GROUP in\n    platform_dependent)\n      OPT=-DTRAVIS V=1 ROCKSDBTESTS_END=db_block_cache_test make -j4 all_but_some_tests check_some\n      ;;\n    1)\n      OPT=-DTRAVIS V=1 ROCKSDBTESTS_START=db_block_cache_test ROCKSDBTESTS_END=full_filter_block_test make -j4 check_some\n      ;;\n    2)\n      OPT=-DTRAVIS V=1 make -j4 tools && OPT=-DTRAVIS V=1 ROCKSDBTESTS_START=full_filter_block_test ROCKSDBTESTS_END=write_batch_with_index_test make -j4 check_some\n      ;;\n    3)\n      OPT=-DTRAVIS V=1 ROCKSDBTESTS_START=write_batch_with_index_test ROCKSDBTESTS_END=write_prepared_transaction_test make -j4 check_some\n      ;;\n    4)\n      OPT=-DTRAVIS V=1 ROCKSDBTESTS_START=write_prepared_transaction_test make -j4 check_some\n      ;;\n    esac\n  - case $JOB_NAME in\n    java_test)\n      OPT=-DTRAVIS V=1 make clean jclean && make rocksdbjava jtest\n      ;;\n    lite_build)\n      OPT='-DTRAVIS -DROCKSDB_LITE' V=1 make -j4 static_lib tools\n      ;;\n    examples)\n      OPT=-DTRAVIS V=1 make -j4 static_lib && cd examples && make -j4\n      ;;\n    cmake-mingw)\n      mkdir build && cd build && cmake -DJNI=1 .. -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_SYSTEM_NAME=Windows && make -j4 rocksdb rocksdbjni\n      ;;\n    cmake*)\n      mkdir build && cd build && cmake -DJNI=1 .. -DCMAKE_BUILD_TYPE=Release && make -j4 rocksdb rocksdbjni\n      ;;\n    esac\nnotifications:\n    email:\n      - leveldb@fb.com\n    webhooks:\n      - https://buildtimetrend.herokuapp.com/travis\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.392578125,
          "content": "# TerarkDB authors\nBytedance Inc.\nBytedance Engineering Team\n\n# RocksDB authors\nFacebook Inc.\nFacebook Engineering Team\n\nGoogle Inc.\n# Initial version authors:\nJeffrey Dean <jeff@google.com>\nSanjay Ghemawat <sanjay@google.com>\n\n# Partial list of contributors:\nKevin Regan <kevin.d.regan@gmail.com>\nJohan Bilien <jobi@litl.com>\nMatthew Von-Maszewski <https://github.com/matthewvon> (Basho Technologies)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.986328125,
          "content": "## CHANGELOG\n\n### 2020-02-08\n- v1.4.0\n- Release Note\n  - [Feature] Better TTL Support\n    - Support `TtlExtractor`\n    - add cf opt `ttl_gc_ratio` & `ttl_max_scan_gap`\n  - [Feature] CompactionFilter adds `is_bottommost_level`\n  - [Feature] Add `Comparator::IsAlias` for compatibility\n  - [Feature] Add `DiagnosableLRUCache` for debugging\n  - [Stats] Disable LazyCompaction by default\n  - [Bug Fix] Fix DeleteFile multiple deletion bug\n  - [Bug Fix] Fix TransactionDB Open infinity loop bug\n  - [Bug Fix] Fix manual compaction bug when enable LazyCompaction\n  - [Bug Fix] Fix Patricia Trie memtable crash when doing cocurrent writes\n  - [Bug Fix] Fix exclusive manual compaction wait gc bug\n\n### 2020-12-11\n- v1.3.2\n- Release Note\n  - [Stats] Release TerarkDB as a public project\n  - [Stats] Code refine & docs improvement etc.\n\n### 2020-09-18\n- v1.2.12\n- Release Note\n  - [Feature] Add `DBOptions::max_wal_size` for WAL size control\n  - [Feature] Add DisableTruncate/EnableTruncate API for SstFileManager\n    - Allow users disablng `DeleteScheduler`'s `Truncate` function\n  - [Bug Fix] Fix the calculation of used space in `SstFileManager`(not accurate) after enabling KV separetion\n  - [Bug Fix] Fix memory usage problem uder multi-CF\n\n### 2020-08-28\n- v1.2.11\n- Release Note\n  - [Bug Fix] Large WAL deletion triggers latency spike due to IO content\n  - [Bug Fix] Move lots of code outside db mutex lock for better performance when SST file number is huge.\n  - [Bug Fix] DumpStats cost too much time inside mutex when there are too many CFs\n\n### 2020-08-07\n- v1.2.10\n- Release Note：\n  - [Bug Fix] WAL may corruput when enabling prepare_log_writer_num \n  - [Bug Fix] WalManager::GetUpdatesSince\n  - [Bug Fix] Dirty Read problem after enabling `MemTable InplaceUpdate`\n\n### 2020-07-24\n- v1.2.9\n- Release Note：\n  - [Performance] Optimize comparator performance in SkipList MemTable\n  - [Performance] Reduce memory copies in lots of place, reduce value reading cost\n  - [Feature] Add a new `PatriciaTrie MemTable` for better performance\n  - [Feature] Add `avoid_unnecessary_blocking_io`, reduce tail lantency\n  - [Feature] Refactor ValueMetaExtractor, allow users to extract `Key` and `CF_ID`\n  - [Build] Change to CMake build\n  - [Stats] Add Avg and Max latency for Metrics module\n  - [Bug Fix] Reduce mutex cost in `VersionBuilder` which triggers latency spike\n  - [Bug Fix] Deletion of `Iterators` trigger latency spike in some cases\n  - [Bug Fix] Mutex costs too much during background directory scanning\n  - [Bug Fix] Bad pointer ReadOptions::tailing true BUG\n  - [Bug Fix] Lifcycle management of `Promise` may crash application in some cases\n  - [Bug Fix] WAL creation in background may trigger write stop\n  - [Bug Fix] Empty Value reading may fail in some cases\n\n### 2020-06-04\n- 版本号：v1.2.8\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 预创建指定个 WAL 文件，将创建 WAL 文件的逻辑从锁内移动到后台线程，降低写入长尾\n  - 让描述 LSM 树拓补关系的 SST 文件常驻内存，降低读取长尾\n  - 增加 WriteBufferFlushPri 选项，对多 CF 支持更r友好\n- 修复问题：\n  - 修复 LOG 中输出的 Flush 信息未包含 Key Value 分离 Blob 信息的问题\n  - 修复 Feature 冲突导致数据集损坏的问题，不能同时启用下面的 Feature\n    - TerarkZipTable 开启 SecondPassIter 支持\n    - 开启 Key Value 分离\n    - 在 CompactionFilter 中改变了 Value 或 MergeOperator 结果不稳定\n\n- 版本号：v1.2.7\n- 日期：2020-05-15\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 新增 ValueMetaExtractor 用来获取 Value 的元数据\n    - CompactionFilter::FilterV2 接口增加 Value 元数据参数\n    - 解决 Key Value 分离后 CompactionFilter 成本过高的问题\n  - GetPropertiesOfTablesInRange 增加 include_blob 参数\n- 修复问题：\n  - 修复 BlockBasedTable 工作在 mmap 模式下有潜在的 OOM Kill 风险的问题\n\n- 版本号：v1.2.6\n- 日期：2020-04-29\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - Key Value 分离实现优化，更早的分离大 Value，降低 GC 压力\n  - TerarkZipTable 配置深度集成，支持所有原版 RocksDB 的配置方式\n  - LazyLevelCompaction 增大 SST 中 Tombstone 的下推权重，更快回收存储空间\n- 修复问题：\n  - 修复使用 TerarkZipTable 可能导致 OOM Kill 的问题\n  - 修复开启 Key Value 分离之后的一系列问题：\n    - 修复返回用户的 Properties 未包含对应 Blob SST 的问题\n    - 修复估算数据信息未包含 Blob SST 的问题\n    - 修复 LSM 树过小导致空间回收不及时的问题\n    - 修复大量删除数据有风险反复触发无效 GC 的问题\n  - 修复继承原版 RocksDB 数据后开启 Key Value 分离后空间泄露的问题\n  - 修复 Metrics 汇报长尾错误的问题\n- 已知问题：\n  - BlockBasedTable 工作在 mmap 模式下有潜在的 OOM Kill 风险\n\n- 版本号：v1.2.5\n- 日期：2020-04-10\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 增加 pin_table_properties_in_reader 选项，降低 TableProperties 内存占用\n  - 增加 max_task_per_thread 选项，支持单线程运行多个 Compaction/GC 任务\n  - 支持内嵌 jemalloc，make 参数增加 USE_JEMALLOC=1 启用\n  - ZipOffsetBlobStore 新增 ZSTD 算法支持\n- 修复问题：\n  - 修复从 RocksDB 迁移，若使用了 RangeDeletion，有可能丢失部分数据的问题\n  - 修复 Ingest SST 读取数据错误的问题\n    - https://github.com/facebook/rocksdb/issues/6666\n  - 修复 Lazy Level Compaction 在数据量很少时出现\"松树\"形 LSM 树的问题\n  - 修复后台 Domain Socket 退出问题导致 DB 关闭卡住的问题\n  - 修复后台 GC 任务导致排他性手动 Compact 被阻塞的问题\n  - 修复 AdaptiveTableFactory 输出配置被截断的问题\n\n- 版本号：v1.2.4\n- 日期：2020-03-26\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 丰富 Key Value 分离相关配置\n- 修复问题：\n  - 修复 checksum level 为 2 时启动过慢的问题\n  - 修复 ColumnFamily 数据删空后 CompactionPicker 内存越界的问题\n  - 修复 CompactionFilter 非幂等时，有概率残留部分被过滤掉的 Key 的问题\n    - 开启 KV 分离，或使用 BlockBasedTable 不受影响\n- 已知问题：\n  - 从 RocksDB 迁移，若使用了 RangeDeletion，有可能丢失部分数据\n    - 未使用 RangeDeletion 则不受影响\n    - 实现方式有差异，未做完兼容。整库 Compact 消除 RangeDeletion 后迁移即可\n  - 极低概率后台 Compact 触发异常导致 Write 失败，如果出现请保留现场，联系@zhaoming.274\n\n- 版本号：v1.2.3\n- 日期：2020-03-05\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 增加 Flink 相关适配\n  - Metrics 汇报写入流量\n- 修复问题：\n  - 修复 Metrics 占用资源过高的问题 \n  - 修复 PORTABLE 构建时 CRC32 不使用硬件加速的问题\n  - 修复开启 ASAN 时 NestLoudsTrie 构建触发警告的问题\n- 已知问题：\n  - 重启或长时间运行，会出现若干 hugepage warning\n  - 极低概率后台 Compact 触发异常导致 Write 失败，如果出现请保留现场，联系@zhaoming.274\n\n- 版本号：v1.2.2\n- 日期：2020-02-13\n- 发版说明：\n  - 计划内例行发版\n- 功能变更：\n  - 无\n- 修复问题：\n  - 修复 MapSstIterator 触发断言的问题\n  - 修复 DictZipBlobStore 校验级别为 2 时，写入空数据导致宕机的问题\n  - 核心库为 MixedLenBlobStore 增加更严格的校验\n- 已知问题：\n  - 重启或长时间运行，会出现若干 hugepage warning\n  - 极低概率后台 Compact 触发异常导致 Write 失败，如果出现请保留现场，联系@zhaoming.274\n\n- 版本号：v1.2.1\n- 日期：2020-02-06\n- 发版说明：\n  - 本版本为预览版发布，旨在进行第一次正式发布演练，请给位同学严格执行测试流程\n  - 下一次版本发布会在一周之后正式进行\n- 功能变更：\n  - 实现 KeyValue 分离存储\n  - 移除 BlobDB 的支持\n  - 增加 LazyBuffer 系列接口\n  - 移除 PinnableSlice 系列接口\n- 修复问题：\n  - 修复 NestLoudsTrie 的 Rank 接口错误\n  - 修复 SubCompaction 导致 CPU 资源使用过度的问题\n  - 将 `VersionBuilder::SaveTo` 逻辑移出锁外\n  - 修复手动 Compact 导致宕机的问题\n  - 修复 BlockBasedTable 与 RangeDeletion 同时使用导致内存泄露的问题\n  - 修复信息上报 API 的数据错误\n- 已知问题：\n  - 重启或长时间运行，会出现若干 hugepage warning\n  - 使用了 PinnableSlice、MergeOperator、CompactionFilter 的接口可能需要少许代码修改完成迁移\n    - 后续版本提供有少许性能损失的平滑迁移\n  - 因为不再支持 BlobDB，自此版本发布后，所有使用了 BlobDB 的实例无法迁移至此版本\n\n2020-01-07\n- Fix fake assertion of universal compaction picker\n- Refine lazy level compaction pick size\n- Refine database statistics report relevance\n\n2020-01-05\n- Remove terark index build pipeline\n- Fix PatriciaTrieMemTable bugs\n\n2019-12-30\n- Refactor terark env logic\n\n2019-12-29\n- Level based lazy compaction dev completed\n- Add Redis-protocol OPS Console\n\n2019-12-16\n- Use new Compaction Style = Level\n- Fix few issues\n- Enable commit in the middle by default\n\n2019-12-09\n- Fix TerarkDB iterator.seek_prev bug, may cause data corruption.\n\n2019-12-04\n- Improvement: remove useless compaction\n\n2019-12-03\n- Add metrics for grafana on storage engine level\n\n2019-12-02\n- Update TerarkDB for better compaction\n\n2019-11-28\n- Fix TerarkDB bug: sstable map may lose some data\n\n2019-11-08\n- Add KV Seperation for LSM, for better compaction performance\n- Bug fix\n\n2019-11-05\n- Fix rocksdb's super version bug, which may cause merge operator gets wrong value.\n- Fix terarkdb's kv seperation bug\n- Add more test cases in terark-core\n\n2019-09-26\n- Fix LocalTempDir is not set correctly\n\n2019-09-12\n- Update TerarkDB, refine build script\n\n2019-08-29\n- 解决 MEMTABLE FLUSH CRASH 问题，这是由一个手误引入的 BUG\n\n2019-08-28\n- Fix Bug: 解决 TerarkDB OOM 的问题\n\n2019-08-21\n- add co-routina by using boost fiber\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 43.1484375,
          "content": "cmake_minimum_required(VERSION 3.4)\nproject(terarkdb)\nenable_language(CXX)\nenable_language(C)\nenable_language(ASM)\n\nif(POLICY CMP0042)\n  cmake_policy(SET CMP0042 NEW)\nendif()\n\n# Default build type\nIF(CMAKE_BUILD_TYPE STREQUAL \"\" OR CMAKE_BUILD_TYPE STREQUAL \"RelWithDebug\")\n  SET(CMAKE_BUILD_TYPE \"RelWithDebInfo\")\nENDIF()\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/cmake/modules/\")\n\nMESSAGE(\"[terarkdb] cmake install prefix: ${CMAKE_INSTALL_PREFIX}\")\nSET(CMAKE_INSTALL_LIBDIR ${CMAKE_INSTALL_PREFIX}/lib)\nSET(CMAKE_INSTALL_BINDIR ${CMAKE_INSTALL_PREFIX}/bin)\n\nif (TERARK_INCLUDE_PREFIX)\n  SET(CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX}/include/${TERARK_INCLUDE_PREFIX})\nelse()\n  SET(CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX}/include)\nendif()\n\n# Enable or disable flags\noption(WITH_COVERAGE \"build with gcov support\" OFF)\noption(WITH_JEMALLOC \"build with JeMalloc\" ON)\noption(WITH_SNAPPY \"build with SNAPPY\" ON)\noption(WITH_LZ4 \"build with lz4\" ON)\noption(WITH_ZLIB \"build with zlib\" ON)\noption(WITH_ZSTD \"build with zstd\" ON)\noption(WITH_BZ2 \"build with bzip2\" ON)\noption(WITH_WINDOWS_UTF8_FILENAMES \"use UTF8 as characterset for opening files, regardles of the system code page\" OFF)\noption(WITH_BYTEDANCE_METRICS \"build with bytedance internal metrics\" OFF)\noption(WITH_ASAN \"build with ASAN\" OFF)\noption(WITH_GFLAGS \"build with GFlags\" ON)\ninclude(CMakeDependentOption)\n# Tests are excluded from Release builds\nCMAKE_DEPENDENT_OPTION(WITH_TESTS \"build with tests\" ON \"CMAKE_BUILD_TYPE STREQUAL Debug\" OFF)\noption(WITH_TOOLS \"build with tools\" OFF)\noption(WITH_TERARK_ZIP \"build with TerarkZipTable support\" ON)\noption(WITH_ZENFS \"build with experimental zenfs\" OFF)\noption(WITH_DIAGNOSE_CACHE \"build with diagnosable cache support\" OFF)\noption(WITH_BOOSTLIB \"build with boost, if WITH_TERARK_ZIP is ON, this will also set to ON\" OFF)\noption(WITH_TERARKDB_NAMESPACE \"namespace\" \"terarkdb\")\n\n# Plugins\nSET(BYTEDANCE_METRICS_PATH \"\" CACHE STRING \"root directory of the metrics library source code\")\n\nif(WITH_BYTEDANCE_METRICS AND BYTEDANCE_METRICS_PATH STREQUAL \"\" AND NOT TARGET metrics2)\n  MESSAGE(FATAL_ERROR \"WITH_BYTEDANCE_METRICS enabled but BYTEDANCE_METRICS_PATH is not configured\")\nendif()\n\nif(NOT WITH_TERARKDB_NAMESPACE)\n  SET(WITH_TERARKDB_NAMESPACE \"terarkdb\")\nendif()\nMESSAGE(STATUS \"terarkdb namespace: \" ${WITH_TERARKDB_NAMESPACE})\n\noption(BUILD_SUFFIX \"library suffix\" \"d\")\noption(FORCE_TERARKDB_RELEASE_BUILD \"ignore outside cmake_build_type\" OFF)\nCMAKE_DEPENDENT_OPTION(REPORT_DEBUG_STACKTRACE \"enable stack trace for LatencyHistLoggedGuard\" OFF \"WITH_BOOSTLIB\" OFF)\n\nSET(CMAKE_THREAD_PREFER_PTHREAD TRUE)\nFind_Package(Threads REQUIRED)\n\n#----------------------- Global Options\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\" OR CMAKE_BUILD_TYPE STREQUAL \"Release\" OR WITH_JEMALLOC)\n  set(WITH_ASAN OFF)\nendif()\n\nif (WITH_WINDOWS_UTF8_FILENAMES)\n  add_definitions(-DROCKSDB_WINDOWS_UTF8_FILENAMES)\nendif()\n\nIF(FORCE_TERARKDB_RELEASE_BUILD)\n  SET(CMAKE_BUILD_TYPE \"Release\")\nENDIF()\n\nIF(NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  SET(BUILD_SUFFIX \"r\")\nELSE()\n  SET(BUILD_SUFFIX \"d\")\nENDIF()\n\n# terark-zip embedded boost, will remove the boost library in the future\nif(WITH_TERARK_ZIP)\n  SET(WITH_BOOSTLIB ON)\n  SET(TERARK_ZIP_LIB terark-zip-${BUILD_SUFFIX})\nelse()\n  SET(WITH_DIAGNOSE_CACHE OFF)\nendif()\n\nIF(WITH_COVERAGE)\n  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} --coverage\")\nENDIF()\n\nif(WITH_ZENFS)\n  include_directories(third-party/zenfs)\n  FILE(GLOB ZENFS_CMAKE_FILE \"third-party/zenfs/CMakeLists.txt\")\n  IF(EXISTS ${ZENFS_CMAKE_FILE})\n    ADD_SUBDIRECTORY(third-party/zenfs)\n  ENDIF()\nENDIF()\n\n#-------------------------- Print Global Options\nMESSAGE(\"[terarkdb] FORCE_RELEASE_BUILD = ${FORCE_TERARKDB_RELEASE_BUILD}, cmake_build_type = ${CMAKE_BUILD_TYPE}\")\nMESSAGE(\"[terarkdb] TERARKDB_NAMESPACE=${WITH_TERARKDB_NAMESPACE}\")\nMESSAGE(\"[terarkdb] WITH_TOOLS = ${WITH_TOOLS}, WITH_ASAN = ${WITH_ASAN}, WITH_TESTS = ${WITH_TESTS}\")\nMESSAGE(\"[terarkdb] WITH_JEMALLOC = ${WITH_JEMALLOC}, WITH_COVERAGE=${WITH_COVERAGE}\")\nMESSAGE(\"[terarkdb] CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}, BUILD_SUFFIX=${BUILD_SUFFIX}\")\nMESSAGE(\"[terarkdb] CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}\")\nMESSAGE(\"[terarkdb] CMAKE_THREAD_LIBS_INIT=${CMAKE_THREAD_LIBS_INIT}\")\nMESSAGE(\"[terarkdb] BYTEDANCE_METRICS_PATH=${BYTEDANCE_METRICS_PATH}\")\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/rocksdb/terark_namespace.h.in ${CMAKE_CURRENT_SOURCE_DIR}/include/rocksdb/terark_namespace.h)\n\n#-------------------------- Third-party Libraries\nADD_SUBDIRECTORY(third-party)\nif(WITH_TERARK_ZIP)\n  GET_TARGET_PROPERTY(terark_zip_include_dir terark-zip-${BUILD_SUFFIX} INCLUDE_DIRECTORIES)\n  INCLUDE_DIRECTORIES(${terark_zip_include_dir})\nENDIF()\n\n\n#-------------------------- Third-party Library Flags for RocksDB\nif(WITH_JEMALLOC)\n  add_definitions(-DROCKSDB_JEMALLOC -DJEMALLOC_NO_DEMANGLE)\n  get_target_property(jemalloc_INCLUDE_DIR jemalloc INCLUDE_DIRECTORIES)\n  include_directories(${jemalloc_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS jemalloc pthread dl)\n  message(\"[terarkdb] jemalloc include dir: ${jemalloc_INCLUDE_DIR}\")\nendif()\n\nif(WITH_GFLAGS)\n  add_definitions(-DGFLAGS=1)\n  get_target_property(gflags_INCLUDE_DIR gflags INCLUDE_DIRECTORIES)\n  include_directories(${gflags_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS gflags)\n  message(\"[terarkdb] gflags include dir: ${gflags_INCLUDE_DIR}\")\nendif()\n\nif(WITH_BOOSTLIB)\n  message(\"[terarkdb] with boost\")\nelse()\n  SET(REPORT_DEBUG_STACKTRACE OFF)\n  message(\"[terarkdb] without boost\")\nendif()\n\nif(WITH_TESTS OR WITH_TOOLS)\n  get_target_property(gtest_INCLUDE_DIR gtest INCLUDE_DIRECTORIES)\n  include_directories(${gtest_INCLUDE_DIR})\n  message(\"[terarkdb] gtest include dir: ${gtest_INCLUDE_DIR}\")\nendif()\n\nif(WITH_SNAPPY)\n  add_definitions(-DSNAPPY)\n  get_target_property(snappy_INCLUDE_DIR snappy INCLUDE_DIRECTORIES)\n  include_directories(${snappy_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS snappy)\n  message(\"[terarkdb] snappy include dir: ${snappy_INCLUDE_DIR}\")\nendif()\n\nif(WITH_ZLIB)\n  add_definitions(-DZLIB)\n  get_target_property(zlib_INCLUDE_DIR zlib INCLUDE_DIRECTORIES)\n  include_directories(${zlib_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS zlib)\n  message(\"[terarkdb] zlib include dir: ${zlib_INCLUDE_DIR}\")\nendif()\n\nif(WITH_BZ2)\n  add_definitions(-DBZIP2)\n  get_target_property(bzip2_INCLUDE_DIR bzip2 INCLUDE_DIRECTORIES)\n  include_directories(${bzip2_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS bzip2)\n  message(\"[terarkdb] bzip2 include dir : ${bzip2_INCLUDE_DIR}\")\nendif()\n\nif(WITH_BYTEDANCE_METRICS)\n  get_target_property(metrics2_INCLUDE_DIR metrics2 INCLUDE_DIRECTORIES)\n  include_directories(${metrics2_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS metrics2)\n  message(\"[terarkdb] bytedance_metrics2 include dir : ${metrics2_INCLUDE_DIR}\")\nendif()\n\nif(WITH_LZ4)\n  add_definitions(-DLZ4)\n  get_target_property(lz4_INCLUDE_DIR lz4 INCLUDE_DIRECTORIES)\n  include_directories(${lz4_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS lz4)\n  message(\"[terarkdb] lz4 include dir : ${lz4_INCLUDE_DIR}\")\nendif()\n\nif(WITH_ZSTD)\n  add_definitions(-DZSTD)\n  get_target_property(zstd_INCLUDE_DIR zstd INCLUDE_DIRECTORIES)\n  include_directories(${zstd_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS zstd)\n  message(\"[terarkdb] zstd include dir : ${zstd_INCLUDE_DIR}\")\nendif()\n\nstring(TIMESTAMP GIT_DATE_TIME \"%Y/%m/%d %H:%M:%S\" UTC)\n\n\n#----------------------- Version Information\nfind_package(Git)\nif(GIT_FOUND AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/.git\")\n  if(WIN32)\n    execute_process(COMMAND $ENV{COMSPEC} /C ${GIT_EXECUTABLE} -C ${CMAKE_CURRENT_SOURCE_DIR} rev-parse HEAD OUTPUT_VARIABLE GIT_SHA)\n  else()\n    execute_process(COMMAND ${GIT_EXECUTABLE} -C ${CMAKE_CURRENT_SOURCE_DIR} rev-parse HEAD OUTPUT_VARIABLE GIT_SHA)\n  endif()\nelse()\n  set(GIT_SHA 0)\nendif()\n\nstring(REGEX REPLACE \"[^0-9a-f]+\" \"\" GIT_SHA \"${GIT_SHA}\")\n\n# Read rocksdb version from version.h header file.\nfile(READ include/rocksdb/version.h version_header_file)\nstring(REGEX MATCH \"#define ROCKSDB_MAJOR ([0-9]+)\" _ ${version_header_file})\nset(ROCKSDB_VERSION_MAJOR ${CMAKE_MATCH_1})\nstring(REGEX MATCH \"#define ROCKSDB_MINOR ([0-9]+)\" _ ${version_header_file})\nset(ROCKSDB_VERSION_MINOR ${CMAKE_MATCH_1})\nstring(REGEX MATCH \"#define ROCKSDB_PATCH ([0-9]+)\" _ ${version_header_file})\nset(ROCKSDB_VERSION_PATCH ${CMAKE_MATCH_1})\nset(ROCKSDB_VERSION ${ROCKSDB_VERSION_MAJOR}.${ROCKSDB_VERSION_MINOR}.${ROCKSDB_VERSION_PATCH})\n\n\n#-------------------------- Compiler Options\n\noption(WITH_MD_LIBRARY \"build with MD\" ON)\nif(WIN32 AND MSVC)\n  if(WITH_MD_LIBRARY)\n    set(RUNTIME_LIBRARY \"MD\")\n  else()\n    set(RUNTIME_LIBRARY \"MT\")\n  endif()\nendif()\n\nset(ROCKSDB_BUILD_VERSION_CC ${CMAKE_CURRENT_SOURCE_DIR}/util/build_version.cc)\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/util/build_version.cc.in ${ROCKSDB_BUILD_VERSION_CC} @ONLY)\nadd_library(rocksdb_build_version OBJECT ${ROCKSDB_BUILD_VERSION_CC})\ntarget_include_directories(rocksdb_build_version PRIVATE\n  ${CMAKE_CURRENT_SOURCE_DIR}/util)\nif(MSVC)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Zi /nologo /EHsc /GS /Gd /GR /GF /fp:precise /Zc:wchar_t /Zc:forScope /errorReport:queue\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /FC /d2Zi+ /W4 /wd4127 /wd4800 /wd4996 /wd4351 /wd4100 /wd4204 /wd4324\")\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -W -Wextra -Wall\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-sign-compare -Wno-shadow -Wno-unused-parameter -Wno-unused-variable -Woverloaded-virtual -Wnon-virtual-dtor -Wno-missing-field-initializers -Wno-strict-aliasing\")\n  if(MINGW)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-format\")\n  endif()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++14 -DBUILD_BY_CMAKE -fPIC\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fPIC\")\n  if(NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer\")\n    include(CheckCXXCompilerFlag)\n    CHECK_CXX_COMPILER_FLAG(\"-momit-leaf-frame-pointer\" HAVE_OMIT_LEAF_FRAME_POINTER)\n    if(HAVE_OMIT_LEAF_FRAME_POINTER)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -momit-leaf-frame-pointer\")\n    endif()\n  endif()\nendif()\n\ninclude(CheckCCompilerFlag)\nif(CMAKE_SYSTEM_PROCESSOR MATCHES \"ppc64le\")\n  CHECK_C_COMPILER_FLAG(\"-maltivec\" HAS_ALTIVEC)\n  if(HAS_ALTIVEC)\n    message(STATUS \" HAS_ALTIVEC yes\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -maltivec\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -maltivec\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mcpu=power8\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mcpu=power8\")\n  endif(HAS_ALTIVEC)\nendif(CMAKE_SYSTEM_PROCESSOR MATCHES \"ppc64le\")\n\noption(PORTABLE \"build a portable binary\" OFF)\noption(FORCE_SSE42 \"force building with SSE4.2, even when PORTABLE=ON\" OFF)\nif(PORTABLE)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=haswell\")\n  # MSVC does not need a separate compiler flag to enable SSE4.2; if nmmintrin.h\n  # is available, it is available by default.\n  if(FORCE_SSE42 AND NOT MSVC)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -msse4.2 -mpclmul\")\n  endif()\nelse()\n  if(MSVC)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:AVX2\")\n  else()\n    if(NOT HAVE_POWER8)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\n    endif()\n  endif()\nendif()\n\ninclude(CheckCXXSourceCompiles)\nif(NOT MSVC)\n  set(CMAKE_REQUIRED_FLAGS \"-msse4.2 -mpclmul\")\nendif()\nCHECK_CXX_SOURCE_COMPILES(\"\n#include <cstdint>\n#include <nmmintrin.h>\n#include <wmmintrin.h>\nint main() {\n  volatile uint32_t x = _mm_crc32_u32(0, 0);\n  const auto a = _mm_set_epi64x(0, 0);\n  const auto b = _mm_set_epi64x(0, 0);\n  const auto c = _mm_clmulepi64_si128(a, b, 0x00);\n  auto d = _mm_cvtsi128_si64(c);\n}\n\" HAVE_SSE42)\nunset(CMAKE_REQUIRED_FLAGS)\nif(HAVE_SSE42)\n  add_definitions(-DHAVE_SSE42)\n  add_definitions(-DHAVE_PCLMUL)\nelseif(FORCE_SSE42)\n  message(FATAL_ERROR \"FORCE_SSE42=ON but unable to compile with SSE4.2 enabled\")\nendif()\n\nCHECK_CXX_SOURCE_COMPILES(\"\n#if defined(_MSC_VER) && !defined(__thread)\n#define __thread __declspec(thread)\n#endif\nint main() {\n  static __thread int tls;\n}\n\" HAVE_THREAD_LOCAL)\nif(HAVE_THREAD_LOCAL)\n  add_definitions(-DROCKSDB_SUPPORT_THREAD_LOCAL)\nendif()\n\noption(FAIL_ON_WARNINGS \"Treat compile warnings as errors\" OFF)\nif(FAIL_ON_WARNINGS)\n  if(MSVC)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /WX\")\n  else() # assume GCC\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\n  endif()\nendif()\n\nif(MSVC)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP /FR /std:c++14\")\nendif()\n\nif(WITH_ASAN)\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address\")\n  if(WITH_JEMALLOC)\n    message(FATAL \"ASAN does not work well with JeMalloc\")\n  endif()\n  list(APPEND THIRDPARTY_LIBS asan)\nendif()\n\noption(WITH_TSAN \"build with TSAN\" OFF)\nif(WITH_TSAN)\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fsanitize=thread -pie\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread -fPIC\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread -fPIC\")\n  if(WITH_JEMALLOC)\n    message(FATAL \"TSAN does not work well with JeMalloc\")\n  endif()\nendif()\n\noption(WITH_UBSAN \"build with UBSAN\" OFF)\nif(WITH_UBSAN)\n  add_definitions(-DROCKSDB_UBSAN_RUN)\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fsanitize=undefined\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=undefined\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=undefined\")\n  if(WITH_JEMALLOC)\n    message(FATAL \"UBSAN does not work well with JeMalloc\")\n  endif()\nendif()\n\noption(WITH_NUMA \"build with NUMA policy support\" OFF)\nif(WITH_NUMA)\n  find_package(NUMA REQUIRED)\n  add_definitions(-DNUMA)\n  include_directories(${NUMA_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS ${NUMA_LIBRARIES})\nendif()\n\noption(WITH_TBB \"build with Threading Building Blocks (TBB)\" OFF)\nif(WITH_TBB)\n  find_package(TBB REQUIRED)\n  add_definitions(-DTBB)\n  include_directories(${TBB_INCLUDE_DIR})\n  list(APPEND THIRDPARTY_LIBS ${TBB_LIBRARIES})\nendif()\n\nif(WITH_ZENFS)\n  if(DEFINED zenfs_LIBS)\n    list(APPEND THIRDPARTY_LIBS ${zenfs_LIBS})\n  else()\n    list(APPEND THIRDPARTY_LIBS zbd)\n  endif()\nendif()\n\n# Stall notifications eat some performance from inserts\noption(DISABLE_STALL_NOTIF \"Build with stall notifications\" OFF)\nif(DISABLE_STALL_NOTIF)\n  add_definitions(-DROCKSDB_DISABLE_STALL_NOTIFICATION)\nendif()\n\nSET(USE_RTTI ON)\nif(DEFINED USE_RTTI)\n  if(USE_RTTI)\n    message(STATUS \"Enabling RTTI\")\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DROCKSDB_USE_RTTI\")\n    set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -DROCKSDB_USE_RTTI\")\n  else()\n    if(MSVC)\n      message(STATUS \"Disabling RTTI in Release builds. Always on in Debug.\")\n      set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DROCKSDB_USE_RTTI\")\n      set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /GR-\")\n    else()\n      message(STATUS \"Disabling RTTI in Release builds\")\n      set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-rtti\")\n      set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-rtti\")\n    endif()\n  endif()\nelse()\n  message(STATUS \"Enabling RTTI in Debug builds only (default)\")\n  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DROCKSDB_USE_RTTI\")\n  if(MSVC)\n     set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /GR-\")\n  else()\n    set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-rtti\")\n  endif()\nendif()\n\n# Used to run CI build and tests so we can run faster\noption(OPTDBG \"Build optimized debug build with MSVC\" OFF)\noption(WITH_RUNTIME_DEBUG \"build with debug version of runtime library\" ON)\nif(MSVC)\n  if(OPTDBG)\n    message(STATUS \"Debug optimization is enabled\")\n    set(CMAKE_CXX_FLAGS_DEBUG \"/Oxt\")\n  else()\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /Od /RTC1 /Gm\")\n  endif()\n  if(WITH_RUNTIME_DEBUG)\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /${RUNTIME_LIBRARY}d\")\n  else()\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /${RUNTIME_LIBRARY}\")\n  endif()\n  set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /Oxt /Zp8 /Gm- /Gy /${RUNTIME_LIBRARY}\")\n\n  set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /DEBUG\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /DEBUG\")\nendif()\n\nif(CMAKE_COMPILER_IS_GNUCXX)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-builtin-memcmp\")\nendif()\n\noption(ROCKSDB_LITE \"Build RocksDBLite version\" OFF)\nif(ROCKSDB_LITE)\n  add_definitions(-DROCKSDB_LITE)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-exceptions -Os\")\nendif()\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Cygwin\")\n  add_definitions(-fno-builtin-memcmp -DCYGWIN)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n  add_definitions(-DOS_MACOSX)\n  if(CMAKE_SYSTEM_PROCESSOR MATCHES arm)\n    add_definitions(-DIOS_CROSS_COMPILE -DROCKSDB_LITE)\n    # no debug info for IOS, that will make our library big\n    add_definitions(-DNDEBUG)\n  endif()\nelseif(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n  add_definitions(-DOS_LINUX)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"SunOS\")\n  add_definitions(-DOS_SOLARIS)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"FreeBSD\")\n  add_definitions(-DOS_FREEBSD)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"NetBSD\")\n  add_definitions(-DOS_NETBSD)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"OpenBSD\")\n  add_definitions(-DOS_OPENBSD)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"DragonFly\")\n  add_definitions(-DOS_DRAGONFLYBSD)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"Android\")\n  add_definitions(-DOS_ANDROID)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"Windows\")\n  add_definitions(-DWIN32 -DOS_WIN -D_MBCS -DWIN64 -DNOMINMAX)\n  if(MINGW)\n    add_definitions(-D_WIN32_WINNT=_WIN32_WINNT_VISTA)\n  endif()\nendif()\n\nif(NOT WIN32)\n  add_definitions(-DROCKSDB_PLATFORM_POSIX -DROCKSDB_LIB_IO_POSIX)\nendif()\n\noption(WITH_FALLOCATE \"build with fallocate\" ON)\nif(WITH_FALLOCATE)\n  CHECK_CXX_SOURCE_COMPILES(\"\n#include <fcntl.h>\n#include <linux/falloc.h>\nint main() {\n int fd = open(\\\"/dev/null\\\", 0);\n fallocate(fd, FALLOC_FL_KEEP_SIZE | FALLOC_FL_PUNCH_HOLE, 0, 1024);\n}\n\" HAVE_FALLOCATE)\n  if(HAVE_FALLOCATE)\n    add_definitions(-DROCKSDB_FALLOCATE_PRESENT)\n  endif()\nendif()\n\nCHECK_CXX_SOURCE_COMPILES(\"\n#include <fcntl.h>\nint main() {\n  int fd = open(\\\"/dev/null\\\", 0);\n  sync_file_range(fd, 0, 1024, SYNC_FILE_RANGE_WRITE);\n}\n\" HAVE_SYNC_FILE_RANGE_WRITE)\nif(HAVE_SYNC_FILE_RANGE_WRITE)\n  add_definitions(-DROCKSDB_RANGESYNC_PRESENT)\nendif()\n\nCHECK_CXX_SOURCE_COMPILES(\"\n#include <pthread.h>\nint main() {\n  (void) PTHREAD_MUTEX_ADAPTIVE_NP;\n}\n\" HAVE_PTHREAD_MUTEX_ADAPTIVE_NP)\nif(HAVE_PTHREAD_MUTEX_ADAPTIVE_NP)\n  add_definitions(-DROCKSDB_PTHREAD_ADAPTIVE_MUTEX)\nendif()\n\ninclude(CheckCXXSymbolExists)\ncheck_cxx_symbol_exists(malloc_usable_size malloc.h HAVE_MALLOC_USABLE_SIZE)\nif(HAVE_MALLOC_USABLE_SIZE)\n  add_definitions(-DROCKSDB_MALLOC_USABLE_SIZE)\nendif()\n\ncheck_cxx_symbol_exists(sched_getcpu sched.h HAVE_SCHED_GETCPU)\nif(HAVE_SCHED_GETCPU)\n  add_definitions(-DROCKSDB_SCHED_GETCPU_PRESENT)\nendif()\n\ninclude_directories(${PROJECT_SOURCE_DIR})\ninclude_directories(${PROJECT_SOURCE_DIR}/include)\nfind_package(Threads REQUIRED)\n\n\n\nif (NOT ${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n  LIST(APPEND TERARK_SHARED_DEPENDS pthread gomp aio rt dl)\n  if ((${CMAKE_BUILD_TYPE} STREQUAL \"Debug\") AND (${WITH_ASAN}))\n    message(\"[terarkdb] build terarkdb with asan\")\n    LIST(APPEND TERARK_SHARED_DEPENDS asan)\n  endif()\nendif()\n\n\n# Main library source code\nset(SOURCES\n        cache/clock_cache.cc\n        cache/lirs_cache.cc\n        cache/lru_cache.cc\n        cache/sharded_cache.cc\n        db/builder.cc\n        db/c.cc\n        db/column_family.cc\n        db/compacted_db_impl.cc\n        db/compaction.cc\n        db/compaction_iterator.cc\n        db/compaction_job.cc\n        db/compaction_picker.cc\n        db/compaction_picker_universal.cc\n        db/convenience.cc\n        db/db_filesnapshot.cc\n        db/db_impl.cc\n        db/db_impl_write.cc\n        db/db_impl_compaction_flush.cc\n        db/db_impl_files.cc\n        db/db_impl_open.cc\n        db/db_impl_debug.cc\n        db/db_impl_experimental.cc\n        db/db_impl_readonly.cc\n        db/db_info_dumper.cc\n        db/db_iter.cc\n        db/dbformat.cc\n        db/error_handler.cc\n        db/event_helpers.cc\n        db/experimental.cc\n        db/external_sst_file_ingestion_job.cc\n        db/file_indexer.cc\n        db/flush_job.cc\n        db/flush_scheduler.cc\n        db/forward_iterator.cc\n        db/internal_stats.cc\n        db/logs_with_prep_tracker.cc\n        db/log_reader.cc\n        db/log_writer.cc\n        db/malloc_stats.cc\n        db/map_builder.cc\n        db/memtable.cc\n        db/memtablerep.cc\n        db/memtable_list.cc\n        db/merge_helper.cc\n        db/merge_operator.cc\n        db/metrics_reporter.cc\n        db/periodic_work_scheduler.cc\n        db/range_del_aggregator.cc\n        db/range_tombstone_fragmenter.cc\n        db/repair.cc\n        db/snapshot_impl.cc\n        db/table_cache.cc\n        db/table_properties_collector.cc\n        db/transaction_log_impl.cc\n        db/version_builder.cc\n        db/version_edit.cc\n        db/version_set.cc\n        db/wal_manager.cc\n        db/write_batch.cc\n        db/write_batch_base.cc\n        db/write_controller.cc\n        db/write_thread.cc\n        env/env.cc\n        env/env_chroot.cc\n        env/env_encryption.cc\n        env/env_hdfs.cc\n        env/env_io_prof.cc\n        env/file_system.cc\n        env/mock_env.cc\n        memtable/alloc_tracker.cc\n        memtable/concurrent_hashduallist_rep.cc\n        memtable/hash_cuckoo_rep.cc\n        memtable/hash_linklist_rep.cc\n        memtable/hash_skiplist_rep.cc\n        memtable/skiplistrep.cc\n        memtable/vectorrep.cc\n        memtable/write_buffer_manager.cc\n        monitoring/histogram.cc\n        monitoring/histogram_windowing.cc\n        monitoring/in_memory_stats_history.cc\n        monitoring/instrumented_mutex.cc\n        monitoring/iostats_context.cc\n        monitoring/perf_context.cc\n        monitoring/perf_level.cc\n        monitoring/persistent_stats_history.cc\n        monitoring/statistics.cc\n        monitoring/thread_status_impl.cc\n        monitoring/thread_status_updater.cc\n        monitoring/thread_status_util.cc\n        monitoring/thread_status_util_debug.cc\n        options/cf_options.cc\n        options/db_options.cc\n        options/options.cc\n        options/options_helper.cc\n        options/options_parser.cc\n        options/options_sanity_check.cc\n        port/stack_trace.cc\n        table/adaptive_table_factory.cc\n        table/block.cc\n        table/block_based_filter_block.cc\n        table/block_based_table_builder.cc\n        table/block_based_table_factory.cc\n        table/block_based_table_reader.cc\n        table/block_builder.cc\n        table/block_fetcher.cc\n        table/block_prefix_index.cc\n        table/bloom_block.cc\n        table/cuckoo_table_builder.cc\n        table/cuckoo_table_factory.cc\n        table/cuckoo_table_reader.cc\n        table/data_block_hash_index.cc\n        table/data_block_footer.cc\n        table/flush_block_policy.cc\n        table/format.cc\n        table/full_filter_block.cc\n        table/get_context.cc\n        table/index_builder.cc\n        table/iterator.cc\n        table/merging_iterator.cc\n        table/meta_blocks.cc\n        table/partitioned_filter_block.cc\n        table/persistent_cache_helper.cc\n        table/plain_table_builder.cc\n        table/plain_table_factory.cc\n        table/plain_table_index.cc\n        table/plain_table_key_coding.cc\n        table/plain_table_reader.cc\n        table/sst_file_reader.cc\n        table/sst_file_writer.cc\n        table/table_properties.cc\n        table/table_reader.cc\n        table/two_level_iterator.cc\n        tools/dump/db_dump_tool.cc\n        tools/ldb_cmd.cc\n        tools/ldb_tool.cc\n        tools/sst_dump_tool.cc\n        tools/trace_analyzer_tool.cc\n        util/arena.cc\n        util/auto_roll_logger.cc\n        util/bloom.cc\n        util/coding.cc\n        util/compaction_job_stats_impl.cc\n        util/comparator.cc\n        util/compression_context_cache.cc\n        util/concurrent_arena.cc\n        util/crc32c.cc\n        util/delete_scheduler.cc\n        util/dynamic_bloom.cc\n        util/event_logger.cc\n        util/file_reader_writer.cc\n        util/file_util.cc\n        util/filename.cc\n        util/filter_policy.cc\n        util/hash.cc\n        util/iterator_cache.cc\n        util/jemalloc_nodump_allocator.cc\n        util/lazy_buffer.cc\n        util/log_buffer.cc\n        util/murmurhash.cc\n        util/random.cc\n        util/rate_limiter.cc\n        util/slice.cc\n        util/sst_file_manager_impl.cc\n        util/status.cc\n        util/string_util.cc\n        util/sync_point.cc\n        util/sync_point_impl.cc\n        util/thread_local.cc\n        util/threadpool_imp.cc\n        util/trace_replay.cc\n        util/transaction_test_util.cc\n        util/xxhash.cc\n        utilities/backupable/backupable_db.cc\n        utilities/checkpoint/checkpoint_impl.cc\n        utilities/col_buf_decoder.cc\n        utilities/col_buf_encoder.cc\n        utilities/column_aware_encoding_util.cc\n        utilities/console/server.cc\n        utilities/compaction_filters/remove_emptyvalue_compactionfilter.cc\n        utilities/date_tiered/date_tiered_db_impl.cc\n        utilities/debug.cc\n        utilities/document/document_db.cc\n        utilities/document/json_document.cc\n        utilities/document/json_document_builder.cc\n        utilities/env_mirror.cc\n        utilities/env_timed.cc\n        utilities/flink/flink_compaction_filter.cc\n        utilities/geodb/geodb_impl.cc\n        utilities/ioprof/ioprof.cc\n        utilities/leveldb_options/leveldb_options.cc\n        utilities/lua/rocks_lua_compaction_filter.cc\n        utilities/memory/memory_util.cc\n        utilities/merge_operators/bytesxor.cc\n        utilities/merge_operators/max.cc\n        utilities/merge_operators/put.cc\n        utilities/merge_operators/string_append/stringappend.cc\n        utilities/merge_operators/string_append/stringappend2.cc\n        utilities/merge_operators/uint64add.cc\n        utilities/object_registry.cc\n        utilities/option_change_migration/option_change_migration.cc\n        utilities/options/options_util.cc\n        utilities/persistent_cache/block_cache_tier.cc\n        utilities/persistent_cache/block_cache_tier_file.cc\n        utilities/persistent_cache/block_cache_tier_metadata.cc\n        utilities/persistent_cache/persistent_cache_tier.cc\n        utilities/persistent_cache/volatile_tier_impl.cc\n        utilities/redis/redis_lists.cc\n        utilities/simulator_cache/sim_cache.cc\n        utilities/spatialdb/spatial_db.cc\n        utilities/table_properties_collectors/compact_on_deletion_collector.cc\n        utilities/trace/file_trace_reader_writer.cc\n        utilities/trace/bytedance_metrics_histogram.cc\n        utilities/trace/bytedance_metrics_reporter.cc\n        utilities/transactions/optimistic_transaction_db_impl.cc\n        utilities/transactions/optimistic_transaction.cc\n        utilities/transactions/pessimistic_transaction.cc\n        utilities/transactions/pessimistic_transaction_db.cc\n        utilities/transactions/snapshot_checker.cc\n        utilities/transactions/transaction_base.cc\n        utilities/transactions/transaction_db_mutex_impl.cc\n        utilities/transactions/transaction_lock_mgr.cc\n        utilities/transactions/transaction_util.cc\n        utilities/transactions/write_prepared_txn.cc\n        utilities/transactions/write_prepared_txn_db.cc\n        utilities/transactions/write_unprepared_txn.cc\n        utilities/transactions/write_unprepared_txn_db.cc\n        utilities/ttl/db_ttl_impl.cc\n        utilities/write_batch_with_index/write_batch_with_index.cc\n        utilities/write_batch_with_index/write_batch_with_index_internal.cc\n        utilities/util/factory.cc\n        $<TARGET_OBJECTS:rocksdb_build_version>)\n\nIF(WITH_TERARK_ZIP)\n  LIST(APPEND SOURCES db/compaction_dispatcher.cc\n                      memtable/terark_zip_entry_index.cc\t\n                      memtable/terark_zip_memtable.cc\n                      table/terark_zip_common.cc\t\n                      table/terark_zip_config.cc\t\n                      table/terark_zip_table_builder.cc\t\n                      table/terark_zip_table_reader.cc\t\n                      table/terark_zip_table.cc)\nENDIF()\n\nIF(WITH_TESTS OR WITH_TOOLS)\n  LIST(APPEND SOURCES utilities/cassandra/cassandra_compaction_filter.cc\n                      utilities/cassandra/format.cc\n                      utilities/cassandra/merge_operator.cc\n                      util/testutil.cc)\nENDIF()\n\n# Scan more sources\nFILE(GLOB CONSOLE_SOURCES utilities/console/*.cc)\nFILE(GLOB TEST_CONSOLE_SOURCES utilities/console/*_test.cc)\nLIST(REMOVE_ITEM CONSOLE_SOURCES \"${TEST_CONSOLE_SOURCES}\")\nLIST(APPEND SOURCES ${CONSOLE_SOURCES})\n\n\nif(HAVE_SSE42 AND NOT MSVC)\n  set_source_files_properties(\n    util/crc32c.cc\n    PROPERTIES COMPILE_FLAGS \"-msse4.2 -mpclmul\")\nendif()\n\nif(HAVE_POWER8)\n  list(APPEND SOURCES\n    util/crc32c_ppc.c\n    util/crc32c_ppc_asm.S)\nendif(HAVE_POWER8)\n\nif(WIN32)\n  list(APPEND SOURCES\n    port/win/io_win.cc\n    port/win/env_win.cc\n    port/win/env_default.cc\n    port/win/port_win.cc\n    port/win/win_logger.cc\n    port/win/win_thread.cc)\n\n    if(WITH_XPRESS)\n      list(APPEND SOURCES\n        port/win/xpress_win.cc)\n    endif()\n\n    if(WITH_JEMALLOC)\n      list(APPEND SOURCES\n        port/win/win_jemalloc.cc)\n    endif()\n\n  else()\n    list(APPEND SOURCES\n      port/port_posix.cc\n      env/env_posix.cc\n      env/io_posix.cc)\n\n    if(WITH_ZENFS)\n      list(APPEND SOURCES env/env_zenfs.cc)\n      if(DEFINED zenfs_SOURCES)\n        foreach(SOURCE_FILE ${zenfs_SOURCES})\n          list(APPEND SOURCES \"third-party/zenfs/${SOURCE_FILE}\")\n\tendforeach()\n      else()\n        list(APPEND SOURCES\n          third-party/zenfs/fs/fs_zenfs.cc\n          third-party/zenfs/fs/io_zenfs.cc\n          third-party/zenfs/fs/zbd_zenfs.cc)\n      endif()\n    endif()\nendif()\n\nset(ROCKSDB_STATIC_LIB terarkdb${ARTIFACT_SUFFIX})\nset(ROCKSDB_SHARED_LIB terarkdb-shared${ARTIFACT_SUFFIX})\nset(ROCKSDB_IMPORT_LIB ${ROCKSDB_SHARED_LIB})\n\noption(WITH_LIBRADOS \"Build with librados\" OFF)\nif(WITH_LIBRADOS)\n  list(APPEND SOURCES\n    utilities/env_librados.cc)\n  list(APPEND THIRDPARTY_LIBS rados)\nendif()\n\nif(WIN32)\n  set(SYSTEM_LIBS ${SYSTEM_LIBS} Shlwapi.lib Rpcrt4.lib)\n  set(LIBS ${ROCKSDB_STATIC_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})\nendif()\n\n# Static terarkdb lib\nadd_library(${ROCKSDB_STATIC_LIB} STATIC ${SOURCES})\ntarget_link_libraries(${ROCKSDB_STATIC_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS} ${TERARK_ZIP_LIB} ${TERARK_SHARED_DEPENDS})\ntarget_include_directories(${ROCKSDB_STATIC_LIB} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n                                                        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>\n                                                        $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include>)\n\nif(WIN32)\n  # imported terarkdb lib\n  add_library(${ROCKSDB_IMPORT_LIB} SHARED ${SOURCES})\n  target_link_libraries(${ROCKSDB_IMPORT_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS} ${TERARK_ZIP_LIB})\n  target_include_directories(${ROCKSDB_IMPORT_LIB} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>)\n  set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES\n    COMPILE_DEFINITIONS \"ROCKSDB_DLL;ROCKSDB_LIBRARY_EXPORTS\")\n  if(MSVC)\n    set_target_properties(${ROCKSDB_STATIC_LIB} PROPERTIES\n      COMPILE_FLAGS \"/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_STATIC_LIB}.pdb\")\n    set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES\n      COMPILE_FLAGS \"/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_IMPORT_LIB}.pdb\")\n  endif()\nendif()\n\noption(WITH_JNI \"build with JNI\" OFF)\nif(WITH_JNI OR JNI)\n  message(STATUS \"JNI library is enabled\")\n  add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/java)\nelse()\n  message(STATUS \"JNI library is disabled\")\nendif()\n\n# Installation and packaging\nif(WIN32)\n  option(ROCKSDB_INSTALL_ON_WINDOWS \"Enable install target on Windows\" OFF)\nendif()\nif(NOT WIN32 OR ROCKSDB_INSTALL_ON_WINDOWS)\n  if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n    if(${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n      # Change default installation prefix on Linux to /usr\n      set(CMAKE_INSTALL_PREFIX /usr CACHE PATH \"Install path prefix, prepended onto install directories.\" FORCE)\n    endif()\n  endif()\n\n  include(GNUInstallDirs)\n  include(CMakePackageConfigHelpers)\n\n  set(package_config_destination ${CMAKE_INSTALL_LIBDIR})\n\n  configure_package_config_file(\n    ${CMAKE_CURRENT_LIST_DIR}/cmake/RocksDBConfig.cmake.in RocksDBConfig.cmake\n    INSTALL_DESTINATION ${package_config_destination}\n  )\n\n  write_basic_package_version_file(\n    RocksDBConfigVersion.cmake\n    VERSION ${ROCKSDB_VERSION}\n    COMPATIBILITY SameMajorVersion\n  )\n\n  install(\n          DIRECTORY include/rocksdb\n          COMPONENT devel\n          DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n          PATTERN \"*.h.in\" EXCLUDE)\n\n  install(\n        TARGETS ${ROCKSDB_STATIC_LIB}\n        #EXPORT RocksDBTargets\n        COMPONENT devel\n        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n  )\n\n  # We should also expose terarkdb's source dir\n  INSTALL(DIRECTORY memtable monitoring env db cache options port table util utilities\n        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n        FILES_MATCHING\n        PATTERN \"*.h\"\n        PATTERN \"*.hpp\"\n  )\n\n  install(\n    FILES\n    ${CMAKE_CURRENT_BINARY_DIR}/RocksDBConfig.cmake\n    ${CMAKE_CURRENT_BINARY_DIR}/RocksDBConfigVersion.cmake\n    COMPONENT devel\n    DESTINATION ${package_config_destination}\n  )\nendif()\n\nIF(WITH_TESTS OR WITH_TOOLS)\n  add_library(testharness OBJECT util/testharness.cc)\nENDIF()\n\nif(WITH_TESTS)\n  set(TESTS\n        cache/cache_test.cc\n        cache/lru_cache_test.cc\n        db/column_family_test.cc\n        db/compact_files_test.cc\n        db/compaction_iterator_test.cc\n        db/compaction_job_stats_test.cc\n        db/compaction_job_test.cc\n        db/compaction_picker_test.cc\n        db/comparator_db_test.cc\n        db/corruption_test.cc\n        db/cuckoo_table_db_test.cc\n        db/db_basic_test.cc\n        db/db_block_cache_test.cc\n        db/db_bloom_filter_test.cc\n        db/db_compaction_filter_test.cc\n        db/db_compaction_test.cc\n        db/db_dynamic_level_test.cc\n        db/db_flush_test.cc\n        db/db_impl_gc_ttl_test.cc\n        db/db_inplace_update_test.cc\n        db/db_io_failure_test.cc\n        db/db_iter_test.cc\n        db/db_iter_stress_test.cc\n        db/db_iterator_test.cc\n        db/db_log_iter_test.cc\n        db/db_memtable_test.cc\n        db/db_merge_operator_test.cc\n        db/db_options_test.cc\n        db/db_properties_test.cc\n        db/db_range_del_test.cc\n        db/db_sst_test.cc\n        db/db_statistics_test.cc\n        db/db_table_properties_test.cc\n        db/db_tailing_iter_test.cc\n        db/db_test.cc\n        db/db_test2.cc\n        db/db_universal_compaction_test.cc\n        db/db_wal_test.cc\n        db/db_write_test.cc\n        db/dbformat_test.cc\n        db/deletefile_test.cc\n        db/error_handler_test.cc\n        db/obsolete_files_test.cc\n        db/external_sst_file_basic_test.cc\n        db/external_sst_file_test.cc\n        db/fault_injection_test.cc\n        db/file_indexer_test.cc\n        db/filename_test.cc\n        db/flush_job_test.cc\n        db/listener_test.cc\n        db/log_test.cc\n        db/manual_compaction_test.cc\n        db/map_builder_test\n        db/memtable_list_test.cc\n        db/merge_helper_test.cc\n        db/merge_test.cc\n        db/metrics_reporter_test.cc\n        db/options_file_test.cc\n        db/perf_context_test.cc\n        db/periodic_work_scheduler_test.cc\n        db/plain_table_db_test.cc\n        db/prefix_test.cc\n        db/range_del_aggregator_test.cc\n        db/range_tombstone_fragmenter_test.cc\n        db/repair_test.cc\n        db/table_properties_collector_test.cc\n        db/version_builder_test.cc\n        db/version_edit_test.cc\n        db/version_set_test.cc\n        db/wal_manager_test.cc\n        db/write_batch_test.cc\n        db/write_callback_test.cc\n        db/write_controller_test.cc\n        env/env_basic_test.cc\n        env/env_test.cc\n        env/mock_env_test.cc\n        memtable/inlineskiplist_test.cc\n        memtable/skiplist_test.cc\n        memtable/write_buffer_manager_test.cc\n        monitoring/histogram_test.cc\n        monitoring/iostats_context_test.cc\n        monitoring/statistics_test.cc\n        options/options_settable_test.cc\n        options/options_test.cc\n        table/block_based_filter_block_test.cc\n        table/block_based_table_row_ttl_test.cc\n        table/block_test.cc\n        table/cleanable_test.cc\n        table/cuckoo_table_builder_test.cc\n        table/cuckoo_table_reader_test.cc\n        table/data_block_hash_index_test.cc\n        table/full_filter_block_test.cc\n        table/merger_test.cc\n        table/sst_file_reader_test.cc\n        table/table_test.cc\n        tools/ldb_cmd_test.cc\n        tools/reduce_levels_test.cc\n        tools/sst_dump_test.cc\n        tools/trace_analyzer_test.cc\n        util/arena_test.cc\n        util/auto_roll_logger_test.cc\n        util/autovector_test.cc\n        util/bloom_test.cc\n        util/coding_test.cc\n        util/crc32c_test.cc\n        util/delete_scheduler_test.cc\n        util/dynamic_bloom_test.cc\n        util/event_logger_test.cc\n        util/file_reader_writer_test.cc\n        util/filelock_test.cc\n        util/hash_test.cc\n        util/heap_test.cc\n        util/lazy_buffer_test.cc\n        util/rate_limiter_test.cc\n        util/repeatable_thread_test.cc\n        util/slice_transform_test.cc\n        util/timer_queue_test.cc\n        util/timer_test.cc\n        util/thread_list_test.cc\n        util/thread_local_test.cc\n        utilities/backupable/backupable_db_test.cc\n        utilities/cassandra/cassandra_functional_test.cc\n        utilities/cassandra/cassandra_format_test.cc\n        utilities/cassandra/cassandra_row_merge_test.cc\n        utilities/cassandra/cassandra_serialize_test.cc\n        utilities/flink/flink_compaction_filter_test.cc\n        utilities/checkpoint/checkpoint_test.cc\n        utilities/column_aware_encoding_test.cc\n        utilities/date_tiered/date_tiered_test.cc\n        utilities/document/document_db_test.cc\n        utilities/document/json_document_test.cc\n        utilities/geodb/geodb_test.cc\n        utilities/lua/rocks_lua_test.cc\n        utilities/memory/memory_test.cc\n        utilities/merge_operators/string_append/stringappend_test.cc\n        utilities/object_registry_test.cc\n        utilities/option_change_migration/option_change_migration_test.cc\n        utilities/options/options_util_test.cc\n        utilities/persistent_cache/hash_table_test.cc\n        utilities/persistent_cache/persistent_cache_test.cc\n        utilities/redis/redis_lists_test.cc\n        utilities/spatialdb/spatial_db_test.cc\n        utilities/simulator_cache/sim_cache_test.cc\n        utilities/table_properties_collectors/compact_on_deletion_collector_test.cc\n        utilities/transactions/optimistic_transaction_test.cc\n        utilities/transactions/transaction_test.cc\n        utilities/transactions/write_prepared_transaction_test.cc\n        utilities/transactions/write_unprepared_transaction_test.cc\n        utilities/ttl/ttl_test.cc\n        utilities/write_batch_with_index/write_batch_with_index_test.cc\n  )\n  if(WITH_TERARK_ZIP)\n    list(APPEND TESTS\n        memtable/terark_zip_memtable_test.cc\n        table/terark_zip_table_row_ttl_test.cc\n    )\n  endif()\n  if(WITH_LIBRADOS)\n    list(APPEND TESTS utilities/env_librados_test.cc)\n  endif()\n\n  # For test util library that is build only in DEBUG mode\n  # and linked to tests. Add test only code that is not #ifdefed for Release here.\n  set(TESTUTIL_SOURCE\n      db/db_test_util.cc\n      monitoring/thread_status_updater_debug.cc\n      table/mock_table.cc\n      util/mock_time_env.cc\n      util/fault_injection_test_env.cc\n      utilities/cassandra/test_utils.cc\n  )\n  # test utilities are built only in debug mode\n  enable_testing()\n  add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND})\n  set(TESTUTILLIB testutillib${ARTIFACT_SUFFIX})\n  add_library(${TESTUTILLIB} STATIC ${TESTUTIL_SOURCE})\n  target_link_libraries(${TESTUTILLIB} ${THIRDPARTY_LIBS})\n  if(MSVC)\n    set_target_properties(${TESTUTILLIB} PROPERTIES COMPILE_FLAGS \"/Fd${CMAKE_CFG_INTDIR}/testutillib${ARTIFACT_SUFFIX}.pdb\")\n  endif()\n  set_target_properties(${TESTUTILLIB}\n        PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD_RELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_MINRELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_RELWITHDEBINFO 1\n        )\n\n  # Tests are excluded from Release builds\n  set(TEST_EXES ${TESTS})\n\n  foreach(sourcefile ${TEST_EXES})\n      get_filename_component(exename ${sourcefile} NAME_WE)\n      add_executable(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX} ${sourcefile}\n        $<TARGET_OBJECTS:testharness>)\n      set_target_properties(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX}\n        PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD_RELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_MINRELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_RELWITHDEBINFO 1\n        OUTPUT_NAME ${exename}${ARTIFACT_SUFFIX}\n        )\n      target_link_libraries(${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX} testutillib${ARTIFACT_SUFFIX} gtest ${ROCKSDB_STATIC_LIB})\n      if(NOT \"${exename}\" MATCHES \"db_sanity_test\")\n        add_test(NAME ${exename} COMMAND ${exename}${ARTIFACT_SUFFIX})\n        add_dependencies(check ${CMAKE_PROJECT_NAME}_${exename}${ARTIFACT_SUFFIX})\n      endif()\n  endforeach(sourcefile ${TEST_EXES})\n\n  # C executables must link to a shared object\n  set(C_TESTS db/c_test.c)\n  set(C_TEST_EXES ${C_TESTS})\n\n  foreach(sourcefile ${C_TEST_EXES})\n      string(REPLACE \".c\" \"\" exename ${sourcefile})\n      string(REGEX REPLACE \"^((.+)/)+\" \"\" exename ${exename})\n      add_executable(${exename}${ARTIFACT_SUFFIX} ${sourcefile})\n      set_target_properties(${exename}${ARTIFACT_SUFFIX}\n        PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD_RELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_MINRELEASE 1\n        EXCLUDE_FROM_DEFAULT_BUILD_RELWITHDEBINFO 1\n        )\n      target_link_libraries(${exename}${ARTIFACT_SUFFIX} ${ROCKSDB_STATIC_LIB} testutillib${ARTIFACT_SUFFIX})\n      add_test(NAME ${exename} COMMAND ${exename}${ARTIFACT_SUFFIX})\n      add_dependencies(check ${exename}${ARTIFACT_SUFFIX})\n  endforeach(sourcefile ${C_TEST_EXES})\nendif()\n\nif(WITH_TOOLS)\n  set(BENCHMARKS\n    cache/cache_bench.cc\n    memtable/memtablerep_bench.cc\n    db/range_del_aggregator_bench.cc\n    table/table_reader_bench.cc\n    utilities/column_aware_encoding_exp.cc\n    utilities/persistent_cache/hash_table_bench.cc)\n  foreach(sourcefile ${BENCHMARKS})\n    get_filename_component(exename ${sourcefile} NAME_WE)\n    add_executable(${exename}${ARTIFACT_SUFFIX} ${sourcefile}\n      $<TARGET_OBJECTS:testharness>)\n    target_link_libraries(${exename}${ARTIFACT_SUFFIX} gtest ${ROCKSDB_STATIC_LIB})\n  endforeach(sourcefile ${BENCHMARKS})\n\n  add_executable(db_bench${ARTIFACT_SUFFIX} tools/db_bench.cc\n      tools/db_bench_tool.cc\n      $<TARGET_OBJECTS:testharness>)\n  target_link_libraries(db_bench${ARTIFACT_SUFFIX} gtest ${ROCKSDB_STATIC_LIB})\n\n                      \n  if(WITH_ZENFS)\n    include_directories(third-party/zenfs)\n    add_executable(zenfs${ARTIFACT_SUFFIX} third-party/zenfs/util/zenfs.cc\n            $<TARGET_OBJECTS:testharness>)\n    target_link_libraries(zenfs${ARTIFACT_SUFFIX} gtest ${ROCKSDB_STATIC_LIB})\n\n    FILE(GLOB ZENFS_TESTS third-party/zenfs/test/*_test.cc)\n    foreach(sourcefile ${ZENFS_TESTS})\n      get_filename_component(exename ${sourcefile} NAME_WE)\n      add_executable(${exename}${ARTIFACT_SUFFIX} ${sourcefile}\n              $<TARGET_OBJECTS:testharness>)\n      target_link_libraries(${exename}${ARTIFACT_SUFFIX} gtest ${ROCKSDB_STATIC_LIB})\n    endforeach(sourcefile ${BENCHMARKS})\n\n  endif()\n\n  if(WITH_TERARK_ZIP)\n    add_executable(remote_compaction_worker_101 tools/remote_compaction_worker_101.cc\n      $<TARGET_OBJECTS:testharness>)\n    target_link_libraries(remote_compaction_worker_101 gtest ${ROCKSDB_STATIC_LIB})\n    add_subdirectory(terark-tools/terark-test)\n  endif()\n  add_subdirectory(tools)\n  add_subdirectory(terark-tools/batch-write-bench)\nendif()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.072265625,
          "content": "# Contributing to TerarkDB\n\n## Contributor License Agreement (\"CLA\")\nTODO\n"
        },
        {
          "name": "DUMP_FORMAT.md",
          "type": "blob",
          "size": 0.7451171875,
          "content": "## RocksDB dump format\n\nThe version 1 RocksDB dump format is fairly simple:\n\n1) The dump starts with the magic 8 byte identifier \"ROCKDUMP\"\n\n2) The magic is followed by an 8 byte big-endian version which is 0x00000001.\n\n3) Next are arbitrarily sized chunks of bytes prepended by 4 byte little endian number indicating how large each chunk is.\n\n4) The first chunk is special and is a json string indicating some things about the creation of this dump.  It contains the following keys:\n* database-path: The path of the database this dump was created from.\n* hostname: The hostname of the machine where the dump was created.\n* creation-time: Unix seconds since epoc when this dump was created.\n\n5) Following the info dump the slices paired into are key/value pairs.\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "LICENSE.Apache",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE.leveldb",
          "type": "blob",
          "size": 1.53515625,
          "content": "This contains code that is from LevelDB, and that code is under the following license:\n\nCopyright (c) 2011 The LevelDB Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6796875,
          "content": "# About TerarkDB\nTerarkDB is a RocksDB replacement with optimized tail latency, throughput and compression etc. In most cases you can migrate your existing RocksDB instance to TerarkDB without any\ndrawbacks.\n\n- [All-in-one Docs](https://bytedance.feishu.cn/docs/doccnZmYFqHBm06BbvYgjsHHcKc#)\n- [Slack Channel](https://join.slack.com/t/terarkdb/shared_invite/zt-zxo71hwl-j_K4OIQ~p5_SsT4RrFesxg)\n\n**NOTES**\n- TerarkDB was only tested and production ready under Linux platform\n- Language bindings except C/C++ are not fully tested yet.\n- Existing data can be migrated from RocksDB directly to TerarkDB, but cannot migrate back to RocksDB.\n- TerarkDB was forked from RocksDB v5.18.3.\n\n\n## Performance Overview\n- RocksDB v6.12\n- Server\n  - Intel(R) Xeon(R) Gold 5218 CPU @ 2.30GHz (2 Sockets, 32 cores 64 threads)\n  - 376 GB DRAM\n  - NVMe TLC SSD (3.5 TB)\n- Bench Tools & Workloads\n  - use `db_bench`\n  - 10 client threads, 20GB requests per thread\n  - key = 24 bytes, value = 2000 bytes\n  - `heavy_write` means 90% write operations\n  - `heavy_read` means 90% read operations\n\n\n![](docs/images/compare_rocksdb.png)\n\n\n# 1. Use TerarkDB\n\n## Prerequisite\nIf you enabled TerarkZipTable support (`-DWITH_TERARK_ZIP=ON`), you should install `libaio` before compile TerarkDB:\n\n`sudo apt-get install libaio-dev`\n\nIf this is your first time using TerarkDB, we recommend you to use without TerarkZipTable by changing `-DWITH_TERARK_ZIP` to `OFF` in `build.sh`.\n\n## Method 1: Use CMake subdirectory (Recommend)\n\n1) Clone\n\n```\ncd {YOUR_PROJECT_DIR}\ngit submodule add https://github.com/bytedance/terarkdb.git\n\ncd terarkdb && git submodule update --init --recursive\n```\n\n2) Edit your Top Project's CMakeLists.txt\n\n```\nadd_subdirectory(terarkdb)\ntarget_link_libraries({YOUR_TARGET} terarkdb)\n```\n\n3) Important Default Options\n\n- CMAKE_BUILD_TYPE: RelWithDebInfo\n- WITH_JEMALLOC: ON\n  - Use Jemalloc or Not (If you are using a different malloc library, change to OFF)\n- WITH_TESTS: OFF\n  - Build test cases\n- WITH_TOOLS: OFF\n  - Build with TerarkDB tools (e.g. db_bench, ldb etc)\n- WITH_TERARK_ZIP: OFF\n  - Build with TerarkZipTable\n- WITH_ZNS: OFF\n  - Build with ZNS device support\n\n\n### Notes\n- TerarkDB is built with zstd, lz4, snappy, zlib, gtest, boost by default, if you need these libraries, you can remove them from your higher level application.\n\n\n## Method 2: Link as static library\n\n1) clone & build\n\n```\ngit clone https://github.com/bytedance/terarkdb.git\n\ncd terarkdb && git submodule update --init --recursive\n\nWITH_TESTS=OFF WITH_ZNS=OFF ./build.sh\n```\n\n2) linking\n\nDirectory:\n\n```\n  terarkdb/\n        \\___ output/\n                \\_____ include/\n                \\_____ lib/\n                         \\___ libterarkdb.a\n                         \\___ libzstd.a\n                         \\___ ...\n```\n\nWe didn't archieve all static libraries together yet, so you have to pack all libraries to your target:\n\n```\n-Wl,-Bstatic \\\n-lterarkdb -lbz2 -ljemalloc -llz4 -lsnappy -lz -lzstd \\\n-Wl,-Bdynamic -pthread -lgomp -lrt -ldl -laio\n```\n\n\n# 2. Usage\n## 2.1. BlockBasedTable\n```c++\n#include <cassert>\n#include \"rocksdb/db.h\"\n\nrocksdb::DB* db;\nrocksdb::Options options;\n\n// Your options here\noptions.create_if_missing = true;\noptions.wal_bytes_per_sync = 32768;\noptions.bytes_per_sync = 32768;\n\n// Open DB\nauto status = rocksdb::DB::Open(options, \"/tmp/testdb\", &db);\n\n// Operations\nstd::string value;\nauto s = db->Put(rocksdb::WriteOptions(), \"key1\", \"value1\");\ns = db->Get(rocksdb::ReadOptions(), \"key1\", &value);\nassert(s.ok());\nassert(\"value1\" == value);\n\ns = db->Delete(rocksdb::WriteOptions(), \"key1\");\nassert(s.ok());\n```\n\nOr manually set table format and table options:\n\n```c++\n#include <cassert>\n#include \"rocksdb/db.h\"\n#include \"rocksdb/options.h\"\n#include \"rocksdb/table.h\"\n\nrocksdb::DB* db;\nrocksdb::Options options;\n\n// Your db options here\noptions.create_if_missing = true;\noptions.wal_bytes_per_sync = 32768;\noptions.bytes_per_sync = 32768;\n\n// Manually specify target table and table options\nrocksdb::BlockBasedTableOptions table_options;\ntable_options.block_cache =\n    rocksdb::NewLRUCache(32ULL << 30, 8, false);\ntable_options.block_size = 8ULL << 10;\noptions.table_factory = std::shared_ptr<rocksdb::TableFactory>\n                          (NewBlockBasedTableFactory(table_options));\n\n// Open DB\nauto status = rocksdb::DB::Open(options, \"/tmp/testdb2\", &db);\n\n// Operations\nstd::string value;\nauto s = db->Put(rocksdb::WriteOptions(), \"key1\", \"value1\");\ns = db->Get(rocksdb::ReadOptions(), \"key1\", &value);\nassert(s.ok());\nassert(\"value1\" == value);\n\ns = db->Delete(rocksdb::WriteOptions(), \"key1\");\nassert(s.ok());\n```\n\n## 2.2. TerarkZipTable\n```c++\n#include <cassert>\n#include \"rocksdb/db.h\"\n#include \"rocksdb/options.h\"\n#include \"rocksdb/table.h\"\n#include \"table/terark_zip_table.h\"\n\nrocksdb::DB* db;\nrocksdb::Options options;\n\n// Your db options here\noptions.create_if_missing = true;\noptions.wal_bytes_per_sync = 32768;\noptions.bytes_per_sync = 32768;\n\n// TerarkZipTable need a `fallback` options because you can indicate which LSM level you want to start using TerarkZipTable\n// For example, by setting tzt_options.terarkZipMinLevel = 2, TerarkDB will use your fallback Table on level 0 and 1.\nstd::shared_ptr<rocksdb::TableFactory> table_factory;\nrocksdb::BlockBasedTableOptions blockbased_options;\nblockbased_options.block_size = 8ULL << 10;\ntable_factory.reset(NewBlockBasedTableFactory(blockbased_options));\n\nrocksdb::TerarkZipTableOptions tzt_options;\n// TerarkZipTable requires a temp directory other than data directory, a slow device is acceptable\ntzt_options.localTempDir = \"/tmp\";\ntzt_options.indexNestLevel = 3;\ntzt_options.sampleRatio = 0.01;\ntzt_options.terarkZipMinLevel = 2; // Start using TerarkZipTable from level 2\n\ntable_factory.reset(\n    rocksdb::NewTerarkZipTableFactory(tzt_options, table_factory));\n\noptions.table_factory = table_factory;\n\n// Open DB\nauto status = rocksdb::DB::Open(options, \"/tmp/testdb2\", &db);\n\n// Operations\nstd::string value;\nauto s = db->Put(rocksdb::WriteOptions(), \"key1\", \"value1\");\ns = db->Get(rocksdb::ReadOptions(), \"key1\", &value);\nassert(s.ok());\nassert(\"value1\" == value);\n\ns = db->Delete(rocksdb::WriteOptions(), \"key1\");\nassert(s.ok());\n```\n\n\n# 3. Real-world Performance Improvement\nTerarkDB has been deployed in lots of applications in Bytedance, in most cases TerarkDB can help to reduce latency spike and improve throughput tremendously.\n\n### Disk Write\n![](docs/images/disk_write.png)\n\n### Get Latency (us)\n![](docs/images/get_latency.png)\n\n\n# 4. Contributing\n- TerarkDB uses Github issues and pull requests to manage features and bug fixes.\n- All PRs are welcome including code formating and refactoring.\n\n\n# 5. License\n- Apache 2.0\n\n# 6. Users\n\nPlease let us know if you are using TerarkDB, thanks! (By joining our slack channel)\n\n- ByteDance (core online services)\n"
        },
        {
          "name": "TARGETS",
          "type": "blob",
          "size": 39.7626953125,
          "content": "load(\"@fbcode_macros//build_defs:auto_headers.bzl\", \"AutoHeaders\")\n\nREPO_PATH = package_name() + \"/\"\n\nBUCK_BINS = \"buck-out/gen/\" + REPO_PATH\n\nTEST_RUNNER = REPO_PATH + \"buckifier/rocks_test_runner.sh\"\n\nrocksdb_compiler_flags = [\n    \"-fno-builtin-memcmp\",\n    \"-DROCKSDB_PLATFORM_POSIX\",\n    \"-DROCKSDB_LIB_IO_POSIX\",\n    \"-DROCKSDB_FALLOCATE_PRESENT\",\n    \"-DROCKSDB_MALLOC_USABLE_SIZE\",\n    \"-DROCKSDB_RANGESYNC_PRESENT\",\n    \"-DROCKSDB_SCHED_GETCPU_PRESENT\",\n    \"-DROCKSDB_SUPPORT_THREAD_LOCAL\",\n    \"-DOS_LINUX\",\n    # Flags to enable libs we include\n    \"-DSNAPPY\",\n    \"-DZLIB\",\n    \"-DBZIP2\",\n    \"-DLZ4\",\n    \"-DZSTD\",\n    \"-DGFLAGS=gflags\",\n    \"-DNUMA\",\n    \"-DTBB\",\n    # Needed to compile in fbcode\n    \"-Wno-expansion-to-defined\",\n    # Added missing flags from output of build_detect_platform\n    \"-DROCKSDB_PTHREAD_ADAPTIVE_MUTEX\",\n    \"-DROCKSDB_BACKTRACE\",\n    \"-Wnarrowing\",\n]\n\nrocksdb_external_deps = [\n    (\"bzip2\", None, \"bz2\"),\n    (\"snappy\", None, \"snappy\"),\n    (\"zlib\", None, \"z\"),\n    (\"gflags\", None, \"gflags\"),\n    (\"lz4\", None, \"lz4\"),\n    (\"zstd\", None),\n    (\"tbb\", None),\n    (\"numa\", None, \"numa\"),\n    (\"googletest\", None, \"gtest\"),\n]\n\nrocksdb_preprocessor_flags = [\n    # Directories with files for #include\n    \"-I\" + REPO_PATH + \"include/\",\n    \"-I\" + REPO_PATH,\n]\n\nrocksdb_arch_preprocessor_flags = {\n    \"x86_64\": [\n        \"-DHAVE_SSE42\",\n        \"-DHAVE_PCLMUL\",\n    ],\n}\n\nbuild_mode = read_config(\"fbcode\", \"build_mode\")\n\nis_opt_mode = build_mode.startswith(\"opt\")\n\n# -DNDEBUG is added by default in opt mode in fbcode. But adding it twice\n# doesn't harm and avoid forgetting to add it.\nif is_opt_mode:\n    rocksdb_compiler_flags.append(\"-DNDEBUG\")\n\nsanitizer = read_config(\"fbcode\", \"sanitizer\")\n\n# Do not enable jemalloc if sanitizer presents. RocksDB will further detect\n# whether the binary is linked with jemalloc at runtime.\nif sanitizer == \"\":\n    rocksdb_compiler_flags.append(\"-DROCKSDB_JEMALLOC\")\n    rocksdb_external_deps.append((\"jemalloc\", None, \"headers\"))\n\ncpp_library(\n    name = \"rocksdb_lib\",\n    srcs = [\n        \"cache/cache.cc\",\n        \"cache/clock_cache.cc\",\n        \"cache/lru_cache.cc\",\n        \"cache/sharded_cache.cc\",\n        \"db/arena_wrapped_db_iter.cc\",\n        \"db/blob/blob_file_addition.cc\",\n        \"db/blob/blob_file_builder.cc\",\n        \"db/blob/blob_file_garbage.cc\",\n        \"db/blob/blob_file_meta.cc\",\n        \"db/blob/blob_log_format.cc\",\n        \"db/blob/blob_log_reader.cc\",\n        \"db/blob/blob_log_writer.cc\",\n        \"db/builder.cc\",\n        \"db/c.cc\",\n        \"db/column_family.cc\",\n        \"db/compacted_db_impl.cc\",\n        \"db/compaction/compaction.cc\",\n        \"db/compaction/compaction_iterator.cc\",\n        \"db/compaction/compaction_job.cc\",\n        \"db/compaction/compaction_picker.cc\",\n        \"db/compaction/compaction_picker_level.cc\",\n        \"db/compaction/compaction_picker_universal.cc\",\n        \"db/compaction/sst_partitioner.cc\",\n        \"db/convenience.cc\",\n        \"db/db_filesnapshot.cc\",\n        \"db/db_impl/db_impl.cc\",\n        \"db/db_impl/db_impl_compaction_flush.cc\",\n        \"db/db_impl/db_impl_debug.cc\",\n        \"db/db_impl/db_impl_experimental.cc\",\n        \"db/db_impl/db_impl_files.cc\",\n        \"db/db_impl/db_impl_open.cc\",\n        \"db/db_impl/db_impl_readonly.cc\",\n        \"db/db_impl/db_impl_secondary.cc\",\n        \"db/db_impl/db_impl_write.cc\",\n        \"db/db_info_dumper.cc\",\n        \"db/db_iter.cc\",\n        \"db/dbformat.cc\",\n        \"db/error_handler.cc\",\n        \"db/event_helpers.cc\",\n        \"db/experimental.cc\",\n        \"db/external_sst_file_ingestion_job.cc\",\n        \"db/file_indexer.cc\",\n        \"db/flush_job.cc\",\n        \"db/flush_scheduler.cc\",\n        \"db/forward_iterator.cc\",\n        \"db/import_column_family_job.cc\",\n        \"db/internal_stats.cc\",\n        \"db/log_reader.cc\",\n        \"db/log_writer.cc\",\n        \"db/logs_with_prep_tracker.cc\",\n        \"db/malloc_stats.cc\",\n        \"db/memtable.cc\",\n        \"db/memtable_list.cc\",\n        \"db/merge_helper.cc\",\n        \"db/merge_operator.cc\",\n        \"db/output_validator.cc\",\n        \"db/periodic_work_scheduler.cc\",\n        \"db/range_del_aggregator.cc\",\n        \"db/range_tombstone_fragmenter.cc\",\n        \"db/repair.cc\",\n        \"db/snapshot_impl.cc\",\n        \"db/table_cache.cc\",\n        \"db/table_properties_collector.cc\",\n        \"db/transaction_log_impl.cc\",\n        \"db/trim_history_scheduler.cc\",\n        \"db/version_builder.cc\",\n        \"db/version_edit.cc\",\n        \"db/version_edit_handler.cc\",\n        \"db/version_set.cc\",\n        \"db/wal_edit.cc\",\n        \"db/wal_manager.cc\",\n        \"db/write_batch.cc\",\n        \"db/write_batch_base.cc\",\n        \"db/write_controller.cc\",\n        \"db/write_thread.cc\",\n        \"env/env.cc\",\n        \"env/env_chroot.cc\",\n        \"env/env_encryption.cc\",\n        \"env/env_hdfs.cc\",\n        \"env/env_posix.cc\",\n        \"env/file_system.cc\",\n        \"env/file_system_tracer.cc\",\n        \"env/fs_posix.cc\",\n        \"env/io_posix.cc\",\n        \"env/mock_env.cc\",\n        \"file/delete_scheduler.cc\",\n        \"file/file_prefetch_buffer.cc\",\n        \"file/file_util.cc\",\n        \"file/filename.cc\",\n        \"file/random_access_file_reader.cc\",\n        \"file/read_write_util.cc\",\n        \"file/readahead_raf.cc\",\n        \"file/sequence_file_reader.cc\",\n        \"file/sst_file_manager_impl.cc\",\n        \"file/writable_file_writer.cc\",\n        \"logging/auto_roll_logger.cc\",\n        \"logging/event_logger.cc\",\n        \"logging/log_buffer.cc\",\n        \"memory/arena.cc\",\n        \"memory/concurrent_arena.cc\",\n        \"memory/jemalloc_nodump_allocator.cc\",\n        \"memory/memkind_kmem_allocator.cc\",\n        \"memtable/alloc_tracker.cc\",\n        \"memtable/hash_linklist_rep.cc\",\n        \"memtable/hash_skiplist_rep.cc\",\n        \"memtable/skiplistrep.cc\",\n        \"memtable/vectorrep.cc\",\n        \"memtable/write_buffer_manager.cc\",\n        \"monitoring/histogram.cc\",\n        \"monitoring/histogram_windowing.cc\",\n        \"monitoring/in_memory_stats_history.cc\",\n        \"monitoring/instrumented_mutex.cc\",\n        \"monitoring/iostats_context.cc\",\n        \"monitoring/perf_context.cc\",\n        \"monitoring/perf_level.cc\",\n        \"monitoring/persistent_stats_history.cc\",\n        \"monitoring/statistics.cc\",\n        \"monitoring/thread_status_impl.cc\",\n        \"monitoring/thread_status_updater.cc\",\n        \"monitoring/thread_status_updater_debug.cc\",\n        \"monitoring/thread_status_util.cc\",\n        \"monitoring/thread_status_util_debug.cc\",\n        \"options/cf_options.cc\",\n        \"options/configurable.cc\",\n        \"options/db_options.cc\",\n        \"options/options.cc\",\n        \"options/options_helper.cc\",\n        \"options/options_parser.cc\",\n        \"port/port_posix.cc\",\n        \"port/stack_trace.cc\",\n        \"port/win/env_default.cc\",\n        \"port/win/env_win.cc\",\n        \"port/win/io_win.cc\",\n        \"port/win/port_win.cc\",\n        \"port/win/win_logger.cc\",\n        \"port/win/win_thread.cc\",\n        \"table/adaptive/adaptive_table_factory.cc\",\n        \"table/block_based/binary_search_index_reader.cc\",\n        \"table/block_based/block.cc\",\n        \"table/block_based/block_based_filter_block.cc\",\n        \"table/block_based/block_based_table_builder.cc\",\n        \"table/block_based/block_based_table_factory.cc\",\n        \"table/block_based/block_based_table_iterator.cc\",\n        \"table/block_based/block_based_table_reader.cc\",\n        \"table/block_based/block_builder.cc\",\n        \"table/block_based/block_prefetcher.cc\",\n        \"table/block_based/block_prefix_index.cc\",\n        \"table/block_based/data_block_footer.cc\",\n        \"table/block_based/data_block_hash_index.cc\",\n        \"table/block_based/filter_block_reader_common.cc\",\n        \"table/block_based/filter_policy.cc\",\n        \"table/block_based/flush_block_policy.cc\",\n        \"table/block_based/full_filter_block.cc\",\n        \"table/block_based/hash_index_reader.cc\",\n        \"table/block_based/index_builder.cc\",\n        \"table/block_based/index_reader_common.cc\",\n        \"table/block_based/parsed_full_filter_block.cc\",\n        \"table/block_based/partitioned_filter_block.cc\",\n        \"table/block_based/partitioned_index_iterator.cc\",\n        \"table/block_based/partitioned_index_reader.cc\",\n        \"table/block_based/reader_common.cc\",\n        \"table/block_based/uncompression_dict_reader.cc\",\n        \"table/block_fetcher.cc\",\n        \"table/cuckoo/cuckoo_table_builder.cc\",\n        \"table/cuckoo/cuckoo_table_factory.cc\",\n        \"table/cuckoo/cuckoo_table_reader.cc\",\n        \"table/format.cc\",\n        \"table/get_context.cc\",\n        \"table/iterator.cc\",\n        \"table/merging_iterator.cc\",\n        \"table/meta_blocks.cc\",\n        \"table/persistent_cache_helper.cc\",\n        \"table/plain/plain_table_bloom.cc\",\n        \"table/plain/plain_table_builder.cc\",\n        \"table/plain/plain_table_factory.cc\",\n        \"table/plain/plain_table_index.cc\",\n        \"table/plain/plain_table_key_coding.cc\",\n        \"table/plain/plain_table_reader.cc\",\n        \"table/sst_file_dumper.cc\",\n        \"table/sst_file_reader.cc\",\n        \"table/sst_file_writer.cc\",\n        \"table/table_factory.cc\",\n        \"table/table_properties.cc\",\n        \"table/two_level_iterator.cc\",\n        \"test_util/sync_point.cc\",\n        \"test_util/sync_point_impl.cc\",\n        \"test_util/transaction_test_util.cc\",\n        \"tools/dump/db_dump_tool.cc\",\n        \"tools/io_tracer_parser_tool.cc\",\n        \"tools/ldb_cmd.cc\",\n        \"tools/ldb_tool.cc\",\n        \"tools/sst_dump_tool.cc\",\n        \"trace_replay/block_cache_tracer.cc\",\n        \"trace_replay/io_tracer.cc\",\n        \"trace_replay/trace_replay.cc\",\n        \"util/build_version.cc\",\n        \"util/coding.cc\",\n        \"util/compaction_job_stats_impl.cc\",\n        \"util/comparator.cc\",\n        \"util/compression_context_cache.cc\",\n        \"util/concurrent_task_limiter_impl.cc\",\n        \"util/crc32c.cc\",\n        \"util/dynamic_bloom.cc\",\n        \"util/file_checksum_helper.cc\",\n        \"util/hash.cc\",\n        \"util/murmurhash.cc\",\n        \"util/random.cc\",\n        \"util/rate_limiter.cc\",\n        \"util/slice.cc\",\n        \"util/status.cc\",\n        \"util/string_util.cc\",\n        \"util/thread_local.cc\",\n        \"util/threadpool_imp.cc\",\n        \"util/xxhash.cc\",\n        \"utilities/backupable/backupable_db.cc\",\n        \"utilities/blob_db/blob_compaction_filter.cc\",\n        \"utilities/blob_db/blob_db.cc\",\n        \"utilities/blob_db/blob_db_impl.cc\",\n        \"utilities/blob_db/blob_db_impl_filesnapshot.cc\",\n        \"utilities/blob_db/blob_dump_tool.cc\",\n        \"utilities/blob_db/blob_file.cc\",\n        \"utilities/cassandra/cassandra_compaction_filter.cc\",\n        \"utilities/cassandra/format.cc\",\n        \"utilities/cassandra/merge_operator.cc\",\n        \"utilities/checkpoint/checkpoint_impl.cc\",\n        \"utilities/compaction_filters/remove_emptyvalue_compactionfilter.cc\",\n        \"utilities/convenience/info_log_finder.cc\",\n        \"utilities/debug.cc\",\n        \"utilities/env_mirror.cc\",\n        \"utilities/env_timed.cc\",\n        \"utilities/fault_injection_env.cc\",\n        \"utilities/fault_injection_fs.cc\",\n        \"utilities/leveldb_options/leveldb_options.cc\",\n        \"utilities/memory/memory_util.cc\",\n        \"utilities/merge_operators/bytesxor.cc\",\n        \"utilities/merge_operators/max.cc\",\n        \"utilities/merge_operators/put.cc\",\n        \"utilities/merge_operators/sortlist.cc\",\n        \"utilities/merge_operators/string_append/stringappend.cc\",\n        \"utilities/merge_operators/string_append/stringappend2.cc\",\n        \"utilities/merge_operators/uint64add.cc\",\n        \"utilities/object_registry.cc\",\n        \"utilities/option_change_migration/option_change_migration.cc\",\n        \"utilities/options/options_util.cc\",\n        \"utilities/persistent_cache/block_cache_tier.cc\",\n        \"utilities/persistent_cache/block_cache_tier_file.cc\",\n        \"utilities/persistent_cache/block_cache_tier_metadata.cc\",\n        \"utilities/persistent_cache/persistent_cache_tier.cc\",\n        \"utilities/persistent_cache/volatile_tier_impl.cc\",\n        \"utilities/simulator_cache/cache_simulator.cc\",\n        \"utilities/simulator_cache/sim_cache.cc\",\n        \"utilities/table_properties_collectors/compact_on_deletion_collector.cc\",\n        \"utilities/trace/file_trace_reader_writer.cc\",\n        \"utilities/transactions/lock/lock_tracker.cc\",\n        \"utilities/transactions/lock/point_lock_tracker.cc\",\n        \"utilities/transactions/optimistic_transaction.cc\",\n        \"utilities/transactions/optimistic_transaction_db_impl.cc\",\n        \"utilities/transactions/pessimistic_transaction.cc\",\n        \"utilities/transactions/pessimistic_transaction_db.cc\",\n        \"utilities/transactions/snapshot_checker.cc\",\n        \"utilities/transactions/transaction_base.cc\",\n        \"utilities/transactions/transaction_db_mutex_impl.cc\",\n        \"utilities/transactions/transaction_lock_mgr.cc\",\n        \"utilities/transactions/transaction_util.cc\",\n        \"utilities/transactions/write_prepared_txn.cc\",\n        \"utilities/transactions/write_prepared_txn_db.cc\",\n        \"utilities/transactions/write_unprepared_txn.cc\",\n        \"utilities/transactions/write_unprepared_txn_db.cc\",\n        \"utilities/ttl/db_ttl_impl.cc\",\n        \"utilities/write_batch_with_index/write_batch_with_index.cc\",\n        \"utilities/write_batch_with_index/write_batch_with_index_internal.cc\",\n    ],\n    auto_headers = AutoHeaders.RECURSIVE_GLOB,\n    arch_preprocessor_flags = ROCKSDB_ARCH_PREPROCESSOR_FLAGS,\n    compiler_flags = ROCKSDB_COMPILER_FLAGS,\n    os_deps = ROCKSDB_OS_DEPS,\n    os_preprocessor_flags = ROCKSDB_OS_PREPROCESSOR_FLAGS,\n    preprocessor_flags = ROCKSDB_PREPROCESSOR_FLAGS,\n    deps = [],\n    external_deps = ROCKSDB_EXTERNAL_DEPS,\n    link_whole = False,\n)\n\ncpp_library(\n    name = \"rocksdb_whole_archive_lib\",\n    srcs = [\n        \"cache/cache.cc\",\n        \"cache/clock_cache.cc\",\n        \"cache/lru_cache.cc\",\n        \"cache/sharded_cache.cc\",\n        \"db/builder.cc\",\n        \"db/c.cc\",\n        \"db/column_family.cc\",\n        \"db/compacted_db_impl.cc\",\n        \"db/compaction.cc\",\n        \"db/compaction_iterator.cc\",\n        \"db/compaction_job.cc\",\n        \"db/compaction_picker.cc\",\n        \"db/compaction_picker_universal.cc\",\n        \"db/compaction_dispatcher.cc\",\n        \"db/convenience.cc\",\n        \"db/db_filesnapshot.cc\",\n        \"db/db_impl.cc\",\n        \"db/db_impl_compaction_flush.cc\",\n        \"db/db_impl_debug.cc\",\n        \"db/db_impl_experimental.cc\",\n        \"db/db_impl_files.cc\",\n        \"db/db_impl_open.cc\",\n        \"db/db_impl_readonly.cc\",\n        \"db/db_impl_write.cc\",\n        \"db/db_info_dumper.cc\",\n        \"db/db_iter.cc\",\n        \"db/dbformat.cc\",\n        \"db/error_handler.cc\",\n        \"db/event_helpers.cc\",\n        \"db/experimental.cc\",\n        \"db/external_sst_file_ingestion_job.cc\",\n        \"db/file_indexer.cc\",\n        \"db/flush_job.cc\",\n        \"db/flush_scheduler.cc\",\n        \"db/forward_iterator.cc\",\n        \"db/internal_stats.cc\",\n        \"db/log_reader.cc\",\n        \"db/log_writer.cc\",\n        \"db/logs_with_prep_tracker.cc\",\n        \"db/malloc_stats.cc\",\n        \"db/memtable.cc\",\n        \"db/memtable_list.cc\",\n        \"db/merge_helper.cc\",\n        \"db/merge_operator.cc\",\n        \"db/output_validator.cc\",\n        \"db/periodic_work_scheduler.cc\",\n        \"db/range_del_aggregator.cc\",\n        \"db/range_tombstone_fragmenter.cc\",\n        \"db/repair.cc\",\n        \"db/snapshot_impl.cc\",\n        \"db/table_cache.cc\",\n        \"db/table_properties_collector.cc\",\n        \"db/transaction_log_impl.cc\",\n        \"db/version_builder.cc\",\n        \"db/version_edit.cc\",\n        \"db/version_set.cc\",\n        \"db/wal_manager.cc\",\n        \"db/write_batch.cc\",\n        \"db/write_batch_base.cc\",\n        \"db/write_controller.cc\",\n        \"db/write_thread.cc\",\n        \"env/env.cc\",\n        \"env/env_chroot.cc\",\n        \"env/env_encryption.cc\",\n        \"env/env_hdfs.cc\",\n        \"env/env_posix.cc\",\n        \"env/io_posix.cc\",\n        \"env/mock_env.cc\",\n        \"memtable/alloc_tracker.cc\",\n        \"memtable/hash_cuckoo_rep.cc\",\n        \"memtable/hash_linklist_rep.cc\",\n        \"memtable/hash_skiplist_rep.cc\",\n        \"memtable/skiplistrep.cc\",\n        \"memtable/vectorrep.cc\",\n        \"memtable/write_buffer_manager.cc\",\n        \"monitoring/histogram.cc\",\n        \"monitoring/histogram_windowing.cc\",\n        \"monitoring/in_memory_stats_history.cc\",\n        \"monitoring/instrumented_mutex.cc\",\n        \"monitoring/iostats_context.cc\",\n        \"monitoring/perf_context.cc\",\n        \"monitoring/perf_level.cc\",\n        \"monitoring/persistent_stats_history.cc\",\n        \"monitoring/statistics.cc\",\n        \"monitoring/thread_status_impl.cc\",\n        \"monitoring/thread_status_updater.cc\",\n        \"monitoring/thread_status_updater_debug.cc\",\n        \"monitoring/thread_status_util.cc\",\n        \"monitoring/thread_status_util_debug.cc\",\n        \"options/cf_options.cc\",\n        \"options/db_options.cc\",\n        \"options/options.cc\",\n        \"options/options_helper.cc\",\n        \"options/options_parser.cc\",\n        \"options/options_sanity_check.cc\",\n        \"port/port_posix.cc\",\n        \"port/stack_trace.cc\",\n        \"table/adaptive_table_factory.cc\",\n        \"table/block.cc\",\n        \"table/block_based_filter_block.cc\",\n        \"table/block_based_table_builder.cc\",\n        \"table/block_based_table_factory.cc\",\n        \"table/block_based_table_reader.cc\",\n        \"table/block_builder.cc\",\n        \"table/block_fetcher.cc\",\n        \"table/block_prefix_index.cc\",\n        \"table/bloom_block.cc\",\n        \"table/cuckoo_table_builder.cc\",\n        \"table/cuckoo_table_factory.cc\",\n        \"table/cuckoo_table_reader.cc\",\n        \"table/data_block_footer.cc\",\n        \"table/data_block_hash_index.cc\",\n        \"table/flush_block_policy.cc\",\n        \"table/format.cc\",\n        \"table/full_filter_block.cc\",\n        \"table/get_context.cc\",\n        \"table/index_builder.cc\",\n        \"table/iterator.cc\",\n        \"table/merging_iterator.cc\",\n        \"table/meta_blocks.cc\",\n        \"table/partitioned_filter_block.cc\",\n        \"table/persistent_cache_helper.cc\",\n        \"table/plain_table_builder.cc\",\n        \"table/plain_table_factory.cc\",\n        \"table/plain_table_index.cc\",\n        \"table/plain_table_key_coding.cc\",\n        \"table/plain_table_reader.cc\",\n        \"table/sst_file_reader.cc\",\n        \"table/sst_file_writer.cc\",\n        \"table/table_properties.cc\",\n        \"table/table_reader.cc\",\n        \"table/two_level_iterator.cc\",\n        \"tools/dump/db_dump_tool.cc\",\n        \"tools/ldb_cmd.cc\",\n        \"tools/ldb_tool.cc\",\n        \"tools/sst_dump_tool.cc\",\n        \"util/arena.cc\",\n        \"util/auto_roll_logger.cc\",\n        \"util/bloom.cc\",\n        \"util/build_version.cc\",\n        \"util/coding.cc\",\n        \"util/compaction_job_stats_impl.cc\",\n        \"util/comparator.cc\",\n        \"util/compression_context_cache.cc\",\n        \"util/concurrent_arena.cc\",\n        \"util/crc32c.cc\",\n        \"util/delete_scheduler.cc\",\n        \"util/dynamic_bloom.cc\",\n        \"util/event_logger.cc\",\n        \"util/file_reader_writer.cc\",\n        \"util/file_util.cc\",\n        \"util/filename.cc\",\n        \"util/filter_policy.cc\",\n        \"util/hash.cc\",\n        \"util/jemalloc_nodump_allocator.cc\",\n        \"util/log_buffer.cc\",\n        \"util/murmurhash.cc\",\n        \"util/random.cc\",\n        \"util/rate_limiter.cc\",\n        \"util/slice.cc\",\n        \"util/sst_file_manager_impl.cc\",\n        \"util/status.cc\",\n        \"util/string_util.cc\",\n        \"util/sync_point.cc\",\n        \"util/sync_point_impl.cc\",\n        \"util/thread_local.cc\",\n        \"util/threadpool_imp.cc\",\n        \"util/trace_replay.cc\",\n        \"util/transaction_test_util.cc\",\n        \"util/xxhash.cc\",\n        \"utilities/backupable/backupable_db.cc\",\n        \"utilities/cassandra/cassandra_compaction_filter.cc\",\n        \"utilities/cassandra/format.cc\",\n        \"utilities/cassandra/merge_operator.cc\",\n        \"utilities/checkpoint/checkpoint_impl.cc\",\n        \"utilities/compaction_filters/remove_emptyvalue_compactionfilter.cc\",\n        \"utilities/convenience/info_log_finder.cc\",\n        \"utilities/date_tiered/date_tiered_db_impl.cc\",\n        \"utilities/debug.cc\",\n        \"utilities/document/document_db.cc\",\n        \"utilities/document/json_document.cc\",\n        \"utilities/document/json_document_builder.cc\",\n        \"utilities/env_mirror.cc\",\n        \"utilities/env_timed.cc\",\n        \"utilities/geodb/geodb_impl.cc\",\n        \"utilities/flink/flink_compaction_filter.cc\",\n        \"utilities/leveldb_options/leveldb_options.cc\",\n        \"utilities/lua/rocks_lua_compaction_filter.cc\",\n        \"utilities/memory/memory_util.cc\",\n        \"utilities/merge_operators/bytesxor.cc\",\n        \"utilities/merge_operators/max.cc\",\n        \"utilities/merge_operators/put.cc\",\n        \"utilities/merge_operators/string_append/stringappend.cc\",\n        \"utilities/merge_operators/string_append/stringappend2.cc\",\n        \"utilities/merge_operators/uint64add.cc\",\n        \"utilities/option_change_migration/option_change_migration.cc\",\n        \"utilities/options/options_util.cc\",\n        \"utilities/persistent_cache/block_cache_tier.cc\",\n        \"utilities/persistent_cache/block_cache_tier_file.cc\",\n        \"utilities/persistent_cache/block_cache_tier_metadata.cc\",\n        \"utilities/persistent_cache/persistent_cache_tier.cc\",\n        \"utilities/persistent_cache/volatile_tier_impl.cc\",\n        \"utilities/redis/redis_lists.cc\",\n        \"utilities/simulator_cache/sim_cache.cc\",\n        \"utilities/spatialdb/spatial_db.cc\",\n        \"utilities/table_properties_collectors/compact_on_deletion_collector.cc\",\n        \"utilities/trace/file_trace_reader_writer.cc\",\n        \"utilities/transactions/optimistic_transaction.cc\",\n        \"utilities/transactions/optimistic_transaction_db_impl.cc\",\n        \"utilities/transactions/pessimistic_transaction.cc\",\n        \"utilities/transactions/pessimistic_transaction_db.cc\",\n        \"utilities/transactions/snapshot_checker.cc\",\n        \"utilities/transactions/transaction_base.cc\",\n        \"utilities/transactions/transaction_db_mutex_impl.cc\",\n        \"utilities/transactions/transaction_lock_mgr.cc\",\n        \"utilities/transactions/transaction_util.cc\",\n        \"utilities/transactions/write_prepared_txn.cc\",\n        \"utilities/transactions/write_prepared_txn_db.cc\",\n        \"utilities/transactions/write_unprepared_txn.cc\",\n        \"utilities/transactions/write_unprepared_txn_db.cc\",\n        \"utilities/ttl/db_ttl_impl.cc\",\n        \"utilities/write_batch_with_index/write_batch_with_index.cc\",\n        \"utilities/write_batch_with_index/write_batch_with_index_internal.cc\",\n    ],\n    auto_headers = AutoHeaders.RECURSIVE_GLOB,\n    arch_preprocessor_flags = rocksdb_arch_preprocessor_flags,\n    compiler_flags = rocksdb_compiler_flags,\n    preprocessor_flags = rocksdb_preprocessor_flags,\n    deps = [],\n    external_deps = rocksdb_external_deps,\n)\n\ncpp_library(\n    name = \"rocksdb_test_lib\",\n    srcs = [\n        \"db/db_test_util.cc\",\n        \"table/mock_table.cc\",\n        \"test_util/mock_time_env.cc\",\n        \"test_util/testharness.cc\",\n        \"test_util/testutil.cc\",\n        \"tools/block_cache_analyzer/block_cache_trace_analyzer.cc\",\n        \"tools/trace_analyzer_tool.cc\",\n        \"util/fault_injection_test_env.cc\",\n        \"util/testharness.cc\",\n        \"util/testutil.cc\",\n        \"utilities/cassandra/test_utils.cc\",\n        \"utilities/col_buf_decoder.cc\",\n        \"utilities/col_buf_encoder.cc\",\n        \"utilities/column_aware_encoding_util.cc\",\n        \"utilities/flink/flink_compaction_filter.cc\",\n    ],\n    auto_headers = AutoHeaders.RECURSIVE_GLOB,\n    arch_preprocessor_flags = rocksdb_arch_preprocessor_flags,\n    compiler_flags = rocksdb_compiler_flags,\n    preprocessor_flags = rocksdb_preprocessor_flags,\n    deps = [\":rocksdb_lib\"],\n    external_deps = rocksdb_external_deps,\n)\n\ncpp_library(\n    name = \"rocksdb_tools_lib\",\n    srcs = [\n        \"tools/db_bench_tool.cc\",\n        \"tools/trace_analyzer_tool.cc\",\n        \"util/testutil.cc\",\n    ],\n    auto_headers = AutoHeaders.RECURSIVE_GLOB,\n    arch_preprocessor_flags = rocksdb_arch_preprocessor_flags,\n    compiler_flags = rocksdb_compiler_flags,\n    preprocessor_flags = rocksdb_preprocessor_flags,\n    deps = [\":rocksdb_lib\"],\n    external_deps = rocksdb_external_deps,\n)\n\ncpp_library(\n    name = \"env_basic_test_lib\",\n    srcs = [\"env/env_basic_test.cc\"],\n    auto_headers = AutoHeaders.RECURSIVE_GLOB,\n    arch_preprocessor_flags = rocksdb_arch_preprocessor_flags,\n    compiler_flags = rocksdb_compiler_flags,\n    preprocessor_flags = rocksdb_preprocessor_flags,\n    deps = [\":rocksdb_test_lib\"],\n    external_deps = rocksdb_external_deps,\n)\n\n# [test_name, test_src, test_type]\nROCKS_TESTS = [\n    [\n        \"arena_test\",\n        \"util/arena_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"auto_roll_logger_test\",\n        \"util/auto_roll_logger_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"autovector_test\",\n        \"util/autovector_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"backupable_db_test\",\n        \"utilities/backupable/backupable_db_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"block_based_filter_block_test\",\n        \"table/block_based_filter_block_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"block_test\",\n        \"table/block_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"bloom_test\",\n        \"util/bloom_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"c_test\",\n        \"db/c_test.c\",\n        \"serial\",\n    ],\n    [\n        \"cache_test\",\n        \"cache/cache_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cassandra_format_test\",\n        \"utilities/cassandra/cassandra_format_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cassandra_functional_test\",\n        \"utilities/cassandra/cassandra_functional_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cassandra_row_merge_test\",\n        \"utilities/cassandra/cassandra_row_merge_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cassandra_serialize_test\",\n        \"utilities/cassandra/cassandra_serialize_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"checkpoint_test\",\n        \"utilities/checkpoint/checkpoint_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cleanable_test\",\n        \"table/cleanable_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"coding_test\",\n        \"util/coding_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"column_aware_encoding_test\",\n        \"utilities/column_aware_encoding_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"column_family_test\",\n        \"db/column_family_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compact_files_test\",\n        \"db/compact_files_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compact_on_deletion_collector_test\",\n        \"utilities/table_properties_collectors/compact_on_deletion_collector_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compaction_iterator_test\",\n        \"db/compaction_iterator_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compaction_job_stats_test\",\n        \"db/compaction_job_stats_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compaction_job_test\",\n        \"db/compaction_job_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"compaction_picker_test\",\n        \"db/compaction_picker_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"comparator_db_test\",\n        \"db/comparator_db_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"corruption_test\",\n        \"db/corruption_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"crc32c_test\",\n        \"util/crc32c_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cuckoo_table_builder_test\",\n        \"table/cuckoo_table_builder_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cuckoo_table_db_test\",\n        \"db/cuckoo_table_db_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"cuckoo_table_reader_test\",\n        \"table/cuckoo_table_reader_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"data_block_hash_index_test\",\n        \"table/data_block_hash_index_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"date_tiered_test\",\n        \"utilities/date_tiered/date_tiered_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_basic_test\",\n        \"db/db_basic_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_block_cache_test\",\n        \"db/db_block_cache_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_bloom_filter_test\",\n        \"db/db_bloom_filter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_compaction_filter_test\",\n        \"db/db_compaction_filter_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_compaction_test\",\n        \"db/db_compaction_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_dynamic_level_test\",\n        \"db/db_dynamic_level_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_encryption_test\",\n        \"db/db_encryption_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_flush_test\",\n        \"db/db_flush_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_inplace_update_test\",\n        \"db/db_inplace_update_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_io_failure_test\",\n        \"db/db_io_failure_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_iter_stress_test\",\n        \"db/db_iter_stress_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_iter_test\",\n        \"db/db_iter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_iterator_test\",\n        \"db/db_iterator_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_log_iter_test\",\n        \"db/db_log_iter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_memtable_test\",\n        \"db/db_memtable_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_merge_operator_test\",\n        \"db/db_merge_operator_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_options_test\",\n        \"db/db_options_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_properties_test\",\n        \"db/db_properties_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_range_del_test\",\n        \"db/db_range_del_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_sst_test\",\n        \"db/db_sst_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_statistics_test\",\n        \"db/db_statistics_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_table_properties_test\",\n        \"db/db_table_properties_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_tailing_iter_test\",\n        \"db/db_tailing_iter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_test\",\n        \"db/db_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_test2\",\n        \"db/db_test2.cc\",\n        \"serial\",\n    ],\n    [\n        \"db_universal_compaction_test\",\n        \"db/db_universal_compaction_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_wal_test\",\n        \"db/db_wal_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"db_write_test\",\n        \"db/db_write_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"dbformat_test\",\n        \"db/dbformat_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"delete_scheduler_test\",\n        \"util/delete_scheduler_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"deletefile_test\",\n        \"db/deletefile_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"document_db_test\",\n        \"utilities/document/document_db_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"dynamic_bloom_test\",\n        \"util/dynamic_bloom_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"env_basic_test\",\n        \"env/env_basic_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"env_test\",\n        \"env/env_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"env_timed_test\",\n        \"utilities/env_timed_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"error_handler_test\",\n        \"db/error_handler_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"event_logger_test\",\n        \"util/event_logger_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"external_sst_file_basic_test\",\n        \"db/external_sst_file_basic_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"external_sst_file_test\",\n        \"db/external_sst_file_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"fault_injection_test\",\n        \"db/fault_injection_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"file_indexer_test\",\n        \"db/file_indexer_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"file_reader_writer_test\",\n        \"util/file_reader_writer_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"filelock_test\",\n        \"util/filelock_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"filename_test\",\n        \"db/filename_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"flink_compaction_filter_test\",\n        \"utilities/flink/flink_compaction_filter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"flush_job_test\",\n        \"db/flush_job_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"full_filter_block_test\",\n        \"table/full_filter_block_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"geodb_test\",\n        \"utilities/geodb/geodb_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"hash_table_test\",\n        \"utilities/persistent_cache/hash_table_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"hash_test\",\n        \"util/hash_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"heap_test\",\n        \"util/heap_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"histogram_test\",\n        \"monitoring/histogram_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"inlineskiplist_test\",\n        \"memtable/inlineskiplist_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"iostats_context_test\",\n        \"monitoring/iostats_context_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"json_document_test\",\n        \"utilities/document/json_document_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"ldb_cmd_test\",\n        \"tools/ldb_cmd_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"listener_test\",\n        \"db/listener_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"log_test\",\n        \"db/log_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"lru_cache_test\",\n        \"cache/lru_cache_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"manual_compaction_test\",\n        \"db/manual_compaction_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"memory_test\",\n        \"utilities/memory/memory_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"memtable_list_test\",\n        \"db/memtable_list_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"merge_helper_test\",\n        \"db/merge_helper_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"merge_test\",\n        \"db/merge_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"merger_test\",\n        \"table/merger_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"mock_env_test\",\n        \"env/mock_env_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"object_registry_test\",\n        \"utilities/object_registry_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"obsolete_files_test\",\n        \"db/obsolete_files_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"optimistic_transaction_test\",\n        \"utilities/transactions/optimistic_transaction_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"option_change_migration_test\",\n        \"utilities/option_change_migration/option_change_migration_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"options_file_test\",\n        \"db/options_file_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"options_settable_test\",\n        \"options/options_settable_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"options_test\",\n        \"options/options_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"options_util_test\",\n        \"utilities/options/options_util_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"partitioned_filter_block_test\",\n        \"table/partitioned_filter_block_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"perf_context_test\",\n        \"db/perf_context_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"periodic_work_scheduler_test\",\n        \"db/periodic_work_scheduler_test.cc\",\n        \"serial\",\n        [],\n        [],\n    ],\n    [\n        \"persistent_cache_test\",\n        \"utilities/persistent_cache/persistent_cache_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"plain_table_db_test\",\n        \"db/plain_table_db_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"prefix_test\",\n        \"db/prefix_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"range_del_aggregator_test\",\n        \"db/range_del_aggregator_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"range_tombstone_fragmenter_test\",\n        \"db/range_tombstone_fragmenter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"rate_limiter_test\",\n        \"util/rate_limiter_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"reduce_levels_test\",\n        \"tools/reduce_levels_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"repair_test\",\n        \"db/repair_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"repeatable_thread_test\",\n        \"util/repeatable_thread_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"sim_cache_test\",\n        \"utilities/simulator_cache/sim_cache_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"skiplist_test\",\n        \"memtable/skiplist_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"slice_transform_test\",\n        \"util/slice_transform_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"spatial_db_test\",\n        \"utilities/spatialdb/spatial_db_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"sst_dump_test\",\n        \"tools/sst_dump_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"sst_file_reader_test\",\n        \"table/sst_file_reader_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"statistics_test\",\n        \"monitoring/statistics_test.cc\",\n        \"serial\",\n        [],\n        [],\n    ],\n    [\n        \"stringappend_test\",\n        \"utilities/merge_operators/string_append/stringappend_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"table_properties_collector_test\",\n        \"db/table_properties_collector_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"table_test\",\n        \"table/table_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"thread_list_test\",\n        \"util/thread_list_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"thread_local_test\",\n        \"util/thread_local_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"timer_queue_test\",\n        \"util/timer_queue_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"timer_test\",\n        \"util/timer_test.cc\",\n        \"serial\",\n        [],\n        [],\n    ],\n    [\n        \"trace_analyzer_test\",\n        \"tools/trace_analyzer_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"transaction_test\",\n        \"utilities/transactions/transaction_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"ttl_test\",\n        \"utilities/ttl/ttl_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"util_merge_operators_test\",\n        \"utilities/util_merge_operators_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"version_builder_test\",\n        \"db/version_builder_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"version_edit_test\",\n        \"db/version_edit_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"version_set_test\",\n        \"db/version_set_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"wal_manager_test\",\n        \"db/wal_manager_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_batch_test\",\n        \"db/write_batch_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_batch_with_index_test\",\n        \"utilities/write_batch_with_index/write_batch_with_index_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_buffer_manager_test\",\n        \"memtable/write_buffer_manager_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_callback_test\",\n        \"db/write_callback_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_controller_test\",\n        \"db/write_controller_test.cc\",\n        \"serial\",\n    ],\n    [\n        \"write_prepared_transaction_test\",\n        \"utilities/transactions/write_prepared_transaction_test.cc\",\n        \"parallel\",\n    ],\n    [\n        \"write_unprepared_transaction_test\",\n        \"utilities/transactions/write_unprepared_transaction_test.cc\",\n        \"parallel\",\n    ],\n]\n\n# Generate a test rule for each entry in ROCKS_TESTS\n# Do not build the tests in opt mode, since SyncPoint and other test code\n# will not be included.\nif not is_opt_mode:\n    for test_cfg in ROCKS_TESTS:\n        test_name = test_cfg[0]\n        test_cc = test_cfg[1]\n        ttype = \"gtest\" if test_cfg[2] == \"parallel\" else \"simple\"\n        test_bin = test_name + \"_bin\"\n\n        cpp_binary(\n            name = test_bin,\n            srcs = [test_cc],\n            arch_preprocessor_flags = rocksdb_arch_preprocessor_flags,\n            compiler_flags = rocksdb_compiler_flags,\n            preprocessor_flags = rocksdb_preprocessor_flags,\n            deps = [\":rocksdb_test_lib\"],\n            external_deps = rocksdb_external_deps,\n        )\n\n        custom_unittest(\n            name = test_name,\n            command = [TEST_RUNNER, BUCK_BINS + test_bin],\n            type = ttype,\n            deps = [\":\" + test_bin],\n        )\n"
        },
        {
          "name": "USERS.md",
          "type": "blob",
          "size": 5.6181640625,
          "content": "This document lists users of RocksDB and their use cases. If you are using RocksDB, please open a pull request and add yourself to the list.\n## Facebook\nAt Facebook, we use RocksDB as storage engines in multiple data management services and a backend for many different stateful services, including:\n\n1. MyRocks -- https://github.com/MySQLOnRocksDB/mysql-5.6\n2. MongoRocks -- https://github.com/mongodb-partners/mongo-rocks\n3. ZippyDB --  Facebook's distributed key-value store with Paxos-style replication, built on top of RocksDB.[1] https://www.youtube.com/watch?v=DfiN7pG0D0khtt\n4. Laser -- Laser is a high query throughput, low (millisecond) latency, key-value storage service built on top of RocksDB.[1]\n4. Dragon -- a distributed graph query engine. https://code.facebook.com/posts/1737605303120405/dragon-a-distributed-graph-query-engine/\n5. Stylus -- a low-level stream processing framework writtenin C++.[1]\n6. LogDevice -- a distributed data store for logs [2]\n\n[1] https://research.facebook.com/publications/realtime-data-processing-at-facebook/\n\n[2] https://code.facebook.com/posts/357056558062811/logdevice-a-distributed-data-store-for-logs/\n\n## LinkedIn\nTwo different use cases at Linkedin are using RocksDB as a storage engine:\n\n1. LinkedIn's follow feed for storing user's activities. Check out the blog post: https://engineering.linkedin.com/blog/2016/03/followfeed--linkedin-s-feed-made-faster-and-smarter\n2. Apache Samza, open source framework for stream processing\n\nLearn more about those use cases in a Tech Talk by Ankit Gupta and Naveen Somasundaram: http://www.youtube.com/watch?v=plqVp_OnSzg\n\n## Yahoo\nYahoo is using RocksDB as a storage engine for their biggest distributed data store Sherpa. Learn more about it here: http://yahooeng.tumblr.com/post/120730204806/sherpa-scales-new-heights\n\n## CockroachDB\nCockroachDB is an open-source geo-replicated transactional database. They are using RocksDB as their storage engine. Check out their github: https://github.com/cockroachdb/cockroach\n\n## DNANexus\nDNANexus is using RocksDB to speed up processing of genomics data.\nYou can learn more from this great blog post by Mike Lin: http://devblog.dnanexus.com/faster-bam-sorting-with-samtools-and-rocksdb/\n\n## Iron.io\nIron.io is using RocksDB as a storage engine for their distributed queueing system.\nLearn more from Tech Talk by Reed Allman: http://www.youtube.com/watch?v=HTjt6oj-RL4\n\n## Tango Me\nTango is using RocksDB as a graph storage to store all users' connection data and other social activity data.\n\n## Turn\nTurn is using RocksDB as a storage layer for their key/value store, serving at peak 2.4MM QPS out of different datacenters.\nCheck out our RocksDB Protobuf merge operator at: https://github.com/vladb38/rocksdb_protobuf\n\n## Santanader UK/Cloudera Profession Services\nCheck out their blog post: http://blog.cloudera.com/blog/2015/08/inside-santanders-near-real-time-data-ingest-architecture/\n\n## Airbnb\nAirbnb is using RocksDB as a storage engine for their personalized search service. You can learn more about it here: https://www.youtube.com/watch?v=ASQ6XMtogMs\n\n## Pinterest\nPinterest's Object Retrieval System uses RocksDB for storage: https://www.youtube.com/watch?v=MtFEVEs_2Vo\n\n## Smyte\n[Smyte](https://www.smyte.com/) uses RocksDB as the storage layer for their core key-value storage, high-performance counters and time-windowed HyperLogLog services.\n\n## Rakuten Marketing\n[Rakuten Marketing](https://marketing.rakuten.com/) uses RocksDB as the disk cache layer for the real-time bidding service in their Performance DSP.\n\n## VWO, Wingify\n[VWO's](https://vwo.com/) Smart Code checker and URL helper uses RocksDB to store all the URLs where VWO's Smart Code is installed.\n\n## quasardb\n[quasardb](https://www.quasardb.net) is a high-performance, distributed, transactional key-value database that integrates well with in-memory analytics engines such as Apache Spark. \nquasardb uses a heavily tuned RocksDB as its persistence layer.\n\n## Netflix\n[Netflix](http://techblog.netflix.com/2016/05/application-data-caching-using-ssds.html) Netflix uses RocksDB on AWS EC2 instances with local SSD drives to cache application data.\n\n## TiKV\n[TiKV](https://github.com/pingcap/tikv) is a GEO-replicated, high-performance, distributed, transactional key-value database. TiKV is powered by Rust and Raft. TiKV uses RocksDB as its persistence layer.\n\n## Apache Flink\n[Apache Flink](https://flink.apache.org/news/2016/03/08/release-1.0.0.html) uses RocksDB to store state locally on a machine.\n\n## Dgraph\n[Dgraph](https://github.com/dgraph-io/dgraph) is an open-source, scalable, distributed, low latency, high throughput Graph database .They use RocksDB to store state locally on a machine.\n\n## Uber\n[Uber](http://eng.uber.com/cherami/) uses RocksDB as a durable and scalable task queue.\n\n## 360 Pika\n[360](http://www.360.cn/) [Pika](https://github.com/Qihoo360/pika) is a nosql compatible with redis. With the huge amount of data stored, redis may suffer for a capacity bottleneck, and pika was born for solving it. It has widely been widely used in many company\n\n## LzLabs\nLzLabs is using RocksDB as a storage engine in their multi-database distributed framework to store application configuration and user data.\n\n## ProfaneDB\n[ProfaneDB](https://profanedb.gitlab.io/) is a database for Protocol Buffers, and uses RocksDB for storage. It is accessible via gRPC, and the schema is defined using directly `.proto` files.\n\n## IOTA Foundation\n [IOTA Foundation](https://www.iota.org/) is using RocksDB in the [IOTA Reference Implementation (IRI)](https://github.com/iotaledger/iri) to store the local state of the Tangle. The Tangle is the first open-source distributed ledger powering the future of the Internet of Things.\n"
        },
        {
          "name": "bench.py",
          "type": "blob",
          "size": 6.521484375,
          "content": "#!/usr/bin/python\n#\n# Copyright (c) 2020-present, Bytedance Inc.  All rights reserved.\n# This source code is licensed under Apache 2.0 License.\n#\n# Usage:\n#       ./bench.py $PWD/data 20 10 24,2000 readrandomwriterandom,10\n#\n#       ./bench.py $PWD/data 20 10 24,2000 readrandomwriterandom,90\n#\nimport time\nimport io\nimport os\nimport subprocess\nimport sys\nimport requests\nfrom datetime import datetime\n\n# default values\nKV_SIZE = \"24, 500\"\nKSIZE = 24  # key size form KV_SIZE\nVSIZE = 500 # value size from KV_SIZE\nGB_PER_THREAD = 20\nTOTAL_MEM_IN_GB = 64\nTHREADS = 16\nDB_DIR = \"\"\nBENCH_TYPE = \"fillseq\"\nBENCH_ARGS = []\nZBD_PATH = \"\"\n\n# collected result log\nLOG_RESULT_FNAME = \"log.txt\"\n# bench rocksdb output\nLOG_BENCH_OUTPUT_FNAME = \"output.txt\"\n\nBENCH_ENGINES = {'terarkdb':'./output/db_bench'}\n\ndef bench(records, key_size, value_size, engine, db_dir, exist_db):\n    extra_flags = ''\n    if engine == 'terarkdb':\n        extra_flags = \"\"\"\n                         --use_terark_table=false\n                         --blob_size=128\n                      \"\"\"\n    if BENCH_TYPE == 'readrandomwriterandom':\n        extra_flags += \"\"\"\n                         --readwritepercent=%s\n                       \"\"\" % BENCH_ARGS[0]\n    if ZBD_PATH != '':\n        extra_flags += \"\"\"\n                         --zbd_path=%s\n                       \"\"\" % ZBD_PATH\n    cmd = \"\"\"\n           {db_bench} \\\n           --benchmarks={bench_type}\n\t   --use_existing_db={exist_db}\n           --sync=1\n\t   --db={db_dir}\n\t   --wal_dir={db_dir}\n\t   --bytes_per_sync=65536\n           --wal_bytes_per_sync=65536\n           --num={records}\n           --threads={threads}\n\t   --num_levels=6\n           --delayed_write_rate=209715200\n\t   --key_size={key_size}\n\t   --value_size={value_size}\n\t   --cache_numshardbits=6\n\t   --level_compaction_dynamic_level_bytes=true\n\t   --cache_index_and_filter_blocks=1\n\t   --pin_l0_filter_and_index_blocks_in_cache=0\n\t   --benchmark_write_rate_limit=0\n\t   --hard_rate_limit=3\n\t   --rate_limit_delay_max_milliseconds=1000000\n\t   --write_buffer_size=268435456\n\t   --max_write_buffer_number=6\n\t   --target_file_size_base=134217728\n\t   --max_bytes_for_level_base=536870912\n\t   --verify_checksum=1\n\t   --delete_obsolete_files_period_micros=62914560\n\t   --max_bytes_for_level_multiplier=10\n\t   --statistics=0\n\t   --stats_per_interval=1\n\t   --stats_interval_seconds=60\n\t   --histogram=1\n\t   --open_files=-1\n\t   --level0_file_num_compaction_trigger=4\n\t   --level0_slowdown_writes_trigger=1000\n\t   --level0_stop_writes_trigger=1000\n           --num_high_pri_threads=3\n           --num_low_pri_threads=10\n           --mmap_read=true\n           --compression_type=none\n           --memtablerep=skip_list\n           {extra_flags}\n           \"\"\".format(records=records, \n                      key_size=key_size,\n                      value_size=value_size, \n                      db_dir=db_dir, \n                      bench_type=BENCH_TYPE,\n                      exist_db=exist_db,\n                      threads=THREADS,\n                      db_bench=BENCH_ENGINES[engine],\n                      extra_flags=extra_flags)\n\n    cmd = cmd.replace('\\n',' ')\n    log = open(LOG_BENCH_OUTPUT_FNAME, 'wb')\n    log.write(cmd)\n    log.flush()\n    process = subprocess.Popen(cmd,\n                               stdin=subprocess.PIPE,\n                               stderr=log, \n                               stdout=log, \n                               shell=True)\n    process.communicate()\n    log.flush()\n    log.close()\n    print 'test finished: %s\\n' % LOG_BENCH_OUTPUT_FNAME\n\n\ndef run(engine, db_dir):\n    db_size_bytes = int(GB_PER_THREAD) * 1024 * 1024 * 1024\n    records = db_size_bytes / (KSIZE + VSIZE)\n    bench(records, KSIZE, VSIZE, engine, db_dir, 0)\n\n\ndef gather_result(engine):\n    rst = {}\n    for bench_type in [BENCH_TYPE]:\n        rst[bench_type] = {}\n        \n        rst[bench_type] = {}\n\n        with open(LOG_BENCH_OUTPUT_FNAME, 'rb') as f:\n            lines = f.readlines()\n            i = 0\n            while i < len(lines):\n                # get ops\n                s = '%s' % bench_type\n                if lines[i].find(s) == 0:\n                    rst[bench_type]['ops'] = lines[i].split()[4]\n\n                # get rest of them\n                s = 'Microseconds per '\n                if lines[i].find(s) >= 0:\n                    ops_type = lines[i][17:-2]\n                    rst[bench_type][ops_type] = {}\n                    rst[bench_type][ops_type]['max'] = lines[i+2].split()[5]\n                    rst[bench_type][ops_type]['percentiles'] = lines[i+3][13:-2]\n                    i = i + 5\n                else:\n                    i = i + 1\n\n    # print rst\n    output = [('benchmark', 'kv bytes', 'ops', 'operation', 'max lat(us)', 'pct(us)')]\n    for bench in rst:\n            for t in ['read', 'write']:\n                if rst[bench].has_key(t):\n                    output.append( (bench, KV_SIZE, rst[bench]['ops'], t, rst[bench][t]['max'], rst[bench][t]['percentiles']) )\n\n    with open(LOG_RESULT_FNAME, 'a') as f:\n        for row in output:\n            f.write('{0:<25} {1:<15} {2:<15} {3:<15} {4:<15} {5:<100}\\n'.format(*row))\n\nif __name__=='__main__':\n    if not os.path.isfile(BENCH_ENGINES['terarkdb']):\n        print 'db_bench not found, please check: %s', BENCH_ENGINES\n        sys.exit()\n\n    if len(sys.argv) != 6:\n        print 'usage: ./bench.py [DB_DIR] [GB_PER_THREAD] [THREADS] [KV_SIZE] [BENCH_STR]\\n'\n        print '\\t\\tKV_SIZE: 24,500 means key size is 24, value size is 500'\n        print '\\t\\tBENCH_STR: fillseq or readrandomwriterandom,90, the later one means 90% reads'\n        sys.exit()\n\n    DB_DIR = sys.argv[1]\n    GB_PER_THREAD = sys.argv[2]\n    THREADS = sys.argv[3]\n    KV_SIZE = sys.argv[4]\n    KSIZE, VSIZE = [int(i) for i in KV_SIZE.split(',')]\n\n    BENCH_STR = sys.argv[5].split(\",\")\n    BENCH_TYPE = BENCH_STR[0]\n    BENCH_ARGS = BENCH_STR[1:]\n    print 'bench_type = %s, bench_args = %s' % (BENCH_TYPE, BENCH_ARGS)\n\n    LOG_RESULT_FNAME = 'rst_%s_gb_%s_thds.txt' % (GB_PER_THREAD, THREADS)\n\n    for engine in ['terarkdb']:\n        LOG_BENCH_OUTPUT_FNAME = \"output_%s_%s_%s_%s.txt\" % (engine, BENCH_TYPE, KSIZE, VSIZE)\n\n        db_dir = '%s_%s' %  (DB_DIR, engine)\n        print 'start engine : %s, db_dir = %s' % (engine, db_dir)\n\n        with open(LOG_RESULT_FNAME, 'a') as f:\n            f.write('[%s] GB_PER_THREAD: %s, THREADS = %s, KV_SIZE = %s, BENCH_STR = %s, DATA_DIR = %s\\n' % (datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\"), GB_PER_THREAD, THREADS, KV_SIZE, BENCH_STR, db_dir) )\n\n        run(engine, db_dir)\n        gather_result(engine)\n\n        with open(LOG_RESULT_FNAME, 'a') as f:\n            f.write('\\n\\n')\n"
        },
        {
          "name": "buckifier",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 1.3115234375,
          "content": "#!/bin/bash\n#\n# WITH_TESTS=ON WITH_ZNS=OFF [METRICS_PATH=...] ./build.sh\n#\nset -e\n\ngit submodule update --init --recursive\n\nBASE=$PWD\nOUTPUT=build\nWITH_BYTEDANCE_METRICS=OFF\n\nif [ -z \"$WITH_TESTS\" ] || [ -z \"${WITH_ZNS}\" ]; then\n  echo \"usage: WITH_TESTS=OFF WITH_ZNS=OFF ./build.sh\"\n  exit\nfi\n\nif [ -z \"$METRICS_PATH\" ]; then\n  echo \"build without bytedance metrics reporter\"\nelse\n  WITH_BYTEDANCE_METRICS=ON\nfi\n\nif [ \"$WITH_TESTS\" == \"ON\" ]; then\n  BUILD_TYPE=Debug\n  echo \"You are building TerarkDB with tests, so debug mode is enabled\"\nelse\n  BUILD_TYPE=RelWithDebInfo\nfi\n\nif test -n \"$BUILD_BRANCH\"; then\n  # this script is run in SCM auto build\n  git checkout \"$BUILD_BRANCH\"\n  sudo apt-get update\n  sudo apt-get install libaio-dev -y\nelse\n  echo \"libaio is required, please make sure you have it!\"\nfi\n\necho \"build = $BUILD_TYPE, with_tests = $WITH_TESTS, with_zns = $WITH_ZNS\"\n\nrm -rf $OUTPUT && mkdir -p $OUTPUT\ncd $BASE/$OUTPUT && cmake ../ \\\n  -DCMAKE_INSTALL_PREFIX=$OUTPUT \\\n  -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n  -DWITH_TESTS=$WITH_TESTS \\\n  -DWITH_ZENFS=$WITH_ZNS \\\n  -DBYTEDANCE_METRICS_PATH=$METRICS_PATH \\\n  -DWITH_BYTEDANCE_METRICS=$WITH_BYTEDANCE_METRICS \\\n  -DWITH_TOOLS=ON \\\n  -DWITH_TERARK_ZIP=OFF $@\n\n# compatibility with macOS\nNPROC=$(nproc || sysctl -n hw.logicalcpu)\n\ncd $BASE/$OUTPUT && make -j $NPROC && make install\n"
        },
        {
          "name": "build_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage.sh",
          "type": "blob",
          "size": 0.4970703125,
          "content": "#!/bin/sh\n\nBASE=$PWD\nGCC_VERSION=`gcc -dumpversion | awk -F '.' '{print $1}')`\nmkdir -p build\n\n# build\ncd $BASE/build && cmake ../ -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_TESTS=ON -DWITH_TOOLS=OFF -DWITH_COVERAGE=ON\n\ncd $BASE/build && make -j $(nproc)\n\n# run tests\ncd $BASE/build && ctest -j 20\n\n# collect result\ncd $BASE/build && lcov --gcov-tool /usr/bin/gcov-$GCC_VERSION --directory . --capture --output-file lcov_output.info\n\ncd $BASE/build && genhtml lcov_output.info --output=cov_html\n\n# print result\n"
        },
        {
          "name": "db",
          "type": "tree",
          "content": null
        },
        {
          "name": "db_bench_zns.sh",
          "type": "blob",
          "size": 1.6650390625,
          "content": "#!/bin/bash\n\n\nif [ \"$#\" -ne 1 ]; then\n  echo \"Usage: ./db_bench_zns.sh [zns_device, e.g. nvme7n2]\"\n  exit 1 \nfi\n\nDEVICE=$1\nOUTPUT=build\n\nrm -rf /tmp/zenfs_$DEVICE*\n./$OUTPUT/zenfs mkfs --zbd=$DEVICE --aux_path=/tmp/zenfs_$DEVICE --force=true\n\n./$OUTPUT/db_bench \\\n    --zbd_path=$DEVICE \\\n    --benchmarks=fillrandom \\\n    --readwritepercent=90 \\\n    --use_existing_db=0 \\\n    --histogram=1 \\\n    --statistics=0 \\\n    --stats_per_interval=1 \\\n    --stats_interval_seconds=60 \\\n    --max_background_flushes=3 \\\n    --max_background_compactions=5 \\\n    --enable_lazy_compaction=0 \\\n    --level0_file_num_compaction_trigger=4 \\\n    --sync=1 \\\n    --allow_concurrent_memtable_write=1 \\\n    --bytes_per_sync=32768 \\\n    --wal_bytes_per_sync=32768 \\\n    --delayed_write_rate=419430400 \\\n    --enable_write_thread_adaptive_yield=1 \\\n    --threads=16 \\\n    --num_levels=7 \\\n    --key_size=36 \\\n    --value_size=16000 \\\n    --level_compaction_dynamic_level_bytes=true \\\n    --mmap_read=false \\\n    --compression_type=zstd \\\n    --memtablerep=skip_list \\\n    --use_terark_table=false \\\n    --blob_size=1024 \\\n    --blob_gc_ratio=0.0625 \\\n    --write_buffer_size=268435456 \\\n    --max_write_buffer_number=20 \\\n    --target_file_size_base=134217728 \\\n    --target_blob_file_size=134217728 \\\n    --blob_file_defragment_size=33554432 \\\n    --max_dependence_blob_overlap=128 \\\n    --optimize_filters_for_hits=true \\\n    --optimize_range_deletion=true \\\n    --num=60000000 \\\n    --db=test_kuankuan \\\n    --benchmark_write_rate_limit=100000000 \\\n    --prepare_log_writer_num=0 \\\n    --use_direct_io_for_flush_and_compaction=1 \\\n    --zenfs_low_gc_ratio=0.3 \\\n    --zenfs_high_gc_ratio=0.6 \\\n    --zenfs_force_gc_ratio=0.9\n"
        },
        {
          "name": "deprecated",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "env",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "hdfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.1298828125,
          "content": "## [BUG]\n### Expected behavior\n\n### Actual behavior\n\n### Steps to reproduce the behavior\n\n## [Enhancement]\n### Problem\n\n### Solution\n"
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "memtable",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "options",
          "type": "tree",
          "content": null
        },
        {
          "name": "port",
          "type": "tree",
          "content": null
        },
        {
          "name": "src.mk",
          "type": "blob",
          "size": 32.9619140625,
          "content": "# These are the sources from which librocksdb.a is built:\nLIB_SOURCES =                                                   \\\n  cache/clock_cache.cc                                          \\\n  cache/lirs_cache.cc                                           \\\n  cache/lru_cache.cc                                            \\\n  cache/sharded_cache.cc                                        \\\n  db/builder.cc                                                 \\\n  db/c.cc                                                       \\\n  db/column_family.cc                                           \\\n  db/compacted_db_impl.cc                                       \\\n  db/compaction.cc                                              \\\n  db/compaction_iterator.cc                                     \\\n  db/compaction_job.cc                                          \\\n  db/compaction_picker.cc                                       \\\n  db/compaction_picker_universal.cc                             \\\n  db/compaction_dispatcher.cc                                   \\\n  db/convenience.cc                                             \\\n  db/db_filesnapshot.cc                                         \\\n  db/db_impl.cc                                                 \\\n  db/db_impl_compaction_flush.cc                                \\\n  db/db_impl_debug.cc                                           \\\n  db/db_impl_experimental.cc                                    \\\n  db/db_impl_files.cc                                           \\\n  db/db_impl_open.cc                                            \\\n  db/db_impl_readonly.cc                                        \\\n  db/db_impl_write.cc                                           \\\n  db/db_info_dumper.cc                                          \\\n  db/db_iter.cc                                                 \\\n  db/dbformat.cc                                                \\\n  db/error_handler.cc                                           \\\n  db/event_helpers.cc                                           \\\n  db/experimental.cc                                            \\\n  db/external_sst_file_ingestion_job.cc                         \\\n  db/file_indexer.cc                                            \\\n  db/flush_job.cc                                               \\\n  db/flush_scheduler.cc                                         \\\n  db/forward_iterator.cc                                        \\\n  db/internal_stats.cc                                          \\\n  db/logs_with_prep_tracker.cc                                  \\\n  db/log_reader.cc                                              \\\n  db/log_writer.cc                                              \\\n  db/malloc_stats.cc                                            \\\n  db/map_builder.cc                                             \\\n  db/memtable.cc                                                \\\n  db/memtablerep.cc                                             \\\n  db/memtable_list.cc                                           \\\n  db/merge_helper.cc                                            \\\n  db/merge_operator.cc                                          \\\n  db/periodic_work_scheduler.cc                                 \\\n  db/range_del_aggregator.cc                                    \\\n  db/range_tombstone_fragmenter.cc                              \\\n  db/repair.cc                                                  \\\n  db/snapshot_impl.cc                                           \\\n  db/table_cache.cc                                             \\\n  db/table_properties_collector.cc                              \\\n  db/transaction_log_impl.cc                                    \\\n  db/version_builder.cc                                         \\\n  db/version_edit.cc                                            \\\n  db/version_set.cc                                             \\\n  db/wal_manager.cc                                             \\\n  db/write_batch.cc                                             \\\n  db/write_batch_base.cc                                        \\\n  db/write_controller.cc                                        \\\n  db/write_thread.cc                                            \\\n  env/env.cc                                                    \\\n  env/env_chroot.cc                                             \\\n  env/env_encryption.cc                                         \\\n  env/env_hdfs.cc                                               \\\n  env/env_io_prof.cc                                            \\\n  env/env_posix.cc                                              \\\n  env/io_posix.cc                                               \\\n  env/mock_env.cc                                               \\\n  memtable/alloc_tracker.cc                                     \\\n  memtable/concurrent_hashduallist_rep.cc                       \\\n  memtable/hash_cuckoo_rep.cc                                   \\\n  memtable/hash_linklist_rep.cc                                 \\\n  memtable/hash_skiplist_rep.cc                                 \\\n  memtable/skiplistrep.cc                                       \\\n  memtable/terark_zip_entry_index.cc                            \\\n  memtable/terark_zip_memtable.cc                               \\\n  memtable/vectorrep.cc                                         \\\n  memtable/write_buffer_manager.cc                              \\\n  monitoring/histogram.cc                                       \\\n  monitoring/histogram_windowing.cc                             \\\n  monitoring/in_memory_stats_history.cc                         \\\n  monitoring/instrumented_mutex.cc                              \\\n  monitoring/iostats_context.cc                                 \\\n  monitoring/perf_context.cc                                    \\\n  monitoring/perf_level.cc                                      \\\n  monitoring/persistent_stats_history.cc                        \\\n  monitoring/statistics.cc                                      \\\n  monitoring/thread_status_impl.cc                              \\\n  monitoring/thread_status_updater.cc                           \\\n  monitoring/thread_status_updater_debug.cc                     \\\n  monitoring/thread_status_util.cc                              \\\n  monitoring/thread_status_util_debug.cc                        \\\n  options/cf_options.cc                                         \\\n  options/db_options.cc                                         \\\n  options/options.cc                                            \\\n  options/options_helper.cc                                     \\\n  options/options_parser.cc                                     \\\n  options/options_sanity_check.cc                               \\\n  port/port_posix.cc                                            \\\n  port/stack_trace.cc                                           \\\n  table/adaptive_table_factory.cc                               \\\n  table/block.cc                                                \\\n  table/block_based_filter_block.cc                             \\\n  table/block_based_table_builder.cc                            \\\n  table/block_based_table_factory.cc                            \\\n  table/block_based_table_reader.cc                             \\\n  table/terark_zip_config.cc                                    \\\n  table/terark_zip_table_builder.cc                             \\\n  table/terark_zip_table_reader.cc                              \\\n  table/terark_zip_table.cc                                     \\\n  table/block_builder.cc                                        \\\n  table/block_fetcher.cc                                        \\\n  table/block_prefix_index.cc                                   \\\n  table/bloom_block.cc                                          \\\n  table/cuckoo_table_builder.cc                                 \\\n  table/cuckoo_table_factory.cc                                 \\\n  table/cuckoo_table_reader.cc                                  \\\n  table/data_block_hash_index.cc                                \\\n  table/data_block_footer.cc                                    \\\n  table/flush_block_policy.cc                                   \\\n  table/format.cc                                               \\\n  table/full_filter_block.cc                                    \\\n  table/get_context.cc                                          \\\n  table/index_builder.cc                                        \\\n  table/iterator.cc                                             \\\n  table/merging_iterator.cc                                     \\\n  table/meta_blocks.cc                                          \\\n  table/partitioned_filter_block.cc                             \\\n  table/persistent_cache_helper.cc                              \\\n  table/plain_table_builder.cc                                  \\\n  table/plain_table_factory.cc                                  \\\n  table/plain_table_index.cc                                    \\\n  table/plain_table_key_coding.cc                               \\\n  table/plain_table_reader.cc                                   \\\n  table/sst_file_reader.cc                                      \\\n  table/sst_file_writer.cc                                      \\\n  table/table_properties.cc                                     \\\n  table/table_reader.cc                                         \\\n  table/terark_zip_common.cc                                    \\\n  table/terark_zip_config.cc                                    \\\n  table/terark_zip_table_builder.cc                             \\\n  table/terark_zip_table_reader.cc                              \\\n  table/terark_zip_table.cc                                     \\\n  table/two_level_iterator.cc                                   \\\n  tools/dump/db_dump_tool.cc                                    \\\n  util/arena.cc                                                 \\\n  util/auto_roll_logger.cc                                      \\\n  util/bloom.cc                                                 \\\n  util/build_version.cc                                         \\\n  util/coding.cc                                                \\\n  util/compaction_job_stats_impl.cc                             \\\n  util/comparator.cc                                            \\\n  util/compression_context_cache.cc                             \\\n  util/concurrent_arena.cc                                      \\\n  util/crc32c.cc                                                \\\n  util/delete_scheduler.cc                                      \\\n  util/dynamic_bloom.cc                                         \\\n  util/event_logger.cc                                          \\\n  util/file_reader_writer.cc                                    \\\n  util/file_util.cc                                             \\\n  util/filename.cc                                              \\\n  util/filter_policy.cc                                         \\\n  util/hash.cc                                                  \\\n  util/iterator_cache.cc                                        \\\n  util/jemalloc_nodump_allocator.cc                             \\\n  util/lazy_buffer.cc                                           \\\n  util/log_buffer.cc                                            \\\n  util/murmurhash.cc                                            \\\n  util/random.cc                                                \\\n  util/rate_limiter.cc                                          \\\n  util/slice.cc                                                 \\\n  util/sst_file_manager_impl.cc                                 \\\n  util/status.cc                                                \\\n  util/string_util.cc                                           \\\n  util/sync_point.cc                                            \\\n  util/sync_point_impl.cc                                       \\\n  util/thread_local.cc                                          \\\n  util/threadpool_imp.cc                                        \\\n  util/trace_replay.cc                                          \\\n  util/transaction_test_util.cc                                 \\\n  util/xxhash.cc                                                \\\n  utilities/backupable/backupable_db.cc                         \\\n  utilities/cassandra/cassandra_compaction_filter.cc            \\\n  utilities/cassandra/format.cc                                 \\\n  utilities/cassandra/merge_operator.cc                         \\\n  utilities/checkpoint/checkpoint_impl.cc                       \\\n  utilities/compaction_filters/remove_emptyvalue_compactionfilter.cc    \\\n  utilities/console/anet.cc                                     \\\n  utilities/console/executor_mem_impl.cc                        \\\n  utilities/console/resp_machine.cc                             \\\n  utilities/console/server.cc                                   \\\n  utilities/console/util.cc                                     \\\n  utilities/convenience/info_log_finder.cc                      \\\n  utilities/date_tiered/date_tiered_db_impl.cc                  \\\n  utilities/debug.cc                                            \\\n  utilities/document/document_db.cc                             \\\n  utilities/document/json_document.cc                           \\\n  utilities/document/json_document_builder.cc                   \\\n  utilities/env_mirror.cc                                       \\\n  utilities/env_timed.cc                                        \\\n  utilities/flink/flink_compaction_filter.cc                    \\\n  utilities/geodb/geodb_impl.cc                                 \\\n  utilities/ioprof/ioprof.cc                                    \\\n  utilities/leveldb_options/leveldb_options.cc                  \\\n  utilities/lua/rocks_lua_compaction_filter.cc                  \\\n  utilities/memory/memory_util.cc                               \\\n  utilities/merge_operators/max.cc                              \\\n  utilities/merge_operators/put.cc                              \\\n  utilities/merge_operators/string_append/stringappend.cc       \\\n  utilities/merge_operators/string_append/stringappend2.cc      \\\n  utilities/merge_operators/uint64add.cc                        \\\n  utilities/merge_operators/bytesxor.cc                         \\\n  utilities/option_change_migration/option_change_migration.cc  \\\n  utilities/options/options_util.cc                             \\\n  utilities/persistent_cache/block_cache_tier.cc                \\\n  utilities/persistent_cache/block_cache_tier_file.cc           \\\n  utilities/persistent_cache/block_cache_tier_metadata.cc       \\\n  utilities/persistent_cache/persistent_cache_tier.cc           \\\n  utilities/persistent_cache/volatile_tier_impl.cc              \\\n  utilities/redis/redis_lists.cc                                \\\n  utilities/simulator_cache/sim_cache.cc                        \\\n  utilities/spatialdb/spatial_db.cc                             \\\n  utilities/table_properties_collectors/compact_on_deletion_collector.cc \\\n  utilities/trace/bytedance_metrics_histogram.cc                 \\\n  utilities/trace/bytedance_metrics_reporter.cc                 \\\n  utilities/trace/file_trace_reader_writer.cc                   \\\n  utilities/transactions/optimistic_transaction.cc              \\\n  utilities/transactions/optimistic_transaction_db_impl.cc      \\\n  utilities/transactions/pessimistic_transaction.cc             \\\n  utilities/transactions/pessimistic_transaction_db.cc          \\\n  utilities/transactions/snapshot_checker.cc                    \\\n  utilities/transactions/transaction_base.cc                    \\\n  utilities/transactions/transaction_db_mutex_impl.cc           \\\n  utilities/transactions/transaction_lock_mgr.cc                \\\n  utilities/transactions/transaction_util.cc                    \\\n  utilities/transactions/write_prepared_txn.cc                  \\\n  utilities/transactions/write_prepared_txn_db.cc               \\\n  utilities/transactions/write_unprepared_txn.cc                \\\n  utilities/transactions/write_unprepared_txn_db.cc             \\\n  utilities/ttl/db_ttl_impl.cc                                  \\\n  utilities/write_batch_with_index/write_batch_with_index.cc    \\\n  utilities/write_batch_with_index/write_batch_with_index_internal.cc    \\\n\nifeq (,$(shell $(CXX) -fsyntax-only -maltivec -xc /dev/null 2>&1))\nLIB_SOURCES_ASM =\\\n  util/crc32c_ppc_asm.S\nLIB_SOURCES_C = \\\n  util/crc32c_ppc.c\nelse\nLIB_SOURCES_ASM =\nLIB_SOURCES_C =\nendif\n\nTOOL_LIB_SOURCES =                                              \\\n  tools/ldb_cmd.cc                                              \\\n  tools/ldb_tool.cc                                             \\\n  tools/sst_dump_tool.cc                                        \\\n\nANALYZER_LIB_SOURCES = \\\n  tools/trace_analyzer_tool.cc                                  \\\n\nMOCK_LIB_SOURCES = \\\n  table/mock_table.cc \\\n  util/fault_injection_test_env.cc\n\nBENCH_LIB_SOURCES =                                             \\\n  tools/db_bench_tool.cc                                        \\\n\nZENFS_LIB_SOURCES =                                             \\\n  tools/zenfs_tool.cc                                           \\\n\nEXP_LIB_SOURCES = \\\n  utilities/col_buf_decoder.cc                                  \\\n  utilities/col_buf_encoder.cc                                  \\\n  utilities/column_aware_encoding_util.cc\n\nTEST_LIB_SOURCES = \\\n  db/db_test_util.cc                                            \\\n  util/testharness.cc                                           \\\n  util/testutil.cc                                              \\\n  utilities/cassandra/test_utils.cc                             \\\n\nMAIN_SOURCES =                                                          \\\n  cache/cache_bench.cc                                                  \\\n  cache/cache_test.cc                                                   \\\n  db/column_family_test.cc                                              \\\n  db/compact_files_test.cc                                              \\\n  db/compaction_iterator_test.cc                                        \\\n  db/compaction_job_stats_test.cc                                       \\\n  db/compaction_job_test.cc                                             \\\n  db/compaction_picker_test.cc                                          \\\n  db/comparator_db_test.cc                                              \\\n  db/corruption_test.cc                                                 \\\n  db/cuckoo_table_db_test.cc                                            \\\n  db/db_basic_test.cc                                                   \\\n  db/db_block_cache_test.cc                                             \\\n  db/db_bloom_filter_test.cc                                            \\\n  db/db_compaction_filter_test.cc                                       \\\n  db/db_compaction_test.cc                                              \\\n  db/db_dynamic_level_test.cc                                           \\\n  db/db_encryption_test.cc                                              \\\n  db/db_flush_test.cc                                                   \\\n  db/db_inplace_update_test.cc                                          \\\n  db/db_io_failure_test.cc                                              \\\n  db/db_iter_test.cc                                                    \\\n  db/db_iter_stress_test.cc                                             \\\n  db/db_iterator_test.cc                                                \\\n  db/db_log_iter_test.cc                                                \\\n  db/db_memtable_test.cc                                                \\\n  db/db_merge_operator_test.cc                                          \\\n  db/db_options_test.cc                                                 \\\n  db/db_properties_test.cc                                              \\\n  db/db_range_del_test.cc                                               \\\n  db/db_sst_test.cc                                                     \\\n  db/db_statistics_test.cc                                              \\\n  db/db_table_properties_test.cc                                        \\\n  db/db_tailing_iter_test.cc                                            \\\n  db/db_test.cc                                                         \\\n  db/db_test2.cc                                                        \\\n  db/db_universal_compaction_test.cc                                    \\\n  db/db_wal_test.cc                                                     \\\n  db/db_write_test.cc                                                   \\\n  db/dbformat_test.cc                                                   \\\n  db/deletefile_test.cc                                                 \\\n  db/env_timed_test.cc                                                  \\\n  db/error_handler_test.cc                                              \\\n  db/external_sst_file_basic_test.cc                                    \\\n  db/external_sst_file_test.cc                                          \\\n  db/fault_injection_test.cc                                            \\\n  db/file_indexer_test.cc                                               \\\n  db/file_reader_writer_test.cc                                         \\\n  db/filename_test.cc                                                   \\\n  db/flush_job_test.cc                                                  \\\n  db/hash_table_test.cc                                                 \\\n  db/hash_test.cc                                                       \\\n  db/heap_test.cc                                                       \\\n  db/listener_test.cc                                                   \\\n  db/log_test.cc                                                        \\\n  db/lru_cache_test.cc                                                  \\\n  db/manual_compaction_test.cc                                          \\\n  db/memtable_list_test.cc                                              \\\n  db/merge_helper_test.cc                                               \\\n  db/merge_test.cc                                                      \\\n  db/obsolete_files_test.cc                                             \\\n  db/options_settable_test.cc                                           \\\n  db/options_file_test.cc                                               \\\n  db/partitioned_filter_block_test.cc                                   \\\n  db/perf_context_test.cc                                               \\\n  db/persistent_cache_test.cc                                           \\\n  db/periodic_work_scheduler_test.cc                                    \\\n  db/plain_table_db_test.cc                                             \\\n  db/prefix_test.cc                                                     \\\n  db/redis_test.cc                                                      \\\n  db/repair_test.cc                                                     \\\n  db/range_del_aggregator_test.cc                                       \\\n  db/range_del_aggregator_bench.cc                                      \\\n  db/range_tombstone_fragmenter_test.cc                                 \\\n  db/table_properties_collector_test.cc                                 \\\n  db/util_merge_operators_test.cc                                       \\\n  db/version_builder_test.cc                                            \\\n  db/version_edit_test.cc                                               \\\n  db/version_set_test.cc                                                \\\n  db/wal_manager_test.cc                                                \\\n  db/write_batch_test.cc                                                \\\n  db/write_callback_test.cc                                             \\\n  db/write_controller_test.cc                                           \\\n  env/env_basic_test.cc                                                 \\\n  env/env_test.cc                                                       \\\n  env/mock_env_test.cc                                                  \\\n  memtable/inlineskiplist_test.cc                                       \\\n  memtable/memtablerep_bench.cc                                         \\\n  memtable/skiplist_test.cc                                             \\\n  memtable/terark_zip_entry_index.cc                                    \\\n  memtable/terark_zip_memtable.cc                                       \\\n  memtable/write_buffer_manager_test.cc                                 \\\n  monitoring/histogram_test.cc                                          \\\n  monitoring/iostats_context_test.cc                                    \\\n  monitoring/statistics_test.cc                                         \\\n  options/options_settable_test.cc                                      \\\n  options/options_test.cc                                               \\\n  table/block_based_filter_block_test.cc                                \\\n  table/block_test.cc                                                   \\\n  table/cleanable_test.cc                                               \\\n  table/cuckoo_table_builder_test.cc                                    \\\n  table/cuckoo_table_reader_test.cc                                     \\\n  table/data_block_hash_index_test.cc                                   \\\n  table/full_filter_block_test.cc                                       \\\n  table/merger_test.cc                                                  \\\n  table/sst_file_reader_test.cc                                         \\\n  table/table_reader_bench.cc                                           \\\n  table/table_test.cc                                                   \\\n  table/terark_zip_config.cc                                            \\\n  table/terark_zip_table_builder.cc                                     \\\n  table/terark_zip_table_reader.cc                                      \\\n  table/terark_zip_table.cc                                             \\\n  third-party/gtest-1.7.0/fused-src/gtest/gtest-all.cc                  \\\n  tools/db_bench.cc                                                     \\\n  tools/db_bench_tool_test.cc                                           \\\n  tools/db_sanity_test.cc                                               \\\n  tools/ldb_cmd_test.cc                                                 \\\n  tools/reduce_levels_test.cc                                           \\\n  tools/sst_dump_test.cc                                                \\\n  tools/trace_analyzer_test.cc                                          \\\n  util/arena_test.cc                                                    \\\n  util/auto_roll_logger_test.cc                                         \\\n  util/autovector_test.cc                                               \\\n  util/bloom_test.cc                                                    \\\n  util/coding_test.cc                                                   \\\n  util/crc32c_test.cc                                                   \\\n  util/dynamic_bloom_test.cc                                            \\\n  util/event_logger_test.cc                                             \\\n  util/filelock_test.cc                                                 \\\n  util/log_write_bench.cc                                               \\\n  util/rate_limiter_test.cc                                             \\\n  util/repeatable_thread_test.cc                                        \\\n  util/slice_transform_test.cc                                          \\\n  util/timer_queue_test.cc                                              \\\n  util/timer_test.cc                                                    \\\n  util/thread_list_test.cc                                              \\\n  util/thread_local_test.cc                                             \\\n  utilities/backupable/backupable_db_test.cc                            \\\n  utilities/cassandra/cassandra_format_test.cc                          \\\n  utilities/cassandra/cassandra_functional_test.cc                      \\\n  utilities/cassandra/cassandra_row_merge_test.cc                       \\\n  utilities/cassandra/cassandra_serialize_test.cc                       \\\n  utilities/checkpoint/checkpoint_test.cc                               \\\n  utilities/column_aware_encoding_exp.cc                                \\\n  utilities/column_aware_encoding_test.cc                               \\\n  utilities/date_tiered/date_tiered_test.cc                             \\\n  utilities/document/document_db_test.cc                                \\\n  utilities/document/json_document_test.cc                              \\\n  utilities/geodb/geodb_test.cc                                         \\\n  utilities/flink/flink_compaction_filter_test.cc                       \\\n  utilities/lua/rocks_lua_test.cc                                       \\\n  utilities/memory/memory_test.cc                                       \\\n  utilities/merge_operators/string_append/stringappend_test.cc          \\\n  utilities/object_registry_test.cc                                     \\\n  utilities/option_change_migration/option_change_migration_test.cc     \\\n  utilities/options/options_util_test.cc                                \\\n  utilities/redis/redis_lists_test.cc                                   \\\n  utilities/simulator_cache/sim_cache_test.cc                           \\\n  utilities/spatialdb/spatial_db_test.cc                                \\\n  utilities/table_properties_collectors/compact_on_deletion_collector_test.cc  \\\n  utilities/transactions/optimistic_transaction_test.cc                 \\\n  utilities/transactions/transaction_test.cc                            \\\n  utilities/transactions/write_prepared_transaction_test.cc             \\\n  utilities/transactions/write_unprepared_transaction_test.cc           \\\n  utilities/ttl/ttl_test.cc                                             \\\n  utilities/write_batch_with_index/write_batch_with_index_test.cc       \\\n\nJNI_NATIVE_SOURCES =                                          \\\n  java/rocksjni/backupenginejni.cc                            \\\n  java/rocksjni/backupablejni.cc                              \\\n  java/rocksjni/checkpoint.cc                                 \\\n  java/rocksjni/clock_cache.cc                                \\\n  java/rocksjni/columnfamilyhandle.cc                         \\\n  java/rocksjni/compaction_filter.cc                          \\\n  java/rocksjni/compaction_filter_factory.cc                  \\\n  java/rocksjni/compaction_filter_factory_jnicallback.cc      \\\n  java/rocksjni/compact_range_options.cc                      \\\n  java/rocksjni/compaction_options_universal.cc               \\\n  java/rocksjni/comparator.cc                                 \\\n  java/rocksjni/comparatorjnicallback.cc                      \\\n  java/rocksjni/compression_options.cc                        \\\n  java/rocksjni/env.cc                                        \\\n  java/rocksjni/env_options.cc                                \\\n  java/rocksjni/flink_compactionfilterjni.cc                  \\\n  java/rocksjni/ingest_external_file_options.cc               \\\n  java/rocksjni/filter.cc                                     \\\n  java/rocksjni/iterator.cc                                   \\\n  java/rocksjni/jnicallback.cc                                \\\n  java/rocksjni/loggerjnicallback.cc                          \\\n  java/rocksjni/lru_cache.cc                                  \\\n  java/rocksjni/memtablejni.cc                                \\\n  java/rocksjni/memory_util.cc                                \\\n  java/rocksjni/merge_operator.cc                             \\\n  java/rocksjni/native_comparator_wrapper_test.cc             \\\n  java/rocksjni/optimistic_transaction_db.cc                  \\\n  java/rocksjni/optimistic_transaction_options.cc             \\\n  java/rocksjni/options.cc                                    \\\n  java/rocksjni/options_util.cc                               \\\n  java/rocksjni/ratelimiterjni.cc                             \\\n  java/rocksjni/remove_emptyvalue_compactionfilterjni.cc      \\\n  java/rocksjni/cassandra_compactionfilterjni.cc              \\\n  java/rocksjni/cassandra_value_operator.cc                   \\\n  java/rocksjni/restorejni.cc                                 \\\n  java/rocksjni/rocks_callback_object.cc                      \\\n  java/rocksjni/rocksjni.cc                                   \\\n  java/rocksjni/rocksdb_exception_test.cc                     \\\n  java/rocksjni/slice.cc                                      \\\n  java/rocksjni/snapshot.cc                                   \\\n  java/rocksjni/sst_file_manager.cc                           \\\n  java/rocksjni/sst_file_writerjni.cc                         \\\n  java/rocksjni/statistics.cc                                 \\\n  java/rocksjni/statisticsjni.cc                              \\\n  java/rocksjni/table.cc                                      \\\n  java/rocksjni/transaction.cc                                \\\n  java/rocksjni/transaction_db.cc                             \\\n  java/rocksjni/transaction_options.cc                        \\\n  java/rocksjni/transaction_db_options.cc                     \\\n  java/rocksjni/transaction_log.cc                            \\\n  java/rocksjni/transaction_notifier.cc                       \\\n  java/rocksjni/transaction_notifier_jnicallback.cc           \\\n  java/rocksjni/ttl.cc                                        \\\n  java/rocksjni/write_batch.cc                                \\\n  java/rocksjni/writebatchhandlerjnicallback.cc               \\\n  java/rocksjni/write_batch_test.cc                           \\\n  java/rocksjni/write_batch_with_index.cc                     \\\n  java/rocksjni/write_buffer_manager.cc\n"
        },
        {
          "name": "table",
          "type": "tree",
          "content": null
        },
        {
          "name": "terark-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty.inc",
          "type": "blob",
          "size": 7.744140625,
          "content": "# Edit definitions below to specify paths to include files and libraries of all 3rd party libraries\n\n# TODO: Make this work with find_package and/or get rid of it\n#\n# This example assumes all the libraries locate in directories under THIRDPARTY_HOME environment variable\n# Set environment variable THIRDPARTY_HOME to point to your third party libraries home (Unix style dir separators)\n# or change the paths below to reflect where the libraries actually reside\n#\nset (THIRDPARTY_LIBS \"\")         # Initialization, don't touch\n\n#\n# Defaults\n#\nset(GFLAGS_HOME $ENV{THIRDPARTY_HOME}/Gflags.Library)\nset(GFLAGS_INCLUDE ${GFLAGS_HOME}/build/native/include)\nset(GFLAGS_LIB_DEBUG ${GFLAGS_HOME}/lib/native/debug/amd64/gflags.lib)\nset(GFLAGS_LIB_RELEASE ${GFLAGS_HOME}/lib/native/retail/amd64/gflags.lib)\n\n# ================================================== GFLAGS ==================================================\n# For compatibility\nif (GFLAGS)\n  set(WITH_GFLAGS ON)\nendif ()\n\nif (WITH_GFLAGS)\n  message(STATUS \"GFLAGS library is enabled\")\n  \n  if(DEFINED ENV{GFLAGS_INCLUDE})\n    set(GFLAGS_INCLUDE $ENV{GFLAGS_INCLUDE})\n  endif()\n  \n  if(DEFINED ENV{GFLAGS_LIB_DEBUG})\n    set(GFLAGS_LIB_DEBUG $ENV{GFLAGS_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{GFLAGS_LIB_RELEASE})\n    set(GFLAGS_LIB_RELEASE $ENV{GFLAGS_LIB_RELEASE})\n  endif()\n  \n  set(GFLAGS_CXX_FLAGS -DGFLAGS=gflags)\n  set(GFLAGS_LIBS debug ${GFLAGS_LIB_DEBUG} optimized ${GFLAGS_LIB_RELEASE})\n\n  add_definitions(${GFLAGS_CXX_FLAGS})\n  include_directories(${GFLAGS_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${GFLAGS_LIBS})\nelse ()\n  message(STATUS \"GFLAGS library is disabled\")\nendif ()\n\n# ================================================== SNAPPY ==================================================\n#\n# Edit these 4 lines to define paths to Snappy\n#\nset(SNAPPY_HOME $ENV{THIRDPARTY_HOME}/Snappy.Library)\nset(SNAPPY_INCLUDE ${SNAPPY_HOME}/build/native/inc/inc)\nset(SNAPPY_LIB_DEBUG ${SNAPPY_HOME}/lib/native/debug/amd64/snappy.lib)\nset(SNAPPY_LIB_RELEASE ${SNAPPY_HOME}/lib/native/retail/amd64/snappy.lib)\n\n# For compatibility\nif(SNAPPY)\n  set(WITH_SNAPPY ON)\nendif ()\n\nif (WITH_SNAPPY)\n  message(STATUS \"SNAPPY library is enabled\")\n\n  if(DEFINED ENV{SNAPPY_INCLUDE})\n    set(SNAPPY_INCLUDE $ENV{SNAPPY_INCLUDE})\n  endif()\n\n  if(DEFINED ENV{SNAPPY_LIB_DEBUG})\n    set(SNAPPY_LIB_DEBUG $ENV{SNAPPY_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{SNAPPY_LIB_RELEASE})\n    set(SNAPPY_LIB_RELEASE $ENV{SNAPPY_LIB_RELEASE})\n  endif()\n\n  set(SNAPPY_CXX_FLAGS -DSNAPPY)\n  set(SNAPPY_LIBS debug ${SNAPPY_LIB_DEBUG} optimized ${SNAPPY_LIB_RELEASE})\n\n  add_definitions(${SNAPPY_CXX_FLAGS})\n  include_directories(${SNAPPY_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${SNAPPY_LIBS})\nelse ()\n  message(STATUS \"SNAPPY library is disabled\")\nendif ()\n\n# ================================================== LZ4 ==================================================\n#\n# Edit these 4 lines to define paths to LZ4\n#\nset(LZ4_HOME $ENV{THIRDPARTY_HOME}/LZ4.Library)\nset(LZ4_INCLUDE ${LZ4_HOME}/build/native/inc/inc)\nset(LZ4_LIB_DEBUG ${LZ4_HOME}/lib/native/debug/amd64/lz4.lib)\nset(LZ4_LIB_RELEASE ${LZ4_HOME}/lib/native/retail/amd64/lz4.lib)\n\n\n# For compatibility\nif (LZ4)\n  set(WITH_LZ4 ON)\nendif ()\n\nif (WITH_LZ4)\n  message(STATUS \"LZ4 library is enabled\")\n  \n  if(DEFINED ENV{LZ4_INCLUDE})\n    set(LZ4_INCLUDE $ENV{LZ4_INCLUDE})\n  endif()\n  \n  if(DEFINED ENV{LZ4_LIB_DEBUG})\n    set(LZ4_LIB_DEBUG $ENV{LZ4_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{LZ4_LIB_RELEASE})\n    set(LZ4_LIB_RELEASE $ENV{LZ4_LIB_RELEASE})\n  endif()\n  \n  set(LZ4_CXX_FLAGS -DLZ4)\n  set(LZ4_LIBS debug ${LZ4_LIB_DEBUG} optimized ${LZ4_LIB_RELEASE})\n\n  add_definitions(${LZ4_CXX_FLAGS})\n  include_directories(${LZ4_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${LZ4_LIBS})\nelse ()\n  message(STATUS \"LZ4 library is disabled\")\nendif ()\n\n# ================================================== ZLIB ==================================================\n#\n# Edit these 4 lines to define paths to ZLIB\n#\nset(ZLIB_HOME $ENV{THIRDPARTY_HOME}/ZLIB.Library)\nset(ZLIB_INCLUDE ${ZLIB_HOME}/build/native/inc/inc)\nset(ZLIB_LIB_DEBUG ${ZLIB_HOME}/lib/native/debug/amd64/zlib.lib)\nset(ZLIB_LIB_RELEASE ${ZLIB_HOME}/lib/native/retail/amd64/zlib.lib)\n\n# For compatibilty\nif (ZLIB)\n  set(WITH_ZLIB ON)\nendif ()\n\nif (WITH_ZLIB)\n  message(STATUS \"ZLIB library is enabled\")\n\n  if(DEFINED ENV{ZLIB_INCLUDE})\n    set(ZLIB_INCLUDE $ENV{ZLIB_INCLUDE})\n  endif()\n  \n  if(DEFINED ENV{ZLIB_LIB_DEBUG})\n    set(ZLIB_LIB_DEBUG $ENV{ZLIB_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{ZLIB_LIB_RELEASE})\n    set(ZLIB_LIB_RELEASE $ENV{ZLIB_LIB_RELEASE})\n  endif()\n  \n  set(ZLIB_CXX_FLAGS -DZLIB)\n  set(ZLIB_LIBS debug ${ZLIB_LIB_DEBUG} optimized ${ZLIB_LIB_RELEASE})\n\n  add_definitions(${ZLIB_CXX_FLAGS})\n  include_directories(${ZLIB_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${ZLIB_LIBS})\nelse ()\n  message(STATUS \"ZLIB library is disabled\")\nendif ()\n\n# ================================================== XPRESS ==================================================\n# This makes use of built-in Windows API, no additional includes, links to a system lib\n\n# For compatibilty\nif (XPRESS)\n  set(WITH_XPRESS ON)\nendif ()\n\nif (WITH_XPRESS)\n  message(STATUS \"XPRESS is enabled\")\n\n  add_definitions(-DXPRESS)\n  \n  # We are using the implementation provided by the system\n  set (SYSTEM_LIBS ${SYSTEM_LIBS} Cabinet.lib)\nelse ()\n  message(STATUS \"XPRESS is disabled\")\nendif ()\n\n\n# ================================================== ZSTD ==================================================\n#\n# Edit these 4 lines to define paths to ZSTD\n#\nset(ZSTD_HOME $ENV{THIRDPARTY_HOME}/ZSTD.Library)\nset(ZSTD_INCLUDE ${ZSTD_HOME}/build/native/inc)\nset(ZSTD_LIB_DEBUG ${ZSTD_HOME}/lib/native/debug/amd64/libzstd_static.lib)\nset(ZSTD_LIB_RELEASE ${ZSTD_HOME}/lib/native/retail/amd64/libzstd_static.lib)\n\n# For compatibility\nif (ZSTD)\n  set(WITH_ZSTD ON)\nendif ()\n\nif (WITH_ZSTD)\n  message(STATUS \"ZSTD library is enabled\")\n\n  if(DEFINED ENV{ZSTD_INCLUDE})\n    set(ZSTD_INCLUDE $ENV{ZSTD_INCLUDE})\n  endif()\n  \n  if(DEFINED ENV{ZSTD_LIB_DEBUG})\n    set(ZSTD_LIB_DEBUG $ENV{ZSTD_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{ZSTD_LIB_RELEASE})\n    set(ZSTD_LIB_RELEASE $ENV{ZSTD_LIB_RELEASE})\n  endif()\n\n  # ZSTD_STATIC_LINKING_ONLY only allows us to create an allocation functions override\n  # When jemalloc is in use\n  set(ZSTD_LIBS debug ${ZSTD_LIB_DEBUG} optimized ${ZSTD_LIB_RELEASE})\n\n  add_definitions(-DZSTD -DZSTD_STATIC_LINKING_ONLY)\n  include_directories(${ZSTD_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${ZSTD_LIBS})\nelse ()\n  message(STATUS \"ZSTD library is disabled\")\nendif ()\n\n#\n# Edit these 4 lines to define paths to Jemalloc\n#\nset(JEMALLOC_HOME $ENV{THIRDPARTY_HOME}/Jemalloc.Library)\nset(JEMALLOC_INCLUDE ${JEMALLOC_HOME}/build/native/inc)\nset(JEMALLOC_LIB_DEBUG ${JEMALLOC_HOME}/lib/native/debug/amd64/jemalloc.lib)\nset(JEMALLOC_LIB_RELEASE ${JEMALLOC_HOME}/lib/native/retail/amd64/jemalloc.lib)\n\n# ================================================== JEMALLOC ==================================================\nif(JEMALLOC)\n  set(WITH_JEMALLOC ON)\nendif()\n\nif (WITH_JEMALLOC)\n  message(STATUS \"JEMALLOC library is enabled\")\n  set(JEMALLOC_CXX_FLAGS \"-DROCKSDB_JEMALLOC -DJEMALLOC_EXPORT= \")\n  \n  if(DEFINED ENV{JEMALLOC_INCLUDE})\n    set(JEMALLOC_INCLUDE $ENV{JEMALLOC_INCLUDE})\n  endif()\n  \n  if(DEFINED ENV{JEMALLOC_LIB_DEBUG})\n    set(JEMALLOC_LIB_DEBUG $ENV{JEMALLOC_LIB_DEBUG})\n  endif()\n\n  if(DEFINED ENV{JEMALLOC_LIB_RELEASE})\n    set(JEMALLOC_LIB_RELEASE $ENV{JEMALLOC_LIB_RELEASE})\n  endif()\n\n  set(JEMALLOC_LIBS debug ${JEMALLOC_LIB_DEBUG} optimized ${JEMALLOC_LIB_RELEASE})\n\n  add_definitions(${JEMALLOC_CXX_FLAGS})\n  include_directories(${JEMALLOC_INCLUDE})\n  set (THIRDPARTY_LIBS ${THIRDPARTY_LIBS} ${JEMALLOC_LIBS})\n  set (ARTIFACT_SUFFIX \"_je\")\n\nelse ()\n  set (ARTIFACT_SUFFIX \"\")\n  message(STATUS \"JEMALLOC library is disabled\")\nendif ()\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "trace_replay",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "utilities",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}