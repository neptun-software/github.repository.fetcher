{
  "metadata": {
    "timestamp": 1736565683707,
    "page": 581,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gildor2/UEViewer",
      "stars": 2532,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.0361328125,
          "content": "[*.*]\nindent_style=tab\nindent_size=4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.458984375,
          "content": "#\n# This file contains rules that control how Git handles binary and text files, including line endings\n#\n \n\n*.bat eol=crlf\n*.sh eol=lf\n*.pl eol=lf\n\n# Setup Linguist attributes for correct language statistics on Github\n# See https://github.com/github/linguist/blob/master/README.md\nDocs/* linguist-documentation\nlibs/* linguist-vendored\n*.h linguist-language=cpp\n# There's also a number of generated files, however it is not possible to mark them with special attribute\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7978515625,
          "content": "# Some temporaty directories and directories with data\ndata\ndata/\nobj/\nbak/\n\n# Generated files\nUnreal/Shaders.h\nUmodelTool/Version.h\n\n# Ignore makefiles for tools\nTools/**/makefile-*\n\n# Other ignores\nDocs/cmdline.cfg\nDocs/fortnite.txt\nTools/MaxActorXImport/ActorXImporter.ini\nTools/UT2down/\n\n# Files produced by umodel\nUmodelExport/\nUmodelSaved/\nScreenshots/\nnotify.log\numodel.cfg\n\n# Visual Studio files\n**/.vs/*\n!.vs/CppProperties.json\n!.vs/launch.vs.json\n!.vs/tasks.vs.json\n\n# Executable files and pdb\numodel[-_]*.exe\numodel*.pdb\nTools/**/*.exe\nTools/**/*.pdb\n*todo.md\n\n# UI_Dev\nTools/UITest/vs/Debug/\nTools/UITest/vs/Release/\n\n# oodle library\nlibs/oodle/include\nlibs/oodle/lib\n\n# oodle dll\nlibs/oo2core*.dll\nTools/PackageExtract/oo2core*.dll\n\n# PackageExtract - ignore all extracted stuff\nTools/PackageExtract/**/\n"
        },
        {
          "name": ".vs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "Exporters",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright 2022, Konstantin Nosov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MeshInstance",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.60546875,
          "content": "UE Viewer\n=========\n\nUE Viewer is a viewer for visual resources of games made with [Unreal engine](https://www.unrealengine.com/).\nCurrently all engine versions (from 1 to 4) are supported.\n\nThe project was originally named the \"Unreal model viewer\", however the name\n[was changed](https://www.gildor.org/smf/index.php/topic,731.0.html) in 2011 to meet the request from Epic Games.\nPlease note that \"official\" project's name is \"UE Viewer\", and a short unofficial name of the project is \"umodel\"\n(it was left from the older name \"**U**nreal **MODEL** viewer\").\n\nThere's a place where you may discuss the source code:\n[gildor.org forums](https://www.gildor.org/smf/index.php?board=37.0).\n\n\nGetting the source code\n-----------------------\nThe source code is [available at GitHub](https://github.com/gildor2/UEViewer). You may either checkout it\nwith use of any Git client, or download it as a [Zip file](https://github.com/gildor2/UEViewer/archive/master.zip).\n\n\nBuilding the source code\n------------------------\nWe are using own build system to compile UE Viewer. You may find a Perl script in *Tools/genmake*. This script\ngenerates makefiles from some human-friendly project format. After that you may build generated makefile\nusing 'nmake' for Visual Studio or 'make' for gcc. Build process is controlled with *build.sh* script.\n\n### build.sh options\nTo list all options, run `build.sh --help`. Current options are:\n- `--64` compile for Windows 64bit\n- `--debug` make a debug version of executable\n- `--profile` make a special build which is intended to use with external profiler\n- `--vc <version>` specify which Visual Studio version should be used for compilation, default is latest compiler\n  installed on your system\n\nPlease note that `build.sh` is not just a shortcut for calling `make -f <makefile>`, it performs more actions.\nIt does:\n- Generating a makefile for current platform.\n- Making `UModelTool/Version.h` file which contains current build number based on number of Git commits.\n- Preprocessing shaders (with executing `Unreal/Shaders/make.pl`).\n- It has the possibility to compile just a single cpp file from the project (used with Visual Studio Code Ctrl+F7 key).\n\n### Windows 32-bit\n\nUE Viewer is compiled using Visual Studio. Required VisualStudio 2013 or newer. Older Visual Studio compilers are\nnot suitable because viewer's code using some C++11 stuff.\n\nCurrently build is performed with Visual C++ 2019.\n\nBuild system utilizes GNU Tools for building, in particular - Bash and Perl. I've packaged Windows versions\nof these tools which was a part of [MinGW/MSYS project](http://www.mingw.org/). You can get everything what you need\nfor a build [here](https://github.com/gildor2/BuildTools). You should download it and extract into some directory (press\nthe green button \"Clone or download\", then \"Download ZIP\"). Let's say you\nextracted everything to *C:\\BuildTools*. After that, add *C:\\BuildTools\\bin* to the system's *PATH* environment variable. As an\nalternative it is possible to create a batch file which will temporarily modify *PATH* and then execute build script.\nHere's an example of such file:\n\n    @echo off\n    set PATH=C:\\BuildTools\\bin;%PATH%\n    bash build.sh\n\nTo launch a build process without a batch, simply execute\n\n    bash build.sh\n\n### Windows 64-bit\nDespite only 32-bit builds of UE Viewer being provided, it is possible to compile it for 64-bit platform. To do that, you\nshould change a variable in *build.sh*: *PLATFORM* should be changed from `vc-win32` to `vc-win64`. Also 64-bit build could\nbe initiated with launching\n\n\tbuild.sh --64\n\n### Linux\nLinux system has the most of dependencies by default. You'll need to install the following development packages if they're\nnot available on your system: SDL2, zlib, libpng. Of course, you'll also need gcc for compiling the project.\nTo build UE Viewer, simply execute the following command from terminal\n\n    ./build.sh\n\nWhen compiling for Linux, project will use system's zlib and libpng libraries. If you want to bundle (statically link) them\ninto umodel executable, you may find and comment the following line in *common.project*\n\n\tUSE_SYSTEM_LIBS = 1\n\nIn this case, Linux build will be performed in the same way as Windows build, with compiling and bundling mentioned libraries.\n\n### macOS\nUE Viewer is provided with initial support for macOS platform. I'm using VMWare macOS image to build it, so I can't do the\nfull testing. Therefore, some features are disabled:\n- no OpenGL support (no visualization) - it is explicitly disabled in *UmodelTool/Build.h*\n- no multithreading support - it's disabled in the same place\n\nIn other words, UE Viewer on macOS works just like a simple command-line exporter utility.\n\n\nUsing IDE\n---------\n\n### Visual Studio\nAs UE Viewer is using custom cross-platform build system, there's no MSBuild support. However we have a simple Visual Studio\nproject which allows to use this IDE to edit, compile, run and debug the project. Project files are located in `.vs` directory.\nIn order to open the project, you should start Visual Studio, use \"Open a local folder\" command, and then choose root project's\ndirectory. Please note: there's .sln file somewhere in *Tools* folder, don't use it - it is intended for UI framework testing.\n\nPlease note that you should use Visual Studio 2019 or newer, otherwise [some features will not work](https://www.gildor.org/smf/index.php/topic,7419.0.html).\n\n### Visual Studio Code\nUE Viewer contains project files needed for opening and running it from [Visual Studio Code](https://code.visualstudio.com/).\nJust open viewer's folder in VSCode, and you'll get everything. Project already has a build task and launch actions set up.\nOf course you'll need a [C/C++ extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools) installed.\nYou may build, launch and debug UE Viewer using this IDE.\n\nVSCode project comes with additional build command which could be bound to a key. Just use\n```\n\t{\n\t\t\"key\": \"ctrl+f7\",\n\t\t\"command\": \"workbench.action.tasks.runTask\",\n\t\t\"args\": \"Compile\"\n\t}\n```\nand then Ctrl+F7 key will compile a file currently opened in editor. Of course, it won't work for headers and other non-cpp\nfiles.\n\nBy default, Visual Studio Code project performs Debug build. If you want something else, change `.vscode/tasks.json` file,\nand remove `--debug` option from `build.sh` command.\n\nThere are 2 configurations For debugging: \"No arguments\" runs UE Viewer with default startup UI, and for use of command line\nyou may launch 2nd \"Volatile\" configuration, which reads command line arguments from file *docs/cmdline.cfg* - please refer to\n[Response files documentation](https://github.com/gildor2/UModel/wiki/Response-file) for details on its format. You may also\nedit *.vscode/tasks.json* file to add your own debug configurations.\n\n\nAdvanced debugging using Visual Studio\n--------------------------------------\nInitially UE Viewer was released without a Visual Studio solution. However it was possible to debug it within an IDE. The information\nbelow describes how to build and debug UE Viewer for debugging without use of VS project (e.g. when you're using older IDE version).\n\nYou can build a Debug version of viewer by uncommenting ```#define MAX_DEBUG 1``` in *UmodelTool/Build.h* and rebuilding the\nproject. After that you'll get executable with optimizations disabled, and with some extra features. For example,\nif umodel.exe crashes, and it is started with *-debug* option, standard Windows window appears with prompt to close\nprogram or debug it. You may choose \"Debug with Visual Studio\" there.\n\nAlso you may use `--debug` parameter for build.sh script. This will generate separate set of object files and link into\ndebug version of the executable (with the same executable file's name). You may quickly switch between \"debug\" and \"release\"\nbuilds without having to fully recompile the program.\n\nIf you want to debug umodel.exe in Visual Studio without having a crash, you may load it either from IDE (```File |\nOpen | Project/Solution```, then select *umodel.exe*), or you may type in console\n\n    devenv umodel.exe\n\nIt is recommended to use **Visual Studio 2013** IDE or newer because it has more advanced debugging features than previous studio\nversions. You may copy **Tools/umodel.natvis** file to *C:\\Users\\Your_user_folder\\My Documents\\Visual Studio 20NN\\Visualizers*,\nand after that you'll be able to view *TArray* and *FString* structures during debug session.\n\n\nC runtime library for MSVC\n--------------------------\nUE Viewer is dynamically linked with CRT library, so it requires CRT DLL files to be installed onto your system. It is possible\nto *statically* link with you compiler's CRT by changing a line in *common.project* (with cost of growing executable file size):\n\n    LIBC = shared\n\nto\n\n    LIBC = static\n\nUE Viewer uses custom CRT library for being able to link against MSVCRT.DLL. MSVCRT.DLL is chosen because it allows to\nreduce size of UE Viewer distribution without needs to install compiler runtime libraries onto a Windows system - MSVCRT.DLL present on\n_any_ Windows installation. You may disable MSVCRT.DLL linking by commenting out the line\n\n    OLDCRT = 1\n\nPreviously there were some problems with using msvcrt.dll with Visual Studio compiler 2015 and newer. However all issues has been\nsolved. For those who interested in details, I've [prepared an article](https://github.com/gildor2/UModel/wiki/Using-MSVCRT.DLL-with-Visual-Studio-compiler).\n\nIf you want to use MSVCRT.DLL, you should extract **MSVCRT.zip** archive available\n[here](https://github.com/gildor2/UModel/releases) to the directory LIBS one level above of UModel directory.\nSo, the directory structure should look like this\n```\n├── Libs\n│   └── MSVCRT\n│       ├── include\n│       ├── lib\n│       └── msvcrt.project\n├── UModel\n│   ├── Core\n│   ├── Unreal\n│   ...\n│   ├── build.sh\n│   ...\n```\nAlso you may change MSVCRT library path by changing **WDKCRT** variable in *common.project*.\n\n\nDirectory structure\n-------------------\nBelow is the list of major folders which exists in this repository or which are generated during build process.\n```\n├── .vs                   # Visual Studio 2019 project files\n├── .vscode               # Visual Studio Code project files\n├── Core                  # corelibraries not related to Unreal engine\n│   └── GL                # OpenGL wrapper builder\n├── Docs                  # miscellaneous text files\n├── Exporters             # exporters for different object types\n├── Libs                  # third-party libraries used for building\n├── MeshInstance          # mesh renderers\n├── obj                   # all compiled object files goes there\n├── Tools\n│   ├── CompatTable       # source of compatibility table\n│   ├── MaxActorXImport   # ActorX Importer script for 3ds Max\n│   ├── PackageExtract    # Unreal package extractor source\n│   └── PackageUnpack     # unreal package decompressor source\n├── UI                    # library used to show UI on Windows\n├── UmodelTool            # source code of umodel itself\n├── Unreal                # source code of Unreal Engine framework\n│   └── Shaders           # shaders used in UModel's renderer\n├── Viewers               # viewers for different object types\n├── build.sh              # main build script\n├── common.project        # main project file, reused between different sub-projects\n├── t.bat                 # Windows CMD caller for test.sh\n└── test.sh               # internal script used for testing\n```\n\nLicense\n-------\nUE Viewer is licensed under the MIT License, see [LICENSE.txt](https://github.com/gildor2/UEViewer/blob/master/LICENSE.txt) for more information.\n"
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "UI",
          "type": "tree",
          "content": null
        },
        {
          "name": "UmodelTool",
          "type": "tree",
          "content": null
        },
        {
          "name": "Unreal",
          "type": "tree",
          "content": null
        },
        {
          "name": "Viewers",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 7.603515625,
          "content": "#!/bin/bash\n\n\n# Parse the command line\nExeName=\n\nwhile [ \"$1\" ]; do\n\tcase \"$1\" in\n\t\t--debug)\n\t\t\t# enable debug build\n\t\t\tdebug=1\n\t\t\tshift\n\t\t\t;;\n\t\t--profile)\n\t\t\tprofile=1\n\t\t\tPLATFORM=\"vc-win64\"\t\t\t# force 64 bit build for profiler\n\t\t\tVC32TOOLS_OPTIONS=\"--64\"\n\t\t\tshift\n\t\t\t;;\n\t\t--vc)\n\t\t\tvc_ver=$2\n\t\t\tshift 2\n\t\t\t;;\n\t\t--64)\n\t\t\t# switch to 64 bit platform (Win64)\n\t\t\tPLATFORM=\"vc-win64\"\n\t\t\tVC32TOOLS_OPTIONS=\"--64\"\n\t\t\tshift\n\t\t\t;;\n\t\t--exe)\n\t\t\tExeName=$2\n\t\t\tshift 2\n\t\t\t;;\n\t\t--file)\n\t\t\t# compile a single file from VSCode, should replace slashes\n\t\t\tsingle_file=${2//\\\\//}\n\t\t\tshift 2\n\t\t\t;;\n\t\t*)\n\t\t\techo \"Usage: build.sh [--debug] [--profile] [--vc <version>] [--64] [--exe <file.exe>] [--file <cpp file>]\"\n\t\t\texit\n\t\t\t;;\n\tesac\ndone\n\n\nfunction DebugPrint()\n{\n#\techo \">> Debug: $*\"\t\t# uncomment this line to see debug stuff\n\t:\t\t\t\t\t\t# just allow commented 'echo' above\n}\n\n#-------------------------------------------------------------\n# Setup default project when running this script directly. Used to build UmodelTool.\n\nfunction SetupDefaultProject()\n{\n\tis_default_project=1\n\tproject=\"UmodelTool/umodel\"\n\troot=\".\"\n\trender=1\n\tif [ -z \"$ExeName\" ]; then\n\t\tExeName=\"umodel\"\n\t\t[ \"$debug\" ] && ExeName+=\"-debug\"\n\t\t[ \"$profile\" ] && ExeName+=\"-profile\"\n\t\t[ \"$PLATFORM\" == \"vc-win64\" ] && ExeName+=\"_64\"\n\tfi\n\tGENMAKE_OPTIONS+=\" EXE_NAME=$ExeName\"\n}\n\n#-------------------------------------------------------------\n# Get revision number from Git\n\nfunction GetBuildNumber()\n{\n\tlocal revision=\"(unversioned)\"\t\t\t\t\t# this value will be used in a case of missing git\n\tlocal version_file=\"UmodelTool/Version.h\"\n\tif [ -d .git ]; then\n\t\tlocal git=`type -p git`\t\t\t\t\t\t# equals to `which git`\n\t\tif [ -z \"$git\" ]; then\n\t\t\tif [ \"$OSTYPE\" == \"msys\" ]; then\n\t\t\t\t# assume Windows, find local git distribution\n#\t\t\t\tprogs=\"${PROGRAMFILES//\\\\//}\"\t\t# get from environment with slash replacement\n#\t\t\t\tprogs=\"/${progs//:/}\"\t\t\t\t# for msys: convert \"C:/Program Files\" to \"/C/Program Files\"\n\t\t\t\t[ -d \"$PROGRAMFILES/Git\" ] && gitpath=\"$PROGRAMFILES/Git/bin\"\n\t\t\t\t[ -d \"$PROGRAMW6432/Git\" ] && gitpath=\"$PROGRAMW6432/Git/bin\"\n\t\t\t\t! [ \"$gitpath\" ] && [ -d \"$PROGRAMFILES/SmartGitHg/git\" ] && gitpath=\"$PROGRAMFILES/SmartGitHg/git/bin\"\n\t\t\t\t! [ \"$gitpath\" ] && [ -d \"$LOCALAPPDATA/Atlassian/SourceTree/git_local\" ] && gitpath=\"$LOCALAPPDATA/Atlassian/SourceTree/git_local/bin\"\n\t\t\t\t[ \"$gitpath\" ] && PATH=\"$PATH:$gitpath\"\n\t\t\t\t# find git\n\t\t\t\tgit=`type -p git`\n\t\t\tfi\n\t\tfi\n\t\t[ \"$git\" ] && revision=`git rev-list --count HEAD`\n\t\tDebugPrint \"Git revision: $revision\"\n\tfi\n\n\t# update tool version\n\t# read current revision\n\t[ -f \"$version_file\" ] && [ \"$revision\" ] && read last_revision < $version_file\n\tlocal last_revision=${last_revision##* }\t\t# cut \"#define ...\"\n\t# write back to a file if value differs or if file doesn't exist (only for UModel project, i.e. when $project is empty)\n\t[ \"$is_default_project\" ] && [ \"$last_revision\" != \"$revision\" ] && echo \"#define GIT_REVISION $revision\" > $version_file\n}\n\n#-------------------------------------------------------------\n\nfunction DetectBuildPlatform()\n{\n\t# force PLATFORM=linux under Linux OS\n\tif [ \"$OSTYPE\" == \"linux-gnu\" ] || [ \"$OSTYPE\" == \"linux\" ]; then\n\t\t# PLATFORM=\"linux\" - old case, now we'll recognize 32 or 64 bit OS for proper use of oodle.project\n\t\tif [ $(uname -m) == 'x86_64' ]; then\n\t\t\tPLATFORM=\"linux64\"\n\t\telse\n\t\t\tPLATFORM=\"linux32\"\n\t\tfi\n\telif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n\t\tPLATFORM=osx\n\telse\n\t\t[ \"$PLATFORM\" ] || PLATFORM=\"vc-win32\"\n\tfi\n\tDebugPrint \"Detected platform: $PLATFORM\"\n}\n\n#-------------------------------------------------------------\n# We have some makefile dependency on Visual Studio compiler version, so we should detect it\n\nfunction DetectVisualStudioVersion()\n{\n\t# setup default compiler version\n\t[ \"$vc_ver\" ] || vc_ver=latest\n\t# Find Visual Studio\n\t. vc32tools $VC32TOOLS_OPTIONS --version=$vc_ver --check\n\t[ -z \"$found_vc_year\" ] && exit 1\t\t\t\t# nothing found\n\t# Adjust vc_ver to found one\n\tvc_ver=$found_vc_year\n\tDebugPrint \"Found: Visual Studio $found_vc_year at \\\"$workpath\\\", Version = $vc_ver\"\n\tGENMAKE_OPTIONS+=\" VC_VER=$vc_ver\"\t\t\t\t# specify compiler for genmake script\n}\n\n#-------------------------------------------------------------\n\nfunction ProcessShaderFiles()\n{\n\t# build shader includes before call to genmake\n\tif [ $render -eq 1 ]; then\n\t\t# 'cd' calls below won't work if we're not calling from the project's root\n\t\tif [ \"$root\" != \".\" ]; then\n\t\t\techo \"Bad 'root'\"\n\t\t\texit 1\n\t\tfi\n\t\t# build shaders\n\t\t#?? move this command to makefile\n\t\tUnreal/Shaders/make.pl\n\tfi\n}\n\n#-------------------------------------------------------------\n\nfunction GenerateMakefile()\n{\n\t# prepare makefile parameters, store in obj directory\n\tlocal projectName=${project##*/}\n\tmakefile=\"$root/obj/$projectName-$PLATFORM\"\n\tif ! [ -d $root/obj ]; then\n\t\tmkdir $root/obj\n\tfi\n\t# debugging options\n\tif [ \"$debug\" ]; then\n\t\tmakefile=\"${makefile}-debug\"\n\t\tGENMAKE_OPTIONS+=\" DEBUG=1\"\n\telif [ \"$profile\" ]; then\n\t\tmakefile=\"${makefile}-profile\"\n\t\tGENMAKE_OPTIONS+=\" TRACY=1\"\n\tfi\n\tmakefile=\"${makefile}.mak\"\n\tDebugPrint \"Using makefile: $makefile\"\n\n\t# update makefile when needed\n\t# [ $makefile -ot $project ] &&\n\t$root/Tools/genmake $project.project TARGET=$PLATFORM $GENMAKE_OPTIONS > $makefile\n}\n\n\n#-------------------------------------------------------------\n# Parse generated makefile to find an obj file which is built from provided c or cpp file $single_file.\n# Function parameters are passed via global variables $makefile, $single_file\n\nfunction FindSingleFileTarget()\n{\n\t# Using perl with HEREDOC for parsing of makefile to find object file matching required target.\n\t# Code layout: target=`perl << 'EOF'\n\t# EOF\n\t# `\n\t# 1) using quoted 'EOF' to prevent variable expansion\n\t# 2) passing parameters to a script using command line, return value as output capture\n\t# 3) putting perl command into `` (inverse quotes)\n\t# 4) s/// command in perl code has extra quote for '$'\n\ntarget=`perl -w - \"$makefile\" \"$single_file\" <<'EOF'\n\tmy $makefile = $ARGV[0];\n\tmy $single_file = $ARGV[1];\n\topen(FILE, $makefile) or die;\n\t$defines = ();\n\twhile ($line = <FILE>)\n\t{\n\t\tnext if $line !~ /^\\S+/;\t# we're interested only in lines starting without indent\n\t\tnext if $line =~ /^\\#/;\t\t# no comments\n\t\t$line =~ s/(\\r|\\n)//;\t\t# string end of line\n#\t\tprint($line.\"\\n\");\n\t\t# parse assignment\n\t\t($var, $val) = $line =~ /^(\\w+)\\s*\\=\\s*(.*)$/;\n\t\tif (defined($var) && defined($val)) {\n\t\t\t$defines{$var} = $val;\n\t\t} else {\n\t\t\t# parse target\n\t\t\t($target, $cpp) = $line =~ /^(\\S+)\\s*\\:\\s*(\\S+)(\\s|$)/;\n\t\t\tif (defined($target) && defined($cpp)) {\n\t\t\t\tnext if $cpp ne $single_file;\t\t\t# match with single_file value\n#\t\t\t\tprint(\"$cpp -> $target\\n\");\n\t\t\t\tfor my $key (keys(%defines)) {\n\t\t\t\t\tmy $value = $defines{$key};\n\t\t\t\t\t$target =~ s/\\\\$\\($key\\)/$value/g;\t# replace $(var) with value\n\t\t\t\t}\n#\t\t\t\tprint(\"$cpp -> $target\\n\");\n\t\t\t\tprint(\"$target\");\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\nEOF\n`\n\tDebugPrint \"SingleFile target: $target\"\n\tif [ -z \"$target\" ]; then echo \"Error: failed to find a build target for '$single_file'\"; exit; fi\n}\n\n#-------------------------------------------------------------\n\n[ \"$project\" ] || SetupDefaultProject\nGetBuildNumber\nDetectBuildPlatform\n\n[ \"${PLATFORM:0:3}\" == \"vc-\" ] && DetectVisualStudioVersion\n\nProcessShaderFiles\n\nGenerateMakefile\n\n[ \"$single_file\" ] && FindSingleFileTarget\n\n# Perform a build\n# if $target is empty, whole project will be built, otherwise a single file\ncase \"$PLATFORM\" in\n\t\"vc-win32\"|\"vc-win64\")\n\t\tMake $makefile $target || exit 1\n\t\t;;\n\t\"mingw32\"|\"cygwin\")\n\t\tPATH=/bin:/usr/bin:$PATH\t\t\t\t\t# configure paths for Cygwin\n\t\tgccfilt make -f $makefile $target || exit 1\n\t\t;;\n\tlinux*)\n\t\tmake -j 4 -f $makefile $target || exit 1\t# use 4 jobs for build\n\t\t;;\n\tosx)\n\t\tmake -f $makefile $target || exit 1\n\t\t;;\n\t*)\n\t\techo \"Unknown PLATFORM=\\\"$PLATFORM\\\"\"\n\t\texit 1\nesac\n"
        },
        {
          "name": "common.project",
          "type": "blob",
          "size": 6.0615234375,
          "content": "# perl highlighting\r\n\r\nLIBC       = shared\r\n#MAPFILES   = 1\r\nCONSOLE    = 1\r\n\r\n!if !defined(OPTIMIZE)\t\t# allow overriding of OPTIMIZE in parent project\r\nOPTIMIZE   = size\r\n!endif\r\n\r\nPDB        = 2\t\t\t\t# keep enabled, executable is almost the same, except embedded link to pdb file\r\n\r\n!if !defined(OLDCRT)\t\t# allow overriding of OLDCRT in parent project\r\nOLDCRT     = 0\t\t\t\t# set to 0 (or comment the line) to use \"native\" compiler's CRT\r\n\t\t\t\t\t\t\t# Changed 29.05.2021: Oodle static libraries requires more modern CRT which is not available in MSVCRT.dll\r\n!endif\r\n\r\n!if defined(TRACY)\r\nOLDCRT     = 0\t\t\t\t# tracy requires some new C++ features which aren't available with msvcrt.dll\r\n!endif\r\n\r\n#------------------------------------------------\r\n#\tCompiler-specific options\r\n#------------------------------------------------\r\n\r\nSTDDEFS    =\t\t\t\t# common defines\r\nWARNINGS   =\t\t\t\t# warnings for our source code (i.e. excluding thirs-parties), empty by default\r\n\r\nUSE_SYSTEM_LIBS = 0\r\n\r\nCPP_STD = c++14\t\t\t\t# allow modern C++ features\r\n\t\t\t\t\t\t\t#!! todo: add standard option for that\r\n\t\t\t\t\t\t\t#!! todo: the standard has been changed for clang on macOS, check for \"CPP_STD\" below!\r\n\r\n!if \"$COMPILER\" eq \"VisualC\"\r\n\t!if !defined(CPP_EXCEPT)\r\n\t\tCPP_EXCEPT = 0\t\t\t\t\t\t\t\t\t# used with WIN32_USE_SEH in Core.h\r\n\t!endif\r\n\tWINXP      = 1\t\t\t\t\t\t\t\t\t\t# we're not using any modern Win32 features, so allow to worn at WinXP\r\n\tOPTIONS = -GS- -GR-\r\n#\tWARNINGS += -W4\t\t\t\t\t\t\t\t\t\t# maximal warning level for Visual C++\r\n\tWDKCRT = $R/../Libs/msvcrt\r\n\t!if \"$OLDCRT\" eq \"1\" && -e \"$WDKCRT/msvcrt.project\"\r\n\t\tSTDDEFS += OLDCRT\t\t\t\t\t\t\t\t# used in code to distinguish which functions are available\r\n\t\tSTDDEFS += _NO_CRT_STDIO_INLINE\t\t\t\t\t# UCRT (VS 2015+): without that, all printf functions will use some \"common\" function\r\n\t\t!include $WDKCRT/msvcrt.project\r\n\t\t!if \"$VC_VER\" >= 2015\t\t\t\t\t\t\t# support for OLDCRT with modern compilers\r\n\t\t\tOPTIONS += -fp:fast\r\n\t\t\tOPTIONS += -Zc:threadSafeInit-\t\t\t\t# disable calls to C++11 thread-safe static object initializers\r\n\t\t\tSTDDEFS += _ACRTIMP_ALT=\t\t\t\t\t# remove dllimport from some CRT functions (there're just a few)\r\n\t\t!endif\r\n\t!endif\r\n\tLINKFLAGS += -largeaddressaware\t\t\t\t\t\t# allow 32-bit build to use more than 2Gb or RAM\r\n\tOPTIONS += -std:$CPP_STD\r\n!endif\r\n\r\n!if \"$COMPILER\" eq \"GnuC\"\r\n\t# linux/cygwin + GCC\r\n\tSTDLIBS   = m stdc++\t \t\t\t\t\t\t\t# libm for math.h functions\r\n\t!if \"$PLATFORM\" ne \"cygwin\"\r\n\t\tSTDLIBS += dl\t# dlopen() and friends\r\n\t\tSTDLIBS += pthread\r\n\t!endif\r\n\t!if \"$PLATFORM\" ne \"osx\"\r\n\t\tSTDLIBS += GL\r\n\t!else\r\n\t\tCPP_STD = c++2a\t\t\t\t\t\t\t\t\t# https://github.com/gildor2/UEViewer/issues/183#issuecomment-846745134\r\n\t!endif\r\n\r\n\tLIBC      = shared\r\n\tOPTIONS   = -msse2\t\t\t\t\t\t\t\t\t# enable SSE instructions\r\n\tOPTIONS   += -fno-strict-aliasing\t\t\t\t\t# required for our uint_cast()-based FP hacks (check!! taken from my Quake2)\r\n\tOPTIONS   += -fno-stack-protector\t\t\t\t\t# this will remove GLIBC_2.4 dependency\r\n\tOPTIONS   += {\r\n\t\t# enable some warnings\r\n#\t\t-Wsuggest-override\t\t\t\t\t\t\t\t# enforce use of 'override' keyword for virtual methods\r\n\t\t-Wunused-value\t\t\t\t\t\t\t\t\t# warning about expression which is occasionally typed in code and not used anywhare\r\n\t}\r\n\tCPP_OPTIONS += -std=$CPP_STD\r\n\tCPP_OPTIONS += -Wno-invalid-offsetof\r\n\tUSE_SYSTEM_LIBS = 1\r\n!endif\r\n\r\n# GCC debug build\r\n!if (\"$COMPILER\" eq \"GnuC\") && 0\r\n\t#!! should disable \"-s\" option from linker command\r\n\tOPTIONS += -g3 -fno-omit-frame-pointer -funwind-tables -fstack-protector -fno-optimize-sibling-calls\r\n\tLINKFLAGS += -rdynamic\r\n!endif\r\n\r\n\r\nDEFINES = $STDDEFS\r\n#OPTIONS += -analyze\r\n\r\n#------------------------------------------------\r\n#\tThird-party libraries\r\n#------------------------------------------------\r\n\r\nLIBINCLUDES = $R/libs/include $R/libs\r\n\r\nOBJDIR = $R/obj/libs-$PLATFORM\r\n\r\n!if (\"$OLDCRT\" eq \"1\") && (\"$COMPILER\" eq \"VisualC\")\r\n\tOBJDIR = $R/obj/libs-$PLATFORM-msvcrt\r\n!endif\r\n\r\npush(INCLUDES)\r\npush(OPTIMIZE)\r\nINCLUDES = $R/libs/nvtt\r\nLIBINCLUDES += $R/libs/nvtt\r\nOPTIMIZE = speed\r\n\r\nsources(NV_LIBS) = {\r\n#\t$R/libs/nvtt/nvcore/*.cpp\r\n\t$R/libs/nvtt/nvimage/*.cpp\r\n#\t$R/libs/nvtt/nvmath/*.cpp\r\n#\t$R/libs/nvtt/nvtt/bc6h/*.cpp\r\n#\t$R/libs/nvtt/nvtt/bc7/*.cpp\r\n}\r\n\r\npop(OPTIMIZE)\r\npop(INCLUDES)\r\n\r\n\r\n# defines for smaller zlib\r\npush(DEFINES)\r\npush(INCLUDES)\r\n\r\nDEFINES = $STDDEFS DYNAMIC_CRC_TABLE BUILDFIXED NO_GZIP\r\nINCLUDES = $R/libs/include\r\n\r\n# compression libraries\r\nsources(COMP_LIBS) = {\r\n\t# ... lzo for compressed UE3 packages\r\n\t$R/libs/lzo/lzo_init.c\r\n\t$R/libs/lzo/lzo1x_d2.c\r\n\t# ... lzx for compressed XBox360 UE3 packages\r\n\t$R/libs/mspack/lzxd.c\r\n\t# ... lz4 for Gears of War 4\r\n\t$R/libs/lz4/lz4.c\r\n}\r\n\r\n!if \"$USE_SYSTEM_LIBS\" eq \"0\"\r\n\t# ... zlib for compressed UE3/UE4 packages\r\n\t# zlib.h location: used from zlib source code and from UModel code.\r\n\t# Default location for Linux is <zlib.h>\r\n\tLIBINCLUDES += $R/libs/zlib\t\t# for using zlib in source code\r\n\tINCLUDES += $R/libs/zlib\t\t# for building zlib itself\r\n\tsources(COMP_LIBS) = {\r\n\t\t$R/libs/zlib/*.c\r\n\t}\r\n\t# ... PNG for compressed source textures\r\n\tLIBINCLUDES += $R/libs/libpng\r\n\tDEFINES = $STDDEFS PNG_USER_CONFIG\r\n\tsources(IMG_LIBS) = {\r\n\t\t$R/libs/libpng/*.c\r\n\t}\r\n!else\r\n\tSTDLIBS += z png\r\n\t!if !-e \"/usr/include/png.h\"\r\n\t\t# Probably \"png.h\" include will fail, add \"libpng\" subdirectory to include paths\r\n\t\tLIBINCLUDES += /usr/include/libpng\r\n\t!endif\r\n!endif\r\n\r\npop(INCLUDES)\r\npop(DEFINES)\r\n\r\n# SDL2\r\n!include $R/libs/SDL2/SDL2.project\r\n\r\n# oodle SDK support\r\n!include $R/libs/oodle/oodle.project\r\n\r\nsources(MOBILE_LIBS) = {\r\n\t$R/libs/PowerVR/*.cpp\r\n\t$R/libs/astc/*.cpp\r\n}\r\nLIBINCLUDES += $R/libs/PowerVR\r\n\r\n\r\nLIBINCLUDES += $R/libs/detex\r\nsources(IMG_LIBS) = {\r\n\t$R/libs/detex/*.cpp\r\n}\r\n\r\nLIBINCLUDES += $R/libs/rijndael\r\nsources(UE4_LIBS) = {\r\n\t$R/libs/rijndael/*.c\r\n}\r\n\r\n\r\n#------------------------------------------------\r\n#\tProject-specific options\r\n#------------------------------------------------\r\n\r\nOBJDIR     = $R/obj/$PRJ-$PLATFORM\r\nINCLUDES  += . $R/Core $R/Unreal $LIBINCLUDES\r\nOPTIONS   += $WARNINGS\r\n\r\n!if defined(DEBUG)\r\n\tDEFINES += MAX_DEBUG\r\n\tOBJDIR  = $OBJDIR-debug\r\n\tOPTIMIZE = none\r\n!endif\r\n\r\n!if defined(TRACY)\r\n\tDEFINES += TRACY_ENABLE\r\n\tOBJDIR  = $OBJDIR-profile\r\n\tSTDLIBS += advapi32.lib\r\n\tsources(MAIN) = {\r\n\t\tlibs/tracy/TracyClient.cpp\r\n\t}\r\n!endif\r\n"
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package_lnx.sh",
          "type": "blob",
          "size": 0.2373046875,
          "content": "#!/bin/bash\narchive=\"umodel_linux.tar.gz\"\nfilelist=\"umodel readme.txt LICENSE.txt\"\n\nfor i in $filelist; do\n\tif [ ! -f $i ]; then\n\t\techo \"ERROR: unable to find \\\"$i\\\"\"\n\t\texit 1\n\tfi\ndone\n\nrm -f $archive\ntar -cf - $filelist | gzip -f9 > $archive\n"
        },
        {
          "name": "package_win32.sh",
          "type": "blob",
          "size": 0.771484375,
          "content": "#!/bin/bash\narchive=\"umodel_win32.zip\"\nfilelist=\"umodel.exe umodel_64.exe readme.txt SDL2.dll SDL2_64.dll LICENSE.txt\"\n\n# Build 32 and 64 bit executables\n./build.sh || exit 1\n./build.sh --64 || exit 1\n\nif grep -q -E \"(PRIVATE BUILD)\" umodel.exe; then\n\techo \"ERROR: this is a private build\"\n\texit\nfi\n\nif grep -q -E \"(DEBUG BUILD)\" umodel.exe; then\n\techo \"ERROR: this is a debug build\"\n\texit\nfi\n\n# Copy SDL2.dll locally\ncp libs/SDL2/x86/SDL2.dll .\ncp libs/SDL2/x64/SDL2.dll ./SDL2_64.dll\n\n# Verify for presence of all files\nfor i in $filelist; do\n\tif [ ! -f $i ]; then\n\t\techo \"ERROR: unable to find \\\"$i\\\"\"\n\t\texit 1\n\tfi\ndone\n\n# Create an archive\nrm -f $archive\npkzipc -add $archive -level=9 $filelist\n\n# Remove SDL2.dll files, these are required only for packaging\nrm -f SDL2.dll SDL2_64.dll\n"
        },
        {
          "name": "readme.txt",
          "type": "blob",
          "size": 60.55078125,
          "content": "UE Viewer\r\n(c) Konstantin Nosov (Gildor), 2007-2022\r\n\r\n\r\nPlease support the development by making a donation here:\r\nhttps://www.gildor.org/en/donate\r\n\r\n\r\nLicense\r\n~~~~~~~\r\nUE Viewer is licensed under the MIT License.\r\n\r\n\r\nSystem requirements\r\n~~~~~~~~~~~~~~~~~~~\r\nWindows or Linux operating system\r\nx86-compatible CPU with SSE2 support\r\nOpenGL 1.1 videocard (OpenGL 2.0 is recommended)\r\nSDL 2.0 (for Linux only, windows distribution has SDL2.dll included)\r\n\r\n\r\nList of supported games\r\n~~~~~~~~~~~~~~~~~~~~~~~\r\nSupported all Unreal engine versions (1-4). The list of supported games consists of\r\nmore than 300 game titles, it is not reasonable to include it here. Some game titles\r\nhas limited support or not supported at all. Detailed information can be found here:\r\nhttps://www.gildor.org/projects/umodel/compat\r\n\r\n\r\nWeb resources\r\n~~~~~~~~~~~~~\r\nUE Viewer home page and forum:\r\nhttps://www.gildor.org/en/projects/umodel\r\nor Russian page:\r\nhttps://www.gildor.org/projects/umodel\r\n\r\nUE Viewer FAQ:\r\nhttps://www.gildor.org/projects/umodel/faq\r\n\r\nSome tutorials available here:\r\nhttps://www.gildor.org/projects/umodel/tutorials\r\n\r\nYoutube page with tutorials and news:\r\nhttps://www.youtube.com/playlist?list=PLJROJrENPVvK-V8PCTR9qBmY0Q7v4wCym\r\n\r\nOther documentation:\r\nhttps://www.gildor.org/smf/index.php/board,9.0.html\r\n\r\n\r\nName of the project\r\n~~~~~~~~~~~~~~~~~~~\r\nI've started the project in 2007 as some quick test for own skeletal animation system.\r\nIt didn't get a name first. Later I made it more \"mature\", it becate \"UT2004 model viewer\".\r\nLater more games were added, and it became \"Unreal model viewer\" - short form is \"umodel\".\r\nLater Epic Games requested me to remove their trademark \"Unreal\" from the name, so it became\r\n\"UE Viewer\", with the same \"shortcut\" name which is now used only for executable file name\r\nand when it's preferred to use shorter (unofficial) name.\r\n\r\n\r\nQuick start\r\n~~~~~~~~~~~\r\nWARNING: it's highly recommended to read the FAQ and to watch video tutorials (see the\r\nlinks above) before starting the umodel for the first time.\r\n\r\nUModel primarily is a console application, with rich command line capabilities. Easiest\r\nrun is 'umodel <package_file>', it will start umodel in a viewer mode. To see the full\r\nlist of available command line options run 'umodel -help'.\r\n\r\nYou could also drag a package file (.upk, .xxx, .ukx etc) to umodel's icon to launch\r\nthe application. However default settings will be used in this case, so if game requires\r\nsome compatibility options, this will not work.\r\n\r\nYou may also use response file to provide command line arguments. More info is in Wiki page:\r\nhttps://github.com/gildor2/UModel/wiki/Response-file\r\n\r\n\r\nGUI\r\n~~~\r\nSome time ago simple GUI has been added for Windows version of UModel. It appears when\r\nyou start UModel without arguments (for example, clicking on UModel icon from Windows\r\nExplorer). Please note that all command line option still works even in GUI mode.\r\nA startup window appears only when you have neither game path nor package name specified.\r\nIt will allow you to choose where UModel will look for files ('-path' option) as well as\r\ncompatibility options. If you will set '-path' from the command line, startup GUI will\r\nnot appear. In a case you want to specify path and show startup GUI, add option '-gui'\r\nto the command line.\r\n\r\nViewer window has user menu on the top of the window. Please review and try options\r\nprovided there. Most of them could be duplicated with keystrokes, and these key shortcuts\r\nare listed in menu.\r\n\r\n\r\nViewer mode\r\n~~~~~~~~~~~\r\nThe application is controlled with keyboard and mouse. You may see the full list of\r\nkeyboard shortcuts by pressing 'H' (Help) key. Here's the list of some shortcuts:\r\n\r\n  PgUp/PgDn        browse through loaded objects\r\n  Ctrl+S           take a screenshot into the file Screenshots/ObjectName.tga\r\n  Alt+S            take screenshot with transparent background\r\n  Ctrl+X           export all objects from the current scene\r\n  Ctrl+PgUp/PgDn   scroll onscreen texts\r\n  Shift+Up/Down    change scene FOV\r\n  Ctrl+L           switch lighting modes\r\n  Ctrl+Q           toggle visualization of debug information (text, 3D axis etc)\r\n  Ctrl+G           toggle between OpenGL 2.0 (using shaders) and OpenGL 1.1 (no shaders)\r\n  Esc              exit from the umodel\r\n\r\nYou may attach the AnimSet to the SkeletalMesh object using Ctrl+A key. Animation\r\nsequences are listed by '[' and ']' keys, playback is started with a Space key.\r\n\r\n\r\nPsk/psa export\r\n~~~~~~~~~~~~~~\r\nTo load psk or psa into the 3ds Max you'll need ActorX Importer script created by me:\r\nhttps://www.gildor.org/projects/unactorx\r\nIt has own announcements thread here:\r\nhttps://www.gildor.org/smf/index.php/topic,228.0.html\r\n\r\nSome meshes contains information which cannot fit into psk standard. For this reason I've\r\nextended the format to hold advanced information. Files in this format has extension pskx\r\nand cannot be loaded into UnrealEd or any other application with ActorX support. There's\r\nonly one tool with pskx support at the moment - ActorX Importer mentioned above.\r\n\r\n\r\nMd5mesh/md5anim export\r\n~~~~~~~~~~~~~~~~~~~~~~\r\nUmodel has possibility to export skeletal meshes and animations in idSoftware md5 format.\r\nTo use this exporter you should use command line option \"-md5\". MeshAnimation and AnimSet\r\nobjects are exported as multiple md5anim files (one file for each animation track). \"bounds\"\r\nsection in md5anim is filled with dummy data. \"hierarchy\" section also does not contain real\r\nskeleton hierarchy because Unreal engine uses hierarchy from the mesh, not from the\r\nanimation. Some md5 viewers/importers does require md5anim hierarchy, some - does not.\r\n\r\nThere is a 3ds Max md5mesh/md5anim importer script available on umodel forum:\r\nhttps://www.gildor.org/smf/index.php?topic=87.0\r\nor here\r\nhttps://www.gildor.org/downloads\r\nThis script was originally created by der_ton, but was updated by me.\r\n\r\nPlease note that psk/psa format is more powerful, and ActorX Importer script has much more\r\ncapabilities than md5 Importer.\r\n\r\n\r\nStaticMesh export\r\n~~~~~~~~~~~~~~~~~\r\nStaticMesh export is performed into psk format. This format was originally designed to hold\r\nSkeletalMesh, but umodel uses it for StaticMesh too. Exported mesh will not have a skeleton\r\nand vertex influences. Resulting psk files cannot be imported directly into the UnrealEd,\r\nso I've decided to save ot with pskx extension to avoid silly user errors. Such mesh could\r\nbe imported into 3ds Max using ActorX Importer plugin as well as ordinary psk file.\r\n\r\n\r\nMaterial export\r\n~~~~~~~~~~~~~~~\r\nMaterials are exported in a custom format. File extension is \".mat\". At the current moment,\r\nthis format is supported by ActorX Importer plugin only. Unreal engine materials are very\r\ncomplex, so it's very hard to separate a few channels (diffuse, specular, bump etc) from it.\r\nUmodel tries to accomplish this with use of some heuristics - sometimes with good results,\r\nsometimes with bad. Umodel will never export full materials (GLSL script etc). Do not expect\r\ntoo much from this feature.\r\n\r\n\r\nAudio export\r\n~~~~~~~~~~~~\r\nAudio assets can't be previewed in UModel, it doesn't have any sound library built-in. However\r\nyou can export sounds. By default, sound loading is disabled in options, so if you'll try to\r\nexport any audio object you'll get nothing. To enable audio loading, you should either pass\r\noption \"-sounds\", or check \"sounds\" option in UModel startup options window. Please note that\r\ndespite you may think that package contains audio, there are many objects in UE3 and UE4 which\r\nare related to sound rendering, but they do not contain sounds themselves. For UE3, sound\r\nobjects are SoundNodeWave, and SoundWave in UE4. In older versions of UE they have name Sound.\r\n\r\n\r\nUsed third-party libraries\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nSDL - Simple DirectMedia Layer\r\n  (c) Sam Lantinga\r\n  http://www.libsdl.org/\r\n\r\nzlib data compression library\r\n  (c) Jean-loup Gailly and Mark Adler\r\n  http://zlib.net/\r\n\r\nlibpng\r\n  (c) Glenn Randers-Pehrson\r\n  http://www.libpng.org/\r\n\r\nLZO data compression library\r\n  (c) Markus F.X.J. Oberhumer\r\n  http://www.oberhumer.com/opensource/lzo/\r\n\r\nlibmspack - a library for Microsoft compression formats\r\n  (c) Stuart Caie\r\n  https://github.com/kyz/libmspack\r\n\r\nLZ4\r\n  (c) Yann Collet\r\n  http://www.lz4.org\r\n\r\nNVIDIA Texture Tools\r\n  (c) NVIDIA\r\n  https://github.com/castano/nvidia-texture-tools\r\n\r\nPVRTexLib Library\r\n  (c) Imagination Technologies Limited\r\n  http://www.imgtec.com/powervr/insider/\r\n\r\nASTC encoder\r\n  (c) ARM Limited and Contributors\r\n  https://github.com/ARM-software/astc-encoder\r\n\r\ndetex\r\n  (c) Harm Hanemaaijer\r\n  https://github.com/hglm/detex\r\n\r\nOodle\r\n  (c) Epic Games\r\n  http://www.radgametools.com/oodle.htm\r\n\r\n\r\nChanges\r\n~~~~~~~\r\n06.01.2022\r\n- UE4.25-Plus support; use -game=ue4.25+ or select the engine in startup UI\r\n\r\n05.09.2021\r\n- UE4.27 support\r\n\r\n05.07.2021\r\n- providing Win32 and Win64 builds of UE Viewer\r\n\r\n30.05.2021\r\n- Mass Effect Legendary Edition support\r\n\r\n29.05.2021\r\n- replaced ooz library with oodle SDK shipped with UE4.27 source code\r\n\r\n06.04.2021\r\n- added UE4 SkeletalMesh socket support\r\n\r\n18.02.2021\r\n- added support for playing back animations with negative rates (playing in opposite direction)\r\n\r\n30.12.2020\r\n- hyperlinks for SkeletalMesh sub-objects: Skeleton, AnimSet, AnimSequence, tagged meshes\r\n- highlighting tagges skeletal mesh when mouse points at its name\r\n- showing properties of non-visual objects\r\n\r\n28.12.2020\r\n- support for multiple AES keys provided with UI or command line; commane line systax has been extended to\r\n  support multiple -aes=... options, or with providing a text file with multiple keys: -aes=@filename.txt\r\n\r\n12.12.2020\r\n- saving .props.txt when exporting skeletal and static meshes, and for animation\r\n\r\n22.11.2020\r\n- added option for disabling vertex mesh loading (-novert command line option)\r\n\r\n07.11.2020\r\n- UE4.26 support\r\n\r\n01.11.2020\r\n- using oo2core_5_win32.dll when internal oodle decompressor failed to process compressed block\r\n\r\n19.10.2020\r\n- removed restriction to maximal number of pak files in the game\r\n\r\n16.10.2020\r\n- updated Lineage 2 support\r\n\r\n01.09.2020\r\n- bugfix: exporting of all referenced textures from materials didn't work\r\n\r\n14.08.2020\r\n- Gears of War Ultimate Edition support\r\n\r\n31.07.2020\r\n- full Fable Legends (canceled game) support\r\n\r\n28.07.2020\r\n- use Ctrl+MouseWheel to scroll long window texts (in addition to Ctrl+PgUp/PgDn)\r\n\r\n27.07.2020\r\n- highlighting mesh material in \"show materials\" (M key) mode when mouse hovered over material name\r\n- navigation between referenced objects: material names, texture names, etc works as hyperlinks in \"M\" mode\r\n  for mesh and material; navigation back/forward over history could be done with Alt+Left/Right keys\r\n\r\n23.07.2020\r\n- Sea of Thieves support, requires game override (-game=sot)\r\n\r\n21.07.2020\r\n- UE2 Cubemap support\r\n- UE4 TextureCube support\r\n\r\n13.07.2020\r\n- multiple optimizations (mostly for multi-core CPU), could be disabled with \"-nomt\" command line option\r\n\r\n25.06.2020\r\n- recognition of duplicated files when exporting UE3 content\r\n\r\n24.06.2020\r\n- faster export when part of assets were already exported and \"don't overwrite already exported files\" is enabled\r\n\r\n22.06.2020\r\n- reading UE3/UE4 material expressions for collecting Material's parameters and their values; this extends\r\n  material outline, dump and export information\r\n\r\n30.05.2020\r\n- completed UE4.25 support\r\n\r\n15.03.2020\r\n- added UE3 iOS and WiiU sound export\r\n\r\n21.02.2020\r\n- support for UE4.25 pak file format\r\n\r\n10.01.2020\r\n- updated SMITE support\r\n\r\n05.01.2020\r\n- added Days Gone (PS4) support, required game override -game=daysgone\r\n\r\n29.12.2019\r\n- added option to disable MorphTarget loading: available in UI and with -nomorph command line option\r\n\r\n21.11.2019\r\n- added Star Wars Jedi: Fallen Order support, requires game override (-game=jedi)\r\n\r\n16.11.2019\r\n- added oodle decompression support\r\n\r\n22.10.2019\r\n- finalized UE4.23 support, initial UE4.24 support\r\n\r\n15.10.2019\r\n- loading and visualizing of UE3 and UE4 MorphTargets; switching between morphs is done with Ctrl+[ and Ctrl+]\r\n  keys\r\n\r\n13.10.2019\r\n- added full vertex color support (loading, viewing, exporting)\r\n\r\n09.10.2019\r\n- supported Borderlands 3 static meshes\r\n\r\n06.10.2019\r\n- added Kingdom Hearts III support, requires -game=kh3 -ps4\r\n\r\n17.09.2019\r\n- implemented glTF LOD export\r\n\r\n14.09.2019\r\n- added support for Borderlands 3 skeletal meshes and textures (nothing else works), requires -game=border3\r\n\r\n28.08.2019\r\n- added option for exporting textures using PNG format; could be switched on with -png command line option\r\n  or in Export Options dialog window\r\n\r\n25.08.2019\r\n- fixed UE4 masked material display\r\n\r\n22.08.2019\r\n- implemented Ascendant One support, requires -game=asc1 or override in UI\r\n\r\n17.08.2019\r\n- improved UE4 batch export of animations: now each AnimSequence stored in own psa file with the name of\r\n  AnimSequence object\r\n- logging export process with saying exact name of exported animation\r\n- optimized export of textures: avoiding multi-export when the same texture regerenced by materials etc;\r\n  in my tests export for UE4 folder performed 3+ times faster\r\n\r\n02.08.2019\r\n- more UE4.23 stuff: changes in skeletal and static mesh data formats\r\n\r\n23.07.2019\r\n- support for UE4.23 animation changes\r\n\r\n18.07.2019\r\n- UI: using tabbed dialog for options\r\n- UI: showing export and save packages options when user doing these operations, the options window could be\r\n  suppressed for next export/save\r\n\r\n11.07.2019\r\n- updated Lineage 2 SkeletalMesh support\r\n\r\n05.07.2019\r\n- added support for final version of Unreal Tournament 4 (requires game override: -game=ut4)\r\n\r\n22.06.2019\r\n- support for newer UE3 StaticMesh format\r\n\r\n12.06.2019\r\n- initial support for UE4.23\r\n\r\n13.05.2019\r\n- added Life is Strange 2 support (requires -game=lis2 override)\r\n\r\n11.05.2019\r\n- added support for New Gundam Breaker (requires game override, -game=ngb)\r\n\r\n16.04.2019\r\n- added response file support, more info: https://github.com/gildor2/UModel/wiki/Response-file\r\n  - usage: umodel @response.txt\r\n\r\n14.04.2019\r\n- improved package dialog:\r\n  - added \"open\" actions for folder\r\n  - added \"copy path\" action for package list\r\n  - added \"scan content\" for folder (so you don't need to scan everything if interested only in single folder)\r\n\r\n12.04.2019\r\n- final UE4.22 support\r\n\r\n23.03.2019\r\n- changed default texture (\"UV checker\")\r\n\r\n21.03.2019\r\n- fixed crash with some pre-UE4.13 animation tracks\r\n\r\n20.03.2019\r\n- optimized startup and content scan times when working with huge games\r\n\r\n18.03.2019\r\n- when exporting, avoiding adding numeric suffixes to files which are saved more than once whenever possible\r\n  (adding only for UE3 with special options)\r\n\r\n12.03.2019\r\n- UModel is no longer crashed when trying to open a file with wrong tag - a warning message is displayed instead\r\n\r\n10.03.2019\r\n- UE4.22 StaticMesh support\r\n\r\n06.03.2019\r\n- made error window larger and resizeable\r\n\r\n28.02.2019\r\n- memory use optimizations, package information now uses 25% less memory\r\n\r\n22.02.2019\r\n- 32-bit Windows build now can use up to 4Gb of RAM when running on 64-bit Windows\r\n\r\n06.02.2019\r\n- \"save packages\" now preserves oridinal directory directory structure; Windows version has options for selecting save\r\n  path and option for building or not directory hierarchy (for linux, same things could be changed in cfg file)\r\n\r\n08.01.2019\r\n- added Nintendo Switch texture support; activated with option \"-nsw\" or with selecting Nintendo Switch from platform\r\n  list\r\n- platform list now displayed in UI as a combobox, not as a radio button group\r\n\r\n04.01.2019\r\n- added UE4.21 support\r\n\r\n29.10.2018\r\n- UI: added content menu for file list in package dialog\r\n\r\n27.10.2018\r\n- UI: added context menu for folder list in package dialog, contains \"export\" and \"save packages\" commands\r\n- \"-export\" command line option now uses the same exporting code as GUI, so \"-export *\" will work correctly without\r\n  running out of memory\r\n- added \"-save\" command line option which saves all specified packages\r\n\r\n21.10.2018\r\n- properly work with UE4 skeletons which has scale on bones\r\n\r\n06.10.2018\r\n- sound export for UE4 attempts to save \"ue4opus\" file for streamed sounds\r\n\r\n22.08.2018\r\n- implemented glTF skeletal animation export; note that the animation should be opened in mesh viewer for that\r\n\r\n16.08.2018\r\n- an attempt to not crash when UE4 pak files has encrypted index, and AES key doesn't match\r\n\r\n01.08.2018\r\n- addeed skeletal mesh export in glTF format\r\n\r\n27.07.2018\r\n- added option for exporting static meshes to glTF 2.0 format; activated in options window or with \"-gltf\"\r\n  command line option\r\n\r\n20.07.2018\r\n- final UE4.20 support\r\n\r\n19.07.2018\r\n- some fixes for UE4 PNG texture loading\r\n\r\n15.07.2018\r\n- package selection and package version report windows are now resizable\r\n\r\n11.07.2018\r\n- exporting a .props.txt file next to .mat, it contains all material's properties\r\n\r\n28.06.2018\r\n- heavily optimized memory used by animations\r\n\r\n24.06.2018\r\n- fixed loading of UE4 .umap files\r\n- initial support for UE4.20\r\n\r\n23.06.2018\r\n- optimized amount of memory used for UE4 animations\r\n\r\n21.06.2018\r\n- added configuration file (umodel.cfg) and options window\r\n\r\n19.06.2018\r\n- added Playstation 4 platform support, activated with -ps4 command line or in GUI; credit for texture\r\n  decoding is m0xf (http://www.gildor.org/smf/index.php/topic,6221.0.html)\r\n\r\n14.06.2018\r\n- added Rocket League support, contributed by AltimorTASDK (https://github.com/gildor2/UModel/pull/73)\r\n\r\n06.06.2018\r\n- added PF_BC4 texture format support\r\n- fixed a bug: materials and referenced textures weren't exported when UModel failed to recognize at least one\r\n  texture parameter\r\n\r\n04.06.2018\r\n- added State of Decay 2 SkeletalMesh support, requires game override (-game=sod2)\r\n- linux: saving all files to the user's home (~/) directory by default\r\n\r\n29.05.2018\r\n- fixed incompatibilities with Ark: Survival Evolved and Dauntless, both games requires explicit game override\r\n\r\n19.05.2018\r\n- implemented support for loading of UE3 and UE4 png-compressed textures\r\n\r\n16.05.2018\r\n- added functionality which finds all animations for currently opened UE4 SkeletalMesh, accessible with Ctrl+A\r\n  key or via \"SkeletalMesh | Find animations\" menu\r\n\r\n13.05.2018\r\n- added viewer menu with object-specific actions\r\n\r\n01.05.2018\r\n- added UE4.20 pak file support\r\n\r\n20.04.2018\r\n- added support for loading UE4 editor SkeletalMesh assets\r\n\r\n11.04.2018\r\n- fixed long standing issue with many UE4 animation tracks caused either crash or dropping animation\r\n\r\n02.04.2018\r\n- added possibility to change shape of material preview with 'S' key\r\n- fixes some issues with material/texture preview mode (wrong lighting, wrong reflections)\r\n\r\n01.04.2018\r\n- implemented HDR texture support; textures are exported into radiance .hdr file format (RGB, no alpha channel);\r\n  initial implepemtation has been contributed by m0xf (https://github.com/gildor2/UModel/pull/60)\r\n\r\n31.03.2018\r\n- improved handling of AES keys: stripping spaces from key string, improved encryption errors reporting\r\n\r\n23.03.2018\r\n- updated for final UE4.19 version (changed SkeletalMesh format)\r\n\r\n22.03.2018\r\n- implemented full Gears of War 4 support\r\n- displaying information in viewer window about objects in loaded packages when there's nothing visual inside\r\n- improved umodel's main window title - it now contains information about umodel build version and about path\r\n  to game files\r\n- preserving all UI elements when closing Package Selection dialog, so next time you'll open it, dialog will\r\n  be in exactly the same state as when it was closed\r\n\r\n18.03.2018\r\n- implemented Gears of War 4 pak file and package support; requires game override -game=gears4 (or use UI)\r\n\r\n24.02.2018\r\n- AES encryption key could be now in hex format: 0x123456789ABCDEF (C-like format)\r\n\r\n18.02.2018\r\n- implemented Heroes of Incredible Tales (HIT) static mesh support; requires -game=hit override\r\n\r\n08.02.2018\r\n- added Paragon support (requires game override: -game=paragon)\r\n\r\n07.02.2018\r\n- implemented UE4.19 support\r\n\r\n31.01.2018\r\n- implemented loader for encrypted compressed UE4 pak files\r\n\r\n23.01.2018\r\n- added support for loading AES-encrypted UE4 pak files; AES key may be specified with command line option\r\n  -aes=key, or it will be requested by UI when needed\r\n\r\n20.01.2018\r\n- improved laptop keyboard support\r\n\r\n04.01.2018\r\n- updated UE4.18 support\r\n- displaying a warning message in UE4 SkeletalMesh viewer when Skeleton object is not loaded, and therefore\r\n  animation will not work\r\n\r\n06.12.2017\r\n- an attempt to make smoothing groups working: always exporting 1st smoothing group for all mesh faces\r\n\r\n19.11.2017\r\n- exporting \"source art\" (png) textures whenever possible - for UE3 and UE4 editor packages\r\n\r\n02.10.2017\r\n- added Fortnite support (currently requires game override)\r\n\r\n29.09.2017\r\n- added Unreal engine 4.17 support and initial UE4.18 support\r\n\r\n29.07.2017\r\n- implemented Lawbreakers support\r\n\r\n28.07.2017\r\n- added Gigantic auto detection\r\n\r\n27.07.2017\r\n- showing object's group name in viewer for UE1-UE3 games\r\n\r\n12.06.2017\r\n- added Tekken 7 support, game requires override -game=tekken7\r\n\r\n09.06.2017\r\n- added Friday the 13th: The Game support, game requires override -game=friday13\r\n\r\n16.05.2017\r\n- fixed loading of UE4 source animation assets\r\n\r\n09.05.2017\r\n- fixed bug in Win32 SDL2 caused incorrect handling of -path=\"some path\" command line option\r\n\r\n26.04.2017\r\n- added Android ETC2 texture format support\r\n\r\n25.04.2017\r\n- fixes with mesh rotation (only affects mesh display in viewer)\r\n- exporting skeletal mesh with \"-uc\" parameter will not also dump mesh socket information\r\n\r\n09.04.2017\r\n- updated UE4.16 support\r\n\r\n08.04.2017\r\n- Heavily optimized package scanner. Results: PARAGON scanned 30 times faster (reduced scan time from 2.5 min\r\n  to 4 sec) and requires 35% less memory after package scan.\r\n\r\n03.04.2017\r\n- implemented loading of Blade & Soul specific animations\r\n\r\n18.03.2017\r\n- improved handling of unversioned UE4 packages: displaying a dialog box prompting for entering engine version\r\n\r\n17.03.2017\r\n- changed support for UE4 game tags, cleaned up list of UE4 engine versions from -help and -taglist options\r\n\r\n08.03.2017\r\n- added ASTC texture format support\r\n\r\n01.03.2017\r\n- updated SDL2 to 2.0.5\r\n\r\n16.02.2017\r\n- final UE4.15 support, initial 4.16 support\r\n- added some fix to avoid crash when loading corrupted PARAGON animations\r\n\r\n06.02.2017\r\n- improved support for UE4 versioned packages\r\n\r\n01.02.2017\r\n- updated UE4.15 support\r\n\r\n31.01.2017\r\n- UE4 pak files: umodel skips encrypted files instead of throwing an error\r\n\r\n30.01.2017\r\n- added support for UE4 packages which were cooked for Event Driven Loader (UE4.14+): such packages\r\n  has separated data into .uexp file with the same name as .uasset\r\n\r\n10.01.2017\r\n- initial UE4.15 support\r\n\r\n09.01.2017\r\n- fixed incorrect decoding of UE2 skeletal mesh when it has soft and rigid parts\r\n\r\n27.12.2016\r\n- Bioshock Remastered (1&2) partial support\r\n\r\n02.12.2016\r\n- added UE4.14 support\r\n\r\n20.11.2016\r\n- exporting all referenced textures from materials, not just recognized ones\r\n- improved layout of UmodelExport directory when exporting UE4 assets\r\n\r\n07.11.2016\r\n- added simple wildcard capabilities to command line: now package names could contain \"*\" character\r\n\r\n30.10.2016\r\n- UI: added possibility to append selected packages to loaded package set\r\n\r\n28.10.2016\r\n- added UE4 animation support\r\n- removed limit to 32k packages in a game, now number of packages is unlimited\r\n\r\n19.10.2016\r\n- added UE4.13 support\r\n\r\n30.08.2016\r\n- UI: added sorting of packages in package dialog\r\n\r\n28.08.2016\r\n- improved package dialog:\r\n  - \"filter\" box now accepts multiple strings delimited with spaces\r\n  - 100x times faster \"flat view\" (noticeable for UE4 games, with 20k+ packages, especially when typing\r\n    text in \"filter\" box)\r\n\r\n18.08.2016\r\n- added UE4 sound export\r\n\r\n28.06.2016\r\n- improved \"too many unknown files\" error logic - this error will not appear for correct game paths anymore\r\n\r\n05.06.2016\r\n- implemented Devil's Third support\r\n\r\n22.05.2016\r\n- fixed loading of UE4 skeletal meshes with more than 4 bones per vertex: extra weights are dropped, and\r\n  weights are re-normalized\r\n\r\n15.05.2016\r\n- added UE4.12 support\r\n- added advanced option \"-pkgver=...\" to specify exact numeric version for package; useful when UE4 game\r\n  has mid-release engine files\r\n- game overriding for UE4 will now work only for unversioned packages; explicitly versioned packages will\r\n  ignore this option\r\n\r\n08.05.2016\r\n- implemented loading of UE4 StaticMesh from editor packages\r\n\r\n02.05.2016\r\n- added Dungeon Defenders support (-game=dundef is required)\r\n\r\n15.02.2016\r\n- fixed crash with PS3 BulletStorm packages\r\n- improved support for PS3 audio extraction\r\n\r\n11.02.2016\r\n- added SMITE encryption support; -game=smite is required\r\n\r\n06.02.2016\r\n- added XCOM 2 StaticMesh support (animation is not supported)\r\n\r\n26.01.2016\r\n- added UE4.11 support\r\n\r\n21.12.2015\r\n- reading all texture mipmaps from UE3 and UE4 packages - this speeds up content browsing a lot, especially\r\n  for games which have huge textures\r\n\r\n29.11.2015\r\n- improved support for UE4 editor packages, added support for editor SkeletalMesh\r\n\r\n29.09.2015\r\n- implemented partial support for UE4 source textures (8-bit uncompressed textures)\r\n\r\n26.09.2015\r\n- implemented support for Blacklight: Retribution textures; note: for the moment game should be overrided to\r\n  \"Tribes: Ascend\" (-game=t4)\r\n\r\n18.08.2015\r\n- improved Unreal engine 4 texture support\r\n\r\n16.07.2015\r\n- updated Lineage 2 animation support\r\n\r\n11.07.2015\r\n- added new command line syntax: \"umodel <options> <directory>\", shortcut to\r\n  \"umodel <options> -path=<directory>\"\r\n\r\n07.07.2015\r\n- optimizations of memory use, especially for export operation\r\n\r\n06.07.2015\r\n- implemented full support for Batman: Arkham Knight\r\n\r\n26.06.2015\r\n- implemented Metro Conflict support; -game=metroconf option is required\r\n\r\n20.06.2015\r\n- implemented Mortal Kombat X SkeletalMesh and StaticMesh support\r\n\r\n14.06.2015\r\n- added support for up to 8 UV sets, required for UE4 static meshes\r\n\r\n13.06.2015\r\n- added \"Save selected packages\" option for \"Tools\" button in package dialog - this allows user\r\n  to extract packages from pak and obb files\r\n\r\n12.06.2015\r\n- added support for compressed UE4 pak files\r\n- implemented UE4.8 support\r\n\r\n11.06.2015\r\n- improved UE3 Android support\r\n\r\n04.06.2015\r\n- added Might & Magic Heroes 7 support\r\n\r\n14.05.2015\r\n- added full BC7 texture format support using \"detex\" library\r\n- added support for Android ETC texture packages (DXT5 format didn't work)\r\n\r\n24.04.2015\r\n- implemented Mortal Kombat X textre support; note: all textures are in BC7 format, no extraction\r\n  possible\r\n\r\n20.04.2015\r\n- added Mortal Kombat X package support\r\n\r\n19.04.2015\r\n- added UV display mode for skeletal and static meshes, activated with Ctrl+U\r\n- improved UE4 SkeletalMesh LOD support\r\n\r\n08.04.2015\r\n- implemented support for destructible meshes: UE3 FracturedStaticMesh and UE4 DestructibleMesh\r\n\r\n07.03.2015\r\n- added Gigantic (alpha) support (-game=gigantic is required)\r\n\r\n02.02.2015\r\n- implemented Life is Strange support\r\n\r\n20.01.2015\r\n- fixed loading of bulk data from compressed UE4 packages\r\n\r\n18.01.2015\r\n- implemented UE4 SkeletalMesh support\r\n\r\n12.01.2015\r\n- implemented quick support for UE3 materials\r\n\r\n11.01.2015\r\n- fixed visual appearance of materials using BC5 textures for normal maps\r\n\r\n10.01.2015\r\n- added support for UE4 StaticMesh materials\r\n- UE4 package imports are working now\r\n\r\n09.01.2015\r\n- implemented UE4 StaticMesh support\r\n\r\n05.12.2014\r\n- implemented full support for Guilty Gear Xrd (PS3 version)\r\n\r\n23.11.2014\r\n- implemented Unreal engine 4 PAK file support\r\n\r\n22.11.2014\r\n- improved Passion Leads Army SkeletalMesh compatibility\r\n\r\n20.11.2014\r\n- added new menu items duplicating functionality previously available through keyboard shortcuts\r\n\r\n07.11.2014\r\n- replaced \"Scan ...\" buttons in package dialog with single menu button \"Tools\"\r\n\r\n03.11.2014\r\n- added \"Scan content\" button in package selection dialog which will perform analysis of all game\r\n  packages and display additional information in package list showing number of objects which are\r\n  supported by umodel\r\n\r\n31.10.2014\r\n- added support for PVRTC and DXT Android textures\r\n\r\n30.10.2014\r\n- added support for loading Android OBB files; to open them, just specify game path containing\r\n  the .obb file, and umodel will automatically scan its contents and allow working with embedded\r\n  files\r\n\r\n23.10.2014\r\n- migrated to SDL2\r\n\r\n13.10.2014\r\n- added error message dialog which would appear if umodel crashes and any of umodel windows\r\n  appeared before (so, it won't appear only in pure command line mode)\r\n\r\n12.10.2014\r\n- implemented support for UE4 textures\r\n\r\n09.10.2014\r\n- fixed bug: during batch export from GUI many objects were occasionally skipped from export\r\n- Ctrl+X didn't use export directory option (\"-out=...\")\r\n- file performance optimizations (reading packages and export)\r\n\r\n08.10.2014\r\n- implemented WWE All Stars support - everything except the animation (use -noanim option)\r\n- package scan utility supports UE4 package format\r\n\r\n06.10.2014\r\n- significantly reduced memory footprint of loaded package\r\n- closing package files when they're not needed; this allows umodel to perform batch export\r\n  on large number of packages (previously there was an error \"unable to open file\")\r\n\r\n30.09.2014\r\n- initial implementation of menu for the main window\r\n\r\n26.09.2014\r\n- implemented The Vanishing of Ethan Carter support; requires overriding of game either with\r\n  -game=vec command line option or with UI\r\n\r\n23.09.2014\r\n- added package version scanner to package selection dialog (UI analogue of \"pkgtool\")\r\n\r\n13.09.2014\r\n- updated Fable: Anniversary detection code\r\n\r\n10.09.2014\r\n- filling some DDS header fields when exporting DXT textures\r\n\r\n08.09.2014\r\n- UI: pressing Ctrl+A on package list will select all packages\r\n- UI: displaying progress window while loading or exporting objects\r\n- by default, umodel now exports all files to the directory {current_path}/UmodelExport\r\n\r\n06.09.2014\r\n- UI: added possibility to select multiple packages; these packages could be either loaded\r\n  for viewing or exported in batch mode\r\n- passing a package name in command line without -path=... option will not pop up a startup\r\n  UI anymore\r\n\r\n05.09.2014\r\n- UI: added \"flat\" mode for package selection, with no directory tree, all packages are in\r\n  single list\r\n- UI: added package name filter\r\n\r\n01.09.2014\r\n- first public release of umodel with UI; to show the UI, launch umodel without arguments;\r\n  to show package selection dialog at any time, press 'O' key\r\n\r\n31.08.2014\r\n- improved -pkginfo output: displaying class statistics for loaded package(s)\r\n- displaying -pkginfo when trying to load a package with no supported objects\r\n\r\n28.07.2014\r\n- implemented Seal of Vajara skeletal mesh support (-game=sov is required)\r\n\r\n15.06.2014\r\n- implemented Murdered: Soul Suspect support\r\n- changed default texture appearance\r\n\r\n01.06.2014\r\n- added initial Unreal engine 4 package support\r\n\r\n02.05.2014\r\n- updated material support for recent Lineage 2 version\r\n- implemented Tao Yuan texture support; \"-game=taoyuan\" option is required\r\n\r\n02.04.2014\r\n- fixed incompatibility with some Thief packages\r\n\r\n24.03.2014\r\n- implemented Thief static mesh support\r\n- added support for viewing BC7 textures, when hardware supports it\r\n- improved stability to OpenGL errors\r\n\r\n07.02.2014\r\n- improved UE2 SkeletalMesh compatibility\r\n- much faster generation on UE2 mesh normals\r\n\r\n05.02.2014\r\n- updated Fable autodetection - supports Fable Anniversary\r\n\r\n02.02.2014\r\n- support for DXT3 and DXT5 textures from recent Unreal 1 patch\r\n\r\n29.11.2013\r\n- improved compatibility with UE2 animations\r\n\r\n25.11.2013\r\n- fixed issue with incompatibility of Bioshock compressed textures with some videocard drivers\r\n\r\n25.10.2013\r\n- implemented Batman: Arkham Origins support\r\n\r\n12.10.2013\r\n- implemented The Bureau: XCOM Declassified support\r\n\r\n29.09.2013\r\n- added \"-nolightmap\" option to prevent lightmap textures from being loaded and exported\r\n\r\n31.08.2013\r\n- implemented Lost Planet 3 support\r\n\r\n11.08.2013\r\n- added experimental compression method detection, so perhaps -lzo option is not needed anymore\r\n\r\n14.06.2013\r\n- implemented Remember Me support\r\n\r\n30.05.2013\r\n- implemented Injustice: Gods Among Us support (except animation)\r\n\r\n04.05.2013\r\n- implemented Bioshock Infinite support (all but animations)\r\n\r\n21.02.2013\r\n- added \"-version\" option to display brief umodel build information\r\n\r\n20.02.2013\r\n- implemented Gears of War: Judgment support; \"-game=gowj\" option is required\r\n\r\n12.02.2013\r\n- Aliens: Colonial Marines is fully supported\r\n\r\n07.02.2013\r\n- umodel will detect platform by the name of \"Cooked<PlatformName>\" directory when possible\r\n- implemented support for Android's ETC1 compressed textures\r\n\r\n06.02.2013\r\n- implemented full support for America's Army 2 (\"-game=aa2\" option is required)\r\n\r\n16.01.2013\r\n- improved Splinter Cell 4 (Double Agent) support\r\n\r\n15.01.2013\r\n- umodel should no longer crash with error \"Too much unknown files\" when game path includes\r\n  files extracted by umodel\r\n\r\n29.12.2012\r\n- implemented Passion Leads Army full support\r\n\r\n25.12.2012\r\n- fixed bug in UE2 SkeletalMesh verification code caused \"bad LOD/base mesh\" errors\r\n- reduced amount of log output in a case of missing packages\r\n\r\n18.12.2012\r\n- implemented Storm Warriors Online support\r\n\r\n14.12.2012\r\n- Hawken (beta) is fully supported\r\n\r\n21.11.2012\r\n- implemented DmC: Devil May Cry (XBox360 demo) SkeletalMesh support\r\n\r\n23.10.2012\r\n- implemented Fable: The Journey support\r\n\r\n22.10.2012\r\n- implemented Vanguard: Saga of Heroes support; \"-game=vang\" option is required\r\n\r\n16.10.2012\r\n- fixed bug in LZX decompression code causing crashes in some cases\r\n\r\n10.10.2012\r\n- implemented support for Dishonored (except animations)\r\n\r\n26.09.2012\r\n- implemented Transformers sounds support\r\n- FSB sound format is now recognized\r\n\r\n20.09.2012\r\n- implemented Borderlands 2 support\r\n\r\n18.09.2012\r\n- implemented Transformers: Fall of Cybertron support\r\n\r\n06.09.2012\r\n- fixed incompatibility of exported DDS with UE2's UnrealEd\r\n\r\n17.08.2012\r\n- improved compatibility with UE2 SkeletalMesh\r\n\r\n03.07.2012\r\n- implemented Tribes: Ascend texture support\r\n\r\n25.06.2012\r\n- improved compatibility with some UE2 games\r\n\r\n04.06.2012\r\n- improved Blade & Soul rendering\r\n\r\n28.05.2012\r\n- updated Special Force 2 (Tornado Force) support\r\n\r\n27.05.2012\r\n- implemented Tao Yuan (beta) support - everything but textures is supported\r\n\r\n26.05.2012\r\n- preventing umodel from opening non-package files from the command line (tfc, blk etc)\r\n\r\n23.05.2012\r\n- improved support for Mass Effect 3 animation (more animations are available now)\r\n\r\n22.05.2012\r\n- implemented Special Force 2 support\r\n\r\n11.05.2012\r\n- implemented Gunslayer Legend Texture2D support; \"-game=gunsl\" is required\r\n- fixed some problems with non-English keyboards\r\n\r\n27.04.2012\r\n- updated Blade & Soul support for CBT3\r\n\r\n16.04.2012\r\n- fixed incompatibility with some UE2 games\r\n\r\n22.03.2012\r\n- updated support for the February 2012 UDK\r\n\r\n21.03.2012\r\n- fixed crash in StaticMesh with recent Lineage 2 update\r\n\r\n20.03.2012\r\n- 'Shift'+'Up'/'Down' key could be used to change scene FOV\r\n\r\n19.03.2012\r\n- 'Ctrl+Q' key will toggle visualization of debug information (text, 3D axis etc)\r\n- 'Alt+S' key will produce screenshot with transparent background\r\n\r\n07.03.2012\r\n- implemented Mass Effect 3 support\r\n\r\n05.03.2012\r\n- sharing vertices with the same position and normal when exporting psk file\r\n\r\n02.03.2012\r\n- implemented support for The Bourne Conspiracy animations\r\n\r\n28.02.2012\r\n- implemented support for Transformers: War for Cybertron and Transformers: Dark of the Moon\r\n  animation\r\n\r\n20.02.2012\r\n- 'F' key will focus camera on SkeletalMesh (useful for animations with root motion)\r\n\r\n17.02.2012\r\n- implemented Batman: Arkham City animation support\r\n\r\n13.02.2012\r\n- added option \"-obj=<object>\" to specify any number of objects to load\r\n- added option \"-anim=<object>\" to specify AnimSet which will be automatically attached to\r\n  SkeletalMesh objects\r\n\r\n07.02.2012\r\n- eliminated -pskx option requirement - extra UV sets are stored in standard ActorX 2010 format\r\n\r\n31.01.2012\r\n- displaying real (cooked) texture size in the material viewer\r\n\r\n30.01.2012\r\n- umodel will try to find cooked resources in startup packages with non-standard name\r\n  (not just \"startup_int.xxx\" etc) which are specified using \"-pkg=...\" option\r\n\r\n25.01.2012\r\n- implemented Brothers in Arms: Hell's Highway animation support\r\n\r\n24.01.2012\r\n- implemented Rise of the Argonauts and Thor: God of Thunder animation support\r\n\r\n19.01.2012\r\n- implemented Batman: Arkham City support (everything but animations)\r\n\r\n11.01.2012\r\n- updated support for recent Battle Territory Online version\r\n\r\n10.01.2012\r\n- command line arguments now may be specified in any order; before that, all options had to\r\n  go before the package name; example: \"umodel <package_name> -meshes\" (did not work before)\r\n\r\n14.12.2011\r\n- implemented XBox360 XMA audio export\r\n\r\n05.12.2011\r\n- implemented XBox360 DDS texture export\r\n\r\n01.12.2011\r\n- implemented DDS texture export, activated with -dds option (used for DXT textures only)\r\n\r\n29.11.2011\r\n- fixed incompatibility with SkeletalMesh from recent UE3\r\n- improved on-screen layout of the animation information\r\n\r\n26.11.2011\r\n- implemented support for Batman: Arkham City packages\r\n\r\n25.11.2011\r\n- exporter improvements:\r\n  - no more crashes when umodel is unable to create output file due to invalid character etc\r\n  - added option \"-nooverwrite\" to prevent existing files from being overwritten; this may\r\n    be useful to speedup export process when the same object could be exported multiple times\r\n    from different packages\r\n  - umodel will save mesh with .psk extension when \"-pskx\" option is specified but there is\r\n    no format extension required, and it will save as .pskx when it is not possible to store\r\n    mesh as .psk, even when \"-pskx\" is not specified\r\n  - tga: no more zero-length tga files, at least 1x1 correct tga image will be created in a\r\n    case of error\r\n\r\n23.11.2011\r\n- implemented support for SkeletalMesh with more than 64k vertices\r\n\r\n21.11.2011\r\n- major rewriting of SkeletalMesh subsystem; implemented support for multiple UV sets,\r\n  which can be switched in viewer by 'U' key and exported to psk when \"-pskx\" option is\r\n  supplied\r\n\r\n17.11.2011\r\n- added option \"-log=filename\" to write whole umodel output to the specified file\r\n\r\n13.11.2011\r\n- fixed AnimRotationOnly for Mass Effect\r\n- displaying animation translation mode on the screen\r\n- controlling translation mode with 'Ctrl+R' key\r\n\r\n09.11.2011\r\n- multipart mesh support improvements:\r\n  - highlighting current mesh in a viewer in multipart mesh rendering mode\r\n  - taking into account bounds of all meshes of multipart mesh when positioning camera\r\n  - Ctrl+X in a viewer will export all objects which are currently shown on the scene\r\n\r\n08.11.2011\r\n- animation system were rewritten\r\n  - implemented support for UE3 rotation-only tracks\r\n  - removed export into psax format - now everything is saved into psa format, additional\r\n    attributes are stored in the text configuration file near the psa file\r\n- improved positioning of the mesh in a viewer\r\n\r\n06.11.2011\r\n- major rewriting of the StaticMesh subsystem\r\n  - implemented UE3 LOD support:\r\n    - LODs are exported when \"-lods\" switch is passed to the command line\r\n    - LODs can be switched in the viewer with 'L' key\r\n  - using tangents from UE3 mesh instead of calculating them\r\n  - implemented loading of all UV sets instead of only the first one, can switch them in the\r\n    viewer with 'U' key\r\n  - implemented export of all UV sets\r\n\r\n21.10.2011\r\n- implemented support for more than 64k indices (more than 22k triangles) for UE3 StaticMesh\r\n\r\n25.09.2011\r\n- added new exporter options \"-uncook\" and \"-groups\"\r\n\r\n24.09.2011\r\n- implemented APB: Reloaded skeletal mesh support\r\n\r\n19.09.2011\r\n- updated support for the August 2011 UDK\r\n\r\n15.09.2011\r\n- no more errors with old GLSL systems\r\n\r\n13.08.2011\r\n- implemented Battle Territory Online sound support\r\n\r\n08.08.2011\r\n- implemented APB: Reloaded package support\r\n\r\n21.07.2011\r\n- updated support for the June 2011 UDK\r\n\r\n27.06.2011\r\n- implemented Transformers: Dark of the Moon support\r\n\r\n24.06.2011\r\n- implemented Shadows of the Damned support\r\n\r\n17.06.2011\r\n- fixed Alice: Madness Returns compatibility issue\r\n\r\n01.06.2011\r\n- implemented Dungeons & Dragons: Daggerdale support; \"-game=dnd\" is required\r\n\r\n31.05.2011\r\n- implemented Hunted: The Demon's Forge support; \"-game=hunt\" is required\r\n\r\n19.05.2011\r\n- updated Nurien support\r\n\r\n13.05.2011\r\n- software skinning code were remade with use of SSE instructions, now works 4 times faster\r\n\r\n07.05.2011\r\n- implemented Medal of Honor: Airborne StaticMesh support\r\n\r\n27.04.2011\r\n- implemented Blade & Soul CBT1 support\r\n- limited renderer FPS to reduce CPU usage\r\n\r\n24.04.2011\r\n- fixed bugs in recent UE3 SkeletalMesh code (GOW3 beta support fixed)\r\n\r\n21.04.2011\r\n- implemented Mortal Kombat (2011) support; animations are not supported, PS3 SkeletalMesh\r\n  is not supported\r\n- implemented Borderlands animation support\r\n\r\n12.04.2011\r\n- fixed crash in exporter when exported object has unicode name\r\n\r\n08.04.2011\r\n- win32 version has upgraded to use SDL 1.3 and got some improvements:\r\n  - Alt+Enter will toggle fullscreen mode\r\n  - minimized umodel will no more waste CPU time\r\n\r\n06.04.2011\r\n- added ScaleForm SwfMovie export (gfx files), activated with \"-3rdparty\"\r\n- added FaceFXAsset and FaceFXAnimSet export (fxa files), activated with \"-3rdparty\"\r\n- added \"-notgacomp\" option to disable exported TGA image compression (required for\r\n  playback of extracted gfx files using ScaleForm FxMediaPlayer)\r\n- implemented XIII SkeletalMesh and texture support\r\n\r\n02.04.2011\r\n- fixed problems with ATI OpenGL drivers\r\n\r\n27.03.2011\r\n- implemented looking for resources in \"startup_xxx\" package\r\n\r\n26.03.2011\r\n- added \"-materials\" switch to exclude textures from viewing\r\n\r\n25.03.2011\r\n- improved UE material emissive rendering\r\n- implemented UE3 cubemap (TextureCube) support\r\n- improved mesh positioning in a viewer\r\n- changed viewport background color\r\n\r\n17.03.2011\r\n- implemented DC Universe Online TFC texture support\r\n- implemented Homefront support (StaticMesh is not supported)\r\n\r\n12.03.2011\r\n- implemented Enslaved PS3 support\r\n\r\n11.03.2011\r\n- updated support for the March 2011 UDK\r\n\r\n24.02.2011\r\n- fixed compatibility with some Bulletstorm animations\r\n- animation exporter will warn user about requirement of the psax format when needed\r\n\r\n09.02.2011\r\n- implemented UE1 and UE2 sound support\r\n\r\n06.02.2011\r\n- implemented Singularity StaticMesh support\r\n- implemented UE3 audio (SoundNodeWave) export, activated with \"-sounds\" option\r\n\r\n05.02.2011\r\n- added switches to override compression method of the fully compressed packages:\r\n  -lzo, -zlib, -lzx\r\n- implemented Undertow support; requires \"-game=undertow -lzo\" switches\r\n\r\n02.02.2011\r\n- fixed Mirror's Edge compatibility issue\r\n\r\n29.01.2011\r\n- added U8V8 and BC5 texture format support\r\n- improved rendering of some UE3 materials\r\n\r\n28.01.2011\r\n- updated support for the latest UE3 SkeletalMesh\r\n\r\n26.01.2011\r\n- implemented Bulletstorm support\r\n\r\n10.01.2011\r\n- implemented support for The Bourne Conspiracy (everything but animations)\r\n\r\n09.01.2011\r\n- updated Battle Territory Online support\r\n\r\n08.01.2011\r\n- implemented EndWar package, texture, skeletal and static mesh support (requires\r\n  \"-game=endwar\")\r\n\r\n30.12.2010\r\n- updated TERA: The Exiled Realm of Arborea autodetection\r\n\r\n29.12.2010\r\n- implemented Fury support\r\n\r\n27.12.2010\r\n- implemented DC Universe Online support\r\n\r\n21.12.2010\r\n- Splinter Cell 4 (Double Agent) SkeletalMesh support is implemented (requires \"-game=scell\")\r\n- implemented support for Undying textures (requires \"-game=undying\")\r\n\r\n16.12.2010\r\n- implemented support for LightMapTexture2D objects\r\n- command line \"umodel <package> <object>\" will now find all objects with the name\r\n  <object> (not only the first one)\r\n- implemented support for Splinter Cell 3 and 4 packages (requires \"-game=scell\")\r\n\r\n14.12.2010\r\n- implemented support for Turok StaticMesh and animation\r\n\r\n13.12.2010\r\n- optimized PVRTC decompression code - works 3.5 times faster\r\n- implemented UE3/iOS material specularity\r\n\r\n12.12.2010\r\n- implemented iOS (iPhone/iPad) texture support, activated with \"-ios\" option\r\n\r\n09.12.2010\r\n- updated support for recent versions of the XBox360 UE3\r\n- updated TERA: The Exiled Realm of Arborea support\r\n- \"-noxbox\" option has been replaced with \"-ps3\" switch\r\n\r\n29.11.2010\r\n- implemented support for the recent UE3 animations (September 2010+ UDK)\r\n- implemented support for the Destroy All Humans! Path of the Furon\r\n\r\n26.11.2010\r\n- updated UDK support for November 2010 version\r\n\r\n16.11.2010\r\n- implemented Berkanix support\r\n\r\n07.11.2010\r\n- improved multipart mesh display: Ctrl+T will tag/untag mesh, supports animations for\r\n  all parts\r\n- added \"-pkg=<package>\" option to load extra package (may be useful when animation is\r\n  placed separately from mesh)\r\n\r\n24.10.2010\r\n- updated Land of Chaos Online (LOCO) support\r\n\r\n22.10.2010\r\n- implemented support for the recent UE3 materials\r\n\r\n15.10.2010\r\n- fixed bug reading UE3 SkeletalMesh with multiple UV sets\r\n\r\n11.10.2010\r\n- implemented Medal of Honor 2010 support\r\n\r\n06.10.2010\r\n- added \"-out=directory\" option to specify place where to export data (otherwise export\r\n  will be made into the current directory)\r\n\r\n04.10.2010\r\n- implemented Enslaved: Odyssey to the West StaticMesh support\r\n\r\n03.10.2010\r\n- improved XBox360 Bioshock support:\r\n  - disabled parsing of Havok data for XBox360 version of Bioshock (prevents umodel\r\n    from crash)\r\n  - implemented support for XBox360 version of Bioshock textures\r\n\r\n01.10.2010\r\n- implemented Enslaved: Odyssey to the West SkeletalMesh support\r\n\r\n30.09.2010\r\n- updated Mortal Online support\r\n\r\n16.08.2010\r\n- suppressed useless message \"WARNING: Export object ...: unsupported type ...\"\r\n\r\n30.07.2010\r\n- updated UDK support for July 2010 version\r\n\r\n27.07.2010\r\n- implemented game autodetection override with \"-game=tag\" switch, list of possible\r\n  game tags can be obtained with \"-taglist\" option\r\n- implemented SWAT 4 support (requires \"-game=swat4\" option)\r\n\r\n\r\n23.07.2010\r\n- implemented pskx/psax mesh and animation export - activated by \"-pskx\" command\r\n  line switch; pskx and psax formats are supported by ActorX Importer 1.10 and newer\r\n\r\n14.07.2010\r\n- skeletal mesh LODs will have reduced skeleton (removing unused bones)\r\n\r\n02.07.2010\r\n- implemented Transformers: War for Cybertron SkeletalMesh support\r\n\r\n30.06.2010\r\n- implemented Transformers: War for Cybertron StaticMesh support\r\n\r\n25.06.2010\r\n- implemented Transformers: War for Cybertron package and texture support\r\n\r\n24.06.2010\r\n- implemented Unreal Championship 1 package and animation support\r\n\r\n19.06.2010\r\n- implemented APB SkeletalMesh and StaticMesh support\r\n\r\n29.05.2010\r\n- implemented APB package and Texture2D support\r\n\r\n28.05.2010\r\n- implemented Alpha Protocol support\r\n\r\n05.05.2010\r\n- implemented support for TERA: The Exiled Realm of Arborea\r\n\r\n03.05.2010\r\n- updated UDK support for April 2010 version\r\n\r\n24.04.2010\r\n- updated Army of Two: the 40th Day detection code\r\n\r\n17.04.2010\r\n- updated UDK support up to March 2010 version\r\n\r\n14.04.2010\r\n- added \"-noxbox\" switch which can be used to disable XBox 360 texture decryption\r\n  (may be useful to load ps3 packages)\r\n- implemented support for UE3 animation compression \"method #5\"\r\n\r\n12.04.2010\r\n- implemented AVA Online StaticMesh support\r\n\r\n03.04.2010\r\n- implemented Battle Territory Online support\r\n\r\n23.03.2010\r\n- implemented Star Wars: Republic Commando animation support\r\n\r\n11.03.2010\r\n- implemented attachment socket support for UE3 SkeletalMesh\r\n- umodel usage page: changed appearance of list of supported game titles\r\n- fixed annoying \"WARNING: Unknown class 'Package' for object ...\"\r\n\r\n10.03.2010\r\n- added new SkeletalMesh exporter option \"-lods\" - allows to export lower mesh LODS\r\n  as well as basic mesh\r\n\r\n09.03.2010\r\n- implemented support for Rainbow 6: Vegas 2 packages\r\n- implemented support for oldest UE3 Texture2D, SkeletalMesh and StaticMesh formats\r\n\r\n08.03.2010\r\n- implemented Star Wars: Republic Commando SkeletalMesh and StaticMesh support\r\n\r\n04.03.2010\r\n- some fixes in Bioshock-specific code\r\n\r\n23.02.2010\r\n- implemented Legendary: Pandora's Box SkeletalMesh support\r\n\r\n21.02.2010\r\n- implemented support for loading external Unreal Championship 2 animations\r\n\r\n18.02.2010\r\n- implemented Bioshock 2 SkeletalMesh and StaticMesh support\r\n\r\n15.02.2010\r\n- implemented Bioshock 2 package support\r\n\r\n08.02.2010\r\n- added Mass Effect (1) for XBox 360 support (updated autodetection code)\r\n\r\n07.02.2010\r\n- implemented support for Unreal Championship 2 animations\r\n\r\n29.01.2010\r\n- implemented Huxley StaticMesh support\r\n\r\n24.01.2010\r\n- implemented TNA iMPACT! package support\r\n\r\n23.01.2010\r\n- implemented Mass Effect 2 support\r\n\r\n20.01.2010\r\n- implemented Dark Void support (except StaticMesh)\r\n\r\n11.01.2010\r\n- implemented Army of Two: the 40th Day package and SkeletalMesh support\r\n\r\n05.01.2010\r\n- remade lighting for StaticMesh objects with normalmap support\r\n- using better normals for UE3 SkeletalMesh\r\n\r\n30.12.2009\r\n- implemented StaticMesh support for the following games:\r\n  - Mortal Kombat vs. DC Universe\r\n  - BlackSite: Area 51\r\n  - Borderlands\r\n\r\n29.12.2009\r\n- implemented StaticMesh support for the following games:\r\n  - Batman: Arkham Asylum\r\n  - Mass Effect\r\n  - The Last Remnant\r\n\r\n27.12.2009\r\n- implemented support for UE3 StaticMesh (versions from GoW1_XBox360 to UDK)\r\n\r\n15.12.2009\r\n- implemented Land of Chaos Online (LOCO) support\r\n\r\n11.12.2009\r\n- updated Borderlands support for DLC\r\n\r\n06.12.2009\r\n- implemented bloom rendering effect\r\n\r\n23.11.2009\r\n- implemented Frontlines: Fuel of War support\r\n\r\n21.11.2009\r\n- implemented Wheelman package support\r\n\r\n20.11.2009\r\n- implemented Star Wars: Republic Commando package support\r\n- implemented AVA Online package and SkeletalMesh support\r\n\r\n17.11.2009\r\n- implemented 50 Cent: Blood on the Sand support\r\n\r\n12.11.2009\r\n- implemented Magna Carta 2 support\r\n\r\n06.11.2009\r\n- implemented UDK support\r\n\r\n03.11.2009\r\n- implemented Borderlands Texture2D and SkeletalMesh support\r\n\r\n28.10.2009\r\n- filtering output spam from ATI GLSL compiler\r\n- UE2 renderer: improved complex material support (Shader, Combiner)\r\n\r\n27.10.2009\r\n- completely rewritten UE2 renderer:\r\n  - support normalmaps for Tribes: Vengeance and Bioshock meshes\r\n  - support specular mask\r\n  - export UE2 materials\r\n\r\n23.10.2009\r\n- implemented Tribes: Vengeance, Bioshock and Mass Effect compressed normalmap support\r\n  (DXT5n and 3Dc/ATI2 texture compressions)\r\n- Ctrl+S will take screenshot into file Screenshots/ObjectName.tga\r\n\r\n21.10.2009\r\n- fixed translucent surface drawing (not erased by opaque surfaces)\r\n- skeletal mesh LOD model drawing now have full features (show normals, influences\r\n  etc)\r\n\r\n17.10.2009\r\n- renderer: implemented support for material light emission\r\n- implemented UE3 material export (*.mat file, custom format)\r\n\r\n16.10.2009\r\n- renderer: implemented specular and opacity map support\r\n\r\n15.10.2009\r\n- integrated GLSL Validator to check compatibility with GLSL standard\r\n- improved compatibility with 3DLabs (and ATI) GLSL\r\n\r\n13.10.2009\r\n- renderer: implemented normalmap (bumpmap) support for UE3 materials\r\n\r\n11.10.2009\r\n- remade skeletal mesh drawing; now LODs supports lighting\r\n\r\n07.10.2009\r\n- implemented OpenGL 2.0 shader support; can be disabled/enabled on-fly with\r\n  'Ctrl+G' key (switch to fixed pipeline and back)\r\n\r\n29.09.2009\r\n- implemented StaticMesh export (psk format)\r\n\r\n17.09.2009\r\n- implemented Stranglehold SkeletalMesh support\r\n\r\n15.09.2009\r\n- implemented Stranglehold package support\r\n\r\n14.09.2009\r\n- implemented Crime Craft SkeletalMesh support\r\n\r\n11.09.2009\r\n- implemented Batman: Arkham Asylum animation support\r\n\r\n10.09.2009\r\n- implemented Batman: Arkham Asylum SkeletalMesh support\r\n- added code to avoid \"... unread bytes\" when loading Texture2D from unknown UE3 games\r\n  (now Damnation is fully supported)\r\n\r\n03.09.2009\r\n- implemented full support for UE3 forced exports (loading from another packages)\r\n\r\n01.09.2009\r\n- implemented new UE3 SkeletalMesh and animation support (tested with Mortal Online)\r\n\r\n27.08.2009\r\n- implemented Mass Effect animation support\r\n\r\n26.08.2009\r\n- implemented Mortal Online package support\r\n- implemented Mirror's Edge animation support\r\n\r\n03.08.2009\r\n- implemented X-Men Origins: Wolverine animations support\r\n\r\n27.07.2009\r\n- implemented Nurien support\r\n\r\n30.06.2009\r\n- Bioshock: implemented support for FacingShader class and hi-res textures\r\n\r\n29.06.2009\r\n- Bioshock: implemented SkeletalMesh support\r\n\r\n26.06.2009\r\n- Bioshock: implemented parsing of Havok data structures\r\n\r\n10.06.2009\r\n- Bioshock: implemented quick support for materials\r\n\r\n09.06.2009\r\n- Bioshock: implemented static mesh support\r\n\r\n08.06.2009\r\n- Tribes: Vengeance: implemented static mesh support\r\n\r\n06.06.2009\r\n- Bioshock: implemented package support\r\n\r\n29.05.2009\r\n- improved UE3 material rendering (better diffuse texture detection)\r\n- implemented Army of Two SkeletalMesh support\r\n\r\n28.05.2009\r\n- creating subdirectories when exporting data from packages\r\n\r\n26.05.2009\r\n- implemented support for loading UE3 fully compressed packages (mostly used for *.u)\r\n\r\n25.05.2009\r\n- exporter improvements\r\n  - correct exporting of skeletal meshes with unregistered materials (both psk and md5mesh)\r\n  - correct handling of duplicates of skeletal mesh bone names (md5mesh only)\r\n  - when exporting 2 objects with the same name index suffix (_2, _3 etc) will be appended\r\n    to the filename\r\n\r\n22.05.2009\r\n- implemented support for Mortal Kombat vs. DC Universe (package, texture, SkeletalMesh)\r\n\r\n20.05.2009\r\n- implemented support for old UE3 property formats\r\n\r\n18.05.2009\r\n- implemented support for BlackSite: Area 51 SkeletalMesh\r\n\r\n15.05.2009\r\n- implemented support for Zlib-compressed UE3 packages\r\n\r\n14.05.2009\r\n- implemented support for Blacksite: Area 51 packages\r\n\r\n08.05.2009\r\n- implemented support for Huxley\r\n\r\n07.05.2009\r\n- better game root autodetection when \"-path\" is not specified\r\n\r\n06.05.2009\r\n- implemented StaticMesh support for UT2003/2004 and UE2Runtime\r\n- added \"-nostat\" command line switch to disable StaticMesh loading\r\n\r\n29.04.2009\r\n- implemented support for some kind of unknown UE2 SkeletalMesh-es\r\n  (supported Rainbow 6: Raven Shield)\r\n\r\n27.04.2009\r\n- implemented support for Mass Effect SkeletalMesh\r\n\r\n17.04.2009\r\n- implemented support for The Last Remnant animations\r\n\r\n09.04.2009\r\n- improved stability of loading bad UE3 animation tracks (GOW1 Geist_Reaver)\r\n\r\n08.04.2009\r\n- implemented bone influence visualization for SkeletalMesh (activated with key 'I')\r\n\r\n07.04.2009\r\n- fixed texture mapping for UE3 SkeletalMesh LODs\r\n\r\n24.03.2009\r\n- implemented export of skeletal mesh and animation to md5mesh/md5anim format\r\n  (activated with \"-md5\" command line switch)\r\n- psk export: when possible, real material names are used instead of \"material_N\"\r\n\r\n19.03.2009\r\n- faster (almost 2x) UE3 mesh loading\r\n- added simple path autodetection from full package filename\r\n\r\n18.03.2009\r\n- completely rewritten \"-path\" handling - now works with UE3 games too\r\n- significantly faster (10 times) UE2 package loading\r\n\r\n17.03.2009\r\n- added \"-meshes\" command line switch to disable material viewer (object browser\r\n  will iterate meshes only)\r\n- added \"-uc\" command line switch to allow creating scripts for exported meshes\r\n  (was created unconditionally before)\r\n- improved initial positioning of UE3 mesh in viewer\r\n\r\n16.03.2009\r\n- implemented support for UE3 texture cache (textures.tfc) - for XBox360 games\r\n- improved GOW2 animation support\r\n\r\n13.03.2009\r\n- implemented support for GOW2 animations\r\n\r\n12.03.2009\r\n- implemented support for animations, compressed with \"remove every second key\"\r\n  algorithm\r\n\r\n11.03.2009\r\n- implemented support for loading compressed XBox360 packages\r\n\r\n05.03.2009\r\n- restoring UE3 mesh from GPU skin when needed\r\n- added \"-notex\" command line option to prevent Texture/Texture2D class loading in a\r\n  case of unsupported data format\r\n\r\n26.02.2009\r\n- 'Ctrl+A' key will switch animations sets for current skeletal mesh\r\n- implemented support for loading XBox360 packages\r\n\r\n25.02.2009\r\n- implemented support for UE3 AnimSet (all compression algorithms are supported except\r\n  ACF_Float32NoW)\r\n\r\n23.02.2009\r\n- implemented support for UE3 SkeletalMesh lods\r\n- fixed duplicate weights for some UE3 SkeletalMesh vertices\r\n- fixed zooming with right mouse button\r\n\r\n19.02.2009\r\n- implemented quick support for UE3 Material and MaterialInstanceConstant texturing\r\n  (diffuse only)\r\n- significantly improved mesh rendering speed\r\n\r\n17.02.2009\r\n- writing uc-script when exporting SkeletalMesh\r\n\r\n16.02.2009\r\n- implemented Mirror's Edge SkeletalMesh support\r\n\r\n11.02.2009\r\n- implemented UE3 SkeletalMesh support\r\n- releasing OpenGL texture memory when closing material viewer (smaller memory usage)\r\n\r\n09.02.2009\r\n- fixed bug with Splinter Cell animation loading (code was conflicted with\r\n  UE2Runtime animations)\r\n- fixed loading UE3 textures with missing first mipmap levels\r\n- implemented support for TEXF_L8 (UE2) and PF_G8 (UE3) greyscale texture formats\r\n\r\n03.02.2009\r\n- added \"-nomesh\" command line option to prevent SkeletalMesh class loading in\r\n  a case of unsupported data format\r\n- implemented UE3 UTexture2D class support\r\n- fixed bug in UE3 package decompression code\r\n\r\n23.01.2009\r\n- implemented loading of texture mips from xpr files (for Unreal Championship 2)\r\n\r\n18.01.2009\r\n- implemented support for Unreal Championship 2 skeletal models\r\n\r\n17.01.2009\r\n- implemented support for loading Unreal Championship 2 packages\r\n\r\n12.01.2009\r\n- implemented support for loading UE3 packages (supported UT3 and Gears of War)\r\n\r\n25.12.2008\r\n- implemented Exteel support\r\n\r\n24.12.2008\r\n- updated Lineage2 material support for version 123/37\r\n\r\n16.12.2008\r\n- added \"-all\" command line option - modifier for exporting logic\r\n\r\n09.12.2008\r\n- workaround for strange ATI bug with recent Catalyst drivers: texturing were\r\n  disappeared, background color becomes black and everything colorized red; bug\r\n  description is here: http://bugzilla.icculus.org/show_bug.cgi?id=3526\r\n\r\n01.12.2008\r\n- implemented (temporary) support for different lighting modes: specular, diffuse\r\n  and ambient only; switched by Ctrl+L\r\n\r\n26.11.2008\r\n- implemented attachment socket visualization for skeletal mesh (key 'A')\r\n\r\n25.11.2008\r\n- additional fix for Lineage LOD models\r\n\r\n23.11.2008\r\n- fixed skeletal LOD model visualization\r\n- implemented skinning for LOD models\r\n- Lineage2: implemented support for Lineage-specific LOD models\r\n- Lineage2: restoring base skeletal mesh from 1st LOD when needed\r\n\r\n21.11.2008\r\n- fixed RGBA8 texture format loading (swapping red and blue channels)\r\n- fixed PSK format export: material assignment was lost when importing mesh into\r\n  UnrealEd\r\n- using bottom-top orientation when exporting TGA file, because UnrealEd prior to\r\n  UE3 have no top-bottom TGA support (texture is flipped vertically when imported)\r\n\r\n14.11.2008\r\n- implemented support for UE2Runtime mesh animation format\r\n\r\n13.11.2008\r\n- detecting UT2 (UT2003/2004) packages, separated UT2 support and generic UE2 support\r\n\r\n10.11.2008\r\n- updated Lineage 2 support (for latest Lineage 2 Gracia)\r\n\r\n09.11.2008\r\n- implemented support for unicode strings (sometimes used in Lineage 2 packages)\r\n\r\n07.11.2008\r\n- implemented serializers for most UE2 materials\r\n- long texts on screen may be scrolled now with Ctrl+PgUp/Ctrl+PgDn keys\r\n\r\n06.11.2008\r\n- implemented material outline viewer (key 'M')\r\n\r\n05.11.2008\r\n- implemented quick support for Shader material (does works in most cases)\r\n\r\n02.11.2008\r\n- implemented Lineage 2 texture and MeshAnimation support\r\n\r\n01.11.2008\r\n- implemented Lineage 2 package and SkeletalMesh support\r\n\r\n30.10.2008\r\n- added \"-noanim\" command line option to prevent MeshAnimation (UE2) / Animation\r\n  (UE1) class loading in a case of unsupported data format\r\n\r\n23.10.2008\r\n- implemented Harry Potter and the Prisoner of Azkaban support\r\n\r\n22.10.2008\r\n- implemented Tribes: Vengeance support\r\n\r\n09.10.2008\r\n- implemented support for Unreal engine 1 UMesh class\r\n- improved UE1 LodMesh support\r\n\r\n08.10.2008\r\n- linux: workaround for SDL bug caused undesired mesh rotation when pressing left\r\n  mouse button\r\n\r\n06.10.2008\r\n- implemented Rune mesh support\r\n\r\n01.10.2008\r\n- implemented VertMesh export into Unreal's .3d format\r\n- fixed wrong orientation of VertMesh in viewer\r\n- \"dump\" command now displays object properties\r\n\r\n30.09.2008\r\n- displaying of texture information in material viewer\r\n\r\n28.09.2008\r\n- implemented DeusEx VertMesh support\r\n\r\n23.06.2008\r\n- fixed error in compressed TGA export, caused format incompatibility with some\r\n  image viewer/editor software\r\n\r\n15.06.2008\r\n- skeleton dump has been moved to 'Ctrl+B' key (previously was automatically\r\n  made on mesh selection)\r\n- fixed crash when handling broken object imports (import object from package,\r\n  which does not hold it)\r\n- implemented UT1 SkeletalMesh support\r\n\r\n11.06.2008\r\n- added Unreal1 and UT VertMesh support\r\n\r\n06.06.2008\r\n- added Splinter Cell 2 support\r\n- fixed \"default\" material loss when window is resized\r\n\r\n03.06.2008\r\n- added Splinter Cell support\r\n\r\n14.05.2008\r\n- added texture export\r\n\r\n26.03.2008\r\n- exporting whole package with a single command\r\n\r\n20.03.2008\r\n- advanced usage information\r\n\r\n18.03.2008\r\n- added support for Unreal1 paletted textures\r\n"
        },
        {
          "name": "t.bat",
          "type": "blob",
          "size": 0.0341796875,
          "content": "@echo off\ncd %~dp0\nbash test.sh %*\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 18.7646484375,
          "content": "#!/bin/bash\n\nS_RED=\"\\033[1;31m\"\nS_GREEN=\"\\033[1;32m\"\nS_DEFAULT=\"\\033[0m\"\n\nfunction usage()\n{\n\tcat <<EOF\nUsage:\n    test.sh [--64][--nobuild] [--exe=...] [--<game>] <umodel options>\n\nOptions:\n    --64                    build 64-bit version\n    --nobuild               prevent from umodel rebuilding\n    --exe=<executable>      do not build when overrided (useful for testing with older exe from svn)\n    --<game>                choose predefined game path; <game> = ut2|ut3|gow2 etc\n    --debug                 build with --debug option\n    --profile               build with --profile option\n    --clip\t\t\t\t\tdo not start umodel, copy the startup command to clipboard (Windows only)\n    --help                  display this help message\n    --path=<path>\t\t\tuse instead of -path=... when path has spaces\n    -path=<path>            set game path; will disable default game substitution\nEOF\n\texit\n}\n\n# Enable extended pattern matching (for (a|b|c)); see bash manpage, \"Pattern matching\".\nshopt -s extglob\n\nexe=umodel.exe\nwin_drive=\nif [ \"$OSTYPE\" == \"linux-gnu\" ] || [ \"$OSTYPE\" == \"linux\" ]; then\n\texe=\"umodel\"\n\t# Windows to VM or Linux path conversion\n#\tif [ -d \"/media/sf_C_DRIVE\" ]; then\n#\t\tc_drive=\"/media/sf_C_DRIVE\"\t\t\t# VirtualBox - not supported now because it has drive letter in the middle\n\tif [ -d \"/mnt/hgfs/C\" ]; then\n\t\twin_drive=\"/mnt/hgfs/\"\t\t\t\t# VMware\n\telif [ -d \"/media/c\" ]; then\n\t\twin_drive=\"/media/\"\t\t\t\t\t# linux\n\tfi\nfi\n\n#function DBG() { echo \"LOG: $*\"; }\nfunction DBG() { return; }\n\n#------------------------------------------------------------------------------\n#\tGame tools\n#------------------------------------------------------------------------------\n\nfoundPath=\ndebugOpt=\n\n# Steam support:\n# - add other paths inside (), separate with spaces. add trailing slash\n# - use as\n#   CheckDir \"${steam[@]/%/Some Game Name}\"\n#   (this will append \"Some Game Name\" to all variants of steam path)\nlauncher=(\"C:/3-UnrealEngine/\" \"D:/EpicGames/\")\nsteam=(\"C:/Program Files (x86)/Steam/SteamApps/common/\" \"D:/Steam/steamapps/common/\")\nlaunch_string_to_clipboard=0\n\nfunction CheckDir()\n{\n\t[ \"$foundPath\" ] && return\n\tlocal checkedDirs=\"\"\n\twhile [ $# -gt 0 ]; do\n\t\tdir=$1\n\t\tDBG \"... check $dir\"\n\t\t# support Windows paths on Linux\n\t\tif [ \"$win_drive\" ] && [ \"${dir:1:1}\" == \":\" ]; then\n\t\t\tdir=\"${win_drive}${dir:0:1}/${dir:2}\"\n\t\tfi\n\t\tif [ -z \"$checkedDirs\" ]; then\n\t\t\tcheckedDirs=$dir\n\t\telse\n\t\t\tcheckedDirs=\"$checkedDirs, $dir\"\n\t\tfi\n\t\tif [ -d \"$dir\" ]; then\n\t\t\tfoundPath=$dir\n\t\t\treturn\t\t\t# completed\n\t\tfi\n\t\tshift\n\tdone\n\t# error\n\techo -e \"${S_RED}ERROR: the game was not found at ($checkedDirs)${S_DEFAULT}\"\n\texit\n}\n\nfunction console_title()\n{\n\t# set console title if outout is not redirected to file\n\t# http://rosettacode.org/wiki/Check_output_device_is_a_terminal\n\t[ -t 1 ] && echo -en \"\\033]2;$@\\007\"\n}\n\n# Note: we're using '\"$@\"' - i.e. quoted array expansion $@, so it will preserve quotes.\n# http://mywiki.wooledge.org/BashFAQ/050#I.27m_constructing_a_command_based_on_information_that_is_only_known_at_run_time\n\nfunction run()\n{\n\tif [ \"$foundPath\" ]; then\n\t\tconsole_title \"$exe -path=\"$foundPath\" $@\"\n\t\tif [ $launch_string_to_clipboard -eq 0 ]; then\n\t\t\techo -e \"${S_GREEN}Starting $exe -path=\"$foundPath\" $@${S_DEFAULT}\"\n\t\t\t# Warning: the execution will replace starting '/Game' with 'C:/Root/Dir/Game'\n\t\t\t# https://stackoverflow.com/questions/7250130/how-to-stop-mingw-and-msys-from-mangling-path-names-given-at-the-command-line\n\t\t\t./$exe -path=\"$foundPath\" $debugOpt \"$@\"\n\t\telse\n\t\t\techo Execution string copied to clipboard\n\t\t\techo $exe -path=\"$foundPath\" $debugOpt \"$@\" | clip.exe\n\t\tfi\n\telse\n\t\tconsole_title \"$exe $debugOpt $@\"\n\t\tif [ $launch_string_to_clipboard -eq 0 ]; then\n\t\t\techo -e \"${S_GREEN}Starting $exe $debugOpt $@${S_DEFAULT}\"\n\t\t\t./$exe $debugOpt \"$@\"\n\t\telse\n\t\t\techo Execution string copied to clipboard\n\t\t\techo $exe $debugOpt \"$@\" | clip.exe\n\t\tfi\n\tfi\n}\n\n# This function accepts game path as the 1st argument.\n# Brace expansion is performed when \"{a,b,c}\" is used inside. Note: when a few\n# space-separated paths are provided without a braces (\"path1 path2 path3\") - this\n# would not work because we cannot determine whether to split this to a few paths\n# or use as a single path with spaces.\nfunction run1()\n{\n\tcase \"$1\" in\n\t*,*)\n\t\tDBG \"Group: $1\"\n\t\teval CheckDir $1\t\t# 'eval' is required in order to perform brace expansion\n\t\t;;\n\t*)\n\t\tDBG \"Single: $1\"\n\t\tCheckDir \"$1\"\t\t\t# no 'eval' required, check single path\n\t\t;;\n\tesac\n\n\tshift\n\trun \"$@\"\n}\n\n\n# all following functions are called as \"--func\" argument\n# example: test.sh --ut2 HumanMaleA\n\nfunction cmdline()\n{\n\tdebugOpt=\"\"\t\t\t\t\t# doesn't work when @cmdline is used\n\trun @Docs/cmdline.cfg\n}\n\nfunction gui()\n{\n\trun $*\n}\n\nfunction u1()\n{\n\tCheckDir {c,d,e}:/games/{unreal,Unreal\\ Anthology}/UnrealGold\n\trun $*\n}\nfunction ut1()\n{\n\tCheckDir {c,d,e}:/games/{unreal,Unreal\\ Anthology}/UnrealTournament data/1/UT\n\trun $*\n}\nfunction ut2()\n{\n\tCheckDir {c,d,e}:/games/{unreal,Unreal\\ Anthology}/ut2004 data/2/UT2004\n\trun $*\n}\nfunction ut3()\n{\n\tCheckDir \"${steam[@]/%/Unreal Tournament 3}\" {c,d,e}:/games/ut3/UTGame/CookedPC data/3/UT3\n\trun $*\n}\nfunction ut4()\n{\n\tCheckDir \"${launcher[@]/%/UnrealTournament/UnrealTournament/Content/Paks}\"\n#\tCheckDir C:/Projects/Epic/UnrealTournament4/UnrealTournament/Saved/Cooked/WindowsNoEditor/UnrealTournament/Content\n\trun -game=ut4 $*\n}\nfunction paragon()\n{\n\tCheckDir \"${launcher[@]/%/Paragon/OrionGame/Content/Paks}\"\n\trun -game=paragon $*\n}\nfunction fortnite()\n{\n\tCheckDir \"${launcher[@]/%/Fortnite/FortniteGame/Content/Paks}\"\n\trun -game=ue4.27 -aes=@Docs/fortnite.txt \"$@\"\n}\nfunction ue3()\n{\n\tCheckDir C:/Projects/Epic/UnrealEngine3/UDKGame/Content\n\trun $*\n}\nfunction ue4()\n{\n\tCheckDir C:/Projects/Epic/UnrealEngine4\n\trun $*\n}\nfunction gears4()\n{\n\tCheckDir data/4/GOW4\n\trun -game=gears4 $*\n}\nfunction gow()    { run1 \"data/3/GearsOfWar\" $*;          }\nfunction gow2()   { run1 \"data/3X/GearsOfWar2_X360\" $*;   }\nfunction gow3()   { run1 \"data/3X/GOW3_beta_X360\" $*;     }\nfunction ib()     { run1 \"data/3i/InfinityBlade\" -ios $*; }\nfunction uc2()    { run1 \"data/2X/UnrealChampionship2\" $*;}\nfunction l2()     { run1 \"data/2/Lineage2\" $*;            }\nfunction bio()\n{\n\tCheckDir {c,e}:/GAMES/BioShock data/2/Bioshock\n\trun $*\n}\nfunction bio1r()\n{\n\tCheckDir \"${steam[0]/%/BioShock Remastered/ContentBaked/pc}\" \"data/2/Bioshock_remaster\"\n\trun $*\n}\nfunction bio2r()\n{\n\tCheckDir \"${steam[0]/%/BioShock 2 Remastered/ContentBaked/pc}\" \"data/2/Bioshock2_remaster\"\n\trun $*\n}\nfunction alice()\n{\n\tCheckDir \"E:/GAMES/Alice Madness Returns/Alice2/AliceGame/CookedPC\"\n\trun $*\n}\nfunction mass()   { run1 \"C:/GAMES/Mass Effect/BioGame/CookedPC\" $*; }\nfunction mass3()  { run1 \"data/3/MassEffect3\" $*; }\nfunction scell()  { run1 \"data/SplinterCell\" $*;  }\nfunction scell2() { run1 \"data/SplinterCell2\" $*; }\nfunction bat2()\n{\n\tCheckDir \"${steam[@]/%/Batman Arkham City GOTY/BmGame}\"\n\tCheckDir \"E:/GAMES/Batman Arkham City/BmGame\" data/3/Batman2\n\trun $*\n}\nfunction bat3()\n{\n\tCheckDir \"${steam[@]/%/Batman Arkham Origins/SinglePlayer/BMGame}\"\n\tCheckDir \"E:/GAMES/Batman Arkham City/BmGame\" data/3/Batman2\n\trun $*\n}\nfunction tr4()    { run1 \"data/3/Tribes4\" $*;     }\nfunction thief()  { run1 \"${steam[@]/%/Thief/ThiefGame/CookedPCNG}\" $*; }\nfunction ark()    { run1 \"${steam[@]/%/ARK/ShooterGame/Content}\" -game=ark $*; }\nfunction lawbr()  { run1 \"${steam[@]/%/LawBreakers/ShooterGame/Content/Paks}\" -game=lawbr $*; }\nfunction jfo()\n{\n\tCheckDir \"${steam[@]/%/Jedi Fallen Order/SwGame/Content/Paks}\"\t# \"run1\" doesn't work with $steam having multiple paths\n\trun -game=jedi $*\n}\n\nfunction rund()   {\trun1 \"data\" $*; }\n\n\n#------------------------------------------------------------------------------\n\ncmd=\"\"\nbuildopt=\nnobuild=\npath=0\n\n# parse our command line options\nfor arg in \"$@\"; do\t\t# using quoted $@ will allow to correctly separate arguments like [ --path=\"some string with spaces\" --debug ]\n#\techo \"ARG=$arg\"\n\tcase $arg in\n\t--help)\n\t\tusage\n\t\t;;\n\t--64)\n\t\tbuildopt=--64\n\t\twin64=1\n\t\t;;\n\t--nobuild)\n\t\tnobuild=1\n\t\t;;\n\t--exe=*)\n\t\texe=${arg:6}\n\t\tnobuild=1\n\t\t;;\n\t--debug)\n\t\tbuildopt=\"$buildopt --debug\"\n\t\tdebugOpt=-debug\n\t\tdebug=1\n\t\t;;\n\t--profile)\n\t\tbuildopt=\"$buildopt --profile\"\n\t\tprofile=1\n\t\t;;\n\t--clip)\n\t\tlaunch_string_to_clipboard=1\n\t\t;;\n\t--path=*)\n\t\tpath=1\n\t\tfoundPath=${arg:7}\n\t\tDBG \"--path '$foundPath'\"\n\t\t;;\n\t--*)\n\t\tcmd=${arg:2}\n\t\t;;\n\t*)\n\t\tDBG \"other arg $arg, breaking\"\n\t\tbreak\n\tesac\n\tDBG \"processed $arg\"\n\tshift\ndone\n\n# rebuild umodel when not desired opposite\nif [ -z \"$nobuild\" ]; then\n    # compute the name of umodel executable, copy-paste of SetupDefaultProject() code from build.sh\n\texe=\"umodel\"\n\t[ \"$debug\" ] && exe+=\"-debug\"\n\t[ \"$profile\" ] && exe+=\"-profile\"\n\t[ \"$win64\" ] && exe+=\"_64\"\n\texe+=\".exe\"\n\n\tconsole_title \"Building $exe ...\"\n\t./build.sh $buildopt || exit 1\nfi\n\n# find whether -path= is used or not\nfor arg in $*; do\n\tcase $arg in\n\t-path=*)\n\t\tDBG \"'-path' is specified: \" ${arg:6}\n\t\tpath=1\n\t\t;;\n\tesac\ndone\n\n# execute command\nif [ $# -gt 0 ] || [ \"$cmd\" ] || [ $path != 0 ]; then\n\t# started with arguments\n\t# extract command from \"--cmd\" argument\n\tif [ -z \"$cmd\" ]; then\n\t\tif [ $path == 0 ]; then\n\t\t\tcmd=ut2\t\t\t\t\t# no command and/or path were specified, run \"ut2\"\n\t\telse\n\t\t\tcmd=run\n\t\tfi\n\tfi\n\tDBG \"cmd=$cmd\"\n\tdeclare -a args\n\twhile [ $# -gt 0 ]; do\n\t\tvalue=${1//\\\\//}\t\t\t# replace backslashes with forward slashes\n#\t\tif [[ \"$value\" == @(* *) ]]; then\n#\t\t\tvalue=\"\\\"$value\\\"\"\n#\t\tfi\n#\t\techo \"[$1] -> [$value]\"\n\t\targs[${#args[@]}]=\"$value\"\t# add value to array\n\t\tshift\n\tdone\n\tif [ \"`type -t $cmd`\" != \"function\" ]; then\n\t\techo -e \"${S_RED}Unknown command: $cmd${S_DEFAULT}\"\n\telse\n#\t\teval $cmd \"$args[@]\"\t\t# execute command\n\t\t$cmd \"${args[@]}\"\t\t\t# execute command\n\tfi\n\texit\nfi\n\n\n#------------------------------------------------------------------------------\n# no arguments\n\n# select path here\ncase \"\" in\n\n\"\")\n\trun ../Epic/UnrealProjects/ShooterGame/Saved/Cooked/WindowsNoEditor/ShooterGame/Content/Characters/Textures/Chr_FPS_D.uasset\n#\trun1 \"C:/Projects/Epic/UnrealTournament4/UnrealTournament/Content\" T_CH_Imm_MalcolmBody_D.uasset\n#\trun1 data/3/MarvelHeroes UC__MarvelPlayer_Thor_SF.upk -game=mh thor_avengers_diff\n#\trun1 data/3X/Injustice -noanim CHAR_Ares.xxx -meshes\n#\trun1 data/2/SplinterCell4 -game=scell -noanim ESam.ukx\n#\trun1 data/3/Dishonored Startup.upk -meshes -nostat Heart -anim=Heart_as\n#\trun1 data/3X/Borderlands2 Startup.xxx GestaltDef_AssaultRifle_GestaltSkeletalMesh -anim=AssaultRifle\n#\trun1 \"data/3/Transformers Fall of Cybertron\" -meshes L08b_SpitterIntro_DSN_m.xxx RB_GrimlockALT_SKEL -anim=Grimlock_ALT_ANIM\n#\tbat2 -meshes -pkg=BmGame -pkg=Playable_Catwoman_SF Playable_Catwoman_Std_SF -anim=CW_Combat -obj=Catwoman_Whip_Skin\n#\trun1 data/3/RiseOfTheArgonauts -meshes -pkg=Jason_Agility_AnimSet.upk Jason_Art.upk\n#\tgow2 -meshes GearGame.xxx\n#\trun1 data/3i/EpicCitadel -ios CastleMap.xxx T_FX_Flare_02\n#\trun1 data/2/BattleTerritoryOnline/new2/AnimPackages WP_SMG_P90_NEWPACKAGE.ebkx P90\n#\tib BOSS_10ft_SnS_Thane_SF.xxx\n#!!\trun1 \"data/.possible/Splinter Cell Conviction\" Conviction.umd\n\t# Transformers\n#\trun1 \"data/3/Transformers War for Cybertron\" -meshes A1_IAC_DecoPlaza_Design_m.xxx\n\t# SWRC\n#\trun1 data/RepublicCommando -noanim BactaDispensers.ukx\n#\trun1 data/RepublicCommando -noanim Vehicles.ukx\n\t# Materials\n#\tut2 AS_Vehicles_M.ukx minigun_turret\n#\tut2 StreamAnims.ukx Dropship\n#\tut2 StreamAnims.ukx victim3\n#\tut2 AS_VehiclesFull_M.ukx SpaceFighter_Skaarj SkeletalMesh\n#\tut2 AS_VehiclesFull_M.ukx ASTurret_MotherShip2 SkeletalMesh\n#\tut2 ONSVehicles-A.ukx PRVchassis SkeletalMesh\n#\tut2 ONSVehicles-A.ukx AttackCraft SkeletalMesh\n\n\t#!! BAD INFLUENCES\n#\tut2 -meshes XanRobots.ukx\t# note: no errors on LOD models\n\n\t# Mass Effect\n\t# bug: MatInstConst -> MatInstConst -> Mat => loose transparency\n#\trund BIOG_HMF_HED_PROMorph_R.upk HMF_HED_PROLash_Mat_1a\n#\trund BIOG_HMF_HED_PROMorph_R.upk #HMF_HED_PROCustom_Military_Norm\n#\trun1 data/MassEffect2 -meshes BioP_Char.pcc\n\n\t# Bioshosk\n#\tbio 0-Lighthouse.bsm MetalVents_NormalMap\n#\tbio 0-Lighthouse.bsm WallTech_NormalMap\n#\tbio 0-Lighthouse.bsm ripple_normalmap\n#\tbio 0-Lighthouse.bsm Rock_NormalMap\n\n#\trun1 C:/!umodel-data/MirrorsEdge CH_TKY_Crim_Fixer.upk SK_TKY_Crim_Fixer\n#\tut2 HumanMaleA MercMaleD\n#\tut3 -meshes CH_AnimHuman\n#\tut3 VH_Goliath.upk S_VH_Goliath_FuelCan01b\n#\tut3 GP_Conquest SM_Processing_Plant\n#\tut3 GP_Onslaught S_GP_Ons_Powernode_Spawn\n\t# Army of Two\n#\trun1 C:/!umodel-data/.possible/ArmyOfTwo_X360 -noanim -meshes AO2MPPlayerChar1_SF.xxx\n#\trun1 data/ArmyOfTwoThe40ThDay -nostat 03_map_penhippos_VFX.xxx\n\t# MK vs DC\n#\trun1 C:/!umodel-data/.possible/MKvsDC_X360 -noanim -meshes CHAR_Batman\n\t# A51\n#\trun1 C:/!umodel-data/Area51Blacksite a52start\n#\trun1 C:/!umodel-data/Area51Blacksite enginefonts\n#\trun1 C:/!umodel-data/Area51Blacksite -noanim -meshes ep7_wrecked_p\n\n\t#!! BUGS with GOW animations\n#\tgow -meshes COG_GasTanker.upk\n#\tgow -meshes Geist_Beast.upk\n#\tgow -meshes Locust_Seeder.upk\n\t#!! CheckBoneTree -> \"Strange skeleton\" (IK bones?)\n#\trun1 \"C:/!umodel-data/Mass Effect\" -list Engine.u\n#!!\tut2 -meshes StreamlineMeshes.usx\n#!!\tut2 -meshes ONSDeadVehicles-SM.usx\n#!!\tut2 -meshes DOM-CBP2-Gerroid.ut2\t\t#!! CRASH\n#-\tgow -meshes Neutral_Stranded_01.upk NPC01_COG\n\t#!! CRASH with UE3 animations (assert)\n#-\tgow -meshes Geist_Reaver.upk\n\t#!! CRASH with TLR animations (assert) -- have 6 offsets per bone (time keys?)\n#\trun C:/1/CA0000_MOT_0.upk\n#\trun C:/1/CA0001_MOT_0.upk\n#\trun C:/1/CB0220_MOT_0.upk\n\n#!!\tut2 -export -md5 -all HumanMaleA MercMaleD\n#\tgow2 -meshes geargamehorde_SF\n\n\t# anims\n#\tgow2 -meshes SP_Maria_Cine_Outro\n#\tgow2 -meshes SP_Rescue_P #T_COG_BOT_Screen_Anya01\n#\tgow2 -notex -nomesh SP_Rescue_P #COG_Baird_Hair_UV_MERGE_Mat\n#\tgow2 -meshes SP_Maria_1_S #AnimSetMarcus_CamSkel_Heavy_Mortar\n\n\t# check texture formats\n#\tgow2 SP_Leviathan_BF T_Barge_Grad\n#\tgow2 SP_Rescue_P T_LightBeam_Falloff_02\n\n#\tut3 CH_AnimHuman #ImportMesh_Human_Male\n#\tut3 -meshes CH_TwinSouls_Cine #SK_CH_TwinSouls_Crowd_01\n#\trun data/ut3/CH_AnimHuman.upk\n#\trun data/ut3/VH_Fury.upk K_VH_Fury #MI_VH_Fury_Blue\n#!!\trun data/HumanMale.upk\n#\tgow COG_MarcusFenix #Cine_COG_MarcusFenix\n#\tut3 DM-Deck\t#!! CRASH !!\n#\tut2 HumanMaleA MercMaleD\n#\tl2 LineageNPCs2 Pumpkin_Head_man_m00\n#\tut2 ONSVehicles-A RV\n#\tut2 AS_VehiclesFull_M SpaceFighter_Human SkeletalMesh\n#\tut2 AS_VehiclesFull_M\n#\tl2 Elf FElf_m000_f\n\t#!!! BUG !!! bad bone influences (all face meshes attached to wrong bone)\n#\tl2 Orc FOrc_m000_f\n\n#\tl2 Elf FElf_m007_u\n#\trun1 \"C:/!umodel-data/Land of the Dead\" DOTZAZombies\n#\tut2 AW-2k4XP ShockShieldFinal\n#\tl2 LineageNPCs2\n#\trun \"C:/!umodel-data/Dark Sector 9/PAWNAI.u\" OBrien\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tUT2004\n#------------------------------------------------------------------------------\n\"ut2\")\n#\tut2 -export HumanMaleA MercMaleD\n#\tut2 -export HumanMaleA BipedMaleA\n#\trund -export Bender BenderAnims\n#\tut2 -export HumanMaleA\n#\tut2 HumanMaleA MercMaleD\n#\tut2 HumanFemaleA MercFemaleB\n\trund Aida\n#\tut2 HumanFemaleA\n#\tut2 Aliens\n#\tut2 HumanMaleA\n#\tut2 Bot\n#\tut2 Jugg\n\n#\tut2 SkaarjPack_rc\n#\tut2 SkaarjPack_rc NaliCow\n#\tut2 AS_VehiclesFull_M SpaceFighter_Human SkeletalMesh\n#\trund MarineModel MarineMesh_Male\n#\trund TarjaAnim\n#\trund test Male SkeletalMesh\n#\tut2 2K4_NvidiaIntro Intro2k4Skaarj SkeletalMesh\n#\trund Bender\n#\tut2 NewWeapons2004\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tUnreal Championship\n#------------------------------------------------------------------------------\n\"uc2\")\n#\tuc2 -noanim T_CharacterSkins\n#\tuc2 K_Male.ukx\n#\tuc2 S_NK_Architecture.usx\n\tuc2 S_FX.usx\n\t;;\n\n#------------------------------------------------------------------------------\n#\tSplinterCell\n#------------------------------------------------------------------------------\n\"scell\")\n\tscell ESam\n\tscell EFemale\n\tscell ENPC\n\tscell EminiV\n\tscell EDog\n\tscell2 EIntro\n\tscell2 ESam\n\tscell2 EDuck\n\tscell2 EDog\n\tscell2 ENPC\n\tscell2 EFemale\n\t;;\n\n#------------------------------------------------------------------------------\n# \tUNREAL1\n#------------------------------------------------------------------------------\n\"unreal1\")\n\tu1 UnrealI\n#\tu1 UPak pyramid\n#\tu1 UnrealI WarlordM\n\t;;\n\n\"ut1\")\n\tut1 BotPack PylonM\n#\tut1 UnrealI\n#\tut1 SkeletalChars\n#\tut1 BotPack FCommando\n#\tut1 BotPack Minigun2m\n#\tut1 BotPack ShockCoreM\n#\tut1 BotPack WHPick\n#\tut1 BotPack Eightm\n#\tut1 BotPack Rifle2m\n#\tut1 BotPack ctftrophyM\n#\tut1 BotPack cdgunmainM\n#\tut1 BotPack chainsawM\n#\tut1 BotPack muzzEF3\n#\tut1 BotPack muzzPF3\n#\tut1 BotPack Razor2\n#\tut1 BotPack stukkam\n\t;;\n\n\"ut1x\")\n\tp=data/UT1\n\trun1 $p Grim\n\trun1 $p ut2k4chars malcolm\n\trun1 $p Homer\n\t;;\n\n\"deusex\")\n\tp=data/DeusEx\n\trun1 $p DeusExCharacters\n#\trun1 $p -export DeusExCharacters Mutt\n\t;;\n\n\"rune\")\n\tp=data/Rune\n\trun1 $p players Ragnar\n#\trun1 $p plants\n#\trun1 $p objects\n#\trun1 $p objects Skull\n\t;;\n\n#------------------------------------------------------------------------------\n#\tTRIBES3\n#------------------------------------------------------------------------------\n\"tribes3\")\n\trun1 \"C:/GAMES/Tribes - Vengeance/Content/Art\" Vehicles\n\t;;\n\n#------------------------------------------------------------------------------\n#\tBioshock\n#------------------------------------------------------------------------------\n\"bio\")\n\t# Bioshock\n#\tbio -list core\n#!!\tbio -nomesh 0-Lighthouse #GraniteColorScumbleTight_DIF\n#!!\tbio -noanim -nostat -notex 0-Lighthouse PustuleBirth_Mesh\n\tbio ShockGame WP_PistolMesh\n\tbio 0-Lighthouse ProtectorRosie SkeletalMesh\n#\tbio 1-Medical.bsm Agg_BabyJane\n#!!\tbio -notex -noanim -nostat 1-Medical.bsm Agg_Doctor_Mesh\n#!!\tbio -nomesh -notex 5-Ryan.bsm\n\t#!! LazyArray erors:\n#\tbio 1-Medical.bsm ChemThrow_Pickup_Kero_Diffuse\n#\tbio 1-Medical.bsm ChemThrow_Pickup_IonGel_Diffuse\n\t#!! SkeletalMesh errors\n#\tbio 1-Welcome PlaneCrash_Mesh\n#\tbio 5-Hephaestus LavaFlowSwitch_MESH\n\t#!! Bad skeleton\n#\tbio 3-Arcadia CatMESH\n\t#!! Crash\n#\tbio 0-Lighthouse lighthouse_tunnel\n\t;;\n\n#------------------------------------------------------------------------------\n#\tHarry Potter and the Prisoner of Azkaban\n#------------------------------------------------------------------------------\n\"hp3\")\n\trun1 data/HP3 HPCharacters\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tBUGS\n#------------------------------------------------------------------------------\n\"bugs\")\n#\trund AyaneMesh ayane\n#\trund Mechanatrix_t mech_two\n\trund TarjaAnim SuperFemale\n\trund soria soria\n#\tut2 NewWeapons2004 NewTranslauncher_1st\n#\tut2 HumanMaleA NightMaleB\n#\tut2 HumanFemaleA MercFemaleB\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tCRASH\n#------------------------------------------------------------------------------\n\"crash\")\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tSHADERS\n#------------------------------------------------------------------------------\n\"shaders\")\n\tut2 StreamAnims Dropship\n\tut2 Weapons BioRifle_1st SkeletalMesh\n\t;;\n\n\n#------------------------------------------------------------------------------\n#\tMATERIALS\n#------------------------------------------------------------------------------\n\"materials\")\n\tut2 PlayerSkins MercFemaleBBodyA\n\tut2 PlayerSkins MercFemaleBHeadA\n\t;;\n\n\nesac\n"
        },
        {
          "name": "umodel",
          "type": "blob",
          "size": 1163.07421875,
          "content": null
        },
        {
          "name": "umodel.exe",
          "type": "blob",
          "size": 1434.5,
          "content": null
        }
      ]
    }
  ]
}