{
  "metadata": {
    "timestamp": 1736565387914,
    "page": 227,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oceanbase/miniob",
      "stars": 3570,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.4306640625,
          "content": "---\nLanguage: Cpp\n# BasedOnStyle:\tLLVM\nSortIncludes: false\nAccessModifierOffset: -2\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nDerivePointerAlignment: false\nPointerAlignment: Right\nConstructorInitializerIndentWidth: 4\nAlignEscapedNewlinesLeft: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortFunctionsOnASingleLine: true\nAllowShortIfStatementsOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: true\n# false表示函数实参要么都在同一行，要么都各自一行\nBinPackArguments: false\n# 避免格式化 LOG_* 宏\nWhitespaceSensitiveMacros: ['LOG_DEFAULT', 'LOG_PANIC', 'LOG_ERROR', 'LOG_WARN', 'LOG_INFO', 'LOG_DEBUG', 'LOG_TRACE', 'ASSERT']\nAlwaysBreakBeforeMultilineStrings: false\nBreakBeforeBinaryOperators: None\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBinPackParameters: true\nColumnLimit: 120\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nDerivePointerBinding: true\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 200\nPenaltyBreakString: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nPointerBindsToType: true\nCpp11BracedListStyle: true\nStandard:        Auto\nIndentWidth:     2\nTabWidth:        4\nUseTab:          Never\nBreakBeforeBraces: Custom\nBraceWrapping:   \n  AfterClass:      true\n  AfterControlStatement: false\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nIndentFunctionDeclarationAfterType: true\nSpacesInParentheses: false\nSpacesInAngles: false\nSpaceInEmptyParentheses: false\nSpacesInCStyleCastParentheses: false\nSpaceAfterControlStatementKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpacesBeforeTrailingComments: 2\nContinuationIndentWidth: 4\nCommentPragmas:  '^lint'\nMacroBlockBegin: \"\n\nEND_CATCH_ERROR$\"\n...\n\n\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4287109375,
          "content": "deps/3rd/*\n.vscode\n!.vscode/tasks.json\n!.vscode/launch.json\n.VSCodeCounter/*\ndocs/doxy/\nbuild/*\nbuild_*\ncmake-build-*/*\nbuild\n.cache/*\n.DS_Store\n.idea\n.ccls-cache\ncompile_commands.json\n.name\nminiob.iml\nvcs.xml\nworkspace.xml\nmodules.xml\nGRTAGS\nGPATH\nGTAGS\ndocs/book\n#*#\n\n# ignore generated files\nsrc/observer/sql/parser/lex_sql.cpp\nsrc/observer/sql/parser/lex_sql.h\nsrc/observer/sql/parser/yacc_sql.cpp\nsrc/observer/sql/parser/yacc_sql.hpp\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.4111328125,
          "content": "[submodule \"deps/3rd/libevent\"]\n\tpath = deps/3rd/libevent\n\turl = https://github.com/libevent/libevent\n[submodule \"deps/3rd/jsoncpp\"]\n\tpath = deps/3rd/jsoncpp\n\turl = https://github.com/open-source-parsers/jsoncpp\n[submodule \"deps/3rd/googletest\"]\n\tpath = deps/3rd/googletest\n\turl = https://github.com/google/googletest\n[submodule \"deps/3rd/benchmark\"]\n\tpath = deps/3rd/benchmark\n\turl = https://github.com/google/benchmark\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.0556640625,
          "content": "coreDump:\n  enabled: true\nimage: oceanbase/miniob:latest\n"
        },
        {
          "name": ".scanignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "docker/bin/starter-code.sh\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.7578125,
          "content": "cmake_minimum_required(VERSION 3.10)\nset(CMAKE_CXX_STANDARD 20)\n\nproject(minidb)\n\nMESSAGE(STATUS \"This is Project source dir \" ${PROJECT_SOURCE_DIR})\nMESSAGE(STATUS \"This is PROJECT_BINARY_DIR dir \" ${PROJECT_BINARY_DIR})\n\nSET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\nSET(CMAKE_PREFIX_PATH \"${PROJECT_SOURCE_DIR}/deps/3rd/usr/local;/usr/local;${CMAKE_PREFIX_PATH}\")\nSET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)\n\n# 设置默认构建类型为 Debug\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Debug CACHE STRING \"Build type:Default is debug\" FORCE)\nendif()\nstring(TOLOWER \"${CMAKE_BUILD_TYPE}\" CMAKE_BUILD_TYPE_LOWER)\n\n# 输出当前构建类型\nmessage(STATUS \"Using build type: ${CMAKE_BUILD_TYPE}\")\n\nOPTION(ENABLE_ASAN \"Enable build with address sanitizer\" ON)\nOPTION(ENABLE_TSAN \"Build with thread sanitizer\" OFF)\nOPTION(ENABLE_UBSAN \"Build with undefined behavior sanitizer\" OFF)\nOPTION(WITH_UNIT_TESTS \"Compile miniob with unit tests\" ON)\nOPTION(WITH_BENCHMARK \"Compile benchmark\" OFF)\n# TODO: support MemTracer with sanitizers, currently MemTracer doesn't work with sanitizers.\nOPTION(WITH_MEMTRACER \"Compile memtracer\" OFF)\nOPTION(ENABLE_COVERAGE \"Enable unittest coverage\" OFF)\nOPTION(ENABLE_NOPIE \"Enable no pie\" OFF)\nOPTION(CONCURRENCY \"Support concurrency operations\" OFF)\nOPTION(STATIC_STDLIB \"Link std library static or dynamic, such as libgcc, libstdc++, libasan\" OFF)\nOPTION(USE_SIMD \"Use SIMD\" OFF)\nOPTION(USE_MUSL_LIBC \"Use musl libc\" OFF)\n\nMESSAGE(STATUS \"HOME dir: $ENV{HOME}\")\n#SET(ENV{变量名} 值)\nIF(WIN32)\n    MESSAGE(STATUS \"This is windows.\")\n    ADD_DEFINITIONS(-DWIN32)\nELSEIF(WIN64)\n    MESSAGE(STATUS \"This is windows.\")\n    ADD_DEFINITIONS(-DWIN64)\nELSEIF(APPLE)\n    MESSAGE(STATUS \"This is apple\")\n    # normally __MACH__ has already been defined\n    ADD_DEFINITIONS(-D__MACH__ )\nELSEIF(UNIX)\n    MESSAGE(STATUS \"This is UNIX\")\n    ADD_DEFINITIONS(-DUNIX -DLINUX)\nELSE()\n    MESSAGE(STATUS \"This is UNKNOW OS\")\nENDIF(WIN32)\n\n# This is for clangd plugin for vscode\n# mute sign-compare error in lex/yacc\nSET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -Wall -Werror -Wno-error=sign-compare\")\nIF (\"${CMAKE_BUILD_TYPE_LOWER}\" STREQUAL \"debug\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -DDEBUG -g -O0\")\nELSEIF (\"${CMAKE_BUILD_TYPE_LOWER}\" STREQUAL \"release\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -g -O2\")\nENDIF()\n\nIF (ENABLE_NOPIE)\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -no-pie\")\n    ADD_LINK_OPTIONS(-no-pie)\nENDIF (ENABLE_NOPIE)\n\n# Requires support for avx2\nIF(USE_SIMD)\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -mavx2\")\n    ADD_DEFINITIONS(-DUSE_SIMD)\nENDIF(USE_SIMD)\n\nIF (CONCURRENCY)\n    MESSAGE(STATUS \"CONCURRENCY is ON\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -DCONCURRENCY\")\n    ADD_DEFINITIONS(-DCONCURRENCY)\nENDIF (CONCURRENCY)\n\nMESSAGE(STATUS \"CMAKE_CXX_COMPILER_ID is \" ${CMAKE_CXX_COMPILER_ID})\nIF (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND ${STATIC_STDLIB})\n    ADD_LINK_OPTIONS(-static-libgcc -static-libstdc++)\nENDIF()\n\nIF(USE_MUSL_LIBC)\n    ADD_DEFINITIONS(-D__MUSL__)\n    MESSAGE(STATUS \"musl libc use pthread in default\")\n    SET(CMAKE_THREAD_LIBS_INIT \"-lpthread\")\n\n    MESSAGE(AUTHOR_WARNING \"Sanitizer and musl libc not support each other for now\")\n    SET(ENABLE_ASAN OFF)\nENDIF(USE_MUSL_LIBC)\n\nIF (ENABLE_ASAN)\n    MESSAGE(STATUS \"Instrumenting with Address Sanitizer\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -fno-omit-frame-pointer -fsanitize=address -fsanitize-address-use-after-scope\")\n    IF (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND ${STATIC_STDLIB})\n        ADD_LINK_OPTIONS(-static-libasan)\n    ENDIF()\nENDIF()\n\nIF (ENABLE_TSAN)\n    # supported flags\n    # https://github.com/google/sanitizers/wiki/ThreadSanitizerFlags\n    MESSAGE(STATUS \"Instrumenting with Thread Sanitizer\")\n    SET(TSAN_FLAGS \"-fno-omit-frame-pointer -fsanitize=thread\")\n    SET(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-memory-accesses=0\")\n    SET(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-atomics=0\")\n    SET(TSAN_CCFLAGS \"${TSAN_CCFLAGS} -mllvm -tsan-instrument-func-entry-exit=1\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} ${TSAN_FLAGS} ${TSAN_CCFLAGS}\")\n    # -Qunused-arguments 有些编译器不支持，所以先删掉\n    IF (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND ${STATIC_STDLIB})\n        ADD_LINK_OPTIONS(-static-libtsan)\n    ENDIF()\n    SET(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${TSAN_FLAGS}\")\n    SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${TSAN_FLAGS}\")\nENDIF (ENABLE_TSAN)\n\nIF (ENABLE_UBSAN)\n    # Only success on Mac Clang\n    MESSAGE(STATUS \"Instrumenting with Undefined Behavior Sanitizer\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fno-omit-frame-pointer\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=undefined\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=implicit-conversion\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=implicit-integer-truncation\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=integer\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=nullability\")\n    SET(UBSAN_FLAGS \"${UBSAN_FLAGS} -fsanitize=vptr\")\n    SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} ${UBSAN_FLAGS}\")\n    SET(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${UBSAN_FLAGS}\")\n    SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${UBSAN_FLAGS}\")\nENDIF (ENABLE_UBSAN)\n\nIF (CMAKE_INSTALL_PREFIX)\n    MESSAGE(STATUS \"CMAKE_INSTALL_PREFIX has been set as \" ${CMAKE_INSTALL_PREFIX} )\nELSEIF(DEFINED ENV{CMAKE_INSTALL_PREFIX})\n    SET(CMAKE_INSTALL_PREFIX $ENV{CMAKE_INSTALL_PREFIX})\nELSE()\n    SET(CMAKE_INSTALL_PREFIX /tmp/${PROJECT_NAME})\nENDIF()\nMESSAGE(STATUS \"Install target dir is \" ${CMAKE_INSTALL_PREFIX})\n\nIF (DEFINED ENV{LD_LIBRARY_PATH})\n    SET(LD_LIBRARY_PATH_STR $ENV{LD_LIBRARY_PATH})\n    string(REPLACE \":\" \";\" LD_LIBRARY_PATH_LIST ${LD_LIBRARY_PATH_STR})\n    MESSAGE(\" Add LD_LIBRARY_PATH to -L flags \" ${LD_LIBRARY_PATH_LIST})\n    LINK_DIRECTORIES(${LD_LIBRARY_PATH_LIST})\nENDIF ()\n\nIF (EXISTS /usr/local/lib)\n    LINK_DIRECTORIES (/usr/local/lib)\nENDIF ()\nIF (EXISTS /usr/local/lib64)\n    LINK_DIRECTORIES (/usr/local/lib64)\nENDIF ()\n\nINCLUDE_DIRECTORIES(. ${PROJECT_SOURCE_DIR}/deps ${PROJECT_SOURCE_DIR}/src /usr/local/include)\n\nIF(WITH_UNIT_TESTS)\n    IF (ENABLE_COVERAGE)\n        SET(CMAKE_COMMON_FLAGS \"${CMAKE_COMMON_FLAGS} -fprofile-arcs -ftest-coverage\")\n    ENDIF (ENABLE_COVERAGE)\n    enable_testing()\nENDIF(WITH_UNIT_TESTS)\n\nSET(CMAKE_CXX_FLAGS ${CMAKE_COMMON_FLAGS})\nSET(CMAKE_C_FLAGS ${CMAKE_COMMON_FLAGS})\n\nMESSAGE(STATUS \"CMAKE_CXX_FLAGS is \" ${CMAKE_CXX_FLAGS})\n\n# ADD_SUBDIRECTORY(src bin)  bin 为目标目录， 可以省略\n# ADD_SUBDIRECTORY(deps)\nADD_SUBDIRECTORY(src)\nADD_SUBDIRECTORY(tools)\n\nIF (WITH_BENCHMARK)\n    ADD_SUBDIRECTORY(benchmark)\nENDIF(WITH_BENCHMARK)\n\nIF(WITH_UNIT_TESTS)\n    ADD_SUBDIRECTORY(unittest)\nENDIF(WITH_UNIT_TESTS)\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1826171875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity, and expression, level of experience, education, socioeconomic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@oceanbase.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality about the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org/), version 1.4.\n\nFor answers to common questions about this code of conduct, see [FAQ](https://www.contributor-covenant.org/faq).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.2119140625,
          "content": "# OceanBase 贡献指南\n\nOceanBase 社区热情欢迎每一位对数据库技术热爱的开发者，期待携手开启思维碰撞之旅。无论是文档格式调整或文字修正、问题修复还是增加新功能，都是对 OceanBase 社区参与和贡献方式之一，立刻开启您的 First Contribution 吧！\n\n## 阅读建议\n\n为了帮助开发者更好的上手并学习 miniob, 建议阅读：\n\n1. [miniob 框架介绍](docs/docs/design/miniob-architecture.md)\n2. [如何编译 miniob 源码](docs/docs/how_to_build.md)\n3. [开发环境搭建(本地调试, 适用 Linux 和 Mac)](docs/docs/dev-env/how_to_dev_miniob_by_vscode.md)\n4. [开发环境搭建(远程调试, 适用于 Window, Linux 和 Mac)](docs/docs/dev-env/how_to_dev_in_docker_container_by_vscode.md)\n5. [手把手教你在windows上用docker和vscode配置环境](docs/docs/dev-env/how_to_dev_miniob_by_docker_and_vscode.md)\n6. [miniob 文档汇总](docs/docs/index.md)\n\n更多的文档, 可以参考 [docs](https://github.com/oceanbase/miniob/tree/main/docs), 为了帮助大家更好的学习数据库基础知识, OceanBase 社区提供了一系列教程, 建议学习:\n\n1. [《从0到1数据库内核实战教程》  视频教程](https://open.oceanbase.com/activities/4921877?id=4921946)\n2. [《从0到1数据库内核实战教程》  基础讲义](https://github.com/oceanbase/kernel-quickstart)\n3. [《数据库管理系统实现》  华中科技大学实现教材](docs/src/lectures/index.md)\n\n## 如何找到一个合适issue\n\n* 通过[寻找一个合适的issue](https://github.com/oceanbase/miniob/issues), 找到一个可以入手的issue\n* 通过`bug`/`new feature`找到当前版本的bug和建议添加的功能\n找到合适的issue之后，可以在issue下回复`/assign` 将issue分配给自己，并添加`developing`标签，这个标签表示当前这个issue在编码开发中\n\n## 代码贡献流程\n\n以 Mac 操作系统为例\n\n### 1. Fork 项目仓库\n\n1.  访问项目的 [GitHub 地址](https://github.com/oceanbase/miniob)。 \n2.  点击 Fork 按钮创建远程分支。\n\n### 2. 配置本地环境变量\n\n```\nworking_dir=$HOME/workspace # 定义工作目录\nuser={GitHub账户名} # 和github上的用户名保持一致\n```\n\n### 3. 克隆代码\n\n```\nmkdir -p $working_dir\ncd $working_dir\ngit clone git@github.com:$user/miniob.git\n\n# 添加上游分支\ncd $working_dir/miniob\ngit remote add upstream git@github.com:oceanbase/miniob.git\n\n# 为上游分支设置 no_push\ngit remote set-url --push upstream no_push\n\n# 确认远程分支有效\ngit remote -v\n```\n\n### 4. 创建新分支\n\n```\n# 更新本地 master 分支。 \nnew_branch_name={issue_xxx} # 设定分支名，建议直接使用issue+id的命名\ncd $working_dir/oceanbase\ngit fetch upstream\ngit checkout main\ngit rebase upstream/main\ngit checkout -b $new_branch_name\n```\n\n### 5. 开发\n\n在新建的分支上完成开发\n\n### 6. 提交代码\n\n```\n# 检查本地文件状态\ngit status\n\n# 添加您希望提交的文件\n# 如果您希望提交所有更改，直接使用 `git add .`\ngit add <file> ... \n# 为了让 github 自动将 pull request 关联上 github issue, \n# 建议 commit message 中带上 \" #{issueid}\", 其中{issueid} 为issue 的id, \ngit commit -m \"commit-message: update the xx\"\n\n# 在开发分支执行以下操作\ngit fetch upstream\ngit rebase upstream/main\ngit push -u origin $new_branch_name\n```\n\n### 7. 创建 PR\n\n1.  访问您 Fork 的仓库。 \n2.  单击 {new_branch_name} 分支旁的 Compare & pull request 按钮。\n\n### 8. 签署 CLA 协议\n签署[Contributor License Agreement (CLA)](https://cla-assistant.io/oceanbase/oceanbase) ；在提交 Pull Request 的过程中需要签署后才能进入下一步流程。如果没有签署，在提交流程会有如下报错：\n\n![image](https://user-images.githubusercontent.com/5435903/204097095-6a19d2d1-ee0c-4fb6-be2d-77f7577d75d2.png)\n\n### 9. 代码审查与合并\n有review、合并权限的维护者，会帮助开发者进行代码review；review意见通过后，后续的操作都会由维护者进行，包括运行CI测试（目前包括centos和ubuntu的编译）等，最终代码会有维护者通过后合入.\n\n### 10. 祝贺成为贡献者\n\n当 pull request 合并后, 则所有的 contributing 工作全部完成, 恭喜您, 您成为 OceanBase 贡献者.\n"
        },
        {
          "name": "License",
          "type": "blob",
          "size": 8.9423828125,
          "content": "木兰宽松许可证， 第2版\n\n2020年1月 http://license.coscl.org.cn/MulanPSL2\n\n您对“软件”的复制、使用、修改及分发受木兰宽松许可证，第2版（“本许可证”）的如下条款的约束：\n\n0.   定义\n\n“软件” 是指由“贡献”构成的许可在“本许可证”下的程序和相关文档的集合。\n\n“贡献” 是指由任一“贡献者”许可在“本许可证”下的受版权法保护的作品。\n\n“贡献者” 是指将受版权法保护的作品许可在“本许可证”下的自然人或“法人实体”。\n\n“法人实体” 是指提交贡献的机构及其“关联实体”。\n\n“关联实体” 是指，对“本许可证”下的行为方而言，控制、受控制或与其共同受控制的机构，此处的控制是指有受控方或共同受控方至少50%直接或间接的投票权、资金或其他有价证券。\n\n1.   授予版权许可\n\n每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的版权许可，您可以复制、使用、修改、分发其“贡献”，不论修改与否。\n\n2.   授予专利许可\n\n每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的（根据本条规定撤销除外）专利许可，供您制造、委托制造、使用、许诺销售、销售、进口其“贡献”或以其他方式转移其“贡献”。前述专利许可仅限于“贡献者”现在或将来拥有或控制的其“贡献”本身或其“贡献”与许可“贡献”时的“软件”结合而将必然会侵犯的专利权利要求，不包括对“贡献”的修改或包含“贡献”的其他结合。如果您或您的“关联实体”直接或间接地，就“软件”或其中的“贡献”对任何人发起专利侵权诉讼（包括反诉或交叉诉讼）或其他专利维权行动，指控其侵犯专利权，则“本许可证”授予您对“软件”的专利许可自您提起诉讼或发起维权行动之日终止。\n\n3.   无商标许可\n\n“本许可证”不提供对“贡献者”的商品名称、商标、服务标志或产品名称的商标许可，但您为满足第4条规定的声明义务而必须使用除外。\n\n4.   分发限制\n\n您可以在任何媒介中将“软件”以源程序形式或可执行形式重新分发，不论修改与否，但您必须向接收者提供“本许可证”的副本，并保留“软件”中的版权、商标、专利及免责声明。\n\n5.   免责声明与责任限制\n\n“软件”及其中的“贡献”在提供时不带任何明示或默示的担保。在任何情况下，“贡献者”或版权所有者不对任何人因使用“软件”或其中的“贡献”而引发的任何直接或间接损失承担责任，不论因何种原因导致或者基于何种法律理论,即使其曾被建议有此种损失的可能性。\n\n6.   语言\n\n“本许可证”以中英文双语表述，中英文版本具有同等法律效力。如果中英文版本存在任何冲突不一致，以中文版为准。\n\n条款结束\n\n如何将木兰宽松许可证，第2版，应用到您的软件\n\n如果您希望将木兰宽松许可证，第2版，应用到您的新软件，为了方便接收者查阅，建议您完成如下三步：\n\n1， 请您补充如下声明中的空白，包括软件名、软件的首次发表年份以及您作为版权人的名字；\n\n2， 请您在软件包的一级目录下创建以“LICENSE”为名的文件，将整个许可证文本放入该文件中；\n\n3， 请将如下声明文本放入每个源文件的头部注释中。\n\n```\nCopyright (c) [Year] [name of copyright holder]\n[Software Name] is licensed under Mulan PSL v2.\nYou can use this software according to the terms and conditions of the Mulan PSL v2.\nYou may obtain a copy of Mulan PSL v2 at:\n         http://license.coscl.org.cn/MulanPSL2\nTHIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\nEITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\nMERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\nSee the Mulan PSL v2 for more details.\n```\n\nMulan Permissive Software License，Version 2 (Mulan PSL v2)\n\nJanuary 2020 http://license.coscl.org.cn/MulanPSL2\n\nYour reproduction, use, modification and distribution of the Software shall be subject to Mulan PSL v2 (this License) with the following terms and conditions:\n\n0. Definition\n\nSoftware means the program and related documents which are licensed under this License and comprise all Contribution(s).\n\nContribution means the copyrightable work licensed by a particular Contributor under this License.\n\nContributor means the Individual or Legal Entity who licenses its copyrightable work under this License.\n\nLegal Entity means the entity making a Contribution and all its Affiliates.\n\nAffiliates means entities that control, are controlled by, or are under common control with the acting entity under this License, ‘control’ means direct or indirect ownership of at least fifty percent (50%) of the voting power, capital or other securities of controlled or commonly controlled entity.\n\n1. Grant of Copyright License\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable copyright license to reproduce, use, modify, or distribute its Contribution, with modification or not.\n\n2. Grant of Patent License\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable (except for revocation under this Section) patent license to make, have made, use, offer for sale, sell, import or otherwise transfer its Contribution, where such patent license is only limited to the patent claims owned or controlled by such Contributor now or in future which will be necessarily infringed by its Contribution alone, or by combination of the Contribution with the Software to which the Contribution was contributed. The patent license shall not apply to any modification of the Contribution, and any other combination which includes the Contribution. If you or your Affiliates directly or indirectly institute patent litigation (including a cross claim or counterclaim in a litigation) or other patent enforcement activities against any individual or entity by alleging that the Software or any Contribution in it infringes patents, then any patent license granted to you under this License for the Software shall terminate as of the date such litigation or activity is filed or taken.\n\n3. No Trademark License\n\nNo trademark license is granted to use the trade names, trademarks, service marks, or product names of Contributor, except as required to fulfill notice requirements in section 4.\n\n4. Distribution Restriction\n\nYou may distribute the Software in any medium with or without modification, whether in source or executable forms, provided that you provide recipients with a copy of this License and retain copyright, patent, trademark and disclaimer statements in the Software.\n\n5. Disclaimer of Warranty and Limitation of Liability\n\nTHE SOFTWARE AND CONTRIBUTION IN IT ARE PROVIDED WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL ANY CONTRIBUTOR OR COPYRIGHT HOLDER BE LIABLE TO YOU FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO ANY DIRECT, OR INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING FROM YOUR USE OR INABILITY TO USE THE SOFTWARE OR THE CONTRIBUTION IN IT, NO MATTER HOW IT’S CAUSED OR BASED ON WHICH LEGAL THEORY, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n6. Language\n\nTHIS LICENSE IS WRITTEN IN BOTH CHINESE AND ENGLISH, AND THE CHINESE VERSION AND ENGLISH VERSION SHALL HAVE THE SAME LEGAL EFFECT. IN THE CASE OF DIVERGENCE BETWEEN THE CHINESE AND ENGLISH VERSIONS, THE CHINESE VERSION SHALL PREVAIL.\n\nEND OF THE TERMS AND CONDITIONS\n\nHow to Apply the Mulan Permissive Software License，Version 2 (Mulan PSL v2) to Your Software\n\nTo apply the Mulan PSL v2 to your work, for easy identification by recipients, you are suggested to complete following three steps:\n\nFill in the blanks in following statement, including insert your software name, the year of the first publication of your software, and your name identified as the copyright owner;\n\nCreate a file named \"LICENSE\" which contains the whole context of this License in the first directory of your software package;\n\nAttach the statement to the appropriate annotated syntax at the beginning of each source file.\n\n```\nCopyright (c) [Year] [name of copyright holder]\n[Software Name] is licensed under Mulan PSL v2.\nYou can use this software according to the terms and conditions of the Mulan PSL v2.\nYou may obtain a copy of Mulan PSL v2 at:\n         http://license.coscl.org.cn/MulanPSL2\nTHIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\nEITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\nMERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\nSee the Mulan PSL v2 for more details.\n```\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 7.24609375,
          "content": "OceanBase miniob\n\nCopyright (c) 2021 OceanBase and/or its affiliates. All rights reserved.\n\nminiob is licensed under [Mulan PSL v2.](http://license.coscl.org.cn/MulanPSL2)\n\n\n=============================== Libevent ===============================\nLibevent is available for use under the following license, commonly known\nas the 3-clause (or \"modified\") BSD license:\n\n==============================\nCopyright (c) 2000-2007 Niels Provos <provos@citi.umich.edu>\nCopyright (c) 2007-2012 Niels Provos and Nick Mathewson\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. The name of the author may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n==============================\n\n============================== JsonCpp =================================\nThe JsonCpp library's source code, including accompanying documentation,\ntests and demonstration applications, are licensed under the following\nconditions...\n\nBaptiste Lepilleur and The JsonCpp Authors explicitly disclaim copyright in all\njurisdictions which recognize such a disclaimer. In such jurisdictions,\nthis software is released into the Public Domain.\n\nIn jurisdictions which do not recognize Public Domain property (e.g. Germany as of\n2010), this software is Copyright (c) 2007-2010 by Baptiste Lepilleur and\nThe JsonCpp Authors, and is released under the terms of the MIT License (see below).\n\nIn jurisdictions which recognize Public Domain property, the user of this\nsoftware may choose to accept it either as 1) Public Domain, 2) under the\nconditions of the MIT License (see below), or 3) under the terms of dual\nPublic Domain/MIT License conditions described here, as they choose.\n\nThe MIT License is about as close to Public Domain as a license can get, and is\ndescribed in clear, concise terms at:\n\n   http://en.wikipedia.org/wiki/MIT_License\n\nThe full text of the MIT License follows:\n\n========================================================================\nCopyright (c) 2007-2010 Baptiste Lepilleur and The JsonCpp Authors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n========================================================================\n\n=============================== googletest =============================\nCopyright 2008, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=============================== googl benchmark ===========================\n\nCopyright 2015 Google Inc. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n========================================================================\n\n=============================== sysbench =============================\n-- Copyright (C) 2006-2017 Alexey Kopytov <akopytov@gmail.com>\n\n-- This program is free software; you can redistribute it and/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation; either version 2 of the License, or\n-- (at your option) any later version.\n\n-- This program is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with this program; if not, write to the Free Software\n-- Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.681640625,
          "content": "# MiniOB 介绍\n\n<div align=\"left\">\n\n[![Chinese Doc](https://img.shields.io/badge/文档-简体中文-blue)](https://oceanbase.github.io/miniob/)\n[![MiniOB stars](https://img.shields.io/badge/dynamic/json?color=blue&label=stars&query=stargazers_count&url=https%3A%2F%2Fapi.github.com%2Frepos%2Foceanbase%2Fminiob)](https://github.com/oceanbase/miniob)\n[![Coverage Status](https://codecov.io/gh/oceanbase/miniob/branch/main/graph/badge.svg)](https://codecov.io/gh/oceanbase/miniob)\n[![HelloGitHub](https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=62efc8a5bbb64a9fbb1ebb7703446f36&claim_uid=AptH8D2YM3rCGL9&theme=small)](https://hellogithub.com/repository/62efc8a5bbb64a9fbb1ebb7703446f36)\n\n</div>\n\nMiniOB 是 [OceanBase](https://github.com/oceanbase/oceanbase) 团队基于华中科技大学数据库课程原型，联合多所高校重新开发的、专为零基础的同学设计的数据库入门学习项目。MiniOB 的目标是为在校学生、数据库从业者、爱好者或对基础技术感兴趣的人提供一个友好的数据库学习项目，更好地将理论、实践进行结合，提升同学们的工程实战能力。\n\nMiniOB 整体代码简洁，容易上手，设计了一系列由浅入深的题目，帮助同学们从零基础入门，迅速了解数据库并深入学习数据库内核。MiniOB 简化了许多模块，例如不考虑并发操作、安全特性和复杂的事务管理等功能，以便更好地学习数据库实现原理。我们期望通过 MiniOB 的训练，同学们能够熟练掌握数据库内核模块的功能和协同关系，并具备一定的工程编码能力，例如内存管理、网络通信和磁盘 I/O 处理等, 这将有助于同学在未来的面试和工作中脱颖而出。\n\n# [文档](https://oceanbase.github.io/miniob/)\n代码配套设计文档和相关代码注释已经生成文档，并通过 GitHub Pages 发布。您可以直接访问：[MiniOB GitHub Pages](https://oceanbase.github.io/miniob/).\n\n## 快速上手\n\n为了帮助开发者更好地上手并学习 MiniOB，建议阅读以下内容：\n\n1. [MiniOB 框架介绍](https://oceanbase.github.io/miniob/design/miniob-architecture/)\n2. [如何编译 MiniOB 源码](https://oceanbase.github.io/miniob/how_to_build/)\n3. [如何运行 MiniOB](https://oceanbase.github.io/miniob/how_to_run/)\n4. [使用 GitPod 开发 MiniOB](https://oceanbase.github.io/miniob/dev-env/dev_by_gitpod/)\n5. [doxygen 代码文档](https://oceanbase.github.io/miniob/design/doxy/html/index.html)\n\n为了帮助大家更好地学习数据库基础知识，OceanBase社区提供了一系列教程。更多文档请参考 [MiniOB GitHub Pages](https://oceanbase.github.io/miniob/)。建议学习：\n\n1. [《从0到1数据库内核实战教程》  视频教程](https://open.oceanbase.com/activities/4921877?id=4921946)\n2. [《从0到1数据库内核实战教程》  基础讲义](https://github.com/oceanbase/kernel-quickstart)\n3. [《数据库管理系统实现》  华中科技大学实现教材](https://oceanbase.github.io/miniob/lectures/index.html)\n\n## 系统架构\n\nMiniOB 整体架构如下图所示:\n\n<img src=\"./docs/docs/design/images/miniob-architecture.svg\" width = \"60%\" alt=\"InternalNode\" align=center />\n\n其中:\n\n- 网络模块(NET Service)：负责与客户端交互，收发客户端请求与应答；\n- SQL解析(Parser)：将用户输入的SQL语句解析成语法树；\n- 语义解析模块(Resolver)：将生成的语法树，转换成数据库内部数据结构；\n- 查询优化(Optimizer)：根据一定规则和统计数据，调整/重写语法树。(部分实现)；\n- 计划执行(Executor)：根据语法树描述，执行并生成结果；\n- 存储引擎(Storage Engine)：负责数据的存储和检索；\n- 事务管理(MVCC)：管理事务的提交、回滚、隔离级别等。当前事务管理仅实现了MVCC模式，因此直接以MVCC展示；\n- 日志管理(Redo Log)：负责记录数据库操作日志；\n- 记录管理(Record Manager)：负责管理某个表数据文件中的记录存放；\n- B+ Tree：表索引存储结构；\n- 会话管理：管理用户连接、调整某个连接的参数；\n- 元数据管理(Meta Data)：记录当前的数据库、表、字段和索引元数据信息；\n- 客户端(Client)：作为测试工具，接收用户请求，向服务端发起请求。\n\n\n# [OceanBase 大赛](https://open.oceanbase.com/competition)\n\n全国大学生计算机系统能力大赛（以下简称“大赛”）是由系统能力培养研究专家组发起，全国高等学校计算机教育研究会、系统能力培养研究项目示范高校共同主办、OceanBase 承办，面向高校大学生的全国性数据库大赛。\n大赛面向全国爱好数据库的高校学生，以“竞技、交流、成长”为宗旨，搭建基于赛事的技术交流平台，促进高校创新人才培养机制，不仅帮助学生从0开始系统化学习 OceanBase 数据库理论知识，提升学生数据库实践能力，更能帮助学生走向企业积累经验，促进国内数据库人才的发展，碰撞出创新的火花。\n\nOceanBase 初赛基于一套适合初学者实践的数据库实训平台 MiniOB，代码量少，易于上手学习，包含了数据库的各个关键模块，是一个系统性的数据库学习平台。基于该平台设置了一系列由浅入深的题目，以帮助同学们更好\"零\"基础入门。\n\n为了帮助大家能在大赛中取得好成绩，我们提供了一系列的教程和指导，帮助大家更好地学习数据库基础知识，更好地完成大赛题目。\n欢迎大家查看[《从0到1数据库内核实战教程》  视频教程](https://open.oceanbase.com/activities/4921877?id=4921946)，视频中包含了代码框架的介绍和一些入门题目的讲解。\n> 由于MiniOB是一个持续演进的产品，视频教程中有些内容会与最新代码有冲突，建议大家参考讲解中的思路。\n\n大赛的初赛是在MiniOB上进行的，同学们可以在前几届的题目上进行提前训练，可以让自己比别人提前一步。大家在日常训练时可以在[MiniOB 训练营](https://open.oceanbase.com/train?questionId=500003) 上提交代码进行测试。\n\n在提交前, 请参考并学习 [训练营使用说明](https://ask.oceanbase.com/t/topic/35600372)。\n\n如果大家在大赛中或使用训练营时遇到一些问题，请先查看[大赛 FAQ](https://ask.oceanbase.com/t/topic/35601465)。\n\n# 在线开发平台\n\n搭建开发环境是一个比较耗时而且繁琐的事情，特别是对于初学者。为了让大家更快地上手 MiniOB，本仓库基于 Gitpod 建立了快速在线开发平台。点击下面的按钮即可一键体验（建议使用 Chrome 浏览器）。\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/oceanbase/miniob)\n\n> 注意：这个链接打开的是MiniOB主仓库的开发环境，同学们需要通过gitpod进入自己的仓库开发环境。\n\n首次进入 Gitpod 时需要安装一些依赖。安装完成后，终端界面会显示 \"Dependency installed successfully\"。运行 `bash build.sh --make -j4` 命令即可编译 MiniOB。\n\n# Contributing\n\nOceanBase 社区热情欢迎每一位对数据库技术热爱的开发者，期待与您携手开启思维碰撞之旅。无论是文档格式调整或文字修正、问题修复还是增加新功能，都是参与和贡献 OceanBase 社区的方式之一。MiniOB 现在开放了一些[新功能的开发](https://github.com/oceanbase/miniob/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)，欢迎有兴趣的同学一起共建，希望我们共同成长。如果你对MiniOB不熟悉也没关系，可以直接联系我们，我们将会有人指导上手。现在就开始您的首次贡献吧！更多详情，请参考 [社区贡献](CONTRIBUTING.md)。\n\n# Contributors\n感谢所有为 MiniOB 项目做出贡献的同学们！\n\n<a href=\"https://github.com/oceanbase/miniob/graphs/contributors\"><img src=\"https://contributors-img.web.app/image?repo=oceanbase/miniob&width=890\" /></a>\n\n# License\n\nMiniOB 采用 [木兰宽松许可证，第2版](https://license.coscl.org.cn/MulanPSL2), 可以自由拷贝和使用源码, 当做修改或分发时, 请遵守 [木兰宽松许可证，第2版](https://license.coscl.org.cn/MulanPSL2). \n\n# 社区组织\n\n- [OceanBase 社区交流群 33254054](https://h5.dingtalk.com/circle/healthCheckin.html?corpId=dingd88359ef5e4c49ef87cda005313eea7a&1fe0ca69-72d=16c86a07-83c&cbdbhh=qwertyuiop&origin=1)\n- [OceanBase 大赛官方交流群 35326455](https://qr.dingtalk.com/action/joingroup?code=v1,k1,g61jI0RwHQA8UMocuTbys2cyM7vck2c6jNE87vdxz9o=&_dt_no_comment=1&origin=11)\n- [OceanBase 官方论坛](https://ask.oceanbase.com/)\n- MiniOB 开发者微信群(添加 OBCE888 为好友，备注 MiniOB SIG，邀请入群)\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 4.3017578125,
          "content": "#!/bin/bash\n\n# readlink -f cannot work on mac\nTOPDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n\nBUILD_SH=$TOPDIR/build.sh\necho \"THIRD_PARTY_INSTALL_PREFIX is ${THIRD_PARTY_INSTALL_PREFIX:=$TOPDIR/deps/3rd/usr/local}\"\n\nCMAKE_COMMAND=\"cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 --log-level=STATUS\"\nCMAKE_COMMAND_THIRD_PARTY=\"$CMAKE_COMMAND -DCMAKE_INSTALL_PREFIX=$THIRD_PARTY_INSTALL_PREFIX\"\nCMAKE_COMMAND_MINIOB=\"$CMAKE_COMMAND\"\n\nALL_ARGS=(\"$@\")\nBUILD_ARGS=()\nMAKE_ARGS=()\nMAKE=make\n\necho \"$0 ${ALL_ARGS[@]}\"\n\nfunction usage\n{\n  echo \"Usage:\"\n  echo \"./build.sh -h\"\n  echo \"./build.sh init # install dependence\"\n  echo \"./build.sh clean\"\n  echo \"./build.sh [BuildType] [--make [MakeOptions]]\"\n  echo \"\"\n  echo \"OPTIONS:\"\n  echo \"BuildType => debug(default), release\"\n  echo \"MakeOptions => Options to make command, default: -j N\"\n\n  echo \"\"\n  echo \"Examples:\"\n  echo \"# Init.\"\n  echo \"./build.sh init\"\n  echo \"\"\n  echo \"# Build by debug mode and make with -j24.\"\n  echo \"./build.sh debug --make -j24\"\n}\n\nfunction parse_args\n{\n  make_start=false\n  for arg in \"${ALL_ARGS[@]}\"; do\n    if [[ \"$arg\" == \"--make\" ]]\n    then\n      make_start=true\n    elif [[ $make_start == false ]]\n    then\n      BUILD_ARGS+=(\"$arg\")\n    else\n      MAKE_ARGS+=(\"$arg\")\n    fi\n\n  done\n}\n\n# try call command make, if use give --make in command line.\nfunction try_make\n{\n  if [[ $MAKE != false ]]\n  then\n    # use single thread `make` if concurrent building failed\n    $MAKE \"${MAKE_ARGS[@]}\" || $MAKE\n  fi\n}\n\n# create build directory and cd it.\nfunction prepare_build_dir\n{\n  TYPE=$1\n  mkdir -p $TOPDIR/build_$TYPE && cd $TOPDIR/build_$TYPE\n}\n\nfunction do_init\n{\n  git submodule update --init || return\n  current_dir=$PWD\n\n  MAKE_COMMAND=\"make --silent\"\n\n  # build libevent\n  cd ${TOPDIR}/deps/3rd/libevent && \\\n    mkdir -p build && \\\n    cd build && \\\n    ${CMAKE_COMMAND_THIRD_PARTY} .. -DEVENT__DISABLE_OPENSSL=ON -DEVENT__LIBRARY_TYPE=BOTH && \\\n    ${MAKE_COMMAND} -j4 && \\\n    make install\n\n  # build googletest\n  cd ${TOPDIR}/deps/3rd/googletest && \\\n    mkdir -p build && \\\n    cd build && \\\n    ${CMAKE_COMMAND_THIRD_PARTY} .. && \\\n    ${MAKE_COMMAND} -j4 && \\\n    ${MAKE_COMMAND} install\n\n  # build google benchmark\n  cd ${TOPDIR}/deps/3rd/benchmark && \\\n    mkdir -p build && \\\n    cd build && \\\n    ${CMAKE_COMMAND_THIRD_PARTY} .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBENCHMARK_ENABLE_TESTING=OFF  -DBENCHMARK_INSTALL_DOCS=OFF -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DBENCHMARK_USE_BUNDLED_GTEST=OFF -DBENCHMARK_ENABLE_ASSEMBLY_TESTS=OFF && \\\n    ${MAKE_COMMAND} -j4 && \\\n    ${MAKE_COMMAND} install\n\n  # build jsoncpp\n  cd ${TOPDIR}/deps/3rd/jsoncpp && \\\n    mkdir -p build && \\\n    cd build && \\\n    ${CMAKE_COMMAND_THIRD_PARTY} -DJSONCPP_WITH_TESTS=OFF -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF .. && \\\n    ${MAKE_COMMAND} && \\\n    ${MAKE_COMMAND} install\n\n  cd $current_dir\n}\n\nfunction do_musl_init\n{\n  git clone https://github.com/ronchaine/libexecinfo deps/3rd/libexecinfo || return\n  current_dir=$PWD\n\n  MAKE_COMMAND=\"make --silent\"\n  cd ${TOPDIR}/deps/3rd/libexecinfo && \\\n    ${MAKE_COMMAND} install && \\\n    ${MAKE_COMMAND} clean && rm ${TOPDIR}/deps/3rd/libexecinfo/libexecinfo.so.* && \\\n    cd ${current_dir}\n}\n\nfunction prepare_build_dir\n{\n  TYPE=$1\n  mkdir -p ${TOPDIR}/build_${TYPE}\n  rm -f build\n  echo \"create soft link for build_${TYPE}, linked by directory named build\"\n  ln -s build_${TYPE} build\n  cd ${TOPDIR}/build_${TYPE}\n}\n\nfunction do_build\n{\n  TYPE=$1; shift\n  prepare_build_dir $TYPE || return\n  echo \"${CMAKE_COMMAND_MINIOB} ${TOPDIR} $@\"\n  ${CMAKE_COMMAND_MINIOB} -S ${TOPDIR} $@\n}\n\nfunction do_clean\n{\n  echo \"clean build_* dirs\"\n  find . -maxdepth 1 -type d -name 'build_*' | xargs rm -rf\n}\n\nfunction build {\n  # 默认参数是 debug\n  if [ -z \"${BUILD_ARGS[0]}\" ]; then\n    set -- \"debug\"  # 如果没有参数，则设置默认值\n  else\n    set -- \"${BUILD_ARGS[@]}\"  # 否则使用 BUILD_ARGS 的第一个参数\n  fi\n  local build_type_lower=$(echo \"$1\" | tr '[:upper:]' '[:lower:]')  # 转换为小写\n  echo \"Build type: $build_type_lower\"  # 输出构建类型\n\n  do_build $@ -DCMAKE_BUILD_TYPE=\"$build_type_lower\" # 调用 do_build\n}\n\n\nfunction main\n{\n  case \"$1\" in\n    -h)\n      usage\n      ;;\n    init)\n      do_init\n      ;;\n    musl)\n      do_musl_init\n      ;;\n    clean)\n      do_clean\n      ;;\n    *)\n      parse_args\n      build\n      try_make\n      ;;\n  esac\n}\n\nmain \"$@\"\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittest",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}