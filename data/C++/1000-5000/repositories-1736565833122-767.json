{
  "metadata": {
    "timestamp": 1736565833122,
    "page": 767,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eranif/codelite",
      "stars": 2179,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.669921875,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignEscapedNewlinesLeft: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortFunctionsOnASingleLine: true\n#AllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: false\nBreakBeforeBraces: Linux\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nColumnLimit:     120\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: Inner\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Left\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nStandard: C++11\nTabWidth: 4\nUseTab: Never\nSortIncludes: true\nIncludeBlocks: Regroup\nAlwaysBreakTemplateDeclarations: true\nAlwaysBreakBeforeMultilineStrings: false\nAlignEscapedNewlines: LeftWithLastLine\nAlignOperands: true\nBinPackParameters: false\nBinPackArguments: false\n"
        },
        {
          "name": ".clangd",
          "type": "blob",
          "size": 0.1201171875,
          "content": "CompileFlags:\n    Add:\n        - \"-ferror-limit=0\"\n\n---\n\nIf:\n    PathMatch: .*\\.h\nCompileFlags:\n    Add:\n        - \"-xc++\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1015625,
          "content": "root = true\n\n[*]\nindent_size = 4\ntab_width = 4\nindent_style = space\n\n[*.mk,Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3525390625,
          "content": "/build-release/\n*.mk\n*.dll\n*.exe\n.codelite/\n*.xrc\n*.txt\n!CMakeLists.txt\n*.gch\n.clangd/\n*.a\n*.bak\n*.orig\n*.log\ntags\n*.diff\nMakefile\nbuild-Debug/\nbuild-Win*/\nDebug/\nRelease/\nbuild-Debug*/\n*build-debug*/\nbuild-*release*/\nbuild-*debug*/\n.cache/\nctags/\n.ctagsd/\ncompile_commands.json\ncompile_flags.txt\nwxcrafter/src/wxcversion.cpp\nLiteEditor/autoversion.h\n.DS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.5615234375,
          "content": "[submodule \"ctags\"]\n\tpath = submodules/ctags\n\turl = https://github.com/eranif/ctags\n[submodule \"wxdap\"]\n\tpath = submodules/wxdap\n\turl = https://github.com/eranif/wxdap\n[submodule \"wx-config-msys2\"]\n\tpath = submodules/wx-config-msys2\n\turl = https://github.com/eranif/wx-config-msys2.git\n[submodule \"yaml-cpp\"]\n\tpath = submodules/yaml-cpp\n\turl = https://github.com/jbeder/yaml-cpp\n[submodule \"cc-wrapper\"]\n\tpath = submodules/cc-wrapper\n\turl = https://github.com/eranif/cc-wrapper\n[submodule \"dtl\"]\n\tpath = submodules/dtl\n\turl = https://github.com/eranif/dtl.git\n[submodule \"openssl-cmake\"]\n\tpath = submodules/openssl-cmake\n\turl = https://github.com/janbar/openssl-cmake.git\n[submodule \"libssh\"]\n\tpath = submodules/libssh\n\turl = https://git.libssh.org/projects/libssh.git\n[submodule \"zlib\"]\n\tpath = submodules/zlib\n\turl = https://github.com/madler/zlib\n[submodule \"hunspell\"]\n\tpath = submodules/hunspell\n\turl = https://github.com/hunspell/hunspell.git\n[submodule \"submodules/llama.cpp\"]\n\tpath = submodules/llama.cpp\n\turl = https://github.com/ggerganov/llama.cpp.git\n[submodule \"submodules/websocketpp\"]\n\tpath = submodules/websocketpp\n\turl = https://github.com/zaphoyd/websocketpp.git\n[submodule \"submodules/asio\"]\n\tpath = submodules/asio\n\turl = https://github.com/chriskohlhoff/asio.git\n[submodule \"submodules/cJSON\"]\n\tpath = submodules/cJSON\n\turl = https://github.com/DaveGamble/cJSON\n[submodule \"submodules/wxsf-code\"]\n\tpath = submodules/wxsf-code\n\turl = https://github.com/eranif/wxsf-code.git\n[submodule \"submodules/lexilla\"]\n\tpath = submodules/lexilla\n\turl = https://github.com/eranif/lexilla.git\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.0830078125,
          "content": "Eran Ifrah    <eran.ifrah@gmail.com>\nDavid G. Hart\n\nSpecial thanks to:\n\nScott Dolim\n\n"
        },
        {
          "name": "AutoSave",
          "type": "tree",
          "content": null
        },
        {
          "name": "BuildInfo.txt",
          "type": "blob",
          "size": 2.4169921875,
          "content": "//--------------------------------------------\r\n// Linux/Mac/FreeBSD\r\n//--------------------------------------------\r\nThe build for Linux/Mac/FreeBSD uses the default Linux build:\r\n\r\nfrom the trunk/ directory, run:\r\n\r\nPre-requisits:\r\n\r\nMac: wxWidgets 2.9.5 or later\r\n\r\nLinux/FreeBSD: wxWidgets 2.9.5 or later, gtk2 development package, cmake\r\n\r\nBuilding:\r\n\r\n//-----------------------------------------------------\r\n// Linux/FreeBSD \r\n//-----------------------------------------------------\r\n\r\n  In the CodeLite source dir, do:\r\n    mkdir build-release\r\n    cd build-release\r\n    cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release ..\r\n    make\r\n    (Become the superuser)\r\n    make install\r\n    \r\nThere are various other options that you could pass to cmake. See CMakeLists.txt for the commonest.\r\n\r\n//-----------------------------------------------------\r\n// Windows: MinGW \r\n//-----------------------------------------------------\r\n\r\nTo build: \r\nDownload CodeLite for Windows + wxWidgets development 2.9.5 from here: (2 installers ):\r\nhttps://sourceforge.net/projects/codelite/files/Releases/\r\n\r\nInstall them - it is recommended to _accept_ the default options suggested by the installer\r\n\r\n\r\nStep 1:\r\n\r\nLoad the workspace codelite-sources/LiteEditor.workspace - and hit 'F7'\r\n\r\n    ** Make sure that the active project (bold text) is set to \"CodeLiteIDE\" **\r\n\r\nStep 2:\r\n\r\nClose the current workspace\r\nLoad the workspace codelite-sources/codelite_utils/codelite_utils.workspace\r\n\r\nStep 3:\r\nSelect the 'Release' configuration and build it using F7\r\n\r\nOnce build is done, you can copy the files to the target directory by running the script:\r\n\r\n    codelite-sources/Runtime/update.bat\r\n\r\n **** Note that you may need to update the script to point it to the codelite installation directory ****\r\n \r\n \r\n//---------------------------------------------------------\r\n// MacOSX\r\n//---------------------------------------------------------\r\n\r\nYou should have wxWidgets 2.9.5 or higher\r\nTo build wx under Mac, download the latest source package and build it as follows:\r\n\r\n $> cd wx-sources/\r\n $> mkdir build-release\r\n $> cd  build-release\r\n $> ../configure --disable-debug --with-osx_cocoa --enable-shared --enable-monolithic\r\n $> make -j4\r\n $> sudo make install\r\n\r\nNext, build codelite:\r\n\r\n $> cd codelite-src/\r\n $> ./mac-build.sh --cmake\r\n \r\n ... codelite will compile and will create a bundle, to run it:\r\n \r\n $> open build-release/pack/codelite.app/\r\n \r\n\r\nEnjoy,\r\nEran\r\n\r\n   \r\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 40.9306640625,
          "content": "# 3.16 and later is required so we can build CodeLite with PCH\ncmake_minimum_required(VERSION 3.16)\n\n# ######################################################################################################################\n#\n# CodeLite IDE cmake file Typical usage will be (build in release mode):\n#\n# Linux / macOS:\n# -------------------\n# ~~~\n# mkdir build\n# cd build\n# cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release ..\n# make -j$(nproc) install\n# ~~~\n#\n# MSYS2\n# -------------------\n#\n# ~~~\n# mkdir build-release\n# cd build-release\n# cmake -G\"MinGW Makefiles\" -DCMAKE_BUILD_TYPE=Release .. -DWXWIN=C:/msys64/path/to/wx-dir\n# make -j$(nproc)\n# ~~~\n#\n# Optional command line arguments:\n#\n# -DCMAKE_BUILD_TYPE=Release|Debug|DebugFull -DCOPY_WX_LIBS=1|0 -DPREVENT_WX_ASSERTS=1|0 -DAUTOGEN_REVISION=1|0\n# -DWITH_PCH=1|0 -DWITH_NATIVEBOOK=1|0 -DWITH_WXPATH=/path/to/different_wx-config/directory/ -DMAKE_DEB=1|0\n# -DENABLE_SFTP=1|0 // When set to 1 codelite is built with SFTP/Remoty support. -DWITH_WX_CONFIG=/path/to/wx-config\n#\n# Windows / MSYS options:\n#\n# -DWXWIN=<fullpath>                          // https://docs.codelite.org/build/build_wx_widgets/#windows\n# -DWITH_POSIX_LAYOUT // When building under Windows, install CodeLite using POSIX layout\n#\n# ######################################################################################################################\n\nif(NOT CMAKE_VERSION VERSION_LESS 3.1) # THIS MUST STAY AT THE TOP OF THE FILE\n    cmake_policy(VERSION 3.1) # Doing this prevents multiple, very verbose warnings about policy CMP0053 not being set\nendif()\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules/\")\ninclude(OSXDeps)\n\n# ######################################################################################################################\n# Defaults\n# ######################################################################################################################\nproject(\"CodeLite\")\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\noption(WITH_CHATAI \"Enable ChatAI plugin\" OFF)\noption(BUILD_TESTING \"Build test executables\" OFF)\n\n# Set this option to \"ON\" in order to get CMake standard/expected behavior\nset(RETAIN_CACHED_VALUES\n    OFF\n    CACHE BOOL \"Compat option to unset certain cached variables\")\n\nif(UNIX AND NOT APPLE)\n    if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n        # user did not pass -DCMAKE_INSTALL_PREFIX and this is the first time we are executing cmake, the default is set\n        # to /usr/local and we do not want that..\n        set(CMAKE_INSTALL_PREFIX\n            \"/usr\"\n            CACHE ON \"Install prefix\" FORCE)\n    endif()\nendif()\n\nif(MINGW)\n    set(CMAKE_INSTALL_PREFIX \"${CMAKE_BINARY_DIR}/install\")\n    set(CL_PREFIX \"${CMAKE_INSTALL_PREFIX}\")\n    if(NOT DEFINED ENV{MSYS2_BASE})\n        message(\n            FATAL_ERROR\n                \"Set the environment variable MSYS2_BASE to point to the installation of your MSYS2. e.g. export MSYS2_BASE=C:/msys64\"\n        )\n    endif()\n    set(MSYS2_BASE $ENV{MSYS2_BASE})\nelseif(UNIX AND NOT APPLE)\n    if(CL_PREFIX)\n        # user provided CL_PREFIX -> use it instead of CMAKE_INSTALL_PREFIX\n        set(CMAKE_INSTALL_PREFIX \"${CL_PREFIX}\")\n    else()\n        # update CL_PREFIX to CMAKE_INSTALL_PREFIX\n        set(CL_PREFIX \"${CMAKE_INSTALL_PREFIX}\")\n    endif()\nendif()\n\nmessage(STATUS \"CMAKE_INSTALL_PREFIX is set to ${CMAKE_INSTALL_PREFIX}\")\nset(CODELITE_VERSION \"18.1.0\")\n\n# for now, we keep wxCrafter version to be the same as CodeLite version this allows for better support\nset(WXCRAFTER_VERSION ${CODELITE_VERSION})\n\n# Generate compile_commands.json file for code completion\nset(CMAKE_EXPORT_COMPILE_COMMANDS 1)\nset(CL_SRC_ROOT ${CMAKE_CURRENT_LIST_DIR})\n\ninclude(UtilsHelper)\nfind_package(SQLite3)\n\nif(NOT SQLite3_FOUND)\n    if(UNIX)\n        message(FATAL_ERROR \" **** Could not find sqlite3. Please install libsqlite3-dev package\")\n    elseif(APPLE)\n        message(FATAL_ERROR \" **** Could not find sqlite3. Please install Sqlite3 via brew\")\n    elseif(MINGW)\n        message(\n            FATAL_ERROR\n                \" **** Could not find sqlite3. Please install sqlite3 package: pacman -S mingw-w64-clang-x86_64-sqlite3\"\n        )\n    else()\n        message(FATAL_ERROR \" **** Could not find sqlite3. Please install sqlite3 development package\")\n    endif()\nendif()\n\nfind_package(BISON REQUIRED)\n\nif(NOT BISON_FOUND)\n    if(UNIX)\n        message(FATAL_ERROR \" **** Could not find flex. Please install bison package\")\n    elseif(APPLE)\n        message(FATAL_ERROR \" **** Could not find flex. Please install bison\")\n    elseif(MINGW)\n        message(FATAL_ERROR \" **** Could not find flex. Please install bison package: pacman -S bison\")\n    else()\n        message(FATAL_ERROR \" **** Could not find bison. Please install bison package\")\n    endif()\nendif()\n\nfind_package(FLEX REQUIRED)\n\nif(NOT FLEX_FOUND)\n    if(UNIX)\n        message(FATAL_ERROR \" **** Could not find flex. Please install flex package\")\n    elseif(APPLE)\n        message(FATAL_ERROR \" **** Could not find flex. Please install flex\")\n    elseif(MINGW)\n        message(FATAL_ERROR \" **** Could not find flex. Please install flex package: pacman -S flex\")\n    else()\n        message(FATAL_ERROR \" **** Could not find flex. Please install flex package\")\n    endif()\nendif()\n\nset(IS_FREEBSD 0)\nif(CMAKE_SYSTEM_NAME MATCHES \"^.*BSD$|DragonFly\")\n    set(IS_FREEBSD 1)\n    add_definitions(-D_BSD_SOURCE -DFREEBSD)\nendif()\nset(IS_NETBSD 0)\nset(BUILD_WXC 0)\nset(CL_COPY_WX_LIBS 0)\nset(WITH_SFTP 1)\n\n# Create the post_install.cmake script (no append here)\nwrite_file(\"${CMAKE_BINARY_DIR}/post_install.cmake\" \"message(STATUS \\\"Running post install script\\\")\")\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations\") # Avoid very multiple warnings spam due to\n                                                                       # deprecated wx methods\nif(UNIX AND NOT APPLE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -isystem /usr/include/harfbuzz -isystem /usr/local/include/harfbuzz\"\n    )# Needed for fedora 31 so far, but will spread. See https://gitlab.kitware.com/cmake/cmake/issues/19531\nendif()\n\nif(UNIX\n   AND NOT APPLE\n   AND NOT CYGWIN)\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--disable-new-dtags\")\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--disable-new-dtags\")\nendif()\n\nif(UNIX)\n    # Configure CCache if available\n    find_program(CCACHE_FOUND ccache)\n    if(CCACHE_FOUND)\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)\n    endif(CCACHE_FOUND)\nendif(UNIX)\n\nif(UNIX)\n    set(BUILD_DIRECTORY ${CMAKE_BINARY_DIR})\nelseif(MINGW)\n    set(BUILD_DIRECTORY ${CMAKE_BINARY_DIR})\nelse()\n    set(BUILD_DIRECTORY $ENV{CD})\nendif()\n\nmessage(\"-- BUILD_DIRECTORY is set to ${BUILD_DIRECTORY}\")\n\nset(OS_NAME \"WIN\")\nif(UNIX)\n    execute_process(\n        COMMAND uname -s\n        OUTPUT_VARIABLE OS_NAME\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\nendif()\nmessage(\"-- OS name ${OS_NAME}\")\n\nif(APPLE)\n    set(WX_COMPONENTS \"std aui propgrid ribbon\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\nelse(APPLE)\n    set(WX_COMPONENTS \"std aui propgrid stc ribbon richtext\")\nendif()\n\n# Appstream metadata\nset(METAINFO_FILE \"${CMAKE_SOURCE_DIR}/Runtime/org.codelite.codelite.metainfo.xml\")\ninstall(FILES ${METAINFO_FILE} DESTINATION share/metainfo)\n\nif(WITH_WXPATH)\n    set(ENV{PATH} ${WITH_WXPATH}:$ENV{PATH})\nendif()\nif(NOT RETAIN_CACHED_VALUES)\n    unset(WITH_WXPATH CACHE)\nendif()\n\nif(WITH_WX_CONFIG)\n    set(CL_WX_CONFIG ${WITH_WX_CONFIG})\nelse(WITH_WX_CONFIG)\n    set(CL_WX_CONFIG wx-config)\nendif()\n\nif(UNIX AND NOT MINGW)\n    execute_process(\n        COMMAND which ${CL_WX_CONFIG}\n        OUTPUT_VARIABLE WX_TOOL\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\n    if(NOT WX_TOOL)\n        message(\n            FATAL_ERROR\n                \"\\nNo functional wx_config script was found in your PATH.\\nIs the wxWidgets development package installed?\"\n        )\n    else()\n        # cmake find_package() will try env var WX_CONFIG as wx-config tool path before checking its builtin hardcoded\n        # naming conbinations for wx-config tool\n        set(ENV{WX_CONFIG} ${WX_TOOL})\n        execute_process(\n            COMMAND sh ${WX_TOOL} --version\n            OUTPUT_VARIABLE WX_VERSION\n            OUTPUT_STRIP_TRAILING_WHITESPACE)\n        if(\"${WX_VERSION}\" VERSION_LESS \"3.1.6\")\n            message(\n                FATAL_ERROR\n                    \"I'm afraid your wxWidgets version is too old.\\nBuilding CodeLite requires at least wxWidgets-3.1.6\"\n            )\n        endif()\n        if(MINGW)\n            execute_process(\n                COMMAND sh ${WX_TOOL} --debug=no --rescomp\n                OUTPUT_VARIABLE WX_RC_FLAGS\n                OUTPUT_STRIP_TRAILING_WHITESPACE)\n            string(REGEX REPLACE \"windres\" \"\" WX_RC_FLAGS ${WX_RC_FLAGS})\n            set(CMAKE_RC_FLAGS \"${CMAKE_RC_FLAGS} ${WX_RC_FLAGS}\")\n            add_definitions(-D__WXMSW__)\n        endif(MINGW)\n    endif()\n    message(\"-- wx-config used is: ${WX_TOOL}\")\n    message(\"-- wxWidgets version is: ${WX_VERSION}\")\n    if(NOT APPLE AND NOT MINGW)\n        # Is the wx we are using built on gtk2 or 3?\n        execute_process(\n            COMMAND ${WX_TOOL} --selected_config\n            OUTPUT_VARIABLE WX_GTK_VERSION\n            OUTPUT_STRIP_TRAILING_WHITESPACE)\n        string(SUBSTRING \"${WX_GTK_VERSION}\" \"3\" \"1\" GTK_VERSION)\n        message(\"-- gtk version is: ${GTK_VERSION}\")\n    endif()\nendif()\n\n# ######################################################################################################################\n# Override defaults with user input\n# ######################################################################################################################\n\nset(CL_INSTALL_LIBDIR \"lib\")\n\nif(NOT MINGW)\n    if(NOT CL_PREFIX)\n        # If the caller hasn't set his own destination, install to a multi-arch lib dir if applicable\n        if(CMAKE_VERSION VERSION_GREATER 2.8.7 AND (UNIX AND NOT APPLE))\n            if(CMAKE_VERSION VERSION_GREATER 3.0.0)\n                # Prior to this, afaict the GNUInstallDirs module worked whatever the prefix Since, it looks at\n                # CMAKE_INSTALL_PREFIX which is /usr/local by default, and refuses to run the multiarch-setting code\n                # unless it's /usr/ So, partly to comply with the default documented above, & partly for packaging,\n                # explicitly set it to /usr\n                set(CMAKE_INSTALL_PREFIX \"/usr\")\n            endif()\n            include(GNUInstallDirs) # defines CMAKE_INSTALL_LIBDIR to lib or lib64 or whatever. Available since cmake\n                                    # 2.8.8\n            set(CL_INSTALL_LIBDIR ${CMAKE_INSTALL_LIBDIR})\n        endif()\n\n        set(CL_PREFIX \"/usr\")\n    endif(NOT CL_PREFIX)\nendif()\n\n# Define the PLUGINS_DIR variable\nif(MINGW)\n    # MinGW\n    set(MINGW_INSTALL_PLUGINS_DIR \"${CMAKE_INSTALL_PREFIX}/plugins\")\n    set(MINGW_INSTALL_BIN \"${CMAKE_INSTALL_PREFIX}\")\nendif()\n\nif(APPLE)\n    set(PLUGINS_DIR ${CMAKE_BINARY_DIR}/codelite.app/Contents/SharedSupport/plugins)\n    set(CL_INSTALL_BIN ${CMAKE_BINARY_DIR}/codelite.app/Contents/MacOS)\n    set(CL_RESOURCES_DIR ${CMAKE_BINARY_DIR}/codelite.app/Contents/SharedSupport)\nelseif(MINGW)\n    set(PLUGINS_DIR \"${MINGW_INSTALL_PLUGINS_DIR}\")\n    set(CL_INSTALL_BIN \"${MINGW_INSTALL_BIN}\")\n    set(CL_RESOURCES_DIR \"${MINGW_INSTALL_BIN}\")\nelse()\n    # /usr/lib/codelite\n    set(PLUGINS_DIR \"${CL_PREFIX}/${CL_INSTALL_LIBDIR}/codelite\")\n    # /usr/bin\n    set(CL_INSTALL_BIN \"${CMAKE_INSTALL_PREFIX}/bin\")\n    # /usr/share/codelite\n    set(CL_RESOURCES_DIR \"${CMAKE_INSTALL_PREFIX}/share/codelite\")\nendif()\n\nmessage(STATUS \"CL_INSTALL_BIN is set to ${CL_INSTALL_BIN}\")\nmessage(STATUS \"PLUGINS_DIR is set to ${PLUGINS_DIR}\")\n\n# Try to link-to or build lldb?\nif(UNIX)\n    set(WITH_LLDB 1)\nelse()\n    set(WITH_LLDB 0)\nendif()\nif(ENABLE_LLDB MATCHES 0)\n    set(WITH_LLDB 0)\n    message(\"-- Disabling lldb support\")\nendif()\nif(NOT RETAIN_CACHED_VALUES)\n    unset(ENABLE_LLDB CACHE)\nendif()\n\nset(DISABLE_CXX 0)\nif(PHP_BUILD MATCHES 1)\n    set(DISABLE_CXX 1)\n    add_definitions(-DPHP_BUILD=1)\nelse()\n    set(DISABLE_CXX 0)\nendif()\n\n# ######################################################################################################################\n# Locate libssh\n# ######################################################################################################################\n# Enable SFTP support?\nif(ENABLE_SFTP MATCHES 0)\n    set(WITH_SFTP 0)\nendif(ENABLE_SFTP MATCHES 0)\n\nif(MAKE_RPM_SLIM MATCHES 1)\n    set(WITH_SFTP 0)\nendif()\n\nif(NOT RETAIN_CACHED_VALUES)\n    unset(ENABLE_SFTP CACHE)\nendif()\n\ninclude(OSXInstall)\n\nif(WITH_SFTP)\n    if(UNIX OR MINGW)\n        # Linux / MinGW / Apple / CYGWIN\n        if(MINGW OR CYGWIN)\n            find_library(\n                LIBSSH_LIB\n                NAMES ssh\n                PATH_SUFFIXES lib)\n            find_path(\n                LIBSSH_INCLUDE_DIR\n                NAMES libssh.h\n                PATH_SUFFIXES include/libssh)\n        elseif(APPLE)\n            message(\"-- LIBSSH_INCLUDE_DIR is set to ${LIBSSH_INCLUDE_DIR}\")\n        elseif(UNIX)\n            # Linux\n            find_library(\n                LIBSSH_LIB\n                NAMES libssh.so\n                HINTS /usr/local/lib /usr/lib ${CMAKE_INSTALL_LIBDIR})\n            find_path(\n                LIBSSH_INCLUDE_DIR\n                NAMES libssh.h\n                HINTS /usr/local/include /usr/include\n                PATH_SUFFIXES libssh)\n        endif()\n        if(NOT APPLE)\n            string(FIND ${LIBSSH_INCLUDE_DIR} \"NOTFOUND\" LIBSSH_NOT_FOUND_POS)\n            if(LIBSSH_NOT_FOUND_POS GREATER -1)\n                if(UNIX AND NOT APPLE)\n                    # Linux / FreeBSD\n                    message(FATAL_ERROR \"**** NOTICE: Install libssh-dev and try again\")\n                elseif(NOT MINGW)\n                    # FreeBSD ?\n                    message(FATAL_ERROR \"**** NOTICE: Install libssh and try again\")\n                endif()\n                message(FATAL_ERROR \"-- Could not find libssh\")\n            endif()\n        endif()\n    endif()\n    message(\"-- LIBSSH_LIB is set to ${LIBSSH_LIB}\")\nendif(WITH_SFTP)\n\n# On UNIX we require GTK\nif(UNIX AND NOT APPLE)\n    if(GTK_VERSION EQUAL 3)\n        set(OLD_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}) # Cache the current value\n        set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules/\")\n        find_package(GTK3)\n        set(CMAKE_MODULE_PATH ${OLD_CMAKE_MODULE_PATH}) # Reset, else the official path isn't used again :/\n        if(GTK3_FOUND)\n            include_directories(${GTK3_INCLUDE_DIRS})\n        else(GTK3_FOUND)\n            message(FATAL_ERROR \"Could not locate GTK.\")\n        endif(GTK3_FOUND)\n    else()\n        find_package(GTK2)\n        if(GTK2_FOUND)\n            include_directories(${GTK2_INCLUDE_DIRS})\n        else(GTK2_FOUND)\n            message(FATAL_ERROR \"Could not locate GTK.\")\n        endif(GTK2_FOUND)\n    endif()\n\nendif(UNIX AND NOT APPLE)\n\n# find wxWidgets once\nif(MINGW)\n    if(NOT WXWIN)\n        message(FATAL_ERROR \"Missing -DWXWIN=<wxWidgets/root/install/dir>\")\n    endif()\n    if(NOT WXCFG)\n        set(WXCFG \"clang_x64_dll/mswu\")\n    endif()\n\n    message(STATUS \"WXWIN is set to ${WXWIN}\")\n    message(STATUS \"WXCFG is set to ${WXCFG}\")\n\n    execute_process(\n        COMMAND ${CL_WX_CONFIG} --cmake --prefix=${WXWIN} --wxcfg=${WXCFG}\n        OUTPUT_VARIABLE wxWidgets_USE_FILE\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\n    message(STATUS \"wxWidgets_USE_FILE is set to: ${wxWidgets_USE_FILE}\")\nelse()\n    find_package(\n        wxWidgets\n        COMPONENTS adv\n                   aui\n                   base\n                   core\n                   html\n                   propgrid\n                   xml\n                   xrc\n                   net\n                   stc\n                   ribbon\n                   richtext\n        REQUIRED)\nendif()\n\nif(AUTOGEN_REVISION MATCHES 0)\n    set(MAKE_AUTOGEN_REVISION_STRING 0)\nelse(AUTOGEN_REVISION MATCHES 1)\n    set(MAKE_AUTOGEN_REVISION_STRING 1)\nendif(AUTOGEN_REVISION MATCHES 0)\nif(NOT RETAIN_CACHED_VALUES)\n    unset(AUTOGEN_REVISION CACHE)\nendif()\n\nset(BUILD_WXC 1)\nif(UNIX AND NOT APPLE)\n    set(WX_COMPONENTS \"std aui propgrid stc richtext ribbon\")\nendif(UNIX AND NOT APPLE)\n\n# package the wx libs?\nif(COPY_WX_LIBS MATCHES 1)\n    set(CL_COPY_WX_LIBS 1)\nendif()\nif(NOT RETAIN_CACHED_VALUES)\n    unset(COPY_WX_LIBS CACHE)\nendif()\n\n# file encoding detect\nif(UNIX\n   AND NOT APPLE\n   OR MINGW)\n    # Linux\n    if(MINGW)\n        find_library(\n            LIBUCHARDET_LIB\n            NAMES uchardet\n            PATH_SUFFIXES lib)\n        find_path(\n            LIBUCHARDET_INCLUDE_DIR\n            NAMES uchardet.h\n            PATH_SUFFIXES include/uchardet)\n    else()\n        find_library(\n            LIBUCHARDET_LIB\n            NAMES libuchardet.so\n            HINTS /usr/local/lib /usr/lib ${CMAKE_INSTALL_LIBDIR})\n        find_path(\n            LIBUCHARDET_INCLUDE_DIR\n            NAMES uchardet.h\n            HINTS /usr/local/include /usr/include\n            PATH_SUFFIXES uchardet)\n    endif()\nelse(\n    UNIX\n    AND NOT APPLE\n    OR MINGW)\n    # OSX set( LIBUCHARDET_INCLUDE_DIR ${CL_SRC_ROOT}/sdk/uchardet/include) set( LIBUCHARDET_LIB\n    # ${CL_SRC_ROOT}/sdk/uchardet/lib/osx/uchardet.a)\nendif(\n    UNIX\n    AND NOT APPLE\n    OR MINGW)\nif(LIBUCHARDET_LIB AND LIBUCHARDET_INCLUDE_DIR)\n    add_definitions(-DUSE_UCHARDET=1)\n    include_directories(${LIBUCHARDET_INCLUDE_DIR})\nelse(\n    UNIX\n    AND NOT APPLE\n    OR MINGW)\n    set(LIBUCHARDET_LIB \"\")\nendif(LIBUCHARDET_LIB AND LIBUCHARDET_INCLUDE_DIR)\n\n# Under OSX, create the skeleton bundle directory\nosx_make_bundle_directory()\n\nadd_definitions(-DYY_NEVER_INTERACTIVE=1)\n\nif(NOT MINGW)\n    add_definitions(-DINSTALL_DIR=\\\"${CL_PREFIX}/share/codelite\\\")\n    add_definitions(-DPLUGINS_DIR=\\\"${PLUGINS_DIR}\\\")\nelse()\n    if(WITH_POSIX_LAYOUT)\n        add_definitions(-DNDEBUG)\n        add_definitions(-DUSE_POSIX_LAYOUT)\n    endif()\nendif()\n\nmessage(\"-- PLUGINS_DIR is set to ${PLUGINS_DIR}\")\n\n# Allow user to use wxAuiNotebook instead of the native notebook\nif(UNIX\n   AND NOT APPLE\n   AND NOT MINGW)\n    # by default, use GTK native notebook control\n    set(CL_GTK_USE_NATIVEBOOK 1)\n    if(WITH_NATIVEBOOK MATCHES 0)\n        set(CL_GTK_USE_NATIVEBOOK 0)\n    endif()\n\n    if(CL_GTK_USE_NATIVEBOOK MATCHES 1)\n        add_definitions(-DGTK_USE_NATIVEBOOK=1)\n        message(\"-- Using Native Notebook class\")\n    else()\n        add_definitions(-DGTK_USE_NATIVEBOOK=0)\n        message(\"-- Using custom Notebook\")\n    endif()\nelse() # NOT LINUX\n    add_definitions(-DGTK_USE_NATIVEBOOK=0)\n    message(\"-- Using custom Notebook\")\nendif()\n\nif(NOT RETAIN_CACHED_VALUES)\n    unset(CL_GTK_USE_NATIVEBOOK CACHE)\nendif()\n\n# ######################################################################################################################\n# Global optimizations\n# ######################################################################################################################\n\nif(CMAKE_BUILD_TYPE MATCHES Debug OR CMAKE_BUILD_TYPE MATCHES DebugFull)\n    message(\"-- Building in ${CMAKE_BUILD_TYPE} mode\")\n    set(DEBUG_BUILD 1)\n    set(CL_PCH_FILE \"${CL_SRC_ROOT}/PCH/precompiled_header_dbg.h\")\n    set(CL_PCH_TARGET \"precompiled_header_dbg.h.gch\")\n    set(BUILD_TYPE \"Debug\")\n\n    # Set the libraries output directory\n    set(CL_BIN_DIR bin)\n    set(CL_LIB_DIR lib)\n    if(APPLE)\n        add_custom_target(distclean COMMAND cd ${CL_SRC_ROOT}/PCH && $(MAKE) type=debug clean)\n    endif(APPLE)\n\n    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_LIB_DIR}\")\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_BIN_DIR}\")\n    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_LIB_DIR}\")\n    set(CL_LIBPATH \"${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}\")\n\n    message(\"-- Executables will be written into ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\")\n    message(\"-- Shared Objects will be written into ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\")\n\n    if(APPLE OR MINGW)\n        # Clang compiler on these platforms\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -gdwarf-4 -fstandalone-debug -O0\") # No optimization, debug info\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -gdwarf-4 -fstandalone-debug -O0\")\n        message(STATUS \"Adding Clang debug flags: -gdwarf-4 -fstandalone-debug -O0\")\n    else()\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -O0\") # No optimization, debug info\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g -O0\")\n        message(STATUS \"Adding GCC debug flags: -g -O0\")\n    endif()\n\n    # In debug, only add NDEBUG if the user says so\n    if(PREVENT_WX_ASSERTS MATCHES 1)\n        message(\"-- Adding -DNDEBUG to definitions\")\n        add_definitions(-DNDEBUG)\n    endif()\n    add_definitions(-DCL_DEBUG_BUILD)\nelse()\n    message(\"-- Building in Release mode\")\n    set(DEBUG_BUILD 0)\n    set(CMAKE_INSTALL_DO_STRIP TRUE)\n    message(\"-- CMAKE_INSTALL_DO_STRIP is \" ${CMAKE_INSTALL_DO_STRIP})\n    if(UNIX AND NOT APPLE)\n        # Avoid hardening-no-relro wrarning message from lintian\n        if(EXISTS \"/usr/bin/dpkg-buildflags\")\n            execute_process(\n                COMMAND /usr/bin/dpkg-buildflags --get CFLAGS\n                OUTPUT_VARIABLE EXTRA_CFLAGS\n                OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n            execute_process(\n                COMMAND /usr/bin/dpkg-buildflags --get CPPFLAGS\n                OUTPUT_VARIABLE EXTRA_CPPFLAGS\n                OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n            execute_process(\n                COMMAND /usr/bin/dpkg-buildflags --get CXXFLAGS\n                OUTPUT_VARIABLE EXTRA_CXXFLAGS\n                OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n            execute_process(\n                COMMAND /usr/bin/dpkg-buildflags --get LDFLAGS\n                OUTPUT_VARIABLE EXTRA_LDFLAGS\n                OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${EXTRA_CXXFLAGS}\")\n            add_definitions(${EXTRA_CPPFLAGS})\n            set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}\")\n            set(LINKER_OPTIONS \"${EXTRA_LDFLAGS}\")\n            list(APPEND LINKER_OPTIONS \"-s\") # strip binaries\n        endif()\n    endif()\n\n    set(CL_PCH_FILE \"${CL_SRC_ROOT}/PCH/precompiled_header_release.h\")\n    set(CL_PCH_TARGET \"precompiled_header_release.h.gch\")\n    if(APPLE)\n        add_custom_target(distclean COMMAND cd ${CL_SRC_ROOT}/PCH && $(MAKE) type=release clean)\n    endif(APPLE)\n\n    # Set the libraries output directory\n    set(CL_BIN_DIR bin)\n    set(CL_LIB_DIR lib)\n\n    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_LIB_DIR}\")\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_BIN_DIR}\")\n    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${BUILD_DIRECTORY}/${CL_LIB_DIR}\")\n    set(CL_LIBPATH \"${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}\")\n\n    message(\"-- Executables will be written into ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\")\n    message(\"-- Shared Objects will be written into ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}\")\n\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O2\") # Optimize\n    if(CMAKE_COMPILER_IS_GNUCXX)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -s\") # Strip binary\n    endif(CMAKE_COMPILER_IS_GNUCXX)\n\n    # In release, add NDEBUG unless explicitly told not to\n    if(NOT PREVENT_WX_ASSERTS MATCHES 0)\n        message(\"-- Adding -DNDEBUG to definitions\")\n        add_definitions(-DNDEBUG)\n    endif()\n\nendif()\nif(NOT RETAIN_CACHED_VALUES)\n    unset(CMAKE_BUILD_TYPE CACHE)\n    unset(PREVENT_WX_ASSERTS CACHE)\nendif()\n\n# ######################################################################################################################\n# Determine if 32 or 64 bit\n# ######################################################################################################################\n\nset(ARCH 32)\nset(ARCH_NAME i386)\nset(OS_CODENAME \"unknown\")\n\nif(UNIX AND NOT APPLE)\n    if(CMAKE_SYSTEM_NAME MATCHES \"^.*BSD$|DragonFly\")\n        set(OS_CODENAME \"${OS_NAME}\")\n        set(OS_DISTRO \"${OS_NAME}\")\n    else()\n        execute_process(\n            COMMAND /bin/sh -c \"lsb_release -a|grep -i Codename | cut -d: -f2\"\n            OUTPUT_VARIABLE OS_CODENAME\n            OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n        execute_process(\n            COMMAND /bin/sh -c \"lsb_release -a|grep -i Distributor | cut -d: -f2\"\n            OUTPUT_VARIABLE OS_DISTRO\n            OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n    endif()\n    execute_process(\n        COMMAND /bin/sh -c \"uname -m\"\n        OUTPUT_VARIABLE OS_ARCH\n        OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n\n    # replace any tab/space with nothing\n    string(REPLACE \" \" \"\" DISTRO_CODENAME \"${OS_DISTRO}-${OS_CODENAME}-${OS_ARCH}\")\n    string(REPLACE \"\\t\" \"\" DISTRO_CODENAME \"${DISTRO_CODENAME}\")\n    string(TOLOWER ${DISTRO_CODENAME} DISTRO_CODENAME)\n\n    string(REPLACE \" \" \"\" OS_CODENAME \"${OS_CODENAME}\")\n    string(REPLACE \"\\t\" \"\" OS_CODENAME \"${OS_CODENAME}\")\n    if(NOT \"${OS_CODENAME}\" STREQUAL \"\") # It'll be empty if lsb_release isn't installed, which causes cmake to error\n                                         # out on the next line\n        string(TOLOWER ${OS_CODENAME} OS_CODENAME)\n    endif()\n\n    set(CPACK_SYSTEM_NAME \"${DISTRO_CODENAME}\")\n    message(\"-- CPACK_SYSTEM_NAME ${CPACK_SYSTEM_NAME}\")\nendif(UNIX AND NOT APPLE)\nmessage(\"-- OS_CODENAME is set to ${OS_CODENAME}\")\n\nif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n    set(ARCH 64)\nendif()\nset(ARCH_NAME ${CMAKE_HOST_SYSTEM_PROCESSOR})\nmessage(\"-- ARCH ${ARCH}\")\nmessage(\"-- ARCH_NAME ${ARCH_NAME}\")\n\n# ######################################################################################################################\n# CPack\n# ######################################################################################################################\nif(MAKE_DEB)\n    get_distro_name(distro)\n    message(\"-- Distro name: ${distro}\")\n\n    set(DEB_DEPS \"\")\n    if(${distro} STREQUAL \"debian_10\")\n        set(DEB_DEPS \"clang-tools (>= 7), clang-format (>= 10)\")\n    endif()\n\n    if(${distro} MATCHES \"ubuntu\")\n        set(DEB_DEPS \"clangd (>= 10), clang-format (>= 10)\")\n    endif()\n\n    message(\"-- Generating deb target\")\n    if(${ARCH} EQUAL 32)\n        message(\"-- CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386\")\n        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE \"i386\")\n    else()\n        message(\"-- CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64\")\n        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE \"amd64\")\n    endif()\n\n    if(GTK_VERSION EQUAL 3)\n        set(LIBGTK \"libgtk-3-dev\")\n        set(GTKNAME \"gtk3\")\n    else()\n        set(LIBGTK \"libgtk2.0-0\")\n        set(GTKNAME \"gtk2\")\n    endif()\n    if(PHP_BUILD)\n        set(GTKNAME \"${GTKNAME}-php\")\n    endif()\n    set(CPACK_GENERATOR \"DEB\")\n    set(CPACK_PACKAGE_NAME \"CodeLite\")\n    set(CPACK_PACKAGE_VERSION \"${CODELITE_VERSION}-${GTKNAME}\")\n    set(CPACK_DEBIAN_PACKAGE_MAINTAINER \"Eran Ifrah <eran@codelite.org>\")\n    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"C/C++/Rust/Python/PHP/Node.js IDE (Integrated Development Environment)\")\n    set(CPACK_DEBIAN_PACKAGE_SECTION \"devel\")\n    set(CPACK_DEBIAN_PACKAGE_PRIORITY \"optional\")\n    set(CPACK_DEBIAN_PACKAGE_RECOMMENDS \"build-essential, git, subversion, gdb, xterm, gcc, g++\")\n    set(CPACK_DEBIAN_PACKAGE_DEPENDS \"${DEB_DEPS}\")\n    set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)\n    set(CPACK_PACKAGE_DESCRIPTION_FILE \"${CL_SRC_ROOT}/DESC\")\n    set(CPACK_STRIP_FILES TRUE)\n    include(CPack)\nendif(MAKE_DEB)\n\nif(MAKE_RPM)\n    message(\"-- Generating rpm target\")\n    message(\"-- CPACK_PACKAGE_ARCHITECTURE amd64\")\n    if(GTK_VERSION EQUAL 3)\n        set(GTKNAME \"gtk3\")\n    else()\n        set(GTKNAME \"gtk2\")\n    endif()\n    set(CPACK_RPM_PACKAGE_AUTOREQ 0)\n    set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION\n        \"/usr/share/icons;/usr/share/locale/;/usr/share/locale/cs;/usr/share/locale/cs/LC_MESSAGES;/usr/share/locale/ja_JP;/usr/share/locale/ja_JP/LC_MESSAGES;/usr/share/locale/ru_RU;/usr/share/locale/ru_RU/LC_MESSAGES;/usr/share/locale/zh_CN;/usr/share/locale/zh_CN/LC_MESSAGES;/usr/share/man;/usr/share/icons/hicolor;/usr/share/icons/hicolor/128x128;/usr/share/icons/hicolor/128x128/apps;/usr/share/icons/hicolor/256x256;/usr/share/icons/hicolor/256x256/apps;/usr/share/icons/hicolor/32x32;/usr/share/icons/hicolor/32x32/apps;/usr/share/icons/hicolor/64x64;/usr/share/icons/hicolor/64x64/apps;/usr/share/applications\"\n    )\n    set(CPACK_RPM_PACKAGE_REQUIRES \"gcc, g++, git, sqlite, libssh, gtk3, cmake\")\n    set(CPACK_GENERATOR \"RPM\")\n    set(CPACK_RPM_PACKAGE_NAME \"CodeLite\")\n    set(CPACK_RPM_FILE_NAME \"CodeLite-${CODELITE_VERSION}-x86_64.rpm\")\n    set(CPACK_RPM_PACKAGE_VERSION \"${CODELITE_VERSION}-${GTKNAME}\")\n    set(CPACK_PACKAGE_CONTACT \"Eran Ifrah <eran@codelite.org>\")\n    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"C/C++/Rust/Python/PHP/Node.js IDE (Integrated Development Environment)\")\n    set(CPACK_PACKAGE_VENDOR \"The CodeLite Team\")\n    set(CPACK_STRIP_FILES TRUE)\n    include(CPack)\nendif(MAKE_RPM)\n\nif(MAKE_RPM_SLIM)\n    message(\"-- Generating rpm target\")\n    message(\"-- CPACK_PACKAGE_ARCHITECTURE amd64\")\n    if(GTK_VERSION EQUAL 3)\n        set(GTKNAME \"gtk3\")\n    else()\n        set(GTKNAME \"gtk2\")\n    endif()\n    set(CPACK_RPM_PACKAGE_AUTOREQ 0)\n    set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION\n        \"/usr/share/icons;/usr/share/locale/;/usr/share/locale/cs;/usr/share/locale/cs/LC_MESSAGES;/usr/share/locale/ja_JP;/usr/share/locale/ja_JP/LC_MESSAGES;/usr/share/locale/ru_RU;/usr/share/locale/ru_RU/LC_MESSAGES;/usr/share/locale/zh_CN;/usr/share/locale/zh_CN/LC_MESSAGES;/usr/share/man;/usr/share/icons/hicolor;/usr/share/icons/hicolor/128x128;/usr/share/icons/hicolor/128x128/apps;/usr/share/icons/hicolor/256x256;/usr/share/icons/hicolor/256x256/apps;/usr/share/icons/hicolor/32x32;/usr/share/icons/hicolor/32x32/apps;/usr/share/icons/hicolor/64x64;/usr/share/icons/hicolor/64x64/apps;/usr/share/applications\"\n    )\n    set(CPACK_RPM_PACKAGE_REQUIRES \"gcc72, g++72, git, sqlite, gtk3, cmake\")\n    set(CPACK_GENERATOR \"RPM\")\n    set(CPACK_RPM_PACKAGE_NAME \"CodeLite\")\n    set(CPACK_RPM_FILE_NAME \"CodeLite-slim-${CODELITE_VERSION}-gtk2-x86_64.rpm\")\n    set(CPACK_RPM_PACKAGE_VERSION \"${CODELITE_VERSION}-${GTKNAME}\")\n    set(CPACK_PACKAGE_CONTACT \"Eran Ifrah <eran@codelite.org>\")\n    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"C/C++ IDE (Integrated Development Environment)\")\n    set(CPACK_PACKAGE_VENDOR \"Eran Ifrah\")\n    set(CPACK_STRIP_FILES TRUE)\n    include(CPack)\nendif(MAKE_RPM_SLIM)\n\n# ######################################################################################################################\n# SFTP support\n# ######################################################################################################################\nif(WITH_SFTP)\n\n    # Default is set to 1\n    add_definitions(-DUSE_SFTP=1)\n    message(\"-- USE_SFTP is set to 1\")\n\nelse(WITH_SFTP)\n    add_definitions(-DUSE_SFTP=0)\n    message(\"-- USE_SFTP is set to 0\")\n    message(\"-- *** NOTICE ***: SFTP support is disabled \")\n\nendif(WITH_SFTP)\n\n# ######################################################################################################################\n# RPATH settings\n# ######################################################################################################################\n\nif(UNIX AND NOT APPLE)\n    set(CMAKE_SKIP_BUILD_RPATH TRUE)\n    set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n    set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)\n    list(PREPEND CMAKE_INSTALL_RPATH \"${PLUGINS_DIR}\")\nendif(UNIX AND NOT APPLE)\n\nif(WITH_PCH)\n    set(USE_PCH 1)\nendif(WITH_PCH)\nif(NOT RETAIN_CACHED_VALUES)\n    unset(WITH_PCH CACHE)\nendif()\n\nif(MINGW AND USE_PCH)\n    if(CMAKE_VERSION VERSION_LESS 3.16)\n        message(FATAL_ERROR \" **** MINGW and PCH requires at least cmake version 3.16 **** \")\n    endif()\nendif()\n\n# add the dtl module include path before we include Plugin folder\ninclude_directories(submodules/dtl)\n\n# Extran lexers required by CodeLite\nadd_subdirectory(submodules/lexilla)\n\nadd_subdirectory(submodules)\ninclude_directories(submodules/cJSON)\n\nadd_subdirectory(sdk/wxsqlite3)\nadd_subdirectory(sdk/databaselayer)\n\nif(NOT APPLE)\n    add_subdirectory(submodules/yaml-cpp)\n    set(LIBYAML_CPP \"yaml-cpp\")\nendif()\n\nif(DEBUG_BUILD)\n    set(CMAKE_CXX_FLAGS_RELEASE \"\")\n    message(STATUS \"CMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}\")\nendif()\n\nadd_compile_definitions(wxUSE_GUI=1) # Missing `#include <wx/setup.h>` before `#if wxUse_GUI` for some generated files\n\nadd_subdirectory(CxxParser)\nadd_subdirectory(CodeLite)\nadd_subdirectory(Plugin)\nif(USE_PCH)\n    add_subdirectory(PCH)\nendif()\n\nset(WITHOUT_INSTALL ON)\nadd_subdirectory(submodules/cc-wrapper)\n\n# include the yaml-cpp directory\ninclude_directories(\"${CL_SRC_ROOT}/submodules/yaml-cpp/include\")\nif(UNIX)\n    # On Windows, this is default. Set it OFF for Linux / macOS as well\n    set(BUILD_SHARED_LIBS OFF)\nendif()\n\nif(APPLE)\n    set(CMAKE_INSTALL_PREFIX ${CL_INSTALL_BIN})\n    set(CMAKE_INSTALL_BINDIR \"${CMAKE_INSTALL_PREFIX}\")\nendif()\n\nif(WITH_CHATAI)\n    message(STATUS \"ChatAI Plugin is enabled\")\n    add_subdirectory(\"${CL_SRC_ROOT}/submodules/llama.cpp\")\n    add_subdirectory(\"${CL_SRC_ROOT}/submodules/llama.cpp/examples/main\")\nelse()\n    message(STATUS \"ChatAI Plugin is disabled\")\nendif()\n\nif(WXC_APP)\n    add_subdirectory(wxcrafter)\nelse()\n    add_subdirectory(submodules/ctags)\n    install(TARGETS ctags DESTINATION ${CL_INSTALL_BIN})\n    if(WITH_CHATAI)\n        install(TARGETS llama-cli DESTINATION ${CL_INSTALL_BIN})\n    endif()\n    if(MINGW)\n        # build wx-config for Windows\n        add_subdirectory(submodules/wx-config-msys2)\n        install(TARGETS wx-config DESTINATION ${CL_INSTALL_BIN})\n    endif()\n\n    if(NOT NO_CORE_PLUGINS)\n        add_subdirectory(abbreviation)\n        if(NOT DISABLE_CXX)\n            add_subdirectory(Gizmos)\n            add_subdirectory(gdbparser)\n            add_subdirectory(Debugger)\n            add_subdirectory(UnitTestCPP)\n            add_subdirectory(QmakePlugin)\n            add_subdirectory(cppchecker)\n            add_subdirectory(wxformbuilder)\n            add_subdirectory(CMakePlugin)\n            add_subdirectory(cscope)\n            add_subdirectory(EOSWiki)\n            add_subdirectory(ContinuousBuild)\n        endif()\n        add_subdirectory(AutoSave)\n        add_subdirectory(CodeLiteDiff)\n        add_subdirectory(git)\n        add_subdirectory(Outline)\n        add_subdirectory(CodeFormatter)\n        add_subdirectory(Copyright)\n        add_subdirectory(DatabaseExplorer)\n        add_subdirectory(ExternalTools)\n        add_subdirectory(SnipWiz)\n        add_subdirectory(Subversion2)\n        add_subdirectory(ZoomNavigator)\n        add_subdirectory(SpellChecker)\n        add_subdirectory(Tail)\n        add_subdirectory(EditorConfigPlugin)\n        add_subdirectory(PHPLint)\n        add_subdirectory(PHPRefactoring)\n        add_subdirectory(codelite_vim)\n        add_subdirectory(Docker)\n        add_subdirectory(LanguageServer)\n        add_subdirectory(Rust)\n        if(WITH_SFTP)\n            add_subdirectory(SFTP)\n            add_subdirectory(Remoty)\n        endif(WITH_SFTP)\n        add_subdirectory(DebugAdapterClient)\n        add_subdirectory(codelitephp)\n        add_subdirectory(WordCompletion)\n        add_subdirectory(HelpPlugin)\n        add_subdirectory(WebTools)\n        add_subdirectory(SmartCompletion)\n        if(WITH_CHATAI)\n            add_subdirectory(ChatAI)\n        endif()\n        if(UNIX\n           AND NOT APPLE\n           AND NOT DISABLE_CXX)\n            # Add valgrind plugin\n            add_subdirectory(MemCheck)\n        endif()\n\n        if(APPLE AND NOT DISABLE_CXX)\n            message(\"-- Adding MacBundler...\")\n            add_subdirectory(MacBundler)\n        endif()\n        add_subdirectory(CallGraph)\n    endif(NOT NO_CORE_PLUGINS)\n    add_subdirectory(wxcrafter)\n\n    # Executables\n    add_subdirectory(codelite_make)\n    if(MINGW)\n        # codelite-exec\n        add_subdirectory(le_exec)\n\n        # makedirs\n        add_subdirectory(TestDir)\n\n    endif()\n\n    # utility for importing themes\n    add_subdirectory(codelite-generate-themes)\n\n    add_subdirectory(codelite_echo)\n    add_subdirectory(ctagsd)\n\n    add_subdirectory(LiteEditor)\n    add_dependencies(databaselayersqlite wxsqlite3)\n    add_dependencies(wxshapeframework wxsqlite3)\n    add_dependencies(libcodelite databaselayersqlite wxsqlite3)\n    add_dependencies(plugin libcodelite)\n    add_dependencies(codelite plugin)\n    add_dependencies(codelite ctags)\n    add_dependencies(codelite ctagsd)\n    if(WITH_CHATAI)\n        add_dependencies(codelite llama-cli)\n    endif()\n    add_dependencies(codelite cc-wrapper)\n    if(MINGW)\n        add_dependencies(codelite wx-config)\n    endif()\n    if(NOT APPLE)\n        add_dependencies(codelite yaml-cpp)\n    endif()\n\n    # Include our custom plugin.cmake module\n    include(plugin)\n\n    # Scan for user plugins\n    cl_scan_for_plugins()\nendif() # NOT WXC_APP\n\ninclude(CTest)\n\nmessage(STATUS \"BUILD_TESTING=${BUILD_TESTING}\")\n\nif(BUILD_TESTING)\n    add_subdirectory(CxxParserTests)\nendif(BUILD_TESTING)\n\nmessage(STATUS \"CL_INSTALL_BIN is set to ${CL_INSTALL_BIN}\")\ninstall(TARGETS cc-wrapper DESTINATION ${CL_INSTALL_BIN})\n\nif(NOT WXC_APP)\n    # building CodeLite, install the SVGs\n    codelite_install_svgs()\n\n    if(NOT APPLE)\n        set_target_properties(ctags PROPERTIES OUTPUT_NAME \"codelite-ctags\")\n        install(\n            TARGETS ctags\n            DESTINATION ${CL_PREFIX}/bin\n            PERMISSIONS ${EXE_PERM})\n    elseif(APPLE)\n        set_target_properties(ctags PROPERTIES OUTPUT_NAME \"codelite-ctags\")\n        install(\n            TARGETS ctags\n            DESTINATION ${CMAKE_BINARY_DIR}/codelite.app/Contents/MacOS\n            PERMISSIONS ${EXE_PERM})\n    endif()\n\nendif()\n\nif(MINGW)\n    # determine MSYS2 path\n    write_file(${CMAKE_BINARY_DIR}/msys2-environment \"export WXWIN=${WXWIN}\")\n    write_file(${CMAKE_BINARY_DIR}/msys2-environment \"export MSYS2_HOME=${MSYS2_BASE}\" APPEND)\n\n    # install DLLs required by MinGW\n    msys_list_deps(${MSYS2_BASE}/clang64/bin/libhunspell-1.7-0.dll LIBHUNSPELL_DEPS)\n    msys_list_deps(${MSYS2_BASE}/clang64/bin/libssh.dll LIBSSH_DEPS)\n\n    list(\n        APPEND\n        SYSTEM_DLLS\n        libc++.dll\n        libomp.dll\n        libssh.dll\n        libsqlite3-0.dll\n        libhunspell-1.7-0.dll\n        libunwind.dll)\n\n    list(\n        APPEND\n        MSYS2_CORE_FILES\n        msys-intl-8.dll\n        msys-2.0.dll\n        msys-iconv-2.dll\n        rm.exe\n        mkdir.exe\n        cp.exe\n        ls.exe\n        mv.exe)\n\n    execute_process(\n        COMMAND sh -c 'ls ${WXWIN}/lib/clang_x64_dll/wxmsw*u_clang_custom.dll|tail -1'\n        OUTPUT_VARIABLE WXDLL\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\n    message(STATUS \"Installing wxWidgets DLL ${WXDLL}\")\n    list(APPEND WXWIDGETS_DLLS wxmsw330u_clang_custom.dll)\n    list(APPEND CODELITE_RESOURCES ${CMAKE_SOURCE_DIR}/wxcrafter/wxgui.zip ${CMAKE_SOURCE_DIR}/LICENSE)\n\n    foreach(DLL ${SYSTEM_DLLS})\n        install(FILES \"${MSYS2_BASE}/clang64/bin/${DLL}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\n    foreach(DLL ${MSYS2_CORE_FILES})\n        install(FILES \"${MSYS2_BASE}/usr/bin/${DLL}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\n    foreach(DLL ${WXWIDGETS_DLLS})\n        install(FILES \"${WXDLL}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\n    foreach(RESOURCE ${CODELITE_RESOURCES})\n        install(FILES \"${RESOURCE}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\n    # copy extra deps dlls\n    foreach(DLL ${LIBHUNSPELL_DEPS})\n        install(FILES \"${DLL}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\n    foreach(DLL ${LIBSSH_DEPS})\n        install(FILES \"${DLL}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}\")\n    endforeach()\n\nendif()\n\nif(MINGW AND NOT WXC_APP)\n    # configure the innosetup file\n    configure_file(${CL_SRC_ROOT}/InnoSetup/codelite64_mingw.iss.in ${BUILD_DIRECTORY}/codelite64_mingw.iss)\n\n    # CodeLite only related installation\n    find_program(\n        INNO_SETUP_CMP\n        NAMES \"ISCC\" \"ISCC.exe\"\n        PATHS \"c:/Program Files (x86)/Inno Setup 6\")\n    if(NOT INNO_SETUP_CMP)\n        message(WARNING \"\\n** Could not locate ISCC compiler! \\\"setup\\\" target is not created **\")\n        message(WARNING \"\\n** You can install InnoSetup compiler from here: https://jrsoftware.org/ **\\n\")\n    else()\n        message(STATUS \"InnoSetup compiler is set to: ${INNO_SETUP_CMP}\")\n\n        # fake target that executes \"install\". we then use this target as the dependency for the `setup` target\n        add_custom_target(codelite-install COMMAND \"${CMAKE_COMMAND}\" --build \"${BUILD_DIRECTORY}\" --target install)\n\n        add_custom_target(\n            setup\n            COMMAND \"${INNO_SETUP_CMP}\" ${BUILD_DIRECTORY}/codelite64_mingw.iss\n            WORKING_DIRECTORY \"${CL_SRC_ROOT}/InnoSetup\"\n            DEPENDS codelite-install)\n    endif()\nelseif(MINGW AND WXC_APP)\n    # configure the innosetup file\n    configure_file(${CL_SRC_ROOT}/wxcrafter/wxcrafter64_mingw.iss.in ${BUILD_DIRECTORY}/wxcrafter64_mingw.iss)\n\n    # wxCrafter App\n    find_program(\n        INNO_SETUP_CMP\n        NAMES \"ISCC\" \"ISCC.exe\"\n        PATHS \"c:/Program Files (x86)/Inno Setup 6\")\n    if(NOT INNO_SETUP_CMP)\n        message(WARNING \"** Could not locate ISCC compiler! **\")\n    else()\n        message(STATUS \"InnoSetup compiler is set to: ${INNO_SETUP_CMP}\")\n        add_custom_target(\n            setup\n            COMMAND \"${INNO_SETUP_CMP}\" ${BUILD_DIRECTORY}/wxcrafter64_mingw.iss\n            WORKING_DIRECTORY \"${CL_SRC_ROOT}/InnoSetup\")\n    endif()\nendif()\n\nunset(WITH_CHATAI CACHE)\nunset(DEBUG_BUILD CACHE)\nunset(BUILD_TESTING CACHE)\n"
        },
        {
          "name": "CMakePlugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 18.0849609375,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\nEXCEPTION:\n==========\n\nThe only exception is that plugins developed for CodeLite and are linking against CodeLite sources (either static linking or dynamic linking),\nand the plugin is NOT one of the official plugins (see list below):\n\n- Abbreviation\n- CodeFormatter\n- ContinousBuild\n- Copyright\n- Cscope\n- ExternalTools\n- Gizmos\n- QMakePlugin\n- snipwiz\n- Subversion\n- UnitTestPP\n- wxFormBuilder plugin\n- CMakePlugin\n- CodeLiteDiff\n- SFTP\n- ZoomNavigator\n- git\n- LLDB Debugger\n\nCan be distributed under a license other than the GPL\n"
        },
        {
          "name": "CallGraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "ChatAI",
          "type": "tree",
          "content": null
        },
        {
          "name": "CodeFormatter",
          "type": "tree",
          "content": null
        },
        {
          "name": "CodeLite",
          "type": "tree",
          "content": null
        },
        {
          "name": "CodeLiteDiff",
          "type": "tree",
          "content": null
        },
        {
          "name": "CodeLiteIDE-Linux.workspace",
          "type": "blob",
          "size": 4.34375,
          "content": "{\n\t\"workspace_type\":\t\"File System Workspace\",\n\t\"name\":\t\"CodeLiteIDE-Linux\",\n\t\"configs\":\t[{\n\t\t\t\"name\":\t\"Debug\",\n\t\t\t\"targets\":\t[[\"Run CMake\", \"mkdir -p build-debug\\ncd build-debug\\ncmake -DCMAKE_BUILD_TYPE=Debug .. -DCOPY_WX_LIBS=1 -DMAKE_DEB=1 -DCL_PREFIX=$HOME/root -Wno-dev\"], [\"build\", \"cd build-debug\\nmake -j$(nproc) install\"], [\"clean\", \"cd build-debug\\nmake -j$(nproc) clean\"], [\"install\", \"cd build-debug\\nmake -j$(nproc) install\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.xrc;*.rc;*.plist;*.iss;*.md;*.l\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"$(WorkspacePath)/build-debug-native-book;$(WorkspacePath)/build-release-gtk2;$(WorkspacePath)/bitmaps-dark;$(WorkspacePath)/bitmaps-light;$(WorkspacePath)/build-debug;$(WorkspacePath)/build-release;$(WorkspacePath)/codelite-icons-dark;$(WorkspacePath)/codelite-icons-fresh-farm;$(WorkspacePath)/CxxParser\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}, {\n\t\t\t\"name\":\t\"Debug GTK2\",\n\t\t\t\"targets\":\t[[\"CMake\", \"mkdir -p build-debug-gtk2\\ncd build-debug-gtk2\\ncmake .. -DWITH_WXPATH=$HOME/devl/wxWidgets/build-release-gtk2 -DMAKE_DEB=1 -DCOPY_WX_LIBS=1 -DCMAKE_BUILD_TYPE=Debug -DCL_PREFIX=$HOME/root\"], [\"build\", \"mkdir -p build-debug-gtk2\\ncd build-debug-gtk2\\nmake -j$(nproc) install\"], [\"clean\", \"mkdir -p build-debug-gtk2\\ncd build-debug-gtk2\\nmake -j$(nproc) clean\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.py;*.php;*.rb;*.html;*.js\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug-native-book;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release-gtk2;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-light;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-fresh-farm;CxxParser\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}, {\n\t\t\t\"name\":\t\"Release\",\n\t\t\t\"targets\":\t[[\"Make package\", \"cd build-release\\nmake -j$(nproc) package\"], [\"Run CMake\", \"mkdir -p build-release\\ncd build-release\\ncmake -DCMAKE_BUILD_TYPE=Release .. -DCOPY_WX_LIBS=1 -DMAKE_DEB=1 -Wno-dev\"], [\"build\", \"cd build-release\\nmake -j$(nproc)\"], [\"clean\", \"cd build-release\\nmake -j$(nproc) clean\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.plist;*.iss\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug-native-book;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release-gtk2;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-light;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-fresh-farm;CxxParser\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}, {\n\t\t\t\"name\":\t\"Release GTK2\",\n\t\t\t\"targets\":\t[[\"CMake\", \"mkdir -p build-release-gtk2\\ncd build-release-gtk2\\ncmake .. -DWITH_WXPATH=$HOME/devl/wxWidgets/build-release-gtk2 -DMAKE_DEB=1 -DCOPY_WX_LIBS=1 -DCMAKE_BUILD_TYPE=Release\"], [\"build\", \"mkdir -p build-release-gtk2\\ncd build-release-gtk2\\nmake -j$(nproc)\"], [\"clean\", \"mkdir -p build-release-gtk2\\ncd build-release-gtk2\\nmake -j$(nproc) clean\"], [\"package\", \"mkdir -p build-release-gtk2\\ncd build-release-gtk2\\nmake -j$(nproc) package\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug-native-book;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release-gtk2;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/bitmaps-light;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-debug;/home/ANT.AMAZON.COM/eifrah/devl/codelite/build-release;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-dark;/home/ANT.AMAZON.COM/eifrah/devl/codelite/codelite-icons-fresh-farm;CxxParser\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}]\n}"
        },
        {
          "name": "CodeLiteIDE-MSW.workspace",
          "type": "blob",
          "size": 1.0361328125,
          "content": "{\n\t\"workspace_type\":\t\"File System Workspace\",\n\t\"name\":\t\"CodeLiteIDE-MSW\",\n\t\"configs\":\t[{\n\t\t\t\"name\":\t\"Debug\",\n\t\t\t\"targets\":\t[[\"build\", \"cd $(WorkspacePath)\\\\build-debug && mingw32-make -j24 install\"], [\"clean\", \"cd $(WorkspacePath)\\\\build-debug && mingw32-make -j24 clean\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.py;*.php;*.rb;*.html;*.js;*.ts;*.rs;*.iss;*.md;*.bat\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"\",\n\t\t\t\"debugger\":\t\"\"\n\t\t}, {\n\t\t\t\"name\":\t\"Release\",\n\t\t\t\"targets\":\t[[\"build\", \"cd $(WorkspacePath)\\\\build-release && mingw32-make -j24 install\"], [\"clean\", \"cd $(WorkspacePath)\\\\build-release && mingw32-make -j24 clean && rm -fr install\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.py;*.php;*.rb;*.html;*.js;*.ts;*.rs;*.iss;*.md;*.bat;*.sh;*.xrc;*.cmake;*.rc;*.plist;*.in\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"\",\n\t\t\t\"debugger\":\t\"\"\n\t\t}]\n}"
        },
        {
          "name": "CodeLiteIDE-macOS.workspace",
          "type": "blob",
          "size": 1.44140625,
          "content": "{\n\t\"workspace_type\":\t\"File System Workspace\",\n\t\"name\":\t\"CodeLiteIDE-Linux\",\n\t\"configs\":\t[{\n\t\t\t\"name\":\t\"Debug\",\n\t\t\t\"targets\":\t[[\"Run CMake - Debug\", \"mkdir -p build-debug && cd build-debug && cmake -DCMAKE_BUILD_TYPE=Debug .. -Wno-dev\"], [\"build\", \"cd build-debug && make -j8 install\"], [\"clean\", \"cd build-debug && make -j8 clean\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;*.xrc;*.py\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"codelite-cli;codelite-icons;codelite-icons-dark;codelite-icons-fresh-farm;codelite-stdio;codelite_echo;codelite_launcher;codelite_make;bitmaps;bitmaps-dark;bitmaps-light;build-release;CallGraph\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}, {\n\t\t\t\"name\":\t\"Release\",\n\t\t\t\"targets\":\t[[\"Run CMake - Release\", \"mkdir -p build-release && cd build-release && cmake -DCMAKE_BUILD_TYPE=Release .. -Wno-dev\"], [\"build\", \"cd  build-release && make -j8 install\"], [\"clean\", \"cd  build-release && make -j8 clean\"]],\n\t\t\t\"file_extensions\":\t\"*.cpp;*.c;*.txt;*.json;*.hpp;*.cc;*.cxx;*.xml;*.h;*.wxcp;.*.xrc;*.cmake;*.rc;*.py\",\n\t\t\t\"excludeFilesPattern\":\t\"*.o;*.pyc;*.obj;*.workspace;*.o.d;*.exe;*.dll;*.project\",\n\t\t\t\"excludePaths\":\t\"codelite-cli;codelite-icons;codelite-icons-dark;codelite-icons-fresh-farm;codelite-stdio;codelite_echo;codelite_launcher;codelite_make;bitmaps;bitmaps-dark;bitmaps-light;build-release;CallGraph\",\n\t\t\t\"debugger\":\t\"GNU gdb debugger\"\n\t\t}]\n}"
        },
        {
          "name": "ContinuousBuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "Copyright",
          "type": "tree",
          "content": null
        },
        {
          "name": "CxxParser",
          "type": "tree",
          "content": null
        },
        {
          "name": "CxxParserTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "DESC",
          "type": "blob",
          "size": 0.1591796875,
          "content": "CodeLite is an open source, free, cross platform IDE specialized in C, C++, PHP and JavaScript \n(mainly for backend developers using Node.js) programming languages"
        },
        {
          "name": "DatabaseExplorer",
          "type": "tree",
          "content": null
        },
        {
          "name": "DebugAdapterClient",
          "type": "tree",
          "content": null
        },
        {
          "name": "Debugger",
          "type": "tree",
          "content": null
        },
        {
          "name": "Docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "EOSWiki",
          "type": "tree",
          "content": null
        },
        {
          "name": "EditorConfigPlugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExternalTools",
          "type": "tree",
          "content": null
        },
        {
          "name": "File2Hex",
          "type": "tree",
          "content": null
        },
        {
          "name": "FileGrep",
          "type": "tree",
          "content": null
        },
        {
          "name": "Gizmos",
          "type": "tree",
          "content": null
        },
        {
          "name": "HelpPlugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "InnoSetup",
          "type": "tree",
          "content": null
        },
        {
          "name": "Interfaces",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.9111328125,
          "content": "            GNU GENERAL PUBLIC LICENSE\n               Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n            GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n             END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\nEXCEPTION:\n==========\n\nThe only exception is that plugins developed for CodeLite and are linking\nagainst CodeLite sources (either static linking or dynamic linking),\nand the plugin is NOT one of the official plugins (i.e. a plugin that was developed by CodeLite's team),\nCan be distributed under any license\n"
        },
        {
          "name": "LanguageServer",
          "type": "tree",
          "content": null
        },
        {
          "name": "LiteEditor",
          "type": "tree",
          "content": null
        },
        {
          "name": "MacBundler",
          "type": "tree",
          "content": null
        },
        {
          "name": "MemCheck",
          "type": "tree",
          "content": null
        },
        {
          "name": "Outline",
          "type": "tree",
          "content": null
        },
        {
          "name": "PCH",
          "type": "tree",
          "content": null
        },
        {
          "name": "PHPLint",
          "type": "tree",
          "content": null
        },
        {
          "name": "PHPRefactoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "Plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "QmakePlugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3330078125,
          "content": "![Mac-OS-badge](https://github.com/eranif/codelite/actions/workflows/macos.yml/badge.svg)\n![Unix-badge](https://github.com/eranif/codelite/actions/workflows/ubuntu.yml/badge.svg)\n![msys2-badge](https://github.com/eranif/codelite/actions/workflows/msys2.yml/badge.svg)\n[![Join the chat at https://gitter.im/eranif/codelite](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eranif/codelite?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# What is CodeLite?\n====\n\n[CodeLite][1] is a free, open source, cross platform IDE specialized in C / C++ / Rust / Python / NodeJS & PHP programming languages,\nwhich runs best on all major platforms (Windows, macOS and Linux).\n\nYou can download pre-built binaries for Windows, macOS and Linux from our **[download page][2]**.\n\nMore information can be found here:\n\n - [Official website][3]\n - [Download page][4]\n - [Our Documentation page][5]\n\n# Building and installation\n===\n\n- [Windows][9]\n- [Linux][10]\n- [macOS][11]\n\n  [1]: https://codelite.org\n  [2]: https://codelite.org/support.php\n  [3]: https://codelite.org\n  [4]: https://codelite.org/support.php\n  [5]: https://docs.codelite.org/\n  [9]: https://docs.codelite.org/build/build_from_sources/#windows\n  [10]: https://docs.codelite.org/build/build_from_sources/#linux\n  [11]: https://docs.codelite.org/build/build_from_sources/#macos\n"
        },
        {
          "name": "Remoty",
          "type": "tree",
          "content": null
        },
        {
          "name": "Runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "Rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "SFTP",
          "type": "tree",
          "content": null
        },
        {
          "name": "SmartCompletion",
          "type": "tree",
          "content": null
        },
        {
          "name": "SnipWiz",
          "type": "tree",
          "content": null
        },
        {
          "name": "SpellChecker",
          "type": "tree",
          "content": null
        },
        {
          "name": "Subversion2",
          "type": "tree",
          "content": null
        },
        {
          "name": "TODO.TXT",
          "type": "blob",
          "size": 0.48828125,
          "content": "Debug Adapter Client\n---\n\n- support attach to process\n- support debugging core\n\nothers:\n----\n\n- git: support showing file revision history\n- editor: add an api to add end of line annotations\n- git: explore the option of using the new api of end of line annotations to replace the nav bar commit info ^^\n- dap: support stdio connection based\n- SFTP plugin: re-use the remote find in files dialog\n- SFTP plugin: use clTerminalViewCtrl for the log view\n- Spell Checker: enable it for the commit dialog\n\n"
        },
        {
          "name": "Tail",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestDir",
          "type": "tree",
          "content": null
        },
        {
          "name": "UnitTestCPP",
          "type": "tree",
          "content": null
        },
        {
          "name": "WebTools",
          "type": "tree",
          "content": null
        },
        {
          "name": "WordCompletion",
          "type": "tree",
          "content": null
        },
        {
          "name": "ZoomNavigator",
          "type": "tree",
          "content": null
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "theme: jekyll-theme-minimal"
        },
        {
          "name": "abbreviation",
          "type": "tree",
          "content": null
        },
        {
          "name": "about.html",
          "type": "blob",
          "size": 0.87109375,
          "content": "<html>\r\n<body>\r\n<table width=\"100%\" border=0>\r\n<tr><td valign=top colspan=2 bgcolor=\"LIGHT BLUE\"><strong>Developers</strong></td></tr>\r\n<tr><td valign=top>Eran Ifrah</td><td valign=top>Project admin and core developer.</td></tr>\r\n<tr><td valign=top> &nbsp </td></tr>\r\n<tr><td valign=top colspan=2 bgcolor=\"LIGHT BLUE\"><strong>Contributers / Special thanks</strong></td></tr>\r\n<tr><td valign=top>David Hart</td><td valign=top>Linux 64bit, rpm packaging, patches</td></tr>\r\n<tr><td valign=top>Frank Lichtner</td><td valign=top>SnipWiz plugin developer</td></tr>\r\n<tr><td valign=top>Jacek Kucharski</td><td valign=top>Unicode and Multibyte support</td></tr>\r\n<tr><td valign=top>Marianne Gagnon</td><td valign=top>Mac PPC packaging and initial porter to Mac OS X</td></tr>\r\n<tr><td valign=top>Scott Dolim</td><td valign=top>Various improvements / bug fixes</td></tr>\r\n</table>\r\n</body>\r\n</html>\r\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite-generate-themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite-icons-dark",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite-icons-fresh-farm",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite-icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite-stdio",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite.spec",
          "type": "blob",
          "size": 1.9931640625,
          "content": "Name:           codelite\nVersion:        2.5.0\nRelease:        1%{?dist}\nLicense:        GPLv2+\nGroup:          Development/Tools\nSummary:        CodeLite is a powerful open-source, cross platform code editor for C/C++\nURL:            http://codelite.sourceforge.net\nSource:         http://downloads.sourceforge.net/%{name}/%{name}-%{version}.tar.gz\nBuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)\nRequires: wxGTK xterm\nBuildRequires: wxGTK-devel\n\n%description\nCodeLite uses a sophisticated, yet intuitive interface which allows\nusers to easily create, build and debug complex projects.\n\n%prep\n%setup -q\n\n%build\n./configure --prefix=%{_prefix} --plugins-dir=%{_libdir}/%{name} \\\n               --disable-debian --disable-desktop_icon --disable-make_symlink\n%{__make}\n\n%install\n%{__rm} -rf $RPM_BUILD_ROOT\n%{__make} DESTDIR=$RPM_BUILD_ROOT install\ndesktop-file-install  --delete-original                            \\\n   --vendor codelite                                               \\\n          --dir $RPM_BUILD_ROOT%{_datadir}/applications            \\\n                $RPM_BUILD_ROOT%{_datadir}/applications/codelite.desktop\n%clean\n%{__rm} -rf $RPM_BUILD_ROOT\n\n%files\n%defattr(-,root,root)\n%doc AUTHORS LICENSE COPYING\n%{_bindir}/codelite\n%{_bindir}/codelite_indexer\n%{_bindir}/codelite_fix_files\n%{_bindir}/codelite_exec\n%{_bindir}/codelite_kill_children\n%{_datadir}/codelite\n%{_datadir}/applications/codelite.desktop\n%{_libdir}/%{name}\n\n%changelog\n* Tue Feb 24 2009 DH\n- Spec file: Corrected names. Disabled unwanted things in configure\n* Tue Feb 24 2009 Jess Portnoy <kernel01@gmail.com> 1.0.2782-1\n- Spec file: Added call to desktop-file-install and %doc\n  code: fixed perms and other rpmlint issues.\n* Sat Feb 21 2009 Jess Portnoy <kernel01@gmail.com> 1.0.2781-1\n- Reworked the rpm package to satisfy Fedora Core conventions.\n* Wed Jan 27 2010 Jess Portnoy <kernel01@gmail.com>\n- Reomved obsolete switch (--copy-generic-name-to-name)\n  updated version number to 2.2.0\n  updated version number to 2.5.0\n\n"
        },
        {
          "name": "codelite.xml",
          "type": "blob",
          "size": 0.484375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<mime-info xmlns=\"http://www.freedesktop.org/standards/shared-mime-info\">\n  <mime-type type=\"application/x-codelite-project\">\n    <comment>CodeLite Project</comment>\n    <glob pattern=\"*.project\"/>\n    <sub-class-of type=\"application/xml\"/>\n  </mime-type>\n  <mime-type type=\"application/x-codelite-workspace\">\n    <comment>CodeLite Workspace</comment>\n    <glob pattern=\"*.workspace\"/>\n    <sub-class-of type=\"application/xml\"/>\n  </mime-type>\n</mime-info>\n"
        },
        {
          "name": "codelite_echo",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite_launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite_make",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelite_open_helper.py",
          "type": "blob",
          "size": 1.677734375,
          "content": "#!/usr/bin/python3\n#\n# Helper to open files in codelite, so we don't need to fire up an expensive codelite process\n#\n#\n\nimport errno\nimport json\nimport os\nimport socket\nimport subprocess\nimport sys\n\nif len(sys.argv) == 1:\n    print(\"usage: codelite_open_helper <filename> ...\")\n    exit(1)\n\nfilenames_to_open = sys.argv[1:]\n# Convert to absolute paths, so codelite can open it, since codelite is probably running with a different\n# root path.\nfor i in range(0, len(filenames_to_open)):\n    filenames_to_open[i] = os.path.abspath(filenames_to_open[i])\n\n# Try opening a socket to the codelite process\ntry:\n    codelite_port = (os.getuid() % 57) + 13617\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((\"127.0.0.1\", codelite_port))\n    body = json.dumps({\"args\": filenames_to_open})\n    header = str(len(body)).zfill(10)\n    s.send((header + body).encode(\"utf-8\"))\n    s.close()\n    exit(0)  # Success!\nexcept socket.error as serr:\n    if serr.errno != errno.ECONNREFUSED:\n        # Not the error we are looking for, re-raise\n        raise serr\n\n# OK, so we couldn't talk to codelite, let us see if it is running\npidof_subprocess = subprocess.Popen(\n    \"pidof codelite\", stdout=subprocess.PIPE, shell=True\n)\nfound_codelite = False\nwith pidof_subprocess.stdout as txt:\n    for line in txt:\n        line = line.strip()\n        if len(line) != 0:\n            found_codelite = True\npidof_subprocess.terminate()\nif found_codelite:\n    print(\n        \"Found running codelite process, but could not talk to it, no idea what is wrong\"\n    )\n    exit(1)\n\n# Since we didn't find it, let's just fire up codelite and open the files\nfilenames_to_open.insert(0, \"codelite\")\nsubprocess.Popen(filenames_to_open)\n"
        },
        {
          "name": "codelite_prefix.h",
          "type": "blob",
          "size": 1.1484375,
          "content": "//////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n//\n// Copyright            : (C) 2016 The CodeLite Team\n// File name            : $(CurrentFileName).$(CurrentFileExt)\n//\n// -------------------------------------------------------------------------\n// A\n//              _____           _      _     _ _\n//             /  __ \\         | |    | |   (_) |\n//             | /  \\/ ___   __| | ___| |    _| |_ ___\n//             | |    / _ \\ / _  |/ _ \\ |   | | __/ _ )\n//             | \\__/\\ (_) | (_| |  __/ |___| | ||  __/\n//              \\____/\\___/ \\__,_|\\___\\_____/_|\\__\\___|\n//\n//                                                  F i l e\n//\n//    This program is free software; you can redistribute it and/or modify\n//    it under the terms of the GNU General Public License as published by\n//    the Free Software Foundation; either version 2 of the License, or\n//    (at your option) any later version.\n//\n//////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n\n"
        },
        {
          "name": "codelite_vim",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelitephp",
          "type": "tree",
          "content": null
        },
        {
          "name": "compilers.json",
          "type": "blob",
          "size": 0.4501953125,
          "content": "{\r\n    \"Compilers\" : {\r\n        \"MinGW\" : [\r\n            {\r\n                \"Name\" : \"MinGW-TDM 5.1/32 bit\",\r\n                \"URL\" : \"http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%20Installer/tdm-gcc-5.1.0-3.exe/download\"\r\n            } , {\r\n                \"Name\" : \"MinGW-TDM 5.1/64 bit\",\r\n                \"URL\" : \"http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%20Installer/tdm64-gcc-5.1.0-2.exe/download\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
        },
        {
          "name": "cppchecker",
          "type": "tree",
          "content": null
        },
        {
          "name": "cscope",
          "type": "tree",
          "content": null
        },
        {
          "name": "ctagsd",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "formbuilder",
          "type": "tree",
          "content": null
        },
        {
          "name": "gdbparser",
          "type": "tree",
          "content": null
        },
        {
          "name": "git",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "le_exec",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "submodules",
          "type": "tree",
          "content": null
        },
        {
          "name": "svgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "weekly",
          "type": "tree",
          "content": null
        },
        {
          "name": "wxcrafter",
          "type": "tree",
          "content": null
        },
        {
          "name": "wxformbuilder",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}