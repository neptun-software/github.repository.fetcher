{
  "metadata": {
    "timestamp": 1736565507952,
    "page": 375,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "f3d-app/f3d",
      "stars": 3050,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.69140625,
          "content": "---\n# This configuration requires clang-format 3.8 or higher.\nBasedOnStyle: Mozilla\nAlignAfterOpenBracket: DontAlign\nAlignOperands: false\nAllowShortFunctionsOnASingleLine: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakAfterDefinitionReturnType: None\nBreakBeforeBraces: Allman\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  BeforeLambdaBody: true\nColumnLimit: 100\n# Note that on versions after 4.0 you need to specify\n# SpaceAfterTemplateKeyword: true\n# which is not an option prior to 4.0. Later versions\n# of clang may produce results different from 3.8.\n# For your commits to be compatible with clang 3.8\n# you are best off running clang-format 3.8 on your\n# system\nStandard: Cpp11\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.244140625,
          "content": "Checks: '-*,performance-*,modernize-*,-modernize-use-trailing-return-type,-modernize-use-nodiscard,-modernize-avoid-c-arrays,-modernize-use-auto,-modernize-avoid-bind,-performance-no-int-to-ptr'\nWarningsAsErrors: '*'\nUseColor: true\nFormatStyle: none\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.1328125,
          "content": "[codespell]\nskip = ./testing/**/*,./.git/**/*,./**/*.patch,./external/**/*\nignore-words-list=nnumber,unknwn,dota,modle,inout,ThirdParty\n"
        },
        {
          "name": ".cppcheck.supp",
          "type": "blob",
          "size": 0.8779296875,
          "content": "// remove some checks\nmissingInclude\nunusedFunction\nunknownMacro\n\n// external libraries\n*:external/nlohmann_json/nlohmann/json.hpp\n*:external/tinyfiledialogs/tinyfiledialogs.cxx\n*:external/tinyfiledialogs/tinyfiledialogs.h\n*:external/cxxopts/cxxopts.hpp\n*:external/dmon/dmon.h\n*:external/imgui/*.h\n*:external/imgui/*.cpp\n\n// specific checks\nknownConditionTrueFalse:library/testing/TestSDKImage.cxx\nknownConditionTrueFalse:library/testing/TestSDKImageDeprecated.cxx\nnoExplicitConstructor:library/public/types.h\npreprocessorErrorDirective:library/src/engine.cxx\npreprocessorErrorDirective:plugins/draco/module/vtkF3DDracoReader.cxx\nunknownMacro:library/VTKExtensions/Applicative/vtkF3DObjectFactory.cxx\nunusedVariable:*factory.cxx*\nconstParameter:library/src/image.cxx\ninvalidPointerCast:plugins/native/module/vtkF3DSplatReader.cxx\ninvalidPointerCast:plugins/draco/module/vtkF3DGLTFDocumentLoader.cxx\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3447265625,
          "content": "testing/data/**/* filter=lfs diff=lfs merge=lfs -text\ntesting/baselines/**/* filter=lfs diff=lfs merge=lfs -text\ntesting/data/DATA_LICENSES.md !filter !diff !merge text\nexamples/**/*/data/**/* filter=lfs diff=lfs merge=lfs -text\nexamples/**/*/baselines/**/* filter=lfs diff=lfs merge=lfs -text\n.github/baselines/**/* filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3828125,
          "content": "## This file should contain only F3D process related files and folder\n## For any files specific to user process, use either ~/.gitignore or .git/info/exclude instead\n# doc process related\n_site\n\n# scikit build related\n_skbuild\ndist\n*.egg-info\n\n# python usage related\n__pycache__\n*.pyc\n\n# python wheel process related\n_version.py\n\n# wasm process related\nnode_modules\n\n# testing related\n.cache\n"
        },
        {
          "name": ".lsan.supp",
          "type": "blob",
          "size": 0.4306640625,
          "content": "# NVIDIA driver\nleak:nvidia-glcore\n\n# Kernel\nleak:ld-linux-x86-64\n\n# OCCT\nleak:TKBO\nleak:TKG2d\nleak:TKG3d\nleak:TKIGES\nleak:TKMath\nleak:TKMesh\nleak:TKVCAF\nleak:TKXSBase\nleak:TKernel\n\n# TBB\nleak:libtbb\n\n# OSMesa\nleak:libOSMesa\n\n# Potential mesa/VTK leak with incomplete callstack\n# forces us to hide all leaks from the tests using a render window\n# https://gitlab.kitware.com/vtk/vtk/-/issues/18504\nleak:libf3dSDKTests\nleak:vtkextPrivateTests\n"
        },
        {
          "name": ".tsan.supp",
          "type": "blob",
          "size": 0.25390625,
          "content": "# False positive with Qt test\nrace:libQt5Core\nrace:libQt5XcbQpa\n\n# Issue in mesa sw_rast\nrace:swrast_dri\n\n# VTK + TBB\nrace:libvtkCommonDataModel\n\n# OpenEXR\nrace:libOpenEXR\n\n# dmon\n# https://github.com/septag/dmon/issues/33\nrace:dmon.h\n\n# OSMesa\nrace:libOSMesa\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.1953125,
          "content": "cmake_minimum_required(VERSION 3.21)\ninclude(CMakeDependentOption)\n\n# Generic CMake variables, should be done before project()\nset(output_postfix \"\")\nget_property(F3D_MULTI_CONFIG_GENERATOR GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\nif(${F3D_MULTI_CONFIG_GENERATOR})\n  set(output_postfix \"_$<CONFIG>\")\n  if(NOT CMAKE_CONFIGURATION_TYPES)\n    set(CMAKE_CONFIGURATION_TYPES \"Debug;Release;RelWithDebInfo\" CACHE STRING \"Multi-config types\" FORCE)\n  endif()\nelse()\n  if(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Build type\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"RelWithDebInfo\")\n  endif()\nendif()\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin${output_postfix}\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib${output_postfix}\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib${output_postfix}\")\n\nproject(F3D\n  DESCRIPTION \"F3D - A fast and minimalist 3D viewer\"\n  LANGUAGES C CXX)\n\nset(f3d_cmake_dir \"${F3D_SOURCE_DIR}/cmake\")\nlist(INSERT CMAKE_MODULE_PATH 0 \"${f3d_cmake_dir}\")\ninclude(f3dVersion)\n\n# Handle F3D_VERSION\nset(F3D_MAJOR_VERSION 3)\nset(F3D_MINOR_VERSION 0)\nset(F3D_PATCH_VERSION 0)\nset(F3D_VERSION ${F3D_MAJOR_VERSION}.${F3D_MINOR_VERSION}.${F3D_PATCH_VERSION})\n\nset(F3D_PATCH_VERSION_EXTRA \"RC1\")\nif(F3D_PATCH_VERSION_EXTRA STREQUAL \"\")\n  set(F3D_VERSION_FULL ${F3D_VERSION})\nelse()\n  set(F3D_VERSION_FULL ${F3D_VERSION}-${F3D_PATCH_VERSION_EXTRA})\nendif()\n\nfind_package(Git QUIET)\nf3d_determine_version(\"${CMAKE_CURRENT_SOURCE_DIR}\" \"${GIT_EXECUTABLE}\" \"F3D\")\n\nstring(TIMESTAMP F3D_BUILD_DATE \"%Y-%m-%d %H:%M:%S\" UTC)\n\nmath(EXPR F3D_SYSTEM_PROCESSOR \"8 * ${CMAKE_SIZEOF_VOID_P}\")\nset(F3D_SYSTEM_PROCESSOR \"${F3D_SYSTEM_PROCESSOR}-bits\")\n\noption(F3D_EXCLUDE_DEPRECATED \"Exclude deprecated functions and options\" OFF)\nmark_as_advanced(F3D_EXCLUDE_DEPRECATED)\n\n# Modules\noption(F3D_MODULE_RAYTRACING \"Raytracing module\" OFF)\noption(F3D_MODULE_EXR \"OpenEXR images module\" OFF)\noption(F3D_MODULE_UI \"ImGui widgets module\" ON)\noption(F3D_MODULE_DMON \"dmon (watch) module\" ON)\noption(F3D_MODULE_TINYFILEDIALOGS \"tinyfiledialogs module\" ON)\n\n# Use externals\noption(F3D_USE_EXTERNAL_CXXOPTS \"Use external cxxopts dependency\" OFF)\noption(F3D_USE_EXTERNAL_NLOHMANN_JSON \"Use external nlohmann_json dependency\" OFF)\ncmake_dependent_option(F3D_USE_EXTERNAL_DMON \"Use external dmon dependency\" OFF \"F3D_MODULE_DMON\" OFF)\ncmake_dependent_option(F3D_USE_EXTERNAL_IMGUI \"Use external imgui dependency\" OFF \"F3D_MODULE_UI\" OFF)\n\nif (F3D_USE_EXTERNAL_CXXOPTS)\n  find_package(cxxopts REQUIRED)\nendif ()\nif (F3D_USE_EXTERNAL_NLOHMANN_JSON)\n  find_package(nlohmann_json REQUIRED)\nendif ()\nif (F3D_USE_EXTERNAL_DMON)\n  find_package(dmon REQUIRED)\nendif ()\nif (F3D_USE_EXTERNAL_IMGUI)\n  find_package(imgui REQUIRED)\nendif ()\n\n# VTK dependency\n# Optional components should list VTK modules\n# needed by plugins and optional modules\nfind_package(VTK 9.2.6 REQUIRED\n  COMPONENTS\n    CommonCore\n    CommonDataModel\n    CommonExecutionModel\n    FiltersGeneral\n    FiltersGeometry\n    ImagingCore\n    ImagingHybrid\n    InteractionStyle\n    InteractionWidgets\n    IOCityGML\n    IOGeometry\n    IOImage\n    IOImport\n    IOParallel\n    IOPLY\n    IOXML\n    RenderingAnnotation\n    RenderingCore\n    RenderingOpenGL2\n    RenderingVolumeOpenGL2\n    TestingCore\n    jsoncpp\n  OPTIONAL_COMPONENTS\n    opengl\n    IOExodus\n    IOOpenVDB\n    RenderingRayTracing)\nmessage(STATUS \"VTK ${VTK_VERSION} found\")\n\nif(VTK_VERSION VERSION_LESS 9.3.20240914)\n  # Not optional before\n  find_package(VTK REQUIRED COMPONENTS opengl)\nendif()\n\n# Shared options between application and library\ninclude(GNUInstallDirs)\ncmake_dependent_option(F3D_WINDOWS_GUI \"Build a non-console Win32 application\" ON \"WIN32\" OFF)\ncmake_dependent_option(F3D_MACOS_BUNDLE \"Build a macOS bundle application\" ON \"APPLE\" OFF)\n\nif(UNIX AND NOT APPLE)\n  option(F3D_LINUX_LINK_FILESYSTEM \"Link with libstdc++fs, may be needed for older compilers\" OFF)\n  mark_as_advanced(F3D_LINUX_LINK_FILESYSTEM)\nendif()\n\n# Force static library when creating a macOS bundle\ncmake_dependent_option(BUILD_SHARED_LIBS \"Build f3d with shared libraries\" ON \"NOT ANDROID\" OFF)\n\n# F3D_STRICT_BUILD\nset(F3D_STRICT_BUILD OFF CACHE BOOL \"Use strict warnings and errors flags for building F3D\")\nmark_as_advanced(F3D_STRICT_BUILD)\nset(f3d_strict_build_compile_options \"\")\nif(F3D_STRICT_BUILD)\n  if(MSVC)\n    set(f3d_strict_build_compile_options /W4 /WX)\n  else()\n    set(f3d_strict_build_compile_options -Wall -Wextra -Wshadow -Woverloaded-virtual -Wno-deprecated -Wno-strict-overflow -Wno-array-bounds -Wunreachable-code -Wno-missing-field-initializers -Wno-unused-parameter -Wredundant-decls -Wpointer-arith -Werror)\n    if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n      list(APPEND f3d_strict_build_compile_options -Wsuggest-override)\n    endif()\n  endif()\nendif()\n\n# Coverage\ncmake_dependent_option(F3D_COVERAGE \"Emit coverage files\" OFF \"UNIX\" OFF)\nmark_as_advanced(F3D_COVERAGE)\nset(f3d_coverage_compile_options \"\")\nset(f3d_coverage_link_options \"\")\nif(F3D_COVERAGE)\n  set(f3d_coverage_compile_options -g -O0 --coverage)\n  set(f3d_coverage_link_options --coverage)\nendif()\n\n# Sanitizer\nif(NOT F3D_SANITIZER)\n  set(F3D_SANITIZER \"none\" CACHE STRING \"Sanitizer type\" FORCE)\n  set_property(CACHE F3D_SANITIZER PROPERTY STRINGS \"none\" \"address\" \"thread\" \"leak\" \"memory\" \"undefined\")\nendif()\nmark_as_advanced(F3D_SANITIZER)\n\nif(NOT UNIX)\n  set_property(CACHE F3D_SANITIZER PROPERTY TYPE INTERNAL)\nendif()\n\nset(f3d_sanitizer_compile_options \"\")\nset(f3d_sanitizer_link_options \"\")\nif(NOT F3D_SANITIZER STREQUAL \"none\")\n  set(f3d_sanitizer_compile_options -fsanitize=${F3D_SANITIZER} -fno-optimize-sibling-calls -fno-omit-frame-pointer -g)\n  if(${F3D_SANITIZER} STREQUAL \"address\")\n    list(APPEND f3d_sanitizer_compile_options -fsanitize-address-use-after-scope)\n  endif()\n  if(${F3D_SANITIZER} STREQUAL \"memory\")\n    list(APPEND f3d_sanitizer_compile_options -fsanitize-memory-track-origins)\n  endif()\n  set(f3d_sanitizer_link_options -fsanitize=${F3D_SANITIZER})\nendif()\n\n# Construct generic build and link options\nset(f3d_compile_options_private \"\")\nset(f3d_compile_options_public \"\")\nset(f3d_link_options_public \"\")\n\n## F3D_STRICT_BUILD\nlist(APPEND f3d_compile_options_private ${f3d_strict_build_compile_options})\n\n## Coverage\nlist(APPEND f3d_compile_options_public ${f3d_coverage_compile_options})\nlist(APPEND f3d_link_options_public ${f3d_coverage_link_options})\n\n## Sanitizer\nlist(APPEND f3d_compile_options_public ${f3d_sanitizer_compile_options})\nlist(APPEND f3d_link_options_public ${f3d_sanitizer_link_options})\n\n# Testing\noption(BUILD_TESTING \"Build the tests\" OFF)\ncmake_dependent_option(F3D_TESTING_ENABLE_RENDERING_TESTS \"Enable rendering tests\" ON \"BUILD_TESTING\" OFF)\ncmake_dependent_option(F3D_TESTING_ENABLE_LONG_TIMEOUT_TESTS \"Enable long timeout tests\" OFF \"BUILD_TESTING\" OFF)\ncmake_dependent_option(F3D_TESTING_ENABLE_GLX_TESTS \"Enable tests that require a X server running on Linux\" ON \"F3D_TESTING_ENABLE_RENDERING_TESTS AND UNIX AND NOT APPLE\" OFF)\ncmake_dependent_option(F3D_TESTING_ENABLE_EGL_TESTS \"Enable tests that require EGL to run\" ON \"F3D_TESTING_ENABLE_RENDERING_TESTS AND UNIX AND NOT APPLE\" OFF)\ncmake_dependent_option(F3D_TESTING_ENABLE_OSMESA_TESTS \"Enable tests that require OSMESA to run\" ON \"F3D_TESTING_ENABLE_RENDERING_TESTS AND UNIX AND NOT APPLE\" OFF)\n\nif(BUILD_TESTING)\n  enable_testing()\nendif()\n\n# Testing offscreen backend\nif(NOT F3D_TESTING_FORCE_RENDERING_BACKEND)\n  set(F3D_TESTING_FORCE_RENDERING_BACKEND \"auto\" CACHE STRING \"Force testing offscreen backend\" FORCE)\n  set_property(CACHE F3D_TESTING_FORCE_RENDERING_BACKEND PROPERTY STRINGS \"auto\" \"egl\" \"osmesa\")\nendif()\nmark_as_advanced(F3D_TESTING_FORCE_RENDERING_BACKEND)\n\n# Figure out F3D configuration directory\nif(UNIX AND NOT APPLE)\n  option(F3D_LINUX_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX \"Install the default configuration at the prefix root instead of system wide\" OFF)\n  mark_as_advanced(F3D_LINUX_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX)\nendif()\n\nset(f3d_resources_dir \"share/f3d\")\nif (F3D_MACOS_BUNDLE)\n  set(f3d_resources_dir \"f3d.app/Contents/Resources\")\nendif()\n\n## Will be stored in f3dConfig.cmake\nset(f3d_config_dir \"${f3d_resources_dir}/configs\")\nif (UNIX AND NOT APPLE)\n  if (NOT F3D_LINUX_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX)\n    set(f3d_config_dir \"${CMAKE_INSTALL_FULL_SYSCONFDIR}/f3d\")\n  endif()\nendif()\n\n# F3D Application\ncmake_dependent_option(F3D_BUILD_APPLICATION \"Build the application\" ON \"NOT ANDROID AND NOT EMSCRIPTEN\" OFF)\n\n# Build VTK extension modules\nadd_subdirectory(vtkext)\n\n# plugins\noption(F3D_PLUGINS_STATIC_BUILD \"Make all plugins static (embedded into libf3d) and automatically loaded by F3D\" ON)\nmark_as_advanced(F3D_PLUGINS_STATIC_BUILD)\nif (F3D_MACOS_BUNDLE AND NOT F3D_PLUGINS_STATIC_BUILD)\n  message(FATAL_ERROR \"Building a macOS Bundle do not support loading plugins dynamically\")\nendif()\nset(F3D_PLUGINS_INSTALL_DIR \"${CMAKE_INSTALL_LIBDIR}\" CACHE STRING \"Plugins install directory relative path\")\nmark_as_advanced(F3D_PLUGINS_INSTALL_DIR)\nadd_subdirectory(plugins)\n\n# libf3d target\nadd_subdirectory(library)\n\nif (F3D_BUILD_APPLICATION)\n  add_subdirectory(application)\nendif()\n\n# Windows Shell Extension\ncmake_dependent_option(F3D_WINDOWS_BUILD_SHELL_THUMBNAILS_EXTENSION \"Build the Windows Shell Extension to produce thumbnails\" ON \"WIN32\" OFF)\nif(F3D_WINDOWS_BUILD_SHELL_THUMBNAILS_EXTENSION)\n  add_subdirectory(winshellext)\nendif()\n\n# Python bindings\noption(F3D_BINDINGS_PYTHON \"Create Python bindings\" OFF)\nif(F3D_BINDINGS_PYTHON)\n  add_subdirectory(python)\nendif()\n\n# JNI bindings\noption(F3D_BINDINGS_JAVA \"Create Java bindings\" OFF)\nif(F3D_BINDINGS_JAVA)\n  add_subdirectory(java)\nendif()\n\n# webassembly bindings\nif(EMSCRIPTEN)\n  add_subdirectory(webassembly)\nendif ()\n\n# Installing licenses\nset(F3D_LIC_DIR \".\")\n\nif (UNIX AND NOT APPLE AND NOT ANDROID)\n  set(F3D_LIC_DIR ${CMAKE_INSTALL_DOCDIR})\nendif()\n\ninstall(FILES LICENSE.md\n  DESTINATION ${F3D_LIC_DIR} COMPONENT licenses)\n\nif (F3D_BUILD_APPLICATION)\n  install(FILES doc/THIRD_PARTY_LICENSES.md\n    DESTINATION ${F3D_LIC_DIR} COMPONENT licenses)\nendif ()\n\n# Check that a LFS data file is big enough to be an actual file\nfile(SIZE \"${F3D_SOURCE_DIR}/testing/data/dragon.vtu\" f3d_lfs_file_size)\nif (f3d_lfs_file_size LESS_EQUAL 500)\n  if(BUILD_TESTING)\n    message(FATAL_ERROR \"Building tests without git LFS data will result in non functioning tests, please fetch LFS data (git lfs pull) or disable BUILD_TESTING. Aborting.\")\n  endif()\n  if (F3D_BINDINGS_PYTHON)\n    message(WARNING \"Building python binding without git LFS data is supported but testing using pytest will not be, please fetch LFS data (git lfs pull) to avoid this.\")\n  endif()\nendif()\n\n# Report options\nfunction(f3d_report_variable f3d_var)\n  message(STATUS \"${f3d_var}: ${${f3d_var}}\")\nendfunction()\n\nf3d_report_variable(F3D_BINDINGS_JAVA)\nf3d_report_variable(F3D_BINDINGS_PYTHON)\nf3d_report_variable(F3D_BUILD_APPLICATION)\nf3d_report_variable(F3D_MODULE_EXR)\nf3d_report_variable(F3D_MODULE_RAYTRACING)\nf3d_report_variable(F3D_MODULE_UI)\nf3d_report_variable(F3D_PLUGIN_BUILD_ALEMBIC)\nf3d_report_variable(F3D_PLUGIN_BUILD_ASSIMP)\nf3d_report_variable(F3D_PLUGIN_BUILD_DRACO)\nf3d_report_variable(F3D_PLUGIN_BUILD_EXODUS)\nf3d_report_variable(F3D_PLUGIN_BUILD_OCCT)\nf3d_report_variable(F3D_PLUGIN_BUILD_USD)\nf3d_report_variable(F3D_PLUGIN_BUILD_VDB)\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0068359375,
          "content": "f3d.app"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.365234375,
          "content": "# F3D Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socioeconomic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official email address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement on our [discord].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n[discord]: https://discord.f3d.app\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.55078125,
          "content": "# How to Contribute\n\nF3D welcomes all contributors, regardless of skill level or experience!\n\n## Contributing as a User\n\nContributing to F3D can be as simple as pointing out a spelling mistake on the website,\nreporting a bug you encountered, or suggesting a new feature you feel would improve the application.\n\nWe use [GitHub](https://github.com/f3d-app/f3d) to manage the project and you can report new issues or weigh\nin on existing ones via our [issue tracker](https://github.com/f3d-app/f3d/issues).\n\nAlso, do not hesitate to join our [Discord](https://discord.f3d.app)!\n\n## How to Get Started With Development\n\nTo contribute to F3D as a developer, first you may want to try and build F3D for yourself.\nIf you are already familiar with software compilation, you can take a look at our [build guide](doc/dev/BUILD.md).\nIf not, you may want to look at our [getting started guide](doc/dev/GETTING_STARTED.md), that provide steps to compile F3D.\n\nOnce you are able to build F3D, you may want to take a look at the open [issues](https://github.com/f3d-app/f3d/issues)!\nIf you are a beginner, you may want to look at [\"good first issues\"](https://github.com/f3d-app/f3d/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22).\nIf you already have some experience with programming and contribution, definitely look at [\"help wanted\"](https://github.com/f3d-app/f3d/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) issues.\nIf an issue is interesting to you and is not yet assigned, then you should *comment on the issue* and ask for any help or clarification needed.\nF3D maintainers will see your comment, assign the issue to you and provide guidance as needed.\n\nTo get involved more deeply, please take a look at the [roadmaps](doc/dev/ROADMAPS_AND_RELEASES.md) for the upcoming releases.\n\nIt is also recommended to reach out on [Discord](https://discord.f3d.app) to simplify communication, but it is not required.\n\nYou can then fix the issue or implement the feature on your side and contribute it to the F3D repository by following the workflow described below.\n\nOf course, if you are already using F3D and want to improve it for your specific needs, because you want a feature or found a bug,\nthat is definitely possible. Feel free to reach out for guidance by opening an issue or asking on [Discord](https://discord.f3d.app).\n\nAnother way to get started is to improve the documentation, look for typos, or improve the examples and the gallery. Please share any ideas you may have!\n\n## F3D Development Workflow\n\nF3D uses [GitLab Flow](https://about.gitlab.com/topics/version-control/what-is-gitlab-flow/). In a few words, here is how to contribute:\n- [Fork](https://github.com/f3d-app/f3d/fork) the F3D repository on GitHub.\n- Create and push a feature branch on your fork containing new commits.\n- When it is ready for review or when you want to run the CI, create a pull request against `f3d-app/f3d/master`.\n- Once the PR is approved and CI comes back clean, a F3D maintainer will merge your pull request in the master branch.\n- The master now contains your changes and will be present in the next release!\n\n## Continuous Integration\n\nF3D has pretty extensive continuous integration trying to cover all usecases for F3D.\nIt means that if the change in your pull request breaks continuous integration, it will not be merged until it passes successfully.\nIt also means that adding a new feature or behavior means adding an associated test.\nMake sure to check the results for yourself and ask for help if needed.\n\nF3D continuous integration will also check the coverage as it is a good way to evaluate if new features are being tested or not.\nWhen adding code to F3D, always try to cover it by adding/modifying [tests](doc/dev/TESTING.md).\n\nF3D continuous integration also checks formatting using clang-format and will inform you if changes needs to be made.\nSome [formatting rules](doc/dev/CODING_STYLE.md) are not enforced by clang-format and will be checked during the review process.\n\nWhen making changes to the `libf3d` public API, continuous integration will warn about making related changes to the bindings.\nThis is required in order to merge the pull request.\n\n## Changelog\n\nWhenever you make significant changes, either bugfixes or features, please update the [changelog](doc/CHANGELOG.md) \"Ongoing development\" section.\nThere are three subsections. \"For F3D Users\" are changes that impact actual F3D users and are related to F3D behaviors changing. \"For developers\" are changes\nthat impact developers that build F3D. \"For F3D packagers\" are changes that impact anyone packaging F3D, eg: new CMake options.\n\n## F3D Architecture\n\nF3D is divided into different components:\n- The `f3d` executable, in the `application` folder.\n- The `libf3d` library, in the `library` folder.\n- The extensions to VTK, in the `vtkext` folder.\n- The bindings for Python, Java, and WebAssembly, in their respective folders.\n- The plugins, providing all the different readers in the plugins directory.\n\nThe extensions to VTK are divided into two modules:\n- The [private module](vtkext/private) is used exclusively by `libf3d`.\n- The [public module](vtkext/public) is used by `libf3d` and also by plugins. Additional documentation can be found in [PLUGINS.md](doc/libf3d/PLUGINS.md).\n\nThe `libf3d` library implements the whole logic of instancing and manipulating the different VTK classes, it is fully documented in the [libf3d README](doc/libf3d/README_LIBF3D.md).\n\nThe `f3d` executable itself uses `libf3d` and adds an application layer on top of it, especially the handling of [command line options](doc/user/OPTIONS.md)\nand a [configuration file](doc/user/CONFIGURATION_FILE.md).\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.5341796875,
          "content": "BSD 3-Clause License\n\n* Copyright 2019-2021 Kitware SAS\n* Copyright 2021-2024 Michael Migliore, Mathieu Westphal\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.9013671875,
          "content": "[![CI](https://img.shields.io/github/actions/workflow/status/f3d-app/f3d/ci.yml?label=CI&logo=github)](https://github.com/f3d-app/f3d/actions/workflows/ci.yml) [![Packaging](https://img.shields.io/github/actions/workflow/status/f3d-app/f3d-superbuild/nightly.yml?label=Packaging&logo=github)](https://github.com/f3d-app/f3d-superbuild) [![codecov](https://codecov.io/gh/f3d-app/f3d/branch/master/graph/badge.svg?token=siwG82IXK7)](https://codecov.io/gh/f3d-app/f3d) [![Downloads](https://img.shields.io/github/downloads/f3d-app/f3d/total.svg)](https://github.com/f3d-app/f3d/releases) [![Sponsors](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86)](https://github.com/sponsors/f3d-app) [![Discord](https://discordapp.com/api/guilds/1046005690809978911/widget.png?style=shield)](https://discord.f3d.app) [![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](CODE_OF_CONDUCT.md)\n\n# F3D - Fast and minimalist 3D viewer\nBy Michael Migliore and Mathieu Westphal.\n\n<img src=\"https://raw.githubusercontent.com/f3d-app/f3d/master/resources/logo.svg\" align=\"left\" width=\"20px\"/>\nF3D (pronounced `/fɛd/`) is a fast and minimalist 3D viewer desktop application. It supports many file formats, from digital content to scientific datasets (including glTF, USD, STL, STEP, PLY, OBJ, FBX, Alembic), can show animations and support thumbnails and many rendering and texturing options including real time physically based rendering and raytracing.\n<br clear=\"left\"/>\n\nIt is fully controllable from the command line and support configuration files. It can provide thumbnails, support interactive hotkeys, drag&drop and integration into file managers.\n\nF3D also contains the libf3d, a simple library to render meshes, with a C++17 API, Python Bindings, and experimental Java and Javascript bindings.\n\n<img src=\"https://user-images.githubusercontent.com/3129530/194735416-3f386437-456c-4145-9b5e-6bb6451d7e9a.png\" width=\"640\">\n\n*A typical render by F3D*\n\n<img src=\"https://user-images.githubusercontent.com/3129530/194735261-dd6f1c1c-fa57-47b0-9d27-f735d18ccd5e.gif\" width=\"640\">\n\n*Animation of a glTF file within F3D*\n\n<img src=\"https://user-images.githubusercontent.com/3129530/194735272-5bcd3e7c-a333-41f5-8066-9b0bec9885e8.png\" width=\"640\">\n\n*A direct scalars render by F3D*\n\nSee the [gallery](doc/GALLERY.md) for more images, take a look at the [changelog](doc/CHANGELOG.md) or go to the [install guide](doc/user/INSTALLATION.md) to download and install F3D!\n\nYou can even use F3D directly in your [browser](https://f3d.app/web)!\n\nIf you need any help or want to discuss with other F3D users and developers, head over to our [discord](https://discord.f3d.app).\n\n# Quickstart\n\nOpen a file directly in F3D or from the command line by running:\n```\nf3d /path/to/file.ext\n``` \n\nOptionally, append `--output=/path/to/img.png` to save the rendering into an image file.\n\nSee the [Quickstart Guide](doc/user/QUICKSTART.md) for more information about getting started with F3D.\n\n# Documentation\n\n- To get started, please take a look at the [user documentation](doc/user/README_USER.md).\n- If you need any help, are looking for a feature or found a bug, please open an [issue](https://github.com/f3d-app/f3d/issues).\n- If you want to use the libf3d, please take a look at its [documentation](doc/libf3d/README_LIBF3D.md).\n- If you want to build F3D, please take a look at the [developer documentation](doc/dev/README_DEV.md).\n\n# Support\n\nF3D needs your help!\n\nIf you can, please consider sponsoring F3D. Even a small donation would help us offset the recurring maintenance costs.\nWith enough sponsors we would even be able to add support for new devices (as we would need do acquire or rent them first). Read more about it on our [sponsor page](https://github.com/sponsors/f3d-app).\n\nIf not, please use F3D, star it on github and share the word about it!\n\n# Vision\n\nAs a minimalist 3D viewer F3D aims to:\n\n- Support as many 3D file formats as possible\n- Support many types of renderings (textures, edges, etc... ) and visualizations (meshes, volumic, point sprites)\n- Support any and all use-cases dealing with 3D datasets\n- Let any user easily and quickly view any model with good defaults\n- Be as configurable as possible\n- Be fully controllable from the command line and configuration file\n- Be usable non-interactively\n- Be as modular as possible to be built with a small number of dependencies\n\nbut there is no plan to:\n\n- Provide a classic mouse-based UI, with menus and buttons\n- Provide data processing tools\n- Provide export feature\n\n# Contributing\n\nF3D as a community-driven, inclusive and beginner-friendly project. We love to see how the project is growing thanks to the contributions from the community. We would love to see your face in the list below! If you want to contribute to F3D, you are very welcome to! Take a look at our [contribution documentation](CONTRIBUTING.md), [governance documentation](doc/dev/GOVERNANCE.md) and [code of conduct](CODE_OF_CONDUCT.md).\n\n<a href=\"https://github.com/f3d-app/f3d/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=f3d-app/f3d\" />\n</a>\n\n# Acknowledgments\n\nF3D was initially created by [Kitware SAS](https://www.kitware.eu/) and is relying on many awesome open source projects, including [VTK](https://vtk.org/), [OCCT](https://dev.opencascade.org/), [Assimp](https://www.assimp.org/), [Alembic](http://www.alembic.io/), [Draco](https://google.github.io/draco/), [OpenUSD](https://openusd.org/release/index.html), [OpenVDB](https://www.openvdb.org/), [OSPRay](https://www.ospray.org/) and [ImGui](https://github.com/ocornut/imgui/).\n\n# License\n\nF3D can be used and distributed under the 3-Clause BSD License, see the [license](LICENSE.md).\nF3D integrate the sources of other libraries and tools, all under permissive licenses, see the [third party licenses](doc/THIRD_PARTY_LICENSES.md).\nF3D packages relies on other libraries and tools, all under permissive licenses, all listed in the respective packages.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 6.65234375,
          "content": "remote_theme: just-the-docs/just-the-docs\nplugins:\n  - jekyll-optional-front-matter\n  - jekyll-relative-links\n  - jekyll-remote-theme\n  - jekyll-seo-tag\n  - jekyll-titles-from-headings\nrelative_links:\n  enabled: true\n  collections: true\ninclude:\n  - README.md\n  - LICENSE.md\n  - _licenses.md\n  - CONTRIBUTING.md\nexclude:\n  - CMakeLists.txt\n  - codecov.yml\n  - application\n  - cmake\n  - examples\n  - java\n  - library\n  - plugins\n  - python\n  - testing\n  - winshellext\ntitle: F3D\ntagline: Fast and minimalist 3D viewer\ndescription: F3D - Fast and minimalist 3D viewer\nurl: https://f3d.app/\nlogo: /resources/logotype.svg\ncolor_scheme: dark\n\n# Set default front matter values\ndefaults:\n  -\n    scope:\n      path: \"\"\n    values:\n      image: # Set a opengraph image from the gallery for all pages\n        path: https://user-images.githubusercontent.com/3129530/201317344-092db03d-8616-45b9-b606-30d22cda2eff.png\n        height: 1200\n        width: 630\n      description: \"F3D - Fast and minimalist 3D viewer\"\n      has_toc: false\n\n  -\n    scope:\n      path: \"README.md\"\n    values:\n      title: Home\n      nav_order: 0\n      permalink: /\n      layout: default\n\n  -\n    scope:\n      path: \"doc/*\"\n    values:\n      layout: default\n\n  -\n    scope:\n      path: \"doc/GALLERY.md\"\n    values:\n      nav_order: 1\n\n# user doc\n  -\n    scope:\n      path: \"doc/user/README_USER.md\"\n    values:\n      nav_order: 2\n      has_children: true\n\n  -\n    scope:\n      path: \"doc/user/QUICKSTART.md\"\n    values:\n      title: Quickstart\n      parent: User Documentation\n      nav_order: 0\n\n  -\n    scope:\n      path: \"doc/user/INSTALLATION.md\"\n    values:\n      parent: User Documentation\n      nav_order: 1\n\n  -\n    scope:\n      path: \"doc/user/SUPPORTED_FORMATS.md\"\n    values:\n      title: Supported File Formats\n      parent: User Documentation\n      nav_order: 2\n\n  -\n    scope:\n      path: \"doc/user/OPTIONS.md\"\n    values:\n      title: Options\n      parent: User Documentation\n      nav_order: 3\n  \n  -\n    scope:\n      path: \"doc/user/INTERACTIONS.md\"\n    values:\n      parent: User Documentation\n      nav_order: 4\n\n  -\n    scope:\n      path: \"doc/user/ANIMATIONS.md\"\n    values:\n      parent: User Documentation\n      nav_order: 5\n\n  -\n    scope:\n      path: \"doc/user/CONFIGURATION_FILE.md\"\n    values:\n      parent: User Documentation\n      nav_order: 6\n  -\n    scope:\n      path: \"doc/user/COMMANDS.md\"\n    values:\n      parent: User Documentation\n      nav_order: 7\n\n  -\n    scope:\n      path: \"doc/user/PARSING.md\"\n    values:\n      parent: User Documentation\n      nav_order: 8\n\n  -\n    scope:\n      path: \"doc/user/COLOR_MAPS.md\"\n    values:\n      parent: User Documentation\n      nav_order: 9\n\n  -\n    scope:\n      path: \"doc/user/FINAL_SHADER.md\"\n    values:\n      parent: User Documentation\n      nav_order: 10\n\n  -\n    scope:\n      path: \"doc/user/DESKTOP_INTEGRATION.md\"\n    values:\n      parent: User Documentation\n      nav_order: 11\n\n  -\n    scope:\n      path: \"doc/user/PLUGINS.md\"\n    values:\n      parent: User Documentation\n      nav_order: 12\n\n  -\n    scope:\n      path: \"doc/user/LIMITATIONS_AND_TROUBLESHOOTING.md\"\n    values:\n      title: Limitations and Troubleshooting\n      parent: User Documentation\n      nav_order: 13\n\n# libf3d doc\n  -\n    scope:\n      path: \"doc/libf3d/README_LIBF3D.md\"\n    values:\n      nav_order: 3\n      has_children: true\n\n  -\n    scope:\n      path: \"doc/libf3d/OVERVIEW.md\"\n    values:\n      title: Overview\n      parent: libf3d Documentation\n      nav_order: 0\n\n  -\n    scope:\n      path: \"doc/libf3d/CLASSES.md\"\n    values:\n      parent: libf3d Documentation\n      nav_order: 1\n\n  -\n    scope:\n      path: \"doc/libf3d/OPTIONS.md\"\n    values:\n      title: Options\n      parent: libf3d Documentation\n      nav_order: 2\n\n  -\n    scope:\n      path: \"doc/libf3d/LANGUAGE_BINDINGS.md\"\n    values:\n      parent: libf3d Documentation\n      nav_order: 3\n\n  -\n    scope:\n      path: \"doc/libf3d/PLUGINS.md\"\n    values:\n      parent: libf3d Documentation\n      nav_order: 4\n\n# dev doc\n  -\n    scope:\n      path: \"doc/dev/README_DEV.md\"\n    values:\n      nav_order: 4\n      has_children: true\n\n  -\n    scope:\n      path: \"doc/dev/GETTING_STARTED.md\"\n    values:\n      title: Getting Started\n      parent: Developer Documentation\n      nav_order: 0\n\n  -\n    scope:\n      path: \"doc/dev/BUILD.md\"\n    values:\n      title: Build\n      parent: Developer Documentation\n      nav_order: 1\n\n  -\n    scope:\n      path: \"doc/dev/TESTING.md\"\n    values:\n      parent: Developer Documentation\n      nav_order: 2\n\n  -\n    scope:\n      path: \"CONTRIBUTING.md\"\n    values:\n      title: Contribute\n      parent: Developer Documentation\n      nav_order: 3\n\n  -\n    scope:\n      path: \"doc/dev/GENERATE.md\"\n    values:\n      title: Generate\n      parent: Developer Documentation\n      nav_order: 4\n\n  -\n    scope:\n      path: \"doc/dev/CODING_STYLE.md\"\n    values:\n      title: Coding style\n      parent: Developer Documentation\n      nav_order: 5\n\n  -\n    scope:\n      path: \"doc/dev/ROADMAPS_AND_RELEASES.md\"\n    values:\n      title: Roadmaps and release cycle\n      parent: Developer Documentation\n      nav_order: 6\n\n  -\n    scope:\n      path: \"doc/dev/GOVERNANCE.md\"\n    values:\n      title: Governance\n      parent: Developer Documentation\n      nav_order: 7\n\n  -\n    scope:\n      path: \"doc/dev/MAINTAINERS.md\"\n    values:\n      title: Maintainers\n      parent: Developer Documentation\n      nav_order: 8\n\n  -\n    scope:\n      path: \"CODE_OF_CONDUCT.md\"\n    values:\n      title: Code of conduct\n      parent: Developer Documentation\n      nav_order: 9\n\n  -\n    scope:\n      path: \"doc/dev/BUILD_WASM.md\"\n    values:\n      title: Build (WebAssembly)\n      parent: Developer Documentation\n      nav_order: 10\n\n# Licenses doc\n# _licenses.md uses front matter      \n  -\n    scope:\n      path: \"LICENSE.md\"\n    values:\n      title: License\n      parent: Licenses\n      nav_order: 0\n      layout: default\n\n  -\n    scope:\n      path: \"doc/THIRD_PARTY_LICENSES.md\"\n    values:\n      title: Third Party Licenses\n      parent: Licenses\n      nav_order: 1\n\n  -\n    scope:\n      path: \"doc/CHANGELOG.md\"\n    values:\n      nav_order: 6\n\n# Aux links for the upper right navigation\naux_links:\n  \"<img src=\\\"https://user-images.githubusercontent.com/3129530/197903476-11d9c41d-73b0-461f-93e8-c8c00c680e6e.png\\\" width=\\\"30px\\\">\":\n    - \"//github.com/f3d-app/f3d\"\n\n# Makes Aux links open in a new tab.\naux_links_new_tab: true\n\n# External navigation links\n# TODO: Create a dedicated javascript page instead: #481\nnav_external_links:\n  - title: Download F3D\n    url: https://f3d.app/doc/user/INSTALLATION.html\n  - title: GitHub repository\n    url: https://github.com/f3d-app/f3d\n  - title: Web viewer\n    url: https://f3d.app/web\n\n# Google Analytics Tracking\nga_tracking: G-ZCWEYB9KVG\nga_tracking_anonymize_ip: true\n"
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "_licenses.md",
          "type": "blob",
          "size": 0.083984375,
          "content": "---\ntitle: Licenses\nnav_order: 5\nhas_children: true\nhas_toc: true\nlayout: default\n---\n"
        },
        {
          "name": "_sass",
          "type": "tree",
          "content": null
        },
        {
          "name": "application",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.25390625,
          "content": "codecov:\n  notify:\n    after_n_builds: 1\n    wait_for_ci: yes\n\ncoverage:\n  range: 70..100\n  round: down\n  precision: 2\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 0.1%\n\ncomment:\n  require_changes: true\n\nfixes:\n  - \"/source::\"\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.142578125,
          "content": "[build-system]\nrequires = [\"scikit-build-core\", \"setuptools-scm>=8.0\", \"pybind11_stubgen\"]\nbuild-backend = \"scikit_build_core.build\"\n\n[project]\nname = \"f3d\"\nrequires-python = \">=3.9\"\ndynamic = [\"version\"]\ndescription = \"F3D, a fast and minimalist 3D viewer\"\nreadme = \"README.md\"\nlicense = {text = \"BSD 3-Clause License\"}\nauthors = [\n  {name = \"Michael Migliore\"},\n  {name = \"Mathieu Westphal\"},\n]\nmaintainers = [\n  {name = \"Michael Migliore\", email = \"mcmigliore+pip@gmail.com\"}\n]\nkeywords = [\"vtk\", \"animations\", \"fbx\", \"step\", \"stl\", \"gltf\", \"pbr\", \"raytracing\", \"rendering\"]\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"License :: OSI Approved :: BSD License\",\n  \"Operating System :: Microsoft :: Windows\",\n  \"Operating System :: POSIX\",\n  \"Operating System :: MacOS\",\n  \"Programming Language :: C++\",\n  \"Programming Language :: Python :: 3\",\n  \"Topic :: Multimedia :: Graphics :: 3D Rendering\",\n  \"Topic :: Multimedia :: Graphics :: Viewers\",\n  \"Topic :: Scientific/Engineering :: Visualization\",\n]\n\n[project.urls]\nHomepage = \"https://f3d.app\"\nRepository = \"https://github.com/f3d-app/f3d.git\"\nChangelog = \"https://github.com/f3d-app/f3d/blob/master/doc/CHANGELOG.md\"\n\n[tool.scikit-build]\nminimum-version = \"0.4\"\ninstall.components = [\"library\", \"plugin\", \"python\", \"dependencies\"]\nmetadata.version.provider = \"scikit_build_core.metadata.setuptools_scm\"\nsdist.include = [\"_version.py\"]\ncmake.build-type = \"Release\"\ncmake.minimum-version = \"3.21\"\nninja.make-fallback = false\nninja.minimum-version = \"1.10\"\nwheel.install-dir = \"f3d\"\nwheel.license-files = [\"LICENSE.md\", \"doc/THIRD_PARTY_LICENSES.md\"]\nwheel.packages = []\n\n[tool.setuptools_scm]\nversion_file = \"_version.py\"\nversion_scheme = \"no-guess-dev\"\nlocal_scheme = \"no-local-version\"\nfallback_version = \"3.0.0-RC1\"\n\n[tool.scikit-build.cmake.define]\nCMAKE_OSX_DEPLOYMENT_TARGET = \"10.15\"\nBUILD_SHARED_LIBS = \"ON\"\nF3D_BINDINGS_PYTHON = \"ON\"\nF3D_BINDINGS_PYTHON_GENERATE_STUBS = \"ON\"\nF3D_PLUGINS_STATIC_BUILD = \"ON\"\nF3D_BUILD_APPLICATION = \"OFF\"\nF3D_WINDOWS_BUILD_SHELL_THUMBNAILS_EXTENSION = \"OFF\"\nF3D_ENABLE_SOVERSION = \"OFF\"\n\n[tool.pytest.ini_options]\naddopts = \"-rA\"\nfilterwarnings = \"ignore::DeprecationWarning\"\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.62890625,
          "content": "{\n    \"name\": \"f3d\",\n    \"dependencies\": [\n        \"alembic\",\n        \"assimp\",\n        \"draco\",\n        \"imgui\",\n        \"opencascade\",\n        \"openexr\",\n        \"openvdb\",\n        \"pybind11\",\n        \"tbb\",\n        \"usd\",\n        {\n            \"name\": \"vtk\",\n            \"default-features\": false,\n            \"features\": [ \"opengl\" ]\n        }\n    ],\n    \"overrides\": [\n        {\n            \"$comment\": \"USD is not compatible with newer versions of TBB\",\n            \"name\": \"tbb\",\n            \"version-string\": \"2020_U3\",\n            \"port-version\": 8\n        }\n    ],\n    \"builtin-baseline\": \"c9140a3b500812ad3206317885860d9553b93f13\"\n}\n"
        },
        {
          "name": "vtkext",
          "type": "tree",
          "content": null
        },
        {
          "name": "webassembly",
          "type": "tree",
          "content": null
        },
        {
          "name": "winshellext",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}