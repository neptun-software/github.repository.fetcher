{
  "metadata": {
    "timestamp": 1736565434600,
    "page": 282,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/singa",
      "stars": 3378,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.0126953125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ngithub:\n  description: a distributed deep learning platform\n  labels:\n    - deep-learning\n  features:\n    # Enable wiki for documentation\n    wiki: true\n    # Enable issues on github\n    issues: true\n    # Enable settings on github\n    settings: true\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.8193359375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n---\nLanguage:        Cpp\nBasedOnStyle:  Google\n...\n\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.787109375,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nignore:\n  - proto/*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2587890625,
          "content": ".DS_Store\n\n*.pyc\n__pycache__\n*.swp\n*~\n.\\#*\n\\#*\\#\n\n\n\n*.o\n*.bin\n*.a\n*.so\n*.bak\n*.log\n*.pb.h\n*.pb.cc\n*.cxx\n\nbuild/\nthirdparty/*\n!thirdparty/install.sh\ntest/samples/\n.idea/\n.vscode/\n\n# Sphinx and Doxygen Doc-Site\ndoc/_build/*\ndoc/en/docs/model_zoo/\ncmake-build-debug/*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.078125,
          "content": "[submodule \"rafiki\"]\n\tpath = rafiki\n\turl = https://github.com/nginyc/rafiki.git\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 18.634765625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n[MASTER]\n\nerrors-only=yes\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-whitelist=numpy\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Specify a configuration file.\n#rcfile=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.\nconfidence=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=print-statement,\n        parameter-unpacking,\n        unpacking-in-except,\n        old-raise-syntax,\n        backtick,\n        long-suffix,\n        old-ne-operator,\n        old-octal-literal,\n        import-star-module-level,\n        non-ascii-bytes-literal,\n        raw-checker-failed,\n        bad-inline-option,\n        locally-disabled,\n        file-ignored,\n        suppressed-message,\n        useless-suppression,\n        deprecated-pragma,\n        use-symbolic-message-instead,\n        apply-builtin,\n        basestring-builtin,\n        buffer-builtin,\n        cmp-builtin,\n        coerce-builtin,\n        execfile-builtin,\n        file-builtin,\n        long-builtin,\n        raw_input-builtin,\n        reduce-builtin,\n        standarderror-builtin,\n        unicode-builtin,\n        xrange-builtin,\n        coerce-method,\n        delslice-method,\n        getslice-method,\n        setslice-method,\n        no-absolute-import,\n        old-division,\n        dict-iter-method,\n        dict-view-method,\n        next-method-called,\n        metaclass-assignment,\n        indexing-exception,\n        raising-string,\n        reload-builtin,\n        oct-method,\n        hex-method,\n        nonzero-method,\n        cmp-method,\n        input-builtin,\n        round-builtin,\n        intern-builtin,\n        unichr-builtin,\n        map-builtin-not-iterating,\n        zip-builtin-not-iterating,\n        range-builtin-not-iterating,\n        filter-builtin-not-iterating,\n        using-cmp-argument,\n        eq-without-hash,\n        div-method,\n        idiv-method,\n        rdiv-method,\n        exception-message-attribute,\n        invalid-str-codec,\n        sys-max-int,\n        bad-python3-import,\n        deprecated-string-function,\n        deprecated-str-translate-call,\n        deprecated-itertools-function,\n        deprecated-types-field,\n        next-method-defined,\n        dict-items-not-iterating,\n        dict-keys-not-iterating,\n        dict-values-not-iterating,\n        deprecated-operator-function,\n        deprecated-urllib-function,\n        xreadlines-attribute,\n        deprecated-sys-function,\n        exception-escape,\n        import-error,\n        comprehension-escape,\n        too-many-function-args, # false positive on np.array([...])\n        not-an-iterable, # false positive on tensor.shape\n        unsubscriptable-object, # false positive on tensor.shape\n        no-name-in-module, # proto object available after compilation\n        access-member-before-definition # conv layer re-instantiate handle when batch number changed\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'error', 'warning', 'refactor', and 'convention'\n# which contain the number of messages in each category, as well as 'statement'\n# which is the total number of statements analyzed. This score is used by the\n# global evaluation report (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\n#msg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style.\n#class-attribute-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style.\n#variable-rgx=\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: none. To make it work,\n# install the python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[LOGGING]\n\n# Format style used to check logging format string. `old` means using %\n# formatting, `new` is for `{}` formatting,and `fstr` is for f-strings.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,numpy\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=numpy\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[SIMILARITIES]\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,\n               dict-separator\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n\n[STRING]\n\n# This flag controls whether the implicit-str-concat-in-sequence should\n# generate a warning on implicit string concatenation in sequences defined over\n# several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method.\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=cls\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=optparse,tkinter.tix\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled).\next-import-graph=\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled).\nimport-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"BaseException, Exception\".\novergeneral-exceptions=BaseException,\n                       Exception\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.9892578125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# .readthedocs.yml\nbuild:\n  image: stable\nconda:\n  environment: doc/environment.yml\npython:\n    version: 3.7\n\n# Required\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: doc/conf.py"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.7998046875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n[style]\nbased_on_style = google\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.9921875,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\ntitle: \"SINGA: A distributed deep learning platform\"\nurl: \"https://github.com/apache/singa\"\npreferred-citation:\n  type: article\n  authors:\n  - family-names: \"Ooi\"\n    given-names: \"Beng Chin\"\n  - family-names: \"Tan\"\n    given-names: \"Kian-Lee\"\n  - family-names: \"Sheng\"\n    given-names: \"Wang\"\n  - family-names: \"Wang\"\n    given-names: \"Wei\"\n  - family-names: \"Cai\"\n    given-names: \"Qingchao\"\n  - family-names: \"Chen\"\n    given-names: \"Gang\"\n  - family-names: \"Gao\"\n    given-names: \"Jinyang\"\n  - family-names: \"Luo\"\n    given-names: \"Zhaojing\"\n  - family-names: \"Tung\"\n    given-names: \"Anthony K. H.\"\n  - family-names: \"Yuan\"\n    given-names: \"Wang\"\n  - family-names: \"Xie\"\n    given-names: \"Zhongle\"\n  - family-names: \"Zhang\"\n    given-names: \"Meihui\"\n  - family-names: \"Zheng\"\n    given-names: \"Kaiping\"\n  title: \"SINGA: A distributed deep learning platform\"\n  doi: 0.1145/2733373.2807410\n  url: \"https://github.com/apache/singa\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.751953125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8)\n\nPROJECT(singa)\n\nLIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Thirdparty)\n\n#include(GetGitRevisionDescription)\n#git_describe(VERSION --tags --dirty=-d)\n#string(REGEX REPLACE \"^([0-9]+)\\\\..*\" \"\\\\1\" VERSION_MAJOR \"${VERSION}\")\n#string(REGEX REPLACE \"^[0-9]+\\\\.([0-9]+).*\" \"\\\\1\" VERSION_MINOR \"${VERSION}\")\n#string(REGEX REPLACE \"^[0-9]+\\\\.[0-9]+\\\\.([0-9]+).*\" \"\\\\1\" VERSION_PATCH \"${VERSION}\")\n\n\nSET(PACKAGE_VERSION 4.3.0) # ${VERSION})\nSET(VERSION 4.3.0)\nSET(SINGA_MAJOR_VERSION 4)\nSET(SINGA_MINOR_VERSION 3)\nSET(SINGA_PATCH_VERSION 0)\n#SET(SINGA_MAJOR_VERSION ${VERSION_MAJOR})  # 0 -\n#SET(SINGA_MINOR_VERSION ${VERSION_MINOR})  # 0 - 9\n#SET(SINGA_PATCH_VERSION ${VERSION_PATCH})  # 0 - 99\n\nMATH(EXPR SINGA_VERSION \"${SINGA_MAJOR_VERSION} * 1000 + ${SINGA_MINOR_VERSION} * 100 + ${SINGA_PATCH_VERSION}\")\n\nmessage(STATUS \"SINGA git Version ${VERSION}\")\nmessage(STATUS \"SINGA Version ${SINGA_VERSION}\")\n\n#message(STATUS \"module path: ${CMAKE_MODULE_PATH}\")\n\n# Flags\nIF(UNIX)\n    SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -g -O2 -fPIC -Wall -pthread\")\nENDIF()\nIF(APPLE)\n    SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -stdlib=libc++ -g -O2 -fPIC -Wall -pthread\")\n    SET(CMAKE_MACOSX_RPATH 1)\nENDIF()\n\nIF(WIN32)\n    IF (MSVC)\n        MESSAGE(STATUS \"Using msvc compiler\")\n        SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /D_SCL_SECURE_NO_WARNINGS\")\n        #MESSAGE(STATUS \"Using msvc compiler ${CMAKE_CXX_FLAGS}\")\n    ENDIF()\nENDIF()\nIF(CMAKE_BUILD_TYPE=Debug)\n    SET(NVCC_FLAG \"${NVCC_FLAG} -g -G \")\nENDIF()\n#message(STATUS \"${CMAKE_CXX_FLAGS}\")\nSET(SINGA_INCLUDE_DIR\n    \"${CMAKE_SOURCE_DIR}/include;${PROJECT_BINARY_DIR}\")\nINCLUDE_DIRECTORIES(${SINGA_INCLUDE_DIR})\n\n\nOPTION(USE_CUDA \"Use Cuda libs\" OFF)\nOPTION(ENABLE_TEST \"Enable unit test\" OFF)\noption(CODE_COVERAGE \"Enable coverage reporting\" OFF)\nOPTION(USE_PYTHON \"Generate py wrappers\" ON)\nOPTION(USE_PYTHON3 \"Python 3x\" OFF)\n\nOPTION(USE_CUDNN \"Use Cudnn libs\" ON)\nOPTION(USE_OPENCV \"Use opencv\" OFF)\nOPTION(USE_LMDB \"Use LMDB libs\" OFF)\nOPTION(USE_JAVA \"Generate java wrappers\" OFF)\nOPTION(USE_OPENCL \"Use OpenCL\" OFF)\nOPTION(ENABLE_DIST \"Enable distributed training\" OFF)\nOPTION(DISABLE_WARNINGS \"Disable warnings under windows\" ON)\nOPTION(USE_MODULES \"Compile dependent libs as submodules together with singa\" OFF)\nOPTION(USE_DNNL \"Use dnnl libs\" OFF)\nOPTION(USE_DIST \"Use nccl distributed module\" OFF)\n\n# TODO: remove all USE_CBLAS in codes\nSET(USE_CBLAS ON)\n\nINCLUDE(\"cmake/Dependencies.cmake\")\n#INCLUDE(\"cmake/Utils.cmake\")\nADD_DEFINITIONS(-DUSE_CMAKE)\n#message(STATUS \"${SINGA_INCLUDE_DIR}\")\n\nCONFIGURE_FILE (\n    \"${PROJECT_SOURCE_DIR}/cmake/Templates/singa_config.h.in\"\n    \"${PROJECT_BINARY_DIR}/include/singa/singa_config.h\")\n\n#set(SINGA_CONFIGURE_SRC \"${PROJECT_BINARY_DIR}/singa_config.h\")\n#LIST(APPEND SRCS ${SINGA_CONFIGURE_SRCS} ${PROJECT_BINARY_DIR}/singa_config.h)\n\nSET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\nSET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\n\nIF (USE_CUDA)\n    include(ExternalProject)\n    ExternalProject_Add(cnmem\n        GIT_REPOSITORY \"https://github.com/nusdbsystem/cnmem.git\"\n        GIT_TAG \"master\"\n        SOURCE_DIR \"cnmem/\"\n        CONFIGURE_COMMAND \"${CMAKE_COMMAND}\"\n        \"-H${CMAKE_BINARY_DIR}/cnmem\" \"-B.\"\n        \"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}\"\n        )\n    #ADD_SUBDIRECTORY(lib/cnmem)\n    #LIST(APPEND SINGA_LINKER_LIBS cnmem)\n    SET(global_cuda_objs \"\")\n    # add support cuda fp16\n    SET(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS} --gpu-architecture=compute_75\")\nENDIF()\n\n# TODO(wangwei) detect the ev lib\nIF (ENABLE_DIST)\n    LIST(APPEND SINGA_LINKER_LIBS ev)\nENDIF()\n\nIF (USE_MODULES)\n    include(ExternalProject)\n    #IF(USE_SHARED_LIBS)\n    #    ExternalProject_Add(protobuf\n    #        GIT_REPOSITORY \"https://github.com/google/protobuf.git\"\n    #        GIT_TAG \"2.7.0\"\n    #        SOURCE_DIR \"protobuf/\"\n    #        CONFIGURE_COMMAND \"${CMAKE_COMMAND}\"\n    #        \"-H${CMAKE_BINARY_DIR}/protobuf/cmake\" \"-B.\"\n    #        \"-Dprotobuf_BUILD_TESTS=OFF\" \"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}\"\n    #        \"-Dprotobuf_BUILD_SHARED_LIBS=ON\" \"-DCMAKE_C_FLAGS=-fPIC\"\n    #        \"-DCMAKE_CXX_FLAGS=-fPIC\"\n    #        BUILD_COMMAND \"${CMAKE_COMMAND}\" --build \".\"\n    #        )\n    #ELSE()\n    #ENDIF()\n    ExternalProject_Add(protobuf\n        DOWNLOAD_COMMAND \"wget\"\n        \"https://github.com/google/protobuf/archive/v3.3.0.tar.gz\"\n        \"-O\" \"protobuf-3.3.0.tar.gz\"\n        UPDATE_COMMAND \"tar\" \"zxvf\"\n        \"${CMAKE_BINARY_DIR}/protobuf-prefix/src/protobuf-3.3.0.tar.gz\" \"-C\" \"..\"\n        SOURCE_DIR \"protobuf-3.3.0/\"\n        BUILD_IN_SOURCE 1\n        CONFIGURE_COMMAND \"./autogen.sh\" COMMAND \"./configure\" \"--disable-shared\"\n        \"--prefix=${CMAKE_BINARY_DIR}/\" \"CXXFLAGS=-fPIC\"\n        INSTALL_COMMAND \"make\" \"install\"\n        )\n    SET(Protobuf_PROTOC_EXECUTABLE \"${CMAKE_BINARY_DIR}/bin/protoc\")\n    # message(STATUS \"${PROTOBUF_PROTOC_EXECUTABLE}\")\n\n    ExternalProject_Add(openblas\n        GIT_REPOSITORY \"https://github.com/xianyi/OpenBLAS.git\"\n        #GIT_TAG \"develop\"\n        #GIT_TAG \"f3419e6\"\n        GIT_TAG \"v0.2.20\"\n        SOURCE_DIR \"openblas/\"\n        BUILD_IN_SOURCE 1\n        CONFIGURE_COMMAND \"\"\n        BUILD_COMMAND \"make\" \"ONLY_CBLAS=1\"\n        INSTALL_COMMAND \"make\" \"PREFIX=${CMAKE_BINARY_DIR}/\" \"install\"\n        )\nENDIF()\n\nINCLUDE_DIRECTORIES(\"${CMAKE_BINARY_DIR}/include\")\nADD_SUBDIRECTORY(src)\n\nIF (ENABLE_TEST)\n  ADD_SUBDIRECTORY(test)\n  ADD_SUBDIRECTORY(examples)\nENDIF()\n\nIF (USE_PYTHON)\n    ADD_SUBDIRECTORY(python)\nENDIF()\n\nIF (USE_JAVA)\n    SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-strict-aliasing \")\n    ADD_SUBDIRECTORY(java)\nENDIF()\n\nINSTALL(DIRECTORY ${CMAKE_BINARY_DIR}/include DESTINATION ${CMAKE_INSTALL_PREFIX}/)\nINSTALL(DIRECTORY include/singa DESTINATION ${CMAKE_INSTALL_PREFIX}/include/)\nINSTALL(DIRECTORY ${CMAKE_BINARY_DIR}/lib DESTINATION ${CMAKE_INSTALL_PREFIX}/ PATTERN \"*libgtest.a\" EXCLUDE )\n\nINSTALL(CODE \"execute_process(COMMAND python setup.py install --prefix=${CMAKE_INSTALL_PREFIX} WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/python)\")\n\n# CPack\nIF(PACKAGE)\n\tIF(USE_PYTHON)\n\t\tINSTALL(FILES ${CMAKE_BINARY_DIR}/python/setup.py\n\t\t\tDESTINATION ${CMAKE_INSTALL_PREFIX}/lib/singa/python)\n\t\tINSTALL(FILES ${CMAKE_BINARY_DIR}/python/singa/singa_wrap.py\n\t\t\tDESTINATION ${CMAKE_INSTALL_PREFIX}/lib/singa/python/singa)\n\t\tINSTALL(FILES ${CMAKE_BINARY_DIR}/python/singa/_singa_wrap.so\n\t\t\tDESTINATION ${CMAKE_INSTALL_PREFIX}/lib/singa/python/singa)\n\t\tINSTALL(DIRECTORY ${PROJECT_SOURCE_DIR}/python\n\t\t\tDESTINATION ${CMAKE_INSTALL_PREFIX}/lib/singa)\n\t\tINSTALL(DIRECTORY ${CMAKE_BINARY_DIR}/python/singa/proto\n\t\t\tDESTINATION ${CMAKE_INSTALL_PREFIX}/lib/singa/python/singa)\n\tENDIF()\n\n\tIF (USE_MODULES)\n\t\tSET(CORE_DEPENDENCIES \"libgoogle-glog-dev, libstdc++6, libc6\")\n\tELSE()\n\t\tSET(CORE_DEPENDENCIES \"libgoogle-glog-dev, libprotobuf-dev, libopenblas-dev, libstdc++6, libc6\")\n\tENDIF()\n\n\tIF(USE_PYTHON3)\n\t\tSET(PYTHON_DEPENDENCIES \"${CORE_DEPENDENCIES}, python3, python3-dev, python3-pip, python3-numpy, python3-pillow, python3-matplotlib\")\n\tELSE()\n\t\tSET(PYTHON_DEPENDENCIES \"${CORE_DEPENDENCIES}, python-dev, libpython2.7, python-pip, python-numpy, python-pillow\")\n\tENDIF()\n\n\tSET(CPACK_GENERATOR \"DEB\")\n\tSET(CPACK_DEBIAN_PACKAGE_MAINTAINER \"Apache Incubator <dev@singa.incubator.apache.org>\")\n\tSET(CPACK_DEBIAN_PACKAGE_VERSION ${PACKAGE_VERSION})\n\tSET(CPACK_DEBIAN_PACKAGE_SECTION \"devel\")\n\tSET(CPACK_DEBIAN_PACKAGE_PRIORITY \"optional\")\n\tSET(CPACK_DEBIAN_PACKAGE_HOMEPAGE \"http://singa.apache.org\")\n\tSET(CPACK_DEBIAN_PACKAGE_DESCRIPTION \"SINGA is an Apache Incubating project for developing an open source deep learning library.\n\t The SINGA project was initiated by the DB System Group at National University of Singapore in 2014. It focused on distributed deep learning by partitioning the model and data onto nodes in a cluster and parallelize the training. The prototype was accepted by Apache Incubator in March 2015.\")\n\tIF (USE_PYTHON)\n\t\tSET(CPACK_DEBIAN_PACKAGE_DEPENDS ${PYTHON_DEPENDENCIES})\n\t\tSET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${PROJECT_SOURCE_DIR}/tool/debian/postinst\" )\n\t\tSET(CPACK_DEBIAN_PACKAGE_PREDEPENDS \"ca-certificates\")\n\t\tIF(USE_PYTHON3)\n\t\t\tSET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${PROJECT_SOURCE_DIR}/tool/debian/postinst\" )\n\t\t\tIF (USE_CUDA)\n\t\t\t\tSET(CPACK_DEBIAN_PACKAGE_NAME \"python3-singa-cuda\")\n\t\t\t\tSET(CPACK_PACKAGE_FILE_NAME \"python3-singa-cuda-${PACKAGE_VERSION}\")\n\t\t\tELSE()\n\t\t\t\tSET(CPACK_DEBIAN_PACKAGE_NAME \"python3-singa\")\n\t\t\t\tSET(CPACK_PACKAGE_FILE_NAME \"python3-singa-${PACKAGE_VERSION}\")\n\t\t\tENDIF()\n\t\tELSE()\n\t\t\tSET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${PROJECT_SOURCE_DIR}/tool/debian-python2/postinst\" )\n\t\t\tIF (USE_CUDA)\n\t\t\t\tSET(CPACK_DEBIAN_PACKAGE_NAME \"python-singa-cuda\")\n\t\t\t\tSET(CPACK_PACKAGE_FILE_NAME \"python-singa-cuda-${PACKAGE_VERSION}\")\n\t\t\tELSE()\n\t\t\t\tSET(CPACK_DEBIAN_PACKAGE_NAME \"python-singa\")\n\t\t\t\tSET(CPACK_PACKAGE_FILE_NAME \"python-singa-${PACKAGE_VERSION}\")\n\t\t\tENDIF()\n\t\tENDIF()\n\tELSE()\n\t\tSET(CPACK_DEBIAN_PACKAGE_NAME \"singa\")\n\t\tSET(CPACK_PACKAGE_FILE_NAME \"singa-${PACKAGE_VERSION}\")\n\t\tSET(CPACK_DEBIAN_PACKAGE_DEPENDS ${CORE_DEPENDENCIES})\n\tENDIF()\n\tINCLUDE(CPack)\nENDIF()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.9892578125,
          "content": "<!--\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n-->\n# How to contribute \n\n[Getting Started](./doc/en/develop/how-contribute.md)\n\n[How to contribute code](./doc/en/develop/contribute-code.md)\n\n[How to contribute documentation](./doc/README.md)\n\n\n"
        },
        {
          "name": "CPPLINT.cfg",
          "type": "blob",
          "size": 0.99609375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset noparent\n\nfilter=-runtime/threadsafe_fn\nfilter=-whitespace/braces\nfilter=-readability/todo\nfilter=-build/c++11\nfilter=-build/c++14\nfilter=-build/c++tr1\nfilter=-build/namespaces\nfilter=-build/header_guard\nfilter=-runtime/explicit\n"
        },
        {
          "name": "DISCLAIMER",
          "type": "blob",
          "size": 0.5322265625,
          "content": "Apache SINGA is an effort undergoing incubation at the Apache Software \nFoundation (ASF), sponsored by the Apache Incubator PMC. \n\nIncubation is required of all newly accepted projects until a further review \nindicates that the infrastructure, communications, and decision making process \nhave stabilized in a manner consistent with other successful ASF projects. \n\nWhile incubation status is not necessarily a reflection of the completeness \nor stability of the code, it does indicate that the project has yet to be \nfully endorsed by the ASF.\n"
        },
        {
          "name": "KEYS",
          "type": "blob",
          "size": 23.2275390625,
          "content": "pub   4096R/3059B92F 2015-09-10 [expires: 2019-09-10]\nuid       [ultimate] Anh Dinh <dinhtta@apache.org>\nsig 3        3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\nsig 3        4E638F6B 2015-09-11  Leo Dang <truongdx2002@yahoo.com>\nsig          B74101D8 2015-09-11  Dan Ghica <dan@ghica.net>\nsig 3        E6480A7E 2015-09-11  [User ID not found]\nsig 3        3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\nsig 3        3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\nuid       [ultimate] Anh Dinh <ug93tad@gmail.com>\nsig 3        3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\nsig 3        4E638F6B 2015-09-11  Leo Dang <truongdx2002@yahoo.com>\nsig          B74101D8 2015-09-11  Dan Ghica <dan@ghica.net>\nsig 3        E6480A7E 2015-09-11  [User ID not found]\nsig 3        3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\nsub   4096R/2AB66957 2015-09-10 [expires: 2019-09-10]\nsig          3059B92F 2015-09-10  Anh Dinh <dinhtta@apache.org>\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nComment: GPGTools - https://gpgtools.org\n\n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\n=Yx0U\n-----END PGP PUBLIC KEY BLOCK-----\npub   rsa3072 2019-05-05 [SC] [expires: 2021-05-04]\n      10BA3B0553317D66F134077E0187F247D3B4224A\nuid           [ultimate] Moaz Reyad <moaz@apache.org>\nsig 3        0187F247D3B4224A 2019-05-05  Moaz Reyad <moaz@apache.org>\nsig          82B137F934DAAD6D 2019-05-05  Angel-Ventura MENDO GOMEZ <angelventura@gmail.com>\nsig          EA6C3728EA91C4AF 2019-05-07  Felix Schumacher <fschumacher@apache.org>\nsig 3        FABEEA09897258E5 2019-05-08  Giovanni Bechis <giovanni@paclan.it>\nsig          D4D8267B628A1BD8 2019-05-06  Niklas Merz <niklasmerz@linux.com>\nsub   rsa3072 2019-05-05 [E] [expires: 2021-05-04]\nsig          0187F247D3B4224A 2019-05-05  Moaz Reyad <moaz@apache.org>\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\nvKsYH6AUn9efksWn\n=1Ofs\n-----END PGP PUBLIC KEY BLOCK-----\npub   rsa4096 2020-03-19 [SC]\n      04C5DF6C57964D5940D7BA2BE8F047DE6DABDD89\nuid           [ultimate] Wei Wang (Apache SINGA Release) <wangwei.cs@gmail.com>\nsub   rsa4096 2020-03-19 [E]\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBF5zCIoBEADloLJsDcxjXutVBoZq1WaeiJVggG6aPZMYTWLp63tQyKtMJwvs\n2TRNZC5UVhb4OPMmmlRWT5fOPrSon+MV4KO8jIpB5B/6khnailB/gjSmei63NLr5\nti4mFSFQu8vm+pEGvk6olM5Xjc6wa0Jukwmz2fScbIpAJapoXhiN89WKwiSXhWaR\nw3z0wAsN3l0ZfH1tgPA2AQSXlp3h2Ul6OjVbNHC+vRQFP9nPAN7mZZCvuo0F6kji\nhERWLIo4tV8ds5a2JUbYc0e+gs7SA3H4NAY/hJnJgZwOBoGb2ubha2o0y+PIuDW2\nxqO1EjTmg66zsFMJeUrlQ7zoPxtFcvp09/p7OZFlQSIprw2P46/2rMgdwT15G2U0\nELJfPCAXLCI/7dudns68j+7MBLbB2fSh88c78xPLihkT7ujZuGK0EEsHUUgIJyFM\nx1xM075fuauSeSt7/q4yYroSULQgCtUOE5PidmqoeNzzzHtv3yXDdqxfasuMFtUy\n2NpDSY96V+4iPifax7ENnvveUH3vp2pM3gqkjyh/dYR42k9DrcODz531Rf3WgtT9\ngpuBYiMLzjdhVz6lD1yM7QADl9gwRvF2zJ+jsL3MvpODSdJ9vwm5kzUpgx+Esbw9\nWmUvD8oTdweLCa0OKHT2AS/lVzW/8rPYEiuRhrKGgpmQ305viGJw9jdHiQARAQAB\ntDZXZWkgV2FuZyAoQXBhY2hlIFNJTkdBIFJlbGVhc2UpIDx3YW5nd2VpLmNzQGdt\nYWlsLmNvbT6JAk4EEwEKADgWIQQExd9sV5ZNWUDXuivo8EfebavdiQUCXnMIigIb\nAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRDo8EfebavdiWQMD/9YxpvrQKMH\nM75S7FhfX/4EAgFiXIQQa4Ymyy0I0/pK3KIUKJLnng49tUpOcFkiMLVbUtXRw8k1\njC1Ky+ramMzO2KZTa8TLPZmMI+iPEQMXyTAjgAx6ODj5to+AqlANVv0pATEJVTqb\nEiSHKTPATajH0z3goKP30AvseBodK81/D0uD+0AzloQbc7muZbE7LrJ3E5xPRUqS\nSNgodwjhKQPke7UeeGEWQOPzu/WqCJ9RpCzAhPrDOtKXgsdicRPDzuZY5M2d2T4H\nGLbTt7ShjK8RDSMs3FppkNqSZ2gdUnoMn/nqYYJe9M8IgXqc0rZOh45Naas8riPK\n9kZIK6baxLbG17vggVViwfhFYXMU1Aj4wXTO8Tna7gCl6TwYae6nWwvovI9WEGug\nvERRjt5saE5Y0KNw5nIaIwR6zQPmSj0tHx3WMo/OnFy33jww5JHUUce0p7/PLqxm\nRzkBB7SNE6kpt91FYYF5XqtQjP5m02WPWH31ed19WBq7bwh5pghA4vhFHGsmH8yY\nYSrG0ocXdhBJ4bz+iv5eNGYiJbY+N3DwIPQ1ZD05vA8zJXkwq2/TZ+g8+3iqoH5M\ntnJ1xSAcayVRHxrPCIyQ+GS0Pi7RGylbM3wLniyxo7t+l30wSaEkWZbjtjKTxbVZ\nCdeU4iOvvOO3mweTW7uqk68Anwz1+B+IdbkCDQRecwiKARAAx3AOwyzMhpYvtgNF\nRnLiTaooXEnyZpxp7DtfQ8kJtgq3vQJWxjBU6ZWztdLSK9hAi7pVtStlL1oEWCUb\nLKz7sfdoG/zGTD8EKATVX+A8mpomzy+RkR2Nx4DEyjSCPd3H0/Rr5P9hqcNbBYz0\n/7gzMhGo8WBzMNAKek7WS08CFk6JRrjvNs1vleg00s8paL+IoyP6Dc3NuApVf+//\n3GWviBH9cGzfqk1G5gz8paiaVNAZz8Y1iLrS8hUaLMX6kHYYoNTWS14gSa5RodKG\nbCNVDFP0hoUxALN2kIX/SyFAWGHcu7MpoR1MAPt1VnGh16MQf3gbRQCvoM30QdUM\n8h6yJob/aSSgMqBlMaOjwiHRKt5Fcwhe5QL3LqLjtzn5hfzs5xffSCsg8YTV6Y1D\nXXOSg89rxLLwZsoHSY+YjxZA1hwdSiYGiOaAxZDI/jFD/HFDSeSJekTi1Ohh9HxS\n2S42B91LhPGbJl2eZPOPB5fSF4vaWA+YxisBZhRyOIGEOvf66wClotDVaYs7ePuN\nc1bpiBZKZUo7kIHjHPTX3XjYhg+kHeZTfnCkEDLEabEQkb02/hxndNk0f1rpXTSC\nb+co9gBXMcgbQI1TvJDAAjRu2SYrwN5aKS/SXCylyWs/0fM7TH3VqyKbKdUhrt6x\ngB34naKm4Bxlv2YDtqVmW0VPI9UAEQEAAYkCNgQYAQoAIBYhBATF32xXlk1ZQNe6\nK+jwR95tq92JBQJecwiKAhsMAAoJEOjwR95tq92JIwIQALBHol5uKScxypvscxQW\nbXOiroOc0H58HDzxpV9XLCEHE919hRaU26PK7EpXOsnG851v4v5zXCtQeikULTqn\nOPX2a0k1IRkTShBS1W0SzCtV3U/qaBSHBaDmuXU0kK0ba8g4NWgcabeL5rYXJjnB\nhCJdUJoKP9iSFV2hAf0wJFUO5Nk0kmoMX0h3vKiF91ejuWJUXH5iCxTGIetn7bi0\nWRUOx76GHyjYh9rPgS0TAAS9TT2sopPvSgfgj/Q8hLLvF8PQ5XjbCWuJYpJkH1CO\nMF66iLs7ZfNLbRNXsee4ffDxzcbIprfHGQb4HbUZwvjhii40SPiK9PLu/Cqc6nIx\nxIFa614+smeJlgNuP895xmIxy92hF0CBdzdWFLfEJRmEbjWt6azzdTJw4zAAZ/hS\n2J7LqHx9vLHqEr2HkJNXuCdjJE+cVUVwiS4ISW0RHZCf7iAzpGKNkvhrDpwe75QJ\nVugJmm1TdV4I5Zv6eeELJ8ZXSd/xzx3pTSsmTBXiFMVd6rL6SwLJcShU8iZZ/kY2\n374F6C5FC3wPeQMeQYE6Bh0xlmR7io216Ex+z3GUaJltw9Njh/Xr1YNsHS9PC8ib\nEg758rpH8qTwgyn24MgQoCqnNnTKYtxp4Jv3U4hNqzUw3XHRw50Ql3UVyA1Ha/if\n76eUv1NgGzx/5IDkZAhl3Ryu\n=O2O4\n-----END PGP PUBLIC KEY BLOCK-----\npub   4096R/4B0F5DC4 2021-07-09\nuid                  Zhaojing Luo (CODE SIGNING KEY) <zhaojing@comp.nus.edu.sg>\nsig 3        4B0F5DC4 2021-07-09  Zhaojing Luo (CODE SIGNING KEY) <zhaojing@comp.nus.edu.sg>\nsig          6DABDD89 2021-07-19  Wei Wang (Apache SINGA Release) <wangwei.cs@gmail.com>\nsub   4096R/7BD140A7 2021-07-09\nsig          4B0F5DC4 2021-07-09  Zhaojing Luo (CODE SIGNING KEY) <zhaojing@comp.nus.edu.sg>\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\n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\n2gSOZ5OD0Wlb4pzQVsk=\n=V9SP\n-----END PGP PUBLIC KEY BLOCK-----\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 28.1630859375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015-2020  Apache Software Foundation\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n============================================================================\n\nThe SINGA project contains subcomponents and dependencies with separate \ncopyright notices and license terms. Your use of the source code for the \nthese subcomponents is subject to the terms and conditions of the following\nlicenses.\n\n============================================================================\nSINGA bundles the following under BSD 2-clause license:\ninclude/singa/utils/tinydir.h\n\nCopyright (c) 2013-2016, tinydir authors:\n- Cong Xu\n- Lautis Sun\n- Baudouin Feildel\n- Andargor <andargor@yahoo.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n===========================================================================\nSINGA bundles the following under BSD 2-clause license:\ninclude/singa/utils/cuda_utils.h\nsrc/core/tensor/distribution.cl\nsrc/model/layer/im2col.cl\nsrc/model/layer/pooling.cl\nsrc/proto/caffe.proto\ncmake/ThirdParty/FindViennaCL.cmake\n\nCOPYRIGHT\n\nAll contributions by the University of California:\nCopyright (c) 2014, 2015, The Regents of the University of California (Regents)\nAll rights reserved.\n\nAll other contributions:\nCopyright (c) 2014, 2015, the respective contributors\nAll rights reserved.\n\nCaffe uses a shared copyright model: each contributor holds copyright over\ntheir contributions to Caffe. The project versioning records all such\ncontribution and copyright details. If a contributor wants to further mark\ntheir specific copyright on a particular contribution, they should indicate\ntheir copyright solely in the commit message of the change when it is\ncommitted.\n\nLICENSE\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCONTRIBUTION AGREEMENT\n\nBy contributing to the BVLC/caffe repository through pull-request, comment,\nor otherwise, the contributor releases their content to the\nlicense and copyright terms herein.\n\n\n\n=====================================================================\nSINGA bundles the following under MIT license:\ncmake/ThirdParty/FindOpenCL.cmake\ninclude/half.hpp\n\nCopyright (c) 2010-2016 Institute for Microelectronics,\n                        Institute for Analysis and Scientific Computing, TU Wien.\nPortions of this software are copyright by UChicago Argonne, LLC.\nArgonne National Laboratory, with facilities in the state of Illinois,\nis owned by The United States Government, and operated by UChicago Argonne, LLC\nunder provision of a contract with the Department of Energy.\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n=====================================================================\nSINGA bundles the following under New BSD license: test/gtest/*\n\nCopyright 2008, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n=====================================================================\nSINGA bundles the following under New BSD license: tool/cpplint.py\n\ncpplint.py and its corresponding unit tests are Copyright (C) 2009 Google Inc.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=====================================================================\nSINGA bundles the following under New BSD license: src/api/numpy.i\n\nCopyright (c) 2005-2020, NumPy Developers.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n       copyright notice, this list of conditions and the following\n       disclaimer in the documentation and/or other materials provided\n       with the distribution.\n\n    * Neither the name of the NumPy Developers nor the names of any\n       contributors may be used to endorse or promote products derived\n       from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=====================================================================\nSINGA bundles the following dependency under Apache License v2.0:\noneDNN\n\nCopyright 2016-2019 Intel Corporation\n   Copyright 2018 YANDEX LLC\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   This distribution includes third party software (\"third party programs\").\n   This third party software, even if included with the distribution of\n   the Intel software, may be governed by separate license terms, including\n   without limitation, third party license terms, other Intel software license\n   terms, and open source software license terms. These separate license terms\n   govern your use of the third party programs as set forth in the\n   \"THIRD-PARTY-PROGRAMS\" file.\n\n=====================================================================\nSINGA bundles the following under New BSD license:\ncmake/Thirdparty/GetGitRevisionDescription.cmake\ncmake/Thirdparty/GetGitRevisionDescription.cmake.in\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n=======================================================================\nSINGA bundles the following file and dependency under MIT license:\nexamples/onnx/test_onnx_backend.py\nONNX\n\nMIT License\n\nCopyright (c) ONNX Project Contributors\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n===========================================================================\nSINGA bundles the following under Apache License Version 2.0:\nexamples/onnx/tokenization.py\nexamples/onnx/run_onnx_squad.py\nexamples/onnx/inputs.json\nexamples/onnx/gpt2/requirements.txt\nexamples/onnx/ro_bert_a/requirements.txt\n\n# Copyright 2018 The Google AI Language Team Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n===============================================================================\nSINGA bundles the following under new BSD 3-clause license:\ntool/docker/devel/centos6/cuda10/cuda.repo\n\nCopyright (c) 2019,2020 NVIDIA CORPORATION. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n * Neither the name of NVIDIA CORPORATION nor the names of its\n   contributors may be used to endorse or promote products derived\n   from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 1.025390625,
          "content": "Apache SINGA\nCopyright 2017 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nCodebase originally donated by National University of Singapore.\n\nThe following images or media files were contributed by \ndevelopers of Apache SINGA under Apache License, Version 2.0.\n\n./CITATION.cff\n./doc/_static/apache.png\n./doc/_static/awsmp.gif\n./doc/_static/docker.png\n./doc/_static/github.png\n./doc/_static/jupyter.png\n./doc/_static/singa-logo-updated.ai\n./doc/_static/singa-logo-v3.ai\n./doc/_static/singa-logo-v3.png\n./doc/_static/singa.png\n./doc/_static/images/benchmark.png\n./doc/_static/images/imda2019_1.png\n./doc/_static/images/imda2019_2.png\n./doc/_static/images/mlp-net.png\n./doc/_static/images/model-category.png\n./doc/_static/images/overview.png\n./doc/_static/images/partition_fc.png\n./doc/_static/images/rbm-rnn.png\n./doc/_static/images/sgd.png\n./doc/_static/images/singa.png\n./doc/_static/images/singav1-sw.png\n./examples/model_selection/Trails/documents/ai_db.001.jpeg"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5107421875,
          "content": "<!--\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with < this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n-->\n\n![Logo](doc/_static/singa.png)\n\n# Apache SINGA\n\n![Native Ubuntu build status](https://github.com/apache/singa/workflows/Native-Ubuntu/badge.svg)\n![Native Mac build status](https://github.com/apache/singa/workflows/Native-MacOS/badge.svg)\n![conda build status](https://github.com/apache/singa/workflows/conda/badge.svg)\n[![Documentation Status](https://readthedocs.org/projects/apache-singa/badge/?version=latest)](https://apache-singa.readthedocs.io/en/latest/?badge=latest)\n![License](http://img.shields.io/:license-Apache%202.0-blue.svg)\n[![Follow Apache SINGA on Twitter](https://img.shields.io/twitter/follow/apachesinga.svg?style=social&label=Follow)](https://twitter.com/ApacheSinga)\n[![Docker pulls](https://img.shields.io/docker/pulls/apache/singa.svg)](https://hub.docker.com/r/apache/singa/)\n\nDistributed deep learning system\n\n[http://singa.apache.org](http://singa.apache.org)\n\n## Quick Start\n\n* [Installation](http://singa.apache.org/docs/installation/)\n* [Examples](examples)\n\n## Issues\n\n* [JIRA tickets](https://issues.apache.org/jira/browse/SINGA)\n\n## Code Analysis:\n\n![LGTM C++ Grade](https://img.shields.io/lgtm/grade/cpp/github/apache/singa)\n![LGTM Python Grade](https://img.shields.io/lgtm/grade/python/github/apache/singa)\n[![codecov](https://codecov.io/gh/apache/singa/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/singa)\n\n[![Stargazers over time](https://starchart.cc/apache/singa.svg)](https://starchart.cc/apache/singa)\n\n## Mailing Lists\n\n* [Development Mailing List](mailto:dev-subscribe@singa.apache.org) ([Archive](http://mail-archives.apache.org/mod_mbox/singa-dev/))\n* [Commits Mailing List](mailto:commits-subscribe@singa.apache.org) ([Archive](http://mail-archives.apache.org/mod_mbox/singa-commits/))\n"
        },
        {
          "name": "RELEASE_NOTES",
          "type": "blob",
          "size": 33.90234375,
          "content": "Release Notes - SINGA - Version singa-4.3.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * Add the implementation for the Transformer example.\n\n  * Enhance examples\n    * Update the readme file for the dynamic model slicing example.\n    * Update the HFL example by setting the maximum number of epochs.\n    * Add the multiprocess training implementation for the cnn ms example.\n    * Add the sparsification version of the model for the cnn ms example.\n  \n  * Extend the matrix multiplication operator to more dimensions.\n\n  * Update the data types and tensor operations for model training.\n\n  * Add the implementation for the new sum error loss.\n\n  * Update the website\n    * Add the news for the SIGMOD Systems Award.\n\n  * Fix bugs\n    * Fix the Github Actions for online code testing.\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-4.2.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * Add support for deep learning models running on top of PolarDB\n    * Implement efficient model selection for a given dataset stored in the database.\n    * Add support for dynamic model creation.\n    * Add support for flexible setting of model training configurations.\n    * Optimize the in-database analytics modules for scalability, efficiency and memory consumption.\n  \n  * New example\n    * Add a horizontal federated learning example using the Bank dataset.\n\n  * Enhance examples\n    * Add sample training data for testing the model selection application.\n  \n  * Update the website\n    * Update the star button in the main page.\n    * Refine the display of star statistics.\n\n  * Update the python versions for wheel files\n\n  * Fix bugs\n    * Fix the rat check files.\n    * Update the license files.\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-4.1.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * New examples\n    * Add an example for malaria detection using cell images.\n    * Add an example for structured data learning.\n\n  * Add support for models running on top of RDBMS\n    * Add support for in-database model definition and selection in RDBMS.\n    * Implement training-free model evaluation metrics for in-database model selection.\n    * Implement a coordinator to balance between training-free and training-based model evaluations \n      for in-database model selection.\n    \n  * Enhance distributed training\n    * Add implementations for the sum error loss.\n    * Improve the optimizer to return model gradients.\n    * Improve the iterative checking for tensors and strings in the ModelMeta class.\n    \n  * Enhance example code\n    * Add support for flexible setting of training configurations for models, e.g., learning rates, \n      weight decay, momentum, etc.\n    * Add implementations for dynamic models with varying layer sizes.\n\n  * Update the website\n    * Add illustrations for database integration.\n    * Update users of Apache SINGA.\n\n  * Fix bugs\n    * Update the NVIDIA_GPGKEY in the Dockerfile for building wheel files.\n    * Update the versions of dependencies in the wheel file.\n    * Fix the collections module in the model.py file.\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-4.0.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * Enhance distributed training\n    * Add support for configuration of number of GPUs to be used.\n    * Increase max epoch for better convergence.\n    * Print intermediate mini-batch information.\n    * Add support for switching between CPU and GPU devices.\n\n  * Enhance example code\n    * Update the args of normalize forward function in the transforms of the BloodMnist example.\n    * Update the xceptionnet in the cnn example.\n    * Add arguments for weight decay, momentum and learning rates in the cnn example.\n    * Add training scripts for more datasets and model types in the cnn example.\n    * Add resnet dist version for the large dataset cnn example.\n    * Add cifar 10 multi process for the large dataset cnn example.\n    * Add sparsification implementation for mnist in the large dataset cnn example.\n    * Update the cifar datasets downloading to local directories.\n    * Extend the cifar datasets load function for customized directorires.\n\n  * Enhance the webpage\n    * Update online documentation for distributed training.\n\n  * Promote code quality\n    * Update inline comments for prepreocessing and data loading\n\n  * Update the PIL image module\n\n  * Update the runtime Dockerfile\n\n  * Update the conda files\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-3.3.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * New examples:\n    * Add one CNN example for the BloodMnist dataset, a sub set of MedMNIST.\n    * Add one example for the medical image analysis.\n\n  * Enhance distributed training\n    * Add key information printing, e.g., throughput and communication time, for distributed training.\n    * Optimize printing and logging modules for faster distributed training.\n\n  * Enhance example code\n    * Add more datasets and model implementations for the cifar_distributed_cnn example.\n    * Update the running script for the cifar_distributed_cnn example to include more models.\n    * Update the dataset path for the largedataset_cnn example for more flexibility.\n    * Add more model implementations for the largedataset_cnn example.\n\n  * Enhance the webpage\n    * Reconstruct the singa webpage to include project features.\n    * Update the Git web site by deploying it via .asf.yaml.\n    * Update the Chinese and Vietnamese documentations.\n\n  * Debug and add assertions for input tensor data types in the opt.py.\n\n  * Change pointer type to void for generalizing data types.\n\n  * Fix bugs\n    * Fix the python test error due to operations not implemented for some data types.\n    * Fix the model of pad from bytes to str.\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-3.2.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * New examples:\n    * Add one cifar-10 distributed CNN example for benchmarking the performance of the distributed\n      training.\n    * Add one large CNN example for training with a dataset from the filesysetm.\n\n  * Enhance distributed training\n    * Improve the data augmentation module for faster distributed training.\n    * Add device synchronization for more accurate time measurements during the distributed training.\n\n  * Add Support for half-precision floating-point format (fp16) in deep learning models and \n    computational kernels.\n\n  * Update new onnx APIs and fix onnx examples accordingly, namely, DenseNet121, ShuffleNetv1, \n    ShuffleNetv2, SqueezeNet, VGG19.\n\n  * Add a new method to resize images by given width and height.\n\n  * Use docusaurus versioning to simplify the process of generating the project homepage.\n\n  * Promote code quality\n    * Unify the formats of docstrings that describe the contents and usage of the module.\n    * Unify the parameters of command-line arguments.\n\n  * Fix bugs\n    * Fix the CI build error by downloading the tbb binaries.\n    * Add disabling graph option for accessing parameter or gradient tensors during distributed  \n      training.\n    * Solve the warnings of deprecated functions in the distributed optimizer module.\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-3.1.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * Tensor core:\n    * Support tensor transformation (reshape, transpose) for tensors up to 6 dimensions.\n    * Implement traverse_unary_transform in Cuda backend, which is similar to CPP backend one.\n\n  * Add new tensor operators into the autograd module, including\n    CosSim, DepthToSpace, Embedding, Erf, Expand, Floor, Pad, Round, Rounde, SpaceToDepth, UpSample, Where. \n    The corresponding ONNX operators are thus supported by SINGA.\n\n  * Add Embedding and Gemm into the layer module.\n\n  * Add SGD operators to opt module, including RMSProp, Adam, and AdaGrad.\n\n  * Extend the sonnx module to support \n    DenseNet121, ShuffleNetv1, ShuffleNetv2, SqueezeNet, VGG19, GPT2, and RoBERTa,\n\n  * Reconstruct sonnx to \n    * Support creating operators from both layer and autograd.\n    * Re-write SingaRep to provide a more powerful intermediate representation of SINGA.\n    * Add a SONNXModel which implements from Model to provide uniform API and features.\n\n  * Add one example that trains a BiLSTM model over the InsuranceQA data.\n\n  * Replace the Travis CI with Github workflow. Add quality and coverage management.\n\n  * Add compiling and packaging scripts to creat wheel packages for distribution.\n\n  * Fix bugs\n    * Fix IMDB LSTM model example training script.\n    * Fix Tensor operation Mult on Broadcasting use cases.\n    * Gaussian function on Tensor now can run on Tensor with odd size.\n    * Updated a testing helper function gradients() in autograd to lookup param gradient by param python object id for testing purpose.\n\n\n----------------------------------------------------------------------------------------------\n\nRelease Notes - SINGA - Version singa-3.0.0\n\nSINGA is a distributed deep learning library.\n\nThis release includes following changes:\n\n  * Code quality has been promoted by introducing linting check in CI and auto code formatter. \n    For linting, the tools, `cpplint` and `pylint`, are used and configured to comply \n    [google coding styles](http://google.github.io/styleguide/)  details in `tool/linting/`. \n    Similarly, formatting tools, `clang-format` and `yapf` configured with google coding styles, \n    are the recommended one for developers to clean code before submitting changes, \n    details in `tool/code-format/`. [LGTM](https://lgtm.com) is enabled on Github for \n    code quality check; License check is also enabled.\n\n * New Tensor APIs are added for naming consistency, and feature enhancement: \n   - size(), mem_size(), get_value(), to_proto(), l1(), l2(): added for the sake of naming consistency\n   - AsType(): convert data type between `float` and `int`\n   - ceil(): perform element-wise ceiling of the input\n   - concat(): concatenate two tensor\n   - index selector: e.g. tensor1[:,:,1:,1:]\n   - softmax(in, axis): allow to perform softmax on a axis on a multi-dimensional tensor\n\n  * 14 new operators are added into the autograd module: Gemm, GlobalAveragePool, ConstantOfShape, \n    Dropout, ReduceSum, ReduceMean, Slice, Ceil, Split, Gather, Tile, NonZero, Cast, OneHot. \n    Their unit tests are added as well.\n\n  * 14 new operators are added to sonnx module for both backend and frontend: \n    [Gemm](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Gemm), \n    [GlobalAveragePool](https://github.com/onnx/onnx/blob/master/docs/Operators.md#GlobalAveragePool), \n    [ConstantOfShape](https://github.com/onnx/onnx/blob/master/docs/Operators.md#ConstantOfShape), \n    [Dropout](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Dropout), \n    [ReduceSum](https://github.com/onnx/onnx/blob/master/docs/Operators.md#ReduceSum), \n    [ReduceMean](https://github.com/onnx/onnx/blob/master/docs/Operators.md#ReduceMean), \n    [Slice](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Slice), \n    [Ceil](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Ceil), \n    [Split](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Split), \n    [Gather](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Gather), \n    [Tile](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Tile), \n    [NonZero](https://github.com/onnx/onnx/blob/master/docs/Operators.md#NonZero), \n    [Cast](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Cast), \n    [OneHot](https://github.com/onnx/onnx/blob/master/docs/Operators.md#OneHot). \n    Their tests are added as well.\n\n  * Some ONNX models are imported into SINGA, including \n    [Bert-squad](https://github.com/onnx/models/tree/master/text/machine_comprehension/bert-squad), \n    [Arcface](https://github.com/onnx/models/tree/master/vision/body_analysis/arcface), \n    [FER+ Emotion](https://github.com/onnx/models/tree/master/vision/body_analysis/emotion_ferplus), \n    [MobileNet](https://github.com/onnx/models/tree/master/vision/classification/mobilenet), \n    [ResNet18](https://github.com/onnx/models/tree/master/vision/classification/resnet), \n    [Tiny Yolov2](https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/tiny_yolov2), \n    [Vgg16](https://github.com/onnx/models/tree/master/vision/classification/vgg), and Mnist.\n\n  * Some operators now support [multidirectional broadcasting](https://github.com/onnx/onnx/blob/master/docs/Broadcasting.md#multidirectional-broadcasting), \n    including Add, Sub, Mul, Div, Pow, PRelu, Gemm \n\n  * [Distributed training with communication optimization]. [DistOpt](./python/singa/opt.py) \n    has implemented multiple optimization techniques, including gradient sparsification, \n    chunk transmission, and gradient compression.\n\n  * Computational graph construction at the CPP level. The operations submitted to the Device are buffered.\n    After analyzing the dependency, the computational graph is created, which is further analyzed for\n    speed and memory optimization. To enable this feature, use the [Module API](./python/singa/module.py).\n\n  * New website based on Docusaurus. The documentation files are moved to a separate repo [singa-doc](https://github.com/apache/singa-doc).\n    The static website files are stored at [singa-site](https://github.com/apache/singa-site).\n\n  * DNNL([Deep Neural Network Library](https://github.com/intel/mkl-dnn)), powered by Intel, \n    is integrated into `model/operations/[batchnorm|pooling|convolution]`, \n    the changes is opaque to the end users. The current version is dnnl v1.1 \n    which replaced previous integration of mkl-dnn v0.18. The framework could \n    boost the performance of dl operations when executing on CPU. The dnnl dependency \n    is installed through conda.\n\n  * Some Tensor APIs are marked as deprecated which could be replaced by broadcast, \n    and it can support better on multi-dimensional operations. These APIs are\n    add_column(), add_row(), div_column(), div_row(), mult_column(), mult_row()\n\n  * Conv and Pooling are enhanced to support fine-grained padding like (2,3,2,3), \n    and [SAME_UPPER, SAME_LOWER](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv) \n    pad mode and shape checking.\n\n  * Reconstruct soonx, \n    - Support two types of weight value (Initializer and Constant Node); \n    - For some operators (BatchNorm, Reshape, Clip, Slice, Gather, Tile, OneHot), \n      move some inputs to its attributes; \n    - Define and implement the type conversion map. \n\n------------------------------------------------------------------------\nRelease Notes - SINGA - Version singa-incubating-2.0.0\n\nSINGA is a general distributed deep learning platform for training big deep\nlearning models over large datasets.\n\nThis release includes following features:\n\n  * Core components\n    * [SINGA-434] Support tensor broadcasting\n    * [SINGA-370] Improvement to tensor reshape and various misc. changes related to SINGA-341 and 351\n\n  * Model components\n    * [SINGA-333] Add support for Open Neural Network Exchange (ONNX) format\n    * [SINGA-385] Add new python module for optimizers\n    * [SINGA-394] Improve the CPP operations via Intel MKL DNN lib\n    * [SINGA-425] Add 3 operators , Abs(), Exp() and leakyrelu(), for Autograd \n    * [SINGA-410] Add two function, set_params() and get_params(), for Autograd Layer class\n    * [SINGA-383] Add Separable Convolution for autograd\n    * [SINGA-388] Develop some RNN layers by calling tiny operations like matmul, addbias.\n    * [SINGA-382] Implement concat operation for autograd    \n    * [SINGA-378] Implement maxpooling operation and its related functions for autograd\n    * [SINGA-379] Implement batchnorm operation and its related functions for autograd\n\n  * Utility functions and CI\n    * [SINGA-432] Update depdent lib versions in conda-build config\n    * [SINGA-429] Update docker images for latest cuda and cudnn\n    * [SINGA-428] Move Docker images under Apache user name\n\n  * Documentation and usability\n    * [SINGA-395] Add documentation for autograd APIs\n    * [SINGA-344] Add a GAN example\n    * [SINGA-390] Update installation.md\n    * [SINGA-384] Implement ResNet using autograd API\n    * [SINGA-352] Complete SINGA documentation in Chinese version\n      \n  * Bugs fixed\n    * [SINGA-431] Unit Test failed - Tensor Transpose\n    * [SINGA-422] ModuleNotFoundError: No module named \"_singa_wrap\"\n    * [SINGA-418] Unsupportive type 'long' in python3.  \n    * [SINGA-409] Basic `singa-cpu` import throws error\n    * [SINGA-408] Unsupportive function definition in python3\n    * [SINGA-380] Fix bugs from Reshape  \n\n---------------------------------------------------------------\nRelease Notes - SINGA - Version singa-incubating-1.2.0\n\nSINGA is a general distributed deep learning platform for training big deep\nlearning models over large datasets.\n\nThis release includes following features:\n\n  * Core components\n      * [SINGA-290] Upgrade to Python 3\n      * [SINGA-341] Added stride functionality to tensors for CPP\n      * [SINGA-347] Create a function that supports einsum\n      * [SINGA-351] Added stride support and cudnn codes to cuda\n\n  * Model components\n      * [SINGA-300] Add residual networks for imagenet classification\n      * [SINGA-312] Rename layer parameters\n      * [SINGA-313] Add L2 norm layer\n      * [SINGA-315] Reduce memory footprint by Python generator for parameter\n      * [SINGA-316] Add SigmoidCrossEntropy\n      * [SINGA-324] Extend RNN layer to accept variant seq length across batches\n      * [SINGA-326] Add Inception V4 for ImageNet classification\n      * [SINGA-328] Add VGG models for ImageNet classification\n      * [SINGA-329] Support layer freezing during training (fine-tuning)\n      * [SINGA-346] Update cudnn from V5 to V7\n      * [SINGA-349] Create layer operations for autograd\n      * [SINGA-363] Add DenseNet for Imagenet classification\n\n  * Utility functions and CI\n      * [SINGA-274] Improve Debian packaging with CPack\n      * [SINGA-303] Create conda packages\n      * [SINGA-337] Add test cases for code\n      * [SINGA-348] Support autograd MLP Example\n      * [SINGA-345] Update Jenkins and fix bugs in compliation\n      * [SINGA-354] Update travis scripts to use conda-build for all platforms\n      * [SINGA-358] Consolidated RUN steps and cleaned caches in Docker containers\n      * [SINGA-359] Create alias for conda packages\n\n  * Documentation and usability\n      * [SINGA-223] Fix side navigation menu in the website\n      * [SINGA-294] Add instructions to run CUDA unit tests on Windows\n      * [SINGA-305] Add jupyter notebooks for SINGA V1 tutorial\n      * [SINGA-319] Fix link errors on the index page\n      * [SINGA-352] Complete SINGA documentation in Chinese version\n      * [SINGA-361] Add git instructions for contributors and committers\n\n  * Bugs fixed\n      * [SINGA-330] fix openblas building on i7 7700k\n      * [SINGA-331] Fix the bug of tensor division operation\n      * [SINGA-350] Error from python3 test\n      * [SINGA-356] Error using travis tool to build SINGA on mac os\n      * [SINGA-363] Fix some bugs in imagenet examples\n      * [SINGA-368] Fix the bug in Cifar10 examples\n      * [SINGA-369] the errors of examples in testing\n\n---------------------------------------------------------------\nRelease Notes - SINGA - Version singa-incubating-1.1.0\n\nSINGA is a general distributed deep learning platform for training big deep learning models over large datasets.\n\nThis release includes following features:\n\n  * Core components\n      * [SINGA-296] Add sign and to_host function for pysinga tensor module\n\n  * Model components\n      * [SINGA-254] Implement Adam for V1\n      * [SINGA-264] Extend the FeedForwardNet to accept multiple inputs\n      * [SINGA-267] Add spatial mode in batch normalization layer\n      * [SINGA-271] Add Concat and Slice layers\n      * [SINGA-275] Add Cross Entropy Loss for multiple labels\n      * [SINGA-278] Convert trained caffe parameters to singa\n      * [SINGA-287] Add memory size check for cudnn convolution\n\n  * Utility functions and CI\n      * [SINGA-242] Compile all source files into a single library.\n      * [SINGA-244] Separating swig interface and python binding files\n      * [SINGA-246] Imgtool for image augmentation\n      * [SINGA-247] Add windows support for singa\n      * [SINGA-251] Implement image loader for pysinga\n      * [SINGA-252] Use the snapshot methods to dump and load models for pysinga\n      * [SINGA-255] Compile mandatory depedent libaries together with SINGA code\n      * [SINGA-259] Add maven pom file for building java classes\n      * [SINGA-261] Add version ID into the checkpoint files\n      * [SINGA-266] Add Rafiki python toolkits\n      * [SINGA-273] Improve license and contributions\n      * [SINGA-284] Add python unittest into Jenkins and link static libs into whl file\n      * [SINGA-280] Jenkins CI support\n      * [SINGA-288] Publish wheel of PySINGA generated by Jenkins to public servers\n\n  * Documentation and usability\n      * [SINGA-263] Create Amazon Machine Image\n      * [SINGA-268] Add IPython notebooks to the documentation\n      * [SINGA-276] Create docker images\n      * [SINGA-289] Update SINGA website automatically using Jenkins\n      * [SINGA-295] Add an example of image classification using GoogleNet\n\n  * Bugs fixed\n      * [SINGA-245] float as the first operand can not multiply with a tensor object\n      * [SINGA-293] Bug from compiling PySINGA on Mac OS X with multiple version of Python\n\n---------------------------------------------------------------\nRelease Notes - SINGA - Version singa-incubating-1.0.0\n\nSINGA is a general distributed deep learning platform for training big deep learning models over large datasets.\n\nThis release includes following features:\n\n  * Core abstractions including Tensor and Device\n      * [SINGA-207]  Update Tensor functions for matrices\n      * [SINGA-205]  Enable slice and concatenate operations for Tensor objects\n      * [SINGA-197]  Add CNMem as a submodule in lib/\n      * [SINGA-196]  Rename class Blob to Block\n      * [SINGA-194]  Add a Platform singleton\n      * [SINGA-175]  Add memory management APIs and implement a subclass using CNMeM\n      * [SINGA-173]  OpenCL Implementation\n      * [SINGA-171]  Create CppDevice and CudaDevice\n      * [SINGA-168]  Implement Cpp Math functions APIs\n      * [SINGA-162]  Overview of features for V1.x\n      * [SINGA-165]  Add cross-platform timer API to singa\n      * [SINGA-167]  Add Tensor Math function APIs\n      * [SINGA-166]  light built-in logging for making glog optional\n      * [SINGA-164]  Add the base Tensor class\n\n\n  * IO components for file read/write, network and data pre-processing\n      * [SINGA-233]  New communication interface\n      * [SINGA-215]  Implement Image Transformation for Image Pre-processing\n      * [SINGA-214]  Add LMDBReader and LMDBWriter for LMDB\n      * [SINGA-213]  Implement Encoder and Decoder for CSV\n      * [SINGA-211]  Add TextFileReader and TextFileWriter for CSV files\n      * [SINGA-210]  Enable checkpoint and resume for v1.0\n      * [SINGA-208]  Add DataIter base class and a simple implementation\n      * [SINGA-203]  Add OpenCV detection for cmake compilation\n      * [SINGA-202]  Add reader and writer for binary file\n      * [SINGA-200]  Implement Encoder and Decoder for data pre-processing\n\n\n\n  * Module components including layer classes, training algorithms and Python binding\n      * [SINGA-235]  Unify the engines for cudnn and singa layers\n      * [SINGA-230]  OpenCL Convolution layer and Pooling layer\n      * [SINGA-222]  Fixed bugs in IO\n      * [SINGA-218]  Implementation for RNN CUDNN version\n      * [SINGA-204]  Support the training of feed-forward neural nets\n      * [SINGA-199]  Implement Python classes for SGD optimizers\n      * [SINGA-198]  Change Layer::Setup API to include input Tensor shapes\n      * [SINGA-193]  Add Python layers\n      * [SINGA-192]  Implement optimization algorithms for SINGA v1 (nesterove, adagrad, rmsprop)\n      * [SINGA-191]  Add \"autotune\" for CudnnConvolution Layer\n      * [SINGA-190]  Add prelu layer and flatten layer\n      * [SINGA-189]  Generate python outputs of proto files\n      * [SINGA-188]  Add Dense layer\n      * [SINGA-187]  Add popular parameter initialization methods\n      * [SINGA-186]  Create Python Tensor class\n      * [SINGA-184]  Add Cross Entropy loss computation\n      * [SINGA-183]  Add the base classes for optimizer, constraint and regularizer\n      * [SINGA-180]  Add Activation layer and Softmax layer\n      * [SINGA-178]  Add Convolution layer and Pooling layer\n      * [SINGA-176]  Add loss and metric base classes\n      * [SINGA-174]  Add Batch Normalization layer and Local Response Nomalization layer.\n      * [SINGA-170]  Add Dropout layer and CudnnDropout layer.\n      * [SINGA-169]  Add base Layer class for V1.0\n\n\n  * Examples\n      * [SINGA-232]  Alexnet on Imagenet\n      * [SINGA-231]  Batchnormlized VGG model for cifar-10\n      * [SINGA-228]  Add Cpp Version of Convolution and Pooling layer\n      * [SINGA-227]  Add Split and Merge Layer and add ResNet Implementation\n\n  * Documentation\n      * [SINGA-239]  Transfer documentation files of v0.3.0 to github\n      * [SINGA-238]  RBM on mnist\n      * [SINGA-225]  Documentation for installation and Cifar10 example\n      * [SINGA-223]  Use Sphinx to create the website\n\n  * Tools for compilation and some utility code\n      * [SINGA-229]  Complete install targets\n      * [SINGA-221]  Support for Travis-CI\n      * [SINGA-217]  build python package with setup.py\n      * [SINGA-216]  add jenkins for CI support\n      * [SINGA-212]  Disable the compilation of libcnmem if USE_CUDA is OFF\n      * [SINGA-195]  Channel for sending training statistics\n      * [SINGA-185]  Add CBLAS and GLOG detection for singav1\n      * [SINGA-181]  Add NVCC supporting for .cu files\n      * [SINGA-177]  Add fully cmake supporting for the compilation of singa_v1\n      * [SINGA-172]  Add CMake supporting for Cuda and Cudnn libs\n\n----------------------------------------------------------\nRelease Notes - SINGA - Version singa-incubating-0.3.0\n\nSINGA is a general distributed deep learning platform for training big deep learning models over large datasets.\n\nThis release includes following features:\n\n  * GPU Support\n    * [SINGA-131] Implement and optimize hybrid training using both CPU and GPU\n    * [SINGA-136] Support cuDNN v4\n    * [SINGA-134] Extend SINGA to run over a GPU cluster\n    * [SINGA-157] Change the priority of cudnn library and install libsingagpu.so\n\n  * Remove Dependencies\n    * [SINGA-156] Remove the dependency on ZMQ for single process training\n    * [SINGA-155] Remove zookeeper for single-process training\n\n  * Python Binding\n    * [SINGA-126] Python Binding for Interactive Training\n\n  * Other Improvements\n    * [SINGA-80] New Blob Level and Address Level Math Operation Interface\n    * [SINGA-130] Data Prefetching\n    * [SINGA-145] New SGD based optimization Updaters: AdaDelta, Adam, AdamMax\n\n  * Bugs Fixed\n    * [SINGA-148] Race condition between Worker threads and Driver\n    * [SINGA-150] Mesos Docker container failed\n    * [SIGNA-141] Undesired Hash collision when locating process id to worker…\n    * [SINGA-149] Docker build fail\n    * [SINGA-143] The compilation cannot detect libsingagpu.so file\n\n\n-----------------------------------------\nRelease Notes - SINGA - Version singa-incubating-0.2.0\n\nSINGA is a general distributed deep learning platform for training big deep learning models over large datasets. It is\ndesigned with an intuitive programming model based on the layer abstraction. SINGA supports a wide variety of popular\ndeep learning models.\n\nThis release includes following features:\n\n  * Programming model\n    * [SINGA-80] New Blob Level and Address Level Math Operation Interface\n    * [SINGA-82] Refactor input layers using data store abstraction\n    * [SINGA-87] Replace exclude field to include field for layer configuration\n    * [SINGA-110] Add Layer member datavec_ and gradvec_\n    * [SINGA-120] Implemented GRU and BPTT (BPTTWorker)\n\n  * Neuralnet layers\n    * [SINGA-91] Add SoftmaxLayer and ArgSortLayer\n    * [SINGA-106] Add dummy layer for test purpose\n    * [SINGA-120] Implemented GRU and BPTT (GRULayer and OneHotLayer)\n\n  * GPU training support\n    * [SINGA-100] Implement layers using CUDNN for GPU training\n    * [SINGA-104] Add Context Class\n    * [SINGA-105] Update GUN make files for compiling cuda related code\n    * [SINGA-98] Add Support for AlexNet ImageNet Classification Model\n\n\n  * Model/Hybrid partition\n    * [SINGA-109] Refine bridge layers\n    * [SINGA-111] Add slice, concate and split layers\n    * [SINGA-113] Model/Hybrid Partition Support\n\n  * Python binding\n    * [SINGA-108] Add Python wrapper to singa\n\n  * Predict-only mode\n    * [SINGA-85] Add functions for extracting features and test new data\n\n  * Integrate with third-party tools\n    * [SINGA-11] Start SINGA on Apache Mesos\n    * [SINGA-78] Use Doxygen to generate documentation\n    * [SINGA-89] Add Docker support\n\n  * Unit test\n    * [SINGA-95] Add make test after building\n\n  * Other improvment\n    * [SINGA-84] Header Files Rearrange\n    * [SINGA-93] Remove the asterisk in the log tcp://169.254.12.152:*:49152\n    * [SINGA-94] Move call to google::InitGoogleLogging() from Driver::Init() to main()\n    * [SINGA-96] Add Momentum to Cifar10 Example\n    * [SINGA-101] Add ll (ls -l) command in .bashrc file when using docker\n    * [SINGA-114] Remove short logs in tmp directory\n    * [SINGA-115] Print layer debug information in the neural net graph file\n    * [SINGA-118] Make protobuf LayerType field id easy to assign\n    * [SIGNA-97] Add HDFS Store\n\n  * Bugs fixed\n    * [SINGA-85] Fix compilation errors in examples\n    * [SINGA-90] Miscellaneous trivial bug fixes\n    * [SINGA-107] Error from loading pre-trained params for training stacked RBMs\n    * [SINGA-116] Fix a bug in InnerProductLayer caused by weight matrix sharing\n\n-----------------------------------------\n\nFeatures included in singa-incubating-0.1.0:\n\n  * Job management\n    * [SINGA-3] Use Zookeeper to check stopping (finish) time of the system\n    * [SINGA-16] Runtime Process id Management\n    * [SINGA-25] Setup glog output path\n    * [SINGA-26] Run distributed training in a single command\n    * [SINGA-30] Enhance easy-to-use feature and support concurrent jobs\n    * [SINGA-33] Automatically launch a number of processes in the cluster\n    * [SINGA-34] Support external zookeeper service\n    * [SINGA-38] Support concurrent jobs\n    * [SINGA-39] Avoid ssh in scripts for single node environment\n    * [SINGA-43] Remove Job-related output from workspace\n    * [SINGA-56] No automatic launching of zookeeper service\n    * [SINGA-73] Refine the selection of available hosts from host list\n\n  * Installation with GNU Auto tool\n    * [SINGA-4] Refine thirdparty-dependency installation\n    * [SINGA-13] Separate intermediate files of compilation from source files\n    * [SINGA-17] Add root permission within thirdparty/install.\n    * [SINGA-27] Generate python modules for proto objects\n    * [SINGA-53] Add lmdb compiling options\n    * [SINGA-62] Remove building scrips and auxiliary files\n    * [SINGA-67] Add singatest into build targets\n\n  * Distributed training\n    * [SINGA-7] Implement shared memory Hogwild algorithm\n    * [SINGA-8] Implement distributed Hogwild\n    * [SINGA-19] Slice large Param objects for load-balance\n    * [SINGA-29] Update NeuralNet class to enable layer partition type customization\n    * [SINGA-24] Implement Downpour training framework\n    * [SINGA-32] Implement AllReduce training framework\n    * [SINGA-57] Improve Distributed Hogwild\n\n  * Training algorithms for different model categories\n    * [SINGA-9] Add Support for Restricted Boltzman Machine (RBM) model\n    * [SINGA-10] Add Support for Recurrent Neural Networks (RNN)\n\n  * Checkpoint and restore\n    * [SINGA-12] Support Checkpoint and Restore\n\n  * Unit test\n    * [SINGA-64] Add the test module for utils/common\n\n  * Programming model\n    * [SINGA-36] Refactor job configuration, driver program and scripts\n    * [SINGA-37] Enable users to set parameter sharing in model configuration\n    * [SINGA-54] Refactor job configuration to move fields in ModelProto out\n    * [SINGA-55] Refactor main.cc and singa.h\n    * [SINGA-61] Support user defined classes\n    * [SINGA-65] Add an example of writing user-defined layers\n\n  * Other features\n    * [SINGA-6] Implement thread-safe singleton\n    * [SINGA-18] Update API for displaying performance metric\n    * [SINGA-77] Integrate with Apache RAT\n\nSome bugs are fixed during the development of this release\n  * [SINGA-2] Check failed: zsock_connect\n  * [SINGA-5] Server early terminate when zookeeper singa folder is not initially empty\n  * [SINGA-15] Fixg a bug from ConnectStub function which gets stuck for connecting layer_dealer_\n  * [SINGA-22] Cannot find openblas library when it is installed in default path\n  * [SINGA-23] Libtool version mismatch error.\n  * [SINGA-28] Fix a bug from topology sort of Graph\n  * [SINGA-42] Issue when loading checkpoints\n  * [SINGA-44] A bug when reseting metric values\n  * [SINGA-46] Fix a bug in updater.cc to scale the gradients\n  * [SINGA-47] Fix a bug in data layers that leads to out-of-memory when group size is too large\n  * [SINGA-48] Fix a bug in trainer.cc that assigns the same NeuralNet instance to workers from diff groups\n  * [SINGA-49] Fix a bug in HandlePutMsg func that sets param fields to invalid values\n  * [SINGA-66] Fix bugs in Worker::RunOneBatch function and ClusterProto\n  * [SINGA-79] Fix bug in singatool that can not parse -conf flag\n\nFeatures planned for the next release\n  * [SINGA-11] Start SINGA using Mesos\n  * [SINGA-31] Extend Blob to support xpu (cpu or gpu)\n  * [SINGA-35] Add random number generators\n  * [SINGA-40] Support sparse Param update\n  * [SINGA-41] Support single node single GPU training\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.029296875,
          "content": "<!--\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with < this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n-->\n\n# Security Policy\n\n## Reporting a Vulnerability\n\nUsers can report security vulnerabilities to [SINGA Security Team Mail List](mailto:security@singa.apache.org)\n\nFor more information, please visit:\n\nhttp://singa.apache.org/security\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doap",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "rafiki",
          "type": "commit",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 15.8994140625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n'''Script for building wheel package for installing singa via pip.\n\nThis script must be launched at the root dir of the singa project \ninside the docker container created via tool/docker/devel/centos/cudaxx/Dockerfile.manylinux2014.\n\n    # launch docker container\n    $ nvidia-docker run -v <local singa dir>:/root/singa -it apache/singa:manylinux2014-cuda10.2\n    # build the wheel packag; replace cp36-cp36m to compile singa for other py version\n    $ /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel\n    $ /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel\n    $ /opt/python/cp38-cp38/bin/python setup.py bdist_wheel\n\nThe generted wheel file should be repaired by the auditwheel tool to make it \ncompatible with PEP513. Otherwise, the dependent libs will not be included in\nthe wheel package and the wheel file will be rejected by PYPI website during\nuploading due to file name error.\n\n    # repair the wheel pakage and upload to pypi\n    $ /opt/python/cp36-cp36m/bin/python setup.py audit\n\nFor the Dockerfile with CUDA and CUDNN installed, the CUDA version and \nCUDNN version are exported as environment variable: CUDA_VERSION, CUDNN_VERSION.\nYou can control the script to build CUDA enabled singa package by exporting\nSINGA_CUDA=ON; otherwise the CPU only package will be built.\n\n\nRef: \n[1] https://github.com/bytedance/byteps/blob/master/setup.py\n[2] https://setuptools.readthedocs.io/en/latest/setuptools.html\n[3] https://packaging.python.org/tutorials/packaging-projects/ \n'''\n\nfrom setuptools import find_packages, setup, Command, Extension\nfrom setuptools.command.build_ext import build_ext\nfrom distutils.errors import CompileError, DistutilsSetupError\n\nimport os\nimport io\nimport sys\nimport subprocess\nimport shutil\nimport shlex\nfrom pathlib import Path\n\nimport numpy as np\n\nNAME = 'singa'\n'''\nPypi does not allow you to overwrite the uploaded package;\ntherefore, you have to bump the version.\nPypi does not allow [local version label](https://www.python.org/dev/peps/pep-0440/#local-version-segments) \nto appear in the version, therefore, you have to include the public \nversion label only. Currently, due to the pypi size limit, the package \nuploaded to pypi is cpu only (without cuda and cudnn), which can be installed via\n    \n    $ pip install singa\n    $ pip install singa=3.0.0.dev1\n\nThe cuda and cudnn enabled package's version consists of the public \nversion label + local version label, e.g., 3.0.0.dev1+cuda10.2, which\ncan be installed via\n\n    $ pip install singa=3.0.0.dev1+cuda10.2 -f <url of the repo>\n\n'''\nfrom datetime import date\n\n# stable version\nVERSION = '4.3.0'\n# get the git hash\n# git_hash = subprocess.check_output([\"git\", \"describe\"]).strip().split('-')[-1][1:]\n# comment the next line to build wheel for stable version\n# VERSION += '.dev' + date.today().strftime('%y%m%d')\n\nSINGA_PY = Path('python')\nSINGA_SRC = Path('src')\nSINGA_HDR = Path('include')\n\n\nclass AuditCommand(Command):\n    \"\"\"Support setup.py upload.\"\"\"\n\n    description = 'Repair the package via auditwheel tool.'\n    user_options = []\n\n    @staticmethod\n    def status(s):\n        \"\"\"Prints things in bold.\"\"\"\n        print('\\033[1m{0}\\033[0m'.format(s))\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        self.status('Removing previous wheel files under wheelhouse')\n        shutil.rmtree('wheelhouse', ignore_errors=True)\n        for wheel in os.listdir('dist'):\n            self.status('Repair the dist/{} via auditwheel'.format(wheel))\n            os.system('auditwheel repair dist/{}'.format(wheel))\n\n        # self.status('Uploading the package to PyPI via Twine…')\n        # os.system('{} -m twine upload dist/*'.format(sys.executable))\n        sys.exit()\n\n\ndef parse_compile_options():\n    '''Read the environment variables to parse the compile options.\n\n    Returns:\n        a tuple of bool values as the indicators\n    '''\n    with_cuda = os.environ.get('SINGA_CUDA', False)\n    with_nccl = os.environ.get('SINGA_NCCL', False)\n    with_test = os.environ.get('SINGA_TEST', False)\n    with_debug = os.environ.get('SINGA_DEBUG', False)\n\n    return with_cuda, with_nccl, with_test, with_debug\n\n\ndef generate_singa_config(with_cuda, with_nccl):\n    '''Generate singa_config.h file to define some macros for the cpp code.\n\n    Args:\n        with_cuda(bool): indicator for cudnn and cuda lib\n        with_nccl(bool): indicator for nccl lib\n    '''\n    config = ['#define USE_CBLAS', '#define USE_GLOG', '#define USE_DNNL']\n    if not with_cuda:\n        config.append('#define CPU_ONLY')\n    else:\n        config.append('#define USE_CUDA')\n        config.append('#define USE_CUDNN')\n\n    if with_nccl:\n        config.append('#define ENABLE_DIST')\n        config.append('#define USE_DIST')\n\n    # singa_config.h to be included by cpp code\n    cpp_conf_path = SINGA_HDR / 'singa/singa_config.h'\n    print('Writing configs to {}'.format(cpp_conf_path))\n    with cpp_conf_path.open('w') as fd:\n        for line in config:\n            fd.write(line + '\\n')\n        versions = [int(x) for x in VERSION.split('+')[0].split('.')[:3]]\n        fd.write('#define SINGA_MAJOR_VERSION {}\\n'.format(versions[0]))\n        fd.write('#define SINGA_MINOR_VERSION {}\\n'.format(versions[1]))\n        fd.write('#define SINGA_PATCH_VERSION {}\\n'.format(versions[2]))\n        fd.write('#define SINGA_VERSION \"{}\"\\n'.format(VERSION))\n\n    # config.i to be included by swig files\n    swig_conf_path = SINGA_SRC / 'api/config.i'\n    with swig_conf_path.open('w') as fd:\n        for line in config:\n            fd.write(line + ' 1 \\n')\n\n        fd.write('#define USE_PYTHON 1\\n')\n        if not with_nccl:\n            fd.write('#define USE_DIST 0\\n')\n        if not with_cuda:\n            fd.write('#define USE_CUDA 0\\n')\n            fd.write('#define USE_CUDNN 0\\n')\n        else:\n            fd.write('#define CUDNN_VERSION \"{}\"\\n'.format(\n                os.environ.get('CUDNN_VERSION')))\n        versions = [int(x) for x in VERSION.split('+')[0].split('.')[:3]]\n        fd.write('#define SINGA_MAJOR_VERSION {}\\n'.format(versions[0]))\n        fd.write('#define SINGA_MINOR_VERSION {}\\n'.format(versions[1]))\n        fd.write('#define SINGA_PATCH_VERSION {}\\n'.format(versions[2]))\n        fd.write('#define SINGA_VERSION \"{}\"\\n'.format(VERSION))\n\n\ndef get_cpp_flags():\n    default_flags = ['-std=c++11', '-fPIC', '-g', '-O2', '-Wall', '-pthread']\n    # avx_flags = [ '-mavx'] #'-mf16c',\n    if sys.platform == 'darwin':\n        # Darwin most likely will have Clang, which has libc++.\n        return default_flags + ['-stdlib=libc++']\n    else:\n        return default_flags\n\n\ndef generate_proto_files():\n    print('----------------------')\n    print('Generating proto files')\n    print('----------------------')\n    proto_src = SINGA_SRC / 'proto'\n    cmd = \"/usr/bin/protoc --proto_path={} --cpp_out={} {}\".format(\n        proto_src, proto_src, proto_src / 'core.proto')\n    subprocess.run(cmd, shell=True, check=True)\n\n    proto_hdr_dir = SINGA_HDR / 'singa/proto'\n    proto_hdr_file = proto_hdr_dir / 'core.pb.h'\n    if proto_hdr_dir.exists():\n        if proto_hdr_file.exists():\n            proto_hdr_file.unlink()\n    else:\n        proto_hdr_dir.mkdir()\n\n    shutil.copyfile(Path(proto_src / 'core.pb.h'), proto_hdr_file)\n    return proto_hdr_file, proto_src / 'core.pb.cc'\n\n\ndef path_to_str(path_list):\n    return [str(x) if not isinstance(x, str) else x for x in path_list]\n\n\ndef prepare_extension_options():\n    with_cuda, with_nccl, with_test, with_debug = parse_compile_options()\n\n    generate_singa_config(with_cuda, with_nccl)\n    generate_proto_files()\n\n    link_libs = ['glog', 'protobuf', 'openblas', 'dnnl']\n\n    sources = path_to_str([\n        *list((SINGA_SRC / 'core').rglob('*.cc')), *list(\n            (SINGA_SRC / 'model/operation').glob('*.cc')), *list(\n                (SINGA_SRC / 'utils').glob('*.cc')),\n        SINGA_SRC / 'proto/core.pb.cc', SINGA_SRC / 'api/singa.i'\n    ])\n    include_dirs = path_to_str([\n        SINGA_HDR, SINGA_HDR / 'singa/proto',\n        np.get_include(), '/usr/include', '/usr/include/openblas',\n        '/usr/local/include'\n    ])\n\n    try:\n        np_include = np.get_include()\n    except AttributeError:\n        np_include = np.get_numpy_include()\n    include_dirs.append(np_include)\n\n    library_dirs = []  # path_to_str(['/usr/lib64', '/usr/local/lib'])\n\n    if with_cuda:\n        link_libs.extend(['cudart', 'cudnn', 'curand', 'cublas', 'cnmem'])\n        include_dirs.append('/usr/local/cuda/include')\n        library_dirs.append('/usr/local/cuda/lib64')\n        sources.append(str(SINGA_SRC / 'core/tensor/math_kernel.cu'))\n        if with_nccl:\n            link_libs.extend(['nccl', 'cusparse', 'mpicxx', 'mpi'])\n            sources.append(str(SINGA_SRC / 'io/communicator.cc'))\n    # print(link_libs, extra_libs)\n\n    libraries = link_libs\n    runtime_library_dirs = ['.'] + library_dirs\n    extra_compile_args = {'gcc': get_cpp_flags()}\n\n    if with_cuda:\n        # compute_35 and compute_50 are removed because 1. they do not support half float;\n        # 2. google colab's GPU has been updated from K80 (compute_35) to T4 (compute_75).\n        cuda9_gencode = (' -gencode arch=compute_60,code=sm_60'\n                         ' -gencode arch=compute_70,code=sm_70')\n        cuda10_gencode = ' -gencode arch=compute_75,code=sm_75'\n        cuda11_gencode = ' -gencode arch=compute_80,code=sm_80'\n        cuda9_ptx = ' -gencode arch=compute_70,code=compute_70'\n        cuda10_ptx = ' -gencode arch=compute_75,code=compute_75'\n        cuda11_ptx = ' -gencode arch=compute_80,code=compute_80'\n        if cuda_major >= 11:\n            gencode = cuda9_gencode + cuda10_gencode + cuda11_gencode + cuda11_ptx\n        elif cuda_major >= 10:\n            gencode = cuda9_gencode + cuda10_gencode + cuda10_ptx\n        elif cuda_major >= 9:\n            gencode = cuda9_gencode + cuda9_ptx\n        else:\n            raise CompileError(\n                'CUDA version must be >=9.0, the current version is {}'.format(\n                    cuda_major))\n\n        extra_compile_args['nvcc'] = shlex.split(gencode) + [\n            '-Xcompiler', '-fPIC'\n        ]\n    options = {\n        'sources': sources,\n        'include_dirs': include_dirs,\n        'library_dirs': library_dirs,\n        'libraries': libraries,\n        'runtime_library_dirs': runtime_library_dirs,\n        'extra_compile_args': extra_compile_args\n    }\n\n    return options\n\n\n# credit: https://github.com/rmcgibbo/npcuda-example/blob/master/cython/setup.py#L55\ndef customize_compiler_for_nvcc(self):\n    \"\"\"Inject deep into distutils to customize how the dispatch\n    to gcc/nvcc works.\n    If you subclass UnixCCompiler, it's not trivial to get your subclass\n    injected in, and still have the right customizations (i.e.\n    distutils.sysconfig.customize_compiler) run on it. So instead of going\n    the OO route, I have this. Note, it's kindof like a wierd functional\n    subclassing going on.\n    \"\"\"\n\n    # Tell the compiler it can processes .cu\n    self.src_extensions.append('.cu')\n\n    # Save references to the default compiler_so and _comple methods\n    default_compiler_so = self.compiler_so\n    super = self._compile\n\n    # Now redefine the _compile method. This gets executed for each\n    # object but distutils doesn't have the ability to change compilers\n    # based on source extension: we add it.\n    def _compile(obj, src, ext, cc_args, extra_postargs, pp_opts):\n        if os.path.splitext(src)[1] == '.cu':\n            # use the cuda for .cu files\n            self.set_executable('compiler_so', 'nvcc')\n            # use only a subset of the extra_postargs, which are 1-1\n            # translated from the extra_compile_args in the Extension class\n            postargs = extra_postargs['nvcc']\n        else:\n            postargs = extra_postargs['gcc']\n\n        super(obj, src, ext, cc_args, postargs, pp_opts)\n        # Reset the default compiler_so, which we might have changed for cuda\n        self.compiler_so = default_compiler_so\n\n    # Inject our redefined _compile method into the class\n    self._compile = _compile\n\n\nclass custom_build_ext(build_ext):\n    '''Customize the process for building the extension by chaning \n    the options for compiling swig files and cu files.\n\n    Ref: https://github.com/python/cpython/blob/master/Lib/distutils/command/build_ext.py\n    '''\n\n    def finalize_options(self):\n        self.swig_cpp = True\n        print('build temp', self.build_temp)\n        print('build lib', self.build_lib)\n        super(custom_build_ext, self).finalize_options()\n        self.swig_opts = '-py3 -outdir {}/singa/'.format(self.build_lib).split()\n        print('build temp', self.build_temp)\n        print('build lib', self.build_lib)\n\n    def build_extensions(self):\n        options = prepare_extension_options()\n        for key, val in options.items():\n            singa_wrap.__dict__[key] = val\n        customize_compiler_for_nvcc(self.compiler)\n        build_ext.build_extensions(self)\n\n\ntry:\n    with io.open('README.md', encoding='utf-8') as f:\n        long_description = '\\n' + f.read()\nexcept OSError:\n    long_description = ''\n\nclassifiers = [\n    # Trove classifiers\n    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers\n    'License :: OSI Approved :: Apache Software License',\n    'Development Status :: 3 - Alpha',\n    'Intended Audience :: Developers',\n    'Programming Language :: Python :: 3.9',\n    'Programming Language :: Python :: 3.10',\n    'Programming Language :: Python :: 3.11',\n    'Topic :: Scientific/Engineering :: Artificial Intelligence'\n]\nif sys.platform == 'darwin':\n    classifiers.append('Operating System :: MacOS :: MacOS X')\nelif sys.platform == 'linux':\n    'Operating System :: POSIX :: Linux'\nelse:\n    raise DistutilsSetupError('Building on Windows is not supported currently.')\n\nkeywords = 'deep learning, apache singa'\nwith_cuda, with_nccl, _, _ = parse_compile_options()\nif with_cuda:\n    classifiers.append('Environment :: GPU :: NVIDIA CUDA')\n    cuda_version = os.environ.get('CUDA_VERSION')\n    cudnn_version = os.environ.get('CUDNN_VERSION')\n    keywords += ', cuda{}, cudnn{}'.format(cuda_version, cudnn_version)\n    cuda_major = int(cuda_version.split('.')[0])\n    cuda_minor = int(cuda_version.split('.')[1])\n    # local label '+cuda10.2'. Ref: https://www.python.org/dev/peps/pep-0440/\n    VERSION = VERSION + '+cuda{}.{}'.format(cuda_major, cuda_minor)\n    if with_nccl:\n        classifiers.append('Topic :: System :: Distributed Computing')\n        keywords += ', distributed'\nelse:\n    keywords += ', cpu-only'\n\nsinga_wrap = Extension('singa._singa_wrap', [])\n\nsetup(\n    name=NAME,\n    version=VERSION,\n    description='A General Deep Learning System',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    author='Apache SINGA Community',\n    author_email='dev@singa.apache.org',\n    url='http://singa.apache.org',\n    python_requires='>=3',\n    install_requires=[\n        'numpy >=1.16,<2.0',  #1.16\n        'onnx==1.15',\n        'deprecated',\n        'pytest',\n        'unittest-xml-reporting',\n        'future',\n        'pillow',\n        'tqdm',\n    ],\n    include_package_data=True,\n    license='Apache 2',\n    classifiers=classifiers,\n    keywords=keywords,\n    packages=find_packages('python'),\n    package_dir={'': 'python'},\n    ext_modules=[singa_wrap],\n    cmdclass={\n        'build_ext': custom_build_ext,\n        'audit': AuditCommand\n    })\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}