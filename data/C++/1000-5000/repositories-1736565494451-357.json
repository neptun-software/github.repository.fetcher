{
  "metadata": {
    "timestamp": 1736565494451,
    "page": 357,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sbarex/SourceCodeSyntaxHighlight",
      "stars": 3093,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5556640625,
          "content": "# Xcode\n#\n# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore\n\n## User settings\nxcuserdata/\n*xcworkspace/xcuserdata/*\n\n## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)\n*.xcscmblueprint\n*.xccheckout\n\n## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)\nbuild/\nDerivedData/\n*.moved-aside\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\n\n## Gcc Patch\n/*.gcno\n\n.idea/\n\n._DS_STORE\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.154296875,
          "content": "[submodule \"highlight-wrapper/highlight\"]\n\tpath = highlight-wrapper/highlight\n\turl = https://gitlab.com/saalen/highlight.git\n\tignore = dirty\n\tbranch = master\n"
        },
        {
          "name": "Application",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.458984375,
          "content": "Changelog\n=======\n\n### 2.1.25 (74)\nNew Features: \n- Support for Jupyter Notebook files (`.ipynb`) _as JSON_.\n- Support for MAMEdev layout files `.lay` _as XML_.\n- Support for NVidia Cuda `.cu` files as _C++_.\n- Support for `.raml` files as _YAML_.\n- Experimental Shortcut Action (require macOS 15.2). \n- Update Highlight to release 4.15.\n- Update Lua to release 5.4.7.\n- Update Boost to release 1.8.7.\n\nBugfix:\n- Better support for Kotlin files.\n- Better light/dark mode recognition.\n- Fixed some deprecation warnings during compilation.\n\n\n### 2.1.24 (73)\nBugfix:\n- CLI tool allow to show/hide about footer.\n- Fixed saving about flag settings.\n\n\n### 2.1.23 (72)\nNew Features: \n- Update Highlight to release 4.12.\n- Update Boost to release 1.8.5.\n- Update Sparkle to release 2.6.3.\n- Support for Nix Expression Language files (`.nix`).\n- Advanced settings to show about app info on the footer preview.\n- Link to buy me a :coffee: ( :heart: )\n\nBugfix:\n- Fixed support for `public.xsd` UTI.\n- Added `.ily` extension for Lilypond files.\n\n\n### 2.1.22 (71)\n\nNew Features: \n- Update Highlight to release 4.11.\n- Support for Adobe Flex `.mxml` files _as XML_.\n- Extended support for Terraform files to the extension `.tfstate` _as YAML_.\n\nBugfix:\n- Fixed terraform files.\n- Fixed missing format descriptions.\n\n\n### 2.1.21 (70)\n\nNew Features: \n- Update Highlight to release 4.10.\n- Update Dos2Unix to release 7.5.2.\n- Support for Steam app manifest files (`.acf`) _as plain text_.\n- Support for Lilypond files (`.ly`).\n- Experimental support for Astro files (`.astro`) _as JSX_.\n\nBugfix:\n- Better support for bazel files.\n- Fixed `cmake` support.\n- Fixed support for `lua` files.\n- Fixed support for `md` files.\n- Extended support for Terraform files to the extension `.hcl` (_ as YAML_).\n\n\n### 2.1.20 (69)\nNew features:\n- Update Highlight to release 4.8.\n- Update Lua to release 5.4.6.\n- Update Boost to release 1.8.3.\n- Update Dos2Unix to release 7.5.1.\n- Support for `.code-workspace` files _as JSON_.\n- Support for bazel (`.bazel`) and smali (`.smali`) files _as plain text_.\n- Support for Media Presentation Description (`.mpd`) _as XML_.\n\nBugfix:\n- Fixed unrecognized `.jsm` files.\n\n\n### 2.1.19 (68)\nNew features:\n- Better support for Stata files (`.do`, `.ado`) _as plain text_.\n- Better support for fortran (`.f95`) and LaTex (`.cls`) files.\n\n\n### 2.1.18 (67)\nNew features:\n- Update Highlight to release 4.5.\n- Update Lua to release 5.4.4.\n- Added support for Autoit files (`.au3`, `.a3x`).\n- Added support for JSON Lines files (`.jsonl`) _as JSON_.\n- Added support for Stata files (`.do`, `.ado`) _as plain text_.\n\nBugfix:\n- Fixed unrecognized `.mjs` files.\n- Fixed bug for preview files with special characters on the path.\n\n\n### 2.1.17 (66)\nNew features:\n- Added support for Crystal language (`.cr`)\n- Added support for NextFlow language (`.nf`) _as Groovy (Java)_\n\nBugfix:\n- Fixed a bug on standard settings.\n\n\n### 2.1.16 (65)\nNew features:\n- Update Highlight to release 4.4\n- Added support for Perl test scripts (`.t`).\n- Added support for Sagemath language (`.sage`) _as Python_\n- Added support for SAS language (`.sas`).\n- Added support for Solidity language (`.sol`).\n- Added support for Terraform files (`.tfvars` and `.tf`) _as YAML_.\n- Added support for Web Services Description Language (`.wsdl`) _as XML_.\n\nBugfix:\n- Support for SQL files associated with the UTI `com.sequel-ace.sequel-ace.sql`.\n- Fixed bug on syntax_highlight_cli.\n\n\n### 2.1.15 (64)\nNew features:\n- Added support for JSON with Comments (`.jsonc`).\n- Added support for OpenSSH RSA public key (`.pub`) _as plain text_\n\nBugfix: \n- Fixed bug in assigning special settings for certain UTIs. \n\n\n### 2.1.14 (63)\nNew features:\n- Added support for Graphics Language Transmission Format (`.gltf`) as _JSON_.\n- Added support for Oracle PL/SQL files as _SQL_.\n\nBugfix: \n- Fixed rendering of files with special bash characters (like `$`) in the path. \n\n\n### 2.1.13 (62)\nNew features:\n- Added support for Dockerfile (`.dockerfile`).\n\nBugfix: \n- Fixed support for ocaml files.\n\n\n### 2.1.12 (61)\nNew features:\n- Added support for Node CommonJS module (`.cjs`).\n- Added support for some new Typescript extensions (`.mts`, `.cts`) [but `.mts` is handled by the System as a video file].\n- Better way to handle some special settings with a YAML file. \n\nBugfix: \n- Support for `.toml` files.\n- Persistence of VCS colors.\n- Plain file pattern match.\n\n\n### 2.1.11 (60)\nNew features:\n- Highlight updated to 4.2.\n- Added support for reStructured Text files (`.rst`).\n- Added support for many UTIs defined by MacVim.\n\nBugfix: \n- Removed the predefined preprocessor for beautify JSON files. \n\n\n### 2.1.10 (59)\nNew features:\n- Added support for Ada, BibTex (`.bib`), Document Type Definition (`.dtd`), Dylang.\n\nBugfix:  \n- Better support for files managed by TextMate.\n\n\n### 2.1.10 (58)\nNew features:\n- Support for Configuration profile files (`.mobileconfig`) as _XML_.\n\nBugfix:\n- Fixed color wheel lag refresh.\n- Fixed support for Rust.\n\n\n### 2.1.9 (57)\nNew fatures:\n- New mime type criteria for the plain files.\n- View of the supported formats from the Help menu.\n\nBugfix:\n- Fixed the bug of extra arguments white space.\n\n\n### 2.1.8 (56)\nBugfix:\n- Regression fix for rft background color.\n\n\n### 2.1.8 (55)\nNew features:\n- Support for Gdscript files (Godot engine) (`.gd`).\n- Highlight updated to version 4.2.\n\n\n### 2.1.7 (54)\nNew features:\n- Better support for xquery files (`.xquery`, `.xu`, `.xq`).\n- Better support for assembler files (`.asm`).\n \nBugfix: \n- Better procedure to install the command line tool.\n- Fixed custom css style for global settings.\n- Fixed the Sparkle integration bug. **If you have installed version 2.1.6 you may need to [re-download the updated app from the web](https://github.com/sbarex/SourceCodeSyntaxHighlight/releases/download/2.1.7/Syntax.Highlight.zip).** \n\n\n### 2.1.6 (53)\nNew features:\n- Support for `.readme` files.\n- Experimental support for defining the size of the Quick Look window.\n- Option for automatic saving of settings changes.\n- Sparkle updated to version 2.0.0.\n\n\n### 2.1.5 (52)\nNew features:\n- Support for Apple shell script `.command` files.\n\n\n### 2.1.4 (51)\nNew features:\n- On the inquiry windows, double click on a UTI to copy the value on the clipboard.\n- Support for additional UTIs associated with the `.opml` format.\n- Preliminary support for Planning Domain Description Language `.pddl` format rendered as _`Lisp`_.\n\n### 2.1.3 (50)\nNew features:\n- New app icon.\n- Support for `.entitlements` format.\n- Support for some UTIs defined by Nova.app.\n- Better handling for unsupported plain binary files.\n- More log verbosity.\n\nBugfix: \n- Fixed crash due to pointer deallocation.\n\n\n### 2.1.2 (49)\nBugfix:\n- Fixed dirty status do not set when change a theme property.\n- Fixed binary dump word wrap and html entities.\n- Better strict detection of plain image files.\n\n\n### 2.1.1 (48)\nNew features:\n- Application menu item to install/reveal the CLI tool on `/usr/local/bin` folder.\n\nBugfix:\n- Fixed creation of `colorize.log` into the Desktop without debug set.\n\n\n### 2.1.0 (47)\nNew features:\n- On macOS 12 Monterey adopted the new lightweight API.\n- Command line interface for batch conversion.\n- Preliminary support for plain files.\n- Experimental support for VCS (`git` and `hg`) diff status.\n- Support for `.XMP` files rendered as _`XML`_.\n- Support for LaTeX `.sty` files.\n- Preliminary support  for `.svelte` files rendered as _`HTML`_.\n- Add `public.make-source` UTI defined by macOS 12 Monterey.\n- Better error messages.\n\nBugfix:\n- Fixed support for some UTIs associated to BBEdit.\n\n\n### 2.0.12 (46)\nNew features:\n- Support for OPML `.opml` files rendered as _`XML`_.\n\n\n### 2.0.11 (45)\nBugfix:\n- Fixed bugs on the color scheme code.\n\n\n### 2.0.10 (44)\nNew features:\n- Support for Apple workflow `.wflow` files rendered as _`plist`_.\n\nBugfix:\n- Fixed bugs on the color scheme (import, file name with space, background color).\n\n\n### 2.0.9\nNew features:\n- Support for Azkaban `.flow` files rendered as _`YAML`_.\n- Better support for dynamic UTI.\n\nBugfix:\n- Fixed Kotlin support.\n- Fixed generation of settings folder.\n\n\n### 2.0.8\nNew features:\n- Experimental support for Racket files (`.rkt`) rendered as _`Lisp`_.\n\nBugfix:\n- Error on saving custom theme.\n- Typo fix.\n\n\n### 2.0.7\nBugfix:\n- Fixed `.iml` not rendered as `XML`.  \n\n\n### 2.0.6\nNew features:\n- Added support for `.terminal` files (Apple Teminal Setting file, rendered as `XML`).\n- `highlight` updated to the final 4.1 release.\n\n\n### 2.0.5\nNew features:\n- Added support for `.properties` files (rendered as `INI`).\n\n\n### 2.0.4\nNew features:\n- Added support for `.xaml` files (rendered as `XML`).\n\nBugfix:\n- Better clojure `.edn` support.\n\n\n### 2.0.3\nBugfix:\n- Better error handler when fetching the settings.\n\n\n### 2.0.2\nBugfix:\n- Word wrap settings not saved.\n\n\n### 2.0.1\nNew features:\n- Added support for `Clojure` files (`.clj`, `.cljc`, `.cljs`,  `.edn`).\n\n\n### 2.0.0\nNew features:\n- Completely redesigned interface.    \n- `highlight` upgraded to version 4.1 (prerelease), compiled inside the Xcode project, with support for external program parser compatible with the _Language Server Protocol_.\n- Option to convert Windows and old Mac Classic line ending to Unix style.\n- Color scheme import (from `highlight` `.theme` files) and export (as `.css` or `.theme` file).\n- Allow to define a custom CSS style attribute for each color scheme tokens.\n- Added support for `.xsd`, `.cmake` and Elixir `.ex`,  `.exs` files.\n- Removed support for external `highlight` engine.\n- `lua` library upgraded to 5.4.3.\n- README reorganized.\n\nBugfix:\n- Fixed Inquiry window disappear after loosing focus.\n- Fixed inquiry file detection.\n- Padding coherence between HTML and RTF output mode.\n- Fixed indexing help files.\n- Rationalization of embedded libraries.\n- Smaller application size.\n- Word wrap optimization.\n\n\n### 1.0.b31\nNew features:\n- Support for Google `kml` files (rendered as `xml`).\n- Support for `toml` language.\n- `highlight` updated to version 3.60.\n\nBugfix:\n- Temporary fix to the webkit bug on Big Sur.\n\n\n### 1.0.b30\nNew features:\n- Auto update with Sparkle framework. Auto updated works only when run the main application and not from the Quick Look extension. You must have launched the application at least twice for the update checks to begin, or you can use the appropriate item in the application menu.\n- In the Preferences window, new button to show UTI instead of the extensions.\n\nBugfix:\n- Regression fix about data limit.\n- Better layout for the list of the supported languages.\n\n\n### 1.0.b29\nNew features:\n- toolbar and touchbar for access to the inquiry and themes window.\n\nBugfix:\n- Cosmetic fix for Big Sur.\n- The html output mode fail on Big Sur. It would appear that there is a bug preventing the recognition of the extension entitlements which causes webkit to fail to run. The use of the deprecated WebView temporarily bypasses the problem.\n- Closing the preferences window with unsaved settings show a confirmation popup.\n\n\n### 1.0.b28\nNew features:\n- universal binary (but not yet tested on Apple Silicon M1).\n- add support for `edu.uo.texshop.tex` UTI used by `.tex` files.\n- `highlight` updated to version 3.59 compiled as universal binary with `lua` 5.4.1 statically linked.\n- The embedded `lua` library used by the main application is upgraded to version 5.4.1.\n\nBugfix:\n- fixed a bug for the missing preview in html mode on the settings window.\n- predefined output mode set to `.rtf` (less expansive that html).\n\n\n### 1.0.b27\nNew features:\n- main application can only set the preferences and is no longer a viewer.\n- support for `.xsd`, `.xquery`, `.xsl`, `.asp` and julia (`.jl`) formats.\n- UTI info panel.\n\n\n### 1.0.b26\nNew features:\n- support for `.vue` files (highlight has a beta support for vue files).\n\n\n### 1.0.b25\nNew features:\n- support for symfony `.twig` files (interpreted ad html).\n- support for `.podspec` files (interpreted as ruby).\n- new icon with Big Sur style.\n\n\n### 1.0.b24\nNew features:\n- support for powershell (`.ps1`, `.psm1`, `.psd1`) files.\n\n\n### 1.0.b23\nNew features:\n- support for .nim files.\n\n\n### 1.0.b22\nNew features:\n- support for fortran (`.f`, `.for`, `.f90`) files.\n\n\n### 1.0.b21\nNew features:\n- support for `.stringsdict`, `.csh`, `.tcsh`, `.ksh` files.\n\n\n### 1.0.b20\nNew features:\n- new simple UI.\n- support for `.strings`, `.ini` and `.cfg` files.\n- support for `.xib` and `.storyboard` files as XML.\n- preview now can show custom source file.\n- better support for standard preprocessor for many file format (if you have previously customized the preprocessor for some formats please check if it require to add the placeholder $targetHL).\n- `highlight` updated to 3.57.\n\nBugfix:\n- rust file extension.\n- settings migration.\n\n\n### 1.0.b19\nNew features:\n- `highlight` updated to 3.55.\n- enhanced inquiry panel.\n\n\n### 1.0.b18\nNew features:\n- added support for c++ header files.\n\n\n### 1.0.b17\nNew features:\n- added an option to limit the amount of data to format.\n\n\n### 1.0.b16\nNew features:\n- XPC service splitted into two services. One is used by the Quick Look extension with only the code to read the current settings and format the preview. The second one has also the code to change the settings, inquiry the themes and all the requested features for the main application interface. I hope this change makes the Quick Look extension more reactive and consume less resources.\n- Rewrite the settings engine.\n\n\n### 1.0.b15\nNew features:\n- Support for `.h` header files.\n- Target to 10.15 (now the standard swift library is not embedded).\n- New interactive preview setting to allow the execution of js code inside the Quick Look preview.\n\nBugfix:\n- Removed markdown support in the Quick Look extension.\n- Fix little space for theme name on popover theme selector.\n- Images of help files have been compressed.\n- Added a margin around the preview on the Quick Look window.\n- Fast generation of theme icons.\n\n\n### 1.0.b14\nNew features:\n- Merge pull request https://github.com/sbarex/SourceCodeSyntaxHighlight/pull/18 (support for awk, bash, clojure, diff, haskell, lua, patch, rust, scala, text, zsh)\n- Added support for `.r` file format.\n\nBugfix:\n- Correction of many typos.\n\n\n### 1.0.b13\nNew features:\n- Embedded `highlight` updated to 5.3.4.\n- Info panel about `highlight` (from App menu and from a info button on preferences window).\n- Menu item inside app menu for open in the Finder the application support folder.\n- Redesign of preferences window for the theme selection.\n- GUI to view and edit the themes.\n- Inside the application support folder are saved the custom css styles and customized themes.\n\nBugfix:\n- Now double click on the Quick Look preview open the file.\n- Bugfix on font preferences.\n- System for purging and migrating old settings to new system.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 34.306640625,
          "content": " GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "QLExtension",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 35.865234375,
          "content": "[![counter](https://img.shields.io/github/downloads/sbarex/SourceCodeSyntaxHighlight/latest/total)](https://github.com/sbarex/SourceCodeSyntaxHighlight/releases) [![counter](https://img.shields.io/github/downloads/sbarex/SourceCodeSyntaxHighlight/total)](https://github.com/sbarex/SourceCodeSyntaxHighlight/releases)\n\n[![buy me a coffee](https://img.buymeacoffee.com/button-api/?text=Buy+me+a+coffee&emoji=&slug=sbarex&button_colour=FFDD00&font_colour=000000&font_family=Cookie&outline_colour=000000&coffee_colour=ffffff\")](https://www.buymeacoffee.com/sbarex)\n\n\n<p align=\"center\">\n  <img src=\"assets/icon.png\" width=\"128\" height=\"128\" alt=\"logo\" />\n</p>\n\n#  Syntax Highlight\n\nThe application offers a Quick Look Extension for macOS 10.15 Catalina and later for previewing source files.\nInside it uses [Highlight](http://www.andre-simon.de/doku/highlight/en/highlight.php) to render source code with syntax highlighting.\n\n> **`Syntax Highlight` is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY.**\n\nIf you like this application and find it useful, [buy me a coffee](https://www.buymeacoffee.com/sbarex)!\n\n  - [Installation](#installation)\n    - [Download precompiled release](#download-precompiled-release)\n    - [Install with Homebrew Cask](#install-with-homebrew-cask)\n    - [Note for the precompiled release](#note-for-the-precompiled-release)\n    - [Build from source](#build-from-source)\n  - [Enable the Quick Look extension](#enable-the-quick-look-extension)\n  - [File format management](#file-format-management)\n    - [Supported formats](#supported-formats)\n  - [Application settings](#application-settings)\n    - [Rendering settings](#rendering-settings)\n      - [External Language Server support](#external-language-server-support)\n      - [Version control support](#version-control-support)\n    - [Plain files](#plain-files)\n    - [Colors](#colors)\n    - [Inquiry file](#inquiry-file)\n  - [Command line interface](#command-line-interface)\n  - [Add support to a custom format](#add-support-to-a-custom-format)\n  - [FAQ](#faq)\n  - [Known bugs](#known-bugs)\n  - [Note for developers](#note-for-developers)\n    - [Info about decoding dynamic UTI identifiers](#info-about-decoding-dynamic-uti-identifiers)\n    - [Other useful links](#other-useful-links)\n  - [Credits](#credits)\n\n  \n## Installation\n\nYou can install the application in various ways. When the main application is launched it automatically checks for updates. \n\nAfter installation, _the application must be launched at least once to allow the system to detect the Quick Look extension_. [See below](#enable-the-quick-look-extension) for instructions on how to enable the Quick Look extension. \n\n### Download precompiled release\nHead over to the [releases](https://github.com/sbarex/SourceCodeSyntaxHighlight/releases) page to view the latest version. Move `Syntax Highlight.app` into the `Applications` folder.\n\n### Install with Homebrew Cask\nSyntax Highlight can also be installed via [Homebrew Cask](https://github.com/Homebrew/homebrew-cask). If you have not installed Homebrew, follow the simple instructions [here](https://brew.sh/). After that, install the current version of Syntax Highlight with the following command:\n\n```bash\nbrew install --cask --no-quarantine syntax-highlight\n```\n\n### Note for the precompiled release\nThe [precompiled app](https://github.com/sbarex/SourceCodeSyntaxHighlight/releases) is not notarized or signed, so the first time you run the app the system may show a warning about the impossibility to check for malicious software.\n\nTo fix, you can launch the app with right-click (or Control-click) on the app icon and choose the open action.\n\nYou can also execute this command from the terminal:\n\n```bash\nxattr -r -d com.apple.quarantine \"FULL PATH OF Syntax Highlight.app (you can drag the file to get the pull path)\"\n```\n\nAlternatively, after trying to launch the app for the first time, you can open the `System Preferences > Security & Privacy > General (tab)` and click the `Open Anyway` button.\n\nThis will resolve the error of an unsigned application when launching the app.\n\n### Build from source\n\nThe release application is compiled as a universal binary (Intel and Apple silicon processor).\n\nAfter cloning remember to fetch submodules:\n\n```bash\ngit submodule init\n```\n\n```bash\ngit submodule update\n```\n\n## Enable the Quick Look extension\n_To use the Quick Look preview you must launch the Application at least once._ In this way the Quick Look Extension will be discovered by the system and will be available in the `System preferences > Extensions > Quick Look`.\n\n![System preferences/Extensions](assets/extensions.png)\n\nWhen opening the app _for the first time_, you may see a pop-up warning about unable to check malicious software.\n\nTo fix follow these steps: \n\n- Switch to Finder and navigate to the application. \n- Right-click (or Control-click) `Syntax Highlight.app` and choose the `Open` item from the contextual menu. \n- A modal popup appears stating:\n  > \"Syntax Highlight.app\" can’t be opened because Apple cannot check it for malicious software.\n- Click `Open` to confirm.\n\nThis warning is because the app is neither codesigned nor notarized.\n\nFor more info see the [note for the precompiled release](#note-for-the-precompiled-release).\n\n## File format management\n\nThe Quick Look Extension uses the [Uniform Type Identifier (UTI)](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_intro/understand_utis_intro.html) to handle the supported formats (and not simply the file name extension).\nInside the definition on an UTI there are the list of extensions and mime type associated with it.\n\nSome file types are directly associated to a UTI by the system. Other formats are registered by the owner application. In this way some extensions can be associated to multiple UTIs based on the applications currently installed. For this reason, this application supports many UTIs even if they are apparently redundant.\n\n_**MacOS 10.15 Catalina does not** allow to manage some file formats including (but not limited to):_  `.xml`, `.plist`, `.html`, `.ts`, `.dart`, `.txt`, common images (`.jpg`, `.gif`, `.png`), …\n\nOn _**macOS 11 Big Sur**, the system allows you to manage these previously unauthorized extensions:_ `.plist`.\n\nOn _**macOS 12 Monterey**, the system allows you to manage these previously unauthorized extensions:_ `.xml`.\n\n### Supported formats\n\nMost programming languages are supported. \nThe application can also handle some [plain files](#plain-files) **without extension**.\n\n- Ada (`.ada`)\n- Adobe Acrobat Sequence files (`.sequ`) _as `XML`_\n- Adobe Flash ActionScript source files (`.as`)\n- Adobe Flex files (`.mxml`) files _as XML_\n- Adobe JSX script files (`.jsx`)\n- Apple workflow (`.wflow`) _as `plist (XML)`_\n- AppleScript (`.scpt`, `.applescript`, `.ascr`) _automatically decompiled with `osadecompile`_\n- Apple shell script files (`.command`)\n- Assembler source files (`.asm`, `.s79`)\n- Astro files (`.astro`) _as JSX_.\n- Autolit files (`.au3`, `.a3x`)\n- Azkaban flow files (`.flow`) as _`YAML`_\n- ATL files (`.atl`)\n- (G)AWK files (`.awk`)\n- Bash Script files (`.bash`)\n- Bezel (`.bezel`) as _plain text_\n- BibTex (`.bib`)\n- C shell script files (`.csh`)\n- C source files (`.c`, `.h`)\n- C# source files (`.cs`)\n- C++ source files (`.cpp`, `.cp`, `.c++`, `.cc`, `.cxx`, `.hpp`, `.hh`, `.hxx`, `.ipp` )\n- ClojureScript (`.cli`, `.cljs`, `.cljc`, `.edn`)\n- CMake files (`.cmake`)\n- CocoaPod files (`.podspec`) _as `Ruby`_\n- CoffeeScript source files (`.coffee`)\n- ColdFusion files (`.cfc`, `.cfm`, `.cfml`)\n- Configuration files (`.conf`)\n- Configuration profiles (`.mobileconfig`) _as `XML`_\n- Crystal language (`.cr`)\n- CSON source files (`.cson`)\n- CSS files (`.css`)\n- Cuda files (`.cu`) _as `C++`_ \n- D (`.d`)\n- Dart source files (`.dart`) **`.dart` is reserved by macOS and cannot be handled.**\n- Diff files (`.diff`, `.patch`)\n- Dockerfile (`.dockerfile`)\n- Document Type Definition (`.dtd`)\n- DOS batch files (`.bat`, `.cmd`)\n- Dylang (`.dylan`)\n- ECore files (`.ecore`)\n- Eiffel project files (`.ecf`) _as `XML`_\n- Eiffel source files (`.e`, `.ex`, `.exs`)\n- Erlang source files (`.erl`, `.hri`)\n- F# source files (`.fsx`, `.fs`)\n- fish source files (`.fish`)\n- Fortran source files (`.f`, `.for`, `.f90`, `.f95`)\n- GCC linked files (`.ld`, `.map`, `.d`)\n- Gdscript (Godot engine) (`.gd`).\n- Golang source files (`.go`)\n- Google Earth KML Document files (`.kml`) _as `XML`_\n- Gradle source files (`.gradle`)\n- Graphics Language Transmission Format (`.gltf`) _as `JSON`_\n- Groovy source files (`.groovy`)\n- Haskell source files (`.hs`, `.lhs`)\n- HTML Abstraction Markup Language (`.haml`)\n- IDL source files (`.pro`)\n- INF files (`.inf`)\n- INI configuration files (`.ini`, `.cfg`)\n- Inno source files (`.iss`)\n- INO source files (`.ino`)\n- IntelliJ IDEA module (`.iml`)\n- Interface Builder Storyboard (`.storybard`) _as `XML`_\n- Interface Builder XIB (`.xib`) _as `XML`_\n- Java Compiled Class (`.class`) _require `javap` to decompile_\n- Java Properties files (`.properties`) _as `INI`_\n- Java Server Page files (`.jsp`)\n- Java source code (`.java`, `.jav`)\n- Java Web Start (`.jnlp`)\n- JavaFX ML (`.fxml`)\n- JavaScript files (`.js`, `.jscript`, `.javascript`, `.mjs`, `.jsm`)\n- JSON files (`.json`, `.jsonc`) ** On macOS 13 Ventura with Apple Silicon the `.json` extension is reserved by the system and cannot be handled.** \n- JSON Line files (`.jsonl`) _as `JSON`_\n- Julia source files  (`.jl`)\n- Jupyter Notebook files (`.ipynb`) _as `JSON`_\n- Kermeta source files (`.kmt`)\n- Korn Shell script files (`.ksh`)\n- Kotlin source files (`.kt`, `.kts`)\n- LESS stylesheet (`.less`)\n- Lilypond files (`.ly`, `.ily`)\n- Lisp source files (`.lisp`, `.lsp`, `.asd`, `.el`)\n- Logos source files (`.xm`)\n- Lua source files (`.lua`)\n- Makefile files (`.mk`, `.mak`)\n- MAMEdev layout files (`.lay`) _as XML_.\n- Markdown files (`.md`, `.rmd`): _please use [QLMarkdown](https://github.com/sbarex/QLMarkdown)_ which allows you to choose whether to display formatted output or the highlighted source code.\n- Media Presentation Description (`.mpd`) _as XML_. \n- MF source files (`.mf`)\n- Microsoft Active Server Page files (`.asp`, `.aspx`)\n- Microsoft PowerShell files (`.psm1`, `.psd1`, `.ps1`)\n- NextFlow (`.nf`) _as Groovy (Java)_\n- Nim source files (`.nim`)\n- Nix Expression Language (`.nix`)\n- Node CommonJS module (`.cjs`)\n- Objective-C source files (`.m`)\n- Objective-C++ source files (`.mm`)\n- OCaml source files (`.ml`, `.mll`, `.mly`)\n- OpenSSH RSA public key (`.pub`) _as plain text_\n- OPML (Outline Processor Markup Language) files (`.opml`) _as `XML`_\n- Oracle PL/SQL files (`.fnc`, `.prc`, `.trg`, `.pks`, `.pkb`, `.pck`, `.tps`, `.tpb`, `.typ`, `.tab`, `.avt`, `.con`, `.sqs`, `.vw`, `.mvw`, `.trg`) _as `SQL`_\n- Paradox files (`.sc`)\n- Pascal source files (`.pas`)\n- Patch files (`.patch`, `.diff`)\n- PDE source files (`.pde`, `.ino`)\n- Perl script files (`.pl`, `.pm`, `.t`)\n- Planning Domain Description Language (`.pddl`) _as `Lisp`_\n- PHP source files (`.php`, `.php3`, `.php4`, `.ph3`, `.ph4`, `.phtml`)\n- Properties files (`.properties`) _as `INI`_\n- Property List files (`.plist`) _dynamically decompiled with `plutil`_ **On macOS 10.15 Catalina `.plist` is reserved by the system and cannot be handled.**\n- Python source files (`.py`)\n- R (`.r`)\n- Racket (`.rkt`) _as `Lisp`_\n- RAML (`.raml`) _as `YAML`_\n- RDF files (`.rdf`)\n- README files (`.readme`) _as plain text_\n- reStructuredText document (`.rst`)\n- Rez files (`.r`)\n- Ruby on Rails files (`.rhtml`, `.erb`, `.rjs`)\n- Ruby Gems file (`.gemfile`)\n- Ruby script (`.rb`, `.rbw`)\n- Rust source files (`.rs`)\n- SageMath files (`.sage`) _as `Python`_\n- SAS files (`.sas`)\n- SASS/SCSS files (`.scss`)\n- Scala source files (`.sc`, `.sbt`, `.scala`)\n- Scheme source files (`.scm`, `.ss`, `.sls`, `.sps`, `.sld`, `.sch`) _as `Lisp`_\n- Shell script files (`.bashrc`, `.zshrc`, `.sh`)\n- Smali (`.smali`) _as plain text_.\n- Solidity source files (`.sol`)\n- SQL files (`.sql`)\n- Standard ML source files (`.ml`)\n- Stata files (`.do`, `.ado`) _as plain text_\n- Steam app manifest files (`.acf`) _as plain text_.\n- Svelte (`.svelte`) _as `HTML`_\n- Swift source files (`.swift`)\n- Symfony Twig files (`.twig`)\n- TCL source files (`.tcl`)\n- Tenex C Shell script files (`.tcsh`)\n- Terraform files (`.tfvars`, `.tfstate`, `.tf`, `.hcl`) _as `YAML`_\n- TeX and LaTeX files (`.tex`, `.sty`, `.cls`, `.latex`, `.ltx`, `.texi`, `.ctx`, `.sty`)\n- Text files (`.txt`, `.text`)\n- TOML files (`.toml`)\n- TypeScript files (`.ts`, `.tsx`, `.cts`, `.mts`) **`.ts` and `.mts` are reserved by macOS and cannot be handled.**\n- Visual Studio Code Workspace (`.code-workspace`) _ as `JSON`_\n- Verilog HDL files (`.v`, `.vl`)\n- VHDL source files (`.vhd`, `.vhdl`)\n- VIM script files (`.vim`)\n- Visual Basic source files (`.vb`, `.bas`, `.basic`, `.vbs`)\n- Vue source files (`.vue`)\n- XAML source files (`.xaml`) _as XML_\n- Xcode entitlement files (`.entitlements`) (dynamically decompiled with `plutil`) _as XML_\n- Xcode localizable strings files (`.strings`, `.stringsdict`) (dynamically decompiled with `plutil`) _as XML_ \n- XHTML files (`.xhtml`)\n- XML files (`.xml`) **Before macOS 12 Monterey `.xml` is reserved by the system and cannot be handled.**\n- XSD Schema files (`.xsd`, `.xquery`, `.xq`, `.xu`)\n- XUL files (`.xul`)\n- YAML files (`.yaml`)\n- Z shell script files (`.zsh`)\n\n## Application settings\n\nWith the standalone application you can customize the rendering settings.\n\n![Settings window](assets/settings.png)\n\nYou can show _advanced settings_ using the relative command on the view menu.\n\n![Settings window with advanced settings](assets/settings_advanced.png)\n\n\n### Rendering settings\n\nYou can set the settings for all supported formats on the _General_ tab.\n\n|Settings|Description|Advanced|\n|:---------|:-------------| :----: |\n|Render engine|Engine used to render the highlighted code. _Before macOS 12 Monterey_ **the recommended engine is `RTF`.** Choose the `HTML` engine if you want to use a custom CSS to override the color scheme (or you have choose a theme with some extra CSS inside it). Advanced users must choose the `HTML` engine to handle the hover functionality of a Language Server. ||\n|Color scheme|Chose the color scheme for light and dark appearance.||\n|Font|You can chose a preferred font or use the standard monospaced font.||\n|Word wrap|Allow to handle word wrap for long lines. _Hard wrap_ break the line after a fixed length (_can cause some highlight glitch_). _Soft wraps_ allow to break the line at the preview windows width. When word wraps is disabled, you can only enable it for minified files that have only one line. One line file detection is done on the source file and not on the preprocessor output. **Starting from macOS 12 Monterey the soft wrap is always enabled when using the `RTF` engine.** ||\n|Line numbers|Allow to show the line numbers.||\n|Tabs to spaces|Allow to translate tabs to spaces. Set to zero to use tabs. ||\n|Extra highlight arguments|Additional standard argument passed to `highlight`. **Arguments that contains a white space must be protected inside quotes.** See `man highlight` to a list of valid arguments and plugins. Eg: `--doc-title='title with space'` |Yes|\n|Custom CSS Style| If the render engine is set to _HTML_ allow to define a custom CSS style to override/extend the color scheme. More info about `highlight` HTML output on [this page](https://gitlab.com/saalen/highlight/wikis/CSS-Themes).|Yes|\n|Interactive preview| _DEPRECATED and available only before macOS 12 Monterey._ If the render engine is set to _HTML_ enable the javascript interpreter inside the preview window. Set only if you use some `highlight` plugins that output javascript code. This option disable the possibility to move the Quick Look preview with click and drag inside the window and opening the file with a double click. |Yes|\n|Data limit| Maximum amount of data to format, data beyond the limit is omitted. Specify 0 to not limit. This option is ignored when using a Language Server. ||\n|Convert line ending| Allow to convert Windows (`CRLF`) and Mac Classic (`CR`) line ending to the Unix style (`LN`). This option is ignored when a _preprocessor_ is set or when a _Language Server_ is enabled. The line ending conversion is made my [`dos2unix`](https://waterlan.home.xs4all.nl/dos2unix.html). |Yes|\n|VCS Support| If enabled, allow to highlight lines added/edited/removed from last commit. It can handle VCS based on `git` and `mercurial`. |Yes|\n|Custom Quick Look size|Allow you to choose a custom size for the content area of the Quick Look window. _Use with caution on macOS before version 12 Monterey_.||\n|Show about info | If enabled, shows information about this application at the bottom of the preview page.|Yes|\n|Debug | If enabled, a `colorize.log` and `colorize.rtf\\|html` file will be created on your Desktop folder with the log of last rendering.|Yes|\n\nYou can also override the global options for some formats on the _Formats_ tab.\n\n![Settings window for specific format](assets/settings_format.png)\n\nWhen customizing the settings for a specific format, these options will be available:\n\n|Settings|Description|Advanced|\n|:---------|:-------------| :----: |\n|Append highlight arguments|Arguments _appended_ to the _Extra highlight arguments_. Arguments that contains a white space must be protected inside quotes. |Yes|\n|Preprocessor|Set a program or a shell script to preprocess the source file before the formatting. The program must output to stdout the data to be passed to `highlight`. You **must** pass the name of the source file using the `$targetHL` placeholder. You can also use the placeholder `$escaped_targetHL` _with the special chars escaped_ inside a double quotes. With the preprocessor you can handle file format not directly supported by `highlight`. This option is ignored when using a Language Server. The execution of the preprocessor is made inside the same env of the script that handle `highlight`. For example you can beautify a JSON file with this preprocessor: `python3 -m json.tool $targetHL` or `python3 -m json.tool \"$escaped_targetHL\"`. _When you use a preprocessor you will probably want to disable the support for version control._  |Yes|\n|Syntax| Set which language must be used to recognize the source file. If not set will be used the file name extension. |Yes|\n\n\n### External Language Server support\nAdvanced users can customize the single format to use an external [Language Server](https://langserver.org/):\n\n![Settings window for specific format](assets/settings_ls.png)\n\n|Settings|Description|Advanced|\n|:---------|:-------------| :----: |\n|Executable|Full path of the Language Server executable. |Yes|\n|Delay|Server initialization delay in ms.|Yes|\n|Syntax| Syntax which is understood by the server.|Yes|\n|Hover| Execute hover requests. Require the `HTML` render engine.|Yes|\n|Semantic| Retrieve semantic token types (the Language Server must implement the protocol 3.16).|Yes|\n|Syntax Error| Retrieve syntax error information (assumes hover or semantic).|Yes|\n|Options| Custom command line options to pass to the Language Server.|Yes|\n\nWhen using an external Language Server the preprocessor and the data limit settings are ignored.\n\nSome format have a preconfigured custom settings to handle the data (for example java compiled class file can be decompiled before render).\n\n\n### Version control support\n\nYou can also enable the support of common VCS to highlight the added/edited/removed lines from last commit.\n\n![VCS Settings](assets/settings_vcs.png)\n\nIn the General settings you must enable the VCS support. Then you can customize the path of `git` and `mercurial` binary.\nThe you can choose the colors used to mark the changed lines. On every format you can also customize the colors.\n\n![VCS example](assets/vcs_preview.png)\n\n_On `RTF` mode, the VCS plugin can be disabled if the syntax language defines more keyword groups than those defined in the theme._\n\n### Plain files\nThe Application can preview plain files **without an extension** whose format is unknown. \n\n![Unknown files](assets/settings_plain.png)\n\nOnly files recognized by the system with one of the following UTIs can be handled: \n- `public.data`\n- `public.item`\n- `public.content`\n- `public.unix-executable`\n\n_Files with an extension or associated to a dynamic UTI will not be handled. Files that have a only one dot as the first character in their name (like `.gitignore`, `.env`, ...) are considered to have no extension._\n\nUnknown files are analyzed with the system utility `/usr/bin/file` for recognize mime type and encoding. No preprocessor is applied before analyzing the file.\n\nFiles recognized as images are handled by displaying the content within a web page (even if the rendering engine set in the settings is `RTF`). To be displayed correctly, the image format must be supported by WebKit. \n\nOn macOS 12 Monterey images and even, audio, movies and PDF files are displayed with the native Quick Look interface.\n\nFor other binary files it is possible to display a hex dump. \n\nFor text files, syntax highlighting is tried.\n\n![Unknown file settings editor](assets/settings_plain_editor.png)\n\nYou can specify a criteria for the file name and the mime type to apply a syntax highlighting and/or a specific display format. The criteria are evaluated in the order in which they are set. \n\nIf no display format is set, the system will try to derive it starting from the mime type.\n\nNote that some files with no extension can be recognized by macOS with a UTI if they have the `com.apple.FinderInfo` extended attributed set.\n\n\n### Colors\nThe Application has a GUI to customize the color schemes.\n\n![Color scheme editor](assets/theme_editor.png)\n\nStandard schemas provided by `highlight` cannot be edited but can be duplicated and then customized.\n\nFor every tokens of a color scheme you can also set a custom inline CSS style. Some basic CSS style can be handled also by the `RTF` engine, but for a best view you must choose the `HTML` render engine. For this reason the preview of the Color Scheme always uses the `HTML` engine.\n\nPlease note that the inline CSS style is not put inside the HTML `style` attribute but embedded on the global `<style>` tag inside the class style definition of the token. So you can define a custom CSS style sheet that override the inline settings.\n\nWhen inserting the style of a theme token it is possible to indicate whether this should override the default values for color and font style. If you want to use the custom theme with the `RTF` rendering engine *it is required not to override the standard values*.\n\nColor schemes that uses inline CSS style are highlighted by an icon.\n\nWith the advanced settings enabled you can also customize the appearance of the Language Server Protocol tokens.\n\n\n### Inquiry file\nWith the _Inquiry window_ you can see if a specific file type is handled by the Quick Look Extension and also if it is supported by `highlight`.\n\n![Inquiry window](assets/inquiry.png)\n\nAlternatively you can see the UTI of a file with this Terminal command:\n\n```bash\nmdls -name kMDItemContentType -name kMDItemContentTypeTree filename.ext\n```\n\nIt's likely that I didn't associate all the possible extensions managed by `highlight`.\nIf you found an unhandled format please send me the output of above command.\n\n**Only the formats supported by `highlight` can be managed by this application.**\n\n\n## Command line interface\n\nA `syntax_highlight_cli` command line interface (CLI) is available to perform batch conversion.\n\nThe tool is located inside the `Syntax Highlight.app/Contents/Resources` folder (and should not be moved outside). \n\nFrom the Application menu you can create a symbolic link into `/usr/local/bin` folder.\n\n```bash\n/Applications/Syntax\\ Highlight.app/Contents/Resources/syntax_highlight_cli -h\n```\n```\nUsage: syntax_highlight_cli [-o <path>] <file> [..]\n\nArguments:\n -h                              Show this help and exit.\n -t                              Test without save/output the result.\n -o <path>                       Save the output to <path>.\n                                 If <path> is a directory a new file is created with the name of the source.\n                                 Extension will be automatically added.\n                                 Destination file is always overwritten.\n -v                              Verbose mode. Valid only with the -o option.\n --log file                      Save the log to the specified file.\n\n --appearance light|dark         Force the requested appearance.\n --theme-light name              Theme for light appearance.\n --theme-dark name               Theme for dark appearance.\n --theme name                    Theme for all appearance.\n --format html|rtf           \n --syntax value              \n --preprocessor value            Protect the preprocessor code inside quotes.\n --font family                   Font name. Use '-' to choose the system monospace.\n --font-size value               Font size in points.\n --wrap hard|soft|no             Word wrap.\n --wrap-one-line                 Force word wrap for only one line files.\n --line-length value         \n --line-numbers on|zeros|off \n --tab-spaces value              Number of spaces for every tab. Set to zero to disable the tab conversion.\n --extra arguments               Extra arguments passed to highlight. Protect the arguments inside quotes.\n --extra-appended arguments      Extra arguments passed to highlight. Protect the arguments inside quotes.\n --css file                      Extra css loaded from the specified file.\n --max-data bytes                Trim source file that exceeds the size.\n --convert-eol on|off            Convert end of line.\n --vcs on|off                    Enable support for version control.\n --vcs-git path                  Path of git binary.\n --vcs-hg path                   Path of mercurial binary.\n --vcs-color-add                 Color (in #rrggbb) for added lines.\n --vcs-color-del                 Color (in #rrggbb) for removed lines.\n --vcs-color-edit                Color (in #rrggbb) for changed lines.\n --lsp on|off                    Enable Language server protocol.\n --lsp-exe file                  Path of the LSP executable.\n --lsp-delay ms              \n --lsp-syntax value              Recognize data processed by LSP with the provided syntax.\n --lsp-hover on|off          \n --lsp-semantic on|off       \n --lsp-errors on|off         \n --lsp-option arg                Extra argument passed to the LSP program. Protect the value inside quotes.\n                                 You can repeat --lsp-option multiple times.\n --debug on|off              \n\nTo handle multiple files at time you must pass the -o argument with a destination folder.\n\nUnspecified rendering options will use the settings defined in the main application.\n```\n\nThe CLI interface uses the same settings as the Quick Look extension, but you can override it if you wish. \n\nThe highlighted data is printed to the `stdout` or writed to file if you use the `-o` option. \n\nThe command line tool require macOS 10.15.4 or later.\n\n\n## Add support to a custom format\n\n** You cannot manually add support for a new file format.** This operation must be done during compilation time. Any attempt to manipulate the application causes the code signature to be violated, making it unusable!\n\nSee also the FAQ.\n\n\n## FAQ\n\n### The Quick Look preview doesn't work\n> The problem may be due to several causes:\n> 1. The application is not registered under system extensions.\n> 2. Another application is handling the preview instead of Syntax Highlight.\n> 3. Some application has registered the format with unrecognized UTI.\n> 4. You are trying to view unsupported formats.\n> 5. You are trying to view a format reserved by the system.\n>\n> If the problem affects all file formats it must related to points 1. and 2., so try one or more of these action:\n> - Try the `RTF` render engine, especially for macOS versions earlier than 12 Monterey.\n> - Drag the application on the trash and back to the Applications folder and then relaunch.\n> - Check in the `System Preferences > Extensions > Quick Look` if the _Syntax Highlight_ extension is present and checked.\n> - In the `System Preferences > Extensions > Quick Look`, drag the _Syntax Highlight_ extension on the top.\n> - In the `System Preferences > Extensions > Quick Look` disable other extensions one at a time until you find the one that conflicts.\n>\n> If the problem affects only a specific format it is possible that this was registered by some application with a non-standard UTI. Check the UTI with the _Inquiry window_ and send me the value. The support for each format must be defined at compile time.\n>\n>  Also remember that some common files cannot be handled by third party extension because are reserved by the system (for example, `.ts`, `.html`, …).\n\n### Is it possible to enable / disable support for individual formats?\n> No, Apple does not allow this functionality.\n\n### Markdown files are not supported\n> This is a deliberate choice. Most users want to see the formatted output and not the source code of their markdown files.\n> If you need to view the markdown files (also with the possibility of choosing whether to show the formatting or the source code) I have developed [QLMarkdown](https://github.com/sbarex/QLMarkdown).\n\n### Is it possible to add support for _xyz_ format?\n> It depends… first the format must be handled by `highlight`. Check in the _Inquiry window_ if the file is supported.\n> If is supported please send me the UTI associated to the file. You can also view the UTI with this terminal command:\n>\n> `mdls -name kMDItemContentType -name kMDItemContentTypeTree filename.ext`\n>\n> Some common files cannot be handled by third party extension because are reserved by the system (for example, `.ts`, `.html`, …).\n>\n> You can customize the behavior for files **with no extension** yourself. See [Plain files](#plain-files) settings.\n\n### The file icon do not show the preview\n> This Application only generate the Quick Look Preview and does not provide a thumbnail service for the Finder icon.\n\n### Why the Application or the Quick Look Preview require access to the Desktop folder?\n> When the _Debug option_ is enabled (on the advanced settings) on your Desktop folder will be created two files for the last preview action:\n> - _colorize.log_ with the log of the highlight process.\n> - _colorize.hml|rtf_ the output of the last rendering process.\n\n## Known bugs\n- ~~On Big Sur you cannot scroll the preview inside a Quick Look window dragging the scrollbars with the mouse. This is a Big Sur bug. You can scroll only with a mouse/trackpad gesture.~~ Fixed on maxOS 12 Monterey.\n- On macOS earlier than 12 Monterey, soft word wrap with RTF engine reacts when the window is enlarged but not when it is reduced.\n- Icons of the custom file format are disabled on Catalina (cause an application freeze).\n- In `RTF` mode the colors may be slightly lighter than what is set (probably due to the different handling of color profile). \n- Typescript `.ts` format cannot be handled because is reserved by macOS and associated to the mpeg video stream format.\n- If a Quick Look window is opened when the system switch the theme appearance, the contents will not be refreshed to the new style.\n\n\n## Note for developers\nStarting from macOS 10.15.0 Catalina the `qlgenerator` APIs are deprecated.\n\nThis project consists of these components:\n\n- A Standalone Application to set the preferences.\n- A Quick Look Extension to preview the source files.\n- An XPC service that generate the preview and pass the formatted data to the application or the Quick Look Preview.\n\nMacOS 10.15 Catalina require sandboxed extension that prevent the execution of external processes (like shell script).\nTo work around this problem, it is possible to use an XPC service that may have different security policies than the application / extension that invokes it. In this case the XPC service is not sandboxed.\n\nThe XPC service is executed automatically when requested by the application or the Quick Look Extension. After closing the Quick Look preview the process is automatically closed after some seconds releasing the resources.\n\nThe Application and the Quick Look Extension can preview files showing the formatted code as HTML, inside a WKWebView, or as RTF inside a NSTextView. Especially in Big Sur, the use of WebKit within the Quick Look Preview has numerous bugs, so **before macOS 12 Monterey, the suggested rendering engine is `RTF`**. From macOS 12 Monterey, the plugin adopt the new data based Quick Look API.\n\nThe settings are stored in `~/Library/Preferences/org.sbarex.SourceCodeSyntaxHighlight.plist`.\nCustom themes and styles are saved in `~/Library/Application Support/Syntax Highlight`.\n\nThe application embed the [`Highlight`](http://www.andre-simon.de/doku/highlight/en/highlight.php) engine that is build inside the Xcode project.\n\n![highlight info](assets/about_highlight.png)\n\n\n### Info about decoding dynamic UTI identifiers\n\n- https://gist.github.com/jtbandes/19646e7457208ae9b1ad\n- https://alastairs-place.net/blog/2012/06/06/utis-are-better-than-you-think-and-heres-why/\n- https://github.com/whomwah/qlstephen/issues/87\n- https://www.cocoanetics.com/2012/09/fun-with-uti/\n- **https://github.com/whomwah/qlstephen/issues/87#issuecomment-694528728 :**\n> Ok, so according to the [source](https://alastairs-place.net/blog/2012/06/06/utis-are-better-than-you-think-and-heres-why/) I references above, I would do the following:\n>\n>     1. Generate the dyn content, in this case I guess its `?0=6:1=sql`.\n>        Though I am not sure if the `6` is correct or if it should be `7`. Where numbers are substituted as follows:\n>\n>\n> ```\n> 0: UTTypeConformsTo\n> 1: public.filename-extension\n> 2: com.apple.ostype\n> 3: public.mime-type\n> 4: com.apple.nspboard-type\n> 5: public.url-scheme\n> 6: public.data\n> 7: public.text\n> 8: public.plain-text\n> 9: public.utf16-plain-text\n> A: com.apple.traditional-mac-plain-text\n> B: public.image\n> C: public.video\n> D: public.audio\n> E: public.directory\n> F: public.folder\n> ```\n>\n>     2. Next you put this string into a custom base32 converter. E.g. [this website](https://cryptii.com/pipes/base32)\n>        Input: `?0=6:1=sql`\n>        Variant: `Custom`\n>        Alphabet: `abcdefghkmnpqrstuvwxyz0123456789`\n>        Padding: – Delete if there is any –\n>\n>     3. The output should be `h62d4rv4ge81g6pq`. If you have any trailing `=` delete it, thats the padding.\n>\n>     4. Prepend `dyn.a` and that is your final string.\n>\n>     5. What you should insert in the Info.plist is `dyn.ah62d4rv4ge81g6pq`\n>\n>\n> ```\n> <key>LSItemContentTypes</key>\n> <array>\n>     <string>public.data</string>\n>     <string>public.content</string>\n>     <string>public.unix-executable</string>\n>     <string>dyn.ah62d4rv4ge81g6pq</string>\n> </array>\n> ```\n\n- https://stackoverflow.com/questions/16943819/where-do-uti-come-from/18014903#18014903\n> List all registered UTIs:\n> ```bash \n> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -dump\n> ```\n\n- handle extension from command line (https://stackoverflow.com/questions/66546696/how-to-enable-and-debug-a-macos-file-provider-extension , https://stackoverflow.com/questions/34898903/what-do-the-prefixes-in-the-output-of-macos-pluginkit-mean/36839118#36839118 , https://kevin.deldycke.com/2019/07/macos-commands/ ):\n\nList all registered Quick Look plugins:\n```bash\npluginkit -mAvvv -p com.apple.quicklook.preview \n```\nİnfo about a plugin:\n```bash\npluginkit -m -v -i org.sbarex.SourceCodeSyntaxHighlight.QuickLookExtension --raw\n```\n\n### Other useful links\n\nhttps://eclecticlight.co/2024/11/04/how-does-quicklook-create-thumbnails-and-previews-with-an-update-to-mints/\n\nhttps://eclecticlight.co/2024/11/02/a-brief-history-of-icons-thumbnails-and-quicklook/\n\nhttps://eclecticlight.co/2024/10/31/how-sequoia-has-changed-quicklook-and-its-thumbnails/\n\nhttps://mjtsai.com/blog/2024/11/05/sequoia-no-longer-supports-quicklook-generator-plug-ins/\n\n## Credits\nDeveloped by [sbarex](https://github.com/sbarex) with :heart:.\n\nHighlight is developed by [Andre Simon](http://www.andre-simon.de/).\n\nDos2unix is developed by [Erwin Waterlander](https://waterlan.home.xs4all.nl/dos2unix.html).\n\nThis application was inspired by [anthonygelibert/QLColorCode](https://github.com/anthonygelibert/QLColorCode) and [NSGod/qlstephen](https://github.com/NSGod/qlstephen).\n\nIf you find this application useful, [buy me a coffee](https://www.buymeacoffee.com/sbarex).\n"
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "ShortcutCommand",
          "type": "tree",
          "content": null
        },
        {
          "name": "SourceCodeSyntaxHighlight.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "Syntax Highlight XPC Render.entitlements",
          "type": "blob",
          "size": 0.1767578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict/>\n</plist>\n"
        },
        {
          "name": "SyntaxHighlightRenderXPC",
          "type": "tree",
          "content": null
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.5244140625,
          "content": "#  TODO\n\n- [ ] When compiling `highlight` avoid the creation of the static library `.a` before the CLI otherwise it will be linked in the executable instead of the dynamic one taking up space. \n- [x] Sometime when compiling the app the custom lua plugins are not embedded.\n- [ ] Update the application help.\n- [ ] Consider whether to incorporate both light and dark styles in the html in order to automatically adapt to the system's style. For RTF [see this link](https://eclecticlight.co/2018/12/10/rendering-rich-text-in-dark-mode/). \n"
        },
        {
          "name": "XPCService",
          "type": "tree",
          "content": null
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "theme: jekyll-theme-slate"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "dos2unix",
          "type": "tree",
          "content": null
        },
        {
          "name": "highlight-wrapper",
          "type": "tree",
          "content": null
        },
        {
          "name": "img.tiff",
          "type": "blob",
          "size": 7.326171875,
          "content": null
        },
        {
          "name": "index.md",
          "type": "blob",
          "size": 0.2978515625,
          "content": "## Syntax Highlight: a quicklook extension for source files\n\nThis application offers a quicklook extension for MacOS 10.15 Catalina or later for previewing source files.\nInside it uses [Highlight](http://www.andre-simon.de/doku/highlight/en/highlight.php) to render source code with syntax highlighting.\n\n"
        },
        {
          "name": "relaunch",
          "type": "tree",
          "content": null
        },
        {
          "name": "support_files.xcfilelist",
          "type": "blob",
          "size": 0.3505859375,
          "content": "#\n$(SRCROOT)/Application/resources/colorize.sh\n$(SRCROOT)/Application/resources/style.css\n$(SRCROOT)/Application/resources/style2.css\n\n$(SRCROOT)/Application/resources/html_editor.lua\n$(SRCROOT)/Application/resources/vcs.lua\n$(SRCROOT)/Application/resources/about.lua\n$(SRCROOT)/Application/resources/debug.lua\n\n$(SRCROOT)/Application/resources/settings.yaml\n"
        },
        {
          "name": "syntax_highlight_cli",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}