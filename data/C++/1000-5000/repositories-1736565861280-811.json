{
  "metadata": {
    "timestamp": 1736565861280,
    "page": 811,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Chatterino/chatterino2",
      "stars": 2109,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".CI",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.8251953125,
          "content": "freebsd_instance:\n  image_family: freebsd-14-0\n\ntask:\n  install_script:\n    - pkg install -y boost-libs git qt6-base qt6-svg qt6-5compat qt6-imageformats qtkeychain-qt6 cmake\n  script: |\n    git submodule init\n    git submodule update\n    mkdir build\n    cd build\n    c++ --version\n    cmake \\\n        -DCMAKE_C_COMPILER=\"cc\" \\\n        -DCMAKE_CXX_COMPILER=\"c++\" \\\n        -DCMAKE_C_FLAGS=\"-O2 -pipe  -fstack-protector-strong -fno-strict-aliasing \"  \\\n        -DCMAKE_CXX_FLAGS=\"-O2 -pipe -fstack-protector-strong -fno-strict-aliasing  \" \\\n        -DLINK_OPTIONS=\"-fstack-protector-strong\" \\\n        -DCMAKE_INSTALL_PREFIX=\"/usr/local\" \\\n        -DUSE_SYSTEM_QTKEYCHAIN=\"ON\" \\\n        -DCMAKE_BUILD_TYPE=\"release\" \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=\"ON\" \\\n        ..\n    cat compile_commands.json\n    make -j $(getconf _NPROCESSORS_ONLN)\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.41015625,
          "content": "Language: Cpp\n\nAccessModifierOffset: -4\nAlignEscapedNewlinesLeft: true\nAllowShortFunctionsOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLambdasOnASingleLine: Empty\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: false\nAlwaysBreakBeforeMultilineStrings: false\nBasedOnStyle: Google\nBraceWrapping:\n  AfterClass: \"true\"\n  AfterControlStatement: \"true\"\n  AfterFunction: \"true\"\n  AfterNamespace: \"false\"\n  BeforeCatch: \"true\"\n  BeforeElse: \"true\"\nBreakBeforeBraces: Custom\nBreakConstructorInitializersBeforeComma: true\nColumnLimit: 80\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nDerivePointerBinding: false\nFixNamespaceComments: true\nIndentCaseLabels: true\nIndentWidth: 4\nIndentWrappedFunctionNames: true\nIndentPPDirectives: AfterHash\nSortIncludes: CaseInsensitive\nIncludeBlocks: Regroup\nIncludeCategories:\n  # Project includes\n  - Regex: '^\"[a-zA-Z\\._-]+(/[a-zA-Z0-9\\._-]+)*\"$'\n    Priority: 1\n  # Qt includes\n  - Regex: '^<Q[a-zA-Z0-9\\._\\/-]+>$'\n    Priority: 3\n    CaseSensitive: true\n  # LibCommuni includes\n  - Regex: \"^<Irc[a-zA-Z]+>$\"\n    Priority: 3\n  # Standard library includes\n  - Regex: \"^<[a-zA-Z_]+>$\"\n    Priority: 4\n  # Third party library includes\n  - Regex: \"^<([a-zA-Z_0-9-]+/)*[a-zA-Z_0-9-]+.h(pp)?>$\"\n    Priority: 3\nNamespaceIndentation: Inner\nPointerBindsToType: false\nSpacesBeforeTrailingComments: 2\nStandard: Auto\nReflowComments: false\nInsertNewlineAtEOF: true\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.337890625,
          "content": "Checks: \"-*,\n  clang-diagnostic-*,\n  llvm-*,\n  misc-*,\n  -misc-unused-parameters,\n  readability-identifier-naming,\n  -llvm-header-guard,\n  -llvm-include-order,\n  modernize-*,\n  readability-*,\n  performance-*,\n  misc-*,\n  bugprone-*,\n  cert-*,\n  cppcoreguidelines-*,\n  -cppcoreguidelines-pro-type-cstyle-cast,\n  -cppcoreguidelines-pro-bounds-pointer-arithmetic,\n  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n  -cppcoreguidelines-owning-memory,\n  -cppcoreguidelines-avoid-magic-numbers,\n  -cppcoreguidelines-avoid-const-or-ref-data-members,\n  -readability-magic-numbers,\n  -performance-noexcept-move-constructor,\n  -misc-non-private-member-variables-in-classes,\n  -misc-no-recursion,\n  -cppcoreguidelines-non-private-member-variables-in-classes,\n  -modernize-use-nodiscard,\n  -modernize-use-trailing-return-type,\n  -readability-identifier-length,\n  -readability-function-cognitive-complexity,\n  -bugprone-easily-swappable-parameters,\n  -cert-err58-cpp,\n  -modernize-avoid-c-arrays,\n  -misc-include-cleaner\n  \"\nCheckOptions:\n  - key: readability-identifier-naming.ClassCase\n    value: CamelCase\n  - key: readability-identifier-naming.EnumCase\n    value: CamelCase\n\n  - key: readability-identifier-naming.FunctionCase\n    value: camelBack\n  - key: readability-identifier-naming.FunctionIgnoredRegexp\n    value: ^(TEST|MOCK_METHOD)$\n\n  - key: readability-identifier-naming.MemberCase\n    value: camelBack\n  - key: readability-identifier-naming.PrivateMemberIgnoredRegexp\n    value: ^.*_$\n  - key: readability-identifier-naming.ProtectedMemberIgnoredRegexp\n    value: ^.*_$\n  - key: readability-identifier-naming.UnionCase\n    value: CamelCase\n  - key: readability-identifier-naming.GlobalConstantCase\n    value: UPPER_CASE\n  - key: readability-identifier-naming.GlobalVariableCase\n    value: UPPER_CASE\n  - key: readability-identifier-naming.VariableCase\n    value: camelBack\n  - key: readability-implicit-bool-conversion.AllowPointerConditions\n    value: true\n\n  # Lua state\n  - key: readability-identifier-naming.LocalPointerIgnoredRegexp\n    value: ^L$\n\n  # Benchmarks\n  - key: readability-identifier-naming.FunctionIgnoredRegexp\n    value: ^BM_[^_]+$\n  - key: readability-identifier-naming.ClassIgnoredRegexp\n    value: ^BM_[^_]+$\n\n  - key: misc-const-correctness.AnalyzeValues\n    value: false\n\n  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor\n    value: true\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.11328125,
          "content": "comment: false\nignore:\n  - \"/usr/local*/**/*\"\n  - \"/usr/include/**/*\"\n  - \"lib/\"\n  - \"**/ui_*.h\"\n  - \"**/moc_*.cpp\"\n"
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "build*\n.mypy_cache\n.cache\n.docker\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.51171875,
          "content": "# If a commit modifies a ton of files and doesn't really contribute to the\n# output of git-blame, please add it here\n#\n# Don't add commits from the same PR you are creating. We squash PRs into a\n# single commit, so references to those commits will be lost\n#\n# 2018 - changed to 80 max column\nf71ff08e686ae76c3dd4084d0f05f27ba9b3fdcb\n#\n# 2018 - added brace wrapping after if and for\ne259b9e39f46f3cb0e4838c988d4f320a03dfaa4\n#\n# 2019 - Normalize line endings in already existing files\nb06eb9df835c25154899fbcf43e9b37addcea1b1\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.078125,
          "content": "# Normalize line endings to LF for files that Git detects as text\n*   text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.38671875,
          "content": "__pycache__/\n\n# C++ objects and libs\n\n*.slo\n*.lo\n*.o\n*.a\n*.la\n*.lai\n*.so\n*.dll\n*.dylib\n\n# Qt-es\n\n/.qmake.cache\n/.qmake.stash\n*.pro.user\n*.pro.user.*\n*.qbs.user\n*.qbs.user.*\n*.moc\nmoc_*.cpp\nqrc_*.cpp\nui_*.h\nMakefile*\n*build-*/\n[bB]uild\n/_build/\n\n# QtCreator\n\n*.autosave\n\n# QtCtreator Qml\n*.qmlproject.user\n*.qmlproject.user.*\n\n# QtCtreator CMake\nCMakeLists.txt.user\n\n# Ignore moc-files\nmoc_*.h\nmoc_*.cpp\n\n# Ignore binary file\n/chatterino\n\nsettings.json\n\n# Ignore any files beginning with activate- as they can be used for account credentials\nactivate-*\n\n.gdb_history\n\n## Vim Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-v][a-z]\n[._]sw[a-p]\n\n# Vim Session\nSession.vim\n\n# Vim Temporary\n.netrwhist\n*~\n# Vim Auto-generated tag files\ntags\n\n# rapidjson directory\nrapidjson/*\n\nThumbs.db\n\n# I HATE MAC\n.DS_Store\n\n# Other editors/IDEs\n.vscode\n.vs\n.idea\ndependencies\n.cache\n.editorconfig\nvim.log\n\n### CMake ###\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\nCMakeUserPresets.json\nCMakePresets.json\nCMakeSettings.json\n\n### CMake Patch ###\n# External projects\n*-prefix/\nStamp\ntmp\nSource\nDependencies_*\n\n# vcpkg\nvcpkg_installed/\n\n# NatVis files\nqt5.natvis\nqt6.natvis\n\n# Autogenerated resource file\nresources/resources_autogenerated.qrc\n\n# Leftovers from running `aqt install`\naqtinstall.log\n\n# sccache (CI)\n.sccache\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.56640625,
          "content": "[submodule \"lib/libcommuni\"]\n\tpath = lib/libcommuni\n\turl = https://github.com/Chatterino/libcommuni\n\tbranch = chatterino-cmake\n[submodule \"lib/WinToast\"]\n\tpath = lib/WinToast\n\turl = https://github.com/mohabouje/WinToast.git\n[submodule \"lib/settings\"]\n\tpath = lib/settings\n\turl = https://github.com/pajlada/settings\n[submodule \"lib/signals\"]\n\tpath = lib/signals\n\turl = https://github.com/pajlada/signals\n[submodule \"lib/serialize\"]\n\tpath = lib/serialize\n\turl = https://github.com/pajlada/serialize\n[submodule \"lib/rapidjson\"]\n\tpath = lib/rapidjson\n\turl = https://github.com/Tencent/rapidjson\n[submodule \"lib/qtkeychain\"]\n\tpath = lib/qtkeychain\n\turl = https://github.com/Chatterino/qtkeychain\n[submodule \"lib/websocketpp\"]\n\tpath = lib/websocketpp\n\turl = https://github.com/zaphoyd/websocketpp\n[submodule \"cmake/sanitizers-cmake\"]\n\tpath = cmake/sanitizers-cmake\n\turl = https://github.com/arsenm/sanitizers-cmake\n[submodule \"lib/magic_enum\"]\n\tpath = lib/magic_enum\n\turl = https://github.com/Neargye/magic_enum\n[submodule \"lib/googletest\"]\n\tpath = lib/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"lib/miniaudio\"]\n\tpath = lib/miniaudio\n\turl = https://github.com/mackron/miniaudio.git\n[submodule \"lib/lua/src\"]\n\tpath = lib/lua/src\n\turl = https://github.com/lua/lua\n\tbranch = v5.4\n[submodule \"tools/crash-handler\"]\n\tpath = tools/crash-handler\n\turl = https://github.com/Chatterino/crash-handler\n[submodule \"lib/expected-lite\"]\n\tpath = lib/expected-lite\n\turl = https://github.com/martinmoene/expected-lite\n[submodule \"lib/sol2\"]\n\tpath = lib/sol2\n\turl = https://github.com/ThePhD/sol2.git\n"
        },
        {
          "name": ".patches",
          "type": "tree",
          "content": null
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.48828125,
          "content": "# JSON resources should not be prettified...\nresources/*.json\nbenchmarks/resources/*.json\ntests/resources/*.json\ntests/snapshots/**/*.json\n# ...themes should be prettified for readability.\n!resources/themes/*.json\n\n# Ignore submodule files\nlib/*/\nconan-pkgs/*/\ncmake/sanitizers-cmake/\ntools/crash-handler\n\n# Build folders\n*build-*/\n[bB]uild\n/_build/\n\n# Editors\n.vscode\n.vs\n.idea\ndependencies\n.cache\n.editorconfig\n\n# vcpkg\nvcpkg_installed/\n\n# Compile commands generated by CMake\ncompile_commands.json\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.1005859375,
          "content": "trailingComma: es5\nendOfLine: auto\noverrides:\n  - files: \"*.md\"\n    options:\n      proseWrap: preserve\n"
        },
        {
          "name": ".sanitizers",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILDING_ON_FREEBSD.md",
          "type": "blob",
          "size": 0.7646484375,
          "content": "# FreeBSD\n\nFor all dependencies below we use Qt 6. Our minimum supported version is Qt 5.15.2, but you are on your own.\n\n## FreeBSD 14.0-RELEASE\n\nNote: This is known to work on FreeBSD 14.0-RELEASE amd64. Chances are\nhigh that this also works on older FreeBSD releases, architectures and\nFreeBSD 15.0-SNAP.\n\n1. Install build dependencies from package sources (or build from the\n   ports tree): `# pkg install boost-libs git qt6-base qt6-svg qt6-5compat qt6-imageformats qtkeychain-qt6 cmake`\n1. In the project directory, create a build directory and enter it\n   ```sh\n   mkdir build\n   cd build\n   ```\n1. Generate build files. To enable Lua plugins in your build add `-DCHATTERINO_PLUGINS=ON` to this command.\n   ```sh\n   cmake ..\n   ```\n1. Build the project\n   ```sh\n   make\n   ```\n"
        },
        {
          "name": "BUILDING_ON_LINUX.md",
          "type": "blob",
          "size": 2.0029296875,
          "content": "# Linux\n\nFor all dependencies below we use Qt 6. Our minimum supported version is Qt 5.15.2, but you are on your own.\n\n## Install dependencies\n\n### Ubuntu\n\nBuilding on Ubuntu requires Docker.\n\nUse <https://github.com/Chatterino/docker/pkgs/container/chatterino2-build-ubuntu-20.04> as your base if you're on Ubuntu 20.04.\n\nUse <https://github.com/Chatterino/docker/pkgs/container/chatterino2-build-ubuntu-22.04> if you're on Ubuntu 22.04.\n\nThe built binary should be exportable from the final image & able to run on your system assuming you perform a static build. See our [build.yml GitHub workflow file](.github/workflows/build.yml) for the CMake line used for Ubuntu builds.\n\n### Debian 12 (bookworm) or later\n\n```sh\nsudo apt install qt6-base-dev qt6-5compat-dev qt6-svg-dev qt6-image-formats-plugins libboost1.81-dev libssl-dev cmake g++ git\n```\n\n### Arch Linux\n\n```sh\nsudo pacman -S --needed qt6-base qt6-tools boost-libs openssl qt6-imageformats qt6-5compat qt6-svg boost rapidjson pkgconf openssl cmake\n```\n\nAlternatively you can use the [chatterino2-git](https://aur.archlinux.org/packages/chatterino2-git/) package to build and install Chatterino for you.\n\n### Fedora 39 and above\n\n_Most likely works the same for other Red Hat-like distros. Substitute `dnf` with `yum`._\n\n```sh\nsudo dnf install qt6-qtbase-devel qt6-qtimageformats qt6-qtsvg-devel qt6-qt5compat-devel g++ git openssl-devel boost-devel cmake\n```\n\n### NixOS 18.09+\n\n```sh\nnix-shell -p openssl boost qt6.full pkg-config cmake\n```\n\n## Compile\n\n## Manually\n\n1. In the project directory, create a build directory and enter it\n   ```sh\n   mkdir build\n   cd build\n   ```\n1. Generate build files. To enable Lua plugins in your build add `-DCHATTERINO_PLUGINS=ON` to this command.\n   ```sh\n   cmake -DBUILD_WITH_QTKEYCHAIN=OFF ..\n   ```\n1. Build the project\n   ```sh\n   cmake --build .\n   ```\n\n### Through Qt Creator\n\n1. Install C++ IDE Qt Creator by using `sudo apt install qtcreator` (Or whatever equivalent for your distro)\n1. Open `CMakeLists.txt` with Qt Creator and select build\n"
        },
        {
          "name": "BUILDING_ON_MAC.md",
          "type": "blob",
          "size": 1.171875,
          "content": "# Building on macOS\n\nChatterino2 is built in CI on Intel on macOS 13.\nLocal dev machines for testing are available on Apple Silicon on macOS 13.\n\n## Installing dependencies\n\n1. Install Xcode and Xcode Command Line Utilities\n1. Start Xcode, go into Settings -> Locations, and activate your Command Line Tools\n1. Install [Homebrew](https://brew.sh/#install)  \n   We use this for dependency management on macOS\n1. Install all dependencies:  \n   `brew install boost openssl@3 rapidjson cmake qt@6`\n\n## Building\n\n### Building from terminal\n\n1. Open a terminal\n1. Go to the project directory where you cloned Chatterino2 & its submodules\n1. Create a build directory and go into it:  \n   `mkdir build && cd build`\n1. Run CMake. To enable Lua plugins in your build add `-DCHATTERINO_PLUGINS=ON` to this command.  \n   `cmake -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt@6 ..`\n1. Build:  \n   `make`\n\nYour binary can now be found under bin/chatterino.app/Contents/MacOS/chatterino directory\n\n### Other building methods\n\nYou can achieve similar results by using an IDE like Qt Creator, although this is undocumented but if you know the IDE you should have no problems applying the terminal instructions to your IDE.\n"
        },
        {
          "name": "BUILDING_ON_WINDOWS.md",
          "type": "blob",
          "size": 13.193359375,
          "content": "# Building on Windows\n\n**Note that installing all the development prerequisites and libraries will require about 12 GB of free disk space. Please ensure this space is available on your `C:` drive before proceeding.**\n\nThis guide assumes you are on a 64-bit system. You might need to manually search out alternate download links should you desire to build Chatterino on a 32-bit system.\n\n## Prerequisites\n\n### Visual Studio\n\nDownload and install [Visual Studio 2022 Community](https://visualstudio.microsoft.com/downloads/). In the installer, select \"Desktop development with C++\".\n\nNotes:\n\n- This installation will take about 8 GB of disk space\n- You do not need to sign in with a Microsoft account after setup completes. You may simply exit the login dialog.\n\n### Qt\n\n1. Visit the [Qt Open Source Page](https://www.qt.io/download-open-source).\n2. Scroll down to the bottom\n3. Then select \"Download the Qt Online Installer\"\n4. Within the installer, Qt will prompt you to create an account to access Qt downloads.\n\nNotes:\n\n- Installing the latest **stable** Qt version is advised for new installations, but if you want to use your existing installation please ensure you are running **Qt 5.15.2 or later**.\n\n#### Components\n\nWhen prompted which components to install, do the following:\n\n1. Unfold the tree element that says \"Qt\"\n2. Unfold the top most tree element (latest stable Qt version, e.g. `Qt 6.5.3`)\n3. Under this version, select the following entries:\n   - `MSVC 2019 64-bit` (or `MSVC 2022 64-bit` from Qt 6.8 onwards)\n   - `Qt 5 Compatibility Module`\n   - `Additional Libraries` > `Qt Image Formats`\n4. Under the \"Tools\" tree element (at the bottom), ensure that `Qt Creator X.X.X` and `Debugging Tools for Windows` are selected. (they should be checked by default)\n5. Continue through the installer and let the installer finish installing Qt.\n\nNote: This installation will take about 2 GB of disk space.\n\nOnce Qt is done installing, make sure you add its bin directory to your `PATH` (e.g. `C:\\Qt\\6.5.3\\msvc2019_64\\bin`)\n\n<details>\n   <summary>How to add Qt to PATH</summary>\n\n1. Type \"path\" in the Windows start menu and click `Edit the system environment variables`.\n2. Click the `Environment Variables...` button bottom right.\n3. In the `User variables` (scoped to the current user) or `System variables` (system-wide) section, scroll down until you find `Path` and double click it.\n4. Click the `New` button top right and paste in the file path for your Qt installation (e.g. `C:\\Qt\\6.5.3\\msvc2019_64\\bin` by default).\n5. Click `Ok`\n\n</details>\n\n### Advanced dependencies\n\nThese dependencies are only required if you are not using a package manager\n\n<details>\n<summary>Boost</summary>\n\n1. First, download a boost installer appropriate for your version of Visual Studio.\n\n   - Visit the downloads list on [SourceForge](https://sourceforge.net/projects/boost/files/boost-binaries/).\n   - Select the latest version from the list.\n   - Download the `.exe` file appropriate to your Visual Studio installation version and system bitness (choose `-64` for 64-bit systems).\n     Visual Studio versions map as follows: `14.3` in the filename corresponds to MSVC 2022. _Anything prior to Visual Studio 2022 is unsupported. Please upgrade should you have an older installation._\n\n     **Convenience link for Visual Studio 2022: [boost_1_84_0-msvc-14.3-64.exe](https://sourceforge.net/projects/boost/files/boost-binaries/1.84.0/boost_1_84_0-msvc-14.3-64.exe/download)**\n\n2. When prompted where to install Boost, set the location to `C:\\local\\boost`.\n3. After the installation finishes, rename the `C:\\local\\boost\\lib64-msvc-14.3` (or similar) directory to simply `lib` (`C:\\local\\boost\\lib`).\n\nNote: This installation will take about 2.1 GB of disk space.\n\n</details>\n\n## Building\n\n### Using CMake\n\n#### Install conan 2\n\nInstall [conan 2](https://conan.io/downloads.html) and make sure it's in your `PATH` (default setting).\n\n<details>\n   <summary>Adding conan to your PATH if you installed it with pip</summary>\n\n_Note: This will add all Python-scripts to your `PATH`, conan being one of them._\n\n1. Type \"path\" in the Windows start menu and click `Edit the system environment variables`.\n2. Click the `Environment Variables...` button bottom right.\n3. In the `System variables` section, scroll down until you find `Path` and double click it.\n4. Click the `New` button top right.\n5. Open up a terminal `where.exe conan` to find the file path (the folder that contains the conan.exe) to add.\n6. Add conan 2's file path (e.g. `C:\\Users\\example\\AppData\\Roaming\\Python\\Python311\\Scripts`) to the blank text box that shows up. This is your current Python installation's scripts folder.\n7. Click `Ok`\n\n</details>\n\nThen in a terminal, configure conan to use `NMake Makefiles` as its generator:\n\n1. Generate a new profile  \n   `conan profile detect`\n\n#### Build\n\nOpen up your terminal with the Visual Studio environment variables (e.g. `x64 Native Tools Command Prompt for VS 2022`), cd to the cloned chatterino2 directory and run the following commands:\n\n```cmd\nmkdir build\ncd build\nconan install .. -s build_type=Release -c tools.cmake.cmaketoolchain:generator=\"NMake Makefiles\" --build=missing --output-folder=.\ncmake -G\"NMake Makefiles\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"conan_toolchain.cmake\" -DCMAKE_PREFIX_PATH=\"C:\\Qt\\6.5.3\\msvc2019_64\" ..\nnmake\n```\n\nTo build a debug build, you'll also need to add the `-s compiler.runtime_type=Debug` flag to the `conan install` invocation. See [this StackOverflow post](https://stackoverflow.com/questions/59828611/windeployqt-doesnt-deploy-qwindowsd-dll-for-a-debug-application/75607313#75607313)\nTo build with plugins add `-DCHATTERINO_PLUGINS=ON` to `cmake` command.\n\n#### Deploying Qt libraries\n\nOnce Chatterino has finished building, to ensure all .dll's are available you can run this from the build directory:  \n`windeployqt bin/chatterino.exe --release --no-compiler-runtime --no-translations --no-opengl-sw --dir bin/`\n\nCan't find windeployqt? You forgot to add your Qt bin directory (e.g. `C:\\Qt\\6.5.3\\msvc2019_64\\bin`) to your `PATH`\n\n### Developing in Qt Creator\n\n1. Open the `CMakeLists.txt` file by double-clicking it, or by opening it via Qt Creator.\n2. You will be presented with a screen that is titled \"Configure Project\". In this screen, you should have at least one option present ready to be configured, like this:\n   ![Qt Create Configure Project screenshot](https://user-images.githubusercontent.com/69117321/169887645-2ae0871a-fe8a-4eb9-98db-7b996dea3a54.png)\n3. Select the profile(s) you want to build with and click \"Configure Project\".\n\n#### Building and running\n\n- In the main screen, click the green \"play symbol\" on the bottom left to run the project directly.\n- Click the hammer on the bottom left to generate a build (does not run the build though).\n\nBuild results will be placed in a folder at the same level as the \"chatterino2\" project folder (e.g. if your sources are at `C:\\Users\\example\\src\\chatterino2`, then the build will be placed in an automatically generated folder under `C:\\Users\\example\\src`, e.g. `C:\\Users\\example\\src\\build-chatterino-Desktop_Qt_6.5.3_MSVC2019_64bit-Release`.)\n\n- Note that if you are building Chatterino purely for usage, not for development, it is recommended that you click the \"PC\" icon above the play icon and select \"Release\" instead of \"Debug\".\n- Output and error messages produced by the compiler can be seen under the \"4 Compile Output\" tab in Qt Creator.\n\n#### Producing standalone builds\n\nIf you build Chatterino, the result directories will contain a `chatterino.exe` file in the `$OUTPUTDIR\\release\\` directory. This `.exe` file will not directly run on any given target system, because it will be lacking various Qt runtimes.\n\nTo produce a standalone package, you need to generate all required files using the tool `windeployqt`. This tool can be found in the `bin` directory of your Qt installation, e.g. at `C:\\Qt\\6.5.3\\msvc2019_64\\bin\\windeployqt.exe`.\n\nTo produce all supplement files for a standalone build, follow these steps (adjust paths as required):\n\n1. Navigate to your build output directory with Windows Explorer, e.g. `C:\\Users\\example\\src\\build-chatterino-Desktop_Qt_6.5.3_MSVC2019_64bit-Release`\n2. Enter the `release` directory\n3. Delete all files except the `chatterino.exe` file. You should be left with a directory only containing `chatterino.exe`.\n4. Open a command prompt and execute:\n   ```cmd\n   cd C:\\Users\\example\\src\\build-chatterino-Desktop_Qt_6.5.3_MSVC2019_64bit-Release\\release\n   windeployqt bin/chatterino.exe --release --no-compiler-runtime --no-translations --no-opengl-sw --dir bin/\n   ```\n5. The `releases` directory will now be populated with all the required files to make the Chatterino build standalone.\n\nYou can now create a zip archive of all the contents in `releases` and distribute the program as is, without requiring any development tools to be present on the target system. (However, the CRT must be present, as usual - see the [README](README.md)).\n\n#### Formatting\n\nTo automatically format your code, do the following:\n\n1. Download [LLVM 16.0.6](https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.6/LLVM-16.0.6-win64.exe)\n2. During the installation, make sure to add it to your path\n3. Enable Beautifier under `Extensions` on the left (check \"Load on start\" and restart)\n4. In Qt Creator, Select `Tools` > `Options` > `Beautifier`\n5. Under `General` select `Tool: ClangFormat` and enable `Automatic Formatting on File Save`\n6. Under `Clang Format` select `Use predefined style: File` and `Fallback style: None`\n\n### Building on MSVC with AddressSanitizer\n\nMake sure you installed `C++ AddressSanitizer` in your VisualStudio installation like described in the [Microsoft Docs](https://learn.microsoft.com/en-us/cpp/sanitizers/asan#install-the-addresssanitizer).\n\nTo build Chatterino with AddressSanitizer on MSVC, you need to add `-DCMAKE_CXX_FLAGS=/fsanitize=address` to your CMake options.\n\nWhen you start Chatterino, and it's complaining about `clang_rt.asan_dbg_dynamic-x86_64.dll` missing,\ncopy the file found in `<VisualStudio-installation-path>\\VC\\Tools\\MSVC\\<version>\\bin\\Hostx64\\x64\\clang_rt.asan_dbg_dynamic-x86_64.dll` to the `Chatterino` folder inside your `build` folder.\n\nTo learn more about AddressSanitizer and MSVC, visit the [Microsoft Docs](https://learn.microsoft.com/en-us/cpp/sanitizers/asan).\n\n### Developing in CLion\n\n_Note:_ We're using `build` instead of the CLion default `cmake-build-debug` folder.\n\nInstall [conan](https://conan.io/downloads.html) and make sure it's in your `PATH` (default setting).\n\nClone the repository as described in the readme. Open a terminal in the cloned folder and enter the following commands:\n\n1. `mkdir build && cd build`\n2. `conan install .. -s build_type=Debug`\n\nNow open the project in CLion. You will be greeted with the _Open Project Wizard_. Set the _CMake Options_ to\n\n```text\n-DCMAKE_PREFIX_PATH=C:\\Qt\\6.5.3\\msvc2019_64\\lib\\cmake\\Qt6\n-DCMAKE_TOOLCHAIN_FILE=\"conan_toolchain.cmake\"\n```\n\nand the _Build Directory_ to `build`.\n\n<details>\n<summary>Screenshot of CMake configuration</summary>\n\n![Screenshot CMake configuration](https://user-images.githubusercontent.com/41973452/160240561-26ec205c-20af-4aa5-a6a3-b87a27fc16eb.png)\n\n</details>\n\nAfter the CMake project is loaded, open the _Run/Debug Configurations_.\n\nSelect the `CMake Applications > chatterino` configuration and add a new _Run External tool_ task to _Before launch_.\n\n- Set the _Program_ to `C:\\Qt\\6.5.3\\msvc2019_64\\bin\\windeployqt.exe`\n- Set the _Arguments_\n  to `$CMakeCurrentProductFile$ --debug --no-compiler-runtime --no-translations --no-opengl-sw --dir bin/`\n- Set the _Working directory_ to `$ProjectFileDir$\\build`\n\n<details>\n<summary>Screenshot of External tool</summary>\n\n![Screenshot of External Tool](https://user-images.githubusercontent.com/41973452/160240818-f4b41525-3de9-4e3d-8228-98beab2a3ead.png)\n\n</details>\n\n<details>\n<summary>Screenshot of Chatterino configuration</summary>\n\n![Screenshot of Chatterino configuration](https://user-images.githubusercontent.com/41973452/160240843-dc0c603c-227f-4f56-98ca-57f03989dfb4.png)\n\n</details>\n\nNow you can run the `chatterino | Debug` configuration.\n\nIf you want to run the portable version of Chatterino, create a file called `modes` inside `build/bin` and\nwrite `portable` into it.\n\n#### Debugging\n\nTo visualize Qt types like `QString`, you need to inform CLion and LLDB\nabout these types.\n\n1. Set `Enable NatVis renderers for LLDB option`\n   in `Settings | Build, Execution, Deployment | Debugger | Data Views | C/C++` (should be enabled by default).\n2. Use the official NatVis file for Qt from [`qt-labs/vstools`](https://github.com/qt-labs/vstools) by saving them to\n   the project root using PowerShell:\n\n<!--\nWe can't use Invoke-RestMethod here, because it will automatically convert the body to an xml document.\n-->\n\n```powershell\n(iwr \"https://github.com/qt-labs/vstools/raw/dev/QtVsTools.Package/qt6.natvis.xml\").Content.Replace('##NAMESPACE##::', '') | Out-File qt6.natvis\n# [OR] using the permalink\n(iwr \"https://github.com/qt-labs/vstools/raw/1c8ba533bd88d935be3724667e0087fd0796102c/QtVsTools.Package/qt6.natvis.xml\").Content.Replace('##NAMESPACE##::', '') | Out-File qt6.natvis\n```\n\nNow you can debug the application and see Qt types rendered correctly.\nIf this didn't work for you, try following\nthe [tutorial from JetBrains](https://www.jetbrains.com/help/clion/qt-tutorial.html#debug-renderers).\n"
        },
        {
          "name": "BUILDING_ON_WINDOWS_WITH_VCPKG.md",
          "type": "blob",
          "size": 2.1962890625,
          "content": "# Building on Windows with vcpkg\n\nThis will require more than 30 GB of free space on your hard drive.\n\n## Prerequisites\n\n1. Install [Visual Studio](https://visualstudio.microsoft.com/) with \"Desktop development with C++\"\n1. Install [CMake](https://cmake.org/)\n1. Install [git](https://git-scm.com/)\n1. Install [vcpkg](https://vcpkg.io/)\n\n   ```shell\n   git clone https://github.com/Microsoft/vcpkg.git\n   cd vcpkg\n   .\\bootstrap-vcpkg.bat\n   .\\vcpkg integrate install\n   .\\vcpkg integrate powershell\n   cd ..\n   ```\n\n1. Configure the environment variables for vcpkg.  \n    Check [this document](https://gist.github.com/mitchmindtree/92c8e37fa80c8dddee5b94fc88d1288b#setting-an-environment-variable-on-windows) for more information for how to set environment variables on Windows.\n   - Ensure your dependencies are built as 64-bit  \n     e.g. `setx VCPKG_DEFAULT_TRIPLET x64-windows`  \n     See [documentation about Triplets](https://learn.microsoft.com/en-gb/vcpkg/users/triplets)  \n     [default](https://github.com/microsoft/vcpkg/blob/master/docs/users/triplets.md#additional-remarks) is `x86-windows`\n   - Set VCPKG_ROOT to the vcpkg path  \n     e.g. `setx VCPKG_ROOT <path to vcpkg>`  \n     See [VCPKG_ROOT documentation](https://learn.microsoft.com/en-gb/vcpkg/users/config-environment#vcpkg_root)\n   - Append the vcpkg path to your path  \n     e.g. `setx PATH \"%PATH%;<path to vcpkg>\"`\n   - For more configurations, see <https://learn.microsoft.com/en-gb/vcpkg/users/config-environment>\n1. You may need to restart your computer to ensure all your environment variables and what-not are loaded everywhere.\n\n## Building\n\n1. Clone\n   ```shell\n   git clone --recurse-submodules https://github.com/Chatterino/chatterino2.git\n   ```\n1. Install dependencies\n   ```powershell\n   cd .\\chatterino2\\\n   vcpkg install\n   ```\n1. Build\n   ```powershell\n   cmake -B build -DCMAKE_TOOLCHAIN_FILE=\"$Env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake\"\n   cd build\n   cmake --build . --parallel <threads> --config Release\n   ```\n   When using CMD, use `-DCMAKE_TOOLCHAIN_FILE=%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake` to specify the toolchain.\n   To build with plugins add `-DCHATTERINO_PLUGINS=ON` to `cmake -B build` command.\n1. Run `.\\bin\\chatterino2.exe`\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 88.2578125,
          "content": "# Changelog\n\n## Unversioned\n\n- Bugfix: Fixed a crash relating to Lua HTTP. (#5800)\n\n## 2.5.2\n\n- Bugfix: Fixed a crash in the 7TV EventApi when closing Chatterino. (#5768)\n- Bugfix: Fixed scrollbar highlights being visible in overlay windows. (#5769)\n- Bugfix: Make macos fonts look the same as v2.5.1. (#5775)\n- Bugfix: Fixed 7TV usernames messing with Qt's HTML (#5780)\n- Bugfix: Fixed BTTV emotes occasionally showing the wrong author. (#5783)\n- Bugfix: Fixed some Twitch emotes containing HTML entities. (#5786)\n- Bugfix: Fixed the same blocked term showing up more than once. (#5789)\n- Dev: Hard-code Boost 1.86.0 in macos CI builders. (#5774)\n\n## 2.5.2-beta.1\n\n- Major: Add option to show pronouns in user card. (#5442, #5583)\n- Major: Release plugins alpha. (#5288)\n- Major: Improve high-DPI support on Windows. (#4868, #5391, #5664, #5666)\n- Major: Added transparent overlay window (default keybind: <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>N</kbd>). (#4746, #5643, #5659)\n- Minor: Removed the Ctrl+Shift+L hotkey for toggling the \"live only\" tab visibility state. (#5530)\n- Minor: Add support for Shared Chat messages. Shared chat messages can be filtered with the `flags.shared` filter variable, or with search using `is:shared`. Some messages like subscriptions are filtered on purpose to avoid confusion for the broadcaster. If you have both channels participating in Shared Chat open, only one of the message triggering your highlight will trigger. (#5606, #5625, #5661)\n- Minor: Moved tab visibility control to a submenu, without any toggle actions. (#5530)\n- Minor: Add option to customise Moderation buttons with images. (#5369)\n- Minor: Colored usernames now update on the fly when changing the \"Color @usernames\" setting. (#5300)\n- Minor: Added `flags.action` filter variable, allowing you to filter on `/me` messages. (#5397)\n- Minor: Added the ability for `/ban`, `/timeout`, `/unban`, and `/untimeout` to specify multiple channels to duplicate the action to. Example: `/timeout --channel id:11148817 --channel testaccount_420 forsen 7m game complaining`. (#5402)\n- Minor: The size of the emote popup is now saved. (#5415, #5751)\n- Minor: Added the ability to duplicate tabs. (#5277)\n- Minor: Improved error messages for channel update commands. (#5429)\n- Minor: Moderators can now see when users are warned. (#5441)\n- Minor: Added support for Brave & google-chrome-stable browsers. (#5452)\n- Minor: Added drop indicator line while dragging in tables. (#5256)\n- Minor: Add channel points indication for new bits power-up redemptions. (#5471)\n- Minor: Added option to log streams by their ID, allowing for easier \"per-stream\" log analyzing. (#5507)\n- Minor: Added `/warn <username> <reason>` command for mods. This prevents the user from chatting until they acknowledge the warning. (#5474)\n- Minor: Added option to suppress live notifictions on startup. (#5388)\n- Minor: Improve appearance of reply button. (#5491)\n- Minor: Introduce HTTP API for plugins. (#5383, #5492, #5494)\n- Minor: Support more Firefox variants for incognito link opening. (#5503)\n- Minor: Replying to a message will now display the message being replied to. (#4350, #5519, #5586)\n- Minor: Links can now have prefixes and suffixes such as parentheses. (#5486, #5515)\n- Minor: Added support for scrolling in splits with touchscreen panning gestures. (#5524)\n- Minor: Removed experimental IRC support. (#5547)\n- Minor: Remember last popup size for next popup. (#5635)\n- Minor: Moderators can now see which mods start and cancel raids. (#5563)\n- Minor: The emote popup now reloads when Twitch emotes are reloaded. (#5580)\n- Minor: Added `--login <username>` CLI argument to specify which account to start logged in as. (#5626)\n- Minor: When blocking a channel, Chatterino will now warn you about that action. (#5615)\n- Minor: Indicate when subscriptions and resubscriptions are for multiple months. (#5642)\n- Minor: Added a setting to control whether or not to show \"Blocked Term\" automod messages. (#5690)\n- Minor: Improved AutoMod messaging when messages are blocked due to containing blocked terms. (#5699, #5759)\n- Minor: Proxy URL information is now included in the `/debug-env` command. (#5648)\n- Minor: Make raid entry message usernames clickable. (#5651)\n- Minor: Tabs unhighlight when their content is read in other tabs. (#5649)\n- Minor: Made usernames in bits and sub messages clickable. (#5686)\n- Minor: Mentions of FrankerFaceZ and BetterTTV in settings are standardized as such. (#5698)\n- Minor: Emote names are no longer duplicated when using smarter emote completion. (#5705)\n- Minor: Added a setting to hide the scrollbar thumb (the handle you can drag). Hiding the scrollbar thumb will disable mouse click & drag interactions in the scrollbar. (#5731)\n- Minor: Added a setting to hide the scrollbar highlights. (#5732)\n- Minor: The window layout is now backed up like the other settings. (#5647)\n- Minor: Added `flags.similar` filter variable, allowing you to filter messages filtered by the R9K feature. (#5747)\n- Bugfix: Fixed tab move animation occasionally failing to start after closing a tab. (#5426, #5612)\n- Bugfix: If a network request errors with 200 OK, Qt's error code is now reported instead of the HTTP status. (#5378)\n- Bugfix: Fixed restricted users usernames not being clickable. (#5405)\n- Bugfix: Fixed a crash that could occur when logging was enabled in IRC servers that were removed. (#5419)\n- Bugfix: Fixed message history occasionally not loading after a sleep. (#5457)\n- Bugfix: Fixed a crash when tab completing while having an invalid plugin loaded. (#5401)\n- Bugfix: Fixed windows on Windows not saving correctly when snapping them to the edges. (#5478)\n- Bugfix: Fixed user info card popups adding duplicate line to log files. (#5499)\n- Bugfix: Fixed tooltips and input completion popups not working after moving a split. (#5541, #5576)\n- Bugfix: Fixed rare issue on shutdown where the client would hang. (#5557)\n- Bugfix: Fixed `/clearmessages` not working with more than one window. (#5489)\n- Bugfix: Fixed splits staying paused after unfocusing Chatterino in certain configurations. (#5504, #5637)\n- Bugfix: Links with invalid characters in the domain are no longer detected. (#5509)\n- Bugfix: Fixed janky selection for messages with RTL segments (selection is still wrong, but consistently wrong). (#5525)\n- Bugfix: Fixed event emotes not showing up in autocomplete and popups. (#5239, #5580, #5582, #5632)\n- Bugfix: Fixed tab visibility being controllable in the emote popup. (#5530)\n- Bugfix: Fixed account switch not being saved if no other settings were changed. (#5558)\n- Bugfix: Fixed a crash that could occur when handling the quick switcher popup really quickly. (#5687)\n- Bugfix: Fixed 7TV badges being inadvertently animated. (#5674)\n- Bugfix: Fixed some tooltips not being readable. (#5578)\n- Bugfix: Fixed log files being locked longer than needed. (#5592)\n- Bugfix: Fixed global badges not showing in anonymous mode. (#5599)\n- Bugfix: Fixed grammar in the user highlight page. (#5602)\n- Bugfix: Fixed incorrect message being disabled in some cases upon approving or denying an automod caught message. (#5611)\n- Bugfix: Fixed network requests timing out despite them not being in flight for that long, for Qt 6.3+ where we have the technology. (#5729)\n- Bugfix: Fixed double-click selection not working when clicking outside a message. (#5617)\n- Bugfix: Fixed a rare crash that could occur on Windows if a toast was about to fire just as we were shutting down. (#5728, #5752)\n- Bugfix: Fixed emotes starting with \":\" not tab-completing. (#5603)\n- Bugfix: Fixed 7TV emotes messing with Qt's HTML. (#5677)\n- Bugfix: Fixed incorrect messages getting replaced visually. (#5683)\n- Bugfix: Fixed rendering of multi-line selection that starts at a trailing space. (#5691)\n- Bugfix: Fixed pause indicator not appearing in certain cases. (#5707)\n- Bugfix: Fixed usercards not showing the login name in specific cases. (#5738)\n- Dev: Default build with Qt6 on all platforms. (#5716)\n- Dev: Update Windows build from Qt 6.5.0 to Qt 6.7.1. (#5420)\n- Dev: Update vcpkg build Qt from 6.5.0 to 6.7.0, boost from 1.83.0 to 1.85.0, openssl from 3.1.3 to 3.3.0. (#5422)\n- Dev: Unsingletonize `ISoundController`. (#5462)\n- Dev: Use Qt's high DPI scaling. (#4868, #5400)\n- Dev: Removed cosmetic \"Also match the trigger at the end of the message\" setting. (#5745)\n- Dev: Add doxygen build target. (#5377)\n- Dev: Make printing of strings in tests easier. (#5379)\n- Dev: Refactor and document `Scrollbar`. (#5334, #5393)\n- Dev: Refactor `TwitchIrcServer`, making it abstracted. (#5421, #5435)\n- Dev: Reduced the amount of scale events. (#5404, #5406)\n- Dev: Refactored settings widget creation. (#5585)\n- Dev: Removed unused timegate settings. (#5361)\n- Dev: Add `Channel::addSystemMessage` helper function, allowing us to avoid the common `channel->addMessage(makeSystemMessage(...));` pattern. (#5500)\n- Dev: Unsingletonize `Resources2`. (#5460)\n- Dev: All Lua globals now show in the `c2` global in the LuaLS metadata. (#5385, #5682)\n- Dev: Images are now loaded in worker threads. (#5431)\n- Dev: Fixed broken `SignalVector::operator[]` implementation. (#5556)\n- Dev: Qt Creator now auto-configures Conan when loading the project and skips vcpkg. (#5305)\n- Dev: The MSVC CRT is now bundled with Chatterino as it depends on having a recent version installed. (#5447)\n- Dev: Refactor/unsingletonize `UserDataController`. (#5459)\n- Dev: Cleanup `BrowserExtension`. (#5465)\n- Dev: Deprecate Qt 5.12. (#5396)\n- Dev: Refactored `MessageFlag` into its own file. (#5549)\n- Dev: The running Qt version is now shown in the about page if it differs from the compiled version. (#5501)\n- Dev: `FlagsEnum` is now `constexpr`. (#5510)\n- Dev: Documented and added tests to RTL handling. (#5473)\n- Dev: Refactored 7TV/BTTV definitions out of `TwitchIrcServer` into `Application`. (#5532)\n- Dev: Refactored code that's responsible for deleting old update files. (#5535)\n- Dev: Cleanly exit on shutdown. (#5537)\n- Dev: Removed the `getTwitchAbstract` method in `Application`. (#5560)\n- Dev: Renamed threads created by Chatterino on Linux and Windows. (#5538, #5539, #5544)\n- Dev: Refactored a few `#define`s into `const(expr)` and cleaned includes. (#5527)\n- Dev: Added `FlagsEnum::isEmpty`. (#5550)\n- Dev: Prepared for Qt 6.8 by addressing some deprecations. (#5529)\n- Dev: Moved some responsibility away from Application into WindowManager. (#5551)\n- Dev: Fixed benchmarks segfaulting on run. (#5559)\n- Dev: Refactored `MessageBuilder` to be a single class. (#5548)\n- Dev: Recent changes are now shown in the nightly release description. (#5553, #5554, #5593)\n- Dev: The timer for `StreamerMode` is now destroyed on the correct thread. (#5571, #5624)\n- Dev: Cleanup some parts of the `magic_enum` adaptation for Qt. (#5587)\n- Dev: Refactored `static`s in headers to only be present once in the final app. (#5588)\n- Dev: Run benchmarks in CI. (#5610)\n- Dev: Added more tests for input completion. (#5604)\n- Dev: Refactored legacy Unicode zero-width-joiner replacement. (#5594)\n- Dev: The JSON output when copying a message (<kbd>SHIFT</kbd> + right-click) is now more extensive. (#5600)\n- Dev: Added more tests for message building. (#5598, #5654, #5656, #5671)\n- Dev: `GIFTimer` is no longer initialized in tests. (#5608)\n- Dev: Emojis now use flags instead of a set of strings for capabilities. (#5616)\n- Dev: Move plugins to Sol2. (#5622, #5682)\n- Dev: Clarified our Lua dependency's version. (#5693)\n- Dev: Specified qtkeychain dependency version. (#5695, #5697)\n- Dev: Refactored static `MessageBuilder` helpers to standalone functions. (#5652)\n- Dev: Decoupled reply parsing from `MessageBuilder`. (#5660, #5668)\n- Dev: Refactored IRC message building. (#5663)\n- Dev: Fixed some compiler warnings. (#5672)\n- Dev: Explicitly print output from `--version` to `stdout`. (#5727)\n- Dev: Unified parsing of historic and live IRC messages. (#5678)\n- Dev: 7TV's `entitlement.reset` is now explicitly ignored. (#5685)\n- Dev: Qt 6.8 and later now default to the GDI fontengine. (#5710)\n- Dev: Moved to condition variables when shutting down worker threads. (#5721, #5733)\n- Dev: Reduced layouts in channel views when setting a channel. (#5737, #5748, #5757)\n\n## 2.5.1\n\n- Bugfix: Fixed links without a protocol not being clickable. (#5345)\n\n## 2.5.0\n\n- Major: Twitch follower emotes can now be correctly tabbed in other channels when you are subscribed to the channel the emote is from. (#4922)\n- Major: Added `/automod` split to track automod caught messages across all open channels the user moderates. (#4986, #5026)\n- Major: Moderators can now see restricted chat messages and suspicious treatment updates. (#5056, #5060)\n- Minor: Migrated to the new Get Channel Followers Helix endpoint, fixing follower count not showing up in usercards. (#4809)\n- Minor: Moderation commands such as `/ban`, `/timeout`, `/unban`, and `/untimeout` can now be used via User IDs by using the `id:123` syntax (e.g. `/timeout id:22484632 1m stop winning`). (#4945, #4956, #4957)\n- Minor: The `/usercard` command now accepts user ids. (`/usercard id:22484632`) (#4934)\n- Minor: Added menu actions to reply directly to a message or the original thread root. (#4923)\n- Minor: The `/reply` command now replies to the latest message from the user. Due to this change, the message you intended to reply to is now shown in the reply context, instead of the first message in a thread. (#4919)\n- Minor: The chatter list button is now hidden if you don't have moderator privileges. (#5245)\n- Minor: Live streams that are marked as reruns now mark a tab as yellow instead of red. (#5176, #5237)\n- Minor: Allowed theming of tab live and rerun indicators. (#5188)\n- Minor: The _Restart on crash_ setting works again on Windows. (#5012)\n- Minor: Added an option to use new experimental smarter emote completion. (#4987)\n- Minor: Added support for FrankerFaceZ channel badges. These can be configured at https://www.frankerfacez.com/channel/mine - currently only supports bot badges for your chat bots. (#5119)\n- Minor: Added support to send /announce[color] commands. Colored announcements only appear with the chosen color in Twitch chat. (#5250)\n- Minor: The whisper highlight color can now be configured through the settings. (#5053)\n- Minor: Added an option to always include the broadcaster in user completions. This is enabled by default. (#5193, #5244)\n- Minor: Added a warning message if you have multiple commands with the same trigger. (#4322)\n- Minor: Chatters from message history are now added to autocompletion. (#5116)\n- Minor: Added support for the `{input.text}` placeholder in the **Split** -> **Run a command** hotkey. (#5130)\n- Minor: Added `--activate <channel>` (or `-a`) command line option to focus or add a certain Twitch channel on startup. (#5111)\n- Minor: Added the `--incognito/--no-incognito` options to the `/openurl` command, allowing you to override the \"Open links in incognito/private mode\" setting. (#5149, #5197)\n- Minor: Added the ability to change the top-most status of a window regardless of the _Always on top_ setting (right click the notebook). (#5135)\n- Minor: Added the ability to show AutoMod caught messages in mentions. (#5215)\n- Minor: Added the ability to configure the color of highlighted AutoMod caught messages. (#5215)\n- Minor: Updated to Emoji v15.1. Google emojis are now used as the fallback instead of Twitter emojis. (#5182)\n- Minor: Added icons for newer versions of macOS. (#5148)\n- Minor: Added more menu items in macOS menu bar. (#5266)\n- Minor: Improved color selection and display. (#5057)\n- Minor: Added a _System_ theme setting that updates according to the system's color scheme (requires Qt 6.5). (#5118)\n- Minor: Normalized the input padding between light & dark themes. (#5095)\n- Minor: The account switcher is now styled to match your theme. (#4817)\n- Minor: Added a fallback theme field to custom themes that will be used in case the custom theme does not contain a color Chatterino needs. If no fallback theme is specified, we'll pull the color from the included Dark or Light theme. (#5198)\n- Minor: Added a new completion API for experimental plugins feature. (#5000, #5047)\n- Minor: Added a new Channel API for experimental plugins feature. (#5141, #5184, #5187)\n- Minor: Introduce `c2.later()` function to Lua API. (#5154)\n- Minor: Added `--safe-mode` command line option that can be used for troubleshooting when Chatterino is misbehaving or is misconfigured. It disables hiding the settings button & prevents plugins from loading. (#4985)\n- Minor: Added wrappers for Lua `io` library for experimental plugins feature. (#5231)\n- Minor: Added permissions to experimental plugins feature. (#5231)\n- Minor: Added missing periods at various moderator messages and commands. (#5061)\n- Minor: Improved Streamlink documentation in the settings dialog. (#5076)\n- Minor: The installer now checks for the VC Runtime version and shows more info when it's outdated. (#4847)\n- Minor: All sound capabilities can now be disabled by setting your \"Sound backend\" setting to \"Null\" and restarting Chatterino. (#4978)\n- Minor: Added an invisible resize handle to the bottom of frameless user info popups and reply thread popups. (#4795)\n- Minor: Updated the flatpakref link included with nightly builds to point to up-to-date flathub-beta builds. (#5008)\n- Minor: Image links now reflect the scale of their image instead of an internal label. (#5201)\n- Minor: IPC files are now stored in the Chatterino directory instead of system directories on Windows. (#5226)\n- Minor: 7TV emotes now have a 4x image rather than a 3x image. (#5209)\n- Minor: Add `reward.cost` `reward.id`, `reward.title` filter variables. (#5275)\n- Minor: Change Lua `CompletionRequested` handler to use an event table. (#5280)\n- Minor: Changed the layout of the about page. (#5287)\n- Minor: Add duration to multi-month anon sub gift messages. (#5293)\n- Minor: Added context menu action to toggle visibility of offline tabs. (#5318)\n- Minor: Report sub duration for more multi-month gift cases. (#5319)\n- Minor: Improved error reporting for the automatic streamer mode detection on Linux and macOS. (#5321)\n- Bugfix: Fixed a crash that could occur on Wayland when using the image uploader. (#5314)\n- Bugfix: Fixed split tooltip getting stuck in some cases. (#5309)\n- Bugfix: Fixed the version string not showing up as expected in Finder on macOS. (#5311)\n- Bugfix: Fixed links having `http://` added to the beginning in certain cases. (#5323)\n- Bugfix: Fixed topmost windows from losing their status after opening dialogs on Windows. (#5330)\n- Bugfix: Fixed a gap appearing when using filters on `/watching`. (#5329)\n- Bugfix: Removed the remnant \"Show chatter list\" menu entry for non-moderators. (#5336)\n- Bugfix: Fixed an issue where certain emojis did not send to Twitch chat correctly. (#4840)\n- Bugfix: Fixed the `/shoutout` command not working with usernames starting with @'s (e.g. `/shoutout @forsen`). (#4800)\n- Bugfix: Fixed capitalized channel names in log inclusion list not being logged. (#4848)\n- Bugfix: Trimmed custom streamlink paths on all platforms making sure you don't accidentally add spaces at the beginning or end of its path. (#4834)\n- Bugfix: Fixed a performance issue when displaying replies to certain messages. (#4807)\n- Bugfix: Fixed an issue where certain parts of the split input wouldn't focus the split when clicked. (#4958)\n- Bugfix: Fixed an issue in the `/live` split that caused some channels to not get grayed-out when they went offline. (#5172)\\\n- Bugfix: User text input within watch streak notices now correctly shows up. (#5029)\n- Bugfix: Fixed selection of tabs after closing a tab when using \"Live Tabs Only\". (#4770)\n- Bugfix: Fixed input in the reply thread popup losing focus when dragging said window. (#4815)\n- Bugfix: Fixed the Quick Switcher (CTRL+K) sometimes showing up on the wrong window. (#4819)\n- Bugfix: Fixed the font switcher not remembering what font you had previously selected. (#5224)\n- Bugfix: Fixed too much text being copied when copying chat messages. (#4812, #4830, #4839)\n- Bugfix: Fixed issue on Windows preventing the title bar from being dragged in the top left corner. (#4873)\n- Bugfix: Fixed an issue where Streamer Mode did not detect that OBS was running on MacOS. (#5260)\n- Bugfix: Remove \":\" from the message the user is replying to if it's a /me message. (#5263)\n- Bugfix: Fixed the \"Cancel\" button in the settings dialog only working after opening the settings dialog twice. (#5229)\n- Bugfix: Fixed an issue where the setting `Only search for emote autocompletion at the start of emote names` wouldn't disable if it was enabled when the client started. (#4855)\n- Bugfix: Fixed an empty page being added when showing the out of bounds dialog. (#4849)\n- Bugfix: Fixed an issue preventing searching a redemption by it's title when the redemption contained user text input. (#5117)\n- Bugfix: Fixed an issue where reply context didn't render correctly if an emoji was touching text. (#4875, #4977, #5174)\n- Bugfix: Fixed the input completion popup sometimes disappearing when clicking on it on Windows and macOS. (#4876)\n- Bugfix: Fixed Twitch badges not loading correctly in the badge highlighting setting page. (#5223)\n- Bugfix: Fixed double-click text selection moving its position with each new message. (#4898)\n- Bugfix: Fixed an issue where notifications on Windows would contain no or an old avatar. (#4899)\n- Bugfix: Fixed headers of tables in the settings switching to bold text when selected. (#4913)\n- Bugfix: Fixed tooltips appearing too large and/or away from the cursor. (#4920)\n- Bugfix: Fixed thread popup window missing messages for nested threads. (#4923)\n- Bugfix: Fixed an occasional crash for channel point redemptions with text input. (#4949)\n- Bugfix: Fixed triple-click on message also selecting moderation buttons. (#4961)\n- Bugfix: Fixed badge highlight changes not immediately being reflected. (#5110)\n- Bugfix: Fixed emotes being reloaded when pressing \"Cancel\" in the settings dialog, causing a slowdown. (#5240)\n- Bugfix: Fixed double-click selection not correctly selecting words that were split onto multiple lines. (#5243)\n- Bugfix: Fixed some emotes not appearing when using _Ignores_. (#4965, #5126)\n- Bugfix: Fixed a freeze from a bad regex in _Ignores_. (#4965, #5126)\n- Bugfix: Fixed lookahead/-behind not working in _Ignores_. (#4965, #5126)\n- Bugfix: Fixed Image Uploader accidentally deleting images with some hosts when link resolver was enabled. (#4971)\n- Bugfix: Fixed a rare crash with the Image Uploader when closing a split right after starting an upload. (#4971)\n- Bugfix: Fixed an issue on macOS where the Image Uploader would keep prompting the user even after they clicked \"Yes, don't ask again\". (#5011)\n- Bugfix: The usercard button is now hidden in the User Info Popup when in special channels. (#4972)\n- Bugfix: Fixed support for Windows 11 Snap layouts. (#4994, #5175)\n- Bugfix: Fixed some windows appearing between screens. (#4797)\n- Bugfix: Fixed a crash that could occur when clicking `More messages below` button in a usercard and closing it quickly. (#4933)\n- Bugfix: Fixed a crash that could occur when using certain features in a Usercard after closing the split from which it was created. (#5034, #5051)\n- Bugfix: Fixed a crash that could occur when using certain features in a Reply popup after closing the split from which it was created. (#5036, #5051)\n- Bugfix: Fixed a bug on Wayland where tooltips would spawn as separate windows instead of behaving like tooltips. (#4998, #5040)\n- Bugfix: Fixes to section deletion in text input fields. (#5013)\n- Bugfix: Fixed avatar in usercard and moderation button triggering when releasing the mouse outside their area. (#5052)\n- Bugfix: Fixed a bug where buttons would remain in a hovered state after leaving them. (#5077)\n- Bugfix: Fixed an issue where you had to click the `reply` button twice if you already had that users @ in your input box. (#5173)\n- Bugfix: Fixed popup windows not persisting between restarts. (#5081)\n- Bugfix: Fixed splits not retaining their focus after minimizing. (#5080)\n- Bugfix: Fixed _Copy message_ copying the channel name in global search. (#5106)\n- Bugfix: Fixed some Twitch emotes sizes being wrong at certain zoom levels. (#5279, #5291)\n- Bugfix: Fixed a missing space when the image uploader provided a delete link. (#5269)\n- Bugfix: Reply contexts now use the color of the replied-to message. (#5145)\n- Bugfix: Fixed top-level window getting stuck after opening settings. (#5161, #5166)\n- Bugfix: Fixed link info not updating without moving the cursor. (#5178)\n- Bugfix: Fixed an upload sometimes failing when copying an image from a browser if it contained extra properties. (#5156)\n- Bugfix: Fixed tooltips getting out of bounds when loading images. (#5186)\n- Bugfix: Fixed split header tooltips showing in the wrong position on Windows. (#5230)\n- Bugfix: Fixed split header tooltips appearing too tall. (#5232)\n- Bugfix: Fixed past messages not showing in the search popup after adding a channel. (#5248)\n- Bugfix: Fixed pause indicator not disappearing in some cases. (#5265)\n- Bugfix: Fixed the usercard popup not floating on tiling WMs on Linux when \"Automatically close user popup when it loses focus\" setting is enabled. (#3511)\n- Bugfix: Fixed moderator-only topics being subscribed to for non-moderators. (#5056)\n- Bugfix: Truncated IRC messages to be at most 512 bytes. (#5246)\n- Bugfix: Fixed a data race when disconnecting from Twitch PubSub. (#4771)\n- Bugfix: Fixed messages not immediately disappearing when clearing the chat. (#5282)\n- Bugfix: Fixed highlights triggering for ignored users in announcements. (#5295)\n- Dev: Changed the order of the query parameters for Twitch player URLs. (#5326)\n- Dev: Run miniaudio in a separate thread, and simplify it to not manage the device ourselves. There's a chance the simplification is a bad idea. (#4978)\n- Dev: Change clang-format from v14 to v16. (#4929)\n- Dev: Fixed UTF16 encoding of `modes` file for the installer. (#4791)\n- Dev: Temporarily disable High DPI scaling on Qt6 builds on Windows. (#4767)\n- Dev: Tests now run on Ubuntu 22.04 instead of 20.04 to loosen C++ restrictions in tests. (#4774)\n- Dev: Do a pretty major refactor of the Settings classes. List settings (e.g. highlights) are most heavily modified, and should have an extra eye kept on them. (#4775)\n- Dev: conan: Update Boost to 1.83 & OpenSSL to 3.2.0. (#5007)\n- Dev: Remove `boost::noncopyable` use & `boost_random` dependency. (#4776)\n- Dev: Fix clang-tidy `cppcoreguidelines-pro-type-member-init` warnings. (#4426)\n- Dev: Immediate layout for invisible `ChannelView`s is skipped. (#4811)\n- Dev: Refactor `Image` & Image's `Frames`. (#4773)\n- Dev: Add `WindowManager::getLastSelectedWindow()` to replace `getMainWindow()`. (#4816)\n- Dev: Clarify signal connection lifetimes where applicable. (#4818)\n- Dev: Laid the groundwork for advanced input completion strategies. (#4639, #4846, #4853, #4893)\n- Dev: Fixed flickering when running with Direct2D on Windows. (#4851)\n- Dev: Fix qtkeychain include for Qt6 users. (#4863)\n- Dev: Add a compile-time flag `CHATTERINO_UPDATER` which can be turned off to disable update checks. (#4854)\n- Dev: Add a compile-time flag `USE_SYSTEM_MINIAUDIO` which can be turned on to use the system miniaudio. (#4867)\n- Dev: Update vcpkg to use Qt6. (#4872)\n- Dev: Update `magic_enum` to v0.9.5. (#4992)\n- Dev: Replace `boost::optional` with `std::optional`. (#4877)\n- Dev: Improve performance of selecting text. (#4889, #4911)\n- Dev: Removed direct dependency on Qt 5 compatibility module. (#4906)\n- Dev: Added unit test capabilities to SplitInput. (#5179)\n- Dev: Refactor `Emoji`'s EmojiMap into a vector. (#4980)\n- Dev: Refactor `DebugCount` and add copy button to debug popup. (#4921)\n- Dev: Refactor `common/Credentials`. (#4979)\n- Dev: Refactor chat logger. (#5058)\n- Dev: Refactor Twitch PubSub client. (#5059)\n- Dev: Changed lifetime of context menus. (#4924)\n- Dev: Renamed `tools` directory to `scripts`. (#5035)\n- Dev: Refactor `ChannelView`, removing a bunch of clang-tidy warnings. (#4926)\n- Dev: Refactor `IrcMessageHandler`, removing a bunch of clang-tidy warnings & changing its public API. (#4927)\n- Dev: Removed almost all raw accesses into Application. (#5104)\n- Dev: `Details` file properties tab is now populated on Windows. (#4912)\n- Dev: Removed `Outcome` from network requests. (#4959)\n- Dev: Added Tests for Windows and MacOS in CI. (#4970, #5032)\n- Dev: Added \"Copy message as JSON\" option when shift-right-clicking a message. (#5150)\n- Dev: Windows now builds with Qt6 by default. (#5155)\n- Dev: Conan now uses OpenSSL 3 by default. (#5159)\n- Dev: Move `clang-tidy` checker to its own CI job. (#4996)\n- Dev: Refactored the Image Uploader feature. (#4971)\n- Dev: Refactored the SplitOverlay code. (#5082)\n- Dev: Refactored the Fonts code, making it less of a singleton. (#5228)\n- Dev: Refactored the TwitchBadges structure, making it less of a singleton. (#5096, #5144)\n- Dev: Refactored emotes out of TwitchIrcServer. (#5120, #5146)\n- Dev: Refactored the ChatterinoBadges structure, making it less of a singleton. (#5103)\n- Dev: Refactored the ColorProvider class a bit. (#5112)\n- Dev: Moved the Network files to their own folder. (#5089)\n- Dev: Fixed deadlock and use-after-free in tests. (#4981)\n- Dev: Moved all `.clang-format` files to the root directory. (#5037)\n- Dev: Load less message history upon reconnects. (#5001, #5018)\n- Dev: Removed the `NullablePtr` class. (#5091)\n- Dev: BREAKING: Replace custom `import()` with normal Lua `require()`. (#5014, #5108)\n- Dev: Compile Lua as a C library. (#5251)\n- Dev: Fixed most compiler warnings. (#5028, #5137)\n- Dev: Added the ability to show `ChannelView`s without a `Split`. (#4747)\n- Dev: Refactor Args to be less of a singleton. (#5041)\n- Dev: Channels without any animated elements on screen will skip updates from the GIF timer. (#5042, #5043, #5045)\n- Dev: Autogenerate docs/plugin-meta.lua. (#5055, #5283)\n- Dev: Changed Ubuntu & AppImage builders to statically link Qt. (#5151)\n- Dev: Refactor `NetworkPrivate`. (#5063)\n- Dev: Refactor `Paths` & `Updates`, focusing on reducing their singletoniability. (#5092, #5102)\n- Dev: Removed duplicate scale in settings dialog. (#5069)\n- Dev: Fix `NotebookTab` emitting updates for every message. (#5068)\n- Dev: Added benchmark for parsing and building recent messages. (#5071)\n- Dev: Boost is depended on as a header-only library when using conan. (#5107)\n- Dev: Added signal to invalidate paint buffers of channel views without forcing a relayout. (#5123)\n- Dev: Specialize `Atomic<std::shared_ptr<T>>` if underlying standard library supports it. (#5133)\n- Dev: Added the `developer_name` field to the Linux AppData specification. (#5138)\n- Dev: Twitch messages can be sent using Twitch's Helix API instead of IRC (disabled by default). (#5200, #5276)\n- Dev: Added estimation for image sizes to avoid layout shifts. (#5192)\n- Dev: Added the `launachable` entry to Linux AppData. (#5210)\n- Dev: Cleaned up and optimized resources. (#5222)\n- Dev: Refactor `StreamerMode`. (#5216, #5236)\n- Dev: Cleaned up unused code in `MessageElement` and `MessageLayoutElement`. (#5225)\n- Dev: Adapted `magic_enum` to Qt's Utf-16 strings. (#5258)\n- Dev: `NetworkManager`'s statics are now created in its `init` method. (#5254, #5297)\n- Dev: `clang-tidy` CI now uses Qt 6. (#5273)\n- Dev: Enabled `InsertNewlineAtEOF` in `clang-format`. (#5278)\n\n## 2.4.6\n\n- Minor: Migrate to the new Get Channel Followers Helix endpoint, fixing follower count not showing up in usercards. (#4809)\n- Bugfix: Update Qt version, fixing a security issue with webp loading (see https://www.qt.io/blog/two-qt-security-advisorys-gdi-font-engine-webp-image-format) (#4843)\n- Dev: Temporarily disable High DPI scaling on Qt6 builds on Windows. (#4767)\n\n## 2.4.5\n\n- Major: AutoMod term management messages (e.g. testaccount added \"noob\" as a blocked term on AutoMod.) are now hidden in Streamer Mode if you have the \"Hide moderation actions\" setting enabled. (#4758)\n- Minor: Added `/shoutout <username>` command to shoutout a specified user. Note: This is only the /command, we are still unable to display when a shoutout happens. (#4638)\n- Minor: Added a setting to only show tabs with live channels (default toggle hotkey: Ctrl+Shift+L). (#4358)\n- Minor: Added an option to subscribe to and unsubscribe from reply threads. (#4680, #4739)\n- Minor: Added the ability to pin Reply threads to stay open while using the setting \"Automatically close reply thread popup when it loses focus\". (#4680)\n- Minor: Highlights loaded from message history will now correctly appear in the /mentions tab. (#4475)\n- Minor: Added hotkey Action for pinning usercards and reply threads. (#4692)\n- Minor: Added missing hotkey Action for Open Player in Browser. (#4756)\n- Minor: Added an icon showing when streamer mode is enabled (#4410, #4690)\n- Minor: Message input is now focused when clicking on emotes. (#4719)\n- Minor: Changed viewer list to chatter list to more match Twitch's terminology. (#4732)\n- Minor: Added currency & duration to Hype Chat messages. (#4715)\n- Minor: Added `is:hype-chat` search option. (#4766)\n- Minor: Added `flags.hype_chat` filter variable. (#4766)\n- Minor: Nicknames are now taken into consideration when searching for messages. (#4663, #4742)\n- Minor: Added a message for when Chatterino joins a channel (#4616)\n- Minor: 7TV badges now automatically update upon changing them. (#4512)\n- Minor: Removed restriction on Go To Message on system messages from search. (#4614)\n- Minor: Channel point redemptions without custom text are now shown in the usercard. (#4557)\n- Minor: Added settings for customizing the behavior of `Right Click`ing a usernames. (#4622, #4751)\n- Minor: The input completion and quick switcher are now styled to match your theme. (#4671)\n- Minor: All channels opened in browser tabs are synced when using the extension for quicker switching between tabs. (#4741)\n- Minor: Added support for opening incognito links in firefox-esr and chromium. (#4745)\n- Minor: Added support for opening incognito links under Linux/BSD using XDG. (#4745)\n- Minor: Added accelerators to the right click menu for messages (#4705)\n- Minor: Improved editing hotkeys. (#4628)\n- Minor: Added `/c2-theme-autoreload` command to automatically reload a custom theme. This is useful for when you're developing your own theme. (#4718)\n- Bugfix: Fixed an issue where Subscriptions & Announcements that contained ignored phrases would still appear if the Block option was enabled. (#4748)\n- Bugfix: Increased amount of blocked users loaded from 100 to 1,000. (#4721)\n- Bugfix: Fixed pings firing for the \"Your username\" highlight when not signed in. (#4698)\n- Bugfix: Fixed a crash that could happen when closing splits before their display name was updated. This was especially noticeable after the live controller changes. (#4731)\n- Bugfix: Fixed highlights sometimes not working after changing sound device, or switching users in your operating system. (#4729)\n- Bugfix: Fixed a spacing issue with mentions inside RTL text. (#4677)\n- Bugfix: Fixed a crash when opening and closing a reply thread and switching the user. (#4675)\n- Bugfix: Fixed a crash that could occur when closing the usercard too quickly after blocking or unblocking a user. (#4711)\n- Bugfix: Fixed visual glitches with smooth scrolling. (#4501)\n- Bugfix: Fixed key bindings not showing in context menus on Mac. (#4722)\n- Bugfix: Fixed timeouts from message history not behaving consistently. (#4760)\n- Bugfix: Fixed partially broken filters on Qt 6 builds. (#4702)\n- Bugfix: Fixed tooltips & popups sometimes showing up on the wrong monitor. (#4740)\n- Bugfix: Fixed some network errors having `0` as their HTTP status. (#4704)\n- Bugfix: Fixed tab completion rarely completing the wrong word. (#4735)\n- Bugfix: Fixed generation of crashdumps by the browser-extension process when the browser was closed. (#4667)\n- Dev: Stream status requests are now batched. (#4713)\n- Dev: Added command to set Qt's logging filter/rules at runtime (`/c2-set-logging-rules`). (#4637)\n- Dev: Added the ability to see & load custom themes from the Themes directory. No stable promises are made of this feature, changes might be made that breaks custom themes without notice. (#4570)\n- Dev: Added test cases for emote and tab completion. (#4644)\n- Dev: Fixed `clang-tidy-review` action not picking up dependencies. (#4648)\n- Dev: Expanded upon `$$$` test channels. (#4655)\n- Dev: Added tools to help debug image GC. (#4578)\n- Dev: Removed duplicate license when having plugins enabled. (#4665)\n- Dev: Replace our QObjectRef class with Qt's QPointer class. (#4666)\n- Dev: Fixed warnings about QWidgets already having a QLayout. (#4672)\n- Dev: Fixed undefined behavior when loading non-existent credentials. (#4673)\n- Dev: Small refactor of the recent-messages API, splitting its internal API and its internal implementation up into separate files. (#4763)\n- Dev: Added support for compiling with `sccache`. (#4678)\n- Dev: Added `sccache` in Windows CI. (#4678)\n- Dev: Moved preprocessor Git and date definitions to executables only. (#4681)\n- Dev: Refactored tests to be able to use `ctest` and run in debug builds. (#4700)\n- Dev: Added the ability to use an alternate linker using the `-DUSE_ALTERNATE_LINKER=...` CMake parameter. (#4711)\n- Dev: The Windows installer is now built in CI. (#4408)\n- Dev: Removed `getApp` and `getSettings` calls from message rendering. (#4535)\n- Dev: Get the default browser executable instead of the entire command line when opening incognito links. (#4745)\n- Dev: Removed unused code hidden behind the USEWEBENGINE define (#4757)\n\n## 2.4.4\n\n- Minor: Added a Send button in the input box so you can click to send a message. This is disabled by default and can be enabled with the \"Show send message button\" setting. (#4607)\n- Minor: Improved error messages when the updater fails a download. (#4594)\n- Minor: Added `/shield` and `/shieldoff` commands to toggle shield mode. (#4580)\n- Bugfix: Fixed the menu warping on macOS on Qt6. (#4595)\n- Bugfix: Fixed link tooltips not showing unless the thumbnail setting was enabled. (#4597)\n- Bugfix: Domains starting with `http` are now parsed as links again. (#4598)\n- Bugfix: Reduced the size of the update prompt to prevent it from going off the users screen. (#4626)\n- Bugfix: Fixed click effects on buttons not being antialiased. (#4473)\n- Bugfix: Fixed Ctrl+Backspace not working after Select All in chat search popup. (#4461)\n- Bugfix: Fixed crash when scrolling up really fast. (#4621)\n- Dev: Added the ability to control the `followRedirect` mode for requests. (#4594)\n\n## 2.4.3\n\n- Major: Added support for FrankerFaceZ animated emotes. (#4434)\n- Minor: Added the ability to reply to a message by `Shift + Right Click`ing the username. (#4424)\n- Minor: Reply context now censors blocked users. (#4502)\n- Minor: Migrated the viewer list to Helix API. (#4117)\n- Minor: Migrated badges to Helix API. (#4537)\n- Minor: Added `/lowtrust` command to open the suspicious user activity feed in browser. (#4542)\n- Minor: Added better filter validation and error messages. (#4364)\n- Minor: Updated the look of the Black Theme to be more in line with the other themes. (#4523)\n- Minor: Re-added leading @mentions from replies in chat logs. These were accidentally removed during the reply overhaul. (#4420)\n- Minor: Added a local backup of the Twitch Badges API in case the request fails. (#4463)\n- Minor: Updated the macOS icon to be consistent with the design of other applications on macOS. (#4577)\n- Bugfix: Fixed an issue where Chatterino could lose track of the sound device in certain scenarios. (#4549)\n- Bugfix: Fixed an issue where animated emotes would render on top of zero-width emotes. (#4314)\n- Bugfix: Fixed an issue where it was difficult to hover a zero-width emote. (#4314)\n- Bugfix: Fixed an issue where context-menu items for zero-width emotes displayed the wrong provider. (#4460)\n- Bugfix: Fixed an issue where the \"Enable zero-width emotes\" setting was showing the inverse state. (#4462)\n- Bugfix: Fixed blocked user list being empty when opening the settings dialog for the first time. (#4437)\n- Bugfix: Fixed blocked user list sticking around when switching from a logged in user to being logged out. (#4437)\n- Bugfix: Fixed search popup ignoring setting for message scrollback limit. (#4496)\n- Bugfix: Fixed a memory leak that occurred when loading message history. This was mostly noticeable with unstable internet connections where reconnections were frequent or long-running instances of Chatterino. (#4499)\n- Bugfix: Fixed Twitch channel-specific filters not being applied correctly. (#4529)\n- Bugfix: Fixed `/mods` displaying incorrectly when the channel has no mods. (#4546)\n- Bugfix: Fixed emote & badge tooltips not showing up when thumbnails were hidden. (#4509)\n- Bugfix: Fixed links with invalid IPv4 addresses being parsed. (#4576)\n- Bugfix: Fixed the macOS icon changing to the wrong icon when the application is open. (#4577)\n- Dev: Disabling precompiled headers on Windows is now tested in CI. (#4472)\n- Dev: Themes are now stored as JSON files in `resources/themes`. (#4471, #4533)\n- Dev: Ignore unhandled BTTV user-events. (#4438)\n- Dev: Only log debug messages when NDEBUG is not defined. (#4442)\n- Dev: Cleaned up theme related code. (#4450)\n- Dev: Ensure tests have default-initialized settings. (#4498)\n- Dev: Add scripting capabilities with Lua (#4341, #4504)\n- Dev: Conan 2.0 is now used instead of Conan 1.0. (#4417)\n- Dev: Added tests and benchmarks for `LinkParser`. (#4436)\n- Dev: Removed redundant parsing of links. (#4507)\n- Dev: Experimental builds with Qt 6 are now provided. (#4522, #4551, #4553, #4554, #4555, #4556)\n- Dev: Fixed username rendering in Qt 6. (#4476, #4568)\n- Dev: Fixed placeholder color in Qt 6. (#4477)\n- Dev: Removed `CHATTERINO_TEST` definitions. (#4526)\n- Dev: Builds for macOS now have `macos` in their name (previously: `osx`). (#4550)\n- Dev: Fixed a crash when dragging rows in table-views in builds with Qt 6. (#4567)\n\n## 2.4.2\n\n- Minor: Added `/banid` command that allows banning by user ID. (#4411)\n- Bugfix: Fixed FrankerFaceZ emotes/badges not loading due to an API change. (#4432)\n- Bugfix: Fixed uploaded AppImage not being able to execute most web requests. (#4400)\n- Bugfix: Fixed a potential race condition due to using the wrong lock when loading 7TV badges. (#4402)\n- Dev: Delete all but the last 5 crashdumps on application start. (#4392)\n- Dev: Added capability to build Chatterino with Qt6. (#4393)\n- Dev: Fixed homebrew update action. (#4394)\n\n## 2.4.1\n\n- Major: Added live emote updates for BTTV. (#4147)\n- Minor: Added setting to turn off rendering of reply context. (#4224)\n- Minor: Changed the highlight order to prioritize Message highlights over User highlights. (#4303)\n- Minor: Added a setting to highlight your own messages in `Highlights -> Users`. (#3833)\n- Minor: Added the ability to negate search options by prefixing it with an exclamation mark (e.g. `!badge:mod` to search for messages where the author does not have the moderator badge). (#4207)\n- Minor: Search window input will automatically use currently selected text if present. (#4178)\n- Minor: Grouped highlight sound columns together and improved wording for the default sound setting. (#4194)\n- Minor: Tables in settings window will now scroll to newly added rows. (#4216)\n- Minor: Added setting to select which channels to log. (#4302)\n- Minor: Added channel name to /mentions log entries. (#4371)\n- Minor: Added link to streamlink docs for easier user setup. (#4217)\n- Minor: Added support for HTTP and Socks5 proxies through environment variables. (#4321)\n- Minor: Added crashpad to capture crashes on Windows locally. See PR for build/crash analysis instructions. (#4351)\n- Minor: Github releases now include flatpakref files for nightly builds\n- Bugfix: Fixed User Card moderation actions not working after Twitch IRC chat command deprecation. (#4378)\n- Bugfix: Fixed User Card broadcaster actions (mod, unmod, vip, unvip) not working after Twitch IRC chat command deprecation. (#4387)\n- Bugfix: Fixed crash that would occur when performing certain actions after removing all tabs. (#4271)\n- Bugfix: Fixed highlight sounds not reloading on change properly. (#4194)\n- Bugfix: Fixed CTRL + C not working in reply thread popups. (#4209)\n- Bugfix: Fixed message input showing as red after removing a message that was more than 500 characters. (#4204)\n- Bugfix: Fixed unnecessary saving of windows layout. (#4201)\n- Bugfix: Fixed Reply window missing selection clear behaviour between chat and input box. (#4218)\n- Bugfix: Fixed crash that could occur when changing Tab layout and utilizing multiple windows. (#4248)\n- Bugfix: Fixed text sometimes not pasting properly when image uploader was disabled. (#4246)\n- Bugfix: Fixed text cursor(caret) not showing in open channel dialog. (#4196)\n- Bugfix: Fixed tooltip images not appearing if mouse hovered only first pixel. (#4268)\n- Bugfix: Fixed crash that could occur when closing down a split at the wrong time. (#4277)\n- Bugfix: Fixed crash that could occur when closing down the last of a channel when reloading emotes. (#4278)\n- Bugfix: Fixed scrollbar highlight colors when changing message history limit. (#4288)\n- Bugfix: Fixed the split \"Search\" menu action not opening the correct search window. (#4305)\n- Bugfix: Fixed an issue on Windows when opening links in incognito mode that contained forward slashes in hash (#4307)\n- Bugfix: Fixed an issue where beta versions wouldn't update to stable versions correctly. (#4329)\n- Bugfix: Fixed builds from GitHub showing up as modified. (#4384)\n- Bugfix: Avoided crash that could occur when receiving channel point reward information. (#4360)\n- Dev: Changed sound backend from Qt to miniaudio. (#4334)\n- Dev: Removed sending part of the multipart emoji workaround. (#4361)\n- Dev: Removed protocol from QApplication's Organization Domain (so changed from `https://www.chatterino.com` to `chatterino.com`). (#4256)\n- Dev: Ignore `WM_SHOWWINDOW` hide events, causing fewer attempted rescales. (#4198)\n- Dev: Migrated to C++ 20 (#4252, #4257)\n- Dev: Enable LTO for main branch builds. (#4258, #4260)\n- Dev: Removed unused include directives. (#4266, #4275, #4294)\n- Dev: Removed TooltipPreviewImage. (#4268)\n- Dev: Removed unused operators in `Image` (#4267)\n- Dev: Removed usage of deprecated `QDesktopWidget` (#4287)\n- Dev: Bump Cirrus CI FreeBSD image from 12.1 to 13.1. (#4295)\n- Dev: Fixed `inconsistent-missing-override` warnings. (#4296)\n- Dev: Fixed `final-dtor-non-final-class` warnings. (#4296)\n- Dev: Fixed `ambiguous-reversed-operator` warnings. (#4296)\n- Dev: Format YAML and JSON files with prettier. (#4304)\n- Dev: Added CMake Install Support on Windows. (#4300)\n- Dev: Changed conan generator to [`CMakeDeps`](https://docs.conan.io/en/latest/reference/conanfile/tools/cmake/cmakedeps.html) and [`CMakeToolchain`](https://docs.conan.io/en/latest/reference/conanfile/tools/cmake/cmaketoolchain.html). See PR for migration notes. (#4335)\n- Dev: Refactored 7TV EventAPI implementation. (#4342)\n- Dev: Disabled ImageExpirationPool in tests. (#4363)\n- Dev: Don't rely on undocumented registry keys to find the default browser on Windows. (#4362)\n- Dev: Use `QEnterEvent` for `QWidget::enterEvent` on Qt 6. (#4365)\n- Dev: Use `qintptr` in `QWidget::nativeEvent` on Qt 6. (#4376)\n\n## 2.4.0\n\n- Major: Added support for emotes, badges, and live emote updates from [7TV](https://7tv.app). [Wiki Page](https://wiki.chatterino.com/Third_party_services/#7tv) (#4002, #4062, #4090)\n- Major: Added support for Right-to-Left Languages (#3958, #4139, #4168)\n- Major: Added support for Twitch's Chat Replies. [Wiki Page](https://wiki.chatterino.com/Features/#message-replies) (#3722, #3989, #4041, #4047, #4055, #4067, #4077, #3905, #4131)\n- Major: Added multi-channel searching to search dialog via keyboard shortcut. (Ctrl+Shift+F by default) (#3694, #3875)\n- Minor: Added setting to keep more message history in splits. (#3811)\n- Minor: Added setting to keep more message history in usercards. (#3811)\n- Minor: Added ability to pin Usercards to stay open even if it loses focus. Only available if \"Automatically close usercard when it loses focus\" is enabled. (#3884)\n- Minor: Allow hiding moderation actions in streamer mode. (#3926)\n- Minor: Added highlights for `Elevated Messages`. (#4016)\n- Minor: Removed total views from the usercard, as Twitch no longer updates the number. (#3792)\n- Minor: Load missing messages from Recent Messages API upon reconnecting (#3878, #3932)\n- Minor: Reduced image memory usage when running Chatterino for a long time. (#3915)\n- Minor: Added the ability to execute commands on chat messages using the message context menu. (#3738, #3765)\n- Minor: Added settings to toggle BTTV/FFZ global/channel emotes (#3935, #3990)\n- Minor: Added an option to display tabs on the right and bottom. (#3847)\n- Minor: Added a `Scroll to top` keyboard shortcut for splits. (#3802)\n- Minor: Added `/copy` command. Usage: `/copy <text>`. Copies provided text to clipboard - can be useful with custom commands. (#3763)\n- Minor: Added `/requests` command. Usage: `/requests [channel]`. Opens the channel points requests queue for the provided channel or the current channel if no input is provided. (#3746)\n- Minor: Added `Go to message` context menu action to search popup, mentions, usercard and reply threads. (#3953)\n- Minor: Clicking `A message from x was deleted` messages will now jump to the message in question. (#3953)\n- Minor: Added `is:first-msg` search option. (#3700)\n- Minor: Added `is:elevated-msg` search option. (#4018)\n- Minor: Added `is:cheer-msg` search option. (#4069)\n- Minor: Added `is:redemption` search option. (#4118)\n- Minor: Added `is:reply` search option. (#4119)\n- Minor: Added `subtier:` search option (e.g. `subtier:3` to find Tier 3 subs). (#4013)\n- Minor: Added `badge:` search option (e.g. `badge:mod` to users with the moderator badge). (#4013)\n- Minor: Added AutoMod message flag filter. (#3938)\n- Minor: Added `showInMentions` toggle for Badge Highlights. (#4034)\n- Minor: Added chatter count for each category in viewer list. (#3683, #3719)\n- Minor: Added option to open a user's chat in a new tab from the usercard profile picture context menu. (#3625)\n- Minor: Added scrollbar to `Select filters` dialog. (#3737)\n- Minor: Added quotation marks in the permitted/blocked Automod messages for clarity. (#3654)\n- Minor: Added Quick Switcher item to open a channel in a new popup window. (#3828)\n- Minor: Added information about the user's operating system in the About page. (#3663)\n- Minor: Added option to hide inline whispers in streamer mode (#4076)\n- Minor: Adjusted large stream thumbnail to 16:9 (#3655)\n- Minor: Prevented user from entering incorrect characters in Live Notifications channels list. (#3715, #3730)\n- Minor: Sorted usernames in /vips message to be case-insensitive. (#3696)\n- Minor: Streamer mode now automatically detects if XSplit, PRISM Live Studio, Twitch Studio, or vMix are running. (#3740)\n- Minor: Fixed automod caught message notice appearing twice for mods. (#3717)\n- Minor: Fixed being unable to load Twitch Usercards from the `/mentions` tab. (#3623)\n- Minor: Strip leading @ and trailing , from usernames in the `/block` and `/unblock` commands. (#3816)\n- Minor: Fixed tag parsing for consecutive escaped characters. (#3711)\n- Minor: Reduced GIF frame window from 30ms to 20ms, causing fewer frame skips in animated emotes. (#3886, #3907)\n- Minor: Warn when parsing an environment variable fails. (#3904)\n- Minor: Migrated /announce command to Helix API. (#4003)\n- Minor: Migrated /clear command to Helix API. (#3994)\n- Minor: Migrated /color command to Helix API. (#3988)\n- Minor: Migrated /delete command to Helix API. (#3999)\n- Minor: Migrated /emoteonly command to Helix API. (#4015)\n- Minor: Migrated /emoteonlyoff command to Helix API. (#4015)\n- Minor: Migrated /mod command to Helix API. (#4000)\n- Minor: Migrated /unmod command to Helix API. (#4001)\n- Minor: Migrated /vip command to Helix API. (#4010)\n- Minor: Migrated /unvip command to Helix API. (#4025)\n- Minor: Migrated /untimeout to Helix API. (#4026)\n- Minor: Migrated /unban to Helix API. (#4026, #4050)\n- Minor: Migrated /subscribers to Helix API. (#4040)\n- Minor: Migrated /subscribersoff to Helix API. (#4040)\n- Minor: Migrated /slow to Helix API. (#4040)\n- Minor: Migrated /slowoff to Helix API. (#4040)\n- Minor: Migrated /followers to Helix API. (#4040)\n- Minor: Migrated /followersoff to Helix API. (#4040)\n- Minor: Migrated /raid command to Helix API. Chat command will continue to be used until February 11th 2023. (#4029)\n- Minor: Migrated /unraid command to Helix API. Chat command will continue to be used until February 11th 2023. (#4030)\n- Minor: Migrated /ban to Helix API. (#4049, #4164)\n- Minor: Migrated /timeout to Helix API. (#4049, #4164)\n- Minor: Migrated /w to Helix API. Chat command will continue to be used until February 11th 2023. (#4052)\n- Minor: Migrated /vips to Helix API. Chat command will continue to be used until February 11th 2023. (#4053)\n- Minor: Migrated /uniquechat and /r9kbeta to Helix API. (#4057)\n- Minor: Migrated /uniquechatoff and /r9kbetaoff to Helix API. (#4057)\n- Minor: Migrated /commercial to Helix API. (#4094, #4141)\n- Minor: Added stream titles to windows live toast notifications. (#1297)\n- Minor: Make menus and placeholders display appropriate custom key combos. (#4045)\n- Minor: Migrated /chatters to Helix API. (#4088, #4097, #4114)\n- Minor: Migrated /mods to Helix API. (#4103)\n- Minor: Improved text selection to match Windows native behaviour. (#4127)\n- Minor: Add settings tooltips. (#3437)\n- Minor: Add setting to limit message input length. (#3418)\n- Minor: Make built-in commands work in IRC channels. (#4160)\n- Minor: Add support for `echo-message` capabilities for IRC. (#4157)\n- Minor: Add proper support for IRC private messages. (#4158)\n- Minor: Improved look of tabs when using a layout other than top. (#3925, #4152)\n- Minor: Added support for Nicknames on IRC. (#4170)\n- Bugfix: Fixed crash happening when QuickSwitcher is used with a popout window. (#4187)\n- Bugfix: Fixed low contrast of text in settings tooltips. (#4188)\n- Bugfix: Fixed being unable to see the usercard of VIPs who have Asian language display names. (#4174)\n- Bugfix: Fixed whispers always being shown in the /mentions split. (#4389)\n- Bugfix: Fixed messages where Right-to-Left order is mixed in multiple lines. (#4173)\n- Bugfix: Fixed the wrong right-click menu showing in the chat input box. (#4177)\n- Bugfix: Fixed popup windows not appearing/minimizing correctly on the Windows taskbar. (#4181)\n- Bugfix: Fixed white border appearing around maximized window on Windows. (#4190)\n- Bugfix: Fixed window scaling being applied too many times on startup, causing windows like Settings to be slow. (#4193)\n- Bugfix: Fixed input text cursor flickering when selecting text in a split. (#4197)\n- Bugfix: Fixed shipped resources having incorrect ICC profile (#4199)\n- Bugfix: Fixed channels with two leading `#`s not being usable on IRC (#4154)\n- Bugfix: Fixed `Add new account` dialog causing main chatterino window to be non movable. (#4121)\n- Bugfix: Connection to Twitch PubSub now recovers more reliably. (#3643, #3716)\n- Bugfix: Fixed `Smooth scrolling on new messages` setting sometimes hiding messages. (#4028)\n- Bugfix: Fixed context menu not opening when username is right clicked from usercard/search/reply window. (#4122)\n- Bugfix: Fixed a crash that can occur when closing and quickly reopening a split, then running a command. (#3852)\n- Bugfix: Fixed a crash that can occur when changing channels. (#3799)\n- Bugfix: Fixed viewers list search not working when used before loading finishes. (#3774)\n- Bugfix: Fixed live notifications for usernames containing uppercase characters. (#3646)\n- Bugfix: Fixed live notifications not getting updated for closed streams going offline. (#3678)\n- Bugfix: Fixed certain settings dialogs appearing behind the main window, when `Always on top` was used. (#3679)\n- Bugfix: Fixed an issue in the emote picker where an emotes tooltip would not properly disappear. (#3686)\n- Bugfix: Fixed incorrect spacing of settings icons at high DPI. (#3698)\n- Bugfix: Fixed highlights triggering from own resub messages. (#3707)\n- Bugfix: Fixed existing emote popups not being raised from behind other windows when refocusing them on macOS (#3713)\n- Bugfix: Fixed automod queue pubsub topic persisting after user change. (#3718)\n- Bugfix: Fixed viewer list not closing after pressing escape key. (#3734)\n- Bugfix: Fixed users being assigned duplicate FrankerFaceZ badges. (#4155)\n- Bugfix: Fixed links with no thumbnail having previous link's thumbnail. (#3720)\n- Bugfix: Fixed message only showing a maximum of one global FrankerFaceZ badge even if the user has multiple. (#3818)\n- Bugfix: Added an icon in the CMake macOS bundle. (#3832)\n- Bugfix: Adopted popup windows in order to force floating behavior on some window managers. (#3836)\n- Bugfix: Fixed split focusing being broken in certain circumstances when the \"Show input when it's empty\" setting was disabled. (#3838, #3860)\n- Bugfix: Always refresh tab when a contained split's channel is set. (#3849)\n- Bugfix: Fixed an issue where Anonymous gift messages appeared larger than normal gift messages. (#3888)\n- Bugfix: Fixed crash related to logging IRC channels (#3918)\n- Bugfix: Mentions of \"You\" in timeouts will link to your own user now instead of the user \"You\". (#3922)\n- Bugfix: Fixed emoji popup not being shown in IRC channels (#4021)\n- Bugfix: Display sent IRC messages like received ones (#4027)\n- Bugfix: Fixed non-global FrankerFaceZ emotes from being loaded as global emotes. (#3921)\n- Bugfix: Fixed trailing spaces from preventing Nicknames from working correctly. (#3946)\n- Bugfix: Fixed crashes that can occur while selecting/copying messages and they are removed. (#4153)\n- Bugfix: Fixed trailing spaces from preventing User Highlights from working correctly. (#4051)\n- Bugfix: Fixed channel-based popups from rewriting messages to file log (#4060)\n- Bugfix: Fixed invalid/dangling completion when cycling through previous messages or replying (#4072)\n- Bugfix: Fixed incorrect .desktop icon path. (#4078)\n- Bugfix: Mark bad or invalid images as empty. (#4151)\n- Bugfix: Fixed `/watching` channel jumping around. (#4169)\n- Dev: Got rid of BaseTheme (#4132)\n- Dev: Removed official support for QMake. (#3839, #3883)\n- Dev: Rewrote LimitedQueue (#3798)\n- Dev: Set cmake `QT_DISABLE_DEPRECATED_BEFORE` to disable deprecated APIs up to Qt 5.15.0 (#4133)\n- Dev: Overhauled highlight system by moving all checks into a Controller allowing for easier tests. (#3399, #3801, #3835)\n- Dev: Use Game Name returned by Get Streams instead of querying it from the Get Games API. (#3662)\n- Dev: Batched checking live status for all channels after startup. (#3757, #3762, #3767)\n- Dev: Moved most command context into the command controller. (#3824)\n- Dev: Error NetworkResults now include the body data. (#3987)\n- Dev: Automatically generate resources files with cmake. (#4159, #4167)\n\n## 2.3.5\n\n- Major: Added highlights for first messages (#3267)\n- Major: Added customizable shortcuts. (#2340, #3633)\n- Minor: Make animated emote playback speed match browser (Firefox and Chrome) behaviour. (#3506)\n- Minor: Added middle click split to open in browser (#3356)\n- Minor: Added new search predicate to filter for messages matching a regex (#3282)\n- Minor: Add `{channel.name}`, `{channel.id}`, `{stream.game}`, `{stream.title}`, `{my.id}`, `{my.name}` placeholders for commands (#3155)\n- Minor: Remove TwitchEmotes.com attribution and the open/copy options when right-clicking a Twitch Emote. (#2214, #3136)\n- Minor: Strip leading @ and trailing , from username in /user and /usercard commands. (#3143)\n- Minor: Display a system message when reloading subscription emotes to match BTTV/FFZ behavior (#3135)\n- Minor: Allow resub messages to show in `/mentions` tab (#3148)\n- Minor: Added a setting to hide similar messages by any user. (#2716)\n- Minor: Duplicate spaces now count towards the display message length. (#3002)\n- Minor: Commands are now backed up. (#3168)\n- Minor: Subcategories in settings are now searchable. (#3157)\n- Minor: Added the ability to open an entire tab as a popup. (#3082)\n- Minor: Added optional parameter to /usercard command for opening a usercard in a different channel context. (#3172)\n- Minor: Added regex option to Nicknames. (#3146)\n- Minor: Highlight usernames in /mods and /vips messages (#3187)\n- Minor: Added `/raw` command. (#3189)\n- Minor: Colorizing usernames on IRC, originally made for Mm2PL/dankerino (#3206)\n- Minor: Fixed `/streamlink` command not stripping leading @'s or #'s (#3215)\n- Minor: Strip leading @ and trailing , from username in `/popout` command. (#3217)\n- Minor: Added `flags.reward_message` filter variable (#3231)\n- Minor: Added `flags.elevated_message` filter variable. (#4017)\n- Minor: Added `flags.cheer_message` filter variable. (#4069)\n- Minor: Added chatter count to viewer list popout (#3261)\n- Minor: Ignore out of bounds check for tiling wms (#3270)\n- Minor: Add clear cache button to cache settings section (#3277)\n- Minor: Added `flags.first_message` filter variable (#3292)\n- Minor: Removed duplicate setting for toggling `Channel Point Redeemed Message` highlights (#3296)\n- Minor: Added support for opening channels from twitch.tv/popout links. (#3309)\n- Minor: Clean up chat messages of special line characters prior to sending. (#3312)\n- Minor: IRC now parses/displays links like Twitch chat. (#3334)\n- Minor: Added button & label for copying login name of user instead of display name in the user info popout. (#3335)\n- Minor: Make `/delete` errors a bit more verbose (#3350)\n- Minor: Made join and part message have links to usercards. (#3358)\n- Minor: Show picked outcome in prediction badges. (#3357)\n- Minor: Add support for Emoji in IRC (#3354)\n- Minor: Added logging to experimental IRC (#2996)\n- Minor: Moved `/live` logs to its own subdirectory. (Logs from before this change will still be available in `Channels -> live`). (#3393)\n- Minor: Added clear button to settings search bar. (#3403)\n- Minor: Added autocompletion for default Twitch commands starting with the dot (e.g. `.mods` which does the same as `/mods`). (#3144)\n- Minor: Sorted usernames in `Users joined/parted` messages alphabetically. (#3421)\n- Minor: Mod list, VIP list, and Users joined/parted messages are now searchable. (#3426)\n- Minor: Add search to emote popup. (#3404, #3527, #3543)\n- Minor: Messages can now be highlighted by subscriber or founder badges. (#3445)\n- Minor: User timeout buttons can now be triggered using hotkeys. (#3483)\n- Minor: Add workaround for multipart emoji as described in [the RFC](https://mm2pl.github.io/emoji_rfc.pdf). (#3469)\n- Minor: Added a way to open channel popup by right-clicking the avatar in a usercard. (#3486)\n- Minor: Add feedback when using the whisper command `/w` incorrectly. (#3439)\n- Minor: Add feedback when writing a non-command message in the `/whispers` split. (#3439)\n- Minor: Opening streamlink through hotkeys and/or split header menu matches `/streamlink` command and shows feedback in chat as well. (#3510)\n- Minor: Removed timestamp from AutoMod messages. (#3503)\n- Minor: Added ability to copy message ID with `Shift + Right Click`. (#3481)\n- Minor: Added /popup command to open currently focused split or supplied channel in a new window. (#3529)\n- Minor: Colorize the entire split header when focused. (#3379)\n- Minor: Added incremental search to channel search. (#3544)\n- Minor: Show right click context menu anywhere within a message's line. (#3566)\n- Minor: Make Tab Layout setting only accept predefined values (#3564)\n- Minor: Added librewolf, icecat, and waterfox incognito support. (#3588)\n- Minor: Updated to Emoji v14.0 (#3612)\n- Minor: Add support for locking tab arrangement (#3627)\n- Bugfix: Fixed rendering of moderator announcements. (#3639)\n- Bugfix: Fix Split Input hotkeys not being available when input is hidden (#3362)\n- Bugfix: Fixed colored usernames sometimes not working. (#3170)\n- Bugfix: Restored ability to send duplicate `/me` messages. (#3166)\n- Bugfix: Notifications for moderators about other moderators deleting messages can now be disabled. (#3121)\n- Bugfix: Moderation mode and active filters are now preserved when opening a split as a popup. (#3113, #3130)\n- Bugfix: Fixed a bug that caused all badge highlights to use the same color. (#3132, #3134)\n- Bugfix: Allow starting Streamlink from Chatterino when running as a Flatpak. (#3178)\n- Bugfix: Fixed own IRC messages not having metadata and a link to a usercard. (#3203)\n- Bugfix: Fixed some channels still not loading in rare cases. (#3219)\n- Bugfix: Fixed a bug with usernames or emotes completing from the wrong position. (#3229)\n- Bugfix: Fixed a bug that caused zero-width emotes to be misaligned when the \"Remove spaces between emotes\" setting is on. (#3249)\n- Bugfix: Fixed second chatterino icon appearing in the dock when restarting on a crash in macOS. (#3268)\n- Bugfix: Fixed the \"Change channel\" popup showing a wrong window title (#3273)\n- Bugfix: Fixed built-in Chatterino commands not working in whispers and mentions special channels (#3288)\n- Bugfix: Fixed `QCharRef with an index pointing outside the valid range of a QString` warning that was emitted on every Tab press. (#3234)\n- Bugfix: Fixed being unable to disable `First Message` highlights (#3293)\n- Bugfix: Fixed `First Message` custom sound not persisting through restart. (#3303)\n- Bugfix: Fixed `First Message` scrollbar highlights not being disabled. (#3325)\n- Bugfix: Fixed the reconnection backoff accidentally resetting when thrown out of certain IRC servers. (#3328)\n- Bugfix: Fixed underlying text from disabled emotes not being colorized properly. (#3333)\n- Bugfix: Fixed IRC ACTION messages (/me) not being colorized properly. (#3341)\n- Bugfix: Fixed splits losing filters when closing and reopening them (#3351)\n- Bugfix: Fixed the first usercard being broken in `/mods` and `/vips` (#3349)\n- Bugfix: Fixed IRC colors not being applied correctly to NOTICE messages. (#3383)\n- Bugfix: Fixed Chatterino attempting to send empty messages (#3355)\n- Bugfix: Fixed IRC highlights not triggering sounds or alerts properly. (#3368)\n- Bugfix: Fixed IRC /kick command crashing if parameters were malformed. (#3382)\n- Bugfix: Fixed crash that would occur if the user tries to modify the currently connected IRC connection. (#3398)\n- Bugfix: Fixed IRC mentions not showing up in the /mentions split. (#3400)\n- Bugfix: Fixed a crash that could occur on certain Linux systems when toggling the Always on Top flag. (#3385)\n- Bugfix: Fixed zero-width emotes sometimes wrapping lines incorrectly. (#3389)\n- Bugfix: Fixed using special chars in Windows username breaking the storage of custom commands (#3397)\n- Bugfix: Fixed character counter changing fonts after going over the limit. (#3422)\n- Bugfix: Fixed crash that could occur if the user opens/closes ChannelViews (e.g. EmotePopup, or Splits) then modifies the showLastMessageIndicator setting. (#3444)\n- Bugfix: Removed ability to reload emotes really fast (#3450)\n- Bugfix: Re-add date of build to the \"About\" page on nightly versions. (#3464)\n- Bugfix: Fixed crash that would occur if the user right-clicked AutoMod badge. (#3496)\n- Bugfix: Fixed being unable to drag the user card window from certain spots. (#3508)\n- Bugfix: Fixed being unable to open a usercard from inside a usercard while \"Automatically close user popup when it loses focus\" was enabled. (#3518)\n- Bugfix: Usercards no longer close when the originating window (e.g. a search popup) is closed. (#3518)\n- Bugfix: Disabled /popout and /streamlink from working in non-twitch channels (e.g. /whispers) when supplied no arguments. (#3541)\n- Bugfix: Fixed automod and unban messages showing when moderation actions were disabled (#3548)\n- Bugfix: Fixed crash when rendering a highlight inside of a sub message, with sub message highlights themselves turned off. (#3556)\n- Bugfix: Don't grab the keyboard in channel picker dialog (#3575)\n- BugFix: Fixed SplitInput placeholder color. (#3606)\n- BugFix: Remove game from stream/split title when set to \"nothing.\" (#3609)\n- BugFix: Fixed double-clicking on usernames with right/middle click causing text selection. (#3608)\n- Dev: Batch checking live status for channels with live notifications that aren't connected. (#3442)\n- Dev: Add GitHub action to test builds without precompiled headers enabled. (#3327)\n- Dev: Renamed CMake's build option `USE_SYSTEM_QT5KEYCHAIN` to `USE_SYSTEM_QTKEYCHAIN`. (#3103)\n- Dev: Add benchmarks that can be compiled with the `BUILD_BENCHMARKS` CMake flag. Off by default. (#3038)\n- Dev: Added CMake build option `BUILD_WITH_QTKEYCHAIN` to build with or without Qt5Keychain support (On by default). (#3318)\n- Dev: Added /fakemsg command for debugging (#3448)\n- Dev: Notebook::select\\* functions now take an optional `focusPage` parameter (true by default) which keeps the default behaviour of selecting the page after it has been selected. If set to false, the page is _not_ focused after being selected. (#3446)\n- Dev: Updated PubSub client to use TLS v1.2 (#3599)\n- Dev: Use system logical core count for Ubuntu/macOS GitHub actions builds. (#3602)\n\n## 2.3.4\n\n- Major: Newly uploaded Twitch emotes are once again present in emote picker and can be autocompleted with Tab as well. (#2992)\n- Major: Deprecated `/(un)follow` commands and (un)following in the usercards as Twitch has removed this feature for 3rd party applications. (#3076, #3078)\n- Major: Added the ability to add nicknames for users. (#137, #2981)\n- Major: Fixed constant disconnections with more than 20 channels by rate-limiting outgoing JOIN messages. (#3112, #3115)\n- Minor: Added autocompletion in /whispers for Twitch emotes, Global Bttv/Ffz emotes and emojis. (#2999, #3033)\n- Minor: Received Twitch messages now use the exact same timestamp (obtained from Twitch's server) for every Chatterino user instead of assuming message timestamp on client's side. (#3021)\n- Minor: Received IRC messages use `time` message tag for timestamp if it's available. (#3021)\n- Minor: Added informative messages for recent-messages API's errors. (#3029)\n- Minor: Added section with helpful Chatterino-related links to the About page. (#3068)\n- Minor: Now uses spaces instead of magic Unicode character for sending duplicate messages (#3081)\n- Minor: Added `channel.live` filter variable (#3092, #3110)\n- Bugfix: Fixed \"smiley\" emotes being unable to be \"Tabbed\" with autocompletion, introduced in v2.3.3. (#3010)\n- Bugfix: Fixed PubSub not properly trying to resolve pending listens when the pending listens list was larger than 50. (#3037)\n- Bugfix: Copy buttons in usercard now show properly in light mode (#3057)\n- Bugfix: Fixed comma appended to username completion when not at the beginning of the message. (#3060)\n- Bugfix: Fixed bug misplacing chat when zooming on Chrome with Chatterino Native Host extension (#1936)\n- Bugfix: Channel point redemptions from ignored users are now properly blocked. (#3102)\n- Dev: Allow building against Qt 5.11 (#3105)\n- Dev: Ubuntu packages are now available (#2936)\n- Dev: Disabled update checker on Flatpak. (#3051)\n- Dev: Add logging for HTTP requests (#2991)\n\n## 2.3.3\n\n- Major: Added username autocompletion popup menu when typing usernames with an @ prefix. (#1979, #2866)\n- Major: Added ability to toggle visibility of Channel Tabs - This can be done by right-clicking the tab area or pressing the keyboard shortcut (default: Ctrl+U). (#2600)\n- Minor: Username in channel points rewards redemption messages is now clickable. (#2673, #2953)\n- Minor: Channel name in `<channel> has gone offline. Exiting host mode.` messages is now clickable. (#2922)\n- Minor: Added `/openurl` command. Usage: `/openurl <URL>`. Opens the provided URL in the browser. (#2461, #2926)\n- Minor: Updated to Emoji v13.1 (#2958)\n- Minor: Added \"Open in: new tab, browser player, streamlink\" in twitch link context menu. (#2988)\n- Minor: Sender username in automod messages shown to moderators shows correct color and display name. (#2967)\n- Minor: The /live split now shows channels going offline. (#2880)\n- Minor: Restore automod functionality for moderators (#2817, #2887)\n- Minor: Add setting for username style (#2889, #2891)\n- Minor: Searching for users in the viewer list now searches anywhere in the user's name. (#2861)\n- Minor: Added moderation buttons to search popup when searching in a split with moderation mode enabled. (#2148, #2803)\n- Minor: Made \"#channel\" in `/mentions` tab show in usercards and in the search popup. (#2802)\n- Minor: Added settings to disable custom FrankerFaceZ VIP/mod badges. (#2693, #2759)\n- Minor: Limit the number of recent chatters to improve memory usage and reduce freezes. (#2796, #2814)\n- Minor: Added `/popout` command. Usage: `/popout [channel]`. It opens browser chat for the provided channel. Can also be used without arguments to open current channels browser chat. (#2556, #2812)\n- Minor: Improved matching of game names when using `/setgame` command (#2636)\n- Minor: Now shows deletions of messages like timeouts (#1155, #2841, #2867, #2874)\n- Minor: Added a link to accounts page in settings to \"You need to be logged in to send messages\" message. (#2862)\n- Minor: Switch to Twitch v2 emote API for animated emote support. (#2863)\n- Bugfix: Now deleting cache files that weren't modified in the past 14 days. (#2947)\n- Bugfix: Fixed large timeout durations in moderation buttons overlapping with usernames or other buttons. (#2865, #2921)\n- Bugfix: Middle mouse click no longer scrolls in not fully populated usercards and splits. (#2933)\n- Bugfix: Fix bad behavior of the HTML color picker edit when user input is being entered. (#2942)\n- Bugfix: Made follower emotes suggested (in emote popup menu, tab completion, emote input menu) only in their origin channel, not globally. (#2951)\n- Bugfix: Fixed founder badge not being respected by `author.subbed` filter. (#2971)\n- Bugfix: Usercards on IRC will now only show user's messages. (#1780, #2979)\n- Bugfix: Messages that couldn't be searched or filtered are now handled correctly. (#2962)\n- Bugfix: Moderation buttons now show the correct time unit when using units other than seconds. (#1719, #2864)\n- Bugfix: Fixed FFZ emote links for global emotes (#2807, #2808)\n- Bugfix: Fixed pasting text with URLs included (#1688, #2855)\n- Bugfix: Fix reconnecting when IRC write connection is lost (#1831, #2356, #2850, #2892)\n- Bugfix: Fixed bit and new subscriber emotes not (re)loading in some rare cases. (#2856, #2857)\n- Bugfix: Fixed subscription emotes showing up incorrectly in the emote menu. (#2905)\n\n## 2.3.2\n\n- Major: New split for channels going live! /live. (#1797)\n- Minor: Added a message that displays a new date on new day. (#1016)\n- Minor: Hosting messages are now clickable. (#2655)\n- Minor: Messages held by automod are now shown to the user. (#2626)\n- Minor: Load 100 blocked users rather than the default 20. (#2772)\n- Bugfix: Fixed a potential crashing issue related to the browser extension. (#2774)\n- Bugfix: Strip newlines from stream titles to prevent text going off of split header (#2755)\n- Bugfix: Automod messages now work properly again. (#2682)\n- Bugfix: `Login expired` message no longer highlights all tabs. (#2735)\n- Bugfix: Fix a deadlock that would occur during user badge loading. (#1704, #2756)\n- Bugfix: Tabbing in `Select a channel to open` is now consistent. (#1797)\n- Bugfix: Fix Ctrl + Backspace not closing colon emote picker. (#2780)\n- Bugfix: Approving/denying AutoMod messages works again. (#2779)\n- Dev: Migrated AutoMod approve/deny endpoints to Helix. (#2779)\n- Dev: Migrated Get Cheermotes endpoint to Helix. (#2440)\n\n## 2.3.1\n\n- Major: Fixed crashing with the extension (#2704)\n- Major: Added the ability to highlight messages based on user badges. (#1704)\n- Minor: Added visual indicator to message length if over 500 characters long (#2659)\n- Minor: Added `is:<flags>` search filter to find messages of specific types. (#2653, #2671)\n- Minor: Added image links to the badge context menu. (#2667)\n- Minor: Added a setting to hide Twitch Predictions badges. (#2668)\n- Minor: Optionally remove spaces between emotes, originally made for Mm2PL/Dankerino. (#2651)\n- Minor: Improved UX of `Rename Tab` dialog. (#2713)\n- Bugfix: Added missing Copy/Open link context menu entries to emotes in Emote Picker. (#2670)\n- Bugfix: Fixed visual glitch with smooth scrolling. (#2084)\n- Bugfix: Clicking on split header focuses its split. (#2720)\n- Bugfix: Handle new user messages (\"rituals\") properly. (#2703)\n\n## 2.3.0\n\n- Major: Added custom FrankerFaceZ VIP Badges. (#2628)\n- Minor: Added `in:<channels>` search filter to find messages sent in specific channels. (#2299, #2634)\n- Minor: Allow for built-in Chatterino commands to be used in custom commands. (#2632)\n- Bugfix: Size of splits not saved properly (#2362, #2548)\n- Bugfix: Fix crash that could occur when the user changed the \"Custom stream player URI Scheme\" setting if the user had closed down and splits in the application runtime. (#2592)\n- Major: Added clip creation support. You can create clips with `/clip` command, `Alt+X` keybind or `Create a clip` option in split header's context menu. This requires a new authentication scope so re-authentication will be required to use it. (#2271, #2377, #2528)\n- Major: Added \"Channel Filters\". See https://wiki.chatterino.com/Filters/ for how they work or how to configure them. (#1748, #2083, #2090, #2200, #2225)\n- Major: Added Streamer Mode configuration (under `Settings -> General`), where you can select which features of Chatterino should behave differently when you are in Streamer Mode. (#2001, #2316, #2342, #2376)\n- Major: Add `/settitle` and `/setgame` commands, originally made for Mm2PL/Dankerino. (#2534, #2609)\n- Major: Color mentions to match the mentioned users. You can disable this by unchecking \"Color @usernames\" under `Settings -> General -> Advanced (misc.)`. (#1963, #2284, #2597)\n- Major: Commands `/ignore` and `/unignore` have been renamed to `/block` and `/unblock` in order to keep consistency with Twitch's terms. (#2370)\n- Major: Added support for bit emotes - the ones you unlock after cheering to streamer. (#2550)\n- Minor: Added `/clearmessages` command - does what \"Burger menu -> More -> Clear messages\" does. (#2485)\n- Minor: Added `/marker` command - similar to webchat, it creates a stream marker. (#2360)\n- Minor: Added `/chatters` command showing chatter count. (#2344)\n- Minor: Added a button to the split context menu to open the moderation view for a channel when the account selected has moderator permissions. (#2321)\n- Minor: Made BetterTTV emote tooltips use authors' display name. (#2267)\n- Minor: Added Ctrl + 1/2/3/... and Ctrl+9 shortcuts to Emote Popup (activated with Ctrl+E). They work exactly the same as shortcuts in main window. (#2263)\n- Minor: Added reconnect link to the \"You are banned\" message. (#2266)\n- Minor: Improved search popup window titles. (#2268)\n- Minor: Made \"#channel\" in `/mentions` tab a clickable link which takes you to the channel that you were mentioned in. (#2220)\n- Minor: Added a keyboard shortcut (Ctrl+F5) for \"Reconnect\" (#2215)\n- Minor: Made `Try to find usernames without @ prefix` option still resolve usernames when special characters (commas, dots, (semi)colons, exclamation mark, question mark) are appended to them. (#2212)\n- Minor: Made usercard update user's display name (#2160)\n- Minor: Added placeholder text for message text input box. (#2143, #2149, #2264)\n- Minor: Added support for FrankerFaceZ badges. (#2101, part of #1658)\n- Minor: Added a navigation list to the settings and reordered them.\n- Minor: Added a link to twitchemotes.com to context menu when right-clicking Twitch emotes. (#2214)\n- Minor: Improved viewer list window.\n- Minor: Added emote completion with `:` to the whispers channel (#2075)\n- Minor: Made the current channels emotes appear at the top of the emote picker popup. (#2057)\n- Minor: Added viewer list button to twitch channel header. (#1978)\n- Minor: Added followage and subage information to usercard. (#2023)\n- Minor: Added an option to only open channels specified in command line with `-c` parameter. You can also use `--help` to display short help message (#1940, #2368)\n- Minor: Added customizable timeout buttons to the user info popup\n- Minor: Deprecate loading of \"v1\" window layouts. If you haven't updated Chatterino in more than 2 years, there's a chance you will lose your window layout.\n- Minor: User popup will now automatically display messages as they are received. (#1982, #2514)\n- Minor: Changed the English in two rate-limited system messages (#1878)\n- Minor: Added a setting to disable messages sent to /mentions split from making the tab highlight with the red marker (#1994)\n- Minor: Added image for streamer mode in the user popup icon.\n- Minor: Added vip and unvip buttons.\n- Minor: Added settings for displaying where the last message was.\n- Minor: Commands are now saved upon pressing Ok in the settings window\n- Minor: Colorized nicknames now enabled by default\n- Minor: Show channels live now enabled by default\n- Minor: Bold usernames enabled by default\n- Minor: Improve UX of the \"Login expired!\" message (#2029)\n- Minor: PageUp and PageDown now scroll in the selected split and in the emote popup (#2070, #2081, #2410, #2607)\n- Minor: Allow highlights to be excluded from `/mentions`. Excluded highlights will not trigger tab highlights either. (#1793, #2036)\n- Minor: Flag all popup dialogs as actual dialogs so they get the relevant window manager hints (#1843, #2182, #2185, #2232, #2234)\n- Minor: Don't show update button for nightly builds on macOS and Linux, this was already the case for Windows (#2163, #2164)\n- Minor: Tab and split titles now use display/localized channel names (#2189)\n- Minor: Add a setting to limit the amount of historical messages loaded from the Recent Messages API (#2250, #2252)\n- Minor: Made username autocompletion truecase (#1199, #1883)\n- Minor: Update the listing of top-level domains. (#2345)\n- Minor: Properly respect RECONNECT messages from Twitch (#2347)\n- Minor: Added command line option to attach chatterino to another window.\n- Minor: Hide \"Case-sensitive\" column for user highlights. (#2404)\n- Minor: Added human-readable formatting to remaining timeout duration. (#2398)\n- Minor: Update emojis version to 13 (2020). (#1555)\n- Minor: Remove EmojiOne 2 and 3 due to license restrictions. (#1555)\n- Minor: Added `/streamlink` command. Usage: `/streamlink <channel>`. You can also use the command without arguments in any twitch channel to open it in streamlink. (#2443, #2495)\n- Minor: Humanized all numbers visible to end-users. (#2488)\n- Minor: Added a context menu to avatar in usercard. It opens on right-clicking the avatar in usercard. (#2517)\n- Minor: Handle messages that users can share after unlocking a new bits badge. (#2611)\n- Bugfix: Fix crash occurring when pressing Escape in the Color Picker Dialog (#1843)\n- Bugfix: Fix bug where the \"check user follow state\" event could trigger a network request requesting the user to follow or unfollow a user. By itself its quite harmless as it just repeats to Twitch the same follow state we had, so no follows should have been lost by this but it meant there was a rogue network request that was fired that could cause a crash (#1906)\n- Bugfix: /usercard command will now respect the \"Automatically close user popup\" setting (#1918)\n- Bugfix: Handle symlinks properly when saving commands & settings (#1856, #1908)\n- Bugfix: Starting Chatterino in a minimized state after an update will no longer cause a crash\n- Bugfix: Modify the emote parsing to handle some edge-cases with dots and stuff. (#1704, #1714, #2490)\n- Bugfix: Fixed timestamps being incorrect on some messages loaded from the recent-messages service on startup (#1286, #2020)\n- Bugfix: Fixed timestamps missing on channel point redemption messages (#1943)\n- Bugfix: Fixed tooltip didn't show in `EmotePopup` depending on the `Link preview` setting enabled or no (#2008)\n- Bugfix: Fixed Stream thumbnail not updating after using the \"Change channel\" feature (#2074, #2080)\n- Bugfix: Fixed previous link info not updating after `Link information` setting is enabled (#2054)\n- Bugfix: Fix Tab key not working in the Ctrl+K Quick Switcher (#2065)\n- Bugfix: Fix bug preventing moderator actions when viewing a user card from the search window (#1089)\n- Bugfix: Fix `:` emote completion menu ignoring emote capitalization and inconsistent emote names. (#1962, #2543)\n- Bugfix: Fix a bug that caused `Ignore page` to fall into an infinity loop with an empty pattern and regex enabled (#2125)\n- Bugfix: Fix a crash caused by FrankerFaceZ responding with invalid emote links (#2191)\n- Bugfix: Fix a freeze caused by ignored & replaced phrases followed by Twitch Emotes (#2231)\n- Bugfix: Fix a crash bug that occurred when moving splits across windows and closing the \"parent tab\" (#2249, #2259)\n- Bugfix: Fix a crash bug that occurred when the \"Limit message height\" setting was enabled and a message was being split up into multiple lines. IRC only. (#2329)\n- Bugfix: Fix anonymous users being pinged by \"username\" justinfan64537 (#2156, #2352)\n- Bugfix: Fixed hidden tooltips when always on top is active (#2384)\n- Bugfix: Fix CLI arguments (`--help`, `--version`, `--channels`) not being respected (#2368, #2190)\n- Bugfix: Fixed search field not being focused on popup open (#2540)\n- Bugfix: Fix Twitch cheer emotes not displaying tooltips when hovered (#2434, #2503)\n- Bugfix: Fix BTTV/FFZ channel emotes saying unknown error when no emotes found (#2542)\n- Bugfix: Fix directory not opening when clicking \"Open AppData Directory\" setting button on macOS (#2531, #2537)\n- Bugfix: Fix quickswitcher not respecting order of tabs when filtering (#2519, #2561)\n- Bugfix: Fix GNOME not associating Chatterino's window with its desktop entry (#1863, #2587)\n- Bugfix: Fix buffer overflow in emoji parsing. (#2602)\n- Bugfix: Fix windows being brought back to life after the settings dialog was closed. (#1892, #2613)\n- Dev: Updated minimum required Qt framework version to 5.12. (#2210)\n- Dev: Migrated `Kraken::getUser` to Helix (#2260)\n- Dev: Migrated `TwitchAccount::(un)followUser` from Kraken to Helix and moved it to `Helix::(un)followUser`. (#2306)\n- Dev: Migrated `Kraken::getChannel` to Helix. (#2381)\n- Dev: Migrated `TwitchAccount::(un)ignoreUser` to Helix and made `TwitchAccount::loadIgnores` use Helix call. (#2370)\n- Dev: Build in CI with multiple Qt versions (#2349)\n- Dev: Updated minimum required macOS version to 10.14 (#2386)\n- Dev: Removed unused `humanize` library (#2422)\n\n## 2.2.2\n\n- Bugfix: Fix a potential crash related to channel point rewards (279a80b)\n\n## 2.2.1\n\n- Minor: Disable checking for updates on unsupported platforms (#1874)\n- Bugfix: Fix bug preventing users from setting the highlight color of the second entry in the \"User\" highlights tab (#1898)\n\n## 2.2.0\n\n- Major: We now support image thumbnails coming from the link resolver. This feature is off by default and can be enabled in the settings with the \"Show link thumbnail\" setting. This feature also requires the \"Show link info when hovering\" setting to be enabled (#1664)\n- Major: Added image upload functionality to i.nuuls.com with an ability to change upload destination. This works by dragging and dropping an image into a split, or pasting an image into the text edit field. (#1332, #1741)\n- Major: Added option to display tabs vertically. (#1815)\n- Major: Support the highlighted messages redeemed with channel points on twitch.tv.\n- Major: Added emote completion with `:`\n- Minor: Added a \"Streamer Mode\" that hides user generated images while obs is open.\n- Minor: Added extension support for Brave browser and Microsoft Edge. (#1862)\n- Minor: Add a switcher widget, similar to Discord. It can be opened by pressing Ctrl+K. (#1588)\n- Minor: Clicking on `Open in browser` in a whisper split will now open your whispers on twitch. (#1828)\n- Minor: Clicking on @mentions will open the User Popup. (#1674)\n- Minor: You can now open the Twitch User Card by middle-mouse clicking a username. (#1669)\n- Minor: User Popup now also includes recent user messages (#1729)\n- Minor: BetterTTV / FrankerFaceZ emote tooltips now also have emote authors' name (#1721)\n- Minor: Emotes in the emote popup are now sorted in the same order as the tab completion (#1549)\n- Minor: Removed \"Online Logs\" functionality as services are shut down (#1640)\n- Minor: CTRL+F now selects the Find text input field in the Settings Dialog (#1806 #1811)\n- Minor: CTRL+F now selects the search text input field in the Search Popup (#1812)\n- Minor: Modify our word boundary logic in highlight phrase searching to accomodate non-regex phrases with \"word-boundary-creating\" characters like ! (#1885, #1890)\n- Bugfix: Fixed not being able to open links in incognito with Microsoft Edge (Chromium) (#1875)\n- Bugfix: Fix the incorrect `Open stream in browser` labelling in the whisper split (#1860)\n- Bugfix: Fix preview on hover not working when Animated emotes options was disabled (#1546)\n- Bugfix: FFZ custom mod badges no longer scale with the emote scale options (#1602)\n- Bugfix: MacOS updater looked for non-existing fields, causing it to always fail the update check (#1642)\n- Bugfix: Fixed message menu crashing if the message you right-clicked goes out of scope before you select an action (#1783) (#1787)\n- Bugfix: Fixed alternate messages flickering in UserInfoPopup when clicking Refresh if there was an odd number of messages in there (#1789 #1810)\n- Bugfix: Fix a crash when using middle click scroll on a chat window. (#1870)\n- Settings open faster\n- Dev: Fully remove Twitch Chatroom support\n- Dev: Handle conversion of historical CLEARCHAT messages to NOTICE messages in Chatterino instead of relying on the Recent Messages API to handle it for us. (#1804)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 8.9033203125,
          "content": "cmake_minimum_required(VERSION 3.15)\ncmake_policy(SET CMP0087 NEW) # evaluates generator expressions in `install(CODE/SCRIPT)`\ncmake_policy(SET CMP0091 NEW) # select MSVC runtime library through `CMAKE_MSVC_RUNTIME_LIBRARY`\nif (POLICY CMP0167)\n    cmake_policy(SET CMP0167 NEW) # find Boost's own CMake config file\nendif ()\ninclude(FeatureSummary)\n\nlist(APPEND CMAKE_MODULE_PATH\n    \"${CMAKE_SOURCE_DIR}/cmake\"\n    \"${CMAKE_SOURCE_DIR}/cmake/sanitizers-cmake/cmake\"\n    )\n\noption(BUILD_APP \"Build Chatterino\" ON)\noption(BUILD_TESTS \"Build the tests for Chatterino\" OFF)\noption(BUILD_BENCHMARKS \"Build the benchmarks for Chatterino\" OFF)\noption(USE_SYSTEM_PAJLADA_SETTINGS \"Use system pajlada settings library\" OFF)\noption(USE_SYSTEM_LIBCOMMUNI \"Use system communi library\" OFF)\noption(USE_SYSTEM_QTKEYCHAIN \"Use system QtKeychain library\" OFF)\noption(BUILD_WITH_QTKEYCHAIN \"Build Chatterino with support for your system key chain\" ON)\noption(USE_SYSTEM_MINIAUDIO \"Build Chatterino with your system miniaudio\" OFF)\noption(BUILD_WITH_CRASHPAD \"Build chatterino with crashpad\" OFF)\noption(USE_PRECOMPILED_HEADERS \"Use precompiled headers\" ON)\noption(BUILD_WITH_QT6 \"Build with Qt6\" On)\noption(CHATTERINO_GENERATE_COVERAGE \"Generate coverage files\" OFF)\n# We don't use translations, and we don't want qtkeychain to build translations\noption(BUILD_TRANSLATIONS \"\" OFF)\noption(BUILD_SHARED_LIBS \"\" OFF)\noption(CHATTERINO_LTO \"Enable LTO for all targets\" OFF)\noption(CHATTERINO_PLUGINS \"Enable ALPHA plugin support in Chatterino\" OFF)\noption(CHATTERINO_USE_GDI_FONTENGINE \"Use the legacy GDI fontengine instead of the new DirectWrite one on Windows (Qt 6.8.0 and later)\" ON)\n\noption(CHATTERINO_UPDATER \"Enable update checks\" ON)\nmark_as_advanced(CHATTERINO_UPDATER)\n\nif(BUILD_TESTS)\n    list(APPEND VCPKG_MANIFEST_FEATURES \"tests\")\nendif()\nif(BUILD_BENCHMARKS)\n    list(APPEND VCPKG_MANIFEST_FEATURES \"benchmarks\")\nendif()\n\nproject(chatterino\n    VERSION 2.5.2\n    DESCRIPTION \"Chat client for twitch.tv\"\n    HOMEPAGE_URL \"https://chatterino.com/\"\n)\n\nif(CHATTERINO_LTO)\n    include(CheckIPOSupported)\n    check_ipo_supported(RESULT CHATTERINO_ENABLE_LTO OUTPUT IPO_ERROR)\n    message(STATUS \"LTO: Enabled (Supported: ${CHATTERINO_ENABLE_LTO} - ${IPO_ERROR})\")\nelse()\n    message(STATUS \"LTO: Disabled\")\nendif()\n\nif (BUILD_WITH_QT6)\n    set(MAJOR_QT_VERSION \"6\")\nelse()\n    set(MAJOR_QT_VERSION \"5\")\nendif()\n\nfind_program(CCACHE_PROGRAM ccache)\nfind_program(SCCACHE_PROGRAM sccache)\nif (SCCACHE_PROGRAM)\n    set(_compiler_launcher ${SCCACHE_PROGRAM})\nelseif (CCACHE_PROGRAM)\n    set(_compiler_launcher ${CCACHE_PROGRAM})\nendif ()\n\n\n# Alternate linker code taken from heavyai/heavydb\n# https://github.com/heavyai/heavydb/blob/0517d99b467806f6af7b4c969e351368a667497d/CMakeLists.txt#L87-L103\nmacro(set_alternate_linker linker)\n  find_program(LINKER_EXECUTABLE ld.${USE_ALTERNATE_LINKER} ${USE_ALTERNATE_LINKER})\n  if(LINKER_EXECUTABLE)\n    if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" AND \"${CMAKE_CXX_COMPILER_VERSION}\" VERSION_LESS 12.0.0)\n      add_link_options(\"-ld-path=${USE_ALTERNATE_LINKER}\")\n    else()\n      add_link_options(\"-fuse-ld=${USE_ALTERNATE_LINKER}\")\n    endif()\n  else()\n    set(USE_ALTERNATE_LINKER \"\" CACHE STRING \"Use alternate linker\" FORCE)\n  endif()\nendmacro()\n\nset(USE_ALTERNATE_LINKER \"\" CACHE STRING \"Use alternate linker. Leave empty for system default; alternatives are 'gold', 'lld', 'bfd', 'mold'\")\nif(NOT \"${USE_ALTERNATE_LINKER}\" STREQUAL \"\")\n  set_alternate_linker(${USE_ALTERNATE_LINKER})\nendif()\n\nif (_compiler_launcher)\n    set(CMAKE_CXX_COMPILER_LAUNCHER \"${_compiler_launcher}\" CACHE STRING \"CXX compiler launcher\")\n    message(STATUS \"Using ${_compiler_launcher} for speeding up build\")\n\n    if (MSVC)\n        # /Zi can't be used with (s)ccache\n        # Use /Z7 instead (debug info in object files)\n        if(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n            string(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\")\n        elseif(CMAKE_BUILD_TYPE STREQUAL \"Release\")\n            string(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n        elseif(CMAKE_BUILD_TYPE STREQUAL \"RelWithDebInfo\")\n            string(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n        endif()\n    endif()\nendif()\n\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/GIT.cmake)\n\nfind_package(Qt${MAJOR_QT_VERSION} REQUIRED\n    COMPONENTS\n    Core\n    Widgets\n    Gui\n    Network\n    Svg\n    Concurrent\n    )\n\nmessage(STATUS \"Qt version: ${Qt${MAJOR_QT_VERSION}_VERSION}\")\n\nif (WIN32)\n    add_subdirectory(lib/WinToast EXCLUDE_FROM_ALL)\nendif ()\n\nfind_package(Sanitizers QUIET)\n\n# Find boost on the system\nfind_package(Boost REQUIRED OPTIONAL_COMPONENTS headers)\n\n# Find OpenSSL on the system\nfind_package(OpenSSL REQUIRED)\n\nfind_package(Threads REQUIRED)\n\nfind_library(LIBRT rt)\n\nif (USE_SYSTEM_LIBCOMMUNI)\n    find_package(LibCommuni REQUIRED)\nelse()\n    set(LIBCOMMUNI_ROOT_LIB_FOLDER \"${CMAKE_SOURCE_DIR}/lib/libcommuni\")\n    if (NOT EXISTS \"${LIBCOMMUNI_ROOT_LIB_FOLDER}/CMakeLists.txt\")\n        message(FATAL_ERROR \"Submodules probably not loaded, unable to find lib/libcommuni/CMakeLists.txt\")\n    endif()\n\n    add_subdirectory(\"${LIBCOMMUNI_ROOT_LIB_FOLDER}\" EXCLUDE_FROM_ALL)\nendif()\n\nif (BUILD_WITH_QTKEYCHAIN)\n    # Link QtKeychain statically\n    if (USE_SYSTEM_QTKEYCHAIN)\n        find_package(Qt${MAJOR_QT_VERSION}Keychain REQUIRED)\n    else()\n        set(QTKEYCHAIN_ROOT_LIB_FOLDER \"${CMAKE_SOURCE_DIR}/lib/qtkeychain\")\n        if (NOT EXISTS \"${QTKEYCHAIN_ROOT_LIB_FOLDER}/CMakeLists.txt\")\n            message(FATAL_ERROR \"Submodules probably not loaded, unable to find lib/qtkeychain/CMakeLists.txt\")\n        endif()\n\n        set(_prev_testing ${BUILD_TESTING})\n        set(BUILD_TESTING Off)\n        add_subdirectory(\"${QTKEYCHAIN_ROOT_LIB_FOLDER}\" EXCLUDE_FROM_ALL)\n        set(BUILD_TESTING ${_prev_testing})\n\n        if (NOT TARGET qt${MAJOR_QT_VERSION}keychain)\n            message(FATAL_ERROR \"qt${MAJOR_QT_VERSION}keychain target was not created :@\")\n        endif()\n        if (MSVC AND \"${MAJOR_QT_VERSION}\" STREQUAL \"5\")\n            target_compile_definitions(qt5keychain PRIVATE UNICODE)\n            target_compile_options(qt5keychain PRIVATE /utf-8)\n            set_target_properties(qt5keychain PROPERTIES CXX_STANDARD 17)\n        endif()\n    endif()\nendif()\n\nfind_package(RapidJSON REQUIRED)\n\nfind_package(Websocketpp REQUIRED)\n\nif (BUILD_TESTS)\n    include(GoogleTest)\n    # For MSVC: Prevent overriding the parent project's compiler/linker settings\n    # See https://github.com/google/googletest/blob/main/googletest/README.md#visual-studio-dynamic-vs-static-runtimes\n    set(gtest_force_shared_crt ON CACHE BOOL \"\" FORCE)\n\n    add_subdirectory(\"${CMAKE_CURRENT_LIST_DIR}/lib/googletest\" \"lib/googletest\")\n\n    mark_as_advanced(\n            BUILD_GMOCK BUILD_GTEST BUILD_SHARED_LIBS\n            gmock_build_tests gtest_build_samples gtest_build_tests\n            gtest_disable_pthreads gtest_force_shared_crt gtest_hide_internal_symbols\n    )\n\n    set_target_properties(gtest PROPERTIES FOLDER lib)\n    set_target_properties(gtest_main PROPERTIES FOLDER lib)\n    set_target_properties(gmock PROPERTIES FOLDER lib)\n    set_target_properties(gmock_main PROPERTIES FOLDER lib)\nendif ()\n\nif (BUILD_BENCHMARKS)\n    # Include system benchmark (Google Benchmark)\n    find_package(benchmark REQUIRED)\nendif ()\n\nfind_package(PajladaSerialize REQUIRED)\nfind_package(PajladaSignals REQUIRED)\nfind_package(LRUCache REQUIRED)\nfind_package(MagicEnum REQUIRED)\nfind_package(Doxygen)\n\nif (USE_SYSTEM_PAJLADA_SETTINGS)\n    find_package(PajladaSettings REQUIRED)\nelse()\n    if (NOT EXISTS \"${CMAKE_SOURCE_DIR}/lib/settings/CMakeLists.txt\")\n        message(FATAL_ERROR \"Submodules probably not loaded, unable to find lib/settings/CMakeLists.txt\")\n    endif()\n\n    add_subdirectory(\"${CMAKE_SOURCE_DIR}/lib/settings\" EXCLUDE_FROM_ALL)\nendif()\n\nif (CHATTERINO_PLUGINS)\n    set(LUA_INCLUDE_DIRS \"${CMAKE_SOURCE_DIR}/lib/lua/src\")\n    add_subdirectory(lib/lua)\n\n    find_package(Sol2 REQUIRED)\nendif()\n\nif (BUILD_WITH_CRASHPAD)\n    add_subdirectory(\"${CMAKE_SOURCE_DIR}/tools/crash-handler\")\nendif()\n\n# Used to provide a date of build in the About page (for nightly builds). Getting the actual time of\n# compilation in CMake is a more involved, as documented in https://stackoverflow.com/q/24292898.\n# For CI runs, however, the date of build file generation should be consistent with the date of\n# compilation so this approximation is \"good enough\" for our purpose.\nif (DEFINED ENV{CHATTERINO_SKIP_DATE_GEN})\n    set(cmake_gen_date \"1970-01-01\")\nelse ()\n    string(TIMESTAMP cmake_gen_date \"%Y-%m-%d\")\nendif ()\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n# Generate resource files\ninclude(cmake/resources/generate_resources.cmake)\n\nadd_subdirectory(src)\n\nif (BUILD_TESTS OR BUILD_BENCHMARKS)\n    add_subdirectory(mocks)\nendif ()\n\nif (BUILD_TESTS)\n    enable_testing()\n    add_subdirectory(tests)\nendif ()\n\nif (BUILD_BENCHMARKS)\n    add_subdirectory(benchmarks)\nendif ()\n\nfeature_summary(WHAT ALL)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.3515625,
          "content": "# Chatterino code guidelines\n\nThis is a set of guidelines for contributing to Chatterino. The goal is to teach programmers without a C++ background (java/python/etc.), people who haven't used Qt, or otherwise have different experience, the idioms of the codebase. Thus we will focus on those which are different from those other environments. There are extra guidelines available [here](https://hackmd.io/@fourtf/chatterino-pendantic-guidelines) but they are considered as extras and not as important.\n\n### General (non-code related) guidelines for contributing to Chatterino\n\n- Make a specific branch for your pull request instead of using the master, main, or mainline branch. This will prevent future problems with updating your branch after your PR is merged.\n\n# Tooling\n\n## Formatting\n\nCode is automatically formatted using `clang-format`. It takes the burden off of the programmer and ensures that all contributors use the same style (even if mess something up accidentally). We recommend that you set up automatic formatting on file save in your editor.\n\n# Comments\n\nComments should only be used to:\n\n- Increase readability (e.g. grouping member variables).\n- Containing information that can't be expressed in code.\n\nTry to structure your code so that comments are not required.\n\n#### Good example\n\n```cpp\n/// Result is 0 if a == b, negative if a < b and positive if b > a.\n/// ^^^ You can't know this from the function signature!\n//      Even better: Return a \"strong ordering\" type.\n//          (but we don't have such a type right now)\nint compare(const QString &a, const QString &b);\n```\n\n#### Bad example\n\n```cpp\n/*\n * Matches a link and returns std::nullopt if it failed and a\n * QRegularExpressionMatch on success.\n * ^^^ This comment just repeats the function signature!!!\n *\n * @param text The text that will be checked if it contains a\n * link\n * ^^^ No need to repeat the obvious.\n */\nstd::optional<QRegularExpressionMatch> matchLink(const QString &text);\n```\n\n# Code\n\n## Arithmetic Types\n\nArithmetic types (like char, short, int, long, float and double), bool, and pointers are NOT initialized by default in c++. They keep whatever value is already at their position in the memory. This makes debugging harder and is unpredictable, so we initialize them to zero by using `{}` after their name when declaring them.\n\n```cpp\nclass ArithmeticTypes\n{\n    int thisIs0{};\n    QWidget *thisIsNull{};\n    bool thisIsFalse_{};\n    // int a; // <- Initialized to \"random\" value.\n    // QWidget *randomPtr.\n\n    std::vector<int> myVec; // <- other types call constructors instead, so no need for {}\n    // std::vector<int> myVec{}; <- pointless {}\n\n    int thisIs5 = 5; // <- Also fine, we initialize it with another value.\n};\n\nvoid myFunc() {\n    int a = 1 + 1; // <- here we initialize it immediately, so it's fine.\n}\n```\n\n## Passing parameters\n\nThe way a parameter is passed, signals how it is going to be used inside of the function. C++ doesn't have multiple return values, so there are \"out parameters\" (reference to a variable that is going to be assigned inside of the function) to simulate multiple return values.\n\n**Cheap to copy types** like int/enum/etc. can be passed in per value since copying them is fast.\n\n```cpp\nvoid setValue(int value) {\n    // ...\n}\n```\n\n**References** mean that the variable doesn't need to be copied when it is passed to a function.\n\n| type               | meaning                                                                                  |\n| ------------------ | ---------------------------------------------------------------------------------------- |\n| `const Type& name` | _in_ Parameter. It is NOT going to be modified and may be copied inside of the function. |\n| `Type& name`       | _out_ or _in+out_ Parmameter. It will be modified.                                       |\n\n**Pointers** signal that objects are managed manually. While the above are only guaranteed to live as long as the function call (= don't store and use later) these may have more complex lifetimes.\n\n| type         | meaning                                                                                                                    |\n| ------------ | -------------------------------------------------------------------------------------------------------------------------- |\n| `Type* name` | The lifetime of the parameter may exceed the length of the function call. It may use the `QObject` parent/children system. |\n\n**R-value references** `&&` work similar to regular references but signal the parameter should be \"consumed\".\n\n```cpp\nvoid storeLargeObject(LargeObject &&object) {\n    // ...\n}\n\nvoid storeObject(std::unique_ptr<Object> &&object) {\n    // ...\n}\n\nvoid main() {\n    // initialize a large object (= will be expensive to copy)\n    LargeObject large = // ...\n\n    // Object accepts an r-value reference + we use std::move()\n    // => We move the object = no need to copy.\n    storeLargeObject(std::move(large));\n\n    // But even worse, you can't copy a unique_ptr so we need to move here!\n    std::unique_ptr<Object> unique = // ...\n    storeObject(std::move(unique));\n\n    // The pointer contained by unique has now been consumed by \"storeObject\"\n    // so it just holds a null pointer now.\n    assert(unique.get() == nullptr);\n}\n```\n\nGenerally the lowest level of requirement should be used, e.g. passing `Channel&` instead of `std::shared_ptr<Channel>&` (aka `ChannelPtr`) if possible.\n\n## Members\n\nAll function names are in `camelCase`. _Private_ member variables are in `camelCase_` (note the underscore at the end). We don't use the `get` prefix for getters. We mark functions as `const` [if applicable](https://stackoverflow.com/questions/751681/meaning-of-const-last-in-a-function-declaration-of-a-class).\n\n```cpp\nclass NamedObject\n{\npublic:\n    const QString &name() const; // <- no \"get\" prefix.\n    void setName(const QString &name);\n    bool hasLongName() const; // <- \"has\" or \"is\" prefix is okay\n\n    static void myStaticFunction(); // <- also lowercase\n    QString publicName;\n\nprivate:\n    // Private variables have \"_\" suffix.\n    QString name_;\n    // QString name; <- collides with name() function\n};\n\nvoid myFreeStandingFunction(); // <- also lower case\n```\n\n## Casts\n\n- **Avoid** c-style casts: `(type)variable`.\n- Instead use explicit type casts: `type(variable)`\n- Or use one of [static_cast](https://en.cppreference.com/w/cpp/language/static_cast), [const_cast](https://en.cppreference.com/w/cpp/language/const_cast) and [dynamic_cast](https://en.cppreference.com/w/cpp/language/dynamic_cast)\n- Try to avoid [reinterpret_cast](https://en.cppreference.com/w/cpp/language/reinterpret_cast) unless necessary.\n\n```cpp\nvoid example() {\n    float f = 123.456;\n    int i = (int)f; // <- don't\n    int i = int(f); // <- do\n\n    Base* base = // ...\n    Derived* derived = (Derived*)base;               // <- don't\n    Derived* derived = dynamic_cast<Derived*>(base); // <- do\n\n    // Only use \"const_cast\" solved if using proper const correctness doesn't work.\n    const int c = 123;\n    ((int &)c) = 123;           // <- don't\n    const_cast<int &>(c) = 123; // <- do (but only sometimes)\n\n    // \"reinterpret_cast\" is also only required in very rarely.\n    int p = 123;\n    float *pp = (float*)&p;\n    float *pp = reinterpret_cast<float*>(&p);\n}\n```\n\n## This\n\nAlways use `this` to refer to instance members to make it clear where we use either locals or members.\n\n```cpp\nclass Test\n{\n    void testFunc(int a);\n    int testInt_{};\n}\n\nTest::testFunc(int a)\n{\n    // do\n    this->testInt_ += 2;\n    this->testFunc();\n\n    // don't\n    testInt_ -= 123;\n    testFunc(2);\n    this->testFunc(testInt_ + 1);\n}\n```\n\n## Managing resources\n\n#### Regular classes\n\nKeep the element on the stack if possible. If you need a pointer or have complex ownership you should use one of these classes:\n\n- Use `std::unique_ptr` if the resource has a single owner.\n- Use `std::shared_ptr` if the resource has multiple owners.\n\n#### QObject classes\n\n- Use the [object tree](https://doc.qt.io/qt-5/objecttrees.html#) to manage lifetimes where possible. Objects are destroyed when their parent object is destroyed.\n- If you have to explicitly delete an object use `variable->deleteLater()` instead of `delete variable`. This ensures that it will be deleted on the correct thread.\n- If an object doesn't have a parent, consider using `std::unique_ptr<Type, DeleteLater>` with `DeleteLater` from \"src/common/Common.hpp\". This will call `deleteLater()` on the pointer once it goes out of scope, or the object is destroyed.\n\n## Conventions\n\n#### Usage strings\n\nWhen informing the user about how a command is supposed to be used, we aim to follow [this standard](https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html) where possible.\n\n- Square brackets are reserved for `[optional arguments]`.\n- Angle brackets are reserved for `<required arguments>`.\n- The word _Usage_ should be capitalized and must be followed by a colon.\n- If the usage deserves a description, put a dot after all parameters and explain it briefly.\n\n##### Good\n\n- `Usage: /block <user>`\n- `Usage: /unblock <user>. Unblocks a user.`\n- `Usage: /streamlink [channel]`\n- `Usage: /usercard <user> [channel]`\n\n##### Bad\n\n- `Usage /streamlink <channel>` - Missing colon after _Usage_.\n- `usage: /streamlink <channel>` - _Usage_ must be capitalized.\n- `Usage: /streamlink channel` - The required argument `channel` must be wrapped in angle brackets.\n- `Usage: /streamlink <channel>.` - Don't put a dot after usage if it's not followed by a description.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "MIT License\n\nCopyright (c) 2017\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "QtCreatorPackageManager.cmake",
          "type": "blob",
          "size": 0.2734375,
          "content": "# https://www.qt.io/blog/qt-creator-cmake-package-manager-auto-setup\n\n# set(QT_CREATOR_SKIP_PACKAGE_MANAGER_SETUP ON) # skip both conan and vcpkg auto-setups\n# set(QT_CREATOR_SKIP_CONAN_SETUP ON) # skip conan auto-setup\nset(QT_CREATOR_SKIP_VCPKG_SETUP ON) # skip vcpkg auto-setup\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1435546875,
          "content": "![chatterinoLogo](https://user-images.githubusercontent.com/41973452/272541622-52457e89-5f16-4c83-93e7-91866c25b606.png)\nChatterino 2 [![GitHub Actions Build (Windows, Ubuntu, MacOS)](https://github.com/Chatterino/chatterino2/workflows/Build/badge.svg?branch=master)](https://github.com/Chatterino/chatterino2/actions?query=workflow%3ABuild+branch%3Amaster) [![Cirrus CI Build (FreeBSD only)](https://api.cirrus-ci.com/github/Chatterino/chatterino2.svg?branch=master)](https://cirrus-ci.com/github/Chatterino/chatterino2/master) [![Chocolatey Package](https://img.shields.io/chocolatey/v/chatterino?include_prereleases)](https://chocolatey.org/packages/chatterino) [![Flatpak Package](https://img.shields.io/flathub/v/com.chatterino.chatterino)](https://flathub.org/apps/details/com.chatterino.chatterino)\n============\n\nChatterino 2 is a chat client for [Twitch.tv](https://twitch.tv).\nThe Chatterino 2 wiki can be found [here](https://wiki.chatterino.com).\nContribution guidelines can be found [here](https://wiki.chatterino.com/Contributing%20for%20Developers).\n\n## Download\n\nCurrent releases are available at [https://chatterino.com](https://chatterino.com).\nWindows users can also install Chatterino [from Chocolatey](https://chocolatey.org/packages/chatterino).\n\n## Nightly build\n\nYou can download the latest Chatterino 2 build over [here](https://github.com/Chatterino/chatterino2/releases/tag/nightly-build)\n\nYou might also need to install the [VC++ Redistributables](https://aka.ms/vs/17/release/vc_redist.x64.exe) from Microsoft if you do not have it installed already.  \nIf you still receive an error about `MSVCR120.dll missing`, then you should install the [VC++ 2013 Restributable](https://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x64.exe).\n\n## Building\n\nTo get source code with required submodules run:\n\n```shell\ngit clone --recurse-submodules https://github.com/Chatterino/chatterino2.git\n```\n\nor\n\n```shell\ngit clone https://github.com/Chatterino/chatterino2.git\ncd chatterino2\ngit submodule update --init --recursive\n```\n\n- [Building on Windows](../master/BUILDING_ON_WINDOWS.md)\n- [Building on Windows with vcpkg](../master/BUILDING_ON_WINDOWS_WITH_VCPKG.md)\n- [Building on Linux](../master/BUILDING_ON_LINUX.md)\n- [Building on macOS](../master/BUILDING_ON_MAC.md)\n- [Building on FreeBSD](../master/BUILDING_ON_FREEBSD.md)\n\n## Git blame\n\nThis project has big commits in the history which touch most files while only doing stylistic changes. To improve the output of git-blame, consider setting:\n\n```shell\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nThis will ignore all revisions mentioned in the [`.git-blame-ignore-revs`\nfile](./.git-blame-ignore-revs). GitHub does this by default.\n\n## Code style\n\nThe code is formatted using [clang-format](https://clang.llvm.org/docs/ClangFormat.html). Our configuration is found in the [.clang-format](.clang-format) file in the repository root directory.\n\nFor more contribution guidelines, take a look at [the wiki](https://wiki.chatterino.com/Contributing%20for%20Developers/).\n\n## Doxygen\n\nDoxygen is used to generate project information daily and is available [here](https://doxygen.chatterino.com).\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "conanfile.py",
          "type": "blob",
          "size": 1.6279296875,
          "content": "from conan import ConanFile\nfrom conan.tools.files import copy\nfrom os import path\n\n\nclass Chatterino(ConanFile):\n    name = \"Chatterino\"\n    requires = \"boost/1.83.0\"\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\n    default_options = {\n        \"with_benchmark\": False,\n        \"with_openssl3\": True,\n        \"openssl*:shared\": True,\n        \"boost*:header_only\": True,\n    }\n    options = {\n        \"with_benchmark\": [True, False],\n        # Qt is built with OpenSSL 3 from version 6.5.0 onwards\n        \"with_openssl3\": [True, False],\n    }\n    generators = \"CMakeDeps\", \"CMakeToolchain\"\n\n    def requirements(self):\n        if self.options.get_safe(\"with_benchmark\", False):\n            self.requires(\"benchmark/1.7.1\")\n\n        if self.options.get_safe(\"with_openssl3\", False):\n            self.requires(\"openssl/3.2.0\")\n        else:\n            self.requires(\"openssl/1.1.1t\")\n\n    def generate(self):\n        def copy_bin(dep, selector, subdir):\n            src = path.realpath(dep.cpp_info.bindirs[0])\n            dst = path.realpath(path.join(self.build_folder, subdir))\n\n            if src == dst:\n                return\n\n            copy(self, selector, src, dst, keep_path=False)\n\n        for dep in self.dependencies.values():\n            # macOS\n            copy_bin(dep, \"*.dylib\", \"bin\")\n            # Windows\n            copy_bin(dep, \"*.dll\", \"bin\")\n            copy_bin(dep, \"*.dll\", \"Chatterino2\")  # used in CI\n            # Linux\n            copy(\n                self,\n                \"*.so*\",\n                dep.cpp_info.libdirs[0],\n                path.join(self.build_folder, \"bin\"),\n                keep_path=False,\n            )\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 1.0107421875,
          "content": "{\n  \"$schema\": \"https://raw.githubusercontent.com/microsoft/vcpkg-tool/main/docs/vcpkg.schema.json\",\n  \"name\": \"chatterino\",\n  \"version\": \"2.0.0\",\n  \"builtin-baseline\": \"01f602195983451bc83e72f4214af2cbc495aa94\",\n  \"dependencies\": [\n    \"boost-asio\",\n    \"boost-circular-buffer\",\n    \"boost-foreach\",\n    \"boost-interprocess\",\n    \"boost-signals2\",\n    \"boost-variant\",\n    {\n      \"name\": \"qt5compat\",\n      \"default-features\": false,\n      \"features\": [\"textcodec\"]\n    },\n    {\n      \"name\": \"qtbase\",\n      \"default-features\": false,\n      \"features\": [\n        \"concurrent\",\n        \"gui\",\n        \"jpeg\",\n        \"network\",\n        \"openssl\",\n        \"png\",\n        \"widgets\"\n      ]\n    },\n    {\n      \"name\": \"qtimageformats\",\n      \"default-features\": false,\n      \"features\": [\"webp\"]\n    },\n    \"qtsvg\"\n  ],\n  \"features\": {\n    \"benchmarks\": {\n      \"description\": \"Build benchamarks\",\n      \"dependencies\": [\"benchmark\"]\n    },\n    \"tests\": {\n      \"description\": \"Build tests\",\n      \"dependencies\": [\"gtest\"]\n    }\n  }\n}\n"
        }
      ]
    }
  ]
}