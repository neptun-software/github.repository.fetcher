{
  "metadata": {
    "timestamp": 1736565984452,
    "page": 964,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "baidu/tera",
      "stars": 1892,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2431640625,
          "content": "*.o\n*.a\n*.pyc\n\n#protobuf auto-gen code\nsrc/proto/*.pb.*\n\n#version.cc is auto generated\nsrc/version.cc\n\n#leveldb binary\nsrc/leveldb/db_import\nsrc/leveldb/leveldbutil\nsrc/leveldb/tera_bench\n\ndepends.mk\nbuild.conf\n\n.build/\nbuild/\nthirdsrc/\nthirdparty/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.92578125,
          "content": "env:\n  global:\n    - secure: \"EBGwhqHaPbERmOAPA7a1IprZZdFjEZqnuekgkNTBtzmGTaIYuh1BbSNGmVtnj3DuXuqAusiYN6olW2lMax15Fqw3Mwh++vh6DJFQ4wePImCzot7D4fTcopmNS2yoPl0IeyL/sLyQrxjflBfoTzw6DUZAXiU55gGB1faqCAfM5sQ=\"\n    - CC=gcc-4.8\n    - CXX=g++-4.8\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - gcc-4.8\n      - g++-4.8\n      - gdb\n      - apport\n  coverity_scan:\n    project:\n      name: \"baidu/tera\"\n      description: \"An Internet-Scale Database.\"\n    notification_email: tera@users.noreply.github.com\n    build_command_prepend: \"make clean\"\n    build_command:   \"make -j4\"\n    branch_pattern: coverity_scan\n\nbefore_install:\n    - ulimit -c unlimited -S\n    - ulimit -a\n    - echo -n | openssl s_client -connect scan.coverity.com:443 | \n      sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | \n      sudo tee -a /etc/ssl/certs/ca-\n\ninstall:\n    - bash -x build.sh origin\n\nscript:\n    - make check > /dev/null 2>&1\n\n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 3.05859375,
          "content": "Tera Build Manual\n=================\n\nThis document is written for people who intend to build the SDK\nlibraries, server binaries and other utilities of Tera from the\nsource code.\n\nPre-requisite\n=============\n\nOperating System\n* Linux\n\nBuild Essential\n* GCC (4.8.2 or newer)\n  https://gcc.gnu.org/\n* CMake (3.2.x or newer)\n  https://cmake.org/\n* Python (2.7.x only)\n  https://www.python.org/\n\nDependency Overview\n* sofa-pbrpc (1.1.1 or newer)\n  https://github.com/baidu/sofa-pbrpc/\n* Protocol Buffers (2.6.1 or newer)\n  https://developers.google.com/protocol-buffers/\n* snappy (1.1.1 or newer)\n  http://google.github.io/snappy/\n* zookeeper (3.3.3 or newer)\n  https://zookeeper.apache.org/\n* gflags (2.1.1 or newer)\n  https://github.com/gflags/gflags/\n* glog (0.3.3 or newer)\n  https://github.com/google/glog/\n* googletest (1.7.0 or newer)\n  https://github.com/google/googletest/\n* gperftools (2.2.1 only)\n  https://code.google.com/p/gperftools/\n* ins (0.14 or newer)\n  https://github.com/baidu/ins/\n* boost (1.53.0 or newer)\n  http://www.boost.org/\n\nOn a 64-bit system, the following library is strongly recommended\nby gperftools. See INSTALL document of gperftools for more details.\n* libunwind (0.99 only)\n  http://www.nongnu.org/libunwind/\n\nMost Linux distributions have the following libraries\npre-installed. But if they are not, install them by yourself.\n* readline\n  https://cnswww.cns.cwru.edu/php/chet/readline/rltop.html\n* ncurses\n  https://www.gnu.org/software/ncurses/\n\nBasic Build\n===========\n\n1. Edit depends.mk\n1.1. Open depends.mk\nIf there is no file named 'depends.mk' under project's root directory,\ntype 'cp depends.mk.template depends.mk' to create one.\n1.2. Fill the right side of '=' of the following lines with the\nlocations of corresponding dependencies.\n  SOFA_PBRPC_PREFIX=\n  PROTOBUF_PREFIX=\n  SNAPPY_PREFIX=\n  ZOOKEEPER_PREFIX=\n  GFLAGS_PREFIX=\n  GLOG_PREFIX=\n  GTEST_PREFIX=\n  GPERFTOOLS_PREFIX=\n  INS_PREFIX=\nTake 'SNAPPY_PREFIX=' as an example. Assume snappy is installed under\n/usr/local, then modify this line to:\n  SNAPPY_PREFIX=/usr/local\n\n1.3. Fill 'BOOST_INCDIR=' with the location of boost source code.\nFor example, if boost source code is under /usr/src/boost_1_57_0,\nthen this line should be modified to:\n  BOOST_INCDIR=/usr/src/boost_1_57_0\n\n1.4. Normally, other variables do not need to be modified.\nIn general, the headers and libraries of a software should be found\nunder 'include' and 'lib' of its installation directory, respectively.\n*_INCDIR or *_LIBDIR need to be modified only if exceptions occur.\n\n2. Type 'make' to compile the package.\n  make -j4\n\nOne-command Build\n=================\n\nFor convenience, we provide an one-command build script. Run the script:\n  sh build.sh\nIt will automatically download the tarballs of all the needed dependencies,\ninstall them under 'thirdparty' directory and link their static libraries\ninto Tera.\n\nOutput of Build\n===============\n\nAfter success build, the output will be put under 'build' directory.\nThe structure of the directory is as below:\n* include: SDK headers\n* lib: SDK libraries\n* bin: executable program, including servers and utilities\n"
        },
        {
          "name": "BUILD-cn",
          "type": "blob",
          "size": 2.78515625,
          "content": "Tera构建手册\n============\n\n本文件指导你从Tera源代码构建出Tera的SDK头文件、SDK库文件、服务端\n可执行程序、以及其它工具。\n\n系统要求\n========\n\n操作系统\n* Linux系统\n\n构建工具\n* GCC (4.8.2 or newer)\n  https://gcc.gnu.org/\n* CMake (3.2.x or newer)\n  https://cmake.org/\n* Python (2.7.x only)\n  https://www.python.org/\n\n第三方软件\n* sofa-pbrpc (1.1.1 or newer)\n  https://github.com/baidu/sofa-pbrpc/\n* Protocol Buffers (2.6.1 or newer)\n  https://developers.google.com/protocol-buffers/\n* snappy (1.1.1 or newer)\n  http://google.github.io/snappy/\n* zookeeper (3.3.3 or newer)\n  https://zookeeper.apache.org/\n* gflags (2.1.1 or newer)\n  https://github.com/gflags/gflags/\n* glog (0.3.3 or newer)\n  https://github.com/google/glog/\n* googletest (1.7.0 or newer)\n  https://github.com/google/googletest/\n* gperftools (2.2.1 only)\n  https://code.google.com/p/gperftools/\n* ins (0.14 or newer)\n  https://github.com/baidu/ins/\n* boost (1.53.0 or newer)\n  http://www.boost.org/\n\n此外，在64位系统中，gperftools可能依赖以下软件，请参见gperftools\n的安装说明。\n* libunwind (0.99 only)\n  http://www.nongnu.org/libunwind/\n\n下列必需的开发库在多数Linux发行版中会默认预装，但在某些发行版中\n可能需要自行安装。\n* readline\n  https://cnswww.cns.cwru.edu/php/chet/readline/rltop.html\n* ncurses\n  https://www.gnu.org/software/ncurses/\n\n编译步骤\n========\n\n1. 编辑depends.mk\n1.1. 打开默认的depends.mk\n如果源码目录下没有depends.mk，将depends.mk.template拷贝成\ndepends.mk\n1.2. 在以下变量的\"=\"右边填上对应软件的安装路径\n  SOFA_PBRPC_PREFIX=\n  PROTOBUF_PREFIX=\n  SNAPPY_PREFIX=\n  ZOOKEEPER_PREFIX=\n  GFLAGS_PREFIX=\n  GLOG_PREFIX=\n  GTEST_PREFIX=\n  GPERFTOOLS_PREFIX=\n  INS_PREFIX=\n以\"SNAPPY_PREFIX=\"为例，假设snappy安装在/usr/local，那么这一行\n应该改为：\n  SNAPPY_PREFIX=/usr/local\n\n1.3. 在\"BOOST_INCDIR=\"右边填上boost源代码的存放路径\n例如，boost源代码放在/usr/src/boost_1_57_0，那么这一行应该改为：\n  BOOST_INCDIR=/usr/src/boost_1_57_0\n\n1.4. 其它变量仅在特殊情况下需要修改\n一般情况下软件的头文件和库文件分别位于安装目录下的include和lib，\n仅在不是这种情况时才需要单独修改相应的*_INCDIR或*_LIBDIR变量。\n\n2. 执行以下命令\n  make -j4\n\n一键构建\n========\n\n为了方便快速试用，我们提供了一键构建功能，执行下面这个命令：\n  sh build.sh\n它会自动下载所有第三方软件，安装在thirdparty目录下，并以静态连接\n方式生成Tera的可执行程序。\n\n构建结果\n========\n\n如果构建成功，构建结果将位于build目录下，目录结构如下：\n* include: SDK头文件\n* lib: SDK库文件\n* bin: 可执行程序，包括服务端程序和其它工具\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4482421875,
          "content": "Copyright (c) 2015, Baidu, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the Baidu, Inc. nor the names of it\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "LICENSE.Apache",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 12.7724609375,
          "content": "include depends.mk\n\n# OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)\nOPT ?= -g2 -Wall -Werror        # (B) Debug mode, w/ full line-level debugging symbols\n# OPT ?= -O2 -g2 -DNDEBUG   # (C) Profiling mode: opt, but w/debugging symbols\n\nifndef CXX\n    CXX = g++\nendif\nifndef CC\n    CC = gcc\nendif\nTEST_OPT = -g2 -Wall -Dprivate=public\n\nINCPATH += -I./src -I./include -I./src/leveldb/include -I./src/leveldb -I./src/sdk \\\n           -I./src/sdk/java/native-src $(DEPS_INCPATH) \nLEVELDB_INCPATH = \"-I../ -I../../include/ -I../../thirdparty/include/\"\nCFLAGS += $(OPT) $(INCPATH) -fPIC -fvisibility=hidden # hide internal symbol of tera\nTEST_CFLAGS += $(TEST_OPT) $(INCPATH) -fPIC -fvisibility=hidden # hide internal symbol of tera\nCXXFLAGS += -std=gnu++11 $(CFLAGS)\nTEST_CXXFLAGS += -std=gnu++11 $(TEST_CFLAGS)\nLDFLAGS += -rdynamic $(DEPS_LDPATH) $(DEPS_LDFLAGS) -lpthread -lrt -lz -ldl \\\n           -lreadline -lncurses -fPIC\nSO_LDFLAGS += -rdynamic $(DEPS_LDPATH) $(SO_DEPS_LDFLAGS) -lpthread -lrt -lz -ldl \\\n              -shared -fPIC -Wl,--version-script,so-version-script # hide symbol of thirdparty libs\n\nPROTO_FILES := $(wildcard src/proto/*.proto)\nPROTO_OUT_CC := $(PROTO_FILES:.proto=.pb.cc)\nPROTO_OUT_H := $(PROTO_FILES:.proto=.pb.h)\n\nACCESS_SRC := $(wildcard src/access/*.cc) $(wildcard src/access/authorization/*.cc) \\\n              $(wildcard src/access/helpers/*.cc) $(wildcard src/access/giano/*.cc) \\\n              $(wildcard src/access/identification/*.cc) $(wildcard src/access/verification/*.cc)\nQUOTA_SRC := $(wildcard src/quota/*.cc) $(wildcard src/quota/helpers/*.cc) \\\n             $(wildcard src/quota/limiter/*.cc)\nMASTER_SRC := $(wildcard src/master/*.cc)\nTABLETNODE_SRC := $(wildcard src/tabletnode/*.cc)\nIO_SRC := $(wildcard src/io/*.cc)\nSDK_SRC := $(wildcard src/sdk/*.cc) $(wildcard src/sdk/test/global_txn_testutils.cc) \\\n\t\t   src/observer/rowlocknode/rowlocknode_zk_adapter.cc src/observer/rowlocknode/ins_rowlocknode_zk_adapter.cc\nHTTP_SRC := $(wildcard src/sdk/http/*.cc)\nPROTO_SRC := $(filter-out %.pb.cc, $(wildcard src/proto/*.cc)) $(PROTO_OUT_CC)\nJNI_TERA_SRC := $(wildcard src/sdk/java/native-src/*.cc)\nVERSION_SRC := src/version.cc\nOTHER_SRC := $(wildcard src/zk/*.cc) $(wildcard src/utils/*.cc) $(VERSION_SRC) \\\n             src/tera_flags.cc src/sdk/test/global_txn_testutils.cc\nCOMMON_SRC := $(wildcard src/common/base/*.cc) $(wildcard src/common/net/*.cc) \\\n              $(wildcard src/common/file/*.cc) $(wildcard src/common/file/recordio/*.cc) \\\n              $(wildcard src/common/console/*.cc) $(wildcard src/common/log/*.cc) \\\n\t\t\t  $(wildcard src/common/metric/*.cc) $(wildcard src/common/*.cc)\nSERVER_WRAPPER_SRC := src/tera_main_wrapper.cc\nSERVER_SRC := src/tera_main.cc src/common/tera_entry.cc\nCLIENT_SRC := src/teracli_main.cc src/io/io_flags.cc\nTERAUTIL_SRC := src/terautil.cc src/io/io_flags.cc\nGTXN_TEST_SRC := src/sdk/test/global_txn_test_tool.cc\nTEST_CLIENT_SRC := src/tera_test_main.cc\nTERA_C_SRC := src/tera_c.cc\n#MONITOR_SRC := src/monitor/teramo_main.cc\nMARK_SRC := src/benchmark/mark.cc src/benchmark/mark_main.cc\nCOMMON_TEST_SRC := $(wildcard src/common/test/*.cc)\nTEST_SRC := src/utils/test/prop_tree_test.cc src/utils/test/tprinter_test.cc \\\n            src/io/test/tablet_io_test.cc src/io/test/tablet_scanner_test.cc \\\n            src/io/test/load_test.cc src/master/test/master_test.cc \\\n            src/master/test/trackable_gc_test.cc \\\n            src/observer/test/rowlock_test.cc src/observer/test/scanner_test.cc \\\n            src/observer/test/observer_test.cc \\\n            $(wildcard src/sdk/test/*_test.cc) $(COMMON_TEST_SRC)\n\nTIMEORACLE_SRC := $(wildcard src/timeoracle/*.cc) src/common/tera_entry.cc\nTIMEORACLE_BENCH_SRC := src/timeoracle/bench/timeoracle_bench.cc\nROWLOCK_SRC := $(wildcard src/observer/rowlocknode/*.cc) src/sdk/rowlock_client.cc\nROWLOCK_PROXY_SRC := $(wildcard src/observer/rowlockproxy/*.cc) \nOBSERVER_SRC := src/observer/executor/scanner_impl.cc src/observer/executor/random_key_selector.cc src/observer/executor/notification_impl.cc\nOBSERVER_DEMO_SRC := $(wildcard src/observer/observer_demo.cc)\n\nTEST_OUTPUT := test_output\nUNITTEST_OUTPUT := $(TEST_OUTPUT)/unittest\n\nACCESS_OBJ := $(ACCESS_SRC:.cc=.o)\nQUOTA_OBJ := $(QUOTA_SRC:.cc=.o)\nMASTER_OBJ := $(MASTER_SRC:.cc=.o)\nTABLETNODE_OBJ := $(TABLETNODE_SRC:.cc=.o)\nIO_OBJ := $(IO_SRC:.cc=.o)\nSDK_OBJ := $(SDK_SRC:.cc=.o)\nPROTO_OBJ := $(PROTO_SRC:.cc=.o)\nJNI_TERA_OBJ := $(JNI_TERA_SRC:.cc=.o)\nOTHER_OBJ := $(OTHER_SRC:.cc=.o)\nCOMMON_OBJ := $(COMMON_SRC:.cc=.o)\nSERVER_WRAPPER_OBJ := $(SERVER_WRAPPER_SRC:.cc=.o)\nSERVER_OBJ := $(SERVER_SRC:.cc=.o)\nCLIENT_OBJ := $(CLIENT_SRC:.cc=.o)\nTERAUTIL_OBJ := $(TERAUTIL_SRC:.cc=.o)\nGTXN_TEST_OBJ := $(GTXN_TEST_SRC:.cc=.o)\nTEST_CLIENT_OBJ := $(TEST_CLIENT_SRC:.cc=.o)\nTERA_C_OBJ := $(TERA_C_SRC:.cc=.o)\nMONITOR_OBJ := $(MONITOR_SRC:.cc=.o)\nMARK_OBJ := $(MARK_SRC:.cc=.o)\nHTTP_OBJ := $(HTTP_SRC:.cc=.o)\nCOMMON_TEST_OBJ := $(COMMON_TEST_SRC:.cc=.o)\nTEST_OBJ := $(TEST_SRC:.cc=.o)\nTIMEORACLE_OBJ := $(TIMEORACLE_SRC:.cc=.o)\nTIMEORACLE_BENCH_OBJ := $(TIMEORACLE_BENCH_SRC:.cc=.o)\nROWLOCK_OBJ := $(ROWLOCK_SRC:.cc=.o)\nROWLOCK_PROXY_OBJ := $(ROWLOCK_PROXY_SRC:.cc=.o)\nOBSERVER_OBJ := $(OBSERVER_SRC:.cc=.o)\nOBSERVER_DEMO_OBJ := $(OBSERVER_DEMO_SRC:.cc=.o)\nALL_OBJ := $(ACCESS_OBJ) $(QUOTA_OBJ) $(MASTER_OBJ) $(TABLETNODE_OBJ) $(IO_OBJ) $(SDK_OBJ) $(PROTO_OBJ) \\\n           $(JNI_TERA_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(SERVER_OBJ) $(CLIENT_OBJ) $(TERAUTIL_OBJ) \\\n           $(TEST_CLIENT_OBJ) $(TERA_C_OBJ) $(MONITOR_OBJ) $(MARK_OBJ) \\\n           $(SERVER_WRAPPER_OBJ) $(TIMEORACLE_OBJ) $(ROWLOCK_OBJ) $(ROWLOCK_PROXY_OBJ)  $(OBSERVER_OBJ) $(OBSERVER_DEMO_OBJ)\nLEVELDB_LIB := src/leveldb/libleveldb.a\nLEVELDB_UTIL := src/leveldb/util/histogram.o src/leveldb/port/port_posix.o\n\nPROGRAM = tera_main tera_master tabletserver teracli terautil tera_test timeoracle timeoracle_bench rowlock observer_demo rowlock_proxy\nTEST_PROGRAM=gtxn_test_tool\n\nLIBRARY = libtera.a\nSOLIBRARY = libtera.so\nTERA_C_SO = libtera_c.so\nJNILIBRARY = libjni_tera.so\nOBSERVER_LIBRARY = libobserver.a\nBENCHMARK = tera_bench tera_mark\nTESTS = prop_tree_test tprinter_test string_util_test tablet_io_test \\\n        tablet_scanner_test fragment_test progress_bar_test master_test load_test \\\n        common_test sdk_test \n\n.PHONY: all clean cleanall test\n\nall: $(PROGRAM) $(TEST_PROGRAM) $(LIBRARY) $(SOLIBRARY) $(TERA_C_SO) $(JNILIBRARY) $(BENCHMARK) $(OBSERVER_LIBRARY)\n\tmkdir -p build/include build/lib build/bin build/log build/benchmark\n\tcp $(PROGRAM) build/bin\n\tcp $(LIBRARY) $(SOLIBRARY) $(TERA_C_SO) $(JNILIBRARY) $(OBSERVER_LIBRARY) build/lib\n\tcp src/leveldb/tera_bench .\n\tcp -r benchmark/*.sh benchmark/ycsb4tera/ $(BENCHMARK) build/benchmark\n\tcp -r include build/\n\tcp -r conf build\n\tmkdir -p test/tools\n\tcp $(TEST_PROGRAM) test/tools\n\techo 'Done'\n\ntest: $(TESTS)\n\tmkdir -p $(UNITTEST_OUTPUT)\n\tmv $(TESTS) $(UNITTEST_OUTPUT)\n\tCXXFLAGS=$(LEVELDB_INCPATH) LDFLAGS=\"$(LDFLAGS)\" CC=$(CC) CXX=$(CXX) $(MAKE) test -C src/leveldb\n\tcp src/leveldb/*_test $(UNITTEST_OUTPUT)\n\ncheck: test\n\t( cd $(UNITTEST_OUTPUT); \\\n\tfor t in $(TESTS); do echo \"***** Running $$t\"; ./$$t || exit 1; done )\n\t$(MAKE) check -C src/leveldb\n\nclean:\n\trm -rf $(ALL_OBJ) $(TEST_OBJ) $(PROTO_OUT_CC) $(PROTO_OUT_H) $(TEST_OUTPUT)\n\t$(MAKE) clean -C src/leveldb\n\trm -rf $(PROGRAM) $(TEST_PROGRAM) $(LIBRARY) $(OBSERVER_LIBRARY) $(SOLIBRARY) $(TERA_C_SO) $(JNILIBRARY) $(BENCHMARK) $(TESTS) terahttp \n\ncleanall:\n\t$(MAKE) clean\n\trm -rf build\n\trm -rf test/tools\n\ntera_main: src/tera_main_wrapper.o src/version.o src/tera_flags.o\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntera_master: $(SERVER_OBJ) $(MASTER_OBJ) $(IO_OBJ) $(SDK_OBJ) \\\n             $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ) $(QUOTA_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nMASTER_ENTRY_OBJ=src/master/master_entry.o\ntabletserver: $(SERVER_OBJ) $(TABLETNODE_OBJ) $(IO_OBJ) $(SDK_OBJ) $(filter-out $(MASTER_ENTRY_OBJ),$(MASTER_OBJ)) \\\n              $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ) $(QUOTA_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nlibtera.a: $(SDK_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_UTIL)\n\t$(AR) -rs $@ $^\n\nobserver_demo : $(OBSERVER_DEMO_OBJ) $(OBSERVER_LIBRARY) $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nlibobserver.a: $(OBSERVER_OBJ) $(SDK_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_UTIL) \\\n\t           $(IO_OBJ)\n\t$(AR) -rs $@ $^\n\t\nlibtera.so: $(SDK_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_UTIL) $(IO_OBJ) \n\t$(CXX) -o $@ $^ $(SO_LDFLAGS)\n\nlibtera_c.so: $(TERA_C_OBJ) $(LIBRARY)\n\t$(CXX) -o $@ $^ $(SO_LDFLAGS)\n\nteracli: $(CLIENT_OBJ) $(LIBRARY) $(LEVELDB_LIB) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nterautil: $(TERAUTIL_OBJ) $(LEVELDB_LIB) $(LIBRARY) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ngtxn_test_tool: $(GTXN_TEST_OBJ) $(LIBRARY) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\n#teramo: $(MONITOR_OBJ) $(LIBRARY)\n#\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntera_mark: $(MARK_OBJ) $(LIBRARY) $(LEVELDB_LIB) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntera_test: $(TEST_CLIENT_OBJ) $(LIBRARY) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $(TEST_CLIENT_OBJ) $(ACCESS_OBJ) $(LIBRARY) $(LDFLAGS)\n\ntimeoracle: $(TIMEORACLE_OBJ) $(PROTO_OBJ) $(COMMON_OBJ) $(OTHER_OBJ) $(SDK_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntimeoracle_bench : $(TIMEORACLE_BENCH_OBJ) $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nrowlock : $(SERVER_OBJ) $(ROWLOCK_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(SDK_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nrowlock_proxy : $(SERVER_OBJ) $(ROWLOCK_PROXY_OBJ) $(PROTO_OBJ) $(COMMON_OBJ) $(OBSERVER_LIBRARY) $(LEVELDB_LIB)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nterahttp: $(HTTP_OBJ) $(PROTO_OBJ) $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nlibjni_tera.so: $(JNI_TERA_OBJ) $(LIBRARY) \n\t$(CXX) -o $@ $^ $(SO_LDFLAGS)\n\nsrc/leveldb/libleveldb.a: FORCE\n\tCXXFLAGS=$(LEVELDB_INCPATH) LDFLAGS=\"$(LDFLAGS)\" CC=$(CC) CXX=$(CXX) $(MAKE) -C src/leveldb\n\ntera_bench:\n\n# unit test\ncommon_test: $(COMMON_TEST_OBJ) $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nprop_tree_test: src/utils/test/prop_tree_test.o $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntprinter_test: src/utils/test/tprinter_test.o $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nstring_util_test: src/utils/test/string_util_test.o $(LIBRARY)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntablet_io_test: src/sdk/tera.o src/io/test/tablet_io_test.o src/tabletnode/tabletnode_sysinfo.o\\\n                $(IO_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(TABLETNODE_OBJ)\\\n                $(SDK_OBJ) $(QUOTA_OBJ) $(ACCESS_OBJ)\\\n                $(filter-out $(MASTER_ENTRY_OBJ),$(MASTER_OBJ)) src/leveldb/util/histogram.o\n\t$(CXX) $(TEST_CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nload_test: src/sdk/tera.o src/io/test/load_test.o src/tabletnode/tabletnode_sysinfo.o\\\n\t\t\t$(IO_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(TABLETNODE_OBJ) $(SDK_OBJ)\\\n      $(ACCESS_OBJ) $(QUOTA_OBJ) src/leveldb/util/histogram.o $(filter-out $(MASTER_ENTRY_OBJ),$(MASTER_OBJ))\n\t$(CXX) $(TEST_CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nfragment_test: src/utils/test/fragment_test.o src/utils/fragment.o\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\nprogress_bar_test: src/common/test/progress_bar_test.o src/common/console/progress_bar.o\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\ntablet_scanner_test: src/sdk/tera.o src/io/test/tablet_scanner_test.o src/tabletnode/tabletnode_sysinfo.o \\\n\t\t\t\t\t $(IO_OBJ) $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ)\\\n           $(LEVELDB_LIB) $(TABLETNODE_OBJ) $(SDK_OBJ)\\\n           $(ACCESS_OBJ) $(QUOTA_OBJ) src/leveldb/util/histogram.o\\\n           $(filter-out $(MASTER_ENTRY_OBJ),$(MASTER_OBJ))\n\t$(CXX) $(TEST_CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nmaster_test: src/master/test/master_test.o src/master/test/trackable_gc_test.o $(MASTER_OBJ) $(IO_OBJ) $(SDK_OBJ) \\\n             $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ) $(QUOTA_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS) $(TEST_CXXFLAGS)\n\nsdk_test: src/sdk/test/global_txn_internal_test.o src/sdk/test/global_txn_test.o \\\n          src/sdk/test/filter_utils_test.o src/sdk/test/scan_impl_test.o \\\n          src/sdk/test/sdk_timeout_manager_test.o src/sdk/test/sdk_test.o $(SDK_OBJ) \\\n          $(PROTO_OBJ) $(OTHER_OBJ) $(COMMON_OBJ) $(LEVELDB_LIB) $(ACCESS_OBJ)\n\t$(CXX) -o $@ $^ $(LDFLAGS)\n\n$(ALL_OBJ): %.o: %.cc $(PROTO_OUT_H)\n\t$(CXX) $(CXXFLAGS) -c $< -o $@\n\n$(TEST_OBJ): %.o: %.cc $(PROTO_OUT_H)\n\t$(CXX) $(TEST_CXXFLAGS) -c $< -o $@\n\n$(VERSION_SRC): FORCE\n\tsh build_version.sh\n\n.PHONY: FORCE\nFORCE:\n\n.PHONY: proto\nproto: $(PROTO_OUT_CC) $(PROTO_OUT_H)\n\n%.pb.cc %.pb.h: %.proto\n\t$(PROTOC) --proto_path=./src/proto/ --proto_path=$(PROTOBUF_INCDIR) \\\n              --proto_path=$(SOFA_PBRPC_INCDIR) \\\n              --cpp_out=./src/proto/ $<\n\n# install output into system directories\n.PHONY: install\ninstall: $(PROGRAM) $(LIBRARY) $(SOLIBRARY) $(TERA_C_SO) $(JNILIBRARY) \n\tmkdir -p $(INSTALL_PREFIX)/bin $(INSTALL_PREFIX)/include $(INSTALL_PREFIX)/lib\n\tcp -rf $(PROGRAM) $(INSTALL_PREFIX)/bin\n\tcp -rf include/* $(INSTALL_PREFIX)/include\n\tcp -rf $(LIBRARY) $(SOLIBRARY) $(TERA_C_SO) $(JNILIBRARY) $(INSTALL_PREFIX)/lib \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8447265625,
          "content": "# Tera - An Internet-Scale Database\n\n[![Build Status](https://travis-ci.org/baidu/tera.svg?branch=master)](https://travis-ci.org/baidu/tera)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/10959/badge.svg)](https://scan.coverity.com/projects/tera)\n[![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](readme-cn.md)\n\nCopyright 2015, Baidu, Inc.\n\nTera is a high performance distributed NoSQL database, which is inspired by google's [BigTable](http://static.googleusercontent.com/media/research.google.com/zh-CN//archive/bigtable-osdi06.pdf) and designed for real-time applications. Tera can easily scale to __petabytes__ of data across __thousands__ of commodity servers. Besides, Tera is widely used in many Baidu products with varied demands，which range from throughput-oriented applications to latency-sensitive service, including web indexing, WebPage DB, LinkBase DB, etc. ([中文](readme-cn.md))\n\n## Features\n\n* Linear and modular scalability\n* Automatic and configurable sharding\n* Ranged and hashed sharding strategies\n* MVCC\n* Column-oriented storage and locality group support\n* Strictly consistent\n* Automatic failover support\n* Online schema change\n* Snapshot support\n* Support RAMDISK/SSD/DFS tiered cache\n* Block cache and Bloom Filters for real-time queries\n* Multi-type table support (RAMDISK/SSD/DISK table)\n* Easy to use [C++](doc/en/sdk_guide.md)/[Java](doc/en/sdk_guide_java.md)/[Python](doc/en/sdk_guide_python.md)/[REST-ful](doc/en/sdk_guide_http.md) API\n\n## Data model\n\nTera is the collection of many sparse, distributed, multidimensional tables. The table is indexed by a row key, column key, and a timestamp; each value in the table is an uninterpreted array of bytes.\n\n* (row:string, (column family+qualifier):string, time:int64) → string\n\nTo learn more about the schema, you can refer to [BigTable](http://static.googleusercontent.com/media/research.google.com/zh-CN//archive/bigtable-osdi06.pdf).\n\n## Architecture\n\n![架构图](resources/images/arch.png)\n\nTera has three major components: sdk, master and tablet servers.\n\n- __SDK__: a library that is linked into every application client to access Tera cluster.\n- __Master__: master is responsible for managing tablet servers and tablets, automatic load balance and garbage collection of files in filesystem.\n- __Tablet Server__: tablet server is the core module in tera, and it uses an __enhance__ [Leveldb](https://github.com/google/leveldb) as a basic storage engine. Tablet server manages a set of tablets, handles read/write/scan requests and schedule tablet split and merge online.\n\n## Building blocks\nTera is built on several pieces of open source infrastructure.\n\n- __Filesystem__ (required)\n\n    Tera uses the distributed file system to store transaction log and data files. So Tera uses an abstract file system interface, called Env, to adapt to different implementations of file systems (e.g., [BFS](https://github.com/baidu/bfs), HDFS, HDFS2, POXIS filesystem).\n\n- __Distributed lock service__ (required)\n\n    Tera relies on a highly-available and persistent distributed lock service, which is used for a variety of tasks: to ensure that there is at most one active master at any time; to store meta table's location, to discover new tablet server and finalize tablet server deaths. Tera has an adapter class to adapt to different implementations of lock service (e.g., ZooKeeper, [Nexus](https://github.com/baidu/ins))\n\n- __High performance RPC framework__ (required)\n\n    Tera is designed to handle a variety of demanding workloads, which range from throughput-oriented applications to latency-sensitive service. So Tera needs a high performance network programming framework. Now Tera heavily relies on [Sofa-pbrpc](https://github.com/baidu/sofa-pbrpc/) to meet the performance demand.\n\n- __Cluster management system__ (not necessary)\n\n    A Tera cluster in Baidu typically operates in a shared pool of machines that runs a wide variety of other distributed applications. So Tera can be deployed in a cluster management system [Galaxy](https://github.com/baidu/galaxy), which uses for scheduling jobs, managing resources on shared machines, dealing with machine failures, and monitoring machine status. Besides, Tera can also be deployed on RAW machine or in Docker container.\n\n## Documents\n\n* [Developer Doc](doc/en/README.md)\n\n## Quick start\n* __How to build__\n\n    Use sh [./build.sh](BUILD) to build Tera.\n\n* __How to deploy__\n\n    [Pseudo Distributed Mode](doc/en/onebox.md)\n\n    [Build on Docker](example/docker)\n\n* __How to access__\n\n    [teracli](doc/en/teracli.md)\n\n    [API](doc/en/sdk_guide.md)\n\n## Contributing to Tera\nContributions are welcomed and greatly appreciated.\n\nRead [Roadmap](doc/en/roadmap.md) to get a general knowledge about our development plan.\n\nSee [Contributions](doc/en/contributor.md) for more details.\n\n## Follow us\nTo join us, please send resume to tera-user at baidu.com.\n\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.conf.template",
          "type": "blob",
          "size": 3.12890625,
          "content": "#!/bin/bash\n\nif [ $# -lt 1 ]; then\n    return 1\nfi\nMIRROR=$1\n\n## Set XX_VERSION=DISABLE to void building specified dependency\nBOOST_VERSION=1_58_0\nPROTOBUF_VERSION=2.6.1\nSNAPPY_VERSION=1.1.3\nSOFA_PBRPC_VERSION=1.1.4\nZOOKEEPER_VERSION=3.4.10\nGFLAGS_VERSION=2.1.2\nGLOG_VERSION=0.3.3\nGTEST_VERSION=1.8.0\nLIBUNWIND_VERSION=0.99\nGPERFTOOLS_VERSION=2.5\nINS_VERSION=0.17\nNOSE_VERSION=1.3.7\nMONGOOSE_VERSION=6.11\n\nif [ $MIRROR == \"china\" ]; then\n    BOOST_URL=http://mirrors.tuna.tsinghua.edu.cn/macports/distfiles/boost/boost_${BOOST_VERSION}.tar.bz2\n    PROTOBUF_URL=https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.gz\n    SNAPPY_URL=http://mirrors.163.com/gentoo/distfiles/snappy-${SNAPPY_VERSION}.tar.gz\n    SOFA_PBRPC_URL=https://github.com/baidu/sofa-pbrpc/archive/v${SOFA_PBRPC_VERSION}.tar.gz\n    ZOOKEEPER_URL=http://mirrors.163.com/gentoo/distfiles/zookeeper-${ZOOKEEPER_VERSION}.tar.gz\n    GFLAGS_URL=https://github.com/schuhschuh/gflags/archive/v${GFLAGS_VERSION}.tar.gz\n    GLOG_URL=https://github.com/google/glog/archive/v${GLOG_VERSION}.tar.gz\n    GTEST_URL=https://github.com/google/googletest/archive/release-${GTEST_VERSION}.tar.gz\n    LIBUNWIND_URL=http://repository.timesys.com/buildsources/l/libunwind/libunwind-${LIBUNWIND_VERSION}/libunwind-${LIBUNWIND_VERSION}.tar.gz\n    GPERFTOOLS_URL=https://github.com/00k/gperftools/raw/master/gperftools-${GPERFTOOLS_VERSION}.tar.gz\n    INS_URL=https://github.com/baidu/ins/archive/${INS_VERSION}.tar.gz\n    NOSE_URL=http://mirrors.163.com/gentoo/distfiles/nose-${NOSE_VERSION}.tar.gz\n    MONGOOSE_URL=https://github.com/cesanta/mongoose/archive/${MONGOOSE_VERSION}.tar.gz\nelif [ $MIRROR == \"origin\" ]; then\n    # BOOST_URL=http://downloads.sourceforge.net/project/boost/boost/1.58.0/boost_${BOOST_VERSION}.tar.bz2\n    BOOST_URL=https://jaist.dl.sourceforge.net/project/boost/boost/1.58.0/boost_${BOOST_VERSION}.tar.bz2\n    PROTOBUF_URL=https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.gz\n    SNAPPY_URL=https://github.com/google/snappy/releases/download/${SNAPPY_VERSION}/snappy-${SNAPPY_VERSION}.tar.gz\n    SOFA_PBRPC_URL=https://github.com/baidu/sofa-pbrpc/archive/v${SOFA_PBRPC_VERSION}.tar.gz\n    ZOOKEEPER_URL=http://www-us.apache.org/dist/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz\n    GFLAGS_URL=https://github.com/schuhschuh/gflags/archive/v${GFLAGS_VERSION}.tar.gz\n    GLOG_URL=https://github.com/google/glog/archive/v${GLOG_VERSION}.tar.gz\n    GTEST_URL=https://github.com/google/googletest/archive/release-${GTEST_VERSION}.tar.gz\n    LIBUNWIND_URL=http://repository.timesys.com/buildsources/l/libunwind/libunwind-${LIBUNWIND_VERSION}/libunwind-${LIBUNWIND_VERSION}.tar.gz\n    GPERFTOOLS_URL=https://github.com/gperftools/gperftools/releases/download/gperftools-${GPERFTOOLS_VERSION}/gperftools-${GPERFTOOLS_VERSION}.tar.gz\n    INS_URL=https://github.com/baidu/ins/archive/${INS_VERSION}.tar.gz\n    NOSE_URL=http://mirrors.163.com/gentoo/distfiles/nose-${NOSE_VERSION}.tar.gz\n    MONGOOSE_URL=https://github.com/cesanta/mongoose/archive/${MONGOOSE_VERSION}.tar.gz\nelse\n    return 1\nfi\n\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 11.0078125,
          "content": "#!/bin/bash\n\nset -e -u -E # this script will exit if any sub-command fails\n\nMIRROR=origin\nif [ $# -ge 1 ]; then\n    MIRROR=$1\nfi\n\nWORK_DIR=$(cd $(dirname $0); pwd)\nif [ ! -f \"${WORK_DIR}/build.conf\" ]; then\n    cp ${WORK_DIR}/build.conf.template ${WORK_DIR}/build.conf\nfi\nsource ./build.conf ${MIRROR}\n\n########################################\n# download & build depend software\n########################################\n\nDEPS_SOURCE=$WORK_DIR/thirdsrc\nDEPS_PREFIX=$WORK_DIR/thirdparty\nDEPS_CONFIG=\"--prefix=${DEPS_PREFIX} --disable-shared --with-pic\"\nFLAG_DIR=$WORK_DIR/.build\n\nexport PATH=${DEPS_PREFIX}/bin:$PATH\nmkdir -p ${DEPS_SOURCE} ${DEPS_PREFIX} ${FLAG_DIR}\n\nif [ ! -f \"$WORK_DIR/depends.mk\" ]; then\n    cp $WORK_DIR/depends.mk.template $WORK_DIR/depends.mk\nfi\n\ncd ${DEPS_SOURCE}\n\n# boost\nif [ ${BOOST_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable boost.\"\nelif [ ! -f \"${FLAG_DIR}/boost_${BOOST_VERSION}\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/boost_${BOOST_VERSION}/boost\" ]; then\n    wget --no-check-certificate -O boost_${BOOST_VERSION}.tar.bz2 ${BOOST_URL}\n    tar xjf boost_${BOOST_VERSION}.tar.bz2 --recursive-unlink\n    rm -rf ${DEPS_PREFIX}/boost_${BOOST_VERSION}\n    mv boost_${BOOST_VERSION} ${DEPS_PREFIX}\n    touch \"${FLAG_DIR}/boost_${BOOST_VERSION}\"\nfi\n\n# protobuf\nif [ ${PROTOBUF_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable protobuf.\"\nelif [ ! -f \"${FLAG_DIR}/protobuf_${PROTOBUF_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libprotobuf.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/google/protobuf\" ]; then\n    #wget --no-check-certificate -O protobuf-${PROTOBUF_VERSION}.tar.gz ${PROTOBUF_URL}\n    curl -k -L ${PROTOBUF_URL} -o protobuf-${PROTOBUF_VERSION}.tar.gz\n    tar zxf protobuf-${PROTOBUF_VERSION}.tar.gz --recursive-unlink\n    cd protobuf-${PROTOBUF_VERSION}\n    ./configure ${DEPS_CONFIG}\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/protobuf_${PROTOBUF_VERSION}\"\nfi\n\n# snappy\nif [ ${SNAPPY_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable snappy.\"\nelif [ ! -f \"${FLAG_DIR}/snappy_${SNAPPY_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libsnappy.a\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/include/snappy.h\" ]; then\n    #wget --no-check-certificate -O snappy-${SNAPPY_VERSION}.tar.gz ${SNAPPY_URL}\n    curl -k -L ${SNAPPY_URL} -o snappy-${SNAPPY_VERSION}.tar.gz\n    tar zxf snappy-${SNAPPY_VERSION}.tar.gz --recursive-unlink\n    cd snappy-${SNAPPY_VERSION}\n    ./configure ${DEPS_CONFIG}\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/snappy_${SNAPPY_VERSION}\"\nfi\n\n# sofa-pbrpc\nif [ ${SOFA_PBRPC_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable sofa-pbrpc.\"\nelif [ ! -f \"${FLAG_DIR}/sofa-pbrpc_${SOFA_PBRPC_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libsofa-pbrpc.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/sofa/pbrpc\" ]; then\n    #wget --no-check-certificate -O sofa-pbrpc-${SOFA_PBRPC_VERSION}.tar.gz ${SOFA_PBRPC_URL}\n    curl -k -L ${SOFA_PBRPC_URL} -o sofa-pbrpc-${SOFA_PBRPC_VERSION}.tar.gz\n    tar zxf sofa-pbrpc-${SOFA_PBRPC_VERSION}.tar.gz --recursive-unlink\n    cd sofa-pbrpc-${SOFA_PBRPC_VERSION}\n    sed -i '/BOOST_HEADER_DIR=/ d' depends.mk\n    sed -i '/PROTOBUF_DIR=/ d' depends.mk\n    sed -i '/SNAPPY_DIR=/ d' depends.mk\n    echo \"BOOST_HEADER_DIR=${DEPS_PREFIX}/boost_${BOOST_VERSION}\" >> depends.mk\n    echo \"PROTOBUF_DIR=${DEPS_PREFIX}\" >> depends.mk\n    echo \"SNAPPY_DIR=${DEPS_PREFIX}\" >> depends.mk\n    echo \"PREFIX=${DEPS_PREFIX}\" >> depends.mk\n    make -j4\n    make install\n    cd ..\n    touch \"${FLAG_DIR}/sofa-pbrpc_${SOFA_PBRPC_VERSION}\"\nfi\n\n# zookeeper\nif [ ${ZOOKEEPER_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable zookeeper.\"\nelif [ ! -f \"${FLAG_DIR}/zookeeper_${ZOOKEEPER_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libzookeeper_mt.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/zookeeper\" ]; then\n    wget --no-check-certificate -O zookeeper-${ZOOKEEPER_VERSION}.tar.gz ${ZOOKEEPER_URL}\n    tar zxf zookeeper-${ZOOKEEPER_VERSION}.tar.gz --recursive-unlink\n    cd zookeeper-${ZOOKEEPER_VERSION}/src/c\n    ./configure ${DEPS_CONFIG}\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/zookeeper_${ZOOKEEPER_VERSION}\"\nfi\n\n# gflags\nif [ ${GFLAGS_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable gflags.\"\nelif [ ! -f \"${FLAG_DIR}/gflags_${GFLAGS_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libgflags.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/gflags\" ]; then\n    #wget --no-check-certificate -O gflags-${GFLAGS_VERSION}.tar.gz ${GFLAGS_URL}\n    curl -k -L ${GFLAGS_URL} -o gflags-${GFLAGS_VERSION}.tar.gz\n    tar zxf gflags-${GFLAGS_VERSION}.tar.gz --recursive-unlink\n    cd gflags-${GFLAGS_VERSION}\n    cmake -DCMAKE_INSTALL_PREFIX=${DEPS_PREFIX} -DGFLAGS_NAMESPACE=google -DCMAKE_CXX_FLAGS=-fPIC\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/gflags_${GFLAGS_VERSION}\"\nfi\n\n# glog\nif [ ${GLOG_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable glog.\"\nelif [ ! -f \"${FLAG_DIR}/glog_${GLOG_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libglog.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/glog\" ]; then\n    #wget --no-check-certificate -O glog-${GLOG_VERSION}.tar.gz ${GLOG_URL}\n    curl -k -L ${GLOG_URL} -o glog-${GLOG_VERSION}.tar.gz\n    tar zxf glog-${GLOG_VERSION}.tar.gz --recursive-unlink\n    cd glog-${GLOG_VERSION}\n    ./configure ${DEPS_CONFIG} CPPFLAGS=-I${DEPS_PREFIX}/include LDFLAGS=-L${DEPS_PREFIX}/lib\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/glog_${GLOG_VERSION}\"\nfi\n\n# gtest\nif [ ${GTEST_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable gtest.\"\nelif [ ! -f \"${FLAG_DIR}/gtest_${GTEST_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libgtest.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/gtest\" ]; then\n    #wget --no-check-certificate -O googletest-release-${GTEST_VERSION}.tar.gz ${GTEST_URL}\n    curl -k -L ${GTEST_URL} -o googletest-release-${GTEST_VERSION}.tar.gz\n    tar zxf googletest-release-${GTEST_VERSION}.tar.gz --recursive-unlink\n    cd googletest-release-${GTEST_VERSION}/googletest\n\n    # XXX make gcc3 happy; what's the cmake way?\n    sed -i 's/ -Wno-missing-field-initializers/ /' cmake/internal_utils.cmake\n\n    mkdir tmpbuild\n    cd tmpbuild\n    cmake -DCMAKE_C_FLAGS=\"-fPIC\" -DCMAKE_CXX_FLAGS=\"-fPIC\" ..\n    make\n    cd ..\n    cp -af tmpbuild/libgtest.a ${DEPS_PREFIX}/lib\n    cp -af tmpbuild/libgtest_main.a ${DEPS_PREFIX}/lib\n    cp -af include/gtest ${DEPS_PREFIX}/include\n    cd ../..\n    touch \"${FLAG_DIR}/gtest_${GTEST_VERSION}\"\nfi\n\n# libunwind for gperftools\nif [ ${LIBUNWIND_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable libunwind.\"\nelif [ ! -f \"${FLAG_DIR}/libunwind_${LIBUNWIND_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libunwind.a\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/include/libunwind.h\" ]; then\n    wget --no-check-certificate -O libunwind-${LIBUNWIND_VERSION}.tar.gz ${LIBUNWIND_URL}\n    tar xzf libunwind-${LIBUNWIND_VERSION}.tar.gz --recursive-unlink\n    cd libunwind-${LIBUNWIND_VERSION}\n    ./configure ${DEPS_CONFIG}\n    make CFLAGS=-fPIC -j4\n    make CFLAGS=-fPIC install\n    cd -\n    touch \"${FLAG_DIR}/libunwind_${LIBUNWIND_VERSION}\"\nfi\n\n# gperftools (tcmalloc)\nif [ ${GPERFTOOLS_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable gperftools.\"\nelif [ ! -f \"${FLAG_DIR}/gperftools_${GPERFTOOLS_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libtcmalloc_minimal.a\" ]; then\n    #wget --no-check-certificate -O gperftools-${GPERFTOOLS_VERSION}.tar.gz ${GPERFTOOLS_URL}\n    curl -k -L ${GPERFTOOLS_URL} -o gperftools-${GPERFTOOLS_VERSION}.tar.gz\n    tar zxf gperftools-${GPERFTOOLS_VERSION}.tar.gz --recursive-unlink\n    cd gperftools-${GPERFTOOLS_VERSION}\n    ./configure ${DEPS_CONFIG} CPPFLAGS=-I${DEPS_PREFIX}/include LDFLAGS=-L${DEPS_PREFIX}/lib\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/gperftools_${GPERFTOOLS_VERSION}\"\nfi\n\n# ins\nif [ ${INS_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable ins.\"\nelif [ ! -f \"${FLAG_DIR}/ins_${INS_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libins_sdk.a\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/include/ins_sdk.h\" ]; then\n    #wget --no-check-certificate -O ins-${INS_VERSION}.tar.gz ${INS_URL}\n    curl -k -L ${INS_URL} -o ins-${INS_VERSION}.tar.gz\n    tar zxf ins-${INS_VERSION}.tar.gz --recursive-unlink\n    cd ins-${INS_VERSION}\n    sed -i \"s|^PREFIX=.*|PREFIX=${DEPS_PREFIX}|\" Makefile\n    sed -i \"s|^PROTOC ?=.*|PROTOC ?=${DEPS_PREFIX}/bin/protoc|\" Makefile\n    sed -i \"s|^SNAPPY_PATH ?=.*|SNAPPY_PATH ?=${DEPS_PREFIX}|\" Makefile\n    sed -i \"s|^BOOST_PATH ?=.*|BOOST_PATH ?=${DEPS_PREFIX}/boost_${BOOST_VERSION}|\" Makefile\n    sed -i \"s|^GFLAGS_PATH ?=.*|GFLAGS_PATH ?=${DEPS_PREFIX}|\" Makefile\n    sed -i \"s|^PROTOBUF_PATH ?=.*|PROTOBUF_PATH ?=${DEPS_PREFIX}|\" Makefile\n    sed -i \"s|^PBRPC_PATH ?=.*|PBRPC_PATH ?=${DEPS_PREFIX}|\" Makefile\n    sed -i \"s|^GTEST_PATH ?=.*|GTEST_PATH ?=${DEPS_PREFIX}|\" Makefile\n    #BOOST_PATH=${DEPS_PREFIX}/boost_${BOOST_VERSION} make install_sdk\n    make -j4 install_sdk\n    cd -\n    touch \"${FLAG_DIR}/ins_${INS_VERSION}\"\nfi\n\n# nose (for test)\nif [ ${NOSE_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable nose.\"\nelif [ ! -f \"${FLAG_DIR}/nose_${NOSE_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/bin/nosetests\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/lib/nose\" ]; then\n    wget --no-check-certificate -O nose-${NOSE_VERSION}.tar.gz ${NOSE_URL}\n    tar zxf nose-${NOSE_VERSION}.tar.gz --recursive-unlink\n    cd nose-${NOSE_VERSION}\n    export PYTHONPATH=${DEPS_PREFIX}/lib\n    python setup.py install --prefix=. --install-scripts=${DEPS_PREFIX}/bin --install-lib=${DEPS_PREFIX}/lib\n    cd -\n    touch \"${FLAG_DIR}/nose_${NOSE_VERSION}\"\nfi\n\n# mongoose (for test)\nif [ ${MONGOOSE_VERSION} == \"DISABLE\" ]; then\n    echo \"Disable mongoose.\"\nelif [ ! -f \"${FLAG_DIR}/mongoose_${MONGOOSE_VERSION}\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/include/mongoose.h\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libmongoose.a\" ]; then\n    #wget --no-check-certificate -O mongoose-${MONGOOSE_VERSION}.tar.gz ${MONGOOSE_URL}\n    curl -k -L ${MONGOOSE_URL} -o mongoose-${MONGOOSE_VERSION}.tar.gz\n    tar zxf mongoose-${MONGOOSE_VERSION}.tar.gz --recursive-unlink\n    cd mongoose-${MONGOOSE_VERSION}\n    gcc -c -D_GNU_SOURCE -D__STDC_LIMIT_MACROS -g2 -pipe -Wall -Werror -fPIC mongoose.c\n    ar -lr libmongoose.a mongoose.o\n    cp mongoose.h ${DEPS_PREFIX}/include\n    cp libmongoose.a ${DEPS_PREFIX}/lib\n    touch \"${FLAG_DIR}/mongoose_${MONGOOSE_VERSION}\"\nfi\n\ncd ${WORK_DIR}\n\n########################################\n# config depengs.mk\n########################################\n\nsed -i \"s:^SOFA_PBRPC_PREFIX=.*:SOFA_PBRPC_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^PROTOBUF_PREFIX=.*:PROTOBUF_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^SNAPPY_PREFIX=.*:SNAPPY_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^ZOOKEEPER_PREFIX=.*:ZOOKEEPER_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^GFLAGS_PREFIX=.*:GFLAGS_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^GLOG_PREFIX=.*:GLOG_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^GTEST_PREFIX=.*:GTEST_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^GPERFTOOLS_PREFIX=.*:GPERFTOOLS_PREFIX=$DEPS_PREFIX:\" depends.mk\nsed -i \"s:^BOOST_INCDIR=.*:BOOST_INCDIR=$DEPS_PREFIX/boost_${BOOST_VERSION}:\" depends.mk\nsed -i \"s:^INS_PREFIX=.*:INS_PREFIX=$DEPS_PREFIX:\" depends.mk\n\n########################################\n# build tera\n########################################\n\nmake clean\nmake\n"
        },
        {
          "name": "build_version.sh",
          "type": "blob",
          "size": 2.2314453125,
          "content": "#!/bin/bash\n\n# If release a new version, modify these infos\nVERSION_INFO=\"master\"\nVERSION_ADDR=\"https://github.com/baidu/tera\"\n\nBUILD_DATE_TIME=`date`\nBUILD_HOSTNAME=`hostname`\n\ngen_info_template_header ()\n{\n    echo \"#include <iostream>\"\n    echo \"#include <sstream>\"\n    echo \"#include <string>\"\n    echo \"#include \\\"version.h\\\"\"\n    echo \"extern const char kGitInfo[] = \\\"\\\\\"\n}\n\n\ngen_info_template_foot ()\n{\n    echo \"\\\";\"\n    echo \"extern const char kBuildType[] = \\\"debug\\\";\"\n    echo \"extern const char kBuildTime[] = \\\"$BUILD_DATE_TIME\\\";\"\n    echo \"extern const char kBuilderName[] = \\\"$USER\\\";\"\n    echo \"extern const char kHostName[] = \\\"$BUILD_HOSTNAME\\\";\"\n    echo \"extern const char kCompiler[] = __VERSION__;\"\n}\n\ngen_info_print_template ()\n{\n    echo \"std::string SystemVersionInfo() {\"\n    echo \"    std::stringstream ss;\"\n    echo \"    ss << \\\"=====  Version Info ===== \\\" << std::endl;\"\n    echo \"    ss << \\\"Version: $VERSION_INFO\\\" << std::endl;\"\n    echo \"    ss << \\\"Address: $VERSION_ADDR\\\" << std::endl;\"\n    echo \"    ss << std::endl;\"\n    echo \"    ss << \\\"=====  Git Info ===== \\\" << std::endl;\"\n    echo \"    ss << kGitInfo << std::endl;\"\n    echo \"    ss << \\\"=====  Build Info ===== \\\" << std::endl;\"\n    echo \"    ss << \\\"Build Type: \\\" << kBuildType << std::endl;\"\n    echo \"    ss << \\\"Build Time: \\\" << kBuildTime << std::endl;\"\n    echo \"    ss << \\\"Builder Name: \\\" << kBuilderName << std::endl;\"\n    echo \"    ss << \\\"Build Host Name: \\\" << kHostName << std::endl;\"\n    echo \"    ss << \\\"Build Compiler: \\\" << kCompiler << std::endl;\"\n    echo \"    return ss.str();\"\n    echo \"};\"\n    echo \"void PrintSystemVersion() {\"\n    echo \"    std::cout << SystemVersionInfo() << std::endl;\"\n    echo \"};\"\n}\n\nTEMPLATE_HEADER_FILE=template_header.tmp\nTEMPLATE_FOOT_FILE=template_foot.tmp\nGIT_INFO_FILE=git_info.tmp\nVERSION_CPP_FILE=src/version.cc\n\n# generate template file\ngit log | head -n 6 | sed 's/\"/\\\\\"/g' |  sed 's/$/&\\\\n\\\\/g' > $GIT_INFO_FILE\ngen_info_template_header > $TEMPLATE_HEADER_FILE\ngen_info_template_foot > $TEMPLATE_FOOT_FILE\ngen_info_print_template >> $TEMPLATE_FOOT_FILE\n\n# generate version cpp\ncat $TEMPLATE_HEADER_FILE $GIT_INFO_FILE $TEMPLATE_FOOT_FILE > $VERSION_CPP_FILE\nrm -rf $TEMPLATE_HEADER_FILE $GIT_INFO_FILE $TEMPLATE_FOOT_FILE\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "depends.mk.template",
          "type": "blob",
          "size": 2.572265625,
          "content": "################################################################\n# Note: Edit the variable below to help find your own package\n#       that tera depends on.\n#       If you build tera using build.sh or travis.yml, it will\n#       automatically config this for you.\n################################################################\n\nSOFA_PBRPC_PREFIX=./thirdparty\nPROTOBUF_PREFIX=./thirdparty\nSNAPPY_PREFIX=./thirdparty\nZOOKEEPER_PREFIX=./thirdparty\nGFLAGS_PREFIX=./thirdparty\nGLOG_PREFIX=./thirdparty\nGTEST_PREFIX=./thirdparty\nGPERFTOOLS_PREFIX=./thirdparty\nINS_PREFIX=./thirdparty\nBOOST_INCDIR=./thirdparty/boost_1_57_0\nMONGOOSE_PREFIX=./thirdparty\n\nSOFA_PBRPC_INCDIR = $(SOFA_PBRPC_PREFIX)/include\nPROTOBUF_INCDIR = $(PROTOBUF_PREFIX)/include\nSNAPPY_INCDIR = $(SNAPPY_PREFIX)/include\nZOOKEEPER_INCDIR = $(ZOOKEEPER_PREFIX)/include/zookeeper\nGFLAGS_INCDIR = $(GFLAGS_PREFIX)/include\nGLOG_INCDIR = $(GLOG_PREFIX)/include\nGTEST_INCDIR = $(GTEST_PREFIX)/include\nGPERFTOOLS_INCDIR = $(GPERFTOOLS_PREFIX)/include\nINS_INCDIR = $(INS_PREFIX)/include\nMONGOOSE_INCDIR = $(MONGOOSE_PREFIX)/include\n\nSOFA_PBRPC_LIBDIR = $(SOFA_PBRPC_PREFIX)/lib\nPROTOBUF_LIBDIR = $(PROTOBUF_PREFIX)/lib\nSNAPPY_LIBDIR = $(SNAPPY_PREFIX)/lib\nZOOKEEPER_LIBDIR = $(ZOOKEEPER_PREFIX)/lib\nGFLAGS_LIBDIR = $(GFLAGS_PREFIX)/lib\nGLOG_LIBDIR = $(GLOG_PREFIX)/lib\nGTEST_LIBDIR = $(GTEST_PREFIX)/lib\nGPERFTOOLS_LIBDIR = $(GPERFTOOLS_PREFIX)/lib\nINS_LIBDIR = $(INS_PREFIX)/lib\nMONGOOSE_LIBDIR = $(MONGOOSE_PREFIX)/lib\n\nPROTOC = $(PROTOBUF_PREFIX)/bin/protoc\n\n################################################################\n# Note: No need to modify things below.\n################################################################\n\nDEPS_INCPATH = -I$(SOFA_PBRPC_INCDIR) -I$(PROTOBUF_INCDIR) \\\n               -I$(SNAPPY_INCDIR) -I$(ZOOKEEPER_INCDIR) \\\n               -I$(GFLAGS_INCDIR) -I$(GLOG_INCDIR) -I$(GTEST_INCDIR) \\\n               -I$(GPERFTOOLS_INCDIR) -I$(BOOST_INCDIR) -I$(INS_INCDIR) \\\n               -I$(MONGOOSE_INCDIR)\nDEPS_LDPATH = -L$(SOFA_PBRPC_LIBDIR) -L$(PROTOBUF_LIBDIR) \\\n              -L$(SNAPPY_LIBDIR) -L$(ZOOKEEPER_LIBDIR) \\\n              -L$(GFLAGS_LIBDIR) -L$(GLOG_LIBDIR) -L$(GTEST_LIBDIR) \\\n              -L$(GPERFTOOLS_LIBDIR) -L$(INS_LIBDIR) -L${MONGOOSE_LIBDIR}\nSO_DEPS_LDFLAGS = -lins_sdk -lsofa-pbrpc -lprotobuf -lsnappy -lzookeeper_mt \\\n                  -lgtest_main -lgtest -lglog -lgflags -lmongoose\nDEPS_LDFLAGS = $(SO_DEPS_LDFLAGS) -ltcmalloc_and_profiler -lunwind\n\n################################################################\n# Install prefix\n################################################################\nINSTALL_PREFIX=/usr/local\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "ft_test.sh",
          "type": "blob",
          "size": 0.01953125,
          "content": "#!/bin/bash\n\nexit 0\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme-cn.md",
          "type": "blob",
          "size": 3.00390625,
          "content": "[高性能、可伸缩的结构化数据库](http://github.com/baidu/tera)\n====\nTera是一个高性能、可伸缩的结构化数据存储系统，被设计用来管理搜索引擎万亿量级的超链与网页信息。为实现数据的实时分析与高效访问，我们使用按行键、列名和时间戳全局排序的三维数据模型组织数据，使用多级Cache系统，充分利用新一代服务器硬件大内存、SSD盘和万兆网卡的性能优势，做到模型灵活的同时，实现了高吞吐与水平扩展。([English](README.md))\n\n# 特性\n* 全局有序\n* 热点自动分片\n* 数据强一致\n* 多版本,自动垃圾收集\n* 按列存储,支持内存表\n* 动态schema\n* 支持表格快照\n* 高效随机读写\n\n# 数据模型\nTera使用了Bigtable的数据模型，可以将一张表格理解为这样一种数据结构：\n```\nmap<RowKey, map<ColummnFamily:Qualifier, map<Timestamp, Value> > >\n```\n其中RowKey、ColumnFamily、Qualifier和Value是字符串，Timestamp是一个64位整形。ColumnFamliy需要建表时指定，是访问控制、版本保留等策略的基本单位。\n\n# 系统架构\n系统主要由Tabletserver、Master和ClientSDK三部分构成。其中Tabletserver是核心服务器，承载着所有的数据管理与访问；Master是系统的仲裁者，负责表格的创建、schema更新与负载均衡；ClientSDK包含供管理员使用的命令行工具teracli和给用户使用的SDK。\n表格被按RowKey全局排序，并横向切分成多个Tablet，每个Tablet负责服务RowKey的一个区间，表格又被纵向切分为多个LocalityGroup，一个Tablet的多个Localitygroup在物理上单独存储，可以选择不同的存储介质，以优化访问效率。\n![架构图](resources/images/arch.png)\n\n# 系统依赖\n* 使用分布式文件系统（[BFS](https://github.com/baidu/bfs)、HDFS等）持久化数据与元信息\n* 使用分布式协调服务（[Nexus](https://github.com/baidu/ins/)或者Zookeeper）选主与协调\n* 使用[Sofa-pbrpc](https://github.com/baidu/sofa-pbrpc/)实现跨进程通信\n\n# 系统构建\nsh ./build.sh \n参考[BUILD](BUILD-cn)\n\n# 使用示例\n[体验单机Tera](doc/cn/onebox.md)\n\n[通过docker体验Tera](example/docker/readme-cn.md)\n\n[主要api使用方法](doc/sdk_reference/readme.md)\n\n[客户端teracli使用方法](doc/tools/teracli.md)\n\n[集群间数据迁移的dump工具terautil使用方法](doc/tools/terautil.md)\n\n[造数据 & 读写数据的工具使用方法](doc/tools/benchmark.md)\n\n[性能测试工具ycsb使用方法](doc/tools/ycsb.md)\n\n[其它文档](doc/cn/README.md)\n\n# 反馈与技术支持\ntera-user at baidu.com\n\n# 成为贡献者\n阅读[RoadMap](doc/cn/roadmap.md)文件或者源代码，了解我们当前的开发方向。\n完成[5个小任务](doc/to_be_a_contributor.md),帮你一步步成为tera贡献者。\n\n# Become a Committer\n成为tera的committer，你需要知道的一些[规则](doc/cn/to_be_a_committer.md)。\n\n# 欢迎加入\n如果你热爱开源，热爱分布式技术，请将简历发送至： \nopensearch at baidu.com\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "so-version-script",
          "type": "blob",
          "size": 0.203125,
          "content": "lang_cpp {\nglobal:\n    extern \"C++\" {\n        tera::*;\n        teraeasy::*;\n    };\nlocal:\n    *;\n};\n\nlang_c {\nglobal:\n    extern \"C\" {\n        tera_*;\n        Java_com_baidu_tera_*;\n    };\nlocal:\n    *;\n};\n\n\n"
        },
        {
          "name": "sql",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}