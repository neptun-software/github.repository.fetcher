{
  "metadata": {
    "timestamp": 1736565355729,
    "page": 185,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tindy2013/stairspeedtest-reborn",
      "stars": 3768,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 7.09375,
          "content": "language: cpp\nsudo: required\nmatrix:\n    include:\n    - name: \"macOS Build\"\n      os: osx\n      compiler: clang\n      osx_image: xcode11.3\n      script:\n        - bash scripts/build.macos.release.sh\n      before_deploy:\n        - bash scripts/build.macos.clients.sh\n        - mv base stairspeedtest\n        - tar czf stairspeedtest_reborn_darwin64.tar.gz stairspeedtest\n      deploy:\n        provider: releases\n        api_key: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_darwin64.tar.gz\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Linux x86 Build\"\n      services: docker\n      script:\n        - docker run -v $TRAVIS_BUILD_DIR:/root/workdir -e TRAVIS_BRANCH -e TRAVIS_TAG multiarch/alpine:x86-latest-stable /bin/sh -c \"apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh\"\n      before_deploy:\n        - tar czf stairspeedtest_reborn_linux32.tar.gz stairspeedtest\n      deploy:\n        provider: releases\n        api_key: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_linux32.tar.gz\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Linux x86_64 Build\"\n      services: docker\n      script:\n        - docker run -v $TRAVIS_BUILD_DIR:/root/workdir -e TRAVIS_BRANCH -e TRAVIS_TAG multiarch/alpine:amd64-latest-stable /bin/sh -c \"apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh\"\n      before_deploy:\n        - tar czf stairspeedtest_reborn_linux64.tar.gz stairspeedtest\n      deploy:\n        provider: releases\n        api_key: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_linux64.tar.gz\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Linux ARMHF Build\"\n      services: docker\n      arch: arm64\n      script:\n        - docker run -v $TRAVIS_BUILD_DIR:/root/workdir -e TRAVIS_BRANCH -e TRAVIS_TAG multiarch/alpine:armhf-latest-stable /bin/sh -c \"apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh\"\n      before_deploy:\n        - tar czf stairspeedtest_reborn_armhf.tar.gz stairspeedtest\n      deploy:\n        provider: releases\n        api_key: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_armhf.tar.gz\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Linux ARM64 Build\"\n      arch: arm64\n      services: docker\n      script:\n        - docker run -v $TRAVIS_BUILD_DIR:/root/workdir -e TRAVIS_BRANCH -e TRAVIS_TAG multiarch/alpine:aarch64-latest-stable /bin/sh -c \"apk add bash git && cd /root/workdir && bash scripts/build.alpine.release.sh\"\n      before_deploy:\n        - tar czf stairspeedtest_reborn_arm64.tar.gz stairspeedtest\n      deploy:\n        provider: releases\n        api_key: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_arm64.tar.gz\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Windows x86_64 Build\"\n      os: windows\n      before_install:\n      - |-\n         [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64\n         choco uninstall -y mingw\n         choco upgrade --no-progress -y msys2\n         export msys2='cmd //C RefreshEnv.cmd '\n         export msys2+='& set MSYS=winsymlinks:nativestrict '\n         export msys2+='& C:\\\\tools\\\\msys64\\\\msys2_shell.cmd -defterm -no-start'\n         export mingw64=\"$msys2 -mingw64 -full-path -here -c \"\\\"\\$@\"\\\" --\"\n         export msys2+=\" -msys2 -c \"\\\"\\$@\"\\\" --\"\n         $msys2 pacman --sync --noconfirm --needed base-devel git mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-libevent mingw-w64-x86_64-pcre2 mingw-w64-x86_64-freetype mingw-w64-x86_64-libpng mingw-w64-x86_64-bzip2 mingw-w64-x86_64-openssl mingw-w64-x86_64-mbedtls mingw-w64-x86_64-libsodium mingw-w64-x86_64-c-ares mingw-w64-x86_64-boost mingw-w64-x86_64-libmariadbclient unzip\n         taskkill //IM gpg-agent.exe //F\n         export PATH=/C/tools/msys64/mingw64/bin:$PATH\n         export MAKE=make\n      install:\n      - |-\n        [[ -d ~/maindeps-64/ ]] && mv ~/maindeps-64 ~/maindeps\n        [[ -d ~/clients-64/ ]] && mv ~/clients-64 ~/clients\n        $mingw64 bash scripts/build.windows.maindeps.sh\n        $mingw64 bash scripts/build.windows.clients.sh\n      before_cache:\n      - |-\n        mv ~/maindeps ~/maindeps-64\n        mv ~/clients ~/clients-64\n        $msys2 pacman --sync --clean --noconfirm\n      cache:\n        directories:\n        - $HOME/AppData/Local/Temp/chocolatey\n        - ~/maindeps-32\n        - ~/clients-32\n        - ~/maindeps-64\n        - ~/clients-64\n      script:\n        - $mingw64 bash scripts/build.windows.release.sh\n      before_deploy:\n        - mv ~/clients-64/built/websocketd.exe base/tools/gui/\n        - mv ~/clients-64/built base/tools/clients\n        - mv base stairspeedtest\n        - 7z a stairspeedtest_reborn_win64.7z stairspeedtest/\n      deploy:\n        provider: releases\n        token: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_win64.7z\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n    - name: \"Windows x86 Build\"\n      os: windows\n      before_install:\n      - |-\n         [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64\n         choco uninstall -y mingw\n         choco upgrade --no-progress -y msys2\n         export msys2='cmd //C RefreshEnv.cmd '\n         export msys2+='& set MSYS=winsymlinks:nativestrict '\n         export msys2+='& C:\\\\tools\\\\msys64\\\\msys2_shell.cmd -defterm -no-start'\n         export mingw32=\"$msys2 -mingw32 -full-path -here -c \"\\\"\\$@\"\\\" --\"\n         export msys2+=\" -msys2 -c \"\\\"\\$@\"\\\" --\"\n         $msys2 pacman --sync --noconfirm --needed base-devel git mingw-w64-i686-gcc mingw-w64-i686-cmake mingw-w64-i686-libevent mingw-w64-i686-pcre2 mingw-w64-i686-freetype mingw-w64-i686-libpng mingw-w64-i686-bzip2 mingw-w64-i686-openssl mingw-w64-i686-mbedtls mingw-w64-i686-libsodium mingw-w64-i686-c-ares mingw-w64-i686-boost mingw-w64-i686-libmariadbclient unzip\n         taskkill //IM gpg-agent.exe //F\n         export PATH=/C/tools/msys64/mingw64/bin:$PATH\n         export MAKE=make\n      install:\n      - |-\n        [[ -d ~/maindeps-32/ ]] && mv ~/maindeps-32 ~/maindeps\n        [[ -d ~/clients-32/ ]] && mv ~/clients-32 ~/clients\n        $mingw32 bash scripts/build.windows.clients.sh\n        $mingw32 bash scripts/build.windows.maindeps.sh\n      before_cache:\n      - |-\n        mv ~/maindeps ~/maindeps-32\n        mv ~/clients ~/clients-32\n        $msys2 pacman --sync --clean --noconfirm\n      cache:\n        directories:\n        - $HOME/AppData/Local/Temp/chocolatey\n        - ~/maindeps-32\n        - ~/clients-32\n        - ~/maindeps-64\n        - ~/clients-64\n      script:\n        - $mingw32 bash scripts/build.windows.release.sh\n      before_deploy:\n        - mv ~/clients-32/built/websocketd.exe base/tools/gui/\n        - mv ~/clients-32/built base/tools/clients\n        - mv base stairspeedtest\n        - 7z a stairspeedtest_reborn_win32.7z stairspeedtest/\n      deploy:\n        provider: releases\n        token: \"$GITHUB_OAUTH_TOKEN\"\n        file: \"stairspeedtest_reborn_win32.7z\"\n        skip_cleanup: true\n        draft: true\n        on:\n          tags: true\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.3447265625,
          "content": "project(stairspeedtest LANGUAGES CXX)\ncmake_minimum_required(VERSION 3.4)\nSET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/\")\nINCLUDE_DIRECTORIES(\"${CMAKE_SOURCE_DIR}/include/\")\nIF(NOT CMAKE_BUILD_TYPE)\n    SET(CMAKE_BUILD_TYPE Release)\nENDIF()\nSET(CMAKE_CXX_STANDARD 17)\nADD_DEFINITIONS(-Wall -Wextra -Wno-unused-parameter -Wno-unused-result)\n\nOPTION(USING_STD_REGEX \"Use std::regex from C++ library instead of PCRE2.\" OFF)\n\nINCLUDE(CheckCXXSourceCompiles)\nCHECK_CXX_SOURCE_COMPILES(\n\"\n#include<string>\nvoid main(){std::to_string(0);}\n\" HAVE_TO_STRING)\n\nINCLUDE(CheckSymbolExists)\nCHECK_SYMBOL_EXISTS(MSG_NOSIGNAL \"sys/socket.h\" HAVE_MSG_NOSIGNAL)\n\nIF(APPLE)\n    ADD_DEFINITIONS(-D_MACOS)\nENDIF()\n\nIF(HAVE_TO_STRING)\n    ADD_DEFINITIONS(-DHAVE_TO_STRING)\nENDIF()\n\nIF(HAVE_MSG_NOSIGNAL)\n\tADD_DEFINITIONS(-DHAVE_MSG_NOSIGNAL)\nENDIF()\n\nADD_EXECUTABLE(stairspeedtest \n\tsrc/confbuild.cpp\n\tsrc/geoip.cpp\n\tsrc/logger.cpp\n\tsrc/main.cpp\n\tsrc/md5.cpp\n\tsrc/misc.cpp\n\tsrc/multithread_test.cpp\n\tsrc/ntt.cpp\n\tsrc/printmsg.cpp\n\tsrc/processes.cpp\n\tsrc/renderer.cpp\n\tsrc/rulematch.cpp\n\tsrc/socket.cpp\n\tsrc/speedtestutil.cpp\n\tsrc/tcping.cpp\n\tsrc/webget.cpp\n\tsrc/webgui_wrapper.cpp\n\tsrc/webserver_libevent.cpp)\nINCLUDE_DIRECTORIES(src)\nLINK_DIRECTORIES(${CMAKE_SOURCE_DIR})\n\nFIND_PACKAGE(PkgConfig REQUIRED)\n\nSET(THREADS_PREFER_PTHREAD_FLAG ON)\nFIND_PACKAGE(Threads REQUIRED)\nTARGET_LINK_LIBRARIES(stairspeedtest ${CMAKE_THREAD_LIBS_INIT})\n\nPKG_CHECK_MODULES(LIBEVENT libevent REQUIRED)\nFIND_PATH(LIBEVENT_INCLUDE_DIR NAMES event.h PATHS ${LIBEVENT_INCLUDE_DIRS})\nFIND_LIBRARY(LIBEVENT_LIBRARY NAMES event PATHS ${LIBEVENT_LIBRARY_DIRS})\nLINK_DIRECTORIES(${LIBEVENT_LIBRARY_DIRS})\nINCLUDE_DIRECTORIES(${LIBEVENT_INCLUDE_DIR})\nTARGET_LINK_LIBRARIES(stairspeedtest ${LIBEVENT_LIBRARY})\n\nFIND_PACKAGE(CURL 7.54.0 REQUIRED)\nLINK_DIRECTORIES(${CURL_LIBRARY_DIRS})\nINCLUDE_DIRECTORIES(${CURL_INCLUDE_DIRS})\nTARGET_LINK_LIBRARIES(stairspeedtest CURL::libcurl)\nADD_DEFINITIONS(-DCURL_STATICLIB)\n\nFIND_PACKAGE(OpenSSL 1.1.0 REQUIRED)\nINCLUDE_DIRECTORIES(${OPENSSL_INCLUDE_DIR})\nTARGET_LINK_LIBRARIES(stairspeedtest ${OPENSSL_LIBRARIES})\n\nFIND_PACKAGE(Rapidjson REQUIRED)\nINCLUDE_DIRECTORIES(${RAPIDJSON_INCLUDE_DIRS})\n\nFIND_PACKAGE(PNG REQUIRED)\nINCLUDE_DIRECTORIES(${PNG_INCLUDE_DIRS})\nTARGET_LINK_LIBRARIES(stairspeedtest ${PNG_LIBRARIES})\nADD_DEFINITIONS(${PNG_DEFINITIONS})\n\nFIND_PACKAGE(Freetype REQUIRED)\nINCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIR_freetype2})\nTARGET_LINK_LIBRARIES(stairspeedtest ${FREETYPE_LIBRARIES})\n\nFIND_PACKAGE(PNGwriter 0.7.0 REQUIRED)\nINCLUDE_DIRECTORIES(${PNGwriter_INCLUDE_DIRS})\nTARGET_LINK_LIBRARIES(stairspeedtest PNGwriter::PNGwriter)\n\nPKG_CHECK_MODULES(YAML_CPP yaml-cpp REQUIRED)\nFIND_LIBRARY(YAML_CPP_LIBRARY NAMES yaml-cpp yaml-cppd PATHS ${YAML_CPP_LIBRARY_DIRS})\nLINK_DIRECTORIES(${YAML_CPP_LIBRARY_DIRS})\nINCLUDE_DIRECTORIES(${YAML_CPP_INCLUDE_DIRS})\nTARGET_LINK_LIBRARIES(stairspeedtest ${YAML_CPP_LIBRARY})\nADD_DEFINITIONS(-DYAML_CPP_STATIC_DEFINE)\n\nIF(USING_STD_REGEX STREQUAL \"ON\")\n    ADD_DEFINITIONS(-DUSE_STD_REGEX)\nELSE()\n    FIND_PACKAGE(PCRE2 REQUIRED)\n    INCLUDE_DIRECTORIES(${PCRE2_INCLUDE_DIRS})\n    TARGET_LINK_LIBRARIES(stairspeedtest ${PCRE2_LIBRARY})\n    ADD_DEFINITIONS(-DPCRE2_STATIC)\nENDIF()\n\nIF(WIN32)\n\tTARGET_LINK_LIBRARIES(stairspeedtest wsock32 ws2_32)\nELSE()\n\tINCLUDE(GNUInstallDirs)\n\tINSTALL(TARGETS stairspeedtest DESTINATION ${CMAKE_INSTALL_BINDIR})\nENDIF()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2019 tindy2013\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.2900390625,
          "content": "# Stair Speedtest Reborn\r\n**Proxy performance batch tester based on Shadowsocks(R), V2Ray and Trojan**  \r\n[![Build Status](https://github.com/tindy2013/stairspeedtest-reborn/actions/workflows/build.yml/badge.svg)](https://github.com/tindy2013/stairspeedtest-reborn/actions/workflows/build.yml)\r\n[![GitHub tag (latest SemVer)](https://img.shields.io/github/tag/tindy2013/stairspeedtest-reborn.svg)](https://github.com/tindy2013/stairspeedtest-reborn/tags)\r\n[![GitHub release](https://img.shields.io/github/release/tindy2013/stairspeedtest-reborn.svg)](https://github.com/tindy2013/stairspeedtest-reborn/releases)\r\n[![GitHub license](https://img.shields.io/github/license/tindy2013/stairspeedtest-reborn.svg)](https://github.com/tindy2013/stairspeedtest-reborn/blob/master/LICENSE)\r\n  \r\n## Intro\r\nThis is a C++ remake version of the original [Stair Speedtest](https://github.com/tindy2013/stairspeedtest) script. Despite its similarity to the script verion, this remake version works much more effectively, with faster node parsing, result picture rendering and even cross-platform support.  \r\n\r\n## Special Thanks\r\n* [@NyanChanMeow](https://github.com/nyanchanmeow) for the original script [SSRSpeed](https://github.com/nyanchanmeow/ssrspeed)\r\n* [@CareyWong](https://github.com/careywang) for Web GUI design\r\n* [@ang830715](https://github.com/ang830715)  for MacOS support\r\n* ...and a lot of people who have helped me during the testing phase!\r\n  \r\n## Installation  \r\n### Prebuilt release  \r\nGo to [Release Page](https://github.com/tindy2013/stairspeedtest-reborn/releases).  \r\n### Build\r\nIn general, you need the following build dependencies:  \r\n* curl\r\n* openssl\r\n* PNGwriter\r\n* libpng\r\n* freetype\r\n* zlib\r\n* yaml-cpp\r\n* libevent\r\n* pcre2\r\n* rapidjson\r\n  \r\nOn non-Windows platforms, you also need to have the following clients installed to 'tools/clients/':  \r\n* shadowsocks-libev\r\n* shadowsocksr-libev ('ss-local' installed as the name 'ssr-local')\r\n* v2ray-core\r\n* trojan\r\n  \r\nAfter installing all these dependencies, you can use CMake to configure and build:  \r\n```bash\r\ncmake .\r\nmake -j\r\n```\r\n\r\n## Usage\r\n* Run \"stairspeedtest\" for CLI speedtest, run \"webgui\" for Web GUI speedtest.\r\n* Results for subscribe link tests will be saved to a log file in \"results\" folder.\r\n* The result will be exported into a PNG file with the result log.\r\n* You can customize some settings by editing \"pref.ini\".\r\n## Compatibility\r\nTested platforms: \r\n  \r\n* Windows 10 1903 x64, Windows Server 2008 R2 x64, Windows 7 SP1 x64\r\n* Ubuntu 18.10\r\n* Debian 6.3\r\n* CentOS 7.6\r\n* MacOS 10.13.6 High Sierra, 10.14.6 Mojave, 10.15 Catalina\r\n* Android 8.0, 9.0 (with Termux)\r\n* iOS/iPadOS 13 (with iSH Shell) **Bad performance, only for testing purpose**\r\n* Raspberry Pi 4B with Raspbian (armv7l)\r\n  \r\nSupported proxy types:  \r\n\r\n |Proxy|Client|Config Parser|\r\n |:-:|:-:|:-:|\r\n |SSR|ShadowsocksR-libev| ShadowsocksR \\| Quantumult(X) \\| SSTap \\| Netch GSF |\r\n |SS|Shadowsocks-libev| Shadowsocks \\| ShadowsocksD \\| Shadowsocks Android \\| SSTap \\| Clash \\| Surge 2 \\| Surge 3+ \\| Quantumult(X) \\| Netch GSF |\r\n |V2RAY|V2Ray-Core| V2RayN \\| Quantumult(X) \\| Clash \\| Surge 4 \\| Netch GSF |\r\n |TROJAN|Trojan-Core| Trojan \\| Quantumult(X) \\| Surge 4 \\| Clash \\| Netch GSF |\r\n |SOCKS5|-| Telegram \\| SSTap \\| Clash \\| Surge 2+ \\| Netch GSF |\r\n \r\n## Known Bugs\r\n* Nothing yet\r\n\r\n## TODO\r\n* Nothing yet\r\n"
        },
        {
          "name": "base",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}