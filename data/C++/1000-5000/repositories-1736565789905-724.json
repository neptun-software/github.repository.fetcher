{
  "metadata": {
    "timestamp": 1736565789905,
    "page": 724,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ByConity/ByConity",
      "stars": 2267,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".arcignore",
          "type": "blob",
          "size": 0.7470703125,
          "content": "# .arcignore is the same as .gitignore but for Arc VCS.\n# Arc VCS is a proprietary VCS in Yandex that is very similar to Git\n# from the user perspective but with the following differences:\n# 1. Data is stored in distributed object storage.\n# 2. Local copy works via FUSE without downloading all the objects.\n# For this reason, it is better suited for huge monorepositories that can be found in large companies (e.g. Yandex, Google).\n# As ClickHouse developers, we don't use Arc as a VCS (we use Git).\n# But the ClickHouse source code is also mirrored into internal monorepository and our collegues are using Arc.\n# You can read more about Arc here: https://habr.com/en/company/yandex/blog/482926/\n\n# Repository is synchronized without 3rd-party submodules.\ncontrib\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.5966796875,
          "content": "BasedOnStyle: WebKit\nLanguage: Cpp\nAlignAfterOpenBracket: AlwaysBreak\nBreakBeforeBraces: Custom\nBraceWrapping:\n    AfterClass: true\n    AfterControlStatement: true\n    AfterEnum: true\n    AfterFunction: true\n    AfterNamespace: true\n    AfterStruct: true\n    AfterUnion: true\n    BeforeCatch: true\n    BeforeElse: true\n    IndentBraces: false\nBreakConstructorInitializersBeforeComma: false\nCpp11BracedListStyle: true\nColumnLimit: 140\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nExperimentalAutoDetectBinPacking: true\nUseTab: Never\nTabWidth: 4\n\nStandard: Cpp11\nPointerAlignment: Middle\nMaxEmptyLinesToKeep: 2\nKeepEmptyLinesAtTheStartOfBlocks: false\nAllowShortFunctionsOnASingleLine: InlineOnly\nAlwaysBreakTemplateDeclarations: true\nIndentCaseLabels: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeCpp11BracedList: false\nSortIncludes: true\nIndentPPDirectives: None\nIncludeCategories:\n  - Regex: '^<[a-z_]+>'\n    Priority: 1\n  - Regex: '^<[a-z_]+.h>'\n    Priority: 2\n  - Regex: '^[\"<](common|ext|mysqlxx|daemon|zkutil)/'\n    Priority: 90\n  - Regex: '^[\"<](DB)/'\n    Priority: 100\n  - Regex: '^[\"<](Poco)/'\n    Priority: 50\n  - Regex: '^\"'\n    Priority: 110\n  - Regex: '/'\n    Priority: 30\n  - Regex: '.*'\n    Priority: 40\nReflowComments: false\nAlignEscapedNewlinesLeft: false\nAlignEscapedNewlines: DontAlign\nAlignTrailingComments: false\n\n# Not changed:\nAccessModifierOffset: -4\nAlignConsecutiveAssignments: false\nAlignOperands: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: All\nBreakBeforeTernaryOperators: true\nCommentPragmas: '^ IWYU pragma:'\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nDerivePointerAlignment: false\nDisableFormat: false\nIndentWrappedFunctionNames: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nNamespaceIndentation: Inner\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 7.037109375,
          "content": "Checks: '-*,\n    misc-throw-by-value-catch-by-reference,\n    misc-misplaced-const,\n    misc-unconventional-assign-operator,\n    misc-redundant-expression,\n    misc-static-assert,\n    misc-unconventional-assign-operator,\n    misc-uniqueptr-reset-release,\n    misc-unused-alias-decls,\n    misc-unused-parameters,\n    misc-unused-using-decls,\n\n    modernize-avoid-bind,\n    modernize-loop-convert,\n    modernize-make-shared,\n    modernize-make-unique,\n    modernize-raw-string-literal,\n    modernize-redundant-void-arg,\n    modernize-replace-auto-ptr,\n    modernize-replace-random-shuffle,\n    modernize-use-bool-literals,\n    modernize-use-nullptr,\n    modernize-use-using,\n    modernize-use-equals-default,\n    modernize-use-equals-delete,\n\n    performance-faster-string-find,\n    performance-for-range-copy,\n    performance-implicit-conversion-in-loop,\n    performance-inefficient-algorithm,\n    performance-inefficient-vector-operation,\n    performance-move-constructor-init,\n    performance-no-automatic-move,\n    performance-trivially-destructible,\n    performance-unnecessary-copy-initialization,\n\n    readability-avoid-const-params-in-decls,\n    readability-const-return-type,\n    readability-container-size-empty,\n    readability-convert-member-functions-to-static,\n    readability-delete-null-pointer,\n    readability-deleted-default,\n    readability-make-member-function-const,\n    readability-misplaced-array-index,\n    readability-non-const-parameter,\n    readability-qualified-auto,\n    readability-redundant-access-specifiers,\n    readability-redundant-control-flow,\n    readability-redundant-function-ptr-dereference,\n    readability-redundant-smartptr-get,\n    readability-redundant-string-cstr,\n    readability-redundant-string-init,\n    readability-static-definition-in-anonymous-namespace,\n    readability-string-compare,\n    readability-uniqueptr-delete-release,\n    readability-redundant-member-init,\n    readability-simplify-subscript-expr,\n    readability-simplify-boolean-expr,\n    readability-inconsistent-declaration-parameter-name,\n    readability-identifier-naming,\n\n    bugprone-undelegated-constructor,\n    bugprone-argument-comment,\n    bugprone-bad-signal-to-kill-thread,\n    bugprone-bool-pointer-implicit-conversion,\n    bugprone-copy-constructor-init,\n    bugprone-dangling-handle,\n    bugprone-forward-declaration-namespace,\n    bugprone-fold-init-type,\n    bugprone-inaccurate-erase,\n    bugprone-incorrect-roundings,\n    bugprone-infinite-loop,\n    bugprone-integer-division,\n    bugprone-macro-parentheses,\n    bugprone-macro-repeated-side-effects,\n    bugprone-misplaced-operator-in-strlen-in-alloc,\n    bugprone-misplaced-pointer-artithmetic-in-alloc,\n    bugprone-misplaced-widening-cast,\n    bugprone-move-forwarding-reference,\n    bugprone-multiple-statement-macro,\n    bugprone-parent-virtual-call,\n    bugprone-posix-return,\n    bugprone-reserved-identifier,\n    bugprone-signed-char-misuse,\n    bugprone-sizeof-container,\n    bugprone-sizeof-expression,\n    bugprone-string-constructor,\n    bugprone-string-integer-assignment,\n    bugprone-string-literal-with-embedded-nul,\n    bugprone-suspicious-enum-usage,\n    bugprone-suspicious-include,\n    bugprone-suspicious-memset-usage,\n    bugprone-suspicious-missing-comma,\n    bugprone-suspicious-string-compare,\n    bugprone-swapped-arguments,\n    bugprone-terminating-continue,\n    bugprone-throw-keyword-missing,\n    bugprone-too-small-loop-variable,\n    bugprone-undefined-memory-manipulation,\n    bugprone-unhandled-self-assignment,\n    bugprone-unused-raii,\n    bugprone-unused-return-value,\n    bugprone-use-after-move,\n    bugprone-virtual-near-miss,\n\n    cert-dcl21-cpp,\n    cert-dcl50-cpp,\n    cert-env33-c,\n    cert-err34-c,\n    cert-err52-cpp,\n    cert-flp30-c,\n    cert-mem57-cpp,\n    cert-msc50-cpp,\n    cert-oop58-cpp,\n\n    google-build-explicit-make-pair,\n    google-build-namespaces,\n    google-default-arguments,\n    google-explicit-constructor,\n    google-readability-casting,\n    google-readability-avoid-underscore-in-googletest-name,\n    google-runtime-int,\n    google-runtime-operator,\n\n    hicpp-exception-baseclass,\n\n    clang-analyzer-core.CallAndMessage,\n    clang-analyzer-core.DivideZero,\n    clang-analyzer-core.NonNullParamChecker,\n    clang-analyzer-core.NullDereference,\n    clang-analyzer-core.StackAddressEscape,\n    clang-analyzer-core.UndefinedBinaryOperatorResult,\n    clang-analyzer-core.VLASize,\n    clang-analyzer-core.uninitialized.ArraySubscript,\n    clang-analyzer-core.uninitialized.Assign,\n    clang-analyzer-core.uninitialized.Branch,\n    clang-analyzer-core.uninitialized.CapturedBlockVariable,\n    clang-analyzer-core.uninitialized.UndefReturn,\n    clang-analyzer-cplusplus.InnerPointer,\n    clang-analyzer-cplusplus.NewDelete,\n    clang-analyzer-cplusplus.NewDeleteLeaks,\n    clang-analyzer-cplusplus.PlacementNewChecker,\n    clang-analyzer-cplusplus.SelfAssignment,\n    clang-analyzer-deadcode.DeadStores,\n    clang-analyzer-optin.cplusplus.VirtualCall,\n    clang-analyzer-security.insecureAPI.UncheckedReturn,\n    clang-analyzer-security.insecureAPI.bcmp,\n    clang-analyzer-security.insecureAPI.bcopy,\n    clang-analyzer-security.insecureAPI.bzero,\n    clang-analyzer-security.insecureAPI.getpw,\n    clang-analyzer-security.insecureAPI.gets,\n    clang-analyzer-security.insecureAPI.mkstemp,\n    clang-analyzer-security.insecureAPI.mktemp,\n    clang-analyzer-security.insecureAPI.rand,\n    clang-analyzer-security.insecureAPI.strcpy,\n    clang-analyzer-unix.Malloc,\n    clang-analyzer-unix.MallocSizeof,\n    clang-analyzer-unix.MismatchedDeallocator,\n    clang-analyzer-unix.Vfork,\n    clang-analyzer-unix.cstring.BadSizeArg,\n    clang-analyzer-unix.cstring.NullArg,\n\n    boost-use-to-string,\n'\nWarningsAsErrors: '*'\n\nCheckOptions:\n  - key: readability-identifier-naming.ClassCase\n    value: CamelCase\n  - key: readability-identifier-naming.EnumCase\n    value: CamelCase\n  - key: readability-identifier-naming.LocalVariableCase\n    value: lower_case\n  - key: readability-identifier-naming.StaticConstantCase\n    value: aNy_CasE\n  - key: readability-identifier-naming.MemberCase\n    value: lower_case\n  - key: readability-identifier-naming.PrivateMemberPrefix\n    value: ''\n  - key: readability-identifier-naming.ProtectedMemberPrefix\n    value: ''\n  - key: readability-identifier-naming.PublicMemberCase\n    value: lower_case\n  - key: readability-identifier-naming.MethodCase\n    value: camelBack\n  - key: readability-identifier-naming.PrivateMethodPrefix\n    value: ''\n  - key: readability-identifier-naming.ProtectedMethodPrefix\n    value: ''\n  - key: readability-identifier-naming.ParameterPackCase\n    value: lower_case\n  - key: readability-identifier-naming.StructCase\n    value: CamelCase\n  - key: readability-identifier-naming.TemplateTemplateParameterCase\n    value: CamelCase\n  - key: readability-identifier-naming.TemplateUsingCase\n    value: lower_case\n  - key: readability-identifier-naming.TypeTemplateParameterCase\n    value: CamelCase\n  - key: readability-identifier-naming.TypedefCase\n    value: CamelCase\n  - key: readability-identifier-naming.UnionCase\n    value: CamelCase\n  - key: readability-identifier-naming.UsingCase\n    value: CamelCase\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4091796875,
          "content": "root = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n\n# Matches multiple files with brace expansion notation\n# Set default charset\n[*.{c,cpp,cxx,h,hpp,hxx,py,cmake}]\ncharset = utf-8\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[CMakeLists.txt]\ncharset = utf-8\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1455078125,
          "content": "contrib/* linguist-vendored\n*.h linguist-language=C++\n# to avoid frequent conflicts\ntests/queries/0_stateless/arcadia_skip_list.txt text merge=union\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.2275390625,
          "content": "# emacs files\n*~\n*\\#\n.tramp_history\n\n# vim cache files\n*.swp\n\n# auto generated files\n*.logrt\n\n/build*\n/debug*\n/cnch_test\n/tests/venv\n\n# logs\n*.log\n*.stderr\n*.stdout\n\n/docs/build\n/docs/publish\n/docs/edit\n/docs/website\n/docs/venv\n/docs/tools/venv\n/docs/tools/translate/venv\n/docs/tools/translate/output.md\n/docs/en/single.md\n/docs/ru/single.md\n/docs/zh/single.md\n/docs/ja/single.md\n/docs/fa/single.md\n/docs/en/development/cmake-in-clickhouse.md\n\n# callgrind files\ncallgrind.out.*\n\n# ignore kdevelop files\n*.kdev4\n*.kdev_include_paths\n\n# ignore sublime project files\n*.sublime-*\n\n# Qt Creator files\n*.user\n\n# ignore perf output\n*/perf.data\n\n# ignore build files\nCMakeCache.txt\nCMakeFiles\nMakefile\ncmake_install.cmake\nCTestTestfile.cmake\n*.a\n*.o\ncmake-build-*\n\n# Python cache\n*.pyc\n__pycache__\n*.pytest_cache\n\ntest.cpp\nCPackConfig.cmake\nCPackSourceConfig.cmake\n\n*-preprocessed.xml\n\ncore\n!core/\nvgcore*\n\n*.deb\n*.build\n*.upload\n*.changes\nbuild-stamp\nconfigure-stamp\n\n*.bin\n*.mrk\n*.mrk2\n*.mrk3\n\n.dupload.conf\n\n# Netbeans project files\nnbproject/*\n\n# JetBrains project files\n.idea\n\n# Microsoft Visual Studio Code\n.vscode\n\nconfig-preprocessed.xml\n\n# Protobuf\n*.pb.cpp\n*.pb.h\n\n# Ignore symlink to private repository\n/private\n\n\n# cquery cache\n/.cquery-cache\n\n# ccls cache\n/.ccls-cache\n\n# clangd cache\n/.clangd\n/.cache\n\n/compile_commands.json\n\n# Toolchains\n/cmake/toolchain/*\n\n# ANTLR extension cache\n.antlr\n\n# ANTLR generated files\n/src/Parsers/New/*.interp\n/src/Parsers/New/*.tokens\n/src/Parsers/New/ClickHouseParserBaseVisitor.*\n\n# pytest-profiling\n/prof\n\n*.iml\n\npackage.json\npackage-lock.json\n\n# data store\n/programs/server/data\n/programs/server/metadata\n/programs/server/store\n\n/output\n\n.tags\n\n# generating code\n/src/Protos/*.pb.cc\n/src/Protos/*.pb.h\n\n# maven\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\ndependency-reduced-pom.xml\nbuildNumber.properties\n.mvn/timing.properties\n# https://github.com/takari/maven-wrapper#usage-without-binary-jar\n.mvn/wrapper/maven-wrapper.jar\n\n# Eclipse m2e generated files\n# Eclipse Core\n.project\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# DS_Store is auto generated by Mac in every opened folder, which is useless but annoying.\n*.DS_Store\n# rust generating files\n/rust\n\ncherry-pick\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 12.3720703125,
          "content": "[submodule \"contrib/poco\"]\n\tpath = contrib/poco\n\turl = https://github.com/ClickHouse-Extras/poco.git\n\tbranch = clickhouse\n[submodule \"contrib/zstd\"]\n\tpath = contrib/zstd\n\turl = https://github.com/facebook/zstd.git\n[submodule \"contrib/lz4\"]\n\tpath = contrib/lz4\n\turl = https://github.com/lz4/lz4.git\n[submodule \"contrib/cctz\"]\n\tpath = contrib/cctz\n\turl = https://github.com/ClickHouse-Extras/cctz.git\n[submodule \"contrib/zlib-ng\"]\n\tpath = contrib/zlib-ng\n\turl = https://github.com/ClickHouse-Extras/zlib-ng.git\n\tbranch = clickhouse-new\n[submodule \"contrib/googletest\"]\n\tpath = contrib/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"contrib/capnproto\"]\n\tpath = contrib/capnproto\n\turl = https://github.com/capnproto/capnproto.git\n[submodule \"contrib/double-conversion\"]\n\tpath = contrib/double-conversion\n\turl = https://github.com/google/double-conversion.git\n[submodule \"contrib/re2\"]\n\tpath = contrib/re2\n\turl = https://github.com/ByConity/re2.git\n[submodule \"contrib/mariadb-connector-c\"]\n\tpath = contrib/mariadb-connector-c\n\turl = https://github.com/ClickHouse-Extras/mariadb-connector-c.git\n[submodule \"contrib/jemalloc\"]\n\tpath = contrib/jemalloc\n\turl = https://github.com/ByConity/clickhouse-jemalloc.git\n[submodule \"contrib/unixodbc\"]\n\tpath = contrib/unixodbc\n\turl = https://github.com/ClickHouse-Extras/UnixODBC.git\n[submodule \"contrib/protobuf\"]\n\tpath = contrib/protobuf\n\turl = https://github.com/ClickHouse-Extras/protobuf.git\n\tbranch = v3.13.0.1\n[submodule \"contrib/base64\"]\n\tpath = contrib/base64\n\turl = https://github.com/ClickHouse-Extras/Turbo-Base64.git\n[submodule \"contrib/arrow\"]\n\tpath = contrib/arrow\n\turl = https://github.com/ByConity/clickhouse-arrow.git\n[submodule \"contrib/thrift\"]\n\tpath = contrib/thrift\n\turl = https://github.com/apache/thrift.git\n[submodule \"contrib/libxml2\"]\n\tpath = contrib/libxml2\n\turl = https://github.com/GNOME/libxml2.git\n[submodule \"contrib/libgsasl\"]\n\tpath = contrib/libgsasl\n\turl = https://github.com/ClickHouse-Extras/libgsasl.git\n[submodule \"contrib/snappy\"]\n\tpath = contrib/snappy\n\turl = https://github.com/google/snappy\n[submodule \"contrib/cppkafka\"]\n\tpath = contrib/cppkafka\n\turl = https://github.com/mfontanini/cppkafka.git\n[submodule \"contrib/brotli\"]\n\tpath = contrib/brotli\n\turl = https://github.com/google/brotli.git\n[submodule \"contrib/h3\"]\n\tpath = contrib/h3\n\turl = https://github.com/ClickHouse-Extras/h3\n[submodule \"contrib/hyperscan\"]\n\tpath = contrib/hyperscan\n\turl = https://github.com/ClickHouse-Extras/hyperscan.git\n[submodule \"contrib/libunwind\"]\n\tpath = contrib/libunwind\n\turl = https://github.com/ByConity/clickhouse-libunwind.git\n[submodule \"contrib/libunwind-old\"]\n\tpath = contrib/libunwind-old\n\turl = https://github.com/ByConity/clickhouse-libunwind.git\n[submodule \"contrib/simdjson\"]\n\tpath = contrib/simdjson\n\turl = https://github.com/simdjson/simdjson.git\n[submodule \"contrib/rapidjson\"]\n\tpath = contrib/rapidjson\n\turl = https://github.com/ClickHouse-Extras/rapidjson\n[submodule \"contrib/fastops\"]\n\tpath = contrib/fastops\n\turl = https://github.com/ClickHouse-Extras/fastops\n[submodule \"contrib/orc\"]\n\tpath = contrib/orc\n\turl = https://github.com/ByConity/clickhouse-orc.git\n[submodule \"contrib/sparsehash-c11\"]\n\tpath = contrib/sparsehash-c11\n\turl = https://github.com/sparsehash/sparsehash-c11.git\n[submodule \"contrib/grpc\"]\n\tpath = contrib/grpc\n\turl = https://github.com/ClickHouse-Extras/grpc.git\n\tbranch = v1.33.2\n[submodule \"contrib/aws\"]\n\tpath = contrib/aws\n\turl = https://github.com/ByConity/aws-sdk-cpp.git\n[submodule \"contrib/aws-c-event-stream\"]\n\tpath = contrib/aws-c-event-stream\n\turl = https://github.com/awslabs/aws-c-event-stream.git\n[submodule \"contrib/aws-c-common\"]\n\tpath = contrib/aws-c-common\n\turl = https://github.com/awslabs/aws-c-common.git\n[submodule \"contrib/aws-checksums\"]\n\tpath = contrib/aws-checksums\n\turl = https://github.com/awslabs/aws-checksums.git\n[submodule \"contrib/aws-crt-cpp\"]\n\tpath = contrib/aws-crt-cpp\n\turl = https://github.com/ClickHouse/aws-crt-cpp.git\n[submodule \"contrib/aws-c-io\"]\n\tpath = contrib/aws-c-io\n\turl = https://github.com/awslabs/aws-c-io.git\n[submodule \"contrib/aws-c-mqtt\"]\n\tpath = contrib/aws-c-mqtt\n\turl = https://github.com/awslabs/aws-c-mqtt.git\n[submodule \"contrib/aws-c-auth\"]\n\tpath = contrib/aws-c-auth\n\turl = https://github.com/awslabs/aws-c-auth.git\n[submodule \"contrib/aws-c-cal\"]\n\tpath = contrib/aws-c-cal\n\turl = https://github.com/awslabs/aws-c-cal.git\n[submodule \"contrib/aws-c-sdkutils\"]\n\tpath = contrib/aws-c-sdkutils\n\turl = https://github.com/awslabs/aws-c-sdkutils.git\n[submodule \"contrib/aws-c-http\"]\n\tpath = contrib/aws-c-http\n\turl = https://github.com/awslabs/aws-c-http.git\n[submodule \"contrib/aws-c-s3\"]\n\tpath = contrib/aws-c-s3\n\turl = https://github.com/awslabs/aws-c-s3.git\n[submodule \"contrib/aws-c-compression\"]\n\tpath = contrib/aws-c-compression\n\turl = https://github.com/awslabs/aws-c-compression.git\n[submodule \"contrib/aws-s2n-tls\"]\n\tpath = contrib/aws-s2n-tls\n\turl = https://github.com/aws/s2n-tls\n[submodule \"contrib/curl\"]\n\tpath = contrib/curl\n\turl = https://github.com/curl/curl.git\n[submodule \"contrib/icudata\"]\n\tpath = contrib/icudata\n\turl = https://github.com/ClickHouse-Extras/icudata.git\n[submodule \"contrib/icu\"]\n\tpath = contrib/icu\n\turl = https://github.com/unicode-org/icu.git\n[submodule \"contrib/flatbuffers\"]\n\tpath = contrib/flatbuffers\n\turl = https://github.com/ClickHouse-Extras/flatbuffers.git\n[submodule \"contrib/libc-headers\"]\n\tpath = contrib/libc-headers\n\turl = https://github.com/ClickHouse-Extras/libc-headers.git\n[submodule \"contrib/replxx\"]\n\tpath = contrib/replxx\n\turl = https://github.com/ClickHouse-Extras/replxx.git\n[submodule \"contrib/avro\"]\n\tpath = contrib/avro\n\turl = https://github.com/ClickHouse-Extras/avro.git\n\tignore = untracked\n[submodule \"contrib/msgpack-c\"]\n\tpath = contrib/msgpack-c\n\turl = https://github.com/msgpack/msgpack-c\n  branch = cpp_master\n[submodule \"contrib/libcpuid\"]\n\tpath = contrib/libcpuid\n\turl = https://github.com/ClickHouse-Extras/libcpuid.git\n[submodule \"contrib/openldap\"]\n\tpath = contrib/openldap\n\turl = https://github.com/ClickHouse-Extras/openldap.git\n[submodule \"contrib/AMQP-CPP\"]\n\tpath = contrib/AMQP-CPP\n  url = https://github.com/ClickHouse-Extras/AMQP-CPP.git\n[submodule \"contrib/libuv\"]\n\tpath = contrib/libuv\n\turl = https://github.com/ClickHouse-Extras/libuv.git\n\tbranch = clickhouse\n[submodule \"contrib/fmtlib\"]\n\tpath = contrib/fmtlib\n\turl = https://github.com/fmtlib/fmt.git\n[submodule \"contrib/sentry-native\"]\n\tpath = contrib/sentry-native\n\turl = https://github.com/ClickHouse-Extras/sentry-native.git\n[submodule \"contrib/gcem\"]\n\tpath = contrib/gcem\n\turl = https://github.com/kthohr/gcem.git\n[submodule \"contrib/stats\"]\n\tpath = contrib/stats\n\turl = https://github.com/kthohr/stats.git\n[submodule \"contrib/krb5\"]\n\tpath = contrib/krb5\n\turl = https://github.com/ClickHouse-Extras/krb5\n[submodule \"contrib/cyrus-sasl\"]\n\tpath = contrib/cyrus-sasl\n\turl = https://github.com/ClickHouse-Extras/cyrus-sasl\n\tbranch = cyrus-sasl-2.1\n[submodule \"contrib/miniselect\"]\n\tpath = contrib/miniselect\n\turl = https://github.com/danlark1/miniselect\n[submodule \"contrib/rocksdb\"]\n\tpath = contrib/rocksdb\n\turl = https://github.com/ClickHouse-Extras/rocksdb.git\n[submodule \"contrib/xz\"]\n\tpath = contrib/xz\n\turl = https://github.com/xz-mirror/xz\n[submodule \"contrib/folly\"]\n\tpath = contrib/folly\n\turl = https://github.com/ByConity/folly.git\n\tbranch = cnch-master\n[submodule \"contrib/glog\"]\n\tpath = contrib/glog\n\turl = https://github.com/ByConity/glob.git\n\tbranch = cnch-master\n[submodule \"contrib/abseil-cpp\"]\n\tpath = contrib/abseil-cpp\n\turl = https://github.com/ClickHouse-Extras/abseil-cpp.git\n\tbranch = lts_2021_11_02\n[submodule \"contrib/dragonbox\"]\n\tpath = contrib/dragonbox\n\turl = https://github.com/ClickHouse-Extras/dragonbox.git\n[submodule \"contrib/fast_float\"]\n\tpath = contrib/fast_float\n\turl = https://github.com/fastfloat/fast_float\n[submodule \"contrib/libpq\"]\n\tpath = contrib/libpq\n\turl = https://github.com/ClickHouse-Extras/libpq\n[submodule \"contrib/boringssl\"]\n\tpath = contrib/boringssl\n\turl = https://github.com/ClickHouse-Extras/boringssl.git\n[submodule \"contrib/NuRaft\"]\n\tpath = contrib/NuRaft\n\turl = https://github.com/ClickHouse-Extras/NuRaft.git\n[submodule \"contrib/nanodbc\"]\n\tpath = contrib/nanodbc\n\turl = https://github.com/ClickHouse-Extras/nanodbc.git\n[submodule \"contrib/datasketches-cpp\"]\n\tpath = contrib/datasketches-cpp\n\turl = https://github.com/apache/datasketches-cpp.git\n[submodule \"contrib/yaml-cpp\"]\n\tpath = contrib/yaml-cpp\n\turl = https://github.com/ClickHouse-Extras/yaml-cpp.git\n[submodule \"contrib/libpqxx\"]\n\tpath = contrib/libpqxx\n\turl = https://github.com/ClickHouse-Extras/libpqxx.git\n[submodule \"contrib/croaring\"]\n\tpath = contrib/croaring\n\turl = https://github.com/ByConity/CRoaring.git\n[submodule \"contrib/librdkafka\"]\n\tpath = contrib/librdkafka\n\turl = https://github.com/ClickHouse/librdkafka.git\n[submodule \"contrib/cassandra\"]\n\tpath = contrib/cassandra\n\turl = https://github.com/ByConity/cassandra.git\n[submodule \"contrib/incubator-brpc\"]\n\tpath = contrib/incubator-brpc\n\turl = https://github.com/ByConity/incubator-brpc.git\n\tbranch = brpc1p3\n[submodule \"contrib/gflags\"]\n\tpath = contrib/gflags\n\turl = https://github.com/gflags/gflags.git\n[submodule \"contrib/libhdfs3-open\"]\n\tpath = contrib/libhdfs3-open\n\turl = https://github.com/ByConity/libhdfs3-open.git\n[submodule \"contrib/boost\"]\n\tpath = contrib/boost\n\turl = https://github.com/ByConity/boost.git\n[submodule \"contrib/breakpad\"]\n\tpath = contrib/breakpad\n\turl = https://github.com/ByConity/breakpad.git\n[submodule \"contrib/ipdb\"]\n\tpath = contrib/ipdb\n\turl = https://github.com/ByConity/ipdb-c.git\n[submodule \"contrib/maxminddb\"]\n\tpath = contrib/maxminddb\n\turl = https://github.com/ByConity/libmaxminddb.git\n[submodule \"contrib/json-c\"]\n\tpath = contrib/json-c\n\turl = https://github.com/json-c/json-c.git\n[submodule \"contrib/numactl\"]\n\tpath = contrib/numactl\n\turl = https://github.com/ByConity/numactl.git\n[submodule \"contrib/benchmark\"]\n\tpath = contrib/benchmark\n\turl = https://github.com/google/benchmark.git\n[submodule \"contrib/hivemetastore\"]\n\tpath = contrib/hivemetastore\n\turl = https://github.com/ByConity/hivemetastore.git \n[submodule \"contrib/udns\"]\n\tpath = contrib/udns\n\turl = https://github.com/ortclib/udns.git\n[submodule \"contrib/parallel-hashmap\"]\n\tpath = contrib/parallel-hashmap\n\turl = https://github.com/greg7mdp/parallel-hashmap.git\n[submodule \"contrib/arrow-nanoarrow\"]\n\tpath = contrib/arrow-nanoarrow\n\turl = https://github.com/apache/arrow-nanoarrow.git\n[submodule \"contrib/cppjieba\"]\n\tpath = contrib/cppjieba\n\turl = https://github.com/ByConity/cppjieba.git\n[submodule \"contrib/TSQuery\"]\n\tpath = contrib/TSQuery\n\turl = https://github.com/ByConity/TSQuery.git\n[submodule \"contrib/hashidsxx\"]\n\tpath = contrib/hashidsxx\n\turl = https://github.com/schoentoon/hashidsxx.git\n[submodule \"contrib/magic_enum\"]\n\tpath = contrib/magic_enum\n\turl = https://github.com/Neargye/magic_enum.git\n[submodule \"contrib/morton-nd\"]\n\tpath = contrib/morton-nd\n\turl = https://github.com/morton-nd/morton-nd.git\n[submodule \"contrib/xxHash\"]\n\tpath = contrib/xxHash\n\turl = https://github.com/Cyan4973/xxHash.git\n[submodule \"contrib/wyhash\"]\n\tpath = contrib/wyhash\n\turl = https://github.com/wangyi-fudan/wyhash.git\n[submodule \"contrib/ulid-c\"]\n\tpath = contrib/ulid-c\n    url = https://github.com/ClickHouse/ulid-c.git\n[submodule \"contrib/corrosion\"]\n\tpath = contrib/corrosion\n\turl = https://github.com/corrosion-rs/corrosion.git\n[submodule \"contrib/libstemmer_c\"]\n\tpath = contrib/libstemmer_c\n  url = https://github.com/ClickHouse/libstemmer_c.git\n[submodule \"contrib/wordnet-blast\"]\n\tpath = contrib/wordnet-blast\n  url = https://github.com/ClickHouse/wordnet-blast\n[submodule \"contrib/lemmagen-c\"]\n\tpath = contrib/lemmagen-c\n  url = https://github.com/ClickHouse/lemmagen-c\n[submodule \"contrib/cld2\"]\n\tpath = contrib/cld2\n  url = https://github.com/ClickHouse/cld2\n[submodule \"contrib/nlp-data\"]\n\tpath = contrib/nlp-data\n  url = https://github.com/ClickHouse/nlp-data\n[submodule \"contrib/libdeflate\"]\n\tpath = contrib/libdeflate\n\turl = https://github.com/ByConity/libdeflate.git\n[submodule \"contrib/liburing\"]\n\tpath = contrib/liburing\n\turl = https://github.com/axboe/liburing.git\n[submodule \"contrib/sparse-map\"]\n\tpath = contrib/sparse-map\n\turl = https://github.com/Tessil/sparse-map.git\n[submodule \"contrib/libevent\"]\n\tpath = contrib/libevent\n\turl = https://github.com/ByConity/libevent.git\n[submodule \"contrib/java-extensions\"]\n\tpath = contrib/java-extensions\n\turl = https://github.com/ByConity/clickhouse-java-extensions.git\n[submodule \"contrib/llvm-project\"]\n\tpath = contrib/llvm-project\n\turl = https://github.com/ByConity/ClickHouse-llvm-project.git\n"
        },
        {
          "name": ".potato.yml",
          "type": "blob",
          "size": 1.2666015625,
          "content": "# This is the configuration file with settings for Potato.\n# Potato is an internal Yandex technology that allows us to sync internal [Yandex.Tracker](https://yandex.com/tracker/) and GitHub.\n\n# For all PRs where documentation is needed, just add a 'pr-feature' label and we will include it into documentation sprints.\n\n# The project name.\nname: clickhouse\n# Object handlers defines which handlers we use.\nhandlers:\n  # The handler for creating an Yandex.Tracker issue.\n  - name: issue-create\n    params:\n      triggers:\n        # The trigger for creating the Yandex.Tracker issue. When the specified event occurs, it transfers PR data to Yandex.Tracker.\n        github:pullRequest:labeled:\n          data:\n          # The Yandex.Tracker queue to create the issue in. Each issue in Tracker belongs to one of the project queues.\n          queue: CLICKHOUSEDOCS\n          # The issue title.\n          summary: '[Potato] Pull Request #{{pullRequest.number}}'\n          # The issue description.\n          description: >\n                {{pullRequest.description}}\n\n                Ссылка на Pull Request: {{pullRequest.webUrl}}\n          # The condition for creating the Yandex.Tracker issue.\n          condition: eventPayload.labels.filter(label => ['pr-feature'].includes(label.name)).length\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 1.16015625,
          "content": "# vim: ft=config\n\n[BASIC]\nmax-module-lines=2000\n# due to SQL\nmax-line-length=200\n# Drop/decrease them one day:\nmax-branches=50\nmax-nested-blocks=10\nmax-statements=200\n\n[FORMAT]\nignore-long-lines = (# )?<?https?://\\S+>?$\n\n[MESSAGES CONTROL]\ndisable = bad-continuation,\n          missing-docstring,\n          bad-whitespace,\n          too-few-public-methods,\n          invalid-name,\n          too-many-arguments,\n          keyword-arg-before-vararg,\n          too-many-locals,\n          too-many-instance-attributes,\n          cell-var-from-loop,\n          fixme,\n          too-many-public-methods,\n          wildcard-import,\n          unused-wildcard-import,\n          singleton-comparison,\n          # pytest.mark.parametrize is not callable (not-callable)\n          not-callable,\n          # https://github.com/PyCQA/pylint/issues/3882\n          # [Python 3.9] Value 'Optional' is unsubscriptable (unsubscriptable-object) (also Union)\n          unsubscriptable-object,\n          # Drop them one day:\n          redefined-outer-name,\n          broad-except,\n          bare-except,\n          no-else-return,\n          global-statement\n\n[SIMILARITIES]\n# due to SQL\nmin-similarity-lines=1000\n"
        },
        {
          "name": ".vimrc",
          "type": "blob",
          "size": 0.1025390625,
          "content": "au BufRead,BufNewFile ./* set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab tags=tags,../tags\n\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.30859375,
          "content": "# vi: ft=yaml\nextends: default\n\nrules:\n    indentation:\n        level: warning\n        indent-sequences: consistent\n    line-length:\n        # there are some bash -c \"\", so this is OK\n        max: 300\n        level: warning\n    comments:\n        min-spaces-from-content: 1\n    document-start:\n        present: false\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.1923828125,
          "content": "To see the list of authors who created the source code of ClickHouse, published and distributed by YANDEX LLC as the owner,\nrun \"SELECT * FROM system.contributors;\" query on any ClickHouse server.\n"
        },
        {
          "name": "ByConity-architecture.png",
          "type": "blob",
          "size": 413.912109375,
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 25.9931640625,
          "content": "cmake_minimum_required(VERSION 3.17)\n\nforeach(policy\n        CMP0023\n        CMP0048 # CMake 3.0\n        CMP0074 # CMake 3.12\n        CMP0077\n        CMP0079\n    )\n    if(POLICY ${policy})\n        cmake_policy(SET ${policy} NEW)\n    endif()\nendforeach()\n\n# set default policy\nforeach(default_policy_var_name\n        # make option() honor normal variables for BUILD_SHARED_LIBS:\n        # - re2\n        # - snappy\n        CMAKE_POLICY_DEFAULT_CMP0077\n        # Google Test from sources uses too old cmake, 2.6.x, and CMP0022 should\n        # set, to avoid using deprecated LINK_INTERFACE_LIBRARIES(_<CONFIG>)? over\n        # INTERFACE_LINK_LIBRARIES.\n        CMAKE_POLICY_DEFAULT_CMP0022\n    )\n    set(${default_policy_var_name} NEW)\nendforeach()\n\nproject(ClickHouse)\n\n# If turned off: e.g. when ENABLE_FOO is ON, but FOO tool was not found, the CMake will continue.\noption(FAIL_ON_UNSUPPORTED_OPTIONS_COMBINATION\n   \"Stop/Fail CMake configuration if some ENABLE_XXX option is defined (either ON or OFF)\n   but is not possible to satisfy\" ON)\n\nif(FAIL_ON_UNSUPPORTED_OPTIONS_COMBINATION)\n    set(RECONFIGURE_MESSAGE_LEVEL FATAL_ERROR)\nelse()\n    set(RECONFIGURE_MESSAGE_LEVEL WARNING)\nendif()\n\nenable_language(C CXX ASM)\n\ninclude (cmake/arch.cmake)\ninclude (cmake/target.cmake)\ninclude (cmake/tools.cmake)\ninclude (cmake/analysis.cmake)\n\ninclude (cmake/CompileFoundationDB.cmake)\n\n# Ignore export() since we don't use it,\n# but it gets broken with a global targets via link_libraries()\nmacro (export)\nendmacro ()\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/\")\nset(CMAKE_EXPORT_COMPILE_COMMANDS 1) # Write compile_commands.json\nset(CMAKE_LINK_DEPENDS_NO_SHARED 1) # Do not relink all depended targets on .so\nset(CMAKE_CONFIGURATION_TYPES \"RelWithDebInfo;Debug;Release;MinSizeRel\" CACHE STRING \"\" FORCE)\nset(CMAKE_DEBUG_POSTFIX \"d\" CACHE STRING \"Generate debug library name with a postfix.\")    # To be consistent with CMakeLists from contrib libs.\nset(CMAKE_COMPILE_WARNING_AS_ERROR ON)\n\n# Enable the ability to organize targets into hierarchies of \"folders\" for capable GUI-based IDEs.\n# For more info see https://cmake.org/cmake/help/latest/prop_gbl/USE_FOLDERS.html\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\n# Check that submodules are present only if source was downloaded with git\nif (EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/.git\" AND NOT EXISTS \"${ClickHouse_SOURCE_DIR}/contrib/boost/boost\")\n    message (FATAL_ERROR \"Submodules are not initialized. Run\\n\\tgit submodule update --init --recursive\")\nendif ()\n\ninclude (cmake/find/ccache.cmake)\n\n# Take care to add prlimit in command line before ccache, or else ccache thinks that\n# prlimit is compiler, and clang++ is its input file, and refuses to work  with\n# multiple inputs, e.g in ccache log:\n# [2021-03-31T18:06:32.655327 36900] Command line: /usr/bin/ccache prlimit --as=10000000000 --data=5000000000 --cpu=600 /usr/bin/clang++-11 - ...... std=gnu++2a -MD -MT src/CMakeFiles/dbms.dir/Storages/MergeTree/IMergeTreeDataPart.cpp.o -MF src/CMakeFiles/dbms.dir/Storages/MergeTree/IMergeTreeDataPart.cpp.o.d -o src/CMakeFiles/dbms.dir/Storages/MergeTree/IMergeTreeDataPart.cpp.o -c ../src/Storages/MergeTree/IMergeTreeDataPart.cpp\n#\n# [2021-03-31T18:06:32.656704 36900] Multiple input files: /usr/bin/clang++-11 and ../src/Storages/MergeTree/IMergeTreeDataPart.cpp\n#\n# Another way would be to use --ccache-skip option before clang++-11 to make\n# ccache ignore it.\noption(ENABLE_CHECK_HEAVY_BUILDS \"Don't allow C++ translation units to compile too long or to take too much memory while compiling.\" OFF)\nif (ENABLE_CHECK_HEAVY_BUILDS)\n    # set DATA (since RSS does not work since 2.6.x+) to 2G\n    set (RLIMIT_DATA 5000000000)\n    # set VIRT (RLIMIT_AS) to 10G (DATA*10)\n    set (RLIMIT_AS 10000000000)\n    # set CPU time limit to 600 seconds\n    set (RLIMIT_CPU 600)\n\n    # gcc10/gcc10/clang -fsanitize=memory is too heavy\n    if (SANITIZE STREQUAL \"memory\" OR COMPILER_GCC)\n       set (RLIMIT_DATA 10000000000)\n    endif()\n\n    set (CMAKE_CXX_COMPILER_LAUNCHER prlimit --as=${RLIMIT_AS} --data=${RLIMIT_DATA} --cpu=${RLIMIT_CPU} ${CMAKE_CXX_COMPILER_LAUNCHER})\nendif ()\n\nif (NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL \"None\")\n    set (CMAKE_BUILD_TYPE \"RelWithDebInfo\")\n    message (STATUS \"CMAKE_BUILD_TYPE is not set, set to default = ${CMAKE_BUILD_TYPE}\")\nendif ()\nmessage (STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\n\nstring (TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE_UC)\n\noption(USE_STATIC_LIBRARIES \"Disable to use shared libraries\" ON)\noption(MAKE_STATIC_LIBRARIES \"Disable to make shared libraries\" ${USE_STATIC_LIBRARIES})\n\nif (NOT MAKE_STATIC_LIBRARIES)\n    # DEVELOPER ONLY.\n    # Faster linking if turned on.\n    option(SPLIT_SHARED_LIBRARIES \"Keep all internal libraries as separate .so files\")\n\n    option(CLICKHOUSE_SPLIT_BINARY\n        \"Make several binaries (clickhouse-server, clickhouse-client etc.) instead of one bundled\")\nendif ()\n\nif (MAKE_STATIC_LIBRARIES AND SPLIT_SHARED_LIBRARIES)\n    message(FATAL_ERROR \"Defining SPLIT_SHARED_LIBRARIES=1 without MAKE_STATIC_LIBRARIES=0 has no effect.\")\nendif()\n\nif (NOT MAKE_STATIC_LIBRARIES AND SPLIT_SHARED_LIBRARIES)\n    set(BUILD_SHARED_LIBS 1 CACHE INTERNAL \"\")\nendif ()\n\nif (USE_STATIC_LIBRARIES)\n    list(REVERSE CMAKE_FIND_LIBRARY_SUFFIXES)\nendif ()\n\n# Implies ${WITH_COVERAGE}\noption (ENABLE_FUZZING \"Fuzzy testing using libfuzzer\" OFF)\n\nif (ENABLE_FUZZING)\n    message (STATUS \"Fuzzing instrumentation enabled\")\n    set (WITH_COVERAGE ON)\n    set (FUZZER \"libfuzzer\")\nendif()\n\n# Global libraries\n# See:\n# - default_libs.cmake\n# - sanitize.cmake\nadd_library(global-libs INTERFACE)\n\ninclude (cmake/fuzzer.cmake)\ninclude (cmake/sanitize.cmake)\n\nif (CMAKE_GENERATOR STREQUAL \"Ninja\" AND NOT DISABLE_COLORED_BUILD)\n    # Turn on colored output. https://github.com/ninja-build/ninja/wiki/FAQ\n    set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fdiagnostics-color=always\")\n    set (CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fdiagnostics-color=always\")\nendif ()\n\ninclude (cmake/add_warning.cmake)\n\nif (NOT MSVC)\n    set (COMMON_WARNING_FLAGS \"${COMMON_WARNING_FLAGS} -Wall\")    # -Werror and many more is also added inside cmake/warnings.cmake\nendif ()\n\nif (COMPILER_CLANG)\n    # clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]\n    set (COMMON_WARNING_FLAGS \"${COMMON_WARNING_FLAGS} -Wno-unused-command-line-argument\")\n    # generate ranges for fast \"addr2line\" search\n    if (NOT CMAKE_BUILD_TYPE_UC STREQUAL \"RELEASE\")\n        set(COMPILER_FLAGS \"${COMPILER_FLAGS} -gdwarf-aranges\")\n    endif ()\nendif ()\n\n# If turned `ON`, assumes the user has either the system GTest library or the bundled one.\noption(ENABLE_TESTS \"Provide unit_test_dbms target with Google.Test unit tests\" ON)\noption(ENABLE_EXAMPLES \"Build all example programs in 'examples' subdirectories\" OFF)\n\nif (OS_LINUX AND (ARCH_AMD64 OR ARCH_AARCH64) AND NOT UNBUNDLED AND MAKE_STATIC_LIBRARIES AND NOT SPLIT_SHARED_LIBRARIES AND CMAKE_VERSION VERSION_GREATER \"3.9.0\")\n    # Only for Linux, x86_64 or aarch64.\n    option(GLIBC_COMPATIBILITY \"Enable compatibility with older glibc libraries.\" ON)\nelseif(GLIBC_COMPATIBILITY)\n    message (${RECONFIGURE_MESSAGE_LEVEL} \"Glibc compatibility cannot be enabled in current configuration\")\nendif ()\n\nif (NOT CMAKE_VERSION VERSION_GREATER \"3.9.0\")\n    message (WARNING \"CMake version must be greater than 3.9.0 for production builds.\")\nendif ()\n\n# Make sure the final executable has symbols exported\nset (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -rdynamic\")\n\nfind_program (OBJCOPY_PATH NAMES \"llvm-objcopy\" \"llvm-objcopy-16\" \"llvm-objcopy-15\" \"llvm-objcopy-12\" \"llvm-objcopy-11\" \"objcopy\")\n\nif (NOT OBJCOPY_PATH AND OS_DARWIN)\n    find_program (BREW_PATH NAMES \"brew\")\n    if (BREW_PATH)\n        execute_process (COMMAND ${BREW_PATH} --prefix llvm ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE OUTPUT_VARIABLE LLVM_PREFIX)\n        if (LLVM_PREFIX)\n            find_program (OBJCOPY_PATH NAMES \"llvm-objcopy\" PATHS \"${LLVM_PREFIX}/bin\" NO_DEFAULT_PATH)\n        endif ()\n        if (NOT OBJCOPY_PATH)\n            execute_process (COMMAND ${BREW_PATH} --prefix binutils ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE OUTPUT_VARIABLE BINUTILS_PREFIX)\n            if (BINUTILS_PREFIX)\n                find_program (OBJCOPY_PATH NAMES \"objcopy\" PATHS \"${BINUTILS_PREFIX}/bin\" NO_DEFAULT_PATH)\n            endif ()\n        endif ()\n    endif ()\nendif ()\n\nif (OBJCOPY_PATH)\n    message (STATUS \"Using objcopy: ${OBJCOPY_PATH}\")\nelse ()\n    message (FATAL_ERROR \"Cannot find objcopy.\")\nendif ()\n\nif (OS_DARWIN)\n    # The `-all_load` flag forces loading of all symbols from all libraries,\n    # and leads to multiply-defined symbols. This flag allows force loading\n    # from a _specific_ library, which is what we need.\n    set(WHOLE_ARCHIVE -force_load)\n    # The `-noall_load` flag is the default and now obsolete.\n    set(NO_WHOLE_ARCHIVE \"\")\nelse ()\n    set(WHOLE_ARCHIVE --whole-archive)\n    set(NO_WHOLE_ARCHIVE --no-whole-archive)\nendif ()\n\n# Ignored if `lld` is used\noption(ADD_GDB_INDEX_FOR_GOLD \"Add .gdb-index to resulting binaries for gold linker.\")\n\nif (NOT CMAKE_BUILD_TYPE_UC STREQUAL \"RELEASE\")\n    # Can be lld or ld-lld.\n    if (LINKER_NAME MATCHES \"lld$\")\n        set (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--gdb-index\")\n        set (CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--gdb-index\")\n        message (STATUS \"Adding .gdb-index via --gdb-index linker option.\")\n    # we use another tool for gdb-index, because gold linker removes section .debug_aranges, which used inside clickhouse stacktraces\n    # http://sourceware-org.1504.n7.nabble.com/gold-No-debug-aranges-section-when-linking-with-gdb-index-td540965.html#a556932\n    elseif (LINKER_NAME MATCHES \"gold$\" AND ADD_GDB_INDEX_FOR_GOLD)\n        find_program (GDB_ADD_INDEX_EXE NAMES \"gdb-add-index\" DOC \"Path to gdb-add-index executable\")\n        if (NOT GDB_ADD_INDEX_EXE)\n            set (USE_GDB_ADD_INDEX 0)\n            message (WARNING \"Cannot add gdb index to binaries, because gold linker is used, but gdb-add-index executable not found.\")\n        else()\n            set (USE_GDB_ADD_INDEX 1)\n            message (STATUS \"gdb-add-index found: ${GDB_ADD_INDEX_EXE}\")\n        endif()\n    endif ()\nendif()\n\n# Create BuildID when using lld. For other linkers it is created by default.\nif (LINKER_NAME MATCHES \"lld$\")\n    # SHA1 is not cryptographically secure but it is the best what lld is offering.\n    set (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--build-id=sha1\")\nendif ()\n\n# Add a section with the hash of the compiled machine code for integrity checks.\n# Only for official builds, because adding a section can be time consuming (rewrite of several GB).\n# And cross compiled binaries are not supported (since you cannot execute clickhouse hash-binary)\nif (OBJCOPY_PATH AND YANDEX_OFFICIAL_BUILD AND (NOT CMAKE_TOOLCHAIN_FILE))\n    set (USE_BINARY_HASH 1)\nendif ()\n\ncmake_host_system_information(RESULT AVAILABLE_PHYSICAL_MEMORY QUERY AVAILABLE_PHYSICAL_MEMORY) # Not available under freebsd\n\n\nif(NOT AVAILABLE_PHYSICAL_MEMORY OR AVAILABLE_PHYSICAL_MEMORY GREATER 8000)\n    # Less `/tmp` usage, more RAM usage.\n    option(COMPILER_PIPE \"-pipe compiler option\" ON)\nendif()\n\nif(COMPILER_PIPE)\n    set(COMPILER_FLAGS \"${COMPILER_FLAGS} -pipe\")\nelse()\n    message(STATUS \"Disabling compiler -pipe option (have only ${AVAILABLE_PHYSICAL_MEMORY} mb of memory)\")\nendif()\n\ninclude(cmake/cpu_features.cmake)\n\noption(ARCH_NATIVE \"Add -march=native compiler flag. This makes your binaries non-portable but more performant code may be generated.\")\n\nif (ARCH_NATIVE)\n    set (COMPILER_FLAGS \"${COMPILER_FLAGS} -march=native\")\nendif ()\n\n# Asynchronous unwind tables are needed for Query Profiler.\n# They are already by default on some platforms but possibly not on all platforms.\n# Enable it explicitly.\nset (COMPILER_FLAGS \"${COMPILER_FLAGS} -fasynchronous-unwind-tables\")\n\nset (CMAKE_CXX_STANDARD 23)\nset (CMAKE_CXX_EXTENSIONS OFF)\nset (CMAKE_CXX_STANDARD_REQUIRED ON)\n\nset (CMAKE_C_STANDARD 11)\nset (CMAKE_C_EXTENSIONS ON) # required by most contribs written in C\nset (CMAKE_C_STANDARD_REQUIRED ON)\n\n# Enable C++14 sized global deallocation functions. It should be enabled by setting -std=c++14 but I'm not sure.\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsized-deallocation\")\n\n# falign-functions=32 prevents from random performance regressions with the code change. Thus, providing more stable\n# benchmarks.\nset(COMPILER_FLAGS \"${COMPILER_FLAGS} -falign-functions=32\")\n\nif (ARCH_AMD64)\n    # align branches within a 32-Byte boundary to avoid the potential performance loss when code layout change,\n    # which makes benchmark results more stable.\n    set(BRANCHES_WITHIN_32B_BOUNDARIES \"-mbranches-within-32B-boundaries\")\n    set(COMPILER_FLAGS \"${COMPILER_FLAGS} ${BRANCHES_WITHIN_32B_BOUNDARIES}\")\nendif()\n\n# Disable floating-point expression contraction in order to get consistent floating point calculation results across platforms\nset (COMPILER_FLAGS \"${COMPILER_FLAGS} -ffp-contract=off\")\n\n# Compiler-specific coverage flags e.g. -fcoverage-mapping for gcc\noption(WITH_COVERAGE \"Profile the resulting binary/binaries\" OFF)\n\nif (WITH_COVERAGE AND COMPILER_CLANG)\n    set(COMPILER_FLAGS \"${COMPILER_FLAGS} -fprofile-instr-generate -fcoverage-mapping\")\n    # If we want to disable coverage for specific translation units\n    set(WITHOUT_COVERAGE \"-fno-profile-instr-generate -fno-coverage-mapping\")\nendif()\n\nif (WITH_COVERAGE AND COMPILER_GCC)\n    set(COMPILER_FLAGS \"${COMPILER_FLAGS} -fprofile-arcs -ftest-coverage\")\n    set(COVERAGE_OPTION \"-lgcov\")\n    set(WITHOUT_COVERAGE \"-fno-profile-arcs -fno-test-coverage\")\nendif()\n\nset(COMPILER_FLAGS \"${COMPILER_FLAGS}\")\n\nset (CMAKE_BUILD_COLOR_MAKEFILE          ON)\nset (CMAKE_CXX_FLAGS                     \"${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer ${COMPILER_FLAGS} ${PLATFORM_EXTRA_CXX_FLAG} ${COMMON_WARNING_FLAGS} ${CXX_WARNING_FLAGS}\")\nset (CMAKE_CXX_FLAGS_RELWITHDEBINFO      \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O3 ${CMAKE_CXX_FLAGS_ADD}\")\nset (CMAKE_CXX_FLAGS_DEBUG               \"${CMAKE_CXX_FLAGS_DEBUG} -O0 -g3 -ggdb3 -fno-inline ${CMAKE_CXX_FLAGS_ADD}\")\n\nset (CMAKE_C_FLAGS                       \"${CMAKE_C_FLAGS} -fno-omit-frame-pointer ${COMPILER_FLAGS} ${COMMON_WARNING_FLAGS} ${CMAKE_C_FLAGS_ADD}\")\nset (CMAKE_C_FLAGS_RELWITHDEBINFO        \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -O3 ${CMAKE_C_FLAGS_ADD}\")\nset (CMAKE_C_FLAGS_DEBUG                 \"${CMAKE_C_FLAGS_DEBUG} -O0 -g3 -ggdb3 -fno-inline ${CMAKE_C_FLAGS_ADD}\")\n\n# Ignored if `lldb` is used\noption(NO_LIMIT_DEBUG_INFO \"Add no-limit-debug-info to compile flags.\")\nif (NO_LIMIT_DEBUG_INFO)\n    set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-limit-debug-info\")\n    set (CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -fno-limit-debug-info\")\nendif()\n\n\nif (COMPILER_CLANG)\n    if (OS_DARWIN)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-U,_inside_main\")\n    endif()\n\n    # Display absolute paths in error messages. Otherwise KDevelop fails to navigate to correct file and opens a new file instead.\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fdiagnostics-absolute-paths\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fdiagnostics-absolute-paths\")\n\n    if (NOT ENABLE_TESTS AND NOT SANITIZE)\n        # https://clang.llvm.org/docs/ThinLTO.html\n        # Applies to clang only.\n        # Disabled when building with tests or sanitizers.\n        option(ENABLE_THINLTO \"Clang-specific link time optimization\" ON)\n    endif()\n\n    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 16)\n        # Set new experimental pass manager, it's a performance, build time and binary size win.\n        # Can be removed after https://reviews.llvm.org/D66490 merged and released to at least two versions of clang.\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fexperimental-new-pass-manager\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fexperimental-new-pass-manager\")\n    endif ()\n\n    # We cannot afford to use LTO when compiling unit tests, and it's not enough\n    # to only supply -fno-lto at the final linking stage. So we disable it\n    # completely.\n    if (ENABLE_THINLTO AND NOT ENABLE_TESTS AND NOT SANITIZE)\n        # Link time optimization\n        set (CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -flto=thin\")\n        set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -flto=thin\")\n        set (CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} -flto=thin\")\n    elseif (ENABLE_THINLTO)\n        message (${RECONFIGURE_MESSAGE_LEVEL} \"Cannot enable ThinLTO\")\n    endif ()\n\n    # Always prefer llvm tools when using clang. For instance, we cannot use GNU ar when llvm LTO is enabled\n    find_program (LLVM_AR_PATH NAMES \"llvm-ar\" \"llvm-ar-16\" \"llvm-ar-15\" \"llvm-ar-12\" \"llvm-ar-11\")\n\n    if (LLVM_AR_PATH)\n        message(STATUS \"Using llvm-ar: ${LLVM_AR_PATH}.\")\n        set (CMAKE_AR ${LLVM_AR_PATH})\n    else ()\n        message(WARNING \"Cannot find llvm-ar. System ar will be used instead. It does not work with ThinLTO.\")\n    endif ()\n\n    find_program (LLVM_RANLIB_PATH NAMES \"llvm-ranlib\" \"llvm-ranlib-16\" \"llvm-ranlib-15\" \"llvm-ranlib-12\" \"llvm-ranlib-11\")\n\n    if (LLVM_RANLIB_PATH)\n        message(STATUS \"Using llvm-ranlib: ${LLVM_RANLIB_PATH}.\")\n        set (CMAKE_RANLIB ${LLVM_RANLIB_PATH})\n    else ()\n        message(WARNING \"Cannot find llvm-ranlib. System ranlib will be used instead. It does not work with ThinLTO.\")\n    endif ()\n\nelseif (ENABLE_THINLTO)\n    message (${RECONFIGURE_MESSAGE_LEVEL} \"ThinLTO is only available with CLang\")\nendif ()\n\n# Turns on all external libs like s3, kafka, ODBC, ...\noption(ENABLE_LIBRARIES \"Enable all external libraries by default\" ON)\n\n# We recommend avoiding this mode for production builds because we can't guarantee all needed libraries exist in your\n# system.\n# This mode exists for enthusiastic developers who are searching for trouble.\n# Useful for maintainers of OS packages.\noption (UNBUNDLED \"Use system libraries instead of ones in contrib/\" OFF)\n\nif (UNBUNDLED)\n    set(NOT_UNBUNDLED OFF)\nelse ()\n    set(NOT_UNBUNDLED ON)\nendif ()\n\nif (UNBUNDLED OR NOT (OS_LINUX OR OS_DARWIN))\n    # Using system libs can cause a lot of warnings in includes (on macro expansion).\n    option(WERROR \"Enable -Werror compiler option\" OFF)\nelse ()\n    option(WERROR \"Enable -Werror compiler option\" ON)\nendif ()\n\nif (WERROR)\n    add_warning(error)\n    # Don't pollute CMAKE_CXX_FLAGS with -Werror as it will break some CMake checks.\n    # Instead, adopt modern cmake usage requirement.\n    # TODO: Set CMAKE_COMPILE_WARNING_AS_ERROR (cmake 3.24)\n    if (TARGET global-group)\n        target_compile_options(global-group INTERFACE \"-Werror\")\n    endif ()\nendif ()\n\n# Make this extra-checks for correct library dependencies.\nif (OS_LINUX AND NOT SANITIZE)\n    set (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-undefined\")\n    set (CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-undefined\")\nendif ()\n\ninclude(cmake/dbms_glob_sources.cmake)\n\nif (OS_LINUX OR OS_ANDROID)\n    include(cmake/linux/default_libs.cmake)\nelseif (OS_DARWIN)\n    include(cmake/darwin/default_libs.cmake)\nelseif (OS_FREEBSD)\n    include(cmake/freebsd/default_libs.cmake)\nendif ()\n\ninclude (cmake/find/unwind-old.cmake)\n\n######################################\n### Add targets below this comment ###\n######################################\n\nset (CMAKE_POSTFIX_VARIABLE \"CMAKE_${CMAKE_BUILD_TYPE_UC}_POSTFIX\")\n\nif (MAKE_STATIC_LIBRARIES)\n    set (CMAKE_POSITION_INDEPENDENT_CODE OFF)\n    if (OS_LINUX AND NOT ARCH_ARM)\n        # Slightly more efficient code can be generated\n        # It's disabled for ARM because otherwise ClickHouse cannot run on Android.\n        set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -fno-pie\")\n        set (CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -fno-pie\")\n        set (CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-no-pie\")\n    endif ()\nelse ()\n    set (CMAKE_POSITION_INDEPENDENT_CODE ON)\nendif ()\n\n# https://github.com/include-what-you-use/include-what-you-use\noption (USE_INCLUDE_WHAT_YOU_USE \"Automatically reduce unneeded includes in source code (external tool)\" OFF)\n\nif (USE_INCLUDE_WHAT_YOU_USE)\n    find_program(IWYU_PATH NAMES include-what-you-use iwyu)\n    if (NOT IWYU_PATH)\n        message(FATAL_ERROR \"Could not find the program include-what-you-use\")\n    endif()\n    if (${CMAKE_VERSION} VERSION_LESS \"3.3.0\")\n        message(FATAL_ERROR \"include-what-you-use requires CMake version at least 3.3.\")\n    endif()\nendif ()\n\nif (ENABLE_TESTS)\n    message (STATUS \"Unit tests are enabled\")\nelse()\n    message(STATUS \"Unit tests are disabled\")\nendif ()\n\nenable_testing() # Enable for tests without binary\n\n# when installing to /usr - place configs to /etc but for /usr/local place to /usr/local/etc\nif (CMAKE_INSTALL_PREFIX STREQUAL \"/usr\")\n    set (CLICKHOUSE_ETC_DIR \"/etc\")\nelse ()\n    set (CLICKHOUSE_ETC_DIR \"${CMAKE_INSTALL_PREFIX}/etc\")\nendif ()\n\nmessage (STATUS\n    \"Building for: ${CMAKE_SYSTEM} ${CMAKE_SYSTEM_PROCESSOR} ${CMAKE_LIBRARY_ARCHITECTURE} ;\n    USE_STATIC_LIBRARIES=${USE_STATIC_LIBRARIES}\n    MAKE_STATIC_LIBRARIES=${MAKE_STATIC_LIBRARIES}\n    SPLIT_SHARED=${SPLIT_SHARED_LIBRARIES}\n    UNBUNDLED=${UNBUNDLED}\n    CCACHE=${CCACHE_FOUND} ${CCACHE_VERSION}\")\n\ninclude (GNUInstallDirs)\ninclude (cmake/contrib_finder.cmake)\n\nfind_contrib_lib(double-conversion) # Must be before parquet\ninclude (cmake/lib_name.cmake)\ninclude (cmake/find/ssl.cmake)\ninclude (cmake/find/ldap.cmake) # after ssl\ninclude (cmake/find/icu.cmake)\ninclude (cmake/find/xz.cmake)\ninclude (cmake/find/zlib.cmake)\ninclude (cmake/find/zstd.cmake)\ninclude (cmake/find/ltdl.cmake) # for odbc\n# openssl, zlib before poco\ninclude (cmake/find/sparsehash.cmake)\ninclude (cmake/find/re2.cmake)\ninclude (cmake/find/krb5.cmake)\ninclude (cmake/find/libgsasl.cmake)\ninclude (cmake/find/cyrus-sasl.cmake)\ninclude (cmake/find/rdkafka.cmake)\ninclude (cmake/find/libuv.cmake) # for amqpcpp and cassandra\ninclude (cmake/find/amqpcpp.cmake)\ninclude (cmake/find/capnp.cmake)\ninclude (cmake/find/h3.cmake)\ninclude (cmake/find/libxml2.cmake)\ninclude (cmake/find/brotli.cmake)\ninclude (cmake/find/protobuf.cmake)\ninclude (cmake/find/grpc.cmake)\ninclude (cmake/find/pdqsort.cmake)\ninclude (cmake/find/miniselect.cmake)\ninclude (cmake/find/hdfs3.cmake) # uses protobuf\ninclude (cmake/find/poco.cmake)\ninclude (cmake/find/curl.cmake)\ninclude (cmake/find/base64.cmake)\ninclude (cmake/find/parquet.cmake)\ninclude (cmake/find/simdjson.cmake)\ninclude (cmake/find/fast_float.cmake)\ninclude (cmake/find/rapidjson.cmake)\ninclude (cmake/find/fastops.cmake)\ninclude (cmake/find/odbc.cmake)\ninclude (cmake/find/nanodbc.cmake)\ninclude (cmake/find/rocksdb.cmake)\ninclude (cmake/find/libpqxx.cmake)\ninclude (cmake/find/nuraft.cmake)\ninclude (cmake/find/yaml-cpp.cmake)\ninclude (cmake/find/json-c.cmake)\ninclude (cmake/find/phmap.cmake)\ninclude (cmake/find/libdeflate.cmake)\n\nif(NOT USE_INTERNAL_PARQUET_LIBRARY)\n    set (ENABLE_ORC OFF CACHE INTERNAL \"\")\nendif()\ninclude (cmake/find/orc.cmake)\n\ninclude (cmake/find/avro.cmake)\ninclude (cmake/find/msgpack.cmake)\ninclude (cmake/find/cassandra.cmake)\ninclude (cmake/find/sentry.cmake)\ninclude (cmake/find/stats.cmake)\ninclude (cmake/find/datasketches.cmake)\ninclude (cmake/find_gflags.cmake)\ninclude (cmake/find/brpc.cmake)\ninclude (cmake/find/breakpad.cmake)\ninclude (cmake/find/benchmark.cmake)\ninclude (cmake/find/hivemetastore.cmake)\ninclude (cmake/find/cjson.cmake)\ninclude (cmake/find/lasfs.cmake)\ninclude (cmake/find/java-extensions.cmake)\ninclude (cmake/find/cppjieba.cmake)\ninclude (cmake/find/tsquery.cmake)\n\ninclude (cmake/find/nlp.cmake)\n\nset (USE_INTERNAL_CITYHASH_LIBRARY ON CACHE INTERNAL \"\")\nfind_contrib_lib(cityhash)\n\nfind_contrib_lib(farmhash)\nfind_contrib_lib(minizip)\nfind_contrib_lib(udns)\n\nif (ENABLE_TESTS)\n    include (cmake/find/gtest.cmake)\nendif ()\n\n# Need to process before \"contrib\" dir:\ninclude (cmake/find/mysqlclient.cmake)\n\n# When testing for memory leaks with Valgrind, don't link tcmalloc or jemalloc.\n\ninclude (cmake/print_flags.cmake)\n\nif (TARGET global-group)\n    install (EXPORT global DESTINATION cmake)\nendif ()\n\nadd_subdirectory (contrib EXCLUDE_FROM_ALL)\n\nif (NOT ENABLE_JEMALLOC)\n    message (WARNING \"Non default allocator is disabled. This is not recommended for production builds.\")\nendif ()\n\nmacro (add_executable target)\n    # invoke built-in add_executable\n    # explicitly acquire and interpose malloc symbols by clickhouse_malloc\n    # if GLIBC_COMPATIBILITY is ON and ENABLE_THINLTO is on than provide memcpy symbol explicitly to neutrialize thinlto's libcall generation.\n    if (GLIBC_COMPATIBILITY AND ENABLE_THINLTO)\n        _add_executable (${ARGV} $<TARGET_OBJECTS:clickhouse_malloc> $<TARGET_OBJECTS:memcpy>)\n    else ()\n        _add_executable (${ARGV} $<TARGET_OBJECTS:clickhouse_malloc>)\n    endif ()\n\n    get_target_property (type ${target} TYPE)\n    if (${type} STREQUAL EXECUTABLE)\n        # disabled for TSAN and gcc since libtsan.a provides overrides too\n        if (TARGET clickhouse_new_delete)\n            # operator::new/delete for executables (MemoryTracker stuff)\n            target_link_libraries (${target} PRIVATE clickhouse_new_delete ${MALLOC_LIBRARIES})\n        endif()\n    endif()\nendmacro()\n\nset(ConfigIncludePath ${CMAKE_CURRENT_BINARY_DIR}/includes/configs CACHE INTERNAL \"Path to generated configuration files.\")\ninclude_directories(${ConfigIncludePath})\n\n# Add as many warnings as possible for our own code.\ninclude (cmake/warnings.cmake)\n\n# Check if needed compiler flags are supported\ninclude (cmake/check_flags.cmake)\n\n# ClickHouse developers may use platform-dependent code under some macro (e.g. `#ifdef ENABLE_MULTITARGET`).\n# If turned ON, this option defines such macro.\n# See `src/Functions/TargetSpecific.h`\noption(ENABLE_MULTITARGET_CODE \"Enable platform-dependent code\" ON)\n\nif (ENABLE_MULTITARGET_CODE)\n    add_compile_definitions(ENABLE_MULTITARGET_CODE=1)\nelse()\n    add_compile_definitions(ENABLE_MULTITARGET_CODE=0)\nendif()\n\nif (ENABLE_RUST)\n    add_subdirectory (rust)\nendif()\n\nadd_subdirectory (base)\nadd_subdirectory (src)\nadd_subdirectory (programs)\nadd_subdirectory (tests)\nadd_subdirectory (utils)\n\ninclude (cmake/print_include_directories.cmake)\n\ninclude (cmake/sanitize_target_link_libraries.cmake)\ninclude (cmake/build_info.cmake)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.0693359375,
          "content": "We welcome everyone to contribute to our product, see CONTRIBUTING.md.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.501953125,
          "content": "\n# Contributing to ByConity\n\nThanks for taking the time to contribute to ByConity! 💙💙💙\n\nAll types of contributions are encouraged and valued. There are many ways to contribute beyond code. See the [Table of Contents](#table-of-contents) for different ways to help and details about how the ByConity project handles them. Please make sure to read the relevant sections before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions! 🎉\n\nPlease give us any feedback if you need any help with anything including(and beyond):\n\n- Problems found during setting up a new developer environment\n- Gaps in our Quickstart Guide or documentation\n- Bugs in our automation scripts\n\nIf anything doesn't make sense, or doesn't work when you run it, please open a bug report and let us know!\n\n> And if you like ByConity, but just don't have time to contribute, that's fine. There are other easy ways to support ByConity and show your appreciation, which we would also be very happy about:\n\n> - Star the repository ⭐️\n\n> - Tweet about ByConity 🐦\n\n> - Refer to ByConity in your project's readme 🤝\n\n> - Mention ByConity at local meetups, conferences, events and tell your friends/colleagues 🗣️\n\n## Table of Contents\n\n- [Code of Conduct](https://github.com/ByConity/ByConity/blob/master/CODE_OF_CONDUCT.md)\n- [I Have a Question](#i-have-a-question)\n- [I Want To Constribute](#i-want-to-contribute)\n- [Reporting Bugs](#reporting-bugs)\n- [Suggesting Enhancements](#suggesting-enhancements)\n- [Sign Your Commits](#sign-your-commits)\n- [Pull Request Checklist](#pull-request-checklist)\n\n## Code of Conduct\n\nThis project and everyone participating in it are governed by the [ByConity Code of Conduct](https://github.com/ByConity/ByConity/blob/master/CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code. Please report unacceptable behavior to our Developer Advocates @[joshalphonse](https://github.com/Joshalphonse) and @[vinijaiswal](https://github.com/vinijaiswal)\n\n## I Have a Question\n\n> If you want to ask a question, we assume that you have read the available [Documentation](https://byconity.github.io/docs/introduction/main-principle-concepts).\n\nBefore you ask a question, it is best to search for existing [Issues](https://github.com/ByConity/ByConity/issues) that might help you. If you have found a suitable issue and still need clarification, you can write your question about this issue. It is also advisable to search the internet for answers first.\n\nIf you then still feel the need to ask a question and need clarification, we recommend the following:\n\n- Open an [Issue](https://github.com/ByConity/ByConity/issues/new).\n- Provide as much context as you can about what you're running into.\n- Provide project and platform versions, depending on what seems relevant.\n- Use our [Discord](https://discord.gg/V4BvTWGEQJ) server to reach the community\n\nWe will then take care of the issue as soon as possible.\n\n## I Want To Contribute\n\n> ### Legal Notice\n\n> When contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content, and that the content you contribute may be provided under the project license.\n\nWe welcome many different types of contributions including:\n\n- New features\n- Builds, CI/CD\n- Bug fixes\n- Documentation\n- Issue Triage\n- Answering questions on Discord/Mailing List\n- Web design\n- Communications/ Social Media/ Blog Posts\n- Release management\n\nNot everything happens through a GitHub pull request. Please join the community on [Discord](https://discord.gg/V4BvTWGEQJ) or create a discussion on GitHub and let's discuss how we can work together.\n\n### Reporting Bugs\n\n#### Before Submitting a Bug Report\n\nA good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information, and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible.\n\n- Make sure that you are using the latest version.\n- Determine if your bug is really a bug and not an error on your side e.g. using incompatible environment components/versions (Make sure that you have read the [documentation](https://byconity.github.io/docs/introduction/main-principle-concepts). If you are looking for support, you might want to join our [Discord Server](https://discord.gg/V4BvTWGEQJ) and ask the community.\n- To see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the [bug tracker](https://github.com/ByConity/ByConity/labels/bug).\n- Also, make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue.\n- Collect information about the bug:\n\n  - Stack trace (Traceback)\n  - OS, Platform, and Version (Windows, Linux, macOS, x86, ARM)\n  - A version of the interpreter, compiler, SDK, runtime environment, and package manager, depending on what seems relevant.\n  - Possibly your input and the output\n  - Can you reliably reproduce the issue? And can you also reproduce it with older versions?\n\n#### How Do I Submit a Good Bug Report?\n\n> You must never report security-related issues, vulnerabilities, or bugs, including sensitive information to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to [byconity.global@bytedance.com]().\n\nWe use GitHub issues to track bugs and errors. If you run into an issue with the project:\n\n- Open an [Issue](https://github.com/ByConity/ByConity/issues/new). (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.)\n- Explain the behavior you would expect and the actual behavior.\n- Please provide as much context as possible and describe the *reproduction steps* that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports, you should isolate the problem and create a reduced test case.\n- Provide the information you collected in the previous section.\n\nOnce it's filed:\n\n- The project team will label the issue accordingly.\n- A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as `needs-repro`. Bugs with the `needs-repro` tag will not be addressed until they are reproduced.\n- If the team is able to reproduce the issue, it will be marked `help wanted`, as well as possibly other tags (such as `critical`).\n\n### Suggesting Enhancements\n\nThis section guides you through submitting an enhancement suggestion for ByConity, including completely new features and minor improvements to existing functionality. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.\n\n#### Before Submitting an Enhancement\n\n- Make sure that you are using the latest version.\n- Read the [documentation](https://byconity.github.io/docs/introduction/main-principle-concepts) carefully and find out if the functionality is already covered, maybe by an individual configuration.\n- Perform a [search](https://github.com/ByConity/ByConity/issues) to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.\n- Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.\n\n#### How Do I Submit a Good Enhancement Suggestion?\n\nEnhancement suggestions are tracked as [GitHub issues](https://github.com/ByConity/ByConity/issues).\n\n- Use a clear and descriptive title for the issue to identify the suggestion.\n- Provide a step-by-step description of the suggested enhancement in as many details as possible.\n- Describe the current behavior and explain which behavior you expected to see instead and why. At this point, you can also tell which alternatives do not work for you.\n- You may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part to which the suggestion is related to. You can use [this tool](https://www.cockos.com/licecap/) to record GIFs on macOS and Windows, and [this tool](https://github.com/colinkeenan/silentcast) or [this tool](https://github.com/GNOME/byzanz) on Linux.\n- Explain why this enhancement would be useful to most ByConity users. You may also want to point out the other projects that solved it better and which could serve as inspiration.\n\n### Sign Your Commits\n\nWe require that contributors have signed our Contributor License Agreement (CLA) in order for us to accept patches and other contributions from you. By singning the CLA you state the following:\n\n* You obviously wish and are willingly licensing your contributions to us for our open source projects under the terms of the CLA,\n* You have read the terms and conditions of the CLA and agree with them in full,\n* You are legally able to provide and license your contributions as stated,\n* We may use your contributions for our open source projects and for any other our project too,\n* We rely on your assurances concerning the rights of third parties in relation to your contributions.\n\nIf you agree with these principles, please read and adopt our CLA. By providing us your contributions, you hereby declare that you have already read and adopt our CLA, and we may freely merge your contributions with our corresponding open source project and use it in further in accordance with terms and conditions of the CLA.\n\nIf you have already adopted terms and conditions of the CLA, you are able to provide your contributes. When you submit your pull request, please add the following information into it:\n\n```\nI hereby agree to the terms of the CLA available at:\n```\n\nReplace the bracketed text as follows:\n\nIt is enough to provide us such notification once.\n\nAs an alternative, you can provide DCO instead of CLA. You can find the text of DCO here: [https://developercertificate.org/](https://developercertificate.org/) It is enough to read and copy it verbatim to your pull request.\n\nIf you don't agree with the CLA and don't want to provide DCO, you still can open a pull request to provide your contributions.\n\n### Pull Request Checklist\n\nWhen you submit your pull request, or you push new commits to it, our automated systems will run some checks on your new code. We require that your pull request passes these checks, but we also have more criteria than just that before we can accept and merge it. We recommend that you check the following things locally before you submit your code:\n\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\n1. Search [GitHub](https://github.com/ByConity/ByConity/pulls) for an open or closed PR that relates to your submission. You don't wan to recreate something that was already added\n2. Be sure that an issue describes the problem you're fixing, or documents the design for the feature you'd like to add. Discussing the design upfront helps to ensure that we're ready to accept your work.\n3. Please sign our [Contributor License Agreement (CLA)](https://github.com/ByConity/ByConity/blob/master/CONTRIBUTING.md) before sending PRs. We can not accept code without a signed CLA. Make sure you author all contributed Git commits with the email address associated with your CLA signature.\n4. [Fork](https://github.com/ByConity/ByConity) the ByConity/ByConity repo.\n5. in your forked repository, make your changes in a new git branch:\n\n   ***git*** ***checkout -b my-fix-branch master***\n6. Create your patch,  **including appropriate test cases** .\n7. Run the full ByConity test suite, as described in the developer documentation, and ensure that all tests pass.\n8. Commit your changes using a descriptive commit message that follows our commit message conventions (place those here). Adherence to these conventions is necessary because release notes are automatically generated from these messages.\n9. git commit --all\n10. Note: the optional commit `-a` command line option will automatically \"add\" and \"rm\" edited files.\n11. Push your branch to GitHub:\n12. git push origin my-fix-branch\n13. On GitHub, send a pull request to ByConity:master.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1083984375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (2016-2021) Yandex LLC\n   Copyright (2021-2023) Bytedance Ltd. and/or its affiliates\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "PreLoad.cmake",
          "type": "blob",
          "size": 0.736328125,
          "content": "# Use Ninja instead of Unix Makefiles by default.\n# https://stackoverflow.com/questions/11269833/cmake-selecting-a-generator-within-cmakelists-txt\n#\n# Reason: it has better startup time than make and it parallelizes jobs more uniformly.\n# (when comparing to make with Makefiles that was generated by CMake)\n#\n# How to install Ninja on Ubuntu:\n#  sudo apt-get install ninja-build\n\n# CLion does not support Ninja\n# You can add your vote on CLion task tracker:\n# https://youtrack.jetbrains.com/issue/CPP-2659\n# https://youtrack.jetbrains.com/issue/CPP-870\n\nif (NOT DEFINED ENV{CLION_IDE} AND NOT DEFINED ENV{XCODE_IDE})\n    find_program(NINJA_PATH ninja)\n    if (NINJA_PATH)\n        set(CMAKE_GENERATOR \"Ninja\" CACHE INTERNAL \"\" FORCE)\n    endif ()\nendif()\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.255859375,
          "content": "# Welcome to ByConity\n\n<p align=\"center\">\n<img width=\"717\" alt=\"ByConity Arch 2023\" src=\"https://github.com/ByConity/ByConity/assets/23332032/c266aa89-c1b8-4a35-a47d-ee5718a9443a\">\n\nByconity, an advanced database management system, is a derivative of ClickHouse DBMS, building upon the robust codebase from ClickHouse v21.8. However, Byconity's development path has since diverged, thanks in part to insights gained from Snowflake's architecture.\n\nOur key innovations include the introduction of a compute-storage separation architecture, a state-of-the-art query optimizer, multiple stateless workers, and a shared-storage framework. These enhancements, inspired by both ClickHouse's strength and Snowflake's innovative approach, offer substantial performance and scalability improvements.\n\nWe deeply appreciate the profound contributions from the ClickHouse team, with whom we had an early discussion to share our open-source vision and technical implementations. However, given the substantial architectural differences that emerged in our modifications, the ClickHouse team assessed that integrating these changes directly into the original ClickHouse project was not feasible. As a result, we decided to launch Byconity as an independent downstream open-source project. This approach preserves the integrity of both projects while offering distinct solutions for diverse database management needs.\n\n\n**Query Large Scale Data with Speed and Precision**\nWhen dealing with large-scale data, performance is crucial. Byconity shines in this aspect by providing powerful querying capabilities that excel in large-scale environments. With Byconity, you can extract valuable insights from vast amounts of data quickly and accurately.\n\n**Break Down Data Silos with Byconity**\nData silos pose significant challenges in data management. With different systems and processes often resulting in isolated islands of data, it hampers data analysis and insights. Byconity addresses this issue by seamlessly ingesting both batch-loaded data and streaming data, thus enabling your systems to break down silos for smoother data flow.\n\n**Designed for the Cloud, Flexible for Your Needs**\nByconity is designed with a cloud-native approach, optimized to take full advantage of the cloud's scalability, resilience, and ease of deployment. It can work seamlessly on both Kubernetes clusters and physical clusters, offering you the flexibility to deploy in the environment that best meets your requirements. This broad compatibility ensures that you can leverage Byconity's benefits, irrespective of your infrastructure.\n\n## Benefits\n- **Unified Data Management**: Byconity eliminates the need to maintain separate processes for batch and streaming data, making your systems more efficient.\n- **High-Performance Data Querying** : Byconity's robust querying capabilities allow for quick and accurate data retrieval from large-scale datasets.\n- **Avoid Data Silos** : By handling both batch and streaming data, Byconity ensures all your data can be integrated, promoting better insights.\n- **Cloud-Native Design** : Byconity is built with a cloud-native approach, allowing it to efficiently leverage the advantages of the cloud and work seamlessly on both Kubernetes and physical clusters.\n- **Open Source**: Being an open-source project, Byconity encourages community collaboration. You can contribute, improve, and tailor the platform according to your needs.\n\n## Build and Run ByConity\n\nThe easiest way to build ByConity is built in [docker dev-env](https://github.com/ByConity/ByConity/tree/master/docker/debian/dev-env). If you build on your local machine, the ByConity executable file depends on the Foundation DB library `libfdb_c.so`. So to run it, we need to install the FoundationDB client package. This [link](https://apple.github.io/foundationdb/getting-started-linux.html) tells how to install. We can download the client package from FoundationDB GitHub release pages, for example [here][foundationdb-client-library].\n\nIn case you want to build ByConity in the metal machine, follow this [guide](https://github.com/ByConity/ByConity/tree/master/doc/build_in_metal_machine.md)\n\n[foundationdb-client-library]: https://github.com/apple/foundationdb/releases/tag/7.1.3\n\nUsing [Docker Compose](./docker/docker-compose/README.md) would be convenient for running a ByConity cluster.\n\n## Useful Links\n\n- [Official Website](https://byconity.github.io/): has a quick high-level overview of ByConity on the home page.\n- [Documentation](https://byconity.github.io/docs/introduction/main-principle-concepts): introduce basic usage guide and tech deep dive.\n- [Getting started with Kubernetes](https://byconity.github.io/docs/deployment/deployment-with-k8s): demonstrates how to deploy a ByConity cluster in your Kubernetes clusters.\n- [Getting started with physical machines](https://byconity.github.io/docs/deployment/package-deployment): demonstrates how to deploy ByConity in your physical clusters.\n- [Contribution Guideline](https://github.com/ByConity/ByConity/blob/master/CONTRIBUTING.md): Welcome you to join ByConity developer group and list some tips for fresh joiners to be quickly hands-on.\n- **Contact Us** : you can easily find us in [Discord server](https://discord.gg/V4BvTWGEQJ), [Youtube Channel](https://www.youtube.com/@ByConity/featured) and [Twitter](https://twitter.com/ByConity)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0302734375,
          "content": "# Security Policy\n\nstay tuned.\n"
        },
        {
          "name": "Testing.md",
          "type": "blob",
          "size": 0.712890625,
          "content": "After finish building ByConity in development environment, in the build directory execute this command to run unit test\n```\nsrc/unit_tests_dbms --output-on-failure\n```\n\nYou can run individual test case by passing in filter, for example\n\n```\nsrc/unit_tests_dbms --output-on-failure --gtest_filter='backgroundjob*'\n```\n\n\nTo run CI test, after starting ByConity in development env, look at the below [script](https://github.com/ByConity/ByConity/tree/master/ci_scripts/run_ci_in_development_env.sh), edit it so that the enviroment variables in the script are correctly set. Then run it,\n```\nci_scripts/run_ci_in_development_env.sh\n```\n\nYou can run individual test case by following the instruction in the comments inside the script\n\n"
        },
        {
          "name": "base",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_bin.sh",
          "type": "blob",
          "size": 2.0791015625,
          "content": "#!/bin/bash\n\nset -e\nset -x\nPROJECT=\"$( cd \"$(dirname \"$0\")\" >/dev/null 2>&1 ; pwd -P  )\"\n\nexport PATH=`echo $PATH | sed -e 's/:\\/opt\\/tiger\\/typhoon-blade//'`\nENABLE_JAVA_EXTENSIONS=\"${ENABLE_JAVA_EXTENSIONS:-1}\"\nJAVA_EXTENSIONS_VERSION=\"${JAVA_EXTENSIONS_VERSION:-1.0.0.58}\"\n\nrm -rf output/\nmkdir -p output/bin\n\n. ./utils/release/release_lib.sh && gen_revision_author && cat ./cmake/autogenerated_versions.txt\n\npython3 ./utils/bytedance-versions/check_scm_version.py ./utils/bytedance-versions/CDW.VERSION\n\nexport CMAKE_BUILD_TYPE=${CUSTOM_CMAKE_BUILD_TYPE:-RelWithDebInfo}\nexport CMAKE_FLAGS=\"-DCMAKE_INSTALL_PREFIX=../output -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DUSE_BYTEDANCE_RDKAFKA=${CUSTOM_USE_BYTEDANCE_RDKAFKA:-1} ${CMAKE_FLAGS}\"\nCMAKE_FLAGS=\"-DCMAKE_INSTALL_PREFIX=../output ${CMAKE_FLAGS}\"\nCMAKE_FLAGS=\"-DCMAKE_BUILD_TYPE=${CUSTOM_CMAKE_BUILD_TYPE:-RelWithDebInfo} $CMAKE_FLAGS\"\nCMAKE_FLAGS=\"-DENABLE_BREAKPAD=ON $CMAKE_FLAGS\" # enable minidump\nCMAKE_FLAGS=\"-DENABLE_HUALLOC=OFF ${CMAKE_FLAGS}\"\nCMAKE_FLAGS=\"-DENABLE_JAVA_EXTENSIONS=${ENABLE_JAVA_EXTENSIONS} ${CMAKE_FLAGS}\"\n[[ -n \"$CUSTOM_SANITIZE\" ]] && CMAKE_FLAGS=\"-DSANITIZE=$CUSTOM_SANITIZE $CMAKE_FLAGS\"\n[[ -n \"$CUSTOM_MAX_LINKING_JOBS\" ]] && CMAKE_FLAGS=\"-DPARALLEL_LINK_JOBS=${CUSTOM_MAX_LINKING_JOBS} ${CMAKE_FLAGS}\"\n[[ -n \"$CUSTOM_MAX_COMPILE_JOBS\" ]] && CMAKE_FLAGS=\"-DPARALLEL_COMPILE_JOBS=${CUSTOM_MAX_COMPILE_JOBS} ${CMAKE_FLAGS}\"\nexport CMAKE_FLAGS\n\nrm -rf build && mkdir build && cd build\n\nsource /etc/os-release\nset -e\nif [ \"$NAME\" == \"CentOS Linux\" ] && [ \"$VERSION_ID\" == \"7\" ] && hash scl 2>/dev/null; then\n    echo \"Found Centos 7 and scl\"\n    scl enable devtoolset-9 \"CC=clang CXX=clang++ cmake3 ${CMAKE_FLAGS} -DCMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/ninja ../\"\n    scl enable devtoolset-9 \"ninja\"\n    scl enable devtoolset-9 \"ninja install\"\nelse\n    export CC=/usr/bin/clang\n    export CXX=/usr/bin/clang++\n    cmake ../ ${CMAKE_FLAGS} && ninja\nfi\n\n# create the `usr/bin` directory to keep it same with old version\nmkdir -p ../output/usr\nmv ../output/bin ../output/usr/\n\n# create symlink to make CI tests happy\ncd ../output\nln -s usr/bin bin\n"
        },
        {
          "name": "ci_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 3.224609375,
          "content": "# git-cliff ~ default configuration file\n# https://git-cliff.org/docs/configuration\n#\n# Lines starting with \"#\" are comments.\n# Configuration options are organized into tables and keys.\n# See documentation for more information on available options.\n\n[changelog]\n# changelog header\nheader = \"\"\n# template for the changelog body\n# https://keats.github.io/tera/docs/#introduction\nbody = \"\"\"\n{% if version %}\\\n    ## [{{ version | trim_start_matches(pat=\"v\") }}] - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n{% else %}\\\n    ## [unreleased]\n{% endif %}\\\n{% for group, commits in commits |  unique(attribute=\"message\") | group_by(attribute=\"group\") %}\n    ### {{ group | striptags | trim | upper_first }}\n    {% for commit in commits %}\n        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\\\n            {% if commit.breaking %}[**breaking**] {% endif %}\\\n            {{ commit.message | upper_first }}\\\n    {% endfor %}\n{% endfor %}\\n\n\"\"\"\n# template for the changelog footer\nfooter = \"\"\n# remove the leading and trailing s\ntrim = true\n# postprocessors\npostprocessors = [\n  # { pattern = '<REPO>', replace = \"https://github.com/orhun/git-cliff\" }, # replace repository URL\n]\n\n[git]\n# parse the commits based on https://www.conventionalcommits.org\nconventional_commits = true\n# filter out the commits that are not conventional\nfilter_unconventional = false\n# process each line of a commit as an individual commit\nsplit_commits = true\n# regex for preprocessing the commit messages\ncommit_preprocessors = [\n  # Replace issue numbers\n  { pattern = '\\(\\w*@m-\\d*\\)', replace = \"\" },\n  { pattern = '\\[(cp|CP)\\]', replace = \"\" },\n  { pattern = '【(cp|CP)】', replace = \"\" },\n  { pattern = '\\[.*cnch-dev.*\\]', replace = \"\" },\n  # Check spelling of the commit with https://github.com/crate-ci/typos\n  # If the spelling is incorrect, it will be automatically fixed.\n  #{ pattern = '.*', replace_command = 'typos --write-changes -' },\n]\n# regex for parsing and grouping commits\ncommit_parsers = [\n  { message = \"^feat\", group = \"<!-- 0 -->Features\" },\n  { message = \"^fix\", group = \"<!-- 1 -->Bug Fixes\" },\n  { message = \"^doc\", skip = true },\n  { message = \"^perf\", group = \"<!-- 4 -->Performance\" },\n  { message = \"^refactor\", group = \"<!-- 3 -->Refactor\" },\n  { message = \"^style\", skip = true },\n  { message = \"^test\", skip = true },\n  { message = \"^chore\\\\(release\\\\): prepare for\", skip = true },\n  { message = \"^chore\\\\(deps.*\\\\)\", skip = true },\n  { message = \"^chore\\\\(pr\\\\)\", skip = true },\n  { message = \"^chore\\\\(pull\\\\)\", skip = true },\n  { message = \"^chore|^ci\", skip = true },\n  { body = \".*security\", skip = true },\n  { message = \"^revert\", group = \"<!-- 5 -->Revert\" },\n  { pattern = '^Merge branch.* into .*', skip = true },\n]\n# protect breaking changes from being skipped due to matching a skipping commit_parser\nprotect_breaking_commits = false\n# filter out the commits that are not matched by commit parsers\nfilter_commits = false\n# regex for matching git tags\n# tag_pattern = \"v[0-9].*\"\n# regex for skipping tags\n# skip_tags = \"\"\n# regex for ignoring tags\n# ignore_tags = \"\"\n# sort the tags topologically\ntopo_order = false\n# sort the commits inside sections by oldest/newest order\nsort_commits = \"oldest\"\n# limit the number of commits included in the changelog.\n# limit_commits = 42\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.2958984375,
          "content": "version: \"2\"\n\nservices:\n  builder:\n    image: yandex/clickhouse-builder\n    build: docker/builder\n  client:\n    image: yandex/clickhouse-client\n    build: docker/client\n    command: ['--host', 'server']\n  server:\n    image: yandex/clickhouse-server\n    build: docker/server\n    ports:\n      - 8123:8123\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "format_log.py",
          "type": "blob",
          "size": 6.470703125,
          "content": "import sys\nimport re\n\n_LOG_PREFIX = [\n    \"LOG_TRACE\", \"LOG_DEBUG\", \"LOG_INFO\", \"LOG_WARNING\", \"LOG_ERROR\",\n    \"LOG_FATAL\"\n]\n\ndef check_already_right(line):\n  line = line.strip()\n  assert line[-2:] == \");\"\n\n  i, n = 0, len(line)\n  ans = 0\n  while i < n:\n    if i + 1 < n and line[i: i + 2] == \"{}\":\n      ans += 1\n      i += 2\n    else:\n      i += 1\n  # Not process format string has \"{}\" inside.\n  return ans > 0\n\ndef line_starts_with_prefix(line):\n  line = line.strip()\n\n  for s in _LOG_PREFIX:\n    n = len(s)\n    if len(line) > n and line[0:n] == s:\n      return True\n  return False\n\n\n_PART_TYPE_NONE = False\n_PART_TYPE_STRR = 1\n_PART_TYPE_ARGS = 2\n\n\nclass StringStream:\n  def __init__(self, str):\n    self.i_ = 0\n    self.str_ = str\n\n  def get_next(self):\n    ss = self.str_\n    i = self.i_\n    n = len(ss)\n\n    # print(i, n, ss[i:])\n    # Skip white space first\n    while i < n and (ss[i] == ' ' or ss[i] == '\\n'):\n      i += 1\n\n    if i == n:\n      # Done process\n      return (_PART_TYPE_NONE, None)\n\n    if ss[i] == '\"':\n      i += 1\n      j = i\n      while j < n and ss[j] != '\"':\n        j += 1\n      assert j < n and ss[j] == '\"'\n\n      self.i_ = j + 1\n      return (_PART_TYPE_STRR, ss[i:j])\n\n    elif ss[i] == '+':\n      i += 1\n      assert i < n, \"Wrong input string {}\".format(ss)\n\n      while i < n and (ss[i] == ' ' or ss[i] == '\\n'):\n        i += 1\n      assert i < n, \"Wrong input string {}\".format(ss)\n\n      if ss[i] == '\"':\n        self.i_ = i\n        return self.get_next()\n      else:\n        stk = []\n        j = i\n\n        while j < n:\n          if ss[j] == '(':\n            stk.append(j)\n          elif ss[j] == ')':\n            assert len(stk) > 0, \"{}\".format(ss)\n            stk.pop()\n          elif ss[j] == '+':\n            if len(stk) == 0:\n              break\n          elif ss[j] == '<':\n            break\n          j += 1\n\n        assert j - i + 1 > 0, \"Wring input string {}\".format(ss)\n\n        self.i_ = j\n        return (_PART_TYPE_ARGS, ss[i:j])\n\n    elif ss[i] == '<':\n      assert i < n and ss[i + 1] == '<'\n      self.i_ = i + 2\n      return self.get_next()\n\n    else:\n      j = i\n      while j < n and ss[j] not in '+<':\n        j += 1\n      assert j - i + 1 > 0, \"Wring input string {}\".format(ss)\n\n      self.i_ = j\n      return (_PART_TYPE_ARGS, ss[i:j])\n\n\ndef fmt_style(line):\n  line = r'{}'.format(line)\n  i = 0\n  while i < len(line):\n    if line[i] == ',':\n      break\n    i += 1\n\n  ff = line[i + 1:].strip()\n  # print(ff)\n  assert ff[-2:] == \");\", \"Wring input strnig: {}\".format(line)\n  ss = StringStream(ff[0:-2].strip())\n\n  fin = line[0:i + 1]\n  fin += ' \"'\n  args = []\n  while 1:\n    (t, c) = ss.get_next()\n    # print(t, c)\n    if t == _PART_TYPE_NONE:\n      break\n    elif t == _PART_TYPE_ARGS:\n      fin += \"{}\"\n      args.append(c.strip())\n    else:\n      fin += c\n  fin += '\"'\n\n  for i, x in enumerate(args):\n    fin += \", \"\n    fin += x\n\n  fin += \");\"\n  return fin\n\n\ndef read_raw_from_file(file):\n  rows = []\n  with open(file, \"r\") as f:\n    rows = f.read().split('\\n')\n  return rows[0:-1]\n\n\ndef write_text_to_file(file, rows):\n  with open(file, \"w\") as f:\n    for r in rows:\n      f.write(r + \"\\n\")\n\n\ndef test_all():\n  test1 = '''    LOG_DEBUG(logger, \"Successfully opened the manifest store, with latest_version=\" << latest_version\n                << \" commit_version=\" << commit_version\n                << \" checkpoint_version=\" << checkpoint_version\n                << \" time_of_last_commit_log=\" << time_of_last_commit_log);\n  '''\n  test3 = '''LOG_TRACE(log, \"some thing...\");'''\n\n  x = fmt_style(test1)\n  assert x == '    LOG_DEBUG(logger, \"Successfully opened the manifest store, with latest_version={} commit_version={} checkpoint_version={} time_of_last_commit_log={}\", latest_version, commit_version, checkpoint_version, time_of_last_commit_log);'\n\n  x = fmt_style(test3)\n  assert x == 'LOG_TRACE(log, \"some thing...\");'\n\n  test4 = '''LOG_DEBUG(log, \"Wrote block with \" << current_block.block.rows() << \" rows\");'''\n  x = fmt_style(test4)\n  assert x == 'LOG_DEBUG(log, \"Wrote block with {} rows\", current_block.block.rows());'\n\n  test2 = '''LOG_WARNING(log_, user_name + \": \" + msg + formatSkippedMessage(args...) + \" AAAA\");'''\n  x = fmt_style(test2)\n  # print(x)\n  assert x == 'LOG_WARNING(log_, \"{}: {}{} AAAA\", user_name, msg, formatSkippedMessage(args...));'\n\n  test4 = '''LOG_WARNING(log_, \"aaa\" + \": \" + msg + formatSkippedMessage(args...) + \" bbb\");'''\n  x = fmt_style(test4)\n  assert x == 'LOG_WARNING(log_, \"aaa: {}{} bbb\", msg, formatSkippedMessage(args...));'\n\n  test5 = '''LOG_WARNING(log_, \"aaa+<>\" + \"+: \" + msg + formatSkippedMessage(args...) + \" bbb\");'''\n  x = fmt_style(test5)\n  assert x == 'LOG_WARNING(log_, \"aaa+<>+: {}{} bbb\", msg, formatSkippedMessage(args...));'\n\n  test6 = '''LOG_WARNING(log_, \"a is {}, b is {}\", a, b);'''\n  assert check_already_right(test6) == True\n  x = line_starts_with_prefix(test6)\n  assert x == True\n\n  test7 = '''LOG_WARNING(storage.log, \"Path \" + fullPath(disk, path_to_clone + relative_path) + \" already exists. Will remove it and clone again.\");'''\n  x = fmt_style(test7)\n  assert x == 'LOG_WARNING(storage.log, \"Path {} already exists. Will remove it and clone again.\", fullPath(disk, path_to_clone + relative_path));'\n\n  test8 = '''LOG_DEBUG(log, \"aaa \" + func(b + f(c, e + d)) + \" ffff\");'''\n  x = fmt_style(test8)\n  assert x == 'LOG_DEBUG(log, \"aaa {} ffff\", func(b + f(c, e + d)));'\n\n  test9 = '''LOG_WARNING(storage.log, \"Path {} already exists. Will remove it and clone again.\", fullPath(disk, path_to_clone + relative_path));'''\n  assert check_already_right(test9) == True\n\n  test10 = '''LOG_WARNING(log, \"Error while deleting ZooKeeper path `\" << path << \"`: \" + Coordination::errorMessage(rc) << \", ignoring.\");'''\n  # print(test10)\n  x = fmt_style(test10)\n  # print(x)\n  assert x == 'LOG_WARNING(log, \"Error while deleting ZooKeeper path `{}`: {}, ignoring.\", path, Coordination::errorMessage(rc));'\n\ndef main(file):\n  print(\"Starting foramt file: {}\".format(file))\n  rows = read_raw_from_file(file)\n\n  after = []\n  n = len(rows)\n  i = 0\n  while i < n:\n    r = rows[i].rstrip()\n    if line_starts_with_prefix(r):\n      j = i\n      while j < n and rows[j][-2:] != \");\":\n        j += 1\n      assert j < n, \"Not a valid c/c++ file.\"\n\n      r = \"\".join(x for x in rows[i:j + 1])\n      if not check_already_right(r):\n        r = fmt_style(r)\n      i = j\n\n    after.append(r)\n    i += 1\n\n  write_text_to_file(file, after)\n\n  print(\"Finish format file.\")\n\n\nif __name__ == \"__main__\":\n  test_all()\n  assert len(sys.argv) >= 2, \"Please give me a file to format.\"\n  file = sys.argv[1]\n  main(file)\n"
        },
        {
          "name": "format_sources",
          "type": "blob",
          "size": 0.2548828125,
          "content": "# Settings -> Configure KDevelop -> Source Formatter -> [C++, C] ; Custom Script Formatter ; Kdevelop: kdev_format_source\n*.c *.cpp *.h *.hpp: mv $TMPFILE $TMPFILE.tmp; cat $TMPFILE.tmp | clang-format -style=file -assume-filename=`pwd`/.clang-format > $TMPFILE\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "programs",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "blob",
          "size": 2.8017578125,
          "content": "#!/usr/bin/env bash\n\n# If you have \"no space left\" error, you can change the location of temporary files with BUILDPLACE environment variable.\n\n# Version increment:\n# Default release: 18.1.2 -> 18.2.0:\n# ./release --version\n# or\n# ./release --version minor\n# Bugfix release (only with small patches to previous release): 18.1.2 -> 18.1.3:\n# ./release --version patch\n# Do this once per year: 18.1.2 -> 19.0.0:\n# ./release --version major\n\nset -e\n\n# Avoid dependency on locale\nLC_ALL=C\n\nCUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\ncd $CUR_DIR\n\nsource \"./utils/release/release_lib.sh\"\n\nDEBUILD_NOSIGN_OPTIONS=\"-us -uc\"\nDEBUILD_NODEPS_OPTIONS=\"-d\"\n\nif [ -z \"$VERSION_STRING\" ] ; then\n    get_revision_author\nfi\n\nwhile [[ $1 == --* ]]\ndo\n    if [[ $1 == '--test' ]]; then\n        TEST='yes'\n        VERSION_POSTFIX+=+test\n        shift\n    elif [[ $1 == '--check-build-dependencies' ]]; then\n        DEBUILD_NODEPS_OPTIONS=\"\"\n        shift\n    elif [[ $1 == '--version' ]]; then\n        gen_revision_author $2\n        exit 0\n    elif [[ $1 == '--rpm' ]]; then\n        MAKE_RPM=1\n        shift\n    elif [[ $1 == '--tgz' ]]; then\n        MAKE_TGZ=1\n        shift\n    else\n        echo \"Unknown option $1\"\n        exit 2\n    fi\ndone\n\n# Build options\nif [ -n \"$SANITIZER\" ]\nthen\n    if [[ \"$SANITIZER\" == \"address\" ]]; then VERSION_POSTFIX+=\"+asan\"\n    elif [[ \"$SANITIZER\" == \"thread\" ]]; then VERSION_POSTFIX+=\"+tsan\"\n    elif [[ \"$SANITIZER\" == \"memory\" ]]; then VERSION_POSTFIX+=\"+msan\"\n    elif [[ \"$SANITIZER\" == \"undefined\" ]]; then VERSION_POSTFIX+=\"+ubsan\"\n    elif [[ \"$SANITIZER\" == \"libfuzzer\" ]]; then\n        VERSION_POSTFIX+=\"+libfuzzer\"\n        MALLOC_OPTS=\"-DENABLE_TCMALLOC=0 -DENABLE_JEMALLOC=0\"\n    else\n        echo \"Unknown value of SANITIZER variable: $SANITIZER\"\n        exit 3\n    fi\n\n    export DEB_CC=${DEB_CC=clang-10}\n    export DEB_CXX=${DEB_CXX=clang++-10}\n    EXTRAPACKAGES=\"$EXTRAPACKAGES clang-10 lld-10\"\nelif [[ $BUILD_TYPE == 'valgrind' ]]; then\n    MALLOC_OPTS=\"-DENABLE_TCMALLOC=0 -DENABLE_JEMALLOC=0\"\n    VERSION_POSTFIX+=\"+valgrind\"\nelif [[ $BUILD_TYPE == 'debug' ]]; then\n    CMAKE_BUILD_TYPE=Debug\n    VERSION_POSTFIX+=\"+debug\"\nfi\n\nCMAKE_FLAGS=\" $MALLOC_OPTS -DSANITIZE=$SANITIZER -DENABLE_CHECK_HEAVY_BUILDS=1 $CMAKE_FLAGS\"\n[[ -n \"$CMAKE_BUILD_TYPE\" ]] && CMAKE_FLAGS=\" -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE $CMAKE_FLAGS\"\n\nexport CMAKE_FLAGS\nexport EXTRAPACKAGES\n\nVERSION_STRING+=$VERSION_POSTFIX\necho -e \"\\nCurrent version is $VERSION_STRING\"\n\nif [ -z \"$NO_BUILD\" ] ; then\n    gen_changelog \"$VERSION_STRING\" \"\" \"$AUTHOR\" \"\"\n    # Build (only binary packages).\n    debuild --preserve-env -e PATH \\\n    -e DEB_CC=$DEB_CC -e DEB_CXX=$DEB_CXX -e CMAKE_FLAGS=\"$CMAKE_FLAGS\" \\\n    -b ${DEBUILD_NOSIGN_OPTIONS} ${DEBUILD_NODEPS_OPTIONS}\nfi\n\nif [ -n \"$MAKE_RPM\" ]; then\n    make_rpm\nfi\n\nif [ -n \"$MAKE_TGZ\" ]; then\n    make_tgz\nfi\n"
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify.cfg",
          "type": "blob",
          "size": 9.6689453125,
          "content": "# Configuration file for Uncrustify code formatter.\n# https://github.com/uncrustify/uncrustify\n#\n# Created with https://cdanu.github.io/uncrustify_config_preview/index.html\n#\n# You may apply it for your code with:\n# uncrustify -l CPP -c uncrustify.cfg -f filename.cpp\n#\n# This config is in beta: it doesn't implement our style guide perfectly.\n# It's not recommended to apply it for existing code base.\n\nnewlines                        = lf\ninput_tab_size                  = 4\noutput_tab_size                 = 4\nstring_replace_tab_chars        = true\nutf8_bom                        = remove\nutf8_byte                       = true\nutf8_force                      = true\nsp_arith                        = force\nsp_assign                       = force\nsp_cpp_lambda_assign            = remove\nsp_cpp_lambda_paren             = remove\nsp_assign_default               = force\nsp_enum_assign                  = force\nsp_enum_colon                   = force\nsp_pp_concat                    = force\nsp_pp_stringify                 = remove\nsp_bool                         = force\nsp_compare                      = force\nsp_inside_paren                 = remove\nsp_paren_paren                  = remove\nsp_paren_brace                  = force\nsp_before_ptr_star              = force\nsp_between_ptr_star             = remove\nsp_after_ptr_star               = force\nsp_after_ptr_star_qualifier     = force\nsp_after_ptr_star_func          = force\nsp_ptr_star_paren               = force\nsp_before_ptr_star_func         = force\nsp_before_byref                 = force\nsp_before_unnamed_byref         = force\nsp_after_byref                  = force\nsp_after_byref_func             = force\nsp_before_byref_func            = force\nsp_template_angle               = force\nsp_before_angle                 = remove\nsp_inside_angle                 = remove\nsp_angle_colon                  = force\nsp_after_angle                  = force\nsp_angle_paren                  = remove\nsp_angle_paren_empty            = remove\nsp_angle_word                   = force\nsp_angle_shift                  = remove\nsp_permit_cpp11_shift           = true\nsp_before_sparen                = force\nsp_inside_sparen                = remove\nsp_after_sparen                 = force\nsp_sparen_brace                 = force\nsp_special_semi                 = force\nsp_before_semi_for              = remove\nsp_before_semi_for_empty        = remove\nsp_after_semi                   = force\nsp_after_semi_for_empty         = remove\nsp_before_square                = remove\nsp_before_squares               = remove\nsp_inside_square                = remove\nsp_after_comma                  = force\nsp_before_ellipsis              = remove\nsp_after_class_colon            = force\nsp_before_class_colon           = force\nsp_after_constr_colon           = force\nsp_before_constr_colon          = force\nsp_after_operator               = remove\nsp_after_operator_sym           = remove\nsp_after_cast                   = remove\nsp_inside_paren_cast            = remove\nsp_cpp_cast_paren               = remove\nsp_sizeof_paren                 = remove\nsp_inside_braces_enum           = force\nsp_inside_braces_struct         = force\nsp_inside_braces                = force\nsp_inside_braces_empty          = remove\nsp_type_func                    = force\nsp_func_proto_paren             = remove\nsp_func_proto_paren_empty       = remove\nsp_func_def_paren               = remove\nsp_func_def_paren_empty         = remove\nsp_inside_fparens               = remove\nsp_inside_fparen                = remove\nsp_inside_tparen                = remove\nsp_after_tparen_close           = remove\nsp_square_fparen                = remove\nsp_fparen_brace                 = force\nsp_func_call_paren              = remove\nsp_func_class_paren             = remove\nsp_func_class_paren_empty       = remove\nsp_return_paren                 = force\nsp_attribute_paren              = remove\nsp_defined_paren                = remove\nsp_throw_paren                  = force\nsp_after_throw                  = force\nsp_catch_paren                  = force\nsp_macro                        = add\nsp_macro_func                   = add\nsp_else_brace                   = force\nsp_brace_else                   = force\nsp_brace_typedef                = force\nsp_catch_brace                  = force\nsp_brace_catch                  = force\nsp_try_brace                    = force\nsp_word_brace                   = remove\nsp_word_brace_ns                = force\nsp_before_dc                    = remove\nsp_after_dc                     = remove\nsp_cond_colon                   = force\nsp_cond_colon_before            = force\nsp_cond_colon_after             = force\nsp_cond_question                = force\nsp_cond_question_before         = force\nsp_cond_question_after          = force\nsp_cond_ternary_short           = remove\nsp_cmt_cpp_start                = force\nsp_cmt_cpp_doxygen              = true\nsp_cmt_cpp_qttr                 = true\nsp_endif_cmt                    = force\nsp_after_new                    = force\nsp_between_new_paren            = remove\nsp_after_newop_paren            = force\nsp_inside_newop_paren           = remove\nsp_before_tr_emb_cmt            = force\nindent_columns                  = 4\nindent_with_tabs                = 0\nindent_namespace                = false\nindent_namespace_limit          = 100\nindent_class                    = true\nindent_ctor_init_leading        = 1\nindent_shift                    = true\nindent_func_call_param          = true\nindent_func_def_param           = true\nindent_func_proto_param         = true\nindent_func_class_param         = true\nindent_func_ctor_var_param      = true\nindent_template_param           = true\nindent_member                   = 4\nindent_switch_case              = 4\nindent_switch_pp                = false\nindent_label                    = 0\nindent_access_spec              = -4\nindent_paren_close              = 2\nindent_paren_after_func_def     = true\nindent_paren_after_func_decl    = true\nindent_paren_after_func_call    = true\nindent_align_assign             = false\nindent_token_after_brace        = false\nindent_cpp_lambda_body          = true\nindent_ternary_operator         = 1\nnl_assign_leave_one_liners      = true\nnl_class_leave_one_liners       = true\nnl_enum_leave_one_liners        = true\nnl_getset_leave_one_liners      = true\nnl_func_leave_one_liners        = true\nnl_cpp_lambda_leave_one_liners  = true\nnl_cpp_ldef_brace               = add\nnl_if_leave_one_liners          = true\nnl_start_of_file                = remove\nnl_end_of_file                  = force\nnl_enum_brace                   = add\nnl_struct_brace                 = add\nnl_union_brace                  = add\nnl_if_brace                     = add\nnl_brace_else                   = add\nnl_else_brace                   = add\nnl_else_if                      = remove\nnl_before_if_closing_paren      = remove\nnl_try_brace                    = add\nnl_for_brace                    = add\nnl_catch_brace                  = add\nnl_brace_catch                  = add\nnl_while_brace                  = add\nnl_do_brace                     = add\nnl_brace_while                  = remove\nnl_switch_brace                 = add\nnl_multi_line_define            = true\nnl_before_case                  = true\nnl_after_case                   = true\nnl_case_colon_brace             = add\nnl_namespace_brace              = add\nnl_template_class               = add\nnl_class_brace                  = add\nnl_enum_own_lines               = add\nnl_func_scope_name              = remove\nnl_func_paren                   = remove\nnl_func_def_paren               = remove\nnl_func_call_paren              = remove\nnl_func_call_paren_empty        = remove\nnl_func_decl_start_multi_line   = true\nnl_func_def_start_multi_line    = true\nnl_func_decl_args_multi_line    = true\nnl_func_def_args_multi_line     = true\nnl_func_decl_end                = remove\nnl_func_def_end                 = remove\nnl_func_decl_empty              = remove\nnl_func_def_empty               = remove\nnl_func_call_empty              = remove\nnl_func_call_start_multi_line   = true\nnl_func_call_args_multi_line    = true\nnl_fdef_brace                   = add\nnl_after_semicolon              = true\nnl_constr_colon                 = force\nnl_split_if_one_liner           = true\nnl_split_for_one_liner          = true\nnl_split_while_one_liner        = true\nnl_max                          = 3\nnl_max_blank_in_func            = 2\nnl_after_func_proto             = 1\nnl_after_func_proto_group       = 2\nnl_after_func_class_proto       = 1\nnl_after_func_class_proto_group = 2\nnl_before_func_body_def         = 1\nnl_before_func_body_proto       = 1\nnl_after_func_body              = 3\nnl_after_func_body_class        = 3\nnl_after_func_body_one_liner    = 1\nnl_after_multiline_comment      = true\nnl_after_struct                 = 3\nnl_before_class                 = 3\nnl_after_class                  = 3\nnl_before_access_spec           = 2\nnl_after_access_spec            = 1\nnl_after_try_catch_finally      = 1\neat_blanks_after_open_brace     = true\neat_blanks_before_close_brace   = true\nnl_remove_extra_newlines        = 1\nnl_after_return                 = true\npos_constr_comma                = lead_break\npos_constr_colon                = lead_force\ncode_width                      = 160\nls_func_split_full              = true\nls_code_width                   = true\nalign_left_shift                = false\ncmt_convert_tab_to_spaces       = true\nmod_full_brace_for              = remove\nmod_full_brace_if               = remove\nmod_full_brace_if_chain         = true\nmod_full_brace_while            = remove\nmod_paren_on_return             = remove\nmod_remove_extra_semicolon      = true\nmod_remove_empty_return         = true\nalign_func_params               = true\nalign_func_params_thresh        = 140\nsp_inside_type_brace_init_lst   = remove\nnl_constr_init_args             = add\n"
        },
        {
          "name": "unittest.sh",
          "type": "blob",
          "size": 0.3212890625,
          "content": "#!/bin/bash\nset -e\n\nif [ -n \"$CUSTOM_SANITIZE\" ] ; then\n    exit 0\nfi\n\nUTESTS=\"$( cd \"$(dirname \"$0\")\" >/dev/null 2>&1 ; pwd -P )/build\"\ncd $UTESTS\nif [ -d /test_output ]; then\n    set -o pipefail\n    src/unit_tests_dbms --output-on-failure |& tee /test_output/unittest.log \nelse\n    src/unit_tests_dbms --output-on-failure \nfi\n\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "ya.make",
          "type": "blob",
          "size": 0.4833984375,
          "content": "# What are \"ya.make\" files?\n# \"ya.make\" file is a configuration file for \"ya\" - an internal Yandex build system that is used to build internal Yandex monorepository.\n# We don't use nor \"ya\" build system neither the Yandex monorepository for development of ClickHouse and you should not pay attention to these files.\n# But ClickHouse source code is synchronized with internal Yandex monorepository, that's why \"ya.make\" files exist.\n\nOWNER(g:clickhouse)\n\nRECURSE(\n    base\n    programs\n    src\n)\n"
        }
      ]
    }
  ]
}