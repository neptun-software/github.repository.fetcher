{
  "metadata": {
    "timestamp": 1736565601827,
    "page": 481,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tildearrow/furnace",
      "stars": 2740,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.119140625,
          "content": "root = true\n\n[*.{cpp,h}]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0107421875,
          "content": "*.sfd text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.609375,
          "content": ".vscode/\nbuild/\nclangbuild/\nnosdl/\nrelease/\nt/\nwinbuild/\nwinCbuild/\nwin32build/\nxpbuild/\nmacbuild/\nlinuxbuild/\n*.swp\n.cache/\n.DS_Store\ntest/songs/\ntest/delta/\ntest/result/\ntest/assert_delta\nandroid/local.properties\nandroid/.idea/\nandroid/.gradle/\nandroid/app/build/\nandroid/app/.cxx/\n.vs/\nCMakeSettings.json\nCMakePresets.json\nextern/imgui_patched/examples/\nsrc/asm/68k/amigatest/*.bin\nsrc/asm/68k/amigatest/player\nsrc/check/calc_checksum\nres/binary_to_compressed_c\nres/binary_to_compressed_c.exe\nres/docpdf/manual.html\nres/docpdf/manual.pdf\nres/docpdf/.venv\nres/docpdf/htmldoc/\nres/fonts/compressed/\nres/furnace.appdata.xml\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.5087890625,
          "content": "[submodule \"extern/SDL\"]\n\tpath = extern/SDL\n\turl = https://github.com/libsdl-org/SDL.git\n\tbranch = release-2.28.x\n[submodule \"extern/libsndfile\"]\n\tpath = extern/libsndfile\n\turl = https://github.com/libsndfile/libsndfile.git\n\tbranch = master\n[submodule \"extern/fmt\"]\n\tpath = extern/fmt\n\turl = https://github.com/fmtlib/fmt.git\n[submodule \"extern/adpcm\"]\n\tpath = extern/adpcm\n\turl = https://github.com/superctr/adpcm\n[submodule \"extern/portaudio\"]\n\tpath = extern/portaudio\n\turl = https://github.com/PortAudio/portaudio.git\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 43.73046875,
          "content": "cmake_minimum_required(VERSION 3.0)\n\nif (APPLE)\n  set(MACOSX_DEPLOYMENT_TARGET 10.9)\nendif()\n\nproject(furnace)\n\nif (APPLE)\n  enable_language(OBJC)\n  enable_language(OBJCXX)\nendif()\n\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nset(CMAKE_PROJECT_VERSION_MAJOR 0)\nset(CMAKE_PROJECT_VERSION_MINOR 6)\nset(CMAKE_PROJECT_VERSION_PATCH 6)\n\nset(BUILD_GUI_DEFAULT ON)\nset(USE_SDL2_DEFAULT ON)\nset(USE_SNDFILE_DEFAULT ON)\nset(SYSTEM_SDL2_DEFAULT OFF)\n\ninclude(CheckIncludeFile)\ninclude(TestBigEndian)\n\nexecute_process(COMMAND git status RESULT_VARIABLE DONT_HAVE_GIT WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\nif (NOT DONT_HAVE_GIT)\n  message(STATUS \"Git is available\")\nelse()\n  message(WARNING \"either Git is not available, or this Git repository has not been initialized.\nif you have used the \\\"Source code\\\" option in the GitHub release page, you are doing it wrong! unless you manually initialize submodules, the build is guaranteed to FAIL spectacularly!\nread the \\\"developer info\\\" section of README.md for more information.\")\nendif()\n\nif (ANDROID)\n  set(USE_RTMIDI_DEFAULT OFF)\n  set(WITH_PORTAUDIO_DEFAULT OFF)\n  set(USE_BACKWARD_DEFAULT OFF)\n  find_library(TERMUX rt)\n  if (TERMUX)\n    message(STATUS \"Termux detected\")\n  endif()\nelse()\n  set(USE_RTMIDI_DEFAULT ON)\n  set(WITH_PORTAUDIO_DEFAULT ON)\n  if (WIN32 OR APPLE)\n    set(USE_BACKWARD_DEFAULT ON)\n  else()\n    CHECK_INCLUDE_FILE(execinfo.h EXECINFO_FOUND)\n    if (EXECINFO_FOUND)\n      set(USE_BACKWARD_DEFAULT ON)\n    else()\n      set(USE_BACKWARD_DEFAULT OFF)\n    endif()\n  endif()\nendif()\n\nfind_package(PkgConfig)\nif (PKG_CONFIG_FOUND AND NOT ANDROID)\n  pkg_check_modules(JACK jack)\n  set(WITH_JACK_DEFAULT ${JACK_FOUND})\nelse()\n  set(WITH_JACK_DEFAULT OFF)\nendif()\n\nset(WITH_RENDER_SDL_DEFAULT ON)\nset(WITH_RENDER_OPENGL_DEFAULT ON)\nif (WIN32)\n  set(WITH_RENDER_DX11_DEFAULT ON)\n  set(WITH_RENDER_DX9_DEFAULT ON)\nelse()\n  set(WITH_RENDER_DX11_DEFAULT OFF)\n  set(WITH_RENDER_DX9_DEFAULT OFF)\nendif()\nif (APPLE)\n  set(WITH_RENDER_METAL_DEFAULT ON)\nelse()\n  set(WITH_RENDER_METAL_DEFAULT OFF)\nendif()\n\nif (ANDROID)\n  set(USE_GLES_DEFAULT ON)\n  set(WITH_RENDER_OPENGL1_DEFAULT OFF)\nelse()\n  set(USE_GLES_DEFAULT OFF)\n  if (APPLE)\n    set(WITH_RENDER_OPENGL1_DEFAULT OFF)\n  else()\n    set(WITH_RENDER_OPENGL1_DEFAULT ON)\n  endif()\nendif()\n\nset(WITH_LOCALE_DEFAULT ON)\n\ntry_compile(HAVE_SETLOCALE ${CMAKE_BINARY_DIR}/check SOURCES ${CMAKE_SOURCE_DIR}/src/check/check_setlocale.c)\ninclude(FindIntl)\n\nif (HAVE_SETLOCALE AND Intl_FOUND AND NOT APPLE)\n  set(USE_MOMO_DEFAULT OFF)\nelse()\n  set(USE_MOMO_DEFAULT ON)\nendif()\n\noption(BUILD_GUI \"Build the tracker (disable to build only a headless player)\" ${BUILD_GUI_DEFAULT})\noption(WITH_LOCALE \"Use libintl for language support\" ${WITH_LOCALE_DEFAULT})\noption(USE_RTMIDI \"Build with MIDI support using RtMidi.\" ${USE_RTMIDI_DEFAULT})\noption(USE_SDL2 \"Build with SDL2. Required to build with GUI.\" ${USE_SDL2_DEFAULT})\noption(USE_SNDFILE \"Build with libsndfile. Required in order to work with audio files.\" ${USE_SNDFILE_DEFAULT})\noption(USE_BACKWARD \"Use backward-cpp to print a backtrace on crash/abort.\" ${USE_BACKWARD_DEFAULT})\noption(USE_MOMO \"Build a libintl implementation instead of using the system one.\" ${USE_MOMO_DEFAULT})\noption(WITH_JACK \"Whether to build with JACK support. Auto-detects if JACK is available\" ${WITH_JACK_DEFAULT})\noption(WITH_PORTAUDIO \"Whether to build with PortAudio for audio output.\" ${WITH_PORTAUDIO_DEFAULT})\noption(WITH_RENDER_SDL \"Whether to build with the SDL_Renderer render backend.\" ${WITH_RENDER_SDL_DEFAULT})\noption(WITH_RENDER_OPENGL \"Whether to build with the OpenGL render backend.\" ${WITH_RENDER_OPENGL_DEFAULT})\noption(WITH_RENDER_OPENGL1 \"Whether to build with the OpenGL 1.1 render backend.\" ${WITH_RENDER_OPENGL1_DEFAULT})\noption(WITH_RENDER_DX11 \"Whether to build with the DirectX 11 render backend.\" ${WITH_RENDER_DX11_DEFAULT})\noption(WITH_RENDER_DX9 \"Whether to build with the DirectX 9 render backend.\" ${WITH_RENDER_DX9_DEFAULT})\noption(WITH_RENDER_METAL \"Whether to build with the Metal render backend.\" ${WITH_RENDER_METAL_DEFAULT})\noption(USE_GLES \"Use OpenGL ES for the OpenGL render backend.\" ${USE_GLES_DEFAULT})\noption(USE_FREETYPE \"Use FreeType for font rendering.\" ON)\noption(SYSTEM_FFTW \"Use a system-installed version of FFTW instead of the vendored one\" OFF)\noption(SYSTEM_FMT \"Use a system-installed version of fmt instead of the vendored one\" OFF)\noption(SYSTEM_FREETYPE \"Use a system-installed version of FreeType instead of the vendored one\" OFF)\noption(SYSTEM_LIBSNDFILE \"Use a system-installed version of libsndfile instead of the vendored one\" OFF)\noption(SYSTEM_PORTAUDIO \"Use a system-installed version of PortAudio instead of the vendored one\" OFF)\noption(SYSTEM_RTMIDI \"Use a system-installed version of RtMidi instead of the vendored one\" OFF)\noption(SYSTEM_ZLIB \"Use a system-installed version of zlib instead of the vendored one\" OFF)\noption(SYSTEM_SDL2 \"Use a system-installed version of SDL2 instead of the vendored one\" ${SYSTEM_SDL2_DEFAULT})\noption(SUPPORT_XP \"Build a Windows XP-compatible binary\" OFF)\noption(WARNINGS_ARE_ERRORS \"Whether warnings in furnace's C++ code should be treated as errors\" OFF)\noption(WITH_DEMOS \"Install demo songs (NOTE: demo songs are NOT under GPL!)\" OFF)\noption(WITH_INSTRUMENTS \"Install instruments\" ON)\noption(WITH_WAVETABLES \"Install wavetables\" ON)\noption(SHOW_OPEN_ASSETS_MENU_ENTRY \"Show option to open built-in assets directory (on supported platforms)\" OFF)\noption(CONSOLE_SUBSYSTEM \"Build Furnace with Console subsystem on Windows\" OFF)\noption(FLATPAK_WORKAROUNDS \"Enable Flatpak-specific workaround for system file picker\" OFF)\nif (APPLE)\n  option(FORCE_APPLE_BIN \"Force enable binary installation to /bin\" OFF)\n  option(MAKE_BUNDLE \"Make a bundle\" OFF)\nelse()\n  # not Apple - not needed\n  set(FORCE_APPLE_BIN OFF)\n  set(MAKE_BUNDLE OFF)\nendif()\n\nset(DEPENDENCIES_INCLUDE_DIRS extern/IconFontCppHeaders src/icon)\n\nif (ANDROID AND NOT TERMUX)\n  set(DEPENDENCIES_DEFINES \"IS_MOBILE\")\nelse()\n  set(DEPENDENCIES_DEFINES \"\")\nendif()\n\nTEST_BIG_ENDIAN(IS_BIG_ENDIAN)\n\nif (IS_BIG_ENDIAN)\n  list(APPEND DEPENDENCIES_DEFINES \"TA_BIG_ENDIAN\")\nendif()\n\nif (FLATPAK_WORKAROUNDS)\n  list(APPEND DEPENDENCIES_DEFINES \"FLATPAK_WORKAROUNDS\")\nendif()\n\nset(DEPENDENCIES_COMPILE_OPTIONS \"\")\nset(DEPENDENCIES_LIBRARIES \"\")\nset(DEPENDENCIES_LIBRARY_DIRS \"\")\nset(DEPENDENCIES_LINK_OPTIONS \"\")\nset(DEPENDENCIES_LEGACY_LDFLAGS \"\")\n\nif (BUILD_GUI AND WITH_RENDER_SDL)\n  set(SYSTEM_SDL_MIN_VER 2.0.18)\nelse()\n  set(SYSTEM_SDL_MIN_VER 2.0.0)\nendif()\n\n#list(APPEND DEPENDENCIES_INCLUDE_DIRS \"extern/SAASound/include\")\nlist(APPEND DEPENDENCIES_INCLUDE_DIRS \"extern/vgsound_emu-modified\")\n\nfind_package(Threads REQUIRED)\nlist(APPEND DEPENDENCIES_LIBRARIES ${CMAKE_THREAD_LIBS_INIT})\n\n\nif (WIN32)\n  # support Windows XP\n  if (SUPPORT_XP)\n    list(APPEND DEPENDENCIES_DEFINES \"_WIN32_WINNT=0x0501\")\n    list(APPEND DEPENDENCIES_DEFINES \"SUPPORT_XP\")\n  endif()\nendif()\n\nif (SYSTEM_FFTW)\n  find_package(PkgConfig REQUIRED)\n  pkg_check_modules(FFTW REQUIRED fftw3>=3.3)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS ${FFTW_INCLUDE_DIRS})\n  list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${FFTW_CFLAGS_OTHER})\n  list(APPEND DEPENDENCIES_LIBRARIES ${FFTW_LIBRARIES})\n  list(APPEND DEPENDENCIES_LIBRARY_DIRS ${FFTW_LIBRARY_DIRS})\n  list(APPEND DEPENDENCIES_LINK_OPTIONS ${FFTW_LDFLAGS_OTHER})\n  list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${FFTW_LDFLAGS})\n  message(STATUS \"Using system-installed FFTW\")\nelse()\n  if (WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    set(WITH_OUR_MALLOC ON CACHE BOOL \"aaa\" FORCE)\n  endif()\n  set(BUILD_TESTS OFF CACHE BOOL \"come on\" FORCE)\n  add_subdirectory(extern/fftw EXCLUDE_FROM_ALL)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/fftw/api)\n  list(APPEND DEPENDENCIES_LIBRARIES fftw3)\n  message(STATUS \"Using vendored FFTW\")\nendif()\n\nif (SYSTEM_FMT)\n  if (PKG_CONFIG_FOUND)\n    pkg_check_modules(FMT fmt>=7.1.0)\n    if (FMT_FOUND)\n      list(APPEND DEPENDENCIES_INCLUDE_DIRS ${FMT_INCLUDE_DIRS})\n      list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${FMT_CFLAGS_OTHER})\n      list(APPEND DEPENDENCIES_LIBRARIES ${FMT_LIBRARIES})\n      list(APPEND DEPENDENCIES_LIBRARY_DIRS ${FMT_LIBRARY_DIRS})\n      list(APPEND DEPENDENCIES_LINK_OPTIONS ${FMT_LDFLAGS_OTHER})\n      list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${FMT_LDFLAGS})\n    endif()\n  endif()\n  if (NOT FMT_FOUND)\n    find_package(fmt REQUIRED)\n    list(APPEND DEPENDENCIES_LIBRARIES fmt::fmt)\n  endif()\n  message(STATUS \"Using system-installed fmt\")\nelse()\n  add_subdirectory(extern/fmt EXCLUDE_FROM_ALL)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/fmt/include)\n  list(APPEND DEPENDENCIES_LIBRARIES fmt)\n  message(STATUS \"Using vendored fmt\")\nendif()\n\nif (BUILD_GUI AND USE_FREETYPE)\n  # TODO: FIX FIX FIX FIX FIX\n  if (SYSTEM_FREETYPE)\n    if (PKG_CONFIG_FOUND)\n      pkg_check_modules(FREETYPE freetype2>=2.0.0)\n      if (FREETYPE_FOUND)\n        list(APPEND DEPENDENCIES_INCLUDE_DIRS ${FREETYPE_INCLUDE_DIRS})\n        list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${FREETYPE_CFLAGS_OTHER})\n        list(APPEND DEPENDENCIES_LIBRARIES ${FREETYPE_LIBRARIES})\n        list(APPEND DEPENDENCIES_LIBRARY_DIRS ${FREETYPE_LIBRARY_DIRS})\n        list(APPEND DEPENDENCIES_LINK_OPTIONS ${FREETYPE_LDFLAGS_OTHER})\n        list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${FREETYPE_LDFLAGS})\n      endif()\n    endif()\n    if (NOT FREETYPE_FOUND)\n      find_package(freetype REQUIRED)\n      list(APPEND DEPENDENCIES_LIBRARIES freetype::freetype)\n    endif()\n    message(STATUS \"Using system-installed FreeType\")\n  else()\n    set(FT_DISABLE_BROTLI ON CACHE BOOL \"one\" FORCE)\n    set(FT_DISABLE_BZIP2 ON CACHE BOOL \"two\" FORCE)\n    set(FT_DISABLE_HARFBUZZ ON CACHE BOOL \"three\" FORCE)\n    set(FT_DISABLE_PNG ON CACHE BOOL \"four\" FORCE)\n    set(FT_DISABLE_ZLIB ON CACHE BOOL \"five\" FORCE)\n    add_subdirectory(extern/freetype EXCLUDE_FROM_ALL)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/freetype/include)\n    list(APPEND DEPENDENCIES_LIBRARIES freetype)\n    message(STATUS \"Using vendored FreeType\")\n  endif()\n  list(APPEND DEPENDENCIES_DEFINES HAVE_FREETYPE)\nendif()\n\nif (USE_SNDFILE)\n  list(APPEND DEPENDENCIES_DEFINES HAVE_SNDFILE)\n  if (SYSTEM_LIBSNDFILE)\n    find_package(PkgConfig REQUIRED)\n    pkg_check_modules(LIBSNDFILE REQUIRED sndfile)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS ${LIBSNDFILE_INCLUDE_DIRS})\n    list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${LIBSNDFILE_CFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LIBRARIES ${LIBSNDFILE_LIBRARIES})\n    list(APPEND DEPENDENCIES_LIBRARY_DIRS ${LIBSNDFILE_LIBRARY_DIRS})\n    list(APPEND DEPENDENCIES_LINK_OPTIONS ${LIBSNDFILE_LDFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${LIBSNDFILE_LDFLAGS})\n    message(STATUS \"Using system-installed libsndfile\")\n  else()\n    set(BUILD_TESTING OFF CACHE BOOL \"aaaaaa\" FORCE)\n    set(BUILD_PROGRAMS OFF CACHE BOOL \"aaa\" FORCE)\n    set(BUILD_EXAMPLES OFF CACHE BOOL \"a\" FORCE)\n    set(ENABLE_EXTERNAL_LIBS OFF CACHE BOOL \"come on\" FORCE)\n    set(ENABLE_MPEG OFF CACHE BOOL \"come on\" FORCE)\n    add_subdirectory(extern/libsndfile EXCLUDE_FROM_ALL)\n    list(APPEND DEPENDENCIES_LIBRARIES sndfile)\n    message(STATUS \"Using vendored libsndfile\")\n  endif()\nelse()\n  message(STATUS \"Not using libsndfile\")\nendif()\n\nif (WITH_PORTAUDIO)\n  if (SYSTEM_PORTAUDIO)\n    find_package(PkgConfig REQUIRED)\n    pkg_check_modules(PORTAUDIO REQUIRED portaudio-2.0)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS ${PORTAUDIO_INCLUDE_DIRS})\n    list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${PORTAUDIO_CFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LIBRARIES ${PORTAUDIO_LIBRARIES})\n    list(APPEND DEPENDENCIES_LIBRARY_DIRS ${PORTAUDIO_LIBRARY_DIRS})\n    list(APPEND DEPENDENCIES_LINK_OPTIONS ${PORTAUDIO_LDFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${PORTAUDIO_LDFLAGS})\n    message(STATUS \"Using system-installed PortAudio\")\n  else()\n    set(PA_BUILD_SHARED_LIBS OFF CACHE BOOL \"Build dynamic library\" FORCE)\n    # don't - Furnace has its own implementation\n    set(PA_USE_JACK OFF CACHE BOOL \"Enable support for JACK Audio Connection Kit\" FORCE)\n    add_subdirectory(extern/portaudio EXCLUDE_FROM_ALL)\n    list(APPEND DEPENDENCIES_LIBRARIES PortAudio)\n    message(STATUS \"Using vendored PortAudio\")\n  endif()\nendif()\n\nif (USE_RTMIDI)\n  if (SYSTEM_RTMIDI)\n    find_package(PkgConfig REQUIRED)\n    pkg_check_modules(RTMIDI REQUIRED rtmidi)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS ${RTMIDI_INCLUDE_DIRS})\n    list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${RTMIDI_CFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LIBRARIES ${RTMIDI_LIBRARIES})\n    list(APPEND DEPENDENCIES_LIBRARY_DIRS ${RTMIDI_LIBRARY_DIRS})\n    list(APPEND DEPENDENCIES_LINK_OPTIONS ${RTMIDI_LDFLAGS_OTHER})\n    list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${RTMIDI_LDFLAGS})\n    message(STATUS \"Using system-installed RtMidi\")\n  else()\n    add_subdirectory(extern/rtmidi EXCLUDE_FROM_ALL)\n    list(APPEND DEPENDENCIES_LIBRARIES rtmidi)\n    message(STATUS \"Using vendored RtMidi\")\n  endif()\nendif()\n\nif (SYSTEM_ZLIB)\n  find_package(PkgConfig REQUIRED)\n  pkg_check_modules(ZLIB REQUIRED zlib)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS ${ZLIB_INCLUDE_DIRS})\n  list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${ZLIB_CFLAGS_OTHER})\n  list(APPEND DEPENDENCIES_LIBRARIES ${ZLIB_LIBRARIES})\n  list(APPEND DEPENDENCIES_LIBRARY_DIRS ${ZLIB_LIBRARY_DIRS})\n  list(APPEND DEPENDENCIES_LINK_OPTIONS ${ZLIB_LDFLAGS_OTHER})\n  list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${ZLIB_LDFLAGS})\n  message(STATUS \"Using system-installed zlib\")\nelse()\n  set(BUILD_TESTING OFF CACHE BOOL \"aaaaaa\" FORCE)\n  set(BUILD_PROGRAMS OFF CACHE BOOL \"aaa\" FORCE)\n  set(BUILD_EXAMPLES OFF CACHE BOOL \"a\" FORCE)\n  set(ENABLE_EXTERNAL_LIBS OFF CACHE BOOL \"come on\" FORCE)\n  set(ENABLE_MPEG OFF CACHE BOOL \"come on\" FORCE)\n  add_subdirectory(extern/zlib EXCLUDE_FROM_ALL)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/zlib ${CMAKE_CURRENT_BINARY_DIR}/extern/zlib)\n  list(APPEND DEPENDENCIES_LIBRARIES zlibstatic)\n  message(STATUS \"Using vendored zlib\")\nendif()\n\nif (USE_SDL2)\n  if (SYSTEM_SDL2)\n    if (PKG_CONFIG_FOUND)\n      pkg_check_modules(SDL2 sdl2>=${SYSTEM_SDL_MIN_VER})\n      if (SDL2_FOUND)\n        list(APPEND DEPENDENCIES_DEFINES HAVE_SDL2)\n        list(APPEND DEPENDENCIES_INCLUDE_DIRS ${SDL2_INCLUDE_DIRS})\n        list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${SDL2_CFLAGS_OTHER})\n        list(APPEND DEPENDENCIES_LIBRARIES ${SDL2_LIBRARIES})\n        list(APPEND DEPENDENCIES_LIBRARY_DIRS ${SDL2_LIBRARY_DIRS})\n        list(APPEND DEPENDENCIES_LINK_OPTIONS ${SDL2_LDFLAGS_OTHER})\n        list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${SDL2_LDFLAGS})\n      endif()\n    endif()\n    if (NOT SDL2_FOUND)\n      find_package(SDL2 ${SYSTEM_SDL_MIN_VER} REQUIRED)\n      list(APPEND DEPENDENCIES_DEFINES HAVE_SDL2)\n      list(APPEND DEPENDENCIES_INCLUDE_DIRS ${SDL2_INCLUDE_DIR})\n      list(APPEND DEPENDENCIES_LIBRARIES ${SDL2_LIBRARY})\n    endif()\n    message(STATUS \"Using system-installed SDL2\")\n  else()\n    if (ANDROID AND NOT TERMUX)\n      set(SDL_SHARED ON CACHE BOOL \"Force no dynamically-linked SDL\" FORCE)\n      set(SDL_STATIC OFF CACHE BOOL \"Force statically-linked SDL\" FORCE)\n    else()\n      set(SDL_SHARED OFF CACHE BOOL \"Force no dynamically-linked SDL\" FORCE)\n      set(SDL_STATIC ON CACHE BOOL \"Force statically-linked SDL\" FORCE)\n    endif()\n    # https://github.com/libsdl-org/SDL/issues/5535\n    # disable PipeWire support due to an unfixable bug:\n    #   Looks like their headers have a C90 violation... I imagine they're probably on C99 so not the craziest bug in the world. Definitely file this at the PipeWire repository as well so they know this is out there.\n    set(SDL_PIPEWIRE OFF CACHE BOOL \"Use Pipewire audio\" FORCE)\n\n    # https://github.com/libsdl-org/SDL/issues/1481\n    # On 2014-06-22 17:15:50 +0000, Sam Lantinga wrote:\n    #   If you link SDL statically, you also need to define HAVE_LIBC so it builds with the C runtime that your application uses.\n    #   This should probably go in a FAQ.\n    set(SDL_LIBC ON CACHE BOOL \"Tell SDL that we want it to use our C runtime (required for proper static linking)\" FORCE)\n\n    # https://github.com/tildearrow/furnace/issues/1237\n    # enabling this will result in SDL finding the Direct3D headers, forcing _WIN32_WINNT to an undesirable value (which makes the Wine headers define GetTickCount64)\n    if (SUPPORT_XP)\n      set(SDL_RENDER_D3D OFF CACHE BOOL \"Enable the Direct3D render driver\" FORCE)\n    endif()\n\n    CHECK_INCLUDE_FILE(GLES/gl.h GLES_GL_FOUND)\n    if (NOT GLES_GL_FOUND AND NOT USE_GLES)\n      set(SDL_OPENGLES OFF CACHE BOOL \"Enable OpenGL ES\" FORCE)\n    endif()\n\n    add_subdirectory(extern/SDL EXCLUDE_FROM_ALL)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_SDL2)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/SDL/include)\n    if (ANDROID AND NOT TERMUX)\n      list(APPEND DEPENDENCIES_LIBRARIES SDL2)\n    else()\n      list(APPEND DEPENDENCIES_LIBRARIES SDL2-static)\n    endif()\n    # Work around add_subdirectory'd SDL not propagating HAVE_LIBC to MSVC furnace build\n    if (MSVC)\n      list(APPEND DEPENDENCIES_COMPILE_OPTIONS \"/DHAVE_LIBC\")\n    endif()\n    if (WIN32)\n      list(APPEND DEPENDENCIES_LIBRARIES SDL2main)\n    endif()\n    message(STATUS \"Using vendored SDL2\")\n  endif()\nelse()\n  message(STATUS \"Not using SDL2\")\n  if (BUILD_GUI)\n    message(FATAL_ERROR \"SDL2 is required in order to build with GUI! Disable BUILD_GUI otherwise.\")\n  endif()\nendif()\n\nset(AUDIO_SOURCES\nsrc/audio/abstract.cpp\nsrc/audio/midi.cpp\nsrc/audio/pipe.cpp\n)\n\nif (USE_SDL2)\n  list(APPEND AUDIO_SOURCES src/audio/sdlAudio.cpp)\nendif()\n\nif (WITH_JACK)\n  find_package(PkgConfig REQUIRED)\n  pkg_check_modules(JACK REQUIRED jack)\n  list(APPEND AUDIO_SOURCES extern/weakjack/weak_libjack.c)\n  list(APPEND AUDIO_SOURCES src/audio/jack.cpp)\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS ${JACK_INCLUDE_DIRS})\n  list(APPEND DEPENDENCIES_DEFINES HAVE_JACK)\n  list(APPEND DEPENDENCIES_DEFINES USE_WEAK_JACK)\n  #list(APPEND DEPENDENCIES_COMPILE_OPTIONS ${JACK_CFLAGS_OTHER})\n  #list(APPEND DEPENDENCIES_LIBRARIES ${JACK_LIBRARIES})\n  #list(APPEND DEPENDENCIES_LIBRARY_DIRS ${JACK_LIBRARY_DIRS})\n  #list(APPEND DEPENDENCIES_LINK_OPTIONS ${JACK_LDFLAGS_OTHER})\n  #list(APPEND DEPENDENCIES_LEGACY_LDFLAGS ${JACK_LDFLAGS})\n  message(STATUS \"Building with JACK support\")\nelse()\n  message(STATUS \"Building without JACK support\")\nendif()\n\nif (WITH_PORTAUDIO)\n  list(APPEND AUDIO_SOURCES src/audio/pa.cpp)\n  message(STATUS \"Building with PortAudio\")\n  list(APPEND DEPENDENCIES_DEFINES HAVE_PA)\nelse()\n  message(STATUS \"Building without PortAudio\")\nendif()\n\nif (USE_RTMIDI)\n  list(APPEND AUDIO_SOURCES src/audio/rtmidi.cpp)\n  message(STATUS \"Building with RtMidi\")\n  list(APPEND DEPENDENCIES_DEFINES HAVE_RTMIDI)\nelse()\n  message(STATUS \"Building without RtMidi\")\nendif()\n\nset(ENGINE_SOURCES\nsrc/log.cpp\nsrc/baseutils.cpp\nsrc/fileutils.cpp\nsrc/utfutils.cpp\n\nextern/itcompress/compression.c\n\nextern/SAASound/src/SAAAmp.cpp\nextern/SAASound/src/SAADevice.cpp\nextern/SAASound/src/SAAEnv.cpp\nextern/SAASound/src/SAAFreq.cpp\nextern/SAASound/src/SAAImpl.cpp\nextern/SAASound/src/SAANoise.cpp\nextern/SAASound/src/SAASndC.cpp\nextern/SAASound/src/SAASound.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/core/vox/vox.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es550x.cpp\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es550x_alu.cpp\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es550x_filter.cpp\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es5504.cpp\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es5505.cpp\nextern/vgsound_emu-modified/vgsound_emu/src/es550x/es5506.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/k005289/k005289.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/k007232/k007232.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/k053260/k053260.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/msm6295/msm6295.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/n163/n163.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/scc/scc.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/vrcvi/vrcvi.cpp\n\nextern/vgsound_emu-modified/vgsound_emu/src/x1_010/x1_010.cpp\n\nextern/adpcm/bs_codec.c\nextern/adpcm/oki_codec.c\nextern/adpcm/yma_codec.c\nextern/adpcm/ymb_codec.c\nextern/adpcm/ymz_codec.c\n\nextern/adpcm-xq-s/adpcm-lib.c\n\nextern/opn/ym3438.c\nextern/Nuked-PSG/ympsg.c\nextern/opm/opm.c\nextern/Nuked-OPLL/opll.c\nextern/opl/opl3.c\nextern/YM3812-LLE/fmopl2.c\nextern/YMF262-LLE/fmopl3.c\nextern/YMF276-LLE/fmopn2.c\nextern/ESFMu/esfm.c\nextern/ESFMu/esfm_registers.c\nextern/emu2413/emu2413.c\nextern/YM2608-LLE/fmopna_2608.c\nextern/YM2608-LLE/fmopna_2610.c\nextern/YM2608-LLE/fmopna_2612.c\n\nextern/pwrnoise/pwrnoise.c\n\nsrc/pch.cpp\n\nsrc/engine/platform/sound/sn76496.cpp\nsrc/engine/platform/sound/ay8910.cpp\nsrc/engine/platform/sound/saa1099.cpp\nsrc/engine/platform/sound/namco.cpp\nsrc/engine/platform/sound/segapcm.cpp\nsrc/engine/platform/sound/gb/apu.c\nsrc/engine/platform/sound/gb/timing.c\nsrc/engine/platform/sound/pce_psg.cpp\nsrc/engine/platform/sound/nes/apu.c\nsrc/engine/platform/sound/nes/fds.c\nsrc/engine/platform/sound/nes/mmc5.c\nsrc/engine/platform/sound/vera_psg.c\nsrc/engine/platform/sound/vera_pcm.c\nsrc/engine/platform/sound/ymf278b/ymf278.cpp\n\nsrc/engine/platform/sound/atomicssg/ssg.c\n\nsrc/engine/platform/sound/nes_nsfplay/5e01_apu.cpp\nsrc/engine/platform/sound/nes_nsfplay/5e01_dmc.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_apu.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_dmc.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_fds.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_mmc5.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_n106.cpp\nsrc/engine/platform/sound/nes_nsfplay/nes_vrc6.cpp\n\nsrc/engine/platform/sound/c64/sid.cc\nsrc/engine/platform/sound/c64/voice.cc\nsrc/engine/platform/sound/c64/wave.cc\nsrc/engine/platform/sound/c64/envelope.cc\nsrc/engine/platform/sound/c64/filter.cc\nsrc/engine/platform/sound/c64/extfilt.cc\nsrc/engine/platform/sound/c64/pot.cc\nsrc/engine/platform/sound/c64/version.cc\n\nsrc/engine/platform/sound/c64/wave6581_PS_.cc\nsrc/engine/platform/sound/c64/wave6581_PST.cc\nsrc/engine/platform/sound/c64/wave6581_P_T.cc\nsrc/engine/platform/sound/c64/wave6581__ST.cc\nsrc/engine/platform/sound/c64/wave8580_PS_.cc\nsrc/engine/platform/sound/c64/wave8580_PST.cc\nsrc/engine/platform/sound/c64/wave8580_P_T.cc\nsrc/engine/platform/sound/c64/wave8580__ST.cc\n\nsrc/engine/platform/sound/c64_fp/array.cpp\nsrc/engine/platform/sound/c64_fp/Dac.cpp\nsrc/engine/platform/sound/c64_fp/EnvelopeGenerator.cpp\nsrc/engine/platform/sound/c64_fp/ExternalFilter.cpp\nsrc/engine/platform/sound/c64_fp/Filter6581.cpp\nsrc/engine/platform/sound/c64_fp/Filter8580.cpp\nsrc/engine/platform/sound/c64_fp/Filter.cpp\nsrc/engine/platform/sound/c64_fp/FilterModelConfig6581.cpp\nsrc/engine/platform/sound/c64_fp/FilterModelConfig8580.cpp\nsrc/engine/platform/sound/c64_fp/FilterModelConfig.cpp\nsrc/engine/platform/sound/c64_fp/Integrator6581.cpp\nsrc/engine/platform/sound/c64_fp/Integrator8580.cpp\nsrc/engine/platform/sound/c64_fp/OpAmp.cpp\nsrc/engine/platform/sound/c64_fp/SID.cpp\nsrc/engine/platform/sound/c64_fp/Spline.cpp\nsrc/engine/platform/sound/c64_fp/WaveformCalculator.cpp\nsrc/engine/platform/sound/c64_fp/WaveformGenerator.cpp\nsrc/engine/platform/sound/c64_fp/resample/SincResampler.cpp\n\nsrc/engine/platform/sound/c64_d/dsid.c\n\nsrc/engine/platform/sound/tia/AudioChannel.cpp\nsrc/engine/platform/sound/tia/Audio.cpp\n\nsrc/engine/platform/sound/ymfm/ymfm_adpcm.cpp\nsrc/engine/platform/sound/ymfm/ymfm_opl.cpp\nsrc/engine/platform/sound/ymfm/ymfm_opm.cpp\nsrc/engine/platform/sound/ymfm/ymfm_opn.cpp\nsrc/engine/platform/sound/ymfm/ymfm_opz.cpp\nsrc/engine/platform/sound/ymfm/ymfm_pcm.cpp\nsrc/engine/platform/sound/ymfm/ymfm_ssg.cpp\n\nsrc/engine/platform/sound/lynx/Mikey.cpp\n\nsrc/engine/platform/sound/pokey/mzpokeysnd.c\nsrc/engine/platform/sound/pokey/AltASAP.cpp\n\nsrc/engine/platform/sound/qsound.c\n\nsrc/engine/platform/sound/swan.cpp\n\nsrc/engine/platform/sound/su.cpp\n\nsrc/engine/platform/sound/vic20sound.c\n\nsrc/engine/platform/sound/ymz280b.cpp\n\nsrc/engine/platform/sound/vsu.cpp\n\nsrc/engine/platform/sound/t6w28/T6W28_Apu.cpp\n\nsrc/engine/platform/sound/rf5c68.cpp\n\nsrc/engine/platform/sound/oki/msm5232.cpp\nsrc/engine/platform/sound/oki/okim6258.cpp\n\nsrc/engine/platform/sound/snes/SPC_DSP.cpp\n\nsrc/engine/platform/sound/ga20/iremga20.cpp\n\nsrc/engine/platform/sound/sm8521.c\n\nsrc/engine/platform/sound/supervision.c\n\nsrc/engine/platform/sound/upd1771c.c\n\nsrc/engine/platform/sound/d65modified.c\n\nsrc/engine/platform/sound/ted-sound.c\n\nsrc/engine/platform/sound/c140_c219.c\n\nsrc/engine/platform/sound/dave/dave.cpp\n\nsrc/engine/platform/sound/nds.cpp\n\nsrc/engine/platform/sound/sid2/envelope.cc\nsrc/engine/platform/sound/sid2/filter.cc\nsrc/engine/platform/sound/sid2/sid.cc\nsrc/engine/platform/sound/sid2/version.cc\nsrc/engine/platform/sound/sid2/voice.cc\nsrc/engine/platform/sound/sid2/wave8580_PS_.cc\nsrc/engine/platform/sound/sid2/wave8580_PST.cc\nsrc/engine/platform/sound/sid2/wave8580_P_T.cc\nsrc/engine/platform/sound/sid2/wave8580__ST.cc\nsrc/engine/platform/sound/sid2/wave.cc\n\nsrc/engine/platform/sound/sid3.c\n\nsrc/engine/platform/oplAInterface.cpp\nsrc/engine/platform/ym2608Interface.cpp\nsrc/engine/platform/ym2610Interface.cpp\n\nsrc/engine/fileOps/fileOpsCommon.cpp\nsrc/engine/fileOps/dmf.cpp\nsrc/engine/fileOps/fc.cpp\nsrc/engine/fileOps/ftm.cpp\nsrc/engine/fileOps/fur.cpp\nsrc/engine/fileOps/it.cpp\nsrc/engine/fileOps/mod.cpp\nsrc/engine/fileOps/s3m.cpp\nsrc/engine/fileOps/text.cpp\nsrc/engine/fileOps/tfm.cpp\nsrc/engine/fileOps/xm.cpp\n\nsrc/engine/fileOps/p.cpp\nsrc/engine/fileOps/p86.cpp\nsrc/engine/fileOps/pdx.cpp\nsrc/engine/fileOps/ppc.cpp\nsrc/engine/fileOps/pps.cpp\nsrc/engine/fileOps/pvi.cpp\nsrc/engine/fileOps/pzi.cpp\n\nsrc/engine/blip_buf.c\nsrc/engine/brrUtils.c\nsrc/engine/safeReader.cpp\nsrc/engine/safeWriter.cpp\nsrc/engine/workPool.cpp\nsrc/engine/cmdStream.cpp\nsrc/engine/cmdStreamOps.cpp\nsrc/engine/config.cpp\nsrc/engine/configEngine.cpp\nsrc/engine/dispatchContainer.cpp\nsrc/engine/engine.cpp\nsrc/engine/export.cpp\nsrc/engine/exportDef.cpp\nsrc/engine/fileOpsIns.cpp\nsrc/engine/fileOpsSample.cpp\nsrc/engine/filter.cpp\nsrc/engine/instrument.cpp\nsrc/engine/macroInt.cpp\nsrc/engine/pattern.cpp\nsrc/engine/pitchTable.cpp\nsrc/engine/playback.cpp\nsrc/engine/sample.cpp\nsrc/engine/song.cpp\nsrc/engine/sysDef.cpp\nsrc/engine/wavetable.cpp\nsrc/engine/waveSynth.cpp\nsrc/engine/wavOps.cpp\nsrc/engine/vgmOps.cpp\n\nsrc/engine/platform/abstract.cpp\nsrc/engine/platform/genesis.cpp\nsrc/engine/platform/genesisext.cpp\nsrc/engine/platform/sms.cpp\nsrc/engine/platform/opll.cpp\nsrc/engine/platform/gb.cpp\nsrc/engine/platform/pce.cpp\nsrc/engine/platform/mmc5.cpp\nsrc/engine/platform/nes.cpp\nsrc/engine/platform/c64.cpp\nsrc/engine/platform/arcade.cpp\nsrc/engine/platform/tx81z.cpp\nsrc/engine/platform/ym2203.cpp\nsrc/engine/platform/ym2203ext.cpp\nsrc/engine/platform/ym2608.cpp\nsrc/engine/platform/ym2608ext.cpp\nsrc/engine/platform/ym2610.cpp\nsrc/engine/platform/ym2610ext.cpp\nsrc/engine/platform/ym2610b.cpp\nsrc/engine/platform/ym2610bext.cpp\nsrc/engine/platform/ay.cpp\nsrc/engine/platform/ay8930.cpp\nsrc/engine/platform/opl.cpp\nsrc/engine/platform/fds.cpp\nsrc/engine/platform/tia.cpp\nsrc/engine/platform/saa.cpp\nsrc/engine/platform/amiga.cpp\nsrc/engine/platform/msm5232.cpp\nsrc/engine/platform/msm6258.cpp\nsrc/engine/platform/msm6295.cpp\nsrc/engine/platform/pcspkr.cpp\nsrc/engine/platform/segapcm.cpp\nsrc/engine/platform/qsound.cpp\nsrc/engine/platform/x1_010.cpp\nsrc/engine/platform/pokey.cpp\nsrc/engine/platform/lynx.cpp\nsrc/engine/platform/su.cpp\nsrc/engine/platform/swan.cpp\nsrc/engine/platform/t6w28.cpp\nsrc/engine/platform/vb.cpp\nsrc/engine/platform/vera.cpp\nsrc/engine/platform/zxbeeper.cpp\nsrc/engine/platform/zxbeeperquadtone.cpp\nsrc/engine/platform/bubsyswsg.cpp\nsrc/engine/platform/n163.cpp\nsrc/engine/platform/pet.cpp\nsrc/engine/platform/pokemini.cpp\nsrc/engine/platform/pong.cpp\nsrc/engine/platform/vic20.cpp\nsrc/engine/platform/vrc6.cpp\nsrc/engine/platform/es5506.cpp\nsrc/engine/platform/scc.cpp\nsrc/engine/platform/ymz280b.cpp\nsrc/engine/platform/namcowsg.cpp\nsrc/engine/platform/rf5c68.cpp\nsrc/engine/platform/snes.cpp\nsrc/engine/platform/k007232.cpp\nsrc/engine/platform/ga20.cpp\nsrc/engine/platform/sm8521.cpp\nsrc/engine/platform/supervision.cpp\nsrc/engine/platform/upd1771c.cpp\nsrc/engine/platform/pv1000.cpp\nsrc/engine/platform/k053260.cpp\nsrc/engine/platform/ted.cpp\nsrc/engine/platform/c140.cpp\nsrc/engine/platform/esfm.cpp\nsrc/engine/platform/powernoise.cpp\nsrc/engine/platform/dave.cpp\nsrc/engine/platform/gbadma.cpp\nsrc/engine/platform/gbaminmod.cpp\nsrc/engine/platform/nds.cpp\nsrc/engine/platform/bifurcator.cpp\nsrc/engine/platform/sid2.cpp\nsrc/engine/platform/sid3.cpp\nsrc/engine/platform/pcmdac.cpp\nsrc/engine/platform/dummy.cpp\n\nsrc/engine/export/abstract.cpp\nsrc/engine/export/amigaValidation.cpp\nsrc/engine/export/sapr.cpp\nsrc/engine/export/tiuna.cpp\nsrc/engine/export/zsm.cpp\n\nsrc/engine/effect/abstract.cpp\nsrc/engine/effect/dummy.cpp\n)\n\nif (USE_SNDFILE)\n  list(APPEND ENGINE_SOURCES src/engine/sfWrapper.cpp)\nendif()\n\nif (WIN32)\n  list(APPEND ENGINE_SOURCES src/utfutils.cpp)\n  list(APPEND ENGINE_SOURCES src/engine/winStuff.cpp)\n  list(APPEND ENGINE_SOURCES res/furnace.rc)\nendif()\n\nif (APPLE)\n  if (CMAKE_OSX_DEPLOYMENT_TARGET VERSION_LESS 10.12)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS extern/macports-legacy-support/include)\n    list(APPEND ENGINE_SOURCES extern/macports-legacy-support/src/time.c)\n  endif()\nendif()\n\nset(CLI_SOURCES\nsrc/cli/cli.cpp\n)\n\nset(GUI_SOURCES\nextern/imgui_patched/imgui.cpp\nextern/imgui_patched/imgui_draw.cpp\nextern/imgui_patched/imgui_tables.cpp\nextern/imgui_patched/imgui_widgets.cpp\nextern/imgui_patched/backends/imgui_impl_sdl2.cpp\nextern/imgui_software_renderer/imgui_sw.cpp\nextern/imgui_patched/misc/cpp/imgui_stdlib.cpp\nextern/igfd/ImGuiFileDialog.cpp\n\nsrc/gui/plot_nolerp.cpp\n\nsrc/gui/render.cpp\nsrc/gui/render/abstract.cpp\nsrc/gui/render/renderSoftware.cpp\n\nsrc/gui/font_exo.cpp\nsrc/gui/font_liberationSans.cpp\nsrc/gui/font_mononoki.cpp\nsrc/gui/font_plexMono.cpp\nsrc/gui/font_plexSans.cpp\nsrc/gui/font_plexSansJP.cpp\nsrc/gui/font_plexSansKR.cpp\nsrc/gui/font_proggyClean.cpp\nsrc/gui/font_ptMono.cpp\nsrc/gui/font_unifont.cpp\nsrc/gui/font_icon.cpp\nsrc/gui/font_furicon.cpp\nsrc/gui/fonts.cpp\nsrc/gui/fontzlib.cpp\n\nsrc/gui/image_icon.cpp\nsrc/gui/image_talogo.cpp\nsrc/gui/image_tachip.cpp\nsrc/gui/image_logo.cpp\nsrc/gui/image_wordmark.cpp\nsrc/gui/image_introbg.cpp\nsrc/gui/image_pat.cpp\nsrc/gui/image.cpp\n\nsrc/gui/debug.cpp\nsrc/gui/fileDialog.cpp\n\nsrc/gui/intConst.cpp\nsrc/gui/guiConst.cpp\n\nsrc/gui/introTune.cpp\n\nsrc/gui/about.cpp\nsrc/gui/channels.cpp\nsrc/gui/chanOsc.cpp\nsrc/gui/clock.cpp\nsrc/gui/compatFlags.cpp\nsrc/gui/csPlayer.cpp\nsrc/gui/cursor.cpp\nsrc/gui/dataList.cpp\nsrc/gui/debugWindow.cpp\nsrc/gui/doAction.cpp\nsrc/gui/editing.cpp\nsrc/gui/editControls.cpp\nsrc/gui/effectList.cpp\nsrc/gui/exportOptions.cpp\nsrc/gui/findReplace.cpp\nsrc/gui/fmPreview.cpp\nsrc/gui/gradient.cpp\nsrc/gui/grooves.cpp\nsrc/gui/insEdit.cpp\nsrc/gui/intro.cpp\nsrc/gui/log.cpp\nsrc/gui/memory.cpp\nsrc/gui/mixer.cpp\nsrc/gui/midiMap.cpp\nsrc/gui/newSong.cpp\nsrc/gui/commandPalette.cpp\nsrc/gui/orders.cpp\nsrc/gui/osc.cpp\nsrc/gui/patManager.cpp\nsrc/gui/pattern.cpp\nsrc/gui/piano.cpp\nsrc/gui/presets.cpp\nsrc/gui/regView.cpp\nsrc/gui/sampleEdit.cpp\nsrc/gui/scaling.cpp\nsrc/gui/settings.cpp\nsrc/gui/songInfo.cpp\nsrc/gui/songNotes.cpp\nsrc/gui/speed.cpp\nsrc/gui/spoiler.cpp\nsrc/gui/stats.cpp\nsrc/gui/subSongs.cpp\nsrc/gui/sysConf.cpp\nsrc/gui/sysEx.cpp\nsrc/gui/sysManager.cpp\nsrc/gui/sysMiscInfo.cpp\nsrc/gui/sysPicker.cpp\nsrc/gui/tutorial.cpp\nsrc/gui/userPresets.cpp\nsrc/gui/util.cpp\nsrc/gui/waveEdit.cpp\nsrc/gui/volMeter.cpp\nsrc/gui/xyOsc.cpp\nsrc/gui/gui.cpp\n)\n\nif (WIN32 AND NOT SUPPORT_XP)\n  list(APPEND GUI_SOURCES extern/nfd-modified/src/nfd_common.cpp)\n  list(APPEND GUI_SOURCES extern/nfd-modified/src/nfd_win.cpp)\nendif()\n\nif (USE_FREETYPE)\n  list(APPEND GUI_SOURCES extern/imgui_patched/misc/freetype/imgui_freetype.cpp)\nendif()\n\nif (APPLE)\n  list(APPEND GUI_SOURCES extern/nfd-modified/src/nfd_common.cpp)\n  list(APPEND GUI_SOURCES src/gui/macstuff.m)\n  list(APPEND GUI_SOURCES extern/nfd-modified/src/nfd_cocoa.mm)\nendif()\n\nif (WITH_RENDER_SDL)\n  list(APPEND GUI_SOURCES src/gui/render/renderSDL.cpp)\n  list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_sdlrenderer2.cpp)\n  list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_SDL)\n  message(STATUS \"UI render backend: SDL_Renderer\")\nendif()\n\nif (WITH_RENDER_OPENGL)\n  list(APPEND GUI_SOURCES src/gui/render/renderGL.cpp)\n  list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_opengl3.cpp)\n  list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_GL)\n  if (USE_GLES)\n    list(APPEND DEPENDENCIES_DEFINES USE_GLES)\n    list(APPEND DEPENDENCIES_DEFINES IMGUI_IMPL_OPENGL_ES2)\n  endif()\n  if (WIN32)\n    list(APPEND DEPENDENCIES_LIBRARIES opengl32)\n  elseif(APPLE)\n    list(APPEND DEPENDENCIES_LIBRARIES \"-framework OpenGL\")\n  elseif(USE_GLES)\n    list(APPEND DEPENDENCIES_LIBRARIES GLESv2)\n  else()\n    list(APPEND DEPENDENCIES_LIBRARIES GL)\n  endif()\n  if (USE_GLES)\n    message(STATUS \"UI render backend: OpenGL ES 2.0\")\n  else()\n    message(STATUS \"UI render backend: OpenGL 3.0/2.0\")\n  endif()\nendif()\n\nif (WITH_RENDER_OPENGL1)\n  list(APPEND GUI_SOURCES src/gui/render/renderGL1.cpp)\n  list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_opengl2.cpp)\n  list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_GL1)\n  if (NOT WITH_RENDER_OPENGL)\n    if (WIN32)\n      list(APPEND DEPENDENCIES_LIBRARIES opengl32)\n    else()\n      list(APPEND DEPENDENCIES_LIBRARIES GL)\n    endif()\n  endif()\n  message(STATUS \"UI render backend: OpenGL 1.1\")\nendif()\n\nif (WITH_RENDER_DX11)\n  if (WIN32)\n    if (SUPPORT_XP)\n      message(FATAL_ERROR \"SUPPORT_XP is on. cannot enable DirectX 11 backend.\")\n    else()\n      list(APPEND GUI_SOURCES src/gui/render/renderDX11.cpp)\n      list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_dx11.cpp)\n      list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_DX11)\n      list(APPEND DEPENDENCIES_LIBRARIES d3d11 dxgi)\n      message(STATUS \"UI render backend: DirectX 11\")\n    endif()\n  else()\n    message(FATAL_ERROR \"DirectX 11 render backend only for Windows!\")\n  endif()\nendif()\n\nif (WITH_RENDER_DX9)\n  if (WIN32)\n    list(APPEND GUI_SOURCES src/gui/render/renderDX9.cpp)\n    list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_dx9.cpp)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_DX9)\n    list(APPEND DEPENDENCIES_LIBRARIES d3d9)\n    message(STATUS \"UI render backend: DirectX 9\")\n  else()\n    message(FATAL_ERROR \"DirectX 9 render backend only for Windows!\")\n  endif()\nendif()\n\nif (WITH_RENDER_METAL)\n  if (APPLE)\n    list(APPEND GUI_SOURCES src/gui/render/renderMetal.mm)\n    list(APPEND GUI_SOURCES extern/imgui_patched/backends/imgui_impl_metal.mm)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_RENDER_METAL)\n    list(APPEND DEPENDENCIES_LIBRARIES \"-framework Metal\")\n    list(APPEND DEPENDENCIES_LIBRARIES \"-framework MetalKit\")\n    message(STATUS \"UI render backend: Metal\")\n  else()\n    message(FATAL_ERROR \"Metal render backend only for Apple operating systems!\")\n  endif()\nendif()\n\nif (NOT WIN32 AND NOT APPLE)\n  CHECK_INCLUDE_FILE(sys/io.h SYS_IO_FOUND)\n  CHECK_INCLUDE_FILE(linux/input.h LINUX_INPUT_FOUND)\n  CHECK_INCLUDE_FILE(linux/kd.h LINUX_KD_FOUND)\n  if (SYS_IO_FOUND)\n    try_compile(HAVE_INOUTB ${CMAKE_BINARY_DIR}/check SOURCES ${CMAKE_SOURCE_DIR}/src/check/check_sysIO.c)\n    if (HAVE_INOUTB)\n      list(APPEND DEPENDENCIES_DEFINES HAVE_SYS_IO)\n      message(STATUS \"PC speaker output: outb()\")\n    else()\n      message(STATUS \"sys/io.h found but inb()/outb() not present\")\n    endif()\n  endif()\n  if (LINUX_INPUT_FOUND)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_LINUX_INPUT)\n    message(STATUS \"PC speaker output: evdev\")\n  endif()\n  if (LINUX_KD_FOUND)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_LINUX_KD)\n    message(STATUS \"PC speaker output: KIOCSOUND\")\n  endif()\nendif()\n\nif (NOT WIN32)\n  try_compile(HAVE_DIRENT_TYPE ${CMAKE_BINARY_DIR}/check SOURCES ${CMAKE_SOURCE_DIR}/src/check/check_dirent_type.c)\n  if (HAVE_DIRENT_TYPE)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_DIRENT_TYPE)\n  endif()\nendif()\n\nif (WITH_LOCALE)\n  if (HAVE_SETLOCALE)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_SETLOCALE)\n    message(STATUS \"setlocale() found\")\n  else()\n    if (NOT USE_MOMO)\n      message(FATAL_ERROR \"setlocale() is not defined! This means the C library in your system does not support locale at all. Try enabling USE_MOMO.\")\n    else()\n      message(STATUS \"setlocale() is not defined\")\n    endif()\n  endif()\n  if (USE_MOMO)\n    list(APPEND ENGINE_SOURCES src/momo/momo.c)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_LOCALE)\n    list(APPEND DEPENDENCIES_DEFINES HAVE_MOMO)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS src/momo)\n    message(STATUS \"Using libintl (Momo)\")\n  else()\n    if (\"${CMAKE_VERSION}\" VERSION_LESS \"3.2\")\n      message(FATAL_ERROR \"CMake 3.2 or later required for locale support.\")\n    else()\n      if (NOT Intl_FOUND)\n        message(FATAL_ERROR \"Could not find libintl! Try enabling USE_MOMO.\")\n      endif()\n      list(APPEND DEPENDENCIES_DEFINES HAVE_LOCALE)\n      list(APPEND DEPENDENCIES_DEFINES GNULIB_overrides_sprintf)\n      list(APPEND DEPENDENCIES_INCLUDE_DIRS ${Intl_INCLUDE_DIRS})\n      list(APPEND DEPENDENCIES_LIBRARIES ${Intl_LIBRARIES})\n      message(STATUS \"Using libintl (system)\")\n    endif()\n  endif()\nendif()\n\nset(USED_SOURCES ${ENGINE_SOURCES} ${AUDIO_SOURCES} ${CLI_SOURCES} src/main.cpp)\n\nif (USE_BACKWARD)\n  list(APPEND USED_SOURCES src/backtrace.cpp)\n  if (WIN32)\n    if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n      include(CheckCXXCompilerFlag)\n      check_cxx_compiler_flag(-gcodeview GCC_CODEVIEW)\n      if (GCC_CODEVIEW)\n        set(CMAKE_EXE_LINKER_FLAGS \"-Wl,--pdb= \")\n        add_compile_options(-gcodeview)\n        message(STATUS \"Enabling -gcodeview flag for backward-cpp.\")\n      else()\n        message(WARNING \"Could not enable -gcodeview! backward-cpp will not work.\")\n      endif()\n      list(APPEND DEPENDENCIES_LIBRARIES dbghelp psapi)\n    endif()\n  endif()\n  find_library(EXECINFO_IS_LIBRARY execinfo)\n  if (EXECINFO_IS_LIBRARY)\n    list(APPEND DEPENDENCIES_LIBRARIES execinfo)\n  endif()\n  message(STATUS \"Using backward-cpp\")\nelse()\n  message(STATUS \"Not using backward-cpp\")\nendif()\n\nif (BUILD_GUI)\n  list(APPEND USED_SOURCES ${GUI_SOURCES})\n  list(APPEND DEPENDENCIES_INCLUDE_DIRS\n    extern/imgui_patched\n    extern/imgui_patched/backends\n    extern/imgui_software_renderer\n    extern/igfd\n  )\n  if (WIN32 OR APPLE)\n    list(APPEND DEPENDENCIES_INCLUDE_DIRS\n      extern/nfd-modified/src/include\n    )\n  endif()\n  list(APPEND DEPENDENCIES_DEFINES HAVE_GUI)\n  message(STATUS \"Building GUI\")\nelse()\n  message(STATUS \"Building headless\")\nendif()\n\nif (WIN32)\n  list(APPEND DEPENDENCIES_LIBRARIES shlwapi)\n  if (NOT MSVC)\n    list(APPEND DEPENDENCIES_LIBRARIES -static)\n  endif()\nelseif (APPLE)\n  find_library(COCOA Cocoa REQUIRED)\n  list(APPEND DEPENDENCIES_LIBRARIES ${COCOA})\nelse()\n  list(APPEND DEPENDENCIES_LIBRARIES ${CMAKE_DL_LIBS})\nendif()\n\nif (NOT MSVC)\n  set(WARNING_FLAGS -Wall -Wextra -Wno-unused-parameter)\n  if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0.0)\n      # nothing\n    else()\n      list(APPEND WARNING_FLAGS -Wno-cast-function-type)\n    endif()\n  endif()\n  if (WARNINGS_ARE_ERRORS)\n    list(APPEND WARNING_FLAGS -Werror)\n  endif()\nelse()\n  add_compile_options(\"/utf-8\")\n  set(WARNING_FLAGS /W2 /D_CRT_SECURE_NO_WARNINGS)\n  list(APPEND WARNING_FLAGS\n    /wd4244 # implicit type conversions\n    /wd4305 # truncations\n    /wd4309 # truncations of constant values\n  )\n  if (WARNINGS_ARE_ERRORS)\n    list(APPEND WARNING_FLAGS /WX)\n  endif()\nendif()\n# Nicer but cannot be narrowed down to just C++\n# target_compile_options(furnace PRIVATE ${WARNING_FLAGS})\nstring(REPLACE \";\" \" \" WARNING_FLAGS_STRING \"${WARNING_FLAGS}\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${WARNING_FLAGS_STRING}\")\nif (WARNINGS_ARE_ERRORS)\n  message(STATUS\n    \"Treating all warnings in furnace's C++ code as errors! \"\n    \"Please report any errors you encounter on the bug tracker.\"\n  )\nendif()\n\nif (NOT ANDROID OR TERMUX)\n  if (NOT WIN32 AND NOT APPLE)\n    if (NOT DONT_HAVE_GIT)\n      add_custom_command(OUTPUT furnace.appdata.xml COMMAND res/make-appdata.sh ARGS ${CMAKE_SOURCE_DIR}/res/furnace.appdata.xml.in ${CMAKE_BINARY_DIR}/furnace.appdata.xml DEPENDS res/furnace.appdata.xml.in WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n      list(APPEND USED_SOURCES furnace.appdata.xml)\n    endif()\n  endif()\nendif()\n\nif (WIN32 AND CONSOLE_SUBSYSTEM)\n  list(APPEND DEPENDENCIES_DEFINES \"TA_SUBSYSTEM_CONSOLE\")\nendif()\n\nif (MAKE_BUNDLE)\n  set(FURNACE Furnace)\nelse()\n  set(FURNACE furnace)\nendif()\n\nif(ANDROID AND NOT TERMUX)\n  add_library(${FURNACE} SHARED ${USED_SOURCES})\nelseif(WIN32 AND NOT CONSOLE_SUBSYSTEM)\n  add_executable(${FURNACE} WIN32 ${USED_SOURCES})\nelse()\n  add_executable(${FURNACE} ${USED_SOURCES})\nendif()\n\nif (MAKE_BUNDLE AND NOT FORCE_APPLE_BIN)\n  set_target_properties(${FURNACE} PROPERTIES\n    MACOSX_BUNDLE True\n    MACOSX_BUNDLE_INFO_PLIST ${CMAKE_SOURCE_DIR}/res/Info.plist)\nendif()\n\ntarget_include_directories(${FURNACE} SYSTEM PRIVATE ${DEPENDENCIES_INCLUDE_DIRS})\ntarget_compile_options(${FURNACE} PRIVATE ${DEPENDENCIES_COMPILE_OPTIONS})\ntarget_link_libraries(${FURNACE} PRIVATE ${DEPENDENCIES_LIBRARIES})\nif (PKG_CONFIG_FOUND AND (SYSTEM_FMT OR SYSTEM_LIBSNDFILE OR SYSTEM_ZLIB OR SYSTEM_SDL2 OR SYSTEM_RTMIDI OR WITH_JACK))\n  if (\"${CMAKE_VERSION}\" VERSION_LESS \"3.13\")\n    message(WARNING\n      \"CMake version is <3.13, using old pkg-config LDFLAGS. \"\n      \"You may encounter linking problems with these!\"\n    )\n    target_link_libraries(${FURNACE} PRIVATE ${DEPENDENCIES_LEGACY_LDFLAGS})\n  else()\n    target_link_directories(${FURNACE} PRIVATE ${DEPENDENCIES_LIBRARY_DIRS})\n    target_link_options(${FURNACE} PRIVATE ${DEPENDENCIES_LINK_OPTIONS})\n  endif()\nendif()\n\n# why 3.16..... why not 3.0?\nif (NOT \"${CMAKE_VERSION}\" VERSION_LESS \"3.16\")\n  if (BUILD_GUI)\n  target_precompile_headers(${FURNACE} PUBLIC\n    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/src/pch.h>\n    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/extern/imgui_patched/imgui.h>\n    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/extern/imgui_patched/imgui_internal.h>\n  )\n  else()\n    target_precompile_headers(${FURNACE} PUBLIC\n      $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/src/pch.h>\n    )\n  endif()\nendif()\n\nif (NOT ANDROID OR TERMUX)\n  if (NOT WIN32 AND NOT APPLE)\n    include(GNUInstallDirs)\n    install(TARGETS ${FURNACE} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n    install(FILES res/furnace.desktop DESTINATION ${CMAKE_INSTALL_DATADIR}/applications)\n    install(FILES res/mime.xml RENAME furnace.xml DESTINATION ${CMAKE_INSTALL_DATADIR}/mime/packages)\n    if (NOT DONT_HAVE_GIT)\n      install(FILES ${CMAKE_BINARY_DIR}/furnace.appdata.xml DESTINATION ${CMAKE_INSTALL_DATADIR}/metainfo)\n    endif()\n    install(DIRECTORY doc DESTINATION ${CMAKE_INSTALL_DOCDIR})\n    install(DIRECTORY papers DESTINATION ${CMAKE_INSTALL_DOCDIR}/other)\n    install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_DATADIR}/licenses/furnace)\n    list(APPEND DEPENDENCIES_DEFINES LOCALE_DIR=\"${CMAKE_INSTALL_FULL_LOCALEDIR}\")\n    install(DIRECTORY po/locale/ DESTINATION ${CMAKE_INSTALL_LOCALEDIR})\n    if (WITH_DEMOS OR WITH_INSTRUMENTS OR WITH_WAVETABLES)\n      set(FURNACE_DATADIR ${CMAKE_INSTALL_FULL_DATADIR}/furnace)\n      if (WITH_DEMOS)\n        install(DIRECTORY demos DESTINATION ${FURNACE_DATADIR})\n      endif()\n      if (WITH_INSTRUMENTS)\n        install(DIRECTORY instruments DESTINATION ${FURNACE_DATADIR})\n      endif()\n      if (WITH_WAVETABLES)\n        install(DIRECTORY wavetables DESTINATION ${FURNACE_DATADIR})\n      endif()\n      list(APPEND DEPENDENCIES_DEFINES FURNACE_DATADIR=\"${FURNACE_DATADIR}\")\n      if (SHOW_OPEN_ASSETS_MENU_ENTRY)\n        list(APPEND DEPENDENCIES_DEFINES SHOW_OPEN_ASSETS_MENU_ENTRY)\n      endif()\n    endif()\n    foreach(num 16 32 64 128 256 512)\n      set(res ${num}x${num})\n      install(FILES res/icon.iconset/icon_${res}.png RENAME furnace.png DESTINATION ${CMAKE_INSTALL_DATADIR}/icons/hicolor/${res}/apps)\n      install(FILES res/icon.iconset/icon_${res}@2x.png RENAME furnace.png DESTINATION ${CMAKE_INSTALL_DATADIR}/icons/hicolor/${res}@2/apps)\n    endforeach()\n    install(FILES res/logo.png RENAME furnace.png DESTINATION ${CMAKE_INSTALL_DATADIR}/icons/hicolor/1024x1024/apps)\n  else()\n    if (MAKE_BUNDLE)\n      install(TARGETS ${FURNACE} BUNDLE DESTINATION Applications RESOURCE DESTINATION Resources)\n    else()\n      install(TARGETS ${FURNACE} RUNTIME DESTINATION bin)\n    endif()\n  endif()\nendif()\n\ntarget_compile_definitions(${FURNACE} PRIVATE ${DEPENDENCIES_DEFINES})\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.484375,
          "content": "# Contributing\n\ncontributions to Furnace are welcome!\n\n# Issue reports\n\nif you find an issue with Furnace, see the Issues section.\n\n# Suggestions and other types of discussions\n\nsee the Discussions section.\n\n**DO NOT USE THE ISSUES SECTION FOR THESE - it is only for ISSUES.**\n\n# Other\n\n## Getting ready\n\nlog into your Github account, and click the Fork button in the header of the project's page.\n\nthen open a terminal and clone your fork:\n\n```\ngit clone git@github.com:USERNAME/furnace.git\n```\n\n(replace `USERNAME` with your username)\n\n## Working\n\n### Code\n\nbug fixes, improvements and several other things accepted.\n\nthe coding style is described here:\n\n- indentation: two spaces. **strictly** spaces. do NOT use tabs.\n- modified 1TBS style:\n  - no spaces in function calls\n  - spaces between arguments in function declarations\n  - no spaces in operations except for `||` and `&&`\n  - no space between variable name and assignment\n  - space between macro in string literals\n  - space after comment delimiter\n  - C++ pointer style: `void* variable` rather than `void *variable`\n  - indent switch cases\n  - preprocessor directives not intended\n  - if macro comprises more than one line, indent\n  - no new line after `template<>`\n- do not use `_t` types, except for 64-bit integers and `size_t`.\n- prefer built-in types:\n  - `bool`\n  - `signed char` or `unsigned char` are 8-bit\n    - when the type is `char`, **always** specify whether it is signed or not.\n    - unspecified `char` is signed on x86 and unsigned on ARM, so yeah.\n    - the only situation in where unspecified `char` is allowed is for C strings (`const char*`).\n  - `short` or `unsigned short` are 16-bit\n  - `int` or `unsigned int` are 32-bit\n  - `float` is 32-bit\n  - `double` is 64-bit\n  - `long long int` or `unsigned long long int` are 64-bit\n    - avoid using 64-bit numbers as I still build for 32-bit systems.\n    - two `long`s are required to make Windows happy.\n    - prefer using `int64_t` or `uint64_t` for this specific case.\n  - `size_t` are 32-bit or 64-bit, depending on architecture.\n- in float/double operations, always use decimal and `f` if single-precision.\n  - e.g. `1.0f` or `1.0` instead of `1`.\n- prefer `NULL` over `nullptr` or any other proprietary null.\n- only use `auto` if needed.\n- avoid using `goto` unless absolutely required.\n- use `String` for `std::string` (this is typedef'd in ta-utils.h).\n- prefer using operator for String (std::string) comparisons (a==\"\").\n- if you have to work with C strings, only use safe C string operations:\n  - snprintf\n  - strncpy\n  - strncat\n  - any other operation which specifies a limit\n\nsome files (particularly the ones in `src/engine/platform/sound` and `extern/`) don't follow this style.\n\nyou don't have to follow this style. I will fix it after I accept your contribution.\n\nadditional guidelines:\n\n- in general **strongly** avoid breaking compatibility.\n  - do not touch loadFur/saveFur unless you know what you're doing!\n    - new fields must be at the end of each block to ensure forward compatibility\n    - likewise, the instrument read/write functions in DivInstrument have to be handled carefully\n    - any change to the format requires a version bump (see `src/engine/engine.h`).\n    - do not bump the version number under any circumstances!\n  - if you are making major changes to the playback routine, make sure to test with older songs to ensure nothing breaks.\n    - I will run a test suite to make sure this is the case.\n    - if something breaks, you might want to add a compatibility flag (this requires changing the format though).\n- do not use `#pragma once`.\n- do not memcmp() structs.\n- on a switch block, **always** put `default` last and not in any other position.\n  - I have fear of some C/C++ compilers ignoring the rest of cases upon hitting default.\n\n### Do NOT Force-Push after submitting Pull Request\n\nif you do so, your pull request will be closed.\n\n### Demo Songs\n\njust put your demo song in `demos/`! be noted there are some guidelines:\n\n- avoid Nintendo song covers.\n- avoid big label song covers.\n- low effort compositions/covers may not be accepted at all.\n- the following systems are not acceptable:\n  - YMU759/MA-2: exists only for compatibility.\n  - Pong: it is a joke system.\n- the song shall be in Furnace file format.\n\n## Finishing\n\nafter you've done your modifications, commit the changes and push.\nthen open your fork on GitHub and send a pull request.\n\n## I don't know how to use Git but I want to contribute with a demo song\n\nyou can also contact me directly! [find me here.](https://tildearrow.org/?p=contact)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.87890625,
          "content": "# Furnace (chiptune tracker)\n\n![screenshot](papers/screenshot3.png)\n\nthe biggest multi-system chiptune tracker ever made!\n\n[downloads](#downloads) | [discussion/help](#quick-references) | [developer info](#developer-info) | [Unix/Linux packages](#packages)\n\n---\n## downloads\n\ncheck out the [Releases](https://github.com/tildearrow/furnace/releases) page. available for Windows, macOS and Linux.\n\nfor other operating systems, you may [build the source](#developer-info).\n\n[see here](https://nightly.link/tildearrow/furnace/workflows/build/master) for the latest unstable build.\n\n## features\n\n- a large selection of sound chips:\n  - Yamaha FM chips:\n    - YM2151 (OPM)\n    - YM2203 (OPN)\n    - YM2413 (OPLL)\n    - YM2414 (OPZ) used in Yamaha TX81Z\n    - YM2608 (OPNA) used in PC-98\n    - YM2610 (OPNB) used in Neo Geo\n    - YM2610B (OPNB2)\n    - YM2612 (OPN2) used in Sega Genesis and FM Towns\n    - YM3526 (OPL) used in C64 Sound Expander\n    - YM3812 (OPL2)\n    - YMF262 (OPL3) with full 4-op support!\n    - Y8950 (OPL with ADPCM)\n  - ESS ESFM (like OPL3 but with more features)\n  - square wave chips:\n    - AY-3-8910/YM2149(F) used in several computers and game consoles\n    - Commodore VIC used in the VIC-20\n    - Microchip AY8930\n    - TI SN76489 used in Sega Master System, BBC Micro, and many others\n    - PC Speaker\n    - Philips SAA1099 used in SAM Coupé\n    - OKI MSM5232 used in some arcade boards\n  - sample chips:\n    - SNES\n    - Amiga\n    - SegaPCM - all 16 channels\n    - Capcom QSound\n    - Yamaha YMZ280B (PCMD8)\n    - Ricoh RF5C68 used in Sega CD and FM Towns\n    - OKI MSM6258 and MSM6295\n    - Konami K007232\n    - Konami K053260\n    - Irem GA20\n    - Ensoniq ES5506\n    - Namco C140\n    - Namco C219\n  - wavetable chips:\n    - HuC6280 used in PC Engine\n    - Konami Bubble System WSG\n    - Konami SCC/SCC+\n    - Namco arcade chips (WSG/C15/C30)\n    - WonderSwan\n    - Seta/Allumer X1-010\n    - Sharp SM8521 used in Tiger Game.com\n  - NES (Ricoh 2A03/2A07), with additional expansion sound support:\n    - Konami VRC6\n    - Konami VRC7\n    - MMC5\n    - Famicom Disk System\n    - Sunsoft 5B\n    - Namco 163\n    - Family Noraebang (OPLL)\n  - SID (6581/8580) used in Commodore 64\n  - Mikey used in Atari Lynx\n  - ZX Spectrum beeper\n    - SFX-like engine\n    - QuadTone engine\n  - Pokémon Mini\n  - Commodore PET\n  - TED used in Commodore Plus/4\n  - Casio PV-1000\n  - TIA used in Atari 2600\n    - including software tuning engine (TIunA)\n  - POKEY used in Atari 8-bit computers\n  - **Game Boy**\n    - including SOFTWARE ENVELOPES (zombie mode)\n  - Virtual Boy\n  - Game Boy Advance\n    - DMA (direct memory access) two channel mode\n    - MinMod software driver by Natt Akuma\n  - Nintendo DS\n  - modern/fantasy:\n    - Commander X16 VERA\n    - tildearrow Sound Unit\n    - PowerNoise\n    - Bifurcator\n    - SID2\n    - Generic PCM DAC\n- mix and match sound chips!\n  - over 200 ready to use presets from computers, game consoles and arcade boards...\n  - ...or create your own presets - up to 32 chips or a total of 128 channels!\n- DefleMask compatibility\n  - loads .dmf modules from all versions (beta 1 to 1.1.9)\n  - saves .dmf modules - both modern and legacy\n    - Furnace doubles as a module downgrader\n  - loads/saves .dmp instruments and .dmw wavetables as well\n  - clean-room design (guesswork and ABX tests only, no decompilation involved)\n  - some bug/quirk implementation for increased playback accuracy through compatibility flags\n- VGM export\n- ZSM export for Commander X16\n- TIunA export for Atari 2600\n- modular layout that you may adapt to your needs\n- audio file export - entire song, per chip or per channel\n- quality emulation cores (Nuked, MAME, SameBoy, Mednafen PCE, NSFplay, puNES, reSID, Stella, SAASound, vgsound_emu and ymfm)\n- wavetable synthesizer\n  - available on wavetable chips\n  - create complex sounds with ease - provide up to two wavetables, select an effect and let go!\n- MIDI input support\n- additional features:\n  - FM macros!\n  - negative octaves\n  - advanced arp macros\n  - arbitrary pitch samples\n  - sample loop points\n  - SSG envelopes and ADPCM-B in Neo Geo\n  - pitchable OPLL drums\n  - full duty/cutoff range in C64\n  - full 16-channel SegaPCM\n  - ability to change tempo mid-song\n  - decimal tempo/tick rate\n  - multiple sub-songs in a module\n  - per-channel oscilloscope with waveform centering\n  - built-in sample editor\n  - chip mixing settings\n  - built-in visualizer in pattern view\n- open-source under GPLv2 or later.\n\n---\n# quick references\n\n- **help**: check out the [documentation](doc/README.md), [quick start guide](doc/1-intro/quickstart.md), and [frequently asked questions (FAQ)](doc/1-intro/faq.md).\n- **discussion**: see the [Discussions](https://github.com/tildearrow/furnace/discussions) section, or the [Discord](https://discord.gg/QhA26dXD23).\n\n## packages\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/furnace.svg)](https://repology.org/project/furnace/versions)\n\nsome people have provided packages for Unix/Unix-like distributions. here's a list.\n\n- **Flatpak**: yes! Furnace is now available on [Flathub](https://flathub.org/apps/org.tildearrow.furnace) thanks to ColinKinloch.\n\n- **Arch Linux**: [furnace](https://archlinux.org/packages/extra/x86_64/furnace/) is in the official repositories.\n- **Chimera Linux**: [furnace](https://pkgs.chimera-linux.org/package/current/contrib/x86_64/furnace) is in the contrib repository.\n- **FreeBSD**: [a package in ports](https://www.freshports.org/audio/furnace/) is available courtesy of ehaupt.\n- **Nix**: [package](https://search.nixos.org/packages?channel=unstable&show=furnace&from=0&size=50&sort=relevance&type=packages&query=furnace) thanks to OPNA2608.\n- **openSUSE**: [a package](https://software.opensuse.org/package/furnace) is available, courtesy of fpesari.\n- **Void Linux**: [furnace](https://github.com/void-linux/void-packages/tree/master/srcpkgs/furnace) is available in the official repository.\n\n---\n# developer info\n\n[![Build furnace](https://github.com/tildearrow/furnace/actions/workflows/build.yml/badge.svg)](https://github.com/tildearrow/furnace/actions/workflows/build.yml)\n\nif you can't download these artifacts (because GitHub requires you to be logged in), [go here](https://nightly.link/tildearrow/furnace/workflows/build/master) instead.\n\n**NOTE: do not download the project's source as a .zip or .tar.gz as these do not include the project's submodules which are necessary to proceed with building. please instead use Git as shown below.**\n\n## dependencies\n\n- CMake\n- Git (for cloning the repository)\n- JACK (optional, macOS/Linux only)\n- a C/C++ compiler (e.g. Visual Studio or MinGW on Windows, Xcode (the command-line tools are enough) on macOS or GCC on Linux)\n\nif building under Windows or macOS, no additional dependencies are required.\notherwise, you may also need the following:\n\n- libpulse\n- libx11\n- libasound\n- libGL\n- any other libraries which may be used by SDL\n\nsome Linux distributions (e.g. Ubuntu or openSUSE) will require you to install the `-dev` versions of these.\n\nhaving libintl is recommended for locale support, but if it isn't present, Furnace will use its own implementation.\n\n## getting the source\n\ntype the following on a terminal/console: (make sure Git is installed)\n\n```\ngit clone --recursive https://github.com/tildearrow/furnace.git\ncd furnace\n```\n\n(the `--recursive` parameter ensures submodules are fetched as well)\n\n## compilation\n\nyour typical CMake project.\n\n### Windows using MSVC\n\nas of now tildearrow uses MinGW for Windows builds, but thanks to OPNA2608 this works again!\n\nfrom the developer tools command prompt:\n\n```\nmkdir build\ncd build\ncmake ..\n```\n\nthen open the solution file in Visual Studio and build.\n\nalternatively, do:\n\n```\nmsbuild ALL_BUILD.vcxproj\n```\n\n### Windows using MinGW\n\nsetting up MinGW is a bit more complicated. two benefits are a faster, hotter Furnace, and Windows XP support.\n\nhowever, one huge drawback is lack of backtrace support, so you'll have to use gdb when diagnosing a crash.\n\n```\nmkdir build\ncd build\ncmake -G \"MinGW Makefiles\" ..\nmingw32-make\n```\n\nyou may use \"MSYS Makefiles\" instead, depending on how you installed MinGW.\n\n### macOS, Linux and other Unix/Unix-like\n\n```\nmkdir build\ncd build\ncmake ..\nmake\n```\n\non macOS you may do the following instead:\n\n```\nmkdir build\ncd build\ncmake -G Xcode ..\n```\n\n...and then load the project on Xcode or type `xcodebuild`.\n\n### CMake options\n\nTo add an option from the command-line: `-D<NAME>=<VALUE>`  \nExample: `cmake -DBUILD_GUI=OFF -DWARNINGS_ARE_ERRORS=ON ..`\n\nAvailable options:\n\n| Name                          |Default| Description\n| :---------------------------: | :---: | ---------------------------------------------------------------------------------------------\n| `BUILD_GUI`                   | `ON`  | Build the tracker (disable to build only a headless player)\n| `WITH_LOCALE`                 | `ON`  | Enable language support\n| `USE_RTMIDI`                  | `ON`  | Build with MIDI support using RtMidi\n| `USE_SDL2`                    | `ON`  | Build with SDL2 (required to build with GUI)\n| `USE_SNDFILE`                 | `ON`  | Build with libsndfile (required in order to work with audio files)\n| `USE_BACKWARD`                | `ON`  | Use backward-cpp to print a backtrace on crash/abort\n| `USE_FREETYPE`                | `OFF` | Build with FreeType support\n| `USE_MOMO`                    | auto¹ | Build a libintl implementation instead of using the system one\n| `WITH_JACK`                   | auto² | Whether to build with JACK support. Auto-detects if JACK is available\n| `WITH_PORTAUDIO`              | `ON`  | Whether to build with PortAudio.\n| `SYSTEM_FFTW`                 | `OFF` | Use a system-installed version of FFTW instead of the vendored one\n| `SYSTEM_FMT`                  | `OFF` | Use a system-installed version of fmt instead of the vendored one\n| `SYSTEM_LIBSNDFILE`           | `OFF` | Use a system-installed version of libsndfile instead of the vendored one\n| `SYSTEM_RTMIDI`               | `OFF` | Use a system-installed version of RtMidi instead of the vendored one\n| `SYSTEM_ZLIB`                 | `OFF` | Use a system-installed version of zlib instead of the vendored one\n| `SYSTEM_SDL2`                 | `OFF` | Use a system-installed version of SDL2 instead of the vendored one\n| `SYSTEM_FREETYPE`             | `OFF` | Use a system-installed version of FreeType instead of the vendored one\n| `SUPPORT_XP`                  | `OFF` | Build a Windows XP-compatible binary\n| `WARNINGS_ARE_ERRORS`         | `OFF`³| Whether warnings in furnace's C++ code should be treated as errors\n| `WITH_DEMOS`                  | `OFF` | Install demo songs on `make install`\n| `WITH_INSTRUMENTS`            | `ON`  | Install demo instruments on `make install`\n| `WITH_WAVETABLES`             | `ON`  | Install wavetables on `make install`\n| `SHOW_OPEN_ASSETS_MENU_ENTRY` | `OFF` | Show option to open built-in assets directory (on supported platforms)\n| `CONSOLE_SUBSYSTEM`           | `OFF` | Build with subsystem set to Console on Windows\n| `FORCE_APPLE_BIN`             | `OFF` | Enable installation of binaries (when doing `make install`) to PREFIX/bin on Apple platforms\n\n(¹) enabled by default if both libintl and setlocale aren't present (MSVC and Android), or on macOS\n\n(²) `ON` if system-installed JACK detected, otherwise `OFF`\n\n(³) but consider enabling this and reporting any errors that arise from it!\n\n## CMake Error\n\nif it says something about a missing subdirectory in `extern`, then either:\n\n1. you didn't set up submodules, or\n2. you downloaded the source as a .zip or .tar.gz. don't do this.\n\nif 1, you may run `git submodule update --init --recursive`. this will initialize submodules.\n\nif 2, clone this repo.\n\n## console usage\n\n(note: if on Windows, type `furnace.exe` instead, or `Debug\\furnace.exe` on MSVC)\n\n```\n./furnace\n```\n\nthis opens the program.\n\n```\n./furnace -console <file>\n```\n\nthis will play a compatible file.\n\n```\n./furnace -console -view commands <file>\n```\n\nthis will play a compatible file and enable the commands view.\n\n**note that console mode may not work correctly on Windows. you may have to quit using the Task Manager.**\n\n---\n\n# footnotes\n\ncopyright (C) 2021-2024 tildearrow and contributors.\n\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n\nFurnace is NOT affiliated with Delek or DefleMask in any form, regardless of its ability to load and save the .dmf, .dmp and .dmw file formats.\nadditionally, Furnace does not intend to replace DefleMask, nor any other program.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# to-do for 0.6.8\n\n- OPL3 mute fix\n\n# to-do long term\n\n- CSM macros\n- finish auto-clone\n- new pattern renderer - performance improvements\n- new info header\n- unlimited channels and chips\n- fix possible issues when moving selection\n- fix Metal intro crash\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "extern",
          "type": "tree",
          "content": null
        },
        {
          "name": "instruments",
          "type": "tree",
          "content": null
        },
        {
          "name": "papers",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "wavetables",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}