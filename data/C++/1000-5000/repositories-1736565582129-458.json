{
  "metadata": {
    "timestamp": 1736565582129,
    "page": 458,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KDE/kdeconnect-kde",
      "stars": 2812,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".craft.ini",
          "type": "blob",
          "size": 0.134765625,
          "content": "# SPDX-FileCopyrightText: None\n# SPDX-License-Identifier: CC0-1.0\n\n[BlueprintSettings]\nkde/applications/kdeconnect-kde.packageAppx = True\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.171875,
          "content": "# top-most EditorConfig file\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ncharset = utf-8\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.431640625,
          "content": "/build*/\nclang\n*.kdev4\nMakefile\nlib\nsrc/Makefile\nsrc/*_automoc.cpp*\nsrc/moc_*.cpp\nCMakeTmp\nCMakeFiles\nKDEConnect.config\nKDEConnect.creator\nKDEConnect.files\nKDEConnect.includes\n.directory\n*.qmlc\n*.rej\n.vscode\n.github/workflows/*\n\n# Eclipse settings\n.cproject\n.project\n.settings/*\n\nCMakeLists.txt.user\n.DS_Store\n\n.clang-format\n/compile_commands.json\n.clangd\n.cache\n.idea\n/cmake-build*\napp/resources.generated.qrc\nsmsapp/resources.generated.qrc\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.916015625,
          "content": "# SPDX-FileCopyrightText: None\n# SPDX-License-Identifier: CC0-1.0\n\n# Include scripts from https://invent.kde.org/sysadmin/ci-utilities\n# which run on Docker images from https://invent.kde.org/sysadmin/ci-images\n# The macOS build is only signed and notarized for the stable branch builds, as specified in:\n# https://invent.kde.org/sysadmin/ci-utilities/-/blob/master/signing/macappsigner-projects.yaml\n# and https://invent.kde.org/sysadmin/ci-utilities/-/blob/master/signing/macappnotarizer-projects.yaml\ninclude:\n  - project: sysadmin/ci-utilities\n    file:\n      - /gitlab-templates/linux-qt6.yml\n      - /gitlab-templates/freebsd-qt6.yml\n      - /gitlab-templates/windows-qt6.yml\n      - /gitlab-templates/clang-format.yml\n      - /gitlab-templates/craft-windows-x86-64-qt6.yml\n      - /gitlab-templates/craft-windows-appx-qt6.yml\n      - /gitlab-templates/craft-macos-x86-64-qt6.yml\n      - /gitlab-templates/craft-macos-arm64-qt6.yml\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": ".kde-ci.yml",
          "type": "blob",
          "size": 2.3076171875,
          "content": "# SPDX-FileCopyrightText: None\n# SPDX-License-Identifier: CC0-1.0\n\nOptions:\n  require-passing-tests-on: [ 'Linux' ]\n\nDependencies:\n- 'on': ['Linux/Qt5', 'FreeBSD/Qt5', 'Windows/Qt5']\n  'require':\n    'frameworks/extra-cmake-modules': '@stable'\n    'frameworks/kcoreaddons': '@stable'\n    'frameworks/kconfig': '@stable'\n    'frameworks/ki18n': '@stable'\n    'frameworks/kitemmodels': '@stable'\n    'frameworks/kcontacts': '@stable'\n    'frameworks/kirigami': '@stable'\n    'frameworks/kdbusaddons': '@stable'\n    'frameworks/knotifications': '@stable'\n    'frameworks/kiconthemes': '@stable'\n    'frameworks/kio': '@stable'\n    'frameworks/kcmutils': '@stable'\n    'frameworks/kservice': '@stable'\n    'frameworks/solid': '@stable'\n    'frameworks/kpeople': '@stable'\n    'frameworks/kwindowsystem': '@stable'\n    'frameworks/qqc2-desktop-style': '@stable'\n    'frameworks/kcrash': '@stable'\n    'libraries/kirigami-addons': '@latest'\n- 'on': ['Linux/Qt5', 'FreeBSD/Qt5']\n  'require':\n    'frameworks/kpackage': '@stable'\n    'libraries/pulseaudio-qt': '@stable'\n    'libraries/plasma-wayland-protocols': '@stable'\n- 'on': ['Linux/Qt5']\n  'require':\n    'frameworks/modemmanager-qt': '@stable'\n\n- 'on': ['Linux/Qt6', 'FreeBSD/Qt6', 'Windows/Qt6']\n  'require':\n    'frameworks/extra-cmake-modules': '@latest-kf6'\n    'frameworks/kcoreaddons': '@latest-kf6'\n    'frameworks/kconfig': '@latest-kf6'\n    'frameworks/ki18n': '@latest-kf6'\n    'frameworks/kitemmodels': '@latest-kf6'\n    'frameworks/kcontacts': '@latest-kf6'\n    'frameworks/kirigami': '@latest-kf6'\n    'frameworks/kdbusaddons': '@latest-kf6'\n    'frameworks/knotifications': '@latest-kf6'\n    'frameworks/kiconthemes': '@latest-kf6'\n    'frameworks/kio': '@latest-kf6'\n    'frameworks/kcmutils': '@latest-kf6'\n    'frameworks/kservice': '@latest-kf6'\n    'frameworks/solid': '@latest-kf6'\n    'frameworks/kpeople': '@latest-kf6'\n    'frameworks/kwindowsystem': '@latest-kf6'\n    'frameworks/qqc2-desktop-style': '@latest-kf6'\n    'libraries/kirigami-addons': '@latest-kf6'\n- 'on': ['Linux/Qt6', 'FreeBSD/Qt6']\n  'require':\n    'frameworks/kpackage': '@latest-kf6'\n    'frameworks/kstatusnotifieritem': '@latest-kf6'\n    'libraries/pulseaudio-qt': '@latest-kf6'\n    'libraries/plasma-wayland-protocols': '@latest-kf6'\n- 'on': ['Linux/Qt6']\n  'require':\n    'frameworks/modemmanager-qt': '@latest-kf6'\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.9931640625,
          "content": "cmake_minimum_required(VERSION 3.16)\n\n# KDE Release Service Version, managed by release script\nset (RELEASE_SERVICE_VERSION_MAJOR \"25\")\nset (RELEASE_SERVICE_VERSION_MINOR \"03\")\nset (RELEASE_SERVICE_VERSION_MICRO \"70\")\nset (RELEASE_SERVICE_VERSION \"${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE_VERSION_MINOR}.${RELEASE_SERVICE_VERSION_MICRO}\")\n\nproject(kdeconnect VERSION ${RELEASE_SERVICE_VERSION})\n\nset(KF_MIN_VERSION \"6.0.0\")\nset(QT_MIN_VERSION \"6.7.0\")\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_CXX_STANDARD_REQUIRED TRUE)\n#set(CMAKE_COMPILE_WARNING_AS_ERROR TRUE)\n\nfind_package(ECM ${KF_MIN_VERSION} REQUIRED NO_MODULE)\nset(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)\n\ninclude(KDEInstallDirs)\ninclude(KDECompilerSettings NO_POLICY_SCOPE)\ninclude(KDECMakeSettings)\ninclude(ECMAddTests)\ninclude(ECMSetupVersion)\ninclude(ECMInstallIcons)\ninclude(ECMQtDeclareLoggingCategory)\ninclude(FeatureSummary)\ninclude(GenerateExportHeader)\ninclude(ECMGenerateQmlTypes)\ninclude(KDEClangFormat)\ninclude(KDEGitCommitHooks)\ninclude(ECMFindQmlModule)\ninclude(ECMQmlModule)\ninclude(ECMDeprecationSettings)\n\ninclude(KDEConnectMacros.cmake)\n\necm_setup_version(${RELEASE_SERVICE_VERSION}\n    VARIABLE_PREFIX KDECONNECT\n    VERSION_HEADER ${CMAKE_CURRENT_BINARY_DIR}/kdeconnect-version.h\n)\n\necm_set_disabled_deprecation_versions(\n    QT 6.6\n    KF 6.5\n)\n\n# Make the version header available by linking against kdeconnectversion\nadd_library(kdeconnectversion INTERFACE)\ntarget_include_directories(kdeconnectversion INTERFACE ${CMAKE_CURRENT_BINARY_DIR})\n\nset_package_properties(KF6Kirigami2 PROPERTIES\n    DESCRIPTION \"QtQuick plugins to build user interfaces based on KDE UX guidelines\"\n    PURPOSE \"Required for KDE Connect's QML-based GUI applications\"\n    URL \"https://www.kde.org/products/kirigami/\"\n    TYPE RUNTIME\n)\n\nfind_package(KF6KirigamiAddons 0.11 REQUIRED)\nset_package_properties(KF6KirigamiAddons PROPERTIES\n    TYPE REQUIRED\n    PURPOSE \"Required runtime dependency (all the modules are required)\"\n)\n\nif(UNIX AND NOT APPLE)\n    option(WITH_X11 \"Build with X11 support\" ON)\n    option(WITH_PULSEAUDIO \"Build with Pulseaudio support\" ON)\nelse()\n    set(WITH_X11 OFF)\n    set(WITH_PULSEAUDIO OFF)\nendif()\n\nif(UNIX AND NOT APPLE)\n    find_package(KF6Package REQUIRED)\n    if (WITH_PULSEAUDIO)\n        find_package(KF6PulseAudioQt REQUIRED)\n    endif()\n    find_package(QtWaylandScanner REQUIRED)\n    find_package(Wayland 1.9 REQUIRED Client)\n    find_package(Qt6 REQUIRED COMPONENTS WaylandClient)\n    find_package(WaylandProtocols REQUIRED)\n    pkg_check_modules(XkbCommon IMPORTED_TARGET xkbcommon)\n    find_package(PkgConfig QUIET REQUIRED)\n    pkg_check_modules(DBus REQUIRED IMPORTED_TARGET dbus-1)\nendif()\n\nif (NOT WIN32)\n    find_package(KF6StatusNotifierItem ${KF_MIN_VERSION} REQUIRED)\nendif()\n\n#ecm_find_qmlmodule(org.kde.people 1.0) FIXME This results in KPeople code being called which triggers DBus calls which breaks the Windows CI\necm_find_qmlmodule(QtQuick.Particles 2.0)\n\nadd_definitions(-DQT_NO_URL_CAST_FROM_STRING -DQT_NO_KEYWORDS -DQT_NO_CAST_FROM_ASCII)\n\nfind_package(Qt6 ${QT_MIN_VERSION} REQUIRED COMPONENTS DBus Quick QuickWidgets QuickControls2 Network Multimedia)\nfind_package(KF6 ${KF_MIN_VERSION} REQUIRED COMPONENTS I18n ConfigWidgets DBusAddons IconThemes Notifications\n    KIO KCMUtils Service Solid Kirigami People WindowSystem GuiAddons DocTools Crash)\n\nif (WIN32)\n    get_filename_component(WINDOWS_KITS_DIR\n        \"[HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots;KitsRoot10]\" ABSOLUTE)\n    file(READ \"${WINDOWS_KITS_DIR}/SDKManifest.xml\" SDK_MANIFEST)\n    string(REGEX MATCH \"PlatformIdentity[^\\n]*\" PLATFORM_IDENTITY \"${SDK_MANIFEST}\" )\n    string(REGEX MATCH \"[0-9][0-9][0-9][0-9][0-9]\" WIN_SDK_VERSION \"${PLATFORM_IDENTITY}\" )\n    add_compile_definitions(WIN_SDK_VERSION=${WIN_SDK_VERSION})\nendif()\n\nadd_subdirectory(core)\nadd_subdirectory(plugins)\nadd_subdirectory(interfaces)\n\nfind_package(KF6QQC2DesktopStyle ${KF_MIN_VERSION} REQUIRED)\nset_package_properties(KF6QQC2DesktopStyle PROPERTIES TYPE RUNTIME)\n\nadd_subdirectory(icons)\nadd_subdirectory(data)\nadd_subdirectory(cli)\nadd_subdirectory(declarativeplugin)\n\nadd_subdirectory(kcm)\nadd_subdirectory(kcmplugin)\nadd_subdirectory(daemon)\nadd_subdirectory(app)\nadd_subdirectory(indicator)\nadd_subdirectory(urlhandler)\nadd_subdirectory(nautilus-extension)\nadd_subdirectory(fileitemactionplugin)\nadd_subdirectory(smsapp)\nadd_subdirectory(settings)\n\nif(NOT WIN32 AND NOT APPLE)\n    add_subdirectory(kio)\n    add_subdirectory(plasmoid)\nendif()\n\nadd_subdirectory(doc)\nkdoctools_install(po)\n\nki18n_install(po)\n\nif(BUILD_TESTING)\n    add_subdirectory(tests)\nendif()\n\necm_qt_install_logging_categories(EXPORT kdeconnect-kde FILE kdeconnect-kde.categories SORT DESTINATION \"${KDE_INSTALL_LOGGINGCATEGORIESDIR}\")\n\nfile(GLOB_RECURSE ALL_CLANG_FORMAT_SOURCE_FILES *.cpp *.h)\nkde_clang_format(${ALL_CLANG_FORMAT_SOURCE_FILES})\n\nkde_configure_git_pre_commit_hook(CHECKS CLANG_FORMAT)\n\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6435546875,
          "content": "To file bugs, use the [kde bugtracker](https://bugs.kde.org/describecomponents.cgi?product=kdeconnect).\n\nTo request features, join the discussion on the [mailing list](https://mail.kde.org/mailman/listinfo/kdeconnect) or [Telegram channel](https://t.me/joinchat/AOS6gA37orb2dZCLhqbZjg).\n\nPatches should be submitted to [KDE Connect's GitLab](https://invent.kde.org/network/kdeconnect-kde).\n\nA tutorial on how to build KDE Connect using KDevelop can be found [here](https://nicolasfella.wordpress.com/2018/03/30/building-kde-connect/).\n\nPatches should contain only one change, so if you fix a bug and some whitespace errors please do that in separate patches.\n"
        },
        {
          "name": "KDEConnectMacros.cmake",
          "type": "blob",
          "size": 1.1044921875,
          "content": "# SPDX-FileCopyrightText: 2015 Aleix Pol Gonzalez <aleixpol@kde.org>\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# Function to create the plugin and generate a logging category for it\nfunction(kdeconnect_add_plugin plugin_name)\n    kcoreaddons_add_plugin(${plugin_name} ${ARGN} INSTALL_NAMESPACE kdeconnect)\n\n    string(REPLACE \"kdeconnect_\" \"\" PlUGIN_WITHOUT_PREFIX \"${plugin_name}\") # For the file name and description, we don't want this\n    string(TOUPPER \"${PlUGIN_WITHOUT_PREFIX}\" PLUGIN_UPPER) # The identifier is all capy\n    ecm_qt_declare_logging_category(${plugin_name}\n        HEADER plugin_${PlUGIN_WITHOUT_PREFIX}_debug.h\n        IDENTIFIER KDECONNECT_PLUGIN_${PLUGIN_UPPER} CATEGORY_NAME kdeconnect.plugin.${PlUGIN_WITHOUT_PREFIX}\n        DEFAULT_SEVERITY Warning\n        EXPORT kdeconnect-kde DESCRIPTION \"kdeconnect (plugin ${PlUGIN_WITHOUT_PREFIX})\")\nendfunction()\n\nfunction(kdeconnect_add_kcm plugin)\n    kcoreaddons_add_plugin(${plugin} ${ARGN} INSTALL_NAMESPACE kdeconnect/kcms)\n    install(FILES \"${plugin}.qml\" DESTINATION ${KDE_INSTALL_DATADIR}/kdeconnect)\nendfunction()\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.515625,
          "content": "# KDE Connect - desktop app\n\nKDE Connect is a multi-platform app that allows your devices to communicate (eg: your phone and your computer).\n\n## (Some) Features\n- **Shared clipboard**: copy and paste between your phone and your computer (or any other device).\n- **Notification sync**: Read and reply to your Android notifications from the desktop.\n- **Share files and URLs** instantly from one device to another including some filesystem integration.\n- **Multimedia remote control**: Use your phone as a remote for Linux media players.\n- **Virtual touchpad**: Use your phone screen as your computer's touchpad and keyboard.\n- **Presentation remote**: Advance your presentation slides straight from your phone.\n- **Run Commands**: Run shell commands on your computer from your phone.\n- **Access SMS**: Read, send and reply to SMS and MMS from your computer.\n\nAll this is done completely wirelessly, utilising TLS encryption.\n\n## Userbase wiki\nA user-focused wiki can be found on [KDE Userbase](https://userbase.kde.org/KDEConnect)\n\n## Supported platforms\n- Computers running Linux with Plasma 5, Gnome 3, Elementary OS... any distro with Qt5 support :)\n- Android, by installing the KDE Connect app from the [Play Store](https://play.google.com/store/apps/details?id=org.kde.kdeconnect_tp) or [F-Droid](https://f-droid.org/repository/browse/?fdid=org.kde.kdeconnect_tp).\n- iPhone and iPad, by installing from the [App Store](https://apps.apple.com/us/app/kde-connect/id1580245991)\n- Computers running Windows, by installing from the [Microsoft Store](https://apps.microsoft.com/store/detail/kde-connect/9N93MRMSXBF0)\n\n## How to install\nThese instructions explain how to install KDE Connect on your computer. You will also need to install it on your Android device and pair them together in the app before using this application. The Android app repository can be found [here](https://invent.kde.org/network/kdeconnect-android)\n\n### On Linux\nLook in your distribution repo for a package called `kdeconnect-kde`,\n`kdeconnect-plasma`, just `kdeconnect` or `kde-connect`.\nIf it's not there and you know how to build software from sources, you just\nfound the repo :), instructions are\n[here](https://community.kde.org/KDEConnect#Linux_Desktop)\n\n### On Mac or Windows\nPlatforms other than Linux are not officially supported, as there has yet to be an official release of KDE Connect for MacOS or Windows. However, most of the features have already been ported to windows so you can compile KDE Connect for Windows using [Craft](https://community.kde.org/Craft). It hasn't yet been completely tested on MacOS, contributions and feedback are welcome!\n\n### On BSD\nIt should work, but no promises :)\n\n\n## How does it work?\nKDE Connect consists of a UI-agnostic \"core\" library that exposes a series of DBus interfaces, and several UI components that consume these DBus interfaces. This way, new UI components can be added to integrate better with specific platforms or desktops, without having to reimplement the protocol or any of the internals. The core KDE Connect library is also divided into 4 big blocks:\n\n- **LinkProviders**: Are in charge of discovering other KDE Connect-enabled devices in the network and establishing a Link to them.\n- **Devices**: Represent a remote device, abstracting the specific Link that is being used to reach it.\n- **NetworkPackets**: JSON-serializable and self-contained pieces of information to be sent by the plugins between devices.\n- **Plugins**: Independent pieces of code that implement a specific feature. Plugins will use NetworkPackets to exchange information through the network with other Plugins on a remote Device.\n\nThe basic structure of a NetworkPacket is the following:\n\n```\n{\n  \"id\": 123456789,\n  \"type\": \"com.example.myplugin\",\n  \"body\": {  },\n  \"version\": 5\n}\n```\n\nThe content of the `\"body\"` section is defined by each Plugin. Hence, only the emitter and receiver plugins of a given packet type need agree on the contents of the body.\n\nNetworkPackets can also have binary data attached that can't be serialized to JSON. In this case, two new fields will be added:\n\n`\"payloadSize\"`: The size of the file, or -1 if it is a stream without known size.\n`\"payloadTransferInfo\"`: Another JSON object where the specific Link can add information so the Link in the remote end can establish a connection and receive the payload (eg: IP and port in a local network). It's up to the Link implementation to decide how to use this field.\n\n## Contributing\n\nTo contribute patches, use [KDE Connect's GitLab](https://invent.kde.org/network/kdeconnect-kde). There you can also find a task list with stuff to do and links to other relevant resources. It is a good idea to also subscribe to the [KDE Connect mailing list](https://mail.kde.org/mailman/listinfo/kdeconnect). We can also be reached on IRC at #kdeconnect on irc.libera.chat or on [Telegram](https://t.me/joinchat/AOS6gA37orb2dZCLhqbZjg), contributions and feedback are warmly welcomed.\n\nFor bug reporting, please use [KDE's Bugzilla](https://bugs.kde.org). Please do not use the issue tracker in GitLab since we want to keep everything in one place.\n\nPlease know that all translations for all KDE apps are handled by the [localization team](https://l10n.kde.org/). If you would like to submit a translation, that should be done by working with the proper team for that language.\n\n## License\n[GNU GPL v2](https://www.gnu.org/licenses/gpl-2.0.html) and [GNU GPL v3](https://www.gnu.org/licenses/gpl-3.0.html)\n\nIf you are reading this from Github, you should know that this is just a mirror of the [KDE Project repo](https://invent.kde.org/network/kdeconnect-kde).\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "declarativeplugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "fileitemactionplugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "indicator",
          "type": "tree",
          "content": null
        },
        {
          "name": "interfaces",
          "type": "tree",
          "content": null
        },
        {
          "name": "kcm",
          "type": "tree",
          "content": null
        },
        {
          "name": "kcmplugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "kio",
          "type": "tree",
          "content": null
        },
        {
          "name": "nautilus-extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "plasmoid",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "smsapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "urlhandler",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}