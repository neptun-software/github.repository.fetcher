{
  "metadata": {
    "timestamp": 1736565895449,
    "page": 858,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cmu-db/peloton",
      "stars": 2032,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.3154296875,
          "content": "# Options for Clang Formatter\n\n# We'll use defaults from the Google style,\nBasedOnStyle: Google\n\n# 2 columns tab indentation.\nTabWidth: 2\n\n# No tabs\nUseTab: Never\n\n# Don't automatically derive the alignment of & and *\nDerivePointerAlignment: false\n\n# Always align pointer and reference to the right\nPointerAlignment: Right\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": ".vs\n.git\nbuild\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1884765625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\n\n[Makefile]\nindent_style = tab\n\n[.travis.yml]\nindent_size = 4\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.8330078125,
          "content": "#==============================================================================#\n# This file specifies intentionally untracked files that git should ignore.\n#==============================================================================#\n\n#==============================================================================#\n# File extensions to be ignored anywhere in the tree.\n#==============================================================================#\n# Temp files created by most text editors.\n*~\n# Merge files created by git.\n*.orig\n# Java bytecode\n*.class\n# Byte compiled python modules.\n*.pyc\n# vim swap files\n.*.sw?\n.sw?\n#OS X specific files.\n.DS_store\n# Core files\n#core\n\n#==============================================================================#\n# Explicit files to ignore (only matches one).\n#==============================================================================#\n# Various tag programs\n/tags\n/TAGS\n/GPATH\n/GRTAGS\n/GSYMS\n/GTAGS\n.gitusers\nautom4te.cache\ncscope.files\ncscope.out\nautoconf/aclocal.m4\nautoconf/autom4te.cache\n/compile_commands.json\n\n#==============================================================================#\n# Directories to ignore (do not add trailing '/'s, they skip symlinks).\n#==============================================================================#\n# External projects that are tracked independently.\nprojects/*\n!projects/*.*\n!projects/Makefile\n\n\n#==============================================================================#\n# Autotools artifacts\n#==============================================================================#\nconfig/\nconfigure\nconfig-h.in\nautom4te.cache\n*Makefile.in\n*Makefile\nlibtool\naclocal.m4\nconfig.log\nconfig.status\nstamp-h1\nconfig.h\nm4/libtool.m4\nm4/ltoptions.m4\nm4/ltsugar.m4\nm4/ltversion.m4\nm4/lt~obsolete.m4\n\n#==============================================================================#\n# Build artifacts\n#==============================================================================#\n#m4/\nbuild/\n#*.m4\n*.o\n*.lo\n*.la\n*~\n*.pdf\n*.swp\na.out\n\n#==============================================================================#\n# Kate Swap Files\n#==============================================================================#\n*.kate-swp\n.#kate-*\n\n#==============================================================================#\n# Backup artifacts\n#==============================================================================#\n~*\n*~\ntmp/\n\n#==============================================================================#\n# KDevelop files\n#==============================================================================#\n.kdev4\n*.kdev4\n.dirstamp\n.deps\n.libs\n\n#==============================================================================#\n# Eclipse files\n#==============================================================================#\n.wtpmodules\n.classpath\n.project\n.cproject\n.pydevproject\n.settings\n.autotools\n\n/Debug/\n/misc/\n\n#==============================================================================#\n# Intellij files\n#==============================================================================#\n.idea\n*.iml\n\n#==============================================================================#\n# Code Coverage files\n#==============================================================================#\n*.gcno\n*.gcda\n\n#==============================================================================#\n# Scripts\n#==============================================================================#\n*.jar\nscripts/PelotonTest/out\nscripts/PelotonTest/lib\n\n#==============================================================================#\n# Protobuf\n#==============================================================================#\n*.pb-c.c\n*.pb-c.h\n*.pb.cc\n*.pb.h\n*.pb.go\n\n#==============================================================================#\n# Third party\n#==============================================================================#\nthird_party/nanomsg/\nthird_party/nvml/\nthird_party/logcabin/\n\n#==============================================================================#\n# Eclipse\n#==============================================================================#\n\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n.recommenders\n\n# Eclipse Core\n.project\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# PyDev specific (Python IDE for Eclipse)\n*.pydevproject\n\n# CDT-specific (C/C++ Development Tooling)\n.cproject\n\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# Java annotation processor (APT)\n.factorypath\n\n# PDT-specific (PHP Development Tools)\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# Tern plugin\n.tern-project\n\n# TeXlipse plugin\n.texlipse\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Code Recommenders\n.recommenders/\nio_file\n\n## General\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.cuo\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n\n# Compiled protocol buffers\n*.pb.h\n*.pb.cc\n*_pb2.py\n\n# Compiled python\n*.pyc\n\n# Compiled MATLAB\n*.mex*\n\n# IPython notebook checkpoints\n.ipynb_checkpoints\n\n# Editor temporaries\n*.swp\n*~\n\n# Sublime Text settings\n*.sublime-workspace\n*.sublime-project\n\n# Eclipse Project settings\n*.*project\n.settings\n\n# Visual Studio\n.vs\n\n# QtCreator files\n*.user\n\n# PyCharm files\n.idea\n\n# OSX dir files\n.DS_Store\n\n# User's build configuration\nMakefile.config\n\n# build, distribute, and bins (+ python proto bindings)\nbuild\n.build_debug/*\n.build_release/*\ndistribute/*\n*.testbin\n*.bin\ncmake_build\n.cmake_build\ncmake-build-debug\ncmake-build-release\n\n# Bison/Flex\nsql_parser.cpp\nsql_parser.h\nsql_scanner.cpp\nsql_scanner.h\n\n# Antlr\nSQLParser.h\nSQLParser.c\nSQLParser.cpp\nSQLLexer.h\nSQLLexer.c\nSQLLexer.cpp\n\n\n# Generated documentation\ndocs/_site\ndocs/gathered\n_site\ndoxygen\ndocs/dev\n\n# Config files\n*.conf\n\n# Protobuf files\n*.pb.cc\n*.pb.h\n*.pb\n\n# Third party\nthird_party/gflags/\n\n# Test output file logs to ignore\nstats_log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.115234375,
          "content": "language: c++\npython: 3.6\nmatrix:\n    fast_finish: true\n\n    include:\n        # Mac build\n        - os: osx\n          osx_image: xcode8.3\n          compiler: clang\n          env:\n              # NAME has no actual use, just to make the travis jobs overview more clear\n              - NAME=\"clang Debug/Tests/AddressSanitizer\"\n              - PELOTON_BUILD_TYPE=Debug\n              - SANITIZER=Address\n              - COVERALLS=Off\n              - LLVM_DIR=/usr/local/Cellar/llvm@3.9/3.9.1_2\n        # Linux builds for gcc 5\n        - os: linux\n          sudo: required\n          dist: trusty\n          compiler: gcc\n          addons:\n              apt:\n                  sources:\n                      - llvm-toolchain-precise-3.7\n                      - ubuntu-toolchain-r-test\n                  packages:\n                    - g++-5\n          env:\n              # NAME has no actual use, just to make the travis jobs overview more clear\n              - NAME=\"gcc5 Debug/Tests/AddressSanitizer/Coveralls\"\n              - CXX=g++-5\n              - CC=gcc-5\n              - PELOTON_BUILD_TYPE=Debug\n              - SANITIZER=Address\n              - COVERALLS=On\n\n        - os: linux\n          sudo: required\n          dist: trusty\n          compiler: gcc\n          addons:\n              apt:\n                  sources:\n                      - llvm-toolchain-precise-3.7\n                      - ubuntu-toolchain-r-test\n                  packages:\n                    - g++-5\n          env:\n              # NAME has no actual use, just to make the travis jobs overview more clear\n              - NAME=\"gcc5 Release/Tests/AddressSanitizer\"\n              - CXX=g++-5\n              - CC=gcc-5\n              - PELOTON_BUILD_TYPE=Release\n              - SANITIZER=\n              - COVERALLS=Off\n\ninstall:\n    # setup environment\n    - ./script/installation/packages.sh\n    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then pip install --user cpp-coveralls; fi\n\nbefore_script:\n    # first, run source_validator\n    - python script/validators/source_validator.py\n\n# build peloton (override this value to execute tests)\nscript:\n    # create build directory\n    - mkdir build\n    - cd build\n    # run cmake. NOTE: the PATH is made explicit to avoid automatic selection of the preinstalled llvm version in the Travis trusty image\n    - PATH=/usr/lib/llvm-3.7/bin:/usr/bin:$PATH cmake -DCOVERALLS=$COVERALLS -DCMAKE_BUILD_TYPE=$PELOTON_BUILD_TYPE -DUSE_SANITIZER=$SANITIZER ..\n    # build\n    - make -j4\n    # run tests\n    - if [[ $TRAVIS_OS_NAME != 'osx' ]]; then make check -j4; fi\n    - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then ASAN_OPTIONS=detect_container_overflow=0 make check -j4; fi\n    # install peloton\n    - make install\n    # run psql tests\n    - bash ../script/testing/psql/psql_test.sh\n    # run jdbc tests\n    - python ../script/validators/jdbc_validator.py\n    # run junit tests\n    - if [[ $TRAVIS_OS_NAME != 'osx' ]]; then python ../script/testing/junit/run_junit.py; fi\n    - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then ASAN_OPTIONS=detect_container_overflow=0 python ../script/testing/junit/run_junit.py; fi\n    # upload coverage info\n    - if [[ $COVERALLS == 'On' ]]; then make coveralls; fi\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.1328125,
          "content": "cmake_minimum_required(VERSION 2.8.7)\nif(POLICY CMP0046)\n  cmake_policy(SET CMP0046 NEW)\nendif()\nif(POLICY CMP0054)\n  cmake_policy(SET CMP0054 NEW)\nendif()\n\n# ---[ Peloton project\nproject(Peloton CXX C)\n\n# ---[ CTest\ninclude(CTest)\n\n# ---[ Peloton version\nset(PELOTON_TARGET_VERSION \"0.0.5\" CACHE STRING \"Peloton logical version\")\nset(PELOTON_TARGET_SOVERSION \"0.0.5\" CACHE STRING \"Peloton soname version\")\nadd_definitions(-DPELOTON_VERSION=${PELOTON_TARGET_VERSION})\n\n# --[ Output directory\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n# ---[ Using cmake scripts and modules\nlist(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Modules)\n\ninclude(ExternalProject)\n\ninclude(cmake/Utils.cmake)\ninclude(cmake/Targets.cmake)\ninclude(cmake/Misc.cmake)\ninclude(cmake/CompilerInfo.cmake)\ninclude(cmake/Summary.cmake)\ninclude(cmake/ConfigGen.cmake)\n\n# ---[ Options\npeloton_option(BUILD_docs   \"Build documentation\" ON IF UNIX OR APPLE)\n\n# ---[ Dependencies\ninclude(cmake/Dependencies.cmake)\n\n# ---[ C++11 Flags\ninclude(CheckCXXCompilerFlag)\ncheck_cxx_compiler_flag(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n\nif(COMPILER_SUPPORTS_CXX11)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -Wno-c++14-compat\")\nelse()\n    message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\nendif()\n\n# Create a new pre-processor macro __PELOTONFILE__ that has a truncated\n# path to reduce the size of the debug log messages.\n# Source: http://stackoverflow.com/a/16658858\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__PELOTONFILE__='\\\"$(subst ${CMAKE_SOURCE_DIR}/,,$(abspath $<))\\\"'\")\n\n# ---[ Color diagnostics\n\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fcolor-diagnostics\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fcolor-diagnostics\")\nendif()\n\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND\n  (CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 4.9 OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 4.9))\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fdiagnostics-color=auto\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fdiagnostics-color=auto\")\nendif()\n\n# -- [ Debug Flags\nset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -O0 -ggdb -fno-omit-frame-pointer -fno-optimize-sibling-calls\")\n\n# ---[ Flags\nif(UNIX OR APPLE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIC -Wall -Wextra -Werror -mcx16 -Wno-invalid-offsetof -march=native\")\n    if(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-tautological-undefined-compare -Wno-unused-private-field -Wno-braced-scalar-init -Wno-constant-conversion -Wno-potentially-evaluated-expression -Wno-infinite-recursion -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -I/usr/local/opt/openssl/include\")\n    endif()\n# ---[ close$NOCANCEL for Mac OS\n    if(APPLE)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-dollar-in-identifier-extension\")\n    endif()\nendif()\n\n# There is a problem with building on g++5.4 on Ubuntu 17.10 where\n# the compiler will not support a bunch of stuff in std for some reason.\n# For example, it would say that 'to_string' is not part of 'std'.\n# These flags fix these problems. I don't know whether g++5.5 has the same\n# problem, so I am only making this fix target all variants of 5.4.\n#\n# More Info: https://stackoverflow.com/a/38034394\n#            https://github.com/opencv/opencv/issues/10032#issuecomment-342347482\nif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\" AND\n  (CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 5.4 OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 5.4) AND\n  (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.5))\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D_GLIBCXX_USE_C99=1 -D_GLIBCXX_USE_C99_MATH=1\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_GLIBCXX_USE_C99=1 -D_GLIBCXX_USE_C99_MATH=1\")\nendif()\n\n# ---[ Warnings\npeloton_warnings_disable(CMAKE_CXX_FLAGS -Wno-strict-aliasing -Wno-implicit-fallthrough)\n\n# ---[ Check if we should use the GNU Gold linker\nset(USE_GOLD true CACHE BOOL \"Use the GNU Gold linker if available\")\nif (USE_GOLD)\n    execute_process(COMMAND ${CMAKE_C_COMPILER} -fuse-ld=gold -Wl,--version ERROR_QUIET OUTPUT_VARIABLE LD_VERSION)\n    if (\"${LD_VERSION}\" MATCHES \"GNU gold\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold -Wl,--disable-new-dtags\")\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold -Wl,--disable-new-dtags\")\n    else ()\n        message(WARNING \"GNU gold linker isn't available, using the default system linker.\")\n        set(USE_LD_GOLD OFF)\n    endif ()\nendif()\n\n# ---[ Turn on sanitizers if necessary.\nif(USE_SANITIZER)\n    if (USE_SANITIZER STREQUAL \"Address\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\n    elseif (USE_SANITIZER STREQUAL \"Undefined\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=undefined -fno-sanitize=vptr,function -fno-sanitize-recover=all\")\n    elseif (USE_SANITIZER STREQUAL \"Thread\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread\")\n    elseif (USE_SANITIZER STREQUAL \"Address;Undefined\" OR\n            USE_SANITIZER STREQUAL \"Undefined;Address\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address,undefined -fno-sanitize=vptr,function -fno-sanitize-recover=all\")\n    else()\n        message(FATAL_ERROR \"Unsupported value of USE_SANITIZER: ${USE_SANITIZER}\")\n    endif()\n    if (USE_SANITIZER MATCHES \"(Undefined;)?Address(;Undefined)?\")\n        check_cxx_compiler_flag(-fsanitize-address-use-after-scope FSANITIZE_USE_AFTER_SCOPE_FLAG)\n        if (${FSANITIZE_USE_AFTER_SCOPE_FLAG})\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize-address-use-after-scope\")\n        endif()\n    endif()\nendif()\n\n# -- [ Coverage\noption(COVERALLS \"Generate coveralls data\" OFF)\n\nif (COVERALLS)\n    include(Coveralls)\n    coveralls_turn_on_coverage()\n\n    # Create the coveralls target.\n    file(GLOB_RECURSE srcs ${PROJECT_SOURCE_DIR}/src/*/*.cpp)\n\n    peloton_convert_absolute_paths(srcs)\n    peloton_convert_absolute_paths(parser_srcs)\n\n    #message(STATUS \"Coverage srcs : ${srcs}\" )\n    set(COVERAGE_SRCS ${srcs})\n\n    coveralls_setup(\"${COVERAGE_SRCS}\" ON)\nendif()\n\n# data directory for SSL\nset(DATA_DIR \"${PROJECT_SOURCE_DIR}/data\")\n\n# ---[ Config generation\nconfigure_file(cmake/Templates/peloton_config.h.in \"${PROJECT_BINARY_DIR}/peloton_config.h\")\n\n# ---[ Includes\nset(Peloton_SRC_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/src/include)\nset(Peloton_TEST_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/test/include)\nset(Peloton_THIRD_PARTY_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/third_party)\ninclude_directories(${Peloton_SRC_INCLUDE_DIR} ${Peloton_TEST_INCLUDE_DIR} ${Peloton_THIRD_PARTY_INCLUDE_DIR} ${PROJECT_BINARY_DIR})\ninclude_directories(BEFORE src) # This is needed for gtest.\n\n# ---[ Subdirectories\nadd_subdirectory(src)\nadd_subdirectory(test)\n\n# -- [ Doxygen\n\nif (DOXYGEN)\n\tinclude(doxygen)\n\tdoxygen_configure(src/ test/)\nendif()\n\n# ---[ Linter target\nadd_custom_target(lint COMMAND ${CMAKE_COMMAND} -P ${PROJECT_SOURCE_DIR}/cmake/lint.cmake)\n\n# ---[ Configuration summary\npeloton_print_configuration_summary()\n\n# ---[ Export configs generation\npeloton_generate_export_configs()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.58203125,
          "content": "Contribute to Peloton\n===================\n\nFile an issue\n-------------\n\nPlease check peloton's [GitHub issue tracker](https://github.com/cmu-db/peloton/issues) for known issues.  \n\nYou can report bugs and feature requests to [GitHub Issues](https://github.com/cmu-db/peloton/issues).\n\nWhen you file a bug, please try to follow these simple rules if applicable:\n\n* Make sure you've read the README carefully.\n* Add debug information to the issue by building Peloton with the `--enable-debug` option\n* Provide information about your environment: versions of your OS, compiler, etc.\n* Make sure that the issue is reproducible with your description.\n\nIt's likely that your bug gets resolved faster if you provide as much information as possible.\n\nDevelopment\n-----------\n\n* Source hosted at [GitHub](https://github.com/cmu-db/peloton).\n* Testing framework hosted at [Jenkins](http://jenkins.db.cs.cmu.edu:8080/job/Peloton/).\n\nPull requests are very welcome! Please try to follow these simple rules if applicable:\n\n* Make sure you follow the [coding-style guidance](https://github.com/cmu-db/peloton/blob/master/script/coding_style.md) for Peloton.\n* Please create a topic branch for every separate change you make.\n* Make sure you use [`git rebase`](https://github.com/cmu-db/peloton/wiki/Git-survival-guide#rebase-or-how-to-screw-the-history) instead of `git merge` while updating your branch with the master.\n* Make sure your patches are well tested. All tests must pass when run on [Jenkins](http://jenkins.db.cs.cmu.edu:8080/job/Peloton/).\n* Update the [README](https://github.com/cmu-db/peloton/blob/master/README.md).\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 7.1103515625,
          "content": "pipeline {\n    agent none\n    stages {\n        stage('Build') {\n            parallel {\n                // begin gcc builds\n                // NOTE: this next stage is special because it copies the test results out of the container\n                stage('Ubuntu Xenial/gcc-5.4.0/llvm-3.7.1 (Debug)') {\n                    agent {\n                        docker {\n                            image 'ubuntu:xenial'\n                            // args '-v ${WORKSPACE}/../builds/${BUILD_ID}:/job:rw'\n                        }\n                    }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'python script/validators/source_validator.py'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address -DCOVERALLS=False .. && make -j4'\n                        sh 'cd build && make check -j4'\n                        // sh 'cd build && cp -pr test /job/' // special tests collection step just for this stage\n                        sh 'cd build && make install'\n                        sh 'cd build && bash ../script/testing/psql/psql_test.sh'\n                        sh 'sudo apt-get -qq update && sudo apt-get -qq -y --no-install-recommends install wget default-jdk default-jre' // prerequisites for jdbc_validator\n                        sh 'cd build && python ../script/validators/jdbc_validator.py'\n                        sh 'cd build && python ../script/testing/junit/run_junit.py'\n                    }\n                }\n\n                stage('Ubuntu Xenial/gcc-5.4.0/llvm-3.7.1 (Release)') {\n                    agent { docker { image 'ubuntu:xenial' } }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'python script/validators/source_validator.py'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCOVERALLS=False .. && make -j4'\n                        sh 'cd build && make check -j4'\n                        sh 'cd build && make install'\n                        sh 'cd build && bash ../script/testing/psql/psql_test.sh'\n                        sh 'sudo apt-get -qq update && sudo apt-get -qq -y --no-install-recommends install wget default-jdk default-jre' // prerequisites for jdbc_validator\n                        sh 'cd build && python ../script/validators/jdbc_validator.py'\n                        sh 'cd build && python ../script/testing/junit/run_junit.py'\n                    }\n                }\n\n                stage('Ubuntu Trusty/gcc-5.4.0/llvm-3.7.1 (Debug)') {\n                    agent { docker { image 'ubuntu:trusty' } }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'sudo apt-get -y install software-properties-common'\n                        sh 'sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test'\n                        sh 'sudo apt-get update'\n                        sh 'sudo apt-get -y install gcc-5 g++-5'\n                        sh 'sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 1 --slave /usr/bin/g++ g++ /usr/bin/g++-5'\n                        sh 'python script/validators/source_validator.py'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address -DCOVERALLS=False .. && make -j4'\n                        sh 'cd build && make check -j4'\n                        sh 'cd build && make install'\n                        sh 'cd build && bash ../script/testing/psql/psql_test.sh'\n                        sh 'sudo apt-get -qq update && sudo apt-get -qq -y --no-install-recommends install wget default-jdk default-jre' // prerequisites for jdbc_validator\n                        sh 'cd build && python ../script/validators/jdbc_validator.py'\n                        sh 'cd build && python ../script/testing/junit/run_junit.py'\n                    }\n                }\n\n                stage('Ubuntu Trusty/gcc-5.4.0/llvm-3.7.1 (Release)') {\n                    agent { docker { image 'ubuntu:trusty' } }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'sudo apt-get -y install software-properties-common'\n                        sh 'sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test'\n                        sh 'sudo apt-get update'\n                        sh 'sudo apt-get -y install gcc-5 g++-5'\n                        sh 'sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 1 --slave /usr/bin/g++ g++ /usr/bin/g++-5'\n                        sh 'python script/validators/source_validator.py'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCOVERALLS=False .. && make -j4'\n                        sh 'cd build && make check -j4'\n                        sh 'cd build && make install'\n                        sh 'cd build && bash ../script/testing/psql/psql_test.sh'\n                        sh 'sudo apt-get -qq update && sudo apt-get -qq -y --no-install-recommends install wget default-jdk default-jre' // prerequisites for jdbc_validator\n                        sh 'cd build && python ../script/validators/jdbc_validator.py'\n                        sh 'cd build && python ../script/testing/junit/run_junit.py'\n                    }\n                }\n\n                stage('Ubuntu Xenial/gcc-5.4.0/llvm-3.7.1 (LOG_LEVEL_TRACE)') {\n                    agent { docker { image 'ubuntu:xenial' } }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'python ./script/validators/source_validator.py'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address -DCMAKE_CXX_FLAGS=\"-DLOG_LEVEL=LOG_LEVEL_TRACE\" -DCOVERALLS=False .. && make -j4'\n                    }\n                }\n\n                stage('macOS 10.13/Apple LLVM version 9.1.0 (Debug)') {\n                    agent { label 'macos' }\n                    steps {\n                        sh 'sudo /bin/bash -c \"source ./script/installation/packages.sh\"'\n                        sh 'python script/validators/source_validator.py'\n                        sh 'export LLVM_DIR=/usr/local/Cellar/llvm@3.9/3.9.1_1'\n                        sh 'mkdir build'\n                        sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address -DCOVERALLS=False .. && make -j4'\n                        sh 'cd build && ASAN_OPTIONS=detect_container_overflow=0 make check -j4'\n                        sh 'cd build && make install'\n                        sh 'cd build && bash ../script/testing/psql/psql_test.sh'\n                        sh 'cd build && python ../script/validators/jdbc_validator.py'\n                        sh 'cd build && ASAN_OPTIONS=detect_container_overflow=0 python ../script/testing/junit/run_junit.py'\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.49609375,
          "content": "\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.97265625,
          "content": "<a href=\"http://pelotondb.org/\"><img src=\"http://db.cs.cmu.edu/wordpress/wp-content/uploads/2016/07/peloton.jpg\" alt=\"Peloton Logo\"></a>\n-----------------\n[![GitHub license](https://img.shields.io/badge/license-apache-green.svg?style=flat)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Version](https://img.shields.io/badge/version-0.0.5-red.svg?style=flat)](http://pelotondb.org)\n[![Travis Status](https://travis-ci.org/cmu-db/peloton.svg?branch=master)](https://travis-ci.org/cmu-db/peloton)\n[![Jenkins Status](http://jenkins.db.cs.cmu.edu:8080/job/peloton/job/master/badge/icon)](http://jenkins.db.cs.cmu.edu:8080/job/peloton/)\n[![Coverage Status](https://coveralls.io/repos/github/cmu-db/peloton/badge.svg?branch=master)](https://coveralls.io/github/cmu-db/peloton?branch=master)\n\n## UPDATE 2019-03-17\n\nThe Peloton project is **dead**. We have abandoned this repository and moved on to build a new DBMS. There are a several engineering techniques and designs that we learned from this first system on how to support autonomous operations that we are doing a much better job at implementing in the second system.\n\nWe will not accept pull requests for this repository. We will also not respond to questions or problems that you may have with running with this software.\n\nWe will announce the new system later in 2019.\n\n## What Is Peloton?\n\n* A self-driving SQL database management system.\n* Integrated artificial intelligence components that enable autonomous optimization.\n* Native support for byte-addressable non-volatile memory (NVM) storage technology.\n* Lock-free multi-version concurrency control to support real-time analytics.\n* Postgres network-protocol and JDBC compatible.\n* High-performance, lock-free Bw-Tree for indexing.\n* 100% Open-Source (Apache Software License v2.0).\n\n## What Problem Does Peloton Solve?\n\nDuring last two decades, researchers and vendors have built advisory tools to assist database administrators in system tuning and physical design. This work is incomplete because they still require the final decisions on changes in the database, and are reactionary measures that fix problems after they occur.\n\nA new architecture is needed for a truly “self-driving” database management system (DBMS) which is designed for autonomous operations. This is different than earlier attempts because all aspects of the system are controlled by an integrated planning component. In addition to optimizing the system for the current workload, it predicts future workload trends which lets the system prepare itself accordingly. This eliminates the requirement of a human to determine the right way, and reduces time taken to deploy the changes, optimizing the DBMS to provide high-performance. Auto-management of these systems has surpassed the abilities of human experts.\n\nPeloton is a relational database management system designed for fully autonomous optimization of hybrid workloads. See the [peloton wiki](https://github.com/cmu-db/peloton/wiki \"Peloton Wiki\") for more information.\n\n## Installation\n\nCheck out the [installation instructions](https://github.com/cmu-db/peloton/wiki/Installation).\n\n## Supported Platforms\n\nThe Wiki also contains a [list of supported platforms](https://github.com/cmu-db/peloton/wiki/Installation#supported-platforms). \n\n## Development / Contributing\n\nWe invite you to help us build the future of self-driving DBMSs. Please look up the [contributing guide](https://github.com/cmu-db/peloton/blob/master/CONTRIBUTING.md#development) for details.\n\n## Issues\n\nBefore reporting a problem, please check how to [file an issue](https://github.com/cmu-db/peloton/blob/master/CONTRIBUTING.md#file-an-issue) guide.\n\n## Status\n\n_Technology preview_: currently unsupported, possibly due to incomplete functionality or unsuitability for production use.\n\n## Contributors\n\nSee the [people page](https://github.com/cmu-db/peloton/graphs/contributors) for the full listing of contributors.\n\n## License\n\nCopyright (c) 2014-2018 [CMU Database Group](http://db.cs.cmu.edu/)  \nLicensed under the [Apache License](LICENSE).\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}