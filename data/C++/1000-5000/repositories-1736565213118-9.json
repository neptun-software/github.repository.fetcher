{
  "metadata": {
    "timestamp": 1736565213118,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zcash/zcash",
      "stars": 4966,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3486328125,
          "content": "# This configures basic cross-editor formatting.\n#\n# See https://editorconfig.org/ for more info, and to see if your editor\n# requires a plugin to take advantage of it.\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[{Makefile*, *.mk}]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0341796875,
          "content": "src/clientversion.cpp export-subst\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5693359375,
          "content": "*.tar.gz\n*.deb\n*.exe\nsrc/bitcoin\nsrc/zcashd\nsrc/zcashd-wallet-tool\nsrc/zcash-cli\nsrc/zcash-gtest\nsrc/zcash-inspect\nsrc/zcash-tx\nsrc/test/test_bitcoin\nzcutil/bin/\n\n*zcashTest.pk\n*zcashTest.vk\n\n# autoreconf\nMakefile.in\naclocal.m4\nautom4te.cache/\nbuild-aux/config.guess\nbuild-aux/config.sub\nbuild-aux/depcomp\nbuild-aux/install-sh\nbuild-aux/ltmain.sh\nbuild-aux/m4/libtool.m4\nbuild-aux/m4/lt~obsolete.m4\nbuild-aux/m4/ltoptions.m4\nbuild-aux/m4/ltsugar.m4\nbuild-aux/m4/ltversion.m4\nbuild-aux/missing\nbuild-aux/compile\nbuild-aux/test-driver\nconfig.log\nconfig.status\nconfigure\nconfigure~\nlibtool\nsrc/config/bitcoin-config.h\nsrc/config/bitcoin-config.h.in\nsrc/config/stamp-h1\nshare/setup.nsi\nconfdefs.h\nconftest.cpp\nconftest.err\n\nvenv-mnf/\nsrc/univalue/gen\n\n.deps\n.dirstamp\n.libs\n.*.swp\n*.*~*\n*.bak\n*.rej\n*.orig\n*.pyc\n*.o\n*.o.tmp\n*.o-*\n.zcash\n*.a\n*.lib\n*.pb.cc\n*.pb.h\n.vscode\n\n*.log\n*.trs\n*.dmg\n\n*.json.h\n*.raw.h\n\n#libtool object files\n*.lo\n*.la\n\n# Compilation\nMakefile\n\n# Rust\n.cargo/.configured-for-*\n.cargo/config\n.cargo/config.toml\nsrc/rust/gen/\ntarget/\n\n# Unit-tests\nMakefile.test\nsrc/test/buildenv.py\n\n# Resources cpp\nqrc_*.cpp\n\n# Mac specific\n.DS_Store\nbuild\n\n#lcov\n*.gcno\n*.gcda\n/*.info\ntest_bitcoin.coverage/\nzcash-gtest.coverage/\ntotal.coverage/\ncoverage_percent.txt\nafl-temp\n\n#build tests\nlinux-coverage-build\nlinux-build\nwin32-build\nqa/pull-tester/tests_config.py\nqa/pull-tester/tests_config.ini\nqa/cache/*\n\n!src/leveldb*/Makefile\n\n/doc/doxygen/\n\nlibzcash_script.pc\n\ncontrib/debian/files\ncontrib/debian/substvars\n\nsrc/fuzzing/*/input\nsrc/fuzzing/*/output\nsrc/fuzz.cpp\n\n.updatecheck-token\n.env\npoetry.lock\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1171875,
          "content": "Please read [our Development Guidelines](https://zcash.readthedocs.io/en/latest/rtd_pages/development_guidelines.html).\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 2.1171875,
          "content": "Copyright (c) 2016-2023 The Zcash developers\nCopyright (c) 2009-2023 The Bitcoin Core developers\nCopyright (c) 2009-2023 Bitcoin Developers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\nThe MIT software license (https://www.opensource.org/licenses/mit-license.php)\nabove applies to the code directly included in this source distribution, with\nthe exception of certain Autoconf macros. Dependencies downloaded as part of\nthe build process may be covered by other open-source licenses. The MIT-licensed\nsource code is not considered a derived work of these Autoconf macros or of the\ndependencies. For further details see 'contrib/debian/copyright'.\n\n\nAlthough almost all of the Zcash code is licensed under \"permissive\" open source\nlicenses, users and distributors should note that when built using the default\nbuild options, Zcash depends on Oracle Berkeley DB 6.2.x, which is licensed under\nthe GNU Affero General Public License.\n\n\nContributors should understand licensing implications before modifying the\nfollowing files in build-aux/m4 (see https://github.com/zcash/zcash/issues/2827):\n\n * ax_check_compile_flag.m4\n * ax_check_link_flag.m4\n * ax_check_preproc_flag.m4\n * ax_pthread.m4\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 69.404296875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5fb1d8e4442bd405fdfd1dacb42792696b0cf9cb15882e5d097b742a676d375\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aead\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0\"\ndependencies = [\n \"crypto-common\",\n \"generic-array\",\n]\n\n[[package]]\nname = \"aes\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86fdf8605db99b54d3cd748a44c6d04df638eb5dafb219b135d0149bd0db01f6\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a32fd6af2b5827bce66c29053ba0e7c42b9dcab01835835058558c10851a46b\"\n\n[[package]]\nname = \"bech32\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d965446196e3b7decd44aa7ee49e31d630118f90ef12f97900f262eb915c951d\"\n\n[[package]]\nname = \"bellman\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9afceed28bac7f9f5a508bca8aeeff51cdfa4770c0b967ac55c621e2ddfd6171\"\ndependencies = [\n \"bitvec\",\n \"blake2s_simd\",\n \"byteorder\",\n \"crossbeam-channel\",\n \"ff\",\n \"group\",\n \"lazy_static\",\n \"log\",\n \"num_cpus\",\n \"pairing\",\n \"rand_core\",\n \"rayon\",\n \"subtle\",\n]\n\n[[package]]\nname = \"bip0039\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef0f0152ec5cf17f49a5866afaa3439816207fd4f0a224c0211ffaf5e278426\"\ndependencies = [\n \"hmac\",\n \"pbkdf2\",\n \"rand\",\n \"sha2\",\n \"unicode-normalization\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"bip32\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa13fae8b6255872fd86f7faf4b41168661d7d78609f7bfe6771b85c6739a15b\"\ndependencies = [\n \"bs58\",\n \"hmac\",\n \"rand_core\",\n \"ripemd\",\n \"secp256k1\",\n \"sha2\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08807e080ed7f9d5433fa9b275196cfc35414f66a0c79d864dc51a0d825231a3\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e764a1d40d510daf35e07be9eb06e75770908c27d411ee6c92109c9840eaaf7\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bitvec\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c\"\ndependencies = [\n \"funty\",\n \"radium\",\n \"tap\",\n \"wyz\",\n]\n\n[[package]]\nname = \"blake2b_simd\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23285ad32269793932e830392f2fe2f83e26488fd3ec778883a93c8323735780\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"constant_time_eq\",\n]\n\n[[package]]\nname = \"blake2s_simd\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94230421e395b9920d23df13ea5d77a20e1725331f90fbbf6df6040b33f756ae\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"constant_time_eq\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bls12_381\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7bc6d6292be3a19e6379786dac800f551e5865a5bb51ebbe3064ab80433f403\"\ndependencies = [\n \"ff\",\n \"group\",\n \"pairing\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"bridgetree\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef977c7f8e75aa81fc589064c121ab8d32448b7939d34d58df479aa93e65ea5\"\ndependencies = [\n \"incrementalmerkletree\",\n]\n\n[[package]]\nname = \"bs58\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf88ba1141d185c399bee5288d850d63b8369520c1eafc32a0430b5b6c287bf4\"\ndependencies = [\n \"sha2\",\n \"tinyvec\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"428d9aa8fbc0670b7b8d6030a7fadd0f86151cae55e4dbbece15f3780a3dfaf3\"\n\n[[package]]\nname = \"cbc\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72db2f7947ecee9b03b510377e8bb9077afa27176fdbff55c51027e976fdcc48\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"\n\n[[package]]\nname = \"chacha20\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3613f74bd2eac03dad61bd53dbe620703d4371614fe0bc3b9f04dd36fe4e818\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"chacha20poly1305\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10cd79432192d1c0f4e1a0fef9527696cc039165d729fb41b3f4f4f354c2dc35\"\ndependencies = [\n \"aead\",\n \"chacha20\",\n \"cipher\",\n \"poly1305\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"clearscreen\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f8c93eb5f77c9050c7750e14f13ef1033a40a0aac70c6371535b6763a01438c\"\ndependencies = [\n \"nix\",\n \"terminfo\",\n \"thiserror\",\n \"which\",\n \"winapi\",\n]\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8\"\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6\"\n\n[[package]]\nname = \"core2\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"239fa3ae9b63c2dc74bd3fa852d4792b8b305ae64eeede946265b6af62f1fff3\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ba6d68e24814cb8de6bb986db8222d3a027d15872cabc0d18817bc3c0e4471\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"4.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fb8b7c4503de7d6ae7b42ab72a5a59857b4c937ec27a3d4539dba95b5ab2be\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"curve25519-dalek-derive\",\n \"digest\",\n \"fiat-crypto\",\n \"rustc_version\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"curve25519-dalek-derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"cxx\"\nversion = \"1.0.136\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad7c7515609502d316ab9a24f67dc045132d93bfd3f00713389e90d9898bf30d\"\ndependencies = [\n \"cc\",\n \"cxxbridge-cmd\",\n \"cxxbridge-flags\",\n \"cxxbridge-macro\",\n \"foldhash\",\n \"link-cplusplus\",\n]\n\n[[package]]\nname = \"cxxbridge-cmd\"\nversion = \"1.0.136\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c33fd49f5d956a1b7ee5f7a9768d58580c6752838d92e39d0d56439efdedc35\"\ndependencies = [\n \"clap\",\n \"codespan-reporting\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"cxxbridge-flags\"\nversion = \"1.0.136\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be0f1077278fac36299cce8446effd19fe93a95eedb10d39265f3bf67b3036c9\"\n\n[[package]]\nname = \"cxxbridge-macro\"\nversion = \"1.0.136\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3da7e4d6e74af6b79031d264b2f13c3ea70af1978083741c41ffce9308f1f24f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"der\"\nversion = \"0.7.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55bf8e7b65898637379c1b74eb1551107c8294ed26d855ceb9fd1a09cfc9bc0\"\ndependencies = [\n \"const-oid\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3aa72a6f96ea37bbc5aa912f6788242832f75369bdfdadcb0e38423f100059\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"ed25519\"\nversion = \"2.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"115531babc129696a58c64a4fef0a8bf9e9698629fb97e9e40767d235cfbcd53\"\ndependencies = [\n \"pkcs8\",\n \"serde\",\n \"signature\",\n]\n\n[[package]]\nname = \"ed25519-zebra\"\nversion = \"4.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d9ce6874da5d4415896cd45ffbc4d1cfc0c4f9c079427bd870742c30f2f65a9\"\ndependencies = [\n \"curve25519-dalek\",\n \"ed25519\",\n \"hashbrown 0.14.5\",\n \"hex\",\n \"rand_core\",\n \"serde\",\n \"sha2\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"equihash\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab579d7cf78477773b03e80bc2f89702ef02d7112c711d54ca93dcdce68533d5\"\ndependencies = [\n \"blake2b_simd\",\n \"byteorder\",\n]\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"f4jumble\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d42773cb15447644d170be20231a3268600e0c4cea8987d013b93ac973d3cf7\"\ndependencies = [\n \"blake2b_simd\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"ff\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449\"\ndependencies = [\n \"bitvec\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"fiat-crypto\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28dea519a9695b9977216879a3ebfddf92f1c08c05d984f8996aecd6ecdc811d\"\n\n[[package]]\nname = \"fixed-hash\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"835c052cb0c08c1acf6ffd71c022172e18723949c8282f2b9f27efbc51e64534\"\ndependencies = [\n \"static_assertions\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"fpe\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c4b37de5ae15812a764c958297cfc50f5c010438f60c6ce75d11b802abd404\"\ndependencies = [\n \"cbc\",\n \"cipher\",\n \"libm\",\n \"num-bigint\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"funty\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c\"\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"pin-project-lite\",\n \"pin-utils\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32085ea23f3234fc7846555e85283ba4de91e21016dc0455a16286d87a292d64\"\n\n[[package]]\nname = \"group\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63\"\ndependencies = [\n \"ff\",\n \"memuse\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"gumdrop\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bc700f989d2f6f0248546222d9b4258f5b02a171a431f8285a81c08142629e3\"\ndependencies = [\n \"gumdrop_derive\",\n]\n\n[[package]]\nname = \"gumdrop_derive\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"729f9bd3449d77e7831a18abfb7ba2f99ee813dfd15b8c2167c9a54ba20aa99d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"halo2_gadgets\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73a5e510d58a07d8ed238a5a8a436fe6c2c79e1bb2611f62688bc65007b4e6e7\"\ndependencies = [\n \"arrayvec\",\n \"bitvec\",\n \"ff\",\n \"group\",\n \"halo2_poseidon\",\n \"halo2_proofs\",\n \"lazy_static\",\n \"pasta_curves\",\n \"rand\",\n \"sinsemilla\",\n \"subtle\",\n \"uint\",\n]\n\n[[package]]\nname = \"halo2_legacy_pdqsort\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47716fe1ae67969c5e0b2ef826f32db8c3be72be325e1aa3c1951d06b5575ec5\"\n\n[[package]]\nname = \"halo2_poseidon\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa3da60b81f02f9b33ebc6252d766f843291fb4d2247a07ae73d20b791fc56f\"\ndependencies = [\n \"bitvec\",\n \"ff\",\n \"group\",\n \"pasta_curves\",\n]\n\n[[package]]\nname = \"halo2_proofs\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b867a8d9bbb85fca76fff60652b5cd19b853a1c4d0665cb89bee68b18d2caf0\"\ndependencies = [\n \"blake2b_simd\",\n \"ff\",\n \"group\",\n \"halo2_legacy_pdqsort\",\n \"maybe-rayon\",\n \"pasta_curves\",\n \"rand_core\",\n \"tracing\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ff8ae62cd3a9102e5637afc8452c55acf3844001bd5374e0b0bd7b6616c038\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\"\ndependencies = [\n \"bytes\",\n \"http\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fcc0b4a115bf80b728eb8ea024ad5bd707b615bfed49e0665b6e0f86fd082d9\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"hyper\"\nversion = \"0.14.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a152ddd61dfaec7273fe8419ab357f33aee0d914c5f4efbf0d96fa749eea5ec9\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n \"want\",\n]\n\n[[package]]\nname = \"incrementalmerkletree\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216c71634ac6f6ed13c2102d64354c0a04dcbdc30e31692c5972d3974d8b6d97\"\ndependencies = [\n \"either\",\n \"proptest\",\n \"rand\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"incrementalmerkletree-testing\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc7fb094e413bc6daea7b30a6f2c749e47fd07e98691c6ef3b3423d4ef4b7fb6\"\ndependencies = [\n \"incrementalmerkletree\",\n \"proptest\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n]\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"jubjub\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8499f7a74008aafbecb2a2e608a3e13e4dd3e84df198b604451efe93f2de6e61\"\ndependencies = [\n \"bitvec\",\n \"bls12_381\",\n \"ff\",\n \"group\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"known-folders\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7d9a1740cc8b46e259a0eb787d79d855e79ff10b9855a5eba58868d5da7927c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.159\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"561d97a539a36e26a9a5fad1ea11a3039a67714694aaa379433e580854bc3dc5\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"librustzcash\"\nversion = \"0.2.0\"\ndependencies = [\n \"anyhow\",\n \"backtrace\",\n \"bellman\",\n \"bip0039\",\n \"blake2b_simd\",\n \"blake2s_simd\",\n \"bls12_381\",\n \"bridgetree\",\n \"byteorder\",\n \"clearscreen\",\n \"crossbeam-channel\",\n \"cxx\",\n \"ed25519-zebra\",\n \"getrandom\",\n \"group\",\n \"gumdrop\",\n \"hex\",\n \"incrementalmerkletree\",\n \"ipnet\",\n \"jubjub\",\n \"libc\",\n \"memuse\",\n \"metrics\",\n \"metrics-exporter-prometheus\",\n \"metrics-util\",\n \"nonempty\",\n \"orchard\",\n \"proptest\",\n \"rand\",\n \"rand_core\",\n \"rayon\",\n \"redjubjub\",\n \"sapling-crypto\",\n \"secp256k1\",\n \"secrecy\",\n \"subtle\",\n \"thiserror\",\n \"time\",\n \"tokio\",\n \"tracing\",\n \"tracing-appender\",\n \"tracing-core\",\n \"tracing-subscriber\",\n \"wagyu-zcash-parameters\",\n \"zcash_address\",\n \"zcash_encoding\",\n \"zcash_history\",\n \"zcash_note_encryption\",\n \"zcash_primitives\",\n \"zcash_proofs\",\n \"zcash_protocol\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"link-cplusplus\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d240c6f7e1ba3a28b0249f774e6a9dd0175054b52dfbb61b16eb8505c3785c9\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"mach2\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b955cdeb2a02b9117f121ce63aa52d08ade45de53e48fe6a38b39c10f6f709\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"maybe-rayon\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea1f30cedd69f0a2954655f7188c6a834246d2bcf1e315e2ac40c4b24dc9519\"\ndependencies = [\n \"cfg-if\",\n \"rayon\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memuse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d97bbf43eb4f088f8ca469930cde17fa036207c9a5e02ccc5107c4e8b17c964\"\ndependencies = [\n \"nonempty\",\n]\n\n[[package]]\nname = \"metrics\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fde3af1a009ed76a778cb84fdef9e7dbbdf5775ae3e4cc1f434a6a307f6f76c5\"\ndependencies = [\n \"ahash\",\n \"metrics-macros\",\n \"portable-atomic\",\n]\n\n[[package]]\nname = \"metrics-exporter-prometheus\"\nversion = \"0.12.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d4fa7ce7c4862db464a37b0b31d89bca874562f034bd7993895572783d02950\"\ndependencies = [\n \"base64\",\n \"hyper\",\n \"indexmap\",\n \"ipnet\",\n \"metrics\",\n \"metrics-util\",\n \"quanta\",\n \"thiserror\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"metrics-macros\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b4faf00617defe497754acde3024865bc143d44a86799b24e191ecff91354f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"metrics-util\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4de2ed6e491ed114b40b732e4d1659a9d53992ebd87490c44a6ffe23739d973e\"\ndependencies = [\n \"aho-corasick\",\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n \"hashbrown 0.13.1\",\n \"metrics\",\n \"num_cpus\",\n \"quanta\",\n \"sketches-ddsketch\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab2156c4fce2f8df6c499cc1c763e4394b7482525bf2a9701c9d79d215f519e4\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nonempty\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e9e591e719385e6ebaeb5ce5d3887f7d5676fceca6411d1925ccc95745f3d6f7\"\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"084f1a5821ac4c651660a94a7153d27ac9d8a53736203f58b31945ded098070a\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"opaque-debug\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08d65885ee38876c4f86fa503fb49d7b507c2b62552df7c70b2fce627e06381\"\n\n[[package]]\nname = \"orchard\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f18e997fa121de5c73e95cdc7e8512ae43b7de38904aeea5e5713cc48f3c0ba\"\ndependencies = [\n \"aes\",\n \"bitvec\",\n \"blake2b_simd\",\n \"ff\",\n \"fpe\",\n \"group\",\n \"halo2_gadgets\",\n \"halo2_proofs\",\n \"hex\",\n \"incrementalmerkletree\",\n \"lazy_static\",\n \"memuse\",\n \"nonempty\",\n \"pasta_curves\",\n \"proptest\",\n \"rand\",\n \"reddsa\",\n \"serde\",\n \"subtle\",\n \"tracing\",\n \"visibility\",\n \"zcash_note_encryption\",\n \"zcash_spec\",\n \"zip32\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"pairing\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81fec4625e73cf41ef4bb6846cafa6d44736525f442ba45e407c4a000a13996f\"\ndependencies = [\n \"group\",\n]\n\n[[package]]\nname = \"password-hash\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d791538a6dcc1e7cb7fe6f6b58aca40e7f79403c45b2bc274008b5e647af1d8\"\ndependencies = [\n \"base64ct\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"pasta_curves\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3e57598f73cc7e1b2ac63c79c517b31a0877cd7c402cdcaa311b5208de7a095\"\ndependencies = [\n \"blake2b_simd\",\n \"ff\",\n \"group\",\n \"lazy_static\",\n \"rand\",\n \"static_assertions\",\n \"subtle\",\n]\n\n[[package]]\nname = \"pbkdf2\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271779f35b581956db91a3e55737327a03aa051e90b1c47aeb189508533adfd7\"\ndependencies = [\n \"digest\",\n \"password-hash\",\n]\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7\"\ndependencies = [\n \"der\",\n \"spki\",\n]\n\n[[package]]\nname = \"poly1305\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8159bd90725d2df49889a078b54f4f79e87f1f8a8444194cdca81d38f5393abf\"\ndependencies = [\n \"cpufeatures\",\n \"opaque-debug\",\n \"universal-hash\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d30538d42559de6b034bc76fd6dd4c38961b1ee5c6c56e3808c50128fdbc22ce\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"primitive-types\"\nversion = \"0.12.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b34d9fd68ae0b74a41b21c03c2f62847aa0ffea044eee893b4c140b37e244e2\"\ndependencies = [\n \"fixed-hash\",\n \"uint\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proptest\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14cae93065090804185d3b75f0bf93b8eeda30c7a9b4a33d3bdb3988d6229e50\"\ndependencies = [\n \"bit-set\",\n \"bit-vec\",\n \"bitflags 2.6.0\",\n \"lazy_static\",\n \"num-traits\",\n \"rand\",\n \"rand_chacha\",\n \"rand_xorshift\",\n \"regex-syntax 0.8.4\",\n \"rusty-fork\",\n \"tempfile\",\n \"unarray\",\n]\n\n[[package]]\nname = \"quanta\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a17e662a7a8291a865152364c20c7abc5e60486ab2001e8ec10b24862de0b9ab\"\ndependencies = [\n \"crossbeam-utils\",\n \"libc\",\n \"mach2\",\n \"once_cell\",\n \"raw-cpuid\",\n \"wasi\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_xorshift\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"raw-cpuid\"\nversion = \"10.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c297679cb867470fa8c9f67dbba74a78d78e3e98d7cf2b08d6d71540f797332\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"reddsa\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78a5191930e84973293aa5f532b513404460cd2216c1cfb76d08748c15b40b02\"\ndependencies = [\n \"blake2b_simd\",\n \"byteorder\",\n \"group\",\n \"hex\",\n \"jubjub\",\n \"pasta_curves\",\n \"rand_core\",\n \"serde\",\n \"thiserror\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"redjubjub\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a60db2c3bc9c6fd1e8631fee75abc008841d27144be744951d6b9b75f9b569c\"\ndependencies = [\n \"rand_core\",\n \"reddsa\",\n \"serde\",\n \"thiserror\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.7\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"ripemd\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd124222d17ad93a644ed9d011a40f4fb64aa54275c08cc216524a9ea82fb09f\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"rusty-fork\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb3dcc6e454c328bb824492db107ab7c0ae8fcffe4ad210136ef014458c1bc4f\"\ndependencies = [\n \"fnv\",\n \"quick-error\",\n \"tempfile\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"sapling-crypto\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfff8cfce16aeb38da50b8e2ed33c9018f30552beff2210c266662a021b17f38\"\ndependencies = [\n \"aes\",\n \"bellman\",\n \"bitvec\",\n \"blake2b_simd\",\n \"blake2s_simd\",\n \"bls12_381\",\n \"byteorder\",\n \"document-features\",\n \"ff\",\n \"fpe\",\n \"group\",\n \"hex\",\n \"incrementalmerkletree\",\n \"jubjub\",\n \"lazy_static\",\n \"memuse\",\n \"proptest\",\n \"rand\",\n \"rand_core\",\n \"redjubjub\",\n \"subtle\",\n \"tracing\",\n \"zcash_note_encryption\",\n \"zcash_spec\",\n \"zip32\",\n]\n\n[[package]]\nname = \"secp256k1\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25996b82292a7a57ed3508f052cfff8640d38d32018784acd714758b43da9c8f\"\ndependencies = [\n \"secp256k1-sys\",\n]\n\n[[package]]\nname = \"secp256k1-sys\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70a129b9e9efbfb223753b9163c4ab3b13cff7fd9c7f010fbac25ab4099fa07e\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"secrecy\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bd1c54ea06cfd2f6b63219704de0b9b4f72dcc2b8fdef820be6cd799780e91e\"\ndependencies = [\n \"zeroize\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signature\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"sinsemilla\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d268ae0ea06faafe1662e9967cd4f9022014f5eeb798e0c302c876df8b7af9c\"\ndependencies = [\n \"group\",\n \"pasta_curves\",\n \"subtle\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"sketches-ddsketch\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85636c14b73d81f541e525f585c0a2109e6744e1565b5c1668e31c70c10ed65c\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d\"\ndependencies = [\n \"base64ct\",\n \"der\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.94\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"987bc0be1cdea8b10216bd06e2ca407d40b9543468fafd3ddfb02f36e77f71f3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tap\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"terminfo\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"666cd3a6681775d22b200409aad3b089c5b99fb11ecdd8a204d9d62f8148498f\"\ndependencies = [\n \"dirs\",\n \"fnv\",\n \"nom\",\n \"phf\",\n \"phf_codegen\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d50af8abc119fb8bb6dbabcfa89656f46f84aa0ac7688088608076ad2b459a84\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08904e7672f5eb876eaaf87e0ce17857500934f4981c4a0ab2b4aa98baac7fc3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"022db8904dfa342efe721985167e9fcd16c29b226db4397ed752a761cfce81e8\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.40.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2b070231665d27ad9ec9b8df639893f46727666c6767db40317fbe920a5d998\"\ndependencies = [\n \"backtrace\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-appender\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3566e8ce28cc0a3fe42519fc80e6b4c943cc4c8cef275620eb8dac2d3d4e06cf\"\ndependencies = [\n \"crossbeam-channel\",\n \"thiserror\",\n \"time\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"thread_local\",\n \"time\",\n \"tracing\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uint\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76f64bba2c53b04fcab63c01a7d7427eadc821e3bc48c34dc9ba29c501164b52\"\ndependencies = [\n \"byteorder\",\n \"crunchy\",\n \"hex\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"unarray\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eaea85b334db583fe3274d12b4cd1880032beab409c0d774be044d4480ab9a94\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"universal-hash\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc1de2c688dc15305988b563c3854064043356019f97a4b46276fe734c4f07ea\"\ndependencies = [\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"visibility\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d674d135b4a8c1d7e813e2f8d1c9a58308aee4a680323066025e53132218bd91\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"wagyu-zcash-parameters\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c904628658374e651288f000934c33ef738b2d8b3e65d4100b70b395dbe2bb\"\ndependencies = [\n \"wagyu-zcash-parameters-1\",\n \"wagyu-zcash-parameters-2\",\n \"wagyu-zcash-parameters-3\",\n \"wagyu-zcash-parameters-4\",\n \"wagyu-zcash-parameters-5\",\n \"wagyu-zcash-parameters-6\",\n]\n\n[[package]]\nname = \"wagyu-zcash-parameters-1\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bf2e21bb027d3f8428c60d6a720b54a08bf6ce4e6f834ef8e0d38bb5695da8\"\n\n[[package]]\nname = \"wagyu-zcash-parameters-2\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a616ab2e51e74cc48995d476e94de810fb16fc73815f390bf2941b046cc9ba2c\"\n\n[[package]]\nname = \"wagyu-zcash-parameters-3\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14da1e2e958ff93c0830ee68e91884069253bf3462a67831b02b367be75d6147\"\n\n[[package]]\nname = \"wagyu-zcash-parameters-4\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f058aeef03a2070e8666ffb5d1057d8bb10313b204a254a6e6103eb958e9a6d6\"\n\n[[package]]\nname = \"wagyu-zcash-parameters-5\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ffe916b30e608c032ae1b734f02574a3e12ec19ab5cc5562208d679efe4969d\"\n\n[[package]]\nname = \"wagyu-zcash-parameters-6\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7b6d5a78adc3e8f198e9cd730f219a695431467f7ec29dcfc63ade885feebe1\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26fdeaafd9bd129f65e7c031593c24d62186301e0c72c8978fa1678be7d532c0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"6.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ee928febd44d98f2f459a4a79bd4d928591333a494a10a868418ac1b39cf1f\"\ndependencies = [\n \"either\",\n \"home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"wyz\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed\"\ndependencies = [\n \"tap\",\n]\n\n[[package]]\nname = \"xdg\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546\"\n\n[[package]]\nname = \"zcash_address\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b955fe87f2d9052e3729bdbeb0e94975355f4fe39f7d26aea9457bec6a0bb55\"\ndependencies = [\n \"bech32\",\n \"bs58\",\n \"core2\",\n \"f4jumble\",\n \"zcash_encoding\",\n \"zcash_protocol\",\n]\n\n[[package]]\nname = \"zcash_encoding\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3654116ae23ab67dd1f849b01f8821a8a156f884807ff665eac109bf28306c4d\"\ndependencies = [\n \"core2\",\n \"nonempty\",\n]\n\n[[package]]\nname = \"zcash_history\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2fde17bf53792f9c756b313730da14880257d7661b5bfc69d0571c3a7c11a76d\"\ndependencies = [\n \"blake2b_simd\",\n \"byteorder\",\n \"primitive-types\",\n]\n\n[[package]]\nname = \"zcash_note_encryption\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77efec759c3798b6e4d829fcc762070d9b229b0f13338c40bf993b7b609c2272\"\ndependencies = [\n \"chacha20\",\n \"chacha20poly1305\",\n \"cipher\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"zcash_primitives\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ab47d526d7fd6f88b3a2854ad81b54757a80c2aeadd1d8b06f690556af9743c\"\ndependencies = [\n \"aes\",\n \"bip32\",\n \"blake2b_simd\",\n \"bs58\",\n \"byteorder\",\n \"document-features\",\n \"equihash\",\n \"ff\",\n \"fpe\",\n \"group\",\n \"hex\",\n \"incrementalmerkletree\",\n \"jubjub\",\n \"memuse\",\n \"nonempty\",\n \"orchard\",\n \"proptest\",\n \"rand\",\n \"rand_core\",\n \"redjubjub\",\n \"ripemd\",\n \"sapling-crypto\",\n \"secp256k1\",\n \"sha2\",\n \"subtle\",\n \"tracing\",\n \"zcash_address\",\n \"zcash_encoding\",\n \"zcash_note_encryption\",\n \"zcash_protocol\",\n \"zcash_spec\",\n \"zip32\",\n]\n\n[[package]]\nname = \"zcash_proofs\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daba607872e60d91a09248d8e1ea3d6801c819fb80d67016d9de02d81323c10d\"\ndependencies = [\n \"bellman\",\n \"blake2b_simd\",\n \"bls12_381\",\n \"document-features\",\n \"group\",\n \"home\",\n \"jubjub\",\n \"known-folders\",\n \"lazy_static\",\n \"rand_core\",\n \"redjubjub\",\n \"sapling-crypto\",\n \"tracing\",\n \"xdg\",\n \"zcash_primitives\",\n]\n\n[[package]]\nname = \"zcash_protocol\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82cb36b15b5a1be70b30c32ce40372dead6561df8a467e297f96b892873a63a2\"\ndependencies = [\n \"core2\",\n \"document-features\",\n \"hex\",\n \"incrementalmerkletree\",\n \"incrementalmerkletree-testing\",\n \"memuse\",\n \"proptest\",\n]\n\n[[package]]\nname = \"zcash_spec\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cede95491c2191d3e278cab76e097a44b17fde8d6ca0d4e3a22cf4807b2d857\"\ndependencies = [\n \"blake2b_simd\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.94\",\n]\n\n[[package]]\nname = \"zip32\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e9943793abf9060b68e1889012dafbd5523ab5b125c0fcc24802d69182f2ac9\"\ndependencies = [\n \"blake2b_simd\",\n \"memuse\",\n \"subtle\",\n \"zcash_spec\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.90234375,
          "content": "[package]\nname = \"librustzcash\"\ndescription = \"Rust FFI used by the zcashd binary. Not an official API.\"\nversion = \"0.2.0\"\nauthors = [\n    \"Sean Bowe <sean@electriccoin.co>\",\n    \"Jay Graber\",\n    \"Jack Grigg <jack@electriccoin.co>\",\n    \"Daira-Emma Hopwood <daira@jacaranda.org>\",\n    \"Ying Tong Lai\",\n    \"Simon Liu\",\n    \"Kris Nuttycombe <kris@electriccoin.co>\",\n    \"Greg Pfeil\",\n    \"Larry Ruane <larry@electriccoin.co>\",\n    \"Steven Smith\",\n]\nhomepage = \"https://github.com/zcash/zcash\"\nrepository = \"https://github.com/zcash/zcash\"\nreadme = \"README.md\"\nlicense = \"MIT OR Apache-2.0\"\nedition = \"2018\"\nrust-version = \"1.81\"\n\n[package.metadata.vet]\nstore = { path = \"./qa/supply-chain\" }\n\n[lib]\nname = \"rustzcash\"\npath = \"src/rust/src/lib.rs\"\ncrate-type = [\"staticlib\"]\n\n[[bin]]\nname = \"zcashd-wallet-tool\"\npath = \"src/rust/bin/wallet_tool.rs\"\n\n[dependencies]\nbellman = \"0.14\"\nbip0039 = { version = \"0.10.1\", features = [\"std\", \"all-languages\"] }\nblake2b_simd = \"1\"\nblake2s_simd = \"1\"\nbls12_381 = \"0.8\"\nbridgetree = \"0.6\"\nbyteorder = \"1\"\ncrossbeam-channel = \"0.5\"\ngetrandom = \"0.2\"\ngroup = \"0.13\"\nhex = \"0.4\"\nincrementalmerkletree = \"0.7\"\nlibc = \"0.2\"\njubjub = \"0.10\"\nmemuse = \"0.2\"\nnonempty = \"0.7\"\norchard = \"0.10\"\nsapling = { package = \"sapling-crypto\", version = \"0.3\", features = [\"temporary-zcashd\"] }\nsecp256k1 = \"0.27\"\nsubtle = \"2.2\"\nrand_core = \"0.6\"\nredjubjub = \"0.7\"\ntracing = \"0.1\"\ntracing-core = \"0.1\"\ntracing-appender = \"0.2\"\nzcash_address = \"0.6\"\nzcash_encoding = \"0.2.1\"\nzcash_history = \"0.4\"\nzcash_note_encryption = \"0.4\"\nzcash_primitives = { version = \"0.19\", features = [\"temporary-zcashd\", \"transparent-inputs\"] }\nzcash_proofs = { version = \"0.19\", features = [\"directories\"] }\nzcash_protocol = { version = \"0.4\", features = [\"local-consensus\"] }\ned25519-zebra = \"4\"\nzeroize = \"1.4.2\"\nwagyu-zcash-parameters = \"0.2\"\n\n# Rust/C++ interop\n# The version needs to match depends/packages/native_cxxbridge.mk\ncxx = { version = \"=1.0.136\", features = [\"c++17\"] }\n\n# Rust threading\nrayon = \"1.5\"\n\n# Metrics\nipnet = \"2\"\nmetrics = \"0.21\"\nmetrics-exporter-prometheus = \"0.12\"\nmetrics-util = { version = \"0.15\", default-features = false, features = [\"layer-filter\"] }\ntokio = { version = \"1\", features = [\"rt\", \"net\", \"time\"] }\n\n# General tool dependencies\ngumdrop = \"0.8\"\n\n# Wallet tool\n# (also depends on tracing, and tracing-subscriber with \"env-filter\" and \"fmt\" features)\nanyhow = \"1.0\"\nbacktrace = \"0.3\"\nclearscreen = \"3\"\nrand = \"0.8\"\nsecrecy = \"0.8\"\nthiserror = \"1\"\ntime = { version = \"0.3\", features = [\"formatting\", \"macros\"] }\n\n[dev-dependencies]\nincrementalmerkletree = { version = \"0.7\", features = [\"test-dependencies\"] }\nproptest = \"1.0.0\"\nzcash_primitives = { version = \"0.19\", features = [\"temporary-zcashd\", \"transparent-inputs\", \"test-dependencies\"] }\n\n[dependencies.tracing-subscriber]\nversion = \"0.3\"\ndefault-features = false\nfeatures = [\"ansi\", \"env-filter\", \"fmt\", \"time\"]\n\n[profile.release]\nlto = 'thin'\npanic = 'abort'\ncodegen-units = 1\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.2294921875,
          "content": "Building Zcash\n\nSee the Zcash documentation wiki (https://zcash.readthedocs.io/en/latest/rtd_pages/zcashd.html) for instructions on building zcashd,\nthe intended-for-services, no-graphical-interface, reference\nimplementation of Zcash.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 6.9462890625,
          "content": "# Copyright (c) 2016-2019 The Zcash developers\n# Copyright (c) 2013-2019 The Bitcoin Core developers\n# Copyright (c) 2013-2019 Bitcoin Developers\n# Distributed under the MIT software license, see the accompanying\n# file COPYING or https://www.opensource.org/licenses/mit-license.php .\n\n# Pattern rule to print variables, e.g. make print-top_srcdir\nprint-%:\n\t@echo $* = $($*)\n\nACLOCAL_AMFLAGS = -I build-aux/m4\nSUBDIRS = src\nif ENABLE_MAN\nSUBDIRS += doc/man\nendif\n.PHONY: deploy FORCE rpc-tests\n\nif BUILD_BITCOIN_LIBS\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = libzcash_script.pc\nendif\n\nBITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\nBITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n\nDIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n\nBIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n           $(top_srcdir)/contrib/devtools/security-check.py\n\nCOVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n  baseline_filtered.info \\\n  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info \\\n  zcash-gtest.info zcash-gtest_filtered.info zcash-gtest_coverage.info\n\ndist-hook:\n\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n\n$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n\t$(MAKE) -C src $(patsubst src/%,%,$@)\n\n$(BITCOIND_BIN): FORCE\n\t$(MAKE) -C src $(@F)\n\n$(BITCOIN_CLI_BIN): FORCE\n\t$(MAKE) -C src $(@F)\n\ncheck-security: FORCE\n\t$(MAKE) -C src check-security\n\ncheck-symbols: FORCE\n\t$(MAKE) -C src check-symbols\n\nif USE_LCOV\n\nbaseline.info:\n\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n\nbaseline_filtered.info: baseline.info\n\t$(LCOV) -r $< \"/usr/include/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/*.h\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/boost/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gmock/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gtest/*\" \\\n                      \"$(abs_builddir)/src/gtest/*\" \\\n                      \"$(abs_builddir)/src/test/*\" \\\n                      \"$(abs_builddir)/src/wallet/gtest/*\" \\\n                      \"$(abs_builddir)/src/wallet/test/*\" \\\n                      -o $@\n\nleveldb_baseline.info: baseline_filtered.info\n\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n\nleveldb_baseline_filtered.info: leveldb_baseline.info\n\t$(LCOV) -r $< \"/usr/include/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/*.h\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/boost/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gmock/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gtest/*\" \\\n                      \"$(abs_builddir)/src/gtest/*\" \\\n                      \"$(abs_builddir)/src/test/*\" \\\n                      \"$(abs_builddir)/src/wallet/gtest/*\" \\\n                      \"$(abs_builddir)/src/wallet/test/*\" \\\n                      -o $@\n\nbaseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n\ntest_bitcoin.info: baseline_filtered_combined.info\n\t$(MAKE) -C src/ bitcoin_test_check\n\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n\t$(LCOV) -z -d $(abs_builddir)/src\n\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n\ntest_bitcoin_filtered.info: test_bitcoin.info\n\t$(LCOV) -r $< \"/usr/include/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/*.h\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/boost/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gmock/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gtest/*\" \\\n                      \"$(abs_builddir)/src/gtest/*\" \\\n                      \"$(abs_builddir)/src/test/*\" \\\n                      \"$(abs_builddir)/src/wallet/gtest/*\" \\\n                      \"$(abs_builddir)/src/wallet/test/*\" \\\n                      -o $@\n\nzcash-gtest.info: baseline_filtered_combined.info\n\t$(MAKE) -C src/ zcash-gtest_check\n\t$(LCOV) -c -d $(abs_builddir)/src -t zcash-gtest -o $@\n\t$(LCOV) -z -d $(abs_builddir)/src\n\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n\nzcash-gtest_filtered.info: zcash-gtest.info\n\t$(LCOV) -r $< \"/usr/include/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/*.h\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/boost/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gmock/*\" \\\n                      \"$(abs_builddir)/depends/x86_64-pc-linux-gnu/include/gtest/*\" \\\n                      \"$(abs_builddir)/src/gtest/*\" \\\n                      \"$(abs_builddir)/src/test/*\" \\\n                      \"$(abs_builddir)/src/wallet/gtest/*\" \\\n                      \"$(abs_builddir)/src/wallet/test/*\" \\\n                      -o $@\n\ntest_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n\nzcash-gtest_coverage.info: baseline_filtered_combined.info zcash-gtest_filtered.info\n\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a zcash-gtest_filtered.info -o $@\n\ntotal_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info zcash-gtest_filtered.info\n\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a zcash-gtest_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n\ntest_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n\t$(GENHTML) -s $< -o $(@D)\n\t@touch $@\n\nzcash-gtest.coverage/.dirstamp:  zcash-gtest_coverage.info\n\t$(GENHTML) -s $< -o $(@D)\n\t@touch $@\n\ncov-zcash: zcash-gtest.coverage/.dirstamp\n\ntotal.coverage/.dirstamp: total_coverage.info\n\t$(GENHTML) -s $< -o $(@D)\n\t@touch $@\n\ncov: test_bitcoin.coverage/.dirstamp cov-zcash total.coverage/.dirstamp\n\nendif\n\ndist_bin_SCRIPTS = zcutil/fetch-params.sh\ndist_noinst_SCRIPTS = autogen.sh zcutil/build-debian-package.sh zcutil/build.sh\n\nRUST_DIST = $(top_srcdir)/.cargo $(top_srcdir)/Cargo.toml $(top_srcdir)/Cargo.lock $(top_srcdir)/rust-toolchain.toml\n\nEXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests qa/zcash $(DIST_DOCS) $(BIN_CHECKS) $(RUST_DIST)\n\ninstall-exec-hook:\n\tmv $(DESTDIR)$(bindir)/fetch-params.sh $(DESTDIR)$(bindir)/zcash-fetch-params\n\n.INTERMEDIATE: $(COVERAGE_INFO)\n\nDISTCHECK_CONFIGURE_FLAGS = --enable-man\n\nclean-local:\n\trm -rf test_bitcoin.coverage/ zcash-gtest.coverage/ total.coverage/\n\trm -rf afl-temp\n\trm -rf qa/pull-tester/__pycache__\n\ndistclean-local:\n\trm -f zcutil/bin/db_*\n\trmdir zcutil/bin 2>/dev/null || true\n\nrpc-tests: $(BITCOIND_BIN)\n\tqa/pull-tester/rpc-tests.py $(RPC_TEST)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.79296875,
          "content": "Zcash 6.1.0\n<img align=\"right\" width=\"120\" height=\"80\" src=\"doc/imgs/logo.png\">\n===========\n\nWhat is Zcash?\n--------------\n\n[Zcash](https://z.cash/) is HTTPS for money.\n\nInitially based on Bitcoin's design, Zcash has been developed from\nthe Zerocash protocol to offer a far higher standard of privacy and\nanonymity. It uses a sophisticated zero-knowledge proving scheme to\npreserve confidentiality and hide the connections between shielded\ntransactions. More technical details are available in our\n[Protocol Specification](https://zips.z.cash/protocol/protocol.pdf).\n\n## The `zcashd` Full Node\n\nThis repository hosts the `zcashd` software, a Zcash consensus node\nimplementation. It downloads and stores the entire history of Zcash\ntransactions. Depending on the speed of your computer and network\nconnection, the synchronization process could take several days.\n\n<p align=\"center\">\n  <img src=\"doc/imgs/zcashd_screen.gif\" height=\"500\">\n</p>\n\nThe `zcashd` code is derived from a source fork of\n[Bitcoin Core](https://github.com/bitcoin/bitcoin). The code was forked\ninitially from Bitcoin Core v0.11.2, and the two codebases have diverged\nsubstantially.\n\n#### :lock: Security Warnings\n\nSee important security warnings on the\n[Security Information page](https://z.cash/support/security/).\n\n**Zcash is experimental and a work in progress.** Use it at your own risk.\n\n####  :ledger: Deprecation Policy\n\nThis release is considered deprecated 16 weeks after the release day. There\nis an automatic deprecation shutdown feature which will halt the node some\ntime after this 16-week period. The automatic feature is based on block\nheight.\n\n## Other Zcash Implementations\n\nThe [Zebra](https://github.com/ZcashFoundation/zebra) project offers a\ndifferent Zcash consensus node implementation, written largely from the\nground up.\n\n## Getting Started\n\nPlease see our [user\nguide](https://zcash.readthedocs.io/en/latest/rtd_pages/rtd_docs/user_guide.html)\nfor instructions on joining the main Zcash network.\n\n### Need Help?\n\n* :blue_book: See the documentation at the [ReadTheDocs](https://zcash.readthedocs.io)\n  for help and more information.\n* :incoming_envelope: Ask for help on the [Zcash](https://forum.z.cash/) forum.\n* :speech_balloon: Join our community on [Discord](https://discord.com/invite/zcash) \n* 🧑‍🎓: Learn at [ZecHub](https://zechub.wiki/)\n\nParticipation in the Zcash project is subject to a\n[Code of Conduct](code_of_conduct.md).\n\n### Building\n\nBuild Zcash along with most dependencies from source by running the following command:\n\n```\n./zcutil/build.sh -j$(nproc)\n```\n\nCurrently, Zcash is only officially supported on Debian and Ubuntu. See the\n[Debian / Ubuntu build](https://zcash.readthedocs.io/en/latest/rtd_pages/Debian-Ubuntu-build.html)\nfor detailed instructions.\n\nLicense\n-------\n\nFor license information see the file [COPYING](COPYING).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 4.5966796875,
          "content": "This page is copyright The Electric Coin Company, 2019. It is posted in order to conform to this standard: https://github.com/RD-Crypto-Spec/Responsible-Disclosure/tree/d47a5a3dafa5942c8849a93441745fdd186731e6\n\n# Security Disclosures\n## Receiving Disclosures\n\nThe Electric Coin Company is committed to working with researchers who submit security vulnerability notifications to us to resolve those issues on an appropriate timeline and perform a coordinated release, giving credit to the reporter if they would like.\n\nPlease submit issues to security@z.cash, using the following PGP key:\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQENBFaegcoBCAC+G82ZBYYm1GoVn4dKa0WiLYD/Q+BuU89PS1X7A4eOOy8g9yS4\nwJKMzB0AxFsH/t85P7pPZwHw3i2gmiJKeIqEGhEBL08D3id2u6ZyCnwDuWs0i6My\nMXWTwK5shvE61ZI/KPbjemoOG6MPF5QdrouNqei2Vk+4RjbRCyyS0A59GQi2dNZX\nBMwTnHnUZ5qi6T0RFelqJ3dE5Nc/UwJPdAcg71c3b3dMOHjaDBMPB6+fTLBeidV6\n5B72nGO3eIYkMUNj+qCQmM/esRkmGmlDH/9WGMBOKCq7Yw3LyEoPOi5cba1m8SN2\nxFlNzkUGrlVrwZMF+1UdjvN7BGDypA3Dr/STABEBAAG0JVpjYXNoIFNlY3VyaXR5\nIFRlYW0gPHNlY3VyaXR5QHouY2FzaD6JATcEEwEIACEFAlaegcoCGwMFCwkIBwIG\nFQgJCgsCBBYCAwECHgECF4AACgkQiPuLhti1poxlRAf/bZ6fhUby5bAbViAO4TzQ\nyfbD0ksGeF8MHicPz7HqOYuXAE9GrKnVAOFptwRo94O+iRC5aXhW8OAP+38IWorv\ngsAuag7Y8k0nlfNdrJRqqJpjyxtiuv+cd2o5dre8E9PVNE5IPv9qEJA4Zag3snmC\na+O4HAqKeXYddunFq2drLkTRlOwuFkGXJzwi3VSNVYCuuGyezFDuaD45ltmsXgid\njZSdnnc6L1BrEd9LVzahvFV0+fT4bNKQHQDk+f0RTnHed+m9NqAoC9K8ftPTQ/i4\n5+W/dXJATztWDrJ7ZevHXGR+RAhMNsT1psvnQsJzMkUz1GMdQOtk4PfuZLGSIiTM\nErkBDQRWnoHKAQgAp+w+xsPJWFdadE6Ok1aZC0Lk1J9xU/cqX1aBlkwi5SynwOkV\nEg1xNHLJMelp13bgDjLRsvaMbsseaCVk3goNln4atNbZpqz6FoM/f8pJx52LFD0j\nCFFOVUlGEF0h+KdFr+3JHI+mg+3ifXTD4Dajj4lpu8kR/FQjftcxyttByz01wLRO\nsK5BDC856WzHXAJuX6TpX4sGJujzKoLXR5V0SkUopqn9g4aJGnWuNh4kyOQI6fd7\nYZyPZhWDrXdgInCKAKAgq8r6hgSDMYFvmflp6+reCfeOe1VFF8q3Foio02YPIrQW\nWjjH0w6nOvOKCEtxistz1sP6ZoYq4gR41LOwIQARAQABiQEfBBgBCAAJBQJWnoHK\nAhsMAAoJEIj7i4bYtaaMiA4IALIy4xP/Btu86yT3b53t8cfYZddFSO8Nlg+y3EMu\n1LchdSOpWgpXCvQ7d4ndWGsuBSmQ+jaRwU2UIkq2iIxf5cg63dJz9grAcF6MXCrO\nt5BSowFC4m3RFaEaG6G6SjDVIA0ZEdEMFd9Gzc1ikqbVLyNuJXKmzz0evvbAJgVO\nD0nht5ifwLjQxM4olvYHUwtT0wPhniH69ghFo8LQiMgncjaukDzbgANiuj07QYy/\nDlzhQUsp1qZvqZnVKqUJ3lFb86b6zoqoRNiUnvP9JB2v3kLG0T39UlcXUFnZJ/4H\nCDHCrwSovQRMHtoOWZijBNobO2y1d0FkUpzNlNw44Ssw0Vo=\n=6GYS\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n## Sending Disclosures\n\nIn the case where we become aware of security issues affecting other projects that has never affected Zcash, our intention is to inform those projects of security issues on a best effort basis.\n\nIn the case where we fix a security issue in Zcash that also affects the following neighboring projects, our intention is to engage in responsible disclosures with them as described in https://github.com/RD-Crypto-Spec/Responsible-Disclosure, subject to the deviations described in the section at the bottom of this document.\n\n## Bilateral Responsible Disclosure Agreements\n\nWe have set up agreements with the following neighboring projects to share vulnerability information, subject to the deviations described in the next section.\n\nSpecifically, we have agreed to engage in responsible disclosures for security issues affecting this repository with the following contacts:\n\n- Zcash Foundation https://github.com/ZcashFoundation/zebra/security/policy\n- Horizen security@horizen.io https://github.com/HorizenOfficial/zen/blob/master/SECURITY.md\n- Komodo ca333@komodoplatform.com via PGP\n- BitcoinABC https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/DISCLOSURE_POLICY.md\n\n## Deviations from the Standard\n\nZcash is a technology that provides strong privacy. Notes are encrypted to their destination, and then the monetary base is kept via zero-knowledge proofs intended to only be creatable by the real holder of Zcash. If this fails, and a counterfeiting bug results, that counterfeiting bug might be exploited without any way for blockchain analyzers to identify the perpetrator or which data in the blockchain has been used to exploit the bug. Rollbacks before that point, such as have been executed in some other projects in such cases, are therefore impossible.\n\nThe standard describes reporters of vulnerabilities including full details of an issue, in order to reproduce it. This is necessary for instance in the case of an external researcher both demonstrating and proving that there really is a security issue, and that security issue really has the impact that they say it has - allowing the development team to accurately prioritize and resolve the issue.\n\nIn the case of a counterfeiting bug, however, just like in CVE-2019-7167, we might decide not to include those details with our reports to partners ahead of coordinated release, so long as we are sure that they are vulnerable.\n\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.62109375,
          "content": "#!/bin/sh\n# Copyright (c) 2016-2019 The Zcash developers\n# Copyright (c) 2013-2019 The Bitcoin Core developers\n# Copyright (c) 2013-2019 Bitcoin Developers\n# Distributed under the MIT software license, see the accompanying\n# file COPYING or https://www.opensource.org/licenses/mit-license.php .\n\nexport LC_ALL=C\nset -e\nsrcdir=\"$(dirname $0)\"\ncd \"$srcdir\"\nif [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n  export LIBTOOLIZE\nfi\ncommand -v autoreconf >/dev/null || \\\n  (echo \"configuration failed, please install autoconf first\" && exit 1)\nautoreconf --install --force --warnings=all\n"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "code_of_conduct.md",
          "type": "blob",
          "size": 3.1201171875,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating\ndocumentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* The use of language or imagery that originates with, or has been\n  adopted as a symbol or \"dog-whistle\" for, any of: right-wing extremism,\n  anti-Semitism, Islamophobia, white supremacism, eugenics, homophobia, or\n  transphobia (whether or not the use by itself falls into those categories)\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic\n  addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful. Note that contributors may be volunteers\nwho do not represent Electric Coin Company. They are free to express their own\nopinions so long as they adhere to these guidelines.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to\nfairly and consistently applying these principles to every aspect of managing\nthis project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting a project maintainer (see below). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. Maintainers are\nobligated to maintain confidentiality with regard to the reporter of an\nincident.\n\nYou may send reports to [our Conduct email](mailto:conduct@electriccoin.co).\n\nIf you wish to contact specific maintainers directly, the following have made\nthemselves available for conduct issues:\n\n- Daira-Emma Hopwood (daira-emma at electriccoin.co)\n- Kris Nuttycombe (kris at electriccoin.co)\n- Jack Grigg (jack at electriccoin.co)\n\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.3.0, available at\n[https://www.contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: https://www.contributor-covenant.org\n[version]: https://www.contributor-covenant.org/version/1/3/0/\n\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 49.7060546875,
          "content": "dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\nAC_PREREQ([2.60])\ndefine(_CLIENT_VERSION_MAJOR, 6)\ndefine(_CLIENT_VERSION_MINOR, 1)\ndefine(_CLIENT_VERSION_REVISION, 0)\ndefine(_CLIENT_VERSION_BUILD, 50)\ndefine(_ZC_BUILD_VAL, m4_if(m4_eval(_CLIENT_VERSION_BUILD < 25), 1, m4_incr(_CLIENT_VERSION_BUILD), m4_eval(_CLIENT_VERSION_BUILD < 50), 1, m4_eval(_CLIENT_VERSION_BUILD - 24), m4_eval(_CLIENT_VERSION_BUILD == 50), 1, , m4_eval(_CLIENT_VERSION_BUILD - 50)))\ndefine(_CLIENT_VERSION_SUFFIX, m4_if(m4_eval(_CLIENT_VERSION_BUILD < 25), 1, _CLIENT_VERSION_REVISION-beta$1, m4_eval(_CLIENT_VERSION_BUILD < 50), 1, _CLIENT_VERSION_REVISION-rc$1, m4_eval(_CLIENT_VERSION_BUILD == 50), 1, _CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION-$1)))\ndefine(_CLIENT_VERSION_IS_RELEASE, true)\ndefine(_COPYRIGHT_YEAR, 2023)\nAC_INIT([Zcash],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_SUFFIX(_ZC_BUILD_VAL)],[https://github.com/zcash/zcash/issues],[zcash])\nAC_CONFIG_SRCDIR([src/main.cpp])\nAC_CONFIG_HEADERS([src/config/bitcoin-config.h])\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIR([build-aux/m4])\n\nBITCOIN_DAEMON_NAME=zcashd\nBITCOIN_CLI_NAME=zcash-cli\nBITCOIN_TX_NAME=zcash-tx\n\ndnl Unless the user specified ARFLAGS, force it to be cr\nAC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\nif test \"x${ARFLAGS+set}\" != \"xset\"; then\n  ARFLAGS=\"cr\"\nfi\n\nAC_CANONICAL_HOST\n\nAH_TOP([#ifndef BITCOIN_CONFIG_H])\nAH_TOP([#define BITCOIN_CONFIG_H])\nAH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n\ndnl faketime breaks configure and is only needed for make. Disable it here.\nunset FAKETIME\n\ndnl Automake init set-up and checks\nAM_INIT_AUTOMAKE([no-define subdir-objects foreign tar-pax])\n\ndnl faketime messes with timestamps and causes configure to be re-run.\ndnl --disable-maintainer-mode can be used to bypass this.\nAM_MAINTAINER_MODE([enable])\n\ndnl make the compilation flags quiet unless V=1 is used\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\ndnl Compiler checks (here before libtool).\nif test \"x${CXXFLAGS+set}\" = \"xset\"; then\n  CXXFLAGS_overridden=yes\nelse\n  CXXFLAGS_overridden=no\nfi\n\nAC_PROG_CXX\nm4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n\ndnl By default, libtool for mingw refuses to link static libs into a dll for\ndnl fear of mixing pic/non-pic objects, and import/export complications. Since\ndnl we have those under control, re-enable that functionality.\ncase $host in\n  *mingw*)\n     lt_cv_deplibs_check_method=\"pass_all\"\n  ;;\nesac\ndnl Require C++17 compiler (no GNU extensions)\nAX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\ndnl Check if -latomic is required for <std::atomic>\nCHECK_ATOMIC\n\ndnl Libtool init checks.\nLT_INIT([pic-only])\n\ndnl Zcash macros for required programs. Configure exits with error if\ndnl they are not detected.\nAC_DEFUN(\n  ZC_REQUIRE_TOOL,\n  [\n    AC_PATH_TOOL($1, $2, $2_notfound)\n    if test x${$1} = x$2_notfound\n    then\n      AC_MSG_ERROR(\"Required tool $2 was not found\")\n    fi\n  ]\n)\n\nAC_DEFUN(\n  ZC_REQUIRE_PROG,\n  [\n    AC_PATH_PROG($1, $2, $2_notfound)\n    if test x${$1} = x$2_notfound\n    then\n      AC_MSG_ERROR(\"Required program $2 was not found\")\n    fi\n  ]\n)\n\ndnl Check/return PATH for base programs.\ndnl Required tools and programs:\nZC_REQUIRE_TOOL(AR, ar)\nZC_REQUIRE_TOOL(RANLIB, ranlib)\nZC_REQUIRE_TOOL(STRIP, strip)\nZC_REQUIRE_PROG([GIT], [git])\nZC_REQUIRE_PROG(RUSTC, rustc)\nZC_REQUIRE_PROG(CARGO, cargo)\nZC_REQUIRE_PROG(CXXBRIDGE, cxxbridge)\ndnl This one is still optional and checked by complicated logic below:\nAC_PATH_PROG(CCACHE,ccache)\ndnl This one is not currently used anywhere, thus not required:\nAC_PATH_PROG(XGETTEXT,xgettext)\nZC_REQUIRE_PROG(HEXDUMP,hexdump)\nAC_PATH_PROG(READELF,readelf)\nZC_REQUIRE_TOOL(CPPFILT,c++filt)\n\nAC_ARG_ENABLE([online-rust],\n  [AS_HELP_STRING([--enable-online-rust],\n  [enable Rust to fetch dependencies from the network (default is to use vendored dependencies)])],\n  [enable_online_rust=$enableval],\n  [enable_online_rust=no])\nAM_CONDITIONAL(ENABLE_ONLINE_RUST, test \"$enable_online_rust\" != no)\n\n# Enable wallet\nAC_ARG_ENABLE([wallet],\n  [AS_HELP_STRING([--disable-wallet],\n  [disable wallet (enabled by default)])],\n  [enable_wallet=$enableval],\n  [enable_wallet=yes])\n\nAC_ARG_ENABLE([mining],\n  [AS_HELP_STRING([--enable-mining],\n  [enable mining (default is yes)])],\n  [enable_mining=$enableval],\n  [enable_mining=yes])\n\nAC_ARG_ENABLE(tests,\n    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n    [use_tests=$enableval],\n    [use_tests=yes])\n\nAC_ARG_ENABLE(bench,\n    AS_HELP_STRING([--enable-bench],[compile benchmarks (default is yes)]),\n    [use_bench=$enableval],\n    [use_bench=yes])\n\nAC_ARG_ENABLE([fuzz-main],\n  [AS_HELP_STRING([--enable-fuzz-main],\n  [Replace main() with a stub for fuzzing (default is no)])],\n  [use_fuzz_main=$enableval],\n  [use_fuzz_main=no])\n\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--disable-hardening],\n  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n  [use_hardening=$enableval],\n  [use_hardening=auto])\n\nAC_ARG_ENABLE([reduce-exports],\n  [AS_HELP_STRING([--enable-reduce-exports],\n  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n  [use_reduce_exports=$enableval],\n  [use_reduce_exports=no])\n\nAC_ARG_ENABLE([ccache],\n  [AS_HELP_STRING([--disable-ccache],\n  [do not use ccache for building (default is to use if found)])],\n  [use_ccache=$enableval],\n  [use_ccache=auto])\n\nAC_ARG_ENABLE([lcov],\n  [AS_HELP_STRING([--enable-lcov],\n  [enable lcov testing (default is no)])],\n  [use_lcov=yes],\n  [use_lcov=no])\n\nAC_ARG_ENABLE([glibc-back-compat],\n  [AS_HELP_STRING([--enable-glibc-back-compat],\n  [enable backwards compatibility with glibc])],\n  [use_glibc_compat=$enableval],\n  [use_glibc_compat=no])\n\nAC_ARG_ENABLE([asm],\n  [AS_HELP_STRING([--disable-asm],\n  [disable assembly routines (enabled by default)])],\n  [use_asm=$enableval],\n  [use_asm=yes])\n\nif test \"x$use_asm\" = xyes; then\n  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\nfi\n\nAC_ARG_ENABLE([zmq],\n  [AS_HELP_STRING([--disable-zmq],\n  [disable ZMQ notifications])],\n  [use_zmq=$enableval],\n  [use_zmq=yes])\n\nAC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n\nAC_ARG_ENABLE(man,\n    [AS_HELP_STRING([--disable-man],\n                    [do not install man pages (default is to install)])],,\n    enable_man=yes)\nAM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n\n# Enable debug\nAC_ARG_ENABLE([debug],\n    [AS_HELP_STRING([--enable-debug],\n                    [use compiler flags and macros suited for debugging (default is no)])],\n    [enable_debug=$enableval],\n    [enable_debug=no])\n\n# Enable different -fsanitize options\nAC_ARG_WITH([sanitizers],\n    [AS_HELP_STRING([--with-sanitizers],\n                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n    [use_sanitizers=$withval])\n\n# Enable gprof profiling\nAC_ARG_ENABLE([gprof],\n    [AS_HELP_STRING([--enable-gprof],\n                    [use gprof profiling compiler flags (default is no)])],\n    [enable_gprof=$enableval],\n    [enable_gprof=no])\n\n# Turn warnings into errors\nAC_ARG_ENABLE([werror],\n    [AS_HELP_STRING([--enable-werror],\n                    [Treat all compiler warnings as errors (default is yes)])],\n    [enable_werror=$enableval],\n    [enable_werror=yes])\n\nAC_LANG_PUSH([C++])\nAX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n\nif test \"x$enable_debug\" = xyes; then\n  # Clear default -g -O2 flags\n  if test \"x$CXXFLAGS_overridden\" = xno; then\n\tCXXFLAGS=\"\"\n  fi\n\n  # Disable all optimizations\n  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n\n  # Prefer -g3, fall back to -g if that is unavailable.\n  AX_CHECK_COMPILE_FLAG(\n    [-g3],\n    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n    [[$CXXFLAG_WERROR]])\n\n  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\nelse\n  # Even with enable_debug=no we build with standard debug symbols\n  AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])\n\n  # -ftrapv and -fwrapv conflict, so we only set this if enable_debug=no\n  AX_CHECK_COMPILE_FLAG([-fwrapv],[CXXFLAGS=\"$CXXFLAGS -fwrapv\"],,[[$CXXFLAG_WERROR]])\nfi\n\nif test x$use_sanitizers != x; then\n  # First check if the compiler accepts flags. If an incompatible pair like\n  # -fsanitize=address,thread is used here, this check will fail. This will also\n  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n  AX_CHECK_COMPILE_FLAG(\n    [[-fsanitize=$use_sanitizers]],\n    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n    [AC_MSG_ERROR([compiler did not accept requested flags])])\n\n  # Some compilers (e.g. GCC) require additional libraries like libasan,\n  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n  # flag. This is a separate check so we can give a better error message when\n  # the sanitize flags are supported by the compiler but the actual sanitizer\n  # libs are missing.\n  AX_CHECK_LINK_FLAG(\n    [[-fsanitize=$use_sanitizers]],\n    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])\n\n  AX_CHECK_COMPILE_FLAG(\n    [-fno-omit-frame-pointer],\n    [SANITIZER_CXXFLAGS=\"$SANITIZER_CXXFLAGS -fno-omit-frame-pointer\"],\n    [AC_MSG_ERROR(Cannot enable -fno-omit-frame-pointer)])\n\n  # libc/libstdc++ static linking is not supported for TSan\n  case $use_sanitizers in\n    *thread*)\n      ;;\n    *)\n      AX_CHECK_LINK_FLAG(\n        [-static-libstdc++],\n        [SANITIZER_LDFLAGS=\"$SANITIZER_LDFLAGS -static-libstdc++\"],\n        [AC_MSG_ERROR(Cannot statically link -static-libstdc++)])\n      ;;\n  esac\n\n  case $use_sanitizers in\n    *address*)\n      AX_CHECK_LINK_FLAG(\n        [-static-libasan],\n        [SANITIZER_LDFLAGS=\"$SANITIZER_LDFLAGS -static-libasan\"],\n        [AC_MSG_ERROR(Cannot statically link -static-libasan)])\n      ;;\n    *)\n      ;;\n  esac\nfi\n\nERROR_CXXFLAGS=\nif test \"x$enable_werror\" = \"xyes\"; then\n  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n  fi\n  ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror\"\nfi\n\n\n# This enables all warnings and selectively disables some. Individual warnings should be\n# 1. fixed,\n# 2. locally silenced with an explanatory comment, or\n# 3. globally silenced here with an explanatory comment.\n#\n# Justifications\n# • `-Wno-aix-compat`: we don’t want to maintain compatibility with IBM AIX compilers\n# • `-Wno-c++-compat`: this warns about an ABI layout incompatibility between C and C++,\n#    but we don’t need such compatibility except where we use `extern \"C\"`\n# • `-W*c++*-compat-pedantic`: disables warnings about compatibility with older versions of C++ and\n#    enables warnings about compatibility with newer versions of C++ (we need the explicit enabling,\n#    even with `-Weverything`, because the earlier disabling of older versions removes some warnings\n#    that we do want)\nDESIRED_WARNING_CXXFLAGS=\"\\\n  --system-header-prefix=boost --system-header-prefix=crypto/ctaes --system-header-prefix=db_cxx \\\n  --system-header-prefix=event2 --system-header-prefix=gmock --system-header-prefix=gtest \\\n  --system-header-prefix=leveldb --system-header-prefix=rust --system-header-prefix=sodium \\\n  --system-header-prefix=univalue --system-header-prefix=zmq \\\n  -Weverything \\\n  -Wno-aix-compat -Wno-c++-compat \\\n  -Wno-c++98-compat-pedantic -Wno-c++11-compat-pedantic -Wno-c++14-compat-pedantic \\\n  -Wc++17-compat-pedantic -Wc++20-compat-pedantic\"\n\n# This list should be incrementally pruned. Each flag should either be enabled or moved to\n# `DESIRED_WARNING_CXXFLAGS` with an explanation as to why it remains disabled.\n#\n# Guidelines for fixing warnings:\n# • fix a small number (perhaps one) at a time\n# • change `-Wno-foo` to `-Wno-error=foo` locally to get the full report of the warning you enabled\n#   (but be careful, as re-running `make` will not recompile files that only warned).\n#\n# Potential justifications:\n# • `-Wno-format-nonliteral`: Bitcoin i18n\n# • `-Wno-old-style-cast`: do after `-W*-conversion` to avoid introducing more conversions\n# • `-Wno-padded`: is this worth the noise of rearranging fields & adding anonymous bitfields?\n# • `-Wno-shadow-field`: conflicts with our style of naming constructor arguments the same as fields\n# • `-Wno-shadow-field-in-constructor`: conflicts with our style of naming constructor arguments the\n#    same as fields\n# • `-Wno-string-conversion`: currently abused to `assert` on strings\n# • `-Wno-tautological-type-limit-compare`: I think isn’t portable because of numeric type sizing\n# • `-Wno-unsafe-buffer-usage`: Added in Clang 16, needs consideration\nDISABLED_WARNING_CXXFLAGS=\"\\\n  -Wno-c++20-compat -Wno-cast-align -Wno-cast-qual -Wno-comma -Wno-conditional-uninitialized \\\n  -Wno-covered-switch-default -Wno-ctad-maybe-unsupported \\\n  -Wno-delete-non-abstract-non-virtual-dtor -Wno-deprecated-copy -Wno-deprecated-copy-dtor \\\n  -Wno-deprecated-dynamic-exception-spec -Wno-disabled-macro-expansion -Wno-documentation \\\n  -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors \\\n  -Wno-extra-semi -Wno-extra-semi-stmt -Wno-float-conversion -Wno-float-equal \\\n  -Wno-format-nonliteral -Wno-global-constructors -Wno-header-hygiene -Wno-ignored-qualifiers \\\n  -Wno-implicit-fallthrough -Wno-implicit-int-conversion -Wno-implicit-int-float-conversion \\\n  -Wno-inconsistent-missing-destructor-override -Wno-logical-op-parentheses \\\n  -Wno-misleading-indentation -Wno-mismatched-tags -Wno-missing-noreturn -Wno-missing-prototypes \\\n  -Wno-missing-variable-declarations -Wno-newline-eof -Wno-non-virtual-dtor -Wno-old-style-cast \\\n  -Wno-overloaded-virtual -Wno-padded -Wno-pedantic -Wno-range-loop-construct \\\n  -Wno-redundant-parens -Wno-reorder-ctor -Wno-reserved-id-macro -Wno-reserved-identifier \\\n  -Wno-return-type -Wno-shadow -Wno-shadow-field -Wno-shadow-field-in-constructor \\\n  -Wno-shift-sign-overflow -Wno-shorten-64-to-32 -Wno-sign-compare -Wno-sign-conversion \\\n  -Wno-string-conversion -Wno-suggest-destructor-override -Wno-suggest-override \\\n  -Wno-switch-default -Wno-switch-enum \\\n  -Wno-tautological-type-limit-compare -Wno-tautological-unsigned-enum-zero-compare \\\n  -Wno-tautological-unsigned-zero-compare -Wno-thread-safety-attributes \\\n  -Wno-thread-safety-negative -Wno-undef -Wno-undefined-func-template -Wno-uninitialized \\\n  -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return \\\n  -Wno-unsafe-buffer-usage \\\n  -Wno-unused-but-set-variable -Wno-unused-exception-parameter -Wno-unused-function \\\n  -Wno-unused-macros -Wno-unused-member-function -Wno-unused-parameter -Wno-unused-private-field \\\n  -Wno-unused-template -Wno-unused-variable -Wno-used-but-marked-unused -Wno-weak-vtables \\\n  -Wno-zero-as-null-pointer-constant\"\n\n# These are sub-flags of those in `DISABLED_WARNING_CXXFLAGS` that allow us to temporarily\n# re-enable pieces until the disabling flags are removed.\nREENABLED_WARNING_CXXFLAGS=\"\\\n  -Wbit-int-extension -Wc++11-extra-semi -Wc++11-long-long -Wc++14-attribute-extensions \\\n  -Wc++14-binary-literal -Wc++17-attribute-extensions -Wc++20-attribute-extensions \\\n  -Wc11-extensions -Wcomplex-component-init -Wdelimited-escape-sequence-extension \\\n  -Wdocumentation-deprecated-sync -Wdocumentation-html -Wembedded-directive -Wempty-init-stmt \\\n  -Wempty-translation-unit -Wfixed-enum-extension -Wflexible-array-extensions \\\n  -Wfloat-overflow-conversion -Wfloat-zero-conversion -Wfuture-attribute-extensions \\\n  -Wgnu-auto-type -Wgnu-binary-literal -Wgnu-case-range -Wgnu-complex-integer \\\n  -Wgnu-compound-literal-initializer -Wgnu-conditional-omitted-operand -Wgnu-empty-initializer \\\n  -Wgnu-empty-struct -Wgnu-flexible-array-initializer -Wgnu-flexible-array-union-member \\\n  -Wgnu-imaginary-constant -Wgnu-include-next -Wgnu-label-as-value -Wgnu-line-marker \\\n  -Wgnu-null-pointer-arithmetic -Wgnu-pointer-arith -Wgnu-redeclared-enum \\\n  -Wgnu-statement-expression -Wgnu-union-cast -Wgnu-zero-line-directive \\\n  -Wignored-reference-qualifiers -Wimplicit-const-int-float-conversion \\\n  -Wimplicit-fallthrough-per-function -Wimport-preprocessor-directive-pedantic -Winvalid-utf8 \\\n  -Wkeyword-macro -Wlanguage-extension-token -Wlong-long -Wmicrosoft-charize \\\n  -Wmicrosoft-comment-paste -Wmicrosoft-cpp-macro -Wmicrosoft-end-of-file -Wmicrosoft-enum-value \\\n  -Wmicrosoft-fixed-enum -Wmicrosoft-flexible-array -Wmicrosoft-redeclare-static \\\n  -Wnested-anon-types -Wnullability-extension -Wobjc-signed-char-bool-implicit-int-conversion \\\n  -Woverlength-strings -Wpre-c++20-compat -Wretained-language-linkage \\\n  -Wshadow-field-in-constructor-modified -Wshadow-ivar -Wsometimes-uninitialized \\\n  -Wstatic-self-init -Wundefined-internal-type -Wunneeded-member-function \\\n  -Wunreachable-code-fallthrough -Wunreachable-code-generic-assoc -Wunreachable-code-loop-increment\"\n\nWARNING_CXXFLAGS=\"$DESIRED_WARNING_CXXFLAGS $DISABLED_WARNING_CXXFLAGS $REENABLED_WARNING_CXXFLAGS\"\n\nenable_sse42=no\nenable_sse41=no\nenable_avx2=no\nenable_shani=no\n\nif test \"x$use_asm\" = \"xyes\"; then\n\n# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n# compatibility.\n\ndnl x86\nAX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\nAX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\nAX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\nAX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\nAC_MSG_CHECKING(for SSE4.2 intrinsics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <stdint.h>\n    #if defined(_MSC_VER)\n    #include <intrin.h>\n    #elif defined(__GNUC__) && defined(__SSE4_2__)\n    #include <nmmintrin.h>\n    #endif\n  ]],[[\n    uint64_t l = 0;\n    l = _mm_crc32_u8(l, 0);\n    l = _mm_crc32_u32(l, 0);\n    l = _mm_crc32_u64(l, 0);\n    return l;\n  ]])],\n [ AC_MSG_RESULT(yes); enable_sse42=yes],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\nAC_MSG_CHECKING(for SSE4.1 intrinsics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <stdint.h>\n    #include <immintrin.h>\n  ]],[[\n    __m128i l = _mm_set1_epi32(0);\n    return _mm_extract_epi32(l, 3);\n  ]])],\n [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\nAC_MSG_CHECKING(for AVX2 intrinsics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <stdint.h>\n    #include <immintrin.h>\n  ]],[[\n    __m256i l = _mm256_set1_epi32(0);\n    return _mm256_extract_epi32(l, 7);\n  ]])],\n [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\nAC_MSG_CHECKING(for SHA-NI intrinsics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <stdint.h>\n    #include <immintrin.h>\n  ]],[[\n    __m128i i = _mm_set1_epi32(0);\n    __m128i j = _mm_set1_epi32(1);\n    __m128i k = _mm_set1_epi32(2);\n    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n  ]])],\n [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\n# ARM\nAX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\nAC_MSG_CHECKING(for ARM CRC32 intrinsics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <arm_acle.h>\n    #include <arm_neon.h>\n  ]],[[\n    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n    vmull_p64(0, 0);\n  ]])],\n [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\nfi\n\nCPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n\nAC_ARG_WITH([utils],\n  [AS_HELP_STRING([--with-utils],\n  [build zcash-cli zcash-tx (default=yes)])],\n  [build_bitcoin_utils=$withval],\n  [build_bitcoin_utils=yes])\n\nAC_ARG_WITH([libs],\n  [AS_HELP_STRING([--with-libs],\n  [build libraries (default=no)])],\n  [build_bitcoin_libs=$withval],\n  [build_bitcoin_libs=no])\n\nAC_ARG_WITH([daemon],\n  [AS_HELP_STRING([--with-daemon],\n  [build bitcoind daemon (default=yes)])],\n  [build_bitcoind=$withval],\n  [build_bitcoind=yes])\n\nuse_pkgconfig=yes\ncase $host in\n  *mingw*)\n\n     dnl pkgconfig does more harm than good with MinGW\n     use_pkgconfig=no\n\n     TARGET_OS=windows\n     AC_CHECK_LIB([kernel32],   [GetModuleFileNameA],,      AC_MSG_ERROR(libkernel32 missing))\n     AC_CHECK_LIB([user32],     [main],,                    AC_MSG_ERROR(libuser32 missing))\n     AC_CHECK_LIB([gdi32],      [main],,                    AC_MSG_ERROR(libgdi32 missing))\n     AC_CHECK_LIB([comdlg32],   [main],,                    AC_MSG_ERROR(libcomdlg32 missing))\n     AC_CHECK_LIB([winmm],      [main],,                    AC_MSG_ERROR(libwinmm missing))\n     AC_CHECK_LIB([shell32],    [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n     AC_CHECK_LIB([comctl32],   [main],,                    AC_MSG_ERROR(libcomctl32 missing))\n     AC_CHECK_LIB([ole32],      [CoCreateInstance],,        AC_MSG_ERROR(libole32 missing))\n     AC_CHECK_LIB([oleaut32],   [main],,                    AC_MSG_ERROR(liboleaut32 missing))\n     AC_CHECK_LIB([uuid],       [main],,                    AC_MSG_ERROR(libuuid missing))\n     AC_CHECK_LIB([advapi32],   [CryptAcquireContextW],,    AC_MSG_ERROR(libadvapi32 missing))\n     AC_CHECK_LIB([ws2_32],     [WSAStartup],,              AC_MSG_ERROR(libws2_32 missing))\n     AC_CHECK_LIB([shlwapi],    [PathRemoveFileSpecW],,     AC_MSG_ERROR(libshlwapi missing))\n     AC_CHECK_LIB([iphlpapi],   [GetAdaptersAddresses],,    AC_MSG_ERROR(libiphlpapi missing))\n     AC_CHECK_LIB([ntdll],      [main],,                    AC_MSG_ERROR(libntdll missing))\n     AC_CHECK_LIB([bcrypt],     [main],,                    AC_MSG_ERROR(libbcrypt missing))\n\n     dnl -static is interpreted by libtool, where it has a different meaning.\n     dnl In libtool-speak, it's -all-static.\n     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n\n     AC_PATH_PROG([MAKENSIS], [makensis], none)\n     if test x$MAKENSIS = xnone; then\n       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n     fi\n\n     ZC_REQUIRE_TOOL(WINDRES, windres)\n\n     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n\n     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n     dnl also overridden to prevent their insertion later.\n     dnl This should only affect dll's.\n     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n     postdeps_CXX=\n\n     dnl We require Windows 7 (NT 6.1) or later\n     AX_CHECK_LINK_FLAG([[-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1]],[LDFLAGS=\"$LDFLAGS -Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1\"],,[[$LDFLAG_WERROR]])\n     ;;\n  *darwin*)\n     TARGET_OS=darwin\n     if  test x$cross_compiling != xyes; then\n       BUILD_OS=darwin\n       AC_CHECK_PROG([PORT],port, port)\n       if test x$PORT = xport; then\n         dnl add default macports paths\n         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n         LIBS=\"$LIBS -L/opt/local/lib\"\n         if test -d /opt/local/include/db62; then\n           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db62\"\n           LIBS=\"$LIBS -L/opt/local/lib/db62\"\n         fi\n       fi\n\n       AC_CHECK_PROG([BREW],brew, brew)\n       if test x$BREW = xbrew; then\n         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n         dnl in expected paths because they may conflict with system files. Ask\n         dnl Homebrew where each one is located, then adjust paths accordingly.\n         dnl It's safe to add these paths even if the functionality is disabled by\n         dnl the user (--without-wallet for example).\n\n         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n         if test x$bdb_prefix != x; then\n           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n         fi\n       fi\n     else\n       case $build_os in\n         *darwin*)\n           BUILD_OS=darwin\n           ;;\n         *)\n           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n           AC_PATH_TOOL([OTOOL], [otool], otool)\n           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n\n           dnl libtool will try to strip the static lib, which is a problem for\n           dnl cross-builds because strip attempts to call a hard-coded ld,\n           dnl which may not exist in the path. Stripping the .a is not\n           dnl necessary, so just disable it.\n           old_striplib=\n           ;;\n       esac\n     fi\n\n     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n     OBJCXXFLAGS=\"$CXXFLAGS\"\n     ;;\n   *android*)\n     dnl make sure android stays above linux for hosts like *linux-android*\n     TARGET_OS=android\n     ;;\n   *linux*)\n     TARGET_OS=linux\n     ;;\nesac\n\nif test x$use_pkgconfig = xyes; then\n  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n  PKG_PROG_PKG_CONFIG\n  if test x\"$PKG_CONFIG\" = \"x\"; then\n    AC_MSG_ERROR(pkg-config not found.)\n  fi\n  ])\nfi\n\nif test x$use_lcov = xyes; then\n  ZC_REQUIRE_TOOL(GCOV, gcov)\n  ZC_REQUIRE_PROG(LCOV, lcov)\n  ZC_REQUIRE_PROG(GENHTML, genhtml)\n\n  LCOV=\"$LCOV --gcov-tool=$GCOV --rc lcov_branch_coverage=1\"\n  GENHTML=\"$GENHTML --branch-coverage\"\n  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\nfi\n\ndnl Check for endianness\nAC_C_BIGENDIAN\n\ndnl Check for pthread compile/link requirements\nAX_PTHREAD\n\n# The following macro will add the necessary defines to bitcoin-config.h, but\n# they also need to be passed down to any subprojects. Pull the results out of\n# the cache and add them to CPPFLAGS.\nAC_SYS_LARGEFILE\n# detect POSIX or GNU variant of strerror_r\nAC_FUNC_STRERROR_R\n\nif test x$ac_cv_sys_file_offset_bits != x &&\n   test x$ac_cv_sys_file_offset_bits != xno &&\n   test x$ac_cv_sys_file_offset_bits != xunknown; then\n  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\nfi\n\nif test x$ac_cv_sys_large_files != x &&\n   test x$ac_cv_sys_large_files != xno &&\n   test x$ac_cv_sys_large_files != xunknown; then\n  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\nfi\n\nAX_GCC_FUNC_ATTRIBUTE([visibility])\nAX_GCC_FUNC_ATTRIBUTE([dllexport])\nAX_GCC_FUNC_ATTRIBUTE([dllimport])\n\nif test x$use_glibc_compat != xno; then\n\n  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n  #in anyway for back-compat.\n  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n\n  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n  # See which one is present here.\n  AC_MSG_CHECKING(__fdelt_chk type)\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n                    #undef _FORTIFY_SOURCE\n                  #endif\n                  #define _FORTIFY_SOURCE 2\n                  #include <sys/select.h>\n     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n    [ fdelt_type=\"long unsigned int\"],\n    [ fdelt_type=\"long int\"])\n  AC_MSG_RESULT($fdelt_type)\n  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\nelse\n  AC_SEARCH_LIBS([clock_gettime],[rt])\nfi\n\nif test \"x$enable_gprof\" = xyes; then\n    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n\n    if test x$use_hardening = xyes; then\n        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n    fi\n    use_hardening=no\n    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n\n    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\nfi\n\nif test x$TARGET_OS != xwindows; then\n  # All windows code is PIC, forcing it on just adds useless compile warnings\n  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\nfi\n\nif test x$use_fuzz_main == xyes; then\n    CFLAGS=\"$CFLAGS -DZCASH_FUZZ=1\"\n    CXXFLAGS=\"$CXXFLAGS -DZCASH_FUZZ=1\"\nfi\n\nif test x$use_hardening != xno; then\n  use_hardening=yes\n  AX_CHECK_COMPILE_FLAG([-Wformat],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wformat\"],[AC_MSG_ERROR(Cannot enable -Wformat)])\n  AX_CHECK_COMPILE_FLAG([-Wformat-security],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wformat-security\"],[AC_MSG_ERROR(Cannot enable -Wformat-security)],[-Wformat])\n  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"],[AC_MSG_ERROR(Cannot enable -Wstack-protector)])\n  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"],[AC_MSG_ERROR(Cannot enable -fstack-protector-all)])\n  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wthread-safety-analysis\"],[AC_MSG_ERROR(Cannot enable -Wthread-safety-analysis)])\n\n  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n    ],[AC_MSG_ERROR(Cannot enable -U_FORTIFY_SOURCE)])\n    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n  ],[AC_MSG_ERROR(Cannot enable -D_FORTIFY_SOURCE=2)])\n\n  if test x$TARGET_OS = xdarwin || test x$TARGET_OS = xwindows; then\n    # Xcode's ld (at least ld64-302.3) doesn't support -z\n    # mingw-w64's ld (at least mingw-w64 4.0.4-2) also appears to not support -z\n    AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],[AC_MSG_WARN(Cannot enable RELRO)])\n    AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],[AC_MSG_WARN(Cannot enable BIND_NOW)])\n  else\n    AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],[AC_MSG_ERROR(Cannot enable RELRO)])\n    AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],[AC_MSG_ERROR(Cannot enable BIND_NOW)])\n  fi\n\n  if test x$TARGET_OS != xwindows; then\n    # All windows code is PIC, forcing it on just adds useless compile warnings\n    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"],[AC_MSG_ERROR(Cannot enable -fPIE)])\n    if test x$BUILD_OS = xdarwin; then\n      AX_CHECK_LINK_FLAG([[-Wl,-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-pie\"],[AC_MSG_ERROR(Cannot enable -Wl,-pie)])\n      # Justifications:\n      # • `-Wno-return-std-move-in-c++11`: This causes failure in CI if treated as an error,\n      #    despite not being documented to exist in any version of Clang (it does not exist on the\n      #    Clang used by our other builds).\n      # • `-Wno-unknown-warning-option`: The macOS build uses Xcode’s clang, which is relatively old\n      #    and doesn’t support all the warnings that other platforms do, so we ignore complaints\n      #    about unsupported warnings.\n      WARNING_CXXFLAGS=\"$WARNING_CXXFLAGS -Wno-return-std-move-in-c++11 -Wno-unknown-warning-option\"\n    else\n      AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],[AC_MSG_ERROR(Cannot enable -pie)])\n    fi\n  else\n    # These are only available on Windows.\n    AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],[AC_MSG_ERROR(Cannot enable --dynamicbase)])\n    AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],[AC_MSG_ERROR(Cannot enable --nxcompat)])\n    AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],[AC_MSG_ERROR(Cannot enable ASLR)])\n  fi\n\n  case $host in\n    *mingw*)\n       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n    ;;\n  esac\nfi\n\ndnl this flag screws up non-darwin gcc even when the check fails. special-case it.\nif test x$TARGET_OS = xdarwin; then\n  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\nfi\n\nAC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\nAC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\nAC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n\nAC_CHECK_DECLS([strnlen])\n\nAC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n\t\t[#if HAVE_ENDIAN_H\n                 #include <endian.h>\n                 #elif HAVE_SYS_ENDIAN_H\n                 #include <sys/endian.h>\n                 #endif])\n\nAC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n\t\t[#if HAVE_BYTESWAP_H\n                 #include <byteswap.h>\n                 #endif])\n\nAC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n\ndnl Check for MSG_NOSIGNAL\nAC_MSG_CHECKING(for MSG_NOSIGNAL)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n [[ int f = MSG_NOSIGNAL; ]])],\n [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n [ AC_MSG_RESULT(no)]\n)\n\ndnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\ndnl fail if neither are available.\nAC_MSG_CHECKING(for gmtime_r)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n  [ AC_MSG_RESULT(no);\n    AC_MSG_CHECKING(for gmtime_s);\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n       [ AC_MSG_RESULT(yes)],\n       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n    )\n  ]\n)\n\nAC_MSG_CHECKING([for visibility attribute])\nAC_LINK_IFELSE([AC_LANG_SOURCE([\n  int foo_def( void ) __attribute__((visibility(\"default\")));\n  int main(){}\n  ])],\n  [\n    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n    AC_MSG_RESULT(yes)\n  ],\n  [\n    AC_MSG_RESULT(no)\n    if test x$use_reduce_exports = xyes; then\n      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n    fi\n  ]\n)\n\nTEMP_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\nAC_MSG_CHECKING([for thread_local support])\nAC_LINK_IFELSE([AC_LANG_SOURCE([\n  #include <thread>\n  static thread_local int foo = 0;\n  static void run_thread() { foo++;}\n  int main(){\n  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n  return foo;\n  }\n  ])],\n  [\n    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n    AC_MSG_RESULT(yes)\n  ],\n  [\n    AC_MSG_RESULT(no)\n  ]\n)\nLDFLAGS=\"$TEMP_LDFLAGS\"\n\ndnl LevelDB platform checks\nAC_MSG_CHECKING(for fdatasync)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n [[ fdatasync(0); ]])],\n [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n)\n\nAC_MSG_CHECKING(for F_FULLFSYNC)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n)\n\nAC_MSG_CHECKING(for O_CLOEXEC)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n [[ open(\"\", O_CLOEXEC); ]])],\n [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n)\n\ndnl crc32c platform checks\nAC_MSG_CHECKING(for __builtin_prefetch)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n  char data = 0;\n  const char* address = &data;\n  __builtin_prefetch(address, 0, 0);\n  ]])],\n [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n)\n\nAC_MSG_CHECKING(for _mm_prefetch)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n  char data = 0;\n  const char* address = &data;\n  _mm_prefetch(address, _MM_HINT_NTA);\n  ]])],\n [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n)\n\nAC_MSG_CHECKING(for strong getauxval support in the system headers)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <arm_acle.h>\n    #include <arm_neon.h>\n    #include <sys/auxv.h>\n  ]], [[\n    getauxval(AT_HWCAP);\n  ]])],\n [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n)\n\nAC_MSG_CHECKING(for weak getauxval support in the compiler)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    unsigned long getauxval(unsigned long type) __attribute__((weak));\n    #define AT_HWCAP 16\n  ]], [[\n    getauxval(AT_HWCAP);\n  ]])],\n [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n)\n\ndnl Check for reduced exports\nif test x$use_reduce_exports = xyes; then\n  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\nfi\n\nLEVELDB_CPPFLAGS=\nLIBLEVELDB=\nLIBMEMENV=\nAM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\nAC_SUBST(LEVELDB_CPPFLAGS)\nAC_SUBST(LIBLEVELDB)\nAC_SUBST(LIBMEMENV)\n\nif test x$enable_wallet != xno; then\n    dnl Check for libdb_cxx only if wallet enabled\n    BITCOIN_FIND_BDB62\nfi\n\nif test x$build_bitcoin_utils$build_bitcoind$use_tests = xnonono; then\n    use_boost=no\nelse\n    use_boost=yes\nfi\n\nif test x$use_boost = xyes; then\n\ndnl Check for boost libs\ndnl We need Boost >= 1.62 to fix a potential security bug (https://github.com/zcash/zcash/issues/1241)\ndnl We need Boost >= 1.77 to fix usage of statx on Docker (https://github.com/zcash/zcash/issues/4945)\nAX_BOOST_BASE([1.77])\nAX_BOOST_SYSTEM\nAX_BOOST_FILESYSTEM\nAX_BOOST_PROGRAM_OPTIONS\nAX_BOOST_THREAD\nAX_BOOST_CHRONO\n\nfi\n\nif test x$use_reduce_exports = xyes; then\n    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\nfi\n\nif test x$use_tests = xyes; then\n\n  if test x$HEXDUMP = x; then\n    AC_MSG_ERROR(hexdump is required for tests)\n  fi\n\n\n  if test x$use_boost = xyes; then\n\n  AX_BOOST_UNIT_TEST_FRAMEWORK\n\n  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n  AC_MSG_CHECKING([for dynamic linked boost test])\n  TEMP_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n  AC_LINK_IFELSE([AC_LANG_SOURCE([\n       #define BOOST_TEST_DYN_LINK\n       #define BOOST_TEST_MAIN\n        #include <boost/test/unit_test.hpp>\n\n       ])],\n    [AC_MSG_RESULT(yes)]\n    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n    [AC_MSG_RESULT(no)])\n  LIBS=\"$TEMP_LIBS\"\n  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n\n  fi\nfi\n\nif test x$use_boost = xyes; then\nBOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\nfi\n\nif test x$use_pkgconfig = xyes; then\n  : dnl\n  m4_ifdef(\n    [PKG_CHECK_MODULES],\n    [\n      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n        if test x$TARGET_OS != xwindows; then\n          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n        fi\n      fi\n\n      if test \"x$use_zmq\" = \"xyes\"; then\n        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n           use_zmq=no])\n      else\n          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n      fi\n    ]\n  )\nelse\n\n  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n    if test x$TARGET_OS != xwindows; then\n      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n    fi\n  fi\n\n  if test \"x$use_zmq\" = \"xyes\"; then\n     AC_CHECK_HEADER([zmq.h],\n       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n        use_zmq=no\n        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n        use_zmq=no\n        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n  else\n    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n  fi\n\n  if test \"x$use_zmq\" = \"xyes\"; then\n    dnl Assume libzmq was built for static linking\n    case $host in\n      *mingw*)\n        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n      ;;\n    esac\n  fi\nfi\n\nRUST_LIBS=\"\"\ncase $host in\n  *mingw*)\n    RUST_LIBS=\"$RUST_LIBS -luserenv\"\n    ;;\n  *)\n    RUST_LIBS=\"$RUST_LIBS -ldl\"\n    ;;\nesac\n\n# Additional Zcash flags\nAX_CHECK_COMPILE_FLAG([-fno-strict-aliasing],[CXXFLAGS=\"$CXXFLAGS -fno-strict-aliasing\"])\nAX_CHECK_COMPILE_FLAG([-Wno-builtin-declaration-mismatch],[CXXFLAGS=\"$CXXFLAGS -Wno-builtin-declaration-mismatch\"],,[[$CXXFLAG_WERROR]])\n\nLIBZCASH_LIBS=\"$BOOST_SYSTEM_LIB -lsodium $RUST_LIBS\"\n\nAC_MSG_CHECKING([whether to build bitcoind])\nAM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\nAC_MSG_RESULT($build_bitcoind)\n\nAC_MSG_CHECKING([whether to build utils (zcash-cli zcash-tx)])\nAM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\nAC_MSG_RESULT($build_bitcoin_utils)\n\nAC_MSG_CHECKING([whether to build libraries])\nAM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\nif test x$build_bitcoin_libs = xyes; then\n  AC_DEFINE(HAVE_SCRIPT_LIB, 1, [Define this symbol if the script lib has been built])\n  AC_CONFIG_FILES([libzcash_script.pc:libzcash_script.pc.in])\nfi\n\nAC_MSG_RESULT($build_bitcoin_libs)\n\nAC_LANG_POP\n\nif test \"x$use_ccache\" != \"xno\"; then\n  AC_MSG_CHECKING(if ccache should be used)\n  if test x$CCACHE = x; then\n    if test \"x$use_ccache\" = \"xyes\"; then\n      AC_MSG_ERROR([ccache not found.]);\n    else\n      use_ccache=no\n    fi\n  else\n    use_ccache=yes\n    CC=\"$ac_cv_path_CCACHE $CC\"\n    CXX=\"$ac_cv_path_CCACHE $CXX\"\n  fi\n  AC_MSG_RESULT($use_ccache)\nfi\nif test \"x$use_ccache\" = \"xyes\"; then\n    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\nfi\n\ndnl enable wallet\nAC_MSG_CHECKING([if wallet should be enabled])\nif test x$enable_wallet != xno; then\n  AC_MSG_RESULT(yes)\n  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n\nelse\n  AC_MSG_RESULT(no)\nfi\n\ndnl enable mining\nAC_MSG_CHECKING([if mining should be enabled])\nif test x$enable_mining != xno; then\n  AC_MSG_RESULT(yes)\n  AC_DEFINE(ENABLE_MINING, 1, [Define to 1 to enable mining functions])\n\nelse\n  AC_MSG_RESULT(no)\nfi\n\nAM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n\nAC_MSG_CHECKING([whether to build test_bitcoin])\nif test x$use_tests = xyes; then\n  AC_MSG_RESULT([yes])\n  BUILD_TEST=\"yes\"\nelse\n  AC_MSG_RESULT([no])\n  BUILD_TEST=\"\"\nfi\n\nAC_MSG_CHECKING([whether to reduce exports])\nif test x$use_reduce_exports = xyes; then\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\nif test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$use_tests = xnononono; then\n  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon or --enable-tests])\nfi\n\nAM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\nAM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\nAM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\nAM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\nAM_CONDITIONAL([ENABLE_MINING],[test x$enable_mining = xyes])\nAM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\nAM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\nAM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\nAM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\nAM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\nAM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\nAM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\nAM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\nAM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\nAM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\nAM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\nAM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n\nAC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\nAC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\nAC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\nAC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\nAC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\nAC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\nAC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\nAC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\nAC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\nAC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\nAC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\nAC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\nAC_SUBST(BITCOIN_DAEMON_NAME)\nAC_SUBST(BITCOIN_CLI_NAME)\nAC_SUBST(BITCOIN_TX_NAME)\n\nAC_SUBST(RUST_TARGET)\nAC_SUBST(RUST_VENDORED_SOURCES)\nAC_SUBST(RELDFLAGS)\nAC_SUBST(DEBUG_CPPFLAGS)\nAC_SUBST(DEBUG_CXXFLAGS)\nAC_SUBST(WARNING_CXXFLAGS)\nAC_SUBST(ERROR_CXXFLAGS)\nAC_SUBST(GPROF_CXXFLAGS)\nAC_SUBST(GPROF_LDFLAGS)\nAC_SUBST(HARDENED_CXXFLAGS)\nAC_SUBST(HARDENED_CPPFLAGS)\nAC_SUBST(HARDENED_LDFLAGS)\nAC_SUBST(PIC_FLAGS)\nAC_SUBST(PIE_FLAGS)\nAC_SUBST(SANITIZER_CXXFLAGS)\nAC_SUBST(SANITIZER_LDFLAGS)\nAC_SUBST(SSE42_CXXFLAGS)\nAC_SUBST(SSE41_CXXFLAGS)\nAC_SUBST(AVX2_CXXFLAGS)\nAC_SUBST(SHANI_CXXFLAGS)\nAC_SUBST(ARM_CRC_CXXFLAGS)\nAC_SUBST(LIBTOOL_APP_LDFLAGS)\nAC_SUBST(BOOST_LIBS)\nAC_SUBST(TESTDEFS)\nAC_SUBST(EVENT_LIBS)\nAC_SUBST(EVENT_PTHREADS_LIBS)\nAC_SUBST(ZMQ_LIBS)\nAC_SUBST(HAVE_GMTIME_R)\nAC_SUBST(LIBZCASH_LIBS)\nAC_SUBST(HAVE_FDATASYNC)\nAC_SUBST(HAVE_FULLFSYNC)\nAC_SUBST(HAVE_O_CLOEXEC)\nAC_SUBST(HAVE_BUILTIN_PREFETCH)\nAC_SUBST(HAVE_MM_PREFETCH)\nAC_SUBST(HAVE_STRONG_GETAUXVAL)\nAC_SUBST(HAVE_WEAK_GETAUXVAL)\nAC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile src/test/buildenv.py])\nAC_CONFIG_FILES([qa/pull-tester/tests_config.ini],[chmod +x qa/pull-tester/tests_config.ini])\nAC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])\n\ndnl boost's m4 checks do something really nasty: they export these vars. As a\ndnl result, they leak into secp256k1's configure and crazy things happen.\ndnl Until this is fixed upstream and we've synced, we'll just un-export them.\nCPPFLAGS_TEMP=\"$CPPFLAGS\"\nunset CPPFLAGS\nCPPFLAGS=\"$CPPFLAGS_TEMP\"\n\nLDFLAGS_TEMP=\"$LDFLAGS\"\nunset LDFLAGS\nLDFLAGS=\"$LDFLAGS_TEMP\"\n\nLIBS_TEMP=\"$LIBS\"\nunset LIBS\nLIBS=\"$LIBS_TEMP\"\n\nac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --enable-module-recovery\"\nAC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n\nAC_OUTPUT\n\ndnl Taken from https://wiki.debian.org/RpathIssue\ncase $host in\n   *-*-linux-gnu)\n     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n     sed < libtool > libtool-2 \\\n     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n     mv libtool-2 libtool\n     chmod 755 libtool\n   ;;\nesac\n\ndnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\ncase ${OS} in\n   *Windows*)\n     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n     chmod +x qa/pull-tester/tests_config.py\n   ;;\nesac\n\necho \necho \"Options used to compile and link:\"\necho \"  with wallet   = $enable_wallet\"\necho \"  with zmq      = $use_zmq\"\necho \"  with test     = $use_tests\"\necho \"  use asm       = $use_asm\"\necho \"  sanitizers    = $use_sanitizers\"\necho \"  debug enabled = $enable_debug\"\necho \"  gprof enabled = $enable_gprof\"\necho \"  werror        = $enable_werror\"\necho \necho \"  target os     = $TARGET_OS\"\necho \"  build os      = $BUILD_OS\"\necho\necho \"  CC            = $CC\"\necho \"  CFLAGS        = $CFLAGS\"\necho \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\necho \"  CXX           = $CXX\"\necho \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\necho \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\necho \"  ARFLAGS       = $ARFLAGS\"\necho \n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 1.228515625,
          "content": "# Configuration file for cargo-deny\n\n[graph]\ntargets = [\n    { triple = \"aarch64-unknown-linux-gnu\" },\n    { triple = \"x86_64-apple-darwin\" },\n    { triple = \"x86_64-pc-windows-gnu\" },\n    { triple = \"x86_64-unknown-freebsd\" },\n    { triple = \"x86_64-unknown-linux-gnu\" },\n]\n\n[licenses]\nversion = 2\nallow = [\n    \"Apache-2.0\",\n    \"MIT\",\n]\n# Each entry in this list should have a corresponding `contrib/debian/copyright`\n# entry for `Files: depends/*/vendored-sources/CRATE_NAME/*` (or the relevant\n# subset of files). The reverse might not be true however: `cargo-deny` only\n# checks licenses for dependencies that are compiled into the end binary for the\n# above listed targets, whereas `contrib/debian/copyright` covers anything that\n# may end up in a source archive (including dev-dependencies and unsupported\n# targets).\nexceptions = [\n    { name = \"arrayref\", allow = [\"BSD-2-Clause\"] },\n    { name = \"curve25519-dalek\", allow = [\"BSD-3-Clause\"] },\n    { name = \"foldhash\", allow = [\"Zlib\"] },\n    { name = \"secp256k1\", allow = [\"CC0-1.0\"] },\n    { name = \"secp256k1-sys\", allow = [\"CC0-1.0\"] },\n    { name = \"subtle\", allow = [\"BSD-3-Clause\"] },\n    { name = \"terminfo\", allow = [\"WTFPL\"] },\n    { name = \"unicode-ident\", allow = [\"Unicode-3.0\"] },\n]\n"
        },
        {
          "name": "depends",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libzcash_script.pc.in",
          "type": "blob",
          "size": 0.29296875,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: Zcash transparent script verification library\nDescription: Library for verifying scripts against the Zcash consensus protocol.\nVersion: @PACKAGE_VERSION@\nLibs: -L${libdir} -lzcash_script\nCflags: -I${includedir}\n"
        },
        {
          "name": "qa",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.064453125,
          "content": "[toolchain]\nchannel = \"1.81.0\"\ncomponents = [\"clippy\", \"rustfmt\"]\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "zcutil",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}