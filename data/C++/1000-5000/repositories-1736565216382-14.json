{
  "metadata": {
    "timestamp": 1736565216382,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DarthTon/Blackbone",
      "stars": 4916,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7412109375,
          "content": "#OS junk files\n[Tt]humbs.db\n*.DS_Store\n\n#Visual Studio files\n*.[Oo]bj\n*.user\n*.aps\n*.pch\n*.vspscc\n*.vssscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.[Cc]ache\n*.ilk\n*.log\n*.tlog\n*.pdb\n*.cer\n*.lib\n*.sbr\n*.sdf\n*.opensdf\n*.unsuccessfulbuild\n*.lastbuildstate\nipch/\nobj/\ncmake/\n[Bb]in\n[Dd]ebug*/\n[Rr]elease*/\nAnkh.NoLoad\n\n#MonoDevelop\n*.pidb\n*.userprefs\n\n#Tooling\n_ReSharper*/\n*.resharper\n[Tt]est[Rr]esult*\n*.sass-cache\n\n#Project files\n[Bb]uild/\nobj/\n\n#Subversion files\n.svn\n\n# Office Temp Files\n~$*\n\n#NuGet\npackages/\n\n#ncrunch\n*ncrunch*\n*crunch*.local.xml\n\n# visual studio database projects\n*.dbmdl\n\n#Test files\n*.testsettings\n\n#Generated libraries\n*.dll\n*.bin\n*.sys\n#and files\nGeneratedFiles*/\n\n*.ggpk\n*.idb\n*.opendb\n*.db\n*.sqlite\n/.vs\n*.db-shm\n*.db-wal\n*.json\n"
        },
        {
          "name": "BlackBone.sln",
          "type": "blob",
          "size": 7.4375,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.26430.15\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"BlackBone\", \"src\\BlackBone\\BlackBone.vcxproj\", \"{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Samples\", \"src\\Samples\\Samples.vcxproj\", \"{D31B07B5-C75F-4382-B07F-D95922764BD7}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"BlackBoneTest\", \"src\\BlackBoneTest\\BlackBoneTest.vcxproj\", \"{15F6F215-4A5E-4B57-B0A0-90B067111285}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug(DLL)|Win32 = Debug(DLL)|Win32\n\t\tDebug(DLL)|x64 = Debug(DLL)|x64\n\t\tDebug(XP)|Win32 = Debug(XP)|Win32\n\t\tDebug(XP)|x64 = Debug(XP)|x64\n\t\tDebug|Win32 = Debug|Win32\n\t\tDebug|x64 = Debug|x64\n\t\tRelease(DLL)|Win32 = Release(DLL)|Win32\n\t\tRelease(DLL)|x64 = Release(DLL)|x64\n\t\tRelease(XP)|Win32 = Release(XP)|Win32\n\t\tRelease(XP)|x64 = Release(XP)|x64\n\t\tRelease|Win32 = Release|Win32\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(DLL)|Win32.ActiveCfg = Debug(DLL)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(DLL)|Win32.Build.0 = Debug(DLL)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(DLL)|x64.ActiveCfg = Debug(DLL)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(DLL)|x64.Build.0 = Debug(DLL)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(XP)|Win32.ActiveCfg = Debug(XP)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(XP)|Win32.Build.0 = Debug(XP)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(XP)|x64.ActiveCfg = Debug(XP)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug(XP)|x64.Build.0 = Debug(XP)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Debug|x64.Build.0 = Debug|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(DLL)|Win32.ActiveCfg = Release(DLL)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(DLL)|Win32.Build.0 = Release(DLL)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(DLL)|x64.ActiveCfg = Release(DLL)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(DLL)|x64.Build.0 = Release(DLL)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(XP)|Win32.ActiveCfg = Release(XP)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(XP)|Win32.Build.0 = Release(XP)|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(XP)|x64.ActiveCfg = Release(XP)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release(XP)|x64.Build.0 = Release(XP)|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release|Win32.Build.0 = Release|Win32\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release|x64.ActiveCfg = Release|x64\n\t\t{A2C53563-46F5-4D87-903F-3F1F2FDB2DEB}.Release|x64.Build.0 = Release|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(DLL)|Win32.ActiveCfg = Debug(DLL)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(DLL)|Win32.Build.0 = Debug(DLL)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(DLL)|x64.ActiveCfg = Debug(DLL)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(DLL)|x64.Build.0 = Debug(DLL)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(XP)|Win32.ActiveCfg = Debug(XP)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(XP)|Win32.Build.0 = Debug(XP)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(XP)|x64.ActiveCfg = Debug(XP)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug(XP)|x64.Build.0 = Debug(XP)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|Win32.Deploy.0 = Debug|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|x64.Build.0 = Debug|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Debug|x64.Deploy.0 = Debug|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(DLL)|Win32.ActiveCfg = Release(DLL)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(DLL)|Win32.Build.0 = Release(DLL)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(DLL)|Win32.Deploy.0 = Release(DLL)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(DLL)|x64.ActiveCfg = Release(DLL)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(DLL)|x64.Build.0 = Release(DLL)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(XP)|Win32.ActiveCfg = Release(XP)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(XP)|Win32.Build.0 = Release(XP)|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(XP)|x64.ActiveCfg = Release(XP)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release(XP)|x64.Build.0 = Release(XP)|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release|Win32.Build.0 = Release|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release|Win32.Deploy.0 = Release|Win32\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release|x64.ActiveCfg = Release|x64\n\t\t{D31B07B5-C75F-4382-B07F-D95922764BD7}.Release|x64.Build.0 = Release|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(DLL)|Win32.ActiveCfg = Debug(DLL)|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(DLL)|Win32.Build.0 = Debug(DLL)|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(DLL)|x64.ActiveCfg = Debug(DLL)|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(DLL)|x64.Build.0 = Debug(DLL)|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(XP)|Win32.ActiveCfg = Debug|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(XP)|Win32.Build.0 = Debug|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(XP)|x64.ActiveCfg = Debug|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug(XP)|x64.Build.0 = Debug|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug|Win32.ActiveCfg = Debug|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug|Win32.Build.0 = Debug|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Debug|x64.Build.0 = Debug|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(DLL)|Win32.ActiveCfg = Release(DLL)|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(DLL)|Win32.Build.0 = Release(DLL)|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(DLL)|x64.ActiveCfg = Release(DLL)|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(DLL)|x64.Build.0 = Release(DLL)|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(XP)|Win32.ActiveCfg = Release|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(XP)|Win32.Build.0 = Release|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(XP)|x64.ActiveCfg = Release|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release(XP)|x64.Build.0 = Release|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release|Win32.ActiveCfg = Release|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release|Win32.Build.0 = Release|Win32\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release|x64.ActiveCfg = Release|x64\n\t\t{15F6F215-4A5E-4B57-B0A0-90B067111285}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {FA23DB8B-7FAB-4586-936D-4ADB4CD8B90E}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DIA",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 DarthTon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.263671875,
          "content": "# Blackbone\n\n### Windows memory hacking library\n\n## Features\n\n- **x86 and x64 support**\n\n**Process interaction**\n - Manage PEB32/PEB64\n - Manage process through WOW64 barrier\n\n**Process Memory**\n - Allocate and free virtual memory\n - Change memory protection\n - Read/Write virtual memory \n\n**Process modules**\n - Enumerate all (32/64 bit) modules loaded. Enumerate modules using Loader list/Section objects/PE headers methods.\n - Get exported function address\n - Get the main module\n - Unlink module from loader lists\n - Inject and eject modules (including pure IL images)\n - Inject 64bit modules into WOW64 processes\n - Manually map native PE images\n\n**Threads**\n - Enumerate threads\n - Create and terminate threads. Support for cross-session thread creation.\n - Get thread exit code\n - Get main thread\n - Manage TEB32/TEB64\n - Join threads\n - Suspend and resume threads\n - Set/Remove hardware breakpoints\n\n**Pattern search**\n - Search for arbitrary pattern in local or remote process\n \n**Remote code execution**\n - Execute functions in remote process\n - Assemble own code and execute it remotely\n - Support for cdecl/stdcall/thiscall/fastcall conventions\n - Support for arguments passed by value, pointer or reference, including structures\n - FPU types are supported\n - Execute code in new thread or any existing one\n \n**Remote hooking**\n - Hook functions in remote process using int3 or hardware breakpoints\n - Hook functions upon return\n \n**Manual map features**\n - x86 and x64 image support\n - Mapping into any arbitrary unprotected process\n - Section mapping with proper memory protection flags\n - Image relocations (only 2 types supported. I haven't seen a single PE image with some other relocation types)\n - Imports and Delayed imports are resolved\n - Bound import is resolved as a side effect, I think\n - Module exports\n - Loading of forwarded export images\n - Api schema name redirection\n - SxS redirection and isolation\n - Activation context support\n - Dll path resolving similar to native load order\n - TLS callbacks. Only for one thread and only with PROCESS_ATTACH/PROCESS_DETACH reasons.\n - Static TLS\n - Exception handling support (SEH and C++)\n - Adding module to some native loader structures(for basic module api support: GetModuleHandle, GetProcAdress, etc.)\n - Security cookie initialization\n - C++/CLI images are supported\n - Image unloading \n - Increase reference counter for import libraries in case of manual import mapping\n - Cyclic dependencies are handled properly\n \n**Driver features**\n- Allocate/free/protect user memory\n- Read/write user and kernel memory\n- Disable permanent DEP for WOW64 processes\n- Change process protection flag\n- Change handle access rights\n- Remap process memory\n- Hiding allocated user-mode memory\n- User-mode dll injection and manual mapping\n- Manual mapping of drivers\n\n## Requirements\n\n- Visual Studio 2017 15.7 or higher\n- Windows SDK 10.0.17134 or higher\n- WDK 10.0.17134 or higher (driver only)\n- VC++ 2017 Libs for Spectre (x86 and x64)\n- Visual C++ ATL (x86/x64) with Spectre Mitigations\n\n## License\nBlackbone is licensed under the MIT License. Dependencies are under their respective licenses.\n\n![Library](https://github.com/DarthTon/Blackbone/workflows/Library/badge.svg?branch=master) ![Driver](https://github.com/DarthTon/Blackbone/workflows/Driver/badge.svg?branch=master)\n"
        },
        {
          "name": "Testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}