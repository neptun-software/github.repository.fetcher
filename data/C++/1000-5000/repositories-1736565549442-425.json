{
  "metadata": {
    "timestamp": 1736565549442,
    "page": 425,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "infiniflow/infinity",
      "stars": 2910,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.45703125,
          "content": "Language: Cpp\nBasedOnStyle: LLVM\nIndentWidth: 4\nUseTab: Never\nColumnLimit: 150\nAlignAfterOpenBracket: Align\nAllowAllArgumentsOnNextLine: false\nAllowAllConstructorInitializersOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBreakConstructorInitializers: BeforeColon\nIndentCaseLabels: true\nNamespaceIndentation: None\nAccessModifierOffset: -4\nIncludeBlocks: Preserve\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.01953125,
          "content": "# .gitignore uses glob patterns instead of regex\n\n# file names without extension\n*\n!*.*\n!*/\n\n# names with special characters\n*#*\n*~*\n\n# names with given extension\n*.a\n*.app\n*.autobak\n*.class\n*.d\n*.dll\n*.dylib\n*.exe\n*.gch\n*.gz\n*.l.cc\n*.la\n*.lai\n*.lib\n*.lo\n*.log\n*.log.*\n*.mod\n*.o\n*.obj\n*.orig\n*.out\n*.output\n*.pb.h\n*.pb.cc\n*.pch\n*.pyc\n*.slo\n*.smod\n*.so\n*.tab.c\n*.tab.h\n*.tab.cc\n*.tab.hh\n*.tar\n*.tgz\n*.zip\n*.tar.bz2\n*.xz\n*_BACKUP_*\n*_BASE_*\n*_LOCAL_*\n*_REMOTE_*\n.DS_Store\n\n# build directory of Gradle, CMake etc\nbuild*/\ncmake-build-*\n.idea\n\n# ignore compilation configure file\nsrc/bin/compilation_config.h\nsrc/bin/compilation_config.cppm\n\n# bison output file\nparser.output\n\n# ignore parser auto generated files\n#lexer.cpp\n#lexer.h\n#parser.cpp\n#parser.h\n#location.h\n#location.hh\n#query_lexer.h\n#query_lexer.cpp\n#query_parser.h\n#query_parser.cpp\n\ntest/sql/**/*gen*.slt\ntest/sql/**/*big*.slt\ntest/sql/**/*fvecs*.slt\ntest/sql/**/*csr*.slt\ntest/data/**/*gen*\ntest/data/csv/**/*big*.csv\ntest/data/csv/*9_commas.csv\ntest/data/fvecs/*big*.fvecs\ntest/data/fvecs/test.fvecs\ntest/data/csr/test.csr\ntest/data/fvecs/pysdk_test.fvecs\ntest/data/csv/pysdk_test_import_with_different_size.csv\ntest/data/bvecs/\ntest/sql/dml/import/test_bvecs.slt\n\ninvalid/*\n\nbenchmark/toml/toml_config.h\nbenchmark/csv/csv_config.h\n\n# py thrift rpc\n#python/infinity/remote_thrift/infinity_thrift_rpc/constants.py\n#python/infinity/remote_thrift/infinity_thrift_rpc/InfinityService.py\n#python/infinity/remote_thrift/infinity_thrift_rpc/InfinityService-remote\n#python/infinity/remote_thrift/infinity_thrift_rpc/ttypes.py\n\n\n# cpp rpc\n#src/network/infinity_thrift/*\n\n#python sdk\npython/build\npython/dist\npython/.idea\npython/infinity_sdk.egg-info\n\n\nsift_1m\n\n# ignore all fvecs benchmark file\ntest/data/benchmark/*\n\n# ignore valgrind output file\ncallgrind.out.*\n\n# ignore vscode config file\n.vscode/\n\n# ignore vscode clangd cache file\n.cache/\n\n# ignore all benchmark datasets\npython/benchmark/datasets/\n\n.venv*/\ntmp*/\n\ndist/\npython/infinity_sdk/infinity_sdk.egg-info/\nminio/\n\n# not ignore Dockerfile\n!Dockerfile*\n"
        },
        {
          "name": ".tester_env",
          "type": "blob",
          "size": 0.0322265625,
          "content": "/home/huikong/Code/work/infinity\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.9404296875,
          "content": "cmake_minimum_required(VERSION 3.28.1)\n\nproject(infinity VERSION 0.6.0)\n\nif(NOT CMAKE_GENERATOR STREQUAL \"Ninja\")\n    message(FATAL_ERROR \"This project requires the Ninja generator. Refers to https://cmake.org/cmake/help/latest/manual/cmake-cxxmodules.7.html#generator-support\")\nendif()\n\n# find_program(CCACHE_FOUND ccache)\n\n# if(CCACHE_FOUND)\n#     set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)\n#     set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache) # Less useful to do it for linking, see edit2\n#     message(\"Find ccache\")\n# else()\n#     message(\"Can not find ccache\")\n# endif()\n\nset(CMAKE_CXX_STANDARD 20)\n\nmessage(STATUS \"CXX: ${CMAKE_CXX_COMPILER}\")\nexecute_process(COMMAND ${CMAKE_CXX_COMPILER} --version OUTPUT_VARIABLE clang_full_version_string)\nstring(REGEX REPLACE \".*clang version ([0-9]+\\\\.[0-9]+).*\" \"\\\\1\" CLANG_VERSION_STRING ${clang_full_version_string})\nif (CLANG_VERSION_STRING VERSION_GREATER 16)\n    # Print CMake version and project name\n    message(STATUS \"Building ${PROJECT_NAME} with CMake version: ${CMAKE_VERSION} On CLANG-${CLANG_VERSION_STRING}\")\n\n    set(CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-unused-parameter -Wno-unused-private-field\")\n    set(CMAKE_CXX_STANDARD_REQUIRED YES)\n    set(CMAKE_CXX_EXTENSIONS OFF)\n\n    SET(CMAKE_FIND_PACKAGE_SORT_ORDER NATURAL)\n    SET(CMAKE_FIND_PACKAGE_SORT_DIRECTION DEC)\n\n    find_package(LLVM REQUIRED CONFIG)\n\n    message(STATUS \"Found LLVM ${LLVM_PACKAGE_VERSION}\")\n    message(STATUS \"Using LLVM Header in: ${LLVM_INCLUDE_DIRS}\")\n    message(STATUS \"Using LLVM Library in: ${LLVM_LIBRARY_DIRS}\")\n\n\n    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-nostdinc++>)\n    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-isystem>)\n    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${LLVM_INCLUDE_DIRS}/c++/v1>)\n\n    add_link_options($<$<COMPILE_LANGUAGE:CXX>:-nostdlib++>)\n    add_link_options($<$<COMPILE_LANGUAGE:CXX>:-L${LLVM_LIBRARY_DIRS}>)\n    add_link_options($<$<COMPILE_LANGUAGE:CXX>:-Wl,-rpath,${LLVM_LIBRARY_DIRS}>)\n\nelse ()\n\n    message(FATAL_ERROR \"Please use clang version 17.0 and above, current version: ${CLANG_VERSION_STRING} ${CMAKE_CXX_COMPILER}\")\n\nendif ()\n\n# Get current system time and print the build time\nexecute_process(COMMAND \"date\" +\"%Y-%m-%d %H:%M.%S\" OUTPUT_VARIABLE CURRENT_SYS_TIME)\nstring(REGEX REPLACE \"\\n\" \"\" CURRENT_SYS_TIME ${CURRENT_SYS_TIME})\nmessage(STATUS \"Build time = ${CURRENT_SYS_TIME}\")\n\n# Get git information. WARNING: For functions which invoke execute_process, the variable populated by execute_process is visiable only inside the function!\nfind_package(Git)\nif(NOT Git_FOUND)\n    message(FATAL_ERROR \"Git not found.\")\nendif()\nexecute_process(\n        COMMAND \"${GIT_EXECUTABLE}\" symbolic-ref --short HEAD\n        OUTPUT_VARIABLE GIT_BRANCH_NAME\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\nexecute_process(\n        COMMAND \"${GIT_EXECUTABLE}\" describe --tags --abbrev=0\n        OUTPUT_VARIABLE GIT_TAG\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\nexecute_process(\n        COMMAND \"${GIT_EXECUTABLE}\" rev-list --count \"${GIT_TAG}..HEAD\"\n        OUTPUT_VARIABLE COMMIT_COUNT\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\nexecute_process(\n        COMMAND \"${GIT_EXECUTABLE}\" rev-parse --short HEAD\n        OUTPUT_VARIABLE HEAD_COMMIT_ID\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\n\nset(GIT_COMMIT_ID \"${GIT_TAG}-${COMMIT_COUNT}-${HEAD_COMMIT_ID}\")\nif(\"${GIT_BRANCH_NAME}\" STREQUAL \"\")\n    message(WARNING \"Branch name not found.\")\nelse()\n    message(STATUS \"Branch name = ${GIT_BRANCH_NAME}\")\nendif()\nif(\"${HEAD_COMMIT_ID}\" STREQUAL \"\")\n    message(WARNING \"Commit id not found.\")\nelse()\n    message(STATUS \"Commit-id = ${GIT_COMMIT_ID}\")\nendif()\n\n# attach additional cmake modules\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\nset(TEST_DATA_PATH ${CMAKE_SOURCE_DIR}/test/data)\nset(CSV_DATA_PATH ${CMAKE_SOURCE_DIR}/third_party/zsv/data)\nset(TMP_DATA_PATH ${CMAKE_SOURCE_DIR}/tmp)\n\n# You can disable jemalloc by passing the `-DENABLE_JEMALLOC=OFF` option to CMake.\noption(ENABLE_JEMALLOC \"Enable jemalloc support\" ON)\nif(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Debug\")\n    message(STATUS \"Disable jemalloc in Debug mode\")\n    set(ENABLE_JEMALLOC OFF)\nendif()\n\nif(ENABLE_JEMALLOC)\n    find_package(jemalloc REQUIRED)\n    set(JEMALLOC_STATIC_LIB \"jemalloc_pic.a\")\n    set(CMAKE_C_FLAGS  \"${CMAKE_C_FLAGS} -DENABLE_JEMALLOC_PROF\")\n    set(CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -DENABLE_JEMALLOC_PROF\")\nendif ()\n\nif (NOT CMAKE_BUILD_TYPE)\n    if (EXISTS \"${CMAKE_SOURCE_DIR}/.git\")\n        set(default_build_type \"RelWithDebInfo\")\n    else ()\n        set(default_build_type \"Debug\")\n    endif ()\n\n    set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING\n            \"Default BUILD_TYPE is ${default_build_type}\" FORCE)\nendif ()\n\nmessage(STATUS \"Build type = ${CMAKE_BUILD_TYPE}\")\n\noption(ENABLE_SANITIZER_THREAD \"Enable multi-thread sanitizer\" OFF)\n\nif (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Release\")\n\n    set(CMAKE_CXX_FLAGS \"${CMAKE_C_FLAGS} -Ofast -DNDEBUG\")\n    set(CMAKE_C_FLAGS  \"${CMAKE_C_FLAGS} -Ofast -DNDEBUG\")\n\nelseif (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"RelWithDebInfo\")\n\n    set(CMAKE_CXX_FLAGS \"${CMAKE_C_FLAGS} -O2 -g -DNDEBUG\")\n    set(CMAKE_C_FLAGS  \"${CMAKE_C_FLAGS} -O2 -g -DNDEBUG\")\n\nelseif (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Debug\")\n\n    set(CMAKE_CXX_FLAGS \"${CMAKE_C_FLAGS} -O0 -g\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O0 -g\")\n\n    if (\"${CODE_COVERAGE}\" STREQUAL \"ON\")\n        add_compile_options(--coverage)\n        add_link_options(--coverage)\n    else ()\n        set(CODE_COVERAGE \"OFF\")\n    endif()\n\n    message(STATUS \"Code Coverage = ${CODE_COVERAGE}\")\n\n    if(NOT ENABLE_JEMALLOC)\n        if (NOT ENABLE_SANITIZER_THREAD)\n            add_compile_options(-fsanitize=address -fsanitize=leak)\n            add_link_options(-fsanitize=address -fsanitize=leak)\n            message(STATUS \"Enable Address Sanitizer in target: infinity\")\n        else()\n            add_compile_options(-fsanitize=thread)\n            add_link_options(-fsanitize=thread)\n            message(STATUS \"Enable Thread Sanitizer in target: infinity\")\n        endif()\n\n        message(STATUS \"Enable Sanitizer in target: infinity\")\n\n        set(CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -fno-stack-protector -fno-var-tracking \")\n        add_compile_options(-fsanitize-recover=all)\n        add_link_options(-fsanitize-recover=all)\n\n        add_compile_options(\"-fno-omit-frame-pointer\")\n        add_link_options(\"-fno-omit-frame-pointer\")\n\n        #    add_compile_options(\"-fsanitize=undefined\")\n        #    add_link_options(\"-fsanitize=undefined\")\n\n    else()\n        message(STATUS \"Disable AddressSanitizer because jemalloc\")\n    endif()\n\n    set(CMAKE_DEBUG_POSTFIX \"\")\n\nelse ()\n    message(FATAL_ERROR \"Only support CMake build type: Debug, RelWithDebInfo, and Release\")\nendif ()\n\nif (CLANG_VERSION_STRING VERSION_EQUAL 17)\n    set(CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -Wall -Werror -Wno-asm-operand-widths -Wno-unused-command-line-argument -Wno-deprecated-declarations -Wno-read-modules-implicitly -Wextra -Wno-unused-parameter -Wno-unused-private-field -pthread -fcolor-diagnostics\")\nelse ()\n    set(CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} -Wall -Werror -Wno-asm-operand-widths -Wno-unused-command-line-argument -Wno-deprecated-declarations -Wextra -Wno-unused-parameter -Wno-unused-private-field -pthread -fcolor-diagnostics\")\nendif ()\n\nMESSAGE(STATUS \"C++ Compilation flags: \" ${CMAKE_CXX_FLAGS})\n\nif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^arm64.*\")\n    set(ARM64 TRUE)\nelseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^aarch64.*\")\n    set(ARM64 TRUE)\nelseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^(x86_64|amd64)$\")\n    set(X86_64 TRUE)\nendif()          \n\n#add_definitions(-march=native)\nadd_definitions(-DSIMDE_ENABLE_NATIVE_ALIASES)\nif (CMAKE_C_COMPILER_ID STREQUAL \"Clang\" AND CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL \"18.0\")\n    if(X86_64)\n        add_definitions(-mevex512)\n    else()\n        add_definitions(-march=native)\n    endif()\nendif ()\n\nexecute_process(\n        COMMAND bash -c \"zgrep CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y /proc/config.gz 2>/dev/null; grep CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y /boot/config-$(uname -r) 2>/dev/null\"\n        OUTPUT_VARIABLE HAVE_EFFICIENT_UNALIGNED_ACCESS\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\nif(\"${HAVE_EFFICIENT_UNALIGNED_ACCESS}\" STREQUAL \"CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y\")\n    message(STATUS \"Found CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y\")\n    add_definitions(-DHAVE_EFFICIENT_UNALIGNED_ACCESS)\nendif()\n\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\nADD_DEFINITIONS(-D INFINITY_DEBUG)\nendif()\n\n# find_package(Boost REQUIRED)\nfind_package(Lz4 REQUIRED)\n\n\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIC\")\nfind_package(Python COMPONENTS Interpreter Development REQUIRED)\n#find_package(Python 3.8\n#        REQUIRED COMPONENTS Interpreter Development.Module\n#        OPTIONAL_COMPONENTS Development.SABIModule)\n\nif (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build.\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif ()\n\nadd_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/third_party/nanobind)\n\nadd_subdirectory(src)\nadd_subdirectory(third_party EXCLUDE_FROM_ALL)\n\n# set parameters for unit test coverage\n# TODO: issue error \"cannot merge previous GCDA file\" when turn following switch.\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage\")\n\n# Compile the unit test\n\n# Compile benchmark\nadd_subdirectory(benchmark)\nadd_subdirectory(client)\n\n# quit early for scikit-build-core\n# does not need CPack settings\n# does not need to install the infinity target, config files and resources\nif (SKBUILD)\n    return()\nendif ()\n\n# CPack settings\nset(CPACK_PACKAGE_NAME \"infinity\")\n# dpkg requires version to be starting with number\nif(DEFINED CPACK_PACKAGE_VERSION)\n    string(REGEX REPLACE \"^[^0-9]+\" \"\" CPACK_PACKAGE_VERSION \"${CPACK_PACKAGE_VERSION}\")\n    string(REPLACE \"-\" \".\" CPACK_PACKAGE_VERSION \"${CPACK_PACKAGE_VERSION}\")\nendif()\nif(NOT DEFINED CPACK_PACKAGE_VERSION OR CPACK_PACKAGE_VERSION STREQUAL \"\")\n    set(CPACK_PACKAGE_VERSION \"${GIT_COMMIT_ID}\")\nendif()\nset(CPACK_PACKAGE_RELEASE 1)\nset(CPACK_PACKAGE_CONTACT \"Zhichang Yu <yuzhichang@gmail.com>\")\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"The AI-native database built for LLM applications, offering incredibly fast vector and full-text search.\")\nset(CPACK_PACKAGE_VENDOR \"infiniflow\")\nset(CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_HOST_SYSTEM_PROCESSOR}\")\n\n# https://cmake.org/cmake/help/latest/command/install.html\n# Install target\n# WANNING: If an absolute path is given, cpack will install the specific files on the host system (requires root permission) and then included in the package.\n# If an relative path (interpreted relative to the value of the CMAKE_INSTALL_PREFIX variable) is given, cpack include specific files in the package without actually installing them on the host system.\n# CMAKE_INSTALL_PREFIX defaults to \"/usr/local\"\nset(CMAKE_INSTALL_PREFIX /usr)\ninstall(TARGETS infinity DESTINATION bin)\ninstall(FILES conf/infinity.service DESTINATION lib/systemd/system)\ninstall(FILES conf/infinity_conf.toml DESTINATION etc)\n\n# https://cmake.org/cmake/help/latest/cpack_gen/rpm.html\n# Specify the post-install script for RPM\n# CPackRPM needs the absolute path of the file as CPack does not know that script is relative to source tree.\nset(CPACK_RPM_POST_INSTALL_SCRIPT_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/conf/postinst\")\n\n# https://cmake.org/cmake/help/latest/cpack_gen/deb.html\n# Add custom script to the control.tar.gz. Typical usage is for conffiles, postinst, postrm, prerm.\n# Note: DEB requires the file name be one of postinst, postrm, prerm and the \"+x\" permission, while rpm doesn't require that.\nset(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${CMAKE_CURRENT_SOURCE_DIR}/conf/postinst\")\n\n# Specify the package generators\nset(CPACK_GENERATOR \"RPM;DEB;TGZ\")\n\n# Enable CPack debug output\nset(CPACK_PACKAGE_DEBUG True)\n\n# https://cmake.org/cmake/help/latest/variable/CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION.html\nset(CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION \"ON\")\ninclude(CPack)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.0107421875,
          "content": "# Contribution Guidelines\n\nThanks for wanting to contribute to Infinity. This document offers guidelines and major considerations for submitting your contributions.\n\n- To report a bug, file a [GitHub issue](https://github.com/infiniflow/infinity/issues/new/choose) with us.\n- For further questions, you can explore existing discussions or initiate a new one in [Discussions](https://github.com/orgs/infiniflow/discussions).\n\n\n## What you can contribute\n\nThe list below mentions some contributions you can make, but it is not a complete list.\n\n- Proposing or implementing new features\n- Fixing a bug\n- Adding test cases or demos\n- Posting a blog or tutorial\n- Updates to existing documents, codes, or annotations.\n- Suggesting more user-friendly error codes\n\n## File a pull request (PR)\n\n### General workflow\n\n1. Fork our GitHub repository.\n2. Clone your fork to your local machine: \n`git clone git@github.com:<yourname>/infinity.git`\n3. Create a local branch: \n`git checkout -b my-branch`\n4. Provide sufficient information in your commit message\n`git commit -m 'Provide sufficient info in your commit message'`\n5. Commit changes to your local branch, and push to GitHub: (include necessary commit message)\n`git push origin my-branch.`\n6. Submit a pull request for review.\n\n### Before filing a PR\n\n- Consider splitting a large PR into multiple smaller, standalone PRs to keep a traceable development history. \n- Ensure that your PR addresses just one issue, or keep any unrelated changes small.\n- Add test cases when contributing new features. They demonstrate that your code functions correctly and protect against potential issues from future changes.\n### Describing your PR \n\n- Ensure that your PR title is concise and clear, providing all the required information.\n- Refer to a corresponding GitHub issue in your PR description if applicable. \n- Include sufficient design details for *breaking changes* or *API changes* in your description.\n\n### Reviewing & merging a PR\n- Ensure that your PR passes all Continuous Integration (CI) tests before merging it."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8046875,
          "content": "<div align=\"center\">\n  <img width=\"187\" src=\"https://github.com/infiniflow/infinity/assets/7248/015e1f02-1f7f-4b09-a0c2-9d261cd4858b\" alt=\"Infinity logo\"/>\n</div>\n\n\n<p align=\"center\">\n    <b>The AI-native database built for LLM applications, providing incredibly fast hybrid search of dense embedding, sparse embedding, tensor and full-text</b>\n</p>\n\n<h4 align=\"center\">\n  <a href=\"https://infiniflow.org/docs/dev/category/get-started\">Document</a> |\n  <a href=\"https://infiniflow.org/docs/dev/benchmark\">Benchmark</a> |\n  <a href=\"https://twitter.com/infiniflowai\">Twitter</a> |\n  <a href=\"https://discord.gg/jEfRUwEYEV\">Discord</a>\n</h4>\n\n\nInfinity is a cutting-edge AI-native database that provides a wide range of search capabilities for rich data types such as dense vector, sparse vector, tensor, full-text, and structured data. It provides robust support for various LLM applications, including search, recommenders, question-answering, conversational AI, copilot, content generation, and many more **RAG** (Retrieval-augmented Generation) applications.\n\n- [Key Features](#-key-features)\n- [Get Started](#-get-started)\n- [Document](#-document)\n- [Roadmap](#-roadmap)\n- [Community](#-community)\n\n## ⚡️ Performance\n\n<div class=\"column\" align=\"middle\">\n  <img src=\"https://github.com/user-attachments/assets/c4c98e23-62ac-4d1a-82e5-614bca96fe0a\" alt=\"Infinity performance comparison\"/>\n</div>\n\n## 🌟 Key Features\n\nInfinity comes with high performance, flexibility, ease-of-use, and many features designed to address the challenges facing the next-generation AI applications:\n\n### 🚀 Incredibly fast\n\n- Achieves 0.1 milliseconds query latency and 15K+ QPS on million-scale vector datasets.\n- Achieves 1 millisecond latency and 12K+ QPS in full-text search on 33M documents.\n\n> See the [Benchmark report](https://infiniflow.org/docs/dev/benchmark) for more information.\n\n### 🔮 Powerful search\n\n- Supports a hybrid search of dense embedding, sparse embedding, tensor, and full text, in addition to filtering.\n- Supports several types of rerankers including RRF, weighted sum and **ColBERT**.\n\n### 🍔 Rich data types\n\nSupports a wide range of data types including strings, numerics, vectors, and more.\n\n### 🎁 Ease-of-use\n\n- Intuitive Python API. See the [Python API](https://infiniflow.org/docs/dev/pysdk_api_reference)\n- A single-binary architecture with no dependencies, making deployment a breeze.\n- Embedded in Python as a module and friendly to AI developers.  \n\n## 🎮 Get Started\n\nInfinity supports two working modes, embedded mode and client-server mode. Infinity's embedded mode enables you to quickly embed Infinity into your Python applications, without the need to connect to a separate backend server. The following shows how to operate in embedded mode:\n\n   ```bash\n   pip install infinity-embedded-sdk==0.6.0.dev1\n   ```\n   Use Infinity to conduct a dense vector search:\n   ```python\n   import infinity_embedded\n\n   # Connect to infinity\n   infinity_object = infinity_embedded.connect(\"/absolute/path/to/save/to\")\n   # Retrieve a database object named default_db\n   db_object = infinity_object.get_database(\"default_db\")\n   # Create a table with an integer column, a varchar column, and a dense vector column\n   table_object = db_object.create_table(\"my_table\", {\"num\": {\"type\": \"integer\"}, \"body\": {\"type\": \"varchar\"}, \"vec\": {\"type\": \"vector, 4, float\"}})\n   # Insert two rows into the table\n   table_object.insert([{\"num\": 1, \"body\": \"unnecessary and harmful\", \"vec\": [1.0, 1.2, 0.8, 0.9]}])\n   table_object.insert([{\"num\": 2, \"body\": \"Office for Harmful Blooms\", \"vec\": [4.0, 4.2, 4.3, 4.5]}])\n   # Conduct a dense vector search\n   res = table_object.output([\"*\"])\n                     .match_dense(\"vec\", [3.0, 2.8, 2.7, 3.1], \"float\", \"ip\", 2)\n                     .to_pl()\n   print(res)\n   ```\n\n> 💡 For more information about Infinity's Python API, see the [Python API Reference](https://infiniflow.org/docs/dev/pysdk_api_reference).\n\n#### 🔧 Deploy Infinity in client-server mode\n\nIf you wish to deploy Infinity with the server and client as separate processes, see the [Deploy infinity server](https://infiniflow.org/docs/dev/deploy_infinity_server) guide.\n\n#### 🔧 Build from Source\n\nSee the [Build from Source](https://infiniflow.org/docs/dev/build_from_source) guide.\n\n## 📚 Document\n\n- [Quickstart](https://infiniflow.org/docs/dev/)\n- [Python API](https://infiniflow.org/docs/dev/pysdk_api_reference)\n- [HTTP API](https://infiniflow.org/docs/dev/http_api_reference)\n- [References](https://infiniflow.org/docs/dev/category/references)\n- [FAQ](https://infiniflow.org/docs/dev/FAQ)\n\n## 📜 Roadmap\n\nSee the [Infinity Roadmap 2025](https://github.com/infiniflow/infinity/issues/2393)\n\n## 🙌 Community\n\n- [Discord](https://discord.gg/jEfRUwEYEV)\n- [Twitter](https://twitter.com/infiniflowai)\n- [GitHub Discussions](https://github.com/infiniflow/infinity/discussions)\n\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "centos7-vault.repo",
          "type": "blob",
          "size": 0.76953125,
          "content": "[C7.9.2009-base]\nname=CentOS-7.9.2009 - Base\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos-vault/7.9.2009/os/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[C7.9.2009-updates]\nname=CentOS-7.9.2009 - Updates\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos-vault/7.9.2009/updates/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[C7.9.2009-extras]\nname=CentOS-7.9.2009 - Extras\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos-vault/7.9.2009/extras/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n[C7.9.2009-centosplus]\nname=CentOS-7.9.2009 - Plus\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos-vault/7.9.2009/centosplus/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5322265625,
          "content": "# Refers to:\n# - https://packaging.python.org/en/latest/guides/writing-pyproject-toml/\n# - https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/\n# - https://docs.python.org/3/c-api/stable.html\n# - https://github.com/scikit-build/scikit-build-core\n# - https://github.com/wjakob/nanobind/blob/master/docs/api_cmake.rst\n\n[build-system]\nrequires = [\"scikit-build-core\", \"nanobind\"]\nbuild-backend = \"scikit_build_core.build\"\n\n[project]\nname = \"infinity_embedded_sdk\"\nversion = \"0.6.0.dev1\"\nrequires-python = \">=3.10\"\ndependencies = [\n    \"sqlglot~=11.7.0\",\n    \"pydantic~=2.9.0\",\n    \"thrift~=0.20.0\",\n    \"setuptools~=75.2.0\",\n    \"pytest~=8.3.0\",\n    \"pandas~=2.2.0\",\n    \"numpy~=1.26.0\",\n    \"pyarrow~=17.0.0\",\n    \"polars~=1.9.0\",\n    \"openpyxl~=3.1.0\",\n    \"requests~=2.32.0\"\n]\ndescription = \"infinity\"\nreadme = \"README.md\"\n\n[tool.scikit-build]\nminimum-version = \"0.4\"\ncmake.targets = [\"embedded_infinity_ext\"]\ncmake.build-type = \"Release\"\nbuild-dir = \"build/{build_type}\"\n\nwheel.py-api = \"cp310\"\nwheel.packages = [\"python/infinity_embedded\"]\n\n[tool.pytest.ini_options]\naddopts = \"--strict-markers\"\nmarkers = [\n    \"L0\",\n    \"L1\",\n    \"L2\",\n    \"L3\",\n    \"complex\",\n    \"slow\",\n    \"nightly\",\n]\n\nfilterwarnings = [\n    \"error\",\n    \"ignore::UserWarning\",\n    \"ignore::ResourceWarning\",\n    \"ignore:pkg_resources is deprecated as an API:DeprecationWarning\",\n    # \"ignore::thrift.transport.TTransport\",\n    # note the use of single quote below to denote \"raw\" strings in TOML\n    'ignore:function ham\\(\\) is deprecated:DeprecationWarning',\n]"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "thrift",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}