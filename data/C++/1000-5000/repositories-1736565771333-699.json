{
  "metadata": {
    "timestamp": 1736565771333,
    "page": 699,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fasiondog/hikyuu",
      "stars": 2297,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.12109375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 0\nContinuationIndentWidth: 2\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:   \n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories: \n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        4\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[flake8]\nmax-line-length = 120\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2197265625,
          "content": "*.py linguist-language=python\n*.h linguist-language=C++\n*.c linguist-language=C++\n*.hpp linguist-language=C++\n*.cpp linguist-language=C++\n*.html linguist-language=C++\n*.mod linguist-language=C++\n*.ipynb linguist-language=C++\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.099609375,
          "content": ".xmake\n.idea\n*.xml\n*.bak\n*.pyc\n*.pyd\n*.so\n*.log\n*.plk\n*.exe\n*.sdf\n*.suo\n*.dll\n*.lib\n*.so\n*.so.*\n*.so.*.*\n*.dylib\n.metadata\n.settings\n.cproject\n.project\n.pyproject\n.vscode\n.clangd\n.vs\n.ipynb_checkpoints\nnohup.out\ntemp\ntmp\nfile\ntemp.txt\ncompile_info\nrelease.x64.version.h\nrelease.x86.version.h\nhikyuu.code-workspace\n/install\n/build\n/docs/build\n/docs/notepad-workspace\n/cppcheck-cppcheck-build-dir\n*~\ninstall\n.DS_Store\nhikyuu_cpp/hikyuu/config.h\nhikyuu_cpp/hikyuu/version.h\nhikyuu/tools/maintain/importdata.ini\nhikyuu/libboost_*\nhikyuu/cpp/libboost_*\nhikyuu/importdata\nhikyuu/.eggs\nHikyuu.egg-info\nhikyuu.egg-info\ndist\nboost_*\npy_version\nvsxmake2010\nvsxmake2013\nvsxmake2015\nvsxmake2017\nvsxmake2019\nvs2017\nvs2019\nvs2010\nvs2013\nvs2015\ncover_report\ncover*.info\n*.gcno\nvsxmake*\nhikyuu/cpp/libhku_hdf5_cpp.so.200\nhikyuu/cpp/libhku_hdf5_cpp.so.200.2.0\nhikyuu/cpp/libhku_hdf5_hl_cpp.so.200\nhikyuu/cpp/libhku_hdf5_hl_cpp.so.200.1.0\nhikyuu/cpp/libhku_hdf5_hl.so.200\nhikyuu/cpp/libhku_hdf5_hl.so.200.1.0\nhikyuu/cpp/libhku_hdf5.so.200\nhikyuu/cpp/libhku_hdf5.so.200.2.0\nhikyuu/include\n.virtual_documents\nhikyuu_cpp/hikyuu/utilities/config.h\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".lua-format",
          "type": "blob",
          "size": 0.904296875,
          "content": "column_limit: 120\nindent_width: 4\nuse_tab: false\ntab_width: 4\ncontinuation_indent_width: 4\nspaces_before_call: 1\nkeep_simple_control_block_one_line: true\nkeep_simple_function_one_line: true\nalign_args: true\nbreak_after_functioncall_lp: false\nbreak_before_functioncall_rp: false\nspaces_inside_functioncall_parens: false\nspaces_inside_functiondef_parens: false\nalign_parameter: true\nchop_down_parameter: false\nbreak_after_functiondef_lp: false\nbreak_before_functiondef_rp: false\nalign_table_field: true\nbreak_after_table_lb: true\nbreak_before_table_rb: true\nchop_down_table: true\nchop_down_kv_table: true\ntable_sep: \",\"\ncolumn_table_limit: 120\nextra_sep_at_table_end: true\nspaces_inside_table_braces: true\nbreak_after_operator: true\ndouble_quote_to_single_quote: false\nsingle_quote_to_double_quote: false\nspaces_around_equals_in_field: true\nline_breaks_after_function_body: 1\nline_separator: input\nModified: 2023-06-28 11:33:46\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "config.h.in",
          "type": "blob",
          "size": 1.458984375,
          "content": "#pragma once\n#ifndef HIKYUU_CONFIG_H_\n#define HIKYUU_CONFIG_H_\n\n// clang-format off\n\n// Debug 模式\n#define HKU_DEBUG_MODE ${HKU_DEBUG_MODE}\n\n// support serialization\n#define HKU_SUPPORT_SERIALIZATION  ${SUPPORT_SERIALIZATION}\n\n#if HKU_SUPPORT_SERIALIZATION\n#define HKU_SUPPORT_TEXT_ARCHIVE   ${SUPPORT_TEXT_ARCHIVE}\n#define HKU_SUPPORT_XML_ARCHIVE    ${SUPPORT_XML_ARCHIVE}  //must 1 for python\n#define HKU_SUPPORT_BINARY_ARCHIVE ${SUPPORT_BINARY_ARCHIVE}  //must 1 for python\n#endif /* HKU_SUPPORT_SERIALIZATION*/\n\n// 检查下标越界\n#define CHECK_ACCESS_BOUND ${CHECK_ACCESS_BOUND}\n\n// 启用MSVC内存泄漏检查\n#define ENABLE_MSVC_LEAK_DETECT ${ENABLE_MSVC_LEAK_DETECT}\n\n// 启用内存泄漏检测，用于 linux 系统\n#define HKU_ENABLE_LEAK_DETECT ${HKU_ENABLE_LEAK_DETECT}\n\n// 启用发送用户使用信息\n#define HKU_ENABLE_SEND_FEEDBACK ${HKU_ENABLE_SEND_FEEDBACK}\n\n// 启用 hdf5 K线数据引擎\n#define HKU_ENABLE_HDF5_KDATA ${HKU_ENABLE_HDF5_KDATA}\n\n// 启用 MySQL K线数据引擎\n#define HKU_ENABLE_MYSQL_KDATA ${HKU_ENABLE_MYSQL_KDATA}\n\n// 启用 SQLite K线数据引擎\n#define HKU_ENABLE_SQLITE_KDATA ${HKU_ENABLE_SQLITE_KDATA}\n\n// 启用通达信本地 K线数据引擎\n#define HKU_ENABLE_TDX_KDATA ${HKU_ENABLE_TDX_KDATA}\n\n// 使用低精度版本，Indicator 使用 float 类型进行计算\n#define HKU_USE_LOW_PRECISION ${HKU_USE_LOW_PRECISION}\n\n// 使用 TA-Lib\n#define HKU_ENABLE_TA_LIB ${HKU_ENABLE_TA_LIB}\n\n// clang-format on\n\n#endif /* HIKYUU_CONFIG_H_ */"
        },
        {
          "name": "config_utils.h.in",
          "type": "blob",
          "size": 0.7060546875,
          "content": "#pragma once\n#ifndef HKU_UTILS_CONFIG_H_\n#define HKU_UTILS_CONFIG_H_\n\n#include \"osdef.h\"\n\n// clang-format off\n\n${define HKU_ENABLE_MYSQL}\n#if HKU_ENABLE_MYSQL && HKU_OS_WINDOWS\n#ifndef NOMINMAX\n#define NOMINMAX\n#endif\n#endif\n\n${define HKU_ENABLE_SQLITE}\n${define HKU_ENABLE_SQLCIPHER}\n${define HKU_SQL_TRACE}\n\n${define HKU_SUPPORT_DATETIME}\n\n${define HKU_ENABLE_INI_PARSER}\n\n${define HKU_ENABLE_STACK_TRACE}\n\n${define HKU_CLOSE_SPEND_TIME}\n\n${define HKU_USE_SPDLOG_ASYNC_LOGGER}\n${define HKU_LOG_ACTIVE_LEVEL}\n\n${define HKU_ENABLE_MO}\n\n${define HKU_ENABLE_HTTP_CLIENT}\n${define HKU_ENABLE_HTTP_CLIENT_SSL}\n${define HKU_ENABLE_HTTP_CLIENT_ZIP}\n\n${define HKU_ENABLE_NODE}\n\n// clang-format on\n\n#endif /* HKU_UTILS_CONFIG_H_ */"
        },
        {
          "name": "copy_dependents.lua",
          "type": "blob",
          "size": 3.1513671875,
          "content": "\n-- 拷贝依赖的第三方库头文件及lib到指定目录\ntask(\"copy_dependents\")\n    set_category(\"plugin\")\n\n    -- 设置运行脚本\n    -- destpath 目标目录\n    -- onlylib 只拷贝lib库\n    on_run(function(target, destpath, onlylib)\n        local libdir = destpath .. '/lib'\n\n        -- 将依赖的库拷贝至build的输出目录\n        for libname, pkg in pairs(target:pkgs()) do\n            if pkg:installdir() == nil then\n                print(libname ..  \": Not found installdir, maybe it is system lib!\");\n                goto continue\n            end\n                        \n            print(\"dependent package: \" .. pkg:installdir())\n            --local linkdirs = pkg:get(\"linkdirs\") \n            -- 部分库没有 linkdirs ，如：MNN, Paddle-lite，所以使用 includedirs\n            local pkg_path = pkg:get(\"includedirs\")\n            if pkg_path == nil then \n                pkg_path = pkg:get(\"sysincludedirs\") -- xmake 2.3.9 改为了 sysincludedirs\n            end\n\n            if pkg_path == nil then\n                goto continue\n            end\n\n            -- 安装模式下拷贝所有依赖库的头文件\n            if not onlylib then\n                if type(pkg_path) == 'string' then\n                    local pos = string.find(pkg_path, \"opencv\")\n                    if pos == nil then\n                        os.trycp(pkg_path, destpath)\n                    else\n                        os.trycp(pkg_path .. \"/opencv2\", destpath .. \"/include\")\n                    end\n                elseif type(pkg_path) == 'table' then\n                    for i=1, #pkg_path do\n                        local pos = string.find(pkg_path[i], \"hku_utils\")\n                        if pos == nil then\n                            pos = string.find(pkg_path[i], \"opencv\")\n                            if pos == nil then\n                                os.trycp(pkg_path[i], destpath)\n                            else\n                                os.trycp(pkg_path[i] .. \"/opencv2\", destpath .. \"/include\")\n                            end\n                        else\n                            for _, filedir in ipairs(os.dirs(pkg_path[i] .. \"/*\")) do\n                                local pos = string.find(filedir, \"hikyuu\")\n                                if pos == nil then\n                                    os.trycp(filedir, destpath .. \"/include\")\n                                else\n                                    os.trycp(filedir .. \"/utilities\", destpath .. \"/include/hikyuu\")\n                                end\n                            end\n                        end\n                    end\n                end\n            end \n            \n            -- 拷贝依赖的库文件\n            os.trycp(pkg:installdir() .. \"/lib/*\", libdir)\n            if is_plat(\"windows\") then\n                os.trycp(pkg:installdir() .. \"/bin/*.dll\", libdir)\n            end\n\n            :: continue ::\n        end        \n    end)\n\n    set_menu {\n        -- usage\n        usage = \"xmake copy_dependents [options]\"\n\n        -- description\n    ,   description = \"拷贝依赖的第三方库头文件及lib到指定目录!\"\n\n        -- options\n    ,   options = {}\n    }     \ntask_end()"
        },
        {
          "name": "cppcheck.cppcheck",
          "type": "blob",
          "size": 1.6611328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"1\">\n    <builddir>cppcheck-cppcheck-build-dir</builddir>\n    <analyze-all-vs-configs>false</analyze-all-vs-configs>\n    <check-headers>true</check-headers>\n    <check-unused-templates>false</check-unused-templates>\n    <max-ctu-depth>10</max-ctu-depth>\n    <max-template-recursion>1000</max-template-recursion>\n    <defines>\n        <define name=\"BOOST_SERIALIZATION_ASSUME_ABSTRACT\"/>\n        <define name=\"TABLE_BIND6\"/>\n        <define name=\"TABLE_BIND3\"/>\n        <define name=\"TABLE_BIND4\"/>\n        <define name=\"HKU_ENABLE_INI_PARSER=1\"/>\n        <define name=\"HKU_SUPPORT_DATETIME=1\"/>\n        <define name=\"HKU_ENABLE_HTTP_CLIENT=1\"/>\n        <define name=\"HKU_ENABLE_MO=1\"/>\n    </defines>\n    <undefines>\n        <undefine>int64_t</undefine>\n        <undefine>int32_t</undefine>\n        <undefine>uint64_t</undefine>\n        <undefine>uint32_t</undefine>\n        <undefine>uint8_t</undefine>\n        <undefine>int8_t</undefine>\n    </undefines>\n    <paths>\n        <dir name=\"hikyuu_cpp/hikyuu\"/>\n        <dir name=\"hikyuu_cpp/hikyuu_server\"/>\n    </paths>\n    <libraries>\n        <library>boost</library>\n    </libraries>\n    <suppressions>\n        <suppression>unusedFunction</suppression>\n        <suppression>ConfigurationNotChecked</suppression>\n        <suppression>toomanyconfigs</suppression>\n        <suppression>unknownMacro</suppression>\n        <suppression>missingIncludeSystem</suppression>\n        <suppression>missingInclude</suppression>\n        <suppression>cstyleCast</suppression>\n        <suppression>shadowFunction</suppression>\n        <suppression>useStlAlgorithm</suppression>\n    </suppressions>\n</project>\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hikyuu",
          "type": "tree",
          "content": null
        },
        {
          "name": "hikyuu_cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "hikyuu_pywrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 9.673828125,
          "content": "![title](docs/source/_static/00000-title.png)\n\n---\n\n![img](https://static.pepy.tech/badge/hikyuu) ![img](https://static.pepy.tech/badge/hikyuu/month) ![img](https://static.pepy.tech/badge/hikyuu/week) ![img](https://github.com/fasiondog/hikyuu/workflows/win-build/badge.svg) ![img](https://github.com/fasiondog/hikyuu/workflows/ubuntu-build/badge.svg) ![img](https://img.shields.io/github/license/mashape/apistatus.svg)\n\nHikyuu Quant Framework是一款基于C++/Python的开源量化交易研究框架，用于策略分析及回测（目前主要用于国内A股市场）。其核心思想基于当前成熟的系统化交易方法，将整个系统化交易抽象为由市场环境判断策略、系统有效条件、信号指示器、止损/止盈策略、资金管理策略、盈利目标策略、移滑价差算法等组件，你可以分别构建这些组件的策略资产库，在实际研究中对它们自由组合来观察系统的有效性、稳定性以及单一种类策略的效果。\n\n👉 **项目地址：**\n\n* [https://github.com/fasiondog/hikyuu](https://github.com/fasiondog/hikyuu)\n* [https://gitee.com/fasiondog/hikyuu](https://gitee.com/fasiondog/hikyuu)\n* [https://gitcode.com/hikyuu/hikyuu](https://gitcode.com/hikyuu/hikyuu)\n\n👉 **项目首页：**[https://hikyuu.org/](https://hikyuu.org/)\n\n👉 **帮助文档：**[https://hikyuu.readthedocs.io/zh-cn/latest/index.html](https://hikyuu.readthedocs.io/zh-cn/latest/index.html)\n\n👉 **入门示例:**  [https://nbviewer.org/github/fasiondog/hikyuu/blob/master/hikyuu/examples/notebook/000-Index.ipynb?flush_cache=True](https://nbviewer.org/github/fasiondog/hikyuu/blob/master/hikyuu/examples/notebook/000-Index.ipynb?flush_cache=True)\n\n👉 **策略部件库：**[https://gitee.com/fasiondog/hikyuu_hub](https://gitee.com/fasiondog/hikyuu_hub)\n\n👉 感谢网友提供的 Hikyuu Ubuntu虚拟机环境, 百度网盘下载(提取码: ht8j): [https://pan.baidu.com/s/1CAiUWDdgV0c0VhPpe4AgVw?pwd=ht8j](https://pan.baidu.com/s/1CAiUWDdgV0c0VhPpe4AgVw?pwd=ht8j)\n\n示例：\n\n```python\n    #创建模拟交易账户进行回测，初始资金30万\n    my_tm = crtTM(init_cash = 300000)\n\n    #创建信号指示器（以5日EMA为快线，5日EMA自身的10日EMA作为慢线，快线向上穿越慢线时买入，反之卖出）\n    my_sg = SG_Flex(EMA(CLOSE(), n=5), slow_n=10)\n\n    #固定每次买入1000股\n    my_mm = MM_FixedCount(1000)\n\n    #创建交易系统并运行\n    sys = SYS_Simple(tm = my_tm, sg = my_sg, mm = my_mm)\n    sys.run(sm['sz000001'], Query(-150))\n```\n\n![img](docs/source/_static/10000-overview.png)\n\n完整示例参见：[https://nbviewer.jupyter.org/github/fasiondog/hikyuu/blob/master/hikyuu/examples/notebook/000-Index.ipynb?flush_cache=True](https://nbviewer.jupyter.org/github/fasiondog/hikyuu/blob/master/hikyuu/examples/notebook/000-Index.ipynb?flush_cache=True)\n\n# 为什么选择 Hikyuu？\n\n* **组合灵活，分类构建策略资产库** Hikyuu对系统化交易方法进行了良好的抽象：市场环境判断策略、系统有效条件、信号指示器、止损/止盈策略、资金管理策略、盈利目标策略、移滑价差算法、交易对象选择策略、资金分配策略。可以在此基础上构建自己的策略库，并进行灵活的组合和测试。在进行策略探索时，可以更加专注于某一方面的策略性能与影响。其主要功能模块如下：![img](docs/source/_static/10002-function-arc.png)\n* **性能保障，打造自己的专属应用** 目前项目包含了3个主要组成部分：基于C++的核心库、对C++进行包装的Python库(hikyuu)、基于Python的交互式工具。\n  * AMD 7950x 实测：A股全市场（1913万日K线）仅加载全部日线计算 20日 MA 并求最后 MA 累积和，首次执行含数据加载 耗时 6秒，数据加载完毕后计算耗时 166 毫秒，详见: [性能实测](https://mp.weixin.qq.com/s?__biz=MzkwMzY1NzYxMA==&mid=2247483768&idx=1&sn=33e40aa9633857fa7b4c7ded51c95ae7&chksm=c093a09df7e4298b3f543121ba01334c0f8bf76e75c643afd6fc53aea1792ebb92de9a32c2be&mpshare=1&scene=23&srcid=05297ByHT6DEv6XAmyje1oOr&sharer_shareinfo=b38f5f91b4efd8fb60303a4ef4774748&sharer_shareinfo_first=b38f5f91b4efd8fb60303a4ef4774748#rd)\n  * C++核心库，提供了整体的策略框架，在保证性能的同时，已经考虑了对多线程和多核处理的支持，在未来追求更高运算速度提供便利。C++核心库，可以单独剥离使用，自行构建自己的客户端工具。\n  * Python库（hikyuu），提供了对C++库的包装，同时集成了talib库（如TA_SMA，对应talib.SMA），可以与numpy、pandas数据结构进行互相转换，为使用其他成熟的python数据分析工具提供了便利。\n  * hikyuu.interactive 交互式探索工具，提供了K线、指标、系统信号等的基本绘图功能，用于对量化策略的探索和回测。\n* **代码简洁，探索更便捷、自由** 同时支持面向对象和命令行编程范式。其中，命令行在进行策略探索时，代码简洁、探索更便捷、自由。\n* **安全、自由、隐私，搭建自己的专属云量化平台** 结合 Python + Jupyter 的强大能力与云服务器，可以搭建自己专属的云量化平台。将Jupyter部署在云服务器上，随时随地的访问自己的云平台，即刻实现自己新的想法，如下图所示通过手机访问自己的云平台。结合Python强大成熟的数据分析、人工智能工具（如 numpy、scipy、pandas、TensorFlow)搭建更强大的人工智能平台。\n* **数据存储方式可扩展** 目前支持本地HDF5格式、MySQL存储。默认使用HDF5，数据文件体积小、速度更快、备份更便利。截止至2017年4月21日，沪市日线数据文件149M、深市日线数据文件184M、5分钟线数据各不到2G。\n\n![img](https://api.star-history.com/svg?repos=fasiondog/hikyuu&type=Date \"Star History Chart\")\n\n# 想要更多了解Hikyuu？请使用以下方式联系：\n\n## **加入知识星球**\n\n更多示例与程序化交易的分享（您的加入将视为对项目的捐赠）。**作者只保证对知识星球用户有问必答，其他渠道视情况。(公众号文章末尾可能不定期发放优惠券)**\n\n![知识星球](docs/source/_static/zhishixingqiu.png)\n\n## 关注公众号：\n\n![img](docs/source/_static/weixin_gongzhonghao.jpg)\n\n## 加入微信群（请注明“加入hikyuu”）：\n\n![weixin](docs/source/_static/weixin.jpg)\n\n## QQ交流群：114910869, 或扫码加入\n\n![img](docs/source/_static/10003-qq.png)\n\n## 项目依赖说明\n\nHikyuu直接依赖以下开源项目（由以下项目间接依赖的项目未列出），感谢所有开源作者的贡献：\n\n| 名称          | 项目地址                                                                    | License                                                                               |\n| ------------- | --------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- |\n| xmake         | [https://github.com/xmake-io/xmake](https://github.com/xmake-io/xmake)         | Apache 2.0                                                                            |\n| hdf5          | [https://github.com/HDFGroup/hdf5](https://github.com/HDFGroup/hdf5)           | [hdf5 license](https://github.com/HDFGroup/hdf5?tab=License-1-ov-file#License-1-ov-file) |\n| mysql(client) | [https://github.com/mysql/mysql-server]()                                      | [mysql license](https://github.com/mysql/mysql-server?tab=License-1-ov-file#readme)      |\n| fmt           | [https://github.com/fmtlib/fmt](https://github.com/fmtlib/fmt)                 | [fmt license](https://github.com/fmtlib/fmt?tab=License-1-ov-file#readme)                |\n| spdlog        | [https://github.com/gabime/spdlog](https://github.com/gabime/spdlog)           | MIT                                                                                   |\n| sqlite        | [https://www.sqlite.org/](https://www.sqlite.org/)                             | [sqlite license](https://www.sqlite.org/copyright.html)                                  |\n| flatbuffers   | [https://github.com/google/flatbuffers](https://github.com/google/flatbuffers) | Apache 2.0                                                                            |\n| nng           | [https://github.com/nanomsg/nng](https://github.com/nanomsg/nng)               | MIT                                                                                   |\n| nlohmann_json | [https://github.com/nlohmann/json](https://github.com/nlohmann/json)           | MIT                                                                                   |\n| boost         | [https://www.boost.org/](https://www.boost.org/)                               | [Boost Software License](https://www.boost.org/users/license.html)                       |\n| python        | [https://www.python.org/](https://www.python.org/)                             | [Python license](https://docs.python.org/3/license.html)                                 |\n| pybind11      | [https://github.com/pybind/pybind11](https://github.com/pybind/pybind11)       | [pybind11 license](https://github.com/pybind/pybind11?tab=License-1-ov-file#readme)      |\n| gzip-hpp      | [https://github.com/mapbox/gzip-hpp](https://github.com/mapbox/gzip-hpp)       | BSD-2-Clause license                                                                  |\n| doctest       | [https://github.com/doctest/doctest](https://github.com/doctest/doctest)       | MIT                                                                                   |\n| ta-lib        | [https://github.com/TA-Lib/ta-lib.git]()                                       | BSD-3-Clause license                                                                  |\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.205078125,
          "content": "click\nnumpy<=1.26.4\nmatplotlib\npandas>=0.17.1\npytdx\nPyQt5\ntables\nbokeh\ngitpython\nSQLAlchemy\nmysql-connector-python\npyperclip\nrequests\nqdarkstyle\nflatbuffers>=24.3.25\npynng\nakshare\npyecharts\npipdeptree\nh5py\ntdqm"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 13.9619140625,
          "content": "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom setuptools import setup, find_packages\nimport sys\nimport json\nimport os\nimport shutil\nimport platform\nimport click\n\n\n# ------------------------------------------------------------------------------\n# 前置检查\n# ------------------------------------------------------------------------------\ndef check_xmake():\n    \"\"\"检查是否按照了编译工具 xmake\"\"\"\n    print(\"checking xmake ...\")\n    xmake = os.system(\"xmake --version\")\n    return False if xmake != 0 else True\n\n\ndef get_python_version():\n    \"\"\"获取当前 python版本\"\"\"\n    py_version = platform.python_version_tuple()\n    min_version = int(py_version[1])\n    main_version = int(py_version[0])\n    # py_version = main_version * 10 + min_version if min_version < 10 else main_version * 100 + min_version\n    py_version = f\"{main_version}.{min_version}\"\n    print(f'current python version: {py_version}')\n    return py_version\n\n\ndef get_current_compile_info():\n    \"\"\"获取当前编译信息, 其中 mode 无效\"\"\"\n    current_bits = 64 if sys.maxsize > 2**32 else 32\n    if sys.platform == 'win32':\n        current_arch = 'x64' if current_bits == 64 else 'x86'\n    else:\n        current_arch = 'x86_64' if current_bits == 64 else 'i386'\n\n    py_version = get_python_version()\n    current_compile_info = {\n        'plat': sys.platform,\n        'arch': current_arch,\n        'mode': '',\n        'py_version': py_version,\n    }\n    return current_compile_info\n\n\ndef get_history_compile_info():\n    \"\"\"获取历史编译信息\"\"\"\n    try:\n        with open('compile_info', 'r') as f:\n            result = json.load(f)\n    except:\n        result = {\n            'plat': '',\n            'arch': '',\n            'mode': '',\n            'py_version': 0,\n        }\n    return result\n\n\ndef save_current_compile_info(compile_info):\n    \"\"\"保持当前编译信息\"\"\"\n    with open('compile_info', 'w') as f:\n        json.dump(compile_info, f)\n\n\ndef clear_with_python_changed(mode):\n    \"\"\"\n    python版本发生变化时，清理之前的python编译结果\n    应该仅在 pyhon 版本发生变化时被调用\n    \"\"\"\n    current_plat = sys.platform\n    current_bits = 64 if sys.maxsize > 2**32 else 32\n    if current_plat == 'win32' and current_bits == 64:\n        build_pywrap_dir = 'build\\\\{mode}\\\\windows\\\\x64\\\\.objs\\\\windows\\\\x64\\\\{mode}\\\\hikyuu_pywrap'.format(\n            mode=mode)\n    elif current_plat == 'win32' and current_bits == 32:\n        build_pywrap_dir = 'build\\\\{mode}\\\\windows\\\\x86\\\\.objs\\\\windows\\\\x86\\\\{mode}\\\\hikyuu_pywrap'.format(\n            mode=mode)\n    elif current_plat == 'linux' and current_bits == 64:\n        build_pywrap_dir = 'build/{mode}/linux/x86_64/.objs/linux/x86_64/{mode}/hikyuu_pywrap'.format(\n            mode=mode)\n    elif current_plat == 'linux' and current_bits == 32:\n        build_pywrap_dir = 'build/{mode}/linux/i386/.objs/linux/i386/{mode}/hikyuu_pywrap'.format(\n            mode=mode)\n    elif current_plat == \"darwin\" and current_bits == 64:\n        build_pywrap_dir = 'build/{mode}/macosx/x86_64/.objs/macosx/x86_64/{mode}/hikyuu_pywrap'.format(\n            mode=mode)\n    elif current_plat == \"darwin\" and current_bits == 32:\n        build_pywrap_dir = 'build/{mode}/macosx/i386/.objs/macosx/i386/{mode}/hikyuu_pywrap'.format(\n            mode=mode)\n    else:\n        print(\"************不支持的平台**************\")\n        exit(0)\n    if os.path.lexists(build_pywrap_dir):\n        shutil.rmtree(build_pywrap_dir)\n\n\n# ------------------------------------------------------------------------------\n# 执行构建\n# ------------------------------------------------------------------------------\ndef start_build(verbose=False, mode='release', feedback=True, worker_num=2, low_precision=False):\n    \"\"\" 执行编译 \"\"\"\n    global g_verbose\n    g_verbose = verbose\n    if not check_xmake():\n        print(\"Please install xmake\")\n        return\n\n    current_compile_info = get_current_compile_info()\n    current_compile_info['mode'] = mode\n\n    py_version = current_compile_info['py_version']\n\n    # 如果 python版本或者编译模式发生变化，则重新编译\n    history_compile_info = get_history_compile_info()\n    if py_version != history_compile_info[\n            'py_version'] or history_compile_info['mode'] != mode:\n        clear_with_python_changed(mode)\n        kind = \"shared\" if mode == 'release' and sys.platform != 'darwin' else \"static\"\n        cmd = \"xmake f {} -c -y -m {} --feedback={} -k {} --low_precision={} --log_level={}\".format(\n            \"-v -D\" if verbose else \"\", mode, feedback, kind, low_precision,\n            2 if mode == 'release' else 0)\n        print(cmd)\n        os.system(cmd)\n\n    cmd = \"xmake -j {} -b {} core\".format(worker_num,\n                                          \"-v -D\" if verbose else \"\")\n    print(cmd)\n    os.system(cmd)\n\n    # 保存当前的编译信息\n    save_current_compile_info(current_compile_info)\n\n\n# ------------------------------------------------------------------------------\n# 控制台命令\n# ------------------------------------------------------------------------------\n\n\n@click.group()\ndef cli():\n    pass\n\n\n@click.command()\n@click.option('-v', '--verbose', is_flag=True, help='显示详细的编译信息')\n@click.option('-feedback',\n              '--feedback',\n              default=True,\n              type=bool,\n              help='允许发送反馈信息')\n@click.option('-j', '--j', default=2, help=\"并行编译数量\")\n@click.option('-m',\n              '--mode',\n              default='release',\n              type=click.Choice([\n                  'release', 'debug', 'coverage', 'asan', 'tsan', 'msan',\n                  'lsan'\n              ]),\n              help='编译模式')\n@click.option('-low_precision',\n              '--low_precision',\n              default=False,\n              type=bool,\n              help='使用低精度版本')\ndef build(verbose, mode, feedback, j, low_precision):\n    \"\"\" 执行编译 \"\"\"\n    start_build(verbose, mode, feedback, j, low_precision)\n\n\n@click.command()\n@click.option('-all', \"--all\", is_flag=True, help=\"执行全部测试, 否则仅仅进行最小范围测试）\")\n@click.option(\"-compile\", \"--compile\", is_flag=True, help='强制重新编译')\n@click.option('-feedback',\n              '--feedback',\n              default=True,\n              type=bool,\n              help='允许发送反馈信息')\n@click.option('-v', '--verbose', is_flag=True, help='显示详细的编译信息')\n@click.option('-j', '--j', default=2, help=\"并行编译数量\")\n@click.option('-m',\n              '--mode',\n              default='release',\n              type=click.Choice([\n                  'release', 'debug', 'coverage', 'asan', 'msan', 'tsan',\n                  'lsan'\n              ]),\n              help='编译模式')\n@click.option('-case', '--case', default='', help=\"执行指定的 TestCase\")\n@click.option('-low_precision',\n              '--low_precision',\n              default=False,\n              type=bool,\n              help='使用低精度版本')\ndef test(all, compile, verbose, mode, case, feedback, j, low_precision):\n    \"\"\" 执行单元测试 \"\"\"\n    current_compile_info = get_current_compile_info()\n    current_compile_info['mode'] = mode\n    history_compile_info = get_history_compile_info()\n    if compile or current_compile_info != history_compile_info:\n        start_build(verbose, mode, feedback, j, low_precision)\n    if all:\n        os.system(\"xmake -j {} -b {} unit-test\".format(\n            j, \"-v -D\" if verbose else \"\"))\n        os.system(\"xmake r unit-test {}\".format(\n            '' if case == '' else '--test-case={}'.format(case)))\n    else:\n        os.system(\"xmake -j {} -b {} small-test\".format(\n            j, \"-v -D\" if verbose else \"\"))\n        os.system(\"xmake r small-test {}\".format(\n            '' if case == '' else '--test-case={}'.format(case)))\n\n\ndef clear_build():\n    \"\"\" 清除当前编译设置及结果 \"\"\"\n    if os.path.lexists('.xmake'):\n        print('delete .xmake')\n        shutil.rmtree('.xmake', True)\n        if sys.platform == 'win32':\n            os.system(\"rmdir .xmake /s /q\")\n    if os.path.lexists('build'):\n        print('delete build')\n        shutil.rmtree('build')\n    if os.path.lexists('Hikyuu.egg-info'):\n        print('delete Hikyuu.egg-info')\n        shutil.rmtree('Hikyuu.egg-info')\n    if os.path.exists('compile_info'):\n        print('delete compile_info')\n        os.remove('compile_info')\n    lib_files = os.listdir('hikyuu/cpp')\n    for file in lib_files:\n        if file not in (\"__init__.py\", \"__pycache__\"):\n            os.remove(f'hikyuu/cpp/{file}')\n    print('clear finished!')\n\n\n@click.command()\ndef clear():\n    clear_build()\n\n\n@click.command()\ndef uninstall():\n    \"\"\" 卸载已安装的 python 包 \"\"\"\n    if sys.platform == 'win32':\n        site_lib_dir = sys.base_prefix + \"/lib/site-packages\"\n    else:\n        usr_dir = os.path.expanduser('~')\n        py_version = get_python_version()\n        site_lib_dir = '{}/.local/lib/python{}/site-packages'.format(\n            usr_dir, py_version)\n    for dir in os.listdir(site_lib_dir):\n        if dir == 'hikyuu' or (len(dir) > 6 and dir[:6] == 'Hikyuu'):\n            print('delete', site_lib_dir + '/' + dir)\n            shutil.rmtree(site_lib_dir + '/' + dir)\n    if os.path.exists(\"./hikyuu.egg-info\"):\n        shutil.rmtree(\"./hikyuu.egg-info\")\n    print(\"Uninstall finished!\")\n\n\ndef copy_include(install_dir):\n    src_path = 'hikyuu_cpp/hikyuu'\n    dst_path = f'{install_dir}/include'\n\n    for root, dirs, files in os.walk(src_path):\n        for p in dirs:\n            dst_p = f'{dst_path}/{root[11:]}/{p}'\n            if not os.path.lexists(dst_p):\n                os.makedirs(dst_p)\n            shutil.copy('hikyuu/cpp/__init__.py', dst_p)\n\n        for fname in files:\n            if len(fname) > 2 and fname[-2:] == \".h\":\n                dst_p = f'{dst_path}/{root[11:]}'\n                if not os.path.lexists(dst_p):\n                    os.makedirs(dst_p)\n                shutil.copy(f'{root}/{fname}', dst_p)\n\n    dst_path = f'{install_dir}/include/hikyuu/python'\n    if not os.path.lexists(dst_path):\n        os.makedirs(dst_path)\n    shutil.copy('hikyuu_pywrap/pybind_utils.h', dst_path)\n    shutil.copy('hikyuu_pywrap/pickle_support.h', dst_path)\n    shutil.copy('hikyuu/cpp/__init__.py', dst_path)\n    shutil.copy('hikyuu/cpp/__init__.py', f'{install_dir}/include')\n    shutil.copy('hikyuu/cpp/__init__.py', f'{install_dir}/include/hikyuu')\n\n\n@click.command()\n@click.option('-j', '--j', default=2, help=\"并行编译数量\")\n@click.option('-o', '--o', help=\"指定的安装目录\")\n@click.option('-low_precision',\n              '--low_precision',\n              default=False,\n              type=bool,\n              help='使用低精度版本')\ndef install(j, o, low_precision):\n    \"\"\" 编译并安装 Hikyuu python 库 \"\"\"\n    install_dir = o\n    if install_dir is None:\n        if sys.platform == 'win32':\n            install_dir = sys.base_prefix + \"\\\\Lib\\\\site-packages\\\\hikyuu\"\n        else:\n            usr_dir = os.path.expanduser('~')\n            install_dir = '{}/.local/lib/python{}/site-packages/hikyuu'.format(\n                usr_dir, get_python_version())\n            try:\n                shutil.rmtree(install_dir)\n            except:\n                pass\n\n    start_build(False, 'release', True, j, low_precision)\n\n    shutil.copytree(\"./hikyuu\", install_dir)\n\n    copy_include(install_dir)\n\n\n@click.command()\n@click.option('-j', '--j', default=2, help=\"并行编译数量\")\n@click.option('-feedback',\n              '--feedback',\n              default=True,\n              type=bool,\n              help='允许发送反馈信息')\n@click.option('-low_precision',\n              '--low_precision',\n              default=False,\n              type=bool,\n              help='使用低精度版本')\n@click.option('-c', '--clear', is_flag=False, help='先清除之前编译结果')\ndef wheel(feedback, j, low_precision, clear):\n    \"\"\" 生成 python 的 wheel 安装包 \"\"\"\n    # 清理之前遗留的打包产物\n    if clear:\n        clear_build()\n\n    # 尝试编译\n    start_build(False, 'release', feedback, j, low_precision)\n\n    copy_include('hikyuu')\n\n    # 构建打包命令\n    print(\"start pacakaging bdist_wheel ...\")\n    current_plat = sys.platform\n    cpu_arch = platform.machine()\n    current_bits = 64 if sys.maxsize > 2**32 else 32\n    if current_plat == 'win32' and current_bits == 64:\n        plat = \"win_amd64\"\n    elif current_plat == 'win32' and current_bits == 32:\n        plat = \"win32\"\n    elif current_plat == 'linux' and current_bits == 64:\n        plat = f\"manylinux1_{cpu_arch}\"\n    elif current_plat == 'linux' and current_bits == 32:\n        plat = f\"manylinux1_{cpu_arch}\"\n    elif current_plat == 'darwin' and cpu_arch != 'arm64' and current_bits == 32:\n        plat = \"macosx_i686\"\n    elif current_plat == 'darwin' and cpu_arch != 'arm64' and current_bits == 64:\n        plat = \"macosx_x86_64\"\n    elif current_plat == 'darwin' and cpu_arch == 'arm64':\n        plat = \"macosx_11_1_arm64\"\n    else:\n        print(\"*********尚未实现该平台的支持*******\")\n        return\n\n    if low_precision:\n        plat = f\"{plat}_low_precision\"\n\n    py_version = get_python_version()\n    main_ver, min_ver = py_version.split('.')\n    cmd = 'python sub_setup.py bdist_wheel -p {}'.format(plat)\n    print(cmd)\n    os.system(cmd)\n\n    shutil.rmtree('hikyuu/include', True)\n\n\n@click.command()\ndef upload():\n    \"\"\" 发布上传至 pypi，仅供发布者使用！！！ \"\"\"\n    if not os.path.lexists('dist'):\n        print(\"Not found wheel package! Pleae wheel first\")\n        return\n    print(\"current wheel:\")\n    for bdist in os.listdir('dist'):\n        print(bdist)\n    print(\"\")\n    val = input('Are you sure upload now (y/n)? (deault: n) ')\n    if val == 'y':\n        os.system(\"twine upload dist/*\")\n\n\n# ------------------------------------------------------------------------------\n# 添加 click 命令\n# ------------------------------------------------------------------------------\ncli.add_command(build)\ncli.add_command(test)\ncli.add_command(clear)\ncli.add_command(install)\ncli.add_command(uninstall)\ncli.add_command(wheel)\ncli.add_command(upload)\n\nif __name__ == \"__main__\":\n    cli()\n"
        },
        {
          "name": "sub_setup.py",
          "type": "blob",
          "size": 4.28515625,
          "content": "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nimport platform\nimport os\ntry:\n    from setuptools import find_packages, setup\nexcept ImportError:\n    from distutils.core import find_packages, setup\n\n\ndef parse_requirements(filename):\n    line_iter = (line.strip() for line in open(filename))\n    return [line for line in line_iter if line and not line.startswith('#')]\n\n\nrequirements = parse_requirements('requirements.txt')\n\nhku_version = ''\nwith open('xmake.lua', 'r', encoding='utf-8') as f:\n    for line in f:\n        if len(line) > 15 and line[:11] == 'set_version':\n            pre_pos = line.find('\"') + 1\n            end_pos = line.find('\"', pre_pos)\n            hku_version = line[pre_pos:end_pos]\n            break\n\nif not hku_version:\n    print(\"无法在 xmake.lua 中找到 set_version 语句，获取版本号失败！\")\n    exit(0)\n\nprint('current hikyuu version:', hku_version)\n\npy_version = platform.python_version_tuple()\npy_version = int(py_version[0]) * 10 + int(py_version[1])\n\nhku_name = \"hikyuu\"\n# hku_version = \"1.0.9\"\nhku_author = \"fasiondog\"\nhku_author_email = \"fasiondog@sina.com\"\n\nhku_license = \"MIT\"\nhku_keywords = [\n    \"quant\", \"trade\", \"System Trading\", \"backtester\", \"量化\", \"程序化交易\", \"量化交易\",\n    \"系统交易\"\n]\nhku_platforms = \"Independant\"\nhku_url = \"http://hikyuu.org/\"\n\nhku_description = \"Hikyuu Quant Framework for System Trading Analysis and backtester\"\nwith open(\"./readme.md\", encoding='utf-8') as f:\n    hku_long_description = f.read()\n\nhku_data_files = []\n\npackages = ['hikyuu']\nfor root, dirs, files in os.walk('hikyuu'):\n    for p in dirs:\n        if p.find('__pycache__') < 0 and p.find('ipynb_checkpoints') < 0 \\\n                and p.find('virtual_documents') < 0 and p.find('idea') < 0 and p.find('venv') < 0:\n            packages.append(f'{root}/{p}')\n\nsetup(\n    name=hku_name,\n    version=hku_version,\n    description=hku_description,\n    # long_description_content_type=\"text/x-rst\",\n    long_description_content_type='text/markdown',\n    long_description=hku_long_description,\n    author=hku_author,\n    author_email=hku_author_email,\n    license=hku_license,\n    keywords=hku_keywords,\n    platforms=hku_platforms,\n    url=hku_url,\n    packages=packages,  # find_packages(),\n    zip_safe=False,\n    include_package_data=True,\n    package_data={\n        '': [\n            '*.rst', '*.pyd', '*.png', '*.md', '*.ipynb', '*.ini', '*.sql', '*.properties', '*.xml',\n            'LICENSE.txt', '*.dll', '*.exe', '*.ico', '*.so', '*.dylib', '*.h', '*.lib',\n            '*.so.*', '*.qm', 'libboost_serialization*', 'libboost_python{}*'.format(py_version),\n            '*.png'\n        ],\n    },\n    data_files=hku_data_files,\n    classifiers=[\n        # How mature is this project? Common values are\n        #   3 - Alpha\n        #   4 - Beta\n        #   5 - Production/Stable\n        'Development Status :: 5 - Production/Stable',\n\n        # Indicate who your project is intended for\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Office/Business :: Financial',\n        'Topic :: Office/Business :: Financial :: Investment',\n        'Topic :: Scientific/Engineering :: Mathematics',\n\n        # Pick your license as you wish (should match \"license\" above)\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: Microsoft :: Windows',\n        'Operating System :: POSIX :: Linux',\n        'Operating System :: MacOS :: MacOS X',\n\n        # Specify the Python versions you support here. In particular, ensure\n        # that you indicate whether you support Python 2, Python 3 or both.\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: 3.13',\n    ],\n    entry_points={\n        # win11下使用 GUI 方式，会立刻 timeout，导致无法下载\n        # 'gui_scripts': [\n        #     'HikyuuTDX=hikyuu.gui.HikyuuTDX:start',\n        # ],\n        'console_scripts': [\n            'HikyuuTDX=hikyuu.gui.HikyuuTDX:start',\n            'importdata=hikyuu.gui.importdata:main',\n        ]\n    },\n    install_requires=requirements,\n)\n"
        },
        {
          "name": "test_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.h.in",
          "type": "blob",
          "size": 0.541015625,
          "content": "/*\n * version.h\n *\n *  Copyright (c) 2020, hikyuu.org\n *\n *  Created on: 2020-4-19\n *      Author: fasiondog\n */\n\n#pragma once\n#ifndef HKU_VERSION_H\n#define HKU_VERSION_H\n\n// clang-format off\n#define HKU_VERSION \"${VERSION}\"\n#define HKU_VERSION_MAJOR ${VERSION_MAJOR}\n#define HKU_VERSION_MINOR ${VERSION_MINOR}\n#define HKU_VERSION_ALTER ${VERSION_ALTER}\n#define HKU_VERSION_BUILD ${VERSION_BUILD}\n#define HKU_VERSION_MODE \"${MODE}\"\n#define HKU_VERSION_GIT \"${VERSION} ${GIT_BRANCH}.${GIT_COMMIT} (${MODE})\"\n// clang-format on\n\n#endif /* HKU_VERSION_H */\n"
        },
        {
          "name": "xmake.lua",
          "type": "blob",
          "size": 8.259765625,
          "content": "set_xmakever(\"2.8.2\")\n\n-- project\nset_project(\"hikyuu\")\n\nadd_rules(\"mode.debug\", \"mode.release\")\n\n-- version\nset_version(\"2.3.0\", {build = \"%Y%m%d%H%M\"})\n\nset_warnings(\"all\")\n\n-- set language: C99, c++ standard\nset_languages(\"c++17\")\n\n\noption(\"mysql\")\n    set_default(true)\n    set_showmenu(true)\n    set_category(\"hikyuu\")\n    set_description(\"Enable mysql kdata engine.\")\n    if is_plat(\"windows\") then\n        add_defines(\"NOMINMAX\")\n    end        \noption_end()\n\noption(\"hdf5\", {description = \"Enable hdf5 kdata engine.\", default = true})\noption(\"sqlite\", {description = \"Enable sqlite kdata engine.\", default = true})\noption(\"tdx\", {description = \"Enable tdx kdata engine.\", default = true})\noption(\"sql_trace\", {description = \"trace print sql\", default = false})\n\n-- 注意：stacktrace 在 windows 下会严重影响性能\noption(\"stacktrace\", {description = \"Enable check/assert with stack trace info.\", default = false})\noption(\"spend_time\", {description = \"Enable spend time.\", default = true})\noption(\"feedback\", {description = \"Enable send feedback.\", default = true})\noption(\"low_precision\", {description = \"Enable low precision.\", default = false})\noption(\"log_level\", {description = \"set log level.\", default = 2, values = {1, 2, 3, 4, 5, 6}})\noption(\"async_log\", {description = \"Use async log.\", default = false})\noption(\"leak_check\", {description = \"Enable leak check for test\", default = false})\n\n-- 使用 serialize 时，建议使用静态库方式编译，boost serializasion 对 dll 的方式支持不好\n-- windows下如果使用 serialize 且希望使用动态库，需要设置 runtimes 参数为 \"MD\"\n-- \"MT\" 方式下，serialize 会挂\noption(\"serialize\", {description = \"Enable support serialize object and pickle in python\", default = true})\n\n-- 和 hku_utils 编译选项保持一致，以便互相替换\noption(\"mo\", {description = \"International language support\", default = false})\n-- option(\"http_client\", {description = \"use http client\", default = true})\noption(\"http_client_ssl\", {description = \"enable https support for http client\", default = false})\noption(\"http_client_zip\", {description = \"enable http support gzip\", default = false})\n-- option(\"node\", {description = \"enable node reqrep server/client\", default = true})\n\noption(\"ta_lib\")\n    add_deps(\"low_precision\")\n    set_default(true)\n    set_showmenu(true)\n    set_category(\"hikyuu\")\n    set_description(\"Enable ta-lib support.\")\n    -- low_precision 时，需禁用，ta-lib不支持输出为 float\n    after_check(function (option)\n      if option:dep(\"low_precision\"):enabled() then\n          cprint('${red}[warning] \"low_precision\" is enabled, ta-lib will be disabled')\n          option:enable(false)\n      end\n    end)        \noption_end()\n\n\n-- SPDLOG_ACTIVE_LEVEL 需要单独加\nlocal log_level = get_config(\"log_level\")\nif log_level == nil then\n    log_level = 2\nend\nadd_defines(\"SPDLOG_ACTIVE_LEVEL=\" .. log_level)\n\nif is_mode(\"debug\") then\n    set_configvar(\"HKU_DEBUG_MODE\", 1)\nelse\n    set_configvar(\"HKU_DEBUG_MODE\", 0)\nend\nset_configvar(\"CHECK_ACCESS_BOUND\", 1)\nset_configvar(\"SUPPORT_SERIALIZATION\", get_config(\"serialize\") and 1 or 0)\nset_configvar(\"SUPPORT_TEXT_ARCHIVE\", 0)\nset_configvar(\"SUPPORT_XML_ARCHIVE\", 1)\nset_configvar(\"SUPPORT_BINARY_ARCHIVE\", 1)\nset_configvar(\"ENABLE_MSVC_LEAK_DETECT\", 0)\nset_configvar(\"HKU_ENABLE_LEAK_DETECT\", get_config(\"leak_check\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_SEND_FEEDBACK\", get_config(\"feedback\") and 1 or 0)\n\nset_configvar(\"HKU_ENABLE_HDF5_KDATA\", get_config(\"hdf5\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_MYSQL\", get_config(\"mysql\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_MYSQL_KDATA\", get_config(\"mysql\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_SQLITE\", (get_config(\"sqlite\") or get_config(\"hdf5\")) and 1 or 0)\nset_configvar(\"HKU_ENABLE_SQLITE_KDATA\", get_config(\"sqlite\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_TDX_KDATA\", get_config(\"tdx\") and 1 or 0)\n\nset_configvar(\"HKU_USE_LOW_PRECISION\", get_config(\"low_precision\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_TA_LIB\", get_config(\"ta_lib\") and 1 or 0)\n\nset_configvar(\"HKU_SUPPORT_DATETIME\", 1)\nset_configvar(\"HKU_ENABLE_SQLCIPHER\", 0)\nset_configvar(\"HKU_SQL_TRACE\", get_config(\"sql_trace\"))\nset_configvar(\"HKU_ENABLE_INI_PARSER\", 1)\nset_configvar(\"HKU_ENABLE_STACK_TRACE\", get_config(\"stacktrace\") and 1 or 0)\nset_configvar(\"HKU_CLOSE_SPEND_TIME\", get_config(\"spend_time\") and 0 or 1)\nset_configvar(\"HKU_USE_SPDLOG_ASYNC_LOGGER\", get_config(\"async_log\") and 1 or 0)\nset_configvar(\"HKU_LOG_ACTIVE_LEVEL\", get_config(\"log_level\"))\nset_configvar(\"HKU_ENABLE_MO\", get_config(\"mo\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_HTTP_CLIENT\", 1)\nset_configvar(\"HKU_ENABLE_HTTP_CLIENT_SSL\", get_config(\"http_client_ssl\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_HTTP_CLIENT_ZIP\", get_config(\"http_client_zip\") and 1 or 0)\nset_configvar(\"HKU_ENABLE_NODE\", 1)\n\nlocal boost_version = \"1.87.0\"\nlocal hdf5_version = \"1.12.2\"\nlocal fmt_version = \"11.0.2\"\nlocal flatbuffers_version = \"24.3.25\"\nlocal nng_version = \"1.8.0\"\nlocal sqlite_version = \"3.46.0+100\"\nlocal mysql_version = \"8.0.31\"\nif is_plat(\"windows\") or (is_plat(\"linux\", \"cross\") and is_arch(\"aarch64\", \"arm64.*\")) then \n    mysql_version = \"8.0.21\" \nelseif is_plat(\"macosx\") then\n    mysql_version = \"8.0.40\"\nend\n\nadd_repositories(\"hikyuu-repo https://github.com/fasiondog/hikyuu_extern_libs.git\")\n-- add_repositories(\"hikyuu-repo https://gitee.com/fasiondog/hikyuu_extern_libs.git\")\n if get_config(\"hdf5\") then\n        add_requires(\"hdf5 \" .. hdf5_version, { system = false })\n end\n if get_config(\"mysql\") then\n     add_requires(\"mysql \" .. mysql_version, { system = false })\n end\n\nadd_requires(\"boost \" .. boost_version, {\n  debug = is_mode(\"debug\"),\n  configs = {\n    shared = is_plat(\"windows\"),\n    runtimes = get_config(\"runtimes\"),\n    multi = true,\n    date_time = true,\n    filesystem = false,\n    serialization = get_config(\"serialize\"),\n    system = false,\n    python = false,\n    cmake = false,\n  },\n})\n\nadd_requires(\"fmt \" .. fmt_version, {configs = {header_only = true}})\nadd_requires(\"spdlog\", {configs = {header_only = true, fmt_external = true}})\nadd_requireconfs(\"spdlog.fmt\", {override = true, version=fmt_version, configs = {header_only = true}})\nadd_requires(\"sqlite3 \" .. sqlite_version, {configs = {shared = true, safe_mode=\"2\", cxflags = \"-fPIC\"}})\nadd_requires(\"flatbuffers v\" .. flatbuffers_version, {system = false, configs= {runtimes = get_config(\"runtimes\")}})\nadd_requires(\"nng \" .. nng_version, {configs = {NNG_ENABLE_TLS = has_config(\"http_client_ssl\"), cxflags = \"-fPIC\"}})\nadd_requires(\"nlohmann_json\")\n\nif has_config(\"http_client_zip\") then\n    add_requires(\"gzip-hpp\")\nend\n\nif has_config(\"ta_lib\") then\n    add_requires(\"ta-lib\")\nend\n\nadd_defines(\"SPDLOG_DISABLE_DEFAULT_LOGGER\") -- 禁用 spdlog 默认ogger\n\nset_objectdir(\"$(buildir)/$(mode)/$(plat)/$(arch)/.objs\")\nset_targetdir(\"$(buildir)/$(mode)/$(plat)/$(arch)/lib\")\n\n-- on windows dll, must use runtimes MD\nif is_plat(\"windows\") and get_config(\"kind\") == \"shared\" then \n    set_config(\"runtimes\", \"MD\")\n    set_runtimes(\"MD\")\nend\n\n-- is release now\nif is_mode(\"release\") then\n  if is_plat(\"windows\") then\n    -- Unix-like systems hidden symbols will cause the link dynamic libraries to failed!\n    set_symbols(\"hidden\")\n  end\nend\n\n-- for the windows platform (msvc)\nif is_plat(\"windows\") then\n  -- add some defines only for windows\n  add_defines(\"NOCRYPT\", \"NOGDI\")\n  add_cxflags(\"-EHsc\", \"/Zc:__cplusplus\", \"/utf-8\")\n  add_cxflags(\"-wd4819\") -- template dll export warning\n  add_defines(\"WIN32_LEAN_AND_MEAN\")\n  if is_mode(\"debug\") then\n    add_cxflags(\"-Gs\", \"-RTC1\", \"/bigobj\")\n  end\nend\n\nif is_plat(\"linux\", \"cross\", \"macosx\") then\n  -- disable some compiler errors\n  add_cxflags(\"-Wno-error=deprecated-declarations\", \"-fno-strict-aliasing\")\n  add_cxflags(\"-ftemplate-depth=1023\", \"-pthread\")\n  add_shflags(\"-pthread\")\n  add_ldflags(\"-pthread\")\nend\n\nif is_plat(\"macosx\") then\n    add_cxflags(\"-Wno-deprecated-declarations\")\nend\n\n-- if not is_plat(\"cross\") and (os.host() == \"linux\" and is_arch(\"x86_64\", \"x64\")) then\n--   -- fedora或者ubuntu，并且不是交叉编译\n--   add_vectorexts(\"sse\", \"sse2\", \"ssse3\", \"avx\", \"avx2\")\n-- --   add_defines(\"HKU_ENABLE_SSE2\", \"HKU_ENABLE_SSE3\", \"HKU_ENABLE_SSE41\", \"HKU_ENABLE_AVX\", \"HKU_ENABLE_AVX2\")\n-- end\n\nincludes(\"./copy_dependents.lua\")\nincludes(\"./hikyuu_cpp/hikyuu\")\nincludes(\"./hikyuu_pywrap\")\nincludes(\"./hikyuu_cpp/unit_test\")\nincludes(\"./hikyuu_cpp/demo\")"
        }
      ]
    }
  ]
}