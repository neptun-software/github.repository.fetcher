{
  "metadata": {
    "timestamp": 1736565921403,
    "page": 890,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/incubator-pegasus",
      "stars": 1989,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 2.419921875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# https://cwiki.apache.org/confluence/display/INFRA/Git+-+.asf.yaml+features\ngithub:\n  description: \"Apache Pegasus - A horizontally scalable, strongly consistent and high-performance key-value store\"\n  homepage: https://pegasus.apache.org/\n  labels:\n    - pegasus\n    - key-value-store\n    - nosql\n    - distributed-database\n  features:\n    # Enable wiki for documentation\n    wiki: false\n    # Enable issues management\n    issues: true\n    # Enable projects for project management boards\n    projects: true\n  enabled_merge_buttons:\n    # enable squash button:\n    squash:  true\n    # enable merge button:\n    merge:   true\n    # enable rebase button:\n    rebase:  true\n  protected_branches:\n    master:\n      required_status_checks:\n        # strict means \"Require branches to be up to date before merging\".\n        strict: false\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        require_code_owner_reviews: false\n        required_approving_review_count: 2\n      required_signatures: false\n      required_linear_history: true\n    ci-test:\n      required_status_checks:\n        # strict means \"Require branches to be up to date before merging\".\n        strict: false\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        require_code_owner_reviews: false\n        required_approving_review_count: 2\n      required_signatures: false\n      required_linear_history: true\n  collaborators:\n    - padmejin\n    - shalk\n    - ruojieranyishen\n    - ninsmiracle\n    - Samunroyu\n    - limowang\n    - lengyuexuexuan\n\nnotifications:\n  commits: commits@pegasus.apache.org\n  issues: dev@pegasus.apache.org\n  pullrequests: dev@pegasus.apache.org\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 5.6435546875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Reference: https://releases.llvm.org/14.0.0/tools/clang/docs/ClangFormatStyleOptions.html\n---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveAssignments: None\nAlignConsecutiveBitFields: None\nAlignConsecutiveDeclarations: None\nAlignConsecutiveMacros: None\nAlignEscapedNewlines: Right\nAlignOperands: Align\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      true\n  AfterControlStatement: Never\n  AfterEnum:       true\n  AfterExternBlock: false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:      true\n  AfterUnion:       true\n  BeforeCatch:      false\n  BeforeElse:       false\n  BeforeLambdaBody: false\n  BeforeWhile:      false\n  IndentBraces:     false\n  SplitEmptyFunction: true\n  SplitEmptyNamespace: true\n  SplitEmptyRecord: true\nBreakAfterJavaFieldAnnotations: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeConceptDeclarations: true\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\nBreakConstructorInitializersBeforeComma: false\nBreakInheritanceList: BeforeColon\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDeriveLineEnding: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: true\nFixNamespaceComments: true\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIfMacros: [ KJ_IF_MAYBE ]\nIncludeBlocks: Preserve\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '$'\nIndentAccessModifiers: false\nIndentCaseBlocks: false\nIndentCaseLabels: false\nIndentExternBlock: AfterExternBlock\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentRequires: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: None\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nLambdaBodyIndentation: Signature\nLanguage:        Cpp\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPPIndentWidth: -1\nPackConstructorInitializers: BinPack\nPenaltyBreakAssignment: 4\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 4\nPenaltyExcessCharacter: 1000000\nPenaltyIndentedWhitespace: 0\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nQualifierAlignment: Leave\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSortIncludes:    Never\nSortJavaStaticImport: Before\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterIfMacros: true\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: Never\nSpacesInCStyleCastParentheses: false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInLineCommentPrefix:\n  Maximum: -1\n  Minimum: 1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        c++17\nStatementAttributeLikeMacros: [ Q_EMIT]\nStatementMacros: [ Q_UNUSED, QT_REQUIRE_VERSION]\nTabWidth:        4\nUseCRLF: false\nUseTab:          Never\nWhitespaceSensitiveMacros: [ STRINGIZE, PP_STRINGIZE, BOOST_PP_STRINGIZE, NS_SWIFT_NAME, CF_SWIFT_NAME]\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.580078125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# https://releases.llvm.org/14.0.0/tools/clang/tools/extra/docs/clang-tidy/index.html\n\nCheckOptions: []\n# Disable some checks that are not useful for us now.\n# They are sorted by names, and should be consistent to build_tools/clang_tidy.py.\nChecks: 'abseil-*,boost-*,bugprone-*,cert-*,clang-analyzer-*,concurrency-*,cppcoreguidelines-*,darwin-*,fuchsia-*,google-*,hicpp-*,linuxkernel-*,llvm-*,misc-*,modernize-*,performance-*,portability-*,readability-*,-bugprone-easily-swappable-parameters,-bugprone-lambda-function-name,-bugprone-macro-parentheses,-cert-err58-cpp,-concurrency-mt-unsafe,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-macro-usage,-cppcoreguidelines-non-private-member-variables-in-classes,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-const-cast,-cppcoreguidelines-pro-type-union-access,-fuchsia-default-arguments-calls,-fuchsia-overloaded-operator,-fuchsia-statically-constructed-objects,-google-readability-avoid-underscore-in-googletest-name,-hicpp-avoid-c-arrays,-hicpp-named-parameter,-hicpp-no-array-decay,-llvm-include-order,-misc-definitions-in-headers,-misc-non-private-member-variables-in-classes,-misc-unused-parameters,-modernize-avoid-bind,-modernize-avoid-c-arrays,-modernize-replace-disallow-copy-and-assign-macro,-modernize-use-trailing-return-type,-performance-unnecessary-value-param,-readability-function-cognitive-complexity,-readability-identifier-length,-readability-magic-numbers,-readability-named-parameter,-readability-suspicious-call-argument'\nExtraArgs:\nExtraArgsBefore: []\nFormatStyle: none\nHeaderFilterRegex: ''\nInheritParentConfig: true\nUseColor: true\nUser: 'clang-tidy'\nWarningsAsErrors: ''\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 7.8154296875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nsrc/.matchfile\nsrc/base/rrdb_types.cpp\nsrc/include/rrdb/rrdb_types.h\nsrc/common/serialization_helper/dsn.layer2_types.h\nsrc/runtime/dsn.layer2_types.cpp\n\nonebox/\n.zk_install/\n*.data/\n.kill_test.shell.*\npegasus_kill_test.log\nkill_history.txt\npegasus_server\npegasus_shell\npegasus_bench\npegasus_kill_test\nsrc/include/pegasus/git_commit.h\nsrc/sample/data\nsrc/sample/pegasus_cpp_sample\ntest_report\n*.config\n*.creator\n*.creator.*\n*.files\n*.includes\n\nTARGETS\nmake_config.mk\n\n*.a\n*.arc\n*.d\n*.dylib*\n*.gcda\n*.gcno\n*.o\n*.so\n*.so.*\n*_bench\n*_stress\n*.out\n*.class\n*.jar\n*.*jnilib*\n*.d-e\n*.o-*\n*.swp\n*~\n*.vcxproj\n*.vcxproj.filters\n*.sln\nCMakeCache.txt\nCMakeFiles/\nbuild/\n\nldb\nmanifest_dump\nsst_dump\nrocksdb/util/build_version.cc\nbuild_tools/VALGRIND_LOGS/\ncoverage/COVERAGE_REPORT\n.gdbhistory\npackage/\n.phutil_module_cache\nunity.a\ntags\nrocksdb_dump\nrocksdb_undump\n\njava/out\njava/target\njava/test-libs\njava/*.log\njava/include/org_rocksdb_*.h\n\n.idea/\n*.iml\n\nrocksdb.cc\nrocksdb.h\nunity.cc\njava/crossbuild/.vagrant\n.vagrant/\njava/**.asc\njava/javadoc\n\nscan_build_report/\nt\nLOG\n\n.vscode/\n.history/\n.*-history\n\nPACKAGE\nscripts/py_utils/*.pyc\ncmake-build-debug\npackages\n\nconfig-shell.ini.*\n*.tar.gz\npegasus-server*\n*.log\n\nadmin-cli/bin/\npegic/bin/\ngolangci-*\n\njava-client/bin/\njava-client/release/\njava-client/target/\njava-client/.settings\njava-client/.project\njava-client/.classpath\njava-client/.idea\njava-client/pegasus-client.iml\njava-client/log.txt\njava-client/rolling_log/\njava-client/.vscode/\njava-client/google-java-format-*\njava-client/pegasus-*\njava-client/dependency-reduced-pom.xml\njava-client/src/main/java/org/apache/pegasus/apps/*\njava-client/src/main/java/org/apache/pegasus/replication/*\njava-client/.flattened-pom.xml\n\n# ============ #\n# scala-client #\n# ============ #\nscala-client/project/project/\nscala-client/project/target/\n\n# From https://github.com/github/gitignore/blob/main/Scala.gitignore\nscala-client/**/*.class\nscala-client/**/*.log\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nscala-client/**/hs_err_pid*\n\n# Created by .ignore support plugin (hsz.mobi)\n### SBT template\n# Simple Build Tool\n# http://www.scala-sbt.org/release/docs/Getting-Started/Directories.html#configuring-version-control\nscala-client/target/\nscala-client/.idea/\nscala-client/.iml\nscala-client/rolling_log/\n\n# ============= #\n# python-client #\n# ============= #\npython-client/pypegasus/replication/\npython-client/pypegasus/rrdb/\npython-client/tests/_trial_temp/\n\n# From https://github.com/github/gitignore/blob/main/Python.gitignore\n# Byte-compiled / optimized / DLL files\npython-client/**/__pycache__/\npython-client/**/*.py[cod]\npython-client/**/*$py.class\n\n# C extensions\npython-client/**/*.so\n\n# Distribution / packaging\npython-client/**/.Python\npython-client/**/build/\npython-client/**/develop-eggs/\npython-client/**/dist/\npython-client/**/downloads/\npython-client/**/eggs/\npython-client/**/.eggs/\npython-client/**/lib/\npython-client/**/lib64/\npython-client/**/parts/\npython-client/**/sdist/\npython-client/**/var/\npython-client/**/wheels/\npython-client/**/share/python-wheels/\npython-client/**/*.egg-info/\npython-client/**/.installed.cfg\npython-client/**/*.egg\npython-client/**/MANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\npython-client/**/*.manifest\npython-client/**/*.spec\n\n# Installer logs\npython-client/**/pip-log.txt\npython-client/**/pip-delete-this-directory.txt\n\n# Unit test / coverage reports\npython-client/**/htmlcov/\npython-client/**/.tox/\npython-client/**/.nox/\npython-client/**/.coverage\npython-client/**/.coverage.*\npython-client/**/.cache\npython-client/**/nosetests.xml\npython-client/**/coverage.xml\npython-client/**/*.cover\npython-client/**/*.py,cover\npython-client/**/.hypothesis/\npython-client/**/.pytest_cache/\npython-client/**/cover/\n\n# Translations\npython-client/**/*.mo\npython-client/**/*.pot\n\n# Django stuff:\npython-client/**/*.log\npython-client/**/local_settings.py\npython-client/**/db.sqlite3\npython-client/**/db.sqlite3-journal\n\n# Flask stuff:\npython-client/**/instance/\npython-client/**/.webassets-cache\n\n# Scrapy stuff:\npython-client/**/.scrapy\n\n# Sphinx documentation\npython-client/**/docs/_build/\n\n# PyBuilder\npython-client/**/.pybuilder/\npython-client/**/target/\n\n# Jupyter Notebook\npython-client/**/.ipynb_checkpoints\n\n# IPython\npython-client/**/profile_default/\npython-client/**/ipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\npython-client/**/.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\npython-client/**/Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\npython-client/**/poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\npython-client/**/pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\npython-client/**/.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\npython-client/**/__pypackages__/\n\n# Celery stuff\npython-client/**/celerybeat-schedule\npython-client/**/celerybeat.pid\n\n# SageMath parsed files\npython-client/**/*.sage.py\n\n# Environments\npython-client/**/.env\npython-client/**/.venv\npython-client/**/env/\npython-client/**/venv/\npython-client/**/ENV/\npython-client/**/env.bak/\npython-client/**/venv.bak/\n\n# Spyder project settings\npython-client/**/.spyderproject\npython-client/**/.spyproject\n\n# Rope project settings\npython-client/**/.ropeproject\n\n# mkdocs documentation\npython-client/**//site\n\n# mypy\npython-client/**/.mypy_cache/\npython-client/**/.dmypy.json\npython-client/**/dmypy.json\n\n# Pyre type checker\npython-client/**/.pyre/\n\n# pytype static type analyzer\npython-client/**/.pytype/\n\n# Cython debug symbols\npython-client/**/cython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\npython-client/**/.idea/\n\n.arcconfig\n*.log*\nnode_modules\npackage-lock.json\n\n# ============= #\n#   go-client   #\n# ============= #\ngo-client/bin\ngo-client/coverage.txt\n\nthirdparty/output/\n\n#macOS\n.DS_Store\n\n#collector\ncollector/collector\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.115234375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n---\nlinters:\n  enable:\n    - gofmt\n    - goimports\n    - golint\n    - bodyclose\n    - exhaustive\n    - exportloopref\n\nlinters-settings:\n  exhaustive:\n    # indicates that switch statements are to be considered exhaustive if a\n    # 'default' case is present, even if all enum members aren't listed in the\n    # switch\n    default-signifies-exhaustive: true\n"
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 28.1728515625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\nheader:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n  paths-ignore:\n    # Configuration files that could not be added with copyright info (otherwise would lead to error).\n    - '.rat-excludes'\n    - '**/*.csv'\n    - '**/*.json'\n    # All the type of licenses of this project should be added to LICENSE.\n    - 'DISCLAIMER'\n    - 'LICENSE'\n    - 'NOTICE'\n    # Change log.\n    - 'HISTORY.md'\n    # Template files of issues and pull requests for Github.\n    - '.github/ISSUE_TEMPLATE/bug_report.md'\n    - '.github/ISSUE_TEMPLATE/feature-request.md'\n    - '.github/ISSUE_TEMPLATE/general_question.md'\n    - '.github/pull_request_template.md'\n    # Image files for docs.\n    - '**/*.jpg'\n    - '**/*.png'\n    # Files in pdf format.\n    - '**/*.pdf'\n    # Special files for golang.\n    - '**/go.sum'\n    - 'go-client/idl/admin/**'\n    - 'go-client/idl/base/**'\n    - 'go-client/idl/cmd/**'\n    - 'go-client/idl/radmin/**'\n    - 'go-client/idl/replication/**'\n    - 'go-client/idl/rrdb/**'\n    # Special files for nodejs.\n    - '**/.npmigonre'\n    # Special files for python.\n    - 'python-client/requirement.txt'\n    # Text files used for tests and could not be added with copyright info (otherwise would lead to error).\n    - 'src/aio/test/copy_source.txt'\n    - 'src/runtime/test/command.txt'\n    - 'src/failure_detector/test/gtest.filter'\n    - 'src/meta/test/meta_state/gtest.filter'\n    - 'src/meta/test/suite1'\n    - 'src/meta/test/suite2'\n    - 'src/nfs/test/nfs_test_file1'\n    - 'src/nfs/test/nfs_test_file2'\n    # Used for tests and should be empty, or ignore all comment lines (otherwise would lead to error).\n    - 'src/utils/test/config-empty.ini'\n    # Binary files used for tests and could not be added with copyright info (otherwise would lead to error).\n    - 'src/replica/duplication/test/log.1.0.handle_real_private_log'\n    - 'src/replica/duplication/test/log.1.0.handle_real_private_log2'\n    - 'src/replica/duplication/test/log.1.0.all_loaded_are_write_empties'\n    # Used for patches for thirdparties.\n    - 'thirdparty/fix_hdfs_native_client.patch'\n    - 'thirdparty/fix_jemalloc_for_m1_on_macos.patch'\n    - 'thirdparty/fix_libevent_for_macos.patch'\n    - 'thirdparty/fix_rocksdb-cmake-PORTABLE-option.patch'\n    - 'thirdparty/fix_snappy-Wsign-compare-warning.patch'\n    - 'thirdparty/fix_s2_build_with_absl_and_gtest.patch'\n    - 'thirdparty/fix_thrift_build_and_link_errors.patch'\n    # TODO(yingchun): shell/* files are import from thirdparties, we can move them to thirdparty later.\n    # Copyright (c) 2016, Adi Shavit\n    - 'src/shell/argh.h'\n    # Copyright (c) 2010-2016, Salvatore Sanfilippo, etc.\n    - 'src/shell/linenoise/linenoise.c'\n    # Copyright (c) 2010-2014, Salvatore Sanfilippo, etc.\n    - 'src/shell/linenoise/linenoise.h'\n    # Copyright (c) 2006-2015, Salvatore Sanfilippo, etc.\n    - 'src/shell/sds/sds.c'\n    - 'src/shell/sds/sds.h'\n    - 'src/shell/sds/sdsalloc.h'\n    # Copyright (c) Facebook, Inc\n    - 'src/utils/TokenBucket.h'\n    - 'src/utils/test/TokenBucketTest.cpp'\n    - 'src/utils/test/TokenBucketTest.h'\n    # https://github.com/preshing/modern-cpp-threading/blob/master/LICENSE\n    - 'src/utils/hpc_locks/autoreseteventcondvar.h'\n    # https://github.com/preshing/cpp11-on-multicore/blob/master/LICENSE\n    - 'src/utils/hpc_locks/autoresetevent.h'\n    - 'src/utils/hpc_locks/benaphore.h'\n    - 'src/utils/hpc_locks/bitfield.h'\n    - 'src/utils/hpc_locks/readme.txt'\n    - 'src/utils/hpc_locks/rwlock.h'\n    - 'src/utils/hpc_locks/sema.h'\n    # Copyright (c) 2011 The Chromium Authors\n    - 'src/utils/safe_strerror_posix.h'\n    # Copyright (c) 2012 The Chromium Authors\n    - 'src/runtime/build_config.h'\n    - 'src/utils/test/autoref_ptr_test.cpp'\n    # Copyright (c) 2006-2009 The Chromium Authors\n    - 'src/utils/safe_strerror_posix.cpp'\n    # Copyright (c) 2010-2011, Rob Jansen\n    - 'cmake_modules/FindRT.cmake'\n    - 'cmake_modules/FindDL.cmake'\n    # Copyright (c) 2017 Guillaume Papin\n    - 'build_tools/run-clang-format.py'\n    # The MIT License (MIT), Copyright (c) 2015 Microsoft Corporation\n    - 'admin_tools/learn_stat.py'\n    - 'build_tools/compile_thrift.py'\n    - 'cmake_modules/BaseFunctions.cmake'\n    - 'docs/rdsn-README.md'\n    - 'idl/command.thrift'\n    - 'idl/dsn.layer2.thrift'\n    - 'idl/dsn.thrift'\n    - 'idl/meta_admin.thrift'\n    - 'idl/metadata.thrift'\n    - 'idl/replica_admin.thrift'\n    - 'src/aio/CMakeLists.txt'\n    - 'src/aio/aio_provider.cpp'\n    - 'src/aio/aio_provider.h'\n    - 'src/aio/aio_task.h'\n    - 'src/aio/disk_engine.cpp'\n    - 'src/aio/disk_engine.h'\n    - 'src/aio/file_io.cpp'\n    - 'src/aio/file_io.h'\n    - 'src/aio/native_linux_aio_provider.cpp'\n    - 'src/aio/native_linux_aio_provider.h'\n    - 'src/aio/test/CMakeLists.txt'\n    - 'src/aio/test/aio.cpp'\n    - 'src/aio/test/clear.sh'\n    - 'src/aio/test/config.ini'\n    - 'src/aio/test/run.sh'\n    - 'src/block_service/test/config-test.ini'\n    - 'src/client/CMakeLists.txt'\n    - 'src/client/partition_resolver.cpp'\n    - 'src/client/partition_resolver.h'\n    - 'src/client/partition_resolver_manager.cpp'\n    - 'src/client/partition_resolver_manager.h'\n    - 'src/client/partition_resolver_simple.cpp'\n    - 'src/client/partition_resolver_simple.h'\n    - 'src/client/replication_ddl_client.cpp'\n    - 'src/client/replication_ddl_client.h'\n    - 'src/common/CMakeLists.txt'\n    - 'src/common/consensus.thrift'\n    - 'src/common/fs_manager.cpp'\n    - 'src/common/gpid.h'\n    - 'src/common/json_helper.h'\n    - 'src/common/replica_envs.h'\n    - 'src/common/replication.codes.h'\n    - 'src/common/replication_common.cpp'\n    - 'src/common/replication_common.h'\n    - 'src/common/replication_enums.h'\n    - 'src/common/replication_other_types.h'\n    - 'src/common/serialization_helper/dsn_types.h'\n    - 'src/common/serialization_helper/thrift_helper.h'\n    - 'src/common/storage_serverlet.h'\n    - 'src/common/test/CMakeLists.txt'\n    - 'src/common/test/config-test.ini'\n    - 'src/common/test/duplication_common_test.cpp'\n    - 'src/common/test/main.cpp'\n    - 'src/common/test/run.sh'\n    - 'src/failure_detector/CMakeLists.txt'\n    - 'src/failure_detector/failure_detector.cpp'\n    - 'src/failure_detector/failure_detector.h'\n    - 'src/failure_detector/failure_detector_multimaster.cpp'\n    - 'src/failure_detector/failure_detector_multimaster.h'\n    - 'src/failure_detector/fd.client.h'\n    - 'src/failure_detector/fd.code.definition.h'\n    - 'src/failure_detector/fd.server.h'\n    - 'src/failure_detector/fd.thrift'\n    - 'src/failure_detector/test/CMakeLists.txt'\n    - 'src/failure_detector/test/clear.sh'\n    - 'src/failure_detector/test/config-test.ini'\n    - 'src/failure_detector/test/config-whitelist-test-failed.ini'\n    - 'src/failure_detector/test/config-whitelist-test.ini'\n    - 'src/failure_detector/test/failure_detector.cpp'\n    - 'src/failure_detector/test/main.cpp'\n    - 'src/failure_detector/test/run.sh'\n    - 'src/http/http_message_parser.cpp'\n    - 'src/http/http_message_parser.h'\n    - 'src/http/test/run.sh'\n    - 'src/meta/CMakeLists.txt'\n    - 'src/meta/distributed_lock_service_simple.cpp'\n    - 'src/meta/distributed_lock_service_simple.h'\n    - 'src/meta/dump_file.h'\n    - 'src/meta/greedy_load_balancer.cpp'\n    - 'src/meta/greedy_load_balancer.h'\n    - 'src/meta/meta_data.cpp'\n    - 'src/meta/meta_data.h'\n    - 'src/meta/meta_options.cpp'\n    - 'src/meta/meta_options.h'\n    - 'src/meta/meta_server_failure_detector.cpp'\n    - 'src/meta/meta_server_failure_detector.h'\n    - 'src/meta/meta_service.cpp'\n    - 'src/meta/meta_service.h'\n    - 'src/meta/meta_service_app.cpp'\n    - 'src/meta/meta_service_app.h'\n    - 'src/meta/meta_state_service.h'\n    - 'src/meta/meta_state_service_simple.cpp'\n    - 'src/meta/meta_state_service_simple.h'\n    - 'src/meta/meta_state_service_zookeeper.cpp'\n    - 'src/meta/meta_state_service_zookeeper.h'\n    - 'src/meta/server_load_balancer.cpp'\n    - 'src/meta/server_load_balancer.h'\n    - 'src/meta/server_state.cpp'\n    - 'src/meta/server_state.h'\n    - 'src/meta/test/CMakeLists.txt'\n    - 'src/meta/test/balancer_simulator/CMakeLists.txt'\n    - 'src/meta/test/balancer_simulator/balancer_simulator.cpp'\n    - 'src/meta/test/balancer_validator.cpp'\n    - 'src/meta/test/clear.sh'\n    - 'src/meta/test/config-test.ini'\n    - 'src/meta/test/dump_file.cpp'\n    - 'src/meta/test/duplication_info_test.cpp'\n    - 'src/meta/test/json_compacity.cpp'\n    - 'src/meta/test/meta_app_envs_test.cpp'\n    - 'src/meta/test/meta_data.cpp'\n    - 'src/meta/test/meta_duplication_service_test.cpp'\n    - 'src/meta/test/meta_partition_guardian_test.cpp'\n    - 'src/meta/test/meta_service_test_app.h'\n    - 'src/meta/test/meta_split_service_test.cpp'\n    - 'src/meta/test/meta_state/CMakeLists.txt'\n    - 'src/meta/test/meta_state/clear.sh'\n    - 'src/meta/test/meta_state/config-test.ini'\n    - 'src/meta/test/meta_state/main.cpp'\n    - 'src/meta/test/meta_state/meta_state_service.cpp'\n    - 'src/meta/test/meta_state/run.sh'\n    - 'src/meta/test/meta_state_service_utils_test.cpp'\n    - 'src/meta/test/misc/misc.cpp'\n    - 'src/meta/test/misc/misc.h'\n    - 'src/meta/test/run.sh'\n    - 'src/meta/test/server_state_test.cpp'\n    - 'src/meta/test/state_sync_test.cpp'\n    - 'src/meta/test/update_configuration_test.cpp'\n    - 'src/nfs/CMakeLists.txt'\n    - 'src/nfs/nfs.thrift'\n    - 'src/nfs/nfs_client_impl.cpp'\n    - 'src/nfs/nfs_client_impl.h'\n    - 'src/nfs/nfs_code_definition.h'\n    - 'src/nfs/nfs_node.cpp'\n    - 'src/nfs/nfs_node.h'\n    - 'src/nfs/nfs_node_simple.cpp'\n    - 'src/nfs/nfs_node_simple.h'\n    - 'src/nfs/nfs_server_impl.cpp'\n    - 'src/nfs/nfs_server_impl.h'\n    - 'src/nfs/test/CMakeLists.txt'\n    - 'src/nfs/test/clear.sh'\n    - 'src/nfs/test/config.ini'\n    - 'src/nfs/test/main.cpp'\n    - 'src/nfs/test/run.sh'\n    - 'src/perf_counter/CMakeLists.txt'\n    - 'src/perf_counter/perf_counter.cpp'\n    - 'src/perf_counter/perf_counter.h'\n    - 'src/perf_counter/perf_counter_wrapper.h'\n    - 'src/perf_counter/perf_counters.cpp'\n    - 'src/perf_counter/perf_counters.h'\n    - 'src/perf_counter/test/CMakeLists.txt'\n    - 'src/perf_counter/test/clear.sh'\n    - 'src/perf_counter/test/perf_counter_test.cpp'\n    - 'src/perf_counter/test/perf_counters_test.cpp'\n    - 'src/perf_counter/test/run.sh'\n    - 'src/remote_cmd/CMakeLists.txt'\n    - 'src/replica/CMakeLists.txt'\n    - 'src/replica/backup/test/config-test.ini'\n    - 'src/replica/backup/test/run.sh'\n    - 'src/replica/bulk_load/test/config-test.ini'\n    - 'src/replica/bulk_load/test/run.sh'\n    - 'src/replica/duplication/test/config-test.ini'\n    - 'src/replica/duplication/test/run.sh'\n    - 'src/replica/log_file.cpp'\n    - 'src/replica/log_file.h'\n    - 'src/replica/log_file_stream.h'\n    - 'src/replica/mutation.cpp'\n    - 'src/replica/mutation.h'\n    - 'src/replica/mutation_cache.cpp'\n    - 'src/replica/mutation_cache.h'\n    - 'src/replica/mutation_log.cpp'\n    - 'src/replica/mutation_log.h'\n    - 'src/replica/mutation_log_utils.cpp'\n    - 'src/replica/mutation_log_utils.h'\n    - 'src/replica/prepare_list.cpp'\n    - 'src/replica/prepare_list.h'\n    - 'src/replica/replica.cpp'\n    - 'src/replica/replica.h'\n    - 'src/replica/replica_2pc.cpp'\n    - 'src/replica/replica_base.h'\n    - 'src/replica/replica_check.cpp'\n    - 'src/replica/replica_chkpt.cpp'\n    - 'src/replica/replica_config.cpp'\n    - 'src/replica/replica_context.cpp'\n    - 'src/replica/replica_context.h'\n    - 'src/replica/replica_failover.cpp'\n    - 'src/replica/replica_init.cpp'\n    - 'src/replica/replica_learn.cpp'\n    - 'src/replica/replica_stub.cpp'\n    - 'src/replica/replica_stub.h'\n    - 'src/replica/replication_app_base.cpp'\n    - 'src/replica/replication_app_base.h'\n    - 'src/replica/replication_service_app.cpp'\n    - 'src/replica/replication_service_app.h'\n    - 'src/replica/split/test/config-test.ini'\n    - 'src/replica/split/test/run.sh'\n    - 'src/replica/storage/CMakeLists.txt'\n    - 'src/replica/storage/simple_kv/CMakeLists.txt'\n    - 'src/replica/storage/simple_kv/clear.sh'\n    - 'src/replica/storage/simple_kv/config.ini'\n    - 'src/replica/storage/simple_kv/run.sh'\n    - 'src/replica/storage/simple_kv/simple_kv.app.example.h'\n    - 'src/replica/storage/simple_kv/simple_kv.client.h'\n    - 'src/replica/storage/simple_kv/simple_kv.code.definition.h'\n    - 'src/replica/storage/simple_kv/simple_kv.main.cpp'\n    - 'src/replica/storage/simple_kv/simple_kv.server.h'\n    - 'src/replica/storage/simple_kv/simple_kv.server.impl.cpp'\n    - 'src/replica/storage/simple_kv/simple_kv.server.impl.h'\n    - 'src/replica/storage/simple_kv/simple_kv.thrift'\n    - 'src/replica/storage/simple_kv/test/CMakeLists.txt'\n    - 'src/replica/storage/simple_kv/test/README.md'\n    - 'src/replica/storage/simple_kv/test/addcase.sh'\n    - 'src/replica/storage/simple_kv/test/case-000.act'\n    - 'src/replica/storage/simple_kv/test/case-000.ini'\n    - 'src/replica/storage/simple_kv/test/case-001.act'\n    - 'src/replica/storage/simple_kv/test/case-001.ini'\n    - 'src/replica/storage/simple_kv/test/case-002.act'\n    - 'src/replica/storage/simple_kv/test/case-002.ini'\n    - 'src/replica/storage/simple_kv/test/case-003.act'\n    - 'src/replica/storage/simple_kv/test/case-003.ini'\n    - 'src/replica/storage/simple_kv/test/case-004.act'\n    - 'src/replica/storage/simple_kv/test/case-004.ini'\n    - 'src/replica/storage/simple_kv/test/case-005.act'\n    - 'src/replica/storage/simple_kv/test/case-005.ini'\n    - 'src/replica/storage/simple_kv/test/case-006.act'\n    - 'src/replica/storage/simple_kv/test/case-006.ini'\n    - 'src/replica/storage/simple_kv/test/case-100.act'\n    - 'src/replica/storage/simple_kv/test/case-100.ini'\n    - 'src/replica/storage/simple_kv/test/case-101.act'\n    - 'src/replica/storage/simple_kv/test/case-101.ini'\n    - 'src/replica/storage/simple_kv/test/case-102.act'\n    - 'src/replica/storage/simple_kv/test/case-102.ini'\n    - 'src/replica/storage/simple_kv/test/case-103.act'\n    - 'src/replica/storage/simple_kv/test/case-103.ini'\n    - 'src/replica/storage/simple_kv/test/case-104.act'\n    - 'src/replica/storage/simple_kv/test/case-104.ini'\n    - 'src/replica/storage/simple_kv/test/case-105.act'\n    - 'src/replica/storage/simple_kv/test/case-105.ini'\n    - 'src/replica/storage/simple_kv/test/case-106.act'\n    - 'src/replica/storage/simple_kv/test/case-106.ini'\n    - 'src/replica/storage/simple_kv/test/case-107.act'\n    - 'src/replica/storage/simple_kv/test/case-107.ini'\n    - 'src/replica/storage/simple_kv/test/case-108.act'\n    - 'src/replica/storage/simple_kv/test/case-108.ini'\n    - 'src/replica/storage/simple_kv/test/case-109.act'\n    - 'src/replica/storage/simple_kv/test/case-109.ini'\n    - 'src/replica/storage/simple_kv/test/case-200.act'\n    - 'src/replica/storage/simple_kv/test/case-200.ini'\n    - 'src/replica/storage/simple_kv/test/case-201.act'\n    - 'src/replica/storage/simple_kv/test/case-201.ini'\n    - 'src/replica/storage/simple_kv/test/case-202-0.act'\n    - 'src/replica/storage/simple_kv/test/case-202-0.ini'\n    - 'src/replica/storage/simple_kv/test/case-202-1.act'\n    - 'src/replica/storage/simple_kv/test/case-202-1.ini'\n    - 'src/replica/storage/simple_kv/test/case-203-0.act'\n    - 'src/replica/storage/simple_kv/test/case-203-0.ini'\n    - 'src/replica/storage/simple_kv/test/case-204.act'\n    - 'src/replica/storage/simple_kv/test/case-204.ini'\n    - 'src/replica/storage/simple_kv/test/case-205.act'\n    - 'src/replica/storage/simple_kv/test/case-205.ini'\n    - 'src/replica/storage/simple_kv/test/case-206.act'\n    - 'src/replica/storage/simple_kv/test/case-206.ini'\n    - 'src/replica/storage/simple_kv/test/case-207.act'\n    - 'src/replica/storage/simple_kv/test/case-207.ini'\n    - 'src/replica/storage/simple_kv/test/case-208.act'\n    - 'src/replica/storage/simple_kv/test/case-208.ini'\n    - 'src/replica/storage/simple_kv/test/case-209.act'\n    - 'src/replica/storage/simple_kv/test/case-209.ini'\n    - 'src/replica/storage/simple_kv/test/case-210.act'\n    - 'src/replica/storage/simple_kv/test/case-210.ini'\n    - 'src/replica/storage/simple_kv/test/case-211.act'\n    - 'src/replica/storage/simple_kv/test/case-211.ini'\n    - 'src/replica/storage/simple_kv/test/case-212.act'\n    - 'src/replica/storage/simple_kv/test/case-212.ini'\n    - 'src/replica/storage/simple_kv/test/case-213.act'\n    - 'src/replica/storage/simple_kv/test/case-213.ini'\n    - 'src/replica/storage/simple_kv/test/case-214.act'\n    - 'src/replica/storage/simple_kv/test/case-214.ini'\n    - 'src/replica/storage/simple_kv/test/case-215.act'\n    - 'src/replica/storage/simple_kv/test/case-215.ini'\n    - 'src/replica/storage/simple_kv/test/case-216.act'\n    - 'src/replica/storage/simple_kv/test/case-216.ini'\n    - 'src/replica/storage/simple_kv/test/case-300-0.act'\n    - 'src/replica/storage/simple_kv/test/case-300-0.ini'\n    - 'src/replica/storage/simple_kv/test/case-300-1.act'\n    - 'src/replica/storage/simple_kv/test/case-300-1.ini'\n    - 'src/replica/storage/simple_kv/test/case-300-2.act'\n    - 'src/replica/storage/simple_kv/test/case-300-2.ini'\n    - 'src/replica/storage/simple_kv/test/case-301.act'\n    - 'src/replica/storage/simple_kv/test/case-301.ini'\n    - 'src/replica/storage/simple_kv/test/case-302.act'\n    - 'src/replica/storage/simple_kv/test/case-302.ini'\n    - 'src/replica/storage/simple_kv/test/case-303.act'\n    - 'src/replica/storage/simple_kv/test/case-303.ini'\n    - 'src/replica/storage/simple_kv/test/case-304.act'\n    - 'src/replica/storage/simple_kv/test/case-304.ini'\n    - 'src/replica/storage/simple_kv/test/case-305.act'\n    - 'src/replica/storage/simple_kv/test/case-305.ini'\n    - 'src/replica/storage/simple_kv/test/case-306.act'\n    - 'src/replica/storage/simple_kv/test/case-306.ini'\n    - 'src/replica/storage/simple_kv/test/case-307.act'\n    - 'src/replica/storage/simple_kv/test/case-307.ini'\n    - 'src/replica/storage/simple_kv/test/case-400.act'\n    - 'src/replica/storage/simple_kv/test/case-400.ini'\n    - 'src/replica/storage/simple_kv/test/case-401.act'\n    - 'src/replica/storage/simple_kv/test/case-401.ini'\n    - 'src/replica/storage/simple_kv/test/case-402.act'\n    - 'src/replica/storage/simple_kv/test/case-402.ini'\n    - 'src/replica/storage/simple_kv/test/case-600.act'\n    - 'src/replica/storage/simple_kv/test/case-600.ini'\n    - 'src/replica/storage/simple_kv/test/case-601.act'\n    - 'src/replica/storage/simple_kv/test/case-601.ini'\n    - 'src/replica/storage/simple_kv/test/case-602.act'\n    - 'src/replica/storage/simple_kv/test/case-602.ini'\n    - 'src/replica/storage/simple_kv/test/case-603.act'\n    - 'src/replica/storage/simple_kv/test/case-603.ini'\n    - 'src/replica/storage/simple_kv/test/case.cpp'\n    - 'src/replica/storage/simple_kv/test/case.h'\n    - 'src/replica/storage/simple_kv/test/checker.cpp'\n    - 'src/replica/storage/simple_kv/test/checker.h'\n    - 'src/replica/storage/simple_kv/test/clear.sh'\n    - 'src/replica/storage/simple_kv/test/client.cpp'\n    - 'src/replica/storage/simple_kv/test/client.h'\n    - 'src/replica/storage/simple_kv/test/common.cpp'\n    - 'src/replica/storage/simple_kv/test/common.h'\n    - 'src/replica/storage/simple_kv/test/config.ini'\n    - 'src/replica/storage/simple_kv/test/injector.cpp'\n    - 'src/replica/storage/simple_kv/test/injector.h'\n    - 'src/replica/storage/simple_kv/test/run.sh'\n    - 'src/replica/storage/simple_kv/test/simple_kv.main.cpp'\n    - 'src/replica/storage/simple_kv/test/simple_kv.server.impl.cpp'\n    - 'src/replica/storage/simple_kv/test/simple_kv.server.impl.h'\n    - 'src/replica/test/CMakeLists.txt'\n    - 'src/replica/test/config-test.ini'\n    - 'src/replica/test/mock_utils.h'\n    - 'src/replica/test/mutation_log_learn_test.cpp'\n    - 'src/replica/test/mutation_log_test.cpp'\n    - 'src/replica/test/replica_test_base.h'\n    - 'src/replica/test/replication_service_test_app.h'\n    - 'src/replica/test/run.sh'\n    - 'src/rpc/CMakeLists.txt'\n    - 'src/rpc/asio_net_provider.cpp'\n    - 'src/rpc/asio_net_provider.h'\n    - 'src/rpc/asio_rpc_session.cpp'\n    - 'src/rpc/asio_rpc_session.h'\n    - 'src/rpc/dsn_message_parser.cpp'\n    - 'src/rpc/dsn_message_parser.h'\n    - 'src/rpc/group_address.h'\n    - 'src/rpc/message_parser.cpp'\n    - 'src/rpc/message_parser.h'\n    - 'src/rpc/message_parser_manager.h'\n    - 'src/rpc/network.cpp'\n    - 'src/rpc/network.h'\n    - 'src/rpc/network.sim.cpp'\n    - 'src/rpc/network.sim.h'\n    - 'src/rpc/raw_message_parser.cpp'\n    - 'src/rpc/raw_message_parser.h'\n    - 'src/rpc/rpc_address.cpp'\n    - 'src/rpc/rpc_address.h'\n    - 'src/rpc/rpc_engine.cpp'\n    - 'src/rpc/rpc_engine.h'\n    - 'src/rpc/rpc_message.cpp'\n    - 'src/rpc/rpc_message.h'\n    - 'src/rpc/rpc_stream.h'\n    - 'src/rpc/rpc_task.cpp'\n    - 'src/rpc/serialization.h'\n    - 'src/rpc/test/address_test.cpp'\n    - 'src/rpc/test/corrupt_message_test.cpp'\n    - 'src/rpc/test/host_port_test.cpp'\n    - 'src/rpc/test/message_utils_test.cpp'\n    - 'src/rpc/test/net_provider_test.cpp'\n    - 'src/rpc/test/rpc_holder_test.cpp'\n    - 'src/rpc/test/rpc_message_test.cpp'\n    - 'src/rpc/test/rpc_test.cpp'\n    - 'src/rpc/thrift_message_parser.cpp'\n    - 'src/rpc/thrift_message_parser.h'\n    - 'src/runtime/CMakeLists.txt'\n    - 'src/runtime/api_layer1.h'\n    - 'src/runtime/api_task.h'\n    - 'src/runtime/app_model.h'\n    - 'src/runtime/core_main.cpp'\n    - 'src/runtime/env.sim.cpp'\n    - 'src/runtime/env.sim.h'\n    - 'src/runtime/env_provider.h'\n    - 'src/runtime/fault_injector.cpp'\n    - 'src/runtime/fault_injector.h'\n    - 'src/runtime/global_config.cpp'\n    - 'src/runtime/global_config.h'\n    - 'src/runtime/message_utils.cpp'\n    - 'src/runtime/nativerun.cpp'\n    - 'src/runtime/nativerun.h'\n    - 'src/runtime/node_scoper.h'\n    - 'src/runtime/profiler.cpp'\n    - 'src/runtime/profiler.h'\n    - 'src/runtime/profiler_header.h'\n    - 'src/runtime/providers.common.cpp'\n    - 'src/runtime/providers.common.h'\n    - 'src/runtime/scheduler.cpp'\n    - 'src/runtime/scheduler.h'\n    - 'src/runtime/serverlet.h'\n    - 'src/runtime/service_api_c.cpp'\n    - 'src/runtime/service_app.h'\n    - 'src/runtime/service_engine.cpp'\n    - 'src/runtime/service_engine.h'\n    - 'src/runtime/simulator.cpp'\n    - 'src/runtime/simulator.h'\n    - 'src/runtime/test/CMakeLists.txt'\n    - 'src/runtime/test/address_test.cpp'\n    - 'src/runtime/test/async_call.cpp'\n    - 'src/runtime/test/clear.sh'\n    - 'src/runtime/test/config-test-sim.ini'\n    - 'src/runtime/test/config-test.ini'\n    - 'src/runtime/test/corrupt_message.cpp'\n    - 'src/runtime/test/lpc.cpp'\n    - 'src/runtime/test/main.cpp'\n    - 'src/runtime/test/pipeline_test.cpp'\n    - 'src/runtime/test/run.sh'\n    - 'src/runtime/test/service_api_c.cpp'\n    - 'src/runtime/test/sim_lock.cpp'\n    - 'src/runtime/test_utils.h'\n    - 'src/runtime/threadpool_code.cpp'\n    - 'src/runtime/tool_api.cpp'\n    - 'src/runtime/tool_api.h'\n    - 'src/runtime/tracer.cpp'\n    - 'src/runtime/tracer.h'\n    - 'src/runtime/zlocks.cpp'\n    - 'src/task/CMakeLists.txt'\n    - 'src/task/async_calls.h'\n    - 'src/task/future_types.h'\n    - 'src/task/hpc_task_queue.cpp'\n    - 'src/task/hpc_task_queue.h'\n    - 'src/task/simple_task_queue.cpp'\n    - 'src/task/simple_task_queue.h'\n    - 'src/task/task.cpp'\n    - 'src/task/task.h'\n    - 'src/task/task_code.cpp'\n    - 'src/task/task_code.h'\n    - 'src/task/task_engine.cpp'\n    - 'src/task/task_engine.h'\n    - 'src/task/task_engine.sim.cpp'\n    - 'src/task/task_engine.sim.h'\n    - 'src/task/task_queue.cpp'\n    - 'src/task/task_queue.h'\n    - 'src/task/task_spec.cpp'\n    - 'src/task/task_spec.h'\n    - 'src/task/task_tracker.cpp'\n    - 'src/task/task_tracker.h'\n    - 'src/task/task_worker.cpp'\n    - 'src/task/task_worker.h'\n    - 'src/task/tests/async_call_test.cpp'\n    - 'src/task/tests/lpc_test.cpp'\n    - 'src/task/tests/task_engine_test.cpp'\n    - 'src/task/timer_service.h'\n    - 'src/tools/CMakeLists.txt'\n    - 'src/tools/mutation_log_tool.cpp'\n    - 'src/tools/mutation_log_tool.h'\n    - 'src/utils/CMakeLists.txt'\n    - 'src/utils/api_utilities.h'\n    - 'src/utils/autoref_ptr.h'\n    - 'src/utils/binary_reader.cpp'\n    - 'src/utils/binary_reader.h'\n    - 'src/utils/binary_writer.cpp'\n    - 'src/utils/binary_writer.h'\n    - 'src/utils/blob.h'\n    - 'src/utils/chrono_literals.h'\n    - 'src/utils/command_manager.cpp'\n    - 'src/utils/command_manager.h'\n    - 'src/utils/config_api.cpp'\n    - 'src/utils/config_api.h'\n    - 'src/utils/config_helper.h'\n    - 'src/utils/configuration.cpp'\n    - 'src/utils/configuration.h'\n    - 'src/utils/coredump.h'\n    - 'src/utils/coredump.posix.cpp'\n    - 'src/utils/crc.cpp'\n    - 'src/utils/crc.h'\n    - 'src/utils/customizable_id.h'\n    - 'src/utils/distributed_lock_service.h'\n    - 'src/utils/enum_helper.h'\n    - 'src/utils/error_code.cpp'\n    - 'src/utils/error_code.h'\n    - 'src/utils/errors.h'\n    - 'src/utils/exp_delay.h'\n    - 'src/utils/extensible_object.h'\n    - 'src/utils/factory_store.h'\n    - 'src/utils/filesystem.cpp'\n    - 'src/utils/filesystem.h'\n    - 'src/utils/fixed_size_buffer_pool.h'\n    - 'src/utils/function_traits.h'\n    - 'src/utils/gpid.cpp'\n    - 'src/utils/join_point.h'\n    - 'src/utils/link.h'\n    - 'src/utils/lockp.std.h'\n    - 'src/utils/logging.cpp'\n    - 'src/utils/logging_provider.h'\n    - 'src/utils/optional.h'\n    - 'src/utils/ports.h'\n    - 'src/utils/priority_queue.h'\n    - 'src/utils/shared_io_service.h'\n    - 'src/utils/simple_logger.cpp'\n    - 'src/utils/simple_logger.h'\n    - 'src/utils/singleton_store.h'\n    - 'src/utils/strings.cpp'\n    - 'src/utils/strings.h'\n    - 'src/utils/synchronize.h'\n    - 'src/utils/test/CMakeLists.txt'\n    - 'src/utils/test/clear.sh'\n    - 'src/utils/test/config-bad-section.ini'\n    - 'src/utils/test/config-dup-key.ini'\n    - 'src/utils/test/config-dup-section.ini'\n    - 'src/utils/test/config-no-key.ini'\n    - 'src/utils/test/config-no-section.ini'\n    - 'src/utils/test/config-null-section.ini'\n    - 'src/utils/test/config-sample.ini'\n    - 'src/utils/test/config-unmatch-section.ini'\n    - 'src/utils/test/configuration.cpp'\n    - 'src/utils/test/env.cpp'\n    - 'src/utils/test/file_utils.cpp'\n    - 'src/utils/test/fmt_logging_test.cpp'\n    - 'src/utils/test/join_point_test.cpp'\n    - 'src/utils/test/json_helper_test.cpp'\n    - 'src/utils/test/lock.std.cpp'\n    - 'src/utils/test/logger.cpp'\n    - 'src/utils/test/logging.cpp'\n    - 'src/utils/test/output_utils_test.cpp'\n    - 'src/utils/test/priority_queue.cpp'\n    - 'src/utils/test/run.sh'\n    - 'src/utils/test/sema.cpp'\n    - 'src/utils/test/string_conv_test.cpp'\n    - 'src/utils/test/time_utils_test.cpp'\n    - 'src/utils/test/utils.cpp'\n    - 'src/utils/thread_access_checker.cpp'\n    - 'src/utils/thread_access_checker.h'\n    - 'src/utils/threadpool_code.h'\n    - 'src/utils/threadpool_spec.h'\n    - 'src/utils/time_utils.h'\n    - 'src/utils/uniq_timestamp_us.h'\n    - 'src/utils/utils.cpp'\n    - 'src/utils/utils.h'\n    - 'src/utils/work_queue.h'\n    - 'src/utils/zlock_provider.h'\n    - 'src/utils/zlocks.h'\n    - 'src/zookeeper/CMakeLists.txt'\n    - 'src/zookeeper/distributed_lock_service_zookeeper.cpp'\n    - 'src/zookeeper/distributed_lock_service_zookeeper.h'\n    - 'src/zookeeper/lock_struct.cpp'\n    - 'src/zookeeper/lock_struct.h'\n    - 'src/zookeeper/lock_types.h'\n    - 'src/zookeeper/test/CMakeLists.txt'\n    - 'src/zookeeper/test/clear.sh'\n    - 'src/zookeeper/test/config-test.ini'\n    - 'src/zookeeper/test/distributed_lock_zookeeper.cpp'\n    - 'src/zookeeper/test/main.cpp'\n    - 'src/zookeeper/test/run.sh'\n    - 'src/zookeeper/zookeeper_error.cpp'\n    - 'src/zookeeper/zookeeper_error.h'\n    - 'src/zookeeper/zookeeper_session.cpp'\n    - 'src/zookeeper/zookeeper_session.h'\n    - 'src/zookeeper/zookeeper_session_mgr.cpp'\n    - 'src/zookeeper/zookeeper_session_mgr.h'\n    # Apache License, Version 2.0, Copyright 2018 Google LLC\n    - 'src/gutil/test/map_traits_test.cpp'\n    - 'src/gutil/test/map_util_test.h'\n    - 'src/gutil/test/map_util_unittest.cpp'\n    - 'src/gutil/test/no_destructor_test.cpp'\n    - 'src/gutil/map_traits.h'\n    - 'src/gutil/map_util.h'\n    - 'src/gutil/no_destructor.h'\n\n  comment: on-failure\n"
        },
        {
          "name": ".rat-excludes",
          "type": "blob",
          "size": 0.3876953125,
          "content": ".*go.sum\n.*csv\n.*npmigonre\n.*gtest.filter\nFindRT.cmake\nFindDL.cmake\ndsn_err_string.go\nrocskdb_err_string.go\nsafe_strerror_posix.h\nautoresetevent.h\nautoreseteventcondvar.h\nbenaphore.h\nbitfield.h\nrwlock.h\nsema.h\ncopy_source.txt\nsuite.*\nnfs_test_file.*\nbuild_config.h\ncommand.txt\nsafe_strerror_posix.cpp\nautoref_ptr_test.cpp\nconfig-empty.ini\nargh.h\nlinenoise/*\nsds/*\n.*patch\nDISCLAIMER\n.rat-excludes\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.751953125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\ncmake_minimum_required(VERSION 3.24.0)\nproject(pegasus)\n\nif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n    # require at least gcc 7.0.0\n    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)\n        message(FATAL_ERROR \"GCC version must be at least 7.0.0!\")\n    endif ()\nendif ()\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake_modules\")\ninclude(CompilerInfo)\ninclude(BaseFunctions)\n\n# Always generate the compilation database file (compile_commands.json) for use\n# with various development tools, such as IWYU and Vim's YouCompleteMe plugin.\n# See http://clang.llvm.org/docs/JSONCompilationDatabase.html\nset(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)\n\nset(PROJECT_ROOT ${CMAKE_CURRENT_LIST_DIR})\nif (\"$ENV{THIRDPARTY_ROOT}\" STREQUAL \"\")\n    set(THIRDPARTY_ROOT ${PROJECT_ROOT}/thirdparty)\nelse()\n    set(THIRDPARTY_ROOT $ENV{THIRDPARTY_ROOT})\nendif()\nset(THIRDPARTY_INSTALL_DIR ${THIRDPARTY_ROOT}/output)\nmessage(STATUS \"THIRDPARTY_INSTALL_DIR = ${THIRDPARTY_INSTALL_DIR}\")\n\nset(BUILD_DIR ${PROJECT_ROOT}/src/builder)\nmessage(STATUS \"BUILD_DIR = ${BUILD_DIR}\")\n\noption(BUILD_TEST \"build unit test\" ON)\nmessage(STATUS \"BUILD_TEST = ${BUILD_TEST}\")\n\noption(ENABLE_GCOV \"Enable gcov (for code coverage analysis)\" OFF)\nmessage(STATUS \"ENABLE_GCOV = ${ENABLE_GCOV}\")\n\n# Disable this option before running valgrind.\noption(ENABLE_GPERF \"Enable gperftools (for tcmalloc)\" ON)\nmessage(STATUS \"ENABLE_GPERF = ${ENABLE_GPERF}\")\n\noption(USE_JEMALLOC \"Use jemalloc\" OFF)\nmessage(STATUS \"USE_JEMALLOC = ${USE_JEMALLOC}\")\n\nif(ENABLE_GPERF AND USE_JEMALLOC)\n    message(FATAL_ERROR \"cannot enable both gperftools and jemalloc simultaneously\")\nendif()\n\nif(USE_JEMALLOC)\n    message(STATUS \"jemalloc is enabled\")\n    set(JEMALLOC_LIB_TYPE \"SHARED\")\nendif()\n\noption(SEPARATE_SERVERS \"Whether to build pegasus_collector，pegasus_meta_server and pegasus_replica_server binaries separately, otherwise a combined pegasus_server binary will be built\" OFF)\nmessage(STATUS \"SEPARATE_SERVERS = ${SEPARATE_SERVERS}\")\n\nadd_subdirectory(src)\n"
        },
        {
          "name": "DISCLAIMER",
          "type": "blob",
          "size": 0.5400390625,
          "content": "Apache Pegasus (incubating) is an effort undergoing incubation at The Apache\nSoftware Foundation (ASF), sponsored by the Apache Incubator PMC.\n\nIncubation is required of all newly accepted projects until a further review\nindicates that the infrastructure, communications, and decision making process\nhave stabilized in a manner consistent with other successful ASF projects.\n\nWhile incubation status is not necessarily a reflection of the completeness\nor stability of the code, it does indicate that the project has yet to be\nfully endorsed by the ASF.\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 6.53515625,
          "content": "# Pegasus Change Log\n\n## 2.5.0\n\n### Behavior changes\n* Use official releases of RocksDB for Pegasus, instead of the modified versions based on a fork of it due to some historical reasons. Since Pegasus 2.1.0, actually most of the modifications have been removed, while few of them were left to keep backward compatible. Pegasus 2.5.0 would turn to official release, thus it should be noted that to use 2.5.0, the server must be upgraded from 2.1, 2.2, 2.3 or 2.4, to ensure that in MANIFEST files there are no introduced tags by the modified versions which could not be recognized by the official releases. [#1048](https://github.com/apache/incubator-pegasus/pull/1048)\n* Now the logs in servers and C++ clients are in increase severity order of `DEBUG`, `INFO`, `WARNING`, `ERROR` and `FATAL`, which means the inverse order between `DEBUG` and `INFO` has been corrected. [#1200](https://github.com/apache/incubator-pegasus/pull/1200)\n* All shared log files would be flushed and removed for garbage collection, while before 2.5.0 there is at least 1 shared log file which is never removed, though long before that the private logs were written as WAL instead of shared logs. [#1594](https://github.com/apache/incubator-pegasus/pull/1594)\n* No longer support EOL OS versions, including Ubuntu 16.04 and CentOS 6. [#1553](https://github.com/apache/incubator-pegasus/pull/1553), [#1557](https://github.com/apache/incubator-pegasus/pull/1557)\n\n### New Features\n* Add a new ACL based on Apache Ranger to provide fine-grained access control to global-level, database-level and table-level resources. On the other hand, it is also compatible with the old coarse-grained ACL. [#1054](https://github.com/apache/incubator-pegasus/issues/1054)\n* Add support to query and update table-level RocksDB options at runtime, where currently only `num_levels` and `write_buffer_size` are supported; other options would be added gradually, if necessary. [#1511](https://github.com/apache/incubator-pegasus/pull/1511)\n* Add a new `rename` command for cpp-shell, allowing users to rename a table. [#1272](https://github.com/apache/incubator-pegasus/pull/1272)\n* Add a configuration `[network] enable_udp` to control if UDP service is started. The service would not be started when set to false. [#1132](https://github.com/apache/incubator-pegasus/pull/1132)\n* Add support to dump the statistical information while using `jemalloc`. [#1133](https://github.com/apache/incubator-pegasus/pull/1133)\n* Support `success_if_exist` option for the interface of creating table to cpp-shell, java and go clients. [#1148](https://github.com/apache/incubator-pegasus/pull/1148)\n* Add a new interface `listApps` to the Java client to list all tables. [#1471](https://github.com/apache/incubator-pegasus/pull/1471) \n* Add a new option `[replication] crash_on_slog_error` to make it possible to exit the replica server if the shared log failed to be replayed, instead of trashing all the replicas on the server. [#1574](https://github.com/apache/incubator-pegasus/pull/1574)\n* Pegasus could be built on more platforms: Ubuntu 22.04/Clang 14, M1 MacOS. [#1350](https://github.com/apache/incubator-pegasus/pull/1350), [#1094](https://github.com/apache/incubator-pegasus/pull/1094)\n* Pegasus could be developed and built in a docker environment via VSCode(https://code.visualstudio.com/docs/devcontainers/containers), which is more friendly to newbies. [#1544](https://github.com/apache/incubator-pegasus/pull/1544)\n\n### Performance Improvements\n* Improve the performance of `count_data` of cpp-shell by only transferring the number of records rather than the real data. [#1091](https://github.com/apache/incubator-pegasus/pull/1091)\n\n### Bug fixes\n* Fix a bug that the RocksDB library is not built in **Release** version, which may cause terrible performance issues. [#1340](https://github.com/apache/incubator-pegasus/pull/1340)\n* Fix a bug in the Go client that the `startScanPartition()` operation could not be performed correctly if some partitions was migrated. [#1106](https://github.com/apache/incubator-pegasus/pull/1106)\n* Fix a bug that some RockDB options could not be loaded correctly if updating the config file and restarting the replica server. [#1108](https://github.com/apache/incubator-pegasus/pull/1108)\n* Create a `stat` table to avoid errors reported from cpp-collector. [#1155](https://github.com/apache/incubator-pegasus/pull/1155)\n* Fix bugs where wrong error code is passed to callback and directory is not rolled back correctly for failure while resetting the mutation log with log files of another directory. [#1208](https://github.com/apache/incubator-pegasus/pull/1208)\n* Fix a bug in admin-cli that reports an incorrect error `doesn't have enough space` when executing the `partition-split start` command. [#1289](https://github.com/apache/incubator-pegasus/pull/1289)\n* Fix a bug in Java client that the `batchGetByPartitions()` API may throw `IndexOutOfBoundsException` exception if partial partitions get response failed. [#1411](https://github.com/apache/incubator-pegasus/pull/1411)\n* Trash the corrupted replica to the path `<app_id>.<pid>.pegasus.<timestamp>.err` when the RocksDB instance reports corruption error while executing write operations instead of leaving it in the same place, to avoid endless corruption errors. Also trash the corrupted replica to that path when corruption errors occur while executing read operations (instead of doing nothing). The trashed replica can be recovered automatically in a cluster deployment, or must be repaired manually in singleton deployment. [#1422](https://github.com/apache/incubator-pegasus/pull/1422)\n* Fix a bug of replica server crash if `.init-info` file is missing. [#1428](https://github.com/apache/incubator-pegasus/pull/1428)\n* Fix a bug of the Go client may hang if some replica servers are down. [#1444](https://github.com/apache/incubator-pegasus/pull/1444)\n* Fix a bug that the replica server would crash when opening a replica with a corrupted RocksDB instance, whose directory will be marked as trash then. [#1450](https://github.com/apache/incubator-pegasus/issues/1450)\n* Fix a bug that there is no interval between two attempts once `ERR_BUSY_CREATING` or `ERR_BUSY_DROPPING` error is received while creating or dropping a table by cpp-shell. [#1453](https://github.com/apache/incubator-pegasus/pull/1453)\n* Fix a bug of the replica server crash in the Ingestion procedure of Bulk Load data. [#1563](https://github.com/apache/incubator-pegasus/pull/1563)\n* Mark the data directory as failed and stop assigning new replicas to it once IO errors are found for it. [#1383](https://github.com/apache/incubator-pegasus/issues/1383)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 28.88671875,
          "content": "\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n  \"License\" shall mean the terms and conditions for use, reproduction,\n  and distribution as defined by Sections 1 through 9 of this document.\n\n  \"Licensor\" shall mean the copyright owner or entity authorized by\n  the copyright owner that is granting the License.\n\n  \"Legal Entity\" shall mean the union of the acting entity and all\n  other entities that control, are controlled by, or are under common\n  control with that entity. For the purposes of this definition,\n  \"control\" means (i) the power, direct or indirect, to cause the\n  direction or management of such entity, whether by contract or\n  otherwise, or (ii) ownership of fifty percent (50%) or more of the\n  outstanding shares, or (iii) beneficial ownership of such entity.\n\n  \"You\" (or \"Your\") shall mean an individual or Legal Entity\n  exercising permissions granted by this License.\n\n  \"Source\" form shall mean the preferred form for making modifications,\n  including but not limited to software source code, documentation\n  source, and configuration files.\n\n  \"Object\" form shall mean any form resulting from mechanical\n  transformation or translation of a Source form, including but\n  not limited to compiled object code, generated documentation,\n  and conversions to other media types.\n\n  \"Work\" shall mean the work of authorship, whether in Source or\n  Object form, made available under the License, as indicated by a\n  copyright notice that is included in or attached to the work\n  (an example is provided in the Appendix below).\n\n  \"Derivative Works\" shall mean any work, whether in Source or Object\n  form, that is based on (or derived from) the Work and for which the\n  editorial revisions, annotations, elaborations, or other modifications\n  represent, as a whole, an original work of authorship. For the purposes\n  of this License, Derivative Works shall not include works that remain\n  separable from, or merely link (or bind by name) to the interfaces of,\n  the Work and Derivative Works thereof.\n\n  \"Contribution\" shall mean any work of authorship, including\n  the original version of the Work and any modifications or additions\n  to that Work or Derivative Works thereof, that is intentionally\n  submitted to Licensor for inclusion in the Work by the copyright owner\n  or by an individual or Legal Entity authorized to submit on behalf of\n  the copyright owner. For the purposes of this definition, \"submitted\"\n  means any form of electronic, verbal, or written communication sent\n  to the Licensor or its representatives, including but not limited to\n  communication on electronic mailing lists, source code control systems,\n  and issue tracking systems that are managed by, or on behalf of, the\n  Licensor for the purpose of discussing and improving the Work, but\n  excluding communication that is conspicuously marked or otherwise\n  designated in writing by the copyright owner as \"Not a Contribution.\"\n\n  \"Contributor\" shall mean Licensor and any individual or Legal Entity\n  on behalf of whom a Contribution has been received by Licensor and\n  subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n  this License, each Contributor hereby grants to You a perpetual,\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n  copyright license to reproduce, prepare Derivative Works of,\n  publicly display, publicly perform, sublicense, and distribute the\n  Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n  this License, each Contributor hereby grants to You a perpetual,\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n  (except as stated in this section) patent license to make, have made,\n  use, offer to sell, sell, import, and otherwise transfer the Work,\n  where such license applies only to those patent claims licensable\n  by such Contributor that are necessarily infringed by their\n  Contribution(s) alone or by combination of their Contribution(s)\n  with the Work to which such Contribution(s) was submitted. If You\n  institute patent litigation against any entity (including a\n  cross-claim or counterclaim in a lawsuit) alleging that the Work\n  or a Contribution incorporated within the Work constitutes direct\n  or contributory patent infringement, then any patent licenses\n  granted to You under this License for that Work shall terminate\n  as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n  Work or Derivative Works thereof in any medium, with or without\n  modifications, and in Source or Object form, provided that You\n  meet the following conditions:\n\n  (a) You must give any other recipients of the Work or\n      Derivative Works a copy of this License; and\n\n  (b) You must cause any modified files to carry prominent notices\n      stating that You changed the files; and\n\n  (c) You must retain, in the Source form of any Derivative Works\n      that You distribute, all copyright, patent, trademark, and\n      attribution notices from the Source form of the Work,\n      excluding those notices that do not pertain to any part of\n      the Derivative Works; and\n\n  (d) If the Work includes a \"NOTICE\" text file as part of its\n      distribution, then any Derivative Works that You distribute must\n      include a readable copy of the attribution notices contained\n      within such NOTICE file, excluding those notices that do not\n      pertain to any part of the Derivative Works, in at least one\n      of the following places: within a NOTICE text file distributed\n      as part of the Derivative Works; within the Source form or\n      documentation, if provided along with the Derivative Works; or,\n      within a display generated by the Derivative Works, if and\n      wherever such third-party notices normally appear. The contents\n      of the NOTICE file are for informational purposes only and\n      do not modify the License. You may add Your own attribution\n      notices within Derivative Works that You distribute, alongside\n      or as an addendum to the NOTICE text from the Work, provided\n      that such additional attribution notices cannot be construed\n      as modifying the License.\n\n  You may add Your own copyright statement to Your modifications and\n  may provide additional or different license terms and conditions\n  for use, reproduction, or distribution of Your modifications, or\n  for any such Derivative Works as a whole, provided Your use,\n  reproduction, and distribution of the Work otherwise complies with\n  the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n  any Contribution intentionally submitted for inclusion in the Work\n  by You to the Licensor shall be under the terms and conditions of\n  this License, without any additional terms or conditions.\n  Notwithstanding the above, nothing herein shall supersede or modify\n  the terms of any separate license agreement you may have executed\n  with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n  names, trademarks, service marks, or product names of the Licensor,\n  except as required for reasonable and customary use in describing the\n  origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n  agreed to in writing, Licensor provides the Work (and each\n  Contributor provides its Contributions) on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n  implied, including, without limitation, any warranties or conditions\n  of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n  PARTICULAR PURPOSE. You are solely responsible for determining the\n  appropriateness of using or redistributing the Work and assume any\n  risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n  whether in tort (including negligence), contract, or otherwise,\n  unless required by applicable law (such as deliberate and grossly\n  negligent acts) or agreed to in writing, shall any Contributor be\n  liable to You for damages, including any direct, indirect, special,\n  incidental, or consequential damages of any character arising as a\n  result of this License or out of the use or inability to use the\n  Work (including but not limited to damages for loss of goodwill,\n  work stoppage, computer failure or malfunction, or any and all\n  other commercial damages or losses), even if such Contributor\n  has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n  the Work or Derivative Works thereof, You may choose to offer,\n  and charge a fee for, acceptance of support, warranty, indemnity,\n  or other liability obligations and/or rights consistent with this\n  License. However, in accepting such obligations, You may act only\n  on Your own behalf and on Your sole responsibility, not on behalf\n  of any other Contributor, and only if You agree to indemnify,\n  defend, and hold each Contributor harmless for any liability\n  incurred by, or claims asserted against, such Contributor by reason\n  of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\n\n** - MIT License\n\n The MIT License (MIT)\n\n Copyright (c) 2015 Microsoft Corporation\n\n -=- Robust Distributed System Nucleus (rDSN) -=-\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/shell/linenoise/linenoise.h - BSD-2-Clause License\nsrc/shell/linenoise/LICENSE\n\n  Copyright (c) 2010-2014, Salvatore Sanfilippo <antirez at gmail dot com>\n  Copyright (c) 2010-2013, Pieter Noordhuis <pcnoordhuis at gmail dot com>\n\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n\n   *  Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n   *  Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/shell/linenoise/linenoise.c - BSD-2-Clause License\n\n  Copyright (c) 2010-2016, Salvatore Sanfilippo <antirez at gmail dot com>\n  Copyright (c) 2010-2013, Pieter Noordhuis <pcnoordhuis at gmail dot com>\n\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n\n   *  Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n   *  Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/shell/sds/* - BSD-2-Clause License\n\n  Copyright (c) 2006-2015, Salvatore Sanfilippo <antirez at gmail dot com>\n  Copyright (c) 2015, Oran Agra\n  Copyright (c) 2015, Redis Labs, Inc\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of Redis nor the names of its contributors may be used\n      to endorse or promote products derived from this software without\n      specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/shell/argh.h - BSD-3-Clause License\n\n Copyright (c) 2016, Adi Shavit\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n * Neither the name of  nor the names of its contributors may be used to\n endorse or promote products derived from this software without specific\n prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/utils/safe_strerror_posix.cpp - BSD-3-Clause License\n\nCopyright (c) 2006-2009 The Chromium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/utils/TokenBucket.h - Apache License, Version 2.0\nsrc/utils/test/TokenBucketTest.cpp\nsrc/utils/test/TokenBucketTest.h\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\n\nsrc/utils/hpc_locks/autoreseteventcondvar.h - zlib License\nsrc/utils/hpc_locks/autoresetevent.h\nsrc/utils/hpc_locks/benaphore.h\nsrc/utils/hpc_locks/bitfield.h\nsrc/utils/hpc_locks/readme.txt\nsrc/utils/hpc_locks/rwlock.h\nsrc/utils/hpc_locks/sema.h\n\nCopyright (c) 2015 Jeff Preshing\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgement in the product documentation would be\n   appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.\n\n--------------------------------------------------------------------------------\n\nsrc/runtime/build_config.h - BSD-3-Clause License\nsrc/utils/test/autoref_ptr_test.cpp\n\nCopyright (c) 2012 The Chromium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\ncmake_modules/FindRT.cmake - BSD-3-Clause license\ncmake_modules/FindDL.cmake\n\nCopyright (c) 2010-2011, Rob Jansen\n\nTo the extent that a federal employee is an author of a portion of\nthis software or a derivative work thereof, no copyright is claimed by\nthe United States Government, as represented by the Secretary of the\nNavy (\"GOVERNMENT\") under Title 17, U.S. Code. All Other Rights\nReserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the names of the copyright owners nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nGOVERNMENT ALLOWS FREE USE OF THIS SOFTWARE IN ITS \"AS IS\" CONDITION\nAND DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER\nRESULTING FROM THE USE OF THIS SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nbuild_tools/run-clang-format.py - MIT License\n\nMIT License\n\nCopyright (c) 2017 Guillaume Papin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/utils/safe_strerror_posix.h - BSD-3-Clause License\n\nCopyright (c) 2011 The Chromium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/gutil/test/map_traits_test.cpp\nsrc/gutil/test/map_util_test.h\nsrc/gutil/test/map_util_unittest.cpp\nsrc/gutil/test/no_destructor_test.cpp\nsrc/gutil/map_traits.h\nsrc/gutil/map_util.h\nsrc/gutil/no_destructor.h\n\nCopyright 2018 Google LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1591796875,
          "content": "Apache Pegasus\nCopyright 2023 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.2705078125,
          "content": "<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n[github-release]: https://github.com/apache/incubator-pegasus/releases\n<!-- markdown-link-check-disable -->\n[PacificA]: https://www.microsoft.com/en-us/research/publication/pacifica-replication-in-log-based-distributed-storage-systems/\n<!-- markdown-link-check-enable-->\n[rocksdb]: https://github.com/facebook/rocksdb\n[hbase]: https://hbase.apache.org\n[website]: https://pegasus.apache.org\n\n![pegasus-logo](https://github.com/apache/incubator-pegasus-website/blob/master/assets/images/pegasus-logo-inv.png)\n\n[![Lint and build regularly](https://github.com/apache/incubator-pegasus/actions/workflows/regular-build.yml/badge.svg)](https://github.com/apache/incubator-pegasus/actions/workflows/regular-build.yml)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Releases](https://img.shields.io/github/release/apache/incubator-pegasus.svg)][github-release]\n\n**Note**: The `master` branch may be in an *unstable or even in a broken state* during development.\nPlease use [GitHub Releases][github-release] instead of the `master` branch in order to get stable binaries.\n\nApache Pegasus is a distributed key-value storage system which is designed to be:\n\n- **horizontally scalable**: distributed using hash-based partitioning\n- **strongly consistent**: ensured by [PacificA][PacificA] consensus protocol\n- **high-performance**: using [RocksDB][rocksdb] as underlying storage engine\n- **simple**: well-defined, easy-to-use APIs\n\n## Background\n\nPegasus targets to fill the gap between Redis and [HBase][hbase]. As the former\nis in-memory, low latency, but does not provide a strong-consistency guarantee.\nAnd unlike the latter, Pegasus is entirely written in C++ and its write-path\nrelies merely on the local filesystem.\n\nApart from the performance requirements, we also need a storage system\nto ensure multiple-level data safety and support fast data migration\nbetween data centers, automatic load balancing, and online partition split.\n\n## Features\n\n- **Persistence of data**: Each write is replicated three-way to different ReplicaServers before responding to the client. Using PacificA protocol, Pegasus has the ability for strong consistent replication and membership changes.\n\n- **Automatic load balancing over ReplicaServers**: Load balancing is a builtin function of MetaServer, which manages the distribution of replicas. When the cluster is in an inbalance state, the administrator can invoke a simple rebalance command that automatically schedules the replica migration.\n\n- **Cold Backup**: Pegasus supports an extensible backup and restore mechanism to ensure data safety. The location of snapshot could be a distributed filesystem like HDFS or local filesystem. The snapshot storing in the filesystem can be further used for analysis based on [pegasus-spark](https://github.com/pegasus-kv/pegasus-spark).\n\n- **Eventually-consistent intra-datacenter replication**: This is a feature we called *duplication*. It allows a change made in the local cluster accesible after a short time period by the remote cluster. It help achieving higher availability of your service and gaining better performance by accessing only local cluster.\n\n## To start using Pegasus\n\nSee our documentation on the [Pegasus Website][website].\n\n## Client drivers\n\nPegasus has support for several languages:\n\n- [Java](https://github.com/apache/incubator-pegasus/blob/master/java-client)\n- [C++](https://github.com/apache/incubator-pegasus/blob/master/src/include/pegasus/client.h)\n- [Go](https://github.com/apache/incubator-pegasus/blob/master/go-client)\n- [Python](https://github.com/apache/incubator-pegasus/blob/master/python-client)\n- [Node.js](https://github.com/apache/incubator-pegasus/blob/master/nodejs-client)\n- [Scala](https://github.com/apache/incubator-pegasus/blob/master/scala-client)\n\n## Contact us\n\n- Send emails to the Apache Pegasus developer mailing list: `dev@pegasus.apache.org`. This is the place where topics around development, community, and problems are officially discussed. Please remember to subscribe to the mailing list via `dev-subscribe@pegasus.apache.org`.\n\n- GitHub Issues: submit an issue when you have any idea to improve Pegasus, and when you encountered some bugs or problems.\n\n## Related Projects\n\nTest tools:\n\n- [Java YCSB](https://github.com/xiaomi/pegasus-YCSB)\n\nData import/export tools:\n\n- [DataX](https://github.com/xiaomi/pegasus-datax)\n\n## License\n\nCopyright 2022 The Apache Software Foundation. Licensed under the Apache License, Version 2.0:\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n"
        },
        {
          "name": "admin-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "admin_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake_modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "collector",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "idl",
          "type": "tree",
          "content": null
        },
        {
          "name": "java-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "nodejs-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "pegic",
          "type": "tree",
          "content": null
        },
        {
          "name": "python-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "rfcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "run.sh",
          "type": "blob",
          "size": 67.4072265625,
          "content": "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n# \n#   http://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nset -e\n\nLOCAL_HOSTNAME=$(hostname -f)\nPID=$$\nROOT=\"$(cd \"$(dirname \"$0\")\" && pwd)\"\nexport BUILD_ROOT_DIR=${ROOT}/build\nexport BUILD_LATEST_DIR=${BUILD_ROOT_DIR}/latest\nexport REPORT_DIR=\"$ROOT/test_report\"\n# It's possible to specify THIRDPARTY_ROOT by setting the environment variable PEGASUS_THIRDPARTY_ROOT.\nexport THIRDPARTY_ROOT=${PEGASUS_THIRDPARTY_ROOT:-\"$ROOT/thirdparty\"}\nARCH_TYPE=''\narch_output=$(arch)\nif [ \"$arch_output\"x == \"aarch64\"x ]; then\n    ARCH_TYPE=\"aarch64\"\nelse\n    if [ \"$arch_output\"x != \"x86_64\"x ]; then\n        echo \"WARNING: unrecognized CPU architecture '$arch_output', use 'x86_64' as default\"\n    fi\n    ARCH_TYPE=\"amd64\"\nfi\nexport LD_LIBRARY_PATH=${JAVA_HOME}/jre/lib/${ARCH_TYPE}:${JAVA_HOME}/jre/lib/${ARCH_TYPE}/server:${BUILD_LATEST_DIR}/output/lib:${THIRDPARTY_ROOT}/output/lib:${LD_LIBRARY_PATH}\n# Disable AddressSanitizerOneDefinitionRuleViolation, see https://github.com/google/sanitizers/issues/1017 for details.\n# Add parameters in order to be able to generate coredump file when run ASAN tests\nexport ASAN_OPTIONS=detect_odr_violation=0:abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1\n# See https://github.com/gperftools/gperftools/wiki/gperftools'-stacktrace-capturing-methods-and-their-issues.\n# Now we choose libgcc, because of https://github.com/apache/incubator-pegasus/issues/1685.\nexport TCMALLOC_STACKTRACE_METHOD=libgcc  # Can be generic_fp, generic_fp_unsafe, libunwind or libgcc\nexport TCMALLOC_STACKTRACE_METHOD_VERBOSE=1\n\nfunction usage()\n{\n    echo \"usage: run.sh <command> [<args>]\"\n    echo\n    echo \"Command list:\"\n    echo \"   help                      print the help info\"\n    echo \"   build                     build the system\"\n    echo\n    echo \"   start_zk                  start local single zookeeper server\"\n    echo \"   stop_zk                   stop local zookeeper server\"\n    echo \"   clear_zk                  stop local zookeeper server and clear data\"\n    echo\n    echo \"   start_onebox              start pegasus onebox\"\n    echo \"   stop_onebox               stop pegasus onebox\"\n    echo \"   list_onebox               list pegasus onebox\"\n    echo \"   clear_onebox              clear pegasus onebox\"\n    echo\n    echo \"   start_onebox_instance     start pegasus onebox instance\"\n    echo \"   stop_onebox_instance      stop pegasus onebox instance\"\n    echo \"   restart_onebox_instance   restart pegasus onebox instance\"\n    echo\n    echo \"   start_kill_test           start pegasus kill test\"\n    echo \"   stop_kill_test            stop pegasus kill test\"\n    echo \"   list_kill_test            list pegasus kill test\"\n    echo \"   clear_kill_test           clear pegasus kill test\"\n    echo\n    echo \"   bench                     run benchmark test\"\n    echo \"   shell                     run pegasus shell\"\n    echo \"   migrate_node              migrate primary replicas out of specified node\"\n    echo \"   downgrade_node            downgrade replicas to inactive on specified node\"\n    echo\n    echo \"   test                      run unit test\"\n    echo\n    echo \"   pack_server               generate pegasus server package for deploy with minos\"\n    echo \"   pack_client               generate pegasus client package\"\n    echo \"   pack_tools                generate pegasus tools package for shell and benchmark test\"\n    echo\n    echo \"   bump_version              change the version of the project\"\n    echo \"Command 'run.sh <command> -h' will print help for subcommands.\"\n}\n\n#####################\n## build\n#####################\nfunction usage_build()\n{\n    echo \"Options for subcommand 'build':\"\n    echo \"   -h|--help             print the help info\"\n    echo \"   -m|--modules          specify modules to build, split by ',',\"\n    echo \"                         e.g., \\\"pegasus_unit_test,dsn_runtime_tests,dsn_meta_state_tests\\\",\"\n    echo \"                         if not set, then build all objects\"\n    echo \"   -t|--type             build type: debug|release, default is release\"\n    echo \"   -c|--clear            clear pegasus before building, not clear thirdparty\"\n    echo \"   --clear_thirdparty    clear thirdparty/pegasus before building\"\n    echo \"   --compiler            specify c and cxx compiler, sperated by ','\"\n    echo \"                         e.g., \\\"gcc,g++\\\" or \\\"clang-3.9,clang++-3.9\\\"\"\n    echo \"                         default is \\\"gcc,g++\\\"\"\n    echo \"   -j|--jobs <num>       the number of jobs to run simultaneously, default 8\"\n    echo \"   --enable_gcov         generate gcov code coverage report, default no\"\n    echo \"   -v|--verbose          build in verbose mode, default no\"\n    echo \"   --disable_gperf       build without gperftools, this flag is mainly used\"\n    echo \"                         to enable valgrind memcheck, default no\"\n    echo \"   --use_jemalloc        build with jemalloc\"\n    echo \"   --separate_servers    whether to build pegasus_collector，pegasus_meta_server and pegasus_replica_server binaries separately, otherwise a combined pegasus_server binary will be built\"\n    echo \"   --sanitizer <type>    build with sanitizer to check potential problems,\n                                   type: address|leak|thread|undefined\"\n    echo \"   --skip_thirdparty     whether to skip building thirdparties, default no\"\n    echo \"   --enable_rocksdb_portable      build a portable rocksdb binary\"\n    echo \"   --test                whether to build test binaries\"\n    echo \"   --iwyu                specify the binary path of 'include-what-you-use' when build with IWYU\"\n    echo \"   --cmake_only          whether to run cmake only, default no\"\n}\n\nfunction exit_if_fail() {\n    if [ $1 != 0 ]; then\n        exit $1\n    fi\n}\n\nfunction run_build()\n{\n    # Note(jiashuo1): No \"memory\" check mode, because MemorySanitizer is only available in Clang for Linux x86_64 targets\n    # # https://www.jetbrains.com/help/clion/google-sanitizers.html\n    SANITIZERS=(\"address\" \"leak\" \"thread\" \"undefined\")\n\n    C_COMPILER=\"gcc\"\n    CXX_COMPILER=\"g++\"\n    BUILD_TYPE=\"release\"\n    # TODO(yingchun): some boolean variables are using YES/NO, some are using ON/OFF, should be unified.\n    CLEAR=NO\n    CLEAR_THIRDPARTY=NO\n    JOB_NUM=8\n    ENABLE_GCOV=NO\n    RUN_VERBOSE=NO\n    ENABLE_GPERF=ON\n    SKIP_THIRDPARTY=NO\n    SANITIZER=\"\"\n    ROCKSDB_PORTABLE=0\n    USE_JEMALLOC=OFF\n    SEPARATE_SERVERS=OFF\n    BUILD_TEST=OFF\n    IWYU=\"\"\n    BUILD_MODULES=\"\"\n    CMAKE_ONLY=NO\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_build\n                exit 0\n                ;;\n            -m|--modules)\n                BUILD_MODULES=$2\n                shift\n                ;;\n            -t|--type)\n                BUILD_TYPE=\"$2\"\n                shift\n                ;;\n            -c|--clear)\n                CLEAR=YES\n                ;;\n            --clear_thirdparty)\n                CLEAR_THIRDPARTY=YES\n                ;;\n            --compiler)\n                C_COMPILER=`echo $2 | awk -F',' '{print $1}'`\n                CXX_COMPILER=`echo $2 | awk -F',' '{print $2}'`\n                if [ \"x\"$C_COMPILER == \"x\" -o \"x\"$CXX_COMPILER == \"x\" ]; then\n                    echo \"ERROR: invalid compiler option: $2\"\n                    echo\n                    usage_build\n                    exit 1\n                fi\n                shift\n                ;;\n            -j|--jobs)\n                JOB_NUM=\"$2\"\n                shift\n                ;;\n            --enable_gcov)\n                ENABLE_GCOV=YES\n                ;;\n            --sanitizer)\n                IS_SANITIZERS=`echo ${SANITIZERS[@]} | grep -w $2`\n                if [[ -z ${IS_SANITIZERS} ]]; then\n                    echo \"ERROR: unknown sanitizer type \\\"$2\\\"\"\n                    usage_build\n                    exit 1\n                fi\n                SANITIZER=\"$2\"\n                shift\n                ;;\n            -v|--verbose)\n                RUN_VERBOSE=YES\n                ;;\n            --disable_gperf)\n                ENABLE_GPERF=OFF\n                ;;\n            --skip_thirdparty)\n                SKIP_THIRDPARTY=YES\n                ;;\n            --enable_rocksdb_portable)\n                ROCKSDB_PORTABLE=1\n                ;;\n            --use_jemalloc)\n                ENABLE_GPERF=OFF\n                USE_JEMALLOC=ON\n                ;;\n            --separate_servers)\n                SEPARATE_SERVERS=ON\n                ;;\n            --test)\n                BUILD_TEST=ON\n                ;;\n            --iwyu)\n                IWYU=\"$2\"\n                shift\n                ;;\n            --cmake_only)\n                CMAKE_ONLY=YES\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_build\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ \"$BUILD_TYPE\" != \"debug\" -a \"$BUILD_TYPE\" != \"release\" ]; then\n        echo \"ERROR: invalid build type \\\"$BUILD_TYPE\\\"\"\n        echo\n        usage_build\n        exit 1\n    fi\n\n    # Replace all ',' to ' ' in $BUILD_MODULES.\n    if [ \"$BUILD_MODULES\" != \"\" ]; then\n        BUILD_MODULES=${BUILD_MODULES//,/ }\n    fi\n    echo \"build_modules=$BUILD_MODULES\"\n\n    CMAKE_OPTIONS=\"-DCMAKE_C_COMPILER=${C_COMPILER}\n                   -DCMAKE_CXX_COMPILER=${CXX_COMPILER}\n                   -DUSE_JEMALLOC=${USE_JEMALLOC}\n                   -DSEPARATE_SERVERS=${SEPARATE_SERVERS}\"\n\n    echo \"BUILD_TYPE=$BUILD_TYPE\"\n    if [ \"$BUILD_TYPE\" == \"debug\" ]\n    then\n        CMAKE_OPTIONS=\"$CMAKE_OPTIONS -DCMAKE_BUILD_TYPE=Debug\"\n    else\n        CMAKE_OPTIONS=\"$CMAKE_OPTIONS -DCMAKE_BUILD_TYPE=Release\"\n    fi\n\n    if [ ! -z \"${SANITIZER}\" ]; then\n        CMAKE_OPTIONS=\"${CMAKE_OPTIONS} -DSANITIZER=${SANITIZER}\"\n        echo \"ASAN_OPTIONS=$ASAN_OPTIONS\"\n    fi\n\n    MAKE_OPTIONS=\"-j$JOB_NUM\"\n    if [ \"$RUN_VERBOSE\" == \"YES\" ]; then\n        MAKE_OPTIONS=\"${MAKE_OPTIONS} VERBOSE=1\"\n    fi\n\n    echo \"Build start time: `date`\"\n    start_time=`date +%s`\n\n    if [[ ${SKIP_THIRDPARTY} == \"YES\" ]]; then\n        echo \"Skip building third-parties...\"\n    else\n        cd ${THIRDPARTY_ROOT}\n        if [[ \"$CLEAR_THIRDPARTY\" == \"YES\" ]]; then\n            echo \"Clear third-parties...\"\n            rm -rf build\n            rm -rf output\n        fi\n        echo \"Start building third-parties...\"\n        mkdir -p build\n        pushd build\n        CMAKE_OPTIONS=\"${CMAKE_OPTIONS} -DROCKSDB_PORTABLE=${ROCKSDB_PORTABLE}\"\n        cmake .. ${CMAKE_OPTIONS}\n        make -j$JOB_NUM\n        exit_if_fail $?\n        popd\n        cd ..\n    fi\n\n    CMAKE_OPTIONS=\"${CMAKE_OPTIONS}\n                   -DENABLE_GCOV=${ENABLE_GCOV}\n                   -DENABLE_GPERF=${ENABLE_GPERF}\n                   -DBoost_NO_BOOST_CMAKE=ON\n                   -DBOOST_ROOT=${THIRDPARTY_ROOT}/output\n                   -DBoost_NO_SYSTEM_PATHS=ON\"\n\n    echo \"INFO: start build Pegasus...\"\n    BUILD_DIR=\"${BUILD_ROOT_DIR}/${BUILD_TYPE}_${SANITIZER}\"\n    BUILD_DIR=${BUILD_DIR%_*}\n\n    if [ ! -z \"${IWYU}\" ]; then\n        BUILD_DIR=\"${BUILD_DIR}_iwyu\"\n    fi\n\n    if [ \"$CLEAR\" == \"YES\" ]; then\n        echo \"Clear $BUILD_DIR ...\"\n        rm -rf $BUILD_DIR\n        rm -f ${ROOT}/src/base/rrdb_types.cpp\n        rm -f ${ROOT}/src/include/rrdb/rrdb_types.h\n        rm -f ${ROOT}/src/common/serialization_helper/dsn.layer2_types.h\n        rm -f ${ROOT}/src/runtime/dsn.layer2_types.cpp\n        rm -f ${ROOT}/src/include/pegasus/git_commit.h\n    fi\n\n    pushd ${ROOT}\n    if [ ! -f \"${ROOT}/src/common/serialization_helper/dsn.layer2_types.h\" ]; then\n        echo \"Gen thrift\"\n        # TODO(yingchun): should be optimized\n        python3 $ROOT/build_tools/compile_thrift.py\n        sh ${ROOT}/build_tools/recompile_thrift.sh\n    fi\n\n    if [ ! -d \"$BUILD_DIR\" ]; then\n        mkdir -p $BUILD_DIR\n\n        echo \"Running cmake Pegasus...\"\n        pushd $BUILD_DIR\n        if [ ! -z \"${IWYU}\" ]; then\n            CMAKE_OPTIONS=\"${CMAKE_OPTIONS} -DCMAKE_CXX_INCLUDE_WHAT_YOU_USE=${IWYU}\"\n        fi\n        CMAKE_OPTIONS=\"${CMAKE_OPTIONS} -DBUILD_TEST=${BUILD_TEST}\"\n        cmake ${ROOT} -DCMAKE_INSTALL_PREFIX=$BUILD_DIR/output $CMAKE_OPTIONS\n        exit_if_fail $?\n    fi\n\n    GIT_COMMIT_FILE=$ROOT/src/include/pegasus/git_commit.h\n    if [ ! -f \"${GIT_COMMIT_FILE}\" ]; then\n        echo \"Gen git_commit.h ...\"\n        pushd \"$ROOT/src\"\n        PEGASUS_GIT_COMMIT=\"non-git-repo\"\n        if git rev-parse HEAD; then # this is a git repo\n            PEGASUS_GIT_COMMIT=$(git rev-parse HEAD)\n        fi\n        echo \"PEGASUS_GIT_COMMIT=${PEGASUS_GIT_COMMIT}\"\n        echo \"Generating $GIT_COMMIT_FILE...\"\n        echo \"#pragma once\" >$GIT_COMMIT_FILE\n        echo \"#define PEGASUS_GIT_COMMIT \\\"$PEGASUS_GIT_COMMIT\\\"\" >>$GIT_COMMIT_FILE\n    fi\n\n    # rebuild link\n    rm -f ${BUILD_LATEST_DIR}\n    ln -s ${BUILD_DIR} ${BUILD_LATEST_DIR}\n\n    if [ \"$CMAKE_ONLY\" == \"YES\" ]; then\n        echo \"CMake only, exit\"\n        return\n    fi\n\n    echo \"[$(date)] Building Pegasus ...\"\n    pushd $BUILD_DIR\n    if [ ! -z \"${IWYU}\" ]; then\n        make $MAKE_OPTIONS 2> iwyu.out\n    elif [ \"$BUILD_MODULES\" != \"\" ]; then\n        make $BUILD_MODULES $MAKE_OPTIONS\n    else\n        make install $MAKE_OPTIONS\n    fi\n    exit_if_fail $?\n\n    echo \"Build finish time: `date`\"\n    finish_time=`date +%s`\n    used_time=$((finish_time-start_time))\n    echo \"Build elapsed time: $((used_time/60))m $((used_time%60))s\"\n}\n\n#####################\n## test\n#####################\nfunction usage_test()\n{\n    echo \"Options for subcommand 'test':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -m|--modules      specify modules to test, split by ',',\"\n    echo \"                     e.g., \\\"pegasus_unit_test,dsn_runtime_tests,dsn_meta_state_tests\\\",\"\n    echo \"                     if not set, then run all tests\"\n    echo \"   -k|--keep_onebox  whether keep the onebox after the test[default false]\"\n    echo \"   --onebox_opts     update configs for onebox, e.g. key1=value1,key2=value2\"\n    echo \"   --test_opts       update configs for tests, e.g. key1=value1,key2=value2\"\n}\nfunction run_test()\n{\n    local test_modules=\"\"\n    local clear_flags=\"1\"\n    local enable_gcov=\"no\"\n    local all_tests=(\n      backup_restore_test\n      base_api_test\n      base_test\n      bulk_load_test\n      # TODO(wangdan): Since the hotspot detection depends on the perf-counters system which\n      # is being replaced with the new metrics system, its test will fail. Temporarily disable\n      # the test and re-enable it after the hotspot detection is migrated to the new metrics\n      # system.\n      # detect_hotspot_test\n      dsn_aio_test\n      dsn_block_service_test\n      dsn_client_test\n      dsn.failure_detector.tests\n      dsn_http_test\n      dsn_meta_state_tests\n      dsn.meta.test\n      dsn_nfs_test\n      # TODO(wangdan): Since builtin_counters (memused.virt and memused.res) for perf-counters\n      # have been removed and dsn_perf_counter_test depends on them, disable it.\n      # dsn_perf_counter_test\n      dsn_replica_backup_test\n      dsn_replica_bulk_load_test\n      dsn_replica_dup_test\n      dsn_replica_split_test\n      dsn.replica.test\n      dsn_replication_common_test\n      dsn.replication.simple_kv\n      dsn.rep_tests.simple_kv\n      dsn_runtime_tests\n      dsn_utils_tests\n      dsn.zookeeper.tests\n      partition_split_test\n      pegasus_geo_test\n      pegasus_rproxy_test\n      pegasus_unit_test\n      recovery_test\n      restore_test\n      throttle_test\n    )\n    local onebox_opts=\"\"\n    local test_opts=\"\"\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_test\n                exit 0\n                ;;\n            -m|--modules)\n                test_modules=$2\n                shift\n                ;;\n            -k|--keep_onebox)\n                clear_flags=\"\"\n                ;;\n            --enable_gcov)\n                enable_gcov=\"yes\"\n                ;;\n            --onebox_opts)\n                onebox_opts=$2\n                shift\n                ;;\n            --test_opts)\n                test_opts=$2\n                shift\n                ;;\n            *)\n                echo \"Error: unknown option \\\"$key\\\"\"\n                echo\n                usage_test\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    echo \"Test start time: `date`\"\n    start_time=`date +%s`\n\n    if [ ! -d \"$REPORT_DIR\" ]; then\n        mkdir -p $REPORT_DIR\n    fi\n\n    # Run all tests if none specified.\n    if [ \"$test_modules\" == \"\" ]; then\n        test_modules=$(IFS=,; echo \"${all_tests[*]}\")\n    fi\n    echo \"test_modules=$test_modules\"\n\n    for module in `echo $test_modules | sed 's/,/ /g'`; do\n        echo \"====================== run $module ==========================\"\n        # The tests which need start onebox.\n        local need_onebox_tests=(\n          backup_restore_test\n          base_api_test\n          bulk_load_test\n          detect_hotspot_test\n          partition_split_test\n          pegasus_geo_test\n          pegasus_rproxy_test\n          recovery_test\n          restore_test\n          throttle_test\n        )\n        # Restart onebox if needed.\n        if [[ \"${need_onebox_tests[@]}\" =~ \"${module}\" ]]; then\n            # Clean up onebox at first.\n            run_clear_onebox\n            master_count=3\n            # Update options if needed, this should be done before starting onebox to make new options take effect.\n            if [ \"${module}\" == \"recovery_test\" ]; then\n                master_count=1\n                # all test case in recovery_test just run one meta_server, so we should change it\n                fqdn=`hostname -f`\n                opts=\"server_list=$fqdn:34601;meta_state_service_type=meta_state_service_simple;distributed_lock_service_type=distributed_lock_service_simple\"\n            fi\n            if [ \"${module}\" == \"backup_restore_test\" ]; then\n                opts=\"cold_backup_disabled=false;cold_backup_checkpoint_reserve_minutes=0;cold_backup_root=onebox\"\n            fi\n            if [ \"${module}\" == \"restore_test\" ]; then\n                opts=\"cold_backup_disabled=false;cold_backup_checkpoint_reserve_minutes=0;cold_backup_root=onebox\"\n            fi\n            # Append onebox_opts if needed.\n            [ -z ${onebox_opts} ] || opts=\"${opts};${onebox_opts}\"\n            # Start onebox.\n            if ! run_start_onebox -m ${master_count} -w -c --opts ${opts}; then\n                echo \"ERROR: unable to continue on testing because starting onebox failed\"\n                exit 1\n            fi\n            # TODO(yingchun): remove it?\n            sed -i \"s/@LOCAL_HOSTNAME@/${LOCAL_HOSTNAME}/g\"  ${BUILD_LATEST_DIR}/src/server/test/config.ini\n        else\n            # Restart ZK in what ever case.\n            run_stop_zk\n            run_start_zk\n        fi\n\n        # Run server test.\n        pushd ${BUILD_LATEST_DIR}/bin/${module}\n        local function_tests=(\n\t      backup_restore_test\n\t      recovery_test\n\t      restore_test\n\t      base_api_test\n\t      throttle_test\n\t      bulk_load_test\n\t      detect_hotspot_test\n\t      partition_split_test\n        )\n        # function_tests need client used meta_server_list to connect\n        if [[ \"${function_tests[@]}\"  =~ \"${module}\" ]]; then\n          sed -i \"s/@LOCAL_HOSTNAME@/${LOCAL_HOSTNAME}/g\"  ./config.ini\n        fi\n        REPORT_DIR=${REPORT_DIR} TEST_BIN=${module} TEST_OPTS=${test_opts} ./run.sh\n        if [ $? != 0 ]; then\n            echo \"run test \\\"$module\\\" in `pwd` failed\"\n            exit 1\n        fi\n\n        # Clear onebox if needed.\n        if [[ \"${need_onebox_tests[@]}\"  =~ \"${test_modules}\" ]]; then\n            if [ \"$clear_flags\" == \"1\" ]; then\n                run_clear_onebox\n            fi\n        fi\n        popd\n    done\n\n    echo \"Test finish time: `date`\"\n    finish_time=`date +%s`\n    used_time=$((finish_time-start_time))\n    echo \"Test elapsed time: $((used_time/60))m $((used_time%60))s\"\n\n    # TODO(yingchun): make sure if gcov can be ran normally.\n    if [ \"$enable_gcov\" == \"yes\" ]; then\n        echo \"Generating gcov report...\"\n        cd $ROOT\n        mkdir -p \"$ROOT/gcov_report\"\n\n        echo \"Running gcovr to produce HTML code coverage report.\"\n        $BUILD_LATEST_DIR\n        gcovr --html --html-details -r $ROOT --object-directory=$BUILD_LATEST_DIR \\\n              -o $GCOV_DIR/index.html\n        if [ $? -ne 0 ]; then\n            exit 1\n        fi\n    fi\n}\n\n#####################\n## start_zk\n#####################\nfunction usage_start_zk()\n{\n    echo \"Options for subcommand 'start_zk':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -d|--install_dir <dir>\"\n    echo \"                     zookeeper install directory,\"\n    echo \"                     if not set, then default is './.zk_install'\"\n    echo \"   -p|--port <port>  listen port of zookeeper, default is 22181\"\n}\n\nfunction run_start_zk()\n{\n    # first we check the environment that zk need: java and nc command\n    # check java\n    type java >/dev/null 2>&1 || { echo >&2 \"start zk failed, need install jre...\"; exit 1;}\n\n    # check nc command\n    type nc >/dev/null 2>&1 || { echo >&2 \"start zk failed, need install netcat command...\"; exit 1;}\n\n    INSTALL_DIR=`pwd`/.zk_install\n    PORT=22181\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_start_zk\n                exit 0\n                ;;\n            -d|--install_dir)\n                INSTALL_DIR=$2\n                shift\n                ;;\n            -p|--port)\n                PORT=$2\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_start_zk\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ ! -d \"${INSTALL_DIR}/zookeeper-bin\" ]; then\n        echo \"zookeeper-bin cannot be found under ${INSTALL_DIR}, thus try to find an existing one\"\n\n        if [ -d \"zookeeper-bin\" ]; then\n            echo \"zookeeper-bin is found under current work dir `pwd`, just use this one\"\n\n            if ! mkdir -p \"${INSTALL_DIR}\"; then\n                echo \"ERROR: mkdir ${INSTALL_DIR} failed\"\n                exit 1\n            fi\n\n            # this zookeeper-bin must have been got from github action workflows, thus just\n            # move it to ${INSTALL_DIR} to prevent from downloading\n            mv zookeeper-bin ${INSTALL_DIR}/\n        fi\n    fi\n\n    INSTALL_DIR=\"$INSTALL_DIR\" PORT=\"$PORT\" $ROOT/admin_tools/start_zk.sh\n}\n\n#####################\n## stop_zk\n#####################\nfunction usage_stop_zk()\n{\n    echo \"Options for subcommand 'stop_zk':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -d|--install_dir <dir>\"\n    echo \"                     zookeeper install directory,\"\n    echo \"                     if not set, then default is './.zk_install'\"\n}\nfunction run_stop_zk()\n{\n    INSTALL_DIR=`pwd`/.zk_install\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_stop_zk\n                exit 0\n                ;;\n            -d|--install_dir)\n                INSTALL_DIR=$2\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_stop_zk\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    INSTALL_DIR=\"$INSTALL_DIR\" $ROOT/admin_tools/stop_zk.sh\n}\n\n#####################\n## clear_zk\n#####################\nfunction usage_clear_zk()\n{\n    echo \"Options for subcommand 'clear_zk':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -d|--install_dir <dir>\"\n    echo \"                     zookeeper install directory,\"\n    echo \"                     if not set, then default is './.zk_install'\"\n}\nfunction run_clear_zk()\n{\n    INSTALL_DIR=`pwd`/.zk_install\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_clear_zk\n                exit 0\n                ;;\n            -d|--install_dir)\n                INSTALL_DIR=$2\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_clear__zk\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    INSTALL_DIR=\"$INSTALL_DIR\" $ROOT/admin_tools/clear_zk.sh\n}\n\n#####################\n## start_onebox\n#####################\nfunction usage_start_onebox()\n{\n    echo \"Options for subcommand 'start_onebox':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -m|--meta_count <num>\"\n    echo \"                     meta server count, default is 3\"\n    echo \"   -r|--replica_count <num>\"\n    echo \"                     replica server count, default is 3\"\n    echo \"   -c|--collector\"\n    echo \"                     start the collector server, default not start\"\n    echo \"   -a|--app_name <str>\"\n    echo \"                     default app name, default is temp\"\n    echo \"   -p|--partition_count <num>\"\n    echo \"                     default app partition count, default is 8\"\n    echo \"   -w|--wait_healthy\"\n    echo \"                     wait cluster to become healthy, default not wait\"\n    echo \"   -s|--server_path <str>\"\n    echo \"                     server binary path, default is ${BUILD_LATEST_DIR}/output/bin/pegasus_server\"\n    echo \"   --config_path\"\n    echo \"                     specify the config template path, default is ./src/server/config.min.ini in non-production env\"\n    echo \"                                                                  ./src/server/config.ini in production env\"\n    echo \"   --use_product_config\"\n    echo \"                     use the product config template\"\n    echo \"   --hdfs_service_args\"\n    echo \"                     set the 'args' value of section '[block_service.hdfs_service]', it's a space separated HDFS namenode host:port and path string, for example: '127.0.0.1:8020 /pegasus'. Default is empty\"\n    echo \"   --opts\"\n    echo \"                     update configs before start onebox, the configs are in the form of 'key1=value1,key2=value2'\"\n}\n\nfunction run_start_onebox()\n{\n    META_COUNT=3\n    REPLICA_COUNT=3\n    COLLECTOR_COUNT=0\n    APP_NAME=temp\n    PARTITION_COUNT=8\n    WAIT_HEALTHY=false\n    SERVER_PATH=${BUILD_LATEST_DIR}/output/bin/pegasus_server\n    CONFIG_FILE=\"\"\n    USE_PRODUCT_CONFIG=false\n    HDFS_SERVICE_ARGS=\"\"\n    OPTS=\"\"\n\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_start_onebox\n                exit 0\n                ;;\n            -m|--meta_count)\n                META_COUNT=\"$2\"\n                shift\n                ;;\n            -r|--replica_count)\n                REPLICA_COUNT=\"$2\"\n                shift\n                ;;\n            -c|--collector)\n                COLLECTOR_COUNT=1\n                ;;\n            -a|--app_name)\n                APP_NAME=\"$2\"\n                shift\n                ;;\n            -p|--partition_count)\n                PARTITION_COUNT=\"$2\"\n                shift\n                ;;\n            -w|--wait_healthy)\n                WAIT_HEALTHY=true\n                ;;\n            -s|--server_path)\n                SERVER_PATH=\"$2\"\n                shift\n                ;;\n            --config_path)\n                CONFIG_FILE=\"$2\"\n                shift\n                ;;\n            --use_product_config)\n                USE_PRODUCT_CONFIG=true\n                ;;\n            --hdfs_service_args)\n                HDFS_SERVICE_ARGS=\"$2 $3\"\n                shift\n                shift\n                ;;\n            --opts)\n                OPTS=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_start_onebox\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ ! -f ${SERVER_PATH}/pegasus_server ]; then\n        echo \"ERROR: file ${SERVER_PATH}/pegasus_server not exist\"\n        exit 1\n    fi\n    if ps -ef | grep '/pegasus_server config.ini' | grep -E -q 'app_list meta|app_list replica|app_list collector'; then\n        echo \"ERROR: some onebox processes are running, start failed\"\n        exit 1\n    fi\n    ln -s -f \"${SERVER_PATH}/pegasus_server\" \"${ROOT}\"\n\n    if ! run_start_zk; then\n        echo \"ERROR: unable to setup onebox because zookeeper can not be started\"\n        exit 1\n    fi\n\n    source \"${ROOT}\"/admin_tools/config_hdfs.sh\n    if [ $USE_PRODUCT_CONFIG == \"true\" ]; then\n        [ -z \"${CONFIG_FILE}\" ] && CONFIG_FILE=${ROOT}/src/server/config.ini\n        [ ! -f \"${CONFIG_FILE}\" ] && { echo \"${CONFIG_FILE} is not exist\"; exit 1; }\n        cp -f ${CONFIG_FILE} ${ROOT}/config-server.ini\n        sed -i 's/\\<34601\\>/@META_PORT@/' ${ROOT}/config-server.ini\n        sed -i 's/\\<34801\\>/@REPLICA_PORT@/' ${ROOT}/config-server.ini\n        sed -i 's/%{cluster.name}/onebox/g' ${ROOT}/config-server.ini\n        sed -i 's/%{network.interface}/eth0/g' ${ROOT}/config-server.ini\n        sed -i 's/%{email.address}//g' ${ROOT}/config-server.ini\n        sed -i 's/%{app.dir}/.\\/data/g' ${ROOT}/config-server.ini\n        sed -i 's/%{slog.dir}//g' ${ROOT}/config-server.ini\n        sed -i 's/%{data.dirs}//g' ${ROOT}/config-server.ini\n        sed -i 's@%{home.dir}@'\"$HOME\"'@g' ${ROOT}/config-server.ini\n        sed -i 's@%{hdfs_service_args}@'\"${HDFS_SERVICE_ARGS}\"'@g' ${ROOT}/config-server.ini\n        for i in $(seq ${META_COUNT})\n        do\n            meta_port=$((34600+i))\n            if [ $i -eq 1 ]; then\n                meta_list=\"${LOCAL_HOSTNAME}:$meta_port\"\n            else\n                meta_list=\"$meta_list,${LOCAL_HOSTNAME}:$meta_port\"\n            fi\n        done\n        sed -i 's/%{meta.server.list}/'\"$meta_list\"'/g' ${ROOT}/config-server.ini\n        sed -i 's/%{zk.server.list}/'\"${LOCAL_HOSTNAME}\"':22181/g' ${ROOT}/config-server.ini\n        sed -i 's/app_name = .*$/app_name = '\"$APP_NAME\"'/' ${ROOT}/config-server.ini\n        sed -i 's/partition_count = .*$/partition_count = '\"$PARTITION_COUNT\"'/' ${ROOT}/config-server.ini\n    else\n        [ -z \"${CONFIG_FILE}\" ] && CONFIG_FILE=${ROOT}/src/server/config.min.ini\n        [ ! -f \"${CONFIG_FILE}\" ] && { echo \"${CONFIG_FILE} is not exist\"; exit 1; }\n        sed \"s/@LOCAL_HOSTNAME@/${LOCAL_HOSTNAME}/g;s/@APP_NAME@/${APP_NAME}/g;s/@PARTITION_COUNT@/${PARTITION_COUNT}/g\" \\\n            ${CONFIG_FILE} >${ROOT}/config-server.ini\n    fi\n\n    OPTS=`echo $OPTS | xargs`\n    config_kvs=(${OPTS//;/ })\n    for config_kv in ${config_kvs[@]}; do\n        config_kv=`echo $config_kv | xargs`\n        kv=(${config_kv//=/ })\n        if [ ! ${#kv[*]} -eq 2 ]; then\n            echo \"Invalid --opts arguments!\"\n            exit 1\n        fi\n        sed -i '/^\\s*'\"${kv[0]}\"'/c '\"${kv[0]}\"' = '\"${kv[1]}\" ${ROOT}/config-server.ini\n    done\n\n    echo \"starting server\"\n    ld_library_path=${SERVER_PATH}:$LD_LIBRARY_PATH\n    export LD_LIBRARY_PATH=$ld_library_path\n    mkdir -p onebox\n    cd onebox\n    for i in $(seq ${META_COUNT})\n    do\n        meta_port=$((34600+i))\n        prometheus_port=$((9091+i))\n        mkdir -p meta$i;\n        cd meta$i\n        ln -s -f ${SERVER_PATH}/pegasus_server pegasus_server\n        sed \"s/@META_PORT@/$meta_port/;s/@REPLICA_PORT@/34800/;s/@PROMETHEUS_PORT@/$prometheus_port/\" ${ROOT}/config-server.ini >config.ini\n        $PWD/pegasus_server config.ini -app_list meta &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n    done\n    for j in $(seq ${REPLICA_COUNT})\n    do\n        prometheus_port=$((9091+${META_COUNT}+j))\n        replica_port=$((34800+j))\n        mkdir -p replica$j\n        cd replica$j\n        ln -s -f ${SERVER_PATH}/pegasus_server pegasus_server\n        sed \"s/@META_PORT@/34600/;s/@REPLICA_PORT@/$replica_port/;s/@PROMETHEUS_PORT@/$prometheus_port/\" ${ROOT}/config-server.ini >config.ini\n        $PWD/pegasus_server config.ini -app_list replica &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n    done\n    if [ $COLLECTOR_COUNT -eq 1 ]\n    then\n        mkdir -p collector\n        cd collector\n        ln -s -f ${SERVER_PATH}/pegasus_server pegasus_server\n        sed \"s/@META_PORT@/34600/;s/@REPLICA_PORT@/34800/;s/@PROMETHEUS_PORT@/9091/\" ${ROOT}/config-server.ini >config.ini\n        $PWD/pegasus_server config.ini -app_list collector &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n    fi\n\n    if [ $WAIT_HEALTHY == \"true\" ]; then\n        cd $ROOT\n        echo \"Wait cluster to become healthy...\"\n        sleeped=0\n        while true; do\n            sleep 1\n            sleeped=$((sleeped+1))\n            echo \"Sleeped for $sleeped seconds\"\n            unhealthy_count=`echo \"ls -d\" | ./run.sh shell | awk 'f{ if(NF<7){f=0} else if($3!=$4){print} } / fully_healthy /{print;f=1}' | wc -l`\n            if [ $unhealthy_count -eq 1 ]; then\n                echo \"Cluster becomes healthy.\"\n                break\n            fi\n        done\n    fi\n}\n\n#####################\n## stop_onebox\n#####################\nfunction usage_stop_onebox()\n{\n    echo \"Options for subcommand 'stop_onebox':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_stop_onebox()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_stop_onebox\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_stop_onebox\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    ps -ef | grep '/pegasus_server config.ini' | grep -E 'app_list meta|app_list replica|app_list collector' | awk '{print $2}' | xargs kill &>/dev/null || true\n}\n\n#####################\n## list_onebox\n#####################\nfunction usage_list_onebox()\n{\n    echo \"Options for subcommand 'list_onebox':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_list_onebox()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_list_onebox\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_list_onebox\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    ps -ef | grep '/pegasus_server config.ini' | grep -E 'app_list meta|app_list replica|app_list collector' | sort -k11\n}\n\n#####################\n## clear_onebox\n#####################\nfunction usage_clear_onebox()\n{\n    echo \"Options for subcommand 'clear_onebox':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_clear_onebox()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_clear_onebox\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_clear_onebox\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    run_stop_onebox\n    run_clear_zk\n    rm -rf onebox *.log *.data config-*.ini &>/dev/null\n    sleep 1\n}\n\n#####################\n## start_onebox_instance\n#####################\nfunction usage_start_onebox_instance()\n{\n    echo \"Options for subcommand 'start_onebox_instance':\"\n    echo \"   -h|--help              print the help info\"\n    echo \"   -m|--meta_id <num>     start meta server with id\"\n    echo \"   -r|--replica_id <num>  start replica server with id\"\n    echo \"   -c|--collector         start collector server\"\n}\n\nfunction run_start_onebox_instance()\n{\n    META_ID=0\n    REPLICA_ID=0\n    COLLECTOR_ID=0\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_start_onebox_instance\n                exit 0\n                ;;\n            -m|--meta_id)\n                META_ID=\"$2\"\n                shift\n                ;;\n            -r|--replica_id)\n                REPLICA_ID=\"$2\"\n                shift\n                ;;\n            -c|--collector)\n                COLLECTOR_ID=1\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_start_onebox_instance\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    source \"${ROOT}\"/admin_tools/config_hdfs.sh\n    if [ $META_ID = \"0\" -a $REPLICA_ID = \"0\" -a $COLLECTOR_ID = \"0\" ]; then\n        echo \"ERROR: no meta_id or replica_id or collector set\"\n        exit 1\n    fi\n    if [ $META_ID != \"0\" ]; then\n        dir=onebox/meta$META_ID\n        if [ ! -d $dir ]; then\n            echo \"ERROR: invalid meta_id\"\n            exit 1\n        fi\n        if ps -ef | grep \"/meta$META_ID/pegasus_server config.ini\" | grep \"app_list meta\" ; then\n            echo \"INFO: meta@$META_ID already running\"\n            exit 1\n        fi\n        cd $dir\n        $PWD/pegasus_server config.ini -app_list meta &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n        echo \"INFO: meta@$META_ID started\"\n    fi\n    if [ $REPLICA_ID != \"0\" ]; then\n        dir=onebox/replica$REPLICA_ID\n        if [ ! -d $dir ]; then\n            echo \"ERROR: invalid replica_id\"\n            exit 1\n        fi\n        if ps -ef | grep \"/replica$REPLICA_ID/pegasus_server config.ini\" | grep \"app_list replica\" ; then\n            echo \"INFO: replica@$REPLICA_ID already running\"\n            exit 1\n        fi\n        cd $dir\n        $PWD/pegasus_server config.ini -app_list replica &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n        echo \"INFO: replica@$REPLICA_ID started\"\n    fi\n    if [ $COLLECTOR_ID != \"0\" ]; then\n        dir=onebox/collector\n        if [ ! -d $dir ]; then\n            echo \"ERROR: collector dir $dir not exist\"\n            exit 1\n        fi\n        if ps -ef | grep \"/collector/pegasus_server config.ini\" | grep \"app_list collector\" ; then\n            echo \"INFO: collector already running\"\n            exit 1\n        fi\n        cd $dir\n        $PWD/pegasus_server config.ini -app_list collector &>result &\n        PID=$!\n        ps -ef | grep '/pegasus_server config.ini' | grep \"\\<$PID\\>\"\n        cd ..\n        echo \"INFO: collector started\"\n    fi\n}\n\n#####################\n## stop_onebox_instance\n#####################\nfunction usage_stop_onebox_instance()\n{\n    echo \"Options for subcommand 'stop_onebox_instance':\"\n    echo \"   -h|--help              print the help info\"\n    echo \"   -m|--meta_id <num>     stop meta server with id\"\n    echo \"   -r|--replica_id <num>  stop replica server with id\"\n    echo \"   -c|--collector         stop collector server\"\n}\n\nfunction run_stop_onebox_instance()\n{\n    META_ID=0\n    REPLICA_ID=0\n    COLLECTOR_ID=0\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_stop_onebox_instance\n                exit 0\n                ;;\n            -m|--meta_id)\n                META_ID=\"$2\"\n                shift\n                ;;\n            -r|--replica_id)\n                REPLICA_ID=\"$2\"\n                shift\n                ;;\n            -c|--collector)\n                COLLECTOR_ID=1\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_stop_onebox_instance\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    if [ $META_ID = \"0\" -a $REPLICA_ID = \"0\" -a $COLLECTOR_ID = \"0\" ]; then\n        echo \"ERROR: no meta_id or replica_id or collector set\"\n        exit 1\n    fi\n    if [ $META_ID != \"0\" ]; then\n        dir=onebox/meta$META_ID\n        if [ ! -d $dir ]; then\n            echo \"ERROR: invalid meta_id\"\n            exit 1\n        fi\n        if ! ps -ef | grep \"/meta$META_ID/pegasus_server config.ini\" | grep \"app_list meta\" ; then\n            echo \"INFO: meta@$META_ID is not running\"\n            exit 1\n        fi\n        ps -ef | grep \"/meta$META_ID/pegasus_server config.ini\" | grep \"app_list meta\" | awk '{print $2}' | xargs kill &>/dev/null || true\n        echo \"INFO: meta@$META_ID stopped\"\n    fi\n    if [ $REPLICA_ID != \"0\" ]; then\n        dir=onebox/replica$REPLICA_ID\n        if [ ! -d $dir ]; then\n            echo \"ERROR: invalid replica_id\"\n            exit 1\n        fi\n        if ! ps -ef | grep \"/replica$REPLICA_ID/pegasus_server config.ini\" | grep \"app_list replica\" ; then\n            echo \"INFO: replica@$REPLICA_ID is not running\"\n            exit 1\n        fi\n        ps -ef | grep \"/replica$REPLICA_ID/pegasus_server config.ini\" | grep \"app_list replica\" | awk '{print $2}' | xargs kill &>/dev/null || true\n        echo \"INFO: replica@$REPLICA_ID stopped\"\n    fi\n    if [ $COLLECTOR_ID != \"0\" ]; then\n        if ! ps -ef | grep \"/collector/pegasus_server config.ini\" | grep \"app_list collector\" ; then\n            echo \"INFO: collector is not running\"\n            exit 1\n        fi\n        ps -ef | grep \"/collector/pegasus_server config.ini\" | grep \"app_list collector\" | awk '{print $2}' | xargs kill &>/dev/null || true\n        echo \"INFO: collector stopped\"\n    fi\n}\n\n#####################\n## restart_onebox_instance\n#####################\nfunction usage_restart_onebox_instance()\n{\n    echo \"Options for subcommand 'restart_onebox_instance':\"\n    echo \"   -h|--help              print the help info\"\n    echo \"   -m|--meta_id <num>     restart meta server with id\"\n    echo \"   -r|--replica_id <num>  restart replica server with id\"\n    echo \"   -c|--collector         restart collector server\"\n    echo \"   -s|--sleep <num>       sleep time in seconds between stop and start, default is 1\"\n}\n\nfunction run_restart_onebox_instance()\n{\n    META_ID=0\n    REPLICA_ID=0\n    COLLECTOR_OPT=\"\"\n    SLEEP=1\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_restart_onebox_instance\n                exit 0\n                ;;\n            -m|--meta_id)\n                META_ID=\"$2\"\n                shift\n                ;;\n            -r|--replica_id)\n                REPLICA_ID=\"$2\"\n                shift\n                ;;\n            -c|--collector)\n                COLLECTOR_OPT=\"-c\"\n                shift\n                ;;\n            -s|--sleep)\n                SLEEP=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_restart_onebox_instance\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    if [ $META_ID = \"0\" -a $REPLICA_ID = \"0\" -a \"x$COLLECTOR_OPT\" = \"x\" ]; then\n        echo \"ERROR: no meta_id or replica_id or collector set\"\n        exit 1\n    fi\n    run_stop_onebox_instance -m $META_ID -r $REPLICA_ID $COLLECTOR_OPT\n    echo \"sleep $SLEEP\"\n    sleep $SLEEP\n    run_start_onebox_instance -m $META_ID -r $REPLICA_ID $COLLECTOR_OPT\n}\n\n#####################\n## start_kill_test\n#####################\nfunction usage_start_kill_test()\n{\n    echo \"Options for subcommand 'start_kill_test':\"\n    echo \"   -h|--help         print the help info\"\n    echo \"   -m|--meta_count <num>\"\n    echo \"                     meta server count, default is 3\"\n    echo \"   -r|--replica_count <num>\"\n    echo \"                     replica server count, default is 5\"\n    echo \"   -a|--app_name <str>\"\n    echo \"                     app name, default is temp\"\n    echo \"   -p|--partition_count <num>\"\n    echo \"                     app partition count, default is 16\"\n    echo \"   -t|--kill_type <str>\"\n    echo \"                     kill type: meta | replica | all, default is all\"\n    echo \"   -s|--sleep_time <num>\"\n    echo \"                     max sleep time before next kill, default is 10\"\n    echo \"                     actual sleep time will be a random value in range of [1, sleep_time]\"\n    echo \"   -w|--worker_count <num>\"\n    echo \"                     worker count for concurrently setting value, default is 10\"\n    echo \"   -k|--killer_type <str>\"\n    echo \"                     killer type: process_killer | partition_killer, default is process_killer\"\n}\n\nfunction run_start_kill_test()\n{\n    META_COUNT=3\n    REPLICA_COUNT=5\n    APP_NAME=temp\n    PARTITION_COUNT=16\n    KILL_TYPE=all\n    SLEEP_TIME=10\n    THREAD_COUNT=10\n    KILLER_TYPE=process_killer\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_start_kill_test\n                exit 0\n                ;;\n            -m|--meta_count)\n                META_COUNT=\"$2\"\n                shift\n                ;;\n            -r|--replica_count)\n                REPLICA_COUNT=\"$2\"\n                shift\n                ;;\n            -a|--app_name)\n                APP_NAME=\"$2\"\n                shift\n                ;;\n            -p|--partition_count)\n                PARTITION_COUNT=\"$2\"\n                shift\n                ;;\n            -t|--kill_type)\n                KILL_TYPE=\"$2\"\n                shift\n                ;;\n            -s|--sleep_time)\n                SLEEP_TIME=\"$2\"\n                shift\n                ;;\n            -w|--worker_count)\n                THREAD_COUNT=\"$2\"\n                shift\n                ;;\n            -k|--killer_type)\n                KILLER_TYPE=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_start_kill_test\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    run_start_onebox -m $META_COUNT -r $REPLICA_COUNT -a $APP_NAME -p $PARTITION_COUNT\n\n    cd $ROOT\n    CONFIG=config-kill-test.ini\n\n    sed \"s/@LOCAL_HOSTNAME@/${LOCAL_HOSTNAME}/g;\\\ns/@META_COUNT@/${META_COUNT}/g;\\\ns/@REPLICA_COUNT@/${REPLICA_COUNT}/g;\\\ns/@ZK_COUNT@/1/g;s/@APP_NAME@/${APP_NAME}/g;\\\ns/@SET_THREAD_COUNT@/${THREAD_COUNT}/g;\\\ns/@GET_THREAD_COUNT@/${THREAD_COUNT}/g;\\\ns+@ONEBOX_RUN_PATH@+`pwd`+g\" ${ROOT}/src/test/kill_test/config.ini >$CONFIG\n\n    # start verifier\n    mkdir -p onebox/verifier && cd onebox/verifier\n    ln -s -f ${BUILD_LATEST_DIR}/output/bin/pegasus_kill_test/pegasus_kill_test\n    ln -s -f ${ROOT}/$CONFIG config.ini\n    echo \"$PWD/pegasus_kill_test config.ini verifier &>/dev/null &\"\n    $PWD/pegasus_kill_test config.ini verifier &>/dev/null &\n    PID=$!\n    ps -ef | grep '/pegasus_kill_test config.ini verifier' | grep \"\\<$PID\\>\"\n    sleep 0.2\n    cd ${ROOT}\n\n    #start killer\n    mkdir -p onebox/killer && cd onebox/killer\n    ln -s -f ${BUILD_LATEST_DIR}/output/bin/pegasus_kill_test/pegasus_kill_test\n    ln -s -f ${ROOT}/$CONFIG config.ini\n    echo \"$PWD/pegasus_kill_test config.ini $KILLER_TYPE &>/dev/null &\"\n    $PWD/pegasus_kill_test config.ini $KILLER_TYPE &>/dev/null &\n    PID=$!\n    ps -ef | grep '/pegasus_kill_test config.ini p*' | grep \"\\<$PID\\>\"\n    sleep 0.2\n    cd ${ROOT}\n    run_list_kill_test\n}\n\n#####################\n## stop_kill_test\n#####################\nfunction usage_stop_kill_test()\n{\n    echo \"Options for subcommand 'stop_kill_test':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_stop_kill_test()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_stop_kill_test\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_stop_kill_test\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    ps -ef | grep '/pegasus_kill_test ' | awk '{print $2}' | xargs kill &>/dev/null || true\n    run_stop_onebox\n}\n\n#####################\n## list_kill_test\n#####################\nfunction usage_list_kill_test()\n{\n    echo \"Options for subcommand 'list_kill_test':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_list_kill_test()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_list_kill_test\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_list_kill_test\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    echo \"------------------------------\"\n    run_list_onebox\n    ps -ef | grep '/pegasus_kill_test ' | grep -v grep\n    echo \"------------------------------\"\n    echo \"Server dir: ./onebox\"\n    echo \"------------------------------\"\n}\n\n#####################\n## clear_kill_test\n#####################\nfunction usage_clear_kill_test()\n{\n    echo \"Options for subcommand 'clear_kill_test':\"\n    echo \"   -h|--help         print the help info\"\n}\n\nfunction run_clear_kill_test()\n{\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_clear_kill_test\n                exit 0\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_clear_kill_test\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    run_stop_kill_test\n    run_clear_onebox\n    rm -rf kill_history.txt *.data config-*.ini &>/dev/null\n}\n\n#####################\n## bench\n#####################\nfunction usage_bench()\n{\n    echo \"Options for subcommand 'bench':\"\n    echo \"   -h|--help                 print the help info\"\n    echo \"   --type                    benchmark type, supporting:\"\n    echo \"                             fillrandom_pegasus       --pegasus write N random values with random keys list\"\n    echo \"                             readrandom_pegasus       --pegasus read N times with random keys list\"\n    echo \"                             deleterandom_pegasus     --pegasus delete N entries with random keys list\"\n    echo \"                             multisetrandom_pegasus   --pegasus write N random values with multi_count hash keys list\"\n    echo \"                             multigetrandom_pegasus   --pegasus read N random keys with multi_count hash list\"\n    echo \"                             Comma-separated list of operations is going to run in the specified order.\"\n    echo \"                             default is 'fillrandom_pegasus,readrandom_pegasus,deleterandom_pegasus'\"\n    echo \"   --num <num>               number of key/value pairs, default is 10000\"\n    echo \"   --cluster <str>           cluster meta lists, default is '127.0.0.1:34601,127.0.0.1:34602,127.0.0.1:34603'\"\n    echo \"   --app_name <str>          app name, default is 'temp'\"\n    echo \"   --thread_num <num>        number of threads, default is 1\"\n    echo \"   --hashkey_size <num>      hashkey size in bytes, default is 16\"\n    echo \"   --sortkey_size <num>      sortkey size in bytes, default is 16\"\n    echo \"   --value_size <num>        value size in bytes, default is 100\"\n    echo \"   --timeout <num>           timeout in milliseconds, default is 1000\"\n    echo \"   --seed <num>              seed base for random number generator, When 0 it is specified as 1000. default is 1000\"\n    echo \"   --multi_count <num>       values count of the same hashkey, used by multi_set/multi_get, default is 100\"\n}\n\nfunction fill_bench_config() {\n    sed -i \"s/@TYPE@/$TYPE/g\" ./config-bench.ini\n    sed -i \"s/@NUM@/$NUM/g\" ./config-bench.ini\n    sed -i \"s/@CLUSTER@/$CLUSTER/g\" ./config-bench.ini\n    sed -i \"s/@APP@/$APP/g\" ./config-bench.ini\n    sed -i \"s/@THREAD@/$THREAD/g\" ./config-bench.ini\n    sed -i \"s/@HASHKEY_SIZE@/$HASHKEY_SIZE/g\" ./config-bench.ini\n    sed -i \"s/@SORTKEY_SIZE@/$SORTKEY_SIZE/g\" ./config-bench.ini\n    sed -i \"s/@VALUE_SIZE@/$VALUE_SIZE/g\" ./config-bench.ini\n    sed -i \"s/@TIMEOUT_MS@/$TIMEOUT_MS/g\" ./config-bench.ini\n    sed -i \"s/@SEED@/$SEED/g\" ./config-bench.ini\n    sed -i \"s/@MULTI_COUNT@/$MULTI_COUNT/g\" ./config-bench.ini\n}\n\nfunction run_bench()\n{\n    TYPE=fillrandom_pegasus,readrandom_pegasus,deleterandom_pegasus\n    NUM=10000\n    CLUSTER=127.0.0.1:34601,127.0.0.1:34602,127.0.0.1:34603\n    APP=temp\n    THREAD=1\n    HASHKEY_SIZE=16\n    SORTKEY_SIZE=16\n    VALUE_SIZE=100\n    TIMEOUT_MS=1000\n    SEED=1000\n    MULTI_COUNT=100\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_bench\n                exit 0\n                ;;\n            --type)\n                TYPE=\"$2\"\n                shift\n                ;;\n            --num)\n                NUM=\"$2\"\n                shift\n                ;;\n            --cluster)\n                CLUSTER=\"$2\"\n                shift\n                ;;\n            --app_name)\n                APP=\"$2\"\n                shift\n                ;;\n            --thread_num)\n                THREAD=\"$2\"\n                shift\n                ;;\n            --hashkey_size)\n                HASHKEY_SIZE=\"$2\"\n                shift\n                ;;\n            --sortkey_size)\n                SORTKEY_SIZE=\"$2\"\n                shift\n                ;;\n            --value_size)\n                VALUE_SIZE=\"$2\"\n                shift\n                ;;\n            --timeout)\n                TIMEOUT_MS=\"$2\"\n                shift\n                ;;\n            --seed)\n                SEED=\"$2\"\n                shift\n                ;;\n            --multi_count)\n                MULTI_COUNT=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_bench\n                exit 1\n                ;;\n        esac\n        shift\n    done\n    cd ${ROOT}\n    if [ -f ${ROOT}/bin/pegasus_bench/pegasus_bench ]; then\n        # The pegasus_bench was packaged by pack_tools, to be used on production environment.\n        ln -s -f ${ROOT}/bin/pegasus_bench/pegasus_bench\n        cp -a ${ROOT}/bin/pegasus_bench/config.ini ./config-bench.ini\n    elif [ -f ${BUILD_LATEST_DIR}/output/bin/pegasus_bench/pegasus_bench ]; then\n        # The pegasus_bench was built locally, to be used for test on development environment.\n        ln -s -f ${BUILD_LATEST_DIR}/output/bin/pegasus_bench/pegasus_bench\n        cp -a ${BUILD_LATEST_DIR}/output/bin/pegasus_bench/config.ini ./config-bench.ini\n    else\n        echo \"ERROR: pegasus_bench could not be found\"\n        exit 1\n    fi\n    fill_bench_config\n    ./pegasus_bench ./config-bench.ini\n    rm -f ./config-bench.ini\n}\n\n#####################\n## shell\n#####################\nfunction usage_shell()\n{\n    echo \"Options for subcommand 'shell':\"\n    echo \"   -h|--help            print the help info\"\n    echo \"   -c|--config <path>   config file path, default './config-shell.ini.{PID}'\"\n    echo \"   --cluster <str>      cluster meta lists, default '127.0.0.1:34601,127.0.0.1:34602,127.0.0.1:34603'\"\n    echo \"   -n <cluster-name>    cluster name. Will try to get a cluster ip_list\"\n    echo \"                        from your minos config (\\$MINOS2_CONFIG_FILE or \\$MINOS_CONFIG_FILE) or\"\n    echo \"                        from [uri-resolve.dsn://<cluster-name>] of your config-file\"\n}\n\nfunction run_shell()\n{\n    CONFIG=${ROOT}/config-shell.ini.$PID\n    CONFIG_SPECIFIED=0\n    CLUSTER=127.0.0.1:34601,127.0.0.1:34602,127.0.0.1:34603\n    CLUSTER_SPECIFIED=0\n    CLUSTER_NAME=onebox\n    CLUSTER_NAME_SPECIFIED=0\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_shell\n                exit 0\n                ;;\n            -c|--config)\n                CONFIG=\"$2\"\n                CONFIG_SPECIFIED=1\n                shift\n                ;;\n            -m|--cluster)\n                CLUSTER=\"$2\"\n                CLUSTER_SPECIFIED=1\n                shift\n                ;;\n            -n|--cluster_name)\n                CLUSTER_NAME=\"$2\"\n                CLUSTER_NAME_SPECIFIED=1\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_shell\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ ${CLUSTER_SPECIFIED} -eq 1 -a ${CLUSTER_NAME_SPECIFIED} -eq 1 ]; then\n        echo \"ERROR: can not specify both cluster and cluster_name at the same time\"\n        echo\n        usage_shell\n        exit 1\n    fi\n\n    if [ ${CLUSTER_SPECIFIED} -eq 1 ]; then\n        CLUSTER_NAME=\"unknown\"\n    fi\n\n    if [ $CLUSTER_NAME_SPECIFIED -eq 1 ]; then\n        meta_section=\"/tmp/minos.config.cluster.meta.section.$UID\"\n        if [ ! -z \"$MINOS2_CONFIG_FILE\" ]; then\n            minos2_config_file=$(dirname $MINOS2_CONFIG_FILE)/xiaomi-config/conf/pegasus/pegasus-${CLUSTER_NAME}.yaml\n        fi\n        if [ ! -z \"$MINOS_CONFIG_FILE\" ]; then\n            minos_config_file=$(dirname $MINOS_CONFIG_FILE)/xiaomi-config/conf/pegasus/pegasus-${CLUSTER_NAME}.cfg\n        fi\n\n        if [ ! -z \"$MINOS2_CONFIG_FILE\" -a -f \"$minos2_config_file\" ]; then\n            meta_section_start=$(grep -n \"^ *meta:\" $minos2_config_file | head -1 | cut -d\":\" -f 1)\n            meta_section_end=$(grep -n \"^ *replica:\" $minos2_config_file | head -1 | cut -d\":\" -f 1)\n            sed -n \"${meta_section_start},${meta_section_end}p\" $minos2_config_file > $meta_section\n            if [ $? -ne 0 ]; then\n                echo \"ERROR: write $minos2_config_file meta section to $meta_section failed\"\n                exit 1\n            else\n                base_port=$(grep \"^ *base *:\" $meta_section | cut -d\":\" -f2)\n                hosts_list=$(grep \"^ *- *[0-9]*\" $meta_section | grep -oh \"[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\")\n                config_file=$minos2_config_file\n            fi\n        elif [ ! -z \"$MINOS_CONFIG_FILE\" -a -f \"$minos_config_file\" ]; then\n            meta_section_start=$(grep -n \"\\[meta\" $minos_config_file | head -1 | cut -d\":\" -f 1)\n            meta_section_end=$(grep -n \"\\[replica\" $minos_config_file | head -1 | cut -d\":\" -f 1)\n            sed -n \"${meta_section_start},${meta_section_end}p\" $minos_config_file > $meta_section\n            if [ $? -ne 0 ]; then\n                echo \"ERROR: write $minos_config_file meta section to $meta_section failed\"\n                exit 1\n            else\n                base_port=$(grep \"^ *base_port *=\" $meta_section | cut -d\"=\" -f2)\n                hosts_list=$(grep \"^ *host\\.[0-9]*\" $meta_section | grep -oh \"[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\")\n                config_file=$minos_config_file\n            fi\n        else\n            echo \"ERROR: can't find minos config file for $CLUSTER_NAME, please check env \\$MINOS2_CONFIG_FILE or \\$MINOS_CONFIG_FILE\"\n            exit 1\n        fi\n\n        if [ ! -z \"$base_port\" ] && [ ! -z \"$hosts_list\" ]; then\n            meta_list=()\n            for h in $hosts_list; do\n                meta_list+=($h\":\"$[ $base_port + 1 ])\n            done\n            OLD_IFS=\"$IFS\"\n            IFS=\",\" && CLUSTER=\"${meta_list[*]}\" && IFS=\"$OLD_IFS\"\n            echo \"INFO: parse meta_list from $config_file\"\n        else\n            echo \"ERROR: parse meta_list from $config_file failed\"\n            exit 1\n        fi\n    fi\n\n    if [ ${CONFIG_SPECIFIED} -eq 0 ]; then\n        sed \"s/@CLUSTER_NAME@/$CLUSTER_NAME/g;s/@CLUSTER_ADDRESS@/$CLUSTER/g\" ${ROOT}/src/shell/config.ini >${CONFIG}\n    fi\n\n    cd ${ROOT}\n    if [ -f ${ROOT}/bin/pegasus_shell/pegasus_shell ]; then\n        # The pegasus_shell was packaged by pack_tools, to be used on production environment.\n        if test ! -f ./pegasus_shell; then\n            ln -s -f ${ROOT}/bin/pegasus_shell/pegasus_shell\n        fi\n    elif [ -f ${BUILD_LATEST_DIR}/output/bin/pegasus_shell/pegasus_shell ]; then\n        # The pegasus_shell was built locally, to be used for test on development environment.\n        ln -s -f ${BUILD_LATEST_DIR}/output/bin/pegasus_shell/pegasus_shell\n    else\n        echo \"ERROR: pegasus_shell could not be found\"\n        exit 1\n    fi\n    ./pegasus_shell ${CONFIG} $CLUSTER_NAME\n    # because pegasus shell will catch 'Ctrl-C' signal, so the following commands will be executed\n    # even user inputs 'Ctrl-C', so that the temporary config file will be cleared when exit shell.\n    # however, if it is the specified config file, do not delete it.\n    if [ ${CONFIG_SPECIFIED} -eq 0 ]; then\n        rm -f ${CONFIG}\n    fi\n}\n\n#####################\n## migrate_node\n#####################\nfunction usage_migrate_node()\n{\n    echo \"Options for subcommand 'migrate_node':\"\n    echo \"   -h|--help            print the help info\"\n    echo \"   -c|--cluster <str>   cluster meta lists\"\n    echo \"   -f|--config <str>    shell config path\"\n    echo \"   -n|--node <str>      the node to migrate primary replicas out, should be ip:port\"\n    echo \"   -a|--app <str>       the app to migrate primary replicas out, if not set, means migrate all apps\"\n    echo \"   -t|--type <str>      type: test or run, default is test\"\n}\n\nfunction run_migrate_node()\n{\n    CLUSTER=\"\"\n    CONFIG=\"\"\n    NODE=\"\"\n    APP=\"*\"\n    TYPE=\"test\"\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_migrate_node\n                exit 0\n                ;;\n            -c|--cluster)\n                CLUSTER=\"$2\"\n                shift\n                ;;\n            -f|--config)\n                CONFIG=\"$2\"\n                shift\n                ;;\n            -n|--node)\n                NODE=\"$2\"\n                shift\n                ;;\n            -a|--app)\n                APP=\"$2\"\n                shift\n                ;;\n            -t|--type)\n                TYPE=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_migrate_node\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ \"$CLUSTER\" == \"\" -a \"$CONFIG\" == \"\" ]; then\n        echo \"ERROR: no cluster specified\"\n        echo\n        usage_migrate_node\n        exit 1\n    fi\n\n    if [ \"$NODE\" == \"\" ]; then\n        echo \"ERROR: no node specified\"\n        echo\n        usage_migrate_node\n        exit 1\n    fi\n\n    if [ \"$TYPE\" != \"test\" -a \"$TYPE\" != \"run\" ]; then\n        echo \"ERROR: invalid type $TYPE\"\n        echo\n        usage_migrate_node\n        exit 1\n    fi\n\n    if [ \"$CLUSTER\" != \"\" ]; then\n        echo \"CLUSTER=$CLUSTER\"\n    else\n        echo \"CONFIG=$CONFIG\"\n    fi\n    echo \"NODE=$NODE\"\n    echo \"APP=$APP\"\n    echo \"TYPE=$TYPE\"\n    echo\n    cd ${ROOT}\n    echo \"------------------------------\"\n    if [ \"$CLUSTER\" != \"\" ]; then\n        ./admin_tools/migrate_node.sh $CLUSTER $NODE \"$APP\" $TYPE\n    else\n        ./admin_tools/migrate_node.sh $CONFIG $NODE \"$APP\" $TYPE -f\n    fi\n    echo \"------------------------------\"\n    echo\n    if [ \"$TYPE\" == \"test\" ]; then\n        echo \"The above is sample migration commands.\"\n        echo \"Run with option '-t run' to do migration actually.\"\n    else\n        echo \"Done.\"\n        echo \"You can run shell command 'nodes -d' to check the result.\"\n        echo\n        echo \"The cluster's auto migration is disabled now, you can run shell command 'set_meta_level lively' to enable it again.\"\n    fi\n}\n\n#####################\n## downgrade_node\n#####################\nfunction usage_downgrade_node()\n{\n    echo \"Options for subcommand 'downgrade_node':\"\n    echo \"   -h|--help            print the help info\"\n    echo \"   -c|--cluster <str>   cluster meta lists\"\n    echo \"   -f|--config <str>    config file path\" \n    echo \"   -n|--node <str>      the node to downgrade replicas, should be ip:port\"\n    echo \"   -a|--app <str>       the app to downgrade replicas, if not set, means downgrade all apps\"\n    echo \"   -t|--type <str>      type: test or run, default is test\"\n}\n\nfunction run_downgrade_node()\n{\n    CLUSTER=\"\"\n    CONFIG=\"\"\n    NODE=\"\"\n    APP=\"*\"\n    TYPE=\"test\"\n    while [[ $# > 0 ]]; do\n        key=\"$1\"\n        case $key in\n            -h|--help)\n                usage_downgrade_node\n                exit 0\n                ;;\n            -c|--cluster)\n                CLUSTER=\"$2\"\n                shift\n                ;;\n            -f|--config)\n                CONFIG=\"$2\"\n                shift\n                ;;\n            -n|--node)\n                NODE=\"$2\"\n                shift\n                ;;\n            -a|--app)\n                APP=\"$2\"\n                shift\n                ;;\n            -t|--type)\n                TYPE=\"$2\"\n                shift\n                ;;\n            *)\n                echo \"ERROR: unknown option \\\"$key\\\"\"\n                echo\n                usage_downgrade_node\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [ \"$CLUSTER\" == \"\" -a \"$CONFIG\" == \"\" ]; then\n        echo \"ERROR: no cluster specified\"\n        echo\n        usage_downgrade_node\n        exit 1\n    fi\n\n    if [ \"$NODE\" == \"\" ]; then\n        echo \"ERROR: no node specified\"\n        echo\n        usage_downgrade_node\n        exit 1\n    fi\n\n    if [ \"$TYPE\" != \"test\" -a \"$TYPE\" != \"run\" ]; then\n        echo \"ERROR: invalid type $TYPE\"\n        echo\n        usage_downgrade_node\n        exit 1\n    fi\n\n    if [ \"$CLUSTER\" != \"\" ]; then\n        echo \"CLUSTER=$CLUSTER\"\n    else\n        echo \"CONFIG=$CONFIG\"\n    fi\n    echo \"NODE=$NODE\"\n    echo \"APP=$APP\"\n    echo \"TYPE=$TYPE\"\n    echo\n    cd ${ROOT}\n    echo \"------------------------------\"\n    if [ \"$CLUSTER\" != \"\" ]; then\n        ./admin_tools/downgrade_node.sh $CLUSTER $NODE \"$APP\" $TYPE\n    else\n        ./admin_tools/downgrade_node.sh $CONFIG $NODE \"$APP\" $TYPE -f\n    fi\n    echo \"------------------------------\"\n    echo\n    if [ \"$TYPE\" == \"test\" ]; then\n        echo \"The above is sample downgrade commands.\"\n        echo \"Run with option '-t run' to do migration actually.\"\n    else\n        echo \"Done.\"\n        echo \"You can run shell command 'nodes -d' to check the result.\"\n        echo\n        echo \"The cluster's auto migration is disabled now, you can run shell command 'set_meta_level lively' to enable it again.\"\n    fi\n}\n\n####################################################################\n\nif [ $# -eq 0 ]; then\n    usage\n    exit 0\nfi\ncmd=$1\ncase $cmd in\n    help)\n        usage\n        ;;\n    build)\n        shift\n        run_build $*\n        ;;\n    start_zk)\n        shift\n        run_start_zk $*\n        ;;\n    stop_zk)\n        shift\n        run_stop_zk $*\n        ;;\n    clear_zk)\n        shift\n        run_clear_zk $*\n        ;;\n    start_onebox)\n        shift\n        run_start_onebox $*\n        ;;\n    stop_onebox)\n        shift\n        run_stop_onebox $*\n        ;;\n    clear_onebox)\n        shift\n        run_clear_onebox $*\n        ;;\n    list_onebox)\n        shift\n        run_list_onebox $*\n        ;;\n    start_onebox_instance)\n        shift\n        run_start_onebox_instance $*\n        ;;\n    stop_onebox_instance)\n        shift\n        run_stop_onebox_instance $*\n        ;;\n    restart_onebox_instance)\n        shift\n        run_restart_onebox_instance $*\n        ;;\n    start_kill_test)\n        shift\n        run_start_kill_test $*\n        ;;\n    stop_kill_test)\n        shift\n        run_stop_kill_test $*\n        ;;\n    list_kill_test)\n        shift\n        run_list_kill_test $*\n        ;;\n    clear_kill_test)\n        shift\n        run_clear_kill_test $*\n        ;;\n    bench)\n        shift\n        run_bench $*\n        ;;\n    shell)\n        shift\n        run_shell $*\n        ;;\n    migrate_node)\n        shift\n        run_migrate_node $*\n        ;;\n    downgrade_node)\n        shift\n        run_downgrade_node $*\n        ;;\n    test)\n        shift\n        run_test $*\n        ;;\n    pack_server)\n        shift\n        # source the config_hdfs.sh to get the HADOOP_HOME.\n        source \"${ROOT}\"/admin_tools/config_hdfs.sh\n        PEGASUS_ROOT=$ROOT ./build_tools/pack_server.sh $*\n        ;;\n    pack_client)\n        shift\n        PEGASUS_ROOT=$ROOT ./build_tools/pack_client.sh $*\n        ;;\n    pack_tools)\n        shift\n        PEGASUS_ROOT=$ROOT ./build_tools/pack_tools.sh $*\n        ;;\n    bump_version)\n        shift\n        ./build_tools/bump_version.sh $*\n        ;;\n    *)\n        echo \"ERROR: unknown command $cmd\"\n        echo\n        usage\n        exit 1\nesac\n"
        },
        {
          "name": "scala-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}