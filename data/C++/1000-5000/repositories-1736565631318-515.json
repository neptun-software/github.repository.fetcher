{
  "metadata": {
    "timestamp": 1736565631318,
    "page": 515,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WAVM/WAVM",
      "stars": 2665,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.7158203125,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: false\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nBreakStringLiterals: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    false\nBreakBeforeBinaryOperators: All\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: true\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 0\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: All\nFixNamespaceComments: false\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nSortIncludes: true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: Never\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        4\nUseTab:          ForContinuationAndIndentation\nReflowComments:  true\n\n# Doesn't work in older clang-format?\nSpaceAfterTemplateKeyword: false\n#IndentPPDirectives: AfterHash\n...\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.06640625,
          "content": "root = true\n\n[*.{c,cpp,h,S,asm}]\nindent_style = tab\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0283203125,
          "content": "*.wast linguist-vendored=true"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 7.578125,
          "content": "sudo: false\nlanguage: c++\n\n# Defer the actual build script to travis-build.sh\nscript: Build/travis-build.sh\n\nstages:\n  - build\n  - notify\n\n# Notify Discord when any job fails.\nafter_failure: Build/notify-discord.sh failure $DISCORD_WEBHOOK_URL\n\n# Build configuration matrix\njobs:\n  include:\n    - stage: build\n      name: \"ARM64 UbuntuBionic/GCC\"\n      arch: arm64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=NO LLVM_URL=http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-aarch64-linux-gnu.tar.xz\n      addons:\n        apt:\n          packages:\n            - zlib1g-dev\n\n    - stage: build\n      name: \"OSX/Xcode10.3\"\n      arch: amd64\n      os: osx\n      osx_image: xcode10.3\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz\n\n    - stage: build\n      name: \"OSX/Xcode11\"\n      arch: amd64\n      os: osx\n      osx_image: xcode11\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz\n    \n    - stage: build\n      name: \"OSX/Xcode11 ENABLE_UNWIND=NO\"\n      arch: amd64\n      os: osx\n      osx_image: xcode11\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=NO LLVM_URL=http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz\n\n    - stage: build\n      name: \"UbuntuXenial/GCC\"\n      arch: amd64\n      os: linux\n      dist: xenial\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuXenial/Clang\"\n      arch: amd64\n      os: linux\n      dist: xenial\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/Clang\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC ENABLE_UNWIND=NO\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=NO LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC STATIC_LINKING\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=YES ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC RELEASE_ASSERTS\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=YES ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC ASAN\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=YES ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=NO ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC UBSAN\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=YES ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=NO ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/Clang ASAN\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=YES ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=NO ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/Clang UBSAN\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=YES ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=NO ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/Clang TSAN\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: clang\n      env: ENABLE_RUNTIME=YES ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=YES ENABLE_LIBFUZZER=NO ENABLE_TSAN=YES ENABLE_RELEASE=YES ENABLE_DEBUG=NO ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: build\n      name: \"UbuntuBionic/GCC ENABLE_RUNTIME=NO\"\n      arch: amd64\n      os: linux\n      dist: bionic\n      compiler: gcc\n      env: ENABLE_RUNTIME=NO ENABLE_STATIC_LINKING=NO ENABLE_RELEASE_ASSERTS=NO ENABLE_ASAN=NO ENABLE_UBSAN=NO ENABLE_LIBFUZZER=NO ENABLE_TSAN=NO ENABLE_RELEASE=YES ENABLE_DEBUG=YES ENABLE_UNWIND=YES LLVM_URL=http://releases.llvm.org/6.0.1/clang+llvm-6.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n    - stage: notify\n      name: \"Notify Discord\"\n      os: linux\n      dist: bionic\n      install: skip\n      script: Build/notify-discord.sh success $DISCORD_WEBHOOK_URL"
        },
        {
          "name": "Build",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 33.67578125,
          "content": "cmake_minimum_required(VERSION 3.8.0)\n\n# Parse the VERSION file.\nset_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS VERSION)\nfile(READ \"VERSION\" VERSION_FILE_CONTENTS)\nstring(REGEX MATCH \"([0-9]+)\\.([0-9]+)\\.([0-9]+)(-[a-zA-Z0-9]+)?\" WAVM_VERSION_STRING ${VERSION_FILE_CONTENTS})\nif(NOT WAVM_VERSION_STRING)\n\tmessage(FATAL_ERROR \"Could not parse 'VERSION' file\")\nendif()\nset(WAVM_VERSION_MAJOR  ${CMAKE_MATCH_1})\nset(WAVM_VERSION_MINOR  ${CMAKE_MATCH_2})\nset(WAVM_VERSION_PATCH  ${CMAKE_MATCH_3})\nset(WAVM_VERSION_SUFFIX ${CMAKE_MATCH_4})\n\n# Declare the CMake project\nproject(\n\tWAVM\n\tVERSION \"${WAVM_VERSION_MAJOR}.${WAVM_VERSION_MINOR}.${WAVM_VERSION_PATCH}\"\n\tLANGUAGES C CXX ASM\n)\n\nif(MSVC)\n\tenable_language(ASM_MASM)\nendif()\n\n# Include some modules we use. GNUInstallDirs must be included after the project is declared, since it\n# uses configuration variables initialized when the project is declared (CMAKE_SIZEOF_VOID_P).\ninclude(CheckCCompilerFlag)\ninclude(CheckCXXCompilerFlag)\ninclude(GNUInstallDirs)\n\n# Configure CPack\nset(CPACK_PACKAGE_NAME \"WAVM\")\nset(CPACK_PACKAGE_VENDOR \"Andrew Scheidecker\")\nset(CPACK_PACKAGE_CONTACT \"andrew@scheidecker.net\")\nset(CPACK_PACKAGE_VERSION_MAJOR ${WAVM_VERSION_MAJOR})\nset(CPACK_PACKAGE_VERSION_MINOR ${WAVM_VERSION_MINOR})\nset(CPACK_PACKAGE_VERSION_PATCH ${WAVM_VERSION_PATCH})\nset(CPACK_PACKAGE_VERSION ${WAVM_VERSION_STRING})\nset(CPACK_PACKAGE_DESCRIPTION \"WebAssembly virtual machine\")\nset(CPACK_PACKAGE_HOMEPAGE_URL \"https://wavm.github.io\")\nset(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.txt\")\nset(CPACK_PACKAGE_INSTALL_DIRECTORY \"WAVM\")\nset(CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF)\n\nset(CPACK_COMPONENT_RUNTIME_DISPLAY_NAME \"WAVM Runtime\")\nset(CPACK_COMPONENT_RUNTIME_DESCRIPTION \"The WebAssembly Virtual Machine runtime\")\nset(CPACK_COMPONENT_RUNTIME_REQUIRED YES)\nset(CPACK_COMPONENT_DEVEL_DISPLAY_NAME \"WAVM Libraries and C/C++ Headers\")\nset(CPACK_COMPONENT_DEVEL_DESCRIPTION \"The libraries and C/C++ headers needed to use the WAVM runtime in your application\")\n\n# Configure NSIS\nset(CPACK_NSIS_MODIFY_PATH ON)\n\n# Configure Debian package\nset(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= 2.15), libstdc++6 (>= 5.1)\")\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\tset(CPACK_DEBIAN_PACKAGE_DEPENDS \"${CPACK_DEBIAN_PACKAGE_DEPENDS}, libgcc1 (>= 1:${GCC_MAJOR}.${GCC_MINOR})\")\nendif()\nset(CPACK_DEBIAN_PACKAGE_HOMEPAGE \"https://wavm.github.io\")\n\ninclude(CPack)\n\n# WAVM configuration options\n\noption(WAVM_ENABLE_STATIC_LINKING \"use static linking instead of dynamic for the WAVM libraries\" OFF)\noption(WAVM_ENABLE_RELEASE_ASSERTS \"enable assertions in release builds\" 0)\nset(WAVM_ENABLE_LTO \"OFF\" CACHE STRING \"enable link-time optimization (off, on, or thin)\")\n\noption(WAVM_ENABLE_FUZZ_TARGETS \"build the fuzz targets\" ON)\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t# The sanitizers are only available when compiling with Clang and GCC.\n\toption(WAVM_ENABLE_ASAN \"enable ASAN\" OFF)\n\toption(WAVM_ENABLE_UBSAN \"enable UBSAN\" OFF)\n\toption(WAVM_ENABLE_TSAN \"enable TSAN\" OFF)\nelse()\n\tset(WAVM_ENABLE_ASAN OFF)\n\tset(WAVM_ENABLE_UBSAN OFF)\n\tset(WAVM_ENABLE_TSAN OFF)\nendif()\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n\t# libfuzzer is only available when compiling with Clang.\n\toption(WAVM_ENABLE_LIBFUZZER \"compile WAVM for use by clang/LLVM's libfuzzer\" OFF)\nelse()\n\tset(WAVM_ENABLE_LIBFUZZER OFF)\nendif()\n\nif(CMAKE_SIZEOF_VOID_P EQUAL 4)\n\t# Disable the runtime on 32-bit platforms.\n\tset(WAVM_ENABLE_RUNTIME OFF)\nelse()\n\t# Allow disabling the runtime on 64-bit platforms.\n\toption(WAVM_ENABLE_RUNTIME \"enables the runtime components of WAVM\" ON)\nendif()\n\n# On GCC/Clang, provide an option to compile the static libraries as PIC: Position-Independent Code.\n# With this option disabled, the static libraries may not be linked into shared libraries.\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\tif(WAVM_ENABLE_STATIC_LINKING)\n\t\toption(WAVM_ENABLE_STATIC_LIBRARY_PIC \"create position-independent static libraries\" ON)\n\tendif()\nendif()\n\nif(WAVM_ENABLE_RUNTIME)\n\t# Find an installed build of LLVM\n\tfind_package(LLVM REQUIRED CONFIG)\n\n\tif(LLVM_VERSION_MAJOR LESS 6)\n\t\tmessage(FATAL_ERROR \"WAVM requires LLVM version 6.0 or newer\")\n\tendif()\n\n\t# Convert LLVM_DEFINITIONS and LLVM_INCLUDE_DIRS from strings of space-separated elements to\n\t# CMake lists (strings with semicolon-separated elements).\n\tseparate_arguments(LLVM_DEFINITIONS)\n\tseparate_arguments(LLVM_INCLUDE_DIRS)\n\n\t# LLVM on Windows includes a bunch of definitions in LLVM_DEFINITIONS to disable secure CRT\n\t# warnings, which prevents the warnings from triggering in WAVM code as well. Remove them, since\n\t# they doesn't seem to be necessary just to include LLVM.\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_CRT_SECURE_NO_WARNINGS\")\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_CRT_SECURE_NO_DEPRECATE\")\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_CRT_NONSTDC_NO_DEPRECATE\")\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_CRT_NONSTDC_NO_WARNINGS\")\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_SCL_SECURE_NO_DEPRECATE\")\n\tlist(REMOVE_ITEM LLVM_DEFINITIONS \"-D_SCL_SECURE_NO_WARNINGS\")\n\t\n\toption(WAVM_ENABLE_UNWIND \"enables printing stack traces\" ON)\nelse()\n\tset(WAVM_ENABLE_UNWIND OFF)\nendif()\n\n# Tell MASM to create SAFESEH-compatible object files on Win32.\nif(MSVC AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n\tset(CMAKE_ASM_MASM_FLAGS \"${CMAKE_ASM_MASM_FLAGS} /safeseh\")\nendif()\n\n# Bind some variables to useful paths.\nset(WAVM_SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR})\nset(WAVM_INCLUDE_DIR ${WAVM_SOURCE_DIR}/Include/WAVM)\n\n# If no build type is specified, default to RelWithDebInfo\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n\tset(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING \"The type of build (Debug, Release, RelWithDebInfo, or MinSizeRel\" FORCE)\nendif()\n\n# Enable MAXOSX_RPATH by default\ncmake_policy(SET CMP0042 NEW)\n\n# Enable cmake's testing infrastructure\nenable_testing()\n\n# Enable folders when generating Visual Studio solutions\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\n# Put executables/DLLs in the <build>/bin directory.\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)\n\n# If MSVC LTO is enabled, remove the /INCREMENTAL option from the link flags to avoid link warnings.\nfunction(REMOVE_INCREMENTAL_FLAG INOUT_FLAGS)\n\tset(INOUT_FLAGS ${OUT_FLAGS_LOCAL} PARENT_SCOPE)\nendfunction()\nif(MSVC AND WAVM_ENABLE_LTO)\n\tstring(REGEX REPLACE \"[-/]INCREMENTAL\" \"/INCREMENTAL:NO \" CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO})\n\tstring(REGEX REPLACE \"[-/]INCREMENTAL\" \"/INCREMENTAL:NO \" CMAKE_SHARED_LINKER_FLAGS_DEBUG ${CMAKE_SHARED_LINKER_FLAGS_DEBUG})\n\tstring(REGEX REPLACE \"[-/]INCREMENTAL\" \"/INCREMENTAL:NO \" CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO})\n\tstring(REGEX REPLACE \"[-/]INCREMENTAL\" \"/INCREMENTAL:NO \" CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG})\nendif()\n\n# Install Include/WAVM to <install root>/include/WAVM\ninstall(DIRECTORY ${WAVM_SOURCE_DIR}/Include/WAVM\n\t\tCOMPONENT devel\n\t\tDESTINATION include\n\t\tPATTERN *.txt EXCLUDE\n\t\tPATTERN *.h.in EXCLUDE)\n\n# Generate Inline/Config.h in the build+install directories from Inline/Config.h.in in the source\nconfigure_file(${WAVM_SOURCE_DIR}/Include/WAVM/Inline/Config.h.in\n\t\t\t   ${PROJECT_BINARY_DIR}/Include/WAVM/Inline/Config.h)\ninstall(FILES ${PROJECT_BINARY_DIR}/Include/WAVM/Inline/Config.h\n\t\tCOMPONENT devel\n\t\tDESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/WAVM/Inline)\n\n# Generate Inline/Version.h in the build+install directories from Inline/Version.h.in in the source\nconfigure_file(${WAVM_SOURCE_DIR}/Include/WAVM/Inline/Version.h.in\n\t\t\t   ${PROJECT_BINARY_DIR}/Include/WAVM/Inline/Version.h)\ninstall(FILES ${PROJECT_BINARY_DIR}/Include/WAVM/Inline/Version.h\n\t\tCOMPONENT devel\n\t\tDESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/WAVM/Inline)\n\n# Install LICENSE to <install root> on Windows and <install root>/share/wavm on other systems.\ninstall(FILES ${WAVM_SOURCE_DIR}/LICENSE.txt\n\t\tCOMPONENT runtime\n\t\tDESTINATION $<IF:$<PLATFORM_ID:Windows>,.,${CMAKE_INSTALL_DATAROOTDIR}/wavm>)\n\n# Install the Examples directory to <install root>/examples on Windows, and <install root>/share/wavm/examples on other systems.\ninstall(DIRECTORY ${WAVM_SOURCE_DIR}/Examples/\n\t\tDESTINATION $<IF:$<PLATFORM_ID:Windows>,examples,${CMAKE_INSTALL_DATAROOTDIR}/wavm/examples>\n\t\tCOMPONENT runtime\n\t\tPATTERN *.txt EXCLUDE)\n\nset(WAVM_C_CXX_FLAGS)\nset(WAVM_CXX_FLAGS)\nset(WAVM_LTO_C_CXX_FLAGS)\n\nset(WAVM_LINKER_FLAGS)\nset(WAVM_STATIC_LIBRARY_FLAGS)\n\n# CMake 3.12+ has a list(JOIN) operation, but as of 2019/9, the newest Ubuntu LTS (18.04) only ships with CMake 3.10.\nfunction(wavm_list_join STRING_LIST SEPARATOR VARIABLE_NAME)\n\tstring(REPLACE \";\" ${SEPARATOR} JOINED_STRING \"${STRING_LIST}\")\n\tset(${VARIABLE_NAME} ${JOINED_STRING} PARENT_SCOPE)\nendfunction()\n\nfunction(wavm_get_config_var_name_for_flag FLAG VAR_NAME)\n\tstring(SUBSTRING ${FLAG} 1 -1 FLAG_NAME)\n\tstring(MAKE_C_IDENTIFIER ${FLAG_NAME} FLAG_NAME)\n\tstring(TOUPPER ${FLAG_NAME} FLAG_NAME)\n\tset(${VAR_NAME} ${FLAG_NAME} PARENT_SCOPE)\nendfunction()\n\nfunction(wavm_check_cxx_compiler_flag FLAG VARIABLE_NAME)\n\twavm_list_join(\"${WAVM_C_CXX_FLAGS};${WAVM_CXX_FLAGS};${WAVM_LTO_C_CXX_FLAGS}\" \" \" WAVM_CXX_FLAGS_SPACE_SEPARATED)\n\tcheck_cxx_compiler_flag(\"${WAVM_CXX_FLAGS_SPACE_SEPARATED} ${FLAG}\" ${VARIABLE_NAME})\nendfunction()\n\nfunction(wavm_add_cxx_flag_if_supported OPTIONAL_FLAG)\n\twavm_get_config_var_name_for_flag(${OPTIONAL_FLAG} FLAG_VAR)\n\twavm_check_cxx_compiler_flag(\"${OPTIONAL_FLAG}\" \"CXX_HAS_${FLAG_VAR}\")\n\tif(CXX_HAS_${FLAG_VAR})\n\t\tlist(APPEND WAVM_CXX_FLAGS ${OPTIONAL_FLAG})\n\t\tset(WAVM_CXX_FLAGS ${WAVM_CXX_FLAGS} PARENT_SCOPE)\n\tendif()\nendfunction()\n\nfunction(wavm_add_c_cxx_flag_if_supported OPTIONAL_FLAG)\n\twavm_get_config_var_name_for_flag(${OPTIONAL_FLAG} FLAG_VAR)\n\twavm_check_cxx_compiler_flag(\"${OPTIONAL_FLAG}\" \"CXX_HAS_${FLAG_VAR}\")\n\tif(CXX_HAS_${FLAG_VAR})\n\t\tlist(APPEND WAVM_C_CXX_FLAGS ${OPTIONAL_FLAG})\n\t\tset(WAVM_C_CXX_FLAGS ${WAVM_C_CXX_FLAGS} PARENT_SCOPE)\n\tendif()\nendfunction()\n\nfunction(wavm_check_linker_flag FLAG VARIABLE_NAME)\n\twavm_list_join(\"${WAVM_LINKER_FLAGS}\" \" \" WAVM_LINKER_FLAGS_SPACE_SEPARATED)\n\tset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${WAVM_LINKER_FLAGS_SPACE_SEPARATED} ${FLAG}\")\n\twavm_check_cxx_compiler_flag(\"\" ${VARIABLE_NAME})\nendfunction()\n\nfunction(wavm_add_linker_flag_if_supported OPTIONAL_FLAG)\n\twavm_get_config_var_name_for_flag(${OPTIONAL_FLAG} FLAG_VAR)\n\twavm_check_linker_flag(${OPTIONAL_FLAG} \"LINKER_HAS_${FLAG_VAR}\")\n\tif(LINKER_HAS_${FLAG_VAR})\n\t\tlist(APPEND WAVM_LINKER_FLAGS ${OPTIONAL_FLAG})\n\t\tset(WAVM_LINKER_FLAGS ${WAVM_LINKER_FLAGS} PARENT_SCOPE)\n\tendif()\nendfunction()\n\n# By default, CMake uses different optimization settings for Release vs RelWithDebInfo builds.\n# For GCC, it uses -O3 in Release and -O2 in RelWithDebInfo.\n# For MSVC, it uses /Ob2 in Release and /Ob1 in RelWithDebInfo (amount of inlining).\n# In order to reduce problems that only occur in Release builds without debug symbols, override the\n# default optimization settings so RelWithDebInfo uses the same optimization settings as Release.\nset(CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_C_FLAGS_RELWITHDEBINFO})\nset(CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})\nstring(REPLACE \"-O2\" \"-O3\" CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL})\nstring(REPLACE \"-O2\" \"-O3\" CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL})\nstring(REPLACE \"/Ob1\" \"/Ob2\" CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL})\nstring(REPLACE \"/Ob1\" \"/Ob2\" CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL ${CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL})\nset(CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO_LOCAL} CACHE STRING \"\" FORCE)\nset(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO_LOCAL} CACHE STRING \"\" FORCE)\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\t\n\n\t# Expose the -fuse-ld=<x> option on GCC/Clang through a WAVM_USE_LINKER config variable.\n\tset(WAVM_USE_LINKER \"\" CACHE STRING \"If set, overrides the default linker (as the compiler option -fuse-ld=<WAVM_USE_LINKER>)\")\n\tif(WAVM_USE_LINKER)\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-fuse-ld=${WAVM_USE_LINKER}\")\n\tendif()\n\n\t# Warn if a switch doesn't handle an enum case even if it has a default label.\n\twavm_add_c_cxx_flag_if_supported(\"-Wswitch-enum\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wswitch-default\")\n\t\n\twavm_add_c_cxx_flag_if_supported(\"-Wnull-dereference\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wduplicated-cond\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wduplicated-branches\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wlogical-op\")\n\twavm_add_cxx_flag_if_supported(\"-Wnon-virtual-dtor\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wrestrict\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wdouble-promotion\")\n\n\t# Exclude some warnings included in Wextra that we don't care about.\n\twavm_add_c_cxx_flag_if_supported(\"-Wno-missing-field-initializers\")\n\twavm_add_c_cxx_flag_if_supported(\"-Wno-unused-parameter\")\nendif()\n\n# Use -fvisibility=hidden if available. The *_API definitions are also changed by the value of\n# CXX_HAS_FVISIBILITY_HIDDEN.\n#wavm_add_c_cxx_flag_if_supported(\"-fvisibility=hidden\")\n\nstring(TOUPPER \"${WAVM_ENABLE_LTO}\" UPPERCASE_WAVM_ENABLE_LTO)\nif(UPPERCASE_WAVM_ENABLE_LTO STREQUAL \"THIN\")\n\tlist(APPEND WAVM_LTO_C_CXX_FLAGS \"-flto=thin\")\n\tif(NOT MSVC)\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-flto=thin\")\n\tendif()\n\n\t# Detect which command line options the linker supports to configure the ThinLTO cache.\n\twavm_check_linker_flag(\"-Wl,--thinlto-cache-dir=${CMAKE_BINARY_DIR}/.thinltocache\" LINKER_HAS_ELF_LLD_THINLTO_CMD_SYNTAX)\n\twavm_check_linker_flag(\"-Wl,-plugin-opt,cache-dir=${CMAKE_BINARY_DIR}/.thinltocache\" LINKER_HAS_GOLD_THINLTO_CMD_SYNTAX)\n\twavm_check_linker_flag(\"-Wl,-cache_path_lto,${CMAKE_BINARY_DIR}/.thinltocache\" LINKER_HAS_LD64_THINLTO_CMD_SYNTAX)\n\twavm_check_linker_flag(\"/lldltocache:${CMAKE_BINARY_DIR}/.thinltocache\" LINKER_HAS_COFF_LLD_THINLTO_CMD_SYNTAX)\n\n\tif(LINKER_HAS_COFF_LLD_THINLTO_CMD_SYNTAX)\n\t\t# COFF LLD ThinLTO cache options\n\t\t# Favor this path as hack, because lld-link.exe will accept and ignore the other syntaxes\n\t\t# with a warning, but LLD, gold, and LD64 will reject this syntax as an error.\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"/lldltocache:${CMAKE_BINARY_DIR}/.thinltocache\")\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"/lldltocachepolicy:cache_size_bytes=1g\")\n\telseif(LINKER_HAS_ELF_LLD_THINLTO_CMD_SYNTAX)\n\t\t# LLD ThinLTO cache options\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-Wl,--thinlto-cache-dir=${CMAKE_BINARY_DIR}/.thinltocache\")\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-Wl,--thinlto-cache-policy,cache_size_bytes=1g\")\n\telseif(LINKER_HAS_GOLD_THINLTO_CMD_SYNTAX)\n\t\t# Gold ThinLTO cache options\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-Wl,-plugin-opt,cache-dir=${CMAKE_BINARY_DIR}/.thinltocache\")\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-Wl,-plugin-opt,cache-policy=cache_size_bytes=1g\")\n\telseif(LINKER_HAS_LD64_THINLTO_CMD_SYNTAX)\n\t\t# ld64 ThinLTO cache options\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"-Wl,-cache_path_lto,${CMAKE_BINARY_DIR}/.thinltocache\")\n\tendif()\nelseif(UPPERCASE_WAVM_ENABLE_LTO STREQUAL \"ON\")\n\tif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\tlist(APPEND WAVM_LTO_C_CXX_FLAGS \"-flto\")\n\t\tif(NOT MSVC)\n\t\t\tlist(APPEND WAVM_LINKER_FLAGS \"-flto\")\n\t\tendif()\n\telseif(MSVC)\n\t\tlist(APPEND WAVM_LTO_C_CXX_FLAGS \"/GL\")\n\t\tlist(APPEND WAVM_LINKER_FLAGS \"/LTCG\")\n\t\tlist(APPEND WAVM_STATIC_LIBRARY_FLAGS \"/LTCG\")\n\telse()\n\t\tmessage(FATAL_ERROR \"Your compiler does not seem to support LTO via either '-flto' or '/GL'.\")\n\tendif()\nelseif(NOT UPPERCASE_WAVM_ENABLE_LTO STREQUAL \"OFF\")\n\tmessage(FATAL_ERROR \"WAVM_ENABLE_LTO must be 'OFF', 'ON', or 'THIN'\")\nendif()\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t# When -flto and -gsplit-dwarf are passed to GCC, it produces a non-error note:\n\t# ‘-gsplit-dwarf’ is not supported with LTO, disabling\n\t# To avoid the nuisance, don't bother with -gsplit-dwarf if any form LTO is enabled on GCC.\n\tif(NOT CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" OR UPPERCASE_WAVM_ENABLE_LTO STREQUAL \"OFF\")\n\t\t# If the compiler supports it, use -gsplit-dwarf for the configurations that build debug info.\n\t\twavm_check_cxx_compiler_flag(\"-gsplit-dwarf\" CXX_HAS_GSPLIT_DWARF)\n\t\tif(CXX_HAS_GSPLIT_DWARF)\n\t\t\tset(CMAKE_C_FLAGS_RELWITHDEBINFO   \"${CMAKE_C_FLAGS_RELWITHDEBINFO}   -gsplit-dwarf\")\n\t\t\tset(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -gsplit-dwarf\")\n\t\t\tset(CMAKE_C_FLAGS_DEBUG            \"${CMAKE_C_FLAGS_DEBUG}            -gsplit-dwarf\")\n\t\t\tset(CMAKE_CXX_FLAGS_DEBUG          \"${CMAKE_CXX_FLAGS_DEBUG}          -gsplit-dwarf\")\n\n\t\t\t# If the linker supports it, use --gdb-index to add an index of external debug data to the\n\t\t\t# binaries. gold and lld support this, ld does not.\n\t\t\twavm_add_linker_flag_if_supported(\"-Wl,--gdb-index\")\n\t\tendif()\n\tendif()\nendif()\n\nfunction(WAVM_SET_TARGET_LINKER_OPTIONS TARGET_NAME)\n\ttarget_compile_options(${TARGET_NAME} PRIVATE ${WAVM_LTO_C_CXX_FLAGS})\n\tif(MSVC)\n\t\tif(WAVM_LINKER_FLAGS)\n\t\t\twavm_list_join(\"${WAVM_LINKER_FLAGS}\" \" \" WAVM_LINKER_FLAGS_SPACE_SEPARATED)\n\t\t\tset_target_properties(${TARGET_NAME} PROPERTIES LINK_FLAGS \"${WAVM_LINKER_FLAGS_SPACE_SEPARATED}\")\n\t\tendif()\n\t\tif(WAVM_STATIC_LIBRARY_FLAGS)\n\t\t\twavm_list_join(\"${WAVM_STATIC_LIBRARY_FLAGS}\" \" \" WAVM_STATIC_LIBRARY_FLAGS_SPACE_SEPARATED)\n\t\t\tset_target_properties(${TARGET_NAME} PROPERTIES STATIC_LIBRARY_FLAGS \"${WAVM_STATIC_LIBRARY_FLAGS_SPACE_SEPARATED}\")\n\t\tendif()\n\telse()\n\t\ttarget_link_libraries(${TARGET_NAME} PRIVATE ${WAVM_LINKER_FLAGS})\n\tendif()\n\t\n\tif(NOT CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n\t\tget_target_property(TARGET_TYPE ${TARGET_NAME} TYPE)\n\t\tif(TARGET_TYPE STREQUAL \"STATIC_LIBRARY\" AND WAVM_ENABLE_STATIC_LIBRARY_PIC)\n\t\t\t# Ensure that even static libraries are relocatable so they can be linked into a .so\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fPIC\")\n\t\telseif(TARGET_TYPE STREQUAL \"EXECUTABLE\" AND WAVM_ENABLE_STATIC_LINKING)\n\t\t\t#target_link_libraries(${TARGET_NAME} PRIVATE \"-static\")\n\t\tendif()\n\tendif()\nendfunction()\n\n# A function that sets sanitizer options on a target.\nfunction(WAVM_SET_TARGET_SANITIZER_OPTIONS TARGET_NAME)\n\tif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\tif(WAVM_ENABLE_ASAN)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fsanitize=address\")\n\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC \"-fsanitize=address\")\n\t\tendif()\n\n\t\t# Optionally enable the undefined-behavior sanitizer.\n\t\tif(WAVM_ENABLE_UBSAN)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fsanitize=undefined\")\n\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC -fsanitize=undefined)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fno-sanitize-recover=undefined\")\n\t\tendif()\n\n\t\t# Optionally enable the thread sanitizer.\n\t\tif(WAVM_ENABLE_TSAN)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fsanitize=thread\")\n\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC -fsanitize=thread)\n\t\tendif()\n\t\t\n\t\t# Optionally enable Clang's libfuzzer.\n\t\tif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" AND WAVM_ENABLE_LIBFUZZER)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fsanitize=fuzzer\")\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fsanitize-coverage=trace-cmp,trace-div,trace-gep\")\n\t\tendif()\n\n\t\tif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\t\t# Link with the static sanitizer runtimes instead of the shared sanitize runtimes on GCC.\n\t\t\t# This matches the default behavior for Clang.\n\t\t\tif(WAVM_ENABLE_ASAN)\n\t\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC \"-static-libasan\")\n\t\t\tendif()\n\t\t\tif(WAVM_ENABLE_UBSAN)\n\t\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC \"-static-libubsan\")\n\t\t\tendif()\n\t\t\tif(WAVM_ENABLE_TSAN)\n\t\t\t\ttarget_link_libraries(${TARGET_NAME} PUBLIC \"-static-libtsan\")\n\t\t\tendif()\n\t\tendif()\n\tendif()\nendfunction()\n\n# A function that sets compile options that are common to all WAVM targets.\nfunction(WAVM_SET_TARGET_COMPILE_OPTIONS TARGET_NAME)\n\t# Add the WAVM public include directory.\n\ttarget_include_directories(\n\t\t${TARGET_NAME}\n\t\tPUBLIC $<INSTALL_INTERFACE:include>\n\t\t\t   $<BUILD_INTERFACE:${WAVM_SOURCE_DIR}/Include>\n\t\t\t   $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/Include>\n\t)\n\n\t# Target C++14.\n\ttarget_compile_features(${TARGET_NAME} PUBLIC cxx_std_14)\n\t\n\t# Set sanitizer options.\n\tWAVM_SET_TARGET_SANITIZER_OPTIONS(${TARGET_NAME})\n\t\n\tif(MSVC)\n\t\t# Compile files in parallel.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/MP\")\n\n\t\t# Compile with all warnings, and fatal warnings.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/W4\")\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/WX\")\n\n\t\t# Disable warnings\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4127\") # conditional expression is constant\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4100\") # unreferenced formal parameter\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4512\") # assignment operator could not be generated\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4141\") # 'inline': used more than once\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4310\") # cast truncates constant value\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4324\") # structure was padded due to alignment specifier\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4146\") # unary minus operator applied to unsigned type, result still unsigned\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4204\") # nonstandard extension used : non-constant aggregate initializer\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd4251\") # struct '' needs to have dll-interface to be used by clients of struct ''\n\n\t\ttarget_link_libraries(${TARGET_NAME} PRIVATE \"-ignore:4199\") # /DELAYLOAD:... ignored; no imports found from ...\n\t\t\n\t\tif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wno-deprecated-declarations\")\n\t\tendif()\n\n\t\t# error C2338:  You've instantiated std::aligned_storage<Len, Align> with an extended alignment\n\t\t# (in other words, Align > alignof(max_align_t)). Before VS 2017 15.8, the member \"type\" would\n\t\t# non-conformingly have an alignment of only alignof(max_align_t). VS 2017 15.8 was fixed to\n\t\t# handle this correctly, but the fix inherently changes layout and breaks binary compatibility\n\t\t# (*only* for uses of aligned_storage with extended alignments). Please define either\n\t\t# (1) _ENABLE_EXTENDED_ALIGNED_STORAGE to acknowledge that you understand this message and\n\t\t#     that you actually want a type with an extended alignment, or\n\t\t# (2) _DISABLE_EXTENDED_ALIGNED_STORAGE to silence this message and get the old non-conformant\n\t\t#     behavior.\n\t\ttarget_compile_definitions(${TARGET_NAME} PRIVATE \"_ENABLE_EXTENDED_ALIGNED_STORAGE\")\n\telseif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\n\t\t# Compile with all+extra warnings and fatal warnings\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wall\")\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wextra\")\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Werror\")\n\n\t\t# Disable RTTI to allow linking against a build of LLVM that was compiled without it.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE $<$<COMPILE_LANGUAGE:CXX>:-fno-rtti>)\n\n\t\t# Don't eliminate frame pointers: this makes thread forking work robustly if one of the\n\t\t# sanitizers requires a frame pointer, and makes ASAN's stack trace on malloc much better\n\t\t# without using the slow libunwind path.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-fno-omit-frame-pointer\")\n\tendif()\n\n\tif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n\t\t# Compile with -pthread on Linux.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-pthread\")\n\t\ttarget_link_libraries(${TARGET_NAME} PRIVATE \"-pthread\")\n\tendif()\n\t\n\t# Add the optional flags that the compiler was detected to support.\n\t# This needs to happen *AFTER* the above -Wall -Wextra to ensure that those flags don't\n\t# re-enable warnings that are being disabled by these flags.\n\ttarget_compile_options(${TARGET_NAME} PRIVATE ${WAVM_C_CXX_FLAGS})\n\ttarget_compile_options(${TARGET_NAME} PRIVATE $<$<COMPILE_LANGUAGE:CXX>:${WAVM_CXX_FLAGS}>)\n\n\t# Add the linker flags.\n\tWAVM_SET_TARGET_LINKER_OPTIONS(${TARGET_NAME})\nendfunction()\n\nfunction(WAVM_INSTALL_TARGET TARGET_NAME)\n\tinstall(TARGETS ${TARGET_NAME}\n\t\t\tEXPORT WAVMInstallTargets COMPONENT devel\n\t\t\tLIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT devel\n\t\t\tARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT devel\n\t\t\tRUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime)\n\n\t# Install PDB files to the same directory as the binaries.\n\t# Exclude static libraries as TARGET_PDB_FILE only works for linked targets.\n\tget_target_property(TARGET_TYPE ${TARGET_NAME} TYPE)\n\tif(MSVC AND NOT ${TARGET_TYPE} STREQUAL \"STATIC_LIBRARY\")\n\t\tinstall(FILES $<TARGET_PDB_FILE:${TARGET_NAME}>\n\t\t\t\tCOMPONENT devel\n\t\t\t\tDESTINATION bin\n\t\t\t\tOPTIONAL)\n\tendif()\nendfunction()\n\n# Older versions of CMake can't handle target_link_libraries on the monolithic WAVM library\n# when invoked from a source directory other than the root directory where the WAVM target is\n# defined. To get around this, accumulate the libraries this component needs to link with in an\n# internal config variable, which seems to be the closest thing CMake has to a global variable.\n# After processing all library components, this root directory CMakeLists.txt invokes\n# target_link_libraries with the accumulated libraries.\nset(WAVM_MONOLIB_PRIVATE_LIBS \"\" CACHE INTERNAL \"\" FORCE)\nset(WAVM_MONOLIB_PUBLIC_LIBS \"\" CACHE INTERNAL \"\" FORCE)\n\n# CMake also scopes the effect of set_source_files_properties to targets created by the same list\n# file, so to set the header-only flag on source files in the WAVM monolib, it's necessary to\n# accumulate the set of header-only files in a global variable while processing subdirectory list\n# files, and then set the source file properties at the end of this list file.\nset(WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES \"\" CACHE INTERNAL \"\" FORCE)\n\nfunction(WAVM_ADD_LIB_COMPONENT COMPONENT_NAME)\n\tcmake_parse_arguments(COMPONENT\n\t\t\"\"\n\t\t\"\"\n\t\t\"SOURCES;NONCOMPILED_SOURCES;PRIVATE_LIBS;PUBLIC_LIBS;PRIVATE_LIB_COMPONENTS;PUBLIC_LIB_COMPONENTS;PRIVATE_INCLUDE_DIRECTORIES;PRIVATE_SYSTEM_INCLUDE_DIRECTORIES;PRIVATE_DEFINITIONS;PUBLIC_DEFINITIONS\"\n\t\t${ARGN})\n\n\t# Translate the relative source and header file paths to absolute paths.\n\t# Older versions of CMake will use the source directory where a target is defined as the root\n\t# for relative paths in the target's sources, which breaks when adding the source files to The\n\t# monolithic WAVM library defined in the root directory.\n\tforeach(COMPONENT_SOURCE ${COMPONENT_SOURCES})\n\t\tget_filename_component(COMPONENT_SOURCE_ABSOLUTE ${COMPONENT_SOURCE} ABSOLUTE)\n\t\tlist(APPEND COMPONENT_SOURCES_ABSOLUTE ${COMPONENT_SOURCE_ABSOLUTE})\n\tendforeach()\n\tforeach(COMPONENT_NONCOMPILED_SOURCE ${COMPONENT_NONCOMPILED_SOURCES})\n\t\tget_filename_component(COMPONENT_NONCOMPILED_SOURCE_ABSOLUTE ${COMPONENT_NONCOMPILED_SOURCE} ABSOLUTE)\n\t\tlist(APPEND COMPONENT_NONCOMPILED_SOURCES_ABSOLUTE ${COMPONENT_NONCOMPILED_SOURCE_ABSOLUTE})\t\t\t\n\tendforeach()\n\t\n\t# Directly add the component's source files to the monolithic WAVM library.\n\ttarget_sources(libWAVM PRIVATE ${COMPONENT_SOURCES_ABSOLUTE} ${CMAKE_CURRENT_LIST_FILE})\n\n\t# Add the non-compiled source files to a global list that will be flagged as \"header-only\".\n\tlist(APPEND WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES ${COMPONENT_NONCOMPILED_SOURCES_ABSOLUTE})\n\tset(WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES ${WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES} CACHE INTERNAL \"\" FORCE)\n\n\t# Add the libraries this component depends on to the global list of libraries to link the\n\t# monolithic WAVM library with.\n\tlist(APPEND WAVM_MONOLIB_PRIVATE_LIBS ${COMPONENT_PRIVATE_LIBS})\n\tlist(APPEND WAVM_MONOLIB_PUBLIC_LIBS ${COMPONENT_PUBLIC_LIBS})\n\tset(WAVM_MONOLIB_PRIVATE_LIBS ${WAVM_MONOLIB_PRIVATE_LIBS} CACHE INTERNAL \"\" FORCE)\n\tset(WAVM_MONOLIB_PUBLIC_LIBS ${WAVM_MONOLIB_PUBLIC_LIBS} CACHE INTERNAL \"\" FORCE)\n\t\n\t# Add the component's include directories and definitions.\n\ttarget_include_directories(libWAVM PRIVATE ${COMPONENT_PRIVATE_INCLUDE_DIRECTORIES})\n\ttarget_include_directories(libWAVM SYSTEM PRIVATE ${COMPONENT_PRIVATE_SYSTEM_INCLUDE_DIRECTORIES})\n\ttarget_compile_definitions(libWAVM PRIVATE ${COMPONENT_PRIVATE_DEFINITIONS})\n\ttarget_compile_definitions(libWAVM PUBLIC ${COMPONENT_PUBLIC_DEFINITIONS})\nendfunction()\n\nfunction(WAVM_ADD_EXECUTABLE EXE_NAME)\n\tcmake_parse_arguments(EXE\n\t\t\"\"\n\t\t\"FOLDER\"\n\t\t\"SOURCES;NONCOMPILED_SOURCES;PRIVATE_LIBS;PUBLIC_LIBS;PRIVATE_LIB_COMPONENTS;PUBLIC_LIB_COMPONENTS\"\n\t\t${ARGN})\n\n\tadd_executable(${EXE_NAME} ${EXE_SOURCES} ${EXE_NONCOMPILED_SOURCES})\n\tWAVM_SET_TARGET_COMPILE_OPTIONS(${EXE_NAME})\n\n\t# Mark the non-compiled sources as header-only, which includes the files in IDE projects, but\n\t# doesn't compile them.\n\tset_source_files_properties(${EXE_NONCOMPILED_SOURCES} PROPERTIES HEADER_FILE_ONLY TRUE)\n\n\t# Add the executable's link libraries.\n\ttarget_link_libraries(${EXE_NAME} PRIVATE ${EXE_PRIVATE_LIBS})\n\ttarget_link_libraries(${EXE_NAME} PUBLIC ${EXE_PUBLIC_LIBS})\n\n\t# Ignore the PRIVATE_LIB_COMPONENTS and PUBLIC_LIB_COMPONENTS, and just link the executable with\n\t# the monolithic WAVM library.\n\ttarget_link_libraries(${EXE_NAME} PRIVATE libWAVM)\n\n\tif(EXE_FOLDER)\n\t\tset_target_properties(${EXE_NAME} PROPERTIES FOLDER ${EXE_FOLDER})\n\tendif()\nendfunction()\n\nfunction(WAVM_ADD_THIRD_PARTY_LIBRARY LIB_NAME)\n\tcmake_parse_arguments(LIB\n\t\t\"\"\n\t\t\"\"\n\t\t\"SOURCES;NONCOMPILED_SOURCES;PRIVATE_DEFINITIONS;PUBLIC_DEFINITIONS;PRIVATE_INCLUDE_DIRECTORIES;PUBLIC_INCLUDE_DIRECTORIES;PRIVATE_COMPILE_OPTIONS\"\n\t\t${ARGN})\n\n\t# Create a static library.\n\tadd_library(${LIB_NAME} STATIC ${LIB_SOURCES} ${LIB_NONCOMPILED_SOURCES})\n\t\n\t# Target C++11.\n\ttarget_compile_features(${LIB_NAME} PRIVATE cxx_std_11)\n\n\t# Set the configured sanitizer and linker options.\n\tif(NOT ${LIB_NAME} STREQUAL \"WAVMUnwind\")\n\t\t# TODO: figure out why enabling the sanitizers on libunwind causes ASAN failures.\n\t\tWAVM_SET_TARGET_SANITIZER_OPTIONS(${LIB_NAME})\n\tendif()\n\tWAVM_SET_TARGET_LINKER_OPTIONS(${LIB_NAME})\n\n\t# Mark the non-compiled sources as header-only, which includes the files in IDE projects, but\n\t# doesn't compile them.\n\tset_source_files_properties(${LIB_NONCOMPILED_SOURCES} PROPERTIES HEADER_FILE_ONLY TRUE)\n\n\t# Add the library's definitions, include directories, and compile options.\n\ttarget_compile_definitions(${LIB_NAME} PRIVATE ${LIB_PRIVATE_DEFINITIONS})\n\ttarget_compile_definitions(${LIB_NAME} PUBLIC ${LIB_PUBLIC_DEFINITIONS})\n\ttarget_include_directories(${LIB_NAME} PRIVATE ${LIB_PRIVATE_INCLUDE_DIRECTORIES})\n\ttarget_include_directories(${LIB_NAME} PUBLIC ${LIB_PUBLIC_INCLUDE_DIRECTORIES})\n\ttarget_compile_options(${LIB_NAME} PRIVATE ${LIB_PRIVATE_COMPILE_OPTIONS})\n\n\tif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\tif(NOT WAVM_ENABLE_STATIC_LINKING OR WAVM_ENABLE_STATIC_LIBRARY_PIC)\n\t\t\t# Ensure that even static libraries are relocatable so they can be linked into a .so\n\t\t\ttarget_compile_options(${LIB_NAME} PRIVATE \"-fPIC\")\n\t\tendif()\n\tendif()\n\n\t# When using static linking for the WAVM libraries, the gdtoa library needs to be\n\t# installed. Otherwise, it will just be linked into the WAVM .so/.dylib files.\n\tif(WAVM_ENABLE_STATIC_LINKING)\n\t\tWAVM_INSTALL_TARGET(${LIB_NAME})\n\tendif()\n\n\tset_target_properties(${LIB_NAME} PROPERTIES FOLDER \"Third party\")\nendfunction()\n\n# Create a WAVM library that will include all WAVM library components.\nif(WAVM_ENABLE_STATIC_LINKING)\n\tadd_library(libWAVM STATIC)\nelse()\n\tadd_library(libWAVM SHARED)\nendif()\nWAVM_SET_TARGET_COMPILE_OPTIONS(libWAVM)\nWAVM_INSTALL_TARGET(libWAVM)\nset_target_properties(libWAVM PROPERTIES\n\tFOLDER Libraries\n\tINSTALL_RPATH_USE_LINK_PATH TRUE\n\tSOVERSION ${WAVM_VERSION_MAJOR}\n\tVERSION ${WAVM_VERSION}\n\tPREFIX \"\"\n)\n\n# Set up the WAVM_API definitions.\nif(NOT WAVM_ENABLE_STATIC_LINKING AND MSVC)\n\ttarget_compile_definitions(libWAVM PRIVATE \"\\\"WAVM_API=__declspec(dllexport)\\\"\")\n\ttarget_compile_definitions(libWAVM INTERFACE \"\\\"WAVM_API=__declspec(dllimport)\\\"\")\nelseif(NOT WAVM_ENABLE_STATIC_LINKING AND CXX_HAS_FVISIBILITY_HIDDEN)\n\ttarget_compile_definitions(libWAVM PUBLIC \"WAVM_API=__attribute__((visibility(\\\"default\\\")))\")\nelse()\n\ttarget_compile_definitions(libWAVM PUBLIC \"WAVM_API=\")\nendif()\n\n# Process the CMake scripts in subdirectories.\nadd_subdirectory(Examples)\nadd_subdirectory(Include/WAVM/Inline)\nadd_subdirectory(Lib/IR)\nadd_subdirectory(Lib/Logging)\nadd_subdirectory(Lib/NFA)\nadd_subdirectory(Lib/Platform)\nadd_subdirectory(Lib/RegExp)\nadd_subdirectory(Lib/VFS)\nadd_subdirectory(Lib/WASM)\nadd_subdirectory(Lib/WASTParse)\nadd_subdirectory(Lib/WASTPrint)\nadd_subdirectory(Programs/wavm)\nadd_subdirectory(Test)\nadd_subdirectory(ThirdParty/BLAKE2)\nadd_subdirectory(ThirdParty/liblmdb)\n\nif(WAVM_ENABLE_RUNTIME)\n\tadd_subdirectory(Include/WAVM/RuntimeABI)\n\tadd_subdirectory(Lib/Emscripten)\n\tadd_subdirectory(Lib/ObjectCache)\n\tadd_subdirectory(Lib/LLVMJIT)\n\tadd_subdirectory(Lib/Runtime)\n\tadd_subdirectory(Lib/ThreadTest)\n\tadd_subdirectory(Lib/WASI)\n\tadd_subdirectory(Lib/wavm-c)\nendif()\n\nif(WAVM_ENABLE_UNWIND)\n\tadd_subdirectory(ThirdParty/libunwind)\nendif()\n\n# Add the library dependencies accumulated from the various library components as link dependencies\n# of the monolithic WAVM library.\ntarget_link_libraries(libWAVM PRIVATE ${WAVM_MONOLIB_PRIVATE_LIBS})\ntarget_link_libraries(libWAVM PUBLIC ${WAVM_MONOLIB_PUBLIC_LIBS})\n\n# Set the non-compiled source files accumulated from the various library components as header-only,\n# which includes the files in IDE projects, but doesn't compile them.\ntarget_sources(libWAVM PRIVATE ${WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES})\nset_source_files_properties(${WAVM_MONOLIB_NONCOMPILED_SOURCE_FILES} PROPERTIES HEADER_FILE_ONLY TRUE)\n\n# Create a CMake package in <build>/lib/cmake/WAVM containing the WAVM library targets.\nexport(\n\tEXPORT WAVMInstallTargets\n\tFILE ${CMAKE_CURRENT_BINARY_DIR}/lib/cmake/WAVM/WAVMConfig.cmake\n\tNAMESPACE WAVM::)\n\n# Create a CMake package in <install root>/lib/cmake/WAVM containing the WAVM library targets.\ninstall(\n\tEXPORT WAVMInstallTargets\n\tCOMPONENT devel\n\tFILE WAVMConfig.cmake\n\tDESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/WAVM\n\tNAMESPACE WAVM::)\n\n# Create a dummy target to hold various files in the project root\nadd_custom_target(RootFiles SOURCES\n\t.clang-format\n\tLICENSE.txt\n\tREADME.md\n\tVERSION\n\tvs-chromium-project.txt\n\tWebAssembly.tmLanguage)\n"
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.51953125,
          "content": "FROM ubuntu:18.04\n\nRUN apt-get update\nRUN apt-get install -y software-properties-common\n\n# System deps\nRUN apt-get update\nRUN apt-get install -y \\\n    autoconf \\\n    automake \\\n    build-essential \\\n    cmake \\\n    libtool \\\n    llvm-6.0 \\\n    make \\\n    ninja-build \\\n    sudo \\\n    unzip \\\n    zlib1g-dev\n\nRUN apt-get clean autoclean\nRUN apt-get autoremove -y\n\n# Copy this code into place\nCOPY . /code\n\n# Create a build directory\nWORKDIR /build\n\nRUN cmake -G Ninja /code -DCMAKE_BUILD_TYPE=RelWithDebInfo\nRUN ninja\n\nCMD /bin/bash\n"
        },
        {
          "name": "Examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Include",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4326171875,
          "content": "Copyright (c) 2019, Andrew Scheidecker\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of WAVM nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "Programs",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1669921875,
          "content": "[![BSD license](https://img.shields.io/badge/license-BSD-green)](LICENSE.txt)\n[![GitHub repo](https://img.shields.io/badge/repo-github-green.svg)](https://github.com/WAVM/WAVM)\n[![Discord](https://img.shields.io/discord/484466837988573194)](https://discordapp.com/invite/fchkxFM)\n[![Azure Build Status](https://dev.azure.com/WAVM/WAVM/_apis/build/status/WAVM.WAVM)](https://dev.azure.com/WAVM/WAVM/_build/latest?definitionId=1)\n\n# WAVM\n\n[Getting Started](Doc/GettingStarted.md) | [Building WAVM from Source](Doc/Building.md) | [Exploring the WAVM source](Doc/CodeOrganization.md)\n\n##### WAVM is a WebAssembly virtual machine, designed for use in non-browser applications.\n\n### Fast\n\nWAVM uses [LLVM](https://llvm.org/) to compile WebAssembly code to machine code with close to\nnative performance. It can even beat native performance in some cases, thanks to the ability to\ngenerate machine code tuned for the exact CPU that is running the code.\n\nWAVM also leverages virtual memory and signal handlers to execute WebAssembly's bounds-checked\nmemory accesses at the same cost as a native, unchecked memory access.\n\n### Safe\n\nWAVM prevents WebAssembly code from accessing state outside of WebAssembly virtual machine*, or\ncalling native code that you do not explicitly link with the WebAssembly module.\n\n*&nbsp;WAVM <i>is</i> vulnerable to some side-channel attacks, such as Spectre variant 2. WAVM may\nadd further mitigations for specific side-channel attacks, but it's impractical to guard against\nall such attacks. You should use another form of isolation, such as OS processes, to protect\nsensitive data from untrusted WebAssembly code.\n\n### WebAssembly 1.0+\n\nWAVM fully supports WebAssembly 1.0, plus many proposed extensions to it:\n* [WASI](https://github.com/WebAssembly/WASI)\n* [128-bit SIMD](https://github.com/WebAssembly/simd)\n* [Threads](https://github.com/WebAssembly/threads)\n* [Reference types](https://github.com/WebAssembly/reference-types)\n* [Multiple results and block parameters](https://github.com/WebAssembly/multi-value)\n* [Bulk memory operations](https://github.com/webassembly/bulk-memory-operations)\n* [Non-trapping float-to-int conversions](https://github.com/WebAssembly/nontrapping-float-to-int-conversions)\n* [Sign-extension instructions](https://github.com/WebAssembly/sign-extension-ops)\n* [Exception handling](https://github.com/WebAssembly/exception-handling)\n* [Extended name section](https://github.com/WebAssembly/extended-name-section)\n* [Multiple memories](https://github.com/WebAssembly/multi-memory)\n\n### Portable\n\nWAVM is written in portable C/C++, with a small amount of architecture-specific assembly and LLVM\nIR generation code.\n\nWAVM is tested on and fully supports X86-64 Windows, MacOS, and Linux. It is designed to run on any\nPOSIX-compatible system, but is not routinely tested on other systems.\n\nSupport for AArch64 is a [work-in-progress](#76).\nWAVM mostly works on AArch64 Linux, but with some known bugs with handling WebAssembly stack\noverflow and partially out-of-bounds stores.\n\nWAVM's runtime requires a 64-bit virtual address space, and so is not portable to 32-bit hosts.\nHowever, WAVM's assembler and disassembler work on 32-bit hosts.\n\n[Portability Matrix](Doc/PortabilityMatrix.md)\n\n"
        },
        {
          "name": "THIRD-PARTY.md",
          "type": "blob",
          "size": 1.662109375,
          "content": "Third Party Software\n====================\n\nParts of the I128 code are derived from LLVM's compiler-rt library (https://github.com/llvm/llvm-project/tree/master/compiler-rt), which is covered by the license in https://github.com/WAVM/WAVM/blob/master/Include/WAVM/Inline/Impl/I128Impl.LICENSE.\n\nThe WebAssembly spec test suite (https://github.com/WAVM/WAVM/tree/master/Test/WebAssembly) are covered by the license in https://github.com/WAVM/WAVM/blob/master/Test/WebAssembly/LICENSE.txt.\n\nThe libunwind library (https://github.com/WAVM/WAVM/tree/master/ThirdParty/libunwind) is covered by the license in https://github.com/WAVM/WAVM/blob/master/ThirdParty/libunwind/LICENSE.TXT.\n\nThe liblmdb library (https://github.com/WAVM/WAVM/tree/master/ThirdParty/liblmdb) is covered by the license in https://github.com/WAVM/WAVM/blob/master/ThirdParty/liblmdb/LICENSE.\n\nThe xxhash library (https://github.com/WAVM/WAVM/tree/master/Include/WAVM/Inline/xxhash) is covered by the license in https://github.com/WAVM/WAVM/blob/master/Include/WAVM/Inline/xxhash/LICENSE.\n\nThe WASI ABI header (https://github.com/WAVM/WAVM/blob/master/Include/WAVM/WASI/WASIABI.h) is covered by the license in https://github.com/WAVM/WAVM/blob/master/Include/WAVM/WASI/WASIABI.LICENSE.\n\nThe WAVM C API (https://github.com/WAVM/WAVM/blob/master/Include/WAVM/wavm-c/wavm-c.h) is based on wasm-c-api (https://github.com/WebAssembly/wasm-c-api), which is covered by the license in https://github.com/WAVM/WAVM/blob/master/Include/WAVM/wavm-c/wasm-c-api.LICENSE.\n\nThe BLAKE2 library (https://github.com/WAVM/WAVM/tree/master/ThirdParty/BLAKE2) is covered by the license in https://github.com/WAVM/WAVM/blob/master/ThirdParty/BLAKE2/COPYING.\n"
        },
        {
          "name": "Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "ThirdParty",
          "type": "tree",
          "content": null
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.015625,
          "content": "0.0.0-prerelease"
        },
        {
          "name": "WebAssembly.tmLanguage",
          "type": "blob",
          "size": 78.4150390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>comment</key>\n\t<string></string>\n\t<key>fileTypes</key>\n\t<array>\n\t\t<string>wast</string>\n\t</array>\n\t<key>foldingStartMarker</key>\n\t<string>\\(</string>\n\t<key>foldingStopMarker</key>\n\t<string>\\)</string>\n\t<key>keyEquivalent</key>\n\t<string>^~L</string>\n\t<key>name</key>\n\t<string>WebAssembly</string>\n\t<key>patterns</key>\n\t<array>\n\t\t<dict>\n\t\t\t<key>captures</key>\n\t\t\t<dict>\n\t\t\t\t<key>1</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.comment.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(;;).*$\\n?</string>\n\t\t\t<key>name</key>\n\t\t\t<string>comment.line.semicolon.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>captures</key>\n\t\t\t<dict>\n\t\t\t\t<key>1</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.comment.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>match</key>\n\t\t\t<string>\\(;.*;\\)</string>\n\t\t\t<key>name</key>\n\t\t\t<string>comment.block.wasm</string>\n\t\t</dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])block(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])loop(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])if(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])then(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])else(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])end(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])try(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])catch(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])catch_all(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])unreachable(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])br(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])br_if(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])br_table(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])return(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])call_indirect(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])call(?=[\\s=();])</string><key>name</key><string>entity.name.function.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])drop(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])select(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])local\\.get(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])local\\.set(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])local\\.tee(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])global\\.get(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])global\\.set(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])table\\.get(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])table\\.set(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])nop(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])memory\\.size(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])memory\\.grow(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.load8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.load8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.load16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.load16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.store8(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.store16(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.store8(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.store16(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.store32(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.const(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.const(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.const(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.const(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.eqz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.lt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.lt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.gt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.gt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.le_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.le_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.ge_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.ge_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.eqz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.lt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.lt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.gt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.gt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.le_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.le_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.ge_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.ge_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.lt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.gt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.le(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.ge(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.lt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.gt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.le(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.ge(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.clz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.ctz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.popcnt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.div_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.div_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.rem_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.rem_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.and(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.or(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.xor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.rotl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.rotr(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.clz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.ctz(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.popcnt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.div_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.div_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.rem_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.rem_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.and(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.or(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.xor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.rotl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.rotr(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.abs(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.ceil(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.floor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.trunc(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.nearest(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.sqrt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.div(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.min(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.max(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.copysign(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.abs(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.ceil(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.floor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.trunc(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.nearest(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.sqrt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.div(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.min(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.max(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.copysign(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.wrap_i64(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.demote_f64(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.promote_f32(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.reinterpret_f32(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.reinterpret_f64(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.reinterpret_i32(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.reinterpret_i64(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.extend8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.extend16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])ref\\.null(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])ref\\.is_null(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])ref\\.func(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.const(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.extract_lane_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.extract_lane_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extract_lane_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extract_lane_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.extract_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.extract_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.extract_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.extract_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.replace_lane(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.swizzle(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.shuffle(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load8_splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load16_splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load32_splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load64_splat(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.narrow_i16x8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.narrow_i16x8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.narrow_i32x4_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.narrow_i32x4_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extend_low_i8x16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extend_high_i8x16_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extend_low_i8x16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.extend_high_i8x16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.extend_low_i16x8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.extend_high_i16x8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.extend_low_i16x8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.extend_high_i16x8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.add_sat_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.add_sat_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.add_sat_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.add_sat_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.sub_sat_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.sub_sat_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.sub_sat_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.sub_sat_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.min_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.min_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.min_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.min_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.min_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.min_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.min_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.min_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.max_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.max_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.max_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.max_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.max_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.max_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.max_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.max_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.avgr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.avgr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.shl(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.shr_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.shr_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.and(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.or(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.xor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.not(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.bitselect(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.any_true(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.all_true(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.all_true(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.all_true(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.all_true(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.eq(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.ne(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.lt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.lt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.lt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.lt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.lt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.lt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.lt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.lt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.le_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.le_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.le_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.le_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.le_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.le_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.le(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.le(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.gt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.gt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.gt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.gt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.gt_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.gt_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.gt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.gt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.ge_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.ge_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.ge_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.ge_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.ge_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.ge_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.ge(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.ge(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.neg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.abs(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.abs(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.min(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.min(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.max(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.max(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.div(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.div(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.mul(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.sqrt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.sqrt(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.convert_i32_sx4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.convert_i32_ux4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.convert_i64_sx2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.convert_i64_ux2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.trunc_sat_f32x4_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.trunc_sat_f32x4_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.trunc_sat_f64x2_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.trunc_sat_f64x2_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load8x8_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load8x8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load16x4_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load16x4_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load32x2_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.load32x2_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v128\\.andnot(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.load_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.load_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.load_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.load_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.load_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.load_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.load_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.load_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.load_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.load_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.load_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.load_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.store_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.store_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v8x16\\.store_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.store_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.store_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v16x8\\.store_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.store_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.store_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v32x4\\.store_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.store_interleaved_2(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.store_interleaved_3(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])v64x2\\.store_interleaved_4(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i8x16\\.ltz_mask(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i16x8\\.ltz_mask(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.ltz_mask(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])atomic\\.notify(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.wait(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.wait(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])atomic\\.fence(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.load(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.load8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.load16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.load8_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.load16_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.load32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.store(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.store8(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.store16(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.store8(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.store16(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.store32(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.add(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.add_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.add_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.add_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.add_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.add_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.sub(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.sub_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.sub_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.sub_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.sub_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.sub_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.and(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.and(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.and_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.and_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.and_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.and_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.and_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.or(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.or(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.or_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.or_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.or_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.or_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.or_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.xor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.xor(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.xor_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.xor_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.xor_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.xor_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.xor_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.xchg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.xchg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.xchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.xchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.xchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.xchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.xchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw\\.cmpxchg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw\\.cmpxchg(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw8\\.cmpxchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.atomic\\.rmw16\\.cmpxchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw8\\.cmpxchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw16\\.cmpxchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.atomic\\.rmw32\\.cmpxchg_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])throw(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])rethrow(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])memory\\.init(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])data\\.drop(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])memory\\.copy(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])memory\\.fill(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])table\\.init(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])elem\\.drop(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])table\\.copy(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])get_local(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])set_local(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])tee_local(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])get_global(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])set_global(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.convert_i32x4_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32x4\\.convert_i32x4_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.convert_i64x2_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64x2\\.convert_i64x2_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.trunc_sat_f32x4_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32x4\\.trunc_sat_f32x4_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.trunc_sat_f64x2_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64x2\\.trunc_sat_f64x2_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.extend_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f32\\.convert_i64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])f64\\.convert_i64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i32\\.trunc_sat_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f32_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f32_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f64_s(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict><key>match</key><string>(?&lt;=[\\s=();])i64\\.trunc_sat_f64_u(?=[\\s=();])</string><key>name</key><string>keyword.operator.wasm</string></dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])(module|binary|quote|memory|table|data|elem|passive|type|import|export|global|exception_type|ref\\.host|func|param|result|local|calling_conv)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.function.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])(assert_return|assert_return_arithmetic|assert_return_canonical_nan|assert_return_func|assert_trap|assert_throws|assert_invalid|assert_malformed|assert_unlinkable|invoke|get)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>entity.name.function.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])((align|offset)=)</string>\n\t\t\t<key>name</key>\n\t\t\t<string>support.function.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])[+\\-]?nan((\\:0[xX][\\da-fA-F]+(_[\\da-fA-F]+)*)?(?=[\\s=();])|canonical|arithmetic)</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?inf)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?0[xX][\\da-fA-F]+(_[\\da-fA-F]+)*\\.([\\da-fA-F]+(_[\\da-fA-F]+)*)*([pP][+\\-]?\\d+(_\\d+)*)?)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?0[xX][\\da-fA-F]+(_[\\da-fA-F]+)*[pP][+\\-]?\\d+(_\\d+)*)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?\\d+(_\\d+)*)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?\\d+(_\\d+)*\\.(\\d+(_\\d+)*)*([eE][+\\-]?\\d+(_\\d+)*)?)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?\\d+(_\\d+)*[eE][+\\-]?\\d+(_\\d+)*)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])([+\\-]?0[xX][\\da-fA-F]+(_[\\da-fA-F]+)*)(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.numeric.wasm</string>\n\t\t</dict>\n\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])\\$[a-zA-Z0-9'_+*/~=&lt;&gt;!?@#$%&|:`.\\-\\^\\\\]+(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.parameter.function.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])\\$\"([^\"&#10;\\\\]*(\\\\.)*)*\"(?=[\\s=();])</string>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.parameter.function.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>begin</key>\n\t\t\t<string>(?&lt;=[\\s=();])$\"</string>\n\t\t\t<key>beginCaptures</key>\n\t\t\t<dict>\n\t\t\t\t<key>0</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.string.begin.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>end</key>\n\t\t\t<string>\"(?=[\\s=();])</string>\n\t\t\t<key>endCaptures</key>\n\t\t\t<dict>\n\t\t\t\t<key>0</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.string.end.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>name</key>\n\t\t\t<string>variable.parameter.function.wasm</string>\n\t\t\t<key>patterns</key>\n\t\t\t<array>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>match</key>\n\t\t\t\t\t<string>\\\\([0-9a-fA-F]{2}|\\\"|\\\\)</string>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>constant.character.escape.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</array>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>begin</key>\n\t\t\t<string>(?&lt;=[\\s=();])\"</string>\n\t\t\t<key>beginCaptures</key>\n\t\t\t<dict>\n\t\t\t\t<key>0</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.string.begin.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>end</key>\n\t\t\t<string>\"(?=[\\s=();])</string>\n\t\t\t<key>endCaptures</key>\n\t\t\t<dict>\n\t\t\t\t<key>0</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>punctuation.definition.string.end.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.character</string>\n\t\t\t<key>patterns</key>\n\t\t\t<array>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>match</key>\n\t\t\t\t\t<string>\\\\([0-9a-fA-F]{2}|\\\"|\\\\)</string>\n\t\t\t\t\t<key>name</key>\n\t\t\t\t\t<string>constant.character.escape.wasm</string>\n\t\t\t\t</dict>\n\t\t\t</array>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])(i8x16|i16x8|i32x4|i64x2|f32x4|f64x2)</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.language.wasm</string>\n\t\t</dict>\n\t\t<dict>\n\t\t\t<key>match</key>\n\t\t\t<string>(?&lt;=[\\s=();])(i32|i64|f32|f64|v128|mut|anyfunc|funcref|externref|extern|shared)</string>\n\t\t\t<key>name</key>\n\t\t\t<string>constant.language.wasm</string>\n\t\t</dict>\n\t</array>\n\t<key>scopeName</key>\n\t<string>source.wasm</string>\n\t<key>uuid</key>\n\t<string>F01196A6-B58F-465B-A75D-4CF5D69A0019</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 9.736328125,
          "content": "stages:\n  - stage:\n    displayName: Build\n    jobs:\n      # clang-format checker\n      - job: CheckClangFormat\n        displayName: Check clang-format\n        pool: {vmImage: 'ubuntu-latest'}\n        container: 'wavm/clang-format-check:latest'\n        steps:\n          - script: |\n              find \\\n                . \\( -iname \"*.h\" -o -iname \"*.cpp\" \\) \\\n                -not -path \"./ThirdParty/*\" \\\n                -not -path \"./Include/WAVM/Inline/xxhash/*\" \\\n                | xargs clang-format-9 -i \\\n\n              git diff --exit-code\n\n      # Win64 VS2019\n      - template: Build/azure-pipelines/windows-build-job-template.yml\n        parameters:\n          name: Win64_VS2019\n          vsVersion: '2019'\n          platform: 'x64'\n          llvmBuildBaseName: 'Win64'\n          llvmVersion: '9.x'\n\n      # Win32 VS2019\n      - template: Build/azure-pipelines/windows-build-job-template.yml\n        parameters:\n          name: Win32_VS2019\n          vsVersion: '2019'\n          platform: 'x86'\n          llvmBuildBaseName: 'Win32'\n          llvmVersion: '9.x'\n\n      # Ubuntu 19.10 GCC\n      - template: Build/azure-pipelines/posix-build-job-template.yml\n        parameters:\n          name: Ubuntu1910_GCC\n          vmImage: 'ubuntu-latest'\n          container: 'wavm/ubuntu19.10-builder:latest'\n          llvmBuildBaseName: 'Ubuntu1910'\n          llvmVersion: '9.x'\n          cpackGenerators: 'TGZ;DEB'\n          compiler: 'gcc'\n\n      # Ubuntu 16.04 GCC\n      - template: Build/azure-pipelines/posix-build-job-template.yml\n        parameters:\n          name: Ubuntu1604_GCC\n          vmImage: 'ubuntu-latest'\n          container: 'wavm/ubuntu16.04-builder:latest'\n          llvmBuildBaseName: 'Ubuntu1604'\n          llvmVersion: '9.x'\n          cpackGenerators: 'TGZ;DEB'\n          compiler: 'gcc'\n\n      # Ubuntu 16.04 Clang\n      - template: Build/azure-pipelines/posix-build-job-template.yml\n        parameters:\n          name: Ubuntu1604_Clang\n          vmImage: 'ubuntu-latest'\n          container: 'wavm/ubuntu16.04-builder:latest'\n          llvmBuildBaseName: 'Ubuntu1604'\n          llvmVersion: '9.x'\n          cpackGenerators: 'TGZ;DEB'\n          compiler: 'clang'\n\n      # CentOS 7.0 Clang\n      - template: Build/azure-pipelines/posix-build-job-template.yml\n        parameters:\n          name: CentOS70_Clang\n          vmImage: 'ubuntu-latest'\n          container: 'wavm/centos7.0-builder:latest'\n          llvmBuildBaseName: 'Centos70'\n          llvmVersion: '9.x'\n          cpackGenerators: 'TGZ;RPM'\n          compiler: 'clang'\n\n      # MacOS 10.14\n      - template: Build/azure-pipelines/posix-build-job-template.yml\n        parameters:\n          name: MacOS\n          vmImage: 'macOS-10.15'\n          llvmBuildBaseName: 'MacOS'\n          llvmVersion: '9.x'\n          cpackGenerators: 'TGZ'\n          compiler: 'appleClang'\n          toolchainInstallSteps:\n            - script: brew install ninja\n              displayName: Install Ninja\n\n  # Do some basic testing that the packaged builds install and work as expected.\n  - stage:\n    displayName: Test packages\n    jobs:\n\n      # Windows installer\n      - template: Build/azure-pipelines/test-package-job-template.yml\n        parameters:\n          name: 'WindowsInstaller'\n          matrix:\n            Windows2019: {vmImage: 'windows-2019',     container: ''}\n          examplesDir: 'C:\\Program Files\\WAVM\\examples'\n          executable: 'C:\\Program Files\\WAVM\\bin\\wavm.exe'\n          artifactName: 'Win64_VS2019_LTO'\n          installSteps:\n            # Run the installer in silent mode. Since it's not a command-line app, we need to use\n            # \"start /wait\" to wait for it to complete.\n            - script: |\n                dir /s $(Build.ArtifactStagingDirectory) || exit 1\n                echo \"PATH=%PATH%\"\n                start /wait $(Build.ArtifactStagingDirectory)\\wavm-package.exe /S || exit 1\n                dir /s \"C:\\Program Files\\WAVM\"\n                echo \"PATH=%PATH%\" || exit 1\n              displayName: Run installer\n\n      # DEB package\n      - template: Build/azure-pipelines/test-package-job-template.yml\n        parameters:\n          name: 'LinuxDEB'\n          matrix:\n            Ubuntu1604: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu16.04'}\n            Ubuntu1804: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu18.04'}\n            Ubuntu1904: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu19.04'}\n            Debian9:    {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:debian9'}\n            Debian10:   {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:debian10'}\n          useContainer: true\n          examplesDir: '/usr/share/wavm/examples'\n          artifactName: 'Ubuntu1604_Clang_LTO'\n          installSteps:\n            - script: |\n                sudo apt-get install -y $(Build.ArtifactStagingDirectory)/wavm-package.deb || exit 1\n                echo \"which wavm: `which wavm`\" || exit 1\n                echo \"ldd wavm:\" || exit 1\n                ldd -v `which wavm` || exit 1\n              displayName: apt-get install\n\n      # RPM package\n      - template: Build/azure-pipelines/test-package-job-template.yml\n        parameters:\n          name: 'LinuxRPM'\n          matrix:\n            CentOS7x:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos7'}\n            CentOS70:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos7.0'}\n            CentOS8x:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos8'}\n            Fedora29:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:fedora29'}\n            Fedora30:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:fedora30'}\n            Fedora31:        {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:fedora31'}\n            OpenSUSELeap150: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:opensuseleap15.0'}\n            OpenSUSELeap151: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:opensuseleap15.1'}\n          useContainer: true\n          examplesDir: '/usr/share/wavm/examples'\n          artifactName: 'CentOS70_Clang_LTO'\n          installSteps:\n            - script: |\n                sudo rpm -i $(Build.ArtifactStagingDirectory)/wavm-package.rpm || exit 1\n                echo \"which wavm: `which wavm`\" || exit 1\n                echo \"ldd wavm:\" || exit 1\n                ldd -v `which wavm` || exit 1\n              displayName: rpm install\n\n      # Linux archive\n      - template: Build/azure-pipelines/test-package-job-template.yml\n        parameters:\n          name: 'LinuxTGZ'\n          matrix:\n            CentOS7x:   {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos7'}\n            CentOS70:   {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos7.0'}\n            CentOS8x:   {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-rpm:centos8'}\n            Ubuntu1604: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu16.04'}\n            Ubuntu1804: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu18.04'}\n            Ubuntu1904: {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:ubuntu19.04'}\n            Debian8:    {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:debian8'}\n            Debian9:    {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:debian9'}\n            Debian10:   {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-deb:debian10'}\n            ArchLinux:  {vmImage: 'ubuntu-latest', container: 'wavm/package-tester-pacman:archlinux'}\n          useContainer: true\n          examplesDir: '/opt/wavm/share/wavm/examples'\n          executable: '/opt/wavm/bin/wavm'\n          artifactName: 'CentOS70_Clang_StaticLTO'\n          installSteps:\n            - script: |\n                sudo mkdir -p /opt/wavm || exit 1\n                sudo tar -xz -C /opt/wavm -f $(Build.ArtifactStagingDirectory)/wavm-package.tar.gz || exit 1\n                ldd -v /opt/wavm/bin/wavm || exit 1\n              displayName: Extract archive\n\n      # MacOS TGZ\n      - template: Build/azure-pipelines/test-package-job-template.yml\n        parameters:\n          name: 'MacOSTGZ'\n          matrix:\n            MacOS1014: {vmImage: 'macOS-10.15', container: ''}\n          examplesDir: '/usr/local/share/wavm/examples'\n          artifactName: 'MacOS_StaticLTO'\n          installSteps:\n            - script: |\n                sudo tar -xz -C /usr/local -f $(Build.ArtifactStagingDirectory)/wavm-package.tar.gz\n                echo \"which wavm: `which wavm`\"\n              displayName: Extract archive\n\n\n  # Nightly build job\n  - stage:\n    displayName: Create nightly GitHub release\n    jobs:\n      - template: Build/azure-pipelines/release-job-template.yml\n\n  # Notify Discord of success or failure.\n  # AFAICT the Azure Pipelines succeeded() and failed() predicates aren't able to observe the\n  # result of other stages unless they are in the stage condition.\n  - stage:\n    displayName: Notify Discord (succeeded)\n    condition: succeeded()\n    jobs:\n      - job: NotifyDiscordSuccess\n        displayName: Notify Discord (succeeded)\n        pool: { vmImage: macOS-10.15 }\n        steps:\n        - bash: $(Build.SourcesDirectory)/Build/notify-discord.sh success $DISCORD_WEBHOOK_URL\n          displayName: Notify Discord\n          env: { DISCORD_WEBHOOK_URL: $(DISCORD_WEBHOOK_URL) }\n  - stage:\n    displayName: Notify Discord (failed)\n    condition: failed()\n    jobs:\n      - job: NotifyDiscordFailure\n        displayName: Notify Discord (failed)\n        pool: { vmImage: macOS-10.15 }\n        steps:\n        - bash: $(Build.SourcesDirectory)/Build/notify-discord.sh failure $DISCORD_WEBHOOK_URL\n          displayName: Notify Discord\n          env: { DISCORD_WEBHOOK_URL: $(DISCORD_WEBHOOK_URL) }"
        },
        {
          "name": "run-clang-format.sh",
          "type": "blob",
          "size": 0.1376953125,
          "content": "find . \\( -iname \"*.h\" -o -iname \"*.cpp\" \\) -not -path \"./ThirdParty/*\" -not -path \"./Include/WAVM/Inline/xxhash/*\" | xargs clang-format-9 -i"
        },
        {
          "name": "vs-chromium-project.txt",
          "type": "blob",
          "size": 0.1630859375,
          "content": "[SourceExplorer.ignore]\n.git\n*.wasm\n\n[SearchableFiles.include]\nDockerfile\n*.c\n*.cpp\n*.h\n*.inl\n*.md\n*.tmLanguage\n*.txt\n*.wast\n*.wat\n*.yml\n\n[SearchableFiles.ignore]\n.git"
        }
      ]
    }
  ]
}