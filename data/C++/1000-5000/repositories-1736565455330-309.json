{
  "metadata": {
    "timestamp": 1736565455330,
    "page": 309,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebook/mcrouter",
      "stars": 3265,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2353515625,
          "content": "# Code of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please [read the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.22265625,
          "content": "# Contributing to mcrouter\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## License\nBy contributing to mcrouter, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8662109375,
          "content": "# Mcrouter [![Build Status](https://github.com/facebook/mcrouter/workflows/build/badge.svg)](https://github.com/facebook/mcrouter/actions?workflow=build)\n[![Support Ukraine](https://img.shields.io/badge/Support-Ukraine-FFD500?style=flat&labelColor=005BBB)](https://opensource.fb.com/support-ukraine) [![License](https://img.shields.io/badge/license-MIT-blue)](https://github.com/facebook/mcrouter/blob/master/LICENSE)\n\nMcrouter (pronounced mc router) is a memcached protocol router for scaling [memcached](https://memcached.org/)\ndeployments. It's a core component of cache\ninfrastructure at Facebook and Instagram where mcrouter handles almost\n5 billion requests per second at peak.\n\nMcrouter is developed and maintained by Facebook.\n\nSee https://github.com/facebook/mcrouter/wiki to get started.\n\n## Quick start guide\n\n### New! Ubuntu package available\n\nCurrently, we support Ubuntu Bionic (18.04) amd64.\nHere is how to install it:\n\nAdd the repo key:\n\n    $ wget -O - https://facebook.github.io/mcrouter/debrepo/bionic/PUBLIC.KEY | sudo apt-key add\n\nAdd the following line to apt sources file /etc/apt/sources.list\n\n    deb https://facebook.github.io/mcrouter/debrepo/bionic bionic contrib\n\nUpdate the local repo cache:\n\n    $ sudo apt-get update\n\nInstall mcrouter:\n\n    $ sudo apt-get install mcrouter\n\n\n### Installing From Source\n\nSee https://github.com/facebook/mcrouter/wiki/mcrouter-installation for more\ndetailed installation instructions.\n\nMcrouter depends on [folly](https://github.com/facebook/folly), [wangle](https://github.com/facebook/wangle), [fizz](https://github.com/facebookincubator/fizz), and [fbthrift](https://github.com/facebook/fbthrift).\n\nThe installation is a standard autotools flow:\n\n    $ autoreconf --install\n    $ ./configure\n    $ make\n    $ sudo make install\n    $ mcrouter --help\n\nAssuming you have a memcached instance on the local host running on port 5001,\nthe simplest mcrouter setup is:\n\n    $ mcrouter \\\n        --config-str='{\"pools\":{\"A\":{\"servers\":[\"127.0.0.1:5001\"]}},\n                      \"route\":\"PoolRoute|A\"}' \\\n        -p 5000\n    $ echo -ne \"get key\\r\\n\" | nc 0 5000\n\n(nc is the GNU Netcat, http://netcat.sourceforge.net/)\n\n## Features\n\n+ Memcached ASCII protocol\n+ Connection pooling\n+ Multiple hashing schemes\n+ Prefix routing\n+ Replicated pools\n+ Production traffic shadowing\n+ Online reconfiguration\n+ Flexible routing\n+ Destination health monitoring/automatic failover\n+ Cold cache warm up\n+ Broadcast operations\n+ Reliable delete stream\n+ Multi-cluster support\n+ Rich stats and debug commands\n+ Quality of service\n+ Large values\n+ Multi-level caches\n+ IPv6 support\n+ SSL support\n\n## Links\n\nDocumentation: https://github.com/facebook/mcrouter/wiki\nEngineering discussions and support: https://www.facebook.com/groups/mcrouter\n\n## License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nLicensed under the MIT license:\nhttps://github.com/facebook/mcrouter/blob/master/LICENSE\n"
        },
        {
          "name": "mcrouter",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}