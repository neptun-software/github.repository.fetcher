{
  "metadata": {
    "timestamp": 1736565915283,
    "page": 882,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OctoMap/octomap",
      "stars": 1999,
      "defaultBranch": "devel",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.392578125,
          "content": "# temp. editor backups:\n*~\n\n# generated content / project files:\n.project\n.cproject\ndoc\nhtml\n.qglviewer.xml\n\n# build output:\nlib\nbin\nbuild\ncallgrind.out*\n\n# in case someone runs an in-source build:\nCMakeCache.txt\ncmake_install.cmake\nCPackConfig.cmake\nCMakeFiles\nCPackSourceConfig.cmake\ninstall_manifest.txt\nMakefile\n\n# our binary files, in case someone forgets them in the source dir:\n*.bt\n*.ot\n*.graph"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3359375,
          "content": "language: cpp\nsudo: required\ndist: bionic\ncompiler:\n  - gcc\n  - clang\nbefore_install:\n  - sudo apt-get update -qq\n  - sudo apt-get install -qq libqglviewer-dev-qt5\nbefore_script:\nscript: ./scripts/travis_build_jobs.sh $VARIANT\nenv:\n  - VARIANT=dist\n  - VARIANT=components\nmatrix:\n  exclude:\n    - compiler: clang\n      env: VARIANT=components\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.658203125,
          "content": "CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)\nPROJECT( octomap-distribution )\n\nENABLE_TESTING()  # enable CTest environment of subprojects\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)  # enables -fPIC in applicable compilers (required to avoid link errors in some cases)\n\noption(BUILD_OCTOVIS_SUBPROJECT \"Build targets from subproject octovis\" ON)\noption(BUILD_DYNAMICETD3D_SUBPROJECT  \"Build targets from subproject dynamicEDT3D\" ON)\noption(OCTOVIS_QT5 \"Link Octovis against Qt5?\" ON)\n\nset(CMAKE_CXX_STANDARD 11)\n\nADD_SUBDIRECTORY( octomap )\n\nif(BUILD_OCTOVIS_SUBPROJECT)\n\tADD_SUBDIRECTORY( octovis )\nendif()\n\nif(BUILD_DYNAMICETD3D_SUBPROJECT)\n\tADD_SUBDIRECTORY( dynamicEDT3D )\nendif()\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.572265625,
          "content": "OctoMap - An Efficient Probabilistic 3D Mapping Framework Based on Octrees.\n===========================================================================\n\nhttp://octomap.github.io\n\nOriginally developed by Kai M. Wurm and Armin Hornung, University of Freiburg, Copyright (C) 2009-2014.\nCurrently maintained by [Armin Hornung](https://github.com/ahornung).\nSee the [list of contributors](octomap/AUTHORS.txt) for further authors.\n\nLicense: \n  * octomap: [New BSD License](octomap/LICENSE.txt)\n  * octovis and related libraries: [GPL](octovis/LICENSE.txt)\n\n\nDownload the latest releases:\n  https://github.com/octomap/octomap/releases\n\nAPI documentation:\n  https://octomap.github.io/octomap/doc/\n  \nBuild status: \n  [![Build Status](https://travis-ci.org/OctoMap/octomap.png?branch=devel)](https://travis-ci.org/OctoMap/octomap)\n  \nReport bugs and request features in our tracker:\n  https://github.com/OctoMap/octomap/issues\n\nA list of changes is available in the [octomap changelog](octomap/CHANGELOG.txt)\n\n\nOVERVIEW\n--------\n\nOctoMap consists of two separate libraries each in its own subfolder:\n**octomap**, the actual library, and **octovis**, our visualization libraries and tools.\nThis README provides an overview of both, for details on compiling each please \nsee [octomap/README.md](octomap/README.md) and [octovis/README.md](octovis/README.md) respectively.\nSee http://www.ros.org/wiki/octomap and http://www.ros.org/wiki/octovis if you \nwant to use OctoMap in ROS; there are pre-compiled packages available.\n\nYou can build each library separately with CMake by running it from the subdirectories, \nor build octomap and octovis together from this top-level directory. E.g., to\nonly compile the library, run:\n\n    cd octomap\n    mkdir build\n    cd build\n    cmake ..\n    make\n  \nTo compile the complete package, run:\n\n    cd build\n    cmake ..\n    make\n  \nBinaries and libs will end up in the directories `bin` and `lib` of the\ntop-level directory where you started the build.\n\nAlternatively, you can build and install octomap using [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install octomap\n\nThe octomap port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\nSee [octomap README](octomap/README.md) and [octovis README](octovis/README.md) for further\ndetails and hints on compiling, especially under Windows.\n"
        },
        {
          "name": "dynamicEDT3D",
          "type": "tree",
          "content": null
        },
        {
          "name": "octomap",
          "type": "tree",
          "content": null
        },
        {
          "name": "octovis",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}