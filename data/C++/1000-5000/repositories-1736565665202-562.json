{
  "metadata": {
    "timestamp": 1736565665202,
    "page": 562,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coronalabs/corona",
      "stars": 2566,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.9013671875,
          "content": "*.xcuserdatad/\n/Corona*/\n\n# Hidden files used by the Finder in MacOS\n.DS_Store\n.Trashes\n.com.apple.timemachine.supported\n.fseventsd/*\n.TemporaryItems/*\nDesktop DB\nDesktop DF\n\n/docs/\n/Corona-*.dmg\n/CoronaSDK-dsym-*.zip\n/docs.zip\n\n# Eclipse\n.metadata/*\n\n.vscode\n.idea\nIDEWorkspaceChecks.plist\n\n# Build results\n[Dd]ebug/\n[Rr]elease/\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# Build files\n**/build/**\n*.pbxuser\n*.perspective*\n*.mode1\n*.mode1v3\n*.orig\n*.class\n*.apk\n*.ap_\n*.obj\n*.bak\n*.dex\n*.so\n*.ncb\n*.opensdf\n*.sdf\n*.suo\n*.idb\n*.ipch\n*.pdb\n*.ilk\n*.lu\n*._*\ncontents.xcworkspacedata\n*.xccheckout\n*.xcbkptlist\n*.rej\n2100.9999_template_*_basic.tar.bz\n*.log\ntools/CoronaBuilder/_CoronaSetup_*.lua\n\n# Enterprise\nenterprise/CoronaTemplateApp/Libraries/*\nenterprise/*.zip\ntools/enterprise/CoronaEnterprise/*\n\n# Plugins\nplugins/ads/win32/*ads.c\nplugins/**/android/bin/*\nplugins/**/android/gen/*\nplugins/**/android/libs/*\nplugins/analytics/win32/*analytics.c\n\nplatform/switch/\n\n# Windows\n# autogenerated from Lua\nplatform/win32/simulator/Setup/Intermediate/*\nplatform/win32/CoronaLibrary_lua.cpp\nplatform/win32/CoronaPrototype.cpp\nplatform/win32/CoronaProvider.cpp\nplatform/win32/config_require.cpp\nplatform/win32/create_build_properties.cpp\nplatform/win32/easing.cpp\nplatform/win32/init.cpp\nplatform/win32/json.cpp\nplatform/win32/dkjson.cpp\nplatform/win32/launchpad.cpp\nplatform/win32/re.cpp\nplatform/win32/runtime.cpp\nplatform/win32/shell.cpp\nplatform/win32/storyboard.cpp\nplatform/win32/timer.cpp\nplatform/win32/transition.cpp\nplatform/win32/widget.cpp\nplatform/win32/widget_button.cpp\nplatform/win32/widget_picker.cpp\nplatform/win32/widget_scrollview.cpp\nplatform/win32/widget_slider.cpp\nplatform/win32/widget_tabbar.cpp\nplatform/win32/widget_tableview.cpp\nplatform/win32/widget_*.cpp\nplatform/win32/remdebug_engine.cpp\nplatform/win32/remdebug_engine.lua\nplatform/win32/simulatorAnalytics.cpp\nplatform/win32/transition_v1.cpp\nplatform/win32/composer.cpp\nplatform/win32/composer_scene.cpp\nplatform/win32/webPackageApp.cpp\nplatform/windows/Bin/*\nplatform/windows/**/Bin/*\nplatform/windows/**/Generated Files/*\nplatform/windows/**/PerfLogs/*\nplatform/windows/**/obj/*\nplatform/windows/**/Debug.App/*\nplatform/windows/**/Debug.Simulator/*\nplatform/windows/**/Release.App/*\nplatform/windows/**/Release.Simulator/*\nplatform/windows/**/Debug/\nplatform/windows/**/PreRelease/\nplatform/windows/**/Release/\n\n# Android\n*/libs/armeabi/*\n*/gdb.setup\nplatform/android/bin\nplatform/android/project/corona/obj/*\nplatform/android/ndk/generated/*\nplatform/android/ndk/obj/*\nplatform/android/ndk/libs/*\nplatform/android/sdk/assets/*\nplatform/android/sdk/bin/*\nplatform/android/sdk/gen/*\nplatform/android/sdk/libs/*\nplatform/android/sdk/res/raw/corona_3rd_party_licenses.txt\nplatform/android/sdk/res/raw/corona_asset_*\nplatform/android/template/coreJars\nplatform/android/template/external-libs-paths\nplatform/android/template/externals\nplatform/android/template/res\nexternal/facebook-android-sdk/facebook/bin\nexternal/facebook-android-sdk/facebook/gen\nexternal/OpenFeintSDK.1.9.3/OpenFeintAPI/bin\nexternal/OpenFeintSDK.1.9.3/OpenFeintAPI/gen\nexternal/papaya-corona-sdk-global-1.7.1/Library/bin\nexternal/papaya-corona-sdk-global-1.7.1/Library/gen\nexternal/SuperRewards-Android-SDK/bin\nexternal/SuperRewards-Android-SDK/gen\nlocal.properties\nplatform/android/sdk/src/com/ansca/corona/SplashScreenBeacon.java\nplatform/android/template/template/\n\n# iOS\n*/iphone/template/*\n*/iphone/template-dSYM/*\n*/iphone/template-logs/*\n*/platform/*.zip\n*/platform/iphone/log-*.txt\nplatform/iphone/template*.zip\n*/platform/android/project/corona/project/jni/corona-root\n*/CoronaLib.jar\n\n\nkernel_*.cpp\nshell_default_gl.cpp\nplatform/test/**\nplatform/test/assets/*\nbin/mac/LuaCocoa.framework/**\nbin/mac/logs/**\nbin/mac/tmp/**\nsdk/Corona**\n*/Debug/*\n*/Release/*\n*/PowerVRDebug/*\n*.aps\n*.o\n*.o.d\n*/corona-root.lnk\n*.user\nplatform/android/resources/FastFileCreate\nplugins/ads-inmobi/android/AndroidManifest\\.xml\nplugins/ads-inmobi/android/proguard-project\\.txt\nplugins/ads-inmobi/android/project\\.properties\n\nplatform/mac/CoronaLiveServer/libs/bin\nplatform/mac/CoronaLiveServer/libs/ssl\nplatform/mac/CoronaLiveServer/libevent\nplatform/mac/CoronaLiveServer/openssl\nplatform/linux/lua\nplatform/linux/linux_rtt.txt\nplatform/linux/linuxtemplate.tar.gz\nplatform/linux/raspbiantemplate.tar.gz\nplatform/linux/rtt.mk\nplatform/linux/rtt_arm.mk\nplatform/linux/deb/\nplatform/linux/deb_arm/\n\ntools/node-post\n# ignore abandoned, prototyes and closed source\nplatform/bada\nplatform/gametree\nplatform/nintendo\nplatform/symbian\nplatform/webos\n\n.hg*\n_hg/\n*.p12\n*.cert\n/platform/windows/Build.Tools/CoronaLabsInc.pfx\npremake4.lua\n\n\n!bin/mac/lfs.so\n!platform/linux/deb/CONTENTS\n!platform/test/assets/main.lua\nlibrtt/Renderer/ios/build\nlibrtt/Renderer/mac/build\n\n#large file\nexternal/vulkan/Lib32/shaderc_combinedd.lib\n\n#legacy entries\n/plugins/viewer\nexternal/DeskMetrics\nexternal/InMobi\nexternal/inneractive\nexternal/facebook-ios-sdk\nexternal/facebook-android-sdk\nplugins/ads-inmobi\nplugins/ads-inneractive\ncommit-email.sh\nplatform/resources/iostemplate\nplatform/tvos/license.ccdata\nplatform/resources/nxtemplate\n\nplatform/iphone/*.tar.bz\nplatform/tvos/*.tar.bz\n/*_output.zip\n/corona.tar.gz\n/CoronaNative.tar.gz\nsdk/dmg/bgp.png\nsdk/dmg/bgp@2x.png\nsdk/dmg/processed_appdmg.json\nexternal/JNLua/.settings/\nexternal/JNLua/target/\nexternal/JNLua/.classpath\nexternal/JNLua/.project\n/output/\n\n/jre/\n/jre.macos.tgz\njre.win32.7z\nredist.win32.7z\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.884765625,
          "content": "[submodule \"external/Box2D\"]\n\tpath = external/Box2D\n\turl = https://github.com/coronalabs/submodule-box2d.git\n\tbranch = master\n[submodule \"external/CryptoPP\"]\n\tpath = external/CryptoPP\n\turl = https://github.com/coronalabs/submodule-CryptoPP.git\n\tbranch = master\n[submodule \"external/freetype-2.9\"]\n\tpath = external/freetype-2.9\n\turl = https://github.com/coronalabs/submodule-freetype.git\n\tbranch = master\n[submodule \"external/live-libs\"]\n\tpath = external/live-libs\n\turl = https://github.com/coronalabs/submodule-live-libs.git\n\tbranch = master\n[submodule \"external/luafilesystem\"]\n\tpath = external/luafilesystem\n\turl = https://github.com/coronalabs/submodule-lfs.git\n\tbranch = master\n[submodule \"external/luasocket\"]\n\tpath = external/luasocket\n\turl = https://github.com/coronalabs/submodule-luasocket.git\n\tbranch = master\n[submodule \"external/openal-soft_apportable\"]\n\tpath = external/openal-soft_apportable\n\turl = https://github.com/coronalabs/submodule-openal-soft_apportable.git\n\tbranch = master\n[submodule \"plugins/build\"]\n\tpath = plugins/build\n\turl = https://github.com/coronalabs/submodule-plugins-build.git\n\tbranch = master\n[submodule \"plugins/build-core\"]\n\tpath = plugins/build-core\n\turl = https://github.com/coronalabs/submodule-plugins-build-core.git\n\tbranch = master\n[submodule \"plugins/gameNetwork\"]\n\tpath = plugins/gameNetwork\n\turl = https://github.com/coronalabs/submodule-plugins-gameNetwork.git\n\tbranch = master\n[submodule \"plugins/licensing\"]\n\tpath = plugins/licensing\n\turl = https://github.com/coronalabs/submodule-plugins-licensing\n\tbranch = master\n[submodule \"plugins/network\"]\n\tpath = plugins/network\n\turl = https://github.com/coronalabs/submodule-plugins-network\n\tbranch = master\n[submodule \"simulator-extensions/welcomescreen\"]\n\tpath = simulator-extensions/welcomescreen\n\turl = https://github.com/coronalabs/submodule-welcomescreen.git\n\tbranch = master\n[submodule \"subrepos/enterprise\"]\n\tpath = subrepos/enterprise\n\turl = https://github.com/coronalabs/submodule-native.git\n\tbranch = master\n[submodule \"subrepos/easing\"]\n\tpath = subrepos/easing\n\turl = https://github.com/coronalabs/framework-easing.git\n\tbranch = master\n[submodule \"subrepos/transition\"]\n\tpath = subrepos/transition\n\turl = https://github.com/coronalabs/framework-transition.git\n\tbranch = master\n[submodule \"subrepos/widget\"]\n\tpath = subrepos/widget\n\turl = https://github.com/coronalabs/framework-widget.git\n\tbranch = master\n[submodule \"subrepos/timer\"]\n\tpath = subrepos/timer\n\turl = https://github.com/coronalabs/framework-timer.git\n\tbranch = master\n[submodule \"subrepos/composer\"]\n\tpath = subrepos/composer\n\turl = https://github.com/coronalabs/framework-composer.git\n\tbranch = master\n[submodule \"external/openal-soft\"]\n\tpath = external/openal-soft\n\turl = https://github.com/coronalabs/openal-soft.git\n\tbranch = master\n[submodule \"external/MetalANGLE\"]\n\tpath = external/MetalANGLE\n\turl = https://github.com/coronalabs/metalangle.git\n\tbranch = Solar2D-Changes-Reverted\n"
        },
        {
          "name": "CLA.md",
          "type": "blob",
          "size": 6.056640625,
          "content": "Solar2D Contributor License Agreement (\"Agreement\")\n------------------------------------------------------------------------\n#### http://www.Solar2D.com/ (v 1.0)\n\n\n   In order to clarify the intellectual property license\n   granted with Contributions from any person or entity, Solar2D\n   must have a Contributor License Agreement (CLA) on file that has been\n   signed by each Contributor, indicating agreement to the license terms\n   below. This license is for your protection as a Contributor as well\n   as the protection of Solar2D and its users; it does not change\n   your rights to use your own Contributions for any other purpose.\n\n   This version of the Agreement allows an entity (the \"Corporation\") to\n   submit Contributions to Solar2D, to authorize Contributions \n   submitted by its designated employees to Solar2D, and to grant \n   copyright and patent licenses thereto.\n\n You accept and agree to the following terms and conditions for Your\npresent and future Contributions submitted to Solar2D. Except\nfor the license granted herein to Solar2D and recipients of\nsoftware distributed by Solar2D, You reserve all right, title,\nand interest in and to Your Contributions.\n1. Definitions.\n   \"You\" (or \"Your\") shall mean the copyright owner or legal entity\n   authorized by the copyright owner that is making this Agreement\n   with Solar2D. For legal entities, the entity making a\n   Contribution and all other entities that control, are controlled\n   by, or are under common control with that entity are considered to\n   be a single Contributor. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n   \"Contribution\" shall mean any original work of authorship,\n   including any modifications or additions to an existing work, that\n   is intentionally submitted by You to Solar2D for inclusion\n   in, or documentation of, any of the products owned or managed by\n   Solar2D (the \"Work\"). For the purposes of this definition,\n   \"submitted\" means any form of electronic, verbal, or written\n   communication sent to Solar2D or its representatives,\n   including but not limited to communication on electronic mailing\n   lists, source code control systems, and issue tracking systems that\n   are managed by, or on behalf of, Solar2D for the purpose of\n   discussing and improving the Work, but excluding communication that\n   is conspicuously marked or otherwise designated in writing by You\n   as \"Not a Contribution.\"\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this Agreement, You hereby grant to Solar2D and to\n   recipients of software distributed by Solar2D a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare derivative works of,\n   publicly display, publicly perform, sublicense, and distribute Your\n   Contributions and such derivative works.\n3. Grant of Patent License. Subject to the terms and conditions of\n   this Agreement, You hereby grant to Solar2D and to\n   recipients of software distributed by Solar2D a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have\n   made, use, offer to sell, sell, import, and otherwise transfer the\n   Work, where such license applies only to those patent claims\n   licensable by You that are necessarily infringed by Your\n   Contribution(s) alone or by combination of Your Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If any\n   entity institutes patent litigation against You or any other entity\n   (including a cross-claim or counterclaim in a lawsuit) alleging\n   that your Contribution, or the Work to which you have contributed,\n   constitutes direct or contributory patent infringement, then any\n   patent licenses granted to that entity under this Agreement for\n   that Contribution or Work shall terminate as of the date such\n   litigation is filed.\n4. You represent that you are legally entitled to grant the above\n   license. If your employer(s) has rights to intellectual property\n   that you create that includes your Contributions, you represent\n   that you have received permission to make Contributions on behalf\n   of that employer, that your employer has waived such rights for\n   your Contributions to Solar2D, or that your employer has\n   executed a separate Corporate CLA with Solar2D.\n5. You represent that each of Your Contributions is Your original\n   creation (see section 7 for submissions on behalf of others).  You\n   represent that Your Contribution submissions include complete\n   details of any third-party license or other restriction (including,\n   but not limited to, related patents and trademarks) of which you\n   are personally aware and which are associated with any part of Your\n   Contributions.\n6. You are not expected to provide support for Your Contributions,\n   except to the extent You desire to provide support. You may provide\n   support for free, for a fee, or not at all. Unless required by\n   applicable law or agreed to in writing, You provide Your\n   Contributions on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n   OF ANY KIND, either express or implied, including, without\n   limitation, any warranties or conditions of TITLE, NON-\n   INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.\n7. Should You wish to submit work that is not Your original creation,\n   You may submit it to Solar2D separately from any\n   Contribution, identifying the complete details of its source and of\n   any license or other restriction (including, but not limited to,\n   related patents, trademarks, and license agreements) of which you\n   are personally aware, and conspicuously marking the work as\n   \"Submitted on behalf of a third-party: [named here]\".\n8. You agree to notify Solar2D of any facts or circumstances of\n   which you become aware that would make these representations\n   inaccurate in any respect.\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.2080078125,
          "content": "﻿cmake_minimum_required(VERSION 3.4.1)\n\nproject(\"Solar2D\")\n\n# Set version\n\nif (DEFINED ENV{BUILD_NUMBER})\n  set(BUILD_NUMBER $ENV{BUILD_NUMBER})\nelse()\n  set(BUILD_NUMBER 9999)\nendif()\nif (DEFINED ENV{YEAR})\n  set(YEAR $ENV{YEAR})\nelse()\n  set(YEAR 2100)\nendif()\n\nmessage(\"YEAR: \" ${YEAR})\nmessage(\"BUILD_NUMBER: \" ${BUILD_NUMBER})\n\n# Set a default build type if none was specified\n\nset(default_build_type \"Release\")\nif (NOT CMAKE_BUILD_TYPE)\n  message(STATUS \"Setting build type to '${default_build_type}' as none was specified.\")\n\n  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n\n  # Set the possible values of build type for cmake-gui\n  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n\n\nget_filename_component(CORONA_ROOT \"${CMAKE_SOURCE_DIR}\" ABSOLUTE)\nmessage(\"CORONA_ROOT: \" ${CORONA_ROOT})\n\nif(CMAKE_HOST_SYSTEM_NAME MATCHES \"Linux\")\n\tset(ALSOFT_NATIVE_TOOLS_PATH \"${CORONA_ROOT}/bin/linux\" CACHE STRING \"Path to prebuilt native tools (leave blank to auto-build)\" FORCE)\n\tinclude(platform/linux/CMakeList.txt)\nelse()\n\tmessage(FATAL_ERROR \"CMakeList.txt is not ported to current OS: ${CMAKE_HOST_SYSTEM_NAME}\")\nendif()\n\n"
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 2.5615234375,
          "content": "﻿{\n  \"configurations\": [\n    {\n      \"name\": \"x64-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [ \"msvc_x64_x64\" ],\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\"\n    },\n    {\n      \"name\": \"Linux-GCC-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"cmakeExecutable\": \"cmake\",\n      \"remoteCopySourcesExclusionList\": [ \".vs\", \".git\", \"out\" ],\n      \"cmakeCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"linux_x64\" ],\n      \"remoteMachineName\": \"${defaultRemoteMachineName}\",\n      \"remoteCMakeListsRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/src\",\n      \"remoteBuildRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/out/build/${name}\",\n      \"remoteInstallRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/out/install/${name}\",\n      \"remoteCopySources\": true,\n      \"rsyncCommandArgs\": \"-a --delete --delete-excluded --include-from=platform/linux/CMakeRsyncLinuxLists.txt\",\n      \"remoteCopyBuildOutput\": false,\n      \"remoteCopySourcesMethod\": \"rsync\",\n      \"buildCommandArgs\": \"-j4\"\n    },\n    {\n      \"name\": \"WSL-GCC-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"buildRoot\": \"${projectDir}\\\\out\\\\build\\\\${name}\",\n      \"installRoot\": \"${projectDir}\\\\out\\\\install\\\\${name}\",\n      \"cmakeExecutable\": \"cmake\",\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"linux_x64\" ],\n      \"wslPath\": \"${defaultWSLPath}\"\n    },\n    {\n      \"name\": \"Linux-GCC-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"cmakeExecutable\": \"cmake\",\n      \"remoteCopySourcesExclusionList\": [ \".vs\", \".git\", \"out\" ],\n      \"cmakeCommandArgs\": \"\",\n      \"buildCommandArgs\": \"-j4\",\n      \"ctestCommandArgs\": \"\",\n      \"inheritEnvironments\": [ \"linux_x64\" ],\n      \"remoteMachineName\": \"${defaultRemoteMachineName}\",\n      \"remoteCMakeListsRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/src\",\n      \"remoteBuildRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/out/build/${name}\",\n      \"remoteInstallRoot\": \"$HOME/.vs/${projectDirName}/${workspaceHash}/out/install/${name}\",\n      \"remoteCopySources\": true,\n      \"rsyncCommandArgs\": \"-a --delete --delete-excluded --include-from=platform/linux/CMakeRsyncLinuxLists.txt\",\n      \"remoteCopyBuildOutput\": false,\n      \"remoteCopySourcesMethod\": \"rsync\",\n      \"variables\": []\n    }\n  ]\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2783203125,
          "content": "# Solar2D Community Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at _conduct@coronalabs.com_. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.84765625,
          "content": "\n# Contributing to Solar2D\n\nTo contribute code to Solar2D you will need to fork this repository,\ncommit and push your changes to it and then create a Github pull request\nwith your changes.\n\nThen your changes will be reviewed and possibly accepted to Solar2D and\nincluded in next daily build.\n\nNote, that when submitting code to Solar2D you will have to accept the\nContributor License Agreement (CLA). This is necessary due to nature of Solar2D's\nlicensing model. In general terms, you are granting to Solar2D a copyright and a \npatent license on your contributed code, allowing Solar2D to use it for its projects.\nYou will keep being the only owner of such copyright and patent.\nCopy of CLA can be found in [CLA.md](CLA.md). You will be asked to sign CLA with your\nGithub account when submitting each pull request.\n\nMake sure you have the rights to the submitted code. Meaning you wrote it yourself. If code\nrequires attribution, make sure to provide it.\n\n## General guidelines for contributing\n\nIf you design a new API or make changes to an existing one, remember thant tens of thousands of\ngames and apps rely on the existing API design. Our API is a contract between Solar2D and it's\nusers, we do not want to break it unless absolutely necessary. If you're designing a new\nAPI, try to follow existing naming conventions for names and parameters.\n\nMake sure to test your changes, preferably on several platforms.\n\n## File headers\n\nAll source code files in Solar2D must have a header with some information and license.\nIf you're adding a file, make sure to include header in it. File headers are available in\n[FILE_HEADER.md](FILE_HEADER.md).\n\n## Communication\n\nFeel free to join our [Discord](https://discord.gg/Abf5V9G) #open-source channel or [Forums](https://forums.solar2d.com/c/corona/open-source/119/) to get more information on Solar2D code, tips, how to get started and discussion.\n"
        },
        {
          "name": "FILE_HEADER.md",
          "type": "blob",
          "size": 0.845703125,
          "content": "# Corona File headers\n\nCorona source code files should have following headers\n\n# C/C++/Java\n\n```c\n//////////////////////////////////////////////////////////////////////////////\n//\n// This file is part of the Solar2D game engine.\n// For overview and more information on licensing please refer to README.md \n// Home page: https://github.com/coronalabs/corona\n// Contact: support@Solar2D.com\n//\n//////////////////////////////////////////////////////////////////////////////\n```\n\n# Lua\n\n```lua\n------------------------------------------------------------------------------\n--\n-- This file is part of the Solar2D game engine.\n-- For overview and more information on licensing please refer to README.md \n-- Home page: https://github.com/coronalabs/corona\n-- Contact: support@Solar2D.com\n--\n------------------------------------------------------------------------------\n```"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2020-2021 Solar2D.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.205078125,
          "content": "# Solar2D Game Engine\nDownload the latest build from the [Releases](https://github.com/coronalabs/corona/releases) page and join the community on [Discord](https://discord.gg/Abf5V9G) and the [forums](https://forums.solar2d.com/).\n\n## Rebranded Corona SDK\n> Simple to learn and use, completely free and open source 2D game engine.\n\n![Solar2D Logo](logo.png)\n\n## Easy-to-learn & powerful\nSolar2D is a cross-platform framework which is ideal for rapidly creating apps and games for mobile devices, TV, desktop systems and HTML5. That means you can create your project once and publish it to multiple devices, including Apple iPhone and iPad, Android phones and tablets, Amazon Fire, Mac Desktop, Windows Desktop, Linux, HTML5 and even connected TVs such as Apple TV, Amazon Fire TV, and Android TV.\n\n## Benefits of usage Solar2D\n* Free for everybody – Enterprise features for every developer.\n* The easiest development tool for 2D games and mobile applications.\n* Solar2D allows creating apps easily, up to 10 times faster than other frameworks. \n* Supported by a detailed documentation system. \n* Write the code once, run it many different places – Solar2D supports all major mobile platforms.\n* Constantly growing pool of first-party and community provided plugins and ready-to-go app assets.\n* A vibrant community of both application and game developers.\n* Simulator, which runs the app directly on PC/Mac, simplifies the prototyping process and helps quickly test ideas and concepts.\n* A logical and consistent API that covers over 1000 functions and allows to get things up and running very fast.\n\n## Feature highlights\n\n### Simulator and Live Builds\nSolar2D speeds up the development process - update your code, save the changes, and instantly see the results in our instant-update Simulator. When you're ready to test on real devices, build and deploy your app just once and then see code/assets, update automatically, all over your local network. Just like magic.\n\n### Lua-based\nLua is an open source scripting language designed to be lightweight, fast, yet also powerful. Lua is currently the leading scripting language in games and has been utilized in Roblox, The Elder Scrolls Online, Don't Starve, World of Warcraft ™, Angry Birds ™, Civilization ™, and [many other popular franchises.](https://en.wikipedia.org/wiki/Category:Lua_(programming_language)-scripted_video_games)\n\n### Use with your favorite text editor\nYou can use Sublime Text([Editor](https://github.com/coronalabs/CoronaSDK-SublimeText#installation-instructions)), Atom([autocomplete-corona](https://atom.io/packages/autocomplete-corona)), Visual Studio Code([Solar2d-companion](https://marketplace.visualstudio.com/items?itemName=M4adan.solar2d-companion)), ZeroBrane Studio and many others.\n\n### Plugins for all needs\nSelect from numerous plugins which extend the Solar2D core for features like in-app advertising, analytics, media, and much more. A vast variety of plugins is available via [Solar2D free directory](https://plugins.solar2d.com/) or third party stores, like [Solar2D Marketplace](https://solar2dmarketplace.com/) and [Solar2D Plugins](https://www.solar2dplugins.com/).\n\n### Call any native library\nIf it’s not already in the core or supported via a plugin, you can call any native (C/C++/Obj-C/Java) library or API using Solar2D Native. It also allows to easily package your code as a plugin.\n\n### Cross-platform\nDevelop for mobile, desktop, and connected TV devices with just one code base.\n\n## Installation\nThe easiest and recommended way to get started with Solar2D is to download binary distribution from the [releases](https://github.com/coronalabs/corona/releases) page.\n\n\n### API documentation and guides\nExhaustive Solar2D API documentation, as well as getting started and more advanced guides are available on [docs.coronalabs.com](https://docs.coronalabs.com).\n\n## Source Code and licensing\nSolar2D is licensed under [MIT](LICENSE) open source license.\n\nThis license gives you the full rights to customize the engine and distribute built apps on your own terms. \n\nNote that Solar2D incorporates many libraries, both [third-party](sdk/dmg/Corona3rdPartyLicenses.txt) and made by Solar2D developers. They may have different licenses.\n\n\n## Contributing\n\nIf you are willing to improve Solar2D by contributing code, fork this repository and create a pull request with desired improvements. The project uses [git submodules](https://git-scm.com/book/en/Git-Tools-Submodules), so to clone the whole source code tree run\n\n```sh\ngit clone --recursive https://github.com/coronalabs/corona.git\n```\n\nDue to the open source nature of Solar2D distribution, all contributors would have to sign a simple Contributor License Agreement (CLA) to ensure that their code can be part of Solar2D ecosystem. For more details see [CONTRIBUTING.md](CONTRIBUTING.md).\n\nEntry points for each platform are located in the `platform` directory. Refer to README.md files in its subdirectories.\n\n## Governance and Code of Conduct\nSolar2D is maintained by community, with principal developer [shchvova](https://github.com/shchvova). Our mission is to make Solar2D the best game engine ever.\n\nTo participate in the Solar2D community or development you must follow the Solar2D Community Code of Conduct (see [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md))\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "librtt",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 80.9130859375,
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "simulator-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "subrepos",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}