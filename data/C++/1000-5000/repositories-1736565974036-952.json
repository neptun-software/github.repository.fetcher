{
  "metadata": {
    "timestamp": 1736565974036,
    "page": 952,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/phxqueue",
      "stars": 1904,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.4140625,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\nObjCBinPackProtocolList: Never\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 4\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nRawStringFormats:\n  - Language:        TextProto\n    Delimiters:\n      - pb\n      - PB\n      - proto\n      - PROTO\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        8\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3662109375,
          "content": "# Directories\nbin/\nlib/\nbuild/\ndata/\nlog/\n\n# Protocol Buffers\n*.pb.cc\n*.pb.h\n\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# gtags\nGPATH\nGRTAGS\nGTAGS"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.6923828125,
          "content": "[submodule \"third_party/colib\"]\n\tpath = third_party/colib\n\turl = https://github.com/Tencent/libco\n[submodule \"third_party/protobuf\"]\n\tpath = third_party/protobuf\n\turl = https://github.com/google/protobuf\n[submodule \"third_party/gflags\"]\n\tpath = third_party/gflags\n\turl = https://github.com/gflags/gflags\n[submodule \"third_party/glog\"]\n\tpath = third_party/glog\n\turl = https://github.com/google/glog\n[submodule \"third_party/leveldb\"]\n\tpath = third_party/leveldb\n\turl = https://github.com/google/leveldb\n[submodule \"third_party/phxpaxos\"]\n\tpath = third_party/phxpaxos\n\turl = https://github.com/Tencent/phxpaxos\n[submodule \"third_party/phxrpc\"]\n\tpath = third_party/phxrpc\n\turl = https://github.com/Tencent/phxrpc\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1669921875,
          "content": "sudo: required\ndist: trusty\n\nlanguage: cpp\ncompiler: g++\ngit:\n    submodules: false\nscript:\n    - bash build.sh\nnotifications:\n    email: true\nbranches:\n  only:\n  - /.*/\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.46875,
          "content": "FROM buildpack-deps\n\nCOPY . /phxqueue\n\n\nRUN apt-get update \\\n        && apt-get install -y cmake --no-install-recommends \\\n        && apt-get install -y python-pip \\\n        && pip install protobuf \\\n        && cd /phxqueue \\\n\t&& ./build.sh \\\n\t&& find . -name \"*.o\" | xargs rm\n\nENV WORK_DIR=/phxqueue\n\nWORKDIR $WORK_DIR\n\nVOLUME $WORK_DIR/data\n\nENV PATH=\"$WORK_DIR/bin:$PATH\"\n\n#COPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n#EXPOSE 5100 5200 5300\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 13.0703125,
          "content": "Tencent is pleased to support the open source community by making PhxQueue available.\nCopyright (C) 2017 THL A29 Limited, a Tencent company.  All rights reserved.\nIf you have downloaded a copy of the PhxQueue binary from Tencent, please note that the PHXQUEUE binary is licensed under the BSD 3-Clause License.\nIf you have downloaded a copy of PhxQueue source code from Tencent, please note that PhxQueue source code is licensed under the BSD 3-Clause License, except for the third-party components listed below which are subject to different license terms.  Your integration of PhxQueue into your own projects may require compliance with the BSD 3-Clause License, as well as the other licenses applicable to the third-party components included within PhxQueue.\nA copy of the BSD 3-Clause License is included in this file.\n\nOther dependencies and licenses:\n\nOpen Source Software Licensed Under the Apache License, Version 2.0:\n----------------------------------------------------------------------------------------\n1. Libco\nCopyright (c) 2012, The Android Open Source Project\n\nOpen Source Software Licensed Under BSD-3:\n----------------------------------------------------------------------------------------\n1. protobuf v. 3.3.0\nCopyright (c) 2014, Google Inc.\n2. glog v.0.3.5\nCopyright (c) 2008, Google Inc.\nCopyright (c) 2003-2008, Jouni Malinen <j@w1.fi> and contributors\n3. leveldb v. 1.20\nCopyright (c) 2011 The LevelDB Authors.\n\nTerms of the Apache License, Version 2.0:\n--------------------------------------------------------------------\nApache License\n\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n“License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, “control” means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n“You” (or “Your”) shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n“Source” form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n“Object” form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n“Work” shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n“Derivative Works” shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n“Contribution” shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, “submitted” means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as “Not a Contribution.”\n\n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\na) \tYou must give any other recipients of the Work or Derivative Works a copy of this License; and\n\nb) \tYou must cause any modified files to carry prominent notices stating that You changed the files; and\n\nc) \tYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n\nd) \tIf the Work includes a “NOTICE” text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work\nTo apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nTerms of the BSD 3-Clause License:\n--------------------------------------------------------------------\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of [copyright holder] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.478515625,
          "content": "include makefile.mk\n\n\nLIB_TARGETS := phxqueue_phxrpc/test/libphxqueue_phxrpc_test.a \\\n\t\t\t   phxqueue_phxrpc/consumer/libphxqueue_phxrpc_consumer.a \\\n\t\t\t   phxqueue_phxrpc/producer/libphxqueue_phxrpc_producer.a \\\n\t\t\t   phxqueue_phxrpc/scheduler/libphxqueue_phxrpc_scheduler.a \\\n\t\t\t   phxqueue_phxrpc/plugin/libphxqueue_phxrpc_plugin.a \\\n\t\t\t   phxqueue_phxrpc/comm/libphxqueue_phxrpc_comm.a \\\n\t\t\t   phxqueue/test/libphxqueue_test.a \\\n\t\t\t   phxqueue/consumer/libphxqueue_consumer.a \\\n\t\t\t   phxqueue/store/libphxqueue_store.a \\\n\t\t\t   phxqueue/lock/libphxqueue_lock.a \\\n\t\t\t   phxqueue/scheduler/libphxqueue_scheduler.a \\\n\t\t\t   phxqueue/producer/libphxqueue_producer.a \\\n\t\t\t   phxqueue/config/libphxqueue_config.a \\\n\t\t\t   phxqueue/comm/libphxqueue_comm.a \\\n\t\t\t   phxqueue/plugin/libphxqueue_plugin.a\n\nBIN_TARGETS := phxqueue/test/test_config_main phxqueue/test/test_consumer_main phxqueue/test/test_lock_main phxqueue/test/test_plugin_main \\\n\t\t\t   phxqueue/test/test_producer_main phxqueue/test/test_scheduler_main phxqueue/test/test_store_main phxqueue/test/test_log_main phxqueue/test/test_notifierpool_main \\\n\t\t\t   phxqueue/test/test_consistent_hash_main \\\n\t\t\t   phxqueue_phxrpc/test/test_load_config_main phxqueue_phxrpc/test/test_rpc_config_main \\\n\t\t\t   phxqueue_phxrpc/test/consumer_main phxqueue_phxrpc/test/producer_benchmark_main \\\n\t\t\t   phxqueue_phxrpc/test/test_producer_echo_main phxqueue_phxrpc/test/config_check_main \\\n\t\t\t   phxqueue_phxrpc/test/test_selector_main phxqueue_phxrpc/test/test_get_main\n\nSUB_MAKE_LIB_TARGETS := phxqueue_phxrpc/app/store/libstore_client.a \\\n\t\t\t\t\t\tphxqueue_phxrpc/app/lock/liblock_client.a \\\n\t\t\t\t\t\tphxqueue_phxrpc/app/scheduler/libscheduler_client.a\n\nSUB_MAKE_BIN_TARGETS := phxqueue_phxrpc/app/store/store_main phxqueue_phxrpc/app/store/store_tool_main \\\n\t\t\t\t\t\tphxqueue_phxrpc/app/lock/lock_main phxqueue_phxrpc/app/lock/lock_tool_main \\\n\t\t\t\t\t\tphxqueue_phxrpc/app/scheduler/scheduler_main phxqueue_phxrpc/app/scheduler/scheduler_tool_main\n\n\ndefine LIB_GEN\n\t$(eval $(1)_SRCS := $(shell find $(dir $(1)) -regex '.*\\.\\(c\\|cpp\\)' | grep -aiv '_main.cpp'))\n\t$(eval $(1)_PROTOS := $(shell find $(dir $(1)) -regex '.*\\.proto'))\n\t$(eval PROTO_SRCS += $(addsuffix .pb.cc,$(basename $($(1)_PROTOS))))\n\t$(eval PROTO_SRCS += $(addsuffix .pb.h,$(basename $($(1)_PROTOS))))\n\t$(eval $(1)_OBJS := $(addsuffix .pb.o,$(basename $($(1)_PROTOS))))\n\t$(eval $(1)_OBJS += $(addsuffix .o,$(basename $($(1)_SRCS))))\n\t$(eval LIB_OBJS += $($(1)_OBJS))\nendef\n\ndefine BIN_GEN\n\t$(eval BIN_OBJS += $(addsuffix .o,$(1)))\nendef\n\nIGNORE := $(foreach lib,$(LIB_TARGETS),$(call LIB_GEN,$(lib)))\nIGNORE := $(foreach bin,$(BIN_TARGETS),$(call BIN_GEN,$(bin)))\n\n\nall: pb $(LIB_TARGETS) $(SUB_MAKE_LIB_TARGETS) install_lib $(BIN_TARGETS) $(SUB_MAKE_BIN_TARGETS)  install_bin build_dir\n\npb: $(PROTO_SRCS)\n\t$(foreach sub_make,$(SUB_MAKE_LIB_TARGETS),make -C $(dir $(sub_make)) pb;)\n\t$(foreach sub_make,$(SUB_MAKE_BIN_TARGETS),make -C $(dir $(sub_make)) pb;)\n\n$(LIB_TARGETS): $$($$@_OBJS)\n\t$(AR) $@ $^\n\n$(SUB_MAKE_LIB_TARGETS):\n\tmake -C $(dir $@) $(notdir $@)\n\n$(SUB_MAKE_BIN_TARGETS):\n\tmake -C $(dir $@) $(notdir $@)\n\ninstall_lib:\n\tmkdir -p lib\n\tcp $(LIB_TARGETS) lib/\n\tcp $(SUB_MAKE_LIB_TARGETS) lib/\n\t$(AR) lib/libphxqueue.a $(LIB_OBJS)\n\ninstall_bin:\n\tmkdir -p bin\n\tcp $(BIN_TARGETS) bin/\n\tcp $(SUB_MAKE_BIN_TARGETS) bin/\n\nbuild_dir:\n\tmkdir -p data/lock.0\n\tmkdir -p data/lock.1\n\tmkdir -p data/lock.2\n\tmkdir -p data/store.0\n\tmkdir -p data/store.1\n\tmkdir -p data/store.2\n\tmkdir -p log/lock.0\n\tmkdir -p log/lock.1\n\tmkdir -p log/lock.2\n\tmkdir -p log/store.0\n\tmkdir -p log/store.1\n\tmkdir -p log/store.2\n\tmkdir -p log/consumer.0\n\tmkdir -p log/consumer.1\n\tmkdir -p log/consumer.2\n\tmkdir -p log/scheduler.0\n\tmkdir -p log/scheduler.1\n\tmkdir -p log/scheduler.2\n\n\nclean:\n\trm -rf $(PROTO_SRCS) $(LIB_OBJS) $(BIN_OBJS) $(LIB_TARGETS) $(SUB_MAKE_LIB_TARGETS) $(BIN_TARGETS) $(SUB_MAKE_BIN_TARGETS)\n\t$(foreach sub_make,$(SUB_MAKE_LIB_TARGETS),make -C $(dir $(sub_make)) clean;)\n\t$(foreach sub_make,$(SUB_MAKE_BIN_TARGETS),make -C $(dir $(sub_make)) clean;)\n\n.PHONY: all install_lib install_bin clean $(SUB_MAKE_LIB_TARGETS) $(SUB_MAKE_BIN_TARGETS)\n\n\n\n%.pb.o: %.pb.cc\n\t$(CXX) $(CXXFLAGS) $(INC_COMM) -I$(PHXQUEUE_BASE_DIR)/$(dir $^) -c $< -o $@\n\n%.o: %.c\n\t$(CXX) $(CXXFLAGS) $(INC_COMM) -I$(PHXQUEUE_BASE_DIR)/$(dir $^) -c $< -o $@\n\n%.o: %.cpp\n\t$(CXX) $(CXXFLAGS) $(INC_COMM) -I$(PHXQUEUE_BASE_DIR)/$(dir $^) -c $< -o $@\n\n%.pb.h: %.pb.cc\n\n%.pb.cc: %.proto\n\t$(PROTOBUF_BIN_DIR)/protoc $(PBFLAGS) $^\n\n$(BIN_TARGETS): $$@.o $(LIB_TARGETS) $(SUB_MAKE_LIB_TARGETS)\n\t$(LINKER) $(CXXFLAGS) $^ $(LDFLAGS) -o $@\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.880859375,
          "content": "# PhxQueue\n\n[简体中文README](README.zh_cn.md)\n\nPhxQueue is a high-availability, high-throughput and highly reliable distributed queue based on the Paxos protocol. It guarantees At-Least-Once Delivery. It is widely used in WeChat for WeChat Pay, WeChat Media Platform, and many other important businesses.\n\nAuthors: Junjie Liang, Tao He, Haochuan Cui, Qing Huang and Jiatao Xu\n\nContact us: phxteam@tencent.com\n\n[![Build Status](https://travis-ci.org/Tencent/phxqueue.svg?branch=master)](https://travis-ci.org/Tencent/phxqueue)\n\n## Features\n\n*\tGuaranteed delivery with strict real-time reconciliation\n\n*\tServer-side batch enqueue\n\n*\tStrictly ordered dequeue\n\n*\tMultiple consumer groups\n\n*\tDequeue speed limits\n\n*\tDequeue replays\n\n*\tConsumer load balancing\n\n*\tAll modules are scalable\n\n*\tMulti-region deployment for Store or Lock nodes\n\n## Building automatically\n\n```sh\ngit clone https://github.com/Tencent/phxqueue\ncd phxqueue/\nbash build.sh\n```\n\nNow that all modules are built, you can continue to [quickstart](#quickstart).\n\n## Building manually\n\n### Download PhxQueue source\n\nDownload the [phxqueue.tar.gz](https://github.com/Tencent/phxqueue/tarball/master) and un-tar it to `$PHXQUEUE_DIR`.\n\n### Install dependencies\n\n*\tPrepare the `$DEP_PREFIX` diectory for dependency installation:\n\n\t```sh\n\texport $DEP_PREFIX='/your/directory/for/dependency'\n\t```\n\n*\tProtocol Buffers and glog\n\n\tBuild [Protocol Buffers](https://github.com/google/protobuf/releases) and [glog](https://github.com/google/glog/releases) with `./configure CXXFLAGS=-fPIC --prefix=$DEP_PREFIX`. Then create symlinks:\n\n\t```sh\n\trm -r $PHXQUEUE_DIR/third_party/protobuf/\n\trm -r $PHXQUEUE_DIR/third_party/glog/\n\tln -s $DEP_PREFIX $PHXQUEUE_DIR/third_party/protobuf\n\tln -s $DEP_PREFIX $PHXQUEUE_DIR/third_party/glog\n\t```\n\n*\tLevelDB\n\n\tBuild [LevelDB](https://github.com/google/leveldb/releases) in `$PHXQUEUE_DIR/third_party/leveldb/` and `ln -s out-static lib`.\n\n*\tPhxPaxos and PhxRPC\n\n\tBuild [PhxPaxos](https://github.com/Tencent/phxpaxos/releases) in `$PHXQUEUE_DIR/third_party/phxpaxos/`. Build [PhxRPC](https://github.com/Tencent/phxrpc/releases) in `$PHXQUEUE_DIR/third_party/phxrpc/`.\n\n*\tlibco\n\n\tGit clone [libco](https://github.com/Tencent/libco) to `$PHXQUEUE_DIR/third_party/colib/`.\n\n### Compile PhxQueue\n\n```sh\ncd $PHXQUEUE_DIR/\nmake\n```\n\n## PhxQueue distribution\n\nPhxQueue is structured like this:\n\n```\nphxqueue/ ................. The PhxQueue root directory\n├── bin/ .................. Generated binary files\n├── etc/ .................. Example configuration files\n├── lib/ .................. Generated library files\n├── phxqueue/ ............. PhxQueue source files\n├── phxqueue_phxrpc/ ...... PhxQueue with PhxRPC implementation\n└── ...\n```\n\nthe output files are located in `bin/` and `lib/`, while the sample configure files are located in `etc/`.\n\n## Quickstart\n\nThe built PhxQueue is ready to run simple demos.\n\n### Preparing the setup\n\nPhxQueue accesses multiple files at the same time. \nMake sure to set high enough (> 4000) open file limit with `ulimit -Sn` or `ulimit -n`.\n\n### Starting the Store nodes\n\nStart 3 Store nodes (add `-d` if run as daemon) as shown bellow:\n\n```sh\nbin/store_main -c etc/store_server.0.conf\nbin/store_main -c etc/store_server.1.conf\nbin/store_main -c etc/store_server.2.conf\n```\n\nYou can follow the status of the nodes and check for any errors in these log files as shown bellow:\n\n```sh\nps -ef | grep store_main\ntail -f log/store.0/store_main.INFO\ntail -f log/store.1/store_main.INFO\ntail -f log/store.2/store_main.INFO\n```\n\nNOTICE: To run properly, at least 2 Store nodes need to be started, otherwise error log will occur below:\n\n```\nMASTERSTAT: ERR: Propose err. paxos_ret 404 ...\n```\n\n### Starting the Consumer nodes\n\nStart 3 Consumer nodes:\n\n```sh\nbin/consumer_main -c etc/consumer_server.0.conf\nbin/consumer_main -c etc/consumer_server.1.conf\nbin/consumer_main -c etc/consumer_server.2.conf\n```\n\nYou can follow the status of the nodes and check for any errors in these log files as shown bellow:\n\n```sh\nps -ef | grep consumer_main\ntail -f log/consumer.0/consumer_main.INFO\ntail -f log/consumer.1/consumer_main.INFO\ntail -f log/consumer.2/consumer_main.INFO\n```\n\n### Sending test requests\n\nNow that both Store and Consumer nodes have been deployed, you can use the benchmark tool \nto send some test requests:\n\n```sh\nbin/test_producer_echo_main\n```\n\nYou will get the output from test Producer:\n\n```sh\nproduce echo succeeded!\n```\n\nNow let's see the output of Consumer (only 1 of 3 Consumer nodes):\n\n```sh\nconsume echo succeeed! ...\n```\n\n### Running benchmarks\n\n```sh\nbin/producer_benchmark_main 10 5 5 10\n```\n\nWatch the Consumer log files:\n\n```sh\ntail -f log/consumer.0/consumer_main.INFO\ntail -f log/consumer.1/consumer_main.INFO\ntail -f log/consumer.2/consumer_main.INFO\n```\n\nThis is an example of the output you can expect from the Consumer log:\n\n```\nINFO: Dequeue ret 0 topic 1000 consumer_group_id 1 store_id 1 queue_id 44 size 1 prev_cursor_id 9106 next_cursor_id 9109\n```\n\n### Clearing data and logs created during testing\n\nWhile testing PhxQueue, a lot of logs and data is generated. Run `log/clear_log.sh` to clear logs and `data/clear_data.sh` to delete data.\nMake sure that you are running these commands against PhxQueue that does not hold any important data. \nCommands listed here will result in permanent data loss.\n\n## Quickstart with Docker\n\n[Quickstart with Docker](https://github.com/Tencent/phxqueue/wiki/Quickstart-with-Docker)\n\n## Deploy distributed PhxQueue\n\nNormally, each node should be deployed on separate machine. You need to configure `etc/*.conf`\nconfiguration files for each node.\n\nFiles located in directory `etc/`:\n\n```\nglobalconfig.conf .................Global config\ntopicconfig.conf ................. Topic config\nstoreconfig.conf ................. Store config\nconsumerconfig.conf ...............Consumer config\nschedulerconfig.conf ..............Scheduler config\nlockconfig.conf ...................Lock config\n```\n\nDeloy and modify these files on all target machines.\n\n### Deploying Store nodes\n\nStore is the storage module for queues, using the Paxos protocol for replica synchronization.\n\nDeploy these configs to 3 Store nodes and start each node:\n\n```sh\nbin/store_main -c etc/store_server.0.conf -d\nbin/store_main -c etc/store_server.1.conf -d\nbin/store_main -c etc/store_server.2.conf -d\n```\n\n### Deploying Consumer nodes\n\nConsumer pulls and consumes data from Store.\n\nDeploy these configs to 3 Consumer nodes and start each node:\n\n```sh\nbin/consumer_main -c etc/consumer_server.0.conf -d\nbin/consumer_main -c etc/consumer_server.1.conf -d\nbin/consumer_main -c etc/consumer_server.2.conf -d\n```\n\n### Deploying Lock nodes (Optional)\n\nLock is a distributed lock module. You can deploy Lock independently, providing a common distributed lock service.\n\nSet `skip_lock = 1` in `topicconfig.conf` to disable distributed Lock.\n\nDeploy these configs to 3 Lock nodes and start each node:\n\n```sh\nbin/lock_main -c etc/lock_server.0.conf -d\nbin/lock_main -c etc/lock_server.1.conf -d\nbin/lock_main -c etc/lock_server.2.conf -d\n```\n\n### Deploying Scheduler nodes (Optional)\n\nScheduler gathers global load information from Consumer for disaster recovery and load balancing. If no Scheduler is deployed, Consumer will be assigned according to weight configured.\n\nIf you want to deploy Scheduler, you will need to deploy Lock first.\n\nSet `use_dynamic_scale = 0` in `topicconfig.conf` to disable Scheduler.\n\nDeploy these configs to 3 Scheduler nodes and start each node:\n\n```sh\nbin/scheduler_main -c etc/scheduler_server.0.conf -d\nbin/scheduler_main -c etc/scheduler_server.1.conf -d\nbin/scheduler_main -c etc/scheduler_server.2.conf -d\n```\n\n### Viewing logs\n\nFor each node, there is a log file where you can trace current node status\nand errors. For example, you can access log file for Store node with ID 0 like shown bellow:\n\n```sh\ntail -f log/store.0/store_main.INFO\n```\n\n## Contribution\n\nPlease follow [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html) in PRs.\n\n"
        },
        {
          "name": "README.zh_cn.md",
          "type": "blob",
          "size": 7.4765625,
          "content": "# PhxQueue\n\nPhxQueue是微信开源的一款基于Paxos协议实现的高可用、高吞吐和高可靠的分布式队列，保证At-Least-Once Delivery。在微信内部广泛支持微信支付、公众平台等多个重要业务。\n\n作者：Junjie Liang, Tao He, Haochuan Cui, Qing Huang and Jiatao Xu\n\n联系我们：phxteam@tencent.com\n\n[![Build Status](https://travis-ci.org/Tencent/phxqueue.svg?branch=master)](https://travis-ci.org/Tencent/phxqueue)\n\n## 主要特性\n\n* 同步刷盘，入队数据绝对不丢，自带内部实时对账\n\n* 出入队严格有序\n\n* 多消费组\n\n* 出队限速\n\n* 出队重放\n\n* 所有模块均可平行扩展\n\n* 存储层批量刷盘、同步，保证高吞吐\n\n* 存储层支持同城多中心部署\n\n* 存储层自动容灾/接入均衡\n\n* 消费者自动容灾/负载均衡\n\n## 自动构建\n\n```sh\ngit clone https://github.com/Tencent/phxqueue\ncd phxqueue/\nbash build.sh\n```\n\n所有模块构建完成，现在可以[启动一个简单的PhxQueue](#启动一个简单的phxqueue)了。\n\n## 手动构建\n\n### 下载源代码\n\n下载[phxqueue.tar.gz](https://github.com/Tencent/phxqueue/tarball/master)并解压到`$PHXQUEUE_DIR`.\n\n### 安装第三方依赖\n\n*\t选择一个目录`$DEP_PREFIX`作为安装依赖的路径：\n\n\t```sh\n\texport $DEP_PREFIX='/your/directory/for/dependency'\n\t```\n\n*\tProtocol Buffers和glog\n\n\t编译[Protocol Buffers](https://github.com/google/protobuf/releases)和[glog](https://github.com/google/glog/releases)，注意必须使用编译参数`./configure CXXFLAGS=-fPIC --prefix=$DEP_PREFIX`。然后创建软链接：\n\n\t```sh\n\trm -r $PHXQUEUE_DIR/third_party/protobuf/\n\trm -r $PHXQUEUE_DIR/third_party/glog/\n\tln -s $DEP_PREFIX $PHXQUEUE_DIR/third_party/protobuf\n\tln -s $DEP_PREFIX $PHXQUEUE_DIR/third_party/glog\n\t```\n\n*\tLevelDB\n\n\t编译[LevelDB](https://github.com/google/leveldb/releases)到`$PHXQUEUE_DIR/third_party/leveldb/`，然后`ln -s out-static lib`。\n\n*\tPhxPaxos和PhxRPC\n\n\t编译[PhxPaxos](https://github.com/Tencent/phxpaxos/releases)到`$PHXQUEUE_DIR/third_party/phxpaxos/`；编译 [PhxRPC](https://github.com/Tencent/phxrpc/releases)到`$PHXQUEUE_DIR/third_party/phxrpc/`。\n\n*\tlibco\n\n\t使用Git clone [libco](https://github.com/Tencent/libco)到`$PHXQUEUE_DIR/third_party/colib/`。\n\n### 编译PhxQueue\n\n```sh\ncd $PHXQUEUE_DIR/\nmake\n```\n\n## PhxQueue项目目录结构\n\nPhxQueue的目录结构如下：\n\n```\nphxqueue/ .................... PhxQueue根目录\n├── bin/ ..................... 生成的二进制文件\n├── etc/ ..................... 配置文件模板\n├── lib/ ..................... 生成的库文件\n├── phxqueue/ ................ PhxQueue源文件\n├── phxqueue_phxrpc/ ......... PhxQueue的PhxRPC实现\n└── ...\n```\n\n输出文件在`bin/`和`lib/`，示例配置文件在`etc/`。\n\n## 启动一个简单的PhxQueue\n\n编译好的PhxQueue源代码目录可以直接运行简单的演示。\n\n### 准备\n\nPhxQueue需要同时使用多个文件描述符。请保证设置`ulimit -Sn`和`ulimit -n`到足够大（4000以上）。\n\n### 启动Store\n\n启动3个Store节点（加`-d`参数可以在后台运行）：\n\n```sh\nbin/store_main -c etc/store_server.0.conf\nbin/store_main -c etc/store_server.1.conf\nbin/store_main -c etc/store_server.2.conf\n```\n\n可以查看Store的日志：\n\n```sh\nps -ef | grep store_main\ntail -f log/store.0/store_main.INFO\ntail -f log/store.1/store_main.INFO\ntail -f log/store.2/store_main.INFO\n```\n\n注意: 正常运行需要启动至少2个Store节点，否则会出现如下错误日志：\n\n```\nMASTERSTAT: ERR: Propose err. paxos_ret 404 ...\n```\n\n### 启动Consumer\n\n启动3个Consumer节点：\n\n```sh\nbin/consumer_main -c etc/consumer_server.0.conf\nbin/consumer_main -c etc/consumer_server.1.conf\nbin/consumer_main -c etc/consumer_server.2.conf\n```\n\n可以查看Consumer的日志：\n\n```sh\nps -ef | grep consumer_main\ntail -f log/consumer.0/consumer_main.INFO\ntail -f log/consumer.1/consumer_main.INFO\ntail -f log/consumer.2/consumer_main.INFO\n```\n\n### 发送测试请求\n\n现在简单的PhxQueue已经部署完成！使用工具就可以发送测试请求了：\n\n```sh\nbin/test_producer_echo_main\n```\n\n你会看到Producer的输出：\n\n```sh\nproduce echo succeeded!\n```\n\n我们回到Consumer看输出（3个中只有1个会处理请求并输出）\n\n```sh\nconsume echo succeeed! ...\n```\n\n### 运行压测\n\n```sh\nbin/producer_benchmark_main 10 5 5 10\n```\n\n再次观看Consumer的日志：\n\n```sh\ntail -f log/consumer.0/consumer_main.INFO\ntail -f log/consumer.1/consumer_main.INFO\ntail -f log/consumer.2/consumer_main.INFO\n```\n\n你会发现有类似这样的Consumer消费出队请求的日志：\n\n```\nINFO: Dequeue ret 0 topic 1000 consumer_group_id 1 store_id 1 queue_id 44 size 1 prev_cursor_id 9106 next_cursor_id 9109\n```\n\n### 清理测试日志和数据\n\n在运行PhxQueue的过程中，会产生大量的日志和数据。运行`log/clear_log.sh`以清理日志，运行`data/clear_data.sh`以删除数据。删除前务必确认数据已经没有用。\n\n## 部署分布式的PhxQueue\n\n通常，每个节点应该部署在一台机器上，针对每个节点修改`etc/*.conf`中的内容。\n\n### 部署全局配置\n\n在`etc/`目录下，有以下这些文件\n\n```\nglobalconfig.conf .................全局配置\ntopicconfig.conf ................. 主题配置\nstoreconfig.conf ................. Store配置\nconsumerconfig.conf ...............Consumer配置\nschedulerconfig.conf ..............Scheduler配置\nlockconfig.conf ...................Lock配置\n```\n\n将这些文件部署在所有目标机器上，并做相应的修改。\n\n### 部署Store\n\nStore是队列的存储，使用Paxos协议作副本同步。\n\n将以下3个配置文件分别部署到3个Store节点并启动：\n\n```sh\nbin/store_main -c etc/store_server.0.conf -d\nbin/store_main -c etc/store_server.1.conf -d\nbin/store_main -c etc/store_server.2.conf -d\n```\n\n### 部署Consumer\n\nConsumer是队列的消费者，以批量拉取的方式从Store拉数据。\n\n将以下3个配置文件分别部署到3个Consumer节点并启动：\n\n```sh\nbin/consumer_main -c etc/consumer_server.0.conf -d\nbin/consumer_main -c etc/consumer_server.1.conf -d\nbin/consumer_main -c etc/consumer_server.2.conf -d\n```\n\n### 部署Lock（可选）\n\nLock是一个分布式锁，其接口设计非常通用化，使用者可以选择将Lock独立部署，提供通用分布式锁服务。部署Lock可以避免队列的重复消费。\n\n如果不使用Lock，`topicconfig.conf`中需要设置`skip_lock = 1`。\n\n将以下3个配置文件分别部署到3个Lock节点并启动：\n\n```sh\nbin/lock_main -c etc/lock_server.0.conf -d\nbin/lock_main -c etc/lock_server.1.conf -d\nbin/lock_main -c etc/lock_server.2.conf -d\n```\n\n### 部署Scheduler（可选）\n\nScheduler收集Consumer全局负载信息, 对Consumer做容灾和负载均衡。当使用者没有这方面的需求时，可以省略部署Scheduler，此时各Consumer根据配置权重决定与队列的处理关系。\n\nScheduler依赖Lock，如果需要部署Scheduler，请先部署Lock。\n\n如果不使用Scheduler，`topicconfig.conf`中需要设置`use_dynamic_scale = 0`。\n\n将以下3个配置文件分别部署到3个Scheduler节点并启动：\n\n```sh\nbin/scheduler_main -c etc/scheduler_server.0.conf -d\nbin/scheduler_main -c etc/scheduler_server.1.conf -d\nbin/scheduler_main -c etc/scheduler_server.2.conf -d\n```\n\n### 查看日志\n\n各个模块的日志位于'log/'下模块名子目录中，例如store的0号节点日志：\n\n```sh\ntail -f log/store.0/store_main.INFO\n```\n\n## 贡献\n\nPR代码请遵守[Google C++ 风格指南](https://google.github.io/styleguide/cppguide.html)。\n\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.1669921875,
          "content": "#!/bin/bash\n\nset -e  # exit immediately on error\nset -x  # display all commands\n\ngit submodule update --init --recursive\n\n(cd third_party && bash ./autoinstall.sh)\n\nmake\n\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 0.759765625,
          "content": "#!/bin/bash\n\nset -x\nulimit -Sn 4096\nulimit -n 4096\n\ncd /phxqueue/\nbin/store_main -d -c etc/store_server.0.conf\nbin/store_main -d -c etc/store_server.1.conf\nbin/store_main -d -c etc/store_server.2.conf\nbin/consumer_main -d -c etc/consumer_server.0.conf\nbin/consumer_main -d -c etc/consumer_server.1.conf\nbin/consumer_main -d -c etc/consumer_server.2.conf\nbin/lock_main -d -c etc/lock_server.0.conf\nbin/lock_main -d -c etc/lock_server.1.conf\nbin/lock_main -d -c etc/lock_server.2.conf\nbin/scheduler_main -d -c etc/scheduler_server.0.conf\nbin/scheduler_main -d -c etc/scheduler_server.1.conf\nbin/scheduler_main -d -c etc/scheduler_server.2.conf\n\n#ps -ef | grep store_main\n#ps -ef | grep lock_main\n#ps -ef | grep scheduler_main\n#ps -ef | grep consumer_main\n\nexec tail -f /dev/null\n\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile.mk",
          "type": "blob",
          "size": 2.4453125,
          "content": ".SECONDEXPANSION:\nwhere-am-i = $(abspath $(word $(words $(MAKEFILE_LIST)), $(MAKEFILE_LIST)))\n\nPHXQUEUE_BASE_DIR := $(dir $(call where-am-i))\n\nPREFIX := $(PHXQUEUE_BASE_DIR)\n\nPROTOBUF_BIN_DIR := $(PHXQUEUE_BASE_DIR)/third_party/protobuf/bin\n\nGFLAGS_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/gflags/include\nGLOG_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/glog/include\nPROTOBUF_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/protobuf/include\nLEVELDB_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/leveldb/include\nLIBCO_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/colib\nPHXRPC_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxrpc\nPHXPAXOS_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxpaxos/include\nPHXPAXOS_PLUGIN_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxpaxos/plugin/include\nPHXQUEUE_INCLUDE_DIR := $(PHXQUEUE_BASE_DIR)\n\nGFLAGS_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/gflags/lib\nGLOG_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/glog/lib\nPROTOBUF_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/protobuf/lib\nLEVELDB_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/leveldb/lib\nLIBCO_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/colib/lib\nPHXRPC_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxrpc/lib\nPHXPAXOS_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxpaxos/lib\nPHXPAXOS_PLUGIN_LIB_DIR := $(PHXQUEUE_BASE_DIR)/third_party/phxpaxos/plugin/lib\nPHXQUEUE_LIB_DIR := $(PHXQUEUE_BASE_DIR)/lib\n\n#BOOST_ROOT_DIR := $(PHXQUEUE_BASE_DIR)/third_party/boost\n\nCXX := g++\nAR := ar cruv\nLINKER := $(CXX)\nMAKE := make\n\nifeq ($(debug), y)\n# (1) Debug\n\tOPT := -g2\nelse\n# (2) Production\n\tOPT := -O2\nendif\n\nCXXFLAGS := -std=c++11 -Wall -D_REENTRANT -D_GNU_SOURCE -D_XOPEN_SOURCE -fPIC -m64 -I$(PROTOBUF_INCLUDE_DIR) $(OPT)\nLDFLAGS := -L$(PHXRPC_LIB_DIR) -lphxrpc \\\n           -L$(PHXPAXOS_LIB_DIR) -lphxpaxos \\\n\t\t   -L$(LEVELDB_LIB_DIR) -lleveldb \\\n\t\t   -L$(LIBCO_LIB_DIR) -lcolib \\\n\t\t   $(PROTOBUF_LIB_DIR)/libprotobuf.a \\\n\t\t   $(GLOG_LIB_DIR)/libglog.a \\\n\t\t   $(GFLAGS_LIB_DIR)/libgflags.a \\\n           -Wl,-Bdynamic \\\n\t\t   -lrt -lz -ldl -lpthread\n#PBFLAGS = --proto_path=$(PROTOBUF_INCLUDE_DIR) --proto_path=$(PHXQUEUE_INCLUDE_DIR) --cpp_out=.\nPBFLAGS := --proto_path=$(PROTOBUF_INCLUDE_DIR) --proto_path=. --cpp_out=.\nINC_COMM := -I$(PHXQUEUE_INCLUDE_DIR) -I$(GFLAGS_INCLUDE_DIR) -I$(GLOG_INCLUDE_DIR) -I$(PROTOBUF_INCLUDE_DIR) -I$(LEVELDB_INCLUDE_DIR) -I$(LIBCO_INCLUDE_DIR) -I$(PHXPAXOS_INCLUDE_DIR) \\\n\t\t-I$(PHXPAXOS_INCLUDE_DIR) -I$(PHXRPC_INCLUDE_DIR) -I$(PHXPAXOS_PLUGIN_INCLUDE_DIR)\n\n"
        },
        {
          "name": "phxqueue",
          "type": "tree",
          "content": null
        },
        {
          "name": "phxqueue_phxrpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}